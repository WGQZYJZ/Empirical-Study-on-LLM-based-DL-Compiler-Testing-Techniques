import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_16 = relay.var("var_16", dtype = "float64", shape = (12, 15, 2))#candidate|16|(12, 15, 2)|var|float64
uop_17 = relay.sigmoid(var_16.astype('float64')) # shape=(12, 15, 2)
uop_21 = relay.log2(uop_17.astype('float64')) # shape=(12, 15, 2)
bop_23 = relay.maximum(uop_21.astype('uint32'), relay.reshape(uop_17.astype('uint32'), relay.shape_of(uop_21))) # shape=(12, 15, 2)
output = bop_23
output2 = bop_23
func_26 = relay.Function([var_16,], output)
mod['func_26'] = func_26
mod = relay.transform.InferType()(mod)
mutated_mod['func_26'] = func_26
mutated_mod = relay.transform.InferType()(mutated_mod)
var_27 = relay.var("var_27", dtype = "float64", shape = (12, 15, 2))#candidate|27|(12, 15, 2)|var|float64
func_26_call = mutated_mod.get_global_var('func_26')
call_28 = func_26_call(var_27)
output = call_28
func_29 = relay.Function([var_27], output)
mutated_mod['func_29'] = func_29
mutated_mod = relay.transform.InferType()(mutated_mod)
var_50 = relay.var("var_50", dtype = "bool", shape = (5, 6, 4))#candidate|50|(5, 6, 4)|var|bool
var_51 = relay.var("var_51", dtype = "bool", shape = (5, 6, 4))#candidate|51|(5, 6, 4)|var|bool
bop_52 = relay.logical_and(var_50.astype('bool'), relay.reshape(var_51.astype('bool'), relay.shape_of(var_50))) # shape=(5, 6, 4)
output = bop_52
output2 = bop_52
func_61 = relay.Function([var_50,var_51,], output)
mod['func_61'] = func_61
mod = relay.transform.InferType()(mod)
var_62 = relay.var("var_62", dtype = "bool", shape = (5, 6, 4))#candidate|62|(5, 6, 4)|var|bool
var_63 = relay.var("var_63", dtype = "bool", shape = (5, 6, 4))#candidate|63|(5, 6, 4)|var|bool
output = func_61(var_62,var_63,)
func_64 = relay.Function([var_62,var_63,], output)
mutated_mod['func_64'] = func_64
mutated_mod = relay.transform.InferType()(mutated_mod)
var_87 = relay.var("var_87", dtype = "int16", shape = ())#candidate|87|()|var|int16
var_88 = relay.var("var_88", dtype = "int16", shape = (15, 16, 16))#candidate|88|(15, 16, 16)|var|int16
bop_89 = relay.less(var_87.astype('bool'), var_88.astype('bool')) # shape=(15, 16, 16)
func_61_call = mod.get_global_var('func_61')
func_64_call = mutated_mod.get_global_var('func_64')
var_94 = relay.var("var_94", dtype = "bool", shape = (120,))#candidate|94|(120,)|var|bool
call_93 = func_61_call(relay.reshape(var_94.astype('bool'), [5, 6, 4]), relay.reshape(var_94.astype('bool'), [5, 6, 4]), )
call_95 = func_61_call(relay.reshape(var_94.astype('bool'), [5, 6, 4]), relay.reshape(var_94.astype('bool'), [5, 6, 4]), )
func_61_call = mod.get_global_var('func_61')
func_64_call = mutated_mod.get_global_var('func_64')
call_101 = func_61_call(relay.reshape(call_93.astype('bool'), [5, 6, 4]), relay.reshape(var_94.astype('bool'), [5, 6, 4]), )
call_102 = func_61_call(relay.reshape(call_93.astype('bool'), [5, 6, 4]), relay.reshape(var_94.astype('bool'), [5, 6, 4]), )
uop_118 = relay.atan(var_88.astype('float32')) # shape=(15, 16, 16)
func_61_call = mod.get_global_var('func_61')
func_64_call = mutated_mod.get_global_var('func_64')
call_124 = func_61_call(relay.reshape(call_101.astype('bool'), [5, 6, 4]), relay.reshape(call_93.astype('bool'), [5, 6, 4]), )
call_125 = func_61_call(relay.reshape(call_101.astype('bool'), [5, 6, 4]), relay.reshape(call_93.astype('bool'), [5, 6, 4]), )
output = relay.Tuple([bop_89,call_93,var_94,call_101,uop_118,call_124,])
output2 = relay.Tuple([bop_89,call_95,var_94,call_102,uop_118,call_125,])
func_130 = relay.Function([var_87,var_88,var_94,], output)
mod['func_130'] = func_130
mod = relay.transform.InferType()(mod)
mutated_mod['func_130'] = func_130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_130_call = mutated_mod.get_global_var('func_130')
var_132 = relay.var("var_132", dtype = "int16", shape = ())#candidate|132|()|var|int16
var_133 = relay.var("var_133", dtype = "int16", shape = (15, 16, 16))#candidate|133|(15, 16, 16)|var|int16
var_134 = relay.var("var_134", dtype = "bool", shape = (120,))#candidate|134|(120,)|var|bool
call_131 = func_130_call(var_132,var_133,var_134,)
output = call_131
func_135 = relay.Function([var_132,var_133,var_134,], output)
mutated_mod['func_135'] = func_135
mutated_mod = relay.transform.InferType()(mutated_mod)
const_141 = relay.const([[[3,-8,3,-1,1,-3,10,-2,-1,-4,8,3,5],[8,6,-1,-9,7,-10,-6,-8,-7,-8,-9,-1,2],[-3,7,-6,7,-2,-1,9,2,-10,-2,7,7,10],[6,9,1,3,-1,-4,-3,7,9,5,3,10,-2],[-7,-4,-4,-8,-10,-4,6,-4,-4,-9,2,-6,9],[-2,7,8,2,-8,-4,-9,5,7,-1,-2,-9,-7],[-8,10,2,-4,6,10,-6,4,7,2,9,3,-2],[4,-5,4,3,1,-8,4,-9,-3,7,2,-1,5]],[[-6,7,-3,-9,3,2,-9,-3,9,2,4,-2,-1],[4,-9,-1,5,-2,2,-7,-7,2,3,5,-3,-10],[2,-7,-6,-6,-9,-1,4,3,7,2,-2,-1,8],[-8,5,-7,2,10,4,-5,3,-7,1,5,-3,-3],[-9,-1,4,-9,9,-6,1,-3,3,10,-5,-3,9],[8,4,7,10,4,9,-3,-1,-3,4,-9,-3,-3],[8,-9,-3,-10,-8,2,-9,2,-10,-6,3,-5,-5],[-5,5,-9,3,3,4,-5,-4,-2,3,-9,-6,-6]],[[-6,5,-5,-10,-8,7,-6,7,6,2,-1,1,8],[-9,-6,-3,-5,-4,1,-3,2,10,2,7,1,8],[-4,6,-10,6,9,8,2,-6,-7,-1,1,-6,1],[1,-5,-4,7,-2,-6,-2,-10,10,-4,4,-5,10],[-8,-1,2,-1,-8,-7,-6,1,-7,-8,3,8,4],[9,-7,-7,7,-4,-7,-5,9,-1,1,8,5,5],[-3,7,3,7,7,4,2,-3,2,-6,-2,-7,-9],[10,-10,1,-6,-1,4,-8,3,-7,10,4,9,-3]],[[4,-5,5,-6,8,10,-6,4,10,3,6,8,9],[9,1,1,4,-10,-1,3,6,3,6,-3,9,-10],[5,2,10,-4,-3,-8,-2,5,-7,-1,4,4,-3],[-6,3,9,4,4,3,6,-4,3,5,7,10,4],[6,-4,2,-1,-6,5,-2,-5,-8,2,-9,9,-5],[-5,-6,9,-4,-1,2,3,4,7,6,10,-5,7],[-7,8,-5,-7,2,5,8,4,9,8,-5,1,7],[7,-6,-7,-3,7,8,8,-1,-7,10,10,9,7]],[[1,5,-1,-1,9,10,-3,-9,-4,-2,-2,5,-10],[-5,1,3,8,-3,4,-6,1,4,-4,8,2,4],[-9,-7,-5,10,-4,9,4,-3,-5,-1,6,4,-10],[9,-10,-7,-3,2,9,-4,-6,7,5,8,8,8],[-5,-3,3,-9,4,-6,2,-4,9,-4,-1,6,-10],[7,6,-9,8,-7,3,-7,-2,5,-10,-5,-9,5],[9,-7,8,4,-1,-6,-6,-3,-9,-9,3,6,-4],[-4,9,2,-5,-6,5,8,4,9,6,-10,-2,7]],[[2,-1,-6,7,6,-5,8,-3,-1,1,4,-5,3],[5,-2,-3,8,9,10,-1,-5,7,-6,-8,-3,2],[10,6,-3,-9,5,-9,5,-9,4,-3,-6,4,-3],[1,-5,3,-2,-9,4,-10,-9,4,-5,-10,4,-1],[6,-6,-10,-6,2,2,-10,9,-8,-3,-5,4,-1],[-2,10,7,9,-6,10,7,1,6,-10,-7,3,7],[8,-10,8,4,-3,5,-6,-4,2,8,9,-9,8],[-7,-6,9,-8,3,-10,5,9,7,2,10,3,1]],[[4,2,6,3,6,5,2,1,4,5,-9,-9,-4],[-4,8,10,5,-6,-3,-10,2,2,-3,5,-10,-1],[3,-9,10,5,-1,10,8,5,-4,10,-2,1,7],[3,4,-8,3,-3,1,10,4,-7,5,-4,9,-8],[-6,8,-3,-3,-4,-6,-8,-1,9,-2,3,-7,-3],[9,7,-5,-6,-8,-4,8,2,9,2,-9,-1,-4],[-2,3,4,-7,1,3,7,-8,2,10,-9,4,-9],[2,5,2,-9,-1,9,1,2,-7,7,9,-9,-5]],[[-8,-2,5,-6,-2,-8,-5,3,8,4,-9,-8,-4],[10,-8,6,6,-4,3,-1,-10,7,9,9,-5,-9],[4,5,-6,3,-9,-1,-6,8,-5,-4,10,-10,3],[-6,2,5,3,-2,-2,-5,4,8,1,7,6,10],[-5,3,-10,6,-6,-6,8,10,-2,3,-2,-6,-8],[10,-8,-8,-1,-1,-3,10,8,8,3,8,-6,-3],[-1,-1,6,2,2,-7,4,3,-6,7,-1,10,5],[-1,-8,-9,-7,-9,-2,7,1,-8,-1,-10,-5,1]],[[-4,-10,-8,1,-7,-6,-1,-7,5,8,7,1,-6],[-5,10,7,-6,4,-7,-1,-5,1,3,8,2,-4],[-1,-7,7,-8,-5,-10,1,6,-9,4,-5,8,5],[-5,-4,-7,3,-2,3,7,4,-10,1,4,-2,-2],[7,2,7,-10,6,4,1,-10,-7,-4,-4,7,-10],[-5,-3,-9,8,2,-1,-6,10,-8,7,5,7,-4],[-4,8,2,-6,10,-5,9,4,8,6,-10,-8,4],[-9,-1,-2,4,10,-3,10,4,-2,3,-10,3,-10]],[[10,-8,-9,5,-1,-6,-7,10,-5,-3,-8,-1,-10],[1,-6,-8,8,1,4,9,3,10,-2,-9,-3,-7],[9,9,6,5,-2,10,-9,-7,-7,8,-2,9,9],[2,-2,10,-4,3,10,3,10,-9,-6,-4,3,-2],[-10,-8,9,-10,8,2,-10,3,2,-1,-3,3,-9],[10,-9,-6,3,10,3,-3,-2,4,-8,4,-4,4],[5,5,-6,-5,-9,-6,2,-2,-9,-7,-10,3,-7],[9,1,-1,3,-10,2,4,6,-4,9,7,-1,-9]],[[5,-10,-10,-6,-2,-7,2,4,5,-5,-1,3,-5],[5,5,8,7,-10,6,-8,-2,5,-4,-8,-8,-4],[-4,-8,5,6,7,-8,9,-1,-6,3,-4,4,9],[1,-6,6,-9,-8,8,-6,5,1,-6,1,3,-1],[-4,9,6,-1,-2,-2,-3,-7,4,8,-7,-5,5],[-4,2,7,10,-7,5,-1,-7,8,-5,3,-8,1],[3,-8,-4,7,10,1,-2,-6,-8,-2,10,-7,4],[-6,-2,-8,5,-3,10,6,-6,8,5,4,3,-10]],[[-9,9,8,8,10,-5,1,5,-10,1,-6,-5,-5],[6,-9,2,-7,1,-4,-5,4,3,-10,7,7,-5],[9,6,10,-3,-2,7,5,5,5,-8,-2,4,-7],[-1,1,9,-7,-3,9,-8,-10,-8,-10,-6,5,-6],[5,8,-3,8,6,-3,2,-3,-3,-2,3,1,5],[10,3,4,6,-2,2,4,-7,2,-4,-2,4,-3],[4,-2,-1,-6,10,2,3,-4,2,-2,6,10,-10],[8,-6,3,-5,8,9,10,-7,7,6,4,1,9]],[[-1,7,3,5,8,-9,5,3,-5,-7,-5,10,-6],[-9,2,2,9,7,9,-1,-2,-2,-10,-4,7,-7],[4,4,-4,6,-5,1,10,-5,-2,5,-7,-2,3],[-3,-9,-3,-8,4,-3,7,-9,-1,-8,9,3,3],[-3,8,-3,8,-9,-7,-9,-8,1,10,6,2,-8],[-6,-5,2,6,-5,10,2,-6,10,-10,-8,6,3],[-9,-7,-6,-7,-2,2,-8,-8,2,-2,1,-2,10],[3,9,-7,-1,-3,-7,-9,-9,8,9,10,6,-8]],[[3,7,3,9,-6,-8,3,7,2,-1,-6,-2,5],[-6,3,-7,7,10,-5,-10,9,1,9,-2,-3,-6],[3,6,8,-8,-8,-7,-2,3,-10,-10,10,1,-1],[-2,7,5,-6,6,5,-6,1,-9,2,10,-6,-1],[6,-8,4,-1,-10,8,9,1,-10,-6,10,-3,7],[6,-6,10,10,8,9,-4,-8,-6,-8,9,-2,6],[2,4,-3,-3,-9,2,4,-3,1,-4,2,4,-5],[-6,9,10,-3,1,7,6,10,5,-10,-6,8,2]]], dtype = "uint64")#candidate|141|(14, 8, 13)|const|uint64
var_142 = relay.var("var_142", dtype = "uint64", shape = (14, 8, 13))#candidate|142|(14, 8, 13)|var|uint64
bop_143 = relay.right_shift(const_141.astype('uint64'), relay.reshape(var_142.astype('uint64'), relay.shape_of(const_141))) # shape=(14, 8, 13)
output = relay.Tuple([bop_143,])
output2 = relay.Tuple([bop_143,])
func_163 = relay.Function([var_142,], output)
mod['func_163'] = func_163
mod = relay.transform.InferType()(mod)
var_164 = relay.var("var_164", dtype = "uint64", shape = (14, 8, 13))#candidate|164|(14, 8, 13)|var|uint64
output = func_163(var_164)
func_165 = relay.Function([var_164], output)
mutated_mod['func_165'] = func_165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_840 = relay.var("var_840", dtype = "float64", shape = (11, 13, 15))#candidate|840|(11, 13, 15)|var|float64
uop_841 = relay.sigmoid(var_840.astype('float64')) # shape=(11, 13, 15)
func_163_call = mod.get_global_var('func_163')
func_165_call = mutated_mod.get_global_var('func_165')
const_849 = relay.const([[5,10,7,5,9,9,-10,-3,-6,8,-5,-6,-9,-7,10,-2,1,-8,5,4,-5,6,-3,4,-7,-3,-7,5,-5,3,-2,-10,-1,3,-10,-10,7,-2,-4,10,-9,4,-4,-4,-1,-2,-5,8,-1,-2,6,-7,7,-5,-8,-2,10,4,5,10,-8,1,-7,9,-9,-10,-2,-8,-10,8,8,6,-6,-1,-10,-8,-5,2,-9,-3,-2,1,-2,3,-4,2,2,1,8,-2,-2,5,-9,-3,-7,-7,9,-3,9,-5,-10,6,-4,-2,6,9,2,7,-10,-2,-5,6,-6,-9,8,9,-2,7,-9,-8,-3,-3,10,10,10,-7,-2,-3,3,-5,-7,-6,-7,-4,-4,-1,7,3,6,9,5,3,10,-6,-7,5,-5,-10,6,9,6,8,-4,3,4,5,8,7,-3,1,3,-1,-9,-1,7,-6,9,-6,-6,-4,9,-8,-9,-4,-7,2,3,10,-8,-8,2,8],[9,-6,-3,5,-4,-10,9,7,1,8,7,-7,-1,-2,8,-4,-3,3,-5,-9,-3,-3,-3,10,4,-9,8,-5,-10,1,6,8,-10,-7,-1,-5,7,9,-2,5,5,-6,1,-1,10,-2,1,-8,-5,5,3,-10,-10,2,8,-8,5,-5,5,1,9,-2,5,1,-6,6,8,2,7,-10,5,-7,1,-9,9,4,5,-10,7,-2,8,4,8,-4,4,-9,3,1,9,2,2,-9,3,9,1,-5,-1,-4,9,-3,5,3,-1,2,6,9,-10,-5,8,-3,7,-7,-8,-7,-3,1,-4,4,1,-7,-9,-5,7,-10,-5,-3,2,9,2,-9,8,-1,-6,-10,-2,-4,-7,10,10,-10,-4,5,4,-7,4,9,8,6,6,1,-5,1,-3,-6,2,7,-1,-3,10,9,-8,6,10,-9,8,-6,-4,-4,7,-1,-8,-6,-3,-3,-9,-7,-3,-2,-4,1,9,-4],[-4,2,-10,2,-1,6,7,7,2,-4,6,9,-5,10,8,8,2,-5,1,8,-8,-6,-6,3,-4,2,-1,9,-1,-1,-3,-1,7,5,5,-1,-10,10,-7,-3,-9,2,7,-9,8,-7,7,6,-4,-3,4,2,1,9,4,-1,-8,5,2,-4,-4,-3,-9,-6,-10,9,-2,-10,-2,1,3,-9,4,-6,9,-9,1,3,-1,-2,-7,6,4,6,-7,2,-10,-2,-6,-1,2,-8,-3,4,2,-6,-7,-2,-10,-6,5,8,-8,10,-1,-1,-2,-6,1,-9,-6,-4,9,3,-4,6,-7,-5,-7,1,7,-10,2,-3,8,8,9,6,-9,7,7,5,8,-1,6,-2,3,-9,10,9,-4,-9,-2,10,1,5,9,-4,-9,-1,-6,-7,4,5,7,-9,5,-3,2,-8,-1,5,-4,-8,-3,-9,3,-7,9,-1,9,9,-2,1,-6,-9,6,6,2,-5,2,-3],[8,-3,3,7,-8,8,-9,-3,9,-1,-5,-7,2,1,5,-10,-3,4,-7,-10,5,4,-8,-8,-7,4,-9,-9,2,-6,4,-2,1,5,-6,4,6,5,2,-2,6,3,6,8,-3,-7,-2,-6,-4,2,9,-1,-1,8,4,4,-4,5,10,10,-8,2,5,-5,-10,-10,1,3,-10,5,9,-1,-6,-4,10,2,2,-1,4,7,3,5,9,-7,-9,10,-2,4,9,-4,4,8,2,3,7,1,7,3,-4,-2,3,-4,3,2,-5,-1,-4,5,10,1,-9,-7,-8,2,-3,6,6,-2,7,-3,2,-1,4,-6,7,-6,-2,3,-7,2,9,7,-10,-6,-5,-9,-4,-7,10,7,-1,-4,-5,-10,1,-2,4,8,10,-10,5,-4,-2,1,2,-9,-2,3,9,-2,7,-3,-5,4,-4,-10,6,2,-3,-9,-3,-8,-3,-2,6,3,8,-6,-6,8,-7,-1],[-4,-8,-5,4,9,-3,-2,-5,7,-4,5,-9,2,-2,-8,9,-7,-9,-6,-10,-4,7,8,-6,9,1,10,4,-9,-1,9,-9,7,-9,-10,9,-4,1,6,8,-7,-9,2,1,10,-6,-9,5,2,10,5,-5,-4,2,4,-7,-2,8,-2,3,10,-2,6,-7,-1,10,6,6,2,2,-7,-6,5,-3,4,10,-5,5,10,-10,8,-9,-7,-6,3,6,-7,1,6,-1,-9,-6,-3,-8,2,-6,-7,-9,-1,3,3,6,-2,5,10,-2,-7,3,-9,5,-8,6,-7,10,-9,4,4,5,-6,6,6,-2,6,5,6,-9,-2,-10,9,8,4,-2,-1,-6,7,2,-10,8,-2,1,4,2,6,-8,-3,5,-10,10,5,-10,-8,6,7,-3,-9,-6,-4,-1,-2,5,5,5,-6,9,-10,4,1,5,-3,8,-1,-5,5,-5,-4,4,-10,-9,5,10,6,5],[-3,7,9,8,-2,-6,8,5,2,5,10,10,1,3,1,7,6,-10,1,-4,-10,1,-2,3,-8,7,2,3,5,-3,4,10,3,-5,-9,-7,-1,-8,7,-6,10,2,1,7,3,-4,-1,-7,6,1,10,4,-8,-4,-4,9,8,-7,-9,4,-8,7,3,-4,-5,-6,-2,-8,-3,-7,-7,-2,-8,-1,-7,8,-3,5,-8,-7,-5,-10,3,9,-10,-4,3,-9,9,9,-7,9,4,8,-4,-7,-7,-6,-2,-8,-1,1,-10,-8,-2,-5,6,1,-10,1,5,3,-4,-4,-5,-3,7,-2,-4,-8,-7,-5,6,2,4,-2,-3,1,-3,8,-7,6,-4,-1,-1,3,9,-1,-4,3,-8,5,9,1,-10,3,1,-1,10,-1,10,-8,-4,6,-4,5,5,5,7,9,6,-7,1,-10,-10,9,7,-1,-8,8,-9,4,-3,9,5,-9,9,-10,4,1,-10,-7],[10,7,-6,-2,8,-10,-4,-4,8,4,9,-10,-1,-10,5,-10,-5,5,-4,6,-2,4,7,9,-1,-5,-4,-7,7,-7,-5,9,8,3,10,5,-8,-10,-6,10,-9,-10,-1,-9,4,-1,5,-1,4,6,-3,-8,9,-6,6,-4,1,7,1,-2,-1,6,-3,-10,10,2,8,-4,7,-2,8,-5,10,-2,-7,-7,-7,8,-1,10,-6,-7,-2,1,-3,-10,7,-1,-9,-7,7,-7,-9,6,-3,1,7,-4,-9,8,-8,-4,-4,-3,7,-1,5,7,-3,2,-9,7,-1,7,-8,5,-3,-10,-1,2,-4,-2,-3,1,-4,-3,-7,1,3,-9,4,6,2,-6,10,3,-3,1,4,3,6,-10,-8,3,10,-4,-8,2,8,-5,8,-2,-2,8,-6,5,4,-7,8,-6,3,-3,-2,-3,2,9,-5,-2,4,3,8,-4,-3,7,-2,-10,-2,-8,-5,-5,8,-1],[-4,9,3,-8,10,-5,4,6,4,-10,6,-3,10,2,-1,-10,3,5,-9,-7,4,4,6,3,-6,8,-3,-5,-10,-1,-7,8,-10,8,-5,-10,10,8,-6,6,5,3,7,-3,2,-10,6,-3,-2,-6,7,-7,-2,3,-7,9,4,-2,-10,10,10,3,9,-2,6,-9,6,1,10,-7,2,-8,7,-7,-4,1,8,-10,7,-9,2,9,3,-5,4,9,9,4,5,5,10,-5,-7,7,-9,-10,-4,8,-8,10,6,-10,7,10,-7,3,-8,-8,-3,10,3,10,6,-7,-2,6,6,-10,-10,-7,5,6,8,8,-3,3,6,-5,3,9,-1,-1,1,-10,-2,-9,6,-10,-3,6,-5,-4,-2,7,3,9,1,8,3,-4,-6,-2,2,9,-10,-1,-3,8,-4,-1,1,10,1,-3,-8,1,-1,8,-7,-9,1,-2,7,-10,-6,-9,-2,-8,-6,9,-9,-10]], dtype = "uint64")#candidate|849|(8, 182)|const|uint64
call_848 = relay.TupleGetItem(func_163_call(relay.reshape(const_849.astype('uint64'), [14, 8, 13])), 0)
call_850 = relay.TupleGetItem(func_165_call(relay.reshape(const_849.astype('uint64'), [14, 8, 13])), 0)
output = relay.Tuple([uop_841,call_848,const_849,])
output2 = relay.Tuple([uop_841,call_850,const_849,])
func_858 = relay.Function([var_840,], output)
mod['func_858'] = func_858
mod = relay.transform.InferType()(mod)
mutated_mod['func_858'] = func_858
mutated_mod = relay.transform.InferType()(mutated_mod)
var_859 = relay.var("var_859", dtype = "float64", shape = (11, 13, 15))#candidate|859|(11, 13, 15)|var|float64
func_858_call = mutated_mod.get_global_var('func_858')
call_860 = func_858_call(var_859)
output = call_860
func_861 = relay.Function([var_859], output)
mutated_mod['func_861'] = func_861
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1510 = relay.var("var_1510", dtype = "float64", shape = (3, 2, 13))#candidate|1510|(3, 2, 13)|var|float64
uop_1511 = relay.sinh(var_1510.astype('float64')) # shape=(3, 2, 13)
func_130_call = mod.get_global_var('func_130')
func_135_call = mutated_mod.get_global_var('func_135')
var_1519 = relay.var("var_1519", dtype = "int16", shape = ())#candidate|1519|()|var|int16
var_1520 = relay.var("var_1520", dtype = "int16", shape = (3840,))#candidate|1520|(3840,)|var|int16
var_1521 = relay.var("var_1521", dtype = "bool", shape = (120,))#candidate|1521|(120,)|var|bool
call_1518 = relay.TupleGetItem(func_130_call(relay.reshape(var_1519.astype('int16'), []), relay.reshape(var_1520.astype('int16'), [15, 16, 16]), relay.reshape(var_1521.astype('bool'), [120,]), ), 0)
call_1522 = relay.TupleGetItem(func_135_call(relay.reshape(var_1519.astype('int16'), []), relay.reshape(var_1520.astype('int16'), [15, 16, 16]), relay.reshape(var_1521.astype('bool'), [120,]), ), 0)
output = relay.Tuple([uop_1511,call_1518,var_1519,var_1520,var_1521,])
output2 = relay.Tuple([uop_1511,call_1522,var_1519,var_1520,var_1521,])
func_1523 = relay.Function([var_1510,var_1519,var_1520,var_1521,], output)
mod['func_1523'] = func_1523
mod = relay.transform.InferType()(mod)
var_1524 = relay.var("var_1524", dtype = "float64", shape = (3, 2, 13))#candidate|1524|(3, 2, 13)|var|float64
var_1525 = relay.var("var_1525", dtype = "int16", shape = ())#candidate|1525|()|var|int16
var_1526 = relay.var("var_1526", dtype = "int16", shape = (3840,))#candidate|1526|(3840,)|var|int16
var_1527 = relay.var("var_1527", dtype = "bool", shape = (120,))#candidate|1527|(120,)|var|bool
output = func_1523(var_1524,var_1525,var_1526,var_1527,)
func_1528 = relay.Function([var_1524,var_1525,var_1526,var_1527,], output)
mutated_mod['func_1528'] = func_1528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1781 = relay.var("var_1781", dtype = "int32", shape = (4, 7, 5))#candidate|1781|(4, 7, 5)|var|int32
var_1782 = relay.var("var_1782", dtype = "int32", shape = (4, 7, 5))#candidate|1782|(4, 7, 5)|var|int32
bop_1783 = relay.multiply(var_1781.astype('int32'), relay.reshape(var_1782.astype('int32'), relay.shape_of(var_1781))) # shape=(4, 7, 5)
output = relay.Tuple([bop_1783,])
output2 = relay.Tuple([bop_1783,])
func_1786 = relay.Function([var_1781,var_1782,], output)
mod['func_1786'] = func_1786
mod = relay.transform.InferType()(mod)
var_1787 = relay.var("var_1787", dtype = "int32", shape = (4, 7, 5))#candidate|1787|(4, 7, 5)|var|int32
var_1788 = relay.var("var_1788", dtype = "int32", shape = (4, 7, 5))#candidate|1788|(4, 7, 5)|var|int32
output = func_1786(var_1787,var_1788,)
func_1789 = relay.Function([var_1787,var_1788,], output)
mutated_mod['func_1789'] = func_1789
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2098 = relay.const(-8, dtype = "int64")#candidate|2098|()|const|int64
const_2099 = relay.const([[[-4,1,-2,3,4,-1],[4,-3,6,10,-2,-7],[-9,-1,-8,7,3,7],[5,-5,10,1,8,10],[7,-3,-2,-1,-7,-6],[-9,-1,4,-8,-8,6]],[[-8,9,-3,7,-10,1],[3,6,4,9,6,-6],[5,-9,-6,2,-4,-8],[-3,-8,-9,6,-3,-4],[-4,-10,2,-3,1,-2],[9,-1,-9,1,-5,-5]]], dtype = "int64")#candidate|2099|(2, 6, 6)|const|int64
bop_2100 = relay.greater(const_2098.astype('bool'), const_2099.astype('bool')) # shape=(2, 6, 6)
func_1786_call = mod.get_global_var('func_1786')
func_1789_call = mutated_mod.get_global_var('func_1789')
var_2106 = relay.var("var_2106", dtype = "int32", shape = (140,))#candidate|2106|(140,)|var|int32
call_2105 = relay.TupleGetItem(func_1786_call(relay.reshape(var_2106.astype('int32'), [4, 7, 5]), relay.reshape(var_2106.astype('int32'), [4, 7, 5]), ), 0)
call_2107 = relay.TupleGetItem(func_1789_call(relay.reshape(var_2106.astype('int32'), [4, 7, 5]), relay.reshape(var_2106.astype('int32'), [4, 7, 5]), ), 0)
output = relay.Tuple([bop_2100,call_2105,var_2106,])
output2 = relay.Tuple([bop_2100,call_2107,var_2106,])
func_2113 = relay.Function([var_2106,], output)
mod['func_2113'] = func_2113
mod = relay.transform.InferType()(mod)
var_2114 = relay.var("var_2114", dtype = "int32", shape = (140,))#candidate|2114|(140,)|var|int32
output = func_2113(var_2114)
func_2115 = relay.Function([var_2114], output)
mutated_mod['func_2115'] = func_2115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2626 = relay.var("var_2626", dtype = "float32", shape = (7, 14, 10))#candidate|2626|(7, 14, 10)|var|float32
uop_2627 = relay.acosh(var_2626.astype('float32')) # shape=(7, 14, 10)
func_1523_call = mod.get_global_var('func_1523')
func_1528_call = mutated_mod.get_global_var('func_1528')
var_2631 = relay.var("var_2631", dtype = "float64", shape = (13, 6))#candidate|2631|(13, 6)|var|float64
var_2632 = relay.var("var_2632", dtype = "int16", shape = ())#candidate|2632|()|var|int16
const_2633 = relay.const([4,8,3,-1,-4,8,-7,4,10,-6,-10,8,6,2,-4,-8,4,4,1,-10,6,9,-4,-9,-1,-9,9,8,9,7,9,-2,9,-2,1,7,10,3,9,8,1,4,5,5,-1,9,-8,-5,-5,9,-9,-5,6,-4,-4,-6,10,-4,1,-2,2,4,-2,-8,8,-5,8,7,-10,9,-3,-8,7,1,1,-2,-5,-4,-7,-6,-2,3,10,1,3,5,-7,1,3,1,7,9,-2,-1,-5,-4,-7,-6,9,9,9,7,5,7,-2,-3,4,3,5,4,10,-9,-7,3,2,7,6,-7,-4,10,-5,-6,-5,4,6,9,8,-2,3,-10,-9,-8,10,5,-2,-1,8,-7,-10,-2,-10,2,-1,2,4,-2,-8,-8,-8,4,10,8,-5,-10,7,-3,4,-7,-2,10,-9,-8,5,-5,1,-4,7,10,8,-8,3,-3,7,-4,7,4,8,-4,10,-5,-1,3,-2,9,-2,-4,10,-3,-7,5,-1,-3,3,-2,-9,3,8,7,8,10,6,-6,-3,-3,-6,-8,9,7,-9,4,-6,7,2,5,-3,-9,-1,3,-6,6,-7,2,-8,-8,8,4,-9,-9,6,-1,9,5,-9,-5,7,10,8,9,-8,2,1,1,6,2,-4,-8,-7,4,-3,10,2,5,-1,-5,-3,7,2,5,8,9,-4,-6,2,-4,10,-5,5,2,6,5,4,-5,-9,-4,2,10,10,5,-7,7,5,8,3,6,-9,1,4,-10,8,10,9,4,-8,-1,9,2,1,-6,2,-4,-2,4,10,-8,2,-8,10,10,2,2,-9,-7,-4,5,-4,7,-3,-3,7,-1,1,-9,1,10,-1,7,9,-2,-7,-1,5,9,8,-3,3,-5,-3,-7,2,-10,-2,-4,-4,-3,3,-4,-1,6,-2,6,3,2,-6,2,6,2,10,-6,4,5,-3,-6,1,4,1,1,-1,-9,1,6,3,5,6,8,-3,7,-2,-10,5,8,-4,-9,1,-4,9,-10,-10,8,6,-7,-8,5,-7,7,-7,-7,4,-9,-4,-9,-5,-7,-2,2,-10,-7,5,-2,-6,-4,4,7,-7,-4,9,6,-2,8,10,4,-1,2,-4,8,-3,-5,4,-6,-6,4,6,7,6,4,7,8,10,4,4,5,6,6,-10,3,-5,-3,-8,8,8,-10,1,-1,-7,6,8,-9,-1,-4,-7,9,3,-2,-2,5,-4,3,2,-8,-2,8,-6,-4,-4,-8,-5,-3,-8,-1,7,10,-10,7,-10,1,-9,-10,8,2,2,4,-8,10,-4,-6,-7,-10,-1,1,2,-1,-2,8,7,-3,1,-8,4,2,-9,7,-5,4,-6,5,-6,-10,9,10,7,5,-1,-6,-3,3,7,7,-10,9,-6,3,3,2,-1,-10,-6,-8,-9,1,3,1,5,3,9,-1,-8,-8,-8,-5,-3,-9,9,3,4,-10,-8,-8,-1,8,2,-6,4,3,4,-4,10,-3,3,-7,-2,3,-9,2,-1,-9,-2,5,-9,-1,-4,-10,-8,-3,1,-7,8,2,10,-7,-8,6,-1,7,9,3,-3,-10,-5,2,-5,-10,1,-10,8,4,4,-8,-10,7,5,5,-2,-8,9,5,-1,7,-7,-4,4,10,7,5,3,9,1,-5,-8,-1,5,3,3,9,-8,-4,1,10,-4,-7,6,-6,-9,-9,-5,6,-8,-7,8,10,1,8,-2,1,-5,4,4,8,2,-10,10,9,2,9,-4,-8,5,-8,-6,2,9,5,-5,-9,-4,3,5,-2,-10,9,-1,10,2,-4,10,4,-1,5,5,4,2,-1,-9,-6,-5,-2,1,-6,-1,5,-8,1,9,-7,9,-2,-9,8,8,-7,-8,-1,1,3,-10,3,7,-7,-9,1,-8,-9,-5,-4,-2,8,-8,-10,-8,10,3,-6,-7,-9,1,-4,-2,-5,3,-2,8,4,8,-6,-9,6,2,-4,-7,5,2,7,6,5,-9,2,-6,5,2,-2,-10,3,-8,-10,10,3,9,-8,-1,-2,-9,-10,-3,-10,-6,6,-9,-9,5,-6,-7,7,-8,-10,-9,9,-9,2,4,8,4,-8,-4,2,6,-6,-6,10,-9,4,3,5,-2,5,-9,-10,9,-6,6,-4,-7,-7,5,-8,8,-4,5,6,-8,-7,-5,10,6,-7,-7,7,3,-8,1,-7,-7,-3,-2,-2,-9,-7,-6,8,-6,-4,-8,-6,5,1,1,-7,3,-3,-9,5,-3,-2,-1,1,-5,-10,-6,-4,-2,6,-7,4,-5,4,1,3,4,-5,6,-4,-2,6,3,-8,-8,-2,9,4,-2,-7,-10,9,6,2,-3,-6,3,3,-3,4,-7,-4,-2,-8,9,-7,6,4,3,7,-2,-1,7,4,-8,9,7,-10,4,-1,-5,-1,-8,6,-10,-9,8,-9,7,4,4,-9,-9,-9,-8,5,1,-6,-2,2,5,-4,1,-9,9,-4,-7,5,3,-8,-4,-4,-2,6,3,5,9,-3,5,1,-3,8,-7,7,-6,-10,-1,-7,-5,6,1,5,1,10,-10,-9,-5,5,9,-1,7,5,-6,-9,-5,10,-6,-6,5,-2,-9,7,7,6,-2,-3,10,4,-2,8,10,3,-3,3,-5,2,-8,-7,-9,-1,4,9,-3,10,6,1,6,-1,1,8,1,-1,8,-1,5,-7,7,-2,9,-4,-10,8,-8,-6,3,8,-3,-10,-9,8,-5,2,1,2,6,4,2,-1,-2,-1,2,-8,10,-5,-1,10,10,-9,6,2,7,7,9,-10,-6,4,4,-2,-2,-1,4,10,-3,-6,10,10,-5,7,-6,2,1,9,-2,8,-2,8,10,1,-6,-4,-6,-6,-1,4,1,9,-6,7,-3,-1,-6,10,-4,1,7,-8,10,-5,-6,-10,7,-1,8,-8,-5,-6,7,-8,7,2,-7,-9,2,-9,3,5,9,-10,6,-7,-8,-3,-1,5,-10,-3,5,5,-8,-6,-4,-10,7,-9,1,-3,1,3,4,-9,2,3,-6,5,-3,-4,1,9,7,10,-5,6,-6,-5,6,7,8,7,8,-5,-4,7,6,-5,5,-10,8,-6,8,5,7,-3,-3,6,-4,-4,3,-8,-9,-1,-8,-5,-10,1,2,1,-9,4,-5,-3,5,-9,-9,7,-10,4,-1,4,-10,9,-10,-5,5,1,2,-10,3,5,-8,2,3,6,7,-7,-5,-10,9,2,-5,-3,-8,5,-2,-5,-5,10,5,3,-6,-8,1,5,-3,3,1,6,10,-3,2,-5,-9,6,-1,-7,-1,9,2,3,1,5,3,1,1,-8,-6,-9,-9,8,-3,-8,-9,-10,1,8,9,-3,-5,8,10,8,-2,-10,3,1,-2,-2,-6,-4,4,-6,-5,7,-5,7,-2,3,5,5,1,4,4,4,8,4,10,-7,1,9,1,-3,-3,9,8,-6,9,-2,-5,3,-4,7,1,1,2,-7,-5,7,7,-6,1,3,1,5,4,1,-6,-2,-6,8,2,-10,8,-5,-5,-9,4,-6,-9,-4,8,-1,-8,9,7,-10,5,-5,9,-7,2,9,-9,-2,-6,3,4,8,6,-5,-7,1,-7,4,-4,-10,-8,-2,-6,9,-3,-5,4,-10,-1,3,-10,-7,-9,-2,-3,-1,3,-1,-2,-10,1,-3,-9,5,-7,-5,3,5,6,-8,2,-1,5,-4,2,-1,1,8,-8,-7,3,4,-7,-1,8,3,9,9,-8,8,-8,3,-4,7,-7,-6,8,10,1,-10,1,3,7,-1,-4,5,7,-9,-2,-2,1,-1,8,-8,-3,9,10,-1,1,-4,-10,-5,8,7,-2,-10,6,4,3,4,10,7,5,-9,-9,-1,1,-5,2,2,10,7,-3,10,4,-1,5,-4,-5,7,5,10,-6,6,6,3,10,-2,2,-1,3,-1,-10,-9,10,-9,-5,-3,-6,2,9,-10,5,3,1,4,-6,2,-1,-2,-8,8,-10,8,-9,9,-4,-8,8,-6,7,-3,-8,10,-8,10,3,-1,8,10,10,7,6,-2,-7,5,2,-9,-5,-10,1,-10,8,7,1,-3,-7,-4,6,-1,-8,-8,-6,-3,-6,-5,2,1,-7,8,-8,-10,1,-9,-3,1,9,-4,-4,8,-9,-9,8,-1,-10,6,1,-4,9,-1,-6,-4,2,9,-4,-8,-10,3,6,-5,-4,8,-7,8,-8,10,3,-6,-1,-5,-2,9,-9,-9,8,-5,7,8,6,9,8,7,-5,-8,-9,-3,-5,2,5,-1,7,7,-7,-9,-2,-6,-10,-2,7,-1,-1,7,9,10,-3,8,6,6,-10,-8,-3,-3,-9,-8,-2,-3,3,7,-1,7,7,-6,9,-6,-8,1,1,8,8,-8,-5,1,3,2,-6,-10,2,-6,1,-2,-8,-4,-9,-9,-6,-5,-8,-1,-8,-6,9,7,-5,4,5,-7,-1,2,-1,4,7,-10,-10,7,3,-2,1,-4,4,-2,-6,-4,8,-6,6,-10,-1,-10,-1,-1,-2,7,-2,-10,2,7,-9,-4,6,7,2,-7,-8,-6,-3,5,9,9,-4,-10,-8,-4,-8,5,-8,8,-2,3,-1,10,5,1,9,5,-8,-10,2,7,-4,-5,-7,-2,-5,8,5,4,-3,-4,-5,-6,6,3,-3,7,3,10,5,6,9,8,1,-4,6,-9,-8,8,-4,-1,1,2,2,-3,-6,-6,4,8,7,2,-1,6,7,-3,-5,5,4,2,-3,-2,-6,3,6,7,-5,-7,-1,8,-9,8,7,3,-5,7,2,7,10,9,-1,-9,7,-7,-3,8,-7,-7,4,-8,-5,-6,-6,6,-1,4,-5,-2,-1,3,-3,-5,1,-5,-1,1,9,2,8,-1,-7,5,-8,-4,-6,-4,-10,-9,10,-4,-8,7,-4,-1,1,3,9,-7,7,-7,-8,3,-9,-9,-6,-1,9,2,-9,6,-8,-5,9,5,3,10,-4,-9,5,5,-10,8,6,-1,-6,4,-5,1,5,3,-10,9,-6,-1,8,-6,4,-8,-5,-5,5,5,10,-8,-1,-3,4,9,2,-4,-7,9,-4,10,-5,2,-4,-1,-2,1,10,6,-6,5,-6,8,-9,5,-1,5,-1,5,-4,2,-5,-9,7,-10,-2,-10,-6,-4,-3,-8,-7,10,2,5,-2,-1,-10,-4,8,9,-9,-2,9,-9,6,-9,-2,3,4,9,-5,-3,-3,-3,10,-2,-2,5,-2,-4,-4,3,1,10,-4,-1,1,3,2,-6,-9,-5,-5,-2,7,-5,-8,6,4,7,5,6,-2,10,4,-8,4,-4,4,-6,-2,1,-9,3,5,3,6,5,-8,-3,3,-5,-3,-8,5,-7,4,10,6,-1,3,-10,1,8,2,-2,-3,4,6,-4,-7,-9,-10,6,-2,9,-1,4,-6,-1,-6,-5,-10,4,2,-6,-10,2,3,9,7,3,-7,-7,-1,-3,-1,-3,-9,6,6,2,8,7,-2,-9,4,-4,-8,4,-1,-4,5,-3,8,-8,1,2,4,1,8,4,3,-3,-10,2,-5,-6,-6,7,-8,8,-4,1,2,3,-3,1,4,-8,-2,8,7,-8,-2,-8,-1,-4,-9,-3,8,-10,-3,-8,7,-5,-6,-6,8,-7,10,-3,-2,-6,-3,-3,-4,-3,-5,8,-8,-1,-6,9,-1,-4,-2,2,5,6,-6,8,-3,1,-1,10,-1,-6,-7,3,-3,-7,-6,-10,6,9,-8,-3,6,-9,-2,6,1,2,-7,6,-4,5,-3,-10,-5,-10,-4,4,-9,-6,-3,6,-4,-1,-5,-3,9,6,-4,-10,3,-4,7,6,-10,-6,-7,-8,-3,4,-8,-5,-4,1,-9,-1,-3,1,10,3,-2,-6,3,9,-4,4,-9,-9,1,-3,10,-5,6,10,-5,-9,-2,-7,-8,1,-1,-2,-3,3,2,4,-9,-3,-5,4,-6,9,5,-4,-2,5,-1,6,-1,-8,7,2,-3,3,-10,1,8,-5,-6,10,-6,-3,-3,1,-8,-4,2,-10,-3,-6,10,8,-5,-4,1,-1,8,-4,-3,-4,5,-7,-6,-4,2,1,-7,-1,-1,5,9,-9,-2,-8,9,7,2,2,2,6,-8,-7,5,7,-5,7,10,2,10,-6,-6,6,-8,-3,-4,4,7,7,1,7,8,-3,10,2,-7,-3,-3,8,-7,10,3,5,7,-9,6,6,10,4,-5,1,5,5,-3,7,-8,-3,-5,9,10,2,-6,2,8,-3,4,-4,-10,-9,6,4,5,6,-6,1,5,-4,2,4,-5,2,2,10,-9,-4,-5,10,6,9,1,9,-3,-6,10,4,8,5,-4,-2,2,-9,-6,6,-4,-5,-6,2,9,6,-1,-5,8,9,-4,6,-8,-4,3,6,6,-4,-6,-4,6,4,-4,-6,-8,-6,-7,10,-7,-10,6,-8,7,-7,-8,-10,2,-4,3,-1,-7,5,1,-1,-10,9,-7,8,-8,-9,-5,3,-2,-8,-8,-6,-7,-1,8,7,3,4,2,7,9,6,-4,-5,-5,1,-1,-8,-10,7,1,6,9,-5,3,2,-8,8,-7,-8,4,-6,6,3,3,4,1,7,1,2,-3,-8,3,3,-6,2,10,-7,2,-2,8,-8,-9,1,-8,-6,9,4,-7,-10,7,5,10,4,9,-8,6,-8,-4,5,-3,-4,2,-4,4,3,8,1,-9,-1,-10,7,-6,1,5,-1,-6,1,-3,-8,-9,-2,-9,4,-5,8,3,-3,10,6,-9,-4,-3,2,7,7,-1,2,10,-9,8,-4,1,-7,-3,-8,1,-9,4,2,-3,9,6,5,-5,4,-10,-4,8,-5,6,7,-3,4,2,-9,3,-9,9,-6,8,8,10,10,3,1,7,9,-8,7,6,-5,6,-7,-9,9,-3,-5,9,3,9,1,3,5,-2,-1,10,7,-1,-9,7,6,-5,7,6,-5,-5,4,6,-1,-4,7,8,8,-10,8,6,-1,8,-4,7,1,6,10,-5,-2,-1,2,7,-9,-8,-4,4,7,3,-6,1,-2,5,10,-1,8,3,5,10,7,-2,4,8,10,3,4,5,2,8,-9,-6,2,9,-1,1,8,-9,-3,-4,-10,9,2,10,6,-7,4,6,-5,5,-5,-6,-2,-5,-3,6,-7,-7,-2,2,2,5,-7,6,-5,9,-5,-10,9,-2,6,6,-4,10,-8,4,-6,-8,9,4,-4,1,-8,-6,8,-9,-7,-8,6,9,-2,7,-3,10,8,-3,9,-2,4,-3,-8,-7,-7,-6,-2,-10,9,4,-2,-3,2,-5,-9,-7,-6,7,5,9,-8,-9,-1,9,-6,-1,1,9,9,4,2,10,4,-2,-1,4,-5,4,-2,5,7,-6,-1,2,10,7,-7,-8,2,1,10,-5,-8,10,-3,6,4,-8,7,-4,-8,-9,-5,8,-6,3,6,-10,10,-2,4,2,-2,-2,2,7,4,-5,-2,8,-3,3,-2,2,2,2,-6,5,-5,-8,-2,7,3,-7,-6,-5,8,6,1,-10,4,1,6,-7,-3,-10,-1,1,8,1,2,2,-5,8,6,1,9,9,7,8,10,5,2,7,3,-5,5,-3,-6,10,-10,-4,-4,6,-9,-3,10,-2,3,4,9,-1,7,-9,-6,6,2,6,-1,1,-5,-10,-2,7,4,-3,3,1,7,-2,1,-10,-8,-2,9,10,6,8,4,5,-9,5,2,1,-8,-6,-2,5,-5,8,8,7,-10,6,-4,-2,-1,4,-2,5,-1,10,-7,3,10,5,1,-4,1,-3,-2,8,3,-5,9,5,-10,3,-8,9,-10,-7,-8,-2,-2,-4,1,6,-3,8,-4,4,-10,1,-7,-7,7,-8,7,-4,6,-5,-9,10,5,-6,5,-1,10,2,-4,-2,4,-8,9,-2,-1,1,-10,-1,-3,2,-8,-10,6,-4,10,3,-8,-7,-4,-2,-7,-4,8,-10,2,-6,6,9,-7,-2,10,2,-6,-5,-9,-5,3,-1,-5,-9,-4,9,2,-2,2,-7,1,10,-10,10,-3,-6,-6,-7,-10,10,-3,6,1,-4,3,-5,3,-2,2,4,8,-4,-7,-7,-9,-4,8,-10,7,-1,-5,5,-4,3,-10,5,-5,2,2,-2,6,7,-6,-2,9,3,10,4,-4,1,-3,2,7,-3,-3,4,-1,-3,6,-9,-7,-2,2,-2,-4,10,1,-7,-8,-9,-5,10,2,4,9,4,10,4,2,8,-2,5,-4,4,-3,3,-6,8,6,-7,-7,-10,6,9,-9,8,-9,5,-3,5,1,-6,9,-4,-5,-10,1,1,2,-9,-9,4,-8,-1,-9,-9,-2,-7,10,-8,10,1,-5,-3,2,-10,9,-1,5,9,6,-4,6,1,-1,-3,6,4,-4,-8,9,9,4,-4,-10,2,-3,-6,6,-5,8,-9,9,4,10,-2,-2,6,1,-4,3,10,-2,4,-6,4,6,8,7,-3,-8,6,7,5,-2,-2,-6,-2,9,-6,-7,-10,-2,-10,-4,5,-9,-1,7,-4,-8,-5,-9,3,-6,-4,9,-6,4,-1,-1,10,1,4,-1,6,-7,6,-9,3,-7,-8,10,-9,-2,-5,-9,10,-10,6,7,1,-5,1,5,9,10,10,1,-6,-10,-5,8,8,4,-9,8,-4,-6,-6,8,3,-3,1,2,9,8,10,-1,-4,-2,5,-3,-2,-5,-2,-6,-2,9,4,-1,-3,7,7,-2,5,5,4,1,9,-6,1,-5,10,-6,-5,-7,8,-2,6,-7,7,-2,-2,-9,-9,9,7,-2,-9,-1,-5,-3,-4,9,8,-2,-10,6,-5,10,-9,5,6,-1,8,-9,2,-8,-8,10,-3,-1,-5,4,1,8,-4,6,-10,2,10,-3,-5,3,-9,1,3,6,10,-10,3,-5,-10,-6,-7,-10,-2,-3,5,-2,7,8,-7,10,4,2,-5,-4,-7,7,1,-3,10,9,10,-2,7,8,6,-5,7,8,4,9,4,-5,3,7,-2,1,-2,-10,4,-4,6,-1,-9,-7,2,-6,9,-3,-9,-8,-1,-4,3,-3,-4,7,8,-2,-6,-2,4,9,7,-6,6,-9,2,-9,7,-3,-9,-2,-8,-4,3,7,1,-1,-9,7,2,2,9,-10,-3,9,3,9,-6,-8,-10,-6,-10,-1,7,-4,-4,-4,8,-1,-7,3,10,1,-6,4,-1,-8,9,-10,7,-5,8,6,-3,7,7,-2,-3,-2,-2,-4,1,6,1,-6,9,1,-3,5,6,-10,1,10,4,2,10,-3,-10,-3,-8,-1,-2,-6,1,-3,-5,-8,4,2,-1,8,-10,4,-1,-1,6,7,4,5,7,2,8,10,-9,-1,-7,-2,9,9,1,-10,1,6,-3,1,-8,5,5,9,-8,-4,7,-3,2,-8,-1,-1,-8,-8,-8,4,-3,2,-4,4,1,-8,4,7,-1,-8,-5,-5,-7,-7,-1,1,-8,4,5,-6,7,-7,3,-6,10,9,4,2,4,-6,-8,10,9,-2,3,-3,1,-1,5,-1,3,2,-3,-9,-4,3,-2,-10,9,7,9,10,9,4,-1,9,-6,-3,7,-7,7,-3,-3,9,-6,-3,6,6,-7,9,7,1,-1,2,6,-9,9,1,-8,5,-9,-10,2,-2,6,6,-1,5,-1,2,-6,2,6,9,-6,-9,-3,-1,2,-5,-9,2,-9,-4,7,10,10,1,3,-9,6,-5,-6,7,2,-8,2,10,8,2,1,-9,3,-6,-1,7,-4,10,9,-10,7,1,-8,1,-5,3,6,-9,-3,-5,-4,6,3,8,1,-2,-5,-10,-3,1,5,-6,-8,-7,-9,-7,-5,1,-7,9,-6,-8,5,6,-8,-6,10,3,-6,-1,3,8,-1,5,9,-7,8,-7,-3,10,1,6,7,-9,2,-6,8,-2,-6,-6,-2,1,8,10,3,7,-6,-5,-4,4,6,10,7,-2,8,7,3,-7,-7,4,-9,-6,-4,7,-9,4,2,-9,8,9,1,6,-5,-5,-4,-6,8,7,5,1,-5,-9,-1,-6,-4,-6,3,9,7,-4,-10,3,4,-3,-3,5,1,5,-4,10,-7,3,8,-10,3,-5,4,-5,7,-7,2,8,-6,5,5,-10,-2,2,4,-7,6,1,10,-8,4,9,7,-9,-2,7,-10,10,9,-5,6,1,4,1], dtype = "int16")#candidate|2633|(3840,)|const|int16
var_2634 = relay.var("var_2634", dtype = "bool", shape = (120,))#candidate|2634|(120,)|var|bool
call_2630 = relay.TupleGetItem(func_1523_call(relay.reshape(var_2631.astype('float64'), [3, 2, 13]), relay.reshape(var_2632.astype('int16'), []), relay.reshape(const_2633.astype('int16'), [3840,]), relay.reshape(var_2634.astype('bool'), [120,]), ), 2)
call_2635 = relay.TupleGetItem(func_1528_call(relay.reshape(var_2631.astype('float64'), [3, 2, 13]), relay.reshape(var_2632.astype('int16'), []), relay.reshape(const_2633.astype('int16'), [3840,]), relay.reshape(var_2634.astype('bool'), [120,]), ), 2)
func_858_call = mod.get_global_var('func_858')
func_861_call = mutated_mod.get_global_var('func_861')
var_2643 = relay.var("var_2643", dtype = "float64", shape = (2145,))#candidate|2643|(2145,)|var|float64
call_2642 = relay.TupleGetItem(func_858_call(relay.reshape(var_2643.astype('float64'), [11, 13, 15])), 2)
call_2644 = relay.TupleGetItem(func_861_call(relay.reshape(var_2643.astype('float64'), [11, 13, 15])), 2)
func_1786_call = mod.get_global_var('func_1786')
func_1789_call = mutated_mod.get_global_var('func_1789')
var_2665 = relay.var("var_2665", dtype = "int32", shape = (140,))#candidate|2665|(140,)|var|int32
call_2664 = relay.TupleGetItem(func_1786_call(relay.reshape(var_2665.astype('int32'), [4, 7, 5]), relay.reshape(var_2665.astype('int32'), [4, 7, 5]), ), 0)
call_2666 = relay.TupleGetItem(func_1789_call(relay.reshape(var_2665.astype('int32'), [4, 7, 5]), relay.reshape(var_2665.astype('int32'), [4, 7, 5]), ), 0)
output = relay.Tuple([uop_2627,call_2630,var_2631,var_2632,const_2633,var_2634,call_2642,var_2643,call_2664,var_2665,])
output2 = relay.Tuple([uop_2627,call_2635,var_2631,var_2632,const_2633,var_2634,call_2644,var_2643,call_2666,var_2665,])
func_2683 = relay.Function([var_2626,var_2631,var_2632,var_2634,var_2643,var_2665,], output)
mod['func_2683'] = func_2683
mod = relay.transform.InferType()(mod)
var_2684 = relay.var("var_2684", dtype = "float32", shape = (7, 14, 10))#candidate|2684|(7, 14, 10)|var|float32
var_2685 = relay.var("var_2685", dtype = "float64", shape = (13, 6))#candidate|2685|(13, 6)|var|float64
var_2686 = relay.var("var_2686", dtype = "int16", shape = ())#candidate|2686|()|var|int16
var_2687 = relay.var("var_2687", dtype = "bool", shape = (120,))#candidate|2687|(120,)|var|bool
var_2688 = relay.var("var_2688", dtype = "float64", shape = (2145,))#candidate|2688|(2145,)|var|float64
var_2689 = relay.var("var_2689", dtype = "int32", shape = (140,))#candidate|2689|(140,)|var|int32
output = func_2683(var_2684,var_2685,var_2686,var_2687,var_2688,var_2689,)
func_2690 = relay.Function([var_2684,var_2685,var_2686,var_2687,var_2688,var_2689,], output)
mutated_mod['func_2690'] = func_2690
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2767 = relay.var("var_2767", dtype = "bool", shape = ())#candidate|2767|()|var|bool
var_2768 = relay.var("var_2768", dtype = "bool", shape = (15, 5, 13))#candidate|2768|(15, 5, 13)|var|bool
bop_2769 = relay.logical_and(var_2767.astype('bool'), var_2768.astype('bool')) # shape=(15, 5, 13)
output = bop_2769
output2 = bop_2769
func_2783 = relay.Function([var_2767,var_2768,], output)
mod['func_2783'] = func_2783
mod = relay.transform.InferType()(mod)
var_2784 = relay.var("var_2784", dtype = "bool", shape = ())#candidate|2784|()|var|bool
var_2785 = relay.var("var_2785", dtype = "bool", shape = (15, 5, 13))#candidate|2785|(15, 5, 13)|var|bool
output = func_2783(var_2784,var_2785,)
func_2786 = relay.Function([var_2784,var_2785,], output)
mutated_mod['func_2786'] = func_2786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3137 = relay.var("var_3137", dtype = "int32", shape = ())#candidate|3137|()|var|int32
var_3138 = relay.var("var_3138", dtype = "int32", shape = (12, 2, 15))#candidate|3138|(12, 2, 15)|var|int32
bop_3139 = relay.not_equal(var_3137.astype('bool'), var_3138.astype('bool')) # shape=(12, 2, 15)
func_61_call = mod.get_global_var('func_61')
func_64_call = mutated_mod.get_global_var('func_64')
var_3161 = relay.var("var_3161", dtype = "bool", shape = (1, 120))#candidate|3161|(1, 120)|var|bool
call_3160 = func_61_call(relay.reshape(var_3161.astype('bool'), [5, 6, 4]), relay.reshape(var_3161.astype('bool'), [5, 6, 4]), )
call_3162 = func_61_call(relay.reshape(var_3161.astype('bool'), [5, 6, 4]), relay.reshape(var_3161.astype('bool'), [5, 6, 4]), )
func_130_call = mod.get_global_var('func_130')
func_135_call = mutated_mod.get_global_var('func_135')
var_3170 = relay.var("var_3170", dtype = "int16", shape = (3840,))#candidate|3170|(3840,)|var|int16
call_3169 = relay.TupleGetItem(func_130_call(relay.reshape(var_3137.astype('int16'), []), relay.reshape(var_3170.astype('int16'), [15, 16, 16]), relay.reshape(var_3161.astype('bool'), [120,]), ), 1)
call_3171 = relay.TupleGetItem(func_135_call(relay.reshape(var_3137.astype('int16'), []), relay.reshape(var_3170.astype('int16'), [15, 16, 16]), relay.reshape(var_3161.astype('bool'), [120,]), ), 1)
output = relay.Tuple([bop_3139,call_3160,var_3161,call_3169,var_3170,])
output2 = relay.Tuple([bop_3139,call_3162,var_3161,call_3171,var_3170,])
func_3175 = relay.Function([var_3137,var_3138,var_3161,var_3170,], output)
mod['func_3175'] = func_3175
mod = relay.transform.InferType()(mod)
var_3176 = relay.var("var_3176", dtype = "int32", shape = ())#candidate|3176|()|var|int32
var_3177 = relay.var("var_3177", dtype = "int32", shape = (12, 2, 15))#candidate|3177|(12, 2, 15)|var|int32
var_3178 = relay.var("var_3178", dtype = "bool", shape = (1, 120))#candidate|3178|(1, 120)|var|bool
var_3179 = relay.var("var_3179", dtype = "int16", shape = (3840,))#candidate|3179|(3840,)|var|int16
output = func_3175(var_3176,var_3177,var_3178,var_3179,)
func_3180 = relay.Function([var_3176,var_3177,var_3178,var_3179,], output)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3199 = relay.var("var_3199", dtype = "float32", shape = (11, 10, 10))#candidate|3199|(11, 10, 10)|var|float32
var_3200 = relay.var("var_3200", dtype = "float32", shape = (11, 10, 10))#candidate|3200|(11, 10, 10)|var|float32
bop_3201 = relay.floor_divide(var_3199.astype('float32'), relay.reshape(var_3200.astype('float32'), relay.shape_of(var_3199))) # shape=(11, 10, 10)
output = relay.Tuple([bop_3201,])
output2 = relay.Tuple([bop_3201,])
func_3209 = relay.Function([var_3199,var_3200,], output)
mod['func_3209'] = func_3209
mod = relay.transform.InferType()(mod)
var_3210 = relay.var("var_3210", dtype = "float32", shape = (11, 10, 10))#candidate|3210|(11, 10, 10)|var|float32
var_3211 = relay.var("var_3211", dtype = "float32", shape = (11, 10, 10))#candidate|3211|(11, 10, 10)|var|float32
output = func_3209(var_3210,var_3211,)
func_3212 = relay.Function([var_3210,var_3211,], output)
mutated_mod['func_3212'] = func_3212
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3274 = relay.const([[[9.920410,6.954576,0.600670,-1.559015,-0.314914,-4.515630,-1.124999,7.704333,2.426119,1.644716,-9.097744,-7.218021,3.750860],[4.608343,-8.031249,1.019346,-1.490528,-3.003495,-8.522361,3.478838,-8.206514,-8.473081,9.981986,8.230502,-4.421276,3.301034],[-3.938789,4.851618,-1.545635,-7.903921,0.854850,-3.472421,1.662530,9.344931,9.102017,-0.677385,-4.871458,-9.849916,-9.162708],[-3.781688,6.023777,-4.311274,-9.561099,0.398954,-1.340890,3.759344,6.060339,5.312607,4.750334,6.497496,4.926306,-2.744234],[-1.961810,-9.882416,-6.040856,-7.930428,-6.215533,5.378982,-1.948086,1.008783,4.361280,-2.881233,-1.905666,5.412369,6.530582],[-6.115309,-4.691033,-2.202281,-3.726619,-3.200042,-6.565897,-8.487311,8.125047,7.381863,-8.190221,-1.466046,2.105811,-1.587715],[-7.509353,8.687188,-0.221523,-0.205368,-9.096091,-8.383597,1.074696,0.384956,8.525089,4.440935,-3.655488,-2.644296,9.357616],[-2.441998,7.850543,3.732431,-9.933814,6.040157,-3.708767,3.049278,5.079877,3.345932,-8.454663,-8.659759,-6.111901,-0.508810],[-5.025533,7.453989,7.275248,-7.876107,5.964261,-8.422132,5.055047,-9.750079,-6.473937,-7.218360,5.687736,-4.655286,4.574058],[5.928010,-6.324315,-1.753943,-4.181331,5.690904,4.708529,3.116759,1.754667,-5.189455,6.980247,-0.557169,-2.674610,2.181364],[3.395382,-4.229900,-9.829730,-1.698900,9.147159,4.896551,5.086754,-2.447155,7.451431,0.385944,4.358018,7.319484,-8.689898],[-3.238669,-1.056195,5.773228,-1.314800,-6.367820,8.297520,6.574050,5.297468,6.342150,7.593656,6.440675,4.130203,9.556678],[-3.356793,2.566083,4.504196,-9.190456,-7.908071,0.913545,3.316253,3.498125,-6.479062,5.380854,-2.957938,-9.786807,-9.192718],[-9.449983,-8.694046,7.444148,-4.730339,-0.856033,-7.768944,1.128425,-1.933134,8.343083,5.675981,-1.461158,-2.504186,7.277127],[-7.610472,-7.915477,-6.738031,-0.383913,1.856521,0.693114,3.862083,0.364683,-5.889100,-6.101110,8.257147,-9.521326,-9.352820]],[[-2.914777,4.933087,8.263348,-6.438847,-1.566958,-8.651124,1.411230,-0.754324,2.233206,-8.569273,-4.973805,-2.218418,8.571646],[-6.679085,-3.308960,7.462624,4.144067,-5.082490,-9.569030,2.488062,9.324096,-2.028144,9.782366,-2.884452,-6.501242,8.876427],[6.677045,5.103641,2.254469,5.073205,-7.152432,-4.771578,4.851634,6.836481,5.384006,-2.713226,-7.834112,-8.783693,-9.831673],[3.525022,0.217305,5.120276,-0.114417,-1.536977,-6.265964,4.725763,-4.962633,8.983085,-6.011294,5.096438,2.422778,4.902724],[-4.413630,0.802442,-1.609325,3.632711,3.681633,-0.237148,4.247301,5.805281,-9.757182,9.559922,-2.181270,-5.726534,5.951971],[0.665700,-1.854393,-3.047730,-7.017037,0.054032,-9.416298,-3.041810,0.555351,8.694947,5.196063,-5.894122,9.668339,-0.582964],[-3.788663,2.487408,8.735698,-9.494346,1.005627,-0.710523,-2.910886,-5.077181,5.627570,-8.500546,8.545761,4.437123,-0.783437],[0.834697,6.830783,-8.237257,-8.357333,8.556900,-0.730898,0.422772,1.361991,1.839297,7.900689,-0.515939,-2.532823,4.812260],[0.754436,3.605094,1.559341,4.399845,-7.216542,-7.496379,5.726421,-4.195693,-4.848640,0.150039,-0.406510,3.181805,-6.489118],[-1.568308,1.711163,7.850390,-9.394126,-8.683384,4.650493,4.513483,0.219413,-5.239869,9.539217,-3.838815,0.535642,4.753998],[-7.004732,8.900677,9.902613,-2.339491,-4.071229,0.471386,-8.914964,-6.431455,4.499019,6.913876,8.507131,-7.110528,5.251799],[-9.782894,-8.102028,-8.442895,6.168597,-8.578885,5.791359,3.298440,-0.007893,-1.291187,-3.921569,-9.808394,-4.995032,2.865844],[4.058595,3.997294,-2.018106,0.494848,9.887811,-2.411836,-1.754213,0.573635,6.171674,0.635633,5.734150,-0.620746,-1.595361],[-0.715275,-8.821854,-3.942869,9.488008,-2.775727,-1.161122,-0.142890,6.080280,-7.980950,8.638050,7.247401,-0.769281,-4.925080],[6.585505,9.959422,2.558568,-6.033200,7.047494,-6.015893,-5.586416,8.483709,-3.531686,8.446031,-7.751199,0.458433,5.729784]],[[-9.877871,1.361083,-9.210700,8.111498,-2.937582,9.615728,-1.872850,-2.511332,1.713781,-1.748679,0.852984,-4.642245,-3.927666],[-0.180840,8.828371,3.404143,7.337263,-1.210516,7.955123,6.590980,5.621493,-6.598179,-8.225686,-7.745861,-6.994810,-0.613196],[9.884122,-9.497921,9.207215,-9.693275,-6.340714,-5.809605,-2.669643,3.297537,-0.185077,-4.475521,0.877465,6.718263,6.817807],[5.228417,-6.573724,4.748566,7.079578,-5.139411,-5.635274,3.891241,-9.610265,-8.223224,-1.507489,-9.999356,-0.286786,-6.477480],[4.199522,4.600594,7.912860,-2.266655,-8.354769,-3.768652,2.573693,-7.179418,4.844272,6.362548,2.397652,-0.877109,7.473215],[-8.393493,5.113116,-1.924200,5.689773,1.649599,-7.092357,-0.557347,3.569648,-8.583672,9.522397,-8.271609,-1.412483,-8.064490],[0.284452,-9.784679,6.231922,4.766974,9.623045,-3.133668,3.643563,-4.749199,9.821650,3.836720,1.750033,-0.355383,-1.316897],[2.558089,-6.818450,5.739924,-8.775983,-2.424786,-5.846297,4.665443,3.348523,-2.243530,3.792248,1.127834,-1.514997,-7.604927],[-5.703064,-2.550930,6.404781,-8.076040,-3.788723,-8.614995,8.036937,-8.693564,-1.278708,0.722877,2.606967,-6.553770,-3.315536],[-0.584508,-4.571794,-8.569590,4.423550,-0.733795,-1.728967,-8.087404,-2.244090,-0.871729,9.335724,7.143243,-4.128241,-8.545147],[5.482474,-9.345487,-1.639910,-3.166927,5.348639,5.331936,8.419027,-6.641885,-0.304886,-1.923027,8.073378,-4.380822,-4.127128],[-8.618778,1.002354,-1.506602,0.959462,-3.872441,1.492944,2.929604,-0.578495,8.702601,-4.108262,5.397281,-9.134608,3.360220],[-1.583549,4.432713,5.730483,2.113872,-8.637730,0.834224,4.268524,3.589300,-8.849377,2.452521,4.163260,6.611898,-6.530091],[5.037749,-2.358917,-9.959877,-3.175216,9.479329,1.420592,-7.630407,9.796506,-8.394935,-8.987490,5.287214,-0.965752,6.722329],[-0.850008,7.958175,8.041243,4.540089,3.872309,8.336967,8.139728,0.157393,3.054888,-7.132550,-9.832547,4.332094,-5.980215]],[[2.059417,-7.941948,1.686055,1.978667,0.578542,5.902630,2.419613,4.595744,-2.046161,9.417808,3.214593,-2.502033,5.743596],[-1.588678,1.853561,-9.633976,8.504506,0.119822,7.857635,1.842931,1.282078,3.225195,2.240182,2.340599,-2.194811,-4.122634],[-2.658664,3.803767,0.154981,-3.371255,4.308702,6.318345,8.789603,0.754233,-6.813819,-7.360415,3.087066,-4.755271,-8.719673],[-0.901287,-4.488116,-1.451820,0.573088,1.265999,-2.779291,9.791834,-0.167327,-8.080859,6.852796,-8.952146,2.875013,-3.575381],[-8.335263,2.484753,-7.432181,6.951467,-0.779681,6.597885,-8.348326,-1.988260,3.974368,-7.617549,7.038005,7.634359,-8.885122],[-4.953540,-4.391590,-7.525928,4.367347,9.385533,2.481825,-5.569383,5.972439,-0.465742,-6.202242,-6.764636,-5.397164,3.880855],[5.961495,4.009942,-4.760369,7.245212,-1.587973,-6.202256,-4.754172,4.666648,-4.824090,1.953327,-4.240585,8.037925,8.242857],[-3.409523,-2.791139,6.468540,-4.637200,9.605142,-2.324568,-8.461708,-2.358353,-4.859053,-0.200682,0.935036,7.849305,-7.097321],[-3.914292,5.508837,0.772863,0.664809,5.334035,-5.612363,9.516379,6.891432,-3.997976,-7.250750,-1.626351,1.033109,2.320625],[2.706814,-9.476589,-3.744290,-4.442801,-0.164946,6.704272,4.455875,-1.614403,-8.555288,-4.986398,4.387230,2.470099,2.736040],[-4.241995,9.452350,4.777073,-2.638713,-7.683821,-5.926537,-6.452178,5.486540,7.390616,9.703381,-6.853449,5.881922,0.785070],[3.832162,2.119770,-7.797336,-3.282263,7.605468,-1.523842,9.672599,-0.846055,3.059059,-7.071867,-6.640838,-7.536375,3.659472],[1.159850,2.390382,7.654386,-8.162172,9.235606,-7.371875,-8.815610,-3.372808,5.315723,4.990937,4.460413,3.359168,3.806323],[8.659283,8.165776,-1.690649,-5.191491,9.577957,5.585554,-9.481387,-8.535329,-0.303257,-4.966650,5.360950,-8.871589,7.952608],[-6.919960,3.102227,-3.296204,9.610386,0.454034,-6.605877,1.463083,4.037326,4.478482,7.058121,-4.134044,-9.937237,-7.460792]],[[-2.502411,6.577678,8.825936,-1.741227,9.084579,4.473123,-4.716402,6.315781,-6.406614,-5.091665,3.855800,6.878493,3.332023],[-1.888959,-3.894175,-8.726552,2.282865,-1.885527,1.846382,3.782131,6.623038,5.198303,3.005719,1.747383,4.171289,4.752739],[1.516764,0.984967,-0.486110,8.055956,3.565459,1.545170,0.392392,9.548906,4.834830,6.685755,6.648948,-8.530286,1.944251],[2.181678,-4.958857,9.964295,2.397264,-1.785010,-4.227431,2.536588,1.160053,-4.396457,-6.971559,6.179544,-7.534754,2.766076],[9.311693,-5.181121,1.888061,6.206281,-4.353651,3.252988,-0.357484,1.178524,8.302657,-3.751959,-6.032584,4.591089,-9.038795],[-7.270237,-8.715226,-4.542724,6.395876,-9.022362,-7.572865,-7.527506,6.319831,0.260861,-0.417449,-6.343279,3.095779,-1.487116],[-1.393350,-8.286503,3.144218,5.583314,-2.540092,9.299773,9.496475,-0.429365,-7.745466,-2.833432,2.590005,1.274868,0.413204],[3.558847,-8.885079,-8.065520,-3.155301,3.432430,3.631867,8.124376,-8.970863,8.495529,-0.718091,-3.383952,6.256011,-3.804001],[-0.547333,-0.032992,-0.682541,-1.624912,4.063943,6.687287,0.417067,3.684389,1.362053,4.338717,-7.974425,6.683116,-7.704788],[5.538270,1.480721,-3.817157,4.993300,4.943166,9.549962,-5.161883,-5.845465,-3.205931,-5.900653,-5.926875,-9.427120,1.378687],[-7.331434,0.700787,-3.940315,-0.324701,0.157064,3.360736,2.560920,-6.157090,-5.637819,-2.304383,-9.321381,5.514350,-9.040065],[-6.501407,4.521938,2.134332,7.418579,-8.950532,7.200750,3.986141,-2.514609,9.696519,8.722253,-3.193600,-4.231832,-0.550669],[9.903410,4.398122,7.688890,-2.170617,-8.911053,-8.087398,-9.868134,2.130170,-3.907442,-8.576368,-7.532556,-3.866095,3.750673],[1.762293,3.471366,-5.892895,9.129953,2.157455,-5.763903,6.791579,6.757211,-3.857908,6.548772,-4.424279,-2.192546,-0.133900],[-0.087801,-5.988047,3.970903,-1.963771,8.014250,8.576365,-7.404929,6.005800,-8.877182,9.804630,-8.966706,8.269762,-1.202743]],[[1.379795,1.236952,3.211480,7.785974,1.892004,8.971293,7.554721,6.271625,-5.418376,8.365339,-8.102297,-0.618601,-1.089682],[8.419339,-2.923032,0.118154,-9.421771,9.628291,-6.424263,4.408299,2.412541,5.348235,2.029479,8.677726,6.555877,2.622332],[-6.877379,8.629160,-5.486213,2.997825,-1.213323,2.886652,2.116994,-3.338358,3.638180,1.503499,8.318124,3.397147,3.015995],[-2.855975,-5.107689,-4.434203,5.710102,0.357485,-4.054304,2.548517,2.227563,5.813750,0.001665,-6.049366,1.970483,-1.815686],[4.959449,7.590194,-9.727229,7.919568,2.661015,-4.366188,5.320558,4.749166,-5.975162,3.436670,4.795216,-6.841728,-8.262463],[1.837943,-5.847680,-5.681743,4.148120,1.293792,1.084024,-6.024357,-6.335794,-4.160462,-8.710123,-2.211532,-4.935990,-9.274418],[-3.460134,-9.972833,-1.036181,4.123210,9.053904,-1.475158,7.911348,3.292098,-9.958313,-9.769737,-4.493286,-7.272458,-6.914065],[1.674912,-1.846573,-9.153274,-5.346099,-0.041639,-9.111807,0.051349,8.709682,-9.445129,0.028757,-3.722803,-9.286797,7.743279],[5.217774,0.864975,-6.968372,-4.561010,6.456837,4.190094,0.521281,-4.831309,0.427398,-8.365622,1.314619,-1.271705,-5.304023],[-6.032855,6.968203,4.736050,4.622006,-3.840456,9.330670,8.705972,2.837973,-7.299131,-6.889613,-6.166794,-4.840955,-5.657034],[6.521929,3.063080,4.065741,-1.556163,1.018226,3.783545,5.038342,-7.876153,-3.019548,7.922116,-3.775036,0.501945,-6.617617],[6.861695,-9.301762,-5.719388,-6.687305,7.301640,4.216667,-9.946765,5.634344,3.288505,9.697135,0.176135,3.941186,7.671760],[-2.353872,-0.791565,-1.237660,6.493819,-4.018308,-6.714656,8.608049,-9.522090,-4.590607,0.978551,9.549532,-9.077281,-0.673589],[-7.753532,-4.762548,-3.011427,-0.546711,5.269200,-4.390515,4.386148,-9.733161,8.037861,2.560778,-8.582720,-8.300601,5.666314],[-6.957014,-2.607555,5.590608,5.942126,-6.483421,-8.162216,-0.848186,3.922647,6.976506,2.479827,-6.042790,2.370617,2.289885]],[[5.422295,-4.415309,5.045414,-7.830139,8.845446,-9.839893,0.572686,-0.264319,-1.379946,7.845571,2.575672,-3.877337,-8.358318],[6.004159,4.791874,4.722777,-6.886751,0.150849,0.953837,3.493617,-3.667393,1.211719,-2.118147,7.292146,-7.436632,-1.437640],[6.549891,5.062290,-9.512096,-8.554266,2.526154,-1.423662,5.739605,4.306137,-4.669694,7.081185,-1.783682,-0.293729,0.113631],[9.564460,0.758026,2.424984,6.017295,-5.587114,-3.310821,2.345306,2.277124,2.195737,0.737806,5.170980,-1.580944,-4.254412],[6.540290,3.847404,0.996443,-6.539003,2.965141,9.217009,-7.195095,-1.736982,-3.353346,-5.175680,8.238547,-2.264066,-7.791485],[-9.981233,0.919625,-0.535782,-7.968759,4.065098,-1.257187,-8.039719,9.381139,-0.050447,5.640700,-5.998793,-0.778740,7.044465],[4.754151,9.939566,3.429278,-8.298043,-0.622050,0.096051,-0.186949,-5.318273,8.821490,-3.470828,7.044206,-9.120318,4.058335],[-1.339267,-5.710046,-4.295769,-7.238740,2.685632,0.078925,-1.959514,-7.778096,-0.450291,-7.093348,-6.669722,5.650971,-1.721035],[0.705826,-5.119276,-7.562255,7.252467,-5.305437,-3.636592,6.479760,0.953327,3.400648,-0.254295,8.257394,-1.459690,-0.461765],[7.241035,-8.815356,-9.088397,5.762289,-3.062978,5.584537,-0.258125,6.402914,-8.760103,-4.538817,-0.074675,2.162494,-8.009867],[8.960595,-8.459244,9.815678,-8.809558,-1.870685,1.577137,7.871767,4.884653,8.504213,-7.041998,-5.811192,2.607338,-8.369492],[-6.510286,7.180892,7.769000,4.721150,-0.588511,9.779358,-7.718012,4.268364,3.552069,-9.448535,6.965811,-5.486903,-0.673326],[2.161936,-8.673285,7.320061,9.131506,4.479906,-6.834223,1.214407,3.686056,4.130011,-6.958782,4.135271,7.825847,-3.529662],[-9.719530,-6.255558,0.291774,-5.854010,-2.315603,-6.561303,-5.312944,-9.210603,-6.733390,2.799304,-1.855855,-9.264996,0.582484],[5.528282,0.948103,-3.021108,-6.012710,-9.495857,-5.459354,2.599341,0.935616,-0.185176,6.945019,-7.222728,-7.063274,4.735398]],[[-4.474786,9.490247,-2.931884,-7.393592,-3.275716,5.548014,5.594788,-4.251953,-5.229296,-4.999962,1.517527,-1.504992,3.399994],[2.899659,-5.603880,8.853609,-6.003686,4.513462,7.558220,-7.244592,-4.124882,-3.584333,5.967190,2.334925,1.837071,7.518474],[-7.252293,5.388117,-9.812237,-1.044976,-9.110947,7.708817,-9.520959,5.391993,-3.748044,-8.010181,9.430231,5.394172,4.137517],[-2.595984,-0.830564,-9.176826,8.013248,5.044903,-8.667812,1.681362,1.134749,7.136091,5.192580,1.474060,-6.884670,-9.863925],[-2.766002,-7.701236,-9.348807,-6.292534,6.068884,6.945610,2.098774,-7.950454,-4.935972,-5.013970,9.644596,-2.681523,-6.105293],[-7.078983,5.240906,-5.060958,-0.419726,7.996276,2.199500,-8.779383,-1.827212,-0.832797,-6.921317,9.582430,-8.427627,-9.237890],[4.106196,-2.698769,-5.226762,-7.165872,0.506616,6.986829,-0.743678,-5.448408,5.730223,-0.948098,-7.480529,0.712787,9.002668],[-8.799567,-7.526662,5.921123,5.771465,1.399526,8.244040,0.399607,-7.524820,-3.793050,1.962467,-0.052880,8.414896,0.259470],[7.939210,-6.736801,5.402836,-0.245998,9.401107,-3.425603,7.083690,-2.589142,7.478515,7.665688,4.933118,-1.957325,-6.360780],[6.537151,5.437056,-6.184556,7.639371,-4.937753,2.811035,-0.120395,-5.571586,6.324166,-1.358264,-5.818660,4.586864,9.913935],[-9.718506,8.852663,-3.487442,-0.369610,9.170190,3.771033,-4.038024,-4.730336,-9.558826,-3.353580,0.253186,2.453989,-3.725290],[5.824525,6.100406,-2.194316,5.225925,1.051191,-4.916453,7.858046,-5.312749,-9.540730,-9.989743,-4.747564,6.482741,-4.835757],[-9.906396,-7.112570,5.526895,-7.666685,-1.535223,-5.458553,-4.347572,4.635220,-7.400144,5.407859,0.514948,9.249460,-0.053073],[8.076790,-7.156314,-5.612066,4.645670,1.026255,-7.583967,0.356647,-6.025506,-9.226170,0.349498,7.886654,1.103959,-5.724319],[-0.258035,-2.385316,5.309381,-1.224782,3.791418,-2.591623,0.125665,-9.637903,3.422309,-0.757385,8.403766,1.815255,5.245972]],[[-9.592728,7.369689,5.836526,-2.837587,-2.970391,9.263798,-1.806841,5.246366,2.980688,-5.561065,-2.605993,-3.434611,-4.256034],[-4.261991,-5.986924,-5.636449,-0.379656,-1.320304,-3.918606,3.472779,-5.252516,7.410522,-3.633258,-0.740021,-4.766229,3.419418],[-5.334842,8.370803,7.748300,-7.351758,0.028673,2.325363,-4.488310,-6.731474,-6.416847,1.603744,-3.197740,6.290815,6.664460],[0.236979,4.963019,8.697983,-1.048348,-5.083012,-5.779564,4.652806,3.119356,6.548962,-3.038245,-9.469487,6.721430,-9.950102],[2.104697,-3.001534,4.254586,-3.024023,-4.873642,-6.605306,-9.403361,4.090267,-0.705971,6.707966,4.240740,9.265687,-1.497417],[-5.024187,-3.081952,9.086432,9.182807,-1.936964,4.545666,4.121138,-9.394011,-3.566362,-4.470817,8.494470,8.801286,-1.668030],[9.704662,-2.572415,-7.927061,-0.703115,2.567213,-3.842725,8.991155,2.162014,1.853611,3.937903,7.452113,-8.970737,1.532878],[-5.573877,-7.634406,6.874913,-5.456439,0.596049,-4.645114,5.474673,-1.177495,-0.390496,5.192158,-3.673333,-0.056376,-0.308216],[-7.511455,0.529234,7.051950,-3.426887,0.660121,2.910041,7.103204,-7.647258,-7.849381,-7.690282,0.945713,9.713392,-7.673191],[9.003150,9.368436,-2.527436,-6.591643,9.761303,3.377449,-5.596283,3.682751,3.620352,-7.716123,-1.517815,3.723555,6.218140],[-1.478366,6.634153,8.593691,2.635378,8.304296,-2.578686,-3.544357,0.544427,8.635835,-9.315981,6.083690,9.089801,0.028948],[1.016028,-5.682032,3.300153,0.955387,-5.159669,6.636995,2.682089,9.748286,-4.159187,3.582646,-3.203250,8.727046,0.177609],[-0.614706,9.480684,-2.188185,-6.801209,5.885293,9.860316,6.016736,8.102770,-4.695587,6.724663,-6.568011,1.573954,8.760520],[-9.876809,-8.583569,5.436851,1.456924,-4.154937,1.850621,-6.127209,-4.393112,0.783735,7.525155,-8.799741,4.544798,-8.705184],[2.077581,4.422216,1.682183,-9.378902,4.343361,-3.777792,-0.076431,4.785160,6.744880,-1.393593,4.737806,3.443890,2.190161]],[[-6.762699,8.138134,-6.123036,-1.904896,4.420882,-9.370967,7.579744,-0.339981,-8.208135,-2.568744,-9.348056,2.788738,9.586437],[1.221790,-2.914983,-0.414467,5.426777,8.396496,7.770953,-0.755959,1.909526,-7.780798,-8.269003,-3.358309,9.136955,-1.452872],[-6.802901,-7.790500,7.939082,2.393372,-8.898412,-7.186213,2.708437,-6.090567,-8.895952,-6.944875,4.370143,-4.378658,1.024960],[-0.954156,-6.669954,-5.819116,-5.693433,-6.410797,-7.420174,4.120621,-5.533087,0.421314,4.086364,-5.944649,-2.091170,5.000561],[4.694985,0.353624,-1.321861,0.412259,1.551283,-1.500755,-8.217707,3.495655,-1.155412,-5.890073,-6.284961,-5.248035,6.259662],[0.845860,1.126143,4.220861,4.094681,5.965691,-0.983968,-0.711289,6.325536,3.982963,2.418658,-7.562790,-9.152154,-1.028538],[-4.479822,-0.689728,7.989198,2.062893,7.381627,6.126027,-2.490687,-6.254458,5.687293,-7.167829,7.408239,0.243577,-5.811727],[-3.039685,-1.977313,0.202940,-1.460021,-2.103368,-5.679832,-5.885907,-0.782063,-8.479461,7.453775,1.925615,9.447520,3.890826],[7.561440,4.812612,-5.413279,-5.492463,8.551300,-4.573989,-5.067864,3.791600,-0.439408,-2.902659,-8.485738,4.718364,8.449567],[-2.230166,-8.756468,-5.723351,-2.846885,9.153607,2.652688,7.045262,-2.966900,-5.723133,-5.802904,3.106209,-1.896548,4.437625],[-2.666280,-2.830981,0.307137,-4.972095,-0.763616,-6.401816,-3.991336,3.237809,6.954377,-4.258457,-1.883681,-9.179278,5.526420],[-2.234981,0.026265,-4.657870,-4.096460,-0.767249,1.791543,-5.550410,3.995442,1.434146,-8.825660,4.463140,3.024533,8.794952],[5.464392,1.913599,7.619795,-3.537339,5.577040,-9.948042,5.404962,-2.758323,0.587097,-6.307553,0.570342,9.314454,-3.340826],[3.610107,-2.709718,-4.164304,8.474058,-0.373653,7.014596,3.597307,3.445466,-2.826533,-7.733795,-9.102810,1.762862,-4.605819],[-3.115546,5.759646,3.342210,-0.867532,1.519041,2.877352,-3.531790,-0.255303,-9.427376,9.059641,1.037786,-5.044341,-9.912969]],[[-8.406297,9.473416,-0.514599,-0.114851,-6.984094,-2.477467,9.670069,3.563726,-8.359702,3.877234,9.887861,9.082673,0.713237],[3.337070,-9.552447,-7.140642,6.862449,-7.332577,9.054667,1.063671,-1.695574,3.024823,-7.148228,-0.424409,-9.590060,6.003356],[4.888747,-5.141600,3.842861,-8.455443,9.843829,-7.325390,-4.381893,-7.041706,8.755877,7.747833,-2.874386,-7.830391,-6.646163],[6.253408,-2.822001,-4.268471,8.048053,-3.807717,-9.397667,3.014443,-8.634499,0.237788,-1.176171,-0.500767,6.515336,5.853798],[-5.896245,-8.558686,-0.105348,-7.164268,-4.487393,-9.321303,2.315847,7.582654,3.287113,-6.149296,-4.773201,-9.768239,2.351064],[3.281406,-6.613100,-7.393722,-9.884620,3.684623,7.064817,2.657965,6.940824,1.664890,-1.135935,-2.259244,4.128812,1.437867],[-8.576460,-7.283754,1.189110,3.838381,-0.959615,-8.830854,-8.289531,9.092558,2.689997,-0.185837,-6.432567,-3.385518,-1.083615],[-5.059869,8.754001,2.411397,7.001374,9.097326,1.981668,3.487075,6.357556,-4.312790,3.077182,1.054056,-4.440329,5.366783],[8.307258,-2.262422,5.479139,-3.209465,-7.745544,-7.357129,9.233755,-9.759473,-4.398025,5.632625,-4.725389,-8.971169,7.868496],[-7.482713,5.860285,7.610488,2.403398,-2.969289,-8.280686,9.433768,-9.307237,5.023320,-9.679454,0.775978,9.400187,-5.366785],[-6.631821,4.456497,-6.348972,-1.783785,-9.053741,-3.595833,5.921070,-6.162196,3.926993,-8.893958,9.060557,-2.365240,-4.760309],[8.565135,-5.483599,5.003194,-0.439071,-0.100403,-0.096929,-6.669564,-3.638138,7.273604,7.058599,-0.404373,0.184560,-3.065857],[-7.142442,-5.266993,-3.994097,-7.270184,1.486245,-1.944566,-7.128234,-7.637862,8.647025,2.030678,-9.285713,4.994434,-2.201524],[-1.390014,-9.339604,4.312647,0.768928,1.785608,8.827746,-6.756831,0.534011,-7.568380,-4.405688,0.122141,5.262046,1.923366],[6.678494,5.836110,-8.311789,4.588488,-4.706372,7.985614,2.008975,-5.020909,-3.362239,0.972066,9.381982,-5.237395,6.604489]]], dtype = "float64")#candidate|3274|(11, 15, 13)|const|float64
uop_3275 = relay.acos(const_3274.astype('float64')) # shape=(11, 15, 13)
output = relay.Tuple([uop_3275,])
output2 = relay.Tuple([uop_3275,])
func_3282 = relay.Function([], output)
mod['func_3282'] = func_3282
mod = relay.transform.InferType()(mod)
output = func_3282()
func_3283 = relay.Function([], output)
mutated_mod['func_3283'] = func_3283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_3337 = relay.TupleGetItem(func_3282_call(), 0)
call_3338 = relay.TupleGetItem(func_3283_call(), 0)
output = relay.Tuple([call_3337,])
output2 = relay.Tuple([call_3338,])
func_3339 = relay.Function([], output)
mod['func_3339'] = func_3339
mod = relay.transform.InferType()(mod)
mutated_mod['func_3339'] = func_3339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mutated_mod.get_global_var('func_3339')
call_3340 = func_3339_call()
output = call_3340
func_3341 = relay.Function([], output)
mutated_mod['func_3341'] = func_3341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_3384 = relay.TupleGetItem(func_3339_call(), 0)
call_3385 = relay.TupleGetItem(func_3341_call(), 0)
output = relay.Tuple([call_3384,])
output2 = relay.Tuple([call_3385,])
func_3389 = relay.Function([], output)
mod['func_3389'] = func_3389
mod = relay.transform.InferType()(mod)
mutated_mod['func_3389'] = func_3389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3389_call = mutated_mod.get_global_var('func_3389')
call_3390 = func_3389_call()
output = call_3390
func_3391 = relay.Function([], output)
mutated_mod['func_3391'] = func_3391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_3503 = relay.TupleGetItem(func_3282_call(), 0)
call_3504 = relay.TupleGetItem(func_3283_call(), 0)
const_3519 = relay.constdtype = "float64")#candidate|3519|(11, 15, 13)|const|float64
bop_3520 = relay.maximum(call_3503.astype('int64'), relay.reshape(const_3519.astype('int64'), relay.shape_of(call_3503))) # shape=(11, 15, 13)
bop_3523 = relay.maximum(call_3504.astype('int64'), relay.reshape(const_3519.astype('int64'), relay.shape_of(call_3504))) # shape=(11, 15, 13)
uop_3528 = relay.cosh(const_3519.astype('float32')) # shape=(11, 15, 13)
output = relay.Tuple([bop_3520,uop_3528,])
output2 = relay.Tuple([bop_3523,uop_3528,])
func_3532 = relay.Function([], output)
mod['func_3532'] = func_3532
mod = relay.transform.InferType()(mod)
output = func_3532()
func_3533 = relay.Function([], output)
mutated_mod['func_3533'] = func_3533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_3562 = relay.TupleGetItem(func_3282_call(), 0)
call_3563 = relay.TupleGetItem(func_3283_call(), 0)
func_2113_call = mod.get_global_var('func_2113')
func_2115_call = mutated_mod.get_global_var('func_2115')
var_3566 = relay.var("var_3566", dtype = "int32", shape = (5, 28))#candidate|3566|(5, 28)|var|int32
call_3565 = relay.TupleGetItem(func_2113_call(relay.reshape(var_3566.astype('int32'), [140,])), 0)
call_3567 = relay.TupleGetItem(func_2115_call(relay.reshape(var_3566.astype('int32'), [140,])), 0)
var_3593 = relay.var("var_3593", dtype = "int32", shape = (5, 28))#candidate|3593|(5, 28)|var|int32
bop_3594 = relay.logical_xor(var_3566.astype('int32'), relay.reshape(var_3593.astype('int32'), relay.shape_of(var_3566))) # shape=(5, 28)
output = relay.Tuple([call_3562,call_3565,bop_3594,])
output2 = relay.Tuple([call_3563,call_3567,bop_3594,])
func_3616 = relay.Function([var_3566,var_3593,], output)
mod['func_3616'] = func_3616
mod = relay.transform.InferType()(mod)
var_3617 = relay.var("var_3617", dtype = "int32", shape = (5, 28))#candidate|3617|(5, 28)|var|int32
var_3618 = relay.var("var_3618", dtype = "int32", shape = (5, 28))#candidate|3618|(5, 28)|var|int32
output = func_3616(var_3617,var_3618,)
func_3619 = relay.Function([var_3617,var_3618,], output)
mutated_mod['func_3619'] = func_3619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3389_call = mod.get_global_var('func_3389')
func_3391_call = mutated_mod.get_global_var('func_3391')
call_3627 = relay.TupleGetItem(func_3389_call(), 0)
call_3628 = relay.TupleGetItem(func_3391_call(), 0)
func_858_call = mod.get_global_var('func_858')
func_861_call = mutated_mod.get_global_var('func_861')
call_3650 = relay.TupleGetItem(func_858_call(relay.reshape(call_3627.astype('float64'), [11, 13, 15])), 1)
call_3651 = relay.TupleGetItem(func_861_call(relay.reshape(call_3627.astype('float64'), [11, 13, 15])), 1)
output = relay.Tuple([call_3627,call_3650,])
output2 = relay.Tuple([call_3628,call_3651,])
func_3652 = relay.Function([], output)
mod['func_3652'] = func_3652
mod = relay.transform.InferType()(mod)
output = func_3652()
func_3653 = relay.Function([], output)
mutated_mod['func_3653'] = func_3653
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3657 = relay.const(0.401228, dtype = "float64")#candidate|3657|()|const|float64
var_3658 = relay.var("var_3658", dtype = "float64", shape = (7, 1, 13))#candidate|3658|(7, 1, 13)|var|float64
bop_3659 = relay.less_equal(const_3657.astype('bool'), var_3658.astype('bool')) # shape=(7, 1, 13)
output = bop_3659
output2 = bop_3659
func_3668 = relay.Function([var_3658,], output)
mod['func_3668'] = func_3668
mod = relay.transform.InferType()(mod)
mutated_mod['func_3668'] = func_3668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3669 = relay.var("var_3669", dtype = "float64", shape = (7, 1, 13))#candidate|3669|(7, 1, 13)|var|float64
func_3668_call = mutated_mod.get_global_var('func_3668')
call_3670 = func_3668_call(var_3669)
output = call_3670
func_3671 = relay.Function([var_3669], output)
mutated_mod['func_3671'] = func_3671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_3723 = relay.TupleGetItem(func_3282_call(), 0)
call_3724 = relay.TupleGetItem(func_3283_call(), 0)
uop_3727 = relay.exp(call_3723.astype('float32')) # shape=(11, 15, 13)
uop_3729 = relay.exp(call_3724.astype('float32')) # shape=(11, 15, 13)
bop_3741 = relay.multiply(uop_3727.astype('uint16'), relay.reshape(call_3723.astype('uint16'), relay.shape_of(uop_3727))) # shape=(11, 15, 13)
bop_3744 = relay.multiply(uop_3729.astype('uint16'), relay.reshape(call_3724.astype('uint16'), relay.shape_of(uop_3729))) # shape=(11, 15, 13)
func_2113_call = mod.get_global_var('func_2113')
func_2115_call = mutated_mod.get_global_var('func_2115')
const_3750 = relay.const([2,-10,6,4,-3,5,-9,8,-2,9,-1,-6,2,4,-5,-7,-2,-2,2,-10,6,-2,8,-8,8,-8,-10,6,10,-7,1,-4,2,3,1,-10,9,-4,2,1,1,-1,-4,1,6,-1,-4,4,-8,-2,2,-5,-6,10,-3,7,10,3,4,-2,-3,-9,-5,-7,-10,3,10,3,-9,3,-5,3,10,-3,-3,-7,5,5,7,-4,-10,-10,-7,8,9,-7,4,2,-8,-8,-8,-7,-1,5,-6,-6,8,-9,-3,10,-10,4,6,8,1,-5,3,1,6,-1,-7,-9,4,-1,-6,-7,-7,-10,9,9,4,-8,-5,10,-7,2,-7,-10,-10,8,-1,10,-9,2,-8,7,-2,10,6,-9], dtype = "int32")#candidate|3750|(140,)|const|int32
call_3749 = relay.TupleGetItem(func_2113_call(relay.reshape(const_3750.astype('int32'), [140,])), 0)
call_3751 = relay.TupleGetItem(func_2115_call(relay.reshape(const_3750.astype('int32'), [140,])), 0)
func_3389_call = mod.get_global_var('func_3389')
func_3391_call = mutated_mod.get_global_var('func_3391')
call_3754 = relay.TupleGetItem(func_3389_call(), 0)
call_3755 = relay.TupleGetItem(func_3391_call(), 0)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_3764 = relay.TupleGetItem(func_3339_call(), 0)
call_3765 = relay.TupleGetItem(func_3341_call(), 0)
output = relay.Tuple([bop_3741,call_3749,const_3750,call_3754,call_3764,])
output2 = relay.Tuple([bop_3744,call_3751,const_3750,call_3755,call_3765,])
func_3769 = relay.Function([], output)
mod['func_3769'] = func_3769
mod = relay.transform.InferType()(mod)
mutated_mod['func_3769'] = func_3769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3769_call = mutated_mod.get_global_var('func_3769')
call_3770 = func_3769_call()
output = call_3770
func_3771 = relay.Function([], output)
mutated_mod['func_3771'] = func_3771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3772 = relay.var("var_3772", dtype = "uint32", shape = ())#candidate|3772|()|var|uint32
var_3773 = relay.var("var_3773", dtype = "uint32", shape = (3, 13, 10))#candidate|3773|(3, 13, 10)|var|uint32
bop_3774 = relay.logical_xor(var_3772.astype('uint32'), var_3773.astype('uint32')) # shape=(3, 13, 10)
func_3668_call = mod.get_global_var('func_3668')
func_3671_call = mutated_mod.get_global_var('func_3671')
const_3787 = relay.const([-4.627308,-3.440398,5.196457,9.281384,3.195619,-0.720857,0.625758,6.424065,7.145005,-6.961149,6.457060,-1.387867,-2.702764,5.264994,-4.009402,-8.260440,-7.332927,8.163545,3.004416,-6.355058,-0.195759,5.761495,2.784912,-6.975022,-7.523609,-7.026131,1.576456,1.020332,4.539081,-3.408285,9.425813,-0.994039,4.714571,-0.250742,-2.965491,9.667683,5.284254,9.298462,8.535958,1.295586,-7.194846,-5.325486,-7.199710,0.862346,-1.893869,3.125118,-0.608031,0.779060,-9.752997,9.242925,-5.129794,1.530172,9.862599,-9.279433,-7.834919,7.177517,-7.758675,0.581421,2.755369,-3.256922,-6.224652,7.146431,3.197645,-6.430602,-6.849929,6.239898,-6.240252,-1.684910,7.856959,-1.333909,8.608087,-1.024882,8.379924,-8.145677,-2.553459,3.894971,3.191352,-2.280134,6.693656,-8.970340,-4.994669,1.839328,-9.917920,-7.476447,-9.560924,0.776194,-1.498938,9.532612,5.623977,-3.316033,-2.953279], dtype = "float64")#candidate|3787|(91,)|const|float64
call_3786 = func_3668_call(relay.reshape(const_3787.astype('float64'), [7, 1, 13]))
call_3788 = func_3668_call(relay.reshape(const_3787.astype('float64'), [7, 1, 13]))
bop_3790 = relay.power(var_3772.astype('float32'), call_3786.astype('float32')) # shape=(7, 1, 13)
bop_3793 = relay.power(var_3772.astype('float32'), call_3788.astype('float32')) # shape=(7, 1, 13)
func_26_call = mod.get_global_var('func_26')
func_29_call = mutated_mod.get_global_var('func_29')
var_3795 = relay.var("var_3795", dtype = "float64", shape = (360,))#candidate|3795|(360,)|var|float64
call_3794 = func_26_call(relay.reshape(var_3795.astype('float64'), [12, 15, 2]))
call_3796 = func_26_call(relay.reshape(var_3795.astype('float64'), [12, 15, 2]))
output = relay.Tuple([bop_3774,const_3787,bop_3790,call_3794,var_3795,])
output2 = relay.Tuple([bop_3774,const_3787,bop_3793,call_3796,var_3795,])
func_3821 = relay.Function([var_3772,var_3773,var_3795,], output)
mod['func_3821'] = func_3821
mod = relay.transform.InferType()(mod)
var_3822 = relay.var("var_3822", dtype = "uint32", shape = ())#candidate|3822|()|var|uint32
var_3823 = relay.var("var_3823", dtype = "uint32", shape = (3, 13, 10))#candidate|3823|(3, 13, 10)|var|uint32
var_3824 = relay.var("var_3824", dtype = "float64", shape = (360,))#candidate|3824|(360,)|var|float64
output = func_3821(var_3822,var_3823,var_3824,)
func_3825 = relay.Function([var_3822,var_3823,var_3824,], output)
mutated_mod['func_3825'] = func_3825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_3912 = relay.TupleGetItem(func_3652_call(), 0)
call_3913 = relay.TupleGetItem(func_3653_call(), 0)
func_3209_call = mod.get_global_var('func_3209')
func_3212_call = mutated_mod.get_global_var('func_3212')
const_3922 = relay.const([8.752896,-4.329628,-4.155276,7.516705,7.824376,0.205462,-6.383735,-4.888264,-4.758978,0.255132,3.878389,7.452419,-1.885762,-4.859700,-4.178200,-3.536143,9.957168,-8.631914,-0.521705,0.172245,-2.353560,4.140290,-2.694169,-7.027855,-9.525442,9.307871,1.367988,-5.525532,-3.674505,5.153193,6.179531,6.446788,8.735062,-9.241081,1.861998,8.212550,-8.172206,7.849454,-8.378162,-3.800795,1.875278,2.371914,-5.672691,2.524956,-3.086209,2.936417,-1.872465,-3.611685,-3.608391,9.718475,9.401297,-0.536605,-5.095250,-5.676362,4.923103,8.402238,4.794754,0.056354,2.064423,-9.543862,-9.955276,3.086622,-3.108359,-2.020400,-8.054514,6.540830,-8.088244,-5.801496,8.308157,-2.326708,5.442937,4.009502,-9.215437,-9.755185,4.812721,0.781607,-4.109231,5.648250,-8.908942,-3.018566,4.048975,-2.275321,2.578254,-9.643123,-5.104815,0.392264,7.332283,-9.565836,0.795276,8.717424,3.704705,-6.916002,3.617684,1.522426,0.148764,-0.669114,9.134899,6.174689,3.390360,8.010677,-7.030659,5.723882,1.275350,8.237669,-9.867985,-1.042822,5.613402,-8.934920,-7.818317,-5.816807,8.067911,-9.573225,-8.612512,3.595663,-0.263065,4.782091,8.532648,-8.954568,-3.290925,6.019692,-2.335902,-8.424949,2.400829,-2.185755,-4.516967,4.101707,5.570217,-3.708001,4.932646,-8.192656,-6.947535,-4.327083,-0.866456,6.644913,-8.953051,-6.069666,-6.766791,-1.036161,0.810822,0.039207,-1.333483,8.259321,-8.218041,7.882187,8.673646,8.325195,5.307680,5.954633,-2.094487,-7.066449,4.197552,1.090013,2.982937,8.945158,-1.385199,8.782036,-4.144804,6.309720,-6.635779,-1.659084,-0.223106,-1.070842,-2.283758,0.617803,-8.099464,5.696554,-7.789481,4.507430,1.213835,-7.263611,8.180395,-3.446520,-6.325183,-5.396748,-8.235103,-0.540804,4.931071,-5.575657,-2.321746,-9.211189,5.093241,1.212995,9.146534,5.543190,4.441590,-8.366918,7.741899,-5.680570,-7.406293,5.949846,-5.845826,5.566635,-0.075256,8.321655,-2.250539,8.636785,3.851099,8.202663,0.701575,4.896772,8.119499,4.721406,-3.096390,-1.708220,-3.700278,9.447199,-0.123541,-9.096313,-6.538908,8.280978,-0.061886,-6.385090,8.006764,-4.196238,5.292185,-9.896417,0.808770,4.963431,0.657366,5.559223,8.959617,-3.004746,0.153345,-8.449854,-3.356430,-4.405908,-6.838101,7.465705,3.740692,-2.659602,1.983037,0.536328,-9.643794,4.586707,-7.859564,-9.696062,6.521732,0.267556,2.478352,9.152546,-2.905471,-6.085529,-3.580205,-3.396054,8.325806,-0.321018,4.973222,-4.809475,4.151916,-0.754982,-4.873885,4.812187,9.020116,-0.203356,9.642269,7.073429,-1.895370,-5.822336,1.311522,-6.793893,-9.198164,2.338174,-8.164673,8.782949,9.457308,5.970823,-2.761731,-9.133572,-6.619848,0.088219,-9.497743,6.802018,-2.713969,5.061700,-1.620281,7.221705,6.215933,8.354006,-8.425373,5.897184,-2.224305,9.647537,8.551478,-4.582781,-7.621339,4.848018,-4.106941,0.427421,3.888830,-1.573035,-2.778589,-6.805323,9.835627,4.882386,-5.338973,6.509718,-2.594465,-5.231581,-8.956901,1.633344,-9.451313,7.232039,5.607483,6.701534,-5.768435,-4.888468,4.536375,-3.857339,-2.090193,-1.718721,-2.276613,1.593815,-4.720657,-7.045035,7.352223,-4.979162,7.129490,-1.976919,-5.998091,0.094890,-6.587990,-6.048227,-3.461946,-5.308683,-8.746094,8.643557,-5.322763,2.117386,-1.757643,-7.382082,7.347780,1.199476,-8.870073,3.048166,-3.811534,7.735639,1.069493,-0.577531,-2.796555,-5.932800,-5.683603,3.377398,6.802824,8.108769,8.828935,7.597871,-6.661826,2.787303,-3.461270,-9.991244,4.900438,5.449902,8.626176,-2.357224,-8.388777,-4.811269,-1.070173,-0.860481,4.384952,-3.609297,3.076148,1.512511,-7.838275,-2.716517,-5.659003,4.216753,3.915932,-5.554605,5.471056,-5.078541,6.572082,-2.268829,4.587484,2.125317,-3.405380,7.557625,5.211289,-5.791958,8.158081,7.841573,7.477517,6.526633,6.630137,9.379946,-8.390734,8.064575,-2.165529,8.980721,-8.693826,-2.686803,-0.380155,-1.898847,9.715485,-7.006249,0.061806,-9.400595,-0.005366,5.824701,0.861918,-2.844491,2.434115,4.784474,7.184037,3.627691,-2.322246,7.889030,4.863314,-4.053290,-8.537405,1.358344,-1.997907,-0.557417,3.289398,5.323822,-4.834881,-2.769695,9.415424,4.293457,-7.783260,-0.520966,2.047817,-5.903481,4.563079,4.752483,6.006131,7.851905,-7.184483,-8.602422,-9.109504,-8.949065,-5.943964,-0.739321,-3.089272,-1.191061,-1.992685,4.887200,-1.402298,-4.325212,6.496010,9.113898,-4.202279,-7.781434,-2.618344,-2.727715,-8.512366,9.906063,9.775499,-6.401415,-9.941302,-2.572293,0.443653,-8.614982,4.301931,9.373317,-7.081849,1.427023,-5.915476,1.477191,9.003502,3.338342,-2.864623,-7.705695,-9.431736,3.685489,6.601392,9.351442,-9.705973,1.653178,-6.631926,-6.171027,4.612291,1.257235,5.095529,1.567075,-8.557730,1.944256,7.358209,-9.242169,-0.652493,-7.522102,6.348319,3.073889,5.435882,-2.931206,6.164873,-4.495009,-3.270899,-1.835033,-9.236585,-0.031526,-0.324944,8.220194,5.343177,4.969800,-2.102487,-8.275162,3.954262,3.831783,-4.738391,-5.753353,-6.523151,-3.843201,-3.275882,-4.718233,-6.653292,5.254507,-8.661257,8.558730,-3.305855,-9.159830,-9.729204,6.473276,-1.906089,7.317656,-5.637490,-8.592320,-3.316900,5.007141,-9.363485,-0.031663,1.373968,1.315098,-9.957797,9.425558,-1.084039,3.019243,-2.993839,-3.006722,4.517696,0.562358,-4.045764,-3.670867,3.739963,3.818235,-9.934994,-7.854057,-3.049434,8.660266,-2.818149,4.203383,-4.934492,-2.894218,6.567000,7.817528,-7.004038,-0.848978,5.231678,5.762929,1.328992,-8.434905,-4.864102,1.048697,-9.906234,-2.794548,3.305673,5.731206,-7.834622,0.250220,6.381295,8.993151,7.451788,-9.791920,-4.974401,9.737611,-7.437884,4.227963,5.447877,7.574430,-6.147478,-7.039636,-6.032851,7.814359,1.568633,-8.102501,-4.082393,-9.485609,-6.567700,-1.433801,5.498194,-4.947946,9.214184,-3.119838,-4.767369,-0.613439,6.385137,-0.343595,2.357163,9.756736,-5.835278,3.583206,2.923706,5.022979,-0.914762,-6.523939,1.046295,1.101205,0.110558,4.003498,-9.136413,-3.364384,0.496525,8.096218,-0.881704,2.952227,-0.489758,6.018818,9.107956,6.735702,-8.042138,3.768673,-3.929223,-3.458370,-5.944427,7.532609,-7.811636,1.574439,0.651314,-4.708971,4.372703,-6.867831,-8.223753,0.540585,-5.279962,9.984994,-0.881289,7.054058,0.789657,-5.561016,9.077259,-4.807594,6.493422,6.966271,-5.458970,7.186150,-3.013429,-1.620025,3.892411,-1.433003,-2.805229,4.452327,-7.119588,-4.363041,-3.392431,0.589937,-6.930165,6.330688,1.629920,-9.014412,-4.618871,0.673486,-0.960708,5.554143,3.869552,0.964808,9.759786,2.929987,0.852925,-3.531829,-4.606175,-9.709138,4.390813,4.275393,-7.289017,5.479032,2.259193,8.143275,-3.086316,0.082960,-4.091092,6.042474,9.535665,9.134088,-7.379389,3.831357,-4.843223,-9.935390,0.383422,-9.383450,5.306474,0.665035,2.198044,-7.188193,2.377020,4.525515,9.026960,-7.292489,2.917005,9.510630,1.697094,6.277074,-2.169283,4.778354,3.526999,-4.503844,1.367916,0.956152,-6.218089,-4.266895,6.347212,-6.990483,2.191636,-3.344089,-6.983763,-3.669286,-4.729268,9.280630,5.295039,-3.750104,5.918438,-8.930512,-8.563291,5.939971,4.174910,7.142870,6.241312,0.398562,-6.117948,-1.777692,-9.426271,-0.968076,-2.539224,7.621463,-9.088087,-2.680977,-1.614743,6.295773,-8.156740,-8.434598,-4.705629,-0.775970,2.340893,-6.541156,6.769343,-9.243517,-4.923497,-3.611370,6.375466,-7.832849,-7.109589,7.690957,5.196224,4.124636,6.316451,-0.177261,7.233751,3.687986,-4.258289,-9.406411,-8.858394,0.934558,7.841014,5.708930,-0.857638,4.627100,-8.703641,0.935304,7.059343,7.611522,-5.786694,-0.948409,2.627193,-0.728267,-4.776142,3.945511,-3.534429,0.581559,9.458856,-5.443333,-9.132863,-1.089208,-3.884077,5.535719,-0.047469,-7.806912,-7.301352,9.773820,-7.434460,9.922670,-8.604856,-6.783733,-3.541229,8.388428,-0.500155,7.229232,5.474710,-7.820557,1.927010,9.553990,-1.758293,2.399150,-1.760669,-5.635487,-6.679281,9.514798,5.636696,7.445841,4.807121,0.641643,-0.911079,3.470812,-6.417175,2.259247,5.278817,9.558372,-3.530455,-0.443828,0.649500,-0.873073,-2.715555,3.982084,2.989611,0.384368,4.576058,-2.732664,6.887131,7.290974,7.746993,-1.950579,7.786157,9.668869,-4.332749,-0.020957,-1.879816,0.136514,3.692436,-3.495676,-2.975968,2.422171,-9.026505,6.696146,3.402606,9.716430,-3.873838,7.205516,-0.890548,6.995701,-3.001686,-6.497644,-4.907316,-1.711310,-1.767125,-8.167530,-3.332693,-5.240083,-9.047801,8.732006,-8.777615,-9.177052,-7.517871,-1.666072,-4.457976,8.635341,-0.967377,-8.474589,1.075417,-2.043333,9.008063,-3.533088,-8.274591,8.082476,5.580876,3.242711,1.937503,-9.632814,8.879028,-2.385448,-4.401174,7.871178,-6.312402,-8.013402,-9.282422,3.789821,4.775673,2.269868,5.158563,-0.140792,8.452449,-9.864291,-3.705164,-7.813401,-5.455879,7.424312,-4.736657,1.718744,-1.528375,0.921867,-9.277507,9.058964,-9.403102,1.083441,7.568564,-4.280067,4.947728,6.764030,9.772389,-2.085299,5.533709,3.178539,-7.112022,-8.407888,-3.791505,8.205999,-3.289547,-8.122830,8.935316,-5.012576,-6.785795,-8.838926,-3.737626,4.511998,5.475017,7.909775,6.074602,0.834651,9.525352,9.722839,7.009911,-9.094413,0.103045,-8.032248,-9.501178,7.744330,-7.816180,3.758027,6.759834,-3.242720,-4.448300,7.250876,-2.399970,5.092580,-8.015520,8.740589,6.443113,-0.451803,4.028845,9.199663,9.163105,-3.031862,-3.019935,-9.881732,-7.527383,6.907231,-8.778764,-3.670172,1.460257,-2.910207,-3.433143,1.399033,9.116838,-4.712349,-7.897455,9.019761,-1.974977,3.245346,6.222586,3.195503,1.005989,-8.445976,8.357413,-1.617902,-1.854409,3.239896,3.875588,-6.642810,-3.732769,8.496149,-6.735800,-4.474079,-9.807573,-5.524336,-4.480587,6.841116,-8.289108,6.700536,-9.103078,-2.849851,8.167925,-3.182506,-1.462442,1.319894,2.105446,5.378618,9.124645,7.174295,-3.265358,7.828585,3.138740,-4.363230,-1.010297,8.328102,0.089969,8.941974,4.013475,6.990533,-9.956864,-2.631756,7.243413,-7.279860,-9.452601,-7.849049,6.239944,9.677628,-0.543182,-7.706826,4.266786,-6.462820,0.495912,5.072657,7.600125,-6.182726,-8.810151,0.724794,-3.531644,-0.651753,5.010242,8.950838,0.183016,2.828775,-3.651282,-1.220009,-5.365377,1.484865,9.432477,-4.809326,1.317241,-8.796542,-4.392317,-0.977724,8.460227,7.737392,6.729852,4.928556,5.399299,1.201449,-5.402883,4.101187,-2.298829,-4.488861,-0.622208,-2.329707,1.139968,4.954788,-1.639087,5.101764,-8.788375,7.708790,6.936129,-0.617059,4.939434,5.364156,-0.184494,-4.628744,6.720159,-7.726061,-5.570265,1.663597,7.330515,0.774322,-9.240746,-7.540308,3.563393,3.881229,-7.074283,6.829016,4.910015,-1.135951,4.493751,-5.896476,2.239232,-2.330972,1.655160,-0.862178,-3.777272,-7.340541,-0.864380,-5.212709,-6.683405,-7.681915,6.875796,1.962537,-9.837725,-5.079855,-6.422179,-1.474649,2.122736,3.381027,1.221300,-7.867182,6.329246,-8.771748,4.028307,8.740428,-5.736559,-8.550030,2.927331,-5.512672,4.238439,-6.778300,0.088229,-9.924118], dtype = "float32")#candidate|3922|(1100,)|const|float32
call_3921 = relay.TupleGetItem(func_3209_call(relay.reshape(const_3922.astype('float32'), [11, 10, 10]), relay.reshape(const_3922.astype('float32'), [11, 10, 10]), ), 0)
call_3923 = relay.TupleGetItem(func_3212_call(relay.reshape(const_3922.astype('float32'), [11, 10, 10]), relay.reshape(const_3922.astype('float32'), [11, 10, 10]), ), 0)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_3940 = relay.TupleGetItem(func_3532_call(), 0)
call_3941 = relay.TupleGetItem(func_3533_call(), 0)
func_3209_call = mod.get_global_var('func_3209')
func_3212_call = mutated_mod.get_global_var('func_3212')
call_3949 = relay.TupleGetItem(func_3209_call(relay.reshape(const_3922.astype('float32'), [11, 10, 10]), relay.reshape(call_3921.astype('float32'), [11, 10, 10]), ), 0)
call_3950 = relay.TupleGetItem(func_3212_call(relay.reshape(const_3922.astype('float32'), [11, 10, 10]), relay.reshape(call_3921.astype('float32'), [11, 10, 10]), ), 0)
bop_3960 = relay.less_equal(call_3940.astype('bool'), relay.reshape(call_3912.astype('bool'), relay.shape_of(call_3940))) # shape=(11, 15, 13)
bop_3963 = relay.less_equal(call_3941.astype('bool'), relay.reshape(call_3913.astype('bool'), relay.shape_of(call_3941))) # shape=(11, 15, 13)
uop_3966 = relay.sin(call_3949.astype('float32')) # shape=(11, 10, 10)
uop_3968 = relay.sin(call_3950.astype('float32')) # shape=(11, 10, 10)
uop_3973 = relay.cos(uop_3966.astype('float32')) # shape=(11, 10, 10)
uop_3975 = relay.cos(uop_3968.astype('float32')) # shape=(11, 10, 10)
func_858_call = mod.get_global_var('func_858')
func_861_call = mutated_mod.get_global_var('func_861')
call_3980 = relay.TupleGetItem(func_858_call(relay.reshape(call_3940.astype('float64'), [11, 13, 15])), 1)
call_3981 = relay.TupleGetItem(func_861_call(relay.reshape(call_3940.astype('float64'), [11, 13, 15])), 1)
output = relay.Tuple([call_3921,const_3922,bop_3960,uop_3973,call_3980,])
output2 = relay.Tuple([call_3923,const_3922,bop_3963,uop_3975,call_3981,])
func_3990 = relay.Function([], output)
mod['func_3990'] = func_3990
mod = relay.transform.InferType()(mod)
mutated_mod['func_3990'] = func_3990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3990_call = mutated_mod.get_global_var('func_3990')
call_3991 = func_3990_call()
output = call_3991
func_3992 = relay.Function([], output)
mutated_mod['func_3992'] = func_3992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_4050 = relay.TupleGetItem(func_3652_call(), 1)
call_4051 = relay.TupleGetItem(func_3653_call(), 1)
output = call_4050
output2 = call_4051
func_4055 = relay.Function([], output)
mod['func_4055'] = func_4055
mod = relay.transform.InferType()(mod)
mutated_mod['func_4055'] = func_4055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4055_call = mutated_mod.get_global_var('func_4055')
call_4056 = func_4055_call()
output = call_4056
func_4057 = relay.Function([], output)
mutated_mod['func_4057'] = func_4057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3769_call = mod.get_global_var('func_3769')
func_3771_call = mutated_mod.get_global_var('func_3771')
call_4063 = relay.TupleGetItem(func_3769_call(), 4)
call_4064 = relay.TupleGetItem(func_3771_call(), 4)
func_61_call = mod.get_global_var('func_61')
func_64_call = mutated_mod.get_global_var('func_64')
const_4078 = relay.const([[False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,False,False,True],[True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,True],[False,False,True,False,True,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True],[True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False],[True,True,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,False],[True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False]], dtype = "bool")#candidate|4078|(6, 20)|const|bool
call_4077 = func_61_call(relay.reshape(const_4078.astype('bool'), [5, 6, 4]), relay.reshape(const_4078.astype('bool'), [5, 6, 4]), )
call_4079 = func_61_call(relay.reshape(const_4078.astype('bool'), [5, 6, 4]), relay.reshape(const_4078.astype('bool'), [5, 6, 4]), )
output = relay.Tuple([call_4063,call_4077,const_4078,])
output2 = relay.Tuple([call_4064,call_4079,const_4078,])
func_4108 = relay.Function([], output)
mod['func_4108'] = func_4108
mod = relay.transform.InferType()(mod)
mutated_mod['func_4108'] = func_4108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4108_call = mutated_mod.get_global_var('func_4108')
call_4109 = func_4108_call()
output = call_4109
func_4110 = relay.Function([], output)
mutated_mod['func_4110'] = func_4110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_4166 = relay.TupleGetItem(func_3339_call(), 0)
call_4167 = relay.TupleGetItem(func_3341_call(), 0)
func_3175_call = mod.get_global_var('func_3175')
func_3180_call = mutated_mod.get_global_var('func_3180')
var_4174 = relay.var("var_4174", dtype = "int32", shape = ())#candidate|4174|()|var|int32
const_4175 = relay.const([-2,3,-6,10,9,-9,5,-2,8,1,-1,-4,-3,8,-6,1,-2,5,1,1,-9,2,4,-6,-7,6,5,4,8,9,-9,-3,-7,8,-6,-9,-9,3,-6,-8,4,-10,-5,-7,6,-9,10,-5,-2,4,-4,-5,3,-8,6,1,1,1,8,1,5,1,3,2,-1,-5,1,-9,9,5,-5,-7,10,2,-5,-3,2,8,10,-1,8,7,6,-4,-7,-10,5,-7,-3,-2,4,3,-9,-1,10,-9,6,8,6,-6,-10,3,4,-2,-1,-7,10,-10,2,-8,-3,-3,-5,-2,-2,1,-7,-9,6,-7,-8,3,8,-6,7,3,1,9,-6,6,-1,9,-3,8,4,8,4,9,-9,2,-9,3,10,7,-5,1,-9,-6,3,-2,3,-6,-5,9,-1,7,-4,1,4,-10,-10,7,-3,2,8,2,5,-8,-2,4,8,5,-2,7,-6,-7,10,-8,8,1,-5,7,1,-10,-4,8,6,3,-2,5,7,-4,7,-2,-1,1,5,6,5,1,-10,1,-4,5,-7,4,4,3,-2,-6,-7,9,-7,10,-10,-3,-1,8,1,3,-6,1,7,-1,8,-1,4,-9,-4,-5,1,7,-4,-9,-2,2,1,6,-7,6,6,-8,-9,3,5,8,-8,10,-1,7,-1,-9,-2,10,-4,3,-6,-10,10,-6,3,-3,-8,5,1,-3,2,-5,-1,-4,-1,-6,-1,-4,2,-8,-6,8,-5,5,4,10,-2,-10,10,-9,-4,10,1,-6,5,-10,6,-5,10,9,-8,1,4,2,-7,4,3,-5,-9,-9,-7,-3,8,6,-6,1,-5,-3,-4,-2,-5,2,-10,6,2,-4,-6,-1,-3,-10,3,-4,-4,5,5,10,-4,9,3,-5,-3,-1,-6,-1,1,-9,-3,-1,3,8,3,-7,2,3,3,8,7,-3,4,-3,5,7,6,-8], dtype = "int32")#candidate|4175|(360,)|const|int32
var_4176 = relay.var("var_4176", dtype = "bool", shape = (120,))#candidate|4176|(120,)|var|bool
var_4177 = relay.var("var_4177", dtype = "int16", shape = (16, 240))#candidate|4177|(16, 240)|var|int16
call_4173 = relay.TupleGetItem(func_3175_call(relay.reshape(var_4174.astype('int32'), []), relay.reshape(const_4175.astype('int32'), [12, 2, 15]), relay.reshape(var_4176.astype('bool'), [1, 120]), relay.reshape(var_4177.astype('int16'), [3840,]), ), 3)
call_4178 = relay.TupleGetItem(func_3180_call(relay.reshape(var_4174.astype('int32'), []), relay.reshape(const_4175.astype('int32'), [12, 2, 15]), relay.reshape(var_4176.astype('bool'), [1, 120]), relay.reshape(var_4177.astype('int16'), [3840,]), ), 3)
func_2113_call = mod.get_global_var('func_2113')
func_2115_call = mutated_mod.get_global_var('func_2115')
var_4180 = relay.var("var_4180", dtype = "int32", shape = (70, 2))#candidate|4180|(70, 2)|var|int32
call_4179 = relay.TupleGetItem(func_2113_call(relay.reshape(var_4180.astype('int32'), [140,])), 0)
call_4181 = relay.TupleGetItem(func_2115_call(relay.reshape(var_4180.astype('int32'), [140,])), 0)
output = relay.Tuple([call_4166,call_4173,var_4174,const_4175,var_4176,var_4177,call_4179,var_4180,])
output2 = relay.Tuple([call_4167,call_4178,var_4174,const_4175,var_4176,var_4177,call_4181,var_4180,])
func_4183 = relay.Function([var_4174,var_4176,var_4177,var_4180,], output)
mod['func_4183'] = func_4183
mod = relay.transform.InferType()(mod)
mutated_mod['func_4183'] = func_4183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4183_call = mutated_mod.get_global_var('func_4183')
var_4185 = relay.var("var_4185", dtype = "int32", shape = ())#candidate|4185|()|var|int32
var_4186 = relay.var("var_4186", dtype = "bool", shape = (120,))#candidate|4186|(120,)|var|bool
var_4187 = relay.var("var_4187", dtype = "int16", shape = (16, 240))#candidate|4187|(16, 240)|var|int16
var_4188 = relay.var("var_4188", dtype = "int32", shape = (70, 2))#candidate|4188|(70, 2)|var|int32
call_4184 = func_4183_call(var_4185,var_4186,var_4187,var_4188,)
output = call_4184
func_4189 = relay.Function([var_4185,var_4186,var_4187,var_4188,], output)
mutated_mod['func_4189'] = func_4189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4108_call = mod.get_global_var('func_4108')
func_4110_call = mutated_mod.get_global_var('func_4110')
call_4214 = relay.TupleGetItem(func_4108_call(), 2)
call_4215 = relay.TupleGetItem(func_4110_call(), 2)
output = relay.Tuple([call_4214,])
output2 = relay.Tuple([call_4215,])
func_4225 = relay.Function([], output)
mod['func_4225'] = func_4225
mod = relay.transform.InferType()(mod)
output = func_4225()
func_4226 = relay.Function([], output)
mutated_mod['func_4226'] = func_4226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4297 = relay.var("var_4297", dtype = "uint32", shape = (1, 6, 3))#candidate|4297|(1, 6, 3)|var|uint32
var_4298 = relay.var("var_4298", dtype = "uint32", shape = (3, 6, 3))#candidate|4298|(3, 6, 3)|var|uint32
bop_4299 = relay.bitwise_and(var_4297.astype('uint32'), var_4298.astype('uint32')) # shape=(3, 6, 3)
output = bop_4299
output2 = bop_4299
func_4303 = relay.Function([var_4297,var_4298,], output)
mod['func_4303'] = func_4303
mod = relay.transform.InferType()(mod)
var_4304 = relay.var("var_4304", dtype = "uint32", shape = (1, 6, 3))#candidate|4304|(1, 6, 3)|var|uint32
var_4305 = relay.var("var_4305", dtype = "uint32", shape = (3, 6, 3))#candidate|4305|(3, 6, 3)|var|uint32
output = func_4303(var_4304,var_4305,)
func_4306 = relay.Function([var_4304,var_4305,], output)
mutated_mod['func_4306'] = func_4306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_4321 = relay.TupleGetItem(func_3282_call(), 0)
call_4322 = relay.TupleGetItem(func_3283_call(), 0)
const_4323 = relay.constdtype = "float64")#candidate|4323|(11, 15, 13)|const|float64
bop_4324 = relay.floor_mod(call_4321.astype('float64'), relay.reshape(const_4323.astype('float64'), relay.shape_of(call_4321))) # shape=(11, 15, 13)
bop_4327 = relay.floor_mod(call_4322.astype('float64'), relay.reshape(const_4323.astype('float64'), relay.shape_of(call_4322))) # shape=(11, 15, 13)
output = relay.Tuple([bop_4324,])
output2 = relay.Tuple([bop_4327,])
func_4334 = relay.Function([], output)
mod['func_4334'] = func_4334
mod = relay.transform.InferType()(mod)
output = func_4334()
func_4335 = relay.Function([], output)
mutated_mod['func_4335'] = func_4335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_4336 = relay.TupleGetItem(func_3282_call(), 0)
call_4337 = relay.TupleGetItem(func_3283_call(), 0)
func_4303_call = mod.get_global_var('func_4303')
func_4306_call = mutated_mod.get_global_var('func_4306')
const_4346 = relay.const([-4,-4,-2,2,-10,3,-1,8,8,-6,9,-9,-5,-9,-3,-6,1,-7], dtype = "uint32")#candidate|4346|(18,)|const|uint32
var_4347 = relay.var("var_4347", dtype = "uint32", shape = (54,))#candidate|4347|(54,)|var|uint32
call_4345 = func_4303_call(relay.reshape(const_4346.astype('uint32'), [1, 6, 3]), relay.reshape(var_4347.astype('uint32'), [3, 6, 3]), )
call_4348 = func_4303_call(relay.reshape(const_4346.astype('uint32'), [1, 6, 3]), relay.reshape(var_4347.astype('uint32'), [3, 6, 3]), )
bop_4352 = relay.add(call_4345.astype('uint16'), relay.reshape(var_4347.astype('uint16'), relay.shape_of(call_4345))) # shape=(3, 6, 3)
bop_4355 = relay.add(call_4348.astype('uint16'), relay.reshape(var_4347.astype('uint16'), relay.shape_of(call_4348))) # shape=(3, 6, 3)
func_3769_call = mod.get_global_var('func_3769')
func_3771_call = mutated_mod.get_global_var('func_3771')
call_4366 = relay.TupleGetItem(func_3769_call(), 2)
call_4367 = relay.TupleGetItem(func_3771_call(), 2)
const_4369 = relay.constdtype = "float64")#candidate|4369|(11, 15, 13)|const|float64
bop_4370 = relay.power(call_4336.astype('float32'), relay.reshape(const_4369.astype('float32'), relay.shape_of(call_4336))) # shape=(11, 15, 13)
bop_4373 = relay.power(call_4337.astype('float32'), relay.reshape(const_4369.astype('float32'), relay.shape_of(call_4337))) # shape=(11, 15, 13)
uop_4379 = relay.log(bop_4370.astype('float64')) # shape=(11, 15, 13)
uop_4381 = relay.log(bop_4373.astype('float64')) # shape=(11, 15, 13)
output = relay.Tuple([const_4346,bop_4352,call_4366,uop_4379,])
output2 = relay.Tuple([const_4346,bop_4355,call_4367,uop_4381,])
func_4400 = relay.Function([var_4347,], output)
mod['func_4400'] = func_4400
mod = relay.transform.InferType()(mod)
var_4401 = relay.var("var_4401", dtype = "uint32", shape = (54,))#candidate|4401|(54,)|var|uint32
output = func_4400(var_4401)
func_4402 = relay.Function([var_4401], output)
mutated_mod['func_4402'] = func_4402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3769_call = mod.get_global_var('func_3769')
func_3771_call = mutated_mod.get_global_var('func_3771')
call_4404 = relay.TupleGetItem(func_3769_call(), 3)
call_4405 = relay.TupleGetItem(func_3771_call(), 3)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_4413 = relay.TupleGetItem(func_3339_call(), 0)
call_4414 = relay.TupleGetItem(func_3341_call(), 0)
func_2783_call = mod.get_global_var('func_2783')
func_2786_call = mutated_mod.get_global_var('func_2786')
const_4418 = relay.const(False, dtype = "bool")#candidate|4418|()|const|bool
const_4419 = relay.const([True,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False], dtype = "bool")#candidate|4419|(975,)|const|bool
call_4417 = func_2783_call(relay.reshape(const_4418.astype('bool'), []), relay.reshape(const_4419.astype('bool'), [15, 5, 13]), )
call_4420 = func_2783_call(relay.reshape(const_4418.astype('bool'), []), relay.reshape(const_4419.astype('bool'), [15, 5, 13]), )
bop_4423 = relay.greater_equal(const_4418.astype('bool'), const_4419.astype('bool')) # shape=(975,)
output = relay.Tuple([call_4404,call_4413,call_4417,bop_4423,])
output2 = relay.Tuple([call_4405,call_4414,call_4420,bop_4423,])
func_4426 = relay.Function([], output)
mod['func_4426'] = func_4426
mod = relay.transform.InferType()(mod)
mutated_mod['func_4426'] = func_4426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4426_call = mutated_mod.get_global_var('func_4426')
call_4427 = func_4426_call()
output = call_4427
func_4428 = relay.Function([], output)
mutated_mod['func_4428'] = func_4428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4225_call = mod.get_global_var('func_4225')
func_4226_call = mutated_mod.get_global_var('func_4226')
call_4482 = relay.TupleGetItem(func_4225_call(), 0)
call_4483 = relay.TupleGetItem(func_4226_call(), 0)
output = relay.Tuple([call_4482,])
output2 = relay.Tuple([call_4483,])
func_4486 = relay.Function([], output)
mod['func_4486'] = func_4486
mod = relay.transform.InferType()(mod)
output = func_4486()
func_4487 = relay.Function([], output)
mutated_mod['func_4487'] = func_4487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3389_call = mod.get_global_var('func_3389')
func_3391_call = mutated_mod.get_global_var('func_3391')
call_4510 = relay.TupleGetItem(func_3389_call(), 0)
call_4511 = relay.TupleGetItem(func_3391_call(), 0)
func_2113_call = mod.get_global_var('func_2113')
func_2115_call = mutated_mod.get_global_var('func_2115')
var_4543 = relay.var("var_4543", dtype = "int32", shape = (140,))#candidate|4543|(140,)|var|int32
call_4542 = relay.TupleGetItem(func_2113_call(relay.reshape(var_4543.astype('int32'), [140,])), 1)
call_4544 = relay.TupleGetItem(func_2115_call(relay.reshape(var_4543.astype('int32'), [140,])), 1)
func_2683_call = mod.get_global_var('func_2683')
func_2690_call = mutated_mod.get_global_var('func_2690')
const_4556 = relay.const([4.831597,-7.861535,8.142533,-2.529736,-0.716274,-6.459199,7.892155,-7.399835,2.831806,7.796680,-4.726317,-0.064003,2.488586,1.149076,8.069712,-2.206871,9.707257,-1.010545,-4.948326,0.248960,-5.271282,-0.063782,6.757510,9.162722,8.466869,-5.598426,8.889192,-7.690403,1.758995,-1.215152,3.246679,-0.009726,4.566737,-1.927159,5.586709,-8.942827,2.995774,1.400809,-6.698343,6.846685,1.688329,9.802300,-7.980573,2.782595,3.004297,-3.900643,-1.546011,6.775021,-4.264117,-4.409052,1.594967,0.904322,2.926727,8.436667,2.780436,0.886244,-7.560099,0.605850,-2.289667,9.763473,-7.941570,3.572374,-7.468054,3.728181,-4.055725,-3.211527,-1.370886,-5.458109,-4.207411,0.700861,-4.950200,-9.204127,7.701497,9.540051,7.325689,6.620432,-2.992227,-3.846694,4.804039,4.848690,7.735609,1.329555,7.509298,-0.624882,-7.845353,2.337892,-6.225521,4.114884,-9.804909,-0.196960,1.361349,5.292467,-2.616751,-6.941816,7.017018,5.935905,1.010603,3.768798,-8.708628,-3.108026,6.087379,3.462186,-3.461623,-8.070446,7.189101,-3.378929,-4.596403,-4.623729,1.181964,6.699379,4.156735,-1.392292,1.172863,9.898047,7.985611,-7.224229,-8.315095,-9.481294,3.702891,1.715726,8.256721,3.717491,1.922768,-6.693100,9.016093,-9.334197,-5.722368,1.544010,-3.894466,4.586409,9.409690,-7.549340,7.377401,-0.723951,5.124094,9.362130,0.238551,8.155830,4.725353,6.826017,4.198825,2.416593,-2.767492,4.609638,7.048776,-4.731603,3.676480,-2.198747,-8.380534,1.798697,-5.001399,-7.297210,6.044277,0.715527,-4.304693,4.290336,-1.504091,1.365925,-3.701261,7.833122,-2.473618,-4.283928,-0.428889,-1.116490,2.583103,1.642228,3.444849,3.480321,4.378300,1.539739,6.130889,9.423344,6.653804,9.787914,1.505467,6.625352,-2.103155,3.791973,1.178257,6.719315,6.749315,-2.041198,7.604039,-6.720562,-8.841178,-7.621944,-4.746208,2.929227,-9.136132,1.062891,4.589082,5.614620,-4.635705,6.189595,0.521691,-7.010987,5.532629,6.353170,-7.673793,7.816908,1.476519,9.831929,7.284225,2.347006,2.001862,6.279732,1.531653,-9.207546,-4.826534,8.818170,6.956034,-5.634021,9.230463,1.396295,1.928717,-5.216104,-9.923915,3.971927,6.734145,5.247530,4.876380,6.886224,-0.283523,7.428972,5.978290,-2.242886,-5.951115,6.805929,-6.066865,-3.576840,5.451890,-8.636155,-6.610814,8.638517,-7.245046,-5.950660,-7.512461,-0.807027,0.159833,5.895705,8.684189,0.831546,-1.235552,8.958733,0.690844,7.195364,-7.121150,-3.731379,7.486595,-9.406326,4.877735,4.074922,6.318552,-1.051881,6.572378,4.317468,4.566465,8.301824,-1.629541,-5.064882,-7.555176,-2.020318,5.951661,2.274748,5.622415,-5.259355,-3.762696,-9.007043,9.609424,-9.107919,-4.430316,4.567122,3.178587,4.911129,0.975347,3.235556,4.989369,9.798271,8.300590,4.001447,-2.567240,1.318441,-7.577511,-8.515448,-2.786824,-2.177044,4.914854,-2.025442,-1.458814,-0.202894,0.018619,6.470289,8.618114,8.293257,5.547252,1.505393,-7.603567,-5.815168,-0.152892,-7.459223,-0.826183,2.133720,9.083381,-8.198118,-6.964718,4.229546,-4.203229,-2.500907,7.903157,-7.481782,5.399376,4.766753,-2.717444,-3.052405,-8.869502,7.630361,9.510263,-5.665835,-1.455635,4.695408,4.884564,-2.860968,7.123765,-5.751345,-1.048088,-1.673885,-9.756607,7.817388,9.104376,-1.585930,1.917129,-9.446489,-6.936247,7.749194,6.069084,0.352178,2.922383,9.813217,9.751674,-3.274182,-5.632003,0.916522,-3.243851,-5.016772,-8.225308,3.656576,-1.344966,-8.011497,2.525170,-6.609731,-3.701815,7.289178,9.182114,6.222821,-3.126204,4.609195,-6.519548,-0.538449,3.496335,-6.824673,0.326368,8.546171,-0.103180,-9.059766,1.026353,-7.516257,8.723631,-0.428346,-8.118005,9.812110,6.809407,-0.957986,4.494995,-6.808827,4.048447,-8.345498,-9.399630,-4.531670,2.924860,-9.664714,5.671602,2.670900,5.500355,-8.350015,4.880449,-3.314936,-4.677901,-8.215808,0.940166,-3.145567,4.880316,7.067097,4.703646,-7.679752,0.204767,4.705563,-9.376198,4.559137,-3.382659,3.339723,6.751982,-2.763492,-4.971090,9.087081,6.529844,-1.767817,-5.935109,2.618233,-0.978825,-8.284247,-4.981340,-5.432552,-2.722469,-5.158472,7.907835,-6.613746,-3.918584,-9.623485,0.650801,-1.698647,-2.793009,-6.995318,9.399785,-1.469586,6.273800,5.821444,-8.320340,-3.275723,6.784965,-4.569210,8.906033,1.125894,9.076774,-0.058888,1.601544,-7.064609,-0.072867,-0.019635,-2.553270,6.372401,2.191005,8.072106,-4.885189,1.748565,7.059065,6.547247,-1.384905,-1.692842,-3.842208,0.390937,3.170696,8.185884,-2.989070,6.595098,-0.547395,-0.979693,9.310721,-2.150116,-4.719428,4.833043,9.065751,-0.806491,4.034955,0.703151,9.275871,7.611898,-1.979757,-0.931454,-3.564357,9.098717,-1.419098,7.336487,-8.661131,-6.013554,4.798681,-7.101549,-7.643113,-7.376911,7.620249,0.971105,-4.173636,7.288588,-1.876087,5.934742,-9.437201,4.922928,8.626437,-9.663388,-8.230931,-8.700311,5.797587,-0.592830,4.553454,3.545956,2.566037,5.087562,-3.290417,-1.894007,9.869304,3.603482,7.684764,-1.097712,3.776714,-3.771040,0.987104,1.806012,4.867193,-0.497914,0.939611,6.247697,3.649759,-8.160519,2.662111,-3.438255,5.391155,-1.737919,-6.875533,3.504710,-1.458277,-2.191043,-8.683423,-0.503460,0.260118,-1.479349,-4.443786,4.026677,-2.114894,9.827789,0.233567,-4.250173,-8.819012,9.649537,-2.371324,-0.749378,-6.448588,-5.203029,4.239023,-4.271604,-2.984006,8.343143,-2.011713,-7.504830,-1.731191,-1.616394,3.408947,-1.803465,-7.617912,-5.120057,-3.452647,6.377575,8.510813,7.065890,-5.709358,-2.355132,-8.425422,3.620771,-9.316638,-2.300116,-0.975056,-0.281847,4.724949,3.261226,-6.516057,-2.266504,-1.817350,7.010625,-9.331676,-6.248449,-5.964200,2.161907,-8.920503,3.831083,-4.423300,-1.941287,1.865944,-6.493252,9.206560,-0.443256,6.384315,6.994952,-5.873884,-1.448915,7.273570,6.113307,7.962132,6.992614,6.011209,-1.391045,-8.839291,-3.138149,-7.857264,-2.045475,-9.750759,5.086432,-4.344426,-3.409227,-4.892322,3.529421,8.778816,8.426633,3.012516,4.497470,-3.473300,-2.429362,-3.823713,-0.695088,6.831345,-9.247027,3.832362,5.297620,-3.330392,-7.249002,-3.948370,9.734183,-4.347520,-9.379839,1.529803,-5.526896,-7.021047,-5.114123,-7.203575,2.637360,3.487235,6.104407,6.944566,-2.170331,-9.529102,-1.983590,-8.918337,5.336682,1.137271,-4.653032,7.463519,-2.668749,7.786241,-9.369285,4.393002,3.759751,6.022818,4.937851,-5.389287,4.494029,-9.286134,4.826061,9.992660,2.299905,1.178340,7.161639,-4.340076,-5.587451,-6.703558,0.136802,-2.716970,-7.968541,-9.766770,-2.199109,-1.444839,8.112988,-5.983404,0.104880,7.115350,-6.540208,5.575973,2.360140,3.381196,6.563441,-2.522921,3.052572,-8.597726,2.346784,4.805074,9.099882,1.495429,-8.438271,6.974864,7.686631,-9.184416,4.285268,6.622255,4.141462,-3.797005,-5.041955,-5.798989,2.437072,9.510658,2.073088,7.378283,-4.256972,5.448294,-0.565178,8.008677,-6.303453,6.998651,3.616816,-6.256873,0.893764,4.151899,-0.394616,8.969947,-0.761110,-0.752383,3.838945,-6.154186,-5.371747,-6.774882,3.907059,-5.669199,5.250680,1.373561,-3.632257,3.540611,7.234488,3.545984,-8.924438,5.379282,9.942289,-6.175551,0.787940,9.068289,8.867211,-3.715198,6.935307,-7.919068,-3.731112,2.914205,3.514080,-3.523385,6.356042,-0.896341,-9.344340,1.923729,8.876740,-4.363017,-8.440528,-0.866227,9.119311,-1.468618,0.660771,5.435633,9.526562,-9.370133,-1.895286,1.752621,-2.614619,2.981958,7.912470,7.871271,1.813114,-0.091057,4.204718,0.033935,4.188914,0.564162,-1.594778,3.363028,5.014340,-9.631934,-6.860005,8.291511,-9.186212,-0.892084,9.911935,-4.794991,0.349063,4.411669,-0.033490,-7.050383,-7.394682,-1.440285,-2.421991,-2.024967,-2.536992,3.936468,-8.239708,5.640967,-5.882110,0.888157,8.543922,-2.139180,-5.196554,2.181917,-8.785686,-5.802787,1.971941,6.153407,-6.797540,8.791149,-2.138541,-5.447398,-1.037750,0.086115,0.169605,-8.023917,5.872580,8.517694,-6.190219,-1.066276,-3.494335,-3.464522,3.939633,-4.352814,6.351587,-3.028420,-4.835950,9.832050,6.329406,7.186508,4.342440,6.524733,-4.408524,-7.954674,-2.064681,1.328606,7.517857,-6.914737,0.805231,4.680520,3.265031,2.423195,-7.866863,-8.352502,6.578186,-0.591268,6.110397,9.869461,-2.988857,3.536480,-9.022220,-2.605025,-5.119098,4.485893,5.778014,-7.621388,-0.422349,-2.386167,-0.324831,-1.985016,4.867080,-8.149613,4.018632,-8.781933,0.535071,-6.516603,8.052968,-2.988458,4.498439,5.679894,-3.389611,7.941777,4.604846,8.430653,-8.389828,-1.167837,-5.025301,8.784137,-5.039502,2.939410,1.137177,-5.636852,-4.908825,-0.740081,-6.436594,-5.968309,4.400394,9.850249,-3.787864,0.106863,2.186416,-6.390500,-6.388910,9.150948,9.071103,5.326516,-8.142287,1.692344,-4.156809,-4.679351,-5.717624,1.531867,4.456280,-8.927448,5.090640,-6.805901,4.391886,-1.567912,-9.901172,3.853250,-6.964438,-1.648104,-4.804017,-6.158529,7.412660,3.906898,9.306532,-4.399144,1.762837,-7.100069,-8.817144,2.001897,0.305328,3.048415,7.355897,-3.713776,4.118455,-1.859470,-2.696737,-7.352262,-0.772042,4.360069,-0.545925,-7.583978,0.147872,-0.405339,1.806810,0.595360,5.153897,0.662209,8.542795,6.597704,-5.527158,-0.423063,-4.261708,5.453909,-8.983301,-5.338438,-5.794844,5.101365,-6.735427,6.776468,5.580255,-0.061353,0.400424,-9.049033,3.820756,-7.314991,2.307197,6.452420,4.819405,-6.058356,6.925778,0.097718,3.793008,8.011331,-4.989647,-5.360760,-6.390536,6.493538,-4.279171,-3.556768,2.679081,0.725945,-9.722833,-7.694792,3.316127,3.879436,5.377305,-7.638490,3.363441,-0.493784,-9.525187,-9.486553,-9.365347,3.877991,6.899307,-7.031461,-5.778947,4.127350,-6.860607,-7.643740,6.277745,6.307564,-5.432117,4.790734,8.820426,-2.238922,-8.290341,-2.868813,-9.692325,1.148839,-2.051932], dtype = "float32")#candidate|4556|(980,)|const|float32
var_4557 = relay.var("var_4557", dtype = "float64", shape = (78,))#candidate|4557|(78,)|var|float64
const_4558 = relay.const(-3, dtype = "int16")#candidate|4558|()|const|int16
const_4559 = relay.const([True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False], dtype = "bool")#candidate|4559|(120,)|const|bool
call_4555 = relay.TupleGetItem(func_2683_call(relay.reshape(const_4556.astype('float32'), [7, 14, 10]), relay.reshape(var_4557.astype('float64'), [13, 6]), relay.reshape(const_4558.astype('int16'), []), relay.reshape(const_4559.astype('bool'), [120,]), relay.reshape(call_4510.astype('float64'), [2145,]), relay.reshape(var_4543.astype('int32'), [140,]), ), 7)
call_4560 = relay.TupleGetItem(func_2690_call(relay.reshape(const_4556.astype('float32'), [7, 14, 10]), relay.reshape(var_4557.astype('float64'), [13, 6]), relay.reshape(const_4558.astype('int16'), []), relay.reshape(const_4559.astype('bool'), [120,]), relay.reshape(call_4510.astype('float64'), [2145,]), relay.reshape(var_4543.astype('int32'), [140,]), ), 7)
func_3616_call = mod.get_global_var('func_3616')
func_3619_call = mutated_mod.get_global_var('func_3619')
call_4571 = relay.TupleGetItem(func_3616_call(relay.reshape(var_4543.astype('int32'), [5, 28]), relay.reshape(call_4542.astype('int32'), [5, 28]), ), 0)
call_4572 = relay.TupleGetItem(func_3619_call(relay.reshape(var_4543.astype('int32'), [5, 28]), relay.reshape(call_4542.astype('int32'), [5, 28]), ), 0)
output = relay.Tuple([call_4510,call_4542,var_4543,call_4555,const_4556,var_4557,const_4558,const_4559,call_4571,])
output2 = relay.Tuple([call_4511,call_4544,var_4543,call_4560,const_4556,var_4557,const_4558,const_4559,call_4572,])
func_4574 = relay.Function([var_4543,var_4557,], output)
mod['func_4574'] = func_4574
mod = relay.transform.InferType()(mod)
mutated_mod['func_4574'] = func_4574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4574_call = mutated_mod.get_global_var('func_4574')
var_4576 = relay.var("var_4576", dtype = "int32", shape = (140,))#candidate|4576|(140,)|var|int32
var_4577 = relay.var("var_4577", dtype = "float64", shape = (78,))#candidate|4577|(78,)|var|float64
call_4575 = func_4574_call(var_4576,var_4577,)
output = call_4575
func_4578 = relay.Function([var_4576,var_4577,], output)
mutated_mod['func_4578'] = func_4578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_4655 = relay.TupleGetItem(func_3532_call(), 1)
call_4656 = relay.TupleGetItem(func_3533_call(), 1)
output = call_4655
output2 = call_4656
func_4669 = relay.Function([], output)
mod['func_4669'] = func_4669
mod = relay.transform.InferType()(mod)
output = func_4669()
func_4670 = relay.Function([], output)
mutated_mod['func_4670'] = func_4670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_4671 = relay.TupleGetItem(func_3339_call(), 0)
call_4672 = relay.TupleGetItem(func_3341_call(), 0)
func_3175_call = mod.get_global_var('func_3175')
func_3180_call = mutated_mod.get_global_var('func_3180')
const_4678 = relay.const(2, dtype = "int32")#candidate|4678|()|const|int32
var_4679 = relay.var("var_4679", dtype = "int32", shape = (360,))#candidate|4679|(360,)|var|int32
const_4680 = relay.const([False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,False], dtype = "bool")#candidate|4680|(120,)|const|bool
const_4681 = relay.const([10,8,-4,5,-2,-8,1,-1,7,-2,-10,8,-10,-9,3,-1,-8,10,4,1,4,-8,3,-1,-9,-1,-2,7,1,8,10,8,-10,9,4,9,7,-4,-9,1,7,-5,10,-2,-5,-7,-4,2,-3,-2,-1,4,10,-8,-2,5,10,10,-1,1,7,-3,-4,6,6,-4,-9,-4,-6,-6,-3,8,2,-5,2,-2,-5,9,10,7,-1,2,9,9,-2,4,7,-1,1,3,-4,-2,8,8,-7,3,-6,-8,-4,-10,1,4,-9,-6,-2,6,1,-7,-9,8,-10,4,9,2,-8,-10,8,6,10,10,10,-10,-3,-2,3,-10,5,10,-3,-7,-5,-9,-2,2,6,8,9,-7,-4,-7,-2,-10,1,9,2,-5,3,-2,9,-9,-8,-1,4,1,8,6,7,5,8,1,9,9,-10,-7,6,5,4,3,3,-7,-4,-1,1,-8,-9,8,-5,-10,-7,5,6,9,6,-7,6,10,-6,-2,6,-5,6,-10,2,7,8,5,4,3,6,8,3,5,-8,6,6,8,-7,-5,10,-10,-4,4,1,-7,-5,-2,-3,-8,3,-7,-5,10,-3,3,-7,-4,2,-8,-5,-1,-7,1,-9,5,2,10,6,3,7,5,-1,-6,8,7,6,-6,-10,-5,5,-2,1,-8,5,6,-7,7,-3,2,-6,7,-6,5,1,8,1,6,-5,-6,-4,-4,7,-1,-6,-2,-2,4,-5,8,10,-3,-8,-10,-3,-3,3,8,-9,-8,3,-7,2,-5,-10,-4,-10,3,8,-3,2,-8,3,2,-6,-7,4,-4,-5,5,5,-8,-8,7,4,9,-5,-10,-4,10,-7,-10,1,9,-4,-1,-6,6,-10,2,-2,-2,7,-5,6,-2,2,-6,-8,9,9,-3,-1,-9,-1,-6,3,9,-10,2,10,1,-7,-5,1,-7,5,7,8,-6,-8,-3,8,10,8,6,-7,-10,-3,9,10,-6,7,-1,-1,5,9,8,-2,7,-2,10,7,6,-6,4,3,10,-5,-5,6,-4,10,2,4,-3,-2,6,4,1,-6,-5,7,9,4,6,5,-7,-4,10,10,-4,8,-4,-1,2,10,-8,-3,-6,-2,9,2,4,-4,-4,8,7,-8,-8,-3,-8,-8,-9,5,7,10,5,-1,10,3,-10,-3,-7,-7,4,7,-3,10,5,-9,-1,10,3,-6,7,-10,-10,-3,8,4,-9,3,6,-6,-7,7,8,-7,-1,5,-10,-4,-9,-7,-6,-6,10,9,-3,6,3,-1,1,1,8,-9,-2,9,1,-8,-5,-3,6,-10,10,10,-1,4,8,5,3,6,-8,-7,-1,7,-9,-2,4,-3,-9,-8,5,-4,9,-1,-3,10,-2,-10,3,-8,8,7,-1,6,5,-2,-6,-3,6,-7,-9,-2,-5,-3,-10,1,2,-9,10,4,-9,-4,-5,-10,-1,3,6,-2,-8,9,7,-7,8,3,-3,-3,-5,7,-4,-2,6,6,1,-4,2,-8,-3,-7,10,9,6,6,-9,-1,2,1,-1,3,-2,2,10,2,-2,4,-8,5,-7,3,-4,2,-2,-5,9,-4,4,-4,5,-10,4,8,9,3,-2,5,-5,-3,9,9,-7,6,10,-8,7,-1,-1,2,-10,-9,3,10,8,-6,-1,-4,9,-2,1,3,9,8,3,-2,-7,5,5,-10,9,10,1,10,6,-9,3,5,-8,-4,5,3,-8,-1,-6,-6,7,4,-9,-7,8,4,-10,5,-3,8,-4,-9,-1,-5,-3,1,6,9,-2,2,4,3,-4,3,-7,5,-2,-6,-7,10,-2,4,-8,5,1,2,-5,1,-3,-7,3,-2,8,-10,8,7,-10,-8,-3,-8,2,2,-5,7,5,-8,5,7,-7,2,-4,-7,-1,-5,-10,1,-5,9,3,-7,9,-1,5,-2,3,-10,-3,5,2,8,-5,5,-9,-1,10,5,3,-6,1,1,-1,3,7,-8,10,-10,5,6,-10,8,-4,1,-8,6,-6,5,7,3,-6,3,-9,10,10,9,2,2,-2,-3,-2,10,-5,9,-1,-8,-3,4,5,5,-9,-5,-4,6,2,4,10,3,-9,7,-5,8,5,-2,-5,6,-3,-6,10,1,-3,5,9,9,2,-7,-1,5,-6,-8,3,-6,9,-3,3,-2,-9,10,-6,-7,4,-5,10,5,-8,10,1,8,-7,10,5,8,10,3,8,-6,5,-9,3,4,1,3,-7,1,-3,5,4,3,1,3,7,4,-3,10,9,9,5,1,6,7,-4,9,-4,-5,8,6,9,1,3,10,-3,-1,5,-4,5,-2,4,8,-2,6,-10,7,-2,-1,-10,-6,-4,-5,10,-9,1,-5,-3,-4,5,8,2,-5,6,9,9,-8,6,-1,3,3,-3,10,1,-2,-5,4,-8,4,-6,-7,-2,-7,10,-7,8,-10,8,7,-5,-8,3,-2,10,2,-10,-1,8,1,4,5,-7,2,-5,7,-2,-2,6,4,9,1,9,-10,-10,6,-8,-5,-4,-10,-8,8,-1,-4,4,10,8,-1,-3,-3,-3,-6,-10,7,10,2,4,7,-10,-10,-1,-8,-4,-7,3,10,8,8,-9,-3,-2,-6,-7,-10,5,3,-2,6,-1,3,-2,-1,-2,-10,2,9,-10,-10,7,-4,-2,8,-8,-2,-7,5,1,-2,3,-4,-7,10,-8,-2,2,7,5,-2,2,-3,8,-10,2,-1,-4,-1,-8,6,-5,8,6,-3,-1,-3,-8,3,4,6,3,-2,-2,8,6,-3,4,-8,7,1,-8,-2,-3,-4,-8,3,-8,8,8,8,-10,6,-2,-6,8,10,4,-2,-7,-5,7,-8,-3,-2,2,8,1,-8,8,4,3,-4,6,-5,-2,-9,8,-3,4,5,-5,2,5,-1,-5,-3,-8,5,-2,-8,3,-5,-5,-6,-6,-8,2,-7,9,-3,2,1,10,-6,10,-9,1,8,4,8,-2,1,4,2,5,-6,-1,10,6,-6,-10,-9,-8,-9,-10,-2,-3,8,-10,-3,-8,-5,7,-10,1,-9,-10,-2,-5,3,-9,-8,8,2,-8,5,3,3,-5,-2,9,-7,-2,-9,1,-2,9,-3,-8,6,-7,2,-1,1,-9,4,6,7,10,5,-10,-10,-1,-5,-7,4,10,-5,10,8,-8,-7,6,2,-2,7,-8,-10,-9,5,-3,-1,5,-5,1,4,8,6,7,-9,-9,-2,3,-5,4,10,10,-2,9,-2,3,-4,9,-4,-1,7,9,-6,-3,5,-2,-7,-8,9,-4,-2,9,7,-7,6,4,-8,5,5,7,-5,7,-3,-1,-4,3,4,-1,2,4,4,3,2,7,8,-7,3,7,9,-8,2,9,5,-7,-8,7,8,5,2,7,-6,-4,-8,-4,-8,-10,-4,-8,-10,8,-7,-1,8,7,8,9,8,-10,6,-3,-6,9,-3,1,-4,-1,-5,-8,-8,3,8,-9,-7,5,5,-2,-5,3,7,-1,-4,-2,7,-1,4,3,6,-10,-3,8,7,10,-10,7,-6,8,5,8,9,-8,-3,-7,-7,4,4,-9,-4,10,-2,1,9,10,9,-5,9,-3,6,-1,-9,-2,-9,-3,-2,6,3,-3,-7,4,5,6,5,-6,1,4,4,-4,-9,-7,3,-4,-1,9,-4,-3,2,-10,-1,8,6,4,9,3,5,6,3,4,-9,-1,-6,9,-4,-7,-7,-6,8,-3,6,-5,-5,-10,-3,2,7,-2,-6,3,3,-4,6,3,10,10,-3,-8,6,-7,-2,8,2,2,-4,-9,-6,7,-3,-5,8,8,10,10,-1,4,7,3,-3,-7,-2,4,-9,10,-3,4,10,-5,-5,-6,-3,2,-2,9,-1,-2,1,3,-9,2,7,5,6,-10,6,-9,-4,-1,7,-2,4,-5,2,-5,-10,2,2,7,-7,1,2,-4,-5,3,-3,-4,8,4,-5,8,-7,-7,8,-9,10,10,-3,8,-9,2,5,1,-3,-1,5,6,-2,2,-6,4,-2,9,9,5,-10,10,-1,7,5,2,1,-3,-2,2,-6,7,-1,5,-6,7,-5,1,9,10,8,-5,2,2,1,-4,-10,-6,9,-10,4,-1,6,5,-10,1,-6,8,4,-4,4,3,10,3,-5,-4,-10,-7,7,-2,-6,-6,9,2,4,10,5,9,5,5,-5,-8,-4,-3,-5,-9,-10,-5,8,2,-5,-7,-6,-8,-10,-2,3,-2,-2,-1,2,10,-4,-10,-2,2,5,-10,8,3,-4,-3,-2,6,-1,-1,-7,-6,-5,3,9,7,-7,-4,-6,2,-1,-6,1,-6,-9,7,7,-6,10,-10,-5,2,5,-6,2,-10,5,5,-10,-2,8,-6,3,-9,-9,1,-5,7,-10,10,3,4,-10,7,9,-2,9,4,-7,-6,-2,-4,1,-9,-4,-2,1,-6,6,-4,3,4,1,5,-10,8,-9,1,2,2,8,-5,-9,-3,-6,-1,-10,-10,-4,-1,-7,8,-3,-7,-6,-3,2,-5,-10,-7,-3,5,5,6,-2,4,10,-7,-1,-8,-1,3,-8,4,9,4,2,-7,7,-6,2,10,4,-5,-2,-3,-1,-6,-7,6,-4,9,-10,-10,-2,7,8,6,-7,-6,3,1,6,-4,8,8,-2,7,-3,-10,5,1,-9,5,7,2,-9,-5,-10,9,-10,-1,5,-4,-5,5,4,-5,-10,-8,2,-10,-4,-7,3,2,2,-6,1,5,-4,8,-4,-10,5,-5,7,7,10,4,7,-7,-1,-6,-10,-8,1,2,-3,2,-10,3,2,-9,-4,-6,-10,2,3,-4,8,9,2,-5,-6,10,-3,5,5,-8,6,-1,-4,-10,8,-1,-9,-4,-4,5,5,7,-10,-5,-6,-3,-6,3,-7,10,10,-2,4,10,-6,-9,10,-10,10,-7,-10,-3,7,8,-10,9,-2,10,10,3,5,-10,-7,7,-8,6,-7,4,-4,7,-3,-5,-9,10,-5,9,2,-6,10,6,10,-5,8,8,-6,-7,1,-3,-9,4,-3,-5,-2,5,6,1,-3,2,8,5,-7,2,-6,-2,7,8,-9,-6,-6,5,2,2,2,7,6,-1,-6,-2,-7,7,10,-5,-10,2,-2,10,10,-9,5,-10,2,7,4,10,6,5,-5,-7,-1,-3,-5,-7,6,-7,6,4,-1,-7,2,6,7,6,-10,-10,-1,4,-7,-2,8,4,7,3,-10,-2,-10,-10,10,10,8,-10,3,6,-4,-1,-8,-8,6,4,4,8,-6,10,6,-3,9,5,7,10,-2,4,7,-8,7,-8,-9,4,9,-1,-5,-9,-10,-4,8,6,6,-3,-6,-5,4,-4,10,-10,4,-3,-8,1,9,-2,-1,8,-2,10,3,-9,-9,-9,10,9,3,-3,6,-8,9,-3,-10,-8,3,10,-3,10,1,10,-3,7,1,-6,4,-2,-3,5,-6,-8,3,5,-7,8,6,-9,-9,4,6,6,1,-3,3,-10,1,9,5,9,-9,-8,-5,6,3,3,-10,-9,9,9,-10,-4,-6,2,-5,3,-8,-10,8,-8,-8,2,1,2,3,-5,-10,-3,-2,-8,-8,2,2,10,10,4,-10,-7,-10,-5,10,-8,-9,-7,-6,9,-7,-1,-4,10,-10,1,1,-2,-9,-5,-7,9,4,10,-2,5,9,-10,-8,7,3,7,-8,-6,-6,-3,-4,10,10,-9,8,-2,1,-9,2,-6,-8,10,1,-2,-7,-1,-9,10,-10,2,4,-4,7,3,-3,-4,-1,4,10,-1,3,1,-3,-9,-1,-1,-6,1,10,1,-4,-4,-9,9,6,-10,1,9,2,7,1,-10,2,-8,-7,8,6,-8,-10,-8,-8,5,8,3,4,-3,7,1,7,2,2,5,1,5,-4,-10,-1,-2,-1,-9,7,1,5,5,-5,6,-8,5,6,-3,-5,3,-9,5,3,6,-5,-6,-1,2,8,3,-1,-5,2,-9,10,3,10,7,3,3,-2,-8,-10,9,10,-5,-4,-10,-6,-3,3,-6,-5,6,8,-6,10,3,6,-1,-6,9,-5,-6,8,-9,-5,-3,8,8,1,-6,10,5,1,-2,10,-9,-10,8,-2,10,2,10,5,5,4,10,-1,7,1,-3,3,-8,4,-5,-4,6,10,-7,-3,-2,-6,-10,9,10,-9,3,-4,-8,-10,5,-8,10,-8,-3,-1,-10,9,-3,7,8,-8,-9,3,-9,10,5,-8,6,-5,-6,3,-3,-6,-9,-2,9,8,-10,-5,2,-6,1,-5,9,5,-6,3,-3,6,2,-10,7,8,9,-10,-7,1,2,7,7,9,2,-3,-5,-8,-6,-7,-6,-2,-6,-7,9,-3,5,-2,-3,8,-5,2,-9,-6,-9,-7,7,10,-2,-8,-7,9,2,6,2,-3,-2,-8,3,5,-10,7,-4,3,-5,4,-4,4,4,-3,4,5,9,9,9,6,-10,7,9,7,-4,6,6,6,-1,-6,3,3,7,5,-9,5,3,1,-3,6,3,-5,-3,9,-10,-1,6,-6,-7,9,2,-5,-8,-7,-7,10,6,-7,8,4,-10,-2,8,-1,9,-3,6,7,4,-8,-8,1,6,2,-3,-4,1,1,-4,-8,-2,5,1,-5,8,6,-4,2,4,-3,-2,1,-3,-5,-5,-3,4,-7,1,-1,-7,-7,-5,-10,2,-7,-2,-8,-1,5,3,-2,-5,-3,-5,7,3,-3,-10,-9,-8,-7,-5,9,-5,3,-2,9,8,-4,-8,4,-5,-2,-2,7,7,4,8,-9,8,3,9,-7,-3,9,-4,-5,-10,3,-5,-3,6,-6,1,-9,9,6,5,-4,-4,2,-6,6,1,7,2,8,-9,4,2,-6,-7,-1,-6,1,-8,8,9,9,3,-5,7,-3,-10,4,-10,2,-5,-10,-8,2,5,9,4,-1,5,2,-1,-8,-3,2,-3,1,-7,-10,5,2,-2,3,10,-4,1,-7,-2,3,7,9,2,-9,-4,-6,9,-8,-1,-6,6,-8,-6,9,-9,-3,10,8,1,-2,6,-3,-8,-7,-1,-1,-5,-2,-5,-8,5,-3,-3,-6,-8,-9,-6,3,-3,-4,7,1,-6,2,-6,-6,-2,-6,9,1,-10,-6,-5,10,-1,-2,2,10,-8,9,-3,-7,-5,-1,-6,-4,5,3,-10,5,7,-2,1,-7,2,-5,3,9,-4,2,5,6,-5,7,2,-9,-9,8,-10,-1,2,-7,-9,-1,-9,2,-9,1,7,-1,9,-8,10,-10,-2,5,10,-7,10,-1,10,-2,-4,-5,2,10,8,2,3,-10,-7,-8,-7,-6,-2,-8,10,3,7,-5,-6,2,2,-3,8,-1,-8,-9,-2,4,2,8,3,10,-9,-9,-1,-10,5,-7,9,-7,6,4,1,-4,1,8,3,-4,-2,-1,3,5,7,2,-1,4,3,5,-7,10,3,10,6,2,8,-1,5,1,-8,-1,-10,-6,5,10,4,-8,9,-5,-3,-3,10,-3,9,-8,-5,-8,4,-9,-7,10,10,-8,-7,2,-10,2,10,-5,-7,6,4,8,-7,-8,7,-6,4,-6,7,-3,-4,8,-10,10,10,1,1,-3,-10,3,-6,4,2,-5,7,-7,2,-4,-10,2,-2,5,6,-10,-6,-6,1,-6,-2,-2,-8,-2,6,-5,-10,-8,1,6,1,6,10,-2,1,-3,-9,-2,6,7,7,2,-8,2,4,-9,-3,-4,4,-3,4,-8,1,-9,-3,10,-10,-9,-1,-10,-6,-1,3,-3,1,-3,-2,-9,-2,-9,-5,-5,9,3,-3,-8,3,2,-5,4,3,-3,8,-7,10,-5,4,2,-4,-5,10,-7,-3,9,-6,-5,8,-1,10,9,3,-5,-2,10,1,-2,-9,2,-10,9,3,2,-2,10,-2,-1,10,1,10,9,-9,2,2,9,6,7,-3,-1,-3,-8,7,-9,3,1,3,9,-1,-1,7,-4,-9,-2,-7,9,1,4,-7,9,2,7,9,9,-7,2,2,6,-4,-4,-9,-2,2,-2,-6,-1,10,6,-2,-9,7,2,9,9,-4,6,-9,8,2,-10,-1,-9,-9,-8,1,-1,-3,6,-10,-5,1,10,10,1,7,4,-4,-7,-9,-5,6,-9,-10,-1,1,5,-7,-1,-4,-1,-6,9,8,-3,2,-7,6,9,10,-6,-8,-4,7,-4,-10,10,-9,-3,6,4,-8,10,5,-1,9,-8,8,4,9,-6,2,-4,6,8,7,-2,2,-8,9,-4,7,-7,-5,-10,-8,3,4,-9,-7,4,10,7,-6,-3,-4,-7,-10,-4,7,9,-4,-3,2,-9,-2,4,-9,-6,-6,9,-7,-9,-3,1,-10,-5,-7,-3,4,-9,-4,-10,4,7,-6,-1,5,7,-4,-9,-3,9,5,-8,-3,-5,1,-2,-3,6,7,10,7,1,-10,-6,-7,10,6,-10,6,-7,-3,4,8,-5,9,-9,7,-8,2,-7,-8,10,-8,2,-10,-2,8,10,8,-2,-3,3,-3,-6,-6,6,3,-9,-8,4,10,10,-4,3,-8,-10,8,-2,6,-7,-4,-8,9,-7,-10,7,-10,7,7,-5,9,-7,-1,-5,8,1,5,10,-9,-2,-1,9,6,-3,-10,-10,-6,-5,8,3,-3,2,6,-3,1,3,4,3,-2,5,-7,-10,-5,-1,4,-1,-8,5,6,-8,3,9,5,-9,8,-8,10,9,2,8,-4,5,3,8,9,-6,-7,-2,-7,-9,7,-4,-5,2,-5,-7,3,-2,5,-8,6,-9,-9,7,-3,2,4,-7,-9,8,3,-2,7,-3,-6,7,4,-8,8,-10,-2,1,10,-4,-8,4,8,-10,-2,9,5,-3,-3,-4,6,2,-10,-3,10,1,2,1,-3,-6,3,6,-1,-7,-10,5,-6,-4,-7,-7,8,7,3,-9,1,3,1,2,-8,6,1,-2,8,1,4,-4,-6,-2,1,7,-7,5,-10,9,7,6,9,-5,5,-4,-6,3,1,2,7,5,-2,1,9,-1,-9,6,-4,-7,-9,-8,-1,-8,6,-6,1,-8,-4,-4,3,1,4,-8,-10,-7,-5,-3,-8,1,-1,9,-10,5,-10,-7,6,-2,7,9,4,6,3,-8,-2,-8,-5,5,6,7,8,-8,4,-5,10,10,-9,5,-8,6,-9,-3,3,-8,-7,-6,1,-9,2,9,7,-3,-6,10,-1,-5,3,5,-7,5,-9,1,5,-8,2,-6,-5,-7,9,-8,-6,-1,5,6,-10,-8,-4,-3,-6,3,-6,-1,1,-5,-5,-1,8,-1,1,-6,8,3,2,-10,-7,-8,-3,-6,-7,5,6,5,1,8,5,4,-8,7,1,8,-10,10,7,8,-1,-8,-10,-2,10,4,5,-3,2,-3,-7,10,-7,-3,-10,-8,5,-7,-10,-7,-10,8,-8,8,-10,3,-10,-7,7,3,10,-8,9,3,6,-10,2,2,8,7,1,-5,5,9,-1,-9,8,-7,3,-6,9,-5,-3,-8,7,1,7,10,-8,-4,-3,-10,-8,-8,7,8,-10,-7,-2,-4,-2,8,10,1,-8,9,-8,2,5,7,-4,10,-9,-6,1,9,-6,-5,4,-6,-1,-6,3,-4,-8,2,7,-7,-8,5,-5,-5,1,7,5,10,8,6,-3,-10,1,-4,-6,5,4,-5,4,9,-9,-5,-2,4,-10,-3,-1,6,7,-10,-3,-6,5,-7,1,-8,-6,7,-9,-10,-1,4,6,-4,1,5,-9,2,-10,4,-7,-2,-5,-3,-1,-3,-5,-4,6,5,2,-3,9,-4,6,-10,10,8,-4,10,-3,8,2,3,10,7,-8,-4,6,7,7,5,-3,5,-3,3,-9,-7,2,1,8,5,-6,4,-8,4,-10,3,1,9,4,-1,2,4,-8,10,-2,-1,-6,2,5,7,6,-7,7,-2,-7,-4,1,-6,4,6,-1,-6,-1,10,6,-1,7,-1,5,7,-8,-2,-2,9,-2,-4,1,1,10,-8,-7,1,7,2,7,4,2,-4,4,-2,10,1,-8,3,-4,-4,-8,-6,-7,6,10,9,6,8,-1,-8,6,10,4,2,4,10,1,8,-6,1,-6,8,6,-4,6,-7,5,-8,3,-6,4,-1,-2,2,-5,4,5,-5,-9,9,-3,2,6,-7,-10,5,9,-10,7,10,6,5,-7,-4,9,6,2,10,-7,-6,-1,10,7], dtype = "int16")#candidate|4681|(3840,)|const|int16
call_4677 = relay.TupleGetItem(func_3175_call(relay.reshape(const_4678.astype('int32'), []), relay.reshape(var_4679.astype('int32'), [12, 2, 15]), relay.reshape(const_4680.astype('bool'), [1, 120]), relay.reshape(const_4681.astype('int16'), [3840,]), ), 2)
call_4682 = relay.TupleGetItem(func_3180_call(relay.reshape(const_4678.astype('int32'), []), relay.reshape(var_4679.astype('int32'), [12, 2, 15]), relay.reshape(const_4680.astype('bool'), [1, 120]), relay.reshape(const_4681.astype('int16'), [3840,]), ), 2)
output = relay.Tuple([call_4671,call_4677,const_4678,var_4679,const_4680,const_4681,])
output2 = relay.Tuple([call_4672,call_4682,const_4678,var_4679,const_4680,const_4681,])
func_4687 = relay.Function([var_4679,], output)
mod['func_4687'] = func_4687
mod = relay.transform.InferType()(mod)
var_4688 = relay.var("var_4688", dtype = "int32", shape = (360,))#candidate|4688|(360,)|var|int32
output = func_4687(var_4688)
func_4689 = relay.Function([var_4688], output)
mutated_mod['func_4689'] = func_4689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3389_call = mod.get_global_var('func_3389')
func_3391_call = mutated_mod.get_global_var('func_3391')
call_4704 = relay.TupleGetItem(func_3389_call(), 0)
call_4705 = relay.TupleGetItem(func_3391_call(), 0)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_4715 = relay.TupleGetItem(func_3282_call(), 0)
call_4716 = relay.TupleGetItem(func_3283_call(), 0)
uop_4731 = relay.atan(call_4704.astype('float64')) # shape=(11, 15, 13)
uop_4733 = relay.atan(call_4705.astype('float64')) # shape=(11, 15, 13)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_4735 = relay.TupleGetItem(func_3532_call(), 1)
call_4736 = relay.TupleGetItem(func_3533_call(), 1)
bop_4751 = relay.divide(uop_4731.astype('float64'), relay.reshape(call_4735.astype('float64'), relay.shape_of(uop_4731))) # shape=(11, 15, 13)
bop_4754 = relay.divide(uop_4733.astype('float64'), relay.reshape(call_4736.astype('float64'), relay.shape_of(uop_4733))) # shape=(11, 15, 13)
output = relay.Tuple([call_4715,bop_4751,])
output2 = relay.Tuple([call_4716,bop_4754,])
func_4759 = relay.Function([], output)
mod['func_4759'] = func_4759
mod = relay.transform.InferType()(mod)
mutated_mod['func_4759'] = func_4759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4759_call = mutated_mod.get_global_var('func_4759')
call_4760 = func_4759_call()
output = call_4760
func_4761 = relay.Function([], output)
mutated_mod['func_4761'] = func_4761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4486_call = mod.get_global_var('func_4486')
func_4487_call = mutated_mod.get_global_var('func_4487')
call_4798 = relay.TupleGetItem(func_4486_call(), 0)
call_4799 = relay.TupleGetItem(func_4487_call(), 0)
func_4334_call = mod.get_global_var('func_4334')
func_4335_call = mutated_mod.get_global_var('func_4335')
call_4805 = relay.TupleGetItem(func_4334_call(), 0)
call_4806 = relay.TupleGetItem(func_4335_call(), 0)
func_4486_call = mod.get_global_var('func_4486')
func_4487_call = mutated_mod.get_global_var('func_4487')
call_4823 = relay.TupleGetItem(func_4486_call(), 0)
call_4824 = relay.TupleGetItem(func_4487_call(), 0)
output = relay.Tuple([call_4798,call_4805,call_4823,])
output2 = relay.Tuple([call_4799,call_4806,call_4824,])
func_4827 = relay.Function([], output)
mod['func_4827'] = func_4827
mod = relay.transform.InferType()(mod)
mutated_mod['func_4827'] = func_4827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4827_call = mutated_mod.get_global_var('func_4827')
call_4828 = func_4827_call()
output = call_4828
func_4829 = relay.Function([], output)
mutated_mod['func_4829'] = func_4829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4055_call = mod.get_global_var('func_4055')
func_4057_call = mutated_mod.get_global_var('func_4057')
call_4833 = func_4055_call()
call_4834 = func_4055_call()
func_163_call = mod.get_global_var('func_163')
func_165_call = mutated_mod.get_global_var('func_165')
call_4857 = relay.TupleGetItem(func_163_call(relay.reshape(call_4833.astype('uint64'), [14, 8, 13])), 0)
call_4858 = relay.TupleGetItem(func_165_call(relay.reshape(call_4833.astype('uint64'), [14, 8, 13])), 0)
func_3389_call = mod.get_global_var('func_3389')
func_3391_call = mutated_mod.get_global_var('func_3391')
call_4878 = relay.TupleGetItem(func_3389_call(), 0)
call_4879 = relay.TupleGetItem(func_3391_call(), 0)
bop_4894 = relay.less(call_4857.astype('bool'), relay.reshape(call_4833.astype('bool'), relay.shape_of(call_4857))) # shape=(14, 8, 13)
bop_4897 = relay.less(call_4858.astype('bool'), relay.reshape(call_4834.astype('bool'), relay.shape_of(call_4858))) # shape=(14, 8, 13)
var_4898 = relay.var("var_4898", dtype = "bool", shape = (14, 8, 13))#candidate|4898|(14, 8, 13)|var|bool
bop_4899 = relay.logical_or(bop_4894.astype('bool'), relay.reshape(var_4898.astype('bool'), relay.shape_of(bop_4894))) # shape=(14, 8, 13)
bop_4902 = relay.logical_or(bop_4897.astype('bool'), relay.reshape(var_4898.astype('bool'), relay.shape_of(bop_4897))) # shape=(14, 8, 13)
var_4922 = relay.var("var_4922", dtype = "uint64", shape = (14, 8, 13))#candidate|4922|(14, 8, 13)|var|uint64
bop_4923 = relay.bitwise_xor(call_4833.astype('uint32'), relay.reshape(var_4922.astype('uint32'), relay.shape_of(call_4833))) # shape=(14, 8, 13)
bop_4926 = relay.bitwise_xor(call_4834.astype('uint32'), relay.reshape(var_4922.astype('uint32'), relay.shape_of(call_4834))) # shape=(14, 8, 13)
uop_4938 = relay.sinh(bop_4923.astype('float32')) # shape=(14, 8, 13)
uop_4940 = relay.sinh(bop_4926.astype('float32')) # shape=(14, 8, 13)
bop_4947 = relay.equal(uop_4938.astype('bool'), relay.reshape(bop_4899.astype('bool'), relay.shape_of(uop_4938))) # shape=(14, 8, 13)
bop_4950 = relay.equal(uop_4940.astype('bool'), relay.reshape(bop_4902.astype('bool'), relay.shape_of(uop_4940))) # shape=(14, 8, 13)
output = relay.Tuple([call_4878,bop_4947,])
output2 = relay.Tuple([call_4879,bop_4950,])
func_4955 = relay.Function([var_4898,var_4922,], output)
mod['func_4955'] = func_4955
mod = relay.transform.InferType()(mod)
var_4956 = relay.var("var_4956", dtype = "bool", shape = (14, 8, 13))#candidate|4956|(14, 8, 13)|var|bool
var_4957 = relay.var("var_4957", dtype = "uint64", shape = (14, 8, 13))#candidate|4957|(14, 8, 13)|var|uint64
output = func_4955(var_4956,var_4957,)
func_4958 = relay.Function([var_4956,var_4957,], output)
mutated_mod['func_4958'] = func_4958
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4985 = relay.var("var_4985", dtype = "float64", shape = (12, 16, 12))#candidate|4985|(12, 16, 12)|var|float64
uop_4986 = relay.cos(var_4985.astype('float64')) # shape=(12, 16, 12)
func_4426_call = mod.get_global_var('func_4426')
func_4428_call = mutated_mod.get_global_var('func_4428')
call_4992 = relay.TupleGetItem(func_4426_call(), 0)
call_4993 = relay.TupleGetItem(func_4428_call(), 0)
output = relay.Tuple([uop_4986,call_4992,])
output2 = relay.Tuple([uop_4986,call_4993,])
func_4996 = relay.Function([var_4985,], output)
mod['func_4996'] = func_4996
mod = relay.transform.InferType()(mod)
mutated_mod['func_4996'] = func_4996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4997 = relay.var("var_4997", dtype = "float64", shape = (12, 16, 12))#candidate|4997|(12, 16, 12)|var|float64
func_4996_call = mutated_mod.get_global_var('func_4996')
call_4998 = func_4996_call(var_4997)
output = call_4998
func_4999 = relay.Function([var_4997], output)
mutated_mod['func_4999'] = func_4999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4426_call = mod.get_global_var('func_4426')
func_4428_call = mutated_mod.get_global_var('func_4428')
call_5047 = relay.TupleGetItem(func_4426_call(), 2)
call_5048 = relay.TupleGetItem(func_4428_call(), 2)
output = call_5047
output2 = call_5048
func_5053 = relay.Function([], output)
mod['func_5053'] = func_5053
mod = relay.transform.InferType()(mod)
output = func_5053()
func_5054 = relay.Function([], output)
mutated_mod['func_5054'] = func_5054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_5091 = relay.TupleGetItem(func_3282_call(), 0)
call_5092 = relay.TupleGetItem(func_3283_call(), 0)
func_163_call = mod.get_global_var('func_163')
func_165_call = mutated_mod.get_global_var('func_165')
const_5111 = relay.const([-2,10,8,9,-2,-3,7,6,-3,3,-10,1,-4,5,-7,-2,9,-8,-1,-1,10,-7,-9,2,-1,-8,-3,-6,7,7,-6,-4,10,4,-1,-4,10,5,-6,1,-3,8,-7,5,10,9,-8,10,5,9,8,-6,-7,-8,-9,10,-10,-7,7,-3,3,-2,5,9,6,5,-5,2,1,7,-1,-1,7,7,2,-2,2,-6,-6,4,-6,7,9,3,1,7,7,4,7,-10,1,-6,8,7,-8,5,1,3,-1,-7,6,-6,-3,-7,-10,-3,-10,4,-10,1,6,-2,-6,-7,3,1,10,-2,-6,5,-7,8,7,7,-5,-7,-4,7,6,-1,8,8,-7,-2,1,-10,-8,-8,-10,-2,5,5,-8,3,6,3,-4,-1,5,-6,1,-5,-4,-3,9,-9,-5,-8,-7,-9,3,-7,6,9,-1,6,-1,-10,5,9,-9,10,5,8,-9,6,-10,-10,-3,6,6,-6,4,-5,-1,4,-5,5,4,-3,-10,-6,4,-7,-7,-10,6,3,6,-8,2,-7,6,-8,-3,3,2,6,-5,4,7,-8,-4,2,9,-4,-9,10,3,6,-1,-1,-8,2,1,9,1,-10,8,-4,-9,-2,1,8,1,10,-4,-8,2,-8,-5,-3,-4,-3,5,3,-6,-6,8,1,-7,5,5,-4,3,-2,-10,-5,7,9,5,-8,9,-10,-6,-8,5,4,7,9,-1,8,-5,8,-3,4,10,-1,-5,-8,3,6,9,9,8,-6,6,-2,9,3,-8,-9,10,-9,-10,-6,5,2,1,-2,7,10,1,6,-4,1,-7,-2,10,-2,10,-5,1,1,-7,3,-10,-7,6,1,2,4,2,-6,9,5,5,4,-5,8,-7,-4,-5,-8,-6,-3,-2,-10,2,7,2,-1,-9,-1,-4,-6,9,8,3,-6,-4,9,-5,10,-3,-1,10,1,10,6,4,-5,-4,-6,-8,7,-1,-9,7,6,-8,-6,8,10,3,2,-7,-10,-9,-7,-1,8,-3,8,6,-2,8,5,-5,-8,10,-6,6,-10,-2,-9,-3,3,-5,8,5,-8,-5,-3,-7,-1,-10,5,-10,-10,-2,-5,7,3,-1,5,-10,-2,-5,7,5,-10,4,-10,10,9,10,-9,6,-9,2,4,7,6,1,8,3,3,-5,4,-5,-7,8,2,-7,-10,6,-10,-10,-9,-10,-8,-4,10,6,-5,8,-5,-10,-2,-9,6,8,10,-2,10,-5,7,-1,-9,5,-7,-9,-1,9,-6,6,4,7,4,3,5,4,9,1,4,3,-8,4,-1,-3,-3,-8,2,3,7,2,5,-4,-3,2,2,7,-8,-9,7,-6,10,-7,9,2,7,-8,10,-5,-8,8,-2,1,-7,-9,-2,-5,6,9,-4,-1,-5,-1,2,5,3,-9,-10,5,1,-2,-10,9,10,3,-9,3,5,6,-10,-5,-4,-9,7,2,9,-2,4,7,9,6,-4,1,-4,7,10,8,8,-10,3,-4,-9,-3,6,-7,-10,5,3,-3,5,-1,-4,2,-8,7,-6,4,-7,-10,-5,-10,-7,10,8,-7,5,-9,8,-9,4,6,8,7,4,-8,2,5,2,-1,9,5,-7,3,6,10,1,-1,-5,-4,-6,10,-2,-1,-2,-5,4,7,4,5,-3,9,-2,-2,-1,-7,-3,-6,4,9,4,7,6,7,5,10,-10,9,-3,10,9,10,-4,7,8,6,-2,7,-8,-7,-10,-8,-8,-2,-1,-5,-10,2,-3,-4,7,-2,2,8,-6,2,2,6,-8,-2,-1,-9,2,-4,2,-8,9,-1,-7,-2,2,1,-5,-5,-3,2,-6,4,-4,-4,10,9,-10,-2,-7,-4,-10,4,-9,-8,8,8,-1,-3,-3,-1,-9,-4,-9,7,-3,-7,-5,-6,-2,7,-4,-5,7,8,-4,-5,-9,3,-7,8,-3,-3,-7,-1,5,2,-2,4,4,-1,3,3,-7,4,9,4,-6,-10,-7,-4,10,-2,3,-2,-10,-7,-1,8,9,1,-3,-1,1,-2,2,-3,-1,7,-2,3,3,8,-2,-9,-8,8,7,-2,1,-9,9,-7,4,6,-4,10,9,-9,-4,-10,3,6,9,6,-2,-5,6,5,6,8,10,-7,-5,8,9,2,9,-9,5,-8,-2,-2,-5,-8,6,-2,3,-5,-8,-6,2,6,-7,10,2,-1,-1,3,-9,8,7,4,-9,-6,2,3,-1,7,-6,2,-7,2,-7,5,-6,-3,-4,2,-6,10,4,3,-4,5,-1,10,1,7,9,-4,-8,-7,-4,6,9,7,9,9,2,5,-1,3,-9,10,6,-10,-2,5,-7,-5,6,10,-6,3,10,-3,-3,3,-7,-7,-6,7,5,4,-4,-10,5,-8,-6,-8,8,-1,6,-2,-6,7,-7,2,8,-6,8,-3,-4,1,3,-10,1,-2,5,1,3,5,-4,-2,6,-7,3,-5,-2,-1,-6,-5,-4,3,1,1,3,1,-7,-4,-2,5,-10,6,-7,-8,-10,9,10,-3,7,2,-2,-9,-10,1,-3,-1,7,6,6,6,-7,-10,-6,-7,-7,-2,5,-9,6,9,6,-10,-7,6,2,-9,-8,5,2,-6,-2,9,2,4,-7,7,3,6,-6,5,-4,-7,3,-6,-6,3,5,-7,1,-6,4,-2,1,-9,10,-4,-10,7,-3,-10,7,6,7,-8,-7,-7,-8,-10,-6,-5,-4,-9,10,-8,10,1,-3,-9,2,-9,4,10,4,10,-8,6,-3,-6,2,-5,2,-10,-3,-5,8,6,1,-5,-5,-7,-9,-4,-8,5,-4,4,6,-3,5,-6,4,-7,7,2,-7,6,3,-8,2,-3,-4,2,-1,9,-3,-10,-6,-3,-1,6,7,-3,3,1,7,-2,9,10,-1,7,-5,-4,-4,-5,-4,-2,-2,9,-8,-3,-4,-5,10,-4,-6,6,8,2,9,-6,8,-3,-10,-8,-5,-3,-5,-4,6,8,1,-5,6,-10,7,-7,3,-7,-6,-3,-5,4,5,-5,-7,4,8,8,9,10,-5,10,9,-1,2,8,10,-7,9,7,8,-8,1,2,-8,-7,-9,1,6,-3,-5,6,-4,-2,9,-2,1,3,8,3,6,-8,-8,-3,2,1,-8,5,-1,6,6,-5,8,8,-3,-1,-2,-4,-10,5,2,1,4,-3,-3,-5,6,4,9,-9,7,-1,-3,-9,1,-4,9,-2,-1,10,-1,3,-8,-1,-10,-9,-4,-6,-7,-9,1,9,9,5,-6,6,-1,-5,5,-3,-10,-4,7,3,-8,-10,6,-9,3,-8,8,-4,-2,-5,9,-4,4,-5,-9,-5,-1,-6,-6,-3,-8,6,3,-4,-3,4,10,-10,7,5,4,-2,7,-1,2,2,4,-7,-9,4,3,1,5,8,-9,-7,-7,9,7,-6,7,-1,5,-10,1,4,1,7,-9,7,2,-4,-4,-2,6,-2,-6,-3,-4,-3,6,-1,5,4,-5,-5,-6,-7,-3,-3,-6,1,1,1,7,-10,-3,10,9,1,7,-4,-6,-3,-9,-9,3,-5,6,-10,9,-5,-9,10,1,3,-9,10,7,4,2,-8,-3,-9,-8,1,-7,2,3,5,3,-3,4,-10,7,-6,7,-3,-7,-1,-3,4,1,7,8,-10,-1,-5,-4,-7,-9,1,-7,8,1,10,-4,-4,-10,8,3,1,9,-1,1,6,-1,7,3,3,-7,-8,7,5,-2,-7,9,3,6,-10,9,8,-5,7,2,-4,3,1,5,-9,-7,4,-6,3,-10,-8,1,1,3,-7,-10,-6,-4,-2,3,6,2,7,6,10,6,-6,-6,-4,5,-5,-2,-7,-8,-3,-2,4,-10,2,2,3,1,-5,-6], dtype = "uint64")#candidate|5111|(1456,)|const|uint64
call_5110 = relay.TupleGetItem(func_163_call(relay.reshape(const_5111.astype('uint64'), [14, 8, 13])), 0)
call_5112 = relay.TupleGetItem(func_165_call(relay.reshape(const_5111.astype('uint64'), [14, 8, 13])), 0)
output = relay.Tuple([call_5091,call_5110,const_5111,])
output2 = relay.Tuple([call_5092,call_5112,const_5111,])
func_5118 = relay.Function([], output)
mod['func_5118'] = func_5118
mod = relay.transform.InferType()(mod)
mutated_mod['func_5118'] = func_5118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5118_call = mutated_mod.get_global_var('func_5118')
call_5119 = func_5118_call()
output = call_5119
func_5120 = relay.Function([], output)
mutated_mod['func_5120'] = func_5120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_5128 = relay.TupleGetItem(func_3652_call(), 0)
call_5129 = relay.TupleGetItem(func_3653_call(), 0)
output = call_5128
output2 = call_5129
func_5141 = relay.Function([], output)
mod['func_5141'] = func_5141
mod = relay.transform.InferType()(mod)
output = func_5141()
func_5142 = relay.Function([], output)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5152 = relay.var("var_5152", dtype = "float32", shape = (14, 9, 11))#candidate|5152|(14, 9, 11)|var|float32
uop_5153 = relay.acosh(var_5152.astype('float32')) # shape=(14, 9, 11)
func_2113_call = mod.get_global_var('func_2113')
func_2115_call = mutated_mod.get_global_var('func_2115')
var_5158 = relay.var("var_5158", dtype = "int32", shape = (140,))#candidate|5158|(140,)|var|int32
call_5157 = relay.TupleGetItem(func_2113_call(relay.reshape(var_5158.astype('int32'), [140,])), 2)
call_5159 = relay.TupleGetItem(func_2115_call(relay.reshape(var_5158.astype('int32'), [140,])), 2)
var_5165 = relay.var("var_5165", dtype = "float32", shape = (14, 9, 11))#candidate|5165|(14, 9, 11)|var|float32
bop_5166 = relay.logical_xor(uop_5153.astype('int16'), relay.reshape(var_5165.astype('int16'), relay.shape_of(uop_5153))) # shape=(14, 9, 11)
func_4955_call = mod.get_global_var('func_4955')
func_4958_call = mutated_mod.get_global_var('func_4958')
const_5186 = relay.const([False,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,True,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,False,False,False], dtype = "bool")#candidate|5186|(1456,)|const|bool
call_5185 = relay.TupleGetItem(func_4955_call(relay.reshape(const_5186.astype('bool'), [14, 8, 13]), relay.reshape(const_5186.astype('uint64'), [14, 8, 13]), ), 0)
call_5187 = relay.TupleGetItem(func_4958_call(relay.reshape(const_5186.astype('bool'), [14, 8, 13]), relay.reshape(const_5186.astype('uint64'), [14, 8, 13]), ), 0)
func_3668_call = mod.get_global_var('func_3668')
func_3671_call = mutated_mod.get_global_var('func_3671')
const_5190 = relay.const([6.240998,-1.224135,2.982122,-2.344001,2.069446,3.145612,4.989324,3.827933,-0.737637,-5.158069,-1.512231,2.406512,-4.742336,-9.536311,-7.727401,1.186881,-7.037913,-5.569712,-6.348155,-3.605482,-4.662504,-2.832175,-7.153657,7.018056,-9.324030,-5.379679,-2.253423,5.743277,4.249182,-7.702549,6.941800,3.144597,1.132815,-8.385990,-8.223449,8.661535,-2.506751,-5.366092,6.182420,-8.220554,-1.568287,3.729568,-6.206265,9.645443,-3.719474,7.798820,1.917652,5.969327,5.131410,-0.319308,-2.294721,-6.100567,-9.940944,6.471146,4.103721,1.252645,-5.648700,-3.850333,1.951935,5.833196,6.339456,-7.322267,5.852855,6.359563,8.912779,5.615601,6.198526,-2.940594,-7.348067,-4.301122,5.213269,8.142341,-8.733410,-9.675652,3.522392,9.251525,7.690943,-3.624362,4.939412,9.602420,3.840113,-6.113278,-5.690414,-4.409555,-3.797077,-1.205627,4.718365,6.407044,6.682027,2.421285,5.493616], dtype = "float64")#candidate|5190|(91,)|const|float64
call_5189 = func_3668_call(relay.reshape(const_5190.astype('float64'), [7, 1, 13]))
call_5191 = func_3668_call(relay.reshape(const_5190.astype('float64'), [7, 1, 13]))
func_4400_call = mod.get_global_var('func_4400')
func_4402_call = mutated_mod.get_global_var('func_4402')
const_5209 = relay.const([-10,-1,2,-1,10,-9,-2,1,-3,-8,6,1,-2,8,1,-1,-10,1,-8,4,10,3,2,-2,8,5,-9,-4,1,3,9,-2,8,-3,-8,6,-2,9,-2,1,1,6,2,1,1,-3,9,1,1,-4,1,-6,-9,-9], dtype = "uint32")#candidate|5209|(54,)|const|uint32
call_5208 = relay.TupleGetItem(func_4400_call(relay.reshape(const_5209.astype('uint32'), [54,])), 2)
call_5210 = relay.TupleGetItem(func_4402_call(relay.reshape(const_5209.astype('uint32'), [54,])), 2)
output = relay.Tuple([call_5157,var_5158,bop_5166,call_5185,const_5186,call_5189,const_5190,call_5208,const_5209,])
output2 = relay.Tuple([call_5159,var_5158,bop_5166,call_5187,const_5186,call_5191,const_5190,call_5210,const_5209,])
func_5215 = relay.Function([var_5152,var_5158,var_5165,], output)
mod['func_5215'] = func_5215
mod = relay.transform.InferType()(mod)
mutated_mod['func_5215'] = func_5215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5215_call = mutated_mod.get_global_var('func_5215')
var_5217 = relay.var("var_5217", dtype = "float32", shape = (14, 9, 11))#candidate|5217|(14, 9, 11)|var|float32
var_5218 = relay.var("var_5218", dtype = "int32", shape = (140,))#candidate|5218|(140,)|var|int32
var_5219 = relay.var("var_5219", dtype = "float32", shape = (14, 9, 11))#candidate|5219|(14, 9, 11)|var|float32
call_5216 = func_5215_call(var_5217,var_5218,var_5219,)
output = call_5216
func_5220 = relay.Function([var_5217,var_5218,var_5219,], output)
mutated_mod['func_5220'] = func_5220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_5281 = relay.TupleGetItem(func_3532_call(), 0)
call_5282 = relay.TupleGetItem(func_3533_call(), 0)
output = call_5281
output2 = call_5282
func_5285 = relay.Function([], output)
mod['func_5285'] = func_5285
mod = relay.transform.InferType()(mod)
output = func_5285()
func_5286 = relay.Function([], output)
mutated_mod['func_5286'] = func_5286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3990_call = mod.get_global_var('func_3990')
func_3992_call = mutated_mod.get_global_var('func_3992')
call_5309 = relay.TupleGetItem(func_3990_call(), 4)
call_5310 = relay.TupleGetItem(func_3992_call(), 4)
output = call_5309
output2 = call_5310
func_5317 = relay.Function([], output)
mod['func_5317'] = func_5317
mod = relay.transform.InferType()(mod)
mutated_mod['func_5317'] = func_5317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5317_call = mutated_mod.get_global_var('func_5317')
call_5318 = func_5317_call()
output = call_5318
func_5319 = relay.Function([], output)
mutated_mod['func_5319'] = func_5319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4759_call = mod.get_global_var('func_4759')
func_4761_call = mutated_mod.get_global_var('func_4761')
call_5381 = relay.TupleGetItem(func_4759_call(), 1)
call_5382 = relay.TupleGetItem(func_4761_call(), 1)
uop_5387 = relay.sigmoid(call_5381.astype('float64')) # shape=(11, 15, 13)
uop_5389 = relay.sigmoid(call_5382.astype('float64')) # shape=(11, 15, 13)
func_4055_call = mod.get_global_var('func_4055')
func_4057_call = mutated_mod.get_global_var('func_4057')
call_5397 = func_4055_call()
call_5398 = func_4055_call()
output = relay.Tuple([uop_5387,call_5397,])
output2 = relay.Tuple([uop_5389,call_5398,])
func_5434 = relay.Function([], output)
mod['func_5434'] = func_5434
mod = relay.transform.InferType()(mod)
output = func_5434()
func_5435 = relay.Function([], output)
mutated_mod['func_5435'] = func_5435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4426_call = mod.get_global_var('func_4426')
func_4428_call = mutated_mod.get_global_var('func_4428')
call_5459 = relay.TupleGetItem(func_4426_call(), 2)
call_5460 = relay.TupleGetItem(func_4428_call(), 2)
output = call_5459
output2 = call_5460
func_5467 = relay.Function([], output)
mod['func_5467'] = func_5467
mod = relay.transform.InferType()(mod)
mutated_mod['func_5467'] = func_5467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5467_call = mutated_mod.get_global_var('func_5467')
call_5468 = func_5467_call()
output = call_5468
func_5469 = relay.Function([], output)
mutated_mod['func_5469'] = func_5469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_5524 = relay.TupleGetItem(func_3652_call(), 0)
call_5525 = relay.TupleGetItem(func_3653_call(), 0)
func_2113_call = mod.get_global_var('func_2113')
func_2115_call = mutated_mod.get_global_var('func_2115')
const_5535 = relay.const([10,-6,10,9,6,8,3,10,4,-10,-8,10,-3,-4,-10,4,6,2,3,3,1,3,-3,-5,1,-3,-8,-1,-9,5,-10,9,8,-4,-5,2,-10,-7,-8,-1,-8,7,9,-6,-1,-8,-1,-10,10,-1,1,-8,8,6,-8,4,3,-3,-9,1,-3,2,-5,4,-6,-10,-8,-10,4,4,-2,9,10,-8,-4,-9,-7,10,5,9,10,-10,8,7,-3,5,9,-1,-7,-6,-7,7,-5,-7,-2,4,4,2,-2,-3,10,-10,-1,6,9,10,-6,-1,-7,-3,-3,-10,-9,-10,-1,-5,2,-8,6,2,7,-3,-2,-3,-3,7,-3,6,1,-2,10,3,-3,-4,6,-8,9,-5,-6,-9], dtype = "int32")#candidate|5535|(140,)|const|int32
call_5534 = relay.TupleGetItem(func_2113_call(relay.reshape(const_5535.astype('int32'), [140,])), 1)
call_5536 = relay.TupleGetItem(func_2115_call(relay.reshape(const_5535.astype('int32'), [140,])), 1)
func_4426_call = mod.get_global_var('func_4426')
func_4428_call = mutated_mod.get_global_var('func_4428')
call_5541 = relay.TupleGetItem(func_4426_call(), 3)
call_5542 = relay.TupleGetItem(func_4428_call(), 3)
func_5141_call = mod.get_global_var('func_5141')
func_5142_call = mutated_mod.get_global_var('func_5142')
call_5543 = func_5141_call()
call_5544 = func_5141_call()
func_5285_call = mod.get_global_var('func_5285')
func_5286_call = mutated_mod.get_global_var('func_5286')
call_5546 = func_5285_call()
call_5547 = func_5285_call()
func_4687_call = mod.get_global_var('func_4687')
func_4689_call = mutated_mod.get_global_var('func_4689')
var_5555 = relay.var("var_5555", dtype = "int32", shape = (360,))#candidate|5555|(360,)|var|int32
call_5554 = relay.TupleGetItem(func_4687_call(relay.reshape(var_5555.astype('int32'), [360,])), 0)
call_5556 = relay.TupleGetItem(func_4689_call(relay.reshape(var_5555.astype('int32'), [360,])), 0)
bop_5557 = relay.bitwise_xor(call_5534.astype('int8'), relay.reshape(const_5535.astype('int8'), relay.shape_of(call_5534))) # shape=(4, 7, 5)
bop_5560 = relay.bitwise_xor(call_5536.astype('int8'), relay.reshape(const_5535.astype('int8'), relay.shape_of(call_5536))) # shape=(4, 7, 5)
uop_5569 = relay.exp(call_5541.astype('float64')) # shape=(975,)
uop_5571 = relay.exp(call_5542.astype('float64')) # shape=(975,)
func_4827_call = mod.get_global_var('func_4827')
func_4829_call = mutated_mod.get_global_var('func_4829')
call_5576 = relay.TupleGetItem(func_4827_call(), 1)
call_5577 = relay.TupleGetItem(func_4829_call(), 1)
output = relay.Tuple([call_5524,call_5543,call_5546,call_5554,var_5555,bop_5557,uop_5569,call_5576,])
output2 = relay.Tuple([call_5525,call_5544,call_5547,call_5556,var_5555,bop_5560,uop_5571,call_5577,])
func_5579 = relay.Function([var_5555,], output)
mod['func_5579'] = func_5579
mod = relay.transform.InferType()(mod)
var_5580 = relay.var("var_5580", dtype = "int32", shape = (360,))#candidate|5580|(360,)|var|int32
output = func_5579(var_5580)
func_5581 = relay.Function([var_5580], output)
mutated_mod['func_5581'] = func_5581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4426_call = mod.get_global_var('func_4426')
func_4428_call = mutated_mod.get_global_var('func_4428')
call_5586 = relay.TupleGetItem(func_4426_call(), 0)
call_5587 = relay.TupleGetItem(func_4428_call(), 0)
func_4827_call = mod.get_global_var('func_4827')
func_4829_call = mutated_mod.get_global_var('func_4829')
call_5594 = relay.TupleGetItem(func_4827_call(), 0)
call_5595 = relay.TupleGetItem(func_4829_call(), 0)
var_5597 = relay.var("var_5597", dtype = "bool", shape = (6, 20))#candidate|5597|(6, 20)|var|bool
bop_5598 = relay.not_equal(call_5594.astype('bool'), relay.reshape(var_5597.astype('bool'), relay.shape_of(call_5594))) # shape=(6, 20)
bop_5601 = relay.not_equal(call_5595.astype('bool'), relay.reshape(var_5597.astype('bool'), relay.shape_of(call_5595))) # shape=(6, 20)
output = relay.Tuple([call_5586,bop_5598,])
output2 = relay.Tuple([call_5587,bop_5601,])
func_5605 = relay.Function([var_5597,], output)
mod['func_5605'] = func_5605
mod = relay.transform.InferType()(mod)
var_5606 = relay.var("var_5606", dtype = "bool", shape = (6, 20))#candidate|5606|(6, 20)|var|bool
output = func_5605(var_5606)
func_5607 = relay.Function([var_5606], output)
mutated_mod['func_5607'] = func_5607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_5619 = relay.TupleGetItem(func_3339_call(), 0)
call_5620 = relay.TupleGetItem(func_3341_call(), 0)
output = call_5619
output2 = call_5620
func_5635 = relay.Function([], output)
mod['func_5635'] = func_5635
mod = relay.transform.InferType()(mod)
output = func_5635()
func_5636 = relay.Function([], output)
mutated_mod['func_5636'] = func_5636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4827_call = mod.get_global_var('func_4827')
func_4829_call = mutated_mod.get_global_var('func_4829')
call_5694 = relay.TupleGetItem(func_4827_call(), 1)
call_5695 = relay.TupleGetItem(func_4829_call(), 1)
output = relay.Tuple([call_5694,])
output2 = relay.Tuple([call_5695,])
func_5701 = relay.Function([], output)
mod['func_5701'] = func_5701
mod = relay.transform.InferType()(mod)
output = func_5701()
func_5702 = relay.Function([], output)
mutated_mod['func_5702'] = func_5702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3990_call = mod.get_global_var('func_3990')
func_3992_call = mutated_mod.get_global_var('func_3992')
call_5718 = relay.TupleGetItem(func_3990_call(), 0)
call_5719 = relay.TupleGetItem(func_3992_call(), 0)
func_4303_call = mod.get_global_var('func_4303')
func_4306_call = mutated_mod.get_global_var('func_4306')
const_5728 = relay.const([[3,-4,-10],[9,7,-6],[-1,-8,-6],[-8,-5,-4],[-7,9,-1],[1,-8,6]], dtype = "uint32")#candidate|5728|(6, 3)|const|uint32
const_5729 = relay.const([-3,10,-9,-10,8,9,6,10,-2,-9,10,1,-3,6,8,6,-8,-1,-7,-1,-6,-8,-8,-4,-5,9,-2,7,-9,7,-6,9,9,-10,2,9,6,10,-8,-2,7,10,-4,-5,10,10,-2,2,10,8,-5,-10,6,3], dtype = "uint32")#candidate|5729|(54,)|const|uint32
call_5727 = func_4303_call(relay.reshape(const_5728.astype('uint32'), [1, 6, 3]), relay.reshape(const_5729.astype('uint32'), [3, 6, 3]), )
call_5730 = func_4303_call(relay.reshape(const_5728.astype('uint32'), [1, 6, 3]), relay.reshape(const_5729.astype('uint32'), [3, 6, 3]), )
func_4687_call = mod.get_global_var('func_4687')
func_4689_call = mutated_mod.get_global_var('func_4689')
var_5759 = relay.var("var_5759", dtype = "int32", shape = (360, 1))#candidate|5759|(360, 1)|var|int32
call_5758 = relay.TupleGetItem(func_4687_call(relay.reshape(var_5759.astype('int32'), [360,])), 1)
call_5760 = relay.TupleGetItem(func_4689_call(relay.reshape(var_5759.astype('int32'), [360,])), 1)
func_61_call = mod.get_global_var('func_61')
func_64_call = mutated_mod.get_global_var('func_64')
call_5765 = func_61_call(relay.reshape(call_5758.astype('bool'), [5, 6, 4]), relay.reshape(call_5758.astype('bool'), [5, 6, 4]), )
call_5766 = func_61_call(relay.reshape(call_5758.astype('bool'), [5, 6, 4]), relay.reshape(call_5758.astype('bool'), [5, 6, 4]), )
output = relay.Tuple([call_5718,call_5727,const_5728,const_5729,call_5758,var_5759,call_5765,])
output2 = relay.Tuple([call_5719,call_5730,const_5728,const_5729,call_5760,var_5759,call_5766,])
func_5779 = relay.Function([var_5759,], output)
mod['func_5779'] = func_5779
mod = relay.transform.InferType()(mod)
var_5780 = relay.var("var_5780", dtype = "int32", shape = (360, 1))#candidate|5780|(360, 1)|var|int32
output = func_5779(var_5780)
func_5781 = relay.Function([var_5780], output)
mutated_mod['func_5781'] = func_5781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5467_call = mod.get_global_var('func_5467')
func_5469_call = mutated_mod.get_global_var('func_5469')
call_5821 = func_5467_call()
call_5822 = func_5467_call()
output = relay.Tuple([call_5821,])
output2 = relay.Tuple([call_5822,])
func_5838 = relay.Function([], output)
mod['func_5838'] = func_5838
mod = relay.transform.InferType()(mod)
output = func_5838()
func_5839 = relay.Function([], output)
mutated_mod['func_5839'] = func_5839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4669_call = mod.get_global_var('func_4669')
func_4670_call = mutated_mod.get_global_var('func_4670')
call_5900 = func_4669_call()
call_5901 = func_4669_call()
output = relay.Tuple([call_5900,])
output2 = relay.Tuple([call_5901,])
func_5913 = relay.Function([], output)
mod['func_5913'] = func_5913
mod = relay.transform.InferType()(mod)
mutated_mod['func_5913'] = func_5913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5913_call = mutated_mod.get_global_var('func_5913')
call_5914 = func_5913_call()
output = call_5914
func_5915 = relay.Function([], output)
mutated_mod['func_5915'] = func_5915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_5964 = relay.TupleGetItem(func_3339_call(), 0)
call_5965 = relay.TupleGetItem(func_3341_call(), 0)
func_3821_call = mod.get_global_var('func_3821')
func_3825_call = mutated_mod.get_global_var('func_3825')
var_5979 = relay.var("var_5979", dtype = "uint32", shape = ())#candidate|5979|()|var|uint32
var_5980 = relay.var("var_5980", dtype = "uint32", shape = (390,))#candidate|5980|(390,)|var|uint32
var_5981 = relay.var("var_5981", dtype = "float64", shape = (360,))#candidate|5981|(360,)|var|float64
call_5978 = relay.TupleGetItem(func_3821_call(relay.reshape(var_5979.astype('uint32'), []), relay.reshape(var_5980.astype('uint32'), [3, 13, 10]), relay.reshape(var_5981.astype('float64'), [360,]), ), 3)
call_5982 = relay.TupleGetItem(func_3825_call(relay.reshape(var_5979.astype('uint32'), []), relay.reshape(var_5980.astype('uint32'), [3, 13, 10]), relay.reshape(var_5981.astype('float64'), [360,]), ), 3)
output = relay.Tuple([call_5964,call_5978,var_5979,var_5980,var_5981,])
output2 = relay.Tuple([call_5965,call_5982,var_5979,var_5980,var_5981,])
func_5994 = relay.Function([var_5979,var_5980,var_5981,], output)
mod['func_5994'] = func_5994
mod = relay.transform.InferType()(mod)
mutated_mod['func_5994'] = func_5994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5994_call = mutated_mod.get_global_var('func_5994')
var_5996 = relay.var("var_5996", dtype = "uint32", shape = ())#candidate|5996|()|var|uint32
var_5997 = relay.var("var_5997", dtype = "uint32", shape = (390,))#candidate|5997|(390,)|var|uint32
var_5998 = relay.var("var_5998", dtype = "float64", shape = (360,))#candidate|5998|(360,)|var|float64
call_5995 = func_5994_call(var_5996,var_5997,var_5998,)
output = call_5995
func_5999 = relay.Function([var_5996,var_5997,var_5998,], output)
mutated_mod['func_5999'] = func_5999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4486_call = mod.get_global_var('func_4486')
func_4487_call = mutated_mod.get_global_var('func_4487')
call_6043 = relay.TupleGetItem(func_4486_call(), 0)
call_6044 = relay.TupleGetItem(func_4487_call(), 0)
output = call_6043
output2 = call_6044
func_6045 = relay.Function([], output)
mod['func_6045'] = func_6045
mod = relay.transform.InferType()(mod)
mutated_mod['func_6045'] = func_6045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6045_call = mutated_mod.get_global_var('func_6045')
call_6046 = func_6045_call()
output = call_6046
func_6047 = relay.Function([], output)
mutated_mod['func_6047'] = func_6047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5053_call = mod.get_global_var('func_5053')
func_5054_call = mutated_mod.get_global_var('func_5054')
call_6050 = func_5053_call()
call_6051 = func_5053_call()
uop_6053 = relay.log(call_6050.astype('float32')) # shape=(15, 5, 13)
uop_6055 = relay.log(call_6051.astype('float32')) # shape=(15, 5, 13)
output = uop_6053
output2 = uop_6055
func_6077 = relay.Function([], output)
mod['func_6077'] = func_6077
mod = relay.transform.InferType()(mod)
output = func_6077()
func_6078 = relay.Function([], output)
mutated_mod['func_6078'] = func_6078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_6083 = relay.TupleGetItem(func_3652_call(), 1)
call_6084 = relay.TupleGetItem(func_3653_call(), 1)
func_2783_call = mod.get_global_var('func_2783')
func_2786_call = mutated_mod.get_global_var('func_2786')
const_6089 = relay.const(False, dtype = "bool")#candidate|6089|()|const|bool
var_6090 = relay.var("var_6090", dtype = "bool", shape = (975,))#candidate|6090|(975,)|var|bool
call_6088 = func_2783_call(relay.reshape(const_6089.astype('bool'), []), relay.reshape(var_6090.astype('bool'), [15, 5, 13]), )
call_6091 = func_2783_call(relay.reshape(const_6089.astype('bool'), []), relay.reshape(var_6090.astype('bool'), [15, 5, 13]), )
const_6094 = relay.const([[[True,True,False,True,True,False,False,True,False,True,False,False,False],[False,False,False,False,True,False,False,False,False,False,True,True,True],[True,False,False,True,False,True,False,False,False,False,False,False,True],[False,False,True,True,False,False,True,False,False,False,True,True,True],[True,True,False,False,False,False,True,True,True,True,False,False,False]],[[True,False,False,True,True,True,True,True,False,False,True,True,False],[True,False,True,False,True,False,False,True,True,False,True,False,True],[True,True,False,True,True,True,True,False,False,False,True,False,True],[True,False,False,False,False,False,False,False,False,True,False,False,True],[True,True,False,True,False,True,True,False,False,False,True,True,False]],[[False,False,True,False,True,False,False,False,True,False,False,True,False],[False,True,True,True,False,False,False,False,False,False,False,True,True],[False,True,False,False,False,False,False,True,False,True,False,False,True],[True,True,True,False,True,False,True,False,True,True,True,True,False],[True,True,False,False,False,False,True,True,False,True,True,False,True]],[[False,False,True,False,True,False,True,True,False,True,True,False,True],[False,True,False,True,True,True,False,True,True,True,False,True,False],[False,False,True,True,True,True,True,False,False,False,False,True,True],[True,False,False,True,False,False,False,False,True,False,False,False,True],[True,True,True,False,True,False,True,False,True,False,False,False,True]],[[False,False,True,True,False,False,False,False,True,False,True,False,False],[False,False,False,False,True,False,True,True,False,False,True,True,True],[False,False,True,False,True,True,False,False,False,False,True,False,True],[False,False,False,False,True,False,False,True,True,False,True,False,True],[False,True,False,True,False,False,True,True,False,False,False,False,True]],[[False,True,False,True,False,False,True,False,True,False,False,True,False],[True,True,True,False,False,True,True,False,True,True,False,False,False],[False,True,False,True,False,False,False,False,True,False,False,True,False],[True,True,False,True,True,False,False,True,False,True,False,True,True],[True,False,False,False,False,False,True,False,True,True,False,True,True]],[[False,True,True,True,True,True,False,False,False,False,False,False,True],[False,True,True,True,True,True,True,True,True,True,True,False,True],[True,True,True,False,False,True,False,True,False,True,False,True,True],[False,True,True,True,False,True,False,True,False,True,False,True,False],[True,False,False,True,True,True,False,True,True,False,False,True,False]],[[True,True,False,False,False,True,True,False,False,True,True,False,False],[False,False,True,True,False,False,False,False,False,True,True,False,False],[True,True,True,False,True,False,True,True,False,False,False,True,False],[False,False,True,True,False,True,True,True,True,True,False,True,False],[False,False,True,False,True,False,True,False,True,False,False,False,False]],[[False,False,False,True,False,True,True,False,False,True,True,True,True],[False,False,True,True,False,True,False,False,True,True,False,True,True],[True,True,True,False,True,True,False,False,False,True,True,True,True],[True,False,False,False,True,True,False,False,False,True,True,False,True],[True,True,True,False,False,True,True,True,True,True,False,True,True]],[[False,False,False,True,True,True,False,False,True,True,True,True,False],[True,False,True,False,True,False,True,True,False,False,False,False,True],[True,True,False,False,False,False,True,False,False,False,True,False,False],[False,True,True,True,True,True,False,True,True,True,True,False,False],[False,False,False,False,False,True,True,False,False,True,False,True,True]],[[False,True,False,False,False,False,False,True,True,True,False,True,False],[True,True,False,False,True,False,False,False,False,False,True,True,False],[True,False,True,False,True,True,False,True,False,False,True,False,True],[False,True,False,False,False,True,True,False,True,False,False,False,False],[False,False,False,True,True,True,True,False,False,False,True,False,True]],[[True,False,False,True,True,False,True,True,False,True,True,True,True],[False,False,True,False,False,True,True,False,False,False,False,True,False],[False,True,True,False,False,True,False,False,False,True,False,True,True],[True,False,False,False,True,False,False,False,True,True,True,False,True],[True,False,True,False,False,True,True,True,True,True,False,True,True]],[[True,True,False,False,False,True,True,False,True,False,False,False,True],[True,True,False,True,False,False,True,False,False,True,True,False,True],[True,True,True,False,True,False,True,True,True,True,False,False,True],[True,False,False,True,True,True,False,False,True,True,False,False,True],[False,False,False,False,True,True,False,False,False,True,True,True,False]],[[False,True,False,False,False,True,False,False,True,False,False,True,False],[True,False,False,True,True,False,True,False,True,False,True,True,True],[True,False,False,True,False,False,False,False,False,False,True,False,True],[False,False,True,False,False,False,False,False,True,False,True,True,False],[False,True,True,True,False,True,True,False,False,True,False,False,True]],[[False,False,False,True,True,True,True,False,True,False,False,True,False],[False,True,True,True,True,True,False,True,False,True,False,True,True],[False,False,False,False,True,False,False,False,True,False,True,True,False],[False,True,True,True,True,True,True,True,False,False,False,False,True],[True,True,True,False,True,True,True,True,True,False,True,False,False]]], dtype = "bool")#candidate|6094|(15, 5, 13)|const|bool
bop_6095 = relay.bitwise_and(call_6088.astype('int32'), relay.reshape(const_6094.astype('int32'), relay.shape_of(call_6088))) # shape=(15, 5, 13)
bop_6098 = relay.bitwise_and(call_6091.astype('int32'), relay.reshape(const_6094.astype('int32'), relay.shape_of(call_6091))) # shape=(15, 5, 13)
var_6106 = relay.var("var_6106", dtype = "uint64", shape = (14, 8, 13))#candidate|6106|(14, 8, 13)|var|uint64
bop_6107 = relay.less_equal(call_6083.astype('bool'), relay.reshape(var_6106.astype('bool'), relay.shape_of(call_6083))) # shape=(14, 8, 13)
bop_6110 = relay.less_equal(call_6084.astype('bool'), relay.reshape(var_6106.astype('bool'), relay.shape_of(call_6084))) # shape=(14, 8, 13)
output = relay.Tuple([const_6089,var_6090,bop_6095,bop_6107,])
output2 = relay.Tuple([const_6089,var_6090,bop_6098,bop_6110,])
func_6111 = relay.Function([var_6090,var_6106,], output)
mod['func_6111'] = func_6111
mod = relay.transform.InferType()(mod)
mutated_mod['func_6111'] = func_6111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6111_call = mutated_mod.get_global_var('func_6111')
var_6113 = relay.var("var_6113", dtype = "bool", shape = (975,))#candidate|6113|(975,)|var|bool
var_6114 = relay.var("var_6114", dtype = "uint64", shape = (14, 8, 13))#candidate|6114|(14, 8, 13)|var|uint64
call_6112 = func_6111_call(var_6113,var_6114,)
output = call_6112
func_6115 = relay.Function([var_6113,var_6114,], output)
mutated_mod['func_6115'] = func_6115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3389_call = mod.get_global_var('func_3389')
func_3391_call = mutated_mod.get_global_var('func_3391')
call_6148 = relay.TupleGetItem(func_3389_call(), 0)
call_6149 = relay.TupleGetItem(func_3391_call(), 0)
func_4108_call = mod.get_global_var('func_4108')
func_4110_call = mutated_mod.get_global_var('func_4110')
call_6164 = relay.TupleGetItem(func_4108_call(), 2)
call_6165 = relay.TupleGetItem(func_4110_call(), 2)
var_6170 = relay.var("var_6170", dtype = "bool", shape = (6, 20))#candidate|6170|(6, 20)|var|bool
bop_6171 = relay.equal(call_6164.astype('bool'), relay.reshape(var_6170.astype('bool'), relay.shape_of(call_6164))) # shape=(6, 20)
bop_6174 = relay.equal(call_6165.astype('bool'), relay.reshape(var_6170.astype('bool'), relay.shape_of(call_6165))) # shape=(6, 20)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_6175 = relay.TupleGetItem(func_3339_call(), 0)
call_6176 = relay.TupleGetItem(func_3341_call(), 0)
func_1786_call = mod.get_global_var('func_1786')
func_1789_call = mutated_mod.get_global_var('func_1789')
const_6182 = relay.const([-3,7,-1,-8,2,8,1,-5,-10,-10,-7,-7,-7,2,-2,4,-4,-7,-1,2,2,-9,7,-3,-3,8,-7,-8,-9,2,9,-7,8,10,10,5,1,3,9,5,-9,10,9,4,8,9,1,10,9,-9,1,9,9,10,-1,10,7,8,7,3,-8,-3,-8,8,-5,6,-2,-8,10,9,-10,-3,-10,-2,-5,-4,-7,1,2,-5,-6,-2,8,9,5,-1,-8,3,-7,5,-2,-4,6,4,-5,-6,2,9,-8,-9,-6,-10,-9,2,-10,8,6,10,-1,3,-5,-9,6,8,6,-9,-2,-9,-3,-6,8,4,-8,-9,1,5,10,3,-1,2,-10,10,-9,10,-9,-5,-10,4,-3,7], dtype = "int32")#candidate|6182|(140,)|const|int32
call_6181 = relay.TupleGetItem(func_1786_call(relay.reshape(const_6182.astype('int32'), [4, 7, 5]), relay.reshape(const_6182.astype('int32'), [4, 7, 5]), ), 0)
call_6183 = relay.TupleGetItem(func_1789_call(relay.reshape(const_6182.astype('int32'), [4, 7, 5]), relay.reshape(const_6182.astype('int32'), [4, 7, 5]), ), 0)
output = relay.Tuple([call_6148,bop_6171,call_6175,call_6181,const_6182,])
output2 = relay.Tuple([call_6149,bop_6174,call_6176,call_6183,const_6182,])
func_6194 = relay.Function([var_6170,], output)
mod['func_6194'] = func_6194
mod = relay.transform.InferType()(mod)
var_6195 = relay.var("var_6195", dtype = "bool", shape = (6, 20))#candidate|6195|(6, 20)|var|bool
output = func_6194(var_6195)
func_6196 = relay.Function([var_6195], output)
mutated_mod['func_6196'] = func_6196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5838_call = mod.get_global_var('func_5838')
func_5839_call = mutated_mod.get_global_var('func_5839')
call_6221 = relay.TupleGetItem(func_5838_call(), 0)
call_6222 = relay.TupleGetItem(func_5839_call(), 0)
output = relay.Tuple([call_6221,])
output2 = relay.Tuple([call_6222,])
func_6226 = relay.Function([], output)
mod['func_6226'] = func_6226
mod = relay.transform.InferType()(mod)
mutated_mod['func_6226'] = func_6226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6226_call = mutated_mod.get_global_var('func_6226')
call_6227 = func_6226_call()
output = call_6227
func_6228 = relay.Function([], output)
mutated_mod['func_6228'] = func_6228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_6234 = relay.TupleGetItem(func_3282_call(), 0)
call_6235 = relay.TupleGetItem(func_3283_call(), 0)
func_4827_call = mod.get_global_var('func_4827')
func_4829_call = mutated_mod.get_global_var('func_4829')
call_6264 = relay.TupleGetItem(func_4827_call(), 0)
call_6265 = relay.TupleGetItem(func_4829_call(), 0)
output = relay.Tuple([call_6234,call_6264,])
output2 = relay.Tuple([call_6235,call_6265,])
func_6270 = relay.Function([], output)
mod['func_6270'] = func_6270
mod = relay.transform.InferType()(mod)
mutated_mod['func_6270'] = func_6270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6270_call = mutated_mod.get_global_var('func_6270')
call_6271 = func_6270_call()
output = call_6271
func_6272 = relay.Function([], output)
mutated_mod['func_6272'] = func_6272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5317_call = mod.get_global_var('func_5317')
func_5319_call = mutated_mod.get_global_var('func_5319')
call_6342 = func_5317_call()
call_6343 = func_5317_call()
output = relay.Tuple([call_6342,])
output2 = relay.Tuple([call_6343,])
func_6359 = relay.Function([], output)
mod['func_6359'] = func_6359
mod = relay.transform.InferType()(mod)
mutated_mod['func_6359'] = func_6359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6359_call = mutated_mod.get_global_var('func_6359')
call_6360 = func_6359_call()
output = call_6360
func_6361 = relay.Function([], output)
mutated_mod['func_6361'] = func_6361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4827_call = mod.get_global_var('func_4827')
func_4829_call = mutated_mod.get_global_var('func_4829')
call_6389 = relay.TupleGetItem(func_4827_call(), 2)
call_6390 = relay.TupleGetItem(func_4829_call(), 2)
output = call_6389
output2 = call_6390
func_6398 = relay.Function([], output)
mod['func_6398'] = func_6398
mod = relay.transform.InferType()(mod)
output = func_6398()
func_6399 = relay.Function([], output)
mutated_mod['func_6399'] = func_6399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5053_call = mod.get_global_var('func_5053')
func_5054_call = mutated_mod.get_global_var('func_5054')
call_6427 = func_5053_call()
call_6428 = func_5053_call()
output = relay.Tuple([call_6427,])
output2 = relay.Tuple([call_6428,])
func_6443 = relay.Function([], output)
mod['func_6443'] = func_6443
mod = relay.transform.InferType()(mod)
mutated_mod['func_6443'] = func_6443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6443_call = mutated_mod.get_global_var('func_6443')
call_6444 = func_6443_call()
output = call_6444
func_6445 = relay.Function([], output)
mutated_mod['func_6445'] = func_6445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6077_call = mod.get_global_var('func_6077')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_6533 = func_6077_call()
call_6534 = func_6077_call()
func_6226_call = mod.get_global_var('func_6226')
func_6228_call = mutated_mod.get_global_var('func_6228')
call_6536 = relay.TupleGetItem(func_6226_call(), 0)
call_6537 = relay.TupleGetItem(func_6228_call(), 0)
func_5605_call = mod.get_global_var('func_5605')
func_5607_call = mutated_mod.get_global_var('func_5607')
var_6545 = relay.var("var_6545", dtype = "bool", shape = (120,))#candidate|6545|(120,)|var|bool
call_6544 = relay.TupleGetItem(func_5605_call(relay.reshape(var_6545.astype('bool'), [6, 20])), 1)
call_6546 = relay.TupleGetItem(func_5607_call(relay.reshape(var_6545.astype('bool'), [6, 20])), 1)
output = relay.Tuple([call_6533,call_6536,call_6544,var_6545,])
output2 = relay.Tuple([call_6534,call_6537,call_6546,var_6545,])
func_6578 = relay.Function([var_6545,], output)
mod['func_6578'] = func_6578
mod = relay.transform.InferType()(mod)
mutated_mod['func_6578'] = func_6578
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6579 = relay.var("var_6579", dtype = "bool", shape = (120,))#candidate|6579|(120,)|var|bool
func_6578_call = mutated_mod.get_global_var('func_6578')
call_6580 = func_6578_call(var_6579)
output = call_6580
func_6581 = relay.Function([var_6579], output)
mutated_mod['func_6581'] = func_6581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6077_call = mod.get_global_var('func_6077')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_6612 = func_6077_call()
call_6613 = func_6077_call()
uop_6622 = relay.exp(call_6612.astype('float64')) # shape=(15, 5, 13)
uop_6624 = relay.exp(call_6613.astype('float64')) # shape=(15, 5, 13)
output = uop_6622
output2 = uop_6624
func_6628 = relay.Function([], output)
mod['func_6628'] = func_6628
mod = relay.transform.InferType()(mod)
mutated_mod['func_6628'] = func_6628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6628_call = mutated_mod.get_global_var('func_6628')
call_6629 = func_6628_call()
output = call_6629
func_6630 = relay.Function([], output)
mutated_mod['func_6630'] = func_6630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5913_call = mod.get_global_var('func_5913')
func_5915_call = mutated_mod.get_global_var('func_5915')
call_6680 = relay.TupleGetItem(func_5913_call(), 0)
call_6681 = relay.TupleGetItem(func_5915_call(), 0)
uop_6703 = relay.acosh(call_6680.astype('float32')) # shape=(11, 15, 13)
uop_6705 = relay.acosh(call_6681.astype('float32')) # shape=(11, 15, 13)
output = relay.Tuple([uop_6703,])
output2 = relay.Tuple([uop_6705,])
func_6711 = relay.Function([], output)
mod['func_6711'] = func_6711
mod = relay.transform.InferType()(mod)
mutated_mod['func_6711'] = func_6711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6711_call = mutated_mod.get_global_var('func_6711')
call_6712 = func_6711_call()
output = call_6712
func_6713 = relay.Function([], output)
mutated_mod['func_6713'] = func_6713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4669_call = mod.get_global_var('func_4669')
func_4670_call = mutated_mod.get_global_var('func_4670')
call_6731 = func_4669_call()
call_6732 = func_4669_call()
output = call_6731
output2 = call_6732
func_6733 = relay.Function([], output)
mod['func_6733'] = func_6733
mod = relay.transform.InferType()(mod)
output = func_6733()
func_6734 = relay.Function([], output)
mutated_mod['func_6734'] = func_6734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5467_call = mod.get_global_var('func_5467')
func_5469_call = mutated_mod.get_global_var('func_5469')
call_6760 = func_5467_call()
call_6761 = func_5467_call()
func_4687_call = mod.get_global_var('func_4687')
func_4689_call = mutated_mod.get_global_var('func_4689')
const_6763 = relay.const([9,-2,7,-9,10,10,-7,-4,-3,10,-2,4,2,2,3,4,1,10,-4,4,-6,6,7,-10,10,-4,-2,6,-8,-3,4,-2,5,-2,-1,-5,-5,10,-2,-2,-8,-7,-5,-6,1,-4,9,9,10,-5,2,-9,2,8,-8,6,-5,8,-4,-4,4,-2,-6,8,-6,6,-4,4,-4,10,1,10,9,-7,-2,9,-9,-10,-6,10,3,2,10,-5,-8,-6,3,8,-4,4,-6,-2,6,9,-2,5,-4,5,3,-10,-7,2,4,1,-5,-6,7,-7,1,6,4,7,10,-3,1,4,10,9,7,2,2,4,-5,4,-8,7,6,1,-7,-9,-8,10,10,-1,-7,1,-2,-9,-6,3,7,-6,-8,-7,1,-5,8,6,5,6,-2,-1,4,1,5,5,-8,5,8,-2,9,-10,3,6,5,9,-1,-2,-2,-6,-9,-9,2,4,7,10,3,2,8,-5,-3,10,5,-8,9,4,-5,-6,8,-6,3,-2,10,4,5,10,-4,-2,6,-5,-4,-2,3,-5,-7,-7,-8,9,-4,-5,10,7,-8,2,8,7,-6,2,-9,2,7,6,-10,-5,-6,5,8,10,10,-9,1,10,-7,7,-9,-1,8,-6,-2,5,3,-6,2,6,9,-10,-1,6,-5,3,-1,4,2,10,-1,2,4,5,-3,2,4,2,4,-5,-2,7,-5,-5,-9,2,9,-5,3,3,-1,-10,8,-2,2,3,10,-9,9,3,-10,-9,1,6,-4,-8,3,-1,1,-5,-3,-7,8,-7,4,6,-4,-5,-1,-9,-9,9,6,-4,5,8,-8,10,-4,5,-8,-2,-8,-9,7,3,4,9,-3,-5,-2,6,-1,-6,-5,3,-1,-6,-3,7,3,-5,1,-7,6,-3,-8,-8,3,-5,4,2,4,-4,4,-6,-9,-6,-4,-7,8,9,-6,6,-9,-10], dtype = "int32")#candidate|6763|(360,)|const|int32
call_6762 = relay.TupleGetItem(func_4687_call(relay.reshape(const_6763.astype('int32'), [360,])), 3)
call_6764 = relay.TupleGetItem(func_4689_call(relay.reshape(const_6763.astype('int32'), [360,])), 3)
output = relay.Tuple([call_6760,call_6762,const_6763,])
output2 = relay.Tuple([call_6761,call_6764,const_6763,])
func_6770 = relay.Function([], output)
mod['func_6770'] = func_6770
mod = relay.transform.InferType()(mod)
output = func_6770()
func_6771 = relay.Function([], output)
mutated_mod['func_6771'] = func_6771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5118_call = mod.get_global_var('func_5118')
func_5120_call = mutated_mod.get_global_var('func_5120')
call_6804 = relay.TupleGetItem(func_5118_call(), 2)
call_6805 = relay.TupleGetItem(func_5120_call(), 2)
output = call_6804
output2 = call_6805
func_6816 = relay.Function([], output)
mod['func_6816'] = func_6816
mod = relay.transform.InferType()(mod)
mutated_mod['func_6816'] = func_6816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6816_call = mutated_mod.get_global_var('func_6816')
call_6817 = func_6816_call()
output = call_6817
func_6818 = relay.Function([], output)
mutated_mod['func_6818'] = func_6818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4759_call = mod.get_global_var('func_4759')
func_4761_call = mutated_mod.get_global_var('func_4761')
call_6826 = relay.TupleGetItem(func_4759_call(), 1)
call_6827 = relay.TupleGetItem(func_4761_call(), 1)
func_5635_call = mod.get_global_var('func_5635')
func_5636_call = mutated_mod.get_global_var('func_5636')
call_6857 = func_5635_call()
call_6858 = func_5635_call()
uop_6859 = relay.sinh(call_6826.astype('float64')) # shape=(11, 15, 13)
uop_6861 = relay.sinh(call_6827.astype('float64')) # shape=(11, 15, 13)
func_3339_call = mod.get_global_var('func_3339')
func_3341_call = mutated_mod.get_global_var('func_3341')
call_6873 = relay.TupleGetItem(func_3339_call(), 0)
call_6874 = relay.TupleGetItem(func_3341_call(), 0)
output = relay.Tuple([call_6857,uop_6859,call_6873,])
output2 = relay.Tuple([call_6858,uop_6861,call_6874,])
func_6876 = relay.Function([], output)
mod['func_6876'] = func_6876
mod = relay.transform.InferType()(mod)
output = func_6876()
func_6877 = relay.Function([], output)
mutated_mod['func_6877'] = func_6877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6226_call = mod.get_global_var('func_6226')
func_6228_call = mutated_mod.get_global_var('func_6228')
call_6911 = relay.TupleGetItem(func_6226_call(), 0)
call_6912 = relay.TupleGetItem(func_6228_call(), 0)
output = relay.Tuple([call_6911,])
output2 = relay.Tuple([call_6912,])
func_6928 = relay.Function([], output)
mod['func_6928'] = func_6928
mod = relay.transform.InferType()(mod)
output = func_6928()
func_6929 = relay.Function([], output)
mutated_mod['func_6929'] = func_6929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6443_call = mod.get_global_var('func_6443')
func_6445_call = mutated_mod.get_global_var('func_6445')
call_7008 = relay.TupleGetItem(func_6443_call(), 0)
call_7009 = relay.TupleGetItem(func_6445_call(), 0)
output = call_7008
output2 = call_7009
func_7016 = relay.Function([], output)
mod['func_7016'] = func_7016
mod = relay.transform.InferType()(mod)
output = func_7016()
func_7017 = relay.Function([], output)
mutated_mod['func_7017'] = func_7017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6770_call = mod.get_global_var('func_6770')
func_6771_call = mutated_mod.get_global_var('func_6771')
call_7108 = relay.TupleGetItem(func_6770_call(), 0)
call_7109 = relay.TupleGetItem(func_6771_call(), 0)
output = relay.Tuple([call_7108,])
output2 = relay.Tuple([call_7109,])
func_7112 = relay.Function([], output)
mod['func_7112'] = func_7112
mod = relay.transform.InferType()(mod)
output = func_7112()
func_7113 = relay.Function([], output)
mutated_mod['func_7113'] = func_7113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6398_call = mod.get_global_var('func_6398')
func_6399_call = mutated_mod.get_global_var('func_6399')
call_7135 = func_6398_call()
call_7136 = func_6398_call()
uop_7137 = relay.sin(call_7135.astype('float64')) # shape=(6, 20)
uop_7139 = relay.sin(call_7136.astype('float64')) # shape=(6, 20)
func_5605_call = mod.get_global_var('func_5605')
func_5607_call = mutated_mod.get_global_var('func_5607')
call_7182 = relay.TupleGetItem(func_5605_call(relay.reshape(uop_7137.astype('bool'), [6, 20])), 0)
call_7183 = relay.TupleGetItem(func_5607_call(relay.reshape(uop_7137.astype('bool'), [6, 20])), 0)
func_3990_call = mod.get_global_var('func_3990')
func_3992_call = mutated_mod.get_global_var('func_3992')
call_7184 = relay.TupleGetItem(func_3990_call(), 3)
call_7185 = relay.TupleGetItem(func_3992_call(), 3)
func_5118_call = mod.get_global_var('func_5118')
func_5120_call = mutated_mod.get_global_var('func_5120')
call_7186 = relay.TupleGetItem(func_5118_call(), 2)
call_7187 = relay.TupleGetItem(func_5120_call(), 2)
func_61_call = mod.get_global_var('func_61')
func_64_call = mutated_mod.get_global_var('func_64')
call_7189 = func_61_call(relay.reshape(call_7135.astype('bool'), [5, 6, 4]), relay.reshape(call_7135.astype('bool'), [5, 6, 4]), )
call_7190 = func_61_call(relay.reshape(call_7135.astype('bool'), [5, 6, 4]), relay.reshape(call_7135.astype('bool'), [5, 6, 4]), )
output = relay.Tuple([uop_7137,call_7182,call_7184,call_7186,call_7189,])
output2 = relay.Tuple([uop_7139,call_7183,call_7185,call_7187,call_7190,])
func_7195 = relay.Function([], output)
mod['func_7195'] = func_7195
mod = relay.transform.InferType()(mod)
mutated_mod['func_7195'] = func_7195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7195_call = mutated_mod.get_global_var('func_7195')
call_7196 = func_7195_call()
output = call_7196
func_7197 = relay.Function([], output)
mutated_mod['func_7197'] = func_7197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6733_call = mod.get_global_var('func_6733')
func_6734_call = mutated_mod.get_global_var('func_6734')
call_7211 = func_6733_call()
call_7212 = func_6733_call()
func_5994_call = mod.get_global_var('func_5994')
func_5999_call = mutated_mod.get_global_var('func_5999')
var_7218 = relay.var("var_7218", dtype = "uint32", shape = ())#candidate|7218|()|var|uint32
const_7219 = relay.const([-7,-9,-3,8,5,5,-8,-6,7,3,-7,1,9,-2,-6,-3,5,6,3,8,-8,3,-5,6,9,1,8,-5,-1,-7,7,10,4,-1,-9,-6,-1,-4,-9,8,2,3,3,-8,-4,-1,-4,4,6,4,4,4,-8,4,1,-5,-3,-4,8,-1,6,5,3,-8,7,-4,-2,10,9,7,-8,-2,3,-7,9,-3,-10,-4,10,-3,4,1,8,-5,-5,-4,7,4,-3,10,9,-6,4,3,4,4,-3,-3,4,5,-4,-4,6,-10,-9,2,6,10,-10,5,-8,1,1,4,5,7,-10,-2,-9,7,5,-9,-7,-10,-1,-10,-3,2,-6,1,8,1,-9,4,5,7,3,10,4,-7,-6,-5,6,3,6,3,2,-1,9,8,-1,6,2,1,8,10,-5,-5,4,2,1,-5,-3,5,-6,-6,9,-10,-7,-6,9,3,3,-4,5,9,5,-1,2,8,9,4,5,-1,-5,1,3,9,-1,10,-10,2,-5,-4,8,-7,-6,-7,5,7,-4,-7,10,10,-8,7,-1,5,-1,5,1,-8,-4,-1,-4,-10,-5,-5,4,8,6,-2,-4,5,8,-7,-3,-7,2,8,4,-4,7,-4,5,-3,-7,9,3,-7,7,9,8,9,-4,6,4,-7,-1,2,-2,8,9,1,3,-5,9,-2,-10,7,-7,9,2,10,6,-1,6,-10,-7,9,8,-2,-7,-3,7,-8,10,-6,5,8,-10,4,8,-3,4,5,-7,8,-5,-1,-1,-9,-8,5,-2,7,-4,8,-6,7,4,-3,-2,2,-3,2,-2,5,5,-7,5,-9,-6,10,-9,-1,10,-3,-6,8,10,3,10,-5,-10,-1,6,-5,-8,-4,2,1,1,2,1,-9,9,-4,-4,3,-9,10,-4,-8,7,-9,-9,-1,-4,-10,-5,5,-4,3,8,-1,-10,-4,3,-7,6,-1,6,-7,-7,3,-7,5,9,-9,-6,4,1,-2,-2,9,5,-4,2,-1,-10,10,-7,9,5,-1,-10,6,-6,10], dtype = "uint32")#candidate|7219|(390,)|const|uint32
const_7220 = relay.const([[2.425138,-3.153788],[4.223903,5.783216],[1.098982,2.222945],[8.284545,-4.634621],[-9.701588,-9.272604],[7.441166,-4.990279],[-0.218835,2.414091],[-3.213369,9.126066],[6.564890,8.330349],[4.857758,-7.387481],[-8.625878,-6.708767],[6.426922,-6.935242],[2.613108,-4.006074],[6.040632,-4.205199],[4.058443,-8.444971],[-8.589062,2.588656],[-6.904622,-2.978715],[6.380810,-7.170239],[-5.086577,-3.384250],[-3.429828,-1.549077],[8.497795,-5.785788],[1.282128,6.431986],[-6.076787,4.964597],[9.030138,-1.556499],[9.654536,1.410613],[3.993571,-3.335193],[-7.377158,-5.627462],[-3.743568,-9.078145],[0.298714,-2.798321],[7.028627,8.904410],[-8.904599,0.516524],[-6.109543,9.210179],[-6.413566,-0.530752],[-7.841467,-9.041131],[9.003720,9.632314],[0.847738,-4.419140],[5.321022,7.973282],[-3.565705,-3.368048],[9.445058,-0.604011],[-1.724639,4.326368],[-7.290647,-5.694160],[4.096704,0.361506],[2.863293,-8.436997],[-5.169009,-5.506925],[5.650506,7.174747],[-8.747715,-0.167053],[1.793094,4.324235],[-8.916291,-9.157321],[4.100071,-4.148315],[3.015164,9.882749],[-6.117233,0.528139],[-9.581461,-8.046534],[-2.873842,5.341581],[-0.627635,-0.944853],[-7.711273,7.290428],[1.032226,6.387015],[-7.983645,6.958495],[0.058522,0.913718],[-8.249259,1.040157],[-1.650617,-1.615485],[5.981875,1.591591],[-6.119170,3.258328],[-1.030515,0.144463],[-2.988991,-8.579963],[-2.042935,2.886727],[-1.074116,-0.608369],[5.036628,-5.880059],[4.805107,-2.684944],[-3.155654,-7.686629],[-1.579085,-1.352443],[-4.661953,-0.796244],[-3.363957,-6.845562],[-2.946866,9.743864],[-4.004421,2.068618],[0.931333,4.126979],[-1.827200,5.159538],[4.950125,7.115075],[5.180027,-0.749826],[-8.626859,-5.171433],[8.199557,5.808482],[-5.926457,5.939676],[-8.039075,0.693307],[-8.938781,2.754855],[-9.355167,8.228511],[-0.702321,3.974239],[-4.106670,-3.861987],[-3.240406,-1.026249],[7.144943,8.454428],[-2.410945,-7.567939],[9.377992,-3.564946],[-0.736113,7.562201],[-4.989003,-1.143905],[2.046895,-7.008232],[-6.570355,-6.046476],[3.902040,-9.072229],[8.408104,8.398818],[-8.964733,-8.801990],[9.207460,9.863643],[-8.868690,-8.671618],[-3.669449,-8.909736],[1.677338,0.182034],[9.913580,-0.140015],[-3.166804,7.982248],[9.452867,4.502955],[-9.893633,1.854708],[-8.410600,9.795192],[9.329081,5.609341],[-7.054535,-8.097647],[-9.904234,6.354555],[3.266886,2.303535],[0.864774,2.796278],[5.590623,-4.574199],[6.038307,9.376756],[1.976051,-6.018386],[-1.139245,-7.947515],[3.157055,-3.161067],[-2.364940,8.704920],[-8.415331,-0.831069],[2.714665,-4.138022],[-6.556969,-2.134363],[-2.983752,-5.710626],[-0.385757,2.198506],[-9.323083,-6.598643],[-3.202749,-1.986172],[-6.449214,-5.798201],[-1.815814,-0.720597],[6.820147,-9.252778],[-2.196103,2.244150],[-7.569300,-3.559814],[-4.548776,7.057466],[0.320190,2.531875],[8.632923,-4.032231],[5.216311,-4.175015],[2.398615,-1.302262],[3.416314,8.822216],[5.698441,-6.782601],[-5.920822,7.414474],[-6.329925,7.124992],[-5.346338,6.477003],[-8.198522,7.823120],[3.328102,9.601818],[1.428180,7.408884],[-9.117717,-3.002686],[1.610925,2.524795],[4.458706,-1.104568],[-3.571802,0.765665],[-7.586484,-1.214076],[-1.694434,9.767011],[1.039990,2.319603],[-3.392214,8.995506],[8.214532,-5.347597],[-2.353720,-9.117423],[-5.627988,-4.526427],[-7.005885,6.890276],[-5.706309,-8.653035],[-2.932942,-6.073532],[-0.440739,-9.032688],[-2.781697,-4.156761],[4.951026,-3.053152],[-4.621887,1.876927],[-3.356360,7.308686],[4.102563,4.561793],[-1.045142,-0.046498],[8.282774,-2.330982],[-0.960965,-8.524992],[-6.269361,-1.940798],[-9.441195,-6.076943],[2.309391,8.835276],[2.136466,3.712393],[-9.980437,-3.619056],[-1.342161,0.670280],[-0.370285,5.305731],[-1.373983,2.541078],[-2.823284,-2.704378],[0.827499,-3.946032],[-9.060327,-1.703212],[-5.403778,-0.568224],[-3.399264,-9.777360],[2.480886,5.508736],[9.818923,1.498774]], dtype = "float64")#candidate|7220|(180, 2)|const|float64
call_7217 = relay.TupleGetItem(func_5994_call(relay.reshape(var_7218.astype('uint32'), []), relay.reshape(const_7219.astype('uint32'), [390,]), relay.reshape(const_7220.astype('float64'), [360,]), ), 4)
call_7221 = relay.TupleGetItem(func_5999_call(relay.reshape(var_7218.astype('uint32'), []), relay.reshape(const_7219.astype('uint32'), [390,]), relay.reshape(const_7220.astype('float64'), [360,]), ), 4)
output = relay.Tuple([call_7211,call_7217,var_7218,const_7219,const_7220,])
output2 = relay.Tuple([call_7212,call_7221,var_7218,const_7219,const_7220,])
func_7225 = relay.Function([var_7218,], output)
mod['func_7225'] = func_7225
mod = relay.transform.InferType()(mod)
var_7226 = relay.var("var_7226", dtype = "uint32", shape = ())#candidate|7226|()|var|uint32
output = func_7225(var_7226)
func_7227 = relay.Function([var_7226], output)
mutated_mod['func_7227'] = func_7227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4426_call = mod.get_global_var('func_4426')
func_4428_call = mutated_mod.get_global_var('func_4428')
call_7270 = relay.TupleGetItem(func_4426_call(), 1)
call_7271 = relay.TupleGetItem(func_4428_call(), 1)
uop_7312 = relay.log10(call_7270.astype('float32')) # shape=(11, 15, 13)
uop_7314 = relay.log10(call_7271.astype('float32')) # shape=(11, 15, 13)
output = relay.Tuple([uop_7312,])
output2 = relay.Tuple([uop_7314,])
func_7318 = relay.Function([], output)
mod['func_7318'] = func_7318
mod = relay.transform.InferType()(mod)
output = func_7318()
func_7319 = relay.Function([], output)
mutated_mod['func_7319'] = func_7319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5913_call = mod.get_global_var('func_5913')
func_5915_call = mutated_mod.get_global_var('func_5915')
call_7342 = relay.TupleGetItem(func_5913_call(), 0)
call_7343 = relay.TupleGetItem(func_5915_call(), 0)
func_4759_call = mod.get_global_var('func_4759')
func_4761_call = mutated_mod.get_global_var('func_4761')
call_7344 = relay.TupleGetItem(func_4759_call(), 1)
call_7345 = relay.TupleGetItem(func_4761_call(), 1)
output = relay.Tuple([call_7342,call_7344,])
output2 = relay.Tuple([call_7343,call_7345,])
func_7351 = relay.Function([], output)
mod['func_7351'] = func_7351
mod = relay.transform.InferType()(mod)
mutated_mod['func_7351'] = func_7351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7351_call = mutated_mod.get_global_var('func_7351')
call_7352 = func_7351_call()
output = call_7352
func_7353 = relay.Function([], output)
mutated_mod['func_7353'] = func_7353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_7479 = relay.TupleGetItem(func_3532_call(), 1)
call_7480 = relay.TupleGetItem(func_3533_call(), 1)
output = relay.Tuple([call_7479,])
output2 = relay.Tuple([call_7480,])
func_7488 = relay.Function([], output)
mod['func_7488'] = func_7488
mod = relay.transform.InferType()(mod)
output = func_7488()
func_7489 = relay.Function([], output)
mutated_mod['func_7489'] = func_7489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3769_call = mod.get_global_var('func_3769')
func_3771_call = mutated_mod.get_global_var('func_3771')
call_7490 = relay.TupleGetItem(func_3769_call(), 3)
call_7491 = relay.TupleGetItem(func_3771_call(), 3)
output = relay.Tuple([call_7490,])
output2 = relay.Tuple([call_7491,])
func_7502 = relay.Function([], output)
mod['func_7502'] = func_7502
mod = relay.transform.InferType()(mod)
output = func_7502()
func_7503 = relay.Function([], output)
mutated_mod['func_7503'] = func_7503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5635_call = mod.get_global_var('func_5635')
func_5636_call = mutated_mod.get_global_var('func_5636')
call_7608 = func_5635_call()
call_7609 = func_5635_call()
var_7632 = relay.var("var_7632", dtype = "float64", shape = (11, 15, 13))#candidate|7632|(11, 15, 13)|var|float64
bop_7633 = relay.not_equal(call_7608.astype('bool'), relay.reshape(var_7632.astype('bool'), relay.shape_of(call_7608))) # shape=(11, 15, 13)
bop_7636 = relay.not_equal(call_7609.astype('bool'), relay.reshape(var_7632.astype('bool'), relay.shape_of(call_7609))) # shape=(11, 15, 13)
output = relay.Tuple([bop_7633,])
output2 = relay.Tuple([bop_7636,])
func_7643 = relay.Function([var_7632,], output)
mod['func_7643'] = func_7643
mod = relay.transform.InferType()(mod)
mutated_mod['func_7643'] = func_7643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7644 = relay.var("var_7644", dtype = "float64", shape = (11, 15, 13))#candidate|7644|(11, 15, 13)|var|float64
func_7643_call = mutated_mod.get_global_var('func_7643')
call_7645 = func_7643_call(var_7644)
output = call_7645
func_7646 = relay.Function([var_7644], output)
mutated_mod['func_7646'] = func_7646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3990_call = mod.get_global_var('func_3990')
func_3992_call = mutated_mod.get_global_var('func_3992')
call_7674 = relay.TupleGetItem(func_3990_call(), 2)
call_7675 = relay.TupleGetItem(func_3992_call(), 2)
func_4687_call = mod.get_global_var('func_4687')
func_4689_call = mutated_mod.get_global_var('func_4689')
const_7679 = relay.const([7,-7,2,10,-5,8,7,6,-1,-7,-2,4,8,9,4,2,-1,6,-8,-9,7,-2,9,2,-5,-10,8,10,-10,8,5,7,9,-7,-2,-2,4,-3,-4,-2,6,7,-5,-9,-8,-1,7,8,1,-6,2,2,-4,10,10,8,-3,1,3,-5,7,3,5,-9,-7,-9,-3,-8,6,4,9,3,6,-1,3,10,-3,-3,4,-7,9,3,-7,-8,6,-10,-3,-6,8,-9,-5,-3,4,9,8,-3,9,8,5,-10,7,6,4,10,-1,-5,10,3,1,-3,7,7,-10,-4,10,-7,-6,6,7,4,-5,-4,-4,-8,-10,-6,-7,-3,-8,3,2,5,-7,10,7,3,10,6,4,-10,6,-1,9,-1,2,-4,-6,-4,10,-8,-7,-8,10,-10,-9,-1,8,-8,-6,3,5,-10,-6,5,-8,2,7,2,-3,2,-5,-9,-2,2,-7,4,4,-4,-10,-8,-3,-6,10,6,2,-9,10,2,6,2,10,-7,3,7,-10,4,7,2,7,3,7,-10,2,10,7,3,-9,-2,-2,6,3,-5,-9,8,-8,-7,4,3,9,-4,-5,-4,9,-7,-2,-3,10,-7,-7,-6,7,10,-1,7,-6,6,10,-8,-3,-8,-7,-4,-10,-7,-8,-2,6,-6,6,-5,-6,6,1,3,-10,-9,-3,-5,3,-10,4,-6,7,-5,7,5,-3,7,8,5,10,-4,-8,6,2,-4,1,7,4,-8,4,-2,8,-10,-9,2,-1,-2,7,2,-5,6,-8,3,6,1,-7,-6,4,9,1,3,-2,-2,-3,8,3,-6,-8,-3,10,-4,-8,-4,-6,-6,-6,10,-1,7,-7,6,9,-10,-10,-1,8,-9,-6,1,-6,1,-3,10,-3,2,1,7,9,-1,2,-1,-7,-9,3,-7,6,-3,-8,4,1,1,-5,6,-8,3,6,10,-4,8], dtype = "int32")#candidate|7679|(360,)|const|int32
call_7678 = relay.TupleGetItem(func_4687_call(relay.reshape(const_7679.astype('int32'), [360,])), 3)
call_7680 = relay.TupleGetItem(func_4689_call(relay.reshape(const_7679.astype('int32'), [360,])), 3)
func_6398_call = mod.get_global_var('func_6398')
func_6399_call = mutated_mod.get_global_var('func_6399')
call_7691 = func_6398_call()
call_7692 = func_6398_call()
func_4669_call = mod.get_global_var('func_4669')
func_4670_call = mutated_mod.get_global_var('func_4670')
call_7714 = func_4669_call()
call_7715 = func_4669_call()
var_7723 = relay.var("var_7723", dtype = "bool", shape = (6, 20))#candidate|7723|(6, 20)|var|bool
bop_7724 = relay.greater_equal(call_7691.astype('bool'), relay.reshape(var_7723.astype('bool'), relay.shape_of(call_7691))) # shape=(6, 20)
bop_7727 = relay.greater_equal(call_7692.astype('bool'), relay.reshape(var_7723.astype('bool'), relay.shape_of(call_7692))) # shape=(6, 20)
output = relay.Tuple([call_7674,call_7678,const_7679,call_7714,bop_7724,])
output2 = relay.Tuple([call_7675,call_7680,const_7679,call_7715,bop_7727,])
func_7729 = relay.Function([var_7723,], output)
mod['func_7729'] = func_7729
mod = relay.transform.InferType()(mod)
mutated_mod['func_7729'] = func_7729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7730 = relay.var("var_7730", dtype = "bool", shape = (6, 20))#candidate|7730|(6, 20)|var|bool
func_7729_call = mutated_mod.get_global_var('func_7729')
call_7731 = func_7729_call(var_7730)
output = call_7731
func_7732 = relay.Function([var_7730], output)
mutated_mod['func_7732'] = func_7732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5635_call = mod.get_global_var('func_5635')
func_5636_call = mutated_mod.get_global_var('func_5636')
call_7745 = func_5635_call()
call_7746 = func_5635_call()
func_130_call = mod.get_global_var('func_130')
func_135_call = mutated_mod.get_global_var('func_135')
var_7764 = relay.var("var_7764", dtype = "int16", shape = ())#candidate|7764|()|var|int16
var_7765 = relay.var("var_7765", dtype = "int16", shape = (3840,))#candidate|7765|(3840,)|var|int16
var_7766 = relay.var("var_7766", dtype = "bool", shape = (120, 1))#candidate|7766|(120, 1)|var|bool
call_7763 = relay.TupleGetItem(func_130_call(relay.reshape(var_7764.astype('int16'), []), relay.reshape(var_7765.astype('int16'), [15, 16, 16]), relay.reshape(var_7766.astype('bool'), [120,]), ), 5)
call_7767 = relay.TupleGetItem(func_135_call(relay.reshape(var_7764.astype('int16'), []), relay.reshape(var_7765.astype('int16'), [15, 16, 16]), relay.reshape(var_7766.astype('bool'), [120,]), ), 5)
output = relay.Tuple([call_7745,call_7763,var_7764,var_7765,var_7766,])
output2 = relay.Tuple([call_7746,call_7767,var_7764,var_7765,var_7766,])
func_7768 = relay.Function([var_7764,var_7765,var_7766,], output)
mod['func_7768'] = func_7768
mod = relay.transform.InferType()(mod)
mutated_mod['func_7768'] = func_7768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7768_call = mutated_mod.get_global_var('func_7768')
var_7770 = relay.var("var_7770", dtype = "int16", shape = ())#candidate|7770|()|var|int16
var_7771 = relay.var("var_7771", dtype = "int16", shape = (3840,))#candidate|7771|(3840,)|var|int16
var_7772 = relay.var("var_7772", dtype = "bool", shape = (120, 1))#candidate|7772|(120, 1)|var|bool
call_7769 = func_7768_call(var_7770,var_7771,var_7772,)
output = call_7769
func_7773 = relay.Function([var_7770,var_7771,var_7772,], output)
mutated_mod['func_7773'] = func_7773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6816_call = mod.get_global_var('func_6816')
func_6818_call = mutated_mod.get_global_var('func_6818')
call_7786 = func_6816_call()
call_7787 = func_6816_call()
output = call_7786
output2 = call_7787
func_7795 = relay.Function([], output)
mod['func_7795'] = func_7795
mod = relay.transform.InferType()(mod)
mutated_mod['func_7795'] = func_7795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7795_call = mutated_mod.get_global_var('func_7795')
call_7796 = func_7795_call()
output = call_7796
func_7797 = relay.Function([], output)
mutated_mod['func_7797'] = func_7797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7351_call = mod.get_global_var('func_7351')
func_7353_call = mutated_mod.get_global_var('func_7353')
call_7880 = relay.TupleGetItem(func_7351_call(), 1)
call_7881 = relay.TupleGetItem(func_7353_call(), 1)
output = call_7880
output2 = call_7881
func_7890 = relay.Function([], output)
mod['func_7890'] = func_7890
mod = relay.transform.InferType()(mod)
mutated_mod['func_7890'] = func_7890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7890_call = mutated_mod.get_global_var('func_7890')
call_7891 = func_7890_call()
output = call_7891
func_7892 = relay.Function([], output)
mutated_mod['func_7892'] = func_7892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7910 = relay.var("var_7910", dtype = "float64", shape = (11, 2, 1))#candidate|7910|(11, 2, 1)|var|float64
uop_7911 = relay.exp(var_7910.astype('float64')) # shape=(11, 2, 1)
uop_7916 = relay.sqrt(var_7910.astype('float32')) # shape=(11, 2, 1)
func_5215_call = mod.get_global_var('func_5215')
func_5220_call = mutated_mod.get_global_var('func_5220')
var_7924 = relay.var("var_7924", dtype = "float32", shape = (1386,))#candidate|7924|(1386,)|var|float32
var_7925 = relay.var("var_7925", dtype = "int32", shape = (140,))#candidate|7925|(140,)|var|int32
call_7923 = relay.TupleGetItem(func_5215_call(relay.reshape(var_7924.astype('float32'), [14, 9, 11]), relay.reshape(var_7925.astype('int32'), [140,]), relay.reshape(var_7924.astype('float32'), [14, 9, 11]), ), 7)
call_7926 = relay.TupleGetItem(func_5220_call(relay.reshape(var_7924.astype('float32'), [14, 9, 11]), relay.reshape(var_7925.astype('int32'), [140,]), relay.reshape(var_7924.astype('float32'), [14, 9, 11]), ), 7)
bop_7930 = relay.less(uop_7916.astype('bool'), var_7925.astype('bool')) # shape=(11, 2, 140)
func_6876_call = mod.get_global_var('func_6876')
func_6877_call = mutated_mod.get_global_var('func_6877')
call_7938 = relay.TupleGetItem(func_6876_call(), 0)
call_7939 = relay.TupleGetItem(func_6877_call(), 0)
func_5141_call = mod.get_global_var('func_5141')
func_5142_call = mutated_mod.get_global_var('func_5142')
call_7946 = func_5141_call()
call_7947 = func_5141_call()
uop_7954 = relay.asin(uop_7916.astype('float32')) # shape=(11, 2, 1)
func_6876_call = mod.get_global_var('func_6876')
func_6877_call = mutated_mod.get_global_var('func_6877')
call_7965 = relay.TupleGetItem(func_6876_call(), 1)
call_7966 = relay.TupleGetItem(func_6877_call(), 1)
output = relay.Tuple([uop_7911,call_7923,var_7924,bop_7930,call_7938,call_7946,uop_7954,call_7965,])
output2 = relay.Tuple([uop_7911,call_7926,var_7924,bop_7930,call_7939,call_7947,uop_7954,call_7966,])
func_7976 = relay.Function([var_7910,var_7924,var_7925,], output)
mod['func_7976'] = func_7976
mod = relay.transform.InferType()(mod)
mutated_mod['func_7976'] = func_7976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7976_call = mutated_mod.get_global_var('func_7976')
var_7978 = relay.var("var_7978", dtype = "float64", shape = (11, 2, 1))#candidate|7978|(11, 2, 1)|var|float64
var_7979 = relay.var("var_7979", dtype = "float32", shape = (1386,))#candidate|7979|(1386,)|var|float32
var_7980 = relay.var("var_7980", dtype = "int32", shape = (140,))#candidate|7980|(140,)|var|int32
call_7977 = func_7976_call(var_7978,var_7979,var_7980,)
output = call_7977
func_7981 = relay.Function([var_7978,var_7979,var_7980,], output)
mutated_mod['func_7981'] = func_7981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6928_call = mod.get_global_var('func_6928')
func_6929_call = mutated_mod.get_global_var('func_6929')
call_8030 = relay.TupleGetItem(func_6928_call(), 0)
call_8031 = relay.TupleGetItem(func_6929_call(), 0)
output = call_8030
output2 = call_8031
func_8034 = relay.Function([], output)
mod['func_8034'] = func_8034
mod = relay.transform.InferType()(mod)
mutated_mod['func_8034'] = func_8034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8034_call = mutated_mod.get_global_var('func_8034')
call_8035 = func_8034_call()
output = call_8035
func_8036 = relay.Function([], output)
mutated_mod['func_8036'] = func_8036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7795_call = mod.get_global_var('func_7795')
func_7797_call = mutated_mod.get_global_var('func_7797')
call_8116 = func_7795_call()
call_8117 = func_7795_call()
output = relay.Tuple([call_8116,])
output2 = relay.Tuple([call_8117,])
func_8136 = relay.Function([], output)
mod['func_8136'] = func_8136
mod = relay.transform.InferType()(mod)
mutated_mod['func_8136'] = func_8136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8136_call = mutated_mod.get_global_var('func_8136')
call_8137 = func_8136_call()
output = call_8137
func_8138 = relay.Function([], output)
mutated_mod['func_8138'] = func_8138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6876_call = mod.get_global_var('func_6876')
func_6877_call = mutated_mod.get_global_var('func_6877')
call_8167 = relay.TupleGetItem(func_6876_call(), 1)
call_8168 = relay.TupleGetItem(func_6877_call(), 1)
func_6711_call = mod.get_global_var('func_6711')
func_6713_call = mutated_mod.get_global_var('func_6713')
call_8172 = relay.TupleGetItem(func_6711_call(), 0)
call_8173 = relay.TupleGetItem(func_6713_call(), 0)
func_4827_call = mod.get_global_var('func_4827')
func_4829_call = mutated_mod.get_global_var('func_4829')
call_8182 = relay.TupleGetItem(func_4827_call(), 1)
call_8183 = relay.TupleGetItem(func_4829_call(), 1)
func_6770_call = mod.get_global_var('func_6770')
func_6771_call = mutated_mod.get_global_var('func_6771')
call_8184 = relay.TupleGetItem(func_6770_call(), 2)
call_8185 = relay.TupleGetItem(func_6771_call(), 2)
output = relay.Tuple([call_8167,call_8172,call_8182,call_8184,])
output2 = relay.Tuple([call_8168,call_8173,call_8183,call_8185,])
func_8188 = relay.Function([], output)
mod['func_8188'] = func_8188
mod = relay.transform.InferType()(mod)
mutated_mod['func_8188'] = func_8188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8188_call = mutated_mod.get_global_var('func_8188')
call_8189 = func_8188_call()
output = call_8189
func_8190 = relay.Function([], output)
mutated_mod['func_8190'] = func_8190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7195_call = mod.get_global_var('func_7195')
func_7197_call = mutated_mod.get_global_var('func_7197')
call_8193 = relay.TupleGetItem(func_7195_call(), 2)
call_8194 = relay.TupleGetItem(func_7197_call(), 2)
output = call_8193
output2 = call_8194
func_8242 = relay.Function([], output)
mod['func_8242'] = func_8242
mod = relay.transform.InferType()(mod)
output = func_8242()
func_8243 = relay.Function([], output)
mutated_mod['func_8243'] = func_8243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6359_call = mod.get_global_var('func_6359')
func_6361_call = mutated_mod.get_global_var('func_6361')
call_8250 = relay.TupleGetItem(func_6359_call(), 0)
call_8251 = relay.TupleGetItem(func_6361_call(), 0)
func_6111_call = mod.get_global_var('func_6111')
func_6115_call = mutated_mod.get_global_var('func_6115')
const_8253 = relay.const([[True,True,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,False,False]], dtype = "bool")#candidate|8253|(1, 975)|const|bool
call_8252 = relay.TupleGetItem(func_6111_call(relay.reshape(const_8253.astype('bool'), [975,]), relay.reshape(call_8250.astype('uint64'), [14, 8, 13]), ), 1)
call_8254 = relay.TupleGetItem(func_6115_call(relay.reshape(const_8253.astype('bool'), [975,]), relay.reshape(call_8250.astype('uint64'), [14, 8, 13]), ), 1)
uop_8256 = relay.log(call_8252.astype('float32')) # shape=(975,)
uop_8258 = relay.log(call_8254.astype('float32')) # shape=(975,)
output = relay.Tuple([call_8250,const_8253,uop_8256,])
output2 = relay.Tuple([call_8251,const_8253,uop_8258,])
func_8302 = relay.Function([], output)
mod['func_8302'] = func_8302
mod = relay.transform.InferType()(mod)
mutated_mod['func_8302'] = func_8302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8302_call = mutated_mod.get_global_var('func_8302')
call_8303 = func_8302_call()
output = call_8303
func_8304 = relay.Function([], output)
mutated_mod['func_8304'] = func_8304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4759_call = mod.get_global_var('func_4759')
func_4761_call = mutated_mod.get_global_var('func_4761')
call_8331 = relay.TupleGetItem(func_4759_call(), 0)
call_8332 = relay.TupleGetItem(func_4761_call(), 0)
output = call_8331
output2 = call_8332
func_8351 = relay.Function([], output)
mod['func_8351'] = func_8351
mod = relay.transform.InferType()(mod)
output = func_8351()
func_8352 = relay.Function([], output)
mutated_mod['func_8352'] = func_8352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4486_call = mod.get_global_var('func_4486')
func_4487_call = mutated_mod.get_global_var('func_4487')
call_8387 = relay.TupleGetItem(func_4486_call(), 0)
call_8388 = relay.TupleGetItem(func_4487_call(), 0)
output = call_8387
output2 = call_8388
func_8389 = relay.Function([], output)
mod['func_8389'] = func_8389
mod = relay.transform.InferType()(mod)
output = func_8389()
func_8390 = relay.Function([], output)
mutated_mod['func_8390'] = func_8390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5838_call = mod.get_global_var('func_5838')
func_5839_call = mutated_mod.get_global_var('func_5839')
call_8484 = relay.TupleGetItem(func_5838_call(), 0)
call_8485 = relay.TupleGetItem(func_5839_call(), 0)
func_5635_call = mod.get_global_var('func_5635')
func_5636_call = mutated_mod.get_global_var('func_5636')
call_8490 = func_5635_call()
call_8491 = func_5635_call()
var_8507 = relay.var("var_8507", dtype = "bool", shape = (15, 5, 13))#candidate|8507|(15, 5, 13)|var|bool
bop_8508 = relay.logical_or(call_8484.astype('bool'), relay.reshape(var_8507.astype('bool'), relay.shape_of(call_8484))) # shape=(15, 5, 13)
bop_8511 = relay.logical_or(call_8485.astype('bool'), relay.reshape(var_8507.astype('bool'), relay.shape_of(call_8485))) # shape=(15, 5, 13)
func_1786_call = mod.get_global_var('func_1786')
func_1789_call = mutated_mod.get_global_var('func_1789')
const_8513 = relay.const([-10,7,10,-8,2,-7,-3,-7,8,-4,8,2,-2,10,-6,5,-4,9,10,8,-7,6,-7,-9,-3,-5,-8,8,9,-1,-10,10,3,-9,-7,4,-4,-6,-1,4,-9,-6,8,-8,1,2,8,-7,-1,3,-5,-4,7,-10,6,-4,-4,3,-4,9,-2,9,4,10,-6,3,-10,-2,8,5,7,10,-10,5,6,1,4,-8,8,4,-3,-7,6,9,-3,-8,4,2,-1,-9,-1,-4,10,5,-2,-4,-10,7,2,9,-10,6,5,7,-6,-4,7,-6,-2,9,-4,8,-5,9,10,-5,-5,4,2,7,-8,-9,-8,3,7,-3,-6,2,-5,1,9,4,8,3,9,-9,10,3,-10,10], dtype = "int32")#candidate|8513|(140,)|const|int32
call_8512 = relay.TupleGetItem(func_1786_call(relay.reshape(const_8513.astype('int32'), [4, 7, 5]), relay.reshape(const_8513.astype('int32'), [4, 7, 5]), ), 0)
call_8514 = relay.TupleGetItem(func_1789_call(relay.reshape(const_8513.astype('int32'), [4, 7, 5]), relay.reshape(const_8513.astype('int32'), [4, 7, 5]), ), 0)
func_5467_call = mod.get_global_var('func_5467')
func_5469_call = mutated_mod.get_global_var('func_5469')
call_8521 = func_5467_call()
call_8522 = func_5467_call()
output = relay.Tuple([call_8490,bop_8508,call_8512,const_8513,call_8521,])
output2 = relay.Tuple([call_8491,bop_8511,call_8514,const_8513,call_8522,])
func_8526 = relay.Function([var_8507,], output)
mod['func_8526'] = func_8526
mod = relay.transform.InferType()(mod)
mutated_mod['func_8526'] = func_8526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8527 = relay.var("var_8527", dtype = "bool", shape = (15, 5, 13))#candidate|8527|(15, 5, 13)|var|bool
func_8526_call = mutated_mod.get_global_var('func_8526')
call_8528 = func_8526_call(var_8527)
output = call_8528
func_8529 = relay.Function([var_8527], output)
mutated_mod['func_8529'] = func_8529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6876_call = mod.get_global_var('func_6876')
func_6877_call = mutated_mod.get_global_var('func_6877')
call_8568 = relay.TupleGetItem(func_6876_call(), 1)
call_8569 = relay.TupleGetItem(func_6877_call(), 1)
output = call_8568
output2 = call_8569
func_8578 = relay.Function([], output)
mod['func_8578'] = func_8578
mod = relay.transform.InferType()(mod)
output = func_8578()
func_8579 = relay.Function([], output)
mutated_mod['func_8579'] = func_8579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6628_call = mod.get_global_var('func_6628')
func_6630_call = mutated_mod.get_global_var('func_6630')
call_8648 = func_6628_call()
call_8649 = func_6628_call()
var_8651 = relay.var("var_8651", dtype = "float64", shape = (15, 5, 13))#candidate|8651|(15, 5, 13)|var|float64
bop_8652 = relay.minimum(call_8648.astype('int8'), relay.reshape(var_8651.astype('int8'), relay.shape_of(call_8648))) # shape=(15, 5, 13)
bop_8655 = relay.minimum(call_8649.astype('int8'), relay.reshape(var_8651.astype('int8'), relay.shape_of(call_8649))) # shape=(15, 5, 13)
output = relay.Tuple([bop_8652,])
output2 = relay.Tuple([bop_8655,])
func_8666 = relay.Function([var_8651,], output)
mod['func_8666'] = func_8666
mod = relay.transform.InferType()(mod)
mutated_mod['func_8666'] = func_8666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8667 = relay.var("var_8667", dtype = "float64", shape = (15, 5, 13))#candidate|8667|(15, 5, 13)|var|float64
func_8666_call = mutated_mod.get_global_var('func_8666')
call_8668 = func_8666_call(var_8667)
output = call_8668
func_8669 = relay.Function([var_8667], output)
mutated_mod['func_8669'] = func_8669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4225_call = mod.get_global_var('func_4225')
func_4226_call = mutated_mod.get_global_var('func_4226')
call_8677 = relay.TupleGetItem(func_4225_call(), 0)
call_8678 = relay.TupleGetItem(func_4226_call(), 0)
uop_8683 = relay.acos(call_8677.astype('float64')) # shape=(6, 20)
uop_8685 = relay.acos(call_8678.astype('float64')) # shape=(6, 20)
uop_8691 = relay.erf(call_8677.astype('float64')) # shape=(6, 20)
uop_8693 = relay.erf(call_8678.astype('float64')) # shape=(6, 20)
output = relay.Tuple([uop_8683,uop_8691,])
output2 = relay.Tuple([uop_8685,uop_8693,])
func_8709 = relay.Function([], output)
mod['func_8709'] = func_8709
mod = relay.transform.InferType()(mod)
mutated_mod['func_8709'] = func_8709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8709_call = mutated_mod.get_global_var('func_8709')
call_8710 = func_8709_call()
output = call_8710
func_8711 = relay.Function([], output)
mutated_mod['func_8711'] = func_8711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5913_call = mod.get_global_var('func_5913')
func_5915_call = mutated_mod.get_global_var('func_5915')
call_8721 = relay.TupleGetItem(func_5913_call(), 0)
call_8722 = relay.TupleGetItem(func_5915_call(), 0)
func_7729_call = mod.get_global_var('func_7729')
func_7732_call = mutated_mod.get_global_var('func_7732')
const_8732 = relay.const([True,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,True,True,False], dtype = "bool")#candidate|8732|(120,)|const|bool
call_8731 = relay.TupleGetItem(func_7729_call(relay.reshape(const_8732.astype('bool'), [6, 20])), 1)
call_8733 = relay.TupleGetItem(func_7732_call(relay.reshape(const_8732.astype('bool'), [6, 20])), 1)
func_130_call = mod.get_global_var('func_130')
func_135_call = mutated_mod.get_global_var('func_135')
const_8739 = relay.const(-9, dtype = "int16")#candidate|8739|()|const|int16
const_8740 = relay.const([2,7,3,-2,-2,-7,-10,-3,10,-2,-1,-3,-6,-4,-10,3,6,-6,7,-8,-2,1,-5,10,-4,-6,3,-4,2,1,5,-4,5,2,7,-2,4,-1,-10,4,-3,9,-10,4,-10,-6,10,-8,9,8,-7,-4,-6,1,8,-9,4,9,-10,-7,-10,5,-2,-5,-10,-8,-5,-1,-9,-6,6,8,-3,5,1,-2,-7,-9,10,10,8,1,2,2,-2,6,4,-9,2,8,8,-4,-7,-3,-8,-8,-3,-8,1,-4,-10,3,6,-9,-8,4,9,10,-1,-4,6,-3,-3,1,3,-8,-8,5,7,-6,2,-10,8,-6,2,5,-4,-6,1,2,5,-5,3,8,-5,-4,4,8,5,-10,6,3,-6,-4,6,-1,5,5,5,9,-10,8,8,-6,2,10,-1,-5,-1,6,-4,-2,2,-9,1,-8,3,-4,2,6,6,-9,8,-6,2,10,-8,6,-10,-6,5,1,-9,-2,7,-2,-3,-1,-4,4,10,3,6,7,-6,-6,-6,10,-4,-6,-10,3,1,6,3,-5,-4,1,8,6,3,-5,-1,-4,-7,5,1,3,-3,9,-9,-1,3,-2,1,4,-10,-3,-4,-5,9,10,-9,10,-10,-10,-5,1,-4,-6,-3,-1,9,-1,2,6,5,9,-7,-5,-2,-7,7,-3,-2,-8,-1,-5,4,5,-3,7,-7,1,-9,-2,-3,-6,-6,1,-9,-3,9,-3,8,-9,1,7,4,1,-4,2,1,-8,-8,6,-10,-10,-1,-2,-2,-7,8,-10,-4,6,3,5,-10,2,-4,7,-9,2,1,6,6,-6,-9,-9,-7,-1,6,6,-1,-6,-9,10,10,-8,8,6,-9,-8,-7,1,3,6,-8,-5,-3,5,-4,9,-6,6,-3,8,3,2,5,5,3,-7,-4,-9,3,-8,-8,-2,-8,-6,1,4,-10,-5,8,-2,1,-2,-2,-3,-7,-2,10,7,2,-8,9,-6,-8,5,1,7,-7,-7,1,3,-1,-3,1,-10,5,-6,1,5,-1,5,8,-3,2,3,2,-3,3,5,-8,-8,2,-9,-4,-2,7,-10,-9,7,5,-9,7,9,10,5,6,2,7,-10,-8,-9,-8,-7,2,-2,-7,1,5,-4,-1,-2,4,4,5,-2,6,7,10,3,-9,6,-8,-10,6,-7,-4,-5,-4,8,5,-4,3,5,5,-3,4,2,8,-2,-5,3,-7,8,9,3,-7,-7,8,4,-9,-10,8,-3,-2,-3,6,-6,4,6,-9,-9,6,7,-7,7,-9,1,9,-6,-10,9,4,-9,-9,-4,-4,5,1,1,-4,-6,-7,4,2,6,8,-8,-9,3,-3,-6,-9,6,6,8,8,-5,-10,9,-9,-3,-10,-1,9,-9,-10,1,8,1,-5,-4,-2,5,9,3,-1,-7,9,-2,-2,3,5,-3,-1,9,-1,8,1,5,-9,8,-7,1,-2,6,-3,8,-5,3,3,-4,4,-10,-7,-6,7,8,-10,-2,3,6,7,6,-5,9,-2,4,5,2,3,8,-6,4,5,-8,-3,4,10,-3,-8,5,-5,7,-5,2,9,-7,-4,10,-6,8,5,-9,-10,10,-7,10,-3,2,8,-7,-1,3,-7,7,-1,3,4,9,-4,-6,3,3,-4,6,-8,-8,-9,-8,-4,-8,-7,1,2,-7,-10,-7,10,-10,6,4,-1,5,-5,-4,8,-4,-4,-8,4,5,10,-6,4,5,-2,-4,-3,-2,-3,-7,-10,-8,5,-1,1,2,7,-4,-4,1,-7,-10,7,1,8,-1,-1,1,4,7,-7,1,-9,-7,1,8,4,-10,-9,10,-3,4,-1,1,8,-3,7,2,-6,-8,6,8,-5,10,-1,1,-3,-9,-1,-10,-8,-5,8,2,6,-2,9,2,-8,10,-3,5,-6,-10,7,-8,-4,2,2,-5,-6,-1,-9,-9,-7,8,9,-6,2,-4,6,1,-4,-10,-9,-3,4,-1,8,1,10,7,-5,-6,9,-3,9,6,1,10,-3,-6,-8,9,1,-5,-9,2,-5,2,-8,10,-3,1,-2,-5,-5,-1,9,10,2,-3,-8,-9,-5,7,-8,-3,3,6,-6,-10,1,3,-5,-10,-10,2,-9,-9,1,-10,-2,1,-6,1,-5,2,-4,6,9,6,2,-5,8,7,-9,2,7,-9,10,6,10,-3,-2,2,8,9,8,1,8,-7,5,10,-3,-9,-8,-2,3,-3,-8,-6,-4,6,-1,-10,-7,7,4,-5,8,-4,9,7,1,6,-4,6,7,2,9,8,8,-7,7,-1,-8,-3,1,8,9,-3,-6,3,-1,3,8,5,9,8,7,-2,4,-1,-7,-9,3,-1,1,4,10,1,9,4,1,3,-3,1,2,2,-3,6,-3,4,-1,-5,6,-1,-3,4,-6,1,1,7,-8,-3,-2,-4,5,10,-8,1,10,-10,6,8,-10,3,5,-7,1,-1,-8,-1,-6,-1,3,-10,-3,-7,-4,-2,7,8,-7,2,-4,2,-1,6,-3,2,8,-10,-4,-9,3,-5,-9,2,-9,-4,9,-8,1,8,1,-10,1,8,-1,6,-10,-4,-7,3,-3,10,4,-2,1,9,-9,-9,-2,-8,5,7,-6,-2,-9,8,3,4,5,2,-8,-8,-1,7,-7,4,-10,7,2,-10,6,3,-7,7,-6,8,10,-1,6,-4,-5,-4,9,-5,-3,-2,-3,10,-3,-2,6,3,7,-8,-3,5,-1,5,2,-1,-4,-6,7,7,-5,-10,-10,-10,8,1,10,-1,8,-9,7,7,-2,-10,-1,10,5,-8,5,-3,3,6,3,4,-3,-10,-4,10,2,-6,7,8,10,-9,3,9,10,-1,1,2,2,-2,1,-4,-4,-5,-10,4,-10,-4,7,-10,7,9,1,-1,3,1,5,-8,-8,9,7,-8,8,-1,3,3,-5,9,-2,-10,2,-1,-7,-8,-2,-4,2,-6,-4,-5,-10,-9,9,-2,-8,7,4,-9,-9,-9,-5,9,-7,-6,-4,7,9,9,-6,10,5,-4,-9,1,1,8,5,3,-4,2,-10,-2,-7,-9,-1,-6,10,5,-4,-7,6,-3,5,-2,5,-7,-3,5,9,4,5,-6,2,6,10,5,1,9,-3,6,-7,2,3,1,-1,4,6,3,-3,-6,-2,-1,10,-10,-2,-1,-3,-8,-10,10,3,9,8,-9,-9,-6,-7,-6,6,8,-4,7,-1,6,4,-3,2,6,4,-2,10,5,-4,4,7,-10,-2,8,9,-5,2,10,9,-5,-3,7,-7,-1,-1,3,-9,-1,-7,2,-5,-1,-4,2,-8,6,7,5,6,-5,10,-7,10,-8,6,-6,-7,-9,-9,6,-1,-9,8,2,-9,-10,-4,10,4,-2,-9,5,-5,-9,-7,-2,-9,-7,-6,-10,-8,5,-9,6,4,6,-6,1,5,-6,7,3,10,5,-10,2,-7,-10,4,2,5,3,-10,5,-6,-10,-10,1,4,7,-2,2,5,-8,7,7,9,-3,4,-6,10,3,2,1,1,10,6,3,-3,10,-2,-1,-7,-9,4,-1,-5,6,2,3,-5,7,4,-3,-2,6,10,-4,-4,7,-2,4,-7,-5,10,-2,-1,-6,-10,2,10,5,-7,-8,-4,1,-5,3,7,-1,-4,-2,4,9,-7,-8,-1,8,4,7,10,3,-4,9,2,8,5,-2,6,-4,4,-9,-7,-3,2,8,-9,-7,-5,4,-8,-7,10,3,5,-10,-1,4,-7,-8,6,-1,7,7,6,-1,-2,9,-2,-2,4,-5,-3,3,-5,-9,7,7,-9,5,-4,2,-9,-9,-5,-5,3,4,-9,5,9,7,5,-1,-6,2,5,7,-4,2,-9,10,6,-7,-2,1,6,1,-9,6,9,7,-1,-9,-5,4,-9,-6,-10,-2,-7,8,-8,-5,-1,4,10,-5,10,-3,4,-8,6,10,9,8,4,9,5,10,-6,6,-10,4,5,-4,9,-4,8,-8,-5,-2,4,-10,5,5,-4,7,5,5,-1,1,-3,-4,8,-9,-10,-9,-2,5,6,-1,2,8,1,9,2,-1,-4,5,7,-2,-5,-1,-9,6,-8,-10,7,10,-9,10,-9,-6,6,-3,-3,1,-8,-7,-1,-6,2,-9,-2,-8,6,-4,-1,-7,10,-3,7,-3,6,-5,4,6,-5,-6,-4,2,4,-4,-6,5,3,1,10,6,-5,-5,-2,3,-5,-8,3,8,6,4,5,8,-5,-7,-4,-5,5,5,10,-7,-9,4,5,-1,6,-4,5,6,-2,9,5,2,3,-5,7,9,-7,10,-7,-4,6,-3,-10,3,9,6,5,3,-9,-2,-2,-4,8,-10,5,-9,2,4,-10,-3,-10,-4,-9,4,7,4,-8,10,-2,-4,-6,10,4,9,-2,4,3,6,7,10,5,-5,4,-3,-8,3,-8,4,-8,8,7,-3,-10,-2,8,-2,8,10,-5,-8,7,-8,6,-9,-7,8,8,4,-2,-4,-10,5,-6,-2,7,-7,-3,9,9,6,4,-9,7,8,-2,10,-3,-2,10,-1,3,-1,-2,-6,8,-6,9,-3,-1,-4,7,4,10,8,-1,-9,6,-1,-10,-9,10,-1,3,5,-8,4,6,-5,8,-6,-2,-3,5,-7,10,3,1,3,9,7,-9,-3,1,-9,1,7,-2,-2,-4,-2,-4,8,-1,9,-9,7,9,2,6,-10,1,-10,8,10,8,-8,-6,-8,-9,7,5,-5,2,4,-3,6,-2,6,6,-3,7,7,-2,-10,-3,-7,1,-5,-3,2,5,-9,2,-8,3,-3,7,-4,8,-9,3,1,2,-6,7,1,5,9,-7,-8,-2,-1,-2,9,-8,-10,4,2,9,1,7,-8,-3,-10,5,3,10,8,6,1,-4,5,-6,4,-9,1,-8,-8,7,-3,7,-10,9,-8,-5,-1,4,9,-6,-5,-9,-1,-7,-7,-9,7,-6,3,-6,10,-4,10,-6,-7,-3,7,9,8,7,10,-6,3,5,5,1,-3,-6,-2,-4,-7,9,1,-4,-6,4,8,-5,2,-9,1,4,-4,9,-7,2,1,9,-3,-1,-3,-9,7,-4,-3,-7,4,8,-6,-3,-9,-6,-10,2,-8,-4,-8,-4,6,3,4,4,3,-5,9,1,-6,-10,-2,2,5,-10,9,-7,3,-6,10,-4,-4,-6,-10,-2,-4,3,-7,5,-10,-5,1,6,2,3,-4,8,8,10,1,-6,-6,-10,-3,5,1,6,3,-6,-6,8,-5,-7,-10,-5,-8,-5,-10,-7,9,-8,-1,-2,8,9,6,3,6,8,-6,-7,2,9,7,6,-6,-8,-1,-1,-8,-3,10,10,8,3,1,-6,-2,-4,1,-8,-4,-3,-7,-4,-9,-3,-4,6,-9,4,9,-2,7,1,-7,4,-5,8,5,9,10,-10,3,6,5,1,-2,-2,-10,-8,1,-10,-10,8,-10,-7,7,5,-5,1,3,-1,-8,7,-7,-4,-6,5,-3,-1,-8,-3,8,-6,-1,3,2,10,-1,5,-9,-6,-5,2,4,9,4,10,2,-6,-2,6,5,1,10,-3,8,5,-2,9,10,9,-10,5,2,4,10,-9,3,-2,9,3,5,-9,6,-3,6,10,1,-9,-9,-1,2,-8,10,-9,5,6,-1,-7,3,-5,5,6,-3,1,9,-2,9,-5,10,-10,7,5,9,6,3,2,7,4,-4,-3,-6,-3,5,-6,1,9,1,5,-7,1,-2,-8,2,8,-8,8,-6,-8,8,-7,9,-6,-2,-10,2,9,-6,-3,-10,4,-2,1,-3,10,-5,10,-6,4,-7,-7,10,1,4,4,-4,3,1,5,-4,-7,5,3,-4,-1,5,-8,-3,-9,-4,2,-3,6,-10,-2,-6,-5,4,4,7,9,-1,-7,7,-5,10,10,4,-9,-5,-1,8,5,4,-2,-3,4,-7,10,8,-4,5,-4,-10,-5,4,7,4,7,-1,10,1,8,7,-3,-5,5,-1,-1,4,5,2,1,5,-3,-1,10,10,-2,-8,-6,-4,-5,2,5,9,-3,5,8,-5,8,-5,10,6,4,6,9,1,-4,-7,8,-2,-9,-8,-9,-8,-1,-3,2,-2,5,8,-8,5,3,-5,-10,-3,-4,-5,-6,-7,-10,9,-2,-10,-8,1,7,-2,-10,1,-1,-6,-9,-7,-6,3,9,-7,2,-9,6,-8,8,3,-6,5,-1,4,1,-5,8,-2,2,9,9,-4,-10,5,-2,-3,5,6,8,-7,3,-10,2,7,3,7,6,4,6,3,10,-6,5,-2,-4,-3,-1,-8,-7,8,-3,-2,6,6,-7,-10,6,-1,-2,3,2,-10,9,5,-5,5,-7,8,3,7,-2,7,5,-6,-1,-2,6,-5,10,-2,2,-2,4,-4,3,-7,8,-2,1,9,-8,4,-3,-9,-8,9,-8,-1,-10,-9,4,-7,-9,-7,-6,4,-7,7,7,4,-7,-7,3,-5,-3,-5,2,9,-8,4,3,9,-8,2,2,-3,7,2,-8,-3,5,7,-8,1,-3,4,-4,-7,-9,8,-3,10,8,1,3,6,2,5,2,-9,-2,-2,-8,-7,-6,-10,-5,-10,-4,-1,-7,-5,2,10,-6,8,2,4,-9,-6,-7,3,-7,-3,5,8,-2,-10,2,8,-9,-8,6,-2,5,9,6,-2,-4,6,10,9,8,6,-9,10,1,-10,1,2,-2,8,3,-1,-6,6,10,7,7,9,-10,-6,8,7,-8,5,-2,-7,10,3,4,1,-9,3,-4,3,-1,4,-7,-9,4,4,-5,-2,-9,-3,6,-1,4,2,6,3,-6,-5,10,7,-7,9,-4,-9,7,7,7,8,-2,3,-8,3,1,-5,3,-4,-5,-2,-3,-1,2,4,6,5,4,3,-2,6,-6,4,-4,-8,1,-5,9,-7,-4,4,-4,-5,5,-2,6,-10,-10,-10,5,3,-7,2,-4,1,-1,5,2,-6,2,5,6,8,2,-10,7,-6,-10,2,-9,-2,-8,6,1,-8,-9,-8,-8,1,-8,10,-2,2,7,8,7,-4,10,-4,1,-1,4,-5,10,6,-5,-3,-3,3,-1,5,4,2,1,-3,9,-3,7,-9,4,-5,2,-9,5,6,-4,3,-2,2,-2,-6,-10,3,-8,4,-8,10,9,4,1,9,10,-3,-6,6,1,6,-2,1,-3,-2,4,-10,3,-6,-5,2,-4,8,2,-7,-5,-4,-3,-8,10,9,4,-8,5,-1,-8,8,8,3,1,2,-4,-4,3,-5,-2,8,6,-2,9,-3,-8,10,-8,-5,4,6,6,-5,2,2,8,3,-8,-7,10,-6,3,-4,1,-2,9,-5,10,3,-3,9,7,-3,6,-1,-2,-5,-5,7,-10,-2,-9,-1,-8,2,-1,1,10,2,6,4,-2,-2,-10,2,-2,-7,1,1,-4,1,1,-5,5,-8,-3,-8,3,-10,1,-1,8,5,9,1,8,-1,1,1,-3,7,-3,-1,-5,7,4,-10,-9,-4,-10,2,-6,-10,-10,2,-1,-9,4,-9,10,-6,6,-9,-10,3,-7,-9,-1,1,-9,3,4,4,-2,8,1,-8,-7,-3,-7,8,-3,-8,-5,6,-2,3,10,5,-2,-6,6,-9,-1,1,-1,4,5,10,1,-3,4,-10,-7,8,7,-10,10,-5,4,-8,4,-10,-6,-8,-6,-9,-10,7,-3,5,-3,-10,-8,3,-2,8,-7,-6,1,-7,6,7,4,-1,1,6,3,-6,-2,5,-1,1,-1,10,-10,7,4,1,-10,-6,8,-4,7,-4,-8,-4,-9,-9,-1,-2,-6,8,5,-10,10,5,-6,-3,-8,2,5,6,-1,6,-4,5,-7,3,-2,8,-9,-4,-3,-9,-3,6,-9,1,7,-3,4,-2,3,-5,-8,-7,-6,-3,-7,10,3,5,8,3,-3,-8,-4,-10,-8,2,-7,-3,1,4,8,7,1,5,-7,-7,-5,-9,-7,-8,5,-1,10,-7,-1,10,-6,3,8,-7,8,-7,-8,4,9,-8,-1,-7,4,5,-7,-7,1,-2,-9,5,-2,-10,3,4,5,4,-3,-10,-7,4,-1,10,-2,2,9,1,-2,-2,7,6,-9,10,5,9,-7,7,6,10,10,-1,9,-2,5,7,9,-5,-6,-8,-7,3,4,9,-9,-9,-1,8,4,-3,4,-4,3,-1,4,-10,-10,2,4,3,-2,-2,3,-5,2,10,7,-10,3,1,-3,-8,-5,5,4,5,-10,-1,9,-4,3,8,7,-4,9,8,8,3,6,5,7,8,-6,-2,4,-5,-1,-10,-1,9,-2,2,-2,-3,4,-8,7,8,-4,8,8,6,-8,-8,-1,-9,-3,-10,5,-3,3,-7,7,4,10,9,5,7,-2,-10,-3,3,-9,1,10,10,5,-4,7,-4,-7,-4,10,6,8,4,-7,9,4,10,6,-7,-1,5,-8,4,-4,10,10,6,1,9,-9,-4,8,4,5,-5,4,-4,-9,-8,5,-6,3,2,4,-2,10,3,-9,2,-10,-10,-6,-5,-1,9,2,-10,9,-8,3,-3,5,1,-5,-8,9,-7,10,-10,-6,8,4,2,-2,-6,10,10,-7,9,-3,5,5,-6,4,8,3,-10,6,10,-4,-4,8,-2,-4,-5,8,-8,-1,-9,-10,-5,-5,-2,8,-10,10,9,-8,3,3,-9,-7,5,-3,3,3,10,4,10,6,6,-4,8,-7,-3,8,-1,-3,4,-1,1,8,2,3,-6,2,9,-9,7,7,-4,2,-3,-2,-2,6,8,5,8,4,1,7,1,6,-10,7,-9,9,-5,8,7,1,10,9,-5,3,8,-7,-4,8,7,9,-4,7,1,-7,1,-8,-3,10,-10,6,-3,-9,-6,-2,-2,-7,9,-6,-1,-1,-10,-5,5,-2,6,-5,9,-5,-2,-7,10,-1,-10,-1,9,-5,-2,3,-4,4,-1,1,4,-6,-5,-1,1,-3,-8,-1,-8,-7,7,-8,4,-2,-1,-8,9,1,9,8,-1,-10,-7,5,9,4,1,6,-5,2,-9,1,4,-3,-2,-4,4,-2,-7,4,1,2,3,-9,6,4,-4,7,-7,-3,-1,-3,-1,6,6,-5,-2,-10,7,-1,5,-2,2,-6,-10,-9,-6,-8,9,-6,-5,-3,10,-2,-5,1,10,-8,3,-1,-3,-3,-3,7,-4,1,5,-8,7,3,-3,-1,-8,-3,-1,3,7,4,-9,-3,5,4,-8,-7,2,-7,2,6,-7,4,-5,3,-5,3,-9,6,-2,5,3,-5,2,8,1,8,6,5,9,5,-8,-7,-5,-2,3,7,1,-1,-7,7,-4,4,-4,-3,-1,-6,-7,6,6,-10,-7,-5,10,-1,4,5,-2,-9,-1,1,1,1,-2,1,-6,7,8,2,-7,-7,3,-10,-2,-3,-1,5,6,1,2,8,-1,-1,-8,-8,-8,-7,-8,5,-7,-1,5,-2,1,-8,5,2,2,8,-8,4,-3,4,7,-1,8,-3,-9,3,-10,4,-7,-5,2,7,-10,-4,2,-4,9,-5,9,-9,5,-8,-3,4,9,-8,-3,-10,8,7,4,-10,9,2,-3,6,-5,7,-7,7,-10,-6,2,7,-10,7,-6,-10,2,2,-5,5,3,9,3,-5,-2,8,-6,1,7,-1,7,-9,5,6,2,-1,3,2,-5,1,-7,-1,-3,-1,10,-5,-3,-8,8,8,3,-2,9,-4,-2,-2,-3,-3,5,9,4,-4,10,7,6,-7,-7,7,4,10,6,6,7,8,-1,-9,10,-6,-7,-10,10,-2,-4,-3,-8,-6,-7,6,10,-5,-8,8,10,-10,-6,-8,6,3,6,-10,-1,1,-9,-1,8,9,-10,5,10,-7,-8,5,4,5,6,-6,-4,-2,-5,-9,8,-10,5,-10,-3,-1,1,-6,-4,7,-8,6,2,-4,-2,10,3,10,-7,2,9,-2,1,-7,9,-6,9,-1,-1,-7,-8,-5,-9,8,7,-10,7,-7,2,-5,10,-9,3,-9,3,-9,5,3,-7,1,-2,10,-5,-8,-5,-7,4,3,4,-4,-9,1,5,9,-4,7,3,5,-8,-4,-6,7,7,-9,-3,-1,8,-8,3,-8,-2,-2,4,-5,-10,5,-10,-8,-2,9,4,10,9,6,7,-8,8,-6,-7,5,9,-5,-2,-5,4,2,1,9,-1], dtype = "int16")#candidate|8740|(3840,)|const|int16
call_8738 = relay.TupleGetItem(func_130_call(relay.reshape(const_8739.astype('int16'), []), relay.reshape(const_8740.astype('int16'), [15, 16, 16]), relay.reshape(const_8732.astype('bool'), [120,]), ), 3)
call_8741 = relay.TupleGetItem(func_135_call(relay.reshape(const_8739.astype('int16'), []), relay.reshape(const_8740.astype('int16'), [15, 16, 16]), relay.reshape(const_8732.astype('bool'), [120,]), ), 3)
output = relay.Tuple([call_8721,call_8731,const_8732,call_8738,const_8739,const_8740,])
output2 = relay.Tuple([call_8722,call_8733,const_8732,call_8741,const_8739,const_8740,])
func_8745 = relay.Function([], output)
mod['func_8745'] = func_8745
mod = relay.transform.InferType()(mod)
output = func_8745()
func_8746 = relay.Function([], output)
mutated_mod['func_8746'] = func_8746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3282_call = mod.get_global_var('func_3282')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_8760 = relay.TupleGetItem(func_3282_call(), 0)
call_8761 = relay.TupleGetItem(func_3283_call(), 0)
output = call_8760
output2 = call_8761
func_8786 = relay.Function([], output)
mod['func_8786'] = func_8786
mod = relay.transform.InferType()(mod)
output = func_8786()
func_8787 = relay.Function([], output)
mutated_mod['func_8787'] = func_8787
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8801 = relay.const([[[0.619531,3.341954,7.016651,2.408623,-9.154572,1.667446,-3.909552,8.664113],[9.244413,-1.027124,1.392220,4.275790,8.544764,-6.714444,2.789737,-9.281981],[-1.593451,3.676276,-0.862512,-5.127234,-0.243852,-0.919066,-1.658309,8.562354],[-9.072861,6.247396,-2.160708,0.436152,4.578574,1.785497,5.147668,-8.577195],[6.574418,3.990099,-9.016388,7.876191,-6.315720,9.733850,2.890672,-5.854199],[-3.949655,4.096146,-4.523074,7.619235,-6.366764,8.495761,-5.832675,9.943894],[1.697050,9.337546,-3.387838,-4.686430,-0.967929,4.209353,4.385260,-8.859578],[3.974799,-0.846012,-3.058366,-8.617528,4.963792,-4.639097,2.736200,8.162230],[-8.061598,-4.852454,7.256287,1.284039,6.761224,6.552005,2.771971,-9.690407]]], dtype = "float32")#candidate|8801|(1, 9, 8)|const|float32
uop_8802 = relay.sinh(const_8801.astype('float32')) # shape=(1, 9, 8)
bop_8816 = relay.logical_and(const_8801.astype('bool'), relay.reshape(uop_8802.astype('bool'), relay.shape_of(const_8801))) # shape=(1, 9, 8)
output = relay.Tuple([bop_8816,])
output2 = relay.Tuple([bop_8816,])
func_8830 = relay.Function([], output)
mod['func_8830'] = func_8830
mod = relay.transform.InferType()(mod)
mutated_mod['func_8830'] = func_8830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8830_call = mutated_mod.get_global_var('func_8830')
call_8831 = func_8830_call()
output = call_8831
func_8832 = relay.Function([], output)
mutated_mod['func_8832'] = func_8832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8136_call = mod.get_global_var('func_8136')
func_8138_call = mutated_mod.get_global_var('func_8138')
call_8847 = relay.TupleGetItem(func_8136_call(), 0)
call_8848 = relay.TupleGetItem(func_8138_call(), 0)
output = call_8847
output2 = call_8848
func_8861 = relay.Function([], output)
mod['func_8861'] = func_8861
mod = relay.transform.InferType()(mod)
mutated_mod['func_8861'] = func_8861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8861_call = mutated_mod.get_global_var('func_8861')
call_8862 = func_8861_call()
output = call_8862
func_8863 = relay.Function([], output)
mutated_mod['func_8863'] = func_8863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8786_call = mod.get_global_var('func_8786')
func_8787_call = mutated_mod.get_global_var('func_8787')
call_8922 = func_8786_call()
call_8923 = func_8786_call()
output = relay.Tuple([call_8922,])
output2 = relay.Tuple([call_8923,])
func_8938 = relay.Function([], output)
mod['func_8938'] = func_8938
mod = relay.transform.InferType()(mod)
output = func_8938()
func_8939 = relay.Function([], output)
mutated_mod['func_8939'] = func_8939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6359_call = mod.get_global_var('func_6359')
func_6361_call = mutated_mod.get_global_var('func_6361')
call_8985 = relay.TupleGetItem(func_6359_call(), 0)
call_8986 = relay.TupleGetItem(func_6361_call(), 0)
func_7195_call = mod.get_global_var('func_7195')
func_7197_call = mutated_mod.get_global_var('func_7197')
call_8996 = relay.TupleGetItem(func_7195_call(), 3)
call_8997 = relay.TupleGetItem(func_7197_call(), 3)
bop_9008 = relay.subtract(call_8996.astype('uint32'), relay.reshape(call_8985.astype('uint32'), relay.shape_of(call_8996))) # shape=(1456,)
bop_9011 = relay.subtract(call_8997.astype('uint32'), relay.reshape(call_8986.astype('uint32'), relay.shape_of(call_8997))) # shape=(1456,)
func_2683_call = mod.get_global_var('func_2683')
func_2690_call = mutated_mod.get_global_var('func_2690')
const_9018 = relay.const([-7.784522,5.493396,0.350970,0.376927,-1.437164,6.428727,9.165287,9.112418,4.625892,6.941664,3.537917,-8.810210,-1.790349,5.169660,4.900778,4.452953,6.670420,3.297031,9.725643,3.271271,2.914438,7.123307,4.964303,2.059828,-5.171536,6.291767,9.179802,4.426149,-0.649812,6.087332,3.093172,9.525674,-7.857735,9.080742,-5.153453,9.775245,7.883713,-2.492083,-6.708577,-4.059141,6.227250,-8.542129,9.763317,-5.210682,-1.905407,-3.413140,2.012356,-2.258028,-9.084939,0.233453,9.747064,-3.524354,-3.940216,0.301931,-0.357766,6.701833,3.548977,-0.899010,4.649664,3.766449,-0.311493,-7.856564,4.747796,0.546823,-9.133924,-4.518820,-1.599307,6.034417,-0.912202,8.684637,-8.906610,-2.425445,-2.483796,-8.841609,8.853104,-4.154307,5.433840,2.296108,5.207958,-9.136049,-3.138063,0.232134,8.766793,3.221812,-2.882565,-2.016755,3.630154,-9.314576,2.198460,-9.948983,-6.350441,5.139803,7.854754,6.432563,1.701652,-6.943700,-5.158661,-6.224280,-8.425656,7.393904,-3.545079,5.866069,-2.738625,-1.338411,1.204706,6.347526,1.256606,3.669684,4.118746,0.834687,8.491714,-0.444738,-0.448206,6.754087,-9.782258,3.368706,5.626706,0.399228,-7.466053,2.184481,-8.804422,-1.868613,8.580304,-3.509502,-2.947958,-1.152318,3.876543,9.351543,3.733909,6.190024,-7.451643,7.951268,5.820966,0.438360,-5.219571,1.677651,0.558267,-3.451501,-7.995569,-5.304218,-5.694192,-9.402834,7.527316,6.344470,-4.688563,2.165178,3.307891,-2.712921,9.112151,9.519441,9.238505,-6.715476,-2.427996,4.727426,3.877206,5.827467,-3.031405,8.739640,9.836798,4.636193,4.176599,-2.597783,8.614506,-9.564577,5.003712,-4.284934,-4.129886,3.891415,1.895943,0.225633,-2.388726,-9.628439,-2.691157,6.595093,0.738711,-5.618789,4.131323,9.405495,6.445154,1.569207,2.685278,9.324558,-4.416056,-8.596283,-9.320213,-5.658947,-3.066627,7.589350,-0.515519,8.959994,8.935759,9.306547,-6.663750,1.551770,-6.186790,-6.398213,-8.510928,1.328127,3.726410,-3.159540,-0.426009,-4.840343,-0.895407,8.460485,-9.825118,-6.448841,-8.230599,-7.029789,-2.255190,8.436701,-3.028489,0.507305,4.783423,8.466215,-5.400574,-7.831131,-5.108241,-2.419678,9.524360,-2.817124,-4.784763,3.910437,-6.919630,3.475554,-3.848030,0.968363,9.736979,2.652430,3.081773,0.351778,4.706067,-4.899374,-1.267643,-5.541094,1.973151,-8.499817,8.708966,-2.048356,6.628483,-8.332650,-3.047009,8.565994,-6.708062,5.674646,5.425299,-0.845045,-0.806511,0.871260,8.381070,-5.914819,-2.057314,-5.512802,5.846416,4.069960,-8.622010,-6.614264,6.397335,-2.484861,-2.999813,7.710256,-8.771137,-6.434163,5.212680,-0.671357,3.309826,4.237490,8.375527,8.533028,-8.042028,0.715656,5.704625,-3.069007,4.970899,-5.262078,-9.725032,-6.314005,6.859337,3.780790,-5.506767,7.308926,1.488752,5.656405,-8.232168,6.918234,5.345049,-3.879494,-5.643727,6.838526,3.811012,6.768833,6.971595,1.435977,5.868878,2.060815,-0.797311,1.382546,6.858554,-4.996727,-4.322733,3.504591,-4.273083,-6.539920,-8.141400,2.692384,2.006896,6.919539,-8.225697,-9.281658,3.121413,1.087753,-3.161143,8.774484,9.953266,-5.133884,6.193442,2.569143,5.136569,-4.426446,9.852849,6.617381,8.699793,8.459785,1.458347,7.227853,-1.262777,-9.288014,5.370772,-6.706343,2.171175,-9.622344,-5.010216,1.029313,3.081410,2.537720,5.952284,-0.532104,2.809238,-3.305339,2.444964,-1.810828,-4.271371,-3.920691,-3.859444,-8.605212,5.316200,9.707531,-9.163336,2.075937,-0.461766,-6.439317,-9.621828,-9.667669,-9.148054,-2.444403,-9.961414,4.342084,-7.649194,6.060201,5.719724,-5.620014,-6.707898,-0.453863,-9.488637,3.073581,8.564912,-4.161898,-9.069879,4.953223,0.134410,-5.424832,-9.899237,-5.820522,5.908928,-2.120919,0.151837,-1.319006,-2.220598,-7.946511,-9.315813,7.868838,9.511324,0.794048,4.868087,8.295252,5.207150,-4.246954,2.262890,-2.696343,-1.716076,0.828183,3.891771,-5.559188,1.476000,0.543281,-4.130788,9.971002,-2.451493,6.470409,9.262431,0.543816,-1.095900,6.564249,-5.069185,-9.412618,-9.732031,6.276255,5.731415,4.298539,-2.247400,2.084605,0.902253,5.651038,3.330938,8.186088,6.258955,7.061479,2.061866,2.793574,-4.280861,-8.216437,-2.520679,3.001299,3.858223,-1.380733,9.750735,-1.689952,-4.383953,-2.744169,-8.086041,-7.364080,-3.419572,1.923585,-9.272899,-1.987876,8.423947,0.074274,-4.070110,3.361418,2.713449,3.154379,8.530550,-6.072245,1.335531,-4.677603,-4.556574,4.412621,-6.367768,-1.947090,-3.989072,-9.012270,-1.197940,1.470908,-4.330301,-0.198739,-9.031142,-7.277126,-8.357762,0.676197,9.915725,3.056415,-3.251867,9.905274,-0.633183,-1.378817,-8.391425,-6.477511,-7.271167,3.943943,-5.646823,1.489778,6.929993,2.211673,-2.262040,-1.044564,-8.577078,6.801053,-9.256143,8.911755,0.008380,6.211104,-3.638371,-4.337836,4.865194,8.719729,6.689694,-1.618485,-8.371348,-6.948772,-7.906992,6.622700,4.921055,-2.672737,6.982208,-1.254212,5.095403,-2.177523,2.561874,-4.798861,-3.698307,-7.473670,-5.839887,-0.488172,-1.949129,7.919078,3.355433,1.355208,-0.214177,5.927390,-5.199444,-6.730729,7.474030,0.306807,4.403198,-8.233257,-4.051229,6.578357,5.996372,8.883959,7.399714,6.401595,2.243323,2.919482,-3.496310,3.507817,-1.400277,-1.916873,-2.948820,-2.821565,2.774137,2.059930,9.098069,0.123476,4.027039,5.101035,4.443977,5.894814,3.177478,-3.369702,1.835489,-6.710475,9.410003,-5.726577,6.084302,2.371859,3.814124,-3.927480,-1.764513,2.485776,-0.641706,-3.077599,4.166308,8.605858,-1.027093,-4.484594,6.589793,7.986155,6.182980,7.489865,-4.479273,-6.772648,6.023725,-6.280625,-8.885049,7.277155,-7.189672,-0.163772,-4.833119,6.839220,-9.520562,-5.485463,-2.629680,-2.338228,1.842732,-1.933864,5.649489,4.476403,6.421717,-0.676039,-4.106874,6.920398,3.256405,-7.202532,3.252454,-0.690907,-0.318735,4.056280,-9.201162,-6.552448,8.038623,6.620320,4.068800,-7.499681,-5.394946,-2.888257,-9.159546,-1.667727,-3.344149,1.592372,-2.968101,2.151577,6.543728,3.394216,-0.116501,3.000291,0.059591,-2.181668,-7.565876,7.686632,1.413433,4.010295,6.123845,4.066206,-9.893159,0.731818,-7.542600,9.468790,-8.644467,7.079400,3.787352,-1.877557,4.446924,2.568600,8.320055,0.026596,0.368710,7.023284,-7.033838,-7.105632,8.818856,7.803962,-9.811635,4.572648,1.457001,2.577347,-8.383529,3.814130,7.040991,0.250106,-0.557224,6.692784,7.441012,-7.076355,-0.261698,-3.056474,7.188438,3.025021,7.870870,-6.804804,-7.081360,6.504939,0.351663,-8.004820,6.308640,-7.896495,-8.485113,6.751431,-8.047748,4.242630,-6.821433,-2.485012,5.954857,1.002033,6.104817,-9.262459,-6.090141,-5.318847,-7.157978,-1.810248,-0.065644,7.551715,-6.591930,-5.681800,8.919778,1.909634,0.930289,2.395673,-4.137388,4.621495,-3.163081,3.851907,3.926918,-1.763146,-3.112690,-5.244327,1.824348,-6.223254,-1.644698,-2.896712,-0.744301,-4.329646,-1.026872,3.954614,-7.378155,-5.345530,-6.600713,4.231061,8.931234,0.507353,-1.305232,-1.413653,-2.182254,-1.238573,6.506766,-8.163375,-2.957918,8.774988,-1.282498,1.821852,-1.665523,3.273337,2.300127,-0.476838,-6.319910,5.022164,3.580478,4.548802,-9.929296,1.400118,-9.412860,9.779624,-8.929288,3.524847,8.559669,5.198717,-5.246321,-3.037326,-0.759244,-8.504799,0.388720,6.226989,4.929960,-1.113004,-3.548903,8.250356,5.896432,-0.503265,-2.261142,-5.482858,-5.666318,0.011584,-8.414943,7.412478,-0.412373,8.972620,7.218434,6.041917,6.198901,-2.667085,5.428435,6.341856,-7.587678,-1.792530,8.984102,6.439699,-2.174787,5.138749,-7.165635,4.010572,-2.825776,-6.284691,-5.513640,5.264358,4.247167,9.841157,6.920358,0.414990,-5.777275,-4.242012,-5.006036,-0.511754,-5.723167,5.913327,-2.930851,-9.281270,-3.054815,-1.729502,-4.075882,-0.798231,3.657113,-0.330042,-3.107554,-4.819069,8.825282,9.791698,-9.739603,-6.096661,6.362988,-6.962842,7.906171,-8.135800,8.290739,-8.000134,-1.325396,-5.921744,-5.771453,9.803858,-3.259382,-5.371333,-4.605732,-7.037406,4.630145,-9.211813,-3.433332,-0.995662,0.179862,4.080012,5.838522,-1.433276,1.857113,1.294427,5.453504,-6.887874,-8.811948,1.865419,-2.528807,-9.009283,-5.839084,-5.177673,1.624608,-4.308248,-2.105577,9.257314,9.240745,2.413086,-3.329225,8.495990,3.464263,-7.703397,-1.144993,2.491747,9.768473,-5.409774,-7.318161,-3.004765,1.656522,-5.313754,1.722114,6.677377,1.195643,5.377051,7.083746,1.583614,-8.293989,-6.428184,4.471160,-9.874840,9.665668,-4.518093,9.968263,0.479673,-4.099843,-5.710865,-7.121554,-3.569496,1.653721,0.380439,-0.093836,6.226159,-0.739249,3.715943,3.497415,-2.001237,-7.015351,-1.218676,-3.662239,-5.376308,5.996241,-4.620702,-7.662646,3.292898,-2.210461,-1.332037,5.826117,3.858626,-7.124481,1.519265,-4.553159,-9.366424,9.354884,9.135039,4.730227,-1.946124,-8.083137,-2.274295,6.892096,-1.513534,-0.941197,9.959745,8.912735,-7.451360,4.731568,7.307857,6.545918,6.568781,5.804309,-0.219148,-0.942211,9.884944,7.139140,-2.754744,-8.965426,-7.263820,6.707872,-2.612316,6.280042,-4.101300,8.661462,-5.075618,-3.539266,5.397971,-3.813992,-2.095295,-8.158469,-9.770794,8.405510,-6.267723,6.929102,-4.055800,-8.695916,2.861993,2.615234,0.827666,-9.807858,-0.589618,4.750483,-0.894686,8.336412,-9.639029,-5.829686,-3.450407,1.813998,0.949172,2.627922,-8.479868,3.383509,8.125281,0.303999,6.459511,2.892227,-6.209669,3.223756,-1.627572,3.985583,-2.540240,6.056908,5.567483,9.389190,-6.311329,6.431613,0.191595,-9.117958,8.621007,2.648709,3.362760,-5.946361,4.648915,-8.184117,2.980493,-2.391905,-7.374655,-6.390642,8.763556,-4.669838,-4.873425,-6.684405,-6.070765,7.513251,-6.155989,-0.762672,8.039750,-5.698344,-2.075978,-6.489129,-5.398184,4.714067,1.723895,1.604730,-1.885966,-1.577243,9.069523], dtype = "float32")#candidate|9018|(980,)|const|float32
var_9019 = relay.var("var_9019", dtype = "float64", shape = (78,))#candidate|9019|(78,)|var|float64
const_9020 = relay.const(-6, dtype = "int16")#candidate|9020|()|const|int16
const_9021 = relay.const([[False,False,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True],[True,True,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,False,False],[False,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,False],[True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True],[False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True],[False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True]], dtype = "bool")#candidate|9021|(6, 20)|const|bool
const_9022 = relay.const([[-1.592241],[-7.992172],[8.083910],[2.305618],[8.394391],[8.087258],[0.441385],[-1.097394],[8.082785],[-4.658827],[-0.294184],[-7.707490],[6.205628],[2.291087],[-8.602909],[-4.425133],[-4.457005],[8.731308],[-2.603848],[-9.609463],[-5.094665],[3.343305],[-7.561158],[2.303586],[-4.439096],[9.227567],[-0.237058],[2.730608],[0.071737],[8.456043],[4.157681],[-5.958888],[-3.956872],[4.438042],[4.658502],[-7.067886],[-2.065500],[0.512314],[2.436349],[-0.708486],[-8.849581],[0.474048],[-6.904991],[-9.459511],[5.695088],[6.284905],[6.154899],[-5.215527],[5.295646],[5.935004],[-2.614744],[-3.047972],[8.090890],[9.355677],[-7.654354],[-7.488133],[9.787647],[2.020924],[-0.283654],[-3.901232],[8.921078],[-5.441773],[5.684191],[-4.836223],[8.140697],[6.901261],[4.327332],[-3.426642],[-4.777520],[5.460989],[5.127598],[8.267296],[6.421224],[-0.758215],[7.299683],[-8.510554],[-1.962651],[1.584922],[3.163654],[-6.801476],[5.594587],[-4.114340],[4.530550],[0.933110],[3.319259],[-6.195617],[-9.410377],[6.090549],[-2.522888],[0.351808],[-0.148822],[-8.619524],[9.081113],[3.936524],[5.374002],[8.240271],[0.289177],[1.992890],[-7.521480],[-5.538717],[-8.011529],[-9.098481],[1.566864],[-9.713690],[-3.791349],[7.519858],[0.943951],[8.433714],[1.624990],[-9.477019],[5.114862],[-6.632950],[0.739714],[6.109278],[-7.771426],[2.397033],[4.859956],[-9.610170],[-2.488224],[-1.052390],[-9.928610],[3.812403],[-6.406215],[-7.506667],[4.203180],[-1.330288],[-9.721636],[-2.547343],[8.454997],[0.870535],[5.850161],[-7.532123],[2.506121],[6.577196],[0.445829],[-5.811016],[4.090611],[-4.718168],[-9.552388],[-3.862897],[5.852080],[-2.104551],[9.355177],[3.405405],[1.794058],[-9.047857],[-9.963957],[0.034055],[8.816860],[6.367768],[-8.424290],[9.238769],[7.614380],[8.781956],[-0.901880],[-1.153418],[9.627350],[-3.246217],[9.974058],[5.072642],[-5.061141],[8.800540],[-6.744172],[-7.269937],[-7.230755],[-0.874031],[6.518713],[-8.174215],[5.775494],[3.028745],[1.844723],[5.230402],[-6.010118],[3.262308],[-4.822767],[-2.845947],[0.825593],[6.940326],[-6.821803],[1.922425],[7.649232],[-0.228537],[2.917665],[2.346379],[-1.583521],[8.246238],[-5.766269],[-9.279161],[-6.264101],[-2.840841],[-1.574775],[6.183961],[1.859188],[3.415123],[6.284021],[-8.278050],[1.145773],[2.954593],[9.915569],[7.975142],[8.676812],[-9.930029],[-6.483294],[0.270408],[-3.730126],[6.327930],[-5.019620],[-7.267974],[8.148468],[-3.165813],[1.550567],[2.869643],[4.037090],[7.817034],[7.072068],[-8.210601],[8.857190],[6.943968],[-2.657670],[-5.165382],[-4.947940],[0.879223],[6.942333],[-9.395957],[-3.753038],[1.663320],[3.374605],[-9.241473],[9.874012],[-2.085395],[-7.551944],[-6.830466],[5.206291],[7.604057],[-7.221742],[-9.358461],[2.787772],[6.283977],[-1.640123],[6.841236],[-0.765133],[-3.544016],[9.558312],[-4.117546],[-0.315739],[-4.047756],[-5.888756],[6.000660],[-9.928039],[2.421905],[-6.762855],[2.512936],[3.177583],[-0.992005],[7.085240],[-2.950246],[-8.730857],[9.281105],[2.213651],[9.655596],[-7.076258],[3.160622],[-4.205170],[-6.153009],[1.344383],[4.169725],[-5.728543],[-0.611352],[1.505344],[2.721688],[-7.099659],[1.188462],[-9.119711],[2.586414],[-2.346254],[4.519776],[-0.817551],[9.157453],[8.037975],[7.786965],[6.213373],[5.858937],[8.148323],[-0.139499],[-1.864492],[9.533484],[5.400024],[-5.319373],[-3.857194],[-0.496550],[-5.694690],[1.159454],[-5.748188],[4.010056],[4.989968],[-2.635139],[1.807865],[-6.169234],[6.607802],[0.978393],[-3.469517],[7.776400],[9.496044],[4.696259],[5.795742],[7.950676],[6.520252],[-8.025035],[9.482205],[-8.195196],[-5.490550],[-5.514800],[-1.041054],[-2.200226],[3.640655],[2.642262],[1.757349],[4.614490],[-3.748787],[-3.232640],[-0.625266],[9.067056],[-8.118924],[6.567489],[1.056535],[-5.309998],[4.555131],[0.840875],[5.994897],[9.385566],[-9.016188],[-7.524787],[3.721790],[-2.423750],[-8.854870],[5.168506],[-8.593984],[9.840815],[-9.723355],[7.344258],[-7.321978],[6.949770],[-0.470150],[2.426516],[2.458058],[-7.367914],[9.331716],[7.112611],[-7.867909],[5.501285],[-8.762313],[-6.276775],[6.043789],[6.975800],[-0.087602],[-4.154754],[6.337372],[-4.716833],[-7.832422],[6.754126],[2.417154],[3.590207],[6.384047],[0.750121],[8.969760],[-8.002288],[-2.623915],[-5.578633],[-7.373164],[5.680353],[-3.283158],[7.291080],[-1.902178],[9.584249],[8.160419],[-4.488106],[-2.523994],[-4.981341],[-2.142659],[-3.156793],[-0.906362],[1.420797],[4.500468],[-5.338991],[4.561712],[-6.652706],[8.856977],[2.639273],[-4.747452],[5.081110],[-1.714588],[-1.956200],[5.504408],[-0.678901],[-8.323497],[6.396123],[0.790683],[0.013160],[7.120357],[9.110127],[-0.467851],[-2.728363],[8.844904],[7.838426],[9.946996],[-9.482873],[-3.666645],[-3.220048],[7.993080],[5.489318],[1.036846],[-5.901265],[4.665932],[2.835600],[3.061435],[5.363541],[3.255473],[-1.278955],[-5.781904],[-0.385189],[-7.684500],[0.802588],[2.029571],[-2.970200],[-9.164239],[-9.398425],[7.115996],[-5.352358],[2.701023],[9.806846],[-3.492873],[-0.350549],[-4.054215],[5.778899],[-1.244466],[-7.445185],[-7.710954],[9.795413],[-5.979003],[-4.472496],[0.669808],[-5.131635],[5.382461],[4.533397],[7.264238],[3.552222],[2.607329],[1.448815],[-0.789175],[-2.309817],[-9.840781],[5.436946],[-0.154508],[-5.273601],[7.075537],[9.591471],[5.716373],[4.631447],[5.397580],[7.955499],[6.060406],[-4.121133],[-6.942021],[-1.921757],[-1.606811],[6.439778],[-5.100783],[2.392689],[4.173970],[2.821858],[-8.953276],[2.502024],[-0.313749],[-7.405756],[4.836035],[-3.480325],[5.854400],[-1.543570],[-9.185269],[-6.817917],[3.985075],[9.614753],[9.934027],[0.182618],[-7.427958],[8.332473],[0.685934],[2.534067],[0.197098],[6.286461],[8.381523],[9.154298],[1.271413],[1.038435],[-3.559078],[-3.260664],[0.583459],[3.350419],[9.091529],[-4.673905],[1.702062],[-2.744217],[-8.939710],[4.250340],[-6.467814],[8.581490],[-4.025585],[-0.563406],[-4.129667],[-0.484530],[0.907474],[-7.078877],[-6.929673],[6.548045],[-2.964602],[-4.065701],[2.719184],[3.960720],[-4.443071],[5.201296],[7.558999],[-7.917877],[4.077321],[1.479431],[-5.601554],[4.858716],[2.520688],[1.238136],[5.644933],[8.332725],[-5.735720],[-1.152888],[-5.411204],[4.682083],[-6.320631],[4.613187],[5.531555],[4.263303],[-6.929021],[-2.291546],[-6.129663],[4.167603],[-1.733417],[-8.909416],[2.822514],[3.632761],[4.252333],[-2.768556],[0.808717],[-0.623777],[-8.125628],[-7.832781],[9.955979],[1.205370],[-3.331573],[8.470325],[8.933235],[-9.293576],[8.499040],[3.029029],[-9.316952],[-4.684005],[-9.306381],[-9.383981],[-3.446147],[8.712955],[-3.641717],[1.189393],[-0.449133],[-7.625240],[-8.078411],[9.384402],[-7.618262],[7.337702],[-5.262110],[-1.392561],[-7.698679],[-8.975661],[5.411431],[-2.043233],[4.954714],[6.990391],[5.758182],[-1.856511],[9.167534],[7.007898],[-2.740691],[4.165657],[-2.737300],[-8.609470],[6.428272],[-5.889102],[6.632477],[3.042566],[9.722967],[-8.750438],[7.380304],[-8.185054],[-6.912215],[-4.534024],[8.742449],[-5.641221],[2.990185],[-1.364145],[-6.440156],[-8.685928],[-4.174199],[3.241393],[-7.010283],[-2.902748],[2.553456],[-4.591781],[-6.585188],[1.998342],[6.274134],[-3.904283],[5.745175],[-6.700126],[-4.094486],[5.738997],[5.135623],[8.439883],[-6.546876],[3.168884],[6.941646],[-6.766764],[7.731115],[6.099531],[1.966722],[-7.761485],[0.018694],[-4.045904],[0.835174],[3.613654],[0.328207],[5.155447],[-3.276307],[-9.638582],[5.074394],[5.837585],[-9.802416],[5.193455],[5.286601],[7.365767],[-9.144033],[7.321529],[7.092725],[-5.320241],[3.044419],[-7.830290],[-0.350295],[0.784964],[-1.603899],[1.389233],[-8.029581],[-5.826731],[-6.640780],[-4.711147],[6.364738],[5.856183],[7.386099],[7.080088],[-5.582072],[-0.874930],[7.265450],[-3.768734],[-0.678819],[-0.559379],[-8.800906],[-6.681972],[6.791243],[9.720719],[2.868668],[6.839657],[7.521581],[-3.214551],[2.390649],[6.577009],[7.527483],[1.076827],[4.651343],[7.057354],[-2.257507],[-9.827965],[1.647170],[0.195104],[-1.706307],[6.545835],[-4.155210],[-4.948237],[2.906639],[-6.373530],[-9.404630],[-8.490899],[7.282335],[-6.245886],[6.390837],[-3.649463],[7.151681],[-4.467660],[-9.288880],[6.580322],[-0.994617],[-0.238867],[0.609704],[0.613918],[1.724233],[-3.141877],[5.592732],[9.494070],[-4.465713],[2.269641],[7.340717],[8.972775],[0.996126],[-0.161227],[2.294462],[-1.567494],[-1.865354],[-3.296185],[0.983778],[-3.540191],[-3.563599],[-3.292641],[6.605606],[-3.679530],[2.062653],[0.448999],[-7.049910],[4.072149],[8.715505],[4.192205],[-0.437380],[-6.032193],[-9.366461],[-7.876253],[-1.120127],[-7.250107],[8.208134],[4.833610],[-6.844123],[2.486908],[5.072053],[3.236281],[0.257877],[4.025340],[-7.104059],[-4.362965],[-1.162839],[0.811252],[7.659283],[-8.432234],[-5.060245],[-4.881804],[4.893624],[-2.572634],[-8.409912],[8.630687],[-4.347081],[4.193461],[-5.666510],[-6.061578],[9.873748],[2.382848],[-2.742869],[-1.974804],[-7.090381],[0.025499],[4.882728],[2.688082],[5.873655],[-2.401473],[2.639715],[-8.095088],[-7.264762],[1.062964],[-0.188467],[7.477186],[-8.815399],[-2.141095],[3.715443],[4.683070],[7.706145],[-9.786585],[-5.322148],[-6.796160],[9.144563],[5.162816],[-4.514389],[2.734939],[0.609240],[4.750705],[-1.737541],[6.459594],[8.584237],[8.051333],[-3.601042],[3.164705],[-2.259871],[-6.782901],[0.080127],[-8.685919],[-2.406290],[3.074611],[3.650052],[5.501445],[8.150597],[9.062831],[-8.367627],[0.425561],[-3.454953],[-0.474458],[0.456609],[-3.036292],[-5.500021],[-1.920373],[7.073566],[-7.163796],[8.561892],[8.265097],[-6.643234],[3.040944],[7.177524],[-8.418459],[-8.896749],[-3.958805],[-7.250900],[9.967446],[-8.263109],[3.004117],[1.834309],[-2.442604],[8.308367],[-3.809568],[-1.647063],[3.073017],[-8.941721],[-5.555830],[2.944659],[8.180220],[-8.548035],[-2.111860],[6.024178],[-2.396708],[-1.153412],[-1.643258],[-9.220726],[-3.042655],[7.219089],[-8.446500],[-4.084413],[0.130708],[-3.855684],[7.062250],[-3.939425],[1.617163],[-0.476616],[1.173487],[-5.153105],[2.460538],[-3.120955],[-2.325318],[-3.726583],[-2.273986],[5.833151],[9.402491],[-4.770632],[-8.651260],[-9.758412],[0.093758],[3.888708],[-1.248025],[-9.106940],[9.900204],[7.193014],[4.464036],[-3.406381],[-0.092706],[9.809498],[-8.914424],[4.132652],[-9.667278],[-9.744583],[3.657857],[-7.519563],[0.235933],[6.554098],[9.374958],[-7.835918],[-0.368530],[6.902872],[6.018076],[1.400093],[-6.079463],[-7.275751],[3.940882],[-7.484329],[8.139806],[8.404372],[-5.259769],[8.336895],[2.447209],[7.473492],[6.519497],[0.208681],[4.767573],[9.518871],[-2.951511],[0.950570],[4.692290],[0.029931],[2.653115],[6.766840],[7.636934],[5.976674],[-7.932867],[0.207834],[-7.489161],[6.477114],[-6.355288],[0.799779],[1.742555],[-2.909674],[-6.406281],[5.583472],[1.427475],[-5.544450],[-6.141054],[-1.920870],[-6.669993],[1.850780],[-6.799141],[-5.878935],[7.931505],[-0.690514],[-9.159811],[-9.504708],[0.854078],[7.700908],[-5.312513],[9.668027],[-2.040745],[-6.490994],[0.459952],[-2.437514],[5.170221],[1.207643],[-5.859999],[-1.566175],[6.194978],[-8.328112],[-2.089238],[6.998134],[6.752031],[7.580193],[4.857247],[-9.952598],[3.551860],[8.135620],[5.821248],[-8.324354],[7.710617],[-4.653296],[-2.198797],[-1.822602],[-8.369931],[4.290895],[8.586892],[-7.232060],[-8.124382],[-2.510068],[-8.793710],[3.575597],[6.620520],[7.324510],[-6.266587],[7.499149],[8.530137],[5.602484],[-7.121123],[8.118515],[-8.601727],[-4.718542],[4.629649],[6.405856],[-3.917670],[-3.596155],[-2.423862],[-6.891875],[-7.375853],[-9.066113],[-3.453483],[-5.009247],[5.831481],[9.909753],[6.369194],[-2.773348],[5.199559],[6.050690],[1.646375],[-3.422978],[-6.061593],[0.599569],[-3.107219],[8.597308],[9.810096],[5.021184],[8.558468],[7.565675],[-6.298642],[2.007122],[4.680971],[2.230400],[-9.558049],[2.545520],[2.062043],[5.849455],[-6.135175],[-6.467445],[9.613263],[1.681990],[7.487152],[-3.762825],[0.783374],[-9.968815],[-1.834703],[2.906374],[4.758214],[-6.252624],[-1.399200],[-9.482230],[-6.895392],[3.037938],[-7.870080],[1.476710],[0.700675],[-3.465634],[-6.625351],[-9.687446],[-9.941218],[2.982862],[-3.621019],[-8.504082],[5.297627],[2.181265],[-2.056590],[-0.213534],[9.539472],[-1.497152],[0.582836],[5.309183],[-7.166215],[-4.732491],[-3.000506],[-4.070071],[9.605025],[9.550184],[0.539220],[0.864984],[7.150768],[-0.635970],[-3.147178],[-8.021676],[-3.069826],[1.040954],[-3.619176],[9.530708],[-5.516995],[0.994308],[-1.273278],[8.191600],[8.341596],[2.616291],[-1.234489],[-7.962642],[3.107181],[-5.104585],[7.099762],[5.333687],[8.805487],[7.146713],[-3.274201],[-5.418875],[-7.693973],[4.583431],[-2.387204],[-4.523703],[-8.198518],[-4.974311],[9.785645],[-6.579435],[0.379857],[-9.614503],[5.432661],[-0.798527],[2.531433],[-0.137261],[-4.277130],[-0.492241],[1.274348],[1.996103],[6.016146],[1.654655],[1.979799],[-7.491862],[-0.866506],[5.869859],[4.719324],[-5.633619],[-1.794259],[3.217176],[9.247989],[9.365673],[6.606235],[-1.676568],[7.479562],[-4.782548],[-2.328651],[-2.282643],[3.834558],[-0.839657],[6.215841],[0.308874],[6.674887],[4.289647],[-2.201190],[5.023413],[2.484683],[-2.979486],[5.220671],[2.972862],[-5.608345],[3.875485],[7.877219],[2.071607],[-8.558660],[7.350309],[4.681532],[4.562543],[-3.488516],[-5.071044],[5.123708],[-9.152206],[-1.848055],[1.117803],[-6.025392],[3.382031],[-9.389673],[1.296761],[-5.428210],[-6.813345],[-7.899860],[0.198117],[-4.767603],[-9.863173],[9.562602],[-2.722120],[4.882176],[0.423643],[5.090721],[3.131353],[2.991049],[-7.506329],[5.763742],[-0.478497],[-1.428033],[-0.322111],[-9.380563],[7.304580],[-2.717020],[8.472672],[-0.800716],[7.974778],[3.276372],[-6.790491],[8.968763],[-7.065815],[-3.077477],[5.195837],[-2.433181],[1.053790],[-4.249809],[0.559480],[1.657442],[-5.427419],[-3.883795],[-4.091592],[2.592578],[-0.684521],[-0.235138],[7.731831],[-2.773288],[3.038106],[-9.122930],[-4.263037],[-5.559791],[-9.011857],[-1.384048],[4.598997],[-9.814129],[8.280262],[2.828957],[1.926224],[1.952567],[8.341536],[-3.449815],[-3.595440],[-7.004553],[9.186045],[-9.007774],[1.512223],[-5.583106],[1.490103],[2.054315],[-9.943697],[-5.090228],[2.730201],[4.434596],[-6.666350],[-4.180948],[2.638073],[-9.226068],[-5.555438],[8.750546],[-8.261093],[6.835091],[-3.543393],[6.027418],[-2.889485],[-0.812872],[-3.961498],[9.690846],[-5.605446],[-0.066045],[9.005393],[7.620219],[-7.422855],[-4.951754],[-8.665730],[-1.510234],[4.611031],[5.253995],[9.940096],[-6.064481],[1.859565],[5.315551],[7.927432],[1.258693],[4.214692],[9.275422],[5.300409],[1.736863],[-6.111620],[-0.460949],[2.914281],[4.669028],[-3.936875],[-3.295265],[4.206878],[-0.004015],[5.301369],[-5.104588],[-9.530584],[2.315453],[-0.800097],[-2.444439],[3.307977],[8.103501],[-1.161249],[-1.569951],[-3.612118],[-6.851297],[-3.525773],[7.260763],[9.280404],[1.948823],[4.126077],[-0.970128],[1.774858],[1.852715],[-4.421657],[4.696221],[-7.376520],[0.099368],[-8.313234],[-0.434164],[-1.437600],[-3.371145],[-7.116745],[-8.425525],[2.721775],[-0.541819],[-0.627759],[-9.855902],[-8.886652],[8.030957],[5.442955],[-8.596712],[6.760669],[-1.402561],[-8.932751],[-3.144158],[-5.898843],[4.614021],[-8.690787],[-0.864081],[6.985071],[-5.749524],[5.734916],[-4.143136],[2.148938],[-2.920796],[-2.509870],[-0.284176],[3.556952],[-0.675492],[0.653287],[-8.329137],[2.950632],[-3.865012],[8.950614],[2.699832],[-3.454234],[-6.455361],[-6.423433],[6.056979],[-8.671034],[-2.972696],[5.319130],[-4.635018],[-9.610063],[-6.713590],[-8.132639],[0.650108],[-2.861654],[4.868464],[-2.995179],[3.510755],[4.920028],[2.123860],[-5.377939],[6.294584],[-4.813931],[9.695581],[-0.611207],[-5.120233],[-8.625537],[-7.630827],[8.869241],[-2.628332],[-1.080848],[-3.966839],[-4.129862],[3.594347],[3.373069],[0.293960],[3.152202],[5.071816],[3.781967],[8.404737],[-8.012100],[-3.927973],[-2.964550],[8.341470],[-7.487708],[-1.227059],[-8.725886],[3.958401],[-9.685020],[-1.349344],[9.231104],[7.365018],[-0.957453],[6.007708],[6.604250],[0.160757],[-6.243825],[6.417838],[-1.997720],[0.129311],[-3.114422],[2.140480],[-1.835578],[-2.460969],[2.918795],[-6.100962],[-3.989025],[-3.493428],[-3.828746],[-5.856930],[-1.589117],[-5.743793],[3.602217],[-4.755928],[-1.060970],[-4.411595],[2.578063],[7.481651],[9.247092],[-3.043611],[-8.288058],[9.143956],[-6.830937],[4.617188],[1.012958],[-3.429882],[2.317883],[3.794807],[-8.806319],[3.863667],[4.541347],[-3.997404],[0.507788],[-1.809181],[5.761526],[-6.238649],[1.929336],[-6.031324],[5.405797],[1.503592],[-6.214438],[-5.898094],[-2.381089],[-6.314844],[5.596503],[9.280960],[-8.315124],[8.566791],[-8.415247],[-5.355299],[-2.323515],[0.818044],[-9.389939],[3.632346],[-5.482772],[7.172952],[0.838424],[-2.326578],[1.578656],[-3.063492],[-8.732005],[8.782310],[4.454652],[2.690352],[-1.073380],[8.791909],[-7.738989],[-8.335331],[7.149007],[-0.115215],[-9.279519],[-7.562768],[7.962456],[9.567242],[9.533364],[-4.729567],[-2.619548],[-2.516182],[-7.617325],[4.653098],[2.750858],[-5.485634],[2.452845],[6.254458],[-4.542875],[-3.364365],[0.036148],[-4.867823],[-5.272541],[8.021480],[-6.956811],[8.639389],[2.164358],[-2.626144],[7.539213],[-9.032191],[4.500521],[-9.589317],[5.721473],[8.522712],[3.301050],[0.936554],[-5.479518],[-2.582363],[6.514483],[-5.398397],[7.461905],[-7.742442],[-2.155702],[-6.889987],[-2.089905],[-7.478877],[8.172966],[0.080151],[-0.597195],[0.001915],[-7.388591],[-2.868293],[-5.621375],[3.303676],[-7.506298],[7.053288],[-3.932906],[-0.791622],[4.046078],[-4.333117],[9.148531],[0.223852],[-0.686697],[-6.565867],[0.513751],[-4.039897],[-1.459596],[-9.947427],[3.409192],[-4.976242],[0.061253],[0.248059],[-8.760685],[-4.857081],[0.827115],[4.914612],[-8.989491],[0.036789],[5.503440],[4.718320],[5.376308],[5.826605],[8.267580],[8.732672],[7.205394],[-7.174658],[2.056411],[-1.440577],[-1.874299],[5.031681],[-7.142294],[-7.324869],[8.830461],[4.985491],[4.548257],[2.081055],[-4.120716],[-7.778436],[-0.848948],[3.492068],[-5.671435],[1.993727],[3.763243],[5.391460],[-0.706668],[8.825222],[7.407331],[3.378817],[-6.452610],[-7.084207],[-3.985529],[-0.745607],[-9.862549],[-8.427212],[-6.550886],[-1.872065],[4.758031],[5.833514],[-1.212095],[-8.208505],[3.564105],[9.431149],[-8.020538],[-6.200786],[7.253892],[-2.087010],[-2.050129],[-8.794761],[-6.300300],[-2.955878],[-2.541602],[0.589639],[-6.553260],[9.407570],[3.291563],[6.858366],[7.814681],[8.385968],[-9.560823],[-7.492392],[-5.474594],[5.493175],[-9.374460],[6.270260],[-3.037658],[7.059200],[2.844951],[-6.855371],[0.014354],[-4.679247],[-3.609730],[-1.223942],[-4.538569],[6.975652],[1.758242],[-2.281993],[-4.617154],[-3.628482],[5.229248],[4.390278],[1.889102],[1.228045],[3.178926],[-6.130306],[6.289326],[2.080400],[6.764384],[8.591129],[-3.667027],[-6.618279],[3.038978],[0.857631],[-0.039122],[-1.130793],[-8.247508],[8.200389],[-3.055471],[-7.965387],[-4.850829],[5.340520],[7.158096],[1.242975],[-3.144076],[-3.609107],[3.412102],[-5.696542],[1.921739],[9.957960],[5.820115],[9.705770],[4.771862],[-4.560124],[5.334215],[-9.546906],[6.242658],[1.483659],[-8.424303],[0.811619],[-7.437173],[6.633091],[-1.965873],[-9.256373],[-9.199835],[8.053807],[5.691647],[9.242734],[5.331070],[-0.129954],[-1.390529],[7.826266],[-3.295379],[-1.789867],[7.015737],[9.080540],[5.478365],[-6.250053],[-9.304659],[1.531396],[-8.050563],[3.697624],[1.562496],[-2.290266],[-6.973826],[-5.725784],[7.114528],[-1.241615],[-1.974012],[5.218801],[0.562083],[2.879012],[6.843519],[-1.868402],[-6.885790],[-2.523092],[9.456316],[-0.285936],[-1.275558],[7.399157],[-8.242195],[7.746128],[7.052388],[5.566132],[-1.980271],[-3.724040],[-3.461814],[-5.638006],[0.763238],[0.049267],[-8.458756],[-2.642529],[2.876475],[4.021834],[7.454196],[-8.685258],[-9.900573],[-5.795895],[-8.963103],[3.350399],[-7.942980],[-6.141117],[-6.900466],[-9.504157],[1.236721],[9.242481],[-9.126722],[3.488400],[8.342428],[4.668092],[-2.679984],[-8.391609],[-5.385025],[-7.514903],[-9.598020],[6.642077],[5.309796],[6.143345],[8.169093],[4.192920],[-9.158467],[-3.655508],[-3.706388],[-6.354394],[-4.897164],[8.020101],[-3.841918],[8.233534],[-3.240650],[9.691088],[-2.949413],[4.813421],[-9.628000],[1.967292],[-0.958025],[-2.888734],[3.212538],[6.202473],[2.573883],[7.367752],[-1.356204],[-1.927086],[-0.420396],[7.931769],[9.215768],[-7.937879],[9.818227],[-4.867203],[-1.700251],[4.564160],[-7.533116],[7.345776],[5.469293],[-6.792844],[0.569145],[-7.470640],[-5.182110],[-5.751623],[9.366602],[4.170282],[-6.791728],[-2.298183],[9.577755],[3.349006],[-9.204642],[-1.147522],[-8.323007],[-3.839438],[1.507977],[-4.448857],[0.215787],[-2.506251],[0.572821],[-6.915347],[-0.923945],[-0.627482],[7.844353],[-1.757792],[9.421647],[0.102679],[9.600418],[-3.380955],[8.486939],[9.671013],[1.018466],[3.004658],[-3.069571],[-2.643822],[-3.013597],[-6.775047],[-8.607055],[9.487458],[8.322821],[-2.987624],[6.702700],[-1.624741],[-0.047520],[0.723347],[-6.641341],[-2.792785],[-6.418132],[-1.519482],[1.936034],[2.735661],[3.078636],[-9.663387],[-1.420958],[-8.300185],[2.087100],[-6.256461],[-5.737373],[7.778170],[2.180849],[-6.346646],[3.186670],[-0.281886],[6.944122],[3.506104],[5.500361],[-6.762810],[-4.534207],[8.051844],[4.111494],[3.408374],[-6.980666],[5.651713],[-8.844383],[8.836734],[9.994564],[6.610321],[-9.614852],[1.668893],[-7.949162],[-9.647434],[3.853601],[1.222969],[0.591460],[-4.044360],[-0.825321],[-8.226095],[6.227216],[2.905956],[-1.097006],[0.345292],[-7.422409],[9.790282],[-2.365010],[-9.726172],[9.002000],[9.008735],[-9.499610],[-2.429381],[2.530603],[-9.400701],[-3.570860],[-3.854345],[-9.937882],[-2.498333],[1.471143],[1.007101],[-3.636072],[-5.466966],[0.726172],[-1.038219],[-8.715766],[8.566492],[-8.205321],[-4.291476],[-6.416235],[5.781236],[2.062158],[-3.099988],[2.976280],[7.227447],[-1.256508],[-1.050192],[6.040585],[-8.974974],[-8.780981],[9.910297],[-5.796485],[1.185760],[-3.582217],[-5.029758],[-5.089563],[-7.912653],[6.943057],[3.153720],[8.051268],[8.829063],[8.634748],[-4.760510],[8.834919],[6.231502],[7.839814],[-7.404353],[6.028118],[-3.848168],[0.564648],[-9.657189],[-9.554750],[-7.391305],[4.350772],[-1.901959],[-6.553765],[9.298059],[-6.482906],[-7.475725],[-6.369842],[8.384591],[-3.050278],[6.605670],[9.301942],[4.524214],[-5.942137],[-1.667492],[-3.797287],[-4.217606],[-9.610660],[-9.029916],[5.683604],[7.631851],[-6.854013],[9.066934],[4.630360],[-6.352165],[-8.672799],[-8.975087],[-2.954251],[-6.687582],[3.249385],[3.088532],[9.451173],[-7.975152],[9.163559],[-2.162039],[-9.257181],[-5.021316],[4.725914],[3.464936],[-5.026466],[-8.505245],[0.356990],[-8.607723],[7.890966],[-3.550246],[3.803697],[-5.134569],[9.224388],[-9.508200],[-7.623927],[3.045537],[-3.257334],[7.940213],[2.404185],[0.239707],[-9.051830],[-3.843120],[-0.905210],[5.082062],[-4.932699],[-2.932794],[-9.221299],[-5.035465],[6.841291],[-2.373132],[-6.146171],[-5.026534],[4.305985],[-9.613367],[-4.773289],[-0.808969],[-4.618194],[-9.899910],[3.747095],[-0.213912],[9.290096],[2.780999],[9.461387],[-2.017792],[-0.482943],[-3.748121],[-2.756893],[-7.925697],[-9.863884],[6.473972],[-7.464332],[-5.041291],[-8.942791],[3.143561],[-8.158668],[2.311386],[-1.755135],[2.502031],[8.255903],[9.545435],[-8.345741],[-2.134249],[-6.213824],[-9.011345],[1.360604],[-6.761685],[9.627309],[-4.520588],[0.867902],[9.284708],[3.667610],[-7.450243],[8.726951],[-7.520890],[7.247167],[4.953484],[7.387303],[-6.906020],[-8.742034],[1.005788],[-9.841464],[9.056412],[-6.317531],[-4.863688],[7.335257],[8.752411],[-3.546849],[-4.562344],[-9.407345],[-0.484643],[-2.934728],[4.222870],[8.929315],[-7.377168],[5.802966],[-4.086102],[2.904475],[5.280035],[1.339670],[0.926382],[-0.693444],[-6.044476],[-1.133956],[-5.539403],[0.790229],[-5.001513],[-7.454005],[2.216666],[-2.373204],[7.104335],[6.351043],[9.699281],[1.134307],[-6.308865],[-8.882335],[7.235620],[6.877308],[-8.265328],[8.475614],[-0.587813],[5.133775],[-2.762672],[-9.073911],[-9.581017],[2.913088],[-9.178489],[5.172028],[5.135035],[5.767497],[3.090580],[-0.216532],[-6.945280],[-0.843286],[7.206110],[7.181320],[-1.312702],[8.662400],[8.946016],[5.615580],[-4.209715],[3.280574],[7.643263],[-7.467012],[-7.946375],[0.485677],[-9.646896],[-8.275718],[0.865970],[6.500152],[-6.354834],[-5.220247],[5.505176],[-9.486492],[5.383147],[-7.579741],[-9.983452],[2.595156],[-3.887096],[7.611284],[1.079543],[1.424385],[-8.136006],[-6.639726],[-8.926031],[-6.461737],[-6.431767],[-9.078487],[-8.229623],[-5.980950],[-4.493948],[2.851049],[8.641762],[-7.397639],[4.417834],[-3.784655],[-1.293057],[-1.760350],[0.355762],[-2.895808],[-0.264882],[6.967132],[3.702428],[-6.957546],[-5.685585],[-5.857360],[-3.573924],[6.502523],[-4.604756],[1.716489],[1.491667],[-8.344883],[1.210593],[-4.705518],[0.770897],[0.648732],[-8.061120],[-4.392324],[-8.057108],[1.541222],[-0.893708],[1.028311],[-4.805440],[-5.111379],[-5.026589],[-7.099602]], dtype = "float64")#candidate|9022|(2145, 1)|const|float64
const_9023 = relay.const([9,-3,-5,-9,-9,-7,3,7,5,-3,-8,10,4,-8,-2,-3,9,3,-4,-5,3,9,9,6,-7,8,-4,3,4,-4,-4,-7,-5,-9,5,4,-5,4,9,10,10,1,-6,-2,8,7,5,5,4,-8,7,7,-7,9,-4,5,-7,-8,3,-3,5,4,-4,7,4,-9,1,6,8,7,-2,-5,-9,2,-10,2,5,-5,-7,-10,-10,-4,4,1,3,5,-8,-6,3,8,5,1,8,-10,8,7,-9,-9,1,9,7,1,4,2,-7,3,2,1,-9,6,3,5,2,-6,-3,-7,9,-8,5,-2,-2,-4,10,4,-6,-9,4,10,-10,-9,9,3,-5,-1,-1,-5,-10,7,2,-1], dtype = "int32")#candidate|9023|(140,)|const|int32
call_9017 = relay.TupleGetItem(func_2683_call(relay.reshape(const_9018.astype('float32'), [7, 14, 10]), relay.reshape(var_9019.astype('float64'), [13, 6]), relay.reshape(const_9020.astype('int16'), []), relay.reshape(const_9021.astype('bool'), [120,]), relay.reshape(const_9022.astype('float64'), [2145,]), relay.reshape(const_9023.astype('int32'), [140,]), ), 1)
call_9024 = relay.TupleGetItem(func_2690_call(relay.reshape(const_9018.astype('float32'), [7, 14, 10]), relay.reshape(var_9019.astype('float64'), [13, 6]), relay.reshape(const_9020.astype('int16'), []), relay.reshape(const_9021.astype('bool'), [120,]), relay.reshape(const_9022.astype('float64'), [2145,]), relay.reshape(const_9023.astype('int32'), [140,]), ), 1)
func_7112_call = mod.get_global_var('func_7112')
func_7113_call = mutated_mod.get_global_var('func_7113')
call_9028 = relay.TupleGetItem(func_7112_call(), 0)
call_9029 = relay.TupleGetItem(func_7113_call(), 0)
func_8526_call = mod.get_global_var('func_8526')
func_8529_call = mutated_mod.get_global_var('func_8529')
call_9038 = relay.TupleGetItem(func_8526_call(relay.reshape(call_9028.astype('bool'), [15, 5, 13])), 4)
call_9039 = relay.TupleGetItem(func_8529_call(relay.reshape(call_9028.astype('bool'), [15, 5, 13])), 4)
uop_9043 = relay.acosh(const_9022.astype('float64')) # shape=(2145, 1)
func_8578_call = mod.get_global_var('func_8578')
func_8579_call = mutated_mod.get_global_var('func_8579')
call_9047 = func_8578_call()
call_9048 = func_8578_call()
output = relay.Tuple([bop_9008,call_9017,const_9018,var_9019,const_9020,const_9021,const_9023,call_9028,call_9038,uop_9043,call_9047,])
output2 = relay.Tuple([bop_9011,call_9024,const_9018,var_9019,const_9020,const_9021,const_9023,call_9029,call_9039,uop_9043,call_9048,])
func_9050 = relay.Function([var_9019,], output)
mod['func_9050'] = func_9050
mod = relay.transform.InferType()(mod)
var_9051 = relay.var("var_9051", dtype = "float64", shape = (78,))#candidate|9051|(78,)|var|float64
output = func_9050(var_9051)
func_9052 = relay.Function([var_9051], output)
mutated_mod['func_9052'] = func_9052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4759_call = mod.get_global_var('func_4759')
func_4761_call = mutated_mod.get_global_var('func_4761')
call_9099 = relay.TupleGetItem(func_4759_call(), 0)
call_9100 = relay.TupleGetItem(func_4761_call(), 0)
output = call_9099
output2 = call_9100
func_9118 = relay.Function([], output)
mod['func_9118'] = func_9118
mod = relay.transform.InferType()(mod)
mutated_mod['func_9118'] = func_9118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9118_call = mutated_mod.get_global_var('func_9118')
call_9119 = func_9118_call()
output = call_9119
func_9120 = relay.Function([], output)
mutated_mod['func_9120'] = func_9120
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9229 = relay.const([[[-6.943350,9.323691,7.191999,3.459916,9.191265,1.967764,3.407087,2.433978,-6.606451,-6.900111,7.960631,1.521552,-8.097095,5.171777,-5.834819],[-7.232793,5.731825,-5.263657,4.275040,-5.733381,2.753033,-4.583564,-7.258232,-2.179677,1.013777,7.734743,-6.488495,9.948934,-3.525250,-5.287020],[8.663234,-7.130867,-5.120439,9.242942,-1.384018,-9.093575,4.190695,-8.762028,-9.069370,9.932756,8.922732,-0.549966,5.815764,-1.471097,0.282422],[-2.283757,8.807552,8.234673,4.451806,1.982688,-9.847571,4.179083,3.671398,3.390696,9.465652,1.246063,0.883444,-2.737241,3.373626,3.665022],[0.082685,0.118890,-7.116230,-8.599420,6.304746,8.534763,8.095560,-0.266107,-0.376614,-2.817343,-0.283005,-7.547295,4.751562,-1.185868,8.961169],[6.017793,2.163025,-4.148461,5.860970,2.362859,-4.945006,0.792082,-1.010912,-9.374779,7.602781,-1.416426,6.067233,-6.125697,0.384598,1.818451],[-2.029568,8.512140,-1.390662,6.480992,-3.800333,-1.285792,6.059855,-4.103300,2.279365,-6.485161,3.299600,-1.575692,4.443150,2.306991,9.555486],[2.841408,-3.523468,0.492834,-9.891990,-5.745244,-5.761442,-9.941907,-7.367469,4.545030,9.604680,2.759954,-0.556934,8.012487,-2.226197,-1.660456],[-9.072549,1.971301,-1.891469,8.994625,7.523278,6.565151,-5.997839,7.847300,-2.435004,1.142939,-2.404782,-7.339932,-1.202259,-4.641900,-2.382455],[3.624696,-2.975151,9.484091,3.923333,-2.730520,5.705867,-4.111725,4.709415,-2.642822,-5.211925,0.219929,-3.540944,7.885618,-6.734038,0.727487],[-4.313134,8.168367,8.665739,2.727455,0.422542,3.159144,2.122561,-2.428502,7.763957,-1.479569,-2.340897,-8.807840,1.690525,-6.800654,2.429364],[3.636195,-9.103769,4.673138,3.960473,-9.329977,-2.554493,0.267613,-2.283057,-1.934694,2.133049,5.625604,-5.260054,-3.446233,-3.895090,7.605768],[7.616594,0.178635,5.643740,5.474706,-4.970305,9.857027,-4.149445,-1.818791,3.993629,-1.598023,-3.048633,-9.606335,-0.416387,-4.412120,1.618163],[-4.635119,-2.299218,-3.990164,-1.629599,5.291346,-8.583373,1.888786,7.666141,4.200892,-8.698887,7.868922,8.935652,-3.392754,6.493709,-2.150338]],[[-9.768462,2.333840,6.382265,0.737548,3.932398,-3.757783,9.080218,-7.514249,4.758390,2.049984,-1.448798,-1.765006,7.017954,4.386326,-8.519017],[7.238701,-3.111386,6.385069,3.622041,-6.793516,1.968024,-9.684111,-7.790011,-8.369633,-8.056027,-0.427889,-9.538081,-6.564662,5.630321,-1.019401],[-6.445924,-9.893084,-9.110173,-7.907294,-1.605139,7.111333,8.241122,3.469384,-0.800892,7.922618,8.120562,7.605054,2.270531,1.779968,7.631040],[-8.294030,-4.983215,6.438607,-9.240184,-2.572433,-1.932240,2.621845,5.613085,1.014641,-5.867424,-9.130096,-3.182749,3.778665,4.724246,-2.607371],[3.905249,-5.022553,-7.359748,-4.546510,3.673343,9.340719,-9.205505,9.035721,4.771251,-9.296694,-0.702202,-1.441297,-8.978909,-7.877898,-1.792725],[9.528808,8.120080,1.874295,4.259606,-3.417077,-8.539957,-9.732649,-4.311804,-8.729514,-6.183184,6.272325,8.974392,-0.886741,-9.090480,-4.130695],[8.607662,-7.747493,0.974126,-2.856335,8.706551,-3.880047,7.771016,5.628058,-4.550752,5.747886,-1.970208,4.589138,-9.286523,6.187828,-9.668405],[-3.950162,8.359246,-2.800950,-4.750378,7.300815,-1.265870,-1.525009,-3.007037,6.921958,5.344326,-5.412919,-0.420787,-1.006508,5.752497,5.472460],[8.071296,1.654141,-9.544571,7.427513,9.486879,-4.207431,-4.589528,6.330904,-6.192481,-8.146679,3.200547,4.963055,-0.507700,6.503664,-1.115680],[-1.650113,-4.740840,-9.880677,2.503666,8.413285,1.065512,-1.319786,-5.298615,-9.090760,5.241048,0.942167,7.834821,-8.520132,-8.991493,2.437070],[-9.218595,-9.281862,-8.664903,8.764146,-4.833499,-7.985925,-3.342908,-5.976393,-3.107813,-8.788112,1.056273,-6.232500,-0.544774,-4.980948,-6.571950],[3.812838,0.730546,5.489342,3.453877,-3.590850,-4.696619,9.492588,7.063100,5.435227,-8.317567,2.755913,2.606044,2.744454,-0.853972,-0.897141],[0.384887,1.436276,6.184976,-8.410144,9.391693,9.114143,3.840155,9.176661,-8.765635,-5.402586,-6.281609,-4.258162,-1.646190,8.158321,6.676611],[4.103891,-1.941463,-8.540777,-7.547368,-4.978048,1.864321,0.703362,-3.758436,9.154684,2.228881,4.624934,-9.689339,-1.325142,3.416313,7.522396]],[[8.363825,-7.912784,-5.455194,-4.322861,1.324770,-8.440636,-4.658315,-9.093988,-5.894281,7.975451,3.388221,0.027842,-4.558250,-7.627756,-4.641235],[-8.860652,9.579154,1.416136,5.884730,-8.426902,-3.934551,2.003989,-9.922762,9.237436,-3.257923,-6.837487,9.821547,0.384387,6.530780,-4.751944],[4.740693,-4.680863,4.950551,-4.535843,0.509953,7.131015,-1.516031,-3.967821,-3.085748,5.288355,-6.568063,8.788205,-0.120838,6.529911,-5.397295],[6.075582,-5.969960,-9.930577,6.423568,4.682412,9.727670,-8.779296,5.221573,-3.434766,-9.343723,-0.435231,-1.801038,-1.507679,-4.970995,-4.510310],[6.484327,1.989815,9.281703,7.822048,-0.973257,9.429256,-6.101022,8.584819,-8.920173,6.812061,-2.798669,1.502100,4.842834,6.651115,1.564688],[0.154331,7.029221,3.858271,-6.864624,0.319275,7.960422,4.864612,-6.274272,3.034143,-3.481672,5.155480,8.769552,2.112577,-8.362024,-4.644810],[6.921170,8.777345,-1.503984,8.610833,6.886734,-2.147192,-8.320025,-0.114183,-0.143155,0.732804,4.439610,8.343472,-1.192752,7.405098,6.463531],[-6.427561,4.288417,3.774150,-8.693841,5.706308,7.365964,-5.585743,4.374027,-7.990574,9.058766,-1.305253,-0.080893,6.680826,3.486515,-6.541494],[-1.744082,1.468819,-0.016159,-6.406941,8.044735,-4.657586,4.281706,-2.859568,-0.864984,-6.288790,7.922695,-4.035870,3.747926,-1.771352,-0.347775],[3.795453,5.592063,5.487803,-5.320387,5.708360,3.609672,-6.562355,-3.829369,0.504595,-5.886363,-3.177491,-1.012983,2.076563,-9.023636,-3.784883],[-5.967886,-9.990830,-5.575416,0.654446,6.540568,4.115769,6.456597,0.068269,-9.075766,-0.111840,-7.684878,-3.404407,0.238078,-5.885323,8.869696],[-2.364301,7.619206,-0.954694,-0.360411,-2.264522,-1.025082,-9.220098,9.241652,1.446459,-8.078012,-1.318619,6.984379,-9.945740,6.587646,-7.960127],[5.180799,-9.932507,6.270499,1.989173,5.770447,0.689575,5.806324,1.349817,2.107289,-0.154187,-2.220380,0.275791,-6.832569,-0.505964,-5.118767],[-4.166294,4.425930,-2.668500,9.853073,2.363962,9.634538,-7.091240,-2.588833,-3.725586,0.740886,-8.203565,9.068894,5.828319,6.618831,8.738310]],[[-6.760210,6.915810,6.957027,7.490105,5.044835,8.411243,1.652076,5.868091,9.843972,-3.528455,9.234236,-5.263646,-8.350299,-9.250101,9.272070],[9.988888,4.690630,8.514080,6.505167,-5.225232,3.764552,5.923374,7.431468,5.185423,-8.550346,3.246855,-2.327606,9.124241,2.923936,-2.914774],[7.317484,3.930330,-8.500439,1.644688,7.965221,2.194400,9.344974,1.336787,3.528763,5.861867,-5.944095,1.264375,-3.172154,9.539139,-6.810792],[-9.570516,-1.568003,0.108971,6.815657,-0.757767,-2.684530,1.349209,-6.504083,-6.358503,7.787223,-8.352872,3.428836,-8.486297,-8.472059,5.862719],[1.465818,-9.633371,2.056785,3.127627,1.497743,8.422421,0.484434,3.415783,-1.091500,2.502680,-2.463156,8.616704,-2.777297,6.105367,-7.543392],[7.529650,5.410757,3.103090,2.175045,4.794325,-3.201605,-0.214561,7.472607,5.869477,-9.446998,-1.457788,-8.011851,-4.761741,6.014604,7.619260],[-2.272445,-0.331876,1.273614,9.496167,-8.745542,9.715513,0.233395,-2.586931,1.343754,-0.250631,-9.362660,-2.859900,6.989553,9.652635,9.306370],[-0.379208,-0.970329,4.795283,-9.333827,-1.364496,2.495788,5.549565,-2.040837,3.470057,2.169625,3.643540,-7.852125,2.567391,-8.940454,5.932201],[3.949929,8.454806,-8.688042,5.301692,8.718337,9.830324,8.016745,-7.442660,-7.284589,-5.704082,0.978690,9.178409,7.711497,0.074453,-3.938430],[7.620966,-3.187754,1.023827,6.094511,5.293314,-1.506070,7.243282,6.157929,2.300503,-6.437228,-6.664037,6.143934,2.529677,-0.849681,-7.030140],[6.639716,-5.848756,4.417106,-1.599546,9.656568,5.463146,-4.045664,9.964338,-6.301734,9.079762,-9.887795,9.783957,-5.983872,4.654371,7.580015],[6.269465,4.076720,1.831794,9.039667,-3.561099,7.863687,-6.485268,-3.570758,-5.574514,8.253212,0.824025,8.339891,1.097826,-6.867639,-4.739766],[8.528915,-5.326162,9.471052,3.571121,-6.770224,1.695555,2.288413,0.054742,-9.412980,5.247096,-8.318716,9.654248,1.150762,5.829917,5.890665],[6.164160,8.383796,-5.306599,4.348075,4.881833,4.691407,-3.167883,-2.333685,-2.924445,4.964934,-9.413171,5.732610,1.217200,5.963665,-7.991631]]], dtype = "float32")#candidate|9229|(4, 14, 15)|const|float32
uop_9230 = relay.log10(const_9229.astype('float32')) # shape=(4, 14, 15)
func_6398_call = mod.get_global_var('func_6398')
func_6399_call = mutated_mod.get_global_var('func_6399')
call_9237 = func_6398_call()
call_9238 = func_6398_call()
uop_9241 = relay.acosh(uop_9230.astype('float32')) # shape=(4, 14, 15)
output = relay.Tuple([call_9237,uop_9241,])
output2 = relay.Tuple([call_9238,uop_9241,])
func_9243 = relay.Function([], output)
mod['func_9243'] = func_9243
mod = relay.transform.InferType()(mod)
mutated_mod['func_9243'] = func_9243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9243_call = mutated_mod.get_global_var('func_9243')
call_9244 = func_9243_call()
output = call_9244
func_9245 = relay.Function([], output)
mutated_mod['func_9245'] = func_9245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8786_call = mod.get_global_var('func_8786')
func_8787_call = mutated_mod.get_global_var('func_8787')
call_9318 = func_8786_call()
call_9319 = func_8786_call()
uop_9320 = relay.sin(call_9318.astype('float32')) # shape=(11, 15, 13)
uop_9322 = relay.sin(call_9319.astype('float32')) # shape=(11, 15, 13)
func_7890_call = mod.get_global_var('func_7890')
func_7892_call = mutated_mod.get_global_var('func_7892')
call_9323 = func_7890_call()
call_9324 = func_7890_call()
output = relay.Tuple([uop_9320,call_9323,])
output2 = relay.Tuple([uop_9322,call_9324,])
func_9340 = relay.Function([], output)
mod['func_9340'] = func_9340
mod = relay.transform.InferType()(mod)
mutated_mod['func_9340'] = func_9340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9340_call = mutated_mod.get_global_var('func_9340')
call_9341 = func_9340_call()
output = call_9341
func_9342 = relay.Function([], output)
mutated_mod['func_9342'] = func_9342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_9345 = relay.TupleGetItem(func_3652_call(), 0)
call_9346 = relay.TupleGetItem(func_3653_call(), 0)
output = relay.Tuple([call_9345,])
output2 = relay.Tuple([call_9346,])
func_9367 = relay.Function([], output)
mod['func_9367'] = func_9367
mod = relay.transform.InferType()(mod)
mutated_mod['func_9367'] = func_9367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9367_call = mutated_mod.get_global_var('func_9367')
call_9368 = func_9367_call()
output = call_9368
func_9369 = relay.Function([], output)
mutated_mod['func_9369'] = func_9369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4486_call = mod.get_global_var('func_4486')
func_4487_call = mutated_mod.get_global_var('func_4487')
call_9438 = relay.TupleGetItem(func_4486_call(), 0)
call_9439 = relay.TupleGetItem(func_4487_call(), 0)
var_9462 = relay.var("var_9462", dtype = "bool", shape = (6, 20))#candidate|9462|(6, 20)|var|bool
bop_9463 = relay.bitwise_and(call_9438.astype('int8'), relay.reshape(var_9462.astype('int8'), relay.shape_of(call_9438))) # shape=(6, 20)
bop_9466 = relay.bitwise_and(call_9439.astype('int8'), relay.reshape(var_9462.astype('int8'), relay.shape_of(call_9439))) # shape=(6, 20)
output = bop_9463
output2 = bop_9466
func_9477 = relay.Function([var_9462,], output)
mod['func_9477'] = func_9477
mod = relay.transform.InferType()(mod)
mutated_mod['func_9477'] = func_9477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9478 = relay.var("var_9478", dtype = "bool", shape = (6, 20))#candidate|9478|(6, 20)|var|bool
func_9477_call = mutated_mod.get_global_var('func_9477')
call_9479 = func_9477_call(var_9478)
output = call_9479
func_9480 = relay.Function([var_9478], output)
mutated_mod['func_9480'] = func_9480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8034_call = mod.get_global_var('func_8034')
func_8036_call = mutated_mod.get_global_var('func_8036')
call_9490 = func_8034_call()
call_9491 = func_8034_call()
output = relay.Tuple([call_9490,])
output2 = relay.Tuple([call_9491,])
func_9492 = relay.Function([], output)
mod['func_9492'] = func_9492
mod = relay.transform.InferType()(mod)
mutated_mod['func_9492'] = func_9492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9492_call = mutated_mod.get_global_var('func_9492')
call_9493 = func_9492_call()
output = call_9493
func_9494 = relay.Function([], output)
mutated_mod['func_9494'] = func_9494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7502_call = mod.get_global_var('func_7502')
func_7503_call = mutated_mod.get_global_var('func_7503')
call_9495 = relay.TupleGetItem(func_7502_call(), 0)
call_9496 = relay.TupleGetItem(func_7503_call(), 0)
func_6816_call = mod.get_global_var('func_6816')
func_6818_call = mutated_mod.get_global_var('func_6818')
call_9497 = func_6816_call()
call_9498 = func_6816_call()
var_9512 = relay.var("var_9512", dtype = "uint64", shape = (1456,))#candidate|9512|(1456,)|var|uint64
bop_9513 = relay.less_equal(call_9497.astype('bool'), relay.reshape(var_9512.astype('bool'), relay.shape_of(call_9497))) # shape=(1456,)
bop_9516 = relay.less_equal(call_9498.astype('bool'), relay.reshape(var_9512.astype('bool'), relay.shape_of(call_9498))) # shape=(1456,)
func_4334_call = mod.get_global_var('func_4334')
func_4335_call = mutated_mod.get_global_var('func_4335')
call_9517 = relay.TupleGetItem(func_4334_call(), 0)
call_9518 = relay.TupleGetItem(func_4335_call(), 0)
output = relay.Tuple([call_9495,bop_9513,call_9517,])
output2 = relay.Tuple([call_9496,bop_9516,call_9518,])
func_9529 = relay.Function([var_9512,], output)
mod['func_9529'] = func_9529
mod = relay.transform.InferType()(mod)
var_9530 = relay.var("var_9530", dtype = "uint64", shape = (1456,))#candidate|9530|(1456,)|var|uint64
output = func_9529(var_9530)
func_9531 = relay.Function([var_9530], output)
mutated_mod['func_9531'] = func_9531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7795_call = mod.get_global_var('func_7795')
func_7797_call = mutated_mod.get_global_var('func_7797')
call_9623 = func_7795_call()
call_9624 = func_7795_call()
output = call_9623
output2 = call_9624
func_9631 = relay.Function([], output)
mod['func_9631'] = func_9631
mod = relay.transform.InferType()(mod)
mutated_mod['func_9631'] = func_9631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9631_call = mutated_mod.get_global_var('func_9631')
call_9632 = func_9631_call()
output = call_9632
func_9633 = relay.Function([], output)
mutated_mod['func_9633'] = func_9633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6077_call = mod.get_global_var('func_6077')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_9639 = func_6077_call()
call_9640 = func_6077_call()
func_7488_call = mod.get_global_var('func_7488')
func_7489_call = mutated_mod.get_global_var('func_7489')
call_9657 = relay.TupleGetItem(func_7488_call(), 0)
call_9658 = relay.TupleGetItem(func_7489_call(), 0)
func_8786_call = mod.get_global_var('func_8786')
func_8787_call = mutated_mod.get_global_var('func_8787')
call_9672 = func_8786_call()
call_9673 = func_8786_call()
output = relay.Tuple([call_9639,call_9657,call_9672,])
output2 = relay.Tuple([call_9640,call_9658,call_9673,])
func_9683 = relay.Function([], output)
mod['func_9683'] = func_9683
mod = relay.transform.InferType()(mod)
mutated_mod['func_9683'] = func_9683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9683_call = mutated_mod.get_global_var('func_9683')
call_9684 = func_9683_call()
output = call_9684
func_9685 = relay.Function([], output)
mutated_mod['func_9685'] = func_9685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7195_call = mod.get_global_var('func_7195')
func_7197_call = mutated_mod.get_global_var('func_7197')
call_9691 = relay.TupleGetItem(func_7195_call(), 1)
call_9692 = relay.TupleGetItem(func_7197_call(), 1)
func_6733_call = mod.get_global_var('func_6733')
func_6734_call = mutated_mod.get_global_var('func_6734')
call_9698 = func_6733_call()
call_9699 = func_6733_call()
output = relay.Tuple([call_9691,call_9698,])
output2 = relay.Tuple([call_9692,call_9699,])
func_9702 = relay.Function([], output)
mod['func_9702'] = func_9702
mod = relay.transform.InferType()(mod)
output = func_9702()
func_9703 = relay.Function([], output)
mutated_mod['func_9703'] = func_9703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6443_call = mod.get_global_var('func_6443')
func_6445_call = mutated_mod.get_global_var('func_6445')
call_9723 = relay.TupleGetItem(func_6443_call(), 0)
call_9724 = relay.TupleGetItem(func_6445_call(), 0)
func_858_call = mod.get_global_var('func_858')
func_861_call = mutated_mod.get_global_var('func_861')
var_9730 = relay.var("var_9730", dtype = "float64", shape = (2145,))#candidate|9730|(2145,)|var|float64
call_9729 = relay.TupleGetItem(func_858_call(relay.reshape(var_9730.astype('float64'), [11, 13, 15])), 0)
call_9731 = relay.TupleGetItem(func_861_call(relay.reshape(var_9730.astype('float64'), [11, 13, 15])), 0)
func_6928_call = mod.get_global_var('func_6928')
func_6929_call = mutated_mod.get_global_var('func_6929')
call_9742 = relay.TupleGetItem(func_6928_call(), 0)
call_9743 = relay.TupleGetItem(func_6929_call(), 0)
output = relay.Tuple([call_9723,call_9729,var_9730,call_9742,])
output2 = relay.Tuple([call_9724,call_9731,var_9730,call_9743,])
func_9744 = relay.Function([var_9730,], output)
mod['func_9744'] = func_9744
mod = relay.transform.InferType()(mod)
mutated_mod['func_9744'] = func_9744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9745 = relay.var("var_9745", dtype = "float64", shape = (2145,))#candidate|9745|(2145,)|var|float64
func_9744_call = mutated_mod.get_global_var('func_9744')
call_9746 = func_9744_call(var_9745)
output = call_9746
func_9747 = relay.Function([var_9745], output)
mutated_mod['func_9747'] = func_9747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4669_call = mod.get_global_var('func_4669')
func_4670_call = mutated_mod.get_global_var('func_4670')
call_9751 = func_4669_call()
call_9752 = func_4669_call()
func_858_call = mod.get_global_var('func_858')
func_861_call = mutated_mod.get_global_var('func_861')
call_9753 = relay.TupleGetItem(func_858_call(relay.reshape(call_9751.astype('float64'), [11, 13, 15])), 2)
call_9754 = relay.TupleGetItem(func_861_call(relay.reshape(call_9751.astype('float64'), [11, 13, 15])), 2)
uop_9756 = relay.log2(call_9751.astype('float64')) # shape=(11, 15, 13)
uop_9758 = relay.log2(call_9752.astype('float64')) # shape=(11, 15, 13)
output = relay.Tuple([call_9753,uop_9756,])
output2 = relay.Tuple([call_9754,uop_9758,])
func_9767 = relay.Function([], output)
mod['func_9767'] = func_9767
mod = relay.transform.InferType()(mod)
output = func_9767()
func_9768 = relay.Function([], output)
mutated_mod['func_9768'] = func_9768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9896 = relay.var("var_9896", dtype = "float64", shape = (8, 14, 8))#candidate|9896|(8, 14, 8)|var|float64
uop_9897 = relay.asin(var_9896.astype('float64')) # shape=(8, 14, 8)
uop_9922 = relay.cosh(uop_9897.astype('float64')) # shape=(8, 14, 8)
output = uop_9922
output2 = uop_9922
func_9941 = relay.Function([var_9896,], output)
mod['func_9941'] = func_9941
mod = relay.transform.InferType()(mod)
mutated_mod['func_9941'] = func_9941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9942 = relay.var("var_9942", dtype = "float64", shape = (8, 14, 8))#candidate|9942|(8, 14, 8)|var|float64
func_9941_call = mutated_mod.get_global_var('func_9941')
call_9943 = func_9941_call(var_9942)
output = call_9943
func_9944 = relay.Function([var_9942], output)
mutated_mod['func_9944'] = func_9944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8136_call = mod.get_global_var('func_8136')
func_8138_call = mutated_mod.get_global_var('func_8138')
call_9957 = relay.TupleGetItem(func_8136_call(), 0)
call_9958 = relay.TupleGetItem(func_8138_call(), 0)
func_5434_call = mod.get_global_var('func_5434')
func_5435_call = mutated_mod.get_global_var('func_5435')
call_10002 = relay.TupleGetItem(func_5434_call(), 0)
call_10003 = relay.TupleGetItem(func_5435_call(), 0)
func_7225_call = mod.get_global_var('func_7225')
func_7227_call = mutated_mod.get_global_var('func_7227')
const_10011 = relay.const(6, dtype = "uint32")#candidate|10011|()|const|uint32
call_10010 = relay.TupleGetItem(func_7225_call(relay.reshape(const_10011.astype('uint32'), [])), 1)
call_10012 = relay.TupleGetItem(func_7227_call(relay.reshape(const_10011.astype('uint32'), [])), 1)
output = relay.Tuple([call_9957,call_10002,call_10010,const_10011,])
output2 = relay.Tuple([call_9958,call_10003,call_10012,const_10011,])
func_10016 = relay.Function([], output)
mod['func_10016'] = func_10016
mod = relay.transform.InferType()(mod)
output = func_10016()
func_10017 = relay.Function([], output)
mutated_mod['func_10017'] = func_10017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5701_call = mod.get_global_var('func_5701')
func_5702_call = mutated_mod.get_global_var('func_5702')
call_10025 = relay.TupleGetItem(func_5701_call(), 0)
call_10026 = relay.TupleGetItem(func_5702_call(), 0)
func_6045_call = mod.get_global_var('func_6045')
func_6047_call = mutated_mod.get_global_var('func_6047')
call_10033 = func_6045_call()
call_10034 = func_6045_call()
func_5994_call = mod.get_global_var('func_5994')
func_5999_call = mutated_mod.get_global_var('func_5999')
const_10053 = relay.const(-8, dtype = "uint32")#candidate|10053|()|const|uint32
var_10054 = relay.var("var_10054", dtype = "uint32", shape = (390, 1))#candidate|10054|(390, 1)|var|uint32
var_10055 = relay.var("var_10055", dtype = "float64", shape = (360, 1))#candidate|10055|(360, 1)|var|float64
call_10052 = relay.TupleGetItem(func_5994_call(relay.reshape(const_10053.astype('uint32'), []), relay.reshape(var_10054.astype('uint32'), [390,]), relay.reshape(var_10055.astype('float64'), [360,]), ), 2)
call_10056 = relay.TupleGetItem(func_5999_call(relay.reshape(const_10053.astype('uint32'), []), relay.reshape(var_10054.astype('uint32'), [390,]), relay.reshape(var_10055.astype('float64'), [360,]), ), 2)
uop_10077 = relay.cos(var_10055.astype('float32')) # shape=(360, 1)
func_7351_call = mod.get_global_var('func_7351')
func_7353_call = mutated_mod.get_global_var('func_7353')
call_10091 = relay.TupleGetItem(func_7351_call(), 1)
call_10092 = relay.TupleGetItem(func_7353_call(), 1)
func_8861_call = mod.get_global_var('func_8861')
func_8863_call = mutated_mod.get_global_var('func_8863')
call_10096 = func_8861_call()
call_10097 = func_8861_call()
output = relay.Tuple([call_10025,call_10033,call_10052,const_10053,var_10054,uop_10077,call_10091,call_10096,])
output2 = relay.Tuple([call_10026,call_10034,call_10056,const_10053,var_10054,uop_10077,call_10092,call_10097,])
func_10106 = relay.Function([var_10054,var_10055,], output)
mod['func_10106'] = func_10106
mod = relay.transform.InferType()(mod)
var_10107 = relay.var("var_10107", dtype = "uint32", shape = (390, 1))#candidate|10107|(390, 1)|var|uint32
var_10108 = relay.var("var_10108", dtype = "float64", shape = (360, 1))#candidate|10108|(360, 1)|var|float64
output = func_10106(var_10107,var_10108,)
func_10109 = relay.Function([var_10107,var_10108,], output)
mutated_mod['func_10109'] = func_10109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9340_call = mod.get_global_var('func_9340')
func_9342_call = mutated_mod.get_global_var('func_9342')
call_10118 = relay.TupleGetItem(func_9340_call(), 1)
call_10119 = relay.TupleGetItem(func_9342_call(), 1)
uop_10147 = relay.asinh(call_10118.astype('float64')) # shape=(11, 15, 13)
uop_10149 = relay.asinh(call_10119.astype('float64')) # shape=(11, 15, 13)
func_9477_call = mod.get_global_var('func_9477')
func_9480_call = mutated_mod.get_global_var('func_9480')
const_10154 = relay.const([[False,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,True],[False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,True],[True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False],[True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False],[False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,True,True],[True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False]], dtype = "bool")#candidate|10154|(6, 20)|const|bool
call_10153 = func_9477_call(relay.reshape(const_10154.astype('bool'), [6, 20]))
call_10155 = func_9477_call(relay.reshape(const_10154.astype('bool'), [6, 20]))
output = relay.Tuple([uop_10147,call_10153,const_10154,])
output2 = relay.Tuple([uop_10149,call_10155,const_10154,])
func_10170 = relay.Function([], output)
mod['func_10170'] = func_10170
mod = relay.transform.InferType()(mod)
output = func_10170()
func_10171 = relay.Function([], output)
mutated_mod['func_10171'] = func_10171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6359_call = mod.get_global_var('func_6359')
func_6361_call = mutated_mod.get_global_var('func_6361')
call_10228 = relay.TupleGetItem(func_6359_call(), 0)
call_10229 = relay.TupleGetItem(func_6361_call(), 0)
func_8526_call = mod.get_global_var('func_8526')
func_8529_call = mutated_mod.get_global_var('func_8529')
var_10231 = relay.var("var_10231", dtype = "bool", shape = (975,))#candidate|10231|(975,)|var|bool
call_10230 = relay.TupleGetItem(func_8526_call(relay.reshape(var_10231.astype('bool'), [15, 5, 13])), 1)
call_10232 = relay.TupleGetItem(func_8529_call(relay.reshape(var_10231.astype('bool'), [15, 5, 13])), 1)
output = relay.Tuple([call_10228,call_10230,var_10231,])
output2 = relay.Tuple([call_10229,call_10232,var_10231,])
func_10237 = relay.Function([var_10231,], output)
mod['func_10237'] = func_10237
mod = relay.transform.InferType()(mod)
var_10238 = relay.var("var_10238", dtype = "bool", shape = (975,))#candidate|10238|(975,)|var|bool
output = func_10237(var_10238)
func_10239 = relay.Function([var_10238], output)
mutated_mod['func_10239'] = func_10239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9243_call = mod.get_global_var('func_9243')
func_9245_call = mutated_mod.get_global_var('func_9245')
call_10261 = relay.TupleGetItem(func_9243_call(), 1)
call_10262 = relay.TupleGetItem(func_9245_call(), 1)
output = call_10261
output2 = call_10262
func_10271 = relay.Function([], output)
mod['func_10271'] = func_10271
mod = relay.transform.InferType()(mod)
mutated_mod['func_10271'] = func_10271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10271_call = mutated_mod.get_global_var('func_10271')
call_10272 = func_10271_call()
output = call_10272
func_10273 = relay.Function([], output)
mutated_mod['func_10273'] = func_10273
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10288 = relay.var("var_10288", dtype = "float32", shape = (14, 15, 8))#candidate|10288|(14, 15, 8)|var|float32
uop_10289 = relay.log(var_10288.astype('float32')) # shape=(14, 15, 8)
output = uop_10289
output2 = uop_10289
func_10296 = relay.Function([var_10288,], output)
mod['func_10296'] = func_10296
mod = relay.transform.InferType()(mod)
mutated_mod['func_10296'] = func_10296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10297 = relay.var("var_10297", dtype = "float32", shape = (14, 15, 8))#candidate|10297|(14, 15, 8)|var|float32
func_10296_call = mutated_mod.get_global_var('func_10296')
call_10298 = func_10296_call(var_10297)
output = call_10298
func_10299 = relay.Function([var_10297], output)
mutated_mod['func_10299'] = func_10299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7112_call = mod.get_global_var('func_7112')
func_7113_call = mutated_mod.get_global_var('func_7113')
call_10359 = relay.TupleGetItem(func_7112_call(), 0)
call_10360 = relay.TupleGetItem(func_7113_call(), 0)
uop_10370 = relay.rsqrt(call_10359.astype('float32')) # shape=(15, 5, 13)
uop_10372 = relay.rsqrt(call_10360.astype('float32')) # shape=(15, 5, 13)
func_3209_call = mod.get_global_var('func_3209')
func_3212_call = mutated_mod.get_global_var('func_3212')
var_10376 = relay.var("var_10376", dtype = "float32", shape = (110, 10))#candidate|10376|(110, 10)|var|float32
call_10375 = relay.TupleGetItem(func_3209_call(relay.reshape(var_10376.astype('float32'), [11, 10, 10]), relay.reshape(var_10376.astype('float32'), [11, 10, 10]), ), 0)
call_10377 = relay.TupleGetItem(func_3212_call(relay.reshape(var_10376.astype('float32'), [11, 10, 10]), relay.reshape(var_10376.astype('float32'), [11, 10, 10]), ), 0)
var_10380 = relay.var("var_10380", dtype = "bool", shape = (15, 5, 13))#candidate|10380|(15, 5, 13)|var|bool
bop_10381 = relay.bitwise_xor(call_10359.astype('uint64'), relay.reshape(var_10380.astype('uint64'), relay.shape_of(call_10359))) # shape=(15, 5, 13)
bop_10384 = relay.bitwise_xor(call_10360.astype('uint64'), relay.reshape(var_10380.astype('uint64'), relay.shape_of(call_10360))) # shape=(15, 5, 13)
output = relay.Tuple([uop_10370,call_10375,var_10376,bop_10381,])
output2 = relay.Tuple([uop_10372,call_10377,var_10376,bop_10384,])
func_10393 = relay.Function([var_10376,var_10380,], output)
mod['func_10393'] = func_10393
mod = relay.transform.InferType()(mod)
mutated_mod['func_10393'] = func_10393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10393_call = mutated_mod.get_global_var('func_10393')
var_10395 = relay.var("var_10395", dtype = "float32", shape = (110, 10))#candidate|10395|(110, 10)|var|float32
var_10396 = relay.var("var_10396", dtype = "bool", shape = (15, 5, 13))#candidate|10396|(15, 5, 13)|var|bool
call_10394 = func_10393_call(var_10395,var_10396,)
output = call_10394
func_10397 = relay.Function([var_10395,var_10396,], output)
mutated_mod['func_10397'] = func_10397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7016_call = mod.get_global_var('func_7016')
func_7017_call = mutated_mod.get_global_var('func_7017')
call_10411 = func_7016_call()
call_10412 = func_7016_call()
func_9492_call = mod.get_global_var('func_9492')
func_9494_call = mutated_mod.get_global_var('func_9494')
call_10413 = relay.TupleGetItem(func_9492_call(), 0)
call_10414 = relay.TupleGetItem(func_9494_call(), 0)
func_7890_call = mod.get_global_var('func_7890')
func_7892_call = mutated_mod.get_global_var('func_7892')
call_10436 = func_7890_call()
call_10437 = func_7890_call()
bop_10443 = relay.subtract(call_10411.astype('float32'), relay.reshape(call_10413.astype('float32'), relay.shape_of(call_10411))) # shape=(15, 5, 13)
bop_10446 = relay.subtract(call_10412.astype('float32'), relay.reshape(call_10414.astype('float32'), relay.shape_of(call_10412))) # shape=(15, 5, 13)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_10452 = relay.TupleGetItem(func_3532_call(), 1)
call_10453 = relay.TupleGetItem(func_3533_call(), 1)
output = relay.Tuple([call_10436,bop_10443,call_10452,])
output2 = relay.Tuple([call_10437,bop_10446,call_10453,])
func_10458 = relay.Function([], output)
mod['func_10458'] = func_10458
mod = relay.transform.InferType()(mod)
output = func_10458()
func_10459 = relay.Function([], output)
mutated_mod['func_10459'] = func_10459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7318_call = mod.get_global_var('func_7318')
func_7319_call = mutated_mod.get_global_var('func_7319')
call_10471 = relay.TupleGetItem(func_7318_call(), 0)
call_10472 = relay.TupleGetItem(func_7319_call(), 0)
func_7976_call = mod.get_global_var('func_7976')
func_7981_call = mutated_mod.get_global_var('func_7981')
const_10476 = relay.const([-0.824761,-6.215659,2.442409,-6.762716,-6.188944,-7.100419,-7.108404,0.947141,-4.276225,3.229476,-4.196959,-5.371334,-6.184564,-3.936934,6.089096,6.166927,8.455662,5.126636,7.080825,-4.640265,8.230004,6.484938], dtype = "float64")#candidate|10476|(22,)|const|float64
const_10477 = relay.const([-5.745309,6.989965,-5.379363,-4.176972,-4.477725,-1.725827,-8.275882,9.247226,3.605406,-4.531453,8.978639,-7.805569,0.654096,-4.797402,-9.261340,-8.264636,-7.432105,6.422878,3.488796,8.441016,6.626493,4.507590,8.508930,8.155658,-9.600337,-2.426477,-7.769861,-9.645879,-9.767959,-3.159285,1.659723,-3.384399,-1.483114,-7.556123,9.288114,9.068330,-5.710910,-4.919911,-7.887855,-5.811577,8.712979,-8.306590,-5.090735,2.388092,8.620510,6.138988,-0.645953,-4.503570,-3.205819,0.022281,4.986567,-4.646574,9.221040,3.099319,-5.031373,-1.564752,-0.792744,8.846737,0.330928,-0.340349,-6.177194,-3.609106,5.486174,9.364566,5.820252,2.824263,3.795455,-9.546206,-8.372741,-3.047587,-2.083430,-1.324466,4.057429,4.209162,-2.281005,3.228647,3.407440,8.378038,3.139119,-7.188929,3.192697,0.097028,6.124672,-1.309980,8.897917,-6.301381,0.048718,6.102999,-8.625269,-4.478345,-5.813713,2.666874,8.334806,-7.009115,3.697156,7.490327,-9.498884,-6.044731,7.370811,6.739580,5.970935,-5.834243,-7.127351,-9.280814,-0.669358,4.333030,-3.820787,-5.691260,9.791216,-0.538950,-8.806277,-2.244263,-1.110426,-9.004744,4.445034,9.064014,-5.819436,7.913339,5.038977,5.786295,-5.683533,-3.084228,-7.465646,-3.513498,0.248268,-1.393200,5.925183,-1.792317,0.747756,9.682298,-0.303348,-8.230623,-2.013303,2.113138,9.943149,4.400518,9.061762,-9.220644,-9.520586,7.043413,-8.829024,5.152557,-1.361047,8.642470,0.054975,-8.399519,4.707882,-3.245717,8.946036,6.027652,-5.074792,-9.090017,-0.934719,4.126517,-9.294430,-8.743067,1.577837,-4.403549,4.703459,0.844311,-7.798955,-7.396806,-8.499470,7.273897,-5.543850,-4.891537,3.123507,-4.286341,-8.252694,-2.831307,7.768291,9.964550,7.083893,-6.583182,6.101690,6.079626,-3.145119,-8.369828,-0.147888,-1.107932,-2.458316,5.215988,5.258911,-4.399862,-1.987017,-7.785066,8.582676,-8.355603,6.371716,-5.141996,-7.241227,-0.817936,2.688101,-2.539225,-3.228666,1.015120,3.581514,-6.752358,-3.963769,-7.723391,-0.838309,-8.778568,-5.947030,-3.522500,-1.674689,6.395583,-0.394188,7.895607,-5.439296,9.262138,-9.435542,2.995996,4.781731,-2.252595,-8.402887,-9.110024,-2.113812,8.841492,8.472170,-6.904401,-4.526587,5.206360,-4.054845,-6.330342,-7.504661,9.288679,-3.217655,-1.713429,5.985644,-6.713546,-4.328144,-2.361510,8.491911,3.107814,1.092593,-0.048403,9.512558,-5.336247,-2.252447,-8.693094,-0.585893,8.878971,2.595205,-3.133123,2.116889,-0.123485,-5.342394,-4.287573,-4.714862,-9.016233,0.292752,6.559137,-4.413751,-1.924860,8.332303,0.701013,9.787135,-3.238531,0.539139,7.851872,9.197581,-6.023638,-9.901510,-0.080126,-2.294405,-0.673673,8.487707,1.214046,7.947263,1.669701,-9.623606,-6.371041,7.908398,-4.249340,0.340250,9.171003,-9.463974,-9.473002,-3.192261,2.277874,-2.967460,1.692020,-9.476248,6.273057,-1.785134,-1.746354,-5.618196,-9.595212,8.547151,-8.495284,-9.172221,-1.204405,8.277840,7.155327,0.985966,-9.943977,-0.008831,8.985768,-6.207058,-6.893378,4.251009,-2.469015,0.442740,-8.671875,1.978261,-6.094789,-5.781189,-1.904624,2.554229,-9.808547,2.220938,-7.020946,-0.223796,-5.806501,0.687453,6.650520,3.572109,-5.941853,8.378487,6.352741,9.912757,-9.785063,-7.195921,3.040391,2.950068,-2.585141,-1.288416,-7.861820,9.395342,-5.465251,-4.774886,8.919283,3.509143,-2.653320,-5.871404,5.751387,7.221109,-2.174231,8.288835,-0.959331,3.478065,7.829266,0.577072,-9.724830,-7.646314,9.674005,-0.113024,-8.283633,-1.874298,-2.528200,-5.091229,-1.384582,-9.493543,-6.572107,-2.619244,-5.638703,4.295876,-9.365707,5.725990,9.980258,7.120890,-6.810249,-5.944838,2.700648,-2.107555,8.484253,7.531630,-7.621938,-6.604866,2.019127,9.843634,-9.732107,4.108880,-5.415069,7.565118,-7.753591,-2.100738,7.423571,0.916903,-4.144161,-5.033000,3.916127,2.151243,1.398614,-2.121197,2.477029,-7.628407,-2.147364,-0.028531,6.142518,9.087612,-7.548196,-4.650228,-3.864810,-2.029475,4.994516,-8.018059,-9.227447,7.710969,-4.576169,9.218160,1.788226,5.575902,8.683917,-1.366233,-8.285900,2.924812,-7.289102,-0.430950,4.746728,8.397002,0.885870,6.750009,5.655766,-2.613516,-4.933721,9.088252,1.110187,-1.704004,-8.018450,4.542453,-4.624682,4.325646,3.244456,1.468184,-1.500308,4.788415,-5.894049,-3.498733,8.292287,4.500576,-6.915678,-1.052208,-7.119881,-1.378004,9.387196,0.720037,-9.364114,-4.457224,-7.036132,0.931418,-7.536092,-8.733200,3.592824,0.747155,2.983021,5.872304,6.778505,-6.944019,-4.307602,5.209286,-3.723430,0.266489,3.585142,-5.881855,0.942708,0.748955,9.915684,-4.892335,-8.435768,7.131141,2.060278,6.139113,-5.682204,-2.385073,-5.943324,9.396611,-3.022626,-2.464343,-3.183286,5.710045,-0.663748,-5.603932,-5.011148,-8.505923,-4.604752,0.543534,-3.329524,-1.830259,-5.061603,6.361711,-9.237579,9.040248,8.113405,0.120950,4.046461,3.981624,5.933721,8.471956,7.527261,-9.034451,5.714449,5.019080,-1.540910,8.946817,-1.895452,0.152528,8.469603,5.460396,-1.007837,-8.769152,8.688970,4.599482,0.957117,-9.396185,5.710693,-7.580019,-5.632236,-3.718192,-9.657523,0.867221,2.908854,5.900957,-6.711438,9.895668,3.461043,-2.899469,-9.042534,6.223793,-9.644480,-9.052560,-1.398459,-3.435538,-4.305886,3.646388,-4.242052,5.796481,-9.833916,-6.635647,1.260233,2.893667,-6.678197,9.627268,-0.115819,-4.668671,-5.229233,-2.113059,-4.609351,-8.043861,6.251403,0.658091,-0.108189,4.847319,0.844335,7.320244,-0.774006,-9.797883,-7.528126,6.459402,-9.489468,5.031281,-0.479523,-4.263577,6.921694,9.745871,-6.951295,-0.378570,8.351404,9.185171,-3.326566,7.801501,-9.201870,7.275659,3.696918,2.654023,-9.787095,-5.287621,-5.424585,5.501354,1.835437,-7.447744,0.467228,3.210536,5.292186,-8.669842,9.777904,-2.738490,1.731939,6.640084,-5.260733,-2.149787,5.178722,1.672153,3.374543,9.548252,6.666857,5.154053,1.316788,8.207775,6.007088,-2.320986,3.427996,-8.167863,-0.060392,9.979185,-1.732064,2.510380,-1.152095,9.950430,-4.593991,8.569048,8.277043,-2.000975,1.740621,8.397240,6.863761,1.522739,-3.350001,6.319393,9.049401,2.082348,1.933176,-2.425752,6.133729,6.004203,-8.106417,4.993511,0.165854,-6.972282,4.179837,-5.151009,7.489719,7.378120,6.166625,-0.758151,6.353846,0.209383,2.507415,-7.587588,2.160141,-7.538544,-9.924042,8.724098,5.889895,-9.271998,7.296897,-0.583448,0.600380,-7.685904,-5.348770,4.038934,-2.167214,-6.581820,-4.940326,-8.008745,0.593574,-9.930173,-9.076028,4.793079,7.698179,-8.174288,-5.529612,-3.983690,-9.812349,1.920877,7.512677,-3.613004,8.336466,2.895310,-9.397288,5.454160,-5.187179,7.757268,-9.892171,2.396428,2.271843,-6.821379,-4.149011,6.907819,-6.294824,3.331370,6.599799,3.947954,3.256729,6.536618,2.671680,3.091034,-0.338163,-9.201304,1.815576,-1.950891,-9.382225,5.654710,8.311569,4.155519,9.372914,-3.936518,7.942413,5.553521,-1.351720,-9.326041,9.644841,-9.205897,-3.045230,-4.106305,-6.882746,-7.828844,-9.706950,0.594184,-9.832051,1.634244,2.701043,8.931418,2.867630,6.176051,5.904115,2.164548,3.675878,-6.671488,4.319071,-8.041884,5.147405,-5.296163,-2.755859,-6.119591,-2.508461,-0.999030,1.780645,-4.005223,-3.403354,-5.533952,6.912607,-4.699155,9.242473,8.712592,-4.114114,-4.510988,-2.818609,9.450189,-5.493109,-3.347155,2.166743,2.335355,-4.718441,7.531359,5.856603,-6.963608,-0.214773,-1.827135,6.834258,-4.947554,3.881662,8.740093,8.199317,-9.654061,-6.620669,-5.132806,1.319455,-3.817898,-4.922009,-6.358724,-4.398515,-3.716850,3.722189,-9.205915,-0.286816,-4.082822,-9.058679,-9.931641,-5.435114,2.994048,2.458715,-2.579768,8.055300,-3.139117,8.668355,-9.913971,2.666626,-3.104658,5.932217,9.569541,1.647767,2.644262,7.841740,3.031921,-0.348570,6.871235,-7.043486,-6.476787,-6.789003,5.930563,3.866735,6.916603,1.355615,2.066690,7.270887,-3.205153,6.579695,-2.384064,1.772371,-9.501618,-1.786832,2.875207,-7.835513,9.108993,-2.309571,-7.028649,-6.007512,-3.282477,2.283705,-5.180057,-6.399170,7.870148,-5.479999,6.526063,3.468621,7.899381,5.971857,-8.457780,-6.005753,-0.905743,6.496111,-4.399168,2.143475,3.660467,-1.416712,3.330767,-1.387433,-2.703231,-5.466286,5.506032,-2.764167,2.975888,3.508235,6.319279,9.257604,4.902191,-6.356622,-3.927879,-8.938941,-0.214450,5.313596,-8.249991,-2.596458,-0.022756,-5.779623,-6.431264,-7.315311,-1.503193,5.588605,8.158018,2.426563,5.488780,-7.540870,5.007200,8.185927,-8.020485,9.938663,7.610179,6.419821,-5.846677,8.231026,-1.949245,4.128423,4.832020,-5.600271,0.981537,5.539595,9.129120,7.001994,9.206615,-3.929125,2.255038,-4.411823,7.348197,7.320426,2.062016,-8.737880,-7.672071,-7.950580,3.400407,8.895265,-0.604648,0.247634,-4.420191,8.090465,-0.508834,2.737940,2.483134,-7.394895,-8.767249,5.995343,-6.303000,8.162231,4.704291,-0.307234,0.657555,6.904837,8.516304,4.028895,4.932056,5.507461,8.983464,-7.718645,-2.242838,0.541803,-4.808854,-8.186855,3.759203,2.926669,7.329990,2.901041,1.964773,-8.147213,9.902808,4.487468,-1.327918,-8.557565,2.623588,2.729767,9.801380,-2.754743,2.931103,-1.059760,6.821831,2.451259,-5.157727,4.137778,3.194690,-5.935739,1.172032,-8.090423,-7.509123,7.159163,2.600558,2.157607,-3.508775,-2.886840,-9.738194,-7.091802,-2.645690,-7.709172,-5.014775,5.197177,3.541379,-7.190861,0.718233,4.137304,-8.821537,5.998863,2.823198,-3.322514,8.320941,1.721663,-4.273175,7.727628,8.361697,3.257307,3.523360,1.425880,-7.919535,1.181405,-6.867655,4.561914,-8.789958,-7.975535,6.195160,5.674360,6.754229,-3.772024,-9.933828,2.541070,4.997880,3.504664,6.275289,0.095031,-3.346541,2.801512,2.341000,2.561293,0.463923,6.330867,6.814815,8.281917,1.264864,-0.580287,5.138610,5.724146,-4.081193,0.769084,-3.370760,1.139489,-7.415590,3.281911,9.668462,1.665877,8.511212,8.152962,2.613279,7.449669,-6.766403,-6.178849,9.246887,-3.546458,-6.608815,6.220187,-7.103549,6.833270,0.565735,2.268477,-8.610462,-9.348056,0.421878,-1.733146,-3.636842,-7.032403,2.032850,4.466803,-1.810558,-2.465747,5.342332,0.069623,-6.642786,-2.892448,-9.119138,-2.683361,-5.590863,-6.503506,-8.101168,-5.801858,-5.249864,2.643267,8.125299,0.957789,-7.700794,-0.192816,4.627961,4.203797,4.166517,-2.018386,9.318016,-1.371941,7.598326,-6.165449,7.592722,-5.528488,0.488504,3.865642,-5.018119,-4.504426,-2.620647,1.437064,0.652102,9.629589,-7.249615,-4.789973,-2.354778,-1.584696,6.369446,4.144254,6.194294,-5.477454,5.004310,-4.124320,-8.846218,-3.733603,4.675960,6.135796,-9.018476,0.068411,-1.457118,7.888695,-2.356690,-4.700489,-4.278496,-4.713759,8.860354,-0.900225,-0.568773,2.333928,3.815791,8.746360,2.446697,2.225976,6.574131,-8.121672,-3.921338,-3.971449,9.663988,-9.530046,-4.914469,-4.597543,-8.006485,-0.008029,9.232648,6.196391,8.560936,2.873531,9.514928,3.716064,-3.197358,-2.478459,2.365219,0.243018,2.059076,-4.483162,4.930083,-5.394106,2.112192,-1.876457,-6.239948,7.461319,4.607096,-2.570459,-5.851388,3.397281,9.196533,7.333567,1.536966,-7.848981,1.203534,-5.256718,3.395665,-4.673597,-6.190036,7.365297,-6.156241,-0.012591,1.079635,2.401098,-2.250215,-0.297715,-2.660216,-8.556899,9.605267,4.848602,2.566033,9.999045,-4.519549,5.673414,-6.656477,9.510148,-3.009532,-2.077768,-6.033512,9.352331,0.927914,-4.067850,9.315718,5.971816,8.997522,7.802508,-2.780928,6.236083,-0.023694,3.426180,3.363076,-4.932771,7.802346,-2.766876,-0.415413,-8.559509,6.937874,6.713242,-1.570033,7.593468,7.950622,-0.721513,7.546214,-0.682693,7.852185,4.525588,-9.691466,-2.948262,-3.059495,2.526306,-5.790702,-1.922476,2.816369,-8.043427,-7.429018,5.526707,8.173748,-2.271521,-3.295894,-6.738371,-9.012891,-1.845377,2.021721,-0.809230,1.288211,-0.479452,-2.749978,-2.082245,2.264297,5.296157,-7.349457,7.364256,-1.607589,7.741746,0.086037,-6.068098,5.950690,-0.004610,1.184756,-6.994511,2.646962,-0.107308,-5.732790,2.669693,-1.026065,1.566383,8.611119,-4.380424,-8.559935,-7.748796,9.762323,-4.473092,-6.542405,-1.227238,9.852169,-5.727313,7.423810,-0.702920,1.856613,8.076402,-7.559053,8.669724,-1.510991,-6.823289,0.403413,-6.187362,7.922105,1.251765,9.163719,-3.052996,-9.956065,3.704696,4.162511,8.856428,1.042468,-7.115912,-3.743299,-2.386934,4.615971,5.718629,8.783692,-4.154691,-3.877726,-8.141472,3.946424,8.606266,-8.922591,0.668040,-3.391416,-7.606806,-2.932637,-3.289262,-4.270926,7.526145,7.196872,-2.752682,-5.703969,9.184111,-1.012227,-5.234453,-4.513245,-8.817377,6.627509,4.469012,-2.453231,6.642864,-1.254259,2.377367,-9.313441,1.860522,-8.211290,4.161554,-1.653047,6.685427,-8.361159,-6.791239,7.440485,9.975900,-7.845791,7.364834,3.833810,7.948017,-3.464767,-0.684963,0.693650,-8.221077,-8.119109,-0.072949,-3.038604,2.051448,-9.927253,-8.769218,-7.924432,-8.334699,-8.547859,-4.028475,-4.986026,0.051799,-9.560388,-2.660206,2.469844,1.157002,-3.302301,-4.679772,-9.780890,5.650457,5.805738,-0.531948,-4.244094,2.071859,-0.166237,-8.696995,3.041769,0.969617,4.432169,-3.268474,-8.728145,-9.974049,3.848205,-6.755155,6.632579,-1.599672,6.724251,-4.036845,1.887143,-8.249573,3.877690,0.194913,-2.340025,1.359089,-2.547632,0.927049,5.846793,0.783498,-2.536834,-8.182086,9.099797,6.772882,-9.355276,-4.164344,4.222317,8.028221,1.812730,1.877174,-0.847805,-9.069212,-0.198038,7.028923,9.598502,7.514429,-9.883987,7.392011,-9.200771,-9.868634,7.034416,8.775571,6.992744,3.183163,3.533935,2.976075,1.959198,-4.154710,2.477531,-7.453274,-5.915157,-3.300273,3.908281,-4.128694,-0.092575,-4.323280,-4.961479,-5.095210,7.019083,-8.337709,2.837409,-8.546981,6.520272,-1.359202,-0.144126,-5.594479,-0.249390,-7.311930,-3.974853,-9.817258,6.234354,-3.742728,-1.699481,-9.129776,2.541824,-8.881510], dtype = "float32")#candidate|10477|(1386,)|const|float32
var_10478 = relay.var("var_10478", dtype = "int32", shape = (140,))#candidate|10478|(140,)|var|int32
call_10475 = relay.TupleGetItem(func_7976_call(relay.reshape(const_10476.astype('float64'), [11, 2, 1]), relay.reshape(const_10477.astype('float32'), [1386,]), relay.reshape(var_10478.astype('int32'), [140,]), ), 1)
call_10479 = relay.TupleGetItem(func_7981_call(relay.reshape(const_10476.astype('float64'), [11, 2, 1]), relay.reshape(const_10477.astype('float32'), [1386,]), relay.reshape(var_10478.astype('int32'), [140,]), ), 1)
output = relay.Tuple([call_10471,call_10475,const_10476,const_10477,var_10478,])
output2 = relay.Tuple([call_10472,call_10479,const_10476,const_10477,var_10478,])
func_10491 = relay.Function([var_10478,], output)
mod['func_10491'] = func_10491
mod = relay.transform.InferType()(mod)
mutated_mod['func_10491'] = func_10491
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10492 = relay.var("var_10492", dtype = "int32", shape = (140,))#candidate|10492|(140,)|var|int32
func_10491_call = mutated_mod.get_global_var('func_10491')
call_10493 = func_10491_call(var_10492)
output = call_10493
func_10494 = relay.Function([var_10492], output)
mutated_mod['func_10494'] = func_10494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7112_call = mod.get_global_var('func_7112')
func_7113_call = mutated_mod.get_global_var('func_7113')
call_10517 = relay.TupleGetItem(func_7112_call(), 0)
call_10518 = relay.TupleGetItem(func_7113_call(), 0)
func_1786_call = mod.get_global_var('func_1786')
func_1789_call = mutated_mod.get_global_var('func_1789')
var_10531 = relay.var("var_10531", dtype = "int32", shape = (140,))#candidate|10531|(140,)|var|int32
call_10530 = relay.TupleGetItem(func_1786_call(relay.reshape(var_10531.astype('int32'), [4, 7, 5]), relay.reshape(var_10531.astype('int32'), [4, 7, 5]), ), 0)
call_10532 = relay.TupleGetItem(func_1789_call(relay.reshape(var_10531.astype('int32'), [4, 7, 5]), relay.reshape(var_10531.astype('int32'), [4, 7, 5]), ), 0)
output = relay.Tuple([call_10517,call_10530,var_10531,])
output2 = relay.Tuple([call_10518,call_10532,var_10531,])
func_10533 = relay.Function([var_10531,], output)
mod['func_10533'] = func_10533
mod = relay.transform.InferType()(mod)
mutated_mod['func_10533'] = func_10533
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10534 = relay.var("var_10534", dtype = "int32", shape = (140,))#candidate|10534|(140,)|var|int32
func_10533_call = mutated_mod.get_global_var('func_10533')
call_10535 = func_10533_call(var_10534)
output = call_10535
func_10536 = relay.Function([var_10534], output)
mutated_mod['func_10536'] = func_10536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4486_call = mod.get_global_var('func_4486')
func_4487_call = mutated_mod.get_global_var('func_4487')
call_10538 = relay.TupleGetItem(func_4486_call(), 0)
call_10539 = relay.TupleGetItem(func_4487_call(), 0)
output = call_10538
output2 = call_10539
func_10542 = relay.Function([], output)
mod['func_10542'] = func_10542
mod = relay.transform.InferType()(mod)
mutated_mod['func_10542'] = func_10542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10542_call = mutated_mod.get_global_var('func_10542')
call_10543 = func_10542_call()
output = call_10543
func_10544 = relay.Function([], output)
mutated_mod['func_10544'] = func_10544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3769_call = mod.get_global_var('func_3769')
func_3771_call = mutated_mod.get_global_var('func_3771')
call_10601 = relay.TupleGetItem(func_3769_call(), 1)
call_10602 = relay.TupleGetItem(func_3771_call(), 1)
func_7318_call = mod.get_global_var('func_7318')
func_7319_call = mutated_mod.get_global_var('func_7319')
call_10614 = relay.TupleGetItem(func_7318_call(), 0)
call_10615 = relay.TupleGetItem(func_7319_call(), 0)
output = relay.Tuple([call_10601,call_10614,])
output2 = relay.Tuple([call_10602,call_10615,])
func_10619 = relay.Function([], output)
mod['func_10619'] = func_10619
mod = relay.transform.InferType()(mod)
mutated_mod['func_10619'] = func_10619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10619_call = mutated_mod.get_global_var('func_10619')
call_10620 = func_10619_call()
output = call_10620
func_10621 = relay.Function([], output)
mutated_mod['func_10621'] = func_10621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10619_call = mod.get_global_var('func_10619')
func_10621_call = mutated_mod.get_global_var('func_10621')
call_10745 = relay.TupleGetItem(func_10619_call(), 1)
call_10746 = relay.TupleGetItem(func_10621_call(), 1)
func_3209_call = mod.get_global_var('func_3209')
func_3212_call = mutated_mod.get_global_var('func_3212')
const_10753 = relay.const([[-7.442483,5.516573,5.311362,-8.667592,9.904769,2.014049,-6.942249,4.952774,-9.298643,8.203783,6.063508,8.791851,5.124154,7.546214,-5.014490,-5.579960,-0.513364,-1.792803,-3.590181,-3.727569,0.715891,4.360630,-1.920499,-6.830776,-3.967452,-9.772097,3.169597,-8.265631,-5.625299,-5.364608,-2.775464,1.200727,-9.842884,-7.852231,-0.419413,5.528936,5.615629,-9.707897,1.474249,-7.709568,-6.804156,9.745716,-9.775589,-3.008162,0.717044,9.939833,7.203487,-7.819884,1.120832,6.675322,-3.133918,1.263236,7.696086,9.113233,0.742849,-5.012776,-3.322340,1.033558,7.957139,8.344404,1.905368,6.850849,-1.747304,-7.491476,-1.279561,9.385612,-6.708627,-4.474401,-9.878830,-1.434879,-6.709072,4.318425,-1.140726,1.535509,-6.991021,-3.554489,-6.323380,1.060639,-6.677812,-3.421301,4.592389,3.534414,-4.742451,9.254478,5.939752,-7.924647,-7.344294,-8.723252,1.135541,-5.903191,-8.205815,9.101554,-3.353066,4.428508,-4.637887,-5.088000,-0.520464,-3.108133,3.311734,1.600983,8.324205,-3.156292,-1.843900,9.448640,4.548414,5.346643,-2.091156,-5.205718,2.544966,7.722636,0.414164,0.017893,9.656548,-2.848301,2.144148,3.970681,-9.806457,-3.342461,-8.046370,-2.286079,-7.571042,-5.761315,-8.875916,0.452442,-7.023911,7.636805,-1.359901,4.247900,-2.901353,9.279447,-3.637985,0.695129,-4.274338,4.613895,8.582403,-3.215784,7.283441,-0.265918,1.251648,-3.815486,7.651239,1.441781,-6.307076,0.011965,2.212177,8.373693,-7.179211,-7.354801,-4.820733,4.173755,7.170946,8.584213,-5.673247,-5.098130,-3.216761,-9.273575,-7.832537,0.111199,-1.263509,-1.265036,9.392525,6.913108,-2.436451,9.252444,0.799288,-1.246724,-0.261110,-3.970706,2.284050,7.353621,8.756635,3.370779,9.045720,-7.881372,-1.132954,9.258859,-7.725177,0.412096,-7.730455,-2.655125,9.875119,-6.254020,-6.406044,8.696785,8.382425,2.582003,-2.595880,9.999123,-6.284453,6.196661,-1.249145,-3.498423,-3.760967,9.668889,-4.371932,-4.816831,-1.232773,-7.285553,8.879561,-1.370955,-9.196763,9.621367,5.303060,-5.469130,0.811172,-5.662776,8.568209,-2.625753,-8.315669,-7.409639,9.661743,-2.290405,-4.240228,9.816237,-9.156426,-9.438828,3.971897,0.478708,-6.421569,-3.526185,-7.089309,2.548494,-5.808532,0.538112,8.400512,3.063307,-9.243598,-7.992493,-9.381789,3.371194,-2.902712,9.889457,2.109267,-3.293623,0.422074,5.103442,2.879564,8.530360,2.370990,-9.888580,-2.210148,6.233016,7.599793,3.477476,7.523208,0.839913,1.217735,-7.251832,3.515047,-8.008505,3.163920,-5.865647,5.933308,-3.142236,-8.624855,5.073440,5.769436,-1.767530,9.408128,-8.016878,-5.695058,-9.172906,6.165950,-1.296379,3.480065,6.275875,2.409541,8.219844,6.888720,1.711964,-0.647639,-2.965064,1.588180,-5.556018,1.989958,-1.574174,-6.001205,5.479232,0.775287,7.945109,-4.929605,7.389235,-8.599594,-3.436472,7.587781,-3.654340,0.587810,0.021234,2.008435,1.440389,-9.215038,-5.678928,-3.018084,-7.330569,6.837900,-8.964120,-1.227418,0.229944,-9.589751,-4.817868,3.011515,0.386442,-1.764955,-2.451090,-5.588441,-4.934100,7.774675,-1.866634,-0.867956,0.308498,-0.369484,2.587371,0.867779,0.392786,8.429539,6.737420,-5.821297,1.249008,8.269117,-8.952645,1.928470,0.993034,1.568203,-8.015070,-6.902463,-3.637630,4.070667,-5.606771,-1.627258,-0.805811,2.061176,4.905145,-4.850390,-4.839437,-2.878328,6.835998,9.509750,-3.108428,-2.917689,-0.464266,-0.078927,0.933898,6.962224,-6.470987,-3.998564,0.153222,5.698819,6.242706,1.831142,8.766248,7.414629,6.123136,5.599157,0.854392,-1.456328,9.720578,-8.414543,-8.451625,-3.877504,-2.661890,2.828722,-4.339234,-5.213686,-1.190247,-4.037558,2.623076,-7.173569,-5.560832,-9.873801,-6.035918,-9.829909,8.520036,-5.519987,-0.197545,-6.224191,3.422352,-1.494760,-9.301104,-6.473100,-5.154162,1.520649,-4.195180,-2.317720,4.779956,-5.531528,6.694360,8.611783,-4.249796,-1.228672,-0.255150,5.739613,-6.127809,-6.714775,-5.451389,1.018451,5.837874,-3.641895,-7.537495,-2.735491,4.344803,0.369095,4.134457,8.131972,1.660083,-4.496894,-2.641236,9.427382,3.311500,-1.513358,-2.610345,-6.278127,-0.931793,6.872619,4.687396,-7.474686,3.787272,4.292952,8.156344,-2.323609,-0.848122,-9.163560,-0.485358,8.921801,3.090723,4.275163,5.337370,7.920413,-9.178137,2.444339,7.933672,-6.973972,3.632406,3.033343,-7.181632,8.068283,9.729299,4.491064,-8.487161,0.224052,-5.189232,9.883291,4.079036,4.344290,-5.435444,2.510936,7.784064,-7.901352,-8.930612,0.129904,0.565465,1.556449,-2.842324,-6.819570,-4.190735,4.219472,-3.102580,-4.803419,7.876902,5.032392,-0.349805,1.521800,-5.331907,6.978890,-5.590053,8.050399,3.877707,-8.774907,6.692147,-7.643019,-9.523388,1.741790,5.480567,-4.209969,3.583292,-9.258133,2.649454,7.734144,2.954064,-4.135272,3.746497,4.789799,-7.895120,3.827669,-4.748806,1.673038,3.489243,3.062197,0.478266,3.311918,4.216934,-3.669802,-7.940878,-6.493721,-5.838201,8.414169,-4.192369,6.006461,-2.534951,-8.297819,-0.137112,9.336098,-0.862386,-1.794241,4.284981,4.402114,4.965596,8.310335,6.368304,2.073849,-3.080200,-0.253960,4.046775,0.109858,-4.625981,-8.213681,-7.745455,-7.364479,-2.309132,-2.960461,-1.344607,-2.843706,1.285299,1.968140,9.895677,1.510415,8.359362,-5.341285,3.346840,-0.077065,-2.823522,-9.972295,1.821931,8.220859,-6.790697,8.409605,3.426738,-3.966470,3.410020,-7.896771,1.912789,-8.323432,5.471771,4.340613,-2.384599,-7.240842,3.072126,1.386513,7.765307,-0.564422,-8.149840,-0.720491,-9.988697,3.590634,1.400389,-6.405100,7.189207,1.896556,-7.904907,9.175677,3.566103,8.106413,-7.314053,6.953488,1.054753,4.015190,8.082465,-9.912523,0.697753,5.726439,5.918758,4.923887,-6.934634,0.466550,8.855154,0.404170,-3.766701,0.556916,-6.469103,-4.007425,6.518315,5.014778,0.011055,-9.087658,9.097813,2.024021,3.085187,8.717201,-2.012330,-5.853993,3.216952,-3.628887,-9.437919,6.101371,-8.067597,8.312072,6.715239,-2.591623,-5.941092,6.708630,-2.017250,-1.954486,1.102738,3.293818,-3.453479,-6.369452,5.564071,9.412695,-0.410795,-1.407356,-4.536819,-5.259499,9.849136,-0.787127,1.496705,3.370292,8.782217,-6.303042,-9.537804,-1.110354,1.271013,-4.230038,1.799270,9.319944,-0.493138,-4.578077,4.561846,0.699220,8.373727,-2.402797,9.518033,-9.656089,8.799772,-3.614521,-3.196403,-1.867872,2.165935,-0.279866,-9.559127,-6.700169,-6.796411,4.697332,-9.085591,-6.841649,-3.185090,-3.312605,-4.945709,-3.852862,1.516532,0.556975,7.218659,-9.736751,9.048010,3.374701,-0.541222,-9.433671,-0.493300,-9.582648,-9.313129,-5.112214,9.104744,9.295769,1.586996,6.527565,-3.678585,-3.041633,-0.475662,-6.558079,-6.623922,2.972793,3.605956,5.637466,8.761061,-6.747705,-9.164563,-1.599499,-3.034635,9.430467,-4.996715,-3.613420,-2.243695,-0.526212,0.271032,-0.044491,6.066154,-0.538317,1.150573,-4.310507,8.179189,0.771498,-9.527084,9.584096,3.308108,-9.452910,6.594390,-5.197084,-2.779828,-2.943187,9.024924,6.446859,-1.381475,6.018415,7.481700,-4.998286,1.894587,-8.306823,-2.484332,-5.058916,-4.638831,4.357836,1.489939,2.151893,-8.146475,-9.922438,-4.696947,-0.993019,8.497169,7.280024,-7.670078,-7.812081,0.780389,8.941227,-7.577796,4.561573,-9.615979,9.473909,-7.938102,9.229222,-1.841575,-9.820523,4.893442,-9.026556,-2.270429,2.300063,2.486493,-2.101937,-8.061799,-0.676374,1.887258,-0.345012,-9.903254,-8.154358,-1.962004,-7.586870,2.596785,-0.055510,9.885088,8.033757,-8.468817,-0.149509,-3.609896,-8.301492,-5.180635,-7.216907,-0.982364,-4.432798,-7.803763,5.181142,-9.877928,9.862766,-3.287855,8.114593,-1.334654,6.670844,7.275672,8.393646,5.075792,7.745589,-5.668533,7.280647,-2.921877,-1.204387,-7.176926,0.651742,8.388348,-8.279150,-3.579549,2.245477,1.579255,2.145770,8.592632,-1.557149,-9.469858,-1.380787,8.307013,0.283533,8.967319,-5.889237,3.847241,0.971404,4.043933,-8.086627,4.862878,-3.300080,5.875376,1.270509,-2.453246,3.506161,1.612490,-6.522943,4.032223,-2.834105,8.353249,0.037576,2.971430,5.462359,-3.524777,-2.081910,2.108641,-5.684331,6.269022,1.299145,-9.115805,-6.834542,5.468765,-0.729144,0.043285,7.937749,-0.961473,5.713797,2.984956,-1.103390,1.979921,3.851069,1.099569,0.786679,-5.786285,8.826184,7.454106,-7.345751,-1.558902,8.275621,-4.708099,-2.435430,2.221220,-9.803070,-4.670596,5.553159,5.198015,-6.595895,-8.431886,3.071151,7.256453,7.038131,6.779085,4.596818,4.641847,1.578651,3.658887,-4.516384,2.903064,-6.531522,6.497145,8.265984,-7.247326,2.632662,7.199383,5.383045,6.055322,6.543581,3.545942,-1.729665,-4.656514,-2.406265,4.422618,-9.339416,9.755108,-9.337770,-1.333812,6.403640,-8.525519,-2.659681,-3.927190,-7.360082,-2.514042,-3.009318,-2.407152,-4.131641,-2.794076,-5.344561,7.952160,-2.831410,5.662397,2.869805,3.891636,0.774582,-2.329155,6.169039,0.987243,-1.600823,-9.890942,3.916440,-8.719285,3.801974,-9.323627,-0.108193,-6.906076,-9.419658,-3.058651,-1.214524,3.781477,6.394719,4.878345,-4.679755,-3.229674,-7.859245,3.800607,0.101930,-4.382259,-0.858248,-4.765305,-0.673785,6.409918,9.341301,1.240408,9.872366,2.897271,-3.902948,-7.370260,4.041017,8.118228,1.277786,-4.616707,-8.749732,5.586497,7.648046,-3.181513,-3.475649,2.247277,3.789878,2.187780,8.789397,5.478140,7.447223,-5.062179,-8.325382,1.436992,-2.048390,-7.064207,-9.440612,6.642540,0.282640,1.483261,7.036089,8.833691,1.730053,-4.995369,6.225233,-4.968765,2.468075,-7.101677,6.183524,6.844911,7.867931,-5.490148,1.104925,3.046019,0.223976,-9.384596,3.094295,3.861417,1.764009,9.358258,7.532736,9.135953,-5.513620,-7.026058,0.513755,5.145834,5.066355,-6.048538,2.235971,-0.701414,4.832365,-4.156505,-9.141867,4.655961,7.886520,2.612863,2.679492,2.756167,-0.982223,8.738839,6.579987,-1.278097,-6.842759,7.256361,-9.706828,4.527045,-6.183068,2.437430,2.322148,-8.227392,2.678471,-4.040675,9.143153,2.004451,1.602452,4.111155,2.537056,-6.547099,5.251905,-5.698701,2.367225,9.793913,3.170830,-9.303379,6.267175,5.434451,-7.407671,6.330398,9.903563,8.889880,4.364291,3.448225,-2.197876,5.532794,9.591796,-1.601044,9.625407,-7.999229,-1.752105,1.371209,-8.352373,-4.798365,-4.581056,-0.601781,-9.701705,2.351090,-5.349338,0.352289,-5.211190,-5.542712,-1.983844,-5.387161,-4.814257,-9.696728,2.253453,1.619268,-3.763967,3.351437,7.398018,-7.171957,4.853862,-8.155410,-4.599917,8.182187,-9.167271,-5.846525,-7.739472,-4.425265,1.917685,5.661663,-3.363005,-8.268280,-6.504043,-0.978625,6.857782,-7.096502,-7.972631,7.531014,-5.500791,6.363119,-4.380646,5.732956,-7.882331,-9.721363,-3.505123,-8.970181,-2.780011,0.713718,-3.180137,-4.727902,-8.284546,7.665672,9.048248,7.722578,9.409690,-0.714479,-5.772767,-1.247806,8.986983,-6.125419,-4.744501,8.866531,-1.694246,8.881203,-6.096356,-8.677957,-7.009442,5.751142,-8.793775,4.354696,2.476133,-2.087038,1.610531,-0.946566,2.136866,-8.678733,5.076261,-3.983857]], dtype = "float32")#candidate|10753|(1, 1100)|const|float32
call_10752 = relay.TupleGetItem(func_3209_call(relay.reshape(const_10753.astype('float32'), [11, 10, 10]), relay.reshape(const_10753.astype('float32'), [11, 10, 10]), ), 0)
call_10754 = relay.TupleGetItem(func_3212_call(relay.reshape(const_10753.astype('float32'), [11, 10, 10]), relay.reshape(const_10753.astype('float32'), [11, 10, 10]), ), 0)
bop_10759 = relay.greater_equal(call_10752.astype('bool'), relay.reshape(const_10753.astype('bool'), relay.shape_of(call_10752))) # shape=(11, 10, 10)
bop_10762 = relay.greater_equal(call_10754.astype('bool'), relay.reshape(const_10753.astype('bool'), relay.shape_of(call_10754))) # shape=(11, 10, 10)
output = relay.Tuple([call_10745,bop_10759,])
output2 = relay.Tuple([call_10746,bop_10762,])
func_10763 = relay.Function([], output)
mod['func_10763'] = func_10763
mod = relay.transform.InferType()(mod)
output = func_10763()
func_10764 = relay.Function([], output)
mutated_mod['func_10764'] = func_10764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8861_call = mod.get_global_var('func_8861')
func_8863_call = mutated_mod.get_global_var('func_8863')
call_10846 = func_8861_call()
call_10847 = func_8861_call()
uop_10885 = relay.tan(call_10846.astype('float64')) # shape=(1456,)
uop_10887 = relay.tan(call_10847.astype('float64')) # shape=(1456,)
bop_10889 = relay.add(uop_10885.astype('uint16'), relay.reshape(call_10846.astype('uint16'), relay.shape_of(uop_10885))) # shape=(1456,)
bop_10892 = relay.add(uop_10887.astype('uint16'), relay.reshape(call_10847.astype('uint16'), relay.shape_of(uop_10887))) # shape=(1456,)
func_26_call = mod.get_global_var('func_26')
func_29_call = mutated_mod.get_global_var('func_29')
var_10899 = relay.var("var_10899", dtype = "float64", shape = (360,))#candidate|10899|(360,)|var|float64
call_10898 = func_26_call(relay.reshape(var_10899.astype('float64'), [12, 15, 2]))
call_10900 = func_26_call(relay.reshape(var_10899.astype('float64'), [12, 15, 2]))
uop_10906 = relay.erf(call_10898.astype('float64')) # shape=(12, 15, 2)
uop_10908 = relay.erf(call_10900.astype('float64')) # shape=(12, 15, 2)
uop_10918 = relay.cosh(call_10898.astype('float32')) # shape=(12, 15, 2)
uop_10920 = relay.cosh(call_10900.astype('float32')) # shape=(12, 15, 2)
func_8861_call = mod.get_global_var('func_8861')
func_8863_call = mutated_mod.get_global_var('func_8863')
call_10922 = func_8861_call()
call_10923 = func_8861_call()
func_7768_call = mod.get_global_var('func_7768')
func_7773_call = mutated_mod.get_global_var('func_7773')
const_10941 = relay.const(7, dtype = "int16")#candidate|10941|()|const|int16
const_10942 = relay.const([9,-8,4,-7,-9,3,7,5,-5,-8,5,-4,6,-2,7,10,9,7,1,-10,-6,8,4,-1,8,-6,1,-4,5,-8,1,-8,-8,-8,3,-9,8,4,3,-2,5,6,9,-10,5,-9,-6,1,-6,-2,4,9,9,5,-9,2,7,7,-7,-10,-7,-1,8,6,10,4,-9,7,6,-7,10,-6,-7,-1,-2,-7,2,1,-1,-7,-6,4,-3,3,-6,2,-2,-3,3,-3,6,3,7,9,2,-8,6,2,-4,9,-7,-6,-9,-6,-2,9,-9,6,-8,-4,3,-7,-4,8,-5,-10,8,-1,-4,1,-8,-3,-5,-2,8,-3,8,1,2,1,-6,10,-6,3,10,5,-6,-2,9,-6,-2,9,-1,-1,10,10,5,-2,-3,-3,10,-10,8,9,-7,-6,6,-8,-4,9,5,9,-1,2,-7,6,5,-6,-9,-10,-2,5,2,4,-4,-9,4,8,-1,9,7,5,-3,-5,-6,9,1,-3,-7,10,-9,10,-9,9,3,5,-5,-2,-1,-9,1,-4,-1,-7,3,-2,6,-8,-2,-2,4,5,-10,-6,-3,10,4,-8,1,3,-3,-8,7,-2,10,-6,-3,-4,9,6,6,7,9,4,3,4,4,-4,8,2,2,-4,10,-10,7,-4,-3,4,-8,-2,8,8,-7,-3,-8,5,-4,5,-5,6,2,-7,-10,-6,9,-1,3,-9,10,7,8,8,-9,7,-1,-7,10,7,-5,10,9,3,9,-4,3,-8,3,4,-2,-7,-3,-5,10,-6,-5,1,6,-7,5,7,-5,10,3,-2,-6,-8,-7,3,-5,4,-3,-3,10,-7,3,4,9,6,9,-8,8,3,1,5,-7,5,4,1,9,-9,-2,-10,9,4,5,3,8,-3,4,-4,-4,10,-8,-10,-1,-1,1,5,-1,-8,-10,4,-6,4,2,10,-6,4,1,3,4,-6,-9,-5,-9,7,-5,-7,5,-3,-9,2,3,-1,9,-8,-10,-8,-5,-7,7,6,-4,-2,-4,5,8,-9,3,-7,4,3,-10,-10,5,1,-1,3,10,4,2,7,7,5,6,2,7,-3,-8,4,-2,3,-4,9,-4,7,-4,-8,-10,3,-4,7,10,-8,5,-10,-9,-2,-1,-6,-6,3,-7,3,5,-5,-10,-10,-4,-9,-2,-8,3,-3,-3,-9,2,-8,-2,-6,6,-6,4,7,4,-1,-4,-9,-10,-9,-1,-9,2,-10,10,-1,-7,-5,3,-3,7,-7,-2,5,-9,5,7,-3,-3,1,-8,2,-1,8,-8,-5,2,5,8,-8,-6,-7,8,2,-2,7,-7,-5,5,-6,-4,-7,5,-2,3,10,-2,-4,8,2,-9,9,-9,6,-10,8,-5,10,-8,-3,-10,-2,-3,-5,-10,-10,-7,5,-5,-1,-5,-9,-5,-10,-9,5,7,4,-2,10,5,3,9,7,10,1,8,-8,6,9,5,9,-1,-4,1,7,4,-9,9,-8,-5,-6,8,-9,6,-2,-1,-4,3,5,2,1,3,2,7,1,-9,-6,-3,-1,-2,-1,-3,3,-3,-9,4,4,1,1,5,1,-1,1,3,-4,-5,8,-9,4,-1,8,5,3,5,-6,-6,-4,-6,-10,9,4,8,-1,-2,7,-10,-9,7,10,7,-4,-3,-1,-5,7,-4,7,-4,-9,5,-10,-2,-1,2,-1,-7,4,-3,-10,4,2,10,-2,-10,-1,-6,10,-9,-7,2,9,-2,3,6,4,3,-9,-5,-9,3,-10,10,-7,10,-9,-3,-6,-9,-10,2,-6,2,-10,-8,4,9,-2,-3,-8,-4,-9,-5,-2,4,1,10,3,-5,-10,1,6,-7,3,-7,5,7,-8,9,-9,6,8,-7,7,-3,-5,-1,6,-7,-10,-9,-8,10,-3,10,1,1,-1,2,10,-6,-2,6,-7,-9,9,-1,-6,-7,-10,-10,2,-2,-2,2,10,7,-7,9,5,-10,-6,3,1,-3,-6,2,6,10,8,10,-10,-9,-7,2,4,8,4,-4,-3,6,9,5,3,3,-9,-1,-9,7,-9,-10,10,5,-1,-9,-3,2,-4,-9,-4,10,7,-2,2,-2,8,-3,2,-4,-6,-5,-9,-3,6,2,6,5,7,-8,9,-9,-4,7,2,-8,4,9,10,8,4,8,-4,-3,-2,-10,-3,-10,-5,4,10,-8,-5,2,9,-3,-10,4,6,6,8,-1,-7,1,-1,9,-9,10,6,-9,-9,-1,-5,-4,-2,-1,6,-5,-4,-5,1,8,3,-4,-7,-5,7,-7,10,-7,10,5,1,-1,6,2,9,7,-8,-2,-4,-3,-4,-5,-10,7,10,9,3,8,3,-7,2,8,-5,-4,9,1,-8,8,-1,-9,10,-4,-6,-2,-4,5,3,5,6,-10,-7,-10,1,4,-4,3,-10,7,-1,9,8,-1,-5,-2,6,-6,2,9,-6,5,5,-4,-7,3,9,-3,-3,-9,-9,-1,-2,-1,5,-10,-2,-10,3,1,6,9,-5,-4,5,1,6,-2,-3,5,-10,10,9,8,-6,3,-5,9,5,10,-9,-5,-5,5,9,-5,-2,2,4,5,-10,-2,-1,7,-4,-5,10,-10,-8,-4,-5,-7,-3,-10,10,7,-4,-7,9,10,-2,10,6,8,5,2,-10,-8,-9,-2,-2,8,-9,2,10,-5,8,8,-3,9,-8,-9,9,3,-4,6,5,3,-1,-4,-6,7,2,7,2,5,-6,-2,2,4,2,3,5,3,-10,9,6,9,1,-7,-1,-7,-9,-3,-4,-6,-6,-6,-6,7,6,1,3,-3,-5,1,3,2,-5,-10,3,-7,-6,9,10,7,3,-1,7,5,2,-7,-4,-4,5,9,-3,-4,-7,-10,-1,6,-4,-10,-9,-2,-1,-6,7,3,6,-9,-6,8,8,-2,-5,-2,-3,10,7,5,-1,2,-2,2,-7,-9,-6,6,-4,-2,5,8,8,2,-9,5,9,-8,4,-1,10,2,8,1,-6,-3,-9,-9,-10,-4,9,7,-9,-10,-6,4,10,4,-5,10,-10,-10,-5,-7,3,3,1,1,6,4,2,-10,5,-10,10,10,4,-8,3,3,-7,8,-6,-1,-10,-6,5,3,-1,2,5,-3,4,-2,-9,4,3,7,1,-4,4,-1,8,-1,-9,2,5,-6,9,7,-3,3,3,5,-7,-4,1,-10,-1,9,3,5,9,8,-9,5,8,-10,-7,6,4,-4,5,-5,4,8,5,5,7,1,10,10,3,8,4,7,2,-4,-5,5,3,9,9,4,-9,3,-3,5,2,-8,-5,-6,-6,8,-9,5,8,-10,9,-4,10,-6,-2,-9,-4,3,-3,8,7,-3,9,-6,1,6,1,6,9,4,-3,-6,-1,-6,-5,-4,-10,-1,-4,-10,5,4,-7,-9,2,-8,8,2,4,-4,4,-5,4,7,-1,2,4,3,-6,-8,6,5,-3,-3,-9,-7,-4,9,-6,-5,-5,6,5,-1,-2,3,-6,-3,-7,5,3,1,6,-7,-8,1,9,3,7,-7,2,10,-8,8,-1,-3,6,-4,-4,5,3,-7,5,8,-5,-2,5,-6,5,10,8,-10,7,-7,5,5,9,-10,-4,-6,-5,6,10,-5,-6,1,-10,10,-7,10,-10,9,7,-4,10,-9,-10,-5,7,-5,6,-8,-9,8,5,9,3,5,-1,-2,-2,-6,-6,-3,2,7,-6,-8,3,-2,-4,-4,-10,10,1,-2,4,5,10,4,-8,4,8,-10,8,1,-6,8,7,7,1,-9,9,7,-4,3,-4,5,-9,-4,10,6,4,1,-3,9,10,-10,-4,10,8,7,8,-5,-10,3,-6,-5,4,-2,-6,4,-9,-5,-1,-10,-8,-2,-10,3,-6,9,5,4,9,8,-7,1,7,10,1,-7,-6,5,-6,3,7,5,5,3,5,9,-4,-9,-6,-8,-6,6,-6,7,9,5,1,8,-9,-2,-2,4,1,6,-2,-2,3,-10,9,2,-7,-6,9,6,6,-10,-9,4,-10,5,9,10,-7,1,-10,-6,10,-7,7,-6,-1,1,3,-8,-10,-4,-4,8,-7,-9,-2,5,-8,-2,4,-8,-6,-5,-6,1,9,4,-2,-7,3,-7,3,-8,4,8,8,5,6,-3,4,-10,-1,-6,-9,3,9,7,-4,2,5,-6,-7,8,-10,8,7,6,-6,-9,3,7,4,1,8,-5,-5,-7,1,-6,6,-6,-3,1,3,4,-3,-8,-4,-4,4,5,-10,10,8,4,-1,9,3,3,1,3,-10,-1,-10,7,4,-3,-4,6,10,-10,-2,-5,8,-2,7,2,-4,2,-10,8,-10,-6,6,10,4,7,8,3,-3,-4,-8,-8,1,-6,10,5,-9,-6,-3,-10,-4,-4,-2,8,-10,6,3,10,-5,-5,4,-6,-10,-7,9,-3,8,-7,4,6,2,-4,7,8,-2,-8,2,-9,-8,-7,-6,2,-8,4,6,6,1,2,-5,9,-3,6,-3,-10,-3,-10,9,-3,-2,-1,-5,8,-8,-4,-1,10,4,-1,-3,9,-2,-7,2,-10,-6,-5,-9,-9,-5,1,7,-2,-9,9,-6,10,-7,8,8,6,-10,-5,5,-7,-8,-10,10,-6,-5,-3,-3,-6,1,-2,4,2,-8,-5,2,7,10,5,-7,1,7,-10,8,-3,-2,9,-2,9,10,6,4,4,-9,6,-9,8,10,8,-8,8,-5,-3,7,-10,-4,1,-8,-3,-3,4,7,-9,4,6,8,1,8,4,-5,-4,-9,-10,1,7,-4,9,-5,-10,-6,10,-8,-9,4,-2,8,-10,3,5,3,10,-2,-1,-7,-5,-5,7,5,-8,9,-10,7,5,9,-6,3,2,-6,2,1,-6,-4,8,1,2,9,9,1,-8,6,-5,-9,-4,-7,8,-6,4,9,1,1,2,-5,-6,6,9,7,1,-10,-10,-1,-6,-3,7,4,2,3,-7,-6,9,8,-4,-1,-10,-7,-9,-9,5,5,3,-2,-7,8,7,9,-6,3,2,4,-6,-4,-9,-10,-6,6,4,-4,-5,9,8,8,-6,3,-7,-2,8,-8,1,-1,2,-6,-7,1,3,-6,7,5,4,-1,-3,-6,9,7,-3,-6,-6,-3,-3,5,-4,6,-4,5,9,1,-7,4,-10,-7,-1,-9,-7,10,-9,-5,7,-6,-4,-10,-5,6,7,-1,1,1,-2,9,-7,7,-7,10,-6,4,9,3,-5,7,7,1,5,1,4,-7,10,-6,-8,10,7,4,-10,-10,-5,8,-5,1,-1,-9,4,-8,2,3,4,-6,9,-5,-8,-3,1,5,10,-8,-10,-8,3,-1,9,4,7,-4,-3,-5,-3,-4,-2,10,8,-3,-5,3,8,-2,7,-2,-10,-1,5,-4,4,3,-8,8,-3,4,-3,-7,-2,7,6,4,-4,-9,-10,-7,10,8,7,5,8,-9,8,-9,-4,2,8,8,-2,2,9,-4,-1,6,-10,-7,10,-7,-9,-1,-7,-5,-8,6,7,9,7,-4,8,4,10,-6,7,-1,4,-9,2,5,-6,-1,8,8,5,-4,1,3,-1,-4,-4,5,4,8,-10,9,3,9,-9,-9,-9,9,2,1,-9,-4,-9,-1,-6,2,-10,-2,-10,6,-7,6,-7,6,-5,5,-4,-6,-1,-8,6,3,-1,-10,-7,2,1,-10,1,10,-4,1,-7,3,-4,2,-2,-7,-9,6,3,-10,4,-3,-7,-2,-9,1,9,-1,-6,4,-8,-1,-8,-5,-4,3,8,-4,8,-7,6,2,-1,-8,-6,5,3,-2,-4,10,-3,-6,1,-7,-4,6,2,5,1,-2,-6,-10,2,10,1,4,4,-7,7,-4,8,-3,9,6,9,-4,5,-6,6,-3,-9,-10,-6,-10,1,-8,-5,9,-6,2,1,2,10,2,-7,2,3,-9,-1,6,2,-2,2,10,4,-3,10,2,-7,-5,-1,-10,-2,-5,-7,-6,-2,7,10,2,-9,-1,-4,8,-7,-4,3,5,3,10,-1,-1,5,-9,-5,-10,-9,5,6,-5,-10,1,2,-9,-6,-7,5,1,5,-8,-4,7,1,-7,5,8,-10,7,7,-9,6,1,3,5,4,10,-2,-9,7,10,7,-7,8,-9,3,9,3,3,4,5,1,-5,-4,-8,2,5,5,-6,-8,-2,-10,-10,-3,-10,1,6,-3,-7,-7,10,-2,-9,-6,1,-10,5,-6,-5,-8,-7,-10,-10,-1,-2,1,-8,-4,9,-3,-6,-5,-3,7,-1,10,-5,8,5,-4,8,6,6,4,-2,10,-8,-10,-8,-8,4,-5,-10,6,-2,10,-4,7,-6,7,-8,7,-2,8,6,6,-5,8,-6,9,-3,-10,-5,8,10,1,-2,7,-9,-5,10,-4,-4,10,-9,8,6,-10,6,4,5,5,6,-5,-6,10,2,3,-10,-6,10,2,3,-8,-2,-5,8,6,10,10,2,4,-6,1,-7,-5,-2,-2,-9,-4,-3,-9,8,4,9,-4,4,4,-4,-5,2,8,7,1,-10,-8,-1,-3,-4,-7,-1,-1,-10,2,-10,4,7,7,2,1,-10,-7,5,2,-7,10,1,-10,8,6,10,-1,-10,2,-6,-5,1,-1,-4,-6,3,8,9,6,1,-7,-2,10,7,-5,5,1,-4,2,5,-10,4,-4,-5,2,2,10,8,-7,4,-9,-4,2,-5,7,-2,10,-2,-1,-5,-6,2,3,6,6,2,8,10,-3,6,-6,-4,4,-3,6,8,8,-7,-2,1,-4,5,-10,-2,9,2,6,-4,-3,-7,-6,10,-7,-7,2,6,2,6,4,4,7,1,-3,4,-3,-6,8,-4,-2,1,-8,8,8,-1,-3,8,-2,-3,-5,10,10,6,1,10,-9,-7,-9,9,10,-2,7,-5,8,-2,5,-10,8,-2,5,2,4,-3,4,-10,3,9,1,-9,-2,-1,-4,3,-6,1,-6,7,2,-2,-3,-3,4,6,-8,2,9,6,-4,-5,3,-4,-9,-10,1,7,4,-8,-4,2,3,-9,-9,4,-5,6,7,8,10,-6,9,3,-5,-10,7,-8,-7,-3,-3,2,7,7,-9,-1,4,8,-1,7,-3,-3,-10,-3,10,-5,-2,-1,6,-5,5,-4,3,4,-4,-10,-9,-7,5,-6,-5,-6,-8,10,-8,-9,-10,4,6,7,-9,6,1,-7,-3,-9,-5,-7,-5,9,1,6,2,7,8,-7,-3,4,-6,10,5,-10,-6,5,4,-5,-1,-8,-1,-10,-9,5,-2,7,4,-9,-9,-9,-6,8,-8,6,-4,-2,-9,3,1,-1,-10,3,8,-1,1,-1,6,-10,4,2,10,2,-8,9,-4,-6,-1,-8,-1,5,3,-2,7,3,-7,9,1,-9,8,-10,-8,-9,-5,7,8,-9,-8,-9,-2,8,7,9,1,-7,-5,3,3,-4,1,-4,3,-1,6,-8,2,10,-3,7,6,-3,3,6,-2,-4,-4,-3,6,10,3,2,5,-5,10,2,-8,-1,-3,-8,-9,-7,3,-10,5,10,-7,5,4,-10,-4,4,-9,4,2,-6,-4,-4,4,-7,3,7,2,1,2,2,-6,-9,-3,-9,-2,-6,10,5,-3,5,2,5,5,-1,1,-4,-2,-4,-5,10,9,-6,-5,7,5,-5,3,10,7,-7,-7,-7,-2,-5,-5,-4,10,-5,1,4,-3,3,-8,6,-8,-6,-1,-5,-4,-2,3,5,-6,-10,-2,4,-3,3,-4,7,-1,-7,5,-7,-10,10,-5,-9,-5,1,-3,-5,4,8,-7,9,7,2,6,3,-10,-1,7,-7,1,10,-3,-10,2,-2,-4,-9,-7,-5,2,-10,10,-7,-5,7,-2,-8,3,9,-8,4,-4,-3,6,3,-5,-10,8,9,-2,7,-5,-9,7,-4,1,-6,-3,-5,8,-6,-4,-7,-4,6,-7,1,10,-2,8,-1,-4,-3,10,7,-7,-1,9,-1,-8,-10,2,7,-1,-8,-5,-7,9,-7,5,7,6,3,7,8,-1,-10,-10,-4,8,-10,-4,-3,7,2,-3,-6,-6,-6,-2,-10,-5,-7,-1,-7,-4,1,6,-1,-5,4,1,-9,-8,-1,1,3,-4,-2,1,2,-8,3,9,6,-6,-2,-10,-3,-7,-7,6,2,-10,2,6,7,9,8,6,1,-4,-7,5,-3,4,1,-3,9,9,-5,7,9,-3,-5,-10,-1,3,-1,9,3,7,3,-8,3,6,-2,-1,-1,7,5,4,6,-5,-8,-2,-10,-6,8,7,-1,9,-6,-4,7,10,-3,-10,-4,5,-9,-4,5,-4,-1,-4,2,6,6,-4,3,6,10,2,-1,7,-5,9,-10,5,-3,-6,4,4,1,-4,-2,10,-4,-6,-1,-7,4,8,-8,-5,-4,8,10,8,8,6,2,-1,-10,3,10,8,5,-5,-9,-6,1,10,5,-5,-2,2,8,-10,8,10,3,-1,-1,3,-7,2,-2,9,2,10,-6,-8,6,1,-3,-2,-8,-7,9,1,-1,-4,-5,2,-9,-9,-5,-7,7,4,10,8,-9,7,7,6,10,2,-4,-1,7,8,-9,4,5,-5,6,-5,8,-4,9,-2,-9,4,-9,6,7,1,-1,1,4,2,-9,6,-8,-4,-2,8,1,7,-9,7,9,3,2,3,-1,-6,2,10,4,-7,-10,-8,-6,-2,-7,2,-6,5,10,4,5,-4,1,4,-7,2,5,8,-4,-10,-7,7,9,1,-2,-3,-4,1,-10,-3,-6,-2,-4,6,-1,8,-1,3,-9,-9,9,5,8,3,10,3,-10,9,-5,9,-3,4,-4,-2,-1,-1,5,-8,-1,-9,6,9,8,7,4,9,-4,1,-10,-10,-6,-5,-8,-3,3,-2,-5,4,-8,7,8,-9,-1,-2,-3,-5,-5,1,-3,-4,8,7,6,9,2,-6,-3,5,-7,-6,9,-1,-10,-2,7,-3,-4,10,-4,4,4,8,-4,1,10,-4,-7,-7,-7,3,-5,-1,-7,-8,10,6,-1,1,-7,-9,-2,-8,-7,-7,4,-2,-6,-9,-6,3,1,1,-4,-9,7,-10,2,9,4,6,7,8,-1,-6,6,-2,-1,-10,5,7,-9,2,-4,-1,-6,6,-4,-7,-3,-1,-4,-9,8,-9,-9,7,-3,7,10,6,4,-1,10,3,-5,-6,9,-6,-3,10,-1,-7,-7,-2,2,-7,3,5,8,-7,-4,3,-6,-10,4,-10,8,1,-4,4,-4,4,-1,-1,9,-1,2,-6,-3,-9,8,-3,-7,-6,9,6,-3,1,1,2,-1,-5,-8,-1,-9,9,-10,-8,9,9,-5,3,7,-1,-5,2,-5,9,10,-4,10,10,8,-10,-3,-8,8,-6,3,-5,2,6,-4,1,-3,-5,-10,7,-1,8,-8,2,-6,-10,10,1,5,-7,10,-5,5,-10,-2,-7,-5,-9,-1,-8,-1,-10,-8,-3,6,-1,10,-3,-3,3,9,-8,-5,9,10,-5,-8,4,-5,6,-6,2,-5,2,6,-3,5,1,-10,8,-8,3,-7,1,-1,-7,-7,5,-2,10,-10,4,6,-5,-6,8,-5,1,7,8,-10,-7,2,9,-6,-1,-1,4,-2,8,4,-3,7,3,-7,-4,-3,-4,-2,10,-3,8,8,3,-5,-10,-5,7,7,9,-2,1,-5,-2,-1,9,-3,-5,-3,3,-9,4,-7,7,-5,-10,-1,-2,-7,7,9,1,5,5,6,3,-2,-9,-1,3,-5,3,-3,4,1,9,9,4,-5,1,8,7,2,8,-2,-9,3,5,-9,7,2,2,5,-5,-4,4,-2,-3,-6,-8,-2,-5,9,1,1,-7,-4,-6,4,1,-2,1,5,6,5,-10,-3,3,9,9,4,4,-7,-8,6,1,6,9,6,-3,-9,1,1,3,10,9,2,-3,-6,9,10,-7,2,10,-1,-2,-7,4,4,8,-1,-7,10,3,-1,-5,2,9,-8,-5,-1,9,7,8,1,7,-4,-7,2,-10,2,-6,-9,-2,2,-6,-2,3,-8,-3,8,1,4,-6,-7,1,-6,-6,2,2,3,8,-4,-9,3,-9,1,3,-9,-2,-7,-8,10,8,9,-5,-9,-2,-6,-3,-10,-8,-6,6,9,-2,3,-9,-3,4,-6,-6,1,-8,-6,6,7,9,-4,-7,-5,1,-10,-10,7,4,-2,-10,8,-2,1,2,-1,-9,8,-1,-6], dtype = "int16")#candidate|10942|(3840,)|const|int16
var_10943 = relay.var("var_10943", dtype = "bool", shape = (120,))#candidate|10943|(120,)|var|bool
call_10940 = relay.TupleGetItem(func_7768_call(relay.reshape(const_10941.astype('int16'), []), relay.reshape(const_10942.astype('int16'), [3840,]), relay.reshape(var_10943.astype('bool'), [120, 1]), ), 4)
call_10944 = relay.TupleGetItem(func_7773_call(relay.reshape(const_10941.astype('int16'), []), relay.reshape(const_10942.astype('int16'), [3840,]), relay.reshape(var_10943.astype('bool'), [120, 1]), ), 4)
bop_10953 = relay.bitwise_or(uop_10918.astype('uint16'), relay.reshape(uop_10906.astype('uint16'), relay.shape_of(uop_10918))) # shape=(12, 15, 2)
bop_10956 = relay.bitwise_or(uop_10920.astype('uint16'), relay.reshape(uop_10908.astype('uint16'), relay.shape_of(uop_10920))) # shape=(12, 15, 2)
func_5994_call = mod.get_global_var('func_5994')
func_5999_call = mutated_mod.get_global_var('func_5999')
var_10966 = relay.var("var_10966", dtype = "uint32", shape = (390,))#candidate|10966|(390,)|var|uint32
call_10965 = relay.TupleGetItem(func_5994_call(relay.reshape(const_10941.astype('uint32'), []), relay.reshape(var_10966.astype('uint32'), [390,]), relay.reshape(call_10898.astype('float64'), [360,]), ), 3)
call_10967 = relay.TupleGetItem(func_5999_call(relay.reshape(const_10941.astype('uint32'), []), relay.reshape(var_10966.astype('uint32'), [390,]), relay.reshape(call_10898.astype('float64'), [360,]), ), 3)
bop_10971 = relay.less_equal(call_10940.astype('bool'), relay.reshape(var_10943.astype('bool'), relay.shape_of(call_10940))) # shape=(120, 1)
bop_10974 = relay.less_equal(call_10944.astype('bool'), relay.reshape(var_10943.astype('bool'), relay.shape_of(call_10944))) # shape=(120, 1)
func_10619_call = mod.get_global_var('func_10619')
func_10621_call = mutated_mod.get_global_var('func_10621')
call_10980 = relay.TupleGetItem(func_10619_call(), 0)
call_10981 = relay.TupleGetItem(func_10621_call(), 0)
func_9941_call = mod.get_global_var('func_9941')
func_9944_call = mutated_mod.get_global_var('func_9944')
var_10988 = relay.var("var_10988", dtype = "float64", shape = (896,))#candidate|10988|(896,)|var|float64
call_10987 = func_9941_call(relay.reshape(var_10988.astype('float64'), [8, 14, 8]))
call_10989 = func_9941_call(relay.reshape(var_10988.astype('float64'), [8, 14, 8]))
func_4055_call = mod.get_global_var('func_4055')
func_4057_call = mutated_mod.get_global_var('func_4057')
call_10990 = func_4055_call()
call_10991 = func_4055_call()
output = relay.Tuple([bop_10889,var_10899,call_10922,const_10941,const_10942,bop_10953,call_10965,var_10966,bop_10971,call_10980,call_10987,var_10988,call_10990,])
output2 = relay.Tuple([bop_10892,var_10899,call_10923,const_10941,const_10942,bop_10956,call_10967,var_10966,bop_10974,call_10981,call_10989,var_10988,call_10991,])
func_11014 = relay.Function([var_10899,var_10943,var_10966,var_10988,], output)
mod['func_11014'] = func_11014
mod = relay.transform.InferType()(mod)
mutated_mod['func_11014'] = func_11014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11014_call = mutated_mod.get_global_var('func_11014')
var_11016 = relay.var("var_11016", dtype = "float64", shape = (360,))#candidate|11016|(360,)|var|float64
var_11017 = relay.var("var_11017", dtype = "bool", shape = (120,))#candidate|11017|(120,)|var|bool
var_11018 = relay.var("var_11018", dtype = "uint32", shape = (390,))#candidate|11018|(390,)|var|uint32
var_11019 = relay.var("var_11019", dtype = "float64", shape = (896,))#candidate|11019|(896,)|var|float64
call_11015 = func_11014_call(var_11016,var_11017,var_11018,var_11019,)
output = call_11015
func_11020 = relay.Function([var_11016,var_11017,var_11018,var_11019,], output)
mutated_mod['func_11020'] = func_11020
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11042 = relay.var("var_11042", dtype = "float64", shape = (11, 14, 11))#candidate|11042|(11, 14, 11)|var|float64
uop_11043 = relay.log2(var_11042.astype('float64')) # shape=(11, 14, 11)
output = uop_11043
output2 = uop_11043
func_11052 = relay.Function([var_11042,], output)
mod['func_11052'] = func_11052
mod = relay.transform.InferType()(mod)
var_11053 = relay.var("var_11053", dtype = "float64", shape = (11, 14, 11))#candidate|11053|(11, 14, 11)|var|float64
output = func_11052(var_11053)
func_11054 = relay.Function([var_11053], output)
mutated_mod['func_11054'] = func_11054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5701_call = mod.get_global_var('func_5701')
func_5702_call = mutated_mod.get_global_var('func_5702')
call_11074 = relay.TupleGetItem(func_5701_call(), 0)
call_11075 = relay.TupleGetItem(func_5702_call(), 0)
func_9631_call = mod.get_global_var('func_9631')
func_9633_call = mutated_mod.get_global_var('func_9633')
call_11086 = func_9631_call()
call_11087 = func_9631_call()
uop_11089 = relay.sqrt(call_11086.astype('float64')) # shape=(1456,)
uop_11091 = relay.sqrt(call_11087.astype('float64')) # shape=(1456,)
func_8666_call = mod.get_global_var('func_8666')
func_8669_call = mutated_mod.get_global_var('func_8669')
var_11095 = relay.var("var_11095", dtype = "float64", shape = (975,))#candidate|11095|(975,)|var|float64
call_11094 = relay.TupleGetItem(func_8666_call(relay.reshape(var_11095.astype('float64'), [15, 5, 13])), 0)
call_11096 = relay.TupleGetItem(func_8669_call(relay.reshape(var_11095.astype('float64'), [15, 5, 13])), 0)
output = relay.Tuple([call_11074,uop_11089,call_11094,var_11095,])
output2 = relay.Tuple([call_11075,uop_11091,call_11096,var_11095,])
func_11103 = relay.Function([var_11095,], output)
mod['func_11103'] = func_11103
mod = relay.transform.InferType()(mod)
mutated_mod['func_11103'] = func_11103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11104 = relay.var("var_11104", dtype = "float64", shape = (975,))#candidate|11104|(975,)|var|float64
func_11103_call = mutated_mod.get_global_var('func_11103')
call_11105 = func_11103_call(var_11104)
output = call_11105
func_11106 = relay.Function([var_11104], output)
mutated_mod['func_11106'] = func_11106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3990_call = mod.get_global_var('func_3990')
func_3992_call = mutated_mod.get_global_var('func_3992')
call_11114 = relay.TupleGetItem(func_3990_call(), 2)
call_11115 = relay.TupleGetItem(func_3992_call(), 2)
func_4183_call = mod.get_global_var('func_4183')
func_4189_call = mutated_mod.get_global_var('func_4189')
var_11134 = relay.var("var_11134", dtype = "int32", shape = ())#candidate|11134|()|var|int32
var_11135 = relay.var("var_11135", dtype = "bool", shape = (120,))#candidate|11135|(120,)|var|bool
const_11136 = relay.const([-1,-5,-10,5,-7,10,-4,7,3,9,1,-2,7,-7,3,9,2,4,5,10,10,5,4,-1,9,-1,-6,-1,7,5,-3,4,8,-1,-7,-6,2,-1,5,-3,4,5,5,4,-3,1,-3,5,-3,6,-7,7,4,-6,-1,-3,1,4,3,7,7,4,-5,1,3,-7,10,2,1,-2,4,-7,3,-2,-9,2,9,6,-5,3,4,10,4,-9,7,9,-9,8,-10,-8,-1,5,-8,-3,7,1,-6,5,-3,8,8,-3,6,8,-4,-4,-1,-5,9,-2,-6,6,-3,5,-7,-8,-4,1,6,5,10,-7,8,1,-1,-4,5,-2,-2,8,4,6,9,-8,-9,-5,2,-1,3,10,3,5,-3,-10,-6,6,-4,-7,-10,-8,-8,9,4,-4,9,2,-9,4,6,9,-2,-3,7,-9,-5,-5,1,-4,-1,-3,4,6,4,7,4,1,1,4,6,-5,10,5,-4,-6,9,7,5,-9,1,-9,2,-3,-6,10,-10,-4,-5,-4,9,-5,-1,2,-6,-5,6,4,-3,-10,-3,2,5,4,4,10,7,-2,8,4,-6,10,2,8,10,8,-8,5,-6,-7,6,-6,3,-3,3,-2,8,-8,6,8,4,9,6,-7,-2,5,-2,-5,8,-5,-7,7,-8,8,1,-2,-3,8,5,-2,-2,9,7,-8,-3,-5,9,-10,6,-3,-5,5,5,9,-1,-9,9,8,1,10,-8,-8,8,-5,5,3,-4,8,-4,-1,8,-9,-9,3,-4,6,10,10,-10,-2,5,-5,-6,10,1,-6,-3,-8,-3,-2,5,-10,4,5,-4,-10,-4,10,9,-9,-5,-1,-3,1,-1,-4,3,-5,3,2,7,-8,9,1,2,-10,7,5,10,8,1,10,-6,-2,5,6,-5,10,-6,2,1,5,3,9,-6,-7,-9,-10,3,1,5,7,6,4,10,-10,-7,-10,4,6,-8,-6,9,9,-7,10,-10,2,8,-9,-1,1,3,8,3,-1,6,-6,-5,-9,-7,-6,7,4,3,6,-2,2,8,-7,4,4,5,-7,6,5,-4,-2,-9,10,2,6,1,-1,9,-2,4,-5,7,-1,7,-6,-9,5,7,-9,-9,4,4,1,-3,-6,-10,-10,-2,-9,9,1,-6,-3,2,-3,-9,-1,2,4,-6,4,3,4,-5,6,8,9,6,6,-5,10,-6,7,-4,5,3,-9,-5,4,4,3,9,-6,5,-6,-3,-6,-7,8,4,-3,-5,3,-3,-2,-7,1,-9,5,-10,-6,-5,-9,7,-4,-3,8,-9,-7,-10,-1,4,-4,-8,-8,-10,-9,-9,7,-8,-7,-8,-8,-7,-9,-6,5,10,-4,10,7,6,-5,6,1,3,-6,2,-5,-1,-8,-5,-10,4,-5,5,4,-10,8,-1,2,6,2,-2,-1,-3,1,-3,3,4,-4,2,2,-5,7,-1,9,-5,-7,9,-9,8,2,-10,1,-5,-2,-10,-6,-7,2,-10,-5,-3,-1,2,-9,-9,-4,-6,-10,9,-5,-8,-8,5,-3,3,1,4,-2,-1,9,-10,6,7,6,-10,6,3,5,6,-3,7,6,-6,-8,-7,-5,-9,2,9,-3,-10,-8,-5,-3,10,1,-9,-9,-5,-2,-3,9,9,9,1,8,-4,-6,-9,1,4,9,9,10,6,-8,10,10,-1,9,2,7,2,-7,2,-2,-10,-4,10,4,-8,4,10,-9,-4,4,4,4,-5,-8,-8,5,-3,8,-3,-7,5,-10,5,7,-6,7,-4,-7,-1,8,-7,-7,2,-2,-10,-7,-10,1,6,5,10,-3,1,5,-5,1,-6,2,6,6,-5,-2,-1,10,-2,9,-7,6,2,-9,-4,1,-1,-1,-9,6,1,-8,-2,8,-3,5,9,7,-5,-8,-1,9,4,-10,9,8,3,-10,6,8,-5,1,-6,-3,9,10,-2,9,-10,-8,4,-9,-4,3,-7,1,-5,5,-3,4,2,9,4,-10,10,5,6,2,-3,1,-7,1,5,3,6,9,1,6,9,-2,-5,-2,1,2,10,-1,6,-6,9,10,-9,7,-8,-9,-8,7,-8,-6,-4,10,-10,8,4,-6,7,10,6,10,-2,-2,-8,6,7,-2,8,4,2,5,-7,-10,-8,2,10,9,-9,-2,9,2,10,6,7,-10,-1,-6,8,5,-8,2,-9,10,10,-6,2,5,-3,1,-3,10,6,4,-3,1,-8,-9,-4,6,5,-4,-9,10,-4,-1,-4,10,-6,-7,7,-10,3,-3,-10,-2,10,-1,-9,-8,-6,9,-9,-1,5,-4,7,9,-3,6,3,6,6,-10,-2,7,7,-7,4,3,-7,-6,-3,2,-9,-9,8,4,5,-10,-4,5,2,-10,-2,-8,10,-1,8,8,4,10,3,8,9,6,-3,-5,-5,-1,-7,-5,-2,-9,2,6,5,7,-1,5,-1,3,4,-10,4,7,2,-8,8,3,-7,5,-8,-9,7,8,6,3,1,10,-9,-9,-7,-5,6,-7,8,6,-4,4,-8,-1,-6,-6,-10,-4,-1,7,-2,5,2,-3,-3,8,-4,1,5,-6,-6,9,9,2,8,10,-4,10,-8,-8,-1,-10,-7,7,-3,-4,-7,5,-8,-8,8,8,4,10,2,2,-2,-10,-5,2,2,-7,1,-7,-8,-7,2,10,7,7,-8,5,-3,-3,-4,8,-3,6,-6,-4,7,-5,-9,6,-7,-7,4,-6,-9,-5,4,-8,8,-2,7,1,7,5,-10,-4,-4,3,3,4,8,4,5,-8,7,9,6,-10,-7,1,-7,-6,7,8,-7,-3,-4,-7,-10,9,-7,-3,-10,7,1,-5,-4,9,10,-5,-10,4,-5,10,-9,5,9,8,3,7,3,2,4,-3,7,-3,-6,10,9,-1,10,4,-3,1,8,-2,3,-2,-3,3,-3,-8,3,-4,-9,1,-8,1,7,-1,-1,10,5,10,9,10,10,-4,-10,-7,1,10,-5,5,4,-1,-7,10,-4,-1,-4,6,-3,-8,9,1,7,1,4,-6,-10,-5,7,-10,-6,6,4,-5,-2,-9,10,1,1,9,-10,4,-1,8,2,1,-10,7,8,-10,-7,-1,9,4,8,5,-8,7,-6,9,2,8,-4,-8,7,3,9,10,-10,7,-10,5,1,-7,-6,9,-6,-1,-1,3,7,1,1,-3,8,8,-4,5,-4,6,-1,-7,-1,-7,7,10,7,-9,5,-9,4,2,-2,-7,1,4,10,9,2,-2,6,-3,3,1,-6,2,2,1,-3,8,-6,6,-8,7,-2,6,-1,3,5,-4,6,4,-2,-4,5,-10,6,7,2,-3,3,2,-10,-9,-9,-5,-1,-7,-4,-9,-2,-2,-5,-2,4,-1,7,-10,8,-2,-4,-4,-8,7,9,-2,5,1,4,-6,9,5,1,-2,7,-8,3,-4,-2,-4,9,3,-4,5,-8,-6,10,-4,7,2,2,-4,1,-7,-1,5,8,5,2,10,4,-8,9,9,-8,1,2,-6,-3,7,3,-5,10,5,-3,4,2,4,-4,9,-6,1,-6,-1,9,5,10,2,-2,-1,-3,4,7,-9,3,-2,-6,6,-9,1,5,-9,-7,-4,-2,-4,2,-2,-8,-7,-9,-1,-3,7,6,-1,5,5,-2,1,-5,-9,-4,3,2,-6,-10,-5,6,4,-1,2,-4,-10,-5,10,-5,-7,2,5,-2,6,-8,5,-5,3,-2,4,1,4,-4,-7,5,-9,4,2,5,-9,9,6,-1,-9,-5,2,-8,3,1,10,4,7,-5,5,7,2,6,-1,10,-3,-5,-10,-1,3,-5,-10,-4,6,-5,9,4,9,1,8,-2,-6,-6,-7,1,1,-7,-2,7,10,8,-6,-1,2,-7,-3,3,-5,8,-8,-4,-5,-9,1,7,-9,-1,7,2,-3,-2,-9,10,6,5,-6,-2,-1,-8,-8,-4,-9,-4,6,-10,6,-9,-8,8,-4,-7,-4,-1,-1,-9,-5,-6,7,-5,-5,-4,-6,5,-2,8,-7,-8,4,-8,-10,2,10,-2,-9,2,3,-6,-8,4,5,6,5,-3,-5,3,-5,-3,-4,-2,3,8,9,-4,4,-9,-10,-9,10,5,4,-1,5,-4,8,-4,1,6,6,8,-9,-7,3,3,9,-7,8,-1,-1,-3,-4,-9,-9,-6,-4,-2,-3,-2,-6,-8,-5,-9,-4,-7,9,1,5,10,-4,10,1,10,3,-10,9,6,-4,8,-9,-2,-4,-2,2,4,8,-5,6,-3,-9,7,-1,-3,-2,-3,-7,7,-10,10,-3,-10,-8,10,-10,2,7,7,-6,3,3,-7,2,2,5,4,6,-8,8,-8,-4,8,-2,9,7,-6,-9,3,-8,-3,-4,-2,-2,-5,-2,-7,-5,-8,-9,-7,-9,9,7,-1,-6,8,3,2,-2,-6,-2,-1,-7,4,-5,6,-5,4,-6,6,1,-4,6,2,5,-2,-10,-3,-1,-4,-9,10,5,5,9,5,-5,-6,9,9,-3,-10,-4,-9,2,-1,6,-9,5,4,5,-4,2,-3,8,-4,5,-4,-9,-3,-10,3,8,-9,-8,-7,-4,-5,-10,5,2,-9,-5,5,-9,4,5,-7,1,-5,7,-2,-2,-7,-9,10,-4,-8,5,-1,-4,-6,-4,3,9,6,10,8,9,4,-10,9,7,-10,-1,-9,-6,3,1,7,3,-7,3,7,-3,-8,-9,-4,4,-1,5,-1,8,-2,1,-9,5,9,3,10,9,6,6,-2,-4,-7,-4,1,-4,9,6,-10,-3,-9,-7,2,-8,1,10,4,8,-4,-2,4,-10,1,-10,7,2,-2,6,6,-2,-7,2,-6,-5,-5,-5,-2,2,1,6,9,-3,-8,5,-10,-1,-9,10,-5,6,-3,9,-8,-3,-6,4,-7,-4,-3,-1,6,-3,4,10,10,9,9,-3,10,-3,-4,-10,3,8,-5,-2,-10,3,8,-3,-9,2,-10,-2,-10,7,-3,7,-10,-3,-1,-5,-8,4,2,-4,10,9,-2,2,-6,-6,-3,5,7,10,3,-10,4,6,-1,-8,-6,-3,-8,10,2,-4,-10,-2,-9,6,10,2,10,-1,-6,-4,-6,9,-3,-7,-7,-2,2,-4,8,2,4,3,9,6,5,-8,-8,4,-7,6,3,-1,-6,7,-2,4,-10,9,3,5,-7,10,1,7,-4,-10,-5,-6,-5,-6,10,1,9,9,7,-1,-6,-10,-4,3,-9,6,5,4,-5,-6,-10,-4,9,2,-7,10,3,-10,-6,4,-9,1,4,-5,8,5,8,-7,-3,5,-4,-5,5,-6,2,8,2,-7,-9,-7,-4,4,-2,-1,2,6,10,-4,1,-8,10,6,7,2,8,2,-4,3,9,-2,9,8,-1,4,2,5,-10,-6,4,5,-7,-3,-3,-6,10,3,6,-9,-4,1,5,-8,6,-1,9,-2,1,9,2,8,3,-1,3,-8,-3,2,4,10,-3,-10,-7,3,8,3,5,-3,-3,7,-6,-4,5,-6,6,-9,-9,5,3,-3,8,-10,9,1,-8,9,-7,-3,-9,-9,7,7,-7,1,8,1,-1,-1,4,4,4,8,-6,-2,-9,1,-1,9,1,-9,3,-7,3,-7,-9,1,-4,-3,-9,5,-9,2,-7,9,-1,6,-8,-10,-8,10,-10,1,9,4,10,-3,-10,-9,8,-2,6,-6,-1,-7,-5,-8,-5,9,-2,1,-6,3,3,-10,7,3,2,-8,-6,-3,2,-8,-10,-3,1,6,-10,1,8,4,5,-1,-7,-7,-5,-7,-2,4,-3,-6,-10,-4,-1,4,8,7,7,10,8,-10,8,10,2,3,10,2,10,-2,2,-2,-6,-6,8,9,-3,-1,-6,-2,6,6,5,-7,7,-7,5,-1,-10,-8,-3,8,-7,9,-1,-4,8,-2,1,9,-9,6,8,9,-6,-10,-5,5,9,-7,-6,-7,2,-9,-1,10,-7,-7,4,4,-4,-9,3,1,9,-2,9,-3,-1,4,3,3,10,4,6,6,-2,-9,8,-9,-7,3,-2,-7,-9,6,-6,-1,-9,-2,2,-6,-4,9,4,10,9,-9,2,-6,10,-4,-3,3,-9,-8,5,-3,-9,-3,-10,-6,8,2,3,10,1,10,-8,-5,-1,6,-7,7,3,10,-2,-6,4,-8,-7,-2,4,-4,6,7,-4,-3,6,-6,-9,6,-5,-2,10,7,10,-8,3,5,3,7,9,-8,-2,-5,3,2,4,8,-4,1,-4,8,-5,7,9,7,7,-4,-2,-10,2,4,8,10,-6,-7,4,-10,-2,-8,2,-10,1,-8,7,-1,-1,-7,-6,10,9,-4,7,-3,10,2,7,1,-8,-2,-6,-5,7,-4,10,6,-3,4,2,-9,-9,4,-2,3,-3,-8,7,4,7,8,3,-7,-6,-8,-10,-3,-9,2,-2,-3,9,4,7,1,-7,3,7,-8,-3,-1,5,-10,3,-6,-9,1,-2,-8,-4,-7,10,-3,-10,-9,-9,-3,-6,-9,-7,3,-3,7,-9,8,-6,6,-3,-2,-4,-3,1,7,1,6,10,5,2,-3,-9,-8,-6,-10,5,-9,4,2,-9,5,-7,-7,8,2,-8,-3,-8,3,-5,-10,-8,9,-4,-7,2,-3,1,-5,4,1,6,10,-6,5,-7,-4,-5,-6,6,2,-5,6,-4,7,10,-1,-5,-10,3,4,2,4,-5,-8,4,-8,4,-7,4,-10,3,1,-2,8,-6,-9,4,-8,6,7,-6,8,-6,-2,-8,-5,4,8,-8,-5,-1,-5,-10,2,-6,3,-6,4,8,4,-10,7,-6,-2,-1,1,3,-9,-6,6,-1,-8,4,9,-9,5,4,3,-7,4,-4,-4,-10,10,5,2,9,-3,1,2,-6,9,-1,10,7,-7,-1,-10,3,9,-9,4,-2,-10,10,2,1,6,4,-1,9,4,9,1,7,10,2,4,2,6,8,-7,-1,-2,-8,8,10,-7,9,3,-7,-1,-8,2,1,-1,6,-9,-1,-4,5,-6,5,8,-1,-7,5,-9,3,6,-9,-4,-4,-4,7,6,9,8,7,-5,8,-9,9,9,-3,-7,-1,9,-3,2,2,-3,2,-2,-9,9,10,2,10,-3,-6,5,-1,-3,-9,6,5,-10,-3,7,-1,9,6,3,3,-9,8,4,-8,8,2,-9,-5,5,3,-10,-10,-10,-10,-4,-10,-10,7,-2,1,-4,-7,-1,4,-10,9,3,-9,-10,5,2,9,6,7,4,-9,4,-1,-8,-2,2,-10,-5,-6,-10,10,-8,5,6,-1,10,9,6,1,-5,-6,-6,-1,-7,-5,10,10,-4,-2,-7,-9,5,-2,-7,6,-6,8,1,3,8,7,-3,8,2,-8,-2,-7,-2,-9,2,1,-10,-9,10,-8,-10,-10,4,2,5,6,-6,8,3,-9,5,-4,10,-7,-5,-3,-2,2,9,1,-4,5,1,8,-1,1,-6,10,-10,8,-3,-4,4,-10,-10,10,9,5,-7,6,-9,-3,-3,3,-1,1,-4,9,-1,-4,2,-8,-7,1,-6,-3,5,10,-10,-1,7,-7,9,10,6,4,8,-9,2,1,6,-3,-2,8,7,5,3,5,-9,-3,-1,-3,6,-5,1,-8,-4,7,-3,7,6,4,-1,3,-7,5,3,8,1,10,1,-10,-9,10,3,2,9,-9,6,-10,-6,3,-4,-1,-6,8,8,-4,-4,9,-2,-7,8,1,7,8,-8,-5,4,1,6,9,7,3,6,1,6,8,3,9,-3,-5,2,5,-5,-5,-6,-7,6,6,-5,-1,-4,-4,-8,-9,1,-4,-4,-6,7,-10,-6,6,8,-5,9,-1,-4,-2,-7,5,-4,9,-8,-7,-8,8,3,-7,7,1,7,9,-6,-8,-1,-10,-2,3,6,6,6,-2,-9,-9,1,2,-1,-1,-1,9,-2,7,10,5,-1,-3,-7,7,4,-4,-5,2,7,-4,-2,8,-3,-9,4,-10,7,3,8,9,3,4,-10,-3,-2,3,1,-10,-6,-7,5,9,-9,-3,10,9,-7,-3,-1,-4,-5,-1,-10,-9,9,1,3,5,10,-1,2,-8,-4,6,9,-2,-8,-1,3,-5,7,-6,5,4,-9,-8,6,-2,8,8,7,-4,-1,3,6,-6,-3,-3,6,-4,4,-8,1,-3,-7,8,8,-10,6,5,-1,-5,5,-3,-7,8,10,-6,-7,1,7,-1,-1,8,-4,9,3,-2,-2,-9,-3,-4,4,-5,6,-4,-3,-2,6,2,-2,-7,-5,-3,-3,9,1,8,-3,6,-9,4,5,-8,7,-3,1,6,-9,2,-3,-6,4,10,7,7,-6,9,1,4,-5,9,-7,3,-7,-5,-8,5,-7,9,10,-9,9,10,5,-9,3,8,6,5,6,4,-5,6,-5,-5,1,3,-3,-1,7,9,-10,9,8,-9,-7,8,1,3,9,1,3,-9,5,3,1,-3,10,-9,7,3,-1,6,-7,8,-7,5,2,-4,-5,10,-2,-9,4,-1,5,5,-6,-8,1,6,-2,8,4,-1,-1,-5,4,5,1,1,7,4,10,-6,-5,-7,-3,10,-8,-6,-2,2,-8,-7,3,7,-5,-5,10,-4,-4,-1,-7,-4,-2,4,5,1,4,-2,-6,-9,9,-4,3,-3,10,-4,3,-1,-2,10,-10,-9,-8,1,2,-5,-2,-8,-10,4,5,6,-9,4,10,7,4,6,10,8,-7,-1,-5,-6,1,4,1,5,-6,9,4,8,5,2,1,-5,6,-7,-6,5,-6,-5,-6,5,1,8,2,-3,-9,-10,8,1,1,4,-3,-7,5,-6,-2,5,-6,9,10,-5,-9,-3,10,1,-2,-3,4,-3,-1,2,-9,7,3,-3,9,5,-3,-7,10,8,-2,6,8,7,-8,3,7,3,5,4,-4,-4,-7,9,6,9,8,-6,-7,-8,-1,2,-2,-9,-1,-2,1,-1,4,6,-9,10,2,-6,6,-4,6,6,-9,6,7,4,-4,6,4,10,9,-1,-5,-2,10,9,-1,3,-7,1,-6,1,9,8,1,9,9,3,-6,6,-2,-1,9,5,2,1,1,8,9,-5,7,2,-1,-9,-1,-2,-1,6,-6,5,6,-8,9,-7,5,9,-6,-5,6,-6,10,-2,1,-10,-8,7,-2,-3,10,-9,1,-6,-1,-6,6,3,-7,6,4,7,2,8,-10,4,10,-6,1,10,2,8,5,5,-8,-4,-8,4,6,3,-2,5,-10,3,-2,3,8,-3,7,-8,10,7,2,7,5,3,6,-7,10,8,-2,5,6,-4,-5,-8,-2,-2,-6,4,8,-7,9,1,-6,1,-3,10,6,2,6,-8,-3,-5,-9,2,-10,2,-5,-9,5,10,8,-9,6,8,9,10,-4,3,-6,1,-6,-5,7,3,-4,9,-5,-6,10,-10,-8,3,7,-7,10,1,10,-6,-10,8,2,-3,8,9,-3,-6,-1,-7,4,-3,2,2,-2,7,-9,-5,4,9,9,-9,7,7,4,-8,8,5,-9,-9,7,-2,-3,-9,-5,9,6,-6,3,3,-7,-6,-6,4,9,-4,-1,3,3,3,10,-10,1,-9,1,-2,7,-5,10,-6,-3,5,9,8,-8,8,4,-4,7,-9,-7,9,10,7,-5,9,5,2,10,6,2,7,5,10,5,10,-2,-8,-7,2,-9,-10,5,-10,3,-6,-3,2,4,-8,1,1,-1,6,5,9,-1,10,-10,-2,10,1,-10,-1,-5,3,9,1,-6,-7,5,7,-5,-3,-1,2,-4,5,6,-10,5,8,9,3,6,-6,-7,8,-10,-9,-7,-2,-1,-9,-3,9,4,3,7,-9,-9,6,8,6,-7,6,-5,9,5,5,8,-9,1,6,-9,3,-9,-2,4,-4,-4,-7,1,6,-5,-8,-5,5,-9,4,-5,-4,5,-3,7,-2,-10,-1,-6,-8,8,-3,-1,6,9,-7,-8,-3,8,-4,3,-7,6,3,5,-4,-7,5,-7,-7,-3,-3,5,8,1,-10,9,-7,-5,8,2,-4,-8,7,10,-2,-10,5,-10,-1,-4,-7,-10,7,-7,-7,4,-7,8,8,2,10,4,7,8,-6,1,-3,-10,-6,5,5,3,-4,8,9,-1,-1,-6,-8,8,-5,1,-10,10,7,9,7,-4,3,2,-3,2], dtype = "int16")#candidate|11136|(3840,)|const|int16
const_11137 = relay.const([-6,-3,2,5,-5,2,3,3,1,-4,-2,8,-10,8,-9,-2,-9,-1,-2,4,-3,5,8,-8,7,-4,10,4,5,5,4,-8,4,-5,6,-6,-8,7,-10,-4,8,7,-10,-9,2,8,1,10,-3,-4,6,10,-2,9,1,-10,-1,-4,-7,-7,-6,4,1,5,-8,-5,-10,8,9,5,-3,6,1,9,4,6,3,7,3,-9,10,9,8,-3,7,6,4,-7,3,-4,2,-7,1,8,-6,9,1,-8,-5,4,1,-3,-4,-10,4,8,-6,-2,8,1,7,4,5,-4,4,-2,2,2,4,4,7,-6,6,-10,-8,-2,10,-2,7,7,8,8,5,-7,-1,-10,3,-1,-4,7], dtype = "int32")#candidate|11137|(140,)|const|int32
call_11133 = relay.TupleGetItem(func_4183_call(relay.reshape(var_11134.astype('int32'), []), relay.reshape(var_11135.astype('bool'), [120,]), relay.reshape(const_11136.astype('int16'), [16, 240]), relay.reshape(const_11137.astype('int32'), [70, 2]), ), 3)
call_11138 = relay.TupleGetItem(func_4189_call(relay.reshape(var_11134.astype('int32'), []), relay.reshape(var_11135.astype('bool'), [120,]), relay.reshape(const_11136.astype('int16'), [16, 240]), relay.reshape(const_11137.astype('int32'), [70, 2]), ), 3)
output = relay.Tuple([call_11114,call_11133,var_11134,var_11135,const_11136,const_11137,])
output2 = relay.Tuple([call_11115,call_11138,var_11134,var_11135,const_11136,const_11137,])
func_11147 = relay.Function([var_11134,var_11135,], output)
mod['func_11147'] = func_11147
mod = relay.transform.InferType()(mod)
mutated_mod['func_11147'] = func_11147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11147_call = mutated_mod.get_global_var('func_11147')
var_11149 = relay.var("var_11149", dtype = "int32", shape = ())#candidate|11149|()|var|int32
var_11150 = relay.var("var_11150", dtype = "bool", shape = (120,))#candidate|11150|(120,)|var|bool
call_11148 = func_11147_call(var_11149,var_11150,)
output = call_11148
func_11151 = relay.Function([var_11149,var_11150,], output)
mutated_mod['func_11151'] = func_11151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7016_call = mod.get_global_var('func_7016')
func_7017_call = mutated_mod.get_global_var('func_7017')
call_11224 = func_7016_call()
call_11225 = func_7016_call()
uop_11238 = relay.sigmoid(call_11224.astype('float64')) # shape=(15, 5, 13)
uop_11240 = relay.sigmoid(call_11225.astype('float64')) # shape=(15, 5, 13)
func_4996_call = mod.get_global_var('func_4996')
func_4999_call = mutated_mod.get_global_var('func_4999')
const_11248 = relay.const([[-0.636167,-0.678999],[-4.276762,-5.105893],[-9.717130,4.904616],[-1.457506,9.938939],[-6.636272,1.066466],[-0.328375,-2.909191],[5.309065,4.068527],[3.174749,7.181487],[1.959333,7.712400],[-2.014375,6.076891],[8.519859,-1.294921],[-4.732662,5.824426],[1.187431,0.198096],[2.931138,-8.800679],[8.556652,-7.132236],[7.540676,9.486894],[-1.565261,-1.765790],[-7.390248,4.033480],[-3.681309,1.073136],[6.992239,5.247129],[0.925415,-0.020421],[-2.793056,-3.639616],[9.402755,-9.839567],[-3.706314,0.033852],[2.118972,6.603742],[6.933162,5.481813],[-3.093559,-9.007622],[-4.052511,3.962884],[5.817202,-0.984640],[-7.102896,8.521909],[5.228203,-1.415666],[9.475323,-9.306068],[1.169036,4.709794],[9.327538,-2.998361],[5.090681,5.716723],[-6.548922,-7.746763],[3.200484,4.478704],[9.882185,8.018323],[6.325305,-7.100262],[1.585142,2.051536],[0.029016,6.298111],[0.812438,-4.598633],[8.029575,-5.750076],[-8.693840,8.869321],[2.719676,7.475892],[7.954466,-2.066755],[-2.935822,-7.297425],[8.475329,-3.292476],[-0.002974,3.331793],[8.568370,-4.892477],[-7.005875,-9.028950],[7.865159,-0.824080],[9.300519,6.798969],[-3.798151,1.276645],[4.673971,-8.907786],[7.812286,0.463054],[-8.967218,1.768730],[-2.623045,-8.325016],[7.591058,-5.806409],[-1.620977,9.114434],[-7.318693,5.122339],[-1.065193,-1.959821],[-6.824809,2.473054],[4.837700,8.138357],[3.080116,-9.292767],[-2.320560,-5.292756],[2.183573,4.116910],[1.491407,0.220235],[5.092050,-3.848883],[0.142296,5.975333],[9.212108,8.995650],[2.471244,6.556307],[-2.451999,1.541522],[-7.008577,-4.248340],[-4.768497,-9.916168],[-5.266733,4.861640],[-6.736608,-3.116514],[-0.951979,2.279144],[-1.039887,1.780662],[0.010029,-2.451348],[-4.570400,-8.524337],[-9.998921,-2.105263],[-8.286482,-2.478775],[9.152123,3.612133],[-3.331909,7.443907],[0.491642,-3.728172],[-0.067881,-0.640039],[-2.225441,7.852007],[-6.119913,-7.279364],[-4.898444,3.891593],[7.931675,0.646342],[9.256830,-1.646575],[-1.564023,8.480534],[-5.196134,9.486820],[0.467327,-9.885994],[4.816397,-3.074195],[1.977278,-9.446935],[2.419118,6.501808],[5.116327,2.761069],[3.250377,-1.261478],[-9.460711,2.934064],[-4.780309,1.520826],[-7.769214,9.210416],[4.937935,8.023608],[-9.576550,-2.730226],[4.241199,-7.060796],[-4.945037,-5.440091],[0.400435,-8.763284],[-9.956904,-2.468604],[-0.119817,-6.635845],[5.336917,-7.591534],[1.707584,-8.956474],[3.014665,6.875199],[-0.345180,-9.842810],[-9.857359,-0.657083],[7.201850,2.993206],[-2.375563,-3.863273],[6.431551,-7.764691],[5.789743,3.504461],[-8.747195,-6.558598],[-5.119844,7.416150],[-1.277352,3.541618],[-7.227780,-0.431255],[-9.731859,9.521586],[-9.706816,-5.830506],[-3.553792,-7.998172],[8.513415,-2.092358],[1.164563,-0.977882],[-3.351881,-2.670418],[9.322355,4.053430],[6.504319,0.016064],[1.078563,7.103830],[2.741278,1.896797],[-7.877966,8.806097],[4.924860,8.017263],[-1.264121,-0.238712],[4.877009,8.290782],[7.232050,-5.187332],[9.129036,-5.796391],[-4.437342,-4.930695],[4.858923,1.850816],[7.484495,-5.064938],[-7.161067,-5.622789],[6.807181,-7.494127],[5.627326,6.714400],[-9.411470,-5.726747],[4.587860,6.583105],[-6.047099,8.769567],[3.699573,7.702857],[0.537128,-8.180518],[3.147663,5.852604],[6.395658,-5.618906],[7.083101,3.622694],[5.464724,8.025774],[7.921707,0.953188],[-0.112006,2.947651],[9.647493,6.570746],[-1.129550,0.266998],[-1.151184,-2.236984],[-1.855476,-5.202391],[-6.008149,8.610670],[2.731004,3.580721],[7.692859,-2.733321],[8.178817,-2.776187],[-2.106947,-3.706838],[8.677959,5.907862],[-6.870333,7.080233],[-3.626744,-1.494674],[-2.849867,-2.034216],[6.463718,-9.509915],[-5.629787,-4.944303],[-1.509664,4.736353],[-1.047419,-4.909774],[1.985048,5.961766],[3.278665,-5.538628],[7.477299,3.880767],[-5.523077,2.505158],[5.492463,6.430769],[4.833270,6.129893],[-8.040089,-0.278958],[-4.905635,-4.356153],[-7.190343,8.257602],[-6.295382,1.351365],[7.122886,5.282981],[1.759439,9.748453],[-1.506451,-4.166560],[-1.596961,-5.010724],[-2.031161,-7.830708],[4.021051,-9.855549],[-2.533983,2.003248],[4.655055,-8.298453],[1.020358,5.676527],[3.204865,4.546819],[4.414676,3.593391],[-0.778568,-9.130527],[-4.948172,2.322499],[7.373735,-8.818294],[-8.403610,-1.469088],[-5.535574,-6.104847],[6.263559,-7.116378],[-2.643897,-8.199848],[-9.124783,7.101009],[7.822242,3.460647],[-0.790984,5.981042],[5.964004,-9.807353],[-2.558440,1.985181],[6.317633,-9.073207],[0.233843,3.298667],[0.517216,7.253801],[7.270654,-6.299945],[-1.188981,9.231078],[-4.382841,-7.467916],[-0.422312,3.908880],[-0.573830,3.704152],[-6.271011,-7.210115],[4.596213,9.397307],[0.367967,-0.288847],[-3.104468,-7.142987],[-4.524248,5.302656],[-2.948161,-1.374837],[-2.202345,6.512942],[6.901893,4.387270],[8.717594,5.256332],[3.922408,0.664970],[-0.115454,-9.647449],[-0.739009,7.688599],[-0.301063,5.472250],[8.294249,4.716287],[-0.464436,-5.996016],[6.702618,3.541827],[2.505500,8.643716],[-5.764118,3.255027],[-8.263547,5.513487],[-4.786258,-4.327003],[7.047756,-3.088624],[2.923719,7.828080],[-7.012530,7.424801],[1.332890,-3.623086],[-9.828937,8.780409],[-2.464604,1.952713],[-5.853199,5.686429],[3.207539,8.755031],[-9.626302,7.269374],[9.011005,9.450061],[-8.027309,-3.830282],[8.141209,-9.415132],[-7.286810,-3.844959],[9.858278,-6.113429],[-4.431635,-3.979320],[8.069680,8.361685],[7.881061,5.292580],[0.682102,1.244393],[-3.459975,8.755730],[-6.373563,2.109348],[6.600209,-0.841410],[3.025850,6.486037],[-9.897383,5.524807],[5.967005,2.504323],[-1.748799,-4.473256],[4.887973,2.866782],[9.405191,-1.699410],[1.174784,-6.409333],[9.233400,2.221066],[9.596390,7.989138],[-4.767017,7.192697],[8.967070,7.045914],[-7.494125,3.625780],[6.491314,1.146398],[1.744209,-4.636162],[5.046948,9.624866],[9.412145,6.942516],[3.084011,0.527770],[7.742800,-6.213512],[6.848124,-0.105175],[8.924215,-9.499134],[3.699439,0.696943],[2.962863,5.952434],[-3.962977,2.367309],[5.440300,2.262914],[7.373834,-6.282308],[3.902776,5.283876],[-4.015869,-9.158424],[2.214854,-0.566795],[-9.039904,6.215651],[-2.257757,-3.915201],[-3.630631,-5.721750],[-6.100252,-4.422695],[-1.186867,2.123766],[0.225120,3.269979],[-7.828797,3.248443],[-2.385507,-1.895604],[1.191523,-8.178869],[-7.302318,9.712411],[-3.218907,-0.352329],[0.733509,3.447808],[-5.614389,0.905222],[0.214504,3.867482],[8.285529,-5.193940],[1.341317,-6.184814],[-4.850050,-1.265332],[-1.292231,5.502647],[4.858874,3.481753],[1.366851,4.821041],[7.383454,6.650199],[1.766102,7.590855],[-4.029936,-3.217930],[-2.308147,-8.355938],[7.226590,-0.291786],[-2.797601,-8.409132],[1.897814,-8.505298],[-0.475678,-5.634770],[9.884860,5.801085],[9.359135,8.892038],[-0.398116,7.714869],[-6.652114,2.752153],[-2.183580,2.209573],[-9.968935,-2.407236],[-0.645464,-8.729985],[-3.807892,-5.994156],[-6.840672,-9.045890],[-8.502502,5.871756],[4.194430,-0.826313],[1.122322,1.173473],[9.675662,-2.835498],[4.427985,5.792529],[-8.562417,-3.972040],[4.257251,-6.299929],[-4.765806,5.976232],[-0.112986,4.924632],[1.895529,2.952685],[-7.151937,-3.576296],[-7.634553,5.011936],[6.284486,6.388637],[-8.788760,9.967982],[-0.709823,5.569807],[-8.140002,-3.447631],[-7.214004,4.941142],[4.202998,-0.558696],[9.300349,0.098822],[3.735754,2.259684],[0.350119,-9.122405],[4.619655,3.503549],[6.911559,-6.192179],[8.585645,-7.009560],[0.481248,6.221831],[0.651422,-0.190188],[-1.643776,-9.210621],[-3.863257,6.325628],[-3.593399,9.090257],[4.483900,6.995662],[4.489811,-4.045449],[-1.336824,-3.321835],[-1.791574,-0.956762],[8.768508,8.108660],[-3.477943,-1.234791],[9.198601,1.035381],[4.317683,6.629474],[9.503716,-5.197379],[9.673564,-5.139157],[1.632318,4.564176],[-4.461393,6.518657],[-0.647094,-8.804721],[-0.081934,8.375475],[-1.421145,0.700114],[6.296373,-9.896027],[-4.701638,0.467650],[7.539440,1.386245],[0.897711,2.387530],[0.791877,9.423845],[1.427971,-7.535889],[-4.833345,3.676532],[-2.170012,7.547237],[-6.964339,1.162507],[-1.436450,-0.780047],[-9.500114,-4.798263],[-5.727680,8.829298],[7.873560,5.233148],[-4.696755,-5.896822],[4.576181,9.608563],[8.453760,0.614925],[-4.962183,-6.633281],[0.191848,5.756157],[-5.450512,7.503100],[3.428306,-6.703131],[-8.918745,3.452154],[-0.564735,5.750678],[2.153083,0.540942],[1.343252,-0.368550],[8.193905,-4.075929],[4.472595,-5.924464],[-5.639277,-7.032522],[2.591553,-4.184017],[-7.599800,-0.938750],[2.660207,-0.871211],[7.752623,9.100647],[-0.782635,-9.244125],[-1.975739,1.896604],[-2.644431,-3.740687],[3.263448,-3.071132],[9.693959,-1.383813],[-9.786128,-7.502022],[5.745525,5.154407],[3.213185,0.648953],[-1.423166,2.943162],[8.997507,1.630174],[3.803688,-3.158560],[-5.290820,2.390241],[4.663759,-1.153054],[-4.037274,6.626116],[7.638103,-5.843688],[-1.521398,2.694945],[-4.242920,1.773908],[3.840354,1.193478],[-6.167727,6.014927],[9.069089,3.337419],[2.156616,-2.548523],[-1.335179,2.418868],[-0.677394,-5.083215],[7.824595,-3.526383],[7.431547,5.726544],[-1.007797,8.350049],[-0.567603,1.060785],[6.831573,-6.234875],[-4.205103,-1.592598],[3.017519,6.887970],[-0.516947,-1.844638],[1.064374,3.506549],[-9.323295,4.878777],[4.693786,-8.796295],[6.981126,2.246945],[-8.081998,4.608207],[6.306061,0.301637],[3.125185,-5.620552],[2.402362,-8.454590],[3.385125,7.765886],[-3.886391,-1.335713],[1.680933,-2.432600],[2.463261,1.848184],[5.186959,-4.614905],[-8.343034,8.652259],[-4.251459,5.144462],[-8.995071,-8.668620],[4.200477,-4.815696],[-3.654726,-1.528718],[1.699978,8.853506],[-8.572173,-4.286340],[4.297620,-0.746869],[-3.148356,-0.310195],[-0.151689,-8.163414],[3.380612,-5.518457],[-6.626357,-5.145654],[-7.832431,-9.333438],[9.681860,-6.874493],[-8.876056,-5.879937],[5.434500,-9.304929],[-5.404468,2.437318],[-0.878619,-3.410899],[-8.039834,2.540584],[6.416059,-3.913756],[-4.346820,2.466220],[-5.220202,4.112611],[-0.854558,-9.515129],[9.344751,5.840955],[9.214932,-0.177754],[9.303531,7.825572],[7.580698,-1.389267],[0.611349,-0.557867],[-5.916048,6.871794],[3.516498,3.252401],[-7.644846,-4.567882],[-3.091998,-9.326189],[-8.971838,-6.535093],[7.125342,2.523481],[-1.238105,0.886864],[-5.033355,9.523025],[9.643461,0.032136],[9.491353,-2.759736],[5.484989,3.231539],[-9.852940,0.602665],[-4.096391,-3.039521],[-6.914420,2.715070],[-1.133269,-2.438822],[-1.097705,0.282414],[-5.882155,1.700848],[9.687956,-6.873597],[-5.654760,7.735014],[7.078129,3.635785],[-6.188895,5.761013],[8.407628,7.219426],[2.949761,8.829231],[2.238536,6.192443],[2.145555,3.842803],[-1.980582,9.401671],[-0.645374,9.028145],[-6.707444,5.519867],[2.692913,3.907092],[8.493007,-1.461267],[-2.503449,8.224805],[-5.976474,7.912833],[4.203803,-7.140340],[-5.387118,-8.827340],[-9.351628,-7.185061],[-1.256055,8.134830],[-3.169168,-9.601535],[7.830541,-9.125172],[-4.886987,9.828205],[-8.188712,8.133420],[-0.592550,4.339311],[9.172513,9.603041],[-2.449161,-1.322051],[8.683349,-5.036898],[-8.848512,-7.315987],[6.650229,8.208469],[-9.602672,-0.603310],[-4.811137,-0.460278],[9.805184,1.406359],[8.929740,0.088755],[0.067555,-7.895326],[8.330082,-8.152291],[6.935560,-6.683731],[-1.217363,6.261010],[-8.632764,4.620676],[3.669799,9.513506],[-8.353096,9.427955],[4.247691,0.713442],[7.353406,-1.212519],[-0.953173,-7.315539],[1.345276,-8.297400],[4.220010,-0.741274],[9.330076,-5.091243],[4.285506,4.221000],[-6.639096,2.779718],[7.358613,-4.099957],[-8.284084,-8.693756],[-1.646528,-3.899793],[0.410364,9.867454],[-5.922131,-3.886302],[5.883364,-0.860762],[1.430655,-1.832006],[6.165117,9.325475],[-4.606474,1.389312],[-1.727197,0.607405],[-7.263399,-9.508073],[-5.078739,-3.009218],[4.895296,-9.277292],[8.689930,4.849853],[0.618351,3.932602],[4.547782,3.656055],[-5.905999,-8.346751],[-6.956569,0.689843],[-1.923800,-4.325945],[7.024468,4.139773],[-4.810466,-9.040478],[7.367108,-2.503018],[4.830375,9.909879],[-7.292821,0.437910],[7.934424,-0.447062],[9.442465,-0.811045],[3.073632,8.254561],[-5.220423,-3.990593],[-0.899203,-1.591362],[-6.369757,-9.521097],[-9.159326,2.923148],[5.463226,-9.479356],[-8.826706,-3.997260],[-4.487105,4.757185],[-7.240228,1.026481],[-8.497030,5.726053],[-7.480158,-7.016032],[-6.736926,-6.163215],[-2.915205,5.071516],[-9.854762,-7.256440],[-3.969937,6.175401],[4.454531,5.244589],[9.484326,-7.903311],[-7.347273,-6.915203],[-2.435838,1.538741],[-7.814887,5.715290],[3.876891,-8.694796],[-9.591712,7.992219],[9.045833,-8.965420],[5.199993,-3.691387],[-3.213873,-7.555659],[-8.322022,2.993557],[5.945808,6.312431],[-5.996829,-9.328455],[-8.836086,-1.263903],[6.865159,8.658894],[-7.427474,-6.331662],[2.035504,-3.442958],[3.270167,-0.197888],[5.128887,-7.989789],[9.854777,-5.814105],[9.265314,2.265015],[4.410150,-4.128670],[7.041916,-5.732215],[5.499012,-1.039682],[1.322286,-3.692659],[1.146750,6.031434],[-0.372626,-8.152737],[1.636819,-2.110515],[6.752592,-4.046989],[9.788307,-3.276325],[3.280972,-8.421405],[2.430026,0.861805],[1.998981,6.503893],[5.535025,8.032914],[7.876584,8.843484],[1.202014,0.714280],[0.374899,9.810393],[-0.035717,-5.652789],[-0.394727,8.696123],[6.012676,5.637067],[-7.206503,3.187977],[4.279226,-9.959868],[-2.183587,1.250328],[2.058059,7.317972],[8.092809,7.120588],[-4.463359,1.338110],[-2.305396,-4.679702],[0.204896,-8.233109],[-6.206534,3.205657],[-9.643873,-1.575203],[2.835484,-2.324422],[-0.565802,-1.511021],[5.001082,-0.433554],[2.992295,-2.637812],[-5.361166,4.573931],[-2.352868,9.174940],[8.046332,-9.684460],[-4.927018,7.189020],[8.397522,-3.586093],[4.400990,7.434546],[-9.889630,-9.892584],[9.361738,3.589289],[9.826114,4.926611],[-9.049934,-0.256367],[-3.368195,-2.603696],[-3.082137,-6.369779],[3.360821,2.743066],[4.927481,1.322121],[-2.881768,9.995680],[4.791238,7.882573],[0.062761,-8.927281],[-3.492929,-5.351162],[-5.200449,4.834881],[-4.038899,-7.346275],[0.014490,-9.318579],[-5.413379,-8.576480],[9.421612,-4.825164],[1.235243,4.630331],[-3.962128,-1.770255],[-5.501469,6.403930],[4.115345,8.298110],[1.193077,-3.072657],[-4.145286,0.736340],[-2.667599,5.728542],[-2.841623,-5.722112],[-3.633926,-1.109354],[-5.874856,0.657137],[9.484513,3.453909],[6.485529,-7.493472],[-9.680578,4.818751],[6.890239,4.100122],[9.080454,1.189287],[-0.316351,7.544375],[0.364207,2.969165],[-8.739909,6.936055],[-1.261701,2.402039],[3.491868,-7.800641],[-7.248992,-3.736552],[-9.080024,6.208445],[5.734930,8.437438],[4.113771,-6.080255],[8.475098,-0.006766],[-7.462104,6.271059],[-3.541669,-9.925212],[0.927043,7.205517],[3.348759,7.587800],[8.405365,4.149535],[-8.755595,-0.455717],[3.478678,-0.099779],[-5.625616,-0.940653],[-3.417968,6.314283],[-9.658213,5.395655],[-9.756975,6.544047],[-2.859193,-9.552330],[-8.733734,-1.257081],[-1.031191,-7.979085],[4.819302,-7.000905],[9.820722,-4.478843],[5.945074,-1.928737],[-7.544847,8.148231],[-6.867503,-7.621878],[5.367536,-3.178365],[-1.844765,-7.907477],[9.056875,-0.284071],[-1.420286,-3.662508],[5.437414,4.201225],[6.993852,4.277000],[3.779908,-6.576808],[4.717824,8.232830],[2.563364,-9.142872],[-1.446316,6.155541],[6.504952,3.138476],[-7.053685,0.297858],[-9.114725,-5.112117],[-9.870771,6.552191],[-9.084715,4.163622],[-0.803290,0.776721],[-1.682109,1.555566],[-8.484860,-7.702051],[-9.004055,0.576457],[-6.672085,0.509538],[-6.126840,-5.249263],[1.043664,-2.313484],[5.439764,2.163863],[-4.137246,-6.839321],[1.130815,-0.222700],[-2.049506,3.810877],[-8.457518,1.335432],[-1.850491,6.790217],[3.683661,6.543652],[-4.805995,-4.661607],[-0.420997,4.175978],[-2.949034,3.613111],[-3.131088,-6.357070],[2.204365,8.167415],[-7.526594,-7.582959],[4.052467,5.113249],[2.741477,2.375089],[2.385379,3.285447],[-4.944032,-8.964825],[-2.750551,-7.216436],[8.278204,7.094342],[-7.557882,-3.390660],[-3.218018,2.573440],[4.019359,-2.434818],[-8.455731,-4.698429],[4.060446,3.807945],[-4.039107,2.995198],[3.297048,4.836902],[-2.377863,7.622286],[-5.436458,0.674569],[-9.388537,-5.332151],[-4.334052,-6.336806],[7.814863,-7.707698],[9.204889,-0.261983],[5.974733,-0.738820],[7.741009,-4.258546],[8.313492,-3.895405],[8.740640,-1.884501],[4.984621,7.777530],[9.643657,-6.035069],[-2.703806,7.286366],[-7.846336,-7.634118],[8.985347,-9.322817],[-7.485851,-0.878733],[3.736885,1.808870],[0.667630,-1.183078],[2.852336,-8.162167],[-2.749478,2.952406],[2.651373,-5.918837],[-8.062429,3.312954],[2.859761,-3.678163],[-6.115531,0.721580],[8.674062,8.537927],[-4.169761,6.001039],[9.272361,-7.044125],[-3.968350,7.043145],[2.361518,4.321801],[-3.784493,0.552019],[3.362991,7.116303],[6.459142,3.755119],[-2.837615,1.340941],[-8.258617,-9.553079],[-6.472962,5.057859],[-4.571224,-1.999215],[-8.223026,4.167194],[-6.677403,3.247424],[-8.884853,-6.405323],[0.922394,-8.654007],[-6.579355,8.273706],[2.200633,-5.863019],[-6.114509,-7.881992],[-9.764875,-8.000709],[2.657130,7.113584],[9.672739,7.195355],[-6.075640,6.767067],[4.676010,6.473042],[1.227873,-3.069030],[-3.463396,-0.701118],[7.322239,5.756592],[1.650932,-8.380168],[1.637990,-7.662572],[-4.970058,-7.387723],[9.947217,1.044548],[1.920795,-9.968858],[7.205007,3.119368],[-1.574451,-8.358979],[3.957542,9.916086],[-6.845592,0.117720],[-8.610408,-6.091092],[3.430441,1.162925],[-4.116892,6.698003],[5.199622,-6.165812],[-5.480004,-4.831907],[6.902856,-8.794251],[-1.829448,6.983731],[-2.581442,-2.815937],[-4.101439,5.256430],[0.306049,9.300124],[7.026334,8.619572],[-8.014468,5.462224],[-5.151771,5.802267],[1.489171,-3.035934],[-1.323099,-1.805232],[-9.552347,5.895062],[9.416567,-8.333734],[2.687340,-9.189303],[-7.554032,7.636475],[4.604266,5.660141],[-0.727304,4.222500],[5.912393,0.170029],[7.058351,-6.767526],[-7.212629,-1.934654],[-0.955781,-8.351600],[-8.356574,9.786789],[-4.083532,-0.976127],[2.882811,0.908580],[-5.308672,8.509563],[-5.112899,5.718295],[-6.300440,1.205110],[4.157567,-3.677978],[-9.471939,6.112277],[3.398822,8.420633],[0.003989,5.265967],[-0.872243,-3.701864],[8.123181,-9.060441],[-8.209199,6.053685],[2.547739,4.782418],[3.279587,-0.941093],[-3.567738,-6.458648],[-1.808969,-1.672273],[8.463553,4.475992],[-1.989248,2.282429],[0.914021,-9.150101],[2.209861,2.077421],[-7.381671,-3.834074],[-0.602930,-2.596303],[-9.031648,4.127697],[-2.882825,2.000051],[7.420314,4.588514],[-9.989892,-3.986255],[-0.532282,-8.976406],[-5.444481,-5.870427],[-9.216307,-0.780641],[-9.019037,-9.849740],[-7.726694,5.894019],[0.450734,-9.520031],[7.648794,-8.459078],[-8.855153,-6.065423],[1.183811,2.840709],[-7.359474,5.869410],[-5.076377,1.013149],[-8.285077,4.148338],[8.469847,9.334913],[9.596132,-8.916563],[-4.030469,4.124374],[9.435277,5.518007],[-0.068845,-5.142916],[9.685396,8.984103],[-4.059102,-2.594081],[-0.236646,9.574436],[-6.498540,-4.674799],[-9.126669,9.260679],[-3.751417,-1.458947],[-6.993237,-6.452386],[-1.266728,4.911679],[-5.410296,0.250040],[9.452473,3.201247],[3.498906,-5.602916],[-0.679816,-9.744251],[8.679596,5.907102],[-6.720333,1.732494],[5.481001,5.111123],[-9.746394,2.859133],[9.465253,2.805289],[-4.507212,2.256308],[1.667792,-8.159884],[-0.310914,6.865815],[-0.418747,3.916968],[-8.483412,0.328607],[0.732064,1.043606],[6.390312,-0.890754],[2.864510,2.365317],[4.249720,2.327492],[-1.510284,-1.384086],[-2.895226,-8.586390],[-1.016179,0.504579],[-3.900211,-4.542892],[3.733372,-5.316718],[2.234958,-9.683251],[-3.525439,-2.333396],[-3.903247,6.072726],[1.862909,1.716142],[9.082682,-1.000160],[-3.792702,-4.751386],[-4.565525,-3.169065],[-4.697828,-4.119940],[0.377748,-1.216215],[2.902348,2.855371],[-1.989245,-2.601846],[-5.820226,-2.281100],[-4.183487,6.545377],[-9.764379,4.052982],[9.105575,6.140882],[-2.649028,8.994857],[-6.413270,-1.716343],[-9.383392,6.025140],[-5.290216,5.041440],[6.969137,-9.629917],[-4.308175,-0.531003],[8.558086,-2.231828],[3.148177,-6.769631],[3.728948,-8.149838],[6.848491,4.288623],[-9.832576,-3.861716],[6.503974,-6.147589],[9.976166,-8.248925],[-0.466268,0.709519],[-9.924895,-0.459882],[1.100354,-0.608619],[-5.589164,-6.205867],[0.212832,-2.895344],[-9.504905,-4.783362],[-2.767098,-4.618480],[7.053950,7.012124],[-5.348432,1.507086],[-5.417167,-5.889037],[-5.582310,7.273684],[2.117710,-7.675228],[3.642057,1.834500],[0.619825,6.845580],[-8.940758,-5.338249],[-8.741388,4.219749],[-5.371426,-7.556194],[1.851330,-4.061297],[9.722654,-6.160772],[1.521172,5.720403],[8.530626,-3.876958],[-0.855556,-9.157976],[7.186956,-4.401434],[8.273751,-8.388412],[-1.547513,-0.409084],[-9.842481,5.607893],[-5.430435,-0.444596],[-2.176242,2.885398],[-1.137264,-9.583753],[0.458247,4.230413],[7.814645,2.607231],[-9.574594,-7.866346],[-3.229250,-7.618614],[5.518628,-1.693770],[8.688907,6.958195],[-2.917799,-8.498183],[-9.556405,7.185880],[4.192763,3.485301],[-9.258965,2.643700],[-2.511295,0.743166],[7.591119,1.830252],[8.786044,-2.708234],[1.966717,-4.324163],[-5.510486,-8.251990],[3.318539,3.819117],[2.321748,-4.601646],[1.671189,-6.950449],[4.242603,-3.017232],[9.211384,-0.720189],[0.280327,8.540865],[-0.823827,-4.987759],[-2.403586,-6.549866],[-2.638154,6.197236],[-4.270549,9.383315],[0.959249,5.287897],[0.060393,9.211042],[-0.227226,6.965301],[0.679845,-7.884548],[-1.431641,-0.783998],[8.997661,-8.272973],[-7.474586,3.134965],[9.900913,-3.419657],[-8.134080,-4.244427],[4.646555,-8.261414],[7.156866,8.598260],[9.304128,-1.775319],[-0.002297,-3.409889],[7.868349,3.264762],[-6.806174,-8.515211],[4.631846,1.231202],[8.880835,1.841181],[9.528347,-6.383180],[2.085711,8.002510],[7.128048,-6.727371],[2.606273,0.291764],[-8.220737,-8.983006],[-6.402800,-2.239961],[-2.326855,1.724090],[3.572448,-3.515800],[1.028827,5.558307],[7.776583,1.033766],[5.077038,-6.465393],[-9.812176,9.579654],[9.405786,-3.578634],[9.691449,2.772477],[-4.702557,4.366929],[-9.612534,-8.546461],[-7.436743,-6.091675],[0.878502,-4.624741],[-7.378328,4.795750],[-6.376682,1.655935],[-4.236191,7.297866],[-8.392325,2.334358],[-0.027340,8.556675],[2.228197,-8.288970],[4.872170,7.964185],[-8.617073,7.759728],[-2.069050,1.913735],[-2.384328,-9.607490],[-7.760138,-6.365362],[7.687923,8.472561],[-5.998259,-3.125837],[9.802646,4.901435],[3.322537,8.716900],[-2.019425,-9.931634],[4.155614,1.235273],[-9.252609,-8.159232],[-0.106060,-1.635250],[6.592924,0.395019],[-9.411084,9.168611],[-3.609539,-8.542090],[9.202752,9.427468],[3.949845,-6.289149],[0.281988,-4.035342],[-4.119764,3.612579],[6.128691,-8.850384],[1.973613,-6.545699],[8.806621,7.793998],[-5.753389,0.033520],[3.138867,3.520145],[7.707368,1.050783],[6.713069,-4.353791],[4.814679,-1.812502],[4.413214,5.050366],[-4.177876,-8.846085],[5.368099,0.041820],[-7.642831,8.542854],[2.010962,-6.032114],[-9.498736,-5.080898],[5.362432,0.353666],[-7.211315,0.380567],[-3.887090,-2.251117],[-6.454891,-0.076028],[5.754634,2.491383],[2.931289,0.077171],[1.677219,3.219221],[-8.943157,0.304269],[-5.017728,-4.479848],[1.017780,3.772630],[-8.369279,-3.899707],[-9.185263,-8.699905],[4.141976,1.048233],[-3.239639,4.745665],[-4.632950,5.628667],[-1.110633,-9.245209],[-7.761541,9.940561],[-1.493880,4.867334],[4.302429,4.565124],[4.949513,0.370411],[8.590684,0.104583],[3.138127,5.226269],[4.344544,-8.776495],[-2.063593,-6.979299],[2.992003,-2.183855],[-7.040552,-9.281235],[9.933151,-2.229265],[6.430138,7.932046],[-4.693910,-1.437872],[-2.862999,-5.547710],[3.395647,9.372834],[6.509833,-8.594830],[-7.392082,0.906223],[-7.365799,-0.444906],[7.147497,-7.752068],[-5.306298,-0.067709],[-9.960583,-8.288322],[-4.757154,-5.707828],[-0.082814,5.660789],[-0.344542,-9.176147],[-0.041987,3.611103],[-0.488127,2.875635],[-5.142442,-0.496504],[7.232596,-3.171952],[-1.667103,-0.232061],[0.838563,-3.992825],[5.815765,8.917580],[3.410293,-7.254214],[0.579369,-5.476700],[3.329731,-3.362451],[-5.501877,-4.622919],[6.434797,8.562695],[8.398413,-8.517837],[2.921271,-8.665381],[8.776075,-3.064453],[-7.977091,-5.895325],[-3.081576,6.318940],[-1.083252,-1.311163],[-8.931144,1.773753],[2.220138,9.026246],[-9.858580,2.256052],[-7.790277,-1.114008],[5.709009,-7.411536],[3.926678,-5.346981],[-9.849319,7.172278],[0.086326,5.558529],[-7.389837,2.505171],[9.206623,5.634718],[-4.743724,0.740854],[-4.874168,-5.486455],[-9.530690,4.847952],[-2.172358,-2.754748],[4.502455,3.238400],[0.845184,6.103645],[3.071020,6.357885],[3.081246,8.995997],[1.711665,4.042782],[-4.530027,5.691414],[-4.250258,5.704799],[-6.064426,1.558056],[6.205933,-0.013498],[2.753832,5.473447],[-0.334235,-5.656636],[9.047710,-2.335185],[-9.210954,-1.393469],[1.958368,-6.473410],[0.481146,-7.570269],[5.175749,5.462101],[4.708210,0.531395],[7.827888,7.222325],[5.912400,-1.049629],[2.014846,6.208172],[-5.609127,7.491266]], dtype = "float64")#candidate|11248|(1152, 2)|const|float64
call_11247 = relay.TupleGetItem(func_4996_call(relay.reshape(const_11248.astype('float64'), [12, 16, 12])), 0)
call_11249 = relay.TupleGetItem(func_4999_call(relay.reshape(const_11248.astype('float64'), [12, 16, 12])), 0)
output = relay.Tuple([uop_11238,call_11247,const_11248,])
output2 = relay.Tuple([uop_11240,call_11249,const_11248,])
func_11253 = relay.Function([], output)
mod['func_11253'] = func_11253
mod = relay.transform.InferType()(mod)
mutated_mod['func_11253'] = func_11253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11253_call = mutated_mod.get_global_var('func_11253')
call_11254 = func_11253_call()
output = call_11254
func_11255 = relay.Function([], output)
mutated_mod['func_11255'] = func_11255
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11345 = relay.var("var_11345", dtype = "uint32", shape = (4, 5, 10))#candidate|11345|(4, 5, 10)|var|uint32
var_11346 = relay.var("var_11346", dtype = "uint32", shape = (4, 5, 10))#candidate|11346|(4, 5, 10)|var|uint32
bop_11347 = relay.greater(var_11345.astype('bool'), relay.reshape(var_11346.astype('bool'), relay.shape_of(var_11345))) # shape=(4, 5, 10)
func_7795_call = mod.get_global_var('func_7795')
func_7797_call = mutated_mod.get_global_var('func_7797')
call_11350 = func_7795_call()
call_11351 = func_7795_call()
uop_11354 = relay.exp(bop_11347.astype('float64')) # shape=(4, 5, 10)
uop_11360 = relay.erf(var_11345.astype('float32')) # shape=(4, 5, 10)
output = relay.Tuple([call_11350,uop_11354,uop_11360,])
output2 = relay.Tuple([call_11351,uop_11354,uop_11360,])
func_11366 = relay.Function([var_11345,var_11346,], output)
mod['func_11366'] = func_11366
mod = relay.transform.InferType()(mod)
mutated_mod['func_11366'] = func_11366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11366_call = mutated_mod.get_global_var('func_11366')
var_11368 = relay.var("var_11368", dtype = "uint32", shape = (4, 5, 10))#candidate|11368|(4, 5, 10)|var|uint32
var_11369 = relay.var("var_11369", dtype = "uint32", shape = (4, 5, 10))#candidate|11369|(4, 5, 10)|var|uint32
call_11367 = func_11366_call(var_11368,var_11369,)
output = call_11367
func_11370 = relay.Function([var_11368,var_11369,], output)
mutated_mod['func_11370'] = func_11370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10016_call = mod.get_global_var('func_10016')
func_10017_call = mutated_mod.get_global_var('func_10017')
call_11380 = relay.TupleGetItem(func_10016_call(), 3)
call_11381 = relay.TupleGetItem(func_10017_call(), 3)
output = call_11380
output2 = call_11381
func_11397 = relay.Function([], output)
mod['func_11397'] = func_11397
mod = relay.transform.InferType()(mod)
mutated_mod['func_11397'] = func_11397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11397_call = mutated_mod.get_global_var('func_11397')
call_11398 = func_11397_call()
output = call_11398
func_11399 = relay.Function([], output)
mutated_mod['func_11399'] = func_11399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8389_call = mod.get_global_var('func_8389')
func_8390_call = mutated_mod.get_global_var('func_8390')
call_11514 = func_8389_call()
call_11515 = func_8389_call()
uop_11516 = relay.atan(call_11514.astype('float64')) # shape=(6, 20)
uop_11518 = relay.atan(call_11515.astype('float64')) # shape=(6, 20)
output = relay.Tuple([uop_11516,])
output2 = relay.Tuple([uop_11518,])
func_11519 = relay.Function([], output)
mod['func_11519'] = func_11519
mod = relay.transform.InferType()(mod)
mutated_mod['func_11519'] = func_11519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11519_call = mutated_mod.get_global_var('func_11519')
call_11520 = func_11519_call()
output = call_11520
func_11521 = relay.Function([], output)
mutated_mod['func_11521'] = func_11521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9243_call = mod.get_global_var('func_9243')
func_9245_call = mutated_mod.get_global_var('func_9245')
call_11545 = relay.TupleGetItem(func_9243_call(), 0)
call_11546 = relay.TupleGetItem(func_9245_call(), 0)
func_4303_call = mod.get_global_var('func_4303')
func_4306_call = mutated_mod.get_global_var('func_4306')
var_11554 = relay.var("var_11554", dtype = "uint32", shape = (18,))#candidate|11554|(18,)|var|uint32
const_11555 = relay.const([-8,8,-9,5,-5,-8,-9,1,1,4,9,2,-1,3,10,-9,-9,8,3,5,-8,-10,9,4,1,6,7,1,-10,-7,-10,-1,-3,-9,2,4,-7,8,8,-6,9,1,1,-8,-8,-3,1,-7,3,-1,-10,-7,-1,-2], dtype = "uint32")#candidate|11555|(54,)|const|uint32
call_11553 = func_4303_call(relay.reshape(var_11554.astype('uint32'), [1, 6, 3]), relay.reshape(const_11555.astype('uint32'), [3, 6, 3]), )
call_11556 = func_4303_call(relay.reshape(var_11554.astype('uint32'), [1, 6, 3]), relay.reshape(const_11555.astype('uint32'), [3, 6, 3]), )
output = relay.Tuple([call_11545,call_11553,var_11554,const_11555,])
output2 = relay.Tuple([call_11546,call_11556,var_11554,const_11555,])
func_11563 = relay.Function([var_11554,], output)
mod['func_11563'] = func_11563
mod = relay.transform.InferType()(mod)
var_11564 = relay.var("var_11564", dtype = "uint32", shape = (18,))#candidate|11564|(18,)|var|uint32
output = func_11563(var_11564)
func_11565 = relay.Function([var_11564], output)
mutated_mod['func_11565'] = func_11565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10763_call = mod.get_global_var('func_10763')
func_10764_call = mutated_mod.get_global_var('func_10764')
call_11659 = relay.TupleGetItem(func_10763_call(), 1)
call_11660 = relay.TupleGetItem(func_10764_call(), 1)
var_11667 = relay.var("var_11667", dtype = "bool", shape = (11, 10, 10))#candidate|11667|(11, 10, 10)|var|bool
bop_11668 = relay.multiply(call_11659.astype('float32'), relay.reshape(var_11667.astype('float32'), relay.shape_of(call_11659))) # shape=(11, 10, 10)
bop_11671 = relay.multiply(call_11660.astype('float32'), relay.reshape(var_11667.astype('float32'), relay.shape_of(call_11660))) # shape=(11, 10, 10)
output = relay.Tuple([bop_11668,])
output2 = relay.Tuple([bop_11671,])
F = relay.Function([var_11667,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11667,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_1122 = relay.var("var_1122", dtype = "int32", shape = ())#candidate|1122|()|var|int32
const_1123 = relay.const([[[-6,-1,-7,-2,-1,-3],[9,7,-10,-8,-8,5],[-4,2,1,-1,8,1],[-1,6,-6,-6,-6,10],[1,2,8,-5,-10,-4],[-7,-8,-6,-2,6,8],[7,-8,9,9,-3,-1],[8,-3,-5,9,-1,8],[-8,4,-10,-5,-8,-10],[-10,-7,9,3,-6,-6],[-5,-6,4,4,6,-7],[2,-3,-4,7,1,-6],[-4,10,7,-4,2,9],[-5,9,10,-10,-7,-3],[6,-4,4,1,-1,9]],[[-8,-2,-2,-8,3,8],[5,-6,-1,-5,10,5],[-1,3,7,10,4,6],[3,3,-3,-9,-1,1],[5,10,-5,-1,-3,-6],[8,-8,10,-10,-9,-10],[6,-9,4,10,3,-9],[8,5,-4,-6,9,-5],[-7,5,-8,8,-2,-2],[6,10,-5,-10,-8,-6],[5,5,3,6,-4,8],[4,7,-5,-4,2,-2],[2,-2,6,3,8,-7],[7,-5,-2,3,10,-2],[9,-6,2,10,2,2]],[[-7,-9,-2,-8,-8,10],[-5,-6,4,-2,5,-4],[7,-1,-5,5,8,9],[-10,1,-9,8,5,-10],[3,10,1,-5,1,7],[6,9,8,8,-6,-4],[9,10,-7,10,4,5],[5,4,-5,1,-3,-7],[-10,-8,3,1,5,3],[6,9,-5,-5,-6,8],[2,-3,2,5,-7,6],[5,4,-1,-2,-2,8],[7,10,4,5,7,-10],[-1,3,-10,-10,8,-6],[10,-7,9,10,9,-9]],[[7,-1,-3,-5,8,4],[7,-4,7,6,-8,-2],[8,-2,3,2,-7,-6],[3,-7,-9,10,7,3],[-8,3,-3,2,10,-2],[5,-3,-6,5,10,2],[-2,-7,10,5,2,1],[-5,-9,-9,8,-7,-8],[-9,4,-2,-1,1,-5],[2,7,8,-9,3,7],[-1,7,7,-10,-8,-10],[-1,7,8,10,-10,4],[-7,10,-3,3,6,-1],[-7,3,-7,6,-1,9],[4,1,-8,-3,-8,-6]],[[-4,6,-1,2,9,-3],[-6,4,3,1,3,-3],[-7,-6,9,-7,-1,10],[-9,1,-10,4,-7,-7],[2,-8,-10,-7,-5,-3],[5,7,2,-7,2,10],[-6,1,-5,-2,6,3],[10,2,-3,10,-4,3],[4,6,-9,1,-3,7],[-1,-6,-10,1,-8,-5],[-8,8,-2,8,10,4],[-2,-7,7,2,4,5],[6,-3,-10,7,3,-10],[8,-1,-3,10,-1,-10],[-2,8,-10,-1,10,-1]],[[2,8,5,10,-9,-2],[5,-8,10,7,-2,-9],[8,7,5,8,-5,-3],[-8,4,6,-10,7,-9],[7,10,-1,-10,-10,-6],[-6,-2,-3,-1,-10,8],[10,-6,5,-7,-1,2],[5,-10,-10,8,3,6],[7,-8,-4,-2,4,5],[-5,-4,9,-10,-9,-9],[-9,4,9,1,-9,4],[7,8,-5,-3,-5,-7],[-2,-9,9,9,-7,1],[2,3,-3,5,-2,-3],[7,-7,2,5,3,4]],[[-3,2,-5,7,5,7],[8,7,-6,-9,6,-3],[2,-2,-5,-8,9,-8],[3,10,-9,5,10,1],[10,-8,6,5,-1,-4],[3,-5,-2,-7,-2,2],[-5,-1,6,-2,2,3],[1,-7,-4,9,2,2],[-8,-8,7,2,-6,-8],[4,9,9,-5,1,-5],[4,-4,9,-2,-4,-7],[-10,-2,1,9,3,-5],[-1,5,4,-8,-3,3],[-6,-8,5,3,4,4],[-7,-5,2,-3,10,-6]]], dtype = "int32")#candidate|1123|(7, 15, 6)|const|int32
bop_1124 = relay.bitwise_and(var_1122.astype('int32'), const_1123.astype('int32')) # shape=(7, 15, 6)
output = relay.Tuple([bop_1124,])
output2 = relay.Tuple([bop_1124,])
func_1131 = relay.Function([var_1122,], output)
mod['func_1131'] = func_1131
mod = relay.transform.InferType()(mod)
mutated_mod['func_1131'] = func_1131
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1132 = relay.var("var_1132", dtype = "int32", shape = ())#candidate|1132|()|var|int32
func_1131_call = mutated_mod.get_global_var('func_1131')
call_1133 = func_1131_call(var_1132)
output = call_1133
func_1134 = relay.Function([var_1132], output)
mutated_mod['func_1134'] = func_1134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1455 = relay.var("var_1455", dtype = "int32", shape = ())#candidate|1455|()|var|int32
var_1456 = relay.var("var_1456", dtype = "int32", shape = (9, 1, 9))#candidate|1456|(9, 1, 9)|var|int32
bop_1457 = relay.bitwise_xor(var_1455.astype('int32'), var_1456.astype('int32')) # shape=(9, 1, 9)
func_1131_call = mod.get_global_var('func_1131')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_1472 = relay.TupleGetItem(func_1131_call(relay.reshape(var_1455.astype('int32'), [])), 0)
call_1473 = relay.TupleGetItem(func_1134_call(relay.reshape(var_1455.astype('int32'), [])), 0)
func_1131_call = mod.get_global_var('func_1131')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_1494 = relay.TupleGetItem(func_1131_call(relay.reshape(var_1455.astype('int32'), [])), 0)
call_1495 = relay.TupleGetItem(func_1134_call(relay.reshape(var_1455.astype('int32'), [])), 0)
uop_1496 = relay.log2(call_1472.astype('float64')) # shape=(7, 15, 6)
uop_1498 = relay.log2(call_1473.astype('float64')) # shape=(7, 15, 6)
func_1131_call = mod.get_global_var('func_1131')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_1502 = relay.TupleGetItem(func_1131_call(relay.reshape(var_1455.astype('int32'), [])), 0)
call_1503 = relay.TupleGetItem(func_1134_call(relay.reshape(var_1455.astype('int32'), [])), 0)
output = relay.Tuple([bop_1457,call_1494,uop_1496,call_1502,])
output2 = relay.Tuple([bop_1457,call_1495,uop_1498,call_1503,])
func_1504 = relay.Function([var_1455,var_1456,], output)
mod['func_1504'] = func_1504
mod = relay.transform.InferType()(mod)
mutated_mod['func_1504'] = func_1504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1504_call = mutated_mod.get_global_var('func_1504')
var_1506 = relay.var("var_1506", dtype = "int32", shape = ())#candidate|1506|()|var|int32
var_1507 = relay.var("var_1507", dtype = "int32", shape = (9, 1, 9))#candidate|1507|(9, 1, 9)|var|int32
call_1505 = func_1504_call(var_1506,var_1507,)
output = call_1505
func_1508 = relay.Function([var_1506,var_1507,], output)
mutated_mod['func_1508'] = func_1508
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1697 = relay.var("var_1697", dtype = "float32", shape = (9, 10, 7))#candidate|1697|(9, 10, 7)|var|float32
uop_1698 = relay.rsqrt(var_1697.astype('float32')) # shape=(9, 10, 7)
output = relay.Tuple([uop_1698,])
output2 = relay.Tuple([uop_1698,])
func_1700 = relay.Function([var_1697,], output)
mod['func_1700'] = func_1700
mod = relay.transform.InferType()(mod)
mutated_mod['func_1700'] = func_1700
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1701 = relay.var("var_1701", dtype = "float32", shape = (9, 10, 7))#candidate|1701|(9, 10, 7)|var|float32
func_1700_call = mutated_mod.get_global_var('func_1700')
call_1702 = func_1700_call(var_1701)
output = call_1702
func_1703 = relay.Function([var_1701], output)
mutated_mod['func_1703'] = func_1703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1815 = relay.var("var_1815", dtype = "bool", shape = ())#candidate|1815|()|var|bool
var_1816 = relay.var("var_1816", dtype = "bool", shape = (11, 5, 7))#candidate|1816|(11, 5, 7)|var|bool
bop_1817 = relay.logical_and(var_1815.astype('bool'), var_1816.astype('bool')) # shape=(11, 5, 7)
func_1131_call = mod.get_global_var('func_1131')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_1828 = relay.TupleGetItem(func_1131_call(relay.reshape(var_1815.astype('int32'), [])), 0)
call_1829 = relay.TupleGetItem(func_1134_call(relay.reshape(var_1815.astype('int32'), [])), 0)
uop_1850 = relay.sinh(call_1828.astype('float32')) # shape=(7, 15, 6)
uop_1852 = relay.sinh(call_1829.astype('float32')) # shape=(7, 15, 6)
output = relay.Tuple([bop_1817,uop_1850,])
output2 = relay.Tuple([bop_1817,uop_1852,])
func_1870 = relay.Function([var_1815,var_1816,], output)
mod['func_1870'] = func_1870
mod = relay.transform.InferType()(mod)
mutated_mod['func_1870'] = func_1870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1870_call = mutated_mod.get_global_var('func_1870')
var_1872 = relay.var("var_1872", dtype = "bool", shape = ())#candidate|1872|()|var|bool
var_1873 = relay.var("var_1873", dtype = "bool", shape = (11, 5, 7))#candidate|1873|(11, 5, 7)|var|bool
call_1871 = func_1870_call(var_1872,var_1873,)
output = call_1871
func_1874 = relay.Function([var_1872,var_1873,], output)
mutated_mod['func_1874'] = func_1874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2078 = relay.var("var_2078", dtype = "int8", shape = ())#candidate|2078|()|var|int8
var_2079 = relay.var("var_2079", dtype = "int8", shape = (15, 1, 5))#candidate|2079|(15, 1, 5)|var|int8
bop_2080 = relay.right_shift(var_2078.astype('int8'), var_2079.astype('int8')) # shape=(15, 1, 5)
func_1870_call = mod.get_global_var('func_1870')
func_1874_call = mutated_mod.get_global_var('func_1874')
var_2084 = relay.var("var_2084", dtype = "bool", shape = (385,))#candidate|2084|(385,)|var|bool
call_2083 = relay.TupleGetItem(func_1870_call(relay.reshape(var_2078.astype('bool'), []), relay.reshape(var_2084.astype('bool'), [11, 5, 7]), ), 0)
call_2085 = relay.TupleGetItem(func_1874_call(relay.reshape(var_2078.astype('bool'), []), relay.reshape(var_2084.astype('bool'), [11, 5, 7]), ), 0)
func_1700_call = mod.get_global_var('func_1700')
func_1703_call = mutated_mod.get_global_var('func_1703')
const_2087 = relay.const([-0.101502,1.592758,8.290029,3.498685,-7.353952,-5.794763,1.987474,-8.468511,-9.496425,-9.996596,-0.900095,2.049765,-4.545022,-0.503764,-3.666610,5.359394,2.205226,8.957448,4.561453,-1.830255,6.589368,9.755503,0.482610,-2.586715,-5.706082,7.060031,-9.118015,-1.105650,-9.858423,4.981118,2.530662,1.252433,1.006916,-6.118903,-7.137748,-2.706077,8.216193,-4.830035,8.282286,-9.010145,1.961485,-7.724136,-0.406919,-3.637846,-8.249895,-3.871996,-8.197388,-5.755045,-8.267972,1.122433,1.612825,-0.572046,4.489699,7.656833,4.514875,-5.189236,-5.573827,4.880405,8.061934,5.308234,4.484769,2.712977,-0.470739,1.512683,-3.486669,9.730017,-1.219390,-7.916659,-9.029965,-5.297449,-8.287776,-5.386113,7.621524,5.274851,8.535297,-2.314784,-9.878392,9.520222,2.372063,3.277617,1.518166,-6.573706,-2.619421,3.383185,-6.677692,1.608945,-5.466395,4.228508,8.240752,-9.316387,-7.853466,6.546109,-2.660117,3.729834,7.841497,-6.302420,3.044741,-7.127646,5.734194,-3.153940,1.952226,-6.467311,3.600555,2.704712,8.579252,3.999050,5.464594,-9.010841,2.487168,2.434269,2.841884,6.614269,-1.915221,-5.442628,3.877572,-9.895431,-8.390975,-6.248864,-8.500439,-1.663252,7.843566,0.836456,-4.208036,4.443225,7.913500,-4.755216,-7.803307,5.670015,3.265363,-6.103803,-4.660794,2.185158,-2.603660,-9.334669,-2.808230,-6.141097,4.331508,-7.812628,0.574077,9.893272,-5.455142,4.515631,-6.083357,-2.763873,4.595320,-8.613019,5.813430,-6.433380,-8.346681,-4.347436,-1.196372,-1.466313,8.207676,7.983776,-8.420965,8.017393,0.585641,1.396479,-1.452072,8.806462,3.064450,4.573034,-4.262661,-5.240052,9.402344,4.697770,1.571430,4.225320,-5.009967,4.707494,0.524606,0.673859,-9.974977,-2.088086,-7.559103,-7.184318,-5.795435,-2.624827,9.960411,1.690106,-9.085310,-3.001523,-4.602081,-9.770950,6.428847,-0.171694,-4.516440,7.738775,-3.501793,2.938471,0.395177,-0.028547,-7.820569,-5.331488,3.860550,-8.095569,-8.567001,7.263997,-0.560049,1.962096,-4.912402,-4.994533,-4.510393,9.143873,-1.116447,8.866061,-4.300621,8.670329,7.983741,-5.968586,5.388617,-9.172130,-9.060153,-3.992144,3.662092,-7.951688,0.434762,-4.964505,-1.756013,0.481623,1.205843,-1.065936,-6.272851,-5.838487,-7.625425,4.477990,2.018313,5.917363,0.697790,-0.292616,-6.819523,-6.390749,1.264719,3.202477,-8.879447,-2.867453,6.694505,5.977803,-4.622652,4.200865,0.007940,-7.387629,-1.240173,-2.527441,-7.228736,-0.327734,0.595638,-9.280096,-3.660273,-5.825738,-5.206732,-7.941889,1.480642,-8.240560,6.043020,-3.136773,-7.415014,9.575870,5.326341,-7.537035,-2.518697,-0.299195,-7.928287,-5.804458,-9.901394,5.703605,-2.992589,-3.721657,-5.307123,7.240343,1.074933,-0.769831,6.933610,-6.640711,5.774241,-5.680239,-7.034642,5.162642,2.786254,0.666625,-0.542658,7.147087,-8.149860,-5.558441,-9.052760,-6.821508,-6.401885,1.763101,-3.375487,-9.046663,-7.156346,8.787775,3.837674,6.533354,-2.787663,-5.591866,-1.235563,2.951111,0.539247,0.237541,-3.831493,1.429870,-4.742654,-5.508714,2.986567,-9.333408,6.861937,-4.437034,-5.417445,8.273684,-8.205319,8.337519,1.275435,5.325429,-3.448659,-1.473190,-8.727485,8.205825,-1.684565,2.270171,-5.160562,-7.833218,1.034848,-3.960761,-9.217380,-7.435514,7.012547,2.637787,4.868649,-8.653966,7.529794,-5.175810,-0.786557,-9.772927,7.311153,-0.934992,0.765482,3.092495,5.156586,-5.203780,0.553615,-3.098699,-2.078545,-3.166128,-5.129903,-3.592203,8.184733,8.973133,-7.758225,0.279780,8.387171,-3.032318,-6.663535,4.892891,1.180948,1.202278,4.990582,-5.420444,-0.852253,1.017879,3.971536,-3.432860,-5.610749,-2.973649,-5.324232,-5.131825,-0.134897,-5.154417,-5.238090,-5.449453,-5.603522,-1.137900,-5.862430,6.966363,3.209222,5.873063,-9.734522,-2.843168,-8.175499,-8.122873,-5.870058,-7.709909,4.158579,1.215584,2.921028,2.487456,7.990880,1.642195,-3.445916,-9.506729,4.961355,-4.727610,-3.888617,-8.608921,-4.215131,3.011532,4.547249,7.644346,-5.511466,-2.069004,-1.919960,3.723102,9.902457,1.484640,-0.981399,-8.125814,-0.649666,3.488435,8.294881,2.543152,-0.275130,-4.236444,-3.635512,-2.479083,-2.301366,-8.608360,9.551624,-8.608174,-8.999145,-4.035346,-5.007948,-3.211696,-1.758261,5.779289,8.159008,1.563812,7.572253,2.657582,3.175268,-9.718213,-2.104411,-9.937631,8.347087,3.872498,3.012719,-9.495531,-7.018296,-6.878447,-8.930765,-1.361640,-4.276344,-5.217409,7.137467,8.805904,9.493654,-0.865833,4.923186,0.908972,8.109425,-6.042655,7.729980,-4.284614,-5.478054,-3.789718,-0.479535,-0.644081,-1.120452,-7.593932,7.395161,-8.856310,-6.582717,-3.011362,2.919290,-6.469550,-2.483064,7.639727,9.055260,9.716339,-6.139274,-5.197074,-7.871034,0.347712,1.514171,-6.779603,-9.624731,-6.127385,4.227894,-0.219342,-3.965633,-0.775612,5.532151,-2.757567,6.636615,-7.501133,5.089371,3.000175,-6.230135,-0.803814,-1.694318,-7.517089,9.816589,2.908158,9.423955,-0.736747,-0.406051,5.903608,-4.637572,-5.827574,1.952817,-8.481383,-4.151669,1.814369,-9.670464,-0.699510,-1.918148,8.499370,9.713379,3.535628,-3.165718,6.283097,-5.902327,2.696597,-9.993118,-0.617299,-7.102389,8.156618,-2.712476,9.366142,-2.392887,-4.511448,-1.869939,8.464496,-3.443878,6.755398,-0.255263,-2.224986,6.545468,4.389815,4.452980,9.892600,-3.103059,-9.161346,7.826626,-4.824936,-4.374595,4.562016,-0.261997,-0.919616,9.014668,-9.796686,-3.950103,-6.089556,-7.435378,-5.342004,1.419218,9.738146,-2.937064,7.002585,-0.557598,3.721783,-9.094999,2.898148,5.169392,7.325875,8.892845,-0.914916,-6.692988,6.083812,1.330531,1.500200,-4.443431,-6.618406,-3.441700,-3.299482,8.028964,6.147412,-5.006406,3.477569,4.507835,-0.623164,-1.143477,-5.850536,7.378581,8.117220,1.520706,-7.973447,3.987302,-1.400816,-2.379717,-8.054023,5.495134,6.420033,4.081583,9.685341,7.113434,1.230363,1.801910,4.615101,-7.713237,6.216121,2.254286,9.326160,-1.310795,-5.053638,-2.735231,6.137191,5.928577,-8.677225,0.119333,5.056936,1.639913,-6.858461,-5.245650,-0.331790,-1.220016,3.478628,7.382922,-4.941135,-4.941386,-6.037709,-8.464763,-8.999795,-8.437963,-9.416513,5.918074,-2.765956,-8.717263,7.561449,-0.314252,5.058066,5.056830,-4.634636,6.092366,-0.510662,-5.969045,5.418958,-1.013955,-9.889565,-8.222172,-8.986054], dtype = "float32")#candidate|2087|(630,)|const|float32
call_2086 = relay.TupleGetItem(func_1700_call(relay.reshape(const_2087.astype('float32'), [9, 10, 7])), 0)
call_2088 = relay.TupleGetItem(func_1703_call(relay.reshape(const_2087.astype('float32'), [9, 10, 7])), 0)
output = relay.Tuple([bop_2080,call_2083,var_2084,call_2086,const_2087,])
output2 = relay.Tuple([bop_2080,call_2085,var_2084,call_2088,const_2087,])
func_2094 = relay.Function([var_2078,var_2079,var_2084,], output)
mod['func_2094'] = func_2094
mod = relay.transform.InferType()(mod)
mutated_mod['func_2094'] = func_2094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2094_call = mutated_mod.get_global_var('func_2094')
var_2096 = relay.var("var_2096", dtype = "int8", shape = ())#candidate|2096|()|var|int8
var_2097 = relay.var("var_2097", dtype = "int8", shape = (15, 1, 5))#candidate|2097|(15, 1, 5)|var|int8
var_2098 = relay.var("var_2098", dtype = "bool", shape = (385,))#candidate|2098|(385,)|var|bool
call_2095 = func_2094_call(var_2096,var_2097,var_2098,)
output = call_2095
func_2099 = relay.Function([var_2096,var_2097,var_2098,], output)
mutated_mod['func_2099'] = func_2099
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2665 = relay.var("var_2665", dtype = "float32", shape = (10, 13, 12))#candidate|2665|(10, 13, 12)|var|float32
uop_2666 = relay.log10(var_2665.astype('float32')) # shape=(10, 13, 12)
func_2094_call = mod.get_global_var('func_2094')
func_2099_call = mutated_mod.get_global_var('func_2099')
const_2682 = relay.const(-1, dtype = "int8")#candidate|2682|()|const|int8
const_2683 = relay.const([[-6,4,7,-9,-7,10,-8,3,2,-7,-5,4,4,2,5],[-1,-10,-2,-3,3,-7,-7,-3,7,2,-8,8,1,-3,2],[-8,10,9,7,3,4,-1,9,1,-9,-9,-4,-1,1,-7],[-4,9,4,-8,-10,9,2,-6,5,-4,-10,3,10,-8,-8],[5,9,5,-1,-2,-3,6,-4,4,-2,6,-1,-8,3,-5]], dtype = "int8")#candidate|2683|(5, 15)|const|int8
const_2684 = relay.const([True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True], dtype = "bool")#candidate|2684|(385,)|const|bool
call_2681 = relay.TupleGetItem(func_2094_call(relay.reshape(const_2682.astype('int8'), []), relay.reshape(const_2683.astype('int8'), [15, 1, 5]), relay.reshape(const_2684.astype('bool'), [385,]), ), 4)
call_2685 = relay.TupleGetItem(func_2099_call(relay.reshape(const_2682.astype('int8'), []), relay.reshape(const_2683.astype('int8'), [15, 1, 5]), relay.reshape(const_2684.astype('bool'), [385,]), ), 4)
output = relay.Tuple([uop_2666,call_2681,const_2682,const_2683,const_2684,])
output2 = relay.Tuple([uop_2666,call_2685,const_2682,const_2683,const_2684,])
func_2694 = relay.Function([var_2665,], output)
mod['func_2694'] = func_2694
mod = relay.transform.InferType()(mod)
var_2695 = relay.var("var_2695", dtype = "float32", shape = (10, 13, 12))#candidate|2695|(10, 13, 12)|var|float32
output = func_2694(var_2695)
func_2696 = relay.Function([var_2695], output)
mutated_mod['func_2696'] = func_2696
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2949 = relay.var("var_2949", dtype = "float32", shape = (13, 11, 5))#candidate|2949|(13, 11, 5)|var|float32
uop_2950 = relay.atanh(var_2949.astype('float32')) # shape=(13, 11, 5)
func_1504_call = mod.get_global_var('func_1504')
func_1508_call = mutated_mod.get_global_var('func_1508')
const_2956 = relay.const(-10, dtype = "int32")#candidate|2956|()|const|int32
var_2957 = relay.var("var_2957", dtype = "int32", shape = (81,))#candidate|2957|(81,)|var|int32
call_2955 = relay.TupleGetItem(func_1504_call(relay.reshape(const_2956.astype('int32'), []), relay.reshape(var_2957.astype('int32'), [9, 1, 9]), ), 3)
call_2958 = relay.TupleGetItem(func_1508_call(relay.reshape(const_2956.astype('int32'), []), relay.reshape(var_2957.astype('int32'), [9, 1, 9]), ), 3)
uop_2967 = relay.cosh(uop_2950.astype('float64')) # shape=(13, 11, 5)
bop_2979 = relay.equal(uop_2967.astype('bool'), relay.reshape(uop_2950.astype('bool'), relay.shape_of(uop_2967))) # shape=(13, 11, 5)
func_1131_call = mod.get_global_var('func_1131')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_2990 = relay.TupleGetItem(func_1131_call(relay.reshape(const_2956.astype('int32'), [])), 0)
call_2991 = relay.TupleGetItem(func_1134_call(relay.reshape(const_2956.astype('int32'), [])), 0)
uop_2995 = relay.log(uop_2967.astype('float64')) # shape=(13, 11, 5)
func_1504_call = mod.get_global_var('func_1504')
func_1508_call = mutated_mod.get_global_var('func_1508')
call_3005 = relay.TupleGetItem(func_1504_call(relay.reshape(const_2956.astype('int32'), []), relay.reshape(var_2957.astype('int32'), [9, 1, 9]), ), 2)
call_3006 = relay.TupleGetItem(func_1508_call(relay.reshape(const_2956.astype('int32'), []), relay.reshape(var_2957.astype('int32'), [9, 1, 9]), ), 2)
func_2094_call = mod.get_global_var('func_2094')
func_2099_call = mutated_mod.get_global_var('func_2099')
var_3013 = relay.var("var_3013", dtype = "int8", shape = (15, 5))#candidate|3013|(15, 5)|var|int8
var_3014 = relay.var("var_3014", dtype = "bool", shape = (385,))#candidate|3014|(385,)|var|bool
call_3012 = relay.TupleGetItem(func_2094_call(relay.reshape(const_2956.astype('int8'), []), relay.reshape(var_3013.astype('int8'), [15, 1, 5]), relay.reshape(var_3014.astype('bool'), [385,]), ), 3)
call_3015 = relay.TupleGetItem(func_2099_call(relay.reshape(const_2956.astype('int8'), []), relay.reshape(var_3013.astype('int8'), [15, 1, 5]), relay.reshape(var_3014.astype('bool'), [385,]), ), 3)
func_2694_call = mod.get_global_var('func_2694')
func_2696_call = mutated_mod.get_global_var('func_2696')
const_3033 = relay.const([[-8.342608,-4.949512,7.141714,0.756403,-8.048157,-5.217604,-1.117003,3.206726,-9.566729,8.033251,-7.242485,-0.711294,-1.006740,4.604446,0.914444,-2.057205,-5.057974,6.370815,-1.654185,-6.104826,6.987979,-9.125304,-0.960305,-8.420235,5.922750,7.414415,9.632088,-3.124807,3.201403,-6.560523,2.137872,-0.142591,-9.607762,0.774714,5.948221,9.796762,-9.683796,-6.620257,1.252078,0.960387,7.261748,-1.091984,4.660599,-1.792772,-9.388488,7.889161,5.085879,9.766830,6.457408,-6.835899,-4.313591,-5.591741,7.028463,-2.292153,1.270696,2.196537,-6.043929,0.299733,0.491959,-6.654123,0.235140,0.185728,8.734529,-5.090068,-8.916516,6.602964,-6.764358,5.635791,5.969170,8.530854,-7.748891,6.957487,-3.967457,-8.132356,-0.732138,-7.044021,-1.665787,-9.777226,-4.749479,-4.319585,4.453455,-0.061714,1.578543,8.591842,3.727504,8.165934,3.527994,-4.889208,-5.117554,5.503958,8.262238,-7.490085,-5.577441,5.511001,9.818843,0.156139,-0.752423,-6.974393,3.735881,-5.215772,-3.145242,-7.397390,-3.898268,-3.800734,7.539314,2.892525,9.366334,-3.331846,-5.136448,-6.583624,-9.851854,-5.454524,1.212887,-8.766458,-7.001348,8.507391,0.707025,-0.998302,-1.699139,-7.900661,1.608378,-9.305285,7.037822,-0.525487,4.627703,2.264205,-2.967981,-5.364409,-3.835827,-8.672057,2.686834,-3.478495,-3.704090,-9.875208,9.437637,-0.184318,-2.889786,0.505529,-1.125110,0.157631,-6.061658,2.927538,-7.505076,2.848245,-4.271713,6.445507,5.355162,-1.386871,-3.638929,9.208033,5.606849,-7.951958,-6.228832,1.018182,2.670937,-7.553932,5.252577,-0.590721,6.085521,3.270115,-9.364026,0.060594,-6.914314,3.537666,-4.945272,-7.842695,-0.830324,1.813407,-2.902893,6.271228,6.902582,8.631983,3.041310,-3.935361,6.876784,0.833597,-3.412386,-1.076231,-5.642708,-6.754745,-5.143798,1.318812,9.279926,7.209667,5.830896,-2.306952,2.135945,-6.320455,9.844035,9.995002,-3.200436,-0.972310,-4.322661,6.492025,-7.055222,8.794458,-3.831878,-8.093933,-6.030034,9.534380,-6.158115,-9.365092,9.374718,6.040007,-6.973772,-1.355758,4.890300,6.534370,3.302320,-2.393822,-3.689858,-3.393468,-6.619292,5.824866,-2.934791,6.254021,-5.174515,-5.289906,-9.248667,-3.910346,1.776296,3.866030,-3.823284,-9.284596,1.196156,5.188962,-8.178188,-1.503300,-3.095037,4.500796,-6.193537,-1.667250,5.375007,-6.145304,-3.121684,-6.943422,0.809769,-5.289509,-5.688459,5.406211,8.381199,-2.406603,-3.624648,4.388064,-4.534745,-4.254288,2.770777,9.609558,4.175531,-6.911389,-5.214204,1.425801,-1.738245,1.503854,-9.054850,-1.459426,-4.322330,-0.692721,3.710020,8.941079,-0.517119,-5.261346,-4.947646,-0.543006,3.711272,3.007129,2.006602,-0.302268,-6.242868,0.655682,-0.533182,4.678523,-7.201021,-0.014387,2.439853,6.570711,6.533786,8.563087,4.065752,5.807671,-5.791497,-7.215863,-2.177993,4.778608,7.450324,1.463506,-1.573279,-8.602369,-6.928725,-7.505474,-1.730553,-2.152817,4.841630,-1.811227,6.254632,0.154783,-4.267141,-8.196712,-7.689168,-6.493288,-5.104293,-0.241744,-4.133440,4.114717,4.046512,-0.843246,3.482334,1.561302,-0.540516,5.849718,0.343228,5.981670,-7.709607,-4.324186,6.309245,-1.064100,2.801249,-9.277230,6.251334,-5.735534,0.553979,3.875615,0.560771,8.703798,-5.896048,-7.552394,5.178392,4.464482,8.072508,7.507169,-8.518769,-3.812842,-4.761853,0.407681,-9.629003,-2.368899,-7.548905,-8.860418,-7.449597,9.222491,-7.425090,-6.222161,5.430171,0.638505,-5.083828,8.086990,5.091302,-5.737824,-1.710910,8.200383,8.950996,-7.490001,5.896165,-5.400987,-3.288553,-2.398666,0.268647,3.048230,6.055944,9.619190,2.512938,-3.364358,-9.727296,-3.216315,3.488081,5.173620,0.951754,-0.089407,-7.575713,-8.541713,7.257679,3.480616,3.968126,2.140429,7.459236,-1.996710,-7.056215,6.001370,1.034597,9.954882,-4.619443,-6.852423,6.239875,-3.296627,0.483666,-2.901489,-9.366079,6.844153,-1.552348,-8.221830,0.292387,-9.316501,0.609986,-9.940176,2.009816,7.585401,-6.969968,2.766032,7.917271,8.324708,-3.832006,8.814730,2.461810,9.242626,8.825263,3.301028,-5.322809,-2.765994,-7.906986,5.651038,8.412714,9.391977,-3.132639,5.582211,-8.514420,-2.322373,-6.449350,0.139497,-8.321080,-2.737287,-1.008378,-5.496022,4.921815,1.347669,5.209283,-7.752976,8.121045,-8.827372,-0.527052,5.949177,-8.004252,-9.824022,1.906265,-8.075089,-0.600177,-4.909725,-6.442065,5.427967,3.176428,0.528274,8.433844,8.559246,2.653760,-5.393826,7.453355,2.086926,4.967039,2.493320,1.320924,-7.062348,-5.893763,8.580854,1.463040,-9.047995,0.609130,9.143634,8.586578,8.766165,-9.559670,0.188681,-8.304803,0.595495,-7.561346,-1.803180,-0.369200,9.528465,3.048875,-7.891826,5.541445,-9.669903,-8.050217,-5.361352,-0.300071,5.672241,1.188691,8.110470,7.126700,-2.681164,2.770376,1.697319,8.860344,-3.895564,2.124208,-8.289263,3.834047,1.205143,-9.386372,-6.553727,-6.780775,-6.188291,-9.166374,1.418624,-5.078342,5.763646,-4.764840,-7.627919,6.919158,8.958475,1.479792,2.301052,-9.619448,-9.365046,-0.843364,1.341274,-1.878600,5.643154,0.013138,-3.601994,-5.939659,2.749205,3.927857,-0.858132,-3.874791,0.103395,8.684369,6.764265,-9.630449,4.691437,-2.511914,6.121144,-8.436517,9.960590,7.761044,6.388231,3.664955,-1.218737,-5.419508,2.771133,-1.794840,-2.203868,9.521547,9.714218,-0.362837,4.296429,-1.459269,7.536874,7.048177,-2.869399,4.290936,-0.312214,8.213241,6.790809,9.452430,-8.841449,4.478311,-3.887341,-5.183677,-9.827059,-1.128869,6.531512,-9.579747,3.747713,2.776999,-0.887112,0.148807,7.631783,-2.343029,7.204159,0.012369,1.731935,-2.996289,-6.355348,-2.883938,4.150204,-1.426509,0.113550,-6.766266,-6.872356,-3.700607,-3.319954,2.986299,-6.137098,-4.875541,4.890704,-1.342811,-9.755399,-3.400657,3.767634,-9.220068,3.148934,-4.310582,6.702416,1.155576,-9.126192,5.908264,-5.089861,9.752660,-9.787331,-8.574081,5.997309,-0.651288,5.079566,-8.604689,8.981556,-5.268010,8.587711,0.218963,0.328802,-7.775292,0.222481,-2.852978,-1.477474,-7.844228,5.117052,5.451329,7.486158,-6.595263,-3.713854,-5.040412,3.448138,7.866401,8.364304,-2.507873,3.383310,-9.709946,-2.753328,-5.428682,-0.980039,8.629282,6.485324,5.964484,-3.159794,-9.764800,-5.958831,0.228212,0.968264,5.182634,9.808386,0.737728,-4.493294,8.584796,-8.683568,-1.517675,8.744683,-6.968341,-3.516888,4.277514,1.721240,4.398654,-8.954206,-5.092896,0.790433,-0.162065,3.187796,-7.196180,-0.205412,-6.164395,1.990162,3.152107,-0.388282,-9.463409,8.747724,4.386870,4.073930,1.535597,8.185838,0.212393,6.944263,-0.950566,6.050818,-9.371094,-6.365433,-2.536693,4.796580,-8.045952,8.837430,-2.415871,5.070652,4.269641,6.006982,-6.312382,-4.386837,7.125859,-1.722797,-5.465804,-5.529084,2.839566,1.875151,9.535355,0.982590,-4.887636,-2.874184,-7.840008,4.635377,-1.455544,-9.222396,8.777939,-1.226511,-0.085361,-6.190383,-1.326403,3.236037,-7.175177,7.496719,-3.566589,1.251313,5.553312,1.276071,7.198607,6.465450,5.217622,8.045320,9.321622,-4.681815,-4.002300,-4.837797,7.177047,-2.099009,1.100959,6.909729,-7.322914,-3.172801,-9.408716,8.667019,-5.736096,2.737910,-3.716729,2.366495,-8.218204,8.199736,-5.959906,1.534122,-3.670712,3.354414,1.847500,9.961401,-7.705347,0.100168,5.637872,-0.725548,-2.460596,-2.266029,-5.662550,-5.710021,0.302490,7.343627,7.186823,1.341102,-6.447161,3.771225,-2.980264,-1.398690,1.057030,2.190010,-1.455933,-1.990012,-6.780122,-8.009609,-1.990009,1.359413,-3.652786,-9.250072,-0.139959,7.735573,-1.210374,-8.540867,9.417491,9.247827,5.392305,-6.607572,1.044076,-6.588656,2.665477,-1.327092,5.818397,6.790682,4.148714,9.476408,9.034101,-8.662799,-8.049164,-0.430646,8.125453,-3.328241,9.094930,6.562350,3.181675,-7.865616,-1.419485,1.915339,-7.992657,9.908711,-4.183715,2.257779,-5.978041,6.459178,8.976911,-9.948417,-5.234880,6.388548,4.440910,-6.275842,-4.867809,6.652090,7.550284,-6.674040,5.597799,5.392040,-5.564746,-2.174443,1.559554,5.043163,5.938985,0.688763,-4.627274,6.623398,5.764550,6.013956,-7.660168,-7.814207,1.962436,-1.782029,0.178831,-4.499820,-8.453992,-2.284652,-9.321568,-7.583609,1.945386,0.755927,-6.745092,-8.256311,-3.085746,2.536527,-3.400631,0.287812,-3.605595,4.588794,4.137777,-2.091496,-9.778139,8.876166,-8.770909,-2.888080,-2.633588,-4.666343,9.590963,-6.941507,-9.569203,-1.036640,-9.405973,-6.436546,5.961776,-7.627526,9.839612,1.294208,0.316172,-4.575890,-1.175456,7.165951,5.783169,-0.751993,-4.174792,-9.201310,-2.071042,-2.178473,-4.241365,-2.266352,-0.451634,7.160298,8.143286,8.239272,3.478627,-3.766419,-8.620096,-6.282907,9.881036,-3.356380,-7.590416,-9.272403,-6.774717,3.239454,4.561860,-3.541856,-3.229144,5.696111,-3.028401,-6.609399,7.021201,-6.994004,-3.575105,1.371626,8.091122,-5.734272,-0.737779,-9.044160,0.740667,-2.629707,0.614442,-9.825477,-5.030395,4.013411,-5.882510,-3.654372,4.739814,1.605636,-8.707362,8.902235,6.046412,6.935569,7.595308,-1.295635,4.929874,4.374979,8.395261,-2.547693,-1.451123,2.917594,9.180637,-5.654429,-8.374770,-2.632899,-6.579063,-4.181916,4.714533,9.074145,0.175122,9.680520,-5.128905,-3.386679,-8.306754,9.307195,-0.738657,6.529931,8.342942,-7.571927,-1.172658,-7.798105,7.655511,-4.694267,-3.842651,8.412876,1.665724,-1.999447,6.556746,8.163018,1.855386,-7.854182,4.539595,3.127686,7.242828,-1.156097,-9.838882,-5.057501,5.177324,2.002540,9.737076,-2.139872,3.945320,-3.827401,2.495766,6.005183,3.548304,-4.512012,3.528992,1.374039,-2.133165,-7.021045,-1.355676,-1.020695,4.877575,5.754330,-6.667325,1.675893,-4.756836,-2.678768,-3.812288,-6.749005,-7.779304,-9.261179,-3.154526,-4.549697,-3.124657,8.211384,-1.850095,-1.864749,5.592927,-4.429771,0.489375,-3.709332,6.787654,8.232860,-7.302361,3.317762,5.257437,-1.302907,4.238663,-2.819258,-8.108709,-2.275239,5.719220,-4.959496,-0.670060,-2.840134,4.986104,2.788134,3.730878,-7.158376,-5.795628,-0.230025,0.989171,1.494965,-0.115542,-4.353846,-7.573215,2.763369,-4.880611,-5.513109,-6.504914,-3.219227,0.207086,-3.858571,8.326356,-4.267319,2.318796,7.275231,-7.558897,1.999613,-4.210443,0.877717,3.996219,-5.287287,-1.986945,-1.922294,1.264019,-9.849168,4.806070,0.910599,8.220662,-2.610447,1.642047,-7.895016,0.685671,-3.732045,7.109011,-9.165211,-5.745964,-4.128664,4.192427,6.765151,-1.818568,-3.407712,-0.377026,-5.569887,3.053813,-1.798369,-5.721431,-1.167396,6.408950,5.223075,-8.068845,4.753037,-6.018255,-7.053272,-5.721015,-5.579388,3.179069,-6.185324,-7.716373,-9.273448,-3.001724,-0.742449,9.297359,-9.477474,5.289077,2.769722,9.140101,-2.508881,7.929501,1.388701,-2.773060,-1.167143,-4.735293,-4.657676,0.294563,6.576833,1.376359,-0.053170,-0.657695,0.906306,-0.376509,-8.456094,2.002466,9.350396,1.757144,0.561565,-9.009548,6.197029,-7.665436,7.100325,-8.019062,5.950840,6.402581,-1.593158,-5.305211,7.498654,1.574498,-4.412856,0.935981,8.473640,4.168575,-7.118254,-2.383611,-2.246689,4.451529,-1.249613,-7.082350,-8.923118,3.667742,-1.531820,-4.999856,-8.242963,1.804529,9.251736,-5.881746,0.229817,0.246635,9.851268,5.184292,-2.350984,6.677305,1.963054,6.711543,7.313559,-5.918294,-5.913103,-7.251357,-0.915700,-7.281569,-5.825397,-0.805252,-0.120298,7.178273,7.851825,3.350728,-3.402707,-6.816964,7.917625,3.480932,-3.731539,-4.525470,-5.920857,7.967698,-6.747664,-1.516837,-7.812095,-9.023579,-7.702317,-3.432499,-7.512797,-6.848031,2.674519,-6.976960,-2.821776,5.802654,-6.881526,2.856205,-1.193813,5.610871,-0.331258,6.659102,4.869101,4.903488,-6.503066,3.548840,-0.373239,5.227493,0.115855,-0.967691,1.360719,-5.283597,8.361094,-7.117455,8.422398,-0.790918,-3.124922,-8.456510,9.528822,4.377660,-0.675468,-4.798045,-1.305478,-9.727074,-0.792800,4.606165,-2.106335,7.603612,-9.274615,-4.336718,0.056919,7.740474,-4.289165,5.997950,-2.826612,1.098555,-7.301586,9.039926,3.851321,-7.529054,-3.079932,0.380647,3.006775,-0.375619,5.555520,4.834580,9.463197,-6.150685,7.583104,1.594540,-5.267038,-4.298990,-7.058309,-9.119526,2.904811,8.503931,-7.412253,-2.570016,6.919927,3.305270,9.131317,-9.588187,-2.450905,8.881756,-3.069108,6.045331,3.508374,3.783390,6.901277,-6.864699,-9.750932,-1.087480,-8.890873,5.282189,1.708279,-5.392708,9.541477,2.119034,3.239751,2.491818,5.031661,1.690335,-3.322868,-0.394400,-9.833642,-1.226333,9.591519,5.148714,-2.491277,4.305563,-4.512274,-9.045974,-9.615119,3.738442,-7.830964,-2.350455,9.433878,5.812737,-9.286414,9.371396,-8.208735,-6.851032,-0.745131,5.005896,-0.863328,-6.726722,2.552790,-3.547494,-1.238260,0.557614,8.121770,-5.292608,7.857429,-2.972223,3.508110,-9.857816,-7.450654,7.725654,7.907635,7.026617,-9.812579,-6.191696,-6.600905,2.515044,-4.091663,-0.959316,-8.265207,-9.390671,-6.898711,-4.558774,-2.685956,0.450238,9.750180,9.815477,6.443569,-2.817095,-0.704391,2.857363,9.056407,4.516569,-7.025311,6.795607,-5.824486,-3.501072,1.650332,-9.581314,-2.237909,-1.261221,0.978615,-1.435101,-2.045444,-8.598497,0.654318,6.973473,-8.687833,-8.815111,-2.421498,-9.548400,2.271664,4.565144,0.038884,-3.699312,2.199815,3.184597,-3.659296,-4.630816,-0.552545,9.910131,-2.530584,-6.335511,8.962904,2.214750,5.726146,-6.698554,8.883352,6.739293,7.121159,-2.638787,-6.447953,5.186562,8.886163,9.094393,-4.286613,5.607518,7.138899,-9.559167,-2.909534,9.245136,9.901143,-8.007498,6.227889,3.285801,8.632697,-4.640534,0.608381,-2.992311,7.969941,-1.510361,-5.579841,-4.314613,7.962767,-1.189935,5.546854,2.170123,4.519126,1.402035,3.795717,9.421043,-2.786090,-1.360554,-6.464680,-2.399864,-5.032381,4.725601,-4.750690,6.801925,-9.415023,3.814978,8.404322,-4.281756,-9.547864,6.488084,-6.583198,-3.513329,-7.096332,-6.961722,1.096443,-3.637686,2.329826,-5.811119,-9.217688,-6.973879,6.106862,-7.499954,-4.925278,4.502130,-5.717867,8.067311,2.908920,6.439293,-0.822703,-8.780665,-6.231641,-3.350488,9.691353,0.513366,-9.158064,-2.096138,3.571021,-1.382341,-9.302356,-6.620480,-6.924949,0.298286,1.601982,-8.261946,5.225479,4.116925,1.261234,5.904239,-2.469912,-8.437669,-8.507296,-9.791954,8.099996,-0.744026,-0.487846,-4.981172,-8.534985,-1.258325,-7.449094,8.327999,-0.054948,6.202695,-9.423461,-0.710305,8.249579,0.547988,4.415133,4.243874,-5.363706,-0.730069,-6.432577,-5.068928,8.748461,-2.349061,9.432955,8.860636,-7.353089,4.889391,7.327211,7.669027,7.312534,3.507029,-3.770661,4.809684,-5.059813,6.130734,7.035695,3.174640,9.096368,-2.239907,9.303275,-5.388375,4.244780,8.407917,7.910257,2.273341,5.297439,4.768329,-7.479969,5.847413,9.809018,2.834494,-0.877516,4.407094,0.713643,-7.929025,1.669300,-0.676459,-0.250756,8.439884,6.891214,-8.166780,3.928067,-1.266899,4.270189,-6.706921,4.035620,0.005145,-6.291040,8.847681,-7.444785,8.879190,-4.029919,-5.922384,0.415470,-0.386474,2.048974,4.696586,-0.182079,-2.080016,1.156598,-3.299717,-3.479186,-3.312999,-0.780986,-1.213366,9.587345,-5.054769,-8.747742,1.204150,4.282560,-1.801787,-8.108765,6.345256,5.297081,-4.317517,0.663621,9.428846,-8.742611,-2.317956,0.610858,-2.396151,-6.016276,-2.535829,1.187011,-9.411021,1.667719,8.938672,1.767859,5.928761,-2.858542,1.954127,-8.019342,-6.700466,8.816100,-6.955596,2.285775,9.350529,9.160711,-1.015679,6.837229,8.719430,6.036070,3.727227,-1.153285,-2.166487,-8.492788,-8.965361,-4.815981,-1.320420,1.161124,3.865054,9.423970,5.571447,-4.486026,8.222644,-4.069618,0.343788,-4.064196]], dtype = "float32")#candidate|3033|(1, 1560)|const|float32
call_3032 = relay.TupleGetItem(func_2694_call(relay.reshape(const_3033.astype('float32'), [10, 13, 12])), 4)
call_3034 = relay.TupleGetItem(func_2696_call(relay.reshape(const_3033.astype('float32'), [10, 13, 12])), 4)
output = relay.Tuple([call_2955,const_2956,var_2957,bop_2979,call_2990,uop_2995,call_3005,call_3012,var_3013,var_3014,call_3032,const_3033,])
output2 = relay.Tuple([call_2958,const_2956,var_2957,bop_2979,call_2991,uop_2995,call_3006,call_3015,var_3013,var_3014,call_3034,const_3033,])
func_3044 = relay.Function([var_2949,var_2957,var_3013,var_3014,], output)
mod['func_3044'] = func_3044
mod = relay.transform.InferType()(mod)
var_3045 = relay.var("var_3045", dtype = "float32", shape = (13, 11, 5))#candidate|3045|(13, 11, 5)|var|float32
var_3046 = relay.var("var_3046", dtype = "int32", shape = (81,))#candidate|3046|(81,)|var|int32
var_3047 = relay.var("var_3047", dtype = "int8", shape = (15, 5))#candidate|3047|(15, 5)|var|int8
var_3048 = relay.var("var_3048", dtype = "bool", shape = (385,))#candidate|3048|(385,)|var|bool
output = func_3044(var_3045,var_3046,var_3047,var_3048,)
func_3049 = relay.Function([var_3045,var_3046,var_3047,var_3048,], output)
mutated_mod['func_3049'] = func_3049
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3278 = relay.var("var_3278", dtype = "int32", shape = (4, 15, 2))#candidate|3278|(4, 15, 2)|var|int32
var_3279 = relay.var("var_3279", dtype = "int32", shape = (4, 15, 2))#candidate|3279|(4, 15, 2)|var|int32
bop_3280 = relay.greater_equal(var_3278.astype('bool'), relay.reshape(var_3279.astype('bool'), relay.shape_of(var_3278))) # shape=(4, 15, 2)
func_1870_call = mod.get_global_var('func_1870')
func_1874_call = mutated_mod.get_global_var('func_1874')
var_3291 = relay.var("var_3291", dtype = "bool", shape = ())#candidate|3291|()|var|bool
var_3292 = relay.var("var_3292", dtype = "bool", shape = (385,))#candidate|3292|(385,)|var|bool
call_3290 = relay.TupleGetItem(func_1870_call(relay.reshape(var_3291.astype('bool'), []), relay.reshape(var_3292.astype('bool'), [11, 5, 7]), ), 0)
call_3293 = relay.TupleGetItem(func_1874_call(relay.reshape(var_3291.astype('bool'), []), relay.reshape(var_3292.astype('bool'), [11, 5, 7]), ), 0)
output = relay.Tuple([bop_3280,call_3290,var_3291,var_3292,])
output2 = relay.Tuple([bop_3280,call_3293,var_3291,var_3292,])
func_3294 = relay.Function([var_3278,var_3279,var_3291,var_3292,], output)
mod['func_3294'] = func_3294
mod = relay.transform.InferType()(mod)
var_3295 = relay.var("var_3295", dtype = "int32", shape = (4, 15, 2))#candidate|3295|(4, 15, 2)|var|int32
var_3296 = relay.var("var_3296", dtype = "int32", shape = (4, 15, 2))#candidate|3296|(4, 15, 2)|var|int32
var_3297 = relay.var("var_3297", dtype = "bool", shape = ())#candidate|3297|()|var|bool
var_3298 = relay.var("var_3298", dtype = "bool", shape = (385,))#candidate|3298|(385,)|var|bool
output = func_3294(var_3295,var_3296,var_3297,var_3298,)
func_3299 = relay.Function([var_3295,var_3296,var_3297,var_3298,], output)
mutated_mod['func_3299'] = func_3299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3378 = relay.var("var_3378", dtype = "float32", shape = (16, 15, 12))#candidate|3378|(16, 15, 12)|var|float32
uop_3379 = relay.acos(var_3378.astype('float32')) # shape=(16, 15, 12)
func_1870_call = mod.get_global_var('func_1870')
func_1874_call = mutated_mod.get_global_var('func_1874')
const_3382 = relay.const(False, dtype = "bool")#candidate|3382|()|const|bool
var_3383 = relay.var("var_3383", dtype = "bool", shape = (385,))#candidate|3383|(385,)|var|bool
call_3381 = relay.TupleGetItem(func_1870_call(relay.reshape(const_3382.astype('bool'), []), relay.reshape(var_3383.astype('bool'), [11, 5, 7]), ), 0)
call_3384 = relay.TupleGetItem(func_1874_call(relay.reshape(const_3382.astype('bool'), []), relay.reshape(var_3383.astype('bool'), [11, 5, 7]), ), 0)
output = relay.Tuple([uop_3379,call_3381,const_3382,var_3383,])
output2 = relay.Tuple([uop_3379,call_3384,const_3382,var_3383,])
func_3391 = relay.Function([var_3378,var_3383,], output)
mod['func_3391'] = func_3391
mod = relay.transform.InferType()(mod)
mutated_mod['func_3391'] = func_3391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3391_call = mutated_mod.get_global_var('func_3391')
var_3393 = relay.var("var_3393", dtype = "float32", shape = (16, 15, 12))#candidate|3393|(16, 15, 12)|var|float32
var_3394 = relay.var("var_3394", dtype = "bool", shape = (385,))#candidate|3394|(385,)|var|bool
call_3392 = func_3391_call(var_3393,var_3394,)
output = call_3392
func_3395 = relay.Function([var_3393,var_3394,], output)
mutated_mod['func_3395'] = func_3395
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3845 = relay.var("var_3845", dtype = "int32", shape = (8, 9, 13))#candidate|3845|(8, 9, 13)|var|int32
const_3846 = relay.const([[[8,7,4,9,4,-3,5,3,2,-10,-9,6,7],[7,-7,-5,1,-8,8,4,5,4,-5,-1,2,9],[-4,3,2,-1,-7,5,-2,6,-10,9,8,-5,-10],[-9,8,2,-2,3,-7,2,-3,-3,-9,5,9,-3],[7,9,4,2,5,-4,-10,-10,3,10,-10,1,4],[-9,9,-2,-9,8,1,5,-3,-3,-6,-10,7,-5],[7,-8,-3,5,-6,2,2,-1,7,6,-5,-3,-4],[-9,4,-9,9,1,-2,-6,7,-8,-8,-9,4,-5],[4,1,-10,10,2,5,7,-5,-4,1,-9,-8,7]],[[1,3,-10,5,-7,-10,1,6,-5,-1,6,-1,5],[-6,-8,10,-2,-7,-10,-6,9,3,9,-5,-4,7],[2,-7,-2,7,3,9,-10,10,1,6,3,2,-9],[-8,-5,-3,5,-1,-10,-6,8,8,4,-10,3,6],[7,8,7,3,3,9,5,-4,10,7,7,-8,5],[-7,7,-6,3,4,-2,-4,-10,-4,4,-1,-9,-4],[6,-7,-1,-1,10,-3,-1,-5,-4,9,-3,-1,10],[1,8,6,-7,-5,9,-7,3,-4,-8,9,-9,6],[-9,10,6,-9,-7,10,-1,-4,-3,1,-10,-2,5]],[[10,10,-7,2,-10,-1,5,-7,-3,4,-9,6,-4],[-7,9,-8,8,-7,-8,-4,-9,1,-2,3,-7,3],[-3,-7,7,1,-6,7,8,-8,-4,9,7,9,8],[-7,8,-2,8,6,-3,-3,8,2,-3,6,-3,3],[5,-1,6,10,7,5,-1,-3,9,-3,8,-5,-6],[-8,-6,-10,3,-5,-1,-2,-5,4,-7,-8,4,3],[9,-3,-1,-5,-4,-9,8,5,-7,8,4,-7,10],[7,-9,8,-10,-2,-3,-1,5,5,4,-3,-9,-4],[-4,5,-8,-9,-5,-4,7,-10,-6,9,-9,-5,4]],[[-5,-10,7,-9,9,5,4,-3,4,6,-2,5,4],[-6,8,-8,3,1,1,2,-5,7,6,-8,2,4],[-6,5,-4,8,1,4,-3,3,3,5,-2,-9,-2],[9,-1,-10,-4,9,-4,-8,1,8,-5,8,-6,-9],[-5,7,5,3,-8,7,6,10,10,-6,9,7,-6],[-5,-7,-1,3,2,-3,-8,-8,5,-8,7,-2,-1],[8,9,2,-6,-6,-3,-6,-9,-2,2,-1,-5,3],[-8,-4,7,6,5,10,1,8,-7,1,-3,-4,-2],[-1,5,-10,10,4,7,3,-10,-1,1,4,-2,-5]],[[-5,-10,-3,5,-7,-10,10,-6,6,7,2,-6,7],[-10,-3,6,3,9,8,-3,1,-4,9,-6,-9,10],[10,6,-6,-8,1,-10,-1,10,5,6,1,4,8],[-7,-4,-10,-5,-4,3,9,-8,-8,-8,-10,-6,-8],[6,8,-4,1,-4,-4,7,9,4,4,6,2,-4],[8,9,-6,-8,9,1,-3,2,5,7,-9,-9,2],[-9,-1,5,1,-5,-8,-3,-8,6,-1,-9,10,-10],[5,-4,-7,9,3,1,-9,3,1,4,-2,3,1],[-2,5,1,-3,9,7,-2,-4,-6,-9,-2,-5,-4]],[[-7,4,6,-10,-10,-3,6,-7,-9,-3,1,-8,6],[-3,-6,-2,1,-4,4,9,7,-10,-3,-3,-3,-9],[-6,5,9,-7,-4,-10,6,1,10,-5,4,-7,10],[1,-8,2,-9,8,-6,3,-3,-4,-8,9,6,4],[-9,7,3,-7,-10,7,-5,-7,1,10,6,-2,-8],[2,-7,4,-7,7,8,-3,4,-8,-8,-9,-7,-2],[4,7,7,8,8,-1,-2,7,4,-8,1,-7,-3],[7,-7,2,4,-3,-1,-6,2,3,6,4,9,6],[8,-10,-10,-10,5,6,5,2,-10,-6,4,6,1]],[[-9,2,4,-9,-10,1,-5,5,-6,3,-8,-4,7],[6,-9,-3,-9,2,-4,8,-1,7,-3,-9,5,-9],[-9,7,-3,1,-2,-8,1,6,2,-3,-1,9,3],[7,10,-2,8,-6,4,1,-2,-9,-1,-8,7,6],[-2,-3,2,4,5,2,-5,2,-4,5,6,-8,-9],[9,-10,5,9,10,10,-3,9,-6,-2,6,-5,-1],[-7,5,-7,-1,1,-10,3,-10,-5,-8,8,1,-6],[7,9,10,9,1,2,-5,-7,-3,-7,5,-8,6],[-9,-8,-5,-6,-3,2,2,7,5,-8,9,3,4]],[[7,3,8,10,8,-10,-2,1,-4,5,-8,1,3],[5,5,-5,1,-6,3,8,-3,-8,-1,9,1,-7],[6,-4,10,-6,1,7,-3,-3,-1,10,9,-1,6],[-8,-5,7,-2,2,-2,-7,2,-7,9,3,-10,7],[10,2,7,-4,-4,6,4,6,-8,1,8,-5,7],[-10,1,-8,3,-1,-1,-5,-8,1,-10,-9,1,-8],[-7,8,1,3,-3,-4,-3,9,10,9,8,1,6],[-6,-2,-7,-7,3,3,1,8,-4,-10,7,8,9],[5,-4,2,1,4,2,-3,1,-2,-1,8,3,8]]], dtype = "int32")#candidate|3846|(8, 9, 13)|const|int32
bop_3847 = relay.minimum(var_3845.astype('int32'), relay.reshape(const_3846.astype('int32'), relay.shape_of(var_3845))) # shape=(8, 9, 13)
func_3294_call = mod.get_global_var('func_3294')
func_3299_call = mutated_mod.get_global_var('func_3299')
const_3858 = relay.const([-1,9,8,-4,3,8,3,-5,-1,7,-8,-8,6,-10,-10,-9,10,10,7,-9,-1,8,-4,8,2,7,8,2,3,-10,-7,-5,-6,-2,-1,1,-8,6,6,9,-1,-5,-4,-4,10,-1,4,3,10,-3,6,5,-5,-8,-6,8,-7,-8,-1,-9,10,-8,-7,4,-6,-10,-3,8,3,8,7,9,-8,-7,9,9,-8,-4,10,2,-5,10,-7,-5,-6,-2,-8,7,7,-6,-9,-8,4,2,9,9,8,1,8,8,10,5,2,-5,-5,5,-8,1,-2,5,10,-5,-3,-6,4,-5,7,-2,3,5], dtype = "int32")#candidate|3858|(120,)|const|int32
var_3859 = relay.var("var_3859", dtype = "bool", shape = ())#candidate|3859|()|var|bool
const_3860 = relay.const([False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False], dtype = "bool")#candidate|3860|(385,)|const|bool
call_3857 = relay.TupleGetItem(func_3294_call(relay.reshape(const_3858.astype('int32'), [4, 15, 2]), relay.reshape(const_3858.astype('int32'), [4, 15, 2]), relay.reshape(var_3859.astype('bool'), []), relay.reshape(const_3860.astype('bool'), [385,]), ), 1)
call_3861 = relay.TupleGetItem(func_3299_call(relay.reshape(const_3858.astype('int32'), [4, 15, 2]), relay.reshape(const_3858.astype('int32'), [4, 15, 2]), relay.reshape(var_3859.astype('bool'), []), relay.reshape(const_3860.astype('bool'), [385,]), ), 1)
func_3044_call = mod.get_global_var('func_3044')
func_3049_call = mutated_mod.get_global_var('func_3049')
var_3874 = relay.var("var_3874", dtype = "float32", shape = (715,))#candidate|3874|(715,)|var|float32
var_3875 = relay.var("var_3875", dtype = "int32", shape = (81,))#candidate|3875|(81,)|var|int32
var_3876 = relay.var("var_3876", dtype = "int8", shape = (75,))#candidate|3876|(75,)|var|int8
call_3873 = relay.TupleGetItem(func_3044_call(relay.reshape(var_3874.astype('float32'), [13, 11, 5]), relay.reshape(var_3875.astype('int32'), [81,]), relay.reshape(var_3876.astype('int8'), [15, 5]), relay.reshape(const_3860.astype('bool'), [385,]), ), 5)
call_3877 = relay.TupleGetItem(func_3049_call(relay.reshape(var_3874.astype('float32'), [13, 11, 5]), relay.reshape(var_3875.astype('int32'), [81,]), relay.reshape(var_3876.astype('int8'), [15, 5]), relay.reshape(const_3860.astype('bool'), [385,]), ), 5)
func_3044_call = mod.get_global_var('func_3044')
func_3049_call = mutated_mod.get_global_var('func_3049')
call_3883 = relay.TupleGetItem(func_3044_call(relay.reshape(var_3874.astype('float32'), [13, 11, 5]), relay.reshape(var_3875.astype('int32'), [81,]), relay.reshape(var_3876.astype('int8'), [15, 5]), relay.reshape(const_3860.astype('bool'), [385,]), ), 8)
call_3884 = relay.TupleGetItem(func_3049_call(relay.reshape(var_3874.astype('float32'), [13, 11, 5]), relay.reshape(var_3875.astype('int32'), [81,]), relay.reshape(var_3876.astype('int8'), [15, 5]), relay.reshape(const_3860.astype('bool'), [385,]), ), 8)
output = relay.Tuple([bop_3847,call_3857,const_3858,var_3859,const_3860,call_3873,var_3874,var_3875,var_3876,call_3883,])
output2 = relay.Tuple([bop_3847,call_3861,const_3858,var_3859,const_3860,call_3877,var_3874,var_3875,var_3876,call_3884,])
func_3889 = relay.Function([var_3845,var_3859,var_3874,var_3875,var_3876,], output)
mod['func_3889'] = func_3889
mod = relay.transform.InferType()(mod)
mutated_mod['func_3889'] = func_3889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3889_call = mutated_mod.get_global_var('func_3889')
var_3891 = relay.var("var_3891", dtype = "int32", shape = (8, 9, 13))#candidate|3891|(8, 9, 13)|var|int32
var_3892 = relay.var("var_3892", dtype = "bool", shape = ())#candidate|3892|()|var|bool
var_3893 = relay.var("var_3893", dtype = "float32", shape = (715,))#candidate|3893|(715,)|var|float32
var_3894 = relay.var("var_3894", dtype = "int32", shape = (81,))#candidate|3894|(81,)|var|int32
var_3895 = relay.var("var_3895", dtype = "int8", shape = (75,))#candidate|3895|(75,)|var|int8
call_3890 = func_3889_call(var_3891,var_3892,var_3893,var_3894,var_3895,)
output = call_3890
func_3896 = relay.Function([var_3891,var_3892,var_3893,var_3894,var_3895,], output)
mutated_mod['func_3896'] = func_3896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4549 = relay.var("var_4549", dtype = "int64", shape = (4, 2, 15))#candidate|4549|(4, 2, 15)|var|int64
var_4550 = relay.var("var_4550", dtype = "int64", shape = (4, 2, 15))#candidate|4550|(4, 2, 15)|var|int64
bop_4551 = relay.subtract(var_4549.astype('int64'), relay.reshape(var_4550.astype('int64'), relay.shape_of(var_4549))) # shape=(4, 2, 15)
func_1131_call = mod.get_global_var('func_1131')
func_1134_call = mutated_mod.get_global_var('func_1134')
const_4555 = relay.const(6, dtype = "int32")#candidate|4555|()|const|int32
call_4554 = relay.TupleGetItem(func_1131_call(relay.reshape(const_4555.astype('int32'), [])), 0)
call_4556 = relay.TupleGetItem(func_1134_call(relay.reshape(const_4555.astype('int32'), [])), 0)
output = relay.Tuple([bop_4551,call_4554,const_4555,])
output2 = relay.Tuple([bop_4551,call_4556,const_4555,])
func_4568 = relay.Function([var_4549,var_4550,], output)
mod['func_4568'] = func_4568
mod = relay.transform.InferType()(mod)
mutated_mod['func_4568'] = func_4568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4568_call = mutated_mod.get_global_var('func_4568')
var_4570 = relay.var("var_4570", dtype = "int64", shape = (4, 2, 15))#candidate|4570|(4, 2, 15)|var|int64
var_4571 = relay.var("var_4571", dtype = "int64", shape = (4, 2, 15))#candidate|4571|(4, 2, 15)|var|int64
call_4569 = func_4568_call(var_4570,var_4571,)
output = call_4569
func_4572 = relay.Function([var_4570,var_4571,], output)
mutated_mod['func_4572'] = func_4572
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4643 = relay.const([[[-4.809401,-6.535661,-5.486066,4.855622,5.594054,5.220401,-5.731528],[-7.426123,0.128709,-7.606498,3.938039,3.597256,-2.317795,2.032311],[6.542204,-0.143549,-9.745534,-4.831959,-7.776452,-0.463246,5.641751],[-8.026392,0.252400,4.777785,0.826080,8.085012,-3.050689,3.703658]],[[-2.361635,0.789260,4.687643,-8.927558,-1.235753,-7.724901,-1.427256],[-5.314581,-7.415369,1.917201,-9.479722,-6.187836,-3.786220,-9.631853],[-6.015016,8.807642,-6.878621,-5.373012,8.471502,9.120113,-2.931776],[-0.601472,-8.933932,-6.868087,-8.297628,-8.637331,-0.253476,-2.799017]],[[-2.574334,-2.642186,-2.124742,-6.885606,-4.466606,-7.209529,0.236262],[4.119860,0.256960,-4.697671,7.278532,5.443165,-5.105102,-5.925281],[-4.308117,4.304560,3.687144,-5.712162,-2.147410,-1.390473,2.531443],[-9.458176,-2.850220,-7.393554,5.085788,1.006955,3.999602,-0.996280]],[[-1.325452,4.577306,2.533457,0.118739,-2.223761,-9.445676,-4.222075],[0.359869,5.678421,-5.837107,9.330647,-7.003899,6.348604,2.280799],[-8.589632,-5.566765,-2.275476,1.593919,1.764080,-6.001101,-6.305021],[-8.713489,4.105638,0.190951,7.604263,-7.543203,-9.204326,8.778851]],[[-7.748565,7.690649,3.809312,9.434713,7.826170,0.078787,-1.858288],[-2.670487,4.826407,7.887422,-2.816850,9.023248,3.429498,-7.983977],[-5.661707,3.231908,2.415108,3.479684,7.352134,-8.226182,-7.547590],[7.611150,-8.651918,8.796715,-8.166129,-0.895629,9.520944,-4.471699]],[[-5.392125,6.004985,-2.703669,7.314420,7.055382,-8.818340,-0.891413],[1.393217,2.821059,5.341053,-4.970997,3.602823,6.859093,6.243816],[6.914187,3.823592,-8.532020,4.925322,-4.538337,-3.078625,5.490987],[-9.005551,-4.064639,-2.120274,-2.681929,3.940129,5.394295,6.547767]],[[-0.575384,6.961200,-2.668437,6.445272,4.293860,0.255758,-5.090737],[3.174928,4.560338,2.255806,7.674079,5.415204,5.652937,-1.833666],[1.635405,6.719321,-9.844313,2.548349,-4.826947,-3.914312,3.249909],[5.946352,9.160726,-9.219387,-2.788277,-5.741302,4.207841,3.644334]]], dtype = "float64")#candidate|4643|(7, 4, 7)|const|float64
uop_4644 = relay.acos(const_4643.astype('float64')) # shape=(7, 4, 7)
output = relay.Tuple([uop_4644,])
output2 = relay.Tuple([uop_4644,])
func_4651 = relay.Function([], output)
mod['func_4651'] = func_4651
mod = relay.transform.InferType()(mod)
output = func_4651()
func_4652 = relay.Function([], output)
mutated_mod['func_4652'] = func_4652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4651_call = mod.get_global_var('func_4651')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_4655 = relay.TupleGetItem(func_4651_call(), 0)
call_4656 = relay.TupleGetItem(func_4652_call(), 0)
output = relay.Tuple([call_4655,])
output2 = relay.Tuple([call_4656,])
func_4671 = relay.Function([], output)
mod['func_4671'] = func_4671
mod = relay.transform.InferType()(mod)
output = func_4671()
func_4672 = relay.Function([], output)
mutated_mod['func_4672'] = func_4672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4651_call = mod.get_global_var('func_4651')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_4693 = relay.TupleGetItem(func_4651_call(), 0)
call_4694 = relay.TupleGetItem(func_4652_call(), 0)
func_2094_call = mod.get_global_var('func_2094')
func_2099_call = mutated_mod.get_global_var('func_2099')
const_4705 = relay.const(-1, dtype = "int8")#candidate|4705|()|const|int8
var_4706 = relay.var("var_4706", dtype = "int8", shape = (1, 75))#candidate|4706|(1, 75)|var|int8
const_4707 = relay.const([False,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,True,False,False], dtype = "bool")#candidate|4707|(385,)|const|bool
call_4704 = relay.TupleGetItem(func_2094_call(relay.reshape(const_4705.astype('int8'), []), relay.reshape(var_4706.astype('int8'), [15, 1, 5]), relay.reshape(const_4707.astype('bool'), [385,]), ), 1)
call_4708 = relay.TupleGetItem(func_2099_call(relay.reshape(const_4705.astype('int8'), []), relay.reshape(var_4706.astype('int8'), [15, 1, 5]), relay.reshape(const_4707.astype('bool'), [385,]), ), 1)
uop_4709 = relay.exp(const_4707.astype('float64')) # shape=(385,)
bop_4711 = relay.bitwise_or(uop_4709.astype('int8'), const_4705.astype('int8')) # shape=(385,)
uop_4734 = relay.cos(uop_4709.astype('float64')) # shape=(385,)
bop_4743 = relay.less_equal(bop_4711.astype('bool'), relay.reshape(uop_4734.astype('bool'), relay.shape_of(bop_4711))) # shape=(385,)
output = relay.Tuple([call_4693,call_4704,var_4706,bop_4743,])
output2 = relay.Tuple([call_4694,call_4708,var_4706,bop_4743,])
func_4750 = relay.Function([var_4706,], output)
mod['func_4750'] = func_4750
mod = relay.transform.InferType()(mod)
mutated_mod['func_4750'] = func_4750
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4751 = relay.var("var_4751", dtype = "int8", shape = (1, 75))#candidate|4751|(1, 75)|var|int8
func_4750_call = mutated_mod.get_global_var('func_4750')
call_4752 = func_4750_call(var_4751)
output = call_4752
func_4753 = relay.Function([var_4751], output)
mutated_mod['func_4753'] = func_4753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4651_call = mod.get_global_var('func_4651')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_4761 = relay.TupleGetItem(func_4651_call(), 0)
call_4762 = relay.TupleGetItem(func_4652_call(), 0)
func_3391_call = mod.get_global_var('func_3391')
func_3395_call = mutated_mod.get_global_var('func_3395')
const_4777 = relay.const([-1.440464,2.430889,-7.805204,-3.631151,-3.764229,1.776526,-4.809703,-6.379380,-6.982689,-1.180671,-8.289980,-5.240711,9.218684,-7.122134,1.117851,-1.743093,6.617081,-6.812165,-4.758560,5.337332,-0.857064,7.592632,-9.933774,1.510603,-5.560305,-1.427338,3.117555,8.022087,-2.413850,1.612722,2.441201,1.943004,8.985869,2.711677,-2.593781,-4.182040,2.435587,-4.356818,7.542406,-5.098361,3.568206,2.574340,-7.489677,1.121088,-5.178931,-6.198532,-1.433578,-7.760670,-0.630892,3.829167,0.226120,9.936318,6.391370,-8.578495,7.099866,1.695958,4.543696,0.388448,8.808658,-0.749520,9.418207,5.938153,8.154111,3.768165,7.265235,-7.445477,-7.879573,0.410578,9.441257,-1.934284,3.031548,9.905625,-4.097012,-6.765349,0.324526,-8.384107,1.482057,1.793161,4.589398,-5.039778,5.888522,4.307447,-4.955517,-7.618519,-3.900952,-7.884012,-5.623692,-1.642572,-5.730332,-7.661702,-9.388511,-5.783531,-3.649386,-6.303789,-6.143347,3.245682,0.615874,7.311512,3.395090,-2.332549,2.449054,6.844026,-8.171933,-8.917712,-3.901014,7.558081,8.946787,6.001562,3.637945,-2.847367,-7.301370,6.908725,-8.448721,-9.148445,-9.024123,-8.873878,9.154120,7.282029,9.199724,1.398486,-4.379474,-4.193047,-2.205807,-3.418680,7.769576,-8.599090,-2.668536,-2.616346,-5.076233,-3.070455,8.626827,-6.259575,1.319594,-0.114002,-3.488414,-3.086782,-8.261406,-0.984247,-8.516412,-8.937000,5.787513,-3.907893,6.882630,5.647551,7.942212,-0.545806,-1.192355,6.022423,8.013455,-1.133146,8.343052,-9.467462,-2.228979,5.509919,6.818423,-7.867449,-2.616266,-1.544417,3.999443,3.192032,-2.031888,5.282433,1.604885,-5.158794,9.555690,-2.191013,3.340350,-0.849470,0.140941,8.250742,-2.209272,-7.292621,-7.860863,-4.096585,-7.822086,-7.806577,0.791900,0.903146,-9.667500,4.980561,-9.710068,5.824356,0.022810,5.002429,0.688221,7.005298,7.171089,-3.661116,9.397699,6.336027,-6.454536,-1.590828,-1.952360,-3.301852,9.069623,-5.039513,0.324944,2.411832,5.740120,-2.621354,7.940742,-2.092314,4.941156,-5.370675,4.775539,-7.367449,0.448181,-4.717157,-4.824699,8.689570,-5.425635,3.847033,3.381682,-6.820610,-7.546520,1.307546,4.430821,-3.579723,-1.501784,9.785803,-3.926702,1.764123,-5.057381,7.443248,9.931733,-8.519044,-6.118381,1.923294,-0.289455,0.183461,-9.423187,6.375933,-5.262265,-9.212377,-6.405536,0.405671,8.396023,2.355667,-4.688139,-7.337749,5.306411,5.182946,5.002861,6.171701,3.599442,-7.198315,9.306451,9.816160,3.477079,-2.980885,4.408939,-1.509125,-7.389835,-9.807966,0.170913,-2.574944,1.768631,-1.445496,5.000560,-9.874969,-2.355014,-7.682197,-4.664325,-2.275382,-2.295484,-2.344455,-9.997584,-7.263932,-4.832499,6.806693,-9.052870,-3.385099,3.251096,-8.687398,-7.181565,3.216627,2.146039,-4.262966,9.103411,5.028882,0.310022,2.490226,-3.163071,-1.376949,-7.872972,-1.759383,-5.439446,-9.345031,-8.329586,-1.996734,-6.032112,1.546244,4.393747,5.299769,-4.473200,-5.164631,-5.001758,8.774808,-5.386204,4.975835,5.210463,5.898805,-4.002278,-3.291480,-7.286637,7.672093,-6.782877,-6.923452,-4.638064,1.461890,-8.730825,-0.360689,3.342137,8.822325,-7.909214,1.111156,5.904118,0.701168,-0.171417,-4.312024,-3.403479,0.459008,-1.312954,-5.517357,-8.001576,-5.448634,-4.711198,3.909449,-1.408203,5.664312,-9.630868,6.838892,6.295636,0.468526,-9.193822,-6.495656,-7.089899,5.566527,4.462793,0.105245,0.858978,-2.373655,6.770050,-6.365667,-8.437886,-0.159888,-8.722412,-6.829584,-2.225066,6.806478,5.378240,2.814980,-6.847259,2.256285,-7.476292,0.978953,-6.333026,9.732778,0.943838,1.352448,1.215397,-5.177113,1.857789,3.598493,0.306484,-2.468838,-7.323529,-3.778762,3.944670,-8.385085,-5.999933,7.448709,3.633028,-6.147127,-2.283306,4.377420,1.509948,3.272207,-4.490191,-6.202614,-5.248885,8.297159,-1.826756,2.466047,7.353737,-0.174980,3.557545,-1.597583,-7.262762,1.008107,-7.758187,2.774676,1.546617,3.482470,5.583860,8.037299,-4.420179,3.976770,-9.172184,-7.132149,-1.540635,8.515522,6.783275,7.946538,7.029303,-8.148447,6.540674,0.891877,7.291115,-4.122156,5.675192,-7.999619,-4.707494,-8.129099,-3.302258,-8.641667,4.346668,-2.493067,0.676073,1.048735,-5.072825,1.622364,3.122485,-3.474323,8.602473,9.792703,-8.471714,-5.882104,3.799018,5.456967,-8.053315,7.560721,-2.062388,-2.458535,5.365528,-2.045933,6.253940,2.666345,-6.170327,5.184518,-1.923130,-3.982162,-9.139313,-0.360705,-7.820173,3.171922,5.865106,-0.927750,-5.735716,-4.519573,-1.389056,-3.587414,-6.526565,-0.853374,0.331285,-5.550506,2.704351,4.170838,7.923101,3.450930,6.946463,-4.130086,0.694264,-8.143977,5.907845,6.236074,7.115970,-0.964127,0.724391,5.617602,-8.926032,7.247325,-4.404540,-9.939132,-0.858843,9.044507,-7.054885,-5.817025,3.087115,-2.151818,8.272023,-5.484031,7.716253,-0.902589,-1.213952,0.264301,6.640090,-4.161020,2.327408,-1.560743,-9.061530,-1.521118,3.892845,2.491860,7.923302,-0.513968,0.280989,-4.223400,8.667475,-1.269999,-7.941370,-8.216022,-9.616960,4.865087,9.132268,6.929488,-8.829024,7.164928,-1.174273,-8.883684,-4.498176,7.433346,6.923034,-1.053582,-3.419354,-3.203616,-7.151304,6.779818,1.108150,9.620757,-5.218367,4.545890,-8.460429,-7.128673,7.600649,-2.847384,1.938133,6.330382,5.928146,5.608877,-1.920772,-4.883583,4.678080,8.564669,1.779524,4.479375,0.095772,-6.314975,2.500487,9.952669,2.898305,-6.053307,7.694986,6.837296,5.314940,-5.914597,7.308361,5.936842,-2.284660,4.801810,4.174827,9.268910,7.975503,-7.745467,2.628218,3.053956,8.724666,4.836910,-8.418651,-5.137607,-4.350926,7.701943,8.151567,-8.314355,-9.664599,9.705880,-2.672400,-7.347159,-8.288649,7.529364,-6.036415,-8.018271,-5.076033,-3.753448,2.157053,8.404004,-9.414796,0.447421,1.579848,1.142192,5.556788,5.042788,-9.585291,-8.429750,-8.552559,-4.672667,-3.635052,-8.167068,-2.493935,1.912814,3.147837,9.292087,-4.650166,-5.308445,-1.801456,3.250769,-3.625695,-7.737547,-3.732019,-9.865613,-7.534493,-5.430718,9.642955,1.977775,4.787742,1.030762,3.511915,-6.911235,4.505244,4.439059,8.942357,-8.378718,0.580325,-9.606615,7.350762,-7.169079,6.252621,-5.248940,-1.294543,-0.857628,1.026105,-0.872411,9.979350,-1.912339,8.224318,-4.022356,-1.487558,2.559100,6.441627,8.375809,-4.949179,-9.789359,-8.542453,-2.156555,1.505552,2.515582,3.397832,3.031786,-2.919904,7.257900,-0.535240,-7.925570,-7.549685,-3.849565,3.616690,-8.752144,-3.736271,9.687669,-7.138004,8.218688,7.668170,-6.337058,-8.151996,3.773109,3.039809,5.690879,-8.196460,-1.145247,1.806422,3.194181,-3.326313,-5.801071,-7.903218,-0.049983,6.095441,-9.108009,-7.196503,6.245292,0.630873,7.061880,-5.145139,-8.302059,8.336412,6.399148,6.663506,3.931865,8.428634,-0.630620,-6.302291,-9.921963,-5.379247,-9.824378,2.771292,-9.878948,-8.128217,4.126680,-0.644622,0.263932,-2.116680,-0.588975,6.360512,6.740945,8.050745,9.840706,-6.487912,9.587026,-6.455766,7.915722,-0.578860,-0.448658,-7.895391,1.314628,7.956379,-7.426723,0.241508,-9.420936,-7.153742,8.125570,8.097758,1.829054,-9.900543,5.993343,-6.065501,-4.063283,-1.938199,4.706720,-1.221112,7.821582,-5.714424,1.405366,-2.790007,-1.277144,-4.548915,-0.109034,-3.628565,2.513894,-2.952117,-8.721801,-3.656048,3.824298,0.590310,3.054135,0.813199,-5.239248,-1.989781,-5.953524,3.615751,3.792175,-4.047270,7.381935,-7.960087,-1.818600,7.532342,0.952642,3.189273,-3.880609,-6.925179,1.880544,-5.771676,5.124691,3.467596,3.798649,-7.496961,-9.765828,-4.863250,-7.733190,9.708932,-3.539991,0.827937,-7.383122,-1.085521,9.071129,-6.375224,8.179540,-6.655034,3.297464,-0.571688,-9.417483,3.171294,5.228647,4.275816,-5.131840,-4.583289,1.389349,4.985161,3.839635,1.618372,-6.219407,8.553396,-2.452945,-4.743526,9.540891,6.449766,7.715892,2.369227,-2.914091,-5.454729,9.898327,5.495810,-5.243172,-4.256647,7.210716,6.491889,4.212450,2.633289,-6.269834,9.299456,-4.211983,-1.070476,1.624722,-2.054413,-1.373987,3.256642,-5.418763,-1.677098,3.393380,-7.162679,-3.324309,-0.465302,-8.688518,-3.436295,3.200076,-7.935312,-5.304077,7.957054,-1.658094,6.671495,9.176457,-9.990011,-4.061286,-2.228799,8.553893,-9.909496,-5.824327,4.534154,-9.690518,-2.826470,5.035382,0.570265,4.370171,-5.220969,-7.207923,-0.882231,-6.556174,2.456234,0.485488,-1.288104,-4.752005,0.257824,0.257805,2.651993,-0.216834,5.897970,3.920232,6.683364,2.345516,-1.842894,2.888305,1.850214,-4.105860,-1.921770,6.265725,-8.974526,3.872952,-8.044136,4.558246,-3.707446,8.019553,2.983549,-5.034374,7.389593,-6.450549,-9.910405,-5.396535,7.537906,-9.639105,8.074880,-5.701376,-0.468199,6.797875,-6.411101,-9.214628,-1.759705,-7.712617,-4.349653,-4.622470,7.815025,-1.738599,-3.402852,9.521768,8.258985,-5.358701,1.167593,-7.335361,-1.572292,8.290845,-2.516304,-5.471589,9.423580,8.944313,4.402919,-2.996864,-6.344228,-5.896619,3.811413,3.507419,-2.992037,0.618132,-6.027093,9.762943,2.497413,-6.050564,-1.434360,-2.911428,6.347457,-3.397080,0.063038,7.972006,2.511273,8.437808,-4.061931,0.813876,-7.839274,-8.504739,-6.503899,0.724075,-0.487919,-6.047950,-6.119328,1.372304,-3.940366,2.936393,-9.924155,0.334014,-3.662471,-4.360493,3.476309,2.915682,9.700672,4.402375,5.670453,2.858807,-0.920158,6.088306,6.059844,-1.074131,-9.346458,6.309129,2.318636,-7.692407,8.735379,-6.773709,-9.602825,-0.912927,9.429308,7.960000,5.025533,2.325897,-2.518491,-0.009081,5.054774,0.590307,-3.066997,-1.017787,-9.319161,-8.265016,9.408813,-6.455184,-6.380661,7.733243,-2.057838,9.040389,-0.023731,7.020794,4.644493,-0.541138,7.310097,-3.409063,-2.535957,2.846160,8.980005,2.479130,-9.937852,-6.214198,-4.054576,-8.022759,-0.782126,-8.154470,-1.925318,-0.377449,-3.597857,-2.306477,-8.042449,9.261444,6.785538,3.693693,-5.549791,-6.001768,4.596206,-2.113432,-6.139757,-9.690311,-9.307815,1.795054,9.761510,-3.226434,-3.384421,4.584729,2.709597,-1.159005,3.138192,0.609725,-1.666395,-2.436520,-8.147751,3.947241,0.356867,6.134191,0.964823,5.201530,-9.203184,-1.942776,-1.022153,-3.692119,-7.853187,1.056423,-1.650574,-5.443938,-3.664614,-5.724179,9.304421,9.129942,-7.931247,-2.122409,-3.183881,-0.015794,9.183797,3.001440,-8.051526,6.589287,-4.025278,-7.689051,7.435568,4.385228,2.093281,-6.948421,-0.108219,4.903422,-4.352084,-6.726841,2.864991,-2.376534,9.645688,5.094684,4.397753,-5.432389,3.685035,-3.352709,9.770098,-5.042422,-9.392500,9.731724,-8.089895,0.706263,-6.988293,2.044492,-6.187595,-6.400526,-8.483099,3.492903,-3.716897,1.527969,-6.707311,-8.274393,-3.572796,-8.283575,4.691908,1.937251,-7.832953,5.133305,-1.990304,9.610965,-0.970214,-6.779910,3.837635,-0.517050,5.656841,7.394652,4.996641,-5.346978,-3.730787,-4.124052,-3.322127,7.230298,-0.364921,-8.790420,-6.511764,4.604110,3.791490,6.222907,7.865390,3.413212,7.156074,-5.751839,-4.794362,-5.145838,3.034950,8.967922,-4.040740,2.964293,7.146387,6.899416,7.501458,-4.244374,-3.831713,4.523899,9.719917,6.202562,7.091121,6.288811,-9.411457,-7.074915,3.689760,5.125523,-5.664442,-3.608295,-5.551444,3.069375,2.123524,5.205962,0.817596,4.858999,9.523336,-1.593981,6.006392,-7.784191,1.934545,8.066030,-9.099713,7.188681,0.920929,-3.477370,3.193307,8.963282,0.736313,3.616633,9.096659,8.800036,1.707671,5.067973,-7.143624,-9.231681,-2.861786,-0.436502,-8.581575,-5.823795,1.379063,-3.093682,-9.237331,0.353187,-9.259791,6.985839,-2.874876,-6.368606,-7.111415,-4.971009,6.516412,-1.033109,-3.184661,3.137023,-9.041308,2.575676,-0.841943,8.736042,1.114329,0.135572,7.432433,-8.637792,4.905587,6.796479,-9.227212,-2.055540,-4.175716,-1.684072,2.315692,9.816853,5.734046,-6.191038,-3.398136,-7.493310,-4.562385,4.289118,-7.695491,8.051474,-9.793766,2.254648,-9.671283,9.174545,3.311234,-6.024130,9.697197,-9.804820,-9.603474,-4.195550,-2.118178,-0.242746,-6.381669,-9.896635,0.744602,1.034490,-6.827725,3.431672,-1.549442,9.121562,-7.128996,5.817830,-5.930819,-9.042344,-0.490347,6.943475,6.296943,9.747599,-5.353632,0.506199,-1.854784,9.054534,8.914512,9.561057,1.280897,1.124214,-5.425448,1.193347,3.090651,2.691087,9.857047,-4.985117,7.318608,-1.117222,-0.695203,1.670669,-3.589913,0.045217,3.394895,-0.887714,-1.057925,-3.297946,-8.266922,9.888124,9.778293,1.854268,6.031560,-6.411131,6.106567,-2.886963,-9.981869,-6.764932,1.132911,-1.611438,9.050003,0.517159,8.958906,-2.454298,-9.062797,0.328166,8.399943,-1.023358,-9.823262,0.419287,5.677700,7.889431,4.982516,5.410209,-8.069810,-4.284650,-2.724020,2.788463,4.121189,0.675289,3.675773,-8.648530,4.092269,9.384041,9.133388,1.608954,4.161395,-4.718263,2.054816,0.470665,3.643590,9.686363,4.531353,4.344940,-5.650223,-3.665115,6.904454,-6.996032,8.493967,1.453865,-5.530460,-9.158374,0.244377,9.535198,-8.602854,-2.864073,-8.620924,9.230827,-7.294691,-8.890218,2.734356,-9.921018,9.318154,0.599545,4.151520,6.161440,1.165246,1.040999,-0.607253,1.001347,4.247671,7.850571,6.061962,6.261995,4.395363,9.141742,4.301094,-5.510625,-8.648969,0.437293,-2.889762,-1.282216,-2.700189,-2.533281,-9.520420,3.293744,-3.893438,9.495763,9.196748,5.908398,-1.740048,5.083283,2.334346,3.334895,3.613297,3.633459,1.009357,-7.253829,0.071475,9.217246,-8.462172,1.615591,8.170326,3.324975,3.708456,2.345181,6.021696,4.357276,-3.413819,-5.331701,-9.076120,0.560380,8.566270,7.280726,1.106310,-8.259329,-4.048856,-0.146577,-1.607470,-1.572301,-7.225683,-1.445402,4.424459,-6.254553,-0.595366,5.625521,-6.048237,-0.384202,-0.150038,-1.875513,-7.949478,-1.850799,-2.972102,-8.961914,-8.964462,9.550898,1.888024,-9.513261,0.763620,-8.455871,5.275043,-5.383755,6.289860,-8.682375,7.560662,5.075872,9.597708,-0.912203,-2.327137,3.171646,8.921317,5.669949,-2.292890,7.438463,0.832143,9.429694,-2.193085,-3.178873,-8.441449,6.492804,-3.064905,-0.664859,-7.445100,3.415135,1.591006,9.793991,3.887546,4.050677,-6.254608,-3.154849,8.684826,2.645721,9.985269,5.272029,-8.743352,0.212865,9.071369,-9.348090,-9.097577,-8.103142,-9.922931,8.953663,-6.754717,9.486073,8.225693,-6.501323,8.659831,-1.951975,-1.674967,1.425734,0.139113,5.010789,-8.692191,-7.899841,4.425053,-6.889485,3.312165,-2.927514,0.718499,-2.722263,1.280528,3.302734,-9.476417,6.788208,0.067355,7.592068,-7.817559,5.097894,4.810654,7.535321,-5.470779,-8.617019,5.447664,0.213069,4.931499,-1.514868,9.643541,8.809532,4.796680,-6.099075,7.773499,1.633276,-6.734703,-2.045551,5.314265,-5.046186,-4.783052,5.626402,0.903445,-5.662104,-8.139914,8.607501,-0.513016,-9.365470,-4.739683,-0.713988,-5.429708,0.982787,-3.535738,-8.462664,7.630942,4.859627,-6.015925,-6.160437,1.568403,-8.764606,2.718322,4.852979,-4.277081,8.352910,-7.662522,0.260409,-7.131820,4.429775,-6.282812,-2.688144,8.110633,2.112838,-2.798032,0.313161,-5.499921,1.401471,-2.476407,7.783825,-0.330635,0.520163,-6.033384,-9.024817,4.590723,9.454305,8.278456,3.164798,8.183163,-1.813604,-3.008718,-0.798092,3.040779,-1.463096,-4.472804,1.630981,0.938933,-8.523027,5.368351,-8.927055,-5.202071,-4.861190,6.102624,-6.938305,7.369113,-5.224141,2.917402,-9.494941,-6.660308,-8.293634,3.426681,-8.381371,-7.683379,-1.021222,1.362480,-7.341124,3.490359,0.879422,-0.737697,9.286944,8.564413,-6.217489,-7.791881,1.361926,3.311420,-2.806028,4.254112,8.836271,1.840965,9.572325,-8.586765,-8.037145,0.186174,-1.043064,-4.317323,6.934438,5.910070,-4.041113,-8.396424,3.789615,4.439572,-1.471811,-9.010342,-0.471284,-6.693686,-8.541686,0.676058,-1.805966,-6.971511,-7.010104,-8.840722,-1.125131,8.824887,-7.463818,2.064355,-3.685550,8.944072,0.751270,-6.674744,3.712806,-6.316498,-3.175318,-0.602624,-5.684479,2.486551,6.188813,-0.303709,-8.461310,-2.069401,7.087307,-5.860095,-9.044258,6.641029,7.810521,0.526146,-1.495953,-7.932752,1.902327,5.362037,9.359690,9.597715,-6.271511,3.874051,2.438698,9.005114,1.995946,-2.810091,3.638367,2.384631,-7.451855,8.949970,-4.529018,2.618550,6.232126,2.501396,6.259636,7.782036,-2.739533,-5.547782,6.236335,2.535699,5.075240,-9.401849,1.638150,7.843403,2.497030,-4.379514,-6.834228,8.633506,-2.168047,6.452757,3.174759,9.400923,3.828204,-4.412568,-1.807641,2.530727,6.813106,-3.482019,3.191845,-5.686184,5.175948,8.769466,-3.533503,3.711568,4.720103,7.870860,4.020172,1.630614,-9.487271,3.201384,5.815257,3.435889,6.357361,6.468522,2.528670,6.779056,-3.863953,1.464216,5.515504,2.580443,4.623057,-6.686110,9.785767,7.822996,5.867470,-5.028992,6.028110,8.555211,-6.666001,8.392306,6.164857,-9.443092,3.648888,-9.160779,-0.524615,-5.751042,-1.548940,-7.029039,-0.431378,-7.057069,7.278833,-5.990930,-9.185808,2.222271,-8.782911,-5.019138,7.019849,0.108783,-8.107424,5.012073,7.338054,-3.160972,-6.727410,7.229084,-7.224724,-1.687586,7.532289,-2.615376,8.212774,-0.797831,1.615933,1.545351,7.898765,3.584494,-1.361699,-7.576715,-6.688834,-2.203061,4.008771,7.383865,9.667986,1.803582,-3.910630,-2.652947,7.378436,2.407333,8.348705,5.097695,1.651340,0.026176,-4.604971,7.537487,-5.727975,1.047734,-3.426466,-8.993680,3.149075,-4.844080,6.743106,0.687929,6.649003,4.165935,5.914826,5.623402,-5.719898,-3.000857,-3.612808,5.721859,6.975270,-0.311947,-8.665024,9.633176,5.078538,3.305956,-9.321003,3.414036,-2.182361,0.851995,-4.120864,-6.145475,3.559795,6.544217,4.105775,-8.400842,7.154748,-0.033652,1.651734,3.654168,7.234912,-0.240640,1.603121,4.896028,-6.179220,4.312185,4.901171,5.267144,5.648042,-6.708469,-1.435586,6.966565,2.661508,8.923720,-1.688830,3.098452,9.358118,1.637061,-0.753493,-5.675386,3.597411,1.464751,-5.567119,9.565135,2.483359,-0.059578,9.804537,3.053735,7.231277,6.634068,-9.762509,2.820705,-2.439188,-9.385538,2.795640,-5.280667,7.459745,7.711133,-3.975321,5.647082,-8.194142,8.824407,4.426533,-3.137179,4.919512,-2.506586,0.655194,-1.004041,6.082244,-0.065261,0.278766,9.714357,-9.389889,-5.296532,-5.633651,-0.369346,6.263684,-0.445505,-5.147610,4.140810,-9.812437,7.765197,5.002605,-5.366337,4.030979,8.241285,2.499289,7.220012,6.146824,-3.403972,9.978959,-1.865300,8.993272,5.288296,-8.980579,8.919351,1.580629,-3.665605,-9.328208,5.390252,4.879867,8.545265,3.630687,-8.901398,-1.726578,-6.429741,1.881657,7.341589,9.097651,-4.230314,4.914464,2.700028,6.979073,-9.051500,-6.356132,5.774565,-9.392056,-1.027718,0.966608,7.725237,2.906482,9.044568,-7.167555,0.483902,5.275634,8.332639,-3.209830,7.332890,-1.476802,1.922458,0.570353,-9.182117,3.717382,-6.013848,0.282186,0.754353,4.984475,7.139436,7.241958,-2.020271,2.129770,9.211542,-2.432625,3.701699,-4.716123,7.188872,5.543556,-2.279945,-1.766730,9.171482,-0.221884,-3.093475,8.787464,8.231428,6.956297,0.627171,-1.913702,-3.733218,-3.229741,6.913998,-1.260398,-7.106090,6.548715,5.848557,6.627198,9.701414,2.268748,-6.065072,-8.427548,6.073960,0.881043,-2.179279,1.033042,-2.900190,-0.431266,9.249282,-3.883239,-3.005276,-6.425489,5.529464,-6.785400,2.199647,-9.658747,-8.333321,8.772661,-7.122647,-0.699456,-1.150091,1.107196,0.227473,0.753822,0.990291,4.699167,8.739704,1.363475,8.344061,8.074966,1.598060,-9.919704,-7.425724,3.274931,-5.514916,8.991050,3.315695,8.253609,-8.519500,3.773156,-2.732763,1.067794,-4.233639,-8.297914,-9.238621,-7.193051,-3.915172,4.957417,6.200247,1.137207,0.050027,-6.505198,-5.952246,1.045254,-2.503137,-4.397952,0.145664,-3.949015,-9.047376,-8.275898,6.529260,-3.206293,1.619079,-2.864869,-5.589959,2.393043,2.418499,-8.928196,7.505937,-7.059473,1.959279,7.447474,0.799641,-2.840803,-9.814447,-3.590958,-3.444600,0.066371,2.637874,-1.063822,-6.336605,1.464924,9.257376,5.083628,2.696408,5.343023,-1.233061,-5.963488,-4.043939,2.417822,0.279675,-1.165488,-2.216070,2.618045,-4.029329,2.975123,0.081537,-7.531747,-6.235411,-0.021729,4.206004,-8.954899,-7.402010,4.726410,-8.516188,0.092591,4.877631,1.104387,-9.732371,9.610308,-1.315728,3.691437,4.066988,-7.676829,9.887838,9.666224,-2.584169,-0.754134,-6.592726,-3.593424,-7.660879,-5.750813,6.823593,8.509218,8.770631,-6.731417,3.829448,2.878807,3.279480,-5.990740,-6.157451,-0.148778,-1.808237,4.142743,-6.330786,7.991917,-9.214424,-1.536520,5.404578,1.655982,-3.116524,-6.610724,4.355795,-3.631035,2.329551,9.007460,3.694556,3.968331,-9.432896,-9.965546,-2.115596,2.587729,-3.684370,-0.230142,9.899091,-8.026947,-3.119103,5.769595,-7.932688,-2.299687,-5.256115,-2.392550,8.316068,0.028752,-1.928673,4.616039,5.538263,6.985104,-6.118418,5.313320,6.447483,-6.056174,-2.636671,0.906841,5.537401,7.871558,2.257995,2.759671,1.237944,-1.240794,8.621830,-0.643942,-2.069362,-7.815984,8.775376,-3.996999,8.523217,-1.493423,-1.589483,-5.718903,-4.702433,-8.102765,9.237674,-4.451662,-5.473997,7.653088,-1.878572,7.299148,2.834477,-5.662088,2.357746,-3.689927,8.786099,2.409974,-7.858051,6.182783,6.005498,8.280169,-9.567266,4.913242,-4.829752,-9.181166,-1.181897,-0.294080,1.177233,-8.905123,1.939052,6.994484,-4.676752,0.029004,-3.918287,1.399482,-6.892661,5.714578,-9.214447,3.529092,7.159451,-1.351707,5.728490,8.625921,2.984239,-8.904664,-3.385690,2.201202,-0.079361,-3.406264,7.215967,-8.058531,-5.320878,-4.049668,-2.412125,7.119272,4.822488,2.872622,-2.777814,5.243529,-2.660149,0.346511,6.480979,0.873335,1.372011,6.685046,0.957497,-3.320866,0.085267,1.090546,-6.110865,1.249660,-5.994249,9.593060,6.580094,-6.035700,-3.125834,9.980277,-8.957944,6.792384,-9.572495,-0.540357,-0.350373,0.984167,-9.806781,2.620552,2.651466,-7.059928,5.480235,0.493504,5.256131,-1.053114,4.725841,1.877492,4.340152,2.849559,6.390614,7.426666,-9.835077,0.548652,9.643338,1.551816,2.167958,-7.182350,3.373325,-3.512587,9.914540,-6.697089,-4.336427,-7.106358,-9.801749,2.359914,-4.043097,5.650552,3.635468,2.014828,6.300198,9.588138,-6.200489,8.700235,3.330446,-9.974802,5.609982,3.593298,8.715592,7.220449,7.405900,3.156967,3.544723,-7.757164,-0.274831,-4.933089,4.837601,-5.208811,0.420204,3.506898,3.268396,-3.131331,1.750260,-1.764734,1.447498,-4.972773,-1.199015,-5.648698,6.463419,-6.811700,-0.208244,5.779491,8.546718,-3.447103,-3.725852,2.352258,4.725787,-4.767115,-4.631282,0.216779,-0.905315,-3.962285,-8.829142,-1.126561,-3.544941,7.996993,2.692735,-1.652724,-1.372125,-1.153887,-0.130523,4.024550,3.285939,-1.454401,-6.875232,1.761656,-1.906554,-2.601734,2.082308,-6.094973,0.723720,-8.875594,-6.143437,6.492965,1.718006,9.647104,-1.071775,-2.627689,-0.279892,9.861370,-6.154363,0.922022,-0.394207,0.938911,3.345001,5.473323,9.312010,4.503714,-7.245613,2.396021,-8.686755,-8.252563,2.693623,-7.031427,6.618902,-3.541236,1.643793,-3.522665,2.031938,3.980971,6.732980,-8.712964,-0.306166,7.817328,-3.322329,8.699242,8.581987,2.262658,-0.843085,3.315221,7.422377,5.506114,9.955550,0.258210,-6.610601,3.308493,7.319675,-9.859727,-3.162327,2.309362,-5.320143,7.688614,-2.752758,-5.569197,6.024061,-8.812205,-9.659250,5.317190,-8.184665,-4.780690,2.647666,-8.079746,4.329339,-2.262779,-8.641878,9.678854,-5.030301,5.841987,0.725763,5.631083,8.617249,-3.948992,-2.623819,9.700257,-6.957977,1.557049,-3.241505,-3.421928,-6.647158,6.450039,-2.390529,-8.844691,5.523583,9.694695,6.016108,9.513478,2.924456,-9.362609,9.061989,-4.917453,-2.827697,1.865133,6.401183,-7.660416,9.342540,6.164255,-6.595067,-8.998953,5.550478,9.252362,8.879781,5.468324,-8.137073,-9.244315,0.212684,1.547286,-4.057681,-4.540351,-8.894726,3.618159,-3.271409,-3.967853,-3.212322,9.114529,-8.604897,7.966406,7.276722,-2.737889,-1.363998,-0.330259,7.162574,8.827042,-7.725194,-6.143204,6.038825,-5.958165,-1.204758,-3.048974,-5.947477,-6.540331,-0.935125,-5.845272,-1.459532,9.101579,3.617337,-2.022872,0.977263,-1.961492,-3.836349,3.576720,-6.214512,9.356087,-9.055185,-4.192103,1.951123,2.539455,-1.655868,-6.385610,5.645077,5.581999,9.571532,9.864770,-2.899723,-9.799410,-1.343492,-3.427553,-0.172842,7.591900,9.442525,5.861606,-8.846936,7.883767,-8.320204,2.833631,3.038950,-4.567566,9.168231,-7.223720,1.041535,-4.704570,-6.291964,-6.851187,-2.511969,3.842880,4.916917,4.634079,4.953597,-1.376158,-1.959314,4.932356,5.898848,-0.623597,-2.045957,-9.207949,6.423337,4.153569,1.720460,-7.114523,-5.781351,9.915631,-3.066572,0.800766,2.859859,3.778797,-0.679952,-4.682495,-8.214574,-0.796362,9.305899,-7.833030,5.512119,-1.915389,-5.431786,-4.508835,-6.361134,-5.518135,-0.513424,-3.572162,-2.114814,9.874808,2.672136,-6.324783,-8.330532,-8.250614,8.952195,2.486181,-5.224642,4.513446,-2.956237,6.735782,2.939849,-2.065577,-1.861638,-5.286977,-5.112959,8.938976,8.701698,-7.986367,-4.170059,5.202185,9.544780,-5.908233,-0.707502,-1.381564,1.491991,7.231619,-8.774526,1.359896,-0.252567,4.016892,5.214397,-1.672311,-1.967478,3.065211,0.439586,-8.252449,2.247617,2.293400,-2.336285,-8.192875,7.323547,-4.258370,0.679883,-6.679433,5.446097,1.823064,-3.334510,5.722642,-5.218471,3.056047,9.149130,-2.538043,-9.462417,-8.331166,-2.799978,1.441301,-7.757105,7.026803,6.703852,-9.956433,8.794111,6.898054,4.609202,-6.679111,7.111583,-8.440497,8.183298,3.366062,-7.296657,-9.741036,9.339339,-4.481363,8.712266,2.975863,-2.359546,-5.481370,6.993844,5.131223,-6.440163,-4.919247,-4.149357,0.021670,-9.828470,3.112920,-5.652529,1.963133,8.040571,-8.640965,2.247108,7.481897,7.439179,7.071673,-1.561573,8.184968,-8.751712,-9.473783,-8.464533,-3.404984,3.297621,3.266219,7.005927,2.338728,1.777318,5.057743,2.602529,-3.519706,-0.436460,-9.638493,-0.787023,-0.363104,8.627738,1.648987,-7.285256,-0.118630,-3.395817,1.929268,-1.640349,-1.685710,-9.452985,-5.580099,6.334963,-7.904482,-2.801177,-9.217957,9.409278,7.791368,1.788932,-3.871970,-2.021466,3.140910,7.244633,-2.581950,0.554640,6.844546,7.678131,-1.891844,-4.743478,-7.076976,2.178561,6.297201,9.817983,3.308279,-9.407188,-5.748025,2.655117,5.078773,5.794248,-6.426010,-1.558141,-1.433402,-8.487869,-5.790077,-9.706678,7.606488,9.499586,-1.580194,-8.373222,-6.649055,8.466603,8.464100,-4.704369,1.980804,4.713747,4.433915,5.072063,3.686160,-2.778348,-3.605501,-0.005890,-2.107477,8.010896,3.599451,-7.256265,-5.158395,-5.761006,-4.655112,-8.442398,-5.322688,-0.236005,9.459169,-1.167993,4.520124,7.798014,8.145436,3.991912,6.788256,-6.989276,-1.766447,-1.153414,-0.293047,2.760824,-2.018204,6.192420,5.268200,-7.279203,4.067493,8.001228,8.656003,5.830986,-5.213715,-8.535153,8.775810,-2.846719,4.616340,-9.320144,-7.271638,1.390265,9.720038,9.538981,-1.148151,0.251606,-8.178209,-3.768017,9.770922,-8.370877,-5.598093,-0.063557,4.366748,-2.266392,2.558273,4.943324,-2.900623,-4.657398,2.220542,-2.144409,0.553993,2.188451,-1.839328,6.714667,5.888609,4.386699,-9.476592,2.429940,0.136979,4.540321,-4.497306,-9.688983,0.149571,-9.274150,-9.073426,-8.586715,2.512016,-0.008872,5.108000,8.396220,6.820388,-2.193181,-0.262665,-7.774820,5.516191,8.752177,-6.072784,-3.519360,-4.984354,-9.930006,0.962208,0.503891,-6.836170,-7.597917,9.158706,8.869690,7.138737,1.476790,6.269616,6.739498,8.561425,6.577519,-3.608774,6.969669,-0.183807,7.173693,-7.697542,-7.108218,-5.736821,-5.281451,4.677399,1.349475,1.564783,-7.463031,-6.049770,-0.764069,-4.361630,2.784268,9.832529,-2.031323,-4.072246,-9.057977,-4.606648,7.172597,0.834396,-3.344250,8.873231,1.391263,-9.641054,-5.536619,1.953690,-8.765022,-7.491995,-1.255210,-4.261332,2.436366,9.139021,3.358808,7.884824,-2.076441,-9.324465,5.088378,-0.333985,6.068139,-8.929318,0.579269,-1.306194,-9.435274,7.941070,-1.382885,7.992816,-4.112761,5.476347,-3.594803,0.694202,-0.666134,0.574727,2.091102,-0.601656,1.806450,-1.063947,4.410617,-8.144795,0.235806,-0.463895,-8.108883,-3.326143,-3.008938,-0.151795,-4.312007,-6.399774,-2.662103,-7.737924,7.269173,-3.476741,7.917769,-9.479164,1.280114,-6.859868,-0.265516,-8.205300,-1.924950,-9.109052,1.163456,7.961991,-7.616679,-6.585816,-3.238499,-7.985445,0.103476,-6.461104,-6.115025,9.233366,3.740639,-0.930961,6.714170,-6.348214,3.238701,-5.378738,-0.596158,-8.485694,4.471058,6.301678,7.121945,-2.323049,-9.675430,-0.685589,3.102197,-2.660041,8.550811,-5.596843,1.451039,6.068856,8.207683,0.410557,7.948605,-9.397472,-1.613231,-0.579408,-1.626942,8.066499,4.072774,9.559054,8.958332,-3.671732,-0.615420,6.152116,6.606045,0.288082,7.949759,-4.147617,-4.199625,8.033774,-8.781120,7.764857], dtype = "float32")#candidate|4777|(2880,)|const|float32
var_4778 = relay.var("var_4778", dtype = "bool", shape = (385,))#candidate|4778|(385,)|var|bool
call_4776 = relay.TupleGetItem(func_3391_call(relay.reshape(const_4777.astype('float32'), [16, 15, 12]), relay.reshape(var_4778.astype('bool'), [385,]), ), 2)
call_4779 = relay.TupleGetItem(func_3395_call(relay.reshape(const_4777.astype('float32'), [16, 15, 12]), relay.reshape(var_4778.astype('bool'), [385,]), ), 2)
output = relay.Tuple([call_4761,call_4776,const_4777,var_4778,])
output2 = relay.Tuple([call_4762,call_4779,const_4777,var_4778,])
func_4787 = relay.Function([var_4778,], output)
mod['func_4787'] = func_4787
mod = relay.transform.InferType()(mod)
mutated_mod['func_4787'] = func_4787
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4788 = relay.var("var_4788", dtype = "bool", shape = (385,))#candidate|4788|(385,)|var|bool
func_4787_call = mutated_mod.get_global_var('func_4787')
call_4789 = func_4787_call(var_4788)
output = call_4789
func_4790 = relay.Function([var_4788], output)
mutated_mod['func_4790'] = func_4790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_4797 = relay.TupleGetItem(func_4671_call(), 0)
call_4798 = relay.TupleGetItem(func_4672_call(), 0)
output = call_4797
output2 = call_4798
func_4802 = relay.Function([], output)
mod['func_4802'] = func_4802
mod = relay.transform.InferType()(mod)
mutated_mod['func_4802'] = func_4802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mutated_mod.get_global_var('func_4802')
call_4803 = func_4802_call()
output = call_4803
func_4804 = relay.Function([], output)
mutated_mod['func_4804'] = func_4804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4813 = relay.var("var_4813", dtype = "int16", shape = (16, 5, 2))#candidate|4813|(16, 5, 2)|var|int16
var_4814 = relay.var("var_4814", dtype = "int16", shape = (16, 5, 2))#candidate|4814|(16, 5, 2)|var|int16
bop_4815 = relay.greater_equal(var_4813.astype('bool'), relay.reshape(var_4814.astype('bool'), relay.shape_of(var_4813))) # shape=(16, 5, 2)
output = relay.Tuple([bop_4815,])
output2 = relay.Tuple([bop_4815,])
func_4825 = relay.Function([var_4813,var_4814,], output)
mod['func_4825'] = func_4825
mod = relay.transform.InferType()(mod)
mutated_mod['func_4825'] = func_4825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4825_call = mutated_mod.get_global_var('func_4825')
var_4827 = relay.var("var_4827", dtype = "int16", shape = (16, 5, 2))#candidate|4827|(16, 5, 2)|var|int16
var_4828 = relay.var("var_4828", dtype = "int16", shape = (16, 5, 2))#candidate|4828|(16, 5, 2)|var|int16
call_4826 = func_4825_call(var_4827,var_4828,)
output = call_4826
func_4829 = relay.Function([var_4827,var_4828,], output)
mutated_mod['func_4829'] = func_4829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4651_call = mod.get_global_var('func_4651')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_4844 = relay.TupleGetItem(func_4651_call(), 0)
call_4845 = relay.TupleGetItem(func_4652_call(), 0)
func_4568_call = mod.get_global_var('func_4568')
func_4572_call = mutated_mod.get_global_var('func_4572')
const_4847 = relay.const([-8,-5,3,9,10,-1,-1,8,-1,7,-5,3,-10,-10,-8,-7,3,-5,4,4,-1,8,10,-8,-4,8,8,1,-8,-10,9,-3,1,-1,-9,-8,1,-4,4,6,9,-7,-5,4,1,-10,-1,-3,10,-5,10,-1,1,-2,7,3,1,-2,8,10,2,-10,-2,5,-8,10,6,-8,7,4,-9,-2,4,-7,-2,4,6,6,8,9,-2,5,-2,-6,5,5,-6,-4,-2,5,-7,-7,2,2,-3,-7,4,4,4,-7,2,3,-10,8,-8,-6,-3,-10,6,-4,-7,-7,-2,-8,-3,-3,4,2,-3,-6], dtype = "int64")#candidate|4847|(120,)|const|int64
call_4846 = relay.TupleGetItem(func_4568_call(relay.reshape(const_4847.astype('int64'), [4, 2, 15]), relay.reshape(const_4847.astype('int64'), [4, 2, 15]), ), 0)
call_4848 = relay.TupleGetItem(func_4572_call(relay.reshape(const_4847.astype('int64'), [4, 2, 15]), relay.reshape(const_4847.astype('int64'), [4, 2, 15]), ), 0)
output = relay.Tuple([call_4844,call_4846,const_4847,])
output2 = relay.Tuple([call_4845,call_4848,const_4847,])
func_4879 = relay.Function([], output)
mod['func_4879'] = func_4879
mod = relay.transform.InferType()(mod)
mutated_mod['func_4879'] = func_4879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4879_call = mutated_mod.get_global_var('func_4879')
call_4880 = func_4879_call()
output = call_4880
func_4881 = relay.Function([], output)
mutated_mod['func_4881'] = func_4881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4879_call = mod.get_global_var('func_4879')
func_4881_call = mutated_mod.get_global_var('func_4881')
call_4882 = relay.TupleGetItem(func_4879_call(), 2)
call_4883 = relay.TupleGetItem(func_4881_call(), 2)
func_2094_call = mod.get_global_var('func_2094')
func_2099_call = mutated_mod.get_global_var('func_2099')
const_4898 = relay.const(-1, dtype = "int8")#candidate|4898|()|const|int8
const_4899 = relay.const([[1],[3],[-6],[8],[10],[7],[-1],[9],[-2],[-8],[-10],[-9],[-8],[1],[-4],[-1],[8],[7],[-10],[-1],[10],[10],[-7],[-5],[-5],[-8],[-10],[3],[3],[3],[10],[6],[-9],[3],[8],[4],[10],[-9],[4],[-9],[-7],[-1],[4],[-4],[-8],[6],[-3],[6],[-5],[-3],[-1],[-1],[10],[1],[6],[-2],[-7],[-1],[-7],[-9],[3],[4],[10],[-6],[-9],[6],[-6],[2],[-8],[10],[2],[-8],[-5],[1],[-3]], dtype = "int8")#candidate|4899|(75, 1)|const|int8
var_4900 = relay.var("var_4900", dtype = "bool", shape = (11, 35))#candidate|4900|(11, 35)|var|bool
call_4897 = relay.TupleGetItem(func_2094_call(relay.reshape(const_4898.astype('int8'), []), relay.reshape(const_4899.astype('int8'), [15, 1, 5]), relay.reshape(var_4900.astype('bool'), [385,]), ), 1)
call_4901 = relay.TupleGetItem(func_2099_call(relay.reshape(const_4898.astype('int8'), []), relay.reshape(const_4899.astype('int8'), [15, 1, 5]), relay.reshape(var_4900.astype('bool'), [385,]), ), 1)
func_4568_call = mod.get_global_var('func_4568')
func_4572_call = mutated_mod.get_global_var('func_4572')
call_4903 = relay.TupleGetItem(func_4568_call(relay.reshape(call_4882.astype('int64'), [4, 2, 15]), relay.reshape(call_4882.astype('int64'), [4, 2, 15]), ), 0)
call_4904 = relay.TupleGetItem(func_4572_call(relay.reshape(call_4882.astype('int64'), [4, 2, 15]), relay.reshape(call_4882.astype('int64'), [4, 2, 15]), ), 0)
var_4917 = relay.var("var_4917", dtype = "int8", shape = (75, 3))#candidate|4917|(75, 3)|var|int8
bop_4918 = relay.logical_and(const_4899.astype('bool'), var_4917.astype('bool')) # shape=(75, 3)
bop_4923 = relay.logical_or(var_4900.astype('bool'), const_4898.astype('bool')) # shape=(11, 35)
bop_4936 = relay.less_equal(bop_4923.astype('bool'), relay.reshape(call_4897.astype('bool'), relay.shape_of(bop_4923))) # shape=(11, 35)
bop_4939 = relay.less_equal(bop_4923.astype('bool'), relay.reshape(call_4901.astype('bool'), relay.shape_of(bop_4923))) # shape=(11, 35)
func_3889_call = mod.get_global_var('func_3889')
func_3896_call = mutated_mod.get_global_var('func_3896')
var_4952 = relay.var("var_4952", dtype = "int32", shape = (36, 26))#candidate|4952|(36, 26)|var|int32
var_4953 = relay.var("var_4953", dtype = "float32", shape = (715,))#candidate|4953|(715,)|var|float32
const_4954 = relay.const([-10,-5,-9,-8,4,5,3,8,-6,-8,8,4,-4,-6,-3,-6,1,-9,10,7,-9,-7,-8,-2,5,-3,-7,-3,-6,-1,1,-3,-3,-3,10,-6,-4,-3,-9,9,6,-9,10,6,-10,-4,6,-3,10,1,-8,8,1,4,-8,-4,-6,-9,-4,10,-2,6,4,9,7,-5,-9,7,-6,-2,6,9,8,6,-1,-7,-3,-2,-4,4,-1], dtype = "int32")#candidate|4954|(81,)|const|int32
call_4951 = relay.TupleGetItem(func_3889_call(relay.reshape(var_4952.astype('int32'), [8, 9, 13]), relay.reshape(const_4898.astype('bool'), []), relay.reshape(var_4953.astype('float32'), [715,]), relay.reshape(const_4954.astype('int32'), [81,]), relay.reshape(const_4899.astype('int8'), [75,]), ), 6)
call_4955 = relay.TupleGetItem(func_3896_call(relay.reshape(var_4952.astype('int32'), [8, 9, 13]), relay.reshape(const_4898.astype('bool'), []), relay.reshape(var_4953.astype('float32'), [715,]), relay.reshape(const_4954.astype('int32'), [81,]), relay.reshape(const_4899.astype('int8'), [75,]), ), 6)
func_4787_call = mod.get_global_var('func_4787')
func_4790_call = mutated_mod.get_global_var('func_4790')
call_4958 = relay.TupleGetItem(func_4787_call(relay.reshape(var_4900.astype('bool'), [385,])), 3)
call_4959 = relay.TupleGetItem(func_4790_call(relay.reshape(var_4900.astype('bool'), [385,])), 3)
output = relay.Tuple([call_4882,call_4903,bop_4918,bop_4936,call_4951,var_4952,var_4953,const_4954,call_4958,])
output2 = relay.Tuple([call_4883,call_4904,bop_4918,bop_4939,call_4955,var_4952,var_4953,const_4954,call_4959,])
func_4960 = relay.Function([var_4900,var_4917,var_4952,var_4953,], output)
mod['func_4960'] = func_4960
mod = relay.transform.InferType()(mod)
var_4961 = relay.var("var_4961", dtype = "bool", shape = (11, 35))#candidate|4961|(11, 35)|var|bool
var_4962 = relay.var("var_4962", dtype = "int8", shape = (75, 3))#candidate|4962|(75, 3)|var|int8
var_4963 = relay.var("var_4963", dtype = "int32", shape = (36, 26))#candidate|4963|(36, 26)|var|int32
var_4964 = relay.var("var_4964", dtype = "float32", shape = (715,))#candidate|4964|(715,)|var|float32
output = func_4960(var_4961,var_4962,var_4963,var_4964,)
func_4965 = relay.Function([var_4961,var_4962,var_4963,var_4964,], output)
mutated_mod['func_4965'] = func_4965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_4975 = relay.TupleGetItem(func_4671_call(), 0)
call_4976 = relay.TupleGetItem(func_4672_call(), 0)
output = relay.Tuple([call_4975,])
output2 = relay.Tuple([call_4976,])
func_4977 = relay.Function([], output)
mod['func_4977'] = func_4977
mod = relay.transform.InferType()(mod)
mutated_mod['func_4977'] = func_4977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4977_call = mutated_mod.get_global_var('func_4977')
call_4978 = func_4977_call()
output = call_4978
func_4979 = relay.Function([], output)
mutated_mod['func_4979'] = func_4979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mod.get_global_var('func_4802')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_4991 = func_4802_call()
call_4992 = func_4802_call()
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_5000 = relay.TupleGetItem(func_4671_call(), 0)
call_5001 = relay.TupleGetItem(func_4672_call(), 0)
output = relay.Tuple([call_4991,call_5000,])
output2 = relay.Tuple([call_4992,call_5001,])
func_5004 = relay.Function([], output)
mod['func_5004'] = func_5004
mod = relay.transform.InferType()(mod)
output = func_5004()
func_5005 = relay.Function([], output)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_5080 = relay.TupleGetItem(func_5004_call(), 1)
call_5081 = relay.TupleGetItem(func_5005_call(), 1)
uop_5084 = relay.log(call_5080.astype('float32')) # shape=(7, 4, 7)
uop_5086 = relay.log(call_5081.astype('float32')) # shape=(7, 4, 7)
output = uop_5084
output2 = uop_5086
func_5087 = relay.Function([], output)
mod['func_5087'] = func_5087
mod = relay.transform.InferType()(mod)
mutated_mod['func_5087'] = func_5087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5087_call = mutated_mod.get_global_var('func_5087')
call_5088 = func_5087_call()
output = call_5088
func_5089 = relay.Function([], output)
mutated_mod['func_5089'] = func_5089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_5149 = relay.TupleGetItem(func_4671_call(), 0)
call_5150 = relay.TupleGetItem(func_4672_call(), 0)
output = relay.Tuple([call_5149,])
output2 = relay.Tuple([call_5150,])
func_5163 = relay.Function([], output)
mod['func_5163'] = func_5163
mod = relay.transform.InferType()(mod)
output = func_5163()
func_5164 = relay.Function([], output)
mutated_mod['func_5164'] = func_5164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mod.get_global_var('func_4802')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_5169 = func_4802_call()
call_5170 = func_4802_call()
output = relay.Tuple([call_5169,])
output2 = relay.Tuple([call_5170,])
func_5177 = relay.Function([], output)
mod['func_5177'] = func_5177
mod = relay.transform.InferType()(mod)
mutated_mod['func_5177'] = func_5177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5177_call = mutated_mod.get_global_var('func_5177')
call_5178 = func_5177_call()
output = call_5178
func_5179 = relay.Function([], output)
mutated_mod['func_5179'] = func_5179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_5211 = relay.TupleGetItem(func_5163_call(), 0)
call_5212 = relay.TupleGetItem(func_5164_call(), 0)
func_1700_call = mod.get_global_var('func_1700')
func_1703_call = mutated_mod.get_global_var('func_1703')
const_5229 = relay.const([1.711476,-8.919825,-8.037324,6.842078,8.474354,0.413856,7.285072,-5.030930,-0.498346,-9.183872,2.945791,-3.498757,0.277279,5.296896,-1.149284,-8.133702,6.039381,-0.638919,-0.386425,-3.076326,8.841119,8.886406,4.176065,8.166760,-1.601100,1.781402,-0.329326,-1.517041,5.276279,-5.014061,0.162685,5.066750,-5.400821,-2.818779,6.521379,-7.710588,2.706126,5.773595,-1.297138,-5.523494,-4.693301,-1.631476,-8.799540,8.468396,4.068643,3.962966,-8.644415,7.639197,-0.045979,9.350918,6.189587,9.660642,-2.342272,0.645056,6.270660,5.260289,-9.302164,-3.727924,5.447704,-9.212099,-7.059562,9.429223,-3.843401,1.175480,-5.782466,-2.188653,-2.814843,-9.333966,-8.311448,8.537550,-9.414445,-4.947830,8.569551,5.681203,-8.715326,6.176459,4.709399,4.621659,3.832476,4.027100,-3.490811,4.961660,8.645273,5.264479,-7.491827,3.932732,8.331614,4.642789,9.926088,2.612068,-2.012032,-0.572309,1.343315,9.138340,-7.674577,0.208459,-1.044021,0.185161,-8.694761,1.776577,-7.436973,1.198086,-4.858570,-7.295974,5.054995,3.699153,-3.832908,-8.962984,-5.032288,-2.489139,-2.347362,7.375751,0.874750,-7.533452,6.717828,-7.592436,-7.957506,5.377236,-8.099214,-6.038284,-3.345384,7.965440,1.451412,-1.432518,4.199374,-6.470434,-9.373693,-2.385068,2.964630,-4.395185,-7.473380,-7.836390,-2.411787,-2.617738,0.524876,0.959911,-9.248841,-4.134346,-8.462442,3.783902,3.650622,7.255409,4.371576,8.889917,-5.570528,0.581762,-6.274891,6.484918,-7.447123,3.257096,0.516846,8.982251,4.630705,7.232796,-1.475603,5.970599,0.099137,-5.461763,-7.088172,4.907512,7.038276,-5.570293,-0.536171,-1.154793,9.123786,-1.456271,-7.963513,-1.481343,1.601918,7.552089,9.175994,3.552393,1.763610,8.545687,-9.105673,-8.429613,-0.979427,6.670893,3.215644,4.528526,-1.458396,6.538517,8.430152,-4.251499,6.774089,-2.592427,2.157439,6.256384,2.709047,-3.837766,2.279281,9.789206,8.158466,-3.341152,4.895837,4.881432,3.780158,-3.189737,3.722107,9.140173,6.091079,4.816012,-8.047028,4.654052,5.838934,4.486771,5.954975,-4.395140,8.745708,6.476266,-4.579338,-0.337923,9.768401,-7.546943,-5.397917,3.030162,-0.933105,-1.490492,-0.496287,-4.338386,3.263849,-6.099865,0.550774,-2.853171,-0.807088,8.327049,-6.852744,-3.600420,-8.913171,-7.105605,0.089029,-3.770264,-7.950737,-8.500409,8.557892,5.282153,-6.045408,8.980802,-4.203533,-3.399307,6.255996,-4.244471,-2.425507,8.312778,9.125984,3.995823,1.816637,-8.846534,-9.283518,-3.256358,-7.780115,-4.754388,-4.187564,-3.910745,2.511338,5.323818,-3.131539,5.147478,-5.662476,6.890195,-7.356164,-7.383417,4.451878,-8.256240,9.450105,8.882116,-6.392612,-7.388415,9.291320,8.535057,-8.997060,8.452287,-6.404089,1.969899,3.711464,1.984052,6.328595,4.852347,-1.804080,-8.221256,8.466286,8.736134,5.883238,-8.108870,-4.951138,-3.342826,-3.341553,9.522794,-8.911925,9.581343,-1.485433,0.706685,3.323674,-5.336285,-4.636541,6.836383,-3.566177,5.321047,1.261477,-1.369618,-1.083629,-7.394314,-1.119074,0.784700,-8.761159,-6.908756,5.819923,-1.357694,-3.801083,5.744495,3.490196,-9.121379,9.189081,8.709310,1.852179,6.790338,-6.291656,-7.677837,4.714054,5.568933,1.824636,-8.597777,-3.703606,2.626691,3.237115,4.058569,6.400728,-6.867542,-1.176338,9.068568,7.803755,0.600716,-6.961404,-3.969254,3.798389,2.469997,9.159270,-1.490827,-9.892274,2.125876,-2.559677,-8.767689,-8.473332,-3.756746,6.273435,0.711628,-7.384879,-7.459601,-0.031715,7.997434,1.473020,-0.923229,-3.448164,-7.903408,-6.723481,4.471426,-6.001075,1.642097,-2.041343,9.207518,4.808381,0.134943,0.449449,7.031709,-0.741287,-0.007466,5.978611,1.722505,4.284954,7.815309,2.756325,-8.189964,-8.817102,-4.420098,3.213145,-1.826601,-4.807354,1.835204,-5.247031,-4.686356,1.756818,-1.305860,0.373533,-7.620377,1.362015,2.614162,-1.561379,-9.522676,3.479995,-5.929367,5.887156,7.615574,-6.828891,8.220479,2.306452,6.728312,-1.657667,-4.674373,3.731098,-1.648380,-2.189193,8.301545,4.563721,4.151291,4.022587,-0.634084,2.958682,-0.504558,-7.588039,-0.795052,5.186584,-9.570360,0.294651,-7.264102,7.064860,6.982678,-2.928434,6.456799,-5.847947,-3.423956,-6.945927,-2.220945,-5.099656,2.194132,9.816073,8.352812,0.037059,-4.086088,-5.593307,-6.430015,-0.100696,5.191986,-6.252494,-6.855351,7.715692,-7.342184,6.404294,8.384473,-0.132529,-1.571533,-5.785748,-9.662762,8.050659,-1.404121,5.863726,-9.133420,-5.018907,-3.845369,-0.580603,-4.011684,6.244908,4.291444,7.799542,0.943590,7.905958,3.222038,4.627310,9.950474,0.134579,-0.845431,-0.449168,-1.353055,-0.344383,-4.941647,3.959250,-3.690551,7.532505,-4.883157,0.427077,-9.373980,7.397163,-5.405781,-4.475573,-1.281314,-7.848745,-8.764338,4.458501,2.932174,-6.467791,-7.186302,-5.035470,-6.092009,-0.551007,8.419048,-0.781109,-6.569395,8.913742,-9.898967,-1.335927,0.432108,9.017341,-4.129767,-1.295275,-0.913803,0.018307,4.893057,-9.335554,5.021505,-0.462531,-6.380944,1.365730,-4.447613,2.822516,-9.440653,0.923751,-4.054558,9.884887,1.541152,9.042949,-9.036951,-0.459589,-8.531129,-3.463625,0.372297,-0.279557,2.383983,-8.436399,8.924884,5.968269,-9.086410,6.276185,5.905922,9.773228,3.357110,4.545230,8.794728,5.658364,-7.944383,9.335853,-2.396544,0.668723,0.747808,0.387635,1.665446,-3.428435,-4.709953,7.013843,8.065716,-3.633049,9.361277,-1.663062,-5.650671,-9.972270,6.883215,-5.180720,-3.912806,-6.830023,-2.237605,-3.330596,-0.711726,4.028260,-6.120496,-3.458254,2.845730,-5.466699,-1.526578,0.971453,-3.830135,7.969634,1.155186,9.689435,5.070085,-5.698147,-9.076910,-2.316252,6.155812,7.144524,-3.927836,2.362514,-3.077305,-8.178316,6.578809,0.853952,5.737372,9.197530,8.149359,-2.003295,-4.999285,-7.422981,8.704773,2.879466,-6.674618,9.204210,2.039855,-7.010775,-3.571222,-2.457560,-5.466403,-4.350165,4.544343,-4.639209,-8.791428,3.794299,3.559097,9.595270,-8.669794,-9.775451,0.985238,1.728779,-6.643512,4.427088,-9.980520,-2.775883,1.757083,5.909289,5.015099,4.925713,-0.939464,-3.555421,-7.469939,6.726681,6.079450,6.296054,0.828796,0.029645,-3.526758,-4.784267,-7.273162,7.086224,5.617895,-8.174844,1.031560,3.049611,6.641720,9.702008,7.826651,-3.089675,-1.385197,-7.119422,3.761916], dtype = "float32")#candidate|5229|(630,)|const|float32
call_5228 = relay.TupleGetItem(func_1700_call(relay.reshape(const_5229.astype('float32'), [9, 10, 7])), 0)
call_5230 = relay.TupleGetItem(func_1703_call(relay.reshape(const_5229.astype('float32'), [9, 10, 7])), 0)
func_5087_call = mod.get_global_var('func_5087')
func_5089_call = mutated_mod.get_global_var('func_5089')
call_5231 = func_5087_call()
call_5232 = func_5087_call()
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_5233 = relay.TupleGetItem(func_4671_call(), 0)
call_5234 = relay.TupleGetItem(func_4672_call(), 0)
output = relay.Tuple([call_5211,call_5228,const_5229,call_5231,call_5233,])
output2 = relay.Tuple([call_5212,call_5230,const_5229,call_5232,call_5234,])
func_5245 = relay.Function([], output)
mod['func_5245'] = func_5245
mod = relay.transform.InferType()(mod)
mutated_mod['func_5245'] = func_5245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5245_call = mutated_mod.get_global_var('func_5245')
call_5246 = func_5245_call()
output = call_5246
func_5247 = relay.Function([], output)
mutated_mod['func_5247'] = func_5247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5087_call = mod.get_global_var('func_5087')
func_5089_call = mutated_mod.get_global_var('func_5089')
call_5261 = func_5087_call()
call_5262 = func_5087_call()
output = relay.Tuple([call_5261,])
output2 = relay.Tuple([call_5262,])
func_5269 = relay.Function([], output)
mod['func_5269'] = func_5269
mod = relay.transform.InferType()(mod)
output = func_5269()
func_5270 = relay.Function([], output)
mutated_mod['func_5270'] = func_5270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4977_call = mod.get_global_var('func_4977')
func_4979_call = mutated_mod.get_global_var('func_4979')
call_5305 = relay.TupleGetItem(func_4977_call(), 0)
call_5306 = relay.TupleGetItem(func_4979_call(), 0)
var_5308 = relay.var("var_5308", dtype = "float64", shape = (7, 4, 7))#candidate|5308|(7, 4, 7)|var|float64
bop_5309 = relay.maximum(call_5305.astype('uint64'), relay.reshape(var_5308.astype('uint64'), relay.shape_of(call_5305))) # shape=(7, 4, 7)
bop_5312 = relay.maximum(call_5306.astype('uint64'), relay.reshape(var_5308.astype('uint64'), relay.shape_of(call_5306))) # shape=(7, 4, 7)
func_4802_call = mod.get_global_var('func_4802')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_5315 = func_4802_call()
call_5316 = func_4802_call()
func_5177_call = mod.get_global_var('func_5177')
func_5179_call = mutated_mod.get_global_var('func_5179')
call_5319 = relay.TupleGetItem(func_5177_call(), 0)
call_5320 = relay.TupleGetItem(func_5179_call(), 0)
uop_5327 = relay.erf(call_5315.astype('float32')) # shape=(7, 4, 7)
uop_5329 = relay.erf(call_5316.astype('float32')) # shape=(7, 4, 7)
bop_5330 = relay.add(bop_5309.astype('float32'), relay.reshape(uop_5327.astype('float32'), relay.shape_of(bop_5309))) # shape=(7, 4, 7)
bop_5333 = relay.add(bop_5312.astype('float32'), relay.reshape(uop_5329.astype('float32'), relay.shape_of(bop_5312))) # shape=(7, 4, 7)
bop_5376 = relay.logical_and(uop_5327.astype('bool'), relay.reshape(bop_5330.astype('bool'), relay.shape_of(uop_5327))) # shape=(7, 4, 7)
bop_5379 = relay.logical_and(uop_5329.astype('bool'), relay.reshape(bop_5333.astype('bool'), relay.shape_of(uop_5329))) # shape=(7, 4, 7)
var_5387 = relay.var("var_5387", dtype = "float32", shape = (7, 4, 7))#candidate|5387|(7, 4, 7)|var|float32
bop_5388 = relay.floor_divide(bop_5330.astype('float32'), relay.reshape(var_5387.astype('float32'), relay.shape_of(bop_5330))) # shape=(7, 4, 7)
bop_5391 = relay.floor_divide(bop_5333.astype('float32'), relay.reshape(var_5387.astype('float32'), relay.shape_of(bop_5333))) # shape=(7, 4, 7)
output = relay.Tuple([call_5319,bop_5376,bop_5388,])
output2 = relay.Tuple([call_5320,bop_5379,bop_5391,])
func_5392 = relay.Function([var_5308,var_5387,], output)
mod['func_5392'] = func_5392
mod = relay.transform.InferType()(mod)
var_5393 = relay.var("var_5393", dtype = "float64", shape = (7, 4, 7))#candidate|5393|(7, 4, 7)|var|float64
var_5394 = relay.var("var_5394", dtype = "float32", shape = (7, 4, 7))#candidate|5394|(7, 4, 7)|var|float32
output = func_5392(var_5393,var_5394,)
func_5395 = relay.Function([var_5393,var_5394,], output)
mutated_mod['func_5395'] = func_5395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4977_call = mod.get_global_var('func_4977')
func_4979_call = mutated_mod.get_global_var('func_4979')
call_5407 = relay.TupleGetItem(func_4977_call(), 0)
call_5408 = relay.TupleGetItem(func_4979_call(), 0)
output = call_5407
output2 = call_5408
func_5410 = relay.Function([], output)
mod['func_5410'] = func_5410
mod = relay.transform.InferType()(mod)
mutated_mod['func_5410'] = func_5410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5410_call = mutated_mod.get_global_var('func_5410')
call_5411 = func_5410_call()
output = call_5411
func_5412 = relay.Function([], output)
mutated_mod['func_5412'] = func_5412
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5457 = relay.const([[[-7.481207,-7.452319,-6.581770,3.145438],[-6.501436,7.777822,1.927367,2.112082],[5.348131,-6.456785,-7.012286,-9.982588],[-4.170839,-6.347559,-0.147148,1.696264],[-3.039854,8.094290,0.239682,2.494516],[-1.645238,-9.457827,-4.577015,5.207774],[0.991008,-1.032963,7.456843,-4.016060]],[[-3.214888,-7.614248,8.111123,-7.530892],[-2.064640,-2.980859,-9.891064,7.543309],[-3.721990,-5.856721,8.548285,2.768561],[-2.119025,8.213919,-8.826877,1.631663],[-3.300631,2.760553,0.547635,4.903835],[-6.619061,-0.256661,-4.472337,8.905131],[7.231696,8.843172,5.788281,8.085787]],[[-6.885277,7.872452,1.624941,7.169464],[5.629866,3.687151,-7.667381,-4.452000],[-7.924171,-6.762294,-2.032069,-1.919864],[7.665679,-9.411417,-9.569909,-9.488729],[-4.920199,4.541419,6.355932,2.024200],[7.827302,8.850637,-9.976372,-3.201660],[-6.311695,1.568584,-8.592850,-9.126806]],[[0.633982,4.956645,0.399890,-2.298183],[6.398561,1.627777,-9.047617,8.379451],[0.677752,-5.123514,-7.826099,-7.764407],[4.682128,9.078287,3.823403,0.068120],[8.811743,-7.428655,6.289388,-8.685126],[-5.556128,6.965492,0.830606,9.827056],[9.259468,-4.644434,-3.038465,8.200170]],[[-2.744104,-3.118131,-2.490042,-6.973303],[-5.908696,-8.323940,4.160504,-3.344985],[-6.535730,-2.851415,6.937430,-6.110848],[6.451929,-0.309786,-9.077428,1.936756],[0.933237,-5.197539,-1.154994,0.255104],[-2.183008,-0.200234,-4.838245,8.028358],[-4.027903,-5.782051,8.252035,-5.559979]],[[6.323888,0.898470,-6.072520,-9.358353],[-2.547428,-5.852344,9.676792,4.124488],[7.564258,3.230061,-7.353852,6.085720],[0.020963,-3.852188,-4.739572,3.577492],[-2.133011,6.727764,-3.312802,-9.541126],[6.172969,8.310385,-8.241919,-5.110663],[-2.026935,1.724119,-8.563770,8.116663]],[[1.013630,2.928370,-8.963702,7.080872],[7.047767,-2.243322,1.030248,-8.957436],[5.285280,8.147663,-9.065437,4.716961],[-9.234652,6.186119,5.227498,-0.989103],[7.420734,6.943823,-3.294199,-2.801230],[1.195733,8.191921,6.009704,4.770781],[8.916035,-7.796352,-4.809868,-3.734785]],[[-7.476651,-3.168284,-2.332889,-7.189906],[-5.884949,-2.964631,5.338193,-4.710620],[9.529968,1.792743,6.220893,9.329349],[1.569247,-5.128173,0.144965,-3.079071],[-9.531636,-1.183715,2.471057,-6.329755],[-4.341460,2.566043,6.308237,-7.988993],[8.266204,8.351110,1.810967,-8.654173]],[[-5.504513,-7.801130,8.824681,-6.909564],[6.016383,3.656301,1.500398,-7.800565],[-6.182415,4.714066,5.621762,-6.126037],[0.184192,4.163401,-5.647594,-1.366183],[-2.972257,-9.563888,2.420454,-8.399733],[4.824161,-9.121854,2.824060,-1.271911],[-0.355263,-7.190835,-8.193832,-5.351184]],[[-8.986224,-8.536543,1.469564,-1.967545],[8.536019,-7.797684,1.633671,-6.526415],[-0.849306,1.205888,6.943138,4.059643],[-8.234403,-3.159117,-4.703662,-1.646574],[-4.598440,3.375501,8.721571,-7.296873],[-7.460316,-7.164082,5.365695,3.167578],[5.922639,7.933633,-1.173239,-6.393416]],[[-1.322835,8.457263,5.118035,-4.358538],[-7.095694,-2.383711,4.549597,6.039837],[4.407338,2.875939,-0.665345,-3.079532],[8.827241,-5.605508,-7.843699,-7.648850],[0.492296,6.621049,-3.147821,4.511144],[8.792014,-0.431895,-9.478779,-9.130117],[9.893309,-3.747773,-8.857843,7.596027]],[[-0.829366,-8.048980,-2.198572,-6.935803],[-8.057912,7.326015,8.081666,-7.874730],[-6.336464,9.798683,-6.411792,-9.638676],[4.647254,2.902017,0.722001,1.738536],[-2.587938,-4.786774,9.876576,7.695504],[-1.843616,-4.300370,0.396854,-7.869192],[7.509601,-3.817145,2.227562,-8.315356]]], dtype = "float64")#candidate|5457|(12, 7, 4)|const|float64
uop_5458 = relay.sigmoid(const_5457.astype('float64')) # shape=(12, 7, 4)
func_5087_call = mod.get_global_var('func_5087')
func_5089_call = mutated_mod.get_global_var('func_5089')
call_5468 = func_5087_call()
call_5469 = func_5087_call()
output = relay.Tuple([uop_5458,call_5468,])
output2 = relay.Tuple([uop_5458,call_5469,])
func_5492 = relay.Function([], output)
mod['func_5492'] = func_5492
mod = relay.transform.InferType()(mod)
output = func_5492()
func_5493 = relay.Function([], output)
mutated_mod['func_5493'] = func_5493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5492_call = mod.get_global_var('func_5492')
func_5493_call = mutated_mod.get_global_var('func_5493')
call_5508 = relay.TupleGetItem(func_5492_call(), 0)
call_5509 = relay.TupleGetItem(func_5493_call(), 0)
func_5087_call = mod.get_global_var('func_5087')
func_5089_call = mutated_mod.get_global_var('func_5089')
call_5512 = func_5087_call()
call_5513 = func_5087_call()
output = relay.Tuple([call_5508,call_5512,])
output2 = relay.Tuple([call_5509,call_5513,])
func_5520 = relay.Function([], output)
mod['func_5520'] = func_5520
mod = relay.transform.InferType()(mod)
mutated_mod['func_5520'] = func_5520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5520_call = mutated_mod.get_global_var('func_5520')
call_5521 = func_5520_call()
output = call_5521
func_5522 = relay.Function([], output)
mutated_mod['func_5522'] = func_5522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_5558 = relay.TupleGetItem(func_5163_call(), 0)
call_5559 = relay.TupleGetItem(func_5164_call(), 0)
output = call_5558
output2 = call_5559
func_5606 = relay.Function([], output)
mod['func_5606'] = func_5606
mod = relay.transform.InferType()(mod)
output = func_5606()
func_5607 = relay.Function([], output)
mutated_mod['func_5607'] = func_5607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5492_call = mod.get_global_var('func_5492')
func_5493_call = mutated_mod.get_global_var('func_5493')
call_5651 = relay.TupleGetItem(func_5492_call(), 1)
call_5652 = relay.TupleGetItem(func_5493_call(), 1)
var_5653 = relay.var("var_5653", dtype = "float32", shape = (7, 4, 7))#candidate|5653|(7, 4, 7)|var|float32
bop_5654 = relay.minimum(call_5651.astype('float64'), relay.reshape(var_5653.astype('float64'), relay.shape_of(call_5651))) # shape=(7, 4, 7)
bop_5657 = relay.minimum(call_5652.astype('float64'), relay.reshape(var_5653.astype('float64'), relay.shape_of(call_5652))) # shape=(7, 4, 7)
func_4960_call = mod.get_global_var('func_4960')
func_4965_call = mutated_mod.get_global_var('func_4965')
const_5663 = relay.const([[True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True],[True,False,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,True,True],[True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,True,False],[False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,False],[True,True,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,True,False,False],[False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False],[False,True,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True],[True,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True],[True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True],[False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False],[True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,False]], dtype = "bool")#candidate|5663|(11, 35)|const|bool
var_5664 = relay.var("var_5664", dtype = "int8", shape = (225,))#candidate|5664|(225,)|var|int8
var_5665 = relay.var("var_5665", dtype = "int32", shape = (936,))#candidate|5665|(936,)|var|int32
var_5666 = relay.var("var_5666", dtype = "float32", shape = (715,))#candidate|5666|(715,)|var|float32
call_5662 = relay.TupleGetItem(func_4960_call(relay.reshape(const_5663.astype('bool'), [11, 35]), relay.reshape(var_5664.astype('int8'), [75, 3]), relay.reshape(var_5665.astype('int32'), [36, 26]), relay.reshape(var_5666.astype('float32'), [715,]), ), 5)
call_5667 = relay.TupleGetItem(func_4965_call(relay.reshape(const_5663.astype('bool'), [11, 35]), relay.reshape(var_5664.astype('int8'), [75, 3]), relay.reshape(var_5665.astype('int32'), [36, 26]), relay.reshape(var_5666.astype('float32'), [715,]), ), 5)
uop_5679 = relay.asin(const_5663.astype('float32')) # shape=(11, 35)
output = relay.Tuple([bop_5654,call_5662,var_5664,var_5665,var_5666,uop_5679,])
output2 = relay.Tuple([bop_5657,call_5667,var_5664,var_5665,var_5666,uop_5679,])
func_5691 = relay.Function([var_5653,var_5664,var_5665,var_5666,], output)
mod['func_5691'] = func_5691
mod = relay.transform.InferType()(mod)
var_5692 = relay.var("var_5692", dtype = "float32", shape = (7, 4, 7))#candidate|5692|(7, 4, 7)|var|float32
var_5693 = relay.var("var_5693", dtype = "int8", shape = (225,))#candidate|5693|(225,)|var|int8
var_5694 = relay.var("var_5694", dtype = "int32", shape = (936,))#candidate|5694|(936,)|var|int32
var_5695 = relay.var("var_5695", dtype = "float32", shape = (715,))#candidate|5695|(715,)|var|float32
output = func_5691(var_5692,var_5693,var_5694,var_5695,)
func_5696 = relay.Function([var_5692,var_5693,var_5694,var_5695,], output)
mutated_mod['func_5696'] = func_5696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5245_call = mod.get_global_var('func_5245')
func_5247_call = mutated_mod.get_global_var('func_5247')
call_5766 = relay.TupleGetItem(func_5245_call(), 0)
call_5767 = relay.TupleGetItem(func_5247_call(), 0)
func_3391_call = mod.get_global_var('func_3391')
func_3395_call = mutated_mod.get_global_var('func_3395')
var_5779 = relay.var("var_5779", dtype = "float32", shape = (2, 1440))#candidate|5779|(2, 1440)|var|float32
const_5780 = relay.const([True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True], dtype = "bool")#candidate|5780|(385,)|const|bool
call_5778 = relay.TupleGetItem(func_3391_call(relay.reshape(var_5779.astype('float32'), [16, 15, 12]), relay.reshape(const_5780.astype('bool'), [385,]), ), 2)
call_5781 = relay.TupleGetItem(func_3395_call(relay.reshape(var_5779.astype('float32'), [16, 15, 12]), relay.reshape(const_5780.astype('bool'), [385,]), ), 2)
func_3044_call = mod.get_global_var('func_3044')
func_3049_call = mutated_mod.get_global_var('func_3049')
var_5809 = relay.var("var_5809", dtype = "float32", shape = (715,))#candidate|5809|(715,)|var|float32
var_5810 = relay.var("var_5810", dtype = "int32", shape = (81,))#candidate|5810|(81,)|var|int32
const_5811 = relay.const([-8,8,-3,5,6,-9,2,6,2,10,-10,-3,-8,8,-7,7,4,-1,2,6,10,4,1,-8,3,-9,1,-3,-2,-1,2,6,-3,-2,-1,-4,6,-4,7,-2,-10,-3,-2,9,9,-2,-8,-6,-7,8,1,-10,-10,-5,-8,9,-7,-8,9,4,-7,-7,-7,8,5,2,9,-4,8,-8,-8,4,-7,6,-10], dtype = "int8")#candidate|5811|(75,)|const|int8
call_5808 = relay.TupleGetItem(func_3044_call(relay.reshape(var_5809.astype('float32'), [13, 11, 5]), relay.reshape(var_5810.astype('int32'), [81,]), relay.reshape(const_5811.astype('int8'), [15, 5]), relay.reshape(const_5780.astype('bool'), [385,]), ), 10)
call_5812 = relay.TupleGetItem(func_3049_call(relay.reshape(var_5809.astype('float32'), [13, 11, 5]), relay.reshape(var_5810.astype('int32'), [81,]), relay.reshape(const_5811.astype('int8'), [15, 5]), relay.reshape(const_5780.astype('bool'), [385,]), ), 10)
func_5177_call = mod.get_global_var('func_5177')
func_5179_call = mutated_mod.get_global_var('func_5179')
call_5815 = relay.TupleGetItem(func_5177_call(), 0)
call_5816 = relay.TupleGetItem(func_5179_call(), 0)
func_1700_call = mod.get_global_var('func_1700')
func_1703_call = mutated_mod.get_global_var('func_1703')
var_5824 = relay.var("var_5824", dtype = "float32", shape = (630,))#candidate|5824|(630,)|var|float32
call_5823 = relay.TupleGetItem(func_1700_call(relay.reshape(var_5824.astype('float32'), [9, 10, 7])), 0)
call_5825 = relay.TupleGetItem(func_1703_call(relay.reshape(var_5824.astype('float32'), [9, 10, 7])), 0)
output = relay.Tuple([call_5766,call_5778,var_5779,const_5780,call_5808,var_5809,var_5810,const_5811,call_5815,call_5823,var_5824,])
output2 = relay.Tuple([call_5767,call_5781,var_5779,const_5780,call_5812,var_5809,var_5810,const_5811,call_5816,call_5825,var_5824,])
func_5833 = relay.Function([var_5779,var_5809,var_5810,var_5824,], output)
mod['func_5833'] = func_5833
mod = relay.transform.InferType()(mod)
var_5834 = relay.var("var_5834", dtype = "float32", shape = (2, 1440))#candidate|5834|(2, 1440)|var|float32
var_5835 = relay.var("var_5835", dtype = "float32", shape = (715,))#candidate|5835|(715,)|var|float32
var_5836 = relay.var("var_5836", dtype = "int32", shape = (81,))#candidate|5836|(81,)|var|int32
var_5837 = relay.var("var_5837", dtype = "float32", shape = (630,))#candidate|5837|(630,)|var|float32
output = func_5833(var_5834,var_5835,var_5836,var_5837,)
func_5838 = relay.Function([var_5834,var_5835,var_5836,var_5837,], output)
mutated_mod['func_5838'] = func_5838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5245_call = mod.get_global_var('func_5245')
func_5247_call = mutated_mod.get_global_var('func_5247')
call_5848 = relay.TupleGetItem(func_5245_call(), 4)
call_5849 = relay.TupleGetItem(func_5247_call(), 4)
output = call_5848
output2 = call_5849
func_5858 = relay.Function([], output)
mod['func_5858'] = func_5858
mod = relay.transform.InferType()(mod)
output = func_5858()
func_5859 = relay.Function([], output)
mutated_mod['func_5859'] = func_5859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5269_call = mod.get_global_var('func_5269')
func_5270_call = mutated_mod.get_global_var('func_5270')
call_5869 = relay.TupleGetItem(func_5269_call(), 0)
call_5870 = relay.TupleGetItem(func_5270_call(), 0)
output = call_5869
output2 = call_5870
func_5875 = relay.Function([], output)
mod['func_5875'] = func_5875
mod = relay.transform.InferType()(mod)
output = func_5875()
func_5876 = relay.Function([], output)
mutated_mod['func_5876'] = func_5876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4651_call = mod.get_global_var('func_4651')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_5879 = relay.TupleGetItem(func_4651_call(), 0)
call_5880 = relay.TupleGetItem(func_4652_call(), 0)
output = call_5879
output2 = call_5880
func_5881 = relay.Function([], output)
mod['func_5881'] = func_5881
mod = relay.transform.InferType()(mod)
output = func_5881()
func_5882 = relay.Function([], output)
mutated_mod['func_5882'] = func_5882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_5947 = relay.TupleGetItem(func_4671_call(), 0)
call_5948 = relay.TupleGetItem(func_4672_call(), 0)
output = call_5947
output2 = call_5948
func_5949 = relay.Function([], output)
mod['func_5949'] = func_5949
mod = relay.transform.InferType()(mod)
output = func_5949()
func_5950 = relay.Function([], output)
mutated_mod['func_5950'] = func_5950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5949_call = mod.get_global_var('func_5949')
func_5950_call = mutated_mod.get_global_var('func_5950')
call_5965 = func_5949_call()
call_5966 = func_5949_call()
const_5971 = relay.const([[[-7.289855,-0.819095,-0.980690,-8.664941,2.178057,1.799567,-3.687758],[6.192107,-7.367670,2.058785,0.462649,4.671742,-7.770468,7.003313],[1.861569,-7.989254,9.071019,-9.503595,6.520775,-7.810014,0.122680],[3.213297,-2.206256,6.631360,-8.314674,-1.642916,2.093960,1.503640]],[[7.826196,3.628589,-5.076670,-3.988334,8.214220,8.853994,-4.671801],[3.612109,0.851572,8.683413,6.872650,3.423143,7.227146,5.641988],[7.629874,-1.613716,-5.086471,5.462908,3.930533,-0.510161,7.010613],[5.929010,7.887539,6.448159,4.051086,6.225269,1.082060,7.415119]],[[-1.104699,0.960352,3.129156,-0.696473,-8.318105,-1.206203,-5.574928],[-5.710699,4.928912,1.807127,-0.991679,6.948811,6.758687,4.645307],[7.771451,6.321164,3.112205,-9.829725,9.625979,-9.834214,-2.799330],[2.635270,-3.654211,-0.432773,-7.934373,-6.860555,3.486663,-7.867318]],[[-4.910351,9.469148,-3.335437,-1.866558,-0.314294,7.387229,3.442992],[8.191192,-3.139286,-5.621272,-4.787706,-2.094549,-9.285775,8.473634],[9.199400,-4.830601,1.074013,9.299515,8.315142,-5.726781,-9.365409],[8.125320,6.714127,-1.634337,7.670954,-1.349962,9.921037,-2.890933]],[[-7.077099,1.671204,-1.938424,1.014098,-1.878407,2.719867,-5.486687],[8.999863,6.804520,1.169848,5.632670,3.156536,-5.633828,-8.336087],[-8.214435,-2.889506,-8.229168,-4.408782,5.497065,2.316740,8.541065],[3.798094,-2.658571,-0.090534,1.599868,-5.490275,0.413631,-8.367188]],[[-2.825910,-9.701107,6.028837,5.571072,-7.604317,-3.327835,2.872240],[7.135115,7.217416,3.632350,1.505848,3.139451,1.788366,5.153475],[8.091245,-7.789032,-2.156758,4.770976,2.417304,-7.035102,-5.819487],[-1.662733,-4.446662,-3.574235,-0.626646,6.615327,-7.445756,0.745998]],[[-9.962492,-9.943050,-3.573734,5.787526,8.371013,-0.470914,7.475175],[1.507663,-0.717127,-2.757453,8.239692,-8.051196,-1.086510,-0.044959],[-0.504077,-8.223255,-1.923153,0.118209,5.972767,-4.641074,1.802693],[-8.611536,9.368611,-3.123975,0.325166,-3.322438,-6.350368,-4.302614]]], dtype = "float64")#candidate|5971|(7, 4, 7)|const|float64
bop_5972 = relay.greater_equal(call_5965.astype('bool'), relay.reshape(const_5971.astype('bool'), relay.shape_of(call_5965))) # shape=(7, 4, 7)
bop_5975 = relay.greater_equal(call_5966.astype('bool'), relay.reshape(const_5971.astype('bool'), relay.shape_of(call_5966))) # shape=(7, 4, 7)
output = bop_5972
output2 = bop_5975
func_5991 = relay.Function([], output)
mod['func_5991'] = func_5991
mod = relay.transform.InferType()(mod)
mutated_mod['func_5991'] = func_5991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5991_call = mutated_mod.get_global_var('func_5991')
call_5992 = func_5991_call()
output = call_5992
func_5993 = relay.Function([], output)
mutated_mod['func_5993'] = func_5993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4977_call = mod.get_global_var('func_4977')
func_4979_call = mutated_mod.get_global_var('func_4979')
call_6055 = relay.TupleGetItem(func_4977_call(), 0)
call_6056 = relay.TupleGetItem(func_4979_call(), 0)
output = call_6055
output2 = call_6056
func_6057 = relay.Function([], output)
mod['func_6057'] = func_6057
mod = relay.transform.InferType()(mod)
output = func_6057()
func_6058 = relay.Function([], output)
mutated_mod['func_6058'] = func_6058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4977_call = mod.get_global_var('func_4977')
func_4979_call = mutated_mod.get_global_var('func_4979')
call_6074 = relay.TupleGetItem(func_4977_call(), 0)
call_6075 = relay.TupleGetItem(func_4979_call(), 0)
output = relay.Tuple([call_6074,])
output2 = relay.Tuple([call_6075,])
func_6086 = relay.Function([], output)
mod['func_6086'] = func_6086
mod = relay.transform.InferType()(mod)
output = func_6086()
func_6087 = relay.Function([], output)
mutated_mod['func_6087'] = func_6087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5520_call = mod.get_global_var('func_5520')
func_5522_call = mutated_mod.get_global_var('func_5522')
call_6113 = relay.TupleGetItem(func_5520_call(), 0)
call_6114 = relay.TupleGetItem(func_5522_call(), 0)
output = relay.Tuple([call_6113,])
output2 = relay.Tuple([call_6114,])
func_6115 = relay.Function([], output)
mod['func_6115'] = func_6115
mod = relay.transform.InferType()(mod)
mutated_mod['func_6115'] = func_6115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6115_call = mutated_mod.get_global_var('func_6115')
call_6116 = func_6115_call()
output = call_6116
func_6117 = relay.Function([], output)
mutated_mod['func_6117'] = func_6117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5492_call = mod.get_global_var('func_5492')
func_5493_call = mutated_mod.get_global_var('func_5493')
call_6275 = relay.TupleGetItem(func_5492_call(), 0)
call_6276 = relay.TupleGetItem(func_5493_call(), 0)
var_6289 = relay.var("var_6289", dtype = "float64", shape = (12, 7, 4))#candidate|6289|(12, 7, 4)|var|float64
bop_6290 = relay.multiply(call_6275.astype('float64'), relay.reshape(var_6289.astype('float64'), relay.shape_of(call_6275))) # shape=(12, 7, 4)
bop_6293 = relay.multiply(call_6276.astype('float64'), relay.reshape(var_6289.astype('float64'), relay.shape_of(call_6276))) # shape=(12, 7, 4)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_6301 = relay.TupleGetItem(func_4671_call(), 0)
call_6302 = relay.TupleGetItem(func_4672_call(), 0)
func_4750_call = mod.get_global_var('func_4750')
func_4753_call = mutated_mod.get_global_var('func_4753')
const_6307 = relay.const([[3],[-9],[2],[6],[-3],[7],[3],[2],[-2],[-7],[6],[4],[-3],[-7],[8],[-4],[-5],[-5],[4],[10],[10],[-1],[-7],[-7],[6],[10],[5],[5],[2],[9],[-1],[2],[-5],[2],[-10],[1],[8],[-7],[6],[5],[-7],[-5],[6],[10],[-2],[-9],[-1],[-9],[-10],[8],[-1],[-4],[-2],[5],[-2],[-2],[-3],[1],[5],[-1],[-10],[9],[3],[-8],[7],[5],[-6],[9],[9],[-7],[-6],[1],[-4],[-1],[4]], dtype = "int8")#candidate|6307|(75, 1)|const|int8
call_6306 = relay.TupleGetItem(func_4750_call(relay.reshape(const_6307.astype('int8'), [1, 75])), 1)
call_6308 = relay.TupleGetItem(func_4753_call(relay.reshape(const_6307.astype('int8'), [1, 75])), 1)
output = relay.Tuple([bop_6290,call_6301,call_6306,const_6307,])
output2 = relay.Tuple([bop_6293,call_6302,call_6308,const_6307,])
func_6321 = relay.Function([var_6289,], output)
mod['func_6321'] = func_6321
mod = relay.transform.InferType()(mod)
mutated_mod['func_6321'] = func_6321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6322 = relay.var("var_6322", dtype = "float64", shape = (12, 7, 4))#candidate|6322|(12, 7, 4)|var|float64
func_6321_call = mutated_mod.get_global_var('func_6321')
call_6323 = func_6321_call(var_6322)
output = call_6323
func_6324 = relay.Function([var_6322], output)
mutated_mod['func_6324'] = func_6324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5606_call = mod.get_global_var('func_5606')
func_5607_call = mutated_mod.get_global_var('func_5607')
call_6352 = func_5606_call()
call_6353 = func_5606_call()
func_5410_call = mod.get_global_var('func_5410')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_6378 = func_5410_call()
call_6379 = func_5410_call()
func_5492_call = mod.get_global_var('func_5492')
func_5493_call = mutated_mod.get_global_var('func_5493')
call_6394 = relay.TupleGetItem(func_5492_call(), 1)
call_6395 = relay.TupleGetItem(func_5493_call(), 1)
func_1131_call = mod.get_global_var('func_1131')
func_1134_call = mutated_mod.get_global_var('func_1134')
var_6407 = relay.var("var_6407", dtype = "int32", shape = ())#candidate|6407|()|var|int32
call_6406 = relay.TupleGetItem(func_1131_call(relay.reshape(var_6407.astype('int32'), [])), 0)
call_6408 = relay.TupleGetItem(func_1134_call(relay.reshape(var_6407.astype('int32'), [])), 0)
func_3391_call = mod.get_global_var('func_3391')
func_3395_call = mutated_mod.get_global_var('func_3395')
const_6423 = relay.const([[-4.013467,-1.302769,-5.313918,1.767067,8.793774,-6.581205,-4.782286,1.020497,3.012726,9.641777,9.284002,6.271694,1.915413,-8.900679,1.334819,0.327078,5.628984,-5.229073,-0.574744,7.325137,1.070862,4.579399,-9.124515,-1.112711,-0.100029,-0.027391,-4.752931,3.703732,1.980970,5.125593,-0.182272,-0.761266,7.513131,1.759717,-1.317167,1.259788,-5.105744,-8.057207,6.150708,-6.438215,-3.895847,2.061880,1.931827,-2.667018,0.326284,3.015812,-0.075876,6.172498,-2.598243,-1.207521,-3.864885,1.260320,-8.563350,0.422953,-6.133367,3.680266,7.206411,2.725553,-9.642346,6.449011,-6.457924,0.229433,-3.966332,-8.243682,2.276825,6.567150,-9.214062,-9.228782,-0.110710,-9.181988,5.532560,3.933432,7.001888,9.942042,-8.754478,5.515908,4.182274,-1.325911,9.450167,5.274318,0.222938,-2.110620,5.299788,-2.472734,5.055806,-0.824871,-1.794237,9.646360,-2.527799,9.275032,2.348609,5.011029,2.145958,-4.185338,-0.810722,5.359468,-6.416219,0.769713,-4.044089,-6.490959,1.643654,5.774777,-5.906714,7.857232,5.634166,-9.158280,9.555896,-5.926151,9.733903,4.154606,-0.049827,4.026323,4.930542,-3.228205,-8.723025,8.712673,5.397153,3.315341,2.719861,-5.203247,-4.011502,7.822154,6.605084,-1.080068,-6.217814,-5.172025,0.213936,4.634223,7.067998,-0.515758,-9.928029,2.052813,-6.670469,-5.740932,4.377738,9.513149,6.204260,1.558181,-1.629303,8.053150,9.524147,9.441630,3.236426,8.054859,-6.175905,-1.368696,6.323726,-6.282049,-4.190840,5.037354,3.964449,9.034916,0.226928,1.558561,4.987525,-9.163267,0.398812,4.136925,5.719974,4.912501,-6.769129,-0.393095,0.688837,-4.756652,8.271747,9.293690,-2.588662,1.285318,1.410378,5.355114,9.654500,7.890108,0.919896,4.541722,-6.260945,-9.189950,-0.086380,-6.916662,5.155952,-2.832875,4.327339,6.339397,-8.388004,6.181505,-1.849736,-8.232517,2.033356,-5.870041,-9.161541,2.711366,-5.194854,-1.636201,-3.939608,-9.484793,3.103777,2.830782,-8.929413,-1.412423,3.884525,-2.887207,-9.595056,-3.650401,-5.841134,-6.741325,-7.329084,8.393388,4.386741,-9.376072,3.156090,6.893211,3.985493,0.220779,0.541620,-9.628792,6.321005,-1.045376,-3.460992,9.506207,8.956710,4.089655,6.005885,-6.002216,-8.571069,5.425525,9.167915,-6.428018,1.606750,-7.879907,7.561310,5.296917,8.545145,-3.387738,-7.370475,3.638276,6.610615,-3.021389,1.847686,8.248690,6.766830,0.816107,3.460786,1.869448,2.678517,-9.108940,-8.793846,-2.725961,5.923751,5.696125,-8.632571,-1.942330,-5.276208,4.214769,0.280876,9.677544,1.503205,-3.567955,5.143020,5.533217,0.369047,7.438428,0.386091,-5.070534,3.121950,9.518379,-5.212846,3.821442,-6.973513,-1.000451,-5.317758,-1.298368,8.927506,-0.796986,-9.899607,6.608916,2.421257,7.317281,-2.946873,-9.130707,-8.563918,-2.465513,0.775712,9.143237,-7.948386,4.523349,0.684637,-7.712746,-7.021632,9.874092,-4.211081,5.213856,-3.537960,-7.750080,-2.575442,-3.517128,-7.429502,2.507607,-9.980207,1.514457,-5.067673,6.592303,-4.961599,-0.913008,6.046545,9.251770,3.788494,4.732439,-4.296478,-7.462145,-1.875423,1.166437,7.351378,-5.606765,8.698689,-8.529884,6.133618,9.461611,3.295353,-6.112030,-6.551786,-4.229402,-1.315276,7.818892,-7.634602,7.243322,-7.714146,5.239814,1.793303,3.412676,-9.558342,0.258504,-8.754416,7.918564,-8.577174,-1.828565,-5.247821,-0.468716,-7.842460,4.665787,-8.208665,-1.845398,4.605261,-5.528186,7.974632,2.551992,-7.637358,7.243524,5.223202,-3.118381,3.579392,-5.093579,-9.327357,-8.256011,-0.025855,7.600974,6.947611,1.233969,4.959350,3.943060,-3.867419,-2.832273,8.950184,5.366597,9.198104,2.580998,-5.638038,-9.239407,-8.784259,3.629146,-0.802814,3.125511,-4.454081,-2.440189,8.518054,3.126247,-8.867006,-5.739527,6.186599,-8.536387,5.179126,1.358473,-2.641773,-0.392947,4.120853,8.628461,-0.795351,1.271187,-9.451294,5.242875,2.475155,7.580309,-8.028467,-0.678197,4.914531,-6.632110,-9.579264,-5.149884,2.613769,6.824719,-1.098351,-2.515885,-3.254386,-0.843383,2.079628,-7.282776,-4.058773,-8.336610,3.998432,-9.656138,-8.566515,2.626263,1.121066,2.435664,1.145159,3.626949,0.746315,-7.606834,0.506265,-3.389881,-1.839235,6.549451,-1.017910,-3.874891,-0.370764,-6.329856,6.476987,6.396152,9.592441,-3.786176,-2.690891,1.252576,1.694907,8.375731,-3.442459,-7.055700,-8.918153,3.329103,3.085783,-0.121795,-8.842103,-1.986368,-9.668583,-2.305511,-2.391872,-4.726536,-3.059503,8.163335,-0.832625,-8.137685,-1.254769,1.135138,1.885416,-6.346765,-7.331893,-4.554447,7.380998,4.239714,7.504604,-3.159212,-1.815286,-0.636276,-6.754713,-0.348390,-0.813707,0.519791,1.877272,5.110611,1.093020,-5.089528,-4.604036,-2.200686,1.875083,4.930894,-5.409205,8.099824,6.926898,9.844320,7.200699,-6.589113,3.233313,-9.239881,-2.872972,2.049222,0.562464,-7.881585,-7.213728,-9.341557,-1.442177,-3.679671,8.296404,5.165030,7.767586,-1.270298,-5.231927,-7.845870,-5.206819,0.557763,-7.781908,-5.253135,-7.885943,3.678806,4.557072,-2.137987,-3.331222,-4.895376,-5.585680,-3.797330,3.138659,-8.652316,0.238574,8.292234,-1.013680,-6.360650,5.661765,-5.501687,5.459748,-3.466800,4.762587,-2.084446,-5.121071,3.296264,-3.374786,-6.469281,-8.267477,-5.089732,-6.727464,3.788750,-6.710111,0.833258,-7.978962,7.125518,-6.288583,2.874018,-5.774629,0.835733,-7.120841,-9.658918,-5.588396,-4.760606,3.198831,-0.803323,-1.856390,-2.855407,6.353859,-9.665661,-5.497379,-4.052746,-3.578261,-1.963236,2.683891,3.657723,3.038382,3.523429,-7.249959,-3.290804,-7.160559,4.291606,9.490312,1.360261,-3.818776,-8.245170,7.043904,8.953762,-1.175171,-4.965237,7.510582,-8.523565,3.370551,-2.585339,3.891799,-6.605400,1.026634,6.345936,8.062484,6.511807,-1.414748,-2.990207,-5.132649,8.128260,-8.043593,6.901238,0.548417,-7.486894,8.033306,6.930673,7.704159,-1.358605,1.237901,1.995141,-5.504350,-0.969708,2.819433,-4.629011,-3.770454,-9.544927,3.061668,-7.068849,4.921233,-0.044377,8.675409,-0.042351,9.347087,0.535227,-4.609987,0.069356,-7.711179,6.990184,1.954002,7.699507,-9.872417,-8.874887,5.028568,-1.588318,8.488753,7.005229,-6.170694,1.350791,-6.582338,4.349641,-7.984887,4.312747,-6.842371,-8.836495,-2.437564,-0.944036,8.488862,3.549244,3.212655,-4.506713,-2.068377,-7.850291,7.679487,-4.697582,-4.361853,-0.596209,-2.682142,0.678430,-3.638835,-7.419876,-1.403950,4.084293,7.516193,-9.439824,1.322162,5.097705,5.002799,-2.947303,-0.627053,-7.845232,-0.606054,0.040970,9.013631,-6.298858,-8.915181,-7.234675,7.610168,-6.897422,-2.568103,3.342373,0.312663,1.336103,-4.235965,2.782732,-9.045899,-5.531351,-1.904640,-1.737046,-0.009727,-8.687903,1.941029,9.925161,-4.922660,-1.822131,3.672888,-2.010206,-4.113616,5.257863,-9.475116,8.382742,-5.265147,0.010378,9.336539,-2.887811,-4.412100,-2.899233,-4.303749,-4.742049,-1.129489,2.902336,0.087643,-8.375243,-5.022656,-0.568422,9.032630,8.771693,7.284223,-0.169655,-6.616314,7.825220,4.824758,8.493476,5.255401,5.602188,-2.347623,7.619004,-1.532247,0.309486,8.468517,9.588007,-4.584784,0.417596,-4.781075,-5.326100,-4.120301,6.212045,-8.549776,3.722156,5.509596,6.557432,-4.177456,2.340872],[-5.419720,8.208986,-1.808331,-0.963669,5.689114,4.741171,-0.647567,8.518141,7.895626,-8.800101,1.175257,0.046162,-3.863558,-1.509774,-3.854561,-5.015036,-5.795172,-9.138996,-8.023711,8.781822,-9.349522,3.947184,7.040318,-5.076806,-9.809566,-8.086302,-9.767313,-9.147282,-4.434886,4.793247,-6.392158,3.611472,1.058948,8.476419,2.408000,-0.055082,7.894444,-8.334052,-2.278225,3.577915,6.115971,-3.871820,-3.333312,8.801307,5.703169,5.655597,-2.945585,-0.292656,-7.203392,7.319892,6.937279,-2.711065,-2.363730,8.803138,4.019917,2.789919,-6.930392,-8.299665,-9.577530,7.630357,1.118984,2.787522,4.243153,3.830204,4.689948,1.121687,-1.830432,-3.425435,-6.550150,1.646267,-3.230438,5.759161,-3.452436,4.881166,4.673239,-3.041177,1.411653,-1.224058,-2.774210,0.090760,-5.413336,-2.009176,-4.386244,8.293751,-2.236786,-4.981837,9.077664,1.734962,8.030321,-3.393437,9.357305,2.107280,-8.376394,6.691607,-7.629592,4.823837,-5.780438,4.611774,-0.016000,1.776877,-2.276704,0.150404,8.490397,9.209715,-3.740989,8.106008,6.999485,-4.823742,-9.147420,-8.736512,-6.054737,-6.224652,2.100265,6.225439,-0.020255,-7.081619,-2.642657,2.547523,-2.796120,6.477285,-6.895070,-1.221763,0.954122,-8.802394,-3.074391,-1.764213,-4.684373,8.060236,4.690266,1.502590,-1.194034,-8.023099,9.188516,-7.666336,-5.898526,-0.231562,9.570749,-8.551785,-0.293095,-8.516597,8.160871,9.580411,8.956880,3.749368,-2.890724,9.052362,-3.802208,6.130494,1.461864,9.715519,2.459128,-6.816308,-7.665257,-7.818035,9.310959,-3.217794,8.721230,-3.257098,-1.717519,3.059843,-8.359488,8.827737,-1.303836,6.752746,4.484258,-3.995825,-3.492986,2.737905,6.468670,6.233993,-2.801675,-2.568290,-0.644181,8.877055,-7.846297,6.758932,9.318131,-7.723331,3.691608,5.170754,-4.846379,-6.177542,-7.174218,-0.980970,1.158664,7.906316,1.149089,2.895432,-4.677758,-7.670407,-6.781863,-3.280911,8.790085,9.538570,-4.834300,5.641320,-5.797790,3.871540,4.369820,4.790544,-0.661713,-5.870577,-3.953932,3.454294,-3.051238,5.627929,0.856437,-9.551214,-6.098724,3.535668,-3.212151,-9.263355,-6.227918,-9.031856,9.149393,-2.331657,-7.230180,6.427623,3.046548,8.646204,-0.001697,-0.117259,-6.890889,-5.795350,-8.914692,9.998904,-8.083939,-2.749791,-3.308646,-5.169340,-9.016567,0.015482,-6.589863,2.266003,2.854906,6.872733,9.888726,6.430303,8.000610,7.178304,1.336758,-1.512022,-9.466736,7.737353,0.259628,-3.276082,-3.131369,-1.223472,-5.513618,-5.270801,9.794815,4.565341,7.034042,-1.442891,6.576049,9.009051,3.869389,-9.311522,-9.785849,-3.421442,-3.395647,0.893265,-5.781527,5.085097,4.436826,-8.611405,9.535089,0.679951,-4.124189,8.604623,1.878092,-1.131146,6.593285,-0.405975,-8.748793,8.145808,0.116098,-8.076660,5.438899,-0.536721,0.633076,0.323040,0.938960,-6.565806,-3.492832,4.394836,-8.509829,-9.620674,-8.812373,6.206462,8.815932,8.227119,7.868345,-9.937664,0.928729,5.701273,0.207265,-9.859065,2.885961,-1.932929,-1.360660,-9.169776,-7.000081,-5.812592,2.073428,5.477497,2.969443,-4.895264,-8.224333,9.599397,3.100899,6.863832,2.607567,6.918387,-8.578277,-0.407937,6.822741,0.933618,-2.816311,6.169161,7.390890,-8.544543,4.599297,4.211035,-1.944271,-7.565237,6.341333,-6.496683,9.032897,4.129343,-5.329944,-2.049170,-5.097874,5.569520,-6.371392,0.588700,0.290233,-2.317890,-6.620333,6.416444,-1.673333,-7.623772,1.183845,-6.973772,1.772118,-1.746409,9.333274,5.235238,-7.849410,-3.946788,9.961041,-2.784738,-1.237410,-9.149195,-6.127295,0.856392,7.621711,-1.495005,-1.563614,9.120800,-6.133784,0.716005,-1.528356,-2.915845,3.666612,3.871580,-7.710292,-3.158776,-7.076158,0.244225,-2.615400,8.341620,-0.131893,-1.131918,-2.871025,-2.237056,5.112913,5.839632,4.394181,-7.847035,-3.849887,9.454936,8.838868,4.644042,-0.761924,-5.612703,7.986536,-0.592572,0.149587,3.448632,-3.695560,-4.603466,5.402779,-2.655054,7.455787,-8.614686,-4.070553,-6.198488,3.187712,-1.255970,-1.444996,-7.947434,-2.845971,-0.709767,7.670888,-4.897970,7.491683,0.986046,-3.716645,1.301215,-2.713704,2.293144,-6.584668,-3.606262,-4.490674,0.425994,3.518644,-3.694231,1.820683,1.189637,-1.552637,-5.306567,-2.691879,4.109814,4.495125,7.670884,-0.521365,6.424123,-2.101807,-2.867050,-6.301148,-3.646296,6.095153,2.579075,7.472984,9.168422,-7.751805,1.439473,0.408425,8.570041,-8.788168,-5.894128,-9.928617,7.273541,7.403110,0.313716,4.310781,4.165819,-5.410537,0.694571,4.975357,-8.910864,9.791936,-6.098861,-4.744342,3.984724,-0.956673,9.637419,5.560947,-5.755541,-6.427514,-2.590743,1.348673,-4.758899,1.810365,0.914635,-1.369473,-6.743645,6.602117,-9.706680,3.280680,-5.578645,6.797526,-2.936559,-9.046076,2.680578,-3.576298,8.280636,3.391139,5.901054,2.561111,5.749219,-0.342293,9.917151,-3.923545,0.221740,-6.767571,-9.531174,4.057019,-2.603357,7.913936,-5.806877,-5.886956,3.639658,6.888195,-2.432559,8.234728,-3.410317,9.861435,8.366914,8.334150,9.496470,5.861357,7.653382,-2.388912,-8.099280,5.383416,7.679836,-0.171210,3.169675,-3.798040,2.835877,6.790984,0.785124,3.680385,2.583702,-1.097909,-0.312205,-2.019901,-5.265586,-8.689456,-1.632179,-1.023611,1.341090,-2.054446,-1.617201,-9.216991,-9.217269,-8.802533,-0.158445,-1.766741,-4.044783,0.790014,-6.072784,7.904111,-0.720142,-5.158628,4.799314,7.351163,0.072290,-9.551532,-7.842409,1.619588,-2.584795,-6.970636,-0.941463,-2.192232,7.668129,8.658331,0.668134,8.112237,-9.947912,-0.945240,-5.374399,-6.777437,9.386693,3.203688,5.317539,-4.397489,-5.959994,2.693532,-6.846610,-5.878574,5.302339,0.390273,-4.910567,-8.246796,-2.351476,-7.237787,-1.202972,2.869339,3.345276,2.444766,7.682811,9.197260,4.244551,-5.877709,-2.989226,6.396689,7.045478,6.929995,0.954630,-3.287037,-6.871957,-2.082280,-8.469170,0.996198,1.992917,-5.340094,-3.097064,-0.581747,-2.391463,9.726171,6.954990,-4.132195,-2.474119,-2.978911,-8.974999,4.860978,-7.614568,3.223376,2.215888,-6.106566,-3.164230,-2.578832,-2.887357,-6.846759,7.600612,-6.217407,-7.522206,9.197971,-6.997277,7.476263,4.951675,4.774189,-1.244890,-7.523004,0.233174,-6.026800,5.329425,0.312543,-7.934794,3.073098,4.917271,-7.356195,-1.804837,-3.547960,-4.733242,8.033940,9.972401,5.961697,-7.906823,0.657820,-9.743034,5.968748,-1.336847,-4.743838,-2.193826,2.875251,1.291397,7.143610,1.011614,-7.695124,6.019473,5.513183,-4.382881,8.161513,-1.326553,0.664880,-5.507784,2.809922,2.821148,6.977332,6.739387,2.443866,3.034502,-4.024119,1.107727,-0.371377,5.458844,8.430178,-0.298303,-1.441576,2.124790,2.597925,-5.554415,3.160320,-1.721460,5.403889,3.707940,-7.057833,3.081788,6.905215,5.876028,-8.677362,-6.590650,9.341722,-3.406701,5.279842,0.564329,3.298688,1.587741,1.175423,-2.519992,7.393809,6.188926,-1.861228,0.945246,7.632615,0.775275,4.272510,6.304450,-8.265689,-7.261147,-9.009226,-5.764976,8.813615,-8.749203,-1.201230,3.073727,-1.190696,8.659483,4.583607,-7.779764,-9.120435,-9.272887,6.969291,-3.988745,0.482253,-2.037904,-7.071227,-5.126421,-9.185792,-2.269308,2.418439,9.142571,-1.829622,-5.253241,5.134024,9.497040],[-9.387731,4.976508,0.944045,0.241284,-1.222453,-1.006467,-3.063768,-5.850052,3.643099,8.525253,-2.944628,-4.838561,-7.672411,-3.952836,-8.429545,9.586774,-9.768603,-5.327073,-5.770181,-2.807063,7.312326,1.363184,3.887160,9.201411,-1.572762,2.275578,5.597903,5.142001,-9.531511,9.099815,7.150692,5.193805,3.041477,-5.306557,6.074294,-7.656684,3.470847,4.228015,7.669971,-3.821252,0.323688,-0.965773,5.424408,-6.995591,6.377970,-1.609873,-8.226118,-4.046524,-7.382200,6.855560,-4.949332,-6.038996,4.875822,-6.926411,-5.710272,-5.512571,2.623584,-1.843944,1.957705,-2.327640,-1.071841,5.108306,2.380402,-8.870618,-8.612511,4.173202,3.999940,1.318946,2.913417,0.949322,-7.926596,-5.377590,-3.164370,-6.498454,4.745155,6.114490,-7.183350,1.761896,-5.225942,7.273669,9.553209,2.330255,-3.042724,-1.492870,2.704518,-0.033000,3.070848,6.187211,8.116590,5.129869,-9.453488,7.877732,-3.533655,-5.178623,-6.767556,7.009052,8.814761,8.780713,8.809991,8.306614,4.274100,-0.812733,-5.549281,6.002587,-3.746697,3.270515,7.531691,0.090685,4.690102,-1.098687,7.675273,2.045108,9.581457,-1.084087,-9.199647,1.479349,6.199192,0.674974,0.373640,-7.451304,5.135490,-1.749560,-4.559254,-8.961309,-6.913517,2.834940,1.169233,-6.680325,5.253029,5.875932,-7.434058,-2.203437,4.156488,-3.801500,-9.241037,-1.247117,-7.745533,-7.130018,-0.341665,-6.703903,1.010329,-2.647530,-2.902736,5.206350,6.510321,-1.700893,7.971157,-2.406068,-4.429570,2.240449,0.151786,-7.682483,7.663987,-4.087062,-6.551261,-9.946052,-7.946126,-1.199324,6.037502,2.357220,-3.216251,-9.711866,-0.169442,-1.338487,2.503277,6.416969,1.589942,-1.587936,-4.200931,-5.745832,3.040427,-2.096493,8.350505,2.437091,9.864596,-4.584490,-2.594691,7.812222,1.437368,9.878860,-3.907095,5.645521,-6.056689,-3.158751,-3.737786,6.595814,0.385777,0.768672,-3.153942,5.534773,5.012528,-9.322678,-2.368733,-6.536877,6.616225,9.525031,-2.155181,-8.490035,-2.092736,9.335006,7.594157,9.097999,7.062200,-0.396359,4.322077,7.076109,8.317667,-3.765930,1.480763,7.127576,-6.677253,-5.264206,5.032597,3.709062,0.677360,-9.794272,-8.633213,1.985053,-4.269165,9.376732,8.949555,9.903312,-6.126237,7.476686,-3.550308,9.262433,2.363336,-4.977498,-3.806569,-8.147638,-2.904411,-0.150806,-7.157428,-8.803155,9.769815,-2.975181,-3.172613,4.351114,4.567791,4.682341,4.447572,-3.491018,-2.003638,8.093850,6.797223,9.004457,-5.031442,-5.719644,7.077054,-4.290083,-4.018277,-0.774445,-0.098117,-5.752126,-0.925791,0.475593,-2.120858,-3.352224,-4.249731,3.486684,9.516163,-0.850707,-9.007999,0.213533,3.305566,1.993877,-8.888596,2.830064,6.430884,1.512333,0.404807,-4.815375,-0.793659,-6.597112,-4.703811,-1.082072,-8.586492,-2.144207,7.644337,1.613362,1.907069,6.543349,-7.003618,-4.006287,-2.040147,1.324087,-0.700837,9.872567,-3.155047,-7.140562,2.582076,-7.637828,2.423086,-0.862023,-8.878944,7.061864,-5.751656,-7.542072,4.120410,4.995605,-6.059709,1.284276,-2.902638,7.763976,2.697662,7.555110,8.688741,-4.516916,-4.746971,7.857036,-2.416360,-2.103741,9.840218,3.003063,9.378091,-0.097450,9.887040,8.823393,-4.992242,-9.487452,-8.503237,-1.919408,-4.455002,-7.661718,-9.519630,4.580862,-3.972816,8.032991,-6.450523,5.827548,9.513208,7.735306,9.277157,-5.279650,-6.896133,7.479235,1.807735,-2.242892,6.228440,-0.209012,-5.655415,-0.986722,-8.006979,9.622485,5.235358,-1.534399,-1.750306,0.506970,-5.949591,-0.472174,6.802311,4.842533,3.614453,-3.425675,-5.906917,-0.436224,-7.215501,-4.740953,7.113073,-0.227837,-8.235248,1.542570,-8.693853,-6.467142,0.759999,9.840250,1.220632,9.282310,-6.697218,4.947020,-6.215104,-4.113055,-9.681889,9.749527,-1.842452,-7.746218,2.851979,1.673352,4.582099,-2.465576,-5.246006,6.454914,5.771742,4.756486,-7.977173,-5.993181,-7.599454,9.212131,2.515942,-1.282186,-8.253022,-0.665328,4.723820,-8.733240,-4.107382,5.855430,-3.306272,-2.728785,7.460336,-3.866941,-5.900123,-7.017940,0.436796,9.578051,0.396514,-2.069496,4.102667,1.820202,-1.265275,6.858907,-9.352875,-6.818548,6.697000,-4.018791,-9.597993,-6.132882,-5.611641,9.840180,-5.388337,-0.017776,0.781080,-1.434150,-4.454101,1.758505,0.308620,3.741026,9.597431,-7.341449,-8.472686,3.264940,2.670911,9.401780,-2.037628,0.004077,4.716255,-5.902608,-6.469699,1.265641,-5.556589,-7.466683,6.042442,-2.832741,6.741820,1.452321,9.888562,-5.359326,-5.856206,-2.185404,-7.133845,-6.779523,-4.314251,-9.601438,8.969721,3.908549,-6.596989,1.110836,3.007021,-4.922937,-9.095070,-4.394171,-4.877795,6.441607,-8.697157,-0.684046,3.296407,-6.319982,7.329766,8.862067,6.410333,6.205096,-8.095192,9.626901,-6.499677,-2.389123,-6.255661,-0.173894,1.667053,9.716045,-7.739678,-5.296541,-4.350337,3.256563,-5.508367,-6.262914,9.178260,8.410510,-4.879658,5.555832,2.358848,-3.948891,-5.653260,-7.596331,-9.246462,0.076714,0.589610,-8.455279,-1.093878,-5.099734,-1.801419,-9.154320,-4.946946,5.824392,3.753269,7.245417,-5.007401,-2.098288,-3.647036,-6.127382,-2.719560,5.924749,-2.293577,-4.778674,4.713378,9.216207,0.608358,1.864075,5.059197,4.831680,9.118611,5.055691,-6.038831,-6.699391,1.920533,5.585989,-3.478959,0.493540,-3.316105,-3.012597,-0.712109,-5.543902,8.109681,3.029137,-2.463302,5.700925,2.197133,-8.977435,-8.792241,0.155496,5.395350,-0.346239,3.626442,-4.590955,3.052731,-3.672030,-5.062563,1.576726,-3.085146,7.304643,9.637370,3.801417,7.922356,-0.164890,-5.865873,1.796513,-5.442123,-7.215888,-5.253669,-8.214916,3.284436,1.417716,2.022467,5.300927,-5.601784,-7.239844,-1.870780,-0.820431,9.156149,4.350355,-1.150791,-2.467373,-2.035005,8.903435,7.485697,-1.228542,-5.541648,7.420543,2.634859,3.783769,6.109251,9.824541,3.477401,5.658031,8.273929,4.285544,-2.271892,-5.457742,-3.110176,3.380902,9.707759,-7.719134,6.732331,1.832603,-9.406194,-1.779665,8.146392,6.629451,-4.898643,5.932849,-7.508394,1.869122,-5.666044,5.134473,1.196813,5.396986,9.086875,-3.811311,3.624621,6.790719,2.225970,5.115368,2.296628,4.142159,8.348654,9.001405,7.650707,-7.364958,6.668258,-8.657636,-8.281330,8.897559,0.418082,8.091386,-9.983252,8.792129,-3.069289,-9.906761,2.299446,1.521570,-5.507030,-6.760706,-4.107245,-7.538778,2.054795,-8.888517,-1.182431,0.397570,-2.411765,-7.864324,0.607059,-6.649548,-5.884506,9.385863,-2.821537,-0.962963,-1.688689,0.039858,-2.547763,-7.990924,-3.755288,6.834722,-5.733835,4.516595,4.227183,6.131174,7.668623,9.933643,-8.607662,8.010821,2.732221,-9.257357,0.742157,-9.988465,8.140063,2.339243,-8.813096,-9.014349,4.348012,0.950749,0.141995,7.099158,-1.639155,-8.035874,6.054168,0.448032,9.362554,-9.822517,1.312745,-0.750803,4.630656,7.214039,5.348708,4.622568,1.836049,6.104544,0.092275,4.503705,5.920734,5.647260,3.328923,-0.601853,-0.373071,3.010035,6.790125,-4.361348,0.892771,-3.920571,4.020221,3.841225,-7.943319,0.003794,1.039823,3.850364,-5.765817,-0.956862,-6.407355,-9.233429,6.875590,-7.569057,-3.412700,-1.516112,-7.410188,-1.324362,-2.103262,-9.549555,-5.478086,-5.611752,-4.153399,2.948976,-4.710182,7.610520],[-3.562134,3.204916,2.747108,-7.613237,-7.962356,-5.140473,-2.302248,-6.539579,-7.023328,7.995568,-1.466705,8.709362,-3.028676,0.744178,-5.110332,4.137146,1.484118,-3.958574,-4.982493,-2.086487,5.531866,-0.576610,8.054146,-3.223463,8.406589,-9.425287,-8.647836,8.802676,-5.185601,1.993747,5.748765,2.193602,-3.390077,5.111729,1.357280,8.683768,-7.783882,-3.445229,2.659303,-4.988536,-1.767757,-4.825310,-4.016013,4.976277,9.867685,5.251189,2.757577,8.630049,-1.365592,7.912209,-2.273251,4.032832,-1.833055,-8.524851,-2.535785,-1.637927,8.962325,0.688375,-2.741874,3.857781,-2.284438,-3.340335,0.769798,6.157751,3.947143,7.401965,4.128801,-6.564622,-9.106871,9.424313,5.923661,-4.637490,5.375860,-1.193677,-9.166679,9.188116,-9.110727,8.979841,7.890175,-3.817853,6.356717,-2.481964,-1.811240,-7.799575,9.021324,4.832704,8.118580,0.708749,-9.737722,9.699784,0.424672,1.643181,-1.221263,-9.691375,6.740202,-5.661247,-1.316345,2.633346,-5.095824,-6.257909,-6.174881,-9.266395,1.485632,-9.307185,-0.856529,-4.836344,-5.790488,3.219594,-7.558731,-8.286527,-9.624542,-5.134099,0.039037,7.230958,2.974949,9.454214,-6.482564,-7.972944,0.243072,5.161990,-4.480708,-1.389931,2.057328,9.714986,4.327515,6.458211,1.485724,-6.374637,0.167355,-2.694787,2.497104,-5.466767,2.404155,0.708018,2.070388,-9.209653,7.709570,-3.900646,2.774517,-1.631889,0.909969,-3.649692,-4.853682,9.800354,2.649186,-3.319599,1.369919,-8.304801,5.321862,-1.351565,-1.726693,-2.577673,6.494158,-9.260079,4.253675,2.779386,-4.325803,2.270198,-9.390830,-9.710153,-2.944554,1.528750,-7.936067,-8.656948,1.358009,-4.065866,-5.912225,8.813255,-2.970534,-2.792383,9.448940,-5.177272,9.240783,-6.347028,3.275061,5.588604,0.158041,7.611454,-2.329910,-2.394895,-1.225792,9.609251,2.483208,-8.547697,-7.891021,5.643730,-7.036772,6.763883,8.898107,-2.380332,0.345919,-5.054548,-8.588193,-1.293321,-9.320843,-2.760434,2.676605,8.137198,0.791117,-4.828495,-6.151537,5.447866,-8.651460,-4.310863,-2.927477,-0.456711,1.280574,-5.535175,-2.831716,-0.722017,6.129292,-7.247991,9.296736,-8.550303,5.282729,-5.830354,-9.627218,3.488332,3.579688,1.572383,-8.709523,7.692717,-3.145073,7.927383,-6.086829,1.384867,-3.598991,-5.681455,5.032173,-1.194808,-0.132938,-1.130895,-2.440798,4.862784,-5.863980,6.708270,-7.067406,-1.436078,1.372173,5.272862,2.336810,9.635830,-8.389531,3.458704,-7.665502,1.453449,8.257938,-9.252713,7.893620,7.916007,-2.239925,-3.067278,0.421679,9.855576,-2.232861,-6.533769,-7.581070,9.851354,1.449234,-7.226675,3.651521,-9.205729,-0.364939,-5.919374,-3.966261,4.766145,9.329629,2.911794,-7.568280,1.031835,-0.763736,-7.287633,2.271458,0.310818,7.958333,4.951761,9.822806,6.613111,-2.750534,5.315027,3.170654,2.110967,-3.248385,7.283095,8.074342,1.604820,-1.603602,-6.269808,-2.391981,-1.120312,-1.678215,-6.351031,-2.930179,4.211640,6.662820,0.462097,5.901904,2.723285,-3.078131,-2.905225,2.849007,2.842198,3.228233,-8.209180,1.597218,3.026749,-4.156117,-3.392923,2.945812,9.354609,-0.563538,3.267581,0.205259,-0.460072,4.093751,3.096618,-3.049283,-2.417427,2.660309,5.250194,-3.527006,-9.694809,-3.660700,5.307150,-2.779178,6.950442,2.826771,-3.959637,3.720926,-7.646279,1.656936,-8.292915,-3.376818,1.202908,2.267830,9.207027,-9.482928,-3.417805,-0.631608,-4.546367,-0.195271,0.661762,8.111544,-7.664555,-5.481243,1.142916,-1.343825,-7.499624,8.920986,-9.122892,-5.922662,-7.981852,5.963006,-0.060959,-0.081424,-7.863662,-7.592991,-9.917520,0.616437,-8.571036,-8.300416,0.397461,3.506231,1.483477,-0.038721,8.976144,7.809789,8.418498,-2.631883,-2.986773,-8.081979,9.743753,9.919865,-5.448258,-4.661969,-1.193889,4.541218,-5.172324,9.664697,7.618771,4.047580,8.218665,-7.214788,-5.407508,-9.795628,4.972015,9.278316,5.575360,-8.600053,-8.965312,-1.255723,8.040622,-8.672909,7.428461,-1.229735,0.794168,1.595265,-7.019358,8.738210,6.911053,-0.941494,0.879215,2.636329,-5.689141,-3.984949,6.402976,3.780741,-1.495940,-9.451841,-6.932416,-9.360118,-1.773109,-2.445826,1.388552,7.267964,3.878994,0.967323,-5.696383,6.776859,6.495432,6.741330,-7.299684,8.511175,-4.556817,-9.634882,-4.475931,5.156893,1.049261,-4.129878,9.700978,6.123517,5.376403,6.555519,2.683826,-5.261537,3.761045,9.883040,-3.833302,-5.143932,-7.707333,2.814286,-7.671716,-0.827759,-7.041377,-3.602709,-1.279957,-8.344811,2.216798,7.325441,-0.907849,1.306583,5.475820,-1.114877,3.638927,6.102265,1.802236,2.205746,5.676160,2.739986,-4.441724,0.794353,6.886821,-0.367997,-6.155238,-1.543054,9.220395,-7.211482,-9.502416,-0.819524,5.644414,-1.084631,0.319630,-9.098936,2.680141,-0.427665,-5.598876,-6.136133,-7.554274,-6.631209,0.328230,5.346549,-0.691922,3.780838,-6.427481,-2.489847,0.817635,7.173208,-4.261499,3.270946,0.893249,3.444557,-7.227295,-5.402025,-6.298407,8.770856,0.266306,-0.294337,-0.381162,-5.861776,-8.237040,-1.442392,7.714572,-8.403933,-9.036584,1.020566,0.845789,5.982656,0.630798,-2.726359,-0.248579,6.323083,8.384406,7.661468,9.093982,-2.894237,-4.078997,-2.137171,-2.653498,-3.107469,-6.778615,9.822397,-6.211848,5.641601,-2.917579,-6.624273,8.329998,-1.681854,9.974882,-6.256598,7.985227,-6.362521,-6.634287,-3.309502,2.049250,5.840669,-8.912261,-5.666093,0.873472,-4.955189,2.864287,-0.600793,-9.597130,7.730926,-4.385235,3.846511,8.190476,7.828748,-0.596823,-8.158480,-8.801384,0.322337,-8.755804,-8.851203,-5.878228,7.465281,5.538983,-9.072505,-8.684802,6.368875,-4.560915,6.170909,1.665725,1.982024,-1.237091,9.704532,1.012669,1.694630,-1.364396,0.188703,7.474426,9.709976,-0.808800,-5.130035,8.464473,6.104284,-9.408780,4.089405,8.589874,5.595709,4.070930,3.532243,-0.301135,-9.670888,-8.969603,0.981386,4.435594,-7.816618,-8.525680,-4.855096,-1.876626,1.183885,-1.417550,-0.127215,5.372165,4.082442,9.345479,7.122723,-2.044540,-1.037239,0.026404,-9.885587,-4.709869,-4.054347,8.368572,0.358752,-0.540353,1.643150,4.520072,2.200564,2.554778,0.887614,7.943570,-2.792166,0.655934,-7.847141,-3.449632,9.314697,1.715843,-7.062101,-2.465472,-1.574576,-4.835057,-1.934552,-7.842081,7.354522,-6.055889,-9.545247,9.269252,9.734797,4.196341,-8.164104,-1.163454,5.449753,2.712982,2.155677,8.488972,0.020555,4.409425,5.109639,9.248332,4.166615,-3.128184,5.579059,0.995544,-1.953445,-3.977226,-2.188880,-4.459461,-9.919739,7.096787,9.478803,4.347017,5.518305,-4.558568,-3.707656,0.493774,-1.322362,1.742136,6.601014,-5.405425,-9.018587,-8.261260,-4.206819,-5.511064,6.364883,-3.766009,-5.101322,5.998191,-9.431385,-2.358119,0.692188,-5.053679,1.995916,4.858224,-1.114006,-0.088767,-4.789742,-1.754380,9.392799,2.568863,-6.772316,-7.165288,3.987256,-2.918761,9.514293,5.161592,-4.540431,-0.557515,9.422635,7.897316,-7.048575,-1.814684,-9.734519,1.857089,9.062707,-6.172443,-4.538879,-9.357289,-7.973520,1.659368,-7.126454,-4.757676,-3.954066,-3.814940,-0.973708,-3.086352,-1.492929,2.860621,6.142901,-8.266791,0.123417,-2.098228,1.165154,-7.602508,-6.900186,-2.676154,-7.057504,4.886471,4.099619,-7.506030]], dtype = "float32")#candidate|6423|(4, 720)|const|float32
const_6424 = relay.const([[False],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[False]], dtype = "bool")#candidate|6424|(385, 1)|const|bool
call_6422 = relay.TupleGetItem(func_3391_call(relay.reshape(const_6423.astype('float32'), [16, 15, 12]), relay.reshape(const_6424.astype('bool'), [385,]), ), 3)
call_6425 = relay.TupleGetItem(func_3395_call(relay.reshape(const_6423.astype('float32'), [16, 15, 12]), relay.reshape(const_6424.astype('bool'), [385,]), ), 3)
bop_6426 = relay.mod(var_6407.astype('float32'), call_6422.astype('float32')) # shape=(385,)
bop_6429 = relay.mod(var_6407.astype('float32'), call_6425.astype('float32')) # shape=(385,)
output = relay.Tuple([call_6352,call_6378,call_6394,call_6406,const_6423,const_6424,bop_6426,])
output2 = relay.Tuple([call_6353,call_6379,call_6395,call_6408,const_6423,const_6424,bop_6429,])
func_6430 = relay.Function([var_6407,], output)
mod['func_6430'] = func_6430
mod = relay.transform.InferType()(mod)
var_6431 = relay.var("var_6431", dtype = "int32", shape = ())#candidate|6431|()|var|int32
output = func_6430(var_6431)
func_6432 = relay.Function([var_6431], output)
mutated_mod['func_6432'] = func_6432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6086_call = mod.get_global_var('func_6086')
func_6087_call = mutated_mod.get_global_var('func_6087')
call_6457 = relay.TupleGetItem(func_6086_call(), 0)
call_6458 = relay.TupleGetItem(func_6087_call(), 0)
func_1870_call = mod.get_global_var('func_1870')
func_1874_call = mutated_mod.get_global_var('func_1874')
var_6485 = relay.var("var_6485", dtype = "bool", shape = ())#candidate|6485|()|var|bool
const_6486 = relay.const([[False,False,True,True,False,True,False],[True,False,True,True,True,False,True],[False,True,False,True,False,False,False],[False,False,True,False,False,True,True],[False,False,False,False,False,True,True],[True,False,True,False,False,False,True],[False,False,True,False,True,True,False],[False,False,False,False,False,True,True],[False,False,False,False,False,False,True],[True,False,False,False,False,False,False],[True,False,True,True,True,False,True],[False,False,True,False,False,True,True],[False,False,False,False,False,False,False],[True,True,True,False,True,False,False],[True,False,False,False,False,True,True],[True,False,True,False,False,False,False],[False,False,True,False,False,True,False],[True,False,False,False,True,False,False],[False,False,False,True,False,False,False],[False,True,True,False,True,False,False],[True,True,False,True,True,False,True],[True,True,True,False,True,False,False],[False,False,False,False,False,False,False],[False,False,False,False,False,True,False],[True,False,False,True,True,True,False],[False,True,False,True,False,True,False],[False,True,False,False,True,True,True],[True,True,True,True,False,True,False],[False,False,False,True,False,True,False],[True,False,True,True,True,True,True],[True,False,True,True,False,True,False],[True,False,True,True,False,False,False],[False,True,False,False,True,True,True],[False,False,False,True,False,True,True],[True,False,False,False,False,True,False],[False,False,False,False,True,True,True],[True,True,True,True,False,False,True],[True,True,False,True,True,False,True],[True,True,False,False,True,False,False],[False,True,False,False,True,False,False],[False,True,True,True,False,True,False],[False,True,True,False,False,False,True],[True,False,False,False,False,False,False],[True,False,False,True,True,True,False],[True,True,False,True,True,False,True],[True,True,True,False,False,True,False],[False,True,True,True,True,False,True],[True,False,True,True,True,True,False],[False,False,False,True,False,True,True],[True,True,False,False,False,True,False],[False,False,False,False,True,False,True],[True,False,False,False,False,True,True],[True,False,False,False,True,False,True],[True,True,False,False,False,False,False],[False,False,True,False,False,True,False]], dtype = "bool")#candidate|6486|(55, 7)|const|bool
call_6484 = relay.TupleGetItem(func_1870_call(relay.reshape(var_6485.astype('bool'), []), relay.reshape(const_6486.astype('bool'), [11, 5, 7]), ), 0)
call_6487 = relay.TupleGetItem(func_1874_call(relay.reshape(var_6485.astype('bool'), []), relay.reshape(const_6486.astype('bool'), [11, 5, 7]), ), 0)
func_1504_call = mod.get_global_var('func_1504')
func_1508_call = mutated_mod.get_global_var('func_1508')
var_6490 = relay.var("var_6490", dtype = "int32", shape = (3, 27))#candidate|6490|(3, 27)|var|int32
call_6489 = relay.TupleGetItem(func_1504_call(relay.reshape(var_6485.astype('int32'), []), relay.reshape(var_6490.astype('int32'), [9, 1, 9]), ), 2)
call_6491 = relay.TupleGetItem(func_1508_call(relay.reshape(var_6485.astype('int32'), []), relay.reshape(var_6490.astype('int32'), [9, 1, 9]), ), 2)
func_5606_call = mod.get_global_var('func_5606')
func_5607_call = mutated_mod.get_global_var('func_5607')
call_6492 = func_5606_call()
call_6493 = func_5606_call()
func_5087_call = mod.get_global_var('func_5087')
func_5089_call = mutated_mod.get_global_var('func_5089')
call_6495 = func_5087_call()
call_6496 = func_5087_call()
func_6086_call = mod.get_global_var('func_6086')
func_6087_call = mutated_mod.get_global_var('func_6087')
call_6499 = relay.TupleGetItem(func_6086_call(), 0)
call_6500 = relay.TupleGetItem(func_6087_call(), 0)
func_5858_call = mod.get_global_var('func_5858')
func_5859_call = mutated_mod.get_global_var('func_5859')
call_6501 = func_5858_call()
call_6502 = func_5858_call()
bop_6503 = relay.multiply(var_6490.astype('uint32'), var_6485.astype('uint32')) # shape=(3, 27)
output = relay.Tuple([call_6457,call_6484,const_6486,call_6489,call_6492,call_6495,call_6499,call_6501,bop_6503,])
output2 = relay.Tuple([call_6458,call_6487,const_6486,call_6491,call_6493,call_6496,call_6500,call_6502,bop_6503,])
func_6506 = relay.Function([var_6485,var_6490,], output)
mod['func_6506'] = func_6506
mod = relay.transform.InferType()(mod)
mutated_mod['func_6506'] = func_6506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6506_call = mutated_mod.get_global_var('func_6506')
var_6508 = relay.var("var_6508", dtype = "bool", shape = ())#candidate|6508|()|var|bool
var_6509 = relay.var("var_6509", dtype = "int32", shape = (3, 27))#candidate|6509|(3, 27)|var|int32
call_6507 = func_6506_call(var_6508,var_6509,)
output = call_6507
func_6510 = relay.Function([var_6508,var_6509,], output)
mutated_mod['func_6510'] = func_6510
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6539 = relay.const([[[9.483026],[-0.094077],[7.714266],[4.861985],[-3.222732],[-6.548682]],[[9.794521],[-7.217291],[5.969450],[6.078884],[-7.834452],[-0.373150]],[[-9.280409],[4.823772],[2.419367],[2.288410],[-9.933469],[4.205093]],[[-7.780298],[-4.557257],[6.827347],[-0.171947],[-0.354436],[-8.313009]],[[0.682666],[9.566070],[-4.686108],[-8.782460],[-3.416473],[-6.086789]],[[-0.994206],[0.604908],[4.727352],[-3.114415],[4.180310],[-5.150283]],[[4.077311],[9.440438],[-2.570145],[-8.598309],[-6.552346],[1.742879]],[[1.976635],[7.884693],[4.700250],[9.124212],[2.549693],[-7.988559]]], dtype = "float64")#candidate|6539|(8, 6, 1)|const|float64
uop_6540 = relay.acosh(const_6539.astype('float64')) # shape=(8, 6, 1)
func_1700_call = mod.get_global_var('func_1700')
func_1703_call = mutated_mod.get_global_var('func_1703')
var_6554 = relay.var("var_6554", dtype = "float32", shape = (630,))#candidate|6554|(630,)|var|float32
call_6553 = relay.TupleGetItem(func_1700_call(relay.reshape(var_6554.astype('float32'), [9, 10, 7])), 0)
call_6555 = relay.TupleGetItem(func_1703_call(relay.reshape(var_6554.astype('float32'), [9, 10, 7])), 0)
func_6115_call = mod.get_global_var('func_6115')
func_6117_call = mutated_mod.get_global_var('func_6117')
call_6564 = relay.TupleGetItem(func_6115_call(), 0)
call_6565 = relay.TupleGetItem(func_6117_call(), 0)
func_6057_call = mod.get_global_var('func_6057')
func_6058_call = mutated_mod.get_global_var('func_6058')
call_6579 = func_6057_call()
call_6580 = func_6057_call()
func_4960_call = mod.get_global_var('func_4960')
func_4965_call = mutated_mod.get_global_var('func_4965')
var_6586 = relay.var("var_6586", dtype = "bool", shape = (385,))#candidate|6586|(385,)|var|bool
var_6587 = relay.var("var_6587", dtype = "int8", shape = (75, 3))#candidate|6587|(75, 3)|var|int8
var_6588 = relay.var("var_6588", dtype = "int32", shape = (936,))#candidate|6588|(936,)|var|int32
const_6589 = relay.const([9.726527,3.652795,0.626322,4.806370,-3.626557,-5.537446,4.006294,4.460529,4.461336,-9.893193,-0.414302,-5.980737,-8.323859,2.046120,0.835937,6.631857,-9.851864,-5.336224,3.112928,9.410500,-3.800987,9.051615,-7.392969,6.145119,-8.676095,2.330272,-9.318121,6.791463,2.721363,-0.549392,2.148760,2.799949,-2.233690,9.990550,-1.633729,7.495511,-5.388833,-9.492622,-3.762124,1.395833,2.530017,2.941833,-5.138508,8.543425,2.697545,-9.586716,0.966720,-8.680915,-7.640871,3.476476,-3.054453,1.474701,8.546893,3.266277,1.176280,-6.525976,1.734904,-1.103082,-8.749350,9.090089,-9.563816,-7.650781,-5.825058,2.593220,-5.035300,1.413017,-1.183309,-3.663067,-2.025348,1.826203,-3.349748,-4.491955,6.292961,7.914845,-3.695749,6.271297,-2.442534,-6.218194,8.932533,2.560535,-8.821940,-8.591948,-6.008312,-8.385072,0.847054,-1.680263,5.628074,9.278331,-9.050825,-7.437643,-7.559934,2.296460,7.591529,1.926258,4.641990,3.535285,9.238949,-5.729913,-1.060095,-2.611717,-0.890388,0.551425,7.677314,-6.769862,6.177948,7.735658,6.903849,-3.246724,-4.307362,0.227368,3.710294,-7.029195,-8.810456,-8.862075,4.519302,-3.222750,4.827330,-3.814200,3.056068,-2.648956,5.890604,-5.103555,-2.515577,-0.229861,-6.531990,4.639959,-6.588346,-9.274080,-9.083581,6.555017,3.942958,-1.858052,4.218485,8.420036,4.833402,4.178553,8.857530,6.922143,-3.470656,8.888930,8.286604,-1.529029,-0.158182,9.107257,4.442936,-7.607605,-6.108692,-8.151950,2.246590,-8.370109,3.222182,-8.918379,8.350733,3.696462,9.037575,-4.196179,9.120134,-4.027743,6.043662,-7.134569,-0.030700,1.651957,1.094542,-1.564686,-2.792678,-0.060007,-5.041960,-6.303722,-6.080559,5.991935,-0.963276,2.830451,8.717642,5.253563,7.965562,0.632646,8.997479,-2.596558,-4.442027,8.652318,-4.042813,2.400144,-9.755321,-5.458817,6.596656,-9.694888,-6.138653,0.176971,7.364424,-7.875272,-3.473895,-4.974720,3.549778,2.841315,0.691920,-2.653381,-1.177606,-1.618723,7.351806,6.470002,2.862457,0.799158,4.191611,1.910577,1.290470,0.330264,6.854667,6.052120,1.914192,0.088801,-8.642888,-1.212752,3.501080,4.337326,6.566382,6.238277,3.054168,-1.763490,9.263361,9.353222,-8.857523,-6.346806,3.005286,-1.492528,-4.445229,2.222732,5.357383,5.316001,8.363223,7.753645,-3.637561,5.276101,2.599807,-3.464873,9.038026,-0.399717,7.348348,0.905295,-3.089479,0.858340,3.715442,7.188698,-8.012857,3.285121,-7.882201,-1.326436,6.260408,-2.309670,-0.030214,1.611314,-4.230234,7.261013,7.117187,-3.781463,-6.875096,-2.544265,5.866387,-4.781051,0.227008,0.425520,-4.222859,-4.261726,3.163987,5.872751,7.203222,6.689819,-4.604461,1.667115,5.383856,4.845074,2.562219,-4.063598,-0.938913,-7.583866,-5.708556,4.750291,-5.387981,8.366080,-6.413098,4.716842,6.334737,9.477720,0.813577,8.116616,5.442542,-6.677147,2.826492,6.658889,1.932315,2.370143,7.526497,-2.314619,-3.818656,3.513517,-5.783125,-2.493780,6.801992,8.560305,8.923769,2.762661,-9.435032,6.670314,-3.586375,7.178272,5.303711,-5.757892,7.980561,-8.141046,-8.667598,-9.877182,-7.185774,-0.918394,-7.099507,-6.839683,7.146743,-6.093625,9.640413,9.906801,-5.743028,8.154578,5.931033,-0.036294,-1.416036,-8.205346,-8.354985,-5.011100,3.295933,-4.523654,-8.099954,1.343131,2.491204,9.655303,-0.427835,-5.730261,3.317931,-8.807694,0.159899,7.992665,4.172552,-6.600028,-4.425945,-5.985302,-6.487943,-7.771089,1.591213,-4.533679,6.759403,0.066084,-0.937663,4.436958,9.784415,-5.145806,-7.900991,-9.039415,2.366018,-9.013070,4.435512,6.784995,4.359211,4.984468,-3.487442,3.612702,3.705111,9.299719,1.982975,-4.180709,-0.973935,3.318152,-6.561082,-5.305763,2.872529,-7.376152,9.888298,-3.128125,8.684228,1.536339,2.677280,1.749072,2.633467,-9.815532,0.040706,0.640931,1.039970,4.972162,-8.540015,3.417966,-5.170072,7.050941,8.947900,-1.698054,3.796106,-5.964770,4.820191,2.663234,-6.122482,8.562204,-3.370414,6.226322,8.829617,-5.391447,-1.516120,8.356684,4.669534,-1.849649,-1.623110,6.654204,-6.647113,-5.960058,5.372229,-7.189126,5.910853,-9.555575,-8.795394,6.362067,-4.790591,-3.636776,2.334200,9.853599,-3.050242,-1.650588,-1.932833,-3.970783,4.446621,-8.164298,-9.615923,1.834426,-9.386649,-7.615781,9.964397,1.826405,2.218087,1.573026,5.696310,9.710865,-5.381164,7.932998,4.443699,-2.846312,-3.450103,3.511982,7.583266,5.580147,-9.586257,6.994466,7.046675,3.632016,-8.010471,-1.110212,5.769349,6.186627,0.600614,4.737895,-5.786618,6.027511,-6.575612,4.428841,2.756791,-8.789796,-2.998440,-0.453751,-6.925452,-0.240324,-4.175990,-2.975058,-7.621428,1.633776,-4.836801,-2.152083,-4.492291,-6.355408,2.843382,8.028358,-9.563150,-2.285228,3.050865,-5.666607,0.614022,-6.082808,8.816247,8.633147,-9.247863,9.275720,2.606073,1.696071,-2.633536,5.270466,6.616373,-0.913641,-5.368162,6.163595,9.249060,7.423692,-4.532716,-3.927692,-7.555068,-2.258106,7.625818,-4.743631,4.627871,-8.746685,8.084058,6.758674,-9.627777,-3.779314,3.218523,-6.234009,4.199983,4.516332,5.245417,-7.608349,4.461432,-7.449457,-3.734288,-8.892360,-1.537793,3.282754,-5.356726,0.117520,9.409253,4.419668,9.337514,6.573437,3.205032,-2.481210,1.489920,-3.665398,8.873648,1.463235,3.678443,-5.549124,-2.698047,7.033463,-3.018235,-6.797514,-7.975271,-5.967725,6.706902,4.589177,-5.536155,-4.627073,-2.660563,5.140255,0.601460,3.919041,-6.720815,1.624743,-2.930847,1.028333,8.744977,-5.312968,9.699334,0.041617,-6.446725,2.433556,-9.701089,-9.409973,-5.409084,6.648753,-5.542673,5.767081,-4.935324,-9.067622,5.842841,2.300856,3.041111,4.905586,1.107946,7.444406,4.968156,-7.935388,-1.579611,-8.155367,-2.777702,6.560541,-4.909095,9.982113,8.802756,0.527576,5.217871,0.190754,-5.931729,6.490537,0.204615,-5.916784,7.984984,-9.712100,8.500847,1.278325,-5.346740,5.012424,8.717456,2.260414,-7.336977,6.523602,-8.191877,-9.745774,2.181455,-7.123626,-9.742855,6.662737,4.153713,-7.857367,-2.626868,0.155157,-2.473542,-9.187294,6.357502,-8.006809,-5.071049,-4.780965,-6.601086,-7.482228,-5.619626,-9.241348,5.756468,9.531233,4.346021,4.450872,7.418828,6.354406,2.439062,8.023916,1.336610,-8.276162,3.306637,-6.401256,2.936505,-3.673940,6.455137,3.532495,-2.818837,-0.820329,-1.654452,-1.111408,-2.785711,0.578238,8.924686,-3.372625,-8.599405,-9.122317,7.994739,8.659943,3.927750,0.394835,-8.728988,6.873641,7.211276,-3.031895,-1.812656,5.459241,-8.012556,-4.604987,5.186034,9.538887,-1.667869,9.944470,-2.656511,-3.012357,-9.198206,2.196770,-5.003494,-7.088907,-6.581477,8.254282,1.948841,2.845211,5.642770,3.713234,-6.088181,-4.657618,-1.388119,1.049769,-9.961062,3.506568,9.782851,9.802299,2.468232,8.185330,4.544474,-9.624493,9.644340,-5.904741,-9.069535,2.157320,-8.305990,2.058501,7.239550,-1.450384,-2.563892,6.882853,-6.791734,-3.144121,-8.224402,0.303475,-1.478186,-8.198337,5.897094,8.239160,-0.268739,-1.524947,-3.146248,3.847149,-0.132802,-1.281841,8.193326,-0.413075,-8.284214,-8.346098,-7.333623,-8.897123,1.394531,-0.899214,-1.007686,-3.097458,-0.732470], dtype = "float32")#candidate|6589|(715,)|const|float32
call_6585 = relay.TupleGetItem(func_4960_call(relay.reshape(var_6586.astype('bool'), [11, 35]), relay.reshape(var_6587.astype('int8'), [75, 3]), relay.reshape(var_6588.astype('int32'), [36, 26]), relay.reshape(const_6589.astype('float32'), [715,]), ), 1)
call_6590 = relay.TupleGetItem(func_4965_call(relay.reshape(var_6586.astype('bool'), [11, 35]), relay.reshape(var_6587.astype('int8'), [75, 3]), relay.reshape(var_6588.astype('int32'), [36, 26]), relay.reshape(const_6589.astype('float32'), [715,]), ), 1)
output = relay.Tuple([uop_6540,call_6553,var_6554,call_6564,call_6579,call_6585,var_6586,var_6587,var_6588,const_6589,])
output2 = relay.Tuple([uop_6540,call_6555,var_6554,call_6565,call_6580,call_6590,var_6586,var_6587,var_6588,const_6589,])
func_6600 = relay.Function([var_6554,var_6586,var_6587,var_6588,], output)
mod['func_6600'] = func_6600
mod = relay.transform.InferType()(mod)
mutated_mod['func_6600'] = func_6600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6600_call = mutated_mod.get_global_var('func_6600')
var_6602 = relay.var("var_6602", dtype = "float32", shape = (630,))#candidate|6602|(630,)|var|float32
var_6603 = relay.var("var_6603", dtype = "bool", shape = (385,))#candidate|6603|(385,)|var|bool
var_6604 = relay.var("var_6604", dtype = "int8", shape = (75, 3))#candidate|6604|(75, 3)|var|int8
var_6605 = relay.var("var_6605", dtype = "int32", shape = (936,))#candidate|6605|(936,)|var|int32
call_6601 = func_6600_call(var_6602,var_6603,var_6604,var_6605,)
output = call_6601
func_6606 = relay.Function([var_6602,var_6603,var_6604,var_6605,], output)
mutated_mod['func_6606'] = func_6606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5949_call = mod.get_global_var('func_5949')
func_5950_call = mutated_mod.get_global_var('func_5950')
call_6645 = func_5949_call()
call_6646 = func_5949_call()
output = relay.Tuple([call_6645,])
output2 = relay.Tuple([call_6646,])
func_6656 = relay.Function([], output)
mod['func_6656'] = func_6656
mod = relay.transform.InferType()(mod)
output = func_6656()
func_6657 = relay.Function([], output)
mutated_mod['func_6657'] = func_6657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6656_call = mod.get_global_var('func_6656')
func_6657_call = mutated_mod.get_global_var('func_6657')
call_6666 = relay.TupleGetItem(func_6656_call(), 0)
call_6667 = relay.TupleGetItem(func_6657_call(), 0)
func_4787_call = mod.get_global_var('func_4787')
func_4790_call = mutated_mod.get_global_var('func_4790')
const_6678 = relay.const([[False,True,False,False,True,False,False],[False,False,False,True,True,False,True],[True,False,False,True,False,True,True],[True,True,True,True,False,True,True],[False,False,True,False,True,True,True],[True,False,True,True,False,True,True],[True,False,False,True,False,True,False],[False,False,True,True,False,False,False],[False,True,True,True,True,True,True],[True,False,False,False,False,False,True],[False,True,False,False,True,True,True],[True,False,True,True,False,False,False],[False,True,True,True,False,False,False],[False,True,True,True,False,False,True],[False,False,False,True,True,True,True],[True,False,False,False,False,True,False],[False,True,False,True,False,True,False],[True,False,False,True,True,True,False],[True,True,True,False,True,True,True],[True,False,False,False,False,False,False],[False,True,False,True,False,True,False],[True,False,False,False,False,False,True],[False,True,True,True,True,False,True],[False,True,False,True,False,False,True],[False,False,False,True,True,False,False],[False,True,False,True,False,False,True],[False,False,False,False,True,True,False],[False,True,True,True,False,False,False],[False,False,False,True,True,False,False],[False,False,False,False,False,False,True],[False,False,False,False,False,False,True],[True,True,True,False,False,False,True],[True,False,True,True,True,True,False],[False,True,False,False,False,False,True],[False,False,False,False,False,True,False],[False,True,True,False,True,False,False],[True,True,True,False,True,False,False],[False,False,False,False,True,True,True],[True,True,False,True,False,False,True],[False,True,False,True,True,True,True],[False,False,True,True,True,False,False],[False,False,False,True,False,False,True],[False,True,False,True,True,False,True],[True,True,False,True,False,False,False],[True,False,True,True,False,False,True],[True,False,True,True,True,True,False],[True,True,False,True,True,False,True],[False,True,False,True,False,False,False],[False,True,True,False,True,False,True],[True,True,False,False,True,True,True],[False,False,False,False,False,False,True],[True,False,False,True,True,False,False],[True,True,False,False,False,True,False],[True,False,True,False,True,False,False],[False,True,True,True,False,True,True]], dtype = "bool")#candidate|6678|(55, 7)|const|bool
call_6677 = relay.TupleGetItem(func_4787_call(relay.reshape(const_6678.astype('bool'), [385,])), 3)
call_6679 = relay.TupleGetItem(func_4790_call(relay.reshape(const_6678.astype('bool'), [385,])), 3)
bop_6681 = relay.mod(const_6678.astype('float32'), relay.reshape(call_6677.astype('float32'), relay.shape_of(const_6678))) # shape=(55, 7)
bop_6684 = relay.mod(const_6678.astype('float32'), relay.reshape(call_6679.astype('float32'), relay.shape_of(const_6678))) # shape=(55, 7)
output = relay.Tuple([call_6666,bop_6681,])
output2 = relay.Tuple([call_6667,bop_6684,])
func_6691 = relay.Function([], output)
mod['func_6691'] = func_6691
mod = relay.transform.InferType()(mod)
mutated_mod['func_6691'] = func_6691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6691_call = mutated_mod.get_global_var('func_6691')
call_6692 = func_6691_call()
output = call_6692
func_6693 = relay.Function([], output)
mutated_mod['func_6693'] = func_6693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6115_call = mod.get_global_var('func_6115')
func_6117_call = mutated_mod.get_global_var('func_6117')
call_6722 = relay.TupleGetItem(func_6115_call(), 0)
call_6723 = relay.TupleGetItem(func_6117_call(), 0)
func_4825_call = mod.get_global_var('func_4825')
func_4829_call = mutated_mod.get_global_var('func_4829')
const_6730 = relay.const([[-6,-6,-2,9,-4,-10,6,1,-8,-9,-6,7,-7,4,-3,-5,-1,-5,9,-3],[-2,-5,-8,2,-5,-4,-10,-6,-2,-6,-3,3,-6,-7,4,-8,-10,5,-1,-6],[9,-1,9,-9,-10,-5,8,8,-8,-10,4,9,3,6,2,-4,9,2,-3,-10],[-8,7,-3,-1,-2,3,1,2,5,-9,9,10,7,8,4,4,-1,9,5,-4],[1,3,-7,-5,4,-1,-7,8,6,-7,-2,-4,1,-8,3,3,9,-7,2,1],[10,-6,-5,-3,2,3,9,8,1,6,8,-2,-7,3,3,-5,6,-9,8,3],[-2,-4,6,-2,-8,2,10,-2,3,6,9,-10,-3,-9,-3,-8,1,-9,-6,5],[-1,-1,-3,8,10,5,-3,6,5,6,-8,-6,-10,7,6,-1,10,-6,7,-8]], dtype = "int16")#candidate|6730|(8, 20)|const|int16
call_6729 = relay.TupleGetItem(func_4825_call(relay.reshape(const_6730.astype('int16'), [16, 5, 2]), relay.reshape(const_6730.astype('int16'), [16, 5, 2]), ), 0)
call_6731 = relay.TupleGetItem(func_4829_call(relay.reshape(const_6730.astype('int16'), [16, 5, 2]), relay.reshape(const_6730.astype('int16'), [16, 5, 2]), ), 0)
output = relay.Tuple([call_6722,call_6729,const_6730,])
output2 = relay.Tuple([call_6723,call_6731,const_6730,])
func_6757 = relay.Function([], output)
mod['func_6757'] = func_6757
mod = relay.transform.InferType()(mod)
output = func_6757()
func_6758 = relay.Function([], output)
mutated_mod['func_6758'] = func_6758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5410_call = mod.get_global_var('func_5410')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_6774 = func_5410_call()
call_6775 = func_5410_call()
func_1131_call = mod.get_global_var('func_1131')
func_1134_call = mutated_mod.get_global_var('func_1134')
var_6779 = relay.var("var_6779", dtype = "int32", shape = ())#candidate|6779|()|var|int32
call_6778 = relay.TupleGetItem(func_1131_call(relay.reshape(var_6779.astype('int32'), [])), 0)
call_6780 = relay.TupleGetItem(func_1134_call(relay.reshape(var_6779.astype('int32'), [])), 0)
func_5875_call = mod.get_global_var('func_5875')
func_5876_call = mutated_mod.get_global_var('func_5876')
call_6784 = func_5875_call()
call_6785 = func_5875_call()
output = relay.Tuple([call_6774,call_6778,var_6779,call_6784,])
output2 = relay.Tuple([call_6775,call_6780,var_6779,call_6785,])
func_6786 = relay.Function([var_6779,], output)
mod['func_6786'] = func_6786
mod = relay.transform.InferType()(mod)
mutated_mod['func_6786'] = func_6786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6787 = relay.var("var_6787", dtype = "int32", shape = ())#candidate|6787|()|var|int32
func_6786_call = mutated_mod.get_global_var('func_6786')
call_6788 = func_6786_call(var_6787)
output = call_6788
func_6789 = relay.Function([var_6787], output)
mutated_mod['func_6789'] = func_6789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6691_call = mod.get_global_var('func_6691')
func_6693_call = mutated_mod.get_global_var('func_6693')
call_6810 = relay.TupleGetItem(func_6691_call(), 0)
call_6811 = relay.TupleGetItem(func_6693_call(), 0)
func_5833_call = mod.get_global_var('func_5833')
func_5838_call = mutated_mod.get_global_var('func_5838')
const_6817 = relay.const([3.315492,-4.414227,-4.533673,-7.422933,8.955550,7.357490,5.704835,-7.094601,8.437217,-6.254600,2.550073,-7.843608,-7.972691,6.495481,4.629781,-2.729500,-1.109851,-1.265281,8.759452,-7.374261,4.290243,-9.482912,3.773542,-6.309197,4.132633,9.721864,-3.535777,5.724999,-0.761117,-2.266892,-7.129538,9.651082,-6.580686,5.701074,-3.274152,-6.588120,7.115752,-4.657080,5.925811,7.206610,7.694767,7.408370,-1.437200,-4.067106,-2.513771,-0.840505,2.674475,6.282991,-0.031215,0.984837,-2.658803,-2.768570,-4.389563,5.812857,3.389971,-6.049051,6.986055,-9.899328,-0.112362,-5.065110,-3.209935,7.672401,-3.804101,2.822686,-7.275788,5.035201,-2.606188,-1.779522,-6.606126,1.061052,3.148873,-7.896649,0.546286,-7.476965,6.773582,-6.909682,-9.341454,1.516527,1.414739,5.560876,9.581484,-1.380507,-5.973725,-2.111807,-8.137601,-9.415703,-6.403728,-0.334413,6.751223,3.771001,-7.611746,-1.457020,-4.364990,7.406026,-1.459694,5.547517,-7.838048,-0.569221,-9.992127,6.557625,-5.230325,-8.971170,1.041614,-8.591645,-1.268394,5.146210,-7.997095,7.819194,-5.058850,-3.925712,9.086684,-7.199690,9.618849,-9.289339,-6.595952,2.615835,2.029282,3.478895,-1.520665,1.397283,5.645449,9.436520,1.685645,-7.844352,-6.091486,-4.051750,-4.874223,8.273023,5.735960,-3.763664,9.815542,-7.295972,3.729594,8.885587,-0.671147,-0.553178,-9.980657,6.187363,-0.320238,5.448882,-9.844370,-7.914934,-1.366185,-3.824080,9.659487,2.001205,-1.085146,8.620769,1.788081,-5.265786,-0.634376,-8.107676,-8.088647,-4.967645,5.610247,3.083730,6.763282,6.652248,6.454803,-7.750977,-4.162461,-2.312691,7.512848,-7.073409,-0.412995,-2.266151,-4.762122,7.715086,-8.568525,3.978891,5.924101,8.758865,6.607354,7.174982,3.126815,3.854640,4.635802,-0.341219,-5.229185,-8.250636,6.878578,6.438391,4.731089,4.130199,-1.056621,8.639183,9.129384,-9.230983,2.642255,-8.157491,2.603594,-0.980028,2.785415,-8.432938,-0.415765,-2.328242,3.519806,9.265121,3.348341,9.471899,4.810516,8.295774,5.413307,0.832566,9.426024,2.910387,-8.855957,-3.154481,8.659324,8.289369,0.750474,0.613416,0.606606,0.107933,9.792579,-8.746575,4.074793,-3.645377,0.479886,-4.205381,2.974588,-5.737001,5.891821,0.216526,4.696404,-1.873328,-9.756678,8.480334,-6.252288,-5.617184,0.645543,5.294347,2.058987,-5.477529,5.830281,5.175020,-4.177995,-5.978692,-2.113625,-9.630844,-6.909580,-5.168902,8.434057,-2.843136,-1.399815,2.161168,0.039738,1.410736,-2.034051,-6.226765,-6.793453,-8.659341,2.640925,-3.326432,-5.716867,6.635217,-0.238326,-7.735324,7.344950,3.912613,7.383317,-9.546831,6.230904,8.683825,3.398816,-0.805053,-2.973522,-2.029663,9.432084,5.883651,-9.708742,4.478399,9.478141,-8.117679,-4.817975,-6.291253,-7.203077,5.587609,-9.648274,-9.918003,-2.548174,5.546589,2.729416,-0.435248,4.962295,3.001722,-0.393273,-3.832557,-8.536283,-6.091238,-9.689274,-6.585268,1.241552,9.249495,9.614274,0.495288,-3.182308,-4.477467,8.959188,-0.243313,-7.183337,-0.454694,-8.827395,-5.162238,7.241657,-2.059384,-8.530354,-4.789576,-6.613516,7.431515,7.911201,6.778493,-8.173383,-9.347242,-9.947124,-1.471901,-4.212137,9.890765,2.616640,8.172608,-5.917704,-7.955255,-5.447946,0.524120,-9.073041,-2.569112,1.726928,7.645695,7.449437,2.417170,4.239971,2.426521,-6.534117,-6.945941,-1.220430,-4.344516,3.593224,4.835080,-2.454652,-1.046897,-1.045073,-3.887013,-1.234036,0.697550,6.305756,5.631585,-7.828368,-0.419759,0.959122,-7.831686,-7.933731,5.788709,4.516709,-1.634209,4.020115,3.824338,8.073086,5.327999,8.248429,-6.079542,-3.494171,4.444328,-5.679507,2.454786,3.398555,8.839531,0.244314,2.272145,-4.857424,-2.773826,1.356827,6.089186,4.417021,-7.789125,8.480957,-2.780921,1.790580,-4.214837,4.432378,2.681327,1.079591,7.802539,1.890753,6.250027,-9.106284,2.482441,6.150723,-2.054341,-8.102619,-9.115708,6.088607,2.801165,-4.664757,-8.236893,5.849610,-0.113844,3.890494,6.751692,7.703465,-4.176312,-9.672822,6.952130,-2.284066,9.287884,-5.000168,-8.696697,-8.010385,-0.749651,9.854310,-6.876239,6.470524,5.645627,-3.298293,7.988576,7.405629,5.529930,-4.285694,-1.708970,8.967321,7.322525,4.615050,0.739500,7.524463,-5.312606,7.775037,9.665901,-1.358212,8.750101,-3.077769,-8.283924,-1.956181,7.246819,-6.403095,5.388533,4.577990,4.740779,-0.846083,-8.131641,2.912286,-3.143854,-5.978508,6.298337,-5.008116,2.067186,9.200898,-0.991739,-4.659781,-0.184943,6.473273,-8.829141,-2.846247,3.024973,-7.828626,-8.333026,5.819470,-3.981382,8.839495,-5.372790,-6.762295,-5.693142,3.478943,9.507894,-1.943980,-7.504037,9.526140,6.895609,-3.383348,-7.633165,-3.545957,-9.246227,9.277535,9.897072,-1.109022,-1.195144,-6.992841,7.035708,-0.177952,3.476630,-2.686727,-0.928475,-3.792940,-2.958174,0.234987,6.559230,8.272115,5.257449,0.143330,0.061426,-3.737402,-7.422590,-9.889643,-7.820219,3.736027,-9.492616,3.970164,2.685235,-1.679755,-6.464351,4.935586,6.881769,-9.947693,8.398869,-0.335929,5.767881,9.276592,8.349606,9.091579,-9.509369,3.639423,2.192382,0.195256,-2.459950,-2.970105,5.392675,-1.372167,-1.465077,2.270706,-0.167603,6.258131,-3.774175,-5.754321,-5.595759,9.825104,-9.574315,3.163012,5.777355,-8.213908,-4.426953,8.453863,-6.164188,4.307739,-0.738200,5.568145,-1.105671,-7.701615,7.973305,-6.324238,7.585848,-9.872427,-3.533979,2.207793,-5.654945,4.212639,-8.811700,2.586382,-5.419773,6.888998,5.517360,-6.995036,9.089964,9.350760,8.055708,3.290626,2.401345,-8.571909,3.658474,-2.099338,3.545246,8.453436,-5.562930,6.483651,5.949773,7.049343,2.226746,-1.631039,-3.167504,1.265395,7.556916,-4.668720,-8.835155,-8.008225,-6.363174,4.941081,-7.998611,2.382719,0.911403,5.023671,-5.937731,-6.304117,-0.844323,-0.294271,-9.308877,-5.420834,-5.772886,-5.717576,2.287890,4.223589,7.247714,-3.199137,7.770395,-2.051701,-0.446325,9.585520,-0.754299,-8.710758,-4.257469,-2.938270,-8.158810,-1.989470,0.228314,1.640664,6.080773,1.846591,7.324519,-0.285372,8.388123,-3.312036,-1.810382,-7.836293,0.676519,-7.515501,-7.263495,-4.172336,8.693053,7.386016,2.436492,-1.678734,4.330335,-7.880425,1.167017,6.509844,2.137715,-0.579770,2.251950,6.468762,0.049755,-1.660762,-8.070450,-0.478576,8.883896,-7.894285,-3.565896,8.690115,-7.767215,-0.708911,-8.331833,4.667540,2.402211,-5.215273,-1.988812,8.329376,3.321804,1.475334,-3.575183,3.586489,-6.151327,1.141836,-2.323630,-2.919183,-3.503140,-6.148570,3.244398,-3.884876,0.109361,9.928414,-7.219209,3.770740,3.952769,6.533907,-6.819840,2.640310,4.906363,8.199665,-6.386959,-7.930160,0.466472,7.833763,-7.774060,5.145701,-1.995805,-5.805802,-1.067229,-1.946318,-0.407501,6.543832,6.114320,4.439633,5.992304,-3.957594,1.439540,-6.155504,-7.679163,6.314041,-9.640942,-5.629897,0.721148,3.000862,6.089628,9.974267,-8.033964,-6.202819,-1.077370,-5.544623,4.292633,2.149105,5.881498,9.852582,3.758431,2.439065,0.644335,3.022260,-9.108761,-8.686425,-9.740341,3.890338,4.142338,-6.641636,-2.711648,9.792412,-8.229739,-2.145018,5.371392,1.861155,-3.998886,-1.807534,-7.490652,-0.917502,-5.440275,-1.562496,3.754566,5.083513,-2.485572,-4.607470,-7.241306,-2.327532,-2.116410,0.423640,-1.827531,-3.838323,0.470398,-4.743133,-4.177737,-7.070196,-6.122740,-5.014321,-8.632319,-9.195725,9.882208,4.464582,-1.462253,-8.606032,-3.287304,-5.808987,-0.419859,1.887806,7.231438,-8.916901,6.700773,9.836445,2.276748,2.437530,1.280157,-7.907189,-1.463511,4.231463,3.696058,9.088380,7.864100,-7.917730,-7.080087,7.499003,-0.584304,-3.098772,-3.420339,1.169881,8.858933,3.620965,-4.820140,9.183982,-8.892403,0.450230,9.723627,3.278464,5.436022,-2.313281,-5.289602,8.398184,5.304868,-7.426217,8.264806,-0.784151,-2.594333,-2.202625,9.818197,5.584445,-5.149984,-0.594777,0.091152,-6.712862,0.209763,-1.154606,-3.581278,-3.567723,0.657297,2.110744,-3.653055,2.330863,2.221609,9.683151,-3.045329,-5.901097,-5.168186,-6.805008,8.580366,-0.606623,2.268161,-2.790468,-4.111631,-0.311849,3.982154,7.153982,7.822075,-7.534085,-4.796039,1.210459,-6.822450,3.126766,-7.238388,-7.264278,-1.130658,4.722273,5.894319,2.018443,-3.043891,-7.658305,8.772785,-9.359423,-8.811664,6.320800,-3.672486,0.185669,8.970101,7.032078,-6.434890,1.981827,-6.236107,2.104607,-6.809046,-1.263183,-2.052510,-3.769516,-0.347411,-3.711945,6.071329,8.616363,-1.407449,-4.926535,6.384486,-3.138288,0.394379,-9.646188,-1.098808,1.808241,-1.179149,6.991863,-7.846812,-3.920025,-2.001775,-6.609671,-9.268097,-3.714150,-0.363870,-9.045296,-9.214323,-3.586966,-6.803281,-1.027964,-1.704416,7.683934,5.243497,5.890281,-6.340333,-2.197633,-0.527967,-3.508173,-8.057108,5.459015,1.725406,-6.364493,-3.634314,7.750945,3.448590,2.990365,-7.481570,-7.564812,-5.639749,6.428314,4.102840,8.483335,-6.253747,-4.096701,-4.216956,-0.713418,-1.734093,-7.071021,0.721202,0.834226,0.344474,-3.519740,-7.614373,8.740943,-9.533056,5.446972,-3.570300,6.641847,4.015942,6.907264,8.567879,2.005287,-1.678146,1.148453,-1.009909,-6.713342,9.020181,5.365039,4.733778,-0.922706,7.645180,8.092445,5.455873,2.225556,-7.723779,-7.692363,-9.013420,8.117025,5.182239,-5.652559,-6.939777,0.874729,1.681206,9.430708,8.747194,-5.276441,3.120342,-5.926793,-0.888158,6.184187,-4.321292,-7.133702,-7.793296,6.516769,-7.849425,6.066928,-3.495247,6.698264,3.228371,-3.359743,-5.080273,4.103533,-1.104090,-1.127193,1.858621,-7.562788,-0.269277,-1.580509,-5.681274,-0.324032,8.333891,9.641078,0.750097,9.035836,7.506033,6.237671,-8.644135,-6.519577,6.133570,7.271474,-9.113877,-1.895806,7.584272,7.312054,2.720043,-4.611085,2.369899,-9.656942,-1.704815,8.446014,-8.377618,-3.594350,-5.555264,9.116206,7.610968,-1.024286,-7.255609,-1.503312,-2.338030,-5.059257,-6.422225,-7.566946,-6.877679,-9.612057,1.117023,0.081131,-2.190479,-2.863016,-8.397458,-3.440676,7.144027,7.300557,-7.547171,2.391516,-4.246105,-2.616357,-6.155465,-7.238960,5.170903,-9.615106,3.092622,-5.985570,9.323908,-3.450063,0.619756,0.783467,6.785329,-9.697330,7.894000,-4.848325,2.948673,-5.532618,-8.910540,9.028456,4.723878,-6.141458,5.290050,-1.105569,5.309302,-6.139945,-4.526984,3.892062,-4.499247,1.981845,9.131900,3.447623,-4.013942,5.832942,1.084984,-9.114089,-3.793152,1.459018,-6.750053,-8.901691,-1.686820,-2.135704,-8.519224,-8.531278,9.306843,-4.702865,-9.841182,-8.533162,9.964736,8.284473,-8.522671,8.712552,-1.251857,-0.927382,0.676372,-7.570804,7.754434,-6.248772,5.772676,-2.153989,-0.138355,0.536594,5.134005,8.558348,4.959944,4.586472,-0.874373,-2.157897,1.942958,7.419398,3.696634,-7.429601,-8.698593,1.171570,7.251847,1.753010,-5.331153,-7.371697,-4.058749,6.210833,-5.706250,5.137032,0.724934,2.040759,-3.458626,0.769030,9.973995,-5.334704,-0.781448,9.093402,1.793581,9.006310,1.905305,3.556775,8.413229,-5.190680,8.271737,9.206398,3.879799,8.017271,3.489281,-1.330356,-9.363883,2.122250,-1.437077,0.994056,2.202732,4.248298,-9.660667,-0.151502,2.795990,-3.217911,-8.809667,-0.936243,-2.461011,5.294181,-3.974429,-3.165902,-5.641564,-8.481529,-8.262736,-4.839692,-4.534306,8.498530,9.379403,9.927955,-9.794236,0.087807,7.631425,-3.523229,-9.629342,9.541392,0.985344,1.248906,8.345021,-6.756699,9.104186,5.506876,7.762225,0.080804,-8.189026,4.282164,-7.158653,6.585233,-0.259943,8.076841,6.122456,-9.032537,9.410402,-5.252393,5.097998,-5.254946,-4.826906,-9.594398,-2.328627,-9.595946,-0.175948,7.131970,-2.943025,-6.737534,3.070050,7.754803,3.903431,1.932741,-3.502215,3.081231,9.830009,-6.339123,-8.151617,4.471121,-0.410928,8.501382,6.058972,5.177039,-2.620954,6.069217,-5.053994,-0.907698,-6.909228,-7.387656,-3.113884,-7.479988,2.525293,3.983675,3.435484,4.671310,-9.835183,2.112468,1.932530,6.801190,-0.048375,0.320449,-0.759199,-3.026977,-8.024184,9.840235,7.208204,-9.405680,-4.072390,-0.235547,-8.952470,-0.815578,-2.979346,-0.010569,-3.960718,4.946628,-3.931837,5.147117,2.357957,5.687266,-6.444504,-7.691306,-1.103868,7.682740,-3.562018,7.679141,9.556453,4.165092,3.939191,0.811455,5.122847,-4.394129,-3.416550,-7.528289,-8.159415,5.420907,-6.469761,-4.321388,-7.504443,-6.119493,9.018898,4.096767,3.797866,-3.144836,-0.153946,-6.104125,0.804270,-6.950632,0.459599,6.254466,-1.972229,-5.875405,-7.236601,-9.350825,-7.242816,4.760511,-4.127063,-8.941492,1.889750,-4.926318,3.545095,0.878723,8.977182,-2.110837,7.626159,-7.613288,-7.281087,-1.549287,4.158742,7.912175,4.316494,3.969082,7.190238,0.650723,9.485398,-9.988573,7.800672,0.878011,7.903453,1.593826,7.645321,5.740495,-1.025936,-3.532443,-7.518845,-0.978509,-2.491230,3.330231,2.736621,-9.280258,-6.492338,6.847966,-1.998587,-0.063853,-7.525195,-8.593007,-1.426469,1.081357,-5.528009,-9.866522,1.561145,-2.610440,1.685705,3.397155,9.638963,1.605039,9.893962,4.169670,2.479964,8.423517,7.228882,2.703031,5.727388,-0.057327,-1.638297,-3.393792,3.606732,8.194256,-9.164115,-0.672186,-2.487516,1.429604,-7.756256,4.997388,6.704638,-2.525856,0.084137,-8.938719,-7.126840,-4.166585,0.433572,4.998248,4.921339,2.332167,7.726158,9.430462,9.150756,3.482889,6.109338,0.625184,-3.359705,9.390370,4.474178,-9.951834,1.535576,-9.117138,-2.817823,4.783420,-2.764232,4.281607,-5.604857,0.233193,-1.854272,-9.748755,-4.027226,-3.018581,0.438113,-7.191411,2.837888,-4.730717,0.165160,5.247270,-2.490016,0.363618,-0.417266,5.102693,-8.271812,-8.953248,8.783910,-7.966861,2.353928,-9.629388,1.185458,8.592183,-1.115328,3.760777,3.864997,3.971283,3.941288,-0.634061,8.970700,8.054888,3.697048,-6.394689,-9.355804,-9.102954,6.202652,-1.962750,3.529397,1.342860,4.426483,5.219180,-7.413580,1.827138,2.267064,7.098471,7.289894,-4.486928,-1.747044,6.971387,-3.018792,-7.095004,7.241442,-7.196411,6.623869,-0.089733,-3.416337,4.913730,-3.087634,-8.912361,-9.785835,-7.060924,-0.589624,-6.891932,-9.791920,9.009122,9.198412,-9.949031,-9.951510,0.339988,7.430317,8.345741,2.604526,-9.934255,4.829007,-1.909785,-0.060605,9.935129,4.603963,8.809591,9.765477,-2.412044,2.074488,9.461819,1.801259,5.148678,-4.884427,-7.827097,4.459327,4.242340,-8.952112,-1.940407,6.473492,4.467656,-3.783329,-8.223610,-8.261807,-7.030072,0.732439,5.730884,3.462100,7.204147,1.454116,3.868089,-0.117460,9.756831,-0.392069,8.863758,8.747210,5.302342,-6.234134,-3.987919,-0.260532,-3.863568,-4.013761,5.536532,-5.674583,-8.668186,-3.632887,-6.534689,-1.040568,3.436927,9.429524,-3.698742,-0.350081,-9.803661,5.701660,9.152464,-1.713497,-5.852469,1.129339,-2.778573,-1.703184,-2.852731,-1.860394,-9.609791,-2.631365,-5.875076,-9.478876,9.143439,-3.578630,5.187631,-2.378467,9.322860,-4.362387,7.331597,5.000221,2.574093,-3.814006,3.751475,-4.639306,-5.865616,1.886595,9.944610,1.461342,-2.836669,-6.086369,-2.110498,-3.403431,8.061587,0.586743,1.391905,-5.742366,-8.673441,-0.316895,-3.342918,3.128914,6.294101,7.907554,7.496659,7.004180,-5.670760,2.729597,-5.992441,-7.844704,5.862818,1.789804,8.647814,2.244295,-5.542251,1.403088,1.746682,8.957323,9.004512,0.890113,-7.315179,1.030341,-3.881388,6.021083,-8.586655,5.760912,9.819033,-8.692943,-4.041838,-4.113539,2.946520,8.193555,1.885110,-5.058046,5.017668,1.737862,-9.733887,-3.551477,7.036192,-7.802283,-8.089599,4.183967,-9.804743,-9.094883,-2.262003,4.322544,-9.327159,-4.168033,-5.742783,-2.611902,-5.270530,6.708046,-0.333152,8.834287,6.621955,-2.131963,0.948480,5.106928,8.658237,8.991885,-5.486479,-3.105761,8.369799,-8.060446,5.199143,-8.517144,-3.021046,-7.454415,8.840785,4.178046,9.387709,-1.091792,5.172942,-0.265691,0.191921,-2.379852,0.961134,-5.729829,4.738393,-3.037097,-0.548156,-7.368188,-5.804724,3.031235,6.774692,-5.663512,-7.991233,7.559976,-8.406847,7.707889,0.068236,3.471737,-2.493509,-3.692521,0.968851,-6.022146,6.957091,-8.797891,9.985021,7.667330,-2.290718,-9.421171,1.929864,3.821693,3.864148,5.116023,-0.239736,3.718771,8.385920,8.927351,-1.348522,-3.104821,-6.232021,5.708860,-5.352400,-1.299699,-6.076230,-5.824702,5.638855,2.326773,-0.104145,3.286297,-3.082811,4.096796,-9.768588,-5.000606,-2.194559,-1.332084,5.096920,-4.440291,3.601677,0.191106,0.191760,4.338689,5.290146,-9.424869,4.136089,-1.723523,-0.753290,4.486881,-2.242114,-7.798888,-1.993585,-3.951536,-8.810279,-8.787609,6.310271,-9.175293,9.757372,8.724118,-8.140946,-5.481256,-7.628413,0.838190,-0.231147,3.659645,-9.958833,5.875961,2.324100,7.179347,-9.225397,3.885191,2.376308,2.986096,0.242997,9.785051,-8.985486,0.164548,-2.181662,2.856738,-7.645371,-1.227844,-4.666783,2.698468,1.521889,-8.976343,-9.823788,8.668279,5.869533,-3.388286,-2.222361,-6.150966,9.103690,1.777803,2.735295,-3.723752,0.346591,-5.715469,-5.836374,5.784044,-9.434817,-3.921079,3.724604,-9.950600,-1.965589,5.629352,-9.287340,1.292773,-8.198118,-0.542813,1.220468,8.036169,9.446824,2.345370,0.337184,5.811941,-6.011030,9.884092,0.058204,-4.428639,-0.756414,-9.406736,2.430913,0.914915,-1.889088,7.480827,-4.716922,4.179109,2.118493,-6.278796,1.254111,-1.128450,9.396515,-3.770011,-5.803106,-8.767215,-5.747572,6.785150,-6.264634,7.744624,-9.834745,-0.050809,7.071088,-1.337112,-0.281096,-9.096562,-3.866117,3.085690,-1.773014,1.500621,-5.533742,7.909344,-0.188974,1.121143,8.834259,-4.429921,9.587910,2.056771,-6.116685,2.395689,-2.608290,-1.380591,1.673566,-0.371836,2.854672,-2.515932,9.021709,1.985182,-5.335073,-8.892480,8.757967,-6.031381,8.009415,-4.862132,6.102790,4.264135,0.663121,6.773137,1.685381,-0.438306,6.019753,8.546780,-2.904250,-3.148848,5.070148,2.288820,4.496852,2.625718,9.639768,-2.502637,-6.133872,-2.977242,-0.634492,-9.247805,1.456446,-2.189946,2.592241,0.753099,-3.308635,-0.257553,-9.545849,7.142804,7.948336,-7.432871,-1.612470,-0.120574,-8.264036,-3.044648,-2.829527,1.682161,4.220046,-2.039772,0.200397,-8.965493,8.936214,2.886331,-3.958723,-3.253097,4.508488,-1.626166,0.594310,-5.204383,7.275943,-7.268832,9.088459,3.008608,-3.287428,1.269530,0.793632,4.001584,4.654213,-8.090331,7.403808,8.475218,-2.633769,-1.236280,-1.964610,9.846906,9.267571,7.336685,8.320819,3.692018,-9.329338,6.962631,9.137539,6.178173,9.153109,-0.189847,-9.139179,-4.022176,-8.910413,-7.383983,6.566606,-1.245747,-0.533331,-3.328738,4.423010,2.406105,-4.217153,1.520395,8.471331,-8.019286,9.627179,-3.321140,7.082352,-5.797830,4.144544,-5.906008,-9.886534,-7.438958,1.102910,4.327416,-0.824968,-2.584413,7.836176,-0.042738,-6.864697,-7.774602,-6.246476,2.104969,1.158836,7.649141,8.408654,4.768830,-3.405324,-5.229631,-6.271653,-2.522367,-0.368905,-6.711819,8.566535,-9.280269,5.591073,0.206898,8.085342,5.691267,-9.826294,-6.318072,3.307546,2.443450,9.786212,7.731844,2.985009,-1.106018,-2.456561,-9.766754,-2.391568,-9.061233,9.382996,8.153865,-7.886992,9.373272,9.030842,-9.812452,2.005533,-5.126443,5.830477,2.395260,-4.222606,-0.884008,-0.936566,-0.717275,-0.670031,-2.998990,-7.756389,-5.174138,5.696278,0.973943,6.052869,5.451635,4.782935,4.107396,9.267192,-7.021198,5.111098,-2.278104,7.867102,-4.866547,1.815909,6.629302,-9.677633,0.642144,3.143360,-8.044692,-7.412139,3.452903,2.983737,4.769548,5.587920,-6.233530,-7.428948,-2.285340,7.337706,2.884200,-6.054328,-7.989937,8.131910,-8.839683,-3.108770,4.606533,-6.491562,3.939248,-6.900347,-9.893840,-4.032974,-4.487161,4.983486,-8.367669,2.124382,-5.328136,-2.906164,-5.771207,-5.869351,-3.004051,4.643427,9.597762,-3.894270,6.023102,0.275392,1.364808,2.901189,1.601263,-7.788024,4.325268,6.547765,9.140170,7.295996,7.901797,-5.518858,-4.979613,-9.414192,8.744145,-0.269936,0.288916,-2.105694,0.123984,-3.033223,9.869645,-4.044017,-4.365605,-2.876704,1.464066,0.378255,5.530474,-6.187069,0.586349,7.981959,-8.367883,1.891611,-2.712824,-1.109702,1.102011,-0.156703,9.650974,-0.290870,-6.320523,-9.175168,-4.937680,0.750112,7.422318,6.257242,-8.687354,-8.171754,9.904123,-7.571954,3.590640,4.199995,0.222350,3.402715,5.834933,-2.169359,-7.122171,2.029926,-4.733102,-0.611674,1.954137,-3.709796,9.705953,-1.973760,-4.225154,-8.657519,6.397840,2.312042,8.456395,8.043897,-7.826986,-2.094798,-7.258396,5.902577,-3.071305,4.769409,4.925413,9.457224,-4.984964,6.100368,-5.688789,-2.524444,-3.959949,-7.201105,3.295323,-1.340388,5.901005,-9.432229,-5.046961,-6.634839,-4.151507,-9.048020,4.444068,-7.287581,0.822286,4.587159,3.335849,5.853013,1.351701,3.787070,-1.614762,-7.442406,-2.228365,0.041768,-1.183634,-7.283707,0.886482,-6.905040,-9.237028,-6.418815,5.129777,-4.363599,-2.919669,-3.290469,5.670171,-8.115459,0.352491,-4.155283,8.088949,-8.468355,0.052102,-5.033650,-2.808755,-4.232264,9.398317,-1.979079,-0.421103,4.172792,0.356298,-5.916239,4.016014,-1.618431,9.212030,3.251201,-3.753533,-3.943762,-9.971615,4.840640,1.513447,4.536005,-0.257740,6.496913,-0.711708,4.068396,-2.406702,3.979553,-0.434010,-8.247669,-1.507282,0.069607,-5.160303,-1.204342,-0.846449,8.484032,3.885603,3.389097,-8.311164,-4.151671,2.057215,-2.667853,5.375522,-7.579309,6.677833,8.334133,-9.834917,5.346855,-6.005465,4.319334,8.761706,1.609741,6.506763,-1.749434,9.529780,0.531806,6.205682,7.420410,6.031644,-8.051164,-4.849798,-2.868468,-5.226555,2.068026,1.593661,-3.173406,8.494690,-3.925249,-9.410540,6.295575,3.724280,-1.026503,-9.869945,-8.286775,3.362698,9.056479,-7.841060,-1.668214,7.262247,-3.562241,-5.117389,6.204112,-3.187763,5.496075,-2.535858,-5.663128,3.837926,-6.218069,-9.302378,8.528054,-1.950318,-3.904781,-7.084809,5.858727,-4.128035,-3.596731,-3.634936,5.575781,6.605071,0.736019,2.796931,-1.186353,0.584925,-6.245104,1.328183,8.764276,-0.352671,-8.633064,3.018236,-1.908746,2.114093,-8.366532,-2.784327,-4.535402,-5.422245,-8.506027,-4.272536,-6.999248,7.138649,3.401616,-0.948505,-5.636227,-4.411438,7.729917,2.699052,-7.515385,9.655558,-7.450647,-4.221657,7.844573,1.390820,-7.288036,-1.298077,4.665023,6.956116,-8.851243,0.474036,9.792149,-5.815375,1.231933,-8.711177,-3.382820,4.620315,-2.859228,-5.838749,-1.340368,4.932328,0.913259,-2.587491,8.254497,0.271602,3.895123,3.129097,8.282543,-2.889515,0.739519,-0.386458,-2.640689,-3.467311,1.947168,-9.733935,-1.966227,-9.436491,-0.921386,-8.545756,-3.299789,1.932263,1.629622,-4.165696,-8.419689,7.351173,-6.924521,-7.913821,3.796409,6.603312,7.252631,9.103386,1.256819,3.686981,-2.429145,9.677589,4.171954,-7.592163,8.394207,9.437536,6.362184,8.209585,-1.180850,-8.250547,0.372492,-8.940447,-5.334248,-7.924699,2.783702,4.421989,-3.635068,2.735801,7.552039,-6.610807,-5.874866,2.741028,-7.695074,9.669715,-8.321862,0.263804,1.288073,-9.212719,3.496300,3.309790,-7.763560,-4.709483,-3.086891,-7.865274,2.502371,-1.574559,0.209635,-8.866954,2.465674,-8.013196,6.645948,7.247766,-2.984629,-0.362293,-2.859099,-1.816279,-7.661754,6.356220,-6.909466,4.819388,-8.189463,-6.650220,9.115635,-5.845548,-9.550338,-1.785618,-2.938488,8.017918,0.475988,-3.752770,9.051888,-4.886940,7.256377,-1.332877,9.366963,0.988003,-0.180613,2.258200,-9.893459,-1.716323,4.110782,0.085600,-3.809709,-5.679065,-7.736355,1.971100,5.593361,-9.159820,-1.198535,9.090490,-9.041107,8.034999,-9.177884,-2.465732,-4.480766,3.227325,7.178256,1.792466,9.158670,8.427305,-4.907824,-2.178197,-8.738883,-7.583466,7.667830,-5.201785,7.386653,-1.932481,7.299240,-1.302006,3.780390,5.719564,-0.668638,-7.362571,-8.708677,-3.781943,6.513287,-4.525739,0.339231,-1.730401,-5.073828,-8.398613,-9.056964,0.749792,5.694487,-6.007534,-6.030024,0.500541,-1.555366,-6.493361,2.893666,-1.567668,6.399567,-3.107208,7.986244,-8.032014,8.725978,4.965695,6.779519,6.173037,6.379290,-7.392349,8.809988,-8.829883,6.150109,-3.563802,1.878183,1.415121,-9.310554,5.562340,-2.557597,2.482017,-9.835946,-8.320908,-7.191214,-3.111296,5.696230,9.899927,-2.362353,-4.868165,-9.521909,-2.190887,6.166808,2.562728,2.681238,-8.137274,-7.769281,-4.212724,-0.014771,-8.661189,-1.679642,-6.575379,2.576641,3.343029,-9.503811,-3.045259,-3.348968,-2.003152,-4.378463,7.584525,1.555769,-3.592221,-4.440799,-9.455319,4.565278,6.451074,-7.076321,4.557723,8.230482,6.048998,-5.143805,-0.074420,9.272881,0.877123,-9.136140,3.231868,-4.243959,1.697909,-8.450989,3.852808,2.976885,-5.074248,0.607370,3.725450,-5.808046,-0.340261,-6.720741,2.958007,7.809807,-4.536938,-5.452128,3.191198,7.639018,9.066107,5.182821,6.331761,6.382810,-3.593818,0.665983,1.124247,-8.916648,-2.210637,-3.810243,-5.708163,-6.994827,-6.066933,4.309788,0.102477,-4.410341,-2.292126,-9.082091,-6.628986,2.461787,-9.158007,3.235374,-5.282573,9.502911,-9.965168,7.605595,6.251829,8.902967,-3.484228,-4.880655,3.212066,-1.723668,-2.786669,9.394213,-7.156004,8.435293,5.503812,-7.824746,-6.332652,3.785724,4.288916,-5.038493,-0.393581,-3.364427,-0.554766,5.590296,-3.659364,7.986602,-0.456967,5.132954,-9.740020,5.032624,6.873511,1.685601,0.237689,4.381137,6.528187,8.543380,3.895246,-8.461842,-7.778461,-7.718890,8.878241,5.822692,-4.002634,-4.359287,1.777602,5.423866,5.985334,6.880614,4.628421,-0.018041,-5.972170,-2.812557,2.602080,0.510543,-6.408280,-4.305039,5.599724,5.306951,9.914670,-3.050960,2.811065,6.458339,5.711368,1.216481,2.789488,7.687186,-9.282311,-5.571565,8.027987,5.119634,7.811195,4.261430,-5.993541,-2.539114,2.610046,-8.757588,-6.110588,2.440532,-4.372957,-1.372826,-9.513760,1.194215,-8.561216,5.091379,2.387770,3.410177,-7.917474,-8.362269,-5.843457,-3.055176,8.292478,-1.339411,9.128825,7.651992,7.268333,8.617631,-3.665590,-5.033823,-0.511434,-5.039900,-7.273002,-3.727455,-2.177057,0.714277,-2.845842,-1.423587,8.135137,2.313326,1.326765,-4.835149,9.156502,-1.182090,7.605949,-6.266427,-5.784993,3.081207,-5.704075,-1.391276,-2.848059,1.553262,8.631486,6.017211,1.907452,7.961713,8.809294,3.740472,-4.906978,-6.352145,-3.566815,7.535398,4.766904,7.758641,7.810874,4.165288,-9.446777,-6.667932,-2.255670,-8.252898,-2.027483,-6.816671,6.977366,-8.613142,-0.057664,9.009594,6.776466,8.488049,-9.114085,4.101262,-6.449528,8.552339,9.303193,4.440713,2.489266,8.807753,0.855066,-6.879304,4.526211,-8.296629,5.120221,-6.493820,2.691140,-9.298103,6.768675,5.411008,-2.831105,-3.208745,-6.270298,2.759439,4.976496,3.203571,9.491835,7.937567,2.579614,-5.845710,-4.482910,2.247967,-5.158664,0.536820,0.295391,-3.839835,6.602504,-5.873769,-3.002779,-1.517517,-4.685043,-7.699362,5.175123,4.991835,-4.351208,9.934083,-7.214456,-6.551028,-3.151021,-7.352410,-0.729233,5.248514,9.377385,8.477967,-5.721773,9.287337,0.745127,-1.410689,-5.360532,7.157339,2.594708,3.864266,-6.651605,-8.246142,4.051133,-3.207387,6.649412,4.941966,7.616543,-8.098853,-6.779454,2.340413,-7.967010,-8.579451,9.577803,6.049594,7.990830,-5.786452,-8.769283,-9.064191,-2.001026,6.971455,1.766937,-0.512019,3.966780,-9.791933,9.200317,3.190681,4.629324,-4.083537,-7.592559,8.138287,-7.607665,4.043202,-6.719308,-3.451865,-9.942459,3.119890,-4.606581,3.628696,-6.123590,-7.518784,2.045030,1.203307,6.540257,8.673588,1.562745,8.892959,-5.728203,-1.296395,0.720852,4.219495,-7.911821,7.732013,3.370483,-6.425493,-0.886056,7.047276,6.069796,-6.726170,-5.349972,-4.614035,-0.836739,2.514861,-0.698716,8.251688,-7.148627,0.230027,2.846157,1.659062,0.134812,7.111787,-0.898684,8.804367,1.838633,3.540977,0.464043,-6.861312,2.464049,7.166483,9.059949,8.299291,0.168636,4.587040,2.807752,4.169461,-7.129268,-3.325563,6.468484,-0.987043,3.432411,-9.193398,7.040139,-8.845055,-5.824557,-3.682325,4.246914,3.373727,6.012718,7.386942,-7.454492,9.983472,3.606084,2.726055,-0.962493,-1.640111,9.384261,-4.454963,7.825644,-6.429865,-9.937991,8.530815,-1.562760,6.935043,4.477377,1.755658,3.462530,0.003301,-5.061229,-7.253035,-4.899604,1.640450,2.311047,2.923962,-6.373959,8.979135,-1.748145,-2.077491,5.163434,-5.958085,0.551877,-6.306369,2.411401,2.589379,1.648773,-6.384563,-8.607560,9.089058,1.132712,-2.672116,-4.017723,8.558036,2.746731,-4.903116,4.014016,8.507261,-8.933205,9.699236,4.187664,3.827992,-5.278751,2.930968,5.927422,6.940145,6.567633,7.491432,0.392467,-7.178649,-7.122623,6.552997,-8.280934,-8.935502,2.455379,-6.340146,6.475991,6.684315,0.840379,-7.111578,9.782002,3.048144,-7.910971,1.591243,0.543374,-2.252617,-7.180038,6.159292,-0.454748,2.837465,-9.735017,1.854583,5.753960,1.085267,6.359508], dtype = "float32")#candidate|6817|(2880,)|const|float32
var_6818 = relay.var("var_6818", dtype = "float32", shape = (715,))#candidate|6818|(715,)|var|float32
const_6819 = relay.const([-3,-9,5,-10,-9,-10,2,-3,-1,-5,10,-1,8,6,-8,-2,-7,-5,-2,-3,5,10,-3,2,8,2,-1,-8,5,-10,8,-1,-5,-9,-1,-6,4,-4,6,10,-3,-3,-7,5,4,4,9,9,2,-1,-10,1,-2,2,-1,4,-9,2,8,10,3,6,-7,-8,-2,-6,-5,-8,-2,-4,5,10,-5,-9,-8,-4,1,4,4,-1,-10], dtype = "int32")#candidate|6819|(81,)|const|int32
const_6820 = relay.const([6.991384,-6.403857,2.703243,-7.362164,4.266986,4.036189,3.769166,9.890857,8.037549,1.095761,2.503099,1.101730,-3.423115,-9.271270,-4.263358,6.371486,2.201807,-2.123019,-0.651847,1.422007,-7.175050,1.247013,-4.701945,-9.302341,-9.283781,-3.470229,9.173915,9.791954,4.286171,3.645427,6.616047,2.326624,-3.104640,8.630823,7.334813,4.753467,8.502762,8.918300,7.939054,-1.931594,5.134694,-2.875391,-0.536079,-0.525612,1.442961,-4.680451,-2.925474,1.454749,4.802511,9.921804,-9.776800,-3.250743,-7.497125,5.651913,4.361617,4.002723,-3.624255,7.972623,8.266533,-2.062605,2.798807,9.945356,-1.098435,6.761378,-8.139461,-3.743484,5.178115,-8.062138,0.512991,7.808726,8.181563,5.544927,-8.649405,1.977788,4.915148,-4.629134,-7.568498,-2.914381,5.426610,-8.289820,4.142628,-8.425929,1.743880,-4.031692,-9.512909,-7.350922,-4.451390,4.173957,-8.749398,-6.466404,-6.593336,4.081939,4.639201,8.235161,5.636845,-9.291210,6.688445,4.989364,6.517154,3.954219,6.972407,-0.517455,0.841559,0.113912,-9.960098,1.290951,-6.221340,5.975961,7.911532,-3.443134,-4.882282,4.627559,6.424178,-7.069516,-7.185062,-5.996770,9.153125,3.506458,-4.280462,3.634193,-7.806977,5.605878,7.399920,-6.721255,-8.483206,2.962563,2.312375,-4.689752,0.794520,-1.262799,-6.164891,6.860555,6.369919,-7.113275,2.968398,-5.266135,1.253086,4.786155,-4.571565,4.774780,-7.315673,4.470840,8.728612,3.144247,-8.949372,-2.433553,-9.546210,3.116952,-9.504179,-5.264545,9.307527,8.431620,-8.120876,2.736520,8.570444,8.344578,6.143107,7.810784,-2.540728,5.648741,-3.860102,1.434174,9.801336,-8.364573,2.495552,-7.294245,4.107356,4.364753,-1.004341,-1.089282,8.269937,5.142882,-0.913352,5.536045,7.133946,-5.484081,-9.009268,6.076185,-7.021699,2.245712,-2.322851,-9.412117,8.560365,0.503727,-7.601942,2.117687,-7.006421,-7.464277,-0.165838,8.851373,-4.936029,0.801309,-2.026318,-3.962811,7.960979,-2.786169,8.973759,9.721745,-7.840569,-4.778304,0.180788,-9.974963,2.100085,-8.059995,-6.098702,2.836503,6.959857,2.370689,0.278310,-3.191436,6.314895,-5.872387,8.735143,3.475105,1.986974,-4.512911,-9.384109,-6.076560,3.215601,8.667914,-7.587222,-9.938787,2.424383,5.356452,-1.653862,0.671359,-1.857210,-7.921213,-2.430426,7.515985,-7.847017,-8.334299,-5.817077,-3.427158,6.078657,3.339828,-3.951339,-0.888740,2.768754,8.549347,9.015168,2.797169,-5.763147,-2.884427,-0.541065,-2.787490,2.248486,8.937416,4.733175,-1.966356,7.590976,0.315118,6.543839,2.839840,1.864846,-0.206703,-5.211091,9.176697,-0.425932,8.892005,7.968908,3.084945,-5.994075,6.101914,-2.001867,-2.345286,0.228809,2.682615,9.312933,-0.193799,7.248478,-9.837263,-2.036998,0.563354,8.193194,4.256964,-5.512344,4.295602,2.694280,9.463849,-2.439174,4.067169,0.625252,7.051340,-7.078524,7.237860,-1.153037,0.612920,7.742742,5.236369,6.719504,-1.298281,8.611612,-0.760091,-3.770587,-9.538805,1.119627,-0.661653,1.337110,-5.649772,0.036354,9.083697,3.478364,0.337943,7.683276,9.905763,5.817424,2.481598,3.173435,-3.300715,7.802920,4.120929,-1.684632,1.460543,8.145918,4.101800,2.925569,-2.054543,9.173683,-9.273296,0.324616,8.962876,9.905331,3.714176,-1.539237,-0.816584,0.451314,3.290305,2.303129,5.239171,-4.098633,-7.630987,1.918775,-6.488911,-7.213063,-8.280887,-0.800264,-9.873513,-4.117743,-4.030847,6.516005,-0.528226,-7.424203,7.013880,-0.135472,-6.341678,5.659630,-9.285217,-3.336312,-0.715667,1.747918,-5.161742,-8.113172,7.137340,-0.103534,-0.937673,-6.046343,-1.055590,-3.297745,1.866494,-1.133385,3.103846,-3.799745,0.825655,-7.006654,7.178320,-3.908706,4.872677,-8.548917,0.343225,-9.885731,2.167149,-4.118816,-6.527684,0.252333,9.351299,4.203369,4.668841,-5.217564,-0.758540,-4.836289,6.347307,0.708431,-5.061132,1.471449,0.537332,6.858997,1.254224,-6.932862,-8.159339,7.393128,-9.786242,-5.274018,-3.143116,-1.712586,5.822754,-9.194442,1.942213,9.034471,0.433269,7.433040,-4.016362,6.008746,-7.210009,6.702306,3.445760,-5.827555,-8.626758,-9.201188,5.439042,1.718985,0.930062,0.910962,-5.262846,-8.855163,-5.764129,-1.641967,-7.573786,-8.642634,4.598017,6.604534,-9.951131,-8.670233,-4.560936,4.670515,3.501881,-7.018952,-1.836360,5.203289,-8.830417,-4.422997,1.225964,-4.406287,5.394622,-2.866304,-0.941437,5.561910,5.447945,9.233930,-5.547380,-8.774533,-8.073045,4.383919,-6.457202,2.626595,-3.849154,9.502897,-4.736397,-8.295227,-1.772146,-4.973237,-9.657505,4.067389,-3.262509,-7.716910,2.841027,-0.120370,0.770984,-1.674433,3.374218,5.038767,-4.875693,9.280944,-0.823019,-2.640662,3.225122,6.436573,-4.108372,0.189763,-9.342431,-7.574181,-5.924817,1.824482,-4.938056,-9.273062,0.774134,3.697513,-1.946619,-9.704594,-9.813293,-9.362782,3.330152,-5.191433,-0.919379,-7.865304,1.524605,0.976648,-9.325360,4.405786,-7.869294,-0.168889,1.767325,4.759077,-2.107352,-1.152685,-0.438000,-0.348210,7.718531,-9.842900,5.341026,-1.030552,9.624875,-1.038622,-0.213838,-8.434247,4.178882,-9.338145,-0.332012,9.710782,2.245876,-3.319840,-9.920801,0.874551,5.924641,9.683299,8.620703,6.546655,8.514017,-6.600132,6.662651,8.305817,9.071807,-9.989666,5.828748,-2.961793,9.658169,1.353359,-0.071431,5.433909,-5.994004,-3.954164,-5.418898,-4.769841,7.897079,8.752068,7.856545,-5.451108,-2.491430,-1.011186,-1.058113,-7.496311,6.207015,4.608684,3.421800,9.020732,5.007737,5.382896,0.496938,-2.067306,-2.755378,-1.016449,-6.625662,-4.194233,9.176139,-0.624767,5.504603,0.196787,-9.111372,-6.518565,-9.252737,2.180903,9.525326,0.778541,-2.234145,-8.044684,-4.896454,-6.891097,1.465191,4.857632,-2.043710,-7.149018,4.243918,-4.841198,-9.173625,6.391033,3.691658,-2.030553,2.582815,8.871117,9.226879,-2.671170,-9.895449,-2.048680,0.225804,-6.780397,-2.804443,5.287476,7.081060,2.939439,3.339692,-6.897839,-1.896942,6.464173,-6.716170,4.212355,-6.154179,7.378077,0.080879,-4.675388,-0.179935,-9.798745,4.507021,-0.924619,0.237259,-0.472232,-6.006348,4.150239,-4.048216,-1.569658,-1.923546,-8.346533,3.739217,1.307105,-0.053144,2.142886,7.400073,9.162297,9.941302,9.350621,2.443282,5.271144,-8.502337,-5.554259,-9.942255,3.110178,1.703112,6.541390,-6.663567,4.507393,7.497570], dtype = "float32")#candidate|6820|(630,)|const|float32
call_6816 = relay.TupleGetItem(func_5833_call(relay.reshape(const_6817.astype('float32'), [2, 1440]), relay.reshape(var_6818.astype('float32'), [715,]), relay.reshape(const_6819.astype('int32'), [81,]), relay.reshape(const_6820.astype('float32'), [630,]), ), 3)
call_6821 = relay.TupleGetItem(func_5838_call(relay.reshape(const_6817.astype('float32'), [2, 1440]), relay.reshape(var_6818.astype('float32'), [715,]), relay.reshape(const_6819.astype('int32'), [81,]), relay.reshape(const_6820.astype('float32'), [630,]), ), 3)
uop_6830 = relay.log10(const_6817.astype('float32')) # shape=(2880,)
uop_6840 = relay.tan(uop_6830.astype('float32')) # shape=(2880,)
uop_6853 = relay.acos(uop_6830.astype('float64')) # shape=(2880,)
func_5492_call = mod.get_global_var('func_5492')
func_5493_call = mutated_mod.get_global_var('func_5493')
call_6860 = relay.TupleGetItem(func_5492_call(), 1)
call_6861 = relay.TupleGetItem(func_5493_call(), 1)
func_5991_call = mod.get_global_var('func_5991')
func_5993_call = mutated_mod.get_global_var('func_5993')
call_6871 = func_5991_call()
call_6872 = func_5991_call()
var_6886 = relay.var("var_6886", dtype = "float32", shape = (2880,))#candidate|6886|(2880,)|var|float32
bop_6887 = relay.not_equal(uop_6840.astype('bool'), relay.reshape(var_6886.astype('bool'), relay.shape_of(uop_6840))) # shape=(2880,)
func_6656_call = mod.get_global_var('func_6656')
func_6657_call = mutated_mod.get_global_var('func_6657')
call_6893 = relay.TupleGetItem(func_6656_call(), 0)
call_6894 = relay.TupleGetItem(func_6657_call(), 0)
uop_6903 = relay.exp(uop_6830.astype('float64')) # shape=(2880,)
output = relay.Tuple([call_6810,call_6816,var_6818,const_6819,const_6820,uop_6853,call_6860,call_6871,bop_6887,call_6893,uop_6903,])
output2 = relay.Tuple([call_6811,call_6821,var_6818,const_6819,const_6820,uop_6853,call_6861,call_6872,bop_6887,call_6894,uop_6903,])
func_6906 = relay.Function([var_6818,var_6886,], output)
mod['func_6906'] = func_6906
mod = relay.transform.InferType()(mod)
mutated_mod['func_6906'] = func_6906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6906_call = mutated_mod.get_global_var('func_6906')
var_6908 = relay.var("var_6908", dtype = "float32", shape = (715,))#candidate|6908|(715,)|var|float32
var_6909 = relay.var("var_6909", dtype = "float32", shape = (2880,))#candidate|6909|(2880,)|var|float32
call_6907 = func_6906_call(var_6908,var_6909,)
output = call_6907
func_6910 = relay.Function([var_6908,var_6909,], output)
mutated_mod['func_6910'] = func_6910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5875_call = mod.get_global_var('func_5875')
func_5876_call = mutated_mod.get_global_var('func_5876')
call_6934 = func_5875_call()
call_6935 = func_5875_call()
output = relay.Tuple([call_6934,])
output2 = relay.Tuple([call_6935,])
func_6936 = relay.Function([], output)
mod['func_6936'] = func_6936
mod = relay.transform.InferType()(mod)
output = func_6936()
func_6937 = relay.Function([], output)
mutated_mod['func_6937'] = func_6937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_6967 = relay.TupleGetItem(func_5004_call(), 1)
call_6968 = relay.TupleGetItem(func_5005_call(), 1)
output = relay.Tuple([call_6967,])
output2 = relay.Tuple([call_6968,])
func_6969 = relay.Function([], output)
mod['func_6969'] = func_6969
mod = relay.transform.InferType()(mod)
output = func_6969()
func_6970 = relay.Function([], output)
mutated_mod['func_6970'] = func_6970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6969_call = mod.get_global_var('func_6969')
func_6970_call = mutated_mod.get_global_var('func_6970')
call_6976 = relay.TupleGetItem(func_6969_call(), 0)
call_6977 = relay.TupleGetItem(func_6970_call(), 0)
func_3889_call = mod.get_global_var('func_3889')
func_3896_call = mutated_mod.get_global_var('func_3896')
const_6988 = relay.const([-8,5,-7,-4,9,-1,-6,-1,5,-8,7,5,4,4,-10,9,3,-7,7,7,1,-6,1,9,-7,6,-1,-1,-8,4,-4,-6,-8,-9,4,10,-8,-6,4,-4,-10,-6,5,7,-2,9,-5,5,10,6,-4,3,5,-10,3,-1,-8,8,-6,-5,6,-6,-1,-2,-5,-8,9,10,1,4,-5,8,3,7,1,-10,7,7,7,10,-2,-10,10,-6,9,6,4,-9,10,-8,7,-7,4,-2,-7,-10,1,-1,-1,5,-6,5,-2,9,-10,2,-3,-10,5,7,-4,-1,8,-9,1,-10,-2,-9,1,8,-4,-7,-9,3,8,-6,-8,9,-10,-4,2,-8,-1,9,-4,1,7,-5,6,-10,10,1,4,-4,8,-9,-4,-5,5,-4,2,7,5,6,3,-8,-4,3,-8,-6,6,1,2,4,-1,-4,-6,-2,4,4,4,2,-2,-7,1,1,7,-7,5,4,-10,10,-1,6,-10,5,-2,-3,-2,-7,2,-10,7,5,9,-1,-10,-4,3,8,-10,-9,-2,9,1,-8,-3,9,10,-3,5,-7,-4,6,10,-1,9,-5,10,-6,9,3,6,3,8,-4,-9,-6,1,10,-5,4,-9,-4,2,-10,-6,2,-3,-8,2,-3,-3,3,2,7,-4,-1,7,-2,9,-9,-2,-9,-7,-7,-8,-9,-1,5,8,1,1,5,-1,-7,6,5,9,5,8,-7,4,7,10,1,2,-10,-5,-10,-1,-5,7,6,-4,3,7,-8,6,8,-5,-4,2,9,8,-4,-10,-7,-8,4,6,-4,7,-5,7,-1,-2,-9,-8,2,2,6,-4,9,-5,-6,10,5,-3,-2,-2,3,5,-10,4,10,7,-8,-10,5,-9,6,2,-7,-2,5,10,-9,4,10,3,-4,8,3,8,-3,10,6,-3,-9,10,8,-6,6,10,9,-8,6,-6,5,-9,-1,-10,-3,10,5,-9,-3,-1,6,5,-5,-8,-10,-9,8,-3,-7,10,3,5,3,2,1,-2,-7,2,-1,-2,-7,-6,-9,8,2,-7,9,5,-7,5,-2,-5,-6,-10,1,10,3,5,-6,9,2,-5,9,10,-10,-4,-3,-3,9,-8,5,8,-3,-1,9,-7,5,1,-3,-10,7,-7,-4,-1,-4,-1,6,-9,6,8,-2,-6,8,-1,-10,5,-4,10,-3,-8,2,5,3,-7,-8,4,-9,-6,-10,7,7,-9,-4,-6,-10,3,-6,-9,6,7,10,-3,6,3,6,7,-4,4,-3,-7,7,-6,8,-1,1,8,1,-8,1,-2,5,-2,-4,-9,7,2,5,6,-3,-8,4,6,9,2,-7,-9,-4,3,7,4,9,-9,-6,-8,1,3,-3,-3,-5,2,-9,-6,2,-8,-3,-5,10,5,-9,5,10,-7,9,5,5,5,10,5,-3,3,9,6,-9,7,5,-8,-2,-10,-7,4,-4,-3,2,-8,-5,1,-8,5,-10,-7,-4,10,2,-8,4,-10,-3,-7,-3,2,-8,3,-9,-5,-1,-4,7,-3,-5,-7,-3,1,10,-2,3,-4,-6,6,7,4,2,-5,5,10,-8,-1,4,6,-10,-10,2,-3,-10,4,10,5,10,-3,-7,5,1,-8,-9,-2,5,-1,5,7,-3,-1,1,-7,6,-7,4,-10,-9,-4,3,7,-8,-6,2,-8,-4,-8,-7,-7,-6,7,6,8,8,-6,-8,8,1,10,-5,10,7,6,4,6,10,1,3,-3,-1,-1,-2,-8,-2,10,-7,1,-10,-8,2,6,1,10,-9,4,-2,1,-5,8,-7,9,9,-10,6,-5,5,-2,1,10,-7,-1,3,-2,3,8,-10,-8,4,10,-7,10,-8,-8,-6,-10,5,1,-7,6,5,-2,8,6,7,4,2,-5,8,-1,2,-7,-5,4,-3,4,2,-3,-5,6,4,5,6,6,1,-10,9,9,8,-7,-2,9,6,-8,-8,2,-4,7,7,4,9,1,3,-3,3,-4,-1,-1,-2,8,1,3,9,5,-3,5,3,1,8,-9,-6,-8,-5,-3,-7,-8,-5,6,-2,1,10,-9,-6,10,-4,6,3,6,4,6,4,-2,6,-4,-8,8,-3,-10,-7,2,3,-3,4,6,-3,-9,-6,-6,8,-5,-7,4,-9,-10,7,10,-1,-6,-4,-3,5,-4,3,-5,1,7,2,1,-6,-8,4,2,-2,-2,-1,5,-9,6,10,4,3,3,-5,-7,-5,5,-2,9,-7,2,8,-5,6,-10,7,10,-7,5,9,-4,-6,6,-10,-4,5,-7,3,1,-7,8,7,4,-2,8,1,-6,5,-7,-6,-1,6,4,-2,-1,-8,-5,-6,8,7,7,-10,-7,2,9,4,9,-8,3,9,-2,-10,1,5,-2,-5,-10,-2,9,2,2,-8,8,-5,7,-5,-3,4,-9,-1,-1,1,-3,-10,-7,-10,8,1,3,9,3,9,-8,-8,-3,-9,-7,-8,3,5], dtype = "int32")#candidate|6988|(936,)|const|int32
var_6989 = relay.var("var_6989", dtype = "bool", shape = ())#candidate|6989|()|var|bool
var_6990 = relay.var("var_6990", dtype = "float32", shape = (715,))#candidate|6990|(715,)|var|float32
var_6991 = relay.var("var_6991", dtype = "int32", shape = (81,))#candidate|6991|(81,)|var|int32
var_6992 = relay.var("var_6992", dtype = "int8", shape = (1, 75))#candidate|6992|(1, 75)|var|int8
call_6987 = relay.TupleGetItem(func_3889_call(relay.reshape(const_6988.astype('int32'), [8, 9, 13]), relay.reshape(var_6989.astype('bool'), []), relay.reshape(var_6990.astype('float32'), [715,]), relay.reshape(var_6991.astype('int32'), [81,]), relay.reshape(var_6992.astype('int8'), [75,]), ), 3)
call_6993 = relay.TupleGetItem(func_3896_call(relay.reshape(const_6988.astype('int32'), [8, 9, 13]), relay.reshape(var_6989.astype('bool'), []), relay.reshape(var_6990.astype('float32'), [715,]), relay.reshape(var_6991.astype('int32'), [81,]), relay.reshape(var_6992.astype('int8'), [75,]), ), 3)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_7021 = relay.TupleGetItem(func_4671_call(), 0)
call_7022 = relay.TupleGetItem(func_4672_call(), 0)
func_6691_call = mod.get_global_var('func_6691')
func_6693_call = mutated_mod.get_global_var('func_6693')
call_7041 = relay.TupleGetItem(func_6691_call(), 0)
call_7042 = relay.TupleGetItem(func_6693_call(), 0)
func_4802_call = mod.get_global_var('func_4802')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_7060 = func_4802_call()
call_7061 = func_4802_call()
output = relay.Tuple([call_6976,call_6987,const_6988,var_6989,var_6990,var_6991,var_6992,call_7021,call_7041,call_7060,])
output2 = relay.Tuple([call_6977,call_6993,const_6988,var_6989,var_6990,var_6991,var_6992,call_7022,call_7042,call_7061,])
func_7064 = relay.Function([var_6989,var_6990,var_6991,var_6992,], output)
mod['func_7064'] = func_7064
mod = relay.transform.InferType()(mod)
mutated_mod['func_7064'] = func_7064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7064_call = mutated_mod.get_global_var('func_7064')
var_7066 = relay.var("var_7066", dtype = "bool", shape = ())#candidate|7066|()|var|bool
var_7067 = relay.var("var_7067", dtype = "float32", shape = (715,))#candidate|7067|(715,)|var|float32
var_7068 = relay.var("var_7068", dtype = "int32", shape = (81,))#candidate|7068|(81,)|var|int32
var_7069 = relay.var("var_7069", dtype = "int8", shape = (1, 75))#candidate|7069|(1, 75)|var|int8
call_7065 = func_7064_call(var_7066,var_7067,var_7068,var_7069,)
output = call_7065
func_7070 = relay.Function([var_7066,var_7067,var_7068,var_7069,], output)
mutated_mod['func_7070'] = func_7070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5520_call = mod.get_global_var('func_5520')
func_5522_call = mutated_mod.get_global_var('func_5522')
call_7221 = relay.TupleGetItem(func_5520_call(), 1)
call_7222 = relay.TupleGetItem(func_5522_call(), 1)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_7253 = relay.TupleGetItem(func_5163_call(), 0)
call_7254 = relay.TupleGetItem(func_5164_call(), 0)
func_5881_call = mod.get_global_var('func_5881')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_7260 = func_5881_call()
call_7261 = func_5881_call()
func_5606_call = mod.get_global_var('func_5606')
func_5607_call = mutated_mod.get_global_var('func_5607')
call_7262 = func_5606_call()
call_7263 = func_5606_call()
output = relay.Tuple([call_7221,call_7253,call_7260,call_7262,])
output2 = relay.Tuple([call_7222,call_7254,call_7261,call_7263,])
func_7264 = relay.Function([], output)
mod['func_7264'] = func_7264
mod = relay.transform.InferType()(mod)
mutated_mod['func_7264'] = func_7264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7264_call = mutated_mod.get_global_var('func_7264')
call_7265 = func_7264_call()
output = call_7265
func_7266 = relay.Function([], output)
mutated_mod['func_7266'] = func_7266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4651_call = mod.get_global_var('func_4651')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_7275 = relay.TupleGetItem(func_4651_call(), 0)
call_7276 = relay.TupleGetItem(func_4652_call(), 0)
func_7264_call = mod.get_global_var('func_7264')
func_7266_call = mutated_mod.get_global_var('func_7266')
call_7282 = relay.TupleGetItem(func_7264_call(), 1)
call_7283 = relay.TupleGetItem(func_7266_call(), 1)
output = relay.Tuple([call_7275,call_7282,])
output2 = relay.Tuple([call_7276,call_7283,])
func_7288 = relay.Function([], output)
mod['func_7288'] = func_7288
mod = relay.transform.InferType()(mod)
output = func_7288()
func_7289 = relay.Function([], output)
mutated_mod['func_7289'] = func_7289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5991_call = mod.get_global_var('func_5991')
func_5993_call = mutated_mod.get_global_var('func_5993')
call_7320 = func_5991_call()
call_7321 = func_5991_call()
output = call_7320
output2 = call_7321
func_7322 = relay.Function([], output)
mod['func_7322'] = func_7322
mod = relay.transform.InferType()(mod)
output = func_7322()
func_7323 = relay.Function([], output)
mutated_mod['func_7323'] = func_7323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7264_call = mod.get_global_var('func_7264')
func_7266_call = mutated_mod.get_global_var('func_7266')
call_7349 = relay.TupleGetItem(func_7264_call(), 1)
call_7350 = relay.TupleGetItem(func_7266_call(), 1)
func_4825_call = mod.get_global_var('func_4825')
func_4829_call = mutated_mod.get_global_var('func_4829')
const_7354 = relay.const([-6,8,-9,4,5,-9,1,3,-3,-8,2,3,-1,4,-8,1,1,9,-8,-5,10,-6,-3,-10,5,1,-7,3,-9,-10,-1,10,-10,1,-3,-1,-10,5,-9,8,-5,3,7,-2,4,-1,10,-8,2,8,-6,10,9,9,-2,-2,-8,-1,-3,-1,-4,2,6,6,-9,-3,5,-3,9,-10,9,-2,-9,3,-7,-6,9,-4,-8,-2,3,4,-1,2,-6,-2,6,-5,-6,-4,-5,1,8,8,6,-3,-7,8,-3,-9,5,-6,-5,6,1,4,10,-9,-3,-4,-9,7,-3,6,-5,7,-4,1,-5,-3,-6,-10,4,-5,-6,-5,8,-1,-7,9,9,2,-8,-7,9,-7,4,-9,9,-5,-5,-10,-2,-3,7,1,-7,-3,7,8,-7,10,6,-2,-5,10,5,2,10,-6], dtype = "int16")#candidate|7354|(160,)|const|int16
call_7353 = relay.TupleGetItem(func_4825_call(relay.reshape(const_7354.astype('int16'), [16, 5, 2]), relay.reshape(const_7354.astype('int16'), [16, 5, 2]), ), 0)
call_7355 = relay.TupleGetItem(func_4829_call(relay.reshape(const_7354.astype('int16'), [16, 5, 2]), relay.reshape(const_7354.astype('int16'), [16, 5, 2]), ), 0)
output = relay.Tuple([call_7349,call_7353,const_7354,])
output2 = relay.Tuple([call_7350,call_7355,const_7354,])
func_7364 = relay.Function([], output)
mod['func_7364'] = func_7364
mod = relay.transform.InferType()(mod)
mutated_mod['func_7364'] = func_7364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7364_call = mutated_mod.get_global_var('func_7364')
call_7365 = func_7364_call()
output = call_7365
func_7366 = relay.Function([], output)
mutated_mod['func_7366'] = func_7366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5410_call = mod.get_global_var('func_5410')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_7370 = func_5410_call()
call_7371 = func_5410_call()
output = relay.Tuple([call_7370,])
output2 = relay.Tuple([call_7371,])
func_7396 = relay.Function([], output)
mod['func_7396'] = func_7396
mod = relay.transform.InferType()(mod)
output = func_7396()
func_7397 = relay.Function([], output)
mutated_mod['func_7397'] = func_7397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7422 = relay.var("var_7422", dtype = "int32", shape = ())#candidate|7422|()|var|int32
const_7423 = relay.const([[[-6,6,10,5,-8,-6,-4,-9,2,-4,-3,2,4,2,-1],[-1,9,-2,-7,-8,10,9,-6,-8,-8,9,-5,-7,-9,5],[5,6,7,-6,6,7,-7,-1,5,-1,4,-2,-3,5,1],[5,-8,-1,-10,7,-2,-4,-3,2,-4,8,-3,6,3,-1],[3,-2,6,6,-2,-3,-1,5,-2,1,10,-6,2,-2,-5],[-1,8,9,-1,-1,10,-9,-1,-3,1,-10,3,-5,-8,-4]],[[-1,-1,-10,-4,-3,-6,-9,4,-9,-4,10,3,-10,10,7],[-10,1,-7,10,-2,8,-8,2,8,8,4,-6,3,7,-3],[-1,3,4,3,-3,1,-4,10,-10,9,-2,9,-10,-1,10],[-3,7,-1,10,-7,8,6,-6,9,-7,-7,9,-5,8,8],[-10,-7,1,-7,1,-3,1,-2,-6,-4,-7,-3,5,-9,-6],[1,10,-4,-7,1,5,8,1,-3,-10,1,-6,-8,-2,5]],[[6,5,-5,6,-10,-1,-10,8,-8,-10,8,10,6,6,-4],[10,-7,5,-4,6,-9,6,8,1,-7,-6,4,8,3,10],[4,-7,-4,5,-5,-1,-9,-4,-3,3,-5,4,7,9,-3],[-9,-10,-8,-1,4,7,10,4,-3,8,6,8,-5,1,5],[5,-3,-10,-3,5,7,-5,-7,3,-6,9,6,-2,-10,-5],[7,1,-6,10,-2,-7,8,-9,10,9,5,-10,5,4,-6]],[[-2,-10,4,4,5,10,6,-5,5,7,5,-1,-2,8,-2],[6,9,5,-2,-9,4,3,9,4,-5,-7,-2,-7,5,-10],[-2,-10,-2,6,3,-5,7,8,-5,-2,-5,1,9,2,3],[-10,-10,-8,5,-6,-3,7,8,8,10,-2,-10,10,10,3],[6,10,4,-8,-6,-9,-7,9,-4,7,-8,6,-3,-7,-10],[8,-6,4,8,10,6,5,8,7,2,5,-4,-9,-1,1]]], dtype = "int32")#candidate|7423|(4, 6, 15)|const|int32
bop_7424 = relay.equal(var_7422.astype('bool'), const_7423.astype('bool')) # shape=(4, 6, 15)
func_4879_call = mod.get_global_var('func_4879')
func_4881_call = mutated_mod.get_global_var('func_4881')
call_7433 = relay.TupleGetItem(func_4879_call(), 2)
call_7434 = relay.TupleGetItem(func_4881_call(), 2)
output = relay.Tuple([bop_7424,call_7433,])
output2 = relay.Tuple([bop_7424,call_7434,])
func_7442 = relay.Function([var_7422,], output)
mod['func_7442'] = func_7442
mod = relay.transform.InferType()(mod)
mutated_mod['func_7442'] = func_7442
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7443 = relay.var("var_7443", dtype = "int32", shape = ())#candidate|7443|()|var|int32
func_7442_call = mutated_mod.get_global_var('func_7442')
call_7444 = func_7442_call(var_7443)
output = call_7444
func_7445 = relay.Function([var_7443], output)
mutated_mod['func_7445'] = func_7445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5087_call = mod.get_global_var('func_5087')
func_5089_call = mutated_mod.get_global_var('func_5089')
call_7489 = func_5087_call()
call_7490 = func_5087_call()
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_7526 = relay.TupleGetItem(func_5004_call(), 1)
call_7527 = relay.TupleGetItem(func_5005_call(), 1)
func_4750_call = mod.get_global_var('func_4750')
func_4753_call = mutated_mod.get_global_var('func_4753')
var_7530 = relay.var("var_7530", dtype = "int8", shape = (75,))#candidate|7530|(75,)|var|int8
call_7529 = relay.TupleGetItem(func_4750_call(relay.reshape(var_7530.astype('int8'), [1, 75])), 1)
call_7531 = relay.TupleGetItem(func_4753_call(relay.reshape(var_7530.astype('int8'), [1, 75])), 1)
var_7533 = relay.var("var_7533", dtype = "int8", shape = (75,))#candidate|7533|(75,)|var|int8
bop_7534 = relay.floor_divide(var_7530.astype('float32'), relay.reshape(var_7533.astype('float32'), relay.shape_of(var_7530))) # shape=(75,)
output = relay.Tuple([call_7489,call_7526,call_7529,bop_7534,])
output2 = relay.Tuple([call_7490,call_7527,call_7531,bop_7534,])
func_7537 = relay.Function([var_7530,var_7533,], output)
mod['func_7537'] = func_7537
mod = relay.transform.InferType()(mod)
mutated_mod['func_7537'] = func_7537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7537_call = mutated_mod.get_global_var('func_7537')
var_7539 = relay.var("var_7539", dtype = "int8", shape = (75,))#candidate|7539|(75,)|var|int8
var_7540 = relay.var("var_7540", dtype = "int8", shape = (75,))#candidate|7540|(75,)|var|int8
call_7538 = func_7537_call(var_7539,var_7540,)
output = call_7538
func_7541 = relay.Function([var_7539,var_7540,], output)
mutated_mod['func_7541'] = func_7541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5269_call = mod.get_global_var('func_5269')
func_5270_call = mutated_mod.get_global_var('func_5270')
call_7587 = relay.TupleGetItem(func_5269_call(), 0)
call_7588 = relay.TupleGetItem(func_5270_call(), 0)
output = call_7587
output2 = call_7588
func_7589 = relay.Function([], output)
mod['func_7589'] = func_7589
mod = relay.transform.InferType()(mod)
mutated_mod['func_7589'] = func_7589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7589_call = mutated_mod.get_global_var('func_7589')
call_7590 = func_7589_call()
output = call_7590
func_7591 = relay.Function([], output)
mutated_mod['func_7591'] = func_7591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5245_call = mod.get_global_var('func_5245')
func_5247_call = mutated_mod.get_global_var('func_5247')
call_7597 = relay.TupleGetItem(func_5245_call(), 2)
call_7598 = relay.TupleGetItem(func_5247_call(), 2)
func_1131_call = mod.get_global_var('func_1131')
func_1134_call = mutated_mod.get_global_var('func_1134')
const_7616 = relay.const(10, dtype = "int32")#candidate|7616|()|const|int32
call_7615 = relay.TupleGetItem(func_1131_call(relay.reshape(const_7616.astype('int32'), [])), 0)
call_7617 = relay.TupleGetItem(func_1134_call(relay.reshape(const_7616.astype('int32'), [])), 0)
output = relay.Tuple([call_7597,call_7615,const_7616,])
output2 = relay.Tuple([call_7598,call_7617,const_7616,])
func_7622 = relay.Function([], output)
mod['func_7622'] = func_7622
mod = relay.transform.InferType()(mod)
mutated_mod['func_7622'] = func_7622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7622_call = mutated_mod.get_global_var('func_7622')
call_7623 = func_7622_call()
output = call_7623
func_7624 = relay.Function([], output)
mutated_mod['func_7624'] = func_7624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5949_call = mod.get_global_var('func_5949')
func_5950_call = mutated_mod.get_global_var('func_5950')
call_7666 = func_5949_call()
call_7667 = func_5949_call()
func_2094_call = mod.get_global_var('func_2094')
func_2099_call = mutated_mod.get_global_var('func_2099')
var_7672 = relay.var("var_7672", dtype = "int8", shape = ())#candidate|7672|()|var|int8
const_7673 = relay.const([-9,-4,6,8,7,9,-1,-9,8,6,-10,8,6,1,-3,5,-3,-6,10,-4,7,9,2,3,-2,1,-8,1,-7,6,-9,3,-10,3,-3,1,4,10,-5,-7,-3,-1,9,7,-6,-7,3,-7,9,7,8,-3,-5,10,7,-1,6,-3,3,3,2,4,-8,-10,-2,-10,-4,-5,-8,-3,2,9,-3,5,2], dtype = "int8")#candidate|7673|(75,)|const|int8
const_7674 = relay.const([False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True], dtype = "bool")#candidate|7674|(385,)|const|bool
call_7671 = relay.TupleGetItem(func_2094_call(relay.reshape(var_7672.astype('int8'), []), relay.reshape(const_7673.astype('int8'), [15, 1, 5]), relay.reshape(const_7674.astype('bool'), [385,]), ), 3)
call_7675 = relay.TupleGetItem(func_2099_call(relay.reshape(var_7672.astype('int8'), []), relay.reshape(const_7673.astype('int8'), [15, 1, 5]), relay.reshape(const_7674.astype('bool'), [385,]), ), 3)
func_3391_call = mod.get_global_var('func_3391')
func_3395_call = mutated_mod.get_global_var('func_3395')
const_7688 = relay.const([[3.711939,-6.404093,3.285105,5.427490,-7.439513,9.968773],[-0.772472,8.294291,6.669052,-5.523970,9.754391,-6.088616],[9.317383,9.094028,3.347667,0.278361,-7.154015,5.641320],[-0.499806,-8.067236,-9.746861,1.252582,-3.075134,6.930690],[-7.939541,-2.076661,6.886393,-1.666005,-3.131414,1.451856],[-1.616319,7.882003,-1.479396,-6.381334,9.377098,-3.171524],[-4.181935,-9.018833,-2.909137,-4.621850,1.035209,-3.779140],[-7.101471,7.642006,-8.705225,-7.588380,9.216459,-5.741459],[-5.245733,5.773741,9.673204,1.563555,6.016740,3.124613],[-3.433520,-7.868837,-2.506056,-5.489790,8.936710,2.537022],[-3.042208,-8.909305,8.255432,-8.521046,0.341265,-8.853926],[7.441359,2.057746,7.803729,-9.164606,-9.646251,-6.427973],[0.471605,2.088099,-5.879552,-3.842867,-0.185452,0.444949],[3.314181,-9.764023,2.121040,-8.367769,-2.636617,8.913865],[-0.109508,5.015274,-9.402398,8.839906,6.868536,-7.770615],[5.617781,-2.879574,-3.809911,-1.332296,1.453645,-9.829376],[9.168760,3.033836,-2.059886,7.658518,-8.618591,-9.611302],[-8.291918,-1.256943,-5.648575,-0.814273,-4.987354,-9.728366],[-5.869892,-4.590104,3.224198,-1.804418,1.401987,-5.258806],[-4.499130,-3.278842,8.845683,0.498680,-2.629801,3.158921],[-9.818725,2.439942,-9.220561,6.059638,-2.717570,9.502115],[7.771751,-0.975340,1.062990,-6.149641,-4.395710,5.416053],[6.974488,-8.911806,-1.579606,6.073768,3.763463,3.497946],[-3.737553,-7.815984,3.355366,-5.342665,8.526226,7.801017],[5.495123,-7.378828,6.835296,8.690933,-1.592157,-8.488858],[0.187210,9.634067,-6.348735,7.490019,-6.496061,3.536143],[6.330835,-2.699499,-3.226871,5.165769,2.340104,-1.704315],[8.318813,-0.633410,3.072355,1.533825,-6.580845,2.611795],[3.125237,2.799612,-7.461871,8.452086,-9.375389,-5.779090],[-1.082974,-3.234909,4.883547,-7.664531,0.780308,-7.280923],[0.825606,0.655368,-0.997100,2.153285,9.488382,9.514997],[0.894528,5.373256,-0.504653,7.394975,-3.242414,2.065599],[-2.126778,-0.200976,-9.290542,-9.971116,-2.079516,8.164033],[-9.337470,3.663404,0.704839,7.772359,4.088177,-5.782195],[-7.467111,-7.144240,3.451433,-6.467925,8.395434,7.553294],[3.672328,-0.055966,-5.516628,-4.913557,-7.247000,-9.029545],[7.436231,-1.546912,1.343696,-9.765644,-0.439468,-6.861691],[-3.494084,5.881606,9.877777,3.435483,-8.199455,0.190529],[2.992886,1.771540,3.965307,4.526989,5.693071,8.483940],[-9.529510,-3.626924,2.650334,0.379147,1.924979,5.159968],[0.623601,2.109015,-5.819964,-0.860594,2.377189,4.913697],[-4.289101,5.821485,6.171391,-0.696672,-4.499731,-2.245955],[3.834535,-5.135431,1.313733,0.274618,-0.508180,-1.678379],[1.247084,0.475768,2.406508,8.930815,1.879643,5.486418],[-8.832385,1.080127,3.801749,-5.443715,8.379495,9.664294],[-4.720226,5.796537,-4.039544,-2.491648,1.926426,-5.431436],[-6.285450,-4.298654,-6.420023,-9.115437,5.085927,3.226074],[-2.387789,5.582789,-0.222259,-1.297913,5.060599,-9.151631],[9.477082,-4.320787,-3.486248,1.581985,-4.754066,-9.804143],[-5.505605,1.663143,-3.929645,-7.429437,-1.721497,-9.704908],[-5.612422,-1.130581,0.632278,3.879900,0.906585,8.476819],[-7.185385,-8.342967,-1.348952,7.414511,-6.006653,-0.048769],[-1.566344,5.548962,-8.870958,1.921914,-7.900178,-7.753654],[-9.661340,-2.534001,2.080660,8.403924,9.382329,8.702207],[1.403378,-2.770205,1.509251,-3.458145,7.871189,9.807162],[-2.635250,-7.991133,-6.094390,-2.388170,1.139529,-4.204713],[-3.790162,-0.551531,4.742018,7.604600,6.751064,-5.163939],[-0.509788,-6.289144,-7.511499,4.917203,-3.174638,2.537034],[-2.014346,-4.164159,2.862931,9.139783,-6.787905,9.813952],[2.314512,-4.705592,-3.515881,0.354439,-3.182896,-0.138784],[6.914135,3.495482,0.759084,-1.835506,-2.867383,6.078968],[0.891799,5.886196,8.781532,-5.919082,7.683551,5.265941],[7.211502,-1.808057,-9.568169,7.635452,-0.647607,7.842355],[0.184257,4.152215,-9.984858,1.201821,8.023849,-4.771818],[2.566409,4.302879,2.078434,-1.479058,-8.792116,-9.962593],[8.347565,-8.659163,-4.984706,-2.608673,-7.449507,0.992780],[-8.241854,-8.965758,7.714250,-4.651846,7.608073,9.552524],[-7.772837,-1.546042,-5.920233,3.614348,-9.546913,1.183438],[-4.317107,-3.795319,-7.439274,9.369983,6.302315,-7.814357],[-3.074657,6.303499,5.364741,4.629879,0.408779,-0.812707],[-1.009736,4.052185,6.278569,-4.795826,-3.167830,-0.313644],[-6.143761,-1.616887,-6.750464,7.191606,6.467861,-2.779579],[5.191127,7.918799,5.913081,4.058943,2.977022,-1.523749],[5.437039,-0.947818,-7.143756,-8.782970,0.227960,-2.045348],[-3.574692,-9.532390,-1.603990,-0.697848,-2.552547,-4.516093],[2.061943,-8.116756,9.660946,8.193858,2.961116,-4.581646],[9.352353,-8.753438,5.614247,-4.532455,-5.985158,-6.027994],[3.489183,9.149432,-9.020408,-6.918239,3.027638,-4.678480],[1.439183,8.062262,-8.808464,-0.041481,2.225045,-3.772999],[1.380962,-4.851629,6.345650,2.565058,6.475699,6.315931],[-1.907198,2.486604,-5.591919,-4.387476,6.823634,-0.641441],[-7.868514,6.614207,7.178749,-5.049026,-8.101353,4.472214],[3.702499,2.515555,7.552691,-6.999167,-1.982694,3.014830],[-8.851321,-3.942865,9.393653,6.485026,-5.864853,5.941100],[-1.838241,-0.646621,-7.566136,-2.649513,-3.180385,-0.893224],[-5.303303,-8.849563,-6.578825,9.335370,2.512598,1.113412],[-3.442821,-6.978594,0.267066,6.155001,-0.400996,5.976235],[1.538987,-8.825062,3.935373,7.050508,-1.569124,-7.262714],[6.964863,6.661438,1.885318,2.570257,7.546075,-2.423317],[-0.039142,-2.701283,-1.465735,1.029909,5.381087,2.116080],[6.236623,4.898596,-1.343116,-9.236656,4.992548,0.416142],[-1.367972,4.886995,-0.029326,3.481928,2.469347,5.358856],[8.758856,8.947812,3.101694,5.737421,9.719918,-0.839834],[-2.568052,5.073399,-3.643108,-7.289252,0.736377,-8.495062],[-2.207626,-8.950318,1.811752,8.624630,4.353404,5.129859],[9.638821,5.000737,3.512625,6.175688,-6.846931,-0.188260],[9.751144,-9.925882,-0.328812,-8.113093,-2.102977,-0.891197],[3.561285,-6.006481,-4.691330,1.794577,-4.282671,-9.402383],[-7.288364,3.708216,-0.494886,9.659134,-1.149939,-1.719411],[-1.884432,5.096873,-5.337776,-1.456558,1.483513,-6.878736],[-6.701292,-0.661392,-8.416977,2.769211,-6.691641,6.386193],[-5.704110,-7.810533,-9.765891,8.644060,9.121800,8.396570],[-3.528171,1.895813,-5.037190,5.881183,8.871005,3.347423],[-2.926806,-4.255471,8.406496,9.342052,-3.239257,0.869791],[-7.380798,0.702215,8.573520,0.427488,-7.659752,-4.801107],[-6.042395,-5.848969,0.663476,6.852935,-1.171353,-3.530855],[-7.339104,6.005413,8.256616,4.200876,6.081363,0.562722],[-3.650239,-7.949511,-4.611361,2.988648,-5.389847,-4.196255],[-6.307387,6.666035,-9.662439,-3.556244,7.331581,1.337661],[-9.113487,-7.727603,-4.120065,3.983246,5.931443,6.972305],[-8.354811,-6.154307,-3.813121,-9.740520,5.038047,8.724100],[6.257590,-4.220065,2.790438,4.593525,-8.928818,0.405114],[4.352797,2.943125,-9.404049,-8.688104,-2.018743,1.282114],[-7.957255,2.450632,4.212113,5.263923,-3.232648,9.667359],[2.866504,-2.692217,6.331335,-2.963149,-8.001813,2.351283],[7.926036,6.552768,-0.539761,-9.130913,-5.952751,-8.426023],[7.383235,-8.295117,7.574224,8.166398,-5.237503,2.722992],[-6.994416,-0.417343,6.133046,5.372986,-9.899022,-1.628637],[-0.415665,3.120896,-7.687765,-2.766827,4.750279,-0.339944],[9.374162,9.895482,1.440389,1.476723,8.288560,-9.599286],[0.749598,2.788466,-7.659698,-6.438707,-6.573114,6.982839],[-9.964668,-1.335189,-0.007872,-8.088399,6.186794,0.033098],[-1.165116,-1.189181,-7.291005,3.912412,-3.739829,8.208247],[-8.019557,6.048116,0.458345,-5.669169,7.791908,4.621043],[5.948972,6.838044,-9.338125,5.156083,6.085519,-1.372894],[-0.177623,9.286617,-9.265778,9.597157,-2.940885,9.146284],[7.797123,9.921699,5.703867,-4.136927,8.845427,7.306170],[-8.833994,-5.157135,-2.067880,8.657942,-6.611640,6.068421],[-5.138496,-5.250624,-1.463759,-6.229506,7.219793,-7.362050],[0.342032,8.550534,-9.771217,-5.007489,3.192570,-6.110333],[3.720078,-7.700993,-5.731891,-8.679542,-0.718053,8.308989],[-8.837456,-3.431336,-4.200178,-9.539619,3.837858,-3.188807],[-5.630367,-1.691393,4.848099,5.600098,-0.101921,3.032066],[-1.574456,5.776410,-5.207988,7.596929,1.220311,-2.057939],[-6.666096,9.079942,-5.309660,2.000201,-9.892256,-7.207771],[-6.127790,-2.689071,2.362925,3.681987,4.439430,-6.938190],[6.554394,-6.559087,2.339702,-2.335942,-5.739952,2.895488],[0.345170,2.409378,-5.188125,-5.858210,-7.585224,0.518142],[-9.105333,5.274931,-3.727407,0.134123,1.318700,-9.277203],[-0.067631,-9.031384,-5.029624,0.493826,-3.132125,0.009751],[-8.106590,4.417550,-0.317310,-6.975377,6.585533,-2.409588],[0.581232,2.235785,4.823893,1.956113,6.833105,-8.927104],[7.647470,7.415234,2.652243,-3.865642,-6.553116,-9.517239],[-5.661668,1.448544,-1.225030,6.777027,3.770811,-5.283528],[-5.203174,-2.855296,3.744643,7.132915,-4.133897,-6.665952],[2.333369,3.726058,-6.940873,-8.629963,-7.851127,-7.736928],[2.326006,-4.038141,-8.595562,-8.829416,-0.886603,-2.232253],[7.406768,-1.109352,2.617486,5.159283,1.614651,-3.127385],[-6.575330,5.545741,5.806739,9.793727,1.253601,5.666081],[-5.860874,0.765543,6.723045,-8.478328,2.238850,-1.524145],[7.916198,-7.099579,6.578620,-9.865461,3.726922,-7.967219],[9.126976,-1.915420,-3.619053,3.997341,8.535478,4.672945],[-0.310138,3.869556,6.023577,-5.295662,-5.609799,0.082221],[-7.687492,3.680927,8.931263,-5.103076,-8.226943,-8.728037],[-7.436402,7.370522,-6.037827,-0.690780,4.454730,-7.370038],[-6.451847,3.579950,8.512575,-0.690280,0.623429,-0.557991],[3.980020,9.073734,7.982387,-0.572258,5.115326,6.157150],[9.869976,7.256289,5.928611,3.584587,-5.949673,-5.509254],[6.982098,5.652600,1.285992,-5.065698,-4.805212,-0.258819],[2.879907,-3.028645,-4.018594,-8.628920,4.233480,-2.701000],[9.628995,-1.467781,3.807471,-5.807747,0.248153,6.461751],[0.312351,-7.857919,0.660734,0.052108,1.588248,-9.493146],[6.399981,5.487385,-4.836864,2.228040,2.755448,2.026328],[4.404270,-3.217386,-2.453363,5.274678,3.609947,4.519147],[-4.278297,8.680181,-4.332919,3.307290,-4.399677,4.193190],[6.474282,-7.494516,-6.936489,9.958945,6.171612,3.578636],[1.381972,4.247705,-4.888800,0.995653,4.291247,-2.423145],[-5.667292,2.638951,8.440223,0.724722,-4.993023,9.220093],[-7.420859,-5.345771,-3.957865,4.071868,-1.456240,-3.789521],[8.899566,2.680022,-5.133856,9.081758,7.192675,7.540177],[8.600397,9.295989,9.822466,-0.289543,4.542191,6.334199],[-5.769919,1.184582,-4.950087,1.922706,-8.135567,-8.902110],[9.820749,0.885034,4.987569,2.028769,-2.228624,-5.360844],[0.354835,6.795548,7.900257,9.981819,8.544999,-7.549742],[-1.498691,5.144341,-0.390543,-4.758752,9.843708,-5.595868],[-6.451887,8.836814,5.169249,-5.642261,4.467161,6.781678],[3.163456,-4.001337,-3.273946,-1.266682,8.816937,9.339490],[7.823948,9.990758,7.194243,8.542974,2.150050,-1.445529],[-7.351004,6.087516,-2.665355,-6.561291,2.932580,-7.129348],[8.613850,2.674857,9.900487,-3.293167,-9.012770,8.868679],[-8.791657,5.742868,-1.820957,-3.442306,9.132183,-7.010556],[-7.304637,1.453275,4.423132,7.551723,-5.383506,8.571908],[9.519359,-0.911054,5.675935,-3.836065,7.623996,9.513555],[5.453822,-4.890667,-6.420202,6.413917,-9.130195,-9.223022],[-7.559342,-0.770436,-2.714949,-1.285178,-4.510692,8.072763],[2.105306,0.793267,-9.280608,-4.245591,-8.451608,-0.971590],[7.444317,8.535152,-8.695859,9.889151,-8.670545,5.747925],[-3.605885,-3.571440,-8.200366,-6.865141,9.955890,-5.144735],[7.352263,-9.224930,-4.684903,-1.110563,-8.502100,1.384290],[8.931471,5.154932,-5.160891,1.613112,4.691056,6.321013],[9.404810,2.583273,3.043531,-9.651840,-7.003477,-9.340913],[1.543713,-2.737848,1.249445,-3.608778,-5.819499,-1.633282],[-9.950539,2.461958,6.253748,-0.284925,2.020640,-6.337478],[8.784670,1.941473,8.274596,-8.401691,-3.798554,-4.395977],[-3.063775,-5.890534,-4.034894,-7.852465,-8.934014,-7.397284],[-4.660660,1.972176,-8.827911,1.086092,-3.782943,1.279813],[-4.967554,0.054283,-1.495657,-8.009245,-0.275113,-3.312708],[5.515270,-8.503417,-9.218891,-7.104853,2.861867,-8.724578],[1.931937,0.878691,-8.690251,1.509767,3.167983,3.711786],[-1.089744,-9.143766,5.519140,3.498298,8.914009,-3.489191],[9.510789,5.530188,-2.562482,-7.854634,1.258818,-0.053202],[2.228390,-2.739529,-5.677352,-7.825812,-7.009862,1.081282],[6.825144,-8.219046,-8.406427,2.949881,4.131333,-6.671408],[-9.159520,0.296907,6.052215,-9.564471,7.659232,3.480023],[-3.968001,-1.533168,-0.866676,-9.688077,3.092072,1.932114],[-3.658125,5.847597,2.847262,7.855360,-4.873071,6.242653],[-0.061147,-8.903109,-5.315044,8.338387,-7.955739,0.910638],[-4.829364,-7.397992,8.335176,1.392796,-4.801535,9.138837],[0.315667,-8.102247,-2.715951,8.706045,6.881036,-5.319749],[8.626146,-4.863520,-9.239348,-8.655941,-3.567135,-8.422175],[-9.704594,1.745660,-2.702520,-8.279838,6.216973,3.387946],[-4.849395,0.385081,1.726666,-7.978809,2.328650,-9.142665],[-2.894799,-1.245800,2.185054,-3.528249,5.112397,2.035173],[7.332632,8.328273,-4.059672,-5.741314,3.641470,-3.157989],[5.014999,0.739490,4.870764,-7.119184,-7.584804,-1.725953],[4.402147,-5.117573,-6.568862,-5.445832,2.593382,4.234589],[3.557174,8.950963,9.001836,8.007174,-1.737360,6.550799],[-7.943927,3.996039,8.232587,-1.694520,6.199367,6.054392],[-8.068538,7.627729,7.286800,2.387899,-7.637559,1.948880],[-5.900713,-9.047750,8.790192,3.072764,-3.942301,-3.930029],[-0.491337,-4.317586,3.376892,-1.524176,-8.360747,-9.338771],[-8.338781,-5.998393,-8.460110,-2.035519,-8.897510,0.004147],[-5.500457,0.806250,3.230798,-7.477978,-2.349835,3.938528],[-6.043941,-9.155776,6.049947,-9.413516,-6.056092,-1.313015],[-1.559695,-3.192302,-8.127380,-2.726981,-4.952533,5.820676],[-8.217501,5.500039,-9.189032,-7.901039,-3.002823,4.736740],[5.251029,6.778444,-6.214682,-0.910218,-1.904022,2.634782],[-3.920260,-1.039210,8.489877,5.505725,8.899957,0.106376],[4.412823,3.729566,-6.680184,-4.948327,-9.940023,6.087017],[0.241653,-1.500338,-9.407685,-7.213214,6.798888,9.838526],[-4.588301,-6.455299,-8.089073,-4.458498,-4.033940,4.754349],[-2.195099,-6.558358,-5.716139,-8.337252,-5.416009,8.852338],[-9.138564,3.610903,-1.343028,4.760821,8.195496,2.076061],[9.351724,-1.954472,9.103525,-6.406923,7.607463,-3.856481],[-4.803037,2.354478,0.454192,-9.865022,2.989614,-0.413052],[-2.938060,-5.504343,6.478071,6.954129,7.833354,-2.731011],[-5.172611,5.835367,-3.589026,1.370926,-3.718319,1.193571],[9.118656,7.354912,4.393727,8.678483,5.596006,-0.650508],[5.605535,4.396271,5.692229,7.172582,-9.948110,3.545482],[-1.942887,-1.841857,3.476519,8.314744,8.313693,4.605215],[-0.289764,-9.509077,9.565027,-7.875948,2.409084,3.704242],[-2.902104,-5.036032,5.252918,7.672060,-8.127267,-1.665492],[6.383937,-3.270426,4.263448,7.549566,-5.422828,6.423577],[-4.217680,-0.031114,-5.860029,-1.558707,-4.685450,1.603221],[-4.559590,-1.714225,-6.683834,7.466143,-1.576051,-3.852355],[5.184029,8.083371,-3.989402,0.170497,-8.292150,-9.796716],[-6.072815,7.658035,6.625946,-1.847052,1.641169,-2.625865],[-9.949494,3.075725,4.212635,-0.444588,-1.485191,6.779788],[-9.812374,9.790926,-4.722413,0.586794,3.871005,-4.356533],[-0.340511,-2.415406,0.381433,0.013050,-8.565205,-0.886907],[1.616838,2.986549,-7.946239,-9.461409,4.697717,5.472047],[2.847400,-1.377033,-7.555647,9.686558,-5.171069,-9.764202],[-5.263116,6.663551,4.281267,-6.777376,-0.910949,-5.130439],[-5.101819,4.773550,-5.272708,-1.690368,-1.121543,-6.190090],[4.992727,0.867638,-4.538186,4.126891,2.233132,2.141499],[-6.517324,9.649276,3.449190,4.398952,-3.508897,-9.518691],[4.394450,-4.106802,7.685039,-5.364282,-2.303070,-3.797158],[-7.339022,8.424744,-1.568142,-5.131744,5.382734,9.273670],[0.923550,-7.002550,-4.242801,-4.730057,0.003141,4.166722],[-1.077068,8.189684,5.995039,0.596479,3.724547,9.459689],[6.297704,-7.859991,-5.039885,-5.311514,-3.971329,0.074233],[8.583282,5.781670,4.118518,3.949524,-0.876213,-1.333972],[0.998633,6.720990,4.221475,-5.997421,-6.995894,7.568118],[2.777439,-1.207328,-5.706107,-5.642263,-2.974104,6.265406],[-6.610470,5.202174,1.668517,-4.578351,7.588546,-2.412521],[-6.475963,6.041472,8.419985,9.397383,-7.068326,5.990328],[-2.050042,-8.612502,5.306317,-7.078101,1.268644,-0.096862],[5.333769,5.566200,1.579742,6.385865,-4.999984,-3.852491],[7.419964,-2.886611,-3.556159,4.051096,0.020442,4.492867],[9.322596,-7.127377,1.565121,3.067435,9.738223,1.634068],[-1.092740,9.816639,5.374412,7.554331,8.094445,7.255246],[1.722873,-4.006843,-3.691840,4.208437,4.321953,-1.461873],[-1.810722,-7.809896,-5.883120,-2.468778,-7.013514,-6.388907],[-8.655502,3.808004,3.392752,8.964612,1.932665,-2.515450],[8.231721,5.641716,5.667036,9.730603,2.349635,-4.539225],[5.234272,0.641532,-8.160271,2.399765,1.056098,-4.381314],[8.090771,5.362254,-2.596909,8.626776,2.444941,-9.624937],[-2.367012,-2.491035,6.394000,-7.417797,-5.875645,8.415790],[3.304920,2.802882,3.811663,3.154361,6.413292,6.011418],[-8.983722,4.143388,4.210986,8.862454,2.534980,7.522584],[-9.943895,8.336997,5.343405,5.329169,5.684499,6.976166],[-2.528758,-9.784938,3.288633,4.501642,-4.006402,0.346487],[3.919086,0.965952,2.870648,2.545252,-7.642527,-0.464445],[7.128871,-8.832597,-4.156986,7.039508,5.139870,-5.036360],[9.168804,-4.449663,-5.121479,6.552004,-4.588789,-9.950001],[-9.987275,0.801017,-4.385020,-0.648822,5.119075,-5.291343],[8.229955,3.751828,7.805087,8.298524,1.126677,-1.796687],[-7.256200,5.623465,7.515337,-0.651527,-3.867464,-2.139834],[4.810013,-3.956389,-3.619018,-4.775349,0.005771,-6.483647],[1.594551,4.217470,0.608622,-4.414963,-4.164425,4.873405],[2.786108,8.306301,0.999656,-6.493185,-4.559777,-2.144366],[5.751722,-0.141434,-2.828115,-9.803026,4.458039,-7.845980],[1.568720,-6.084175,3.355228,6.308529,0.803432,-3.456988],[1.562788,4.886069,3.568731,-0.315747,-3.670608,9.655021],[9.386664,-1.115919,-1.182515,5.190252,5.771989,4.511364],[5.211297,1.402188,3.960361,-6.770804,-8.017334,-7.703737],[5.587328,-6.664170,-2.143658,-9.449671,0.092718,-4.954075],[2.778586,-4.605659,9.167139,5.157548,-4.080612,2.908377],[-5.995378,-6.886104,4.348773,0.312978,0.129309,-1.938021],[4.603733,3.820378,0.213179,-6.803107,-4.628110,2.347328],[-6.483098,-1.279259,0.060825,-5.162798,0.525807,-9.186627],[-6.999893,3.178762,9.669219,0.759470,-5.890874,-9.990823],[-7.115980,9.278824,8.355314,-9.477418,7.400788,-2.539664],[-9.307748,3.897010,-3.446963,-6.769320,6.575073,-6.786953],[7.944584,7.939086,3.874590,2.931897,3.451631,-2.261768],[8.423294,-2.437534,0.240299,5.734001,-9.721994,-7.377274],[-7.001702,7.267641,-8.247504,-8.547665,0.642811,-6.053525],[3.906142,-0.773558,-4.991180,6.438293,0.857980,-4.843466],[2.097902,-4.614683,-2.548234,-2.996552,9.530379,-8.001903],[6.947167,6.788589,3.944096,8.236438,4.684033,7.406305],[-0.910505,6.517511,-7.351023,1.524833,4.163085,9.868832],[-4.230952,-7.936551,3.628244,5.032887,9.339595,9.906090],[-8.263619,-4.553491,-0.031607,2.346701,-3.658904,-7.149402],[2.712978,-1.393244,0.835755,-1.846583,8.621112,4.632158],[-2.317835,-6.681424,5.159159,-1.758918,-7.849048,3.006628],[-6.422668,-9.402123,2.524668,7.195860,-2.041083,0.554647],[-0.700991,3.479989,-3.801055,-5.111044,6.813838,7.698339],[1.481503,3.666881,-6.641955,-2.215065,7.750959,2.797053],[-3.117814,0.221391,3.481309,-3.477565,0.675771,6.421935],[9.176306,-0.830347,-7.360182,9.856791,6.993221,-4.757714],[-7.428693,-0.451667,4.665924,-8.556461,-0.682861,-7.666797],[3.853937,0.821193,-2.827765,-6.146254,5.439218,-2.355367],[-7.066316,3.667278,-4.742644,9.819229,-5.935519,8.761162],[-1.373112,8.141998,6.965030,-0.881546,2.796262,4.215816],[-2.695621,5.364524,-9.910362,-4.338903,3.136646,-3.291174],[5.675419,-6.492413,3.324681,3.906727,-6.493951,0.519717],[-0.559452,-6.357748,0.418641,1.361653,4.279110,2.292744],[-6.682813,8.230090,0.894383,-6.552038,4.158776,6.097554],[-5.576616,-2.042455,1.730449,-3.076541,9.050535,7.925135],[0.435834,5.731446,2.032864,-1.046339,-0.450033,-1.191916],[-2.716943,-2.630268,1.977696,-8.610335,-0.720508,-0.833170],[-7.987901,4.097015,8.261684,5.442822,7.588480,-2.410187],[8.811270,-1.310483,-6.178267,-8.889973,6.621856,-5.024962],[-8.438495,-5.509401,-3.730170,-3.765236,-9.274161,-7.754835],[0.324232,-2.780953,-0.329719,2.583897,0.570621,3.659770],[-3.268667,-0.185346,-9.093663,1.377732,-7.354018,3.185606],[-8.547151,6.549472,0.954007,7.563374,0.119962,0.958730],[-0.129307,-3.545664,3.034629,0.208941,2.127222,8.920379],[-8.979284,-3.900020,8.246880,5.005847,9.415237,-2.772511],[3.760300,3.328676,0.458168,-2.130881,-1.686407,2.724347],[9.677227,3.617189,7.512826,-4.847573,1.582829,-3.957015],[3.522673,3.625469,-3.582949,3.262899,6.708542,6.589125],[-8.733700,-8.477227,-8.056654,-2.253157,-0.824823,-0.691225],[-1.456892,6.153790,9.969841,-1.361357,-4.677776,7.749519],[3.953719,-4.772504,-2.548966,2.719216,9.048309,4.869120],[-8.549721,0.387262,1.459152,-8.502802,9.803839,-8.494485],[6.787311,6.883356,-0.451955,-2.548184,8.905267,-1.365185],[-0.679800,-5.927488,6.352911,0.448434,5.879508,-0.954445],[-1.384888,0.679076,-5.990705,-8.630003,-2.801770,1.321457],[0.674312,5.486368,-2.936315,-9.062138,4.318215,5.162513],[-6.773039,-9.562543,7.250211,-9.097289,2.123641,5.242796],[3.319469,6.368320,3.193840,-0.128670,1.431972,-7.009938],[3.976719,-5.537451,1.580668,2.506790,0.352616,-1.175560],[-5.627181,-1.956991,-3.218442,-4.503809,-6.649034,5.741185],[-3.968809,-1.895283,7.315282,-3.660609,6.244412,-7.994838],[-0.365691,-4.524406,0.244699,-9.425254,5.110420,-7.395258],[8.209946,-4.002496,-9.979829,4.425435,0.769577,-4.477443],[-3.390310,-2.925646,-5.462611,8.567392,-6.251814,-7.500001],[-9.217172,-9.153611,7.533208,4.682632,4.952859,-5.250869],[7.221273,-3.453357,7.140426,-5.492278,6.765059,3.354577],[1.369373,-2.940645,-3.545914,1.259160,-4.281553,3.230621],[-1.760120,-5.358975,-8.815823,-9.772632,-3.151499,-9.585244],[8.357391,-6.164821,5.558614,-6.744091,-0.168771,0.214237],[3.197207,9.573449,-2.998116,-3.290119,7.455773,-0.846934],[7.433507,8.615938,9.200946,-3.065536,-0.273202,-3.903176],[-1.198716,-6.362395,0.450870,-3.011429,9.614026,-1.488982],[-5.434634,-8.731924,6.601628,3.071331,6.161582,9.051674],[-8.245134,-6.871604,-4.135317,6.822775,2.715051,3.037528],[1.898789,-4.662014,4.011409,-7.522688,1.391919,5.450808],[1.914705,7.827494,5.317779,0.094453,-5.951792,7.329519],[-5.270452,-5.166691,-6.618117,1.137223,0.436120,-1.668236],[-6.107658,-6.609903,-1.296854,7.853874,-4.085485,-9.564168],[0.294310,7.604600,8.748211,-1.173359,2.870770,-1.580727],[-4.146233,3.139530,5.878947,-0.564427,-3.848352,6.219630],[-4.729850,-0.803681,6.005373,-5.901841,5.750841,3.461059],[-7.308616,-5.538098,-5.892055,-9.423549,-7.511092,-2.365781],[9.763995,-6.284991,9.643489,-9.695519,-0.376627,-5.663394],[-6.314646,-5.061045,-7.510809,-6.699530,9.614484,9.303522],[3.199346,-0.014097,6.772554,0.809459,1.310340,2.858396],[9.562095,-1.995254,-0.938352,-5.134682,9.267225,-7.193986],[-2.108312,0.907114,-2.166667,9.219499,-1.989205,4.056489],[-3.202427,-3.692501,-7.486768,-2.934768,-0.607272,6.030251],[1.350695,4.952892,-8.316119,-2.084925,-9.396301,-8.703024],[-3.927546,1.128432,7.669788,7.385228,0.574677,6.063540],[0.481434,-5.216071,-3.333335,-6.287432,6.122359,2.455927],[-7.091862,-2.413409,6.380716,3.577896,-5.245667,-6.715971],[7.111364,8.016512,2.268604,0.123780,-7.684380,-5.096919],[2.591246,-2.967092,-2.483021,3.291336,4.742417,-5.599967],[-9.885431,0.879277,-3.589898,7.421804,1.617763,-7.789623],[1.685328,9.469551,5.489484,5.195329,-4.634623,6.816974],[5.523648,7.471999,-2.539817,9.597944,5.267757,9.210142],[-9.785082,-9.268453,4.177601,-8.349471,-6.503775,-5.531373],[-7.283232,-4.124546,2.843065,0.863239,-5.264771,-5.095804],[-0.463272,-9.839775,-9.757261,9.181584,-4.675017,-0.963126],[8.867317,-0.469317,-1.831715,1.501269,-9.740080,6.051431],[-7.667649,-1.746294,-0.468632,1.022399,-4.020535,-8.364588],[-8.791159,3.917149,5.732287,-1.393240,9.543651,-7.982139],[-0.203660,-7.187447,-3.940828,-8.225370,-4.809497,4.384054],[7.740443,-6.827894,-1.681443,-3.965248,-9.778714,9.173612],[2.959453,-3.448902,7.197724,-1.105358,6.711525,-5.778491],[7.343489,-0.116009,-0.398962,-3.704119,-0.599865,4.661087],[8.472450,2.941575,-9.277855,-7.974515,7.476124,-8.538710],[2.607050,-7.679048,3.497763,-2.971759,6.102273,-9.121814],[3.515617,-3.357673,7.501949,-5.387566,5.037388,4.259623],[1.743249,-5.606056,-9.087002,2.348307,7.809739,-6.683750],[-2.152421,0.544052,5.365408,9.343865,-0.044518,2.614545],[-8.397719,4.424617,4.642196,0.551154,-6.706474,2.595026],[-4.205853,-1.651749,-3.747841,-7.445696,-7.912364,3.309191],[3.874740,-5.538001,-8.624610,-3.820998,3.441517,-5.964868],[-1.446255,1.048589,4.444988,7.956681,7.741246,-0.986295],[1.686925,5.181029,-5.655236,2.526354,6.379663,-4.762947],[7.611547,-5.826567,-7.533391,-4.060110,-8.159919,8.015874],[-0.700749,9.069907,-7.430203,-4.349556,-0.387284,9.500357],[-0.223849,2.725147,-7.167314,1.325175,-2.280459,6.922671],[-4.579875,0.778691,6.349741,0.250675,0.755050,-4.724280],[-6.652254,2.429556,-6.109896,6.331429,-4.993905,-2.999924],[-1.969776,-5.502902,-8.463295,9.347953,5.851046,5.112855],[3.505476,7.704945,-7.496743,5.291252,-4.386969,0.370817],[7.138804,0.346945,9.089682,7.781663,8.893637,-0.929498],[9.183233,-9.109218,-3.135498,4.371191,-0.963650,5.187140],[-9.558954,7.878007,2.385776,7.664970,-9.140849,-3.082619],[9.934430,3.803020,-1.109178,-5.625874,-8.637709,-4.301803],[-1.906621,-5.233609,-9.933883,4.873160,-3.108081,5.525499],[-8.477511,1.353147,4.539733,-2.631039,7.790434,5.871667],[-6.363222,8.581129,8.754195,0.692678,4.067434,-0.055287],[4.633626,6.518223,5.522372,-3.086175,5.796770,-8.269437],[0.659444,2.106925,-1.560348,-6.766125,-2.853801,6.994088],[-6.926753,-9.517012,1.721290,4.324352,-4.162292,-5.489856],[-9.911694,5.674237,-1.205918,-0.633857,0.250243,-2.835367],[1.314503,-8.984903,-2.079449,2.867931,-4.526822,4.271010],[-4.462717,5.185600,9.962901,-9.560962,-2.093415,0.144982],[1.262854,-7.053295,-5.572714,2.677637,-6.218000,8.587612],[0.981849,7.919422,-6.108296,8.029751,3.851734,-6.994926],[9.070972,-3.532008,-0.261095,-2.585523,-0.688066,-8.909652],[-1.560258,-3.836374,7.450651,6.488318,-5.472747,3.100296],[7.621223,5.821872,2.655595,9.026152,8.662178,-3.754639],[-4.737601,5.784176,5.559699,7.747517,4.712762,-7.153716],[6.886692,-2.261212,-6.552272,8.312171,-1.382364,7.352481],[-2.205479,-1.025262,-3.169223,2.999390,-3.330744,3.176057],[3.568865,8.453678,-6.853363,0.973791,5.180031,0.501298],[5.560545,-8.930706,-1.825145,2.273341,-1.081407,-9.334080],[-2.060456,4.194551,-4.101073,6.045149,5.411663,8.181473],[-5.472062,-5.261109,-2.824576,-5.228376,-6.385485,8.266202],[-1.814845,6.970268,3.384329,8.742645,3.314106,-4.485834],[-5.628452,4.315439,-8.473526,0.291503,-3.163277,-5.381585],[-8.560786,-1.545797,0.327717,7.361481,1.210708,9.837718],[-0.395036,-7.056894,6.792081,1.327953,-2.237096,-9.943276],[2.595102,-6.848142,3.262019,-6.121997,1.569347,-0.184889],[9.924602,-1.421975,-8.586310,6.141126,-0.500620,-9.502268],[-8.672596,2.478220,0.032366,8.368577,-9.296081,-5.799754],[-0.205857,3.480870,8.207268,5.678616,3.858162,5.855421],[7.361162,-9.417398,6.132283,4.780436,-9.695864,-4.430687],[-8.045682,6.176019,9.715941,-3.257900,-0.152580,2.324394],[8.517931,-6.019660,-6.829776,-5.443971,-2.901745,-4.059826],[-1.446249,6.959965,-4.235411,-9.519596,5.647312,1.891143],[2.104203,0.135386,5.982414,2.622901,5.157188,4.356338],[-5.209851,3.654432,-1.773305,-6.773549,7.788774,-5.539163],[8.707256,4.417850,-1.640933,-3.460254,-1.688708,1.136802],[-6.115483,1.523175,7.469547,-8.385504,-0.257289,-2.757638],[6.373293,9.139834,6.512015,-3.883628,-9.481435,3.948872],[8.930780,-0.200056,7.514264,1.770895,6.564500,4.229830],[-4.003569,-2.230599,7.915619,4.874948,3.804705,-5.672522],[-1.793506,5.725876,-0.446012,3.542487,-6.138006,0.097963],[-2.437826,-8.234955,1.146224,-1.615560,8.727486,1.564514],[9.415210,5.215036,3.450814,2.556290,-0.645372,6.790870],[-1.431710,-9.983784,-4.875950,-6.311455,5.059241,-0.289470],[5.221312,-1.988525,3.262361,9.877142,-3.135011,0.400982],[-6.049863,-8.529064,-2.195503,2.366262,-6.968523,4.672070],[-2.088949,7.304852,-6.354916,-5.740495,-9.607593,-4.299917],[-8.587728,6.545644,-9.291415,2.678740,6.456057,-3.656972],[2.858516,-3.206967,1.944511,-0.630627,-2.874296,4.212572],[-5.632688,-9.075985,-7.264610,-3.514757,-5.962681,-7.073466],[9.130454,-1.347071,4.075355,-6.975130,-0.555874,-5.122524],[-7.628372,6.809089,4.660615,-0.119209,4.426839,-1.267147],[0.387433,-9.363830,-7.284002,7.135916,-3.672221,0.203229],[-2.568766,-6.319148,-7.817099,-4.660443,-9.148027,9.623776],[7.518228,7.244030,-1.810235,-2.651742,-4.266499,-6.514555],[0.557201,-1.914071,8.722991,6.325431,7.409256,-0.534527],[9.430191,9.867109,9.102145,6.325446,-5.308830,8.222240],[-3.268366,-2.063413,-9.360601,-6.538265,-7.627351,-4.533675]], dtype = "float32")#candidate|7688|(480, 6)|const|float32
call_7687 = relay.TupleGetItem(func_3391_call(relay.reshape(const_7688.astype('float32'), [16, 15, 12]), relay.reshape(const_7674.astype('bool'), [385,]), ), 2)
call_7689 = relay.TupleGetItem(func_3395_call(relay.reshape(const_7688.astype('float32'), [16, 15, 12]), relay.reshape(const_7674.astype('bool'), [385,]), ), 2)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_7690 = relay.TupleGetItem(func_4671_call(), 0)
call_7691 = relay.TupleGetItem(func_4672_call(), 0)
func_7396_call = mod.get_global_var('func_7396')
func_7397_call = mutated_mod.get_global_var('func_7397')
call_7695 = relay.TupleGetItem(func_7396_call(), 0)
call_7696 = relay.TupleGetItem(func_7397_call(), 0)
func_6936_call = mod.get_global_var('func_6936')
func_6937_call = mutated_mod.get_global_var('func_6937')
call_7698 = relay.TupleGetItem(func_6936_call(), 0)
call_7699 = relay.TupleGetItem(func_6937_call(), 0)
func_5245_call = mod.get_global_var('func_5245')
func_5247_call = mutated_mod.get_global_var('func_5247')
call_7700 = relay.TupleGetItem(func_5245_call(), 4)
call_7701 = relay.TupleGetItem(func_5247_call(), 4)
bop_7721 = relay.greater(call_7687.astype('bool'), const_7674.astype('bool')) # shape=(385,)
bop_7724 = relay.greater(call_7689.astype('bool'), const_7674.astype('bool')) # shape=(385,)
output = relay.Tuple([call_7666,call_7671,var_7672,const_7673,const_7688,call_7690,call_7695,call_7698,call_7700,bop_7721,])
output2 = relay.Tuple([call_7667,call_7675,var_7672,const_7673,const_7688,call_7691,call_7696,call_7699,call_7701,bop_7724,])
func_7732 = relay.Function([var_7672,], output)
mod['func_7732'] = func_7732
mod = relay.transform.InferType()(mod)
mutated_mod['func_7732'] = func_7732
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7733 = relay.var("var_7733", dtype = "int8", shape = ())#candidate|7733|()|var|int8
func_7732_call = mutated_mod.get_global_var('func_7732')
call_7734 = func_7732_call(var_7733)
output = call_7734
func_7735 = relay.Function([var_7733], output)
mutated_mod['func_7735'] = func_7735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6757_call = mod.get_global_var('func_6757')
func_6758_call = mutated_mod.get_global_var('func_6758')
call_7737 = relay.TupleGetItem(func_6757_call(), 0)
call_7738 = relay.TupleGetItem(func_6758_call(), 0)
output = relay.Tuple([call_7737,])
output2 = relay.Tuple([call_7738,])
func_7740 = relay.Function([], output)
mod['func_7740'] = func_7740
mod = relay.transform.InferType()(mod)
mutated_mod['func_7740'] = func_7740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7740_call = mutated_mod.get_global_var('func_7740')
call_7741 = func_7740_call()
output = call_7741
func_7742 = relay.Function([], output)
mutated_mod['func_7742'] = func_7742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5177_call = mod.get_global_var('func_5177')
func_5179_call = mutated_mod.get_global_var('func_5179')
call_7762 = relay.TupleGetItem(func_5177_call(), 0)
call_7763 = relay.TupleGetItem(func_5179_call(), 0)
func_4825_call = mod.get_global_var('func_4825')
func_4829_call = mutated_mod.get_global_var('func_4829')
const_7775 = relay.const([9,8,7,-1,7,-7,-9,-9,-3,2,6,5,-6,-1,7,5,-3,5,-8,-7,2,5,-2,-10,1,-10,-3,-6,-5,10,-8,7,-5,-3,3,-9,-3,-8,1,1,3,8,6,7,-2,5,-9,3,-7,8,-4,6,-3,4,6,5,-7,-5,8,6,8,-2,-4,-10,9,2,9,3,-6,-8,-10,-2,-8,2,1,-8,7,-4,2,3,-6,-7,7,-8,4,-5,-9,-3,-6,-10,3,5,-7,3,5,-3,5,7,-9,-4,1,9,-10,4,9,2,2,-4,-6,-10,-4,-3,4,-2,-5,6,-8,3,-9,-4,2,10,3,5,-10,-2,8,5,7,5,-4,7,5,-9,-10,-5,-9,6,-1,-3,6,7,-5,7,10,4,-10,7,5,-4,-7,5,5,9,-2,9,10,-3,-10,6], dtype = "int16")#candidate|7775|(160,)|const|int16
call_7774 = relay.TupleGetItem(func_4825_call(relay.reshape(const_7775.astype('int16'), [16, 5, 2]), relay.reshape(const_7775.astype('int16'), [16, 5, 2]), ), 0)
call_7776 = relay.TupleGetItem(func_4829_call(relay.reshape(const_7775.astype('int16'), [16, 5, 2]), relay.reshape(const_7775.astype('int16'), [16, 5, 2]), ), 0)
func_4568_call = mod.get_global_var('func_4568')
func_4572_call = mutated_mod.get_global_var('func_4572')
const_7781 = relay.const([3,-5,3,7,8,-3,-3,1,-10,7,6,2,1,2,-3,8,-6,9,1,-3,9,-7,6,-10,10,4,-9,9,2,-3,-10,-3,4,-8,-9,-5,-8,-3,-2,-1,-2,-10,3,8,-1,-10,-2,9,-4,2,-9,2,-9,2,-9,6,7,-10,-7,8,1,-1,1,-10,9,8,1,5,-6,3,-9,-5,-7,9,-5,-4,-4,-1,4,-2,5,1,2,8,-3,3,2,-8,-5,4,3,8,10,-4,1,7,6,2,4,-5,-10,8,-6,-10,-3,-3,-2,-6,2,-7,4,1,-4,7,4,6,10,-6,2,7], dtype = "int64")#candidate|7781|(120,)|const|int64
call_7780 = relay.TupleGetItem(func_4568_call(relay.reshape(const_7781.astype('int64'), [4, 2, 15]), relay.reshape(const_7781.astype('int64'), [4, 2, 15]), ), 2)
call_7782 = relay.TupleGetItem(func_4572_call(relay.reshape(const_7781.astype('int64'), [4, 2, 15]), relay.reshape(const_7781.astype('int64'), [4, 2, 15]), ), 2)
output = relay.Tuple([call_7762,call_7774,const_7775,call_7780,const_7781,])
output2 = relay.Tuple([call_7763,call_7776,const_7775,call_7782,const_7781,])
func_7789 = relay.Function([], output)
mod['func_7789'] = func_7789
mod = relay.transform.InferType()(mod)
output = func_7789()
func_7790 = relay.Function([], output)
mutated_mod['func_7790'] = func_7790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5410_call = mod.get_global_var('func_5410')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_7813 = func_5410_call()
call_7814 = func_5410_call()
func_7264_call = mod.get_global_var('func_7264')
func_7266_call = mutated_mod.get_global_var('func_7266')
call_7821 = relay.TupleGetItem(func_7264_call(), 1)
call_7822 = relay.TupleGetItem(func_7266_call(), 1)
func_6600_call = mod.get_global_var('func_6600')
func_6606_call = mutated_mod.get_global_var('func_6606')
const_7833 = relay.const([-7.051348,-5.933407,6.676484,7.843043,7.601897,-4.706918,1.512964,1.358419,5.995068,7.473388,5.949090,8.633874,8.240651,-6.169561,-9.096274,0.615667,-1.117508,8.813994,0.639189,9.131689,3.930910,-8.412635,-7.626048,-5.078435,2.869291,8.326013,4.876599,-2.162923,8.911497,6.676191,6.169750,-0.646685,-5.994662,2.407872,-2.781420,-1.764629,-7.647907,-2.633605,6.586635,-2.449271,-5.119215,1.060728,-5.088268,9.813749,-1.025382,-1.577604,0.598281,-7.358167,-8.556908,9.309680,-4.986884,4.680138,8.491097,5.370063,-5.666997,7.565557,-8.385755,5.218175,-8.533479,-9.983648,7.619492,-1.589970,-2.400269,8.993501,-7.388169,4.005330,-7.488067,-2.816134,2.997471,-2.149924,1.643754,-5.109894,9.285511,3.265439,-1.563969,-0.447654,-6.105210,-7.115641,3.302345,7.585741,9.596054,1.168679,4.462001,1.664911,9.262679,9.437407,6.367342,-1.248220,7.338575,-7.106588,-0.154364,8.219831,-9.621163,7.004642,0.682486,2.623654,1.192876,6.483867,-4.752905,1.293222,-7.521033,2.805208,5.870008,-3.560074,8.767952,-4.808576,-9.808522,-1.550402,-1.103060,-4.269372,-5.694176,-9.572056,-6.342994,2.509689,-5.697672,7.923759,0.472888,-5.572042,-9.943716,3.417138,8.185665,7.731036,6.766701,-5.340274,6.045528,-9.831160,0.331890,-4.445668,-9.914515,-6.320482,-6.279311,8.875579,-5.575390,-8.983391,5.044907,-1.806402,-8.312187,-0.971186,4.392772,5.932003,2.891710,0.149266,-7.486933,1.163650,0.466842,0.035781,2.234664,0.147638,-4.968743,-5.503056,1.696076,-4.707599,0.114960,3.092776,-8.361536,3.565739,-1.029244,-2.381514,-8.427389,8.506343,3.880023,-5.301397,-8.921886,6.515418,0.194767,-9.483777,-3.004014,-8.349354,0.294868,1.453375,-6.113101,7.196671,2.070914,4.211841,7.842640,1.067846,7.643416,3.250283,5.746255,-3.352636,1.938426,1.545740,-6.184605,2.550139,6.954929,3.560273,8.439135,0.382659,-4.357645,8.619791,8.165345,-6.622570,-3.905449,-9.119505,-1.207140,-0.062468,6.171833,-2.540856,-4.021989,8.743099,-2.008451,5.710979,-4.472780,-8.572732,-0.710252,-7.195619,-9.247778,-7.091742,2.532142,-1.733646,-8.751928,0.360910,-2.063024,8.324922,7.398541,-9.788146,8.608707,5.234976,-6.978441,-1.099284,2.519815,6.268737,5.867738,-6.405345,-5.042522,5.713353,-9.479384,5.673415,-6.560428,9.438683,7.198256,3.242062,7.554791,-3.917530,-0.091148,-2.729178,-1.488842,1.920985,-5.118147,-5.892692,-7.263225,1.624439,-6.852941,2.121082,3.422323,-1.057681,-6.274910,2.364455,-5.813695,-1.462183,-8.054814,3.231462,-1.191910,-0.639622,-4.477409,9.111014,-4.292243,2.927267,0.060656,8.361787,5.086267,-1.231375,6.050118,-0.198955,6.773982,-8.865989,5.960731,-8.928142,-3.123010,-1.263429,6.962723,5.082710,-2.393355,-0.401710,9.286643,-4.431173,4.228693,6.626765,-6.929314,5.918743,-7.409736,0.969120,4.783687,5.214331,5.003914,-4.968614,3.292173,-7.954916,9.877271,-4.063425,8.701153,8.689890,7.563495,2.580642,-0.273258,8.274142,0.250237,5.274239,4.112592,-3.810044,-7.044210,2.959733,9.387541,-4.853303,3.033180,5.283338,5.259694,9.158829,0.373293,2.991366,6.474486,-5.851993,6.810144,6.294861,-6.960702,2.895515,1.717783,6.458188,5.991822,4.948202,-4.512723,6.766167,6.116286,-4.692159,7.058993,2.309945,-9.490337,1.913645,5.582314,-9.612991,2.086447,-2.155192,6.946789,9.610328,5.553915,2.592864,7.983436,-2.363385,7.961343,-6.111797,-9.080958,-6.373194,7.550068,-4.187604,-6.719284,1.733780,9.621841,-2.535843,0.925315,7.900725,-4.695820,-6.254583,0.609537,1.167717,5.190102,6.504328,8.938128,-7.066742,-5.504537,3.255075,-7.454312,-6.067605,-4.441408,-2.073368,-3.881397,5.233313,-5.919853,-8.256408,-8.816939,-1.632001,8.370406,8.274444,5.229095,-6.337848,-8.723690,2.435202,-7.459369,-9.454243,-6.015022,-2.012863,-3.560640,-8.731080,8.957540,-5.830558,-0.783119,9.085283,1.908403,-8.226350,-7.587224,-9.431827,-3.147571,2.906699,8.776887,4.274186,-9.376850,-3.441523,9.568791,9.795889,4.892171,-6.773627,3.479857,-0.608678,-9.996836,0.876128,7.444460,-7.027282,3.776635,-3.792020,2.128832,9.786284,9.998484,2.410190,-5.485273,8.114253,-1.025790,1.934278,3.184802,-3.419296,-3.444123,-4.419857,9.581475,4.838324,7.632566,9.768684,7.234839,-1.602841,-1.453687,-6.502479,9.790541,1.651394,1.616830,1.059241,-3.168131,3.635888,5.049728,-2.289049,-7.561940,-0.954677,8.955197,-1.338536,-0.291248,2.705613,-0.251333,3.912162,3.607694,-3.025712,1.930551,6.039341,8.044566,-4.196563,-0.060687,-8.572795,-7.514269,-3.755774,-7.691876,-6.200118,-9.081841,-6.070347,8.766269,-7.625219,-7.779222,-7.926755,-4.126965,2.385813,-0.888794,-9.336700,-6.789734,5.189858,8.630318,-8.385522,-1.938346,-4.821214,-6.934635,-1.719573,-6.739066,-8.608582,3.485761,-3.570805,-8.243619,9.314781,0.813098,6.686747,-8.263802,-9.257377,6.171324,-6.291710,-7.225434,-3.738614,8.421232,-0.168089,7.812218,-5.402379,3.140434,-2.434559,-5.778408,-9.320376,0.935176,7.124826,-3.893592,-8.652838,-0.593207,-6.524605,0.147847,0.209388,9.485013,8.111850,-3.800501,8.734191,-8.390966,4.231292,9.993981,2.638945,1.203239,3.136980,-3.233574,9.673933,-5.494696,5.990216,-7.776134,-4.046013,4.798999,-0.961764,6.354060,5.941745,2.601069,-0.611786,9.998285,-0.661837,-6.449476,-2.960620,8.364993,3.875413,8.157711,8.181402,2.523208,5.956007,1.872391,-8.643441,7.150844,1.638099,-8.811932,-9.336000,6.225782,-7.562236,-6.620018,-3.960760,4.225057,1.119594,6.520567,-5.359763,-5.573521,9.586671,-7.105022,-6.264128,8.602869,-4.062834,3.271196,3.809033,3.699523,-7.455547,7.743801,7.220081,-1.162857,5.390788,-1.549224,-1.876159,-9.174705,-4.538790,8.682215,-7.693627,-0.482650,-9.727133,4.342473,-6.423498,0.361935,-3.198398,-4.809912,2.944852,-6.501463,-4.855449,4.165370,4.738132,-3.070633,-1.191910,-0.520130,-9.935461,5.473284,-9.092709,7.866352,-3.509863,4.104145,7.234925,-8.081996,-3.415338,5.330258,8.171292,9.246387,-1.692346,9.044592,1.266895,-1.892124,-6.996903,-4.464453,-9.235769,-0.174377,8.127185,-0.216975,2.059508,9.803301,0.686205,-3.427293,7.496118,-3.333161,1.530898,-1.610553,0.803014,-6.752168,4.899995,8.902190,-7.402010,-9.111836,5.279688,-1.208098,1.901149,3.333574,1.096957,-2.244243,8.476416,-7.579694,-5.340723], dtype = "float32")#candidate|7833|(630,)|const|float32
var_7834 = relay.var("var_7834", dtype = "bool", shape = (385,))#candidate|7834|(385,)|var|bool
const_7835 = relay.const([-3,-3,-8,8,6,-5,8,-8,8,-2,-5,-2,7,-5,-4,-6,5,5,-6,7,-9,-10,8,1,-9,-10,10,-3,-10,1,-7,10,-8,7,-1,6,7,-6,-4,-2,-8,7,-4,4,-9,9,-3,1,-5,-7,-1,6,-7,-2,7,-3,-6,-4,3,8,2,1,8,9,8,-2,7,8,10,8,-4,4,-3,4,-6,-7,2,4,-10,3,-8,-9,-3,-2,7,-10,-1,4,-3,-10,-3,-7,-5,-4,5,2,-4,-2,-10,-8,4,-9,-4,-9,-5,6,-5,2,-6,-4,-4,6,-9,-5,-5,-5,2,-4,-1,5,-1,4,6,6,10,2,-8,4,-9,6,3,-2,9,1,-8,-4,7,-7,-3,4,-6,-9,-7,4,3,1,-3,-9,9,-10,8,10,-3,-8,-3,-10,-1,3,-4,-5,7,1,10,-10,-3,10,6,9,-6,-6,1,7,-6,1,7,7,3,2,1,4,6,-7,5,-4,5,1,-7,-10,-9,3,7,8,1,5,5,7,-7,-4,10,-3,-9,3,-1,6,-1,3,-10,-10,-2,4,8,9,-6,8,-2,-3,3,6,8,-5,-3,-9,-1,6,7], dtype = "int8")#candidate|7835|(225,)|const|int8
const_7836 = relay.const([1,-3,-8,5,1,-2,5,-2,1,3,6,-9,-4,2,-4,9,10,4,-4,-7,-8,-1,6,5,-9,-1,4,-5,4,-2,-4,-6,4,2,9,-2,8,-10,-5,4,-5,10,-5,-8,4,-9,-10,3,-7,1,-4,-2,4,-9,-9,4,7,5,-1,-3,4,3,9,9,9,-1,-3,-5,7,8,8,1,-10,-7,1,5,-4,-9,-6,-6,-6,-10,-3,8,1,-7,-9,-4,7,1,-3,-1,-7,-9,-9,-8,3,-6,2,-6,1,4,4,-1,1,-8,10,-3,-2,-10,7,-5,-5,-9,-6,-4,10,9,5,-4,-1,3,2,8,8,4,-5,8,-2,9,-1,5,10,-5,3,1,2,5,10,9,-9,-3,-1,-6,-7,-1,9,-10,-9,4,-2,5,-9,-9,4,-6,8,9,2,4,-4,8,10,-4,10,-10,5,8,6,4,5,4,1,5,-1,-3,-2,8,-6,1,-2,-10,-8,2,6,-5,8,-4,-5,4,-8,10,-5,-3,3,-1,-7,-2,1,-1,2,8,5,10,-3,-5,9,-2,-8,-7,3,5,-9,6,-3,-7,-3,6,8,-8,-8,3,-2,4,-4,-10,1,6,4,-1,7,3,-4,-7,-5,-7,-10,2,7,-2,1,7,-9,3,3,2,4,9,4,-2,3,-4,2,-6,4,-10,-2,-8,-10,-2,-6,4,-2,10,10,-7,-3,-7,6,4,3,-8,10,6,8,-2,4,6,8,-2,-10,-3,-7,-10,6,-7,-7,-6,1,-7,-9,3,7,-9,-7,-5,-7,2,1,-1,5,9,-2,-10,-6,2,-10,-1,6,1,-1,2,7,4,-7,8,-4,5,4,9,-6,7,9,10,10,-1,-8,-8,9,4,8,10,-10,8,-4,-4,-1,4,-1,-5,6,1,-1,2,5,-7,-9,-5,-4,1,-1,8,-5,1,-9,-8,-6,-2,2,-6,9,9,10,4,-10,-4,9,-4,8,-4,-6,3,-3,-7,-8,-1,-6,-4,-8,-2,5,-9,10,3,-1,-5,1,-6,-3,-9,-8,8,5,-10,-10,1,-8,4,-6,-8,-3,-3,-10,-9,4,2,2,-5,9,2,-8,9,-5,-8,9,9,8,6,-3,-9,-3,-10,-8,-2,2,10,-6,8,1,2,1,-2,3,4,-1,4,3,-8,1,-10,3,3,-1,1,-6,-2,4,5,-9,5,2,-5,5,6,3,-9,9,6,-2,2,9,4,-9,3,7,-2,-1,-2,8,4,-5,10,2,4,10,-1,-3,4,-3,-1,-9,7,-10,8,-8,-1,-3,9,-6,9,-10,-7,-5,-6,-8,-9,10,8,-7,-7,-7,10,-9,5,-9,-3,7,3,-9,-2,-5,-5,-1,4,9,2,10,-6,-10,-6,9,9,9,10,10,6,-7,10,-6,-5,-6,1,-1,-6,-9,-10,-4,-4,3,-1,-8,-10,-8,10,-3,-10,-1,6,9,-3,-6,9,-5,3,9,-3,-8,9,-1,3,3,4,4,8,-4,4,-5,10,-7,10,-4,10,-5,-2,-9,4,-8,-8,10,8,8,-4,6,-2,6,9,-4,3,-10,-8,2,1,-2,-4,4,4,5,-4,1,-4,-10,6,1,-5,-6,10,-7,-8,9,-1,6,-6,5,-2,9,-3,8,-5,9,-2,7,3,-2,-4,4,7,-3,1,-6,-6,8,4,-1,6,2,-6,-9,-2,-1,3,2,-5,6,4,-6,7,-2,-9,1,-2,3,-2,7,3,-10,3,-10,-8,-4,-8,-7,-6,7,1,-1,3,-10,-6,8,-5,10,2,-6,-6,-5,1,-1,-10,-2,-8,-5,-9,-3,2,-6,10,4,-8,4,-1,2,10,8,-2,2,-5,1,2,9,-7,-8,5,-1,-2,-8,-2,4,-2,6,5,3,5,-4,-8,-10,9,2,-9,6,-5,-6,-3,-3,-5,10,-6,-9,-9,-9,-5,-3,-4,8,-7,-9,-9,3,5,8,4,-7,-4,-3,-7,-9,-9,7,-7,-1,9,9,4,9,-6,7,-6,-2,3,3,-8,-4,-5,2,-6,-8,-4,-5,7,-6,-3,-4,-1,9,-4,4,5,8,-9,-3,5,3,6,-8,2,-7,8,1,-10,3,-3,5,-5,7,5,-2,-1,2,3,-2,3,-9,3,-2,2,-10,-2,-2,-9,-4,1,7,-3,1,8,-10,-3,3,10,-2,1,-7,6,-2,10,-9,4,-5,6,2,9,8,2,9,-9,2,4,4,1,-5,4,4,-4,4,4,6,9,-5,-5,2,-7,3,6,-1,3,-7,-2,6,9,5,-7,7,5,8,-8,4,-7,-7,6,1,6,8,-9,3,4,3,1,9,4,7,-10,-9,10,1,8,5,9,3,10,8,-5,7,-5,-3,-6,4,1,-4,-1,-7,4,-2,-9,-3,-2,3,3,5,-6,10,-7,9,-6,-1,7,-8,3,-4,-5,-9,9,6,2,2,8,-2,-4,6,-6,-1,-6,4,6,-2,-6,-10,3], dtype = "int32")#candidate|7836|(936,)|const|int32
call_7832 = relay.TupleGetItem(func_6600_call(relay.reshape(const_7833.astype('float32'), [630,]), relay.reshape(var_7834.astype('bool'), [385,]), relay.reshape(const_7835.astype('int8'), [75, 3]), relay.reshape(const_7836.astype('int32'), [936,]), ), 8)
call_7837 = relay.TupleGetItem(func_6606_call(relay.reshape(const_7833.astype('float32'), [630,]), relay.reshape(var_7834.astype('bool'), [385,]), relay.reshape(const_7835.astype('int8'), [75, 3]), relay.reshape(const_7836.astype('int32'), [936,]), ), 8)
func_5392_call = mod.get_global_var('func_5392')
func_5395_call = mutated_mod.get_global_var('func_5395')
call_7842 = relay.TupleGetItem(func_5392_call(relay.reshape(call_7821.astype('float64'), [7, 4, 7]), relay.reshape(call_7821.astype('float32'), [7, 4, 7]), ), 0)
call_7843 = relay.TupleGetItem(func_5395_call(relay.reshape(call_7821.astype('float64'), [7, 4, 7]), relay.reshape(call_7821.astype('float32'), [7, 4, 7]), ), 0)
func_6786_call = mod.get_global_var('func_6786')
func_6789_call = mutated_mod.get_global_var('func_6789')
var_7845 = relay.var("var_7845", dtype = "int32", shape = ())#candidate|7845|()|var|int32
call_7844 = relay.TupleGetItem(func_6786_call(relay.reshape(var_7845.astype('int32'), [])), 0)
call_7846 = relay.TupleGetItem(func_6789_call(relay.reshape(var_7845.astype('int32'), [])), 0)
func_7264_call = mod.get_global_var('func_7264')
func_7266_call = mutated_mod.get_global_var('func_7266')
call_7875 = relay.TupleGetItem(func_7264_call(), 2)
call_7876 = relay.TupleGetItem(func_7266_call(), 2)
func_6757_call = mod.get_global_var('func_6757')
func_6758_call = mutated_mod.get_global_var('func_6758')
call_7885 = relay.TupleGetItem(func_6757_call(), 2)
call_7886 = relay.TupleGetItem(func_6758_call(), 2)
func_5392_call = mod.get_global_var('func_5392')
func_5395_call = mutated_mod.get_global_var('func_5395')
call_7887 = relay.TupleGetItem(func_5392_call(relay.reshape(call_7821.astype('float64'), [7, 4, 7]), relay.reshape(call_7844.astype('float32'), [7, 4, 7]), ), 2)
call_7888 = relay.TupleGetItem(func_5395_call(relay.reshape(call_7821.astype('float64'), [7, 4, 7]), relay.reshape(call_7844.astype('float32'), [7, 4, 7]), ), 2)
output = relay.Tuple([call_7813,call_7821,call_7832,const_7833,var_7834,const_7835,const_7836,call_7842,call_7844,var_7845,call_7875,call_7885,call_7887,])
output2 = relay.Tuple([call_7814,call_7822,call_7837,const_7833,var_7834,const_7835,const_7836,call_7843,call_7846,var_7845,call_7876,call_7886,call_7888,])
func_7894 = relay.Function([var_7834,var_7845,], output)
mod['func_7894'] = func_7894
mod = relay.transform.InferType()(mod)
mutated_mod['func_7894'] = func_7894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7894_call = mutated_mod.get_global_var('func_7894')
var_7896 = relay.var("var_7896", dtype = "bool", shape = (385,))#candidate|7896|(385,)|var|bool
var_7897 = relay.var("var_7897", dtype = "int32", shape = ())#candidate|7897|()|var|int32
call_7895 = func_7894_call(var_7896,var_7897,)
output = call_7895
func_7898 = relay.Function([var_7896,var_7897,], output)
mutated_mod['func_7898'] = func_7898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5087_call = mod.get_global_var('func_5087')
func_5089_call = mutated_mod.get_global_var('func_5089')
call_7902 = func_5087_call()
call_7903 = func_5087_call()
output = relay.Tuple([call_7902,])
output2 = relay.Tuple([call_7903,])
func_7914 = relay.Function([], output)
mod['func_7914'] = func_7914
mod = relay.transform.InferType()(mod)
mutated_mod['func_7914'] = func_7914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7914_call = mutated_mod.get_global_var('func_7914')
call_7915 = func_7914_call()
output = call_7915
func_7916 = relay.Function([], output)
mutated_mod['func_7916'] = func_7916
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7917 = relay.var("var_7917", dtype = "uint16", shape = (4, 15, 6))#candidate|7917|(4, 15, 6)|var|uint16
var_7918 = relay.var("var_7918", dtype = "uint16", shape = (4, 15, 6))#candidate|7918|(4, 15, 6)|var|uint16
bop_7919 = relay.left_shift(var_7917.astype('uint16'), relay.reshape(var_7918.astype('uint16'), relay.shape_of(var_7917))) # shape=(4, 15, 6)
func_7396_call = mod.get_global_var('func_7396')
func_7397_call = mutated_mod.get_global_var('func_7397')
call_7934 = relay.TupleGetItem(func_7396_call(), 0)
call_7935 = relay.TupleGetItem(func_7397_call(), 0)
func_4651_call = mod.get_global_var('func_4651')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_7966 = relay.TupleGetItem(func_4651_call(), 0)
call_7967 = relay.TupleGetItem(func_4652_call(), 0)
func_5691_call = mod.get_global_var('func_5691')
func_5696_call = mutated_mod.get_global_var('func_5696')
var_7970 = relay.var("var_7970", dtype = "int8", shape = (225,))#candidate|7970|(225,)|var|int8
var_7971 = relay.var("var_7971", dtype = "int32", shape = (936,))#candidate|7971|(936,)|var|int32
var_7972 = relay.var("var_7972", dtype = "float32", shape = (13, 55))#candidate|7972|(13, 55)|var|float32
call_7969 = relay.TupleGetItem(func_5691_call(relay.reshape(call_7966.astype('float32'), [7, 4, 7]), relay.reshape(var_7970.astype('int8'), [225,]), relay.reshape(var_7971.astype('int32'), [936,]), relay.reshape(var_7972.astype('float32'), [715,]), ), 2)
call_7973 = relay.TupleGetItem(func_5696_call(relay.reshape(call_7966.astype('float32'), [7, 4, 7]), relay.reshape(var_7970.astype('int8'), [225,]), relay.reshape(var_7971.astype('int32'), [936,]), relay.reshape(var_7972.astype('float32'), [715,]), ), 2)
output = relay.Tuple([bop_7919,call_7934,call_7966,call_7969,var_7970,var_7971,var_7972,])
output2 = relay.Tuple([bop_7919,call_7935,call_7967,call_7973,var_7970,var_7971,var_7972,])
func_7981 = relay.Function([var_7917,var_7918,var_7970,var_7971,var_7972,], output)
mod['func_7981'] = func_7981
mod = relay.transform.InferType()(mod)
mutated_mod['func_7981'] = func_7981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7981_call = mutated_mod.get_global_var('func_7981')
var_7983 = relay.var("var_7983", dtype = "uint16", shape = (4, 15, 6))#candidate|7983|(4, 15, 6)|var|uint16
var_7984 = relay.var("var_7984", dtype = "uint16", shape = (4, 15, 6))#candidate|7984|(4, 15, 6)|var|uint16
var_7985 = relay.var("var_7985", dtype = "int8", shape = (225,))#candidate|7985|(225,)|var|int8
var_7986 = relay.var("var_7986", dtype = "int32", shape = (936,))#candidate|7986|(936,)|var|int32
var_7987 = relay.var("var_7987", dtype = "float32", shape = (13, 55))#candidate|7987|(13, 55)|var|float32
call_7982 = func_7981_call(var_7983,var_7984,var_7985,var_7986,var_7987,)
output = call_7982
func_7988 = relay.Function([var_7983,var_7984,var_7985,var_7986,var_7987,], output)
mutated_mod['func_7988'] = func_7988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7288_call = mod.get_global_var('func_7288')
func_7289_call = mutated_mod.get_global_var('func_7289')
call_8008 = relay.TupleGetItem(func_7288_call(), 1)
call_8009 = relay.TupleGetItem(func_7289_call(), 1)
func_5410_call = mod.get_global_var('func_5410')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_8010 = func_5410_call()
call_8011 = func_5410_call()
uop_8022 = relay.cos(call_8008.astype('float32')) # shape=(7, 4, 7)
uop_8024 = relay.cos(call_8009.astype('float32')) # shape=(7, 4, 7)
func_5245_call = mod.get_global_var('func_5245')
func_5247_call = mutated_mod.get_global_var('func_5247')
call_8041 = relay.TupleGetItem(func_5245_call(), 4)
call_8042 = relay.TupleGetItem(func_5247_call(), 4)
func_4825_call = mod.get_global_var('func_4825')
func_4829_call = mutated_mod.get_global_var('func_4829')
var_8047 = relay.var("var_8047", dtype = "int16", shape = (8, 20))#candidate|8047|(8, 20)|var|int16
call_8046 = relay.TupleGetItem(func_4825_call(relay.reshape(var_8047.astype('int16'), [16, 5, 2]), relay.reshape(var_8047.astype('int16'), [16, 5, 2]), ), 0)
call_8048 = relay.TupleGetItem(func_4829_call(relay.reshape(var_8047.astype('int16'), [16, 5, 2]), relay.reshape(var_8047.astype('int16'), [16, 5, 2]), ), 0)
func_5691_call = mod.get_global_var('func_5691')
func_5696_call = mutated_mod.get_global_var('func_5696')
var_8056 = relay.var("var_8056", dtype = "int8", shape = (225,))#candidate|8056|(225,)|var|int8
const_8057 = relay.const([7,2,10,5,-8,-8,-3,-5,6,7,4,-10,-5,-9,9,6,-5,-3,-2,8,3,2,-5,-1,7,-2,-5,3,7,-1,-1,4,7,-2,8,-2,4,-8,-1,3,-6,8,-9,-3,4,-7,-3,10,10,1,-1,-10,-7,7,9,7,-5,9,7,-2,-8,-5,-10,2,-10,-10,8,-8,-10,6,-5,7,9,3,9,-6,-6,9,7,-6,6,9,-5,2,2,-5,10,-6,-7,4,6,-3,2,-8,3,7,-1,-7,3,-4,-7,5,-2,-8,-2,6,-4,-10,-1,7,-4,5,-3,4,2,-5,6,10,-1,-8,3,-10,-3,5,-1,-7,-9,2,7,-9,1,-9,4,-6,8,-7,-6,-9,-9,2,-7,7,-5,1,3,10,6,5,-9,-6,-5,-9,9,-9,-2,-10,-3,-6,-4,-8,-9,-4,-8,-4,10,-5,2,-7,9,1,8,-2,-8,7,7,10,-4,10,3,-8,-5,-9,6,-10,-1,-6,-4,-10,-7,4,-4,10,9,1,-6,-9,3,-10,6,-4,2,-8,10,-9,-6,-3,-7,10,4,10,-2,3,-8,2,4,3,-8,2,-8,7,6,-6,-4,1,-10,10,-1,-5,7,-5,5,-6,-6,3,3,-1,9,-2,-6,2,5,7,-6,-6,-10,-5,6,10,-2,-9,-2,-4,8,3,-8,-1,7,-8,10,8,-3,-7,-2,3,1,-9,-2,5,8,5,4,-8,4,6,7,6,-4,-1,3,2,-7,6,-5,-9,-10,8,10,5,-1,-8,2,10,-8,-4,-6,4,9,-3,2,9,6,-5,5,-10,8,9,-3,-8,2,3,-10,3,10,6,-8,3,-6,10,-8,-10,-10,8,9,-6,8,1,10,-9,-2,10,2,5,2,9,-6,6,-9,-9,2,1,9,-10,-8,9,4,3,5,-5,-1,-8,-5,-3,1,-7,1,5,-10,9,3,-1,9,4,9,-10,-4,-1,3,7,8,-8,-2,1,5,-1,9,-7,7,2,-3,-8,1,7,-3,-9,-8,2,-8,-3,4,-5,-7,1,6,-10,6,-7,9,-4,-2,-7,-9,-2,1,-4,-9,-8,-3,-10,4,9,10,-8,2,3,-2,4,-9,-10,2,-7,-3,7,6,5,7,-10,2,6,-10,7,7,-5,10,7,1,10,1,-10,-5,8,10,1,-6,5,-5,-7,-6,9,10,-7,-1,5,-6,-10,-1,-5,6,5,2,-7,-4,1,9,-5,7,-1,9,-2,-2,-8,-1,-6,-10,9,10,-10,10,-6,1,-9,-3,7,-6,-9,-1,1,-1,-9,7,4,3,4,5,-4,1,-5,4,6,-2,8,3,7,6,8,5,-3,-8,-2,6,9,9,-2,5,3,-5,3,8,-6,8,-10,-6,9,-9,-6,7,2,9,-7,4,-4,-10,-8,8,5,-8,7,7,7,-9,10,-6,9,8,2,5,2,-4,6,-6,8,-5,7,2,-7,-5,-6,1,8,1,-3,9,-2,6,7,-8,-6,-1,-2,-7,6,5,-4,-7,-6,-6,5,-4,10,-6,2,3,6,2,-9,-6,-2,-6,7,-3,-2,-4,6,-5,-8,5,-4,9,-2,-7,-2,5,5,-2,-7,-7,-6,7,9,-8,2,6,-10,7,5,-5,8,-3,-3,7,-2,10,-5,9,8,10,9,-9,8,2,-9,-2,-9,10,-2,4,9,-3,1,-2,-7,3,6,-6,-6,-2,7,2,3,-8,6,10,-5,4,4,7,8,-9,9,-3,-8,-2,10,-1,-5,-7,-2,-10,9,3,10,7,9,2,-5,-5,-9,10,-10,-10,1,-9,4,9,3,-9,1,1,-3,-8,-8,-3,-9,-4,-5,7,4,8,3,-3,7,-9,7,-8,3,-1,8,-5,9,7,6,8,8,-7,-1,-9,-10,9,-8,-2,-7,-1,-8,-2,-10,9,-3,-5,4,3,-10,-6,-3,-2,5,4,-6,7,-3,-9,9,8,-6,2,5,-7,-10,-9,-9,-3,-4,6,-2,-2,-5,-10,2,6,-3,9,-6,4,9,-6,-4,-5,-6,6,8,-6,2,5,6,-3,-2,6,1,3,-3,10,-7,-6,8,2,-4,6,6,2,-5,-2,9,4,-10,-10,5,2,7,-7,-10,10,9,9,-9,9,6,-2,9,-5,-2,-4,6,-9,2,7,-6,7,5,3,7,-10,3,-7,8,3,-6,-7,1,-5,-3,-6,-1,6,-8,-2,1,7,-5,-8,6,-3,8,-5,9,3,-2,2,-3,9,-7,8,2,2,2,10,-1,10,-4,-10,5,-4,-4,10,7,3,-8,-2,8,8,3,-10,1,-4,5,8,7,8,-10,-3,8,9,-6,-10,4,-6,8,-3,-6,-3,-1,4,5,-3,2,2,-1,8,3,-6,8,5,-10,4,-5,8,10,-6,-3,1,-7,5,-5,7,-3,-6,5,-6,8,-10,8,1,-9,4,7,7,-10,2,-7,5,10,-10,3,-9,-7,5,8,-5,4], dtype = "int32")#candidate|8057|(936,)|const|int32
var_8058 = relay.var("var_8058", dtype = "float32", shape = (715,))#candidate|8058|(715,)|var|float32
call_8055 = relay.TupleGetItem(func_5691_call(relay.reshape(call_8010.astype('float32'), [7, 4, 7]), relay.reshape(var_8056.astype('int8'), [225,]), relay.reshape(const_8057.astype('int32'), [936,]), relay.reshape(var_8058.astype('float32'), [715,]), ), 2)
call_8059 = relay.TupleGetItem(func_5696_call(relay.reshape(call_8010.astype('float32'), [7, 4, 7]), relay.reshape(var_8056.astype('int8'), [225,]), relay.reshape(const_8057.astype('int32'), [936,]), relay.reshape(var_8058.astype('float32'), [715,]), ), 2)
func_4750_call = mod.get_global_var('func_4750')
func_4753_call = mutated_mod.get_global_var('func_4753')
const_8063 = relay.const([7,-6,7,-2,3,4,8,4,-4,-4,-2,3,-9,5,5,1,-9,4,2,4,5,-5,-9,10,-3,-10,-5,-5,4,-10,-5,3,-7,9,-1,7,2,3,-1,7,-7,-9,2,7,-1,4,-7,1,4,-5,4,2,-4,-1,6,-8,-7,-5,10,-6,8,-8,-7,-9,8,5,-6,2,-2,6,3,10,1,-10,9], dtype = "int8")#candidate|8063|(75,)|const|int8
call_8062 = relay.TupleGetItem(func_4750_call(relay.reshape(const_8063.astype('int8'), [1, 75])), 1)
call_8064 = relay.TupleGetItem(func_4753_call(relay.reshape(const_8063.astype('int8'), [1, 75])), 1)
func_2094_call = mod.get_global_var('func_2094')
func_2099_call = mutated_mod.get_global_var('func_2099')
var_8074 = relay.var("var_8074", dtype = "int8", shape = ())#candidate|8074|()|var|int8
call_8073 = relay.TupleGetItem(func_2094_call(relay.reshape(var_8074.astype('int8'), []), relay.reshape(const_8063.astype('int8'), [15, 1, 5]), relay.reshape(call_8062.astype('bool'), [385,]), ), 3)
call_8075 = relay.TupleGetItem(func_2099_call(relay.reshape(var_8074.astype('int8'), []), relay.reshape(const_8063.astype('int8'), [15, 1, 5]), relay.reshape(call_8062.astype('bool'), [385,]), ), 3)
output = relay.Tuple([call_8010,uop_8022,call_8041,call_8046,var_8047,call_8055,var_8056,const_8057,var_8058,call_8062,const_8063,call_8073,var_8074,])
output2 = relay.Tuple([call_8011,uop_8024,call_8042,call_8048,var_8047,call_8059,var_8056,const_8057,var_8058,call_8064,const_8063,call_8075,var_8074,])
func_8089 = relay.Function([var_8047,var_8056,var_8058,var_8074,], output)
mod['func_8089'] = func_8089
mod = relay.transform.InferType()(mod)
mutated_mod['func_8089'] = func_8089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8089_call = mutated_mod.get_global_var('func_8089')
var_8091 = relay.var("var_8091", dtype = "int16", shape = (8, 20))#candidate|8091|(8, 20)|var|int16
var_8092 = relay.var("var_8092", dtype = "int8", shape = (225,))#candidate|8092|(225,)|var|int8
var_8093 = relay.var("var_8093", dtype = "float32", shape = (715,))#candidate|8093|(715,)|var|float32
var_8094 = relay.var("var_8094", dtype = "int8", shape = ())#candidate|8094|()|var|int8
call_8090 = func_8089_call(var_8091,var_8092,var_8093,var_8094,)
output = call_8090
func_8095 = relay.Function([var_8091,var_8092,var_8093,var_8094,], output)
mutated_mod['func_8095'] = func_8095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7622_call = mod.get_global_var('func_7622')
func_7624_call = mutated_mod.get_global_var('func_7624')
call_8106 = relay.TupleGetItem(func_7622_call(), 0)
call_8107 = relay.TupleGetItem(func_7624_call(), 0)
func_6656_call = mod.get_global_var('func_6656')
func_6657_call = mutated_mod.get_global_var('func_6657')
call_8164 = relay.TupleGetItem(func_6656_call(), 0)
call_8165 = relay.TupleGetItem(func_6657_call(), 0)
output = relay.Tuple([call_8106,call_8164,])
output2 = relay.Tuple([call_8107,call_8165,])
func_8173 = relay.Function([], output)
mod['func_8173'] = func_8173
mod = relay.transform.InferType()(mod)
output = func_8173()
func_8174 = relay.Function([], output)
mutated_mod['func_8174'] = func_8174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4651_call = mod.get_global_var('func_4651')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_8183 = relay.TupleGetItem(func_4651_call(), 0)
call_8184 = relay.TupleGetItem(func_4652_call(), 0)
output = call_8183
output2 = call_8184
func_8219 = relay.Function([], output)
mod['func_8219'] = func_8219
mod = relay.transform.InferType()(mod)
output = func_8219()
func_8220 = relay.Function([], output)
mutated_mod['func_8220'] = func_8220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7322_call = mod.get_global_var('func_7322')
func_7323_call = mutated_mod.get_global_var('func_7323')
call_8241 = func_7322_call()
call_8242 = func_7322_call()
func_5177_call = mod.get_global_var('func_5177')
func_5179_call = mutated_mod.get_global_var('func_5179')
call_8244 = relay.TupleGetItem(func_5177_call(), 0)
call_8245 = relay.TupleGetItem(func_5179_call(), 0)
func_2094_call = mod.get_global_var('func_2094')
func_2099_call = mutated_mod.get_global_var('func_2099')
var_8249 = relay.var("var_8249", dtype = "int8", shape = ())#candidate|8249|()|var|int8
var_8250 = relay.var("var_8250", dtype = "int8", shape = (75,))#candidate|8250|(75,)|var|int8
const_8251 = relay.const([False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True], dtype = "bool")#candidate|8251|(385,)|const|bool
call_8248 = relay.TupleGetItem(func_2094_call(relay.reshape(var_8249.astype('int8'), []), relay.reshape(var_8250.astype('int8'), [15, 1, 5]), relay.reshape(const_8251.astype('bool'), [385,]), ), 2)
call_8252 = relay.TupleGetItem(func_2099_call(relay.reshape(var_8249.astype('int8'), []), relay.reshape(var_8250.astype('int8'), [15, 1, 5]), relay.reshape(const_8251.astype('bool'), [385,]), ), 2)
func_6430_call = mod.get_global_var('func_6430')
func_6432_call = mutated_mod.get_global_var('func_6432')
call_8259 = relay.TupleGetItem(func_6430_call(relay.reshape(var_8249.astype('int32'), [])), 2)
call_8260 = relay.TupleGetItem(func_6432_call(relay.reshape(var_8249.astype('int32'), [])), 2)
func_4568_call = mod.get_global_var('func_4568')
func_4572_call = mutated_mod.get_global_var('func_4572')
const_8262 = relay.const([-8,2,-3,6,3,-7,2,-6,10,2,-6,-3,-7,-4,-8,1,-6,-7,-1,6,1,-8,9,-10,5,-3,2,5,5,-10,-4,8,-1,8,-9,7,-10,-3,-1,7,4,-7,8,-4,1,5,-4,-5,7,10,-10,6,-1,8,-3,-6,-9,-3,-6,1,2,3,8,-4,3,-2,8,2,6,-1,-9,6,-1,4,-8,5,10,10,9,-6,8,3,6,7,-5,1,-5,-1,-7,-4,-1,-9,-10,-10,2,9,-4,8,-8,-3,3,-9,2,7,-5,6,-1,-9,-3,9,-7,-7,-3,-10,-4,-5,7,-7,4,-8], dtype = "int64")#candidate|8262|(120,)|const|int64
call_8261 = relay.TupleGetItem(func_4568_call(relay.reshape(const_8262.astype('int64'), [4, 2, 15]), relay.reshape(const_8262.astype('int64'), [4, 2, 15]), ), 2)
call_8263 = relay.TupleGetItem(func_4572_call(relay.reshape(const_8262.astype('int64'), [4, 2, 15]), relay.reshape(const_8262.astype('int64'), [4, 2, 15]), ), 2)
output = relay.Tuple([call_8241,call_8244,call_8248,var_8249,var_8250,const_8251,call_8259,call_8261,const_8262,])
output2 = relay.Tuple([call_8242,call_8245,call_8252,var_8249,var_8250,const_8251,call_8260,call_8263,const_8262,])
func_8267 = relay.Function([var_8249,var_8250,], output)
mod['func_8267'] = func_8267
mod = relay.transform.InferType()(mod)
var_8268 = relay.var("var_8268", dtype = "int8", shape = ())#candidate|8268|()|var|int8
var_8269 = relay.var("var_8269", dtype = "int8", shape = (75,))#candidate|8269|(75,)|var|int8
output = func_8267(var_8268,var_8269,)
func_8270 = relay.Function([var_8268,var_8269,], output)
mutated_mod['func_8270'] = func_8270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5858_call = mod.get_global_var('func_5858')
func_5859_call = mutated_mod.get_global_var('func_5859')
call_8310 = func_5858_call()
call_8311 = func_5858_call()
output = call_8310
output2 = call_8311
func_8331 = relay.Function([], output)
mod['func_8331'] = func_8331
mod = relay.transform.InferType()(mod)
output = func_8331()
func_8332 = relay.Function([], output)
mutated_mod['func_8332'] = func_8332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5991_call = mod.get_global_var('func_5991')
func_5993_call = mutated_mod.get_global_var('func_5993')
call_8371 = func_5991_call()
call_8372 = func_5991_call()
output = relay.Tuple([call_8371,])
output2 = relay.Tuple([call_8372,])
func_8375 = relay.Function([], output)
mod['func_8375'] = func_8375
mod = relay.transform.InferType()(mod)
output = func_8375()
func_8376 = relay.Function([], output)
mutated_mod['func_8376'] = func_8376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_8382 = relay.TupleGetItem(func_5163_call(), 0)
call_8383 = relay.TupleGetItem(func_5164_call(), 0)
output = call_8382
output2 = call_8383
func_8411 = relay.Function([], output)
mod['func_8411'] = func_8411
mod = relay.transform.InferType()(mod)
mutated_mod['func_8411'] = func_8411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8411_call = mutated_mod.get_global_var('func_8411')
call_8412 = func_8411_call()
output = call_8412
func_8413 = relay.Function([], output)
mutated_mod['func_8413'] = func_8413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6969_call = mod.get_global_var('func_6969')
func_6970_call = mutated_mod.get_global_var('func_6970')
call_8429 = relay.TupleGetItem(func_6969_call(), 0)
call_8430 = relay.TupleGetItem(func_6970_call(), 0)
output = call_8429
output2 = call_8430
func_8442 = relay.Function([], output)
mod['func_8442'] = func_8442
mod = relay.transform.InferType()(mod)
mutated_mod['func_8442'] = func_8442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8442_call = mutated_mod.get_global_var('func_8442')
call_8443 = func_8442_call()
output = call_8443
func_8444 = relay.Function([], output)
mutated_mod['func_8444'] = func_8444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8331_call = mod.get_global_var('func_8331')
func_8332_call = mutated_mod.get_global_var('func_8332')
call_8466 = func_8331_call()
call_8467 = func_8331_call()
func_7364_call = mod.get_global_var('func_7364')
func_7366_call = mutated_mod.get_global_var('func_7366')
call_8493 = relay.TupleGetItem(func_7364_call(), 0)
call_8494 = relay.TupleGetItem(func_7366_call(), 0)
func_5177_call = mod.get_global_var('func_5177')
func_5179_call = mutated_mod.get_global_var('func_5179')
call_8497 = relay.TupleGetItem(func_5177_call(), 0)
call_8498 = relay.TupleGetItem(func_5179_call(), 0)
output = relay.Tuple([call_8466,call_8493,call_8497,])
output2 = relay.Tuple([call_8467,call_8494,call_8498,])
func_8530 = relay.Function([], output)
mod['func_8530'] = func_8530
mod = relay.transform.InferType()(mod)
mutated_mod['func_8530'] = func_8530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8530_call = mutated_mod.get_global_var('func_8530')
call_8531 = func_8530_call()
output = call_8531
func_8532 = relay.Function([], output)
mutated_mod['func_8532'] = func_8532
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8582 = relay.var("var_8582", dtype = "float64", shape = (1, 1, 12))#candidate|8582|(1, 1, 12)|var|float64
uop_8583 = relay.sigmoid(var_8582.astype('float64')) # shape=(1, 1, 12)
func_7288_call = mod.get_global_var('func_7288')
func_7289_call = mutated_mod.get_global_var('func_7289')
call_8592 = relay.TupleGetItem(func_7288_call(), 0)
call_8593 = relay.TupleGetItem(func_7289_call(), 0)
func_3044_call = mod.get_global_var('func_3044')
func_3049_call = mutated_mod.get_global_var('func_3049')
var_8627 = relay.var("var_8627", dtype = "float32", shape = (715,))#candidate|8627|(715,)|var|float32
var_8628 = relay.var("var_8628", dtype = "int32", shape = (81,))#candidate|8628|(81,)|var|int32
const_8629 = relay.const([[-6,9,2,10,3,2,7,9,-7,10,5,-5,8,3,6,3,6,5,3,-7,-9,2,-8,-1,-1,5,9,-4,10,4,-7,-9,2,4,-1,2,7,-5,-5,1,1,2,8,9,-1,3,2,4,5,-9,-6,-6,3,9,-10,-5,-8,9,1,3,2,4,7,-8,-4,1,-8,-5,8,2,-6,-9,2,-10,5]], dtype = "int8")#candidate|8629|(1, 75)|const|int8
var_8630 = relay.var("var_8630", dtype = "bool", shape = (1, 385))#candidate|8630|(1, 385)|var|bool
call_8626 = relay.TupleGetItem(func_3044_call(relay.reshape(var_8627.astype('float32'), [13, 11, 5]), relay.reshape(var_8628.astype('int32'), [81,]), relay.reshape(const_8629.astype('int8'), [15, 5]), relay.reshape(var_8630.astype('bool'), [385,]), ), 3)
call_8631 = relay.TupleGetItem(func_3049_call(relay.reshape(var_8627.astype('float32'), [13, 11, 5]), relay.reshape(var_8628.astype('int32'), [81,]), relay.reshape(const_8629.astype('int8'), [15, 5]), relay.reshape(var_8630.astype('bool'), [385,]), ), 3)
output = relay.Tuple([uop_8583,call_8592,call_8626,var_8627,var_8628,const_8629,var_8630,])
output2 = relay.Tuple([uop_8583,call_8593,call_8631,var_8627,var_8628,const_8629,var_8630,])
func_8632 = relay.Function([var_8582,var_8627,var_8628,var_8630,], output)
mod['func_8632'] = func_8632
mod = relay.transform.InferType()(mod)
mutated_mod['func_8632'] = func_8632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8632_call = mutated_mod.get_global_var('func_8632')
var_8634 = relay.var("var_8634", dtype = "float64", shape = (1, 1, 12))#candidate|8634|(1, 1, 12)|var|float64
var_8635 = relay.var("var_8635", dtype = "float32", shape = (715,))#candidate|8635|(715,)|var|float32
var_8636 = relay.var("var_8636", dtype = "int32", shape = (81,))#candidate|8636|(81,)|var|int32
var_8637 = relay.var("var_8637", dtype = "bool", shape = (1, 385))#candidate|8637|(1, 385)|var|bool
call_8633 = func_8632_call(var_8634,var_8635,var_8636,var_8637,)
output = call_8633
func_8638 = relay.Function([var_8634,var_8635,var_8636,var_8637,], output)
mutated_mod['func_8638'] = func_8638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_8647 = relay.TupleGetItem(func_5004_call(), 0)
call_8648 = relay.TupleGetItem(func_5005_call(), 0)
output = relay.Tuple([call_8647,])
output2 = relay.Tuple([call_8648,])
func_8671 = relay.Function([], output)
mod['func_8671'] = func_8671
mod = relay.transform.InferType()(mod)
mutated_mod['func_8671'] = func_8671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8671_call = mutated_mod.get_global_var('func_8671')
call_8672 = func_8671_call()
output = call_8672
func_8673 = relay.Function([], output)
mutated_mod['func_8673'] = func_8673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7740_call = mod.get_global_var('func_7740')
func_7742_call = mutated_mod.get_global_var('func_7742')
call_8712 = relay.TupleGetItem(func_7740_call(), 0)
call_8713 = relay.TupleGetItem(func_7742_call(), 0)
func_8267_call = mod.get_global_var('func_8267')
func_8270_call = mutated_mod.get_global_var('func_8270')
const_8720 = relay.const(-9, dtype = "int8")#candidate|8720|()|const|int8
const_8721 = relay.const([6,8,-6,2,2,-1,7,-6,-4,9,4,6,-4,-1,6,3,-3,-1,-4,2,-7,2,-5,-10,-9,-10,-3,-2,-9,-2,-5,6,-7,-7,-10,-6,-10,-2,7,5,3,2,4,-4,10,-10,2,1,3,-8,-4,9,-5,2,4,-1,-5,-4,-6,1,-4,-9,9,6,7,-4,-10,-9,-5,-8,-8,-10,1,-1,-10], dtype = "int8")#candidate|8721|(75,)|const|int8
call_8719 = relay.TupleGetItem(func_8267_call(relay.reshape(const_8720.astype('int8'), []), relay.reshape(const_8721.astype('int8'), [75,]), ), 6)
call_8722 = relay.TupleGetItem(func_8270_call(relay.reshape(const_8720.astype('int8'), []), relay.reshape(const_8721.astype('int8'), [75,]), ), 6)
output = relay.Tuple([call_8712,call_8719,const_8720,const_8721,])
output2 = relay.Tuple([call_8713,call_8722,const_8720,const_8721,])
func_8740 = relay.Function([], output)
mod['func_8740'] = func_8740
mod = relay.transform.InferType()(mod)
mutated_mod['func_8740'] = func_8740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8740_call = mutated_mod.get_global_var('func_8740')
call_8741 = func_8740_call()
output = call_8741
func_8742 = relay.Function([], output)
mutated_mod['func_8742'] = func_8742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7364_call = mod.get_global_var('func_7364')
func_7366_call = mutated_mod.get_global_var('func_7366')
call_8752 = relay.TupleGetItem(func_7364_call(), 1)
call_8753 = relay.TupleGetItem(func_7366_call(), 1)
output = relay.Tuple([call_8752,])
output2 = relay.Tuple([call_8753,])
func_8756 = relay.Function([], output)
mod['func_8756'] = func_8756
mod = relay.transform.InferType()(mod)
mutated_mod['func_8756'] = func_8756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8756_call = mutated_mod.get_global_var('func_8756')
call_8757 = func_8756_call()
output = call_8757
func_8758 = relay.Function([], output)
mutated_mod['func_8758'] = func_8758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6936_call = mod.get_global_var('func_6936')
func_6937_call = mutated_mod.get_global_var('func_6937')
call_8761 = relay.TupleGetItem(func_6936_call(), 0)
call_8762 = relay.TupleGetItem(func_6937_call(), 0)
output = relay.Tuple([call_8761,])
output2 = relay.Tuple([call_8762,])
func_8780 = relay.Function([], output)
mod['func_8780'] = func_8780
mod = relay.transform.InferType()(mod)
mutated_mod['func_8780'] = func_8780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8780_call = mutated_mod.get_global_var('func_8780')
call_8781 = func_8780_call()
output = call_8781
func_8782 = relay.Function([], output)
mutated_mod['func_8782'] = func_8782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_8786 = relay.TupleGetItem(func_4671_call(), 0)
call_8787 = relay.TupleGetItem(func_4672_call(), 0)
func_5881_call = mod.get_global_var('func_5881')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_8791 = func_5881_call()
call_8792 = func_5881_call()
output = relay.Tuple([call_8786,call_8791,])
output2 = relay.Tuple([call_8787,call_8792,])
func_8796 = relay.Function([], output)
mod['func_8796'] = func_8796
mod = relay.transform.InferType()(mod)
mutated_mod['func_8796'] = func_8796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8796_call = mutated_mod.get_global_var('func_8796')
call_8797 = func_8796_call()
output = call_8797
func_8798 = relay.Function([], output)
mutated_mod['func_8798'] = func_8798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8671_call = mod.get_global_var('func_8671')
func_8673_call = mutated_mod.get_global_var('func_8673')
call_8802 = relay.TupleGetItem(func_8671_call(), 0)
call_8803 = relay.TupleGetItem(func_8673_call(), 0)
output = relay.Tuple([call_8802,])
output2 = relay.Tuple([call_8803,])
func_8810 = relay.Function([], output)
mod['func_8810'] = func_8810
mod = relay.transform.InferType()(mod)
output = func_8810()
func_8811 = relay.Function([], output)
mutated_mod['func_8811'] = func_8811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7622_call = mod.get_global_var('func_7622')
func_7624_call = mutated_mod.get_global_var('func_7624')
call_8842 = relay.TupleGetItem(func_7622_call(), 2)
call_8843 = relay.TupleGetItem(func_7624_call(), 2)
output = relay.Tuple([call_8842,])
output2 = relay.Tuple([call_8843,])
func_8883 = relay.Function([], output)
mod['func_8883'] = func_8883
mod = relay.transform.InferType()(mod)
output = func_8883()
func_8884 = relay.Function([], output)
mutated_mod['func_8884'] = func_8884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6757_call = mod.get_global_var('func_6757')
func_6758_call = mutated_mod.get_global_var('func_6758')
call_8910 = relay.TupleGetItem(func_6757_call(), 0)
call_8911 = relay.TupleGetItem(func_6758_call(), 0)
output = call_8910
output2 = call_8911
func_8917 = relay.Function([], output)
mod['func_8917'] = func_8917
mod = relay.transform.InferType()(mod)
mutated_mod['func_8917'] = func_8917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8917_call = mutated_mod.get_global_var('func_8917')
call_8918 = func_8917_call()
output = call_8918
func_8919 = relay.Function([], output)
mutated_mod['func_8919'] = func_8919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7288_call = mod.get_global_var('func_7288')
func_7289_call = mutated_mod.get_global_var('func_7289')
call_8937 = relay.TupleGetItem(func_7288_call(), 0)
call_8938 = relay.TupleGetItem(func_7289_call(), 0)
uop_8942 = relay.exp(call_8937.astype('float32')) # shape=(7, 4, 7)
uop_8944 = relay.exp(call_8938.astype('float32')) # shape=(7, 4, 7)
func_5881_call = mod.get_global_var('func_5881')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_8945 = func_5881_call()
call_8946 = func_5881_call()
func_8173_call = mod.get_global_var('func_8173')
func_8174_call = mutated_mod.get_global_var('func_8174')
call_8947 = relay.TupleGetItem(func_8173_call(), 1)
call_8948 = relay.TupleGetItem(func_8174_call(), 1)
func_4787_call = mod.get_global_var('func_4787')
func_4790_call = mutated_mod.get_global_var('func_4790')
var_8959 = relay.var("var_8959", dtype = "bool", shape = (385,))#candidate|8959|(385,)|var|bool
call_8958 = relay.TupleGetItem(func_4787_call(relay.reshape(var_8959.astype('bool'), [385,])), 1)
call_8960 = relay.TupleGetItem(func_4790_call(relay.reshape(var_8959.astype('bool'), [385,])), 1)
func_4825_call = mod.get_global_var('func_4825')
func_4829_call = mutated_mod.get_global_var('func_4829')
var_8971 = relay.var("var_8971", dtype = "int16", shape = (160, 1))#candidate|8971|(160, 1)|var|int16
call_8970 = relay.TupleGetItem(func_4825_call(relay.reshape(var_8971.astype('int16'), [16, 5, 2]), relay.reshape(var_8971.astype('int16'), [16, 5, 2]), ), 0)
call_8972 = relay.TupleGetItem(func_4829_call(relay.reshape(var_8971.astype('int16'), [16, 5, 2]), relay.reshape(var_8971.astype('int16'), [16, 5, 2]), ), 0)
output = relay.Tuple([uop_8942,call_8945,call_8947,call_8958,var_8959,call_8970,var_8971,])
output2 = relay.Tuple([uop_8944,call_8946,call_8948,call_8960,var_8959,call_8972,var_8971,])
func_8980 = relay.Function([var_8959,var_8971,], output)
mod['func_8980'] = func_8980
mod = relay.transform.InferType()(mod)
mutated_mod['func_8980'] = func_8980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8980_call = mutated_mod.get_global_var('func_8980')
var_8982 = relay.var("var_8982", dtype = "bool", shape = (385,))#candidate|8982|(385,)|var|bool
var_8983 = relay.var("var_8983", dtype = "int16", shape = (160, 1))#candidate|8983|(160, 1)|var|int16
call_8981 = func_8980_call(var_8982,var_8983,)
output = call_8981
func_8984 = relay.Function([var_8982,var_8983,], output)
mutated_mod['func_8984'] = func_8984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7322_call = mod.get_global_var('func_7322')
func_7323_call = mutated_mod.get_global_var('func_7323')
call_8999 = func_7322_call()
call_9000 = func_7322_call()
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_9016 = relay.TupleGetItem(func_4671_call(), 0)
call_9017 = relay.TupleGetItem(func_4672_call(), 0)
output = relay.Tuple([call_8999,call_9016,])
output2 = relay.Tuple([call_9000,call_9017,])
func_9027 = relay.Function([], output)
mod['func_9027'] = func_9027
mod = relay.transform.InferType()(mod)
mutated_mod['func_9027'] = func_9027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9027_call = mutated_mod.get_global_var('func_9027')
call_9028 = func_9027_call()
output = call_9028
func_9029 = relay.Function([], output)
mutated_mod['func_9029'] = func_9029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8671_call = mod.get_global_var('func_8671')
func_8673_call = mutated_mod.get_global_var('func_8673')
call_9088 = relay.TupleGetItem(func_8671_call(), 0)
call_9089 = relay.TupleGetItem(func_8673_call(), 0)
func_7732_call = mod.get_global_var('func_7732')
func_7735_call = mutated_mod.get_global_var('func_7735')
var_9108 = relay.var("var_9108", dtype = "int8", shape = ())#candidate|9108|()|var|int8
call_9107 = relay.TupleGetItem(func_7732_call(relay.reshape(var_9108.astype('int8'), [])), 7)
call_9109 = relay.TupleGetItem(func_7735_call(relay.reshape(var_9108.astype('int8'), [])), 7)
output = relay.Tuple([call_9088,call_9107,var_9108,])
output2 = relay.Tuple([call_9089,call_9109,var_9108,])
func_9111 = relay.Function([var_9108,], output)
mod['func_9111'] = func_9111
mod = relay.transform.InferType()(mod)
var_9112 = relay.var("var_9112", dtype = "int8", shape = ())#candidate|9112|()|var|int8
output = func_9111(var_9112)
func_9113 = relay.Function([var_9112], output)
mutated_mod['func_9113'] = func_9113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5492_call = mod.get_global_var('func_5492')
func_5493_call = mutated_mod.get_global_var('func_5493')
call_9143 = relay.TupleGetItem(func_5492_call(), 0)
call_9144 = relay.TupleGetItem(func_5493_call(), 0)
output = relay.Tuple([call_9143,])
output2 = relay.Tuple([call_9144,])
func_9156 = relay.Function([], output)
mod['func_9156'] = func_9156
mod = relay.transform.InferType()(mod)
mutated_mod['func_9156'] = func_9156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9156_call = mutated_mod.get_global_var('func_9156')
call_9157 = func_9156_call()
output = call_9157
func_9158 = relay.Function([], output)
mutated_mod['func_9158'] = func_9158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8173_call = mod.get_global_var('func_8173')
func_8174_call = mutated_mod.get_global_var('func_8174')
call_9188 = relay.TupleGetItem(func_8173_call(), 0)
call_9189 = relay.TupleGetItem(func_8174_call(), 0)
func_6057_call = mod.get_global_var('func_6057')
func_6058_call = mutated_mod.get_global_var('func_6058')
call_9190 = func_6057_call()
call_9191 = func_6057_call()
output = relay.Tuple([call_9188,call_9190,])
output2 = relay.Tuple([call_9189,call_9191,])
func_9202 = relay.Function([], output)
mod['func_9202'] = func_9202
mod = relay.transform.InferType()(mod)
output = func_9202()
func_9203 = relay.Function([], output)
mutated_mod['func_9203'] = func_9203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_9275 = relay.TupleGetItem(func_5004_call(), 0)
call_9276 = relay.TupleGetItem(func_5005_call(), 0)
func_3044_call = mod.get_global_var('func_3044')
func_3049_call = mutated_mod.get_global_var('func_3049')
const_9278 = relay.const([-3.769199,1.260535,-8.467300,-3.911266,-0.929506,-7.669176,-3.054834,-0.394860,7.696587,6.675457,2.468058,-4.331083,-2.559997,2.792067,3.717048,-2.603000,9.751513,3.487131,-9.289783,-2.004337,5.968916,4.486949,6.887041,-2.188987,-0.402476,-3.273157,8.526948,5.856066,9.533560,6.053733,5.811938,-7.878175,7.925097,-7.655516,2.983167,-6.847180,2.187534,-5.167379,8.337185,6.698830,-6.800757,7.139755,3.896512,8.243055,-1.888160,5.387300,-1.194344,-2.055525,-6.006731,-1.242457,-1.487296,-1.811765,-9.893043,-1.482751,-9.835066,6.755732,0.504365,-5.774190,4.684357,0.171014,7.958632,-4.810526,-0.941885,0.028063,0.594210,-2.979168,5.348286,-9.294984,6.355107,2.954738,-2.466348,-6.731537,-2.305335,-9.445380,9.062196,6.517871,9.188352,-5.145424,-0.555980,-9.010416,8.546925,8.075230,9.810341,-7.015293,8.046531,-9.748338,-3.204642,5.042369,-8.086111,0.242782,-5.931548,-4.203052,-7.756520,4.072655,-8.033845,-5.369373,4.304965,-5.712916,5.798975,6.552828,1.843002,5.702591,1.717553,-1.606399,-8.101214,6.031432,-3.995903,-6.728184,-2.617550,6.764829,9.869697,4.216298,-5.240331,-5.919352,-9.153392,-4.892740,2.377589,-1.801472,-6.339000,-8.490976,-6.903894,9.685141,5.055634,3.582617,-2.389288,2.066282,-5.838886,-1.277759,-6.696994,1.349460,-3.778216,-7.889303,1.479216,-3.448809,2.705888,-8.625773,-6.321078,-6.797455,-2.189908,-6.776328,7.460276,-7.890788,-7.500639,-7.033907,9.668176,2.008294,0.277853,-4.132339,-0.760700,-4.629654,9.715904,6.477792,9.228212,-7.448960,9.694606,-6.709070,-1.138698,3.881265,2.326076,6.544434,2.676880,-6.987469,7.674673,2.767513,-7.861261,9.782163,-7.855449,4.496757,1.886408,9.791580,-8.330124,3.187908,8.204204,9.515172,-5.755433,1.228446,-7.334952,-4.971531,-2.147806,4.772317,1.314786,3.415955,-0.560149,8.736880,-9.645401,-7.574621,-9.146066,5.384277,-5.507288,-0.950664,8.906281,-9.678093,-0.689812,2.991014,-6.617420,0.270678,-0.116664,-0.215566,0.849982,-0.494636,-7.906725,2.591957,-9.085455,-0.653204,7.824329,2.853741,0.653612,-5.472847,-3.816952,-8.937959,8.054202,-1.400600,-8.013440,-2.246200,3.441000,4.041249,5.740577,-8.176042,3.668751,6.904830,-2.955839,-2.987203,-1.823220,2.871887,-9.570096,-2.356888,2.955693,6.237994,8.491595,0.612267,-6.977318,-9.396577,6.071598,2.255631,-5.900224,-6.930791,0.765241,-6.143750,8.459979,-3.986312,5.988267,2.130114,-2.080003,9.160712,-6.352736,-1.685200,4.905549,1.749142,3.399595,-9.107927,2.562113,-5.412381,7.272948,-0.152059,-5.007016,-0.028496,5.334616,-1.436585,8.942942,5.606067,6.687520,-6.236125,2.132733,1.206531,5.480750,-9.303778,-9.191233,8.969429,6.470256,5.486247,5.907220,5.019167,9.324575,-2.853700,4.529411,4.218745,2.428743,-8.868614,1.087449,8.416546,9.961832,8.054194,3.303274,6.060335,-1.785400,-1.178703,-3.216255,9.116558,-8.935162,-8.775432,1.991025,-8.465957,-6.200591,2.394010,-1.644517,-7.014556,-4.567194,-3.257602,-2.272359,-8.098240,-5.948932,-9.663345,5.950721,-5.414134,7.165316,9.995524,-6.185626,8.615053,-4.010641,-7.817117,-4.055053,-0.212694,-5.039343,-5.028361,-5.187372,-2.151784,3.597491,-8.386747,-4.441591,-1.004630,0.626384,-0.693451,6.651874,-5.489950,1.448314,1.891990,7.102029,-1.643516,-9.886774,2.064625,-3.741335,4.970822,-9.061483,-4.044209,-9.522201,8.279903,-4.276494,-2.146076,6.673268,-4.680355,7.936558,-3.251058,2.864471,0.212187,5.844281,5.798371,-0.871759,-4.834710,-3.213479,8.696132,9.544761,-5.647109,-7.604429,-3.782845,-4.022768,-3.488463,-6.615031,-9.177027,-0.494796,5.377352,-7.078380,9.414008,7.574376,-7.919115,-1.379346,-9.277698,-7.568685,1.780880,1.836370,-1.653543,-9.244064,-2.559029,-0.801682,6.810130,-3.376707,-8.416787,0.038764,5.625315,7.500300,-7.739011,3.000059,-8.323084,7.841782,-9.096955,1.257655,-6.295680,-4.239805,-2.519904,-2.835956,0.050413,-5.596730,7.920813,8.122435,-7.805787,-5.940594,-8.150071,8.897569,0.542016,-5.478757,-5.511538,6.144402,-7.045597,0.160589,-2.955524,-2.252053,-8.068840,1.068927,-2.507156,-3.024009,-5.252972,6.666131,-9.460130,5.494428,8.655583,1.729525,5.047792,7.513513,-0.180663,-8.774780,-0.871949,-7.150791,3.324731,-4.910360,-2.855388,-6.673536,-4.231703,4.180709,-7.912119,-4.405970,5.081213,2.083653,-3.012447,-3.258413,9.585930,8.706737,6.118856,-2.958894,-9.962155,-8.564715,1.263683,6.124520,-0.272400,-6.119782,9.723398,-7.831049,2.924536,0.178758,-8.804681,-8.268635,-6.618580,8.230875,-0.923371,-8.573431,1.784589,6.842904,7.170373,-8.327571,-1.108400,-6.105880,7.611148,-7.856123,4.320958,2.159760,3.433768,9.135025,4.194907,0.878532,6.382133,-7.035802,-8.360952,6.448249,-2.380830,4.379776,5.859964,-5.501137,-0.507392,9.572634,-9.340746,-5.520163,-9.049281,8.904890,-4.189141,3.562919,-3.561407,-9.578095,-0.767083,-4.089032,1.249658,7.590675,-8.599556,-1.665863,-7.296417,-8.263545,-9.962511,-4.599891,-8.994552,-0.190032,-6.242946,-7.994288,-7.628547,5.220540,8.033458,2.312162,7.760506,7.398827,7.652409,-3.168543,0.092161,-9.679589,7.358127,-2.762333,2.056837,5.260762,1.112848,-8.423395,-9.544707,-6.086996,-6.722434,3.963099,-0.916425,5.108781,-1.953154,4.389878,-1.390235,9.795900,-5.964892,5.911223,-7.361372,8.534982,7.061466,8.542087,4.857554,8.885174,-8.580950,0.774611,2.704446,-9.556046,-9.659768,1.768232,6.407525,2.648170,-4.006436,3.477733,8.688209,-7.202619,1.527517,-5.523254,6.245250,-7.049533,-4.590922,-3.594929,-6.037109,7.687177,-1.730201,8.978955,5.330249,3.271321,9.459677,8.293662,4.468048,9.666497,2.038630,8.927588,2.770810,-5.203624,6.590112,5.923853,7.901591,2.641190,9.848494,-6.632286,1.759013,5.548137,-7.534735,0.545486,-7.051067,-1.550104,-0.173327,2.413514,9.729727,-0.246886,-3.148096,-7.151673,-8.042991,-5.178398,-8.937424,7.888696,-6.042651,0.511336,7.842747,8.952438,5.361995,1.569811,6.492103,-7.492554,4.352168,-6.830307,-5.289366,9.349131,-4.338377,0.617523,-2.284155,-5.395092,0.524498,-0.096657,-0.007000,-8.503975,8.393607,2.466809,-1.930793,-7.939116,-1.139250,-7.614177,6.228291,-5.661227,7.919219,6.654126,-3.241833,-7.963553,2.987283,-9.699651,-7.857369,0.805364,-3.669796,9.962157,-7.491913,-7.683876,-2.529517,-3.201245,8.107137,4.537177,-4.905231,-1.741759,-1.966882,-9.098123,1.093702,8.262847,3.638832,-6.552188,8.429907,7.846588,7.382225,8.301446,-2.252510,3.587066,-6.857495,-9.393274,7.851747,7.106975,0.358112,5.527957,-1.334298,0.878386,-3.308983,8.758303,9.622060,1.894478,1.601910,-8.340334,-0.430518,9.818633,-4.383585,2.211002,-9.442210,3.833958,-4.172229,9.176460,2.337027,5.077597,-9.995702,4.857827,4.921917,-3.906750,4.461751,-1.844075,-4.992066,-2.772381,9.389819,9.074513,-6.874329,7.567317,2.248158,7.019252,6.399345,-9.540489,-2.842343,6.434342,7.501151,-7.635033,-9.898676,-5.722389,-7.401303,9.640530,7.743185,5.752277,6.430081,-4.669966,5.706822,4.198273,-1.120928,-2.639662,-1.227321,-9.934974,0.614763,-1.265602,9.284726,8.815533,-5.904597,1.464710,5.680402,8.800279,-0.485751,1.564013,-3.197061,-5.515170], dtype = "float32")#candidate|9278|(715,)|const|float32
const_9279 = relay.const([5,-4,10,-7,9,-2,4,5,-5,4,10,-2,2,2,-10,-3,-2,-6,-2,-9,-8,3,-1,1,7,-1,-1,-7,-6,-6,-8,1,-5,-2,1,10,-2,-1,-3,10,10,-10,-4,-6,6,7,1,1,7,7,-5,-7,-9,-10,1,-6,-1,3,-3,-6,-1,2,2,-1,7,5,2,6,10,-8,8,-1,-10,4,3,2,-2,-7,-8,-3,6], dtype = "int32")#candidate|9279|(81,)|const|int32
var_9280 = relay.var("var_9280", dtype = "int8", shape = (75,))#candidate|9280|(75,)|var|int8
var_9281 = relay.var("var_9281", dtype = "bool", shape = (385,))#candidate|9281|(385,)|var|bool
call_9277 = relay.TupleGetItem(func_3044_call(relay.reshape(const_9278.astype('float32'), [13, 11, 5]), relay.reshape(const_9279.astype('int32'), [81,]), relay.reshape(var_9280.astype('int8'), [15, 5]), relay.reshape(var_9281.astype('bool'), [385,]), ), 5)
call_9282 = relay.TupleGetItem(func_3049_call(relay.reshape(const_9278.astype('float32'), [13, 11, 5]), relay.reshape(const_9279.astype('int32'), [81,]), relay.reshape(var_9280.astype('int8'), [15, 5]), relay.reshape(var_9281.astype('bool'), [385,]), ), 5)
func_6430_call = mod.get_global_var('func_6430')
func_6432_call = mutated_mod.get_global_var('func_6432')
var_9285 = relay.var("var_9285", dtype = "int32", shape = ())#candidate|9285|()|var|int32
call_9284 = relay.TupleGetItem(func_6430_call(relay.reshape(var_9285.astype('int32'), [])), 0)
call_9286 = relay.TupleGetItem(func_6432_call(relay.reshape(var_9285.astype('int32'), [])), 0)
bop_9288 = relay.multiply(const_9279.astype('int8'), var_9285.astype('int8')) # shape=(81,)
output = relay.Tuple([call_9275,call_9277,const_9278,var_9280,var_9281,call_9284,bop_9288,])
output2 = relay.Tuple([call_9276,call_9282,const_9278,var_9280,var_9281,call_9286,bop_9288,])
func_9302 = relay.Function([var_9280,var_9281,var_9285,], output)
mod['func_9302'] = func_9302
mod = relay.transform.InferType()(mod)
var_9303 = relay.var("var_9303", dtype = "int8", shape = (75,))#candidate|9303|(75,)|var|int8
var_9304 = relay.var("var_9304", dtype = "bool", shape = (385,))#candidate|9304|(385,)|var|bool
var_9305 = relay.var("var_9305", dtype = "int32", shape = ())#candidate|9305|()|var|int32
output = func_9302(var_9303,var_9304,var_9305,)
func_9306 = relay.Function([var_9303,var_9304,var_9305,], output)
mutated_mod['func_9306'] = func_9306
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9311 = relay.const([[[-8,-7,5,-4,5,7,-10],[-9,-8,-9,-8,8,-2,-4],[-9,-10,2,-9,-5,2,-9],[-1,3,1,3,-10,-4,-2],[9,1,6,6,9,7,-8],[-5,9,-5,-8,-6,6,-5],[-6,-7,4,4,-1,10,-6],[7,5,1,10,8,2,-2],[-2,9,5,-5,-7,-8,7],[-2,4,-7,1,-5,-3,10],[9,-6,-10,-10,-4,-5,2],[-1,3,4,-1,8,-6,-5],[-10,-6,9,-1,-8,8,-4],[3,6,6,7,9,-10,2]]], dtype = "uint64")#candidate|9311|(1, 14, 7)|const|uint64
var_9312 = relay.var("var_9312", dtype = "uint64", shape = (2, 14, 7))#candidate|9312|(2, 14, 7)|var|uint64
bop_9313 = relay.bitwise_or(const_9311.astype('uint64'), var_9312.astype('uint64')) # shape=(2, 14, 7)
output = bop_9313
output2 = bop_9313
func_9320 = relay.Function([var_9312,], output)
mod['func_9320'] = func_9320
mod = relay.transform.InferType()(mod)
var_9321 = relay.var("var_9321", dtype = "uint64", shape = (2, 14, 7))#candidate|9321|(2, 14, 7)|var|uint64
output = func_9320(var_9321)
func_9322 = relay.Function([var_9321], output)
mutated_mod['func_9322'] = func_9322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8780_call = mod.get_global_var('func_8780')
func_8782_call = mutated_mod.get_global_var('func_8782')
call_9337 = relay.TupleGetItem(func_8780_call(), 0)
call_9338 = relay.TupleGetItem(func_8782_call(), 0)
uop_9349 = relay.sinh(call_9337.astype('float64')) # shape=(7, 4, 7)
uop_9351 = relay.sinh(call_9338.astype('float64')) # shape=(7, 4, 7)
output = relay.Tuple([uop_9349,])
output2 = relay.Tuple([uop_9351,])
func_9373 = relay.Function([], output)
mod['func_9373'] = func_9373
mod = relay.transform.InferType()(mod)
output = func_9373()
func_9374 = relay.Function([], output)
mutated_mod['func_9374'] = func_9374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8756_call = mod.get_global_var('func_8756')
func_8758_call = mutated_mod.get_global_var('func_8758')
call_9388 = relay.TupleGetItem(func_8756_call(), 0)
call_9389 = relay.TupleGetItem(func_8758_call(), 0)
func_8219_call = mod.get_global_var('func_8219')
func_8220_call = mutated_mod.get_global_var('func_8220')
call_9390 = func_8219_call()
call_9391 = func_8219_call()
func_7589_call = mod.get_global_var('func_7589')
func_7591_call = mutated_mod.get_global_var('func_7591')
call_9392 = func_7589_call()
call_9393 = func_7589_call()
output = relay.Tuple([call_9388,call_9390,call_9392,])
output2 = relay.Tuple([call_9389,call_9391,call_9393,])
func_9413 = relay.Function([], output)
mod['func_9413'] = func_9413
mod = relay.transform.InferType()(mod)
output = func_9413()
func_9414 = relay.Function([], output)
mutated_mod['func_9414'] = func_9414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6656_call = mod.get_global_var('func_6656')
func_6657_call = mutated_mod.get_global_var('func_6657')
call_9534 = relay.TupleGetItem(func_6656_call(), 0)
call_9535 = relay.TupleGetItem(func_6657_call(), 0)
func_8810_call = mod.get_global_var('func_8810')
func_8811_call = mutated_mod.get_global_var('func_8811')
call_9556 = relay.TupleGetItem(func_8810_call(), 0)
call_9557 = relay.TupleGetItem(func_8811_call(), 0)
output = relay.Tuple([call_9534,call_9556,])
output2 = relay.Tuple([call_9535,call_9557,])
func_9567 = relay.Function([], output)
mod['func_9567'] = func_9567
mod = relay.transform.InferType()(mod)
mutated_mod['func_9567'] = func_9567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9567_call = mutated_mod.get_global_var('func_9567')
call_9568 = func_9567_call()
output = call_9568
func_9569 = relay.Function([], output)
mutated_mod['func_9569'] = func_9569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6057_call = mod.get_global_var('func_6057')
func_6058_call = mutated_mod.get_global_var('func_6058')
call_9579 = func_6057_call()
call_9580 = func_6057_call()
output = relay.Tuple([call_9579,])
output2 = relay.Tuple([call_9580,])
func_9595 = relay.Function([], output)
mod['func_9595'] = func_9595
mod = relay.transform.InferType()(mod)
output = func_9595()
func_9596 = relay.Function([], output)
mutated_mod['func_9596'] = func_9596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8530_call = mod.get_global_var('func_8530')
func_8532_call = mutated_mod.get_global_var('func_8532')
call_9603 = relay.TupleGetItem(func_8530_call(), 1)
call_9604 = relay.TupleGetItem(func_8532_call(), 1)
func_7732_call = mod.get_global_var('func_7732')
func_7735_call = mutated_mod.get_global_var('func_7735')
const_9610 = relay.const(6, dtype = "int8")#candidate|9610|()|const|int8
call_9609 = relay.TupleGetItem(func_7732_call(relay.reshape(const_9610.astype('int8'), [])), 6)
call_9611 = relay.TupleGetItem(func_7735_call(relay.reshape(const_9610.astype('int8'), [])), 6)
func_5520_call = mod.get_global_var('func_5520')
func_5522_call = mutated_mod.get_global_var('func_5522')
call_9613 = relay.TupleGetItem(func_5520_call(), 0)
call_9614 = relay.TupleGetItem(func_5522_call(), 0)
output = relay.Tuple([call_9603,call_9609,const_9610,call_9613,])
output2 = relay.Tuple([call_9604,call_9611,const_9610,call_9614,])
func_9650 = relay.Function([], output)
mod['func_9650'] = func_9650
mod = relay.transform.InferType()(mod)
output = func_9650()
func_9651 = relay.Function([], output)
mutated_mod['func_9651'] = func_9651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8740_call = mod.get_global_var('func_8740')
func_8742_call = mutated_mod.get_global_var('func_8742')
call_9695 = relay.TupleGetItem(func_8740_call(), 0)
call_9696 = relay.TupleGetItem(func_8742_call(), 0)
func_7732_call = mod.get_global_var('func_7732')
func_7735_call = mutated_mod.get_global_var('func_7735')
const_9716 = relay.const(-9, dtype = "int8")#candidate|9716|()|const|int8
call_9715 = relay.TupleGetItem(func_7732_call(relay.reshape(const_9716.astype('int8'), [])), 7)
call_9717 = relay.TupleGetItem(func_7735_call(relay.reshape(const_9716.astype('int8'), [])), 7)
func_3889_call = mod.get_global_var('func_3889')
func_3896_call = mutated_mod.get_global_var('func_3896')
var_9729 = relay.var("var_9729", dtype = "int32", shape = (936,))#candidate|9729|(936,)|var|int32
var_9730 = relay.var("var_9730", dtype = "float32", shape = (715,))#candidate|9730|(715,)|var|float32
const_9731 = relay.const([4,3,10,-7,-5,-9,-9,4,2,5,3,4,-2,8,-4,5,7,-1,-1,2,-9,4,-8,7,2,-9,-1,-1,-9,-8,-2,-1,2,-5,-2,-9,-2,10,5,9,9,-4,-10,-3,6,4,-6,-6,-8,-1,10,3,5,1,1,7,7,-2,8,7,-9,-1,-7,3,-10,10,-4,-3,8,-9,3,1,-9,6,-8,-3,-6,-2,-5,-2,9], dtype = "int32")#candidate|9731|(81,)|const|int32
var_9732 = relay.var("var_9732", dtype = "int8", shape = (75,))#candidate|9732|(75,)|var|int8
call_9728 = relay.TupleGetItem(func_3889_call(relay.reshape(var_9729.astype('int32'), [8, 9, 13]), relay.reshape(const_9716.astype('bool'), []), relay.reshape(var_9730.astype('float32'), [715,]), relay.reshape(const_9731.astype('int32'), [81,]), relay.reshape(var_9732.astype('int8'), [75,]), ), 8)
call_9733 = relay.TupleGetItem(func_3896_call(relay.reshape(var_9729.astype('int32'), [8, 9, 13]), relay.reshape(const_9716.astype('bool'), []), relay.reshape(var_9730.astype('float32'), [715,]), relay.reshape(const_9731.astype('int32'), [81,]), relay.reshape(var_9732.astype('int8'), [75,]), ), 8)
func_7264_call = mod.get_global_var('func_7264')
func_7266_call = mutated_mod.get_global_var('func_7266')
call_9734 = relay.TupleGetItem(func_7264_call(), 3)
call_9735 = relay.TupleGetItem(func_7266_call(), 3)
output = relay.Tuple([call_9695,call_9715,const_9716,call_9728,var_9729,var_9730,const_9731,var_9732,call_9734,])
output2 = relay.Tuple([call_9696,call_9717,const_9716,call_9733,var_9729,var_9730,const_9731,var_9732,call_9735,])
func_9740 = relay.Function([var_9729,var_9730,var_9732,], output)
mod['func_9740'] = func_9740
mod = relay.transform.InferType()(mod)
mutated_mod['func_9740'] = func_9740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9740_call = mutated_mod.get_global_var('func_9740')
var_9742 = relay.var("var_9742", dtype = "int32", shape = (936,))#candidate|9742|(936,)|var|int32
var_9743 = relay.var("var_9743", dtype = "float32", shape = (715,))#candidate|9743|(715,)|var|float32
var_9744 = relay.var("var_9744", dtype = "int8", shape = (75,))#candidate|9744|(75,)|var|int8
call_9741 = func_9740_call(var_9742,var_9743,var_9744,)
output = call_9741
func_9745 = relay.Function([var_9742,var_9743,var_9744,], output)
mutated_mod['func_9745'] = func_9745
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9848 = relay.var("var_9848", dtype = "float32", shape = (7, 1, 11))#candidate|9848|(7, 1, 11)|var|float32
uop_9849 = relay.atan(var_9848.astype('float32')) # shape=(7, 1, 11)
output = relay.Tuple([uop_9849,])
output2 = relay.Tuple([uop_9849,])
func_9862 = relay.Function([var_9848,], output)
mod['func_9862'] = func_9862
mod = relay.transform.InferType()(mod)
var_9863 = relay.var("var_9863", dtype = "float32", shape = (7, 1, 11))#candidate|9863|(7, 1, 11)|var|float32
output = func_9862(var_9863)
func_9864 = relay.Function([var_9863], output)
mutated_mod['func_9864'] = func_9864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9595_call = mod.get_global_var('func_9595')
func_9596_call = mutated_mod.get_global_var('func_9596')
call_9878 = relay.TupleGetItem(func_9595_call(), 0)
call_9879 = relay.TupleGetItem(func_9596_call(), 0)
func_7732_call = mod.get_global_var('func_7732')
func_7735_call = mutated_mod.get_global_var('func_7735')
const_9886 = relay.const(-1, dtype = "int8")#candidate|9886|()|const|int8
call_9885 = relay.TupleGetItem(func_7732_call(relay.reshape(const_9886.astype('int8'), [])), 4)
call_9887 = relay.TupleGetItem(func_7735_call(relay.reshape(const_9886.astype('int8'), [])), 4)
func_9650_call = mod.get_global_var('func_9650')
func_9651_call = mutated_mod.get_global_var('func_9651')
call_9897 = relay.TupleGetItem(func_9650_call(), 0)
call_9898 = relay.TupleGetItem(func_9651_call(), 0)
func_4960_call = mod.get_global_var('func_4960')
func_4965_call = mutated_mod.get_global_var('func_4965')
const_9902 = relay.const([[True,True,False,False,False,True,True],[False,True,False,True,True,True,True],[False,False,True,True,False,True,True],[False,True,True,True,True,True,False],[True,False,True,False,False,True,True],[False,False,False,False,False,False,True],[True,True,False,False,False,True,True],[False,False,True,False,False,False,True],[True,True,False,True,False,True,True],[False,False,False,False,False,False,False],[False,False,True,False,False,True,False],[False,False,True,False,False,False,False],[False,False,True,False,False,True,True],[False,False,False,False,False,True,False],[True,True,False,True,False,True,True],[False,False,True,False,False,True,False],[False,True,False,True,False,True,True],[False,True,False,False,True,False,False],[False,True,False,True,True,False,False],[True,True,False,True,True,True,True],[True,False,True,True,False,True,False],[False,False,True,False,True,True,False],[True,False,False,True,True,False,False],[False,False,False,True,True,False,False],[False,False,True,True,False,False,False],[False,True,True,False,False,False,False],[True,False,False,False,False,False,True],[True,False,True,False,False,False,True],[True,False,False,True,False,True,False],[True,False,True,True,True,False,False],[True,False,False,True,False,True,True],[False,True,True,False,False,False,False],[False,False,True,False,True,True,True],[True,True,False,False,True,True,False],[False,True,False,False,True,False,True],[False,True,False,False,True,True,False],[True,False,False,True,False,False,True],[True,True,True,True,False,True,True],[True,False,True,False,True,True,False],[False,False,True,False,True,True,True],[False,True,True,True,True,False,True],[True,False,False,True,True,True,False],[False,False,True,True,False,True,True],[True,False,True,False,False,False,False],[False,False,True,False,True,True,False],[False,True,True,True,True,True,False],[False,True,False,False,True,False,False],[False,True,True,True,True,True,True],[False,True,False,False,True,True,False],[False,False,False,False,True,True,False],[False,True,False,True,False,True,True],[True,True,True,True,False,True,True],[True,False,False,True,True,False,True],[True,False,False,True,False,False,False],[False,False,False,False,True,False,True]], dtype = "bool")#candidate|9902|(55, 7)|const|bool
var_9903 = relay.var("var_9903", dtype = "int8", shape = (25, 9))#candidate|9903|(25, 9)|var|int8
const_9904 = relay.const([7,-5,10,-6,-8,-1,5,-2,-1,10,-10,2,9,-8,8,7,7,-8,-5,3,9,2,7,-10,-2,-4,7,2,-8,9,4,-5,5,-9,6,-4,6,-2,9,-3,2,3,5,-9,6,9,1,-2,-5,-7,-2,9,-6,-3,5,-5,-5,-6,4,1,3,-3,-4,-1,5,-4,-10,7,6,-10,-5,-5,3,-1,9,10,-4,8,-5,10,8,9,7,-5,-5,1,8,-10,-1,10,5,-4,1,8,1,-6,-2,-9,10,-1,7,-4,-1,-7,-7,2,5,2,8,-1,-10,9,1,-10,-2,-5,4,-5,4,-7,9,5,-7,-1,9,-3,-3,10,10,5,4,10,-9,-2,7,4,-1,1,7,1,7,4,6,-4,-7,-6,-8,8,-1,10,10,-3,4,6,-9,-5,3,-4,5,-5,8,-1,8,-4,10,7,10,2,8,-3,-7,3,10,-8,7,9,-7,-2,2,5,1,-3,-4,5,4,-8,10,2,-9,7,4,-1,-6,5,10,9,2,4,-10,-9,-9,-7,8,-9,10,5,1,6,-1,-7,-10,2,-10,-9,5,5,5,-3,9,-2,-9,4,4,-9,-10,-4,3,-4,2,3,1,1,10,-3,-7,10,1,-8,-4,10,1,2,-9,9,10,-9,2,1,6,-2,8,-9,-8,3,-1,-3,6,10,-4,9,3,-6,-9,-6,10,8,-4,6,1,3,4,-8,-3,-10,-7,10,-8,-4,5,2,2,5,4,-7,3,-10,-5,-9,-9,5,7,-8,4,-2,4,6,1,-1,3,1,-9,4,1,4,4,6,7,-6,3,-9,1,4,-7,8,-4,-7,-2,-1,-6,-1,-6,-4,8,-1,-8,-10,8,-3,-1,-8,-10,10,-7,2,-5,6,9,-2,9,-10,8,8,-5,2,1,-1,-4,-2,-1,8,9,-7,5,-7,-7,-3,-8,10,1,-1,1,-3,4,-9,2,-3,1,-1,-1,1,7,2,5,3,3,8,6,10,7,-5,5,1,-7,-2,-3,8,-9,9,2,9,6,9,9,1,7,8,-3,-9,3,1,-6,-10,-1,8,9,-9,5,6,-7,1,-3,9,-7,-6,-10,8,6,-3,-7,10,-6,-2,9,4,-4,-4,-3,-3,-9,-3,-6,9,9,10,-2,-3,-9,1,4,6,2,5,2,6,-8,2,-9,7,4,-7,8,-5,6,7,-3,8,-4,1,-2,9,7,6,-4,-8,-10,3,5,-7,5,-1,-8,4,-1,-7,-3,6,10,7,-7,-2,-10,-7,4,5,7,-8,4,-6,-6,-1,1,-8,-1,5,-10,5,2,4,-5,7,-7,-6,6,8,-6,2,8,8,-5,-7,8,6,5,7,-8,-3,-9,6,4,-1,4,-8,3,4,-9,-4,3,8,-9,10,-1,-10,6,8,-1,10,2,10,4,-5,4,-1,-1,-7,-5,-6,3,-7,-6,-9,-5,2,7,-5,7,5,9,-8,-4,-9,-1,-5,4,3,10,7,-1,5,3,8,-9,-9,8,9,2,2,4,10,-3,8,-5,1,5,1,-7,8,-1,-4,-4,-2,2,2,5,-6,4,-2,-10,-4,-10,-3,-5,2,-7,6,1,10,6,-1,-1,-9,-2,4,5,-7,5,1,8,-8,10,-8,6,4,7,2,2,-3,-4,8,-4,-6,4,9,-3,-9,-2,5,5,7,5,-10,-3,-3,9,-8,-6,-2,-6,-2,-7,-3,8,-5,9,4,3,3,8,-5,-7,2,9,-2,4,-3,5,-1,6,-5,-10,-9,5,-1,7,-10,8,8,5,-4,5,1,3,-2,-8,4,-8,-4,-4,-5,-2,-7,-6,-10,6,9,1,-3,2,5,-4,1,-1,-4,2,6,-2,-4,8,9,-10,-7,-10,9,-6,5,5,-2,3,-1,-5,8,-2,8,-8,3,-7,1,1,-1,-4,6,4,-6,-4,-1,8,6,2,9,1,10,-2,-7,-8,-9,5,-4,3,-6,-8,6,6,5,6,-2,4,8,2,1,4,-4,5,-9,-7,7,-4,1,-5,-10,8,1,-3,-2,-2,4,-2,4,6,8,-8,9,8,-2,6,-5,5,6,2,-2,10,-10,-6,-4,10,6,-8,10,2,-8,-7,3,-8,-1,-9,-7,-2,-3,-5,-1,-8,-3,-9,-2,-8,-1,5,6,-5,8,-1,-4,3,-1,4,-3,6,-1,-10,8,-5,-2,3,8,6,-1,-10,-10,-2,-3,-3,-3,2,-6,8,10,-10,-8,10,-10,-1,-3,-6,5,-6,-8,-5,-1,-4,-1,10,-8,6,3,1,2,6,2,-10,2,7,8,3,-1,6,-1,-5,-7,4,-7,-7,4,6,-5,-5,6,-9,6,-6,8,8,8,-8,-6,-9,5,4,9,-7,10,-1,6,1,-1,6,8,-9,-9,5,9,-10,2,-6,-6,3,-7,-2,-6,2,1,9,5,-10,-6,10,1,-10,6,3,-8,-7,3,-5,-4,6,-6,7,-4], dtype = "int32")#candidate|9904|(936,)|const|int32
var_9905 = relay.var("var_9905", dtype = "float32", shape = (715,))#candidate|9905|(715,)|var|float32
call_9901 = relay.TupleGetItem(func_4960_call(relay.reshape(const_9902.astype('bool'), [11, 35]), relay.reshape(var_9903.astype('int8'), [75, 3]), relay.reshape(const_9904.astype('int32'), [36, 26]), relay.reshape(var_9905.astype('float32'), [715,]), ), 6)
call_9906 = relay.TupleGetItem(func_4965_call(relay.reshape(const_9902.astype('bool'), [11, 35]), relay.reshape(var_9903.astype('int8'), [75, 3]), relay.reshape(const_9904.astype('int32'), [36, 26]), relay.reshape(var_9905.astype('float32'), [715,]), ), 6)
uop_9908 = relay.sqrt(const_9902.astype('float32')) # shape=(55, 7)
output = relay.Tuple([call_9878,call_9885,const_9886,call_9897,call_9901,var_9903,const_9904,var_9905,uop_9908,])
output2 = relay.Tuple([call_9879,call_9887,const_9886,call_9898,call_9906,var_9903,const_9904,var_9905,uop_9908,])
func_9910 = relay.Function([var_9903,var_9905,], output)
mod['func_9910'] = func_9910
mod = relay.transform.InferType()(mod)
var_9911 = relay.var("var_9911", dtype = "int8", shape = (25, 9))#candidate|9911|(25, 9)|var|int8
var_9912 = relay.var("var_9912", dtype = "float32", shape = (715,))#candidate|9912|(715,)|var|float32
output = func_9910(var_9911,var_9912,)
func_9913 = relay.Function([var_9911,var_9912,], output)
mutated_mod['func_9913'] = func_9913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6057_call = mod.get_global_var('func_6057')
func_6058_call = mutated_mod.get_global_var('func_6058')
call_9915 = func_6057_call()
call_9916 = func_6057_call()
output = relay.Tuple([call_9915,])
output2 = relay.Tuple([call_9916,])
func_9922 = relay.Function([], output)
mod['func_9922'] = func_9922
mod = relay.transform.InferType()(mod)
output = func_9922()
func_9923 = relay.Function([], output)
mutated_mod['func_9923'] = func_9923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5875_call = mod.get_global_var('func_5875')
func_5876_call = mutated_mod.get_global_var('func_5876')
call_9966 = func_5875_call()
call_9967 = func_5875_call()
output = relay.Tuple([call_9966,])
output2 = relay.Tuple([call_9967,])
func_9980 = relay.Function([], output)
mod['func_9980'] = func_9980
mod = relay.transform.InferType()(mod)
output = func_9980()
func_9981 = relay.Function([], output)
mutated_mod['func_9981'] = func_9981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7789_call = mod.get_global_var('func_7789')
func_7790_call = mutated_mod.get_global_var('func_7790')
call_10019 = relay.TupleGetItem(func_7789_call(), 1)
call_10020 = relay.TupleGetItem(func_7790_call(), 1)
func_7264_call = mod.get_global_var('func_7264')
func_7266_call = mutated_mod.get_global_var('func_7266')
call_10021 = relay.TupleGetItem(func_7264_call(), 2)
call_10022 = relay.TupleGetItem(func_7266_call(), 2)
func_3044_call = mod.get_global_var('func_3044')
func_3049_call = mutated_mod.get_global_var('func_3049')
const_10024 = relay.const([2.849922,8.830993,-1.783521,1.998111,-0.662192,-9.956969,-7.992798,1.421176,-0.525556,1.866580,-0.984734,2.995002,4.652545,-3.526939,-7.133986,-9.462448,2.026611,-8.208237,-8.719229,9.028675,3.881692,4.132449,-2.967957,5.951002,8.077565,-5.683036,-1.046271,-5.017461,-5.634641,-4.070693,0.909043,7.960191,-4.079818,-9.645488,2.965125,-2.162975,7.852411,-0.717388,-3.685846,-9.237890,5.847208,-0.726245,-1.657114,3.904284,3.836645,0.639741,-3.453874,2.904173,-6.359503,0.533809,-9.178517,-2.499141,-7.094429,0.488064,8.179007,-1.159645,-9.887178,-1.892175,-4.180035,0.711882,-8.548209,-0.003292,3.635892,3.641325,0.341506,6.128638,-4.100566,6.455113,0.359838,-2.187654,4.328657,2.284314,0.160356,-7.615874,0.104340,0.810205,4.745117,0.763626,-9.371042,-2.796943,8.531944,8.595108,-0.245996,-2.981543,4.336526,-4.629402,-4.734752,-8.162420,0.811790,3.384822,-5.847677,-3.080563,-7.070064,4.375965,2.759184,-0.864028,3.483063,-5.869347,-0.883343,6.187211,1.335137,-4.801493,7.780729,9.161761,-8.328356,-9.438261,-9.153298,-0.215146,-0.367073,8.678566,4.945202,-2.457625,3.291494,-0.737758,-3.970373,0.198631,0.736779,1.766766,-8.391612,-0.624157,1.445109,7.496375,1.429279,-4.109839,2.275603,8.788740,3.142028,-6.376606,9.242562,-4.282854,-8.862106,3.681316,-9.813198,6.073567,-0.594061,8.734112,-3.413707,0.495087,-7.743651,7.061315,1.516592,-0.045618,-4.657011,0.054408,-5.887202,6.327858,4.006040,-3.677149,5.354141,-0.200295,0.030252,3.872898,-2.558561,-3.094652,-6.044349,8.618921,-4.918309,-0.291540,-3.263691,-3.605992,-1.850942,5.205731,3.596508,9.212136,4.696214,-2.807888,9.561786,-9.350428,-0.105709,-2.018233,-3.587268,-6.942112,3.187365,-1.576744,-2.783971,-3.903189,-5.985593,-7.869460,-3.481224,7.323962,3.946930,-2.415260,6.054447,-5.075239,9.287752,4.334126,-1.800218,1.065025,-3.500141,0.740306,-3.735988,1.641083,-3.879511,-1.252823,6.994998,-8.068004,1.218841,0.252760,-8.388439,-3.460608,-8.457388,1.141386,9.462221,0.148047,-4.459486,-7.445848,-2.633786,-5.537435,6.484397,1.568315,-3.805101,8.510746,2.292262,-3.890652,5.294837,7.759879,-0.051437,-8.040261,9.975745,-2.095882,0.234635,0.878361,-1.027693,-1.250743,-5.047896,9.431444,6.768292,4.689122,5.613594,-6.962656,-1.084214,1.922765,2.543801,4.361763,0.016218,-3.580386,-7.007563,-8.631035,6.679359,6.578796,3.479166,-1.533129,1.994578,5.961828,-5.095586,8.002856,1.413674,3.375077,3.930152,-2.843587,-5.316986,5.869065,-5.943427,-6.999627,-6.364374,0.007085,-9.140957,-5.174102,7.602486,-9.642407,-9.717342,3.122658,-1.122076,-5.090061,0.953980,-0.510836,7.364224,-3.046003,-7.848356,-8.041222,-2.657369,-0.064676,1.151365,2.384918,-8.114442,-7.509784,7.877561,-6.733875,4.747631,8.950472,7.367866,-5.129681,5.914787,-3.439017,1.317970,-0.212821,3.109820,-6.639502,-1.788158,7.716532,-4.526071,4.230441,9.101017,7.370602,-8.101792,0.825038,0.163030,-6.503263,7.537627,-5.649682,2.517301,-7.147337,7.175651,-4.805631,-4.936786,-3.860235,8.327337,4.374653,6.314885,5.941182,9.193060,-5.826363,3.510678,-4.248073,9.518821,8.238240,3.982395,7.498614,1.888945,-2.227868,-7.157448,-9.124757,-1.881230,-3.038292,-5.914979,0.457924,4.891921,-8.338575,6.525063,0.254439,0.558785,7.778117,-8.711205,3.153895,-1.383945,-2.814549,-6.006548,4.186949,-8.380464,5.767563,7.311306,-5.248429,-8.830509,3.135856,0.587478,-2.597214,-6.575956,-5.955857,4.927828,-5.249841,1.923182,-7.448370,8.090143,5.119574,5.620449,-8.683947,0.888654,4.120550,-2.186861,8.880765,6.227360,-3.512952,-9.703208,2.505806,5.341724,8.159406,-8.260931,-0.436595,1.666174,4.729620,-4.973626,-1.574794,-7.272677,4.513759,-0.571716,4.399177,1.134683,6.465415,-4.816410,7.948305,-4.778389,-6.222172,-0.224530,-9.246945,-6.512734,-9.974942,-1.193465,0.454984,6.947405,8.713467,3.711951,6.040144,-4.848789,-9.412010,3.839087,-3.239334,3.941492,-3.348515,-7.212360,2.802513,-1.467663,0.182609,-4.568654,-9.458387,-6.872657,-5.042728,-2.148278,-7.454545,-9.385633,8.287872,-3.693723,-9.534892,-3.519980,2.923289,0.300459,-6.892429,-1.392731,-3.430365,-5.210216,-3.060010,-3.270323,-0.868562,9.606007,-4.728553,-3.105968,7.505614,9.734332,-9.916312,0.177056,-1.663066,-6.351876,-4.953099,9.603931,-6.907482,0.377456,-4.967745,9.213875,-0.799037,7.049560,-8.174306,-9.664086,-0.020853,8.005220,-6.517047,-1.533602,-9.409713,3.536854,7.936206,7.925174,-6.862884,3.918011,4.895812,7.883838,7.572530,-9.897041,-0.120667,6.077941,-2.654112,3.148915,3.156566,-3.460052,9.734659,8.858389,-2.485247,-0.657569,0.952155,7.491581,-7.306037,5.610622,1.223634,9.365843,-5.792990,-3.472878,-0.180187,1.175419,1.126970,1.135871,2.186197,5.190486,7.374265,-8.828910,5.480027,6.145952,2.718942,8.054544,-7.461349,-0.737760,-8.912027,-2.841240,1.683297,-2.128511,9.028761,7.470871,-5.352025,-2.868189,-8.873838,1.143010,-4.665157,8.376167,3.459834,-9.780609,8.542608,-8.669973,0.291557,-3.252827,1.933069,4.340528,-4.082641,7.290040,7.987951,9.781556,7.591721,-9.645346,7.495632,4.422342,-6.370198,2.022175,-1.494205,2.726887,-4.405799,-9.150432,0.656443,-0.585953,-8.640066,-4.447210,0.595424,0.205023,-0.773432,-5.262271,3.764429,-5.651697,3.582237,-3.926560,-5.506922,4.813199,4.643062,-3.057070,8.371853,7.897084,-6.467548,7.511088,5.483601,-9.318606,-8.465438,5.435687,-3.649407,-4.303864,4.324076,-0.661239,-0.225215,-8.051596,5.121678,-7.131252,1.539079,6.495517,-9.425696,8.979772,1.232824,3.052599,-1.086142,-0.798827,3.269483,-9.305794,4.350827,-8.754371,-7.627239,3.196374,7.026294,-8.918433,6.400977,-0.372487,2.272863,3.099169,-0.488252,-0.950944,-9.648811,5.119849,0.268831,-0.450212,-8.313388,4.798507,-8.613171,9.295873,-4.221691,-0.331789,3.742395,0.633444,4.153285,3.150294,-6.977502,-4.600300,-2.575220,-7.733389,-5.886825,-9.651840,9.068675,5.962253,0.036512,6.442077,3.787677,8.692775,-9.542396,2.815563,-7.043248,8.878382,-0.487055,6.631468,-0.070683,8.255159,-8.551301,1.641689,4.334283,9.526565,4.831176,-8.506661,2.254318,2.870735,0.761392,5.570155,-8.515079,-2.108937,-0.892466,7.056367,2.366296,6.246223,3.319862,7.099645,-8.245789,9.161487,2.339691,-5.579036,7.168853,-3.941286,-0.081726,-8.572649,4.772658,8.835139,-4.287786,-2.207822,7.758559,-2.990666,-8.248750,3.252546,-1.615392,9.540809,2.115994,-6.555126,8.094076,6.404482,-6.052708,-4.621172,-2.900947,-7.604525,2.509617,-8.209353,-5.665362,1.907530,-7.554043,5.386478,0.421893,-7.571492,-1.376066,1.571525,2.031506,6.302556,5.080009,1.922271,-4.298259,-9.376347,-9.112506,-7.205569,3.414376,-0.829074,4.646811,7.607288,-2.339629,4.333381,-1.325792,-6.296604,0.203266,-5.209446,-8.969665,-6.368770,4.682845,-8.206708,7.406578,-7.455014,-8.075020,-1.969060,0.471794,-7.833751,5.468447,-5.832474,-5.438061,5.253149,4.940188,-4.655392,-4.698075,-6.663309,-9.886522,3.848324,8.042255,-3.696477,-3.749661,9.516154,-6.848438,2.420323,0.678266,-0.004592,8.762917,8.391558,2.131010,-0.044063,-3.323161,6.286678], dtype = "float32")#candidate|10024|(715,)|const|float32
const_10025 = relay.const([[8,10,-7,-4,-8,1,5,-7,-3,8,2,7,-5,10,-4,10,-6,7,3,-4,-4,-8,-10,-3,-7,9,10,-3,-3,-8,-5,1,3,5,-9,-8,3,-3,-2,8,-9,3,2,-4,-8,10,-5,5,8,3,-10,-4,8,7,-4,-3,1,10,-9,6,9,3,8,-9,1,-8,4,5,7,-5,-9,4,4,3,10,-3,7,4,-7,6,6]], dtype = "int32")#candidate|10025|(1, 81)|const|int32
var_10026 = relay.var("var_10026", dtype = "int8", shape = (75,))#candidate|10026|(75,)|var|int8
const_10027 = relay.const([False,True,True,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,False,False], dtype = "bool")#candidate|10027|(385,)|const|bool
call_10023 = relay.TupleGetItem(func_3044_call(relay.reshape(const_10024.astype('float32'), [13, 11, 5]), relay.reshape(const_10025.astype('int32'), [81,]), relay.reshape(var_10026.astype('int8'), [15, 5]), relay.reshape(const_10027.astype('bool'), [385,]), ), 6)
call_10028 = relay.TupleGetItem(func_3049_call(relay.reshape(const_10024.astype('float32'), [13, 11, 5]), relay.reshape(const_10025.astype('int32'), [81,]), relay.reshape(var_10026.astype('int8'), [15, 5]), relay.reshape(const_10027.astype('bool'), [385,]), ), 6)
func_4960_call = mod.get_global_var('func_4960')
func_4965_call = mutated_mod.get_global_var('func_4965')
var_10030 = relay.var("var_10030", dtype = "int8", shape = (1, 225))#candidate|10030|(1, 225)|var|int8
var_10031 = relay.var("var_10031", dtype = "int32", shape = (936,))#candidate|10031|(936,)|var|int32
call_10029 = relay.TupleGetItem(func_4960_call(relay.reshape(const_10027.astype('bool'), [11, 35]), relay.reshape(var_10030.astype('int8'), [75, 3]), relay.reshape(var_10031.astype('int32'), [36, 26]), relay.reshape(const_10024.astype('float32'), [715,]), ), 1)
call_10032 = relay.TupleGetItem(func_4965_call(relay.reshape(const_10027.astype('bool'), [11, 35]), relay.reshape(var_10030.astype('int8'), [75, 3]), relay.reshape(var_10031.astype('int32'), [36, 26]), relay.reshape(const_10024.astype('float32'), [715,]), ), 1)
func_4787_call = mod.get_global_var('func_4787')
func_4790_call = mutated_mod.get_global_var('func_4790')
call_10044 = relay.TupleGetItem(func_4787_call(relay.reshape(const_10027.astype('bool'), [385,])), 0)
call_10045 = relay.TupleGetItem(func_4790_call(relay.reshape(const_10027.astype('bool'), [385,])), 0)
output = relay.Tuple([call_10019,call_10021,call_10023,const_10024,const_10025,var_10026,const_10027,call_10029,var_10030,var_10031,call_10044,])
output2 = relay.Tuple([call_10020,call_10022,call_10028,const_10024,const_10025,var_10026,const_10027,call_10032,var_10030,var_10031,call_10045,])
func_10052 = relay.Function([var_10026,var_10030,var_10031,], output)
mod['func_10052'] = func_10052
mod = relay.transform.InferType()(mod)
mutated_mod['func_10052'] = func_10052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10052_call = mutated_mod.get_global_var('func_10052')
var_10054 = relay.var("var_10054", dtype = "int8", shape = (75,))#candidate|10054|(75,)|var|int8
var_10055 = relay.var("var_10055", dtype = "int8", shape = (1, 225))#candidate|10055|(1, 225)|var|int8
var_10056 = relay.var("var_10056", dtype = "int32", shape = (936,))#candidate|10056|(936,)|var|int32
call_10053 = func_10052_call(var_10054,var_10055,var_10056,)
output = call_10053
func_10057 = relay.Function([var_10054,var_10055,var_10056,], output)
mutated_mod['func_10057'] = func_10057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9922_call = mod.get_global_var('func_9922')
func_9923_call = mutated_mod.get_global_var('func_9923')
call_10083 = relay.TupleGetItem(func_9922_call(), 0)
call_10084 = relay.TupleGetItem(func_9923_call(), 0)
output = relay.Tuple([call_10083,])
output2 = relay.Tuple([call_10084,])
func_10087 = relay.Function([], output)
mod['func_10087'] = func_10087
mod = relay.transform.InferType()(mod)
mutated_mod['func_10087'] = func_10087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10087_call = mutated_mod.get_global_var('func_10087')
call_10088 = func_10087_call()
output = call_10088
func_10089 = relay.Function([], output)
mutated_mod['func_10089'] = func_10089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5410_call = mod.get_global_var('func_5410')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_10104 = func_5410_call()
call_10105 = func_5410_call()
output = call_10104
output2 = call_10105
func_10106 = relay.Function([], output)
mod['func_10106'] = func_10106
mod = relay.transform.InferType()(mod)
mutated_mod['func_10106'] = func_10106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10106_call = mutated_mod.get_global_var('func_10106')
call_10107 = func_10106_call()
output = call_10107
func_10108 = relay.Function([], output)
mutated_mod['func_10108'] = func_10108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6936_call = mod.get_global_var('func_6936')
func_6937_call = mutated_mod.get_global_var('func_6937')
call_10113 = relay.TupleGetItem(func_6936_call(), 0)
call_10114 = relay.TupleGetItem(func_6937_call(), 0)
uop_10123 = relay.asinh(call_10113.astype('float32')) # shape=(7, 4, 7)
uop_10125 = relay.asinh(call_10114.astype('float32')) # shape=(7, 4, 7)
func_7589_call = mod.get_global_var('func_7589')
func_7591_call = mutated_mod.get_global_var('func_7591')
call_10126 = func_7589_call()
call_10127 = func_7589_call()
func_7740_call = mod.get_global_var('func_7740')
func_7742_call = mutated_mod.get_global_var('func_7742')
call_10135 = relay.TupleGetItem(func_7740_call(), 0)
call_10136 = relay.TupleGetItem(func_7742_call(), 0)
output = relay.Tuple([uop_10123,call_10126,call_10135,])
output2 = relay.Tuple([uop_10125,call_10127,call_10136,])
func_10144 = relay.Function([], output)
mod['func_10144'] = func_10144
mod = relay.transform.InferType()(mod)
mutated_mod['func_10144'] = func_10144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10144_call = mutated_mod.get_global_var('func_10144')
call_10145 = func_10144_call()
output = call_10145
func_10146 = relay.Function([], output)
mutated_mod['func_10146'] = func_10146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7740_call = mod.get_global_var('func_7740')
func_7742_call = mutated_mod.get_global_var('func_7742')
call_10188 = relay.TupleGetItem(func_7740_call(), 0)
call_10189 = relay.TupleGetItem(func_7742_call(), 0)
output = relay.Tuple([call_10188,])
output2 = relay.Tuple([call_10189,])
func_10200 = relay.Function([], output)
mod['func_10200'] = func_10200
mod = relay.transform.InferType()(mod)
mutated_mod['func_10200'] = func_10200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10200_call = mutated_mod.get_global_var('func_10200')
call_10201 = func_10200_call()
output = call_10201
func_10202 = relay.Function([], output)
mutated_mod['func_10202'] = func_10202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10200_call = mod.get_global_var('func_10200')
func_10202_call = mutated_mod.get_global_var('func_10202')
call_10223 = relay.TupleGetItem(func_10200_call(), 0)
call_10224 = relay.TupleGetItem(func_10202_call(), 0)
func_5269_call = mod.get_global_var('func_5269')
func_5270_call = mutated_mod.get_global_var('func_5270')
call_10225 = relay.TupleGetItem(func_5269_call(), 0)
call_10226 = relay.TupleGetItem(func_5270_call(), 0)
output = relay.Tuple([call_10223,call_10225,])
output2 = relay.Tuple([call_10224,call_10226,])
func_10235 = relay.Function([], output)
mod['func_10235'] = func_10235
mod = relay.transform.InferType()(mod)
mutated_mod['func_10235'] = func_10235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10235_call = mutated_mod.get_global_var('func_10235')
call_10236 = func_10235_call()
output = call_10236
func_10237 = relay.Function([], output)
mutated_mod['func_10237'] = func_10237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7589_call = mod.get_global_var('func_7589')
func_7591_call = mutated_mod.get_global_var('func_7591')
call_10246 = func_7589_call()
call_10247 = func_7589_call()
output = relay.Tuple([call_10246,])
output2 = relay.Tuple([call_10247,])
func_10254 = relay.Function([], output)
mod['func_10254'] = func_10254
mod = relay.transform.InferType()(mod)
output = func_10254()
func_10255 = relay.Function([], output)
mutated_mod['func_10255'] = func_10255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4977_call = mod.get_global_var('func_4977')
func_4979_call = mutated_mod.get_global_var('func_4979')
call_10259 = relay.TupleGetItem(func_4977_call(), 0)
call_10260 = relay.TupleGetItem(func_4979_call(), 0)
func_2094_call = mod.get_global_var('func_2094')
func_2099_call = mutated_mod.get_global_var('func_2099')
const_10287 = relay.const(6, dtype = "int8")#candidate|10287|()|const|int8
var_10288 = relay.var("var_10288", dtype = "int8", shape = (75,))#candidate|10288|(75,)|var|int8
var_10289 = relay.var("var_10289", dtype = "bool", shape = (385,))#candidate|10289|(385,)|var|bool
call_10286 = relay.TupleGetItem(func_2094_call(relay.reshape(const_10287.astype('int8'), []), relay.reshape(var_10288.astype('int8'), [15, 1, 5]), relay.reshape(var_10289.astype('bool'), [385,]), ), 3)
call_10290 = relay.TupleGetItem(func_2099_call(relay.reshape(const_10287.astype('int8'), []), relay.reshape(var_10288.astype('int8'), [15, 1, 5]), relay.reshape(var_10289.astype('bool'), [385,]), ), 3)
output = relay.Tuple([call_10259,call_10286,const_10287,var_10288,var_10289,])
output2 = relay.Tuple([call_10260,call_10290,const_10287,var_10288,var_10289,])
func_10293 = relay.Function([var_10288,var_10289,], output)
mod['func_10293'] = func_10293
mod = relay.transform.InferType()(mod)
var_10294 = relay.var("var_10294", dtype = "int8", shape = (75,))#candidate|10294|(75,)|var|int8
var_10295 = relay.var("var_10295", dtype = "bool", shape = (385,))#candidate|10295|(385,)|var|bool
output = func_10293(var_10294,var_10295,)
func_10296 = relay.Function([var_10294,var_10295,], output)
mutated_mod['func_10296'] = func_10296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9567_call = mod.get_global_var('func_9567')
func_9569_call = mutated_mod.get_global_var('func_9569')
call_10320 = relay.TupleGetItem(func_9567_call(), 0)
call_10321 = relay.TupleGetItem(func_9569_call(), 0)
output = call_10320
output2 = call_10321
func_10331 = relay.Function([], output)
mod['func_10331'] = func_10331
mod = relay.transform.InferType()(mod)
mutated_mod['func_10331'] = func_10331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10331_call = mutated_mod.get_global_var('func_10331')
call_10332 = func_10331_call()
output = call_10332
func_10333 = relay.Function([], output)
mutated_mod['func_10333'] = func_10333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8375_call = mod.get_global_var('func_8375')
func_8376_call = mutated_mod.get_global_var('func_8376')
call_10366 = relay.TupleGetItem(func_8375_call(), 0)
call_10367 = relay.TupleGetItem(func_8376_call(), 0)
func_6086_call = mod.get_global_var('func_6086')
func_6087_call = mutated_mod.get_global_var('func_6087')
call_10372 = relay.TupleGetItem(func_6086_call(), 0)
call_10373 = relay.TupleGetItem(func_6087_call(), 0)
func_6430_call = mod.get_global_var('func_6430')
func_6432_call = mutated_mod.get_global_var('func_6432')
const_10375 = relay.const(-9, dtype = "int32")#candidate|10375|()|const|int32
call_10374 = relay.TupleGetItem(func_6430_call(relay.reshape(const_10375.astype('int32'), [])), 5)
call_10376 = relay.TupleGetItem(func_6432_call(relay.reshape(const_10375.astype('int32'), [])), 5)
output = relay.Tuple([call_10366,call_10372,call_10374,const_10375,])
output2 = relay.Tuple([call_10367,call_10373,call_10376,const_10375,])
func_10381 = relay.Function([], output)
mod['func_10381'] = func_10381
mod = relay.transform.InferType()(mod)
output = func_10381()
func_10382 = relay.Function([], output)
mutated_mod['func_10382'] = func_10382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6936_call = mod.get_global_var('func_6936')
func_6937_call = mutated_mod.get_global_var('func_6937')
call_10466 = relay.TupleGetItem(func_6936_call(), 0)
call_10467 = relay.TupleGetItem(func_6937_call(), 0)
func_8780_call = mod.get_global_var('func_8780')
func_8782_call = mutated_mod.get_global_var('func_8782')
call_10482 = relay.TupleGetItem(func_8780_call(), 0)
call_10483 = relay.TupleGetItem(func_8782_call(), 0)
func_9595_call = mod.get_global_var('func_9595')
func_9596_call = mutated_mod.get_global_var('func_9596')
call_10484 = relay.TupleGetItem(func_9595_call(), 0)
call_10485 = relay.TupleGetItem(func_9596_call(), 0)
var_10488 = relay.var("var_10488", dtype = "float32", shape = (7, 4, 7))#candidate|10488|(7, 4, 7)|var|float32
bop_10489 = relay.bitwise_xor(call_10466.astype('int8'), relay.reshape(var_10488.astype('int8'), relay.shape_of(call_10466))) # shape=(7, 4, 7)
bop_10492 = relay.bitwise_xor(call_10467.astype('int8'), relay.reshape(var_10488.astype('int8'), relay.shape_of(call_10467))) # shape=(7, 4, 7)
func_7732_call = mod.get_global_var('func_7732')
func_7735_call = mutated_mod.get_global_var('func_7735')
const_10511 = relay.const(-3, dtype = "int8")#candidate|10511|()|const|int8
call_10510 = relay.TupleGetItem(func_7732_call(relay.reshape(const_10511.astype('int8'), [])), 1)
call_10512 = relay.TupleGetItem(func_7735_call(relay.reshape(const_10511.astype('int8'), [])), 1)
func_1504_call = mod.get_global_var('func_1504')
func_1508_call = mutated_mod.get_global_var('func_1508')
const_10516 = relay.const([5,-8,6,2,-3,3,6,8,7,8,6,10,-7,-5,7,-10,3,5,-1,-5,6,2,3,-5,-5,-10,8,-5,6,4,7,-6,-2,-10,-9,-9,-5,9,2,10,-9,-6,-8,-4,2,8,1,-10,6,-8,-6,-2,-8,9,-4,-7,7,10,6,-2,1,8,7,-5,-7,-9,-9,-2,-9,9,9,-6,9,4,9,6,9,2,-1,8,-1], dtype = "int32")#candidate|10516|(81,)|const|int32
call_10515 = relay.TupleGetItem(func_1504_call(relay.reshape(const_10511.astype('int32'), []), relay.reshape(const_10516.astype('int32'), [9, 1, 9]), ), 1)
call_10517 = relay.TupleGetItem(func_1508_call(relay.reshape(const_10511.astype('int32'), []), relay.reshape(const_10516.astype('int32'), [9, 1, 9]), ), 1)
output = relay.Tuple([call_10482,call_10484,bop_10489,call_10510,const_10511,call_10515,const_10516,])
output2 = relay.Tuple([call_10483,call_10485,bop_10492,call_10512,const_10511,call_10517,const_10516,])
func_10519 = relay.Function([var_10488,], output)
mod['func_10519'] = func_10519
mod = relay.transform.InferType()(mod)
var_10520 = relay.var("var_10520", dtype = "float32", shape = (7, 4, 7))#candidate|10520|(7, 4, 7)|var|float32
output = func_10519(var_10520)
func_10521 = relay.Function([var_10520], output)
mutated_mod['func_10521'] = func_10521
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10555 = relay.constdtype = "float32")#candidate|10555|(2, 10, 11)|const|float32
uop_10556 = relay.acos(const_10555.astype('float32')) # shape=(2, 10, 11)
output = relay.Tuple([uop_10556,])
output2 = relay.Tuple([uop_10556,])
func_10560 = relay.Function([], output)
mod['func_10560'] = func_10560
mod = relay.transform.InferType()(mod)
mutated_mod['func_10560'] = func_10560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10560_call = mutated_mod.get_global_var('func_10560')
call_10561 = func_10560_call()
output = call_10561
func_10562 = relay.Function([], output)
mutated_mod['func_10562'] = func_10562
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10590 = relay.var("var_10590", dtype = "float64", shape = (5, 4, 1))#candidate|10590|(5, 4, 1)|var|float64
uop_10591 = relay.erf(var_10590.astype('float64')) # shape=(5, 4, 1)
output = uop_10591
output2 = uop_10591
func_10593 = relay.Function([var_10590,], output)
mod['func_10593'] = func_10593
mod = relay.transform.InferType()(mod)
var_10594 = relay.var("var_10594", dtype = "float64", shape = (5, 4, 1))#candidate|10594|(5, 4, 1)|var|float64
output = func_10593(var_10594)
func_10595 = relay.Function([var_10594], output)
mutated_mod['func_10595'] = func_10595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5410_call = mod.get_global_var('func_5410')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_10610 = func_5410_call()
call_10611 = func_5410_call()
func_8883_call = mod.get_global_var('func_8883')
func_8884_call = mutated_mod.get_global_var('func_8884')
call_10661 = relay.TupleGetItem(func_8883_call(), 0)
call_10662 = relay.TupleGetItem(func_8884_call(), 0)
func_3391_call = mod.get_global_var('func_3391')
func_3395_call = mutated_mod.get_global_var('func_3395')
const_10687 = relay.const([1.002259,-9.138275,2.455436,-5.695046,6.912646,-9.414828,1.784140,-5.032930,-0.567424,6.351838,-3.453580,-1.513963,4.162238,-1.910617,2.127218,9.868303,5.963486,7.204077,3.119897,6.373066,-6.681478,-6.767687,8.132924,5.841229,2.591071,-3.994470,-8.373579,0.314405,7.014417,-7.152401,-4.380511,-0.089041,-9.107030,-8.722699,6.416173,-3.350982,-5.777538,3.096576,3.896444,1.127929,1.162481,-3.187680,-2.927065,1.893603,5.098785,-5.586993,0.358681,4.466163,5.943154,4.166543,-6.814263,-3.965000,-8.986163,-1.782726,0.127909,-7.589976,7.112042,-2.994275,1.474274,-5.241362,-9.348121,-2.686845,0.865978,6.779513,-7.423611,7.503561,-3.025662,2.457732,0.387982,8.487676,9.666886,3.650001,-9.600886,-1.405934,8.349307,5.701945,8.335081,5.154760,8.129839,8.507061,0.840437,-9.735765,0.409705,-5.609669,-4.325418,2.342356,-0.314837,-4.960054,-5.164941,-3.902486,3.313686,7.396573,8.371155,9.502692,9.985707,-5.039332,9.007245,2.428740,-1.147602,3.961173,1.068338,-1.669494,3.871023,-9.722222,5.437880,1.078055,-9.032648,-6.244203,1.983234,0.984835,-0.361441,1.056450,-8.543471,-7.215662,7.803432,1.612699,-3.399857,-8.488730,4.113619,-3.281867,0.175423,2.808648,-8.134078,4.664076,-6.039470,9.613267,7.442469,-6.115485,1.071059,-4.964092,3.290358,1.387601,-3.339469,5.114902,-2.634143,-7.341546,-6.375746,-4.302512,3.107412,-3.450329,-4.406569,5.652947,7.521841,3.657521,-5.139157,3.482669,-5.151812,-5.895706,-7.850416,-7.902283,2.790848,-9.024151,-0.808454,-7.887363,-9.486736,7.229476,-4.783865,-8.623477,6.384621,-6.715024,-2.060750,8.480531,-8.730565,8.271396,9.450962,-2.065457,-2.234419,-0.514639,0.203708,9.183474,-9.967196,-9.100737,5.308681,-3.034254,-6.241681,-9.186569,-1.544186,3.152659,2.373855,3.833326,-7.301123,3.669897,-6.139989,-2.769714,9.713295,0.163092,-3.000381,-6.781033,8.727355,-5.339586,-6.142063,-2.727093,-2.396095,4.086664,-8.056391,6.312373,-5.695898,0.836394,-2.473043,-8.295583,3.703672,0.450659,5.488632,2.907750,-5.722258,2.926120,5.049215,1.543453,4.804259,2.117702,5.323249,9.767570,-1.205131,-6.348098,-1.175874,-1.601207,2.734286,0.195250,4.873275,7.302718,6.613688,-3.892052,-0.722357,-0.776923,3.488812,0.020961,-3.303739,-8.555809,5.407269,-3.476215,-1.434576,-3.001561,-6.237245,-1.275154,-9.712959,-3.122171,-0.491391,-2.346525,-4.090341,8.804959,4.290431,4.082631,0.665878,-5.681984,-9.391189,-9.527741,5.029851,-7.859400,-7.668664,1.712513,-8.907354,-9.746508,2.196387,1.447213,-5.205840,6.754304,9.621264,1.986025,-1.023907,-4.571390,-5.199146,6.718979,5.345952,-3.134840,8.283251,-9.901019,7.431912,-9.420818,-3.035851,-6.100778,-0.117310,-4.063030,-0.243953,-9.408524,7.296028,-0.973747,0.449903,0.394877,2.607207,6.084406,8.711862,3.758652,-2.740773,5.110181,0.869741,6.112015,6.864930,-7.206693,-4.731155,3.755412,4.298774,2.947895,4.992496,5.873840,-7.436847,1.790763,-1.820546,-1.856521,4.788916,4.547978,-5.616280,-1.902039,-2.989753,3.027090,-8.411932,-9.192341,-2.951297,-5.071492,-8.089120,3.589590,-3.773290,1.794873,1.148513,-5.437911,2.950242,0.930360,-1.084892,-1.267788,-6.187902,7.363814,-0.294551,-4.049062,-7.266485,-7.811682,-6.419116,6.068675,3.059485,-9.290700,8.557495,5.587850,-9.666181,-6.798297,-2.522212,-5.466672,-6.522126,6.785526,4.802133,-5.771284,1.871878,2.649602,-1.624783,-7.182210,2.175868,-3.281824,4.215715,9.704262,-3.702502,0.873472,-9.501786,-6.304243,3.914640,5.222297,3.610999,-1.183703,0.997288,0.421141,1.567584,6.369942,-9.563352,0.118962,2.442893,1.096598,-4.279089,-1.875033,-2.802435,7.817166,7.040164,1.524965,-4.007176,0.751253,5.047157,2.420127,-7.494716,9.027107,-7.240238,8.717935,7.308342,-5.136969,8.547322,4.732789,2.214479,3.360160,8.714834,2.305113,2.998748,2.847935,8.296076,7.565468,6.959478,-3.648614,1.455219,8.871497,0.372455,-6.887787,0.097126,-8.305251,-6.713979,9.212268,-2.062738,-1.031161,3.593240,-8.369535,-8.423482,-4.557324,-8.509411,-9.744116,-0.401037,6.940238,7.691472,-1.558382,9.523367,4.235089,1.269343,1.287329,3.620585,9.381069,-0.294755,-9.150029,2.774886,-4.186257,9.767580,3.109996,7.845772,9.627298,-7.253120,2.050685,7.801746,9.962478,4.766832,-6.253354,-6.332698,9.765557,-8.433488,-8.845174,-9.363857,1.514841,5.543905,-7.228702,0.336722,1.914957,8.114232,5.849661,5.360123,3.072891,-2.824012,8.096740,3.259188,6.098384,-7.627594,3.864153,-7.124663,1.391339,8.740519,-8.657342,5.686814,-7.917148,-8.435471,1.017545,2.996507,-9.292552,7.339963,-5.015545,-3.635314,-4.792583,6.520794,-3.695289,-2.728060,5.729188,8.236229,6.942559,3.924226,2.427482,9.755199,1.368247,-2.218329,-0.300344,-1.738458,-3.577836,-5.122572,2.584484,9.716201,-0.484784,5.658167,0.149717,6.508611,-2.090937,8.132481,5.889898,-8.360042,3.697087,-9.783429,-1.807698,-5.703753,-1.482941,1.530357,2.219326,0.557359,4.036573,8.740526,0.775733,5.445227,-7.597419,8.402559,0.281637,-8.743219,-3.524328,0.073804,5.002443,-1.845872,-3.923836,-8.852288,-5.418747,8.060218,-4.961971,-3.749091,-1.422060,8.318163,-5.097827,-7.822069,3.850667,-0.268495,3.894354,-0.261155,-4.448836,-2.070150,4.411958,-1.250236,-8.218712,2.509353,-7.157406,-1.335847,0.064099,8.757801,1.263002,6.738544,4.528792,-3.360379,5.832074,0.701307,7.797288,5.913198,-6.957902,-9.645810,1.357223,-7.077725,-3.153856,-5.289844,-6.285746,8.147714,4.628339,-2.860362,9.454233,-6.008569,-5.623692,-0.482088,3.370567,-0.429432,0.261790,5.884833,-7.376752,-4.819130,-2.159850,-1.817635,0.608451,-4.884108,-9.751661,5.034465,-6.120364,6.123614,8.722545,-9.376499,0.114578,1.735860,-2.425800,5.329309,-8.191474,3.381458,6.603018,6.957463,1.272873,2.316913,1.391572,0.928276,-2.039008,-2.266427,-8.447103,3.850158,1.788146,-2.042713,3.783377,-8.046083,-3.267150,-3.731886,3.426767,-5.770537,-7.186548,-5.974840,-6.286478,5.143689,-7.369064,-4.662601,-1.521868,-3.261589,-2.552260,5.819912,0.154860,3.194360,9.468440,7.120614,-0.847424,-5.981175,7.208551,-3.554748,-7.339996,3.510035,3.554954,-9.634803,1.018997,2.831286,1.338777,7.839577,-3.507226,-5.895813,-9.396044,-1.997763,3.251654,1.429439,4.692817,-5.071876,3.533352,0.566323,-1.644728,4.712253,-6.464019,5.741287,9.720944,-7.210507,-4.313605,-0.615766,-3.269226,3.388767,4.814628,6.550444,-9.316815,-7.038185,8.095654,-8.792277,9.658252,3.090697,-5.592808,-1.775753,6.479003,1.870398,9.475084,-9.648111,-5.023232,-8.853971,7.299652,-4.590865,0.965739,4.790995,-9.496754,-6.067720,7.709299,-1.535081,0.838967,-5.361461,5.968981,-9.210993,2.942131,8.307702,-7.005474,0.656916,1.687762,8.755970,-7.148421,1.271913,-5.883459,4.472004,2.068164,3.468520,-1.061700,0.936512,6.706220,-5.929527,-6.891241,-6.197303,2.493956,-4.707247,3.394947,-0.482912,7.326318,3.813385,9.735188,8.207394,-8.084912,1.162368,-3.919183,-9.385301,-1.912258,-8.997578,-2.676933,7.167204,-5.716501,-8.441242,2.983173,-1.559152,-4.863671,-5.664120,-5.725609,-4.958576,-8.660204,9.150823,-3.723312,-9.919843,-9.055392,-5.868409,6.256949,0.402641,7.282484,-4.722072,-7.565715,8.857435,-9.666291,-9.947880,-4.145065,3.841771,6.981299,1.732498,-8.602610,-6.753748,2.442834,-3.462235,6.962852,-9.936584,7.372878,2.409920,8.625464,9.521405,7.817610,-1.835013,-3.647672,-1.773661,-3.400701,-0.767615,-6.829278,-2.655960,1.748538,-6.770770,-4.625603,4.802757,4.738803,5.297762,-3.838126,-9.750806,-1.838964,9.945777,-1.601772,-8.729827,0.323354,-1.882088,-4.320578,4.685281,1.599550,-0.715847,9.224834,0.706840,-6.981343,1.292393,0.375871,-5.090512,1.310929,5.883200,-3.641858,-8.582918,-7.963749,4.741127,4.900853,-8.214802,-9.620791,-3.819314,-1.623077,2.847669,-3.220962,3.651252,-7.360566,-1.361167,8.466656,-5.821680,6.963258,-6.694995,4.889941,-2.804599,-7.654046,0.678710,9.395621,-8.208344,3.353415,8.601377,7.411261,-0.300607,-0.012583,8.128533,-1.266329,4.230402,-2.717690,7.806879,3.752837,2.362155,-1.654488,3.454913,-1.613129,1.747314,6.341601,-2.157414,-2.855214,-8.901941,3.183722,-3.932494,3.864625,2.340791,3.786004,6.565019,8.888881,7.563237,2.048306,4.388045,-9.720100,-4.773183,4.157231,-2.607202,6.579703,1.381645,-5.902394,-0.119385,1.978865,-8.670252,-3.178486,-5.739200,-1.203518,6.536343,-8.244170,3.799256,8.235842,-2.262944,-5.843095,-1.361865,9.692463,-9.391547,-9.407018,-5.852450,3.367324,-0.880421,-4.040755,4.309907,-2.814796,2.765598,7.289708,-7.225057,-8.210818,-3.492085,8.929714,-2.765580,-2.650074,2.979782,1.973571,-0.022398,-7.229179,-4.045746,7.944187,9.580551,-0.826531,-4.828930,5.096706,-2.426408,1.413699,9.121917,-9.126249,-5.624689,-1.870445,1.710825,8.489883,-3.435397,-7.742010,-2.853533,-0.893388,-0.871891,-7.089236,9.577248,5.645957,0.144737,-0.675986,8.501801,-3.612584,6.690266,5.363371,-8.176542,-1.064606,-8.259382,1.903205,6.803446,-6.543911,-6.548627,-6.291280,2.151028,-4.725057,5.395451,8.858932,1.421255,-8.253375,-4.971034,3.638459,-8.347836,-8.552742,-8.402700,8.763766,4.236274,0.125452,0.699297,3.938304,9.055214,5.128096,-2.882813,-6.704505,3.658307,-4.228559,-6.345519,-1.792624,-2.240429,-9.464349,9.046837,-8.517256,9.093094,-2.538038,3.351396,8.647297,0.838581,5.288783,2.967930,6.521347,-8.578362,4.230042,4.920872,9.185814,-5.921940,2.834612,-0.583389,-8.700513,9.280289,-1.113587,0.992952,-2.400442,-0.656084,-4.718439,6.302268,-5.359089,-7.835279,-0.657786,-1.677331,8.895315,8.793039,-6.668789,-4.034299,-6.463403,7.803689,-2.679485,-0.198665,-4.699493,5.847213,9.594089,-4.812809,-6.124063,8.232816,1.875563,5.968242,-2.746871,6.370891,-6.043525,0.682749,2.405723,9.174750,6.966430,-6.083618,-7.606636,7.182976,-7.921391,-4.172799,-4.993910,-7.703893,6.852685,-1.344819,-2.578249,-2.090227,6.014720,1.256728,-3.674970,-2.171274,7.135431,8.501343,-0.498934,5.201361,3.283607,-2.305454,1.893893,1.448538,-6.099458,-4.473664,7.133522,8.932569,-9.446668,8.771071,1.515644,8.789213,5.297174,-1.041149,3.594873,-3.219843,8.344920,-3.383933,0.003096,3.384923,5.994606,5.987005,-7.267321,5.180843,6.991259,-8.031141,-1.033857,6.485563,-0.784246,-2.454145,8.571486,-3.312125,1.240596,6.656972,-3.577600,-1.304378,-7.502019,-7.933322,-8.753291,-7.223184,4.132600,-1.323985,-2.458080,6.690480,7.577014,-6.122382,-0.077835,-7.923195,8.471502,1.803277,-6.080799,9.486968,2.695749,-1.162990,8.085008,4.948880,1.568600,-5.851419,-2.286310,-0.415295,1.184962,-1.895092,-1.239857,6.853587,7.145581,8.634975,-0.117248,-6.373893,3.276884,0.867267,2.336663,5.461642,-7.612115,-6.570935,7.511397,1.697415,1.015762,-9.776102,-4.461673,9.727175,-7.800360,0.389349,9.323616,-2.427926,-7.071779,8.602619,2.979592,-7.107252,0.562601,-4.525004,-7.897503,7.274628,6.095439,3.271701,-8.708332,3.258515,8.920247,2.587465,1.659756,7.085966,-9.298461,9.342725,6.155788,4.746536,0.002036,7.716002,0.628838,9.852214,0.481990,-7.885022,-5.767280,-0.248751,5.015090,-1.830140,-2.183077,-4.746073,3.196796,-2.768265,-7.060391,0.814451,5.740540,7.576760,5.012960,7.016673,7.844257,-9.772142,-7.391232,3.997791,6.263241,-9.431232,-8.238497,-2.415038,-1.557167,-6.674165,-5.985577,-8.378755,0.766412,3.619793,6.052186,4.014413,-8.619011,-1.256536,-0.213319,-8.987890,9.038139,8.709763,-1.783894,7.915180,-1.068436,5.188581,8.874903,-0.026925,1.594261,-9.590799,0.598282,7.036480,7.547851,-1.790429,6.353289,5.260158,9.554722,-5.590719,-6.992716,-4.630354,-2.287953,-5.220993,-1.214896,-1.554630,-1.679343,-2.504833,-2.228121,4.873425,2.074061,7.281854,1.747461,7.998341,-1.172787,-8.767529,-5.686819,0.508108,-9.936866,-6.190775,3.877001,-7.171500,4.755893,9.268006,-2.665401,-5.311719,-9.721915,-9.420859,-4.542363,-7.896716,-6.912144,-3.654623,6.004961,2.785658,9.812567,-9.787882,-8.135263,-0.822216,0.535068,2.614467,-6.644486,6.987402,9.739091,-0.819484,-3.749119,-3.697734,5.570021,4.134890,3.583262,-7.349613,-1.635080,7.233214,7.307743,7.324774,1.789876,-5.451495,-4.977345,-3.868828,-5.200782,0.283047,9.168507,5.640563,-0.527920,7.455969,2.612123,-5.950553,0.644961,-5.771697,0.231422,0.077780,-0.125037,1.634489,-7.109731,-3.000184,-2.190291,9.351032,-5.327756,9.328526,8.051482,-9.156626,-5.931975,-9.189401,-4.432196,3.074165,-6.711705,-3.607015,-4.336677,1.988450,1.031306,5.571368,-0.248466,7.525134,2.506928,0.183996,9.673020,2.308229,8.795051,2.621964,-5.443114,7.375999,-4.075174,3.078431,5.026890,9.194263,5.483981,3.247115,4.676420,-9.468152,4.896862,7.663621,3.470631,-8.424464,-2.084225,-3.454043,-4.960688,-4.113951,9.045216,-5.098053,-1.563087,1.211508,-4.117151,2.848246,0.699823,3.194614,-1.621752,0.243791,6.136683,-3.456012,-4.704965,7.743620,-9.217209,6.705580,9.934072,2.598028,1.122711,3.508351,2.210090,7.499867,-0.160232,3.557116,2.972757,-1.826340,-8.871386,-2.420106,3.035216,-3.778624,3.222974,2.036720,4.301100,9.004244,5.054960,-0.581785,2.413967,2.815753,-5.271412,-9.684480,-7.257469,8.016683,2.349328,6.132361,1.193812,1.314201,2.235625,7.241097,2.324689,1.123590,-3.788808,4.790121,5.951863,8.192339,4.149403,2.842193,8.357870,-8.066168,-7.260613,6.558359,7.438561,2.259951,-2.569621,9.623714,3.639346,-9.066820,9.482053,5.412054,4.701387,-2.035584,6.734243,-5.041181,-5.215877,6.189436,-5.985228,-4.638477,8.320731,-2.967721,3.915935,8.258275,-8.166695,-9.373507,6.905710,-7.674241,-4.797447,9.334799,-1.006346,-7.972953,4.035467,3.511575,3.880772,2.910472,0.064612,-2.735384,-0.295810,5.099823,8.227355,-9.768407,-0.152102,1.774928,4.612958,-0.162624,-1.514505,1.820641,-1.364726,6.579906,-6.588558,8.535562,-3.540559,-6.000645,6.969814,7.088004,9.002756,-1.407164,-0.957707,0.438554,-3.549054,0.606821,-8.779588,-0.919488,-0.486513,-3.590520,5.325834,-0.555775,4.204725,-8.790874,5.705175,-4.550369,0.323991,-9.718834,-2.680328,4.379020,8.352153,-7.491078,5.174618,-0.294660,-7.847167,0.264570,-4.415575,-2.447078,-1.952799,3.487437,-8.608621,7.224963,-9.749953,-0.896208,9.228708,6.938587,-6.726506,-8.954507,8.074678,0.974782,-9.618438,7.432087,9.420097,-9.697787,-0.577886,1.227911,5.476116,-1.389393,-8.408751,4.097065,-1.494756,-1.041613,-0.170163,3.044221,1.065400,4.416082,0.980389,4.303298,-2.466444,-3.532750,8.836475,-2.494122,-3.101738,-6.481486,2.227148,-5.523902,-9.843398,-9.911481,-2.314298,-2.579816,3.168726,3.292068,-6.966572,1.376940,-2.830070,4.986247,0.519305,2.595437,-9.071037,-1.593333,0.562842,-6.002164,3.446157,-6.946763,-1.776842,5.882384,-9.638763,-5.183027,2.789032,-2.742262,3.356098,3.300274,9.469283,9.734752,-0.140179,0.356351,-4.954572,-1.408749,-3.849129,8.980821,6.763177,-5.857571,6.328976,7.777832,-0.387568,2.037405,5.281768,-5.992185,4.888348,2.794290,2.695269,8.678051,-6.446829,2.355410,-4.594591,4.243467,-8.811068,1.908241,-9.694176,-3.054679,-9.838945,-3.570425,2.686698,-5.200264,-6.487500,-6.090043,-3.326530,-2.225388,6.053623,-3.709991,-4.154888,-5.003786,4.431907,0.381427,-9.198670,8.373946,0.230592,-7.159114,-6.947900,8.374239,-0.678075,4.428948,3.872554,9.790022,6.529238,-0.724891,3.276560,-6.096742,-7.603539,-2.694345,-1.944833,-7.127912,-2.135968,-2.742845,7.812194,4.294970,7.065742,4.675432,-0.944998,-1.617614,-0.566281,-8.802633,0.865895,-5.650932,-4.607682,-3.706364,-9.210482,-7.746917,1.259831,-7.645755,-6.166345,2.767797,-0.362881,-7.214834,0.324004,-5.396247,4.272895,-5.712608,-4.585975,-2.768000,4.351335,1.474339,0.725723,-9.716959,-8.529845,-9.511721,4.616553,-3.133226,-5.090169,-2.269555,2.164154,6.699773,2.833746,8.965790,-3.036270,-2.151030,-0.853403,-5.372600,7.257174,2.204449,2.063707,-0.362473,1.159803,-4.525310,1.223328,4.603522,4.224853,8.821356,-3.224374,-0.012805,9.963412,0.463902,-2.709206,8.501948,-3.918632,6.215691,-3.865918,-7.214763,6.727524,5.143755,-8.678764,5.976488,2.630304,-3.606391,-0.562053,0.324196,-8.631623,8.761663,-2.200169,-0.037799,6.418280,-1.552872,-5.690863,3.949583,8.801241,-5.782610,-8.231307,0.360751,9.494674,5.105919,6.841707,3.205169,2.953025,-1.184288,3.955815,4.662185,0.138520,7.027674,-2.747867,6.156997,9.171052,8.277382,3.971203,-0.225206,9.156833,-3.990087,-4.402571,-1.624824,0.118337,3.104981,1.313016,6.885662,-4.596901,-0.035738,-6.726219,-9.243446,-2.194633,5.967522,-0.098864,-1.436219,4.020943,-9.535704,-0.778260,-5.613285,-7.749390,-1.392160,-7.207483,-0.342111,-4.571840,6.327406,-7.722012,1.167013,-9.482826,-7.128566,-3.005063,-8.937756,-9.293190,2.233063,7.168337,-3.918160,5.575351,9.429763,-3.525858,-7.088664,8.636518,4.049995,6.535700,-2.536712,2.424471,-7.981201,5.203506,-0.760396,-6.892459,-5.864254,2.471382,7.398121,6.428117,-0.728608,-1.595403,7.759410,-4.361062,3.867473,2.729308,2.393619,-6.391476,-8.907055,-5.585076,3.906275,-6.263817,-3.233701,-1.707790,-5.204240,2.955091,-3.151106,3.281037,0.373712,-5.686756,6.209444,-9.915074,7.884286,-8.158481,-9.330710,-2.520176,5.052780,1.410485,-3.942277,4.550955,3.808766,3.809582,-8.994795,1.770989,-4.076840,-1.427772,6.302589,8.797311,-1.554216,-8.826565,-4.198809,-2.512694,5.691161,-9.870185,-8.356568,-3.472010,-3.700179,8.730211,-4.265945,-7.988795,-0.366219,-0.190583,6.876506,-3.138500,-8.128806,-9.027127,5.608679,-3.895332,-2.519677,-9.046078,0.104794,-3.593784,-7.203176,-7.617994,0.840428,-0.401273,-3.330157,8.977732,-2.235932,8.247249,8.969302,2.524083,-7.307000,8.251956,-3.229037,8.117644,9.531764,3.000598,2.866002,-6.734779,-5.163570,9.795529,-6.280730,-6.859243,-1.304471,0.877266,1.047566,8.976594,-6.825056,-9.067827,-2.521796,-0.453838,-1.603990,-3.043309,-4.299132,-3.749339,5.654382,3.057045,-4.578099,-3.300405,6.432191,-0.229466,-9.278971,-4.807318,8.077568,-6.633077,2.066654,2.744349,-6.335958,3.112126,-3.096298,-2.602938,2.954706,7.244211,1.142100,6.766291,6.390082,-3.579861,4.179393,4.323420,5.233414,-3.644845,-0.804267,-2.808543,5.199894,6.106344,7.108464,2.217868,1.879635,2.663478,-2.146949,1.935197,-3.637943,-3.135101,4.311955,-1.530514,6.487094,9.476571,-3.998581,-6.925288,6.409027,-1.622655,3.133112,-0.843494,-7.517000,-7.433164,-9.379702,8.365867,0.999486,-2.022616,5.836480,1.498540,8.371153,-4.582151,0.674123,-9.608746,4.364709,0.149001,-2.706297,9.583322,7.772961,-0.952246,-7.555575,1.781760,4.245534,-5.558556,-5.659516,8.915925,-3.529872,-5.108221,-6.577893,-1.714674,2.053563,1.929083,6.547393,-4.115917,-7.168392,-1.761660,-6.202250,-7.103497,3.658466,-2.134779,-1.329370,-1.737508,-9.044792,-8.856935,7.010878,-8.194111,6.128587,-8.891042,-6.590481,1.236222,2.451099,0.858365,1.557638,0.563795,-7.061922,0.551947,7.281008,6.248785,-3.544778,1.916232,3.647620,-4.724298,8.995472,3.230786,9.913741,-4.852840,1.052704,8.821720,1.895562,3.817621,-0.893495,-5.773486,-8.768727,4.136202,-8.629130,-5.593790,-4.587019,-5.200413,-7.928608,-2.121009,-2.380264,-8.472732,-3.739970,1.015612,5.270044,-6.854465,3.561821,2.993255,-8.069218,-4.605887,2.910104,-1.585197,4.421922,1.776045,0.493389,9.422534,-8.530079,7.502650,7.280463,-5.907543,5.422709,7.024000,-4.471561,6.270174,5.166188,9.195880,-3.129750,2.043151,-9.924759,2.285278,-9.409083,4.312691,6.268905,2.157739,1.068372,4.019827,-9.419878,9.058443,5.010583,-4.182214,-4.887745,-1.445571,1.047970,-4.627169,-9.723484,6.112933,5.161913,-1.136432,5.523147,6.724630,5.460946,-8.727329,9.113784,-3.026928,-4.605863,-4.057758,-3.322295,3.576535,-7.207259,5.002476,-0.761880,4.624362,-8.413393,-8.451453,1.987870,-9.209753,-6.124421,4.286604,0.779405,-1.162765,-1.836803,-3.633424,0.059029,-8.414128,-6.289252,0.576216,7.205519,-7.401131,-6.071592,9.405183,-4.265023,-0.024577,-3.597325,3.343564,-3.991298,9.329809,-9.053834,5.277389,-4.951671,9.743441,-7.534371,8.754767,0.704208,9.782991,-6.074578,0.418774,-6.954240,7.566159,1.310498,-0.348388,-9.384641,-7.404389,-8.651381,4.123078,-9.210524,0.658565,4.758486,-0.122578,-7.781899,-1.593037,-6.393876,1.704599,8.725088,-3.587890,9.159197,-2.959191,-5.847478,-2.757423,4.892720,4.889323,-8.761247,-0.855748,0.458881,-3.959902,-1.340334,-9.085171,3.306519,7.355247,-4.655169,3.395646,8.137624,-3.821546,2.507567,-7.963159,-9.436089,-8.811349,-3.275827,-8.245444,2.278076,4.700711,0.900159,-4.152031,4.816135,2.328428,8.501986,-8.355138,2.775213,3.738410,2.392355,0.564058,6.324062,4.619839,-2.386356,-9.650425,-1.036379,1.987770,7.605541,-0.833034,9.119280,1.732935,1.784604,6.160288,-6.718123,9.650184,-0.581185,8.786443,-9.825076,4.811609,-8.768849,-1.843165,6.105337,-0.130006,6.405887,-5.829961,-4.506992,-4.600493,6.353755,-6.184858,-9.913836,2.301524,-0.782150,-8.015478,6.107270,4.515216,0.946054,6.896538,4.318967,-8.264614,-1.726771,-9.530980,-8.796166,-2.586289,-7.876120,5.041445,-8.980069,-4.753437,6.818681,1.728767,-8.677991,-9.724548,-2.447912,3.105498,9.416642,1.172521,-7.400311,-2.717216,-7.909444,-6.635923,-9.353535,7.366499,-1.772006,5.536053,-4.532349,2.630936,-0.896503,3.686538,9.476492,-1.368735,-3.020135,-4.741932,9.154249,7.405820,-1.738215,7.841413,4.782281,2.863681,-4.546623,1.945739,-3.649079,3.106823,-9.580173,4.398075,7.697563,-9.684571,9.763518,-4.151381,9.270739,-5.776385,6.744214,-8.374066,-2.171551,7.450488,8.623976,-0.323154,7.794189,-7.878705,-0.594138,2.918859,1.021855,7.282946,-2.613180,-4.145811,6.614070,4.267831,-1.769606,7.813489,-8.248079,6.174599,9.051177,2.921287,9.055679,-3.846561,4.981091,-7.779367,2.711417,-3.084200,0.302694,6.765391,0.296991,-5.814067,9.612749,5.433608,-8.513342,1.997467,-0.547301,-2.980089,-0.154405,6.572034,-2.768230,-1.530739,9.298029,1.740490,9.139716,2.456008,-3.064804,-4.934210,6.028401,5.628842,-7.614417,7.243896,1.834430,4.637872,-1.854932,2.591478,-6.965421,-6.833330,-2.241604,-9.989289,-8.305098,2.337622,8.908510,-0.532233,1.100047,-5.020216,-3.602066,-8.424197,4.971008,1.460235,-7.165272,-4.551756,1.340419,-6.765390,4.504449,2.214953,-7.144230,-7.321044,7.168685,-0.340476,-7.249015,-9.811415,-9.087072,-4.597188,-0.813475,0.016333,-5.009551,3.452830,-5.849622,-6.673388,9.250147,3.243583,-7.680704,0.270350,6.676278,-7.029783,7.530273,-2.751924,7.294449,4.093847,4.412787,-3.455246,3.349148,0.523423,5.409184,3.261287,5.563524,-2.007901,-4.578673,3.600460,8.821115,3.027328,4.714927,-3.235440,-6.146726,-4.309567,-7.866266,6.634630,6.185688,5.764042,-1.355782,8.734528,1.713766,2.635121,9.762946,9.954690,-8.832038,0.443992,6.544258,-2.782409,-6.687420,6.640494,4.973887,-1.948512,0.467912,1.420776,-6.674507,6.100168,-3.181352,3.710622,-9.527589,-3.160773,5.801373,-0.750573,0.348345,-8.211588,6.118807,-1.474367,-6.619069,7.962828,-9.405876,-7.697420,5.062383,5.041809,-0.420604,-4.903368,9.435537,-7.140797,-6.535149,5.388538,7.331321,7.944714,5.902767,-1.311744,-8.056990,5.107837,-2.806230,0.582741,-4.941270,-6.149342,5.318286,5.429610,9.271366,8.561940,-0.699919,-5.125378,-6.861676,-4.093065,4.219312,-7.661095,9.445610,8.154913,8.477503,5.569106,5.623474,-7.234621,-3.933395,1.056780,7.499381,-4.974936,-5.087493,-1.934072,-3.966777,-1.320009,0.962771,-9.214018,6.143749,-9.507077,-4.959639,-9.124784,5.821848,9.265843,-5.522502,-0.830881,9.422281,6.952994,2.329993,3.249813,-9.312681,3.229386,-0.677683,-5.168927,2.591425,-2.612712,3.327625,7.916875,0.392011,-0.373558,-0.246475,-2.607647,6.979256,3.592462,6.584889,7.272713,-8.136034,4.773284,-1.004084,-6.303509,-2.706730,3.051146,7.483133,4.888020,4.142037,-0.879949,-1.533726,-6.148621,-3.930293,-1.881015,-7.904942,-0.548943,-2.385700,5.391349,7.197192,4.590291,-3.728249,8.217161,8.062995,-8.700797,5.574598,-7.092440,2.200314,8.650816,-7.600081,6.181058,6.060619,-9.255753,9.638664,-4.066583,6.933899,9.052404,6.432009,-0.592224,4.804076,1.790343,6.472989,-1.085931,-4.351217,4.947904,6.711664,0.834210,-7.300625,-0.815838,4.710659,-3.688988,-2.733409,-1.774878,2.244990,6.082080,-2.400751,0.289846,-3.161690,-3.267633,3.629323,-3.580810,9.532590,-2.059689,4.315509,2.782116,2.543756,2.869450,5.684386,2.529681,-6.336082,2.423662,-9.178502,8.936218,-7.098917,4.118236,6.665951,-9.653043,-5.031934,-6.017156,-2.673806,-6.073397,9.824001,4.017223,-5.012923,4.244112,2.812625,0.158206,6.324998,6.281312,-7.134801,-2.152055,-1.268535,-8.842780,8.410489,-2.153745,1.950562,5.104781,-9.333640,4.379707,-8.208062,-8.115436,-5.742853,1.162347,-6.214604,1.476532,0.259020,-1.459841,3.296600,-6.319199,3.522194,-8.907998,-9.580855,0.854567,-7.463908,4.494845,-8.657803,9.652395,5.911734,-4.301676,1.876010,-5.956381,6.335921,-2.327521,-9.482222,8.572686,6.062666,-0.213572,-6.538036,-1.561441,-8.970892,1.670299,6.930955,2.091379,3.896706,-4.427742,-1.767643,4.159163,9.782689,-6.874013,4.782461,7.788868,1.634462,-8.053963,-1.223002,-6.568904,-7.112372,0.501160,-1.385732,-8.388542,-1.811539,-2.177622,6.090753,8.831347,0.710724,-1.227266,5.130391,6.080329,4.732726,-2.511142,9.649776,9.583288,-7.398378,0.768506,9.330029,-1.830931,3.283548,-5.732220,3.857218,0.384387,6.804553,4.116611,-3.772581,5.369048,-1.532351,9.686001,6.223170,1.398380,2.676712,-8.963557,-6.637120,-2.333658,-1.237736,-6.488238,-7.984203,-3.192377,-1.203205,3.072366,5.101946,-7.159752,-0.690232,3.347973,-2.941175,-8.660421,8.895883,7.326824,8.149493,1.489824,-9.832081,5.371585,-5.843519,3.691792,0.327059,4.136976,2.743531,-4.837140,7.793298,3.153381,-4.208729,8.997848,8.754029,0.580818,-1.678118,-9.991484,2.981395,-6.353389,8.224274,-1.703362,-8.332745,5.021609,6.958140,4.631785,3.128986,4.309377,-1.788974,-9.423623,6.083523,8.033470,-7.975881,-1.056879,4.473024,8.077757,-7.319383,-1.310475,4.513622,9.919579,0.407513,6.791013,8.120612,6.088435,7.269734,4.320750,9.359001,2.835768,-6.511112,5.871961,-9.592530,3.323737,-9.645816,3.495913,3.767010,4.405118,8.993756,-3.164151,3.277063,4.714421,1.907069,5.095064,9.107921,-2.662080,-4.289577,4.133108,9.651707,-0.563809,-5.057360,0.854894,-6.755503,1.653970,-4.346856,-9.369990,6.973514,-8.966533,4.885178,9.998691,-1.134994,-2.078656,-8.141786,0.338626,-7.726519,8.119870,5.434421,2.634158,5.682877,-6.949800,-4.828864,6.085883,-8.231150,-7.508151,6.183751,-2.587903,9.771821,1.313599,-4.068413,1.105896,-1.275862,-8.876376,-7.559238,4.131540,-2.519049,9.035864,-3.718733,-0.050931,-9.381172,-9.081813,-5.171684,-6.145542,-0.607412,8.654820,-7.717464,0.165809,-9.676064,8.770936,7.736145,-9.321802,-7.401750,-1.903417,9.167124,9.616587,2.014633,9.713696,-3.030683,-9.399194,5.725081,5.929394,-6.278765,-2.153318,-5.990361,6.844412,-4.282589,6.166789,5.618090,-6.173255,-2.432802,7.063453,7.851765,-4.193723,-9.060825,-0.365916,-3.555483,1.621649,0.033211,3.929022,1.832688,2.470589,1.887574,-4.553824,1.322588,0.600853,-4.859774,3.715742,8.752071,8.918922,-4.580412,-0.503740,-8.748922,-0.952702,5.775895,8.271087,-4.474785,8.677269,-2.717865,1.731510,-3.814248,6.411282,9.650101,-8.283661,-5.950978,-1.890499,-0.432943,-1.533046,-8.879024,-9.863406,-8.043325,7.236317,-8.142136,-6.039194,-7.002813,-2.756702,-0.504446,-7.663704,1.084156,0.767190,-4.848943,-1.349704,-2.168023,9.984198,1.215092,-3.456652,-5.238443,2.491735,-3.041707,3.621499,9.063518,7.926603,0.953116,2.219689,7.379172,0.669265,-4.610963,-6.989197,-2.419730,1.386391,6.759081,3.383302,6.734665,-0.052049,3.068895,2.087969,-3.719350,-5.984621,-1.714097,-1.815930,-8.996102,2.592161,3.888803,9.481430,-4.766159,-1.207061,5.962586,7.789150,-2.153847,-5.612875,9.151480,-6.927171,2.412209,5.306488,-0.192610,7.200514,2.735975,3.258280,-5.600906,-3.090254,0.598627,-2.956497,5.047148,-8.412451,7.225290,9.838318,-4.637003,-3.999567,-6.055014,8.927088,7.863621,-3.542047,8.680431,-4.144138,-1.771594,-3.773932,5.814847,-8.261954,-5.033076,-5.536327,-4.181664,-1.582772,9.840755,-8.627231,3.768457,-3.280719,-4.037868,2.013192,-3.782990,4.250324,9.629139,-4.302344,-1.519677,5.080605,1.993777,-3.896866,2.664726,-5.628035,-1.006246,-5.382472,-3.033157,-5.349747,5.272063,9.795806,5.362133,0.661873,-0.512623,8.094228,-9.022510,-0.845858,-5.632116,8.020294,8.063684,-8.944576,-7.888582,3.120329,2.443275,1.430064,-9.712273,-1.558221,7.979905,-4.751232,-4.029088,-9.908769,-8.103833,-2.629838,-6.446896,-3.873182], dtype = "float32")#candidate|10687|(2880,)|const|float32
var_10688 = relay.var("var_10688", dtype = "bool", shape = (385,))#candidate|10688|(385,)|var|bool
call_10686 = relay.TupleGetItem(func_3391_call(relay.reshape(const_10687.astype('float32'), [16, 15, 12]), relay.reshape(var_10688.astype('bool'), [385,]), ), 1)
call_10689 = relay.TupleGetItem(func_3395_call(relay.reshape(const_10687.astype('float32'), [16, 15, 12]), relay.reshape(var_10688.astype('bool'), [385,]), ), 1)
func_3391_call = mod.get_global_var('func_3391')
func_3395_call = mutated_mod.get_global_var('func_3395')
call_10709 = relay.TupleGetItem(func_3391_call(relay.reshape(const_10687.astype('float32'), [16, 15, 12]), relay.reshape(var_10688.astype('bool'), [385,]), ), 3)
call_10710 = relay.TupleGetItem(func_3395_call(relay.reshape(const_10687.astype('float32'), [16, 15, 12]), relay.reshape(var_10688.astype('bool'), [385,]), ), 3)
func_10235_call = mod.get_global_var('func_10235')
func_10237_call = mutated_mod.get_global_var('func_10237')
call_10722 = relay.TupleGetItem(func_10235_call(), 1)
call_10723 = relay.TupleGetItem(func_10237_call(), 1)
func_5177_call = mod.get_global_var('func_5177')
func_5179_call = mutated_mod.get_global_var('func_5179')
call_10724 = relay.TupleGetItem(func_5177_call(), 0)
call_10725 = relay.TupleGetItem(func_5179_call(), 0)
func_4568_call = mod.get_global_var('func_4568')
func_4572_call = mutated_mod.get_global_var('func_4572')
var_10734 = relay.var("var_10734", dtype = "int64", shape = (120, 1))#candidate|10734|(120, 1)|var|int64
call_10733 = relay.TupleGetItem(func_4568_call(relay.reshape(var_10734.astype('int64'), [4, 2, 15]), relay.reshape(var_10734.astype('int64'), [4, 2, 15]), ), 2)
call_10735 = relay.TupleGetItem(func_4572_call(relay.reshape(var_10734.astype('int64'), [4, 2, 15]), relay.reshape(var_10734.astype('int64'), [4, 2, 15]), ), 2)
output = relay.Tuple([call_10610,call_10661,call_10686,const_10687,var_10688,call_10709,call_10722,call_10724,call_10733,var_10734,])
output2 = relay.Tuple([call_10611,call_10662,call_10689,const_10687,var_10688,call_10710,call_10723,call_10725,call_10735,var_10734,])
func_10739 = relay.Function([var_10688,var_10734,], output)
mod['func_10739'] = func_10739
mod = relay.transform.InferType()(mod)
var_10740 = relay.var("var_10740", dtype = "bool", shape = (385,))#candidate|10740|(385,)|var|bool
var_10741 = relay.var("var_10741", dtype = "int64", shape = (120, 1))#candidate|10741|(120, 1)|var|int64
output = func_10739(var_10740,var_10741,)
func_10742 = relay.Function([var_10740,var_10741,], output)
mutated_mod['func_10742'] = func_10742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6656_call = mod.get_global_var('func_6656')
func_6657_call = mutated_mod.get_global_var('func_6657')
call_10752 = relay.TupleGetItem(func_6656_call(), 0)
call_10753 = relay.TupleGetItem(func_6657_call(), 0)
func_8980_call = mod.get_global_var('func_8980')
func_8984_call = mutated_mod.get_global_var('func_8984')
const_10766 = relay.const([True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False], dtype = "bool")#candidate|10766|(385,)|const|bool
const_10767 = relay.const([-8,5,4,6,4,-3,5,-4,10,10,10,-7,-9,-5,10,10,-6,-8,4,4,-1,1,-1,-6,-6,10,10,-10,-10,5,-8,-10,3,5,-1,-7,8,-2,-4,9,5,-9,-9,-1,5,10,4,-8,-7,-6,5,-3,-3,1,-5,1,-2,-2,-1,-9,-2,10,7,3,-4,-4,-4,2,-4,-5,7,-7,-6,9,4,4,7,2,-5,-9,7,7,-2,7,6,-5,9,2,-2,5,-9,4,4,-1,2,-9,3,10,-7,-1,2,5,-9,9,8,-9,-2,2,-8,6,-2,1,-10,-1,10,1,-8,-3,3,-8,3,-7,-10,-10,1,2,-10,-1,6,1,-5,-7,-1,2,2,5,9,10,-1,10,8,-7,9,-1,1,-2,-6,-1,-1,1,5,9,-7,3,-1,4,-9,10,-1,2], dtype = "int16")#candidate|10767|(160,)|const|int16
call_10765 = relay.TupleGetItem(func_8980_call(relay.reshape(const_10766.astype('bool'), [385,]), relay.reshape(const_10767.astype('int16'), [160, 1]), ), 4)
call_10768 = relay.TupleGetItem(func_8984_call(relay.reshape(const_10766.astype('bool'), [385,]), relay.reshape(const_10767.astype('int16'), [160, 1]), ), 4)
output = relay.Tuple([call_10752,call_10765,const_10766,const_10767,])
output2 = relay.Tuple([call_10753,call_10768,const_10766,const_10767,])
func_10789 = relay.Function([], output)
mod['func_10789'] = func_10789
mod = relay.transform.InferType()(mod)
mutated_mod['func_10789'] = func_10789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10789_call = mutated_mod.get_global_var('func_10789')
call_10790 = func_10789_call()
output = call_10790
func_10791 = relay.Function([], output)
mutated_mod['func_10791'] = func_10791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10200_call = mod.get_global_var('func_10200')
func_10202_call = mutated_mod.get_global_var('func_10202')
call_10795 = relay.TupleGetItem(func_10200_call(), 0)
call_10796 = relay.TupleGetItem(func_10202_call(), 0)
func_8810_call = mod.get_global_var('func_8810')
func_8811_call = mutated_mod.get_global_var('func_8811')
call_10797 = relay.TupleGetItem(func_8810_call(), 0)
call_10798 = relay.TupleGetItem(func_8811_call(), 0)
output = relay.Tuple([call_10795,call_10797,])
output2 = relay.Tuple([call_10796,call_10798,])
func_10799 = relay.Function([], output)
mod['func_10799'] = func_10799
mod = relay.transform.InferType()(mod)
mutated_mod['func_10799'] = func_10799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10799_call = mutated_mod.get_global_var('func_10799')
call_10800 = func_10799_call()
output = call_10800
func_10801 = relay.Function([], output)
mutated_mod['func_10801'] = func_10801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10851 = relay.var("var_10851", dtype = "float32", shape = (12, 1, 14))#candidate|10851|(12, 1, 14)|var|float32
uop_10852 = relay.sigmoid(var_10851.astype('float32')) # shape=(12, 1, 14)
output = uop_10852
output2 = uop_10852
func_10854 = relay.Function([var_10851,], output)
mod['func_10854'] = func_10854
mod = relay.transform.InferType()(mod)
mutated_mod['func_10854'] = func_10854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10855 = relay.var("var_10855", dtype = "float32", shape = (12, 1, 14))#candidate|10855|(12, 1, 14)|var|float32
func_10854_call = mutated_mod.get_global_var('func_10854')
call_10856 = func_10854_call(var_10855)
output = call_10856
func_10857 = relay.Function([var_10855], output)
mutated_mod['func_10857'] = func_10857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6969_call = mod.get_global_var('func_6969')
func_6970_call = mutated_mod.get_global_var('func_6970')
call_10912 = relay.TupleGetItem(func_6969_call(), 0)
call_10913 = relay.TupleGetItem(func_6970_call(), 0)
func_10381_call = mod.get_global_var('func_10381')
func_10382_call = mutated_mod.get_global_var('func_10382')
call_10931 = relay.TupleGetItem(func_10381_call(), 3)
call_10932 = relay.TupleGetItem(func_10382_call(), 3)
output = relay.Tuple([call_10912,call_10931,])
output2 = relay.Tuple([call_10913,call_10932,])
func_10946 = relay.Function([], output)
mod['func_10946'] = func_10946
mod = relay.transform.InferType()(mod)
output = func_10946()
func_10947 = relay.Function([], output)
mutated_mod['func_10947'] = func_10947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8530_call = mod.get_global_var('func_8530')
func_8532_call = mutated_mod.get_global_var('func_8532')
call_10960 = relay.TupleGetItem(func_8530_call(), 2)
call_10961 = relay.TupleGetItem(func_8532_call(), 2)
func_6115_call = mod.get_global_var('func_6115')
func_6117_call = mutated_mod.get_global_var('func_6117')
call_10971 = relay.TupleGetItem(func_6115_call(), 0)
call_10972 = relay.TupleGetItem(func_6117_call(), 0)
func_6057_call = mod.get_global_var('func_6057')
func_6058_call = mutated_mod.get_global_var('func_6058')
call_10986 = func_6057_call()
call_10987 = func_6057_call()
var_11002 = relay.var("var_11002", dtype = "float64", shape = (12, 7, 4))#candidate|11002|(12, 7, 4)|var|float64
bop_11003 = relay.floor_mod(call_10971.astype('float32'), relay.reshape(var_11002.astype('float32'), relay.shape_of(call_10971))) # shape=(12, 7, 4)
bop_11006 = relay.floor_mod(call_10972.astype('float32'), relay.reshape(var_11002.astype('float32'), relay.shape_of(call_10972))) # shape=(12, 7, 4)
func_9320_call = mod.get_global_var('func_9320')
func_9322_call = mutated_mod.get_global_var('func_9322')
call_11007 = func_9320_call(relay.reshape(call_10960.astype('uint64'), [2, 14, 7]))
call_11008 = func_9320_call(relay.reshape(call_10960.astype('uint64'), [2, 14, 7]))
output = relay.Tuple([call_10960,call_10986,bop_11003,call_11007,])
output2 = relay.Tuple([call_10961,call_10987,bop_11006,call_11008,])
func_11010 = relay.Function([var_11002,], output)
mod['func_11010'] = func_11010
mod = relay.transform.InferType()(mod)
var_11011 = relay.var("var_11011", dtype = "float64", shape = (12, 7, 4))#candidate|11011|(12, 7, 4)|var|float64
output = func_11010(var_11011)
func_11012 = relay.Function([var_11011], output)
mutated_mod['func_11012'] = func_11012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4977_call = mod.get_global_var('func_4977')
func_4979_call = mutated_mod.get_global_var('func_4979')
call_11023 = relay.TupleGetItem(func_4977_call(), 0)
call_11024 = relay.TupleGetItem(func_4979_call(), 0)
func_10381_call = mod.get_global_var('func_10381')
func_10382_call = mutated_mod.get_global_var('func_10382')
call_11029 = relay.TupleGetItem(func_10381_call(), 2)
call_11030 = relay.TupleGetItem(func_10382_call(), 2)
const_11051 = relay.const([[False,False,False,True,False,True],[True,True,False,True,False,False],[False,True,False,True,False,False],[False,True,True,False,True,False],[True,True,True,True,False,False],[True,False,False,True,True,False],[False,True,True,False,False,True],[True,True,True,True,False,True],[True,False,False,False,False,True],[False,False,True,False,True,True],[False,False,True,True,True,True],[True,False,False,True,False,False],[False,True,True,True,False,True],[False,True,False,True,True,False],[False,False,False,True,False,True],[False,False,True,False,True,True],[True,True,True,True,False,True],[True,False,True,True,False,True],[False,False,True,False,True,False],[True,False,False,True,True,False],[True,False,True,False,False,False],[True,True,True,False,False,True],[False,True,False,True,False,False],[False,True,False,True,True,False],[False,False,False,False,False,True],[True,True,True,False,True,True],[False,True,False,False,True,False],[True,True,False,True,False,False],[True,True,True,False,False,True],[False,False,True,False,True,True],[True,False,False,True,False,False],[False,False,True,True,False,False],[True,False,False,True,True,False],[False,True,True,True,True,False],[False,True,False,False,True,True],[True,False,True,False,True,True],[False,False,False,True,True,False],[True,False,False,True,False,False],[False,False,True,True,True,False],[True,False,True,False,False,False],[True,True,False,True,True,False],[False,True,False,False,False,True],[True,False,True,True,True,True],[True,True,True,False,True,True],[False,False,True,True,False,True],[True,False,False,False,True,False],[False,True,True,False,False,False],[True,True,False,False,False,True],[False,False,True,True,False,False],[False,True,False,True,False,True],[False,False,True,True,False,False],[True,False,True,False,False,True],[False,True,False,False,True,True],[False,True,True,True,True,True],[True,True,False,True,True,True],[False,True,True,True,False,True],[True,True,True,True,False,True],[False,False,False,True,True,True],[False,True,True,True,False,False],[False,True,True,True,False,False],[False,True,False,True,False,False],[False,False,False,True,True,False],[False,True,False,False,False,True],[True,False,False,False,True,False],[False,False,True,False,True,False],[False,True,True,False,False,True],[True,False,True,True,True,False],[True,True,False,True,True,False],[True,False,True,True,True,False],[False,True,False,True,True,True],[True,False,False,False,False,False],[False,True,False,True,False,True],[False,True,False,False,True,True],[False,False,False,True,True,True],[False,True,False,False,True,False],[False,False,False,False,True,False],[True,True,False,True,False,False],[True,False,False,True,False,True],[True,True,True,True,False,False],[False,False,False,False,True,True],[False,True,True,False,True,False],[True,False,True,True,False,False],[True,True,False,True,False,True],[False,True,False,True,False,False],[False,False,True,False,True,False],[True,True,True,False,False,False],[True,True,True,False,False,True],[False,True,False,True,True,False],[False,True,False,False,True,False],[False,True,True,True,True,False],[True,False,True,False,False,True],[True,True,False,False,False,False],[True,False,False,True,True,True],[True,True,False,True,True,True],[False,False,False,True,True,True],[True,True,True,False,True,False],[False,False,True,False,False,True],[True,True,False,True,False,True],[False,False,True,False,True,False],[False,True,False,False,False,False],[False,True,True,True,False,False],[True,False,True,True,False,True],[False,True,True,False,False,True],[False,False,True,True,True,True],[True,True,False,False,True,True],[False,True,False,True,True,False],[True,False,False,False,True,True],[False,False,False,True,False,True],[False,False,True,False,True,False],[True,True,True,True,True,True],[False,True,False,True,False,True],[True,True,False,False,False,True],[True,False,True,True,True,False],[False,True,False,False,True,False],[False,False,True,False,False,False],[True,False,True,True,True,True],[True,True,False,True,True,False],[False,False,False,False,True,True],[False,False,True,False,False,False],[False,False,True,True,False,True],[True,True,True,False,True,True],[True,False,False,False,True,True],[False,True,True,True,True,False],[False,True,False,True,False,False],[False,False,True,True,False,True],[False,True,True,True,False,False],[False,True,False,False,True,True],[True,False,False,False,True,False],[True,True,True,True,True,True],[False,True,False,True,False,False],[False,False,True,True,True,True],[True,False,True,True,False,False],[False,False,False,True,False,True],[True,True,True,False,True,False],[False,True,True,False,False,True],[False,False,True,True,False,False],[True,True,False,False,True,True],[False,True,True,True,False,True],[False,True,True,True,False,False],[True,False,True,False,False,True],[True,False,True,False,True,True],[True,False,True,True,False,False],[False,True,True,True,False,False],[True,False,True,False,False,True],[False,True,True,True,False,True],[False,True,True,True,False,True],[True,True,True,False,False,False],[False,True,True,True,False,True],[True,True,True,True,True,True],[False,True,True,False,False,True],[True,False,False,True,False,False],[False,True,True,True,True,False],[True,True,True,False,False,True],[True,False,True,True,True,False],[False,True,False,True,True,False],[False,True,True,True,False,True],[True,False,False,True,True,True],[True,True,False,False,True,False],[True,True,False,False,False,True],[True,False,True,True,False,False],[True,False,True,False,True,True],[True,True,True,True,False,True],[False,True,False,False,True,True],[True,False,False,True,True,False],[True,False,True,False,True,True],[False,False,True,False,True,True],[True,False,False,True,False,False],[False,False,True,False,True,False],[True,False,False,False,True,True],[False,False,True,True,False,False],[False,True,True,False,True,False],[True,False,False,True,True,False],[True,True,True,False,True,False],[False,True,False,False,True,True],[False,True,False,True,True,False],[False,True,True,True,True,False],[True,False,True,True,True,False],[False,False,False,True,False,True],[True,False,False,True,True,True],[False,True,True,False,False,False],[True,False,True,False,True,True],[True,False,True,False,False,True],[False,False,True,False,True,False],[False,False,False,False,True,True],[False,True,False,True,False,True],[True,True,True,False,True,True],[True,False,True,True,False,True],[False,True,True,True,True,False],[True,True,False,False,False,True],[True,False,True,False,True,True],[True,False,False,False,False,True],[True,False,False,True,True,False],[False,True,True,False,False,True],[False,False,False,True,False,False],[False,True,False,True,True,True],[False,False,True,False,True,False],[False,False,False,False,True,True],[False,False,False,False,False,False],[True,False,False,True,True,False],[False,False,False,False,True,True],[False,False,False,True,False,True],[True,False,True,True,False,True],[False,True,True,False,True,True],[True,False,True,True,True,True],[False,True,True,False,False,False],[True,False,False,True,True,True],[False,True,True,False,False,False],[True,True,True,False,True,False],[True,False,False,False,False,True],[True,False,True,False,False,True],[True,True,True,True,True,False],[False,True,True,False,True,False],[False,False,True,True,False,False],[True,True,True,True,False,True],[False,True,True,True,False,True],[False,True,False,True,False,True],[False,True,True,True,True,False],[True,True,True,False,False,True],[True,True,True,False,False,True],[True,False,False,False,False,False],[True,False,True,True,False,False],[True,False,True,False,True,False],[False,True,True,True,True,True],[True,False,False,False,False,False],[True,True,False,True,True,False],[False,False,True,True,False,True],[True,True,True,False,True,False],[False,True,True,True,True,True],[False,False,True,False,False,False],[False,True,True,True,False,True],[True,False,True,False,False,True],[True,True,False,False,False,True],[True,False,True,False,False,False],[True,False,False,True,True,False],[True,True,True,False,False,True],[True,False,False,True,False,False],[False,False,True,True,False,True],[False,True,False,True,False,False],[True,True,False,True,False,True],[True,True,True,False,False,True],[False,True,True,False,False,False],[False,True,False,True,False,False],[True,False,False,True,False,False],[True,True,True,True,True,False],[True,False,True,False,True,True],[True,True,True,True,True,True],[True,True,False,True,False,False],[True,True,True,True,False,True],[True,True,False,True,True,True],[True,False,False,False,False,True],[False,True,False,True,False,True],[False,True,False,True,False,False],[True,False,False,False,True,False],[True,True,False,False,False,True],[True,True,True,True,True,True],[False,True,False,False,False,True],[True,True,False,True,False,True],[False,True,True,False,False,False],[False,True,True,False,True,True],[True,True,False,False,False,False],[True,True,True,False,True,False],[True,True,True,True,False,True],[False,False,False,True,False,False],[False,True,False,True,True,True],[True,True,False,True,True,True],[True,True,False,True,True,True],[True,False,False,False,True,True],[True,False,True,True,True,False],[False,True,True,False,True,False],[True,False,True,False,True,True],[True,True,False,True,False,True],[False,True,True,True,True,False],[False,False,False,True,True,False],[True,True,True,False,True,False],[True,True,False,False,True,False],[True,False,True,True,True,True],[False,True,False,True,False,True],[False,False,True,False,False,False],[False,True,False,False,False,True],[False,True,False,True,True,True],[True,True,True,False,False,False],[True,True,False,True,False,False],[False,False,True,True,True,True],[True,True,False,True,True,False],[True,False,True,True,True,True],[True,False,False,False,False,False],[True,True,True,True,False,False],[True,False,False,False,True,True],[True,False,True,False,False,False],[False,True,False,False,False,True],[True,True,True,True,False,True],[True,True,False,True,False,False],[True,True,False,True,False,True],[True,True,False,False,True,False],[False,False,True,True,False,True],[False,True,True,False,False,True],[True,True,False,False,False,False],[False,True,True,True,True,True],[False,False,True,False,False,False],[False,False,False,True,True,False],[True,False,True,False,False,True],[True,True,True,True,True,True],[True,False,True,False,True,False],[False,True,False,True,False,False],[True,False,False,False,False,False],[False,True,False,False,True,False],[True,False,True,False,True,True],[False,False,True,True,False,False],[True,False,True,True,True,True],[True,True,False,True,True,False],[True,True,True,True,True,False],[True,True,False,True,True,True],[False,True,True,True,False,True],[True,True,False,False,False,True],[False,True,False,False,True,True],[False,False,True,True,False,False],[True,True,True,True,False,True],[False,False,False,True,True,True],[False,False,False,False,True,True],[False,True,False,False,True,True],[False,True,False,True,False,False],[True,True,True,True,False,False],[False,False,False,False,True,False],[True,True,False,False,False,True],[True,False,False,True,False,True],[True,False,False,True,True,False],[True,True,True,False,False,True],[False,False,True,True,False,False],[True,False,False,True,False,False],[True,True,False,True,False,False],[True,True,True,True,False,False],[False,True,True,True,False,True],[True,False,True,False,True,False],[True,False,False,True,False,False],[True,True,True,True,False,True],[True,True,True,False,True,True],[True,True,True,False,False,True],[False,True,True,True,False,True],[True,True,True,True,False,True],[True,True,False,False,False,True],[False,True,False,True,False,True],[False,True,False,True,True,True],[False,True,False,False,True,False],[True,False,True,False,False,True],[False,True,False,False,False,False],[True,False,False,False,True,False],[True,True,True,False,True,False],[True,True,False,True,True,True],[False,False,True,True,True,True],[True,True,True,True,True,True],[False,True,True,False,True,False],[False,False,True,True,False,False],[True,True,False,True,True,True],[False,True,False,False,False,True],[True,True,False,False,True,True],[True,True,False,False,True,True],[False,True,False,False,False,False],[False,True,False,False,True,True],[False,True,False,False,True,False],[True,True,False,True,True,True],[False,True,False,True,True,True],[False,False,False,False,False,False],[True,False,True,True,True,False],[False,True,False,False,True,True],[False,False,False,False,True,False],[True,True,True,True,False,False],[False,True,False,False,True,False],[False,False,True,False,True,False],[False,True,True,False,True,False],[False,False,False,False,False,True],[False,False,False,True,True,True],[False,False,False,False,False,True],[True,True,False,False,True,True],[False,True,True,True,False,False],[True,False,False,True,False,True],[False,True,True,False,False,False],[True,False,False,True,True,True],[True,False,False,True,False,True],[False,False,False,True,True,False],[False,False,False,False,True,True],[True,True,False,False,True,False],[True,True,True,True,False,False],[False,True,False,False,False,False],[True,True,False,False,False,True],[False,False,True,True,True,False]], dtype = "bool")#candidate|11051|(385, 6)|const|bool
bop_11052 = relay.subtract(call_11029.astype('float64'), const_11051.astype('float64')) # shape=(385, 6)
bop_11055 = relay.subtract(call_11030.astype('float64'), const_11051.astype('float64')) # shape=(385, 6)
output = relay.Tuple([call_11023,bop_11052,])
output2 = relay.Tuple([call_11024,bop_11055,])
func_11071 = relay.Function([], output)
mod['func_11071'] = func_11071
mod = relay.transform.InferType()(mod)
output = func_11071()
func_11072 = relay.Function([], output)
mutated_mod['func_11072'] = func_11072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10381_call = mod.get_global_var('func_10381')
func_10382_call = mutated_mod.get_global_var('func_10382')
call_11104 = relay.TupleGetItem(func_10381_call(), 2)
call_11105 = relay.TupleGetItem(func_10382_call(), 2)
output = relay.Tuple([call_11104,])
output2 = relay.Tuple([call_11105,])
func_11107 = relay.Function([], output)
mod['func_11107'] = func_11107
mod = relay.transform.InferType()(mod)
output = func_11107()
func_11108 = relay.Function([], output)
mutated_mod['func_11108'] = func_11108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10331_call = mod.get_global_var('func_10331')
func_10333_call = mutated_mod.get_global_var('func_10333')
call_11109 = func_10331_call()
call_11110 = func_10331_call()
func_10854_call = mod.get_global_var('func_10854')
func_10857_call = mutated_mod.get_global_var('func_10857')
const_11124 = relay.const([-4.259839,-6.598621,-4.236138,7.618996,-7.230885,-2.154764,2.191950,-6.087762,6.812736,-9.861062,-5.680294,2.810606,-5.117406,5.565302,9.657211,-2.696328,-2.997967,-8.575571,7.120792,1.338180,-5.146449,2.793659,-4.299797,-2.879278,-0.629616,1.436023,4.540413,0.254490,-1.815678,8.398675,7.874165,6.434985,-5.451048,-6.901277,0.875233,2.192687,-9.960889,-2.236979,4.550336,-3.502856,3.431152,-9.083025,-6.161911,2.385183,9.585322,-1.222911,-1.147265,-8.868833,6.410734,-3.784836,8.090223,-1.976845,-1.786185,-8.864768,0.985303,3.554572,-4.667873,-8.047006,0.584054,4.158086,-1.982283,2.538454,-5.229168,-1.082641,7.503653,-3.700193,-0.847887,-5.861752,7.286279,-3.944710,8.306231,-2.617575,-5.522955,-5.392569,-5.115175,-2.930131,1.690442,6.449366,5.451095,-6.176780,-6.747910,2.515598,1.175852,-4.065535,5.197466,-3.413130,-4.572582,-6.928948,6.140834,1.759172,7.131167,-9.742802,6.099612,-3.447293,0.846130,0.042489,1.508929,7.038543,-6.048082,-8.489040,-4.101673,-9.955336,8.021063,0.692793,8.678080,-8.379067,-6.049345,-2.807074,-6.186366,3.467857,3.390007,9.512231,1.856272,6.318288,-9.336024,8.746747,-1.874522,-1.185377,4.981944,-2.111746,-9.755873,5.247284,-4.843911,-9.354668,-0.335405,-5.091404,5.279103,-7.946843,-3.489021,-7.041449,7.146539,-7.180515,-3.951387,7.904155,-8.065954,-3.971881,-7.049778,-8.571090,2.365968,7.843205,-3.698953,0.882283,-4.689424,-4.562335,-0.614724,8.691923,2.926369,4.381048,-4.314520,3.668218,2.268669,8.253979,0.477332,-9.817168,0.585055,-8.804033,2.712081,0.192765,1.722660,4.226589,-8.691393,-7.734205,-6.574137,3.881416,-5.555426,8.000658,4.853620,-8.414350], dtype = "float32")#candidate|11124|(168,)|const|float32
call_11123 = func_10854_call(relay.reshape(const_11124.astype('float32'), [12, 1, 14]))
call_11125 = func_10854_call(relay.reshape(const_11124.astype('float32'), [12, 1, 14]))
output = relay.Tuple([call_11109,call_11123,const_11124,])
output2 = relay.Tuple([call_11110,call_11125,const_11124,])
func_11151 = relay.Function([], output)
mod['func_11151'] = func_11151
mod = relay.transform.InferType()(mod)
mutated_mod['func_11151'] = func_11151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11151_call = mutated_mod.get_global_var('func_11151')
call_11152 = func_11151_call()
output = call_11152
func_11153 = relay.Function([], output)
mutated_mod['func_11153'] = func_11153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5410_call = mod.get_global_var('func_5410')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_11154 = func_5410_call()
call_11155 = func_5410_call()
func_8810_call = mod.get_global_var('func_8810')
func_8811_call = mutated_mod.get_global_var('func_8811')
call_11156 = relay.TupleGetItem(func_8810_call(), 0)
call_11157 = relay.TupleGetItem(func_8811_call(), 0)
func_7396_call = mod.get_global_var('func_7396')
func_7397_call = mutated_mod.get_global_var('func_7397')
call_11159 = relay.TupleGetItem(func_7396_call(), 0)
call_11160 = relay.TupleGetItem(func_7397_call(), 0)
func_4750_call = mod.get_global_var('func_4750')
func_4753_call = mutated_mod.get_global_var('func_4753')
const_11162 = relay.const([[3,6,-6,8,-4],[10,-7,5,8,-3],[-7,5,-8,7,-7],[5,3,-5,4,9],[-10,-6,-9,6,4],[-2,-2,-5,6,-10],[6,-4,-7,-10,-2],[8,9,9,-6,5],[2,-3,6,5,-7],[-6,8,-6,7,-5],[4,-1,7,10,4],[-5,5,-1,3,5],[-8,-7,-1,3,-6],[8,-2,-10,8,-4],[5,9,5,-1,3]], dtype = "int8")#candidate|11162|(15, 5)|const|int8
call_11161 = relay.TupleGetItem(func_4750_call(relay.reshape(const_11162.astype('int8'), [1, 75])), 3)
call_11163 = relay.TupleGetItem(func_4753_call(relay.reshape(const_11162.astype('int8'), [1, 75])), 3)
output = relay.Tuple([call_11154,call_11156,call_11159,call_11161,const_11162,])
output2 = relay.Tuple([call_11155,call_11157,call_11160,call_11163,const_11162,])
func_11165 = relay.Function([], output)
mod['func_11165'] = func_11165
mod = relay.transform.InferType()(mod)
output = func_11165()
func_11166 = relay.Function([], output)
mutated_mod['func_11166'] = func_11166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8442_call = mod.get_global_var('func_8442')
func_8444_call = mutated_mod.get_global_var('func_8444')
call_11195 = func_8442_call()
call_11196 = func_8442_call()
output = call_11195
output2 = call_11196
func_11245 = relay.Function([], output)
mod['func_11245'] = func_11245
mod = relay.transform.InferType()(mod)
mutated_mod['func_11245'] = func_11245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11245_call = mutated_mod.get_global_var('func_11245')
call_11246 = func_11245_call()
output = call_11246
func_11247 = relay.Function([], output)
mutated_mod['func_11247'] = func_11247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6691_call = mod.get_global_var('func_6691')
func_6693_call = mutated_mod.get_global_var('func_6693')
call_11279 = relay.TupleGetItem(func_6691_call(), 0)
call_11280 = relay.TupleGetItem(func_6693_call(), 0)
output = call_11279
output2 = call_11280
func_11281 = relay.Function([], output)
mod['func_11281'] = func_11281
mod = relay.transform.InferType()(mod)
mutated_mod['func_11281'] = func_11281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11281_call = mutated_mod.get_global_var('func_11281')
call_11282 = func_11281_call()
output = call_11282
func_11283 = relay.Function([], output)
mutated_mod['func_11283'] = func_11283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8810_call = mod.get_global_var('func_8810')
func_8811_call = mutated_mod.get_global_var('func_8811')
call_11322 = relay.TupleGetItem(func_8810_call(), 0)
call_11323 = relay.TupleGetItem(func_8811_call(), 0)
output = call_11322
output2 = call_11323
func_11340 = relay.Function([], output)
mod['func_11340'] = func_11340
mod = relay.transform.InferType()(mod)
output = func_11340()
func_11341 = relay.Function([], output)
mutated_mod['func_11341'] = func_11341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10254_call = mod.get_global_var('func_10254')
func_10255_call = mutated_mod.get_global_var('func_10255')
call_11359 = relay.TupleGetItem(func_10254_call(), 0)
call_11360 = relay.TupleGetItem(func_10255_call(), 0)
func_8089_call = mod.get_global_var('func_8089')
func_8095_call = mutated_mod.get_global_var('func_8095')
const_11369 = relay.const([[4,-4,1,-10,-4,8,4,6,3,-6,5,1,3,-9,-8,5,-8,10,-3,-2,7,-2,9,-3,-9,7,2,-7,9,-8,-10,-1,-4,-8,3,3,-9,3,4,-2,-6,9,8,4,2,8,-7,-10,2,-9,9,5,6,8,3,-2,-1,-6,7,-8,-4,-2,-5,-3,2,2,-3,-9,-4,-8,9,7,-5,8,-4,2,3,10,-6,-5,-4,-2,-3,-5,-2,-5,7,10,4,3,-6,-8,8,-9,1,-5,-2,-2,-1,-3,4,-3,-9,-4,-3,-2,1,-10,-8,-5,2,3,-8,10,-6,2,10,-2,8,-3,-2,-10,7,-3,-8,1,8,-5,-1,-6,7,-6,3,5,3,-2,6,-9,3,-7,10,-2,-2,-5,-1,9,-6,2,-4,-1,-6,-3,7,5,-5,1,-10,4,-8,-6]], dtype = "int16")#candidate|11369|(1, 160)|const|int16
const_11370 = relay.const([[6],[-8],[-4],[6],[-3],[-5],[6],[-1],[-4],[-6],[-3],[-3],[-7],[-5],[10],[10],[-3],[3],[-5],[1],[-9],[-3],[4],[2],[8],[-6],[-6],[-9],[-1],[-8],[6],[-9],[6],[-6],[8],[7],[4],[4],[5],[-4],[2],[5],[-9],[1],[-1],[-3],[6],[-5],[1],[-3],[1],[-8],[-9],[2],[8],[8],[8],[-10],[-10],[-6],[-9],[-5],[10],[-7],[-3],[2],[10],[8],[-4],[-5],[8],[2],[7],[-4],[-10],[-5],[1],[4],[-1],[-2],[9],[8],[-6],[9],[9],[-2],[-9],[5],[-6],[-2],[-9],[-7],[-10],[2],[2],[-8],[8],[10],[-2],[-5],[5],[10],[-4],[10],[3],[-8],[1],[-3],[-8],[2],[6],[9],[-6],[1],[-10],[-1],[-6],[10],[7],[1],[4],[-2],[-7],[-5],[9],[3],[5],[-3],[-4],[1],[1],[-10],[-4],[-8],[-2],[10],[-10],[-10],[7],[-2],[-3],[4],[-10],[1],[1],[10],[3],[-2],[2],[-7],[-9],[-2],[-9],[-6],[8],[-5],[-4],[8],[-9],[-7],[-10],[-6],[-7],[-9],[6],[-5],[3],[6],[10],[10],[-9],[-8],[7],[-6],[-7],[-9],[-10],[-2],[-1],[7],[-9],[6],[10],[7],[3],[9],[-4],[6],[4],[-10],[-7],[-10],[3],[-3],[4],[-4],[2],[8],[10],[-1],[3],[-7],[-6],[-10],[5],[1],[-10],[8],[-4],[-8],[10],[-3],[9],[-4],[5],[4],[-3],[4],[-3],[10],[-6],[-9],[-4],[10],[9]], dtype = "int8")#candidate|11370|(225, 1)|const|int8
var_11371 = relay.var("var_11371", dtype = "float32", shape = (715,))#candidate|11371|(715,)|var|float32
const_11372 = relay.const(-3, dtype = "int8")#candidate|11372|()|const|int8
call_11368 = relay.TupleGetItem(func_8089_call(relay.reshape(const_11369.astype('int16'), [8, 20]), relay.reshape(const_11370.astype('int8'), [225,]), relay.reshape(var_11371.astype('float32'), [715,]), relay.reshape(const_11372.astype('int8'), []), ), 1)
call_11373 = relay.TupleGetItem(func_8095_call(relay.reshape(const_11369.astype('int16'), [8, 20]), relay.reshape(const_11370.astype('int8'), [225,]), relay.reshape(var_11371.astype('float32'), [715,]), relay.reshape(const_11372.astype('int8'), []), ), 1)
output = relay.Tuple([call_11359,call_11368,const_11369,const_11370,var_11371,const_11372,])
output2 = relay.Tuple([call_11360,call_11373,const_11369,const_11370,var_11371,const_11372,])
func_11376 = relay.Function([var_11371,], output)
mod['func_11376'] = func_11376
mod = relay.transform.InferType()(mod)
mutated_mod['func_11376'] = func_11376
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11377 = relay.var("var_11377", dtype = "float32", shape = (715,))#candidate|11377|(715,)|var|float32
func_11376_call = mutated_mod.get_global_var('func_11376')
call_11378 = func_11376_call(var_11377)
output = call_11378
func_11379 = relay.Function([var_11377], output)
mutated_mod['func_11379'] = func_11379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5245_call = mod.get_global_var('func_5245')
func_5247_call = mutated_mod.get_global_var('func_5247')
call_11383 = relay.TupleGetItem(func_5245_call(), 3)
call_11384 = relay.TupleGetItem(func_5247_call(), 3)
output = call_11383
output2 = call_11384
func_11387 = relay.Function([], output)
mod['func_11387'] = func_11387
mod = relay.transform.InferType()(mod)
mutated_mod['func_11387'] = func_11387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11387_call = mutated_mod.get_global_var('func_11387')
call_11388 = func_11387_call()
output = call_11388
func_11389 = relay.Function([], output)
mutated_mod['func_11389'] = func_11389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6656_call = mod.get_global_var('func_6656')
func_6657_call = mutated_mod.get_global_var('func_6657')
call_11402 = relay.TupleGetItem(func_6656_call(), 0)
call_11403 = relay.TupleGetItem(func_6657_call(), 0)
output = call_11402
output2 = call_11403
func_11409 = relay.Function([], output)
mod['func_11409'] = func_11409
mod = relay.transform.InferType()(mod)
mutated_mod['func_11409'] = func_11409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11409_call = mutated_mod.get_global_var('func_11409')
call_11410 = func_11409_call()
output = call_11410
func_11411 = relay.Function([], output)
mutated_mod['func_11411'] = func_11411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5606_call = mod.get_global_var('func_5606')
func_5607_call = mutated_mod.get_global_var('func_5607')
call_11437 = func_5606_call()
call_11438 = func_5606_call()
output = call_11437
output2 = call_11438
func_11448 = relay.Function([], output)
mod['func_11448'] = func_11448
mod = relay.transform.InferType()(mod)
mutated_mod['func_11448'] = func_11448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11448_call = mutated_mod.get_global_var('func_11448')
call_11449 = func_11448_call()
output = call_11449
func_11450 = relay.Function([], output)
mutated_mod['func_11450'] = func_11450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10789_call = mod.get_global_var('func_10789')
func_10791_call = mutated_mod.get_global_var('func_10791')
call_11451 = relay.TupleGetItem(func_10789_call(), 1)
call_11452 = relay.TupleGetItem(func_10791_call(), 1)
func_10144_call = mod.get_global_var('func_10144')
func_10146_call = mutated_mod.get_global_var('func_10146')
call_11464 = relay.TupleGetItem(func_10144_call(), 1)
call_11465 = relay.TupleGetItem(func_10146_call(), 1)
func_3294_call = mod.get_global_var('func_3294')
func_3299_call = mutated_mod.get_global_var('func_3299')
var_11469 = relay.var("var_11469", dtype = "int32", shape = (1, 120))#candidate|11469|(1, 120)|var|int32
const_11470 = relay.const(False, dtype = "bool")#candidate|11470|()|const|bool
call_11468 = relay.TupleGetItem(func_3294_call(relay.reshape(var_11469.astype('int32'), [4, 15, 2]), relay.reshape(var_11469.astype('int32'), [4, 15, 2]), relay.reshape(const_11470.astype('bool'), []), relay.reshape(call_11451.astype('bool'), [385,]), ), 3)
call_11471 = relay.TupleGetItem(func_3299_call(relay.reshape(var_11469.astype('int32'), [4, 15, 2]), relay.reshape(var_11469.astype('int32'), [4, 15, 2]), relay.reshape(const_11470.astype('bool'), []), relay.reshape(call_11451.astype('bool'), [385,]), ), 3)
bop_11485 = relay.add(call_11468.astype('uint16'), const_11470.astype('uint16')) # shape=(385,)
bop_11488 = relay.add(call_11471.astype('uint16'), const_11470.astype('uint16')) # shape=(385,)
output = relay.Tuple([call_11451,call_11464,var_11469,bop_11485,])
output2 = relay.Tuple([call_11452,call_11465,var_11469,bop_11488,])
func_11490 = relay.Function([var_11469,], output)
mod['func_11490'] = func_11490
mod = relay.transform.InferType()(mod)
var_11491 = relay.var("var_11491", dtype = "int32", shape = (1, 120))#candidate|11491|(1, 120)|var|int32
output = func_11490(var_11491)
func_11492 = relay.Function([var_11491], output)
mutated_mod['func_11492'] = func_11492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_11570 = relay.TupleGetItem(func_5163_call(), 0)
call_11571 = relay.TupleGetItem(func_5164_call(), 0)
output = call_11570
output2 = call_11571
func_11581 = relay.Function([], output)
mod['func_11581'] = func_11581
mod = relay.transform.InferType()(mod)
output = func_11581()
func_11582 = relay.Function([], output)
mutated_mod['func_11582'] = func_11582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11598 = relay.var("var_11598", dtype = "float64", shape = (12, 1, 7))#candidate|11598|(12, 1, 7)|var|float64
const_11599 = relay.const([[[-6.317009,4.017978,2.881624,0.569708,2.937166,-3.687528,5.852361],[8.542096,-8.943286,-2.516842,7.519109,-9.857613,-7.120259,-7.731971],[-0.662766,1.068818,-7.648711,9.326881,-9.654578,1.162709,3.374147],[5.642946,4.411008,0.366077,-0.414274,-1.111030,-8.041949,-9.599031],[-0.170568,4.817793,-6.077188,8.062613,5.442688,-8.425096,-8.193942],[6.189325,-2.494577,-0.438964,5.509904,6.014414,4.147690,-0.317698],[5.790657,-4.766893,3.965374,-6.474688,-3.566467,-9.243471,-4.188782],[-2.891650,5.021747,2.562615,-3.027354,3.320990,5.801803,0.477803],[-6.768289,-1.351879,6.786704,-1.358993,-9.354297,-3.829209,-5.842902],[0.264944,-1.196051,6.094859,6.113430,6.875062,-8.530070,-2.578635],[7.263126,-2.355083,5.615736,4.561515,-9.233273,2.550309,-0.674927],[5.403470,1.709319,-9.489482,-9.989557,4.224728,-2.663047,0.576026],[3.419611,-3.976158,-2.736828,-0.093223,-8.687552,-3.247349,7.195830],[4.273618,0.259438,6.249610,1.788017,-4.906793,2.298809,-6.364226]],[[-5.438796,5.047527,2.285800,3.098757,-9.456439,9.806171,9.114023],[4.233752,9.915275,2.504526,-4.342208,2.449058,-8.734231,7.625861],[0.804515,3.002168,-3.671983,3.178887,-9.590951,6.084528,7.470498],[2.088236,-9.560598,9.599346,-4.625245,-3.055038,6.380267,-1.789672],[-7.592857,-3.151581,1.014763,8.624401,-3.353126,4.447237,9.086640],[5.290422,6.598563,-4.703424,-2.225353,-5.712783,-8.587834,3.219317],[-8.290709,3.156165,5.241742,8.787772,1.751712,-0.900564,1.330354],[-1.250701,-9.181197,6.256272,3.137697,0.271705,-4.481271,-8.750476],[9.991244,-2.859975,1.562468,-7.410498,3.489674,-1.355735,-2.146243],[-3.693270,-8.665284,2.463635,8.517372,1.707901,-6.115605,-9.853711],[-9.244507,8.679714,-3.583835,2.956572,6.821103,-3.147592,8.507889],[5.077531,-9.965911,-6.257357,-0.311097,0.812629,-8.746758,-9.132831],[-5.405001,9.564802,6.147725,-3.969509,0.289780,-6.435397,6.192625],[5.826595,9.019796,-7.548761,5.761144,-4.657175,-0.616562,2.662809]],[[-4.869279,4.463869,-7.229972,7.205813,7.512915,5.771778,-2.483510],[7.421983,-3.883312,-7.481423,4.300743,5.461694,0.036552,1.208816],[-8.580593,4.892888,-9.192584,5.257353,1.504852,7.796440,-5.984085],[4.413588,-2.058113,-4.302776,-7.564978,-5.917850,9.929292,-1.684769],[3.068704,5.012799,-1.363034,3.952696,0.465600,3.056553,9.873738],[-3.173545,2.135570,-9.180302,-8.839853,-3.401671,-9.502407,5.079137],[4.899151,-8.726235,4.150529,-3.767182,-6.358555,-3.810078,-0.227511],[5.729594,-1.075313,2.334214,7.392212,9.313200,-5.267988,-7.809346],[-1.884040,-9.599291,5.433426,0.408020,-2.933617,-8.884666,7.826426],[0.814058,-0.415165,2.229441,-0.587340,-3.229314,6.807596,0.396151],[-2.904516,-0.795312,8.527367,-8.926802,8.366072,3.838510,8.346955],[9.660755,9.494426,-3.166144,9.347625,-0.985524,-4.110812,1.278654],[7.635050,3.088705,2.083431,-0.280952,-5.156398,5.444268,-9.969082],[-4.197715,2.900107,-2.428630,-8.667522,-3.411950,7.025381,2.778799]],[[-8.602862,5.580238,6.835343,3.550679,-7.632364,-1.003712,-5.655183],[-4.123267,-2.603801,-5.733460,-0.393448,-0.660031,6.069203,-9.165119],[-9.369886,-8.253457,3.556242,-3.037246,-8.664577,2.552550,9.513658],[4.030406,4.910911,7.259769,-0.952490,6.213142,-6.745397,3.711648],[8.435755,-9.053006,5.594172,-2.474897,-1.979301,-7.380608,-0.694832],[3.794793,3.679369,4.875328,5.344088,-1.167305,-9.519893,-7.235668],[-1.246865,-3.353985,-9.694954,4.464739,9.141501,-6.170750,-9.433094],[-9.510104,-2.156565,-7.674809,-7.112031,-3.630294,-1.402231,-1.688681],[8.499032,-6.343011,-8.044680,2.013635,1.367652,8.728150,-2.581429],[3.247246,-4.599409,4.481833,0.070656,-7.782533,8.337870,2.843282],[5.844278,-9.207852,0.634810,-3.226827,6.800140,-8.114408,-5.784505],[0.626329,0.067440,0.161576,-8.124719,-3.204183,5.306190,6.997208],[9.106705,-5.986252,-1.564262,7.976424,0.411545,-2.174650,3.430175],[-4.796026,-6.813589,-5.296959,-5.759740,5.554989,-2.502002,-5.228808]],[[-1.777567,-4.534421,8.955736,-4.688253,6.382714,3.772144,-3.013647],[0.707131,-8.223882,9.955902,1.007862,-0.956838,-5.227966,-6.992277],[0.362029,-7.146011,3.835399,4.078871,9.183544,-7.826912,-3.792527],[-8.954644,3.469234,-1.334530,3.460196,-5.326478,-0.235283,-8.044354],[-4.309384,6.745386,6.586178,6.556303,7.507314,5.928661,7.957445],[0.445555,3.103994,-6.100375,-8.800977,-1.385030,-1.463123,-6.705104],[0.175658,8.702026,-1.774897,3.512129,-3.486550,-3.615387,-2.287338],[6.819604,7.300144,7.762515,-9.455207,-8.737668,-7.666028,-3.311806],[9.525579,8.796911,7.601648,5.248590,-2.822684,4.166756,5.422511],[-7.272431,-6.018242,2.651775,-0.823599,-9.871044,-5.919056,9.736182],[-9.892478,-4.348789,4.380841,-7.132504,-6.972464,-0.333880,9.058075],[-9.927246,9.567211,-3.001580,-4.506140,2.789519,-5.500901,8.204484],[-0.608531,8.335675,-1.387171,7.831822,-0.083651,-3.856846,1.022025],[3.498631,-0.362790,8.859153,-0.600625,7.115000,-1.671720,7.716839]],[[6.582436,9.604449,-2.678232,-9.669729,-0.695188,-2.211689,2.728334],[-6.379320,9.335442,8.880348,1.859800,7.063144,-8.944209,-0.203017],[9.225439,3.525435,-5.426547,6.384296,-4.875114,9.709980,5.824489],[1.448508,-0.493018,3.478743,4.724053,0.895701,2.023929,-1.444515],[-2.628873,-0.606992,-2.954022,-0.335344,5.160524,4.167579,1.318398],[-2.468844,-7.969280,1.520988,3.154180,-4.443775,-9.755393,4.174315],[-9.449726,5.699522,-0.392847,6.590077,-3.100371,8.154681,5.859453],[4.982136,5.127371,3.408871,1.631711,-3.540028,0.044622,1.599211],[1.887686,1.890253,-2.461237,-0.837396,9.969895,7.724557,9.556224],[7.345978,-3.968308,9.118336,-3.403964,5.025805,3.336195,4.911212],[6.369886,-8.220793,3.859054,-7.714176,4.178340,8.218276,-7.296800],[-9.735893,7.375881,-3.478575,-6.267715,-1.482238,-3.735283,-6.346282],[8.170046,-6.553734,-8.549713,4.379910,9.416492,6.270308,-0.620484],[2.333456,7.039002,-9.246169,9.303946,-9.892612,-2.304217,-2.899639]],[[6.451669,0.154245,-5.182699,4.529777,-6.700647,9.907749,-1.944808],[-8.005889,2.886082,-7.667917,1.112217,8.826503,8.058540,-8.336302],[-8.471367,6.197829,3.113340,9.492607,-8.157662,-2.225659,8.341283],[-1.821776,-4.552917,1.279250,-9.954748,7.721338,-1.378893,-4.364820],[-3.451162,-9.850089,-5.384321,-3.887727,-9.641522,7.674673,-2.878245],[5.196304,1.280493,-1.540225,9.378528,6.789845,4.743219,7.025267],[-8.896523,4.120215,7.857668,5.016132,4.889577,2.244707,2.897492],[0.611504,2.595079,-9.957115,-1.561852,-1.877251,-7.897497,-7.474807],[-6.621732,4.569019,4.517765,-9.166943,-0.703602,-8.887978,3.313868],[3.533595,7.424497,7.236443,-9.201010,8.858001,-0.521064,-4.185487],[-2.034620,-3.500358,-7.531667,7.750389,-5.973681,-0.454434,2.499173],[1.710021,2.809829,-8.233359,1.804395,9.113981,6.639503,-9.188670],[-2.595272,-9.031298,2.597579,-0.361109,-2.726449,-0.711728,6.767042],[-3.751201,7.654184,4.771218,-2.556173,4.419752,8.588963,3.491223]],[[-8.220662,-3.518532,-3.866320,2.124266,3.682559,-6.390125,0.998090],[5.952290,7.953014,2.666975,1.259961,2.251004,-2.921520,1.558914],[8.174914,-9.661059,-6.030976,1.683703,6.096094,6.359813,-8.402710],[8.980972,-5.212041,-1.051905,-3.084126,-2.833404,-4.117727,5.364912],[7.052718,2.116268,-3.875444,-0.478586,-0.770926,1.575744,-7.484612],[2.784604,-0.671201,-7.074279,9.076781,2.868883,-7.152743,8.256886],[6.118212,-0.675486,9.455192,-4.102219,0.172427,-9.352164,-9.230884],[-3.230275,-6.307666,5.768349,-1.031542,8.387478,-6.883901,1.612632],[3.042412,0.554936,3.106554,0.413328,2.399546,-2.462534,-8.121380],[9.914290,8.356741,2.359861,7.017776,-2.556717,-1.641104,4.208479],[-4.489567,8.729393,8.925254,7.470720,-0.370497,3.048275,-4.190327],[1.324076,-8.652904,0.980190,-5.799913,-1.552675,3.467907,5.042867],[-0.768111,-9.516947,8.475368,-0.297594,-3.208709,6.356388,-3.964876],[5.906390,3.799510,1.985601,8.910483,1.109665,9.465819,3.684253]],[[-0.087980,-7.386244,4.163776,-0.889995,7.166805,5.956539,-3.861316],[-2.744926,6.055108,9.303182,-9.411257,-9.322351,4.671175,5.418969],[9.125982,4.385925,8.863166,7.248487,-4.597989,0.554654,-3.280694],[9.912546,-5.406270,-4.149447,4.913991,-9.466428,-6.960685,0.224373],[-5.339815,2.696034,4.671482,5.027975,-1.350881,6.081372,-9.877955],[-5.183199,8.620029,1.780547,-2.226002,4.557562,1.142165,2.106082],[4.311920,6.919799,-6.949370,4.033904,3.904797,-0.320826,0.842426],[-8.058994,9.095537,3.245602,8.537051,-6.496740,-4.594297,3.213228],[1.970145,9.842283,-0.239530,-4.490704,7.189865,-4.714615,-2.530894],[2.302212,0.608739,-1.426043,-4.056802,2.276522,-4.717917,6.772046],[-5.613512,1.624477,-2.503295,-6.007389,7.712581,8.882948,-8.608380],[-8.635677,-1.800492,0.463568,7.141121,-4.435373,1.370978,1.293959],[9.003829,-5.698106,-0.791043,8.536375,-9.734091,8.628456,-1.075540],[9.872665,-5.014988,-1.465380,0.039001,-3.743310,1.140870,-0.314098]],[[8.275309,-5.670286,0.489021,-7.354728,-5.405988,-6.935215,8.115910],[6.151885,-7.486907,-7.003267,-1.711284,0.780475,-2.808352,-8.271694],[2.349577,-9.165333,4.914089,9.126566,8.381158,-2.269980,-4.194218],[9.691854,-8.293219,9.984120,2.447683,0.928022,-5.073760,5.081703],[1.747069,-2.909605,-5.258328,2.189169,-2.121730,-5.199975,-0.052076],[1.846489,1.390719,-4.258452,0.324351,-0.092626,7.272465,-5.224626],[1.419316,6.581948,-3.625658,1.954677,-7.759831,-8.874606,9.195423],[4.680927,7.696280,-7.404085,4.280494,-0.578157,8.708362,5.573129],[-5.008132,-0.359538,6.871592,-2.128030,-8.209346,-8.262663,-9.447131],[3.574741,-7.448781,1.041856,2.584259,-5.208134,-7.402383,-5.979262],[-5.678819,4.955861,0.677939,-3.259841,6.175213,-6.747453,-8.430375],[-2.602347,5.193129,-2.268333,-3.027989,8.833068,-2.970256,-1.895304],[-6.479995,-4.255206,-8.786717,-3.600992,7.814506,-4.269624,1.915127],[-1.932262,-1.838483,1.364347,-9.999222,6.022354,8.170036,0.671736]],[[-2.768197,2.724917,-6.479411,6.105474,7.408762,-7.573219,-8.680212],[4.677811,-4.127189,2.524320,-8.534620,-2.984105,1.957687,-2.649299],[1.717372,-0.554681,3.507207,-9.011751,3.587509,5.275063,1.251698],[0.779021,-8.278150,-3.330982,2.866666,7.644593,-8.690131,-3.278312],[3.267056,-0.740840,-0.239232,6.366892,-7.267850,2.205025,6.972695],[-7.820924,6.931536,0.168678,-0.195119,-7.561888,2.827487,-8.197580],[7.007956,1.279923,7.173194,6.475073,-3.534720,0.012804,4.889693],[-8.964068,1.471314,3.422615,6.251716,0.386735,-5.118973,3.709683],[0.095449,9.769171,-7.174259,-9.252770,4.362568,-5.296974,-2.852734],[-2.243296,-3.252048,-8.247235,-4.433265,-2.176684,-2.245985,5.980968],[8.994764,7.228939,-7.840584,-6.439723,9.113192,-3.868176,-7.349101],[5.489028,2.790497,-7.753835,-9.152581,0.412527,8.882392,-1.536674],[5.130535,-0.590897,-9.539618,-2.922247,3.911993,-3.555612,2.853157],[2.287290,2.844512,-1.369667,-6.761867,-4.844782,2.931637,9.287807]],[[-5.197209,6.358311,-9.281812,-3.203586,7.959008,0.158711,0.343152],[4.879535,2.555052,5.990567,1.128107,5.922330,-4.963587,8.498588],[8.918590,-3.412723,-6.387194,-6.643797,-4.016776,-2.262288,8.747251],[-2.158141,2.333072,4.921484,-5.337472,2.243219,-2.791505,3.053252],[-5.454880,-2.128126,-1.694083,3.208201,-6.426090,4.896983,2.001722],[-9.272175,0.174761,7.966899,7.218280,9.982760,8.683763,1.006363],[5.631097,3.058775,8.006242,-5.584184,-6.786494,7.833770,1.437778],[8.237393,-1.043680,1.727669,-9.043316,-1.685023,7.576611,7.859372],[-4.973725,-2.246831,-7.843070,5.356580,8.599423,7.343133,-1.072161],[8.529200,9.975219,-6.042743,-7.102516,6.787545,-9.685149,-0.909216],[-9.977139,1.632673,8.682498,-8.055296,9.530314,6.862254,3.127629],[-9.939922,2.336441,9.190879,4.364671,-2.601286,1.226099,-1.727188],[2.558775,5.179543,6.377614,-4.324272,-5.236365,-2.714273,6.609602],[3.017407,-1.811171,-6.843145,7.868157,-3.354811,0.939335,-1.232672]]], dtype = "float64")#candidate|11599|(12, 14, 7)|const|float64
bop_11600 = relay.mod(var_11598.astype('float64'), const_11599.astype('float64')) # shape=(12, 14, 7)
func_7981_call = mod.get_global_var('func_7981')
func_7988_call = mutated_mod.get_global_var('func_7988')
var_11604 = relay.var("var_11604", dtype = "uint16", shape = (360,))#candidate|11604|(360,)|var|uint16
var_11605 = relay.var("var_11605", dtype = "int8", shape = (225,))#candidate|11605|(225,)|var|int8
const_11606 = relay.const([-7,-2,4,3,-9,-4,-10,9,-2,-3,10,-5,-4,-4,1,5,-6,1,10,1,8,-10,8,-2,6,7,1,-5,-2,-1,2,3,2,-8,-7,-10,6,-5,1,7,1,5,7,-6,1,-1,3,1,-9,6,7,3,7,-10,-3,6,-2,-5,1,7,9,6,-4,-7,-5,-1,2,10,9,-6,6,6,2,-4,-3,6,-10,3,-9,-9,5,1,-1,5,-10,2,-4,3,-10,-3,-9,-4,-3,-5,7,-9,1,10,-10,3,7,-5,6,10,-4,-10,4,-3,2,7,1,4,7,-3,-8,-6,-4,9,-8,7,-4,8,2,2,9,-3,-9,-2,10,1,4,4,-10,-7,4,4,-4,5,-2,-9,-8,1,1,2,-9,-1,4,-10,-10,5,-4,1,9,-3,3,-2,-6,10,6,-9,7,-7,-7,5,5,-1,-9,4,-8,-9,-9,-6,5,2,-8,-6,3,7,-2,7,-2,-4,-1,-9,7,4,8,-1,-3,-6,-6,-5,-8,10,5,-7,6,-10,-4,-9,-6,7,10,8,-10,4,9,-6,-2,-8,4,5,-9,-10,-3,-3,10,2,-7,5,5,5,1,-10,8,1,3,5,-1,6,1,-1,-1,-3,3,8,-7,1,-2,10,-9,5,7,6,2,9,3,-6,-5,5,-5,6,-3,8,6,-7,-9,6,2,-3,4,-10,4,-1,5,4,8,1,-5,-7,9,7,-8,-3,3,-7,-9,-3,-4,-9,10,-8,5,10,-8,-2,-2,-6,-10,-5,6,1,10,6,8,-3,-3,9,-10,-6,7,-7,7,-1,4,-3,7,-6,7,1,1,8,-4,-10,7,5,5,4,7,2,-1,-2,8,7,1,-3,-3,6,9,2,-3,-9,-10,2,-8,9,-7,10,-10,-1,7,5,4,-7,-7,-8,-7,9,-9,5,5,-9,-6,10,-7,8,4,4,-5,10,2,-4,-6,-8,-4,-2,-10,3,-9,-1,3,-10,1,6,7,-9,5,-1,6,4,4,-1,7,10,9,2,-9,9,-8,-7,1,7,-9,7,-8,7,6,-6,-4,-9,-6,-4,-5,8,-8,-10,2,4,-6,9,3,3,6,4,-6,2,4,-10,1,-2,-4,7,-10,9,4,-9,6,6,-3,-1,-3,-2,10,-6,1,-9,2,1,9,-7,8,9,8,-3,6,-2,6,6,8,-7,9,2,-2,-3,-2,3,8,3,9,-9,-1,-4,6,5,1,3,-7,-3,-9,-9,9,-3,8,-3,4,-2,2,4,-7,4,-10,-1,-3,6,-1,4,-9,-6,-5,-3,-4,3,-2,-6,7,-8,4,-2,4,-10,2,-6,1,7,-3,-4,-5,3,-6,-6,-8,8,4,10,9,-2,3,2,-1,9,-9,-3,2,4,6,10,6,5,-1,9,-4,-1,-10,1,5,-7,5,-1,-5,-6,6,-2,-8,-4,1,-9,6,-2,-6,-10,-4,-5,7,7,-2,-3,-1,-1,-2,-7,10,-8,9,-7,-2,6,-3,7,7,-2,-7,7,9,-6,-5,-6,1,3,5,-5,-6,4,-1,1,-3,7,7,-9,-2,-7,-9,1,-6,-2,-6,-9,7,4,-4,-6,-10,-8,-6,1,-1,-4,1,10,4,10,8,-2,5,-3,-5,-6,1,-9,-9,5,-1,10,-6,9,2,-10,1,5,2,-4,6,-1,2,-4,-2,-2,-9,3,5,-7,-5,7,-1,-1,2,-9,3,-5,-9,9,7,-4,-6,-4,-3,7,-8,-4,-1,-9,2,1,-9,2,5,-1,5,-1,-6,-1,5,-9,-6,-9,9,10,-7,7,-7,-6,-2,-7,4,-7,2,-1,8,8,-2,1,-7,3,3,-2,2,-5,4,-3,-1,-9,10,1,-8,4,-8,-1,9,10,5,2,-7,2,-2,-10,-5,7,-6,5,-7,-2,-5,9,7,6,1,-9,-7,-10,6,-2,-6,8,7,-6,4,7,-10,-5,-8,-1,1,7,-1,-6,8,7,9,6,1,-8,1,-8,6,10,-4,-10,2,-4,-6,-7,-10,-8,2,-5,-7,1,10,1,-3,-9,3,-4,9,-8,-10,-9,1,-9,3,-9,-9,-8,-10,-5,1,3,-5,9,-7,-7,1,-5,-3,-9,-10,-7,-9,-10,-6,-5,10,3,5,7,8,-8,2,-3,-2,3,1,1,-9,-10,-5,-3,10,-10,7,-10,-5,-6,-4,4,-3,7,9,3,-10,-4,-7,2,5,6,-1,-9,-5,-3,-5,-2,-6,-4,9,-4,2,4,6,-9,-7,-3,1,3,6,-4,3,-3,7,3,-7,-2,6,8,-1,-3,4,-5,7,-3,-3,7,-5,4,-8,-9,-5,-3,9,3,10,8,-3,3,2,6,-4,-1,3,-2,-2,3,-4,-8,-10,2,-8,-6,-5,2,4,3,3,7,-9,7,2,9,-8,8,6,8,2,7,-4,3,9,5,9,-7,3,-10,-6,2,5,-2,1,7,5,-1,4,-8,-1,4,5,10,7,-6], dtype = "int32")#candidate|11606|(936,)|const|int32
var_11607 = relay.var("var_11607", dtype = "float32", shape = (715,))#candidate|11607|(715,)|var|float32
call_11603 = relay.TupleGetItem(func_7981_call(relay.reshape(var_11604.astype('uint16'), [4, 15, 6]), relay.reshape(var_11604.astype('uint16'), [4, 15, 6]), relay.reshape(var_11605.astype('int8'), [225,]), relay.reshape(const_11606.astype('int32'), [936,]), relay.reshape(var_11607.astype('float32'), [13, 55]), ), 2)
call_11608 = relay.TupleGetItem(func_7988_call(relay.reshape(var_11604.astype('uint16'), [4, 15, 6]), relay.reshape(var_11604.astype('uint16'), [4, 15, 6]), relay.reshape(var_11605.astype('int8'), [225,]), relay.reshape(const_11606.astype('int32'), [936,]), relay.reshape(var_11607.astype('float32'), [13, 55]), ), 2)
output = relay.Tuple([bop_11600,call_11603,var_11604,var_11605,const_11606,var_11607,])
output2 = relay.Tuple([bop_11600,call_11608,var_11604,var_11605,const_11606,var_11607,])
func_11616 = relay.Function([var_11598,var_11604,var_11605,var_11607,], output)
mod['func_11616'] = func_11616
mod = relay.transform.InferType()(mod)
mutated_mod['func_11616'] = func_11616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11616_call = mutated_mod.get_global_var('func_11616')
var_11618 = relay.var("var_11618", dtype = "float64", shape = (12, 1, 7))#candidate|11618|(12, 1, 7)|var|float64
var_11619 = relay.var("var_11619", dtype = "uint16", shape = (360,))#candidate|11619|(360,)|var|uint16
var_11620 = relay.var("var_11620", dtype = "int8", shape = (225,))#candidate|11620|(225,)|var|int8
var_11621 = relay.var("var_11621", dtype = "float32", shape = (715,))#candidate|11621|(715,)|var|float32
call_11617 = func_11616_call(var_11618,var_11619,var_11620,var_11621,)
output = call_11617
func_11622 = relay.Function([var_11618,var_11619,var_11620,var_11621,], output)
mutated_mod['func_11622'] = func_11622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6936_call = mod.get_global_var('func_6936')
func_6937_call = mutated_mod.get_global_var('func_6937')
call_11626 = relay.TupleGetItem(func_6936_call(), 0)
call_11627 = relay.TupleGetItem(func_6937_call(), 0)
func_5858_call = mod.get_global_var('func_5858')
func_5859_call = mutated_mod.get_global_var('func_5859')
call_11676 = func_5858_call()
call_11677 = func_5858_call()
func_11165_call = mod.get_global_var('func_11165')
func_11166_call = mutated_mod.get_global_var('func_11166')
call_11691 = relay.TupleGetItem(func_11165_call(), 3)
call_11692 = relay.TupleGetItem(func_11166_call(), 3)
func_9740_call = mod.get_global_var('func_9740')
func_9745_call = mutated_mod.get_global_var('func_9745')
var_11697 = relay.var("var_11697", dtype = "int32", shape = (936,))#candidate|11697|(936,)|var|int32
var_11698 = relay.var("var_11698", dtype = "float32", shape = (715,))#candidate|11698|(715,)|var|float32
const_11699 = relay.const([7,3,-2,7,-9,-9,-7,10,10,6,-8,-3,5,2,-2,-10,-10,2,7,9,8,-8,-3,-7,-8,6,2,-6,9,-10,4,9,-3,5,-10,-8,4,-3,4,4,3,-7,1,1,3,10,-3,1,-2,8,3,-10,1,8,3,9,-3,-2,2,-4,-9,2,3,-8,10,-7,-1,3,-10,9,-4,1,7,-2,9], dtype = "int8")#candidate|11699|(75,)|const|int8
call_11696 = relay.TupleGetItem(func_9740_call(relay.reshape(var_11697.astype('int32'), [936,]), relay.reshape(var_11698.astype('float32'), [715,]), relay.reshape(const_11699.astype('int8'), [75,]), ), 6)
call_11700 = relay.TupleGetItem(func_9745_call(relay.reshape(var_11697.astype('int32'), [936,]), relay.reshape(var_11698.astype('float32'), [715,]), relay.reshape(const_11699.astype('int8'), [75,]), ), 6)
func_5833_call = mod.get_global_var('func_5833')
func_5838_call = mutated_mod.get_global_var('func_5838')
const_11702 = relay.const([5.645613,7.122661,-8.527339,-2.425913,-7.140870,-5.708132,-3.702348,9.947997,-3.988301,-8.737176,9.926069,8.083624,9.042669,7.432432,6.859677,1.201127,-6.082009,-8.360240,-2.103426,-8.598615,-2.243696,-8.122841,6.984007,6.073072,-1.307746,-8.526000,-3.668426,-7.806929,4.270076,-8.991143,-6.752755,5.758799,-2.827577,-3.915518,2.704476,2.128792,7.906626,-9.576575,6.254442,4.167338,8.520668,0.124785,4.070773,-6.533286,4.637429,3.645427,-2.263094,0.707058,4.738922,2.222133,-0.506139,-5.377541,-6.132910,3.522948,1.001274,5.826669,-4.092485,-6.270535,-1.365550,-6.472171,1.697528,-9.350297,3.885680,-0.655714,3.836584,8.798803,-7.866914,5.087936,-3.407445,-9.408676,8.035095,4.152689,-3.639300,1.302431,-9.802014,7.847029,-9.157243,6.477265,9.621414,-8.948438,-6.829340,-6.739201,2.069852,0.903097,-9.704212,6.532335,-9.243183,9.957517,-5.295110,0.332771,6.643602,-1.629087,-8.417143,3.966654,8.467462,-1.858650,2.283771,-2.624219,9.038114,-8.936530,9.772554,0.748810,-1.001148,6.774670,-3.348309,8.981596,2.889086,5.593278,-8.426122,1.572386,-9.447120,5.386975,-9.853279,-1.254675,5.113624,-2.075451,7.988874,-9.679694,-3.730250,-1.605950,1.871992,-4.356197,-4.088904,-3.040710,-3.540546,-9.736961,-4.123957,-2.232934,-6.299205,-0.904064,-2.733770,-7.793588,-5.373097,2.247807,-5.527714,1.653899,-8.545564,-8.721379,7.068253,2.715636,-1.337502,-5.591168,5.827938,-1.001068,-7.130406,8.241433,3.909512,-3.977961,3.953470,-0.504881,3.628154,2.109085,-3.520032,-7.931631,-1.641207,2.596978,-6.083196,4.466276,0.546838,6.789481,-6.531112,-3.080615,-9.612868,-6.542040,-9.596931,-7.032692,-1.012991,5.956708,0.401345,3.580573,3.591023,6.900595,-2.594494,9.529049,-1.191995,1.520019,-2.127785,-2.553425,-7.304394,-0.188008,4.210186,5.166764,-2.308502,-3.640271,-1.685012,8.942505,0.858351,2.608481,-3.246865,0.271702,2.187302,2.731322,-3.193142,3.648506,-8.471990,8.354109,-6.869969,-9.189203,-6.017505,-0.235208,-1.662652,-9.586091,-8.403679,9.953599,7.282440,3.232965,-5.849702,-6.989775,-6.528109,5.399375,5.712591,6.094272,5.299263,-5.255801,-3.091990,1.208997,-0.422078,-3.992766,0.514058,3.798219,-9.274889,-1.571518,-4.643386,5.829997,-4.822104,8.428272,-9.283934,3.456349,-4.070042,7.774948,-8.421482,3.330753,-6.633538,-4.107863,-4.290441,-5.961888,-1.138543,5.004515,4.467807,-5.237677,1.003742,2.505372,-9.454145,-7.212983,-1.736380,2.902811,-8.347977,-2.413383,9.027418,-0.511723,-3.411209,-0.152977,4.788344,8.681687,5.402680,-4.178037,-7.707210,-1.119203,-2.831848,1.640514,-2.837668,-2.145169,-7.084793,7.483990,5.219944,6.700668,2.694931,-7.941999,6.805489,3.720352,7.396071,4.604018,-2.837952,-5.709514,-6.343081,6.192166,6.482457,5.786863,-7.159701,6.488828,9.087612,-0.429668,-8.966387,8.994945,-6.435011,-7.195911,4.663014,7.766348,7.054044,-2.500576,-6.297711,-2.908810,3.916086,1.044291,5.852052,5.162897,6.937934,3.011696,3.230002,0.300181,2.034508,5.279384,6.610685,-9.907655,5.673368,1.648196,1.079914,2.125948,4.613807,-3.975587,2.794991,9.909173,1.736772,-0.304880,-0.086305,7.913613,-7.331345,-7.597188,6.360113,-6.067905,1.991293,-7.711951,-8.726925,-0.891405,-3.445848,-0.328477,-9.414811,-8.973835,-3.636859,-1.970738,-5.446995,-2.986558,1.385458,8.491814,-9.570226,1.898390,8.133301,-4.592380,0.950025,4.703911,6.510882,0.487500,-5.884408,-0.520049,-4.424647,3.344357,-6.783247,6.740187,-7.722379,-2.730820,6.979228,-8.048252,-5.228434,-7.798603,1.698106,0.333454,1.380823,9.805885,5.879814,-2.371204,-4.758703,-4.582992,6.051801,-1.134363,-1.913686,-2.575010,-8.984847,-7.377673,2.072878,-6.470476,4.313762,-8.314583,-4.637572,-6.229237,7.593408,-1.666932,-4.331311,-5.781247,-5.307360,5.263251,4.883361,-9.669783,-4.097702,-7.262492,7.963300,8.590675,1.095056,2.366210,7.578121,6.903644,-0.973491,-9.006986,-6.986952,3.353900,-4.486710,-5.170406,-7.361726,3.523135,8.222609,6.948377,5.679710,6.199362,-9.881176,-5.517904,-2.579596,-8.074240,4.162502,8.866123,8.953084,3.410525,1.252265,9.680171,-1.195542,2.391328,6.315996,2.435292,1.397974,4.037083,3.389619,9.235879,0.648549,0.896824,-5.507394,-0.985210,8.386355,4.434209,0.194790,-2.855749,-0.212470,-9.333478,-1.856854,-9.746297,-9.170433,2.602414,6.953249,-0.322333,-2.090894,-5.314925,-2.508619,-3.747128,-3.465297,4.494880,6.940235,2.249026,2.730396,1.966015,6.283920,8.797232,4.324587,-8.664575,5.576092,0.995678,-2.766326,-3.977612,-0.063097,-4.640296,7.355347,8.937808,5.585618,-4.538788,-2.437971,0.255491,1.840052,9.016850,5.912630,0.275149,-1.583317,5.053304,-1.394796,-8.460221,-1.042801,9.264546,-3.833130,-2.902054,-8.757210,-1.864968,-6.777351,-2.946437,-9.586387,-2.795615,6.983226,-7.255279,-3.974996,-6.633957,9.106054,-6.828347,3.791215,4.487878,-6.701164,-9.213678,-2.006592,8.066067,-9.583793,-6.621925,9.321594,-3.078145,8.074720,6.993039,-1.842224,-9.367503,-9.736074,-6.834717,0.136850,7.357186,7.768093,-2.487545,-3.031548,8.669344,5.886400,5.107941,-5.796135,-1.106518,-0.816459,-4.680534,8.360486,-0.777990,3.616251,-9.774695,1.048553,-8.017263,6.339565,-6.302451,-3.974958,-8.558196,-1.663689,-4.858774,0.205668,-4.188679,-9.604904,4.129790,6.945617,0.805778,-2.808804,7.132750,3.512217,-6.800387,-0.287427,-4.292728,-4.465633,5.861418,-5.032558,-1.290117,-3.234895,4.976376,9.154971,-8.526300,3.978097,2.927765,7.351840,0.688890,-1.967331,9.916742,-5.671722,3.273273,-5.185395,1.602869,-5.601528,8.798184,-1.522850,-6.650304,2.162781,9.336583,-6.849886,-8.529786,2.661708,3.466993,6.284182,8.906764,-1.702891,9.177587,0.319011,-5.304719,-9.859208,-7.609442,-4.108707,-8.907764,3.619356,-5.454558,-8.622800,-3.609917,-5.964420,2.394308,-8.934001,-1.219140,5.436839,-4.749036,-7.690254,-2.872446,-8.153809,-6.474296,5.612897,-0.395233,-9.497443,5.285246,2.665530,-4.213676,6.267458,3.280617,-9.084902,-3.447176,1.259959,-8.813622,6.494838,-9.137053,0.941879,2.996610,8.696720,-1.893857,-4.995965,-9.344452,9.808154,-6.291280,-1.770620,-8.497160,1.488535,-0.873943,9.776692,-3.867311,-1.057531,-4.561345,4.271187,-0.773556,7.987294,-8.934468,-5.080631,4.398187,-8.144562,-2.794165,-9.495625,0.222058,-5.215600,-7.095801,9.584907,-2.878085,-3.579531,5.185001,-7.466958,-7.724266,-7.073418,-3.713387,-9.252479,-7.237033,7.824086,4.184059,-0.288578,1.627904,0.071444,-4.617507,-4.801863,-7.079565,-0.063696,7.259157,6.244309,-0.772945,-9.445290,6.363370,7.874121,9.655740,-5.590889,-9.820600,-5.831255,5.165138,2.196185,-5.555047,7.827274,-9.931925,-9.344894,-5.055277,-6.118523,-4.378154,2.205904,1.388943,4.209545,0.710606,7.068796,-8.232456,3.219959,7.891099,-3.352384,2.326661,-6.644455,0.688444,3.357383,1.705681,-9.306687,-1.825746,9.820064,-2.236892,2.536712,-6.524453,3.825586,-9.271765,1.876141,-7.979482,5.599151,3.054769,6.862701,-3.976903,-0.624166,-7.757254,9.661722,6.659877,-7.248114,-4.035390,7.313275,1.762459,9.112861,-6.962544,8.644514,-5.975826,-2.702828,5.909468,-1.697858,-3.446776,8.846709,-0.373611,2.968339,1.230689,9.285264,6.914926,-9.196854,-8.467869,-0.595998,-1.344792,2.123775,-6.087219,-4.023520,8.485687,-2.357643,-9.005594,8.036428,-9.619638,-0.926412,-4.739384,1.301923,-8.484449,-6.860547,-1.601664,7.800599,7.201674,9.165395,-0.627856,6.594213,8.969296,2.790564,3.403304,-1.176198,-9.038425,8.726566,-0.416147,-1.655013,-0.484600,0.612708,-1.876284,-8.140282,1.830936,8.943013,0.924412,-1.716092,-1.424220,-7.167855,-9.353302,-0.909715,4.974022,9.566081,-0.578448,5.561279,0.743123,7.831684,8.196335,1.568150,-3.068154,4.336345,1.982556,-8.352265,4.984929,7.509770,0.326826,-7.705537,8.123247,-1.673787,-9.087348,-9.511129,9.834100,5.077415,1.824932,6.978741,8.203300,-7.318757,-7.460590,9.374591,2.745853,3.323890,-1.436748,-1.883882,-0.051281,9.113489,-0.153688,-8.601792,-4.106143,-8.737185,-1.553679,2.562874,-1.391822,-0.619507,-3.884858,3.477514,-9.603622,-8.476840,-1.974179,-0.349238,0.667665,9.191176,1.820537,0.253077,3.992299,-5.226906,-9.789076,-4.130663,3.460259,7.971374,-6.783237,4.752797,-1.345444,9.335057,-0.873759,6.590041,0.268288,4.757664,-7.993255,-8.433154,9.497707,9.442751,-7.326696,-8.926838,-5.529786,0.511965,-8.348477,7.808166,-7.650344,-0.345364,-0.513677,4.615628,-9.348051,-1.868345,2.289317,9.402342,1.098792,-6.150395,-4.605804,9.226422,6.057392,7.273094,-2.721988,-9.023539,9.763553,3.645562,-0.506270,3.863260,-4.427567,2.763974,0.638724,-0.116326,2.838558,-3.844148,0.991271,-2.017692,4.601123,1.754641,-8.005451,-2.529945,-1.737162,5.071058,-5.172276,5.367213,-3.193276,0.073856,5.318939,7.424566,-4.637514,-3.969551,5.871891,-3.761647,-1.131599,-2.904099,6.587430,-3.184372,3.133136,-6.800135,9.367955,-0.089656,-9.375397,4.177801,3.282054,-5.746884,-1.412207,8.195130,3.172316,-9.904001,5.573441,-0.739610,-7.968686,-6.296767,-9.989452,5.535439,9.401952,-4.700206,2.133845,9.020979,-9.250578,1.822256,5.784596,-5.975113,-9.613116,-5.975411,-4.013114,8.665930,-4.660490,-0.700475,-2.417454,-7.033210,1.921788,-7.973486,-5.511119,8.953062,4.550973,5.166299,8.166383,-5.924583,4.648357,-5.462992,6.581705,-5.453498,8.942684,7.411873,-8.150485,1.222383,-2.968726,2.900498,-7.736575,9.453810,0.066702,-2.088118,-5.902528,-7.055262,6.128397,1.485734,-0.793077,-5.999002,-1.542869,-5.141393,7.186631,-4.057621,2.001283,-4.822944,-3.039455,8.759271,7.486131,1.536181,-5.670969,3.819440,-4.425137,4.916154,-2.678487,-7.753965,1.233582,7.788743,5.101070,-4.940989,3.377639,-9.916733,-5.122765,4.044856,8.043902,1.467667,2.221548,7.835997,-5.268438,-4.214411,5.168902,0.512724,0.555928,5.193664,7.134111,8.125541,3.520902,-9.322258,-9.692151,7.596342,-8.969956,0.768692,2.880798,0.031530,8.127841,-0.776167,7.078169,4.988428,-8.625684,3.002038,-5.135839,8.012520,-4.179305,0.613954,9.646349,-9.823295,-3.057889,5.302199,-7.791429,6.067752,5.136992,-0.920746,8.515530,5.620253,5.837810,6.141070,-5.546079,9.178234,9.853169,2.509350,4.978959,-3.582125,2.067760,9.889234,3.498969,-5.313048,-0.662852,0.699812,-5.713279,3.508948,3.986945,-4.868877,6.016918,-6.340440,-8.769542,-3.151082,9.776526,1.060182,-8.180196,-6.160553,8.720186,-7.598604,-3.617064,-0.386188,1.443814,-6.416219,-6.335764,-9.873612,-5.584552,-2.401069,-7.902660,-0.830635,-5.662207,-2.617863,-4.672873,-1.120449,0.080821,3.261701,-9.224721,2.034855,4.015496,-2.047842,-3.598633,-9.048130,0.569631,4.857305,2.258801,6.051010,-2.943140,-6.414013,-8.070512,-5.583319,-0.660709,4.455965,8.216453,-3.309112,-9.212378,5.817696,2.812335,3.970855,-0.507735,-1.764994,-7.464107,2.398865,9.128758,1.304482,-4.321642,-2.166633,5.670712,1.766834,-0.671623,-2.897723,-0.477932,6.481739,9.826988,-1.012029,9.086988,6.689365,-2.237507,-1.206028,-3.137566,-3.555517,-2.272210,4.451719,-8.537247,-0.221908,-3.719670,-6.764508,-9.583127,-4.109463,-6.274207,-6.194728,3.989696,-3.132282,-0.806759,-7.125480,-5.310284,-5.414906,5.035055,4.869510,-6.362510,-0.507596,-1.169624,-4.736199,-9.583563,-4.715013,9.524641,-4.297200,-7.229666,6.750068,-5.806520,6.833025,-9.753431,3.073934,-1.043165,1.712593,-0.584524,4.321075,-7.219048,-2.858866,6.755397,-6.805718,0.951688,1.284791,2.958184,-2.097255,-7.075290,-5.169167,7.346667,-9.097724,-1.699758,2.794579,8.231224,0.299966,-6.196585,-3.583243,-3.778547,-1.196842,-6.760399,9.358191,-3.256910,4.934922,-6.361345,3.653206,6.296744,8.625365,-9.546636,-7.226786,4.263929,5.279168,9.621356,0.644581,-7.944640,9.665698,-2.828184,-7.316064,9.624011,6.682165,-1.557731,0.135205,7.486041,2.404310,9.095117,4.592292,-1.098520,-3.640180,3.165918,3.182133,-5.492550,-1.934640,-3.651059,0.548467,-5.784965,0.687876,-6.707496,-6.718370,1.180503,5.038843,5.768132,4.805174,9.782094,-4.489703,-5.535354,3.389645,-0.722962,7.636178,-4.766652,-4.215909,6.828255,2.566014,0.840442,9.892756,-3.992716,4.723519,-1.268016,8.218596,2.032441,-0.391924,2.419254,-0.283933,3.780767,-4.990946,-9.489366,-6.100129,-3.412867,2.549283,4.979399,-2.195570,6.263305,7.906367,0.808181,-4.639808,-1.870579,-4.717576,-0.209441,-9.013890,-3.220070,4.022970,0.378938,-1.746667,-9.939018,1.395328,4.605241,9.438869,-0.529220,-6.738866,7.759301,-9.156115,6.452201,9.713245,2.688318,8.612364,3.004848,-6.486784,-6.043802,-8.998411,0.486443,-3.192869,-4.237204,4.372045,-4.827832,-2.263521,-0.764665,-2.839850,7.131616,4.984611,8.503926,-8.125362,-7.433391,2.500497,7.053138,3.453230,-1.541399,8.886347,5.600295,4.973203,-4.059278,9.046144,-5.499574,-2.453704,4.831992,-3.310576,-0.552992,3.615647,3.341736,7.740803,8.722588,5.766650,-6.515121,-8.776571,-1.164712,-7.566762,7.912775,2.900179,9.982154,8.475520,-3.348089,7.434411,-7.172993,0.913952,6.265812,-6.097852,1.851350,-5.305456,7.881789,7.508154,-8.214782,-7.357735,0.771193,1.382013,-9.010144,4.743320,-5.973041,7.837461,-5.521752,4.738942,-3.008578,-5.836252,9.294420,4.909799,7.415960,-3.624889,-2.058618,9.900711,5.455848,-4.755488,0.180818,-6.421426,-6.681754,-5.170194,-9.423113,9.011702,4.568711,-5.787983,-0.579180,7.050284,-0.469656,-9.218929,1.842706,-9.507822,-2.703379,-8.802119,-0.363400,-1.051366,-4.938433,8.960319,-9.947837,7.990407,-3.400591,-3.756163,-6.088100,-6.744089,-7.795347,1.380922,-8.696116,-4.773265,0.381285,-5.259498,8.468970,-2.382087,3.330374,-1.925740,-0.638132,-2.845205,9.639335,-3.227478,-2.960753,-9.805699,9.649933,-3.515480,1.362458,-3.110338,7.816050,-7.912219,4.434018,7.266812,6.711143,-0.130830,8.186046,-4.510699,-3.151373,-0.560101,-2.388057,7.522776,1.183891,6.910419,-7.935491,6.172870,7.371830,-7.402608,-1.207683,1.474787,6.120435,-0.456024,-6.369093,7.162592,2.993919,-0.259652,-1.074002,9.226441,1.023981,-6.907900,-0.414688,-7.085332,1.006476,3.794214,-3.048771,1.379761,-8.636642,-8.966364,0.953672,4.582199,-4.773346,-2.748118,7.165136,-1.485273,-9.399775,-1.370883,-6.254774,-1.597475,6.077180,0.978282,2.979077,0.241064,-4.309956,-9.241862,8.413723,-2.274491,3.771576,-1.701425,-9.093774,-6.072427,3.011543,-7.090931,4.203013,-8.183785,-9.116627,-9.973027,-4.685252,3.641791,1.765600,-4.450059,-2.518995,-0.329476,7.083065,-5.916075,0.738056,3.479670,-7.091874,-5.098020,-1.162680,-4.322997,8.616389,-2.615149,3.704901,-5.533767,-0.350904,3.747469,-8.903889,-5.549875,5.374825,5.930449,2.009053,9.072512,-7.368839,2.853270,-8.782767,8.568129,-5.535987,-8.594482,-1.422173,5.405148,4.880826,4.050323,-2.827638,-8.587528,-9.865034,0.484275,-9.482232,6.875394,-6.841425,5.172297,1.911734,-3.750612,2.825235,4.648777,-1.924388,-4.762056,8.698751,0.163801,5.311184,9.055357,9.045312,-3.103674,-1.995282,2.266943,-7.822796,2.253033,6.987799,-2.098220,-4.320365,-3.248136,-3.249870,7.042643,-1.233830,2.812121,-8.461724,-9.189019,7.249657,4.737989,-9.752115,8.072732,7.869183,-2.176485,-7.723646,0.239159,-3.913787,6.512712,-3.952281,9.648146,7.712564,6.559930,5.094951,-7.952102,-9.360505,-8.119592,-4.871657,6.649294,2.347048,-1.943067,-0.210510,-3.245700,-0.429692,9.430682,-9.107538,2.932136,-9.761566,1.599771,-2.860969,-1.481065,2.216505,-0.789795,-2.153693,-1.822981,1.881925,-0.340936,-4.000975,4.380431,-3.813821,-7.024638,4.013964,4.250356,-3.724353,5.993870,-3.631447,5.628694,0.974750,5.756904,4.583339,4.558685,-2.141168,5.224952,-4.059514,6.676203,0.114128,-5.940859,-8.745230,-2.169821,-1.916981,7.332787,-4.697044,0.421489,-9.726836,0.502035,-4.910005,3.794735,-5.888625,6.142124,1.401425,-9.391586,-8.284232,3.715355,-5.277217,6.581045,0.080157,6.045573,3.598879,2.636959,6.955071,-3.201245,7.403723,-6.451038,-7.337517,6.541672,1.534939,-1.627475,-4.362785,-6.208455,-4.083907,7.244850,-7.366940,6.370463,3.108221,-5.656351,3.748017,-8.391275,-1.077008,8.616129,5.589033,-6.009652,-2.465028,-1.424647,-9.195371,5.256892,4.266407,-3.942419,1.064600,6.534366,1.794685,3.810500,-3.020520,7.860385,-4.752188,1.587445,9.413447,-8.227428,7.864280,-5.352955,7.159140,-4.165675,6.229045,1.539177,-6.688566,7.036771,-9.870074,-8.431056,8.360084,5.868363,-2.098088,0.943726,-4.279352,6.379900,-7.657797,0.437182,7.888066,-7.655104,-6.395084,2.191933,3.064076,-9.254292,1.892349,-3.145974,8.773881,1.267561,5.452191,6.094064,-1.476004,3.181075,8.384374,8.871027,-7.612662,4.838758,9.265709,4.772219,8.338023,-2.427503,-5.052059,0.668489,-2.844028,-4.794435,6.864124,2.276249,-1.902369,0.781028,3.863803,7.390458,-9.270048,-1.609117,6.155488,-1.209747,-4.091785,-1.550268,-8.364572,-3.215823,-2.515069,-6.141580,-6.591354,3.014879,-3.951572,-9.381897,7.865423,2.242234,-4.788660,5.324827,1.382492,7.713430,-9.450490,-7.398947,4.713884,4.894871,6.162101,-0.500749,4.698951,5.598416,-7.763179,2.369975,9.225557,1.155384,8.056825,7.236706,7.039396,-3.820691,-2.820789,-6.116766,7.487342,7.553593,5.743844,-1.858372,-0.523202,-4.873108,-6.579261,-4.353951,-2.855062,3.085780,9.315036,-1.543837,7.445803,-5.299124,3.672636,-5.438482,4.829122,-1.552657,8.194392,3.655354,-3.571437,-8.637227,-5.168003,-1.906167,-0.182740,-9.442618,-4.747309,-0.455648,9.129441,-1.809079,9.270540,2.464511,-3.753830,2.651162,-1.269572,6.571250,-4.977958,8.737440,5.818945,0.653298,-9.614900,0.569919,-9.947887,-2.747872,-2.632558,6.125708,4.199841,-1.069603,-0.532037,9.776457,3.572422,2.469151,-5.373444,-6.433854,-8.815619,-2.661096,2.908936,4.071156,0.250158,6.758577,-5.474832,-9.070233,2.586204,-4.061520,-4.439698,-6.105613,-2.829261,-9.375730,8.737097,-5.355645,-4.821005,-1.586959,-6.047239,-0.159156,6.138097,-0.532996,-9.828419,-9.827817,4.739762,6.372352,-3.531649,7.871629,2.203544,-4.015573,-1.428009,-2.884199,9.542501,-5.241752,-2.693469,0.248344,-5.668294,-1.733946,-4.194811,-8.097102,3.666404,-4.899516,-8.415155,-8.244444,3.618539,-2.647400,-1.134229,-3.100272,8.307962,6.165436,3.402253,4.825696,-6.127647,-2.235579,-2.457299,8.320778,-7.222542,-8.851980,2.788086,-1.909392,0.322918,0.013559,4.096248,6.728328,-7.533643,7.808887,7.521536,-1.853755,-3.869553,6.572129,1.034055,-0.825609,-2.430143,-0.267802,2.638847,-0.386034,9.725144,-3.766537,9.258384,1.938162,8.390560,-5.547377,-7.949579,-9.590604,4.993315,1.757919,-0.266542,3.367072,-8.902227,9.122974,-8.787556,-1.270016,0.267962,6.009349,-3.851433,-0.429835,5.466186,6.345063,7.841461,-4.847536,8.919495,-1.106784,4.910769,-1.065470,3.051511,5.506917,5.591451,-9.035792,8.865354,9.786444,-6.649786,1.913909,-1.154905,2.861452,-5.537566,9.074470,-5.090899,-1.187409,6.757882,1.716576,-0.570262,-1.874245,3.103970,-9.742450,-4.517703,-2.861731,0.697721,-7.591394,-3.212347,-9.718210,9.385977,-0.761211,9.186949,8.670483,2.025699,5.995665,-8.476369,0.029178,-0.656168,-1.005406,-2.169178,-4.783414,-1.584913,2.969773,-2.214881,9.218134,6.886597,9.166234,-1.594795,1.479614,-5.043634,3.636029,4.305795,-3.783720,-9.374648,-2.784792,9.163437,7.454405,-6.501309,5.790414,-0.036327,-5.194989,-8.979700,-1.007488,3.947211,1.177639,-8.824758,-2.823256,3.447377,-3.877927,4.441644,-7.807516,2.534168,-5.203191,2.012341,-3.668741,-4.161459,1.564324,7.200897,-8.516081,-8.376427,-7.505888,-1.515951,-3.142324,1.986989,-3.336471,2.056391,8.238260,-5.612680,-2.229394,9.916384,7.435747,-6.947657,9.261386,-7.015758,-2.829921,7.218143,4.582859,1.621750,0.260061,-5.515803,8.253461,3.045287,-5.501251,-4.053676,6.950412,-1.298151,4.110468,4.312209,-0.799922,-3.533199,-3.375569,3.424710,-4.621571,6.357738,2.663398,0.457371,-5.970385,1.359149,-0.707771,3.058222,-5.200351,-2.666592,-4.863238,-4.620318,0.234890,6.311399,-3.187618,6.589325,4.554908,-5.505878,6.087229,2.222888,-2.034077,-6.519669,-0.984874,-1.931667,1.791341,5.790054,8.096272,-3.407994,-8.920430,-8.175913,-9.485846,3.693211,6.778504,-6.555589,7.640103,-2.265908,8.736278,-8.001863,-5.830029,-7.529967,7.998396,-1.342162,8.960257,8.052344,-2.480320,-0.733049,-6.468297,3.153580,5.357480,-4.914562,0.011183,4.775604,3.116503,0.745419,-8.020699,-4.028748,7.305747,-6.285264,5.963753,-2.500237,-8.103437,1.825602,6.769915,-6.997852,-3.831107,4.033264,8.240755,-8.028498,5.422662,-7.237216,4.376297,7.786807,8.642199,8.582988,-0.715027,9.905996,-9.960763,1.691957,6.320609,4.258644,-3.889851,7.886872,4.134454,-2.417751,8.027728,-2.640577,8.663498,4.192301,-4.140786,-7.063731,1.869859,1.802977,-6.527225,1.705176,-5.371806,5.112197,0.710409,-1.751054,2.619975,0.740827,9.178604,0.599171,-0.683347,-7.789774,-9.499988,2.609178,-5.099916,0.565590,9.969702,-6.185388,9.803524,-4.098412,-0.349842,0.189964,1.364668,0.087765,6.704776,-5.138396,1.711203,-8.241264,0.044337,7.666482,-8.771766,-5.855322,0.145949,7.935203,-2.290553,-0.235995,-6.252183,-7.782256,-7.712528,-0.583647,8.601285,2.133513,2.309533,-4.430134,3.464334,-2.112257,-1.535813,2.929739,1.095058,5.224881,-4.966083,6.482700,0.519815,8.196798,3.883482,2.873622,-2.480799,5.523160,-7.859613,-7.398745,-4.741427,3.291606,9.709303,-6.101006,2.815227,-5.777847,3.483765,-5.189348,-8.096834,5.699923,-0.398933,-0.946695,5.863963,-4.123075,3.316199,-3.940453,-7.318938,-9.604243,-7.794180,-3.614725,-1.248783,-2.861368,-3.540531,3.798154,-5.243354,-7.270843,9.568699,9.563413,9.756002,0.592641,-0.318138,-3.957412,8.424665,-7.271344,9.141847,-9.285719,4.345681,-9.895280,1.265225,-9.437527,-6.981687,-7.487693,9.962038,-1.272979,-2.547834,3.288282,9.648519,3.143996,6.258383,0.078695,-1.121881,-4.964133,-6.079067,-2.900504,-0.555200,5.056824,3.346505,6.920350,5.284001,9.931493,1.593524,-3.984396,-5.141157,0.408094,9.506171,3.485680,-4.306294,7.874321,-9.766217,6.271384,4.542578,2.343031,-6.340263,7.740059,-7.377721,2.281689,-5.037015,6.711021,0.611529,-5.042034,2.111063,9.188803,7.683778,-7.690730,-1.064246,6.290909,-3.580460,-2.236719,4.425850,-6.587094,3.000342,5.050082,2.558678,-0.328222,6.172230,0.039108,-3.791583,4.804679,7.203572,5.404191,8.324959,0.360952,0.178605,-4.252689,-3.713852,6.468347,5.668913,1.620949,8.350038,4.292096,-4.589650,1.406530,0.089944,-2.411988,-4.700272,-2.588148,-5.724576,2.764327,-2.835929,-3.814816,-6.828188,-3.569525,-3.946505,-7.251127,8.927634,3.864464,-2.254613,6.138047,5.520614,-0.132951,7.429822,7.571796,7.969807,-1.205682,-2.928744,-4.486323,-7.454396,-2.248283,-7.558681,-6.409212,3.473134,7.199752,-0.806417,1.479376,-1.497364,6.799350,2.138090,-2.570756,1.509570,-9.943539,5.484963,-7.478801,6.351729,2.571264,8.719265,6.329960,7.012461,-5.340079,8.677260,3.881656,5.446122,-2.145057,3.889062,8.354584,2.157050,-5.410798,-5.941607,-5.522325,-7.809814,3.172352,9.049203,-4.572134,9.519626,-5.121993,-0.332287,2.951256,-4.120384,-1.147112,-4.265631,-5.451409,9.883846,-0.901394,7.998986,8.676718,-9.079879,4.458382,-1.515146,-1.722503,-7.191889,-4.019826,-0.619909,-4.063012,0.514371,-8.519806,8.431503,7.432655,-7.332481,-5.004400,-4.952478,7.500259,8.154871,-5.419644,-6.993037,0.266206,3.844755,2.558499,6.519047,-9.100863,7.383552,-9.976325,1.352519,0.064943,-5.646633,6.841809,-2.273229,1.071524,8.757027,0.243192,8.496807,-8.515670,-8.016195,-5.270900,-5.030567,0.959946,-2.896548,-7.795505,7.686457,7.620295,3.326635,4.531421,6.702260,6.567330,-6.349133,-5.426974,-9.723751,9.133030,-4.272578,-9.391283,-5.155651,-0.166348,-6.488327,4.567495,6.102066,6.443012,8.270117,-2.401761,0.597223,-5.133975,-6.329169,3.220159,7.485885,6.490413,3.748766,-8.244780,2.360042,-6.663524,2.959084,-1.959702,-0.668309,-4.712664,-9.526555,-4.540629,-5.107791,4.617294,2.800999,0.590567,7.689431,-1.415513,9.081671,7.760190,-4.146720,-8.913610,6.685551,-9.897424,-9.124663,2.928053,8.530551,-7.512235,-7.976515,-2.619015,1.805304,3.806160,-5.989103,4.032557,-5.074828,9.083707,-8.232993,3.244604,-2.191364,4.702786,-9.329439,3.047353,-3.868491,8.592964,8.784980,-8.134028,-5.432848,-9.313564,8.260845,-8.123566,-4.003066,-4.463797,6.821853,-6.213019,1.127046,-7.074597,-5.851436,8.823584,1.291102,-7.673157,-5.065712,8.038439,-8.515006,-4.693344,5.033292,8.359738,-7.495913,-9.500023,1.768787,6.739006,-0.752896,-0.037188,4.510071,8.605817,3.879263,3.452109,-7.073633,-2.040754,-0.266064,8.671873,2.245764,7.486412,-6.816364,9.872341,-9.837954,0.361758,-1.524045,-7.490757,1.062428,-5.199870,1.117280,8.851471,4.539232,-7.190678,-1.782654,9.954099,-3.412041,1.993156,3.532675,2.807031,2.139955,-6.721216,-7.955717,7.147800,8.275585,-6.221096,3.621117,-9.200503,2.393564,6.920870,-0.525994,9.718244,9.528756,-7.055814,0.909293,4.159592,-8.225495,-7.512213,-2.407914,-0.078822,-5.528868,-8.421350,-1.389339,-8.407867,4.280118,7.387561,-9.860520,-4.121029,2.745596,-4.994984,-0.769198,1.967378,-5.629863,-9.133889,8.030401,-0.955026,5.390762,-3.482944,3.734521,-9.745289,-1.194769,6.965205,-6.391984,-0.358174,-2.493317,9.036742,-0.738459,1.698908,-9.519260,1.945998,-6.400872,7.222180,-2.590033,-0.360524,-8.339153,-7.119629,-4.135947,-2.951322,-0.575549,5.802502,1.445036,0.375476,1.846554,-9.750489,-2.273169,-5.345213,0.520970,2.909260,8.541252,-4.568778,-0.081828,-9.762348,-8.483489,7.163739,4.850600,0.110817,2.862487,8.459845,8.049383,5.045217,1.570590,-5.746385,6.021750,2.316329,3.766372,3.382105,-1.849023,3.800549,-4.086276,8.484641,0.806546,-8.915761,-1.854705,4.476420,-8.980341,9.418402,-4.177463,-3.419192,1.906744,-5.514424,8.812184,-1.684500,2.872980,-2.400040,9.129489,-5.203541,-9.433761,2.046916,-9.123851,-9.996473,5.039140,-7.085902,-8.631776,-0.425880,-9.655743,-4.865387,-2.054912,-4.558141,-4.403120,8.834939,-6.386834,-6.789209,-0.470311,4.412174,0.840496,0.058373,-1.131598,-2.588150,4.510024,-8.755513,-6.666046,0.783807,-1.679000,-2.945755,5.633433,-0.868629,2.067929,-3.747878,-1.252551,-0.203906,-7.534555,4.764258,-1.308952,8.938649,-9.592332,4.020113,-6.296467,9.111129,-1.364029,-4.266652,2.398006,-9.221629,3.356374,-5.969491,-2.937220,8.706398,8.825317,1.640371,3.796540,9.535683,2.639227,-6.979505,0.283258,-6.147815,8.864675,6.228977,5.573457,-8.348739,0.484661,-5.820932,5.970046,-4.075088,-4.371671,-9.765574,-7.561186,3.464552,1.581227,8.266911,7.370862,-6.322585,-7.965426,4.608839,9.751612,7.341696,6.504055,0.105152,0.235984,4.169548,3.254823,2.737459,1.232780,0.067742,-8.345429,8.942831,-3.832307,7.193474,-3.533209,-3.410977,-6.726179,-0.303259,-3.661552,-7.803713,1.207680,0.797709,-0.863933,-7.047167,-8.336471,-8.363219,-1.107408,-9.897826,2.788256,-0.380820,0.678344,-9.555981,-0.993815,6.969312,-3.311306,-3.380997,9.714682,-4.299871,4.532173,9.048484,7.169180,-8.811272,9.420196,-7.991488,-4.078112,-8.124346,-2.417891,0.841496,9.736830,8.026399,6.451918,7.122015,0.689446,-1.978556,-2.778970,-2.213167,3.262050,-3.246139,-0.173279,0.702203,9.287385,-2.303974,-2.049720,-2.464559,-9.124013,6.589338,0.004250,-3.570159,1.130427,9.582689,-2.500018,1.390019,0.243874,-0.827733,-7.168462,-2.009410,-6.498058,6.904429,2.811073,-6.115536,2.313811,8.254886,0.214757,-3.059820,-1.297342,-6.245800,8.275681,-9.608297,2.861404,-6.199239,-1.998323,3.350241,7.859769,-9.258340,-7.589158,-5.700242,-6.611342,6.007451,4.863217,-4.713959,7.297385,-4.106824,-2.146811,8.398862,-2.740755,-2.331574,1.509899,4.853792,-7.331887,2.288013,-6.867356,3.332524,8.059545,-0.125756,-2.901003,-8.826746,-4.108246,-7.294451,1.437025,-3.415448,-4.188357,-6.846457,4.758992,-6.943120,5.143782,-7.128834,-0.840996,1.579407,-8.245998,-1.250774,-8.964258,6.537013,-8.161596,-1.432627,8.579707,4.839014,4.134888,9.069788,4.855090,-2.553998,5.378231,-5.250968,-7.306220,4.088847,-9.895522,7.224957,-7.718660,0.193739,1.633451,-0.872995,-8.145554,-6.340783,-3.331086,-6.918073,1.367544,-2.715661,-7.440332,-4.869520,-7.842463,0.017442,-2.576192,-7.820589,5.369782,8.385162,0.722330,-0.917420,1.071710,0.055477,-8.590211,6.403476,-6.699956,3.993896,-0.928533,-9.627808,7.778969,7.831190,-7.284411,8.024949,2.938200,-7.525207,-8.279957,1.856454,3.458990,8.826311,-4.138072,-2.473489,0.475663,8.823535,2.058141,-5.568115,-1.515109,-5.971342,2.487880,-4.343793,-1.854142,0.119377,7.944397,-3.932875,1.141372,0.021546,-0.183435,2.983801,6.163969,-5.171406,-6.734905,2.842769,-5.876485,7.802180,0.207049,9.848163,8.534348,3.032202,6.052499,3.901178,3.011638,-3.219707], dtype = "float32")#candidate|11702|(2880,)|const|float32
const_11703 = relay.const([7.134338,-3.350321,-7.722178,9.594448,7.182712,-8.101313,-4.102448,-5.543087,2.969356,-1.912687,-4.460827,1.930261,-4.308450,-8.087447,-8.224888,6.135284,-9.878831,1.372995,-6.086760,2.459264,6.023064,-9.390757,4.529280,4.718076,-0.303698,2.026867,3.313447,-2.804672,-5.160926,0.316402,-9.121278,-8.843591,-9.508013,1.729446,-2.731377,-1.603775,-5.784121,3.196288,9.895888,6.357003,4.650676,-2.577431,9.020588,-3.114138,7.189017,-7.586912,9.461751,1.840239,-4.613388,-6.643681,5.905618,8.108107,3.073418,4.785192,7.585391,-1.527873,0.194232,9.645825,4.676048,-4.602336,1.954645,-2.825837,9.563629,-3.005322,3.622097,9.333371,-5.441959,-7.661827,7.547535,-0.442644,-1.789789,6.042885,-7.280537,-1.910018,0.275270,-7.589751,9.414897,3.406896,-4.607642,7.596023,-0.135928,-2.578269,3.678091,-5.772786,-1.426244,7.575410,3.136019,8.779221,-9.979096,-4.687463,-4.424655,-3.581078,5.995066,3.866315,-9.735928,2.302377,0.468303,7.667957,6.931155,6.026307,-8.704055,-9.305662,-8.783021,9.651467,-7.209225,-4.638452,6.688709,-5.784123,-6.963880,-6.880283,-5.020531,8.719501,-7.747540,-9.948485,-7.755911,6.010797,6.103445,-9.975768,4.683016,-0.436286,8.049389,1.727955,9.656876,-1.586126,4.279153,-2.304981,-1.689296,0.918989,-6.189187,-7.612608,6.288336,-3.798756,-0.065924,-3.423717,-6.879610,3.543753,2.590513,-4.326479,-4.714084,-1.712869,-1.561119,-7.557073,-5.147864,8.149986,0.075157,3.368523,3.933130,5.146678,7.933183,-7.683997,-2.014288,3.507295,-8.771137,6.269198,-7.247627,-6.229275,-4.425004,-3.102877,-0.729176,-8.902178,7.645704,-5.455296,2.709070,-8.670040,-7.402369,-1.070515,-1.154074,-7.488937,-1.126090,-7.807804,-4.702632,2.517809,7.879737,7.729399,9.424580,1.281091,-5.330909,4.859316,-1.104703,-7.297627,-8.232230,5.608237,-2.485622,6.729025,2.116353,-9.499470,-4.414910,1.583050,4.803430,5.673802,-0.496032,6.618468,6.456032,-4.308156,7.054720,-6.582600,0.087364,-9.827858,8.138143,-0.136986,4.148206,-3.704726,-3.258790,9.490631,7.252785,-2.760234,-4.868824,-0.243406,5.504619,1.042238,3.930543,-9.488963,7.068432,-1.810068,4.125056,-3.833036,2.644802,-4.997582,-8.490646,3.315990,5.684827,7.551889,-4.243638,5.420753,-2.699618,-8.338677,-8.669349,-8.200622,1.245661,-9.673209,-1.467301,-1.581692,-6.478331,4.124723,-2.310770,-8.514910,3.527760,0.091496,8.817285,2.010321,3.174515,8.988217,-9.297029,-2.901285,-4.196212,-3.727436,1.671065,3.538908,-7.285303,-6.017660,0.860653,-2.906982,-1.859338,-0.157420,-8.482651,3.907256,0.050721,2.364863,-9.177814,-2.728712,-7.943393,1.529143,4.827054,9.597957,-1.495371,-4.695149,-0.763002,-3.702214,7.060853,-4.482600,-5.612807,7.246268,-7.420689,8.092567,-0.152076,-5.134984,6.765169,-1.213770,-9.202027,-8.480963,5.624587,-4.686411,6.986292,-3.411036,-4.398935,-5.933367,-4.350414,-5.152495,-9.073552,-7.865494,8.308695,3.172812,-8.750740,8.450533,-1.746950,0.110741,2.200677,3.273406,-1.132863,3.088026,9.872397,7.964371,8.604946,-6.935075,-9.565177,2.566541,4.158543,-5.210190,-4.740378,-2.637799,2.668765,4.000750,-5.105965,2.562605,-4.069681,8.535943,-5.398284,-7.326278,-7.822944,8.485098,9.985789,9.957388,4.862491,-5.345852,6.529823,-1.305138,5.863269,7.366073,3.076526,-4.857834,6.192265,4.563554,4.796466,-8.762683,-0.389116,-5.726879,-7.366366,1.947469,7.997127,2.988773,-0.448380,4.081746,3.968591,4.195936,6.023501,2.661223,9.100423,-1.732047,-2.368070,9.862356,-9.402066,-7.511496,0.093173,-2.966357,5.613552,4.033763,-1.838578,9.209014,-6.324071,-1.245350,5.662690,-1.504043,-2.861820,2.203604,5.224504,5.604188,-9.947437,-1.523437,0.448139,-6.405861,3.950559,2.516295,-7.846187,6.662472,8.784916,-7.297529,8.774905,-1.962278,3.583005,-2.384585,-0.529003,-6.697225,9.250054,-6.279287,4.161080,-8.113322,-9.806462,-3.036060,-3.306375,2.158489,6.280643,-2.195564,2.332768,-8.481423,-2.459976,6.496472,5.817748,7.322416,1.615498,2.622325,-3.535771,5.743525,0.332353,4.915760,8.045056,-8.795840,-3.041895,-9.398373,4.971817,-4.959381,7.649802,-0.406028,7.142492,-6.193993,5.780064,-6.247519,3.958857,-0.101106,6.954508,-5.409167,0.779614,-8.040915,-2.075732,6.407434,6.011043,9.967367,0.546858,2.804356,-4.557853,6.450532,-5.595612,9.576670,1.254939,-9.684588,-1.397752,-4.692254,2.710000,3.370136,9.900442,3.460838,0.962171,3.007275,-8.697086,8.411527,-6.084201,-4.392069,-2.527870,-6.948362,-3.415110,6.971066,-0.369032,-4.316745,-3.819867,4.772224,-4.667496,-0.608576,3.941460,-9.845690,6.075035,-8.483806,9.934868,-9.474890,6.959572,7.350817,4.782917,-2.384685,-9.814985,-8.871467,-4.098226,-8.377603,-3.171438,-4.271038,3.722672,-1.241838,2.211059,-7.107966,1.005448,-9.039862,-2.957594,-2.814108,-3.902534,5.724644,8.400067,0.134785,2.488986,-8.815927,7.341746,3.061972,-9.209213,4.959866,8.195440,-4.344500,-4.924537,2.623114,-6.013704,-1.628710,-6.361056,-5.603038,9.578044,4.113022,6.052699,6.720006,0.703173,9.646171,-7.713848,5.306041,0.336736,-7.123281,-2.628994,-5.031619,-0.943125,-9.297587,-3.308222,-3.680412,-9.487171,-0.675073,-7.447593,-1.761145,-4.576878,0.120013,-1.089501,-9.519187,-9.642617,5.891864,-6.763113,2.767229,2.038164,6.789873,-8.659419,6.993207,-2.393697,5.978057,1.036085,-3.851052,5.350048,-1.311691,-4.167156,6.186259,-7.926775,9.540569,-0.536669,8.122645,-0.906473,3.286096,-8.286168,-6.998623,-3.078174,0.611193,5.504786,-4.713591,0.644083,8.085259,7.052004,-1.956667,3.795803,7.537127,8.326554,8.913226,3.844584,-0.507123,-1.534312,-9.681120,-7.852868,-8.208001,7.874974,7.824993,-1.261486,-8.910431,5.592383,2.037687,5.469123,9.354457,8.449081,-7.652681,0.232973,-6.088749,1.997598,5.878603,5.027009,-3.577629,-1.458657,7.647933,-7.191036,-5.325122,0.425176,-9.727843,-5.132891,5.752757,5.551602,3.525440,-7.703057,-5.120677,-6.406194,-1.407926,2.509535,5.615635,-2.459403,-7.818858,-3.173790,-0.779785,-1.555203,-6.242649,-3.503175,-5.827503,-5.722085,2.072513,-8.874272,-2.293027,1.940593,-0.790247,5.331289,-6.160492,-5.098715,-7.408612,3.967919,-7.923577,-0.988739,8.975078,-1.235863,-3.490172,1.602241,-8.586636,8.552449,-2.809630,1.439336,6.625612,-1.288447,-3.912489,4.067991,-3.060909], dtype = "float32")#candidate|11703|(630,)|const|float32
call_11701 = relay.TupleGetItem(func_5833_call(relay.reshape(const_11702.astype('float32'), [2, 1440]), relay.reshape(var_11698.astype('float32'), [715,]), relay.reshape(call_11696.astype('int32'), [81,]), relay.reshape(const_11703.astype('float32'), [630,]), ), 1)
call_11704 = relay.TupleGetItem(func_5838_call(relay.reshape(const_11702.astype('float32'), [2, 1440]), relay.reshape(var_11698.astype('float32'), [715,]), relay.reshape(call_11696.astype('int32'), [81,]), relay.reshape(const_11703.astype('float32'), [630,]), ), 1)
func_4787_call = mod.get_global_var('func_4787')
func_4790_call = mutated_mod.get_global_var('func_4790')
call_11718 = relay.TupleGetItem(func_4787_call(relay.reshape(call_11691.astype('bool'), [385,])), 2)
call_11719 = relay.TupleGetItem(func_4790_call(relay.reshape(call_11691.astype('bool'), [385,])), 2)
func_9156_call = mod.get_global_var('func_9156')
func_9158_call = mutated_mod.get_global_var('func_9158')
call_11734 = relay.TupleGetItem(func_9156_call(), 0)
call_11735 = relay.TupleGetItem(func_9158_call(), 0)
output = relay.Tuple([call_11626,call_11676,call_11691,call_11696,var_11697,var_11698,const_11699,call_11701,const_11702,const_11703,call_11718,call_11734,])
output2 = relay.Tuple([call_11627,call_11677,call_11692,call_11700,var_11697,var_11698,const_11699,call_11704,const_11702,const_11703,call_11719,call_11735,])
func_11737 = relay.Function([var_11697,var_11698,], output)
mod['func_11737'] = func_11737
mod = relay.transform.InferType()(mod)
mutated_mod['func_11737'] = func_11737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11737_call = mutated_mod.get_global_var('func_11737')
var_11739 = relay.var("var_11739", dtype = "int32", shape = (936,))#candidate|11739|(936,)|var|int32
var_11740 = relay.var("var_11740", dtype = "float32", shape = (715,))#candidate|11740|(715,)|var|float32
call_11738 = func_11737_call(var_11739,var_11740,)
output = call_11738
func_11741 = relay.Function([var_11739,var_11740,], output)
mutated_mod['func_11741'] = func_11741
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11750 = relay.var("var_11750", dtype = "float64", shape = (5, 10, 1))#candidate|11750|(5, 10, 1)|var|float64
uop_11751 = relay.asinh(var_11750.astype('float64')) # shape=(5, 10, 1)
output = uop_11751
output2 = uop_11751
func_11756 = relay.Function([var_11750,], output)
mod['func_11756'] = func_11756
mod = relay.transform.InferType()(mod)
mutated_mod['func_11756'] = func_11756
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11757 = relay.var("var_11757", dtype = "float64", shape = (5, 10, 1))#candidate|11757|(5, 10, 1)|var|float64
func_11756_call = mutated_mod.get_global_var('func_11756')
call_11758 = func_11756_call(var_11757)
output = call_11758
func_11759 = relay.Function([var_11757], output)
mutated_mod['func_11759'] = func_11759
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11781 = relay.const([[[6],[3],[-4],[9]],[[5],[8],[7],[2]],[[1],[10],[4],[-5]],[[7],[-3],[-10],[6]],[[-8],[6],[-2],[-5]],[[-10],[-8],[-4],[3]],[[-8],[1],[7],[10]],[[-1],[10],[-3],[-9]],[[-3],[-3],[10],[1]],[[3],[-1],[10],[6]]], dtype = "int32")#candidate|11781|(10, 4, 1)|const|int32
var_11782 = relay.var("var_11782", dtype = "int32", shape = (10, 4, 2))#candidate|11782|(10, 4, 2)|var|int32
bop_11783 = relay.bitwise_xor(const_11781.astype('int32'), var_11782.astype('int32')) # shape=(10, 4, 2)
output = relay.Tuple([bop_11783,])
output2 = relay.Tuple([bop_11783,])
func_11801 = relay.Function([var_11782,], output)
mod['func_11801'] = func_11801
mod = relay.transform.InferType()(mod)
mutated_mod['func_11801'] = func_11801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11802 = relay.var("var_11802", dtype = "int32", shape = (10, 4, 2))#candidate|11802|(10, 4, 2)|var|int32
func_11801_call = mutated_mod.get_global_var('func_11801')
call_11803 = func_11801_call(var_11802)
output = call_11803
func_11804 = relay.Function([var_11802], output)
mutated_mod['func_11804'] = func_11804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11893 = relay.var("var_11893", dtype = "float32", shape = (2, 14, 4))#candidate|11893|(2, 14, 4)|var|float32
uop_11894 = relay.acos(var_11893.astype('float32')) # shape=(2, 14, 4)
output = relay.Tuple([uop_11894,])
output2 = relay.Tuple([uop_11894,])
func_11896 = relay.Function([var_11893,], output)
mod['func_11896'] = func_11896
mod = relay.transform.InferType()(mod)
mutated_mod['func_11896'] = func_11896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11897 = relay.var("var_11897", dtype = "float32", shape = (2, 14, 4))#candidate|11897|(2, 14, 4)|var|float32
func_11896_call = mutated_mod.get_global_var('func_11896')
call_11898 = func_11896_call(var_11897)
output = call_11898
func_11899 = relay.Function([var_11897], output)
mutated_mod['func_11899'] = func_11899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10254_call = mod.get_global_var('func_10254')
func_10255_call = mutated_mod.get_global_var('func_10255')
call_11955 = relay.TupleGetItem(func_10254_call(), 0)
call_11956 = relay.TupleGetItem(func_10255_call(), 0)
func_10739_call = mod.get_global_var('func_10739')
func_10742_call = mutated_mod.get_global_var('func_10742')
var_11961 = relay.var("var_11961", dtype = "bool", shape = (385,))#candidate|11961|(385,)|var|bool
var_11962 = relay.var("var_11962", dtype = "int64", shape = (6, 20))#candidate|11962|(6, 20)|var|int64
call_11960 = relay.TupleGetItem(func_10739_call(relay.reshape(var_11961.astype('bool'), [385,]), relay.reshape(var_11962.astype('int64'), [120, 1]), ), 3)
call_11963 = relay.TupleGetItem(func_10742_call(relay.reshape(var_11961.astype('bool'), [385,]), relay.reshape(var_11962.astype('int64'), [120, 1]), ), 3)
func_4787_call = mod.get_global_var('func_4787')
func_4790_call = mutated_mod.get_global_var('func_4790')
call_11976 = relay.TupleGetItem(func_4787_call(relay.reshape(var_11961.astype('bool'), [385,])), 2)
call_11977 = relay.TupleGetItem(func_4790_call(relay.reshape(var_11961.astype('bool'), [385,])), 2)
output = relay.Tuple([call_11955,call_11960,var_11961,var_11962,call_11976,])
output2 = relay.Tuple([call_11956,call_11963,var_11961,var_11962,call_11977,])
func_11982 = relay.Function([var_11961,var_11962,], output)
mod['func_11982'] = func_11982
mod = relay.transform.InferType()(mod)
var_11983 = relay.var("var_11983", dtype = "bool", shape = (385,))#candidate|11983|(385,)|var|bool
var_11984 = relay.var("var_11984", dtype = "int64", shape = (6, 20))#candidate|11984|(6, 20)|var|int64
output = func_11982(var_11983,var_11984,)
func_11985 = relay.Function([var_11983,var_11984,], output)
mutated_mod['func_11985'] = func_11985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9567_call = mod.get_global_var('func_9567')
func_9569_call = mutated_mod.get_global_var('func_9569')
call_11990 = relay.TupleGetItem(func_9567_call(), 1)
call_11991 = relay.TupleGetItem(func_9569_call(), 1)
func_7740_call = mod.get_global_var('func_7740')
func_7742_call = mutated_mod.get_global_var('func_7742')
call_11992 = relay.TupleGetItem(func_7740_call(), 0)
call_11993 = relay.TupleGetItem(func_7742_call(), 0)
output = relay.Tuple([call_11990,call_11992,])
output2 = relay.Tuple([call_11991,call_11993,])
func_11999 = relay.Function([], output)
mod['func_11999'] = func_11999
mod = relay.transform.InferType()(mod)
mutated_mod['func_11999'] = func_11999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11999_call = mutated_mod.get_global_var('func_11999')
call_12000 = func_11999_call()
output = call_12000
func_12001 = relay.Function([], output)
mutated_mod['func_12001'] = func_12001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_12170 = relay.TupleGetItem(func_4671_call(), 0)
call_12171 = relay.TupleGetItem(func_4672_call(), 0)
func_7064_call = mod.get_global_var('func_7064')
func_7070_call = mutated_mod.get_global_var('func_7070')
var_12196 = relay.var("var_12196", dtype = "bool", shape = ())#candidate|12196|()|var|bool
const_12197 = relay.const([1.265258,-3.290487,-6.230763,-4.455180,6.556783,-6.398613,-1.101933,6.895457,4.537760,8.404096,3.908354,8.574295,-5.945889,-6.911861,-3.638218,7.348319,-5.649647,-3.879604,5.063113,6.812740,8.568929,-3.053210,5.535502,-2.403831,3.827409,-0.300804,-6.689214,-1.609581,8.988920,-6.773259,-7.465515,7.927449,0.876626,8.834664,-1.833167,1.105501,-5.976610,2.311348,-5.393605,-4.791822,4.451269,-5.029897,3.174608,-4.407794,-2.840225,-7.198206,8.789753,8.181861,2.248216,0.505325,-4.689923,4.127576,-7.224506,-5.557245,-5.036063,-9.484616,9.825266,2.826974,1.206078,9.655606,-7.131286,-0.249524,-4.372953,1.628072,-7.658081,6.715608,0.484759,1.144637,-0.620190,-5.411752,-4.153828,-9.889817,-2.282763,-5.963607,-2.840760,0.015894,8.620018,-8.409173,0.901888,4.169680,-8.525210,-9.094673,-7.508654,6.455197,4.795417,8.852723,-9.300852,6.598245,-0.629049,-2.018889,-5.092688,4.146070,9.141715,7.647985,1.159349,-2.392450,4.339507,-2.947201,-4.441999,-6.412732,4.703081,5.350707,-2.193248,-7.203197,2.960003,9.111362,-3.174377,8.003419,-4.329968,5.398358,-0.082844,7.804173,-5.167857,1.322825,1.391381,1.777998,4.410483,-8.505244,1.634530,-4.934430,9.786409,-2.445656,2.211126,6.844667,-1.375728,5.235355,-7.850086,3.669612,-4.460832,2.263530,-3.529800,9.556868,2.259683,7.790299,-1.672965,6.791821,2.149335,-1.609665,-3.359859,-0.412066,-5.144699,2.425253,-4.066139,7.534534,4.653805,-9.897969,4.070859,6.600964,9.768027,-1.759427,0.536144,8.956687,0.848161,3.091631,0.922951,1.583826,5.878779,-4.978780,4.170299,9.500173,-4.216652,-0.881054,0.840383,9.950437,1.985492,-6.076584,2.086329,8.535227,9.816192,-5.782238,0.128606,-1.214507,-4.961328,-0.344299,1.034489,-9.616819,-5.970964,0.437697,6.914821,-3.750875,-3.835310,7.317731,9.402694,4.374958,1.019118,3.117416,8.078377,0.615753,4.877971,1.715250,9.016609,-7.639216,-2.690597,4.615305,-4.844791,-4.884258,9.507574,4.310753,5.322646,4.578740,-9.720260,4.755677,3.280523,-3.891083,-5.966174,6.437003,5.642854,1.213306,6.252739,5.690883,7.618400,6.304445,4.385090,5.467676,0.080013,9.859297,3.381412,7.110003,-8.948816,1.171596,4.760577,-5.251299,8.039251,-8.453552,0.409801,-6.174287,-1.231144,1.577123,-7.443494,-2.855720,1.923666,-9.606491,-0.069244,1.029638,8.171899,5.944450,4.030462,5.374918,-2.021544,-1.942971,-0.497991,-3.629709,-0.312009,-3.779283,-5.463338,-9.245058,2.607451,-0.496498,-2.422390,-0.530154,1.515625,-5.731922,9.055287,5.688744,6.506819,6.756631,-4.949789,-4.501479,5.920236,-0.464910,4.105549,-1.810561,6.405566,-5.064774,-1.995072,3.773877,3.549360,5.553204,9.435751,-3.810115,-6.305725,-7.837117,2.214353,9.371651,-4.436084,-7.946133,-7.502456,-3.335187,6.610129,7.662941,4.344425,1.986532,-3.866004,8.343731,0.824305,-3.939080,-5.788959,0.126326,-5.297660,-6.320744,-6.549538,-3.907471,4.665963,-2.604603,-5.590909,3.567341,-3.944575,-0.466213,9.732137,-9.421261,8.389599,-9.504105,-5.935095,4.340311,-1.712345,8.136910,-9.735804,4.167072,-5.035190,-6.501759,7.185432,-4.602898,8.587916,-1.094117,-1.330414,7.269053,8.100665,5.649510,4.406700,-8.765491,7.674832,-8.789628,-9.542113,8.056830,3.515156,0.264123,7.724813,-8.648243,-2.540487,3.440358,-5.024138,-9.378269,-6.267214,7.658414,-1.695438,6.812835,3.965138,4.841353,6.446978,-7.207080,-0.827406,9.517542,9.219461,-3.936297,-9.484680,-1.976875,8.889387,5.861361,1.875159,2.245617,-8.902149,7.517674,3.424898,4.681704,1.097731,5.374801,5.395750,-6.547755,7.620070,-6.506782,-0.552595,-2.586380,2.719417,-9.243925,-4.168861,-4.475826,-4.904187,-4.094792,-5.565218,8.839375,2.320176,-4.034689,1.194805,8.277705,3.454842,1.023128,-7.512080,9.874670,2.325487,-5.157542,-0.963868,-4.181906,-1.881439,-5.764851,1.006540,3.783930,-4.144436,6.501606,-3.682540,-7.396542,3.430440,2.507426,1.160363,0.278619,-3.509594,-3.907610,7.042524,-8.119207,6.698520,-1.646699,-9.600755,3.760251,9.983447,-9.342518,7.972858,-5.909303,-6.902300,6.659166,-9.165332,-1.403525,-1.960475,5.143267,-5.393775,-7.286617,-2.437875,-6.585784,-4.440319,-8.375141,-2.482500,3.060973,8.916571,-5.145955,0.316900,-0.423709,9.517605,9.729881,4.698476,6.024767,-9.725730,-9.922235,-5.940510,6.773323,-5.756566,2.155706,-9.924596,4.239441,-0.092445,-5.835690,4.711289,1.334017,2.317383,-9.044514,-6.879089,-2.944475,6.223087,6.809395,4.428191,-4.688367,-1.385565,8.269568,-6.077012,6.468940,-4.669034,1.457733,-6.217258,-4.321859,3.132484,-1.217847,-8.761406,-0.529072,0.341192,-7.924699,-6.493182,8.464072,-0.968043,5.403159,7.478256,7.585223,-9.670206,8.159468,5.290549,1.902587,-5.283990,-1.975827,-3.095778,6.245131,5.807812,7.903362,-9.864228,-0.074170,8.581948,-9.262823,-3.241843,-6.630545,-2.479236,5.986885,-4.238842,-5.802291,7.032662,5.283612,4.002421,0.457903,-2.601445,-4.448765,8.829889,8.753878,-3.322337,3.740086,7.850462,-9.291867,9.302075,-1.263234,-3.232400,3.095570,2.636043,7.230040,0.780708,0.751358,9.285063,-0.515841,5.092387,2.370596,6.338462,-0.510429,2.360785,-9.411100,3.763916,-0.169263,4.042102,1.405798,-9.147246,6.448816,1.023939,-2.464687,-2.965079,-9.446676,-1.168431,-5.647544,-1.058391,7.519530,9.771436,1.050686,-1.981680,-1.567001,8.865066,-2.128063,-4.757836,2.089523,2.437787,0.562845,-5.410965,5.534401,2.435665,5.133028,-4.599568,9.089696,-9.996777,-2.364875,-5.414302,5.873544,-7.211491,-0.110053,3.326257,9.229057,2.579463,0.137667,-2.154035,-7.511642,-9.951088,1.182872,-6.622173,-2.544652,1.932462,0.612596,3.938970,9.738731,8.921805,-4.470787,4.525421,1.099632,-8.505114,8.697572,7.207109,6.209144,6.861842,-2.396926,6.010348,-3.156319,-8.269419,9.682509,-1.901332,0.338815,-9.895642,3.654556,6.210310,-7.509542,4.995527,-7.908184,7.481026,-4.476085,8.560501,3.815396,6.575839,4.520599,5.110237,1.449905,-0.284978,8.689555,-4.123685,-6.252599,9.512607,-0.691758,-8.509364,3.625396,-7.970996,-5.923319,2.826809,-6.913441,-3.756813,-2.637417,-0.600034,7.882038,-9.242490,4.529342,6.422919,9.723279,-1.762140,3.569367,-8.833184,5.255147,-1.901374,-3.936204,3.597774,-7.374101,7.993269,2.472475,-8.119003,-9.382258,-8.362970,-9.995566,1.359521,-3.266509,3.842539,2.511170,9.981261,-8.777466,-9.680673,2.203000,6.153005,9.160552,-5.961454,5.104126,-5.842690,2.845190,4.446411,-7.417897,1.013252,9.112008,8.062884,8.790910,9.090662,-7.143955,-9.595936,7.842837,-5.533561,-6.372712,4.349173,3.999457,1.296961,-9.070329,-9.943465,-0.402965,-3.389471,-4.902238,-9.728712,-5.620190,4.343444,8.466275,-2.391469,-3.623986,-0.493081,3.504933,-2.845686,5.566092,6.358488,-1.168231,-8.582773,-7.752480,-4.611718,-0.944921,-6.597331,-1.204206,-2.760825,4.212958,-9.491525,7.366127,4.195290,8.496362,4.771267,5.726452,-9.978992,7.123713,-3.976118,2.894608,-9.965684,8.458332,-0.975590,5.911147,-1.808977,0.250345,-3.904305,2.244484,2.281218,2.291684,4.095293,-1.211554,-4.326971,-3.985306,9.624541,-0.968008,-8.714904,-9.078072,9.827463,0.681729,-6.924324], dtype = "float32")#candidate|12197|(715,)|const|float32
const_12198 = relay.const([10,1,6,8,5,8,4,-2,-9,-4,1,-2,8,-3,9,-8,7,-6,-7,2,-10,3,-8,-4,3,-8,9,9,8,-4,-9,3,2,-9,-8,3,1,-1,-1,8,2,-8,5,-10,-9,-7,-7,-4,-2,7,6,-7,6,-8,2,10,-9,6,-4,-5,9,5,4,4,-4,5,9,-7,-9,-1,-8,-6,-9,-2,-9,10,-1,-5,-2,-1,7], dtype = "int32")#candidate|12198|(81,)|const|int32
var_12199 = relay.var("var_12199", dtype = "int8", shape = (75,))#candidate|12199|(75,)|var|int8
call_12195 = relay.TupleGetItem(func_7064_call(relay.reshape(var_12196.astype('bool'), []), relay.reshape(const_12197.astype('float32'), [715,]), relay.reshape(const_12198.astype('int32'), [81,]), relay.reshape(var_12199.astype('int8'), [1, 75]), ), 5)
call_12200 = relay.TupleGetItem(func_7070_call(relay.reshape(var_12196.astype('bool'), []), relay.reshape(const_12197.astype('float32'), [715,]), relay.reshape(const_12198.astype('int32'), [81,]), relay.reshape(var_12199.astype('int8'), [1, 75]), ), 5)
output = relay.Tuple([call_12170,call_12195,var_12196,const_12197,const_12198,var_12199,])
output2 = relay.Tuple([call_12171,call_12200,var_12196,const_12197,const_12198,var_12199,])
func_12201 = relay.Function([var_12196,var_12199,], output)
mod['func_12201'] = func_12201
mod = relay.transform.InferType()(mod)
var_12202 = relay.var("var_12202", dtype = "bool", shape = ())#candidate|12202|()|var|bool
var_12203 = relay.var("var_12203", dtype = "int8", shape = (75,))#candidate|12203|(75,)|var|int8
output = func_12201(var_12202,var_12203,)
func_12204 = relay.Function([var_12202,var_12203,], output)
mutated_mod['func_12204'] = func_12204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8331_call = mod.get_global_var('func_8331')
func_8332_call = mutated_mod.get_global_var('func_8332')
call_12228 = func_8331_call()
call_12229 = func_8331_call()
output = relay.Tuple([call_12228,])
output2 = relay.Tuple([call_12229,])
func_12241 = relay.Function([], output)
mod['func_12241'] = func_12241
mod = relay.transform.InferType()(mod)
output = func_12241()
func_12242 = relay.Function([], output)
mutated_mod['func_12242'] = func_12242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11448_call = mod.get_global_var('func_11448')
func_11450_call = mutated_mod.get_global_var('func_11450')
call_12252 = func_11448_call()
call_12253 = func_11448_call()
output = relay.Tuple([call_12252,])
output2 = relay.Tuple([call_12253,])
func_12261 = relay.Function([], output)
mod['func_12261'] = func_12261
mod = relay.transform.InferType()(mod)
output = func_12261()
func_12262 = relay.Function([], output)
mutated_mod['func_12262'] = func_12262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11581_call = mod.get_global_var('func_11581')
func_11582_call = mutated_mod.get_global_var('func_11582')
call_12280 = func_11581_call()
call_12281 = func_11581_call()
func_11616_call = mod.get_global_var('func_11616')
func_11622_call = mutated_mod.get_global_var('func_11622')
var_12287 = relay.var("var_12287", dtype = "float64", shape = (84,))#candidate|12287|(84,)|var|float64
const_12288 = relay.const([[-10,3,-2,4,-10,-9,6,9,9,6,-6,-10,-8,-2,6,2,-2,9,-7,-8,-2,4,-4,-8,6,8,10,8,5,-2],[9,9,10,7,-1,-6,1,-2,2,10,6,1,4,-4,1,-1,10,2,-6,-9,6,-9,-5,2,5,-7,-1,-8,8,-5],[-8,9,-4,9,-2,6,-4,-4,10,-6,1,-7,-2,7,-7,-8,7,-4,-10,3,-3,-9,8,6,3,-2,-7,-5,3,10],[-4,-4,8,4,-3,10,-7,-3,-6,2,10,2,-4,6,-10,-5,7,-5,-9,2,5,-6,-3,-9,7,-6,7,6,-8,-7],[1,1,5,-2,7,4,6,-6,10,-7,7,8,5,5,10,-2,-6,-8,10,-5,6,9,-1,2,-2,-2,4,5,4,3],[-2,5,-7,-8,7,-4,-3,4,1,9,4,-2,-1,-10,-7,-9,7,6,10,-2,7,9,-2,6,-8,-7,-6,3,-6,-2],[-5,1,-8,-9,-2,5,-9,-1,-7,6,-2,10,-2,5,5,2,-10,-3,1,-7,4,-4,4,6,2,9,-5,-4,-1,4],[6,-7,10,-5,3,-5,3,2,5,-1,9,3,-8,-10,5,6,-1,-2,-4,-5,-10,-5,-2,-2,-4,5,4,9,6,2],[3,-7,-10,7,-5,-2,3,-7,6,-3,2,-6,-8,8,-4,9,8,-4,-4,-4,-3,3,-6,2,-8,6,5,-8,-9,-8],[9,-10,3,5,5,6,6,6,10,7,3,7,5,2,4,-7,-9,-7,-1,2,2,3,-9,-1,7,6,9,-1,-1,-8],[-4,7,2,-8,6,10,-1,-7,4,-9,6,-2,-9,1,5,-4,-6,4,4,-2,5,-2,7,-7,9,-1,-1,2,-5,1],[-6,-10,-7,2,-8,6,8,-10,-7,-3,2,1,-6,-5,-8,4,-3,-8,-1,-4,7,-2,7,-10,-8,-1,9,-4,-7,-8]], dtype = "uint16")#candidate|12288|(12, 30)|const|uint16
const_12289 = relay.const([-10,-8,-5,-9,8,8,-10,4,9,3,4,2,-6,9,3,-8,10,-1,5,-3,-5,6,8,-3,4,7,-5,8,-7,7,-4,-4,1,9,-5,-2,3,-6,-10,8,-5,1,-5,5,-7,5,-7,6,-4,7,-7,-2,7,-3,-8,-10,-5,5,2,-3,2,10,7,-9,-3,10,7,2,1,10,6,2,-1,-3,-7,-1,6,-8,9,4,6,-4,8,-9,-1,8,-9,9,5,4,-10,-1,-8,9,-8,1,-9,-9,1,7,6,-9,6,-6,10,3,7,-8,4,-4,2,-8,-10,-9,-6,-3,4,9,8,10,-7,1,8,-3,-7,-7,-2,-10,-6,3,9,-4,6,2,-1,5,5,4,-3,10,-1,9,-3,-8,-1,-1,-9,-3,10,-2,-8,-7,-2,8,5,7,4,3,-6,6,-6,-10,-2,1,-8,3,9,-9,-10,-6,5,-4,9,6,-10,5,-9,-2,-7,3,5,1,5,-5,-7,1,-4,10,-4,-1,9,4,-2,-9,7,-4,7,6,-5,6,-2,3,3,1,10,-6,9,-4,-4,10,4,-6,1,-10,5,-8,4,4,5,-7,-7,-3,-2,-7,-10], dtype = "int8")#candidate|12289|(225,)|const|int8
var_12290 = relay.var("var_12290", dtype = "float32", shape = (715,))#candidate|12290|(715,)|var|float32
call_12286 = relay.TupleGetItem(func_11616_call(relay.reshape(var_12287.astype('float64'), [12, 1, 7]), relay.reshape(const_12288.astype('uint16'), [360,]), relay.reshape(const_12289.astype('int8'), [225,]), relay.reshape(var_12290.astype('float32'), [715,]), ), 2)
call_12291 = relay.TupleGetItem(func_11622_call(relay.reshape(var_12287.astype('float64'), [12, 1, 7]), relay.reshape(const_12288.astype('uint16'), [360,]), relay.reshape(const_12289.astype('int8'), [225,]), relay.reshape(var_12290.astype('float32'), [715,]), ), 2)
uop_12292 = relay.rsqrt(const_12288.astype('float64')) # shape=(12, 30)
bop_12298 = relay.greater_equal(uop_12292.astype('bool'), relay.reshape(const_12288.astype('bool'), relay.shape_of(uop_12292))) # shape=(12, 30)
func_10946_call = mod.get_global_var('func_10946')
func_10947_call = mutated_mod.get_global_var('func_10947')
call_12302 = relay.TupleGetItem(func_10946_call(), 0)
call_12303 = relay.TupleGetItem(func_10947_call(), 0)
func_7789_call = mod.get_global_var('func_7789')
func_7790_call = mutated_mod.get_global_var('func_7790')
call_12306 = relay.TupleGetItem(func_7789_call(), 3)
call_12307 = relay.TupleGetItem(func_7790_call(), 3)
output = relay.Tuple([call_12280,call_12286,var_12287,const_12289,var_12290,bop_12298,call_12302,call_12306,])
output2 = relay.Tuple([call_12281,call_12291,var_12287,const_12289,var_12290,bop_12298,call_12303,call_12307,])
func_12309 = relay.Function([var_12287,var_12290,], output)
mod['func_12309'] = func_12309
mod = relay.transform.InferType()(mod)
var_12310 = relay.var("var_12310", dtype = "float64", shape = (84,))#candidate|12310|(84,)|var|float64
var_12311 = relay.var("var_12311", dtype = "float32", shape = (715,))#candidate|12311|(715,)|var|float32
output = func_12309(var_12310,var_12311,)
func_12312 = relay.Function([var_12310,var_12311,], output)
mutated_mod['func_12312'] = func_12312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11071_call = mod.get_global_var('func_11071')
func_11072_call = mutated_mod.get_global_var('func_11072')
call_12365 = relay.TupleGetItem(func_11071_call(), 0)
call_12366 = relay.TupleGetItem(func_11072_call(), 0)
output = relay.Tuple([call_12365,])
output2 = relay.Tuple([call_12366,])
func_12372 = relay.Function([], output)
mod['func_12372'] = func_12372
mod = relay.transform.InferType()(mod)
output = func_12372()
func_12373 = relay.Function([], output)
mutated_mod['func_12373'] = func_12373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10254_call = mod.get_global_var('func_10254')
func_10255_call = mutated_mod.get_global_var('func_10255')
call_12386 = relay.TupleGetItem(func_10254_call(), 0)
call_12387 = relay.TupleGetItem(func_10255_call(), 0)
func_4879_call = mod.get_global_var('func_4879')
func_4881_call = mutated_mod.get_global_var('func_4881')
call_12415 = relay.TupleGetItem(func_4879_call(), 0)
call_12416 = relay.TupleGetItem(func_4881_call(), 0)
output = relay.Tuple([call_12386,call_12415,])
output2 = relay.Tuple([call_12387,call_12416,])
func_12418 = relay.Function([], output)
mod['func_12418'] = func_12418
mod = relay.transform.InferType()(mod)
mutated_mod['func_12418'] = func_12418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12418_call = mutated_mod.get_global_var('func_12418')
call_12419 = func_12418_call()
output = call_12419
func_12420 = relay.Function([], output)
mutated_mod['func_12420'] = func_12420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11281_call = mod.get_global_var('func_11281')
func_11283_call = mutated_mod.get_global_var('func_11283')
call_12533 = func_11281_call()
call_12534 = func_11281_call()
func_8883_call = mod.get_global_var('func_8883')
func_8884_call = mutated_mod.get_global_var('func_8884')
call_12536 = relay.TupleGetItem(func_8883_call(), 0)
call_12537 = relay.TupleGetItem(func_8884_call(), 0)
func_12309_call = mod.get_global_var('func_12309')
func_12312_call = mutated_mod.get_global_var('func_12312')
const_12549 = relay.const([7.971628,5.412421,-3.261054,-3.572799,-8.032155,-7.163424,2.375110,6.043505,-3.172810,6.670065,-3.726598,3.203967,7.818332,-2.105484,-7.733186,-8.181642,-2.612966,-3.672905,-3.473420,-0.288870,-3.352409,2.495369,-6.267712,3.979174,4.434771,-3.429286,7.477155,-0.932355,6.886114,-4.515497,3.301536,4.398586,-3.540504,-4.126475,7.566325,3.092448,7.275672,7.227006,8.456156,-9.811672,5.736967,-0.674544,1.633692,9.878746,7.820584,-5.658487,8.488276,-2.675152,0.765525,-3.109394,0.059451,3.781240,-2.364018,2.927060,2.442815,-3.493246,-6.259526,-6.924233,-2.184729,2.639248,9.528052,-8.600414,5.101788,-6.375832,-9.037524,6.098726,8.511884,-6.428229,4.107454,7.197019,-7.750502,-1.563586,8.453417,-0.892373,-5.600092,7.261652,5.785346,-1.954979,1.140029,-6.221833,1.402131,4.498916,-9.465544,2.575399], dtype = "float64")#candidate|12549|(84,)|const|float64
const_12550 = relay.const([[9.203592],[3.906424],[8.343127],[2.605083],[4.962065],[1.214474],[6.125340],[8.258072],[-0.238183],[-5.741084],[5.694718],[7.363975],[-9.145902],[4.404294],[-2.053538],[3.201865],[9.857595],[3.939815],[8.152381],[-3.427863],[-9.019918],[-4.735084],[-2.366942],[1.599863],[1.916380],[-2.510343],[-3.731494],[7.749034],[9.554076],[8.433348],[-3.116320],[9.557415],[-4.803360],[0.894382],[6.428496],[-4.256629],[1.938279],[4.960135],[-3.410245],[-0.692913],[-5.787987],[-8.564011],[-0.985918],[-4.831748],[7.593701],[-3.688850],[-3.051567],[9.873067],[-1.513199],[-0.153405],[-4.697076],[3.513132],[-4.614820],[1.899154],[6.866776],[-1.384804],[4.534987],[-3.310382],[-4.313372],[6.629757],[5.778222],[5.638778],[9.505435],[-1.030767],[3.994643],[9.891804],[5.786098],[6.367309],[7.168918],[7.566254],[-5.055028],[7.834647],[-6.450760],[-4.130045],[-0.147253],[-7.598903],[2.833233],[7.445541],[5.799983],[-4.600086],[9.907673],[-6.651851],[7.313986],[-3.437410],[0.758812],[2.859130],[7.804250],[7.769355],[8.370477],[-8.986737],[2.708109],[8.510249],[-7.803651],[4.279499],[-2.348851],[5.175755],[3.799715],[-2.037546],[8.033889],[2.559542],[-6.171945],[4.279129],[2.142546],[-1.161321],[-7.391559],[-4.717028],[9.810634],[-5.693770],[3.599209],[3.210552],[0.299523],[0.231892],[6.867835],[3.357259],[-4.671991],[8.954526],[-1.057055],[-3.244161],[7.579828],[-9.279377],[1.260798],[9.359273],[-6.604652],[-6.441144],[4.454811],[8.529637],[-7.286937],[7.163659],[-7.466824],[3.401254],[8.572087],[-9.487793],[4.912873],[-7.565665],[9.212268],[-8.945288],[9.178993],[0.102686],[6.572703],[0.003089],[-7.721642],[8.741292],[4.437606],[-0.552981],[-7.549560],[-7.538677],[-7.711463],[4.371950],[6.699981],[-2.929487],[-1.139609],[4.594590],[-8.825030],[0.029198],[9.310471],[-3.892120],[8.118161],[-4.265578],[-3.353451],[-0.654481],[-2.429581],[-4.807315],[7.189634],[-1.929009],[0.302244],[0.183667],[2.860270],[-7.648369],[-3.456312],[4.918678],[-0.578774],[2.016194],[-3.710436],[8.047464],[-5.755171],[0.086116],[-9.425753],[1.268211],[3.695339],[9.216206],[-5.116516],[-5.593889],[5.295105],[6.626261],[-6.703661],[8.481637],[-9.567989],[-1.944496],[0.392394],[1.219090],[6.517810],[-8.240984],[-4.666859],[-0.281667],[-1.237659],[6.222268],[-8.295439],[-9.769404],[-4.546392],[1.537933],[5.882952],[6.719229],[5.083427],[-4.424419],[0.599876],[-6.633938],[-0.536932],[6.599866],[-4.066526],[-9.251561],[4.384783],[7.189860],[3.514092],[4.696929],[4.521278],[-4.578297],[-9.875536],[-7.215863],[6.192451],[-4.672629],[-0.151913],[8.744588],[7.719936],[-9.739080],[-0.542764],[-1.009056],[-8.732137],[-3.726532],[-5.248839],[8.075136],[-2.298322],[-3.981983],[7.359630],[1.488074],[4.468154],[-1.077165],[-8.364530],[-8.373002],[-7.376079],[-2.560238],[4.997128],[-6.528708],[-5.863318],[7.615515],[-4.360618],[3.044191],[-8.166076],[1.880353],[-0.829353],[-0.469905],[-6.439382],[-0.596537],[-3.597250],[2.482242],[9.170600],[-3.901559],[-6.313862],[-0.669905],[1.611607],[6.685323],[-7.672520],[-8.099784],[-3.681153],[-2.528259],[-7.892797],[-6.726353],[1.230168],[-6.081482],[9.666088],[-4.055390],[6.137414],[5.703373],[9.174105],[-8.899600],[0.886251],[3.605190],[-2.902611],[-8.489343],[6.387766],[-9.843215],[6.636078],[5.569470],[5.735205],[4.737062],[2.237205],[1.633991],[-7.964477],[-4.426654],[-3.537075],[-6.907715],[5.935879],[2.930961],[3.448052],[-9.760239],[-6.026807],[1.596420],[-2.280165],[4.953628],[-7.982919],[-6.998985],[-9.185966],[-2.073923],[9.479679],[2.891833],[4.951482],[9.965488],[4.851079],[6.811600],[5.795755],[5.178133],[-9.674597],[8.598309],[7.596206],[-7.810722],[0.309980],[0.396876],[-1.593874],[-0.574810],[6.602380],[8.402989],[9.188870],[7.364007],[3.168203],[-9.617189],[-5.448642],[-6.020988],[-0.939990],[7.116281],[-4.850487],[7.865626],[2.497894],[-9.872588],[-7.826084],[9.702690],[-3.095692],[-8.920502],[3.653170],[-4.196087],[-1.748958],[9.073795],[-6.734358],[2.584820],[-1.493690],[0.386979],[-0.476368],[-8.073930],[4.406001],[0.704487],[-5.817967],[3.704142],[9.203522],[-9.592424],[9.616025],[9.139268],[6.904312],[3.108487],[5.941585],[-6.813386],[3.848931],[-5.822303],[-0.060457],[9.931190],[1.837347],[5.993316],[7.502987],[-3.399230],[1.152025],[-5.124852],[2.790618],[-6.564765],[-6.519147],[0.268147],[9.086584],[5.557105],[7.042505],[-9.541620],[8.010628],[3.007686],[0.058578],[-5.564881],[-5.732154],[1.646007],[5.514227],[-7.639429],[-2.395847],[-3.756685],[-5.574061],[-4.109923],[9.474672],[4.835362],[3.478335],[4.481375],[1.616726],[-5.421664],[6.277834],[-0.067745],[0.647076],[8.091445],[9.020419],[-0.373809],[2.388305],[-0.606997],[-7.347491],[1.787486],[1.468062],[-5.265651],[-3.893789],[6.075377],[-5.112837],[-4.895499],[-2.226864],[2.868780],[2.228447],[-8.297183],[1.700456],[-0.704909],[6.275842],[-9.656930],[1.921036],[-6.806467],[-1.747070],[4.885234],[-7.770853],[7.760816],[-7.404259],[-2.433314],[-5.279818],[9.637447],[3.664298],[-7.525830],[-8.208369],[7.819824],[7.456569],[9.677132],[2.002565],[9.797132],[-1.392351],[-8.857109],[0.352900],[5.902694],[-0.958349],[-4.599109],[-6.590242],[-7.330560],[-7.095378],[-4.089938],[7.735717],[-2.917586],[6.676617],[2.869509],[7.742533],[1.996371],[0.344868],[-9.565324],[8.200138],[6.426627],[-9.268841],[-6.192103],[2.213139],[-9.323508],[0.101621],[-8.211490],[-5.488079],[8.563848],[-1.866369],[-1.920743],[-6.662119],[1.716048],[4.841569],[-2.619789],[5.897254],[-9.335209],[-4.654999],[-3.008531],[5.934971],[3.231965],[7.257091],[6.845501],[-3.690510],[-9.254261],[4.279916],[7.035700],[-3.921613],[-7.304012],[-3.050041],[-2.084457],[-8.462777],[1.469943],[4.405047],[-5.219412],[-1.052271],[8.635111],[7.646790],[5.414864],[6.702937],[-5.607658],[-2.636262],[-0.701192],[-7.267938],[4.960189],[-8.762664],[-4.544547],[-1.296043],[5.329072],[-4.098687],[1.949986],[5.881417],[-1.616184],[6.769648],[-7.150224],[6.160304],[-9.650175],[-1.717088],[-3.163713],[3.229798],[-7.632710],[7.318190],[-3.500392],[-3.698422],[6.477395],[3.344272],[-4.665726],[4.831202],[8.827399],[-7.104816],[-7.225460],[-9.207089],[-2.498652],[9.907636],[0.214519],[-7.411294],[-7.878549],[-3.511952],[3.236487],[-0.742624],[3.450501],[8.092452],[-5.537735],[7.736152],[-1.952776],[-1.220333],[2.561561],[8.208193],[2.078507],[7.777106],[4.101291],[-2.360160],[0.827615],[-5.235839],[-3.146421],[-0.561448],[-0.914089],[1.547690],[-0.030931],[-6.443421],[-1.859458],[1.913210],[6.641283],[8.172467],[-6.264648],[9.808272],[-1.476466],[5.784696],[-0.261630],[4.566082],[1.468245],[5.781993],[9.756797],[-2.794954],[1.210730],[-4.559659],[1.693766],[2.778731],[-2.104451],[-3.525662],[3.091924],[-9.923915],[0.036875],[-1.318274],[2.151797],[-2.014458],[8.593542],[-6.818796],[-3.604333],[-2.790484],[1.226647],[-0.905819],[5.321915],[2.113267],[-0.541002],[-7.679707],[1.166900],[-0.292793],[-4.029315],[9.222389],[-2.780073],[-0.498834],[9.082787],[-6.163507],[-5.899318],[6.481656],[-3.936136],[-3.658729],[4.065242],[1.613276],[1.277244],[-5.273419],[1.833271],[-8.588811],[4.794158],[9.133616],[0.732177],[1.816468],[3.473509],[7.434188],[-3.163028],[1.588178],[-2.616565],[-5.681140],[-8.646606],[9.922672],[0.866481],[-4.818217],[-5.483389],[0.866380],[-7.050735],[0.700322],[-9.690431],[-1.311562],[3.824240],[6.260803],[-3.863425],[-0.145803],[0.329728],[5.128102],[-4.401660],[8.554541],[-8.861011],[-3.936311],[-3.417747],[-4.152189],[8.403838],[6.335906],[-5.231150],[3.961479],[1.650203],[9.896842],[9.434741],[-1.623132],[1.919943],[-9.477837],[-0.918429],[4.860370],[-2.071669],[-4.563813],[4.873195],[1.809229],[-9.875855],[9.226401],[8.448859],[-0.198983],[7.464310],[-8.125630],[0.145108],[1.226456],[-0.096224],[0.328060],[-4.181299],[6.072684],[-2.582771],[0.676600],[-6.571567],[-5.875999],[0.818811],[2.207453],[-1.978017],[1.864666],[-0.088722],[4.168294],[-4.207526],[-6.645001],[-4.847586],[-0.839833],[-6.312824],[7.436505],[9.185543],[5.144870],[-0.758202],[-5.686602],[3.718204],[-1.825594],[-7.236644],[7.699081],[4.991801],[-1.531778],[-5.947556],[5.511886],[-3.090596],[3.401976],[5.172142],[-6.812054],[4.002155],[7.533801],[1.931260],[-4.196360],[2.338564],[3.005881],[-3.654122],[-9.195264],[2.915739],[-0.397095],[1.072305],[-7.038231],[9.503679],[6.906470]], dtype = "float32")#candidate|12550|(715, 1)|const|float32
call_12548 = relay.TupleGetItem(func_12309_call(relay.reshape(const_12549.astype('float64'), [84,]), relay.reshape(const_12550.astype('float32'), [715,]), ), 1)
call_12551 = relay.TupleGetItem(func_12312_call(relay.reshape(const_12549.astype('float64'), [84,]), relay.reshape(const_12550.astype('float32'), [715,]), ), 1)
uop_12558 = relay.cos(const_12550.astype('float32')) # shape=(715, 1)
uop_12565 = relay.erf(const_12550.astype('float32')) # shape=(715, 1)
func_9373_call = mod.get_global_var('func_9373')
func_9374_call = mutated_mod.get_global_var('func_9374')
call_12567 = relay.TupleGetItem(func_9373_call(), 0)
call_12568 = relay.TupleGetItem(func_9374_call(), 0)
output = relay.Tuple([call_12533,call_12536,call_12548,const_12549,uop_12558,uop_12565,call_12567,])
output2 = relay.Tuple([call_12534,call_12537,call_12551,const_12549,uop_12558,uop_12565,call_12568,])
func_12569 = relay.Function([], output)
mod['func_12569'] = func_12569
mod = relay.transform.InferType()(mod)
mutated_mod['func_12569'] = func_12569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12569_call = mutated_mod.get_global_var('func_12569')
call_12570 = func_12569_call()
output = call_12570
func_12571 = relay.Function([], output)
mutated_mod['func_12571'] = func_12571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11107_call = mod.get_global_var('func_11107')
func_11108_call = mutated_mod.get_global_var('func_11108')
call_12661 = relay.TupleGetItem(func_11107_call(), 0)
call_12662 = relay.TupleGetItem(func_11108_call(), 0)
output = call_12661
output2 = call_12662
func_12664 = relay.Function([], output)
mod['func_12664'] = func_12664
mod = relay.transform.InferType()(mod)
output = func_12664()
func_12665 = relay.Function([], output)
mutated_mod['func_12665'] = func_12665
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12758 = relay.const(4, dtype = "int64")#candidate|12758|()|const|int64
const_12759 = relay.const([[[-6,7,9,-3,7,-8,-1,6,-8,-8,-1],[6,-3,9,9,7,-4,5,4,-8,-7,-2],[7,6,8,-8,4,7,4,-7,7,8,-10],[7,-1,5,-1,-6,-6,-6,10,-5,1,-4]],[[-1,-7,6,-10,-8,-10,-1,-7,-5,1,-7],[8,-2,-2,9,7,8,8,9,10,-4,8],[-9,-8,-8,-6,5,-10,8,-7,9,-5,-7],[-1,-3,-8,3,-4,1,-5,-10,-1,4,1]],[[5,-9,1,-1,8,-9,-3,2,10,-8,-10],[7,-5,-5,4,-1,4,-3,-3,-7,6,-4],[10,-5,-1,-1,-6,-1,9,-10,-1,-1,-10],[-2,-1,-5,-5,-6,-6,5,-1,-10,-7,8]],[[6,10,-8,4,7,2,-7,5,-10,6,1],[5,8,-1,-6,-10,8,10,10,5,-2,-7],[7,-10,2,-5,7,-5,5,9,-6,4,10],[-9,7,-10,-4,-7,-7,-8,-3,4,-2,7]],[[6,9,-7,-5,6,-9,-1,-2,-4,-5,-6],[-1,-7,10,-5,-9,3,4,-10,10,4,-10],[6,9,-1,-4,9,-7,-2,8,-4,-8,-6],[8,3,5,-7,4,7,5,10,-6,-5,-7]],[[-1,-4,-3,-1,-7,8,-9,7,6,-9,-5],[-2,4,-5,-2,-5,1,-6,-4,-5,8,-10],[6,10,9,6,4,10,-3,-6,-1,-8,10],[7,2,4,-9,6,-10,-7,8,2,1,-9]],[[-10,9,-5,2,-2,-9,4,6,-6,9,3],[-4,9,-2,-1,-5,7,10,5,-7,-4,-3],[10,2,-2,-1,-6,5,-2,-8,-1,3,10],[-1,-7,2,-7,-10,4,2,-2,2,-9,-5]],[[-7,5,7,5,-1,-2,7,2,9,-2,5],[-1,-6,-4,10,-7,4,5,9,-7,-8,-3],[-3,2,6,-4,-7,-7,-8,9,4,-6,-7],[-8,-3,-9,5,8,6,1,2,-2,-2,2]]], dtype = "int64")#candidate|12759|(8, 4, 11)|const|int64
bop_12760 = relay.greater_equal(const_12758.astype('bool'), const_12759.astype('bool')) # shape=(8, 4, 11)
output = relay.Tuple([bop_12760,])
output2 = relay.Tuple([bop_12760,])
func_12765 = relay.Function([], output)
mod['func_12765'] = func_12765
mod = relay.transform.InferType()(mod)
output = func_12765()
func_12766 = relay.Function([], output)
mutated_mod['func_12766'] = func_12766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11151_call = mod.get_global_var('func_11151')
func_11153_call = mutated_mod.get_global_var('func_11153')
call_12767 = relay.TupleGetItem(func_11151_call(), 1)
call_12768 = relay.TupleGetItem(func_11153_call(), 1)
const_12776 = relay.const([[[-2.491788,-2.169703,-1.048845,1.203259,6.343524,-2.823581,4.057791,-2.733807,-7.730680,9.472036,-1.311845,-3.019203,8.500764,-6.865242]],[[-0.841966,-1.546489,7.230008,0.692102,-0.982249,-8.507310,-8.373810,-4.975784,8.997134,-4.490289,-2.911239,-2.690935,7.510048,5.014647]],[[-8.383045,0.603545,2.852723,7.520975,5.867725,9.635660,-2.355487,6.228571,-4.582089,-8.266778,3.580810,8.529485,-6.781389,-5.590672]],[[-6.179375,-0.048833,6.796793,7.019381,0.926406,6.626307,-9.043813,4.226443,-6.600339,5.754303,-5.854725,-5.152224,-4.885944,-0.526306]],[[-4.797055,-5.321947,-4.501477,2.246342,4.599947,-7.393346,5.370562,0.323321,-1.510549,-8.046360,9.372469,3.841169,-4.999596,0.876290]],[[3.752565,5.329505,8.351241,-3.892574,7.085298,8.741297,3.122554,1.758413,-5.465072,-9.129030,3.989364,1.219330,-5.706597,9.038091]],[[1.075057,-3.167609,-6.094451,-5.592663,6.061145,7.418745,-9.788181,1.963393,-0.642767,-5.122122,4.079274,-9.398535,-8.255404,-0.567166]],[[-4.589525,7.529764,-5.935260,7.792323,0.349745,-0.258218,-5.783829,5.165488,7.707797,-9.248837,-8.983957,-7.100482,0.334894,-6.166833]],[[-6.230102,4.707093,-1.632542,-2.718573,-4.428347,5.756035,4.567031,-6.344252,5.801325,-3.729132,5.594946,4.829970,-2.490272,1.581394]],[[-7.110064,0.157881,-5.580758,3.081272,0.360780,-7.074133,9.276554,0.357251,1.606413,5.260682,-5.774413,0.914262,-8.391369,3.477261]],[[-2.575031,0.714417,-6.169470,-8.526580,3.714505,-9.362520,3.531832,-9.987939,-2.313480,-7.592719,7.437652,2.519400,3.470337,0.004076]],[[3.384034,-6.058936,-5.606777,-9.490160,-6.165760,1.623980,-0.368144,-5.946412,-3.006025,7.932852,2.819775,2.340843,1.408140,-6.213717]]], dtype = "float32")#candidate|12776|(12, 1, 14)|const|float32
bop_12777 = relay.mod(call_12767.astype('float32'), relay.reshape(const_12776.astype('float32'), relay.shape_of(call_12767))) # shape=(12, 1, 14)
bop_12780 = relay.mod(call_12768.astype('float32'), relay.reshape(const_12776.astype('float32'), relay.shape_of(call_12768))) # shape=(12, 1, 14)
output = relay.Tuple([bop_12777,])
output2 = relay.Tuple([bop_12780,])
func_12787 = relay.Function([], output)
mod['func_12787'] = func_12787
mod = relay.transform.InferType()(mod)
mutated_mod['func_12787'] = func_12787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12787_call = mutated_mod.get_global_var('func_12787')
call_12788 = func_12787_call()
output = call_12788
func_12789 = relay.Function([], output)
mutated_mod['func_12789'] = func_12789
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12798 = relay.var("var_12798", dtype = "int8", shape = ())#candidate|12798|()|var|int8
var_12799 = relay.var("var_12799", dtype = "int8", shape = (7, 6, 9))#candidate|12799|(7, 6, 9)|var|int8
bop_12800 = relay.less_equal(var_12798.astype('bool'), var_12799.astype('bool')) # shape=(7, 6, 9)
output = bop_12800
output2 = bop_12800
func_12812 = relay.Function([var_12798,var_12799,], output)
mod['func_12812'] = func_12812
mod = relay.transform.InferType()(mod)
mutated_mod['func_12812'] = func_12812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12812_call = mutated_mod.get_global_var('func_12812')
var_12814 = relay.var("var_12814", dtype = "int8", shape = ())#candidate|12814|()|var|int8
var_12815 = relay.var("var_12815", dtype = "int8", shape = (7, 6, 9))#candidate|12815|(7, 6, 9)|var|int8
call_12813 = func_12812_call(var_12814,var_12815,)
output = call_12813
func_12816 = relay.Function([var_12814,var_12815,], output)
mutated_mod['func_12816'] = func_12816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9650_call = mod.get_global_var('func_9650')
func_9651_call = mutated_mod.get_global_var('func_9651')
call_12934 = relay.TupleGetItem(func_9650_call(), 3)
call_12935 = relay.TupleGetItem(func_9651_call(), 3)
uop_12940 = relay.log10(call_12934.astype('float32')) # shape=(12, 7, 4)
uop_12942 = relay.log10(call_12935.astype('float32')) # shape=(12, 7, 4)
func_4825_call = mod.get_global_var('func_4825')
func_4829_call = mutated_mod.get_global_var('func_4829')
var_12944 = relay.var("var_12944", dtype = "int16", shape = (160,))#candidate|12944|(160,)|var|int16
call_12943 = relay.TupleGetItem(func_4825_call(relay.reshape(var_12944.astype('int16'), [16, 5, 2]), relay.reshape(var_12944.astype('int16'), [16, 5, 2]), ), 0)
call_12945 = relay.TupleGetItem(func_4829_call(relay.reshape(var_12944.astype('int16'), [16, 5, 2]), relay.reshape(var_12944.astype('int16'), [16, 5, 2]), ), 0)
func_11490_call = mod.get_global_var('func_11490')
func_11492_call = mutated_mod.get_global_var('func_11492')
const_12948 = relay.const([-9,-5,7,2,2,8,6,-4,-4,3,8,8,1,-5,-7,9,3,2,-7,-9,-10,10,-6,2,-9,-7,3,10,5,-10,-2,-8,-2,-7,7,-10,3,-4,6,9,2,-2,-1,-10,-8,1,-9,6,-1,10,1,6,2,4,-9,3,1,8,-10,10,-1,7,-10,-1,10,-1,-5,-6,9,7,5,1,7,-7,10,-6,-8,2,8,1,7,8,8,-1,5,7,9,-5,-7,-5,2,9,4,10,-5,9,-10,5,10,9,3,-5,-5,-9,7,-1,-5,10,2,-1,-8,8,-5,8,-9,1,4,-4,-6,-1], dtype = "int32")#candidate|12948|(120,)|const|int32
call_12947 = relay.TupleGetItem(func_11490_call(relay.reshape(const_12948.astype('int32'), [1, 120])), 0)
call_12949 = relay.TupleGetItem(func_11492_call(relay.reshape(const_12948.astype('int32'), [1, 120])), 0)
output = relay.Tuple([uop_12940,call_12943,var_12944,call_12947,const_12948,])
output2 = relay.Tuple([uop_12942,call_12945,var_12944,call_12949,const_12948,])
func_12950 = relay.Function([var_12944,], output)
mod['func_12950'] = func_12950
mod = relay.transform.InferType()(mod)
var_12951 = relay.var("var_12951", dtype = "int16", shape = (160,))#candidate|12951|(160,)|var|int16
output = func_12950(var_12951)
func_12952 = relay.Function([var_12951], output)
mutated_mod['func_12952'] = func_12952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10381_call = mod.get_global_var('func_10381')
func_10382_call = mutated_mod.get_global_var('func_10382')
call_12962 = relay.TupleGetItem(func_10381_call(), 2)
call_12963 = relay.TupleGetItem(func_10382_call(), 2)
uop_12967 = relay.atanh(call_12962.astype('float32')) # shape=(385, 1)
uop_12969 = relay.atanh(call_12963.astype('float32')) # shape=(385, 1)
var_12976 = relay.var("var_12976", dtype = "float32", shape = (385, 8))#candidate|12976|(385, 8)|var|float32
bop_12977 = relay.not_equal(uop_12967.astype('bool'), var_12976.astype('bool')) # shape=(385, 8)
bop_12980 = relay.not_equal(uop_12969.astype('bool'), var_12976.astype('bool')) # shape=(385, 8)
uop_12996 = relay.log(var_12976.astype('float32')) # shape=(385, 8)
func_12261_call = mod.get_global_var('func_12261')
func_12262_call = mutated_mod.get_global_var('func_12262')
call_13003 = relay.TupleGetItem(func_12261_call(), 0)
call_13004 = relay.TupleGetItem(func_12262_call(), 0)
output = relay.Tuple([bop_12977,uop_12996,call_13003,])
output2 = relay.Tuple([bop_12980,uop_12996,call_13004,])
func_13020 = relay.Function([var_12976,], output)
mod['func_13020'] = func_13020
mod = relay.transform.InferType()(mod)
var_13021 = relay.var("var_13021", dtype = "float32", shape = (385, 8))#candidate|13021|(385, 8)|var|float32
output = func_13020(var_13021)
func_13022 = relay.Function([var_13021], output)
mutated_mod['func_13022'] = func_13022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5177_call = mod.get_global_var('func_5177')
func_5179_call = mutated_mod.get_global_var('func_5179')
call_13060 = relay.TupleGetItem(func_5177_call(), 0)
call_13061 = relay.TupleGetItem(func_5179_call(), 0)
func_10106_call = mod.get_global_var('func_10106')
func_10108_call = mutated_mod.get_global_var('func_10108')
call_13069 = func_10106_call()
call_13070 = func_10106_call()
func_9922_call = mod.get_global_var('func_9922')
func_9923_call = mutated_mod.get_global_var('func_9923')
call_13096 = relay.TupleGetItem(func_9922_call(), 0)
call_13097 = relay.TupleGetItem(func_9923_call(), 0)
func_10854_call = mod.get_global_var('func_10854')
func_10857_call = mutated_mod.get_global_var('func_10857')
const_13101 = relay.const([-6.950589,-7.980036,4.677659,5.783437,-8.311519,-6.735981,-0.876942,-7.615161,3.164533,-3.661184,9.909490,7.469867,-5.192534,8.294747,1.457452,4.325245,9.334404,5.783456,-9.371907,-7.694728,5.822344,3.769138,-9.589215,2.249504,-5.352639,2.783691,-3.650492,-3.736129,7.964961,2.271409,1.263332,-3.197721,-5.126427,0.005006,0.144608,3.745478,6.299189,-1.730631,-8.993173,7.452922,1.720075,5.761947,4.050237,-1.978827,6.864090,-6.462016,-8.620906,7.710961,-7.022430,1.624111,9.410751,-0.994874,-3.714717,-6.034300,-9.079879,2.765241,-4.781174,-8.687556,-0.068021,-7.166552,-2.174472,-0.226871,-3.377868,1.136230,6.548174,-1.685756,5.041351,6.640137,1.755885,-7.768079,7.281735,4.016340,-9.652245,7.974326,-8.698639,5.670464,-3.471432,-4.501185,2.259267,1.677507,-1.308752,2.425910,6.738908,1.500988,-3.267404,-2.580106,0.729148,3.696898,5.179175,8.645147,7.082793,-4.814990,-9.519416,-0.935815,-7.625402,-1.959640,4.379456,-8.542030,-9.335799,6.169593,-4.436644,-6.613711,3.691170,7.830161,4.369817,-3.196934,5.935531,-4.918772,6.896599,-5.310055,5.020990,6.637702,-2.046156,5.810914,7.483176,-3.255165,-8.271910,-7.853674,-5.781139,5.476572,-5.945907,-7.952453,-9.323961,0.134076,4.916236,-0.073809,0.186329,1.669392,4.016861,-0.073977,6.685567,-5.069595,-8.849535,0.228187,9.486688,-5.881373,3.134158,6.618683,0.483146,0.063682,-5.284262,4.444821,2.584223,-3.075802,0.260519,-9.221610,2.324121,7.138660,8.346583,-2.280666,8.639543,-3.877876,-6.070403,-6.927140,-2.924079,-7.205893,8.669645,-1.435231,2.374326,-5.906601,-1.784467,7.071525,8.547145,9.591006,-4.138550,0.419296,-1.739177,-9.237245], dtype = "float32")#candidate|13101|(168,)|const|float32
call_13100 = func_10854_call(relay.reshape(const_13101.astype('float32'), [12, 1, 14]))
call_13102 = func_10854_call(relay.reshape(const_13101.astype('float32'), [12, 1, 14]))
func_5392_call = mod.get_global_var('func_5392')
func_5395_call = mutated_mod.get_global_var('func_5395')
call_13106 = relay.TupleGetItem(func_5392_call(relay.reshape(call_13060.astype('float64'), [7, 4, 7]), relay.reshape(call_13096.astype('float32'), [7, 4, 7]), ), 0)
call_13107 = relay.TupleGetItem(func_5395_call(relay.reshape(call_13060.astype('float64'), [7, 4, 7]), relay.reshape(call_13096.astype('float32'), [7, 4, 7]), ), 0)
output = relay.Tuple([call_13060,call_13069,call_13096,call_13100,const_13101,call_13106,])
output2 = relay.Tuple([call_13061,call_13070,call_13097,call_13102,const_13101,call_13107,])
func_13108 = relay.Function([], output)
mod['func_13108'] = func_13108
mod = relay.transform.InferType()(mod)
mutated_mod['func_13108'] = func_13108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13108_call = mutated_mod.get_global_var('func_13108')
call_13109 = func_13108_call()
output = call_13109
func_13110 = relay.Function([], output)
mutated_mod['func_13110'] = func_13110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7740_call = mod.get_global_var('func_7740')
func_7742_call = mutated_mod.get_global_var('func_7742')
call_13174 = relay.TupleGetItem(func_7740_call(), 0)
call_13175 = relay.TupleGetItem(func_7742_call(), 0)
func_4750_call = mod.get_global_var('func_4750')
func_4753_call = mutated_mod.get_global_var('func_4753')
var_13226 = relay.var("var_13226", dtype = "int8", shape = (75,))#candidate|13226|(75,)|var|int8
call_13225 = relay.TupleGetItem(func_4750_call(relay.reshape(var_13226.astype('int8'), [1, 75])), 2)
call_13227 = relay.TupleGetItem(func_4753_call(relay.reshape(var_13226.astype('int8'), [1, 75])), 2)
output = relay.Tuple([call_13174,call_13225,var_13226,])
output2 = relay.Tuple([call_13175,call_13227,var_13226,])
func_13233 = relay.Function([var_13226,], output)
mod['func_13233'] = func_13233
mod = relay.transform.InferType()(mod)
mutated_mod['func_13233'] = func_13233
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13234 = relay.var("var_13234", dtype = "int8", shape = (75,))#candidate|13234|(75,)|var|int8
func_13233_call = mutated_mod.get_global_var('func_13233')
call_13235 = func_13233_call(var_13234)
output = call_13235
func_13236 = relay.Function([var_13234], output)
mutated_mod['func_13236'] = func_13236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12418_call = mod.get_global_var('func_12418')
func_12420_call = mutated_mod.get_global_var('func_12420')
call_13290 = relay.TupleGetItem(func_12418_call(), 1)
call_13291 = relay.TupleGetItem(func_12420_call(), 1)
output = relay.Tuple([call_13290,])
output2 = relay.Tuple([call_13291,])
func_13292 = relay.Function([], output)
mod['func_13292'] = func_13292
mod = relay.transform.InferType()(mod)
output = func_13292()
func_13293 = relay.Function([], output)
mutated_mod['func_13293'] = func_13293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6691_call = mod.get_global_var('func_6691')
func_6693_call = mutated_mod.get_global_var('func_6693')
call_13331 = relay.TupleGetItem(func_6691_call(), 0)
call_13332 = relay.TupleGetItem(func_6693_call(), 0)
func_4879_call = mod.get_global_var('func_4879')
func_4881_call = mutated_mod.get_global_var('func_4881')
call_13361 = relay.TupleGetItem(func_4879_call(), 1)
call_13362 = relay.TupleGetItem(func_4881_call(), 1)
func_8980_call = mod.get_global_var('func_8980')
func_8984_call = mutated_mod.get_global_var('func_8984')
const_13367 = relay.const([False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True], dtype = "bool")#candidate|13367|(385,)|const|bool
const_13368 = relay.const([1,-1,-2,-5,10,-1,-4,-1,-3,-1,6,6,-6,6,-2,-7,-4,4,-9,-8,9,-9,6,-2,-10,-1,-4,4,4,10,-9,-8,7,9,-1,4,-8,2,3,-4,4,-1,4,8,7,3,7,9,5,10,6,-7,9,8,-1,6,10,6,5,2,-2,-10,-8,4,8,1,-10,-8,-6,-10,3,-2,7,8,2,6,7,-2,6,10,2,7,8,10,4,-10,-9,-9,-10,8,9,5,-9,-2,-7,-6,4,10,1,-7,-1,3,1,6,-10,-5,-6,4,-9,10,-1,-4,2,-8,-5,9,3,-8,3,-6,-8,-10,3,-10,4,-8,-6,1,-8,2,-5,-1,-2,-3,-3,-6,9,-5,-3,5,-7,-2,7,3,-2,1,4,4,-1,1,-5,4,6,-6,-6,-6,-6,-8,-10,2], dtype = "int16")#candidate|13368|(160,)|const|int16
call_13366 = relay.TupleGetItem(func_8980_call(relay.reshape(const_13367.astype('bool'), [385,]), relay.reshape(const_13368.astype('int16'), [160, 1]), ), 4)
call_13369 = relay.TupleGetItem(func_8984_call(relay.reshape(const_13367.astype('bool'), [385,]), relay.reshape(const_13368.astype('int16'), [160, 1]), ), 4)
func_6656_call = mod.get_global_var('func_6656')
func_6657_call = mutated_mod.get_global_var('func_6657')
call_13385 = relay.TupleGetItem(func_6656_call(), 0)
call_13386 = relay.TupleGetItem(func_6657_call(), 0)
output = relay.Tuple([call_13331,call_13361,call_13366,const_13367,const_13368,call_13385,])
output2 = relay.Tuple([call_13332,call_13362,call_13369,const_13367,const_13368,call_13386,])
func_13392 = relay.Function([], output)
mod['func_13392'] = func_13392
mod = relay.transform.InferType()(mod)
output = func_13392()
func_13393 = relay.Function([], output)
mutated_mod['func_13393'] = func_13393
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13514 = relay.const([[[6.559985,0.692076,-9.752550,-9.277522,2.813833,5.910493,5.628782],[7.175615,-8.846612,5.924580,4.095092,9.961982,2.197370,9.480616],[8.371125,-9.061778,-4.583327,-8.958524,3.778523,-7.343567,-4.716073],[-7.757439,7.328010,0.886808,-2.030935,8.405532,-3.306460,1.239338]],[[-7.623763,-0.548513,-5.755512,3.921413,-6.067206,5.426564,-1.917343],[-2.170684,-7.611053,-3.615307,7.480134,7.613137,-9.800424,6.325195],[-1.927639,-9.667666,8.262907,-8.130232,3.874648,-8.411022,-9.527258],[-2.192324,1.320011,4.218833,9.999622,1.269105,0.269489,-5.850228]],[[-3.562997,-0.911659,5.169001,8.959107,4.412577,-5.783258,4.360063],[-0.856399,-8.605722,-6.603004,-3.953973,0.526566,4.420717,-6.923173],[-5.487700,-0.047721,-7.024367,2.497586,3.652984,-3.565884,-3.613604],[-7.135683,-0.195564,0.806941,7.201114,-4.668437,1.522237,0.969451]],[[5.255741,6.242794,2.364886,-7.842772,-1.599531,1.652554,-0.038196],[-0.569772,-1.706891,9.254747,-4.763516,6.481872,-3.221244,7.691660],[-0.646050,0.686980,-4.383335,8.051553,-9.831276,4.525405,2.540780],[4.972480,-0.277810,-9.816023,-2.897347,2.933925,1.711382,-7.610348]],[[8.134383,1.613475,-4.274908,1.514667,-5.682367,-3.652949,-8.125062],[9.622179,-4.109388,2.082382,6.983971,5.045150,1.625643,-6.477538],[-4.295613,0.953578,-1.480666,8.060556,7.319707,5.619185,3.635978],[-5.066869,2.544234,0.694682,-2.561661,-0.889693,-5.529361,9.643186]],[[0.694028,-0.586937,-3.963781,1.198044,8.185010,-9.815014,9.401680],[-6.701823,6.219288,-7.605925,-1.013841,1.109426,-1.175774,-4.526839],[9.732746,0.314844,4.982151,-5.514125,7.658672,-4.229560,-9.863195],[3.890951,-2.046078,-5.493733,-0.924255,-4.242653,-8.446425,-6.732139]]], dtype = "float64")#candidate|13514|(6, 4, 7)|const|float64
uop_13515 = relay.atan(const_13514.astype('float64')) # shape=(6, 4, 7)
func_12664_call = mod.get_global_var('func_12664')
func_12665_call = mutated_mod.get_global_var('func_12665')
call_13525 = func_12664_call()
call_13526 = func_12664_call()
uop_13530 = relay.sinh(call_13525.astype('float64')) # shape=(385, 1)
uop_13532 = relay.sinh(call_13526.astype('float64')) # shape=(385, 1)
uop_13534 = relay.sigmoid(uop_13515.astype('float64')) # shape=(6, 4, 7)
output = relay.Tuple([uop_13530,uop_13534,])
output2 = relay.Tuple([uop_13532,uop_13534,])
func_13539 = relay.Function([], output)
mod['func_13539'] = func_13539
mod = relay.transform.InferType()(mod)
output = func_13539()
func_13540 = relay.Function([], output)
mutated_mod['func_13540'] = func_13540
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13544 = relay.const([[[-0.144325],[8.179988],[5.662359],[-1.028316],[-0.471719],[-8.389193],[-3.637650],[6.501807],[-8.916784]],[[-8.563079],[0.722889],[2.974842],[-1.398366],[-0.795623],[9.592766],[0.745879],[5.899281],[-0.357508]],[[4.568470],[5.386835],[-3.914123],[-3.497252],[5.148632],[6.771035],[-7.192924],[6.989390],[8.146795]],[[5.357282],[0.868003],[6.668161],[4.535759],[-7.520979],[9.472737],[1.514388],[-8.054852],[-4.812841]],[[6.756615],[7.656507],[-3.183788],[-6.591758],[-5.502661],[-9.517310],[6.219855],[4.930561],[-0.552326]],[[4.760978],[9.511419],[-7.512862],[-9.792291],[-3.480748],[1.222662],[4.266980],[0.505623],[0.856883]],[[-1.261651],[-1.252714],[6.549247],[-5.168918],[4.259172],[-2.196101],[-8.323041],[9.633008],[9.612502]],[[7.598384],[-7.843941],[-2.536041],[-9.411606],[-8.943381],[-7.481994],[-6.912564],[2.809515],[6.116136]],[[8.760188],[7.039185],[3.794114],[-6.657178],[-7.875041],[-0.363662],[-3.069259],[9.025901],[7.075984]],[[-0.149843],[-4.322941],[6.725830],[-3.554277],[8.882668],[-5.200571],[-5.493108],[-4.835417],[-3.680851]],[[5.098166],[7.285040],[4.699874],[-5.110276],[2.014049],[-1.412777],[0.756244],[4.873633],[8.463264]],[[2.519891],[-1.951691],[5.435249],[0.964426],[-7.899240],[-9.050659],[-6.639376],[-1.912347],[1.611377]],[[2.206349],[6.586803],[2.894772],[6.753234],[-5.563178],[-2.746968],[2.762125],[4.363056],[-5.660883]],[[-8.592903],[-4.097883],[5.982043],[-8.819189],[7.851681],[-0.597049],[-1.567692],[-1.073994],[-6.852949]]], dtype = "float64")#candidate|13544|(14, 9, 1)|const|float64
uop_13545 = relay.acosh(const_13544.astype('float64')) # shape=(14, 9, 1)
func_8173_call = mod.get_global_var('func_8173')
func_8174_call = mutated_mod.get_global_var('func_8174')
call_13547 = relay.TupleGetItem(func_8173_call(), 0)
call_13548 = relay.TupleGetItem(func_8174_call(), 0)
bop_13553 = relay.divide(uop_13545.astype('float32'), relay.reshape(const_13544.astype('float32'), relay.shape_of(uop_13545))) # shape=(14, 9, 1)
output = relay.Tuple([call_13547,bop_13553,])
output2 = relay.Tuple([call_13548,bop_13553,])
func_13566 = relay.Function([], output)
mod['func_13566'] = func_13566
mod = relay.transform.InferType()(mod)
output = func_13566()
func_13567 = relay.Function([], output)
mutated_mod['func_13567'] = func_13567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5949_call = mod.get_global_var('func_5949')
func_5950_call = mutated_mod.get_global_var('func_5950')
call_13674 = func_5949_call()
call_13675 = func_5949_call()
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_13681 = relay.TupleGetItem(func_5163_call(), 0)
call_13682 = relay.TupleGetItem(func_5164_call(), 0)
output = relay.Tuple([call_13674,call_13681,])
output2 = relay.Tuple([call_13675,call_13682,])
func_13685 = relay.Function([], output)
mod['func_13685'] = func_13685
mod = relay.transform.InferType()(mod)
output = func_13685()
func_13686 = relay.Function([], output)
mutated_mod['func_13686'] = func_13686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11245_call = mod.get_global_var('func_11245')
func_11247_call = mutated_mod.get_global_var('func_11247')
call_13709 = func_11245_call()
call_13710 = func_11245_call()
func_11165_call = mod.get_global_var('func_11165')
func_11166_call = mutated_mod.get_global_var('func_11166')
call_13716 = relay.TupleGetItem(func_11165_call(), 2)
call_13717 = relay.TupleGetItem(func_11166_call(), 2)
output = relay.Tuple([call_13709,call_13716,])
output2 = relay.Tuple([call_13710,call_13717,])
func_13718 = relay.Function([], output)
mod['func_13718'] = func_13718
mod = relay.transform.InferType()(mod)
output = func_13718()
func_13719 = relay.Function([], output)
mutated_mod['func_13719'] = func_13719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8411_call = mod.get_global_var('func_8411')
func_8413_call = mutated_mod.get_global_var('func_8413')
call_13741 = func_8411_call()
call_13742 = func_8411_call()
func_12569_call = mod.get_global_var('func_12569')
func_12571_call = mutated_mod.get_global_var('func_12571')
call_13743 = relay.TupleGetItem(func_12569_call(), 5)
call_13744 = relay.TupleGetItem(func_12571_call(), 5)
var_13745 = relay.var("var_13745", dtype = "float32", shape = (715, 14))#candidate|13745|(715, 14)|var|float32
bop_13746 = relay.logical_and(call_13743.astype('bool'), var_13745.astype('bool')) # shape=(715, 14)
bop_13749 = relay.logical_and(call_13744.astype('bool'), var_13745.astype('bool')) # shape=(715, 14)
uop_13777 = relay.acosh(bop_13746.astype('float32')) # shape=(715, 14)
uop_13779 = relay.acosh(bop_13749.astype('float32')) # shape=(715, 14)
bop_13782 = relay.logical_or(uop_13777.astype('bool'), relay.reshape(var_13745.astype('bool'), relay.shape_of(uop_13777))) # shape=(715, 14)
bop_13785 = relay.logical_or(uop_13779.astype('bool'), relay.reshape(var_13745.astype('bool'), relay.shape_of(uop_13779))) # shape=(715, 14)
var_13787 = relay.var("var_13787", dtype = "float32", shape = (715, 14))#candidate|13787|(715, 14)|var|float32
bop_13788 = relay.greater_equal(uop_13777.astype('bool'), relay.reshape(var_13787.astype('bool'), relay.shape_of(uop_13777))) # shape=(715, 14)
bop_13791 = relay.greater_equal(uop_13779.astype('bool'), relay.reshape(var_13787.astype('bool'), relay.shape_of(uop_13779))) # shape=(715, 14)
output = relay.Tuple([call_13741,bop_13782,bop_13788,])
output2 = relay.Tuple([call_13742,bop_13785,bop_13791,])
func_13794 = relay.Function([var_13745,var_13787,], output)
mod['func_13794'] = func_13794
mod = relay.transform.InferType()(mod)
mutated_mod['func_13794'] = func_13794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13794_call = mutated_mod.get_global_var('func_13794')
var_13796 = relay.var("var_13796", dtype = "float32", shape = (715, 14))#candidate|13796|(715, 14)|var|float32
var_13797 = relay.var("var_13797", dtype = "float32", shape = (715, 14))#candidate|13797|(715, 14)|var|float32
call_13795 = func_13794_call(var_13796,var_13797,)
output = call_13795
func_13798 = relay.Function([var_13796,var_13797,], output)
mutated_mod['func_13798'] = func_13798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5881_call = mod.get_global_var('func_5881')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_13841 = func_5881_call()
call_13842 = func_5881_call()
func_1870_call = mod.get_global_var('func_1870')
func_1874_call = mutated_mod.get_global_var('func_1874')
var_13844 = relay.var("var_13844", dtype = "bool", shape = ())#candidate|13844|()|var|bool
const_13845 = relay.const([True,True,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True], dtype = "bool")#candidate|13845|(385,)|const|bool
call_13843 = relay.TupleGetItem(func_1870_call(relay.reshape(var_13844.astype('bool'), []), relay.reshape(const_13845.astype('bool'), [11, 5, 7]), ), 0)
call_13846 = relay.TupleGetItem(func_1874_call(relay.reshape(var_13844.astype('bool'), []), relay.reshape(const_13845.astype('bool'), [11, 5, 7]), ), 0)
output = relay.Tuple([call_13841,call_13843,var_13844,const_13845,])
output2 = relay.Tuple([call_13842,call_13846,var_13844,const_13845,])
func_13849 = relay.Function([var_13844,], output)
mod['func_13849'] = func_13849
mod = relay.transform.InferType()(mod)
var_13850 = relay.var("var_13850", dtype = "bool", shape = ())#candidate|13850|()|var|bool
output = func_13849(var_13850)
func_13851 = relay.Function([var_13850], output)
mutated_mod['func_13851'] = func_13851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6656_call = mod.get_global_var('func_6656')
func_6657_call = mutated_mod.get_global_var('func_6657')
call_13957 = relay.TupleGetItem(func_6656_call(), 0)
call_13958 = relay.TupleGetItem(func_6657_call(), 0)
func_5410_call = mod.get_global_var('func_5410')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_13970 = func_5410_call()
call_13971 = func_5410_call()
output = relay.Tuple([call_13957,call_13970,])
output2 = relay.Tuple([call_13958,call_13971,])
func_13978 = relay.Function([], output)
mod['func_13978'] = func_13978
mod = relay.transform.InferType()(mod)
mutated_mod['func_13978'] = func_13978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13978_call = mutated_mod.get_global_var('func_13978')
call_13979 = func_13978_call()
output = call_13979
func_13980 = relay.Function([], output)
mutated_mod['func_13980'] = func_13980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4879_call = mod.get_global_var('func_4879')
func_4881_call = mutated_mod.get_global_var('func_4881')
call_14058 = relay.TupleGetItem(func_4879_call(), 1)
call_14059 = relay.TupleGetItem(func_4881_call(), 1)
func_7740_call = mod.get_global_var('func_7740')
func_7742_call = mutated_mod.get_global_var('func_7742')
call_14073 = relay.TupleGetItem(func_7740_call(), 0)
call_14074 = relay.TupleGetItem(func_7742_call(), 0)
func_7264_call = mod.get_global_var('func_7264')
func_7266_call = mutated_mod.get_global_var('func_7266')
call_14103 = relay.TupleGetItem(func_7264_call(), 3)
call_14104 = relay.TupleGetItem(func_7266_call(), 3)
output = relay.Tuple([call_14058,call_14073,call_14103,])
output2 = relay.Tuple([call_14059,call_14074,call_14104,])
func_14113 = relay.Function([], output)
mod['func_14113'] = func_14113
mod = relay.transform.InferType()(mod)
output = func_14113()
func_14114 = relay.Function([], output)
mutated_mod['func_14114'] = func_14114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10381_call = mod.get_global_var('func_10381')
func_10382_call = mutated_mod.get_global_var('func_10382')
call_14165 = relay.TupleGetItem(func_10381_call(), 2)
call_14166 = relay.TupleGetItem(func_10382_call(), 2)
uop_14167 = relay.erf(call_14165.astype('float32')) # shape=(385, 1)
uop_14169 = relay.erf(call_14166.astype('float32')) # shape=(385, 1)
bop_14195 = relay.logical_xor(uop_14167.astype('int64'), relay.reshape(call_14165.astype('int64'), relay.shape_of(uop_14167))) # shape=(385, 1)
bop_14198 = relay.logical_xor(uop_14169.astype('int64'), relay.reshape(call_14166.astype('int64'), relay.shape_of(uop_14169))) # shape=(385, 1)
uop_14205 = relay.acos(uop_14167.astype('float64')) # shape=(385, 1)
uop_14207 = relay.acos(uop_14169.astype('float64')) # shape=(385, 1)
output = relay.Tuple([bop_14195,uop_14205,])
output2 = relay.Tuple([bop_14198,uop_14207,])
func_14210 = relay.Function([], output)
mod['func_14210'] = func_14210
mod = relay.transform.InferType()(mod)
mutated_mod['func_14210'] = func_14210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14210_call = mutated_mod.get_global_var('func_14210')
call_14211 = func_14210_call()
output = call_14211
func_14212 = relay.Function([], output)
mutated_mod['func_14212'] = func_14212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14230 = relay.var("var_14230", dtype = "float32", shape = ())#candidate|14230|()|var|float32
var_14231 = relay.var("var_14231", dtype = "float32", shape = (2, 14, 14))#candidate|14231|(2, 14, 14)|var|float32
bop_14232 = relay.power(var_14230.astype('float32'), var_14231.astype('float32')) # shape=(2, 14, 14)
func_8267_call = mod.get_global_var('func_8267')
func_8270_call = mutated_mod.get_global_var('func_8270')
var_14236 = relay.var("var_14236", dtype = "int8", shape = (75,))#candidate|14236|(75,)|var|int8
call_14235 = relay.TupleGetItem(func_8267_call(relay.reshape(var_14230.astype('int8'), []), relay.reshape(var_14236.astype('int8'), [75,]), ), 0)
call_14237 = relay.TupleGetItem(func_8270_call(relay.reshape(var_14230.astype('int8'), []), relay.reshape(var_14236.astype('int8'), [75,]), ), 0)
func_8375_call = mod.get_global_var('func_8375')
func_8376_call = mutated_mod.get_global_var('func_8376')
call_14240 = relay.TupleGetItem(func_8375_call(), 0)
call_14241 = relay.TupleGetItem(func_8376_call(), 0)
func_5177_call = mod.get_global_var('func_5177')
func_5179_call = mutated_mod.get_global_var('func_5179')
call_14249 = relay.TupleGetItem(func_5177_call(), 0)
call_14250 = relay.TupleGetItem(func_5179_call(), 0)
output = relay.Tuple([bop_14232,call_14235,var_14236,call_14240,call_14249,])
output2 = relay.Tuple([bop_14232,call_14237,var_14236,call_14241,call_14250,])
func_14264 = relay.Function([var_14230,var_14231,var_14236,], output)
mod['func_14264'] = func_14264
mod = relay.transform.InferType()(mod)
mutated_mod['func_14264'] = func_14264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14264_call = mutated_mod.get_global_var('func_14264')
var_14266 = relay.var("var_14266", dtype = "float32", shape = ())#candidate|14266|()|var|float32
var_14267 = relay.var("var_14267", dtype = "float32", shape = (2, 14, 14))#candidate|14267|(2, 14, 14)|var|float32
var_14268 = relay.var("var_14268", dtype = "int8", shape = (75,))#candidate|14268|(75,)|var|int8
call_14265 = func_14264_call(var_14266,var_14267,var_14268,)
output = call_14265
func_14269 = relay.Function([var_14266,var_14267,var_14268,], output)
mutated_mod['func_14269'] = func_14269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10789_call = mod.get_global_var('func_10789')
func_10791_call = mutated_mod.get_global_var('func_10791')
call_14352 = relay.TupleGetItem(func_10789_call(), 2)
call_14353 = relay.TupleGetItem(func_10791_call(), 2)
output = call_14352
output2 = call_14353
func_14363 = relay.Function([], output)
mod['func_14363'] = func_14363
mod = relay.transform.InferType()(mod)
output = func_14363()
func_14364 = relay.Function([], output)
mutated_mod['func_14364'] = func_14364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9650_call = mod.get_global_var('func_9650')
func_9651_call = mutated_mod.get_global_var('func_9651')
call_14376 = relay.TupleGetItem(func_9650_call(), 3)
call_14377 = relay.TupleGetItem(func_9651_call(), 3)
uop_14380 = relay.cos(call_14376.astype('float32')) # shape=(12, 7, 4)
uop_14382 = relay.cos(call_14377.astype('float32')) # shape=(12, 7, 4)
bop_14385 = relay.bitwise_or(call_14376.astype('int8'), relay.reshape(uop_14380.astype('int8'), relay.shape_of(call_14376))) # shape=(12, 7, 4)
bop_14388 = relay.bitwise_or(call_14377.astype('int8'), relay.reshape(uop_14382.astype('int8'), relay.shape_of(call_14377))) # shape=(12, 7, 4)
func_7064_call = mod.get_global_var('func_7064')
func_7070_call = mutated_mod.get_global_var('func_7070')
const_14391 = relay.const(True, dtype = "bool")#candidate|14391|()|const|bool
const_14392 = relay.const([6.553152,4.138058,-5.400518,-5.627169,2.977788,4.052629,-0.349668,7.283728,-8.133181,-4.581330,-0.981942,-4.127027,3.635118,-7.304487,-6.348809,-7.867607,-5.124316,-3.862309,-2.677732,9.729741,0.942984,4.786246,8.736801,3.247709,-1.088820,0.570949,6.351647,-8.919644,-1.655218,-4.574109,5.868444,-9.776056,-0.191199,7.173887,-4.867184,-5.082555,5.840891,0.336891,-4.084534,6.868473,-3.125491,2.342063,-0.309220,1.975796,1.428022,6.396063,-6.778450,-9.892981,0.103989,6.016430,-0.793932,2.991232,3.270772,-0.947089,-7.001653,-0.560878,-8.021787,-1.342355,-7.338967,-1.597719,1.524390,-5.501832,9.275702,-9.148321,-1.091997,-7.620789,7.516519,5.726036,-7.833729,2.321389,1.971225,-7.910686,1.409493,-6.382964,-4.624956,2.855003,-9.627116,2.338867,0.416361,-8.622692,9.618217,-7.648013,4.501843,2.483165,-3.620477,-5.792944,-2.788138,8.248588,5.253590,9.403311,-6.118887,-9.741573,4.825635,5.202610,7.146146,-0.963326,-6.141915,-8.210044,-7.135826,-7.865139,-5.074533,-8.193257,0.001983,-0.630788,9.580089,-9.938641,9.492010,2.135822,-9.927402,5.438791,-4.446175,-8.415283,-4.073563,-7.318621,-1.702847,3.698621,0.315651,1.302338,-2.886087,-8.706130,-3.828355,0.929575,8.239931,-1.971012,5.084603,8.476496,4.377509,8.030981,-0.157939,9.979504,-3.370660,4.305766,-2.356631,-6.962040,8.588611,0.408378,4.564935,4.225099,2.389266,-3.522694,7.081429,-8.482091,1.821291,-6.656214,-6.702398,-7.379346,8.082313,-7.031078,-5.289081,-3.899395,3.516681,8.945032,-8.020268,7.091435,-0.726133,0.590524,-9.214870,5.235337,4.648692,7.877105,1.145216,-6.216992,-2.171006,-4.833657,6.441034,-8.208483,-6.482316,2.604543,-5.733766,-7.759094,-7.550528,-0.747597,-5.086666,-1.520217,0.779006,0.993773,1.930673,1.185370,-6.809489,-7.838653,-5.528666,3.005559,3.608535,-7.102824,8.724236,-3.166984,-6.501785,-7.274129,-7.347618,-7.372974,3.539684,-0.403615,4.503035,-5.519792,-5.224120,9.976678,6.383271,9.848696,1.293547,-4.497296,2.281220,-3.594602,5.225151,-8.962297,8.209532,9.200717,-8.395130,8.462098,-8.601246,1.171905,-2.371893,4.442290,6.303525,-4.549909,-4.625173,-9.818733,-2.297175,8.642170,8.381855,3.306762,-2.291975,9.988906,3.281443,-3.034836,-6.505661,-9.912952,-6.756061,-6.813247,-6.479604,-0.268789,6.010731,-7.882965,8.295782,6.970243,9.741058,2.859479,-1.192621,-8.289593,6.995590,9.795188,4.463218,8.401040,3.540067,9.367813,-4.363000,2.734980,-5.707411,4.265903,9.223053,6.599094,-2.379790,9.675004,0.913384,-1.372887,-0.386681,3.635462,6.642050,-0.422817,-8.002798,-4.964211,7.568802,7.571010,-6.803090,-8.042732,7.783437,-1.891838,-4.677999,-1.089085,-3.962664,8.306336,-6.518912,-7.213996,6.814555,9.833326,-2.726586,-8.825519,2.363616,-8.697843,7.908335,9.639400,-1.533713,-7.562843,9.104753,-4.507591,1.190912,8.209093,-0.883741,4.273982,-2.825242,-5.062227,-2.488898,-1.256019,-0.796386,7.631972,3.124047,-8.187579,3.270514,2.096904,-1.128006,-6.491326,9.964805,6.027634,1.960413,9.851104,7.276723,-3.216341,-6.971680,1.435250,0.423447,-0.869952,-0.201946,-8.366960,3.696710,-8.775856,-8.821338,8.855590,-8.136937,7.346522,8.270199,7.247385,-2.335247,0.210685,3.011786,2.849727,3.178564,4.785380,6.722854,6.353695,2.745613,-1.466465,-2.981318,5.024018,-7.323688,-9.486251,1.028586,6.532965,-8.116970,9.167704,6.523805,-0.922316,-9.123392,-5.683316,-3.248265,9.471409,-1.116577,6.011250,3.266982,8.475434,4.719914,-3.239759,-1.150812,5.682473,-3.129116,-4.067643,5.021408,-2.625050,-3.148042,7.448112,1.522923,0.026493,-9.021894,-1.067940,2.135943,-2.611818,-5.213093,-9.778795,-6.920506,9.537490,-9.676480,-1.400697,-7.761048,1.323051,-3.218516,7.627165,9.534432,1.598817,1.340958,-4.969276,3.835335,-5.019089,5.650636,-4.414530,-0.097585,-4.122649,6.546721,-9.688005,1.255398,8.012438,2.634801,5.882224,8.401129,-8.115793,3.502644,9.762107,1.273121,-9.295406,-5.928283,-3.040021,-6.699224,2.388129,-9.067754,2.901254,-0.841906,2.860444,-4.616804,-3.093897,7.602414,-5.576050,0.566719,2.003036,5.210569,8.447718,1.271905,-4.004217,-6.057036,2.423065,-0.453828,3.138023,9.189633,-8.499012,1.558350,1.614558,9.752093,2.897699,-5.855489,-4.093200,-1.278087,0.624664,5.820227,4.938367,-5.523624,-0.764399,-4.492275,4.642073,-1.203796,6.612069,-0.227063,-9.879534,-2.012403,5.394038,8.469481,0.719579,6.543883,4.041768,-4.470125,2.557712,7.534149,2.847000,8.530141,-6.156141,-5.096291,1.059630,-2.844404,5.639503,-5.599967,0.261082,-4.494656,9.058876,-4.272329,-7.252348,-0.318111,8.472461,-8.983456,1.320423,7.295819,4.835493,5.894349,-4.654767,1.268672,-6.992824,-3.811170,9.699842,-5.781852,4.683725,1.903717,-0.498686,0.822585,0.960648,-4.392966,6.429234,-6.469787,-9.574567,6.653474,-7.236688,-7.052957,-7.928042,-0.047992,2.451913,9.999053,1.712710,-8.823682,-5.807795,6.519342,4.891319,-1.000441,0.465294,-8.017078,-5.574146,9.243341,-7.532325,6.268552,-1.515337,-2.511878,7.925536,-0.550628,-6.442033,-0.470264,-7.260398,-0.399524,3.082576,-9.902275,-8.702140,-5.940359,4.742443,8.740477,5.341316,-6.744933,-1.396674,2.546504,-6.215409,5.291094,6.065868,4.336171,4.511729,5.656512,-0.418495,-5.297064,-9.891145,7.079938,-6.104903,5.075928,-3.653805,7.761483,-1.032278,-0.487855,5.058009,3.884177,5.297505,-2.316237,7.620665,1.998470,-1.979218,-6.464151,1.221541,-3.021908,-4.026017,0.798318,4.522172,0.694166,-4.624497,7.516453,9.765060,-1.253741,9.591895,-6.682959,-8.547632,4.880859,3.227852,-3.532979,5.291482,-5.332655,-3.013262,-0.572658,-0.590918,-1.974466,3.090987,-3.332847,-0.528248,9.950380,-3.963978,-7.352898,-7.444748,2.966606,2.798550,-4.756109,-6.867857,-3.308712,-7.175510,-2.743640,2.323642,8.074077,-7.665607,8.473487,-2.571539,5.820272,-5.693320,-1.800505,9.214298,-5.339777,1.143832,2.167528,7.560918,-0.228829,7.945958,2.088016,5.101241,2.746721,-9.022543,7.703452,-8.090638,3.950527,-1.928443,8.848818,9.575086,3.080386,-4.796861,-1.256458,-9.444979,8.875732,-1.483366,-3.506429,-0.182060,5.709619,0.425745,6.381329,3.080502,-1.787714,-7.982499,6.379775,-3.799346,-9.867573,-3.839404,-8.670045,-2.224141,-9.483407,-4.101195,-6.450889,-3.358777,-2.886544,-8.717214,0.241606,-3.217542,-6.218990,7.761797,7.595828,-5.524412,-4.218760,-3.666191,0.052392,1.040909,9.333034,0.239911,-0.080430,-7.130311,7.421338,-1.272513,-1.883588,-9.763901,-1.972059,6.216935,1.637549,9.625754,-3.312813,0.431893,-2.380661,6.999500,-8.962838,-3.379507,-2.045555,1.598075,2.079109,3.827998,7.140053,-6.004023,0.824776,3.533927,8.218753,4.916092,-7.982677,-0.983240,8.632341,6.855050,-4.220950,-0.769750,-9.975051,-8.880147,9.359638,9.386460,5.074232,-8.057278,1.783651,-1.416590,4.772743,-3.537741,-1.983274,-8.974771,-0.980151,7.709197,8.742120,-6.855264,-4.180807,-6.512897,-3.286452,-1.585237,7.473192,-9.821795,-1.107331,-0.547722,-7.713552,8.462384,0.610830,-8.059207,4.150632,-7.540748,2.601729,-1.914953,9.683722,-8.032123,6.637239,2.504938,6.160656,4.364007,-0.062933,6.598470,9.673919], dtype = "float32")#candidate|14392|(715,)|const|float32
const_14393 = relay.const([-8,5,-3,-8,-3,-9,3,6,6,5,-1,7,-3,9,2,5,-6,-10,3,3,8,4,10,9,5,9,-5,4,-5,-5,-4,-8,3,1,-6,6,8,9,10,-3,-4,-3,-9,8,-9,-2,5,3,-10,8,3,-1,-3,-9,10,10,-6,-2,7,2,5,8,6,10,10,-1,9,3,4,-5,-6,6,-5,9,-10,-9,-5,-5,-10,4,-10], dtype = "int32")#candidate|14393|(81,)|const|int32
var_14394 = relay.var("var_14394", dtype = "int8", shape = (5, 15))#candidate|14394|(5, 15)|var|int8
call_14390 = relay.TupleGetItem(func_7064_call(relay.reshape(const_14391.astype('bool'), []), relay.reshape(const_14392.astype('float32'), [715,]), relay.reshape(const_14393.astype('int32'), [81,]), relay.reshape(var_14394.astype('int8'), [1, 75]), ), 6)
call_14395 = relay.TupleGetItem(func_7070_call(relay.reshape(const_14391.astype('bool'), []), relay.reshape(const_14392.astype('float32'), [715,]), relay.reshape(const_14393.astype('int32'), [81,]), relay.reshape(var_14394.astype('int8'), [1, 75]), ), 6)
output = relay.Tuple([bop_14385,call_14390,const_14391,const_14392,const_14393,var_14394,])
output2 = relay.Tuple([bop_14388,call_14395,const_14391,const_14392,const_14393,var_14394,])
func_14407 = relay.Function([var_14394,], output)
mod['func_14407'] = func_14407
mod = relay.transform.InferType()(mod)
mutated_mod['func_14407'] = func_14407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14408 = relay.var("var_14408", dtype = "int8", shape = (5, 15))#candidate|14408|(5, 15)|var|int8
func_14407_call = mutated_mod.get_global_var('func_14407')
call_14409 = func_14407_call(var_14408)
output = call_14409
func_14410 = relay.Function([var_14408], output)
mutated_mod['func_14410'] = func_14410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10106_call = mod.get_global_var('func_10106')
func_10108_call = mutated_mod.get_global_var('func_10108')
call_14414 = func_10106_call()
call_14415 = func_10106_call()
output = relay.Tuple([call_14414,])
output2 = relay.Tuple([call_14415,])
func_14431 = relay.Function([], output)
mod['func_14431'] = func_14431
mod = relay.transform.InferType()(mod)
output = func_14431()
func_14432 = relay.Function([], output)
mutated_mod['func_14432'] = func_14432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_14440 = relay.TupleGetItem(func_5163_call(), 0)
call_14441 = relay.TupleGetItem(func_5164_call(), 0)
func_9302_call = mod.get_global_var('func_9302')
func_9306_call = mutated_mod.get_global_var('func_9306')
const_14460 = relay.const([-4,5,-10,-6,-1,-3,6,-10,3,-5,8,-4,7,-1,9,2,6,7,-4,-6,-3,-4,10,-10,-9,-8,10,-2,-3,-8,7,-4,-7,1,-3,8,8,6,5,-3,-2,-3,-2,1,-8,-8,9,9,4,-7,7,-4,9,-2,-6,3,5,10,1,-5,-8,-5,4,5,4,-6,9,-7,-7,-5,6,-9,-3,10,-8], dtype = "int8")#candidate|14460|(75,)|const|int8
var_14461 = relay.var("var_14461", dtype = "bool", shape = (1, 385))#candidate|14461|(1, 385)|var|bool
var_14462 = relay.var("var_14462", dtype = "int32", shape = ())#candidate|14462|()|var|int32
call_14459 = relay.TupleGetItem(func_9302_call(relay.reshape(const_14460.astype('int8'), [75,]), relay.reshape(var_14461.astype('bool'), [385,]), relay.reshape(var_14462.astype('int32'), []), ), 5)
call_14463 = relay.TupleGetItem(func_9306_call(relay.reshape(const_14460.astype('int8'), [75,]), relay.reshape(var_14461.astype('bool'), [385,]), relay.reshape(var_14462.astype('int32'), []), ), 5)
func_12787_call = mod.get_global_var('func_12787')
func_12789_call = mutated_mod.get_global_var('func_12789')
call_14479 = relay.TupleGetItem(func_12787_call(), 0)
call_14480 = relay.TupleGetItem(func_12789_call(), 0)
bop_14483 = relay.power(var_14462.astype('float64'), var_14461.astype('float64')) # shape=(1, 385)
uop_14499 = relay.log10(call_14479.astype('float64')) # shape=(12, 1, 14)
uop_14501 = relay.log10(call_14480.astype('float64')) # shape=(12, 1, 14)
output = relay.Tuple([call_14440,call_14459,const_14460,bop_14483,uop_14499,])
output2 = relay.Tuple([call_14441,call_14463,const_14460,bop_14483,uop_14501,])
func_14505 = relay.Function([var_14461,var_14462,], output)
mod['func_14505'] = func_14505
mod = relay.transform.InferType()(mod)
var_14506 = relay.var("var_14506", dtype = "bool", shape = (1, 385))#candidate|14506|(1, 385)|var|bool
var_14507 = relay.var("var_14507", dtype = "int32", shape = ())#candidate|14507|()|var|int32
output = func_14505(var_14506,var_14507,)
func_14508 = relay.Function([var_14506,var_14507,], output)
mutated_mod['func_14508'] = func_14508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5520_call = mod.get_global_var('func_5520')
func_5522_call = mutated_mod.get_global_var('func_5522')
call_14513 = relay.TupleGetItem(func_5520_call(), 1)
call_14514 = relay.TupleGetItem(func_5522_call(), 1)
output = call_14513
output2 = call_14514
func_14519 = relay.Function([], output)
mod['func_14519'] = func_14519
mod = relay.transform.InferType()(mod)
output = func_14519()
func_14520 = relay.Function([], output)
mutated_mod['func_14520'] = func_14520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5087_call = mod.get_global_var('func_5087')
func_5089_call = mutated_mod.get_global_var('func_5089')
call_14521 = func_5087_call()
call_14522 = func_5087_call()
func_3294_call = mod.get_global_var('func_3294')
func_3299_call = mutated_mod.get_global_var('func_3299')
var_14538 = relay.var("var_14538", dtype = "int32", shape = (120,))#candidate|14538|(120,)|var|int32
var_14539 = relay.var("var_14539", dtype = "bool", shape = ())#candidate|14539|()|var|bool
const_14540 = relay.const([True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,True], dtype = "bool")#candidate|14540|(385,)|const|bool
call_14537 = relay.TupleGetItem(func_3294_call(relay.reshape(var_14538.astype('int32'), [4, 15, 2]), relay.reshape(var_14538.astype('int32'), [4, 15, 2]), relay.reshape(var_14539.astype('bool'), []), relay.reshape(const_14540.astype('bool'), [385,]), ), 1)
call_14541 = relay.TupleGetItem(func_3299_call(relay.reshape(var_14538.astype('int32'), [4, 15, 2]), relay.reshape(var_14538.astype('int32'), [4, 15, 2]), relay.reshape(var_14539.astype('bool'), []), relay.reshape(const_14540.astype('bool'), [385,]), ), 1)
func_6786_call = mod.get_global_var('func_6786')
func_6789_call = mutated_mod.get_global_var('func_6789')
call_14547 = relay.TupleGetItem(func_6786_call(relay.reshape(var_14539.astype('int32'), [])), 1)
call_14548 = relay.TupleGetItem(func_6789_call(relay.reshape(var_14539.astype('int32'), [])), 1)
output = relay.Tuple([call_14521,call_14537,var_14538,var_14539,const_14540,call_14547,])
output2 = relay.Tuple([call_14522,call_14541,var_14538,var_14539,const_14540,call_14548,])
func_14556 = relay.Function([var_14538,var_14539,], output)
mod['func_14556'] = func_14556
mod = relay.transform.InferType()(mod)
var_14557 = relay.var("var_14557", dtype = "int32", shape = (120,))#candidate|14557|(120,)|var|int32
var_14558 = relay.var("var_14558", dtype = "bool", shape = ())#candidate|14558|()|var|bool
output = func_14556(var_14557,var_14558,)
func_14559 = relay.Function([var_14557,var_14558,], output)
mutated_mod['func_14559'] = func_14559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11281_call = mod.get_global_var('func_11281')
func_11283_call = mutated_mod.get_global_var('func_11283')
call_14637 = func_11281_call()
call_14638 = func_11281_call()
func_14407_call = mod.get_global_var('func_14407')
func_14410_call = mutated_mod.get_global_var('func_14410')
const_14645 = relay.const([[6,2,8,-9,-1,8,1,7,-5,3,-6,-2,1,2,1],[10,4,5,4,-6,6,9,9,-1,-2,6,7,6,7,-7],[10,8,-1,-5,-6,-2,-5,2,-6,10,9,-6,6,-4,2],[1,-1,5,9,9,-2,-10,1,-1,-6,6,9,-2,6,5],[-9,1,5,-6,-7,-2,5,8,-5,-4,1,6,4,2,6]], dtype = "int8")#candidate|14645|(5, 15)|const|int8
call_14644 = relay.TupleGetItem(func_14407_call(relay.reshape(const_14645.astype('int8'), [5, 15])), 2)
call_14646 = relay.TupleGetItem(func_14410_call(relay.reshape(const_14645.astype('int8'), [5, 15])), 2)
func_7732_call = mod.get_global_var('func_7732')
func_7735_call = mutated_mod.get_global_var('func_7735')
call_14653 = relay.TupleGetItem(func_7732_call(relay.reshape(call_14644.astype('int8'), [])), 5)
call_14654 = relay.TupleGetItem(func_7735_call(relay.reshape(call_14644.astype('int8'), [])), 5)
func_10254_call = mod.get_global_var('func_10254')
func_10255_call = mutated_mod.get_global_var('func_10255')
call_14660 = relay.TupleGetItem(func_10254_call(), 0)
call_14661 = relay.TupleGetItem(func_10255_call(), 0)
output = relay.Tuple([call_14637,call_14644,const_14645,call_14653,call_14660,])
output2 = relay.Tuple([call_14638,call_14646,const_14645,call_14654,call_14661,])
func_14668 = relay.Function([], output)
mod['func_14668'] = func_14668
mod = relay.transform.InferType()(mod)
mutated_mod['func_14668'] = func_14668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14668_call = mutated_mod.get_global_var('func_14668')
call_14669 = func_14668_call()
output = call_14669
func_14670 = relay.Function([], output)
mutated_mod['func_14670'] = func_14670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10331_call = mod.get_global_var('func_10331')
func_10333_call = mutated_mod.get_global_var('func_10333')
call_14695 = func_10331_call()
call_14696 = func_10331_call()
output = call_14695
output2 = call_14696
func_14706 = relay.Function([], output)
mod['func_14706'] = func_14706
mod = relay.transform.InferType()(mod)
mutated_mod['func_14706'] = func_14706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14706_call = mutated_mod.get_global_var('func_14706')
call_14707 = func_14706_call()
output = call_14707
func_14708 = relay.Function([], output)
mutated_mod['func_14708'] = func_14708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10560_call = mod.get_global_var('func_10560')
func_10562_call = mutated_mod.get_global_var('func_10562')
call_14720 = relay.TupleGetItem(func_10560_call(), 0)
call_14721 = relay.TupleGetItem(func_10562_call(), 0)
output = relay.Tuple([call_14720,])
output2 = relay.Tuple([call_14721,])
func_14734 = relay.Function([], output)
mod['func_14734'] = func_14734
mod = relay.transform.InferType()(mod)
mutated_mod['func_14734'] = func_14734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14734_call = mutated_mod.get_global_var('func_14734')
call_14735 = func_14734_call()
output = call_14735
func_14736 = relay.Function([], output)
mutated_mod['func_14736'] = func_14736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7264_call = mod.get_global_var('func_7264')
func_7266_call = mutated_mod.get_global_var('func_7266')
call_14762 = relay.TupleGetItem(func_7264_call(), 2)
call_14763 = relay.TupleGetItem(func_7266_call(), 2)
output = relay.Tuple([call_14762,])
output2 = relay.Tuple([call_14763,])
func_14766 = relay.Function([], output)
mod['func_14766'] = func_14766
mod = relay.transform.InferType()(mod)
mutated_mod['func_14766'] = func_14766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14766_call = mutated_mod.get_global_var('func_14766')
call_14767 = func_14766_call()
output = call_14767
func_14768 = relay.Function([], output)
mutated_mod['func_14768'] = func_14768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9413_call = mod.get_global_var('func_9413')
func_9414_call = mutated_mod.get_global_var('func_9414')
call_14788 = relay.TupleGetItem(func_9413_call(), 1)
call_14789 = relay.TupleGetItem(func_9414_call(), 1)
func_3889_call = mod.get_global_var('func_3889')
func_3896_call = mutated_mod.get_global_var('func_3896')
const_14792 = relay.const([8,1,5,8,3,-5,-9,-10,4,6,-9,-9,9,1,-8,4,-8,-6,8,-1,4,-8,9,-1,-3,4,10,-8,7,-6,10,1,-5,-1,2,4,7,1,9,10,-1,-6,8,-9,-3,-10,-7,3,9,-6,7,7,3,10,1,6,4,2,-5,-7,-8,-1,7,6,9,4,-4,-10,10,9,-1,3,4,-9,8,7,-2,-2,2,4,-2,9,-1,10,-10,3,3,-9,3,8,-4,9,3,5,-1,-9,7,-6,-9,-10,-5,-2,-8,7,-7,-5,8,-6,-7,-8,-10,-9,7,5,-4,-4,-7,9,-5,7,9,-4,-7,-10,1,-1,7,10,-7,-7,-10,-2,-7,-2,-7,-6,-2,7,-1,2,-5,5,-4,5,7,-2,2,6,5,2,1,-2,6,-2,6,-9,8,-2,-8,-4,8,-4,2,-10,9,2,-9,3,-2,2,-1,-1,-6,1,-2,9,-3,-10,4,-3,-3,-5,9,-8,4,-1,5,-4,-4,7,10,-6,10,9,10,-8,-8,5,-2,-8,-7,3,-8,-2,-2,10,4,6,-6,9,8,8,2,-1,8,-3,8,-6,-3,-1,-7,6,9,-9,-10,10,6,3,-3,6,-6,6,-7,2,-1,4,6,-3,-5,-9,-9,-10,-6,6,-1,-3,-3,1,-1,9,-6,2,-2,-6,-5,9,-3,-2,-6,-10,-1,4,-2,-2,-7,-7,-4,6,3,-3,4,-4,-5,-8,5,7,-1,-9,-5,-5,4,7,10,3,3,4,2,-6,6,-9,2,-8,9,5,10,6,4,1,-7,7,-2,1,9,-4,-1,-6,1,7,1,3,4,5,-5,1,-1,-5,-9,1,-2,-3,-8,-8,-2,8,-7,-5,4,-8,-6,-2,5,-2,-2,2,-7,-10,5,3,-3,3,6,10,9,9,-4,4,10,6,8,9,5,10,5,9,8,9,-1,-4,-6,-8,7,2,8,1,-7,1,10,-4,-7,-5,7,9,-1,-10,5,7,-2,9,-6,5,-1,-7,-10,-5,4,-3,4,-10,-2,-1,-10,9,9,3,-8,-1,7,-9,-9,-7,6,5,-10,4,7,9,6,-1,-5,2,-5,2,3,10,-6,6,-6,2,7,-8,-3,-2,-4,-6,7,2,-3,5,-6,7,-3,5,-5,5,-5,6,1,-1,-1,6,8,-2,-2,6,-2,-1,-5,4,5,4,4,2,-6,-10,1,-6,6,10,5,-6,-9,1,5,-6,5,-2,7,-4,-8,-1,2,8,7,4,5,8,8,8,5,4,3,8,-2,5,7,-9,-7,-5,-6,-8,-2,3,-8,-3,-6,-2,5,-8,-10,-4,-1,6,-1,-2,-1,-8,-7,-2,3,-7,-2,-7,-8,-3,10,-5,-2,8,-1,10,1,4,-2,-4,-2,5,9,-3,9,-5,-5,9,-1,-1,-9,6,-1,-9,-9,-8,-3,6,-7,1,5,4,-8,7,3,-4,9,2,4,-2,4,3,3,3,10,-5,-2,5,3,9,-10,-8,-5,-8,2,2,-10,-5,-6,-2,-2,1,5,4,-10,5,6,-6,2,9,-1,-9,-6,3,-5,-10,1,3,-9,-5,-9,-8,4,7,-7,-1,9,-1,-6,-7,-9,-10,-10,8,9,8,-8,7,2,7,2,10,-7,6,-5,-6,2,9,-8,-1,4,9,8,1,1,1,-7,-7,-2,-10,8,5,2,3,-1,-9,8,5,5,7,-6,-9,9,-7,-9,-10,-5,-8,-7,8,-7,-2,-6,-10,3,-5,6,-1,-10,-6,7,5,-8,-6,-5,-2,-1,7,1,8,-9,-4,7,-1,-4,-5,4,-1,-4,-9,1,-1,-8,-2,10,-5,-1,3,2,4,-1,-7,10,7,-4,2,10,2,6,6,-1,4,-8,3,-10,-8,-7,-6,-2,10,-1,-3,-8,8,-8,1,-3,-3,-1,-3,-3,-2,3,-7,2,10,10,6,-8,-3,7,6,-8,-3,7,-7,-6,-3,8,-5,-5,-8,8,-4,-6,-3,-10,7,9,-6,7,-9,4,-3,1,-7,-2,-5,8,-9,6,-9,2,-4,-7,9,4,6,-1,-2,-8,-3,3,1,5,8,-3,-10,3,5,-4,4,4,8,1,-10,-1,9,10,7,-1,9,-2,-6,2,-6,8,6,10,-9,-4,-9,-3,10,8,9,10,3,6,8,-5,-6,-2,6,6,6,6,6,-4,1,2,3,-7,-6,8,-10,-6,-5,-9,-4,-8,-7,-6,4,-9,-3,-6,-5,-5,-5,-2,-7,3,9,-4,-7,3,-7,-6,8,5,-6,-10,-3,9,9,4,2,-7,-9,7,-3,9,9,10,-3,-3,-7,10,-7,7,4,3,9,10,10,4,-8,-1,10,-6,-6,4,1,3,-4,-5,4,-6,-7,2,2,9,9,-8,-3,6,3,-5,3,-4,10,7,7,-8,-10,2,-6,-3,-4,6,5,-9,1,3,-3,2,6,9,1,-8,10,4,-2,3,-5,-3,2,-9,5,-6,8], dtype = "int32")#candidate|14792|(936,)|const|int32
var_14793 = relay.var("var_14793", dtype = "bool", shape = ())#candidate|14793|()|var|bool
var_14794 = relay.var("var_14794", dtype = "float32", shape = (715,))#candidate|14794|(715,)|var|float32
var_14795 = relay.var("var_14795", dtype = "int32", shape = (81,))#candidate|14795|(81,)|var|int32
const_14796 = relay.const([[8,5,-6,-8,4],[7,-6,-1,-1,-6],[7,-4,6,1,7],[9,3,-9,4,-9],[3,-6,-4,-3,-5],[1,2,-2,5,4],[5,9,-9,9,6],[-10,4,5,4,5],[6,3,3,8,-7],[10,-6,-3,7,-6],[10,1,5,1,5],[-1,4,-1,-7,5],[-1,-9,-5,-2,2],[5,-8,-5,-2,2],[-4,8,-5,5,8]], dtype = "int8")#candidate|14796|(15, 5)|const|int8
call_14791 = relay.TupleGetItem(func_3889_call(relay.reshape(const_14792.astype('int32'), [8, 9, 13]), relay.reshape(var_14793.astype('bool'), []), relay.reshape(var_14794.astype('float32'), [715,]), relay.reshape(var_14795.astype('int32'), [81,]), relay.reshape(const_14796.astype('int8'), [75,]), ), 4)
call_14797 = relay.TupleGetItem(func_3896_call(relay.reshape(const_14792.astype('int32'), [8, 9, 13]), relay.reshape(var_14793.astype('bool'), []), relay.reshape(var_14794.astype('float32'), [715,]), relay.reshape(var_14795.astype('int32'), [81,]), relay.reshape(const_14796.astype('int8'), [75,]), ), 4)
output = relay.Tuple([call_14788,call_14791,const_14792,var_14793,var_14794,var_14795,const_14796,])
output2 = relay.Tuple([call_14789,call_14797,const_14792,var_14793,var_14794,var_14795,const_14796,])
func_14801 = relay.Function([var_14793,var_14794,var_14795,], output)
mod['func_14801'] = func_14801
mod = relay.transform.InferType()(mod)
mutated_mod['func_14801'] = func_14801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14801_call = mutated_mod.get_global_var('func_14801')
var_14803 = relay.var("var_14803", dtype = "bool", shape = ())#candidate|14803|()|var|bool
var_14804 = relay.var("var_14804", dtype = "float32", shape = (715,))#candidate|14804|(715,)|var|float32
var_14805 = relay.var("var_14805", dtype = "int32", shape = (81,))#candidate|14805|(81,)|var|int32
call_14802 = func_14801_call(var_14803,var_14804,var_14805,)
output = call_14802
func_14806 = relay.Function([var_14803,var_14804,var_14805,], output)
mutated_mod['func_14806'] = func_14806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9202_call = mod.get_global_var('func_9202')
func_9203_call = mutated_mod.get_global_var('func_9203')
call_14859 = relay.TupleGetItem(func_9202_call(), 0)
call_14860 = relay.TupleGetItem(func_9203_call(), 0)
func_8219_call = mod.get_global_var('func_8219')
func_8220_call = mutated_mod.get_global_var('func_8220')
call_14871 = func_8219_call()
call_14872 = func_8219_call()
output = relay.Tuple([call_14859,call_14871,])
output2 = relay.Tuple([call_14860,call_14872,])
func_14900 = relay.Function([], output)
mod['func_14900'] = func_14900
mod = relay.transform.InferType()(mod)
mutated_mod['func_14900'] = func_14900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14900_call = mutated_mod.get_global_var('func_14900')
call_14901 = func_14900_call()
output = call_14901
func_14902 = relay.Function([], output)
mutated_mod['func_14902'] = func_14902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14734_call = mod.get_global_var('func_14734')
func_14736_call = mutated_mod.get_global_var('func_14736')
call_14903 = relay.TupleGetItem(func_14734_call(), 0)
call_14904 = relay.TupleGetItem(func_14736_call(), 0)
output = relay.Tuple([call_14903,])
output2 = relay.Tuple([call_14904,])
func_14923 = relay.Function([], output)
mod['func_14923'] = func_14923
mod = relay.transform.InferType()(mod)
mutated_mod['func_14923'] = func_14923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14923_call = mutated_mod.get_global_var('func_14923')
call_14924 = func_14923_call()
output = call_14924
func_14925 = relay.Function([], output)
mutated_mod['func_14925'] = func_14925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14923_call = mod.get_global_var('func_14923')
func_14925_call = mutated_mod.get_global_var('func_14925')
call_14976 = relay.TupleGetItem(func_14923_call(), 0)
call_14977 = relay.TupleGetItem(func_14925_call(), 0)
func_10293_call = mod.get_global_var('func_10293')
func_10296_call = mutated_mod.get_global_var('func_10296')
const_14992 = relay.const([[8,9,10,10,2,4,8,2,-5,-3,2,-9,-4,6,6],[-8,-5,-8,1,-9,-3,-8,-10,8,-3,-6,-2,1,-5,5],[-1,6,10,-1,1,-5,6,7,4,-1,-4,-2,-2,-2,2],[-10,10,10,-1,-2,4,9,1,-6,-9,3,-6,2,10,8],[-1,8,6,3,1,-2,-1,7,-4,6,-9,-1,-4,4,-8]], dtype = "int8")#candidate|14992|(5, 15)|const|int8
const_14993 = relay.const([False,True,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False], dtype = "bool")#candidate|14993|(385,)|const|bool
call_14991 = relay.TupleGetItem(func_10293_call(relay.reshape(const_14992.astype('int8'), [75,]), relay.reshape(const_14993.astype('bool'), [385,]), ), 2)
call_14994 = relay.TupleGetItem(func_10296_call(relay.reshape(const_14992.astype('int8'), [75,]), relay.reshape(const_14993.astype('bool'), [385,]), ), 2)
output = relay.Tuple([call_14976,call_14991,const_14992,const_14993,])
output2 = relay.Tuple([call_14977,call_14994,const_14992,const_14993,])
func_15020 = relay.Function([], output)
mod['func_15020'] = func_15020
mod = relay.transform.InferType()(mod)
mutated_mod['func_15020'] = func_15020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15020_call = mutated_mod.get_global_var('func_15020')
call_15021 = func_15020_call()
output = call_15021
func_15022 = relay.Function([], output)
mutated_mod['func_15022'] = func_15022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13108_call = mod.get_global_var('func_13108')
func_13110_call = mutated_mod.get_global_var('func_13110')
call_15052 = relay.TupleGetItem(func_13108_call(), 1)
call_15053 = relay.TupleGetItem(func_13110_call(), 1)
output = call_15052
output2 = call_15053
func_15056 = relay.Function([], output)
mod['func_15056'] = func_15056
mod = relay.transform.InferType()(mod)
mutated_mod['func_15056'] = func_15056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15056_call = mutated_mod.get_global_var('func_15056')
call_15057 = func_15056_call()
output = call_15057
func_15058 = relay.Function([], output)
mutated_mod['func_15058'] = func_15058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8917_call = mod.get_global_var('func_8917')
func_8919_call = mutated_mod.get_global_var('func_8919')
call_15167 = func_8917_call()
call_15168 = func_8917_call()
output = call_15167
output2 = call_15168
func_15181 = relay.Function([], output)
mod['func_15181'] = func_15181
mod = relay.transform.InferType()(mod)
mutated_mod['func_15181'] = func_15181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15181_call = mutated_mod.get_global_var('func_15181')
call_15182 = func_15181_call()
output = call_15182
func_15183 = relay.Function([], output)
mutated_mod['func_15183'] = func_15183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8173_call = mod.get_global_var('func_8173')
func_8174_call = mutated_mod.get_global_var('func_8174')
call_15207 = relay.TupleGetItem(func_8173_call(), 1)
call_15208 = relay.TupleGetItem(func_8174_call(), 1)
func_10739_call = mod.get_global_var('func_10739')
func_10742_call = mutated_mod.get_global_var('func_10742')
const_15234 = relay.const([True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True], dtype = "bool")#candidate|15234|(385,)|const|bool
var_15235 = relay.var("var_15235", dtype = "int64", shape = (120,))#candidate|15235|(120,)|var|int64
call_15233 = relay.TupleGetItem(func_10739_call(relay.reshape(const_15234.astype('bool'), [385,]), relay.reshape(var_15235.astype('int64'), [120, 1]), ), 2)
call_15236 = relay.TupleGetItem(func_10742_call(relay.reshape(const_15234.astype('bool'), [385,]), relay.reshape(var_15235.astype('int64'), [120, 1]), ), 2)
uop_15241 = relay.exp(call_15233.astype('float32')) # shape=(11, 5, 7)
uop_15243 = relay.exp(call_15236.astype('float32')) # shape=(11, 5, 7)
func_14900_call = mod.get_global_var('func_14900')
func_14902_call = mutated_mod.get_global_var('func_14902')
call_15254 = relay.TupleGetItem(func_14900_call(), 1)
call_15255 = relay.TupleGetItem(func_14902_call(), 1)
uop_15265 = relay.sqrt(const_15234.astype('float32')) # shape=(385,)
uop_15275 = relay.asin(uop_15265.astype('float32')) # shape=(385,)
output = relay.Tuple([call_15207,var_15235,uop_15241,call_15254,uop_15275,])
output2 = relay.Tuple([call_15208,var_15235,uop_15243,call_15255,uop_15275,])
F = relay.Function([var_15235,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_15235,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

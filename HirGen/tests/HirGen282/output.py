import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_75 = relay.var("var_75", dtype = "uint16", shape = (16, 5, 8))#candidate|75|(16, 5, 8)|var|uint16
const_76 = relay.const([[[-6,-7,-1,-7,-7,-7,-6,-1],[-7,3,10,-6,1,8,-9,-3],[-10,-5,-5,-7,3,9,4,8],[-10,-7,-3,7,-2,-5,8,8],[-10,10,-5,-8,-10,-8,1,-6]],[[-8,-3,-5,-6,-3,-10,9,-10],[10,6,8,-6,3,1,-1,-6],[9,2,10,-2,9,6,7,10],[-8,5,-10,-4,-2,-8,-3,1],[-4,7,3,6,9,-3,-10,4]],[[-7,3,9,-2,-4,5,7,-9],[-1,4,6,-7,4,1,-2,3],[5,9,-5,6,-3,5,9,2],[10,5,8,1,3,-9,9,4],[-9,-10,6,-2,-9,3,-2,-9]],[[1,-10,-9,4,-3,6,-6,-7],[-5,-7,-3,4,-5,1,1,2],[5,2,3,5,-10,9,3,-9],[3,1,-7,9,1,-1,-1,6],[-3,1,6,-1,8,4,-5,2]],[[-1,5,10,-9,-5,5,1,3],[10,9,1,6,-1,-3,-3,6],[9,-1,-5,-10,-1,6,6,8],[-3,-6,1,6,-2,10,-5,9],[-8,-1,-1,5,7,3,-1,3]],[[-10,-10,1,-2,-6,-8,9,-3],[6,-1,-8,-8,-8,-10,4,6],[-2,-6,4,-6,2,-1,1,-9],[-9,-5,-7,-4,4,7,-7,3],[-9,4,8,-4,-4,-1,-9,4]],[[-3,7,-10,6,-4,3,5,-3],[-4,10,9,-10,10,-7,-4,-9],[10,8,8,5,6,-5,3,-5],[-7,6,-8,-8,-2,7,10,4],[1,-9,3,-1,1,9,-8,-10]],[[7,10,4,4,-6,1,-7,3],[6,-9,7,7,-7,-1,-1,9],[-7,-5,-10,-7,10,-10,5,-8],[-7,-2,-8,4,7,2,8,-6],[-2,-8,-2,7,-4,-2,2,2]],[[7,-8,2,2,-7,7,-6,10],[8,10,-2,-1,-6,5,-2,-1],[-10,-4,1,4,-10,3,8,4],[1,5,1,-8,-10,8,4,1],[-8,-8,10,-7,7,-6,3,-10]],[[-4,-6,2,3,-10,3,10,-8],[8,-7,2,-1,-4,-3,-7,-9],[-1,-5,8,-4,-10,-2,3,-1],[8,1,2,8,-1,2,5,8],[-4,-8,4,3,-10,-4,-5,-6]],[[-5,-2,1,2,10,-9,-3,8],[1,-2,-9,-8,-9,4,9,8],[6,-10,9,-10,-8,-1,-7,2],[6,-2,-10,4,5,5,7,-10],[3,-2,4,9,-1,4,-1,6]],[[10,-4,8,-10,-7,9,-6,7],[-8,2,-8,-3,1,-7,-4,2],[10,-4,6,-3,9,-5,8,-6],[10,8,9,9,3,-4,10,2],[-4,10,2,-2,-5,8,10,2]],[[2,-8,-3,10,-4,4,-2,5],[3,-5,1,8,6,-1,-1,-6],[3,3,2,4,8,1,-2,-6],[-4,-2,10,-10,7,3,-2,-9],[5,-5,-5,-3,6,-1,-2,5]],[[-9,8,-8,-6,-10,3,9,9],[5,-9,2,1,7,6,10,5],[2,-9,-2,7,3,3,3,-4],[-5,-9,8,-5,-4,6,4,-5],[5,-7,6,-10,-4,-3,-7,5]],[[1,-9,4,5,4,-3,-1,5],[2,-6,5,-9,8,-6,-8,-9],[5,-1,-3,-8,-6,-7,1,4],[3,-2,-5,-7,-5,-10,-4,-4],[-8,-9,-1,-7,-9,-5,-8,4]],[[10,-10,-10,-10,10,8,8,4],[-8,6,-9,6,9,10,10,-9],[-3,5,-5,-6,4,8,7,7],[-6,-5,-6,-5,-2,-4,-1,5],[3,-7,5,-5,1,-1,7,4]]], dtype = "uint16")#candidate|76|(16, 5, 8)|const|uint16
bop_77 = relay.less_equal(var_75.astype('bool'), relay.reshape(const_76.astype('bool'), relay.shape_of(var_75))) # shape=(16, 5, 8)
uop_80 = relay.tan(const_76.astype('float32')) # shape=(16, 5, 8)
output = relay.Tuple([bop_77,uop_80,])
output2 = relay.Tuple([bop_77,uop_80,])
func_89 = relay.Function([var_75,], output)
mod['func_89'] = func_89
mod = relay.transform.InferType()(mod)
mutated_mod['func_89'] = func_89
mutated_mod = relay.transform.InferType()(mutated_mod)
var_90 = relay.var("var_90", dtype = "uint16", shape = (16, 5, 8))#candidate|90|(16, 5, 8)|var|uint16
func_89_call = mutated_mod.get_global_var('func_89')
call_91 = func_89_call(var_90)
output = call_91
func_92 = relay.Function([var_90], output)
mutated_mod['func_92'] = func_92
mutated_mod = relay.transform.InferType()(mutated_mod)
var_116 = relay.var("var_116", dtype = "bool", shape = (16, 4, 8))#candidate|116|(16, 4, 8)|var|bool
var_117 = relay.var("var_117", dtype = "bool", shape = (16, 4, 8))#candidate|117|(16, 4, 8)|var|bool
bop_118 = relay.logical_and(var_116.astype('bool'), relay.reshape(var_117.astype('bool'), relay.shape_of(var_116))) # shape=(16, 4, 8)
output = relay.Tuple([bop_118,])
output2 = relay.Tuple([bop_118,])
func_125 = relay.Function([var_116,var_117,], output)
mod['func_125'] = func_125
mod = relay.transform.InferType()(mod)
mutated_mod['func_125'] = func_125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_125_call = mutated_mod.get_global_var('func_125')
var_127 = relay.var("var_127", dtype = "bool", shape = (16, 4, 8))#candidate|127|(16, 4, 8)|var|bool
var_128 = relay.var("var_128", dtype = "bool", shape = (16, 4, 8))#candidate|128|(16, 4, 8)|var|bool
call_126 = func_125_call(var_127,var_128,)
output = call_126
func_129 = relay.Function([var_127,var_128,], output)
mutated_mod['func_129'] = func_129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_274 = relay.var("var_274", dtype = "float32", shape = (5, 10, 3))#candidate|274|(5, 10, 3)|var|float32
uop_275 = relay.cosh(var_274.astype('float32')) # shape=(5, 10, 3)
output = relay.Tuple([uop_275,])
output2 = relay.Tuple([uop_275,])
func_281 = relay.Function([var_274,], output)
mod['func_281'] = func_281
mod = relay.transform.InferType()(mod)
mutated_mod['func_281'] = func_281
mutated_mod = relay.transform.InferType()(mutated_mod)
var_282 = relay.var("var_282", dtype = "float32", shape = (5, 10, 3))#candidate|282|(5, 10, 3)|var|float32
func_281_call = mutated_mod.get_global_var('func_281')
call_283 = func_281_call(var_282)
output = call_283
func_284 = relay.Function([var_282], output)
mutated_mod['func_284'] = func_284
mutated_mod = relay.transform.InferType()(mutated_mod)
var_329 = relay.var("var_329", dtype = "uint64", shape = (7, 5, 16))#candidate|329|(7, 5, 16)|var|uint64
var_330 = relay.var("var_330", dtype = "uint64", shape = (7, 5, 16))#candidate|330|(7, 5, 16)|var|uint64
bop_331 = relay.multiply(var_329.astype('uint64'), relay.reshape(var_330.astype('uint64'), relay.shape_of(var_329))) # shape=(7, 5, 16)
output = bop_331
output2 = bop_331
func_340 = relay.Function([var_329,var_330,], output)
mod['func_340'] = func_340
mod = relay.transform.InferType()(mod)
var_341 = relay.var("var_341", dtype = "uint64", shape = (7, 5, 16))#candidate|341|(7, 5, 16)|var|uint64
var_342 = relay.var("var_342", dtype = "uint64", shape = (7, 5, 16))#candidate|342|(7, 5, 16)|var|uint64
output = func_340(var_341,var_342,)
func_343 = relay.Function([var_341,var_342,], output)
mutated_mod['func_343'] = func_343
mutated_mod = relay.transform.InferType()(mutated_mod)
const_358 = relay.const([[[2.984331,6.272830,1.543841,3.591580,-5.020320,1.537376,2.935349,8.341764,4.774668,-6.676738,-2.741623],[7.293394,7.833547,-6.593586,-6.830961,-3.333880,-2.679715,-0.658954,-9.996700,-6.994480,6.542142,-1.007483],[-0.833874,2.815457,6.479239,-1.213597,-1.746340,-1.255456,7.732613,1.163441,-4.399008,7.948741,0.066097],[1.381596,-6.126479,-3.165110,9.445788,-9.490148,-1.257155,-8.865718,4.735941,-0.596061,-9.124103,-9.287268]],[[8.990495,6.123549,8.327187,-5.111639,-4.310780,6.353782,2.749300,9.480848,-3.451846,4.065190,2.328434],[-7.305223,-8.167982,-0.927538,-1.724642,-3.086655,-5.456765,6.149474,-0.884915,-9.889551,1.977069,8.230060],[-9.917506,-6.183202,5.046899,6.561407,0.231760,8.717413,-9.190426,-0.826979,-8.731907,1.211875,-5.794069],[6.191991,-5.817287,5.446858,2.665429,9.200549,1.818739,-0.706384,7.600184,5.111721,4.009529,-2.992742]],[[4.902168,-0.480867,0.143479,-1.329572,8.368872,-3.836516,-0.311350,4.683713,0.939372,6.833988,-0.001378],[3.823021,5.811880,-2.822436,1.261638,6.890535,5.657287,3.162587,2.908264,-7.075065,9.528872,-5.395133],[3.657503,9.949114,-5.172003,7.690107,-3.288117,-4.356608,-2.795538,-0.726770,0.999482,-5.709486,-6.802045],[2.182429,0.880713,-7.802306,2.278251,-5.772091,-0.712475,1.349830,-9.516110,-1.410304,0.438602,6.503525]],[[2.041342,5.066532,8.023258,-3.878807,4.995942,4.699587,8.030078,0.124318,-5.188215,0.865940,8.102589],[-4.244650,-4.907828,-6.908247,7.136232,4.715214,-9.605103,-6.225225,-4.885043,7.911583,-8.961336,-9.335394],[-8.745137,-5.339676,-4.184784,0.339934,-4.266518,1.654632,-7.678789,-7.041981,5.519963,9.363199,7.246659],[7.366731,-4.762513,3.429226,7.668054,-2.138045,-2.381425,0.788295,3.563980,-0.683508,-7.918792,-9.312616]],[[-1.270455,-8.175270,-9.222820,4.526345,9.132515,7.227760,7.617757,7.598950,-8.189725,-5.913743,-2.557814],[7.907651,-9.918178,-9.687434,-6.943323,-0.155443,1.911977,-3.182038,-3.944376,5.672386,8.229005,1.055295],[-4.719382,6.169438,-1.537720,9.107489,3.530461,-6.086464,-9.234956,-5.184635,5.177228,4.389109,-6.380100],[-5.255534,0.102324,-6.207528,-6.544391,4.825133,-0.408042,-8.031801,-5.842606,-9.248432,-3.647025,-2.343173]],[[0.776101,8.563028,6.241953,8.693541,5.239159,-5.972322,-2.627779,6.720339,-6.776511,3.659025,7.060078],[9.284350,3.337057,-3.908993,8.852344,-3.293788,5.692826,9.586441,8.746857,-0.396762,7.432888,0.916606],[-4.003865,-5.280594,-2.691913,7.943853,0.464205,1.105946,-2.623377,2.474242,-0.068757,-6.179191,3.132784],[-5.778553,0.392634,9.078763,1.979839,-2.399954,8.904741,-5.870015,-4.135352,-5.020670,2.235616,-5.845087]]], dtype = "float32")#candidate|358|(6, 4, 11)|const|float32
uop_359 = relay.sinh(const_358.astype('float32')) # shape=(6, 4, 11)
func_340_call = mod.get_global_var('func_340')
func_343_call = mutated_mod.get_global_var('func_343')
var_365 = relay.var("var_365", dtype = "uint64", shape = (560,))#candidate|365|(560,)|var|uint64
call_364 = func_340_call(relay.reshape(var_365.astype('uint64'), [7, 5, 16]), relay.reshape(var_365.astype('uint64'), [7, 5, 16]), )
call_366 = func_340_call(relay.reshape(var_365.astype('uint64'), [7, 5, 16]), relay.reshape(var_365.astype('uint64'), [7, 5, 16]), )
func_125_call = mod.get_global_var('func_125')
func_129_call = mutated_mod.get_global_var('func_129')
var_384 = relay.var("var_384", dtype = "bool", shape = (512,))#candidate|384|(512,)|var|bool
call_383 = relay.TupleGetItem(func_125_call(relay.reshape(var_384.astype('bool'), [16, 4, 8]), relay.reshape(var_384.astype('bool'), [16, 4, 8]), ), 0)
call_385 = relay.TupleGetItem(func_129_call(relay.reshape(var_384.astype('bool'), [16, 4, 8]), relay.reshape(var_384.astype('bool'), [16, 4, 8]), ), 0)
const_386 = relay.const([[[-8.780889,-2.579964,-7.349065,-3.367411,3.064891,-0.345661,6.085507,2.575357,-3.081246,-4.040750,-7.345542],[3.162892,3.752252,7.825250,-3.084489,-3.716452,0.502032,-4.178775,4.972269,6.580364,2.566471,-2.717859],[8.094725,3.658542,5.447378,0.547844,-5.523852,-9.690140,-2.564517,8.905136,-6.234393,9.476249,-6.860875],[0.148564,-0.115418,-2.636335,-5.834945,6.784647,-9.867733,-9.209662,-9.481169,-6.982519,-2.167300,-9.505236]],[[-7.595092,-6.491584,-1.114805,-3.273064,1.386736,-5.758973,-5.532899,8.899522,4.414686,-9.578527,4.675714],[6.817572,-3.706633,-9.254051,-7.605845,8.373162,-4.933645,0.342684,-8.666293,9.706171,3.750358,0.454639],[2.745049,9.490591,3.439643,-2.963533,-3.375770,-2.148981,7.413162,7.610769,-4.358706,-9.410510,-1.368271],[1.746329,0.982262,-9.018553,-9.490587,6.415586,-1.582053,0.986411,-7.288786,-3.839407,9.657093,-4.762716]],[[-1.849375,4.841354,-6.276028,9.564740,1.364164,0.247864,-5.133549,-9.619731,-2.118262,-1.995883,-9.773957],[-7.207255,7.347858,6.490259,-6.305380,-1.127518,4.999505,9.755749,2.934426,4.883434,0.115188,-4.368826],[-9.777099,-8.207636,-7.300666,-6.374519,-3.426947,9.434318,6.586322,7.737403,-2.551328,-5.767335,6.515976],[-1.185651,5.345086,5.657609,-0.409282,-4.041775,-6.405537,4.117655,8.911452,5.847734,3.729584,4.386204]],[[0.809726,-1.945020,-7.142498,-6.814597,-2.483950,1.652851,-7.413865,-1.859718,-2.755206,7.404631,6.672344],[0.306774,-3.288006,1.731397,1.322619,1.502083,2.147141,4.076166,-5.229621,5.256461,-8.410133,-9.262518],[9.477343,5.563716,6.477612,5.875520,-6.562623,8.050672,3.110751,-0.966184,-5.006211,-0.864537,2.761375],[2.092333,1.290423,-4.801248,8.231331,-1.024056,1.329967,-1.157705,-7.533449,1.253778,-1.369832,-6.207473]],[[9.961487,1.486421,-8.909403,5.366178,7.816680,5.863443,2.168529,-9.365971,1.661325,-7.587183,-3.740505],[0.830178,-6.104152,2.708919,-2.211396,-4.962727,-0.955057,6.875467,3.422620,-7.892300,4.718013,9.104047],[4.924908,-3.876773,-7.452072,9.074181,5.953825,-9.748216,-7.285426,4.429997,0.235343,-9.181476,1.652173],[-9.209690,1.139708,0.705310,-0.982089,1.799798,-0.583886,-4.865733,-6.439486,6.355537,7.911515,7.074673]],[[-1.297695,-7.058007,5.290376,9.624728,-7.023811,9.532429,4.499643,-7.996161,-7.066155,9.358037,5.811279],[9.493533,-1.967642,-1.408155,-0.661545,2.278497,-8.568847,-7.087396,-4.927284,-1.275419,3.398411,-1.877730],[-8.214391,0.314166,6.357852,3.445312,-3.087291,-6.855377,1.919200,-6.787353,3.764513,-9.229518,4.299588],[3.590871,4.057064,-3.904826,0.769278,5.633486,-7.605290,-1.472369,9.626972,-9.719053,1.130360,-9.094148]]], dtype = "float32")#candidate|386|(6, 4, 11)|const|float32
bop_387 = relay.greater_equal(uop_359.astype('bool'), relay.reshape(const_386.astype('bool'), relay.shape_of(uop_359))) # shape=(6, 4, 11)
output = relay.Tuple([call_364,var_365,call_383,var_384,bop_387,])
output2 = relay.Tuple([call_366,var_365,call_385,var_384,bop_387,])
func_397 = relay.Function([var_365,var_384,], output)
mod['func_397'] = func_397
mod = relay.transform.InferType()(mod)
mutated_mod['func_397'] = func_397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_397_call = mutated_mod.get_global_var('func_397')
var_399 = relay.var("var_399", dtype = "uint64", shape = (560,))#candidate|399|(560,)|var|uint64
var_400 = relay.var("var_400", dtype = "bool", shape = (512,))#candidate|400|(512,)|var|bool
call_398 = func_397_call(var_399,var_400,)
output = call_398
func_401 = relay.Function([var_399,var_400,], output)
mutated_mod['func_401'] = func_401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_692 = relay.var("var_692", dtype = "float32", shape = (5, 12, 5))#candidate|692|(5, 12, 5)|var|float32
const_693 = relay.const([[[-4.447717,9.028080,-7.453592,-2.916964,1.100670],[-1.706943,-2.295834,-4.602814,6.950034,-9.813413],[8.582606,8.936073,1.927174,-2.978922,6.447498],[2.345200,1.003282,-9.105285,4.999081,3.622330],[-6.480320,0.020665,5.959650,-5.121512,-3.656305],[-5.907980,-0.389037,5.032480,-1.658469,-0.498246],[5.696868,-4.895876,-5.259858,2.974020,5.368571],[9.308462,-2.553160,8.285221,-9.366201,-2.426441],[-2.246415,-2.317884,-8.427534,-7.358853,4.898951],[8.052666,-4.157822,-8.851816,-1.827243,4.366343],[-5.148807,2.930826,9.543180,-3.166403,-2.466340],[-1.448206,4.040347,-3.488627,-0.388757,-2.280860]],[[1.658883,4.617176,7.468709,0.191768,2.812638],[-2.256337,1.082000,-9.958842,-7.362509,-3.699183],[6.558420,9.606792,8.037451,1.632800,6.535041],[-8.952853,7.493298,-5.511330,4.473699,-4.161299],[-5.383565,-7.534916,0.891669,-7.417445,8.968914],[-9.421841,6.365809,9.069564,3.263987,8.869386],[-8.683087,-8.629355,2.604901,2.833565,-0.606321],[1.253230,-4.775088,-6.713141,-8.943784,5.945213],[3.107628,-8.014333,1.646399,1.336044,-8.573830],[5.009918,-0.405741,-6.730809,5.114808,-5.438497],[-3.492266,-1.408822,5.051820,-2.446348,-4.119203],[8.569604,6.958274,-8.605346,9.065951,-5.514611]],[[-4.118466,8.405742,1.384527,-3.181037,5.089158],[-1.661863,-4.027045,-9.916526,7.549258,9.062765],[-9.758450,9.015854,3.998856,-4.539957,2.318084],[-6.913787,4.224615,9.642627,-6.265314,3.556086],[-7.703269,0.998463,-6.572097,2.656611,-2.950571],[9.686159,1.513686,-4.701260,7.541806,-3.736298],[1.328202,-5.467643,-6.067217,4.220254,-9.081287],[-4.543004,-3.335804,6.328438,4.269373,-7.402339],[-1.053648,-8.321511,-3.298898,-5.576717,8.556530],[3.441407,1.193038,5.612732,1.821373,-3.465636],[8.256599,-0.369606,-5.075426,9.431982,-9.305942],[6.596306,3.082848,1.014867,2.425333,2.715251]],[[-3.138528,0.249299,8.732293,8.253428,-9.510942],[-8.764726,-9.687961,7.528913,-9.616499,-3.401347],[5.935967,6.480745,1.737304,-2.981622,-5.526241],[9.763990,-7.967968,9.940987,-7.639885,-9.432343],[-6.265807,-5.214460,-6.482833,-2.920182,-8.568066],[5.530229,-9.420709,0.981459,4.189842,-3.027763],[0.108401,-4.340913,2.828903,5.921850,-7.490843],[-1.392085,-4.827648,8.358870,-7.769645,-2.887961],[-7.255131,-5.369789,-0.932223,-4.632025,-2.578402],[-5.917236,2.116993,6.827862,-8.318749,-5.299732],[9.003853,0.659119,5.006288,-0.569531,-3.263342],[8.795672,-9.489289,-6.587823,2.032498,8.016243]],[[1.700772,2.555544,-4.643006,1.675979,-9.935471],[-7.807519,-2.713328,5.236984,-4.959855,-9.250373],[-9.115976,-0.778041,8.258360,-2.346160,0.543850],[-8.772934,8.911729,4.317951,1.540588,-0.847764],[-1.462049,1.117318,-7.605373,3.035578,-1.941577],[-4.008093,4.363792,8.219937,6.778327,9.094902],[3.228023,9.822314,5.057977,8.362488,-3.401870],[-6.606557,-3.144755,0.203665,0.616312,5.779683],[-7.218879,-3.898318,-5.040077,5.142018,8.338265],[0.436622,-3.195896,9.519870,7.054481,-8.976702],[-0.181802,9.335530,-5.856380,-0.345468,3.488703],[1.694718,2.025985,0.574010,-0.966946,0.177529]]], dtype = "float32")#candidate|693|(5, 12, 5)|const|float32
bop_694 = relay.floor_mod(var_692.astype('float32'), relay.reshape(const_693.astype('float32'), relay.shape_of(var_692))) # shape=(5, 12, 5)
output = bop_694
output2 = bop_694
func_700 = relay.Function([var_692,], output)
mod['func_700'] = func_700
mod = relay.transform.InferType()(mod)
var_701 = relay.var("var_701", dtype = "float32", shape = (5, 12, 5))#candidate|701|(5, 12, 5)|var|float32
output = func_700(var_701)
func_702 = relay.Function([var_701], output)
mutated_mod['func_702'] = func_702
mutated_mod = relay.transform.InferType()(mutated_mod)
const_723 = relay.const([[[4.221837,-1.315557,5.827842,-2.245768,-4.519031,-5.088135,9.437890,-8.615518,8.412897,-7.654437,-9.257534,4.410742,-7.382756],[6.887036,0.998655,-0.884565,3.041362,-5.564867,9.544079,4.562885,-1.124415,-6.003542,-3.775937,-0.306269,1.589627,9.876972],[7.830099,-2.737988,4.961532,9.750106,8.656650,-3.148869,-0.974466,8.377340,7.307552,-5.399263,-6.791167,-3.412562,5.626015],[5.308214,2.070000,-1.379435,3.084651,-1.762059,-6.499593,3.236572,5.184066,-2.688713,-3.546637,-8.549835,2.728226,6.827937],[4.850346,-7.683454,-1.388025,-4.006948,-1.990553,9.316817,9.363079,-8.653337,2.592012,2.604217,4.812299,3.244609,-4.737678],[-2.121895,-3.094895,8.662325,0.708193,-3.784691,7.738620,1.636852,2.659271,5.479951,-3.465240,-0.301035,6.360714,-3.806848],[4.771011,-0.120303,8.206055,3.454251,2.417414,-7.375780,-9.694643,-5.368690,0.089166,1.502094,-6.498649,5.534333,4.140741],[3.111543,-1.905871,5.245578,0.177874,9.824716,-1.414159,-6.744772,4.230920,-9.664290,3.992685,-3.653570,-1.623192,5.762983],[-9.746102,0.589560,-6.048757,8.757529,9.768158,-5.481949,-8.375424,0.967827,6.597493,-1.221301,-9.732383,-3.397863,-3.630919]],[[-9.450830,5.071609,8.507774,2.441977,9.866965,7.658967,-4.576168,6.646553,2.203664,-7.189027,0.081052,-5.339457,-2.408589],[-7.351754,-6.686312,6.516529,-6.450101,-7.841948,9.323655,-0.874496,7.783186,5.517573,-1.757714,2.711569,-9.460012,5.234487],[6.283580,-0.906635,-0.884726,-4.826975,2.278815,-6.714814,-7.851400,8.291699,-4.631225,-5.774616,-0.188794,9.593726,7.019690],[-4.120896,-6.081594,6.720274,-4.108368,9.564067,-9.797059,5.616898,-7.043733,5.375995,5.591832,-9.366916,8.741205,2.785045],[-9.798995,-5.618541,3.541865,9.276250,-4.389142,7.096046,-5.355621,-5.199914,5.302151,-2.940767,1.941771,-5.636899,6.429598],[-4.194256,-6.828320,-6.988454,-1.698439,-2.303078,9.168440,2.628553,-5.074593,-7.376562,0.830876,0.695016,4.289497,-6.440336],[-6.560060,5.973156,8.621368,-3.904137,3.822752,-6.028089,7.233241,-2.486199,8.200147,9.358571,-0.645889,-1.578084,-4.943894],[-8.106097,-7.118232,-2.531487,-2.704325,-5.250159,3.427139,4.249436,2.274887,-6.075216,-8.725866,6.221254,-4.873341,1.631494],[8.243125,-5.984363,5.275290,6.641669,-4.367911,-9.596048,9.216821,-6.258450,8.212535,5.590039,-6.941558,-7.497523,-5.773504]]], dtype = "float32")#candidate|723|(2, 9, 13)|const|float32
var_724 = relay.var("var_724", dtype = "float32", shape = (2, 9, 13))#candidate|724|(2, 9, 13)|var|float32
bop_725 = relay.greater(const_723.astype('bool'), relay.reshape(var_724.astype('bool'), relay.shape_of(const_723))) # shape=(2, 9, 13)
func_281_call = mod.get_global_var('func_281')
func_284_call = mutated_mod.get_global_var('func_284')
var_743 = relay.var("var_743", dtype = "float32", shape = (150,))#candidate|743|(150,)|var|float32
call_742 = relay.TupleGetItem(func_281_call(relay.reshape(var_743.astype('float32'), [5, 10, 3])), 0)
call_744 = relay.TupleGetItem(func_284_call(relay.reshape(var_743.astype('float32'), [5, 10, 3])), 0)
func_397_call = mod.get_global_var('func_397')
func_401_call = mutated_mod.get_global_var('func_401')
const_748 = relay.const([5,-7,5,-1,9,-10,-10,10,9,4,-7,2,-7,-3,1,-6,-5,5,10,-10,-4,10,9,2,10,-7,-2,4,-10,-4,4,-7,-5,-1,-10,6,1,-2,5,-8,7,-6,6,10,5,-7,6,-8,-8,-7,-9,-6,8,3,-9,10,8,-9,-6,-10,-3,-9,-1,-3,7,-9,5,-9,3,-8,-2,-10,-6,7,-8,-2,6,-1,10,7,-3,6,-4,-3,-8,1,1,2,-2,9,10,10,-3,-4,-4,10,9,-7,2,10,-1,10,4,-1,-3,-6,-2,-8,9,9,2,3,7,4,2,-1,-7,-6,5,7,6,2,10,-6,-3,-2,-4,6,-7,-3,6,-3,-7,4,-4,1,-6,1,-4,-7,-2,9,6,-9,6,3,8,-5,-4,-6,-1,2,9,-5,10,7,1,-8,-3,-9,3,-3,7,-7,-8,-1,9,10,5,-10,-7,9,-6,6,-5,10,-8,-8,-4,6,-7,3,-10,-3,-8,2,-3,7,7,9,-8,-10,6,1,-3,2,-6,8,-7,1,-6,-5,3,8,-3,1,-6,10,-1,1,-10,5,-5,-1,6,10,-6,-10,-4,2,3,-1,-6,-2,1,-2,4,6,10,4,1,7,10,10,-6,-3,6,10,4,9,-5,8,-8,-3,-2,-6,4,2,-1,-7,-5,-5,-6,-2,-9,8,4,7,10,2,-8,7,-2,-3,-5,7,5,-10,-9,3,-7,-3,-9,-3,-10,-3,3,-10,2,7,6,-7,8,-1,-2,-6,-9,10,-9,7,1,-10,1,-9,-3,-10,10,1,-5,-4,9,7,-9,6,-1,-9,-4,-7,7,9,2,-1,7,2,-6,-8,-8,-5,-2,-5,5,-7,3,5,2,1,3,8,-6,9,-7,-7,4,2,-2,-10,2,-5,5,-8,1,-3,-3,-2,3,9,2,5,-7,-1,7,-3,1,6,5,3,5,-2,-8,7,8,1,1,4,-6,-6,-6,-2,6,-3,3,-1,-1,-9,7,-10,2,-7,-1,3,-7,10,8,10,-9,-7,8,-3,10,10,9,-2,-5,-8,-9,-4,9,-10,4,-3,5,-9,9,-2,5,-4,-3,-5,-7,-5,-3,-5,-2,3,6,-1,7,2,4,-5,-7,3,-9,-10,-3,-3,3,1,4,1,2,-9,-4,7,8,-6,2,6,-10,-8,-1,-9,10,10,-6,3,5,-6,-4,8,6,-8,-3,-10,1,6,-8,8,7,-1,9,2,6,4,3,-4,5,-7,-6,-3,-6,1,-6,-3,7,7,-10,1,-8,-9,-8,-10,-5,-1,-6,10,-3,-8,-9,3,7,-3,8,-4,-10,7,-4,-1,6,1,-8,5,-1,-2,4,-8,5,7,-7,2,-1,-5,8,5,-10,9,5,-9,7,-9,-7,1,10,5,-6,-5,8,4,-8,1,3,-5,-3,5,6,-10,-2,-4,8,2,-6,3,-8,9,3,-3,-7,-3,5,-10,-5,-3,-3,1,-6,-5,1,6,2,5], dtype = "uint64")#candidate|748|(560,)|const|uint64
const_749 = relay.const([True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,True], dtype = "bool")#candidate|749|(512,)|const|bool
call_747 = relay.TupleGetItem(func_397_call(relay.reshape(const_748.astype('uint64'), [560,]), relay.reshape(const_749.astype('bool'), [512,]), ), 1)
call_750 = relay.TupleGetItem(func_401_call(relay.reshape(const_748.astype('uint64'), [560,]), relay.reshape(const_749.astype('bool'), [512,]), ), 1)
output = relay.Tuple([bop_725,call_742,var_743,call_747,const_748,const_749,])
output2 = relay.Tuple([bop_725,call_744,var_743,call_750,const_748,const_749,])
func_754 = relay.Function([var_724,var_743,], output)
mod['func_754'] = func_754
mod = relay.transform.InferType()(mod)
var_755 = relay.var("var_755", dtype = "float32", shape = (2, 9, 13))#candidate|755|(2, 9, 13)|var|float32
var_756 = relay.var("var_756", dtype = "float32", shape = (150,))#candidate|756|(150,)|var|float32
output = func_754(var_755,var_756,)
func_757 = relay.Function([var_755,var_756,], output)
mutated_mod['func_757'] = func_757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_963 = relay.var("var_963", dtype = "float64", shape = (9, 3, 4))#candidate|963|(9, 3, 4)|var|float64
uop_964 = relay.atan(var_963.astype('float64')) # shape=(9, 3, 4)
var_966 = relay.var("var_966", dtype = "float64", shape = (9, 3, 4))#candidate|966|(9, 3, 4)|var|float64
bop_967 = relay.left_shift(uop_964.astype('int16'), relay.reshape(var_966.astype('int16'), relay.shape_of(uop_964))) # shape=(9, 3, 4)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
const_981 = relay.const([[3,1,7,-9,-10,-10,-1,3,-7,-3,-9,7,-5,-9,-1,4,-4,-5,-4,-9,9,7,10,5,-9,2,7,3,10,-10,6,4],[10,-8,-6,-9,8,-5,6,-6,10,10,-7,1,4,10,-7,9,-6,4,-5,6,-8,4,3,-8,9,-10,10,6,3,5,10,7],[-4,7,5,5,-4,-7,2,-10,3,9,-9,1,-1,-4,-2,-7,4,-6,-7,2,1,-8,5,5,-6,-3,-9,1,-1,-1,5,-1],[-1,-8,7,10,9,2,4,2,-2,-8,-9,3,1,-7,1,5,-3,10,1,2,6,4,1,-1,-2,6,-8,-3,2,-5,-8,-4],[-1,2,4,4,10,-1,3,-6,3,-8,10,9,-3,-4,3,1,4,-8,1,-10,9,2,7,8,-9,-10,2,-2,4,-6,-3,2],[4,6,3,4,9,-5,3,8,-2,2,8,8,9,-8,5,-2,2,-4,-5,-7,6,3,-5,-3,9,-2,-1,-10,8,-5,-8,2],[6,-4,-4,-7,3,10,-3,9,-10,1,-3,2,-7,-4,5,-6,2,9,-3,4,8,-5,7,-3,5,6,2,-1,8,-5,-1,-1],[-3,7,-1,-3,5,8,-2,-8,-2,6,4,-3,3,5,-1,7,1,1,4,-8,1,-2,-6,1,5,-2,-5,3,-6,-1,5,10],[-1,5,-4,6,-1,-8,1,5,-7,6,5,-9,8,-6,8,-10,-9,-4,-9,10,-1,7,10,-9,-2,-10,-8,7,-10,10,1,7],[-4,6,-3,3,7,-7,5,-5,-5,-3,-5,-9,-5,5,7,-7,4,6,2,-3,-1,-5,8,-5,-2,-8,-9,3,5,10,-9,5],[-4,9,10,2,-4,-10,-4,7,-3,6,1,-8,5,-10,-8,-8,-4,6,-10,-7,-5,7,2,-9,9,9,-3,8,-6,4,3,-4],[-8,-3,1,3,9,-9,-3,7,4,-4,4,6,-10,4,2,-10,-10,-1,5,9,1,4,-6,6,7,-8,-1,1,-5,-5,-2,-9],[2,-5,3,10,2,10,4,-2,7,4,-4,-1,9,-10,-5,-3,-9,3,-2,6,8,6,3,3,-7,9,-1,4,8,-10,1,9],[2,1,-6,10,4,-6,-3,8,5,3,8,5,-9,9,8,1,-2,4,1,2,9,2,-6,-3,-8,8,-4,-3,7,5,2,5],[-8,1,-2,-3,-2,4,7,-10,6,2,2,2,-7,-7,3,-2,1,-8,-8,-8,10,-10,-1,-4,10,-6,-1,-2,-7,9,10,-1],[-7,-6,4,7,7,-8,8,5,8,-8,4,-9,-8,-3,10,-1,-6,1,-2,1,6,8,-1,-1,6,10,-1,5,7,-10,-3,-5],[-8,9,7,-9,-9,-6,-10,1,-6,8,-2,-7,-10,-8,-5,-3,1,5,10,-10,9,-9,-3,-4,3,-4,-6,4,7,-10,6,9],[3,-5,6,-4,-1,3,-5,-1,-1,-3,-10,-5,-8,-1,-10,2,-2,8,2,2,-5,5,2,-8,5,-1,10,-1,-3,-5,-3,-6],[-3,3,-6,-9,10,3,-4,-4,-4,-3,5,3,6,-10,-4,-4,-3,-2,-3,-2,-7,-4,5,9,5,4,-5,7,-2,2,5,2],[-4,1,-7,10,-7,6,-2,-1,-8,6,-9,-5,-10,-10,-5,-7,9,6,-10,-4,1,-8,7,-10,4,6,-9,-8,-10,-7,1,3]], dtype = "uint16")#candidate|981|(20, 32)|const|uint16
call_980 = relay.TupleGetItem(func_89_call(relay.reshape(const_981.astype('uint16'), [16, 5, 8])), 1)
call_982 = relay.TupleGetItem(func_92_call(relay.reshape(const_981.astype('uint16'), [16, 5, 8])), 1)
output = relay.Tuple([bop_967,call_980,const_981,])
output2 = relay.Tuple([bop_967,call_982,const_981,])
func_1000 = relay.Function([var_963,var_966,], output)
mod['func_1000'] = func_1000
mod = relay.transform.InferType()(mod)
mutated_mod['func_1000'] = func_1000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1000_call = mutated_mod.get_global_var('func_1000')
var_1002 = relay.var("var_1002", dtype = "float64", shape = (9, 3, 4))#candidate|1002|(9, 3, 4)|var|float64
var_1003 = relay.var("var_1003", dtype = "float64", shape = (9, 3, 4))#candidate|1003|(9, 3, 4)|var|float64
call_1001 = func_1000_call(var_1002,var_1003,)
output = call_1001
func_1004 = relay.Function([var_1002,var_1003,], output)
mutated_mod['func_1004'] = func_1004
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1103 = relay.var("var_1103", dtype = "float64", shape = (14, 5, 6))#candidate|1103|(14, 5, 6)|var|float64
var_1104 = relay.var("var_1104", dtype = "float64", shape = (14, 5, 6))#candidate|1104|(14, 5, 6)|var|float64
bop_1105 = relay.power(var_1103.astype('float64'), relay.reshape(var_1104.astype('float64'), relay.shape_of(var_1103))) # shape=(14, 5, 6)
output = relay.Tuple([bop_1105,])
output2 = relay.Tuple([bop_1105,])
func_1109 = relay.Function([var_1103,var_1104,], output)
mod['func_1109'] = func_1109
mod = relay.transform.InferType()(mod)
mutated_mod['func_1109'] = func_1109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mutated_mod.get_global_var('func_1109')
var_1111 = relay.var("var_1111", dtype = "float64", shape = (14, 5, 6))#candidate|1111|(14, 5, 6)|var|float64
var_1112 = relay.var("var_1112", dtype = "float64", shape = (14, 5, 6))#candidate|1112|(14, 5, 6)|var|float64
call_1110 = func_1109_call(var_1111,var_1112,)
output = call_1110
func_1113 = relay.Function([var_1111,var_1112,], output)
mutated_mod['func_1113'] = func_1113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1302 = relay.var("var_1302", dtype = "float64", shape = (5, 7, 1))#candidate|1302|(5, 7, 1)|var|float64
uop_1303 = relay.asin(var_1302.astype('float64')) # shape=(5, 7, 1)
func_1109_call = mod.get_global_var('func_1109')
func_1113_call = mutated_mod.get_global_var('func_1113')
const_1311 = relay.const([[8.612373,5.069308,-0.467307,-6.636632,6.323950,4.617055,8.556262,-5.731248,6.036205,6.797590,2.955761,-6.321214,-1.138916,8.342193,-9.597458,6.671411,3.521454,-7.718075,7.194720,-1.680116,0.082955,-1.884255,-4.859031,-4.094375,-7.677838,-1.398737,4.506071,1.481311,-1.104037,-6.698603,1.043472,-3.567924,-4.695450,7.829330,1.662434,2.506247,7.112337,5.080701,-9.757250,5.264817,-9.226541,-3.387545],[-8.137575,5.131919,-2.877167,6.325241,4.207870,-3.656790,-9.889583,3.012215,3.896140,3.713332,-8.184176,-1.646407,-8.134846,6.989987,5.502650,-8.635006,-0.702446,-0.369538,6.640212,-9.122359,6.592782,-1.831826,-9.921649,-7.415563,-9.829546,-3.696489,-6.725541,-1.467916,-6.542232,0.596444,4.141556,8.305595,4.906530,5.704366,-6.078594,3.460497,-1.889565,9.010610,-6.345309,5.250553,7.024910,4.635266],[-6.681501,-6.887620,-6.450615,0.934138,5.503981,4.924037,-3.814594,1.223869,-4.675273,3.584028,9.536957,-5.088171,-6.937133,-8.559722,7.034043,1.067845,6.645768,2.364327,-3.496357,-4.956664,7.094695,-8.992335,-7.200465,-5.015607,9.495429,6.482139,4.325535,-5.581726,1.294620,6.918548,-6.248719,4.919629,1.950505,9.141759,8.272205,9.056247,1.681539,-5.777154,-9.142252,3.406767,-3.205753,-0.234937],[-6.843985,5.366146,4.462392,-3.564340,-0.509204,-6.274796,-7.420670,1.477306,4.190598,8.715847,-6.553403,-0.431770,-7.915091,-7.760882,-0.326375,-3.481297,0.360857,5.899968,2.117705,8.310588,9.920976,2.688288,0.353930,2.313326,4.437352,-1.444460,-4.263171,-8.206706,-4.850420,-4.606260,1.027105,9.837135,-0.753136,-6.324926,-3.231392,0.701237,1.245124,-0.024891,7.515505,3.632597,-6.461259,6.020406],[-0.208126,3.606509,-1.606137,3.247636,3.823312,9.029514,7.097169,6.659533,4.212075,3.010751,5.953992,5.970425,3.245838,7.132988,-3.821832,9.483813,5.389054,2.533030,-2.286576,1.694282,4.343955,9.534436,-9.102290,5.729419,-4.937987,-4.698458,-2.496002,-8.335003,-6.543910,2.851400,-4.068452,0.701480,7.825848,-8.956405,-0.770044,5.753431,-7.208805,-1.771778,8.135187,-8.187399,2.748563,0.147815],[-8.968377,8.177552,-4.395541,-6.813868,1.404932,-2.465738,-1.264605,-2.192463,-7.124149,1.836348,3.335810,-4.978549,4.785547,-8.700596,3.124757,-1.895202,3.764676,9.394597,-3.646089,8.641299,1.991625,-4.084715,-2.637084,-9.199594,9.429127,3.239056,-1.173139,9.532019,-3.425464,-4.884151,-8.709088,9.690857,-4.493118,0.478267,-9.389838,8.773900,-1.777368,-2.304137,-6.798363,8.662877,-1.544315,-0.299487],[-5.137935,-3.480665,3.723413,8.320220,3.286051,-9.468275,3.467135,-5.291818,-9.731157,6.262246,3.320913,0.955698,1.637247,2.910478,9.490385,-4.123344,-6.976281,-3.467624,9.760993,5.145617,-5.803407,-6.218083,4.623491,-8.976188,-1.610528,-6.249590,7.750535,-6.688781,-9.266869,-2.255714,6.740027,-3.875369,5.869070,-9.984627,-2.330193,4.156945,1.765044,-0.307258,-9.196241,-5.472148,-9.279991,-1.133127],[-0.721674,-0.072395,5.659706,-8.107744,4.155737,-2.107636,1.653082,2.937112,-3.498732,-8.559005,5.302088,-8.720514,6.992779,-7.314187,6.052901,1.050210,8.418824,-7.744763,-8.811393,-4.310687,0.237307,-5.109555,4.868410,-6.288390,-5.084161,2.835294,2.381063,5.030759,-8.158782,8.739977,3.587854,0.587520,-7.601293,3.881078,-3.243599,4.164560,-4.292589,-7.569941,2.655352,6.512808,0.950655,6.459625],[-3.540592,-2.219554,4.456960,-2.459440,-9.918183,5.113242,3.978226,-2.900354,-4.860088,-2.011551,6.777420,-5.235816,7.629653,1.510070,-5.291392,-6.703209,2.820054,7.513089,-7.878005,8.817395,8.349332,5.071442,3.318498,-8.635715,4.323756,-3.910035,7.868404,-4.605592,-3.649200,-9.485973,-1.549018,4.283875,5.189013,-1.914658,-8.075108,-2.112827,8.795367,6.946277,4.755573,-1.069212,-4.058415,-3.574916],[-1.538010,-0.874271,-4.383216,1.816551,2.968388,-9.998883,-8.484195,-9.939575,5.482092,-1.640924,6.334525,6.813885,-5.119098,6.956848,0.175494,-7.314383,-7.213313,-8.201301,7.568496,-0.877466,2.138917,5.854006,0.558023,-3.006012,4.328847,8.280538,-1.589494,8.189368,2.975709,6.277373,-0.031936,-6.822304,0.408258,3.676448,-8.394490,0.590203,4.195110,6.998656,8.873690,8.783405,9.513574,8.090602]], dtype = "float64")#candidate|1311|(10, 42)|const|float64
call_1310 = relay.TupleGetItem(func_1109_call(relay.reshape(const_1311.astype('float64'), [14, 5, 6]), relay.reshape(const_1311.astype('float64'), [14, 5, 6]), ), 0)
call_1312 = relay.TupleGetItem(func_1113_call(relay.reshape(const_1311.astype('float64'), [14, 5, 6]), relay.reshape(const_1311.astype('float64'), [14, 5, 6]), ), 0)
output = relay.Tuple([uop_1303,call_1310,const_1311,])
output2 = relay.Tuple([uop_1303,call_1312,const_1311,])
func_1313 = relay.Function([var_1302,], output)
mod['func_1313'] = func_1313
mod = relay.transform.InferType()(mod)
mutated_mod['func_1313'] = func_1313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1314 = relay.var("var_1314", dtype = "float64", shape = (5, 7, 1))#candidate|1314|(5, 7, 1)|var|float64
func_1313_call = mutated_mod.get_global_var('func_1313')
call_1315 = func_1313_call(var_1314)
output = call_1315
func_1316 = relay.Function([var_1314], output)
mutated_mod['func_1316'] = func_1316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1394 = relay.var("var_1394", dtype = "float64", shape = (3, 8, 2))#candidate|1394|(3, 8, 2)|var|float64
var_1395 = relay.var("var_1395", dtype = "float64", shape = (3, 8, 2))#candidate|1395|(3, 8, 2)|var|float64
bop_1396 = relay.minimum(var_1394.astype('float64'), relay.reshape(var_1395.astype('float64'), relay.shape_of(var_1394))) # shape=(3, 8, 2)
bop_1409 = relay.equal(var_1394.astype('bool'), relay.reshape(var_1395.astype('bool'), relay.shape_of(var_1394))) # shape=(3, 8, 2)
func_754_call = mod.get_global_var('func_754')
func_757_call = mutated_mod.get_global_var('func_757')
const_1413 = relay.const([[-1.509336,-6.574390],[5.729979,4.853251],[-7.725484,5.230025],[5.973762,3.157515],[1.959307,6.125697],[-2.944850,2.007052],[-8.356687,2.173597],[-4.967753,7.820868],[-2.135939,0.946884],[6.045467,-5.722596],[1.723356,-9.472652],[-2.135537,5.025212],[-6.846939,-7.738747],[5.212273,-9.836348],[-8.174460,-4.754815],[6.455272,-2.272305],[-4.450383,8.591697],[-9.465826,3.135063],[7.901693,-4.880335],[9.798854,7.464730],[-6.383210,6.516845],[2.820754,-2.562218],[8.435736,4.109399],[-7.707514,-4.100110],[5.672866,-4.620634],[6.835114,4.922452],[7.258741,-9.410269],[-0.262427,6.759103],[5.994156,-8.151422],[-6.170108,9.230956],[-3.355686,-4.476393],[-9.097033,1.564999],[-4.665303,2.320672],[2.844000,3.011037],[-3.304831,-9.162895],[4.215628,-3.634393],[-7.519805,-5.888860],[9.257467,-7.850541],[-3.540584,-1.874342],[8.794100,-9.039080],[3.960038,-7.747437],[-1.454886,9.588719],[5.065552,9.946434],[3.816987,-3.094011],[9.447308,-2.525644],[-0.624737,-8.787119],[4.056721,0.063519],[-5.838959,6.921698],[4.562822,-1.512215],[7.100497,-9.435908],[1.089225,7.796292],[5.757400,-1.646470],[-0.096918,5.682552],[4.403862,3.574292],[-2.706438,-2.060902],[-3.492959,-0.705691],[6.957152,-3.005248],[4.338752,6.696456],[-0.968808,8.301452],[-2.590418,-0.892238],[2.941520,2.453273],[2.990136,5.015625],[8.425628,-1.009083],[4.383305,3.545341],[-4.086540,5.118592],[3.235702,-6.622033],[-5.948371,6.946025],[-7.612392,4.440143],[-5.850041,-1.299495],[-6.800337,7.021883],[9.150515,9.123771],[9.972697,1.117557],[-6.879899,8.963362],[-0.689274,-7.009373],[9.665121,6.854942],[5.813557,6.722413],[-0.525647,-8.529366],[-8.027320,-4.162230],[9.265515,-3.399168],[1.311196,-8.276188],[9.801350,9.749098],[-4.593596,-6.522271],[8.657792,7.936661],[-4.278096,-8.920369],[-8.227526,4.362051],[1.405763,4.154293],[-4.179187,2.065887],[4.208887,8.192863],[2.374963,-3.668680],[-5.243408,0.994064],[9.461493,1.803951],[-1.946408,-7.605865],[-8.771612,6.528427],[0.395188,-7.550271],[-5.590968,5.691710],[-0.665900,-0.545218],[2.029859,6.873619],[3.157220,-7.109748],[2.159638,8.751627],[6.987830,-0.562391],[9.929328,3.309290],[-6.867020,-0.480498],[5.895514,9.613119],[8.051698,5.528565],[-2.181293,-2.326235],[-5.512643,-9.487146],[-5.616374,2.479958],[1.993958,8.334922],[4.360738,-9.902083],[8.291242,-3.312740],[-1.493403,-0.680836],[-1.222860,2.407505],[-0.523942,-0.140420],[-3.865677,-6.070844],[-5.694748,-0.701244],[6.982095,3.833162],[2.541883,8.956454]], dtype = "float32")#candidate|1413|(117, 2)|const|float32
var_1414 = relay.var("var_1414", dtype = "float32", shape = (150,))#candidate|1414|(150,)|var|float32
call_1412 = relay.TupleGetItem(func_754_call(relay.reshape(const_1413.astype('float32'), [2, 9, 13]), relay.reshape(var_1414.astype('float32'), [150,]), ), 3)
call_1415 = relay.TupleGetItem(func_757_call(relay.reshape(const_1413.astype('float32'), [2, 9, 13]), relay.reshape(var_1414.astype('float32'), [150,]), ), 3)
func_281_call = mod.get_global_var('func_281')
func_284_call = mutated_mod.get_global_var('func_284')
call_1419 = relay.TupleGetItem(func_281_call(relay.reshape(var_1414.astype('float32'), [5, 10, 3])), 0)
call_1420 = relay.TupleGetItem(func_284_call(relay.reshape(var_1414.astype('float32'), [5, 10, 3])), 0)
output = relay.Tuple([bop_1396,bop_1409,call_1412,const_1413,var_1414,call_1419,])
output2 = relay.Tuple([bop_1396,bop_1409,call_1415,const_1413,var_1414,call_1420,])
func_1421 = relay.Function([var_1394,var_1395,var_1414,], output)
mod['func_1421'] = func_1421
mod = relay.transform.InferType()(mod)
var_1422 = relay.var("var_1422", dtype = "float64", shape = (3, 8, 2))#candidate|1422|(3, 8, 2)|var|float64
var_1423 = relay.var("var_1423", dtype = "float64", shape = (3, 8, 2))#candidate|1423|(3, 8, 2)|var|float64
var_1424 = relay.var("var_1424", dtype = "float32", shape = (150,))#candidate|1424|(150,)|var|float32
output = func_1421(var_1422,var_1423,var_1424,)
func_1425 = relay.Function([var_1422,var_1423,var_1424,], output)
mutated_mod['func_1425'] = func_1425
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2008 = relay.var("var_2008", dtype = "bool", shape = (1, 5, 8))#candidate|2008|(1, 5, 8)|var|bool
var_2009 = relay.var("var_2009", dtype = "bool", shape = (3, 5, 8))#candidate|2009|(3, 5, 8)|var|bool
bop_2010 = relay.logical_or(var_2008.astype('bool'), var_2009.astype('bool')) # shape=(3, 5, 8)
output = bop_2010
output2 = bop_2010
func_2013 = relay.Function([var_2008,var_2009,], output)
mod['func_2013'] = func_2013
mod = relay.transform.InferType()(mod)
mutated_mod['func_2013'] = func_2013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mutated_mod.get_global_var('func_2013')
var_2015 = relay.var("var_2015", dtype = "bool", shape = (1, 5, 8))#candidate|2015|(1, 5, 8)|var|bool
var_2016 = relay.var("var_2016", dtype = "bool", shape = (3, 5, 8))#candidate|2016|(3, 5, 8)|var|bool
call_2014 = func_2013_call(var_2015,var_2016,)
output = call_2014
func_2017 = relay.Function([var_2015,var_2016,], output)
mutated_mod['func_2017'] = func_2017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2114 = relay.var("var_2114", dtype = "float32", shape = (8, 9, 6))#candidate|2114|(8, 9, 6)|var|float32
uop_2115 = relay.sigmoid(var_2114.astype('float32')) # shape=(8, 9, 6)
func_700_call = mod.get_global_var('func_700')
func_702_call = mutated_mod.get_global_var('func_702')
const_2140 = relay.const([[-1.991630],[-9.835368],[-3.136318],[2.969402],[3.109789],[-2.969411],[2.190696],[8.364959],[7.356706],[1.585334],[9.195946],[8.950782],[-7.950534],[0.912094],[-7.130099],[-5.201545],[-0.467639],[8.645725],[-7.778423],[5.214036],[-3.504399],[-3.314073],[0.298543],[-5.280320],[-0.249046],[6.497366],[-4.184367],[3.019855],[2.969511],[7.299311],[6.454056],[-2.477392],[-1.107812],[-2.643246],[4.144382],[0.625207],[8.201387],[6.992833],[7.377527],[0.229609],[0.065728],[2.431710],[7.994958],[-2.774474],[7.773035],[-6.056651],[-1.685093],[-7.843100],[-1.031248],[3.222867],[0.221090],[-5.884567],[2.413779],[3.064416],[9.464602],[-9.512069],[3.226567],[-3.200903],[9.031483],[2.184608],[-2.147711],[3.343970],[-8.181714],[-5.798987],[-4.531623],[-7.645065],[-7.672088],[6.191948],[3.946989],[-4.351026],[9.426968],[8.651394],[-5.853381],[-7.436043],[5.300093],[9.439678],[6.744057],[-9.346982],[-4.891737],[5.542855],[-8.022045],[-7.659869],[-3.051080],[-2.012724],[-5.404731],[-4.640118],[-7.530439],[-3.898053],[7.652742],[-2.592210],[-7.161493],[-9.856827],[-3.086891],[-9.383249],[5.708708],[9.788076],[4.902793],[-2.288352],[2.299018],[0.093977],[4.466953],[-2.853366],[-5.191237],[3.719089],[6.192094],[-0.934058],[6.171705],[6.380308],[3.005263],[-3.481596],[6.756377],[-0.688264],[-2.707383],[-4.352604],[-5.542704],[3.408218],[5.705307],[4.393680],[1.289974],[0.871590],[-1.302490],[-3.271511],[6.001771],[8.784054],[3.504296],[5.644742],[0.869103],[-6.573761],[4.401152],[-1.764106],[-7.552974],[9.531740],[1.176507],[8.285555],[6.250146],[0.370956],[-4.926756],[1.619592],[8.868239],[-2.963028],[7.195270],[-4.853184],[-7.712530],[-0.990948],[3.557763],[5.004001],[-8.246409],[-7.244039],[2.916262],[-6.362729],[-6.045783],[-4.435314],[-5.613509],[-8.978637],[-8.784849],[-7.447319],[7.488609],[-2.322675],[8.547575],[6.065962],[0.001633],[4.839397],[8.634612],[7.080996],[4.408388],[-9.785530],[4.512809],[6.779690],[-4.794610],[-0.453803],[-6.749340],[-6.667450],[2.638666],[1.292072],[8.307227],[1.658152],[6.005737],[4.161502],[-1.489145],[6.534537],[-0.104560],[-4.637368],[-4.417170],[8.770355],[5.451889],[4.672526],[3.990662],[1.306984],[6.163391],[0.281583],[3.353770],[7.331742],[8.717269],[-7.923955],[-9.466980],[-0.315587],[2.353347],[-4.357577],[-5.093338],[-3.442540],[1.848343],[7.949778],[-5.692607],[9.591931],[-2.883137],[-9.156007],[-1.568336],[-7.835262],[-2.051944],[6.436480],[9.895440],[-2.524344],[-9.238162],[-2.191645],[-8.258304],[5.721124],[7.014896],[-5.658774],[4.346259],[0.194608],[6.670089],[-6.187148],[1.137570],[7.372864],[3.001373],[-9.138044],[-4.805547],[7.999886],[-1.788449],[0.774410],[-7.955913],[-9.477214],[-0.368327],[3.615468],[8.990146],[5.016077],[3.178789],[-1.818774],[-4.953445],[-7.267744],[-4.567413],[-2.485556],[7.566883],[-3.963064],[-6.912052],[7.280050],[-2.033419],[-2.743718],[-2.504001],[-1.528085],[-0.607440],[-4.372661],[9.536527],[-9.870771],[9.228181],[0.918549],[-1.135982],[-8.930287],[5.120247],[6.972161],[0.310258],[9.582016],[-7.254848],[-9.153793],[0.179847],[-2.060615],[-6.228327],[7.751640],[0.877949],[6.990320],[9.563863],[8.933967],[9.870725],[8.654562],[-0.482699],[-9.751122],[6.049222],[2.089184],[4.976626],[5.860430],[-2.564137],[-0.079859],[-3.185429],[4.801800],[6.789404],[-7.226573],[5.160134],[-8.739530],[-7.743424],[-4.904412],[-4.716990],[-3.896831],[-2.218970],[-8.380968],[0.196145],[-6.768981],[6.250049],[-1.343960],[2.166475],[-4.210612]], dtype = "float32")#candidate|2140|(300, 1)|const|float32
call_2139 = func_700_call(relay.reshape(const_2140.astype('float32'), [5, 12, 5]))
call_2141 = func_700_call(relay.reshape(const_2140.astype('float32'), [5, 12, 5]))
output = relay.Tuple([uop_2115,call_2139,const_2140,])
output2 = relay.Tuple([uop_2115,call_2141,const_2140,])
func_2142 = relay.Function([var_2114,], output)
mod['func_2142'] = func_2142
mod = relay.transform.InferType()(mod)
mutated_mod['func_2142'] = func_2142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2143 = relay.var("var_2143", dtype = "float32", shape = (8, 9, 6))#candidate|2143|(8, 9, 6)|var|float32
func_2142_call = mutated_mod.get_global_var('func_2142')
call_2144 = func_2142_call(var_2143)
output = call_2144
func_2145 = relay.Function([var_2143], output)
mutated_mod['func_2145'] = func_2145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2193 = relay.var("var_2193", dtype = "int32", shape = (16, 11, 8))#candidate|2193|(16, 11, 8)|var|int32
var_2194 = relay.var("var_2194", dtype = "int32", shape = (16, 11, 8))#candidate|2194|(16, 11, 8)|var|int32
bop_2195 = relay.multiply(var_2193.astype('int32'), relay.reshape(var_2194.astype('int32'), relay.shape_of(var_2193))) # shape=(16, 11, 8)
output = bop_2195
output2 = bop_2195
func_2204 = relay.Function([var_2193,var_2194,], output)
mod['func_2204'] = func_2204
mod = relay.transform.InferType()(mod)
var_2205 = relay.var("var_2205", dtype = "int32", shape = (16, 11, 8))#candidate|2205|(16, 11, 8)|var|int32
var_2206 = relay.var("var_2206", dtype = "int32", shape = (16, 11, 8))#candidate|2206|(16, 11, 8)|var|int32
output = func_2204(var_2205,var_2206,)
func_2207 = relay.Function([var_2205,var_2206,], output)
mutated_mod['func_2207'] = func_2207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2381 = relay.var("var_2381", dtype = "float64", shape = (3, 10, 16))#candidate|2381|(3, 10, 16)|var|float64
const_2382 = relay.const([[[6.913341,8.592295,-0.116346,-5.790838,-6.316826,6.397258,6.551058,-8.553832,-4.842718,8.703891,9.060851,-5.853195,-1.699081,7.474011,0.882661,6.989044],[1.583105,-0.049974,-8.915595,4.199776,-4.559411,-7.390158,-9.063323,3.033763,-9.629083,7.174866,-3.640488,4.735185,-6.271826,-7.828070,-0.844095,-8.981010],[-8.117335,4.433749,-9.767053,-3.707520,5.864392,-7.525217,0.278296,-9.369819,3.026866,9.826427,5.728438,-2.136269,-1.129566,-5.222107,-9.197510,-6.330244],[5.817510,-4.012100,-2.287141,-7.266262,3.849452,3.930015,4.769033,-7.669230,1.057039,-1.071247,2.091076,-0.353225,6.463577,-9.633014,4.120284,8.593829],[-1.543451,-1.806182,-4.562007,-2.563016,-3.464648,-0.570017,8.430218,-3.768254,4.216798,-4.651266,8.503772,-7.199198,2.994515,-5.643947,5.666631,2.114301],[6.825064,-9.012052,4.289666,8.296180,-3.193704,9.148497,6.035185,-8.844813,-1.866898,3.846127,4.186821,-9.744337,-5.524462,2.406876,-1.105947,2.486431],[5.509841,8.531963,-3.406019,-1.730336,6.020348,-2.069456,3.721005,8.305704,2.214486,7.029686,-8.354237,1.584871,-1.038243,-7.283220,-9.974326,4.508887],[2.696710,-1.171510,7.492494,-2.881268,-3.871209,0.212013,0.162902,2.572461,5.501439,6.519530,-7.841752,-0.241058,0.603029,-5.939297,-8.611489,9.551141],[-1.994078,2.694323,-8.209791,-6.009683,3.660135,-5.490023,-3.090301,4.075994,-1.056904,1.766365,-0.820705,-0.989371,-7.600244,9.861352,-2.319660,-3.399373],[-5.509268,-9.972761,3.872218,6.328892,3.486997,2.281969,9.708882,4.574831,0.927748,-8.991573,2.157988,-2.721416,2.731636,-6.867518,-7.208364,6.832227]],[[8.566718,-8.340593,-4.860963,2.714703,0.581383,-1.248018,9.305198,1.227977,-9.480124,-3.633958,-0.577127,-2.255775,-6.506604,9.440736,7.812606,5.756596],[-9.908280,-6.451610,8.672016,-1.657185,-9.917644,7.709663,0.495055,9.970235,3.977203,1.891835,-5.679796,6.349470,-0.637081,9.185555,7.038966,-6.228672],[-6.125247,4.356661,-8.008401,5.323505,-5.496174,8.194061,9.114794,7.008967,-1.387253,-8.977753,-0.013188,-1.271772,-1.757081,7.573483,-1.307220,3.549449],[-0.359370,9.378666,9.803405,1.903582,9.991804,5.374547,1.283495,1.501862,8.250219,-5.488198,-7.520439,-2.849844,2.511442,-6.973864,-6.530855,-3.767033],[-2.768181,1.841319,-7.615650,7.744493,3.876079,-5.294011,-4.175331,9.224925,4.498020,8.943024,-0.411058,-0.869761,1.663649,4.618491,1.576571,-3.992042],[8.617739,9.376284,9.714059,-3.268376,6.028125,9.865916,-9.939020,3.208420,6.781487,6.198583,-9.109576,9.209354,0.342861,9.944243,-3.430585,-3.422426],[-5.225478,-8.405700,3.132116,-5.855452,9.758543,-5.775756,-6.194704,-5.144821,-8.990583,6.166352,3.913686,9.373587,-3.534510,9.071322,-4.687757,-3.962979],[6.605595,-5.748913,8.901924,5.137974,8.848291,2.239596,1.741221,6.717723,6.190707,6.525831,9.550501,6.281996,2.962775,-5.404897,6.828413,-4.745332],[8.421711,2.955401,-5.004872,-8.766707,-5.333618,2.121189,0.435381,9.554599,-7.639453,5.758199,2.689539,3.410324,-9.056861,2.552066,-3.651563,-3.472385],[-1.785335,8.999841,2.774222,-6.150133,7.760552,3.720984,-8.825858,1.849990,5.662119,-8.110755,-3.812495,-6.786706,-4.378292,-3.133904,3.875609,-7.148473]],[[-6.354189,-6.374028,7.711656,1.694144,5.550654,7.497050,7.005240,-9.123240,-0.584975,-5.812427,-1.134901,9.916939,-2.307602,8.269974,-3.175434,6.229718],[1.587509,-3.072943,8.451717,4.122826,0.950338,-9.816850,-5.281927,0.489205,-7.059243,7.359044,-2.057110,3.421921,-0.594233,2.849234,-6.718624,3.237001],[-5.030838,8.089381,3.797054,-8.348599,8.976670,8.821096,9.775915,-8.547903,-5.592236,-2.353498,-8.586586,8.994501,7.199324,-7.193443,-2.250178,7.120191],[5.956259,-7.984537,-4.477034,5.203662,5.780626,5.209901,-6.178195,-9.833767,4.737280,6.558739,-9.579724,-2.963166,8.586200,-1.037587,-7.755099,0.909412],[-4.754288,-2.333474,-1.550514,-5.649315,-3.094205,1.731709,-3.568259,-8.112307,-6.938641,6.294831,-6.731262,-5.475742,-2.848226,2.966856,2.299392,2.745365],[-2.395444,-6.232099,2.121722,5.196990,-5.360474,-8.394963,-3.056697,-5.404916,1.749323,-4.196094,1.354458,1.270295,4.668190,-7.814841,9.069853,-2.181901],[4.907348,9.572430,5.174959,-7.990964,8.609531,-8.503960,1.339459,-1.195341,6.383389,1.942107,-4.341453,-4.792180,4.680739,-7.311462,-3.066604,2.352082],[4.253105,6.073332,0.665371,-7.693104,-9.910812,-3.513016,9.224986,-0.948263,6.297098,7.114721,1.312530,6.970811,-5.304128,4.108197,-3.230695,-7.028586],[0.991578,4.574515,2.108617,2.032140,-6.144437,-8.547453,8.365481,-0.190784,-9.389553,-9.898813,-0.282301,-9.082892,3.839767,3.147459,-8.458686,0.059967],[1.320981,-1.019661,-4.624088,1.035750,-8.216729,-9.008862,-6.583054,-2.783933,-4.899014,-4.420750,6.523900,0.196117,8.435156,-9.779829,-4.266127,6.275075]]], dtype = "float64")#candidate|2382|(3, 10, 16)|const|float64
bop_2383 = relay.floor_mod(var_2381.astype('float64'), relay.reshape(const_2382.astype('float64'), relay.shape_of(var_2381))) # shape=(3, 10, 16)
func_2013_call = mod.get_global_var('func_2013')
func_2017_call = mutated_mod.get_global_var('func_2017')
const_2394 = relay.const([False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,True,True], dtype = "bool")#candidate|2394|(40,)|const|bool
var_2395 = relay.var("var_2395", dtype = "bool", shape = (120,))#candidate|2395|(120,)|var|bool
call_2393 = func_2013_call(relay.reshape(const_2394.astype('bool'), [1, 5, 8]), relay.reshape(var_2395.astype('bool'), [3, 5, 8]), )
call_2396 = func_2013_call(relay.reshape(const_2394.astype('bool'), [1, 5, 8]), relay.reshape(var_2395.astype('bool'), [3, 5, 8]), )
output = relay.Tuple([bop_2383,call_2393,const_2394,var_2395,])
output2 = relay.Tuple([bop_2383,call_2396,const_2394,var_2395,])
func_2402 = relay.Function([var_2381,var_2395,], output)
mod['func_2402'] = func_2402
mod = relay.transform.InferType()(mod)
mutated_mod['func_2402'] = func_2402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2402_call = mutated_mod.get_global_var('func_2402')
var_2404 = relay.var("var_2404", dtype = "float64", shape = (3, 10, 16))#candidate|2404|(3, 10, 16)|var|float64
var_2405 = relay.var("var_2405", dtype = "bool", shape = (120,))#candidate|2405|(120,)|var|bool
call_2403 = func_2402_call(var_2404,var_2405,)
output = call_2403
func_2406 = relay.Function([var_2404,var_2405,], output)
mutated_mod['func_2406'] = func_2406
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2706 = relay.var("var_2706", dtype = "uint16", shape = (8, 6, 13))#candidate|2706|(8, 6, 13)|var|uint16
var_2707 = relay.var("var_2707", dtype = "uint16", shape = (8, 6, 13))#candidate|2707|(8, 6, 13)|var|uint16
bop_2708 = relay.greater(var_2706.astype('bool'), relay.reshape(var_2707.astype('bool'), relay.shape_of(var_2706))) # shape=(8, 6, 13)
output = bop_2708
output2 = bop_2708
func_2736 = relay.Function([var_2706,var_2707,], output)
mod['func_2736'] = func_2736
mod = relay.transform.InferType()(mod)
var_2737 = relay.var("var_2737", dtype = "uint16", shape = (8, 6, 13))#candidate|2737|(8, 6, 13)|var|uint16
var_2738 = relay.var("var_2738", dtype = "uint16", shape = (8, 6, 13))#candidate|2738|(8, 6, 13)|var|uint16
output = func_2736(var_2737,var_2738,)
func_2739 = relay.Function([var_2737,var_2738,], output)
mutated_mod['func_2739'] = func_2739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2885 = relay.var("var_2885", dtype = "bool", shape = (4, 3, 6))#candidate|2885|(4, 3, 6)|var|bool
var_2886 = relay.var("var_2886", dtype = "bool", shape = (4, 3, 6))#candidate|2886|(4, 3, 6)|var|bool
bop_2887 = relay.logical_or(var_2885.astype('bool'), relay.reshape(var_2886.astype('bool'), relay.shape_of(var_2885))) # shape=(4, 3, 6)
output = relay.Tuple([bop_2887,])
output2 = relay.Tuple([bop_2887,])
func_2892 = relay.Function([var_2885,var_2886,], output)
mod['func_2892'] = func_2892
mod = relay.transform.InferType()(mod)
mutated_mod['func_2892'] = func_2892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2892_call = mutated_mod.get_global_var('func_2892')
var_2894 = relay.var("var_2894", dtype = "bool", shape = (4, 3, 6))#candidate|2894|(4, 3, 6)|var|bool
var_2895 = relay.var("var_2895", dtype = "bool", shape = (4, 3, 6))#candidate|2895|(4, 3, 6)|var|bool
call_2893 = func_2892_call(var_2894,var_2895,)
output = call_2893
func_2896 = relay.Function([var_2894,var_2895,], output)
mutated_mod['func_2896'] = func_2896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2916 = relay.var("var_2916", dtype = "float64", shape = (1, 7, 4))#candidate|2916|(1, 7, 4)|var|float64
uop_2917 = relay.tan(var_2916.astype('float64')) # shape=(1, 7, 4)
output = relay.Tuple([uop_2917,])
output2 = relay.Tuple([uop_2917,])
func_2930 = relay.Function([var_2916,], output)
mod['func_2930'] = func_2930
mod = relay.transform.InferType()(mod)
mutated_mod['func_2930'] = func_2930
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2931 = relay.var("var_2931", dtype = "float64", shape = (1, 7, 4))#candidate|2931|(1, 7, 4)|var|float64
func_2930_call = mutated_mod.get_global_var('func_2930')
call_2932 = func_2930_call(var_2931)
output = call_2932
func_2933 = relay.Function([var_2931], output)
mutated_mod['func_2933'] = func_2933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3319 = relay.var("var_3319", dtype = "int64", shape = (13, 3, 6))#candidate|3319|(13, 3, 6)|var|int64
var_3320 = relay.var("var_3320", dtype = "int64", shape = (13, 3, 6))#candidate|3320|(13, 3, 6)|var|int64
bop_3321 = relay.not_equal(var_3319.astype('bool'), relay.reshape(var_3320.astype('bool'), relay.shape_of(var_3319))) # shape=(13, 3, 6)
output = relay.Tuple([bop_3321,])
output2 = relay.Tuple([bop_3321,])
func_3325 = relay.Function([var_3319,var_3320,], output)
mod['func_3325'] = func_3325
mod = relay.transform.InferType()(mod)
var_3326 = relay.var("var_3326", dtype = "int64", shape = (13, 3, 6))#candidate|3326|(13, 3, 6)|var|int64
var_3327 = relay.var("var_3327", dtype = "int64", shape = (13, 3, 6))#candidate|3327|(13, 3, 6)|var|int64
output = func_3325(var_3326,var_3327,)
func_3328 = relay.Function([var_3326,var_3327,], output)
mutated_mod['func_3328'] = func_3328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3335 = relay.var("var_3335", dtype = "float32", shape = (1, 16, 14))#candidate|3335|(1, 16, 14)|var|float32
uop_3336 = relay.log2(var_3335.astype('float32')) # shape=(1, 16, 14)
func_754_call = mod.get_global_var('func_754')
func_757_call = mutated_mod.get_global_var('func_757')
const_3339 = relay.const([-5.348755,6.263649,-4.253697,-8.298374,-6.834984,1.091169,-1.059964,0.745067,-8.334720,-2.559138,5.754303,-3.056157,-8.976407,-3.154246,2.391002,2.865138,7.887903,-1.157684,4.419378,-4.452406,7.519877,4.228712,8.327228,8.901039,-3.864043,-7.482999,-9.223080,-7.436416,1.713499,-9.340405,1.083811,-9.434687,0.523957,-1.979112,-3.858504,-5.159960,8.950914,4.444878,-1.608100,-8.570915,-9.932507,-5.908760,3.383993,2.613341,2.269122,-8.368014,6.569698,8.568023,2.124746,-6.694133,-3.208798,-3.546761,-7.615211,7.864027,-5.212048,-7.527118,-7.256880,8.747651,3.832460,-1.379401,-9.247557,9.313530,-0.133300,-7.031909,5.123685,5.677594,0.895095,5.765857,8.848187,-5.982133,-7.503890,-5.496408,-0.325894,4.829186,-1.261006,-1.398242,-6.664348,2.137782,2.750926,-4.061723,-8.830927,-7.908783,6.175842,0.392141,-8.281875,-1.212856,-7.911237,-0.674283,-8.886784,0.519601,1.364661,-3.875703,1.004218,-5.558563,4.772674,0.926742,-9.481709,-1.347337,6.085392,-2.383877,7.857674,1.377441,3.314279,-4.392693,0.532688,9.401700,-2.898040,-3.510265,7.574724,-0.937253,3.761754,-3.925750,3.568453,-4.695305,-9.512735,1.440897,9.325225,-1.048735,-1.708914,1.438864,-5.083536,-1.103189,-1.037779,-6.835791,-4.795110,-0.541331,2.881100,1.141495,7.195961,9.841564,4.093253,-5.798507,5.277399,5.761504,1.996763,1.667526,5.771216,-8.389592,-6.850251,5.543174,0.450799,8.510145,-7.625249,-8.806292,-9.068877,-9.078463,-6.717332,-4.662601,3.163950,5.109496,-9.352522,-8.113459,-0.416924,0.481606,0.686887,1.016993,4.719830,4.940167,-8.357305,1.943620,-1.101372,-0.978070,-4.310057,-1.724397,-6.435009,1.590955,4.373912,5.196333,-9.570430,-2.925521,5.137045,9.693129,-8.972544,7.718231,-2.511014,3.959136,-2.742647,8.113710,8.113989,-1.020732,8.381493,-4.912080,0.121105,-6.259913,2.802370,7.019196,6.767925,0.739752,-0.271926,-9.142692,1.409807,7.184810,0.152060,9.792690,-7.192453,-4.367737,0.025418,-1.084416,-1.526084,-1.428469,-8.777737,4.227967,-5.379109,5.708456,4.191060,4.381548,-4.273992,-2.817253,5.984917,-0.055546,9.403773,7.826903,8.627104,3.413741,8.356423,4.828791,3.180730,5.238924,3.882955,-6.216643,-5.881440,-2.906283,-0.588569,-1.916725,-6.407000,-8.377218,1.537217,-8.634521,4.933004,6.923568,4.307856,-1.113361,7.663893,4.003346], dtype = "float32")#candidate|3339|(234,)|const|float32
const_3340 = relay.const([5.272159,-6.923252,-9.533830,-5.694022,2.010997,-5.029958,-3.991026,0.953414,-3.669203,-5.069528,-2.075214,-0.041771,-7.559032,-5.590960,-8.018140,2.157070,2.187988,7.026663,-8.982993,-0.672201,-9.016454,6.995412,2.575842,4.590542,7.354786,-4.655754,-3.034303,0.049294,-5.058705,-1.551274,9.810643,-2.037968,0.402645,-8.329150,8.659916,2.269971,9.876463,2.878535,-5.153195,-7.137767,-7.964859,2.397141,7.446700,-0.561162,-1.304856,-5.085429,-0.364389,9.015036,1.025768,-4.470521,-9.973272,-3.817315,-6.298307,3.094697,-5.334986,-1.930960,-7.558703,-5.487554,-8.533060,4.189444,0.949049,-6.289301,-0.834062,-2.738711,5.120450,7.268909,-5.796836,6.470269,9.321591,9.191488,-7.342021,-6.866512,2.319605,-1.421599,6.980908,0.328724,-1.045981,0.558815,4.100418,-8.864926,-0.988236,-6.299701,8.627844,5.162222,-5.792052,0.967524,-6.398210,9.211069,-6.885396,8.628887,2.064107,-2.190387,-9.358897,3.658918,4.737715,-3.933251,7.551432,2.685230,-6.498380,9.581463,1.510594,1.199593,-4.836884,-5.981476,-9.846942,4.362175,-7.981012,0.983966,6.791837,-0.574209,-1.627438,-3.131584,2.805751,3.593682,-1.047090,5.499920,5.617954,9.298786,2.973769,-7.801889,0.023063,-2.019846,3.264681,-0.520926,-8.765786,-7.709896,5.014326,-9.646571,-9.921216,-9.762150,-0.468816,-1.966545,-4.642604,7.669714,4.248355,2.587416,1.710415,-6.714733,-7.632007,9.518991,2.733136,3.975528,-8.103687,-4.994627,4.640271,4.611480,-4.643790,6.371878,0.747490,-6.638684], dtype = "float32")#candidate|3340|(150,)|const|float32
call_3338 = relay.TupleGetItem(func_754_call(relay.reshape(const_3339.astype('float32'), [2, 9, 13]), relay.reshape(const_3340.astype('float32'), [150,]), ), 2)
call_3341 = relay.TupleGetItem(func_757_call(relay.reshape(const_3339.astype('float32'), [2, 9, 13]), relay.reshape(const_3340.astype('float32'), [150,]), ), 2)
output = relay.Tuple([uop_3336,call_3338,const_3339,const_3340,])
output2 = relay.Tuple([uop_3336,call_3341,const_3339,const_3340,])
func_3344 = relay.Function([var_3335,], output)
mod['func_3344'] = func_3344
mod = relay.transform.InferType()(mod)
mutated_mod['func_3344'] = func_3344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3345 = relay.var("var_3345", dtype = "float32", shape = (1, 16, 14))#candidate|3345|(1, 16, 14)|var|float32
func_3344_call = mutated_mod.get_global_var('func_3344')
call_3346 = func_3344_call(var_3345)
output = call_3346
func_3347 = relay.Function([var_3345], output)
mutated_mod['func_3347'] = func_3347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3653 = relay.var("var_3653", dtype = "uint8", shape = (14, 8, 12))#candidate|3653|(14, 8, 12)|var|uint8
var_3654 = relay.var("var_3654", dtype = "uint8", shape = (14, 8, 12))#candidate|3654|(14, 8, 12)|var|uint8
bop_3655 = relay.bitwise_and(var_3653.astype('uint8'), relay.reshape(var_3654.astype('uint8'), relay.shape_of(var_3653))) # shape=(14, 8, 12)
bop_3659 = relay.divide(var_3654.astype('float64'), relay.reshape(bop_3655.astype('float64'), relay.shape_of(var_3654))) # shape=(14, 8, 12)
func_754_call = mod.get_global_var('func_754')
func_757_call = mutated_mod.get_global_var('func_757')
var_3670 = relay.var("var_3670", dtype = "float32", shape = (234,))#candidate|3670|(234,)|var|float32
const_3671 = relay.const([-3.344134,2.424828,-1.200831,-7.823902,9.781682,-3.557143,3.717483,5.384062,9.499104,-2.337832,8.410746,1.377292,2.893781,-6.926178,4.394295,-3.805180,-1.137401,-6.217995,-6.340704,-9.991948,5.088486,-0.515416,-9.686763,6.420398,8.389624,-1.514588,7.187597,9.623386,3.195743,6.489452,-8.638286,-0.603909,6.147266,3.842478,-7.723462,0.633871,-2.147237,-9.155707,-2.115048,-2.068504,1.511197,-1.495000,-5.863724,-4.315326,8.471362,-7.262633,8.665559,-0.403241,0.156115,-7.847953,0.992733,-5.890176,5.359583,4.525176,-7.002800,-6.124863,-2.292338,-3.353327,-0.946713,-0.904344,-1.563419,2.954837,-9.617514,-4.620546,4.303659,4.419541,7.862173,5.752138,-5.115601,-6.776244,-3.889307,1.145867,1.252002,-5.265057,-8.855565,7.553922,6.705710,-5.888077,2.848739,-2.745746,7.351613,9.178213,3.500190,8.995471,7.000454,-2.454301,-8.297191,9.220114,6.068638,1.814756,-3.714516,-6.952067,7.861614,2.825290,5.307836,-6.478943,1.180338,3.453998,-7.810648,3.296689,-5.225763,0.796197,4.256395,-9.101625,-7.826184,-6.500221,1.921047,1.960701,5.528196,5.477812,-8.312721,6.521903,0.747040,-5.174182,9.503465,-7.271763,4.576984,4.801748,-7.779484,5.010441,2.827245,5.628512,-0.266975,-9.794209,-1.315553,-2.262863,5.358891,-0.024803,3.775831,-9.891831,-7.145977,-7.302681,-9.825851,-0.939000,-1.796486,-6.206581,5.439408,-7.161647,-8.455578,1.799749,-9.042219,0.147305,4.353272,-0.260778,-9.862099,-8.568475,2.104998,-8.352812,-8.537993,-3.917953], dtype = "float32")#candidate|3671|(150,)|const|float32
call_3669 = relay.TupleGetItem(func_754_call(relay.reshape(var_3670.astype('float32'), [2, 9, 13]), relay.reshape(const_3671.astype('float32'), [150,]), ), 4)
call_3672 = relay.TupleGetItem(func_757_call(relay.reshape(var_3670.astype('float32'), [2, 9, 13]), relay.reshape(const_3671.astype('float32'), [150,]), ), 4)
output = relay.Tuple([bop_3659,call_3669,var_3670,const_3671,])
output2 = relay.Tuple([bop_3659,call_3672,var_3670,const_3671,])
func_3676 = relay.Function([var_3653,var_3654,var_3670,], output)
mod['func_3676'] = func_3676
mod = relay.transform.InferType()(mod)
mutated_mod['func_3676'] = func_3676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3676_call = mutated_mod.get_global_var('func_3676')
var_3678 = relay.var("var_3678", dtype = "uint8", shape = (14, 8, 12))#candidate|3678|(14, 8, 12)|var|uint8
var_3679 = relay.var("var_3679", dtype = "uint8", shape = (14, 8, 12))#candidate|3679|(14, 8, 12)|var|uint8
var_3680 = relay.var("var_3680", dtype = "float32", shape = (234,))#candidate|3680|(234,)|var|float32
call_3677 = func_3676_call(var_3678,var_3679,var_3680,)
output = call_3677
func_3681 = relay.Function([var_3678,var_3679,var_3680,], output)
mutated_mod['func_3681'] = func_3681
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3819 = relay.var("var_3819", dtype = "float32", shape = (4, 14, 16))#candidate|3819|(4, 14, 16)|var|float32
uop_3820 = relay.atan(var_3819.astype('float32')) # shape=(4, 14, 16)
output = relay.Tuple([uop_3820,])
output2 = relay.Tuple([uop_3820,])
func_3832 = relay.Function([var_3819,], output)
mod['func_3832'] = func_3832
mod = relay.transform.InferType()(mod)
mutated_mod['func_3832'] = func_3832
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3833 = relay.var("var_3833", dtype = "float32", shape = (4, 14, 16))#candidate|3833|(4, 14, 16)|var|float32
func_3832_call = mutated_mod.get_global_var('func_3832')
call_3834 = func_3832_call(var_3833)
output = call_3834
func_3835 = relay.Function([var_3833], output)
mutated_mod['func_3835'] = func_3835
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3970 = relay.const([[3.644882,-2.220018,-0.531270,-4.522402,5.948469,5.083432,-8.073869,3.198781,-8.041529],[-6.590558,2.007407,-1.615473,2.191291,3.008926,9.558603,0.764988,2.543902,-3.592481],[-9.179764,-9.745622,-1.843777,-7.354463,8.054903,-7.818465,-9.819425,-9.869276,-4.633184],[-7.413754,-4.991803,-2.784137,-6.730575,-2.717583,-9.101815,6.084055,4.007305,-2.439012],[-0.840065,-3.083317,-7.202602,2.089355,5.539584,-4.623091,-2.930914,-3.560967,4.994293],[6.986624,-8.945259,8.390645,-9.783226,6.292049,-7.453020,4.258991,-6.478977,-8.168111],[-9.823928,0.124122,3.412318,3.724391,-7.632043,-7.951592,2.266333,2.548071,8.563579],[-8.276060,-9.392523,8.177391,0.845239,8.544024,-5.816275,-5.853459,1.667000,8.247418],[-3.821979,-6.788362,-8.420123,-5.289826,-3.468594,9.810827,-0.100436,0.316909,7.022075]], dtype = "float32")#candidate|3970|(9, 9)|const|float32
uop_3971 = relay.atan(const_3970.astype('float32')) # shape=(9, 9)
func_2402_call = mod.get_global_var('func_2402')
func_2406_call = mutated_mod.get_global_var('func_2406')
const_3979 = relay.const([[8.425770,8.830888,1.879218,3.173849,7.708180,-3.375215,0.169202,-5.841710,-0.815159,5.925246,6.698822,-7.529860,-2.423958,2.007924,2.069948,-4.612996,8.325670,-7.220532,5.662356,9.710100,-3.570322,-3.481916,-5.513602,2.730572,3.076653,-4.030963,1.958423,-0.713671,-2.604711,-6.122859,-5.420760,8.090300,-2.181704,-0.422589,7.167828,-8.600789,6.798917,5.042568,5.339526,-5.572227,8.623885,7.316905,-6.894071,7.406022,6.002670,-6.336361,-1.786500,6.443128,6.651295,1.253467,6.037525,-1.191363,-0.304423,-7.807674,-0.759159,8.793002,6.867811,-8.951456,-4.789026,6.196499,6.170859,1.020260,6.659344,-0.848749,-9.234739,4.537934,8.480301,9.208091,-8.926008,6.834227,-3.193626,-9.282284,3.933672,4.800330,-7.015324,3.312325,-1.180466,-1.304497,4.155371,0.397211,-6.803422,4.799551,-5.480015,5.405889,6.269697,-2.233700,8.175211,6.931838,8.692210,-4.493183,8.138739,-2.664422,-9.551779,7.762690,8.702067,-4.281145,-6.181712,-7.857718,-7.748225,3.798523,-7.279100,4.728436,-3.284477,9.483156,-4.994791,-1.410808,9.011573,2.914458,1.277734,-5.723242,0.631539,-7.967304,-2.934782,2.294694,-7.960611,-1.631171,-0.957906,5.561890,0.269393,-7.419605,-7.017256,8.232449,4.579103,-7.173638,-8.059029,-2.387610,2.465888,7.808443,6.449332,-6.439743,7.942401,-0.198515,-1.510430,-3.657772,-2.214282,2.208317,4.003957,5.543442,-2.977050,5.010346,-8.649554,-2.797222,-9.493453,7.257087,-9.733308,-4.888038,7.339849,6.451586,-2.916011,2.890555,2.060299,0.470585,1.854122,3.735094,-7.397532,-1.582229,-3.411185,-3.464141,-1.418697,-4.587508,5.283700,-1.106649,-4.955267,9.650835,-8.509055,1.537071,6.257023,-6.337281,3.965377,-1.567779,7.770276,-0.235847,-9.357207,-0.928622,2.006812,3.972769,1.891021,7.612246,-9.556067,-9.859180,3.722346,-1.032939,9.392908,7.559814,-7.393409,-5.885740,8.338493,-9.783709,-9.294061,-5.965004,4.620255,-7.726702,-8.669073,-7.277125,-2.934747,9.013548,6.166886,6.065726,-3.540814,7.612995,-6.201216,-5.464900,9.081805,9.641948,-5.650665,6.864566,-5.860790,-3.733442,3.795346,4.520698,-9.586904,8.547257,-0.637442,-4.755333,6.160032,9.229530,8.153340,3.396232,-0.087507,-1.118385,7.547743,5.086003,-2.350911,-4.726831,-0.722074,6.845329,-9.523905,-1.977781,3.179373,3.146656,8.364560,7.928240,0.657050,2.003323,3.875016,-0.369688,3.789099,-8.368085,1.498610,2.291455,-4.720459,-8.818518,7.663718,0.588641,9.394485,3.352042,-1.451654,-2.316777,-7.684892,2.304410,8.580831,-9.706443,0.146728,-8.145644,3.889545,3.659998,0.639676,-8.521309,-7.536235,5.353752,-9.738524,-2.630118,9.326133,-6.540128,-3.318573,-3.463430,1.783429,-6.054016,7.986207,-0.708555,-7.589820,4.717441,0.606676,-5.286433,7.839996,-4.336600,6.185662,-7.862585,0.152734,-8.425344,4.739635,9.261287,6.900740,1.346725,6.542920,8.480456,5.034903,3.329999,-2.579778,7.648615,6.403498,3.980398,-8.680950,-0.040518,8.683610,-9.106879,2.296554,2.425870,5.127278,9.045190,-4.677597,3.576170,0.107710,8.997098,-6.057624,-5.646106,-2.852424,-8.864200,8.919072,-3.166601,3.064117,1.680598,-4.107456,9.044427,-9.904360,-2.361944,6.357705,-4.734005,-4.028755,-5.545683,-3.168585,7.019547,0.302455,-6.293609,-4.319046,6.053135,6.876416,-6.053859,9.109180,9.144771,-3.385645,8.486408,2.097374,5.765389,8.385931,1.698311,-5.340066,-6.490391,-6.604656,-0.654061,0.059854,6.710397,7.354235,-8.618519,8.137212,-1.506951,-5.697069,-8.795760,3.194738,0.153141,6.032827,8.844729,3.275654,2.162347,-4.395866,-4.269249,7.544023,-6.124805,4.026081,-2.228282,-8.635596,1.416258,-8.799028,4.602993,9.714845,-0.166861,4.616827,-9.601152,0.602238,-5.667576,9.850627,9.355743,-9.740974,6.037881,-5.747501,6.111951,-7.181871,1.225039,-5.894663,6.416995,-6.212137,-2.794422,0.798817,-3.701207,9.070830,-0.422476,-8.079739,7.859626,4.646070,-2.794507,-9.962122,-3.569671,-7.420024,6.673918,-5.172196,-8.131403,-4.054734,-4.376390,6.829483,-4.452175,-1.895882,-2.783722,-5.978261,9.811360,-1.419154,-8.470707,9.764160,-2.481532,-3.419671,-3.466231,-3.310804,1.931683,-3.143950,-8.658761,1.876309,-5.707735,9.661867,-2.032926,-2.735074,1.212810,5.526041,-4.691080,-7.380068,2.916498,-5.419768,-8.244390,-1.288292,-5.861346,0.415813,2.092087,1.022414,-7.317082,-3.234389,2.987990,8.152091,5.334040,-7.283673,2.717101,-3.397034,8.234761,4.847914,8.476102,-9.611352,-9.966859,-4.940476,-0.985099,8.526951,-6.067119,7.425678,-4.495658,-3.589851,9.242008,4.642495,-6.519820,1.192762,9.841939,5.231010,8.541573,-0.162936,9.065088,2.893960,-5.527601,7.106281,-6.706598,-6.474409,6.325292,-3.487517,5.794850,1.222199,-0.391776,-5.615539,7.851441,-2.914053,1.518398,-1.168456,-2.590718,-1.922842,-0.959527,5.491540,-0.827494]], dtype = "float64")#candidate|3979|(1, 480)|const|float64
var_3980 = relay.var("var_3980", dtype = "bool", shape = (120,))#candidate|3980|(120,)|var|bool
call_3978 = relay.TupleGetItem(func_2402_call(relay.reshape(const_3979.astype('float64'), [3, 10, 16]), relay.reshape(var_3980.astype('bool'), [120,]), ), 2)
call_3981 = relay.TupleGetItem(func_2406_call(relay.reshape(const_3979.astype('float64'), [3, 10, 16]), relay.reshape(var_3980.astype('bool'), [120,]), ), 2)
output = relay.Tuple([uop_3971,call_3978,const_3979,var_3980,])
output2 = relay.Tuple([uop_3971,call_3981,const_3979,var_3980,])
func_3983 = relay.Function([var_3980,], output)
mod['func_3983'] = func_3983
mod = relay.transform.InferType()(mod)
var_3984 = relay.var("var_3984", dtype = "bool", shape = (120,))#candidate|3984|(120,)|var|bool
output = func_3983(var_3984)
func_3985 = relay.Function([var_3984], output)
mutated_mod['func_3985'] = func_3985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4304 = relay.var("var_4304", dtype = "bool", shape = (14, 6, 1))#candidate|4304|(14, 6, 1)|var|bool
var_4305 = relay.var("var_4305", dtype = "bool", shape = (14, 6, 8))#candidate|4305|(14, 6, 8)|var|bool
bop_4306 = relay.logical_or(var_4304.astype('bool'), var_4305.astype('bool')) # shape=(14, 6, 8)
uop_4311 = relay.log(bop_4306.astype('float32')) # shape=(14, 6, 8)
func_397_call = mod.get_global_var('func_397')
func_401_call = mutated_mod.get_global_var('func_401')
const_4314 = relay.const([[5,7,-4,-4,2,4,-2,10,-10,5,10,10,4,4,4,-4,-9,4,-1,4,10,1,-6,4,-10,1,-2,-10,5,-6,10,-9,1,2,-4,5,-8,-5,-7,-2,6,7,-6,-4,-10,1,-10,-9,-4,1,1,3,2,4,7,-10,-9,2,-3,8,9,-3,2,8,-5,5,6,-5,-5,2,5,6,-7,1,7,3,-1,-4,8,-10,-10,-9,2,-7,-1,1,-8,-3,-7,7,6,-9,6,-1,-5,7,5,-4,-8,-5,7,-8,-5,2,-7,-6,-8,-1,8,1,4,-1,-6,7,-3,6,10,-6,4,7,-6,-6,9,3,1,3,3,-8,6,-4,10,2,3,7,6,1,-8,-8,-6,4],[-4,5,-10,6,-10,8,10,2,-8,1,2,5,10,-6,-4,-6,-9,6,5,9,2,-5,-7,-6,-3,-6,10,6,-7,-8,3,1,-6,3,-1,-7,8,-5,-7,10,9,-9,-9,3,-5,9,7,-10,-7,2,-5,-10,1,10,8,1,5,-10,-5,10,-6,-10,9,3,4,1,-6,-2,8,-6,9,-6,9,1,-1,-4,10,-7,5,-2,-7,6,-5,2,-10,2,8,-6,-7,1,-7,-4,-10,-5,-3,1,3,-3,8,4,6,9,-5,8,-1,-10,3,-7,-5,7,-9,-5,-8,1,-8,5,-10,-5,-3,-6,4,-5,8,-10,-4,10,-7,-8,-7,-2,3,-6,-6,-9,-6,3,1,-6,10,3],[-5,7,-9,-7,-3,9,8,10,-8,3,6,-5,4,7,1,7,-6,-8,-9,-1,-5,10,-8,9,9,-2,-8,3,10,7,1,-7,-8,2,-1,-2,3,-2,-2,7,-5,-10,7,6,-3,-1,6,-3,-5,6,8,-6,1,2,-1,9,-9,10,10,5,8,8,-6,-2,6,8,-5,-4,4,-2,-4,-10,7,1,5,-1,-2,1,-1,-10,1,10,-4,-4,10,-3,6,7,5,-1,6,7,2,-7,-1,2,4,-9,6,-9,7,1,7,-7,8,7,1,-1,2,-7,-4,6,-1,-10,-6,3,1,9,2,2,-5,3,3,-8,-3,-9,-4,-6,-9,3,-5,1,10,6,7,3,9,5,-9,8],[-1,-10,-3,1,-5,9,1,-8,1,5,3,7,4,-3,-8,7,-9,4,5,6,-10,-2,7,3,7,6,-6,2,-7,-2,-8,-4,-6,-1,-4,3,-5,8,-8,-10,9,-6,8,-4,3,-2,5,-9,4,5,10,5,-6,7,-4,-10,-2,-9,-2,-7,-10,-9,-5,-9,-2,-7,2,-8,-7,-4,-4,5,9,-8,10,8,-4,-7,7,8,-10,-10,8,-3,-6,5,9,8,5,-9,-3,5,5,-8,7,10,2,-2,-1,-5,-1,-7,-2,8,-2,4,-5,-7,-2,3,-3,-7,-2,-5,-3,9,5,-4,-10,-6,-1,-2,-1,7,5,3,2,3,10,-8,-2,-6,-5,-4,3,9,-2,10,-1,-7]], dtype = "uint64")#candidate|4314|(4, 140)|const|uint64
var_4315 = relay.var("var_4315", dtype = "bool", shape = (512,))#candidate|4315|(512,)|var|bool
call_4313 = relay.TupleGetItem(func_397_call(relay.reshape(const_4314.astype('uint64'), [560,]), relay.reshape(var_4315.astype('bool'), [512,]), ), 0)
call_4316 = relay.TupleGetItem(func_401_call(relay.reshape(const_4314.astype('uint64'), [560,]), relay.reshape(var_4315.astype('bool'), [512,]), ), 0)
output = relay.Tuple([uop_4311,call_4313,const_4314,var_4315,])
output2 = relay.Tuple([uop_4311,call_4316,const_4314,var_4315,])
func_4318 = relay.Function([var_4304,var_4305,var_4315,], output)
mod['func_4318'] = func_4318
mod = relay.transform.InferType()(mod)
var_4319 = relay.var("var_4319", dtype = "bool", shape = (14, 6, 1))#candidate|4319|(14, 6, 1)|var|bool
var_4320 = relay.var("var_4320", dtype = "bool", shape = (14, 6, 8))#candidate|4320|(14, 6, 8)|var|bool
var_4321 = relay.var("var_4321", dtype = "bool", shape = (512,))#candidate|4321|(512,)|var|bool
output = func_4318(var_4319,var_4320,var_4321,)
func_4322 = relay.Function([var_4319,var_4320,var_4321,], output)
mutated_mod['func_4322'] = func_4322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4456 = relay.var("var_4456", dtype = "float64", shape = (5, 6, 15))#candidate|4456|(5, 6, 15)|var|float64
uop_4457 = relay.sqrt(var_4456.astype('float64')) # shape=(5, 6, 15)
func_4318_call = mod.get_global_var('func_4318')
func_4322_call = mutated_mod.get_global_var('func_4322')
var_4490 = relay.var("var_4490", dtype = "bool", shape = (84,))#candidate|4490|(84,)|var|bool
const_4491 = relay.const([True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True], dtype = "bool")#candidate|4491|(672,)|const|bool
const_4492 = relay.const([True,False,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,False,False], dtype = "bool")#candidate|4492|(512,)|const|bool
call_4489 = relay.TupleGetItem(func_4318_call(relay.reshape(var_4490.astype('bool'), [14, 6, 1]), relay.reshape(const_4491.astype('bool'), [14, 6, 8]), relay.reshape(const_4492.astype('bool'), [512,]), ), 3)
call_4493 = relay.TupleGetItem(func_4322_call(relay.reshape(var_4490.astype('bool'), [14, 6, 1]), relay.reshape(const_4491.astype('bool'), [14, 6, 8]), relay.reshape(const_4492.astype('bool'), [512,]), ), 3)
uop_4497 = relay.cosh(uop_4457.astype('float32')) # shape=(5, 6, 15)
func_340_call = mod.get_global_var('func_340')
func_343_call = mutated_mod.get_global_var('func_343')
const_4501 = relay.const([-7,2,-4,4,-4,7,-6,8,-1,8,10,-10,10,2,4,-8,-8,7,-9,-2,-3,-9,-8,-9,-9,-3,-2,10,2,-1,1,-9,8,-9,-6,2,-9,-10,-9,6,-7,-7,-1,1,10,4,-9,-10,-1,-8,1,-8,-10,-7,-9,-6,-5,-5,3,2,10,-7,-10,-8,10,-8,5,-1,-4,3,-5,-10,-4,-7,-3,-10,-6,1,-4,7,-6,-4,10,-5,8,-8,7,-3,6,-7,2,3,-4,4,-5,3,7,-2,5,-1,-5,7,-10,-4,2,-5,-9,-4,5,1,10,-3,3,4,-5,10,6,4,8,4,9,6,-10,-1,8,-6,7,-7,-5,8,-6,9,-6,9,3,5,5,-10,-4,9,-6,-2,2,-3,10,6,10,1,-10,-1,6,-5,-1,-3,9,-7,-4,-5,-10,-5,10,8,1,-7,10,4,-5,-4,-7,1,10,8,-1,-2,3,-1,1,6,-9,-2,2,6,8,-4,-8,8,5,3,1,6,5,1,-9,9,-10,6,9,-7,-1,-10,10,-8,-6,-10,6,-4,-3,8,-10,9,-6,-1,-8,-1,-1,-1,-1,-5,-10,7,-1,9,-4,8,-2,5,4,4,-6,3,8,-8,3,-7,10,-10,-2,9,-4,3,3,-7,-6,1,7,-9,7,5,3,-2,-5,6,-1,-7,-9,4,-10,3,1,-6,-9,5,-2,-8,4,8,2,1,6,-10,-8,-10,-5,-4,6,-7,5,-1,-4,-2,8,-10,-1,-6,8,-3,-2,5,-6,6,-9,5,6,-2,4,1,-3,4,3,-4,-6,7,10,7,-3,7,5,7,-9,-4,-3,5,-9,4,9,-10,3,-4,1,8,-4,7,9,9,-3,1,9,5,-4,-9,-5,1,8,2,7,-5,-6,-10,-6,-3,3,6,9,-9,10,-8,-7,-4,4,-6,7,4,4,10,-3,9,-4,-10,-8,-8,7,3,6,-2,-3,-3,-10,6,3,3,9,-1,-9,-8,2,-5,-3,-6,4,-1,-6,9,-3,1,-3,1,-8,-4,5,-6,-9,7,-9,-1,9,-10,-6,1,4,-7,-8,-8,3,5,-6,-5,4,-5,5,6,7,8,-6,7,1,-6,10,-7,-8,1,5,-8,-9,2,10,5,5,-5,2,-1,-3,4,-3,-8,-3,-6,4,9,-7,-7,-10,-6,-8,6,-2,5,-5,1,-1,-10,8,5,8,-7,-7,-3,7,-6,10,-6,-10,-8,-1,-5,-7,-7,1,-9,7,5,10,-3,-7,3,2,2,10,6,-10,-4,-6,-4,-2,-7,10,-3,1,-9,-6,8,4,7,-9,-5,-6,7,-9,-10,-3,10,-10,-6,-10,9,-9,-1,4,-7,4,3,-1,3,-1,-1,-1,-10,5,-2,-10,8,-8,2,-8,9,1,4,-2,1,10,-8,6,-4,5,-3,-8,4,-1,-10,-5,3,-10,-7,-1,-6,4,-6,5,1,-7,-4,-5,-3,-7,5,3,-10,-4,7,-9,8], dtype = "uint64")#candidate|4501|(560,)|const|uint64
call_4500 = func_340_call(relay.reshape(const_4501.astype('uint64'), [7, 5, 16]), relay.reshape(const_4501.astype('uint64'), [7, 5, 16]), )
call_4502 = func_340_call(relay.reshape(const_4501.astype('uint64'), [7, 5, 16]), relay.reshape(const_4501.astype('uint64'), [7, 5, 16]), )
func_2402_call = mod.get_global_var('func_2402')
func_2406_call = mutated_mod.get_global_var('func_2406')
var_4507 = relay.var("var_4507", dtype = "float64", shape = (480,))#candidate|4507|(480,)|var|float64
var_4508 = relay.var("var_4508", dtype = "bool", shape = (120,))#candidate|4508|(120,)|var|bool
call_4506 = relay.TupleGetItem(func_2402_call(relay.reshape(var_4507.astype('float64'), [3, 10, 16]), relay.reshape(var_4508.astype('bool'), [120,]), ), 0)
call_4509 = relay.TupleGetItem(func_2406_call(relay.reshape(var_4507.astype('float64'), [3, 10, 16]), relay.reshape(var_4508.astype('bool'), [120,]), ), 0)
uop_4511 = relay.sinh(uop_4497.astype('float32')) # shape=(5, 6, 15)
uop_4526 = relay.asinh(uop_4497.astype('float32')) # shape=(5, 6, 15)
output = relay.Tuple([call_4489,var_4490,const_4491,const_4492,call_4500,const_4501,call_4506,var_4507,var_4508,uop_4511,uop_4526,])
output2 = relay.Tuple([call_4493,var_4490,const_4491,const_4492,call_4502,const_4501,call_4509,var_4507,var_4508,uop_4511,uop_4526,])
func_4545 = relay.Function([var_4456,var_4490,var_4507,var_4508,], output)
mod['func_4545'] = func_4545
mod = relay.transform.InferType()(mod)
mutated_mod['func_4545'] = func_4545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4545_call = mutated_mod.get_global_var('func_4545')
var_4547 = relay.var("var_4547", dtype = "float64", shape = (5, 6, 15))#candidate|4547|(5, 6, 15)|var|float64
var_4548 = relay.var("var_4548", dtype = "bool", shape = (84,))#candidate|4548|(84,)|var|bool
var_4549 = relay.var("var_4549", dtype = "float64", shape = (480,))#candidate|4549|(480,)|var|float64
var_4550 = relay.var("var_4550", dtype = "bool", shape = (120,))#candidate|4550|(120,)|var|bool
call_4546 = func_4545_call(var_4547,var_4548,var_4549,var_4550,)
output = call_4546
func_4551 = relay.Function([var_4547,var_4548,var_4549,var_4550,], output)
mutated_mod['func_4551'] = func_4551
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4817 = relay.const([[[3,4,1,-3,8,-5,4,-10,-8],[7,-3,-7,10,-9,-1,-2,4,-8],[-10,2,-6,-6,9,-1,-3,7,7],[-10,9,-6,4,3,-4,5,-3,3],[-5,10,-7,3,9,7,-3,-1,-8],[3,4,2,-8,-3,5,8,5,4],[-9,1,6,-4,-6,-1,1,-8,9],[-5,4,-8,2,-9,-6,-10,-1,-4],[10,3,-10,-2,-8,8,-8,-6,10],[3,4,10,6,-6,10,3,-8,8],[3,-3,-10,-10,-3,-3,2,5,-10]],[[7,-5,-5,5,-7,-6,-4,-4,-10],[5,3,8,-1,3,-10,10,-3,10],[-2,-7,7,3,-2,8,1,6,1],[9,-6,-5,7,4,2,7,-9,4],[-8,7,6,-4,9,1,3,10,-4],[6,2,-3,-3,2,-5,-8,-5,-2],[10,-10,-5,-9,-10,-8,5,10,-3],[4,5,8,4,4,-10,-2,4,1],[2,-8,8,9,-1,3,-1,-1,-4],[-6,-4,-8,9,-9,2,2,10,6],[-7,3,3,-1,-2,-3,-3,5,-1]],[[4,-2,5,-2,8,9,10,-9,4],[-9,-10,-9,-9,4,-2,6,-7,10],[2,8,-4,4,-3,-8,-6,-3,-2],[-9,-7,-5,-8,-6,1,4,7,-3],[-9,8,-9,10,-5,-2,-7,8,-4],[4,5,-6,5,-10,-3,7,10,-5],[-2,-6,6,-4,9,-9,-4,-4,3],[5,-1,2,8,8,-5,-8,-6,5],[-2,-6,-8,1,-8,-3,6,-8,-5],[-3,-10,-2,3,-3,6,-2,-5,-9],[-5,-9,7,1,1,10,-10,8,3]],[[-6,-4,5,4,-10,6,-6,-2,-4],[-6,-4,-6,3,-9,-7,-3,-1,9],[8,-3,-6,10,10,6,2,-8,-9],[3,10,2,-8,-10,1,3,5,-10],[7,-3,-1,-10,1,1,4,-1,-8],[2,8,-5,1,10,5,1,9,6],[4,-3,8,6,-10,6,10,3,10],[-10,-5,-1,10,2,-5,-9,6,4],[6,4,9,-3,10,8,6,-4,-10],[-3,6,-10,-4,2,3,-4,7,4],[-9,-4,6,10,-2,3,9,2,9]],[[-8,5,3,-7,-6,4,-2,-10,2],[10,6,-6,6,4,3,-4,-8,-3],[6,7,-6,-5,-6,5,-10,1,1],[-6,-5,6,8,8,-8,7,1,-7],[5,-5,6,-10,-7,6,-10,-4,5],[-2,-10,8,-3,4,-1,3,5,-8],[8,-9,8,-2,8,-1,5,-7,-4],[-7,-2,-1,1,8,1,-7,1,-3],[-1,-7,-10,3,2,2,-5,-4,-9],[-9,-10,8,-10,-10,3,1,-8,-3],[9,-6,6,-10,9,9,9,-10,-4]],[[10,-1,8,-4,8,-9,2,10,10],[8,-8,-2,-4,-4,1,1,5,-2],[8,2,-1,10,9,-3,-4,9,-9],[1,-3,8,-5,5,-2,3,-6,7],[-7,1,5,-7,7,4,-6,-9,-10],[-2,7,6,-6,-3,-5,-10,-7,8],[-6,-4,-10,1,3,-2,-9,1,4],[9,-8,2,3,6,4,-6,1,-7],[8,5,-10,-6,3,-6,5,-9,-10],[-6,5,-4,8,-1,-2,9,6,3],[3,4,-7,5,8,4,-4,-10,4]],[[8,-8,2,9,9,-5,1,4,-6],[-8,2,4,3,-8,-9,-8,6,-7],[-5,-10,-2,-9,-5,-8,3,-1,-1],[2,-6,-8,-3,-1,-2,9,-5,-4],[-6,-7,5,1,1,-4,10,6,-6],[-1,1,-10,-2,-2,2,3,-6,-8],[-8,-10,2,3,10,7,4,-5,-2],[9,7,-3,5,6,8,6,-2,5],[2,7,-7,-8,-4,7,-9,10,-8],[-5,-8,-6,-5,-10,-9,-3,5,5],[-4,-3,7,4,8,3,8,-9,-9]],[[1,-5,10,-10,-7,3,-6,-4,-7],[1,-6,-7,3,7,2,-6,9,-5],[-7,2,-9,5,-5,-4,-1,-4,-4],[-8,-6,10,2,-2,7,-9,-2,10],[7,-9,-6,5,-10,6,3,2,10],[9,5,-2,7,-7,-2,2,-2,-6],[-4,8,1,7,-8,5,-10,-10,4],[-7,3,1,1,-9,-6,3,-5,5],[3,-1,-2,10,1,-7,4,-5,8],[-4,-1,1,-7,1,-3,1,-10,-10],[-1,4,-2,4,-5,-3,-6,1,2]],[[-7,6,5,6,-9,10,-1,-10,10],[8,-6,-4,-7,7,-10,-9,10,-6],[-7,10,-1,5,-1,10,5,-7,2],[-9,4,4,5,-2,1,9,-10,-3],[-9,-4,-1,4,-4,-6,-4,3,3],[1,-3,2,-1,-1,1,-4,2,3],[-4,-9,7,5,2,-9,-7,2,3],[5,8,5,-10,2,-8,-5,-1,1],[2,1,-3,-9,-1,2,9,-6,-5],[-6,9,-9,2,-9,10,5,5,-6],[-6,-1,-7,9,-2,3,-5,2,-7]],[[-8,5,-6,-7,-5,-6,-3,7,7],[6,-2,-2,-6,5,10,-9,3,-8],[-8,-9,-9,5,7,-5,10,10,-2],[8,-1,5,5,2,7,10,-6,10],[5,-9,-9,-7,-8,10,1,-7,1],[4,8,-7,-5,-2,-5,8,6,-2],[-4,4,6,-1,2,-7,-9,-10,-6],[-4,3,6,8,9,3,-1,-8,8],[-8,9,6,2,9,-2,10,-10,4],[4,1,-8,-5,-1,3,-7,8,-1],[-5,10,7,-1,-2,4,8,-7,-1]],[[3,-3,1,6,7,5,10,10,-6],[-4,6,9,-1,7,-5,-3,6,-5],[-4,-4,-6,-6,9,-6,3,-1,5],[8,-6,-4,-3,9,4,6,-4,-8],[7,7,-2,-10,-1,3,-10,2,5],[-7,4,8,2,8,2,8,-2,7],[6,-10,-10,-4,3,6,-3,-6,1],[-5,-8,10,-10,1,-3,-7,-10,7],[1,8,-1,-4,9,9,4,2,-8],[-1,-1,10,5,-3,6,4,-5,-3],[-7,9,5,-6,4,2,-2,-8,-7]]], dtype = "uint16")#candidate|4817|(11, 11, 9)|const|uint16
const_4818 = relay.const([[[-3,-3,3,2,10,4,3,5,5],[-6,6,7,6,-8,7,-10,-6,9],[-6,1,-8,-1,7,1,-10,9,10],[-5,5,-9,-9,7,1,-7,9,-3],[5,10,-8,5,7,3,-10,-8,-2],[-9,5,8,-2,-2,-5,1,-7,-1],[1,-4,-2,8,7,-6,2,-2,3],[-4,7,9,-1,1,9,-6,9,-9],[-8,10,-2,4,4,-10,8,-4,-9],[6,-1,-9,-8,-3,4,-8,8,8],[6,5,-10,9,-10,-2,3,-1,4]],[[7,7,-10,1,-3,-6,2,-3,-4],[-3,-10,3,1,1,-2,-6,-8,10],[-3,-8,3,-5,5,-1,10,1,4],[1,10,1,-6,5,-7,-4,8,-7],[5,6,-10,1,9,-8,-6,2,9],[-1,10,1,-1,-10,-8,-1,-6,6],[-4,-8,1,-7,4,-2,-5,-10,-9],[4,9,-2,-8,-9,-10,4,2,-6],[-7,9,-6,-6,3,6,8,-5,-4],[1,8,8,-7,-1,-4,3,3,1],[-2,-10,3,-9,10,8,-1,-5,3]],[[8,-8,8,-7,3,2,1,1,8],[-1,-8,3,4,7,2,5,-9,-8],[-6,7,-8,3,2,3,9,1,5],[-3,7,-8,-1,8,7,6,-4,3],[3,-9,10,-7,6,-8,1,7,3],[-6,10,2,-1,-3,5,-6,1,-3],[9,-2,7,5,-1,-5,-10,9,-6],[-9,1,-3,9,-5,7,3,-10,-3],[7,9,2,4,-7,-2,-6,-2,-5],[3,6,-6,10,1,6,-8,-3,1],[-1,5,-10,10,10,-2,1,-10,-5]],[[-2,-6,4,-8,-5,1,6,2,9],[10,7,5,6,-3,3,-5,-3,-9],[-4,-1,-9,6,-4,7,-10,7,7],[-7,8,-1,9,7,10,-1,4,-5],[4,-10,-10,6,-4,-9,4,5,-5],[-2,-6,-8,-6,1,1,-7,-7,-5],[-4,1,3,10,-6,-9,3,7,2],[-6,-4,-8,-4,10,-2,10,-6,-7],[-1,-6,3,-9,-9,-6,2,9,10],[1,-4,5,7,-3,6,-4,4,3],[-5,4,9,-5,3,-6,-3,6,9]],[[-3,-7,-9,-4,-10,-3,8,5,4],[-3,4,-4,10,9,-5,1,5,4],[-3,-9,7,-5,-3,-6,-4,-7,6],[1,1,5,-10,-5,4,-1,6,-9],[-3,7,-3,-3,3,-7,1,6,-8],[7,-5,3,2,6,3,2,-10,-1],[5,9,-2,-6,4,5,10,2,-6],[7,-10,-7,-8,10,-9,10,5,-1],[-8,1,6,-6,10,4,-4,6,-3],[6,2,-9,4,-7,9,-7,-5,-8],[4,1,-3,-2,5,-8,10,10,-7]],[[7,8,-2,1,5,8,1,1,-8],[7,9,7,-10,1,-9,1,-4,9],[10,-7,-10,-10,9,-10,-4,-6,-9],[-2,9,3,6,5,4,7,-8,9],[-1,8,10,8,7,9,-6,6,-8],[5,-2,-3,-6,8,-5,1,-6,6],[9,2,-8,1,-5,1,-8,5,-9],[-6,-7,9,1,-9,-1,5,-1,-3],[9,4,2,5,-6,-10,9,9,8],[1,10,-10,-5,10,-1,4,8,4],[-7,-10,1,7,-3,7,8,5,-6]],[[-10,10,-6,2,3,-9,-8,5,-9],[-7,6,5,-3,9,-3,-3,-7,-1],[-3,4,3,-2,2,-10,-4,9,8],[3,-9,9,9,-2,-4,1,8,-3],[9,-3,-3,-1,-9,-6,4,-8,2],[-2,-1,9,-9,-5,6,-9,5,3],[4,-4,-4,-2,10,3,9,-6,2],[-8,-6,10,-2,6,-3,-3,4,-2],[10,9,3,-3,-7,-5,-4,2,7],[-3,-2,-4,9,2,7,-4,-7,6],[-6,4,-7,2,3,5,-7,9,-9]],[[-4,2,-4,7,7,-2,4,1,-1],[9,2,-9,-4,-5,-8,7,5,-6],[-10,6,9,-10,5,-4,-2,4,-9],[-2,1,-7,4,-9,-5,7,-1,3],[-10,-6,-6,5,-3,5,2,-6,-7],[-2,-9,9,9,1,8,2,9,-4],[8,3,6,5,5,3,-4,-4,-9],[9,8,7,-6,-3,5,-7,5,-4],[10,-1,1,-1,-2,-10,-8,6,-10],[2,-10,-8,2,-9,9,-2,-5,8],[-8,10,1,-8,10,-7,-6,6,-3]],[[4,2,-4,9,2,8,7,-8,-5],[-1,-10,-8,-3,5,4,-4,3,4],[-8,3,4,-1,-9,-1,2,9,5],[8,-6,5,-2,10,8,-5,6,8],[3,-2,2,7,7,5,-5,-8,-9],[1,-4,7,5,-10,-3,-3,-2,7],[10,8,-1,-7,-8,-9,10,6,-3],[7,8,10,-8,8,-8,3,-2,-5],[-4,1,-1,-8,-10,-6,1,2,-3],[-3,-5,-10,-7,-1,4,1,-2,1],[-1,-4,-3,-6,4,-4,-10,9,-7]],[[8,-3,-2,-7,-4,-5,2,-4,-9],[-5,-1,-4,-7,3,10,6,-3,-7],[4,8,-2,-5,-9,9,5,-4,4],[-5,-2,8,8,8,-2,8,8,6],[-9,2,-1,9,-6,4,10,-4,8],[4,5,7,6,3,-3,4,1,1],[9,-10,2,-9,-3,-7,-5,9,5],[-7,-3,-7,-1,-8,6,-6,9,2],[-10,-6,-3,8,-5,8,-2,3,5],[-2,8,3,-1,-1,-5,-4,3,9],[-4,-4,3,1,4,3,-1,-10,-6]],[[4,-1,8,7,10,3,-8,8,7],[1,-9,9,8,6,10,-8,9,-7],[-5,2,-6,7,-3,-5,8,-8,5],[-6,9,9,-6,-4,-6,4,7,7],[3,9,-10,-6,-4,-5,4,-10,-5],[-4,7,6,9,5,7,9,-9,-4],[5,-9,-6,8,6,-5,-6,-2,9],[6,-9,3,-4,-4,3,4,-1,6],[7,-9,1,-4,5,10,3,1,7],[-5,-6,-6,10,6,-4,1,6,4],[4,-2,5,2,-8,-9,-4,-7,-7]]], dtype = "uint16")#candidate|4818|(11, 11, 9)|const|uint16
bop_4819 = relay.greater(const_4817.astype('bool'), relay.reshape(const_4818.astype('bool'), relay.shape_of(const_4817))) # shape=(11, 11, 9)
func_754_call = mod.get_global_var('func_754')
func_757_call = mutated_mod.get_global_var('func_757')
const_4827 = relay.const([[-4.518974,2.890575,8.722691,-0.814791,5.082932,6.604279,-7.214203,7.879613,-4.297972,3.278029,9.254387,1.259329,-9.793019,8.227044,6.130175,-2.390277,4.734741,-3.856816,-7.052800,1.534830,-7.517618,0.788572,2.487248,-1.444438,-8.188925,4.901355,-8.195401,8.767036,9.456653,-6.793639,-4.585941,-3.381789,-0.469595,-1.765864,-6.367955,-0.672932,-3.407763,1.401228,-2.650229,0.423197,-6.338067,-1.592238,3.249312,5.953045,-6.782179,-4.888192,-1.101837,-6.186178,1.909558,-9.760382,2.531701,-5.379303,-6.133027,1.863191,0.775995,7.776717,4.957067,0.722285,6.394557,-3.238687,-2.766768,-2.704607,3.550941,7.092478,-2.442146,-8.482185,-6.052805,9.753379,1.805655,9.948333,-0.247511,-5.992718,-2.778592,-0.059863,-4.095517,7.735386,4.836791,9.293963,1.142808,-6.133855,-3.663279,5.479312,9.977718,7.011952,0.665251,-4.055300,-0.548650,0.717298,-9.633026,-9.330481,-2.545634,1.659095,-9.891680,3.951848,1.182536,2.847174,-6.702438,-0.788965,6.708967,-6.204743,-9.094829,-2.103433,1.157042,1.479989,-2.233156,-0.601220,1.084845,-6.450039,7.068971,3.976973,2.851566,-6.860584,2.286013,-4.635807,4.907138,8.613606,9.197370,-9.313600,-1.346775,-6.466731,3.203662,6.002909,-1.137580,-7.781965,5.708323,-4.667730,-6.760408,2.787065,0.819793,5.049985,-8.772694,-9.539982,-8.764758,0.179976,-9.962233,3.906727,-7.239160,-3.419140,7.220690,-8.230872,4.463632,8.162173,-5.052407,0.850461,-3.487922,-4.337144,-2.264837,-0.806905,0.213704,2.428346,6.588360,7.880731,8.108363,-0.225936,0.150587,-8.140494,9.646237,-1.352515,-3.609752,4.675305,-5.277216,1.202542,-1.819997,-3.401161,2.190680,3.078322,-9.985673,5.005935,2.106472,-4.868550,-6.908025,3.429328,1.408608,2.452107,0.241593,-6.281528,-9.054386,-6.752951,-2.065125,-2.818758,-0.140860,-2.776527,4.003150,8.659314,-3.127569,6.902921,-9.460831,-0.226806,-0.679598,1.594645,6.876081,-2.644355,8.665255,-5.130002,1.075039,-6.312675,2.547540,-7.114462,-6.365467,7.561639,-4.969836,8.022225,5.709191,-3.980890,-2.207317,2.943416,2.923263,9.185878,1.429351,-4.210472,6.637388,-2.721080,-0.262363,4.721605,-8.287629,0.943034,0.108512,2.838322,-3.185188,-3.986279,3.317721,-4.563528,8.738730,-6.863612,-2.875979,7.662150,0.408974,-5.561448,3.069207,-7.672169,-9.404430,-2.062383,-6.991526,-3.958236]], dtype = "float32")#candidate|4827|(1, 234)|const|float32
const_4828 = relay.const([-4.455288,2.020271,-8.908393,-2.618081,1.115598,-7.392951,-0.864057,-2.249034,-5.050338,3.950826,-3.754809,-8.566052,-6.890300,9.446896,4.046392,-5.123912,5.920222,-3.848210,9.625629,-9.520197,-3.952967,1.823217,7.174790,-6.795357,-1.137128,-9.537251,7.950471,-7.886682,7.785572,4.500767,-7.982083,-7.386132,-4.922033,5.868203,-1.710138,-4.771246,-5.832491,4.973052,6.943616,6.401604,2.778070,-6.475047,-2.356797,-5.700664,-3.989706,4.524819,-9.676695,-5.072043,-9.050485,-8.081648,4.637548,8.759669,4.856983,5.817035,7.528140,-8.006027,-6.132160,4.541342,4.953155,-3.411101,-4.887596,8.336086,-1.382326,8.891133,2.359407,4.329505,-1.432230,9.675836,8.682709,-7.850471,3.065674,7.772723,0.372821,1.526599,2.189937,-2.141716,9.657400,-9.527414,-6.797346,-2.699650,8.893277,-8.092862,-0.823371,1.280778,8.671167,-5.459281,0.630936,-9.884616,6.918128,9.466455,-4.945956,-9.566766,9.056372,3.767374,-0.828220,-1.700972,8.001770,7.907991,-7.493581,9.968584,-1.201820,-1.073691,8.978094,-4.364013,-2.501357,6.547086,0.621407,-6.539157,-8.594247,-2.343947,3.433057,4.498012,-8.363714,6.528567,6.466191,-2.536395,-1.473226,1.482706,2.351456,-3.245268,-8.743065,-6.917395,2.426535,-5.309503,-1.614619,-8.271654,2.795418,-2.054139,-6.631663,-8.649529,-9.555753,3.686674,-8.502522,0.760845,-8.541510,5.181802,3.653373,5.181330,4.473846,1.658098,-5.349042,7.842542,8.385399,4.077712,0.982785,3.074114,-5.441285,0.295703,-2.992704,0.744228], dtype = "float32")#candidate|4828|(150,)|const|float32
call_4826 = relay.TupleGetItem(func_754_call(relay.reshape(const_4827.astype('float32'), [2, 9, 13]), relay.reshape(const_4828.astype('float32'), [150,]), ), 0)
call_4829 = relay.TupleGetItem(func_757_call(relay.reshape(const_4827.astype('float32'), [2, 9, 13]), relay.reshape(const_4828.astype('float32'), [150,]), ), 0)
func_3676_call = mod.get_global_var('func_3676')
func_3681_call = mutated_mod.get_global_var('func_3681')
var_4839 = relay.var("var_4839", dtype = "uint8", shape = (1344, 1))#candidate|4839|(1344, 1)|var|uint8
call_4838 = relay.TupleGetItem(func_3676_call(relay.reshape(var_4839.astype('uint8'), [14, 8, 12]), relay.reshape(var_4839.astype('uint8'), [14, 8, 12]), relay.reshape(call_4826.astype('float32'), [234,]), ), 1)
call_4840 = relay.TupleGetItem(func_3681_call(relay.reshape(var_4839.astype('uint8'), [14, 8, 12]), relay.reshape(var_4839.astype('uint8'), [14, 8, 12]), relay.reshape(call_4826.astype('float32'), [234,]), ), 1)
uop_4862 = relay.atan(const_4818.astype('float32')) # shape=(11, 11, 9)
output = relay.Tuple([bop_4819,call_4826,const_4827,const_4828,call_4838,var_4839,uop_4862,])
output2 = relay.Tuple([bop_4819,call_4829,const_4827,const_4828,call_4840,var_4839,uop_4862,])
func_4868 = relay.Function([var_4839,], output)
mod['func_4868'] = func_4868
mod = relay.transform.InferType()(mod)
var_4869 = relay.var("var_4869", dtype = "uint8", shape = (1344, 1))#candidate|4869|(1344, 1)|var|uint8
output = func_4868(var_4869)
func_4870 = relay.Function([var_4869], output)
mutated_mod['func_4870'] = func_4870
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4904 = relay.const([[[6.020451],[6.821401],[6.831743],[4.377084],[-6.868498],[8.838347],[-4.837270],[-6.071698],[5.893926],[-4.729003],[-4.873942]],[[-3.299938],[1.430359],[-5.649269],[-1.148017],[-2.689529],[7.767481],[-5.399558],[8.354720],[1.119149],[4.505045],[-3.965994]],[[0.513024],[1.348772],[6.064043],[-0.120703],[9.398245],[-4.747550],[-3.345704],[2.883630],[-5.884558],[-7.809990],[7.861501]],[[-5.812566],[-2.276967],[-3.825272],[2.558060],[-0.911956],[0.511660],[8.962555],[6.283123],[-4.947461],[-6.268681],[0.470252]],[[-2.855280],[-6.815138],[5.863293],[-5.492258],[4.935001],[6.415026],[-7.580148],[4.220853],[-0.536128],[3.871439],[2.484397]],[[0.828669],[-6.703099],[9.666940],[-4.443244],[5.796254],[-5.113931],[1.310041],[6.378262],[-4.475667],[0.971966],[-8.776055]],[[-6.037194],[1.228449],[1.277499],[-9.992476],[5.788145],[-5.550226],[-3.773473],[6.596922],[-9.429007],[0.197798],[-3.158254]],[[-2.520537],[-3.318418],[-7.068748],[-4.110461],[-1.639790],[-0.189085],[-3.984827],[-9.637582],[-4.255513],[-8.004555],[1.094839]],[[9.609235],[3.139983],[5.103555],[-2.607806],[3.369557],[3.083101],[9.142560],[4.331816],[5.362534],[-1.217397],[4.562851]],[[5.348491],[-9.486135],[-1.628493],[-7.230873],[7.670511],[-5.895620],[-4.545826],[5.094113],[4.248832],[4.344898],[-9.966926]],[[-9.824225],[1.107317],[5.868312],[8.110147],[-8.424569],[-9.951379],[-4.306573],[5.607781],[-4.096814],[-4.176374],[0.809408]],[[9.970260],[7.039836],[1.301478],[9.444402],[-5.331060],[-3.745772],[1.472093],[6.765727],[-9.230686],[-1.870048],[-8.603978]],[[2.370698],[5.253138],[-4.390909],[-9.507084],[-6.909308],[-2.880207],[-6.515932],[2.722282],[-5.956944],[9.359967],[9.503080]],[[-6.295260],[0.103039],[-5.820617],[-3.526007],[6.118366],[-7.019823],[8.516591],[-4.185446],[-9.913883],[9.029101],[3.606644]],[[-2.274900],[-9.790937],[-8.619995],[6.854129],[-6.360275],[-0.681399],[7.998313],[2.519654],[-9.929507],[9.195409],[-0.847134]]], dtype = "float64")#candidate|4904|(15, 11, 1)|const|float64
var_4905 = relay.var("var_4905", dtype = "float64", shape = (15, 11, 1))#candidate|4905|(15, 11, 1)|var|float64
bop_4906 = relay.power(const_4904.astype('float64'), relay.reshape(var_4905.astype('float64'), relay.shape_of(const_4904))) # shape=(15, 11, 1)
func_1109_call = mod.get_global_var('func_1109')
func_1113_call = mutated_mod.get_global_var('func_1113')
var_4917 = relay.var("var_4917", dtype = "float64", shape = (420,))#candidate|4917|(420,)|var|float64
call_4916 = relay.TupleGetItem(func_1109_call(relay.reshape(var_4917.astype('float64'), [14, 5, 6]), relay.reshape(var_4917.astype('float64'), [14, 5, 6]), ), 0)
call_4918 = relay.TupleGetItem(func_1113_call(relay.reshape(var_4917.astype('float64'), [14, 5, 6]), relay.reshape(var_4917.astype('float64'), [14, 5, 6]), ), 0)
func_281_call = mod.get_global_var('func_281')
func_284_call = mutated_mod.get_global_var('func_284')
var_4920 = relay.var("var_4920", dtype = "float32", shape = (5, 30))#candidate|4920|(5, 30)|var|float32
call_4919 = relay.TupleGetItem(func_281_call(relay.reshape(var_4920.astype('float32'), [5, 10, 3])), 0)
call_4921 = relay.TupleGetItem(func_284_call(relay.reshape(var_4920.astype('float32'), [5, 10, 3])), 0)
output = relay.Tuple([bop_4906,call_4916,var_4917,call_4919,var_4920,])
output2 = relay.Tuple([bop_4906,call_4918,var_4917,call_4921,var_4920,])
func_4931 = relay.Function([var_4905,var_4917,var_4920,], output)
mod['func_4931'] = func_4931
mod = relay.transform.InferType()(mod)
mutated_mod['func_4931'] = func_4931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4931_call = mutated_mod.get_global_var('func_4931')
var_4933 = relay.var("var_4933", dtype = "float64", shape = (15, 11, 1))#candidate|4933|(15, 11, 1)|var|float64
var_4934 = relay.var("var_4934", dtype = "float64", shape = (420,))#candidate|4934|(420,)|var|float64
var_4935 = relay.var("var_4935", dtype = "float32", shape = (5, 30))#candidate|4935|(5, 30)|var|float32
call_4932 = func_4931_call(var_4933,var_4934,var_4935,)
output = call_4932
func_4936 = relay.Function([var_4933,var_4934,var_4935,], output)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4976 = relay.var("var_4976", dtype = "float64", shape = (3, 1, 14))#candidate|4976|(3, 1, 14)|var|float64
var_4977 = relay.var("var_4977", dtype = "float64", shape = (3, 14, 14))#candidate|4977|(3, 14, 14)|var|float64
bop_4978 = relay.multiply(var_4976.astype('float64'), var_4977.astype('float64')) # shape=(3, 14, 14)
output = relay.Tuple([bop_4978,])
output2 = relay.Tuple([bop_4978,])
func_4987 = relay.Function([var_4976,var_4977,], output)
mod['func_4987'] = func_4987
mod = relay.transform.InferType()(mod)
mutated_mod['func_4987'] = func_4987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4987_call = mutated_mod.get_global_var('func_4987')
var_4989 = relay.var("var_4989", dtype = "float64", shape = (3, 1, 14))#candidate|4989|(3, 1, 14)|var|float64
var_4990 = relay.var("var_4990", dtype = "float64", shape = (3, 14, 14))#candidate|4990|(3, 14, 14)|var|float64
call_4988 = func_4987_call(var_4989,var_4990,)
output = call_4988
func_4991 = relay.Function([var_4989,var_4990,], output)
mutated_mod['func_4991'] = func_4991
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5194 = relay.const([[[4.375260,-8.890546,-3.464952,-6.847339,3.997709,2.594198,1.275122,-0.393375,-3.914563,-4.261441,7.924898,0.229126,3.456598,2.208615]]], dtype = "float64")#candidate|5194|(1, 1, 14)|const|float64
uop_5195 = relay.log2(const_5194.astype('float64')) # shape=(1, 1, 14)
bop_5201 = relay.add(uop_5195.astype('int8'), relay.reshape(const_5194.astype('int8'), relay.shape_of(uop_5195))) # shape=(1, 1, 14)
output = relay.Tuple([bop_5201,])
output2 = relay.Tuple([bop_5201,])
func_5211 = relay.Function([], output)
mod['func_5211'] = func_5211
mod = relay.transform.InferType()(mod)
mutated_mod['func_5211'] = func_5211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mutated_mod.get_global_var('func_5211')
call_5212 = func_5211_call()
output = call_5212
func_5213 = relay.Function([], output)
mutated_mod['func_5213'] = func_5213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_5235 = relay.TupleGetItem(func_5211_call(), 0)
call_5236 = relay.TupleGetItem(func_5213_call(), 0)
output = call_5235
output2 = call_5236
func_5238 = relay.Function([], output)
mod['func_5238'] = func_5238
mod = relay.transform.InferType()(mod)
output = func_5238()
func_5239 = relay.Function([], output)
mutated_mod['func_5239'] = func_5239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5247 = relay.var("var_5247", dtype = "int8", shape = (11, 8, 14))#candidate|5247|(11, 8, 14)|var|int8
var_5248 = relay.var("var_5248", dtype = "int8", shape = (11, 8, 14))#candidate|5248|(11, 8, 14)|var|int8
bop_5249 = relay.logical_xor(var_5247.astype('int8'), relay.reshape(var_5248.astype('int8'), relay.shape_of(var_5247))) # shape=(11, 8, 14)
bop_5264 = relay.left_shift(bop_5249.astype('int16'), relay.reshape(var_5248.astype('int16'), relay.shape_of(bop_5249))) # shape=(11, 8, 14)
func_4931_call = mod.get_global_var('func_4931')
func_4936_call = mutated_mod.get_global_var('func_4936')
var_5272 = relay.var("var_5272", dtype = "float64", shape = (165,))#candidate|5272|(165,)|var|float64
var_5273 = relay.var("var_5273", dtype = "float64", shape = (1, 420))#candidate|5273|(1, 420)|var|float64
var_5274 = relay.var("var_5274", dtype = "float32", shape = (150,))#candidate|5274|(150,)|var|float32
call_5271 = relay.TupleGetItem(func_4931_call(relay.reshape(var_5272.astype('float64'), [15, 11, 1]), relay.reshape(var_5273.astype('float64'), [420,]), relay.reshape(var_5274.astype('float32'), [5, 30]), ), 4)
call_5275 = relay.TupleGetItem(func_4936_call(relay.reshape(var_5272.astype('float64'), [15, 11, 1]), relay.reshape(var_5273.astype('float64'), [420,]), relay.reshape(var_5274.astype('float32'), [5, 30]), ), 4)
func_3676_call = mod.get_global_var('func_3676')
func_3681_call = mutated_mod.get_global_var('func_3681')
var_5280 = relay.var("var_5280", dtype = "uint8", shape = (1344,))#candidate|5280|(1344,)|var|uint8
const_5281 = relay.const([[3.218182,4.264734,1.725309,2.699846,8.994288,0.339289],[4.541570,-3.837819,2.857951,7.821773,9.805501,8.081787],[-7.020994,3.638623,-6.222469,-5.234824,3.089273,-7.345677],[-3.716447,-3.535526,-7.586882,1.118883,3.794698,2.918269],[-7.833652,3.697581,-4.157267,-8.346698,8.194013,9.398909],[3.499898,8.195917,-5.588478,-3.319652,7.237093,-5.627289],[-6.316457,9.532509,3.858035,-0.392971,7.591658,4.145352],[-1.134301,-4.234188,-0.600094,6.228153,9.650895,-4.944339],[-6.951070,-9.655846,9.895675,-7.944587,-9.441861,-4.862980],[-1.012322,-5.214688,-8.179081,3.808451,7.247028,-0.113990],[-2.394502,-3.663506,-6.960267,8.191954,1.434372,-8.371668],[-6.728422,-5.170586,-0.592347,-5.446479,8.473239,-4.871725],[-3.808644,9.542079,6.207765,9.335792,1.939411,5.791786],[3.108217,1.213189,-1.462672,9.381791,-9.680954,0.587405],[-9.075924,4.932648,-3.719545,5.641305,9.137378,2.072430],[-0.646960,-1.489066,-2.377155,4.606637,-9.936779,-7.456598],[-6.029223,7.676213,4.693554,2.354155,-6.843291,3.325132],[-1.108442,-9.869348,1.484408,-2.037992,-2.711560,-7.094123],[-0.352619,-3.863052,-9.673907,5.525208,2.733695,0.942764],[-8.319046,-3.513574,3.834283,8.207774,6.949534,0.457182],[0.851925,-4.038269,1.783856,-8.735055,0.458939,-4.268767],[0.006775,-3.658625,6.463276,5.872889,4.385838,-7.710289],[-1.247978,-7.741088,8.840172,-3.832870,-4.791786,3.175578],[9.643984,8.630342,-7.559042,-5.686298,-5.210190,-0.653750],[-5.054500,6.629115,-1.773505,-4.743487,9.376424,-1.140493],[5.255223,-6.101265,3.015786,4.393725,8.263176,1.543857],[-3.646203,-1.685463,3.872380,-1.499813,-1.553989,2.268584],[-5.036731,3.651595,-2.957000,-6.522957,3.889889,8.487261],[-7.437737,5.121548,-2.269478,-0.401362,5.165428,3.386253],[6.042899,-2.367368,7.119026,-5.954566,-2.984588,5.835600],[6.972823,-1.553830,-5.226425,-5.227994,-3.992372,6.197154],[-1.023896,5.337401,-0.830814,-3.528259,9.097593,2.114260],[-1.865774,-0.694478,-4.837117,-0.041426,4.966708,-7.356945],[-2.615635,5.714192,-1.694696,2.595485,-4.131361,-2.253548],[8.691420,-7.418006,-7.423432,0.651388,-8.537146,1.322300],[-0.176735,-3.771444,-1.515198,1.806701,0.389986,4.727379],[4.956080,4.672865,2.308959,-8.415219,-2.201012,0.445356],[9.618042,-3.223751,-7.607346,-0.583385,0.015476,5.467162],[9.266632,-6.968780,4.712480,-4.298397,4.448185,-0.716536]], dtype = "float32")#candidate|5281|(39, 6)|const|float32
call_5279 = relay.TupleGetItem(func_3676_call(relay.reshape(var_5280.astype('uint8'), [14, 8, 12]), relay.reshape(var_5280.astype('uint8'), [14, 8, 12]), relay.reshape(const_5281.astype('float32'), [234,]), ), 3)
call_5282 = relay.TupleGetItem(func_3681_call(relay.reshape(var_5280.astype('uint8'), [14, 8, 12]), relay.reshape(var_5280.astype('uint8'), [14, 8, 12]), relay.reshape(const_5281.astype('float32'), [234,]), ), 3)
bop_5283 = relay.subtract(call_5279.astype('int16'), relay.reshape(call_5271.astype('int16'), relay.shape_of(call_5279))) # shape=(150,)
bop_5286 = relay.subtract(call_5282.astype('int16'), relay.reshape(call_5275.astype('int16'), relay.shape_of(call_5282))) # shape=(150,)
output = relay.Tuple([bop_5264,var_5272,var_5273,var_5274,var_5280,const_5281,bop_5283,])
output2 = relay.Tuple([bop_5264,var_5272,var_5273,var_5274,var_5280,const_5281,bop_5286,])
func_5297 = relay.Function([var_5247,var_5248,var_5272,var_5273,var_5274,var_5280,], output)
mod['func_5297'] = func_5297
mod = relay.transform.InferType()(mod)
mutated_mod['func_5297'] = func_5297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5297_call = mutated_mod.get_global_var('func_5297')
var_5299 = relay.var("var_5299", dtype = "int8", shape = (11, 8, 14))#candidate|5299|(11, 8, 14)|var|int8
var_5300 = relay.var("var_5300", dtype = "int8", shape = (11, 8, 14))#candidate|5300|(11, 8, 14)|var|int8
var_5301 = relay.var("var_5301", dtype = "float64", shape = (165,))#candidate|5301|(165,)|var|float64
var_5302 = relay.var("var_5302", dtype = "float64", shape = (1, 420))#candidate|5302|(1, 420)|var|float64
var_5303 = relay.var("var_5303", dtype = "float32", shape = (150,))#candidate|5303|(150,)|var|float32
var_5304 = relay.var("var_5304", dtype = "uint8", shape = (1344,))#candidate|5304|(1344,)|var|uint8
call_5298 = func_5297_call(var_5299,var_5300,var_5301,var_5302,var_5303,var_5304,)
output = call_5298
func_5305 = relay.Function([var_5299,var_5300,var_5301,var_5302,var_5303,var_5304,], output)
mutated_mod['func_5305'] = func_5305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5238_call = mod.get_global_var('func_5238')
func_5239_call = mutated_mod.get_global_var('func_5239')
call_5312 = func_5238_call()
call_5313 = func_5238_call()
output = call_5312
output2 = call_5313
func_5321 = relay.Function([], output)
mod['func_5321'] = func_5321
mod = relay.transform.InferType()(mod)
output = func_5321()
func_5322 = relay.Function([], output)
mutated_mod['func_5322'] = func_5322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5238_call = mod.get_global_var('func_5238')
func_5239_call = mutated_mod.get_global_var('func_5239')
call_5347 = func_5238_call()
call_5348 = func_5238_call()
const_5364 = relay.const([[[-8,-4,9,9,5,2,6,5,-4,5,-2,-7,9,1],[-5,3,-3,-8,-6,10,8,-5,9,-6,9,-5,8,-8],[-9,-2,-1,8,5,-6,3,-2,1,-5,7,3,3,-9],[-4,-7,-5,5,-3,9,9,8,-5,-2,10,-7,1,5]],[[8,2,-10,-4,7,10,-2,-9,-8,2,-9,-8,-4,-6],[-4,8,4,5,10,-8,9,-10,-8,-4,5,-8,2,3],[-2,2,9,-2,-9,-6,6,-7,-1,8,5,-6,7,7],[3,-7,1,2,9,-5,-1,-9,-5,2,3,-7,-1,9]],[[8,-9,-5,5,8,-8,-1,5,-3,9,-3,6,-10,-4],[-8,10,8,7,8,1,-1,-2,3,-2,-6,-6,1,-4],[-7,-3,3,10,-7,-7,3,2,1,4,-5,-10,-5,-9],[8,-9,-2,-9,10,-6,-10,-1,-5,5,-10,7,5,-6]],[[6,9,9,-1,2,5,3,6,-6,-6,-3,4,2,-9],[-3,-7,10,-2,-6,7,-5,10,6,3,5,3,-10,1],[10,-9,5,-1,4,2,-8,-9,-5,-3,5,1,5,9],[-2,-7,8,-7,-4,8,2,1,2,3,9,6,-1,-3]],[[2,-4,-2,-9,9,-5,-2,2,-4,-4,-2,-2,6,-4],[-7,-5,-9,-5,10,-1,-10,1,-9,6,7,-10,10,10],[1,10,1,9,4,10,8,10,-8,-9,-7,2,6,5],[-3,-9,8,-2,-7,-10,-5,-5,-4,10,-10,-10,-6,1]],[[4,10,-10,2,2,-9,-5,2,-9,-2,3,-6,-4,8],[-9,-4,4,10,4,-3,4,-7,-1,8,5,-5,-3,-9],[-7,9,-7,-1,-8,6,3,-10,9,7,-6,2,-4,-10],[-7,-5,8,-2,-6,8,2,-8,3,-1,7,2,2,5]],[[-10,4,-5,-2,3,-8,5,-3,-1,-3,10,7,-3,-9],[5,-10,10,-2,4,-8,8,-6,-3,3,3,-8,-1,8],[-4,-6,4,3,1,-9,-9,-4,4,-1,2,-2,-1,5],[3,-3,-4,-7,-6,-2,-4,-6,9,-2,-9,-3,1,5]],[[6,-2,-5,8,-6,8,5,-3,-1,4,8,-7,2,-7],[5,-5,-3,-2,3,-8,6,5,5,10,6,8,-1,8],[-4,6,-8,-4,7,-1,-5,1,4,3,-3,-7,-7,10],[9,3,4,5,-10,5,5,10,-7,-3,9,2,9,9]],[[-2,3,-7,-7,6,5,10,-7,-7,7,10,-5,-6,-8],[-4,-10,-6,-10,-1,-5,8,7,3,-5,1,-4,-3,-9],[-8,5,-6,2,8,-6,-6,8,-3,4,-8,-8,-2,-1],[5,-6,-9,-7,-6,8,1,-6,6,-3,-8,-7,-7,-7]]], dtype = "int8")#candidate|5364|(9, 4, 14)|const|int8
bop_5365 = relay.multiply(call_5347.astype('uint64'), const_5364.astype('uint64')) # shape=(9, 4, 14)
bop_5368 = relay.multiply(call_5348.astype('uint64'), const_5364.astype('uint64')) # shape=(9, 4, 14)
func_281_call = mod.get_global_var('func_281')
func_284_call = mutated_mod.get_global_var('func_284')
var_5370 = relay.var("var_5370", dtype = "float32", shape = (75, 2))#candidate|5370|(75, 2)|var|float32
call_5369 = relay.TupleGetItem(func_281_call(relay.reshape(var_5370.astype('float32'), [5, 10, 3])), 0)
call_5371 = relay.TupleGetItem(func_284_call(relay.reshape(var_5370.astype('float32'), [5, 10, 3])), 0)
var_5376 = relay.var("var_5376", dtype = "float32", shape = (75, 2))#candidate|5376|(75, 2)|var|float32
bop_5377 = relay.right_shift(var_5370.astype('uint16'), relay.reshape(var_5376.astype('uint16'), relay.shape_of(var_5370))) # shape=(75, 2)
uop_5381 = relay.sqrt(const_5364.astype('float64')) # shape=(9, 4, 14)
func_3832_call = mod.get_global_var('func_3832')
func_3835_call = mutated_mod.get_global_var('func_3835')
var_5386 = relay.var("var_5386", dtype = "float32", shape = (896,))#candidate|5386|(896,)|var|float32
call_5385 = relay.TupleGetItem(func_3832_call(relay.reshape(var_5386.astype('float32'), [4, 14, 16])), 0)
call_5387 = relay.TupleGetItem(func_3835_call(relay.reshape(var_5386.astype('float32'), [4, 14, 16])), 0)
uop_5391 = relay.asinh(var_5370.astype('float32')) # shape=(75, 2)
output = relay.Tuple([bop_5365,call_5369,bop_5377,uop_5381,call_5385,var_5386,uop_5391,])
output2 = relay.Tuple([bop_5368,call_5371,bop_5377,uop_5381,call_5387,var_5386,uop_5391,])
func_5396 = relay.Function([var_5370,var_5376,var_5386,], output)
mod['func_5396'] = func_5396
mod = relay.transform.InferType()(mod)
mutated_mod['func_5396'] = func_5396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5396_call = mutated_mod.get_global_var('func_5396')
var_5398 = relay.var("var_5398", dtype = "float32", shape = (75, 2))#candidate|5398|(75, 2)|var|float32
var_5399 = relay.var("var_5399", dtype = "float32", shape = (75, 2))#candidate|5399|(75, 2)|var|float32
var_5400 = relay.var("var_5400", dtype = "float32", shape = (896,))#candidate|5400|(896,)|var|float32
call_5397 = func_5396_call(var_5398,var_5399,var_5400,)
output = call_5397
func_5401 = relay.Function([var_5398,var_5399,var_5400,], output)
mutated_mod['func_5401'] = func_5401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5321_call = mod.get_global_var('func_5321')
func_5322_call = mutated_mod.get_global_var('func_5322')
call_5437 = func_5321_call()
call_5438 = func_5321_call()
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_5453 = relay.TupleGetItem(func_5211_call(), 0)
call_5454 = relay.TupleGetItem(func_5213_call(), 0)
bop_5460 = relay.bitwise_xor(call_5453.astype('int64'), relay.reshape(call_5437.astype('int64'), relay.shape_of(call_5453))) # shape=(1, 1, 14)
bop_5463 = relay.bitwise_xor(call_5454.astype('int64'), relay.reshape(call_5438.astype('int64'), relay.shape_of(call_5454))) # shape=(1, 1, 14)
output = bop_5460
output2 = bop_5463
func_5464 = relay.Function([], output)
mod['func_5464'] = func_5464
mod = relay.transform.InferType()(mod)
mutated_mod['func_5464'] = func_5464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5464_call = mutated_mod.get_global_var('func_5464')
call_5465 = func_5464_call()
output = call_5465
func_5466 = relay.Function([], output)
mutated_mod['func_5466'] = func_5466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5464_call = mod.get_global_var('func_5464')
func_5466_call = mutated_mod.get_global_var('func_5466')
call_5503 = func_5464_call()
call_5504 = func_5464_call()
output = relay.Tuple([call_5503,])
output2 = relay.Tuple([call_5504,])
func_5506 = relay.Function([], output)
mod['func_5506'] = func_5506
mod = relay.transform.InferType()(mod)
output = func_5506()
func_5507 = relay.Function([], output)
mutated_mod['func_5507'] = func_5507
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5522 = relay.var("var_5522", dtype = "int32", shape = ())#candidate|5522|()|var|int32
var_5523 = relay.var("var_5523", dtype = "int32", shape = (5, 7, 7))#candidate|5523|(5, 7, 7)|var|int32
bop_5524 = relay.bitwise_and(var_5522.astype('int32'), var_5523.astype('int32')) # shape=(5, 7, 7)
output = bop_5524
output2 = bop_5524
func_5535 = relay.Function([var_5522,var_5523,], output)
mod['func_5535'] = func_5535
mod = relay.transform.InferType()(mod)
var_5536 = relay.var("var_5536", dtype = "int32", shape = ())#candidate|5536|()|var|int32
var_5537 = relay.var("var_5537", dtype = "int32", shape = (5, 7, 7))#candidate|5537|(5, 7, 7)|var|int32
output = func_5535(var_5536,var_5537,)
func_5538 = relay.Function([var_5536,var_5537,], output)
mutated_mod['func_5538'] = func_5538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_5556 = relay.TupleGetItem(func_5211_call(), 0)
call_5557 = relay.TupleGetItem(func_5213_call(), 0)
const_5558 = relay.const([[[-4,-6,9,-10,-6,-10,-3,-5,8,9,6,-6,-9,7],[4,9,1,7,-3,-2,-5,-7,5,-3,-1,1,-4,8],[-9,7,7,3,1,7,9,5,2,-4,6,-1,10,4],[9,9,9,1,-2,-3,6,-1,1,-9,-9,-1,-10,10],[4,-6,-8,-1,3,-4,-8,-9,8,9,5,-2,3,-9],[-6,5,-5,-1,5,1,-5,2,3,-8,-3,-8,-5,3],[6,10,-1,9,5,-8,-3,-8,-5,4,4,-6,-10,-5],[9,-2,-2,-6,-9,-10,9,7,-8,-2,7,-10,9,8],[-4,-4,-5,-7,-1,1,-2,-6,-10,2,-6,-2,2,4],[9,1,-6,-8,5,7,10,8,8,2,-5,-5,-9,-5],[-10,2,-10,-5,-10,-5,-8,-1,-10,-10,-10,-4,7,7],[-8,-4,-9,8,-9,-8,-3,4,-5,2,3,-6,6,-10],[-1,8,-9,-8,1,10,6,-9,-10,2,9,3,-6,8]],[[10,5,-5,1,-5,4,2,6,-1,8,-9,1,4,1],[-4,2,-7,3,9,-9,10,10,9,-1,2,-4,-10,10],[-8,4,2,-3,-2,-4,-2,-7,6,6,5,6,7,-10],[-6,2,3,-5,1,-5,-8,-6,-4,3,-10,5,-6,-3],[-2,3,3,-1,1,-3,-8,7,-9,-4,-6,3,8,1],[1,-9,7,3,7,-8,2,1,10,-3,9,-2,-6,2],[4,-8,-9,10,-8,8,6,4,-5,-5,-10,-4,8,7],[4,8,3,3,-2,8,7,-7,-1,-1,5,1,-6,8],[2,8,3,4,-1,-7,-1,2,10,10,-10,8,-7,-3],[-6,9,-4,-6,2,-4,8,-3,-6,-8,6,-10,9,2],[-8,10,-5,2,5,-8,-7,-9,4,5,-9,-8,10,-1],[-7,6,-9,-7,-5,-6,8,-7,-8,9,8,-4,6,-2],[-2,-5,8,-2,8,-3,-2,-3,-7,-5,-5,-9,-8,-2]],[[6,9,10,7,-7,-7,10,-6,-9,3,9,10,-2,-9],[-3,5,8,7,9,-8,-5,-9,-2,-9,6,-8,-10,1],[9,-2,-4,2,-10,1,-3,6,-1,4,4,6,-5,-6],[-3,7,-10,4,6,5,-3,7,-5,-5,-2,2,2,7],[-2,-4,-2,9,-10,6,-7,5,-7,-9,7,-9,-2,-4],[-8,-4,6,7,9,-1,-7,8,-10,-7,5,-1,9,-1],[10,-9,-8,1,1,5,-4,-10,5,-8,-8,2,-10,-6],[-5,-1,-4,-5,3,10,6,3,-2,-4,2,-2,6,4],[10,-4,-8,-10,-5,-7,-3,-2,10,10,10,-1,-5,-3],[-10,8,8,3,-8,8,-9,2,2,10,1,6,-3,4],[-9,-2,5,-8,-3,10,-5,-7,-3,-6,-4,7,-6,7],[-9,1,9,8,5,-8,9,2,-6,8,-1,-4,-1,-10],[-5,6,1,5,-1,5,-1,4,9,-3,6,-4,-8,-4]],[[3,-3,3,4,1,4,-2,-7,2,-4,1,5,1,-6],[2,-5,4,-3,1,2,9,-3,-7,-6,6,-1,7,4],[-7,-6,-10,4,-3,4,-6,-6,-4,-8,3,-1,5,-6],[8,-2,-2,-4,3,8,-4,-10,9,-7,-8,6,-2,8],[9,-10,6,9,-2,2,-2,-1,-5,1,8,-8,5,-8],[3,4,2,6,-8,5,10,5,-8,-10,-7,6,9,4],[10,-2,-9,-2,2,8,2,10,-9,-6,3,-9,-7,8],[10,1,-3,2,9,1,-1,1,-2,-7,-8,-9,3,1],[-4,-7,10,-4,-10,5,10,1,6,-7,3,-1,-9,1],[-10,-1,1,1,-7,-6,-3,6,-6,-5,7,3,5,2],[-4,-7,7,-1,7,2,8,1,-9,-5,2,-9,3,2],[6,4,-8,6,-3,6,8,-4,-5,8,-1,-1,4,-3],[-4,6,10,-1,5,4,4,-5,-9,3,-5,-10,-5,-9]],[[-2,7,-1,5,-5,10,4,5,3,4,-3,5,-7,4],[5,10,-10,-1,-10,-2,3,-4,-3,6,-2,-7,-7,-3],[-9,-6,-2,2,-5,-3,-1,1,-5,2,-5,6,-1,2],[-7,-4,-2,1,-9,6,-7,-9,3,4,-5,8,7,1],[8,9,8,4,-6,-6,7,6,-10,-2,-5,3,-5,1],[-4,1,6,9,-3,-6,7,1,3,-8,2,-7,8,-8],[10,2,-2,8,-3,3,-10,-5,2,-1,-5,9,-10,-6],[-6,-9,4,2,6,-7,7,-7,1,-3,9,-8,-2,-2],[5,1,4,10,3,5,2,-2,-2,-5,10,5,-4,4],[2,-8,-5,10,9,9,-2,3,6,2,-4,-10,6,4],[8,4,5,9,-3,1,-7,-3,-5,-2,4,7,-2,4],[2,-6,7,2,-5,4,-8,-9,-3,5,-1,-9,2,4],[-4,-1,-6,9,-10,5,-4,1,-2,-8,-5,5,1,-2]],[[3,-8,-6,-5,8,6,-7,-1,-10,4,5,10,-6,-7],[-10,-1,-8,-10,-7,-5,-9,1,3,-8,8,-4,-3,-4],[-9,7,3,4,8,-6,-7,10,-3,5,-6,-9,-4,-7],[7,-5,4,10,1,-9,-6,-3,-5,2,-5,3,9,-6],[-5,9,6,-2,7,8,-4,6,-3,4,10,-5,2,-6],[10,-3,7,-10,-7,1,-2,3,-9,5,-5,-7,8,2],[2,2,-2,-10,8,-1,-10,-2,-3,-8,3,-2,6,-5],[-5,-6,-7,-2,3,9,2,10,-2,4,-7,-8,8,9],[3,-10,-1,7,3,8,-9,-1,6,-3,-2,-4,1,-9],[5,-5,-2,-7,9,2,1,-10,-6,3,2,10,5,5],[7,-5,2,9,4,8,1,-7,-1,-5,8,8,-6,-4],[-2,6,-2,2,-10,-1,-8,-8,-10,-1,2,7,8,1],[-4,6,5,7,-5,-3,-9,-9,-3,6,-4,4,7,-5]],[[7,-10,3,10,7,5,-4,9,3,2,7,-1,7,4],[-7,8,6,-6,3,7,3,4,-8,-1,-10,-9,1,7],[-3,3,-1,5,-8,-8,-9,2,5,-9,10,-6,-5,9],[-2,5,7,-7,-8,8,5,8,1,4,-10,8,5,10],[8,-5,6,-8,-7,-5,-9,-10,9,8,9,-5,-7,9],[-9,-1,10,9,-5,1,2,-6,9,5,7,1,7,5],[10,-5,2,-8,-1,10,-4,9,-7,8,4,-7,9,5],[3,-2,-3,-4,5,7,8,4,-8,-9,10,2,-3,5],[6,-9,-9,4,2,-6,9,-4,1,-9,3,-6,7,6],[-9,-3,-2,-6,7,-2,-7,5,4,-2,-7,5,-1,4],[-9,10,-3,4,5,-6,-1,9,-9,-5,6,-1,2,-5],[-7,3,-9,-5,-3,-8,3,3,2,-4,-8,5,10,-7],[2,-5,8,6,-10,2,3,4,-1,2,8,-4,6,-10]],[[-7,-9,6,-9,-4,4,7,-7,-5,6,7,9,5,2],[5,10,-7,-1,4,9,-5,10,-2,-2,-10,-3,8,10],[7,5,-4,-6,-3,-5,-8,-3,-1,5,-1,-10,-7,8],[7,7,2,8,6,-8,-2,5,1,-3,2,6,6,6],[1,7,4,3,-7,-3,-4,9,7,-6,-2,1,-6,1],[2,-5,1,-2,9,4,-6,-6,-9,-6,1,-5,10,10],[2,10,-7,9,-1,7,-6,-4,8,-1,-9,5,9,-6],[5,-7,-5,1,3,4,-2,-2,1,-1,9,10,-10,-7],[-5,10,-9,7,5,8,1,-10,2,-3,9,4,7,6],[-8,-8,8,-5,6,-8,3,9,-7,-6,2,-6,3,-10],[3,-8,1,-8,-6,3,-6,-5,9,2,4,9,-9,-10],[4,-3,-8,-1,-8,7,9,-8,-2,-5,-8,9,9,9],[-2,2,-10,2,-7,8,-10,-9,-4,-8,-9,-7,2,-10]],[[-3,-8,-9,8,7,-9,5,-10,-2,-7,-8,-1,8,6],[4,-10,5,10,8,5,-10,-10,2,1,2,10,-3,-9],[-1,-10,2,-1,-7,3,3,-1,-4,9,2,10,7,6],[-3,2,3,-10,-3,-4,-4,-6,-6,-1,9,-4,9,6],[6,-8,8,-4,4,-8,4,7,-8,4,-9,4,-4,-10],[-4,1,-10,-10,10,3,-5,3,2,7,3,6,8,-2],[8,-5,10,-4,-4,-3,8,10,-7,-5,3,1,-5,7],[-4,-6,-1,-7,-7,-5,5,9,4,-1,2,-1,7,-10],[6,-6,6,-5,2,-2,-2,2,-5,-5,10,-3,1,9],[6,2,9,-4,-1,4,2,-4,2,-6,-9,-9,8,-5],[-6,6,-6,-3,8,9,-10,-5,-10,-1,-9,1,-7,-8],[10,3,-10,7,-9,10,-2,7,4,8,-10,-6,5,6],[-8,8,-10,6,-10,-3,-7,-6,-3,-3,-2,-3,-10,-3]],[[6,7,-6,2,6,3,2,6,-10,-10,-5,4,-6,2],[-5,10,-6,5,-4,5,6,-7,-5,-10,5,-10,3,-8],[10,-4,6,-8,3,-4,4,-6,-9,-1,-7,-1,-10,-3],[-6,1,-2,3,-9,10,-6,-6,6,-3,6,-9,-4,5],[3,9,10,7,3,10,1,-3,-6,9,2,7,5,-10],[8,5,3,1,1,5,-8,-7,9,-7,-10,9,8,1],[3,4,-7,5,2,5,-5,-9,-9,3,-8,-3,1,-2],[7,2,-5,5,5,3,-9,-1,3,9,-8,-8,-7,9],[-2,-6,-4,-10,7,10,7,-1,6,-1,4,8,4,-2],[-6,8,-2,8,-3,5,-6,-1,-10,1,4,4,-4,2],[10,-1,-3,-6,-1,2,-3,-3,-4,5,-7,-2,8,9],[-10,-2,-2,-7,-1,-1,7,8,10,10,6,-8,10,3],[7,2,10,-8,-6,-9,-7,-9,6,4,-9,-10,10,5]],[[1,9,-10,5,-4,2,7,-7,4,9,-3,7,-7,-4],[-6,-6,9,-5,4,-8,-3,8,-4,6,-1,9,8,-6],[5,-2,3,10,-3,8,4,-8,8,9,-1,1,10,7],[-8,-4,7,3,-6,-9,-7,8,4,-8,-2,-4,2,8],[-7,-9,-2,-7,-9,-6,-3,-5,5,-2,9,-1,9,-5],[-1,2,-10,1,3,10,8,8,2,-4,7,5,-9,7],[2,-8,7,-10,-2,10,1,-9,7,-2,1,7,3,-3],[8,10,-4,-4,-2,-9,-5,10,-10,-5,-6,-7,5,4],[5,2,-7,-5,5,-1,2,-9,-10,3,10,6,-6,-3],[-6,9,-6,5,5,4,9,-5,5,10,-7,-5,10,10],[-4,-7,4,2,-6,3,8,1,1,8,4,-1,-10,5],[-8,6,-2,2,8,5,-4,-7,-4,-10,6,10,8,10],[-8,10,2,7,8,1,5,1,-2,10,9,-10,-9,-5]]], dtype = "int8")#candidate|5558|(11, 13, 14)|const|int8
bop_5559 = relay.floor_mod(call_5556.astype('float64'), const_5558.astype('float64')) # shape=(11, 13, 14)
bop_5562 = relay.floor_mod(call_5557.astype('float64'), const_5558.astype('float64')) # shape=(11, 13, 14)
output = relay.Tuple([bop_5559,])
output2 = relay.Tuple([bop_5562,])
func_5569 = relay.Function([], output)
mod['func_5569'] = func_5569
mod = relay.transform.InferType()(mod)
mutated_mod['func_5569'] = func_5569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5569_call = mutated_mod.get_global_var('func_5569')
call_5570 = func_5569_call()
output = call_5570
func_5571 = relay.Function([], output)
mutated_mod['func_5571'] = func_5571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5580 = relay.var("var_5580", dtype = "int64", shape = (12, 14, 4))#candidate|5580|(12, 14, 4)|var|int64
var_5581 = relay.var("var_5581", dtype = "int64", shape = (12, 14, 4))#candidate|5581|(12, 14, 4)|var|int64
bop_5582 = relay.subtract(var_5580.astype('int64'), relay.reshape(var_5581.astype('int64'), relay.shape_of(var_5580))) # shape=(12, 14, 4)
output = bop_5582
output2 = bop_5582
func_5591 = relay.Function([var_5580,var_5581,], output)
mod['func_5591'] = func_5591
mod = relay.transform.InferType()(mod)
var_5592 = relay.var("var_5592", dtype = "int64", shape = (12, 14, 4))#candidate|5592|(12, 14, 4)|var|int64
var_5593 = relay.var("var_5593", dtype = "int64", shape = (12, 14, 4))#candidate|5593|(12, 14, 4)|var|int64
output = func_5591(var_5592,var_5593,)
func_5594 = relay.Function([var_5592,var_5593,], output)
mutated_mod['func_5594'] = func_5594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5464_call = mod.get_global_var('func_5464')
func_5466_call = mutated_mod.get_global_var('func_5466')
call_5688 = func_5464_call()
call_5689 = func_5464_call()
uop_5690 = relay.exp(call_5688.astype('float64')) # shape=(1, 1, 14)
uop_5692 = relay.exp(call_5689.astype('float64')) # shape=(1, 1, 14)
output = uop_5690
output2 = uop_5692
func_5708 = relay.Function([], output)
mod['func_5708'] = func_5708
mod = relay.transform.InferType()(mod)
output = func_5708()
func_5709 = relay.Function([], output)
mutated_mod['func_5709'] = func_5709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_5729 = relay.TupleGetItem(func_5211_call(), 0)
call_5730 = relay.TupleGetItem(func_5213_call(), 0)
output = relay.Tuple([call_5729,])
output2 = relay.Tuple([call_5730,])
func_5738 = relay.Function([], output)
mod['func_5738'] = func_5738
mod = relay.transform.InferType()(mod)
mutated_mod['func_5738'] = func_5738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mutated_mod.get_global_var('func_5738')
call_5739 = func_5738_call()
output = call_5739
func_5740 = relay.Function([], output)
mutated_mod['func_5740'] = func_5740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5569_call = mod.get_global_var('func_5569')
func_5571_call = mutated_mod.get_global_var('func_5571')
call_5763 = relay.TupleGetItem(func_5569_call(), 0)
call_5764 = relay.TupleGetItem(func_5571_call(), 0)
var_5771 = relay.var("var_5771", dtype = "float64", shape = (11, 13, 14))#candidate|5771|(11, 13, 14)|var|float64
bop_5772 = relay.divide(call_5763.astype('float32'), relay.reshape(var_5771.astype('float32'), relay.shape_of(call_5763))) # shape=(11, 13, 14)
bop_5775 = relay.divide(call_5764.astype('float32'), relay.reshape(var_5771.astype('float32'), relay.shape_of(call_5764))) # shape=(11, 13, 14)
func_3676_call = mod.get_global_var('func_3676')
func_3681_call = mutated_mod.get_global_var('func_3681')
const_5784 = relay.const([9,-3,-5,8,10,4,6,-7,-4,-3,2,8,-3,8,7,10,-1,5,-9,-6,3,-6,-3,8,-7,-2,-2,-10,-1,9,-6,-6,-1,4,5,10,8,-9,-9,10,-7,9,-1,6,-7,-2,3,1,8,-5,-5,-1,1,8,6,-9,10,-4,-9,3,-5,-1,2,4,9,-2,-6,-1,-4,8,7,-5,-7,6,-9,-2,-5,-3,-4,4,6,-10,-1,-9,8,-7,7,1,-10,10,7,2,-4,6,1,3,-8,-2,-4,5,10,-8,-3,5,-6,-5,-8,5,-3,1,-3,-3,-9,-1,6,6,10,-5,1,-10,-4,1,1,5,5,10,-2,8,-8,4,-8,1,2,-3,-5,-1,-6,-2,-8,-3,-3,-10,5,-4,-10,-8,9,-6,-5,-4,-2,3,9,6,-2,-10,-1,-2,2,-9,6,-3,-7,4,8,4,4,7,-5,-3,-2,-4,7,9,-1,4,-8,-10,5,-6,-3,4,-10,-3,4,1,-10,8,10,7,-6,9,-7,8,5,7,-8,7,4,2,7,5,-2,-5,8,6,-4,-7,-5,2,-1,-8,-4,7,-7,5,6,-3,2,-1,-1,-6,1,5,10,-6,8,2,-10,-9,7,1,5,2,-4,-10,7,10,-1,5,-2,-6,4,-4,4,1,9,-7,-8,2,1,4,7,-7,9,-2,1,-3,6,1,-3,3,6,4,8,-5,7,-6,-5,5,-3,5,6,2,7,2,-8,2,5,-10,-4,-2,4,7,1,3,2,-1,-10,-10,4,9,-7,8,8,6,2,-5,10,-8,-8,6,-3,-8,-7,1,10,-5,-2,-2,-2,-4,-10,3,-5,-8,3,2,-10,10,9,-3,3,8,3,-8,10,-9,3,8,-2,10,2,-5,2,-2,-9,10,4,-1,-7,2,-3,6,3,-5,-10,-4,6,-7,-5,7,-7,-7,-4,8,7,9,-10,-7,8,-10,6,-5,3,9,2,-1,-3,-9,-7,8,-4,-4,-1,7,-3,-2,-1,1,8,2,-6,-10,-3,7,4,6,2,4,2,-5,-2,-6,-3,-9,-7,-4,5,-3,2,2,5,6,7,3,5,6,6,-10,-7,3,-1,-6,-10,7,-8,8,7,3,7,-5,5,-10,3,3,1,5,-2,8,-1,1,-4,-3,4,6,3,4,3,8,-3,10,-6,4,6,-9,9,-6,-1,-5,-6,-6,4,-6,3,-5,-6,2,9,-9,10,-10,10,-1,5,-5,8,-10,3,-9,2,3,-10,2,-1,-2,1,-9,8,-1,9,-5,-7,-9,-5,-7,6,-6,6,-4,9,9,10,2,-9,2,-8,7,4,-8,-6,-5,-6,7,-9,9,8,9,-6,-5,-3,-5,6,8,7,10,-10,6,-5,8,-7,-3,4,3,2,-7,7,-8,3,4,2,5,-8,-10,5,9,4,7,4,8,-9,1,-8,-10,4,2,7,-8,8,10,-5,-7,10,4,3,-10,-8,10,-9,-10,-6,7,-10,10,4,-3,-10,-5,-4,4,5,-2,4,-1,-6,-6,-3,-6,9,-3,6,3,6,-6,-8,-10,6,-6,-7,3,-7,-6,1,3,7,-4,-2,1,-4,-2,9,7,-5,-8,-9,-8,2,-7,5,5,-8,7,8,1,4,8,5,-1,-6,5,-1,-4,-6,-8,-4,4,-5,-3,-8,-7,-6,-6,-10,-3,7,4,2,3,-10,2,-5,6,-7,3,1,-8,4,-2,-2,-3,-5,-10,-6,7,-5,9,-5,-10,-4,-8,2,6,9,-2,-2,-1,-1,-6,-6,-10,3,-1,-6,1,-3,-9,-4,-2,-2,3,7,-1,-6,5,1,3,7,-2,-4,-7,3,-3,-8,9,7,-3,7,5,2,-5,7,9,-1,-1,6,-5,1,-6,-1,8,-9,6,-9,-1,-5,6,-4,8,-5,-4,4,-10,5,3,-2,-8,5,9,9,5,-8,-5,-3,2,1,-9,-5,-1,6,10,6,1,4,-3,1,8,-8,-4,6,-1,1,-4,-10,9,-9,-3,7,-8,5,-7,-1,8,7,-2,-9,4,2,8,-2,-9,-6,-10,8,7,1,-2,10,-2,3,4,5,-3,5,-3,10,10,4,-2,-7,-6,4,1,-9,3,-4,-5,4,-10,-1,5,-4,-1,4,1,-4,-2,-6,-4,-5,-6,-5,-10,8,5,-4,3,5,8,-7,3,-7,-2,7,9,-5,10,5,9,3,-3,4,7,-9,-1,4,-10,10,-8,-9,10,10,-6,-4,-8,-8,-4,-6,2,-7,-6,10,4,9,8,8,4,9,-3,-2,10,2,2,6,-5,-8,4,6,-7,-1,-3,-4,7,4,6,8,7,9,-8,-5,8,6,3,-1,7,7,2,-6,5,-8,-9,5,8,5,-9,-1,-6,-10,-10,-9,-4,8,8,-5,-5,3,9,10,-2,-3,9,-9,-2,-4,-9,-9,9,-8,-3,-9,-8,-4,10,4,1,2,-5,5,-9,10,-1,-10,-8,9,-3,-2,1,-8,10,-3,-3,-4,-8,-6,9,-5,-6,-3,3,-8,10,-7,-7,-2,-9,1,1,-10,4,8,-1,4,-5,-4,8,-7,3,1,-1,9,9,-1,3,1,-5,-9,-9,-4,9,-7,9,7,-7,3,3,-9,-10,-5,2,-10,-5,3,-3,10,-4,-9,10,6,4,7,-1,-10,-7,-6,10,-5,-5,1,-5,10,-10,6,-6,-9,-2,-10,5,4,4,10,-5,9,3,-10,10,10,8,2,-8,6,9,3,-3,-5,-4,-3,10,-1,-1,-1,-8,3,-9,-1,7,-7,1,-10,4,3,2,8,-9,3,7,-3,7,2,2,-10,-1,5,6,10,3,-9,1,-7,6,8,-5,2,-8,7,10,-1,6,-4,-3,4,10,-3,1,-9,1,4,-10,-2,-1,-2,-8,-1,-9,9,-3,-8,-6,-2,-2,-8,10,-2,6,-1,-3,-7,6,-7,7,6,1,-1,-4,8,3,8,-7,4,-4,-2,9,-8,-1,9,5,8,-9,6,3,9,9,-1,-10,2,1,-9,-5,-5,-3,4,10,-5,2,-2,5,-3,1,-1,-7,2,-8,8,9,-2,10,2,8,8,-1,7,4,-10,-1,3,-5,8,8,-1,-1,-1,8,10,-3,8,-1,-9,4,-9,2,3,-8,3,8,5,6,2,-1,2,3,7,-6,10,-6,2,-2,5,7,10,-3,-7,-10,5,-1,5,-8,1,-9,-3,-1,-2,2,-5,-7,-6,-9,-9,2,-10,10,9,6,-1,3,1,-1,-7,2,5,6,-2,-4,3,5,-9,7,-5,9,1,2,-8,-6,-9,8,10,5,8,-2,-3,4,-4,-1,-5,4,6,7,10,-8,2,1,9,-3,-5,-8,2,2,3,4,8,6,-6,8,6,5,2,-1,3,-10,9,-7,-9,6,4,2,9,-6,10,-9,1,-8,1,6,3,2,-3,4,10,6,1,-8,5,-3,1,5,7,5,-3,2,4,-10,3,-8,6,-8,1,5,-1,3,4,4,-1,1,-9,-2,7,9,-7,-2,3,8,-6,-10,-5,1,-2,1,1,7,-5,2,-10,9,-1,10,10,8], dtype = "uint8")#candidate|5784|(1344,)|const|uint8
const_5785 = relay.const([5.988940,-0.488690,6.837904,5.148218,7.015283,-0.162754,9.567421,1.109964,-3.745729,-3.194683,-8.776145,-2.185276,-9.967050,0.497896,3.935343,-1.336941,9.190909,-4.868949,-0.873591,3.610101,-3.298434,4.106758,-0.177239,0.511366,-6.359856,6.135692,-6.397383,3.172974,1.698777,-9.212891,7.099987,8.857879,9.728115,3.308975,-5.409586,1.556040,-7.575293,-5.192584,-8.042989,9.936377,4.489323,1.695917,-6.999052,-7.881977,7.565832,-8.645665,7.116311,0.693082,0.919866,-2.621335,2.834015,-2.522367,-1.547549,5.428559,-8.742695,-0.212852,0.394461,4.103631,-6.247711,9.695641,-1.954456,-3.184708,5.430832,-6.072155,-2.299515,-4.303195,7.650793,7.747817,-0.432749,-5.596425,3.657631,-1.461220,-1.248093,-4.418875,-5.411774,-3.776788,7.660631,-8.557095,4.183009,3.577330,-6.409419,5.172919,-9.843720,2.040676,9.370698,-5.371350,-4.846442,7.967002,-8.850991,6.683113,7.743149,-4.556812,-2.456411,-0.754709,6.625663,4.870385,2.188613,7.353139,4.427388,-2.037299,-2.894120,3.385910,-3.740983,9.470522,-8.089387,8.046473,4.353845,-3.246124,-5.564760,3.083339,-4.343331,1.452336,4.373725,-3.319580,-2.152723,-3.171198,3.761138,2.171550,-1.739376,-1.549651,-1.551990,0.948256,8.344665,7.439810,-1.300930,-1.700007,-1.300130,-2.457750,-0.487182,-1.723733,-1.788325,-4.687056,9.118969,5.361410,-9.209282,-3.710212,1.204173,-8.216267,-7.165892,-7.382639,-7.338140,0.892083,9.354451,9.305822,-3.184319,-8.964349,-0.793346,-8.454859,-1.756940,1.748295,-0.267632,2.890490,9.549926,-5.918032,-9.940674,-0.420263,4.632340,0.159287,-4.109350,5.460269,-4.542041,8.020181,-2.594516,-7.886578,9.775070,1.361970,-5.915169,4.599659,4.677278,3.895514,-2.758501,-9.789448,6.437094,-7.222353,-8.767608,7.429649,9.360922,5.339227,-8.768950,5.235956,-3.422348,2.202699,8.568190,-7.218224,0.651531,-5.347795,-8.572648,2.619669,-0.472113,0.385083,8.921157,-2.883470,6.578738,-6.765936,2.205811,6.417833,4.239602,-9.015314,1.872569,2.104954,-1.199092,-9.066150,-7.226574,2.862171,-6.794473,-6.652645,7.128955,-9.672313,-4.765312,-5.477177,-9.575515,1.553338,4.501582,0.157268,6.746438,3.241723,-8.330874,-9.229623,8.634415,-4.532386,-7.671051,-0.007239,9.203626,-1.949197,6.347932,5.426777,-0.579923,7.840149,7.808778,-2.056507,6.220109,-7.606523,8.250073,2.739968], dtype = "float32")#candidate|5785|(234,)|const|float32
call_5783 = relay.TupleGetItem(func_3676_call(relay.reshape(const_5784.astype('uint8'), [14, 8, 12]), relay.reshape(const_5784.astype('uint8'), [14, 8, 12]), relay.reshape(const_5785.astype('float32'), [234,]), ), 2)
call_5786 = relay.TupleGetItem(func_3681_call(relay.reshape(const_5784.astype('uint8'), [14, 8, 12]), relay.reshape(const_5784.astype('uint8'), [14, 8, 12]), relay.reshape(const_5785.astype('float32'), [234,]), ), 2)
output = relay.Tuple([bop_5772,call_5783,const_5784,const_5785,])
output2 = relay.Tuple([bop_5775,call_5786,const_5784,const_5785,])
func_5793 = relay.Function([var_5771,], output)
mod['func_5793'] = func_5793
mod = relay.transform.InferType()(mod)
mutated_mod['func_5793'] = func_5793
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5794 = relay.var("var_5794", dtype = "float64", shape = (11, 13, 14))#candidate|5794|(11, 13, 14)|var|float64
func_5793_call = mutated_mod.get_global_var('func_5793')
call_5795 = func_5793_call(var_5794)
output = call_5795
func_5796 = relay.Function([var_5794], output)
mutated_mod['func_5796'] = func_5796
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5837 = relay.var("var_5837", dtype = "float32", shape = (4, 6, 8))#candidate|5837|(4, 6, 8)|var|float32
uop_5838 = relay.tan(var_5837.astype('float32')) # shape=(4, 6, 8)
func_4987_call = mod.get_global_var('func_4987')
func_4991_call = mutated_mod.get_global_var('func_4991')
var_5849 = relay.var("var_5849", dtype = "float64", shape = (7, 6))#candidate|5849|(7, 6)|var|float64
const_5850 = relay.const([-5.198528,1.981953,8.179674,5.457485,7.697741,2.931542,8.991731,5.665126,2.921958,-3.415178,9.328904,-3.617118,9.719870,4.282220,-8.307238,-5.807831,4.715958,1.484085,-2.525173,7.104532,-4.800693,-8.551190,0.734089,-2.261689,1.990890,-8.680363,-0.715990,-9.847377,8.585264,-5.711828,-2.203948,-6.915908,-3.600502,-8.823128,-6.189608,-9.027468,-5.415139,-2.600240,3.792082,-9.774198,8.728278,1.357493,2.082273,-6.024155,4.173142,-1.514437,4.206640,3.664415,4.263963,-2.258553,1.271285,-7.793878,5.631237,7.338874,2.330392,5.935288,-2.181017,-2.816572,-4.504948,-7.363598,9.701344,6.163416,5.079623,4.031237,-4.910412,7.222771,-1.541875,-6.214648,-0.204934,-4.749141,6.116591,5.148517,-3.516690,-8.622950,-0.228445,4.091208,7.411122,-8.864201,8.065032,9.476011,-7.008537,-9.285405,-2.415490,-6.890739,-2.829655,6.909827,0.407846,-6.544430,-4.918939,-0.350286,8.098234,5.574125,7.873894,-2.417447,9.911136,-8.035205,-9.502846,-1.622311,2.897958,5.893966,-3.817063,-8.222078,9.149842,9.178810,2.387700,-0.820208,3.250702,7.999394,-7.739202,-0.407468,-3.087508,4.661880,8.016908,0.710001,-2.954161,-5.434520,7.020202,-5.346534,8.407890,8.516515,-2.304333,-3.112072,8.040677,-1.550847,1.322752,5.836161,4.943072,-1.664997,-3.505853,-8.014250,-7.523613,4.265588,2.208045,7.628006,-4.079553,3.508634,-5.434822,-4.276541,8.162713,6.441445,9.754221,-6.567149,8.446925,8.047588,2.538439,5.885495,9.182906,4.766453,-3.065831,6.107917,3.443020,8.501940,-8.695213,8.186504,-8.369446,-3.777675,8.304550,4.404339,0.615895,5.529228,-9.666515,7.290662,2.837347,-2.267417,4.824365,-3.142298,-6.152706,-9.158141,-1.025014,-9.264250,6.310427,-7.679820,-1.000829,4.712580,6.204103,-0.815838,3.590234,3.825786,-6.753386,8.714758,9.799261,0.260793,9.854068,9.727495,3.754057,3.724698,-2.730796,-8.781836,2.555524,2.598759,-7.390130,-5.316856,6.965993,-6.288651,4.672099,1.293184,-0.451145,-1.502495,-0.997540,5.947732,9.023145,-9.262082,-7.034996,-7.861733,0.957062,-2.388994,9.282784,9.513419,-3.623156,2.549363,0.146850,1.704443,1.172590,-2.828705,6.623015,7.169536,-1.042378,-9.835334,-5.040577,-3.823879,-5.258151,8.711860,1.418262,-3.115012,6.051315,2.151438,-1.979308,-6.708395,-2.339764,-0.591250,-6.783316,-5.345735,3.245573,5.549255,-3.088537,6.806197,7.396862,-1.843404,-0.913059,-5.418126,-2.879800,-3.699848,-0.432745,-1.823030,1.314592,-4.409941,1.566576,-3.592169,-9.714313,-3.612528,9.997955,7.743598,1.919868,3.997014,8.502450,3.445843,7.288524,-6.641564,-1.941871,-1.742968,2.688760,5.616581,-9.629702,-3.161939,8.468020,6.306736,-3.733441,5.344506,-5.432537,0.616260,3.427784,-0.432669,6.903808,-3.483846,3.450213,0.535355,-5.098498,3.761509,3.985892,3.817136,5.274382,7.937877,5.928187,4.941968,-3.462230,9.016970,9.858768,-8.422930,3.583454,-6.915947,-6.205394,3.784212,-6.332891,3.719326,-9.746725,-5.530584,8.441301,-0.838180,0.969467,-6.905645,-2.915823,8.417457,4.410600,-9.281200,-7.952106,-7.773873,9.936310,0.640911,-2.882488,9.237069,4.367352,-9.403626,2.623279,-4.002051,-4.717692,-0.469553,-4.580583,-1.431308,-9.854783,-1.689430,6.359039,8.644254,5.376779,-0.087498,1.604592,-5.031057,-2.529742,7.627641,5.684441,-1.375842,-6.186544,9.577788,-9.003503,7.200970,-9.384432,6.982538,-5.262699,-2.733348,-4.012241,2.117835,-2.409451,-3.396461,8.944167,4.718469,5.232052,-2.965877,-2.359732,6.111296,-8.486240,6.075062,-5.854659,-7.728140,8.576552,-1.626140,-8.794097,3.719367,-2.038113,1.425830,3.875268,-6.494470,-0.035845,9.382266,-4.617995,7.372835,9.470290,-1.547918,9.941827,-5.549421,3.463467,-1.970710,-2.538010,5.339129,-6.659355,-0.637875,3.152314,-1.827544,-4.754487,-3.815046,-1.331846,2.519746,2.656743,-3.432637,-6.344144,4.019020,6.368224,0.393362,-0.025282,-2.286529,8.511510,-0.718800,-5.653879,-1.591505,-8.943741,7.349661,-7.455783,-0.014630,-8.166557,9.696923,6.531516,8.379740,-5.254339,8.437876,3.469490,4.433529,-1.035570,0.136622,8.094025,8.467093,-3.976200,-7.249251,6.715256,-7.189041,8.390986,3.862867,4.261265,-0.967583,8.045655,-9.299994,8.174194,-7.711181,4.396696,-6.711244,0.426668,0.696917,2.408923,0.696385,-8.732235,-8.756124,1.259810,1.904667,-0.795687,-6.997477,4.209813,-0.241127,4.163279,-6.838400,-6.271511,0.514334,1.854159,-3.250803,-3.914142,2.750379,6.062090,8.574018,9.039681,9.829780,-1.355487,-6.760335,-6.294067,-9.033958,5.994121,0.119697,-5.915336,1.087897,5.400623,-8.151845,4.741134,-6.813277,7.684016,8.191283,-0.710452,9.954044,9.232265,-9.922411,-2.758110,9.575195,-6.850592,-9.153199,1.091661,-2.162572,6.678342,-0.382189,-0.290538,5.359735,-4.463778,1.937586,-4.664765,7.893942,-6.426819,3.450399,8.611532,-5.104738,8.959581,-4.953303,-7.174369,0.337021,7.503149,5.037504,6.275147,0.461248,5.422491,-9.906052,9.239509,9.539135,-4.788502,9.778863,3.587469,9.181192,-6.965900,8.594607,-5.078184,-3.744711,5.602331,3.586253,-6.219834,-0.867476,6.723413,2.148187,2.795599,-0.960304,-0.292519,2.432310,2.810049,-0.581584,-8.311315,2.985685,8.077184,-0.303801,1.612379,6.027449,-7.410113,8.085809,-2.531118,6.023868,-5.535852,0.076008,8.032011,-0.311967,6.880392,-3.444862,0.274519,-6.658909,5.732178,1.888770,1.356077,-8.382475,-2.253769,8.792000,7.083714,-3.615055,1.940386,-2.287177,-5.254598,2.877985,5.342171,3.908790,9.113798,9.532049,-1.105563,5.445656,3.383046,-5.855120,-2.150167,5.951493,-8.697933,8.492791,8.731210,-2.741545,-5.806232,-5.614915,6.922468,-5.086320,5.916572,4.013650,-0.466261,4.412303,-1.535496,-5.249802,-6.116822,-7.324191,5.542203,-3.125099,1.742108,9.091945,-5.884837,-8.136894,6.769860,5.738242,-6.115051,8.935750,0.721473,9.536629,-2.199290,-0.841651,2.547972,7.774390,-1.865997,1.562696], dtype = "float64")#candidate|5850|(588,)|const|float64
call_5848 = relay.TupleGetItem(func_4987_call(relay.reshape(var_5849.astype('float64'), [3, 1, 14]), relay.reshape(const_5850.astype('float64'), [3, 14, 14]), ), 0)
call_5851 = relay.TupleGetItem(func_4991_call(relay.reshape(var_5849.astype('float64'), [3, 1, 14]), relay.reshape(const_5850.astype('float64'), [3, 14, 14]), ), 0)
bop_5858 = relay.greater_equal(var_5837.astype('bool'), relay.reshape(uop_5838.astype('bool'), relay.shape_of(var_5837))) # shape=(4, 6, 8)
bop_5862 = relay.add(bop_5858.astype('uint8'), relay.reshape(uop_5838.astype('uint8'), relay.shape_of(bop_5858))) # shape=(4, 6, 8)
output = relay.Tuple([call_5848,var_5849,const_5850,bop_5862,])
output2 = relay.Tuple([call_5851,var_5849,const_5850,bop_5862,])
func_5869 = relay.Function([var_5837,var_5849,], output)
mod['func_5869'] = func_5869
mod = relay.transform.InferType()(mod)
var_5870 = relay.var("var_5870", dtype = "float32", shape = (4, 6, 8))#candidate|5870|(4, 6, 8)|var|float32
var_5871 = relay.var("var_5871", dtype = "float64", shape = (7, 6))#candidate|5871|(7, 6)|var|float64
output = func_5869(var_5870,var_5871,)
func_5872 = relay.Function([var_5870,var_5871,], output)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_5925 = relay.TupleGetItem(func_5738_call(), 0)
call_5926 = relay.TupleGetItem(func_5740_call(), 0)
func_1000_call = mod.get_global_var('func_1000')
func_1004_call = mutated_mod.get_global_var('func_1004')
var_5937 = relay.var("var_5937", dtype = "float64", shape = (108,))#candidate|5937|(108,)|var|float64
call_5936 = relay.TupleGetItem(func_1000_call(relay.reshape(var_5937.astype('float64'), [9, 3, 4]), relay.reshape(var_5937.astype('float64'), [9, 3, 4]), ), 1)
call_5938 = relay.TupleGetItem(func_1004_call(relay.reshape(var_5937.astype('float64'), [9, 3, 4]), relay.reshape(var_5937.astype('float64'), [9, 3, 4]), ), 1)
func_4545_call = mod.get_global_var('func_4545')
func_4551_call = mutated_mod.get_global_var('func_4551')
var_5955 = relay.var("var_5955", dtype = "float64", shape = (10, 45))#candidate|5955|(10, 45)|var|float64
const_5956 = relay.const([[True,False,False,False],[False,True,False,True],[False,True,False,True],[True,True,False,False],[False,False,True,False],[False,False,False,False],[True,False,True,True],[False,False,False,True],[False,False,False,True],[True,False,False,False],[True,False,True,False],[True,False,True,True],[False,False,True,False],[True,True,False,False],[True,False,False,False],[False,False,True,True],[True,True,False,False],[True,False,False,False],[False,False,True,True],[False,False,False,False],[False,True,False,True]], dtype = "bool")#candidate|5956|(21, 4)|const|bool
const_5957 = relay.const([3.280253,9.262091,0.888182,9.664745,9.908885,-8.062492,2.645764,-1.479608,1.864209,-9.056686,-4.317048,7.247562,1.733381,7.855921,3.499118,7.958135,-4.303442,0.633027,6.874383,1.417019,-9.660634,1.604100,4.751186,-8.185085,2.007612,7.883168,8.333397,7.173463,9.860466,7.717790,-9.819512,8.060290,9.364722,-3.961332,1.702425,9.559968,3.186933,5.796744,7.971767,2.098963,1.629100,-6.897910,3.435054,2.408612,-5.163745,9.265442,8.979266,3.086860,7.570992,-8.419195,3.414062,-9.718174,-6.109346,2.772315,8.010717,8.734113,-7.394942,8.215837,4.852944,-3.628987,-8.736349,-6.034758,-3.243874,-4.561783,-5.738482,-1.257794,6.760942,-6.996025,-8.105359,3.858646,7.163874,-4.557374,-4.070363,1.222368,-8.428389,2.389580,-8.707215,0.492672,-2.950978,-5.629676,-1.018585,-1.364506,-0.184031,5.689437,5.643158,-9.779406,3.383586,-3.240731,4.357495,-6.462225,4.177977,-8.705588,0.874311,-7.346176,5.396960,-9.442338,6.379799,3.424397,-8.473516,-5.072194,6.739123,-4.948320,-6.287451,-1.043714,-2.099405,9.402059,2.152730,7.588709,9.853442,-8.578363,5.379717,-7.934960,3.405048,-2.371180,7.676959,8.963028,0.069631,8.016219,-4.897419,1.721227,-5.773107,-1.289275,-8.221638,8.017568,6.549127,0.280293,-3.449252,3.394406,6.636677,3.152320,2.495196,-0.521452,-3.371101,-5.125023,0.832555,-9.293776,-4.959080,8.689521,-2.429553,0.919654,-0.925888,-7.733561,-9.939719,1.561429,1.874170,-4.059616,4.794424,-0.362636,0.763479,4.793400,-0.331195,-0.820195,-8.293375,-7.581680,-4.767371,8.211063,-6.758641,-9.883860,2.184649,-5.415577,-6.700425,0.874403,9.538207,-0.773978,-0.848591,-3.315801,7.870100,-0.239646,-1.073257,-2.855948,-4.365856,-3.873456,-0.676063,7.644298,-2.544044,-6.105638,7.932077,-6.453928,0.432203,1.999111,-2.552389,9.927484,-8.715462,-0.232173,-1.451983,-0.786161,-5.261241,1.807044,7.862475,-2.869953,-3.803162,-9.194184,5.284167,3.159142,8.953162,-2.289621,-1.479285,1.916206,7.372309,8.075475,0.093122,-5.001501,-0.977159,-3.862970,8.431844,7.990534,7.865929,2.807547,0.211490,-7.227915,1.604641,-8.433999,-5.093450,-6.607767,6.779952,1.997743,1.754358,-5.124317,2.349402,3.607180,-6.472597,-0.250046,1.622403,-3.546149,-3.707708,3.064353,0.680998,9.334716,-4.468888,-4.437212,-4.440434,-6.803600,1.277949,8.752916,2.101583,1.369579,-4.610723,1.533971,9.438292,-8.744178,-6.385033,3.135781,0.561190,1.864755,4.718205,-1.677573,6.803233,5.991757,8.817918,4.277136,-1.212829,-0.988419,1.377859,-2.119362,9.876164,-5.531773,-1.538362,-6.446022,8.501691,9.967886,5.136588,-5.150563,-3.627818,9.861862,-4.802495,-5.756854,-6.965566,2.884883,8.627752,-2.919381,-4.472090,-6.094141,2.449639,6.525456,2.781505,0.757353,-9.192914,1.024606,3.889139,-4.191909,-9.355271,-0.431803,-8.414674,-7.582051,0.668026,-8.651378,8.021953,1.040630,6.891951,1.062216,0.093418,2.295173,-4.057759,5.405559,-6.261490,-2.670199,-0.900765,4.426996,-9.363741,-9.683947,-4.830783,-3.645871,-2.232800,-6.808498,-4.168728,-6.460711,-6.039890,7.669755,-5.535857,7.574273,-9.834031,5.133111,-4.506819,9.986275,-4.421817,3.237052,5.714781,0.937809,4.913446,6.157811,6.727695,3.941455,-8.127610,4.341607,3.902250,4.321456,-7.003788,5.849028,4.535446,3.825381,-7.994666,-8.924636,-4.695586,6.842752,-2.774885,1.558820,-8.304075,4.133498,1.263326,-3.905790,7.580062,3.915345,-7.571306,5.857494,0.807168,-9.102069,9.033360,9.909704,-1.109410,2.111927,-3.385078,-8.417283,8.462483,9.211057,-3.020624,-7.100397,2.162453,7.802406,-8.505050,9.789618,-9.884351,9.058230,-8.644528,3.437200,-8.512120,8.680897,-7.295016,7.121669,-1.405121,-1.220421,-6.963984,-6.643475,-1.445799,-1.377102,-6.482918,9.901185,4.116086,-9.400607,7.624010,-7.284722,-6.120170,-5.509266,2.771143,7.545556,-1.233883,1.944983,-8.076272,-8.777081,2.798242,4.542487,-2.883486,-8.727947,1.634569,-8.548898,9.563699,-1.917902,-0.176479,-6.027246,8.129172,7.753925,6.207824,-3.709547,9.271169,7.376936,1.668623,-6.730898,6.162722,4.197084,-5.614374,9.268474,-3.349926,7.494825,9.190201,0.630882,6.637983,-8.931494,4.808925,-6.136766,-6.615345,4.163163,-3.385908,2.813222,2.138007,0.984997,-9.104737,4.908000,-1.000390,-6.954230,-4.535442,-8.300021,-7.707565,-9.277526,-2.423277,-5.638165,-4.371524,-3.037849,-1.946405,-0.077556,4.366777,4.945781,6.696945,-9.718816,1.474715,9.201428,-5.635577,-5.384102,-3.288669,-9.217171,2.734682,8.813798,1.041631,3.333204,-8.708160,4.694392,0.537770,4.545058,9.230189,-9.013000,-2.930213,-9.110551,-1.001112,-2.894535,4.109378,7.135553,0.840501,6.142709,-2.495777,-8.312490,-1.903207,-2.005340,-4.324699,-5.046828,-5.255960,5.156377,-4.860379,2.260279,-9.193048,-7.831601,2.224892,-3.820511], dtype = "float64")#candidate|5957|(480,)|const|float64
var_5958 = relay.var("var_5958", dtype = "bool", shape = (120,))#candidate|5958|(120,)|var|bool
call_5954 = relay.TupleGetItem(func_4545_call(relay.reshape(var_5955.astype('float64'), [5, 6, 15]), relay.reshape(const_5956.astype('bool'), [84,]), relay.reshape(const_5957.astype('float64'), [480,]), relay.reshape(var_5958.astype('bool'), [120,]), ), 8)
call_5959 = relay.TupleGetItem(func_4551_call(relay.reshape(var_5955.astype('float64'), [5, 6, 15]), relay.reshape(const_5956.astype('bool'), [84,]), relay.reshape(const_5957.astype('float64'), [480,]), relay.reshape(var_5958.astype('bool'), [120,]), ), 8)
uop_5976 = relay.cosh(var_5955.astype('float64')) # shape=(10, 45)
output = relay.Tuple([call_5925,call_5936,var_5937,call_5954,const_5956,const_5957,var_5958,uop_5976,])
output2 = relay.Tuple([call_5926,call_5938,var_5937,call_5959,const_5956,const_5957,var_5958,uop_5976,])
func_5980 = relay.Function([var_5937,var_5955,var_5958,], output)
mod['func_5980'] = func_5980
mod = relay.transform.InferType()(mod)
var_5981 = relay.var("var_5981", dtype = "float64", shape = (108,))#candidate|5981|(108,)|var|float64
var_5982 = relay.var("var_5982", dtype = "float64", shape = (10, 45))#candidate|5982|(10, 45)|var|float64
var_5983 = relay.var("var_5983", dtype = "bool", shape = (120,))#candidate|5983|(120,)|var|bool
output = func_5980(var_5981,var_5982,var_5983,)
func_5984 = relay.Function([var_5981,var_5982,var_5983,], output)
mutated_mod['func_5984'] = func_5984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_5986 = relay.TupleGetItem(func_5738_call(), 0)
call_5987 = relay.TupleGetItem(func_5740_call(), 0)
output = call_5986
output2 = call_5987
func_5988 = relay.Function([], output)
mod['func_5988'] = func_5988
mod = relay.transform.InferType()(mod)
output = func_5988()
func_5989 = relay.Function([], output)
mutated_mod['func_5989'] = func_5989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_6030 = relay.TupleGetItem(func_5211_call(), 0)
call_6031 = relay.TupleGetItem(func_5213_call(), 0)
output = relay.Tuple([call_6030,])
output2 = relay.Tuple([call_6031,])
func_6049 = relay.Function([], output)
mod['func_6049'] = func_6049
mod = relay.transform.InferType()(mod)
output = func_6049()
func_6050 = relay.Function([], output)
mutated_mod['func_6050'] = func_6050
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6064 = relay.var("var_6064", dtype = "float32", shape = (10, 1, 6))#candidate|6064|(10, 1, 6)|var|float32
uop_6065 = relay.log2(var_6064.astype('float32')) # shape=(10, 1, 6)
func_5869_call = mod.get_global_var('func_5869')
func_5872_call = mutated_mod.get_global_var('func_5872')
const_6073 = relay.const([-4.564368,2.529741,4.066296,3.039832,4.210890,2.175343,9.301016,-1.605784,-8.256276,-1.731501,5.459700,-2.954279,-7.817414,0.601879,9.928944,0.318668,5.193701,6.598155,4.612725,8.055297,8.971619,-3.018350,3.150031,-3.017704,-7.928348,3.278755,9.758908,3.709841,4.107950,8.359043,-1.096343,-2.656922,8.127002,3.639638,5.035040,5.933802,8.523918,7.923409,1.423236,-0.050384,-6.043224,6.234872,-1.145268,5.688533,5.831831,-0.780868,2.539182,1.541558,-0.138148,-6.708264,-7.202126,8.620021,2.111132,-4.930182,-9.760197,-2.575078,-3.875395,7.738771,-3.379313,1.832205,7.485062,-7.428499,-3.248395,-1.412911,-9.958545,-9.332232,-8.838986,-0.104139,-5.918547,-9.602898,9.907915,5.118114,-5.417490,-0.240564,-8.534875,-6.074049,-5.675696,-9.194640,8.944094,5.245558,3.458715,-1.354913,7.862125,6.581652,5.774318,2.401632,5.169660,-4.988719,0.182468,-4.397548,-1.284299,5.220643,0.223561,-3.469270,-6.895260,-4.193530,8.272707,-7.698425,8.921546,7.358616,6.103859,-4.954843,2.933130,2.488610,9.286106,-5.037828,-9.665746,-7.205952,-0.171650,-0.632878,0.235191,-1.552587,2.245881,3.142324,8.946290,0.244239,5.982282,2.438511,1.824461,9.180786,-1.785972,-5.735033,-6.825479,5.108924,0.610681,4.971436,-1.443484,-6.734359,-6.833545,5.850744,-2.510057,9.021086,-6.186960,-4.236700,1.930657,-9.771521,-2.947393,-1.577061,-8.289421,5.602326,-8.840536,-4.569853,-1.436490,-8.761458,-9.528120,-1.310808,0.459805,1.007284,-5.997148,3.299205,7.133987,-3.357019,-6.362830,-3.633903,-7.459546,4.595384,6.213763,9.844677,-4.507067,-5.007299,5.349778,1.173389,-5.850411,-2.460970,-6.819290,-8.549188,-1.296560,7.750461,-1.657311,5.322340,1.107552,9.328092,-0.794441,2.616377,-9.794492,8.977372,-8.377442,-0.456219,3.066255,-2.437408,-7.489272,-0.609266,7.515310,-8.070793,4.505242,-2.167310,-2.258582,1.083258,-1.313187,2.524893,7.444888,7.043148], dtype = "float32")#candidate|6073|(192,)|const|float32
const_6074 = relay.const([[-6.101901,-7.099245,9.302205,0.166550,2.884828,4.790274],[8.957964,0.905451,-7.454451,9.629161,-0.511093,4.457057],[5.498695,-4.371961,4.355235,-5.479829,1.635976,-7.526715],[-6.666536,-7.498804,6.529279,0.547095,7.594321,7.322413],[-1.145721,6.262563,9.342659,-9.226571,5.776465,5.098059],[-4.978796,0.524734,-2.377712,-7.305255,6.695533,-2.967110],[1.298980,4.200067,-1.650418,-3.251967,-8.203876,3.002598]], dtype = "float64")#candidate|6074|(7, 6)|const|float64
call_6072 = relay.TupleGetItem(func_5869_call(relay.reshape(const_6073.astype('float32'), [4, 6, 8]), relay.reshape(const_6074.astype('float64'), [7, 6]), ), 2)
call_6075 = relay.TupleGetItem(func_5872_call(relay.reshape(const_6073.astype('float32'), [4, 6, 8]), relay.reshape(const_6074.astype('float64'), [7, 6]), ), 2)
func_4545_call = mod.get_global_var('func_4545')
func_4551_call = mutated_mod.get_global_var('func_4551')
var_6078 = relay.var("var_6078", dtype = "float64", shape = (450,))#candidate|6078|(450,)|var|float64
const_6079 = relay.const([False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,False], dtype = "bool")#candidate|6079|(84,)|const|bool
const_6080 = relay.const([0.104476,-5.355383,-3.111598,-7.270162,-1.866896,6.699972,-2.664446,-0.462934,4.433682,2.700183,-6.216970,-4.995598,-1.938435,5.425654,4.011563,-6.687358,1.973279,1.726915,-9.287999,2.229738,-1.841875,-3.610711,-1.637153,-0.565732,3.646312,-0.658724,-4.880228,-3.615947,-0.972837,2.480850,-2.638778,-5.311564,-3.158194,2.756191,-7.430463,-8.137852,3.247407,5.896463,8.922158,6.791124,1.848980,-3.600082,5.286909,-2.358968,-9.778452,3.585206,7.878584,4.349054,8.117508,-9.372411,6.837496,-8.382714,5.523141,-5.542631,2.779794,-6.055087,-8.803018,-4.826606,2.485144,8.768037,-0.597727,-6.909208,6.179852,-0.593524,1.773981,-7.182972,0.600625,4.038594,-2.543802,3.690973,-5.973574,-9.652673,-9.659836,-8.461619,-4.635709,7.325029,-5.420325,-3.692700,0.597144,-9.484832,-0.364223,-9.993164,7.859357,-7.215001,5.738013,6.937451,6.708173,-7.362112,-2.045953,1.353738,4.295498,-0.574554,2.296504,4.274851,0.991392,2.290949,-2.370680,6.579640,3.222785,5.056938,9.521921,-9.113467,-7.183860,-2.756210,0.318784,0.250799,-9.681635,-5.231204,9.577604,1.744767,3.395446,-3.882262,-7.170715,8.497280,3.588154,-6.025166,9.043552,-0.490763,-0.776229,1.990970,-7.273821,-7.490516,-3.812275,-1.789196,-6.623398,-1.605075,-3.404831,0.923078,-3.234110,0.108749,2.408995,-3.292514,-9.807015,-5.216780,9.071572,3.284521,1.850088,-0.358972,-1.469648,9.188088,-8.139434,6.265314,-6.979534,6.636555,6.260040,-6.845740,8.698534,-4.854885,0.560465,-3.583417,-4.691193,2.108008,1.535443,8.811269,-5.569301,-5.220861,-8.834183,-9.414511,-1.397227,4.860843,-5.492415,-8.729118,-0.429421,6.408788,4.099547,-9.457108,4.315475,3.713427,7.993432,8.436941,6.130540,7.457588,3.085852,-6.834453,9.783229,2.077151,-7.010574,7.758755,-6.614505,-6.409499,-9.956769,1.330227,-5.143694,-0.177284,6.184608,-9.254405,1.553745,-7.817647,5.159739,-1.679122,-4.615079,-0.105350,3.001723,4.530923,-0.898157,-8.982141,-3.490892,0.652177,-3.799253,0.584400,0.611095,1.228460,9.044123,1.593172,-0.548032,9.293639,9.240882,7.179458,-5.518916,1.308509,2.609760,2.774445,8.982169,-5.592014,0.511304,-7.043812,8.607828,9.626617,0.883337,7.458562,4.209401,4.572592,-2.107616,2.494130,2.293212,-8.610865,-2.895725,8.408569,-9.747035,-2.684979,2.540242,-2.042862,-2.451511,0.853772,-9.717641,5.246726,9.234362,-9.653367,-1.309706,-3.633003,-5.792652,-6.368281,0.531197,3.679849,8.163117,8.122530,-2.216532,-0.136740,8.560782,-0.494702,-2.482449,9.624524,-8.310069,-0.718646,-7.892952,1.229617,4.750450,9.254091,8.660885,-4.598843,-1.187262,7.180485,3.574199,6.540863,2.068054,-9.254919,-0.788614,7.069329,4.309421,2.301068,8.242275,5.377207,-6.716109,0.953433,0.714113,-1.423902,8.014701,-4.104633,0.169626,3.398778,8.837181,7.859454,-9.233768,8.456068,-9.017090,2.872736,3.906181,-6.783849,2.050383,2.628234,5.756644,3.319221,8.693992,7.593411,2.950590,9.819481,-2.977721,-0.324643,8.593058,-3.914002,-9.814652,7.668908,-7.740332,3.251815,0.478387,-5.301675,5.069220,3.699347,7.118128,9.217290,-8.889977,-3.753995,7.128215,9.743429,-3.717709,-3.350252,1.160629,-3.378944,1.308364,0.645469,-7.379360,5.988877,1.681225,-6.941881,2.808078,-1.258784,-0.838942,-9.655112,0.806419,-2.916022,-5.892059,9.505224,4.112998,7.012953,7.203170,1.243103,7.777791,5.682256,-2.897981,8.458633,-9.134767,3.892488,-7.598033,-0.471745,3.888883,2.117401,-1.363746,7.042694,-4.229900,-9.484758,1.698411,6.757896,4.048096,-0.637728,-0.055254,3.288638,0.965429,4.412390,8.468776,5.718426,3.797756,-1.686942,5.436150,3.135457,-1.547912,-0.753739,4.522019,-5.018983,-9.019158,-2.680652,5.364796,9.187259,-6.367164,-8.587906,3.151719,-0.172637,8.883475,-0.163793,-4.644957,-5.103749,0.145284,2.840413,5.629741,1.313309,-5.344804,-7.559287,-3.043217,-7.178884,7.704297,-0.363428,-0.830933,2.011692,2.469036,1.300113,3.692717,-4.413033,-5.390231,4.945021,-3.249816,5.053610,7.395422,-0.606763,-3.050983,-7.646842,8.140260,-3.994201,-6.663658,0.529553,8.908468,7.343451,9.912380,2.750943,6.686820,5.999892,-9.585631,-3.470786,-7.153992,7.048428,6.172636,-1.124285,-2.776834,4.963926,-0.332984,-1.962147,5.192333,-1.141775,6.547419,-7.396997,1.872266,-8.717973,-1.030593,1.560567,4.145606,2.377578,-5.842653,-5.667089,-5.901694,8.211408,-2.039442,-1.587046,-4.408673,-6.877275,8.887179,-4.835375,-9.386519,-3.730507,-1.714487,-2.928871,-3.283959,-2.300591,0.050565,6.440810,-6.046256,0.013567,-0.691676,-6.251319,-7.630765,-8.532926,2.829397,-4.230962,-5.335433,7.341909,-1.799265,-9.831403,5.105993,-3.133193,2.754290,7.936843,-5.899794,4.496592,-9.325128,8.172367,-2.923601,-0.388851,4.970950,-6.728424,7.235135,-2.038365,2.944789,-2.631641], dtype = "float64")#candidate|6080|(480,)|const|float64
const_6081 = relay.const([True,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True], dtype = "bool")#candidate|6081|(120,)|const|bool
call_6077 = relay.TupleGetItem(func_4545_call(relay.reshape(var_6078.astype('float64'), [5, 6, 15]), relay.reshape(const_6079.astype('bool'), [84,]), relay.reshape(const_6080.astype('float64'), [480,]), relay.reshape(const_6081.astype('bool'), [120,]), ), 9)
call_6082 = relay.TupleGetItem(func_4551_call(relay.reshape(var_6078.astype('float64'), [5, 6, 15]), relay.reshape(const_6079.astype('bool'), [84,]), relay.reshape(const_6080.astype('float64'), [480,]), relay.reshape(const_6081.astype('bool'), [120,]), ), 9)
func_2142_call = mod.get_global_var('func_2142')
func_2145_call = mutated_mod.get_global_var('func_2145')
var_6086 = relay.var("var_6086", dtype = "float32", shape = (432,))#candidate|6086|(432,)|var|float32
call_6085 = relay.TupleGetItem(func_2142_call(relay.reshape(var_6086.astype('float32'), [8, 9, 6])), 1)
call_6087 = relay.TupleGetItem(func_2145_call(relay.reshape(var_6086.astype('float32'), [8, 9, 6])), 1)
func_5321_call = mod.get_global_var('func_5321')
func_5322_call = mutated_mod.get_global_var('func_5322')
call_6121 = func_5321_call()
call_6122 = func_5321_call()
output = relay.Tuple([uop_6065,call_6072,const_6073,const_6074,call_6077,var_6078,const_6079,const_6080,const_6081,call_6085,var_6086,call_6121,])
output2 = relay.Tuple([uop_6065,call_6075,const_6073,const_6074,call_6082,var_6078,const_6079,const_6080,const_6081,call_6087,var_6086,call_6122,])
func_6131 = relay.Function([var_6064,var_6078,var_6086,], output)
mod['func_6131'] = func_6131
mod = relay.transform.InferType()(mod)
mutated_mod['func_6131'] = func_6131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6131_call = mutated_mod.get_global_var('func_6131')
var_6133 = relay.var("var_6133", dtype = "float32", shape = (10, 1, 6))#candidate|6133|(10, 1, 6)|var|float32
var_6134 = relay.var("var_6134", dtype = "float64", shape = (450,))#candidate|6134|(450,)|var|float64
var_6135 = relay.var("var_6135", dtype = "float32", shape = (432,))#candidate|6135|(432,)|var|float32
call_6132 = func_6131_call(var_6133,var_6134,var_6135,)
output = call_6132
func_6136 = relay.Function([var_6133,var_6134,var_6135,], output)
mutated_mod['func_6136'] = func_6136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5506_call = mod.get_global_var('func_5506')
func_5507_call = mutated_mod.get_global_var('func_5507')
call_6140 = relay.TupleGetItem(func_5506_call(), 0)
call_6141 = relay.TupleGetItem(func_5507_call(), 0)
const_6142 = relay.const([[[-2,5,7,-4,-10,-8,2,-3,6,-2,-10,-8,1,-7],[-4,10,-3,-1,4,7,-2,2,10,8,1,-10,-5,10],[-6,6,-3,-5,-1,7,2,9,9,-7,9,7,-3,10],[5,-6,8,10,8,10,-2,7,2,-9,9,2,-1,-7],[7,-6,7,1,4,7,-7,-3,3,-4,-6,-8,10,3],[10,-10,9,-9,-8,4,-4,-5,-9,3,-10,8,1,-3],[7,-4,9,-6,-2,5,-7,-1,1,3,6,-1,-2,-4],[-5,4,4,7,-6,2,-7,-5,7,5,-1,5,2,-4],[4,-7,-7,-9,1,-6,10,-2,-6,-1,-4,-10,-5,-2],[10,-1,-8,-1,9,7,5,-8,3,2,-8,2,-1,7],[-5,5,9,-10,-4,3,9,5,5,-1,-5,8,7,-7],[2,6,-5,5,-9,-2,-3,8,4,8,-1,8,3,9]],[[-5,10,-10,-5,9,10,4,-3,-8,-1,-8,-4,7,3],[5,9,8,-7,8,-5,3,-7,9,2,-2,-2,1,9],[5,9,6,1,-7,-4,2,2,-5,10,8,3,-4,-10],[8,-4,-3,-4,1,5,-4,5,-8,-1,7,-7,5,4],[-5,-6,-4,-6,5,6,-5,-6,-9,9,9,10,-3,-10],[9,10,8,6,8,1,-4,-1,-9,2,-9,5,10,3],[-4,-2,9,-6,-9,9,6,1,8,-1,-9,4,1,-6],[-7,-4,6,-4,9,-9,2,-6,-9,-10,-10,-3,1,7],[-1,3,-5,-8,7,3,-4,6,4,6,-10,-10,7,-9],[3,10,-2,1,-4,-8,3,-6,-8,4,-6,-3,7,9],[9,2,-8,7,7,-7,10,-1,7,-1,2,6,6,-6],[-5,6,-5,-7,1,10,3,-1,3,8,-3,-6,4,5]],[[-1,2,-8,-9,5,3,-9,5,10,-7,-2,-4,5,2],[-10,-1,7,-5,10,-7,10,-2,-3,-3,7,-8,8,-1],[-10,4,9,-10,-7,-3,-9,-5,-10,-9,7,10,3,-10],[9,-6,6,10,-5,6,-7,10,-1,6,3,-6,7,-4],[-5,-3,-8,7,9,1,-10,-6,6,-3,-3,10,-2,8],[-4,2,-7,-8,-4,-10,4,6,10,1,10,-5,-10,-10],[-1,4,3,7,-10,6,1,8,-7,9,6,5,3,10],[-3,6,1,1,5,-3,-4,1,-4,1,3,1,10,-7],[4,-6,10,-2,1,4,-9,3,5,-9,10,2,-9,-5],[9,-4,9,-1,-4,-9,-4,3,7,9,7,-3,-7,2],[-8,-9,-7,9,2,7,10,-1,9,10,-9,10,-6,-4],[-7,-10,-1,1,9,8,-9,9,10,-6,5,5,-2,1]],[[7,10,4,-9,7,7,-10,-9,-9,-10,10,8,-1,-1],[-7,10,10,7,10,-10,-6,4,1,6,-4,9,-2,9],[-7,8,-3,-9,10,6,2,8,-3,3,-8,2,-5,5],[-7,3,-3,9,1,8,1,-3,1,10,-6,8,4,-7],[2,-8,-6,-2,-4,-4,6,-6,7,-2,1,-4,7,-10],[-3,-9,6,-3,-10,3,7,-9,-1,-2,6,-9,-5,1],[-5,2,7,3,9,-8,-3,3,8,3,-8,-10,-10,-9],[-1,9,-3,-4,-2,-6,4,-10,-2,-7,6,2,6,6],[2,-10,-10,-9,-10,3,-1,-3,-2,-10,-7,-7,-6,6],[-4,7,-10,8,-6,2,1,9,6,-7,-6,-5,5,-5],[2,4,-4,1,-7,-3,-6,-10,10,-1,1,5,6,-2],[3,-3,-7,-2,-9,4,-1,-1,-1,6,-2,10,-6,3]]], dtype = "int64")#candidate|6142|(4, 12, 14)|const|int64
bop_6143 = relay.add(call_6140.astype('int32'), const_6142.astype('int32')) # shape=(4, 12, 14)
bop_6146 = relay.add(call_6141.astype('int32'), const_6142.astype('int32')) # shape=(4, 12, 14)
func_4987_call = mod.get_global_var('func_4987')
func_4991_call = mutated_mod.get_global_var('func_4991')
const_6156 = relay.const([[9.110308,5.690226,2.144152,-8.126327,1.020330,-6.222662,7.069495,-7.364137,-9.199551,0.888494,-2.201062,5.305278,-1.981550,1.023701,-7.642453,-9.321326,-8.618184,-8.154516,5.238762,6.633273,3.220494,-0.701359,6.206348,-5.029398,-1.240006,9.816469,8.847580,-1.987175,7.188431,6.833336,7.880795,-8.859825,2.342684,3.854755,9.051707,6.614999,5.156194,-1.067347,-4.906045,-1.123332,-3.910121,4.912996]], dtype = "float64")#candidate|6156|(1, 42)|const|float64
const_6157 = relay.const([-8.752792,-5.660773,0.876990,4.077626,-4.972903,-7.241068,7.776938,-8.018046,9.274317,5.197107,-3.981465,3.904895,-2.044210,-3.052735,-3.912792,-7.854814,-7.194405,-1.124168,2.377585,-7.539581,4.394093,-7.466677,-7.877502,2.873432,0.225259,-2.072594,-1.830910,-4.619743,-1.611519,-2.938640,8.512464,7.004326,-0.050331,-7.884956,-4.647382,8.434710,2.447316,-7.953558,-9.781550,6.318023,8.628423,3.560446,0.678557,-6.300667,7.178185,2.164332,7.090586,-7.424046,-9.207433,-5.883828,-5.505016,-0.589633,7.183953,8.640889,-3.698743,2.959114,-1.014540,-3.750634,-0.318567,-3.336840,2.446797,6.039579,-4.828075,-6.227957,-3.144492,6.473280,-7.038316,-5.880148,2.717611,-8.271729,-0.266740,3.571499,-9.241104,7.173765,-8.839339,-3.552350,9.663742,-5.065953,-4.322000,-2.096285,2.349672,5.178566,-4.606224,8.438452,9.499739,3.048795,3.551612,6.560521,-8.986709,4.239668,-3.805785,6.087967,2.219341,7.082533,-4.475388,-1.321120,-6.067005,-1.379391,5.607266,-2.265571,3.520005,-3.635582,-2.261678,-4.292623,-0.112537,5.366902,-3.780415,-2.279930,-2.952480,8.336878,-0.628820,8.359542,8.880641,3.427168,8.738383,8.023135,8.067023,-3.888204,3.952805,6.214045,-9.247485,-0.417855,4.813875,-8.836055,3.927658,-6.112570,5.556254,-6.466378,6.760139,4.365561,1.805545,0.803498,-7.699452,-4.056513,0.687175,-8.395700,-0.239119,-8.233033,4.300751,4.829050,-2.592023,-3.502574,4.220797,-5.996718,-4.283932,-9.478777,-5.102856,5.776580,1.206890,3.371664,1.726502,-5.991467,-7.181153,0.103774,7.943319,-8.750070,-9.253736,7.592957,7.536162,6.304906,4.278086,6.308448,4.695325,-1.679279,-8.240179,5.811971,9.291616,8.160531,-3.396184,-8.260005,-2.363119,5.226935,1.977406,-4.917008,-2.545143,5.775098,2.554409,-1.841628,5.525627,6.333112,-7.034885,4.533959,-8.486998,2.787795,6.496530,-2.192988,6.696370,-5.809555,-4.118610,6.004420,-3.838253,-9.203382,-2.469614,1.228948,-2.230680,6.909681,0.114994,-3.594901,-9.430254,1.760846,9.617177,7.262688,8.674793,-3.639520,-9.185479,6.479060,-7.806893,0.046197,-9.163596,-9.727078,0.241631,5.197731,-7.981682,0.237304,0.647590,-8.592801,-9.685427,6.034315,0.457707,-4.663739,-5.599014,1.475709,6.756759,4.706184,2.128646,-5.085974,6.454469,6.733543,-8.319248,-0.431918,4.787087,-0.952915,-8.924692,-6.545549,8.349367,-0.578019,-7.947623,-6.828430,-0.146100,2.386589,2.625249,-8.158129,1.774590,-9.866365,-0.652813,8.889248,3.531368,-2.161056,-8.878331,-1.512719,9.690349,9.913699,-6.871936,3.540951,8.889004,-6.396814,1.094125,3.549812,-3.325607,-8.934008,2.175603,3.219719,7.489179,-6.064300,-1.583601,-7.455836,1.314727,5.746488,7.345861,-3.652609,2.958067,-0.497755,-3.121075,3.318943,6.378750,6.238746,1.619447,-9.512144,-6.398119,-5.602611,6.318259,-2.873655,-9.985733,-9.042289,9.568129,-6.767950,6.178223,5.029065,3.639512,-4.166571,-9.094212,9.829199,-8.923262,-3.086704,-8.014804,9.247131,1.590180,0.991112,1.861844,-3.711756,-2.318009,0.701828,2.781415,5.469578,6.096574,0.677744,-3.133068,-0.828570,-5.968774,8.819012,4.418783,-6.866617,6.383819,7.843714,3.128730,5.734222,-1.605455,7.290470,1.889410,-1.550505,6.497247,-8.542125,-9.835378,-5.945387,2.002189,-8.917092,9.087563,-8.206356,-1.463866,5.546049,2.570480,6.738618,-5.149729,1.785046,-0.667232,-6.767756,1.337380,4.086740,5.634605,4.919511,5.093191,-2.454677,-2.917425,5.426998,-3.322630,9.147588,9.869687,3.055488,6.824003,1.360670,2.971969,0.671422,-0.524278,-5.303692,9.738156,1.236924,2.667157,4.440594,-6.469475,-6.241845,6.291746,-7.121532,4.574179,-8.242130,-1.309187,-0.546360,-7.755957,-1.694765,-9.834231,-7.427885,-8.149969,-9.304424,9.121478,-8.098692,7.183488,-3.330158,-1.355743,6.564727,8.614963,-2.045674,-7.625674,0.127254,3.801471,4.092206,-3.164391,8.160469,7.158054,1.820481,0.975442,-6.086014,-8.502684,6.301085,7.040613,-1.247932,4.907739,-9.558980,7.238216,-5.393337,-7.629017,-5.406870,2.082460,1.092699,-2.027298,-5.882658,-7.596606,-9.361519,9.301337,5.848490,-8.419966,6.192339,1.467856,6.898126,5.506029,2.047329,-0.745033,9.726930,9.097768,-9.302448,9.043929,3.394885,-4.777606,-2.201744,6.011949,-7.507767,-2.458039,0.229017,-8.270963,-0.419676,-1.303091,7.693033,-3.140367,6.278869,1.730717,8.629618,-4.678738,6.614255,-9.476365,-7.611664,1.314022,6.385446,4.930344,1.833791,-6.752533,2.162399,6.570942,0.490635,8.264401,9.929822,-6.461868,8.036480,5.840016,7.613376,4.249157,-1.157008,6.043543,-3.291743,-8.344506,-4.979038,8.163680,-8.666600,-3.912142,-0.255911,-8.668950,-8.444631,-2.689603,5.476272,-8.398895,6.989513,-8.042930,7.236736,-6.122213,-2.883591,9.180035,6.053212,2.225468,-0.437662,4.950471,0.464991,-6.818727,-0.057009,-3.111400,9.174453,4.740932,-1.963851,-5.559253,2.245901,9.935025,9.498596,-4.593905,5.400554,-3.159877,9.318497,3.659023,1.428854,-6.425083,-6.499167,9.267416,-4.837147,5.892126,6.359518,-7.834248,-1.605996,-4.623966,-8.486709,-1.024139,-0.365904,2.794141,-1.122433,3.953570,2.672478,9.861739,-5.565818,0.160503,5.644645,9.499247,-2.967378,9.422111,2.474589,-2.061259,-4.249062,6.592270,-5.179080,-2.891189,4.941486,-5.480893,-3.062780,7.875190,3.629893,9.385644,5.662701,5.872271,-7.662038,-5.423796,-3.272610,9.482996,2.574361,-1.682667,-0.453597,-7.447822,-8.439681,-8.393026,-0.419150,8.193227,-9.185515,4.643603,4.409731,2.437833,8.331266,3.897133,-0.409970,5.933786,8.176127,8.512036,-9.744959,-6.342917,9.825554,9.888908,-7.239112,0.608765,7.034600,-3.805856,1.324486,-9.215631,5.258053,-5.132972,9.858010,1.144747,5.305979,-4.369119,-9.537255,-3.275515,9.944321,9.311909,-7.263947,-7.109331,3.006931,-1.334341,-2.028347,-6.808764,-3.785225,3.828697,-3.822687,9.544479,-2.253766,8.870557,-6.419815,-2.639960,-6.081104], dtype = "float64")#candidate|6157|(588,)|const|float64
call_6155 = relay.TupleGetItem(func_4987_call(relay.reshape(const_6156.astype('float64'), [3, 1, 14]), relay.reshape(const_6157.astype('float64'), [3, 14, 14]), ), 0)
call_6158 = relay.TupleGetItem(func_4991_call(relay.reshape(const_6156.astype('float64'), [3, 1, 14]), relay.reshape(const_6157.astype('float64'), [3, 14, 14]), ), 0)
bop_6170 = relay.bitwise_or(const_6142.astype('int8'), call_6140.astype('int8')) # shape=(4, 12, 14)
bop_6173 = relay.bitwise_or(const_6142.astype('int8'), call_6141.astype('int8')) # shape=(4, 12, 14)
func_3325_call = mod.get_global_var('func_3325')
func_3328_call = mutated_mod.get_global_var('func_3328')
const_6194 = relay.const([-1,-4,4,1,-8,-6,-1,-1,-2,-8,3,4,-2,10,-8,8,7,-6,-3,2,-1,-2,9,1,-8,-10,2,-6,-1,-10,5,-8,1,-7,10,6,6,-6,-1,-8,-4,2,4,-2,4,6,9,-2,-8,5,-6,3,-8,1,-6,10,9,7,10,2,1,-3,-2,1,6,1,-6,8,-3,-7,9,-10,9,-4,9,5,4,2,-5,-7,6,4,2,8,-2,6,-2,2,8,-4,-1,-8,-9,2,-3,8,9,-3,-6,8,-8,9,-3,-5,6,9,-8,-2,-9,-4,3,4,-4,5,-2,5,-7,1,-5,4,-6,9,-2,-3,-5,-7,-7,-2,-2,10,-10,-5,1,-1,-2,8,-8,4,-9,-2,3,5,-2,2,6,5,7,2,-6,4,8,8,10,5,-8,-6,-8,-3,-9,-4,7,8,-1,-1,5,-7,-9,8,-8,1,-2,8,-7,10,-6,-1,-6,-8,-1,-4,-6,9,7,-7,10,10,4,-2,9,-6,-8,1,-6,-1,-7,3,-5,9,2,6,5,-4,3,9,-1,10,-10,5,7,-2,10,-8,-2,8,4,-7,-1,-7,8,10,-10,1,9,-7,10,3,-7,-5,-9,-4,-9,3,2,8], dtype = "int64")#candidate|6194|(234,)|const|int64
call_6193 = relay.TupleGetItem(func_3325_call(relay.reshape(const_6194.astype('int64'), [13, 3, 6]), relay.reshape(const_6194.astype('int64'), [13, 3, 6]), ), 0)
call_6195 = relay.TupleGetItem(func_3328_call(relay.reshape(const_6194.astype('int64'), [13, 3, 6]), relay.reshape(const_6194.astype('int64'), [13, 3, 6]), ), 0)
bop_6213 = relay.maximum(call_6155.astype('float32'), relay.reshape(const_6157.astype('float32'), relay.shape_of(call_6155))) # shape=(3, 14, 14)
bop_6216 = relay.maximum(call_6158.astype('float32'), relay.reshape(const_6157.astype('float32'), relay.shape_of(call_6158))) # shape=(3, 14, 14)
bop_6229 = relay.greater_equal(bop_6143.astype('bool'), relay.reshape(const_6142.astype('bool'), relay.shape_of(bop_6143))) # shape=(4, 12, 14)
bop_6232 = relay.greater_equal(bop_6146.astype('bool'), relay.reshape(const_6142.astype('bool'), relay.shape_of(bop_6146))) # shape=(4, 12, 14)
func_4545_call = mod.get_global_var('func_4545')
func_4551_call = mutated_mod.get_global_var('func_4551')
var_6234 = relay.var("var_6234", dtype = "float64", shape = (450,))#candidate|6234|(450,)|var|float64
const_6235 = relay.const([False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True], dtype = "bool")#candidate|6235|(84,)|const|bool
var_6236 = relay.var("var_6236", dtype = "float64", shape = (480,))#candidate|6236|(480,)|var|float64
const_6237 = relay.const([False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True], dtype = "bool")#candidate|6237|(120,)|const|bool
call_6233 = relay.TupleGetItem(func_4545_call(relay.reshape(var_6234.astype('float64'), [5, 6, 15]), relay.reshape(const_6235.astype('bool'), [84,]), relay.reshape(var_6236.astype('float64'), [480,]), relay.reshape(const_6237.astype('bool'), [120,]), ), 4)
call_6238 = relay.TupleGetItem(func_4551_call(relay.reshape(var_6234.astype('float64'), [5, 6, 15]), relay.reshape(const_6235.astype('bool'), [84,]), relay.reshape(var_6236.astype('float64'), [480,]), relay.reshape(const_6237.astype('bool'), [120,]), ), 4)
func_1000_call = mod.get_global_var('func_1000')
func_1004_call = mutated_mod.get_global_var('func_1004')
var_6242 = relay.var("var_6242", dtype = "float64", shape = (108,))#candidate|6242|(108,)|var|float64
call_6241 = relay.TupleGetItem(func_1000_call(relay.reshape(var_6242.astype('float64'), [9, 3, 4]), relay.reshape(var_6242.astype('float64'), [9, 3, 4]), ), 0)
call_6243 = relay.TupleGetItem(func_1004_call(relay.reshape(var_6242.astype('float64'), [9, 3, 4]), relay.reshape(var_6242.astype('float64'), [9, 3, 4]), ), 0)
output = relay.Tuple([const_6156,bop_6170,call_6193,const_6194,bop_6213,bop_6229,call_6233,var_6234,const_6235,var_6236,const_6237,call_6241,var_6242,])
output2 = relay.Tuple([const_6156,bop_6173,call_6195,const_6194,bop_6216,bop_6232,call_6238,var_6234,const_6235,var_6236,const_6237,call_6243,var_6242,])
func_6264 = relay.Function([var_6234,var_6236,var_6242,], output)
mod['func_6264'] = func_6264
mod = relay.transform.InferType()(mod)
var_6265 = relay.var("var_6265", dtype = "float64", shape = (450,))#candidate|6265|(450,)|var|float64
var_6266 = relay.var("var_6266", dtype = "float64", shape = (480,))#candidate|6266|(480,)|var|float64
var_6267 = relay.var("var_6267", dtype = "float64", shape = (108,))#candidate|6267|(108,)|var|float64
output = func_6264(var_6265,var_6266,var_6267,)
func_6268 = relay.Function([var_6265,var_6266,var_6267,], output)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6281 = relay.constdtype = "float32")#candidate|6281|(10, 16, 15)|const|float32
uop_6282 = relay.asin(const_6281.astype('float32')) # shape=(10, 16, 15)
output = relay.Tuple([uop_6282,])
output2 = relay.Tuple([uop_6282,])
func_6290 = relay.Function([], output)
mod['func_6290'] = func_6290
mod = relay.transform.InferType()(mod)
mutated_mod['func_6290'] = func_6290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6290_call = mutated_mod.get_global_var('func_6290')
call_6291 = func_6290_call()
output = call_6291
func_6292 = relay.Function([], output)
mutated_mod['func_6292'] = func_6292
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6334 = relay.const([[[8.651524,0.364822,-6.373972,9.186830,8.757005]],[[2.347989,-6.259060,7.363748,-6.773610,-6.748609]],[[-7.404038,-3.162401,-4.344142,-0.985287,-4.580231]],[[-2.910855,-4.164706,5.788337,0.972711,0.695260]],[[5.090522,6.317179,-3.954326,-0.260394,6.858579]],[[-8.509937,0.803506,-2.389279,-1.153367,-6.667496]]], dtype = "float32")#candidate|6334|(6, 1, 5)|const|float32
uop_6335 = relay.rsqrt(const_6334.astype('float32')) # shape=(6, 1, 5)
bop_6350 = relay.maximum(const_6334.astype('int64'), relay.reshape(uop_6335.astype('int64'), relay.shape_of(const_6334))) # shape=(6, 1, 5)
bop_6355 = relay.not_equal(bop_6350.astype('bool'), relay.reshape(const_6334.astype('bool'), relay.shape_of(bop_6350))) # shape=(6, 1, 5)
func_2142_call = mod.get_global_var('func_2142')
func_2145_call = mutated_mod.get_global_var('func_2145')
const_6368 = relay.const([2.150329,1.085499,7.379554,3.336872,7.035858,-8.045355,9.664167,1.653412,-5.366929,6.691318,-0.870566,-9.533394,-1.316113,1.084997,-2.214348,-3.788034,-4.673717,3.256648,-5.286008,-6.083929,5.164710,-4.562516,7.835373,0.806731,4.350303,5.154818,-6.726338,9.308271,1.571292,-4.919975,-4.350242,0.310537,6.394261,9.551146,9.850698,2.122626,-1.851654,4.116429,4.842402,3.912435,2.216721,-4.434710,-2.545657,-5.376103,-8.341877,6.559614,7.483620,7.668823,-1.345036,-2.451938,3.730059,-6.499673,3.151592,8.036111,-7.393016,4.781701,6.501316,-3.286028,-7.207861,9.056257,9.531057,4.426795,9.526510,2.697969,2.814332,8.924934,4.447783,-8.980372,8.018255,7.570257,-4.870293,-3.801664,-5.449476,5.625462,7.852581,-9.565965,-9.663539,-6.820129,-2.362621,8.060247,2.039245,-2.779703,-9.248722,-4.426884,-8.108536,-0.804885,-3.526507,-3.030256,5.917987,7.554887,-7.366142,1.463510,-6.897832,-6.763653,-8.073442,-5.040518,-1.386553,-8.997654,-1.897175,8.152415,5.155092,2.742832,-0.449202,-2.476690,-6.066564,-7.655024,9.420373,7.226390,3.132107,7.941122,3.710268,-2.633391,-2.947212,-4.205521,0.088826,-9.124171,7.747225,-7.265184,1.380570,9.143995,7.877948,7.184868,-2.877968,-0.014863,-7.942117,1.281552,4.037986,-1.371922,-3.281906,-9.657996,-7.525196,-5.050448,8.425077,1.798838,-9.152478,-3.465057,-6.079266,-8.607869,-5.225765,5.227543,-7.393409,-0.524109,-9.414170,-7.603317,0.607739,-2.956400,1.377032,-5.056087,1.803874,4.317692,-9.808093,4.771297,3.023388,7.052469,-9.732995,6.495238,5.120976,3.801677,-1.481188,2.717739,-1.077876,7.062696,-0.959157,-2.558098,4.156897,8.489052,4.690337,-6.396871,2.231624,-1.401103,-8.256287,-7.759477,0.655187,2.260495,7.266650,-6.377680,-0.071642,0.505988,7.187534,2.124791,-2.982328,-8.852617,8.269838,-3.839935,2.053323,4.734583,-8.314510,1.722618,4.907087,3.851243,8.827685,-2.205383,4.971164,2.277855,-8.687699,2.373468,9.751619,-7.164050,9.335943,3.615499,-3.816761,-9.312365,2.382238,-8.901704,9.105652,9.897290,3.471366,-0.170413,-7.509556,1.741666,-3.882424,6.145023,3.352904,4.456136,-3.958535,6.539531,6.077208,-9.043019,9.540580,7.561224,-6.347510,-9.726425,-2.802328,0.075857,-4.994588,3.416223,6.548127,-5.945908,5.183695,2.492544,4.476997,-5.060044,7.964425,4.287261,8.302846,0.299189,9.367536,-7.521510,-1.218037,-3.142645,-8.063725,-2.056304,-7.617164,-3.298401,-3.347554,-1.223289,-8.219786,-7.471954,7.629614,8.017693,-3.898784,-3.651614,-7.502593,4.469002,-8.323043,6.501524,-0.751976,0.068224,-7.194865,-6.170436,2.606456,-0.188948,1.166360,3.750032,-2.863702,1.256341,8.704039,0.234897,-6.534599,8.831900,-0.095931,-0.198364,-6.395775,-5.552134,5.844603,9.744684,9.947187,3.496972,-9.932986,6.363435,9.381325,7.398187,-4.346360,-2.570990,4.760339,-4.053391,-8.924436,-8.327644,-6.480891,8.120781,0.963890,-8.363474,9.692905,5.138006,5.570317,-2.259567,-6.881535,6.785185,-3.304474,2.640754,2.072323,-0.943682,-8.992296,-3.597050,0.645235,5.196506,-1.155279,6.007292,5.968738,4.545044,6.517264,7.192648,3.710812,-8.656524,-4.565257,-1.649436,1.857027,8.051206,2.242878,-6.128357,1.113073,-9.535380,-0.439816,7.755195,-0.341713,-7.772095,5.559684,3.961561,-5.002713,-8.999831,-0.516028,1.159828,1.996878,4.669701,-4.315003,5.887080,7.132547,-7.131751,7.351611,7.212635,-6.334716,0.484655,6.733612,6.992828,0.053673,-8.800423,-2.107089,6.206500,-3.394020,-5.538381,5.226791,7.989762,2.479449,-9.242916,8.855870,9.728998,2.464982,2.652491,3.431921,-6.588769,7.738975,-5.345597,-5.703046,3.486288,6.136566,-3.389230,-6.657923,7.167981,4.853942,-6.602166,-3.649409,-8.377998,5.961288,-8.094989,-6.575258,1.593580,-2.871637,7.667805,0.020210,3.164626,2.225463,4.683233,3.061474,1.995552,-5.891467,-6.586872,8.436501,-5.627803,-1.660082,-1.933232,-0.429705,-8.286229,9.933032,7.081650,7.629286,1.027099,-6.794008,-3.675393,-5.727957,-9.774735,6.853547,7.972973,-6.261119,9.914996,-5.113523,2.463350,6.736836,8.547365,-8.690999,-7.618090,-0.273073,-7.245085,-3.267659,-2.604011,-3.964886,-1.531468,0.944574,1.102540,0.371003,2.495975,-3.895569,-1.747883,-7.742325,-0.936017,0.341012,-7.679689,4.614704,-5.538038,9.064979,-9.423418,-4.124100,-8.676318], dtype = "float32")#candidate|6368|(432,)|const|float32
call_6367 = relay.TupleGetItem(func_2142_call(relay.reshape(const_6368.astype('float32'), [8, 9, 6])), 2)
call_6369 = relay.TupleGetItem(func_2145_call(relay.reshape(const_6368.astype('float32'), [8, 9, 6])), 2)
output = relay.Tuple([bop_6355,call_6367,const_6368,])
output2 = relay.Tuple([bop_6355,call_6369,const_6368,])
func_6372 = relay.Function([], output)
mod['func_6372'] = func_6372
mod = relay.transform.InferType()(mod)
mutated_mod['func_6372'] = func_6372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6372_call = mutated_mod.get_global_var('func_6372')
call_6373 = func_6372_call()
output = call_6373
func_6374 = relay.Function([], output)
mutated_mod['func_6374'] = func_6374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6394 = relay.var("var_6394", dtype = "int8", shape = (4, 8, 13))#candidate|6394|(4, 8, 13)|var|int8
var_6395 = relay.var("var_6395", dtype = "int8", shape = (4, 8, 13))#candidate|6395|(4, 8, 13)|var|int8
bop_6396 = relay.bitwise_xor(var_6394.astype('int8'), relay.reshape(var_6395.astype('int8'), relay.shape_of(var_6394))) # shape=(4, 8, 13)
output = relay.Tuple([bop_6396,])
output2 = relay.Tuple([bop_6396,])
func_6401 = relay.Function([var_6394,var_6395,], output)
mod['func_6401'] = func_6401
mod = relay.transform.InferType()(mod)
var_6402 = relay.var("var_6402", dtype = "int8", shape = (4, 8, 13))#candidate|6402|(4, 8, 13)|var|int8
var_6403 = relay.var("var_6403", dtype = "int8", shape = (4, 8, 13))#candidate|6403|(4, 8, 13)|var|int8
output = func_6401(var_6402,var_6403,)
func_6404 = relay.Function([var_6402,var_6403,], output)
mutated_mod['func_6404'] = func_6404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_6440 = relay.TupleGetItem(func_5738_call(), 0)
call_6441 = relay.TupleGetItem(func_5740_call(), 0)
output = relay.Tuple([call_6440,])
output2 = relay.Tuple([call_6441,])
func_6450 = relay.Function([], output)
mod['func_6450'] = func_6450
mod = relay.transform.InferType()(mod)
output = func_6450()
func_6451 = relay.Function([], output)
mutated_mod['func_6451'] = func_6451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_6551 = relay.TupleGetItem(func_5211_call(), 0)
call_6552 = relay.TupleGetItem(func_5213_call(), 0)
var_6553 = relay.var("var_6553", dtype = "int8", shape = (7, 15, 14))#candidate|6553|(7, 15, 14)|var|int8
bop_6554 = relay.bitwise_or(call_6551.astype('int16'), var_6553.astype('int16')) # shape=(7, 15, 14)
bop_6557 = relay.bitwise_or(call_6552.astype('int16'), var_6553.astype('int16')) # shape=(7, 15, 14)
uop_6558 = relay.atanh(call_6551.astype('float64')) # shape=(1, 1, 14)
uop_6560 = relay.atanh(call_6552.astype('float64')) # shape=(1, 1, 14)
func_5869_call = mod.get_global_var('func_5869')
func_5872_call = mutated_mod.get_global_var('func_5872')
var_6563 = relay.var("var_6563", dtype = "float32", shape = (2, 96))#candidate|6563|(2, 96)|var|float32
var_6564 = relay.var("var_6564", dtype = "float64", shape = (42,))#candidate|6564|(42,)|var|float64
call_6562 = relay.TupleGetItem(func_5869_call(relay.reshape(var_6563.astype('float32'), [4, 6, 8]), relay.reshape(var_6564.astype('float64'), [7, 6]), ), 2)
call_6565 = relay.TupleGetItem(func_5872_call(relay.reshape(var_6563.astype('float32'), [4, 6, 8]), relay.reshape(var_6564.astype('float64'), [7, 6]), ), 2)
output = relay.Tuple([bop_6554,uop_6558,call_6562,var_6563,var_6564,])
output2 = relay.Tuple([bop_6557,uop_6560,call_6565,var_6563,var_6564,])
func_6568 = relay.Function([var_6553,var_6563,var_6564,], output)
mod['func_6568'] = func_6568
mod = relay.transform.InferType()(mod)
mutated_mod['func_6568'] = func_6568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6568_call = mutated_mod.get_global_var('func_6568')
var_6570 = relay.var("var_6570", dtype = "int8", shape = (7, 15, 14))#candidate|6570|(7, 15, 14)|var|int8
var_6571 = relay.var("var_6571", dtype = "float32", shape = (2, 96))#candidate|6571|(2, 96)|var|float32
var_6572 = relay.var("var_6572", dtype = "float64", shape = (42,))#candidate|6572|(42,)|var|float64
call_6569 = func_6568_call(var_6570,var_6571,var_6572,)
output = call_6569
func_6573 = relay.Function([var_6570,var_6571,var_6572,], output)
mutated_mod['func_6573'] = func_6573
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6609 = relay.var("var_6609", dtype = "int8", shape = (12, 2, 3))#candidate|6609|(12, 2, 3)|var|int8
const_6610 = relay.const([[[8,-1,-10],[-1,-5,3]],[[7,1,-2],[-5,3,-3]],[[-4,9,10],[10,-3,-10]],[[5,4,-2],[-3,10,2]],[[-8,5,1],[-6,-3,-6]],[[8,-1,-8],[-4,2,3]],[[4,3,-2],[6,-2,-1]],[[-2,-9,-2],[8,-1,-9]],[[-9,4,-4],[5,4,3]],[[-1,-6,-1],[7,6,10]],[[10,-7,6],[2,10,9]],[[2,3,-10],[-4,5,-5]]], dtype = "int8")#candidate|6610|(12, 2, 3)|const|int8
bop_6611 = relay.minimum(var_6609.astype('int8'), relay.reshape(const_6610.astype('int8'), relay.shape_of(var_6609))) # shape=(12, 2, 3)
var_6614 = relay.var("var_6614", dtype = "int8", shape = (12, 2, 3))#candidate|6614|(12, 2, 3)|var|int8
bop_6615 = relay.bitwise_and(bop_6611.astype('uint32'), relay.reshape(var_6614.astype('uint32'), relay.shape_of(bop_6611))) # shape=(12, 2, 3)
bop_6621 = relay.logical_xor(bop_6615.astype('int64'), relay.reshape(const_6610.astype('int64'), relay.shape_of(bop_6615))) # shape=(12, 2, 3)
func_6372_call = mod.get_global_var('func_6372')
func_6374_call = mutated_mod.get_global_var('func_6374')
call_6633 = relay.TupleGetItem(func_6372_call(), 0)
call_6634 = relay.TupleGetItem(func_6374_call(), 0)
func_5708_call = mod.get_global_var('func_5708')
func_5709_call = mutated_mod.get_global_var('func_5709')
call_6639 = func_5708_call()
call_6640 = func_5708_call()
func_6372_call = mod.get_global_var('func_6372')
func_6374_call = mutated_mod.get_global_var('func_6374')
call_6647 = relay.TupleGetItem(func_6372_call(), 1)
call_6648 = relay.TupleGetItem(func_6374_call(), 1)
output = relay.Tuple([bop_6621,call_6633,call_6639,call_6647,])
output2 = relay.Tuple([bop_6621,call_6634,call_6640,call_6648,])
func_6655 = relay.Function([var_6609,var_6614,], output)
mod['func_6655'] = func_6655
mod = relay.transform.InferType()(mod)
var_6656 = relay.var("var_6656", dtype = "int8", shape = (12, 2, 3))#candidate|6656|(12, 2, 3)|var|int8
var_6657 = relay.var("var_6657", dtype = "int8", shape = (12, 2, 3))#candidate|6657|(12, 2, 3)|var|int8
output = func_6655(var_6656,var_6657,)
func_6658 = relay.Function([var_6656,var_6657,], output)
mutated_mod['func_6658'] = func_6658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6049_call = mod.get_global_var('func_6049')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6683 = relay.TupleGetItem(func_6049_call(), 0)
call_6684 = relay.TupleGetItem(func_6050_call(), 0)
func_5980_call = mod.get_global_var('func_5980')
func_5984_call = mutated_mod.get_global_var('func_5984')
const_6697 = relay.const([4.308116,-5.514570,-4.120016,-8.138481,0.167170,3.278352,-9.110976,-4.094530,-7.966339,-1.107270,0.830369,-3.807953,-9.525811,-7.153015,-1.072491,8.957934,3.201502,-0.451989,-7.601356,4.275089,-4.642055,-2.453229,-8.925654,0.111974,4.300923,0.788667,-2.479680,-5.087442,-0.957600,9.352236,9.472712,-2.397276,-0.281155,-7.130086,6.203772,5.488900,4.308050,-5.054373,-2.682998,-5.325389,7.790130,-3.023393,5.033716,-9.211728,6.814667,6.260008,4.560215,8.098836,-9.837203,-6.270266,1.043730,2.938652,4.939079,6.858087,6.861479,9.294650,4.520197,-2.626761,-3.622981,1.131727,-5.510480,-9.144272,-6.534839,-2.154181,-4.163697,7.647249,-4.090814,-6.934241,-4.455040,3.698730,6.370592,3.986340,9.557273,3.663014,-6.065118,5.664421,9.176185,-8.490579,-1.996376,-7.697592,9.636281,-1.680466,-1.441585,6.113176,-8.662040,-4.925510,-1.433998,7.096539,-6.486061,8.330289,6.258427,3.497550,1.861506,-9.171623,-6.449972,-7.213485,-9.002573,0.124915,5.168224,-7.741007,-6.543824,0.801989,-1.932450,-3.076281,3.993711,3.429569,-1.788839,-7.279182], dtype = "float64")#candidate|6697|(108,)|const|float64
const_6698 = relay.const([9.673750,6.540152,8.654169,1.611663,-0.430075,-5.310130,-9.702761,3.212580,-5.851456,7.763964,3.939204,-4.001079,-4.289257,4.338473,-9.890221,1.619622,-3.305191,2.133229,-3.518555,-3.196151,-8.894183,9.004455,-0.437471,0.213718,-6.821390,1.571900,-8.157288,9.742713,-3.744147,-0.938460,-6.197865,-9.538163,-3.402812,-5.069105,-7.211461,0.116213,6.277246,-9.071694,0.157820,4.499900,-2.719152,-7.151934,-9.702438,9.826458,-8.980253,2.954697,-2.279769,-3.204530,-4.095180,8.442092,8.288762,4.070031,6.723292,6.946150,-7.036637,-8.385030,2.104910,5.056009,-5.247666,-5.526766,-2.350214,9.322108,9.691695,7.359190,-9.581758,0.444869,-7.091849,1.624263,-4.864851,-2.300495,2.514691,9.294040,7.834274,-0.146979,-7.337068,6.190274,3.028526,6.038812,-1.346640,-5.107015,3.158292,-0.858775,-4.044242,9.609934,-0.169866,6.481971,-8.217900,-9.622666,1.872312,0.461161,6.824093,-2.485549,-8.607501,-9.620554,9.133131,4.845165,-9.112434,-4.063465,1.173223,4.095572,0.131609,4.860887,9.722890,-8.345603,9.673564,-3.071509,-2.901267,8.299647,-7.436334,7.324344,-4.336252,-4.261174,-1.929975,3.532185,-6.007087,-7.261120,-0.419993,6.946705,5.164298,-6.567900,-7.737312,-5.191963,-6.571142,9.025471,1.890681,-0.222214,7.115982,-1.499679,3.962053,-0.474022,-7.246156,6.913542,-8.207176,-5.839705,-9.064038,-0.168049,-9.622154,3.760309,-6.283426,6.269126,0.699599,0.792957,6.066985,8.971851,-5.652953,-5.578015,-2.671937,9.385252,2.990792,-0.306808,-8.967753,-5.365796,1.146794,5.655740,-8.797500,3.544319,-2.221082,-0.988882,-1.959669,-8.589973,3.457371,5.232285,0.138266,4.062538,0.442699,-2.061346,-2.497362,-9.957198,4.893553,-8.938639,-5.399579,1.398898,-6.546318,-8.833337,9.013163,7.232050,-0.360290,-7.585106,6.008151,-1.825570,-2.832240,2.846432,2.454887,-9.740490,5.898684,-7.117623,7.877111,0.302830,1.594276,-2.217115,-9.039458,-9.418819,9.212299,-1.240467,-5.799888,4.926262,-9.305278,4.823941,-2.289822,-4.649014,-3.395296,6.979697,-4.608106,-4.569662,2.709764,1.658174,-2.385031,-0.197096,-5.666394,6.232153,8.152295,1.421414,6.104906,8.376516,3.992980,1.272488,-2.330254,0.325987,6.894490,-7.659939,-9.402132,9.153643,3.562208,-6.769508,-1.574852,-6.618901,-3.380609,8.163975,5.702175,4.344567,-7.292311,-9.328695,-3.040412,-8.463072,7.575899,-4.326120,-6.215368,4.620138,3.663259,8.801455,2.335422,2.745837,-0.999504,0.623157,5.172145,-9.446243,3.176581,-8.396862,-8.635203,-3.836332,7.428296,7.382424,-3.002461,-4.266516,3.729485,3.536518,4.951472,-2.960331,-5.246579,7.781575,1.747553,0.497752,3.130195,-0.869711,-4.767605,3.111992,0.350980,4.099548,6.646027,6.892426,-6.931052,4.305410,0.411305,2.016469,3.819205,4.025679,-8.540132,-4.552982,-3.455099,2.183582,9.717214,-6.454928,9.231302,-7.971789,6.009270,2.843959,-6.980863,-9.106609,8.430923,7.229631,-1.997647,0.659200,-4.682543,-3.754120,-7.195820,5.947320,6.042635,-6.826737,-8.411778,2.000161,-9.091034,1.061490,-3.326783,-1.066176,1.269490,-8.878934,-0.506893,-0.818508,0.685783,8.789189,-8.227291,4.801157,-1.939042,-4.216601,-7.268469,2.842210,5.587218,-0.486272,-6.051746,7.426383,-0.701042,1.538875,2.069720,9.547852,4.896464,-0.565400,-0.884929,8.605004,4.995025,2.709498,9.237064,-8.201328,1.711283,-6.772572,6.751485,7.560019,-2.850072,-5.113444,-5.110709,-2.663434,-9.001332,8.660552,2.495540,1.947203,-6.116309,-1.343206,7.343800,-5.445475,6.954883,-8.295191,-3.832175,0.112258,8.058046,-0.458184,2.164877,5.637927,3.562334,-3.665432,8.451787,6.333827,-0.211113,0.428538,-1.702854,-5.762691,8.472983,-3.993234,-6.229156,-5.682442,7.019443,7.367623,8.062008,-6.507971,5.878900,2.515295,6.746567,7.403774,4.630955,4.927942,-1.027411,3.589799,5.249075,-4.754829,2.346283,2.991181,5.784452,-7.044779,5.264623,-9.967498,0.904455,3.367479,-6.177519,6.098922,5.849712,-0.251779,-4.064729,3.125636,9.635129,-1.689128,-7.393245,-9.458737,-9.626449,3.189541,9.698807,7.681708,4.300412,1.558876,2.216289,2.155308,-1.162400,-5.010197,-4.609960,-1.918112,2.274498,-8.789390,-6.729248,-7.876122,0.094799,-0.871404,2.809628,-6.382870,-9.722573,-7.399968,-4.302523,-8.489252,2.480908,3.624183,1.823977,-9.905172,-5.719272,-1.341550,1.791752,-4.436435,-3.271930,7.043349,-4.982196,9.530927,-3.088631,-2.235101,8.369586,2.232349,6.307158,-6.229559,-6.195528,-8.595933,-6.003940,0.396392,7.079136,-5.305746,-5.229196,4.633445], dtype = "float64")#candidate|6698|(450,)|const|float64
const_6699 = relay.const([True,True,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False], dtype = "bool")#candidate|6699|(120,)|const|bool
call_6696 = relay.TupleGetItem(func_5980_call(relay.reshape(const_6697.astype('float64'), [108,]), relay.reshape(const_6698.astype('float64'), [10, 45]), relay.reshape(const_6699.astype('bool'), [120,]), ), 1)
call_6700 = relay.TupleGetItem(func_5984_call(relay.reshape(const_6697.astype('float64'), [108,]), relay.reshape(const_6698.astype('float64'), [10, 45]), relay.reshape(const_6699.astype('bool'), [120,]), ), 1)
output = relay.Tuple([call_6683,call_6696,const_6697,const_6698,const_6699,])
output2 = relay.Tuple([call_6684,call_6700,const_6697,const_6698,const_6699,])
func_6705 = relay.Function([], output)
mod['func_6705'] = func_6705
mod = relay.transform.InferType()(mod)
output = func_6705()
func_6706 = relay.Function([], output)
mutated_mod['func_6706'] = func_6706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6720 = relay.var("var_6720", dtype = "float64", shape = ())#candidate|6720|()|var|float64
var_6721 = relay.var("var_6721", dtype = "float64", shape = (4, 6, 4))#candidate|6721|(4, 6, 4)|var|float64
bop_6722 = relay.mod(var_6720.astype('float64'), var_6721.astype('float64')) # shape=(4, 6, 4)
func_4318_call = mod.get_global_var('func_4318')
func_4322_call = mutated_mod.get_global_var('func_4322')
var_6735 = relay.var("var_6735", dtype = "bool", shape = (84,))#candidate|6735|(84,)|var|bool
const_6736 = relay.const([True,True,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False], dtype = "bool")#candidate|6736|(672,)|const|bool
var_6737 = relay.var("var_6737", dtype = "bool", shape = (512,))#candidate|6737|(512,)|var|bool
call_6734 = relay.TupleGetItem(func_4318_call(relay.reshape(var_6735.astype('bool'), [14, 6, 1]), relay.reshape(const_6736.astype('bool'), [14, 6, 8]), relay.reshape(var_6737.astype('bool'), [512,]), ), 1)
call_6738 = relay.TupleGetItem(func_4322_call(relay.reshape(var_6735.astype('bool'), [14, 6, 1]), relay.reshape(const_6736.astype('bool'), [14, 6, 8]), relay.reshape(var_6737.astype('bool'), [512,]), ), 1)
output = relay.Tuple([bop_6722,call_6734,var_6735,const_6736,var_6737,])
output2 = relay.Tuple([bop_6722,call_6738,var_6735,const_6736,var_6737,])
func_6741 = relay.Function([var_6720,var_6721,var_6735,var_6737,], output)
mod['func_6741'] = func_6741
mod = relay.transform.InferType()(mod)
var_6742 = relay.var("var_6742", dtype = "float64", shape = ())#candidate|6742|()|var|float64
var_6743 = relay.var("var_6743", dtype = "float64", shape = (4, 6, 4))#candidate|6743|(4, 6, 4)|var|float64
var_6744 = relay.var("var_6744", dtype = "bool", shape = (84,))#candidate|6744|(84,)|var|bool
var_6745 = relay.var("var_6745", dtype = "bool", shape = (512,))#candidate|6745|(512,)|var|bool
output = func_6741(var_6742,var_6743,var_6744,var_6745,)
func_6746 = relay.Function([var_6742,var_6743,var_6744,var_6745,], output)
mutated_mod['func_6746'] = func_6746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6372_call = mod.get_global_var('func_6372')
func_6374_call = mutated_mod.get_global_var('func_6374')
call_6780 = relay.TupleGetItem(func_6372_call(), 0)
call_6781 = relay.TupleGetItem(func_6374_call(), 0)
output = call_6780
output2 = call_6781
func_6794 = relay.Function([], output)
mod['func_6794'] = func_6794
mod = relay.transform.InferType()(mod)
mutated_mod['func_6794'] = func_6794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6794_call = mutated_mod.get_global_var('func_6794')
call_6795 = func_6794_call()
output = call_6795
func_6796 = relay.Function([], output)
mutated_mod['func_6796'] = func_6796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6372_call = mod.get_global_var('func_6372')
func_6374_call = mutated_mod.get_global_var('func_6374')
call_6800 = relay.TupleGetItem(func_6372_call(), 0)
call_6801 = relay.TupleGetItem(func_6374_call(), 0)
output = call_6800
output2 = call_6801
func_6818 = relay.Function([], output)
mod['func_6818'] = func_6818
mod = relay.transform.InferType()(mod)
output = func_6818()
func_6819 = relay.Function([], output)
mutated_mod['func_6819'] = func_6819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6049_call = mod.get_global_var('func_6049')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6822 = relay.TupleGetItem(func_6049_call(), 0)
call_6823 = relay.TupleGetItem(func_6050_call(), 0)
const_6827 = relay.const([[[-5,1,4,9,7,8,8,10,-8,-6,-1,9,-5,-3],[-3,9,5,-2,-9,8,8,-9,2,10,-6,10,-3,7],[9,-9,8,-2,9,4,6,-6,-8,3,-6,-1,9,2],[-10,2,-10,-4,8,-1,-10,8,5,-2,-9,-4,-10,-9],[-6,-3,-9,6,5,-6,-5,-1,-2,-3,-3,9,-10,6],[7,10,-6,2,5,3,-7,4,-7,-9,6,-5,6,10],[6,7,3,1,-10,5,10,-7,10,-10,-8,4,-8,-2],[3,-2,2,-4,-7,-6,-5,-4,2,3,3,-7,-2,-7],[-9,7,-3,-1,-8,-1,8,-4,2,-2,-9,6,-8,-5],[3,-1,2,-4,-6,-1,-8,3,-4,2,7,10,-9,-10],[-9,-7,8,5,-7,5,4,10,-2,1,-2,-2,7,4],[8,2,10,8,-9,-6,-3,-10,8,-10,-4,6,2,-6],[-10,4,6,-3,-7,-4,5,-3,-4,-5,4,5,-6,8]],[[9,-6,6,-4,10,-9,-8,1,7,-4,-8,3,6,-2],[9,10,-3,4,10,10,-7,5,5,1,-2,3,7,2],[4,-6,3,2,4,-3,-5,-4,-5,-8,-7,-2,-5,10],[1,-7,-7,9,-1,-4,-6,-3,2,-3,-6,-7,1,5],[4,-10,-9,-1,2,-6,10,1,-9,-9,2,7,-5,3],[4,2,5,-3,10,3,-2,8,1,10,-4,10,-4,-3],[3,-3,-6,-5,8,7,9,-4,9,5,-1,-7,-7,-2],[7,-8,-3,-7,9,-2,-7,-6,9,9,2,-5,10,-10],[2,-8,7,-7,-10,-1,-6,5,-4,-2,-1,-10,-7,-5],[-8,6,7,8,1,-8,2,7,4,3,-2,-2,6,-5],[-6,1,-5,3,10,-10,7,-1,9,6,1,3,4,6],[7,4,2,-7,-2,-3,-4,-3,-2,1,-6,7,8,-5],[-5,-6,-2,6,-8,5,5,-2,10,9,2,5,9,-9]],[[4,-1,5,-3,-8,3,4,-5,5,-8,-3,-8,9,4],[9,-4,7,4,-3,-1,8,6,-1,8,6,-2,3,3],[7,-9,-3,7,-8,-4,-10,1,-10,-7,-8,6,3,5],[9,-9,7,1,10,-4,1,-9,-4,6,-9,-4,9,5],[9,1,7,-2,-7,8,3,8,-1,-4,9,-8,4,-9],[1,7,1,-8,8,-5,-5,2,5,1,-7,1,-4,8],[3,2,-9,-4,9,-1,3,1,8,-5,3,1,10,10],[4,-3,3,-1,-6,-3,8,-1,-9,-9,8,-4,-8,3],[-10,4,-10,1,4,-6,-6,7,-4,-6,-1,-3,-7,-9],[3,-4,6,-7,7,-10,7,-3,-6,10,7,4,-9,8],[-4,-2,1,-10,-4,-3,-2,-3,-10,5,-5,5,-8,-3],[-8,2,9,10,10,7,6,8,-5,-10,-7,1,9,5],[9,-6,-10,8,2,9,10,9,-10,-6,8,-9,3,7]],[[8,-9,4,3,-4,3,-10,2,-10,6,6,6,1,8],[-5,-6,-9,-9,10,6,2,-4,2,2,6,4,1,-7],[5,-6,2,-5,-7,-5,6,-3,-1,-3,-2,6,3,2],[-2,-6,-4,-9,-4,-7,-9,-8,-4,-5,7,-9,-1,8],[7,-9,9,-7,-8,9,-1,3,-1,-4,1,1,5,8],[4,-1,-4,-1,-8,5,-7,9,3,5,-2,-10,-6,2],[8,9,-4,5,3,-10,-8,-6,-1,10,-7,-9,-4,4],[7,-3,-6,9,5,7,-3,8,3,-6,-10,-8,1,-8],[4,7,7,-10,-2,-2,-4,6,7,-1,-9,5,-1,-6],[2,-9,5,-10,6,5,1,-9,-10,4,-1,10,-10,-9],[9,7,-9,-8,2,9,9,10,-3,5,-3,1,-4,4],[-7,8,10,7,-2,6,-4,4,8,1,2,-7,7,-1],[-10,-8,9,10,9,-1,-2,-5,-3,-10,-4,4,-9,2]],[[-8,8,7,-2,-9,-8,-2,9,7,10,2,10,-1,1],[3,7,-8,1,10,-4,8,9,-10,-3,4,-4,5,2],[8,7,9,-5,10,2,9,-3,5,-6,2,-1,-5,3],[-9,-8,-8,-8,-1,-4,9,3,10,-5,-9,2,-2,-8],[-8,-9,-3,3,3,10,6,-9,8,3,7,4,10,-7],[-7,-9,5,-1,6,2,5,7,4,6,-5,1,-8,-10],[-1,1,2,-4,-8,5,-6,5,-9,-3,-6,8,-8,7],[-3,4,-2,3,-5,-10,1,8,2,-1,6,5,-2,5],[-9,-6,7,-10,5,4,-10,2,8,1,3,-1,7,-1],[7,9,-8,10,-4,-8,-6,10,5,-9,2,-2,-1,4],[-7,7,10,-1,10,8,4,5,-6,-5,-7,-3,4,3],[-10,-5,1,2,7,-2,7,-3,5,10,-4,-2,9,1],[-3,-1,1,-10,8,-4,7,4,-5,4,8,1,1,3]],[[1,5,8,6,4,2,2,-8,3,1,-10,9,-1,10],[-4,-1,-6,-10,2,4,6,9,3,4,-1,3,4,-1],[-2,6,-5,2,5,8,10,5,-9,3,-4,-5,4,8],[1,2,10,9,6,7,-5,-9,6,-10,-10,6,-10,9],[-10,-9,-6,-4,10,2,-5,7,3,-5,-2,5,-6,4],[-1,-9,9,1,10,2,9,7,-4,-5,10,7,5,-4],[2,-8,-2,-5,6,4,3,9,1,-9,-10,-3,6,-4],[3,-5,-7,-9,3,-8,2,-6,-2,-1,1,-10,-6,-1],[5,5,-3,-7,5,-7,-2,7,1,-10,-10,-5,-1,-10],[-10,-1,-6,4,-9,8,-7,-2,4,-2,5,-7,5,6],[9,-4,8,-3,-2,-2,10,-4,-8,5,-10,-8,-10,-1],[-9,2,-4,-6,-2,5,-9,-6,10,5,8,2,8,-2],[5,5,2,-1,-4,7,7,9,-2,5,4,-1,-10,2]],[[-3,8,10,1,9,-8,-6,-8,-10,10,-3,-5,-5,-3],[9,4,-10,9,6,-3,9,-9,-8,-1,5,10,4,-6],[2,-3,5,-3,2,8,-2,-4,-4,-10,-1,1,-10,-5],[-8,3,-2,-1,6,3,-7,-5,-4,2,3,8,-2,-1],[2,9,8,-10,-10,9,-4,-5,5,-10,10,-5,-5,-8],[-6,9,6,-9,-2,7,9,-10,-2,4,7,-8,-7,4],[8,6,1,-3,7,-3,9,3,-8,3,-9,9,10,-5],[-10,8,10,-3,1,-10,-6,-7,3,-6,-2,2,5,-9],[9,-3,-4,-1,5,9,-8,6,2,-2,3,7,-7,9],[2,-9,6,4,-3,8,6,5,4,1,-5,10,-9,3],[8,7,4,3,-8,-1,1,-8,-5,-3,4,-7,-5,7],[8,1,4,5,4,7,6,-2,7,4,-4,-3,10,-9],[10,10,-6,1,-9,-7,8,-6,5,-1,-9,-6,-1,3]],[[-10,-6,-6,6,9,1,8,2,5,-10,5,3,-6,7],[8,9,-10,-8,-3,-10,6,2,-1,-7,2,7,9,-1],[8,2,-8,4,10,-6,-8,5,6,-5,-2,5,2,-1],[-1,5,8,5,-2,4,3,-5,6,7,9,-1,6,3],[8,-10,6,-10,5,-2,6,-9,6,4,-3,-4,-2,-3],[10,8,-10,9,-4,-2,-6,-5,10,5,-7,-8,7,5],[10,10,4,10,-4,1,9,8,8,2,-9,-6,6,-7],[7,-4,9,-6,10,6,6,4,3,-3,-7,-8,1,-1],[7,10,1,10,-8,3,-4,-3,-8,-8,-1,1,5,4],[-3,-3,-4,-4,-8,9,5,-3,-10,-1,-5,9,-9,6],[10,-2,-5,-3,9,-8,-6,-3,8,9,-2,8,9,-5],[-10,4,3,2,2,-10,3,-8,-4,9,6,-2,10,8],[-9,-10,6,-8,-2,6,4,-7,-4,7,7,-2,3,1]],[[-3,-5,-2,3,8,6,10,6,-9,-2,-7,1,-6,-6],[6,-4,-6,3,-1,5,-8,9,-4,3,-7,6,-5,-7],[1,-9,1,-8,-10,5,7,-3,3,-2,-7,2,-9,10],[-5,-6,10,-5,-9,-8,-4,-2,-2,-8,7,4,5,9],[-4,2,6,8,-1,9,-6,1,-9,-2,8,-8,10,-10],[-1,10,8,7,-10,-1,9,-3,8,-4,-8,8,6,2],[1,2,-1,-7,4,4,-10,5,7,-6,-3,-10,7,-7],[-7,1,-1,1,-7,10,4,-5,10,-8,1,10,4,-5],[1,6,-2,-7,1,-4,8,-10,-7,1,-9,4,10,-4],[-5,7,-2,5,1,-7,-4,1,-5,6,-7,9,3,6],[9,-10,-8,2,10,-3,1,-5,3,7,-8,1,-8,-3],[-6,-6,6,9,3,-3,-9,3,-8,-7,6,-8,6,2],[-2,9,-6,10,1,8,-1,6,-9,1,7,10,-3,10]],[[10,7,10,9,-9,8,10,-3,-6,2,7,-5,-3,-10],[3,-8,-3,-6,-9,7,-6,9,10,9,-10,-3,4,1],[-3,4,2,-3,-6,-8,-4,2,-1,-5,2,8,5,-7],[1,6,1,-4,-1,8,3,-2,-10,-6,5,1,-7,9],[10,1,-6,-5,-7,1,-5,-7,4,7,6,-4,-7,8],[2,6,-3,-3,-3,7,-9,-10,-7,5,10,5,5,9],[-2,4,4,8,-6,-8,1,-9,-6,-7,9,6,1,-5],[9,-6,1,-7,-1,-4,-5,-6,-2,9,3,2,-5,1],[-8,-4,-10,-9,2,8,8,2,6,10,-10,-5,2,-7],[8,6,-6,-4,-1,-9,-7,-8,-1,-8,8,-5,6,3],[9,-8,-8,2,3,2,9,8,-10,-2,-9,-8,-10,-5],[-4,6,-10,2,-9,4,10,-7,-9,6,-3,10,1,-7],[10,-9,2,-10,2,-10,6,-4,-10,-7,7,-8,-4,-2]],[[-8,-5,-3,-5,-10,7,4,-4,3,-9,10,-4,1,-9],[2,-9,-2,-9,9,-4,-6,10,10,4,-3,-8,1,1],[-6,7,6,8,-10,-5,-10,7,-1,10,2,-7,-7,7],[-7,-9,1,-10,-2,4,-7,1,9,-5,-7,-2,-9,2],[-3,3,7,4,-8,2,-5,1,7,-9,-10,-5,-7,5],[-5,1,6,-10,6,1,-8,-3,9,-5,6,3,8,4],[-4,-3,-6,8,10,6,-2,9,10,-7,4,7,5,5],[-7,-9,7,-1,6,-6,-7,-2,7,-3,3,-8,-1,6],[-5,9,9,-3,10,1,3,-4,-10,-1,8,-6,3,8],[8,-8,-7,5,5,-6,1,-2,-3,-5,1,-1,-10,-1],[-10,-5,-5,3,1,1,5,-10,-3,9,9,10,-9,-10],[-8,4,-10,-8,3,8,-9,-2,6,-1,6,-6,3,4],[7,-5,-5,-4,-9,1,-6,-7,-7,1,1,-2,-9,10]],[[4,-8,-8,-7,1,7,6,1,6,-8,5,8,-9,-2],[9,-4,6,4,-4,-6,-4,4,-2,1,3,2,-1,5],[-1,2,-9,-2,8,-10,9,-5,10,3,4,-9,-7,4],[-1,8,8,-3,4,-3,-1,5,10,5,1,3,3,-2],[-4,6,9,-1,-4,3,8,-2,-10,3,9,1,5,5],[7,8,-8,-9,10,2,-4,2,3,-3,3,3,3,1],[-8,-5,6,8,-10,10,9,-4,1,5,1,6,-3,5],[-3,-3,5,-7,3,-6,4,-3,-2,-4,-4,-4,6,-1],[9,6,-4,-6,-8,1,-10,-4,-5,-7,-5,-9,-1,-8],[-4,-7,-6,-8,1,1,-9,-1,-9,3,-4,-4,-3,-10],[7,3,-8,8,-3,-4,2,-6,-8,-2,-1,-5,-7,-6],[2,-5,3,-2,-8,4,-9,-8,6,2,10,-10,-8,8],[2,8,-9,2,-10,-2,7,2,6,6,5,-5,3,7]],[[-10,9,-8,-7,9,-8,6,-9,-10,8,2,-8,-4,-3],[-10,-10,-7,2,5,2,-1,-3,2,9,-5,-8,2,4],[-10,-5,-9,-1,-6,-2,4,-3,6,-9,9,10,6,-1],[-5,8,-5,-8,-10,1,-3,4,-8,-2,6,1,-1,1],[9,8,10,1,-1,-8,-7,-6,3,-8,1,-3,1,-4],[5,2,9,9,-7,5,-9,-10,3,7,-8,-4,4,5],[3,10,7,3,-3,5,5,10,4,-2,-6,2,-5,10],[-6,-5,-6,-9,6,-1,8,-10,8,9,-10,9,-2,-9],[-9,-6,-5,4,-7,-6,-6,-3,5,-7,3,-4,-9,-8],[-4,-7,7,-10,6,6,8,6,9,8,3,6,3,1],[-5,-2,8,-3,-5,-7,-6,6,-5,10,2,-9,-5,-4],[-6,-10,-6,1,-4,-6,9,1,6,-1,-8,4,-1,8],[9,2,-7,-8,5,-6,6,-7,5,10,3,-2,-4,-4]],[[3,-9,-4,-10,3,3,-9,-6,-10,2,9,9,-5,3],[-9,-2,-9,-5,-4,-3,4,7,-4,2,4,-1,8,-4],[-1,2,-4,-4,-9,-7,5,10,-7,-5,-7,-6,3,-5],[7,3,6,10,4,-6,-5,6,2,-1,2,-9,5,4],[-3,8,-8,-10,10,6,-5,7,-5,10,-10,6,9,2],[3,3,-5,-7,-3,7,4,7,8,-9,-8,10,-2,-1],[4,-6,-9,2,-9,7,4,7,-9,-9,-10,-10,9,-8],[8,3,-3,6,9,6,-7,-2,-6,10,3,2,10,-4],[4,2,-1,4,6,-6,10,-3,-4,9,-3,-5,8,2],[3,-7,-9,-1,-5,-6,6,8,-3,-4,-7,9,2,8],[3,-10,-7,-3,7,7,-8,-5,-5,2,-5,7,9,-1],[9,-3,-9,-7,9,1,4,9,2,-8,-8,-5,7,4],[5,7,5,6,-2,-10,-3,-8,-10,-10,-5,-9,9,8]],[[5,1,9,6,7,-10,3,9,-1,-6,6,-7,-4,-5],[-10,8,7,7,-9,-10,5,5,-9,5,-3,-5,6,-1],[-8,-5,1,6,-5,4,8,-10,3,10,-10,-4,-5,-2],[-8,-9,-9,-5,-8,-8,5,-6,-5,5,-2,2,7,4],[4,1,9,8,-6,10,-5,-10,-2,3,-5,-9,-1,-8],[6,2,-6,-2,7,-4,-5,1,-5,-2,7,6,4,-8],[6,-7,6,4,4,-8,8,-6,-8,-6,-7,-4,4,6],[-5,6,10,6,5,-9,-6,2,1,-10,4,-6,4,7],[9,-7,10,8,7,8,-3,-10,4,-6,7,-3,-2,4],[-6,2,-6,10,2,-8,3,8,-10,7,-8,6,9,-10],[8,-4,7,-2,5,-9,-1,6,2,9,2,-4,9,8],[3,8,4,-8,8,-3,3,1,-10,9,1,-4,6,-3],[-9,-2,1,-6,1,-5,5,3,-4,3,9,8,1,-3]],[[9,1,-9,2,4,4,-1,6,10,5,2,-10,1,-3],[9,9,-1,7,7,1,-9,-9,-5,8,4,1,-1,-9],[8,-5,9,6,6,2,-7,7,8,-6,-2,-10,8,-2],[-2,-1,4,-9,2,3,-1,3,7,-3,7,8,4,6],[9,10,9,-4,-9,-6,-8,-1,5,6,6,-7,-1,-4],[2,8,10,-5,-1,-3,-1,1,9,10,-8,6,-8,-8],[-9,-3,-4,2,-10,2,3,-2,-4,6,7,-9,-6,6],[9,4,-8,-7,-7,4,-6,-9,-2,7,-5,1,-1,-4],[7,-3,-6,2,-2,-6,-10,8,-9,-8,9,-8,8,-4],[-2,-8,-10,3,5,-2,6,10,10,-5,7,9,9,-10],[-9,-8,5,-9,-6,-3,-10,2,4,-4,-9,3,-4,-4],[4,-2,8,-5,7,-8,-6,5,-7,-2,6,5,-4,-3],[-3,-1,-1,-9,2,-10,5,3,-10,-7,-3,7,-4,-9]]], dtype = "int8")#candidate|6827|(16, 13, 14)|const|int8
bop_6828 = relay.minimum(call_6822.astype('float32'), const_6827.astype('float32')) # shape=(16, 13, 14)
bop_6831 = relay.minimum(call_6823.astype('float32'), const_6827.astype('float32')) # shape=(16, 13, 14)
output = bop_6828
output2 = bop_6831
func_6832 = relay.Function([], output)
mod['func_6832'] = func_6832
mod = relay.transform.InferType()(mod)
mutated_mod['func_6832'] = func_6832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6832_call = mutated_mod.get_global_var('func_6832')
call_6833 = func_6832_call()
output = call_6833
func_6834 = relay.Function([], output)
mutated_mod['func_6834'] = func_6834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6450_call = mod.get_global_var('func_6450')
func_6451_call = mutated_mod.get_global_var('func_6451')
call_6835 = relay.TupleGetItem(func_6450_call(), 0)
call_6836 = relay.TupleGetItem(func_6451_call(), 0)
output = call_6835
output2 = call_6836
func_6840 = relay.Function([], output)
mod['func_6840'] = func_6840
mod = relay.transform.InferType()(mod)
mutated_mod['func_6840'] = func_6840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6840_call = mutated_mod.get_global_var('func_6840')
call_6841 = func_6840_call()
output = call_6841
func_6842 = relay.Function([], output)
mutated_mod['func_6842'] = func_6842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6832_call = mod.get_global_var('func_6832')
func_6834_call = mutated_mod.get_global_var('func_6834')
call_6890 = func_6832_call()
call_6891 = func_6832_call()
func_2892_call = mod.get_global_var('func_2892')
func_2896_call = mutated_mod.get_global_var('func_2896')
var_6920 = relay.var("var_6920", dtype = "bool", shape = (72,))#candidate|6920|(72,)|var|bool
call_6919 = relay.TupleGetItem(func_2892_call(relay.reshape(var_6920.astype('bool'), [4, 3, 6]), relay.reshape(var_6920.astype('bool'), [4, 3, 6]), ), 0)
call_6921 = relay.TupleGetItem(func_2896_call(relay.reshape(var_6920.astype('bool'), [4, 3, 6]), relay.reshape(var_6920.astype('bool'), [4, 3, 6]), ), 0)
uop_6925 = relay.sqrt(call_6890.astype('float64')) # shape=(16, 13, 14)
uop_6927 = relay.sqrt(call_6891.astype('float64')) # shape=(16, 13, 14)
uop_6972 = relay.acos(call_6890.astype('float64')) # shape=(16, 13, 14)
uop_6974 = relay.acos(call_6891.astype('float64')) # shape=(16, 13, 14)
func_6705_call = mod.get_global_var('func_6705')
func_6706_call = mutated_mod.get_global_var('func_6706')
call_6975 = relay.TupleGetItem(func_6705_call(), 2)
call_6976 = relay.TupleGetItem(func_6706_call(), 2)
func_6290_call = mod.get_global_var('func_6290')
func_6292_call = mutated_mod.get_global_var('func_6292')
call_6977 = relay.TupleGetItem(func_6290_call(), 0)
call_6978 = relay.TupleGetItem(func_6292_call(), 0)
output = relay.Tuple([call_6919,var_6920,uop_6925,uop_6972,call_6975,call_6977,])
output2 = relay.Tuple([call_6921,var_6920,uop_6927,uop_6974,call_6976,call_6978,])
func_6981 = relay.Function([var_6920,], output)
mod['func_6981'] = func_6981
mod = relay.transform.InferType()(mod)
var_6982 = relay.var("var_6982", dtype = "bool", shape = (72,))#candidate|6982|(72,)|var|bool
output = func_6981(var_6982)
func_6983 = relay.Function([var_6982], output)
mutated_mod['func_6983'] = func_6983
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6989 = relay.var("var_6989", dtype = "uint32", shape = (6, 1, 13))#candidate|6989|(6, 1, 13)|var|uint32
var_6990 = relay.var("var_6990", dtype = "uint32", shape = (6, 10, 13))#candidate|6990|(6, 10, 13)|var|uint32
bop_6991 = relay.subtract(var_6989.astype('uint32'), var_6990.astype('uint32')) # shape=(6, 10, 13)
func_5793_call = mod.get_global_var('func_5793')
func_5796_call = mutated_mod.get_global_var('func_5796')
const_7006 = relay.const([-4.862757,4.617348,2.636424,-4.691855,-3.516634,-8.614317,-2.429130,-5.972878,-0.594576,0.118136,-3.078125,-6.554347,-7.640825,4.627944,-7.096649,-6.893234,-3.389529,-3.370789,-9.443524,2.147877,6.483722,-8.075684,0.808929,3.397032,7.177480,-9.019319,-2.764369,2.526102,-8.743283,4.244495,4.109184,7.102816,7.427104,-7.778152,-4.250894,-3.578018,6.130425,4.161562,8.028232,-0.435994,-2.485491,-5.552249,-1.695760,6.555375,-0.201285,7.619771,-2.822386,5.421496,-0.101552,3.293994,-1.777825,-0.295518,-3.436982,-9.434072,-1.338463,4.500117,4.015954,-3.781792,5.693494,5.957595,-8.485117,-4.751160,7.505628,-6.605009,1.287070,8.375281,5.105378,8.049797,5.748382,2.655773,-2.213177,-0.896791,-5.388939,7.269846,-4.811900,-1.046435,2.529546,-0.753996,-7.772781,0.374385,-2.163533,2.089927,-2.063060,-4.041890,3.999441,-1.660997,-9.207983,6.852789,1.409122,-7.841263,1.793829,-9.546891,7.641784,-0.084619,0.863495,4.931090,-9.747954,4.285750,5.015238,-1.081872,0.580117,1.963395,-0.226416,-0.236426,7.491686,1.157052,5.939371,-5.168305,-8.744823,7.514734,-5.576053,-8.583811,4.436962,1.150787,0.472569,4.025191,-5.474184,-5.559202,-9.916359,-6.258132,6.909013,-9.931375,2.449644,-7.537043,9.542442,6.412627,-5.463294,-0.304800,7.030934,2.380910,-9.145439,4.087265,2.946255,3.113084,6.406047,6.894387,3.318886,1.926939,-0.873756,6.066250,0.286197,1.279470,-7.629336,-6.798210,-2.211116,-6.038101,-8.735763,0.259258,6.440802,6.723528,4.749370,4.809440,0.598356,2.741877,-8.901590,5.678242,-3.670768,-0.948559,4.033387,-4.542826,-3.583924,-7.602537,7.423812,-6.617632,-8.748827,6.807806,-8.622909,-2.824275,7.786372,-6.735228,-2.388065,-8.468956,-7.045429,6.492825,8.624666,5.631983,-4.865240,-3.102901,-5.876041,-9.070550,9.455164,-3.488362,7.791900,4.574265,-4.571079,-2.978841,0.550420,6.636199,3.064198,0.856017,0.657574,-4.892885,-8.858920,1.652887,2.652277,6.300575,7.098921,2.873328,6.802025,3.332587,-2.995357,-3.375529,-1.471683,3.150366,7.048280,-3.644752,-5.875259,-4.404417,-5.954418,2.110794,-6.407853,-7.504687,-8.292235,-9.241097,-3.385063,0.553037,7.199815,-9.561889,-3.976835,-5.524895,0.054309,-3.184563,6.164267,-2.877725,-1.812894,-7.182910,8.452433,-5.592853,-0.264530,5.598230,-5.591673,5.350219,-9.023056,-0.350634,1.245435,-1.478452,7.198077,-7.934382,-4.300738,-7.954774,-1.785309,0.225130,7.832048,9.726943,-5.581621,-4.146421,-0.318362,-0.277306,-2.288528,6.332112,1.920907,-4.650046,-9.320165,-7.577674,8.493140,6.498750,2.642686,0.063267,-2.065623,-7.131390,7.521881,5.518480,-2.787673,0.356450,-3.891750,-8.868533,-3.112293,0.866692,-0.939182,9.214342,-1.747986,4.493716,4.162986,4.372316,-5.531810,-6.034507,-5.691921,3.280933,-6.258628,1.844779,2.007936,-0.508251,-5.901232,-4.427743,6.630360,2.030961,-2.106947,9.829619,1.086061,0.891846,-1.181393,-7.886952,8.535809,6.483548,-8.279162,9.299590,3.361762,6.150399,5.488692,-1.800178,-0.448370,-3.608381,-2.866202,-8.644332,-1.130069,3.713717,-0.947071,-9.393643,3.709322,5.010899,-4.915438,1.485110,-1.498845,-8.958706,-1.506232,3.858086,-4.818821,1.693591,8.469311,-6.819314,5.587688,3.448697,9.645138,-3.268096,4.253983,-5.521595,-9.813961,8.207165,7.116962,-2.465211,-3.365555,-7.615329,4.744815,-6.892063,2.024232,9.767000,-9.616478,-6.052089,-3.610863,4.051750,-2.347909,8.167942,0.657200,-8.793555,-4.549185,6.858652,-3.089560,9.806405,7.020304,-6.968159,1.332926,-1.256074,-5.146397,8.229513,0.005659,9.505500,5.619149,-6.127540,3.609264,9.983508,1.168496,9.251296,-9.158215,4.708685,-6.161021,-5.888903,6.738293,3.175120,-3.704857,-9.406227,0.431199,5.531539,3.679950,-2.824644,-6.064813,-9.429400,-8.487459,9.908755,0.413094,-9.304389,9.556991,4.775031,3.000828,-5.546631,2.635314,9.304163,-5.167850,0.136060,-7.792081,3.869469,2.701620,-4.686151,1.219551,-3.740896,7.876476,-0.784280,-2.302487,7.234230,-0.858890,0.664566,2.198947,6.009806,4.907203,5.836778,-7.150432,8.555959,-5.639820,0.263525,0.578150,-2.268277,-6.460072,1.476292,-4.331471,2.344047,4.827869,6.410514,7.118076,-8.511555,0.391637,2.230653,-4.669621,-8.142027,-2.567843,-4.591242,0.210730,-1.121390,6.843542,-8.523932,7.587179,3.288243,-5.662834,7.909759,9.605542,9.097493,0.974002,-4.715982,7.517856,-8.010556,-2.280952,3.965968,-8.669844,3.536100,-6.444504,2.388960,0.470374,-8.251701,6.585348,-2.393414,8.152785,-7.167421,-8.719095,6.935220,0.058914,7.840567,-0.214916,6.221187,0.777193,1.890006,3.314158,9.344746,9.869277,-9.781329,7.378643,3.272923,-1.052826,0.276505,-8.539491,-5.826490,-4.461233,4.999521,8.203254,9.338729,1.647002,-4.158183,-1.885832,-9.022677,5.005404,-8.437571,0.381204,7.121202,8.353380,-6.134734,0.217189,4.329207,-4.359901,5.302572,-6.259891,-1.457711,8.874840,-5.015546,-9.543519,5.526570,0.648693,-0.765346,0.958713,1.595220,-3.579908,-4.077496,-8.238231,-3.492971,-6.177654,-3.834854,-1.340550,-5.281036,6.644201,2.754935,0.574539,5.378602,7.518218,7.344752,-3.084403,4.854476,-6.713951,-8.124286,-1.471997,-9.546025,-2.630694,6.789814,2.100717,-7.935881,-8.622969,0.977066,-5.851563,-8.060029,-1.731473,-8.495644,-7.246712,-8.299626,9.451898,-2.142179,1.505170,-1.967352,3.440098,-6.479755,-6.266822,-3.802667,9.043357,-3.774403,-5.824543,8.254849,5.873261,8.886007,3.776976,-5.908026,2.572955,-6.487109,1.115525,-0.191925,-3.401530,-7.650099,-7.728666,8.102847,-1.157765,7.859895,6.227734,3.790730,9.493571,-4.021946,-9.937101,3.065528,2.522695,-0.542632,2.622438,-3.596054,-4.267245,-6.430054,6.873900,-8.779210,1.053044,-7.035683,-8.128623,0.620774,4.177345,-4.310680,7.845340,9.583088,-4.823993,8.378136,-7.491897,0.738137,-8.392940,4.447597,-9.066302,8.382131,-0.881331,-2.121333,-5.655270,-6.196795,4.716850,1.966284,-5.598360,-4.983032,3.535663,-2.137606,2.590757,-8.797673,5.843762,2.500206,6.810832,-3.962543,-5.215883,-1.711531,-6.005709,-6.154129,4.350197,-3.709168,-7.124845,-2.834190,3.262522,-2.539652,9.052777,-6.329659,-7.654161,-1.887221,8.102299,7.189049,8.307103,-8.921830,-5.622438,3.685515,-9.203365,-6.214731,-9.141747,-5.685717,1.507673,-7.188110,5.684350,-6.739413,-8.746827,5.501153,6.669412,-6.713637,-0.813559,-8.324209,2.604012,8.869341,-1.227942,6.310348,-2.535270,-4.445137,-0.828470,-2.847730,1.966630,6.655575,4.357563,4.534726,-4.629683,0.814434,-2.238733,3.530168,-7.227222,-2.898954,-5.327474,0.533716,3.871685,2.468899,3.515843,-6.627562,-4.676128,-3.235222,-6.965676,-3.000119,4.602123,-8.581262,0.261103,-6.349575,-5.756315,-3.292888,-2.283304,6.553377,0.948431,5.232575,0.153981,-6.594697,7.132651,7.438398,-6.918393,-4.612790,-5.497491,-6.938533,0.381704,0.109655,3.452445,-3.358049,7.251510,0.202054,-6.749247,2.730130,-8.564970,0.835703,3.876689,-6.964050,-5.825046,8.215625,4.084641,6.983292,-5.336218,-6.503233,-6.669511,7.366575,-4.429088,8.636895,5.421437,-7.889648,-0.143172,-1.660887,3.350529,2.449751,4.469491,-1.879782,-0.397331,2.341070,-7.094276,-1.165546,3.220343,-9.995052,8.298776,-6.981269,0.339920,-3.532180,1.108189,3.938426,0.152686,-6.295182,0.679586,4.153449,-2.094050,2.799463,-9.907093,-8.400934,7.669861,-6.970654,-5.723181,-3.921180,0.263179,4.127926,5.770181,1.682681,7.159377,9.031121,-4.169378,6.349505,-4.339213,4.209991,-5.304561,-9.998116,7.589155,-1.557843,0.857415,8.322857,-1.328181,0.259772,8.492239,-3.992640,0.942681,1.543166,5.480477,-9.202873,4.043688,-3.345114,4.651333,-1.189490,0.542289,-1.347754,7.675764,-8.963696,-2.519972,4.407196,-3.631352,6.601706,0.991208,-2.634017,6.652477,-8.239007,-3.385877,-0.931275,0.472575,-0.980762,-8.183883,-8.048716,-2.514168,3.806479,-0.054710,-3.229755,-3.236349,-6.724039,6.855469,-3.471466,-8.036346,1.385491,-7.329111,-1.616386,-5.617944,-2.362327,-7.318916,-6.029686,2.150951,8.959871,-2.849145,2.221924,1.461582,3.730152,-2.510575,5.017215,-7.271686,2.744835,4.311456,0.223025,6.227581,-2.996359,-6.350524,-2.157342,-8.280115,2.050987,-0.107679,9.920329,7.645907,-2.554818,0.927351,-1.495540,-2.717219,-2.093196,2.557437,-8.562036,9.759932,-1.754883,4.231955,-6.542521,2.281646,4.503760,-1.947835,8.688656,3.795000,8.245578,-5.972644,-1.438503,8.453133,-3.333708,-4.123006,2.670213,2.099066,9.160933,4.060920,-4.823642,-9.158921,-5.495160,-5.086101,-0.091783,4.764764,-2.653529,9.743695,-9.525493,8.950971,4.358601,8.805162,-6.361588,6.223102,-1.671503,3.989661,7.663933,-7.434949,-7.085480,7.391166,-2.247435,-0.671247,-7.140921,4.178879,-2.953600,3.808710,7.859164,3.908513,8.003028,6.570300,2.373007,-6.119098,-6.827266,-4.247634,-2.396269,5.231891,-9.234877,4.153079,4.389902,4.059669,-9.288553,-2.470121,-7.697003,2.704377,-0.890101,9.258639,1.023507,-6.171043,-0.036953,-9.012695,-0.333078,2.291840,5.279499,-4.316942,1.756339,-4.456006,-1.279348,8.589725,-3.484769,4.719031,-5.041300,-3.906133,-6.671903,3.819068,5.557247,9.517643,-0.674721,-7.340776,-1.047012,-1.023561,6.631017,3.164217,1.707597,-9.686970,5.983359,-3.042755,-9.652080,9.246883,2.838503,0.195742,-8.196071,3.194474,5.197484,-6.058725,-4.762049,9.622104,3.907054,4.525284,-4.250876,2.267920,3.235828,2.324714,-0.786273,3.713509,7.513949,6.455873,7.038730,-4.149119,-8.893600,-4.341922,-2.481558,-4.420039,-1.224799,-8.199711,6.362417,-9.906444,-3.072239,-6.957147,-0.534654,-9.293591,-8.523654,0.482769,-5.382192,-6.963339,-9.890433,8.394461,8.057647,2.918571,-3.880693,-4.065745,6.279474,-4.171547,-4.481154,-3.894252,-8.227302,-1.570184,-9.945380,6.876314,-9.510586,-1.846675,-2.581590,6.251904,4.903754,-6.036343,-0.593290,-5.933029,8.262361,5.151887,5.269710,5.561936,0.166919,7.399722,3.442700,-8.597426,-8.525691,2.246917,4.225560,-5.475918,6.962850,-0.825973,6.125825,0.733806,3.389185,-6.041641,-4.913307,8.840509,-7.974678,-8.319898,0.073206,3.221534,6.001629,-8.061989,6.784358,7.683619,0.487402,-2.178860,-5.937080,-6.271584,0.746575,3.040530,-8.864449,6.383181,4.058619,-1.735532,-2.133521,-7.198399,-2.483523,-8.689254,-9.803115,-7.998826,9.190741,-0.328105,-5.711825,-2.057781,-6.833885,-0.243988,-2.176391,1.256495,3.097593,-6.800304,2.822010,3.981834,6.797325,5.290376,3.542743,-2.261387,-3.795263,5.378946,4.259816,-6.216925,6.868892,-5.294540,-4.656767,4.311710,4.137841,-9.293618,-6.804099,9.215781,8.044212,2.821269,-5.355317,-4.690212,8.555729,-7.084464,1.253846,-9.615950,3.180087,-6.588324,-7.051044,4.138376,1.711822,-7.828365,0.638879,8.761155,-7.540789,7.944832,-5.677401,8.738908,4.637231,-6.050146,8.764630,9.865881,8.556284,-6.533113,9.189044,-1.022180,6.441318,3.703435,-4.975746,-7.920871,4.782808,4.504380,4.539028,7.553088,-6.012071,5.386501,-2.263836,-8.535122,-6.464813,1.011008,-9.618638,-0.837467,-2.049447,-9.199756,-4.044719,1.444228,1.006284,-3.912892,-7.899128,1.624662,0.210621,-2.998962,-8.501158,-6.597883,2.553024,-1.894894,7.012355,-9.217485,-8.661318,-8.752794,4.688600,3.456219,-3.516350,5.754281,6.206223,-1.774928,5.305786,1.879309,4.539910,-3.390456,4.047439,8.560677,3.756537,1.015056,-1.645199,-0.901527,8.650504,-7.531039,4.977186,-2.708917,3.342297,-4.937219,4.150925,-2.207528,3.527515,-5.554924,0.823219,9.146248,2.381886,6.125155,-6.638093,9.909786,3.819587,5.697881,2.948812,9.180213,-2.449406,9.997127,4.316724,5.772492,-4.514074,-4.480696,7.103421,-7.865876,-7.618666,-0.187583,3.230083,-4.802992,-0.105812,-6.237752,-3.873124,-4.413722,4.388158,-7.210294,9.310636,0.981532,2.495272,6.340730,8.504269,0.915565,6.054765,-7.114376,6.501419,7.760456,-3.153630,7.341449,-3.352969,-0.656053,4.683046,-8.284909,-0.500838,-7.986632,2.202929,-7.100871,7.583323,-6.399287,2.688534,-2.940573,-3.344248,-1.180764,3.083276,9.958339,7.395749,0.620518,-0.823554,2.054282,9.143157,9.523927,-9.992239,9.574934,4.071828,-3.470305,-4.616642,-1.799668,1.714208,9.055903,-9.716644,-9.226782,-4.856678,8.708219,7.614518,5.431203,-6.852419,-8.492064,-3.704899,4.488965,2.735705,0.033678,-4.513656,-3.660522,-7.373643,-4.823787,-5.105376,3.118487,-3.909402,-5.292476,2.851400,-3.008359,-5.649193,-5.948054,-1.809959,-2.031172,-1.120050,3.087906,7.933306,-7.881897,9.196335,0.771132,2.931830,1.714794,4.343078,0.557590,3.733259,-3.936875,-7.841464,5.655077,-9.691133,3.108672,1.117605,7.656038,-8.880028,-6.159959,-8.191988,-6.667015,-8.217622,7.869287,9.566332,6.036705,-7.541965,-0.370285,-3.613148,8.381419,2.998104,7.454973,8.966453,-4.683769,-5.319042,-2.305677,-8.490924,-1.370879,-1.539671,-9.929642,6.931366,-9.114294,6.956859,-9.514366,-5.360883,7.788097,-1.771644,-9.222265,7.578449,-5.902090,-7.434184,5.586071,6.997623,0.010723,6.701172,8.918387,5.183645,2.824867,-8.422916,3.540209,1.031282,-4.273636,2.627238,-9.359435,2.996123,7.428382,3.213433,-5.564886,-2.460340,-3.611516,1.289349,-5.326402,6.026498,-1.244538,-4.359455,2.339676,-6.849915,7.243274,-4.165902,-7.749201,-9.736431,1.241149,-5.786611,-4.386450,-0.652251,6.764035,-4.252253,-2.501443,5.651343,5.773531,-0.603257,6.061730,4.368684,5.117951,-2.768073,8.826494,3.889518,-4.713878,1.319895,-2.126732,3.808886,8.696427,-9.127624,-5.151044,-3.873429,3.213831,-6.370483,3.102175,3.341188,4.612654,4.102940,7.422104,-3.328581,-9.363716,-6.580802,3.393171,-9.772404,-5.414212,-9.039876,-0.051273,-7.124953,-8.572821,3.834805,-7.986448,-3.392049,-6.091422,3.278855,-7.160151,-5.690234,6.116466,5.904528,-5.706888,4.230842,-6.772505,1.207808,9.687576,-1.143858,-0.871425,0.088401,3.905325,7.464977,1.147552,2.197105,-8.007707,3.023263,-3.004742,-9.479836,-7.607548,8.567628,2.155622,-5.177261,7.359269,-8.060365,-5.126299,-1.400422,0.076741,8.929223,-7.942855,-0.752817,-2.279102,-3.707413,1.753052,-6.848563,9.458852,-2.410974,-7.305556,0.188658,-4.249344,-1.056023,8.162104,-2.699209,-4.681908,-5.939220,-2.691223,6.518843,-2.572381,2.056325,-8.592559,4.273468,-6.671423,-6.152177,-0.750588,-6.365233,-9.723114,7.129376,2.264882,-0.583401,-6.278992,4.110976,-4.258058,8.902841,-2.077089,-9.005343,-7.092803,-8.884474,0.235741,-2.932699,-0.323388,-8.452673,3.843279,5.242765,7.703905,-7.613442,-0.660240,-1.276372,-8.686654,3.910604,5.426790,8.318593,7.522609,-7.120250,-7.484764,8.029131,4.768516,3.962227,6.708440,9.782300,4.958257,-2.815437,1.955194,-2.955640,6.635576,6.598110,0.142996,-9.824184,-7.619448,3.670979,2.865701,-8.040121,8.914496,1.296050,-4.261783,6.486395,-0.519052,7.565502,1.757833,8.748853,4.822574,4.909035,6.003203,2.531338,-9.419702,8.298151,5.589993,-6.283027,4.437962,-2.092163,-9.095752,4.398871,2.761927,7.974374,-6.681924,0.318601,6.251699,-2.543281,2.625634,-3.103562,8.877744,5.101227,7.609024,3.572404,-0.224393,-6.265574,1.381124,3.366723,-0.039046,5.181233,-9.563782,-8.668571,8.266161,-0.263110,8.611292,-9.437434,-4.151007,6.259380,0.044421,7.974786,-8.278744,8.335832,3.113447,1.564537,1.805693,3.012461,8.282112,8.779130,-7.225090,7.168363,-1.604740,-0.480260,-5.000546,4.398425,-9.248081,1.668631,-5.011259,9.292484,3.577017,-9.121434,9.384450,-3.328950,9.586548,-5.980384,-8.240318,2.693834,3.768953,2.244986,-6.418239,-1.869609,5.916877,9.166373,-9.583817,-5.435574,3.860327,-2.142909,-7.676923,-2.814175,-0.733809,0.015952,-0.736873,0.517815,3.737349,6.866562,7.070124,-6.884918,3.414795,9.524619,-8.784275,-5.283257,-5.467646,9.897273,5.515881,-0.851226,-2.439155,-7.122611,3.642541,-9.760539,1.160896,-5.790009,9.082976,8.944503,-9.126116,-8.831006,-4.247689,9.872611,1.693439,9.620295,-5.894867,-2.314591,-8.598432,1.295434,5.049900,-0.069517,-8.564927,8.849725,7.276965,-4.824467,4.719502,2.191974,6.967221,-0.735693,4.339768,-1.262207,-7.740403,-0.938592,0.547015,-7.776518,9.024821,2.073775,2.893276,-2.768234,-1.386496,-4.829951,8.296481,3.673933,-7.943158,-2.832313,-6.698811,1.975131,6.347006,8.620883,-5.463742,1.161870,-4.301685,9.205038,-5.135931,-3.234430,-5.407961,-1.954394,-7.310038,8.600066,-7.830530,-4.859188,-9.531996,1.264775,9.915499,-1.788094,-1.607530,-6.493868,4.571245,-0.293735,2.479951,-0.665392,5.811517,5.124223,-5.592790,5.168805,-1.249197,0.890335,5.126264,1.497871,1.845354,-7.731914,6.803793,-8.285181,-4.878625,-1.144058,-5.506661,-2.084571,-8.867289,3.376920,-7.004913,8.555934,5.184096,2.361221,3.107128,2.357686,-8.068371,-4.244149,-2.847880,-9.587902,3.145867,-9.334836,9.430576,4.523744,6.601217,3.731602,5.775646,-5.539040,2.651582,-7.123591,-3.226005,-4.506101,4.010519,5.429608,3.485736,3.108967,-6.878931,-6.768742,-5.550386,7.734830,7.819075,2.628455,7.158528,9.018709,4.690450,3.649723,8.581769,-9.860676,-8.437781,8.050885,-3.798334,-4.870762,-4.234596,-3.875526,3.078102,-1.764001,-7.413717,1.891601,-5.142827,4.452309,-4.733417,5.195020,-6.889208,7.190405,3.736534,-4.534651,6.964608,1.097110,-3.631239,-6.511205,4.813078,-7.528544,-5.456593,-5.613224,-8.208997,-6.826785,-0.845494,-9.363863,6.631773,-5.303143,-4.725010,-2.120366,4.294157,-1.991654,-7.449791,9.826466,2.601099,4.471031,-8.796043,-8.482934,5.544718,5.620217,7.157284,-7.621686,4.390740,8.709077,-2.326805,4.687915,0.384091,1.434624,-4.347589,-4.898805,-5.158377,5.884391,4.244769,4.073878,-8.264608,-9.441420,-7.080237,4.892341,8.187060,-0.227091,-5.286081,-2.228559,7.125125,7.833738,-2.201702,8.996504,-0.119628,8.088623,5.451673,-4.626519,-7.492455,2.238098,-5.055409,-8.428807,7.196134,9.062264,1.303486,-4.295833,8.840023,-3.826554,2.565221,-0.415514,3.812775,6.345932,-4.480909,-8.245632,-1.898345,3.384894,-8.043066,0.929589,-8.362621,-9.281568,-3.640981,-2.253101,-2.607273,7.862518,2.463940,4.409283,-6.611435,4.554723,3.291526,3.819462,4.500507,-8.952354,-5.311824,5.974735,-7.081459,-1.580773,-2.291058,-8.371380,-5.562951,-5.671435,0.100136,-6.763752,-8.768170,-0.448060,4.914189,-0.158894,-0.472470,2.077130,-7.890123,-3.433198,-9.327744,2.895524,3.442542,9.790090,3.646637,1.712726,-3.514425,-0.665742,3.176589,-1.906607,-3.251774,8.989335,0.545993,-2.640516,-7.199231,-7.352587,2.382218,1.938068,8.822301,-7.077382,8.318414,7.538376,8.995233,-1.410745,-7.161194,-4.349336,8.175393,2.693929,-3.228164,-5.016185,-2.919593,7.281543,-7.427817,5.821528,2.242013,1.799145,5.322354,-8.072498,-2.203425,-1.668946,6.835050,-3.642813,-0.653443,0.654765,7.111715,9.925248,-9.496373,7.139996,-9.873540,-3.654897,2.745049,-8.319050,-6.973402,0.785097,3.819067,1.629345,-6.100536,-3.348131,-3.740336,8.030316,2.962962,1.311516,6.053089,2.542104,3.304988,-0.245440,2.749663,-7.942302,8.457062,-5.054230,2.433062,-8.870984,5.304062,-3.631258,-2.635494,2.211339,6.236062,-4.080194,-3.125925,-4.768643,8.439168,-1.006120,1.402556,7.497583,-4.892124,9.990582,5.262029,-3.790671,-5.371695,-3.601502,-5.446539,1.834949,6.916119,9.280430,3.523054,7.438297,-4.428408,8.584540,-8.569972,-6.044466,-9.017220,-1.110279,2.274089,7.032442,-0.043094,9.908698,5.553337,-1.184561,-8.729575,-8.228761,7.498832,-1.689793,4.877269,1.062561,-8.774147,3.563185,5.799562,3.696168,-9.130968,9.610057,-1.926985,0.350640,2.196156,-5.809379,2.683409,3.151277,5.349482,-7.547583,5.279183,-3.384620,-3.427971,-2.497425,-0.670195,-5.023678,-9.993943,4.408528,-4.305719,2.509065,-8.153811,0.980614,-5.099703,-1.059368,7.499226,5.030925,-0.771682,-9.229102,4.340772,-3.784994,-7.702896,-0.621116,-4.252519,-3.896177,-1.176559,-3.169631,8.949781,2.805755,-3.908655,0.917980,-2.217524,-3.704550,9.824228,2.986254,-0.379259,-5.673136,5.485084,5.475403,-5.388677,-9.966573,8.823865,2.287438,2.476917,7.924526,-5.223294,7.750359,6.989705,8.091787,-3.841119,1.239824,-5.819333,-0.214742,-7.304222,-5.055586,9.734081,3.614098], dtype = "float64")#candidate|7006|(2002,)|const|float64
call_7005 = relay.TupleGetItem(func_5793_call(relay.reshape(const_7006.astype('float64'), [11, 13, 14])), 2)
call_7007 = relay.TupleGetItem(func_5796_call(relay.reshape(const_7006.astype('float64'), [11, 13, 14])), 2)
output = relay.Tuple([bop_6991,call_7005,const_7006,])
output2 = relay.Tuple([bop_6991,call_7007,const_7006,])
func_7017 = relay.Function([var_6989,var_6990,], output)
mod['func_7017'] = func_7017
mod = relay.transform.InferType()(mod)
var_7018 = relay.var("var_7018", dtype = "uint32", shape = (6, 1, 13))#candidate|7018|(6, 1, 13)|var|uint32
var_7019 = relay.var("var_7019", dtype = "uint32", shape = (6, 10, 13))#candidate|7019|(6, 10, 13)|var|uint32
output = func_7017(var_7018,var_7019,)
func_7020 = relay.Function([var_7018,var_7019,], output)
mutated_mod['func_7020'] = func_7020
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7144 = relay.const([[[2,1,-6,6,-9],[-7,2,7,-2,-7],[-3,-1,7,5,8],[1,4,7,-9,9],[7,10,-7,-3,5],[6,-10,8,-6,3],[-3,-5,-8,-6,-7],[-6,9,6,-4,-5],[-10,6,7,-7,-9],[8,-9,-8,7,-6],[6,-9,-10,3,3],[-5,-6,-2,7,7],[-2,-7,-9,-9,-6],[3,9,-9,8,-4]],[[-9,-3,-10,-9,6],[2,-2,-8,1,-1],[2,-10,-7,-9,10],[-5,2,5,5,-8],[1,-1,-6,-4,-8],[-5,9,1,-4,-3],[6,5,-8,-2,4],[5,10,8,5,-7],[7,3,-7,3,7],[-10,-4,2,3,6],[-4,3,-7,1,3],[6,10,-9,6,-10],[8,7,-3,5,-5],[-7,3,2,-3,3]],[[9,-7,9,-5,7],[-7,5,8,-6,-8],[-5,-7,-7,8,2],[-3,9,1,5,2],[-3,-9,-6,10,10],[-1,3,1,9,-9],[1,5,3,9,-3],[-1,1,-5,-5,-8],[-5,7,-9,9,10],[-10,-9,10,-2,-9],[9,9,10,-4,1],[1,1,3,8,7],[-9,8,3,-9,4],[-9,-9,-2,4,-5]]], dtype = "int64")#candidate|7144|(3, 14, 5)|const|int64
var_7145 = relay.var("var_7145", dtype = "int64", shape = (3, 14, 5))#candidate|7145|(3, 14, 5)|var|int64
bop_7146 = relay.right_shift(const_7144.astype('int64'), relay.reshape(var_7145.astype('int64'), relay.shape_of(const_7144))) # shape=(3, 14, 5)
bop_7149 = relay.logical_or(bop_7146.astype('bool'), relay.reshape(var_7145.astype('bool'), relay.shape_of(bop_7146))) # shape=(3, 14, 5)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_7152 = relay.TupleGetItem(func_5211_call(), 0)
call_7153 = relay.TupleGetItem(func_5213_call(), 0)
output = relay.Tuple([bop_7149,call_7152,])
output2 = relay.Tuple([bop_7149,call_7153,])
func_7156 = relay.Function([var_7145,], output)
mod['func_7156'] = func_7156
mod = relay.transform.InferType()(mod)
var_7157 = relay.var("var_7157", dtype = "int64", shape = (3, 14, 5))#candidate|7157|(3, 14, 5)|var|int64
output = func_7156(var_7157)
func_7158 = relay.Function([var_7157], output)
mutated_mod['func_7158'] = func_7158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7181 = relay.var("var_7181", dtype = "uint16", shape = (4, 1, 1))#candidate|7181|(4, 1, 1)|var|uint16
var_7182 = relay.var("var_7182", dtype = "uint16", shape = (4, 13, 14))#candidate|7182|(4, 13, 14)|var|uint16
bop_7183 = relay.right_shift(var_7181.astype('uint16'), var_7182.astype('uint16')) # shape=(4, 13, 14)
output = relay.Tuple([bop_7183,])
output2 = relay.Tuple([bop_7183,])
func_7187 = relay.Function([var_7181,var_7182,], output)
mod['func_7187'] = func_7187
mod = relay.transform.InferType()(mod)
mutated_mod['func_7187'] = func_7187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7187_call = mutated_mod.get_global_var('func_7187')
var_7189 = relay.var("var_7189", dtype = "uint16", shape = (4, 1, 1))#candidate|7189|(4, 1, 1)|var|uint16
var_7190 = relay.var("var_7190", dtype = "uint16", shape = (4, 13, 14))#candidate|7190|(4, 13, 14)|var|uint16
call_7188 = func_7187_call(var_7189,var_7190,)
output = call_7188
func_7191 = relay.Function([var_7189,var_7190,], output)
mutated_mod['func_7191'] = func_7191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5708_call = mod.get_global_var('func_5708')
func_5709_call = mutated_mod.get_global_var('func_5709')
call_7235 = func_5708_call()
call_7236 = func_5708_call()
func_397_call = mod.get_global_var('func_397')
func_401_call = mutated_mod.get_global_var('func_401')
const_7245 = relay.const([7,1,-5,9,2,-4,-7,1,-5,-3,2,-10,-7,-2,-5,4,-5,3,8,6,9,2,-5,3,-1,-4,-6,2,9,6,-8,-7,7,-3,-3,6,8,-10,-3,4,-1,7,-7,9,-4,10,-7,-3,7,3,4,4,9,5,-6,8,-1,5,7,-4,10,10,-10,-6,-10,9,-8,4,-6,1,-9,-1,5,6,1,2,-3,1,-7,2,-3,9,-1,-9,1,-1,9,1,-8,-8,7,10,-2,5,5,-9,6,10,-3,8,-8,-6,-1,-3,-4,-7,10,-2,8,4,-7,-4,10,-4,-4,7,-1,9,10,10,2,6,5,-4,7,8,10,-9,-7,-5,3,-3,7,-6,-3,-10,4,-6,-5,-3,10,-8,-5,-3,8,-1,2,-7,5,5,-10,6,-2,-4,-3,-9,2,5,4,8,-8,5,5,10,-5,-2,1,-10,10,-1,-5,-8,-8,2,3,-4,-3,2,2,9,-6,-4,-1,-1,2,-4,2,4,6,-2,8,-9,-6,10,-2,5,2,-6,-6,3,-1,-5,-10,-5,-4,5,-4,4,5,7,-5,-7,2,9,10,-7,9,-6,-8,-5,-9,-4,-5,4,-4,-9,-3,-7,10,4,8,-3,-3,7,-1,4,5,2,8,-3,-6,3,-9,-4,-6,8,-10,-2,1,4,6,-9,-6,10,-8,-8,5,2,10,2,-4,2,5,-7,-5,-6,7,-9,-10,-8,-4,-1,-10,5,-8,-7,-9,-8,-3,1,-4,-7,6,-7,-9,-5,3,-1,10,4,3,2,-10,-8,-3,-1,10,1,5,2,-3,6,4,1,-3,2,8,-10,2,1,9,-6,1,-2,-7,2,-3,8,-6,-9,-5,5,-5,-4,-2,-6,-7,9,2,-4,-8,-9,-5,-8,7,1,10,-7,-2,-4,6,-5,-4,2,-8,5,5,8,-2,-2,-6,2,9,-1,-2,5,-6,-2,-9,-8,-5,2,6,9,-8,6,-3,10,-8,5,7,-8,2,-5,8,-7,-6,-2,-1,-2,-3,-3,-7,-10,-5,6,5,-8,8,8,-9,-9,-6,-1,2,-7,2,-3,4,-5,-8,-4,-5,-10,8,-8,-4,3,-6,6,8,6,3,8,-3,-8,-1,4,5,-8,-3,-9,3,-7,-6,10,-6,3,-6,-9,-1,-9,-1,2,-10,-10,-7,10,-3,-1,-9,5,5,-5,7,9,-2,4,-5,9,7,6,10,-5,4,4,-7,1,4,-3,1,-1,-2,6,1,1,-7,-5,-7,-2,6,-6,-6,7,4,-3,1,8,10,3,1,1,-4,-7,-7,-2,8,10,-7,-3,4,-6,9,2,-9,-1,10,-10,-10,-5,-7,-4,7,8,8,6,5,-10,-7,-4,-9,9,-10,-4,-6,-9,-6,-10,6,10,9,-7,8,-9,-10,-3,1,-8,9,-3,-9,-1,-5,1,-9,7,-8,2,-2,3,5,2,-6,-9,10,-1,4,7,3,3,10,-9,2,6,-2,7,3,-5,8,5], dtype = "uint64")#candidate|7245|(560,)|const|uint64
var_7246 = relay.var("var_7246", dtype = "bool", shape = (512,))#candidate|7246|(512,)|var|bool
call_7244 = relay.TupleGetItem(func_397_call(relay.reshape(const_7245.astype('uint64'), [560,]), relay.reshape(var_7246.astype('bool'), [512,]), ), 2)
call_7247 = relay.TupleGetItem(func_401_call(relay.reshape(const_7245.astype('uint64'), [560,]), relay.reshape(var_7246.astype('bool'), [512,]), ), 2)
func_5297_call = mod.get_global_var('func_5297')
func_5305_call = mutated_mod.get_global_var('func_5305')
var_7258 = relay.var("var_7258", dtype = "int8", shape = (1232,))#candidate|7258|(1232,)|var|int8
const_7259 = relay.const([[7.935582,1.898677,9.988901,-4.608406,-8.160864],[8.933877,1.380330,9.523620,-8.385677,-0.651799],[-7.907504,-1.379004,2.946500,1.110983,-1.374852],[-5.957423,-7.077069,-8.254652,8.863920,-3.141880],[1.270997,-8.271424,1.900198,5.826144,-6.746437],[4.427839,-7.538834,-9.458069,0.032734,-8.203532],[-2.949311,6.439417,-6.798240,-8.322470,1.261101],[1.685404,-5.056827,4.287668,3.357533,-6.418242],[-0.430927,-1.707002,6.924312,-7.893321,-3.808777],[-1.634467,7.378850,-8.772002,1.163079,3.794589],[1.972153,-2.724513,-2.055136,-8.733272,-5.775104],[-5.876208,-3.557798,-6.260067,9.649400,-5.104569],[5.589490,-4.138972,5.422978,-0.818549,3.806043],[3.196946,-2.791583,7.965290,1.202597,-4.424534],[-1.010317,-4.522747,-1.499838,-9.121821,8.741392],[4.096915,2.120840,6.003268,-1.334525,3.169051],[-6.753111,9.194768,-5.048983,0.014230,-9.202323],[-4.977567,-2.720416,1.164299,9.857838,-1.201042],[-8.966733,5.346800,9.413934,-0.759827,-7.487173],[-4.641156,-1.354781,4.043502,-0.386766,-2.845223],[-0.007480,6.664324,5.136909,4.917736,-1.033063],[1.986097,-2.427207,-5.314334,-4.235343,2.288017],[-0.140788,8.894455,8.551631,-0.225979,8.060795],[-7.634679,0.678284,4.968993,-4.337449,9.361792],[-0.167655,-1.786732,1.354708,6.814988,6.768455],[-3.408612,-0.443634,2.306740,-6.753493,7.206909],[-4.605965,6.379768,2.611543,7.916260,-6.546034],[-2.943190,6.488690,4.414931,1.118273,-1.373067],[0.214881,-2.998236,-3.235982,-1.140261,3.071749],[3.718475,2.362390,1.728793,2.962175,4.456753],[0.128055,-9.217167,-6.516821,2.338706,-4.057557],[-5.982380,-4.502495,6.604644,-3.642240,3.038515],[3.196915,-9.798170,-6.856976,3.587528,-2.472488]], dtype = "float64")#candidate|7259|(33, 5)|const|float64
const_7260 = relay.const([[7.706808,-4.093512,-8.095821,0.618647,-5.978903,1.965716],[-3.604988,-4.099900,6.774412,9.940656,4.392916,6.179188],[5.358436,3.899014,2.036030,-1.648487,-3.702806,-7.329925],[7.972285,1.753669,4.258991,9.184710,-0.250615,3.490165],[-0.273407,4.639872,-1.655542,5.935229,5.805628,7.726157],[-1.596908,0.408532,8.777446,6.231247,4.736462,-2.576919],[-1.684878,1.644565,2.343353,-6.157217,2.351387,0.709502],[2.665625,6.210417,-9.268487,7.626570,-2.366160,4.012994],[-5.224307,-1.972576,8.792299,-6.183528,-0.606420,-6.058514],[8.881221,0.230741,-0.589022,-3.750176,7.487142,-9.221167],[-5.444116,6.778197,-6.790333,-0.194641,6.196771,9.260981],[4.088823,-1.239587,4.897687,-4.597914,-5.159528,4.165704],[-8.897590,-1.552244,9.420539,3.795096,-7.910694,-2.299839],[4.551207,5.741335,0.496872,-7.724094,5.516629,9.520718],[6.766912,4.409771,0.308417,8.318856,-4.643653,-6.122010],[-3.587952,3.351552,-1.216933,-8.051132,2.249858,-6.578796],[-2.403380,6.762978,-2.097999,-3.383595,-1.059873,1.592632],[-0.569932,-2.768652,-6.494613,-3.683033,-5.904081,7.526460],[2.321122,8.783244,2.639162,3.382159,-9.591151,5.186670],[8.497837,-4.159530,2.422791,-5.456848,-7.416324,-9.683241],[8.815464,-8.095519,1.682183,-5.013669,5.541367,5.231927],[9.217575,-8.988333,4.999444,-6.345985,3.424224,1.044842],[-1.043409,-8.729486,-3.404826,8.080796,9.283402,2.081502],[7.126496,8.811767,0.928243,-3.888460,5.781354,-8.431154],[-1.392630,-3.277159,-0.853068,7.655249,1.730531,9.304690],[-8.204647,8.368322,-1.026711,-2.635414,-9.848064,-5.455707],[-4.894846,-1.966283,5.516867,0.136588,-3.645246,4.832483],[8.638918,9.372576,-8.386584,-3.490029,-9.674236,-5.364437],[-0.428040,-5.905833,-9.596334,8.015098,4.994001,8.388489],[-4.951998,1.781900,-4.341939,3.937608,0.047853,-3.847025],[-3.617305,-5.182593,-0.528202,2.864937,-9.474325,8.797202],[7.514658,3.046047,-8.394729,0.628591,8.214644,0.478868],[-4.434649,3.168895,-9.791096,9.121838,-1.622203,6.376257],[7.079802,-9.338463,-1.227279,-4.511951,-6.883451,8.378796],[-2.798676,3.690222,3.324130,6.135117,-6.785698,6.902943],[-1.704467,5.747302,-2.423277,8.188989,7.756478,0.184838],[6.990427,9.813838,-4.021003,1.875668,-2.227004,-1.403986],[4.169348,8.750905,4.070658,-0.627026,6.228256,-1.535872],[-8.342618,5.579986,0.100910,-6.269964,5.814985,-1.295152],[-4.253763,-4.975219,0.332542,-5.175412,4.928653,-3.576985],[-8.334185,-8.349230,-1.758836,5.527406,8.340996,-0.389660],[-4.121674,3.274257,6.675743,1.850765,7.275594,-0.647801],[-5.401772,-8.060923,-2.546102,-5.208067,6.325958,-2.482469],[-9.755601,8.165818,9.001494,-0.916247,-7.246810,5.559770],[-5.377297,4.689921,-5.538028,-0.222562,-0.195440,-9.673871],[3.833347,6.827200,-1.835969,-3.780261,7.857190,-9.751914],[4.108054,-7.888400,-0.363095,2.855488,-7.784996,8.605290],[-7.257348,-7.201677,-1.188796,9.771301,4.383191,-6.490128],[7.045817,-6.419760,-4.301310,6.235211,-0.079092,1.447093],[6.795677,4.404661,4.335109,-5.088132,-1.745751,-7.296652],[-8.653835,-4.777094,-6.903621,6.719215,8.938429,6.622585],[-0.177485,4.190393,-8.004392,1.613462,-7.387654,-0.698359],[1.243530,8.774371,7.777506,-1.427175,-3.827070,9.933664],[-0.938083,-6.884090,2.139814,1.263541,-1.911750,-8.609844],[-7.905761,-4.380514,-6.060759,-3.065237,6.320568,5.867113],[-3.840950,-4.606551,-2.761343,3.734779,-2.900367,-7.677862],[4.247726,8.017096,-4.532099,8.839092,-5.346321,1.059803],[-3.882573,-7.449065,-4.169495,-0.478813,-7.747404,4.053871],[-2.858989,3.613058,-8.998621,-3.082595,8.082903,0.581135],[9.163126,-4.111482,-9.482912,-7.995343,-3.987979,-8.916036],[-4.164330,3.029802,-2.956929,9.351716,6.941884,7.623708],[-4.100857,-3.105101,-9.292250,-3.198823,-9.811016,3.599533],[-8.174765,5.815051,-9.645850,6.824279,-8.535133,3.325012],[6.069717,3.614917,8.598999,-3.327197,9.956946,-5.383120],[-3.621131,6.947769,6.163401,0.765141,8.771657,-8.756154],[5.150889,-5.526834,-4.913155,-5.928636,9.873222,0.713102],[-3.152087,-5.678534,-0.809994,8.145637,6.866655,7.761203],[6.379151,8.742083,2.334767,2.688580,3.049909,-2.997981],[9.043901,-7.289778,-7.863982,-3.539901,5.303668,-9.291864],[8.122209,5.440215,3.728553,9.939256,7.374791,1.637007]], dtype = "float64")#candidate|7260|(70, 6)|const|float64
const_7261 = relay.const([-8.278595,-8.417002,-6.590061,-4.432750,-3.764734,-7.755753,-6.556469,7.368088,-9.302609,-4.071551,1.494940,9.761163,-3.651508,8.062924,6.440358,0.483295,-6.938324,2.144933,-5.818289,-3.532448,-7.569618,-3.320136,1.283311,-7.978933,-7.995081,4.895640,0.233238,7.027716,9.471399,5.941469,3.138561,0.099522,-4.014265,1.550615,-2.173972,-7.764994,-0.258577,2.241288,-0.116575,2.765503,4.386527,1.604405,6.712066,-4.236512,7.343364,4.790039,-8.682283,6.023644,-5.167709,8.489625,-0.875898,9.680809,5.486414,-7.985132,2.992319,-1.395674,3.196937,8.825835,-7.043973,1.774057,7.920538,7.358484,0.770779,-2.333885,8.470149,5.568012,9.941750,-1.760333,6.990748,8.478663,-8.446007,2.293156,3.827680,6.651227,6.313389,9.300196,2.295832,-0.548219,3.692509,-7.207271,6.674865,-0.498477,7.784905,8.228668,-0.523543,2.794038,-3.528093,-2.223710,2.166619,-1.453338,-6.434979,9.362421,-9.385042,6.088932,-2.331375,-0.201899,6.016335,4.738936,8.601429,8.971219,8.325423,-0.348458,-9.595937,8.219530,-0.546197,-5.976881,5.439775,6.261628,5.979041,-6.018800,-5.372681,9.252496,5.855050,-3.005386,9.954782,-4.323946,-2.908026,2.407798,4.040023,-8.941069,-9.318822,1.402108,-7.405613,1.402064,6.923433,-0.201648,-2.441364,8.249927,-8.995250,-8.401266,8.035835,-0.121316,8.691059,-6.541877,-1.937463,4.507465,9.823249,-8.130194,7.742227,-6.535982,5.078486,-9.272543,-8.903048,-9.928186,-6.379060,6.389634,6.991016,3.171770,2.896894,-2.505822], dtype = "float32")#candidate|7261|(150,)|const|float32
const_7262 = relay.const([-4,-2,9,-2,-2,-3,-10,-8,-4,-5,6,1,-9,1,1,-10,3,7,-7,-5,5,-5,1,-10,-4,5,-6,-9,-1,2,2,-6,-5,9,1,2,1,1,-1,-8,5,7,10,-8,-8,-2,2,5,8,-1,9,-4,-1,2,-5,-8,-4,4,1,-4,2,-1,-1,-6,-2,9,-2,-2,8,-6,-4,5,-1,1,-3,-3,10,-3,-10,-1,6,4,3,-1,-9,3,-3,-3,-1,8,-1,1,5,-6,3,-9,-9,6,-8,2,4,-1,8,-1,2,3,2,-7,-9,2,-2,8,-4,3,1,-7,3,-2,-6,9,4,-1,7,-3,-1,-6,-8,6,1,3,-5,7,-10,8,-3,2,-1,6,-1,4,-6,6,-7,7,2,-9,8,-8,2,4,4,-5,-9,3,-9,-3,-9,10,-3,-5,-5,-5,-8,-5,8,-8,-7,7,3,7,9,9,-9,6,-6,-9,5,7,-7,-6,2,-5,-8,-5,4,-4,-2,-9,-4,4,-5,-2,-9,4,1,-10,7,-4,-10,7,-10,5,4,4,-10,-7,-3,5,-9,-9,10,-5,-5,-1,7,8,-9,-1,8,10,-4,-5,7,3,1,-8,1,8,-2,2,-7,9,3,8,3,-1,6,-8,-6,-8,-2,5,-10,9,2,-3,2,-4,10,-8,1,-4,3,-7,-2,3,-1,-9,-3,-7,2,5,-2,8,-2,-8,4,-7,3,-6,-1,9,1,-7,8,1,-3,-1,5,8,-8,2,8,10,5,4,-7,8,-3,-2,8,-1,10,-6,3,-6,-10,-2,-8,-10,8,-7,-1,5,-1,-4,-2,1,-7,9,-3,-1,-3,-3,-5,2,-7,8,-7,1,-2,8,-2,-6,-6,-2,-1,-3,-6,-5,-9,4,-7,3,7,-3,-3,-3,-10,7,-5,4,-10,2,3,-8,-4,8,9,7,-9,7,1,-8,-10,-6,2,2,-7,9,-10,4,-1,9,-6,-6,-7,7,-2,9,-10,6,5,3,2,3,2,10,-10,3,-5,10,-1,-2,-4,4,5,5,10,1,-1,-6,2,6,2,7,-8,9,-6,2,-1,-3,10,6,5,2,2,8,-1,-5,4,10,8,1,2,1,2,2,1,10,7,-1,9,4,-4,4,-10,-9,-6,2,4,5,-7,-7,-7,4,10,-5,-5,-10,-10,8,-9,-8,-9,-4,4,-8,8,-1,4,-1,3,5,6,8,10,-6,4,3,-4,6,-8,-1,2,5,9,10,3,9,-1,-5,-2,-7,7,-10,8,-9,10,7,1,-8,8,-10,3,10,6,-4,-8,-7,-2,-8,-2,-1,6,-6,9,-7,4,-10,9,-3,-7,3,10,2,6,-4,-6,1,-2,9,3,-10,5,3,10,-9,3,-2,-2,4,-6,-8,-5,6,-8,-1,-3,5,9,-2,-4,-5,4,1,-4,6,5,-4,-3,-8,-5,9,7,8,3,-6,2,3,9,-10,9,4,-9,4,7,10,-10,10,4,7,7,-4,3,4,3,4,9,-8,6,-10,-6,7,-1,5,-6,-3,-6,-1,-6,10,9,9,-3,8,-9,-2,-9,2,5,-5,2,3,7,-6,1,10,1,9,8,-1,8,-5,2,8,5,-10,5,6,7,5,-7,9,-8,-1,-8,5,-10,4,8,-1,9,-1,-5,6,-8,-2,-8,6,-9,-2,1,-4,10,3,2,-2,-5,5,1,-4,4,7,-6,8,9,-2,-1,-1,6,10,10,-1,6,-7,-9,7,6,7,-4,7,5,4,-8,7,-1,-4,-1,-7,2,4,-6,7,5,-6,-9,4,4,9,5,6,5,8,-4,2,3,-7,7,3,-8,-10,-3,10,-2,-7,-7,4,2,9,-9,2,-5,10,-5,-3,-5,-9,-7,6,-9,6,-8,9,2,-6,9,2,-6,-7,7,-5,2,1,-4,7,-9,-1,-3,7,-10,-6,-2,2,-1,1,8,-2,-10,10,-9,-9,-3,-7,5,-4,8,4,10,-8,-7,-1,-4,9,-6,-10,-7,-5,-3,7,-4,-3,-2,-2,6,-3,8,-10,-9,-6,10,-9,-5,7,5,-6,-8,-3,7,-3,5,8,4,-6,8,7,6,-3,10,-10,8,8,-6,-4,-8,6,7,-9,-1,-1,4,7,3,2,-1,-10,10,-3,-1,-9,-8,-6,-8,-3,9,10,-1,5,6,-7,2,6,-9,6,9,-1,-10,-9,2,-9,-5,4,5,-10,-9,-8,6,2,-4,-7,4,2,-5,-6,5,7,4,6,3,10,4,-10,3,-8,-10,2,3,2,4,-4,-1,9,-4,-7,-2,8,5,8,10,5,-9,6,10,9,-3,-3,5,4,-8,8,-5,7,4,6,-9,6,7,-1,1,10,-2,2,4,1,-4,1,-7,9,-4,-7,-5,3,8,-10,-4,3,-1,7,9,-5,-7,2,7,-5,-6,3,7,5,10,4,-4,-9,-2,-10,4,-5,6,-7,9,-1,6,8,10,1,-9,-3,2,9,10,-8,-9,-7,2,-7,8,8,1,-9,9,2,-3,-4,9,-10,7,5,-2,-10,-8,5,-4,-10,-9,8,7,10,5,6,9,4,5,-1,-4,9,-7,-8,9,10,6,-10,9,4,3,-9,7,6,5,-9,8,2,6,10,7,3,-9,-6,-2,2,10,10,7,1,3,4,10,1,-6,-1,-1,8,-9,8,-5,-1,-4,-6,6,4,7,-5,3,-5,6,-4,2,9,-6,-5,9,-10,6,5,-1,-1,8,9,1,2,2,6,-10,7,4,-9,-7,-8,-2,5,4,6,-4,-3,9,-2,-1,-4,3,-7,3,-2,4,5,2,1,-8,8,-2,-6,-6,1,-7,10,-6,9,-4,2,-10,4,-7,-8,4,6,6,-4,-8,-2,9,7,1,-7,-4,1,-5,5,-3,-6,8,-10,4,1,-10,9,6,-5,9,-10,-10,-6,-9,7,-6,9,-7,-10,-5,-2,-5,4,-6,-6,2,9,-8,-7,8,9,8,-7,6,-7,8,8,2,-5,-5,-3,-7,-9,7,-2,-1,-8,10,8,-3,-9,-4,-6,-10,-5,2,-2,-8,5,-8,-2,-9,-1,-4,-5,4,9,2,4,-6,7,-7,-8,9,-2,-2,5,3,-10,-5,-5,10,8,-9,6,-3,3,9,7,-7,-4,-3,10,-6,-6,-9,1,5,3,-2,-1,-1,5,8,-7,-2,3,1,5,6,-10,2,-6,9,-5,10,5,10,3,-1,10,3,-1,7,-4,5,9,5,8,-9,-4,7,-2,9,-5,-6,-6,-10,-5,-10,1,-3,5,-10,-2,6,-9,7,-9,7,-9,-1,-1,-9,-8,-5,6,-3,-8,6,1,-9,-4,-4,-3,9,3,4,-2,2,3,1,9,-10,7,10,5,-10,4,-4,-6,-6,2,5,-4,-4,-6,4,-8,-2,-2,5,-2,8,9,-2,2,4,-9,-8,5,9,8,9,-10,1,5,-1,10,-2,1,6,3,9,-8,-4,10,8,-7,-4,-8,-10,2,10,1,3,-6,-3,-8,1,-1,2,-6,-9,-5,-1,1,-8,3,7,9,-3,-10,4,-1,5,-9,3,-7], dtype = "uint8")#candidate|7262|(1344,)|const|uint8
call_7257 = relay.TupleGetItem(func_5297_call(relay.reshape(var_7258.astype('int8'), [11, 8, 14]), relay.reshape(var_7258.astype('int8'), [11, 8, 14]), relay.reshape(const_7259.astype('float64'), [165,]), relay.reshape(const_7260.astype('float64'), [1, 420]), relay.reshape(const_7261.astype('float32'), [150,]), relay.reshape(const_7262.astype('uint8'), [1344,]), ), 1)
call_7263 = relay.TupleGetItem(func_5305_call(relay.reshape(var_7258.astype('int8'), [11, 8, 14]), relay.reshape(var_7258.astype('int8'), [11, 8, 14]), relay.reshape(const_7259.astype('float64'), [165,]), relay.reshape(const_7260.astype('float64'), [1, 420]), relay.reshape(const_7261.astype('float32'), [150,]), relay.reshape(const_7262.astype('uint8'), [1344,]), ), 1)
uop_7266 = relay.exp(const_7260.astype('float32')) # shape=(70, 6)
output = relay.Tuple([call_7235,call_7244,const_7245,var_7246,call_7257,var_7258,const_7259,const_7261,const_7262,uop_7266,])
output2 = relay.Tuple([call_7236,call_7247,const_7245,var_7246,call_7263,var_7258,const_7259,const_7261,const_7262,uop_7266,])
func_7272 = relay.Function([var_7246,var_7258,], output)
mod['func_7272'] = func_7272
mod = relay.transform.InferType()(mod)
mutated_mod['func_7272'] = func_7272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7272_call = mutated_mod.get_global_var('func_7272')
var_7274 = relay.var("var_7274", dtype = "bool", shape = (512,))#candidate|7274|(512,)|var|bool
var_7275 = relay.var("var_7275", dtype = "int8", shape = (1232,))#candidate|7275|(1232,)|var|int8
call_7273 = func_7272_call(var_7274,var_7275,)
output = call_7273
func_7276 = relay.Function([var_7274,var_7275,], output)
mutated_mod['func_7276'] = func_7276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6290_call = mod.get_global_var('func_6290')
func_6292_call = mutated_mod.get_global_var('func_6292')
call_7281 = relay.TupleGetItem(func_6290_call(), 0)
call_7282 = relay.TupleGetItem(func_6292_call(), 0)
output = call_7281
output2 = call_7282
func_7295 = relay.Function([], output)
mod['func_7295'] = func_7295
mod = relay.transform.InferType()(mod)
output = func_7295()
func_7296 = relay.Function([], output)
mutated_mod['func_7296'] = func_7296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7373 = relay.var("var_7373", dtype = "float32", shape = (15, 1, 10))#candidate|7373|(15, 1, 10)|var|float32
uop_7374 = relay.log10(var_7373.astype('float32')) # shape=(15, 1, 10)
func_3983_call = mod.get_global_var('func_3983')
func_3985_call = mutated_mod.get_global_var('func_3985')
const_7382 = relay.const([False,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,False,True], dtype = "bool")#candidate|7382|(120,)|const|bool
call_7381 = relay.TupleGetItem(func_3983_call(relay.reshape(const_7382.astype('bool'), [120,])), 2)
call_7383 = relay.TupleGetItem(func_3985_call(relay.reshape(const_7382.astype('bool'), [120,])), 2)
func_5869_call = mod.get_global_var('func_5869')
func_5872_call = mutated_mod.get_global_var('func_5872')
const_7390 = relay.const([2.379192,-4.934822,1.010931,1.576728,6.505191,-3.532933,9.427977,8.101502,-1.602702,-3.497755,3.812034,3.331632,8.778425,3.262355,1.570288,-1.396732,-8.921560,3.143426,-9.665257,-0.670408,2.885765,7.137899,-4.880028,0.388950,-5.922895,6.969617,-9.125770,-0.419876,-3.206531,-1.666350,-6.055519,7.584212,-0.713995,-4.757155,5.996386,-3.550079,8.257021,0.867493,-6.205277,1.042103,-3.445712,8.804021,0.443569,3.300512,1.485359,0.079878,-7.005757,-1.419688,6.028310,8.370216,2.239609,-2.633383,-5.565117,8.668100,-0.667554,0.328368,6.780555,-7.734759,9.050697,-9.247146,1.601333,-9.146158,-7.520834,-8.263536,-7.098252,-7.947828,8.353333,-4.950900,-3.362822,3.527280,-5.151077,-6.932997,4.349356,1.724593,-5.751206,7.712073,0.980291,3.761355,2.761076,-7.071598,0.119132,4.276482,8.538241,-0.306158,4.805035,-3.367533,5.658690,4.644987,3.147921,9.275437,5.662782,-0.238227,-9.714523,-2.458962,7.102991,4.664914,-6.185378,-3.211948,3.813276,5.618200,-6.966808,-7.767413,-8.855948,-0.571319,-8.553152,5.973069,-6.755897,6.992747,1.254568,-3.616280,-9.763696,-9.452918,6.927797,-0.574878,0.088972,6.093361,2.487991,2.725745,-6.159576,-7.062501,2.808169,-4.329227,5.056218,6.687518,3.581558,5.878508,7.675930,-0.714603,-7.133043,1.279569,1.514051,3.388727,5.588810,-5.999584,-8.062862,-2.534395,7.361795,-8.669259,-3.150711,0.087043,9.826057,8.818025,-9.534511,1.885396,-4.011365,1.599999,-8.293972,0.741240,5.583128,5.995752,-2.518004,-9.681175,-1.187775,-0.150177,-7.466562,-2.048660,-1.835184,-3.174046,-1.342943,-8.694034,8.429773,-5.686991,-5.114351,6.166951,1.302123,-9.860740,-9.114501,5.007705,1.269459,-8.304330,-7.245832,2.004072,-5.293525,9.211465,-0.789341,-9.998429,3.480625,2.308717,-2.173584,-4.318331,6.869045,0.871235,1.983683,-5.136188,-4.569727,-0.582497,9.901062,1.558169,9.365569,-8.041715,-0.336433,3.787977], dtype = "float32")#candidate|7390|(192,)|const|float32
const_7391 = relay.const([4.072404,-1.307042,1.115877,2.328076,-8.460393,4.353336,-1.126451,8.242099,8.412715,0.161862,-2.234883,-6.064791,-4.036382,-8.069238,-7.590173,2.243749,7.052058,-3.699083,0.669874,2.127652,5.266209,-5.042730,-3.312112,-7.564261,1.808854,9.239845,8.085386,-8.922472,7.898420,-3.518253,0.756527,-0.308305,9.786258,2.326172,-8.694802,-9.380237,0.049149,4.925629,0.391077,-3.284361,8.553706,-3.557387], dtype = "float64")#candidate|7391|(42,)|const|float64
call_7389 = relay.TupleGetItem(func_5869_call(relay.reshape(const_7390.astype('float32'), [4, 6, 8]), relay.reshape(const_7391.astype('float64'), [7, 6]), ), 1)
call_7392 = relay.TupleGetItem(func_5872_call(relay.reshape(const_7390.astype('float32'), [4, 6, 8]), relay.reshape(const_7391.astype('float64'), [7, 6]), ), 1)
bop_7396 = relay.greater(uop_7374.astype('bool'), relay.reshape(var_7373.astype('bool'), relay.shape_of(uop_7374))) # shape=(15, 1, 10)
uop_7421 = relay.sigmoid(bop_7396.astype('float32')) # shape=(15, 1, 10)
func_754_call = mod.get_global_var('func_754')
func_757_call = mutated_mod.get_global_var('func_757')
var_7432 = relay.var("var_7432", dtype = "float32", shape = (234,))#candidate|7432|(234,)|var|float32
call_7431 = relay.TupleGetItem(func_754_call(relay.reshape(var_7432.astype('float32'), [2, 9, 13]), relay.reshape(uop_7421.astype('float32'), [150,]), ), 3)
call_7433 = relay.TupleGetItem(func_757_call(relay.reshape(var_7432.astype('float32'), [2, 9, 13]), relay.reshape(uop_7421.astype('float32'), [150,]), ), 3)
bop_7437 = relay.logical_and(uop_7421.astype('bool'), relay.reshape(bop_7396.astype('bool'), relay.shape_of(uop_7421))) # shape=(15, 1, 10)
bop_7446 = relay.minimum(uop_7421.astype('uint8'), relay.reshape(bop_7396.astype('uint8'), relay.shape_of(uop_7421))) # shape=(15, 1, 10)
output = relay.Tuple([call_7381,const_7382,call_7389,const_7390,const_7391,call_7431,var_7432,bop_7437,bop_7446,])
output2 = relay.Tuple([call_7383,const_7382,call_7392,const_7390,const_7391,call_7433,var_7432,bop_7437,bop_7446,])
func_7450 = relay.Function([var_7373,var_7432,], output)
mod['func_7450'] = func_7450
mod = relay.transform.InferType()(mod)
mutated_mod['func_7450'] = func_7450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7450_call = mutated_mod.get_global_var('func_7450')
var_7452 = relay.var("var_7452", dtype = "float32", shape = (15, 1, 10))#candidate|7452|(15, 1, 10)|var|float32
var_7453 = relay.var("var_7453", dtype = "float32", shape = (234,))#candidate|7453|(234,)|var|float32
call_7451 = func_7450_call(var_7452,var_7453,)
output = call_7451
func_7454 = relay.Function([var_7452,var_7453,], output)
mutated_mod['func_7454'] = func_7454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_7491 = relay.TupleGetItem(func_5738_call(), 0)
call_7492 = relay.TupleGetItem(func_5740_call(), 0)
uop_7497 = relay.acosh(call_7491.astype('float64')) # shape=(1, 1, 14)
uop_7499 = relay.acosh(call_7492.astype('float64')) # shape=(1, 1, 14)
bop_7512 = relay.logical_xor(uop_7497.astype('int16'), relay.reshape(call_7491.astype('int16'), relay.shape_of(uop_7497))) # shape=(1, 1, 14)
bop_7515 = relay.logical_xor(uop_7499.astype('int16'), relay.reshape(call_7492.astype('int16'), relay.shape_of(uop_7499))) # shape=(1, 1, 14)
output = bop_7512
output2 = bop_7515
func_7516 = relay.Function([], output)
mod['func_7516'] = func_7516
mod = relay.transform.InferType()(mod)
output = func_7516()
func_7517 = relay.Function([], output)
mutated_mod['func_7517'] = func_7517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6450_call = mod.get_global_var('func_6450')
func_6451_call = mutated_mod.get_global_var('func_6451')
call_7534 = relay.TupleGetItem(func_6450_call(), 0)
call_7535 = relay.TupleGetItem(func_6451_call(), 0)
output = relay.Tuple([call_7534,])
output2 = relay.Tuple([call_7535,])
func_7536 = relay.Function([], output)
mod['func_7536'] = func_7536
mod = relay.transform.InferType()(mod)
mutated_mod['func_7536'] = func_7536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7536_call = mutated_mod.get_global_var('func_7536')
call_7537 = func_7536_call()
output = call_7537
func_7538 = relay.Function([], output)
mutated_mod['func_7538'] = func_7538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6290_call = mod.get_global_var('func_6290')
func_6292_call = mutated_mod.get_global_var('func_6292')
call_7623 = relay.TupleGetItem(func_6290_call(), 0)
call_7624 = relay.TupleGetItem(func_6292_call(), 0)
func_281_call = mod.get_global_var('func_281')
func_284_call = mutated_mod.get_global_var('func_284')
const_7632 = relay.const([-8.143219,1.069777,-5.089988,1.103066,-4.286582,3.692194,6.052162,5.089351,-7.164388,-2.995411,7.506620,-0.326121,2.743193,-2.965674,8.140314,-2.841872,-7.923940,-5.583746,-7.719459,1.247416,5.940464,-9.867646,3.724218,-9.961546,9.972583,-7.643724,-6.678476,-9.052821,7.831958,-4.671998,-2.069531,-0.189181,-8.663632,-6.536465,-2.114197,-5.554090,-7.581739,3.351069,-8.043497,4.494625,-4.691028,-3.330842,-3.317757,-1.478474,-7.758571,-9.050376,9.390234,0.904283,-5.273520,5.750226,1.074577,-6.525498,-0.382937,-5.134808,9.238643,-9.140390,2.158920,2.257234,3.496227,3.243411,-3.840338,0.373323,-8.990707,-6.965458,-8.595331,-7.414664,9.581582,1.356905,-1.232001,-1.505028,6.026828,1.625783,5.104541,-9.029884,-7.640742,-4.610145,-1.104646,6.337913,-0.311634,6.624048,2.485814,0.371721,-6.291377,-8.607633,-4.098208,7.032688,6.875124,-0.024911,0.258557,-3.148559,-7.381354,-0.792423,-8.302102,4.298819,1.884675,4.244262,-6.846709,6.579714,4.341554,4.893704,-1.785137,8.495328,5.658379,9.627700,-8.549822,5.391038,-8.732470,9.232621,4.323094,-2.677688,0.061701,5.232515,-5.841591,2.975917,-8.980560,5.141309,3.375623,-3.052906,-7.626314,7.218139,3.547381,3.709355,-6.355309,-8.039233,9.696097,1.737840,-5.774794,3.503424,5.432806,-1.605745,1.108362,1.317567,-7.662694,-3.630690,0.680759,-2.589123,-1.321554,-8.094703,-8.021420,-6.196986,5.402441,9.255479,-1.777740,-5.554967,4.096825,3.448183,-8.095500,7.123984,-0.888690,9.580551], dtype = "float32")#candidate|7632|(150,)|const|float32
call_7631 = relay.TupleGetItem(func_281_call(relay.reshape(const_7632.astype('float32'), [5, 10, 3])), 0)
call_7633 = relay.TupleGetItem(func_284_call(relay.reshape(const_7632.astype('float32'), [5, 10, 3])), 0)
output = relay.Tuple([call_7623,call_7631,const_7632,])
output2 = relay.Tuple([call_7624,call_7633,const_7632,])
func_7651 = relay.Function([], output)
mod['func_7651'] = func_7651
mod = relay.transform.InferType()(mod)
output = func_7651()
func_7652 = relay.Function([], output)
mutated_mod['func_7652'] = func_7652
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7675 = relay.const([[[-4.994066,-2.424490,4.730518,-7.137276,-3.344281,4.550077,8.101182,-5.586847],[4.041026,-1.254519,5.278418,3.593201,-6.294770,-2.027696,9.763636,0.490818],[-0.060955,-2.563973,-0.929497,9.402166,1.727070,-9.863257,8.359626,-1.309710],[5.671742,-7.646231,-9.588822,-2.773371,-5.299782,3.070111,-9.316967,0.565602],[-1.109203,-5.409030,9.699353,5.278861,8.966035,2.008079,-7.113162,1.188384]],[[1.274374,7.412778,9.985141,-1.523613,-5.691762,1.564439,-4.512441,1.139963],[-2.603189,6.496687,8.839290,1.034861,-1.692961,-1.076733,-0.427828,8.910313],[9.804676,4.356646,-1.858523,6.348402,5.046898,4.079413,4.273772,-2.929035],[9.876777,4.396652,3.772682,7.993527,-2.332023,-8.475150,9.429492,-4.583910],[-6.977189,-5.827641,1.640296,3.316505,-8.696067,-2.930005,-1.004752,-7.799409]],[[3.376907,-8.544773,-6.758516,-9.995848,9.575770,6.997165,-4.128585,-5.912233],[-5.967443,7.552086,-8.221455,-0.578954,-1.370154,-7.363256,-9.503026,-1.406919],[8.082515,-6.632821,-8.659402,-7.495539,9.282327,-5.095413,9.955982,4.224560],[0.100766,2.921592,8.658773,1.112407,-9.880314,-2.982553,-0.607617,-5.888324],[-2.520774,7.682997,-0.165321,-5.710788,9.632237,0.054045,6.563387,-6.298920]],[[-3.632679,-3.108111,-3.041794,1.024508,-3.677757,5.554026,-0.967914,-9.645506],[-7.442189,2.222527,9.199388,-8.946573,-3.622736,0.190410,-7.217873,8.818278],[8.936367,6.983681,2.762143,-4.735929,-6.255805,-4.006827,-9.356417,2.338259],[-3.093817,3.444554,0.996014,-7.900134,7.565206,8.133018,-5.506827,-9.793378],[1.164910,3.297246,-6.590221,-3.988468,5.400039,1.208274,7.985475,-5.875663]],[[0.925933,9.682672,1.743066,5.354774,6.455178,1.428079,6.456266,2.206357],[2.376337,4.801165,-1.014079,-8.892942,-6.011597,5.464855,0.622842,4.943904],[8.080501,8.192293,-9.347341,-8.837647,2.905408,0.902502,2.726957,6.703881],[4.928559,9.086779,-8.022156,6.106574,0.787501,-2.429309,-3.559746,-9.025703],[-6.994057,4.009582,-2.857943,-2.801838,7.860392,-9.558028,-6.646800,0.171426]],[[-6.333957,-4.276739,-4.008382,8.532567,-1.569817,-3.632242,0.688831,2.183204],[-3.895728,-3.353908,-3.302337,7.345547,9.323080,-4.703525,2.064607,0.797350],[-9.107666,8.030535,-7.021523,5.455620,-8.278732,7.384385,-1.293332,-3.909059],[6.405809,6.664472,3.134859,3.970790,-4.268510,9.208318,5.477578,2.697313],[-7.352215,5.366763,1.304796,1.961090,-4.076473,2.024706,4.162986,-1.426245]],[[-9.372846,-5.546518,-0.131881,-8.694222,-2.135073,-9.115744,1.533989,5.617619],[-3.346857,-7.341781,3.544271,-3.611091,-5.401299,-7.572603,7.510396,5.637744],[-4.265830,6.944737,7.157892,4.397772,2.528096,-9.950530,8.042240,-4.778497],[-9.146026,1.877793,5.743408,7.666994,4.526390,1.299260,-2.107622,8.032449],[5.001783,8.448397,-9.024827,-9.846274,8.746211,-0.128061,-6.159157,-1.316222]]], dtype = "float32")#candidate|7675|(7, 5, 8)|const|float32
uop_7676 = relay.erf(const_7675.astype('float32')) # shape=(7, 5, 8)
uop_7687 = relay.acosh(uop_7676.astype('float32')) # shape=(7, 5, 8)
output = relay.Tuple([uop_7687,])
output2 = relay.Tuple([uop_7687,])
func_7689 = relay.Function([], output)
mod['func_7689'] = func_7689
mod = relay.transform.InferType()(mod)
output = func_7689()
func_7690 = relay.Function([], output)
mutated_mod['func_7690'] = func_7690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7689_call = mod.get_global_var('func_7689')
func_7690_call = mutated_mod.get_global_var('func_7690')
call_7736 = relay.TupleGetItem(func_7689_call(), 0)
call_7737 = relay.TupleGetItem(func_7690_call(), 0)
var_7743 = relay.var("var_7743", dtype = "float32", shape = (7, 5, 8))#candidate|7743|(7, 5, 8)|var|float32
bop_7744 = relay.maximum(call_7736.astype('uint16'), relay.reshape(var_7743.astype('uint16'), relay.shape_of(call_7736))) # shape=(7, 5, 8)
bop_7747 = relay.maximum(call_7737.astype('uint16'), relay.reshape(var_7743.astype('uint16'), relay.shape_of(call_7737))) # shape=(7, 5, 8)
bop_7751 = relay.greater_equal(call_7736.astype('bool'), relay.reshape(bop_7744.astype('bool'), relay.shape_of(call_7736))) # shape=(7, 5, 8)
bop_7754 = relay.greater_equal(call_7737.astype('bool'), relay.reshape(bop_7747.astype('bool'), relay.shape_of(call_7737))) # shape=(7, 5, 8)
bop_7760 = relay.logical_and(bop_7744.astype('bool'), relay.reshape(call_7736.astype('bool'), relay.shape_of(bop_7744))) # shape=(7, 5, 8)
bop_7763 = relay.logical_and(bop_7747.astype('bool'), relay.reshape(call_7737.astype('bool'), relay.shape_of(bop_7747))) # shape=(7, 5, 8)
output = relay.Tuple([bop_7751,bop_7760,])
output2 = relay.Tuple([bop_7754,bop_7763,])
func_7777 = relay.Function([var_7743,], output)
mod['func_7777'] = func_7777
mod = relay.transform.InferType()(mod)
var_7778 = relay.var("var_7778", dtype = "float32", shape = (7, 5, 8))#candidate|7778|(7, 5, 8)|var|float32
output = func_7777(var_7778)
func_7779 = relay.Function([var_7778], output)
mutated_mod['func_7779'] = func_7779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_7789 = relay.TupleGetItem(func_5738_call(), 0)
call_7790 = relay.TupleGetItem(func_5740_call(), 0)
output = call_7789
output2 = call_7790
func_7818 = relay.Function([], output)
mod['func_7818'] = func_7818
mod = relay.transform.InferType()(mod)
mutated_mod['func_7818'] = func_7818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7818_call = mutated_mod.get_global_var('func_7818')
call_7819 = func_7818_call()
output = call_7819
func_7820 = relay.Function([], output)
mutated_mod['func_7820'] = func_7820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7689_call = mod.get_global_var('func_7689')
func_7690_call = mutated_mod.get_global_var('func_7690')
call_7821 = relay.TupleGetItem(func_7689_call(), 0)
call_7822 = relay.TupleGetItem(func_7690_call(), 0)
output = relay.Tuple([call_7821,])
output2 = relay.Tuple([call_7822,])
func_7829 = relay.Function([], output)
mod['func_7829'] = func_7829
mod = relay.transform.InferType()(mod)
output = func_7829()
func_7830 = relay.Function([], output)
mutated_mod['func_7830'] = func_7830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_7834 = relay.TupleGetItem(func_5211_call(), 0)
call_7835 = relay.TupleGetItem(func_5213_call(), 0)
output = call_7834
output2 = call_7835
func_7866 = relay.Function([], output)
mod['func_7866'] = func_7866
mod = relay.transform.InferType()(mod)
mutated_mod['func_7866'] = func_7866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7866_call = mutated_mod.get_global_var('func_7866')
call_7867 = func_7866_call()
output = call_7867
func_7868 = relay.Function([], output)
mutated_mod['func_7868'] = func_7868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_7877 = relay.TupleGetItem(func_5738_call(), 0)
call_7878 = relay.TupleGetItem(func_5740_call(), 0)
var_7890 = relay.var("var_7890", dtype = "int8", shape = (8, 15, 14))#candidate|7890|(8, 15, 14)|var|int8
bop_7891 = relay.logical_and(call_7877.astype('bool'), var_7890.astype('bool')) # shape=(8, 15, 14)
bop_7894 = relay.logical_and(call_7878.astype('bool'), var_7890.astype('bool')) # shape=(8, 15, 14)
bop_7895 = relay.minimum(var_7890.astype('int16'), relay.reshape(bop_7891.astype('int16'), relay.shape_of(var_7890))) # shape=(8, 15, 14)
bop_7898 = relay.minimum(var_7890.astype('int16'), relay.reshape(bop_7894.astype('int16'), relay.shape_of(var_7890))) # shape=(8, 15, 14)
func_6401_call = mod.get_global_var('func_6401')
func_6404_call = mutated_mod.get_global_var('func_6404')
const_7906 = relay.const([-1,-10,-5,-5,-4,-4,-10,1,2,8,4,-6,-4,-6,10,1,-4,-8,1,9,8,10,-2,3,-7,-4,8,-3,-10,-1,6,4,2,-1,5,-10,-5,3,3,1,-7,-10,-9,-9,10,9,-1,-8,-5,4,10,5,6,5,3,9,3,5,2,10,4,-10,2,-6,6,9,5,1,1,3,2,-4,-3,8,4,9,-5,3,-8,4,-10,-2,-8,-8,-1,-5,-3,9,-9,-3,-4,1,5,7,-4,9,-8,8,-6,-5,5,9,10,-6,-4,1,3,-7,7,-2,-9,-4,-2,10,-7,4,-6,2,10,4,8,1,-1,-10,4,-1,2,9,8,-3,-6,-6,7,-8,-7,10,2,-7,-10,3,-8,7,2,6,-5,4,4,-4,8,-10,8,2,-9,-5,5,-3,4,3,-5,-5,-7,-2,9,-4,9,3,1,-9,4,1,2,2,-5,-4,-5,-1,-10,-5,-8,-5,2,8,5,6,-1,-1,-3,1,-10,-8,-7,-9,-1,-5,1,8,10,-9,-3,-6,-1,7,2,2,6,8,9,10,2,-9,-5,-6,-4,2,9,-2,-5,-4,9,-8,8,-8,-5,-6,-4,-10,3,4,1,5,-1,2,-7,4,4,1,-10,-8,-7,-2,1,-10,7,4,-7,10,7,8,10,-8,-4,8,-9,-8,3,7,-1,-10,10,-6,2,-7,-8,1,-6,4,-1,3,1,6,3,-9,10,-1,-1,9,5,-4,-2,-10,-5,8,7,4,5,1,5,4,-9,-8,-4,-6,3,-1,-5,3,7,6,3,3,1,-9,4,-2,8,3,-4,-10,-7,4,-4,-1,-6,-7,8,8,4,6,1,-10,7,-1,-2,-2,4,10,10,-10,-8,-7,9,-6,5,2,1,2,-7,10,6,10,-5,7,-4,4,-8,-10,8,-1,-1,6,-6,9,1,-5,-3,-6,-9,-6,2,7,-10,-8,-7,9,9,-8,-4,-10,-8,4,2,-10,3,-6,-7,-6,1,5,-2,-4,2,5,10,-2,2,10,6,-5,-7,5,-3,2,6,10,4,8,-7,-5,-10,-5,-5,-6,-8,-9,1,10,-6,8,10,9,-5,1,9,8,2,-2], dtype = "int8")#candidate|7906|(416,)|const|int8
call_7905 = relay.TupleGetItem(func_6401_call(relay.reshape(const_7906.astype('int8'), [4, 8, 13]), relay.reshape(const_7906.astype('int8'), [4, 8, 13]), ), 0)
call_7907 = relay.TupleGetItem(func_6404_call(relay.reshape(const_7906.astype('int8'), [4, 8, 13]), relay.reshape(const_7906.astype('int8'), [4, 8, 13]), ), 0)
uop_7915 = relay.sqrt(call_7877.astype('float32')) # shape=(1, 1, 14)
uop_7917 = relay.sqrt(call_7878.astype('float32')) # shape=(1, 1, 14)
output = relay.Tuple([bop_7895,call_7905,const_7906,uop_7915,])
output2 = relay.Tuple([bop_7898,call_7907,const_7906,uop_7917,])
func_7921 = relay.Function([var_7890,], output)
mod['func_7921'] = func_7921
mod = relay.transform.InferType()(mod)
var_7922 = relay.var("var_7922", dtype = "int8", shape = (8, 15, 14))#candidate|7922|(8, 15, 14)|var|int8
output = func_7921(var_7922)
func_7923 = relay.Function([var_7922], output)
mutated_mod['func_7923'] = func_7923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5464_call = mod.get_global_var('func_5464')
func_5466_call = mutated_mod.get_global_var('func_5466')
call_7967 = func_5464_call()
call_7968 = func_5464_call()
func_5238_call = mod.get_global_var('func_5238')
func_5239_call = mutated_mod.get_global_var('func_5239')
call_7999 = func_5238_call()
call_8000 = func_5238_call()
uop_8016 = relay.erf(call_7999.astype('float32')) # shape=(1, 1, 14)
uop_8018 = relay.erf(call_8000.astype('float32')) # shape=(1, 1, 14)
output = relay.Tuple([call_7967,uop_8016,])
output2 = relay.Tuple([call_7968,uop_8018,])
func_8034 = relay.Function([], output)
mod['func_8034'] = func_8034
mod = relay.transform.InferType()(mod)
mutated_mod['func_8034'] = func_8034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8034_call = mutated_mod.get_global_var('func_8034')
call_8035 = func_8034_call()
output = call_8035
func_8036 = relay.Function([], output)
mutated_mod['func_8036'] = func_8036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6290_call = mod.get_global_var('func_6290')
func_6292_call = mutated_mod.get_global_var('func_6292')
call_8110 = relay.TupleGetItem(func_6290_call(), 0)
call_8111 = relay.TupleGetItem(func_6292_call(), 0)
output = call_8110
output2 = call_8111
func_8126 = relay.Function([], output)
mod['func_8126'] = func_8126
mod = relay.transform.InferType()(mod)
mutated_mod['func_8126'] = func_8126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8126_call = mutated_mod.get_global_var('func_8126')
call_8127 = func_8126_call()
output = call_8127
func_8128 = relay.Function([], output)
mutated_mod['func_8128'] = func_8128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_8156 = relay.TupleGetItem(func_5211_call(), 0)
call_8157 = relay.TupleGetItem(func_5213_call(), 0)
output = relay.Tuple([call_8156,])
output2 = relay.Tuple([call_8157,])
func_8159 = relay.Function([], output)
mod['func_8159'] = func_8159
mod = relay.transform.InferType()(mod)
output = func_8159()
func_8160 = relay.Function([], output)
mutated_mod['func_8160'] = func_8160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5569_call = mod.get_global_var('func_5569')
func_5571_call = mutated_mod.get_global_var('func_5571')
call_8182 = relay.TupleGetItem(func_5569_call(), 0)
call_8183 = relay.TupleGetItem(func_5571_call(), 0)
output = call_8182
output2 = call_8183
func_8192 = relay.Function([], output)
mod['func_8192'] = func_8192
mod = relay.transform.InferType()(mod)
mutated_mod['func_8192'] = func_8192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8192_call = mutated_mod.get_global_var('func_8192')
call_8193 = func_8192_call()
output = call_8193
func_8194 = relay.Function([], output)
mutated_mod['func_8194'] = func_8194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5569_call = mod.get_global_var('func_5569')
func_5571_call = mutated_mod.get_global_var('func_5571')
call_8205 = relay.TupleGetItem(func_5569_call(), 0)
call_8206 = relay.TupleGetItem(func_5571_call(), 0)
output = relay.Tuple([call_8205,])
output2 = relay.Tuple([call_8206,])
func_8209 = relay.Function([], output)
mod['func_8209'] = func_8209
mod = relay.transform.InferType()(mod)
output = func_8209()
func_8210 = relay.Function([], output)
mutated_mod['func_8210'] = func_8210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_8250 = relay.TupleGetItem(func_5211_call(), 0)
call_8251 = relay.TupleGetItem(func_5213_call(), 0)
func_5869_call = mod.get_global_var('func_5869')
func_5872_call = mutated_mod.get_global_var('func_5872')
var_8253 = relay.var("var_8253", dtype = "float32", shape = (192,))#candidate|8253|(192,)|var|float32
var_8254 = relay.var("var_8254", dtype = "float64", shape = (42,))#candidate|8254|(42,)|var|float64
call_8252 = relay.TupleGetItem(func_5869_call(relay.reshape(var_8253.astype('float32'), [4, 6, 8]), relay.reshape(var_8254.astype('float64'), [7, 6]), ), 2)
call_8255 = relay.TupleGetItem(func_5872_call(relay.reshape(var_8253.astype('float32'), [4, 6, 8]), relay.reshape(var_8254.astype('float64'), [7, 6]), ), 2)
func_8126_call = mod.get_global_var('func_8126')
func_8128_call = mutated_mod.get_global_var('func_8128')
call_8259 = func_8126_call()
call_8260 = func_8126_call()
func_6372_call = mod.get_global_var('func_6372')
func_6374_call = mutated_mod.get_global_var('func_6374')
call_8261 = relay.TupleGetItem(func_6372_call(), 1)
call_8262 = relay.TupleGetItem(func_6374_call(), 1)
uop_8270 = relay.exp(call_8252.astype('float64')) # shape=(588,)
uop_8272 = relay.exp(call_8255.astype('float64')) # shape=(588,)
func_5238_call = mod.get_global_var('func_5238')
func_5239_call = mutated_mod.get_global_var('func_5239')
call_8285 = func_5238_call()
call_8286 = func_5238_call()
bop_8287 = relay.less(uop_8270.astype('bool'), call_8261.astype('bool')) # shape=(300, 588)
bop_8290 = relay.less(uop_8272.astype('bool'), call_8262.astype('bool')) # shape=(300, 588)
func_397_call = mod.get_global_var('func_397')
func_401_call = mutated_mod.get_global_var('func_401')
var_8292 = relay.var("var_8292", dtype = "uint64", shape = (560,))#candidate|8292|(560,)|var|uint64
const_8293 = relay.const([True,True,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False], dtype = "bool")#candidate|8293|(512,)|const|bool
call_8291 = relay.TupleGetItem(func_397_call(relay.reshape(var_8292.astype('uint64'), [560,]), relay.reshape(const_8293.astype('bool'), [512,]), ), 1)
call_8294 = relay.TupleGetItem(func_401_call(relay.reshape(var_8292.astype('uint64'), [560,]), relay.reshape(const_8293.astype('bool'), [512,]), ), 1)
func_7829_call = mod.get_global_var('func_7829')
func_7830_call = mutated_mod.get_global_var('func_7830')
call_8298 = relay.TupleGetItem(func_7829_call(), 0)
call_8299 = relay.TupleGetItem(func_7830_call(), 0)
output = relay.Tuple([call_8250,var_8253,var_8254,call_8259,call_8285,bop_8287,call_8291,var_8292,const_8293,call_8298,])
output2 = relay.Tuple([call_8251,var_8253,var_8254,call_8260,call_8286,bop_8290,call_8294,var_8292,const_8293,call_8299,])
func_8317 = relay.Function([var_8253,var_8254,var_8292,], output)
mod['func_8317'] = func_8317
mod = relay.transform.InferType()(mod)
mutated_mod['func_8317'] = func_8317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8317_call = mutated_mod.get_global_var('func_8317')
var_8319 = relay.var("var_8319", dtype = "float32", shape = (192,))#candidate|8319|(192,)|var|float32
var_8320 = relay.var("var_8320", dtype = "float64", shape = (42,))#candidate|8320|(42,)|var|float64
var_8321 = relay.var("var_8321", dtype = "uint64", shape = (560,))#candidate|8321|(560,)|var|uint64
call_8318 = func_8317_call(var_8319,var_8320,var_8321,)
output = call_8318
func_8322 = relay.Function([var_8319,var_8320,var_8321,], output)
mutated_mod['func_8322'] = func_8322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5506_call = mod.get_global_var('func_5506')
func_5507_call = mutated_mod.get_global_var('func_5507')
call_8414 = relay.TupleGetItem(func_5506_call(), 0)
call_8415 = relay.TupleGetItem(func_5507_call(), 0)
output = call_8414
output2 = call_8415
func_8418 = relay.Function([], output)
mod['func_8418'] = func_8418
mod = relay.transform.InferType()(mod)
mutated_mod['func_8418'] = func_8418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8418_call = mutated_mod.get_global_var('func_8418')
call_8419 = func_8418_call()
output = call_8419
func_8420 = relay.Function([], output)
mutated_mod['func_8420'] = func_8420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5708_call = mod.get_global_var('func_5708')
func_5709_call = mutated_mod.get_global_var('func_5709')
call_8462 = func_5708_call()
call_8463 = func_5708_call()
func_7829_call = mod.get_global_var('func_7829')
func_7830_call = mutated_mod.get_global_var('func_7830')
call_8466 = relay.TupleGetItem(func_7829_call(), 0)
call_8467 = relay.TupleGetItem(func_7830_call(), 0)
func_5297_call = mod.get_global_var('func_5297')
func_5305_call = mutated_mod.get_global_var('func_5305')
const_8481 = relay.const([8,-7,-5,-8,1,-9,3,10,-10,1,-9,-5,-5,3,1,-7,-6,-10,9,9,10,-4,-5,6,1,3,-2,1,1,-7,-7,-3,-9,1,3,-8,1,-7,6,-2,-3,-9,5,-4,5,1,6,-3,9,4,6,-6,-6,3,-6,-1,10,-4,1,3,9,-7,10,-3,6,2,1,-10,2,-1,10,7,-3,7,1,1,6,9,10,6,7,-9,-9,-7,4,-9,-9,4,-1,5,3,-4,-6,6,2,1,1,2,-8,-2,5,7,-10,-4,-4,-5,-7,-5,-1,-8,-2,-6,10,4,5,10,-7,-3,-10,10,-8,-10,-3,9,-5,-8,-7,-1,-10,-4,-10,6,3,-6,6,8,2,-8,-2,-8,-3,5,1,-6,-2,-10,7,2,3,5,-8,3,1,-3,-8,2,-9,1,5,-3,-8,-9,-8,4,-1,-1,10,-8,-5,5,-2,-7,8,-3,5,-9,-8,9,1,7,10,2,-4,-4,9,-4,-8,6,-9,8,4,9,6,-9,-9,9,-4,3,9,-7,-7,-3,-2,-3,-7,-2,-6,4,7,7,10,7,-8,2,-10,-8,-1,-3,2,-1,5,-2,4,-3,1,-9,9,-7,-8,4,1,4,5,-3,3,7,-9,1,9,6,-7,3,3,-10,-2,-1,-6,-4,-2,7,-3,5,5,5,1,4,-6,-3,8,2,-8,2,5,7,3,5,10,5,-8,-9,-2,7,1,-7,-3,-10,1,7,8,-5,9,8,-2,5,5,-8,-1,5,7,3,-10,-3,7,-8,3,7,-5,-1,7,-10,-2,-9,5,6,-5,-2,-4,-7,4,-5,9,10,6,-5,-7,-7,-3,-5,8,10,10,8,4,4,-1,6,-10,5,8,-3,5,8,-6,-6,-2,-10,8,-6,-5,2,-9,5,-5,-9,10,-9,-4,5,-8,6,7,2,-8,-10,9,7,2,-7,-4,-1,-8,1,7,-2,7,5,-8,1,-7,6,-5,-4,-7,-8,-9,5,-1,-9,-2,-3,3,-3,7,6,7,10,7,10,6,6,9,3,10,10,7,9,3,2,5,4,1,5,1,-3,5,2,-3,-6,9,4,-9,-7,-4,4,6,-3,-3,5,6,-1,-9,9,-10,-6,-2,8,-3,6,3,-1,8,-5,4,7,10,-5,4,3,-10,6,1,-5,-8,-6,-1,-1,-10,-3,6,6,-1,7,4,9,10,6,-9,10,2,-8,2,3,6,8,-8,-10,-7,4,6,5,-1,1,-2,7,6,6,-5,-2,4,4,6,1,-10,7,10,-6,-5,-1,8,8,3,4,2,10,-5,8,-6,-5,5,4,3,6,-7,-4,5,10,7,-8,1,-5,-2,-8,-5,7,-6,-3,1,9,-6,-4,5,1,-10,-1,8,-7,-2,-9,9,-4,8,-6,-9,-6,7,8,-4,6,-7,-4,6,3,6,2,1,10,5,8,-2,9,-6,3,-5,5,5,-6,9,-8,3,-10,-8,-4,8,-9,8,-8,-6,-6,10,-2,1,8,7,-4,-8,7,-7,-10,-2,-5,-8,7,-6,4,2,-2,4,-4,-8,5,5,1,-4,-6,2,9,6,4,6,-7,4,3,1,-2,6,-4,-1,4,8,2,-1,7,-4,9,-9,-10,6,-4,3,-6,5,-1,-5,-2,4,2,-2,3,10,-7,8,3,-5,3,-4,6,-8,-6,1,-5,-9,-10,-8,10,-7,-8,-6,-1,7,-8,2,10,10,-3,1,6,7,-4,9,2,1,-2,-10,-8,8,7,10,10,-3,-3,-10,-6,-2,-9,-4,-8,-10,4,5,6,7,-5,-3,9,5,2,-8,4,9,-3,-4,-10,3,-4,-5,4,-4,-9,4,-2,-9,-6,-3,8,-4,6,4,-4,-9,7,-9,-6,-10,9,-4,-4,-7,1,-1,-3,2,4,-7,-2,7,10,10,8,-2,3,9,-2,-8,-8,4,5,-3,1,-9,8,-4,-1,-6,-4,7,-8,-7,-5,-3,-5,4,-4,-10,7,-2,5,-3,8,-7,-10,2,-1,6,5,8,-8,-9,-9,9,-8,1,5,-2,-3,-7,-3,1,-9,1,6,-3,4,-9,3,-9,9,6,5,-10,7,1,8,8,-9,-9,-10,1,6,-5,8,-10,5,2,4,-8,9,2,3,3,9,-7,8,-1,8,3,-1,2,1,-5,3,-5,-5,10,-5,10,-8,-2,-6,1,8,-7,-9,6,10,2,-7,8,3,1,-4,3,9,8,-6,-7,-3,5,3,9,-5,9,-9,5,8,2,-9,3,8,-3,-10,-1,7,4,-9,3,7,5,10,8,6,-9,-4,-4,4,9,8,-7,-7,-4,6,-8,9,7,-3,-9,-4,5,1,-2,-7,-8,-10,9,-4,2,10,2,-5,-3,5,-9,-2,-9,-4,-9,2,5,10,1,-8,-5,5,2,-8,8,8,-4,-2,5,-6,4,-10,1,-4,6,-7,2,10,-2,10,-4,7,-1,3,-2,10,6,-6,2,1,-4,10,-8,2,1,-2,-2,-2,-8,9,-1,-8,1,-6,-6,2,5,5,-6,-5,-3,-1,6,8,-6,5,-7,8,9,-10,3,2,-6,3,-8,-7,7,-5,-1,8,1,-9,-6,-4,-1,9,-6,3,-2,4,-5,10,-10,7,-10,-1,8,-9,6,-1,-10,2,3,-10,10,-4,4,6,-9,-5,8,1,-5,4,8,10,-8,-5,-6,6,8,2,4,-8,-3,-3,1,10,-6,9,10,3,-2,8,5,7,-4,9,-8,-2,-10,-3,8,-10,8,10,1,-5,-4,-2,-7,-4,7,-10,8,8,-4,2,-4,10,-2,-9,6,5,-7,8,-7,6,4,8,5,-4,9,-4,-8,7,3,-2,-2,-8,7,4,8,7,5,6,3,2,5,5,8,-3,7,-1,-4,9,-5,-5,-4,-5,-8,-2,8,-1,8,6,5,9,7,-3,7,4,5,-4,-10,10,7,-6,-4,2,2,-9,7,1,6,-7,-5,6,8,1,-1,5,2,5,-10,-1,-4,9,6,7,5,-8,5,-2,-6,-1,5,4,-9,7,-7,2,-7,-5,3,9,-8,-10,-1,-5,9,-5,-6,-4,-10,-4,7,10,-9,1,1,-1,6,-1,8,-7,6,9,-1,-4,-4,-9,4,-9,8,-4,9,-7,9,-6,-6,3,-3,3,-7,-4,-5,2,-4,-4,-10,-3,-4,-5,-10,1,4,-7,6,10,9,4,8,-5,6,7,8,6,10,-6,-4,6,10,-4,5,10,7,8,-10,8,-2,4], dtype = "int8")#candidate|8481|(1232,)|const|int8
const_8482 = relay.const([-8.455284,5.986254,-2.834909,6.667256,0.714781,5.267630,-1.496035,1.596751,3.442420,-4.230353,8.937892,-6.510130,3.280940,9.232927,2.667011,2.962198,-4.741753,1.948358,-5.960122,-6.493149,-4.679528,-0.962495,6.701329,9.310298,4.135156,-0.423361,-6.214402,-5.324857,9.341552,-4.591194,-9.516883,-0.520084,8.954880,-0.439873,-9.008697,5.783068,-8.577092,-2.712760,6.062627,-2.468766,8.202996,8.982145,1.343316,2.756167,-5.067771,0.073740,-6.129651,9.788476,-0.289258,3.372727,-1.621487,9.249854,-2.471068,-9.277918,3.515767,7.570667,0.200550,-7.824681,-7.135615,2.775361,-6.190467,6.763031,8.986780,-1.381699,-1.907345,-4.739238,-0.774184,-3.539309,6.483876,-5.367304,4.258938,-0.504818,6.801850,-4.612612,-1.119976,-9.335753,-5.610085,7.303847,-1.505435,7.621363,-2.928892,8.816203,-4.604768,7.597211,-3.357939,-7.482709,5.042693,-7.286580,-5.554718,-9.389757,-2.184191,9.623695,0.787826,-1.813337,-5.332400,-8.741804,-0.819647,1.416021,9.904954,-8.741833,-0.421543,-5.727031,7.920165,-9.531372,2.868819,1.708340,2.888627,-6.343860,3.132537,-6.760745,3.928556,-8.784392,-0.516423,-1.776407,7.050734,8.399288,3.706582,0.367667,-9.130912,-3.559937,7.208886,-0.481636,-1.346059,0.362881,8.498835,5.020297,-0.478653,-9.313456,2.645077,1.227520,-5.511967,3.480822,-9.600894,-1.876005,-8.862200,-9.359864,-7.890849,3.465219,7.402725,7.314786,-4.108571,7.340624,-3.742356,-7.852007,-3.122199,-7.814399,-6.360369,5.209772,2.957957,-4.532230,-8.954907,5.393165,8.381616,-0.955817,9.199559,4.982293,-6.267949,-6.776952,2.351714,1.525756,-2.577492,-9.616953,9.959702,1.369851,4.525078], dtype = "float64")#candidate|8482|(165,)|const|float64
var_8483 = relay.var("var_8483", dtype = "float64", shape = (1, 420))#candidate|8483|(1, 420)|var|float64
var_8484 = relay.var("var_8484", dtype = "float32", shape = (150,))#candidate|8484|(150,)|var|float32
const_8485 = relay.const([-7,5,-6,-7,-1,2,-9,2,-5,9,9,1,8,-1,5,9,7,-7,10,3,-7,7,-5,3,5,3,-1,8,-8,-4,-3,6,8,2,-9,7,-1,4,-3,-5,-9,2,5,-1,-1,7,-7,-5,-6,3,1,1,-4,7,2,-6,10,-10,8,-9,6,4,-9,-8,-5,2,1,-7,10,10,5,2,-4,4,6,8,1,5,10,-7,-4,-10,-6,-10,2,-8,-8,6,-7,-1,-6,-6,2,7,9,-6,6,-8,6,9,-9,-6,-9,6,-5,-10,-7,-7,2,-10,9,3,-3,-6,-10,6,-3,-4,-9,10,-9,-6,-1,-3,7,1,1,-1,-5,-3,3,-4,-6,-9,-1,10,3,4,10,-4,-3,5,7,8,3,6,-3,-10,-9,3,-10,-9,10,5,-3,7,4,-1,7,2,1,4,8,-4,-3,-6,1,-7,9,10,-3,-9,10,7,-9,5,-6,-5,-3,1,7,2,-1,8,-1,3,9,10,-1,-7,3,-2,3,5,-8,5,-4,-3,5,6,-2,-9,-8,-2,-5,7,5,9,9,-7,10,10,8,-8,7,-9,10,1,9,7,6,-2,-5,10,-6,-1,-8,10,-6,-7,4,-1,-3,4,-10,4,9,7,-8,8,-4,2,-1,6,-5,-10,8,-5,6,3,-2,-1,6,5,-5,-9,1,8,6,-9,6,9,-1,-5,4,2,-6,7,3,5,4,-4,5,-8,6,1,-5,6,-3,-4,8,4,-10,-7,2,8,7,-2,-6,5,-8,-5,-7,10,1,-8,9,-4,-3,-2,2,9,-4,2,-1,-3,3,1,-9,9,-2,-9,-9,10,4,4,-1,-5,-6,-6,-6,-4,-7,9,6,3,5,9,-7,-5,-8,-8,4,4,2,4,9,7,5,-1,3,8,-8,-1,3,-5,-7,-2,8,-8,5,8,-4,-1,2,9,-6,5,-4,-8,-4,-8,7,9,-5,6,3,-8,-3,-5,1,-2,2,10,6,3,-4,-9,10,-6,7,8,10,-6,-5,9,8,2,1,-6,-1,-4,-9,-5,3,5,-5,-1,-1,7,-1,-1,-10,-8,2,-5,-2,-7,4,-1,3,-8,-1,3,-7,5,1,-4,6,9,8,2,-2,1,10,2,8,-2,-8,-8,-9,10,10,8,-10,7,-2,-7,7,-10,-10,10,4,-6,9,5,10,6,3,-7,3,-8,2,-9,3,-7,4,10,1,10,1,-8,3,10,-7,7,-10,5,10,4,3,-4,-1,5,-10,2,2,-4,-5,1,1,4,-4,-7,10,8,3,10,-8,-5,-2,2,8,-9,10,7,-7,-5,7,-5,-3,8,-7,-9,-5,-5,-5,9,5,-6,-7,6,-3,4,7,5,-2,-6,-3,-4,-1,-3,8,-10,9,7,1,1,6,-2,-7,-3,-1,-10,5,-3,4,5,-10,-4,4,-7,5,-1,-5,6,-1,1,-9,10,-4,2,-1,-10,5,1,5,6,-8,-1,-9,3,5,4,2,7,7,3,-8,8,-9,3,-7,-4,-4,-7,3,5,-3,-1,4,-10,9,10,8,-1,7,1,-2,10,-9,9,7,9,2,5,-1,-7,-2,-10,-5,7,4,9,-10,-2,-5,10,-6,4,-2,5,7,4,9,10,-4,9,5,-5,-4,-6,9,-5,-7,-2,9,10,1,5,-7,-5,2,-10,9,-1,-4,4,-3,8,-9,8,-10,-5,-4,1,5,-6,-10,-3,-4,4,3,1,8,-7,2,6,-8,4,-1,-7,3,-3,-10,3,-5,1,-6,6,-2,2,2,9,-9,4,-8,-6,4,3,8,-7,-5,-2,1,-7,-1,-10,-9,5,-1,-5,9,1,1,-9,-2,-3,-7,9,3,2,7,8,-10,-3,1,-4,-1,6,-1,-2,-3,1,2,-7,-6,-10,10,8,-9,3,-8,10,1,1,3,6,-10,6,-7,-8,2,5,-6,-4,-3,-6,-5,10,4,-8,7,-3,-1,3,-9,-10,-9,-3,-7,9,-3,8,-1,3,-2,-2,-7,7,1,-7,-1,1,1,4,-2,-5,-9,-2,3,-8,10,-3,-5,6,-2,-8,9,2,5,7,8,2,-5,10,4,3,7,1,-10,-8,2,-3,7,-3,1,2,2,-9,-2,4,-6,-10,-7,-3,-7,-7,-8,2,-6,-10,2,6,-9,10,-5,-5,-5,2,-5,-9,9,-3,-6,4,9,1,-7,-7,4,-8,-6,-8,10,-3,6,-9,-7,1,1,-7,1,-4,-5,-7,-2,7,-9,-7,6,4,-1,8,9,-1,-7,1,-6,-8,-9,1,-9,-7,5,5,-5,5,4,-4,-5,3,5,1,10,4,4,9,6,-2,-2,-4,8,3,-5,6,1,-5,3,8,5,3,7,-5,-9,-4,3,-10,-7,4,-9,5,10,-6,6,-6,-6,-2,-2,6,1,-4,7,-5,8,-8,10,9,-3,-4,-9,-10,1,5,-9,5,-2,4,3,-4,1,-10,-9,-4,1,1,-8,2,5,3,10,-3,6,-2,9,2,1,-2,8,-1,1,1,-7,1,2,-7,3,-7,-7,10,6,-5,-3,-5,2,1,2,-7,5,-10,-3,1,6,4,6,1,-5,9,5,10,10,3,3,10,7,5,8,5,-6,9,-3,6,-7,6,8,9,7,-1,-1,8,-2,7,1,-4,-1,2,3,3,-2,-10,-5,10,1,4,-2,-10,-5,4,1,6,-1,7,6,-4,9,1,-2,-7,4,-5,-4,-1,-3,7,-5,5,1,1,-10,-10,-6,-4,-3,3,2,4,-2,5,1,9,-6,3,-4,9,-7,4,1,4,-1,-3,-7,-1,3,-6,9,-2,8,4,-8,-8,1,10,10,-8,-3,3,10,-10,-1,9,10,5,-7,-3,-4,-9,3,-9,-5,5,1,-7,4,-6,-4,5,8,-3,2,9,-7,1,2,-6,-8,-5,2,2,1,-3,4,-8,-9,-7,-9,7,9,-7,-9,-7,5,-9,-6,-3,8,-10,5,5,1,6,-10,-5,2,-9,-6,-1,-8,7,9,1,-7,10,-10,-5,8,-2,-6,-9,-10,1,-7,-8,3,1,7,-9,-2,6,5,5,-5,-2,-4,9,-9,2,3,5,7,-9,-7,-9,-9,-2,-6,-8,4,2,-10,5,-1,7,9,1,-7,10,-1,4,-4,6,5,-1,-3,8,1,-3,10,-8,4,-5,-4,-3,-4,6,-3,-7,8,7,8,7,1,-6,1,-10,-5,-6,-9,-3,7,-10,6,9,3,7,3,5,-3,-7,-4,1,-3,10,5,-5,-5,-3,2,4,9,-9,5,-6,-4,5,9,9,3,4,-5,8,-5,2,2,3,9,-4,5,-5,5,6,7,8,7,8,2,-1,-7,-2,-8,2,6,-4,-8,-9,10,-8,3,5,-7,-3,8,-6,6,8,5,-5,-6,2,-7,-6,8,-2,-8,-2,-1,-4,8,6,7,2,-3,-3,-6,-10,5,8,10,8,-8,-2,5,9,-5,-1,-8,4,-10,10,-1,-8,8,4,7,-7,2,5,-7,-3,9,7,-7,-1,-10,-4,3,9,-10,-1,-5,-2,-10,-4,-1,-1], dtype = "uint8")#candidate|8485|(1344,)|const|uint8
call_8480 = relay.TupleGetItem(func_5297_call(relay.reshape(const_8481.astype('int8'), [11, 8, 14]), relay.reshape(const_8481.astype('int8'), [11, 8, 14]), relay.reshape(const_8482.astype('float64'), [165,]), relay.reshape(var_8483.astype('float64'), [1, 420]), relay.reshape(var_8484.astype('float32'), [150,]), relay.reshape(const_8485.astype('uint8'), [1344,]), ), 4)
call_8486 = relay.TupleGetItem(func_5305_call(relay.reshape(const_8481.astype('int8'), [11, 8, 14]), relay.reshape(const_8481.astype('int8'), [11, 8, 14]), relay.reshape(const_8482.astype('float64'), [165,]), relay.reshape(var_8483.astype('float64'), [1, 420]), relay.reshape(var_8484.astype('float32'), [150,]), relay.reshape(const_8485.astype('uint8'), [1344,]), ), 4)
output = relay.Tuple([call_8462,call_8466,call_8480,const_8481,const_8482,var_8483,var_8484,const_8485,])
output2 = relay.Tuple([call_8463,call_8467,call_8486,const_8481,const_8482,var_8483,var_8484,const_8485,])
func_8539 = relay.Function([var_8483,var_8484,], output)
mod['func_8539'] = func_8539
mod = relay.transform.InferType()(mod)
mutated_mod['func_8539'] = func_8539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8539_call = mutated_mod.get_global_var('func_8539')
var_8541 = relay.var("var_8541", dtype = "float64", shape = (1, 420))#candidate|8541|(1, 420)|var|float64
var_8542 = relay.var("var_8542", dtype = "float32", shape = (150,))#candidate|8542|(150,)|var|float32
call_8540 = func_8539_call(var_8541,var_8542,)
output = call_8540
func_8543 = relay.Function([var_8541,var_8542,], output)
mutated_mod['func_8543'] = func_8543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_8581 = relay.TupleGetItem(func_5211_call(), 0)
call_8582 = relay.TupleGetItem(func_5213_call(), 0)
output = call_8581
output2 = call_8582
func_8592 = relay.Function([], output)
mod['func_8592'] = func_8592
mod = relay.transform.InferType()(mod)
output = func_8592()
func_8593 = relay.Function([], output)
mutated_mod['func_8593'] = func_8593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8192_call = mod.get_global_var('func_8192')
func_8194_call = mutated_mod.get_global_var('func_8194')
call_8653 = func_8192_call()
call_8654 = func_8192_call()
var_8659 = relay.var("var_8659", dtype = "float64", shape = (11, 13, 14))#candidate|8659|(11, 13, 14)|var|float64
bop_8660 = relay.right_shift(call_8653.astype('uint16'), relay.reshape(var_8659.astype('uint16'), relay.shape_of(call_8653))) # shape=(11, 13, 14)
bop_8663 = relay.right_shift(call_8654.astype('uint16'), relay.reshape(var_8659.astype('uint16'), relay.shape_of(call_8654))) # shape=(11, 13, 14)
output = bop_8660
output2 = bop_8663
F = relay.Function([var_8659,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8659,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

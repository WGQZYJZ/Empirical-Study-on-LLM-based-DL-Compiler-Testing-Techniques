==========mod==========
#[version = "0.0.5"]
def @func_1327(%var_1300: Tensor[(4, 6, 13), float64]) -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  %0 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %2 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %3 = %2.0;
  %4 = cast(%var_1300, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
  %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%3, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %8 = cast(%3, dtype="float32") /* ty=Tensor[(4, 6, 13), float32] */;
  %9 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %10 = %0.0;
  %11 = %1.0;
  %12 = not_equal(%6, %7) /* ty=Tensor[(4, 6, 13), bool] */;
  %13 = sinh(%8) /* ty=Tensor[(4, 6, 13), float32] */;
  %14 = %9.0;
  (%10, %11, %12, %13, %14)
}

def @func_19909() -> (Tensor[(4, 6, 13), float64],) {
  %15 = @func_4736() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %16 = %15.0;
  (%16,)
}

def @func_2200() -> (Tensor[(4, 6, 13), float64],) {
  %17 = @func_2101() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %18 = %17.2;
  (%18,)
}

def @func_4836() -> (Tensor[(4, 6, 13), bool],) {
  %19 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  (%19,)
}

def @func_3284() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %20 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %21 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %22 = @func_2233() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %23 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %24 = %20.0;
  %25 = %21.0;
  %26 = %22.0;
  %27 = %23.2;
  (%24, %25, %26, %27)
}

def @func_3607() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  %28 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %29 = @func_2486() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %30 = @func_2968() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %31 = %28.2;
  %32 = %29.1;
  %33 = %30.1;
  (%31, %32, %33)
}

def @func_7058() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %34 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %35 = @func_4188() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %36 = %34.1;
  %37 = %35.1;
  (%36, %37)
}

def @func_7574(%var_7566: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), float64],) {
  %38 = cast(%var_7566, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %39 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(16, 3, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %42 = maximum(%40, %41) /* ty=Tensor[(16, 3, 12), float64] */;
  (%42,)
}

def @func_19766() -> (Tensor[(4, 6, 13), float64],) {
  %43 = @func_4944() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %44 = %43.1;
  (%44,)
}

def @func_17091() -> Tensor[(4, 6, 13), float64] {
  %45 = @func_10360() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %45.0
}

def @func_10789() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %46 = @func_5794() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %47 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %48 = %46.0;
  %49 = %47.0;
  %50 = @func_9239() /* ty=Tensor[(4, 6, 13), bool] */;
  (%48, %49, %50)
}

def @func_18433() -> Tensor[(4, 6, 13), bool] {
  @func_3659() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_19978() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  %51 = @func_18549() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %52 = @func_19687() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %53 = %51.1;
  %54 = %52.0;
  (%53, %54)
}

def @func_3789() -> Tensor[(4, 6, 13), bool] {
  @func_3659() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_14003(%var_13981: Tensor[(9, 2, 10), bool], %var_13982: Tensor[(9, 2, 10), bool]) -> Tensor[(9, 2, 10), float64] {
  %55 = cast(%var_13982, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %56 = shape_of(%var_13981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%var_13981, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %59 = logical_or(%57, %58) /* ty=Tensor[(9, 2, 10), bool] */;
  %60 = cast(%59, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %61 = shape_of(%var_13981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%var_13981, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%62, %63) /* ty=Tensor[(9, 2, 10), float64] */
}

def @func_10134() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %64 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %65 = @func_6856() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %66 = %64.1;
  %67 = %65.1;
  (%66, %67)
}

def @func_16701() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %68 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %69 = @func_7845() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %70 = @func_7542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %71 = %68.0;
  %72 = @func_2360() /* ty=Tensor[(4, 6, 13), float64] */;
  %73 = %69.0;
  %74 = %70.2;
  (%71, %72, %73, %74)
}

def @func_1511() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %75 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %76 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %77 = %76.0;
  %78 = cast(%77, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %79 = reshape(%78, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %80 = @func_1327(%79) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %81 = %75.0;
  %82 = %80.0;
  (%81, %77, %82)
}

def @func_5326() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %83 = @func_3015() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %84 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %85 = %83.0;
  %86 = @func_2845() /* ty=Tensor[(4, 6, 13), float64] */;
  %87 = %84.1;
  (%85, %86, %87)
}

def @func_3731(%var_3681: Tensor[(2, 1, 1), uint32], %var_3682: Tensor[(2, 15, 4), uint32], %var_3694: Tensor[(2, 6, 8), uint32], %var_3712: Tensor[(2, 8, 9), uint32]) -> (Tensor[(2, 15, 4), uint32], Tensor[(4, 6, 13), bool], Tensor[(2, 6, 8), float32], Tensor[(4, 6, 13), bool], Tensor[(2, 8, 9), int16], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %88 = cast(%var_3681, dtype="uint32") /* ty=Tensor[(2, 1, 1), uint32] */;
  %89 = cast(%var_3682, dtype="uint32") /* ty=Tensor[(2, 15, 4), uint32] */;
  %90 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %91 = cast(%var_3681, dtype="float32") /* ty=Tensor[(2, 1, 1), float32] */;
  %92 = cast(%var_3694, dtype="float32") /* ty=Tensor[(2, 6, 8), float32] */;
  %93 = cast(%var_3681, dtype="int16") /* ty=Tensor[(2, 1, 1), int16] */;
  %94 = cast(%var_3712, dtype="int16") /* ty=Tensor[(2, 8, 9), int16] */;
  %95 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %96 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %97 = multiply(%88, %89) /* ty=Tensor[(2, 15, 4), uint32] */;
  %98 = %90.1;
  %99 = floor_mod(%91, %92) /* ty=Tensor[(2, 6, 8), float32] */;
  %100 = @func_3564() /* ty=Tensor[(4, 6, 13), bool] */;
  %101 = maximum(%93, %94) /* ty=Tensor[(2, 8, 9), int16] */;
  %102 = @func_3080() /* ty=Tensor[(4, 6, 13), float64] */;
  %103 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  %104 = %95.0;
  %105 = %96.0;
  (%97, %98, %99, %100, %101, %102, %103, %104, %105)
}

def @func_7384(%var_7342: Tensor[(169, 6), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(264), float64], Tensor[(264), float64], Tensor[(169, 6), int16], Tensor[(4, 6, 13), bool]) {
  %106 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %107 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %108 = cast(%var_7342, dtype="float32") /* ty=Tensor[(169, 6), float32] */;
  %109 = reshape(%108, newshape=[13, 6, 13]) /* ty=Tensor[(13, 6, 13), float32] */;
  %110 = @func_5032(%109) /* ty=(Tensor[(13, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(13, 6, 13), bool]) */;
  %111 = cast(meta[relay.Constant][1] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %112 = reshape(%111, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %113 = @func_6417(%112) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) */;
  %114 = cast(%var_7342, dtype="float32") /* ty=Tensor[(169, 6), float32] */;
  %115 = sinh(%114) /* ty=Tensor[(169, 6), float32] */;
  %116 = cast(%115, dtype="float64") /* ty=Tensor[(169, 6), float64] */;
  %117 = log(%116) /* ty=Tensor[(169, 6), float64] */;
  %118 = cast(%var_7342, dtype="int16") /* ty=Tensor[(169, 6), int16] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(2), int32] */;
  %120 = cast(%117, dtype="int16") /* ty=Tensor[(169, 6), int16] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %122 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %123 = %106.1;
  %124 = %107.0;
  %125 = %110.1;
  %126 = %113.2;
  %127 = minimum(%120, %121) /* ty=Tensor[(169, 6), int16] */;
  %128 = %122.0;
  (%123, %124, %125, %126, meta[relay.Constant][1] /* ty=Tensor[(264), float64] */, %127, %128)
}

def @func_18572() -> Tensor[(280, 1), float32] {
  %129 = @func_18325() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(14, 5, 4), bool], Tensor[(280, 1), float32]) */;
  %129.2
}

def @main(%var_20108: Tensor[(5, 2, 8), bool]) -> Tensor[(5, 2, 8), bool] {
  %130 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 2, 8), bool] */, dtype="bool") /* ty=Tensor[(5, 2, 8), bool] */;
  %131 = shape_of(%var_20108, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%var_20108, dtype="bool") /* ty=Tensor[(5, 2, 8), bool] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%132, %133) /* ty=Tensor[(5, 2, 8), bool] */
}

def @func_14942() -> Tensor[(3, 4, 2), float32] {
  @func_11242() /* ty=Tensor[(3, 4, 2), float32] */
}

def @func_17892() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %134 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %135 = @func_15806() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %136 = @func_9191() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %137 = %134.2;
  %138 = %135.0;
  %139 = @func_3564() /* ty=Tensor[(4, 6, 13), bool] */;
  %140 = %136.1;
  (%137, %138, %139, %140)
}

def @func_1259(%var_1245: Tensor[(4, 6, 13), float64]) -> (Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) {
  %141 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %142 = %141.0;
  %143 = cast(%var_1245, dtype="uint16") /* ty=Tensor[(4, 6, 13), uint16] */;
  %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%142, dtype="uint16") /* ty=Tensor[(4, 6, 13), uint16] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %147 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %148 = subtract(%145, %146) /* ty=Tensor[(4, 6, 13), uint16] */;
  %149 = %147.0;
  (%148, %149)
}

def @func_8825(%var_8820: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(540), uint32]) {
  %150 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %151 = cast(%var_8820, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %152 = reshape(%151, newshape=[540]) /* ty=Tensor[(540), uint32] */;
  %153 = @func_7898(%152) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) */;
  %154 = %150.0;
  %155 = %153.0;
  (%154, %155, %var_8820)
}

def @func_8107(%var_8094: Tensor[(7, 5, 16), float32]) -> Tensor[(7, 5, 16), float32] {
  %156 = cast(%var_8094, dtype="float32") /* ty=Tensor[(7, 5, 16), float32] */;
  cos(%156) /* ty=Tensor[(7, 5, 16), float32] */
}

def @func_14446() -> (Tensor[(4, 6, 13), float64],) {
  %157 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %158 = %157.0;
  (%158,)
}

def @func_11009() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %159 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %160 = @func_4277() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %161 = @func_3015() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %162 = %159.1;
  %163 = %160.5;
  %164 = %161.0;
  (%162, %163, %164)
}

def @func_3214(%var_3171: Tensor[(11, 12, 2), float64], %var_3210: Tensor[(11, 12, 2), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32]) {
  %165 = cast(%var_3171, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %166 = @func_2533() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %167 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %168 = cast(%var_3210, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
  %169 = shape_of(%var_3171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%var_3171, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %172 = cos(%165) /* ty=Tensor[(11, 12, 2), float64] */;
  %173 = %166.0;
  %174 = %167.0;
  %175 = mod(%170, %171) /* ty=Tensor[(11, 12, 2), float32] */;
  (%172, %173, %174, %175)
}

def @func_17140() -> Tensor[(4, 6, 13), float64] {
  %176 = @func_7845() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %176.0
}

def @func_7194() -> (Tensor[(4, 6, 13), bool],) {
  %177 = @func_4035() /* ty=Tensor[(4, 6, 13), bool] */;
  (%177,)
}

def @func_4277() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %178 = @func_3632() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %179 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %180 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %181 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %182 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %183 = %178.0;
  %184 = %179.0;
  %185 = @func_4093() /* ty=Tensor[(4, 6, 13), bool] */;
  %186 = %180.0;
  %187 = %181.0;
  %188 = %182.0;
  (%183, %184, %185, %186, %187, %188)
}

def @func_18031() -> (Tensor[(4, 6, 13), float64],) {
  %189 = @func_6206() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %190 = %189.0;
  (%190,)
}

def @func_8050() -> (Tensor[(4, 6, 13), float64],) {
  %191 = @func_1129() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %192 = %191.3;
  (%192,)
}

def @func_11077() -> Tensor[(4, 6, 13), bool] {
  %193 = @func_5326() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %193.2
}

def @func_13407() -> (Tensor[(4, 6, 13), bool], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) {
  %194 = cast(meta[relay.Constant][3] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %195 = reshape(%194, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %196 = @func_6417(%195) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) */;
  %197 = @func_3564() /* ty=Tensor[(4, 6, 13), bool] */;
  %198 = %196.1;
  (%197, %198, meta[relay.Constant][3] /* ty=Tensor[(264), float64] */)
}

def @func_9391() -> (Tensor[(54, 10), uint32],) {
  %199 = @func_7720() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint32], Tensor[(4, 6, 13), bool]) */;
  %200 = %199.2;
  (%200,)
}

def @func_13468() -> (Tensor[(4, 6, 13), bool],) {
  %201 = @func_8076() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %202 = %201.0;
  (%202,)
}

def @func_18474() -> Tensor[(4, 6, 13), bool] {
  %203 = @func_8800() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %203.2
}

def @func_9702() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %204 = @func_4944() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %205 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %206 = %204.1;
  %207 = @func_8668() /* ty=Tensor[(4, 6, 13), float64] */;
  %208 = %205.1;
  (%206, %207, %208)
}

def @func_1649() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %209 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %210 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %211 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %212 = %211.0;
  %213 = cast(%212, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %214 = log(%213) /* ty=Tensor[(4, 6, 13), float64] */;
  %215 = cast(%214, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %216 = %209.0;
  %217 = %210.1;
  %218 = tan(%215) /* ty=Tensor[(4, 6, 13), float64] */;
  (%216, %217, %218)
}

def @func_18252() -> Tensor[(4, 6, 13), float64] {
  %219 = @func_9191() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %219.0
}

def @func_15678(%var_15653: Tensor[(11, 7, 13), float32]) -> (Tensor[(11, 7, 13), float32], Tensor[(11, 7, 13), int32]) {
  %220 = cast(%var_15653, dtype="float32") /* ty=Tensor[(11, 7, 13), float32] */;
  %221 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 7, 13), float32] */, dtype="int32") /* ty=Tensor[(11, 7, 13), int32] */;
  %222 = shape_of(%var_15653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%var_15653, dtype="int32") /* ty=Tensor[(11, 7, 13), int32] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %225 = erf(%220) /* ty=Tensor[(11, 7, 13), float32] */;
  %226 = add(%223, %224) /* ty=Tensor[(11, 7, 13), int32] */;
  (%225, %226)
}

def @func_7898(%var_7896: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) {
  %227 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %228 = cast(%var_7896, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %229 = reshape(%228, newshape=[540]) /* ty=Tensor[(540), uint32] */;
  %230 = @func_5893(%229) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %231 = %227.0;
  %232 = %230.5;
  (%231, %232, %var_7896)
}

def @func_13592(%var_13525: uint16, %var_13543: Tensor[(528), uint8]) -> (Tensor[(8, 1, 6), uint16], Tensor[(12, 4, 11), uint8], Tensor[(528), uint8], Tensor[(4, 6, 13), bool]) {
  %233 = cast(%var_13525, dtype="uint16") /* ty=uint16 */;
  %234 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 1, 6), uint16] */, dtype="uint16") /* ty=Tensor[(8, 1, 6), uint16] */;
  %235 = cast(%var_13543, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %236 = cast(%var_13543, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %237 = reshape(%235, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), uint8] */;
  %238 = reshape(%236, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), uint8] */;
  %239 = @func_7194() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %240 = left_shift(%233, %234) /* ty=Tensor[(8, 1, 6), uint16] */;
  %241 = @func_11392(%237, %238) /* ty=Tensor[(12, 4, 11), uint8] */;
  %242 = %239.0;
  (%240, %241, %var_13543, %242)
}

def @func_2649() -> Tensor[(4, 6, 13), float64] {
  %243 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
  %243.3
}

def @func_7542() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %244 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %245 = @func_1129() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %246 = @func_6780() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %247 = %244.8;
  %248 = %245.1;
  %249 = %246.0;
  (%247, %248, %249)
}

def @func_4722() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %250 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %251 = %250.1;
  %252 = @func_2845() /* ty=Tensor[(4, 6, 13), float64] */;
  (%251, %252)
}

def @func_14246() -> (Tensor[(4, 6, 13), float64],) {
  %253 = @func_13058() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %254 = %253.1;
  (%254,)
}

def @func_11914(%var_11912: Tensor[(486), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], float32, Tensor[(486), float32]) {
  %255 = @func_6977() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %256 = cast(-6.03475f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %257 = cast(%var_11912, dtype="float32") /* ty=Tensor[(486), float32] */;
  %258 = reshape(%256, newshape=[]) /* ty=float32 */;
  %259 = reshape(%257, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float32] */;
  %260 = @func_9875(%258, %259) /* ty=(Tensor[(9, 9, 6), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %261 = %255.0;
  %262 = %260.2;
  (%261, %262, -6.03475f /* ty=float32 */, %var_11912)
}

def @func_19474() -> (Tensor[(784), int8], Tensor[(1001), float32], Tensor[(4, 6, 13), bool], Tensor[(312), float64]) {
  %263 = @func_10923() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), int8]) */;
  %264 = @func_19191() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(11, 7, 13), int32], Tensor[(1001), float32], Tensor[(4, 6, 13), float64]) */;
  %265 = cast(meta[relay.Constant][6] /* ty=Tensor[(312), float64] */, dtype="float64") /* ty=Tensor[(312), float64] */;
  %266 = reshape(%265, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %267 = @func_1259(%266) /* ty=(Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) */;
  %268 = %263.2;
  %269 = %264.4;
  %270 = %267.1;
  (%268, %269, %270, meta[relay.Constant][6] /* ty=Tensor[(312), float64] */)
}

def @func_2486() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  %271 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %272 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %273 = @func_2009() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %274 = %271.0;
  %275 = %272.2;
  %276 = %273.3;
  (%274, %275, %276)
}

def @func_1602() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %277 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %278 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %279 = %277.0;
  %280 = %278.0;
  (%279, %280)
}

def @func_14972() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %281 = @func_9139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %282 = @func_1511() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %283 = %281.2;
  %284 = %282.1;
  (%283, %284)
}

def @func_3867() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %285 = @func_2486() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %286 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %287 = @func_3341() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %288 = %285.1;
  %289 = %286.0;
  %290 = %287.0;
  (%288, %289, %290)
}

def @func_11606() -> Tensor[(6, 14, 8), float32] {
  %291 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 8), float32] */;
  asinh(%291) /* ty=Tensor[(6, 14, 8), float32] */
}

def @func_15222() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) {
  %292 = @func_14104() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %293 = @func_6278() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %294 = @func_8919() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) */;
  %295 = %292.0;
  %296 = %293.2;
  %297 = %294.1;
  (%295, %296, %297)
}

def @func_14386() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %298 = @func_12538() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %299 = @func_12538() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %300 = %298.0;
  %301 = %299.0;
  %302 = @func_9592() /* ty=Tensor[(4, 6, 13), float64] */;
  (%300, %301, %302)
}

def @func_11725() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %303 = @func_11009() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %304 = %303.2;
  %305 = @func_9998() /* ty=Tensor[(4, 6, 13), float64] */;
  (%304, %305)
}

def @func_8668() -> Tensor[(4, 6, 13), float64] {
  %306 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %306.0
}

def @func_16331() -> (Tensor[(4, 6, 13), float64],) {
  %307 = @func_8668() /* ty=Tensor[(4, 6, 13), float64] */;
  (%307,)
}

def @func_12312() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %308 = @func_4909() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %309 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %310 = %308.0;
  %311 = %309.0;
  (%310, %311)
}

def @func_12531() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %312 = @func_6278() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %313 = %312.1;
  %314 = @func_5382() /* ty=Tensor[(4, 6, 13), float64] */;
  (%313, %314)
}

def @func_13712() -> Tensor[(4, 6, 13), float64] {
  @func_6232() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_17715(%var_17709: uint16) -> (Tensor[(10, 2, 11), bool],) {
  %315 = cast(%var_17709, dtype="bool") /* ty=bool */;
  %316 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 2, 11), uint16] */, dtype="bool") /* ty=Tensor[(10, 2, 11), bool] */;
  %317 = less_equal(%315, %316) /* ty=Tensor[(10, 2, 11), bool] */;
  (%317,)
}

def @func_6506() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %318 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %320 = reshape(%319, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %321 = @func_1327(%320) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %322 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  %323 = %321.1;
  (%322, %318, %323)
}

def @func_14723() -> (Tensor[(4, 6, 13), bool],) {
  %324 = @func_8857() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %325 = %324.1;
  (%325,)
}

def @func_5794() -> (Tensor[(4, 6, 13), bool],) {
  %326 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %327 = %326.0;
  (%327,)
}

def @func_18865() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %328 = @func_10360() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %329 = %328.0;
  %330 = @func_6232() /* ty=Tensor[(4, 6, 13), float64] */;
  (%329, %330)
}

def @func_6527(%var_6522: Tensor[(3, 12, 4), uint32]) -> Tensor[(3, 12, 4), bool] {
  %331 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 12, 4), uint32] */, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %332 = shape_of(%var_6522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_6522, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%333, %334) /* ty=Tensor[(3, 12, 4), bool] */
}

def @func_8891() -> Tensor[(4, 6, 13), float64] {
  @func_1925() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_5183() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %335 = @func_3341() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %336 = %335.1;
  %337 = @func_4116() /* ty=Tensor[(4, 6, 13), float64] */;
  (%336, %337)
}

def @func_13144(%var_13125: Tensor[(784), int8]) -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(8, 98), int64]) {
  %338 = @func_8016() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %339 = @func_4277() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %340 = cast(%var_13125, dtype="int8") /* ty=Tensor[(784), int8] */;
  %341 = reshape(%340, newshape=[8, 98]) /* ty=Tensor[(8, 98), int8] */;
  %342 = @func_11589(%341) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(8, 98), int8]) */;
  %343 = %342.3;
  %344 = cast(%var_13125, dtype="bool") /* ty=Tensor[(784), bool] */;
  %345 = shape_of(%343, dtype="int32") /* ty=Tensor[(2), int32] */;
  %346 = cast(%343, dtype="bool") /* ty=Tensor[(8, 98), bool] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %348 = less_equal(%346, %347) /* ty=Tensor[(8, 98), bool] */;
  %349 = cast(%348, dtype="int64") /* ty=Tensor[(8, 98), int64] */;
  %350 = shape_of(%343, dtype="int32") /* ty=Tensor[(2), int32] */;
  %351 = cast(%343, dtype="int64") /* ty=Tensor[(8, 98), int64] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %353 = %338.0;
  %354 = %339.1;
  %355 = minimum(%351, %352) /* ty=Tensor[(8, 98), int64] */;
  (%353, %354, %355)
}

def @func_6810() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %356 = @func_3341() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %357 = @func_6104() /* ty=Tensor[(4, 6, 13), float64] */;
  %358 = %356.1;
  (%357, %358)
}

def @func_8076() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %359 = @func_4850() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %360 = @func_1649() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %361 = %359.1;
  %362 = %360.2;
  (%361, %362)
}

def @func_15555() -> (Tensor[(4, 6, 13), bool],) {
  %363 = @func_5794() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %364 = %363.0;
  (%364,)
}

def @func_19191() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(11, 7, 13), int32], Tensor[(1001), float32], Tensor[(4, 6, 13), float64]) {
  %365 = @func_9191() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %366 = cast(meta[relay.Constant][10] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %367 = reshape(%366, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), float32] */;
  %368 = @func_15678(%367) /* ty=(Tensor[(11, 7, 13), float32], Tensor[(11, 7, 13), int32]) */;
  %369 = @func_10299() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %370 = %365.0;
  %371 = @func_18252() /* ty=Tensor[(4, 6, 13), float64] */;
  %372 = @func_9827() /* ty=Tensor[(4, 6, 13), bool] */;
  %373 = %368.1;
  %374 = %369.2;
  (%370, %371, %372, %373, meta[relay.Constant][10] /* ty=Tensor[(1001), float32] */, %374)
}

def @func_11870() -> (Tensor[(4, 6, 13), float64],) {
  %375 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %376 = %375.1;
  (%376,)
}

def @func_6780() -> (Tensor[(4, 6, 13), float64],) {
  %377 = @func_6587() /* ty=Tensor[(4, 6, 13), float64] */;
  (%377,)
}

def @func_1888() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
  %378 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %379 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %380 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %381 = %378.0;
  %382 = %379.0;
  %383 = %380.0;
  (%381, %382, %383)
}

def @func_16085(%var_16080: Tensor[(784), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(784), int8], Tensor[(4, 6, 13), float64]) {
  %384 = @func_9702() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %385 = cast(%var_16080, dtype="int8") /* ty=Tensor[(784), int8] */;
  %386 = reshape(%385, newshape=[2, 392]) /* ty=Tensor[(2, 392), int8] */;
  %387 = @func_15471(%386) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 98), int8], Tensor[(2, 392), int8]) */;
  %388 = @func_12378() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %389 = %384.1;
  %390 = %387.0;
  %391 = %388.0;
  (%389, %390, %var_16080, %391)
}

def @func_7445() -> (Tensor[(4, 6, 13), float64],) {
  %392 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %393 = %392.1;
  (%393,)
}

def @func_20071() -> (Tensor[(4, 6, 13), float64], Tensor[(14, 13, 8), float32], float32, Tensor[(1, 1456), float32]) {
  %394 = cast(-7.6238f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %395 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 1456), float32] */, dtype="float32") /* ty=Tensor[(1, 1456), float32] */;
  %396 = reshape(%394, newshape=[]) /* ty=float32 */;
  %397 = reshape(%395, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), float32] */;
  %398 = @func_14517() /* ty=Tensor[(4, 6, 13), float64] */;
  %399 = @func_11485(%396, %397) /* ty=Tensor[(14, 13, 8), float32] */;
  (%398, %399, -7.6238f /* ty=float32 */, meta[relay.Constant][11] /* ty=Tensor[(1, 1456), float32] */)
}

def @func_6715() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %400 = @func_4481() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %401 = @func_2360() /* ty=Tensor[(4, 6, 13), float64] */;
  %402 = @func_2649() /* ty=Tensor[(4, 6, 13), float64] */;
  %403 = %400.2;
  (%401, %402, %403)
}

def @func_14761() -> (Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) {
  %404 = @func_5183() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %405 = cast(meta[relay.Constant][12] /* ty=Tensor[(1890), float32] */, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %406 = reshape(%405, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), float32] */;
  %407 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %408 = %404.0;
  %409 = @func_13100(%406) /* ty=Tensor[(9, 14, 15), float32] */;
  %410 = %407.0;
  (%408, %409, meta[relay.Constant][12] /* ty=Tensor[(1890), float32] */, %410)
}

def @func_3632() -> (Tensor[(4, 6, 13), bool],) {
  %411 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %412 = %411.0;
  (%412,)
}

def @func_6104() -> Tensor[(4, 6, 13), float64] {
  %413 = @func_1129() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %413.3
}

def @func_19644() -> (Tensor[(4, 6, 13), float64],) {
  %414 = @func_1649() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %415 = %414.2;
  (%415,)
}

def @func_3449(%var_3387: Tensor[(6, 44), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(6, 44), uint32]) {
  %416 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %417 = @func_1511() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %418 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
  %419 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %420 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %421 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %422 = cast(%var_3387, dtype="float64") /* ty=Tensor[(6, 44), float64] */;
  %423 = sin(%422) /* ty=Tensor[(6, 44), float64] */;
  %424 = cast(%var_3387, dtype="float64") /* ty=Tensor[(6, 44), float64] */;
  %425 = cast(%var_3387, dtype="float64") /* ty=Tensor[(6, 44), float64] */;
  %426 = reshape(%424, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %427 = reshape(%425, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %428 = @func_3214(%426, %427) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32]) */;
  %429 = %428.3;
  %430 = cast(%429, dtype="uint32") /* ty=Tensor[(11, 12, 2), uint32] */;
  %431 = shape_of(%423, dtype="int32") /* ty=Tensor[(2), int32] */;
  %432 = cast(%423, dtype="uint32") /* ty=Tensor[(6, 44), uint32] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %434 = %416.0;
  %435 = %417.0;
  %436 = %418.3;
  %437 = %419.0;
  %438 = %420.0;
  %439 = %421.0;
  %440 = left_shift(%432, %433) /* ty=Tensor[(6, 44), uint32] */;
  (%434, %435, %436, %437, %438, %439, %440)
}

def @func_11218() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %441 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %442 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
  %443 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
  %444 = %441.0;
  %445 = %442.0;
  (%443, %444, %445)
}

def @func_9239() -> Tensor[(4, 6, 13), bool] {
  %446 = @func_5120() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %446.0
}

def @func_15613() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %447 = @func_12800() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %448 = @func_2845() /* ty=Tensor[(4, 6, 13), float64] */;
  %449 = @func_9288() /* ty=Tensor[(4, 6, 13), bool] */;
  %450 = %447.1;
  (%448, %449, %450)
}

def @func_11770() -> (Tensor[(4, 6, 13), bool],) {
  %451 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %452 = %451.6;
  (%452,)
}

def @func_3671() -> (Tensor[(4, 6, 13), bool],) {
  %453 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %454 = %453.1;
  (%454,)
}

def @func_2018() -> (Tensor[(4, 6, 13), bool],) {
  %455 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %456 = %455.1;
  (%456,)
}

def @func_17551() -> (Tensor[(4, 6, 13), float64], Tensor[(3, 11, 2), bool]) {
  %457 = @func_4722() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %458 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %459 = acosh(%458) /* ty=Tensor[(3, 11, 2), float64] */;
  %460 = cast(%459, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %461 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(3, 11, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 11, 2), float64] */, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %464 = %457.0;
  %465 = less_equal(%462, %463) /* ty=Tensor[(3, 11, 2), bool] */;
  (%464, %465)
}

def @func_8459() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %466 = @func_3341() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %467 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %468 = %466.1;
  %469 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  %470 = %467.1;
  (%468, %469, %470)
}

def @func_853() -> (Tensor[(4, 6, 13), bool],) {
  %471 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %472 = %471.0;
  %473 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %474 = %473.0;
  %475 = cast(%474, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
  %476 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%472, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = logical_and(%477, %478) /* ty=Tensor[(4, 6, 13), bool] */;
  (%479,)
}

def @func_4188() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %480 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %481 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %482 = %480.0;
  %483 = %481.0;
  (%482, %483)
}

def @func_6035(%var_6012: Tensor[(525), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(7, 15, 5), bool], Tensor[(525), uint32], Tensor[(4, 6, 13), bool]) {
  %484 = cast(%var_6012, dtype="uint32") /* ty=Tensor[(525), uint32] */;
  %485 = reshape(%484, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %486 = @func_5694(%485) /* ty=(Tensor[(7, 15, 5), bool],) */;
  %487 = @func_4494() /* ty=Tensor[(4, 6, 13), bool] */;
  %488 = cast(%487, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %489 = reshape(%488, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %490 = @func_1327(%489) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %491 = %486.0;
  %492 = %490.2;
  (%487, %491, %var_6012, %492)
}

def @func_13328() -> Tensor[(4, 6, 13), float64] {
  @func_11259() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_10894() -> (Tensor[(4, 6, 13), float64],) {
  %493 = @func_8668() /* ty=Tensor[(4, 6, 13), float64] */;
  (%493,)
}

def @func_2295() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %494 = @func_2233() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %495 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %496 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %497 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %498 = %494.0;
  %499 = %495.0;
  %500 = %496.0;
  %501 = %497.0;
  (%498, %499, %500, %501)
}

def @func_5717() -> (Tensor[(4, 6, 13), bool],) {
  %502 = @func_5114() /* ty=Tensor[(4, 6, 13), bool] */;
  (%502,)
}

def @func_19062() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %503 = @func_12378() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %504 = @func_18913() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %505 = @func_5183() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %506 = %503.1;
  %507 = %504.1;
  %508 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  %509 = %505.1;
  (%506, %507, %508, %509)
}

def @func_6566(%var_6535: Tensor[(16, 5, 2), float32], %var_6543: Tensor[(16, 5, 2), float32]) -> (Tensor[(16, 5, 2), bool], Tensor[(4, 6, 13), float32]) {
  %510 = cast(%var_6535, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
  %511 = acos(%510) /* ty=Tensor[(16, 5, 2), float32] */;
  %512 = cast(%var_6543, dtype="bool") /* ty=Tensor[(16, 5, 2), bool] */;
  %513 = shape_of(%511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %514 = cast(%511, dtype="bool") /* ty=Tensor[(16, 5, 2), bool] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %516 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %517 = equal(%514, %515) /* ty=Tensor[(16, 5, 2), bool] */;
  %518 = %516.2;
  (%517, %518)
}

def @func_18913() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %519 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %520 = %519.0;
  %521 = @func_13328() /* ty=Tensor[(4, 6, 13), float64] */;
  (%520, %521)
}

def @func_3080() -> Tensor[(4, 6, 13), float64] {
  %522 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %522.0
}

def @func_7948() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %523 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %524 = @func_4093() /* ty=Tensor[(4, 6, 13), bool] */;
  %525 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  %526 = %523.1;
  (%524, %525, %526)
}

def @func_10337() -> (Tensor[(4, 6, 13), float64],) {
  %527 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %528 = %527.1;
  (%528,)
}

def @func_12674() -> Tensor[(4, 6, 13), bool] {
  %529 = @func_10789() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %529.0
}

def @func_967() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %530 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %531 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %532 = %530.0;
  %533 = %531.0;
  (%532, %533)
}

def @func_15127(%var_15077: float64) -> (Tensor[(1, 7, 15), float32], Tensor[(4, 6, 13), bool], Tensor[(9, 6, 10), uint32], Tensor[(540), uint32], Tensor[(4, 6, 13), float64]) {
  %534 = cast(%var_15077, dtype="float64") /* ty=float64 */;
  %535 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 7, 15), float64] */, dtype="float64") /* ty=Tensor[(1, 7, 15), float64] */;
  %536 = multiply(%534, %535) /* ty=Tensor[(1, 7, 15), float64] */;
  %537 = cast(%536, dtype="float32") /* ty=Tensor[(1, 7, 15), float32] */;
  %538 = @func_4850() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %539 = cast(meta[relay.Constant][15] /* ty=Tensor[(540), uint32] */, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %540 = cast(meta[relay.Constant][15] /* ty=Tensor[(540), uint32] */, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %541 = reshape(%539, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %542 = reshape(%540, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %543 = @func_3937(%541, %542) /* ty=(Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %544 = cast(meta[relay.Constant][15] /* ty=Tensor[(540), uint32] */, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %545 = reshape(%544, newshape=[540]) /* ty=Tensor[(540), uint32] */;
  %546 = @func_7898(%545) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) */;
  %547 = acos(%537) /* ty=Tensor[(1, 7, 15), float32] */;
  %548 = %538.1;
  %549 = %543.0;
  %550 = %546.1;
  (%547, %548, %549, meta[relay.Constant][15] /* ty=Tensor[(540), uint32] */, %550)
}

def @func_2131() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %551 = @func_2009() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %552 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
  %553 = %551.2;
  (%552, %553)
}

def @func_8016() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) {
  %554 = @func_4046() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %555 = @func_4774() /* ty=Tensor[(4, 6, 13), float32] */;
  %556 = %554.0;
  (%555, %556)
}

def @func_5694(%var_5688: Tensor[(7, 15, 5), uint32]) -> (Tensor[(7, 15, 5), bool],) {
  %557 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 15, 5), uint32] */, dtype="bool") /* ty=Tensor[(7, 15, 5), bool] */;
  %558 = shape_of(%var_5688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%var_5688, dtype="bool") /* ty=Tensor[(7, 15, 5), bool] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %561 = equal(%559, %560) /* ty=Tensor[(7, 15, 5), bool] */;
  (%561,)
}

def @func_1402() -> (Tensor[(4, 6, 13), float64],) {
  %562 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %563 = %562.0;
  %564 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %565 = %564.1;
  %566 = cast(%565, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %567 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(%563, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %570 = floor_divide(%568, %569) /* ty=Tensor[(4, 6, 13), float64] */;
  (%570,)
}

def @func_11589(%var_11586: Tensor[(8, 98), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(8, 98), int8]) {
  %571 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %572 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %573 = cast(%var_11586, dtype="int8") /* ty=Tensor[(8, 98), int8] */;
  %574 = cast(%var_11586, dtype="int8") /* ty=Tensor[(8, 98), int8] */;
  %575 = reshape(%573, newshape=[784]) /* ty=Tensor[(784), int8] */;
  %576 = reshape(%574, newshape=[784]) /* ty=Tensor[(784), int8] */;
  %577 = @func_11363(%575, %576) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), float64]) */;
  %578 = %571.0;
  %579 = %572.0;
  %580 = %577.1;
  (%578, %579, %580, %var_11586)
}

def @func_12378() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %581 = @func_2200() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %582 = %581.0;
  %583 = @func_1925() /* ty=Tensor[(4, 6, 13), float64] */;
  (%582, %583)
}

def @func_1564() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) {
  %584 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %585 = %584.0;
  %586 = cast(%585, dtype="float32") /* ty=Tensor[(4, 6, 13), float32] */;
  %587 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %588 = acosh(%586) /* ty=Tensor[(4, 6, 13), float32] */;
  %589 = %587.1;
  (%588, %589)
}

def @func_11392(%var_11386: Tensor[(12, 4, 11), uint8], %var_11387: Tensor[(12, 4, 11), uint8]) -> Tensor[(12, 4, 11), uint8] {
  %590 = cast(%var_11387, dtype="uint8") /* ty=Tensor[(12, 4, 11), uint8] */;
  %591 = shape_of(%var_11386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%var_11386, dtype="uint8") /* ty=Tensor[(12, 4, 11), uint8] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%592, %593) /* ty=Tensor[(12, 4, 11), uint8] */
}

def @func_9745() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %594 = @func_7635() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %595 = @func_7058() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %596 = @func_4850() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %597 = %594.0;
  %598 = %595.0;
  %599 = %596.1;
  (%597, %598, %599)
}

def @func_17072() -> (Tensor[(4, 6, 13), bool],) {
  %600 = @func_10789() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %601 = %600.0;
  (%601,)
}

def @func_11259() -> Tensor[(4, 6, 13), float64] {
  %602 = @func_4736() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %602.0
}

def @func_5120() -> (Tensor[(4, 6, 13), bool],) {
  %603 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %604 = %603.0;
  (%604,)
}

def @func_7774() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %605 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %606 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %607 = %605.0;
  %608 = @func_3564() /* ty=Tensor[(4, 6, 13), bool] */;
  %609 = %606.0;
  (%607, %608, %609)
}

def @func_11102() -> (Tensor[(4, 6, 13), float64],) {
  %610 = @func_7058() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %611 = %610.0;
  (%611,)
}

def @func_18713() -> Tensor[(4, 6, 13), float64] {
  %612 = @func_9745() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %612.1
}

def @func_4680() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %613 = @func_4644() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %614 = %613.0;
  %615 = @func_1925() /* ty=Tensor[(4, 6, 13), float64] */;
  (%614, %615)
}

def @func_16971() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %616 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %617 = @func_12343() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %618 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %619 = %616.2;
  %620 = %617.1;
  %621 = %618.0;
  (%619, %620, %621)
}

def @func_6206() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
  %622 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %623 = %622.0;
  %624 = @func_4774() /* ty=Tensor[(4, 6, 13), float32] */;
  (%623, %624)
}

def @func_11485(%var_11446: float32, %var_11447: Tensor[(14, 13, 8), float32]) -> Tensor[(14, 13, 8), float32] {
  %625 = cast(%var_11446, dtype="float32") /* ty=float32 */;
  %626 = cast(%var_11447, dtype="float32") /* ty=Tensor[(14, 13, 8), float32] */;
  power(%625, %626) /* ty=Tensor[(14, 13, 8), float32] */
}

def @func_10164(%var_10155: Tensor[(486), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(486), bool]) {
  %627 = @func_7542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %628 = cast(9.2227f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %629 = cast(%var_10155, dtype="float32") /* ty=Tensor[(486), float32] */;
  %630 = reshape(%628, newshape=[]) /* ty=float32 */;
  %631 = reshape(%629, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float32] */;
  %632 = @func_9875(%630, %631) /* ty=(Tensor[(9, 9, 6), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %633 = @func_2009() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %634 = cast(%var_10155, dtype="bool") /* ty=Tensor[(486), bool] */;
  %635 = cast(9.2227f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %636 = %627.0;
  %637 = %632.1;
  %638 = %633.1;
  %639 = greater(%634, %635) /* ty=Tensor[(486), bool] */;
  (%636, %637, %638, %639)
}

def @func_12902() -> Tensor[(4, 6, 13), float64] {
  @func_2170() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_4944() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %640 = @func_4046() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %641 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
  %642 = %640.0;
  %643 = %641.1;
  (%642, %643)
}

def @func_8800() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %644 = @func_8016() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %645 = @func_7845() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %646 = @func_6856() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %647 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %648 = %644.1;
  %649 = %645.0;
  %650 = %646.1;
  %651 = %647.1;
  (%648, %649, %650, %651)
}

def @func_18829() -> (Tensor[(4, 6, 13), float64],) {
  %652 = @func_10337() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %653 = %652.0;
  (%653,)
}

def @func_11637(%var_11616: uint32) -> (Tensor[(2, 3, 13), uint32], Tensor[(4, 6, 13), bool], Tensor[(1080), float64]) {
  %654 = cast(%var_11616, dtype="uint32") /* ty=uint32 */;
  %655 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 3, 13), uint32] */, dtype="uint32") /* ty=Tensor[(2, 3, 13), uint32] */;
  %656 = cast(%var_11616, dtype="float64") /* ty=float64 */;
  %657 = cast(meta[relay.Constant][18] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %658 = reshape(%656, newshape=[]) /* ty=float64 */;
  %659 = reshape(%657, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), float64] */;
  %660 = @func_7260(%658, %659) /* ty=(Tensor[(12, 10, 9), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %661 = add(%654, %655) /* ty=Tensor[(2, 3, 13), uint32] */;
  %662 = %660.4;
  (%661, %662, meta[relay.Constant][18] /* ty=Tensor[(1080), float64] */)
}

def @func_7260(%var_7200: float64, %var_7201: Tensor[(12, 10, 9), float64]) -> (Tensor[(12, 10, 9), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %663 = cast(%var_7200, dtype="bool") /* ty=bool */;
  %664 = cast(%var_7201, dtype="bool") /* ty=Tensor[(12, 10, 9), bool] */;
  %665 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %666 = @func_5257() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %667 = @func_4188() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %668 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %669 = greater(%663, %664) /* ty=Tensor[(12, 10, 9), bool] */;
  %670 = %665.0;
  %671 = %666.1;
  %672 = %667.0;
  %673 = %668.0;
  (%669, %670, %671, %672, %673)
}

def @func_10518() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %674 = @func_7635() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %675 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  %676 = %674.0;
  (%675, %676)
}

def @func_16725() -> Tensor[(4, 6, 13), float64] {
  %677 = @func_9745() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %677.1
}

def @func_12269() -> Tensor[(4, 6, 13), float64] {
  %678 = @func_10518() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %678.0
}

def @func_10936() -> Tensor[(4, 6, 13), float64] {
  %679 = @func_7445() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %679.0
}

def @func_2845() -> Tensor[(4, 6, 13), float64] {
  @func_2052() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_4850() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %680 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %681 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %682 = %680.2;
  %683 = %681.0;
  (%682, %683)
}

def @func_18766() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(7, 15, 5), bool], Tensor[(5, 105), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %684 = @func_14972() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %685 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 105), uint32] */, dtype="uint32") /* ty=Tensor[(5, 105), uint32] */;
  %686 = reshape(%685, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %687 = @func_5694(%686) /* ty=(Tensor[(7, 15, 5), bool],) */;
  %688 = @func_2295() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %689 = @func_6715() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %690 = @func_12269() /* ty=Tensor[(4, 6, 13), float64] */;
  %691 = %684.0;
  %692 = %687.0;
  %693 = %688.0;
  %694 = %689.0;
  (%690, %691, %692, meta[relay.Constant][19] /* ty=Tensor[(5, 105), uint32] */, %693, %694)
}

def @func_18282() -> (Tensor[(4, 6, 13), float64],) {
  %695 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %696 = %695.0;
  (%696,)
}

def @func_10923() -> (Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), int8]) {
  %697 = cast(meta[relay.Constant][20] /* ty=Tensor[(784), int8] */, dtype="int8") /* ty=Tensor[(784), int8] */;
  %698 = cast(meta[relay.Constant][20] /* ty=Tensor[(784), int8] */, dtype="int8") /* ty=Tensor[(784), int8] */;
  %699 = reshape(%697, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
  %700 = reshape(%698, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
  %701 = @func_5573(%699, %700) /* ty=(Tensor[(8, 7, 14), int64],) */;
  %702 = @func_8891() /* ty=Tensor[(4, 6, 13), float64] */;
  %703 = %701.0;
  (%702, %703, meta[relay.Constant][20] /* ty=Tensor[(784), int8] */)
}

def @func_11363(%var_11323: Tensor[(784), int8], %var_11352: Tensor[(784), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), float64]) {
  %704 = @func_7635() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %705 = cast(%var_11323, dtype="int8") /* ty=Tensor[(784), int8] */;
  %706 = cast(%var_11323, dtype="int8") /* ty=Tensor[(784), int8] */;
  %707 = reshape(%705, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
  %708 = reshape(%706, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
  %709 = @func_5573(%707, %708) /* ty=(Tensor[(8, 7, 14), int64],) */;
  %710 = cast(%var_11352, dtype="float64") /* ty=Tensor[(784), float64] */;
  %711 = shape_of(%var_11323, dtype="int32") /* ty=Tensor[(1), int32] */;
  %712 = cast(%var_11323, dtype="float64") /* ty=Tensor[(784), float64] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?), float64] */;
  %714 = %704.0;
  %715 = %709.0;
  %716 = floor_divide(%712, %713) /* ty=Tensor[(784), float64] */;
  (%714, %715, %716)
}

def @func_18549() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %717 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %718 = @func_12269() /* ty=Tensor[(4, 6, 13), float64] */;
  %719 = cast(%718, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %720 = reshape(%719, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %721 = @func_1259(%720) /* ty=(Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) */;
  %722 = @func_18252() /* ty=Tensor[(4, 6, 13), float64] */;
  %723 = %717.1;
  %724 = @func_5382() /* ty=Tensor[(4, 6, 13), float64] */;
  %725 = %721.1;
  (%722, %723, %724, %718, %725)
}

def @func_2233() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %726 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %727 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %728 = %726.0;
  %729 = %727.0;
  (%728, %729)
}

def @func_17651(%var_17618: Tensor[(576, 1), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(576, ?), bool]) {
  %730 = @func_5183() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %731 = cast(%var_17618, dtype="float64") /* ty=Tensor[(576, 1), float64] */;
  %732 = reshape(%731, newshape=[16, 3, 12]) /* ty=Tensor[(16, 3, 12), float64] */;
  %733 = @func_7574(%732) /* ty=(Tensor[(16, 3, 12), float64],) */;
  %734 = %733.0;
  %735 = cast(%734, dtype="bool") /* ty=Tensor[(16, 3, 12), bool] */;
  %736 = shape_of(%var_17618, dtype="int32") /* ty=Tensor[(2), int32] */;
  %737 = cast(%var_17618, dtype="bool") /* ty=Tensor[(576, 1), bool] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %739 = %730.1;
  %740 = logical_or(%737, %738) /* ty=Tensor[(576, ?), bool] */;
  (%739, %740)
}

def @func_10360() -> (Tensor[(4, 6, 13), float64],) {
  %741 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %742 = %741.0;
  (%742,)
}

def @func_12022() -> (Tensor[(4, 6, 13), bool],) {
  %743 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %744 = %743.0;
  (%744,)
}

def @func_19832() -> (Tensor[(4, 6, 13), bool],) {
  %745 = @func_14761() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) */;
  %746 = %745.3;
  (%746,)
}

def @func_4139() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %747 = @func_3867() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %748 = %747.0;
  %749 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 6, 13), float32] */, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %750 = shape_of(%748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%748, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %753 = @func_2233() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %754 = mod(%751, %752) /* ty=Tensor[(4, 6, 13), float64] */;
  %755 = %753.0;
  (%754, %755)
}

def @func_13368() -> (Tensor[(4, 6, 13), bool],) {
  %756 = @func_4836() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %757 = %756.0;
  (%757,)
}

def @func_14708() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %758 = @func_6856() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %759 = %758.0;
  %760 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  (%759, %760)
}

def @func_839() -> (Tensor[(4, 6, 13), float64],) {
  %761 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %762 = exp(%761) /* ty=Tensor[(4, 6, 13), float64] */;
  (%762,)
}

def @func_8919() -> (Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) {
  %763 = @func_4944() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %764 = @func_7720() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint32], Tensor[(4, 6, 13), bool]) */;
  %765 = %763.0;
  %766 = %764.2;
  (%765, %766)
}

def @func_15895() -> Tensor[(4, 6, 13), float64] {
  @func_9998() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_18693() -> (Tensor[(4, 6, 13), bool], Tensor[(1890), float32]) {
  %767 = @func_14761() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) */;
  %768 = @func_12674() /* ty=Tensor[(4, 6, 13), bool] */;
  %769 = %767.2;
  (%768, %769)
}

def @func_4035() -> Tensor[(4, 6, 13), bool] {
  %770 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %770.0
}

def @func_10568() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %771 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %772 = @func_7635() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %773 = %771.0;
  %774 = %772.0;
  (%773, %774)
}

def @func_9922() -> Tensor[(4, 6, 13), float64] {
  %775 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %775.0
}

def @func_19115() -> (Tensor[(4, 6, 13), float64],) {
  %776 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  (%776,)
}

def @func_18325() -> (Tensor[(4, 6, 13), bool], Tensor[(14, 5, 4), bool], Tensor[(280, 1), float32]) {
  %777 = @func_7058() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %778 = cast(meta[relay.Constant][23] /* ty=Tensor[(280, 1), int8] */, dtype="int8") /* ty=Tensor[(280, 1), int8] */;
  %779 = reshape(%778, newshape=[14, 5, 4]) /* ty=Tensor[(14, 5, 4), int8] */;
  %780 = @func_11664(%779) /* ty=(Tensor[(14, 5, 4), bool],) */;
  %781 = cast(meta[relay.Constant][23] /* ty=Tensor[(280, 1), int8] */, dtype="float32") /* ty=Tensor[(280, 1), float32] */;
  %782 = %777.1;
  %783 = %780.0;
  %784 = asin(%781) /* ty=Tensor[(280, 1), float32] */;
  (%782, %783, %784)
}

def @func_16865() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], float32, Tensor[(486), float32]) {
  %785 = @func_10337() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %786 = @func_15244() /* ty=(Tensor[(4, 6, 13), float32],) */;
  %787 = cast(meta[relay.Constant][24] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %788 = reshape(%787, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %789 = @func_11914(%788) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], float32, Tensor[(486), float32]) */;
  %790 = %785.0;
  %791 = %786.0;
  %792 = %789.2;
  (%790, %791, %792, meta[relay.Constant][24] /* ty=Tensor[(486), float32] */)
}

def @func_1415() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
  %793 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %794 = @func_1129() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %795 = %793.0;
  %796 = %794.0;
  (%795, %796)
}

def @func_3341() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %797 = @func_1649() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %798 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %799 = %797.0;
  %800 = %798.0;
  (%799, %800)
}

def @func_17820() -> (Tensor[(4, 6, 13), float64],) {
  %801 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
  (%801,)
}

def @func_16513() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %802 = @func_9998() /* ty=Tensor[(4, 6, 13), float64] */;
  %803 = @func_13328() /* ty=Tensor[(4, 6, 13), float64] */;
  (%802, %803)
}

def @func_1426() -> (Tensor[(4, 6, 13), float64],) {
  %804 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %805 = %804.0;
  (%805,)
}

def @func_7635() -> (Tensor[(4, 6, 13), float64],) {
  %806 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
  (%806,)
}

def @func_1704() -> (Tensor[(4, 6, 13), bool],) {
  %807 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %808 = %807.0;
  %809 = cast(%808, dtype="float32") /* ty=Tensor[(4, 6, 13), float32] */;
  %810 = sin(%809) /* ty=Tensor[(4, 6, 13), float32] */;
  %811 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %812 = %811.1;
  %813 = cast(%812, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
  %814 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%810, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %817 = equal(%815, %816) /* ty=Tensor[(4, 6, 13), bool] */;
  (%817,)
}

def @func_2542() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %818 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %819 = %818.1;
  %820 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
  (%819, %820)
}

def @func_5483(%var_5462: Tensor[(11, 6, 5), float32]) -> (Tensor[(11, 6, 5), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
  %821 = cast(%var_5462, dtype="float32") /* ty=Tensor[(11, 6, 5), float32] */;
  %822 = @func_4644() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %823 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %824 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %825 = acos(%821) /* ty=Tensor[(11, 6, 5), float32] */;
  %826 = %822.0;
  %827 = %823.0;
  %828 = @func_5382() /* ty=Tensor[(4, 6, 13), float64] */;
  %829 = %824.0;
  (%825, %826, %827, %828, %829)
}

def @func_15980() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %830 = @func_6856() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %831 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %832 = @func_10518() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %833 = %830.0;
  %834 = %831.2;
  %835 = %832.0;
  (%833, %834, %835)
}

def @func_12658(%var_12636: Tensor[(2, 10, 3), float64], %var_12637: Tensor[(2, 10, 3), float64]) -> (Tensor[(4, 6, 13), float32], Tensor[(2, 10, 3), float32], Tensor[(2, 10, 3), float32]) {
  %836 = @func_8016() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %837 = cast(%var_12637, dtype="float64") /* ty=Tensor[(2, 10, 3), float64] */;
  %838 = shape_of(%var_12636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%var_12636, dtype="float64") /* ty=Tensor[(2, 10, 3), float64] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %841 = divide(%839, %840) /* ty=Tensor[(2, 10, 3), float64] */;
  %842 = cast(%841, dtype="float32") /* ty=Tensor[(2, 10, 3), float32] */;
  %843 = sin(%842) /* ty=Tensor[(2, 10, 3), float32] */;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(2, 10, 3), float32] */;
  %845 = cast(%843, dtype="float32") /* ty=Tensor[(2, 10, 3), float32] */;
  %846 = %836.0;
  %847 = log(%844) /* ty=Tensor[(2, 10, 3), float32] */;
  %848 = asin(%845) /* ty=Tensor[(2, 10, 3), float32] */;
  (%846, %847, %848)
}

def @func_18942() -> (Tensor[(4, 6, 13), bool],) {
  %849 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %850 = %849.0;
  (%850,)
}

def @func_13100(%var_13094: Tensor[(9, 14, 15), float32]) -> Tensor[(9, 14, 15), float32] {
  %851 = cast(%var_13094, dtype="float32") /* ty=Tensor[(9, 14, 15), float32] */;
  tan(%851) /* ty=Tensor[(9, 14, 15), float32] */
}

def @func_19353() -> Tensor[(4, 6, 13), float32] {
  %852 = @func_10299() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %852.1
}

def @func_1129() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %853 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %854 = %853.0;
  %855 = cast(%854, dtype="float32") /* ty=Tensor[(4, 6, 13), float32] */;
  %856 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %857 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %858 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %859 = asin(%855) /* ty=Tensor[(4, 6, 13), float32] */;
  %860 = %856.1;
  %861 = %857.0;
  %862 = %858.0;
  (%859, %860, %861, %862)
}

def @func_16598() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %863 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %864 = @func_14761() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) */;
  %865 = %863.0;
  %866 = %864.3;
  (%865, %866)
}

def @func_5347() -> Tensor[(4, 6, 13), float64] {
  %867 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %867.0
}

def @func_19284(%var_19255: Tensor[(2, 5, 12), uint64], %var_19256: Tensor[(2, 5, 12), uint64]) -> (Tensor[(2, 5, 12), bool], Tensor[(4, 6, 13), float64], Tensor[(280, 1), float32]) {
  %868 = cast(%var_19256, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %869 = shape_of(%var_19255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%var_19255, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %872 = less_equal(%870, %871) /* ty=Tensor[(2, 5, 12), bool] */;
  %873 = @func_10936() /* ty=Tensor[(4, 6, 13), float64] */;
  %874 = @func_18572() /* ty=Tensor[(280, 1), float32] */;
  (%872, %873, %874)
}

def @func_14640() -> Tensor[(4, 6, 13), bool] {
  %875 = @func_2968() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %875.0
}

def @func_5573(%var_5558: Tensor[(8, 7, 14), int8], %var_5562: Tensor[(8, 7, 14), int8]) -> (Tensor[(8, 7, 14), int64],) {
  %876 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 1, 14), int8] */, dtype="int8") /* ty=Tensor[(8, 1, 14), int8] */;
  %877 = cast(%var_5558, dtype="int8") /* ty=Tensor[(8, 7, 14), int8] */;
  %878 = bitwise_and(%876, %877) /* ty=Tensor[(8, 7, 14), int8] */;
  %879 = cast(%var_5562, dtype="int64") /* ty=Tensor[(8, 7, 14), int64] */;
  %880 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%878, dtype="int64") /* ty=Tensor[(8, 7, 14), int64] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %883 = right_shift(%881, %882) /* ty=Tensor[(8, 7, 14), int64] */;
  (%883,)
}

def @func_8568() -> Tensor[(4, 6, 13), float64] {
  %884 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %884.0
}

def @func_13245() -> (Tensor[(4, 6, 13), bool],) {
  %885 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  (%885,)
}

def @func_18656() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %886 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %887 = @func_14386() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %888 = %886.0;
  %889 = %887.1;
  (%888, %889)
}

def @func_5893(%var_5817: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %890 = @func_3284() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %891 = cast(%var_5817, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %892 = cast(%var_5817, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %893 = reshape(%891, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %894 = reshape(%892, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %895 = @func_3937(%893, %894) /* ty=(Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %896 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %897 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %898 = %890.2;
  %899 = %895.1;
  %900 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
  %901 = %896.1;
  %902 = @func_4116() /* ty=Tensor[(4, 6, 13), float64] */;
  %903 = %897.1;
  (%898, %899, %var_5817, %900, %901, %902, %903)
}

def @func_9076(%var_9020: Tensor[(4, 196), int8], %var_9026: Tensor[(4, 196), float64], %var_9030: Tensor[(4, 196), int8], %var_9069: Tensor[(4, 196), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(4, 196), int64], Tensor[(4, 6, 13), float64], Tensor[(4, 196), bool]) {
  %904 = @func_3607() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %905 = cast(%var_9020, dtype="int8") /* ty=Tensor[(4, 196), int8] */;
  %906 = cast(%var_9020, dtype="int8") /* ty=Tensor[(4, 196), int8] */;
  %907 = reshape(%905, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
  %908 = reshape(%906, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
  %909 = @func_5573(%907, %908) /* ty=(Tensor[(8, 7, 14), int64],) */;
  %910 = cast(%var_9030, dtype="uint8") /* ty=Tensor[(4, 196), uint8] */;
  %911 = shape_of(%var_9020, dtype="int32") /* ty=Tensor[(2), int32] */;
  %912 = cast(%var_9020, dtype="uint8") /* ty=Tensor[(4, 196), uint8] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %914 = bitwise_or(%912, %913) /* ty=Tensor[(4, 196), uint8] */;
  %915 = cast(%914, dtype="int64") /* ty=Tensor[(4, 196), int64] */;
  %916 = shape_of(%var_9030, dtype="int32") /* ty=Tensor[(2), int32] */;
  %917 = cast(%var_9030, dtype="int64") /* ty=Tensor[(4, 196), int64] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %919 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %920 = cast(%var_9020, dtype="float64") /* ty=Tensor[(4, 196), float64] */;
  %921 = acosh(%920) /* ty=Tensor[(4, 196), float64] */;
  %922 = cast(%var_9026, dtype="float64") /* ty=Tensor[(4, 196), float64] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(2), int32] */;
  %924 = cast(%921, dtype="float64") /* ty=Tensor[(4, 196), float64] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %926 = floor_divide(%924, %925) /* ty=Tensor[(4, 196), float64] */;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(4, 196), float64] */;
  %928 = atan(%927) /* ty=Tensor[(4, 196), float64] */;
  %929 = cast(%var_9069, dtype="bool") /* ty=Tensor[(4, 196), bool] */;
  %930 = shape_of(%928, dtype="int32") /* ty=Tensor[(2), int32] */;
  %931 = cast(%928, dtype="bool") /* ty=Tensor[(4, 196), bool] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %933 = %904.2;
  %934 = %909.0;
  %935 = maximum(%917, %918) /* ty=Tensor[(4, 196), int64] */;
  %936 = %919.0;
  %937 = logical_or(%931, %932) /* ty=Tensor[(4, 196), bool] */;
  (%933, %934, %935, %936, %937)
}

def @func_1818() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %938 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %939 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %940 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %941 = %940.0;
  %942 = cast(%941, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %943 = reshape(%942, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %944 = @func_1327(%943) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %945 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %946 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %947 = %946.1;
  %948 = cast(%947, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %949 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %950 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %951 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %952 = %938.1;
  %953 = %939.0;
  %954 = %944.3;
  %955 = %945.0;
  %956 = sqrt(%948) /* ty=Tensor[(4, 6, 13), float64] */;
  %957 = %949.0;
  %958 = %950.0;
  %959 = %951.0;
  (%952, %953, %941, %954, %955, %956, %957, %958, %959)
}

def @func_13839() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %960 = @func_6278() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %961 = @func_2233() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %962 = @func_4736() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %963 = @func_10936() /* ty=Tensor[(4, 6, 13), float64] */;
  %964 = %960.2;
  %965 = %961.0;
  %966 = %962.0;
  (%963, %964, %965, %966)
}

def @func_7682() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %967 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %968 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %969 = %967.0;
  %970 = %968.0;
  (%969, %970)
}

def @func_11051() -> Tensor[(4, 6, 13), bool] {
  @func_9314() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_11242() -> Tensor[(3, 4, 2), float32] {
  %971 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 4, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 4, 2), float32] */;
  rsqrt(%971) /* ty=Tensor[(3, 4, 2), float32] */
}

def @func_16926() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(784), float64], Tensor[(784), int8], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %972 = @func_10337() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %973 = @func_7542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %974 = cast(meta[relay.Constant][27] /* ty=Tensor[(784), int8] */, dtype="int8") /* ty=Tensor[(784), int8] */;
  %975 = cast(meta[relay.Constant][27] /* ty=Tensor[(784), int8] */, dtype="int8") /* ty=Tensor[(784), int8] */;
  %976 = reshape(%974, newshape=[784]) /* ty=Tensor[(784), int8] */;
  %977 = reshape(%975, newshape=[784]) /* ty=Tensor[(784), int8] */;
  %978 = @func_11363(%976, %977) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), float64]) */;
  %979 = @func_4188() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %980 = @func_2533() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %981 = %972.0;
  %982 = %973.0;
  %983 = %978.2;
  %984 = %979.1;
  %985 = @func_8668() /* ty=Tensor[(4, 6, 13), float64] */;
  %986 = %980.0;
  (%981, %982, %983, meta[relay.Constant][27] /* ty=Tensor[(784), int8] */, %984, %985, %986)
}

def @func_907() -> (Tensor[(4, 6, 13), float64],) {
  %987 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %988 = %987.0;
  (%988,)
}

def @func_19936() -> Tensor[(4, 6, 13), bool] {
  %989 = @func_18913() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %989.0
}

def @func_4494() -> Tensor[(4, 6, 13), bool] {
  %990 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %990.0
}

def @func_3659() -> Tensor[(4, 6, 13), bool] {
  %991 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %991.0
}

def @func_5032(%var_4992: Tensor[(13, 6, 13), float32]) -> (Tensor[(13, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(13, 6, 13), bool]) {
  %992 = cast(%var_4992, dtype="float32") /* ty=Tensor[(13, 6, 13), float32] */;
  %993 = acos(%992) /* ty=Tensor[(13, 6, 13), float32] */;
  %994 = cast(%var_4992, dtype="float32") /* ty=Tensor[(13, 6, 13), float32] */;
  %995 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %996 = cast(%993, dtype="float32") /* ty=Tensor[(13, 6, 13), float32] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %998 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
  %999 = cast(%993, dtype="bool") /* ty=Tensor[(13, 6, 13), bool] */;
  %1000 = shape_of(%var_4992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1001 = cast(%var_4992, dtype="bool") /* ty=Tensor[(13, 6, 13), bool] */;
  %1002 = dyn.reshape(%999, %1000, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1003 = power(%996, %997) /* ty=Tensor[(13, 6, 13), float32] */;
  %1004 = %998.3;
  %1005 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  %1006 = less(%1001, %1002) /* ty=Tensor[(13, 6, 13), bool] */;
  (%1003, %1004, %1005, %1006)
}

def @func_19529() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1007 = @func_19115() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1008 = @func_1649() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1009 = %1007.0;
  %1010 = %1008.0;
  (%1009, %1010)
}

def @func_16577() -> Tensor[(4, 6, 13), float64] {
  %1011 = @func_10518() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1011.1
}

def @func_10299() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1012 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1013 = @func_7542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1014 = @func_9314() /* ty=Tensor[(4, 6, 13), bool] */;
  %1015 = @func_5270() /* ty=Tensor[(4, 6, 13), float32] */;
  %1016 = %1012.1;
  %1017 = %1013.1;
  (%1014, %1015, %1016, %1017)
}

def @func_6977() -> (Tensor[(4, 6, 13), float64],) {
  %1018 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1018,)
}

def @func_17701() -> (Tensor[(4, 11, 6), float32],) {
  %1019 = @func_17247() /* ty=(Tensor[(4, 11, 6), float32],) */;
  %1020 = %1019.0;
  (%1020,)
}

def @func_17402() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], float32, Tensor[(1456), float32], Tensor[(14, 13, 8), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1021 = @func_7682() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1022 = cast(4.51198f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1023 = cast(meta[relay.Constant][28] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %1024 = reshape(%1022, newshape=[]) /* ty=float32 */;
  %1025 = reshape(%1023, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), float32] */;
  %1026 = @func_11485(%1024, %1025) /* ty=Tensor[(14, 13, 8), float32] */;
  %1027 = cast(%1026, dtype="float64") /* ty=Tensor[(14, 13, 8), float64] */;
  %1028 = @func_3632() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1029 = %1021.1;
  %1030 = @func_14640() /* ty=Tensor[(4, 6, 13), bool] */;
  %1031 = atanh(%1027) /* ty=Tensor[(14, 13, 8), float64] */;
  %1032 = %1028.0;
  %1033 = @func_12902() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1029, %1030, 4.51198f /* ty=float32 */, meta[relay.Constant][28] /* ty=Tensor[(1456), float32] */, %1031, %1032, %1033)
}

def @func_2101() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1034 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1035 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1036 = %1034.0;
  %1037 = @func_1925() /* ty=Tensor[(4, 6, 13), float64] */;
  %1038 = %1035.0;
  (%1036, %1037, %1038)
}

def @func_14214() -> Tensor[(4, 6, 13), bool] {
  @func_9827() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_2968() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1039 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1040 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
  %1041 = %1039.0;
  %1042 = %1040.1;
  (%1041, %1042)
}

def @func_4093() -> Tensor[(4, 6, 13), bool] {
  %1043 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1043.0
}

def @func_13480() -> (Tensor[(4, 6, 13), float64],) {
  %1044 = @func_10894() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1045 = %1044.0;
  (%1045,)
}

def @func_3564() -> Tensor[(4, 6, 13), bool] {
  %1046 = @func_2018() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1046.0
}

def @func_18622() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1047 = @func_3867() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1048 = @func_2200() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1049 = @func_18549() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1050 = %1047.0;
  %1051 = %1048.0;
  %1052 = %1049.3;
  %1053 = @func_10936() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1050, %1051, %1052, %1053)
}

def @func_4309() -> (Tensor[(4, 6, 13), bool],) {
  %1054 = @func_2295() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1055 = %1054.3;
  (%1055,)
}

def @func_13315() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1056 = @func_13238() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1057 = %1056.1;
  %1058 = @func_9827() /* ty=Tensor[(4, 6, 13), bool] */;
  (%1057, %1058)
}

def @func_4046() -> (Tensor[(4, 6, 13), bool],) {
  %1059 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %1060 = %1059.0;
  (%1060,)
}

def @func_12107() -> (Tensor[(4, 6, 13), bool],) {
  %1061 = @func_9288() /* ty=Tensor[(4, 6, 13), bool] */;
  (%1061,)
}

def @func_8374() -> Tensor[(4, 6, 13), float64] {
  %1062 = @func_6856() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1062.0
}

def @func_2009() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  %1063 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1064 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1065 = @func_1511() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1066 = %1065.2;
  %1067 = cast(%1066, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %1068 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1069 = @func_1129() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1070 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1071 = %1063.0;
  %1072 = %1064.0;
  %1073 = erf(%1067) /* ty=Tensor[(4, 6, 13), float64] */;
  %1074 = %1068.0;
  %1075 = %1069.0;
  %1076 = %1070.0;
  (%1071, %1072, %1073, %1074, %1075, %1076)
}

def @func_7845() -> (Tensor[(4, 6, 13), float64],) {
  %1077 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1077,)
}

def @func_2533() -> (Tensor[(4, 6, 13), float64],) {
  %1078 = @func_2101() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1079 = %1078.2;
  %1080 = cast(%1079, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %1081 = atan(%1080) /* ty=Tensor[(4, 6, 13), float64] */;
  (%1081,)
}

def @func_9875(%var_9857: float32, %var_9858: Tensor[(9, 9, 6), float32]) -> (Tensor[(9, 9, 6), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1082 = cast(%var_9857, dtype="float32") /* ty=float32 */;
  %1083 = cast(%var_9858, dtype="float32") /* ty=Tensor[(9, 9, 6), float32] */;
  %1084 = @func_4046() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1085 = floor_mod(%1082, %1083) /* ty=Tensor[(9, 9, 6), float32] */;
  %1086 = %1084.0;
  %1087 = @func_6104() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1085, %1086, %1087)
}

def @func_2927() -> (Tensor[(4, 6, 13), float64],) {
  %1088 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1088,)
}

def @func_7720() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint32], Tensor[(4, 6, 13), bool]) {
  %1089 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1090 = cast(meta[relay.Constant][29] /* ty=Tensor[(54, 10), uint32] */, dtype="uint32") /* ty=Tensor[(54, 10), uint32] */;
  %1091 = reshape(%1090, newshape=[540]) /* ty=Tensor[(540), uint32] */;
  %1092 = @func_5893(%1091) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1093 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1094 = %1089.0;
  %1095 = %1092.5;
  %1096 = %1093.0;
  (%1094, %1095, meta[relay.Constant][29] /* ty=Tensor[(54, 10), uint32] */, %1096)
}

def @func_11306() -> Tensor[(4, 6, 13), float64] {
  @func_2360() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_8092() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1097 = @func_4836() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1098 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1099 = %1097.0;
  %1100 = %1098.0;
  (%1099, %1100)
}

def @func_4644() -> (Tensor[(4, 6, 13), float64],) {
  %1101 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1101,)
}

def @func_11963() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1102 = @func_10134() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1103 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %1104 = %1102.0;
  %1105 = %1103.0;
  (%1104, %1105)
}

def @func_14517() -> Tensor[(4, 6, 13), float64] {
  %1106 = @func_14152() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1106.1
}

def @func_4774() -> Tensor[(4, 6, 13), float32] {
  %1107 = @func_1511() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1108 = %1107.0;
  %1109 = cast(%1108, dtype="float32") /* ty=Tensor[(4, 6, 13), float32] */;
  cosh(%1109) /* ty=Tensor[(4, 6, 13), float32] */
}

def @func_19747() -> Tensor[(4, 6, 13), float64] {
  %1110 = @func_3867() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1110.2
}

def @func_9998() -> Tensor[(4, 6, 13), float64] {
  %1111 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1111.8
}

def @func_13607() -> (Tensor[(4, 6, 13), bool],) {
  %1112 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1113 = %1112.0;
  (%1113,)
}

def @func_15244() -> (Tensor[(4, 6, 13), float32],) {
  %1114 = @func_4774() /* ty=Tensor[(4, 6, 13), float32] */;
  (%1114,)
}

def @func_4410() -> (Tensor[(4, 6, 13), bool],) {
  %1115 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  (%1115,)
}

def @func_16415(%var_16399: Tensor[(6, 7, 2), uint32]) -> (Tensor[(6, 7, 2), uint32],) {
  %1116 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 7, 2), uint32] */, dtype="uint32") /* ty=Tensor[(6, 7, 2), uint32] */;
  %1117 = shape_of(%var_16399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1118 = cast(%var_16399, dtype="uint32") /* ty=Tensor[(6, 7, 2), uint32] */;
  %1119 = dyn.reshape(%1116, %1117, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1120 = bitwise_or(%1118, %1119) /* ty=Tensor[(6, 7, 2), uint32] */;
  (%1120,)
}

def @func_18146(%var_18120: Tensor[(54, 10), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(54, 10), bool]) {
  %1121 = @func_6780() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1122 = @func_8919() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) */;
  %1123 = %1122.1;
  %1124 = cast(%var_18120, dtype="bool") /* ty=Tensor[(54, 10), bool] */;
  %1125 = shape_of(%1123, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1126 = cast(%1123, dtype="bool") /* ty=Tensor[(54, 10), bool] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1128 = %1121.0;
  %1129 = less_equal(%1126, %1127) /* ty=Tensor[(54, 10), bool] */;
  (%1128, %1129)
}

def @func_19687() -> (Tensor[(4, 6, 13), float64],) {
  %1130 = @func_12800() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1131 = %1130.0;
  (%1131,)
}

def @func_9459() -> Tensor[(4, 6, 13), float32] {
  %1132 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %1132.1
}

def @func_19507() -> Tensor[(4, 6, 13), float64] {
  %1133 = @func_18549() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1133.3
}

def @func_5114() -> Tensor[(4, 6, 13), bool] {
  @func_4494() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_8985() -> (Tensor[(4, 6, 13), bool],) {
  %1134 = @func_4188() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1135 = %1134.0;
  (%1135,)
}

def @func_3557() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1136 = @func_2233() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1137 = @func_2486() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %1138 = %1137.1;
  %1139 = cast(%1138, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %1140 = %1136.0;
  %1141 = log2(%1139) /* ty=Tensor[(4, 6, 13), float64] */;
  (%1140, %1141)
}

def @func_8173() -> (Tensor[(4, 6, 13), bool],) {
  %1142 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1143 = %1142.0;
  (%1143,)
}

def @func_4116() -> Tensor[(4, 6, 13), float64] {
  @func_1925() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_5912() -> Tensor[(4, 6, 13), float64] {
  %1144 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1144.1
}

def @func_5670(%var_5667: Tensor[(7, 9, 3), float32]) -> (Tensor[(7, 9, 3), float32],) {
  %1145 = cast(%var_5667, dtype="float32") /* ty=Tensor[(7, 9, 3), float32] */;
  %1146 = atanh(%1145) /* ty=Tensor[(7, 9, 3), float32] */;
  (%1146,)
}

def @func_15489() -> (Tensor[(4, 6, 13), float64],) {
  %1147 = @func_10894() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1148 = %1147.0;
  (%1148,)
}

def @func_19778(%var_19768: Tensor[(2, 13, 8), float32]) -> (Tensor[(2, 13, 8), float32],) {
  %1149 = cast(%var_19768, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
  %1150 = sinh(%1149) /* ty=Tensor[(2, 13, 8), float32] */;
  (%1150,)
}

def @func_11664(%var_11653: Tensor[(14, 5, 4), int8]) -> (Tensor[(14, 5, 4), bool],) {
  %1151 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 5, 4), int8] */, dtype="bool") /* ty=Tensor[(14, 5, 4), bool] */;
  %1152 = shape_of(%var_11653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1153 = cast(%var_11653, dtype="bool") /* ty=Tensor[(14, 5, 4), bool] */;
  %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1155 = greater_equal(%1153, %1154) /* ty=Tensor[(14, 5, 4), bool] */;
  (%1155,)
}

def @func_5091() -> Tensor[(4, 6, 13), float64] {
  %1156 = @func_4277() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1156.5
}

def @func_17505() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1157 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1158 = @func_14761() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) */;
  %1159 = @func_11009() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1160 = %1157.0;
  %1161 = %1158.3;
  %1162 = %1159.0;
  (%1160, %1161, %1162)
}

def @func_16257(%var_16196: Tensor[(330), float32], %var_16247: Tensor[(3, 88), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(330), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(3, 12, 4), bool], Tensor[(144), uint32], Tensor[(4, 6, 13), float64], Tensor[(3, 88), float64], Tensor[(4, 6, 13), bool]) {
  %1163 = cast(%var_16196, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1164 = reshape(%1163, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
  %1165 = @func_5483(%1164) /* ty=(Tensor[(11, 6, 5), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %1166 = @func_7194() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1167 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1168 = cast(%var_16196, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1169 = @func_8857() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1170 = cast(meta[relay.Constant][32] /* ty=Tensor[(144), uint32] */, dtype="uint32") /* ty=Tensor[(144), uint32] */;
  %1171 = reshape(%1170, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), uint32] */;
  %1172 = cast(%var_16247, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
  %1173 = reshape(%1172, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %1174 = @func_6417(%1173) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) */;
  %1175 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1176 = @func_5912() /* ty=Tensor[(4, 6, 13), float64] */;
  %1177 = %1165.2;
  %1178 = %1166.0;
  %1179 = %1167.1;
  %1180 = cos(%1168) /* ty=Tensor[(330), float32] */;
  %1181 = %1169.1;
  %1182 = @func_14640() /* ty=Tensor[(4, 6, 13), bool] */;
  %1183 = @func_6527(%1171) /* ty=Tensor[(3, 12, 4), bool] */;
  %1184 = %1174.0;
  %1185 = %1175.0;
  (%1176, %1177, %1178, %1179, %1180, %1181, %1182, %1183, meta[relay.Constant][32] /* ty=Tensor[(144), uint32] */, %1184, %var_16247, %1185)
}

def @func_9827() -> Tensor[(4, 6, 13), bool] {
  %1186 = @func_8459() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1186.0
}

def @func_6363(%var_6304: Tensor[(1, 6, 10), float64], %var_6319: Tensor[(3, 6, 10), float64]) -> (Tensor[(4, 6, 13), bool], Tensor[(3, 6, 10), uint8], Tensor[(4, 6, 13), float64]) {
  %1187 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1188 = cast(%var_6304, dtype="float64") /* ty=Tensor[(1, 6, 10), float64] */;
  %1189 = asin(%1188) /* ty=Tensor[(1, 6, 10), float64] */;
  %1190 = cast(%var_6304, dtype="uint16") /* ty=Tensor[(1, 6, 10), uint16] */;
  %1191 = cast(%var_6319, dtype="uint16") /* ty=Tensor[(3, 6, 10), uint16] */;
  %1192 = left_shift(%1190, %1191) /* ty=Tensor[(3, 6, 10), uint16] */;
  %1193 = cast(%1189, dtype="uint8") /* ty=Tensor[(1, 6, 10), uint8] */;
  %1194 = cast(%1192, dtype="uint8") /* ty=Tensor[(3, 6, 10), uint8] */;
  %1195 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1196 = %1187.0;
  %1197 = bitwise_xor(%1193, %1194) /* ty=Tensor[(3, 6, 10), uint8] */;
  %1198 = %1195.0;
  (%1196, %1197, %1198)
}

def @func_4481() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1199 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1200 = %1199.0;
  %1201 = cast(%1200, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %1202 = reshape(%1201, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %1203 = @func_1259(%1202) /* ty=(Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) */;
  %1204 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1205 = %1203.1;
  %1206 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  %1207 = %1204.1;
  (%1200, %1205, %1206, %1207)
}

def @func_9592() -> Tensor[(4, 6, 13), float64] {
  %1208 = @func_7542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1208.0
}

def @func_12847(%var_12809: Tensor[(9, 14, 2), uint64], %var_12810: Tensor[(9, 14, 2), uint64]) -> Tensor[(9, 14, 2), int8] {
  %1209 = cast(%var_12810, dtype="bool") /* ty=Tensor[(9, 14, 2), bool] */;
  %1210 = shape_of(%var_12809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1211 = cast(%var_12809, dtype="bool") /* ty=Tensor[(9, 14, 2), bool] */;
  %1212 = dyn.reshape(%1209, %1210, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1213 = less(%1211, %1212) /* ty=Tensor[(9, 14, 2), bool] */;
  %1214 = cast(%var_12810, dtype="int8") /* ty=Tensor[(9, 14, 2), int8] */;
  %1215 = shape_of(%1213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1216 = cast(%1213, dtype="int8") /* ty=Tensor[(9, 14, 2), int8] */;
  %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%1216, %1217) /* ty=Tensor[(9, 14, 2), int8] */
}

def @func_12800() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1218 = @func_7445() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1219 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1220 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1221 = %1218.0;
  %1222 = @func_12674() /* ty=Tensor[(4, 6, 13), bool] */;
  %1223 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
  %1224 = %1219.1;
  %1225 = %1220.0;
  (%1221, %1222, %1223, %1224, %1225)
}

def @func_14835() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1226 = @func_4188() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1227 = @func_4736() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1228 = %1226.1;
  %1229 = %1227.0;
  (%1228, %1229)
}

def @func_17930() -> (Tensor[(4, 6, 13), float64],) {
  %1230 = @func_11218() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1231 = %1230.1;
  (%1231,)
}

def @func_13238() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1232 = @func_12674() /* ty=Tensor[(4, 6, 13), bool] */;
  %1233 = @func_4116() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1232, %1233)
}

def @func_9314() -> Tensor[(4, 6, 13), bool] {
  %1234 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1234.1
}

def @func_6587() -> Tensor[(4, 6, 13), float64] {
  @func_3080() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_12496() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1235 = @func_5611() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) */;
  %1236 = @func_3341() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1237 = %1235.1;
  %1238 = %1236.1;
  (%1237, %1238)
}

def @func_19412() -> Tensor[(4, 6, 13), float64] {
  @func_1925() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_16644() -> Tensor[(4, 6, 13), bool] {
  %1239 = @func_5986() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1239.2
}

def @func_6856() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1240 = @func_2968() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1241 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1242 = %1240.1;
  %1243 = %1241.0;
  (%1242, %1243)
}

def @func_19842() -> Tensor[(4, 6, 13), bool] {
  %1244 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1244.0
}

def @func_7140(%var_7118: Tensor[(270, 2), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(270, 2), uint32]) {
  %1245 = @func_4944() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1246 = cast(%var_7118, dtype="uint32") /* ty=Tensor[(270, 2), uint32] */;
  %1247 = cast(%var_7118, dtype="uint32") /* ty=Tensor[(270, 2), uint32] */;
  %1248 = reshape(%1246, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1249 = reshape(%1247, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1250 = @func_3937(%1248, %1249) /* ty=(Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1251 = %1245.1;
  %1252 = %1250.1;
  (%1251, %1252, %var_7118)
}

def @func_14798() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %1253 = @func_7194() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1254 = @func_7194() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1255 = %1253.0;
  %1256 = %1254.0;
  (%1255, %1256)
}

def @func_6278() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1257 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1258 = @func_4909() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1259 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1260 = %1257.2;
  %1261 = %1258.1;
  %1262 = %1259.0;
  (%1260, %1261, %1262)
}

def @func_8341(%var_8258: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1263 = @func_7635() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1264 = @func_4277() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1265 = cast(%var_8258, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %1266 = reshape(%1265, newshape=[540]) /* ty=Tensor[(540), uint32] */;
  %1267 = @func_5893(%1266) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1268 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1269 = %1263.0;
  %1270 = %1264.5;
  %1271 = %1267.5;
  %1272 = %1268.1;
  %1273 = @func_5114() /* ty=Tensor[(4, 6, 13), bool] */;
  (%1269, %1270, %1271, %var_8258, %1272, %1273)
}

def @func_17780() -> Tensor[(4, 6, 13), float64] {
  %1274 = @func_15574() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1274.0
}

def @func_13058() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1275 = @func_10360() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1276 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1277 = %1275.0;
  %1278 = %1276.0;
  (%1277, %1278)
}

def @func_15574() -> (Tensor[(4, 6, 13), float64],) {
  %1279 = @func_14708() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1280 = %1279.0;
  (%1280,)
}

def @func_2625() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) {
  %1281 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1282 = @func_2486() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %1283 = %1282.2;
  %1284 = cast(%1283, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %1285 = reshape(%1284, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %1286 = @func_1259(%1285) /* ty=(Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) */;
  %1287 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1288 = %1281.1;
  %1289 = %1286.0;
  %1290 = %1287.4;
  (%1288, %1283, %1289, %1290)
}

def @func_2052() -> Tensor[(4, 6, 13), float64] {
  %1291 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1291.0
}

def @func_18804() -> (Tensor[(4, 6, 13), float64],) {
  %1292 = @func_15806() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1293 = %1292.0;
  (%1293,)
}

def @func_17247() -> (Tensor[(4, 11, 6), float32],) {
  %1294 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 6), float32] */;
  %1295 = tan(%1294) /* ty=Tensor[(4, 11, 6), float32] */;
  (%1295,)
}

def @func_1055() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1296 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1297 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1298 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1299 = %1296.0;
  %1300 = %1297.0;
  %1301 = %1298.0;
  (%1299, %1300, %1301)
}

def @func_19486(%var_19479: Tensor[(16, 12, 5), int16], %var_19480: Tensor[(16, 12, 5), int16]) -> Tensor[(16, 12, 5), bool] {
  %1302 = cast(%var_19480, dtype="bool") /* ty=Tensor[(16, 12, 5), bool] */;
  %1303 = shape_of(%var_19479, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1304 = cast(%var_19479, dtype="bool") /* ty=Tensor[(16, 12, 5), bool] */;
  %1305 = dyn.reshape(%1302, %1303, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1304, %1305) /* ty=Tensor[(16, 12, 5), bool] */
}

def @func_9541(%var_9510: Tensor[(54, 10), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint16]) {
  %1306 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1307 = cast(%var_9510, dtype="uint32") /* ty=Tensor[(54, 10), uint32] */;
  %1308 = cast(%var_9510, dtype="uint32") /* ty=Tensor[(54, 10), uint32] */;
  %1309 = reshape(%1307, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1310 = reshape(%1308, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1311 = @func_3937(%1309, %1310) /* ty=(Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1312 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1313 = cast(%var_9510, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %1314 = erf(%1313) /* ty=Tensor[(54, 10), float32] */;
  %1315 = cast(%var_9510, dtype="uint16") /* ty=Tensor[(54, 10), uint16] */;
  %1316 = shape_of(%1314, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1317 = cast(%1314, dtype="uint16") /* ty=Tensor[(54, 10), uint16] */;
  %1318 = dyn.reshape(%1315, %1316, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1319 = %1306.1;
  %1320 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
  %1321 = %1311.2;
  %1322 = %1312.7;
  %1323 = minimum(%1317, %1318) /* ty=Tensor[(54, 10), uint16] */;
  (%1319, %1320, %1321, %1322, %1323)
}

def @func_2170() -> Tensor[(4, 6, 13), float64] {
  %1324 = @func_2101() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1324.1
}

def @func_16813() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1325 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1326 = %1325.1;
  %1327 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1326, %1327)
}

def @func_14270(%var_14254: Tensor[(11, 2, 16), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 2, 16), uint16]) {
  %1328 = @func_7445() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1329 = cast(%var_14254, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %1330 = sqrt(%1329) /* ty=Tensor[(11, 2, 16), float32] */;
  %1331 = cast(%var_14254, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
  %1332 = shape_of(%1330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1333 = cast(%1330, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
  %1334 = dyn.reshape(%1331, %1332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1335 = not_equal(%1333, %1334) /* ty=Tensor[(11, 2, 16), bool] */;
  %1336 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 2, 16), bool] */, dtype="uint16") /* ty=Tensor[(11, 2, 16), uint16] */;
  %1337 = shape_of(%1335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1338 = cast(%1335, dtype="uint16") /* ty=Tensor[(11, 2, 16), uint16] */;
  %1339 = dyn.reshape(%1336, %1337, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1340 = @func_9998() /* ty=Tensor[(4, 6, 13), float64] */;
  %1341 = %1328.0;
  %1342 = bitwise_or(%1338, %1339) /* ty=Tensor[(11, 2, 16), uint16] */;
  (%1340, %1341, %1342)
}

def @func_12002() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1343 = @func_11009() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1344 = @func_10789() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1345 = %1343.1;
  %1346 = %1344.1;
  (%1345, %1346)
}

def @func_5382() -> Tensor[(4, 6, 13), float64] {
  @func_3080() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_18407() -> (Tensor[(4, 6, 13), bool],) {
  %1347 = @func_14972() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1348 = %1347.0;
  (%1348,)
}

def @func_9139() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1349 = @func_4736() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1350 = @func_2101() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1351 = @func_5794() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1352 = %1349.0;
  %1353 = %1350.2;
  %1354 = %1351.0;
  (%1352, %1353, %1354)
}

def @func_14308() -> Tensor[(4, 6, 13), float64] {
  %1355 = @func_12312() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1355.1
}

def @func_18984() -> (Tensor[(4, 6, 13), float64], Tensor[(486), float32], Tensor[(486), float32], Tensor[(4, 6, 13), float64]) {
  %1356 = @func_2101() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1357 = cast(meta[relay.Constant][35] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %1358 = reshape(%1357, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %1359 = @func_11914(%1358) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], float32, Tensor[(486), float32]) */;
  %1360 = @func_15489() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1361 = %1356.1;
  %1362 = %1359.3;
  %1363 = %1360.0;
  (%1361, %1362, meta[relay.Constant][35] /* ty=Tensor[(486), float32] */, %1363)
}

def @func_13516() -> (Tensor[(4, 6, 13), float64],) {
  %1364 = @func_13315() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1365 = %1364.0;
  (%1365,)
}

def @func_15471(%var_15466: Tensor[(2, 392), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 98), int8], Tensor[(2, 392), int8]) {
  %1366 = @func_8857() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1367 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1368 = cast(%var_15466, dtype="int8") /* ty=Tensor[(2, 392), int8] */;
  %1369 = reshape(%1368, newshape=[8, 98]) /* ty=Tensor[(8, 98), int8] */;
  %1370 = @func_11589(%1369) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(8, 98), int8]) */;
  %1371 = %1366.0;
  %1372 = %1367.0;
  %1373 = %1370.3;
  (%1371, %1372, %1373, %var_15466)
}

def @func_12343() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1374 = @func_5611() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) */;
  %1375 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1376 = %1374.0;
  %1377 = %1375.0;
  (%1376, %1377)
}

def @func_9191() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1378 = @func_7774() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1379 = %1378.2;
  %1380 = @func_6104() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1379, %1380)
}

def @func_14104() -> (Tensor[(4, 6, 13), bool],) {
  %1381 = @func_7194() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1382 = %1381.0;
  (%1382,)
}

def @func_1925() -> Tensor[(4, 6, 13), float64] {
  %1383 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1383.8
}

def @func_14152() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1384 = @func_2360() /* ty=Tensor[(4, 6, 13), float64] */;
  %1385 = @func_9922() /* ty=Tensor[(4, 6, 13), float64] */;
  %1386 = @func_5382() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1384, %1385, %1386)
}

def @func_2360() -> Tensor[(4, 6, 13), float64] {
  %1387 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %1387.0
}

def @func_9288() -> Tensor[(4, 6, 13), bool] {
  %1388 = @func_4836() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1388.0
}

def @func_5270() -> Tensor[(4, 6, 13), float32] {
  %1389 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %1389.0
}

def @func_3937(%var_3909: Tensor[(9, 6, 10), uint32], %var_3910: Tensor[(9, 6, 10), uint32]) -> (Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1390 = cast(%var_3910, dtype="uint32") /* ty=Tensor[(9, 6, 10), uint32] */;
  %1391 = shape_of(%var_3909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1392 = cast(%var_3909, dtype="uint32") /* ty=Tensor[(9, 6, 10), uint32] */;
  %1393 = dyn.reshape(%1390, %1391, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1394 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1395 = @func_2486() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %1396 = maximum(%1392, %1393) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1397 = %1394.0;
  %1398 = %1395.2;
  (%1396, %1397, %1398)
}

def @func_3015() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1399 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1400 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
  %1401 = %1399.2;
  (%1400, %1401)
}

def @func_5611() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) {
  %1402 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1403 = @func_4481() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1404 = cast(meta[relay.Constant][36] /* ty=Tensor[(540), uint32] */, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %1405 = cast(meta[relay.Constant][36] /* ty=Tensor[(540), uint32] */, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %1406 = reshape(%1404, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1407 = reshape(%1405, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1408 = @func_3937(%1406, %1407) /* ty=(Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1409 = %1402.1;
  %1410 = %1403.0;
  %1411 = %1408.1;
  (%1409, %1410, %1411, meta[relay.Constant][36] /* ty=Tensor[(540), uint32] */)
}

def @func_4736() -> (Tensor[(4, 6, 13), float64],) {
  %1412 = @func_4277() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1413 = %1412.3;
  (%1413,)
}

def @func_8857() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1414 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1415 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1416 = %1414.1;
  %1417 = %1415.0;
  (%1416, %1417)
}

def @func_18457() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1418 = @func_13328() /* ty=Tensor[(4, 6, 13), float64] */;
  %1419 = @func_2845() /* ty=Tensor[(4, 6, 13), float64] */;
  %1420 = @func_2649() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1418, %1419, %1420)
}

def @func_12538() -> (Tensor[(4, 6, 13), bool],) {
  %1421 = @func_9827() /* ty=Tensor[(4, 6, 13), bool] */;
  (%1421,)
}

def @func_5986() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1422 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
  %1423 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  %1424 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
  %1425 = %1422.0;
  (%1423, %1424, %1425)
}

def @func_19240() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1426 = @func_16926() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(784), float64], Tensor[(784), int8], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1427 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1428 = %1426.0;
  %1429 = %1427.0;
  (%1428, %1429)
}

def @func_15806() -> (Tensor[(4, 6, 13), float64],) {
  %1430 = @func_5257() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1431 = %1430.1;
  (%1431,)
}

def @func_6232() -> Tensor[(4, 6, 13), float64] {
  @func_5347() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_5257() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1432 = @func_3632() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1433 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1434 = %1432.0;
  %1435 = %1433.1;
  (%1434, %1435)
}

def @func_4909() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1436 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1437 = @func_2845() /* ty=Tensor[(4, 6, 13), float64] */;
  %1438 = %1436.1;
  (%1437, %1438)
}

def @func_6417(%var_6414: Tensor[(264), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) {
  %1439 = cast(%var_6414, dtype="float64") /* ty=Tensor[(264), float64] */;
  %1440 = cast(%var_6414, dtype="float64") /* ty=Tensor[(264), float64] */;
  %1441 = reshape(%1439, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %1442 = reshape(%1440, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %1443 = @func_3214(%1441, %1442) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32]) */;
  %1444 = @func_5382() /* ty=Tensor[(4, 6, 13), float64] */;
  %1445 = %1443.3;
  (%1444, %1445, %var_6414)
}

def @func_19322() -> (Tensor[(54, 10), float32], Tensor[(4, 6, 13), float64], Tensor[(54, 10), float32]) {
  %1446 = @func_9391() /* ty=(Tensor[(54, 10), uint32],) */;
  %1447 = %1446.0;
  %1448 = cast(%1447, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %1449 = @func_12039() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1450 = cast(%1447, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %1451 = atan(%1448) /* ty=Tensor[(54, 10), float32] */;
  %1452 = %1449.0;
  %1453 = acos(%1450) /* ty=Tensor[(54, 10), float32] */;
  (%1451, %1452, %1453)
}

def @func_10879(%var_10850: Tensor[(264), float64], %var_10869: Tensor[(2), uint32], %var_10872: Tensor[(1, 144), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(264), float64], Tensor[(2, 6, 8), float32], Tensor[(2), uint32], Tensor[(30, 4), uint32], Tensor[(96), uint32], Tensor[(1, 144), uint32], Tensor[(11, 12, 2), float32]) {
  %1454 = @func_8173() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1455 = cast(%var_10869, dtype="uint32") /* ty=Tensor[(2), uint32] */;
  %1456 = cast(meta[relay.Constant][37] /* ty=Tensor[(30, 4), uint32] */, dtype="uint32") /* ty=Tensor[(30, 4), uint32] */;
  %1457 = cast(meta[relay.Constant][38] /* ty=Tensor[(96), uint32] */, dtype="uint32") /* ty=Tensor[(96), uint32] */;
  %1458 = cast(%var_10872, dtype="uint32") /* ty=Tensor[(1, 144), uint32] */;
  %1459 = reshape(%1455, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), uint32] */;
  %1460 = reshape(%1456, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), uint32] */;
  %1461 = reshape(%1457, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), uint32] */;
  %1462 = reshape(%1458, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), uint32] */;
  %1463 = @func_3731(%1459, %1460, %1461, %1462) /* ty=(Tensor[(2, 15, 4), uint32], Tensor[(4, 6, 13), bool], Tensor[(2, 6, 8), float32], Tensor[(4, 6, 13), bool], Tensor[(2, 8, 9), int16], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1464 = cast(%var_10850, dtype="float64") /* ty=Tensor[(264), float64] */;
  %1465 = cast(%var_10850, dtype="float64") /* ty=Tensor[(264), float64] */;
  %1466 = reshape(%1464, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %1467 = reshape(%1465, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %1468 = @func_3214(%1466, %1467) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32]) */;
  %1469 = %1468.0;
  %1470 = cast(%1469, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %1471 = acosh(%1470) /* ty=Tensor[(11, 12, 2), float64] */;
  %1472 = cast(%1471, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
  %1473 = %1454.0;
  %1474 = %1463.2;
  %1475 = atanh(%1472) /* ty=Tensor[(11, 12, 2), float32] */;
  (%1473, %var_10850, %1474, %var_10869, meta[relay.Constant][37] /* ty=Tensor[(30, 4), uint32] */, meta[relay.Constant][38] /* ty=Tensor[(96), uint32] */, %var_10872, %1475)
}

def @func_16671() -> (Tensor[(4, 6, 13), float64],) {
  %1476 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1477 = %1476.1;
  (%1477,)
}

def @func_12039() -> (Tensor[(4, 6, 13), float64],) {
  %1478 = @func_6232() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1478,)
}

def @func_6632() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1479 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1480 = @func_3632() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1481 = %1479.1;
  %1482 = %1480.0;
  (%1481, %1482)
}

def @func_12631() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1483 = @func_12107() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1484 = @func_4850() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1485 = @func_2018() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1486 = %1483.0;
  %1487 = %1484.1;
  %1488 = %1485.0;
  %1489 = @func_11259() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1486, %1487, %1488, %1489)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6105() -> Tensor[(4, 6, 13), float64] {
  %1 = fn () -> Tensor[(4, 6, 13), float64] {
    %0 = @func_1129() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %0.3
  };
  %1() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_10299() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %2 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %3 = @func_7542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %4 = @func_9314() /* ty=Tensor[(4, 6, 13), bool] */;
  %5 = @func_5270() /* ty=Tensor[(4, 6, 13), float32] */;
  %6 = %2.1;
  %7 = %3.1;
  (%4, %5, %6, %7)
}

def @func_15981() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %14 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
    %8 = @func_6856() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %9 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %10 = @func_10518() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %11 = %8.0;
    %12 = %9.2;
    %13 = %10.0;
    (%11, %12, %13)
  };
  %14() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_13468() -> (Tensor[(4, 6, 13), bool],) {
  %15 = @func_8076() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %16 = %15.0;
  (%16,)
}

def @func_13059() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %21 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %17 = @func_10360() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %18 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %19 = %17.0;
    %20 = %18.0;
    (%19, %20)
  };
  %21() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_18253() -> Tensor[(4, 6, 13), float64] {
  %23 = fn () -> Tensor[(4, 6, 13), float64] {
    %22 = @func_9191() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %22.0
  };
  %23() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_6363(%var_6304: Tensor[(1, 6, 10), float64], %var_6319: Tensor[(3, 6, 10), float64]) -> (Tensor[(4, 6, 13), bool], Tensor[(3, 6, 10), uint8], Tensor[(4, 6, 13), float64]) {
  %24 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %25 = cast(%var_6304, dtype="float64") /* ty=Tensor[(1, 6, 10), float64] */;
  %26 = asin(%25) /* ty=Tensor[(1, 6, 10), float64] */;
  %27 = cast(%var_6304, dtype="uint16") /* ty=Tensor[(1, 6, 10), uint16] */;
  %28 = cast(%var_6319, dtype="uint16") /* ty=Tensor[(3, 6, 10), uint16] */;
  %29 = left_shift(%27, %28) /* ty=Tensor[(3, 6, 10), uint16] */;
  %30 = cast(%26, dtype="uint8") /* ty=Tensor[(1, 6, 10), uint8] */;
  %31 = cast(%29, dtype="uint8") /* ty=Tensor[(3, 6, 10), uint8] */;
  %32 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %33 = %24.0;
  %34 = bitwise_xor(%30, %31) /* ty=Tensor[(3, 6, 10), uint8] */;
  %35 = %32.0;
  (%33, %34, %35)
}

def @func_1427() -> (Tensor[(4, 6, 13), float64],) {
  %38 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %36 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %37 = %36.0;
    (%37,)
  };
  %38() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_16725() -> Tensor[(4, 6, 13), float64] {
  %39 = @func_9745() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %39.1
}

def @func_19687() -> (Tensor[(4, 6, 13), float64],) {
  %40 = @func_12800() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %41 = %40.0;
  (%41,)
}

def @func_4681() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %45 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %42 = @func_4644() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %43 = %42.0;
    %44 = @func_1925() /* ty=Tensor[(4, 6, 13), float64] */;
    (%43, %44)
  };
  %45() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_13607() -> (Tensor[(4, 6, 13), bool],) {
  %46 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %47 = %46.0;
  (%47,)
}

def @func_6207() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
  %51 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
    %48 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %49 = %48.0;
    %50 = @func_4774() /* ty=Tensor[(4, 6, 13), float32] */;
    (%49, %50)
  };
  %51() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */
}

def @func_12496() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %52 = @func_5611() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) */;
  %53 = @func_3341() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %54 = %52.1;
  %55 = %53.1;
  (%54, %55)
}

def @func_5272() -> Tensor[(4, 6, 13), float32] {
  @func_5270() /* ty=Tensor[(4, 6, 13), float32] */
}

def @func_2052() -> Tensor[(4, 6, 13), float64] {
  %56 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %56.0
}

def @func_19748() -> Tensor[(4, 6, 13), float64] {
  %58 = fn () -> Tensor[(4, 6, 13), float64] {
    %57 = @func_3867() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %57.2
  };
  %58() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_19832() -> (Tensor[(4, 6, 13), bool],) {
  %59 = @func_14761() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) */;
  %60 = %59.3;
  (%60,)
}

def @func_15557() -> (Tensor[(4, 6, 13), bool],) {
  @func_15555() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_14387() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %66 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
    %61 = @func_12538() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %62 = @func_12538() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %63 = %61.0;
    %64 = %62.0;
    %65 = @func_9592() /* ty=Tensor[(4, 6, 13), float64] */;
    (%63, %64, %65)
  };
  %66() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_4909() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %67 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %68 = @func_2845() /* ty=Tensor[(4, 6, 13), float64] */;
  %69 = %67.1;
  (%68, %69)
}

def @func_19355() -> Tensor[(4, 6, 13), float32] {
  @func_19353() /* ty=Tensor[(4, 6, 13), float32] */
}

def @func_5672(%var_5671: Tensor[(7, 9, 3), float32]) -> (Tensor[(7, 9, 3), float32],) {
  %72 = fn (%var_5667: Tensor[(7, 9, 3), float32]) -> (Tensor[(7, 9, 3), float32],) {
    %70 = cast(%var_5667, dtype="float32") /* ty=Tensor[(7, 9, 3), float32] */;
    %71 = atanh(%70) /* ty=Tensor[(7, 9, 3), float32] */;
    (%71,)
  };
  %72(%var_5671) /* ty=(Tensor[(7, 9, 3), float32],) */
}

def @func_11606() -> Tensor[(6, 14, 8), float32] {
  %73 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 8), float32] */;
  asinh(%73) /* ty=Tensor[(6, 14, 8), float32] */
}

def @func_18550() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %83 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %74 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %75 = @func_12269() /* ty=Tensor[(4, 6, 13), float64] */;
    %76 = cast(%75, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
    %77 = reshape(%76, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
    %78 = @func_1259(%77) /* ty=(Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) */;
    %79 = @func_18252() /* ty=Tensor[(4, 6, 13), float64] */;
    %80 = %74.1;
    %81 = @func_5382() /* ty=Tensor[(4, 6, 13), float64] */;
    %82 = %78.1;
    (%79, %80, %81, %75, %82)
  };
  %83() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_4944() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %84 = @func_4046() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %85 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
  %86 = %84.0;
  %87 = %85.1;
  (%86, %87)
}

def @func_6232() -> Tensor[(4, 6, 13), float64] {
  @func_5347() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_19646() -> (Tensor[(4, 6, 13), float64],) {
  @func_19644() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_13329() -> Tensor[(4, 6, 13), float64] {
  %88 = fn () -> Tensor[(4, 6, 13), float64] {
    @func_11259() /* ty=Tensor[(4, 6, 13), float64] */
  };
  %88() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_3451(%var_3450: Tensor[(6, 44), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(6, 44), uint32]) {
  %114 = fn (%var_3387: Tensor[(6, 44), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(6, 44), uint32]) {
    %89 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %90 = @func_1511() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %91 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
    %92 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %93 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %94 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %95 = cast(%var_3387, dtype="float64") /* ty=Tensor[(6, 44), float64] */;
    %96 = sin(%95) /* ty=Tensor[(6, 44), float64] */;
    %97 = cast(%var_3387, dtype="float64") /* ty=Tensor[(6, 44), float64] */;
    %98 = cast(%var_3387, dtype="float64") /* ty=Tensor[(6, 44), float64] */;
    %99 = reshape(%97, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
    %100 = reshape(%98, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
    %101 = @func_3214(%99, %100) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32]) */;
    %102 = %101.3;
    %103 = cast(%102, dtype="uint32") /* ty=Tensor[(11, 12, 2), uint32] */;
    %104 = shape_of(%96, dtype="int32") /* ty=Tensor[(2), int32] */;
    %105 = cast(%96, dtype="uint32") /* ty=Tensor[(6, 44), uint32] */;
    %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %107 = %89.0;
    %108 = %90.0;
    %109 = %91.3;
    %110 = %92.0;
    %111 = %93.0;
    %112 = %94.0;
    %113 = left_shift(%105, %106) /* ty=Tensor[(6, 44), uint32] */;
    (%107, %108, %109, %110, %111, %112, %113)
  };
  %114(%var_3450) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(6, 44), uint32]) */
}

def @func_8375() -> Tensor[(4, 6, 13), float64] {
  %116 = fn () -> Tensor[(4, 6, 13), float64] {
    %115 = @func_6856() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %115.0
  };
  %116() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_9140() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %123 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %117 = @func_4736() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %118 = @func_2101() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %119 = @func_5794() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %120 = %117.0;
    %121 = %118.2;
    %122 = %119.0;
    (%120, %121, %122)
  };
  %123() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_13247() -> (Tensor[(4, 6, 13), bool],) {
  @func_13245() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_9541(%var_9510: Tensor[(54, 10), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint16]) {
  %124 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %125 = cast(%var_9510, dtype="uint32") /* ty=Tensor[(54, 10), uint32] */;
  %126 = cast(%var_9510, dtype="uint32") /* ty=Tensor[(54, 10), uint32] */;
  %127 = reshape(%125, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %128 = reshape(%126, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %129 = @func_3937(%127, %128) /* ty=(Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %130 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %131 = cast(%var_9510, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %132 = erf(%131) /* ty=Tensor[(54, 10), float32] */;
  %133 = cast(%var_9510, dtype="uint16") /* ty=Tensor[(54, 10), uint16] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(2), int32] */;
  %135 = cast(%132, dtype="uint16") /* ty=Tensor[(54, 10), uint16] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %137 = %124.1;
  %138 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
  %139 = %129.2;
  %140 = %130.7;
  %141 = minimum(%135, %136) /* ty=Tensor[(54, 10), uint16] */;
  (%137, %138, %139, %140, %141)
}

def @func_19910() -> (Tensor[(4, 6, 13), float64],) {
  %144 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %142 = @func_4736() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %143 = %142.0;
    (%143,)
  };
  %144() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_17248() -> (Tensor[(4, 11, 6), float32],) {
  %147 = fn () -> (Tensor[(4, 11, 6), float32],) {
    %145 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 6), float32] */;
    %146 = tan(%145) /* ty=Tensor[(4, 11, 6), float32] */;
    (%146,)
  };
  %147() /* ty=(Tensor[(4, 11, 6), float32],) */
}

def @func_1057() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_3736(%var_3732: Tensor[(2, 1, 1), uint32], %var_3733: Tensor[(2, 15, 4), uint32], %var_3734: Tensor[(2, 6, 8), uint32], %var_3735: Tensor[(2, 8, 9), uint32]) -> (Tensor[(2, 15, 4), uint32], Tensor[(4, 6, 13), bool], Tensor[(2, 6, 8), float32], Tensor[(4, 6, 13), bool], Tensor[(2, 8, 9), int16], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %166 = fn (%var_3681: Tensor[(2, 1, 1), uint32], %var_3682: Tensor[(2, 15, 4), uint32], %var_3694: Tensor[(2, 6, 8), uint32], %var_3712: Tensor[(2, 8, 9), uint32]) -> (Tensor[(2, 15, 4), uint32], Tensor[(4, 6, 13), bool], Tensor[(2, 6, 8), float32], Tensor[(4, 6, 13), bool], Tensor[(2, 8, 9), int16], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %148 = cast(%var_3681, dtype="uint32") /* ty=Tensor[(2, 1, 1), uint32] */;
    %149 = cast(%var_3682, dtype="uint32") /* ty=Tensor[(2, 15, 4), uint32] */;
    %150 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %151 = cast(%var_3681, dtype="float32") /* ty=Tensor[(2, 1, 1), float32] */;
    %152 = cast(%var_3694, dtype="float32") /* ty=Tensor[(2, 6, 8), float32] */;
    %153 = cast(%var_3681, dtype="int16") /* ty=Tensor[(2, 1, 1), int16] */;
    %154 = cast(%var_3712, dtype="int16") /* ty=Tensor[(2, 8, 9), int16] */;
    %155 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %156 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %157 = multiply(%148, %149) /* ty=Tensor[(2, 15, 4), uint32] */;
    %158 = %150.1;
    %159 = floor_mod(%151, %152) /* ty=Tensor[(2, 6, 8), float32] */;
    %160 = @func_3564() /* ty=Tensor[(4, 6, 13), bool] */;
    %161 = maximum(%153, %154) /* ty=Tensor[(2, 8, 9), int16] */;
    %162 = @func_3080() /* ty=Tensor[(4, 6, 13), float64] */;
    %163 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
    %164 = %155.0;
    %165 = %156.0;
    (%157, %158, %159, %160, %161, %162, %163, %164, %165)
  };
  %166(%var_3732, %var_3733, %var_3734, %var_3735) /* ty=(Tensor[(2, 15, 4), uint32], Tensor[(4, 6, 13), bool], Tensor[(2, 6, 8), float32], Tensor[(4, 6, 13), bool], Tensor[(2, 8, 9), int16], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_17403() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], float32, Tensor[(1456), float32], Tensor[(14, 13, 8), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %180 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], float32, Tensor[(1456), float32], Tensor[(14, 13, 8), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
    %167 = @func_7682() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %168 = cast(4.51198f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %169 = cast(meta[relay.Constant][2] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %170 = reshape(%168, newshape=[]) /* ty=float32 */;
    %171 = reshape(%169, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), float32] */;
    %172 = @func_11485(%170, %171) /* ty=Tensor[(14, 13, 8), float32] */;
    %173 = cast(%172, dtype="float64") /* ty=Tensor[(14, 13, 8), float64] */;
    %174 = @func_3632() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %175 = %167.1;
    %176 = @func_14640() /* ty=Tensor[(4, 6, 13), bool] */;
    %177 = atanh(%173) /* ty=Tensor[(14, 13, 8), float64] */;
    %178 = %174.0;
    %179 = @func_12902() /* ty=Tensor[(4, 6, 13), float64] */;
    (%175, %176, 4.51198f /* ty=float32 */, meta[relay.Constant][2] /* ty=Tensor[(1456), float32] */, %177, %178, %179)
  };
  %180() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], float32, Tensor[(1456), float32], Tensor[(14, 13, 8), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_12271() -> Tensor[(4, 6, 13), float64] {
  @func_12269() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_12658(%var_12636: Tensor[(2, 10, 3), float64], %var_12637: Tensor[(2, 10, 3), float64]) -> (Tensor[(4, 6, 13), float32], Tensor[(2, 10, 3), float32], Tensor[(2, 10, 3), float32]) {
  %181 = @func_8016() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %182 = cast(%var_12637, dtype="float64") /* ty=Tensor[(2, 10, 3), float64] */;
  %183 = shape_of(%var_12636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%var_12636, dtype="float64") /* ty=Tensor[(2, 10, 3), float64] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %186 = divide(%184, %185) /* ty=Tensor[(2, 10, 3), float64] */;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(2, 10, 3), float32] */;
  %188 = sin(%187) /* ty=Tensor[(2, 10, 3), float32] */;
  %189 = cast(%188, dtype="float32") /* ty=Tensor[(2, 10, 3), float32] */;
  %190 = cast(%188, dtype="float32") /* ty=Tensor[(2, 10, 3), float32] */;
  %191 = %181.0;
  %192 = log(%189) /* ty=Tensor[(2, 10, 3), float32] */;
  %193 = asin(%190) /* ty=Tensor[(2, 10, 3), float32] */;
  (%191, %192, %193)
}

def @func_18572() -> Tensor[(280, 1), float32] {
  %194 = @func_18325() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(14, 5, 4), bool], Tensor[(280, 1), float32]) */;
  %194.2
}

def @func_17894() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_17892() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_17932() -> (Tensor[(4, 6, 13), float64],) {
  @func_17930() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_2133() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_1512() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %203 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
    %195 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %196 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %197 = %196.0;
    %198 = cast(%197, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
    %199 = reshape(%198, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
    %200 = @func_1327(%199) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
    %201 = %195.0;
    %202 = %200.0;
    (%201, %197, %202)
  };
  %203() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */
}

def @func_11592(%var_11590: Tensor[(8, 98), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(8, 98), int8]) {
  @func_11589(%var_11590) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(8, 98), int8]) */
}

def @func_9999() -> Tensor[(4, 6, 13), float64] {
  %205 = fn () -> Tensor[(4, 6, 13), float64] {
    %204 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %204.8
  };
  %205() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_2970() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_2968() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_18830() -> (Tensor[(4, 6, 13), float64],) {
  %208 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %206 = @func_10337() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %207 = %206.0;
    (%207,)
  };
  %208() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_12802() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_12800() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_19474() -> (Tensor[(784), int8], Tensor[(1001), float32], Tensor[(4, 6, 13), bool], Tensor[(312), float64]) {
  %209 = @func_10923() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), int8]) */;
  %210 = @func_19191() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(11, 7, 13), int32], Tensor[(1001), float32], Tensor[(4, 6, 13), float64]) */;
  %211 = cast(meta[relay.Constant][3] /* ty=Tensor[(312), float64] */, dtype="float64") /* ty=Tensor[(312), float64] */;
  %212 = reshape(%211, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %213 = @func_1259(%212) /* ty=(Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) */;
  %214 = %209.2;
  %215 = %210.4;
  %216 = %213.1;
  (%214, %215, %216, meta[relay.Constant][3] /* ty=Tensor[(312), float64] */)
}

def @func_15680(%var_15679: Tensor[(11, 7, 13), float32]) -> (Tensor[(11, 7, 13), float32], Tensor[(11, 7, 13), int32]) {
  %224 = fn (%var_15653: Tensor[(11, 7, 13), float32]) -> (Tensor[(11, 7, 13), float32], Tensor[(11, 7, 13), int32]) {
    %217 = cast(%var_15653, dtype="float32") /* ty=Tensor[(11, 7, 13), float32] */;
    %218 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 7, 13), float32] */, dtype="int32") /* ty=Tensor[(11, 7, 13), int32] */;
    %219 = shape_of(%var_15653, dtype="int32") /* ty=Tensor[(3), int32] */;
    %220 = cast(%var_15653, dtype="int32") /* ty=Tensor[(11, 7, 13), int32] */;
    %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %222 = erf(%217) /* ty=Tensor[(11, 7, 13), float32] */;
    %223 = add(%220, %221) /* ty=Tensor[(11, 7, 13), int32] */;
    (%222, %223)
  };
  %224(%var_15679) /* ty=(Tensor[(11, 7, 13), float32], Tensor[(11, 7, 13), int32]) */
}

def @func_19064() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_19062() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_13146(%var_13145: Tensor[(784), int8]) -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(8, 98), int64]) {
  %243 = fn (%var_13125: Tensor[(784), int8]) -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(8, 98), int64]) {
    %225 = @func_8016() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
    %226 = @func_4277() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %227 = cast(%var_13125, dtype="int8") /* ty=Tensor[(784), int8] */;
    %228 = reshape(%227, newshape=[8, 98]) /* ty=Tensor[(8, 98), int8] */;
    %229 = @func_11589(%228) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(8, 98), int8]) */;
    %230 = %229.3;
    %231 = cast(%var_13125, dtype="bool") /* ty=Tensor[(784), bool] */;
    %232 = shape_of(%230, dtype="int32") /* ty=Tensor[(2), int32] */;
    %233 = cast(%230, dtype="bool") /* ty=Tensor[(8, 98), bool] */;
    %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %235 = less_equal(%233, %234) /* ty=Tensor[(8, 98), bool] */;
    %236 = cast(%235, dtype="int64") /* ty=Tensor[(8, 98), int64] */;
    %237 = shape_of(%230, dtype="int32") /* ty=Tensor[(2), int32] */;
    %238 = cast(%230, dtype="int64") /* ty=Tensor[(8, 98), int64] */;
    %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %240 = %225.0;
    %241 = %226.1;
    %242 = minimum(%238, %239) /* ty=Tensor[(8, 98), int64] */;
    (%240, %241, %242)
  };
  %243(%var_13145) /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(8, 98), int64]) */
}

def @func_7195() -> (Tensor[(4, 6, 13), bool],) {
  %245 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %244 = @func_4035() /* ty=Tensor[(4, 6, 13), bool] */;
    (%244,)
  };
  %245() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_19778(%var_19768: Tensor[(2, 13, 8), float32]) -> (Tensor[(2, 13, 8), float32],) {
  %246 = cast(%var_19768, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
  %247 = sinh(%246) /* ty=Tensor[(2, 13, 8), float32] */;
  (%247,)
}

def @func_9544(%var_9542: Tensor[(54, 10), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint16]) {
  @func_9541(%var_9542) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint16]) */
}

def @func_8985() -> (Tensor[(4, 6, 13), bool],) {
  %248 = @func_4188() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %249 = %248.0;
  (%249,)
}

def @func_7775() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %255 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
    %250 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %251 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %252 = %250.0;
    %253 = @func_3564() /* ty=Tensor[(4, 6, 13), bool] */;
    %254 = %251.0;
    (%252, %253, %254)
  };
  %255() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_19242() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_19240() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_11771() -> (Tensor[(4, 6, 13), bool],) {
  %258 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %256 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %257 = %256.6;
    (%257,)
  };
  %258() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_5796() -> (Tensor[(4, 6, 13), bool],) {
  @func_5794() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_18032() -> (Tensor[(4, 6, 13), float64],) {
  %261 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %259 = @func_6206() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %260 = %259.0;
    (%260,)
  };
  %261() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_841() -> (Tensor[(4, 6, 13), float64],) {
  @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_18574() -> Tensor[(280, 1), float32] {
  @func_18572() /* ty=Tensor[(280, 1), float32] */
}

def @func_19834() -> (Tensor[(4, 6, 13), bool],) {
  @func_19832() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_13841() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_13839() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_12633() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_12631() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_11870() -> (Tensor[(4, 6, 13), float64],) {
  %262 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %263 = %262.1;
  (%263,)
}

def @func_1055() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %264 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %265 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %266 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %267 = %264.0;
  %268 = %265.0;
  %269 = %266.0;
  (%267, %268, %269)
}

def @func_3790() -> Tensor[(4, 6, 13), bool] {
  %270 = fn () -> Tensor[(4, 6, 13), bool] {
    @func_3659() /* ty=Tensor[(4, 6, 13), bool] */
  };
  %270() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_14762() -> (Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) {
  %278 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) {
    %271 = @func_5183() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %272 = cast(meta[relay.Constant][5] /* ty=Tensor[(1890), float32] */, dtype="float32") /* ty=Tensor[(1890), float32] */;
    %273 = reshape(%272, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), float32] */;
    %274 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %275 = %271.0;
    %276 = @func_13100(%273) /* ty=Tensor[(9, 14, 15), float32] */;
    %277 = %274.0;
    (%275, %276, meta[relay.Constant][5] /* ty=Tensor[(1890), float32] */, %277)
  };
  %278() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) */
}

def @func_9594() -> Tensor[(4, 6, 13), float64] {
  @func_9592() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_9747() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_9745() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_14273(%var_14271: Tensor[(11, 2, 16), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 2, 16), uint16]) {
  @func_14270(%var_14271) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 2, 16), uint16]) */
}

def @func_8921() -> (Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) {
  @func_8919() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) */
}

def @func_4481() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %279 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %280 = %279.0;
  %281 = cast(%280, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %282 = reshape(%281, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %283 = @func_1259(%282) /* ty=(Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) */;
  %284 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %285 = %283.1;
  %286 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  %287 = %284.1;
  (%280, %285, %286, %287)
}

def @func_7722() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint32], Tensor[(4, 6, 13), bool]) {
  @func_7720() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint32], Tensor[(4, 6, 13), bool]) */
}

def @func_15808() -> (Tensor[(4, 6, 13), float64],) {
  @func_15806() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_3284() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %288 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %289 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %290 = @func_2233() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %291 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %292 = %288.0;
  %293 = %289.0;
  %294 = %290.0;
  %295 = %291.2;
  (%292, %293, %294, %295)
}

def @func_5382() -> Tensor[(4, 6, 13), float64] {
  @func_3080() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_13102(%var_13101: Tensor[(9, 14, 15), float32]) -> Tensor[(9, 14, 15), float32] {
  %297 = fn (%var_13094: Tensor[(9, 14, 15), float32]) -> Tensor[(9, 14, 15), float32] {
    %296 = cast(%var_13094, dtype="float32") /* ty=Tensor[(9, 14, 15), float32] */;
    tan(%296) /* ty=Tensor[(9, 14, 15), float32] */
  };
  %297(%var_13101) /* ty=Tensor[(9, 14, 15), float32] */
}

def @func_15895() -> Tensor[(4, 6, 13), float64] {
  @func_9998() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_3559() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_7577(%var_7575: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), float64],) {
  @func_7574(%var_7575) /* ty=(Tensor[(16, 3, 12), float64],) */
}

def @func_8670() -> Tensor[(4, 6, 13), float64] {
  @func_8668() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_9875(%var_9857: float32, %var_9858: Tensor[(9, 9, 6), float32]) -> (Tensor[(9, 9, 6), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %298 = cast(%var_9857, dtype="float32") /* ty=float32 */;
  %299 = cast(%var_9858, dtype="float32") /* ty=Tensor[(9, 9, 6), float32] */;
  %300 = @func_4046() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %301 = floor_mod(%298, %299) /* ty=Tensor[(9, 9, 6), float32] */;
  %302 = %300.0;
  %303 = @func_6104() /* ty=Tensor[(4, 6, 13), float64] */;
  (%301, %302, %303)
}

def @func_11307() -> Tensor[(4, 6, 13), float64] {
  %304 = fn () -> Tensor[(4, 6, 13), float64] {
    @func_2360() /* ty=Tensor[(4, 6, 13), float64] */
  };
  %304() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_3286() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_3284() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_5270() -> Tensor[(4, 6, 13), float32] {
  %305 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %305.0
}

def @func_16579() -> Tensor[(4, 6, 13), float64] {
  @func_16577() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_12851(%var_12849: Tensor[(9, 14, 2), uint64], %var_12850: Tensor[(9, 14, 2), uint64]) -> Tensor[(9, 14, 2), int8] {
  @func_12847(%var_12849, %var_12850) /* ty=Tensor[(9, 14, 2), int8] */
}

def @func_7544() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_7542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_10938() -> Tensor[(4, 6, 13), float64] {
  @func_10936() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_8919() -> (Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) {
  %306 = @func_4944() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %307 = @func_7720() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint32], Tensor[(4, 6, 13), bool]) */;
  %308 = %306.0;
  %309 = %307.2;
  (%308, %309)
}

def @func_15222() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) {
  %310 = @func_14104() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %311 = @func_6278() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %312 = @func_8919() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) */;
  %313 = %310.0;
  %314 = %311.2;
  %315 = %312.1;
  (%313, %314, %315)
}

def @func_7542() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %316 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %317 = @func_1129() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %318 = @func_6780() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %319 = %316.8;
  %320 = %317.1;
  %321 = %318.0;
  (%319, %320, %321)
}

def @func_7845() -> (Tensor[(4, 6, 13), float64],) {
  %322 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
  (%322,)
}

def @func_19062() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %323 = @func_12378() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %324 = @func_18913() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %325 = @func_5183() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %326 = %323.1;
  %327 = %324.1;
  %328 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  %329 = %325.1;
  (%326, %327, %328, %329)
}

def @func_7898(%var_7896: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) {
  %330 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %331 = cast(%var_7896, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %332 = reshape(%331, newshape=[540]) /* ty=Tensor[(540), uint32] */;
  %333 = @func_5893(%332) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %334 = %330.0;
  %335 = %333.5;
  (%334, %335, %var_7896)
}

def @func_11637(%var_11616: uint32) -> (Tensor[(2, 3, 13), uint32], Tensor[(4, 6, 13), bool], Tensor[(1080), float64]) {
  %336 = cast(%var_11616, dtype="uint32") /* ty=uint32 */;
  %337 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 3, 13), uint32] */, dtype="uint32") /* ty=Tensor[(2, 3, 13), uint32] */;
  %338 = cast(%var_11616, dtype="float64") /* ty=float64 */;
  %339 = cast(meta[relay.Constant][7] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %340 = reshape(%338, newshape=[]) /* ty=float64 */;
  %341 = reshape(%339, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), float64] */;
  %342 = @func_7260(%340, %341) /* ty=(Tensor[(12, 10, 9), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %343 = add(%336, %337) /* ty=Tensor[(2, 3, 13), uint32] */;
  %344 = %342.4;
  (%343, %344, meta[relay.Constant][7] /* ty=Tensor[(1080), float64] */)
}

def @func_10167(%var_10165: Tensor[(486), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(486), bool]) {
  @func_10164(%var_10165) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(486), bool]) */
}

def @func_14216() -> Tensor[(4, 6, 13), bool] {
  @func_14214() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_6858() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_6856() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_11078() -> Tensor[(4, 6, 13), bool] {
  %346 = fn () -> Tensor[(4, 6, 13), bool] {
    %345 = @func_5326() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %345.2
  };
  %346() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_8569() -> Tensor[(4, 6, 13), float64] {
  %348 = fn () -> Tensor[(4, 6, 13), float64] {
    %347 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %347.0
  };
  %348() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_11589(%var_11586: Tensor[(8, 98), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(8, 98), int8]) {
  %349 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %350 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %351 = cast(%var_11586, dtype="int8") /* ty=Tensor[(8, 98), int8] */;
  %352 = cast(%var_11586, dtype="int8") /* ty=Tensor[(8, 98), int8] */;
  %353 = reshape(%351, newshape=[784]) /* ty=Tensor[(784), int8] */;
  %354 = reshape(%352, newshape=[784]) /* ty=Tensor[(784), int8] */;
  %355 = @func_11363(%353, %354) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), float64]) */;
  %356 = %349.0;
  %357 = %350.0;
  %358 = %355.1;
  (%356, %357, %358, %var_11586)
}

def @func_7060() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_7058() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_7574(%var_7566: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), float64],) {
  %359 = cast(%var_7566, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %360 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(16, 3, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %363 = maximum(%361, %362) /* ty=Tensor[(16, 3, 12), float64] */;
  (%363,)
}

def @func_1415() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
  %364 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %365 = @func_1129() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %366 = %364.0;
  %367 = %365.0;
  (%366, %367)
}

def @func_19240() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %368 = @func_16926() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(784), float64], Tensor[(784), int8], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %369 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %370 = %368.0;
  %371 = %369.0;
  (%370, %371)
}

def @func_12004() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_12002() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_5115() -> Tensor[(4, 6, 13), bool] {
  %372 = fn () -> Tensor[(4, 6, 13), bool] {
    @func_4494() /* ty=Tensor[(4, 6, 13), bool] */
  };
  %372() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_13517() -> (Tensor[(4, 6, 13), float64],) {
  %375 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %373 = @func_13315() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %374 = %373.0;
    (%374,)
  };
  %375() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_1565() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) {
  %382 = fn () -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) {
    %376 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %377 = %376.0;
    %378 = cast(%377, dtype="float32") /* ty=Tensor[(4, 6, 13), float32] */;
    %379 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %380 = acosh(%378) /* ty=Tensor[(4, 6, 13), float32] */;
    %381 = %379.1;
    (%380, %381)
  };
  %382() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */
}

def @func_16333() -> (Tensor[(4, 6, 13), float64],) {
  @func_16331() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_3607() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  %383 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %384 = @func_2486() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %385 = @func_2968() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %386 = %383.2;
  %387 = %384.1;
  %388 = %385.1;
  (%386, %387, %388)
}

def @func_15897() -> Tensor[(4, 6, 13), float64] {
  @func_15895() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_14837() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_14835() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_10936() -> Tensor[(4, 6, 13), float64] {
  %389 = @func_7445() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %389.0
}

def @func_4278() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %401 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %390 = @func_3632() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %391 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %392 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %393 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %394 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %395 = %390.0;
    %396 = %391.0;
    %397 = @func_4093() /* ty=Tensor[(4, 6, 13), bool] */;
    %398 = %392.0;
    %399 = %393.0;
    %400 = %394.0;
    (%395, %396, %397, %398, %399, %400)
  };
  %401() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_8987() -> (Tensor[(4, 6, 13), bool],) {
  @func_8985() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_4911() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_4909() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_9879(%var_9877: float32, %var_9878: Tensor[(9, 9, 6), float32]) -> (Tensor[(9, 9, 6), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_9875(%var_9877, %var_9878) /* ty=(Tensor[(9, 9, 6), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_7445() -> (Tensor[(4, 6, 13), float64],) {
  %402 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %403 = %402.1;
  (%403,)
}

def @func_1704() -> (Tensor[(4, 6, 13), bool],) {
  %404 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %405 = %404.0;
  %406 = cast(%405, dtype="float32") /* ty=Tensor[(4, 6, 13), float32] */;
  %407 = sin(%406) /* ty=Tensor[(4, 6, 13), float32] */;
  %408 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %409 = %408.1;
  %410 = cast(%409, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
  %411 = shape_of(%407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%407, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %414 = equal(%412, %413) /* ty=Tensor[(4, 6, 13), bool] */;
  (%414,)
}

def @func_6588() -> Tensor[(4, 6, 13), float64] {
  %415 = fn () -> Tensor[(4, 6, 13), float64] {
    @func_3080() /* ty=Tensor[(4, 6, 13), float64] */
  };
  %415() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_5611() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) {
  %416 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %417 = @func_4481() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %418 = cast(meta[relay.Constant][9] /* ty=Tensor[(540), uint32] */, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %419 = cast(meta[relay.Constant][9] /* ty=Tensor[(540), uint32] */, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %420 = reshape(%418, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %421 = reshape(%419, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %422 = @func_3937(%420, %421) /* ty=(Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %423 = %416.1;
  %424 = %417.0;
  %425 = %422.1;
  (%423, %424, %425, meta[relay.Constant][9] /* ty=Tensor[(540), uint32] */)
}

def @func_18984() -> (Tensor[(4, 6, 13), float64], Tensor[(486), float32], Tensor[(486), float32], Tensor[(4, 6, 13), float64]) {
  %426 = @func_2101() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %427 = cast(meta[relay.Constant][10] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %428 = reshape(%427, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %429 = @func_11914(%428) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], float32, Tensor[(486), float32]) */;
  %430 = @func_15489() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %431 = %426.1;
  %432 = %429.3;
  %433 = %430.0;
  (%431, %432, meta[relay.Constant][10] /* ty=Tensor[(486), float32] */, %433)
}

def @func_19412() -> Tensor[(4, 6, 13), float64] {
  @func_1925() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_13609() -> (Tensor[(4, 6, 13), bool],) {
  @func_13607() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_10164(%var_10155: Tensor[(486), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(486), bool]) {
  %434 = @func_7542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %435 = cast(9.2227f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %436 = cast(%var_10155, dtype="float32") /* ty=Tensor[(486), float32] */;
  %437 = reshape(%435, newshape=[]) /* ty=float32 */;
  %438 = reshape(%436, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float32] */;
  %439 = @func_9875(%437, %438) /* ty=(Tensor[(9, 9, 6), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %440 = @func_2009() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %441 = cast(%var_10155, dtype="bool") /* ty=Tensor[(486), bool] */;
  %442 = cast(9.2227f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %443 = %434.0;
  %444 = %439.1;
  %445 = %440.1;
  %446 = greater(%441, %442) /* ty=Tensor[(486), bool] */;
  (%443, %444, %445, %446)
}

def @func_12539() -> (Tensor[(4, 6, 13), bool],) {
  %448 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %447 = @func_9827() /* ty=Tensor[(4, 6, 13), bool] */;
    (%447,)
  };
  %448() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_3017() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_3015() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_17892() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %449 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %450 = @func_15806() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %451 = @func_9191() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %452 = %449.2;
  %453 = %450.0;
  %454 = @func_3564() /* ty=Tensor[(4, 6, 13), bool] */;
  %455 = %451.1;
  (%452, %453, %454, %455)
}

def @func_14942() -> Tensor[(3, 4, 2), float32] {
  @func_11242() /* ty=Tensor[(3, 4, 2), float32] */
}

def @func_19508() -> Tensor[(4, 6, 13), float64] {
  %457 = fn () -> Tensor[(4, 6, 13), float64] {
    %456 = @func_18549() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %456.3
  };
  %457() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_16927() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(784), float64], Tensor[(784), int8], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %473 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(784), float64], Tensor[(784), int8], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %458 = @func_10337() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %459 = @func_7542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %460 = cast(meta[relay.Constant][11] /* ty=Tensor[(784), int8] */, dtype="int8") /* ty=Tensor[(784), int8] */;
    %461 = cast(meta[relay.Constant][11] /* ty=Tensor[(784), int8] */, dtype="int8") /* ty=Tensor[(784), int8] */;
    %462 = reshape(%460, newshape=[784]) /* ty=Tensor[(784), int8] */;
    %463 = reshape(%461, newshape=[784]) /* ty=Tensor[(784), int8] */;
    %464 = @func_11363(%462, %463) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), float64]) */;
    %465 = @func_4188() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %466 = @func_2533() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %467 = %458.0;
    %468 = %459.0;
    %469 = %464.2;
    %470 = %465.1;
    %471 = @func_8668() /* ty=Tensor[(4, 6, 13), float64] */;
    %472 = %466.0;
    (%467, %468, %469, meta[relay.Constant][11] /* ty=Tensor[(784), int8] */, %470, %471, %472)
  };
  %473() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(784), float64], Tensor[(784), int8], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_14724() -> (Tensor[(4, 6, 13), bool],) {
  %476 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %474 = @func_8857() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %475 = %474.1;
    (%475,)
  };
  %476() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_2171() -> Tensor[(4, 6, 13), float64] {
  %478 = fn () -> Tensor[(4, 6, 13), float64] {
    %477 = @func_2101() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %477.1
  };
  %478() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_16598() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %479 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %480 = @func_14761() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) */;
  %481 = %479.0;
  %482 = %480.3;
  (%481, %482)
}

def @func_17074() -> (Tensor[(4, 6, 13), bool],) {
  @func_17072() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_17551() -> (Tensor[(4, 6, 13), float64], Tensor[(3, 11, 2), bool]) {
  %483 = @func_4722() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %484 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 11, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 2), float64] */;
  %485 = acosh(%484) /* ty=Tensor[(3, 11, 2), float64] */;
  %486 = cast(%485, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %487 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(3, 11, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 11, 2), float64] */, dtype="bool") /* ty=Tensor[(3, 11, 2), bool] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %490 = %483.0;
  %491 = less_equal(%488, %489) /* ty=Tensor[(3, 11, 2), bool] */;
  (%490, %491)
}

def @func_12109() -> (Tensor[(4, 6, 13), bool],) {
  @func_12107() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_10789() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %492 = @func_5794() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %493 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %494 = %492.0;
  %495 = %493.0;
  %496 = @func_9239() /* ty=Tensor[(4, 6, 13), bool] */;
  (%494, %495, %496)
}

def @func_2845() -> Tensor[(4, 6, 13), float64] {
  @func_2052() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_11726() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %500 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %497 = @func_11009() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %498 = %497.2;
    %499 = @func_9998() /* ty=Tensor[(4, 6, 13), float64] */;
    (%498, %499)
  };
  %500() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_5257() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %501 = @func_3632() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %502 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %503 = %501.0;
  %504 = %502.1;
  (%503, %504)
}

def @func_6417(%var_6414: Tensor[(264), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) {
  %505 = cast(%var_6414, dtype="float64") /* ty=Tensor[(264), float64] */;
  %506 = cast(%var_6414, dtype="float64") /* ty=Tensor[(264), float64] */;
  %507 = reshape(%505, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %508 = reshape(%506, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %509 = @func_3214(%507, %508) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32]) */;
  %510 = @func_5382() /* ty=Tensor[(4, 6, 13), float64] */;
  %511 = %509.3;
  (%510, %511, %var_6414)
}

def @func_11608() -> Tensor[(6, 14, 8), float32] {
  @func_11606() /* ty=Tensor[(6, 14, 8), float32] */
}

def @func_2101() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %512 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %513 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %514 = %512.0;
  %515 = @func_1925() /* ty=Tensor[(4, 6, 13), float64] */;
  %516 = %513.0;
  (%514, %515, %516)
}

def @func_9081(%var_9077: Tensor[(4, 196), int8], %var_9078: Tensor[(4, 196), float64], %var_9079: Tensor[(4, 196), int8], %var_9080: Tensor[(4, 196), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(4, 196), int64], Tensor[(4, 6, 13), float64], Tensor[(4, 196), bool]) {
  %551 = fn (%var_9020: Tensor[(4, 196), int8], %var_9026: Tensor[(4, 196), float64], %var_9030: Tensor[(4, 196), int8], %var_9069: Tensor[(4, 196), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(4, 196), int64], Tensor[(4, 6, 13), float64], Tensor[(4, 196), bool]) {
    %517 = @func_3607() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
    %518 = cast(%var_9020, dtype="int8") /* ty=Tensor[(4, 196), int8] */;
    %519 = cast(%var_9020, dtype="int8") /* ty=Tensor[(4, 196), int8] */;
    %520 = reshape(%518, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
    %521 = reshape(%519, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
    %522 = @func_5573(%520, %521) /* ty=(Tensor[(8, 7, 14), int64],) */;
    %523 = cast(%var_9030, dtype="uint8") /* ty=Tensor[(4, 196), uint8] */;
    %524 = shape_of(%var_9020, dtype="int32") /* ty=Tensor[(2), int32] */;
    %525 = cast(%var_9020, dtype="uint8") /* ty=Tensor[(4, 196), uint8] */;
    %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %527 = bitwise_or(%525, %526) /* ty=Tensor[(4, 196), uint8] */;
    %528 = cast(%527, dtype="int64") /* ty=Tensor[(4, 196), int64] */;
    %529 = shape_of(%var_9030, dtype="int32") /* ty=Tensor[(2), int32] */;
    %530 = cast(%var_9030, dtype="int64") /* ty=Tensor[(4, 196), int64] */;
    %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %532 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %533 = cast(%var_9020, dtype="float64") /* ty=Tensor[(4, 196), float64] */;
    %534 = acosh(%533) /* ty=Tensor[(4, 196), float64] */;
    %535 = cast(%var_9026, dtype="float64") /* ty=Tensor[(4, 196), float64] */;
    %536 = shape_of(%534, dtype="int32") /* ty=Tensor[(2), int32] */;
    %537 = cast(%534, dtype="float64") /* ty=Tensor[(4, 196), float64] */;
    %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %539 = floor_divide(%537, %538) /* ty=Tensor[(4, 196), float64] */;
    %540 = cast(%539, dtype="float64") /* ty=Tensor[(4, 196), float64] */;
    %541 = atan(%540) /* ty=Tensor[(4, 196), float64] */;
    %542 = cast(%var_9069, dtype="bool") /* ty=Tensor[(4, 196), bool] */;
    %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(2), int32] */;
    %544 = cast(%541, dtype="bool") /* ty=Tensor[(4, 196), bool] */;
    %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %546 = %517.2;
    %547 = %522.0;
    %548 = maximum(%530, %531) /* ty=Tensor[(4, 196), int64] */;
    %549 = %532.0;
    %550 = logical_or(%544, %545) /* ty=Tensor[(4, 196), bool] */;
    (%546, %547, %548, %549, %550)
  };
  %551(%var_9077, %var_9078, %var_9079, %var_9080) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(4, 196), int64], Tensor[(4, 6, 13), float64], Tensor[(4, 196), bool]) */
}

def @func_13369() -> (Tensor[(4, 6, 13), bool],) {
  %554 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %552 = @func_4836() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %553 = %552.0;
    (%553,)
  };
  %554() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_4190() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  @func_4188() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */
}

def @func_8173() -> (Tensor[(4, 6, 13), bool],) {
  %555 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %556 = %555.0;
  (%556,)
}

def @func_6037(%var_6036: Tensor[(525), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(7, 15, 5), bool], Tensor[(525), uint32], Tensor[(4, 6, 13), bool]) {
  %566 = fn (%var_6012: Tensor[(525), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(7, 15, 5), bool], Tensor[(525), uint32], Tensor[(4, 6, 13), bool]) {
    %557 = cast(%var_6012, dtype="uint32") /* ty=Tensor[(525), uint32] */;
    %558 = reshape(%557, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
    %559 = @func_5694(%558) /* ty=(Tensor[(7, 15, 5), bool],) */;
    %560 = @func_4494() /* ty=Tensor[(4, 6, 13), bool] */;
    %561 = cast(%560, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
    %562 = reshape(%561, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
    %563 = @func_1327(%562) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
    %564 = %559.0;
    %565 = %563.2;
    (%560, %564, %var_6012, %565)
  };
  %566(%var_6036) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(7, 15, 5), bool], Tensor[(525), uint32], Tensor[(4, 6, 13), bool]) */
}

def @func_16600() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  @func_16598() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */
}

def @func_909() -> (Tensor[(4, 6, 13), float64],) {
  @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_12676() -> Tensor[(4, 6, 13), bool] {
  @func_12674() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_8828(%var_8826: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(540), uint32]) {
  @func_8825(%var_8826) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(540), uint32]) */
}

def @func_5717() -> (Tensor[(4, 6, 13), bool],) {
  %567 = @func_5114() /* ty=Tensor[(4, 6, 13), bool] */;
  (%567,)
}

def @func_11260() -> Tensor[(4, 6, 13), float64] {
  %569 = fn () -> Tensor[(4, 6, 13), float64] {
    %568 = @func_4736() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %568.0
  };
  %569() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_13596(%var_13594: uint16, %var_13595: Tensor[(528), uint8]) -> (Tensor[(8, 1, 6), uint16], Tensor[(12, 4, 11), uint8], Tensor[(528), uint8], Tensor[(4, 6, 13), bool]) {
  @func_13592(%var_13594, %var_13595) /* ty=(Tensor[(8, 1, 6), uint16], Tensor[(12, 4, 11), uint8], Tensor[(528), uint8], Tensor[(4, 6, 13), bool]) */
}

def @func_11052() -> Tensor[(4, 6, 13), bool] {
  %570 = fn () -> Tensor[(4, 6, 13), bool] {
    @func_9314() /* ty=Tensor[(4, 6, 13), bool] */
  };
  %570() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_8107(%var_8094: Tensor[(7, 5, 16), float32]) -> Tensor[(7, 5, 16), float32] {
  %571 = cast(%var_8094, dtype="float32") /* ty=Tensor[(7, 5, 16), float32] */;
  cos(%571) /* ty=Tensor[(7, 5, 16), float32] */
}

def @func_8052() -> (Tensor[(4, 6, 13), float64],) {
  @func_8050() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_18459() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_18457() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_3633() -> (Tensor[(4, 6, 13), bool],) {
  %574 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %572 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %573 = %572.0;
    (%573,)
  };
  %574() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_5696(%var_5695: Tensor[(7, 15, 5), uint32]) -> (Tensor[(7, 15, 5), bool],) {
  %580 = fn (%var_5688: Tensor[(7, 15, 5), uint32]) -> (Tensor[(7, 15, 5), bool],) {
    %575 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 15, 5), uint32] */, dtype="bool") /* ty=Tensor[(7, 15, 5), bool] */;
    %576 = shape_of(%var_5688, dtype="int32") /* ty=Tensor[(3), int32] */;
    %577 = cast(%var_5688, dtype="bool") /* ty=Tensor[(7, 15, 5), bool] */;
    %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %579 = equal(%577, %578) /* ty=Tensor[(7, 15, 5), bool] */;
    (%579,)
  };
  %580(%var_5695) /* ty=(Tensor[(7, 15, 5), bool],) */
}

def @func_14640() -> Tensor[(4, 6, 13), bool] {
  %581 = @func_2968() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %581.0
}

def @func_3565() -> Tensor[(4, 6, 13), bool] {
  %583 = fn () -> Tensor[(4, 6, 13), bool] {
    %582 = @func_2018() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %582.0
  };
  %583() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_16644() -> Tensor[(4, 6, 13), bool] {
  %584 = @func_5986() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %584.2
}

def @func_11392(%var_11386: Tensor[(12, 4, 11), uint8], %var_11387: Tensor[(12, 4, 11), uint8]) -> Tensor[(12, 4, 11), uint8] {
  %585 = cast(%var_11387, dtype="uint8") /* ty=Tensor[(12, 4, 11), uint8] */;
  %586 = shape_of(%var_11386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%var_11386, dtype="uint8") /* ty=Tensor[(12, 4, 11), uint8] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%587, %588) /* ty=Tensor[(12, 4, 11), uint8] */
}

def @func_3080() -> Tensor[(4, 6, 13), float64] {
  %589 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %589.0
}

def @func_16577() -> Tensor[(4, 6, 13), float64] {
  %590 = @func_10518() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %590.1
}

def @func_16260(%var_16258: Tensor[(330), float32], %var_16259: Tensor[(3, 88), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(330), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(3, 12, 4), bool], Tensor[(144), uint32], Tensor[(4, 6, 13), float64], Tensor[(3, 88), float64], Tensor[(4, 6, 13), bool]) {
  %614 = fn (%var_16196: Tensor[(330), float32], %var_16247: Tensor[(3, 88), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(330), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(3, 12, 4), bool], Tensor[(144), uint32], Tensor[(4, 6, 13), float64], Tensor[(3, 88), float64], Tensor[(4, 6, 13), bool]) {
    %591 = cast(%var_16196, dtype="float32") /* ty=Tensor[(330), float32] */;
    %592 = reshape(%591, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
    %593 = @func_5483(%592) /* ty=(Tensor[(11, 6, 5), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %594 = @func_7194() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %595 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %596 = cast(%var_16196, dtype="float32") /* ty=Tensor[(330), float32] */;
    %597 = @func_8857() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %598 = cast(meta[relay.Constant][14] /* ty=Tensor[(144), uint32] */, dtype="uint32") /* ty=Tensor[(144), uint32] */;
    %599 = reshape(%598, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), uint32] */;
    %600 = cast(%var_16247, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
    %601 = reshape(%600, newshape=[264]) /* ty=Tensor[(264), float64] */;
    %602 = @func_6417(%601) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) */;
    %603 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %604 = @func_5912() /* ty=Tensor[(4, 6, 13), float64] */;
    %605 = %593.2;
    %606 = %594.0;
    %607 = %595.1;
    %608 = cos(%596) /* ty=Tensor[(330), float32] */;
    %609 = %597.1;
    %610 = @func_14640() /* ty=Tensor[(4, 6, 13), bool] */;
    %611 = @func_6527(%599) /* ty=Tensor[(3, 12, 4), bool] */;
    %612 = %602.0;
    %613 = %603.0;
    (%604, %605, %606, %607, %608, %609, %610, %611, meta[relay.Constant][14] /* ty=Tensor[(144), uint32] */, %612, %var_16247, %613)
  };
  %614(%var_16258, %var_16259) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(330), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(3, 12, 4), bool], Tensor[(144), uint32], Tensor[(4, 6, 13), float64], Tensor[(3, 88), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_15555() -> (Tensor[(4, 6, 13), bool],) {
  %615 = @func_5794() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %616 = %615.0;
  (%616,)
}

def @func_14448() -> (Tensor[(4, 6, 13), float64],) {
  @func_14446() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_19287(%var_19285: Tensor[(2, 5, 12), uint64], %var_19286: Tensor[(2, 5, 12), uint64]) -> (Tensor[(2, 5, 12), bool], Tensor[(4, 6, 13), float64], Tensor[(280, 1), float32]) {
  %624 = fn (%var_19255: Tensor[(2, 5, 12), uint64], %var_19256: Tensor[(2, 5, 12), uint64]) -> (Tensor[(2, 5, 12), bool], Tensor[(4, 6, 13), float64], Tensor[(280, 1), float32]) {
    %617 = cast(%var_19256, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
    %618 = shape_of(%var_19255, dtype="int32") /* ty=Tensor[(3), int32] */;
    %619 = cast(%var_19255, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
    %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %621 = less_equal(%619, %620) /* ty=Tensor[(2, 5, 12), bool] */;
    %622 = @func_10936() /* ty=Tensor[(4, 6, 13), float64] */;
    %623 = @func_18572() /* ty=Tensor[(280, 1), float32] */;
    (%621, %622, %623)
  };
  %624(%var_19285, %var_19286) /* ty=(Tensor[(2, 5, 12), bool], Tensor[(4, 6, 13), float64], Tensor[(280, 1), float32]) */
}

def @func_3557() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %625 = @func_2233() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %626 = @func_2486() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %627 = %626.1;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %629 = %625.0;
  %630 = log2(%628) /* ty=Tensor[(4, 6, 13), float64] */;
  (%629, %630)
}

def @func_18766() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(7, 15, 5), bool], Tensor[(5, 105), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %631 = @func_14972() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %632 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 105), uint32] */, dtype="uint32") /* ty=Tensor[(5, 105), uint32] */;
  %633 = reshape(%632, newshape=[7, 15, 5]) /* ty=Tensor[(7, 15, 5), uint32] */;
  %634 = @func_5694(%633) /* ty=(Tensor[(7, 15, 5), bool],) */;
  %635 = @func_2295() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %636 = @func_6715() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %637 = @func_12269() /* ty=Tensor[(4, 6, 13), float64] */;
  %638 = %631.0;
  %639 = %634.0;
  %640 = %635.0;
  %641 = %636.0;
  (%637, %638, %639, meta[relay.Constant][15] /* ty=Tensor[(5, 105), uint32] */, %640, %641)
}

def @func_4774() -> Tensor[(4, 6, 13), float32] {
  %642 = @func_1511() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %643 = %642.0;
  %644 = cast(%643, dtype="float32") /* ty=Tensor[(4, 6, 13), float32] */;
  cosh(%644) /* ty=Tensor[(4, 6, 13), float32] */
}

def @func_5348() -> Tensor[(4, 6, 13), float64] {
  %646 = fn () -> Tensor[(4, 6, 13), float64] {
    %645 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %645.0
  };
  %646() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_19844() -> Tensor[(4, 6, 13), bool] {
  @func_19842() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_14310() -> Tensor[(4, 6, 13), float64] {
  @func_14308() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_16672() -> (Tensor[(4, 6, 13), float64],) {
  %649 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %647 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %648 = %647.1;
    (%648,)
  };
  %649() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_19938() -> Tensor[(4, 6, 13), bool] {
  @func_19936() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_1818() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %650 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %651 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %652 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %653 = %652.0;
  %654 = cast(%653, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %655 = reshape(%654, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %656 = @func_1327(%655) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %657 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %658 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %659 = %658.1;
  %660 = cast(%659, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %661 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %662 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %663 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %664 = %650.1;
  %665 = %651.0;
  %666 = %656.3;
  %667 = %657.0;
  %668 = sqrt(%660) /* ty=Tensor[(4, 6, 13), float64] */;
  %669 = %661.0;
  %670 = %662.0;
  %671 = %663.0;
  (%664, %665, %653, %666, %667, %668, %669, %670, %671)
}

def @func_1927() -> Tensor[(4, 6, 13), float64] {
  @func_1925() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_19323() -> (Tensor[(54, 10), float32], Tensor[(4, 6, 13), float64], Tensor[(54, 10), float32]) {
  %680 = fn () -> (Tensor[(54, 10), float32], Tensor[(4, 6, 13), float64], Tensor[(54, 10), float32]) {
    %672 = @func_9391() /* ty=(Tensor[(54, 10), uint32],) */;
    %673 = %672.0;
    %674 = cast(%673, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
    %675 = @func_12039() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %676 = cast(%673, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
    %677 = atan(%674) /* ty=Tensor[(54, 10), float32] */;
    %678 = %675.0;
    %679 = acos(%676) /* ty=Tensor[(54, 10), float32] */;
    (%677, %678, %679)
  };
  %680() /* ty=(Tensor[(54, 10), float32], Tensor[(4, 6, 13), float64], Tensor[(54, 10), float32]) */
}

def @func_8017() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) {
  %684 = fn () -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) {
    %681 = @func_4046() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %682 = @func_4774() /* ty=Tensor[(4, 6, 13), float32] */;
    %683 = %681.0;
    (%682, %683)
  };
  %684() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */
}

def @func_14007(%var_14005: Tensor[(9, 2, 10), bool], %var_14006: Tensor[(9, 2, 10), bool]) -> Tensor[(9, 2, 10), float64] {
  @func_14003(%var_14005, %var_14006) /* ty=Tensor[(9, 2, 10), float64] */
}

def @func_907() -> (Tensor[(4, 6, 13), float64],) {
  %685 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %686 = %685.0;
  (%686,)
}

def @func_17930() -> (Tensor[(4, 6, 13), float64],) {
  %687 = @func_11218() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %688 = %687.1;
  (%688,)
}

def @func_2020() -> (Tensor[(4, 6, 13), bool],) {
  @func_2018() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_14973() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %693 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
    %689 = @func_9139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %690 = @func_1511() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %691 = %689.2;
    %692 = %690.1;
    (%691, %692)
  };
  %693() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */
}

def @func_16513() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %694 = @func_9998() /* ty=Tensor[(4, 6, 13), float64] */;
  %695 = @func_13328() /* ty=Tensor[(4, 6, 13), float64] */;
  (%694, %695)
}

def @func_5035(%var_5033: Tensor[(13, 6, 13), float32]) -> (Tensor[(13, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(13, 6, 13), bool]) {
  @func_5032(%var_5033) /* ty=(Tensor[(13, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(13, 6, 13), bool]) */
}

def @func_12674() -> Tensor[(4, 6, 13), bool] {
  %696 = @func_10789() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %696.0
}

def @func_11963() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %697 = @func_10134() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %698 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %699 = %697.0;
  %700 = %698.0;
  (%699, %700)
}

def @func_4722() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %701 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %702 = %701.1;
  %703 = @func_2845() /* ty=Tensor[(4, 6, 13), float64] */;
  (%702, %703)
}

def @func_5576(%var_5574: Tensor[(8, 7, 14), int8], %var_5575: Tensor[(8, 7, 14), int8]) -> (Tensor[(8, 7, 14), int64],) {
  %712 = fn (%var_5558: Tensor[(8, 7, 14), int8], %var_5562: Tensor[(8, 7, 14), int8]) -> (Tensor[(8, 7, 14), int64],) {
    %704 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 1, 14), int8] */, dtype="int8") /* ty=Tensor[(8, 1, 14), int8] */;
    %705 = cast(%var_5558, dtype="int8") /* ty=Tensor[(8, 7, 14), int8] */;
    %706 = bitwise_and(%704, %705) /* ty=Tensor[(8, 7, 14), int8] */;
    %707 = cast(%var_5562, dtype="int64") /* ty=Tensor[(8, 7, 14), int64] */;
    %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
    %709 = cast(%706, dtype="int64") /* ty=Tensor[(8, 7, 14), int64] */;
    %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %711 = right_shift(%709, %710) /* ty=Tensor[(8, 7, 14), int64] */;
    (%711,)
  };
  %712(%var_5574, %var_5575) /* ty=(Tensor[(8, 7, 14), int64],) */
}

def @func_6279() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %719 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %713 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %714 = @func_4909() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %715 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %716 = %713.2;
    %717 = %714.1;
    %718 = %715.0;
    (%716, %717, %718)
  };
  %719() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_9314() -> Tensor[(4, 6, 13), bool] {
  %720 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %720.1
}

def @func_1131() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_1129() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_4495() -> Tensor[(4, 6, 13), bool] {
  %722 = fn () -> Tensor[(4, 6, 13), bool] {
    %721 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %721.0
  };
  %722() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_15130(%var_15128: float64) -> (Tensor[(1, 7, 15), float32], Tensor[(4, 6, 13), bool], Tensor[(9, 6, 10), uint32], Tensor[(540), uint32], Tensor[(4, 6, 13), float64]) {
  @func_15127(%var_15128) /* ty=(Tensor[(1, 7, 15), float32], Tensor[(4, 6, 13), bool], Tensor[(9, 6, 10), uint32], Tensor[(540), uint32], Tensor[(4, 6, 13), float64]) */
}

def @func_14798() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %723 = @func_7194() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %724 = @func_7194() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %725 = %723.0;
  %726 = %724.0;
  (%725, %726)
}

def @func_11965() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_11963() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_8078() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_8076() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_10301() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_10299() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_2296() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %735 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
    %727 = @func_2233() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %728 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %729 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %730 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %731 = %727.0;
    %732 = %728.0;
    %733 = %729.0;
    %734 = %730.0;
    (%731, %732, %733, %734)
  };
  %735() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */
}

def @func_17507() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_17505() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_9924() -> Tensor[(4, 6, 13), float64] {
  @func_9922() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_19476() -> (Tensor[(784), int8], Tensor[(1001), float32], Tensor[(4, 6, 13), bool], Tensor[(312), float64]) {
  @func_19474() /* ty=(Tensor[(784), int8], Tensor[(1001), float32], Tensor[(4, 6, 13), bool], Tensor[(312), float64]) */
}

def @func_17505() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %736 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %737 = @func_14761() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) */;
  %738 = @func_11009() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %739 = %736.0;
  %740 = %737.3;
  %741 = %738.0;
  (%739, %740, %741)
}

def @func_16701() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %742 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %743 = @func_7845() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %744 = @func_7542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %745 = %742.0;
  %746 = @func_2360() /* ty=Tensor[(4, 6, 13), float64] */;
  %747 = %743.0;
  %748 = %744.2;
  (%745, %746, %747, %748)
}

def @func_10791() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_10789() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_6812() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_6810() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_19193() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(11, 7, 13), int32], Tensor[(1001), float32], Tensor[(4, 6, 13), float64]) {
  @func_19191() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(11, 7, 13), int32], Tensor[(1001), float32], Tensor[(4, 6, 13), float64]) */
}

def @func_6527(%var_6522: Tensor[(3, 12, 4), uint32]) -> Tensor[(3, 12, 4), bool] {
  %749 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 12, 4), uint32] */, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %750 = shape_of(%var_6522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%var_6522, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%751, %752) /* ty=Tensor[(3, 12, 4), bool] */
}

def @func_13316() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %756 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %753 = @func_13238() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %754 = %753.1;
    %755 = @func_9827() /* ty=Tensor[(4, 6, 13), bool] */;
    (%754, %755)
  };
  %756() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_2651() -> Tensor[(4, 6, 13), float64] {
  @func_2649() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_3867() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %757 = @func_2486() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %758 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %759 = @func_3341() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %760 = %757.1;
  %761 = %758.0;
  %762 = %759.0;
  (%760, %761, %762)
}

def @func_3869() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_3867() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_4644() -> (Tensor[(4, 6, 13), float64],) {
  %763 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  (%763,)
}

def @func_12662(%var_12660: Tensor[(2, 10, 3), float64], %var_12661: Tensor[(2, 10, 3), float64]) -> (Tensor[(4, 6, 13), float32], Tensor[(2, 10, 3), float32], Tensor[(2, 10, 3), float32]) {
  @func_12658(%var_12660, %var_12661) /* ty=(Tensor[(4, 6, 13), float32], Tensor[(2, 10, 3), float32], Tensor[(2, 10, 3), float32]) */
}

def @func_9702() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %764 = @func_4944() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %765 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %766 = %764.1;
  %767 = @func_8668() /* ty=Tensor[(4, 6, 13), float64] */;
  %768 = %765.1;
  (%766, %767, %768)
}

def @func_4412() -> (Tensor[(4, 6, 13), bool],) {
  @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_8801() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %777 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
    %769 = @func_8016() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
    %770 = @func_7845() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %771 = @func_6856() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %772 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %773 = %769.1;
    %774 = %770.0;
    %775 = %771.1;
    %776 = %772.1;
    (%773, %774, %775, %776)
  };
  %777() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_18475() -> Tensor[(4, 6, 13), bool] {
  %779 = fn () -> Tensor[(4, 6, 13), bool] {
    %778 = @func_8800() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %778.2
  };
  %779() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_1602() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %780 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %781 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %782 = %780.0;
  %783 = %781.0;
  (%782, %783)
}

def @func_10135() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %788 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %784 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %785 = @func_6856() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %786 = %784.1;
    %787 = %785.1;
    (%786, %787)
  };
  %788() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_4116() -> Tensor[(4, 6, 13), float64] {
  @func_1925() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_6234() -> Tensor[(4, 6, 13), float64] {
  @func_6232() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_19490(%var_19488: Tensor[(16, 12, 5), int16], %var_19489: Tensor[(16, 12, 5), int16]) -> Tensor[(16, 12, 5), bool] {
  @func_19486(%var_19488, %var_19489) /* ty=Tensor[(16, 12, 5), bool] */
}

def @func_17092() -> Tensor[(4, 6, 13), float64] {
  %790 = fn () -> Tensor[(4, 6, 13), float64] {
    %789 = @func_10360() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %789.0
  };
  %790() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_5895(%var_5894: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %805 = fn (%var_5817: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %791 = @func_3284() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %792 = cast(%var_5817, dtype="uint32") /* ty=Tensor[(540), uint32] */;
    %793 = cast(%var_5817, dtype="uint32") /* ty=Tensor[(540), uint32] */;
    %794 = reshape(%792, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
    %795 = reshape(%793, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
    %796 = @func_3937(%794, %795) /* ty=(Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %797 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %798 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %799 = %791.2;
    %800 = %796.1;
    %801 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
    %802 = %797.1;
    %803 = @func_4116() /* ty=Tensor[(4, 6, 13), float64] */;
    %804 = %798.1;
    (%799, %800, %var_5817, %801, %802, %803, %804)
  };
  %805(%var_5894) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_8460() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %811 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %806 = @func_3341() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %807 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %808 = %806.1;
    %809 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
    %810 = %807.1;
    (%808, %809, %810)
  };
  %811() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_12024() -> (Tensor[(4, 6, 13), bool],) {
  @func_12022() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_15224() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) {
  @func_15222() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) */
}

def @func_5719() -> (Tensor[(4, 6, 13), bool],) {
  @func_5717() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_12039() -> (Tensor[(4, 6, 13), float64],) {
  %812 = @func_6232() /* ty=Tensor[(4, 6, 13), float64] */;
  (%812,)
}

def @func_7387(%var_7385: Tensor[(169, 6), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(264), float64], Tensor[(264), float64], Tensor[(169, 6), int16], Tensor[(4, 6, 13), bool]) {
  @func_7384(%var_7385) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(264), float64], Tensor[(264), float64], Tensor[(169, 6), int16], Tensor[(4, 6, 13), bool]) */
}

def @func_19414() -> Tensor[(4, 6, 13), float64] {
  @func_19412() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_4139() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %813 = @func_3867() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %814 = %813.0;
  %815 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 6, 13), float32] */, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %816 = shape_of(%814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%814, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %819 = @func_2233() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %820 = mod(%817, %818) /* ty=Tensor[(4, 6, 13), float64] */;
  %821 = %819.0;
  (%820, %821)
}

def @func_13239() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %824 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
    %822 = @func_12674() /* ty=Tensor[(4, 6, 13), bool] */;
    %823 = @func_4116() /* ty=Tensor[(4, 6, 13), float64] */;
    (%822, %823)
  };
  %824() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_5913() -> Tensor[(4, 6, 13), float64] {
  %826 = fn () -> Tensor[(4, 6, 13), float64] {
    %825 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %825.1
  };
  %826() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_12344() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %831 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
    %827 = @func_5611() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) */;
    %828 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %829 = %827.0;
    %830 = %828.0;
    (%829, %830)
  };
  %831() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_2009() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  %832 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %833 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %834 = @func_1511() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %835 = %834.2;
  %836 = cast(%835, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %837 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %838 = @func_1129() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %839 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %840 = %832.0;
  %841 = %833.0;
  %842 = erf(%836) /* ty=Tensor[(4, 6, 13), float64] */;
  %843 = %837.0;
  %844 = %838.0;
  %845 = %839.0;
  (%840, %841, %842, %843, %844, %845)
}

def @func_15489() -> (Tensor[(4, 6, 13), float64],) {
  %846 = @func_10894() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %847 = %846.0;
  (%847,)
}

def @func_4410() -> (Tensor[(4, 6, 13), bool],) {
  %848 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  (%848,)
}

def @func_15575() -> (Tensor[(4, 6, 13), float64],) {
  %851 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %849 = @func_14708() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %850 = %849.0;
    (%850,)
  };
  %851() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_8825(%var_8820: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(540), uint32]) {
  %852 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %853 = cast(%var_8820, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %854 = reshape(%853, newshape=[540]) /* ty=Tensor[(540), uint32] */;
  %855 = @func_7898(%854) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) */;
  %856 = %852.0;
  %857 = %855.0;
  (%856, %857, %var_8820)
}

def @func_13470() -> (Tensor[(4, 6, 13), bool],) {
  @func_13468() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_3941(%var_3939: Tensor[(9, 6, 10), uint32], %var_3940: Tensor[(9, 6, 10), uint32]) -> (Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_3937(%var_3939, %var_3940) /* ty=(Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_18657() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %862 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %858 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %859 = @func_14386() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %860 = %858.0;
    %861 = %859.1;
    (%860, %861)
  };
  %862() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_2847() -> Tensor[(4, 6, 13), float64] {
  @func_2845() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_2627() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) {
  @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */
}

def @func_4310() -> (Tensor[(4, 6, 13), bool],) {
  %865 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %863 = @func_2295() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %864 = %863.3;
    (%864,)
  };
  %865() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_2544() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_9829() -> Tensor[(4, 6, 13), bool] {
  @func_9827() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_14106() -> (Tensor[(4, 6, 13), bool],) {
  @func_14104() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_12041() -> (Tensor[(4, 6, 13), float64],) {
  @func_12039() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_13409() -> (Tensor[(4, 6, 13), bool], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) {
  @func_13407() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) */
}

def @func_12800() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %866 = @func_7445() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %867 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %868 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %869 = %866.0;
  %870 = @func_12674() /* ty=Tensor[(4, 6, 13), bool] */;
  %871 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
  %872 = %867.1;
  %873 = %868.0;
  (%869, %870, %871, %872, %873)
}

def @func_4776() -> Tensor[(4, 6, 13), float32] {
  @func_4774() /* ty=Tensor[(4, 6, 13), float32] */
}

def @func_5091() -> Tensor[(4, 6, 13), float64] {
  %874 = @func_4277() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %874.5
}

def @func_17715(%var_17709: uint16) -> (Tensor[(10, 2, 11), bool],) {
  %875 = cast(%var_17709, dtype="bool") /* ty=bool */;
  %876 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 2, 11), uint16] */, dtype="bool") /* ty=Tensor[(10, 2, 11), bool] */;
  %877 = less_equal(%875, %876) /* ty=Tensor[(10, 2, 11), bool] */;
  (%877,)
}

def @func_13713() -> Tensor[(4, 6, 13), float64] {
  %878 = fn () -> Tensor[(4, 6, 13), float64] {
    @func_6232() /* ty=Tensor[(4, 6, 13), float64] */
  };
  %878() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_15245() -> (Tensor[(4, 6, 13), float32],) {
  %880 = fn () -> (Tensor[(4, 6, 13), float32],) {
    %879 = @func_4774() /* ty=Tensor[(4, 6, 13), float32] */;
    (%879,)
  };
  %880() /* ty=(Tensor[(4, 6, 13), float32],) */
}

def @func_12269() -> Tensor[(4, 6, 13), float64] {
  %881 = @func_10518() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %881.0
}

def @func_2131() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %882 = @func_2009() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %883 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
  %884 = %882.2;
  (%883, %884)
}

def @func_16331() -> (Tensor[(4, 6, 13), float64],) {
  %885 = @func_8668() /* ty=Tensor[(4, 6, 13), float64] */;
  (%885,)
}

def @func_1925() -> Tensor[(4, 6, 13), float64] {
  %886 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %886.8
}

def @func_9239() -> Tensor[(4, 6, 13), bool] {
  %887 = @func_5120() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %887.0
}

def @func_7447() -> (Tensor[(4, 6, 13), float64],) {
  @func_7445() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_10519() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %891 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %888 = @func_7635() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %889 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
    %890 = %888.0;
    (%889, %890)
  };
  %891() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_14642() -> Tensor[(4, 6, 13), bool] {
  @func_14640() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_1261(%var_1260: Tensor[(4, 6, 13), float64]) -> (Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) {
  %901 = fn (%var_1245: Tensor[(4, 6, 13), float64]) -> (Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) {
    %892 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %893 = %892.0;
    %894 = cast(%var_1245, dtype="uint16") /* ty=Tensor[(4, 6, 13), uint16] */;
    %895 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
    %896 = cast(%893, dtype="uint16") /* ty=Tensor[(4, 6, 13), uint16] */;
    %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %898 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %899 = subtract(%896, %897) /* ty=Tensor[(4, 6, 13), uint16] */;
    %900 = %898.0;
    (%899, %900)
  };
  %901(%var_1260) /* ty=(Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) */
}

def @func_6634() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_6632() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_6632() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %902 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %903 = @func_3632() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %904 = %902.1;
  %905 = %903.0;
  (%904, %905)
}

def @func_4483() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_4481() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_7948() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %906 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %907 = @func_4093() /* ty=Tensor[(4, 6, 13), bool] */;
  %908 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  %909 = %906.1;
  (%907, %908, %909)
}

def @func_1820() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_10570() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_10568() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_19842() -> Tensor[(4, 6, 13), bool] {
  %910 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %910.0
}

def @func_1404() -> (Tensor[(4, 6, 13), float64],) {
  @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_8668() -> Tensor[(4, 6, 13), float64] {
  %911 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %911.0
}

def @func_3671() -> (Tensor[(4, 6, 13), bool],) {
  %912 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %913 = %912.1;
  (%913,)
}

def @func_19979() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  %918 = fn () -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
    %914 = @func_18549() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %915 = @func_19687() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %916 = %914.1;
    %917 = %915.0;
    (%916, %917)
  };
  %918() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */
}

def @func_14308() -> Tensor[(4, 6, 13), float64] {
  %919 = @func_12312() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %919.1
}

def @func_4851() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %924 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %920 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %921 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %922 = %920.2;
    %923 = %921.0;
    (%922, %923)
  };
  %924() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_9461() -> Tensor[(4, 6, 13), float32] {
  @func_9459() /* ty=Tensor[(4, 6, 13), float32] */
}

def @func_11872() -> (Tensor[(4, 6, 13), float64],) {
  @func_11870() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_14214() -> Tensor[(4, 6, 13), bool] {
  @func_9827() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_18457() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %925 = @func_13328() /* ty=Tensor[(4, 6, 13), float64] */;
  %926 = @func_2845() /* ty=Tensor[(4, 6, 13), float64] */;
  %927 = @func_2649() /* ty=Tensor[(4, 6, 13), float64] */;
  (%925, %926, %927)
}

def @func_6420(%var_6418: Tensor[(264), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) {
  @func_6417(%var_6418) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) */
}

def @func_3609() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  @func_3607() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */
}

def @func_18866() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %931 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %928 = @func_10360() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %929 = %928.0;
    %930 = @func_6232() /* ty=Tensor[(4, 6, 13), float64] */;
    (%929, %930)
  };
  %931() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_3015() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %932 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %933 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
  %934 = %932.2;
  (%933, %934)
}

def @func_19531() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_19529() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_9289() -> Tensor[(4, 6, 13), bool] {
  %936 = fn () -> Tensor[(4, 6, 13), bool] {
    %935 = @func_4836() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %935.0
  };
  %936() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_3342() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %941 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %937 = @func_1649() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %938 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %939 = %937.0;
    %940 = %938.0;
    (%939, %940)
  };
  %941() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_11916(%var_11915: Tensor[(486), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], float32, Tensor[(486), float32]) {
  %950 = fn (%var_11912: Tensor[(486), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], float32, Tensor[(486), float32]) {
    %942 = @func_6977() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %943 = cast(-6.03475f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %944 = cast(%var_11912, dtype="float32") /* ty=Tensor[(486), float32] */;
    %945 = reshape(%943, newshape=[]) /* ty=float32 */;
    %946 = reshape(%944, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float32] */;
    %947 = @func_9875(%945, %946) /* ty=(Tensor[(9, 9, 6), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %948 = %942.0;
    %949 = %947.2;
    (%948, %949, -6.03475f /* ty=float32 */, %var_11912)
  };
  %950(%var_11915) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], float32, Tensor[(486), float32]) */
}

def @func_14247() -> (Tensor[(4, 6, 13), float64],) {
  %953 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %951 = @func_13058() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %952 = %951.1;
    (%952,)
  };
  %953() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_11396(%var_11394: Tensor[(12, 4, 11), uint8], %var_11395: Tensor[(12, 4, 11), uint8]) -> Tensor[(12, 4, 11), uint8] {
  @func_11392(%var_11394, %var_11395) /* ty=Tensor[(12, 4, 11), uint8] */
}

def @func_18623() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %961 = fn () -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %954 = @func_3867() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %955 = @func_2200() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %956 = @func_18549() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %957 = %954.0;
    %958 = %955.0;
    %959 = %956.3;
    %960 = @func_10936() /* ty=Tensor[(4, 6, 13), float64] */;
    (%957, %958, %959, %960)
  };
  %961() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_17141() -> Tensor[(4, 6, 13), float64] {
  %963 = fn () -> Tensor[(4, 6, 13), float64] {
    %962 = @func_7845() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %962.0
  };
  %963() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_4188() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %964 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %965 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %966 = %964.0;
  %967 = %965.0;
  (%966, %967)
}

def @func_7263(%var_7261: float64, %var_7262: Tensor[(12, 10, 9), float64]) -> (Tensor[(12, 10, 9), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %979 = fn (%var_7200: float64, %var_7201: Tensor[(12, 10, 9), float64]) -> (Tensor[(12, 10, 9), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
    %968 = cast(%var_7200, dtype="bool") /* ty=bool */;
    %969 = cast(%var_7201, dtype="bool") /* ty=Tensor[(12, 10, 9), bool] */;
    %970 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %971 = @func_5257() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %972 = @func_4188() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %973 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %974 = greater(%968, %969) /* ty=Tensor[(12, 10, 9), bool] */;
    %975 = %970.0;
    %976 = %971.1;
    %977 = %972.0;
    %978 = %973.0;
    (%974, %975, %976, %977, %978)
  };
  %979(%var_7261, %var_7262) /* ty=(Tensor[(12, 10, 9), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */
}

def @func_5794() -> (Tensor[(4, 6, 13), bool],) {
  %980 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %981 = %980.0;
  (%981,)
}

def @func_10895() -> (Tensor[(4, 6, 13), float64],) {
  %983 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %982 = @func_8668() /* ty=Tensor[(4, 6, 13), float64] */;
    (%982,)
  };
  %983() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_12903() -> Tensor[(4, 6, 13), float64] {
  %984 = fn () -> Tensor[(4, 6, 13), float64] {
    @func_2170() /* ty=Tensor[(4, 6, 13), float64] */
  };
  %984() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_9192() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %988 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %985 = @func_7774() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %986 = %985.2;
    %987 = @func_6104() /* ty=Tensor[(4, 6, 13), float64] */;
    (%986, %987)
  };
  %988() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_11244() -> Tensor[(3, 4, 2), float32] {
  @func_11242() /* ty=Tensor[(3, 4, 2), float32] */
}

def @func_2534() -> (Tensor[(4, 6, 13), float64],) {
  %993 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %989 = @func_2101() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %990 = %989.2;
    %991 = cast(%990, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
    %992 = atan(%991) /* ty=Tensor[(4, 6, 13), float64] */;
    (%992,)
  };
  %993() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_8343(%var_8342: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1005 = fn (%var_8258: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %994 = @func_7635() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %995 = @func_4277() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %996 = cast(%var_8258, dtype="uint32") /* ty=Tensor[(540), uint32] */;
    %997 = reshape(%996, newshape=[540]) /* ty=Tensor[(540), uint32] */;
    %998 = @func_5893(%997) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %999 = @func_2131() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1000 = %994.0;
    %1001 = %995.5;
    %1002 = %998.5;
    %1003 = %999.1;
    %1004 = @func_5114() /* ty=Tensor[(4, 6, 13), bool] */;
    (%1000, %1001, %1002, %var_8258, %1003, %1004)
  };
  %1005(%var_8342) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_2234() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1010 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %1006 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1007 = @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %1008 = %1006.0;
    %1009 = %1007.0;
    (%1008, %1009)
  };
  %1010() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_19353() -> Tensor[(4, 6, 13), float32] {
  %1011 = @func_10299() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1011.1
}

def @func_6856() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1012 = @func_2968() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1013 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1014 = %1012.1;
  %1015 = %1013.0;
  (%1014, %1015)
}

def @func_14708() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1016 = @func_6856() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1017 = %1016.0;
  %1018 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  (%1017, %1018)
}

def @func_4094() -> Tensor[(4, 6, 13), bool] {
  %1020 = fn () -> Tensor[(4, 6, 13), bool] {
    %1019 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %1019.0
  };
  %1020() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_17782() -> Tensor[(4, 6, 13), float64] {
  @func_17780() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_11640(%var_11638: uint32) -> (Tensor[(2, 3, 13), uint32], Tensor[(4, 6, 13), bool], Tensor[(1080), float64]) {
  @func_11637(%var_11638) /* ty=(Tensor[(2, 3, 13), uint32], Tensor[(4, 6, 13), bool], Tensor[(1080), float64]) */
}

def @func_839() -> (Tensor[(4, 6, 13), float64],) {
  %1021 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %1022 = exp(%1021) /* ty=Tensor[(4, 6, 13), float64] */;
  (%1022,)
}

def @func_18148(%var_18147: Tensor[(54, 10), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(54, 10), bool]) {
  %1032 = fn (%var_18120: Tensor[(54, 10), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(54, 10), bool]) {
    %1023 = @func_6780() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1024 = @func_8919() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(54, 10), uint32]) */;
    %1025 = %1024.1;
    %1026 = cast(%var_18120, dtype="bool") /* ty=Tensor[(54, 10), bool] */;
    %1027 = shape_of(%1025, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1028 = cast(%1025, dtype="bool") /* ty=Tensor[(54, 10), bool] */;
    %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1030 = %1023.0;
    %1031 = less_equal(%1028, %1029) /* ty=Tensor[(54, 10), bool] */;
    (%1030, %1031)
  };
  %1032(%var_18147) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(54, 10), bool]) */
}

def @func_16088(%var_16086: Tensor[(784), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(784), int8], Tensor[(4, 6, 13), float64]) {
  @func_16085(%var_16086) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(784), int8], Tensor[(4, 6, 13), float64]) */
}

def @func_17821() -> (Tensor[(4, 6, 13), float64],) {
  %1034 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1033 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
    (%1033,)
  };
  %1034() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_7140(%var_7118: Tensor[(270, 2), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(270, 2), uint32]) {
  %1035 = @func_4944() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1036 = cast(%var_7118, dtype="uint32") /* ty=Tensor[(270, 2), uint32] */;
  %1037 = cast(%var_7118, dtype="uint32") /* ty=Tensor[(270, 2), uint32] */;
  %1038 = reshape(%1036, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1039 = reshape(%1037, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1040 = @func_3937(%1038, %1039) /* ty=(Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1041 = %1035.1;
  %1042 = %1040.1;
  (%1041, %1042, %var_7118)
}

def @func_10568() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1043 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1044 = @func_7635() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1045 = %1043.0;
  %1046 = %1044.0;
  (%1045, %1046)
}

def @func_14518() -> Tensor[(4, 6, 13), float64] {
  %1048 = fn () -> Tensor[(4, 6, 13), float64] {
    %1047 = @func_14152() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1047.1
  };
  %1048() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_9922() -> Tensor[(4, 6, 13), float64] {
  %1049 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1049.0
}

def @func_10361() -> (Tensor[(4, 6, 13), float64],) {
  %1052 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1050 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1051 = %1050.0;
    (%1051,)
  };
  %1052() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_19116() -> (Tensor[(4, 6, 13), float64],) {
  %1054 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1053 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
    (%1053,)
  };
  %1054() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_19486(%var_19479: Tensor[(16, 12, 5), int16], %var_19480: Tensor[(16, 12, 5), int16]) -> Tensor[(16, 12, 5), bool] {
  %1055 = cast(%var_19480, dtype="bool") /* ty=Tensor[(16, 12, 5), bool] */;
  %1056 = shape_of(%var_19479, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(%var_19479, dtype="bool") /* ty=Tensor[(16, 12, 5), bool] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1057, %1058) /* ty=Tensor[(16, 12, 5), bool] */
}

def @func_2542() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1059 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %1060 = %1059.1;
  %1061 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1060, %1061)
}

def @func_18804() -> (Tensor[(4, 6, 13), float64],) {
  %1062 = @func_15806() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1063 = %1062.0;
  (%1063,)
}

def @func_8858() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1068 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %1064 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1065 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %1066 = %1064.1;
    %1067 = %1065.0;
    (%1066, %1067)
  };
  %1068() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_12107() -> (Tensor[(4, 6, 13), bool],) {
  %1069 = @func_9288() /* ty=Tensor[(4, 6, 13), bool] */;
  (%1069,)
}

def @func_17072() -> (Tensor[(4, 6, 13), bool],) {
  %1070 = @func_10789() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1071 = %1070.0;
  (%1071,)
}

def @func_5987() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1076 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %1072 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
    %1073 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
    %1074 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
    %1075 = %1072.0;
    (%1073, %1074, %1075)
  };
  %1076() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_7720() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint32], Tensor[(4, 6, 13), bool]) {
  %1077 = @func_1402() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1078 = cast(meta[relay.Constant][21] /* ty=Tensor[(54, 10), uint32] */, dtype="uint32") /* ty=Tensor[(54, 10), uint32] */;
  %1079 = reshape(%1078, newshape=[540]) /* ty=Tensor[(540), uint32] */;
  %1080 = @func_5893(%1079) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1081 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1082 = %1077.0;
  %1083 = %1080.5;
  %1084 = %1081.0;
  (%1082, %1083, meta[relay.Constant][21] /* ty=Tensor[(54, 10), uint32] */, %1084)
}

def @func_19689() -> (Tensor[(4, 6, 13), float64],) {
  @func_19687() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_16814() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1088 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %1085 = @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1086 = %1085.1;
    %1087 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
    (%1086, %1087)
  };
  %1088() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_20072() -> (Tensor[(4, 6, 13), float64], Tensor[(14, 13, 8), float32], float32, Tensor[(1, 1456), float32]) {
  %1095 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(14, 13, 8), float32], float32, Tensor[(1, 1456), float32]) {
    %1089 = cast(-7.6238f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1090 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 1456), float32] */, dtype="float32") /* ty=Tensor[(1, 1456), float32] */;
    %1091 = reshape(%1089, newshape=[]) /* ty=float32 */;
    %1092 = reshape(%1090, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), float32] */;
    %1093 = @func_14517() /* ty=Tensor[(4, 6, 13), float64] */;
    %1094 = @func_11485(%1091, %1092) /* ty=Tensor[(14, 13, 8), float32] */;
    (%1093, %1094, -7.6238f /* ty=float32 */, meta[relay.Constant][22] /* ty=Tensor[(1, 1456), float32] */)
  };
  %1095() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(14, 13, 8), float32], float32, Tensor[(1, 1456), float32]) */
}

def @func_2928() -> (Tensor[(4, 6, 13), float64],) {
  %1097 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1096 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
    (%1096,)
  };
  %1097() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_11219() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1103 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %1098 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %1099 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
    %1100 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
    %1101 = %1098.0;
    %1102 = %1099.0;
    (%1100, %1101, %1102)
  };
  %1103() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_2103() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_2101() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_4036() -> Tensor[(4, 6, 13), bool] {
  %1105 = fn () -> Tensor[(4, 6, 13), bool] {
    %1104 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %1104.0
  };
  %1105() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_1706() -> (Tensor[(4, 6, 13), bool],) {
  @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_1417() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
  @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */
}

def @func_1129() -> (Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1106 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1107 = %1106.0;
  %1108 = cast(%1107, dtype="float32") /* ty=Tensor[(4, 6, 13), float32] */;
  %1109 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1110 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1111 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1112 = asin(%1108) /* ty=Tensor[(4, 6, 13), float32] */;
  %1113 = %1109.1;
  %1114 = %1110.0;
  %1115 = %1111.0;
  (%1112, %1113, %1114, %1115)
}

def @func_8891() -> Tensor[(4, 6, 13), float64] {
  @func_1925() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_14270(%var_14254: Tensor[(11, 2, 16), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 2, 16), uint16]) {
  %1116 = @func_7445() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1117 = cast(%var_14254, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %1118 = sqrt(%1117) /* ty=Tensor[(11, 2, 16), float32] */;
  %1119 = cast(%var_14254, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
  %1120 = shape_of(%1118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1121 = cast(%1118, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
  %1122 = dyn.reshape(%1119, %1120, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1123 = not_equal(%1121, %1122) /* ty=Tensor[(11, 2, 16), bool] */;
  %1124 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 2, 16), bool] */, dtype="uint16") /* ty=Tensor[(11, 2, 16), uint16] */;
  %1125 = shape_of(%1123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1126 = cast(%1123, dtype="uint16") /* ty=Tensor[(11, 2, 16), uint16] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1128 = @func_9998() /* ty=Tensor[(4, 6, 13), float64] */;
  %1129 = %1116.0;
  %1130 = bitwise_or(%1126, %1127) /* ty=Tensor[(11, 2, 16), uint16] */;
  (%1128, %1129, %1130)
}

def @func_9459() -> Tensor[(4, 6, 13), float32] {
  %1131 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
  %1131.1
}

def @func_854() -> (Tensor[(4, 6, 13), bool],) {
  %1141 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %1132 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1133 = %1132.0;
    %1134 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1135 = %1134.0;
    %1136 = cast(%1135, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
    %1137 = shape_of(%1133, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1138 = cast(%1133, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
    %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1140 = logical_and(%1138, %1139) /* ty=Tensor[(4, 6, 13), bool] */;
    (%1140,)
  };
  %1141() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_11010() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1148 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %1142 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %1143 = @func_4277() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1144 = @func_3015() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1145 = %1142.1;
    %1146 = %1143.5;
    %1147 = %1144.0;
    (%1145, %1146, %1147)
  };
  %1148() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_18768() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(7, 15, 5), bool], Tensor[(5, 105), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_18766() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(7, 15, 5), bool], Tensor[(5, 105), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_11242() -> Tensor[(3, 4, 2), float32] {
  %1149 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 4, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 4, 2), float32] */;
  rsqrt(%1149) /* ty=Tensor[(3, 4, 2), float32] */
}

def @func_9827() -> Tensor[(4, 6, 13), bool] {
  %1150 = @func_8459() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1150.0
}

def @func_1604() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  @func_1602() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */
}

def @func_14104() -> (Tensor[(4, 6, 13), bool],) {
  %1151 = @func_7194() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1152 = %1151.0;
  (%1152,)
}

def @func_2361() -> Tensor[(4, 6, 13), float64] {
  %1154 = fn () -> Tensor[(4, 6, 13), float64] {
    %1153 = @func_1415() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %1153.0
  };
  %1154() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_12022() -> (Tensor[(4, 6, 13), bool],) {
  %1155 = @func_4410() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1156 = %1155.0;
  (%1156,)
}

def @func_7901(%var_7899: Tensor[(540), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) {
  @func_7898(%var_7899) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) */
}

def @func_18915() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_18913() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_8110(%var_8108: Tensor[(7, 5, 16), float32]) -> Tensor[(7, 5, 16), float32] {
  @func_8107(%var_8108) /* ty=Tensor[(7, 5, 16), float32] */
}

def @func_16727() -> Tensor[(4, 6, 13), float64] {
  @func_16725() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_18714() -> Tensor[(4, 6, 13), float64] {
  %1158 = fn () -> Tensor[(4, 6, 13), float64] {
    %1157 = @func_9745() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %1157.1
  };
  %1158() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_17702() -> (Tensor[(4, 11, 6), float32],) {
  %1161 = fn () -> (Tensor[(4, 11, 6), float32],) {
    %1159 = @func_17247() /* ty=(Tensor[(4, 11, 6), float32],) */;
    %1160 = %1159.0;
    (%1160,)
  };
  %1161() /* ty=(Tensor[(4, 11, 6), float32],) */
}

def @func_12532() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1165 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %1162 = @func_6278() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %1163 = %1162.1;
    %1164 = @func_5382() /* ty=Tensor[(4, 6, 13), float64] */;
    (%1163, %1164)
  };
  %1165() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_9392() -> (Tensor[(54, 10), uint32],) {
  %1168 = fn () -> (Tensor[(54, 10), uint32],) {
    %1166 = @func_7720() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(54, 10), uint32], Tensor[(4, 6, 13), bool]) */;
    %1167 = %1166.2;
    (%1167,)
  };
  %1168() /* ty=(Tensor[(54, 10), uint32],) */
}

def @func_6569(%var_6567: Tensor[(16, 5, 2), float32], %var_6568: Tensor[(16, 5, 2), float32]) -> (Tensor[(16, 5, 2), bool], Tensor[(4, 6, 13), float32]) {
  %1178 = fn (%var_6535: Tensor[(16, 5, 2), float32], %var_6543: Tensor[(16, 5, 2), float32]) -> (Tensor[(16, 5, 2), bool], Tensor[(4, 6, 13), float32]) {
    %1169 = cast(%var_6535, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
    %1170 = acos(%1169) /* ty=Tensor[(16, 5, 2), float32] */;
    %1171 = cast(%var_6543, dtype="bool") /* ty=Tensor[(16, 5, 2), bool] */;
    %1172 = shape_of(%1170, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1173 = cast(%1170, dtype="bool") /* ty=Tensor[(16, 5, 2), bool] */;
    %1174 = dyn.reshape(%1171, %1172, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1175 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %1176 = equal(%1173, %1174) /* ty=Tensor[(16, 5, 2), bool] */;
    %1177 = %1175.2;
    (%1176, %1177)
  };
  %1178(%var_6567, %var_6568) /* ty=(Tensor[(16, 5, 2), bool], Tensor[(4, 6, 13), float32]) */
}

def @func_7143(%var_7141: Tensor[(270, 2), uint32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(270, 2), uint32]) {
  @func_7140(%var_7141) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(270, 2), uint32]) */
}

def @func_4837() -> (Tensor[(4, 6, 13), bool],) {
  %1180 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %1179 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
    (%1179,)
  };
  %1180() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_5613() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) {
  @func_5611() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) */
}

def @func_17718(%var_17716: uint16) -> (Tensor[(10, 2, 11), bool],) {
  @func_17715(%var_17716) /* ty=(Tensor[(10, 2, 11), bool],) */
}

def @func_6810() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1181 = @func_3341() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1182 = @func_6104() /* ty=Tensor[(4, 6, 13), float64] */;
  %1183 = %1181.1;
  (%1182, %1183)
}

def @func_2968() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1184 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1185 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
  %1186 = %1184.0;
  %1187 = %1185.1;
  (%1186, %1187)
}

def @func_13407() -> (Tensor[(4, 6, 13), bool], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) {
  %1188 = cast(meta[relay.Constant][25] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %1189 = reshape(%1188, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %1190 = @func_6417(%1189) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) */;
  %1191 = @func_3564() /* ty=Tensor[(4, 6, 13), bool] */;
  %1192 = %1190.1;
  (%1191, %1192, meta[relay.Constant][25] /* ty=Tensor[(264), float64] */)
}

def @func_8093() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1197 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
    %1193 = @func_4836() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %1194 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1195 = %1193.0;
    %1196 = %1194.0;
    (%1195, %1196)
  };
  %1197() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_19529() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1198 = @func_19115() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1199 = @func_1649() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1200 = %1198.0;
  %1201 = %1199.0;
  (%1200, %1201)
}

def @func_1890() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
  @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */
}

def @func_19191() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(11, 7, 13), int32], Tensor[(1001), float32], Tensor[(4, 6, 13), float64]) {
  %1202 = @func_9191() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1203 = cast(meta[relay.Constant][26] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %1204 = reshape(%1203, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), float32] */;
  %1205 = @func_15678(%1204) /* ty=(Tensor[(11, 7, 13), float32], Tensor[(11, 7, 13), int32]) */;
  %1206 = @func_10299() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1207 = %1202.0;
  %1208 = @func_18252() /* ty=Tensor[(4, 6, 13), float64] */;
  %1209 = @func_9827() /* ty=Tensor[(4, 6, 13), bool] */;
  %1210 = %1205.1;
  %1211 = %1206.2;
  (%1207, %1208, %1209, %1210, meta[relay.Constant][26] /* ty=Tensor[(1001), float32] */, %1211)
}

def @func_14710() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_14708() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_7950() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_7948() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_2487() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  %1218 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
    %1212 = @func_907() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1213 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %1214 = @func_2009() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
    %1215 = %1212.0;
    %1216 = %1213.2;
    %1217 = %1214.3;
    (%1215, %1216, %1217)
  };
  %1218() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */
}

def @func_5184() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1222 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
    %1219 = @func_3341() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %1220 = %1219.1;
    %1221 = @func_4116() /* ty=Tensor[(4, 6, 13), float64] */;
    (%1220, %1221)
  };
  %1222() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_16515() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_16513() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_3082() -> Tensor[(4, 6, 13), float64] {
  @func_3080() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_18806() -> (Tensor[(4, 6, 13), float64],) {
  @func_18804() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_12498() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  @func_12496() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_5259() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_5257() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_9704() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_9702() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_2011() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  @func_2009() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */
}

def @func_18283() -> (Tensor[(4, 6, 13), float64],) {
  %1225 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1223 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1224 = %1223.0;
    (%1224,)
  };
  %1225() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_10883(%var_10880: Tensor[(264), float64], %var_10881: Tensor[(2), uint32], %var_10882: Tensor[(1, 144), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(264), float64], Tensor[(2, 6, 8), float32], Tensor[(2), uint32], Tensor[(30, 4), uint32], Tensor[(96), uint32], Tensor[(1, 144), uint32], Tensor[(11, 12, 2), float32]) {
  %1248 = fn (%var_10850: Tensor[(264), float64], %var_10869: Tensor[(2), uint32], %var_10872: Tensor[(1, 144), uint32]) -> (Tensor[(4, 6, 13), bool], Tensor[(264), float64], Tensor[(2, 6, 8), float32], Tensor[(2), uint32], Tensor[(30, 4), uint32], Tensor[(96), uint32], Tensor[(1, 144), uint32], Tensor[(11, 12, 2), float32]) {
    %1226 = @func_8173() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %1227 = cast(%var_10869, dtype="uint32") /* ty=Tensor[(2), uint32] */;
    %1228 = cast(meta[relay.Constant][27] /* ty=Tensor[(30, 4), uint32] */, dtype="uint32") /* ty=Tensor[(30, 4), uint32] */;
    %1229 = cast(meta[relay.Constant][28] /* ty=Tensor[(96), uint32] */, dtype="uint32") /* ty=Tensor[(96), uint32] */;
    %1230 = cast(%var_10872, dtype="uint32") /* ty=Tensor[(1, 144), uint32] */;
    %1231 = reshape(%1227, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), uint32] */;
    %1232 = reshape(%1228, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), uint32] */;
    %1233 = reshape(%1229, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), uint32] */;
    %1234 = reshape(%1230, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), uint32] */;
    %1235 = @func_3731(%1231, %1232, %1233, %1234) /* ty=(Tensor[(2, 15, 4), uint32], Tensor[(4, 6, 13), bool], Tensor[(2, 6, 8), float32], Tensor[(4, 6, 13), bool], Tensor[(2, 8, 9), int16], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1236 = cast(%var_10850, dtype="float64") /* ty=Tensor[(264), float64] */;
    %1237 = cast(%var_10850, dtype="float64") /* ty=Tensor[(264), float64] */;
    %1238 = reshape(%1236, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
    %1239 = reshape(%1237, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
    %1240 = @func_3214(%1238, %1239) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32]) */;
    %1241 = %1240.0;
    %1242 = cast(%1241, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
    %1243 = acosh(%1242) /* ty=Tensor[(11, 12, 2), float64] */;
    %1244 = cast(%1243, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
    %1245 = %1226.0;
    %1246 = %1235.2;
    %1247 = atanh(%1244) /* ty=Tensor[(11, 12, 2), float32] */;
    (%1245, %var_10850, %1246, %var_10869, meta[relay.Constant][27] /* ty=Tensor[(30, 4), uint32] */, meta[relay.Constant][28] /* ty=Tensor[(96), uint32] */, %var_10872, %1247)
  };
  %1248(%var_10880, %var_10881, %var_10882) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(264), float64], Tensor[(2, 6, 8), float32], Tensor[(2), uint32], Tensor[(30, 4), uint32], Tensor[(96), uint32], Tensor[(1, 144), uint32], Tensor[(11, 12, 2), float32]) */
}

def @func_16085(%var_16080: Tensor[(784), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(784), int8], Tensor[(4, 6, 13), float64]) {
  %1249 = @func_9702() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1250 = cast(%var_16080, dtype="int8") /* ty=Tensor[(784), int8] */;
  %1251 = reshape(%1250, newshape=[2, 392]) /* ty=Tensor[(2, 392), int8] */;
  %1252 = @func_15471(%1251) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 98), int8], Tensor[(2, 392), int8]) */;
  %1253 = @func_12378() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1254 = %1249.1;
  %1255 = %1252.0;
  %1256 = %1253.0;
  (%1254, %1255, %var_16080, %1256)
}

def @func_2054() -> Tensor[(4, 6, 13), float64] {
  @func_2052() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_16867() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], float32, Tensor[(486), float32]) {
  @func_16865() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], float32, Tensor[(486), float32]) */
}

def @func_15614() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %1261 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
    %1257 = @func_12800() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %1258 = @func_2845() /* ty=Tensor[(4, 6, 13), float64] */;
    %1259 = @func_9288() /* ty=Tensor[(4, 6, 13), bool] */;
    %1260 = %1257.1;
    (%1258, %1259, %1260)
  };
  %1261() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */
}

def @func_11103() -> (Tensor[(4, 6, 13), float64],) {
  %1264 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1262 = @func_7058() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %1263 = %1262.0;
    (%1263,)
  };
  %1264() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_15806() -> (Tensor[(4, 6, 13), float64],) {
  %1265 = @func_5257() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1266 = %1265.1;
  (%1266,)
}

def @func_1888() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
  %1267 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1268 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1269 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
  %1270 = %1267.0;
  %1271 = %1268.0;
  %1272 = %1269.0;
  (%1270, %1271, %1272)
}

def @func_4047() -> (Tensor[(4, 6, 13), bool],) {
  %1275 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %1273 = @func_1888() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */;
    %1274 = %1273.0;
    (%1274,)
  };
  %1275() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_15473(%var_15472: Tensor[(2, 392), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 98), int8], Tensor[(2, 392), int8]) {
  %1284 = fn (%var_15466: Tensor[(2, 392), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 98), int8], Tensor[(2, 392), int8]) {
    %1276 = @func_8857() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %1277 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1278 = cast(%var_15466, dtype="int8") /* ty=Tensor[(2, 392), int8] */;
    %1279 = reshape(%1278, newshape=[8, 98]) /* ty=Tensor[(8, 98), int8] */;
    %1280 = @func_11589(%1279) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(8, 98), int8]) */;
    %1281 = %1276.0;
    %1282 = %1277.0;
    %1283 = %1280.3;
    (%1281, %1282, %1283, %var_15466)
  };
  %1284(%var_15472) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(8, 98), int8], Tensor[(2, 392), int8]) */
}

def @func_13839() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1285 = @func_6278() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1286 = @func_2233() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1287 = @func_4736() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1288 = @func_10936() /* ty=Tensor[(4, 6, 13), float64] */;
  %1289 = %1285.2;
  %1290 = %1286.0;
  %1291 = %1287.0;
  (%1288, %1289, %1290, %1291)
}

def @func_968() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1296 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %1292 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1293 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %1294 = %1292.0;
    %1295 = %1293.0;
    (%1294, %1295)
  };
  %1296() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_1329(%var_1328: Tensor[(4, 6, 13), float64]) -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
  %1312 = fn (%var_1300: Tensor[(4, 6, 13), float64]) -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) {
    %1297 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %1298 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1299 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1300 = %1299.0;
    %1301 = cast(%var_1300, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
    %1302 = shape_of(%1300, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1303 = cast(%1300, dtype="bool") /* ty=Tensor[(4, 6, 13), bool] */;
    %1304 = dyn.reshape(%1301, %1302, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1305 = cast(%1300, dtype="float32") /* ty=Tensor[(4, 6, 13), float32] */;
    %1306 = @func_839() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1307 = %1297.0;
    %1308 = %1298.0;
    %1309 = not_equal(%1303, %1304) /* ty=Tensor[(4, 6, 13), bool] */;
    %1310 = sinh(%1305) /* ty=Tensor[(4, 6, 13), float32] */;
    %1311 = %1306.0;
    (%1307, %1308, %1309, %1310, %1311)
  };
  %1312(%var_1328) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */
}

def @func_4646() -> (Tensor[(4, 6, 13), float64],) {
  @func_4644() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_6507() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  %1319 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
    %1313 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
    %1314 = cast(%1313, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
    %1315 = reshape(%1314, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
    %1316 = @func_1327(%1315) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
    %1317 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
    %1318 = %1316.1;
    (%1317, %1313, %1318)
  };
  %1319() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */
}

def @func_13481() -> (Tensor[(4, 6, 13), float64],) {
  %1322 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1320 = @func_10894() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1321 = %1320.0;
    (%1321,)
  };
  %1322() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_4724() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_4722() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_13592(%var_13525: uint16, %var_13543: Tensor[(528), uint8]) -> (Tensor[(8, 1, 6), uint16], Tensor[(12, 4, 11), uint8], Tensor[(528), uint8], Tensor[(4, 6, 13), bool]) {
  %1323 = cast(%var_13525, dtype="uint16") /* ty=uint16 */;
  %1324 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 1, 6), uint16] */, dtype="uint16") /* ty=Tensor[(8, 1, 6), uint16] */;
  %1325 = cast(%var_13543, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %1326 = cast(%var_13543, dtype="uint8") /* ty=Tensor[(528), uint8] */;
  %1327 = reshape(%1325, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), uint8] */;
  %1328 = reshape(%1326, newshape=[12, 4, 11]) /* ty=Tensor[(12, 4, 11), uint8] */;
  %1329 = @func_7194() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1330 = left_shift(%1323, %1324) /* ty=Tensor[(8, 1, 6), uint16] */;
  %1331 = @func_11392(%1327, %1328) /* ty=Tensor[(12, 4, 11), uint8] */;
  %1332 = %1329.0;
  (%1330, %1331, %var_13543, %1332)
}

def @func_14003(%var_13981: Tensor[(9, 2, 10), bool], %var_13982: Tensor[(9, 2, 10), bool]) -> Tensor[(9, 2, 10), float64] {
  %1333 = cast(%var_13982, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %1334 = shape_of(%var_13981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1335 = cast(%var_13981, dtype="bool") /* ty=Tensor[(9, 2, 10), bool] */;
  %1336 = dyn.reshape(%1333, %1334, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1337 = logical_or(%1335, %1336) /* ty=Tensor[(9, 2, 10), bool] */;
  %1338 = cast(%1337, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %1339 = shape_of(%var_13981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1340 = cast(%var_13981, dtype="float64") /* ty=Tensor[(9, 2, 10), float64] */;
  %1341 = dyn.reshape(%1338, %1339, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%1340, %1341) /* ty=Tensor[(9, 2, 10), float64] */
}

def @func_16703() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_16701() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_18986() -> (Tensor[(4, 6, 13), float64], Tensor[(486), float32], Tensor[(486), float32], Tensor[(4, 6, 13), float64]) {
  @func_18984() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(486), float32], Tensor[(486), float32], Tensor[(4, 6, 13), float64]) */
}

def @func_5327() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1347 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
    %1342 = @func_3015() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1343 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
    %1344 = %1342.0;
    %1345 = @func_2845() /* ty=Tensor[(4, 6, 13), float64] */;
    %1346 = %1343.1;
    (%1344, %1345, %1346)
  };
  %1347() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */
}

def @func_2200() -> (Tensor[(4, 6, 13), float64],) {
  %1348 = @func_2101() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1349 = %1348.2;
  (%1349,)
}

def @func_2625() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) {
  %1350 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1351 = @func_2486() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %1352 = %1351.2;
  %1353 = cast(%1352, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %1354 = reshape(%1353, newshape=[4, 6, 13]) /* ty=Tensor[(4, 6, 13), float64] */;
  %1355 = @func_1259(%1354) /* ty=(Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), bool]) */;
  %1356 = @func_1818() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1357 = %1350.1;
  %1358 = %1355.0;
  %1359 = %1356.4;
  (%1357, %1352, %1358, %1359)
}

def @func_5384() -> Tensor[(4, 6, 13), float64] {
  @func_5382() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_12379() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1363 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %1360 = @func_2200() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1361 = %1360.0;
    %1362 = @func_1925() /* ty=Tensor[(4, 6, 13), float64] */;
    (%1361, %1362)
  };
  %1363() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_3937(%var_3909: Tensor[(9, 6, 10), uint32], %var_3910: Tensor[(9, 6, 10), uint32]) -> (Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1364 = cast(%var_3910, dtype="uint32") /* ty=Tensor[(9, 6, 10), uint32] */;
  %1365 = shape_of(%var_3909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1366 = cast(%var_3909, dtype="uint32") /* ty=Tensor[(9, 6, 10), uint32] */;
  %1367 = dyn.reshape(%1364, %1365, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1368 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1369 = @func_2486() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), float64]) */;
  %1370 = maximum(%1366, %1367) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1371 = %1368.0;
  %1372 = %1369.2;
  (%1370, %1371, %1372)
}

def @func_18434() -> Tensor[(4, 6, 13), bool] {
  %1373 = fn () -> Tensor[(4, 6, 13), bool] {
    @func_3659() /* ty=Tensor[(4, 6, 13), bool] */
  };
  %1373() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_14800() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) {
  @func_14798() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */
}

def @func_8893() -> Tensor[(4, 6, 13), float64] {
  @func_8891() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_12313() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1378 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %1374 = @func_4909() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1375 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1376 = %1374.0;
    %1377 = %1375.0;
    (%1376, %1377)
  };
  %1378() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_14944() -> Tensor[(3, 4, 2), float32] {
  @func_14942() /* ty=Tensor[(3, 4, 2), float32] */
}

def @func_18943() -> (Tensor[(4, 6, 13), bool],) {
  %1381 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %1379 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %1380 = %1379.0;
    (%1380,)
  };
  %1381() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_10338() -> (Tensor[(4, 6, 13), float64],) {
  %1384 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1382 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1383 = %1382.1;
    (%1383,)
  };
  %1384() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_7384(%var_7342: Tensor[(169, 6), float32]) -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(264), float64], Tensor[(264), float64], Tensor[(169, 6), int16], Tensor[(4, 6, 13), bool]) {
  %1385 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1386 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1387 = cast(%var_7342, dtype="float32") /* ty=Tensor[(169, 6), float32] */;
  %1388 = reshape(%1387, newshape=[13, 6, 13]) /* ty=Tensor[(13, 6, 13), float32] */;
  %1389 = @func_5032(%1388) /* ty=(Tensor[(13, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(13, 6, 13), bool]) */;
  %1390 = cast(meta[relay.Constant][30] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %1391 = reshape(%1390, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %1392 = @func_6417(%1391) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32], Tensor[(264), float64]) */;
  %1393 = cast(%var_7342, dtype="float32") /* ty=Tensor[(169, 6), float32] */;
  %1394 = sinh(%1393) /* ty=Tensor[(169, 6), float32] */;
  %1395 = cast(%1394, dtype="float64") /* ty=Tensor[(169, 6), float64] */;
  %1396 = log(%1395) /* ty=Tensor[(169, 6), float64] */;
  %1397 = cast(%var_7342, dtype="int16") /* ty=Tensor[(169, 6), int16] */;
  %1398 = shape_of(%1396, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1399 = cast(%1396, dtype="int16") /* ty=Tensor[(169, 6), int16] */;
  %1400 = dyn.reshape(%1397, %1398, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1401 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1402 = %1385.1;
  %1403 = %1386.0;
  %1404 = %1389.1;
  %1405 = %1392.2;
  %1406 = minimum(%1399, %1400) /* ty=Tensor[(169, 6), int16] */;
  %1407 = %1401.0;
  (%1402, %1403, %1404, %1405, meta[relay.Constant][30] /* ty=Tensor[(264), float64] */, %1406, %1407)
}

def @func_6367(%var_6365: Tensor[(1, 6, 10), float64], %var_6366: Tensor[(3, 6, 10), float64]) -> (Tensor[(4, 6, 13), bool], Tensor[(3, 6, 10), uint8], Tensor[(4, 6, 13), float64]) {
  @func_6363(%var_6365, %var_6366) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(3, 6, 10), uint8], Tensor[(4, 6, 13), float64]) */
}

def @func_14835() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1408 = @func_4188() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1409 = @func_4736() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1410 = %1408.1;
  %1411 = %1409.0;
  (%1410, %1411)
}

def @func_8076() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1412 = @func_4850() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1413 = @func_1649() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1414 = %1412.1;
  %1415 = %1413.2;
  (%1414, %1415)
}

def @func_9745() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1416 = @func_7635() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1417 = @func_7058() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1418 = @func_4850() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1419 = %1416.0;
  %1420 = %1417.0;
  %1421 = %1418.1;
  (%1419, %1420, %1421)
}

def @func_6978() -> (Tensor[(4, 6, 13), float64],) {
  %1423 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1422 = @func_2052() /* ty=Tensor[(4, 6, 13), float64] */;
    (%1422,)
  };
  %1423() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_4737() -> (Tensor[(4, 6, 13), float64],) {
  %1426 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1424 = @func_4277() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1425 = %1424.3;
    (%1425,)
  };
  %1426() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_10924() -> (Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), int8]) {
  %1434 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), int8]) {
    %1427 = cast(meta[relay.Constant][31] /* ty=Tensor[(784), int8] */, dtype="int8") /* ty=Tensor[(784), int8] */;
    %1428 = cast(meta[relay.Constant][31] /* ty=Tensor[(784), int8] */, dtype="int8") /* ty=Tensor[(784), int8] */;
    %1429 = reshape(%1427, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
    %1430 = reshape(%1428, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
    %1431 = @func_5573(%1429, %1430) /* ty=(Tensor[(8, 7, 14), int64],) */;
    %1432 = @func_8891() /* ty=Tensor[(4, 6, 13), float64] */;
    %1433 = %1431.0;
    (%1432, %1433, meta[relay.Constant][31] /* ty=Tensor[(784), int8] */)
  };
  %1434() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), int8]) */
}

def @func_12631() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1435 = @func_12107() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1436 = @func_4850() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1437 = @func_2018() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1438 = %1435.0;
  %1439 = %1436.1;
  %1440 = %1437.0;
  %1441 = @func_11259() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1438, %1439, %1440, %1441)
}

def @func_1650() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1452 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
    %1442 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1443 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
    %1444 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1445 = %1444.0;
    %1446 = cast(%1445, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
    %1447 = log(%1446) /* ty=Tensor[(4, 6, 13), float64] */;
    %1448 = cast(%1447, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
    %1449 = %1442.0;
    %1450 = %1443.1;
    %1451 = tan(%1448) /* ty=Tensor[(4, 6, 13), float64] */;
    (%1449, %1450, %1451)
  };
  %1452() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_4118() -> Tensor[(4, 6, 13), float64] {
  @func_4116() /* ty=Tensor[(4, 6, 13), float64] */
}

def @main(%var_20108: Tensor[(5, 2, 8), bool]) -> Tensor[(5, 2, 8), bool] {
  %1453 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 2, 8), bool] */, dtype="bool") /* ty=Tensor[(5, 2, 8), bool] */;
  %1454 = shape_of(%var_20108, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1455 = cast(%var_20108, dtype="bool") /* ty=Tensor[(5, 2, 8), bool] */;
  %1456 = dyn.reshape(%1453, %1454, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1455, %1456) /* ty=Tensor[(5, 2, 8), bool] */
}

def @func_1402() -> (Tensor[(4, 6, 13), float64],) {
  %1457 = @func_1055() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1458 = %1457.0;
  %1459 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1460 = %1459.1;
  %1461 = cast(%1460, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %1462 = shape_of(%1458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1463 = cast(%1458, dtype="float64") /* ty=Tensor[(4, 6, 13), float64] */;
  %1464 = dyn.reshape(%1461, %1462, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1465 = floor_divide(%1463, %1464) /* ty=Tensor[(4, 6, 13), float64] */;
  (%1465,)
}

def @func_17653(%var_17652: Tensor[(576, 1), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(576, ?), bool]) {
  %1477 = fn (%var_17618: Tensor[(576, 1), float64]) -> (Tensor[(4, 6, 13), float64], Tensor[(576, ?), bool]) {
    %1466 = @func_5183() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %1467 = cast(%var_17618, dtype="float64") /* ty=Tensor[(576, 1), float64] */;
    %1468 = reshape(%1467, newshape=[16, 3, 12]) /* ty=Tensor[(16, 3, 12), float64] */;
    %1469 = @func_7574(%1468) /* ty=(Tensor[(16, 3, 12), float64],) */;
    %1470 = %1469.0;
    %1471 = cast(%1470, dtype="bool") /* ty=Tensor[(16, 3, 12), bool] */;
    %1472 = shape_of(%var_17618, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1473 = cast(%var_17618, dtype="bool") /* ty=Tensor[(576, 1), bool] */;
    %1474 = dyn.reshape(%1471, %1472, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1475 = %1466.1;
    %1476 = logical_or(%1473, %1474) /* ty=Tensor[(576, ?), bool] */;
    (%1475, %1476)
  };
  %1477(%var_17652) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(576, ?), bool]) */
}

def @func_16865() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32], float32, Tensor[(486), float32]) {
  %1478 = @func_10337() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1479 = @func_15244() /* ty=(Tensor[(4, 6, 13), float32],) */;
  %1480 = cast(meta[relay.Constant][33] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %1481 = reshape(%1480, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %1482 = @func_11914(%1481) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], float32, Tensor[(486), float32]) */;
  %1483 = %1478.0;
  %1484 = %1479.0;
  %1485 = %1482.2;
  (%1483, %1484, %1485, meta[relay.Constant][33] /* ty=Tensor[(486), float32] */)
}

def @func_19936() -> Tensor[(4, 6, 13), bool] {
  %1486 = @func_18913() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1486.0
}

def @func_18408() -> (Tensor[(4, 6, 13), bool],) {
  %1489 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %1487 = @func_14972() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %1488 = %1487.0;
    (%1488,)
  };
  %1489() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_16646() -> Tensor[(4, 6, 13), bool] {
  @func_16644() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_5032(%var_4992: Tensor[(13, 6, 13), float32]) -> (Tensor[(13, 6, 13), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(13, 6, 13), bool]) {
  %1490 = cast(%var_4992, dtype="float32") /* ty=Tensor[(13, 6, 13), float32] */;
  %1491 = acos(%1490) /* ty=Tensor[(13, 6, 13), float32] */;
  %1492 = cast(%var_4992, dtype="float32") /* ty=Tensor[(13, 6, 13), float32] */;
  %1493 = shape_of(%1491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1494 = cast(%1491, dtype="float32") /* ty=Tensor[(13, 6, 13), float32] */;
  %1495 = dyn.reshape(%1492, %1493, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1496 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
  %1497 = cast(%1491, dtype="bool") /* ty=Tensor[(13, 6, 13), bool] */;
  %1498 = shape_of(%var_4992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1499 = cast(%var_4992, dtype="bool") /* ty=Tensor[(13, 6, 13), bool] */;
  %1500 = dyn.reshape(%1497, %1498, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1501 = power(%1494, %1495) /* ty=Tensor[(13, 6, 13), float32] */;
  %1502 = %1496.3;
  %1503 = @func_2170() /* ty=Tensor[(4, 6, 13), float64] */;
  %1504 = less(%1499, %1500) /* ty=Tensor[(13, 6, 13), bool] */;
  (%1501, %1502, %1503, %1504)
}

def @func_12847(%var_12809: Tensor[(9, 14, 2), uint64], %var_12810: Tensor[(9, 14, 2), uint64]) -> Tensor[(9, 14, 2), int8] {
  %1505 = cast(%var_12810, dtype="bool") /* ty=Tensor[(9, 14, 2), bool] */;
  %1506 = shape_of(%var_12809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1507 = cast(%var_12809, dtype="bool") /* ty=Tensor[(9, 14, 2), bool] */;
  %1508 = dyn.reshape(%1505, %1506, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1509 = less(%1507, %1508) /* ty=Tensor[(9, 14, 2), bool] */;
  %1510 = cast(%var_12810, dtype="int8") /* ty=Tensor[(9, 14, 2), int8] */;
  %1511 = shape_of(%1509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1512 = cast(%1509, dtype="int8") /* ty=Tensor[(9, 14, 2), int8] */;
  %1513 = dyn.reshape(%1510, %1511, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%1512, %1513) /* ty=Tensor[(9, 14, 2), int8] */
}

def @func_14446() -> (Tensor[(4, 6, 13), float64],) {
  %1514 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1515 = %1514.0;
  (%1515,)
}

def @func_6781() -> (Tensor[(4, 6, 13), float64],) {
  %1517 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1516 = @func_6587() /* ty=Tensor[(4, 6, 13), float64] */;
    (%1516,)
  };
  %1517() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_16972() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1524 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %1518 = @func_6506() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
    %1519 = @func_12343() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %1520 = @func_2927() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1521 = %1518.2;
    %1522 = %1519.1;
    %1523 = %1520.0;
    (%1521, %1522, %1523)
  };
  %1524() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_19644() -> (Tensor[(4, 6, 13), float64],) {
  %1525 = @func_1649() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1526 = %1525.2;
  (%1526,)
}

def @func_5093() -> Tensor[(4, 6, 13), float64] {
  @func_5091() /* ty=Tensor[(4, 6, 13), float64] */
}

def @func_11485(%var_11446: float32, %var_11447: Tensor[(14, 13, 8), float32]) -> Tensor[(14, 13, 8), float32] {
  %1527 = cast(%var_11446, dtype="float32") /* ty=float32 */;
  %1528 = cast(%var_11447, dtype="float32") /* ty=Tensor[(14, 13, 8), float32] */;
  power(%1527, %1528) /* ty=Tensor[(14, 13, 8), float32] */
}

def @func_6530(%var_6528: Tensor[(3, 12, 4), uint32]) -> Tensor[(3, 12, 4), bool] {
  @func_6527(%var_6528) /* ty=Tensor[(3, 12, 4), bool] */
}

def @func_7847() -> (Tensor[(4, 6, 13), float64],) {
  @func_7845() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_9592() -> Tensor[(4, 6, 13), float64] {
  %1529 = @func_7542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
  %1529.0
}

def @func_11666(%var_11665: Tensor[(14, 5, 4), int8]) -> (Tensor[(14, 5, 4), bool],) {
  %1535 = fn (%var_11653: Tensor[(14, 5, 4), int8]) -> (Tensor[(14, 5, 4), bool],) {
    %1530 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 5, 4), int8] */, dtype="bool") /* ty=Tensor[(14, 5, 4), bool] */;
    %1531 = shape_of(%var_11653, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1532 = cast(%var_11653, dtype="bool") /* ty=Tensor[(14, 5, 4), bool] */;
    %1533 = dyn.reshape(%1530, %1531, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1534 = greater_equal(%1532, %1533) /* ty=Tensor[(14, 5, 4), bool] */;
    (%1534,)
  };
  %1535(%var_11665) /* ty=(Tensor[(14, 5, 4), bool],) */
}

def @func_17780() -> Tensor[(4, 6, 13), float64] {
  %1536 = @func_15574() /* ty=(Tensor[(4, 6, 13), float64],) */;
  %1536.0
}

def @func_8175() -> (Tensor[(4, 6, 13), bool],) {
  @func_8173() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_18694() -> (Tensor[(4, 6, 13), bool], Tensor[(1890), float32]) {
  %1540 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(1890), float32]) {
    %1537 = @func_14761() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(9, 14, 15), float32], Tensor[(1890), float32], Tensor[(4, 6, 13), bool]) */;
    %1538 = @func_12674() /* ty=Tensor[(4, 6, 13), bool] */;
    %1539 = %1537.2;
    (%1538, %1539)
  };
  %1540() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(1890), float32]) */
}

def @func_13245() -> (Tensor[(4, 6, 13), bool],) {
  %1541 = @func_3789() /* ty=Tensor[(4, 6, 13), bool] */;
  (%1541,)
}

def @func_3217(%var_3215: Tensor[(11, 12, 2), float64], %var_3216: Tensor[(11, 12, 2), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32]) {
  %1553 = fn (%var_3171: Tensor[(11, 12, 2), float64], %var_3210: Tensor[(11, 12, 2), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32]) {
    %1542 = cast(%var_3171, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
    %1543 = @func_2533() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1544 = @func_1426() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1545 = cast(%var_3210, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
    %1546 = shape_of(%var_3171, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1547 = cast(%var_3171, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
    %1548 = dyn.reshape(%1545, %1546, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1549 = cos(%1542) /* ty=Tensor[(11, 12, 2), float64] */;
    %1550 = %1543.0;
    %1551 = %1544.0;
    %1552 = mod(%1547, %1548) /* ty=Tensor[(11, 12, 2), float32] */;
    (%1549, %1550, %1551, %1552)
  };
  %1553(%var_3215, %var_3216) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(11, 12, 2), float32]) */
}

def @func_11366(%var_11364: Tensor[(784), int8], %var_11365: Tensor[(784), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), float64]) {
  %1567 = fn (%var_11323: Tensor[(784), int8], %var_11352: Tensor[(784), int8]) -> (Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), float64]) {
    %1554 = @func_7635() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1555 = cast(%var_11323, dtype="int8") /* ty=Tensor[(784), int8] */;
    %1556 = cast(%var_11323, dtype="int8") /* ty=Tensor[(784), int8] */;
    %1557 = reshape(%1555, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
    %1558 = reshape(%1556, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), int8] */;
    %1559 = @func_5573(%1557, %1558) /* ty=(Tensor[(8, 7, 14), int64],) */;
    %1560 = cast(%var_11352, dtype="float64") /* ty=Tensor[(784), float64] */;
    %1561 = shape_of(%var_11323, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1562 = cast(%var_11323, dtype="float64") /* ty=Tensor[(784), float64] */;
    %1563 = dyn.reshape(%1560, %1561, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1564 = %1554.0;
    %1565 = %1559.0;
    %1566 = floor_divide(%1562, %1563) /* ty=Tensor[(784), float64] */;
    (%1564, %1565, %1566)
  };
  %1567(%var_11364, %var_11365) /* ty=(Tensor[(4, 6, 13), float64], Tensor[(8, 7, 14), int64], Tensor[(784), float64]) */
}

def @func_19767() -> (Tensor[(4, 6, 13), float64],) {
  %1570 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1568 = @func_4944() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */;
    %1569 = %1568.1;
    (%1569,)
  };
  %1570() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_3660() -> Tensor[(4, 6, 13), bool] {
  %1572 = fn () -> Tensor[(4, 6, 13), bool] {
    %1571 = @func_1704() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %1571.0
  };
  %1572() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_5485(%var_5484: Tensor[(11, 6, 5), float32]) -> (Tensor[(11, 6, 5), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
  %1582 = fn (%var_5462: Tensor[(11, 6, 5), float32]) -> (Tensor[(11, 6, 5), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) {
    %1573 = cast(%var_5462, dtype="float32") /* ty=Tensor[(11, 6, 5), float32] */;
    %1574 = @func_4644() /* ty=(Tensor[(4, 6, 13), float64],) */;
    %1575 = @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %1576 = @func_1564() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool]) */;
    %1577 = acos(%1573) /* ty=Tensor[(11, 6, 5), float32] */;
    %1578 = %1574.0;
    %1579 = %1575.0;
    %1580 = @func_5382() /* ty=Tensor[(4, 6, 13), float64] */;
    %1581 = %1576.0;
    (%1577, %1578, %1579, %1580, %1581)
  };
  %1582(%var_5484) /* ty=(Tensor[(11, 6, 5), float32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float32]) */
}

def @func_17553() -> (Tensor[(4, 6, 13), float64], Tensor[(3, 11, 2), bool]) {
  @func_17551() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(3, 11, 2), bool]) */
}

def @func_3673() -> (Tensor[(4, 6, 13), bool],) {
  @func_3671() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_19781(%var_19779: Tensor[(2, 13, 8), float32]) -> (Tensor[(2, 13, 8), float32],) {
  @func_19778(%var_19779) /* ty=(Tensor[(2, 13, 8), float32],) */
}

def @func_2649() -> Tensor[(4, 6, 13), float64] {
  %1583 = @func_2625() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), uint16], Tensor[(4, 6, 13), float64]) */;
  %1583.3
}

def @func_18913() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  %1584 = @func_4309() /* ty=(Tensor[(4, 6, 13), bool],) */;
  %1585 = %1584.0;
  %1586 = @func_13328() /* ty=Tensor[(4, 6, 13), float64] */;
  (%1585, %1586)
}

def @func_8050() -> (Tensor[(4, 6, 13), float64],) {
  %1587 = @func_1129() /* ty=(Tensor[(4, 6, 13), float32], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1588 = %1587.3;
  (%1588,)
}

def @func_5121() -> (Tensor[(4, 6, 13), bool],) {
  %1591 = fn () -> (Tensor[(4, 6, 13), bool],) {
    %1589 = @func_853() /* ty=(Tensor[(4, 6, 13), bool],) */;
    %1590 = %1589.0;
    (%1590,)
  };
  %1591() /* ty=(Tensor[(4, 6, 13), bool],) */
}

def @func_2018() -> (Tensor[(4, 6, 13), bool],) {
  %1592 = @func_967() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1593 = %1592.1;
  (%1593,)
}

def @func_7058() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) {
  %1594 = @func_2542() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1595 = @func_4188() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), bool]) */;
  %1596 = %1594.1;
  %1597 = %1595.1;
  (%1596, %1597)
}

def @func_2202() -> (Tensor[(4, 6, 13), float64],) {
  @func_2200() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_16417(%var_16416: Tensor[(6, 7, 2), uint32]) -> (Tensor[(6, 7, 2), uint32],) {
  %1603 = fn (%var_16399: Tensor[(6, 7, 2), uint32]) -> (Tensor[(6, 7, 2), uint32],) {
    %1598 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 7, 2), uint32] */, dtype="uint32") /* ty=Tensor[(6, 7, 2), uint32] */;
    %1599 = shape_of(%var_16399, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1600 = cast(%var_16399, dtype="uint32") /* ty=Tensor[(6, 7, 2), uint32] */;
    %1601 = dyn.reshape(%1598, %1599, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1602 = bitwise_or(%1600, %1601) /* ty=Tensor[(6, 7, 2), uint32] */;
    (%1602,)
  };
  %1603(%var_16416) /* ty=(Tensor[(6, 7, 2), uint32],) */
}

def @func_15127(%var_15077: float64) -> (Tensor[(1, 7, 15), float32], Tensor[(4, 6, 13), bool], Tensor[(9, 6, 10), uint32], Tensor[(540), uint32], Tensor[(4, 6, 13), float64]) {
  %1604 = cast(%var_15077, dtype="float64") /* ty=float64 */;
  %1605 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 7, 15), float64] */, dtype="float64") /* ty=Tensor[(1, 7, 15), float64] */;
  %1606 = multiply(%1604, %1605) /* ty=Tensor[(1, 7, 15), float64] */;
  %1607 = cast(%1606, dtype="float32") /* ty=Tensor[(1, 7, 15), float32] */;
  %1608 = @func_4850() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1609 = cast(meta[relay.Constant][37] /* ty=Tensor[(540), uint32] */, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %1610 = cast(meta[relay.Constant][37] /* ty=Tensor[(540), uint32] */, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %1611 = reshape(%1609, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1612 = reshape(%1610, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint32] */;
  %1613 = @func_3937(%1611, %1612) /* ty=(Tensor[(9, 6, 10), uint32], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1614 = cast(meta[relay.Constant][37] /* ty=Tensor[(540), uint32] */, dtype="uint32") /* ty=Tensor[(540), uint32] */;
  %1615 = reshape(%1614, newshape=[540]) /* ty=Tensor[(540), uint32] */;
  %1616 = @func_7898(%1615) /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(540), uint32]) */;
  %1617 = acos(%1607) /* ty=Tensor[(1, 7, 15), float32] */;
  %1618 = %1608.1;
  %1619 = %1613.0;
  %1620 = %1616.1;
  (%1617, %1618, %1619, meta[relay.Constant][37] /* ty=Tensor[(540), uint32] */, %1620)
}

def @func_15491() -> (Tensor[(4, 6, 13), float64],) {
  @func_15489() /* ty=(Tensor[(4, 6, 13), float64],) */
}

def @func_6716() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1625 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %1621 = @func_4481() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %1622 = @func_2360() /* ty=Tensor[(4, 6, 13), float64] */;
    %1623 = @func_2649() /* ty=Tensor[(4, 6, 13), float64] */;
    %1624 = %1621.2;
    (%1622, %1623, %1624)
  };
  %1625() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_11489(%var_11487: float32, %var_11488: Tensor[(14, 13, 8), float32]) -> Tensor[(14, 13, 8), float32] {
  @func_11485(%var_11487, %var_11488) /* ty=Tensor[(14, 13, 8), float32] */
}

def @func_9316() -> Tensor[(4, 6, 13), bool] {
  @func_9314() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_7683() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1630 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %1626 = @func_4680() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1627 = @func_3557() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
    %1628 = %1626.0;
    %1629 = %1627.0;
    (%1628, %1629)
  };
  %1630() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_4141() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  @func_4139() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_12002() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1631 = @func_11009() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */;
  %1632 = @func_10789() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
  %1633 = %1631.1;
  %1634 = %1632.1;
  (%1633, %1634)
}

def @func_4946() -> (Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) {
  @func_4944() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(4, 6, 13), float64]) */
}

def @func_14153() -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
  %1638 = fn () -> (Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) {
    %1635 = @func_2360() /* ty=Tensor[(4, 6, 13), float64] */;
    %1636 = @func_9922() /* ty=Tensor[(4, 6, 13), float64] */;
    %1637 = @func_5382() /* ty=Tensor[(4, 6, 13), float64] */;
    (%1635, %1636, %1637)
  };
  %1638() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), float64]) */
}

def @func_18326() -> (Tensor[(4, 6, 13), bool], Tensor[(14, 5, 4), bool], Tensor[(280, 1), float32]) {
  %1647 = fn () -> (Tensor[(4, 6, 13), bool], Tensor[(14, 5, 4), bool], Tensor[(280, 1), float32]) {
    %1639 = @func_7058() /* ty=(Tensor[(4, 6, 13), float64], Tensor[(4, 6, 13), bool]) */;
    %1640 = cast(meta[relay.Constant][38] /* ty=Tensor[(280, 1), int8] */, dtype="int8") /* ty=Tensor[(280, 1), int8] */;
    %1641 = reshape(%1640, newshape=[14, 5, 4]) /* ty=Tensor[(14, 5, 4), int8] */;
    %1642 = @func_11664(%1641) /* ty=(Tensor[(14, 5, 4), bool],) */;
    %1643 = cast(meta[relay.Constant][38] /* ty=Tensor[(280, 1), int8] */, dtype="float32") /* ty=Tensor[(280, 1), float32] */;
    %1644 = %1639.1;
    %1645 = %1642.0;
    %1646 = asin(%1643) /* ty=Tensor[(280, 1), float32] */;
    (%1644, %1645, %1646)
  };
  %1647() /* ty=(Tensor[(4, 6, 13), bool], Tensor[(14, 5, 4), bool], Tensor[(280, 1), float32]) */
}

def @func_9241() -> Tensor[(4, 6, 13), bool] {
  @func_9239() /* ty=Tensor[(4, 6, 13), bool] */
}

def @func_7636() -> (Tensor[(4, 6, 13), float64],) {
  %1649 = fn () -> (Tensor[(4, 6, 13), float64],) {
    %1648 = @func_5091() /* ty=Tensor[(4, 6, 13), float64] */;
    (%1648,)
  };
  %1649() /* ty=(Tensor[(4, 6, 13), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen440/build/output.py:6402: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen440/build/output.py", line 6407, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(80) tvmgen_default_fused_logical_or_kernel0(signed char* __restrict__ T_logical_or, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_logical_or[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) || ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_11955() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %0 = @func_11230() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1 = @func_5467() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %2 = @func_7310() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %3 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %4 = %0.0;
  %5 = %1.0;
  %6 = %2.0;
  %7 = %3.0;
  (%4, %5, %6, %7)
}

def @func_7705() -> Tensor[(6, 9, 15), float64] {
  @func_1914() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_9898() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %8 = @func_6044() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %9 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %10 = %8.0;
  %11 = %9.0;
  %12 = @func_6839() /* ty=Tensor[(6, 9, 15), float64] */;
  (%10, %11, %12)
}

def @func_2887() -> (Tensor[(6, 9, 15), float64],) {
  %13 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %14 = %13.0;
  (%14,)
}

def @func_15063() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %15 = @func_6282() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %16 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %17 = @func_6569() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %18 = %15.0;
  %19 = %16.3;
  %20 = %17.0;
  (%18, %19, %20)
}

def @func_2569() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %21 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %22 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %23 = @func_1808() /* ty=Tensor[(6, 9, 15), float64] */;
  %24 = %21.0;
  (%22, %23, %24)
}

def @func_12762(%var_12759: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(9, 15, 2), int64], Tensor[(270), int64], Tensor[(396), float32], Tensor[(75), int32]) {
  %25 = @func_6044() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %26 = @func_7137() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %28 = cast(meta[relay.Constant][1] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %29 = cast(%var_12759, dtype="int32") /* ty=Tensor[(75), int32] */;
  %30 = reshape(%27, newshape=[9, 15, 2]) /* ty=Tensor[(9, 15, 2), int64] */;
  %31 = reshape(%28, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %32 = reshape(%29, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %33 = @func_5832(%30, %31, %32) /* ty=(Tensor[(9, 15, 2), int64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(6, 9, 15), float64], Tensor[(75), bool]) */;
  %34 = %25.0;
  %35 = @func_7344() /* ty=Tensor[(6, 9, 15), float64] */;
  %36 = %26.0;
  %37 = %33.0;
  (%34, %35, %36, %37, meta[relay.Constant][0] /* ty=Tensor[(270), int64] */, meta[relay.Constant][1] /* ty=Tensor[(396), float32] */, %var_12759)
}

def @func_6352() -> (Tensor[(6, 9, 15), float64],) {
  %38 = @func_3063() /* ty=Tensor[(6, 9, 15), float64] */;
  (%38,)
}

def @func_10735(%var_10720: Tensor[(9, 3, 16), float32], %var_10728: int8) -> (Tensor[(9, 3, 16), float32], int8, int8) {
  %39 = cast(%var_10720, dtype="float32") /* ty=Tensor[(9, 3, 16), float32] */;
  %40 = cast(%var_10728, dtype="int8") /* ty=int8 */;
  %41 = reshape(%40, newshape=[]) /* ty=int8 */;
  %42 = @func_3681(%41) /* ty=(Tensor[(6, 9, 15), bool], int8, Tensor[(637), uint32], Tensor[(10, 2, 11), float64], Tensor[(6, 9, 15), float32]) */;
  %43 = atanh(%39) /* ty=Tensor[(9, 3, 16), float32] */;
  %44 = %42.1;
  (%43, %44, %var_10728)
}

def @func_3019(%var_3006: Tensor[(6, 9, 15), float64]) -> Tensor[(6, 9, 15), float32] {
  %45 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  %46 = cast(%var_3006, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %47 = shape_of(%45, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%45, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%48, %49) /* ty=Tensor[(6, 9, 15), float32] */
}

def @func_15385() -> Tensor[(6, 9, 15), float64] {
  %50 = @func_3482() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %50.0
}

def @func_7344() -> Tensor[(6, 9, 15), float64] {
  @func_6431() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_10081() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %51 = @func_4419() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %52 = @func_6078() /* ty=Tensor[(6, 9, 15), float64] */;
  %53 = %51.1;
  (%52, %53)
}

def @func_5233() -> (Tensor[(6, 9, 15), float64],) {
  %54 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %55 = %54.0;
  (%55,)
}

def @func_7627() -> Tensor[(6, 9, 15), float64] {
  @func_7344() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_17517() -> (Tensor[(6, 9, 15), float64],) {
  %56 = @func_16576() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %57 = %56.0;
  (%57,)
}

def @func_9277() -> Tensor[(1050), uint16] {
  %58 = @func_7159() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(1050), float64], Tensor[(1, 637), uint32]) */;
  %59 = %58.1;
  %60 = cast(%59, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %61 = tan(%60) /* ty=Tensor[(1050), float32] */;
  %62 = cast(%59, dtype="uint16") /* ty=Tensor[(1050), uint16] */;
  %63 = shape_of(%61, dtype="int32") /* ty=Tensor[(1), int32] */;
  %64 = cast(%61, dtype="uint16") /* ty=Tensor[(1050), uint16] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?), uint16] */;
  subtract(%64, %65) /* ty=Tensor[(1050), uint16] */
}

def @func_15959() -> Tensor[(3, 11, 10), float64] {
  %66 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 10), float64] */;
  sigmoid(%66) /* ty=Tensor[(3, 11, 10), float64] */
}

def @func_6861() -> Tensor[(15, 16, 6), float32] {
  %67 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 16, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  asinh(%67) /* ty=Tensor[(15, 16, 6), float32] */
}

def @func_5126() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %68 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %69 = @func_4954() /* ty=Tensor[(6, 9, 15), float64] */;
  (%68, %69)
}

def @func_8301(%var_8271: Tensor[(1024), int16]) -> (Tensor[(6, 9, 15), float32], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %70 = cast(%var_8271, dtype="int16") /* ty=Tensor[(1024), int16] */;
  %71 = reshape(%70, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), int16] */;
  %72 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %73 = @func_5358() /* ty=Tensor[(6, 9, 15), float32] */;
  %74 = @func_6547(%71) /* ty=Tensor[(8, 8, 16), int16] */;
  %75 = %72.0;
  %76 = @func_6431() /* ty=Tensor[(6, 9, 15), float64] */;
  (%73, %74, %var_8271, %75, %76)
}

def @func_13176(%var_13168: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(75), int32]) {
  %77 = cast(%var_13168, dtype="int32") /* ty=Tensor[(75), int32] */;
  %78 = reshape(%77, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %79 = @func_12762(%78) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(9, 15, 2), int64], Tensor[(270), int64], Tensor[(396), float32], Tensor[(75), int32]) */;
  %80 = @func_10555() /* ty=Tensor[(6, 9, 15), float32] */;
  %81 = @func_6078() /* ty=Tensor[(6, 9, 15), float64] */;
  %82 = %79.5;
  (%80, %81, %82, %var_13168)
}

def @func_6460() -> Tensor[(6, 9, 15), float64] {
  @func_4258() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_3934() -> (Tensor[(6, 9, 15), float64],) {
  %83 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %84 = %83.0;
  (%84,)
}

def @func_552(%var_536: Tensor[(3, 11, 12), float32]) -> (Tensor[(3, 11, 12), uint32],) {
  %85 = cast(%var_536, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
  %86 = asinh(%85) /* ty=Tensor[(3, 11, 12), float32] */;
  %87 = cast(%var_536, dtype="uint32") /* ty=Tensor[(3, 11, 12), uint32] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="uint32") /* ty=Tensor[(3, 11, 12), uint32] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %91 = subtract(%89, %90) /* ty=Tensor[(3, 11, 12), uint32] */;
  (%91,)
}

def @func_8877(%var_8869: uint32) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], uint32) {
  %92 = cast(%var_8869, dtype="uint32") /* ty=uint32 */;
  %93 = reshape(%92, newshape=[]) /* ty=uint32 */;
  %94 = @func_2478(%93) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(9, 12, 14), bool], uint32, Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %95 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %96 = %94.0;
  (%95, %96, %var_8869)
}

def @func_7589(%var_7556: int32) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(16, 6, 13), int32], int32, Tensor[(6, 9, 15), float64]) {
  %97 = @func_2841() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
  %98 = @func_6721() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %99 = cast(%var_7556, dtype="int32") /* ty=int32 */;
  %100 = reshape(%99, newshape=[]) /* ty=int32 */;
  %101 = @func_4381(%100) /* ty=(Tensor[(16, 6, 13), int32],) */;
  %102 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %103 = %97.1;
  %104 = @func_5069() /* ty=Tensor[(6, 9, 15), float64] */;
  %105 = %98.0;
  %106 = %101.0;
  %107 = %102.0;
  (%103, %104, %105, %106, %var_7556, %107)
}

def @func_15555() -> (Tensor[(6, 9, 15), float64], Tensor[(396), float32], int8, Tensor[(6, 9, 15), float64]) {
  %108 = cast(meta[relay.Constant][4] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %109 = reshape(%108, newshape=[]) /* ty=int8 */;
  %110 = @func_3800(%109) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(396), float32]) */;
  %111 = @func_13988() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %112 = @func_6839() /* ty=Tensor[(6, 9, 15), float64] */;
  %113 = %110.4;
  %114 = %111.0;
  (%112, %113, meta[relay.Constant][4] /* ty=int8 */, %114)
}

def @func_13134() -> (Tensor[(6, 9, 15), float64],) {
  %115 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
  (%115,)
}

def @func_1411() -> Tensor[(6, 9, 15), float64] {
  %116 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  cosh(%116) /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_1598() -> (Tensor[(6, 9, 15), float64],) {
  %117 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  (%117,)
}

def @func_14810(%var_14765: int8, %var_14766: Tensor[(8, 6, 4), int8]) -> (Tensor[(8, 6, 4), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %118 = cast(%var_14765, dtype="int8") /* ty=int8 */;
  %119 = cast(%var_14766, dtype="int8") /* ty=Tensor[(8, 6, 4), int8] */;
  %120 = bitwise_xor(%118, %119) /* ty=Tensor[(8, 6, 4), int8] */;
  %121 = cast(%120, dtype="float32") /* ty=Tensor[(8, 6, 4), float32] */;
  %122 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %123 = @func_11230() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %124 = sigmoid(%121) /* ty=Tensor[(8, 6, 4), float32] */;
  %125 = %122.1;
  %126 = %123.1;
  (%124, %125, %126)
}

def @func_12223() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %127 = @func_4692() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %128 = @func_2887() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %129 = @func_7474() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %130 = %127.0;
  %131 = %128.0;
  %132 = %129.0;
  (%130, %131, %132)
}

def @func_13389() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %133 = @func_11230() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %134 = @func_3999() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
  %135 = %133.1;
  %136 = %134.3;
  (%135, %136)
}

def @func_14235() -> Tensor[(6, 9, 15), float64] {
  %137 = @func_9732() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %137.0
}

def @func_916(%var_904: int8, %var_905: Tensor[(16, 16, 10), int8], %var_913: Tensor[(1, 637), uint32]) -> (Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) {
  %138 = cast(%var_904, dtype="bool") /* ty=bool */;
  %139 = cast(%var_905, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %140 = cast(%var_913, dtype="uint32") /* ty=Tensor[(1, 637), uint32] */;
  %141 = reshape(%140, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), uint32] */;
  %142 = @func_872(%141) /* ty=(Tensor[(7, 13, 7), bool],) */;
  %143 = equal(%138, %139) /* ty=Tensor[(16, 16, 10), bool] */;
  %144 = %142.0;
  (%143, %144, %var_913)
}

def @func_8584() -> (Tensor[(396), float64], Tensor[(6, 9, 15), float64]) {
  %145 = @func_6894() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
  %146 = %145.1;
  %147 = cast(meta[relay.Constant][6] /* ty=Tensor[(396), float32] */, dtype="int64") /* ty=Tensor[(396), int64] */;
  %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(1), int32] */;
  %149 = cast(%146, dtype="int64") /* ty=Tensor[(396), int64] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?), int64] */;
  %151 = logical_xor(%149, %150) /* ty=Tensor[(396), int64] */;
  %152 = cast(meta[relay.Constant][6] /* ty=Tensor[(396), float32] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %153 = shape_of(%151, dtype="int32") /* ty=Tensor[(1), int32] */;
  %154 = cast(%151, dtype="float64") /* ty=Tensor[(396), float64] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?), float64] */;
  %156 = divide(%154, %155) /* ty=Tensor[(396), float64] */;
  %157 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
  (%156, %157)
}

def @func_13565() -> (Tensor[(6, 9, 15), float64],) {
  %158 = @func_3482() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %159 = %158.0;
  (%159,)
}

def @func_9732() -> (Tensor[(6, 9, 15), float64],) {
  %160 = @func_6078() /* ty=Tensor[(6, 9, 15), float64] */;
  (%160,)
}

def @func_11032() -> Tensor[(6, 9, 15), float64] {
  @func_7344() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_12695(%var_12660: Tensor[(4, 7, 14), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(4, 7, 14), float64], Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %161 = @func_9732() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %162 = cast(%var_12660, dtype="float32") /* ty=Tensor[(4, 7, 14), float32] */;
  %163 = sqrt(%162) /* ty=Tensor[(4, 7, 14), float32] */;
  %164 = cast(%163, dtype="float64") /* ty=Tensor[(4, 7, 14), float64] */;
  %165 = @func_8015() /* ty=(Tensor[(6, 9, 15), bool],) */;
  %166 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %167 = %161.0;
  %168 = cos(%164) /* ty=Tensor[(4, 7, 14), float64] */;
  %169 = %165.0;
  %170 = %166.0;
  %171 = @func_5069() /* ty=Tensor[(6, 9, 15), float64] */;
  (%167, %168, %169, %170, %171)
}

def @func_4055(%var_4047: Tensor[(2, 11, 4), float64]) -> (Tensor[(2, 11, 4), float64], Tensor[(6, 9, 15), float64]) {
  %172 = cast(%var_4047, dtype="float64") /* ty=Tensor[(2, 11, 4), float64] */;
  %173 = @func_3934() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %174 = cos(%172) /* ty=Tensor[(2, 11, 4), float64] */;
  %175 = %173.0;
  (%174, %175)
}

def @func_13251(%var_13230: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(2, 11, 9), float64], Tensor[(198, 1), float32], Tensor[(6, 9, 15), bool], int8) {
  %176 = cast(meta[relay.Constant][7] /* ty=Tensor[(198, 1), float32] */, dtype="float32") /* ty=Tensor[(198, 1), float32] */;
  %177 = reshape(%176, newshape=[2, 11, 9]) /* ty=Tensor[(2, 11, 9), float32] */;
  %178 = @func_10980(%177) /* ty=(Tensor[(2, 11, 9), float64], Tensor[(2, 11, 9), float64]) */;
  %179 = cast(%var_13230, dtype="int8") /* ty=int8 */;
  %180 = reshape(%179, newshape=[]) /* ty=int8 */;
  %181 = @func_3681(%180) /* ty=(Tensor[(6, 9, 15), bool], int8, Tensor[(637), uint32], Tensor[(10, 2, 11), float64], Tensor[(6, 9, 15), float32]) */;
  %182 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %183 = @func_7705() /* ty=Tensor[(6, 9, 15), float64] */;
  %184 = @func_4258() /* ty=Tensor[(6, 9, 15), float64] */;
  %185 = %178.1;
  %186 = %181.0;
  (%182, %183, %184, %185, meta[relay.Constant][7] /* ty=Tensor[(198, 1), float32] */, %186, %var_13230)
}

def @func_10381() -> Tensor[(11, ?, 10), float64] {
  %187 = @func_8395() /* ty=(Tensor[(11, ?, 10), int8],) */;
  %188 = %187.0;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(11, ?, 10), float64] */;
  log(%189) /* ty=Tensor[(11, ?, 10), float64] */
}

def @func_7310() -> (Tensor[(6, 9, 15), float64],) {
  %190 = @func_5467() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %191 = %190.0;
  (%191,)
}

def @func_12881() -> (Tensor[(6, 9, 15), float64],) {
  %192 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %193 = %192.1;
  (%193,)
}

def @func_7197(%var_7161: bool, %var_7162: Tensor[(1, 15, 5), bool]) -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 15, 5), float32]) {
  %194 = @func_3482() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %195 = cast(%var_7162, dtype="int32") /* ty=Tensor[(1, 15, 5), int32] */;
  %196 = reshape(%195, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %197 = @func_5944(%196) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %198 = cast(%var_7161, dtype="bool") /* ty=bool */;
  %199 = cast(%var_7162, dtype="bool") /* ty=Tensor[(1, 15, 5), bool] */;
  %200 = logical_or(%198, %199) /* ty=Tensor[(1, 15, 5), bool] */;
  %201 = cast(%200, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
  %202 = %194.0;
  %203 = %197.1;
  %204 = erf(%201) /* ty=Tensor[(1, 15, 5), float32] */;
  (%202, %203, %204)
}

def @func_12525() -> Tensor[(6, 9, 15), float64] {
  %205 = @func_10941() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %205.1
}

def @func_8101() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int32) {
  %206 = @func_4602() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %207 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %208 = reshape(%207, newshape=[]) /* ty=int32 */;
  %209 = @func_7589(%208) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(16, 6, 13), int32], int32, Tensor[(6, 9, 15), float64]) */;
  %210 = %206.0;
  %211 = %209.0;
  (%210, %211, -2 /* ty=int32 */)
}

def @func_18503() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %212 = @func_6569() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %213 = %212.0;
  %214 = @func_7857() /* ty=Tensor[(6, 9, 15), float64] */;
  %215 = @func_17932() /* ty=Tensor[(6, 9, 15), float64] */;
  (%213, %214, %215)
}

def @func_11820(%var_11817: Tensor[(432), float32]) -> (Tensor[(6, 9, 15), float64], int8, Tensor[(432), float32], int8) {
  %216 = cast(%var_11817, dtype="float32") /* ty=Tensor[(432), float32] */;
  %217 = cast(meta[relay.Constant][8] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %218 = reshape(%216, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), float32] */;
  %219 = reshape(%217, newshape=[]) /* ty=int8 */;
  %220 = @func_10735(%218, %219) /* ty=(Tensor[(9, 3, 16), float32], int8, int8) */;
  %221 = @func_11170() /* ty=Tensor[(6, 9, 15), float64] */;
  %222 = %220.2;
  (%221, %222, %var_11817, meta[relay.Constant][8] /* ty=int8 */)
}

def @func_6329() -> Tensor[(6, 9, 15), float64] {
  %223 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %223.0
}

def @func_15972() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %224 = @func_8584() /* ty=(Tensor[(396), float64], Tensor[(6, 9, 15), float64]) */;
  %225 = @func_14303() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), int8]) */;
  %226 = %224.1;
  %227 = %225.0;
  (%226, %227)
}

def @func_17846() -> (Tensor[(6, 9, 15), float64],) {
  %228 = @func_14378() /* ty=Tensor[(6, 9, 15), float64] */;
  (%228,)
}

def @func_16858(%var_16832: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), bool], Tensor[(11, ?, 10), uint64], Tensor[(11, 12, 10), int32], Tensor[(6, 9, 15), float64], Tensor[(15, ?, 5), bool], Tensor[(75), int32], Tensor[(10, 1, 4), float64], Tensor[(40), float64]) {
  %229 = @func_5467() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %230 = @func_12156() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64]) */;
  %231 = %230.1;
  %232 = cast(%231, dtype="float32") /* ty=Tensor[(11, ?, 10), float32] */;
  %233 = sinh(%232) /* ty=Tensor[(11, ?, 10), float32] */;
  %234 = cast(%233, dtype="float64") /* ty=Tensor[(11, ?, 10), float64] */;
  %235 = acosh(%234) /* ty=Tensor[(11, ?, 10), float64] */;
  %236 = cast(%233, dtype="float64") /* ty=Tensor[(11, ?, 10), float64] */;
  %237 = shape_of(%235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%235, dtype="float64") /* ty=Tensor[(11, ?, 10), float64] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %240 = multiply(%238, %239) /* ty=Tensor[(11, ?, 10), float64] */;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(11, ?, 10), float32] */;
  %242 = atanh(%241) /* ty=Tensor[(11, ?, 10), float32] */;
  %243 = cast(%233, dtype="bool") /* ty=Tensor[(11, ?, 10), bool] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%242, dtype="bool") /* ty=Tensor[(11, ?, 10), bool] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %247 = cast(%240, dtype="uint64") /* ty=Tensor[(11, ?, 10), uint64] */;
  %248 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(%242, dtype="uint64") /* ty=Tensor[(11, ?, 10), uint64] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %251 = cast(%240, dtype="int32") /* ty=Tensor[(11, ?, 10), int32] */;
  %252 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 12, 10), float64] */, dtype="int32") /* ty=Tensor[(11, 12, 10), int32] */;
  %253 = cast(%var_16832, dtype="int32") /* ty=Tensor[(75), int32] */;
  %254 = reshape(%253, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), int32] */;
  %255 = @func_2052(%254) /* ty=(Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) */;
  %256 = cast(meta[relay.Constant][10] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %257 = reshape(%256, newshape=[10, 1, 4]) /* ty=Tensor[(10, 1, 4), float64] */;
  %258 = %229.0;
  %259 = less(%245, %246) /* ty=Tensor[(11, ?, 10), bool] */;
  %260 = logical_xor(%249, %250) /* ty=Tensor[(11, ?, 10), uint64] */;
  %261 = right_shift(%251, %252) /* ty=Tensor[(11, 12, 10), int32] */;
  %262 = @func_7627() /* ty=Tensor[(6, 9, 15), float64] */;
  %263 = %255.0;
  %264 = @func_12006(%257) /* ty=Tensor[(10, 1, 4), float64] */;
  (%258, %259, %260, %261, %262, %263, %var_16832, %264, meta[relay.Constant][10] /* ty=Tensor[(40), float64] */)
}

def @func_17682(%var_17658: Tensor[(4, 12, 16), uint8]) -> (Tensor[(4, 12, 16), uint8], Tensor[(6, 9, 15), float64]) {
  %265 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 12, 16), uint8] */, dtype="uint8") /* ty=Tensor[(4, 12, 16), uint8] */;
  %266 = shape_of(%var_17658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%var_17658, dtype="uint8") /* ty=Tensor[(4, 12, 16), uint8] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %269 = @func_7474() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %270 = right_shift(%267, %268) /* ty=Tensor[(4, 12, 16), uint8] */;
  %271 = %269.1;
  (%270, %271)
}

def @func_4117(%var_4114: Tensor[(1050), float64], %var_4115: Tensor[(396), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(3, 11, 12), uint32], Tensor[(1050), float64], Tensor[(396), float32]) {
  %272 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %273 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %274 = cast(%var_4114, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %275 = cast(%var_4115, dtype="float32") /* ty=Tensor[(396), float32] */;
  %276 = reshape(%274, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %277 = reshape(%275, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %278 = @func_704(%276, %277) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */;
  %279 = %272.0;
  %280 = %273.0;
  %281 = %278.2;
  (%279, %280, %281, %var_4114, %var_4115)
}

def @func_6282() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %282 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %283 = @func_5978() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %284 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %285 = %282.0;
  %286 = %283.0;
  %287 = %284.0;
  (%285, %286, %287)
}

def @func_5513() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %288 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %289 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %290 = @func_4212() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %291 = %288.0;
  %292 = %289.0;
  %293 = %290.0;
  (%291, %292, %293)
}

def @func_11288() -> (Tensor[(6, 9, 15), float64],) {
  %294 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %295 = %294.0;
  (%295,)
}

def @func_8846() -> (Tensor[(6, 9, 15), float32],) {
  %296 = @func_5300() /* ty=Tensor[(6, 9, 15), float32] */;
  (%296,)
}

def @func_1808() -> Tensor[(6, 9, 15), float64] {
  @func_1769() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_2223() -> (Tensor[(6, 9, 15), float64],) {
  %297 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %298 = %297.0;
  (%298,)
}

def @func_14887() -> (Tensor[(6, 9, 15), float64],) {
  %299 = @func_6124() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %300 = %299.0;
  (%300,)
}

def @func_17932() -> Tensor[(6, 9, 15), float64] {
  @func_9551() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_7159() -> (Tensor[(6, 9, 15), float64], Tensor[(1050), float64], Tensor[(1, 637), uint32]) {
  %301 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 637), uint32] */, dtype="uint32") /* ty=Tensor[(1, 637), uint32] */;
  %302 = reshape(%301, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %303 = @func_4550(%302) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(1050), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
  %304 = @func_3047() /* ty=Tensor[(6, 9, 15), float64] */;
  %305 = %303.1;
  (%304, %305, meta[relay.Constant][12] /* ty=Tensor[(1, 637), uint32] */)
}

def @func_8087() -> (Tensor[(6, 9, 15), float32], Tensor[(10, 4, 4), bool], int16, Tensor[(160), int16]) {
  %306 = @func_7807() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %307 = cast(meta[relay.Constant][13] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %308 = cast(meta[relay.Constant][14] /* ty=Tensor[(160), int16] */, dtype="int16") /* ty=Tensor[(160), int16] */;
  %309 = reshape(%307, newshape=[]) /* ty=int16 */;
  %310 = reshape(%308, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), int16] */;
  %311 = %306.0;
  %312 = @func_6159(%309, %310) /* ty=Tensor[(10, 4, 4), bool] */;
  (%311, %312, meta[relay.Constant][13] /* ty=int16 */, meta[relay.Constant][14] /* ty=Tensor[(160), int16] */)
}

def @func_11322() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %313 = @func_3999() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
  %314 = @func_6215() /* ty=Tensor[(6, 9, 15), float64] */;
  %315 = %313.0;
  (%314, %315)
}

def @func_3809() -> (Tensor[(6, 9, 15), float32],) {
  %316 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %317 = %316.0;
  (%317,)
}

def @func_5542(%var_5522: int8, %var_5523: Tensor[(2560), int8], %var_5524: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) {
  %318 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %319 = cast(%var_5522, dtype="int8") /* ty=int8 */;
  %320 = cast(%var_5523, dtype="int8") /* ty=Tensor[(2560), int8] */;
  %321 = cast(%var_5524, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %322 = reshape(%319, newshape=[]) /* ty=int8 */;
  %323 = reshape(%320, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int8] */;
  %324 = reshape(%321, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
  %325 = @func_916(%322, %323, %324) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) */;
  %326 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %327 = %318.0;
  %328 = %325.0;
  %329 = %326.0;
  (%327, %328, %var_5522, %var_5523, %var_5524, %329)
}

def @func_18164() -> (Tensor[(6, 9, 15), float64], Tensor[(13, 1, 8), float32], Tensor[(104), float32]) {
  %330 = cast(meta[relay.Constant][15] /* ty=Tensor[(104), float32] */, dtype="float32") /* ty=Tensor[(104), float32] */;
  %331 = reshape(%330, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float32] */;
  %332 = @func_9314() /* ty=Tensor[(6, 9, 15), float64] */;
  %333 = @func_12705(%331) /* ty=Tensor[(13, 1, 8), float32] */;
  (%332, %333, meta[relay.Constant][15] /* ty=Tensor[(104), float32] */)
}

def @func_16092() -> (Tensor[(6, 9, 15), float64],) {
  %334 = @func_6329() /* ty=Tensor[(6, 9, 15), float64] */;
  (%334,)
}

def @func_16322() -> Tensor[(6, 9, 15), float64] {
  @func_9198() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_9303() -> Tensor[(6, 9, 15), float64] {
  %335 = @func_9082() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %335.1
}

def @func_2632() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %336 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %337 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %338 = %336.0;
  %339 = %337.0;
  (%338, %339)
}

def @func_11334() -> Tensor[(6, 9, 15), float64] {
  @func_8367() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_15219() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %340 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %341 = @func_10941() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %342 = %340.1;
  %343 = %341.1;
  (%342, %343)
}

def @func_3999() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) {
  %344 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %345 = cast(meta[relay.Constant][16] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %346 = reshape(%345, newshape=[]) /* ty=int8 */;
  %347 = @func_3800(%346) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(396), float32]) */;
  %348 = %344.0;
  %349 = %347.1;
  %350 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  (%348, %349, meta[relay.Constant][16] /* ty=int8 */, %350)
}

def @func_16188() -> (Tensor[(6, 9, 15), float64],) {
  %351 = @func_2887() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %352 = %351.0;
  (%352,)
}

def @func_9198() -> Tensor[(6, 9, 15), float64] {
  %353 = @func_7111() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %353.1
}

def @func_18047() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %354 = @func_11288() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %355 = @func_8599() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %356 = %354.0;
  %357 = %355.0;
  (%356, %357)
}

def @func_7754() -> (Tensor[(6, 9, 15), float64],) {
  %358 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %359 = %358.0;
  (%359,)
}

def @func_13683() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(75, 1), int32], Tensor[(6, 9, 15), float32]) {
  %360 = cast(meta[relay.Constant][17] /* ty=Tensor[(75, 1), int32] */, dtype="int32") /* ty=Tensor[(75, 1), int32] */;
  %361 = reshape(%360, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %362 = @func_8347(%361) /* ty=(Tensor[(75), int32], Tensor[(75), int32], Tensor[(2, 3, 15), uint16], Tensor[(6, 9, 15), float64]) */;
  %363 = cast(meta[relay.Constant][17] /* ty=Tensor[(75, 1), int32] */, dtype="int32") /* ty=Tensor[(75, 1), int32] */;
  %364 = reshape(%363, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %365 = @func_5944(%364) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %366 = @func_10627() /* ty=Tensor[(6, 9, 15), float64] */;
  %367 = %362.3;
  %368 = %365.0;
  (%366, %367, meta[relay.Constant][17] /* ty=Tensor[(75, 1), int32] */, %368)
}

def @func_16704(%var_16677: int16) -> (Tensor[(6, 9, 15), float64], Tensor[(15, 16, 6), float32], Tensor[(10, 4, 4), bool], int16, Tensor[(160), int16], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %369 = @func_11482() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %370 = @func_9978() /* ty=(Tensor[(15, 16, 6), float64], Tensor[(6, 9, 15), float32]) */;
  %371 = %370.0;
  %372 = cast(%371, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %373 = cast(%var_16677, dtype="int16") /* ty=int16 */;
  %374 = cast(meta[relay.Constant][18] /* ty=Tensor[(160), int16] */, dtype="int16") /* ty=Tensor[(160), int16] */;
  %375 = reshape(%373, newshape=[]) /* ty=int16 */;
  %376 = reshape(%374, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), int16] */;
  %377 = @func_15972() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %378 = @func_15769() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %379 = @func_16133() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %380 = @func_11571() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %381 = %369.1;
  %382 = asin(%372) /* ty=Tensor[(15, 16, 6), float32] */;
  %383 = @func_6159(%375, %376) /* ty=Tensor[(10, 4, 4), bool] */;
  %384 = %377.1;
  %385 = %378.0;
  %386 = %379.0;
  %387 = %380.1;
  (%381, %382, %383, %var_16677, meta[relay.Constant][18] /* ty=Tensor[(160), int16] */, %384, %385, %386, %387)
}

def @func_8119() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %388 = @func_6974() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %389 = %388.0;
  %390 = @func_3409() /* ty=Tensor[(6, 9, 15), float64] */;
  (%389, %390)
}

def @func_15769() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %391 = @func_11982() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(1050), float64], Tensor[(637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
  %392 = %391.0;
  %393 = @func_5069() /* ty=Tensor[(6, 9, 15), float64] */;
  (%392, %393)
}

def @func_3047() -> Tensor[(6, 9, 15), float64] {
  %394 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %394.1
}

def @func_10608(%var_10578: int8, %var_10579: Tensor[(637), uint32]) -> (Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(637), uint8]) {
  %395 = cast(%var_10578, dtype="int8") /* ty=int8 */;
  %396 = cast(%var_10579, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %397 = reshape(%395, newshape=[]) /* ty=int8 */;
  %398 = reshape(%396, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %399 = @func_2123(%397, %398) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
  %400 = cast(meta[relay.Constant][19] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %401 = reshape(%400, newshape=[2, 11, 4]) /* ty=Tensor[(2, 11, 4), float64] */;
  %402 = @func_4055(%401) /* ty=(Tensor[(2, 11, 4), float64], Tensor[(6, 9, 15), float64]) */;
  %403 = cast(%var_10579, dtype="uint8") /* ty=Tensor[(637), uint8] */;
  %404 = cast(%var_10578, dtype="uint8") /* ty=uint8 */;
  %405 = @func_10381() /* ty=Tensor[(11, ?, 10), float64] */;
  %406 = %399.1;
  %407 = @func_1808() /* ty=Tensor[(6, 9, 15), float64] */;
  %408 = @func_5358() /* ty=Tensor[(6, 9, 15), float32] */;
  %409 = %402.0;
  %410 = bitwise_and(%403, %404) /* ty=Tensor[(637), uint8] */;
  (%405, %406, %407, %408, %409, meta[relay.Constant][19] /* ty=Tensor[(88), float64] */, %410)
}

def @func_17950() -> Tensor[(6, 9, 15), float64] {
  @func_3047() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_12043() -> (Tensor[(6, 9, 15), float64],) {
  %411 = @func_5978() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %412 = %411.0;
  (%412,)
}

def @func_4381(%var_4360: int32) -> (Tensor[(16, 6, 13), int32],) {
  %413 = cast(%var_4360, dtype="int32") /* ty=int32 */;
  %414 = cast(meta[relay.Constant][20] /* ty=Tensor[(16, 6, 13), int32] */, dtype="int32") /* ty=Tensor[(16, 6, 13), int32] */;
  %415 = right_shift(%413, %414) /* ty=Tensor[(16, 6, 13), int32] */;
  (%415,)
}

def @func_17140() -> Tensor[(1050), uint16] {
  @func_9277() /* ty=Tensor[(1050), uint16] */
}

def @func_8435() -> Tensor[(6, 9, 15), float64] {
  @func_7705() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_12827() -> Tensor[(6, 9, 15), float32] {
  %416 = @func_9898() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %416.0
}

def @func_13336() -> (Tensor[(6, 9, 15), float32],) {
  %417 = @func_7332() /* ty=Tensor[(6, 9, 15), float32] */;
  (%417,)
}

def @func_5978() -> (Tensor[(6, 9, 15), float64],) {
  %418 = @func_4954() /* ty=Tensor[(6, 9, 15), float64] */;
  (%418,)
}

def @func_8997(%var_8995: Tensor[(91, 7), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(2560), int8], Tensor[(91, 7), uint32]) {
  %419 = @func_5150() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %420 = cast(meta[relay.Constant][21] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %421 = cast(meta[relay.Constant][22] /* ty=Tensor[(2560), int8] */, dtype="int8") /* ty=Tensor[(2560), int8] */;
  %422 = cast(%var_8995, dtype="uint32") /* ty=Tensor[(91, 7), uint32] */;
  %423 = reshape(%420, newshape=[]) /* ty=int8 */;
  %424 = reshape(%421, newshape=[2560]) /* ty=Tensor[(2560), int8] */;
  %425 = reshape(%422, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %426 = @func_5542(%423, %424, %425) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) */;
  %427 = @func_6460() /* ty=Tensor[(6, 9, 15), float64] */;
  %428 = %419.0;
  %429 = %426.5;
  (%427, %428, %429, meta[relay.Constant][21] /* ty=int8 */, meta[relay.Constant][22] /* ty=Tensor[(2560), int8] */, %var_8995)
}

def @func_1579(%var_1563: uint32) -> (Tensor[(9, 12, 14), bool],) {
  %430 = cast(%var_1563, dtype="bool") /* ty=bool */;
  %431 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 12, 14), uint32] */, dtype="bool") /* ty=Tensor[(9, 12, 14), bool] */;
  %432 = greater_equal(%430, %431) /* ty=Tensor[(9, 12, 14), bool] */;
  (%432,)
}

def @func_9082() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %433 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %434 = %433.0;
  %435 = @func_3431() /* ty=Tensor[(6, 9, 15), float64] */;
  (%434, %435)
}

def @func_17637() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32]) {
  %436 = @func_13336() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %437 = %436.0;
  %438 = cast(%437, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %439 = reshape(%438, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %440 = @func_14925() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */;
  %441 = @func_6839() /* ty=Tensor[(6, 9, 15), float64] */;
  %442 = cast(%441, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %443 = reshape(%442, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %444 = @func_1709(%439) /* ty=Tensor[(6, 9, 15), float32] */;
  %445 = @func_5358() /* ty=Tensor[(6, 9, 15), float32] */;
  %446 = %440.1;
  %447 = @func_3019(%443) /* ty=Tensor[(6, 9, 15), float32] */;
  (%437, %444, %441, %445, %446, %447)
}

def @func_13988() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %448 = @func_9833() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %449 = @func_7137() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %450 = @func_11334() /* ty=Tensor[(6, 9, 15), float64] */;
  %451 = %448.0;
  %452 = %449.0;
  (%450, %451, %452)
}

def @func_7111() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %453 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %454 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %455 = @func_5513() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %456 = @func_4461() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %457 = %453.0;
  %458 = %454.0;
  %459 = %455.1;
  %460 = %456.1;
  (%457, %458, %459, %460)
}

def @func_1513(%var_1493: int8, %var_1495: Tensor[(637), uint32], %var_1511: Tensor[(1050), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) {
  %461 = cast(meta[relay.Constant][24] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %462 = reshape(%461, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %463 = @func_552(%462) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %464 = cast(%var_1493, dtype="int8") /* ty=int8 */;
  %465 = cast(meta[relay.Constant][25] /* ty=Tensor[(2560), int8] */, dtype="int8") /* ty=Tensor[(2560), int8] */;
  %466 = cast(%var_1495, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %467 = reshape(%464, newshape=[]) /* ty=int8 */;
  %468 = reshape(%465, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int8] */;
  %469 = reshape(%466, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
  %470 = @func_916(%467, %468, %469) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) */;
  %471 = cast(%var_1511, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %472 = cast(meta[relay.Constant][24] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %473 = reshape(%471, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %474 = reshape(%472, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %475 = @func_704(%473, %474) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */;
  %476 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %477 = %463.0;
  %478 = %470.0;
  %479 = %475.1;
  (%476, %477, meta[relay.Constant][24] /* ty=Tensor[(396), float32] */, %478, %var_1493, meta[relay.Constant][25] /* ty=Tensor[(2560), int8] */, %var_1495, %479, %var_1511)
}

def @func_12177() -> Tensor[(6, 9, 15), float64] {
  %480 = @func_7754() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %480.0
}

def @func_6547(%var_6542: Tensor[(8, 8, 16), int16]) -> Tensor[(8, 8, 16), int16] {
  %481 = cast(%var_6542, dtype="int16") /* ty=Tensor[(8, 8, 16), int16] */;
  %482 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(8, 8, 16), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 8, 16), int16] */, dtype="int16") /* ty=Tensor[(8, 8, 16), int16] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%483, %484) /* ty=Tensor[(8, 8, 16), int16] */
}

def @func_16133() -> (Tensor[(6, 9, 15), float64],) {
  %485 = @func_3728() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %486 = %485.0;
  (%486,)
}

def @func_9483(%var_9473: int8, %var_9474: Tensor[(1, 637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(1, 637), uint32]) {
  %487 = cast(%var_9473, dtype="int8") /* ty=int8 */;
  %488 = cast(%var_9474, dtype="uint32") /* ty=Tensor[(1, 637), uint32] */;
  %489 = reshape(%487, newshape=[]) /* ty=int8 */;
  %490 = reshape(%488, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %491 = @func_6621(%489, %490) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */;
  %492 = @func_8659() /* ty=Tensor[(6, 9, 15), float64] */;
  %493 = %491.1;
  (%492, %493, %var_9473, %var_9474)
}

def @func_12109() -> (Tensor[(1050), float64],) {
  %494 = @func_11982() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(1050), float64], Tensor[(637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
  %495 = %494.1;
  (%495,)
}

def @func_6974() -> (Tensor[(6, 9, 15), float64],) {
  %496 = @func_6352() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %497 = %496.0;
  (%497,)
}

def @func_15263() -> (Tensor[(6, 9, 15), float64],) {
  %498 = @func_6401() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %499 = %498.0;
  (%499,)
}

def @func_9724() -> (Tensor[(6, 9, 15), float64],) {
  %500 = @func_7705() /* ty=Tensor[(6, 9, 15), float64] */;
  (%500,)
}

def @func_16539() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %501 = @func_12311() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64]) */;
  %502 = %501.0;
  %503 = cast(%502, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %504 = reshape(%503, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %505 = @func_3019(%504) /* ty=Tensor[(6, 9, 15), float32] */;
  (%502, %505)
}

def @func_5564() -> (Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) {
  %506 = @func_3185() /* ty=(Tensor[(6, 9, 15), bool],) */;
  %507 = %506.0;
  %508 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  (%507, %508)
}

def @func_6124() -> (Tensor[(6, 9, 15), float64],) {
  %509 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %510 = %509.1;
  (%510,)
}

def @func_4804() -> Tensor[(6, 9, 15), float64] {
  @func_1914() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_14142() -> (Tensor[(6, 9, 15), bool], Tensor[(637), uint32], int8, Tensor[(1, 637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float64]) {
  %511 = @func_3185() /* ty=(Tensor[(6, 9, 15), bool],) */;
  %512 = cast(meta[relay.Constant][27] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %513 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 637), uint32] */, dtype="uint32") /* ty=Tensor[(1, 637), uint32] */;
  %514 = reshape(%512, newshape=[]) /* ty=int8 */;
  %515 = reshape(%513, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %516 = @func_6621(%514, %515) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */;
  %517 = @func_4692() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %518 = @func_5564() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
  %519 = @func_8584() /* ty=(Tensor[(396), float64], Tensor[(6, 9, 15), float64]) */;
  %520 = %511.0;
  %521 = %516.3;
  %522 = %517.0;
  %523 = %518.1;
  %524 = %519.0;
  (%520, %521, meta[relay.Constant][27] /* ty=int8 */, meta[relay.Constant][28] /* ty=Tensor[(1, 637), uint32] */, %522, %523, %524)
}

def @func_12580() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %525 = @func_8948() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %526 = @func_11669() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %527 = %525.0;
  %528 = %526.0;
  %529 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  (%527, %528, %529)
}

def @func_17451() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %530 = @func_16264() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %531 = @func_7705() /* ty=Tensor[(6, 9, 15), float64] */;
  %532 = %530.1;
  (%531, %532)
}

def @func_5944(%var_5914: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %533 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %534 = %533.0;
  %535 = @func_4461() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %536 = %535.1;
  %537 = cast(%536, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %538 = shape_of(%534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %539 = cast(%534, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %541 = cast(%var_5914, dtype="int32") /* ty=Tensor[(75), int32] */;
  %542 = reshape(%541, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %543 = @func_4770(%542) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(15, ?, 5), bool], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %544 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %545 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %546 = floor_divide(%539, %540) /* ty=Tensor[(6, 9, 15), float32] */;
  %547 = %543.2;
  %548 = %544.0;
  %549 = %545.1;
  (%546, %547, %var_5914, %548, %549)
}

def @func_8659() -> Tensor[(6, 9, 15), float64] {
  %550 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %550.0
}

def @func_1549() -> (Tensor[(6, 9, 15), float64],) {
  %551 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  (%551,)
}

def @func_2775(%var_2703: int8, %var_2715: Tensor[(3, 132), float32], %var_2749: Tensor[(15, 5), int32]) -> (Tensor[(6, 9, 15), float32], int8, Tensor[(3, 11, 12), uint32], Tensor[(3, 132), float32], Tensor[(6, 9, 15), float64], Tensor[(637), bool], Tensor[(6, 9, 15), float64], Tensor[(1, 637), uint32], Tensor[(16, 16, 10), int16], Tensor[(3, 11, 12), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(15, 5), int32]) {
  %552 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %553 = cast(%var_2715, dtype="float32") /* ty=Tensor[(3, 132), float32] */;
  %554 = reshape(%553, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %555 = @func_552(%554) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %556 = cast(%var_2703, dtype="int8") /* ty=int8 */;
  %557 = cast(meta[relay.Constant][29] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %558 = reshape(%556, newshape=[]) /* ty=int8 */;
  %559 = reshape(%557, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %560 = @func_2212(%558, %559) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(1050, 637), int16], Tensor[(1050, 637), bool], Tensor[(6, 9, 15), float64]) */;
  %561 = cast(meta[relay.Constant][30] /* ty=Tensor[(637), uint32] */, dtype="bool") /* ty=Tensor[(637), bool] */;
  %562 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(637), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %563 = cast(meta[relay.Constant][29] /* ty=Tensor[(637), uint32] */, dtype="bool") /* ty=Tensor[(637), bool] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?), bool] */;
  %565 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %566 = cast(%var_2703, dtype="int8") /* ty=int8 */;
  %567 = cast(%var_2703, dtype="int8") /* ty=int8 */;
  %568 = cast(meta[relay.Constant][31] /* ty=Tensor[(2560), int8] */, dtype="int8") /* ty=Tensor[(2560), int8] */;
  %569 = cast(meta[relay.Constant][29] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %570 = reshape(%567, newshape=[]) /* ty=int8 */;
  %571 = reshape(%568, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int8] */;
  %572 = reshape(%569, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
  %573 = @func_916(%570, %571, %572) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) */;
  %574 = %573.0;
  %575 = cast(%574, dtype="int8") /* ty=Tensor[(16, 16, 10), int8] */;
  %576 = less_equal(%563, %564) /* ty=Tensor[(637), bool] */;
  %577 = cast(%576, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %578 = reshape(%566, newshape=[]) /* ty=int8 */;
  %579 = reshape(%575, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int8] */;
  %580 = reshape(%577, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
  %581 = @func_916(%578, %579, %580) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) */;
  %582 = cast(meta[relay.Constant][31] /* ty=Tensor[(2560), int8] */, dtype="int16") /* ty=Tensor[(2560), int16] */;
  %583 = shape_of(%574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%574, dtype="int16") /* ty=Tensor[(16, 16, 10), int16] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %586 = cast(%var_2715, dtype="float32") /* ty=Tensor[(3, 132), float32] */;
  %587 = reshape(%586, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %588 = @func_552(%587) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %589 = cast(%var_2749, dtype="int32") /* ty=Tensor[(15, 5), int32] */;
  %590 = reshape(%589, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), int32] */;
  %591 = @func_2052(%590) /* ty=(Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) */;
  %592 = %552.0;
  %593 = %555.0;
  %594 = %560.5;
  %595 = %565.0;
  %596 = %581.2;
  %597 = subtract(%584, %585) /* ty=Tensor[(16, 16, 10), int16] */;
  %598 = %588.0;
  %599 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  %600 = %591.1;
  (%592, %var_2703, %593, %var_2715, %594, %576, %595, %596, %597, %598, %599, %600, %var_2749)
}

def @func_4602() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %601 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %602 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %603 = %601.0;
  %604 = %602.1;
  (%603, %604)
}

def @func_7332() -> Tensor[(6, 9, 15), float32] {
  %605 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %605.0
}

def @func_14303() -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), int8]) {
  %606 = @func_6124() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %607 = @func_8395() /* ty=(Tensor[(11, ?, 10), int8],) */;
  %608 = %606.0;
  %609 = %607.0;
  (%608, %609)
}

def @func_3838() -> (Tensor[(6, 9, 15), float64],) {
  %610 = @func_3409() /* ty=Tensor[(6, 9, 15), float64] */;
  (%610,)
}

def @func_15325() -> (Tensor[(6, 9, 15), float64],) {
  %611 = @func_9183() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %612 = %611.2;
  (%612,)
}

def @main(%var_18706: Tensor[(15, 16, 6), float64], %var_18711: Tensor[(15, 16, 6), float64]) -> (Tensor[(15, 16, 6), int32], Tensor[(15, 16, 6), float32]) {
  %613 = @func_10290() /* ty=Tensor[(15, 16, 6), float64] */;
  %614 = cast(%var_18706, dtype="int32") /* ty=Tensor[(15, 16, 6), int32] */;
  %615 = shape_of(%613, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%613, dtype="int32") /* ty=Tensor[(15, 16, 6), int32] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %618 = cast(%var_18711, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %619 = shape_of(%var_18706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_18706, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %622 = minimum(%616, %617) /* ty=Tensor[(15, 16, 6), int32] */;
  %623 = floor_mod(%620, %621) /* ty=Tensor[(15, 16, 6), float32] */;
  (%622, %623)
}

def @func_8015() -> (Tensor[(6, 9, 15), bool],) {
  %624 = @func_3185() /* ty=(Tensor[(6, 9, 15), bool],) */;
  %625 = %624.0;
  (%625,)
}

def @func_12006(%var_12001: Tensor[(10, 1, 4), float64]) -> Tensor[(10, 1, 4), float64] {
  %626 = cast(%var_12001, dtype="float64") /* ty=Tensor[(10, 1, 4), float64] */;
  log(%626) /* ty=Tensor[(10, 1, 4), float64] */
}

def @func_3574() -> (Tensor[(6, 9, 15), float64],) {
  %627 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %628 = %627.0;
  (%628,)
}

def @func_10068(%var_10038: Tensor[(11, 13, 10), int8]) -> (Tensor[(11, 13, 10), uint64], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(16, 6, 13), int32], int32) {
  %629 = @func_8395() /* ty=(Tensor[(11, ?, 10), int8],) */;
  %630 = %629.0;
  %631 = cast(%630, dtype="uint64") /* ty=Tensor[(11, ?, 10), uint64] */;
  %632 = cast(%var_10038, dtype="uint64") /* ty=Tensor[(11, 13, 10), uint64] */;
  %633 = @func_8704() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], bool, Tensor[(75), bool], Tensor[(6, 9, 15), float64]) */;
  %634 = @func_7807() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %635 = cast(4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %636 = reshape(%635, newshape=[]) /* ty=int32 */;
  %637 = @func_4381(%636) /* ty=(Tensor[(16, 6, 13), int32],) */;
  %638 = multiply(%631, %632) /* ty=Tensor[(11, 13, 10), uint64] */;
  %639 = %633.1;
  %640 = @func_3047() /* ty=Tensor[(6, 9, 15), float64] */;
  %641 = @func_6329() /* ty=Tensor[(6, 9, 15), float64] */;
  %642 = %634.0;
  %643 = %637.0;
  (%638, %639, %640, %641, %642, %643, 4 /* ty=int32 */)
}

def @func_18304() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %644 = @func_16157() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %645 = @func_10555() /* ty=Tensor[(6, 9, 15), float32] */;
  %646 = %644.0;
  (%645, %646)
}

def @func_6431() -> Tensor[(6, 9, 15), float64] {
  %647 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %647.0
}

def @func_15586() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %648 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %649 = @func_3551() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %650 = %648.0;
  %651 = %649.1;
  (%650, %651)
}

def @func_5026() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %652 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %653 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %654 = %652.0;
  %655 = %653.0;
  %656 = @func_3047() /* ty=Tensor[(6, 9, 15), float64] */;
  %657 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  (%654, %655, %656, %657)
}

def @func_3800(%var_3787: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(396), float32]) {
  %658 = cast(%var_3787, dtype="int8") /* ty=int8 */;
  %659 = cast(meta[relay.Constant][32] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %660 = reshape(%658, newshape=[]) /* ty=int8 */;
  %661 = reshape(%659, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %662 = @func_2679(%660, %661) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(7, 13, 7), bool], int8, Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */;
  %663 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
  %664 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
  %665 = %662.3;
  (%663, %664, %665, %var_3787, meta[relay.Constant][32] /* ty=Tensor[(396), float32] */)
}

def @func_8948() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %666 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %667 = %666.3;
  %668 = @func_3063() /* ty=Tensor[(6, 9, 15), float64] */;
  (%667, %668)
}

def @func_16948(%var_16940: uint64, %var_16941: Tensor[(15, 10, 13), uint64]) -> Tensor[(15, 10, 13), uint64] {
  %669 = cast(%var_16940, dtype="uint64") /* ty=uint64 */;
  %670 = cast(%var_16941, dtype="uint64") /* ty=Tensor[(15, 10, 13), uint64] */;
  right_shift(%669, %670) /* ty=Tensor[(15, 10, 13), uint64] */
}

def @func_6078() -> Tensor[(6, 9, 15), float64] {
  %671 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %671.0
}

def @func_12382() -> Tensor[(6, 9, 15), float64] {
  %672 = @func_12043() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %672.0
}

def @func_10261() -> (Tensor[(1050), uint16], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %673 = cast(meta[relay.Constant][33] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %674 = cast(meta[relay.Constant][34] /* ty=Tensor[(2560), int8] */, dtype="int8") /* ty=Tensor[(2560), int8] */;
  %675 = cast(meta[relay.Constant][35] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %676 = reshape(%673, newshape=[]) /* ty=int8 */;
  %677 = reshape(%674, newshape=[2560]) /* ty=Tensor[(2560), int8] */;
  %678 = reshape(%675, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %679 = @func_5542(%676, %677, %678) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) */;
  %680 = cast(meta[relay.Constant][35] /* ty=Tensor[(637), uint32] */, dtype="float32") /* ty=Tensor[(637), float32] */;
  %681 = @func_3999() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
  %682 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %683 = @func_9277() /* ty=Tensor[(1050), uint16] */;
  %684 = @func_7627() /* ty=Tensor[(6, 9, 15), float64] */;
  %685 = %679.1;
  %686 = log(%680) /* ty=Tensor[(637), float32] */;
  %687 = %681.3;
  %688 = %682.0;
  (%683, %684, %685, meta[relay.Constant][33] /* ty=int8 */, meta[relay.Constant][34] /* ty=Tensor[(2560), int8] */, %686, %687, %688)
}

def @func_14378() -> Tensor[(6, 9, 15), float64] {
  %689 = @func_13541() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %689.1
}

def @func_4212() -> (Tensor[(6, 9, 15), float64],) {
  %690 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %691 = %690.0;
  (%691,)
}

def @func_7038() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), bool]) {
  %692 = @func_2887() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %693 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %694 = @func_2841() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
  %695 = %692.0;
  %696 = %693.0;
  %697 = %694.0;
  (%695, %696, %697)
}

def @func_3482() -> (Tensor[(6, 9, 15), float64],) {
  %698 = @func_1743() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %699 = %698.0;
  (%699,)
}

def @func_9367() -> (Tensor[(6, 9, 15), float64], Tensor[(396), float32]) {
  %700 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %701 = @func_6894() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
  %702 = %700.2;
  %703 = %701.2;
  (%702, %703)
}

def @func_12311() -> (Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64]) {
  %704 = cast(meta[relay.Constant][36] /* ty=Tensor[(1024), int16] */, dtype="int16") /* ty=Tensor[(1024), int16] */;
  %705 = reshape(%704, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), int16] */;
  %706 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %707 = @func_8659() /* ty=Tensor[(6, 9, 15), float64] */;
  %708 = @func_6547(%705) /* ty=Tensor[(8, 8, 16), int16] */;
  %709 = %706.0;
  (%707, %708, meta[relay.Constant][36] /* ty=Tensor[(1024), int16] */, %709)
}

def @func_11571() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %710 = @func_3482() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %711 = @func_6282() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %712 = %710.0;
  %713 = %711.1;
  (%712, %713)
}

def @func_1976(%var_1954: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32]) {
  %714 = cast(%var_1954, dtype="int8") /* ty=int8 */;
  %715 = cast(meta[relay.Constant][37] /* ty=Tensor[(2560), int8] */, dtype="int8") /* ty=Tensor[(2560), int8] */;
  %716 = cast(meta[relay.Constant][38] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %717 = reshape(%714, newshape=[]) /* ty=int8 */;
  %718 = reshape(%715, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int8] */;
  %719 = reshape(%716, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
  %720 = @func_916(%717, %718, %719) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) */;
  %721 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %722 = %720.1;
  (%721, %722, %var_1954, meta[relay.Constant][37] /* ty=Tensor[(2560), int8] */, meta[relay.Constant][38] /* ty=Tensor[(637), uint32] */)
}

def @func_11230() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %723 = @func_3999() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
  %724 = @func_6431() /* ty=Tensor[(6, 9, 15), float64] */;
  %725 = %723.0;
  (%724, %725)
}

def @func_6806() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %726 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %727 = @func_6124() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %728 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %729 = @func_4692() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %730 = %726.0;
  %731 = %727.0;
  %732 = %728.0;
  %733 = %729.0;
  (%730, %731, %732, %733)
}

def @func_18321() -> (Tensor[(637), uint32],) {
  %734 = @func_14925() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */;
  %735 = %734.4;
  (%735,)
}

def @func_17794() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %736 = @func_6188() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %737 = cast(meta[relay.Constant][39] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %738 = reshape(%737, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %739 = @func_3147(%738) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(91, 7), uint32], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), float64], Tensor[(16, 16, 10), float32], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
  %740 = @func_8584() /* ty=(Tensor[(396), float64], Tensor[(6, 9, 15), float64]) */;
  %741 = %736.0;
  %742 = %739.0;
  %743 = %740.1;
  %744 = @func_6329() /* ty=Tensor[(6, 9, 15), float64] */;
  (%741, %742, meta[relay.Constant][39] /* ty=Tensor[(396), float32] */, %743, %744)
}

def @func_13937() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %745 = @func_9082() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %746 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %747 = %745.0;
  %748 = %746.0;
  %749 = @func_12525() /* ty=Tensor[(6, 9, 15), float64] */;
  (%747, %748, %749)
}

def @func_16157() -> (Tensor[(6, 9, 15), float64],) {
  %750 = @func_14303() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), int8]) */;
  %751 = %750.0;
  (%751,)
}

def @func_10338() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %752 = @func_4461() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %753 = @func_4954() /* ty=Tensor[(6, 9, 15), float64] */;
  %754 = %752.1;
  (%753, %754)
}

def @func_5358() -> Tensor[(6, 9, 15), float32] {
  %755 = @func_4340() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %755.0
}

def @func_11696() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %756 = @func_6124() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %757 = %756.0;
  %758 = @func_9314() /* ty=Tensor[(6, 9, 15), float64] */;
  (%757, %758)
}

def @func_1769() -> Tensor[(6, 9, 15), float64] {
  %759 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %759.0
}

def @func_6894() -> (Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) {
  %760 = cast(meta[relay.Constant][40] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %761 = reshape(%760, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %762 = @func_3147(%761) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(91, 7), uint32], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), float64], Tensor[(16, 16, 10), float32], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
  %763 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %764 = @func_4258() /* ty=Tensor[(6, 9, 15), float64] */;
  %765 = %762.6;
  %766 = %763.0;
  (%764, %765, meta[relay.Constant][40] /* ty=Tensor[(396), float32] */, %766)
}

def @func_14274(%var_14266: Tensor[(1050), float64], %var_14270: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(1050), float64], Tensor[(75), bool]) {
  %767 = @func_14142() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(637), uint32], int8, Tensor[(1, 637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float64]) */;
  %768 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %769 = cast(meta[relay.Constant][41] /* ty=Tensor[(75), int32] */, dtype="int32") /* ty=Tensor[(75), int32] */;
  %770 = reshape(%769, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %771 = @func_8241(%770) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(75), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), bool]) */;
  %772 = cast(%var_14266, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %773 = reshape(%772, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %774 = @func_12474(%773) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(1050), uint64]) */;
  %775 = cast(%var_14270, dtype="bool") /* ty=Tensor[(75), bool] */;
  %776 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(75), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %777 = cast(meta[relay.Constant][41] /* ty=Tensor[(75), int32] */, dtype="bool") /* ty=Tensor[(75), bool] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?), bool] */;
  %779 = %767.5;
  %780 = @func_10381() /* ty=Tensor[(11, ?, 10), float64] */;
  %781 = %768.3;
  %782 = %771.0;
  %783 = %774.0;
  %784 = equal(%777, %778) /* ty=Tensor[(75), bool] */;
  (%779, %780, %781, %782, %783, %var_14266, %784)
}

def @func_17877() -> Tensor[(6, 9, 15), float64] {
  @func_12525() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_15093() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %785 = @func_11571() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %786 = @func_12043() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %787 = @func_3728() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %788 = %785.0;
  %789 = %786.0;
  %790 = %787.0;
  (%788, %789, %790)
}

def @func_14510(%var_14503: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) {
  %791 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %792 = cast(%var_14503, dtype="int8") /* ty=int8 */;
  %793 = cast(meta[relay.Constant][42] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %794 = reshape(%792, newshape=[]) /* ty=int8 */;
  %795 = reshape(%793, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %796 = @func_2123(%794, %795) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
  %797 = %791.2;
  %798 = @func_1808() /* ty=Tensor[(6, 9, 15), float64] */;
  %799 = %796.1;
  (%797, %798, %799, %var_14503, meta[relay.Constant][42] /* ty=Tensor[(637), uint32] */)
}

def @func_5150() -> (Tensor[(6, 9, 15), float64],) {
  %800 = @func_5126() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %801 = %800.0;
  (%801,)
}

def @func_3728() -> (Tensor[(6, 9, 15), float64],) {
  %802 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %803 = %802.0;
  (%803,)
}

def @func_4550(%var_4541: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(1050), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) {
  %804 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %805 = cast(meta[relay.Constant][43] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %806 = cast(%var_4541, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %807 = reshape(%805, newshape=[]) /* ty=int8 */;
  %808 = reshape(%806, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %809 = @func_2123(%807, %808) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
  %810 = cast(meta[relay.Constant][43] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %811 = cast(%var_4541, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %812 = reshape(%810, newshape=[]) /* ty=int8 */;
  %813 = reshape(%811, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %814 = @func_2123(%812, %813) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
  %815 = %804.0;
  %816 = %809.4;
  %817 = %814.4;
  (%815, %816, meta[relay.Constant][43] /* ty=int8 */, %var_4541, %817)
}

def @func_4692() -> (Tensor[(6, 9, 15), float64],) {
  %818 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %819 = %818.0;
  (%819,)
}

def @func_6839() -> Tensor[(6, 9, 15), float64] {
  %820 = @func_5150() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %820.0
}

def @func_13795() -> Tensor[(6, 9, 15), float64] {
  %821 = @func_6282() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %821.0
}

def @func_10290() -> Tensor[(15, 16, 6), float64] {
  %822 = @func_9978() /* ty=(Tensor[(15, 16, 6), float64], Tensor[(6, 9, 15), float32]) */;
  %822.0
}

def @func_16358(%var_16333: Tensor[(594), uint16]) -> (Tensor[(6, 9, 15), float64], Tensor[(11, 9, 6), float64], Tensor[(594), uint16]) {
  %823 = @func_13389() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %824 = cast(%var_16333, dtype="uint16") /* ty=Tensor[(594), uint16] */;
  %825 = reshape(%824, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), uint16] */;
  %826 = @func_16038(%825) /* ty=(Tensor[(11, 9, 6), float64], Tensor[(6, 9, 15), float64]) */;
  %827 = %823.1;
  %828 = %826.0;
  (%827, %828, %var_16333)
}

def @func_17221() -> Tensor[(396), float32] {
  @func_13705() /* ty=Tensor[(396), float32] */
}

def @func_5428() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %829 = @func_3999() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
  %830 = @func_5150() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %831 = %829.0;
  %832 = @func_5069() /* ty=Tensor[(6, 9, 15), float64] */;
  %833 = %830.0;
  (%831, %832, %833)
}

def @func_15711() -> Tensor[(6, 9, 15), float64] {
  %834 = @func_13565() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %834.0
}

def @func_2123(%var_2110: int8, %var_2111: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) {
  %835 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %836 = %835.0;
  %837 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 9, 15), float64] */, dtype="bool") /* ty=Tensor[(6, 9, 15), bool] */;
  %838 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%836, dtype="bool") /* ty=Tensor[(6, 9, 15), bool] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %841 = cast(%var_2110, dtype="int8") /* ty=int8 */;
  %842 = cast(%var_2111, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %843 = cast(meta[relay.Constant][45] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %844 = reshape(%841, newshape=[]) /* ty=int8 */;
  %845 = reshape(%842, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %846 = reshape(%843, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %847 = @func_1513(%844, %845, %846) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) */;
  %848 = less_equal(%839, %840) /* ty=Tensor[(6, 9, 15), bool] */;
  %849 = %847.0;
  (%848, %849, %var_2110, %var_2111, meta[relay.Constant][45] /* ty=Tensor[(1050), float64] */)
}

def @func_9227() -> Tensor[(6, 9, 15), float64] {
  %850 = @func_8584() /* ty=(Tensor[(396), float64], Tensor[(6, 9, 15), float64]) */;
  %850.1
}

def @func_3681(%var_3632: int8) -> (Tensor[(6, 9, 15), bool], int8, Tensor[(637), uint32], Tensor[(10, 2, 11), float64], Tensor[(6, 9, 15), float32]) {
  %851 = cast(%var_3632, dtype="int8") /* ty=int8 */;
  %852 = cast(meta[relay.Constant][46] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %853 = reshape(%851, newshape=[]) /* ty=int8 */;
  %854 = reshape(%852, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %855 = @func_2123(%853, %854) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
  %856 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 2, 11), float32] */, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %857 = erf(%856) /* ty=Tensor[(10, 2, 11), float32] */;
  %858 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 2, 11), float32] */, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
  %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%857, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %862 = %855.0;
  %863 = cast(%862, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %864 = reshape(%863, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %865 = divide(%860, %861) /* ty=Tensor[(10, 2, 11), float64] */;
  %866 = @func_3019(%864) /* ty=Tensor[(6, 9, 15), float32] */;
  (%862, %var_3632, meta[relay.Constant][46] /* ty=Tensor[(637), uint32] */, %865, %866)
}

def @func_12923() -> (Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], Tensor[(637, 1), uint32], Tensor[(6, 9, 15), float64]) {
  %867 = cast(meta[relay.Constant][48] /* ty=Tensor[(637, 1), uint32] */, dtype="uint32") /* ty=Tensor[(637, 1), uint32] */;
  %868 = reshape(%867, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), uint32] */;
  %869 = @func_872(%868) /* ty=(Tensor[(7, 13, 7), bool],) */;
  %870 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %871 = @func_7627() /* ty=Tensor[(6, 9, 15), float64] */;
  %872 = %869.0;
  %873 = %870.1;
  (%871, %872, meta[relay.Constant][48] /* ty=Tensor[(637, 1), uint32] */, %873)
}

def @func_12025() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %874 = @func_10627() /* ty=Tensor[(6, 9, 15), float64] */;
  %875 = @func_9314() /* ty=Tensor[(6, 9, 15), float64] */;
  (%874, %875)
}

def @func_17106() -> (Tensor[(6, 9, 15), float64],) {
  %876 = @func_11288() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %877 = %876.0;
  (%877,)
}

def @func_15838(%var_15830: Tensor[(14, 5, 1), float64]) -> (Tensor[(14, 5, 1), float64], Tensor[(6, 9, 15), float32]) {
  %878 = cast(%var_15830, dtype="float64") /* ty=Tensor[(14, 5, 1), float64] */;
  %879 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %880 = tan(%878) /* ty=Tensor[(14, 5, 1), float64] */;
  %881 = %879.2;
  (%880, %881)
}

def @func_6621(%var_6618: int8, %var_6619: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) {
  %882 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %883 = cast(%var_6618, dtype="int8") /* ty=int8 */;
  %884 = cast(%var_6619, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %885 = reshape(%883, newshape=[]) /* ty=int8 */;
  %886 = reshape(%884, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %887 = @func_2212(%885, %886) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(1050, 637), int16], Tensor[(1050, 637), bool], Tensor[(6, 9, 15), float64]) */;
  %888 = %882.0;
  %889 = %887.0;
  (%888, %889, %var_6618, %var_6619)
}

def @func_11669() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %890 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %891 = @func_5978() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %892 = %890.1;
  %893 = %891.0;
  (%892, %893)
}

def @func_4156() -> Tensor[(6, 9, 15), float64] {
  @func_1914() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_13705() -> Tensor[(396), float32] {
  %894 = @func_6894() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
  %894.1
}

def @func_4770(%var_4733: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(15, ?, 5), bool], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %895 = cast(%var_4733, dtype="int32") /* ty=Tensor[(75), int32] */;
  %896 = reshape(%895, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), int32] */;
  %897 = @func_2052(%896) /* ty=(Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) */;
  %898 = cast(%var_4733, dtype="int32") /* ty=Tensor[(75), int32] */;
  %899 = reshape(%898, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), int32] */;
  %900 = @func_2052(%899) /* ty=(Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) */;
  %901 = @func_3728() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %902 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %903 = %897.0;
  %904 = %900.1;
  %905 = %901.0;
  (%902, %903, %var_4733, %904, %905)
}

def @func_9602() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %906 = @func_3551() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %907 = @func_8435() /* ty=Tensor[(6, 9, 15), float64] */;
  %908 = @func_9314() /* ty=Tensor[(6, 9, 15), float64] */;
  %909 = %906.1;
  (%907, %908, %909)
}

def @func_10555() -> Tensor[(6, 9, 15), float32] {
  %910 = @func_6044() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %910.0
}

def @func_5467() -> (Tensor[(6, 9, 15), float64],) {
  %911 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %912 = %911.0;
  (%912,)
}

def @func_15867() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %913 = @func_15769() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %914 = @func_7754() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %915 = %913.1;
  %916 = %914.0;
  (%915, %916)
}

def @func_7474() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %917 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %918 = %917.2;
  %919 = @func_3431() /* ty=Tensor[(6, 9, 15), float64] */;
  (%918, %919)
}

def @func_16887() -> Tensor[(6, 9, 15), float64] {
  %920 = @func_16133() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %920.0
}

def @func_15478(%var_15473: Tensor[(2, 13, 10), uint64]) -> Tensor[(2, 13, 10), bool] {
  %921 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 13, 10), uint64] */, dtype="bool") /* ty=Tensor[(2, 13, 10), bool] */;
  %922 = shape_of(%var_15473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %923 = cast(%var_15473, dtype="bool") /* ty=Tensor[(2, 13, 10), bool] */;
  %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%923, %924) /* ty=Tensor[(2, 13, 10), bool] */
}

def @func_9914() -> (Tensor[(6, 9, 15), float32],) {
  %925 = @func_7332() /* ty=Tensor[(6, 9, 15), float32] */;
  (%925,)
}

def @func_9833() -> (Tensor[(6, 9, 15), float64],) {
  %926 = @func_9082() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %927 = %926.0;
  (%927,)
}

def @func_13061(%var_13034: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(637), uint8], int8, Tensor[(637), uint64]) {
  %928 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %929 = cast(meta[relay.Constant][50] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %930 = cast(meta[relay.Constant][51] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %931 = reshape(%929, newshape=[]) /* ty=int8 */;
  %932 = reshape(%930, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %933 = @func_10608(%931, %932) /* ty=(Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(637), uint8]) */;
  %934 = cast(%var_13034, dtype="uint64") /* ty=Tensor[(637), uint64] */;
  %935 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(637), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %936 = cast(meta[relay.Constant][51] /* ty=Tensor[(637), uint32] */, dtype="uint64") /* ty=Tensor[(637), uint64] */;
  %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %938 = %928.1;
  %939 = %933.6;
  %940 = minimum(%936, %937) /* ty=Tensor[(637), uint64] */;
  (%938, %939, meta[relay.Constant][50] /* ty=int8 */, %940)
}

def @func_17576() -> Tensor[(6, 9, 15), float64] {
  @func_4300() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_17391() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %941 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %942 = @func_12345() /* ty=(Tensor[(1050), uint16], Tensor[(6, 9, 15), float64]) */;
  %943 = @func_6078() /* ty=Tensor[(6, 9, 15), float64] */;
  %944 = %941.0;
  %945 = %942.1;
  %946 = @func_14581() /* ty=Tensor[(6, 9, 15), float64] */;
  (%943, %944, %945, %946)
}

def @func_7974(%var_7967: Tensor[(637), uint32], %var_7970: Tensor[(1050), float64]) -> (Tensor[(6, 9, 15), bool], Tensor[(3, 11, 12), uint32], Tensor[(6, 66), float32], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) {
  %947 = @func_5564() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
  %948 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 66), float32] */, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %949 = reshape(%948, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %950 = @func_552(%949) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %951 = @func_3934() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %952 = cast(meta[relay.Constant][53] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %953 = cast(%var_7967, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %954 = reshape(%952, newshape=[]) /* ty=int8 */;
  %955 = reshape(%953, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %956 = @func_6621(%954, %955) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */;
  %957 = cast(%var_7970, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %958 = %950.0;
  %959 = cast(%958, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
  %960 = reshape(%957, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %961 = reshape(%959, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %962 = @func_704(%960, %961) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */;
  %963 = %947.0;
  %964 = %951.0;
  %965 = %956.2;
  %966 = %962.1;
  (%963, %958, meta[relay.Constant][52] /* ty=Tensor[(6, 66), float32] */, %964, %965, meta[relay.Constant][53] /* ty=int8 */, %var_7967, %966, %var_7970)
}

def @func_2344(%var_2273: Tensor[(6, 9, 15), float64]) -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], Tensor[(637), uint32], Tensor[(6, 9, 15), float32]) {
  %967 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  %968 = cast(%967, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %969 = cast(meta[relay.Constant][54] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %970 = reshape(%969, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), uint32] */;
  %971 = @func_872(%970) /* ty=(Tensor[(7, 13, 7), bool],) */;
  %972 = cast(%var_2273, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %973 = shape_of(%967, dtype="int32") /* ty=Tensor[(3), int32] */;
  %974 = cast(%967, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %976 = power(%974, %975) /* ty=Tensor[(6, 9, 15), float32] */;
  %977 = cast(%976, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %978 = acos(%968) /* ty=Tensor[(6, 9, 15), float32] */;
  %979 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  %980 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %981 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  %982 = %971.0;
  %983 = log10(%977) /* ty=Tensor[(6, 9, 15), float32] */;
  (%978, %979, %980, %981, %982, meta[relay.Constant][54] /* ty=Tensor[(637), uint32] */, %983)
}

def @func_4258() -> Tensor[(6, 9, 15), float64] {
  @func_1411() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_10787() -> Tensor[(6, 9, 15), float64] {
  @func_4804() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_14354() -> (Tensor[(6, 9, 15), float64],) {
  %984 = @func_14142() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(637), uint32], int8, Tensor[(1, 637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float64]) */;
  %985 = %984.4;
  (%985,)
}

def @func_9665(%var_9634: Tensor[(396), float32], %var_9655: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], uint32, uint32, Tensor[(3, 11, 12), uint32], Tensor[(396), float32], int8, Tensor[(637), uint32], Tensor[(1050), float64]) {
  %986 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %987 = cast(meta[relay.Constant][55] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %988 = reshape(%987, newshape=[]) /* ty=uint32 */;
  %989 = @func_8877(%988) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], uint32) */;
  %990 = cast(%var_9634, dtype="float32") /* ty=Tensor[(396), float32] */;
  %991 = reshape(%990, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %992 = @func_552(%991) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %993 = cast(%var_9655, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %994 = cast(meta[relay.Constant][56] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %995 = reshape(%993, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %996 = reshape(%994, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %997 = @func_7974(%995, %996) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(3, 11, 12), uint32], Tensor[(6, 66), float32], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) */;
  %998 = %986.0;
  %999 = %989.2;
  %1000 = %992.0;
  %1001 = %997.5;
  (%998, %999, meta[relay.Constant][55] /* ty=uint32 */, %1000, %var_9634, %1001, %var_9655, meta[relay.Constant][56] /* ty=Tensor[(1050), float64] */)
}

def @func_8395() -> (Tensor[(11, ?, 10), int8],) {
  %1002 = cast(meta[relay.Constant][57] /* ty=Tensor[(11, 1, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 10), float32] */;
  %1003 = log10(%1002) /* ty=Tensor[(11, 1, 10), float32] */;
  %1004 = cast(meta[relay.Constant][57] /* ty=Tensor[(11, 1, 10), float32] */, dtype="int8") /* ty=Tensor[(11, 1, 10), int8] */;
  %1005 = shape_of(%1003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1006 = cast(%1003, dtype="int8") /* ty=Tensor[(11, 1, 10), int8] */;
  %1007 = dyn.reshape(%1004, %1005, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1008 = bitwise_xor(%1006, %1007) /* ty=Tensor[(11, ?, 10), int8] */;
  (%1008,)
}

def @func_11170() -> Tensor[(6, 9, 15), float64] {
  %1009 = @func_5467() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1009.0
}

def @func_9978() -> (Tensor[(15, 16, 6), float64], Tensor[(6, 9, 15), float32]) {
  %1010 = @func_6861() /* ty=Tensor[(15, 16, 6), float32] */;
  %1011 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 16, 6), float32] */, dtype="int16") /* ty=Tensor[(15, 16, 6), int16] */;
  %1012 = shape_of(%1010, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1013 = cast(%1010, dtype="int16") /* ty=Tensor[(15, 16, 6), int16] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1015 = multiply(%1013, %1014) /* ty=Tensor[(15, 16, 6), int16] */;
  %1016 = cast(%1015, dtype="float64") /* ty=Tensor[(15, 16, 6), float64] */;
  %1017 = @func_9898() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %1018 = sigmoid(%1016) /* ty=Tensor[(15, 16, 6), float64] */;
  %1019 = %1017.0;
  (%1018, %1019)
}

def @func_18112() -> (Tensor[(6, 9, 15), float32],) {
  %1020 = @func_5358() /* ty=Tensor[(6, 9, 15), float32] */;
  (%1020,)
}

def @func_8447() -> Tensor[(6, 9, 15), float64] {
  @func_1808() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_3063() -> Tensor[(6, 9, 15), float64] {
  @func_1808() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_11769() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1021 = @func_5126() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1022 = @func_5300() /* ty=Tensor[(6, 9, 15), float32] */;
  %1023 = @func_6215() /* ty=Tensor[(6, 9, 15), float64] */;
  %1024 = %1021.0;
  (%1022, %1023, %1024)
}

def @func_16418() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(15, ?, 5), bool], Tensor[(75), int32]) {
  %1025 = @func_12025() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1026 = cast(meta[relay.Constant][59] /* ty=Tensor[(75), int32] */, dtype="int32") /* ty=Tensor[(75), int32] */;
  %1027 = reshape(%1026, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), int32] */;
  %1028 = @func_2052(%1027) /* ty=(Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) */;
  %1029 = %1025.1;
  %1030 = @func_10555() /* ty=Tensor[(6, 9, 15), float32] */;
  %1031 = %1028.0;
  (%1029, %1030, %1031, meta[relay.Constant][59] /* ty=Tensor[(75), int32] */)
}

def @func_4419() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1032 = @func_4340() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1033 = %1032.0;
  %1034 = cast(%1033, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %1035 = reshape(%1034, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %1036 = @func_2344(%1035) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], Tensor[(637), uint32], Tensor[(6, 9, 15), float32]) */;
  %1037 = %1036.1;
  %1038 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1033, %1037, %1038)
}

def @func_7807() -> (Tensor[(6, 9, 15), float32],) {
  %1039 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %1040 = %1039.2;
  (%1040,)
}

def @func_15639() -> (Tensor[(6, 9, 15), float64],) {
  %1041 = @func_12881() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1042 = %1041.0;
  (%1042,)
}

def @func_16038(%var_16016: Tensor[(11, 9, 6), uint16]) -> (Tensor[(11, 9, 6), float64], Tensor[(6, 9, 15), float64]) {
  %1043 = cast(%var_16016, dtype="uint16") /* ty=Tensor[(11, 9, 6), uint16] */;
  %1044 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(11, 9, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1045 = cast(meta[relay.Constant][60] /* ty=Tensor[(11, 9, 6), uint16] */, dtype="uint16") /* ty=Tensor[(11, 9, 6), uint16] */;
  %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1047 = maximum(%1045, %1046) /* ty=Tensor[(11, 9, 6), uint16] */;
  %1048 = cast(%1047, dtype="float64") /* ty=Tensor[(11, 9, 6), float64] */;
  %1049 = @func_13134() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1050 = asinh(%1048) /* ty=Tensor[(11, 9, 6), float64] */;
  %1051 = %1049.0;
  (%1050, %1051)
}

def @func_6721() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1052 = @func_4212() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1053 = @func_6460() /* ty=Tensor[(6, 9, 15), float64] */;
  %1054 = %1052.0;
  (%1053, %1054)
}

def @func_12474(%var_12447: Tensor[(1050), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(1050), uint64]) {
  %1055 = @func_10487() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %1056 = @func_8704() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], bool, Tensor[(75), bool], Tensor[(6, 9, 15), float64]) */;
  %1057 = @func_12109() /* ty=(Tensor[(1050), float64],) */;
  %1058 = %1057.0;
  %1059 = cast(%1058, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1060 = sin(%1059) /* ty=Tensor[(1050), float64] */;
  %1061 = cast(%var_12447, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %1062 = shape_of(%1060, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1063 = cast(%1060, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1065 = bitwise_or(%1063, %1064) /* ty=Tensor[(1050), uint8] */;
  %1066 = cast(%1065, dtype="uint64") /* ty=Tensor[(1050), uint64] */;
  %1067 = shape_of(%1060, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1068 = cast(%1060, dtype="uint64") /* ty=Tensor[(1050), uint64] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1070 = @func_3431() /* ty=Tensor[(6, 9, 15), float64] */;
  %1071 = %1055.1;
  %1072 = %1056.0;
  %1073 = multiply(%1068, %1069) /* ty=Tensor[(1050), uint64] */;
  (%1070, %1071, %1072, %1073)
}

def @func_8367() -> Tensor[(6, 9, 15), float64] {
  %1074 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1074.1
}

def @func_6044() -> (Tensor[(6, 9, 15), float32],) {
  %1075 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1076 = %1075.0;
  %1077 = cast(%1076, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %1078 = acosh(%1077) /* ty=Tensor[(6, 9, 15), float32] */;
  (%1078,)
}

def @func_6215() -> Tensor[(6, 9, 15), float64] {
  %1079 = @func_2841() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
  %1079.1
}

def @func_4300() -> Tensor[(6, 9, 15), float64] {
  %1080 = @func_2841() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
  %1080.1
}

def @func_16462() -> (Tensor[(6, 9, 15), float64],) {
  %1081 = @func_9724() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_17050() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1083 = @func_14354() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1084 = @func_13134() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1085 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1086 = @func_13565() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1087 = %1083.0;
  %1088 = %1084.0;
  %1089 = %1085.0;
  %1090 = %1086.0;
  (%1087, %1088, %1089, %1090)
}

def @func_13107() -> (Tensor[(6, 9, 15), float64],) {
  %1091 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1092 = %1091.0;
  (%1092,)
}

def @func_3396() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1093 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1094 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1095 = %1093.0;
  %1096 = %1094.0;
  (%1095, %1096)
}

def @func_18680() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1097 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1098 = @func_2887() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1099 = @func_16462() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1100 = @func_16322() /* ty=Tensor[(6, 9, 15), float64] */;
  %1101 = %1097.0;
  %1102 = %1098.0;
  %1103 = %1099.0;
  (%1100, %1101, %1102, %1103)
}

def @func_3147(%var_3139: Tensor[(396), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(91, 7), uint32], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), float64], Tensor[(16, 16, 10), float32], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) {
  %1104 = @func_2887() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1105 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1106 = cast(meta[relay.Constant][62] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1107 = cast(meta[relay.Constant][61] /* ty=Tensor[(91, 7), uint32] */, dtype="uint32") /* ty=Tensor[(91, 7), uint32] */;
  %1108 = reshape(%1106, newshape=[]) /* ty=int8 */;
  %1109 = reshape(%1107, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %1110 = @func_2212(%1108, %1109) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(1050, 637), int16], Tensor[(1050, 637), bool], Tensor[(6, 9, 15), float64]) */;
  %1111 = %1110.1;
  %1112 = cast(%1111, dtype="float64") /* ty=Tensor[(16, 16, 10), float64] */;
  %1113 = cast(meta[relay.Constant][62] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %1114 = cast(%1111, dtype="float32") /* ty=Tensor[(16, 16, 10), float32] */;
  %1115 = cast(%var_3139, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1116 = reshape(%1115, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %1117 = @func_552(%1116) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %1118 = %1104.0;
  %1119 = %1105.0;
  %1120 = floor_mod(%1112, %1113) /* ty=Tensor[(16, 16, 10), float64] */;
  %1121 = sigmoid(%1114) /* ty=Tensor[(16, 16, 10), float32] */;
  %1122 = %1117.0;
  %1123 = @func_1808() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1118, meta[relay.Constant][61] /* ty=Tensor[(91, 7), uint32] */, %1119, %1120, %1121, %1122, %var_3139, %1123)
}

def @func_14925() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) {
  %1124 = @func_7310() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1125 = @func_6044() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1126 = cast(meta[relay.Constant][63] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1127 = cast(meta[relay.Constant][64] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1128 = reshape(%1126, newshape=[]) /* ty=int8 */;
  %1129 = reshape(%1127, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
  %1130 = @func_9483(%1128, %1129) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(1, 637), uint32]) */;
  %1131 = %1124.0;
  %1132 = %1125.0;
  %1133 = %1130.0;
  (%1131, %1132, %1133, meta[relay.Constant][63] /* ty=int8 */, meta[relay.Constant][64] /* ty=Tensor[(637), uint32] */)
}

def @func_10941() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1134 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1135 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1136 = %1134.0;
  %1137 = %1135.0;
  %1138 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1136, %1137, %1138)
}

def @func_7885(%var_7865: Tensor[(1, 75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 75), int32], Tensor[(396), float32], Tensor[(1050), float64], Tensor[(396), float32]) {
  %1139 = @func_3551() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1140 = cast(%var_7865, dtype="int32") /* ty=Tensor[(1, 75), int32] */;
  %1141 = reshape(%1140, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %1142 = @func_5944(%1141) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1143 = cast(meta[relay.Constant][65] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1144 = cast(meta[relay.Constant][66] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1145 = reshape(%1143, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %1146 = reshape(%1144, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %1147 = @func_704(%1145, %1146) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */;
  %1148 = %1139.0;
  %1149 = %1142.2;
  %1150 = %1147.3;
  (%1148, %1149, %var_7865, %1150, meta[relay.Constant][65] /* ty=Tensor[(1050), float64] */, meta[relay.Constant][66] /* ty=Tensor[(396), float32] */)
}

def @func_2052(%var_2043: Tensor[(15, 1, 5), int32]) -> (Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) {
  %1151 = cast(%var_2043, dtype="bool") /* ty=Tensor[(15, 1, 5), bool] */;
  %1152 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(15, 1, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1153 = cast(meta[relay.Constant][67] /* ty=Tensor[(15, 1, 5), int32] */, dtype="bool") /* ty=Tensor[(15, 1, 5), bool] */;
  %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1155 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1156 = less_equal(%1153, %1154) /* ty=Tensor[(15, ?, 5), bool] */;
  %1157 = %1155.0;
  (%1156, %1157)
}

def @func_12863(%var_12849: Tensor[(14, 4, 11), uint32]) -> (Tensor[(14, 4, 11), uint32], Tensor[(6, 9, 15), float64]) {
  %1158 = cast(%var_12849, dtype="uint32") /* ty=Tensor[(14, 4, 11), uint32] */;
  %1159 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(14, 4, 11), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1160 = cast(meta[relay.Constant][68] /* ty=Tensor[(14, 4, 11), uint32] */, dtype="uint32") /* ty=Tensor[(14, 4, 11), uint32] */;
  %1161 = dyn.reshape(%1158, %1159, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1162 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1163 = left_shift(%1160, %1161) /* ty=Tensor[(14, 4, 11), uint32] */;
  %1164 = %1162.0;
  (%1163, %1164)
}

def @func_5832(%var_5768: Tensor[(9, 15, 2), int64], %var_5784: Tensor[(396), float32], %var_5785: Tensor[(75), int32]) -> (Tensor[(9, 15, 2), int64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(6, 9, 15), float64], Tensor[(75), bool]) {
  %1165 = cast(%var_5768, dtype="int64") /* ty=Tensor[(9, 15, 2), int64] */;
  %1166 = shape_of(meta[relay.Constant][69] /* ty=Tensor[(9, 15, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1167 = cast(meta[relay.Constant][69] /* ty=Tensor[(9, 15, 2), int64] */, dtype="int64") /* ty=Tensor[(9, 15, 2), int64] */;
  %1168 = dyn.reshape(%1165, %1166, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1169 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1170 = cast(meta[relay.Constant][70] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1171 = cast(%var_5784, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1172 = cast(%var_5785, dtype="int32") /* ty=Tensor[(75), int32] */;
  %1173 = reshape(%1170, newshape=[]) /* ty=int8 */;
  %1174 = reshape(%1171, newshape=[3, 132]) /* ty=Tensor[(3, 132), float32] */;
  %1175 = reshape(%1172, newshape=[15, 5]) /* ty=Tensor[(15, 5), int32] */;
  %1176 = @func_2775(%1173, %1174, %1175) /* ty=(Tensor[(6, 9, 15), float32], int8, Tensor[(3, 11, 12), uint32], Tensor[(3, 132), float32], Tensor[(6, 9, 15), float64], Tensor[(637), bool], Tensor[(6, 9, 15), float64], Tensor[(1, 637), uint32], Tensor[(16, 16, 10), int16], Tensor[(3, 11, 12), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(15, 5), int32]) */;
  %1177 = cast(meta[relay.Constant][70] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %1178 = cast(%var_5785, dtype="bool") /* ty=Tensor[(75), bool] */;
  %1179 = add(%1167, %1168) /* ty=Tensor[(9, 15, 2), int64] */;
  %1180 = %1169.0;
  %1181 = %1176.11;
  %1182 = @func_4954() /* ty=Tensor[(6, 9, 15), float64] */;
  %1183 = logical_or(%1177, %1178) /* ty=Tensor[(75), bool] */;
  (%1179, %1180, %1181, %var_5784, %1182, %1183)
}

def @func_15017(%var_14974: Tensor[(2, 6, 4), uint32], %var_14975: Tensor[(2, 6, 4), uint32]) -> (Tensor[(2, 6, 4), float32], Tensor[(6, 9, 15), float64], Tensor[(2, 6, 4), bool], Tensor[(6, 9, 15), float32]) {
  %1184 = cast(%var_14974, dtype="float32") /* ty=Tensor[(2, 6, 4), float32] */;
  %1185 = cosh(%1184) /* ty=Tensor[(2, 6, 4), float32] */;
  %1186 = cast(%var_14975, dtype="uint32") /* ty=Tensor[(2, 6, 4), uint32] */;
  %1187 = shape_of(%var_14974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1188 = cast(%var_14974, dtype="uint32") /* ty=Tensor[(2, 6, 4), uint32] */;
  %1189 = dyn.reshape(%1186, %1187, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1190 = multiply(%1188, %1189) /* ty=Tensor[(2, 6, 4), uint32] */;
  %1191 = cast(%1190, dtype="float32") /* ty=Tensor[(2, 6, 4), float32] */;
  %1192 = shape_of(%1185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1193 = cast(%1185, dtype="float32") /* ty=Tensor[(2, 6, 4), float32] */;
  %1194 = dyn.reshape(%1191, %1192, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1195 = @func_13683() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(75, 1), int32], Tensor[(6, 9, 15), float32]) */;
  %1196 = cast(%var_14975, dtype="bool") /* ty=Tensor[(2, 6, 4), bool] */;
  %1197 = shape_of(%1190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1198 = cast(%1190, dtype="bool") /* ty=Tensor[(2, 6, 4), bool] */;
  %1199 = dyn.reshape(%1196, %1197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1200 = @func_13336() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1201 = power(%1193, %1194) /* ty=Tensor[(2, 6, 4), float32] */;
  %1202 = %1195.0;
  %1203 = greater_equal(%1198, %1199) /* ty=Tensor[(2, 6, 4), bool] */;
  %1204 = %1200.0;
  (%1201, %1202, %1203, %1204)
}

def @func_10627() -> Tensor[(6, 9, 15), float64] {
  @func_8447() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_15042() -> Tensor[(6, 9, 15), float64] {
  @func_6078() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_13320(%var_13304: Tensor[(13, 6, 11), int32]) -> (Tensor[(13, 6, 11), bool],) {
  %1205 = cast(meta[relay.Constant][71] /* ty=Tensor[(13, 6, 11), int32] */, dtype="int32") /* ty=Tensor[(13, 6, 11), int32] */;
  %1206 = shape_of(%var_13304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1207 = cast(%var_13304, dtype="int32") /* ty=Tensor[(13, 6, 11), int32] */;
  %1208 = dyn.reshape(%1205, %1206, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1209 = bitwise_and(%1207, %1208) /* ty=Tensor[(13, 6, 11), int32] */;
  %1210 = cast(%1209, dtype="bool") /* ty=Tensor[(13, 6, 11), bool] */;
  %1211 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(13, 6, 11), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1212 = cast(meta[relay.Constant][71] /* ty=Tensor[(13, 6, 11), int32] */, dtype="bool") /* ty=Tensor[(13, 6, 11), bool] */;
  %1213 = dyn.reshape(%1210, %1211, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1214 = less_equal(%1212, %1213) /* ty=Tensor[(13, 6, 11), bool] */;
  (%1214,)
}

def @func_9551() -> Tensor[(6, 9, 15), float64] {
  %1215 = @func_3728() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1215.0
}

def @func_16576() -> (Tensor[(6, 9, 15), float64],) {
  %1216 = @func_3431() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1216,)
}

def @func_13297() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1217 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %1218 = %1217.0;
  %1219 = @func_11032() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1218, %1219)
}

def @func_2957() -> (Tensor[(6, 9, 15), float64],) {
  %1220 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1220,)
}

def @func_13541() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1221 = @func_13297() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1222 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1223 = %1221.0;
  %1224 = %1222.1;
  (%1223, %1224)
}

def @func_2841() -> (Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) {
  %1225 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1226 = %1225.1;
  %1227 = cast(meta[relay.Constant][72] /* ty=Tensor[(6, 9, 15), float64] */, dtype="bool") /* ty=Tensor[(6, 9, 15), bool] */;
  %1228 = shape_of(%1226, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1229 = cast(%1226, dtype="bool") /* ty=Tensor[(6, 9, 15), bool] */;
  %1230 = dyn.reshape(%1227, %1228, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1231 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1232 = less(%1229, %1230) /* ty=Tensor[(6, 9, 15), bool] */;
  %1233 = %1231.1;
  (%1232, %1233)
}

def @func_15189() -> (Tensor[(6, 9, 15), float64],) {
  %1234 = @func_8917() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1235 = %1234.0;
  (%1235,)
}

def @func_8347(%var_8337: Tensor[(75), int32]) -> (Tensor[(75), int32], Tensor[(75), int32], Tensor[(2, 3, 15), uint16], Tensor[(6, 9, 15), float64]) {
  %1236 = cast(%var_8337, dtype="int32") /* ty=Tensor[(75), int32] */;
  %1237 = reshape(%1236, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %1238 = @func_5944(%1237) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1239 = cast(meta[relay.Constant][73] /* ty=Tensor[(2, 3, 15), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 15), float32] */;
  %1240 = acos(%1239) /* ty=Tensor[(2, 3, 15), float32] */;
  %1241 = cast(meta[relay.Constant][73] /* ty=Tensor[(2, 3, 15), float32] */, dtype="uint16") /* ty=Tensor[(2, 3, 15), uint16] */;
  %1242 = shape_of(%1240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1243 = cast(%1240, dtype="uint16") /* ty=Tensor[(2, 3, 15), uint16] */;
  %1244 = dyn.reshape(%1241, %1242, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1245 = %1238.2;
  %1246 = bitwise_xor(%1243, %1244) /* ty=Tensor[(2, 3, 15), uint16] */;
  %1247 = @func_7857() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1245, %var_8337, %1246, %1247)
}

def @func_6401() -> (Tensor[(6, 9, 15), float64],) {
  %1248 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1249 = %1248.0;
  (%1249,)
}

def @func_12237() -> Tensor[(6, 9, 15), float64] {
  %1250 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1250.0
}

def @func_6569() -> (Tensor[(6, 9, 15), float32],) {
  %1251 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1252 = %1251.0;
  (%1252,)
}

def @func_8241(%var_8212: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(75), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), bool]) {
  %1253 = @func_4419() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1254 = cast(%var_8212, dtype="int32") /* ty=Tensor[(75), int32] */;
  %1255 = reshape(%1254, newshape=[1, 75]) /* ty=Tensor[(1, 75), int32] */;
  %1256 = @func_7885(%1255) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 75), int32], Tensor[(396), float32], Tensor[(1050), float64], Tensor[(396), float32]) */;
  %1257 = cast(%var_8212, dtype="float64") /* ty=Tensor[(75), float64] */;
  %1258 = @func_3934() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1259 = @func_3185() /* ty=(Tensor[(6, 9, 15), bool],) */;
  %1260 = %1253.2;
  %1261 = %1256.1;
  %1262 = cosh(%1257) /* ty=Tensor[(75), float64] */;
  %1263 = %1258.0;
  %1264 = %1259.0;
  (%1260, %1261, %1262, %1263, %1264)
}

def @func_2212(%var_2171: int8, %var_2172: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(1050, 637), int16], Tensor[(1050, 637), bool], Tensor[(6, 9, 15), float64]) {
  %1265 = cast(%var_2171, dtype="int8") /* ty=int8 */;
  %1266 = cast(%var_2172, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1267 = cast(meta[relay.Constant][74] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
  %1268 = reshape(%1265, newshape=[]) /* ty=int8 */;
  %1269 = reshape(%1266, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %1270 = reshape(%1267, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %1271 = @func_1513(%1268, %1269, %1270) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) */;
  %1272 = cast(meta[relay.Constant][74] /* ty=Tensor[(1050, 1), float64] */, dtype="int16") /* ty=Tensor[(1050, 1), int16] */;
  %1273 = cast(%var_2172, dtype="int16") /* ty=Tensor[(637), int16] */;
  %1274 = cast(%var_2172, dtype="bool") /* ty=Tensor[(637), bool] */;
  %1275 = cast(meta[relay.Constant][74] /* ty=Tensor[(1050, 1), float64] */, dtype="bool") /* ty=Tensor[(1050, 1), bool] */;
  %1276 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %1277 = cast(%1276, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %1278 = reshape(%1277, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %1279 = @func_1709(%1278) /* ty=Tensor[(6, 9, 15), float32] */;
  %1280 = cast(%1279, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %1281 = %1271.3;
  %1282 = bitwise_or(%1272, %1273) /* ty=Tensor[(1050, 637), int16] */;
  %1283 = logical_and(%1274, %1275) /* ty=Tensor[(1050, 637), bool] */;
  %1284 = sigmoid(%1280) /* ty=Tensor[(6, 9, 15), float64] */;
  (%1276, %1281, %var_2171, %1282, %1283, %1284)
}

def @func_12705(%var_12700: Tensor[(13, 1, 8), float32]) -> Tensor[(13, 1, 8), float32] {
  %1285 = cast(%var_12700, dtype="float32") /* ty=Tensor[(13, 1, 8), float32] */;
  atan(%1285) /* ty=Tensor[(13, 1, 8), float32] */
}

def @func_5300() -> Tensor[(6, 9, 15), float32] {
  %1286 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1286.0
}

def @func_14959() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %1287 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1288 = %1287.0;
  %1289 = @func_12177() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1288, %1289)
}

def @func_3409() -> Tensor[(6, 9, 15), float64] {
  %1290 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1290.1
}

def @func_8917() -> (Tensor[(6, 9, 15), float64],) {
  %1291 = @func_7474() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1292 = %1291.1;
  (%1292,)
}

def @func_1730() -> (Tensor[(6, 9, 15), float32],) {
  %1293 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1294 = %1293.0;
  %1295 = cast(%1294, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %1296 = erf(%1295) /* ty=Tensor[(6, 9, 15), float32] */;
  (%1296,)
}

def @func_1709(%var_1692: Tensor[(6, 9, 15), float64]) -> Tensor[(6, 9, 15), float32] {
  %1297 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %1298 = cast(%var_1692, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %1299 = shape_of(%1297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1300 = cast(%1297, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %1301 = dyn.reshape(%1298, %1299, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%1300, %1301) /* ty=Tensor[(6, 9, 15), float32] */
}

def @func_704(%var_677: Tensor[(5, 14, 15), float64], %var_687: Tensor[(396), float32]) -> (Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) {
  %1302 = cast(meta[relay.Constant][75] /* ty=Tensor[(5, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
  %1303 = cast(%var_677, dtype="uint16") /* ty=Tensor[(5, 14, 15), uint16] */;
  %1304 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(5, 14, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1305 = cast(meta[relay.Constant][75] /* ty=Tensor[(5, 14, 15), float64] */, dtype="uint16") /* ty=Tensor[(5, 14, 15), uint16] */;
  %1306 = dyn.reshape(%1303, %1304, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1307 = cast(%var_687, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1308 = reshape(%1307, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %1309 = @func_552(%1308) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %1310 = sqrt(%1302) /* ty=Tensor[(5, 14, 15), float64] */;
  %1311 = logical_xor(%1305, %1306) /* ty=Tensor[(5, 14, 15), uint16] */;
  %1312 = %1309.0;
  (%1310, %1311, %1312, %var_687)
}

def @func_7857() -> Tensor[(6, 9, 15), float64] {
  %1313 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1313.0
}

def @func_5069() -> Tensor[(6, 9, 15), float64] {
  %1314 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1314.0
}

def @func_12345() -> (Tensor[(1050), uint16], Tensor[(6, 9, 15), float64]) {
  %1315 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1316 = @func_9277() /* ty=Tensor[(1050), uint16] */;
  %1317 = %1315.0;
  (%1316, %1317)
}

def @func_9314() -> Tensor[(6, 9, 15), float64] {
  @func_9303() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_11982() -> (Tensor[(6, 9, 15), float32], Tensor[(1050), float64], Tensor[(637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) {
  %1318 = @func_9914() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1319 = cast(meta[relay.Constant][76] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1320 = reshape(%1319, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %1321 = @func_4550(%1320) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(1050), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
  %1322 = @func_6974() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1323 = cast(meta[relay.Constant][77] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1324 = cast(meta[relay.Constant][76] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1325 = reshape(%1323, newshape=[]) /* ty=int8 */;
  %1326 = reshape(%1324, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %1327 = @func_10608(%1325, %1326) /* ty=(Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(637), uint8]) */;
  %1328 = @func_8119() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1329 = %1318.0;
  %1330 = %1321.4;
  %1331 = %1322.0;
  %1332 = %1327.1;
  %1333 = %1328.0;
  (%1329, %1330, meta[relay.Constant][76] /* ty=Tensor[(637), uint32] */, %1331, %1332, meta[relay.Constant][77] /* ty=int8 */, %1333)
}

def @func_14456() -> (Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), float32], Tensor[(8, 8, 16), float32], Tensor[(6, 9, 15), float64]) {
  %1334 = @func_12311() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64]) */;
  %1335 = %1334.1;
  %1336 = cast(%1335, dtype="float32") /* ty=Tensor[(8, 8, 16), float32] */;
  %1337 = cast(%1335, dtype="float64") /* ty=Tensor[(8, 8, 16), float64] */;
  %1338 = sigmoid(%1337) /* ty=Tensor[(8, 8, 16), float64] */;
  %1339 = cast(%1338, dtype="float32") /* ty=Tensor[(8, 8, 16), float32] */;
  %1340 = @func_10941() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1341 = @func_6215() /* ty=Tensor[(6, 9, 15), float64] */;
  %1342 = cos(%1336) /* ty=Tensor[(8, 8, 16), float32] */;
  %1343 = asin(%1339) /* ty=Tensor[(8, 8, 16), float32] */;
  %1344 = %1340.2;
  (%1341, %1342, %1343, %1344)
}

def @func_11482() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1345 = @func_6894() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
  %1346 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1347 = @func_9724() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1348 = %1345.3;
  %1349 = @func_9551() /* ty=Tensor[(6, 9, 15), float64] */;
  %1350 = %1346.0;
  %1351 = %1347.0;
  (%1348, %1349, %1350, %1351)
}

def @func_1743() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1352 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1353 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %1354 = %1352.0;
  (%1353, %1354)
}

def @func_14581() -> Tensor[(6, 9, 15), float64] {
  @func_1914() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_14854() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1355 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1356 = %1355.0;
  %1357 = @func_12382() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1356, %1357)
}

def @func_872(%var_867: Tensor[(7, 13, 7), uint32]) -> (Tensor[(7, 13, 7), bool],) {
  %1358 = cast(meta[relay.Constant][78] /* ty=Tensor[(7, 13, 7), uint32] */, dtype="bool") /* ty=Tensor[(7, 13, 7), bool] */;
  %1359 = shape_of(%var_867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1360 = cast(%var_867, dtype="bool") /* ty=Tensor[(7, 13, 7), bool] */;
  %1361 = dyn.reshape(%1358, %1359, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1362 = less(%1360, %1361) /* ty=Tensor[(7, 13, 7), bool] */;
  (%1362,)
}

def @func_2679(%var_2647: int8, %var_2657: Tensor[(396), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(7, 13, 7), bool], int8, Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) {
  %1363 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1364 = %1363.0;
  %1365 = cast(%1364, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %1366 = reshape(%1365, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %1367 = cast(%var_2647, dtype="int8") /* ty=int8 */;
  %1368 = reshape(%1367, newshape=[]) /* ty=int8 */;
  %1369 = @func_1976(%1368) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32]) */;
  %1370 = cast(%var_2657, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1371 = reshape(%1370, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %1372 = @func_552(%1371) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %1373 = @func_1709(%1366) /* ty=Tensor[(6, 9, 15), float32] */;
  %1374 = %1369.1;
  %1375 = %1372.0;
  (%1364, %1373, %1374, %var_2647, %1375, %var_2657)
}

def @func_10525() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1376 = @func_9183() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1377 = @func_3728() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1378 = %1376.2;
  %1379 = %1377.0;
  (%1378, %1379)
}

def @func_10302() -> (Tensor[(6, 9, 15), float64],) {
  %1380 = @func_6431() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1380,)
}

def @func_3185() -> (Tensor[(6, 9, 15), bool],) {
  %1381 = @func_2841() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
  %1382 = %1381.0;
  (%1382,)
}

def @func_12156() -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64]) {
  %1383 = @func_6974() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1384 = %1383.0;
  %1385 = @func_10381() /* ty=Tensor[(11, ?, 10), float64] */;
  %1386 = @func_8447() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1384, %1385, %1386)
}

def @func_4954() -> Tensor[(6, 9, 15), float64] {
  %1387 = @func_3934() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1387.0
}

def @func_16717(%var_16712: uint32) -> (Tensor[(15, 15, 4), uint32],) {
  %1388 = cast(%var_16712, dtype="uint32") /* ty=uint32 */;
  %1389 = cast(meta[relay.Constant][79] /* ty=Tensor[(15, 15, 4), uint32] */, dtype="uint32") /* ty=Tensor[(15, 15, 4), uint32] */;
  %1390 = bitwise_xor(%1388, %1389) /* ty=Tensor[(15, 15, 4), uint32] */;
  (%1390,)
}

def @func_2478(%var_2463: uint32) -> (Tensor[(6, 9, 15), float32], Tensor[(9, 12, 14), bool], uint32, Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %1391 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1392 = cast(%var_2463, dtype="uint32") /* ty=uint32 */;
  %1393 = reshape(%1392, newshape=[]) /* ty=uint32 */;
  %1394 = @func_1579(%1393) /* ty=(Tensor[(9, 12, 14), bool],) */;
  %1395 = @func_1808() /* ty=Tensor[(6, 9, 15), float64] */;
  %1396 = cast(%1395, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %1397 = reshape(%1396, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %1398 = %1391.0;
  %1399 = %1394.0;
  %1400 = @func_1709(%1397) /* ty=Tensor[(6, 9, 15), float32] */;
  (%1398, %1399, %var_2463, %1395, %1400)
}

def @func_4340() -> (Tensor[(6, 9, 15), float32],) {
  %1401 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1402 = %1401.0;
  (%1402,)
}

def @func_10487() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %1403 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1404 = %1403.0;
  %1405 = cast(%1404, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %1406 = reshape(%1405, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %1407 = @func_1709(%1406) /* ty=Tensor[(6, 9, 15), float32] */;
  (%1404, %1407)
}

def @func_4461() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1408 = @func_4258() /* ty=Tensor[(6, 9, 15), float64] */;
  %1409 = @func_3047() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1408, %1409)
}

def @func_3551() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1410 = @func_1743() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1411 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1412 = %1411.0;
  %1413 = cast(%1412, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %1414 = %1410.1;
  %1415 = atanh(%1413) /* ty=Tensor[(6, 9, 15), float64] */;
  (%1414, %1415)
}

def @func_8497() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1416 = @func_5564() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
  %1417 = %1416.1;
  %1418 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1417, %1418)
}

def @func_17333() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16]) {
  %1419 = @func_14854() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1420 = cast(meta[relay.Constant][80] /* ty=Tensor[(1024), int16] */, dtype="int16") /* ty=Tensor[(1024), int16] */;
  %1421 = reshape(%1420, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), int16] */;
  %1422 = %1419.1;
  %1423 = @func_9303() /* ty=Tensor[(6, 9, 15), float64] */;
  %1424 = @func_12237() /* ty=Tensor[(6, 9, 15), float64] */;
  %1425 = @func_6547(%1421) /* ty=Tensor[(8, 8, 16), int16] */;
  (%1422, %1423, %1424, %1425, meta[relay.Constant][80] /* ty=Tensor[(1024), int16] */)
}

def @func_13601(%var_13591: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) {
  %1426 = @func_3482() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1427 = cast(%var_13591, dtype="int8") /* ty=int8 */;
  %1428 = cast(meta[relay.Constant][81] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1429 = reshape(%1427, newshape=[]) /* ty=int8 */;
  %1430 = reshape(%1428, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %1431 = @func_10608(%1429, %1430) /* ty=(Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(637), uint8]) */;
  %1432 = cast(%var_13591, dtype="int8") /* ty=int8 */;
  %1433 = reshape(%1432, newshape=[]) /* ty=int8 */;
  %1434 = @func_1976(%1433) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32]) */;
  %1435 = %1426.0;
  %1436 = %1431.1;
  %1437 = %1434.0;
  (%1435, %1436, %var_13591, meta[relay.Constant][81] /* ty=Tensor[(637), uint32] */, %1437)
}

def @func_15998() -> (Tensor[(6, 9, 15), float64],) {
  %1438 = @func_8917() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1439 = %1438.0;
  (%1439,)
}

def @func_3431() -> Tensor[(6, 9, 15), float64] {
  @func_1808() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_14678(%var_14656: Tensor[(15, 10, 16), float32]) -> (Tensor[(15, 10, 16), float64],) {
  %1440 = cast(%var_14656, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
  %1441 = atan(%1440) /* ty=Tensor[(15, 10, 16), float32] */;
  %1442 = cast(%1441, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %1443 = log2(%1442) /* ty=Tensor[(15, 10, 16), float64] */;
  (%1443,)
}

def @func_16264() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %1444 = @func_6569() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1445 = @func_13541() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1446 = %1444.0;
  %1447 = %1445.0;
  (%1446, %1447)
}

def @func_13743(%var_13736: Tensor[(1050), float64]) -> (Tensor[(1050), float64], Tensor[(75), int32], Tensor[(75), int32], Tensor[(1050), uint8]) {
  %1448 = @func_12109() /* ty=(Tensor[(1050), float64],) */;
  %1449 = %1448.0;
  %1450 = cast(%1449, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1451 = cast(meta[relay.Constant][82] /* ty=Tensor[(75), int32] */, dtype="int32") /* ty=Tensor[(75), int32] */;
  %1452 = reshape(%1451, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %1453 = @func_13176(%1452) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(75), int32]) */;
  %1454 = cast(%var_13736, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %1455 = shape_of(%1449, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1456 = cast(%1449, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %1457 = dyn.reshape(%1454, %1455, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1458 = sqrt(%1450) /* ty=Tensor[(1050), float64] */;
  %1459 = %1453.3;
  %1460 = bitwise_and(%1456, %1457) /* ty=Tensor[(1050), uint8] */;
  (%1458, %1459, meta[relay.Constant][82] /* ty=Tensor[(75), int32] */, %1460)
}

def @func_6188() -> (Tensor[(6, 9, 15), float64],) {
  %1461 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1461,)
}

def @func_16516() -> Tensor[(6, 9, 15), float64] {
  %1462 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1462.0
}

def @func_9183() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1463 = @func_8948() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1464 = %1463.1;
  %1465 = @func_8435() /* ty=Tensor[(6, 9, 15), float64] */;
  %1466 = @func_8367() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1464, %1465, %1466)
}

def @func_7137() -> (Tensor[(6, 9, 15), float32],) {
  %1467 = @func_6044() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1468 = %1467.0;
  (%1468,)
}

def @func_8704() -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], bool, Tensor[(75), bool], Tensor[(6, 9, 15), float64]) {
  %1469 = @func_5126() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1470 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1471 = cast(meta[relay.Constant][83] /* ty=Tensor[(75), bool] */, dtype="bool") /* ty=Tensor[(75), bool] */;
  %1472 = reshape(%1470, newshape=[]) /* ty=bool */;
  %1473 = reshape(%1471, newshape=[1, 15, 5]) /* ty=Tensor[(1, 15, 5), bool] */;
  %1474 = @func_7197(%1472, %1473) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 15, 5), float32]) */;
  %1475 = @func_4461() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1476 = %1469.0;
  %1477 = %1474.1;
  %1478 = %1475.1;
  (%1476, %1477, False /* ty=bool */, meta[relay.Constant][83] /* ty=Tensor[(75), bool] */, %1478)
}

def @func_17210() -> (Tensor[(6, 9, 15), float64],) {
  %1479 = @func_15639() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1480 = %1479.0;
  (%1480,)
}

def @func_10980(%var_10963: Tensor[(2, 11, 9), float32]) -> (Tensor[(2, 11, 9), float64], Tensor[(2, 11, 9), float64]) {
  %1481 = cast(meta[relay.Constant][84] /* ty=Tensor[(2, 11, 9), float32] */, dtype="float64") /* ty=Tensor[(2, 11, 9), float64] */;
  %1482 = cast(%var_10963, dtype="bool") /* ty=Tensor[(2, 11, 9), bool] */;
  %1483 = shape_of(meta[relay.Constant][84] /* ty=Tensor[(2, 11, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1484 = cast(meta[relay.Constant][84] /* ty=Tensor[(2, 11, 9), float32] */, dtype="bool") /* ty=Tensor[(2, 11, 9), bool] */;
  %1485 = dyn.reshape(%1482, %1483, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1486 = not_equal(%1484, %1485) /* ty=Tensor[(2, 11, 9), bool] */;
  %1487 = cast(%1486, dtype="float64") /* ty=Tensor[(2, 11, 9), float64] */;
  %1488 = exp(%1481) /* ty=Tensor[(2, 11, 9), float64] */;
  %1489 = asinh(%1487) /* ty=Tensor[(2, 11, 9), float64] */;
  (%1488, %1489)
}

def @func_6159(%var_6146: int16, %var_6147: Tensor[(10, 4, 4), int16]) -> Tensor[(10, 4, 4), bool] {
  %1490 = cast(%var_6146, dtype="bool") /* ty=bool */;
  %1491 = cast(%var_6147, dtype="bool") /* ty=Tensor[(10, 4, 4), bool] */;
  equal(%1490, %1491) /* ty=Tensor[(10, 4, 4), bool] */
}

def @func_1914() -> Tensor[(6, 9, 15), float64] {
  @func_1769() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_8599() -> (Tensor[(6, 9, 15), float64],) {
  %1492 = @func_3047() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1492,)
}

def @func_18054() -> Tensor[(6, 9, 15), float32] {
  %1493 = @func_16264() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %1493.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12925() -> (Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], Tensor[(637, 1), uint32], Tensor[(6, 9, 15), float64]) {
  @func_12923() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], Tensor[(637, 1), uint32], Tensor[(6, 9, 15), float64]) */
}

def @func_17933() -> Tensor[(6, 9, 15), float64] {
  %0 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_9551() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %0() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_16951(%var_16949: uint64, %var_16950: Tensor[(15, 10, 13), uint64]) -> Tensor[(15, 10, 13), uint64] {
  %3 = fn (%var_16940: uint64, %var_16941: Tensor[(15, 10, 13), uint64]) -> Tensor[(15, 10, 13), uint64] {
    %1 = cast(%var_16940, dtype="uint64") /* ty=uint64 */;
    %2 = cast(%var_16941, dtype="uint64") /* ty=Tensor[(15, 10, 13), uint64] */;
    right_shift(%1, %2) /* ty=Tensor[(15, 10, 13), uint64] */
  };
  %3(%var_16949, %var_16950) /* ty=Tensor[(15, 10, 13), uint64] */
}

def @func_16324() -> Tensor[(6, 9, 15), float64] {
  @func_16322() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_16707(%var_16705: int16) -> (Tensor[(6, 9, 15), float64], Tensor[(15, 16, 6), float32], Tensor[(10, 4, 4), bool], int16, Tensor[(160), int16], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_16704(%var_16705) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(15, 16, 6), float32], Tensor[(10, 4, 4), bool], int16, Tensor[(160), int16], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_14235() -> Tensor[(6, 9, 15), float64] {
  %4 = @func_9732() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %4.0
}

def @func_14961() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  @func_14959() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */
}

def @func_10608(%var_10578: int8, %var_10579: Tensor[(637), uint32]) -> (Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(637), uint8]) {
  %5 = cast(%var_10578, dtype="int8") /* ty=int8 */;
  %6 = cast(%var_10579, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %7 = reshape(%5, newshape=[]) /* ty=int8 */;
  %8 = reshape(%6, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %9 = @func_2123(%7, %8) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %11 = reshape(%10, newshape=[2, 11, 4]) /* ty=Tensor[(2, 11, 4), float64] */;
  %12 = @func_4055(%11) /* ty=(Tensor[(2, 11, 4), float64], Tensor[(6, 9, 15), float64]) */;
  %13 = cast(%var_10579, dtype="uint8") /* ty=Tensor[(637), uint8] */;
  %14 = cast(%var_10578, dtype="uint8") /* ty=uint8 */;
  %15 = @func_10381() /* ty=Tensor[(11, ?, 10), float64] */;
  %16 = %9.1;
  %17 = @func_1808() /* ty=Tensor[(6, 9, 15), float64] */;
  %18 = @func_5358() /* ty=Tensor[(6, 9, 15), float32] */;
  %19 = %12.0;
  %20 = bitwise_and(%13, %14) /* ty=Tensor[(637), uint8] */;
  (%15, %16, %17, %18, %19, meta[relay.Constant][0] /* ty=Tensor[(88), float64] */, %20)
}

def @func_10262() -> (Tensor[(1050), uint16], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %37 = fn () -> (Tensor[(1050), uint16], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %21 = cast(meta[relay.Constant][1] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(2560), int8] */, dtype="int8") /* ty=Tensor[(2560), int8] */;
    %23 = cast(meta[relay.Constant][3] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
    %24 = reshape(%21, newshape=[]) /* ty=int8 */;
    %25 = reshape(%22, newshape=[2560]) /* ty=Tensor[(2560), int8] */;
    %26 = reshape(%23, newshape=[637]) /* ty=Tensor[(637), uint32] */;
    %27 = @func_5542(%24, %25, %26) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) */;
    %28 = cast(meta[relay.Constant][3] /* ty=Tensor[(637), uint32] */, dtype="float32") /* ty=Tensor[(637), float32] */;
    %29 = @func_3999() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
    %30 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %31 = @func_9277() /* ty=Tensor[(1050), uint16] */;
    %32 = @func_7627() /* ty=Tensor[(6, 9, 15), float64] */;
    %33 = %27.1;
    %34 = log(%28) /* ty=Tensor[(637), float32] */;
    %35 = %29.3;
    %36 = %30.0;
    (%31, %32, %33, meta[relay.Constant][1] /* ty=int8 */, meta[relay.Constant][2] /* ty=Tensor[(2560), int8] */, %34, %35, %36)
  };
  %37() /* ty=(Tensor[(1050), uint16], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_3936() -> (Tensor[(6, 9, 15), float64],) {
  @func_3934() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_4954() -> Tensor[(6, 9, 15), float64] {
  %38 = @func_3934() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %38.0
}

def @func_14582() -> Tensor[(6, 9, 15), float64] {
  %39 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_1914() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %39() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_15020(%var_15018: Tensor[(2, 6, 4), uint32], %var_15019: Tensor[(2, 6, 4), uint32]) -> (Tensor[(2, 6, 4), float32], Tensor[(6, 9, 15), float64], Tensor[(2, 6, 4), bool], Tensor[(6, 9, 15), float32]) {
  %61 = fn (%var_14974: Tensor[(2, 6, 4), uint32], %var_14975: Tensor[(2, 6, 4), uint32]) -> (Tensor[(2, 6, 4), float32], Tensor[(6, 9, 15), float64], Tensor[(2, 6, 4), bool], Tensor[(6, 9, 15), float32]) {
    %40 = cast(%var_14974, dtype="float32") /* ty=Tensor[(2, 6, 4), float32] */;
    %41 = cosh(%40) /* ty=Tensor[(2, 6, 4), float32] */;
    %42 = cast(%var_14975, dtype="uint32") /* ty=Tensor[(2, 6, 4), uint32] */;
    %43 = shape_of(%var_14974, dtype="int32") /* ty=Tensor[(3), int32] */;
    %44 = cast(%var_14974, dtype="uint32") /* ty=Tensor[(2, 6, 4), uint32] */;
    %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %46 = multiply(%44, %45) /* ty=Tensor[(2, 6, 4), uint32] */;
    %47 = cast(%46, dtype="float32") /* ty=Tensor[(2, 6, 4), float32] */;
    %48 = shape_of(%41, dtype="int32") /* ty=Tensor[(3), int32] */;
    %49 = cast(%41, dtype="float32") /* ty=Tensor[(2, 6, 4), float32] */;
    %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %51 = @func_13683() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(75, 1), int32], Tensor[(6, 9, 15), float32]) */;
    %52 = cast(%var_14975, dtype="bool") /* ty=Tensor[(2, 6, 4), bool] */;
    %53 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
    %54 = cast(%46, dtype="bool") /* ty=Tensor[(2, 6, 4), bool] */;
    %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %56 = @func_13336() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %57 = power(%49, %50) /* ty=Tensor[(2, 6, 4), float32] */;
    %58 = %51.0;
    %59 = greater_equal(%54, %55) /* ty=Tensor[(2, 6, 4), bool] */;
    %60 = %56.0;
    (%57, %58, %59, %60)
  };
  %61(%var_15018, %var_15019) /* ty=(Tensor[(2, 6, 4), float32], Tensor[(6, 9, 15), float64], Tensor[(2, 6, 4), bool], Tensor[(6, 9, 15), float32]) */
}

def @func_14854() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %62 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %63 = %62.0;
  %64 = @func_12382() /* ty=Tensor[(6, 9, 15), float64] */;
  (%63, %64)
}

def @func_4117(%var_4114: Tensor[(1050), float64], %var_4115: Tensor[(396), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(3, 11, 12), uint32], Tensor[(1050), float64], Tensor[(396), float32]) {
  %65 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %66 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %67 = cast(%var_4114, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %68 = cast(%var_4115, dtype="float32") /* ty=Tensor[(396), float32] */;
  %69 = reshape(%67, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %70 = reshape(%68, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %71 = @func_704(%69, %70) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */;
  %72 = %65.0;
  %73 = %66.0;
  %74 = %71.2;
  (%72, %73, %74, %var_4114, %var_4115)
}

def @func_3728() -> (Tensor[(6, 9, 15), float64],) {
  %75 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %76 = %75.0;
  (%76,)
}

def @func_7857() -> Tensor[(6, 9, 15), float64] {
  %77 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %77.0
}

def @func_10941() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %78 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %79 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %80 = %78.0;
  %81 = %79.0;
  %82 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  (%80, %81, %82)
}

def @func_1732() -> (Tensor[(6, 9, 15), float32],) {
  @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */
}

def @func_13253(%var_13252: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(2, 11, 9), float64], Tensor[(198, 1), float32], Tensor[(6, 9, 15), bool], int8) {
  %94 = fn (%var_13230: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(2, 11, 9), float64], Tensor[(198, 1), float32], Tensor[(6, 9, 15), bool], int8) {
    %83 = cast(meta[relay.Constant][4] /* ty=Tensor[(198, 1), float32] */, dtype="float32") /* ty=Tensor[(198, 1), float32] */;
    %84 = reshape(%83, newshape=[2, 11, 9]) /* ty=Tensor[(2, 11, 9), float32] */;
    %85 = @func_10980(%84) /* ty=(Tensor[(2, 11, 9), float64], Tensor[(2, 11, 9), float64]) */;
    %86 = cast(%var_13230, dtype="int8") /* ty=int8 */;
    %87 = reshape(%86, newshape=[]) /* ty=int8 */;
    %88 = @func_3681(%87) /* ty=(Tensor[(6, 9, 15), bool], int8, Tensor[(637), uint32], Tensor[(10, 2, 11), float64], Tensor[(6, 9, 15), float32]) */;
    %89 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
    %90 = @func_7705() /* ty=Tensor[(6, 9, 15), float64] */;
    %91 = @func_4258() /* ty=Tensor[(6, 9, 15), float64] */;
    %92 = %85.1;
    %93 = %88.0;
    (%89, %90, %91, %92, meta[relay.Constant][4] /* ty=Tensor[(198, 1), float32] */, %93, %var_13230)
  };
  %94(%var_13252) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(2, 11, 9), float64], Tensor[(198, 1), float32], Tensor[(6, 9, 15), bool], int8) */
}

def @func_14681(%var_14679: Tensor[(15, 10, 16), float32]) -> (Tensor[(15, 10, 16), float64],) {
  @func_14678(%var_14679) /* ty=(Tensor[(15, 10, 16), float64],) */
}

def @func_8435() -> Tensor[(6, 9, 15), float64] {
  @func_7705() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_6329() -> Tensor[(6, 9, 15), float64] {
  %95 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %95.0
}

def @func_7591(%var_7590: int32) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(16, 6, 13), int32], int32, Tensor[(6, 9, 15), float64]) {
  %107 = fn (%var_7556: int32) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(16, 6, 13), int32], int32, Tensor[(6, 9, 15), float64]) {
    %96 = @func_2841() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
    %97 = @func_6721() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %98 = cast(%var_7556, dtype="int32") /* ty=int32 */;
    %99 = reshape(%98, newshape=[]) /* ty=int32 */;
    %100 = @func_4381(%99) /* ty=(Tensor[(16, 6, 13), int32],) */;
    %101 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %102 = %96.1;
    %103 = @func_5069() /* ty=Tensor[(6, 9, 15), float64] */;
    %104 = %97.0;
    %105 = %100.0;
    %106 = %101.0;
    (%102, %103, %104, %105, %var_7556, %106)
  };
  %107(%var_7590) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(16, 6, 13), int32], int32, Tensor[(6, 9, 15), float64]) */
}

def @func_11288() -> (Tensor[(6, 9, 15), float64],) {
  %108 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %109 = %108.0;
  (%109,)
}

def @func_4214() -> (Tensor[(6, 9, 15), float64],) {
  @func_4212() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_6352() -> (Tensor[(6, 9, 15), float64],) {
  %110 = @func_3063() /* ty=Tensor[(6, 9, 15), float64] */;
  (%110,)
}

def @func_6807() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %119 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %111 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %112 = @func_6124() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %113 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %114 = @func_4692() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %115 = %111.0;
    %116 = %112.0;
    %117 = %113.0;
    %118 = %114.0;
    (%115, %116, %117, %118)
  };
  %119() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_6549(%var_6548: Tensor[(8, 8, 16), int16]) -> Tensor[(8, 8, 16), int16] {
  %124 = fn (%var_6542: Tensor[(8, 8, 16), int16]) -> Tensor[(8, 8, 16), int16] {
    %120 = cast(%var_6542, dtype="int16") /* ty=Tensor[(8, 8, 16), int16] */;
    %121 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(8, 8, 16), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %122 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 8, 16), int16] */, dtype="int16") /* ty=Tensor[(8, 8, 16), int16] */;
    %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    logical_xor(%122, %123) /* ty=Tensor[(8, 8, 16), int16] */
  };
  %124(%var_6548) /* ty=Tensor[(8, 8, 16), int16] */
}

def @func_7755() -> (Tensor[(6, 9, 15), float64],) {
  %127 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %125 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %126 = %125.0;
    (%126,)
  };
  %127() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_13683() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(75, 1), int32], Tensor[(6, 9, 15), float32]) {
  %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(75, 1), int32] */, dtype="int32") /* ty=Tensor[(75, 1), int32] */;
  %129 = reshape(%128, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %130 = @func_8347(%129) /* ty=(Tensor[(75), int32], Tensor[(75), int32], Tensor[(2, 3, 15), uint16], Tensor[(6, 9, 15), float64]) */;
  %131 = cast(meta[relay.Constant][6] /* ty=Tensor[(75, 1), int32] */, dtype="int32") /* ty=Tensor[(75, 1), int32] */;
  %132 = reshape(%131, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %133 = @func_5944(%132) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %134 = @func_10627() /* ty=Tensor[(6, 9, 15), float64] */;
  %135 = %130.3;
  %136 = %133.0;
  (%134, %135, meta[relay.Constant][6] /* ty=Tensor[(75, 1), int32] */, %136)
}

def @func_13685() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(75, 1), int32], Tensor[(6, 9, 15), float32]) {
  @func_13683() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(75, 1), int32], Tensor[(6, 9, 15), float32]) */
}

def @func_15191() -> (Tensor[(6, 9, 15), float64],) {
  @func_15189() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_5234() -> (Tensor[(6, 9, 15), float64],) {
  %139 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %137 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %138 = %137.0;
    (%138,)
  };
  %139() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_2633() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %144 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %140 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %141 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %142 = %140.0;
    %143 = %141.0;
    (%142, %143)
  };
  %144() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_15998() -> (Tensor[(6, 9, 15), float64],) {
  %145 = @func_8917() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %146 = %145.0;
  (%146,)
}

def @func_16092() -> (Tensor[(6, 9, 15), float64],) {
  %147 = @func_6329() /* ty=Tensor[(6, 9, 15), float64] */;
  (%147,)
}

def @func_3482() -> (Tensor[(6, 9, 15), float64],) {
  %148 = @func_1743() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %149 = %148.0;
  (%149,)
}

def @func_5836(%var_5833: Tensor[(9, 15, 2), int64], %var_5834: Tensor[(396), float32], %var_5835: Tensor[(75), int32]) -> (Tensor[(9, 15, 2), int64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(6, 9, 15), float64], Tensor[(75), bool]) {
  %169 = fn (%var_5768: Tensor[(9, 15, 2), int64], %var_5784: Tensor[(396), float32], %var_5785: Tensor[(75), int32]) -> (Tensor[(9, 15, 2), int64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(6, 9, 15), float64], Tensor[(75), bool]) {
    %150 = cast(%var_5768, dtype="int64") /* ty=Tensor[(9, 15, 2), int64] */;
    %151 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(9, 15, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %152 = cast(meta[relay.Constant][7] /* ty=Tensor[(9, 15, 2), int64] */, dtype="int64") /* ty=Tensor[(9, 15, 2), int64] */;
    %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %154 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %155 = cast(meta[relay.Constant][8] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %156 = cast(%var_5784, dtype="float32") /* ty=Tensor[(396), float32] */;
    %157 = cast(%var_5785, dtype="int32") /* ty=Tensor[(75), int32] */;
    %158 = reshape(%155, newshape=[]) /* ty=int8 */;
    %159 = reshape(%156, newshape=[3, 132]) /* ty=Tensor[(3, 132), float32] */;
    %160 = reshape(%157, newshape=[15, 5]) /* ty=Tensor[(15, 5), int32] */;
    %161 = @func_2775(%158, %159, %160) /* ty=(Tensor[(6, 9, 15), float32], int8, Tensor[(3, 11, 12), uint32], Tensor[(3, 132), float32], Tensor[(6, 9, 15), float64], Tensor[(637), bool], Tensor[(6, 9, 15), float64], Tensor[(1, 637), uint32], Tensor[(16, 16, 10), int16], Tensor[(3, 11, 12), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(15, 5), int32]) */;
    %162 = cast(meta[relay.Constant][8] /* ty=int8 */, dtype="bool") /* ty=bool */;
    %163 = cast(%var_5785, dtype="bool") /* ty=Tensor[(75), bool] */;
    %164 = add(%152, %153) /* ty=Tensor[(9, 15, 2), int64] */;
    %165 = %154.0;
    %166 = %161.11;
    %167 = @func_4954() /* ty=Tensor[(6, 9, 15), float64] */;
    %168 = logical_or(%162, %163) /* ty=Tensor[(75), bool] */;
    (%164, %165, %166, %var_5784, %167, %168)
  };
  %169(%var_5833, %var_5834, %var_5835) /* ty=(Tensor[(9, 15, 2), int64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(6, 9, 15), float64], Tensor[(75), bool]) */
}

def @func_4259() -> Tensor[(6, 9, 15), float64] {
  %170 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_1411() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %170() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_10381() -> Tensor[(11, ?, 10), float64] {
  %171 = @func_8395() /* ty=(Tensor[(11, ?, 10), int8],) */;
  %172 = %171.0;
  %173 = cast(%172, dtype="float64") /* ty=Tensor[(11, ?, 10), float64] */;
  log(%173) /* ty=Tensor[(11, ?, 10), float64] */
}

def @func_9734() -> (Tensor[(6, 9, 15), float64],) {
  @func_9732() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_17212() -> (Tensor[(6, 9, 15), float64],) {
  @func_17210() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_7888(%var_7886: Tensor[(1, 75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 75), int32], Tensor[(396), float32], Tensor[(1050), float64], Tensor[(396), float32]) {
  @func_7885(%var_7886) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 75), int32], Tensor[(396), float32], Tensor[(1050), float64], Tensor[(396), float32]) */
}

def @func_4956() -> Tensor[(6, 9, 15), float64] {
  @func_4954() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_10739(%var_10737: Tensor[(9, 3, 16), float32], %var_10738: int8) -> (Tensor[(9, 3, 16), float32], int8, int8) {
  @func_10735(%var_10737, %var_10738) /* ty=(Tensor[(9, 3, 16), float32], int8, int8) */
}

def @func_2212(%var_2171: int8, %var_2172: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(1050, 637), int16], Tensor[(1050, 637), bool], Tensor[(6, 9, 15), float64]) {
  %174 = cast(%var_2171, dtype="int8") /* ty=int8 */;
  %175 = cast(%var_2172, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %176 = cast(meta[relay.Constant][9] /* ty=Tensor[(1050, 1), float64] */, dtype="float64") /* ty=Tensor[(1050, 1), float64] */;
  %177 = reshape(%174, newshape=[]) /* ty=int8 */;
  %178 = reshape(%175, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %179 = reshape(%176, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %180 = @func_1513(%177, %178, %179) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) */;
  %181 = cast(meta[relay.Constant][9] /* ty=Tensor[(1050, 1), float64] */, dtype="int16") /* ty=Tensor[(1050, 1), int16] */;
  %182 = cast(%var_2172, dtype="int16") /* ty=Tensor[(637), int16] */;
  %183 = cast(%var_2172, dtype="bool") /* ty=Tensor[(637), bool] */;
  %184 = cast(meta[relay.Constant][9] /* ty=Tensor[(1050, 1), float64] */, dtype="bool") /* ty=Tensor[(1050, 1), bool] */;
  %185 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %186 = cast(%185, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %187 = reshape(%186, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %188 = @func_1709(%187) /* ty=Tensor[(6, 9, 15), float32] */;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %190 = %180.3;
  %191 = bitwise_or(%181, %182) /* ty=Tensor[(1050, 637), int16] */;
  %192 = logical_and(%183, %184) /* ty=Tensor[(1050, 637), bool] */;
  %193 = sigmoid(%189) /* ty=Tensor[(6, 9, 15), float64] */;
  (%185, %190, %var_2171, %191, %192, %193)
}

def @func_8449() -> Tensor[(6, 9, 15), float64] {
  @func_8447() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_8447() -> Tensor[(6, 9, 15), float64] {
  @func_1808() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_13567() -> (Tensor[(6, 9, 15), float64],) {
  @func_13565() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_16704(%var_16677: int16) -> (Tensor[(6, 9, 15), float64], Tensor[(15, 16, 6), float32], Tensor[(10, 4, 4), bool], int16, Tensor[(160), int16], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %194 = @func_11482() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %195 = @func_9978() /* ty=(Tensor[(15, 16, 6), float64], Tensor[(6, 9, 15), float32]) */;
  %196 = %195.0;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %198 = cast(%var_16677, dtype="int16") /* ty=int16 */;
  %199 = cast(meta[relay.Constant][10] /* ty=Tensor[(160), int16] */, dtype="int16") /* ty=Tensor[(160), int16] */;
  %200 = reshape(%198, newshape=[]) /* ty=int16 */;
  %201 = reshape(%199, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), int16] */;
  %202 = @func_15972() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %203 = @func_15769() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %204 = @func_16133() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %205 = @func_11571() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %206 = %194.1;
  %207 = asin(%197) /* ty=Tensor[(15, 16, 6), float32] */;
  %208 = @func_6159(%200, %201) /* ty=Tensor[(10, 4, 4), bool] */;
  %209 = %202.1;
  %210 = %203.0;
  %211 = %204.0;
  %212 = %205.1;
  (%206, %207, %208, %var_16677, meta[relay.Constant][10] /* ty=Tensor[(160), int16] */, %209, %210, %211, %212)
}

def @func_16861(%var_16859: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), bool], Tensor[(11, ?, 10), uint64], Tensor[(11, 12, 10), int32], Tensor[(6, 9, 15), float64], Tensor[(15, ?, 5), bool], Tensor[(75), int32], Tensor[(10, 1, 4), float64], Tensor[(40), float64]) {
  @func_16858(%var_16859) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), bool], Tensor[(11, ?, 10), uint64], Tensor[(11, 12, 10), int32], Tensor[(6, 9, 15), float64], Tensor[(15, ?, 5), bool], Tensor[(75), int32], Tensor[(10, 1, 4), float64], Tensor[(40), float64]) */
}

def @func_2842() -> (Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) {
  %222 = fn () -> (Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) {
    %213 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %214 = %213.1;
    %215 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 9, 15), float64] */, dtype="bool") /* ty=Tensor[(6, 9, 15), bool] */;
    %216 = shape_of(%214, dtype="int32") /* ty=Tensor[(3), int32] */;
    %217 = cast(%214, dtype="bool") /* ty=Tensor[(6, 9, 15), bool] */;
    %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %219 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %220 = less(%217, %218) /* ty=Tensor[(6, 9, 15), bool] */;
    %221 = %219.1;
    (%220, %221)
  };
  %222() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */
}

def @func_9305() -> Tensor[(6, 9, 15), float64] {
  @func_9303() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_18166() -> (Tensor[(6, 9, 15), float64], Tensor[(13, 1, 8), float32], Tensor[(104), float32]) {
  @func_18164() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(13, 1, 8), float32], Tensor[(104), float32]) */
}

def @func_3432() -> Tensor[(6, 9, 15), float64] {
  %223 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_1808() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %223() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_6401() -> (Tensor[(6, 9, 15), float64],) {
  %224 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %225 = %224.0;
  (%225,)
}

def @func_6863() -> Tensor[(15, 16, 6), float32] {
  @func_6861() /* ty=Tensor[(15, 16, 6), float32] */
}

def @func_15587() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %230 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %226 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %227 = @func_3551() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %228 = %226.0;
    %229 = %227.1;
    (%228, %229)
  };
  %230() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_2780(%var_2777: int8, %var_2778: Tensor[(3, 132), float32], %var_2779: Tensor[(15, 5), int32]) -> (Tensor[(6, 9, 15), float32], int8, Tensor[(3, 11, 12), uint32], Tensor[(3, 132), float32], Tensor[(6, 9, 15), float64], Tensor[(637), bool], Tensor[(6, 9, 15), float64], Tensor[(1, 637), uint32], Tensor[(16, 16, 10), int16], Tensor[(3, 11, 12), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(15, 5), int32]) {
  @func_2775(%var_2777, %var_2778, %var_2779) /* ty=(Tensor[(6, 9, 15), float32], int8, Tensor[(3, 11, 12), uint32], Tensor[(3, 132), float32], Tensor[(6, 9, 15), float64], Tensor[(637), bool], Tensor[(6, 9, 15), float64], Tensor[(1, 637), uint32], Tensor[(16, 16, 10), int16], Tensor[(3, 11, 12), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(15, 5), int32]) */
}

def @func_3811() -> (Tensor[(6, 9, 15), float32],) {
  @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */
}

def @func_15771() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  @func_15769() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */
}

def @func_3049() -> Tensor[(6, 9, 15), float64] {
  @func_3047() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_7475() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %234 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %231 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %232 = %231.2;
    %233 = @func_3431() /* ty=Tensor[(6, 9, 15), float64] */;
    (%232, %233)
  };
  %234() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_18321() -> (Tensor[(637), uint32],) {
  %235 = @func_14925() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */;
  %236 = %235.4;
  (%236,)
}

def @func_16041(%var_16039: Tensor[(11, 9, 6), uint16]) -> (Tensor[(11, 9, 6), float64], Tensor[(6, 9, 15), float64]) {
  @func_16038(%var_16039) /* ty=(Tensor[(11, 9, 6), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_9200() -> Tensor[(6, 9, 15), float64] {
  @func_9198() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_7112() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %245 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
    %237 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %238 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %239 = @func_5513() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
    %240 = @func_4461() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %241 = %237.0;
    %242 = %238.0;
    %243 = %239.1;
    %244 = %240.1;
    (%241, %242, %243, %244)
  };
  %245() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */
}

def @func_4693() -> (Tensor[(6, 9, 15), float64],) {
  %248 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %246 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %247 = %246.0;
    (%247,)
  };
  %248() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_5070() -> Tensor[(6, 9, 15), float64] {
  %250 = fn () -> Tensor[(6, 9, 15), float64] {
    %249 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %249.0
  };
  %250() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_1549() -> (Tensor[(6, 9, 15), float64],) {
  %251 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  (%251,)
}

def @func_8017() -> (Tensor[(6, 9, 15), bool],) {
  @func_8015() /* ty=(Tensor[(6, 9, 15), bool],) */
}

def @func_17142() -> Tensor[(1050), uint16] {
  @func_17140() /* ty=Tensor[(1050), uint16] */
}

def @func_12827() -> Tensor[(6, 9, 15), float32] {
  %252 = @func_9898() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %252.0
}

def @func_17106() -> (Tensor[(6, 9, 15), float64],) {
  %253 = @func_11288() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %254 = %253.0;
  (%254,)
}

def @func_3730() -> (Tensor[(6, 9, 15), float64],) {
  @func_3728() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_16000() -> (Tensor[(6, 9, 15), float64],) {
  @func_15998() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_12580() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %255 = @func_8948() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %256 = @func_11669() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %257 = %255.0;
  %258 = %256.0;
  %259 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  (%257, %258, %259)
}

def @func_12111() -> (Tensor[(1050), float64],) {
  @func_12109() /* ty=(Tensor[(1050), float64],) */
}

def @func_6896() -> (Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) {
  @func_6894() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */
}

def @func_9899() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %265 = fn () -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
    %260 = @func_6044() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %261 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %262 = %260.0;
    %263 = %261.0;
    %264 = @func_6839() /* ty=Tensor[(6, 9, 15), float64] */;
    (%262, %263, %264)
  };
  %265() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */
}

def @func_12311() -> (Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64]) {
  %266 = cast(meta[relay.Constant][12] /* ty=Tensor[(1024), int16] */, dtype="int16") /* ty=Tensor[(1024), int16] */;
  %267 = reshape(%266, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), int16] */;
  %268 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %269 = @func_8659() /* ty=Tensor[(6, 9, 15), float64] */;
  %270 = @func_6547(%267) /* ty=Tensor[(8, 8, 16), int16] */;
  %271 = %268.0;
  (%269, %270, meta[relay.Constant][12] /* ty=Tensor[(1024), int16] */, %271)
}

def @func_12383() -> Tensor[(6, 9, 15), float64] {
  %273 = fn () -> Tensor[(6, 9, 15), float64] {
    %272 = @func_12043() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %272.0
  };
  %273() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_13178(%var_13177: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(75), int32]) {
  %280 = fn (%var_13168: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(75), int32]) {
    %274 = cast(%var_13168, dtype="int32") /* ty=Tensor[(75), int32] */;
    %275 = reshape(%274, newshape=[75]) /* ty=Tensor[(75), int32] */;
    %276 = @func_12762(%275) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(9, 15, 2), int64], Tensor[(270), int64], Tensor[(396), float32], Tensor[(75), int32]) */;
    %277 = @func_10555() /* ty=Tensor[(6, 9, 15), float32] */;
    %278 = @func_6078() /* ty=Tensor[(6, 9, 15), float64] */;
    %279 = %276.5;
    (%277, %278, %279, %var_13168)
  };
  %280(%var_13177) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(75), int32]) */
}

def @func_16264() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %281 = @func_6569() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %282 = @func_13541() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %283 = %281.0;
  %284 = %282.0;
  (%283, %284)
}

def @func_12345() -> (Tensor[(1050), uint16], Tensor[(6, 9, 15), float64]) {
  %285 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %286 = @func_9277() /* ty=Tensor[(1050), uint16] */;
  %287 = %285.0;
  (%286, %287)
}

def @func_11696() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %288 = @func_6124() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %289 = %288.0;
  %290 = @func_9314() /* ty=Tensor[(6, 9, 15), float64] */;
  (%289, %290)
}

def @func_15769() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %291 = @func_11982() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(1050), float64], Tensor[(637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
  %292 = %291.0;
  %293 = @func_5069() /* ty=Tensor[(6, 9, 15), float64] */;
  (%292, %293)
}

def @func_8119() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %294 = @func_6974() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %295 = %294.0;
  %296 = @func_3409() /* ty=Tensor[(6, 9, 15), float64] */;
  (%295, %296)
}

def @func_3064() -> Tensor[(6, 9, 15), float64] {
  %297 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_1808() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %297() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_16539() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %298 = @func_12311() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64]) */;
  %299 = %298.0;
  %300 = cast(%299, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %301 = reshape(%300, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %302 = @func_3019(%301) /* ty=Tensor[(6, 9, 15), float32] */;
  (%299, %302)
}

def @func_16516() -> Tensor[(6, 9, 15), float64] {
  %303 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %303.0
}

def @func_12883() -> (Tensor[(6, 9, 15), float64],) {
  @func_12881() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_17392() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %310 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %304 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %305 = @func_12345() /* ty=(Tensor[(1050), uint16], Tensor[(6, 9, 15), float64]) */;
    %306 = @func_6078() /* ty=Tensor[(6, 9, 15), float64] */;
    %307 = %304.0;
    %308 = %305.1;
    %309 = @func_14581() /* ty=Tensor[(6, 9, 15), float64] */;
    (%306, %307, %308, %309)
  };
  %310() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_3575() -> (Tensor[(6, 9, 15), float64],) {
  %313 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %311 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %312 = %311.0;
    (%312,)
  };
  %313() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_6078() -> Tensor[(6, 9, 15), float64] {
  %314 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %314.0
}

def @func_10612(%var_10610: int8, %var_10611: Tensor[(637), uint32]) -> (Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(637), uint8]) {
  @func_10608(%var_10610, %var_10611) /* ty=(Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(637), uint8]) */
}

def @func_7138() -> (Tensor[(6, 9, 15), float32],) {
  %317 = fn () -> (Tensor[(6, 9, 15), float32],) {
    %315 = @func_6044() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %316 = %315.0;
    (%316,)
  };
  %317() /* ty=(Tensor[(6, 9, 15), float32],) */
}

def @func_11670() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %322 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %318 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %319 = @func_5978() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %320 = %318.1;
    %321 = %319.0;
    (%320, %321)
  };
  %322() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_12025() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %323 = @func_10627() /* ty=Tensor[(6, 9, 15), float64] */;
  %324 = @func_9314() /* ty=Tensor[(6, 9, 15), float64] */;
  (%323, %324)
}

def @func_15867() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %325 = @func_15769() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %326 = @func_7754() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %327 = %325.1;
  %328 = %326.0;
  (%327, %328)
}

def @func_3484() -> (Tensor[(6, 9, 15), float64],) {
  @func_3482() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_6354() -> (Tensor[(6, 9, 15), float64],) {
  @func_6352() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_6722() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %332 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %329 = @func_4212() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %330 = @func_6460() /* ty=Tensor[(6, 9, 15), float64] */;
    %331 = %329.0;
    (%330, %331)
  };
  %332() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_2347(%var_2345: Tensor[(6, 9, 15), float64]) -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], Tensor[(637), uint32], Tensor[(6, 9, 15), float32]) {
  @func_2344(%var_2345) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], Tensor[(637), uint32], Tensor[(6, 9, 15), float32]) */
}

def @func_8121() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_8119() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_1976(%var_1954: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32]) {
  %333 = cast(%var_1954, dtype="int8") /* ty=int8 */;
  %334 = cast(meta[relay.Constant][13] /* ty=Tensor[(2560), int8] */, dtype="int8") /* ty=Tensor[(2560), int8] */;
  %335 = cast(meta[relay.Constant][14] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %336 = reshape(%333, newshape=[]) /* ty=int8 */;
  %337 = reshape(%334, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int8] */;
  %338 = reshape(%335, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
  %339 = @func_916(%336, %337, %338) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) */;
  %340 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %341 = %339.1;
  (%340, %341, %var_1954, meta[relay.Constant][13] /* ty=Tensor[(2560), int8] */, meta[relay.Constant][14] /* ty=Tensor[(637), uint32] */)
}

def @func_2478(%var_2463: uint32) -> (Tensor[(6, 9, 15), float32], Tensor[(9, 12, 14), bool], uint32, Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %342 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %343 = cast(%var_2463, dtype="uint32") /* ty=uint32 */;
  %344 = reshape(%343, newshape=[]) /* ty=uint32 */;
  %345 = @func_1579(%344) /* ty=(Tensor[(9, 12, 14), bool],) */;
  %346 = @func_1808() /* ty=Tensor[(6, 9, 15), float64] */;
  %347 = cast(%346, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %348 = reshape(%347, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %349 = %342.0;
  %350 = %345.0;
  %351 = @func_1709(%348) /* ty=Tensor[(6, 9, 15), float32] */;
  (%349, %350, %var_2463, %346, %351)
}

def @func_4157() -> Tensor[(6, 9, 15), float64] {
  %352 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_1914() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %352() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_4604() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_4602() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_9277() -> Tensor[(1050), uint16] {
  %353 = @func_7159() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(1050), float64], Tensor[(1, 637), uint32]) */;
  %354 = %353.1;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %356 = tan(%355) /* ty=Tensor[(1050), float32] */;
  %357 = cast(%354, dtype="uint16") /* ty=Tensor[(1050), uint16] */;
  %358 = shape_of(%356, dtype="int32") /* ty=Tensor[(1), int32] */;
  %359 = cast(%356, dtype="uint16") /* ty=Tensor[(1050), uint16] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?), uint16] */;
  subtract(%359, %360) /* ty=Tensor[(1050), uint16] */
}

def @func_9229() -> Tensor[(6, 9, 15), float64] {
  @func_9227() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_1518(%var_1515: int8, %var_1516: Tensor[(637), uint32], %var_1517: Tensor[(1050), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) {
  @func_1513(%var_1515, %var_1516, %var_1517) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) */
}

def @func_11033() -> Tensor[(6, 9, 15), float64] {
  %361 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_7344() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %361() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_4773(%var_4771: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(15, ?, 5), bool], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_4770(%var_4771) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(15, ?, 5), bool], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_6569() -> (Tensor[(6, 9, 15), float32],) {
  %362 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %363 = %362.0;
  (%363,)
}

def @func_13565() -> (Tensor[(6, 9, 15), float64],) {
  %364 = @func_3482() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %365 = %364.0;
  (%365,)
}

def @func_1745() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_1743() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_16094() -> (Tensor[(6, 9, 15), float64],) {
  @func_16092() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_6894() -> (Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) {
  %366 = cast(meta[relay.Constant][15] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %367 = reshape(%366, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %368 = @func_3147(%367) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(91, 7), uint32], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), float64], Tensor[(16, 16, 10), float32], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
  %369 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %370 = @func_4258() /* ty=Tensor[(6, 9, 15), float64] */;
  %371 = %368.6;
  %372 = %369.0;
  (%370, %371, meta[relay.Constant][15] /* ty=Tensor[(396), float32] */, %372)
}

def @func_18164() -> (Tensor[(6, 9, 15), float64], Tensor[(13, 1, 8), float32], Tensor[(104), float32]) {
  %373 = cast(meta[relay.Constant][16] /* ty=Tensor[(104), float32] */, dtype="float32") /* ty=Tensor[(104), float32] */;
  %374 = reshape(%373, newshape=[13, 1, 8]) /* ty=Tensor[(13, 1, 8), float32] */;
  %375 = @func_9314() /* ty=Tensor[(6, 9, 15), float64] */;
  %376 = @func_12705(%374) /* ty=Tensor[(13, 1, 8), float32] */;
  (%375, %376, meta[relay.Constant][16] /* ty=Tensor[(104), float32] */)
}

def @func_7197(%var_7161: bool, %var_7162: Tensor[(1, 15, 5), bool]) -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 15, 5), float32]) {
  %377 = @func_3482() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %378 = cast(%var_7162, dtype="int32") /* ty=Tensor[(1, 15, 5), int32] */;
  %379 = reshape(%378, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %380 = @func_5944(%379) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %381 = cast(%var_7161, dtype="bool") /* ty=bool */;
  %382 = cast(%var_7162, dtype="bool") /* ty=Tensor[(1, 15, 5), bool] */;
  %383 = logical_or(%381, %382) /* ty=Tensor[(1, 15, 5), bool] */;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
  %385 = %377.0;
  %386 = %380.1;
  %387 = erf(%384) /* ty=Tensor[(1, 15, 5), float32] */;
  (%385, %386, %387)
}

def @func_1914() -> Tensor[(6, 9, 15), float64] {
  @func_1769() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_8585() -> (Tensor[(396), float64], Tensor[(6, 9, 15), float64]) {
  %401 = fn () -> (Tensor[(396), float64], Tensor[(6, 9, 15), float64]) {
    %388 = @func_6894() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
    %389 = %388.1;
    %390 = cast(meta[relay.Constant][17] /* ty=Tensor[(396), float32] */, dtype="int64") /* ty=Tensor[(396), int64] */;
    %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(1), int32] */;
    %392 = cast(%389, dtype="int64") /* ty=Tensor[(396), int64] */;
    %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?), int64] */;
    %394 = logical_xor(%392, %393) /* ty=Tensor[(396), int64] */;
    %395 = cast(meta[relay.Constant][17] /* ty=Tensor[(396), float32] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %396 = shape_of(%394, dtype="int32") /* ty=Tensor[(1), int32] */;
    %397 = cast(%394, dtype="float64") /* ty=Tensor[(396), float64] */;
    %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?), float64] */;
    %399 = divide(%397, %398) /* ty=Tensor[(396), float64] */;
    %400 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
    (%399, %400)
  };
  %401() /* ty=(Tensor[(396), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_1809() -> Tensor[(6, 9, 15), float64] {
  %402 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_1769() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %402() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_3552() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %409 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %403 = @func_1743() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %404 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %405 = %404.0;
    %406 = cast(%405, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
    %407 = %403.1;
    %408 = atanh(%406) /* ty=Tensor[(6, 9, 15), float64] */;
    (%407, %408)
  };
  %409() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_8241(%var_8212: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(75), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), bool]) {
  %410 = @func_4419() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %411 = cast(%var_8212, dtype="int32") /* ty=Tensor[(75), int32] */;
  %412 = reshape(%411, newshape=[1, 75]) /* ty=Tensor[(1, 75), int32] */;
  %413 = @func_7885(%412) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 75), int32], Tensor[(396), float32], Tensor[(1050), float64], Tensor[(396), float32]) */;
  %414 = cast(%var_8212, dtype="float64") /* ty=Tensor[(75), float64] */;
  %415 = @func_3934() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %416 = @func_3185() /* ty=(Tensor[(6, 9, 15), bool],) */;
  %417 = %410.2;
  %418 = %413.1;
  %419 = cosh(%414) /* ty=Tensor[(75), float64] */;
  %420 = %415.0;
  %421 = %416.0;
  (%417, %418, %419, %420, %421)
}

def @func_17878() -> Tensor[(6, 9, 15), float64] {
  %422 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_12525() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %422() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_11984() -> (Tensor[(6, 9, 15), float32], Tensor[(1050), float64], Tensor[(637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) {
  @func_11982() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(1050), float64], Tensor[(637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */
}

def @func_15974() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_15972() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_8087() -> (Tensor[(6, 9, 15), float32], Tensor[(10, 4, 4), bool], int16, Tensor[(160), int16]) {
  %423 = @func_7807() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %424 = cast(meta[relay.Constant][18] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %425 = cast(meta[relay.Constant][19] /* ty=Tensor[(160), int16] */, dtype="int16") /* ty=Tensor[(160), int16] */;
  %426 = reshape(%424, newshape=[]) /* ty=int16 */;
  %427 = reshape(%425, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), int16] */;
  %428 = %423.0;
  %429 = @func_6159(%426, %427) /* ty=Tensor[(10, 4, 4), bool] */;
  (%428, %429, meta[relay.Constant][18] /* ty=int16 */, meta[relay.Constant][19] /* ty=Tensor[(160), int16] */)
}

def @func_3187() -> (Tensor[(6, 9, 15), bool],) {
  @func_3185() /* ty=(Tensor[(6, 9, 15), bool],) */
}

def @func_18505() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_18503() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_4121(%var_4119: Tensor[(1050), float64], %var_4120: Tensor[(396), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(3, 11, 12), uint32], Tensor[(1050), float64], Tensor[(396), float32]) {
  @func_4117(%var_4119, %var_4120) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(3, 11, 12), uint32], Tensor[(1050), float64], Tensor[(396), float32]) */
}

def @func_10303() -> (Tensor[(6, 9, 15), float64],) {
  %431 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %430 = @func_6431() /* ty=Tensor[(6, 9, 15), float64] */;
    (%430,)
  };
  %431() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_8848() -> (Tensor[(6, 9, 15), float32],) {
  @func_8846() /* ty=(Tensor[(6, 9, 15), float32],) */
}

def @func_8396() -> (Tensor[(11, ?, 10), int8],) {
  %439 = fn () -> (Tensor[(11, ?, 10), int8],) {
    %432 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 1, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 10), float32] */;
    %433 = log10(%432) /* ty=Tensor[(11, 1, 10), float32] */;
    %434 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 1, 10), float32] */, dtype="int8") /* ty=Tensor[(11, 1, 10), int8] */;
    %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
    %436 = cast(%433, dtype="int8") /* ty=Tensor[(11, 1, 10), int8] */;
    %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %438 = bitwise_xor(%436, %437) /* ty=Tensor[(11, ?, 10), int8] */;
    (%438,)
  };
  %439() /* ty=(Tensor[(11, ?, 10), int8],) */
}

def @func_15385() -> Tensor[(6, 9, 15), float64] {
  %440 = @func_3482() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %440.0
}

def @func_10629() -> Tensor[(6, 9, 15), float64] {
  @func_10627() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_17794() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %441 = @func_6188() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %442 = cast(meta[relay.Constant][21] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %443 = reshape(%442, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %444 = @func_3147(%443) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(91, 7), uint32], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), float64], Tensor[(16, 16, 10), float32], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
  %445 = @func_8584() /* ty=(Tensor[(396), float64], Tensor[(6, 9, 15), float64]) */;
  %446 = %441.0;
  %447 = %444.0;
  %448 = %445.1;
  %449 = @func_6329() /* ty=Tensor[(6, 9, 15), float64] */;
  (%446, %447, meta[relay.Constant][21] /* ty=Tensor[(396), float32] */, %448, %449)
}

def @func_9184() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %454 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %450 = @func_8948() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %451 = %450.1;
    %452 = @func_8435() /* ty=Tensor[(6, 9, 15), float64] */;
    %453 = @func_8367() /* ty=Tensor[(6, 9, 15), float64] */;
    (%451, %452, %453)
  };
  %454() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_9198() -> Tensor[(6, 9, 15), float64] {
  %455 = @func_7111() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %455.1
}

def @func_4055(%var_4047: Tensor[(2, 11, 4), float64]) -> (Tensor[(2, 11, 4), float64], Tensor[(6, 9, 15), float64]) {
  %456 = cast(%var_4047, dtype="float64") /* ty=Tensor[(2, 11, 4), float64] */;
  %457 = @func_3934() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %458 = cos(%456) /* ty=Tensor[(2, 11, 4), float64] */;
  %459 = %457.0;
  (%458, %459)
}

def @func_12477(%var_12475: Tensor[(1050), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(1050), uint64]) {
  @func_12474(%var_12475) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(1050), uint64]) */
}

def @func_9979() -> (Tensor[(15, 16, 6), float64], Tensor[(6, 9, 15), float32]) {
  %470 = fn () -> (Tensor[(15, 16, 6), float64], Tensor[(6, 9, 15), float32]) {
    %460 = @func_6861() /* ty=Tensor[(15, 16, 6), float32] */;
    %461 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 16, 6), float32] */, dtype="int16") /* ty=Tensor[(15, 16, 6), int16] */;
    %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
    %463 = cast(%460, dtype="int16") /* ty=Tensor[(15, 16, 6), int16] */;
    %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %465 = multiply(%463, %464) /* ty=Tensor[(15, 16, 6), int16] */;
    %466 = cast(%465, dtype="float64") /* ty=Tensor[(15, 16, 6), float64] */;
    %467 = @func_9898() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
    %468 = sigmoid(%466) /* ty=Tensor[(15, 16, 6), float64] */;
    %469 = %467.0;
    (%468, %469)
  };
  %470() /* ty=(Tensor[(15, 16, 6), float64], Tensor[(6, 9, 15), float32]) */
}

def @func_10291() -> Tensor[(15, 16, 6), float64] {
  %472 = fn () -> Tensor[(15, 16, 6), float64] {
    %471 = @func_9978() /* ty=(Tensor[(15, 16, 6), float64], Tensor[(6, 9, 15), float32]) */;
    %471.0
  };
  %472() /* ty=Tensor[(15, 16, 6), float64] */
}

def @func_16322() -> Tensor[(6, 9, 15), float64] {
  @func_9198() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_6282() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %473 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %474 = @func_5978() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %475 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %476 = %473.0;
  %477 = %474.0;
  %478 = %475.0;
  (%476, %477, %478)
}

def @func_13796() -> Tensor[(6, 9, 15), float64] {
  %480 = fn () -> Tensor[(6, 9, 15), float64] {
    %479 = @func_6282() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
    %479.0
  };
  %480() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_15869() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_15867() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_13543() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_13541() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_14856() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_14854() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_15481(%var_15479: Tensor[(2, 13, 10), uint64]) -> Tensor[(2, 13, 10), bool] {
  @func_15478(%var_15479) /* ty=Tensor[(2, 13, 10), bool] */
}

def @func_14510(%var_14503: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) {
  %481 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %482 = cast(%var_14503, dtype="int8") /* ty=int8 */;
  %483 = cast(meta[relay.Constant][23] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %484 = reshape(%482, newshape=[]) /* ty=int8 */;
  %485 = reshape(%483, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %486 = @func_2123(%484, %485) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
  %487 = %481.2;
  %488 = @func_1808() /* ty=Tensor[(6, 9, 15), float64] */;
  %489 = %486.1;
  (%487, %488, %489, %var_14503, meta[relay.Constant][23] /* ty=Tensor[(637), uint32] */)
}

def @func_5513() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %490 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %491 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %492 = @func_4212() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %493 = %490.0;
  %494 = %491.0;
  %495 = %492.0;
  (%493, %494, %495)
}

def @func_16518() -> Tensor[(6, 9, 15), float64] {
  @func_16516() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_8015() -> (Tensor[(6, 9, 15), bool],) {
  %496 = @func_3185() /* ty=(Tensor[(6, 9, 15), bool],) */;
  %497 = %496.0;
  (%497,)
}

def @func_5467() -> (Tensor[(6, 9, 15), float64],) {
  %498 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %499 = %498.0;
  (%499,)
}

def @func_6080() -> Tensor[(6, 9, 15), float64] {
  @func_6078() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_8879(%var_8878: uint32) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], uint32) {
  %505 = fn (%var_8869: uint32) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], uint32) {
    %500 = cast(%var_8869, dtype="uint32") /* ty=uint32 */;
    %501 = reshape(%500, newshape=[]) /* ty=uint32 */;
    %502 = @func_2478(%501) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(9, 12, 14), bool], uint32, Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
    %503 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
    %504 = %502.0;
    (%503, %504, %var_8869)
  };
  %505(%var_8878) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], uint32) */
}

def @func_8437() -> Tensor[(6, 9, 15), float64] {
  @func_8435() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_2957() -> (Tensor[(6, 9, 15), float64],) {
  %506 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
  (%506,)
}

def @func_11572() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %511 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %507 = @func_3482() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %508 = @func_6282() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
    %509 = %507.0;
    %510 = %508.1;
    (%509, %510)
  };
  %511() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_9000(%var_8998: Tensor[(91, 7), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(2560), int8], Tensor[(91, 7), uint32]) {
  @func_8997(%var_8998) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(2560), int8], Tensor[(91, 7), uint32]) */
}

def @func_13988() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %512 = @func_9833() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %513 = @func_7137() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %514 = @func_11334() /* ty=Tensor[(6, 9, 15), float64] */;
  %515 = %512.0;
  %516 = %513.0;
  (%514, %515, %516)
}

def @func_15221() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_15219() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_9725() -> (Tensor[(6, 9, 15), float64],) {
  %518 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %517 = @func_7705() /* ty=Tensor[(6, 9, 15), float64] */;
    (%517,)
  };
  %518() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_16888() -> Tensor[(6, 9, 15), float64] {
  %520 = fn () -> Tensor[(6, 9, 15), float64] {
    %519 = @func_16133() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %519.0
  };
  %520() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_2052(%var_2043: Tensor[(15, 1, 5), int32]) -> (Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) {
  %521 = cast(%var_2043, dtype="bool") /* ty=Tensor[(15, 1, 5), bool] */;
  %522 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(15, 1, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 1, 5), int32] */, dtype="bool") /* ty=Tensor[(15, 1, 5), bool] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %525 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %526 = less_equal(%523, %524) /* ty=Tensor[(15, ?, 5), bool] */;
  %527 = %525.0;
  (%526, %527)
}

def @func_9602() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %528 = @func_3551() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %529 = @func_8435() /* ty=Tensor[(6, 9, 15), float64] */;
  %530 = @func_9314() /* ty=Tensor[(6, 9, 15), float64] */;
  %531 = %528.1;
  (%529, %530, %531)
}

def @func_1599() -> (Tensor[(6, 9, 15), float64],) {
  %533 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %532 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
    (%532,)
  };
  %533() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_12177() -> Tensor[(6, 9, 15), float64] {
  %534 = @func_7754() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %534.0
}

def @func_15641() -> (Tensor[(6, 9, 15), float64],) {
  @func_15639() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_17684(%var_17683: Tensor[(4, 12, 16), uint8]) -> (Tensor[(4, 12, 16), uint8], Tensor[(6, 9, 15), float64]) {
  %542 = fn (%var_17658: Tensor[(4, 12, 16), uint8]) -> (Tensor[(4, 12, 16), uint8], Tensor[(6, 9, 15), float64]) {
    %535 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 12, 16), uint8] */, dtype="uint8") /* ty=Tensor[(4, 12, 16), uint8] */;
    %536 = shape_of(%var_17658, dtype="int32") /* ty=Tensor[(3), int32] */;
    %537 = cast(%var_17658, dtype="uint8") /* ty=Tensor[(4, 12, 16), uint8] */;
    %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %539 = @func_7474() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %540 = right_shift(%537, %538) /* ty=Tensor[(4, 12, 16), uint8] */;
    %541 = %539.1;
    (%540, %541)
  };
  %542(%var_17683) /* ty=(Tensor[(4, 12, 16), uint8], Tensor[(6, 9, 15), float64]) */
}

def @func_18112() -> (Tensor[(6, 9, 15), float32],) {
  %543 = @func_5358() /* ty=Tensor[(6, 9, 15), float32] */;
  (%543,)
}

def @func_1711(%var_1710: Tensor[(6, 9, 15), float64]) -> Tensor[(6, 9, 15), float32] {
  %549 = fn (%var_1692: Tensor[(6, 9, 15), float64]) -> Tensor[(6, 9, 15), float32] {
    %544 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
    %545 = cast(%var_1692, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
    %546 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
    %547 = cast(%544, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
    %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%547, %548) /* ty=Tensor[(6, 9, 15), float32] */
  };
  %549(%var_1710) /* ty=Tensor[(6, 9, 15), float32] */
}

def @func_11323() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %553 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %550 = @func_3999() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
    %551 = @func_6215() /* ty=Tensor[(6, 9, 15), float64] */;
    %552 = %550.0;
    (%551, %552)
  };
  %553() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_8997(%var_8995: Tensor[(91, 7), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(2560), int8], Tensor[(91, 7), uint32]) {
  %554 = @func_5150() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %555 = cast(meta[relay.Constant][26] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %556 = cast(meta[relay.Constant][27] /* ty=Tensor[(2560), int8] */, dtype="int8") /* ty=Tensor[(2560), int8] */;
  %557 = cast(%var_8995, dtype="uint32") /* ty=Tensor[(91, 7), uint32] */;
  %558 = reshape(%555, newshape=[]) /* ty=int8 */;
  %559 = reshape(%556, newshape=[2560]) /* ty=Tensor[(2560), int8] */;
  %560 = reshape(%557, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %561 = @func_5542(%558, %559, %560) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) */;
  %562 = @func_6460() /* ty=Tensor[(6, 9, 15), float64] */;
  %563 = %554.0;
  %564 = %561.5;
  (%562, %563, %564, meta[relay.Constant][26] /* ty=int8 */, meta[relay.Constant][27] /* ty=Tensor[(2560), int8] */, %var_8995)
}

def @func_14457() -> (Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), float32], Tensor[(8, 8, 16), float32], Tensor[(6, 9, 15), float64]) {
  %576 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), float32], Tensor[(8, 8, 16), float32], Tensor[(6, 9, 15), float64]) {
    %565 = @func_12311() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64]) */;
    %566 = %565.1;
    %567 = cast(%566, dtype="float32") /* ty=Tensor[(8, 8, 16), float32] */;
    %568 = cast(%566, dtype="float64") /* ty=Tensor[(8, 8, 16), float64] */;
    %569 = sigmoid(%568) /* ty=Tensor[(8, 8, 16), float64] */;
    %570 = cast(%569, dtype="float32") /* ty=Tensor[(8, 8, 16), float32] */;
    %571 = @func_10941() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %572 = @func_6215() /* ty=Tensor[(6, 9, 15), float64] */;
    %573 = cos(%567) /* ty=Tensor[(8, 8, 16), float32] */;
    %574 = asin(%570) /* ty=Tensor[(8, 8, 16), float32] */;
    %575 = %571.2;
    (%572, %573, %574, %575)
  };
  %576() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), float32], Tensor[(8, 8, 16), float32], Tensor[(6, 9, 15), float64]) */
}

def @func_4805() -> Tensor[(6, 9, 15), float64] {
  %577 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_1914() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %577() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_12527() -> Tensor[(6, 9, 15), float64] {
  @func_12525() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_16266() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  @func_16264() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */
}

def @func_3021(%var_3020: Tensor[(6, 9, 15), float64]) -> Tensor[(6, 9, 15), float32] {
  %583 = fn (%var_3006: Tensor[(6, 9, 15), float64]) -> Tensor[(6, 9, 15), float32] {
    %578 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
    %579 = cast(%var_3006, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
    %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(3), int32] */;
    %581 = cast(%578, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
    %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%581, %582) /* ty=Tensor[(6, 9, 15), float32] */
  };
  %583(%var_3020) /* ty=Tensor[(6, 9, 15), float32] */
}

def @func_7885(%var_7865: Tensor[(1, 75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 75), int32], Tensor[(396), float32], Tensor[(1050), float64], Tensor[(396), float32]) {
  %584 = @func_3551() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %585 = cast(%var_7865, dtype="int32") /* ty=Tensor[(1, 75), int32] */;
  %586 = reshape(%585, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %587 = @func_5944(%586) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %588 = cast(meta[relay.Constant][28] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %589 = cast(meta[relay.Constant][29] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %590 = reshape(%588, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %591 = reshape(%589, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %592 = @func_704(%590, %591) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */;
  %593 = %584.0;
  %594 = %587.2;
  %595 = %592.3;
  (%593, %594, %var_7865, %595, meta[relay.Constant][28] /* ty=Tensor[(1050), float64] */, meta[relay.Constant][29] /* ty=Tensor[(396), float32] */)
}

def @func_554(%var_553: Tensor[(3, 11, 12), float32]) -> (Tensor[(3, 11, 12), uint32],) {
  %603 = fn (%var_536: Tensor[(3, 11, 12), float32]) -> (Tensor[(3, 11, 12), uint32],) {
    %596 = cast(%var_536, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
    %597 = asinh(%596) /* ty=Tensor[(3, 11, 12), float32] */;
    %598 = cast(%var_536, dtype="uint32") /* ty=Tensor[(3, 11, 12), uint32] */;
    %599 = shape_of(%597, dtype="int32") /* ty=Tensor[(3), int32] */;
    %600 = cast(%597, dtype="uint32") /* ty=Tensor[(3, 11, 12), uint32] */;
    %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %602 = subtract(%600, %601) /* ty=Tensor[(3, 11, 12), uint32] */;
    (%602,)
  };
  %603(%var_553) /* ty=(Tensor[(3, 11, 12), uint32],) */
}

def @func_11335() -> Tensor[(6, 9, 15), float64] {
  %604 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_8367() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %604() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_2683(%var_2681: int8, %var_2682: Tensor[(396), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(7, 13, 7), bool], int8, Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) {
  @func_2679(%var_2681, %var_2682) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(7, 13, 7), bool], int8, Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */
}

def @func_8917() -> (Tensor[(6, 9, 15), float64],) {
  %605 = @func_7474() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %606 = %605.1;
  (%606,)
}

def @func_3397() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %611 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %607 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %608 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %609 = %607.0;
    %610 = %608.0;
    (%609, %610)
  };
  %611() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_15711() -> Tensor[(6, 9, 15), float64] {
  %612 = @func_13565() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %612.0
}

def @func_12223() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %613 = @func_4692() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %614 = @func_2887() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %615 = @func_7474() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %616 = %613.0;
  %617 = %614.0;
  %618 = %615.0;
  (%616, %617, %618)
}

def @func_16133() -> (Tensor[(6, 9, 15), float64],) {
  %619 = @func_3728() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %620 = %619.0;
  (%620,)
}

def @func_15960() -> Tensor[(3, 11, 10), float64] {
  %622 = fn () -> Tensor[(3, 11, 10), float64] {
    %621 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 10), float64] */;
    sigmoid(%621) /* ty=Tensor[(3, 11, 10), float64] */
  };
  %622() /* ty=Tensor[(3, 11, 10), float64] */
}

def @func_17335() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16]) {
  @func_17333() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16]) */
}

def @func_10340() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_10338() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_3410() -> Tensor[(6, 9, 15), float64] {
  %624 = fn () -> Tensor[(6, 9, 15), float64] {
    %623 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %623.1
  };
  %624() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_17578() -> Tensor[(6, 9, 15), float64] {
  @func_17576() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_3684(%var_3682: int8) -> (Tensor[(6, 9, 15), bool], int8, Tensor[(637), uint32], Tensor[(10, 2, 11), float64], Tensor[(6, 9, 15), float32]) {
  @func_3681(%var_3682) /* ty=(Tensor[(6, 9, 15), bool], int8, Tensor[(637), uint32], Tensor[(10, 2, 11), float64], Tensor[(6, 9, 15), float32]) */
}

def @func_10082() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %628 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %625 = @func_4419() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %626 = @func_6078() /* ty=Tensor[(6, 9, 15), float64] */;
    %627 = %625.1;
    (%626, %627)
  };
  %628() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_13063(%var_13062: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(637), uint8], int8, Tensor[(637), uint64]) {
  %642 = fn (%var_13034: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(637), uint8], int8, Tensor[(637), uint64]) {
    %629 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %630 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %631 = cast(meta[relay.Constant][32] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
    %632 = reshape(%630, newshape=[]) /* ty=int8 */;
    %633 = reshape(%631, newshape=[637]) /* ty=Tensor[(637), uint32] */;
    %634 = @func_10608(%632, %633) /* ty=(Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(637), uint8]) */;
    %635 = cast(%var_13034, dtype="uint64") /* ty=Tensor[(637), uint64] */;
    %636 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(637), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %637 = cast(meta[relay.Constant][32] /* ty=Tensor[(637), uint32] */, dtype="uint64") /* ty=Tensor[(637), uint64] */;
    %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %639 = %629.1;
    %640 = %634.6;
    %641 = minimum(%637, %638) /* ty=Tensor[(637), uint64] */;
    (%639, %640, meta[relay.Constant][31] /* ty=int8 */, %641)
  };
  %642(%var_13062) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(637), uint8], int8, Tensor[(637), uint64]) */
}

def @func_14513(%var_14511: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) {
  @func_14510(%var_14511) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */
}

def @func_6403() -> (Tensor[(6, 9, 15), float64],) {
  @func_6401() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_17576() -> Tensor[(6, 9, 15), float64] {
  @func_4300() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_6433() -> Tensor[(6, 9, 15), float64] {
  @func_6431() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_18054() -> Tensor[(6, 9, 15), float32] {
  %643 = @func_16264() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
  %643.0
}

def @func_9551() -> Tensor[(6, 9, 15), float64] {
  %644 = @func_3728() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %644.0
}

def @func_10488() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %650 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
    %645 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %646 = %645.0;
    %647 = cast(%646, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
    %648 = reshape(%647, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
    %649 = @func_1709(%648) /* ty=Tensor[(6, 9, 15), float32] */;
    (%646, %649)
  };
  %650() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */
}

def @func_13604(%var_13602: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) {
  @func_13601(%var_13602) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) */
}

def @func_14356() -> (Tensor[(6, 9, 15), float64],) {
  @func_14354() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_17638() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32]) {
  %663 = fn () -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32]) {
    %651 = @func_13336() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %652 = %651.0;
    %653 = cast(%652, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
    %654 = reshape(%653, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
    %655 = @func_14925() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */;
    %656 = @func_6839() /* ty=Tensor[(6, 9, 15), float64] */;
    %657 = cast(%656, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
    %658 = reshape(%657, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
    %659 = @func_1709(%654) /* ty=Tensor[(6, 9, 15), float32] */;
    %660 = @func_5358() /* ty=Tensor[(6, 9, 15), float32] */;
    %661 = %655.1;
    %662 = @func_3019(%658) /* ty=Tensor[(6, 9, 15), float32] */;
    (%652, %659, %656, %660, %661, %662)
  };
  %663() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float32]) */
}

def @func_11230() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %664 = @func_3999() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
  %665 = @func_6431() /* ty=Tensor[(6, 9, 15), float64] */;
  %666 = %664.0;
  (%665, %666)
}

def @func_14277(%var_14275: Tensor[(1050), float64], %var_14276: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(1050), float64], Tensor[(75), bool]) {
  %685 = fn (%var_14266: Tensor[(1050), float64], %var_14270: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(1050), float64], Tensor[(75), bool]) {
    %667 = @func_14142() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(637), uint32], int8, Tensor[(1, 637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float64]) */;
    %668 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %669 = cast(meta[relay.Constant][33] /* ty=Tensor[(75), int32] */, dtype="int32") /* ty=Tensor[(75), int32] */;
    %670 = reshape(%669, newshape=[75]) /* ty=Tensor[(75), int32] */;
    %671 = @func_8241(%670) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(75), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), bool]) */;
    %672 = cast(%var_14266, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %673 = reshape(%672, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
    %674 = @func_12474(%673) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(1050), uint64]) */;
    %675 = cast(%var_14270, dtype="bool") /* ty=Tensor[(75), bool] */;
    %676 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(75), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %677 = cast(meta[relay.Constant][33] /* ty=Tensor[(75), int32] */, dtype="bool") /* ty=Tensor[(75), bool] */;
    %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?), bool] */;
    %679 = %667.5;
    %680 = @func_10381() /* ty=Tensor[(11, ?, 10), float64] */;
    %681 = %668.3;
    %682 = %671.0;
    %683 = %674.0;
    %684 = equal(%677, %678) /* ty=Tensor[(75), bool] */;
    (%679, %680, %681, %682, %683, %var_14266, %684)
  };
  %685(%var_14275, %var_14276) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(1050), float64], Tensor[(75), bool]) */
}

def @func_15556() -> (Tensor[(6, 9, 15), float64], Tensor[(396), float32], int8, Tensor[(6, 9, 15), float64]) {
  %693 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(396), float32], int8, Tensor[(6, 9, 15), float64]) {
    %686 = cast(meta[relay.Constant][34] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %687 = reshape(%686, newshape=[]) /* ty=int8 */;
    %688 = @func_3800(%687) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(396), float32]) */;
    %689 = @func_13988() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
    %690 = @func_6839() /* ty=Tensor[(6, 9, 15), float64] */;
    %691 = %688.4;
    %692 = %689.0;
    (%690, %691, meta[relay.Constant][34] /* ty=int8 */, %692)
  };
  %693() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(396), float32], int8, Tensor[(6, 9, 15), float64]) */
}

def @func_17210() -> (Tensor[(6, 9, 15), float64],) {
  %694 = @func_15639() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %695 = %694.0;
  (%695,)
}

def @func_13299() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_13297() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_13336() -> (Tensor[(6, 9, 15), float32],) {
  %696 = @func_7332() /* ty=Tensor[(6, 9, 15), float32] */;
  (%696,)
}

def @func_2344(%var_2273: Tensor[(6, 9, 15), float64]) -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], Tensor[(637), uint32], Tensor[(6, 9, 15), float32]) {
  %697 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %699 = cast(meta[relay.Constant][35] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %700 = reshape(%699, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), uint32] */;
  %701 = @func_872(%700) /* ty=(Tensor[(7, 13, 7), bool],) */;
  %702 = cast(%var_2273, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %703 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%697, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %706 = power(%704, %705) /* ty=Tensor[(6, 9, 15), float32] */;
  %707 = cast(%706, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %708 = acos(%698) /* ty=Tensor[(6, 9, 15), float32] */;
  %709 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  %710 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %711 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  %712 = %701.0;
  %713 = log10(%707) /* ty=Tensor[(6, 9, 15), float32] */;
  (%708, %709, %710, %711, %712, meta[relay.Constant][35] /* ty=Tensor[(637), uint32] */, %713)
}

def @func_8600() -> (Tensor[(6, 9, 15), float64],) {
  %715 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %714 = @func_3047() /* ty=Tensor[(6, 9, 15), float64] */;
    (%714,)
  };
  %715() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_6839() -> Tensor[(6, 9, 15), float64] {
  %716 = @func_5150() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %716.0
}

def @func_12881() -> (Tensor[(6, 9, 15), float64],) {
  %717 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %718 = %717.1;
  (%718,)
}

def @func_15264() -> (Tensor[(6, 9, 15), float64],) {
  %721 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %719 = @func_6401() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %720 = %719.0;
    (%720,)
  };
  %721() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_18503() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %722 = @func_6569() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %723 = %722.0;
  %724 = @func_7857() /* ty=Tensor[(6, 9, 15), float64] */;
  %725 = @func_17932() /* ty=Tensor[(6, 9, 15), float64] */;
  (%723, %724, %725)
}

def @func_8919() -> (Tensor[(6, 9, 15), float64],) {
  @func_8917() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_14959() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %726 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %727 = %726.0;
  %728 = @func_12177() /* ty=Tensor[(6, 9, 15), float64] */;
  (%727, %728)
}

def @func_7333() -> Tensor[(6, 9, 15), float32] {
  %730 = fn () -> Tensor[(6, 9, 15), float32] {
    %729 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %729.0
  };
  %730() /* ty=Tensor[(6, 9, 15), float32] */
}

def @func_17140() -> Tensor[(1050), uint16] {
  @func_9277() /* ty=Tensor[(1050), uint16] */
}

def @func_9483(%var_9473: int8, %var_9474: Tensor[(1, 637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(1, 637), uint32]) {
  %731 = cast(%var_9473, dtype="int8") /* ty=int8 */;
  %732 = cast(%var_9474, dtype="uint32") /* ty=Tensor[(1, 637), uint32] */;
  %733 = reshape(%731, newshape=[]) /* ty=int8 */;
  %734 = reshape(%732, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %735 = @func_6621(%733, %734) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */;
  %736 = @func_8659() /* ty=Tensor[(6, 9, 15), float64] */;
  %737 = %735.1;
  (%736, %737, %var_9473, %var_9474)
}

def @func_8706() -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], bool, Tensor[(75), bool], Tensor[(6, 9, 15), float64]) {
  @func_8704() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], bool, Tensor[(75), bool], Tensor[(6, 9, 15), float64]) */
}

def @func_13746(%var_13744: Tensor[(1050), float64]) -> (Tensor[(1050), float64], Tensor[(75), int32], Tensor[(75), int32], Tensor[(1050), uint8]) {
  @func_13743(%var_13744) /* ty=(Tensor[(1050), float64], Tensor[(75), int32], Tensor[(75), int32], Tensor[(1050), uint8]) */
}

def @func_12829() -> Tensor[(6, 9, 15), float32] {
  @func_12827() /* ty=Tensor[(6, 9, 15), float32] */
}

def @func_7201(%var_7199: bool, %var_7200: Tensor[(1, 15, 5), bool]) -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 15, 5), float32]) {
  @func_7197(%var_7199, %var_7200) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 15, 5), float32]) */
}

def @func_9303() -> Tensor[(6, 9, 15), float64] {
  %738 = @func_9082() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %738.1
}

def @func_9915() -> (Tensor[(6, 9, 15), float32],) {
  %740 = fn () -> (Tensor[(6, 9, 15), float32],) {
    %739 = @func_7332() /* ty=Tensor[(6, 9, 15), float32] */;
    (%739,)
  };
  %740() /* ty=(Tensor[(6, 9, 15), float32],) */
}

def @func_12179() -> Tensor[(6, 9, 15), float64] {
  @func_12177() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_13706() -> Tensor[(396), float32] {
  %742 = fn () -> Tensor[(396), float32] {
    %741 = @func_6894() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
    %741.1
  };
  %742() /* ty=Tensor[(396), float32] */
}

def @func_1551() -> (Tensor[(6, 9, 15), float64],) {
  @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_10982(%var_10981: Tensor[(2, 11, 9), float32]) -> (Tensor[(2, 11, 9), float64], Tensor[(2, 11, 9), float64]) {
  %752 = fn (%var_10963: Tensor[(2, 11, 9), float32]) -> (Tensor[(2, 11, 9), float64], Tensor[(2, 11, 9), float64]) {
    %743 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 11, 9), float32] */, dtype="float64") /* ty=Tensor[(2, 11, 9), float64] */;
    %744 = cast(%var_10963, dtype="bool") /* ty=Tensor[(2, 11, 9), bool] */;
    %745 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(2, 11, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %746 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 11, 9), float32] */, dtype="bool") /* ty=Tensor[(2, 11, 9), bool] */;
    %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %748 = not_equal(%746, %747) /* ty=Tensor[(2, 11, 9), bool] */;
    %749 = cast(%748, dtype="float64") /* ty=Tensor[(2, 11, 9), float64] */;
    %750 = exp(%743) /* ty=Tensor[(2, 11, 9), float64] */;
    %751 = asinh(%749) /* ty=Tensor[(2, 11, 9), float64] */;
    (%750, %751)
  };
  %752(%var_10981) /* ty=(Tensor[(2, 11, 9), float64], Tensor[(2, 11, 9), float64]) */
}

def @func_10943() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_10941() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_6126() -> (Tensor[(6, 9, 15), float64],) {
  @func_6124() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_15478(%var_15473: Tensor[(2, 13, 10), uint64]) -> Tensor[(2, 13, 10), bool] {
  %753 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 13, 10), uint64] */, dtype="bool") /* ty=Tensor[(2, 13, 10), bool] */;
  %754 = shape_of(%var_15473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%var_15473, dtype="bool") /* ty=Tensor[(2, 13, 10), bool] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%755, %756) /* ty=Tensor[(2, 13, 10), bool] */
}

def @func_18306() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  @func_18304() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */
}

def @func_14303() -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), int8]) {
  %757 = @func_6124() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %758 = @func_8395() /* ty=(Tensor[(11, ?, 10), int8],) */;
  %759 = %757.0;
  %760 = %758.0;
  (%759, %760)
}

def @func_1743() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %761 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %762 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %763 = %761.0;
  (%762, %763)
}

def @func_12238() -> Tensor[(6, 9, 15), float64] {
  %765 = fn () -> Tensor[(6, 9, 15), float64] {
    %764 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %764.0
  };
  %765() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_12043() -> (Tensor[(6, 9, 15), float64],) {
  %766 = @func_5978() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %767 = %766.0;
  (%767,)
}

def @func_5469() -> (Tensor[(6, 9, 15), float64],) {
  @func_5467() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_9314() -> Tensor[(6, 9, 15), float64] {
  @func_9303() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_8089() -> (Tensor[(6, 9, 15), float32], Tensor[(10, 4, 4), bool], int16, Tensor[(160), int16]) {
  @func_8087() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(10, 4, 4), bool], int16, Tensor[(160), int16]) */
}

def @func_12865(%var_12864: Tensor[(14, 4, 11), uint32]) -> (Tensor[(14, 4, 11), uint32], Tensor[(6, 9, 15), float64]) {
  %775 = fn (%var_12849: Tensor[(14, 4, 11), uint32]) -> (Tensor[(14, 4, 11), uint32], Tensor[(6, 9, 15), float64]) {
    %768 = cast(%var_12849, dtype="uint32") /* ty=Tensor[(14, 4, 11), uint32] */;
    %769 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(14, 4, 11), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %770 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 4, 11), uint32] */, dtype="uint32") /* ty=Tensor[(14, 4, 11), uint32] */;
    %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %772 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %773 = left_shift(%770, %771) /* ty=Tensor[(14, 4, 11), uint32] */;
    %774 = %772.0;
    (%773, %774)
  };
  %775(%var_12864) /* ty=(Tensor[(14, 4, 11), uint32], Tensor[(6, 9, 15), float64]) */
}

def @func_15327() -> (Tensor[(6, 9, 15), float64],) {
  @func_15325() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_2223() -> (Tensor[(6, 9, 15), float64],) {
  %776 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %777 = %776.0;
  (%777,)
}

def @func_9665(%var_9634: Tensor[(396), float32], %var_9655: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], uint32, uint32, Tensor[(3, 11, 12), uint32], Tensor[(396), float32], int8, Tensor[(637), uint32], Tensor[(1050), float64]) {
  %778 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %779 = cast(meta[relay.Constant][39] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %780 = reshape(%779, newshape=[]) /* ty=uint32 */;
  %781 = @func_8877(%780) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], uint32) */;
  %782 = cast(%var_9634, dtype="float32") /* ty=Tensor[(396), float32] */;
  %783 = reshape(%782, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %784 = @func_552(%783) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %785 = cast(%var_9655, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %786 = cast(meta[relay.Constant][40] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %787 = reshape(%785, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %788 = reshape(%786, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %789 = @func_7974(%787, %788) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(3, 11, 12), uint32], Tensor[(6, 66), float32], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) */;
  %790 = %778.0;
  %791 = %781.2;
  %792 = %784.0;
  %793 = %789.5;
  (%790, %791, meta[relay.Constant][39] /* ty=uint32 */, %792, %var_9634, %793, %var_9655, meta[relay.Constant][40] /* ty=Tensor[(1050), float64] */)
}

def @func_15972() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %794 = @func_8584() /* ty=(Tensor[(396), float64], Tensor[(6, 9, 15), float64]) */;
  %795 = @func_14303() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), int8]) */;
  %796 = %794.1;
  %797 = %795.0;
  (%796, %797)
}

def @func_2679(%var_2647: int8, %var_2657: Tensor[(396), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(7, 13, 7), bool], int8, Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) {
  %798 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %799 = %798.0;
  %800 = cast(%799, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %801 = reshape(%800, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %802 = cast(%var_2647, dtype="int8") /* ty=int8 */;
  %803 = reshape(%802, newshape=[]) /* ty=int8 */;
  %804 = @func_1976(%803) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32]) */;
  %805 = cast(%var_2657, dtype="float32") /* ty=Tensor[(396), float32] */;
  %806 = reshape(%805, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %807 = @func_552(%806) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %808 = @func_1709(%801) /* ty=Tensor[(6, 9, 15), float32] */;
  %809 = %804.1;
  %810 = %807.0;
  (%799, %808, %809, %var_2647, %810, %var_2657)
}

def @func_3838() -> (Tensor[(6, 9, 15), float64],) {
  %811 = @func_3409() /* ty=Tensor[(6, 9, 15), float64] */;
  (%811,)
}

def @func_3802(%var_3801: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(396), float32]) {
  %820 = fn (%var_3787: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(396), float32]) {
    %812 = cast(%var_3787, dtype="int8") /* ty=int8 */;
    %813 = cast(meta[relay.Constant][41] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %814 = reshape(%812, newshape=[]) /* ty=int8 */;
    %815 = reshape(%813, newshape=[396]) /* ty=Tensor[(396), float32] */;
    %816 = @func_2679(%814, %815) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(7, 13, 7), bool], int8, Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */;
    %817 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
    %818 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
    %819 = %816.3;
    (%817, %818, %819, %var_3787, meta[relay.Constant][41] /* ty=Tensor[(396), float32] */)
  };
  %820(%var_3801) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(396), float32]) */
}

def @func_3934() -> (Tensor[(6, 9, 15), float64],) {
  %821 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %822 = %821.0;
  (%822,)
}

def @func_16858(%var_16832: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), bool], Tensor[(11, ?, 10), uint64], Tensor[(11, 12, 10), int32], Tensor[(6, 9, 15), float64], Tensor[(15, ?, 5), bool], Tensor[(75), int32], Tensor[(10, 1, 4), float64], Tensor[(40), float64]) {
  %823 = @func_5467() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %824 = @func_12156() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64]) */;
  %825 = %824.1;
  %826 = cast(%825, dtype="float32") /* ty=Tensor[(11, ?, 10), float32] */;
  %827 = sinh(%826) /* ty=Tensor[(11, ?, 10), float32] */;
  %828 = cast(%827, dtype="float64") /* ty=Tensor[(11, ?, 10), float64] */;
  %829 = acosh(%828) /* ty=Tensor[(11, ?, 10), float64] */;
  %830 = cast(%827, dtype="float64") /* ty=Tensor[(11, ?, 10), float64] */;
  %831 = shape_of(%829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %832 = cast(%829, dtype="float64") /* ty=Tensor[(11, ?, 10), float64] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %834 = multiply(%832, %833) /* ty=Tensor[(11, ?, 10), float64] */;
  %835 = cast(%834, dtype="float32") /* ty=Tensor[(11, ?, 10), float32] */;
  %836 = atanh(%835) /* ty=Tensor[(11, ?, 10), float32] */;
  %837 = cast(%827, dtype="bool") /* ty=Tensor[(11, ?, 10), bool] */;
  %838 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%836, dtype="bool") /* ty=Tensor[(11, ?, 10), bool] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %841 = cast(%834, dtype="uint64") /* ty=Tensor[(11, ?, 10), uint64] */;
  %842 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%836, dtype="uint64") /* ty=Tensor[(11, ?, 10), uint64] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %845 = cast(%834, dtype="int32") /* ty=Tensor[(11, ?, 10), int32] */;
  %846 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 12, 10), float64] */, dtype="int32") /* ty=Tensor[(11, 12, 10), int32] */;
  %847 = cast(%var_16832, dtype="int32") /* ty=Tensor[(75), int32] */;
  %848 = reshape(%847, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), int32] */;
  %849 = @func_2052(%848) /* ty=(Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) */;
  %850 = cast(meta[relay.Constant][43] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %851 = reshape(%850, newshape=[10, 1, 4]) /* ty=Tensor[(10, 1, 4), float64] */;
  %852 = %823.0;
  %853 = less(%839, %840) /* ty=Tensor[(11, ?, 10), bool] */;
  %854 = logical_xor(%843, %844) /* ty=Tensor[(11, ?, 10), uint64] */;
  %855 = right_shift(%845, %846) /* ty=Tensor[(11, 12, 10), int32] */;
  %856 = @func_7627() /* ty=Tensor[(6, 9, 15), float64] */;
  %857 = %849.0;
  %858 = @func_12006(%851) /* ty=Tensor[(10, 1, 4), float64] */;
  (%852, %853, %854, %855, %856, %857, %var_16832, %858, meta[relay.Constant][43] /* ty=Tensor[(40), float64] */)
}

def @func_2481(%var_2479: uint32) -> (Tensor[(6, 9, 15), float32], Tensor[(9, 12, 14), bool], uint32, Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  @func_2478(%var_2479) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(9, 12, 14), bool], uint32, Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */
}

def @func_5946(%var_5945: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %876 = fn (%var_5914: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %859 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %860 = %859.0;
    %861 = @func_4461() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %862 = %861.1;
    %863 = cast(%862, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
    %864 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
    %865 = cast(%860, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
    %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %867 = cast(%var_5914, dtype="int32") /* ty=Tensor[(75), int32] */;
    %868 = reshape(%867, newshape=[75]) /* ty=Tensor[(75), int32] */;
    %869 = @func_4770(%868) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(15, ?, 5), bool], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %870 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %871 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %872 = floor_divide(%865, %866) /* ty=Tensor[(6, 9, 15), float32] */;
    %873 = %869.2;
    %874 = %870.0;
    %875 = %871.1;
    (%872, %873, %var_5914, %874, %875)
  };
  %876(%var_5945) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_13743(%var_13736: Tensor[(1050), float64]) -> (Tensor[(1050), float64], Tensor[(75), int32], Tensor[(75), int32], Tensor[(1050), uint8]) {
  %877 = @func_12109() /* ty=(Tensor[(1050), float64],) */;
  %878 = %877.0;
  %879 = cast(%878, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %880 = cast(meta[relay.Constant][44] /* ty=Tensor[(75), int32] */, dtype="int32") /* ty=Tensor[(75), int32] */;
  %881 = reshape(%880, newshape=[75]) /* ty=Tensor[(75), int32] */;
  %882 = @func_13176(%881) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(75), int32]) */;
  %883 = cast(%var_13736, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %884 = shape_of(%878, dtype="int32") /* ty=Tensor[(1), int32] */;
  %885 = cast(%878, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %887 = sqrt(%879) /* ty=Tensor[(1050), float64] */;
  %888 = %882.3;
  %889 = bitwise_and(%885, %886) /* ty=Tensor[(1050), uint8] */;
  (%887, %888, meta[relay.Constant][44] /* ty=Tensor[(75), int32] */, %889)
}

def @func_4602() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %890 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %891 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %892 = %890.0;
  %893 = %891.1;
  (%892, %893)
}

def @func_9487(%var_9485: int8, %var_9486: Tensor[(1, 637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(1, 637), uint32]) {
  @func_9483(%var_9485, %var_9486) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(1, 637), uint32]) */
}

def @func_12225() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_12223() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_8349(%var_8348: Tensor[(75), int32]) -> (Tensor[(75), int32], Tensor[(75), int32], Tensor[(2, 3, 15), uint16], Tensor[(6, 9, 15), float64]) {
  %906 = fn (%var_8337: Tensor[(75), int32]) -> (Tensor[(75), int32], Tensor[(75), int32], Tensor[(2, 3, 15), uint16], Tensor[(6, 9, 15), float64]) {
    %894 = cast(%var_8337, dtype="int32") /* ty=Tensor[(75), int32] */;
    %895 = reshape(%894, newshape=[75]) /* ty=Tensor[(75), int32] */;
    %896 = @func_5944(%895) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(75), int32], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %897 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 3, 15), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 15), float32] */;
    %898 = acos(%897) /* ty=Tensor[(2, 3, 15), float32] */;
    %899 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 3, 15), float32] */, dtype="uint16") /* ty=Tensor[(2, 3, 15), uint16] */;
    %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(3), int32] */;
    %901 = cast(%898, dtype="uint16") /* ty=Tensor[(2, 3, 15), uint16] */;
    %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %903 = %896.2;
    %904 = bitwise_xor(%901, %902) /* ty=Tensor[(2, 3, 15), uint16] */;
    %905 = @func_7857() /* ty=Tensor[(6, 9, 15), float64] */;
    (%903, %var_8337, %904, %905)
  };
  %906(%var_8348) /* ty=(Tensor[(75), int32], Tensor[(75), int32], Tensor[(2, 3, 15), uint16], Tensor[(6, 9, 15), float64]) */
}

def @func_3840() -> (Tensor[(6, 9, 15), float64],) {
  @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_8660() -> Tensor[(6, 9, 15), float64] {
  %908 = fn () -> Tensor[(6, 9, 15), float64] {
    %907 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %907.0
  };
  %908() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_12474(%var_12447: Tensor[(1050), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(1050), uint64]) {
  %909 = @func_10487() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %910 = @func_8704() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], bool, Tensor[(75), bool], Tensor[(6, 9, 15), float64]) */;
  %911 = @func_12109() /* ty=(Tensor[(1050), float64],) */;
  %912 = %911.0;
  %913 = cast(%912, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %914 = sin(%913) /* ty=Tensor[(1050), float64] */;
  %915 = cast(%var_12447, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %916 = shape_of(%914, dtype="int32") /* ty=Tensor[(1), int32] */;
  %917 = cast(%914, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %919 = bitwise_or(%917, %918) /* ty=Tensor[(1050), uint8] */;
  %920 = cast(%919, dtype="uint64") /* ty=Tensor[(1050), uint64] */;
  %921 = shape_of(%914, dtype="int32") /* ty=Tensor[(1), int32] */;
  %922 = cast(%914, dtype="uint64") /* ty=Tensor[(1050), uint64] */;
  %923 = dyn.reshape(%920, %921, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %924 = @func_3431() /* ty=Tensor[(6, 9, 15), float64] */;
  %925 = %909.1;
  %926 = %910.0;
  %927 = multiply(%922, %923) /* ty=Tensor[(1050), uint64] */;
  (%924, %925, %926, %927)
}

def @func_6861() -> Tensor[(15, 16, 6), float32] {
  %928 = cast(meta[relay.Constant][46] /* ty=Tensor[(15, 16, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  asinh(%928) /* ty=Tensor[(15, 16, 6), float32] */
}

def @func_15094() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %935 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %929 = @func_11571() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %930 = @func_12043() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %931 = @func_3728() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %932 = %929.0;
    %933 = %930.0;
    %934 = %931.0;
    (%932, %933, %934)
  };
  %935() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_16360(%var_16359: Tensor[(594), uint16]) -> (Tensor[(6, 9, 15), float64], Tensor[(11, 9, 6), float64], Tensor[(594), uint16]) {
  %942 = fn (%var_16333: Tensor[(594), uint16]) -> (Tensor[(6, 9, 15), float64], Tensor[(11, 9, 6), float64], Tensor[(594), uint16]) {
    %936 = @func_13389() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %937 = cast(%var_16333, dtype="uint16") /* ty=Tensor[(594), uint16] */;
    %938 = reshape(%937, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), uint16] */;
    %939 = @func_16038(%938) /* ty=(Tensor[(11, 9, 6), float64], Tensor[(6, 9, 15), float64]) */;
    %940 = %936.1;
    %941 = %939.0;
    (%940, %941, %var_16333)
  };
  %942(%var_16359) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(11, 9, 6), float64], Tensor[(594), uint16]) */
}

def @func_17222() -> Tensor[(396), float32] {
  %943 = fn () -> Tensor[(396), float32] {
    @func_13705() /* ty=Tensor[(396), float32] */
  };
  %943() /* ty=Tensor[(396), float32] */
}

def @func_10788() -> Tensor[(6, 9, 15), float64] {
  %944 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_4804() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %944() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_9227() -> Tensor[(6, 9, 15), float64] {
  %945 = @func_8584() /* ty=(Tensor[(396), float64], Tensor[(6, 9, 15), float64]) */;
  %945.1
}

def @func_9316() -> Tensor[(6, 9, 15), float64] {
  @func_9314() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_1730() -> (Tensor[(6, 9, 15), float32],) {
  %946 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %947 = %946.0;
  %948 = cast(%947, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %949 = erf(%948) /* ty=Tensor[(6, 9, 15), float32] */;
  (%949,)
}

def @func_12525() -> Tensor[(6, 9, 15), float64] {
  %950 = @func_10941() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %950.1
}

def @func_1916() -> Tensor[(6, 9, 15), float64] {
  @func_1914() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_5564() -> (Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) {
  %951 = @func_3185() /* ty=(Tensor[(6, 9, 15), bool],) */;
  %952 = %951.0;
  %953 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  (%952, %953)
}

def @func_7977(%var_7975: Tensor[(637), uint32], %var_7976: Tensor[(1050), float64]) -> (Tensor[(6, 9, 15), bool], Tensor[(3, 11, 12), uint32], Tensor[(6, 66), float32], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) {
  %974 = fn (%var_7967: Tensor[(637), uint32], %var_7970: Tensor[(1050), float64]) -> (Tensor[(6, 9, 15), bool], Tensor[(3, 11, 12), uint32], Tensor[(6, 66), float32], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) {
    %954 = @func_5564() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
    %955 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 66), float32] */, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
    %956 = reshape(%955, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
    %957 = @func_552(%956) /* ty=(Tensor[(3, 11, 12), uint32],) */;
    %958 = @func_3934() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %959 = cast(meta[relay.Constant][48] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %960 = cast(%var_7967, dtype="uint32") /* ty=Tensor[(637), uint32] */;
    %961 = reshape(%959, newshape=[]) /* ty=int8 */;
    %962 = reshape(%960, newshape=[637]) /* ty=Tensor[(637), uint32] */;
    %963 = @func_6621(%961, %962) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */;
    %964 = cast(%var_7970, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %965 = %957.0;
    %966 = cast(%965, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
    %967 = reshape(%964, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
    %968 = reshape(%966, newshape=[396]) /* ty=Tensor[(396), float32] */;
    %969 = @func_704(%967, %968) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */;
    %970 = %954.0;
    %971 = %958.0;
    %972 = %963.2;
    %973 = %969.1;
    (%970, %965, meta[relay.Constant][47] /* ty=Tensor[(6, 66), float32] */, %971, %972, meta[relay.Constant][48] /* ty=int8 */, %var_7967, %973, %var_7970)
  };
  %974(%var_7975, %var_7976) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(3, 11, 12), uint32], Tensor[(6, 66), float32], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) */
}

def @func_8948() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %975 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %976 = %975.3;
  %977 = @func_3063() /* ty=Tensor[(6, 9, 15), float64] */;
  (%976, %977)
}

def @func_12698(%var_12696: Tensor[(4, 7, 14), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(4, 7, 14), float64], Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_12695(%var_12696) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(4, 7, 14), float64], Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_11484() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_11482() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_6841() -> Tensor[(6, 9, 15), float64] {
  @func_6839() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_1411() -> Tensor[(6, 9, 15), float64] {
  %978 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  cosh(%978) /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_6284() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  @func_6282() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */
}

def @func_2775(%var_2703: int8, %var_2715: Tensor[(3, 132), float32], %var_2749: Tensor[(15, 5), int32]) -> (Tensor[(6, 9, 15), float32], int8, Tensor[(3, 11, 12), uint32], Tensor[(3, 132), float32], Tensor[(6, 9, 15), float64], Tensor[(637), bool], Tensor[(6, 9, 15), float64], Tensor[(1, 637), uint32], Tensor[(16, 16, 10), int16], Tensor[(3, 11, 12), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(15, 5), int32]) {
  %979 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %980 = cast(%var_2715, dtype="float32") /* ty=Tensor[(3, 132), float32] */;
  %981 = reshape(%980, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %982 = @func_552(%981) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %983 = cast(%var_2703, dtype="int8") /* ty=int8 */;
  %984 = cast(meta[relay.Constant][50] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %985 = reshape(%983, newshape=[]) /* ty=int8 */;
  %986 = reshape(%984, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %987 = @func_2212(%985, %986) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(1050, 637), int16], Tensor[(1050, 637), bool], Tensor[(6, 9, 15), float64]) */;
  %988 = cast(meta[relay.Constant][51] /* ty=Tensor[(637), uint32] */, dtype="bool") /* ty=Tensor[(637), bool] */;
  %989 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(637), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %990 = cast(meta[relay.Constant][50] /* ty=Tensor[(637), uint32] */, dtype="bool") /* ty=Tensor[(637), bool] */;
  %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?), bool] */;
  %992 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %993 = cast(%var_2703, dtype="int8") /* ty=int8 */;
  %994 = cast(%var_2703, dtype="int8") /* ty=int8 */;
  %995 = cast(meta[relay.Constant][52] /* ty=Tensor[(2560), int8] */, dtype="int8") /* ty=Tensor[(2560), int8] */;
  %996 = cast(meta[relay.Constant][50] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %997 = reshape(%994, newshape=[]) /* ty=int8 */;
  %998 = reshape(%995, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int8] */;
  %999 = reshape(%996, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
  %1000 = @func_916(%997, %998, %999) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) */;
  %1001 = %1000.0;
  %1002 = cast(%1001, dtype="int8") /* ty=Tensor[(16, 16, 10), int8] */;
  %1003 = less_equal(%990, %991) /* ty=Tensor[(637), bool] */;
  %1004 = cast(%1003, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1005 = reshape(%993, newshape=[]) /* ty=int8 */;
  %1006 = reshape(%1002, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int8] */;
  %1007 = reshape(%1004, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
  %1008 = @func_916(%1005, %1006, %1007) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) */;
  %1009 = cast(meta[relay.Constant][52] /* ty=Tensor[(2560), int8] */, dtype="int16") /* ty=Tensor[(2560), int16] */;
  %1010 = shape_of(%1001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%1001, dtype="int16") /* ty=Tensor[(16, 16, 10), int16] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1013 = cast(%var_2715, dtype="float32") /* ty=Tensor[(3, 132), float32] */;
  %1014 = reshape(%1013, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %1015 = @func_552(%1014) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %1016 = cast(%var_2749, dtype="int32") /* ty=Tensor[(15, 5), int32] */;
  %1017 = reshape(%1016, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), int32] */;
  %1018 = @func_2052(%1017) /* ty=(Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) */;
  %1019 = %979.0;
  %1020 = %982.0;
  %1021 = %987.5;
  %1022 = %992.0;
  %1023 = %1008.2;
  %1024 = subtract(%1011, %1012) /* ty=Tensor[(16, 16, 10), int16] */;
  %1025 = %1015.0;
  %1026 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  %1027 = %1018.1;
  (%1019, %var_2703, %1020, %var_2715, %1021, %1003, %1022, %1023, %1024, %1025, %1026, %1027, %var_2749)
}

def @func_3681(%var_3632: int8) -> (Tensor[(6, 9, 15), bool], int8, Tensor[(637), uint32], Tensor[(10, 2, 11), float64], Tensor[(6, 9, 15), float32]) {
  %1028 = cast(%var_3632, dtype="int8") /* ty=int8 */;
  %1029 = cast(meta[relay.Constant][53] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1030 = reshape(%1028, newshape=[]) /* ty=int8 */;
  %1031 = reshape(%1029, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %1032 = @func_2123(%1030, %1031) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
  %1033 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 2, 11), float32] */, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %1034 = erf(%1033) /* ty=Tensor[(10, 2, 11), float32] */;
  %1035 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 2, 11), float32] */, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
  %1036 = shape_of(%1034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1037 = cast(%1034, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
  %1038 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1039 = %1032.0;
  %1040 = cast(%1039, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %1041 = reshape(%1040, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %1042 = divide(%1037, %1038) /* ty=Tensor[(10, 2, 11), float64] */;
  %1043 = @func_3019(%1041) /* ty=Tensor[(6, 9, 15), float32] */;
  (%1039, %var_3632, meta[relay.Constant][53] /* ty=Tensor[(637), uint32] */, %1042, %1043)
}

def @func_15219() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1044 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1045 = @func_10941() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1046 = %1044.1;
  %1047 = %1045.1;
  (%1046, %1047)
}

def @func_6044() -> (Tensor[(6, 9, 15), float32],) {
  %1048 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1049 = %1048.0;
  %1050 = cast(%1049, dtype="float32") /* ty=Tensor[(6, 9, 15), float32] */;
  %1051 = acosh(%1050) /* ty=Tensor[(6, 9, 15), float32] */;
  (%1051,)
}

def @func_17052() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_17050() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_18304() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  %1052 = @func_16157() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1053 = @func_10555() /* ty=Tensor[(6, 9, 15), float32] */;
  %1054 = %1052.0;
  (%1053, %1054)
}

def @func_11172() -> Tensor[(6, 9, 15), float64] {
  @func_11170() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_9553() -> Tensor[(6, 9, 15), float64] {
  @func_9551() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_15840(%var_15839: Tensor[(14, 5, 1), float64]) -> (Tensor[(14, 5, 1), float64], Tensor[(6, 9, 15), float32]) {
  %1059 = fn (%var_15830: Tensor[(14, 5, 1), float64]) -> (Tensor[(14, 5, 1), float64], Tensor[(6, 9, 15), float32]) {
    %1055 = cast(%var_15830, dtype="float64") /* ty=Tensor[(14, 5, 1), float64] */;
    %1056 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
    %1057 = tan(%1055) /* ty=Tensor[(14, 5, 1), float64] */;
    %1058 = %1056.2;
    (%1057, %1058)
  };
  %1059(%var_15839) /* ty=(Tensor[(14, 5, 1), float64], Tensor[(6, 9, 15), float32]) */
}

def @func_5128() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_5126() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_16719(%var_16718: uint32) -> (Tensor[(15, 15, 4), uint32],) {
  %1063 = fn (%var_16712: uint32) -> (Tensor[(15, 15, 4), uint32],) {
    %1060 = cast(%var_16712, dtype="uint32") /* ty=uint32 */;
    %1061 = cast(meta[relay.Constant][55] /* ty=Tensor[(15, 15, 4), uint32] */, dtype="uint32") /* ty=Tensor[(15, 15, 4), uint32] */;
    %1062 = bitwise_xor(%1060, %1061) /* ty=Tensor[(15, 15, 4), uint32] */;
    (%1062,)
  };
  %1063(%var_16718) /* ty=(Tensor[(15, 15, 4), uint32],) */
}

def @func_12045() -> (Tensor[(6, 9, 15), float64],) {
  @func_12043() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_4770(%var_4733: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(15, ?, 5), bool], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1064 = cast(%var_4733, dtype="int32") /* ty=Tensor[(75), int32] */;
  %1065 = reshape(%1064, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), int32] */;
  %1066 = @func_2052(%1065) /* ty=(Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) */;
  %1067 = cast(%var_4733, dtype="int32") /* ty=Tensor[(75), int32] */;
  %1068 = reshape(%1067, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), int32] */;
  %1069 = @func_2052(%1068) /* ty=(Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) */;
  %1070 = @func_3728() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1071 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %1072 = %1066.0;
  %1073 = %1069.1;
  %1074 = %1070.0;
  (%1071, %1072, %var_4733, %1073, %1074)
}

def @func_9732() -> (Tensor[(6, 9, 15), float64],) {
  %1075 = @func_6078() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1075,)
}

def @func_4461() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1076 = @func_4258() /* ty=Tensor[(6, 9, 15), float64] */;
  %1077 = @func_3047() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1076, %1077)
}

def @func_14813(%var_14811: int8, %var_14812: Tensor[(8, 6, 4), int8]) -> (Tensor[(8, 6, 4), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1087 = fn (%var_14765: int8, %var_14766: Tensor[(8, 6, 4), int8]) -> (Tensor[(8, 6, 4), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %1078 = cast(%var_14765, dtype="int8") /* ty=int8 */;
    %1079 = cast(%var_14766, dtype="int8") /* ty=Tensor[(8, 6, 4), int8] */;
    %1080 = bitwise_xor(%1078, %1079) /* ty=Tensor[(8, 6, 4), int8] */;
    %1081 = cast(%1080, dtype="float32") /* ty=Tensor[(8, 6, 4), float32] */;
    %1082 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1083 = @func_11230() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1084 = sigmoid(%1081) /* ty=Tensor[(8, 6, 4), float32] */;
    %1085 = %1082.1;
    %1086 = %1083.1;
    (%1084, %1085, %1086)
  };
  %1087(%var_14811, %var_14812) /* ty=(Tensor[(8, 6, 4), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_10338() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1088 = @func_4461() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1089 = @func_4954() /* ty=Tensor[(6, 9, 15), float64] */;
  %1090 = %1088.1;
  (%1089, %1090)
}

def @func_15639() -> (Tensor[(6, 9, 15), float64],) {
  %1091 = @func_12881() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1092 = %1091.0;
  (%1092,)
}

def @func_15064() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %1099 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
    %1093 = @func_6282() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
    %1094 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1095 = @func_6569() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %1096 = %1093.0;
    %1097 = %1094.3;
    %1098 = %1095.0;
    (%1096, %1097, %1098)
  };
  %1099() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */
}

def @func_8103() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int32) {
  @func_8101() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int32) */
}

def @func_17950() -> Tensor[(6, 9, 15), float64] {
  @func_3047() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_3149(%var_3148: Tensor[(396), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(91, 7), uint32], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), float64], Tensor[(16, 16, 10), float32], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) {
  %1120 = fn (%var_3139: Tensor[(396), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(91, 7), uint32], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), float64], Tensor[(16, 16, 10), float32], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) {
    %1100 = @func_2887() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1101 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1102 = cast(meta[relay.Constant][57] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %1103 = cast(meta[relay.Constant][56] /* ty=Tensor[(91, 7), uint32] */, dtype="uint32") /* ty=Tensor[(91, 7), uint32] */;
    %1104 = reshape(%1102, newshape=[]) /* ty=int8 */;
    %1105 = reshape(%1103, newshape=[637]) /* ty=Tensor[(637), uint32] */;
    %1106 = @func_2212(%1104, %1105) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(1050, 637), int16], Tensor[(1050, 637), bool], Tensor[(6, 9, 15), float64]) */;
    %1107 = %1106.1;
    %1108 = cast(%1107, dtype="float64") /* ty=Tensor[(16, 16, 10), float64] */;
    %1109 = cast(meta[relay.Constant][57] /* ty=int8 */, dtype="float64") /* ty=float64 */;
    %1110 = cast(%1107, dtype="float32") /* ty=Tensor[(16, 16, 10), float32] */;
    %1111 = cast(%var_3139, dtype="float32") /* ty=Tensor[(396), float32] */;
    %1112 = reshape(%1111, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
    %1113 = @func_552(%1112) /* ty=(Tensor[(3, 11, 12), uint32],) */;
    %1114 = %1100.0;
    %1115 = %1101.0;
    %1116 = floor_mod(%1108, %1109) /* ty=Tensor[(16, 16, 10), float64] */;
    %1117 = sigmoid(%1110) /* ty=Tensor[(16, 16, 10), float32] */;
    %1118 = %1113.0;
    %1119 = @func_1808() /* ty=Tensor[(6, 9, 15), float64] */;
    (%1114, meta[relay.Constant][56] /* ty=Tensor[(91, 7), uint32] */, %1115, %1116, %1117, %1118, %var_3139, %1119)
  };
  %1120(%var_3148) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(91, 7), uint32], Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), float64], Tensor[(16, 16, 10), float32], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */
}

def @func_18681() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1128 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %1121 = @func_6806() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1122 = @func_2887() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1123 = @func_16462() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1124 = @func_16322() /* ty=Tensor[(6, 9, 15), float64] */;
    %1125 = %1121.0;
    %1126 = %1122.0;
    %1127 = %1123.0;
    (%1124, %1125, %1126, %1127)
  };
  %1128() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_12708(%var_12706: Tensor[(13, 1, 8), float32]) -> Tensor[(13, 1, 8), float32] {
  @func_12705(%var_12706) /* ty=Tensor[(13, 1, 8), float32] */
}

def @func_4552(%var_4551: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(1050), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) {
  %1143 = fn (%var_4541: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(1050), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) {
    %1129 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1130 = cast(meta[relay.Constant][58] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %1131 = cast(%var_4541, dtype="uint32") /* ty=Tensor[(637), uint32] */;
    %1132 = reshape(%1130, newshape=[]) /* ty=int8 */;
    %1133 = reshape(%1131, newshape=[637]) /* ty=Tensor[(637), uint32] */;
    %1134 = @func_2123(%1132, %1133) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
    %1135 = cast(meta[relay.Constant][58] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %1136 = cast(%var_4541, dtype="uint32") /* ty=Tensor[(637), uint32] */;
    %1137 = reshape(%1135, newshape=[]) /* ty=int8 */;
    %1138 = reshape(%1136, newshape=[637]) /* ty=Tensor[(637), uint32] */;
    %1139 = @func_2123(%1137, %1138) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
    %1140 = %1129.0;
    %1141 = %1134.4;
    %1142 = %1139.4;
    (%1140, %1141, meta[relay.Constant][58] /* ty=int8 */, %var_4541, %1142)
  };
  %1143(%var_4551) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(1050), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */
}

def @func_1581(%var_1580: uint32) -> (Tensor[(9, 12, 14), bool],) {
  %1147 = fn (%var_1563: uint32) -> (Tensor[(9, 12, 14), bool],) {
    %1144 = cast(%var_1563, dtype="bool") /* ty=bool */;
    %1145 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 12, 14), uint32] */, dtype="bool") /* ty=Tensor[(9, 12, 14), bool] */;
    %1146 = greater_equal(%1144, %1145) /* ty=Tensor[(9, 12, 14), bool] */;
    (%1146,)
  };
  %1147(%var_1580) /* ty=(Tensor[(9, 12, 14), bool],) */
}

def @func_10527() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_10525() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_16135() -> (Tensor[(6, 9, 15), float64],) {
  @func_16133() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_3999() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) {
  %1148 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1149 = cast(meta[relay.Constant][60] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1150 = reshape(%1149, newshape=[]) /* ty=int8 */;
  %1151 = @func_3800(%1150) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, int8, Tensor[(396), float32]) */;
  %1152 = %1148.0;
  %1153 = %1151.1;
  %1154 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1152, %1153, meta[relay.Constant][60] /* ty=int8 */, %1154)
}

def @func_14354() -> (Tensor[(6, 9, 15), float64],) {
  %1155 = @func_14142() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(637), uint32], int8, Tensor[(1, 637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float64]) */;
  %1156 = %1155.4;
  (%1156,)
}

def @func_9604() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_9602() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_18114() -> (Tensor[(6, 9, 15), float32],) {
  @func_18112() /* ty=(Tensor[(6, 9, 15), float32],) */
}

def @func_7859() -> Tensor[(6, 9, 15), float64] {
  @func_7857() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_17848() -> (Tensor[(6, 9, 15), float64],) {
  @func_17846() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_7039() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), bool]) {
  %1163 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), bool]) {
    %1157 = @func_2887() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1158 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1159 = @func_2841() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
    %1160 = %1157.0;
    %1161 = %1158.0;
    %1162 = %1159.0;
    (%1160, %1161, %1162)
  };
  %1163() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), bool]) */
}

def @main(%var_18706: Tensor[(15, 16, 6), float64], %var_18711: Tensor[(15, 16, 6), float64]) -> (Tensor[(15, 16, 6), int32], Tensor[(15, 16, 6), float32]) {
  %1164 = @func_10290() /* ty=Tensor[(15, 16, 6), float64] */;
  %1165 = cast(%var_18706, dtype="int32") /* ty=Tensor[(15, 16, 6), int32] */;
  %1166 = shape_of(%1164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1167 = cast(%1164, dtype="int32") /* ty=Tensor[(15, 16, 6), int32] */;
  %1168 = dyn.reshape(%1165, %1166, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1169 = cast(%var_18711, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %1170 = shape_of(%var_18706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1171 = cast(%var_18706, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1173 = minimum(%1167, %1168) /* ty=Tensor[(15, 16, 6), int32] */;
  %1174 = floor_mod(%1171, %1172) /* ty=Tensor[(15, 16, 6), float32] */;
  (%1173, %1174)
}

def @func_11769() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1175 = @func_5126() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1176 = @func_5300() /* ty=Tensor[(6, 9, 15), float32] */;
  %1177 = @func_6215() /* ty=Tensor[(6, 9, 15), float64] */;
  %1178 = %1175.0;
  (%1176, %1177, %1178)
}

def @func_5980() -> (Tensor[(6, 9, 15), float64],) {
  @func_5978() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_13938() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1184 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %1179 = @func_9082() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1180 = @func_5026() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1181 = %1179.0;
    %1182 = %1180.0;
    %1183 = @func_12525() /* ty=Tensor[(6, 9, 15), float64] */;
    (%1181, %1182, %1183)
  };
  %1184() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_5515() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) {
  @func_5513() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */
}

def @func_14925() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) {
  %1185 = @func_7310() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1186 = @func_6044() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1187 = cast(meta[relay.Constant][61] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1188 = cast(meta[relay.Constant][62] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1189 = reshape(%1187, newshape=[]) /* ty=int8 */;
  %1190 = reshape(%1188, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
  %1191 = @func_9483(%1189, %1190) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(1, 637), uint32]) */;
  %1192 = %1185.0;
  %1193 = %1186.0;
  %1194 = %1191.0;
  (%1192, %1193, %1194, meta[relay.Constant][61] /* ty=int8 */, meta[relay.Constant][62] /* ty=Tensor[(637), uint32] */)
}

def @func_16038(%var_16016: Tensor[(11, 9, 6), uint16]) -> (Tensor[(11, 9, 6), float64], Tensor[(6, 9, 15), float64]) {
  %1195 = cast(%var_16016, dtype="uint16") /* ty=Tensor[(11, 9, 6), uint16] */;
  %1196 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(11, 9, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1197 = cast(meta[relay.Constant][63] /* ty=Tensor[(11, 9, 6), uint16] */, dtype="uint16") /* ty=Tensor[(11, 9, 6), uint16] */;
  %1198 = dyn.reshape(%1195, %1196, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1199 = maximum(%1197, %1198) /* ty=Tensor[(11, 9, 6), uint16] */;
  %1200 = cast(%1199, dtype="float64") /* ty=Tensor[(11, 9, 6), float64] */;
  %1201 = @func_13134() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1202 = asinh(%1200) /* ty=Tensor[(11, 9, 6), float64] */;
  %1203 = %1201.0;
  (%1202, %1203)
}

def @func_920(%var_917: int8, %var_918: Tensor[(16, 16, 10), int8], %var_919: Tensor[(1, 637), uint32]) -> (Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) {
  %1211 = fn (%var_904: int8, %var_905: Tensor[(16, 16, 10), int8], %var_913: Tensor[(1, 637), uint32]) -> (Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) {
    %1204 = cast(%var_904, dtype="bool") /* ty=bool */;
    %1205 = cast(%var_905, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
    %1206 = cast(%var_913, dtype="uint32") /* ty=Tensor[(1, 637), uint32] */;
    %1207 = reshape(%1206, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), uint32] */;
    %1208 = @func_872(%1207) /* ty=(Tensor[(7, 13, 7), bool],) */;
    %1209 = equal(%1204, %1205) /* ty=Tensor[(16, 16, 10), bool] */;
    %1210 = %1208.0;
    (%1209, %1210, %var_913)
  };
  %1211(%var_917, %var_918, %var_919) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) */
}

def @func_14887() -> (Tensor[(6, 9, 15), float64],) {
  %1212 = @func_6124() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1213 = %1212.0;
  (%1213,)
}

def @func_874(%var_873: Tensor[(7, 13, 7), uint32]) -> (Tensor[(7, 13, 7), bool],) {
  %1219 = fn (%var_867: Tensor[(7, 13, 7), uint32]) -> (Tensor[(7, 13, 7), bool],) {
    %1214 = cast(meta[relay.Constant][64] /* ty=Tensor[(7, 13, 7), uint32] */, dtype="bool") /* ty=Tensor[(7, 13, 7), bool] */;
    %1215 = shape_of(%var_867, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1216 = cast(%var_867, dtype="bool") /* ty=Tensor[(7, 13, 7), bool] */;
    %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1218 = less(%1216, %1217) /* ty=Tensor[(7, 13, 7), bool] */;
    (%1218,)
  };
  %1219(%var_873) /* ty=(Tensor[(7, 13, 7), bool],) */
}

def @func_4341() -> (Tensor[(6, 9, 15), float32],) {
  %1222 = fn () -> (Tensor[(6, 9, 15), float32],) {
    %1220 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %1221 = %1220.0;
    (%1221,)
  };
  %1222() /* ty=(Tensor[(6, 9, 15), float32],) */
}

def @func_3185() -> (Tensor[(6, 9, 15), bool],) {
  %1223 = @func_2841() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
  %1224 = %1223.0;
  (%1224,)
}

def @func_9669(%var_9667: Tensor[(396), float32], %var_9668: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], uint32, uint32, Tensor[(3, 11, 12), uint32], Tensor[(396), float32], int8, Tensor[(637), uint32], Tensor[(1050), float64]) {
  @func_9665(%var_9667, %var_9668) /* ty=(Tensor[(6, 9, 15), float64], uint32, uint32, Tensor[(3, 11, 12), uint32], Tensor[(396), float32], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */
}

def @func_6189() -> (Tensor[(6, 9, 15), float64],) {
  %1226 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %1225 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
    (%1225,)
  };
  %1226() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_13541() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1227 = @func_13297() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1228 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1229 = %1227.0;
  %1230 = %1228.1;
  (%1229, %1230)
}

def @func_14237() -> Tensor[(6, 9, 15), float64] {
  @func_14235() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_4421() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_4419() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_8497() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1231 = @func_5564() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
  %1232 = %1231.1;
  %1233 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1232, %1233)
}

def @func_1513(%var_1493: int8, %var_1495: Tensor[(637), uint32], %var_1511: Tensor[(1050), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) {
  %1234 = cast(meta[relay.Constant][65] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1235 = reshape(%1234, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %1236 = @func_552(%1235) /* ty=(Tensor[(3, 11, 12), uint32],) */;
  %1237 = cast(%var_1493, dtype="int8") /* ty=int8 */;
  %1238 = cast(meta[relay.Constant][66] /* ty=Tensor[(2560), int8] */, dtype="int8") /* ty=Tensor[(2560), int8] */;
  %1239 = cast(%var_1495, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1240 = reshape(%1237, newshape=[]) /* ty=int8 */;
  %1241 = reshape(%1238, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int8] */;
  %1242 = reshape(%1239, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
  %1243 = @func_916(%1240, %1241, %1242) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) */;
  %1244 = cast(%var_1511, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1245 = cast(meta[relay.Constant][65] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1246 = reshape(%1244, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %1247 = reshape(%1245, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %1248 = @func_704(%1246, %1247) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */;
  %1249 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %1250 = %1236.0;
  %1251 = %1243.0;
  %1252 = %1248.1;
  (%1249, %1250, meta[relay.Constant][65] /* ty=Tensor[(396), float32] */, %1251, %var_1493, meta[relay.Constant][66] /* ty=Tensor[(2560), int8] */, %var_1495, %1252, %var_1511)
}

def @func_4383(%var_4382: int32) -> (Tensor[(16, 6, 13), int32],) {
  %1256 = fn (%var_4360: int32) -> (Tensor[(16, 6, 13), int32],) {
    %1253 = cast(%var_4360, dtype="int32") /* ty=int32 */;
    %1254 = cast(meta[relay.Constant][67] /* ty=Tensor[(16, 6, 13), int32] */, dtype="int32") /* ty=Tensor[(16, 6, 13), int32] */;
    %1255 = right_shift(%1253, %1254) /* ty=Tensor[(16, 6, 13), int32] */;
    (%1255,)
  };
  %1256(%var_4382) /* ty=(Tensor[(16, 6, 13), int32],) */
}

def @func_8244(%var_8242: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(75), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), bool]) {
  @func_8241(%var_8242) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(75), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), bool]) */
}

def @func_7345() -> Tensor[(6, 9, 15), float64] {
  %1257 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_6431() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %1257() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_14380() -> Tensor[(6, 9, 15), float64] {
  @func_14378() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_12027() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_12025() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_8367() -> Tensor[(6, 9, 15), float64] {
  %1258 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1258.1
}

def @func_12008(%var_12007: Tensor[(10, 1, 4), float64]) -> Tensor[(10, 1, 4), float64] {
  %1260 = fn (%var_12001: Tensor[(10, 1, 4), float64]) -> Tensor[(10, 1, 4), float64] {
    %1259 = cast(%var_12001, dtype="float64") /* ty=Tensor[(10, 1, 4), float64] */;
    log(%1259) /* ty=Tensor[(10, 1, 4), float64] */
  };
  %1260(%var_12007) /* ty=Tensor[(10, 1, 4), float64] */
}

def @func_13338() -> (Tensor[(6, 9, 15), float32],) {
  @func_13336() /* ty=(Tensor[(6, 9, 15), float32],) */
}

def @func_12157() -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64]) {
  %1265 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64]) {
    %1261 = @func_6974() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1262 = %1261.0;
    %1263 = @func_10381() /* ty=Tensor[(11, ?, 10), float64] */;
    %1264 = @func_8447() /* ty=Tensor[(6, 9, 15), float64] */;
    (%1262, %1263, %1264)
  };
  %1265() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_16578() -> (Tensor[(6, 9, 15), float64],) {
  @func_16576() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_17050() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1266 = @func_14354() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1267 = @func_13134() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1268 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1269 = @func_13565() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1270 = %1266.0;
  %1271 = %1267.0;
  %1272 = %1268.0;
  %1273 = %1269.0;
  (%1270, %1271, %1272, %1273)
}

def @func_11482() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1274 = @func_6894() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
  %1275 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1276 = @func_9724() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1277 = %1274.3;
  %1278 = @func_9551() /* ty=Tensor[(6, 9, 15), float64] */;
  %1279 = %1275.0;
  %1280 = %1276.0;
  (%1277, %1278, %1279, %1280)
}

def @func_6975() -> (Tensor[(6, 9, 15), float64],) {
  %1283 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %1281 = @func_6352() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1282 = %1281.0;
    (%1282,)
  };
  %1283() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_10735(%var_10720: Tensor[(9, 3, 16), float32], %var_10728: int8) -> (Tensor[(9, 3, 16), float32], int8, int8) {
  %1284 = cast(%var_10720, dtype="float32") /* ty=Tensor[(9, 3, 16), float32] */;
  %1285 = cast(%var_10728, dtype="int8") /* ty=int8 */;
  %1286 = reshape(%1285, newshape=[]) /* ty=int8 */;
  %1287 = @func_3681(%1286) /* ty=(Tensor[(6, 9, 15), bool], int8, Tensor[(637), uint32], Tensor[(10, 2, 11), float64], Tensor[(6, 9, 15), float32]) */;
  %1288 = atanh(%1284) /* ty=Tensor[(9, 3, 16), float32] */;
  %1289 = %1287.1;
  (%1288, %1289, %var_10728)
}

def @func_6624(%var_6622: int8, %var_6623: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) {
  %1298 = fn (%var_6618: int8, %var_6619: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) {
    %1290 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1291 = cast(%var_6618, dtype="int8") /* ty=int8 */;
    %1292 = cast(%var_6619, dtype="uint32") /* ty=Tensor[(637), uint32] */;
    %1293 = reshape(%1291, newshape=[]) /* ty=int8 */;
    %1294 = reshape(%1292, newshape=[637]) /* ty=Tensor[(637), uint32] */;
    %1295 = @func_2212(%1293, %1294) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(1050, 637), int16], Tensor[(1050, 637), bool], Tensor[(6, 9, 15), float64]) */;
    %1296 = %1290.0;
    %1297 = %1295.0;
    (%1296, %1297, %var_6618, %var_6619)
  };
  %1298(%var_6622, %var_6623) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */
}

def @func_7628() -> Tensor[(6, 9, 15), float64] {
  %1299 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_7344() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %1299() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_17108() -> (Tensor[(6, 9, 15), float64],) {
  @func_17106() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_17452() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1303 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %1300 = @func_16264() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64]) */;
    %1301 = @func_7705() /* ty=Tensor[(6, 9, 15), float64] */;
    %1302 = %1300.1;
    (%1301, %1302)
  };
  %1303() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_15387() -> Tensor[(6, 9, 15), float64] {
  @func_15385() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_5546(%var_5543: int8, %var_5544: Tensor[(2560), int8], %var_5545: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) {
  %1316 = fn (%var_5522: int8, %var_5523: Tensor[(2560), int8], %var_5524: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) {
    %1304 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1305 = cast(%var_5522, dtype="int8") /* ty=int8 */;
    %1306 = cast(%var_5523, dtype="int8") /* ty=Tensor[(2560), int8] */;
    %1307 = cast(%var_5524, dtype="uint32") /* ty=Tensor[(637), uint32] */;
    %1308 = reshape(%1305, newshape=[]) /* ty=int8 */;
    %1309 = reshape(%1306, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), int8] */;
    %1310 = reshape(%1307, newshape=[1, 637]) /* ty=Tensor[(1, 637), uint32] */;
    %1311 = @func_916(%1308, %1309, %1310) /* ty=(Tensor[(16, 16, 10), bool], Tensor[(7, 13, 7), bool], Tensor[(1, 637), uint32]) */;
    %1312 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1313 = %1304.0;
    %1314 = %1311.0;
    %1315 = %1312.0;
    (%1313, %1314, %var_5522, %var_5523, %var_5524, %1315)
  };
  %1316(%var_5543, %var_5544, %var_5545) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) */
}

def @func_16419() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(15, ?, 5), bool], Tensor[(75), int32]) {
  %1324 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(15, ?, 5), bool], Tensor[(75), int32]) {
    %1317 = @func_12025() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1318 = cast(meta[relay.Constant][68] /* ty=Tensor[(75), int32] */, dtype="int32") /* ty=Tensor[(75), int32] */;
    %1319 = reshape(%1318, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), int32] */;
    %1320 = @func_2052(%1319) /* ty=(Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) */;
    %1321 = %1317.1;
    %1322 = @func_10555() /* ty=Tensor[(6, 9, 15), float32] */;
    %1323 = %1320.0;
    (%1321, %1322, %1323, meta[relay.Constant][68] /* ty=Tensor[(75), int32] */)
  };
  %1324() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(15, ?, 5), bool], Tensor[(75), int32]) */
}

def @func_17518() -> (Tensor[(6, 9, 15), float64],) {
  %1327 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %1325 = @func_16576() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1326 = %1325.0;
    (%1326,)
  };
  %1327() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_2570() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  %1332 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
    %1328 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %1329 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
    %1330 = @func_1808() /* ty=Tensor[(6, 9, 15), float64] */;
    %1331 = %1328.0;
    (%1329, %1330, %1331)
  };
  %1332() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */
}

def @func_7706() -> Tensor[(6, 9, 15), float64] {
  %1333 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_1914() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %1333() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_7311() -> (Tensor[(6, 9, 15), float64],) {
  %1336 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %1334 = @func_5467() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1335 = %1334.0;
    (%1335,)
  };
  %1336() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_13108() -> (Tensor[(6, 9, 15), float64],) {
  %1339 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %1337 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1338 = %1337.0;
    (%1338,)
  };
  %1339() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_4058(%var_4056: Tensor[(2, 11, 4), float64]) -> (Tensor[(2, 11, 4), float64], Tensor[(6, 9, 15), float64]) {
  @func_4055(%var_4056) /* ty=(Tensor[(2, 11, 4), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_10627() -> Tensor[(6, 9, 15), float64] {
  @func_8447() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_5301() -> Tensor[(6, 9, 15), float32] {
  %1341 = fn () -> Tensor[(6, 9, 15), float32] {
    %1340 = @func_3809() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %1340.0
  };
  %1341() /* ty=Tensor[(6, 9, 15), float32] */
}

def @func_17796() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_17794() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_10070(%var_10069: Tensor[(11, 13, 10), int8]) -> (Tensor[(11, 13, 10), uint64], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(16, 6, 13), int32], int32) {
  %1357 = fn (%var_10038: Tensor[(11, 13, 10), int8]) -> (Tensor[(11, 13, 10), uint64], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(16, 6, 13), int32], int32) {
    %1342 = @func_8395() /* ty=(Tensor[(11, ?, 10), int8],) */;
    %1343 = %1342.0;
    %1344 = cast(%1343, dtype="uint64") /* ty=Tensor[(11, ?, 10), uint64] */;
    %1345 = cast(%var_10038, dtype="uint64") /* ty=Tensor[(11, 13, 10), uint64] */;
    %1346 = @func_8704() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], bool, Tensor[(75), bool], Tensor[(6, 9, 15), float64]) */;
    %1347 = @func_7807() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %1348 = cast(4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %1349 = reshape(%1348, newshape=[]) /* ty=int32 */;
    %1350 = @func_4381(%1349) /* ty=(Tensor[(16, 6, 13), int32],) */;
    %1351 = multiply(%1344, %1345) /* ty=Tensor[(11, 13, 10), uint64] */;
    %1352 = %1346.1;
    %1353 = @func_3047() /* ty=Tensor[(6, 9, 15), float64] */;
    %1354 = @func_6329() /* ty=Tensor[(6, 9, 15), float64] */;
    %1355 = %1347.0;
    %1356 = %1350.0;
    (%1351, %1352, %1353, %1354, %1355, %1356, 4 /* ty=int32 */)
  };
  %1357(%var_10069) /* ty=(Tensor[(11, 13, 10), uint64], Tensor[(75), int32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(16, 6, 13), int32], int32) */
}

def @func_12109() -> (Tensor[(1050), float64],) {
  %1358 = @func_11982() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(1050), float64], Tensor[(637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
  %1359 = %1358.1;
  (%1359,)
}

def @func_12313() -> (Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64]) {
  @func_12311() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64]) */
}

def @func_16541() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  @func_16539() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */
}

def @func_14678(%var_14656: Tensor[(15, 10, 16), float32]) -> (Tensor[(15, 10, 16), float64],) {
  %1360 = cast(%var_14656, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
  %1361 = atan(%1360) /* ty=Tensor[(15, 10, 16), float32] */;
  %1362 = cast(%1361, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %1363 = log2(%1362) /* ty=Tensor[(15, 10, 16), float64] */;
  (%1363,)
}

def @func_15043() -> Tensor[(6, 9, 15), float64] {
  %1364 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_6078() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %1364() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_18048() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1369 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %1365 = @func_11288() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1366 = @func_8599() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1367 = %1365.0;
    %1368 = %1366.0;
    (%1367, %1368)
  };
  %1369() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_16576() -> (Tensor[(6, 9, 15), float64],) {
  %1370 = @func_3431() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1370,)
}

def @func_6216() -> Tensor[(6, 9, 15), float64] {
  %1372 = fn () -> Tensor[(6, 9, 15), float64] {
    %1371 = @func_2841() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
    %1371.1
  };
  %1372() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_11170() -> Tensor[(6, 9, 15), float64] {
  %1373 = @func_5467() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1373.0
}

def @func_6046() -> (Tensor[(6, 9, 15), float32],) {
  @func_6044() /* ty=(Tensor[(6, 9, 15), float32],) */
}

def @func_5359() -> Tensor[(6, 9, 15), float32] {
  %1375 = fn () -> Tensor[(6, 9, 15), float32] {
    %1374 = @func_4340() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %1374.0
  };
  %1375() /* ty=Tensor[(6, 9, 15), float32] */
}

def @func_10383() -> Tensor[(11, ?, 10), float64] {
  @func_10381() /* ty=Tensor[(11, ?, 10), float64] */
}

def @func_5027() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1382 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %1376 = @func_3574() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1377 = @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1378 = %1376.0;
    %1379 = %1377.0;
    %1380 = @func_3047() /* ty=Tensor[(6, 9, 15), float64] */;
    %1381 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
    (%1378, %1379, %1380, %1381)
  };
  %1382() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_8704() -> (Tensor[(6, 9, 15), float64], Tensor[(75), int32], bool, Tensor[(75), bool], Tensor[(6, 9, 15), float64]) {
  %1383 = @func_5126() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1384 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1385 = cast(meta[relay.Constant][69] /* ty=Tensor[(75), bool] */, dtype="bool") /* ty=Tensor[(75), bool] */;
  %1386 = reshape(%1384, newshape=[]) /* ty=bool */;
  %1387 = reshape(%1385, newshape=[1, 15, 5]) /* ty=Tensor[(1, 15, 5), bool] */;
  %1388 = @func_7197(%1386, %1387) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(75), int32], Tensor[(1, 15, 5), float32]) */;
  %1389 = @func_4461() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1390 = %1383.0;
  %1391 = %1388.1;
  %1392 = %1389.1;
  (%1390, %1391, False /* ty=bool */, meta[relay.Constant][69] /* ty=Tensor[(75), bool] */, %1392)
}

def @func_11956() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1401 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %1393 = @func_11230() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1394 = @func_5467() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1395 = @func_7310() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1396 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1397 = %1393.0;
    %1398 = %1394.0;
    %1399 = %1395.0;
    %1400 = %1396.0;
    (%1397, %1398, %1399, %1400)
  };
  %1401() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_2216(%var_2214: int8, %var_2215: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(1050, 637), int16], Tensor[(1050, 637), bool], Tensor[(6, 9, 15), float64]) {
  @func_2212(%var_2214, %var_2215) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 16, 10), bool], int8, Tensor[(1050, 637), int16], Tensor[(1050, 637), bool], Tensor[(6, 9, 15), float64]) */
}

def @func_13135() -> (Tensor[(6, 9, 15), float64],) {
  %1403 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %1402 = @func_1769() /* ty=Tensor[(6, 9, 15), float64] */;
    (%1402,)
  };
  %1403() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_13601(%var_13591: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(6, 9, 15), float64]) {
  %1404 = @func_3482() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1405 = cast(%var_13591, dtype="int8") /* ty=int8 */;
  %1406 = cast(meta[relay.Constant][70] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1407 = reshape(%1405, newshape=[]) /* ty=int8 */;
  %1408 = reshape(%1406, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %1409 = @func_10608(%1407, %1408) /* ty=(Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(637), uint8]) */;
  %1410 = cast(%var_13591, dtype="int8") /* ty=int8 */;
  %1411 = reshape(%1410, newshape=[]) /* ty=int8 */;
  %1412 = @func_1976(%1411) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32]) */;
  %1413 = %1404.0;
  %1414 = %1409.1;
  %1415 = %1412.0;
  (%1413, %1414, %var_13591, meta[relay.Constant][70] /* ty=Tensor[(637), uint32] */, %1415)
}

def @func_14143() -> (Tensor[(6, 9, 15), bool], Tensor[(637), uint32], int8, Tensor[(1, 637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float64]) {
  %1430 = fn () -> (Tensor[(6, 9, 15), bool], Tensor[(637), uint32], int8, Tensor[(1, 637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float64]) {
    %1416 = @func_3185() /* ty=(Tensor[(6, 9, 15), bool],) */;
    %1417 = cast(meta[relay.Constant][71] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %1418 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 637), uint32] */, dtype="uint32") /* ty=Tensor[(1, 637), uint32] */;
    %1419 = reshape(%1417, newshape=[]) /* ty=int8 */;
    %1420 = reshape(%1418, newshape=[637]) /* ty=Tensor[(637), uint32] */;
    %1421 = @func_6621(%1419, %1420) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */;
    %1422 = @func_4692() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1423 = @func_5564() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
    %1424 = @func_8584() /* ty=(Tensor[(396), float64], Tensor[(6, 9, 15), float64]) */;
    %1425 = %1416.0;
    %1426 = %1421.3;
    %1427 = %1422.0;
    %1428 = %1423.1;
    %1429 = %1424.0;
    (%1425, %1426, meta[relay.Constant][71] /* ty=int8 */, meta[relay.Constant][72] /* ty=Tensor[(1, 637), uint32] */, %1427, %1428, %1429)
  };
  %1430() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(637), uint32], int8, Tensor[(1, 637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float64]) */
}

def @func_13390() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1435 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %1431 = @func_11230() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1432 = @func_3999() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
    %1433 = %1431.1;
    %1434 = %1432.3;
    (%1433, %1434)
  };
  %1435() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_6331() -> Tensor[(6, 9, 15), float64] {
  @func_6329() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_8101() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int32) {
  %1436 = @func_4602() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1437 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1438 = reshape(%1437, newshape=[]) /* ty=int32 */;
  %1439 = @func_7589(%1438) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(16, 6, 13), int32], int32, Tensor[(6, 9, 15), float64]) */;
  %1440 = %1436.0;
  %1441 = %1439.0;
  (%1440, %1441, -2 /* ty=int32 */)
}

def @func_4301() -> Tensor[(6, 9, 15), float64] {
  %1443 = fn () -> Tensor[(6, 9, 15), float64] {
    %1442 = @func_2841() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */;
    %1442.1
  };
  %1443() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_2888() -> (Tensor[(6, 9, 15), float64],) {
  %1446 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %1444 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1445 = %1444.0;
    (%1445,)
  };
  %1446() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_5566() -> (Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) {
  @func_5564() /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64]) */
}

def @func_7160() -> (Tensor[(6, 9, 15), float64], Tensor[(1050), float64], Tensor[(1, 637), uint32]) {
  %1452 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(1050), float64], Tensor[(1, 637), uint32]) {
    %1447 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 637), uint32] */, dtype="uint32") /* ty=Tensor[(1, 637), uint32] */;
    %1448 = reshape(%1447, newshape=[637]) /* ty=Tensor[(637), uint32] */;
    %1449 = @func_4550(%1448) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(1050), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
    %1450 = @func_3047() /* ty=Tensor[(6, 9, 15), float64] */;
    %1451 = %1449.1;
    (%1450, %1451, meta[relay.Constant][73] /* ty=Tensor[(1, 637), uint32] */)
  };
  %1452() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(1050), float64], Tensor[(1, 637), uint32]) */
}

def @func_9083() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1456 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %1453 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1454 = %1453.0;
    %1455 = @func_3431() /* ty=Tensor[(6, 9, 15), float64] */;
    (%1454, %1455)
  };
  %1456() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_12347() -> (Tensor[(1050), uint16], Tensor[(6, 9, 15), float64]) {
  @func_12345() /* ty=(Tensor[(1050), uint16], Tensor[(6, 9, 15), float64]) */
}

def @func_3047() -> Tensor[(6, 9, 15), float64] {
  %1457 = @func_2632() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1457.1
}

def @func_2126(%var_2124: int8, %var_2125: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) {
  %1473 = fn (%var_2110: int8, %var_2111: Tensor[(637), uint32]) -> (Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) {
    %1458 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1459 = %1458.0;
    %1460 = cast(meta[relay.Constant][74] /* ty=Tensor[(6, 9, 15), float64] */, dtype="bool") /* ty=Tensor[(6, 9, 15), bool] */;
    %1461 = shape_of(%1459, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1462 = cast(%1459, dtype="bool") /* ty=Tensor[(6, 9, 15), bool] */;
    %1463 = dyn.reshape(%1460, %1461, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1464 = cast(%var_2110, dtype="int8") /* ty=int8 */;
    %1465 = cast(%var_2111, dtype="uint32") /* ty=Tensor[(637), uint32] */;
    %1466 = cast(meta[relay.Constant][75] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %1467 = reshape(%1464, newshape=[]) /* ty=int8 */;
    %1468 = reshape(%1465, newshape=[637]) /* ty=Tensor[(637), uint32] */;
    %1469 = reshape(%1466, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
    %1470 = @func_1513(%1467, %1468, %1469) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(3, 11, 12), uint32], Tensor[(396), float32], Tensor[(16, 16, 10), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32], Tensor[(5, 14, 15), uint16], Tensor[(1050), float64]) */;
    %1471 = less_equal(%1462, %1463) /* ty=Tensor[(6, 9, 15), bool] */;
    %1472 = %1470.0;
    (%1471, %1472, %var_2110, %var_2111, meta[relay.Constant][75] /* ty=Tensor[(1050), float64] */)
  };
  %1473(%var_2124, %var_2125) /* ty=(Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */
}

def @func_12923() -> (Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], Tensor[(637, 1), uint32], Tensor[(6, 9, 15), float64]) {
  %1474 = cast(meta[relay.Constant][76] /* ty=Tensor[(637, 1), uint32] */, dtype="uint32") /* ty=Tensor[(637, 1), uint32] */;
  %1475 = reshape(%1474, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), uint32] */;
  %1476 = @func_872(%1475) /* ty=(Tensor[(7, 13, 7), bool],) */;
  %1477 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1478 = @func_7627() /* ty=Tensor[(6, 9, 15), float64] */;
  %1479 = %1476.0;
  %1480 = %1477.1;
  (%1478, %1479, meta[relay.Constant][76] /* ty=Tensor[(637, 1), uint32] */, %1480)
}

def @func_707(%var_705: Tensor[(5, 14, 15), float64], %var_706: Tensor[(396), float32]) -> (Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) {
  %1492 = fn (%var_677: Tensor[(5, 14, 15), float64], %var_687: Tensor[(396), float32]) -> (Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) {
    %1481 = cast(meta[relay.Constant][77] /* ty=Tensor[(5, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
    %1482 = cast(%var_677, dtype="uint16") /* ty=Tensor[(5, 14, 15), uint16] */;
    %1483 = shape_of(meta[relay.Constant][77] /* ty=Tensor[(5, 14, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1484 = cast(meta[relay.Constant][77] /* ty=Tensor[(5, 14, 15), float64] */, dtype="uint16") /* ty=Tensor[(5, 14, 15), uint16] */;
    %1485 = dyn.reshape(%1482, %1483, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1486 = cast(%var_687, dtype="float32") /* ty=Tensor[(396), float32] */;
    %1487 = reshape(%1486, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
    %1488 = @func_552(%1487) /* ty=(Tensor[(3, 11, 12), uint32],) */;
    %1489 = sqrt(%1481) /* ty=Tensor[(5, 14, 15), float64] */;
    %1490 = logical_xor(%1484, %1485) /* ty=Tensor[(5, 14, 15), uint16] */;
    %1491 = %1488.0;
    (%1489, %1490, %1491, %var_687)
  };
  %1492(%var_705, %var_706) /* ty=(Tensor[(5, 14, 15), float64], Tensor[(5, 14, 15), uint16], Tensor[(3, 11, 12), uint32], Tensor[(396), float32]) */
}

def @func_15189() -> (Tensor[(6, 9, 15), float64],) {
  %1493 = @func_8917() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1494 = %1493.0;
  (%1494,)
}

def @func_14305() -> (Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), int8]) {
  @func_14303() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), int8]) */
}

def @func_8846() -> (Tensor[(6, 9, 15), float32],) {
  %1495 = @func_5300() /* ty=Tensor[(6, 9, 15), float32] */;
  (%1495,)
}

def @func_15325() -> (Tensor[(6, 9, 15), float64],) {
  %1496 = @func_9183() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1497 = %1496.2;
  (%1497,)
}

def @func_16463() -> (Tensor[(6, 9, 15), float64],) {
  %1500 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %1498 = @func_9724() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1499 = %1498.0;
    (%1499,)
  };
  %1500() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_8304(%var_8302: Tensor[(1024), int16]) -> (Tensor[(6, 9, 15), float32], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_8301(%var_8302) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_16158() -> (Tensor[(6, 9, 15), float64],) {
  %1503 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %1501 = @func_14303() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(11, ?, 10), int8]) */;
    %1502 = %1501.0;
    (%1502,)
  };
  %1503() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_2225() -> (Tensor[(6, 9, 15), float64],) {
  @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_7808() -> (Tensor[(6, 9, 15), float32],) {
  %1506 = fn () -> (Tensor[(6, 9, 15), float32],) {
    %1504 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
    %1505 = %1504.2;
    (%1505,)
  };
  %1506() /* ty=(Tensor[(6, 9, 15), float32],) */
}

def @func_1413() -> Tensor[(6, 9, 15), float64] {
  @func_1411() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_14889() -> (Tensor[(6, 9, 15), float64],) {
  @func_14887() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_17333() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(8, 8, 16), int16], Tensor[(1024), int16]) {
  %1507 = @func_14854() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1508 = cast(meta[relay.Constant][78] /* ty=Tensor[(1024), int16] */, dtype="int16") /* ty=Tensor[(1024), int16] */;
  %1509 = reshape(%1508, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), int16] */;
  %1510 = %1507.1;
  %1511 = @func_9303() /* ty=Tensor[(6, 9, 15), float64] */;
  %1512 = @func_12237() /* ty=Tensor[(6, 9, 15), float64] */;
  %1513 = @func_6547(%1509) /* ty=Tensor[(8, 8, 16), int16] */;
  (%1510, %1511, %1512, %1513, meta[relay.Constant][78] /* ty=Tensor[(1024), int16] */)
}

def @func_12764(%var_12763: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(9, 15, 2), int64], Tensor[(270), int64], Tensor[(396), float32], Tensor[(75), int32]) {
  %1527 = fn (%var_12759: Tensor[(75), int32]) -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(9, 15, 2), int64], Tensor[(270), int64], Tensor[(396), float32], Tensor[(75), int32]) {
    %1514 = @func_6044() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %1515 = @func_7137() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %1516 = cast(meta[relay.Constant][79] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
    %1517 = cast(meta[relay.Constant][80] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %1518 = cast(%var_12759, dtype="int32") /* ty=Tensor[(75), int32] */;
    %1519 = reshape(%1516, newshape=[9, 15, 2]) /* ty=Tensor[(9, 15, 2), int64] */;
    %1520 = reshape(%1517, newshape=[396]) /* ty=Tensor[(396), float32] */;
    %1521 = reshape(%1518, newshape=[75]) /* ty=Tensor[(75), int32] */;
    %1522 = @func_5832(%1519, %1520, %1521) /* ty=(Tensor[(9, 15, 2), int64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(6, 9, 15), float64], Tensor[(75), bool]) */;
    %1523 = %1514.0;
    %1524 = @func_7344() /* ty=Tensor[(6, 9, 15), float64] */;
    %1525 = %1515.0;
    %1526 = %1522.0;
    (%1523, %1524, %1525, %1526, meta[relay.Constant][79] /* ty=Tensor[(270), int64] */, meta[relay.Constant][80] /* ty=Tensor[(396), float32] */, %var_12759)
  };
  %1527(%var_12763) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(9, 15, 2), int64], Tensor[(270), int64], Tensor[(396), float32], Tensor[(75), int32]) */
}

def @func_4463() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_4461() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_13990() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) {
  @func_13988() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */
}

def @func_17846() -> (Tensor[(6, 9, 15), float64],) {
  %1528 = @func_14378() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1528,)
}

def @func_18323() -> (Tensor[(637), uint32],) {
  @func_18321() /* ty=(Tensor[(637), uint32],) */
}

def @func_1979(%var_1977: int8) -> (Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32]) {
  @func_1976(%var_1977) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], int8, Tensor[(2560), int8], Tensor[(637), uint32]) */
}

def @func_9834() -> (Tensor[(6, 9, 15), float64],) {
  %1531 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %1529 = @func_9082() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1530 = %1529.0;
    (%1530,)
  };
  %1531() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_17952() -> Tensor[(6, 9, 15), float64] {
  @func_17950() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_10525() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1532 = @func_9183() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1533 = @func_3728() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1534 = %1532.2;
  %1535 = %1533.0;
  (%1534, %1535)
}

def @func_6571() -> (Tensor[(6, 9, 15), float32],) {
  @func_6569() /* ty=(Tensor[(6, 9, 15), float32],) */
}

def @func_6162(%var_6160: int16, %var_6161: Tensor[(10, 4, 4), int16]) -> Tensor[(10, 4, 4), bool] {
  %1538 = fn (%var_6146: int16, %var_6147: Tensor[(10, 4, 4), int16]) -> Tensor[(10, 4, 4), bool] {
    %1536 = cast(%var_6146, dtype="bool") /* ty=bool */;
    %1537 = cast(%var_6147, dtype="bool") /* ty=Tensor[(10, 4, 4), bool] */;
    equal(%1536, %1537) /* ty=Tensor[(10, 4, 4), bool] */
  };
  %1538(%var_6160, %var_6161) /* ty=Tensor[(10, 4, 4), bool] */
}

def @func_8499() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_8497() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_12695(%var_12660: Tensor[(4, 7, 14), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(4, 7, 14), float64], Tensor[(6, 9, 15), bool], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1539 = @func_9732() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1540 = cast(%var_12660, dtype="float32") /* ty=Tensor[(4, 7, 14), float32] */;
  %1541 = sqrt(%1540) /* ty=Tensor[(4, 7, 14), float32] */;
  %1542 = cast(%1541, dtype="float64") /* ty=Tensor[(4, 7, 14), float64] */;
  %1543 = @func_8015() /* ty=(Tensor[(6, 9, 15), bool],) */;
  %1544 = @func_3838() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1545 = %1539.0;
  %1546 = cos(%1542) /* ty=Tensor[(4, 7, 14), float64] */;
  %1547 = %1543.0;
  %1548 = %1544.0;
  %1549 = @func_5069() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1545, %1546, %1547, %1548, %1549)
}

def @func_2959() -> (Tensor[(6, 9, 15), float64],) {
  @func_2957() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_11982() -> (Tensor[(6, 9, 15), float32], Tensor[(1050), float64], Tensor[(637), uint32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) {
  %1550 = @func_9914() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1551 = cast(meta[relay.Constant][81] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1552 = reshape(%1551, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %1553 = @func_4550(%1552) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(1050), float64], int8, Tensor[(637), uint32], Tensor[(1050), float64]) */;
  %1554 = @func_6974() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1555 = cast(meta[relay.Constant][82] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1556 = cast(meta[relay.Constant][81] /* ty=Tensor[(637), uint32] */, dtype="uint32") /* ty=Tensor[(637), uint32] */;
  %1557 = reshape(%1555, newshape=[]) /* ty=int8 */;
  %1558 = reshape(%1556, newshape=[637]) /* ty=Tensor[(637), uint32] */;
  %1559 = @func_10608(%1557, %1558) /* ty=(Tensor[(11, ?, 10), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(2, 11, 4), float64], Tensor[(88), float64], Tensor[(637), uint8]) */;
  %1560 = @func_8119() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1561 = %1550.0;
  %1562 = %1553.4;
  %1563 = %1554.0;
  %1564 = %1559.1;
  %1565 = %1560.0;
  (%1561, %1562, meta[relay.Constant][81] /* ty=Tensor[(637), uint32] */, %1563, %1564, meta[relay.Constant][82] /* ty=int8 */, %1565)
}

def @func_6461() -> Tensor[(6, 9, 15), float64] {
  %1566 = fn () -> Tensor[(6, 9, 15), float64] {
    @func_4258() /* ty=Tensor[(6, 9, 15), float64] */
  };
  %1566() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_11771() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_11769() /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_11698() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_11696() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_14927() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) {
  @func_14925() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], int8, Tensor[(637), uint32]) */
}

def @func_16188() -> (Tensor[(6, 9, 15), float64],) {
  %1567 = @func_2887() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1568 = %1567.0;
  (%1568,)
}

def @func_13322(%var_13321: Tensor[(13, 6, 11), int32]) -> (Tensor[(13, 6, 11), bool],) {
  %1579 = fn (%var_13304: Tensor[(13, 6, 11), int32]) -> (Tensor[(13, 6, 11), bool],) {
    %1569 = cast(meta[relay.Constant][83] /* ty=Tensor[(13, 6, 11), int32] */, dtype="int32") /* ty=Tensor[(13, 6, 11), int32] */;
    %1570 = shape_of(%var_13304, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1571 = cast(%var_13304, dtype="int32") /* ty=Tensor[(13, 6, 11), int32] */;
    %1572 = dyn.reshape(%1569, %1570, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1573 = bitwise_and(%1571, %1572) /* ty=Tensor[(13, 6, 11), int32] */;
    %1574 = cast(%1573, dtype="bool") /* ty=Tensor[(13, 6, 11), bool] */;
    %1575 = shape_of(meta[relay.Constant][83] /* ty=Tensor[(13, 6, 11), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1576 = cast(meta[relay.Constant][83] /* ty=Tensor[(13, 6, 11), int32] */, dtype="bool") /* ty=Tensor[(13, 6, 11), bool] */;
    %1577 = dyn.reshape(%1574, %1575, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1578 = less_equal(%1576, %1577) /* ty=Tensor[(13, 6, 11), bool] */;
    (%1578,)
  };
  %1579(%var_13321) /* ty=(Tensor[(13, 6, 11), bool],) */
}

def @func_6431() -> Tensor[(6, 9, 15), float64] {
  %1580 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1580.0
}

def @func_1770() -> Tensor[(6, 9, 15), float64] {
  %1582 = fn () -> Tensor[(6, 9, 15), float64] {
    %1581 = @func_1598() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1581.0
  };
  %1582() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_18056() -> Tensor[(6, 9, 15), float32] {
  @func_18054() /* ty=Tensor[(6, 9, 15), float32] */
}

def @func_8950() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_8948() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_12582() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_12580() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_5978() -> (Tensor[(6, 9, 15), float64],) {
  %1583 = @func_4954() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1583,)
}

def @func_9368() -> (Tensor[(6, 9, 15), float64], Tensor[(396), float32]) {
  %1588 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(396), float32]) {
    %1584 = @func_5428() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1585 = @func_6894() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(396), float32], Tensor[(396), float32], Tensor[(6, 9, 15), float64]) */;
    %1586 = %1584.2;
    %1587 = %1585.2;
    (%1586, %1587)
  };
  %1588() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(396), float32]) */
}

def @func_14378() -> Tensor[(6, 9, 15), float64] {
  %1589 = @func_13541() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1589.1
}

def @func_5151() -> (Tensor[(6, 9, 15), float64],) {
  %1592 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %1590 = @func_5126() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
    %1591 = %1590.0;
    (%1591,)
  };
  %1592() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_9279() -> Tensor[(1050), uint16] {
  @func_9277() /* ty=Tensor[(1050), uint16] */
}

def @func_11290() -> (Tensor[(6, 9, 15), float64],) {
  @func_11288() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_4419() -> (Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1593 = @func_4340() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1594 = %1593.0;
  %1595 = cast(%1594, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %1596 = reshape(%1595, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %1597 = @func_2344(%1596) /* ty=(Tensor[(6, 9, 15), float32], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(7, 13, 7), bool], Tensor[(637), uint32], Tensor[(6, 9, 15), float32]) */;
  %1598 = %1597.1;
  %1599 = @func_1914() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1594, %1598, %1599)
}

def @func_12705(%var_12700: Tensor[(13, 1, 8), float32]) -> Tensor[(13, 1, 8), float32] {
  %1600 = cast(%var_12700, dtype="float32") /* ty=Tensor[(13, 1, 8), float32] */;
  atan(%1600) /* ty=Tensor[(13, 1, 8), float32] */
}

def @func_4212() -> (Tensor[(6, 9, 15), float64],) {
  %1601 = @func_2223() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1602 = %1601.0;
  (%1602,)
}

def @func_16190() -> (Tensor[(6, 9, 15), float64],) {
  @func_16188() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_2055(%var_2053: Tensor[(15, 1, 5), int32]) -> (Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) {
  @func_2052(%var_2053) /* ty=(Tensor[(15, ?, 5), bool], Tensor[(6, 9, 15), float64]) */
}

def @func_15713() -> Tensor[(6, 9, 15), float64] {
  @func_15711() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_8301(%var_8271: Tensor[(1024), int16]) -> (Tensor[(6, 9, 15), float32], Tensor[(8, 8, 16), int16], Tensor[(1024), int16], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1603 = cast(%var_8271, dtype="int16") /* ty=Tensor[(1024), int16] */;
  %1604 = reshape(%1603, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), int16] */;
  %1605 = @func_1549() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %1606 = @func_5358() /* ty=Tensor[(6, 9, 15), float32] */;
  %1607 = @func_6547(%1604) /* ty=Tensor[(8, 8, 16), int16] */;
  %1608 = %1605.0;
  %1609 = @func_6431() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1606, %1607, %var_8271, %1608, %1609)
}

def @func_13297() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1610 = @func_2569() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float32]) */;
  %1611 = %1610.0;
  %1612 = @func_11032() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1611, %1612)
}

def @func_3809() -> (Tensor[(6, 9, 15), float32],) {
  %1613 = @func_1730() /* ty=(Tensor[(6, 9, 15), float32],) */;
  %1614 = %1613.0;
  (%1614,)
}

def @func_5429() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1620 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
    %1615 = @func_3999() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */;
    %1616 = @func_5150() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %1617 = %1615.0;
    %1618 = @func_5069() /* ty=Tensor[(6, 9, 15), float64] */;
    %1619 = %1616.0;
    (%1617, %1618, %1619)
  };
  %1620() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_4001() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) {
  @func_3999() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], int8, Tensor[(6, 9, 15), float64]) */
}

def @func_11822(%var_11821: Tensor[(432), float32]) -> (Tensor[(6, 9, 15), float64], int8, Tensor[(432), float32], int8) {
  %1628 = fn (%var_11817: Tensor[(432), float32]) -> (Tensor[(6, 9, 15), float64], int8, Tensor[(432), float32], int8) {
    %1621 = cast(%var_11817, dtype="float32") /* ty=Tensor[(432), float32] */;
    %1622 = cast(meta[relay.Constant][84] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %1623 = reshape(%1621, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), float32] */;
    %1624 = reshape(%1622, newshape=[]) /* ty=int8 */;
    %1625 = @func_10735(%1623, %1624) /* ty=(Tensor[(9, 3, 16), float32], int8, int8) */;
    %1626 = @func_11170() /* ty=Tensor[(6, 9, 15), float64] */;
    %1627 = %1625.2;
    (%1626, %1627, %var_11817, meta[relay.Constant][84] /* ty=int8 */)
  };
  %1628(%var_11821) /* ty=(Tensor[(6, 9, 15), float64], int8, Tensor[(432), float32], int8) */
}

def @func_11232() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  @func_11230() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */
}

def @func_8369() -> Tensor[(6, 9, 15), float64] {
  @func_8367() /* ty=Tensor[(6, 9, 15), float64] */
}

def @func_10556() -> Tensor[(6, 9, 15), float32] {
  %1630 = fn () -> Tensor[(6, 9, 15), float32] {
    %1629 = @func_6044() /* ty=(Tensor[(6, 9, 15), float32],) */;
    %1629.0
  };
  %1630() /* ty=Tensor[(6, 9, 15), float32] */
}

def @func_6124() -> (Tensor[(6, 9, 15), float64],) {
  %1631 = @func_3396() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) */;
  %1632 = %1631.1;
  (%1632,)
}

def @func_5126() -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64]) {
  %1633 = @func_1411() /* ty=Tensor[(6, 9, 15), float64] */;
  %1634 = @func_4954() /* ty=Tensor[(6, 9, 15), float64] */;
  (%1633, %1634)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen634/build/output.py", line 6052, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:42:53] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_134 = relay.var("var_134", dtype = "int8", shape = ())#candidate|134|()|var|int8
var_135 = relay.var("var_135", dtype = "int8", shape = (14, 5, 16))#candidate|135|(14, 5, 16)|var|int8
bop_136 = relay.bitwise_and(var_134.astype('int8'), var_135.astype('int8')) # shape=(14, 5, 16)
output = relay.Tuple([bop_136,])
output2 = relay.Tuple([bop_136,])
func_152 = relay.Function([var_134,var_135,], output)
mod['func_152'] = func_152
mod = relay.transform.InferType()(mod)
var_153 = relay.var("var_153", dtype = "int8", shape = ())#candidate|153|()|var|int8
var_154 = relay.var("var_154", dtype = "int8", shape = (14, 5, 16))#candidate|154|(14, 5, 16)|var|int8
output = func_152(var_153,var_154,)
func_155 = relay.Function([var_153,var_154,], output)
mutated_mod['func_155'] = func_155
mutated_mod = relay.transform.InferType()(mutated_mod)
const_285 = relay.const(-5.276980, dtype = "float64")#candidate|285|()|const|float64
var_286 = relay.var("var_286", dtype = "float64", shape = (10, 8, 2))#candidate|286|(10, 8, 2)|var|float64
bop_287 = relay.floor_mod(const_285.astype('float64'), var_286.astype('float64')) # shape=(10, 8, 2)
output = bop_287
output2 = bop_287
func_290 = relay.Function([var_286,], output)
mod['func_290'] = func_290
mod = relay.transform.InferType()(mod)
mutated_mod['func_290'] = func_290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_291 = relay.var("var_291", dtype = "float64", shape = (10, 8, 2))#candidate|291|(10, 8, 2)|var|float64
func_290_call = mutated_mod.get_global_var('func_290')
call_292 = func_290_call(var_291)
output = call_292
func_293 = relay.Function([var_291], output)
mutated_mod['func_293'] = func_293
mutated_mod = relay.transform.InferType()(mutated_mod)
var_422 = relay.var("var_422", dtype = "uint16", shape = (6, 10, 11))#candidate|422|(6, 10, 11)|var|uint16
var_423 = relay.var("var_423", dtype = "uint16", shape = (6, 10, 11))#candidate|423|(6, 10, 11)|var|uint16
bop_424 = relay.greater(var_422.astype('bool'), relay.reshape(var_423.astype('bool'), relay.shape_of(var_422))) # shape=(6, 10, 11)
func_152_call = mod.get_global_var('func_152')
func_155_call = mutated_mod.get_global_var('func_155')
const_433 = relay.const(-9, dtype = "int8")#candidate|433|()|const|int8
const_434 = relay.const([4,8,-1,3,4,2,-1,-10,-1,5,5,-1,-10,-8,-5,-4,2,-7,8,-3,-1,-4,7,5,2,-3,4,5,2,4,-2,-8,-10,-1,4,3,-10,8,-3,-7,-3,-10,-6,-2,10,-6,4,-9,9,-5,4,10,4,-3,-1,2,1,-2,8,-5,-9,1,3,8,-1,-6,-10,3,2,-1,-6,-10,4,6,-5,-10,-10,-8,2,6,10,10,-6,-3,9,-5,6,4,7,-2,8,9,-5,-4,4,10,-10,3,3,6,2,7,-7,8,10,6,-3,8,1,-5,-2,8,-5,-9,1,-10,-7,10,9,-7,9,-9,-8,10,-10,6,-10,-3,-9,5,8,-2,-4,8,-2,4,-8,-6,9,10,1,-9,-2,7,-7,-1,8,1,-6,5,3,1,-2,2,3,9,7,6,-2,-3,5,-3,9,-5,2,5,9,1,-5,3,4,-3,-1,4,-3,-2,5,1,1,1,6,-1,3,8,-4,5,2,2,-8,7,-5,2,-6,2,-7,-1,10,-7,3,-9,6,-6,4,2,-4,5,-1,9,-10,-7,5,-7,9,6,-9,10,2,4,3,10,-6,-9,4,6,-9,8,-10,-9,-10,10,1,-7,-5,-9,-8,8,-3,-2,-4,-8,1,7,4,-8,-10,-6,-10,3,3,-6,8,6,10,8,-6,7,6,-9,-1,-5,-7,1,3,5,-6,10,2,7,3,7,4,9,9,10,-6,10,-5,1,5,-7,-4,6,2,9,1,-9,10,-6,-5,-9,-1,-4,-10,-8,2,7,-4,-5,8,-4,-10,3,10,-10,-6,-7,8,7,8,-2,-3,-8,1,5,-7,-6,1,-8,-1,-7,-9,-7,-6,2,2,-6,-10,3,-8,-1,-7,-2,8,-9,-10,7,-1,-6,-1,-4,-2,-9,5,-6,-2,7,-5,8,-1,-2,5,2,-6,-6,-7,-9,9,3,-9,6,-5,-3,-2,-4,9,-7,9,-2,-8,-1,9,5,-7,-3,-7,-10,-3,-5,-3,1,-6,8,-6,10,1,10,-1,-9,3,-7,-2,-3,7,4,-8,1,1,-1,2,-2,5,2,-9,6,-4,2,-7,2,4,5,-1,6,-8,1,-10,-2,9,3,-4,9,2,-5,-6,-5,5,2,6,9,7,-3,-5,2,-6,1,3,-9,1,4,-3,10,10,-5,4,-10,4,-7,-6,-2,-3,-6,4,1,-1,5,-5,3,10,2,2,4,3,4,8,6,2,8,-9,-3,4,-6,4,-2,7,-10,-6,-4,4,10,5,-5,-10,-3,10,9,4,2,-5,4,-10,1,-9,-5,-1,6,3,-3,2,1,-1,-7,4,-5,-4,10,-5,10,-4,-6,-1,4,-2,6,4,10,-6,2,-6,2,8,-6,3,-5,-10,-5,-3,-5,-6,3,-8,7,9,7,-8,7,-3,9,8,4,-6,9,7,-6,-6,-5,1,-2,1,6,-10,-7,4,8,9,10,-10,7,-4,10,-2,-6,-7,3,-10,9,-10,3,-2,7,-3,-9,5,-2,-8,1,-9,3,7,-6,-5,-7,3,10,-2,-9,4,-10,5,-10,-6,5,7,-3,-5,1,8,-6,1,6,-3,-10,6,-7,-4,8,-9,-5,-4,-1,9,-9,-2,-8,3,4,-3,-4,-4,2,10,-8,-4,5,3,-4,-8,1,-10,-2,-5,8,1,-6,4,5,-7,-5,7,-6,-8,5,5,-5,-5,9,-3,5,-10,-1,9,2,-8,-5,-9,-5,1,-2,-8,-3,-3,-2,-9,2,-9,6,8,2,-7,3,7,-10,10,7,8,-10,2,9,10,-3,-2,-5,-8,-8,-3,10,9,-10,-3,-8,7,-4,-9,-2,-2,-5,7,9,-8,-10,-8,-3,-10,9,-10,-4,2,-9,1,-1,8,9,8,1,-5,-9,9,3,4,3,-6,4,7,2,-5,-2,10,8,-9,6,-8,-10,-4,6,-4,6,6,-1,-1,10,5,9,-3,-3,-4,10,-3,-8,-5,7,-3,-1,-10,1,-5,-7,1,6,-3,-8,-10,-10,9,10,-4,3,-9,-8,7,2,10,-2,5,7,-9,-6,3,9,-4,6,-5,7,3,5,-5,-2,4,6,-2,-9,9,-9,1,-4,1,5,1,2,-5,4,1,5,-9,-9,5,3,3,-6,-4,-7,2,-10,4,-9,-8,1,8,-7,8,-10,-1,-6,-9,-7,5,-7,-8,2,-9,-10,-3,-6,-8,9,-6,6,-4,-2,-7,3,4,10,6,-5,2,-2,8,-5,-9,-10,-3,-4,1,9,6,-1,-3,4,1,-6,5,-10,-6,-7,1,-1,6,-3,-1,6,-4,8,5,9,-3,1,-3,-1,7,-7,5,-5,3,-7,-10,-4,7,-4,-5,-10,-7,6,-3,-2,-3,1,7,1,3,4,3,2,9,-4,-10,-3,-5,-9,-6,-9,10,-8,-5,6,-9,3,-8,1,10,6,-10,-9,9,-3,10,3,3,6,-4,-8,-3,-4,8,2,3,-10,-6,7,-6,10,4,4,9,-5,-2,-6,4,6,7,1,-6,4,7,-9,2,9,-5,3,-2,-6,1,-9,-4,-6,5,-3,-8,6,8,10,-7,10,-1,7,-1,-10,-7,-7,8,-1,3,-7,-3,-8,-8,-3,-5,-10,-5,-4,10,-1,4,7,3,4,-4,-9,-4,7,5,-9,-2,9,-6,6,-6,4,-2,2,8,3,7,-6,9,4,-3,4,-2,5,-7,-5,-5,-3,-7,-4,2,-7,-1,9,8,6,6,9,5,7,2,-7,10,-5,6,4,-1,7,5,6,1,5,3,7,-7,-2,-6,-7,8,5,-5,1,9,-10,6,-6,-5,4,4,-6,8,9,6,2,9,-9,6,8,8,8,3,2,-4,8,10,8,-3,-3,2,-4,-5,-5,4,4,3,-7,7,-6,6,2,7,5,6,10,5,1,8,-9,-9,-6,7,1,-5,-9,-9,8,-1,-6,10,7,10,3,3,-2,-7,7], dtype = "int8")#candidate|434|(1120,)|const|int8
call_432 = relay.TupleGetItem(func_152_call(relay.reshape(const_433.astype('int8'), []), relay.reshape(const_434.astype('int8'), [14, 5, 16]), ), 0)
call_435 = relay.TupleGetItem(func_155_call(relay.reshape(const_433.astype('int8'), []), relay.reshape(const_434.astype('int8'), [14, 5, 16]), ), 0)
func_152_call = mod.get_global_var('func_152')
func_155_call = mutated_mod.get_global_var('func_155')
call_437 = relay.TupleGetItem(func_152_call(relay.reshape(const_433.astype('int8'), []), relay.reshape(call_432.astype('int8'), [14, 5, 16]), ), 0)
call_438 = relay.TupleGetItem(func_155_call(relay.reshape(const_433.astype('int8'), []), relay.reshape(call_432.astype('int8'), [14, 5, 16]), ), 0)
output = relay.Tuple([bop_424,call_432,const_433,const_434,call_437,])
output2 = relay.Tuple([bop_424,call_435,const_433,const_434,call_438,])
func_448 = relay.Function([var_422,var_423,], output)
mod['func_448'] = func_448
mod = relay.transform.InferType()(mod)
var_449 = relay.var("var_449", dtype = "uint16", shape = (6, 10, 11))#candidate|449|(6, 10, 11)|var|uint16
var_450 = relay.var("var_450", dtype = "uint16", shape = (6, 10, 11))#candidate|450|(6, 10, 11)|var|uint16
output = func_448(var_449,var_450,)
func_451 = relay.Function([var_449,var_450,], output)
mutated_mod['func_451'] = func_451
mutated_mod = relay.transform.InferType()(mutated_mod)
var_547 = relay.var("var_547", dtype = "int8", shape = (7, 2, 12))#candidate|547|(7, 2, 12)|var|int8
var_548 = relay.var("var_548", dtype = "int8", shape = (7, 2, 12))#candidate|548|(7, 2, 12)|var|int8
bop_549 = relay.less(var_547.astype('bool'), relay.reshape(var_548.astype('bool'), relay.shape_of(var_547))) # shape=(7, 2, 12)
uop_555 = relay.rsqrt(var_547.astype('float64')) # shape=(7, 2, 12)
uop_560 = relay.log(uop_555.astype('float64')) # shape=(7, 2, 12)
output = relay.Tuple([bop_549,uop_560,])
output2 = relay.Tuple([bop_549,uop_560,])
func_567 = relay.Function([var_547,var_548,], output)
mod['func_567'] = func_567
mod = relay.transform.InferType()(mod)
var_568 = relay.var("var_568", dtype = "int8", shape = (7, 2, 12))#candidate|568|(7, 2, 12)|var|int8
var_569 = relay.var("var_569", dtype = "int8", shape = (7, 2, 12))#candidate|569|(7, 2, 12)|var|int8
output = func_567(var_568,var_569,)
func_570 = relay.Function([var_568,var_569,], output)
mutated_mod['func_570'] = func_570
mutated_mod = relay.transform.InferType()(mutated_mod)
var_580 = relay.var("var_580", dtype = "float64", shape = (13, 7, 6))#candidate|580|(13, 7, 6)|var|float64
uop_581 = relay.tan(var_580.astype('float64')) # shape=(13, 7, 6)
output = relay.Tuple([uop_581,])
output2 = relay.Tuple([uop_581,])
func_590 = relay.Function([var_580,], output)
mod['func_590'] = func_590
mod = relay.transform.InferType()(mod)
var_591 = relay.var("var_591", dtype = "float64", shape = (13, 7, 6))#candidate|591|(13, 7, 6)|var|float64
output = func_590(var_591)
func_592 = relay.Function([var_591], output)
mutated_mod['func_592'] = func_592
mutated_mod = relay.transform.InferType()(mutated_mod)
var_685 = relay.var("var_685", dtype = "uint8", shape = (4, 4, 5))#candidate|685|(4, 4, 5)|var|uint8
var_686 = relay.var("var_686", dtype = "uint8", shape = (4, 4, 5))#candidate|686|(4, 4, 5)|var|uint8
bop_687 = relay.greater(var_685.astype('bool'), relay.reshape(var_686.astype('bool'), relay.shape_of(var_685))) # shape=(4, 4, 5)
uop_698 = relay.tan(var_685.astype('float32')) # shape=(4, 4, 5)
func_448_call = mod.get_global_var('func_448')
func_451_call = mutated_mod.get_global_var('func_451')
var_702 = relay.var("var_702", dtype = "uint16", shape = (660,))#candidate|702|(660,)|var|uint16
call_701 = relay.TupleGetItem(func_448_call(relay.reshape(var_702.astype('uint16'), [6, 10, 11]), relay.reshape(var_702.astype('uint16'), [6, 10, 11]), ), 4)
call_703 = relay.TupleGetItem(func_451_call(relay.reshape(var_702.astype('uint16'), [6, 10, 11]), relay.reshape(var_702.astype('uint16'), [6, 10, 11]), ), 4)
func_590_call = mod.get_global_var('func_590')
func_592_call = mutated_mod.get_global_var('func_592')
const_713 = relay.const([-9.178065,-9.837981,5.625614,-4.715445,-2.031275,-8.862149,5.842472,3.718609,5.212573,-6.339987,6.767253,-4.412859,-6.363495,7.991396,-8.410922,-5.957807,-2.385511,5.923854,-1.932244,6.435850,-6.471618,-9.385511,-8.626265,6.830837,-7.823821,-6.821877,9.691099,8.020719,-1.204242,8.867201,3.664352,2.316842,-1.191718,2.837320,-0.233852,0.601749,-2.893694,7.824329,-4.671512,-5.504759,-7.286752,-4.591407,-3.631469,6.845524,8.404386,4.597381,-9.589715,-1.602265,1.597106,1.796819,-4.951425,-2.036084,0.232309,-8.689503,0.109478,-0.064089,1.445336,3.401264,-0.667294,-8.375148,-8.293718,7.359721,1.653136,6.357286,5.541089,-7.561696,-9.687777,3.563570,-3.205306,4.859087,-9.100674,8.277355,-2.768942,6.826254,-6.027872,-7.440596,8.433946,7.081251,-8.830443,-5.799667,-2.239896,1.462128,1.097134,-0.651110,-6.818999,6.856922,7.329505,-2.246828,-2.647656,3.505564,-0.967369,1.715689,2.703306,-5.012615,5.155638,1.650993,2.044104,-6.270764,1.410321,7.973405,-2.335833,1.327965,7.641883,-7.908058,4.322872,-9.287541,6.790736,-1.661595,5.299973,-0.977145,6.317705,-1.376237,9.262257,8.868788,9.370551,-4.900695,-7.067476,1.318479,-7.271471,6.288417,1.544898,4.251996,2.769630,6.767077,-8.421738,7.821612,-4.249617,-8.870775,8.252528,-7.137744,-6.170745,-7.501465,-3.222435,3.765665,9.864261,8.295171,-0.003615,-4.701681,-3.724417,-3.482566,6.888459,-6.938564,6.954188,4.950428,-1.287270,5.789004,7.209399,6.501452,-2.302879,-9.104700,6.069123,-1.813249,-7.489359,6.241030,2.764401,1.001667,-3.979870,-7.953531,-1.552811,-6.161560,4.758341,-5.848396,9.822868,7.144780,-2.568445,-7.943652,1.637845,2.696778,6.886365,-9.829451,2.346057,0.387074,9.145567,9.716185,-8.095451,-1.789503,-0.129632,-1.266103,9.379228,9.551694,0.368908,1.268981,-8.853802,-1.952361,-5.157235,-8.263326,-2.075671,9.128081,5.611512,2.772323,-2.633041,-4.126641,-0.481505,-3.971922,-7.622040,3.202831,4.317951,-0.424907,-9.759409,6.144301,5.000375,-5.611535,-6.654685,6.843100,-4.068901,6.795320,-5.883854,0.669218,-8.619379,-2.648037,9.854242,-8.850197,8.374428,8.737656,2.755689,-1.132690,-7.972134,-2.494526,-8.093962,5.743036,-0.874946,8.415214,-1.058981,-5.974958,-2.336933,7.206852,-3.129273,6.787873,-0.575194,8.262533,6.310013,-6.105176,-3.707071,-8.599572,-7.313207,-2.048396,-9.294363,5.807229,-9.822507,8.817118,2.246510,3.049601,-8.853599,3.190474,2.177369,-7.275987,-9.561689,-8.865435,3.084388,5.361265,-6.444050,6.093174,4.131421,7.076807,-8.881517,-5.841896,4.547077,1.568590,-8.020420,-6.177945,-8.287791,2.537799,9.954209,6.928163,-4.062705,-5.864545,-6.097709,-6.289907,1.149013,-5.635787,-7.018120,5.749701,-7.199295,-9.496139,8.392549,-4.980421,8.476925,-7.253970,3.170872,-7.695307,-5.004369,3.962937,-0.839253,-5.591007,6.490475,3.294145,6.477866,-1.355759,9.080017,8.258142,4.944491,-1.806400,6.635991,-9.608557,6.224771,-9.731521,5.083611,-5.873668,3.607063,3.661207,1.963387,6.497224,5.179771,-4.724317,-0.727123,8.559828,3.778180,-0.993416,-7.948142,-4.251930,7.177964,6.568894,-1.028616,-0.149801,-8.556350,-5.848305,-8.716603,4.434559,3.631371,7.615461,8.358009,-5.774849,-4.499180,2.739348,4.308829,-9.929789,-0.044114,5.490010,-7.910349,2.083505,-7.870782,-8.152173,8.364208,-8.721957,-4.798235,-8.100978,3.900013,-1.858822,7.653180,-2.644964,8.949668,-7.767584,8.749300,-5.469624,2.188957,-0.916696,-9.552464,0.083139,-1.752459,-9.498853,4.100633,-9.698949,3.351254,-0.654691,-5.980344,1.855613,-0.788040,-8.857105,-3.063828,7.811300,-9.422052,3.506207,-7.729786,-6.232410,-1.812832,4.843265,2.367345,-0.517112,7.394952,4.549092,-0.055474,0.345425,-4.083637,-0.845737,8.024890,1.053203,3.628984,-4.306299,8.403077,7.822508,8.139793,9.295705,-3.053790,-1.555956,-1.013878,-6.177977,-3.940353,0.720960,3.575693,4.004653,7.639240,-3.033589,2.417751,0.652431,4.318663,2.654412,6.518283,7.943431,-7.976923,4.928319,4.445870,6.233276,-7.974886,0.595966,-4.346145,-5.622455,0.416530,8.387191,0.593388,7.543200,3.697739,9.189975,5.521296,-7.893075,-7.603393,-1.033157,0.371001,-9.857137,1.094875,6.163950,-7.098215,1.912344,-0.062317,2.934859,7.597586,-0.568644,0.669416,-8.053193,-6.247589,-2.896415,-8.689428,6.435460,4.352299,4.535168,9.120585,-8.109406,-0.078574,7.582048,-0.809336,-8.478655,1.429029,-3.807578,1.651024,4.720510,-0.256981,-9.643245,-6.909157,-2.094057,6.583978,-1.743973,6.664311,2.937451,1.212028,-7.415853,2.910769,7.477342,-2.079189,7.737832,-1.776860,3.354948,-6.361108,-7.574366,5.924969,-2.367397,-5.596325,5.928010,-5.289056,-0.504107,7.103766,0.492232,8.279965,5.253213,6.019633,2.726546,7.428802,-1.912738,9.891928,8.811153,8.199222,6.548237,-5.187305,8.071152,9.189873,-5.485737,6.302189,6.026698,6.785774,-3.830657,9.061229,-8.881594,-2.761342,1.783999,4.928619,3.560975,-0.133909,5.601254,4.996351,8.127906,-1.039178,-0.999597,-2.224247,-9.786235,-3.833136,-8.591250,5.002722,5.640214,4.573282,0.839942,9.874092,2.071207,9.263132,-8.903539,-1.872620,-3.752838,-1.941666,-8.649031,-7.194722,-0.122912,9.770574,7.603915,8.317792,-3.239097,8.201876,-7.495765,-2.054027,-7.781672,-8.343447,8.007686,5.908294,2.645445,-0.122596,-6.386340,-2.473519,4.813340,9.500520,-2.410298,9.959256,6.391616,-3.167680,8.706973,0.905969,2.670770,0.552542,-6.114223,-9.570656,-5.184071], dtype = "float64")#candidate|713|(546,)|const|float64
call_712 = relay.TupleGetItem(func_590_call(relay.reshape(const_713.astype('float64'), [13, 7, 6])), 0)
call_714 = relay.TupleGetItem(func_592_call(relay.reshape(const_713.astype('float64'), [13, 7, 6])), 0)
uop_723 = relay.acosh(uop_698.astype('float64')) # shape=(4, 4, 5)
func_152_call = mod.get_global_var('func_152')
func_155_call = mutated_mod.get_global_var('func_155')
var_726 = relay.var("var_726", dtype = "int8", shape = ())#candidate|726|()|var|int8
call_725 = relay.TupleGetItem(func_152_call(relay.reshape(var_726.astype('int8'), []), relay.reshape(call_701.astype('int8'), [14, 5, 16]), ), 0)
call_727 = relay.TupleGetItem(func_155_call(relay.reshape(var_726.astype('int8'), []), relay.reshape(call_701.astype('int8'), [14, 5, 16]), ), 0)
func_567_call = mod.get_global_var('func_567')
func_570_call = mutated_mod.get_global_var('func_570')
var_731 = relay.var("var_731", dtype = "int8", shape = (168,))#candidate|731|(168,)|var|int8
call_730 = relay.TupleGetItem(func_567_call(relay.reshape(var_731.astype('int8'), [7, 2, 12]), relay.reshape(var_731.astype('int8'), [7, 2, 12]), ), 0)
call_732 = relay.TupleGetItem(func_570_call(relay.reshape(var_731.astype('int8'), [7, 2, 12]), relay.reshape(var_731.astype('int8'), [7, 2, 12]), ), 0)
func_290_call = mod.get_global_var('func_290')
func_293_call = mutated_mod.get_global_var('func_293')
const_752 = relay.const([[-1.247416,6.870379,2.865903,2.597859,-3.296156,-2.191384,6.848914,-0.392463,-9.911346,-1.857667,2.128159,4.643333,9.073303,-0.251468,6.893569,8.061295,3.172952,5.692861,9.669896,-5.662083],[1.432223,-6.597131,-6.691325,-7.995271,-6.213234,7.877759,5.944383,-5.901310,-8.476850,-3.858085,-4.695844,3.140412,5.078668,-2.807549,6.723718,-4.818870,3.096307,2.543905,9.600010,-2.982103],[-2.888304,7.419120,-9.831151,1.099002,-0.682443,-9.647195,0.869958,-2.168223,-1.175405,9.143705,0.358618,7.314731,6.061161,5.440133,-7.439592,-2.869145,2.148297,-7.753057,-1.485626,-0.061133],[-9.751546,5.932927,-7.881853,-2.665070,-0.671439,-1.473180,7.589384,-1.115276,6.955471,7.781662,0.239585,-9.720857,5.686482,-8.899499,-7.488359,-2.693316,-3.733966,-5.182822,-7.486046,1.841019],[8.784414,-1.061574,3.410720,1.487157,-8.028081,-9.873639,-4.591890,8.244764,-5.091505,6.404800,-8.292256,9.331422,5.991010,-1.983486,-7.740840,-8.834248,9.295886,-8.016970,8.567680,6.410085],[-7.956948,0.954963,8.747739,-0.612057,8.921043,-4.237820,9.858766,-8.094532,-5.278664,-4.092785,-8.216780,-9.281280,-7.974882,4.312499,-4.643060,9.711116,-7.869266,5.789649,4.804902,3.312013],[-6.919835,4.250498,4.599512,-9.009890,-6.218992,-3.487797,-1.952106,-6.779952,6.699190,-5.670193,5.560446,-2.524145,5.651319,4.982802,9.378826,7.529345,-6.922701,-7.084770,-6.505450,3.334680],[1.323738,4.684724,-6.006744,-4.719059,9.788460,7.238637,2.033035,7.533212,-3.830347,9.886706,5.294769,7.926794,2.058462,-5.160060,-4.729913,-8.017502,1.785068,7.410088,-8.367983,-7.307662]], dtype = "float64")#candidate|752|(8, 20)|const|float64
call_751 = func_290_call(relay.reshape(const_752.astype('float64'), [10, 8, 2]))
call_753 = func_290_call(relay.reshape(const_752.astype('float64'), [10, 8, 2]))
bop_772 = relay.logical_xor(uop_723.astype('int32'), var_726.astype('int32')) # shape=(4, 4, 5)
output = relay.Tuple([bop_687,call_701,var_702,call_712,const_713,call_725,call_730,var_731,call_751,const_752,bop_772,])
output2 = relay.Tuple([bop_687,call_703,var_702,call_714,const_713,call_727,call_732,var_731,call_753,const_752,bop_772,])
func_782 = relay.Function([var_685,var_686,var_702,var_726,var_731,], output)
mod['func_782'] = func_782
mod = relay.transform.InferType()(mod)
mutated_mod['func_782'] = func_782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_782_call = mutated_mod.get_global_var('func_782')
var_784 = relay.var("var_784", dtype = "uint8", shape = (4, 4, 5))#candidate|784|(4, 4, 5)|var|uint8
var_785 = relay.var("var_785", dtype = "uint8", shape = (4, 4, 5))#candidate|785|(4, 4, 5)|var|uint8
var_786 = relay.var("var_786", dtype = "uint16", shape = (660,))#candidate|786|(660,)|var|uint16
var_787 = relay.var("var_787", dtype = "int8", shape = ())#candidate|787|()|var|int8
var_788 = relay.var("var_788", dtype = "int8", shape = (168,))#candidate|788|(168,)|var|int8
call_783 = func_782_call(var_784,var_785,var_786,var_787,var_788,)
output = call_783
func_789 = relay.Function([var_784,var_785,var_786,var_787,var_788,], output)
mutated_mod['func_789'] = func_789
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1214 = relay.const([[[6.909359,2.708859,1.793813,8.642407,-9.806886,-3.536127,-8.176755],[-2.048629,7.262430,-0.168111,-0.096947,2.832095,6.989130,-7.109491],[1.899431,-6.235185,-7.450483,3.157691,-5.765357,-5.667159,-1.133140],[0.910662,-0.553266,-1.752098,2.085573,-9.588869,9.895313,0.232171],[-4.426099,6.133863,6.477291,-9.821297,5.127567,0.967634,-7.066266],[-1.663530,-9.711887,6.874889,-3.555585,-5.080013,7.198283,7.700277],[1.542308,3.312593,-8.283835,3.483985,-0.896273,-4.752061,2.996904],[7.249068,4.971856,3.502541,-3.038001,-3.191924,-9.737759,-6.422905],[9.340973,7.349971,-2.909258,-6.624311,0.838626,-5.016797,7.863505],[-5.764178,-2.578584,4.874819,7.640147,8.239328,3.041322,-8.775300],[-8.554126,3.133760,-3.768881,-2.600539,0.342758,-9.201503,-7.469744],[5.047592,5.217546,7.878614,6.580843,3.717198,3.160002,-1.810998],[-3.538674,-5.442369,6.653081,-6.604996,-0.113025,-0.088936,2.391219],[9.482186,6.080446,9.582164,-6.179178,-6.338705,7.118873,-6.600910],[-7.191685,-8.873418,-4.406246,-1.121472,-2.078970,0.536215,1.957188]],[[6.151727,-4.160330,4.151002,4.297238,-8.780889,2.436382,2.233491],[-0.714595,7.637915,3.542188,9.973491,-7.711795,1.617639,-6.341996],[-9.671429,5.177311,-7.015023,-7.265131,2.545244,8.874049,0.471353],[5.096868,1.775590,-3.875423,-2.308266,-0.363967,4.462774,1.972611],[-5.167943,-6.663983,-8.703975,-7.247174,5.071284,-3.852295,-2.655162],[0.767926,-5.685265,-0.716495,-8.187976,-8.863549,-6.106541,9.048771],[9.571799,2.315337,-9.242712,-9.331358,7.788422,-1.225016,7.990533],[8.871893,-9.997458,8.562497,3.377896,-1.427139,9.518578,1.171855],[-4.704631,9.991170,8.080626,4.329379,-6.844068,-5.982889,-1.438589],[9.888256,1.219872,7.620455,9.775069,-5.886209,-5.566631,-0.215296],[9.163182,-7.163606,-3.009667,-9.196385,-4.737102,-3.179274,6.116494],[-8.498936,7.470414,-3.212028,-4.459708,-7.532150,-8.262104,6.880280],[5.042553,-2.183136,2.569266,-6.849924,4.311086,8.792267,-9.522219],[-1.341396,0.393594,3.259210,-2.479702,1.455773,5.225513,-7.672840],[8.211139,5.310891,-5.137277,5.337340,-2.204850,9.548939,-4.981982]],[[6.207242,-5.963387,8.650365,-4.508653,-2.554994,-1.539652,4.368752],[3.188234,7.739270,9.390395,-8.920792,4.542932,4.876676,2.186535],[2.651580,-6.125652,4.479273,-1.822219,-7.063844,6.266436,-6.225259],[-6.348195,-0.850653,7.456923,-0.935413,-4.030441,-0.466949,7.749045],[0.209201,0.052214,-0.989305,4.161235,-6.038746,-6.446844,-3.651861],[-3.030627,5.160805,-9.299814,-1.250424,-0.161226,6.896431,7.990173],[-5.953707,0.166023,-9.074622,-1.912887,-6.019811,-4.497194,5.246102],[9.740477,-2.618180,-2.056308,9.409791,5.788593,2.056941,-8.979199],[-1.025792,-5.202072,-5.164490,-0.324673,-8.865639,-4.484410,-0.076857],[-1.816063,1.323974,9.921466,1.506604,-9.934090,1.007146,-1.915922],[3.349313,0.478911,9.501496,-4.153729,0.359361,-5.959648,6.774166],[8.895525,1.941192,7.152749,7.243929,-2.467168,8.862026,1.345763],[4.983170,8.969132,2.674324,-6.983148,-9.926551,-4.020484,-7.184984],[-8.636243,1.954308,0.342719,6.095241,-3.801627,-9.518502,5.781588],[9.608403,-8.473528,-3.109350,1.399046,-0.793327,-0.293994,-6.036916]],[[-7.985583,2.525914,-2.748930,-2.394547,1.041434,-9.334822,1.087719],[8.800085,-7.693672,3.510246,5.685333,-6.834135,0.291440,-7.056400],[-8.748872,6.535872,0.844885,3.411402,0.741785,-8.771940,4.004997],[-4.047229,1.771133,9.421089,-6.241777,-2.748573,-8.342890,-3.727907],[6.065592,-8.256315,4.222492,-9.465855,-3.595164,-1.690866,-8.734271],[4.437635,-4.196880,-3.932764,2.920757,9.601368,-5.241912,1.561632],[2.294890,9.852908,-0.514315,-8.355047,7.067115,9.363272,-0.693154],[2.269488,-1.554914,-3.063475,3.587092,-4.121872,-3.937546,-2.441853],[6.715219,6.912412,-4.813173,3.447892,-1.141260,-8.002326,-2.977479],[-7.084587,-7.673507,4.617858,-0.918633,5.439386,-1.479111,-5.512658],[9.795110,-7.241037,-8.614168,4.844429,-0.107055,5.533155,-3.926851],[-3.192262,2.089129,4.628941,-3.053462,-3.879724,-1.764869,-2.336036],[6.420044,0.206249,-9.188554,5.338930,-0.330726,9.573178,0.903769],[6.792837,-4.556776,1.780888,-0.587512,4.268394,3.512141,8.353565],[1.663492,9.005293,-1.263235,-4.923835,-4.639643,8.843458,-2.521855]],[[8.599837,-4.280320,-7.908158,-3.943992,-1.034113,-2.163766,0.927858],[-0.654993,-7.914366,9.353647,-0.359331,-0.896317,-2.323749,3.147314],[1.663778,-7.648496,5.713177,-5.809146,2.321109,8.293320,4.800927],[-2.685368,-8.870193,-1.561814,-1.711009,-4.359676,9.993544,0.306550],[0.063924,-2.283094,9.441854,2.865437,5.903199,-3.761578,-5.126524],[-8.301591,8.910807,-7.734737,9.707313,-5.799864,-6.107340,0.852690],[-8.808587,7.610087,2.872660,-4.771224,-6.202075,2.113256,8.056032],[3.972873,-0.202707,-8.861653,-4.430679,4.992157,4.391995,2.195248],[-0.698367,3.293805,-7.918551,-7.295335,-9.410056,-6.350173,-2.097490],[-9.375547,6.688528,3.064586,-2.064239,7.233021,-8.331828,-6.013091],[5.778673,-6.289210,-8.455585,-2.919317,-5.900028,-9.889159,2.165356],[-4.734158,6.863461,-7.636135,-6.456965,-4.910961,3.785990,2.914363],[-5.379773,3.308436,0.252449,2.192304,2.259062,-1.612442,-7.847095],[5.793222,5.232065,6.060559,-1.030348,2.680068,1.247042,2.820612],[-2.275592,-0.962047,5.125770,-5.845671,7.194740,-2.306070,1.089204]],[[1.031624,-2.621233,9.422710,-0.623438,-5.366712,-9.663642,0.123631],[5.895427,-1.759613,4.790327,-5.988160,-0.763565,0.677229,-6.413371],[8.082773,7.971922,5.231042,5.782622,8.748839,5.094498,-3.280243],[-4.275290,7.808815,6.639022,5.598666,-3.607162,2.004118,-1.108198],[6.561997,-6.485011,-4.680382,4.115627,4.693856,-7.812169,-3.023823],[-1.517462,-1.385093,-1.881003,-2.281392,3.580108,-1.122677,9.165001],[4.261412,-1.598129,-2.436461,9.465605,-6.305235,-9.731257,1.194952],[4.251529,-7.998743,-3.059013,-0.430092,-5.412363,-5.243330,-4.557630],[-2.226705,-9.776123,9.090922,-3.768697,-3.479039,-7.342937,-6.583095],[-3.368325,3.512749,4.176328,-8.157537,-3.484851,-8.254865,0.699871],[0.129496,5.189724,-3.436301,9.436468,-1.651657,2.467433,4.212979],[-7.119418,8.181524,8.955400,-2.466364,-3.927264,-3.260105,9.328651],[-3.925159,-6.635968,-9.538635,3.873160,1.126545,-0.319198,-4.718833],[-0.652445,5.843648,2.187841,-0.628287,4.026368,1.911859,1.705417],[6.438560,-5.132748,8.541660,6.245116,-5.265197,-0.213906,2.377677]],[[1.793196,8.747029,6.707797,-5.672339,4.556072,8.817859,3.173946],[-5.526654,-4.338002,1.691740,9.189826,7.631492,-9.005495,3.297226],[-8.720305,4.310698,-5.968682,9.313474,9.957631,-8.839752,-4.831578],[-6.930261,-3.334023,-6.001308,-3.296957,0.349823,0.977549,-8.716078],[-6.853638,-2.156839,-1.524853,8.372329,-0.042031,-4.229275,-2.134794],[-7.454377,-8.985969,6.061050,-6.778528,2.751536,6.598797,-2.158852],[-0.710594,1.673937,4.202067,1.169193,9.524256,-8.565248,0.418013],[-7.519210,-5.826627,0.808570,4.559022,7.225236,-8.912152,-7.022689],[-5.642443,-7.767314,3.682583,3.965972,-3.228984,-4.559914,9.154032],[0.377708,9.993829,8.321341,2.526082,-7.650245,5.665438,-9.888837],[-5.243147,4.959029,0.940300,1.815653,1.715448,2.992054,0.016419],[-0.688587,4.733247,-8.153075,0.642693,-9.499764,-2.873751,7.685067],[-1.324720,1.881591,-1.933033,1.497790,4.219884,-7.826611,-3.662096],[-9.563307,6.297405,-4.679135,-5.356381,4.938529,-2.648963,-2.424602],[-0.345312,-9.707783,4.619010,5.422414,2.177983,-2.109134,-1.612956]],[[2.177315,-7.094321,-4.692805,-9.294654,-7.049584,3.107842,-5.868700],[7.590596,-9.225490,-9.023735,1.741986,7.496517,6.404327,4.661956],[6.046416,-0.143560,-3.621961,-9.552389,-3.970895,-4.317175,9.574514],[-3.734450,3.038440,4.953382,8.409961,2.946907,5.232313,-3.270952],[7.928657,-0.831855,3.063335,5.044924,-4.723250,-5.449385,6.848057],[0.813939,0.510223,-5.228833,-0.760025,-2.424393,-6.729517,-5.668043],[-8.815687,-6.961991,-1.972440,-0.075079,-8.666643,-5.991818,6.749016],[6.523191,2.840108,-4.802539,2.415054,6.656052,-7.891679,9.492850],[2.040715,-5.727476,-1.666702,2.710089,-4.420197,-4.088005,-6.987906],[2.875836,-8.952117,-7.185616,5.801132,-6.862357,3.005746,-7.702940],[6.562503,-2.738599,4.278939,5.953324,-6.669776,3.886914,-9.299142],[9.033700,-6.160086,0.628987,2.516590,-5.475195,-2.198793,0.909425],[-5.956177,9.014467,-2.742303,1.720257,-0.139978,4.441209,4.493664],[3.199803,4.795535,-1.797783,6.974769,-3.698991,3.563116,-0.005214],[6.323631,-7.907311,4.471765,3.831952,9.418020,-0.028906,8.527279]],[[-1.656034,-9.300084,5.306663,-6.173372,2.387080,1.844204,7.772510],[-4.419394,-3.044902,7.292659,4.829423,-6.872117,-3.825659,8.586225],[0.945241,0.824229,-7.330932,-5.770107,4.558245,2.563261,-7.096279],[-4.060310,-6.667523,7.236106,-2.920040,0.282485,-6.229048,-4.100638],[9.133914,4.960953,9.469572,7.184107,-7.426670,5.701431,-8.475690],[-3.550649,6.752953,-4.797995,9.100290,-5.930039,2.597154,8.841241],[6.766443,-4.882346,-8.242742,5.512172,-8.596322,7.682781,-7.555626],[-2.719239,8.097647,-6.793962,0.980263,-1.295797,-4.528458,-4.434634],[-7.662992,7.556480,-6.562339,9.205915,1.014734,-8.407690,8.118690],[-2.496264,-4.471470,-9.338796,3.746652,-8.047404,-6.000084,5.829678],[2.586475,-6.888467,-3.770129,7.162638,1.006361,6.289783,6.329041],[1.191980,4.410985,3.966321,-1.860210,3.580151,-0.210200,4.431200],[8.115451,4.773071,-7.234626,-8.325642,-3.629446,7.115702,-9.311936],[-2.599159,-2.451361,-6.755430,-3.269531,5.954760,-9.217784,-1.656836],[-2.539736,4.615588,9.694602,-8.913923,-1.390043,-7.738532,-8.777302]]], dtype = "float64")#candidate|1214|(9, 15, 7)|const|float64
var_1215 = relay.var("var_1215", dtype = "float64", shape = (9, 15, 7))#candidate|1215|(9, 15, 7)|var|float64
bop_1216 = relay.floor_divide(const_1214.astype('float64'), relay.reshape(var_1215.astype('float64'), relay.shape_of(const_1214))) # shape=(9, 15, 7)
uop_1232 = relay.acos(const_1214.astype('float32')) # shape=(9, 15, 7)
output = relay.Tuple([bop_1216,uop_1232,])
output2 = relay.Tuple([bop_1216,uop_1232,])
func_1242 = relay.Function([var_1215,], output)
mod['func_1242'] = func_1242
mod = relay.transform.InferType()(mod)
mutated_mod['func_1242'] = func_1242
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1243 = relay.var("var_1243", dtype = "float64", shape = (9, 15, 7))#candidate|1243|(9, 15, 7)|var|float64
func_1242_call = mutated_mod.get_global_var('func_1242')
call_1244 = func_1242_call(var_1243)
output = call_1244
func_1245 = relay.Function([var_1243], output)
mutated_mod['func_1245'] = func_1245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1419 = relay.var("var_1419", dtype = "float64", shape = (7, 3, 14))#candidate|1419|(7, 3, 14)|var|float64
uop_1420 = relay.acos(var_1419.astype('float64')) # shape=(7, 3, 14)
uop_1431 = relay.log(uop_1420.astype('float64')) # shape=(7, 3, 14)
var_1448 = relay.var("var_1448", dtype = "float64", shape = (7, 3, 14))#candidate|1448|(7, 3, 14)|var|float64
bop_1449 = relay.minimum(uop_1420.astype('uint8'), relay.reshape(var_1448.astype('uint8'), relay.shape_of(uop_1420))) # shape=(7, 3, 14)
bop_1454 = relay.less_equal(uop_1431.astype('bool'), relay.reshape(bop_1449.astype('bool'), relay.shape_of(uop_1431))) # shape=(7, 3, 14)
bop_1457 = relay.right_shift(bop_1454.astype('uint8'), relay.reshape(var_1448.astype('uint8'), relay.shape_of(bop_1454))) # shape=(7, 3, 14)
output = bop_1457
output2 = bop_1457
func_1460 = relay.Function([var_1419,var_1448,], output)
mod['func_1460'] = func_1460
mod = relay.transform.InferType()(mod)
mutated_mod['func_1460'] = func_1460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1460_call = mutated_mod.get_global_var('func_1460')
var_1462 = relay.var("var_1462", dtype = "float64", shape = (7, 3, 14))#candidate|1462|(7, 3, 14)|var|float64
var_1463 = relay.var("var_1463", dtype = "float64", shape = (7, 3, 14))#candidate|1463|(7, 3, 14)|var|float64
call_1461 = func_1460_call(var_1462,var_1463,)
output = call_1461
func_1464 = relay.Function([var_1462,var_1463,], output)
mutated_mod['func_1464'] = func_1464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1516 = relay.var("var_1516", dtype = "uint64", shape = (6, 2, 10))#candidate|1516|(6, 2, 10)|var|uint64
const_1517 = relay.const([[[2,-8,-10,-7,-3,-5,-1,10,-8,5],[-1,-6,-5,9,1,-3,-4,5,2,-6]],[[2,-7,-10,-6,-7,2,6,-10,-2,-2],[-5,-5,8,2,-9,-4,-4,6,9,4]],[[3,-1,6,9,4,-3,10,9,8,-7],[-2,8,1,9,7,5,-3,-8,2,9]],[[1,-7,9,-7,7,-4,5,6,7,8],[-1,2,1,-3,7,1,3,7,3,-9]],[[-9,1,4,-10,3,4,10,9,6,-8],[-3,1,6,8,-3,10,-1,-4,8,-7]],[[-3,-6,7,-6,-5,-7,3,4,5,9],[-10,-8,9,7,7,8,-7,4,-10,-8]]], dtype = "uint64")#candidate|1517|(6, 2, 10)|const|uint64
bop_1518 = relay.bitwise_and(var_1516.astype('uint64'), relay.reshape(const_1517.astype('uint64'), relay.shape_of(var_1516))) # shape=(6, 2, 10)
bop_1530 = relay.add(bop_1518.astype('int16'), relay.reshape(var_1516.astype('int16'), relay.shape_of(bop_1518))) # shape=(6, 2, 10)
uop_1535 = relay.cos(const_1517.astype('float32')) # shape=(6, 2, 10)
output = relay.Tuple([bop_1530,uop_1535,])
output2 = relay.Tuple([bop_1530,uop_1535,])
func_1538 = relay.Function([var_1516,], output)
mod['func_1538'] = func_1538
mod = relay.transform.InferType()(mod)
var_1539 = relay.var("var_1539", dtype = "uint64", shape = (6, 2, 10))#candidate|1539|(6, 2, 10)|var|uint64
output = func_1538(var_1539)
func_1540 = relay.Function([var_1539], output)
mutated_mod['func_1540'] = func_1540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1554 = relay.var("var_1554", dtype = "uint64", shape = (8, 15, 5))#candidate|1554|(8, 15, 5)|var|uint64
const_1555 = relay.const([[[2,-8,-3,-3,8],[7,-9,-6,-1,10],[1,-9,-8,-5,-6],[-8,-9,7,7,-8],[-2,-6,4,-7,-8],[-1,4,8,-8,-3],[-6,-5,9,-8,5],[-1,2,2,-9,3],[8,6,5,-4,-9],[-7,1,-1,-5,-9],[8,7,-7,-6,-8],[4,4,-5,-6,-9],[-7,-1,10,9,2],[6,-7,-9,-2,3],[-5,-3,8,5,-9]],[[10,-5,-6,-2,2],[4,5,-1,-8,-9],[-2,-9,-1,-4,-3],[-3,3,-4,2,-4],[4,-2,-1,-1,-5],[-9,5,1,7,2],[-2,-4,4,-4,6],[1,-7,-8,6,-7],[-2,-8,-8,-10,-8],[-6,-9,5,-8,2],[-6,5,7,-2,-5],[-6,7,3,-6,-10],[-7,-5,5,-2,7],[-1,6,-6,1,8],[7,4,-9,-9,10]],[[-9,6,-5,-2,-7],[10,3,4,-1,-7],[3,-2,-10,-4,7],[-10,2,8,8,6],[-2,3,-4,-3,4],[-3,-4,3,-9,-2],[-4,-1,-8,-6,3],[-4,-10,-8,-6,9],[-3,-4,-1,-8,8],[5,4,-8,8,-1],[-8,6,3,-2,7],[6,8,-4,9,-9],[3,8,-1,10,-2],[10,7,8,10,-9],[-3,-4,7,10,-1]],[[4,5,3,-8,-5],[5,8,1,-4,-8],[-7,-5,4,10,-9],[-2,-9,3,-5,7],[1,7,-6,7,-1],[-2,-6,1,1,3],[-4,-1,4,-5,4],[8,5,-7,4,-2],[9,-3,-1,4,-6],[9,1,-1,3,3],[7,7,7,-5,-7],[5,-1,10,3,-5],[8,6,-6,-6,4],[-8,-3,5,8,10],[-8,-1,5,2,-5]],[[6,-1,-5,-1,5],[2,-8,-10,-4,4],[-6,-1,3,10,4],[4,-1,2,3,-8],[-1,-6,7,4,6],[7,4,9,-6,5],[-4,-9,6,-10,-7],[9,-1,8,1,-9],[-4,9,4,5,6],[-9,-9,-5,10,-5],[-6,-6,7,4,8],[5,2,7,-1,-8],[-10,-7,-5,-5,-10],[1,-3,2,1,-10],[-1,-10,-8,-1,-7]],[[5,-5,-10,7,-5],[-6,-10,5,2,9],[-6,6,7,1,2],[4,9,2,-10,-5],[-3,-3,-3,-6,-6],[-7,-9,-8,-9,-4],[-9,10,10,7,10],[-4,6,-7,-6,4],[-10,-4,-3,7,1],[3,-10,10,-5,-9],[-1,-8,-10,6,8],[10,8,-8,8,3],[7,-1,-10,-6,-10],[-10,7,9,-2,5],[-4,9,1,-5,3]],[[10,5,-8,4,10],[10,-8,9,-6,2],[-1,8,-8,-7,10],[2,-1,-3,4,4],[3,5,1,-1,-2],[-8,-9,5,5,-2],[-4,-5,3,-6,5],[-10,-2,-2,-6,-9],[7,-3,4,-8,2],[6,-6,10,8,6],[-6,6,9,2,-2],[-6,-8,5,-9,-1],[-3,-6,7,-8,-4],[2,1,1,-5,-7],[-3,6,-4,-5,4]],[[-3,-2,-7,4,8],[2,-9,8,-2,10],[2,10,9,10,6],[-10,2,9,3,-5],[-1,-2,9,-8,-7],[-10,-6,-8,6,-8],[2,3,-10,-3,6],[-7,-6,-7,1,6],[8,8,8,-8,3],[-5,4,1,10,8],[-6,3,3,9,-5],[-3,-2,-8,6,3],[4,8,-7,1,-5],[-1,3,2,-4,-2],[-5,4,8,6,-8]]], dtype = "uint64")#candidate|1555|(8, 15, 5)|const|uint64
bop_1556 = relay.multiply(var_1554.astype('uint64'), relay.reshape(const_1555.astype('uint64'), relay.shape_of(var_1554))) # shape=(8, 15, 5)
var_1559 = relay.var("var_1559", dtype = "uint64", shape = (8, 15, 5))#candidate|1559|(8, 15, 5)|var|uint64
bop_1560 = relay.not_equal(const_1555.astype('bool'), relay.reshape(var_1559.astype('bool'), relay.shape_of(const_1555))) # shape=(8, 15, 5)
output = relay.Tuple([bop_1556,bop_1560,])
output2 = relay.Tuple([bop_1556,bop_1560,])
func_1582 = relay.Function([var_1554,var_1559,], output)
mod['func_1582'] = func_1582
mod = relay.transform.InferType()(mod)
mutated_mod['func_1582'] = func_1582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1582_call = mutated_mod.get_global_var('func_1582')
var_1584 = relay.var("var_1584", dtype = "uint64", shape = (8, 15, 5))#candidate|1584|(8, 15, 5)|var|uint64
var_1585 = relay.var("var_1585", dtype = "uint64", shape = (8, 15, 5))#candidate|1585|(8, 15, 5)|var|uint64
call_1583 = func_1582_call(var_1584,var_1585,)
output = call_1583
func_1586 = relay.Function([var_1584,var_1585,], output)
mutated_mod['func_1586'] = func_1586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1812 = relay.var("var_1812", dtype = "int64", shape = ())#candidate|1812|()|var|int64
var_1813 = relay.var("var_1813", dtype = "int64", shape = (11, 8, 1))#candidate|1813|(11, 8, 1)|var|int64
bop_1814 = relay.less_equal(var_1812.astype('bool'), var_1813.astype('bool')) # shape=(11, 8, 1)
bop_1818 = relay.floor_mod(var_1812.astype('float64'), var_1813.astype('float64')) # shape=(11, 8, 1)
func_1242_call = mod.get_global_var('func_1242')
func_1245_call = mutated_mod.get_global_var('func_1245')
const_1826 = relay.const([6.264932,-3.603826,3.540224,3.145402,6.840859,8.321220,-6.795063,2.816234,-4.564039,0.492803,-7.428355,-1.127528,-8.190597,5.455947,-4.157182,-2.508491,-6.026212,-1.346774,-8.020980,-6.694811,2.386418,-0.471483,6.617992,3.986211,-2.971067,-9.333976,-9.218607,-0.417931,1.855096,-7.248289,-0.637990,6.348508,8.748306,4.714668,9.311544,9.609892,1.083075,-0.930913,-8.866329,7.522543,4.535897,7.975775,-7.323195,-3.027771,3.465457,4.820810,0.040020,-8.704334,-8.770636,7.470287,-8.909001,5.385037,-6.541659,-3.345003,2.256677,-5.195736,4.564508,-0.671828,6.189157,7.554897,5.513215,2.253971,-3.435684,6.964883,7.488102,-9.381565,-2.933357,8.553261,-6.121891,5.369444,8.398762,-1.131243,9.169746,-2.214482,5.332996,-8.467645,-1.241969,-3.736176,7.890711,-4.839361,-3.287129,-0.282890,-1.156689,0.712429,3.137751,-3.168350,-4.218612,3.539148,7.617277,0.920355,-9.900663,0.228038,0.405775,5.828672,9.011654,6.098187,-2.390998,-8.963644,1.283646,2.653174,-3.373605,-7.119925,-5.238722,3.091722,7.624285,7.058517,-8.400034,2.887739,-8.703821,-1.450196,-1.839398,7.795759,-5.384993,9.365328,0.936555,-4.843519,-2.872940,1.274895,8.312655,-7.350127,1.043023,-5.412419,-4.440430,7.285293,-0.249701,-5.487254,2.018523,8.774738,-6.334388,3.261869,-2.671345,7.685906,-3.900079,6.064011,6.039541,1.230341,5.386398,-8.584282,5.458147,-4.785393,-1.986970,-3.076899,-4.795728,9.341606,-4.667187,6.543943,-3.466734,7.747299,3.985140,-6.672331,-4.958651,4.400040,1.435884,5.432850,7.175205,-2.611472,-3.022688,2.254394,1.665612,6.613632,8.718092,-1.256484,-8.119862,4.464851,-4.575072,-9.884407,0.161495,0.013300,-6.251732,6.416827,-9.895476,4.139283,-8.639254,-5.965514,9.067175,5.937293,-2.618250,-5.796528,0.692264,-8.826813,-0.691373,-5.936908,-5.785075,-3.713218,-3.558176,-9.754366,-0.623405,3.468021,-6.674698,-0.115309,-1.123340,-7.792990,8.586924,6.685100,-2.572462,-7.766241,-1.464292,-0.603954,-9.492197,1.820303,-0.750455,-9.977077,8.616853,0.188615,7.942957,8.099421,4.428932,-6.702518,6.406939,2.535110,7.871306,-7.378311,-5.756193,-3.153829,8.083436,7.344718,2.608856,-7.953572,-3.806221,-5.211450,2.875659,8.964875,2.564385,7.861100,0.265079,9.455027,9.503283,-2.713121,-2.930367,-4.932282,1.587352,-6.112002,4.658530,8.370051,-5.021401,1.101669,-5.115070,0.684679,-4.495070,-8.619298,1.703593,-3.746592,1.357889,0.619694,4.173547,1.852651,4.803251,5.377118,3.806944,-9.688341,-1.106819,2.919654,-4.544698,5.528662,-0.761517,-4.086745,7.211500,-1.017303,-6.567163,-1.499298,0.330459,-2.979923,8.656670,-2.344085,-1.771283,6.886996,-9.745132,7.302887,3.072534,-3.488606,-5.934593,7.775279,7.075577,-9.349760,5.781270,-1.393071,7.027027,-5.015381,-0.009485,4.909775,0.441483,-0.785939,8.424322,5.231454,-5.044479,-2.216272,-5.063349,-8.802313,4.041918,2.034737,2.335646,-3.599712,-1.042360,-0.842281,7.357848,-5.132994,-0.474494,-7.009808,-4.316165,-9.386116,2.310084,-7.238458,-8.076923,-0.590125,4.898652,8.932474,4.544852,0.449236,-7.567951,-6.028559,3.770923,-2.775486,9.131754,-8.919338,-0.407119,-3.487649,4.233475,-0.954193,8.351065,-3.812470,-9.327299,-7.848385,5.224040,-5.763416,1.687570,3.451616,9.351944,-5.918632,-0.279760,-8.746774,6.224682,0.157666,1.533227,-7.546540,-6.423903,-3.262146,-6.855432,-3.224290,-9.172122,8.371781,4.298348,9.570041,3.295762,-3.600996,-9.858745,-6.054064,0.344100,-2.573325,8.830107,-5.787106,9.430817,2.795309,2.281596,1.661329,-3.339849,3.091129,9.373492,-1.106072,-5.617947,4.208538,5.599129,-2.856743,4.133277,-5.631941,8.516696,-7.752552,2.760565,3.497613,0.826442,-5.051149,6.229884,2.927505,-4.209046,2.415802,-1.300824,3.401678,6.198924,4.450322,5.482643,4.852330,-1.301215,8.999922,9.025241,-6.879674,-6.327964,-6.500242,-9.765504,-5.766309,0.772586,2.037171,-3.966061,-1.443178,-6.390258,-1.866878,7.742600,-5.826384,5.022475,6.188957,-1.333759,6.742040,-9.597541,7.932585,-4.539398,-7.419541,4.152785,5.510731,-3.504317,5.387257,6.911605,-6.087779,-7.518056,-4.139953,2.188422,-4.342387,0.770394,-7.714231,-4.518387,-7.868252,9.368510,-0.495845,-9.575436,5.226498,1.668162,9.472744,-3.345663,2.689102,4.937485,6.638794,8.378561,-1.826209,9.344038,3.363513,-2.374103,-0.312083,-2.240006,2.618657,2.432419,6.429106,5.736069,2.781578,3.256905,-6.717589,3.017816,0.567676,-4.914284,6.478200,-2.900136,5.731271,1.449472,-4.381981,-1.831054,-7.797097,-0.173243,1.603176,3.058223,-0.766846,1.487460,0.315939,-0.111232,-7.118214,-3.898076,-3.011658,-3.500788,-7.512936,-2.583992,7.802892,-2.321909,-3.375559,7.619714,-9.022900,-6.714017,8.766304,-8.074822,-6.997877,3.070758,4.000554,7.201519,-3.746976,0.880991,6.946037,-5.638612,-0.842436,-2.803101,2.311709,-7.352511,-3.944640,-6.904293,6.956302,-3.745229,4.052130,-8.641007,-3.604070,1.379161,8.110782,7.879720,-6.218424,3.824504,-0.952328,5.125707,6.932587,9.825078,-5.424399,-1.405619,-3.843780,-3.483805,-5.741380,-6.677630,-5.337269,-3.720849,-4.619817,-8.265930,7.122513,-5.812849,5.560434,3.997010,9.852465,7.486798,6.891922,5.525571,-8.186363,5.308898,-5.641733,2.436107,8.254517,-2.742808,3.302008,-3.475145,-1.733432,-4.557580,-3.667714,3.390934,3.913938,-1.586227,-6.335485,-8.673448,4.451389,2.255462,-2.980521,-2.570206,-3.363293,0.289639,3.953303,-8.847671,-3.358584,7.518942,2.177164,3.159245,3.718395,5.548222,7.562318,6.596425,3.220968,6.869950,2.097268,-8.120607,-6.786891,-8.044767,0.371060,-2.824879,7.694506,1.731541,-6.269092,0.421827,-5.468358,7.808434,0.016391,-5.038518,9.100729,-3.249987,7.642116,2.971444,-7.177143,3.680961,-8.000181,-4.000193,8.166908,-4.152151,-3.890356,-7.539234,-6.494288,-2.108714,-4.876447,2.778477,-1.586478,-4.595614,-6.563966,-6.196272,2.936423,-9.428209,0.737346,-1.135951,-7.458242,-3.925438,-7.894477,2.154486,-5.198488,-2.255103,-3.425488,-1.383790,9.171008,-8.300921,-9.335692,4.977705,-4.332291,-0.036870,-0.597234,1.164597,1.977358,6.585419,-9.298501,8.132492,-7.516338,2.946285,3.125962,-5.968495,-1.955823,-8.394400,5.518925,5.886544,7.665164,3.132895,-1.037302,9.195674,-5.223864,4.365553,8.483958,1.602681,5.581690,2.495070,-9.220976,0.046907,-3.692731,-6.611255,1.988529,-2.741070,3.143732,-9.271198,-8.430892,9.335158,-7.387164,4.173574,9.419807,-2.719962,6.909582,2.565807,0.164934,-3.394874,-4.882484,7.803441,-1.716413,2.075240,9.491153,2.086821,5.716891,-3.394169,-9.149459,6.984370,-6.611839,-7.809180,2.706146,5.879237,-4.787483,2.043736,-6.969508,6.293109,-4.867408,-3.012088,-8.944738,5.528919,9.916412,-0.178539,9.257156,6.472344,2.897547,2.931642,-7.319360,3.930532,-2.425043,1.260965,0.527639,-3.601491,6.496288,7.559821,-0.200914,8.626432,-9.821175,1.704464,-3.203208,5.370770,-1.301826,-0.465170,6.605223,-1.052493,-7.673914,7.974095,-0.396791,1.396704,-3.035445,7.479799,3.322076,-5.829745,-9.014618,3.916326,8.634564,-9.187696,3.206944,-5.517364,-1.240667,4.875238,-3.829598,-5.289415,-6.599740,5.850900,-4.610268,3.572839,1.521190,0.280037,-8.853978,-4.575314,3.613124,3.484331,-1.623546,-5.156382,-6.694928,1.203586,-5.347083,7.250692,-3.930723,6.363956,-4.636307,-0.159705,3.099859,4.889117,4.807806,4.654811,5.129803,0.962329,-5.780429,-1.951304,2.530717,5.136436,-5.995100,-8.567815,7.835356,2.942621,0.193160,-3.662328,-5.179740,-2.975125,8.775909,-6.455088,-2.136958,-8.518026,5.953042,-6.718242,6.011323,-6.759864,-1.271039,-6.971990,0.601709,0.730239,3.455439,8.213650,-3.564070,5.139455,1.988509,-8.737786,-6.886618,-8.633087,7.855567,-6.413592,-5.587005,-5.446839,-1.530830,5.466604,2.266254,-7.742480,-7.509854,-6.792945,1.707056,-2.765524,7.809148,-6.574463,-2.255875,-7.754092,9.413199,-6.461422,1.171848,1.568735,6.059889,2.638816,7.390966,1.792523,7.924731,-6.330680,-9.611748,7.603152,0.727305,4.211749,-3.624953,-3.065975,-5.538680,-2.692049,2.726269,0.608740,-1.189630,2.001804,-9.709030,6.441122,-9.110518,-7.282257,-9.633778,6.747116,-8.701421,4.508722,-7.611045,-0.952284,-9.944052,-8.882882,-3.613101,-4.109747,3.496598,7.784176,7.426735,7.477161,-5.664461,-1.764758,-0.703685,8.508114,-6.292687,1.196861,-4.986865,6.168831,-0.134430,-4.976903,-4.356705,6.490284,8.636384,3.232658,9.675987,-3.592685,0.104273,3.860809,-0.129467,-9.139637,1.449962,3.506901,0.126388,6.467917,1.534553,7.718695,-4.118158,9.244439,3.228912,-4.519730,0.674994,-3.100262,0.722051,-2.697043,-4.984632,-7.005831,5.660201,3.966503,9.684717,-9.278137,6.374052,-7.662786,4.688172,3.734962,-3.857680,2.372108,-8.788846,-4.385516,8.425874,-1.566466,6.434432,-3.925265,-9.934817,-1.878148,-5.620689,-5.173873,-2.283855,4.159903,-7.207105,-1.935419,9.636444,5.628460,3.785778,3.578326,-6.949226,6.100350,4.470241,-8.788792,9.145040,7.610272,-8.916481,4.615112,-5.123939,-8.286644,4.021948,3.755247,-6.586676,1.187343,6.680578,7.136512,-8.786687,0.072106,-6.259800,7.840439,-4.665687,3.061464,9.921939,2.700829,9.598402,-2.105438,-6.518378,8.968087,-9.662751,7.457885,-1.270631,-6.913480,1.468179,-7.244964,0.490787,7.286625,-5.544355,-5.855525,-1.542740,1.723704,9.433289,-1.075289,6.454829,4.274048,-7.597058,4.773921,2.412099,1.829322,-3.234031,-7.244636,-5.609535,8.389410,-1.916011,-7.942122,-6.350257,-4.724374], dtype = "float64")#candidate|1826|(945,)|const|float64
call_1825 = relay.TupleGetItem(func_1242_call(relay.reshape(const_1826.astype('float64'), [9, 15, 7])), 1)
call_1827 = relay.TupleGetItem(func_1245_call(relay.reshape(const_1826.astype('float64'), [9, 15, 7])), 1)
func_1460_call = mod.get_global_var('func_1460')
func_1464_call = mutated_mod.get_global_var('func_1464')
const_1833 = relay.const([[-7.849567],[6.513822],[8.642737],[-9.190437],[-3.129523],[-8.965967],[6.139417],[-4.135730],[7.423500],[-1.434598],[-0.024506],[0.718465],[-8.227082],[1.322229],[-7.838306],[1.904120],[7.387325],[3.065263],[-1.341029],[-6.219621],[-2.504313],[-8.912299],[2.700009],[-9.331910],[8.863893],[-1.598215],[2.088585],[-1.069798],[-2.517051],[0.447379],[-8.663399],[7.001182],[3.634300],[-3.461670],[1.060118],[5.199020],[-3.808335],[1.920098],[-7.527785],[-8.389234],[-8.162499],[7.013607],[-0.294493],[-1.281005],[4.133542],[3.579321],[-0.049552],[5.240691],[2.376263],[0.994548],[-3.875483],[3.615587],[-4.692273],[-4.546300],[-7.527114],[-6.361186],[4.392513],[-9.198623],[-0.864681],[5.253933],[-4.674512],[3.527809],[1.722533],[4.278605],[-2.804248],[9.942736],[3.672229],[3.289914],[-6.646852],[-3.802173],[-6.232018],[3.661014],[-5.921418],[7.325814],[-9.582101],[-5.913425],[6.585570],[1.460870],[-7.475586],[-4.068310],[6.134662],[5.797310],[-2.368455],[-5.668675],[-0.297784],[1.440197],[-3.941969],[-6.568000],[-4.846785],[0.153025],[-0.342875],[-1.477630],[8.129869],[3.778592],[-3.279514],[-5.838439],[1.556833],[-4.727999],[3.166856],[-5.228413],[1.597288],[-0.651283],[2.439237],[-8.908153],[9.585059],[-1.226521],[4.556931],[4.479830],[4.598270],[-1.020794],[-5.560279],[5.171569],[-6.819495],[2.934911],[7.292171],[0.177099],[7.508828],[-4.470024],[-8.039858],[7.231617],[-8.604386],[-8.664561],[-8.932803],[-0.636409],[-5.591376],[7.166901],[9.310935],[-9.831624],[-2.117009],[5.649670],[-3.307732],[-2.167899],[3.953790],[-4.998154],[6.478972],[0.846929],[6.281346],[3.247654],[8.843032],[8.918802],[-9.270531],[1.256244],[-0.623654],[0.808689],[9.241339],[-0.918204],[9.542403],[-9.487518],[3.552374],[-2.184367],[-8.446638],[-3.988560],[2.451685],[5.356799],[9.424111],[-3.124625],[3.025693],[1.851854],[-3.729334],[-3.290468],[-7.641849],[5.042824],[0.853305],[-6.021568],[-2.336920],[0.266287],[-1.078036],[-5.850890],[2.809700],[-9.667739],[3.794074],[-6.880717],[-3.521592],[-1.670433],[-1.818593],[4.326535],[0.031523],[-6.112802],[-7.983491],[6.983394],[7.394217],[1.456750],[-0.124664],[-9.055220],[0.940463],[-0.415906],[9.990436],[5.735770],[-1.095111],[-2.588831],[-2.152946],[6.355187],[-0.290278],[-7.408322],[-4.796643],[9.449241],[-2.635065],[7.066267],[4.496851],[-7.993092],[8.549574],[5.613770],[2.339116],[-2.170453],[-9.908495],[-6.506081],[-0.004758],[-9.921808],[2.105920],[8.169540],[-9.499548],[0.925292],[1.986022],[6.149619],[-4.388580],[3.520300],[-8.194968],[8.277939],[7.464959],[8.543480],[-5.798068],[-8.361875],[-9.503395],[-4.979868],[5.488374],[2.180870],[-8.217912],[-1.681251],[-9.159475],[-8.324216],[8.661326],[-1.681565],[-7.214400],[0.027321],[5.415521],[6.623611],[-2.235641],[9.296192],[-8.819257],[-8.097181],[3.638932],[3.640688],[8.031644],[-6.262321],[3.647121],[-1.746617],[-3.311978],[-0.717335],[-2.671615],[1.107117],[8.467160],[-0.539361],[-9.683769],[-2.144083],[4.345988],[3.015834],[-4.837521],[-2.685803],[-3.387053],[5.584763],[-0.702599],[7.523314],[-7.421805],[5.530771],[1.507367],[5.978367],[-7.360884],[6.716080],[4.192111],[5.965951],[-8.812210],[6.419185],[-6.282716],[-1.112011],[-2.163209],[-8.710456],[-0.733111],[-7.968655],[-8.316318],[5.256219],[-2.483811],[-6.807675],[-1.721613],[7.139137],[1.200435],[-7.148334],[8.177572],[-7.055613],[-9.106311],[3.843364],[7.537064],[3.193461],[9.751373],[-2.926605]], dtype = "float64")#candidate|1833|(294, 1)|const|float64
call_1832 = func_1460_call(relay.reshape(const_1833.astype('float64'), [7, 3, 14]), relay.reshape(const_1833.astype('float64'), [7, 3, 14]), )
call_1834 = func_1460_call(relay.reshape(const_1833.astype('float64'), [7, 3, 14]), relay.reshape(const_1833.astype('float64'), [7, 3, 14]), )
func_1538_call = mod.get_global_var('func_1538')
func_1540_call = mutated_mod.get_global_var('func_1540')
const_1844 = relay.const([-9,-7,10,6,-4,-6,5,-3,2,3,2,1,-1,-3,4,-4,-4,7,-8,9,-1,-3,3,-1,1,1,2,-3,2,5,-4,1,3,2,-1,1,8,-8,10,-7,3,-6,2,8,-3,-2,-4,-5,-8,-8,5,-1,-5,-3,-8,8,10,4,1,-6,7,-3,10,7,2,9,5,2,8,-7,-8,6,8,10,4,-8,-5,-3,9,-4,-5,2,-4,-10,-2,9,-1,-7,-8,10,2,-4,-9,1,7,2,-2,-10,9,-9,8,-2,-6,9,6,8,7,5,9,5,3,5,-2,-2,-6,3,-2,4,3,-1], dtype = "uint64")#candidate|1844|(120,)|const|uint64
call_1843 = relay.TupleGetItem(func_1538_call(relay.reshape(const_1844.astype('uint64'), [6, 2, 10])), 0)
call_1845 = relay.TupleGetItem(func_1540_call(relay.reshape(const_1844.astype('uint64'), [6, 2, 10])), 0)
bop_1851 = relay.logical_and(call_1825.astype('bool'), var_1812.astype('bool')) # shape=(9, 15, 7)
bop_1854 = relay.logical_and(call_1827.astype('bool'), var_1812.astype('bool')) # shape=(9, 15, 7)
func_1582_call = mod.get_global_var('func_1582')
func_1586_call = mutated_mod.get_global_var('func_1586')
var_1880 = relay.var("var_1880", dtype = "uint64", shape = (600,))#candidate|1880|(600,)|var|uint64
call_1879 = relay.TupleGetItem(func_1582_call(relay.reshape(var_1880.astype('uint64'), [8, 15, 5]), relay.reshape(var_1880.astype('uint64'), [8, 15, 5]), ), 1)
call_1881 = relay.TupleGetItem(func_1586_call(relay.reshape(var_1880.astype('uint64'), [8, 15, 5]), relay.reshape(var_1880.astype('uint64'), [8, 15, 5]), ), 1)
output = relay.Tuple([bop_1814,bop_1818,const_1826,call_1832,const_1833,call_1843,const_1844,bop_1851,call_1879,var_1880,])
output2 = relay.Tuple([bop_1814,bop_1818,const_1826,call_1834,const_1833,call_1845,const_1844,bop_1854,call_1881,var_1880,])
func_1888 = relay.Function([var_1812,var_1813,var_1880,], output)
mod['func_1888'] = func_1888
mod = relay.transform.InferType()(mod)
mutated_mod['func_1888'] = func_1888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mutated_mod.get_global_var('func_1888')
var_1890 = relay.var("var_1890", dtype = "int64", shape = ())#candidate|1890|()|var|int64
var_1891 = relay.var("var_1891", dtype = "int64", shape = (11, 8, 1))#candidate|1891|(11, 8, 1)|var|int64
var_1892 = relay.var("var_1892", dtype = "uint64", shape = (600,))#candidate|1892|(600,)|var|uint64
call_1889 = func_1888_call(var_1890,var_1891,var_1892,)
output = call_1889
func_1893 = relay.Function([var_1890,var_1891,var_1892,], output)
mutated_mod['func_1893'] = func_1893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2342 = relay.var("var_2342", dtype = "uint64", shape = (11, 8, 10))#candidate|2342|(11, 8, 10)|var|uint64
var_2343 = relay.var("var_2343", dtype = "uint64", shape = (11, 8, 10))#candidate|2343|(11, 8, 10)|var|uint64
bop_2344 = relay.less(var_2342.astype('bool'), relay.reshape(var_2343.astype('bool'), relay.shape_of(var_2342))) # shape=(11, 8, 10)
output = bop_2344
output2 = bop_2344
func_2347 = relay.Function([var_2342,var_2343,], output)
mod['func_2347'] = func_2347
mod = relay.transform.InferType()(mod)
var_2348 = relay.var("var_2348", dtype = "uint64", shape = (11, 8, 10))#candidate|2348|(11, 8, 10)|var|uint64
var_2349 = relay.var("var_2349", dtype = "uint64", shape = (11, 8, 10))#candidate|2349|(11, 8, 10)|var|uint64
output = func_2347(var_2348,var_2349,)
func_2350 = relay.Function([var_2348,var_2349,], output)
mutated_mod['func_2350'] = func_2350
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2444 = relay.var("var_2444", dtype = "float64", shape = (15, 5, 16))#candidate|2444|(15, 5, 16)|var|float64
var_2445 = relay.var("var_2445", dtype = "float64", shape = (15, 5, 16))#candidate|2445|(15, 5, 16)|var|float64
bop_2446 = relay.floor_mod(var_2444.astype('float64'), relay.reshape(var_2445.astype('float64'), relay.shape_of(var_2444))) # shape=(15, 5, 16)
output = relay.Tuple([bop_2446,])
output2 = relay.Tuple([bop_2446,])
func_2460 = relay.Function([var_2444,var_2445,], output)
mod['func_2460'] = func_2460
mod = relay.transform.InferType()(mod)
var_2461 = relay.var("var_2461", dtype = "float64", shape = (15, 5, 16))#candidate|2461|(15, 5, 16)|var|float64
var_2462 = relay.var("var_2462", dtype = "float64", shape = (15, 5, 16))#candidate|2462|(15, 5, 16)|var|float64
output = func_2460(var_2461,var_2462,)
func_2463 = relay.Function([var_2461,var_2462,], output)
mutated_mod['func_2463'] = func_2463
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2617 = relay.const([[[2.973398,-4.807851,6.826010,1.678702],[2.961761,-7.442768,5.413309,-9.963174],[7.943290,-9.679375,-9.510350,-6.826329],[4.365266,4.043803,1.037954,3.289574],[9.422546,3.030113,9.834128,-8.197032],[6.241136,-8.487917,-8.430159,-5.202314],[-2.622529,-5.115643,2.724183,-6.304048]],[[-4.072717,-8.649107,-1.611598,8.667743],[9.941655,-4.083883,8.625651,7.680645],[8.639700,5.179176,-7.697153,-0.795466],[-2.349107,-1.885998,0.673717,-2.749420],[-7.415219,5.219788,2.826937,-1.879035],[1.041767,0.269537,-8.743983,9.888015],[-1.642902,8.378812,6.221641,0.668901]],[[-3.649893,1.530111,-1.902976,-4.811062],[7.066086,-6.903974,-5.296762,7.099348],[1.182649,-4.493363,-5.449480,-0.087845],[7.543415,4.593703,1.229539,-1.342623],[-8.775119,6.159392,-8.454973,-6.103910],[1.116526,-3.733807,6.544045,7.228702],[-4.671296,-3.423622,8.079467,-9.493570]],[[6.838323,9.109554,-6.742261,-0.430741],[-4.636166,-3.387126,0.703590,-2.548760],[9.041916,-0.559400,-6.850816,5.678113],[-0.329579,2.773781,-0.511446,-6.213373],[-8.894373,-0.096657,4.733628,7.460836],[-1.227073,-7.891634,-0.179903,-4.659819],[9.688478,2.042194,-2.691317,4.882515]],[[-9.695822,1.445437,-4.668151,-3.267698],[6.008903,1.156047,-2.683670,-6.422811],[-6.349888,-7.994886,5.400915,-6.733208],[-6.542324,9.525170,6.291367,4.500652],[9.736541,-8.712792,-1.286447,-0.698926],[-7.486663,-1.834902,2.961635,0.531194],[-7.722933,-3.985605,4.576313,-7.765430]],[[-6.331828,-8.056581,-4.821295,-2.789271],[-7.027535,3.853314,8.103838,5.787820],[-1.508074,-8.918200,-3.547606,6.305857],[-9.598491,6.443797,7.235933,3.638353],[1.775138,7.451699,8.522420,2.613390],[-8.704582,-1.295197,7.173775,9.179432],[4.121974,4.636731,-2.998585,-5.258306]],[[-7.063017,-9.179560,-3.918873,-1.323058],[1.636330,7.627654,6.253179,5.144603],[-9.117339,9.984700,3.693170,0.095946],[4.412803,-8.782716,3.692553,-5.165531],[-8.113084,2.255988,-8.546817,-9.549970],[0.557545,-3.662699,9.033750,5.231606],[6.439467,6.292918,1.371586,3.816200]]], dtype = "float32")#candidate|2617|(7, 7, 4)|const|float32
uop_2618 = relay.acos(const_2617.astype('float32')) # shape=(7, 7, 4)
output = uop_2618
output2 = uop_2618
func_2630 = relay.Function([], output)
mod['func_2630'] = func_2630
mod = relay.transform.InferType()(mod)
output = func_2630()
func_2631 = relay.Function([], output)
mutated_mod['func_2631'] = func_2631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_2639 = func_2630_call()
call_2640 = func_2630_call()
uop_2646 = relay.log(call_2639.astype('float32')) # shape=(7, 7, 4)
uop_2648 = relay.log(call_2640.astype('float32')) # shape=(7, 7, 4)
output = uop_2646
output2 = uop_2648
func_2656 = relay.Function([], output)
mod['func_2656'] = func_2656
mod = relay.transform.InferType()(mod)
output = func_2656()
func_2657 = relay.Function([], output)
mutated_mod['func_2657'] = func_2657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_2681 = func_2630_call()
call_2682 = func_2630_call()
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_2693 = func_2630_call()
call_2694 = func_2630_call()
output = relay.Tuple([call_2681,call_2693,])
output2 = relay.Tuple([call_2682,call_2694,])
func_2702 = relay.Function([], output)
mod['func_2702'] = func_2702
mod = relay.transform.InferType()(mod)
output = func_2702()
func_2703 = relay.Function([], output)
mutated_mod['func_2703'] = func_2703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_2808 = func_2630_call()
call_2809 = func_2630_call()
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_2813 = func_2630_call()
call_2814 = func_2630_call()
var_2824 = relay.var("var_2824", dtype = "float32", shape = (7, 7, 4))#candidate|2824|(7, 7, 4)|var|float32
bop_2825 = relay.divide(call_2813.astype('float64'), relay.reshape(var_2824.astype('float64'), relay.shape_of(call_2813))) # shape=(7, 7, 4)
bop_2828 = relay.divide(call_2814.astype('float64'), relay.reshape(var_2824.astype('float64'), relay.shape_of(call_2814))) # shape=(7, 7, 4)
uop_2830 = relay.erf(call_2808.astype('float32')) # shape=(7, 7, 4)
uop_2832 = relay.erf(call_2809.astype('float32')) # shape=(7, 7, 4)
output = relay.Tuple([bop_2825,uop_2830,])
output2 = relay.Tuple([bop_2828,uop_2832,])
func_2842 = relay.Function([var_2824,], output)
mod['func_2842'] = func_2842
mod = relay.transform.InferType()(mod)
mutated_mod['func_2842'] = func_2842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2843 = relay.var("var_2843", dtype = "float32", shape = (7, 7, 4))#candidate|2843|(7, 7, 4)|var|float32
func_2842_call = mutated_mod.get_global_var('func_2842')
call_2844 = func_2842_call(var_2843)
output = call_2844
func_2845 = relay.Function([var_2843], output)
mutated_mod['func_2845'] = func_2845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_2875 = relay.TupleGetItem(func_2702_call(), 1)
call_2876 = relay.TupleGetItem(func_2703_call(), 1)
func_1582_call = mod.get_global_var('func_1582')
func_1586_call = mutated_mod.get_global_var('func_1586')
const_2891 = relay.const([3,4,6,-6,-9,3,7,-3,-6,5,-4,-6,5,4,-2,-3,-5,-3,-2,2,-7,7,10,1,5,-6,5,9,-1,-3,-10,-8,-3,7,-7,9,6,8,-7,2,8,-10,-9,3,4,4,2,10,-2,-3,6,5,-9,7,-5,-8,10,-4,-9,-10,-4,-10,8,-4,-8,1,10,-7,-2,-6,5,8,4,-4,-2,7,-3,-2,8,3,-4,10,-2,-4,-1,-1,-4,4,4,10,-4,-2,3,-10,-2,7,-7,2,3,-8,-6,-1,-10,6,-2,-8,3,-5,-3,-9,8,-3,-2,8,2,-10,-3,-9,-5,-4,3,-5,-3,-5,7,-3,2,2,2,-1,-4,-3,1,9,-8,3,9,8,-2,10,10,4,1,8,-6,10,-8,-6,-6,5,1,5,-9,4,7,1,-9,-1,-1,-6,8,6,10,4,-8,-1,-6,1,-9,-7,8,6,-2,-8,8,1,-1,-1,-10,8,-4,9,5,-7,6,5,-3,1,-9,-10,4,-2,-10,-7,-10,8,-8,-5,-8,9,8,8,-6,7,-10,2,-10,-1,9,-3,-7,-2,10,9,-4,2,2,-5,10,4,1,-6,-2,3,8,-10,-9,-1,-4,6,9,-9,-9,1,-6,-1,-3,-10,-7,10,-1,2,5,-8,4,-6,-4,-5,-1,4,1,6,4,3,-3,9,-3,5,-6,8,6,2,1,3,-4,-1,4,-1,5,2,-6,3,1,9,10,-7,1,6,-7,-4,-8,7,4,10,3,9,-10,9,10,-9,5,-7,-5,8,2,6,1,-1,3,-4,1,8,-6,5,6,6,-1,-8,8,10,-2,-9,10,-7,1,-1,-5,-6,-7,8,-6,-5,-1,-3,2,8,-8,8,9,2,7,4,2,6,2,5,10,7,6,10,-3,-4,5,10,-7,4,4,7,-10,9,7,-2,-3,-10,-6,7,-9,2,-2,10,3,-3,-3,-6,1,5,-7,-5,-5,-1,5,2,-8,-8,5,8,-3,6,1,-9,7,-10,-10,-7,10,-5,4,1,-10,-2,8,-2,3,4,-1,-6,-6,3,1,-8,5,-8,-9,-3,-7,-3,-7,3,-4,-3,10,1,4,-2,1,-6,3,5,2,-10,-3,3,9,-9,4,6,-9,-2,1,10,1,-8,1,-6,-3,1,1,-5,1,-3,-4,-1,-6,-8,4,-10,-3,9,4,-6,-4,-3,2,-5,-2,9,7,-10,10,1,5,9,2,3,-5,-2,-7,-6,-5,-1,-9,-2,10,-3,-10,-2,-6,5,1,3,-7,7,-2,-3,3,-1,-6,-1,6,5,-8,3,10,-3,5,8,-3,-6,-5,-9,2,-3,4,5,9,6,-8,5,-6,-10,-6,-3,-3,-3,7,-1,3,-9,7,7,-3,5,-1,-1,9,-7,2,-6,-8,-5,1,6,-9,1,9,4,-10,-3,-9,7,4,5,-2,10,9,5,-3,-6,-5,10,4,6,-3,6,-1,-10,-4,10,-7,8,-10,-8,5,5,10,4,9,1,-6,4,7,-2,-10,-9,-7,-2,9,1,-5,-3,-2,-10,-6,-3,-7,2,2,5,10,-8,10,-5,-4,-4,-3,-4,4,7,5,6], dtype = "uint64")#candidate|2891|(600,)|const|uint64
call_2890 = relay.TupleGetItem(func_1582_call(relay.reshape(const_2891.astype('uint64'), [8, 15, 5]), relay.reshape(const_2891.astype('uint64'), [8, 15, 5]), ), 1)
call_2892 = relay.TupleGetItem(func_1586_call(relay.reshape(const_2891.astype('uint64'), [8, 15, 5]), relay.reshape(const_2891.astype('uint64'), [8, 15, 5]), ), 1)
output = relay.Tuple([call_2875,call_2890,const_2891,])
output2 = relay.Tuple([call_2876,call_2892,const_2891,])
func_2894 = relay.Function([], output)
mod['func_2894'] = func_2894
mod = relay.transform.InferType()(mod)
mutated_mod['func_2894'] = func_2894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mutated_mod.get_global_var('func_2894')
call_2895 = func_2894_call()
output = call_2895
func_2896 = relay.Function([], output)
mutated_mod['func_2896'] = func_2896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3011 = relay.var("var_3011", dtype = "int64", shape = (13, 7, 15))#candidate|3011|(13, 7, 15)|var|int64
var_3012 = relay.var("var_3012", dtype = "int64", shape = (13, 7, 15))#candidate|3012|(13, 7, 15)|var|int64
bop_3013 = relay.maximum(var_3011.astype('int64'), relay.reshape(var_3012.astype('int64'), relay.shape_of(var_3011))) # shape=(13, 7, 15)
const_3016 = relay.const([[[-9,-3,-7,10,-6,8,9,-6,-2,4,8,-7,9,8,-10],[1,9,4,6,2,8,-5,-4,9,6,1,-1,6,10,-1],[-9,10,10,-4,10,8,3,-5,6,10,9,8,2,9,-10],[-2,7,-4,8,3,3,-5,5,-3,6,-5,-7,-7,8,4],[-8,-8,-10,2,-2,5,-8,-2,-10,6,-10,-3,5,-9,5],[3,-10,8,3,8,-9,-1,-1,10,1,9,6,-10,1,-3],[3,-2,7,2,2,-7,3,7,-4,7,-4,7,-10,10,8]],[[-10,3,5,1,-2,-7,7,-9,-4,-3,8,-9,7,6,3],[-5,7,6,-8,9,-2,-8,-4,3,-2,9,4,-7,-7,10],[-6,-4,1,-7,7,-10,10,-7,-5,-2,-9,-6,-9,3,5],[8,8,-8,-2,-9,-9,-9,7,5,8,-10,10,-1,-1,7],[-10,9,8,7,2,-10,-7,4,-5,-5,-8,-2,-2,-9,7],[-9,10,-3,7,10,-9,4,7,7,5,-5,-10,-1,-7,-5],[6,-1,4,-7,-7,-4,-7,-10,4,-6,-1,4,-7,-4,-7]],[[1,3,-2,-8,-1,7,-1,4,9,-1,1,-10,-5,-1,-3],[8,-4,10,9,6,-4,7,-7,7,1,5,-9,-6,-1,-3],[-7,-2,1,8,1,2,-7,1,10,-10,-5,2,9,10,6],[4,-4,6,-8,7,-8,-5,10,9,-3,2,3,3,3,-1],[7,-4,-2,8,7,-9,6,10,-9,7,-7,9,-2,-1,8],[-4,7,-5,10,-1,1,-4,6,-5,2,-9,1,-10,-2,8],[4,2,9,2,-5,8,7,-4,-3,-1,1,5,-8,6,7]],[[8,5,-3,-1,6,2,-1,6,-3,4,-6,-2,8,-8,-9],[-6,4,-1,8,4,10,-9,-4,-6,-6,10,5,4,3,-6],[5,-1,5,-8,6,10,7,-4,-4,1,-1,1,5,9,-5],[10,9,9,-5,-9,-8,-6,-8,-9,3,2,10,-3,-9,3],[-9,6,-8,4,-3,-6,-3,9,5,6,7,-5,3,2,-10],[10,9,7,-2,-3,-5,-7,1,10,3,7,3,-8,8,10],[6,7,-7,-5,7,-3,6,1,-7,5,-6,-3,4,7,1]],[[2,-9,-5,3,-5,-9,-3,2,2,4,1,-2,8,6,-10],[5,6,-8,2,2,-6,-10,6,2,1,-7,-5,-9,-5,-10],[-1,6,3,-8,-9,-4,1,-1,-4,-5,8,-9,3,8,2],[4,5,1,-3,-2,-1,-5,-10,1,1,1,10,-4,10,10],[10,-5,3,2,7,8,4,-4,2,-10,-1,-4,-3,-3,-10],[4,10,-4,7,9,-4,6,2,2,-5,-9,-3,9,-1,10],[-9,1,4,-2,-5,-7,-8,9,-10,6,-3,-4,-7,-4,-7]],[[-2,-9,-6,10,3,9,-6,-10,-8,6,-8,10,7,6,8],[6,-2,2,-7,7,2,10,4,-3,-2,10,-7,-3,8,6],[3,-5,-6,-4,-1,-4,9,-1,4,9,2,-8,-8,3,-10],[-1,10,9,-2,10,-6,-6,-6,9,-10,8,6,9,6,-1],[1,-1,-7,-9,-5,-4,-3,7,-7,1,-5,-7,6,-6,-10],[-1,10,-1,4,7,9,2,4,-1,-6,-8,3,1,-3,-4],[-3,-3,-8,-1,4,-4,1,-3,5,-8,8,9,1,-3,-8]],[[-9,-1,-5,7,-1,-6,-4,-3,4,2,-9,7,-4,-10,5],[1,9,6,-2,10,4,10,-2,6,9,7,-2,7,-3,2],[-5,3,6,-7,-2,2,10,-5,-5,8,3,-3,10,-1,-7],[4,-8,5,6,-4,9,-6,10,-3,6,-8,-7,-6,-2,-1],[-1,-2,-9,5,-1,6,7,-10,7,1,-5,4,1,-8,-8],[2,1,8,-1,7,-4,-1,-7,5,4,-7,4,-10,3,7],[-6,-9,-3,1,2,5,3,6,-8,-3,-6,3,6,-8,-3]],[[8,-4,-8,-8,2,-7,7,-4,9,3,-8,6,10,7,9],[-2,1,6,6,10,-5,6,8,-2,-4,1,-5,-5,7,4],[4,-4,6,6,-5,10,5,1,-6,2,-9,1,-2,-10,8],[6,2,7,-2,-7,-1,-9,3,-2,5,6,-9,-8,5,1],[-2,7,8,9,9,1,5,6,9,4,10,-8,8,9,3],[-9,8,10,-10,-10,-7,6,-10,-9,-10,5,-4,8,-8,-7],[10,8,2,6,9,2,8,7,10,-6,-8,10,-3,-5,-9]],[[4,10,7,-1,5,-2,3,5,-5,7,-7,4,10,8,-8],[8,6,3,-10,-10,-4,2,-10,9,-3,-7,-5,6,8,-9],[-10,-8,4,2,8,1,-2,-9,-1,8,-9,2,7,9,3],[4,6,-2,7,-8,-5,7,1,2,8,-6,6,-1,6,-2],[10,4,10,-8,-9,-2,-5,-6,6,-10,9,-9,2,9,10],[8,-7,-5,6,4,10,-4,4,5,7,2,9,-10,-1,-10],[-2,2,1,-8,3,-4,7,-9,-7,9,-10,-9,-4,2,2]],[[8,-2,-5,8,-2,5,-3,4,-1,6,7,3,-5,-9,-2],[-2,-4,1,-7,-5,1,5,-2,7,3,7,1,8,-7,-6],[-7,-9,3,2,-2,-9,9,-6,6,-8,9,9,-3,8,3],[9,2,-2,-10,3,1,5,-9,-3,-6,-3,6,7,-10,-9],[10,-4,-8,5,1,1,1,4,-9,-4,9,10,-1,5,3],[-8,-6,3,-9,3,6,1,-10,-9,3,-3,-3,8,-1,7],[10,9,8,-7,10,-6,-4,8,-4,-2,-2,-1,-10,-9,3]],[[9,3,-9,-9,9,-8,10,2,7,-6,-2,6,1,2,10],[-10,-9,6,6,-6,-9,-8,6,8,5,-2,10,8,-5,5],[-8,-4,-10,6,-10,-10,5,-7,-9,4,-10,-1,-4,4,-1],[-7,-6,5,3,-1,-4,-9,1,1,4,-6,-2,5,-7,-9],[9,-5,-5,10,-4,1,4,-6,-10,8,2,8,-10,4,-1],[-6,-7,7,3,-3,10,4,6,2,-7,-9,4,-7,-10,2],[5,4,-10,5,-8,-10,-2,4,-6,-5,-7,-6,-4,5,-5]],[[7,-8,-2,-2,2,5,10,-8,-7,-1,7,-7,-8,5,4],[4,-10,2,9,-8,6,2,-3,10,-5,4,-8,-7,3,2],[2,9,-6,-1,-7,-5,4,-10,-10,-1,-3,8,-8,-10,5],[-8,-5,8,-2,-6,9,5,-9,-10,-7,-3,-6,2,4,-4],[-1,7,-3,-7,3,5,3,5,5,2,-6,10,5,-5,3],[9,4,-2,-10,-10,-2,-7,5,10,7,9,4,7,-1,-8],[2,2,3,2,5,-8,-9,4,7,3,6,9,-1,-1,9]],[[-1,-9,8,7,9,4,-8,4,-6,-8,7,10,7,-4,-6],[-10,-7,-9,2,5,-7,1,-1,-9,-8,-7,-2,2,-10,8],[1,-2,6,3,9,-1,8,-4,-7,-9,2,9,-3,-3,-9],[-9,-10,1,4,6,-4,2,9,5,6,10,-10,-2,-1,-5],[10,3,5,-6,7,-4,6,-5,9,10,1,-3,-8,3,-4],[2,-10,-1,-8,-6,6,-6,-4,-9,8,-8,9,10,-10,9],[-9,5,-3,-6,3,5,-10,6,-9,-6,-4,8,10,3,10]]], dtype = "int64")#candidate|3016|(13, 7, 15)|const|int64
bop_3017 = relay.logical_and(bop_3013.astype('bool'), relay.reshape(const_3016.astype('bool'), relay.shape_of(bop_3013))) # shape=(13, 7, 15)
output = bop_3017
output2 = bop_3017
func_3033 = relay.Function([var_3011,var_3012,], output)
mod['func_3033'] = func_3033
mod = relay.transform.InferType()(mod)
var_3034 = relay.var("var_3034", dtype = "int64", shape = (13, 7, 15))#candidate|3034|(13, 7, 15)|var|int64
var_3035 = relay.var("var_3035", dtype = "int64", shape = (13, 7, 15))#candidate|3035|(13, 7, 15)|var|int64
output = func_3033(var_3034,var_3035,)
func_3036 = relay.Function([var_3034,var_3035,], output)
mutated_mod['func_3036'] = func_3036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2656_call = mod.get_global_var('func_2656')
func_2657_call = mutated_mod.get_global_var('func_2657')
call_3049 = func_2656_call()
call_3050 = func_2656_call()
func_3033_call = mod.get_global_var('func_3033')
func_3036_call = mutated_mod.get_global_var('func_3036')
var_3065 = relay.var("var_3065", dtype = "int64", shape = (7, 195))#candidate|3065|(7, 195)|var|int64
call_3064 = func_3033_call(relay.reshape(var_3065.astype('int64'), [13, 7, 15]), relay.reshape(var_3065.astype('int64'), [13, 7, 15]), )
call_3066 = func_3033_call(relay.reshape(var_3065.astype('int64'), [13, 7, 15]), relay.reshape(var_3065.astype('int64'), [13, 7, 15]), )
uop_3072 = relay.asinh(var_3065.astype('float32')) # shape=(7, 195)
output = relay.Tuple([call_3049,call_3064,uop_3072,])
output2 = relay.Tuple([call_3050,call_3066,uop_3072,])
func_3078 = relay.Function([var_3065,], output)
mod['func_3078'] = func_3078
mod = relay.transform.InferType()(mod)
var_3079 = relay.var("var_3079", dtype = "int64", shape = (7, 195))#candidate|3079|(7, 195)|var|int64
output = func_3078(var_3079)
func_3080 = relay.Function([var_3079], output)
mutated_mod['func_3080'] = func_3080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3082 = relay.var("var_3082", dtype = "float64", shape = (16, 16, 3))#candidate|3082|(16, 16, 3)|var|float64
uop_3083 = relay.cos(var_3082.astype('float64')) # shape=(16, 16, 3)
bop_3102 = relay.bitwise_and(var_3082.astype('int16'), relay.reshape(uop_3083.astype('int16'), relay.shape_of(var_3082))) # shape=(16, 16, 3)
func_590_call = mod.get_global_var('func_590')
func_592_call = mutated_mod.get_global_var('func_592')
const_3113 = relay.const([-2.161891,8.081462,-0.879174,-2.164748,7.648713,8.680798,5.107500,-0.001000,-1.647749,-4.687749,2.694347,1.247380,6.528186,6.778030,-1.220775,3.048883,-6.487262,-2.832298,-3.640243,2.864948,-0.704494,3.930272,-3.893397,5.795464,-6.697960,5.402510,4.298041,2.484906,-5.986290,0.271904,-4.918100,-4.994239,-5.024250,0.760727,9.103263,-7.043035,8.253932,2.160505,-9.680746,9.968822,-0.769426,-5.468758,0.782772,-6.745986,-7.744027,4.215927,8.488555,-9.405104,-9.484661,-7.546686,-8.812943,1.223594,-4.137203,0.399594,2.715854,-7.529410,3.275912,2.804047,-6.113035,2.059532,-8.431478,5.431589,-7.379892,5.256998,-0.713964,-1.643677,-8.702410,-7.976587,-3.631503,0.146913,-7.705307,-7.172763,-3.239984,3.755683,1.751577,-1.019546,4.918819,4.071644,7.699207,-2.780236,-7.789519,-6.012642,-9.954410,-6.759797,-0.333730,-6.441266,3.459517,9.508836,9.259697,-6.902972,6.587504,-3.918573,-4.971118,-7.195392,-8.943888,3.495822,6.340634,7.663808,5.421007,-1.394851,-3.085303,-8.894788,2.767881,1.612076,-3.952493,-1.755146,-3.374998,-5.670449,-3.309442,-6.619794,5.975110,-3.747669,8.251355,-9.720913,4.996118,8.473941,-5.313310,8.263447,1.591137,-9.289590,-4.927285,6.640090,6.667133,0.576924,-9.605573,-9.821481,-6.285695,-7.120536,-2.698781,-9.479647,8.152481,0.963190,2.139915,-6.251889,-1.908986,9.579834,9.916354,7.610553,-5.313549,-1.933909,0.167860,7.694755,4.751575,7.311674,-7.041865,8.632481,3.087824,3.060998,5.404672,1.808087,-1.321965,-0.535926,5.676921,-3.009558,4.039760,-0.397041,6.472615,-2.750866,3.853049,6.742695,6.990251,-6.978737,6.242833,7.603517,1.221915,-0.864557,5.416235,9.106776,6.716937,1.816952,-0.900376,0.557315,1.077902,3.517645,8.782493,-9.158937,4.257424,-4.334836,8.873200,-4.607265,-3.947854,-0.846462,9.213346,1.568299,-4.864826,5.802596,-8.855254,-6.182321,-7.910786,4.276814,-2.997658,-7.479508,-1.559066,6.037520,9.158983,-7.531348,-7.630801,8.375511,-1.255023,-7.887277,6.256059,2.907887,-0.135871,1.272421,5.372816,6.253814,7.151390,-2.657188,-1.715995,2.294276,1.347924,4.957743,-9.351485,5.676424,5.607378,4.760681,-7.823650,4.696060,5.711431,2.943701,8.651550,-4.566886,0.840974,-5.883323,-0.156424,7.208472,6.393083,-5.844281,2.141038,-1.217902,8.767092,-3.422899,-6.513953,4.797684,-2.151536,7.118912,2.686253,-1.935289,-6.577740,-7.048076,-6.956405,-7.944546,-3.820819,-5.818284,-7.668325,6.749921,-3.173983,2.497915,6.840999,-2.472711,-0.902293,6.307847,-9.512748,-1.971057,-7.027970,7.123469,-7.657997,-4.919852,-8.758302,-8.780249,0.128318,1.440649,4.152555,-3.119655,1.545844,7.140141,-3.621359,6.932853,-4.498204,8.483888,-2.029063,-9.994778,-2.559852,2.030256,4.270241,-8.136172,9.591409,-4.172916,-2.988568,6.074031,-1.041928,3.087723,1.229521,7.760047,-2.575109,-3.809602,4.599659,7.643892,8.413581,2.452809,2.127865,5.311785,2.485464,4.441889,3.378907,5.946088,0.680334,-4.727995,8.675471,0.031510,0.098122,-5.066231,-0.296080,-4.377902,-4.273316,-2.883429,3.277213,9.528076,1.322346,8.732437,0.549871,-6.400432,8.872244,-3.981301,-4.674408,3.375746,6.117034,1.039027,7.410801,-9.614347,3.457303,5.088655,-7.645399,5.294340,-7.040078,-3.454098,3.231871,-5.202396,-1.514744,3.377757,-9.560701,-5.844976,-6.177227,0.206763,5.725259,0.020041,-2.354493,-7.039473,5.854772,9.404796,-0.033411,-7.168851,-4.939025,-1.472472,0.359516,-9.783509,-7.291296,7.348535,-1.402019,3.707239,-7.155972,-7.129616,0.793343,-2.943673,-9.078369,-2.051801,3.131215,-8.046263,-5.743148,-8.678017,-5.663121,6.537355,9.125172,3.193414,-6.185836,-5.540837,4.390847,5.020093,3.778258,-1.149230,9.453519,-0.634406,1.622302,7.372699,4.635409,7.748619,-3.750688,5.371908,1.198115,4.992495,8.998168,5.270349,-6.991150,3.786001,-8.965524,0.564320,3.563545,-8.546171,-1.606093,-3.511792,-6.040866,7.384483,-8.874628,-6.102972,8.127366,5.790677,2.027210,9.532052,-5.992374,6.167217,-8.109953,-8.836642,-8.345510,-2.161892,-2.257996,7.113566,-0.504165,4.617911,1.148210,1.892306,4.867254,9.232647,9.651093,-8.515748,5.278331,-0.409598,-7.405290,0.397598,2.698085,2.832618,-4.687394,-5.851638,8.806813,-7.340576,-9.152688,5.905432,-8.596931,-2.471521,-1.887319,4.881103,3.131172,6.206300,4.299067,-7.740919,2.494208,-6.232416,-0.334810,-2.807596,8.759668,-6.307171,-7.155875,4.980601,-5.055147,-8.484502,9.564980,3.210862,2.991571,-3.253076,7.798012,-7.914419,4.179342,8.470857,4.262451,2.436289,-0.730467,-8.499546,-5.589607,5.693850,-4.466509,8.367574,-0.036703,-1.175376,0.993157,-4.075814,8.708150,4.605511,7.679212,5.319496,0.542095,1.151342,-8.226755,-0.565167,-6.362087,-1.130006,-7.244558,-3.065289,-0.249669,-4.697039,3.933357,-8.153541,5.010168,6.970894,-6.936106,-9.025740,-7.954750,1.537540,3.572453,6.760598,-1.498277,-9.920223,0.551913,7.696538,4.319305,8.788019,-3.649650,-9.266532,-1.546390,-6.623391,-0.216809,-1.101949,9.432161,5.427416,1.049320,-9.562875,-5.273512,-6.452421,8.959913,8.646149,-6.523724,1.236449,4.697491,-7.930018,-0.983241,-8.445539,2.616793,2.998793,3.701903,-4.959402,5.317259,-7.974996,8.120638,1.624483,-5.437070,-1.957314,1.301131,2.368091,9.318767,-0.765362,-1.648045,-4.459825,9.816142,-1.941022,-8.950288,-7.339107,8.015914,-3.835174,4.937099,4.500540,-2.412937,-1.575747,-2.897074,-9.518181,-3.921840,3.024258,-3.524094,-6.039515], dtype = "float64")#candidate|3113|(546,)|const|float64
call_3112 = relay.TupleGetItem(func_590_call(relay.reshape(const_3113.astype('float64'), [13, 7, 6])), 0)
call_3114 = relay.TupleGetItem(func_592_call(relay.reshape(const_3113.astype('float64'), [13, 7, 6])), 0)
var_3116 = relay.var("var_3116", dtype = "float64", shape = (546,))#candidate|3116|(546,)|var|float64
bop_3117 = relay.not_equal(const_3113.astype('bool'), relay.reshape(var_3116.astype('bool'), relay.shape_of(const_3113))) # shape=(546,)
func_782_call = mod.get_global_var('func_782')
func_789_call = mutated_mod.get_global_var('func_789')
const_3121 = relay.const([6,2,-8,8,1,-7,7,9,1,6,-2,9,2,8,-4,10,6,3,6,7,5,8,5,6,7,9,-3,-5,-8,3,-1,4,-8,-5,-10,10,6,7,-7,-9,-7,4,-7,-6,-10,-9,-3,2,1,6,10,7,3,-9,-9,5,-7,5,-7,-8,-10,-10,7,-6,9,-10,-5,-7,10,-1,4,-4,-6,-2,-10,10,5,-6,-3,-3], dtype = "uint8")#candidate|3121|(80,)|const|uint8
var_3122 = relay.var("var_3122", dtype = "uint16", shape = (660,))#candidate|3122|(660,)|var|uint16
const_3123 = relay.const(9, dtype = "int8")#candidate|3123|()|const|int8
var_3124 = relay.var("var_3124", dtype = "int8", shape = (42, 4))#candidate|3124|(42, 4)|var|int8
call_3120 = relay.TupleGetItem(func_782_call(relay.reshape(const_3121.astype('uint8'), [4, 4, 5]), relay.reshape(const_3121.astype('uint8'), [4, 4, 5]), relay.reshape(var_3122.astype('uint16'), [660,]), relay.reshape(const_3123.astype('int8'), []), relay.reshape(var_3124.astype('int8'), [168,]), ), 9)
call_3125 = relay.TupleGetItem(func_789_call(relay.reshape(const_3121.astype('uint8'), [4, 4, 5]), relay.reshape(const_3121.astype('uint8'), [4, 4, 5]), relay.reshape(var_3122.astype('uint16'), [660,]), relay.reshape(const_3123.astype('int8'), []), relay.reshape(var_3124.astype('int8'), [168,]), ), 9)
func_152_call = mod.get_global_var('func_152')
func_155_call = mutated_mod.get_global_var('func_155')
var_3133 = relay.var("var_3133", dtype = "int8", shape = (1120,))#candidate|3133|(1120,)|var|int8
call_3132 = relay.TupleGetItem(func_152_call(relay.reshape(const_3123.astype('int8'), []), relay.reshape(var_3133.astype('int8'), [14, 5, 16]), ), 0)
call_3134 = relay.TupleGetItem(func_155_call(relay.reshape(const_3123.astype('int8'), []), relay.reshape(var_3133.astype('int8'), [14, 5, 16]), ), 0)
uop_3140 = relay.rsqrt(bop_3102.astype('float32')) # shape=(16, 16, 3)
func_2656_call = mod.get_global_var('func_2656')
func_2657_call = mutated_mod.get_global_var('func_2657')
call_3150 = func_2656_call()
call_3151 = func_2656_call()
output = relay.Tuple([call_3112,bop_3117,call_3120,const_3121,var_3122,const_3123,var_3124,call_3132,var_3133,uop_3140,call_3150,])
output2 = relay.Tuple([call_3114,bop_3117,call_3125,const_3121,var_3122,const_3123,var_3124,call_3134,var_3133,uop_3140,call_3151,])
func_3153 = relay.Function([var_3082,var_3116,var_3122,var_3124,var_3133,], output)
mod['func_3153'] = func_3153
mod = relay.transform.InferType()(mod)
var_3154 = relay.var("var_3154", dtype = "float64", shape = (16, 16, 3))#candidate|3154|(16, 16, 3)|var|float64
var_3155 = relay.var("var_3155", dtype = "float64", shape = (546,))#candidate|3155|(546,)|var|float64
var_3156 = relay.var("var_3156", dtype = "uint16", shape = (660,))#candidate|3156|(660,)|var|uint16
var_3157 = relay.var("var_3157", dtype = "int8", shape = (42, 4))#candidate|3157|(42, 4)|var|int8
var_3158 = relay.var("var_3158", dtype = "int8", shape = (1120,))#candidate|3158|(1120,)|var|int8
output = func_3153(var_3154,var_3155,var_3156,var_3157,var_3158,)
func_3159 = relay.Function([var_3154,var_3155,var_3156,var_3157,var_3158,], output)
mutated_mod['func_3159'] = func_3159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_3164 = relay.TupleGetItem(func_2894_call(), 2)
call_3165 = relay.TupleGetItem(func_2896_call(), 2)
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_3205 = func_2630_call()
call_3206 = func_2630_call()
func_2460_call = mod.get_global_var('func_2460')
func_2463_call = mutated_mod.get_global_var('func_2463')
const_3227 = relay.const([[-5.064872,-8.747109,-3.938450,-8.354236],[-4.146875,-6.930361,6.703566,5.858545],[-5.675930,-9.490038,6.652620,-4.286127],[8.559727,-0.962650,4.629935,2.744159],[2.106665,8.088836,4.002991,-7.802729],[-6.367446,6.438968,-7.123433,-4.886073],[-0.015859,-7.847198,-2.792952,3.683977],[-8.523669,1.446561,1.187482,-7.782134],[-2.663372,-9.590173,3.785137,-6.066082],[4.273827,7.065785,-9.406057,6.141181],[7.596606,-0.742965,-5.125984,2.477162],[3.442703,-6.418658,4.264773,5.385410],[8.553435,0.194501,-1.476269,-5.385333],[2.998373,-9.863096,2.293625,1.044315],[6.638447,3.105757,8.019874,7.777085],[6.001471,5.663439,-5.390561,2.125561],[6.772290,-1.344122,-2.650856,3.474486],[2.598961,0.849602,2.298038,4.192932],[4.326085,-6.755098,4.739692,4.759537],[-7.567479,4.485628,-3.443197,-0.808646],[-8.428578,3.657735,1.429207,-8.161208],[-2.565719,-8.212337,-8.838432,3.947486],[-9.518739,4.220933,5.444709,-6.502508],[8.063989,-5.312158,-4.131796,3.376413],[9.381721,3.070829,-1.627594,0.403059],[-5.372912,-0.042888,5.794837,-1.062181],[-7.473579,0.045965,-9.613068,6.314456],[-2.271457,3.532226,-4.685607,2.979579],[-2.145641,-5.897344,-3.329419,6.818572],[9.362200,-1.790641,2.658190,-4.291033],[-2.368803,5.658579,-6.510707,-4.188463],[-4.919560,7.788628,1.533861,6.717621],[-5.740812,-8.162473,9.074307,2.040489],[9.400676,-2.883959,-0.355119,-8.330713],[-7.593252,0.732826,-1.747242,9.796325],[-7.974322,8.824530,4.058069,4.638869],[4.024163,6.171509,1.032589,7.901521],[-3.834337,-2.052335,1.819685,8.001217],[-6.927801,-8.241504,-5.226008,-9.373677],[-8.532793,-3.236243,-2.439406,7.886599],[6.641577,-4.182413,7.234567,-6.463523],[4.878540,-8.314900,6.403950,8.179942],[1.448674,9.199526,1.349519,-3.492474],[8.557650,-4.941322,-2.483943,7.928305],[-8.703724,-4.988770,-4.070823,9.899424],[7.251377,-2.110899,7.602399,8.475582],[7.415281,-5.352555,-2.727440,-6.039841],[-9.411925,0.315116,3.297093,-5.419480],[-0.259190,9.887344,1.152627,9.533558],[3.458876,-5.123558,7.612194,0.674378],[-2.119136,2.295143,-6.288064,-9.597918],[-5.595922,3.105018,4.397022,2.941462],[-6.692089,-2.816937,9.707473,0.270501],[3.899186,8.002288,1.863635,2.778774],[3.609138,-2.968199,-6.623272,-6.713434],[-8.957784,-5.673238,8.869469,4.591650],[7.143556,-1.719884,5.129534,4.855044],[4.716673,7.572273,6.326858,-3.933592],[-9.677738,-0.732632,4.417499,0.819701],[-9.546253,5.952958,-4.883958,8.636935],[-5.379830,-4.796634,6.188351,-6.687758],[2.307826,6.998561,-1.054792,8.371977],[-4.160415,-6.782210,-6.329939,6.181811],[9.286320,-5.109949,-8.286100,7.847727],[4.922425,-7.642250,4.517607,8.297415],[4.062323,6.307831,-8.673258,-1.418025],[-7.414230,9.410782,-2.278216,4.034253],[9.190208,7.376839,-9.805196,2.235262],[9.940191,-0.649567,-8.473348,4.220596],[7.613991,-6.131795,1.780872,-5.545147],[5.746078,-0.881714,7.678392,9.735555],[2.892658,-6.665800,-8.804630,-9.204481],[8.932698,-3.720908,-3.070434,9.130157],[5.872485,-2.393845,-7.055480,-5.420706],[-5.804314,-5.095460,2.860997,-4.878849],[-7.575920,-1.106299,-5.550082,-8.316614],[2.124854,-0.502313,-7.837940,1.063114],[9.845764,-5.724425,7.107122,5.246489],[5.826331,7.212312,6.519375,-1.145316],[-8.474935,-7.194214,7.793761,-5.866855],[-1.231287,-5.694669,0.434912,-8.587706],[9.364414,-0.424734,5.401620,-5.766161],[7.151102,5.020921,-8.330021,1.675319],[-6.882454,8.722532,-5.253693,1.915710],[-3.120608,-2.583497,9.290183,-6.070496],[8.711299,0.748876,-7.421480,-3.848053],[0.044161,3.249495,0.169250,-9.988903],[-7.703956,3.365003,-1.504220,3.298863],[-5.323752,-9.843318,-3.468059,0.467290],[0.438827,6.465204,-9.825535,-7.275706],[2.540070,0.813240,-6.820942,3.961237],[-3.437064,3.501155,1.199727,5.342095],[-6.839331,9.479421,1.709848,2.490956],[-1.655027,-9.026299,-7.477576,-8.409910],[-8.848610,-6.669802,-8.119382,-7.610249],[-8.855748,3.266969,-9.147882,4.986296],[-2.921472,-3.495698,6.142077,-4.690699],[-7.418414,0.717755,8.545627,-1.082080],[6.891687,-0.519772,-3.685321,-6.286579],[1.791816,-1.243961,3.677527,-6.083547],[6.960720,0.513368,-5.073223,-4.907546],[-0.290775,9.510663,6.580273,-8.274126],[-6.867492,-7.555854,8.843771,0.744596],[-4.270299,-0.107631,-1.280925,0.996004],[8.342684,-5.465303,4.360156,-5.956751],[-8.388381,1.204580,-3.365380,9.846424],[0.830075,9.707097,-0.172074,0.376847],[3.059726,-2.633348,-9.522975,2.668006],[-6.400601,-3.936079,-5.413151,-5.689741],[-8.925327,-6.221116,7.802900,-4.209421],[-2.788722,8.982731,-3.592389,0.468231],[-4.260065,5.735357,-3.172534,9.584110],[9.498512,-3.883128,-7.618264,-6.909664],[-3.459334,6.869163,-5.071565,-6.565580],[-0.598576,-0.551015,-2.182588,-3.608976],[2.349448,-4.738858,-3.467318,0.130988],[4.598768,1.025056,-1.394938,-4.869377],[-1.245916,-9.425993,2.509454,8.785548],[-9.917449,6.491076,-6.113087,0.335554],[4.947459,7.176317,7.625555,2.906567],[-0.625383,0.577348,4.735618,5.119882],[4.601895,-6.375594,0.701030,-0.604443],[8.641093,-9.110548,7.122620,-2.024204],[0.650347,-9.759434,-6.628349,5.229093],[-4.793699,2.735731,3.781731,-4.583749],[-0.873999,3.940844,-3.665225,7.705264],[9.169266,4.204476,4.246481,-8.705313],[7.705486,-2.173382,-9.432763,-3.289996],[-8.140190,-3.004709,5.702647,-9.623257],[-7.645050,5.284628,-4.971145,-9.704471],[-5.361233,-3.113244,3.173683,5.515213],[-4.162568,-2.160578,5.909030,9.355277],[-2.079308,4.744806,-9.179392,3.926373],[-0.830161,-6.469071,8.543196,-4.943689],[-2.412467,-7.878691,8.070358,3.900953],[4.526595,3.784540,-0.147234,-3.253857],[-6.482348,-9.749588,4.759441,9.553425],[-5.377387,-5.487949,5.528439,-2.901459],[-8.401573,2.306236,-6.620131,8.396189],[8.214008,-8.435868,7.228538,-0.331715],[3.152106,9.620151,5.980821,-3.867350],[-5.600457,7.309167,5.772694,8.024995],[-2.140243,-7.483307,0.693356,-6.868564],[-7.333551,5.473226,6.133147,2.170073],[-4.202064,-9.254557,-0.187927,-7.259082],[2.175341,-3.795219,8.133359,-6.107987],[-9.008597,-2.525714,-9.283301,-4.605856],[3.944821,0.448212,-3.247165,2.685148],[9.431208,-7.098359,-7.250762,-9.741732],[-2.980834,4.472241,-2.492427,-5.566364],[-4.952704,3.053210,3.129948,0.207355],[8.995464,-1.151696,7.385187,-5.230120],[4.153809,-1.661575,7.752757,8.857580],[4.712566,5.690400,5.928842,8.419598],[-5.934747,-8.228320,-4.106498,3.119419],[-5.268195,8.379798,0.788235,-9.947423],[-1.107480,7.247664,4.475446,-2.957607],[8.419685,5.594345,6.815627,-2.178123],[7.469721,0.091731,-0.315482,0.006325],[-6.228754,-3.609533,-3.932465,-0.699029],[-7.358775,0.382205,3.713313,-5.018937],[9.561694,2.440914,-6.780705,2.750967],[-6.125017,-7.817480,1.770031,-0.486249],[-7.085536,2.439899,0.575607,-1.036136],[3.706696,-6.578032,9.543839,3.466621],[-0.726419,9.098913,-7.068778,-9.428184],[6.093420,6.532711,-2.112875,3.952278],[1.820737,8.805886,-8.414292,-2.996665],[2.711309,-5.588741,8.641814,-7.632049],[-2.793129,5.051361,-4.304927,-6.105415],[-8.577799,-3.997729,6.713560,5.111501],[-6.237680,3.461436,-2.615917,5.368930],[-3.908183,-9.786054,8.182245,3.521282],[-5.840144,3.191940,-1.910338,9.013464],[4.760903,0.450786,1.658486,8.783715],[-8.073494,-7.451821,-9.213279,-1.762494],[-1.899378,2.138201,1.189117,8.821233],[7.395919,-6.573792,-9.390662,-8.450192],[1.582725,-3.792538,-7.484725,0.446613],[1.833970,-3.725019,4.103246,-6.338750],[5.231989,1.347364,7.742325,8.236413],[4.397555,-7.820107,8.336817,-3.699341],[0.387942,0.009724,-8.025754,-8.841511],[-7.692007,-6.058443,1.763464,0.023305],[-0.628749,-0.226308,-3.865620,-8.536702],[9.850831,5.445059,8.070350,-8.486923],[6.418171,-5.810818,-9.732883,5.487211],[1.747736,-7.636153,-6.476342,-7.264351],[-7.860676,-5.725675,-8.902583,7.046404],[-1.188503,-3.923116,-3.994392,-7.628344],[-9.025222,8.357435,4.542257,2.886704],[-8.483270,4.764317,-1.818470,8.184813],[-9.081304,6.074901,-4.595492,6.021112],[0.964853,-5.923341,-1.744396,8.115349],[-0.669398,1.639870,4.740906,-4.123186],[-7.611002,0.939679,5.091551,0.225502],[-6.728857,-5.404046,4.281136,2.744396],[6.457502,-7.145929,-6.450500,-6.771770],[9.216201,-7.777364,7.978272,-3.492282],[5.262094,-8.505352,6.327459,-4.470048],[-4.837932,-2.396404,-3.913072,-8.273875],[-6.212005,1.026200,8.266831,0.316187],[2.920527,9.712793,-2.316540,-1.743684],[1.571034,8.541260,7.322129,0.084259],[-3.714109,8.789241,7.333990,6.019797],[7.783226,5.402245,-7.670681,0.155937],[-9.815642,-7.269476,-0.812385,-6.375633],[1.514274,-5.642712,-1.601532,-9.638708],[-2.444987,5.422145,-2.751511,2.141916],[-6.432336,-3.068848,6.920607,-0.724647],[-7.938848,-5.316401,-6.965596,6.092640],[-7.800901,-6.862285,2.938545,-5.470627],[-3.946744,7.992000,-9.941593,-8.508969],[3.843644,9.935493,-7.269730,9.071307],[0.349124,-2.251082,-9.614477,2.200659],[6.929552,3.904080,0.115181,-9.643922],[-0.083524,-3.058150,-9.270696,2.271177],[1.619040,-6.091005,-4.979503,-5.544261],[-9.362715,6.820716,-5.981931,3.475451],[-0.355956,-6.183584,-5.998084,-2.591692],[6.417750,4.854105,5.340355,9.722472],[-4.676837,9.636890,6.296758,-4.654157],[-0.550625,4.876267,-3.462455,-7.519105],[4.382743,-0.910991,-2.932354,-5.997087],[7.580359,8.484099,-7.757551,7.657161],[5.635798,-4.263563,4.572060,-5.506664],[-1.706770,-1.879968,-7.171221,-7.548487],[-1.681400,-4.341882,5.716803,-2.436699],[-1.938943,1.233000,-2.561778,0.450210],[5.010714,4.354354,-0.709013,-8.062448],[8.989418,-4.815062,-9.360510,8.255925],[2.711627,9.568304,2.015230,-8.940521],[8.560945,-1.422995,-0.868575,0.929861],[0.172462,-5.939198,-5.484683,3.907631],[-7.190231,-5.439626,-0.524152,1.989523],[1.858343,-6.415686,-7.096607,-3.638346],[-4.931417,4.422009,1.132078,4.053600],[1.096392,-7.862313,-9.978577,2.568409],[1.359037,3.058393,-3.813680,-7.364717],[0.417879,-0.295274,8.921418,-0.101227],[4.986850,-0.063335,-8.748019,-5.015020],[-7.536590,-5.869093,-0.964369,9.126833],[5.663483,8.479724,6.148582,4.092763],[-3.801222,-9.768248,-2.775417,5.041798],[-9.710651,-3.885368,4.230331,8.720440],[-7.911541,5.040816,7.216078,-5.271310],[3.931113,-8.600379,2.480297,-6.011795],[2.629278,8.095353,6.149886,-8.819781],[3.294060,-1.614133,9.453961,-2.514513],[3.243251,-1.081764,-5.520870,0.625851],[-9.351907,-8.328164,7.461899,9.692563],[8.947831,5.683799,4.562101,-1.288313],[-7.865328,-6.955991,-8.100702,4.545130],[-3.763347,3.343427,6.147993,-6.856733],[-6.832981,0.338247,1.553215,1.344020],[-9.337302,8.673403,-0.068688,-4.072957],[8.968784,-4.296414,7.517118,4.075042],[3.180834,-7.843159,-0.803132,-5.244883],[8.539736,-2.248929,-1.485749,2.125246],[-0.229859,-0.087717,-5.354327,-7.635324],[0.838343,-0.007481,-5.028448,-2.937270],[-8.723826,-2.276972,-6.070439,7.837302],[1.811252,-4.585246,3.969285,-4.649459],[8.015389,-2.969863,9.959042,7.294221],[5.455784,8.694137,6.776155,9.536377],[-9.070165,-8.716289,-7.181983,-2.402340],[-6.428716,0.930870,-0.365572,2.033576],[4.865541,8.068904,-0.113958,4.626383],[-5.900723,-4.436374,8.371122,1.411415],[2.637686,-1.060301,-0.158013,2.408418],[0.627048,-3.067474,-1.069154,4.994265],[-5.204316,-5.084608,9.695824,-3.926716],[-0.408004,-6.733785,1.932054,4.555916],[8.761377,-6.905633,-7.923435,-7.291175],[4.014218,7.541461,5.687765,0.569963],[-0.205118,-6.659167,8.659393,8.890518],[4.953767,4.197284,-9.643766,-1.488018],[-7.853552,8.541019,-9.152447,1.715342],[-4.843913,-2.988822,4.207048,9.193035],[7.729764,-6.278468,4.211846,2.958825],[0.265560,3.759349,7.789891,2.765852],[-4.952221,6.676405,4.999819,-5.195754],[7.580757,7.886845,-2.102920,-2.490198],[-2.698276,8.286074,9.873898,5.057129],[6.520488,-8.817194,-4.214646,9.081130],[-8.304705,8.309951,3.236772,9.250245],[-5.507712,1.006662,-0.884636,8.660164],[-5.369891,-0.384243,6.991459,-4.263225],[-6.539091,6.952493,6.195819,8.070789],[3.130596,3.477863,8.253995,-1.100880],[8.203611,-8.458532,4.194415,-4.232708],[-2.020525,0.416262,-3.454685,4.682046],[-0.912909,9.867292,3.509972,6.976934],[-0.093024,0.130260,-7.734445,7.717413],[3.209583,5.526043,6.064784,4.566174],[-5.570979,6.810351,-6.780510,7.604110],[-9.168400,-4.955043,0.855957,-1.011927],[-6.170934,3.560324,4.378223,-0.874280],[3.364850,-9.855757,-3.642731,-9.216180],[-5.550345,2.679960,-8.413565,-8.372099]], dtype = "float64")#candidate|3227|(300, 4)|const|float64
call_3226 = relay.TupleGetItem(func_2460_call(relay.reshape(const_3227.astype('float64'), [15, 5, 16]), relay.reshape(const_3227.astype('float64'), [15, 5, 16]), ), 0)
call_3228 = relay.TupleGetItem(func_2463_call(relay.reshape(const_3227.astype('float64'), [15, 5, 16]), relay.reshape(const_3227.astype('float64'), [15, 5, 16]), ), 0)
func_2460_call = mod.get_global_var('func_2460')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_3232 = relay.TupleGetItem(func_2460_call(relay.reshape(const_3227.astype('float64'), [15, 5, 16]), relay.reshape(call_3226.astype('float64'), [15, 5, 16]), ), 0)
call_3233 = relay.TupleGetItem(func_2463_call(relay.reshape(const_3227.astype('float64'), [15, 5, 16]), relay.reshape(call_3226.astype('float64'), [15, 5, 16]), ), 0)
func_1242_call = mod.get_global_var('func_1242')
func_1245_call = mutated_mod.get_global_var('func_1245')
var_3245 = relay.var("var_3245", dtype = "float64", shape = (15, 63))#candidate|3245|(15, 63)|var|float64
call_3244 = relay.TupleGetItem(func_1242_call(relay.reshape(var_3245.astype('float64'), [9, 15, 7])), 0)
call_3246 = relay.TupleGetItem(func_1245_call(relay.reshape(var_3245.astype('float64'), [9, 15, 7])), 0)
uop_3253 = relay.sqrt(call_3205.astype('float32')) # shape=(7, 7, 4)
uop_3255 = relay.sqrt(call_3206.astype('float32')) # shape=(7, 7, 4)
uop_3272 = relay.erf(var_3245.astype('float32')) # shape=(15, 63)
var_3275 = relay.var("var_3275", dtype = "float32", shape = (15, 63))#candidate|3275|(15, 63)|var|float32
bop_3276 = relay.add(uop_3272.astype('float32'), relay.reshape(var_3275.astype('float32'), relay.shape_of(uop_3272))) # shape=(15, 63)
var_3280 = relay.var("var_3280", dtype = "float32", shape = (15, 63))#candidate|3280|(15, 63)|var|float32
bop_3281 = relay.minimum(uop_3272.astype('int64'), relay.reshape(var_3280.astype('int64'), relay.shape_of(uop_3272))) # shape=(15, 63)
uop_3292 = relay.log(bop_3281.astype('float32')) # shape=(15, 63)
func_448_call = mod.get_global_var('func_448')
func_451_call = mutated_mod.get_global_var('func_451')
var_3306 = relay.var("var_3306", dtype = "uint16", shape = (660,))#candidate|3306|(660,)|var|uint16
call_3305 = relay.TupleGetItem(func_448_call(relay.reshape(var_3306.astype('uint16'), [6, 10, 11]), relay.reshape(var_3306.astype('uint16'), [6, 10, 11]), ), 4)
call_3307 = relay.TupleGetItem(func_451_call(relay.reshape(var_3306.astype('uint16'), [6, 10, 11]), relay.reshape(var_3306.astype('uint16'), [6, 10, 11]), ), 4)
func_1888_call = mod.get_global_var('func_1888')
func_1893_call = mutated_mod.get_global_var('func_1893')
const_3313 = relay.const(3, dtype = "int64")#candidate|3313|()|const|int64
var_3314 = relay.var("var_3314", dtype = "int64", shape = (88,))#candidate|3314|(88,)|var|int64
call_3312 = relay.TupleGetItem(func_1888_call(relay.reshape(const_3313.astype('int64'), []), relay.reshape(var_3314.astype('int64'), [11, 8, 1]), relay.reshape(call_3164.astype('uint64'), [600,]), ), 0)
call_3315 = relay.TupleGetItem(func_1893_call(relay.reshape(const_3313.astype('int64'), []), relay.reshape(var_3314.astype('int64'), [11, 8, 1]), relay.reshape(call_3164.astype('uint64'), [600,]), ), 0)
var_3317 = relay.var("var_3317", dtype = "float32", shape = (15, 63))#candidate|3317|(15, 63)|var|float32
bop_3318 = relay.multiply(uop_3292.astype('uint32'), relay.reshape(var_3317.astype('uint32'), relay.shape_of(uop_3292))) # shape=(15, 63)
func_2842_call = mod.get_global_var('func_2842')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_3321 = relay.TupleGetItem(func_2842_call(relay.reshape(uop_3253.astype('float32'), [7, 7, 4])), 0)
call_3322 = relay.TupleGetItem(func_2845_call(relay.reshape(uop_3253.astype('float32'), [7, 7, 4])), 0)
bop_3324 = relay.greater(uop_3292.astype('bool'), relay.reshape(bop_3318.astype('bool'), relay.shape_of(uop_3292))) # shape=(15, 63)
bop_3332 = relay.power(uop_3292.astype('float64'), relay.reshape(var_3317.astype('float64'), relay.shape_of(uop_3292))) # shape=(15, 63)
output = relay.Tuple([call_3164,call_3226,const_3227,call_3232,call_3244,uop_3253,bop_3276,call_3305,var_3306,call_3312,const_3313,var_3314,call_3321,bop_3324,bop_3332,])
output2 = relay.Tuple([call_3165,call_3228,const_3227,call_3233,call_3246,uop_3255,bop_3276,call_3307,var_3306,call_3315,const_3313,var_3314,call_3322,bop_3324,bop_3332,])
func_3335 = relay.Function([var_3245,var_3275,var_3280,var_3306,var_3314,var_3317,], output)
mod['func_3335'] = func_3335
mod = relay.transform.InferType()(mod)
mutated_mod['func_3335'] = func_3335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3335_call = mutated_mod.get_global_var('func_3335')
var_3337 = relay.var("var_3337", dtype = "float64", shape = (15, 63))#candidate|3337|(15, 63)|var|float64
var_3338 = relay.var("var_3338", dtype = "float32", shape = (15, 63))#candidate|3338|(15, 63)|var|float32
var_3339 = relay.var("var_3339", dtype = "float32", shape = (15, 63))#candidate|3339|(15, 63)|var|float32
var_3340 = relay.var("var_3340", dtype = "uint16", shape = (660,))#candidate|3340|(660,)|var|uint16
var_3341 = relay.var("var_3341", dtype = "int64", shape = (88,))#candidate|3341|(88,)|var|int64
var_3342 = relay.var("var_3342", dtype = "float32", shape = (15, 63))#candidate|3342|(15, 63)|var|float32
call_3336 = func_3335_call(var_3337,var_3338,var_3339,var_3340,var_3341,var_3342,)
output = call_3336
func_3343 = relay.Function([var_3337,var_3338,var_3339,var_3340,var_3341,var_3342,], output)
mutated_mod['func_3343'] = func_3343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2656_call = mod.get_global_var('func_2656')
func_2657_call = mutated_mod.get_global_var('func_2657')
call_3386 = func_2656_call()
call_3387 = func_2656_call()
func_782_call = mod.get_global_var('func_782')
func_789_call = mutated_mod.get_global_var('func_789')
var_3405 = relay.var("var_3405", dtype = "uint8", shape = (80, 1))#candidate|3405|(80, 1)|var|uint8
const_3406 = relay.const([3,4,3,-7,-9,-4,4,2,-10,1,8,4,3,4,-5,3,-7,9,5,4,-10,-2,-8,-8,-5,-8,2,10,5,-7,5,10,6,-3,-5,5,-7,2,3,-2,8,-3,4,-6,-9,9,2,7,1,9,7,3,-10,9,-2,-4,-1,-1,-2,3,-9,-5,-2,-6,-2,-8,6,-5,6,-2,3,9,4,-8,-6,-6,-3,-3,-5,7,6,8,-7,-10,7,1,7,5,-1,-8,3,-1,4,1,-7,-9,-4,-4,-2,-3,-6,8,-6,7,-5,4,8,6,1,3,8,10,-9,-4,-9,-9,-3,2,-9,7,-3,-3,8,3,1,-9,8,-2,4,-9,6,9,4,-1,10,8,-10,-4,-2,-8,-5,-1,-6,3,10,-4,1,-6,-7,-9,-6,2,-7,2,5,2,9,-6,-6,-7,-10,-3,-8,-5,7,-4,10,6,-2,5,-10,-1,10,-6,-4,-7,5,5,-10,-6,6,-9,-6,4,-5,7,-7,6,4,6,-4,4,4,1,-2,10,-9,-6,5,-2,8,6,10,3,-4,5,3,-7,9,-10,7,10,-8,-8,6,-3,-3,-10,-3,-8,5,6,3,4,1,4,3,-3,-10,-3,-3,1,-7,9,-5,6,-2,-7,-6,-8,2,-9,6,5,3,2,-6,1,3,1,1,-7,2,10,2,8,-10,8,-7,1,3,-5,6,2,8,-7,-3,-3,-8,-2,1,-6,-5,6,-9,3,10,-3,-5,-6,-8,-3,-9,3,-9,8,5,2,8,5,7,-1,5,5,-9,-3,6,-8,-2,2,8,-5,4,6,-7,1,-8,-3,8,-4,-9,-4,5,-9,4,10,1,-4,5,1,2,8,-6,-4,-10,-1,-5,5,-6,-9,-6,-2,-6,-6,-8,-5,-8,-2,-5,-9,3,8,-5,-2,-7,-3,1,4,4,8,-4,6,-7,6,-3,1,-3,7,-1,-2,7,-3,-3,-6,4,10,-1,10,3,2,-1,3,1,3,-7,10,10,-4,8,-9,6,-10,8,-4,8,-8,-8,-4,-10,-9,-3,3,-10,-6,7,-3,-7,-1,-7,-5,-1,-3,-5,-8,-5,2,-5,1,3,6,-3,4,-3,4,-10,-4,-3,9,-3,2,3,-6,-10,6,2,-3,2,-6,2,5,-10,-4,6,-2,-10,9,-10,-2,9,2,-1,-8,-2,-7,6,-10,-1,-3,8,5,2,1,-8,10,2,-1,-9,-5,-3,9,4,-8,-2,1,-6,7,-2,-10,1,8,-4,-6,9,-5,-4,4,2,3,4,-3,4,-10,10,7,-10,5,-5,6,-2,6,5,-6,-3,10,-4,-8,7,-5,8,8,-10,-1,-6,10,-7,-6,8,9,2,9,-6,-4,-4,8,2,7,9,-8,-4,2,5,-6,-1,-2,-6,-7,-7,3,-4,1,-9,10,8,-2,4,-6,4,-10,6,-6,-5,3,7,-5,-9,7,-7,-5,-2,-9,-2,5,-6,-9,-1,5,9,9,-5,7,1,3,10,4,4,-10,10,-10,-2,-9,7,8,1,4,-2,-2,-4,2,1,-7,3,1,3,-8,-4,6,10,-7,-1,-8,1,-5,-5,10,7,2,5,1,-7,-2,7,-2,4,-9,10,8,-9,8,-2,-9,6,-8,7,10,10,4,-4,4,8,2,3,9,3,-6,-6,3,-6,-4,2,-6,-9,-8,9,-10,-7,4,2,-4,1,-1,2,-10,7,-3,1,1,-4,-5,-3,9,-7,2,8,-6,3,-7,-3,7,-2,-9], dtype = "uint16")#candidate|3406|(660,)|const|uint16
var_3407 = relay.var("var_3407", dtype = "int8", shape = ())#candidate|3407|()|var|int8
const_3408 = relay.const([5,-9,-3,8,3,6,-1,-10,-6,-7,-3,10,8,1,-2,-5,2,-3,-9,6,-3,5,-3,4,-6,-2,6,10,2,5,-6,1,6,-10,5,4,-8,1,-6,3,-8,8,8,9,3,-4,-6,-4,8,-5,2,2,-10,3,10,5,-4,-1,3,2,3,5,-2,-2,-5,-3,8,-6,10,2,9,7,2,-4,9,-1,4,2,4,-6,2,-5,9,-7,-3,9,10,-5,-6,-7,7,-7,-3,8,-4,-8,8,-7,7,5,4,-1,-10,7,7,10,2,-6,-10,-4,-9,-1,8,-3,1,-4,-2,1,1,-9,-4,2,-8,-2,-1,3,1,-10,-1,1,-10,10,9,-3,1,-9,-1,-10,-9,7,9,3,-3,8,-5,7,3,7,-1,4,-4,-7,-6,-6,-9,9,3,9,-5,2,-5,7,-8,-10,7,-9,9,-8], dtype = "int8")#candidate|3408|(168,)|const|int8
call_3404 = relay.TupleGetItem(func_782_call(relay.reshape(var_3405.astype('uint8'), [4, 4, 5]), relay.reshape(var_3405.astype('uint8'), [4, 4, 5]), relay.reshape(const_3406.astype('uint16'), [660,]), relay.reshape(var_3407.astype('int8'), []), relay.reshape(const_3408.astype('int8'), [168,]), ), 9)
call_3409 = relay.TupleGetItem(func_789_call(relay.reshape(var_3405.astype('uint8'), [4, 4, 5]), relay.reshape(var_3405.astype('uint8'), [4, 4, 5]), relay.reshape(const_3406.astype('uint16'), [660,]), relay.reshape(var_3407.astype('int8'), []), relay.reshape(const_3408.astype('int8'), [168,]), ), 9)
bop_3411 = relay.mod(const_3408.astype('float32'), var_3405.astype('float32')) # shape=(80, 168)
func_3033_call = mod.get_global_var('func_3033')
func_3036_call = mutated_mod.get_global_var('func_3036')
var_3447 = relay.var("var_3447", dtype = "int64", shape = (7, 195))#candidate|3447|(7, 195)|var|int64
call_3446 = func_3033_call(relay.reshape(var_3447.astype('int64'), [13, 7, 15]), relay.reshape(var_3447.astype('int64'), [13, 7, 15]), )
call_3448 = func_3033_call(relay.reshape(var_3447.astype('int64'), [13, 7, 15]), relay.reshape(var_3447.astype('int64'), [13, 7, 15]), )
output = relay.Tuple([call_3386,call_3404,const_3406,var_3407,bop_3411,call_3446,var_3447,])
output2 = relay.Tuple([call_3387,call_3409,const_3406,var_3407,bop_3411,call_3448,var_3447,])
func_3453 = relay.Function([var_3405,var_3407,var_3447,], output)
mod['func_3453'] = func_3453
mod = relay.transform.InferType()(mod)
mutated_mod['func_3453'] = func_3453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3453_call = mutated_mod.get_global_var('func_3453')
var_3455 = relay.var("var_3455", dtype = "uint8", shape = (80, 1))#candidate|3455|(80, 1)|var|uint8
var_3456 = relay.var("var_3456", dtype = "int8", shape = ())#candidate|3456|()|var|int8
var_3457 = relay.var("var_3457", dtype = "int64", shape = (7, 195))#candidate|3457|(7, 195)|var|int64
call_3454 = func_3453_call(var_3455,var_3456,var_3457,)
output = call_3454
func_3458 = relay.Function([var_3455,var_3456,var_3457,], output)
mutated_mod['func_3458'] = func_3458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_3471 = relay.TupleGetItem(func_2894_call(), 0)
call_3472 = relay.TupleGetItem(func_2896_call(), 0)
uop_3507 = relay.tan(call_3471.astype('float32')) # shape=(7, 7, 4)
uop_3509 = relay.tan(call_3472.astype('float32')) # shape=(7, 7, 4)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_3515 = relay.TupleGetItem(func_2894_call(), 1)
call_3516 = relay.TupleGetItem(func_2896_call(), 1)
func_290_call = mod.get_global_var('func_290')
func_293_call = mutated_mod.get_global_var('func_293')
const_3518 = relay.const([4.992850,-2.314130,3.501808,-0.963869,-8.297495,-1.149674,-3.102170,7.712103,4.706768,-4.715540,-1.861430,-3.953932,8.042108,-0.800437,1.906761,9.622495,-7.853268,5.697160,5.683498,8.788444,-6.175621,4.873090,-4.199820,-3.937359,7.386297,-1.495649,6.490498,8.065121,-1.600784,9.334848,9.054244,0.752331,-0.148383,9.840619,-9.973707,1.651093,-9.312099,-0.953000,-2.932308,-9.437356,7.941912,6.525293,5.622016,-8.729894,-8.717396,0.566644,-0.283626,1.594112,3.001042,-3.046369,6.395902,-3.663813,-7.891910,2.127648,0.785727,-6.243840,-9.923716,5.755501,8.068794,2.133577,-9.338952,6.264344,4.770900,5.178337,-1.439108,4.492641,-6.816809,3.145163,-4.993757,4.465745,8.911826,-6.576432,3.141790,4.947408,5.175838,-8.629548,-8.411503,9.150606,5.152024,-8.112590,-4.159036,6.271003,-5.730210,-9.870082,7.612399,-6.232641,4.992906,-6.933385,8.720406,1.332185,0.181684,-7.169338,-3.942766,1.399024,-8.248367,0.447493,6.584716,8.229422,0.779150,-2.734472,8.957980,5.320094,-9.024743,2.901852,-4.043462,-5.198040,4.059763,3.602165,-8.748280,3.161084,-3.726916,-3.814482,9.356016,3.339571,2.240017,-4.602871,4.864650,7.269951,3.274518,6.032885,-3.836566,6.442539,-2.761040,7.429324,-8.668051,0.617492,5.819711,-4.079535,-1.579882,5.079400,-7.181564,-9.215283,-7.471453,1.628681,5.574542,6.867034,-3.930982,1.446988,8.962452,-7.714796,5.137118,-9.682447,4.988048,9.302262,1.744569,1.311502,-9.058711,8.288757,9.058094,2.087708,7.484266,-6.435115,9.633400,-9.602425,-2.864635,-5.360748,-6.560593,-6.815056,-0.164841,3.676746], dtype = "float64")#candidate|3518|(160,)|const|float64
call_3517 = func_290_call(relay.reshape(const_3518.astype('float64'), [10, 8, 2]))
call_3519 = func_290_call(relay.reshape(const_3518.astype('float64'), [10, 8, 2]))
func_3078_call = mod.get_global_var('func_3078')
func_3080_call = mutated_mod.get_global_var('func_3080')
var_3526 = relay.var("var_3526", dtype = "int64", shape = (1365,))#candidate|3526|(1365,)|var|int64
call_3525 = relay.TupleGetItem(func_3078_call(relay.reshape(var_3526.astype('int64'), [7, 195])), 2)
call_3527 = relay.TupleGetItem(func_3080_call(relay.reshape(var_3526.astype('int64'), [7, 195])), 2)
output = relay.Tuple([uop_3507,call_3515,call_3517,const_3518,call_3525,var_3526,])
output2 = relay.Tuple([uop_3509,call_3516,call_3519,const_3518,call_3527,var_3526,])
func_3537 = relay.Function([var_3526,], output)
mod['func_3537'] = func_3537
mod = relay.transform.InferType()(mod)
var_3538 = relay.var("var_3538", dtype = "int64", shape = (1365,))#candidate|3538|(1365,)|var|int64
output = func_3537(var_3538)
func_3539 = relay.Function([var_3538], output)
mutated_mod['func_3539'] = func_3539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2656_call = mod.get_global_var('func_2656')
func_2657_call = mutated_mod.get_global_var('func_2657')
call_3541 = func_2656_call()
call_3542 = func_2656_call()
var_3546 = relay.var("var_3546", dtype = "float32", shape = (7, 7, 4))#candidate|3546|(7, 7, 4)|var|float32
bop_3547 = relay.multiply(call_3541.astype('uint64'), relay.reshape(var_3546.astype('uint64'), relay.shape_of(call_3541))) # shape=(7, 7, 4)
bop_3550 = relay.multiply(call_3542.astype('uint64'), relay.reshape(var_3546.astype('uint64'), relay.shape_of(call_3542))) # shape=(7, 7, 4)
func_567_call = mod.get_global_var('func_567')
func_570_call = mutated_mod.get_global_var('func_570')
const_3557 = relay.const([-7,5,5,7,6,-1,1,8,-6,1,6,-1,4,2,-10,-10,7,10,-1,-7,5,1,-3,-7,7,4,-9,-6,9,-9,-2,-5,-6,-2,-2,-1,-9,4,1,-3,-1,-2,4,-5,6,1,5,-7,-4,6,-10,-4,-1,-2,-10,-3,-4,3,-4,2,-4,-8,-10,10,5,-2,6,5,4,2,-4,7,1,-5,-10,-7,-1,-3,-1,7,-10,-5,4,-4,7,2,-2,-9,-3,-9,3,-7,-10,-5,5,1,10,-10,3,-1,-9,-4,-6,-3,9,-1,-8,5,1,1,2,9,-7,4,-4,-4,10,5,1,2,-2,10,-3,7,7,-8,-9,10,-8,8,1,-7,10,-6,10,8,-3,1,5,10,6,-10,-6,3,-7,10,-4,9,-6,4,-5,9,3,3,-6,2,2,-8,-4,-4,3,9,10,-3,2,-4,2,-6], dtype = "int8")#candidate|3557|(168,)|const|int8
call_3556 = relay.TupleGetItem(func_567_call(relay.reshape(const_3557.astype('int8'), [7, 2, 12]), relay.reshape(const_3557.astype('int8'), [7, 2, 12]), ), 0)
call_3558 = relay.TupleGetItem(func_570_call(relay.reshape(const_3557.astype('int8'), [7, 2, 12]), relay.reshape(const_3557.astype('int8'), [7, 2, 12]), ), 0)
func_3335_call = mod.get_global_var('func_3335')
func_3343_call = mutated_mod.get_global_var('func_3343')
const_3561 = relay.const([6.298458,-4.387084,8.574515,-8.359020,2.042564,6.670823,-9.346252,-9.370735,9.031629,-9.833723,7.607848,-5.385109,-6.558194,1.901148,-7.111220,0.016597,6.636408,7.879475,-8.048281,1.439187,2.012711,-2.109516,6.440347,3.563247,-5.423862,-5.161738,-3.667482,4.320521,8.494896,-4.409467,-5.948836,-2.012847,7.295552,-7.392130,1.334353,2.467164,-3.992215,-5.630526,7.293809,-1.085424,5.924622,7.919786,9.345585,2.866587,4.631377,-2.928014,9.881305,5.179849,0.611634,1.397117,-9.755068,2.146139,-5.053755,-6.966668,0.367750,6.116698,6.790887,-2.004590,-7.662374,-3.241507,7.506888,8.995053,2.964143,-9.791660,-5.026265,0.216189,-9.159049,5.616602,-8.871435,-0.680147,-2.637545,-1.314718,8.293260,-4.490983,-3.665458,6.101136,-7.826416,1.536457,-0.913811,-4.955933,7.746426,3.673616,-5.830110,-0.453635,-8.035353,4.333299,-3.539013,-6.006715,-5.024317,2.425233,5.678911,4.891364,7.133969,9.210568,-5.864525,-6.490825,6.932284,5.646884,-2.707300,-7.607577,5.670230,7.447441,-8.448283,9.098751,7.506242,9.132614,1.969589,-5.095142,4.320132,-5.248237,7.187309,0.089616,-6.978414,-7.979563,-1.328471,1.927172,-2.911995,-4.466020,7.774077,-8.684818,-6.709634,7.121378,-7.106379,4.073494,-1.113685,7.709065,-5.121494,-2.752026,1.798826,-6.515279,-2.773966,0.281540,-3.281978,8.236600,1.261831,-6.020036,7.888679,-5.768672,4.684252,-0.634585,4.635747,2.045557,-3.764728,7.060247,1.346430,-2.725978,7.070220,-1.226773,4.646463,9.444841,6.356789,-9.241957,-1.541182,-0.560620,-8.077411,7.810688,-5.757672,-2.797221,-5.759564,1.129178,8.893333,6.202354,2.455043,-0.195560,5.305982,-8.983284,-3.000954,-0.958070,0.198655,-0.534443,0.991273,8.325178,4.642445,-1.134037,2.434490,7.425723,0.621447,-5.583608,-3.948789,0.234413,-8.641672,3.315681,3.098242,8.935806,-6.464475,-3.320900,0.551220,-2.202240,0.226826,1.359776,-1.334906,8.638463,7.037394,-5.866642,8.135789,-4.734955,0.231092,-0.089377,3.744417,5.095083,9.436892,7.318833,-4.495998,2.747985,-7.866909,-7.712377,4.373926,2.770982,4.614842,5.752855,4.825808,3.644705,4.294890,9.224451,0.052466,-8.028670,3.998006,-3.762595,2.199511,9.198287,-9.917909,-6.560966,-8.328138,-2.658433,-8.577769,-4.951394,8.423062,-0.707921,8.133495,5.129260,0.071187,0.145752,2.668363,-5.054730,-9.699978,4.551103,6.703101,-6.922266,9.578880,-6.252304,-6.503120,5.929652,-5.020246,-4.343919,-5.954975,-5.121955,-6.445473,-8.829744,3.677627,-7.989101,-4.701327,-5.649240,-2.129858,9.363200,-2.703974,8.105254,-4.564075,-2.467201,-5.261450,-0.174658,6.612828,-6.694846,3.646443,9.526744,4.851664,-2.605135,9.621504,-8.694898,5.042572,5.116188,1.548437,7.638615,-8.859604,-2.118086,-8.135213,7.233338,7.707556,4.669814,-2.461661,-3.871923,1.314621,2.575824,8.349201,-9.214437,-2.328086,-2.920887,-6.372598,8.257829,-8.469938,3.737205,0.841635,-8.453239,0.905035,5.982236,-2.996499,0.691195,-4.584714,6.110908,-9.222956,-1.891764,8.979928,-0.078909,-6.474515,-6.040339,2.186526,-3.494981,-1.022540,-9.620273,-4.400731,8.000848,8.952224,-9.995458,-6.327917,5.832838,7.714348,5.400494,5.599002,-8.824552,1.763643,-0.649581,4.373587,4.905571,5.605400,5.778527,7.525232,-6.107556,8.488392,-5.708986,-7.736991,4.153829,-6.868937,4.186520,-5.584038,3.736121,-0.384746,2.738131,-4.391368,-9.595234,-5.301882,-6.022508,-6.657698,-1.665078,8.713747,1.788244,-3.551554,-4.733393,4.892462,-4.751090,7.318705,-0.278035,0.966500,7.242945,-4.809600,7.982073,3.877039,0.480970,1.271844,-0.084567,-6.200840,-7.624838,-0.829068,9.166206,-2.912487,1.731661,-7.591881,-2.917873,3.438326,8.250422,4.426307,-7.659704,-6.871656,-0.043432,1.152873,4.654692,3.189150,4.744843,-2.806445,3.147859,-7.022452,-2.586187,-0.716232,5.024783,2.501713,-0.381150,1.757478,9.611195,-4.163775,8.383283,-1.805671,4.329153,3.888360,2.925443,-3.521199,-1.059751,-1.972149,2.153645,1.560841,-6.344337,4.541599,0.984575,-0.817228,6.870575,5.038318,-6.823875,6.928462,0.858514,-7.796259,-4.113059,3.922825,-2.251591,9.652985,5.721815,-0.744524,3.412779,-7.868025,-5.551084,-2.658870,4.406843,0.692830,0.567001,6.490297,2.815376,-5.532688,-5.935389,-1.412270,7.253600,-3.658706,7.800664,-5.019134,2.760362,4.981264,3.572643,6.186645,5.388741,5.589358,0.915314,9.077768,-0.887339,-9.102698,-1.830968,3.058322,-6.769893,-7.109706,-0.767252,3.960247,4.547768,-5.736353,-7.712038,0.015743,-1.898332,-4.058309,8.173758,-3.703465,8.040667,8.663770,4.542105,7.708562,-3.454540,4.115677,4.330229,-4.912116,-0.348624,1.783265,-6.490458,-3.443594,2.050229,-6.981984,6.443188,7.229844,5.347928,-9.985626,8.692834,0.055548,3.995822,1.921019,0.268833,3.695294,-6.187257,-7.437328,3.338198,8.080531,6.064080,0.371013,-4.456496,-9.671140,3.229564,-5.172171,-4.137816,4.581689,6.552393,-3.731424,-6.455220,-4.418949,0.035386,-9.245138,6.702046,2.516159,1.006269,8.898980,5.304150,-4.578157,-8.170298,-2.764716,-8.278669,-8.049162,-5.625531,-7.022385,-2.764137,0.694153,8.412043,-0.393676,1.958174,3.014431,7.884826,-3.044588,-4.425946,1.535890,8.775538,-2.830337,9.356002,5.530081,4.431854,1.976821,-8.013582,4.948874,-8.915653,1.133386,-0.703517,-3.943762,9.588957,-4.041282,6.430032,1.616222,3.021763,-5.922268,-2.556485,-5.213026,1.864124,-5.817739,-9.931056,8.610120,3.755629,-1.481290,-3.340434,6.567398,9.301471,0.189928,-7.373041,-0.469991,-2.454980,-8.252874,-8.018677,8.314360,-1.660878,-7.113965,4.202353,4.742158,-0.657254,-0.438166,9.938239,-4.079301,-1.183359,2.822970,-1.844894,-1.735408,4.420975,-0.511904,-3.413933,7.061464,4.511411,9.505376,-5.946339,0.377044,1.602057,1.789580,-7.740197,2.337674,5.082474,2.643630,-6.475570,0.681397,-9.218843,-6.296120,7.311874,-7.243281,4.733892,3.216651,-4.938726,-9.241937,4.073653,-8.858381,7.328717,-2.673177,7.863570,4.101890,5.945199,3.365201,-8.923150,-0.318890,5.280197,-8.655827,3.494745,-3.836710,-0.392494,5.134424,-8.785963,1.674314,9.590542,3.313768,5.005341,6.112756,7.219161,3.035545,-5.918324,3.696386,-0.876164,-2.534465,0.453111,7.631000,5.822622,5.301442,9.971673,4.536035,-7.611537,6.707132,0.432994,1.945455,9.331763,-9.123730,-0.264210,9.792376,3.928640,-2.657747,8.456892,7.665579,-7.228479,-9.844059,5.722972,8.632861,-2.698007,-3.805011,4.020129,-8.067728,-7.030288,-6.165814,-7.806691,0.591836,5.197876,6.228254,7.743359,6.816127,4.431778,4.241462,7.832620,4.094513,6.103560,-9.404661,0.117117,9.408556,8.330104,-7.033574,-6.448230,-7.558878,-1.360528,-8.689337,-4.876928,2.376315,4.049408,-7.514645,6.564297,9.474127,3.690892,4.124967,-3.831465,-1.711318,-1.814904,-4.588838,-6.536904,-8.211952,-3.635037,8.685049,-4.500251,-1.454560,6.090686,4.550191,-3.717788,-5.863604,-4.250124,-6.912504,-1.866541,-1.789876,-4.145525,4.048402,0.845034,5.559529,-0.673546,-7.476724,5.785725,7.150054,-6.684185,-9.956595,1.911799,-6.441845,-7.775251,-4.827689,-6.399560,-4.226639,3.489286,8.991696,5.283620,-0.694838,4.149444,7.987907,-6.428341,-6.203232,9.912929,1.207169,9.637934,-8.262697,8.645343,-6.459275,8.976762,-9.796185,4.469135,-7.217547,-4.633060,-3.217888,4.584699,-9.792268,-0.247482,-5.299729,6.357805,-0.862347,-1.808000,4.099562,-2.695234,5.152117,-1.321218,-1.632154,3.043880,-6.487760,-9.356604,-0.890198,-8.101852,2.878320,9.750295,-7.434894,1.326131,0.142081,9.063160,7.202173,-5.432066,-0.368720,-9.992959,-0.457755,9.474576,1.359394,-1.076477,7.897934,6.170605,3.574016,1.803227,3.493887,8.520943,-7.198393,1.345731,-9.854983,-7.111587,-0.206885,8.936537,-6.146317,-9.743894,-7.696346,7.597687,2.487262,-0.106774,4.503212,8.051187,7.513515,8.906056,9.616105,5.623664,9.601102,-3.729871,4.248397,-7.156763,-5.832853,3.626314,6.088948,6.241742,7.267315,-8.152055,7.568997,-7.336364,-4.621507,-6.817216,-1.087509,2.710861,3.145078,-9.071613,6.476585,-8.384900,2.613621,3.422710,6.075313,4.119244,-8.360383,0.175989,6.734405,-8.128562,-8.944387,-4.295155,2.387581,-1.964092,4.994385,2.336825,7.968759,1.787112,1.731860,-6.704049,1.644773,-0.024997,5.713011,9.291911,4.549392,-3.924954,-5.507883,-1.434998,-3.005455,-4.386797,2.187284,-4.080302,4.512766,8.594554,-6.866354,1.627907,-2.830418,-6.004305,-8.653651,-3.675614,0.678572,7.452515,7.885376,8.926306,-2.346294,-8.345895,5.242560,-9.131310,-4.596651,-2.485878,2.441298,-5.926917,4.693719,0.393278,-7.589022,8.758103,-3.900189,0.505924,-2.617275,7.496073,-0.124353,5.983331,4.217930,-9.042478,1.132227,-9.984722,7.425370,-2.595451,6.116454,-1.716235,-4.407261,-1.969388,-3.180507,-3.905923,-0.236233,7.799526,4.698792,9.656872,-3.458761,-5.817898,-9.678063,6.301410,9.475215,-3.566677,3.320971,-5.702056,-6.024385,0.565067,-4.500417,8.467355,5.820396,9.553926,2.197244,6.806673,1.948013,-7.687117,0.967944,1.902403,3.942775,1.829298,-3.884826,-6.526992,-0.592713,8.865406,-2.170245,-9.740393,7.642874,-1.455842,-0.690262,-2.770460,-6.937026,8.340294,-8.916059,-9.346740,-7.727924,2.913162,-5.173529,4.961076,2.340526,4.414940,3.995296,5.007175,-7.082097,-3.050727,-7.467597,-7.644985,7.670772,-4.318952,-6.933381,2.547247,-8.390481,6.228295,5.242889,-5.761589,1.165495,-5.510905,8.300287,6.952763,5.885722,-0.242115,-8.034689,-4.315880,-7.529522,-8.500624,-8.733431], dtype = "float64")#candidate|3561|(945,)|const|float64
const_3562 = relay.const([2,-5,-2,5,-8,10,-6,7,-2,-7,-6,-10,3,5,10,5,7,6,7,-3,10,4,-8,-5,3,1,-4,-10,-8,6,-8,-7,5,4,7,-8,-1,-3,1,-1,-2,6,5,7,-2,9,-6,-4,-4,-2,6,-5,10,5,-8,8,9,9,1,-7,-9,-10,7,-5,-2,9,4,-6,4,8,10,-3,1,4,8,-2,10,-3,7,7,4,1,1,-6,9,-6,-1,7,-3,-3,-4,9,10,2,-1,-9,6,4,-7,2,-6,4,-9,9,-6,4,-9,6,4,-9,1,-1,9,-4,-8,2,-7,1,-1,-10,5,7,-5,-5,4,-6,-3,-2,2,9,-4,-4,-1,-9,-7,9,2,-10,-2,-8,1,1,-10,-6,-1,-2,8,-8,-3,1,-7,-2,8,-8,6,-7,1,-3,-1,3,4,6,3,10,2,-6,2,8,1,-10,-1,6,-3,2,7,-5,-3,4,-7,-6,6,10,1,9,3,10,6,-7,-4,4,-6,-4,-2,-9,-1,-7,-6,-6,-4,-8,6,-2,-4,3,10,9,6,7,10,-6,8,9,-8,-10,1,9,3,-10,-4,5,10,-10,-7,-6,-2,1,6,3,-6,6,8,-5,-1,-8,-9,9,-6,8,7,-2,6,8,-5,8,1,-9,1,1,-2,-9,9,10,8,-1,-2,3,-6,2,9,3,3,-10,-9,-8,-10,-9,4,4,-5,-6,-8,7,-9,7,10,-9,-1,7,10,10,2,-10,-9,8,-1,-3,5,-5,10,2,2,-2,2,5,-7,-3,4,-5,8,-7,10,-8,-1,-9,4,2,5,-9,7,1,8,-5,5,-5,5,-2,3,2,-10,6,4,-8,-4,-8,-10,7,2,10,1,-10,9,-1,-9,-6,-4,5,-10,1,-1,-7,7,-10,-3,6,-8,-10,8,9,4,8,-8,10,-5,4,-9,6,-6,-6,-9,-2,-9,-5,-4,2,-8,6,3,-5,-4,-2,-1,-10,9,5,8,-6,-10,2,5,-9,-6,10,10,6,4,8,10,-4,6,8,7,-1,-5,10,-8,-5,-6,2,10,-2,7,2,2,6,-5,3,6,-2,6,-3,3,-7,-2,-8,6,-7,-2,10,-6,5,9,-7,2,10,-1,2,-2,4,-9,-6,-4,10,3,1,6,-5,4,10,9,-3,4,6,-4,9,5,-10,8,5,10,3,4,1,-9,-1,2,1,-9,1,9,9,-3,5,1,-5,7,-8,-7,6,-1,-6,-3,8,-6,-5,9,1,5,5,5,10,1,3,-7,6,8,-1,-9,-2,8,-9,3,8,5,7,-3,-10,-5,2,1,-7,10,-1,9,-5,3,3,-6,-6,-4,9,-10,-4,3,4,-6,5,1,8,-1,6,-8,8,9,3,6,5,-2,-10,6,10,-5,9,-5,7,-9,8,3,9,1,-7,5,-3,-10,-3,7,10,10,-1,4,1,-10,-9,4,-6,10,-1,5,4,-9,4,10,-9,3,7,7,-1,6,1,-7,-2,10,4,1,3,-4,-5,2,9,3,1,6,10,-3,10,8,9,-9,-3,2,8,4,-2,-9,-2,-9,-4,-6,-4,5,-8,-8,-1,3,-7,2,3,-1,2,8,-2,-6,9,-3,10,-7,-1,7,-3,-7,-5,8,-7,-3,-6,-5,-5,9,3,-6,-9,1,-9,-3,-9,5,-1,10,-9,-7,3,7,2,-1,-7,-10,-10,-10,1,3,6,-2,10,-3,6,-6,-1,-6,-9,10,5], dtype = "uint16")#candidate|3562|(660,)|const|uint16
var_3563 = relay.var("var_3563", dtype = "int64", shape = (88,))#candidate|3563|(88,)|var|int64
call_3560 = relay.TupleGetItem(func_3335_call(relay.reshape(const_3561.astype('float64'), [15, 63]), relay.reshape(const_3561.astype('float32'), [15, 63]), relay.reshape(const_3561.astype('float32'), [15, 63]), relay.reshape(const_3562.astype('uint16'), [660,]), relay.reshape(var_3563.astype('int64'), [88,]), relay.reshape(const_3561.astype('float32'), [15, 63]), ), 4)
call_3564 = relay.TupleGetItem(func_3343_call(relay.reshape(const_3561.astype('float64'), [15, 63]), relay.reshape(const_3561.astype('float32'), [15, 63]), relay.reshape(const_3561.astype('float32'), [15, 63]), relay.reshape(const_3562.astype('uint16'), [660,]), relay.reshape(var_3563.astype('int64'), [88,]), relay.reshape(const_3561.astype('float32'), [15, 63]), ), 4)
func_290_call = mod.get_global_var('func_290')
func_293_call = mutated_mod.get_global_var('func_293')
const_3576 = relay.const([-3.726119,-4.146022,6.394258,-7.076451,3.699152,-0.781095,-1.983979,2.349272,-8.603944,-8.795305,6.894813,-0.777148,2.941520,1.679173,-0.181375,-4.703802,-2.907963,-9.002748,-9.650555,-2.036594,6.270870,-0.733015,-9.322905,-5.277352,1.694956,8.036970,4.417145,-1.395584,-8.949872,1.218805,-6.297743,4.663963,-9.796055,-3.526771,2.843489,8.259201,-0.034610,-3.730629,0.387698,9.521619,9.134515,-3.464679,-1.225329,1.423985,-3.477243,-2.106153,-5.496635,2.088319,3.913308,6.613838,5.025452,7.108895,-7.179069,-5.495743,1.261568,1.656525,-3.528926,8.257882,-6.084795,2.145268,5.238369,3.114690,-0.046574,-6.067751,3.047645,-5.997067,-5.913820,-8.170338,1.927557,0.433287,-4.594964,0.878972,-4.104662,-5.714810,5.285974,8.595888,0.171805,6.121285,0.910765,3.869060,4.385610,1.247933,8.101252,3.194827,-0.835520,0.664635,6.709672,6.135490,6.807188,-3.559236,-4.911829,8.333383,-9.962147,8.501015,1.384126,-3.415221,-0.789888,-9.092585,2.589634,-2.403431,-6.888032,4.921475,-5.239406,9.979718,-2.732600,-3.440828,7.127835,-3.225818,-0.776143,-5.174203,-0.549508,9.181257,-8.979141,-5.196221,3.768181,-2.997937,1.633636,3.423410,-4.976393,9.323676,-6.930620,4.097453,-1.719729,8.964924,7.043309,-5.280368,2.806983,-8.504077,7.614443,2.043174,0.698852,7.336010,9.408718,-0.621984,9.862864,-1.578702,-5.593042,-9.277442,8.504666,6.731357,0.059942,-0.812253,1.824444,-4.271040,-2.414945,8.700407,2.920187,-3.801361,0.740390,5.726346,-2.292776,-6.821062,9.954268,5.176330,5.115741,-9.067193,-4.372484,5.442534,4.474985,8.208791], dtype = "float64")#candidate|3576|(160,)|const|float64
call_3575 = func_290_call(relay.reshape(const_3576.astype('float64'), [10, 8, 2]))
call_3577 = func_290_call(relay.reshape(const_3576.astype('float64'), [10, 8, 2]))
bop_3587 = relay.greater_equal(call_3556.astype('bool'), relay.reshape(const_3557.astype('bool'), relay.shape_of(call_3556))) # shape=(7, 2, 12)
bop_3590 = relay.greater_equal(call_3558.astype('bool'), relay.reshape(const_3557.astype('bool'), relay.shape_of(call_3558))) # shape=(7, 2, 12)
func_3153_call = mod.get_global_var('func_3153')
func_3159_call = mutated_mod.get_global_var('func_3159')
var_3594 = relay.var("var_3594", dtype = "float64", shape = (4, 192))#candidate|3594|(4, 192)|var|float64
var_3595 = relay.var("var_3595", dtype = "float64", shape = (546,))#candidate|3595|(546,)|var|float64
const_3596 = relay.const([8,-10,4,-8,-1,-1,8,-4,-3,-10,4,-5,-6,-8,-5,-6,-9,-5,2,-4,-10,4,8,-5,-8,-1,6,9,-8,-10,-8,-7,-5,-1,-8,1,-1,-5,5,-2,-4,-7,3,-2,-3,-4,-1,9,7,-2,-5,2,8,-7,-9,5,-1,6,10,-5,-2,-3,1,-8,10,-3,3,-10,-3,3,5,-7,-2,-2,-1,-5,-5,-6,8,5,2,-4,-3,5,1,-10,-7,5,-8,-2,-4,-1,-5,7,9,-1,2,-7,2,-3,-3,1,1,-9,-3,-9,-10,-7,-7,8,6,10,-7,-3,10,-1,-2,-3,8,-4,-7,-7,-5,-9,9,-10,-9,3,7,4,-5,-2,-5,1,-1,6,10,-2,-8,-9,10,-3,2,-4,3,10,-3,6,9,3,4,5,-3,-1,10,9,3,-1,-10,-4,3,3,-8,3,-6,-7,-6,-6,-1,-9,9,3,1,-5,-8,-6,-4,-6,7,10,-8,8,1,-2,-9,5,10,-9,1,2,6,-2,-6,-3,-2,10,1,-3,-10,-7,7,-8,-10,-7,-1,-4,-8,7,7,-1,-6,10,-9,-2,-7,9,-10,10,-3,5,-10,3,5,4,-2,2,5,5,-4,-6,-7,6,3,-9,5,-2,-3,2,7,-10,2,6,6,3,2,3,-4,7,5,6,2,-6,5,2,6,2,6,7,-1,1,10,3,3,3,-9,-9,-1,3,2,9,-7,-8,-8,6,5,-5,1,1,1,1,7,9,4,-3,7,-6,10,9,9,9,3,1,3,10,-7,2,-3,-9,4,5,3,-8,-9,1,4,-2,-6,-5,-4,-3,-7,5,7,-1,6,-4,9,-2,-1,-6,4,6,-2,9,7,9,8,-6,-7,-7,2,4,5,2,10,5,-10,4,-1,8,-6,1,-10,-2,-3,10,2,7,-9,-5,8,2,10,-10,10,10,6,1,-8,2,4,7,5,5,-2,2,-2,-8,10,-7,5,-6,9,-6,2,8,-10,-4,-8,9,-9,2,5,8,-7,6,10,-4,1,8,5,-1,-1,-10,-4,-9,-1,-6,10,-4,9,-10,3,-10,3,10,-3,3,-6,1,3,2,-2,2,4,-10,5,-2,5,5,-9,5,7,-6,-4,-2,-8,1,-7,-3,-1,4,4,-6,-7,8,-7,-7,-3,-7,1,-4,-6,-8,-9,3,-7,-6,2,-1,-5,6,2,-8,8,1,-5,-8,-3,-3,1,-4,1,-9,-4,-4,9,-2,-5,5,-6,-5,-3,-3,1,-9,-9,9,5,-5,-10,9,-8,10,1,-1,2,-9,8,3,7,-2,-5,8,-2,-8,-1,10,9,-5,5,-9,-3,-4,-10,2,9,4,8,-5,-3,1,-1,3,2,10,7,6,8,1,-7,3,-9,-1,7,7,10,-5,-2,-8,-8,4,8,5,10,-3,-1,2,-3,10,6,3,-9,6,7,-6,4,2,9,-9,-5,3,-9,9,5,-6,-9,8,5,7,-10,9,-4,8,-10,10,7,3,-8,10,2,-6,-4,6,8,3,10,-2,3,-6,6,10,9,1,-6,1,-8,-10,1,4,-3,7,-9,6,10,-6,-7,-10,-10,4,-4,5,-1,-6,2,4,-5,7,-2,5,-4,-6,9,-9,-9,-4,-7,-4,-3,3,-8,-1,7,-8,-2,1,-6,-8,5,2,8,6,5,6,-2,-5,5,5,5,-1,8,2,-2,-9,-8,2,8,-3,-10,5,7,4,8,-2,-3,-10,8,7,2,7,-8,8,-7,-1,10,-8,-7,-7,-2,-8,5,-7,9,2,-9,-3,-8,-3,4,1,-1,10,-1,-3,-7,7,-8,-4,-8,10,7,-4,-6,9,2,-1,9,1,8,3,4,9,6,-6,-10,-4,10,2,-5,-6,-3,10,-10,-3,4,6,-8,7,-8,2,1,-5,-4,-9,-9,5,-3,3,-3,-2,2,4,-10,-6,6,-6,-4,2,-9,-6,-7,10,4,-3,-10,4,2,-4,1,-3,-9,-5,-2,-10,9,1,5,-10,-5,-5,-10,8,9,6,-3,-6,-8,7,10,-10,1,9,-3,6,1,-4,2,-5,-8,-10,10,5,-9,-7,-10,-1,8,-9,-8,8,6,-10,-8,9,6,6,7,5,4,8,8,-6,-9,7,10,7,-1,-6,2,4,-7,5,2,4,1,-1,-1,-5,-2,10,-10,-9,5,-10,3,6,-4,5,-2,-5,1,2,-5,-4,1,-10,-10,4,6,-4,-7,8,3,1,-4,-6,4,-7,-5,5,-5,-7,-6,10,-4,-9,-5,6,2,-3,4,9,7,7,9,8,-9,-8,-7,-4,-5,3,2,9,-7,-10,2,-10,-7,3,-1,9,7,2,10,-4,-1,-8,-8,-6,-9,-9,8,-2,-6,-3,7,6,1,-7,-6,-7,-1,9,-2,-6,3,-4,5,-8,-10,-10,10,10,-6,4,1,10,-6,1,5,-9,-5,1,-6,2,7,4,2,1,-4,-1,-6,-6,9,10,-7,2,9,-1,-2,4,7,-7,3,-8,-4,-1,7,5,-5,9,4,-1,7,-2,6,-6,-4,-3,-4,-4,-7,9,2,-1,-10,8,-4,-9,-2,-9,6,1,-10,-9,-5,-3,9,8,7,-2,-10,3,1,4,-6,4,-8,-4,-1,-5,7,9,-9,1,6,6,-4,-1,-2,8,8,10,7,4,-6,-4,-6,-10,10,2,-3,-4,-9,1,10,9,-1,3,4,8,6,-6,-5,-9,8,-2,2,-9,3,-2,9,-2,-2,-2,2,-10,-2,-3,3,-3,-5,-1,3,8,9,-2,1,1,-8,-2,3,-1,8,-1,7,-9,8,-1,-1,-10,7,9,7,3,-4,-6,-7,-3,2,-6,-7,3,-7,10,-1,8,-4,8,-8,-5,-6,-1,-9,-9,-10,1,-10,-5,-9,2,-5,2,7,9,10,2,-6,-10,9,5,2,7,2,-6,-6,5,-9,3,6,5,-7,-2,10,-9,9,6,-1,3], dtype = "int8")#candidate|3596|(1120,)|const|int8
call_3593 = relay.TupleGetItem(func_3153_call(relay.reshape(var_3594.astype('float64'), [16, 16, 3]), relay.reshape(var_3595.astype('float64'), [546,]), relay.reshape(const_3562.astype('uint16'), [660,]), relay.reshape(call_3556.astype('int8'), [42, 4]), relay.reshape(const_3596.astype('int8'), [1120,]), ), 0)
call_3597 = relay.TupleGetItem(func_3159_call(relay.reshape(var_3594.astype('float64'), [16, 16, 3]), relay.reshape(var_3595.astype('float64'), [546,]), relay.reshape(const_3562.astype('uint16'), [660,]), relay.reshape(call_3556.astype('int8'), [42, 4]), relay.reshape(const_3596.astype('int8'), [1120,]), ), 0)
output = relay.Tuple([bop_3547,call_3560,const_3561,const_3562,var_3563,call_3575,const_3576,bop_3587,call_3593,var_3594,var_3595,const_3596,])
output2 = relay.Tuple([bop_3550,call_3564,const_3561,const_3562,var_3563,call_3577,const_3576,bop_3590,call_3597,var_3594,var_3595,const_3596,])
func_3602 = relay.Function([var_3546,var_3563,var_3594,var_3595,], output)
mod['func_3602'] = func_3602
mod = relay.transform.InferType()(mod)
mutated_mod['func_3602'] = func_3602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3602_call = mutated_mod.get_global_var('func_3602')
var_3604 = relay.var("var_3604", dtype = "float32", shape = (7, 7, 4))#candidate|3604|(7, 7, 4)|var|float32
var_3605 = relay.var("var_3605", dtype = "int64", shape = (88,))#candidate|3605|(88,)|var|int64
var_3606 = relay.var("var_3606", dtype = "float64", shape = (4, 192))#candidate|3606|(4, 192)|var|float64
var_3607 = relay.var("var_3607", dtype = "float64", shape = (546,))#candidate|3607|(546,)|var|float64
call_3603 = func_3602_call(var_3604,var_3605,var_3606,var_3607,)
output = call_3603
func_3608 = relay.Function([var_3604,var_3605,var_3606,var_3607,], output)
mutated_mod['func_3608'] = func_3608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_3669 = relay.TupleGetItem(func_2702_call(), 0)
call_3670 = relay.TupleGetItem(func_2703_call(), 0)
output = relay.Tuple([call_3669,])
output2 = relay.Tuple([call_3670,])
func_3676 = relay.Function([], output)
mod['func_3676'] = func_3676
mod = relay.transform.InferType()(mod)
mutated_mod['func_3676'] = func_3676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3676_call = mutated_mod.get_global_var('func_3676')
call_3677 = func_3676_call()
output = call_3677
func_3678 = relay.Function([], output)
mutated_mod['func_3678'] = func_3678
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3704 = relay.const([[[-2.240071,-3.308664,-2.305025,-2.980107],[-1.283706,-1.997815,-4.581206,6.820845]],[[6.206860,-6.682138,7.184290,2.036337],[2.778019,-0.390604,1.054686,5.987908]],[[-4.230796,3.595202,1.492442,5.380713],[-9.303314,2.302556,-4.215440,1.738434]],[[-8.785814,-6.232965,-7.192434,-3.184783],[9.730183,5.514994,-2.787955,4.115947]],[[-3.238614,5.689890,-7.668090,-8.236220],[3.689863,0.032488,-2.191407,2.723340]],[[-9.147684,-0.424540,-8.161483,-6.267799],[7.140856,-1.123218,5.807705,-1.393100]],[[-9.007428,3.389660,9.525629,-8.053268],[-3.361015,-0.084747,-7.530057,7.783656]],[[-2.607244,-1.647619,-7.905127,-5.508542],[-7.614923,4.342088,-4.088371,-7.367481]],[[-7.855430,9.792011,5.405551,-8.216261],[4.646850,-9.428023,-6.443494,-0.504095]],[[5.825194,5.920983,-2.320140,6.683794],[-0.091498,-2.849487,4.354859,-4.366614]],[[-6.606535,1.498675,6.363236,5.592543],[-2.433401,-9.888767,-4.383190,6.272889]],[[2.236704,7.715432,2.023036,5.300666],[-8.137333,-7.379654,-2.898655,6.643510]]], dtype = "float64")#candidate|3704|(12, 2, 4)|const|float64
uop_3705 = relay.acos(const_3704.astype('float64')) # shape=(12, 2, 4)
output = uop_3705
output2 = uop_3705
func_3710 = relay.Function([], output)
mod['func_3710'] = func_3710
mod = relay.transform.InferType()(mod)
output = func_3710()
func_3711 = relay.Function([], output)
mutated_mod['func_3711'] = func_3711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_3844 = relay.TupleGetItem(func_2894_call(), 0)
call_3845 = relay.TupleGetItem(func_2896_call(), 0)
func_2656_call = mod.get_global_var('func_2656')
func_2657_call = mutated_mod.get_global_var('func_2657')
call_3847 = func_2656_call()
call_3848 = func_2656_call()
output = relay.Tuple([call_3844,call_3847,])
output2 = relay.Tuple([call_3845,call_3848,])
func_3851 = relay.Function([], output)
mod['func_3851'] = func_3851
mod = relay.transform.InferType()(mod)
mutated_mod['func_3851'] = func_3851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3851_call = mutated_mod.get_global_var('func_3851')
call_3852 = func_3851_call()
output = call_3852
func_3853 = relay.Function([], output)
mutated_mod['func_3853'] = func_3853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3710_call = mod.get_global_var('func_3710')
func_3711_call = mutated_mod.get_global_var('func_3711')
call_3886 = func_3710_call()
call_3887 = func_3710_call()
func_152_call = mod.get_global_var('func_152')
func_155_call = mutated_mod.get_global_var('func_155')
var_3889 = relay.var("var_3889", dtype = "int8", shape = ())#candidate|3889|()|var|int8
const_3890 = relay.const([-8,-10,-3,-7,8,5,-10,10,-5,-1,-7,-7,-4,-8,2,5,2,-7,2,6,-9,-8,1,1,10,-4,-10,4,4,1,1,7,5,8,8,-7,-4,-8,-4,2,10,3,-9,-5,8,8,-4,-3,-1,-6,5,-7,-8,-6,3,-6,-4,-4,5,3,-7,-3,5,10,6,-4,9,2,6,2,5,-4,-9,9,8,-9,4,6,7,5,3,-4,3,-2,3,-8,-3,5,-1,-10,-10,-3,-3,4,-6,1,10,-2,1,-2,9,3,4,-6,4,-3,-6,-9,-5,9,1,1,-7,-4,8,-5,8,8,7,7,1,6,-6,6,-7,3,5,9,6,2,-1,-8,6,9,2,-5,-5,10,-7,3,9,1,-9,-10,8,-8,1,-6,-5,-8,-2,-10,5,6,-4,5,-6,-9,-9,-1,-3,5,-8,8,-7,-10,1,-6,8,6,5,-7,-10,-8,-5,7,10,1,5,3,8,-3,-1,-5,2,-1,5,-8,4,5,4,9,-3,4,-10,2,-10,8,3,-10,-9,2,1,-10,-5,-6,4,-5,-6,7,-7,7,-3,9,-10,-2,2,-2,5,5,4,1,9,-9,6,-2,-4,-8,-3,4,6,10,-4,-8,-4,-9,6,-8,-5,-1,-2,3,1,-2,8,8,4,1,-2,-6,-4,7,-6,-7,2,3,-1,8,8,8,8,10,-6,1,-2,6,-6,5,8,5,10,-1,-4,2,-3,-8,6,4,-2,2,5,-7,-1,-1,6,6,-3,6,-8,-9,-9,-1,-8,-7,-3,2,6,-9,6,3,-7,8,8,9,-2,-8,-7,6,-7,4,3,-7,7,-4,-5,5,-8,2,-6,-3,-9,-1,-9,2,3,3,1,-3,-8,-1,5,-5,-8,-8,-9,-5,1,7,-7,3,4,-6,-8,5,-7,10,-2,-5,-5,-7,6,-5,9,5,2,8,6,2,2,-3,-4,10,-8,-10,-2,7,8,4,-7,-5,-9,-4,-4,2,-2,6,-5,-5,5,-6,-10,-6,-9,8,-1,3,-6,6,1,-8,2,2,2,2,3,-6,-3,3,-1,5,4,2,7,9,-8,3,-3,-9,4,-4,-9,10,-1,3,-2,5,-8,-5,9,-3,3,8,2,-2,-9,3,-9,10,-4,3,3,3,9,6,-3,4,6,-1,9,7,4,-6,1,-2,-10,2,-6,-5,-4,-10,2,3,6,-8,-9,-1,-3,5,-2,10,5,5,10,4,-1,-10,-10,8,-7,9,1,1,6,9,-5,1,-4,9,4,-7,2,7,2,-6,-4,-7,8,9,5,3,1,-10,-8,-1,4,9,-7,8,2,8,-2,10,-4,3,9,1,-9,6,-10,2,-5,2,5,-1,5,-2,-8,-4,-3,4,-2,-3,4,8,4,-9,-1,3,2,-5,-5,3,-1,-8,3,-6,6,6,7,-7,-4,-4,-9,2,-10,8,6,-1,-10,9,10,8,5,8,-8,4,1,-6,4,-2,5,-10,-5,7,-9,-9,-2,-4,3,-8,7,2,2,10,7,10,6,-4,2,-6,-8,9,2,-8,7,5,-9,-6,6,-7,-10,7,-1,-6,-2,4,-7,-1,-10,5,4,3,-6,4,-5,-7,10,-8,4,-3,-6,6,2,2,6,-9,-7,4,3,7,3,-10,7,5,4,8,7,-3,3,10,5,2,4,-7,-5,5,-8,10,-7,-7,-3,2,2,8,3,7,-1,-1,-4,-4,-5,-7,-5,8,-2,-2,-3,6,10,-1,3,-2,-4,1,-3,8,-3,-1,-4,8,-6,-2,5,-2,-1,9,-10,10,7,-3,6,8,-8,8,8,9,-10,-2,-10,-1,7,7,-2,3,-10,-10,8,6,7,-8,-3,8,8,8,6,9,9,3,4,-9,-2,1,-6,-8,4,-7,-2,10,-9,-8,-8,-10,-4,8,-1,-4,-7,5,-3,-6,6,4,2,-8,4,6,4,9,-1,7,6,-4,-6,6,-9,-6,10,5,-6,3,-10,4,-6,-3,9,-8,-1,10,1,-7,-10,9,7,-2,-8,4,5,-1,10,8,4,-6,8,2,-2,4,-6,-4,7,-5,-2,-3,7,-7,-10,6,-1,-10,-10,10,5,-6,7,3,7,-8,-9,7,9,-2,-1,4,3,-10,-10,5,-6,-6,2,-8,-1,9,1,5,1,8,6,-3,8,1,6,3,8,9,-1,8,-5,-2,-2,6,-4,5,-8,10,2,6,-9,1,10,-5,7,5,-10,-8,-5,8,-1,-1,9,-7,-5,10,1,9,-3,4,-10,4,5,-2,8,-2,-3,8,-6,-5,-7,5,10,9,10,5,-10,10,3,-8,4,-2,2,-8,-4,-9,2,8,8,3,-1,-10,7,10,1,-3,-7,1,6,10,-4,10,5,-6,-7,2,9,-1,-1,-8,-9,9,-5,-7,-10,2,10,-10,2,-9,-8,7,5,4,8,-10,3,5,10,1,-1,-3,-5,-5,2,-5,8,-6,1,1,-1,10,-10,2,-7,7,-5,8,-5,6,8,8,5,-9,3,10,10,-8,3,8,2,-7,-8,-5,-7,-2,2,10,-3,4,10,-10,1,9,-7,-3,2,3,4,-3,-9,-5,5,8,8,-4,5,-7,3,2,2,-6,-5,4,-9,10,4,-10,-5,-6,2,9,7,4,1,7,-3,-6,6,-10,9,-4,9,1,-4,-5,1,4,10,-8,-5,-2,2,9,-10,-2,10,1,3,1,10,-6,10,9,-9,10,-1,-4,-2,10,1,8,-9,-9,10,-10,6,1,7,9,-6,9,1,2,-6,5,4,9,2,-8,7,-3,3,2,-6,5,8,-1,9,4,6,5,5,-5,-9,1,10,-1,-10,4,-4,7,-5,4,-2,1,10,-1,-9,1,-1,6,-8,6,-1,-5,-3,8,-3,-4,-9,-4,-3,3,1,-2,8,-6,6,-6,4,2,4,-7,-10,-1,-8,-9,1,-4,6,7,-1,-10], dtype = "int8")#candidate|3890|(1120,)|const|int8
call_3888 = relay.TupleGetItem(func_152_call(relay.reshape(var_3889.astype('int8'), []), relay.reshape(const_3890.astype('int8'), [14, 5, 16]), ), 0)
call_3891 = relay.TupleGetItem(func_155_call(relay.reshape(var_3889.astype('int8'), []), relay.reshape(const_3890.astype('int8'), [14, 5, 16]), ), 0)
output = relay.Tuple([call_3886,call_3888,var_3889,const_3890,])
output2 = relay.Tuple([call_3887,call_3891,var_3889,const_3890,])
func_3911 = relay.Function([var_3889,], output)
mod['func_3911'] = func_3911
mod = relay.transform.InferType()(mod)
mutated_mod['func_3911'] = func_3911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3912 = relay.var("var_3912", dtype = "int8", shape = ())#candidate|3912|()|var|int8
func_3911_call = mutated_mod.get_global_var('func_3911')
call_3913 = func_3911_call(var_3912)
output = call_3913
func_3914 = relay.Function([var_3912], output)
mutated_mod['func_3914'] = func_3914
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3936 = relay.var("var_3936", dtype = "uint64", shape = (4, 14, 1))#candidate|3936|(4, 14, 1)|var|uint64
var_3937 = relay.var("var_3937", dtype = "uint64", shape = (4, 14, 9))#candidate|3937|(4, 14, 9)|var|uint64
bop_3938 = relay.greater(var_3936.astype('bool'), var_3937.astype('bool')) # shape=(4, 14, 9)
func_590_call = mod.get_global_var('func_590')
func_592_call = mutated_mod.get_global_var('func_592')
const_3951 = relay.const([-9.652672,-6.828293,4.057707,3.739233,3.149866,5.139431,8.134444,6.396913,-2.110469,4.202704,6.657889,-4.133188,3.211599,-8.159795,1.949453,-5.426371,-4.477519,-9.244700,6.251660,9.322964,8.650629,-1.670681,-7.672343,9.163123,1.146031,-3.378546,-0.349459,-8.973606,6.010619,9.284131,-5.783494,-2.782941,-3.842238,-0.631084,-9.162099,-0.615450,-4.835267,2.672269,3.776218,5.974892,8.953999,7.647854,1.987857,2.516356,-7.102832,4.685785,-6.664594,-4.720825,-0.785973,-4.917783,-2.794599,9.261109,6.859259,-8.986827,3.033839,1.291796,4.425770,-5.195100,-8.853308,8.203761,-0.011800,1.420277,-9.393666,-1.501925,6.442615,-7.518026,0.274956,-7.665409,-5.341313,7.258659,1.454891,-2.873796,0.671738,1.108092,-7.165583,2.182798,8.440050,-7.162816,-4.778995,-7.261637,0.374349,6.765551,-6.345483,-1.747073,-0.755504,-1.700089,-9.187889,0.956989,-2.903763,-0.928652,0.410867,2.014795,-3.959081,3.557306,-9.412549,-6.561856,-0.603585,0.157921,-1.292086,7.204275,9.863677,-7.153163,-6.502394,-3.969779,-2.667179,5.523461,-6.581573,-8.996698,-8.081015,2.755729,2.516033,2.003579,8.883533,6.644820,-5.925390,6.064172,-1.544866,9.398386,0.318327,4.183192,-9.513141,6.355854,-5.703749,-6.623939,4.759254,3.731976,8.607050,-9.403651,8.400297,-2.486504,-4.667090,-7.992006,5.478247,4.571389,5.333758,-9.629611,-5.551602,-9.049076,5.135506,7.974032,-9.598217,-0.449728,5.988856,-9.767916,-1.528327,-0.306197,-4.620849,3.585821,2.279317,-5.558155,-5.873958,-7.787181,6.381678,7.466615,6.972798,3.678292,0.730913,-9.708185,6.543602,-3.848854,3.075301,-4.296742,5.787885,-2.367240,1.575838,9.234854,9.022994,-8.766667,-5.837040,-8.305538,-7.862402,4.412912,8.460140,4.972039,-1.528995,-3.424381,-1.570345,-7.802510,-0.065082,-6.098437,8.526864,9.667986,-2.259147,4.149406,8.778309,-4.779940,-4.141377,-9.729772,4.015929,-8.123065,0.328519,-8.632717,6.485959,9.949165,5.051780,9.031668,9.182113,2.533548,-9.181739,-6.201376,-7.644530,-5.313689,-9.184734,-0.595328,-8.997961,0.033199,7.076143,0.662850,-0.885494,0.254106,2.097147,3.860004,6.489073,-0.710990,5.835170,-9.032887,6.464237,-6.832624,8.602077,-0.923974,1.710431,6.096045,7.479139,-6.322901,2.068530,8.778008,-9.090028,0.482097,4.195938,-8.563942,-8.630887,7.471209,0.066260,5.256784,-8.566023,-2.622503,0.018953,4.989345,-1.369914,6.318276,7.368520,-6.554090,3.735760,7.896132,3.205246,3.086196,-3.014287,-9.341001,7.443001,-6.047298,7.482768,0.543550,-2.826158,0.414890,-1.542366,-5.651774,3.876878,-3.626269,-5.621417,2.126728,9.628608,8.255592,6.362823,7.604674,2.591810,2.313974,-6.111816,-9.102382,7.788031,9.955454,-4.897377,1.519737,3.827514,-5.342255,6.931543,5.544273,-9.001015,2.400199,-8.041880,-8.356636,-5.832356,-5.539945,3.097542,-4.435031,-4.556447,-3.159559,3.827676,-1.268577,2.776861,1.337607,4.043084,8.567371,3.199560,4.001747,4.149654,-4.480604,6.304824,-1.854376,3.353837,0.786469,0.281204,-0.191707,1.287567,9.549420,3.662776,-1.774512,3.157825,-7.235930,-7.960046,2.946087,-5.030315,6.443837,-9.914129,-9.267997,-1.378966,-4.096528,5.130380,0.577040,6.769417,-3.103633,4.123476,2.305195,-7.773451,4.397900,-0.303789,0.416215,-3.370304,-7.034296,-7.205529,-5.271240,4.057080,-3.054905,7.029428,9.745941,-3.924871,7.548220,-7.093274,4.277681,8.757682,5.821038,0.800875,-9.581576,-4.054985,-8.279143,8.061656,0.825967,0.856981,6.704680,9.945480,-5.381572,-7.958170,6.292360,-7.855848,-7.669796,-4.560981,8.874516,-2.377129,7.025262,8.434935,7.811382,7.754233,6.917727,1.280220,3.385501,0.471304,-6.334756,-8.311580,0.345308,-6.274502,-2.899123,2.234027,-3.868175,3.266379,-4.140933,-9.691102,4.777126,9.510724,-9.750910,8.975929,4.915341,2.148851,9.076626,-7.790021,6.314585,-8.130989,7.979934,1.953173,0.514097,3.629995,7.991642,4.796939,1.721324,6.661509,5.774353,-3.978823,-8.638096,0.424346,4.084460,-0.361431,-3.969076,-4.097773,-4.322658,-7.305520,-6.538866,-8.391655,2.402093,-3.070990,-8.609838,-7.445530,-2.842303,-9.114931,1.197879,-1.793761,8.902287,9.275277,6.699413,9.250765,5.162600,1.751230,-7.020499,-2.603443,-6.461128,-2.565275,-1.199407,-9.403613,4.968519,1.399373,-9.826878,1.780704,-6.463411,-2.883434,-9.967343,-3.578046,5.103600,9.585960,3.514654,0.504107,-3.453106,-1.191031,-3.269957,-1.280117,5.472109,-2.215806,6.786794,-9.050887,-3.183994,-3.969786,-5.343350,7.186451,-0.331203,6.967158,-9.967390,6.456745,7.593415,5.551887,7.869827,0.922849,-6.858215,-7.403647,-5.326240,2.540474,7.454187,7.273511,-9.694931,5.106343,-8.043168,-1.747622,4.252447,6.993191,7.873651,1.256687,-1.274895,-4.505390,-0.284991,3.599807,3.230106,-6.307169,-1.633948,-8.769021,-6.738305,3.034811,6.602009,1.331346,-4.722462,0.803706,2.741639,-4.811580,1.081228,-5.603000,7.309084,-1.868794,1.024568,-6.587895,2.316745,-3.028392,-4.313359,-5.790273,-2.916523,5.409457,-2.881493,-0.722519,4.419227,-7.369523,9.899960,-7.387965,-8.089720,0.653130,0.556323,8.303423,4.965892,-3.908975,9.719562,9.399264,-6.937895,-5.116747,2.388690,4.284978,0.066985,4.628904,-9.347228,-7.743053,2.803936,-4.697351,9.053025,1.621625,-0.599205,-3.455933,-1.156933,1.968619,-4.443251,8.757900,-7.343448,-4.380426,-1.417069,5.124039,-1.229994,3.768947,9.565417,-7.593017,6.352204,8.436137,-1.925027,-8.504223,5.656025,4.540113,8.025245], dtype = "float64")#candidate|3951|(546,)|const|float64
call_3950 = relay.TupleGetItem(func_590_call(relay.reshape(const_3951.astype('float64'), [13, 7, 6])), 0)
call_3952 = relay.TupleGetItem(func_592_call(relay.reshape(const_3951.astype('float64'), [13, 7, 6])), 0)
output = relay.Tuple([bop_3938,call_3950,const_3951,])
output2 = relay.Tuple([bop_3938,call_3952,const_3951,])
func_3954 = relay.Function([var_3936,var_3937,], output)
mod['func_3954'] = func_3954
mod = relay.transform.InferType()(mod)
var_3955 = relay.var("var_3955", dtype = "uint64", shape = (4, 14, 1))#candidate|3955|(4, 14, 1)|var|uint64
var_3956 = relay.var("var_3956", dtype = "uint64", shape = (4, 14, 9))#candidate|3956|(4, 14, 9)|var|uint64
output = func_3954(var_3955,var_3956,)
func_3957 = relay.Function([var_3955,var_3956,], output)
mutated_mod['func_3957'] = func_3957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_4010 = relay.TupleGetItem(func_2702_call(), 0)
call_4011 = relay.TupleGetItem(func_2703_call(), 0)
func_590_call = mod.get_global_var('func_590')
func_592_call = mutated_mod.get_global_var('func_592')
var_4013 = relay.var("var_4013", dtype = "float64", shape = (546,))#candidate|4013|(546,)|var|float64
call_4012 = relay.TupleGetItem(func_590_call(relay.reshape(var_4013.astype('float64'), [13, 7, 6])), 0)
call_4014 = relay.TupleGetItem(func_592_call(relay.reshape(var_4013.astype('float64'), [13, 7, 6])), 0)
output = relay.Tuple([call_4010,call_4012,var_4013,])
output2 = relay.Tuple([call_4011,call_4014,var_4013,])
func_4022 = relay.Function([var_4013,], output)
mod['func_4022'] = func_4022
mod = relay.transform.InferType()(mod)
var_4023 = relay.var("var_4023", dtype = "float64", shape = (546,))#candidate|4023|(546,)|var|float64
output = func_4022(var_4023)
func_4024 = relay.Function([var_4023], output)
mutated_mod['func_4024'] = func_4024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_4028 = relay.TupleGetItem(func_2702_call(), 1)
call_4029 = relay.TupleGetItem(func_2703_call(), 1)
output = relay.Tuple([call_4028,])
output2 = relay.Tuple([call_4029,])
func_4043 = relay.Function([], output)
mod['func_4043'] = func_4043
mod = relay.transform.InferType()(mod)
output = func_4043()
func_4044 = relay.Function([], output)
mutated_mod['func_4044'] = func_4044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_4045 = relay.TupleGetItem(func_2702_call(), 1)
call_4046 = relay.TupleGetItem(func_2703_call(), 1)
uop_4064 = relay.asinh(call_4045.astype('float32')) # shape=(7, 7, 4)
uop_4066 = relay.asinh(call_4046.astype('float32')) # shape=(7, 7, 4)
output = uop_4064
output2 = uop_4066
func_4070 = relay.Function([], output)
mod['func_4070'] = func_4070
mod = relay.transform.InferType()(mod)
output = func_4070()
func_4071 = relay.Function([], output)
mutated_mod['func_4071'] = func_4071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3710_call = mod.get_global_var('func_3710')
func_3711_call = mutated_mod.get_global_var('func_3711')
call_4095 = func_3710_call()
call_4096 = func_3710_call()
func_3676_call = mod.get_global_var('func_3676')
func_3678_call = mutated_mod.get_global_var('func_3678')
call_4097 = relay.TupleGetItem(func_3676_call(), 0)
call_4098 = relay.TupleGetItem(func_3678_call(), 0)
output = relay.Tuple([call_4095,call_4097,])
output2 = relay.Tuple([call_4096,call_4098,])
func_4108 = relay.Function([], output)
mod['func_4108'] = func_4108
mod = relay.transform.InferType()(mod)
mutated_mod['func_4108'] = func_4108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4108_call = mutated_mod.get_global_var('func_4108')
call_4109 = func_4108_call()
output = call_4109
func_4110 = relay.Function([], output)
mutated_mod['func_4110'] = func_4110
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4166 = relay.var("var_4166", dtype = "float32", shape = (15, 8, 3))#candidate|4166|(15, 8, 3)|var|float32
uop_4167 = relay.rsqrt(var_4166.astype('float32')) # shape=(15, 8, 3)
output = uop_4167
output2 = uop_4167
func_4184 = relay.Function([var_4166,], output)
mod['func_4184'] = func_4184
mod = relay.transform.InferType()(mod)
var_4185 = relay.var("var_4185", dtype = "float32", shape = (15, 8, 3))#candidate|4185|(15, 8, 3)|var|float32
output = func_4184(var_4185)
func_4186 = relay.Function([var_4185], output)
mutated_mod['func_4186'] = func_4186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_4238 = func_2630_call()
call_4239 = func_2630_call()
var_4243 = relay.var("var_4243", dtype = "float32", shape = (7, 7, 4))#candidate|4243|(7, 7, 4)|var|float32
bop_4244 = relay.floor_divide(call_4238.astype('float32'), relay.reshape(var_4243.astype('float32'), relay.shape_of(call_4238))) # shape=(7, 7, 4)
bop_4247 = relay.floor_divide(call_4239.astype('float32'), relay.reshape(var_4243.astype('float32'), relay.shape_of(call_4239))) # shape=(7, 7, 4)
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_4287 = func_2630_call()
call_4288 = func_2630_call()
output = relay.Tuple([bop_4244,call_4287,])
output2 = relay.Tuple([bop_4247,call_4288,])
func_4291 = relay.Function([var_4243,], output)
mod['func_4291'] = func_4291
mod = relay.transform.InferType()(mod)
var_4292 = relay.var("var_4292", dtype = "float32", shape = (7, 7, 4))#candidate|4292|(7, 7, 4)|var|float32
output = func_4291(var_4292)
func_4293 = relay.Function([var_4292], output)
mutated_mod['func_4293'] = func_4293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3710_call = mod.get_global_var('func_3710')
func_3711_call = mutated_mod.get_global_var('func_3711')
call_4313 = func_3710_call()
call_4314 = func_3710_call()
uop_4319 = relay.tan(call_4313.astype('float64')) # shape=(12, 2, 4)
uop_4321 = relay.tan(call_4314.astype('float64')) # shape=(12, 2, 4)
func_3710_call = mod.get_global_var('func_3710')
func_3711_call = mutated_mod.get_global_var('func_3711')
call_4328 = func_3710_call()
call_4329 = func_3710_call()
func_1888_call = mod.get_global_var('func_1888')
func_1893_call = mutated_mod.get_global_var('func_1893')
const_4344 = relay.const(-1, dtype = "int64")#candidate|4344|()|const|int64
var_4345 = relay.var("var_4345", dtype = "int64", shape = (88,))#candidate|4345|(88,)|var|int64
var_4346 = relay.var("var_4346", dtype = "uint64", shape = (600,))#candidate|4346|(600,)|var|uint64
call_4343 = relay.TupleGetItem(func_1888_call(relay.reshape(const_4344.astype('int64'), []), relay.reshape(var_4345.astype('int64'), [11, 8, 1]), relay.reshape(var_4346.astype('uint64'), [600,]), ), 4)
call_4347 = relay.TupleGetItem(func_1893_call(relay.reshape(const_4344.astype('int64'), []), relay.reshape(var_4345.astype('int64'), [11, 8, 1]), relay.reshape(var_4346.astype('uint64'), [600,]), ), 4)
bop_4350 = relay.add(uop_4319.astype('float64'), relay.reshape(call_4313.astype('float64'), relay.shape_of(uop_4319))) # shape=(12, 2, 4)
bop_4353 = relay.add(uop_4321.astype('float64'), relay.reshape(call_4314.astype('float64'), relay.shape_of(uop_4321))) # shape=(12, 2, 4)
output = relay.Tuple([call_4328,call_4343,const_4344,var_4345,var_4346,bop_4350,])
output2 = relay.Tuple([call_4329,call_4347,const_4344,var_4345,var_4346,bop_4353,])
func_4364 = relay.Function([var_4345,var_4346,], output)
mod['func_4364'] = func_4364
mod = relay.transform.InferType()(mod)
var_4365 = relay.var("var_4365", dtype = "int64", shape = (88,))#candidate|4365|(88,)|var|int64
var_4366 = relay.var("var_4366", dtype = "uint64", shape = (600,))#candidate|4366|(600,)|var|uint64
output = func_4364(var_4365,var_4366,)
func_4367 = relay.Function([var_4365,var_4366,], output)
mutated_mod['func_4367'] = func_4367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4108_call = mod.get_global_var('func_4108')
func_4110_call = mutated_mod.get_global_var('func_4110')
call_4382 = relay.TupleGetItem(func_4108_call(), 1)
call_4383 = relay.TupleGetItem(func_4110_call(), 1)
output = call_4382
output2 = call_4383
func_4393 = relay.Function([], output)
mod['func_4393'] = func_4393
mod = relay.transform.InferType()(mod)
mutated_mod['func_4393'] = func_4393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mutated_mod.get_global_var('func_4393')
call_4394 = func_4393_call()
output = call_4394
func_4395 = relay.Function([], output)
mutated_mod['func_4395'] = func_4395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4070_call = mod.get_global_var('func_4070')
func_4071_call = mutated_mod.get_global_var('func_4071')
call_4401 = func_4070_call()
call_4402 = func_4070_call()
output = relay.Tuple([call_4401,])
output2 = relay.Tuple([call_4402,])
func_4434 = relay.Function([], output)
mod['func_4434'] = func_4434
mod = relay.transform.InferType()(mod)
output = func_4434()
func_4435 = relay.Function([], output)
mutated_mod['func_4435'] = func_4435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4501 = relay.var("var_4501", dtype = "int16", shape = (12, 5, 8))#candidate|4501|(12, 5, 8)|var|int16
var_4502 = relay.var("var_4502", dtype = "int16", shape = (12, 5, 8))#candidate|4502|(12, 5, 8)|var|int16
bop_4503 = relay.bitwise_or(var_4501.astype('int16'), relay.reshape(var_4502.astype('int16'), relay.shape_of(var_4501))) # shape=(12, 5, 8)
output = relay.Tuple([bop_4503,])
output2 = relay.Tuple([bop_4503,])
func_4517 = relay.Function([var_4501,var_4502,], output)
mod['func_4517'] = func_4517
mod = relay.transform.InferType()(mod)
var_4518 = relay.var("var_4518", dtype = "int16", shape = (12, 5, 8))#candidate|4518|(12, 5, 8)|var|int16
var_4519 = relay.var("var_4519", dtype = "int16", shape = (12, 5, 8))#candidate|4519|(12, 5, 8)|var|int16
output = func_4517(var_4518,var_4519,)
func_4520 = relay.Function([var_4518,var_4519,], output)
mutated_mod['func_4520'] = func_4520
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4580 = relay.const([[[-6,6,-8,10,-7,7,2,-2,8,1,-10,8,3,2],[4,9,6,7,4,-3,2,8,-3,-8,-6,9,-9,-1],[-8,6,-2,4,-10,1,6,4,-3,-5,-3,-7,1,-4],[5,-5,-6,-7,-3,8,9,9,5,-5,-6,-7,3,-7],[-10,-7,6,-7,2,-3,-2,10,2,9,3,-8,-6,9],[6,6,-8,-10,6,7,1,2,-2,-7,2,-4,1,3],[4,7,-7,-8,5,-9,5,-8,5,4,-2,6,8,-8],[-1,-4,-4,-6,3,6,-10,-8,1,5,-4,7,-9,-10],[2,-4,3,-7,1,8,7,-2,8,-6,-4,7,10,-5],[-5,-4,7,2,-9,4,4,4,5,10,5,-4,-7,-8],[5,3,-10,-8,6,4,-9,-5,-10,4,-4,9,-10,-8],[-4,-1,-2,10,1,9,-8,-3,1,1,7,-9,10,10]],[[-2,7,5,-6,2,8,-4,3,10,-10,-3,4,-6,1],[-10,-6,-1,8,-10,-4,-10,6,-9,-5,-4,-2,6,7],[9,-8,2,1,6,9,4,8,8,-8,-10,8,10,1],[5,7,-7,-5,8,2,7,-2,7,-5,-2,1,-7,-6],[-10,2,4,-1,4,-1,4,-8,9,2,-10,10,-1,5],[-2,7,-7,-7,-8,-3,-4,5,-10,-9,-5,-4,9,8],[-6,9,2,-10,-5,-10,-7,5,7,-1,5,7,-10,-6],[6,-8,4,2,3,5,-1,1,7,-1,-6,-5,-2,-2],[5,1,9,-4,9,9,8,-2,-10,-8,8,5,-2,8],[5,6,7,9,-9,1,9,-9,-5,-9,-3,5,-6,7],[3,2,5,-5,-7,8,-1,3,-8,-8,-5,-1,-4,10],[-7,8,2,7,1,-10,8,6,7,-9,4,-10,-6,5]],[[-7,2,4,3,3,3,-2,2,-1,9,-8,2,8,10],[5,6,4,6,-9,4,-7,-3,2,-6,4,10,6,5],[-8,-1,-4,-4,4,-6,7,4,9,-10,5,-3,-5,-2],[-4,6,5,4,-4,-10,6,-3,8,-6,7,7,6,-2],[10,2,2,-8,7,10,2,-2,-8,3,4,-2,-7,-2],[8,6,7,-5,-7,-8,7,-8,8,9,-4,-1,-4,-9],[3,-6,5,-10,-9,3,-8,-10,1,-5,-7,4,-7,-10],[-9,1,-2,2,6,-4,-6,1,-10,-10,1,1,-10,-9],[-1,5,10,3,-3,-1,-6,6,-2,8,1,4,-1,-10],[-9,7,8,9,10,-1,-6,3,-7,-7,-9,-2,1,2],[10,-5,9,-8,-6,6,-10,10,-9,-1,-6,-7,1,5],[5,8,-7,4,-6,6,1,9,-9,9,-4,8,9,2]],[[7,6,5,9,6,2,8,-4,-10,-2,2,8,-4,-3],[-4,-6,4,-2,3,-3,-7,-1,-2,3,7,-10,-9,-4],[-7,-7,-4,1,-5,7,6,-9,4,7,-4,-6,8,-2],[8,-1,5,-7,2,-8,-1,-7,4,10,-5,-4,7,-3],[-7,1,1,2,9,4,7,10,-7,-5,-2,-1,-9,-9],[-4,-1,-7,10,-4,3,-2,-7,-1,7,2,10,-6,-3],[5,-1,-4,4,5,-9,-6,2,-1,9,6,1,7,-5],[2,7,-10,8,3,3,-6,6,-7,2,-9,-2,-6,-6],[6,-5,9,-8,4,-1,2,4,-8,-1,-9,5,-3,-7],[-1,3,4,6,2,2,-3,-3,-9,-2,5,2,-8,6],[-3,2,3,9,-3,-1,-2,3,6,-2,-2,1,-10,3],[-9,1,9,-6,-9,2,-4,1,7,-3,9,-7,-2,10]],[[3,-1,-2,6,8,-6,7,-2,-4,-6,8,-4,-7,-10],[1,-10,-1,7,-7,-7,-5,3,2,4,10,-4,1,5],[-9,4,5,4,-9,1,4,-1,8,4,1,5,9,-10],[-7,8,-2,-6,8,-2,1,-5,1,5,-1,-1,-6,-8],[4,-5,4,9,-6,10,-4,-5,8,-1,5,8,6,10],[4,9,5,10,-7,-5,5,9,10,6,3,6,-5,3],[4,5,3,-7,-10,-10,-8,-10,-2,2,-4,-1,4,-4],[-2,2,4,3,3,-8,6,10,2,-7,-2,8,5,-2],[7,-2,4,-2,-3,-6,4,1,-1,-8,-4,9,3,-1],[-7,1,-10,-2,7,3,-10,6,2,-7,-8,-9,-9,-8],[8,-3,6,-10,5,3,7,-1,6,10,-5,-4,-2,-7],[1,-5,9,-3,-10,-1,4,-8,-3,-7,-8,-8,6,10]],[[-5,10,4,-5,1,-8,-3,-9,-5,8,-8,7,-4,1],[-9,9,-7,1,4,4,6,-10,3,5,-8,5,10,2],[-9,5,3,5,2,-1,2,2,1,6,-1,1,-6,5],[-8,-1,9,4,-7,-4,-5,-5,-4,6,1,7,-4,1],[-3,-5,3,-8,9,6,3,7,5,-6,1,4,3,-3],[-10,-7,9,5,-8,-4,-5,5,10,-5,-5,4,2,-7],[-9,-3,5,3,-2,3,9,8,-10,3,6,5,-8,9],[-8,6,9,6,1,-7,8,-2,-9,-3,3,7,4,5],[2,4,4,-7,1,-6,-5,-5,5,9,8,-1,8,2],[-9,-5,-3,-2,1,10,5,4,1,2,-9,-7,5,-9],[5,6,-10,-6,-10,-10,8,-2,-5,10,8,-9,-4,-5],[4,3,-7,5,2,10,10,4,7,-10,6,8,3,-2]]], dtype = "int16")#candidate|4580|(6, 12, 14)|const|int16
var_4581 = relay.var("var_4581", dtype = "int16", shape = (6, 12, 14))#candidate|4581|(6, 12, 14)|var|int16
bop_4582 = relay.bitwise_xor(const_4580.astype('int16'), relay.reshape(var_4581.astype('int16'), relay.shape_of(const_4580))) # shape=(6, 12, 14)
var_4586 = relay.var("var_4586", dtype = "int16", shape = (6, 12, 14))#candidate|4586|(6, 12, 14)|var|int16
bop_4587 = relay.add(bop_4582.astype('uint64'), relay.reshape(var_4586.astype('uint64'), relay.shape_of(bop_4582))) # shape=(6, 12, 14)
bop_4594 = relay.less(var_4581.astype('bool'), relay.reshape(var_4586.astype('bool'), relay.shape_of(var_4581))) # shape=(6, 12, 14)
var_4602 = relay.var("var_4602", dtype = "int16", shape = (6, 12, 14))#candidate|4602|(6, 12, 14)|var|int16
bop_4603 = relay.power(var_4586.astype('float64'), relay.reshape(var_4602.astype('float64'), relay.shape_of(var_4586))) # shape=(6, 12, 14)
func_4393_call = mod.get_global_var('func_4393')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_4611 = func_4393_call()
call_4612 = func_4393_call()
uop_4617 = relay.acos(bop_4587.astype('float64')) # shape=(6, 12, 14)
uop_4637 = relay.sin(bop_4603.astype('float64')) # shape=(6, 12, 14)
func_3602_call = mod.get_global_var('func_3602')
func_3608_call = mutated_mod.get_global_var('func_3608')
var_4647 = relay.var("var_4647", dtype = "int64", shape = (88,))#candidate|4647|(88,)|var|int64
const_4648 = relay.const([-8.412519,-9.843574,7.271418,2.997038,7.132377,2.126423,7.965709,3.809416,7.038017,2.171660,-5.157768,2.475922,-7.848763,4.631837,-3.465442,5.659669,8.357108,-6.225091,-8.990190,-9.214979,5.630964,4.419938,-9.295417,-4.916040,5.749279,3.340668,-7.002812,4.372248,8.160629,-5.465492,-3.454892,-8.853261,7.584650,-4.044876,-0.617242,-9.964087,7.714292,7.555731,-2.081450,5.103406,8.713731,7.524778,4.825497,2.142472,-1.687713,1.152987,5.239014,-7.550045,-4.000937,-3.655639,0.481177,-6.260743,-7.976411,-9.612401,1.437806,2.816513,4.487545,-2.023014,9.199732,2.607967,5.657583,-9.445561,4.005493,-8.866527,1.990370,-9.702390,6.274413,6.136116,-0.890357,-2.996621,5.070594,4.713799,8.025200,-6.762856,9.924340,-3.086739,-0.791737,9.001239,6.574637,4.359606,-7.927724,2.618850,-8.348552,1.641374,-6.705654,-8.279135,8.916485,-7.762857,0.773443,8.547149,6.419559,7.325705,-3.491797,4.453016,-8.413741,0.890698,-4.899941,-2.158615,7.948253,-9.124832,-4.994214,-1.176131,-7.129288,-6.544437,8.779318,-5.886400,2.173490,-0.925235,-5.376488,2.218214,-2.452987,3.875895,0.210952,8.534391,6.637301,-4.338541,-3.278364,-1.206622,-8.870255,-7.435153,-4.916882,-4.083856,-9.471526,-5.885117,-1.071870,-8.907840,-4.358680,9.637821,9.891410,-4.354037,-0.663923,-6.724881,8.058087,1.867442,6.968780,2.258466,-0.201041,1.657022,-7.459279,6.955185,7.203607,1.152695,3.965963,5.679264,7.002616,-8.995877,1.671619,-1.127756,8.704274,-6.730564,6.427051,-3.379151,7.961033,8.885679,6.318993,-1.497592,-6.470346,-6.913672,-5.996518,-6.367200,-3.636117,-3.980654,-8.968220,-7.263242,-8.482937,-1.280744,2.282971,-9.373311,6.083294,-0.467776,-6.817118,1.966361,7.692131,3.945462,-3.706938,4.899426,-3.104055,-8.688295,6.540984,-7.416252,0.249591,1.140444,5.334703,8.239896,4.967910,-1.802625,-1.976357,-2.648576,2.968667,3.408125,-8.695404,-8.469332,-4.798132,7.927928,-2.708512,-3.623663,-1.064046,-5.471923,3.495317,-3.622830,0.139553,-9.232001,1.111944,8.528955,-6.639838,-9.299586,-8.307941,5.899729,2.432033,-9.121965,-7.870084,1.834000,-5.479207,2.040280,2.091980,7.277137,-9.515394,-0.808537,-1.175223,-1.269033,-0.932720,2.558686,-7.673587,-7.325078,6.218025,9.578458,1.583886,1.916551,-6.994913,6.699682,-5.754618,-1.517086,-0.369716,-4.300452,5.691750,-2.725039,8.202981,-5.578970,-5.993768,5.004815,1.453053,-8.086878,4.108474,-6.182930,-0.100065,5.231261,-9.439218,8.368460,-8.196752,-6.433915,-7.101109,-7.554744,-6.320964,7.668188,0.616466,3.490125,8.109478,5.773416,7.238043,-0.633089,7.706463,-3.212554,-8.797571,-8.032664,-9.088206,-6.588751,8.431659,-6.632408,7.107917,9.121790,6.211371,5.552569,-7.915388,3.310611,-8.339105,9.197749,-1.390051,-0.776806,6.268176,9.900330,4.299894,-5.525949,-8.084555,-4.802176,1.304369,-0.149208,-0.556854,9.304422,-4.107682,-9.575765,7.747726,-1.119345,-0.331585,-3.395505,-1.286004,1.798618,8.469814,-2.316367,-4.450259,4.794181,-1.172070,-8.111198,2.637040,8.500102,4.213935,-7.269003,6.985791,-9.805004,6.310067,7.346521,-5.733317,5.914608,2.050025,-3.051575,5.012695,3.784266,6.959103,-3.240798,4.571856,3.584584,-6.796443,6.865855,-8.858450,0.419869,-6.121256,4.563653,9.041395,-7.806060,8.432600,-8.237368,-3.469311,-8.777344,-8.966113,-3.811610,8.271939,-2.263214,-9.664862,4.900029,6.313091,-2.791773,-1.366477,-5.078387,1.645647,-7.713391,8.063217,6.362471,-1.692751,-9.301775,-0.148784,-2.938598,-8.816360,5.291893,3.686642,1.521992,6.101148,-1.463505,-3.018754,7.444660,-0.463262,-1.445105,0.015073,3.576331,6.522149,-8.713357,4.923897,6.949575,9.896327,-2.451019,-9.209773,0.897296,9.340916,3.962698,-4.923785,8.959289,-7.751309,2.937270,3.501201,4.597333,-6.853461,5.909342,-3.395292,7.866034,0.067630,-8.064230,5.553230,-7.867426,-2.064975,-5.349818,-6.329324,7.770627,0.372362,-2.751106,9.585227,-7.054460,9.490559,3.825811,-8.836856,8.225691,-0.024938,3.512633,1.624697,4.941697,9.124666,1.826959,3.066491,-0.777842,4.801457,-4.902371,-8.161241,-7.478381,-4.529163,-6.296944,-2.852635,-2.397230,9.197592,-5.769973,8.722268,-7.213278,-4.209864,6.069773,-8.561939,-3.238595,-6.858022,0.937753,1.424493,6.803487,9.148656,6.223631,4.424721,9.688856,5.040541,-1.610367,2.041687,-9.658222,-7.869470,3.836046,9.418594,-5.860541,-8.913083,9.037826,9.455267,0.734052,-4.491252,-7.286510,2.863128,-4.790044,5.768041,1.652584,-1.315247,-8.035511,9.598272,6.741174,-5.334379,0.637849,3.890110,-2.923445,8.414761,-3.016310,-4.290828,1.465045,-4.808226,0.321517,-5.486615,-2.680274,-3.684379,3.912717,-2.335644,-9.951963,-1.865722,-9.492989,-3.407687,-0.340535,-0.540995,9.622082,7.811144,-8.961663,7.966337,-9.431743,2.540431,-5.312909,8.994748,1.253503,-8.425977,-3.318937,4.634475,7.995129,-4.372130,3.370307,-8.586642,2.637903,-7.527416,9.753942,9.743056,5.987082,-2.184143,-3.397689,-6.947368,3.098283,-8.509364,3.364899,-2.028150,6.321028,4.999183,-5.964622,-9.458747,0.484260,9.106175,-3.978800,-2.778127,0.022402,2.944184,3.745192,-3.253473,-3.352873,-2.382213,-4.893276,-5.022457,4.151096,2.752622,8.092448,-4.644999,-6.896805,4.116593,-2.896379,-6.231972,-5.929956,-5.362802,4.036115,1.415464,4.434775,-0.175462,-8.918777,9.699731,-4.765128,2.240612,-4.562407,-1.167361,-6.780737,6.576724,-4.075806,-2.639472,4.167693,-4.367443,9.372828,7.858829,6.662013,4.341678,-4.710907,-2.028880,9.644179,9.693134,3.501041,-0.123336,3.688989,-5.189181,1.766891,2.303600,5.990323,-5.748992,1.892326,9.332881,6.888799,-3.997170,-1.025626,-6.056649,4.699827,3.093507,1.356766,-1.242552,-5.416387,-4.476208,4.237691,-3.923231,3.109823,-0.994538,-9.441027,-3.457071,-4.287297,-2.914853,3.694606,-0.977039,-2.128083,0.673101,8.571701,-9.124487,-1.069246,7.582106,-0.310399,7.623618,-9.427282,-4.317365,9.466291,-5.313929,-7.207416,-2.593355,6.985535,-0.128124,9.928895,-5.379249,9.686596,-8.373597,2.627443,6.405539,1.803153,-5.808117,-3.254780,8.939984,2.919750,9.701095,-9.406080,5.436358,-7.225111,9.171271,5.121941,-7.622058,-0.257125,-0.996696,3.575538,-4.192181,-4.447708,-7.908901,2.762383,7.075377,-9.804078,-9.672146,-2.047327,-7.145525,2.604029,-0.180442,9.242920,5.185487,6.019856,-2.855727,-4.894258,-4.580002,1.608877,6.612437,-6.653122,1.290688,-0.755971,6.249262,0.984552,6.664064,3.935895,9.397609,0.734244,-7.036589,-6.488467,9.898143,8.785308,-8.380646,-6.339607,-8.235014,-1.953474,2.425253,5.339576,7.716214,2.631989,-5.160866,4.599055,6.261456,-0.839863,4.361287,-0.917732,6.111123,-4.909563,-9.734752,-8.746711,2.914810,-8.947997,6.255808,4.113065,-9.548491,8.465029,9.088976,-1.416363,9.931807,1.230479,-0.931587,6.223599,8.072004,8.478070,5.561918,-7.712649,-5.208673,9.844745,2.409054,-6.655433,7.921395,-4.128929,-2.842739,-2.712422,4.308424,0.379067,6.115099,-0.216751,-9.478368,8.134329,9.748084,5.862056,-9.739328,4.802883,7.594115,-1.069218,6.912993,-9.981596,1.148057,-9.830786,-2.497596,-2.394202,-6.651747,-5.513514,-0.475856,-6.433281,-7.051832,0.820895,3.980668,-2.629552,4.485994,0.612858,4.598586,-6.434570,-0.025475,8.035439,-1.448186,6.585722,-7.253719,-6.010345,4.358750,-6.075920,-7.181090,-2.360954,-6.340901,-4.690932,5.806534,5.115265,1.970122,-7.432140,-4.302406,-3.484877,4.819364,9.055028,-7.889494,6.467933,4.457559,3.617304,8.978801,1.121173,-8.565343,1.101878,9.992759,-6.024355,1.368056,1.810703,-7.180924,-7.289764,1.157024,-7.883015,6.393104,2.558867,3.997021,-8.350586,-8.428896,7.921706,-8.735484,4.230247,3.652803,-7.631495], dtype = "float64")#candidate|4648|(768,)|const|float64
var_4649 = relay.var("var_4649", dtype = "float64", shape = (91, 6))#candidate|4649|(91, 6)|var|float64
call_4646 = relay.TupleGetItem(func_3602_call(relay.reshape(call_4611.astype('float32'), [7, 7, 4]), relay.reshape(var_4647.astype('int64'), [88,]), relay.reshape(const_4648.astype('float64'), [4, 192]), relay.reshape(var_4649.astype('float64'), [546,]), ), 5)
call_4650 = relay.TupleGetItem(func_3608_call(relay.reshape(call_4611.astype('float32'), [7, 7, 4]), relay.reshape(var_4647.astype('int64'), [88,]), relay.reshape(const_4648.astype('float64'), [4, 192]), relay.reshape(var_4649.astype('float64'), [546,]), ), 5)
output = relay.Tuple([bop_4594,call_4611,uop_4617,uop_4637,call_4646,var_4647,const_4648,var_4649,])
output2 = relay.Tuple([bop_4594,call_4612,uop_4617,uop_4637,call_4650,var_4647,const_4648,var_4649,])
func_4665 = relay.Function([var_4581,var_4586,var_4602,var_4647,var_4649,], output)
mod['func_4665'] = func_4665
mod = relay.transform.InferType()(mod)
mutated_mod['func_4665'] = func_4665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4665_call = mutated_mod.get_global_var('func_4665')
var_4667 = relay.var("var_4667", dtype = "int16", shape = (6, 12, 14))#candidate|4667|(6, 12, 14)|var|int16
var_4668 = relay.var("var_4668", dtype = "int16", shape = (6, 12, 14))#candidate|4668|(6, 12, 14)|var|int16
var_4669 = relay.var("var_4669", dtype = "int16", shape = (6, 12, 14))#candidate|4669|(6, 12, 14)|var|int16
var_4670 = relay.var("var_4670", dtype = "int64", shape = (88,))#candidate|4670|(88,)|var|int64
var_4671 = relay.var("var_4671", dtype = "float64", shape = (91, 6))#candidate|4671|(91, 6)|var|float64
call_4666 = func_4665_call(var_4667,var_4668,var_4669,var_4670,var_4671,)
output = call_4666
func_4672 = relay.Function([var_4667,var_4668,var_4669,var_4670,var_4671,], output)
mutated_mod['func_4672'] = func_4672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4434_call = mod.get_global_var('func_4434')
func_4435_call = mutated_mod.get_global_var('func_4435')
call_4697 = relay.TupleGetItem(func_4434_call(), 0)
call_4698 = relay.TupleGetItem(func_4435_call(), 0)
func_4665_call = mod.get_global_var('func_4665')
func_4672_call = mutated_mod.get_global_var('func_4672')
var_4711 = relay.var("var_4711", dtype = "int16", shape = (1008,))#candidate|4711|(1008,)|var|int16
const_4712 = relay.const([-9,9,9,-3,-10,-10,-2,-3,1,10,-8,4,7,-4,2,-8,4,-4,-3,9,-3,-8,7,1,1,-7,-2,-9,-1,-7,4,7,-3,10,9,7,10,4,-1,3,-8,9,3,9,10,-10,-3,2,-7,2,-2,7,-4,-9,-6,5,7,6,-3,-6,4,7,5,5,-10,8,-6,5,-6,5,9,7,-7,7,-1,2,1,5,7,-7,-9,-10,-8,4,-9,5,10,-5], dtype = "int64")#candidate|4712|(88,)|const|int64
const_4713 = relay.const([[0.486133,1.221803,-5.723337,9.908866,9.460556,-5.767353,6.877047,4.391126,-7.098426,-9.687827,-7.908592,6.878739,-1.114762,6.181540,-7.916741,2.895396,-1.724407,4.903503,-2.848619,-2.484009,-4.334054,-0.060922,-7.814133,-3.744648,8.017389,3.044342,3.048204,1.389226,3.453371,-0.162358,-0.260453,0.746169,-5.645589,3.090441,-9.312344,6.430257,-1.416887,-2.626042,3.456563,6.703168,0.879109,-4.765752,5.568907,-0.972204,3.864492,-0.439718,-3.711849,-7.053928,3.795459,-1.573792,-3.958225,-3.222426,8.812638,0.090395,0.634611,1.961346,5.460339,7.215685,9.193985,3.216890,-4.854540,1.597539,-8.287203,-6.264961,3.982424,8.966664,-1.743504,0.669054,-3.187816,-4.509992,2.147947,2.342549,-7.768204,-5.347845,-6.643537,-3.687561,3.768226,-6.874949,2.014938,5.176908,0.627297,-2.902134,-4.617964,2.976450,4.686886,5.713429,6.164540,3.068371,9.848345,-3.436425,-9.034862,2.710396,-4.983852,1.961992,-9.824539,-4.597076,0.850180,5.055606,-7.956985,-3.452004,-8.750911,4.651154,-1.915091,4.020801,-2.167165,-9.956140,-8.854535,-1.329709,8.567450,7.331388,0.224994,5.005573,-8.684947,-7.177320,6.408429,-1.573584,-4.893926,6.540565,2.585197,4.667366,-3.590761,-2.656527,5.571512,8.099882,-6.601406,-7.654121,8.541767,-9.423466,-7.360094,-2.941833,0.836631,6.614678,-7.246183,0.913334,-7.431379,5.510557,-1.751510,1.317018,1.605350,-6.316179,5.415790,2.143988,-5.772876,2.544887,-3.837464,-1.456748,-1.285497,-0.014754,-3.250342,-9.348916,-6.560676,-5.614019,3.702623,-2.724396,-7.462460,-0.109286,3.632392,-9.165282,9.395124,-3.865969,-2.012432,-0.443617,-0.083196,0.654961,-4.312345,8.197410,-2.442942,7.349156,-9.638623,-5.151354,-2.091733,-1.057262,-2.189802,4.298122,-1.787144,8.837069,-1.363043,-3.300562,-4.813612,8.179708,9.216717,9.191273,-4.615891,-3.580965,-0.143217,-4.985549,4.803630,-2.148244,7.891814,-0.466407,8.924983,-3.850126,7.734949,9.591250,9.514252,-7.883532,7.727257,-2.833048,-4.903701,-2.155704,1.097906,1.306601,-6.013229,-9.760021,0.717284,8.082891,-0.764611,-9.739408,-4.426011,-2.472256,-4.667218,0.322664,-8.077591,-3.225794,-4.972977,-7.136302,3.847575,-2.135197,3.997147,4.240238,8.113414,-7.430285,5.220096,2.878078,-2.908524,6.064375,-9.348061,-9.217618,-5.017212,1.867430,-2.910188,-4.812056,6.033718,2.551622,8.840610,0.064572,0.749367,-4.345196,-5.600846,9.197504,6.166651,-2.401723,3.352639,3.551466,9.891891,-4.617263,-7.562612,1.503568,1.379098,-9.266820,2.194631,-2.742564,9.713405,9.711098,-7.722899,-6.295408,1.540479,-2.759127,-1.967500,-7.740593,-7.045309,9.184435,0.717227,3.802862,1.857510,1.822907,9.300127,8.881643,6.671019,4.236098,4.296902,5.329606,-2.476318,4.959761,0.629064,-5.507414,-0.102282,-6.384400,-1.183194,0.773753,-6.783549,-8.147012,-1.373215,-7.135162,6.442620,9.366106,-4.564926,6.033599,-7.657397,4.496741,4.923772,-6.600038,8.213462,8.568324,-4.469499,3.497182,-2.839804,-7.638200,8.603599,-6.685304,-6.142797,-2.508221,-7.942221,7.794202,-2.834179,9.388336,-8.304360,-6.262250,-6.298733,6.838865,-5.313881,7.432709,5.515831,0.455047,2.204216,1.507274,4.992791,-0.680387,6.437142,1.616498,-6.425064,8.719195,-8.142142,-8.571111,-0.402851,3.673976,-1.070190,4.853703,-8.998422,-1.977376,-6.986313,-6.213831,4.229415,8.741537,-3.809520,0.533983,3.574819,-0.123994,-6.224675,8.424213,-1.630174,4.583196,4.484580,-4.336366,2.089916,8.921961,-7.103757,9.312557,-1.000819,0.786367,8.156256,9.110543,0.071521,-2.746687,-8.249734,-0.434407,-8.252576,1.105723,-7.910421,-5.124904,5.848185,6.025600,9.072163,3.977405,-9.152841,-4.854709,2.346046,-3.506860,2.863359,-2.757835,-8.701450,7.496569,-5.865029,4.596370,-4.389837,-7.214119,0.174403,-6.640344,6.731195,5.947193,-0.407795,9.288378,1.372405,-1.139344,8.690393,9.414197,-3.128287,-8.173467,3.140065,7.946604,0.608666,9.728578,-2.379600,2.219003,-4.531008,6.989355,6.976667,-0.142044,-1.353313,0.868023,-8.159394,-7.001249,7.472256,6.998875,-7.968666,3.759485,0.436459,-1.369048,-1.406794,3.194315,-5.977609,6.749327,8.235437,9.163449,-8.843310,9.464801,2.147414,8.358052,3.246330,3.252708,-1.847880,4.097589,-6.465039,9.990289,-1.428572,8.921116,9.112900,-6.958624,-0.691953,-7.820023,-7.255626,1.229492,0.207672,8.123209,-4.464135,-6.124940,5.509804,-9.017173,-5.635810,-2.212923,-6.048503,5.062945,-5.002395,-2.476310,6.806410,6.838237,2.454114,5.930928,-5.286793,1.092331,-6.229242,6.731521,8.441108,5.275683,4.911329,-1.260646,3.048610,3.791899,2.458964,-5.835430,-7.500862,6.286870,5.284811,9.798325,0.177295,-5.443525,-7.388939,7.531484,0.667743,7.043180,-4.531243,-7.395816,-2.915949,0.282230,0.057431,-7.587568,0.117554,7.814686,0.825511,-8.811283,4.304339,-4.100407,-1.912998,-0.418229,-2.207690,-3.903030,6.854063,-8.955209,-5.923691,-7.992199,2.872995,-2.648651,-1.558673,6.630467,-8.554101,-3.202624,-1.114185,9.444163,-1.524041,-8.894425,-9.826648,4.780266,2.372509,1.670407,4.388715,-1.901947,-5.727683,5.735789,-1.413191,-1.340725,1.214507,4.392367,4.130150,-0.675176,-1.097303,-7.769145,-9.905703,-1.858693,1.490968,4.484822,2.367798,-9.702711,-2.420951,-1.712657,-7.890256,4.136218,9.015723,-9.616588,-4.666535,-9.730996,4.402837,7.232907,-8.472876,-6.951947,7.725980,-2.297509,4.926195,-9.239895,2.563386,-5.263146,-1.430283,8.945648,-4.732892,-6.665049,-5.366302,5.502132]], dtype = "float64")#candidate|4713|(1, 546)|const|float64
call_4710 = relay.TupleGetItem(func_4665_call(relay.reshape(var_4711.astype('int16'), [6, 12, 14]), relay.reshape(var_4711.astype('int16'), [6, 12, 14]), relay.reshape(var_4711.astype('int16'), [6, 12, 14]), relay.reshape(const_4712.astype('int64'), [88,]), relay.reshape(const_4713.astype('float64'), [91, 6]), ), 3)
call_4714 = relay.TupleGetItem(func_4672_call(relay.reshape(var_4711.astype('int16'), [6, 12, 14]), relay.reshape(var_4711.astype('int16'), [6, 12, 14]), relay.reshape(var_4711.astype('int16'), [6, 12, 14]), relay.reshape(const_4712.astype('int64'), [88,]), relay.reshape(const_4713.astype('float64'), [91, 6]), ), 3)
output = relay.Tuple([call_4697,call_4710,var_4711,const_4712,const_4713,])
output2 = relay.Tuple([call_4698,call_4714,var_4711,const_4712,const_4713,])
func_4723 = relay.Function([var_4711,], output)
mod['func_4723'] = func_4723
mod = relay.transform.InferType()(mod)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4724 = relay.var("var_4724", dtype = "int16", shape = (1008,))#candidate|4724|(1008,)|var|int16
func_4723_call = mutated_mod.get_global_var('func_4723')
call_4725 = func_4723_call(var_4724)
output = call_4725
func_4726 = relay.Function([var_4724], output)
mutated_mod['func_4726'] = func_4726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3851_call = mod.get_global_var('func_3851')
func_3853_call = mutated_mod.get_global_var('func_3853')
call_4745 = relay.TupleGetItem(func_3851_call(), 0)
call_4746 = relay.TupleGetItem(func_3853_call(), 0)
output = relay.Tuple([call_4745,])
output2 = relay.Tuple([call_4746,])
func_4749 = relay.Function([], output)
mod['func_4749'] = func_4749
mod = relay.transform.InferType()(mod)
mutated_mod['func_4749'] = func_4749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4749_call = mutated_mod.get_global_var('func_4749')
call_4750 = func_4749_call()
output = call_4750
func_4751 = relay.Function([], output)
mutated_mod['func_4751'] = func_4751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4822 = relay.var("var_4822", dtype = "float64", shape = (2, 11, 14))#candidate|4822|(2, 11, 14)|var|float64
const_4823 = relay.const([[[1.422108,6.968051,-2.616410,6.551095,-2.307238,-5.027388,-2.255884,-8.053406,5.363052,1.410085,4.462725,1.075995,-0.095580,-3.903507],[0.848867,2.050606,7.521052,7.238155,5.924716,-1.116538,-4.664583,5.362375,-3.176226,-7.028200,0.439899,1.485067,-6.163614,7.086696],[-1.676568,4.615675,8.530607,-5.236712,0.372499,6.912519,-0.858158,-3.291604,-7.574049,-8.890083,0.594217,-5.209561,-5.324807,-5.471966],[-9.849580,4.102060,5.279459,-8.457677,-4.146299,4.476231,-5.800915,-1.675472,7.853373,-2.960419,-4.754299,-8.898596,0.827177,0.651282],[-9.467192,-9.636125,6.398859,8.013235,-9.637356,-1.956034,0.807473,6.730264,-4.425673,-5.808484,-7.971580,5.121887,9.236793,0.765247],[-5.475109,7.402775,-1.665640,2.072460,9.061875,-6.521009,-1.758971,-1.761978,8.218961,-6.148414,8.236514,9.507630,0.682403,1.573272],[-0.101811,4.021936,2.096629,9.131162,5.919097,2.046587,3.827654,-9.635724,-9.697047,6.542504,-0.920859,7.156803,4.957975,-6.862442],[4.559258,5.750578,-4.839412,-3.048342,2.114849,4.276339,-9.693552,-7.817255,-4.294907,-5.240322,4.551924,-2.757969,4.176111,-0.152817],[-0.065844,5.219111,-0.713047,8.684558,8.881919,-4.285025,7.847429,8.957105,-4.983927,-0.973187,5.013704,-7.190053,-2.186074,-5.831117],[-1.670209,-4.617499,0.027984,8.829862,9.309313,-0.785280,-7.157333,5.165429,-1.906897,-5.628345,-5.980856,-5.931463,4.886307,5.918781],[0.995154,4.986110,-8.827570,3.597541,8.791383,2.117127,1.041559,6.453388,-1.002840,-1.928163,-3.042182,0.402685,9.316749,-0.512920]],[[-8.001306,-2.996248,1.957267,-6.573650,-3.704787,-5.743906,-0.737430,-3.999757,4.697566,8.527825,-3.343256,1.470766,-3.272066,-9.941294],[-5.085475,-0.285889,-9.809393,-8.386649,-4.846711,1.339656,-3.966616,-1.402283,6.749158,2.478687,7.212061,-3.955541,-8.788361,-0.874522],[-0.056382,-0.318153,7.330023,-9.150236,6.400654,2.852279,1.476683,-9.630438,-1.628620,-2.426318,2.842193,4.179091,-9.124888,7.589680],[1.858099,-3.817515,-9.597933,-8.772312,9.614192,3.872975,3.814723,9.510490,1.930324,3.716312,-8.968125,1.618336,7.041783,-9.608003],[-8.986800,-4.467790,9.753594,8.023532,4.228235,4.717477,-2.590894,1.708625,-8.393709,-9.578821,8.501751,8.892683,9.090211,8.040359],[1.389871,3.834505,2.423215,6.294269,-6.698877,-8.934830,-3.269892,-1.148098,-9.279281,6.998147,-4.246315,-0.500689,2.721848,-0.141216],[-1.962927,8.507225,1.015337,2.825778,-1.354830,-6.591388,-2.197102,-4.228507,-1.270312,3.111437,-4.470434,2.862787,7.404600,-4.186837],[-8.253908,3.951963,0.887328,-6.510365,0.490720,2.721067,9.999256,-4.651776,4.469615,-5.093667,-8.331911,-2.357489,-6.931027,7.135338],[-0.212456,-9.230504,-5.358078,8.867963,-7.834811,6.016858,-6.773750,8.674345,-6.504409,2.953173,-0.772947,9.694389,2.826573,-0.998704],[-8.253674,9.872490,6.264240,2.745285,-7.864381,5.728561,-1.499753,-7.846544,-4.120665,-0.897889,-1.001308,-5.487296,-2.932266,7.124728],[2.419738,9.722955,5.215735,-9.289172,3.449834,4.484742,9.871362,-2.823603,2.523829,-2.798312,1.571726,-6.584475,-7.085617,-4.896321]]], dtype = "float64")#candidate|4823|(2, 11, 14)|const|float64
bop_4824 = relay.divide(var_4822.astype('float64'), relay.reshape(const_4823.astype('float64'), relay.shape_of(var_4822))) # shape=(2, 11, 14)
output = bop_4824
output2 = bop_4824
func_4827 = relay.Function([var_4822,], output)
mod['func_4827'] = func_4827
mod = relay.transform.InferType()(mod)
mutated_mod['func_4827'] = func_4827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4828 = relay.var("var_4828", dtype = "float64", shape = (2, 11, 14))#candidate|4828|(2, 11, 14)|var|float64
func_4827_call = mutated_mod.get_global_var('func_4827')
call_4829 = func_4827_call(var_4828)
output = call_4829
func_4830 = relay.Function([var_4828], output)
mutated_mod['func_4830'] = func_4830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4749_call = mod.get_global_var('func_4749')
func_4751_call = mutated_mod.get_global_var('func_4751')
call_4905 = relay.TupleGetItem(func_4749_call(), 0)
call_4906 = relay.TupleGetItem(func_4751_call(), 0)
func_2460_call = mod.get_global_var('func_2460')
func_2463_call = mutated_mod.get_global_var('func_2463')
const_4914 = relay.const([8.707260,9.560270,0.999055,7.563909,-6.188998,-0.760270,-4.386143,-8.922586,-9.878769,-9.804030,-7.449433,1.754985,-7.464191,1.906480,-9.161747,6.901963,8.415195,4.096765,-3.476074,-0.773598,-6.712089,0.821157,7.060515,-7.954239,4.965805,3.005619,4.246022,6.507522,3.408601,-0.125447,-9.626406,4.804443,-4.013669,-6.029722,7.043663,-0.547373,-4.789433,1.314107,1.600685,1.400247,-8.173942,-7.167030,1.040492,8.494585,-7.669960,-7.121473,-5.423947,-1.209968,-2.736261,0.372264,-8.841841,1.322196,2.236021,-5.532079,3.423926,6.891366,-7.153387,9.031295,3.232191,-0.008977,-7.327096,-2.174974,-6.791222,-3.792516,-2.843873,9.500035,1.149986,5.063432,4.608009,8.232416,8.535324,-8.744741,-6.501601,1.317350,3.513563,-3.881263,-6.855395,-7.132540,9.058253,2.972111,-9.092227,-5.489075,0.343450,-1.384369,7.364076,0.654981,9.189047,-5.414588,-6.681445,5.867562,8.640650,9.329661,1.749213,1.657253,-2.740425,-6.492897,6.858277,-8.471101,-2.125838,7.328318,-7.193621,-8.043639,-5.542469,-0.803061,-7.367956,-1.292078,1.404745,0.472137,7.063023,5.928580,5.029400,-2.114009,6.016938,0.188344,-8.473773,8.726424,-8.909471,-0.044026,4.746783,8.782447,-4.220416,2.768792,1.416650,-3.912794,3.155253,0.243619,6.345192,5.272010,-4.592300,-7.893924,1.895487,-5.551700,9.030747,2.165816,2.701788,-7.420003,-1.150252,1.111597,-2.724614,5.660381,0.680023,-2.224714,-3.865694,3.815895,1.481067,3.392409,-6.151980,-0.775057,-4.882330,-8.761804,-7.917165,-6.630367,-9.484469,-4.675412,3.601752,8.338322,-2.964399,-5.908650,2.923748,-7.908036,7.151448,-6.682062,1.211187,-9.778225,-3.390846,0.904754,6.982816,4.832247,9.262834,4.607163,0.221121,8.082971,-8.360296,7.567582,-5.657349,-0.985338,3.763451,0.283380,1.189083,8.623386,-3.312771,-5.844322,-2.048926,9.032140,-4.284571,-3.657121,0.411561,9.383431,0.954196,-5.073672,-1.031166,-1.042528,9.527822,-2.505340,9.735180,-5.472054,-7.225354,1.301941,-8.750215,-5.432826,3.951631,4.775203,2.719158,6.884698,9.110464,-4.425037,-2.122400,6.117160,-6.640642,4.791395,9.341362,3.489521,-7.211340,-3.707382,2.183303,7.028693,-2.034623,-5.587635,-7.622652,-4.133732,2.550251,1.056186,1.931800,7.015601,0.105406,7.250306,-5.152316,-5.701066,-5.925148,7.249121,-5.771662,-3.877369,9.046744,-3.280134,-9.596866,2.253945,1.915223,-9.277841,-6.183408,-1.359307,-7.098025,-3.187600,-0.199690,5.655637,-7.560066,-7.360801,-6.482506,9.786062,5.791732,8.007028,-5.066759,9.691567,9.319609,6.548517,4.966407,7.616588,2.876465,-2.876361,7.294069,-4.876074,3.410911,-7.085177,-8.277927,9.048890,2.536969,0.205006,-1.957191,5.593304,-3.371246,9.422781,-9.226759,3.510078,-9.657033,1.102514,-6.714656,8.770481,-9.976276,9.496737,3.577329,6.164243,9.180193,9.134163,3.369342,6.182945,1.241593,-8.577235,-4.335432,4.452234,0.074868,-4.152258,1.214321,0.169178,5.246906,-9.131025,-7.615286,7.161970,-3.652913,8.095953,2.799659,-5.145836,3.574985,-8.223720,-1.449780,-0.446345,-2.695852,0.314196,5.586134,7.483014,5.570507,0.062797,4.954113,2.914758,8.625641,-3.990158,-3.679764,2.657132,3.946479,1.446311,-4.790197,1.774787,-9.104415,-9.874642,-0.011488,-4.946358,4.700155,1.517315,-1.955300,-6.526348,8.258901,-3.762283,3.020296,7.729662,4.358192,7.617027,-2.726765,-6.499521,7.236862,-3.957197,-3.105173,-5.644160,9.368685,2.147740,-6.755044,3.413345,-5.650061,1.742143,-0.573291,-9.421613,5.336392,2.953885,-5.040054,-8.103954,-6.642703,6.205354,5.105469,-9.459582,5.950223,-0.685551,1.372172,4.943003,8.547347,-0.769093,1.065220,2.376470,-1.198453,6.504179,-4.953853,-7.265792,-3.145859,-0.480737,0.464692,-4.716448,-9.176176,6.307885,5.134234,2.961143,8.460753,-5.132736,-0.029945,-9.127251,-2.154825,3.210984,2.352826,8.225706,-9.399007,-6.340867,-8.659743,-6.053788,5.743847,-0.158012,8.998853,-5.990824,6.360211,6.472809,-7.130634,-5.549113,1.985683,-5.011494,-2.617162,1.809847,4.424516,-9.385337,-8.955818,-1.852013,-7.479874,-8.406664,-0.190040,4.603407,7.570367,5.381312,-1.482376,-3.952679,8.922356,-8.982246,-9.663903,-6.610167,9.206786,3.405665,-2.415127,-9.746550,0.306238,-1.570864,4.161841,7.880432,-1.069459,-0.368833,7.259831,3.907802,0.246304,-7.528513,8.754139,5.553977,6.647001,-6.582722,-9.491757,1.322458,-9.274482,5.621668,5.659589,-7.201658,3.298347,-4.666444,-0.215570,-9.548380,5.058209,1.347345,3.307611,-2.414100,-3.064610,-2.618481,4.920724,-2.949997,8.339631,6.582639,-2.662948,0.220347,-1.862969,-5.694267,4.451716,6.559494,4.113711,9.658892,9.048610,-8.060996,-8.264642,1.160157,-5.790762,8.550718,7.580681,-0.275650,0.932844,-1.614470,8.448825,-9.828151,4.423747,9.020439,-6.029369,5.272588,-4.870999,9.766276,1.897520,-9.795849,-6.708529,6.774679,-8.427335,-2.332169,1.149235,-5.355222,8.455017,3.447822,-9.727254,-2.648616,2.799030,-8.375776,5.196985,6.782605,-3.117742,-1.045828,9.374663,8.440470,1.497258,0.712169,-0.349844,0.901042,-5.798702,-6.919928,3.340669,-9.666954,-5.308872,5.880240,-8.769626,-5.269048,-2.903673,-5.666701,4.722372,-1.641996,3.359892,0.672527,1.347564,3.120252,-2.544547,-1.942000,-0.701861,-5.669991,8.447473,-7.451266,-2.830693,6.708212,8.115933,9.729914,6.197680,3.100320,6.227666,-7.572018,8.154045,4.381397,7.496919,-6.300662,-0.223863,-5.612537,-2.178571,5.373896,-9.628061,3.451383,-3.196595,-2.161050,-9.439832,-0.159566,-2.869881,-0.640796,9.128037,3.483422,3.748382,-8.023695,6.258376,-2.740740,-7.127330,-3.946178,-2.600570,-1.265826,-3.742643,-7.027625,8.315757,4.030996,4.549931,0.893898,0.745358,8.062460,-6.468582,-8.542890,-6.381442,4.718966,-5.327272,2.319170,-3.070011,-5.990932,-4.456918,9.458445,3.574988,-2.213689,3.667675,4.099276,-4.418200,1.630244,0.929017,-7.448492,-7.335994,-8.930647,-5.026546,3.943616,8.276572,7.519226,-4.544892,9.079897,2.402313,-2.225178,-6.242553,3.966194,-8.492721,2.970451,-0.635655,-6.911442,-8.487428,-8.718973,-3.587917,1.485808,3.162627,-9.746587,9.766687,8.638883,3.774827,9.462530,-2.102271,-7.272435,-3.694422,-0.430772,-7.046979,9.902138,5.231196,3.081901,-5.352618,4.579791,4.336053,7.195194,-9.157827,-2.740045,0.583342,4.804214,-8.947264,-6.147524,3.002972,-8.576482,1.786313,-5.215629,7.869304,3.177332,-7.799268,3.473347,-4.928894,9.030061,7.889850,-2.926834,6.886303,-3.018298,7.923102,-7.971663,8.373575,-6.106944,3.651300,8.405831,-4.022476,-7.515592,-4.141380,1.660209,-8.201066,4.285708,-9.856030,-0.914665,7.093934,8.972919,-1.065205,6.833009,-7.905166,-3.672462,5.259763,-3.064039,-6.438695,-0.816742,-3.062609,7.389006,-2.067714,4.552657,-2.283917,7.342153,-1.047932,5.101874,-3.903964,4.998256,-5.449485,-7.231645,1.190441,-9.226075,4.107436,-4.194638,-6.346991,6.901830,-5.273254,8.613828,-0.790556,-2.734714,7.547552,3.299783,7.342552,1.362815,9.644667,1.382940,-9.433582,-4.669435,-1.130912,-8.230103,3.316054,-3.176279,-6.941791,-7.425217,-1.293522,2.111075,-8.564677,5.746611,9.718960,-8.129447,3.905657,-5.993333,6.189310,7.279204,6.110926,-5.967201,3.029650,9.688537,-1.061322,7.957690,-4.740219,-0.114522,3.040868,-8.742636,-5.493608,8.282175,-9.703974,-2.180448,8.589303,-6.457696,2.710835,6.548666,9.394874,-2.582032,-4.828769,-0.922401,-5.495855,-6.720577,-9.483343,9.261699,8.530786,-2.407107,-9.604497,3.149749,4.896942,-1.920996,-2.284379,9.534124,-4.898268,4.090605,3.855428,-3.303557,-7.317451,-2.002095,9.976136,-3.470550,-3.850442,8.556482,3.439397,-5.045989,-5.845173,4.889460,-9.596436,-9.080459,-0.534607,-5.096049,0.616139,3.663835,3.692529,-2.812952,3.191592,3.830979,-6.086407,-7.346514,1.004691,-9.836621,-1.532342,-9.442504,-0.189424,1.493422,-7.238902,3.772778,-3.510534,1.430766,-9.741268,2.878072,-7.481369,2.807703,8.333005,-8.272534,9.965495,-6.197761,-4.179560,-3.288222,0.558589,9.938636,6.810132,2.877202,-3.170668,8.327066,-3.527042,-3.709194,0.302182,1.807157,-6.966695,6.006259,-4.983892,8.026729,-6.795110,-7.467531,0.336849,5.512118,-8.092294,6.027095,-1.053750,4.432424,5.699805,7.866862,3.270980,0.501681,3.649553,4.479591,-1.764675,-5.757661,8.813729,-6.951619,3.294231,9.803488,-5.866349,-8.705087,-5.379104,1.903033,3.891134,-8.648050,-8.637429,-4.342973,5.745919,7.566961,-1.362151,-7.479851,-5.505604,7.831159,2.708956,8.611153,7.918489,-7.637329,4.480536,8.541940,-8.492396,-1.373074,5.937643,-8.654192,-6.361972,-1.335600,-8.795239,-6.723626,6.762450,-5.672902,2.504874,-9.550229,3.685371,-4.932556,-3.449748,4.866047,7.199370,5.267055,5.957124,4.390593,-6.378386,-4.721613,1.070131,4.529213,-1.526701,7.584657,-4.000595,-6.283684,-7.395013,-6.619197,-5.229370,5.301821,7.721179,-9.417115,6.357135,5.033827,0.553483,-6.805775,-8.782125,7.971561,6.926256,-8.824983,-0.182259,7.150470,8.682135,-3.827811,8.261402,-7.531392,-4.113815,1.042953,-1.816541,2.606733,9.361880,-2.838697,-9.909217,-2.254364,-7.766119,2.597488,-2.246615,4.437742,-3.876280,3.792203,-7.814071,6.500275,9.296805,-0.233943,2.101258,8.696991,9.813916,-7.133954,-2.977780,5.589761,-8.704760,4.193906,3.157176,-5.498912,-1.451037,4.676972,5.343633,-3.264298,-9.343664,5.293648,-0.703415,-1.605005,-6.292676,0.545829,2.333408,-5.891821,2.165209,-4.504857,-8.343946,4.976018,2.597390,0.344843,2.160091,6.842875,-6.323839,5.916267,1.817582,-2.438475,-7.638750,-5.798762,-4.240103,7.807923,8.850675,-6.326010,9.143292,-6.207199,4.061259,9.950830,4.917701,-5.771694,4.720447,8.648740,8.866808,0.904278,6.677054,4.957524,-6.794492,-4.256279,1.815395,5.968599,-7.686217,4.610973,-7.084173,-5.607857,4.579799,8.016343,-9.695148,9.746774,2.459122,0.283010,2.158009,-5.459252,-5.751214,6.849729,-4.093478,-9.572377,-3.833479,-7.795725,-0.384985,1.796054,6.298149,2.347276,8.108342,0.315893,6.078037,2.890429,3.985366,-5.717019,-4.528695,0.171578,-4.087172,7.831399,4.101709,4.472608,-5.473066,0.952756,-8.556410,4.893670,-7.663102,-0.201338,-0.401557,-2.407462,2.127618,0.382282,-3.874007,-2.390221,-5.535298,7.129304,3.461457,7.180371,2.680528,2.529864,1.683983,1.136101,6.493932,2.512062,-3.874996,-2.513974,-6.637733,4.593557,-0.248984,-3.210159,-1.456741,9.099004,-3.617917,0.422706,8.617466,5.560370,-7.571837,-2.271480,-9.772920,0.608571,4.034803,5.644023,7.741467,-8.857566,-7.175352,-2.871316,5.027317,3.538757,-1.141467,6.909793,9.953870,8.666759,-5.872818,-5.597099,9.776835,4.732408,3.245083,3.454644,1.311247,-3.686631,-2.330786,-3.743938,-5.856462,8.141264,7.816281,4.693862,-3.002077,-4.048411,-9.005792,5.633447,-6.006533,5.427813,6.475014,-6.886705,-9.983959,7.538726,8.697821,-2.561486,7.400493,-4.138910,1.923801,7.171459,-9.286642,-1.802393,-1.974047,8.664820,-0.985683,-5.507472,9.152248,-0.311652,-2.349822,-1.741236,-1.474963,2.866013,-8.367102,-6.596667,8.350461,6.617264,9.077532,8.880751,-2.922442,-1.173711,1.012787,-5.894261,6.200149,-3.928380,-2.089603,5.764311,-3.314060,-4.701072,-3.627756,-3.727230,4.915629,-0.202504,0.975703,-7.831158,-2.492633,-9.999568,-1.437533,-0.099533,7.574422,2.835274,7.049926,-3.638605,6.921667,-4.873026,0.836207,-7.967117,5.606159,8.693584,-8.755844,-5.010375,-7.151420,-6.127537,3.033010,-0.219510,4.001195,9.220617,-5.029192,-2.258574,-9.562228,-2.633362,3.143395,-2.590195,2.172489,4.533435,-5.813883,-1.191743,-6.758090,9.228483,3.975286,5.397351,0.454167,0.414968,-5.628806,2.351415,-6.942445,0.778237,-3.316190,-1.555768,7.956683,6.318529,9.188329,7.063992,-5.675892,-4.834820,-5.265890,4.344239,-7.057084,-2.847913,-1.299200,9.157596,9.009757,4.273565,6.298948,0.455100,4.802470,-7.854623,-1.026326,4.105430,-8.101995,-0.807303,0.988023,-7.048847,-2.425114,-5.377525,-9.405689,3.266195,-7.125608,-2.365068,0.272847,6.794815,-7.828069,9.080371,4.706901,-9.615281,-1.997690,-6.506881], dtype = "float64")#candidate|4914|(1200,)|const|float64
call_4913 = relay.TupleGetItem(func_2460_call(relay.reshape(const_4914.astype('float64'), [15, 5, 16]), relay.reshape(const_4914.astype('float64'), [15, 5, 16]), ), 0)
call_4915 = relay.TupleGetItem(func_2463_call(relay.reshape(const_4914.astype('float64'), [15, 5, 16]), relay.reshape(const_4914.astype('float64'), [15, 5, 16]), ), 0)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_4917 = relay.TupleGetItem(func_2894_call(), 2)
call_4918 = relay.TupleGetItem(func_2896_call(), 2)
func_1460_call = mod.get_global_var('func_1460')
func_1464_call = mutated_mod.get_global_var('func_1464')
const_4940 = relay.const([-9.030789,-5.928171,-1.124297,-3.074570,-4.932050,5.669228,-5.952397,-1.315714,8.513217,-9.123245,9.823178,7.708494,7.176631,-3.759930,-2.957161,-8.969075,5.449627,-7.606905,-1.502348,7.547877,8.605753,8.386167,-3.555336,-5.489181,-2.690252,1.432723,-2.641819,9.713444,-4.673036,-2.381361,2.036226,6.904299,6.111733,-6.407403,-7.732695,-9.473344,-8.834063,6.325343,8.697609,9.042546,-2.412759,0.810050,4.949106,-1.271528,-8.714225,-3.077854,-4.820673,-8.582189,8.719958,7.946462,0.619486,6.937689,5.169659,-0.027943,2.614240,9.198893,-7.015461,-5.606679,2.375969,1.951240,9.908033,6.044109,5.249062,0.113768,-4.054074,-7.964965,-2.693789,4.338725,9.134268,-1.714929,8.802891,-3.634755,-3.903894,7.122937,-2.280501,9.784152,-9.795328,5.850003,-8.365788,-1.609917,1.084573,-2.530555,1.174077,-0.626138,4.765301,1.581268,-7.167125,-0.720319,-7.938545,-5.478658,-1.608658,-6.926394,-6.378018,-7.627233,-5.080412,3.368246,-6.102386,3.546998,6.066030,-1.873068,-1.670097,-2.680545,0.291304,9.584801,-4.985743,-3.613674,7.237502,-6.032609,-6.291238,-2.831640,9.504663,5.343277,-7.243040,5.657391,-0.042594,-5.427005,4.084280,6.644902,-4.633626,-2.894282,-1.956222,2.557951,1.062131,2.299409,5.748349,-8.151058,5.338029,-1.819374,-0.350355,4.944090,0.824755,7.533996,-2.386050,2.309126,2.875609,-5.249489,2.502569,8.026648,9.950520,-1.140812,1.617121,8.275923,-7.116320,-1.993718,-4.431733,6.304224,9.663154,-7.929240,9.233742,-4.610891,-5.990518,-9.492356,0.732587,-0.683304,-9.289670,4.891512,-8.906083,-8.504462,-3.173404,2.067482,1.292913,-8.819459,-1.630263,-4.838109,-7.386354,-0.282290,2.547099,-4.954767,9.154620,1.379041,-7.866068,7.214579,-0.475905,2.257311,-6.368445,9.268989,-7.146877,-7.566421,-9.558099,-2.755731,-8.628933,9.355939,-1.585256,-3.485239,7.184833,2.228084,-5.259660,-1.295537,3.005540,7.507664,-8.277221,3.439755,-0.120214,0.502821,-7.297051,9.648644,9.685413,2.266443,9.471923,0.443038,4.647159,-6.291424,3.395749,-0.953907,-8.077084,-2.688367,-8.197625,0.841271,5.048064,-4.607322,3.919459,-2.990277,-6.841486,-4.332768,8.789792,-9.992931,-7.025311,-8.050663,2.628442,-8.307769,-7.864152,1.741852,-7.652812,5.014094,6.509235,-0.567936,-0.666522,7.131353,-0.501904,-7.632986,0.360727,-5.039950,7.045949,9.220259,-2.727200,-0.471187,-7.050001,7.037678,8.142104,2.765577,-9.705361,0.519897,-1.798569,-9.834431,-3.214637,4.517251,2.110997,3.860582,-8.120867,-2.424755,2.570572,-5.937015,-5.169383,-8.805001,-7.977976,-3.064671,0.548774,0.798899,4.910981,-6.230776,-0.648164,4.094978,-1.337366,-7.513527,-5.959689,9.489760,-9.943393,3.225697,8.946993,-5.853708,4.257210,3.092752,-8.287223,3.859950,-7.518636,1.344566,8.985819,-4.181028,9.126878,-5.031717,3.333068,8.730040,2.996370,-0.031725,5.893020,0.505102,-1.967452,4.710964,8.969160,-0.185163,3.595675,2.919086,-5.700111,-7.510724], dtype = "float64")#candidate|4940|(294,)|const|float64
call_4939 = func_1460_call(relay.reshape(const_4940.astype('float64'), [7, 3, 14]), relay.reshape(const_4940.astype('float64'), [7, 3, 14]), )
call_4941 = func_1460_call(relay.reshape(const_4940.astype('float64'), [7, 3, 14]), relay.reshape(const_4940.astype('float64'), [7, 3, 14]), )
output = relay.Tuple([call_4905,call_4913,const_4914,call_4917,call_4939,const_4940,])
output2 = relay.Tuple([call_4906,call_4915,const_4914,call_4918,call_4941,const_4940,])
func_4949 = relay.Function([], output)
mod['func_4949'] = func_4949
mod = relay.transform.InferType()(mod)
output = func_4949()
func_4950 = relay.Function([], output)
mutated_mod['func_4950'] = func_4950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_4954 = relay.TupleGetItem(func_2702_call(), 0)
call_4955 = relay.TupleGetItem(func_2703_call(), 0)
func_152_call = mod.get_global_var('func_152')
func_155_call = mutated_mod.get_global_var('func_155')
var_4960 = relay.var("var_4960", dtype = "int8", shape = ())#candidate|4960|()|var|int8
const_4961 = relay.const([-1,9,10,-3,6,-8,-5,9,1,-2,-3,-8,-9,-6,-8,-8,-1,-8,8,-2,7,5,-8,-1,8,1,2,-8,10,2,8,1,-5,-2,4,-9,-3,2,9,-8,7,-10,1,-10,3,3,1,1,-4,-3,7,9,6,-1,7,2,1,4,10,-4,-7,-4,-4,-6,-10,-9,1,-6,1,2,7,3,7,-1,-1,-2,4,7,-3,-6,-2,-9,-3,9,-4,-4,-6,10,-4,10,6,4,-8,-7,1,-5,10,-3,-8,-9,-5,5,1,5,-4,9,-9,-9,-3,9,2,7,5,-5,4,9,-8,-1,8,4,-10,-4,-5,5,1,-2,-7,7,8,-9,7,-2,-10,5,10,4,2,1,10,7,-2,-8,-7,3,8,-8,9,3,-6,9,-6,7,10,-7,-6,6,1,-6,-9,-4,2,4,-5,-1,5,-6,-5,-9,1,-7,-10,4,7,10,1,-2,7,4,-5,2,5,1,10,-4,7,9,-6,-9,-5,6,-2,-8,-8,-2,5,3,1,-1,5,6,-9,-9,8,-8,6,8,4,-8,8,5,3,5,-1,7,-4,-8,-7,-9,-5,-5,-1,-9,-9,-7,-9,10,10,8,-4,7,-9,2,-2,-1,8,-9,1,3,-7,6,-5,-7,-4,8,1,5,-2,6,-5,-2,4,-1,-9,6,-7,1,-1,-10,-7,-10,-6,10,1,2,4,-9,7,-7,6,-2,6,-8,-6,-9,-9,-3,5,2,9,1,10,-6,-2,3,4,3,-1,-6,-9,1,-7,10,-8,-5,-6,2,8,3,9,-8,-1,5,-9,-10,10,-6,-6,7,9,-10,-10,-3,10,-8,3,-4,-4,8,-3,-4,10,10,-4,-1,-10,-10,-5,9,-10,-6,3,-7,2,4,4,8,6,1,4,-7,-4,5,1,-7,-10,-5,-3,-4,10,10,-6,9,6,-3,5,-3,8,-10,-1,-3,-8,-8,3,-7,9,-10,-8,8,10,-4,-3,3,6,-10,8,2,4,-10,3,1,-9,-9,-9,-2,-8,5,7,3,-1,2,8,9,5,8,-9,2,-1,4,7,10,-4,9,3,5,-4,-7,-3,2,-8,-8,1,-4,2,-4,-3,8,-9,9,8,-8,-2,-5,-3,-5,-9,-5,-4,5,-6,8,-3,-9,3,2,3,-2,-7,10,-5,-9,9,-7,5,-2,10,2,-6,4,10,-9,-8,-6,9,2,-2,-10,-7,7,-10,-2,-8,-4,7,4,-7,-8,5,9,9,-1,6,-3,8,-2,-8,-9,-1,1,-2,-3,9,4,-5,-9,8,-7,-1,5,10,-8,-6,-7,9,-4,4,-9,-1,6,-8,4,6,10,4,7,-7,-4,-1,1,-8,10,-4,-4,2,5,-6,-7,10,10,-7,10,1,8,-3,-9,-3,3,-7,-4,-7,-10,8,3,-7,6,9,9,-7,1,7,1,8,9,10,-4,-4,8,-2,-2,6,-6,-3,7,3,10,-8,1,-6,1,4,1,-2,10,3,-4,1,8,-4,-3,-2,8,-5,-6,-9,-5,4,1,-8,-9,-4,-2,2,10,-2,6,8,-4,3,4,-8,-5,6,6,8,4,8,-8,3,-10,-2,3,-10,-3,-8,7,5,-8,-9,-4,10,10,4,-10,-7,-6,-9,-9,5,-6,-10,-8,-6,-7,-9,-1,-10,8,-8,-3,-1,3,7,10,7,-4,10,3,8,-10,-2,-7,3,-8,-4,-5,-1,8,4,9,-6,8,5,-10,1,2,-3,8,4,7,9,6,4,-8,-2,10,2,-3,-1,-1,-5,6,4,3,9,8,4,8,8,4,4,7,4,-4,5,7,-10,7,8,2,10,5,-5,-1,10,-2,-1,-2,-1,2,-4,5,4,10,3,-7,-3,8,5,1,-5,10,4,-5,-8,10,-5,-10,8,-1,1,4,2,1,1,3,-5,-6,-4,-5,-5,8,9,-1,5,7,-1,9,-5,1,4,-4,6,9,8,-6,-8,-6,-10,3,-8,3,-1,3,5,-4,7,-10,-7,-4,-3,-1,-5,-8,-4,2,1,-5,8,-10,1,3,-3,2,-2,-6,-9,3,-4,8,-2,-3,-6,7,4,8,-3,-5,6,6,-6,-10,-9,-8,6,2,10,10,2,1,-7,5,-2,8,-8,5,-7,10,1,-9,-5,4,-6,1,-4,-8,-3,-4,-3,-2,-5,6,5,-7,3,-1,9,-6,-2,5,-9,-8,5,-7,2,-9,8,10,9,-8,-3,1,-6,7,3,-5,-4,-5,5,-7,-3,6,2,-5,-3,-3,3,10,-2,9,-10,10,-7,3,8,7,-8,3,8,1,10,-10,10,4,7,-7,-8,-1,3,5,7,3,6,3,1,-7,-8,5,5,7,-3,-10,-5,-5,8,10,-3,-9,6,-5,6,9,7,9,1,7,-4,6,10,8,1,-3,10,5,4,4,-2,-5,6,2,-3,3,5,-7,-1,5,4,6,10,9,-1,-5,5,-1,-3,10,3,-3,3,5,6,5,8,3,3,1,4,-7,5,10,3,3,-3,4,8,-1,-9,-4,8,-4,-9,4,-2,-2,1,6,2,-7,8,5,1,10,-10,9,-2,-8,-10,4,-7,1,-8,1,-8,7,10,-4,5,4,-10,5,6,5,-10,-9,5,5,9,-5,4,5,-3,-6,-4,-8,-3,-6,-8,6,10,-5,7,10,3,3,7,-3,8,1,-10,-6,-1,4,3,-7,7,-2,1,-8,-5,-2,-2,5,4,2,4,-1,-10,4,4,8,5,-6,2,-1,-7,-1,7,1,-1,-9,2,-2,4,-6,9,-10,6,1,1,6,4,-9,3,-4,4,1,-1,8,1,4,2,6,-1,7,-6,2,-10,3,-2,2,-8,1,8,-7,-7,-8,-6,-6,-9,10,6,7,4,3,-7,-1,-8,8,-4,-2,5,-10,4,1,1,-1,3,6,10,-3,-2,5,9,-7,-8,3,-1,-6,1,8,-9,10], dtype = "int8")#candidate|4961|(1120,)|const|int8
call_4959 = relay.TupleGetItem(func_152_call(relay.reshape(var_4960.astype('int8'), []), relay.reshape(const_4961.astype('int8'), [14, 5, 16]), ), 0)
call_4962 = relay.TupleGetItem(func_155_call(relay.reshape(var_4960.astype('int8'), []), relay.reshape(const_4961.astype('int8'), [14, 5, 16]), ), 0)
func_4665_call = mod.get_global_var('func_4665')
func_4672_call = mutated_mod.get_global_var('func_4672')
var_4980 = relay.var("var_4980", dtype = "int16", shape = (2, 504))#candidate|4980|(2, 504)|var|int16
const_4981 = relay.const([[8,-5,9,4],[3,8,4,10],[-6,8,-9,9],[-3,7,2,5],[-3,10,10,-2],[5,-8,3,6],[-8,7,3,-9],[8,8,-9,-1],[-3,-2,3,7],[6,-7,-3,6],[7,-1,9,7],[-3,-1,-9,-5],[-1,5,-3,-4],[-8,-5,1,-2],[-7,9,2,7],[-2,-8,-9,3],[-1,6,1,-2],[10,-9,9,9],[4,-3,-3,-2],[7,4,-4,-7],[-5,9,-4,6],[6,-3,7,-4]], dtype = "int64")#candidate|4981|(22, 4)|const|int64
var_4982 = relay.var("var_4982", dtype = "float64", shape = (546,))#candidate|4982|(546,)|var|float64
call_4979 = relay.TupleGetItem(func_4665_call(relay.reshape(var_4980.astype('int16'), [6, 12, 14]), relay.reshape(var_4980.astype('int16'), [6, 12, 14]), relay.reshape(var_4980.astype('int16'), [6, 12, 14]), relay.reshape(const_4981.astype('int64'), [88,]), relay.reshape(var_4982.astype('float64'), [91, 6]), ), 3)
call_4983 = relay.TupleGetItem(func_4672_call(relay.reshape(var_4980.astype('int16'), [6, 12, 14]), relay.reshape(var_4980.astype('int16'), [6, 12, 14]), relay.reshape(var_4980.astype('int16'), [6, 12, 14]), relay.reshape(const_4981.astype('int64'), [88,]), relay.reshape(var_4982.astype('float64'), [91, 6]), ), 3)
uop_5002 = relay.cos(call_4959.astype('float64')) # shape=(14, 5, 16)
uop_5004 = relay.cos(call_4962.astype('float64')) # shape=(14, 5, 16)
output = relay.Tuple([call_4954,var_4960,const_4961,call_4979,var_4980,const_4981,var_4982,uop_5002,])
output2 = relay.Tuple([call_4955,var_4960,const_4961,call_4983,var_4980,const_4981,var_4982,uop_5004,])
func_5007 = relay.Function([var_4960,var_4980,var_4982,], output)
mod['func_5007'] = func_5007
mod = relay.transform.InferType()(mod)
var_5008 = relay.var("var_5008", dtype = "int8", shape = ())#candidate|5008|()|var|int8
var_5009 = relay.var("var_5009", dtype = "int16", shape = (2, 504))#candidate|5009|(2, 504)|var|int16
var_5010 = relay.var("var_5010", dtype = "float64", shape = (546,))#candidate|5010|(546,)|var|float64
output = func_5007(var_5008,var_5009,var_5010,)
func_5011 = relay.Function([var_5008,var_5009,var_5010,], output)
mutated_mod['func_5011'] = func_5011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_5184 = relay.TupleGetItem(func_2894_call(), 1)
call_5185 = relay.TupleGetItem(func_2896_call(), 1)
output = relay.Tuple([call_5184,])
output2 = relay.Tuple([call_5185,])
func_5187 = relay.Function([], output)
mod['func_5187'] = func_5187
mod = relay.transform.InferType()(mod)
mutated_mod['func_5187'] = func_5187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5187_call = mutated_mod.get_global_var('func_5187')
call_5188 = func_5187_call()
output = call_5188
func_5189 = relay.Function([], output)
mutated_mod['func_5189'] = func_5189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4070_call = mod.get_global_var('func_4070')
func_4071_call = mutated_mod.get_global_var('func_4071')
call_5276 = func_4070_call()
call_5277 = func_4070_call()
func_4364_call = mod.get_global_var('func_4364')
func_4367_call = mutated_mod.get_global_var('func_4367')
const_5279 = relay.const([-6,5,8,-7,-6,-2,5,-10,3,-2,1,4,10,-4,-8,-3,-7,8,-4,10,-7,8,6,-1,-1,-4,8,10,4,3,2,-6,2,4,-8,7,-1,-9,10,8,4,-6,7,-10,-9,-5,-9,-9,5,-9,2,-6,1,-9,-7,6,8,4,7,8,-9,6,2,-8,-1,-9,5,5,3,8,-1,-3,-6,4,-5,7,5,-1,-1,5,-8,-4,-10,-10,2,-4,4,-4], dtype = "int64")#candidate|5279|(88,)|const|int64
var_5280 = relay.var("var_5280", dtype = "uint64", shape = (600,))#candidate|5280|(600,)|var|uint64
call_5278 = relay.TupleGetItem(func_4364_call(relay.reshape(const_5279.astype('int64'), [88,]), relay.reshape(var_5280.astype('uint64'), [600,]), ), 5)
call_5281 = relay.TupleGetItem(func_4367_call(relay.reshape(const_5279.astype('int64'), [88,]), relay.reshape(var_5280.astype('uint64'), [600,]), ), 5)
func_1460_call = mod.get_global_var('func_1460')
func_1464_call = mutated_mod.get_global_var('func_1464')
var_5283 = relay.var("var_5283", dtype = "float64", shape = (294,))#candidate|5283|(294,)|var|float64
call_5282 = func_1460_call(relay.reshape(var_5283.astype('float64'), [7, 3, 14]), relay.reshape(var_5283.astype('float64'), [7, 3, 14]), )
call_5284 = func_1460_call(relay.reshape(var_5283.astype('float64'), [7, 3, 14]), relay.reshape(var_5283.astype('float64'), [7, 3, 14]), )
output = relay.Tuple([call_5276,call_5278,const_5279,var_5280,call_5282,var_5283,])
output2 = relay.Tuple([call_5277,call_5281,const_5279,var_5280,call_5284,var_5283,])
func_5287 = relay.Function([var_5280,var_5283,], output)
mod['func_5287'] = func_5287
mod = relay.transform.InferType()(mod)
var_5288 = relay.var("var_5288", dtype = "uint64", shape = (600,))#candidate|5288|(600,)|var|uint64
var_5289 = relay.var("var_5289", dtype = "float64", shape = (294,))#candidate|5289|(294,)|var|float64
output = func_5287(var_5288,var_5289,)
func_5290 = relay.Function([var_5288,var_5289,], output)
mutated_mod['func_5290'] = func_5290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4949_call = mod.get_global_var('func_4949')
func_4950_call = mutated_mod.get_global_var('func_4950')
call_5309 = relay.TupleGetItem(func_4949_call(), 4)
call_5310 = relay.TupleGetItem(func_4950_call(), 4)
func_4517_call = mod.get_global_var('func_4517')
func_4520_call = mutated_mod.get_global_var('func_4520')
var_5318 = relay.var("var_5318", dtype = "int16", shape = (480, 1))#candidate|5318|(480, 1)|var|int16
call_5317 = relay.TupleGetItem(func_4517_call(relay.reshape(var_5318.astype('int16'), [12, 5, 8]), relay.reshape(var_5318.astype('int16'), [12, 5, 8]), ), 0)
call_5319 = relay.TupleGetItem(func_4520_call(relay.reshape(var_5318.astype('int16'), [12, 5, 8]), relay.reshape(var_5318.astype('int16'), [12, 5, 8]), ), 0)
uop_5329 = relay.sinh(var_5318.astype('float64')) # shape=(480, 1)
const_5338 = relay.const([[-9.898863,-4.218652,-4.916428,7.389243,-1.782066,4.574470,-8.830282,1.988958],[-6.458798,4.748506,4.464802,1.987846,-6.377484,3.318107,-6.179375,-0.584324],[-9.248808,-3.930332,3.657446,-8.079317,-1.439579,-3.455141,-8.406504,8.920919],[7.123971,-6.690510,9.309896,9.620610,3.712206,-6.917064,7.267364,-1.601378],[-4.855834,3.274031,-4.452469,2.835552,4.275515,6.778788,0.898437,-8.161986],[-2.587886,-6.969848,-5.469620,7.435062,-6.476706,4.676054,-1.325859,-8.928276],[-8.189849,-5.174956,4.808667,-4.284694,5.550701,-7.351802,-0.288525,-5.593102],[-8.628684,-8.484775,-1.381311,-9.650018,-6.729970,-5.472427,5.564017,0.545426],[-0.856614,-5.186935,5.381205,7.855090,-4.102803,-1.426005,-3.332711,1.919019],[0.064442,-5.415250,6.892653,-9.607247,-8.580667,-8.443110,6.467369,-0.181779],[8.146881,0.443100,0.448525,-4.349933,9.249091,-5.129888,1.991468,-0.979533],[-0.850896,-9.784248,8.297848,9.718449,4.573382,0.012562,4.638620,5.831116],[-1.514937,5.986493,9.237757,8.993071,-0.709123,-7.734289,-9.201538,-0.732800],[7.136795,-9.770745,-9.247580,8.848778,-1.615622,-1.301077,-7.529998,-6.246680],[5.920449,-9.799477,1.817246,8.746177,7.794211,5.201560,-4.436439,-7.820914],[-2.295239,-8.245713,-3.062797,2.497314,-6.310906,-9.883036,8.568728,1.634985],[2.821266,3.811431,9.638354,-8.650801,-1.905978,-2.401900,-3.035101,6.956597],[-0.869495,9.210892,7.893796,6.048568,-7.044447,-5.979994,-9.163927,-4.138192],[1.012525,7.592714,-9.912765,6.905619,6.142421,6.063987,8.239195,4.398108],[-0.741263,-1.038191,7.011180,2.916085,-7.018989,6.697078,5.942842,-8.426390],[5.106288,-4.525484,6.330581,-1.294131,3.506352,-8.424709,-6.942043,-0.252930],[-4.520288,-9.782488,-1.512987,-8.561341,5.279265,-7.708377,6.486803,8.537739],[-2.446577,0.536079,-2.190276,-0.526067,5.945158,-6.470474,-0.751204,3.751563],[6.940843,-6.346225,0.309747,-5.836919,-0.847249,-4.630750,7.730098,-7.441957],[3.876776,-5.748016,-0.772114,7.581685,8.447531,4.157590,5.034810,8.864627],[3.337577,-9.152720,-7.280376,8.263249,4.607638,-1.981241,-2.731862,-5.680384],[-8.444175,6.491068,-7.727685,5.379994,-2.262682,4.957339,9.754791,-8.964895],[4.217034,1.710380,-3.716711,-3.398548,-0.501650,-8.418000,-7.033742,-3.430923],[4.278332,1.813437,4.020901,-4.287926,3.367280,4.366700,-0.823781,2.286694],[-8.390382,9.847717,-3.330419,9.860533,-1.779708,8.583400,-8.048310,-9.196955],[0.527941,1.267326,-1.480169,-7.153563,-7.388266,-0.670593,8.196173,-4.812258],[-6.628467,-9.257217,5.871008,-6.118942,-7.632873,-9.114686,0.566761,-7.939559],[-8.975462,3.168780,8.325471,9.803609,3.269697,-3.691100,6.731105,6.108972],[-9.992575,-1.668274,9.634010,-2.808417,-5.168283,-0.340647,4.161488,-8.928656],[4.810400,-3.707392,5.853617,-7.058782,4.125224,-0.440028,2.398848,-7.919918],[6.669594,5.925554,3.434360,-1.081586,9.414767,-0.315629,-8.491554,-5.951412],[-1.731278,-7.118878,-9.176299,1.292303,-6.434115,6.091052,2.849587,0.968189],[-6.141421,4.794351,-5.526064,-8.065120,-7.341536,-0.567829,0.245068,-4.014651],[7.908700,-1.707262,9.922434,0.479248,1.325552,4.416192,3.320588,6.763356],[-4.729547,6.824813,5.092882,-5.153250,-1.171344,-0.668785,4.757081,-9.540910],[3.220117,4.409315,-3.763792,-4.530418,3.406190,-8.839806,0.987436,-3.509094],[-5.180515,-4.422733,5.988727,0.200285,-2.113529,-8.353290,2.913529,-9.755231],[7.706049,4.493853,3.514230,9.673974,-2.967765,4.042123,2.761019,3.174720],[8.941216,9.317921,-4.845699,6.496132,-8.361894,-7.241545,-6.739860,0.247553],[-3.898060,6.036194,-4.548349,-7.805837,-9.731396,-8.349561,-5.021018,3.122777],[-6.322055,-3.358118,8.096586,0.126961,3.406871,4.458399,-3.879252,8.718395],[-9.827983,-0.924328,2.335291,7.998342,-0.533231,-1.741144,1.588038,1.566742],[-9.559130,-1.268217,9.680019,-5.036274,2.905391,-6.930636,-3.056470,8.039876],[-2.046226,7.797220,-0.481592,6.695554,3.698378,8.865358,7.149446,-5.306842],[6.475605,9.286744,-4.937545,9.133812,-6.219301,5.110070,-1.749614,7.478193],[4.772878,-8.891718,5.142709,-6.757462,0.310935,7.754313,-0.982328,5.809156],[-5.860904,-3.036187,-8.082625,-7.482323,8.391307,6.784327,-1.247726,-7.015629],[5.496390,-6.795495,-1.082178,0.259400,-6.551585,-4.933445,-1.629514,-7.509790],[8.660206,5.981924,7.069478,-9.436748,-8.406361,-7.648102,-8.605376,-1.309393],[2.009583,-7.011843,3.786813,-1.465725,-4.582147,6.034092,-5.599101,7.509966],[-7.675629,0.603503,-1.229616,8.519527,2.598390,-8.453496,-5.813591,8.074500],[0.063364,-6.019354,-6.678149,-6.587392,5.694031,2.970080,-9.218716,0.332683],[-8.855910,-7.012333,-5.923931,9.876541,4.821308,3.156980,-7.811864,6.643783],[-4.545884,-3.067447,-6.862919,1.572318,-6.336712,8.834054,5.973798,-4.489241],[1.854061,0.079161,-2.121164,9.613589,-0.483053,1.662225,-9.143488,-0.101365],[-6.649218,9.497374,2.670400,7.125303,9.623394,-6.131654,5.204313,-4.732322],[0.743029,5.674256,-7.078965,8.343355,6.893623,0.448967,-0.621274,1.427819],[9.612183,2.041271,6.009376,-1.261497,-8.354224,-5.877465,3.386368,-9.763084],[-8.995120,-1.040266,3.391221,9.105323,8.841307,-5.586538,-0.924718,-3.833185],[-4.360283,-4.461697,-2.926020,-5.632490,-9.742222,3.386645,-6.942157,-1.849822],[7.581606,2.085225,6.125035,4.555804,-3.933147,-1.547951,0.104805,-1.598452],[-2.321273,-3.135892,7.435051,4.280045,0.868335,-3.223401,3.865938,-2.879768],[6.764261,8.230828,-6.284599,1.690270,-4.154318,6.709076,6.451387,1.691130],[-3.780746,-6.647456,-7.844723,0.916570,-0.074406,6.492062,6.995104,-0.588814],[-1.322437,8.263295,3.954174,3.725067,-7.729429,8.417918,-8.216694,9.952031],[-8.540296,-0.644651,-4.078725,-4.155590,6.324925,-0.234073,7.122342,-7.585751],[-5.812010,-9.388560,-7.649920,1.064780,-8.567805,-2.935832,9.078408,-6.119523],[-1.971756,-7.729060,-5.991056,0.357116,2.875968,-1.901610,5.383083,-0.779315],[-2.798646,4.831751,-9.429158,3.415045,6.818451,0.304702,-5.747722,4.108371],[-6.440610,0.290673,-1.889917,5.577272,-7.084153,0.338472,-4.188845,7.814150],[-0.902242,9.991137,9.393226,-6.070795,7.281234,6.938652,3.739086,-9.000442],[-4.163207,-8.772190,-2.256600,-2.026069,-5.473037,-4.461964,3.081756,2.501541],[-3.947692,-3.355135,-9.384807,7.113070,-1.434864,9.819973,5.555140,-7.603093],[8.421978,-9.877939,-3.114728,-8.535525,-9.646995,6.368409,-8.448530,-1.819011],[1.171147,-5.546351,6.880672,5.589598,-5.680769,9.098011,-0.546225,7.460209],[-6.120248,-6.858319,0.365264,3.559416,4.567977,7.461824,-1.710841,2.465479],[2.180603,6.464449,5.944747,-9.349645,3.244753,2.218258,6.242356,3.717621],[-7.865526,-6.671392,-7.842250,-7.746427,-7.902565,4.882878,8.593308,1.767511],[-7.321758,2.778514,0.509263,2.374192,7.375251,9.895488,4.943299,-1.492920],[-8.701754,4.213872,1.784823,-7.012368,-3.171862,-4.599220,-7.638630,-0.237359],[-3.325428,-6.602104,6.254295,-0.549356,-9.718029,-7.053846,-9.070828,-8.077107],[4.514603,7.275464,2.217093,3.720014,3.379961,9.898642,9.889624,-0.701344],[2.489216,6.432406,-3.972221,3.814054,3.076559,-6.765621,-7.815312,-5.293761],[7.706581,-9.786091,-6.982571,-3.933024,2.279166,3.484936,3.633128,-2.173874],[3.391358,2.507246,7.262039,-5.795419,-5.144295,-7.492810,3.362748,4.353916],[-1.589192,9.265557,5.156457,-5.133914,9.969968,8.498277,0.314902,9.467376],[8.475338,-4.662232,2.837083,-4.159396,-0.585236,3.877493,0.090706,-5.376921],[-8.291676,-4.824948,0.450072,9.573661,3.662108,3.535505,-9.767727,7.034147],[8.807151,5.661374,-2.440236,2.643424,-0.689124,2.223289,2.660200,-7.076165],[0.652549,1.716540,7.742867,-3.099007,2.419362,-2.536668,-2.485865,6.133157],[1.161275,6.507098,-6.252266,-8.856506,7.945976,6.287852,7.488272,-7.019068],[-3.188489,6.240431,-6.544691,-8.691229,9.340059,-1.973968,-0.242566,-8.561657],[-1.880208,-3.108984,-9.760333,5.546512,-3.347176,-5.410262,-6.605340,-7.091160],[-0.168776,4.421388,4.299477,-6.202869,-5.983144,5.277758,-1.246350,-3.926430],[9.300904,-4.950214,-8.360460,6.442376,-6.606366,-8.275642,-7.857016,4.250633],[3.903438,-9.599849,7.804213,6.320572,9.579662,-1.539979,-9.231972,-1.440070],[2.616654,0.450667,-9.529718,-9.223710,-6.222944,-0.983355,-1.868282,1.089836],[-6.597621,-4.769049,-7.742952,4.513260,-2.465164,-7.385417,-9.028087,-0.451588],[3.177047,9.654849,-8.535854,-5.430605,7.321417,-9.899694,-5.440846,7.009491],[1.236596,-3.394960,8.338361,8.356467,-2.487052,0.973664,-7.333035,-0.160808],[9.806570,9.837614,-7.915512,0.597952,-4.159084,2.898223,8.008601,5.846838],[-5.494734,8.580931,3.090354,-8.105761,-9.713396,5.589976,8.099969,-9.059669],[8.769291,0.411628,5.663563,7.646795,-8.499692,-4.002640,4.059107,-9.970798],[-4.956359,-0.539552,-5.680287,8.689967,-0.631058,7.109335,-7.459869,-5.094892],[0.790846,1.583878,-9.905346,5.620563,4.533108,1.410629,0.094036,7.558266],[8.001270,-2.055456,-4.611289,-7.972424,-3.797352,-5.176295,1.601878,-6.047177],[-8.766628,5.729601,9.808662,5.093306,-6.866421,6.308817,-0.523488,7.030011],[-9.956514,6.871671,6.899219,5.486025,7.645134,5.274379,2.844816,-9.927622],[5.814263,-4.698838,-4.783996,-7.686543,-3.371453,-3.161737,-6.928846,-9.037005],[7.136732,7.443576,6.970883,-8.038708,-6.106669,5.723958,-5.952025,-0.715674],[3.305392,-1.456304,-0.426483,5.599163,-3.310204,-7.667099,6.705303,-2.696537],[-9.623469,-2.038145,-2.512244,1.191291,-9.344643,-3.108752,-4.334738,-6.629664],[-8.670097,4.337924,3.471375,0.321013,-8.074274,-6.210887,6.609018,5.849109],[-0.248141,5.254173,-7.919293,-8.994468,-9.702503,0.566522,2.406545,-0.655164],[-4.183781,-4.076289,-5.082241,-7.667364,4.859689,2.487388,6.945194,9.219530],[-5.021559,-9.077530,8.313540,5.539189,-7.397450,-7.140954,-8.940241,0.096278],[-2.226116,3.584106,2.845286,8.042190,-4.311406,6.084242,7.129053,-2.643919],[-7.313735,1.403855,4.969415,4.431937,1.854676,7.073287,-0.401653,1.080854],[-1.237002,-4.428444,-8.667159,1.150757,-4.372645,-9.864709,2.753470,2.259212],[0.550617,9.461797,4.784931,-7.599889,-0.676229,-2.689472,-1.689873,4.900702],[-4.300484,7.317570,8.671825,-1.420527,6.066362,-9.494727,2.295365,-6.176783],[-9.682961,4.343286,-8.949319,-8.227823,4.636360,-7.288481,-3.625611,-9.652451],[7.485293,5.424813,-4.514496,-6.091027,-3.024585,-6.322603,-0.058269,0.286239],[-3.365653,-2.594154,-9.246013,3.437078,0.815796,-7.347171,4.439751,4.090170],[-0.392213,-8.102086,-2.191988,-0.010153,1.436791,-8.431146,-5.534084,-7.847880],[-8.167235,3.509031,0.495706,-1.720202,-6.970270,7.257142,3.111753,-8.935870],[2.440710,8.483006,5.885492,4.820312,-5.032532,-2.729339,7.960942,-4.561107],[6.948091,-7.891529,-0.372966,-6.588593,6.160736,0.751654,-3.648235,-5.517310],[-7.755375,2.551800,-4.410703,-5.485548,-1.999173,6.971546,3.463522,8.162875],[3.579460,2.912509,-4.344287,7.051686,1.016349,-2.899005,-5.650651,-6.561810],[-3.316782,2.276205,-5.279632,-8.110493,-7.588158,-8.274653,8.199976,9.162330],[8.576910,-8.710641,-3.616156,-0.419498,-0.346195,3.258285,3.576412,3.953786],[6.769056,-9.098060,-0.935193,-2.159601,-0.552436,-6.906597,-1.937019,3.462568],[3.865275,1.281961,8.086189,5.497950,-7.478912,-6.814028,-5.782931,-9.833897],[-0.945622,8.206774,4.110681,-0.889992,-3.872017,7.580518,-3.682550,7.190947],[-1.277703,8.802846,-2.858071,-5.325732,6.251780,-2.191273,-3.162964,3.876307],[-6.047153,-4.203054,-7.105347,2.564289,0.058688,7.170196,9.804160,0.207995],[2.949502,4.693980,-5.100148,-7.322941,2.317974,7.157775,3.639119,-2.001487],[-1.312177,1.812715,1.940553,9.027034,0.395424,-8.280807,2.655288,6.399706],[-9.820753,-3.791489,-0.586647,-9.521587,-1.195392,5.412242,-5.821300,6.669191],[-5.483562,2.885385,1.688554,2.436920,0.229344,-6.877145,0.058254,1.413369],[-1.164050,-8.942780,1.199447,-3.018497,7.313382,9.617092,-0.530022,-3.033902],[-9.453298,-7.598750,-8.248066,-7.966181,-0.333729,3.621179,-8.242783,4.130258],[-9.042011,5.391998,6.363432,9.504242,-3.694517,-5.487728,4.540663,1.482159],[7.999398,-1.179054,3.774524,7.908295,7.410546,-8.750548,-6.850741,-5.771481],[7.634300,-7.066295,-9.343876,6.994824,-0.349403,0.393280,-1.762336,5.642157],[-7.899088,-2.704012,3.540264,4.764872,-6.076826,-9.119411,-4.706887,0.099339],[4.448788,-8.918024,-5.185645,-8.308782,1.222102,-7.636223,-8.302078,0.917843],[6.492015,2.967847,-2.745746,9.435209,-4.458084,0.937683,7.917992,-2.952740],[-6.823098,-7.280387,5.991975,3.785998,-6.962272,-9.003006,-5.239608,5.674482],[7.572768,-6.258082,-9.582555,-6.735037,5.118792,6.883562,6.159404,7.992663],[-1.018340,-1.354105,-3.749048,-1.210934,7.878956,-2.402440,4.803975,-9.245351],[-8.469763,-4.977120,-2.058637,2.113921,-0.072919,-8.567617,-6.003832,0.561009],[0.429412,-7.515884,1.230722,-2.048720,-7.097632,-5.447772,3.129312,-9.577383],[0.425312,-6.693545,-4.276542,-3.212589,-7.340227,-9.761340,-5.163021,2.057253],[3.979800,-8.569986,-1.517251,7.353030,8.958886,-3.827378,-5.804179,-3.149015],[0.309903,-4.465801,-0.202875,-5.917316,5.999408,0.286764,-8.596185,-3.581844],[6.844195,4.969252,7.419544,-1.062274,-5.665126,5.780374,6.405075,5.145201],[-3.434121,-1.981986,-3.425571,5.777058,2.673566,8.519483,3.921803,1.863400],[-5.755012,7.219332,-4.813173,-8.395214,-3.348236,4.194598,3.915073,9.102443],[-0.359921,-0.150127,-4.545533,4.986216,0.539760,-8.727113,-8.469964,0.314404],[-9.362643,-4.590830,-7.478687,7.023231,4.512558,-1.024150,6.740107,-9.219811],[-7.280564,-9.817287,4.638531,-3.899147,0.126086,2.114212,4.241871,-8.294650],[3.026558,-5.261652,-3.126940,5.197862,-0.866102,-7.958393,7.883900,-5.969776],[-8.782297,-6.642150,-9.351822,-4.474023,7.854401,1.939046,-0.557536,-8.572432],[-5.346906,2.030258,1.259718,-0.086159,-3.482318,9.796539,-4.548924,0.586260],[9.683660,-5.451770,5.997793,5.756570,-4.272148,7.858186,-1.895249,7.667768],[-1.969602,7.054822,4.304097,8.970695,3.350417,6.562276,-7.131741,-4.093983],[-1.021771,6.915520,9.773305,2.340387,7.407904,-0.333456,-5.069529,0.224876],[-5.647786,-5.634484,-1.008909,8.292769,5.078762,8.756706,-9.097742,8.201142],[-2.363050,-0.604495,1.770859,-4.001838,-2.680504,-5.201000,-7.099758,3.348023],[2.807033,-8.630376,1.523706,8.590731,-6.959677,5.060141,-9.411044,3.111792],[5.796391,-4.600475,2.343617,-9.122083,9.304001,6.722325,-7.905438,-9.821409],[-3.476505,5.772404,-7.589376,-2.064811,-9.045910,0.093449,-3.145879,3.540268],[-4.618917,-8.467739,-1.847601,5.699085,-2.798363,9.838156,0.804195,-2.089370],[-4.100548,-2.251583,-4.090311,0.085394,-7.608539,0.377018,-7.653114,-4.574306],[-5.299589,-0.588994,6.212834,-0.463890,-7.937205,-1.492066,9.938292,-5.725863],[0.072265,-2.661329,4.615071,-0.887480,5.289457,2.102570,-5.509498,-7.116487],[-3.145942,-6.242571,5.184521,7.619794,-8.506784,2.237946,-0.837222,-6.416145],[-3.785790,7.346992,-7.028759,4.231215,1.646697,9.077430,5.402218,-2.289634],[3.267500,2.669232,5.908369,-9.114005,4.292085,2.128843,2.180107,6.662145],[2.612219,-8.707299,-8.403240,1.130654,-3.382075,6.022192,-3.852365,7.798142],[-4.319644,-6.804135,-9.984470,-4.999335,4.505295,7.672812,8.577483,-1.138830],[-8.620821,-6.644288,2.980704,-6.236030,0.185891,7.711046,-0.315393,9.392337],[6.504541,-0.871238,-0.867911,5.536241,8.478623,8.439766,5.000223,6.580418],[-2.750390,-6.096963,8.405842,9.620286,8.131299,-2.339771,1.086062,-5.917138],[-0.765839,-7.184547,5.991671,-9.343767,3.808332,2.983527,4.625514,-0.922851],[3.946218,7.778605,5.410051,3.216795,9.807851,-4.568166,6.129485,-1.280629],[-3.678244,-2.045105,-0.033554,-5.823431,-0.350572,6.858330,-2.092632,3.432905],[-9.541936,-8.278128,7.264004,-6.159132,0.450625,-4.482378,-8.407841,-9.318109],[5.029125,-5.056617,8.424719,8.377365,5.039300,-7.764588,-3.389802,0.460215],[-3.499572,2.152439,1.681993,0.181470,-7.733805,1.223086,-7.794766,6.862520],[-8.982857,5.780777,-3.991176,-7.802220,4.773786,1.026836,-4.754676,1.167821],[-9.804022,1.376407,-7.459928,6.187415,-1.029197,9.143055,-7.121163,-7.103909],[4.840191,3.473943,2.871625,3.268122,-8.539647,-3.710968,7.493729,3.864667],[-6.359700,0.311513,1.717045,-5.223843,0.146458,-2.853114,-1.020953,-2.774761],[2.395860,-2.033808,4.736302,3.714128,-5.182837,6.973504,0.906540,-3.172354],[1.500177,0.899361,-0.044111,-3.477105,0.914792,7.160968,6.999933,2.029153],[6.636374,7.201147,4.658786,-9.985123,7.837230,1.172454,8.743668,-8.115633],[7.729746,6.037476,2.912258,0.739897,1.506679,1.043057,3.055510,7.444571],[-1.021077,0.434046,5.598046,6.426946,0.490544,-4.213535,-4.069141,4.820476],[-1.201926,1.120657,-4.981052,-3.500947,-5.785803,1.116559,7.864273,-9.084964],[7.494813,4.972967,-8.886656,0.908917,-0.150988,-4.013382,7.034024,-1.453011],[-7.253139,4.614375,5.062202,-3.748029,7.957574,0.867480,-6.102525,-2.623234],[7.579075,4.628852,3.997715,-1.632609,-7.768731,-2.252545,-2.217640,3.119668],[5.948524,-4.742756,-1.485767,-8.395204,-6.111871,-9.993846,4.269381,-0.655462],[4.582454,-2.022852,2.852975,-9.019319,6.988804,9.031546,1.531546,8.491088],[2.035887,2.629378,-6.582468,-9.385276,7.477127,-3.003730,6.794367,-7.525159],[-4.292552,2.748055,6.117260,4.103358,9.429404,-9.661505,8.863820,1.438614],[4.619695,-2.982490,-5.271715,-0.767161,-4.588937,-4.486201,-1.206227,-7.864648],[-8.721228,-3.931726,3.266411,-3.001229,-9.676863,0.761263,-4.082220,-8.761655],[-9.673180,-8.062581,4.253653,-0.386377,8.115931,-0.663616,0.237567,-2.781683],[-8.177599,1.471433,-2.245320,-3.009538,7.466649,-7.442123,-5.633036,8.775234],[7.352476,4.670394,9.404348,-7.191703,4.835438,-4.856769,1.195928,-3.793701],[5.053369,8.446739,9.037552,-6.456019,-3.375490,9.563494,4.388173,8.013763],[-8.265386,-0.304332,-1.351882,-4.254893,5.873024,7.980137,2.191820,-3.027673],[6.630204,-9.436520,-4.424744,2.030211,6.844207,5.407074,-2.193369,0.052217],[-0.257144,-2.462250,0.609579,-8.467300,0.856798,6.559022,9.744624,3.994475],[-3.361316,5.222090,-5.947757,7.836443,2.648620,-8.935046,1.058166,-9.333729],[0.493920,-8.625394,1.994255,9.019125,-7.717926,5.854029,2.852130,0.174274],[-7.641317,-8.033780,7.897015,-8.454697,-2.436684,-6.291160,3.898980,0.465824],[8.530809,6.294808,-9.606208,8.372718,3.140997,-8.569082,3.431970,-4.576947],[8.338774,-4.944000,-0.858339,0.995230,-6.326690,-5.023698,1.630879,-8.438360],[-0.776657,3.064027,2.490727,6.106973,-7.533384,7.626170,4.157091,0.304499],[-6.352755,-1.273638,9.339991,8.598703,4.674495,2.943661,-8.061569,-7.629432],[2.563028,1.854455,-0.534562,0.298482,3.840032,3.292691,9.366314,4.363649],[-5.295950,-2.205707,1.885017,0.613657,-5.939114,3.235310,9.945266,9.354945],[-0.866778,9.399437,2.183705,5.302141,4.593360,-5.859740,3.144356,-0.085189],[8.969222,5.377268,-1.532603,8.267744,6.383128,6.674631,-6.710155,5.659845],[-5.379209,-9.297764,-0.751856,-9.762653,-1.221769,-8.403333,-3.113667,1.687555],[1.288203,-9.162799,-7.658486,-8.913094,9.307317,-5.031127,-1.215346,-9.486415],[-7.945659,9.522611,-3.937118,-8.332735,-8.867140,-6.056134,6.291428,-5.432411],[4.543829,-1.690853,-1.532083,1.903110,1.249304,-1.168485,-8.608745,-2.176727],[9.085440,8.787563,1.235995,-9.246214,-6.183815,-9.307624,-0.886699,-0.492909],[7.399823,8.118910,-7.294254,5.277459,-8.257566,6.764921,-4.996814,8.274942],[7.589329,0.918093,-1.256737,-2.664100,7.856209,-3.282909,9.852661,7.754162],[-4.933821,1.414967,2.331882,-4.251195,-0.334192,-2.052256,5.548153,-1.636840],[-9.888161,0.955257,7.009362,3.371759,-8.141693,-6.018326,9.504910,-2.457838],[3.372521,-3.589303,2.582950,-0.974857,-8.533069,-4.941023,0.382374,4.752439],[6.147183,-0.970555,-0.260599,8.920804,-8.079286,6.007506,5.080146,0.965818],[7.418987,7.065635,-3.554862,-3.773716,1.007583,-9.960627,7.501422,-8.670186],[-5.427885,8.869583,8.453531,3.412663,-5.486338,3.910001,-5.401277,-1.690070],[-0.716472,-6.078595,-2.373512,3.131887,-0.785761,-2.619550,0.692134,-1.105954],[3.974363,8.117884,-3.942054,-2.888461,1.734815,-2.674419,-7.895765,6.240700],[-7.470454,7.944206,-8.261669,-8.908955,-5.411169,-1.711462,-6.434408,4.643823],[-9.754811,-0.951888,7.677611,3.400185,-8.181046,8.682465,6.218800,0.773333],[-3.751510,-4.384708,0.257118,5.245475,1.953502,-9.046183,-9.557852,2.841394],[-7.877525,4.558728,8.172045,-2.279092,-3.391182,-9.622447,-5.129694,-5.819183],[6.819336,0.895265,1.556643,-6.907753,-5.137100,-4.322448,8.238057,4.629283],[1.460424,0.920583,6.669890,-3.299980,4.724452,9.969487,-0.349627,1.662420],[-8.870697,7.236342,7.857984,-9.077885,-8.471265,1.719822,9.306612,3.809992],[2.748851,4.070734,-6.295240,8.843569,-6.355583,0.812144,-3.799485,-8.297862],[5.179323,-3.264649,-5.224623,-9.763409,-5.953812,-1.296638,-8.243178,-7.679129],[-2.075882,-8.053073,-4.858033,4.316110,3.884209,0.041513,8.074879,-3.653951],[1.653771,4.943955,-2.453773,-9.517834,6.569889,-7.172315,-3.326929,-0.839579],[-8.104982,6.850046,-1.268476,4.884354,5.467253,7.715801,8.874874,8.125031],[-5.560669,-9.339983,-3.133640,7.461853,0.438837,4.923499,4.454844,-3.614925],[4.385656,-1.040982,-6.948593,0.759233,-7.415938,-0.676919,-8.237503,0.178850],[3.381797,9.892848,-3.927519,8.973860,-4.794301,-1.218996,-4.039100,1.029084],[-1.839295,6.829482,-9.139605,7.075832,7.498201,-6.122180,5.416297,2.613491],[8.653124,6.775905,4.551615,9.352187,1.844297,2.044791,-7.199246,0.880415],[-5.163032,-0.501302,2.759343,-8.931567,5.867799,8.128682,-9.901106,5.599426],[1.599724,9.478663,-9.230568,4.887858,-9.423801,8.092337,7.500575,-7.087425],[-4.022432,-3.123105,-8.623527,-8.792284,3.497848,-3.559837,-8.300558,5.531329],[-3.549299,1.812497,3.526842,2.850988,5.637921,3.148812,9.956708,8.731577],[-8.770967,-9.771731,-8.483316,-3.554698,-1.021057,1.860150,0.715066,-2.924858],[3.100680,-3.875266,-2.648069,7.980277,-5.550174,1.552203,-2.468151,1.053618],[-0.892967,8.532313,0.200938,8.021569,-3.399926,-8.273016,7.580373,-6.071677],[-2.758773,-8.304671,-5.840340,4.494441,-4.910482,-0.470526,1.860123,4.156118],[7.709758,-7.294513,-7.997849,-5.425023,-9.218587,-1.551979,-8.197945,-8.449689],[5.208127,1.108712,-5.111617,6.379837,3.644136,9.410459,6.861602,8.762093],[1.240047,0.446090,8.262221,2.340688,4.831958,8.473613,-3.419017,-1.053363],[-4.577834,8.458159,-1.373645,5.140359,-6.020032,-8.830643,5.025844,0.848277],[7.577833,3.984956,-2.884740,-9.052275,-2.746188,2.672529,-1.108797,7.100510],[-1.795947,5.721139,0.828573,-5.865050,-6.048375,0.631588,-0.347364,-7.390494],[-5.785371,-7.841464,-8.653080,-4.129737,3.274948,7.633006,2.947324,-9.460509],[6.826084,8.354341,0.385657,6.327058,-7.765663,3.036092,1.315632,5.028513],[5.991571,-6.263794,-9.077783,8.173130,1.490114,5.044522,9.004125,-9.113471],[-1.035638,5.894785,5.095425,8.010257,0.381483,7.541086,-0.470276,-4.571477],[-6.040261,-9.854779,1.609145,-3.048224,-0.598211,-6.791376,-2.749327,0.875007],[-6.914549,-4.875528,8.380516,0.676105,-2.636442,8.374482,7.763940,5.056991],[-8.532679,5.532372,2.917244,-7.008592,3.305262,4.440612,4.405274,-8.458738],[3.094464,-7.006680,-8.731869,2.428112,-1.625535,-8.867455,0.276543,9.392676],[6.602074,7.646011,9.927174,-6.203818,-7.425417,-9.946491,-0.729890,0.959676],[6.659532,-0.579294,-4.101118,-9.764915,-2.109284,-6.398526,-9.262865,-4.920352],[-6.032550,-8.078297,9.323505,6.224515,-3.705178,-4.268136,-0.529705,-9.087689],[2.391147,-1.795810,7.028558,-2.012857,4.386073,6.720034,-2.873140,7.454768],[4.336251,-5.186014,-8.038389,7.407693,2.438322,-6.617760,8.162341,6.454147],[0.241263,-4.595964,7.104149,1.344068,-4.208133,-4.169102,-5.355677,9.317298],[-4.795831,-3.720927,6.461963,4.612614,0.858910,1.562678,1.729109,6.601502],[-3.050764,2.962622,-9.075438,-6.616320,4.074360,-9.241736,-9.879582,3.164209],[0.234359,9.707435,1.065044,-7.882094,-5.553873,-9.939397,-0.258432,0.286662],[3.522200,-3.305539,5.637414,-1.485537,-1.853043,-8.832383,6.892364,7.157232],[0.604563,5.626700,5.644243,-9.492114,2.542570,9.136673,-5.854941,-3.985258],[0.205185,-5.729658,3.429996,2.655230,6.545204,-6.544075,-6.587785,4.277240],[1.907584,-5.645766,-8.074570,-9.658798,3.098319,-2.442047,-9.244934,-4.310192],[6.576704,-5.596079,7.313435,-5.812972,1.017377,7.857292,-2.118358,-6.235894],[-4.974322,8.815987,1.979767,-4.767690,0.103817,-2.239328,-1.985952,-4.722468],[0.290007,-4.807491,-5.292928,9.524140,-4.012278,1.669976,-5.723323,-7.218058],[0.623906,7.102552,1.709190,4.231122,-6.390963,8.513320,-9.848776,5.946849],[-3.748101,9.966779,-1.429073,2.472304,6.464733,-4.023153,-4.893209,-5.747964],[-4.340930,-9.431509,-3.293341,-9.894493,0.439169,8.254567,0.327731,-7.452060],[-9.407446,8.620167,-7.019930,9.501492,7.559524,3.117047,-5.285001,9.610581],[-8.013862,1.237244,-6.454832,8.719182,7.784300,6.997419,4.531347,-6.238467],[6.612852,5.028199,-9.963468,-9.142736,-8.833967,1.427071,7.959905,1.427782],[-9.937172,-5.494698,-2.930376,8.389924,-1.953930,5.331091,-0.784246,-1.330330],[3.898294,0.300340,-1.018663,6.851000,-3.606912,-8.154575,-6.708601,4.684447],[-7.052667,1.126504,8.768433,-3.739268,8.165149,-3.088938,7.622232,-0.672724],[-9.642911,4.702292,0.515254,3.566622,3.848255,7.993389,8.882568,1.174331],[9.237734,-6.701344,2.643170,-7.021607,-2.093546,-6.841816,7.131393,-0.104332],[-6.850414,8.690327,7.883873,3.568116,-7.082120,-3.636889,1.731308,5.928595],[-3.254022,-9.636543,-4.205369,-0.652020,8.518963,-8.662436,2.321147,-9.941216],[-0.589994,2.482519,-0.058960,6.822444,-9.986662,-3.709309,4.117609,-8.107844],[9.855879,5.099029,0.229398,4.134772,-7.997311,-9.524547,-4.970482,8.177731],[-9.256710,-2.883135,-1.686116,1.629778,5.807939,-0.422399,6.266392,-8.947940],[9.889398,-8.313036,-9.581970,0.772173,8.935697,-9.112882,-7.056685,7.038600],[4.072992,4.450343,8.058815,-6.112493,-3.223330,1.815769,2.619417,5.249783],[9.516996,8.013953,8.939672,-5.584797,-1.969800,-9.318356,-7.784362,7.023062],[-2.335948,5.692254,4.160465,-1.398909,2.164963,5.885733,-8.086192,8.996614],[-0.300191,6.586879,-1.048854,7.890562,-0.001446,2.790424,8.894625,-5.622178],[-6.312688,4.420297,0.073740,9.481074,8.201945,9.788814,1.244464,6.443249],[-1.724517,3.421636,-3.355365,5.896321,5.541376,8.451348,-2.731545,-5.789510],[-2.863769,-5.507620,2.070856,-7.864152,6.806969,-7.240049,-1.264471,-3.383107],[-6.815156,6.379058,-9.781010,-2.875177,-5.410813,-1.171121,6.962029,4.192751],[-2.307957,-0.500328,6.983891,-2.544452,-3.990800,-2.756627,-6.631457,6.436161],[-0.377613,6.598022,-4.478841,-5.402622,-1.812918,3.520351,4.280996,8.367694],[-5.600362,-9.245838,-9.159820,-3.877626,3.105766,7.197193,-0.766371,5.754116],[-2.166304,7.802113,-8.405720,4.342911,6.157109,-6.307333,2.994777,-8.963756],[8.544441,7.402000,-3.630008,5.344871,-7.230050,7.436705,2.560356,-3.784559],[-9.944147,-6.894668,3.427549,4.338874,-5.330996,-9.469231,4.479362,-1.217251],[8.132911,-0.380550,0.293063,6.984314,-3.938893,-6.961837,4.628417,1.974445],[8.784404,-5.824096,2.413908,7.207654,-3.035085,0.250097,-5.347051,-8.696313],[-9.580719,0.233356,-7.508886,4.246150,-9.545137,4.113121,-4.170527,0.594134],[-7.372322,4.175059,6.877857,-5.210489,-8.869702,5.580969,8.241526,-2.827252],[-0.244922,8.313356,-6.896827,6.121812,5.898760,0.103311,-4.238535,3.183070],[-7.987660,-0.875280,4.398716,7.524112,8.494930,-9.924495,2.479725,-7.954425],[1.009123,-8.633392,-0.615784,-0.439864,-5.357065,-9.509163,-6.877276,-1.725508],[-8.621754,-1.718106,8.996962,2.996629,-3.791077,3.440647,-2.004140,9.325391],[4.236232,0.161910,7.140914,1.743655,0.110116,-6.601680,2.806808,0.968135],[-1.606195,7.862922,3.968451,-5.524261,8.768130,5.001279,2.467381,6.195388],[9.082828,-9.485345,-3.457031,-0.356287,3.717976,9.309626,6.029096,-0.834112],[-7.470524,3.845777,-6.796417,4.952908,0.139816,7.815024,1.344731,-3.196572],[-9.585832,4.882743,-3.815781,-8.891732,2.229490,0.676626,-5.535484,-4.525544],[5.012072,4.952993,8.000706,7.696449,7.548188,0.201622,0.978518,8.944525],[-1.618687,-4.217332,6.691249,2.906154,-1.010376,4.247274,-9.668460,0.232390],[-1.342631,-5.247353,6.945993,-5.360759,-6.628499,5.790052,9.452358,9.552518],[-6.352055,9.513531,9.673881,-3.154890,2.351732,-0.532544,7.318300,3.128922],[-5.864756,1.958781,-8.904125,6.690302,5.775677,-4.897984,0.892319,-6.761560],[-7.612312,1.594141,-1.247208,2.840547,-4.707479,-9.903665,-0.458007,7.972854],[3.352053,-5.728335,-9.644710,-0.869708,4.490862,9.050924,9.186138,-3.273488],[5.253878,4.372337,9.313885,9.330833,-2.633272,6.027186,1.657993,-1.695144],[6.447291,-2.206224,-0.704132,1.667866,-0.187196,-5.595493,-9.384511,8.455494],[7.858985,-0.787410,5.998964,-7.915017,2.515151,-5.053380,-0.579728,0.911653],[-6.286922,7.113972,-2.894881,-7.355143,0.152937,-4.261023,9.833136,1.073220],[-3.675709,7.199192,3.822843,-0.919613,5.554172,-0.813040,0.552636,9.525611],[6.635100,-1.656585,6.049280,-8.210624,5.982390,-1.486829,-5.684950,0.804332],[4.916378,3.939797,-5.192970,7.389839,-8.088522,9.574587,3.627345,6.571074],[-0.374776,9.169526,-9.931857,-9.762919,-7.222396,-9.990408,5.165233,-7.236303],[-9.073139,3.604076,5.013625,-9.813261,-7.855684,7.292398,-1.642390,3.789499],[-7.491521,-4.173455,-5.600505,-0.808396,-6.793242,-2.351776,4.460590,-8.563390],[-4.047215,-2.088893,8.590497,2.388380,2.099076,0.084863,-2.842303,-5.093348],[7.162456,5.772002,8.754837,8.045543,9.110286,7.544218,-4.108714,-6.980809],[-9.833494,-3.094314,-7.994612,2.363540,-7.913506,6.980806,0.855110,3.304905],[0.522446,6.420136,-4.961485,-5.173779,-6.870644,-3.341065,6.097760,5.121114],[-8.312145,2.082387,6.296064,-3.706311,-7.894825,-0.847214,3.398247,-4.990551],[2.997205,2.141214,-2.367895,8.994731,-5.660442,7.490425,-2.874915,0.620427],[-6.166385,3.193176,4.446917,9.484422,-2.164060,-0.131362,4.226813,-8.138382],[-6.169150,3.256246,5.056213,4.480793,-8.721161,2.857584,3.476177,2.891347],[-9.784119,1.155145,-4.234117,6.472795,3.152018,-5.956132,-6.536992,6.423017],[5.119007,-7.450443,6.275531,-0.357276,-6.822563,-9.465186,-5.038027,-1.391097],[8.691678,-8.890069,-9.088065,-9.152157,5.963007,2.153799,1.186828,-5.713255],[3.818396,3.046625,-1.723883,-6.665760,1.143865,-5.071757,3.611449,-0.176205],[1.112608,-8.331377,-9.037636,1.311334,-7.940498,-0.901091,2.196529,-5.803248],[7.676952,6.407983,8.700110,-2.495353,-9.888074,-4.577026,4.676954,-7.644065],[9.891748,1.482233,7.113029,-5.669104,4.343760,7.358703,0.239114,8.076106],[9.319386,5.875128,-0.174835,-4.565247,-2.907312,-9.167690,6.071572,-9.903625],[-9.268830,7.004265,-8.309206,3.454661,-9.550572,-9.685047,-8.511124,-2.834949],[-5.146791,-5.832323,5.275664,-1.103772,5.722899,-8.085696,5.869261,4.243171],[-7.160654,-7.964301,-6.611821,-5.744490,-8.630406,4.588453,-6.898297,5.204038],[7.492094,5.537633,-6.555485,-3.864442,5.649010,-6.108059,-3.592297,-4.311092],[-5.210627,2.457546,-4.786425,0.663161,3.484078,7.812322,-9.768922,-4.122192],[-4.270325,0.969428,7.146838,-8.532919,-5.896947,-3.241844,-4.787723,0.546296],[7.029054,-8.248310,-5.778419,-6.718484,-6.826181,4.590721,-3.806267,-9.672738],[0.003324,6.156808,4.320692,7.615638,5.820181,-0.645617,-3.894909,-8.720778],[1.839093,1.448007,2.054048,0.081811,3.450228,-0.078806,-4.674876,-3.487644],[-7.049646,0.544018,2.259576,6.499322,-7.589774,4.512195,5.101307,-0.992310],[-0.085780,-0.264828,9.220907,9.036455,-0.715227,2.612947,-9.329933,5.768101],[0.694500,-4.896868,1.071113,4.686590,-4.307386,1.211699,1.806607,-7.173662],[0.561417,1.855321,-3.415787,-0.198122,-9.054335,0.372385,1.009625,-2.914536],[9.585049,-1.815293,-0.595454,-8.257194,-5.834895,1.736186,5.764648,4.408813],[-0.210167,-3.327308,9.923705,-7.340666,-4.480432,-3.995594,-2.609183,-5.194263],[7.820108,-2.911955,1.166472,-7.207010,-1.427088,9.503958,2.089202,8.001121],[9.213477,-6.696673,-1.401487,-3.682599,5.314577,-4.048640,0.574409,4.447499],[3.275060,2.605042,8.123807,-6.406039,3.268047,5.455160,-8.404351,-7.192856],[-3.496954,-2.686182,0.462731,9.983924,8.714891,-4.311391,6.716680,-9.498698],[-0.938573,3.137353,5.943978,5.474140,1.367755,-8.931679,5.715266,4.440500],[9.982358,-5.389791,-8.245946,1.364304,-4.960897,5.081615,-2.742728,-1.977845],[2.775150,-8.519097,-2.932616,9.433018,-5.119276,9.957683,-5.540968,-1.527434],[7.822240,4.549630,-4.421337,2.270517,-9.067448,-1.284885,-0.466101,0.639266],[-9.294072,7.448603,-2.616355,-6.369020,-6.253679,-0.570805,-5.025645,-7.603077],[-2.158608,-5.383406,7.761546,0.769793,-6.573461,-8.205979,-8.789236,-1.574777],[7.585292,6.079403,-9.085060,-7.943807,-7.475682,3.926272,4.294218,-0.692084],[4.358782,8.577352,-9.281675,7.722398,-0.170951,-8.766928,3.668705,-9.174673],[-7.710887,-2.674702,5.126654,1.437852,-2.131913,9.195758,-4.444719,8.965202],[-3.023981,-9.331207,9.745047,6.188497,5.873084,-3.127251,-2.620361,7.655696],[6.833430,1.198066,9.342483,-3.666629,8.650981,9.496172,6.251176,-8.719743],[2.685308,-1.490712,-3.454437,8.874995,4.845177,-4.210412,-4.415537,-9.658592],[-0.017071,-4.994273,-9.300272,1.132877,-5.272604,-5.892786,0.411618,6.658202],[3.147587,8.259462,1.384273,-6.641882,-1.418600,-9.411647,-9.315819,-9.733318],[-3.431112,-7.814052,6.838913,0.049537,9.949428,9.667893,-7.072045,8.175602],[5.915638,9.133441,0.010823,5.214025,-0.311110,-0.649064,9.962225,9.351712],[-8.982342,-4.910897,2.638032,9.678761,6.887773,9.372146,-7.719779,-3.173143],[9.454577,-3.317718,1.089914,5.513664,-3.269824,-3.786703,-7.604085,9.197484],[-7.792828,3.170073,1.434181,-5.131590,3.871461,-0.851707,-4.231728,7.130427],[-6.051647,9.085888,-4.294629,-1.645652,-7.759533,-9.209207,-9.127289,4.024293],[9.364750,9.275902,-4.424986,-7.260784,1.056100,1.739485,8.916726,-6.739496],[-3.924955,1.910416,-7.106396,9.297415,-8.523305,5.473986,-6.716860,4.559188],[4.913613,-6.412093,-2.998030,-9.316090,-0.922082,-7.610533,-2.190931,4.769956],[-1.756792,5.216170,-3.684642,5.691595,-9.279083,-9.626290,-2.474988,3.332055],[-4.039724,0.846597,-3.168564,-4.749737,6.357176,-0.517985,4.258174,-2.778429],[-3.487182,-9.276554,2.060781,0.924685,3.826743,-6.335714,-4.224606,7.402599],[2.494859,6.909295,-9.396112,-2.346231,-0.349079,-1.205687,6.304396,7.710004],[-0.976623,-1.378630,-0.224548,-2.280975,4.625941,5.674832,-9.849562,-3.660196],[6.572160,9.654216,-3.927681,8.982165,-4.655837,-7.467013,-3.591155,3.530601],[-2.452476,-9.345724,4.389936,-1.966888,7.708144,-1.686770,-7.192232,-5.069771],[1.484681,-7.956324,1.601309,-7.007822,1.530535,0.588202,2.109107,-8.176705],[7.627639,-0.453653,9.719836,7.983917,-8.375144,-0.569723,1.801205,-3.047194],[-4.847939,-0.777093,-4.357446,4.899026,1.258459,2.668570,5.141641,-1.481796],[2.411096,-1.085779,2.172574,4.342775,7.726071,3.767965,-3.972182,4.977458],[-9.461986,5.300513,4.057589,-2.099180,3.253077,6.973853,4.842839,9.711262],[-0.080798,-1.702499,-4.642817,4.642468,4.862583,-1.454427,-8.691009,1.641618],[3.176964,7.318716,2.567952,2.842740,4.156240,-9.843894,6.820245,2.532947],[9.504082,5.860178,-4.834417,1.669366,7.429167,7.010535,-0.876221,-4.524841],[9.881959,-3.477919,0.969060,-0.742980,-0.546721,-5.261302,-8.804483,5.893411],[3.299006,6.467822,1.231107,0.094363,-0.533059,-0.698191,0.102579,-4.237568],[-4.145851,-0.882060,1.120602,-9.021797,9.578284,7.175126,8.060679,7.802966],[0.396156,-8.502321,5.595400,-0.648323,-7.929006,-9.376599,8.752860,4.107173],[5.804290,-6.688602,-2.675300,-2.166440,7.662608,2.635920,-2.452535,1.736245],[-5.332368,-6.378811,8.949694,2.732557,5.413811,-9.109359,6.805803,-8.168180],[8.598572,2.237950,-0.449965,1.376147,1.154253,-8.047117,1.912922,3.496369],[5.709046,1.912054,-6.751941,-4.210004,7.037500,4.975442,-3.760221,3.976377],[-3.275743,0.228762,9.565674,-8.696365,-9.412721,-8.766322,-5.211981,0.956178],[-1.377317,-4.171367,2.146270,-0.301516,7.966488,7.186316,-5.525325,6.458925],[5.490432,0.022686,4.268466,5.148569,-9.134503,2.774329,-7.309028,-5.749291],[-9.750473,4.659248,7.866731,-3.530870,1.299842,4.613933,-8.807939,-6.319837],[3.841965,-7.157004,0.421950,-0.887389,-0.533916,-0.305985,-2.479772,0.932395],[-4.778859,2.436201,-1.803912,-2.014198,6.595335,3.862093,2.412301,-8.958576],[9.489726,7.179567,-3.201455,-3.800286,-8.851670,9.705002,2.663977,0.008433],[-6.814647,-4.017027,-8.320030,-2.251475,-9.928208,9.261606,-2.040093,-6.193257],[3.176781,-9.636002,-8.209645,-4.024739,-2.176736,0.469401,-1.700542,4.020980],[2.293613,3.422985,-7.465695,-5.308574,-5.083004,-5.550348,3.019350,-8.977842],[6.160674,-5.956738,-5.851926,-8.751352,7.293829,-9.074691,-4.253193,-1.487985],[6.922803,8.762499,5.543668,-5.972945,2.631859,-9.041571,-9.542732,0.003878],[-2.848842,6.574454,-1.388443,1.526818,4.356763,8.999373,1.620098,-4.153774],[-6.662772,-2.009274,3.848432,4.077273,-6.395317,4.334345,-3.814683,-6.783356],[-8.902471,4.119272,4.109493,-0.644997,5.602758,-0.369924,6.934801,1.085389],[-2.809918,-6.062815,1.783708,-3.848934,9.639558,-3.053256,7.887498,-3.268403],[-1.616350,-2.914083,-0.017429,-1.518850,7.353224,-8.873294,3.763952,-2.247531],[-7.084931,0.586809,-5.806749,7.553232,7.106467,0.865248,-2.166962,1.414885],[-6.582473,-2.620072,-4.473730,-1.009673,9.379394,9.655777,-7.909100,-5.311023],[-2.222371,-0.065758,1.340365,-4.221465,6.134657,6.152784,-5.049488,-1.137240],[7.176085,4.513278,-6.754113,3.485385,9.533712,-2.409765,-2.597203,-7.450783],[6.073969,4.364666,-9.917923,4.036659,6.275987,5.854728,2.340105,-1.071325],[-4.181615,7.332206,3.334716,-4.689558,7.538794,4.373671,8.494870,-7.605685],[-4.906026,0.702938,2.004423,6.429447,-8.912139,-8.785743,-7.966639,-5.174398],[8.782014,3.075543,-4.176926,2.563229,6.725299,4.313291,-1.516884,1.275127],[5.240339,7.903073,2.504373,4.801568,9.254251,-8.083743,0.227997,-4.917804],[-9.234321,4.374580,2.573368,-2.443808,1.519137,1.074844,8.732885,9.624550],[5.252570,3.513054,8.269291,-8.969619,2.029497,-6.102442,5.039278,4.061124],[6.112080,-6.776828,2.123019,0.782945,-6.864473,-1.336569,8.358566,-5.142532],[-4.712693,3.200383,7.111806,-0.666767,-6.639500,3.431683,9.310832,2.238915],[5.981866,6.612665,-0.424536,-5.496878,6.908112,-8.400972,-8.906571,9.296864],[7.815320,-8.371658,5.963127,0.189901,2.343738,7.409544,4.807598,9.146297],[2.535234,1.280835,6.846034,-9.962938,-4.643239,7.710425,-5.755003,8.529165],[-3.333534,-1.948722,-2.334554,9.015136,-3.433793,-9.220560,-5.376307,-0.733948]], dtype = "float64")#candidate|5338|(480, 8)|const|float64
bop_5339 = relay.logical_and(uop_5329.astype('bool'), const_5338.astype('bool')) # shape=(480, 8)
func_1242_call = mod.get_global_var('func_1242')
func_1245_call = mutated_mod.get_global_var('func_1245')
var_5349 = relay.var("var_5349", dtype = "float64", shape = (945,))#candidate|5349|(945,)|var|float64
call_5348 = relay.TupleGetItem(func_1242_call(relay.reshape(var_5349.astype('float64'), [9, 15, 7])), 1)
call_5350 = relay.TupleGetItem(func_1245_call(relay.reshape(var_5349.astype('float64'), [9, 15, 7])), 1)
func_4517_call = mod.get_global_var('func_4517')
func_4520_call = mutated_mod.get_global_var('func_4520')
call_5357 = relay.TupleGetItem(func_4517_call(relay.reshape(call_5317.astype('int16'), [12, 5, 8]), relay.reshape(call_5317.astype('int16'), [12, 5, 8]), ), 0)
call_5358 = relay.TupleGetItem(func_4520_call(relay.reshape(call_5317.astype('int16'), [12, 5, 8]), relay.reshape(call_5317.astype('int16'), [12, 5, 8]), ), 0)
output = relay.Tuple([call_5309,call_5317,bop_5339,call_5348,var_5349,call_5357,])
output2 = relay.Tuple([call_5310,call_5319,bop_5339,call_5350,var_5349,call_5358,])
func_5362 = relay.Function([var_5318,var_5349,], output)
mod['func_5362'] = func_5362
mod = relay.transform.InferType()(mod)
mutated_mod['func_5362'] = func_5362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5362_call = mutated_mod.get_global_var('func_5362')
var_5364 = relay.var("var_5364", dtype = "int16", shape = (480, 1))#candidate|5364|(480, 1)|var|int16
var_5365 = relay.var("var_5365", dtype = "float64", shape = (945,))#candidate|5365|(945,)|var|float64
call_5363 = func_5362_call(var_5364,var_5365,)
output = call_5363
func_5366 = relay.Function([var_5364,var_5365,], output)
mutated_mod['func_5366'] = func_5366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4949_call = mod.get_global_var('func_4949')
func_4950_call = mutated_mod.get_global_var('func_4950')
call_5394 = relay.TupleGetItem(func_4949_call(), 0)
call_5395 = relay.TupleGetItem(func_4950_call(), 0)
func_4291_call = mod.get_global_var('func_4291')
func_4293_call = mutated_mod.get_global_var('func_4293')
call_5401 = relay.TupleGetItem(func_4291_call(relay.reshape(call_5394.astype('float32'), [7, 7, 4])), 0)
call_5402 = relay.TupleGetItem(func_4293_call(relay.reshape(call_5394.astype('float32'), [7, 7, 4])), 0)
func_782_call = mod.get_global_var('func_782')
func_789_call = mutated_mod.get_global_var('func_789')
var_5416 = relay.var("var_5416", dtype = "uint8", shape = (40, 2))#candidate|5416|(40, 2)|var|uint8
var_5417 = relay.var("var_5417", dtype = "uint16", shape = (660,))#candidate|5417|(660,)|var|uint16
var_5418 = relay.var("var_5418", dtype = "int8", shape = ())#candidate|5418|()|var|int8
const_5419 = relay.const([[-10,-1],[1,-7],[4,-3],[-8,9],[6,-2],[9,3],[-10,8],[2,-10],[-8,7],[10,4],[-5,-6],[-7,6],[3,2],[-7,-6],[1,2],[7,8],[-2,3],[-10,-6],[3,9],[-7,5],[-10,-3],[-1,-5],[-2,8],[7,-7],[2,3],[-8,-4],[-10,-2],[9,-6],[4,7],[6,-10],[6,-2],[-5,-6],[-8,6],[7,-6],[6,-4],[5,3],[7,9],[-9,-6],[8,-8],[4,1],[-2,-5],[-10,5],[-8,10],[-9,7],[10,-1],[-4,3],[-4,8],[-4,9],[7,-6],[6,-2],[2,-2],[-2,9],[4,10],[-9,-1],[-6,3],[7,8],[10,8],[7,2],[9,-2],[-2,4],[3,3],[8,6],[-2,-4],[3,-2],[5,-8],[-1,4],[6,-2],[7,6],[9,3],[-5,9],[-10,-8],[-4,7],[-2,4],[7,3],[3,4],[1,-3],[1,-6],[-5,-6],[8,9],[6,-3],[-10,4],[-4,3],[-2,1],[-8,4]], dtype = "int8")#candidate|5419|(84, 2)|const|int8
call_5415 = relay.TupleGetItem(func_782_call(relay.reshape(var_5416.astype('uint8'), [4, 4, 5]), relay.reshape(var_5416.astype('uint8'), [4, 4, 5]), relay.reshape(var_5417.astype('uint16'), [660,]), relay.reshape(var_5418.astype('int8'), []), relay.reshape(const_5419.astype('int8'), [168,]), ), 8)
call_5420 = relay.TupleGetItem(func_789_call(relay.reshape(var_5416.astype('uint8'), [4, 4, 5]), relay.reshape(var_5416.astype('uint8'), [4, 4, 5]), relay.reshape(var_5417.astype('uint16'), [660,]), relay.reshape(var_5418.astype('int8'), []), relay.reshape(const_5419.astype('int8'), [168,]), ), 8)
func_2656_call = mod.get_global_var('func_2656')
func_2657_call = mutated_mod.get_global_var('func_2657')
call_5425 = func_2656_call()
call_5426 = func_2656_call()
output = relay.Tuple([call_5394,call_5401,call_5415,var_5416,var_5417,var_5418,const_5419,call_5425,])
output2 = relay.Tuple([call_5395,call_5402,call_5420,var_5416,var_5417,var_5418,const_5419,call_5426,])
func_5428 = relay.Function([var_5416,var_5417,var_5418,], output)
mod['func_5428'] = func_5428
mod = relay.transform.InferType()(mod)
var_5429 = relay.var("var_5429", dtype = "uint8", shape = (40, 2))#candidate|5429|(40, 2)|var|uint8
var_5430 = relay.var("var_5430", dtype = "uint16", shape = (660,))#candidate|5430|(660,)|var|uint16
var_5431 = relay.var("var_5431", dtype = "int8", shape = ())#candidate|5431|()|var|int8
output = func_5428(var_5429,var_5430,var_5431,)
func_5432 = relay.Function([var_5429,var_5430,var_5431,], output)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4108_call = mod.get_global_var('func_4108')
func_4110_call = mutated_mod.get_global_var('func_4110')
call_5474 = relay.TupleGetItem(func_4108_call(), 1)
call_5475 = relay.TupleGetItem(func_4110_call(), 1)
func_4434_call = mod.get_global_var('func_4434')
func_4435_call = mutated_mod.get_global_var('func_4435')
call_5487 = relay.TupleGetItem(func_4434_call(), 0)
call_5488 = relay.TupleGetItem(func_4435_call(), 0)
uop_5489 = relay.sinh(call_5474.astype('float32')) # shape=(7, 7, 4)
uop_5491 = relay.sinh(call_5475.astype('float32')) # shape=(7, 7, 4)
output = relay.Tuple([call_5487,uop_5489,])
output2 = relay.Tuple([call_5488,uop_5491,])
func_5498 = relay.Function([], output)
mod['func_5498'] = func_5498
mod = relay.transform.InferType()(mod)
output = func_5498()
func_5499 = relay.Function([], output)
mutated_mod['func_5499'] = func_5499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_5552 = relay.TupleGetItem(func_2894_call(), 2)
call_5553 = relay.TupleGetItem(func_2896_call(), 2)
func_590_call = mod.get_global_var('func_590')
func_592_call = mutated_mod.get_global_var('func_592')
var_5555 = relay.var("var_5555", dtype = "float64", shape = (546,))#candidate|5555|(546,)|var|float64
call_5554 = relay.TupleGetItem(func_590_call(relay.reshape(var_5555.astype('float64'), [13, 7, 6])), 0)
call_5556 = relay.TupleGetItem(func_592_call(relay.reshape(var_5555.astype('float64'), [13, 7, 6])), 0)
output = relay.Tuple([call_5552,call_5554,var_5555,])
output2 = relay.Tuple([call_5553,call_5556,var_5555,])
func_5557 = relay.Function([var_5555,], output)
mod['func_5557'] = func_5557
mod = relay.transform.InferType()(mod)
mutated_mod['func_5557'] = func_5557
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5558 = relay.var("var_5558", dtype = "float64", shape = (546,))#candidate|5558|(546,)|var|float64
func_5557_call = mutated_mod.get_global_var('func_5557')
call_5559 = func_5557_call(var_5558)
output = call_5559
func_5560 = relay.Function([var_5558], output)
mutated_mod['func_5560'] = func_5560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4749_call = mod.get_global_var('func_4749')
func_4751_call = mutated_mod.get_global_var('func_4751')
call_5577 = relay.TupleGetItem(func_4749_call(), 0)
call_5578 = relay.TupleGetItem(func_4751_call(), 0)
const_5579 = relay.const([[[1.075671,5.076082,3.465345,-2.138370],[-6.721266,-4.684739,-8.079242,-7.499760],[-6.789357,8.143908,0.635251,0.867334],[9.668184,6.880745,-6.435776,4.616954],[-1.675431,-8.461075,7.354859,6.395426],[-2.378808,-3.415721,-3.760870,-2.301363],[-4.640728,-0.039571,7.196591,-9.667326]],[[3.233984,-7.428254,-5.595999,8.727794],[-3.161941,4.666281,-2.542114,0.034315],[-8.770508,3.593064,-9.019619,9.303349],[6.634527,0.041511,-2.944675,-7.864503],[0.973334,3.972415,-6.523038,3.122399],[5.080256,-4.671872,8.265947,-9.613345],[2.913818,8.248223,1.229868,-1.698856]],[[-0.664107,9.563318,6.410312,-3.083821],[-6.701654,4.370796,3.344234,-0.294916],[0.859936,-3.299014,-7.358727,-9.358453],[6.893466,-9.914211,-6.084464,7.595767],[-7.364074,2.883959,-8.681382,-9.249618],[-8.440162,-7.475557,-9.137204,-3.895446],[6.068917,6.438661,5.792385,-3.603044]],[[7.535945,3.484322,2.722907,-7.788342],[-2.614034,-6.690085,7.294841,6.327541],[-4.335672,8.091937,-6.883118,-8.140300],[8.023833,-4.275973,6.936689,0.581123],[6.623658,-0.069884,3.275507,-7.119194],[2.947464,5.810890,7.334124,-8.341758],[-0.768786,0.776523,7.525937,-2.293277]],[[5.364699,1.825044,6.349747,8.182501],[2.813431,-4.251667,-5.982266,-2.592178],[8.810286,-6.224490,0.095629,-6.014854],[8.690843,-0.443979,7.620858,4.114150],[1.814540,2.593915,8.947458,5.417387],[-7.048140,7.716829,-9.735830,-2.239829],[3.194846,3.670422,9.771981,-9.922797]],[[8.379931,3.085965,-7.737359,5.810626],[3.072965,-7.264409,2.750789,-5.668173],[3.127316,-9.253519,7.715626,0.200616],[6.655260,2.357651,-2.875259,2.093682],[3.804915,-4.300771,9.248240,7.672171],[-0.264241,5.473605,-3.175234,-2.633274],[-4.892317,1.218771,4.394314,-4.207151]],[[8.410868,-4.723526,-6.321608,7.378867],[-2.886766,0.081622,0.091690,4.908577],[-1.632206,9.374384,-5.402483,7.337366],[-0.572756,-0.020352,3.461724,5.327814],[8.140439,3.002574,5.311301,3.700513],[-6.096039,-7.147041,6.343481,-6.241717],[-4.616276,-6.884086,0.181372,2.959036]]], dtype = "float32")#candidate|5579|(7, 7, 4)|const|float32
bop_5580 = relay.logical_xor(call_5577.astype('int16'), relay.reshape(const_5579.astype('int16'), relay.shape_of(call_5577))) # shape=(7, 7, 4)
bop_5583 = relay.logical_xor(call_5578.astype('int16'), relay.reshape(const_5579.astype('int16'), relay.shape_of(call_5578))) # shape=(7, 7, 4)
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_5599 = func_2630_call()
call_5600 = func_2630_call()
output = relay.Tuple([bop_5580,call_5599,])
output2 = relay.Tuple([bop_5583,call_5600,])
func_5603 = relay.Function([], output)
mod['func_5603'] = func_5603
mod = relay.transform.InferType()(mod)
mutated_mod['func_5603'] = func_5603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5603_call = mutated_mod.get_global_var('func_5603')
call_5604 = func_5603_call()
output = call_5604
func_5605 = relay.Function([], output)
mutated_mod['func_5605'] = func_5605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4108_call = mod.get_global_var('func_4108')
func_4110_call = mutated_mod.get_global_var('func_4110')
call_5632 = relay.TupleGetItem(func_4108_call(), 0)
call_5633 = relay.TupleGetItem(func_4110_call(), 0)
var_5637 = relay.var("var_5637", dtype = "float64", shape = (12, 2, 4))#candidate|5637|(12, 2, 4)|var|float64
bop_5638 = relay.not_equal(call_5632.astype('bool'), relay.reshape(var_5637.astype('bool'), relay.shape_of(call_5632))) # shape=(12, 2, 4)
bop_5641 = relay.not_equal(call_5633.astype('bool'), relay.reshape(var_5637.astype('bool'), relay.shape_of(call_5633))) # shape=(12, 2, 4)
output = relay.Tuple([bop_5638,])
output2 = relay.Tuple([bop_5641,])
func_5646 = relay.Function([var_5637,], output)
mod['func_5646'] = func_5646
mod = relay.transform.InferType()(mod)
mutated_mod['func_5646'] = func_5646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5647 = relay.var("var_5647", dtype = "float64", shape = (12, 2, 4))#candidate|5647|(12, 2, 4)|var|float64
func_5646_call = mutated_mod.get_global_var('func_5646')
call_5648 = func_5646_call(var_5647)
output = call_5648
func_5649 = relay.Function([var_5647], output)
mutated_mod['func_5649'] = func_5649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3851_call = mod.get_global_var('func_3851')
func_3853_call = mutated_mod.get_global_var('func_3853')
call_5722 = relay.TupleGetItem(func_3851_call(), 0)
call_5723 = relay.TupleGetItem(func_3853_call(), 0)
output = relay.Tuple([call_5722,])
output2 = relay.Tuple([call_5723,])
func_5728 = relay.Function([], output)
mod['func_5728'] = func_5728
mod = relay.transform.InferType()(mod)
output = func_5728()
func_5729 = relay.Function([], output)
mutated_mod['func_5729'] = func_5729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5603_call = mod.get_global_var('func_5603')
func_5605_call = mutated_mod.get_global_var('func_5605')
call_5745 = relay.TupleGetItem(func_5603_call(), 0)
call_5746 = relay.TupleGetItem(func_5605_call(), 0)
output = call_5745
output2 = call_5746
func_5756 = relay.Function([], output)
mod['func_5756'] = func_5756
mod = relay.transform.InferType()(mod)
output = func_5756()
func_5757 = relay.Function([], output)
mutated_mod['func_5757'] = func_5757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3676_call = mod.get_global_var('func_3676')
func_3678_call = mutated_mod.get_global_var('func_3678')
call_5766 = relay.TupleGetItem(func_3676_call(), 0)
call_5767 = relay.TupleGetItem(func_3678_call(), 0)
func_5362_call = mod.get_global_var('func_5362')
func_5366_call = mutated_mod.get_global_var('func_5366')
const_5785 = relay.const([-6,6,5,-5,1,9,-10,5,3,3,1,-1,-10,-10,4,-6,-6,-6,-2,-2,-10,-2,2,-2,-1,4,-6,10,-9,1,-6,4,1,-3,-1,-8,9,-3,-9,5,-9,-4,6,-3,6,8,2,4,-2,-8,3,7,-6,-3,3,-9,-9,-9,8,-9,7,6,1,-3,-8,-9,-7,-3,5,9,5,2,10,-8,3,-3,-7,2,-9,-3,7,10,-8,-8,10,-3,-7,1,-6,8,-8,-2,1,5,10,-9,-1,3,-1,-2,-10,5,10,7,-7,-5,-7,10,-2,8,-2,-1,5,10,-4,-8,-9,-4,-1,3,7,10,7,-1,-2,1,7,5,-5,-9,-9,-5,-10,-7,1,6,10,-1,-6,5,9,-2,-7,10,3,-3,4,3,9,4,10,8,-6,4,-9,-9,-7,7,-7,-8,-4,-7,8,-4,-9,-7,-8,8,1,-7,-3,9,7,-5,-10,-9,1,3,-5,6,-5,5,-5,-1,-5,7,5,9,1,-10,-7,5,6,-9,7,7,8,7,-2,-2,-7,8,-6,-7,1,7,-10,-7,-10,-7,2,9,5,7,-6,-8,-1,-8,3,1,-5,-3,-1,-1,-7,-8,-2,2,6,-7,-10,9,1,-8,3,2,10,-4,8,-1,-2,5,-9,3,8,-8,-7,10,4,-4,-9,-6,-2,9,-4,6,-1,-3,-7,4,8,-4,10,-5,-3,-3,5,-1,-10,8,1,1,4,10,2,-7,-9,7,6,-4,-1,1,-6,3,-1,1,3,-3,8,8,-9,-2,7,-10,3,2,-2,-8,-3,6,1,7,-9,-3,-6,-9,-6,-7,-2,6,8,-9,-10,1,-9,-1,-4,6,-1,-2,-10,5,-4,10,7,1,-3,8,-9,-9,5,1,-8,-3,-6,9,-6,3,-7,5,-9,1,-9,7,9,-6,-8,2,-4,7,1,-5,2,-6,10,-5,8,-3,7,2,-8,8,5,-1,8,10,-6,4,-4,-9,2,5,7,4,10,10,6,5,2,2,-6,7,9,1,4,8,-1,-5,-1,-6,6,-10,-6,6,2,5,-2,1,-8,3,-2,5,3,6,8,6,8,6,10,-9,2,10,10,3,4,7,6,1,-3,-3,9,-5,-5,8,-7,-8,2,-2,1,-8,1,1,9,-7,1,3,9,-6,3,10,4,8,9,-8,-5,-3,4,-8,-10,-7,-6,2,2,-10,5,-4,1,4,-4,-8,1,-9,-9,-1,-1,9,-9,-3,-2,-6,4,-3,6,4,-10,-10,4,-7,4,2], dtype = "int16")#candidate|5785|(480,)|const|int16
var_5786 = relay.var("var_5786", dtype = "float64", shape = (15, 63))#candidate|5786|(15, 63)|var|float64
call_5784 = relay.TupleGetItem(func_5362_call(relay.reshape(const_5785.astype('int16'), [480, 1]), relay.reshape(var_5786.astype('float64'), [945,]), ), 2)
call_5787 = relay.TupleGetItem(func_5366_call(relay.reshape(const_5785.astype('int16'), [480, 1]), relay.reshape(var_5786.astype('float64'), [945,]), ), 2)
output = relay.Tuple([call_5766,call_5784,const_5785,var_5786,])
output2 = relay.Tuple([call_5767,call_5787,const_5785,var_5786,])
func_5802 = relay.Function([var_5786,], output)
mod['func_5802'] = func_5802
mod = relay.transform.InferType()(mod)
var_5803 = relay.var("var_5803", dtype = "float64", shape = (15, 63))#candidate|5803|(15, 63)|var|float64
output = func_5802(var_5803)
func_5804 = relay.Function([var_5803], output)
mutated_mod['func_5804'] = func_5804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3851_call = mod.get_global_var('func_3851')
func_3853_call = mutated_mod.get_global_var('func_3853')
call_5836 = relay.TupleGetItem(func_3851_call(), 0)
call_5837 = relay.TupleGetItem(func_3853_call(), 0)
uop_5839 = relay.log2(call_5836.astype('float64')) # shape=(7, 7, 4)
uop_5841 = relay.log2(call_5837.astype('float64')) # shape=(7, 7, 4)
func_4043_call = mod.get_global_var('func_4043')
func_4044_call = mutated_mod.get_global_var('func_4044')
call_5842 = relay.TupleGetItem(func_4043_call(), 0)
call_5843 = relay.TupleGetItem(func_4044_call(), 0)
func_4827_call = mod.get_global_var('func_4827')
func_4830_call = mutated_mod.get_global_var('func_4830')
const_5850 = relay.const([[-3.950255,9.061651,4.326365,-3.970748,8.042645,-7.558785,8.834844,-0.655595,1.272803,-9.334604,2.408775,-0.783719,-5.177190,-6.988844,3.862616,-3.008078,-1.163210,8.084231,-0.810922,-3.692328,5.580233,-3.767359,-6.617776,7.403054,8.365037,5.464894,6.376575,4.532630,3.584951,-6.702514,-7.823186,0.848825,-1.379674,8.775867,-0.853533,0.770555,-4.511256,-7.504250,-0.663314,6.902252,1.905105,-9.976843,-3.960038,-2.514987,4.810048,8.377728,6.589219,-4.291961,3.002711,7.399327,-6.631752,8.795880,-0.287388,5.527570,4.738657,-2.847746,-0.374117,7.180192,8.866645,-6.864049,-5.797572,-7.476183,-6.752552,-6.664747,-7.877813,4.643101,-3.265539,-1.618006,-8.387476,3.868940,-2.864376,0.452176,-3.202335,2.245892,-4.292904,-6.022129,9.487513,4.435864,-3.885975,5.651559,8.486623,3.588240,9.772529,-0.032538,0.702377,1.465612,4.952424,-2.060731,1.473941,3.991783,-7.060063,7.772864,8.688007,9.264756,-5.011133,-1.607267,-6.377219,5.820411,7.151429,5.445018,2.062982,-5.751511,2.181636,-4.300825,6.847447,0.177542,7.925449,5.920998,3.130748,-0.540569,-8.518255,8.018687,-9.043178,-3.000799,-5.370645,0.005172,1.984035,-2.747534,-0.705497,2.000154,0.878042,7.916101,1.832021,8.996148,-8.259795,-8.491635,-2.585929,3.100348,-5.880275,4.559574,3.765896,-5.796427,-7.865788,-3.363242,2.711686,-0.520937,-0.274885,-3.926597,2.837400,-0.065985,4.147839,-4.326174,-8.527747,3.461932,5.996491,1.450325,4.446093,5.133273,-3.698807,-3.496974,-1.648313,-9.784228,6.162928,-4.286416,-6.483949,-4.470772,-1.727114,-2.584285,-2.791816,3.997854,-1.715449,-7.079346,0.258097,8.062011,3.872171,4.253385,9.555403,-8.684157,-3.056606,7.515274,0.135024,7.870593,-8.894350,-6.804001,4.836188,-6.590912,-8.999073,8.983095,7.586111,-8.867032,-7.667545,-5.357026,1.066930,-4.842519,8.122961,2.648058,1.094559,-0.747781,-0.992689,-5.746524,5.705219,7.336617,-8.843045,4.102858,9.536768,-9.568081,3.261523,6.503935,-4.339322,3.909358,1.182851,-7.879413,3.415028,-9.166416,-7.638545,2.121999,-9.421137,3.103060,5.144392,-1.512256,-1.477596,-3.488765,6.307521,8.782264,-9.863719,2.299680,3.125832,-1.903061,2.459351,-1.879158,-7.072350,2.269862,-5.266478,7.116710,7.471414,-5.508541,-6.532484,0.444546,1.920017,2.668210,2.558556,4.123923,6.972099,0.417771,1.517606,-3.302508,7.773784,-8.102926,-8.789282,8.070169,4.391900,-1.162495,4.784293,1.907670,-5.316610,-4.608955,5.267717,-6.818940,4.077712,8.714034,0.707134,-2.212859,9.168670,-7.480491,-5.278251,5.309488,6.946067,-8.401869,-0.329736,3.651011,-3.508953,-1.981571,-9.022604,-7.700205,4.504193,-0.996691,6.955771,8.683494,5.273559,6.679182,-5.903598,4.248006,-2.886616,-8.197473,0.228231,8.548886,2.231761,6.912989,-1.360163,7.318744,-8.201392,-1.270468,4.650332,-0.192205,8.027170,-6.681585,0.930162,5.022867,9.277512,-1.515969,-0.098612,1.729943,7.588959,2.024002,-0.534080,2.654261,-7.011820,3.102157,-3.895425,-6.783336,4.944807,3.228305,-0.567603,-2.500541,-7.533505,-2.008488,-9.109033,-1.846502]], dtype = "float64")#candidate|5850|(1, 308)|const|float64
call_5849 = func_4827_call(relay.reshape(const_5850.astype('float64'), [2, 11, 14]))
call_5851 = func_4827_call(relay.reshape(const_5850.astype('float64'), [2, 11, 14]))
func_4517_call = mod.get_global_var('func_4517')
func_4520_call = mutated_mod.get_global_var('func_4520')
const_5860 = relay.const([7,9,-9,2,7,-6,-5,-10,-6,1,-10,-2,-10,2,-7,2,-5,3,-3,8,5,8,-2,10,-1,-1,-3,-7,5,6,6,-8,-10,-3,-8,-4,-6,-10,1,6,2,-4,2,5,-3,-1,-2,8,-2,4,5,-10,2,-7,1,-6,-5,-7,2,-6,6,3,-8,9,-5,1,-10,-9,2,-7,3,7,6,7,-9,-2,-2,-2,-8,-4,3,3,6,-8,-1,-3,-10,4,-6,3,-4,2,-10,10,-5,-2,-10,2,6,4,6,-2,8,10,7,-1,8,8,-8,-9,5,-1,-4,-10,-4,-10,2,5,-9,7,-10,-8,-2,10,7,2,9,-6,6,-7,-10,9,10,3,-2,-7,9,-3,-4,-2,2,-4,7,6,-5,6,-10,9,-10,3,-5,4,-6,6,2,2,3,-3,-5,6,1,-5,-8,5,9,9,10,7,-4,7,-2,-8,-4,-5,-1,7,4,7,8,-9,-1,10,-4,7,-1,-2,5,6,-2,-6,-4,6,-7,-10,-4,4,7,-7,3,9,-10,7,-4,3,-5,-8,2,-9,-7,-5,-9,-8,-5,9,9,-3,10,6,-2,9,-8,8,-5,10,-7,-4,-4,-5,7,8,-2,7,-9,-8,-2,10,-6,-1,-7,-2,5,-1,8,9,-9,-3,6,-5,-5,-7,9,-8,-6,-5,-9,5,5,-7,3,-10,3,-5,7,5,10,10,9,-6,6,-6,-8,-1,9,8,3,8,3,-6,-3,2,-3,5,-10,-5,-2,-1,1,3,-1,-6,1,2,-7,-4,-9,6,-9,-4,-1,5,-9,4,-10,4,10,-6,5,-4,-6,3,-5,7,-9,4,1,1,-8,2,4,9,-9,4,5,-6,-6,-8,9,8,-10,8,-2,1,-6,7,-10,-5,-5,3,-8,-3,-2,-9,10,-9,-10,10,-7,-3,6,4,-10,7,9,7,2,6,-3,-3,2,5,-10,-5,8,10,2,1,5,7,-1,3,-4,-5,6,4,-1,-2,-4,10,9,-5,3,2,8,-4,-6,10,8,1,-5,-9,-1,-9,-10,-6,-8,9,-1,-1,-2,7,2,2,-3,1,7,6,5,-5,-6,-1,6,-8,-2,-5,6,4,9,9,8,-2,3,5,7,10,-10,10,2,-2,-8,9,-9,5,1,-2,3,-6,-3,-2,-8,4,5,4,1,-4,-3,5,7,9,-4,-7,-4,3,3,-8,10,-8,3,4,8,-4,-2,4,-1,-7,4,1,-8,-7,-2,9,4,-8,-9,-10,-2,-9,-3,4,-6,8], dtype = "int16")#candidate|5860|(480,)|const|int16
call_5859 = relay.TupleGetItem(func_4517_call(relay.reshape(const_5860.astype('int16'), [12, 5, 8]), relay.reshape(const_5860.astype('int16'), [12, 5, 8]), ), 0)
call_5861 = relay.TupleGetItem(func_4520_call(relay.reshape(const_5860.astype('int16'), [12, 5, 8]), relay.reshape(const_5860.astype('int16'), [12, 5, 8]), ), 0)
output = relay.Tuple([uop_5839,call_5842,call_5849,const_5850,call_5859,const_5860,])
output2 = relay.Tuple([uop_5841,call_5843,call_5851,const_5850,call_5861,const_5860,])
func_5864 = relay.Function([], output)
mod['func_5864'] = func_5864
mod = relay.transform.InferType()(mod)
mutated_mod['func_5864'] = func_5864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5864_call = mutated_mod.get_global_var('func_5864')
call_5865 = func_5864_call()
output = call_5865
func_5866 = relay.Function([], output)
mutated_mod['func_5866'] = func_5866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_5905 = relay.TupleGetItem(func_2702_call(), 1)
call_5906 = relay.TupleGetItem(func_2703_call(), 1)
func_5007_call = mod.get_global_var('func_5007')
func_5011_call = mutated_mod.get_global_var('func_5011')
const_5912 = relay.const(8, dtype = "int8")#candidate|5912|()|const|int8
var_5913 = relay.var("var_5913", dtype = "int16", shape = (1008,))#candidate|5913|(1008,)|var|int16
const_5914 = relay.const([-0.901082,6.373401,-4.820007,-0.695551,2.957475,-5.115001,-9.350067,3.894560,-7.445718,7.456649,6.904564,4.479441,-4.972178,7.730864,5.575697,-1.283290,-2.954218,-2.379700,2.052987,6.756021,-4.531971,5.288912,-1.834038,5.541945,1.547821,2.500383,0.807612,-8.339747,-2.293957,-8.270268,-0.630553,-2.990513,-7.692723,6.381243,5.155231,-0.777306,-9.627076,1.096029,-4.472206,8.723842,2.539026,-7.983292,-3.467586,-0.376500,1.784803,-5.235356,0.201351,-6.426417,9.808091,4.031841,-5.555586,3.491513,2.043577,5.546415,3.044330,-3.914071,1.267891,6.573802,7.490925,-7.417937,-0.814321,-9.878605,4.168269,3.632160,0.932728,-1.639431,-5.863338,-0.225266,-0.284020,-9.235634,3.452028,-0.151516,3.168429,-0.623634,4.223308,1.638291,7.542250,-5.884274,-8.792147,3.635428,-0.312950,8.836589,5.909141,6.055619,8.334060,3.880882,-7.486906,3.372152,-4.239242,-7.990776,7.017850,9.563844,-6.849614,6.661790,-2.113560,-6.766995,-2.237232,3.626454,6.899405,4.422424,-3.863275,9.432006,-6.950448,3.740930,-3.238166,5.838657,0.768154,-5.205695,-9.610242,6.207157,9.262796,4.355385,3.770961,5.540291,7.662525,-8.151441,-1.418625,-2.333804,-3.376445,6.561942,-8.605613,-8.069282,8.008368,1.265052,2.288098,-7.033632,-0.614130,-6.861664,3.078642,-8.990766,9.304790,-0.695594,9.104641,-0.165629,-1.220800,-6.279873,-1.830500,3.192012,-1.278275,3.224551,4.980303,-4.015647,-7.587561,8.430046,-1.626325,-4.088997,-0.352802,2.597413,-9.010990,-2.653536,1.817787,9.788618,1.706055,-7.549412,4.094613,1.036461,5.278220,-2.327019,7.248677,6.732812,1.563934,0.155240,4.686492,6.077456,-1.804536,-6.991226,5.391308,-7.797105,-4.549109,-9.377377,-5.851785,-2.143403,8.641274,3.145605,9.240056,-7.664008,9.009561,-5.575427,2.478882,-2.516606,9.933744,7.233038,-9.966502,-6.832255,-2.057688,-5.848445,-4.691953,3.087961,5.431513,-8.249097,3.629878,1.255396,-6.512367,0.563235,-1.186351,-6.303522,3.520680,-5.576575,7.190048,-1.468377,2.762883,-1.051595,-1.625691,9.428765,9.370218,-8.968332,-5.481092,6.951709,1.669945,-5.995665,-6.334709,-9.098482,2.241947,7.898607,4.572404,-6.844373,-5.380464,-0.650483,-6.723355,-4.651523,-5.692899,9.988626,-0.276143,5.011051,6.341901,0.509467,-7.337328,1.255193,-2.171729,-4.086237,0.319780,-3.596452,-8.170756,-6.236513,-3.335401,-7.290020,0.057401,-0.638945,-4.254052,5.955983,8.492615,4.345197,-2.278794,8.497297,9.421970,-6.252361,6.486551,-0.409071,-3.772190,-7.861710,5.685894,9.616339,-7.067560,-4.830701,4.638583,1.706392,1.872465,2.251931,1.858314,-4.506396,-4.072114,2.679869,-4.923677,2.493872,-4.477950,6.735970,-5.921048,-8.308526,-1.994600,3.919004,0.135906,2.398858,6.291032,-4.337610,2.255626,4.874412,-6.338540,7.747042,-5.206295,2.986167,7.084169,-6.861242,6.729234,-3.227331,-1.070709,0.956797,-3.890497,-5.231492,1.084545,9.733057,0.999106,5.434154,4.071329,-0.378232,1.595044,2.821533,8.754865,2.022568,-8.678323,-5.106892,0.041925,-0.786138,-2.817552,-2.534907,-5.211862,1.598174,-5.622176,5.382377,1.191647,-5.898207,9.590483,7.126941,0.970732,0.894057,3.932084,-9.090831,6.724971,-6.947311,9.736982,-8.587535,-9.895728,-9.241848,-8.760877,6.697561,4.298005,-7.373754,3.205819,4.319045,-3.187349,-9.641437,3.639250,7.108409,-1.425907,-9.088259,-5.767062,2.622153,-9.950520,3.527360,6.547740,6.473119,-2.401279,6.281642,2.328242,7.508330,1.014416,0.138858,-3.160414,2.241160,4.070496,7.615097,-6.542392,-6.065992,-4.421949,5.099082,-4.420183,-2.294350,4.308480,-2.264173,1.222108,-8.300786,-6.996388,8.317920,-7.517152,2.756771,-2.659927,6.030016,5.471706,-7.598848,-3.897124,6.129993,-5.828841,2.081384,7.520417,-1.967050,7.175681,9.503597,2.278156,3.562019,4.041958,5.529810,5.374221,5.434307,-1.329232,-4.907312,4.837831,-2.318799,6.100419,5.238118,9.972363,0.889564,0.216228,-9.509679,2.232199,-4.325018,-9.676799,5.566384,0.973201,-4.196418,-1.469635,-8.056188,-9.580947,2.983768,-0.813778,-7.622776,-1.502847,7.603519,-7.275904,-9.209829,3.673756,9.826030,-1.124803,6.804815,8.231865,-1.478566,-3.689589,5.036068,5.527726,-4.860377,-1.537392,1.407440,3.551253,-5.648262,2.429344,6.352890,5.748649,-6.630824,8.468690,2.332424,-2.787362,-9.036264,-7.931246,4.786860,-0.550909,-4.070330,5.979726,-3.061820,-0.885400,-2.152170,2.030559,-3.276832,-3.142397,6.806061,-4.172199,-8.888628,-1.511470,1.776865,4.915260,-0.343967,-0.938681,-7.729221,-3.950681,-0.873915,2.911989,-8.717947,9.356477,8.541706,-1.732098,9.781614,-2.462007,8.876525,4.202616,3.976132,4.181567,-1.631285,-6.142309,8.826745,6.228844,7.622466,4.132902,-4.033582,-0.747262,-6.883838,-8.375551,1.164626,-6.921992,6.588286,2.574182,-6.688758,-5.772964,7.050250,6.947046,9.380776,-9.156391,0.333411,2.511535,-0.583646,2.008589,-9.784617,0.970016,-1.601410,-9.050252,3.911303,7.095812,-8.521676,-5.844143,-5.380319,7.063245,0.981043,3.031086,7.266311,-7.984456,-0.848045,-7.420228,1.109874,8.013781,2.491736,6.700858,5.449686,-3.033196,-2.048199,1.121124,-1.707267,-3.552405,4.383329,-4.743092,-2.834876,-6.769803,1.220375,3.307368,-9.357007,-7.351101,-9.912044,-3.248709,-0.550876,-4.539184,-2.174362,-0.325494,-7.139534,-2.843491,-7.046300,-7.014252,7.726564,5.790484,2.250821,0.091852,1.378621,-4.382957,1.196800,-2.348759,0.246680,-3.587085,-7.838117,3.551634,8.596994,-7.658238,-9.490340], dtype = "float64")#candidate|5914|(546,)|const|float64
call_5911 = relay.TupleGetItem(func_5007_call(relay.reshape(const_5912.astype('int8'), []), relay.reshape(var_5913.astype('int16'), [2, 504]), relay.reshape(const_5914.astype('float64'), [546,]), ), 4)
call_5915 = relay.TupleGetItem(func_5011_call(relay.reshape(const_5912.astype('int8'), []), relay.reshape(var_5913.astype('int16'), [2, 504]), relay.reshape(const_5914.astype('float64'), [546,]), ), 4)
func_5007_call = mod.get_global_var('func_5007')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_5923 = relay.TupleGetItem(func_5007_call(relay.reshape(const_5912.astype('int8'), []), relay.reshape(var_5913.astype('int16'), [2, 504]), relay.reshape(const_5914.astype('float64'), [546,]), ), 5)
call_5924 = relay.TupleGetItem(func_5011_call(relay.reshape(const_5912.astype('int8'), []), relay.reshape(var_5913.astype('int16'), [2, 504]), relay.reshape(const_5914.astype('float64'), [546,]), ), 5)
output = relay.Tuple([call_5905,call_5911,const_5912,var_5913,const_5914,call_5923,])
output2 = relay.Tuple([call_5906,call_5915,const_5912,var_5913,const_5914,call_5924,])
func_5930 = relay.Function([var_5913,], output)
mod['func_5930'] = func_5930
mod = relay.transform.InferType()(mod)
mutated_mod['func_5930'] = func_5930
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5931 = relay.var("var_5931", dtype = "int16", shape = (1008,))#candidate|5931|(1008,)|var|int16
func_5930_call = mutated_mod.get_global_var('func_5930')
call_5932 = func_5930_call(var_5931)
output = call_5932
func_5933 = relay.Function([var_5931], output)
mutated_mod['func_5933'] = func_5933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_5941 = relay.TupleGetItem(func_2702_call(), 1)
call_5942 = relay.TupleGetItem(func_2703_call(), 1)
func_590_call = mod.get_global_var('func_590')
func_592_call = mutated_mod.get_global_var('func_592')
var_5977 = relay.var("var_5977", dtype = "float64", shape = (546,))#candidate|5977|(546,)|var|float64
call_5976 = relay.TupleGetItem(func_590_call(relay.reshape(var_5977.astype('float64'), [13, 7, 6])), 0)
call_5978 = relay.TupleGetItem(func_592_call(relay.reshape(var_5977.astype('float64'), [13, 7, 6])), 0)
bop_5980 = relay.not_equal(call_5976.astype('bool'), relay.reshape(var_5977.astype('bool'), relay.shape_of(call_5976))) # shape=(13, 7, 6)
bop_5983 = relay.not_equal(call_5978.astype('bool'), relay.reshape(var_5977.astype('bool'), relay.shape_of(call_5978))) # shape=(13, 7, 6)
func_5498_call = mod.get_global_var('func_5498')
func_5499_call = mutated_mod.get_global_var('func_5499')
call_5992 = relay.TupleGetItem(func_5498_call(), 1)
call_5993 = relay.TupleGetItem(func_5499_call(), 1)
func_4434_call = mod.get_global_var('func_4434')
func_4435_call = mutated_mod.get_global_var('func_4435')
call_5999 = relay.TupleGetItem(func_4434_call(), 0)
call_6000 = relay.TupleGetItem(func_4435_call(), 0)
output = relay.Tuple([call_5941,bop_5980,call_5992,call_5999,])
output2 = relay.Tuple([call_5942,bop_5983,call_5993,call_6000,])
func_6012 = relay.Function([var_5977,], output)
mod['func_6012'] = func_6012
mod = relay.transform.InferType()(mod)
mutated_mod['func_6012'] = func_6012
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6013 = relay.var("var_6013", dtype = "float64", shape = (546,))#candidate|6013|(546,)|var|float64
func_6012_call = mutated_mod.get_global_var('func_6012')
call_6014 = func_6012_call(var_6013)
output = call_6014
func_6015 = relay.Function([var_6013], output)
mutated_mod['func_6015'] = func_6015
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6017 = relay.var("var_6017", dtype = "float64", shape = (6, 1, 1))#candidate|6017|(6, 1, 1)|var|float64
uop_6018 = relay.cosh(var_6017.astype('float64')) # shape=(6, 1, 1)
uop_6023 = relay.sin(uop_6018.astype('float64')) # shape=(6, 1, 1)
bop_6026 = relay.bitwise_and(uop_6023.astype('uint16'), relay.reshape(uop_6018.astype('uint16'), relay.shape_of(uop_6023))) # shape=(6, 1, 1)
bop_6031 = relay.mod(uop_6023.astype('float64'), relay.reshape(uop_6018.astype('float64'), relay.shape_of(uop_6023))) # shape=(6, 1, 1)
bop_6044 = relay.left_shift(uop_6018.astype('uint8'), relay.reshape(bop_6026.astype('uint8'), relay.shape_of(uop_6018))) # shape=(6, 1, 1)
bop_6050 = relay.greater(bop_6026.astype('bool'), relay.reshape(bop_6031.astype('bool'), relay.shape_of(bop_6026))) # shape=(6, 1, 1)
func_1888_call = mod.get_global_var('func_1888')
func_1893_call = mutated_mod.get_global_var('func_1893')
const_6067 = relay.const(-6, dtype = "int64")#candidate|6067|()|const|int64
const_6068 = relay.const([2,7,7,-4,-8,-10,-10,-4,9,3,-10,3,10,3,-7,-9,2,-1,-4,5,-3,-4,10,-7,-9,-4,9,10,5,7,-2,1,2,4,8,1,-8,4,10,-6,-4,-2,10,-4,3,-7,10,10,-3,-10,-6,2,-4,2,8,7,-10,6,-10,7,4,8,-3,5,-5,-6,-8,4,5,-7,6,8,4,-10,-4,8,2,-1,-6,-2,3,-1,6,-2,1,-7,-5,5], dtype = "int64")#candidate|6068|(88,)|const|int64
const_6069 = relay.const([-4,1,-3,9,9,-2,6,8,-4,-3,7,-8,-3,1,4,4,-5,9,-9,3,4,6,1,-5,8,1,-4,-4,-4,6,5,6,-6,-9,3,-2,7,5,3,3,2,9,-5,-2,7,8,1,-5,9,3,-6,-7,4,-3,5,-8,-1,10,1,-6,-3,4,6,-10,-1,-7,7,-2,-7,8,10,-7,-7,7,-3,8,-5,10,10,-8,-1,10,8,-1,-8,5,6,-8,-2,-1,-8,-1,-9,-6,-10,-2,9,1,7,-10,-8,2,10,-7,7,-7,4,7,10,-6,2,-3,1,8,-3,-4,5,7,8,-8,-1,-9,7,-10,-3,-9,-4,6,6,7,2,4,-7,-3,-4,-3,5,2,10,-9,8,-10,10,-10,-9,8,8,9,1,-4,10,-4,9,-9,5,4,7,8,9,6,4,-9,3,10,9,-3,-1,-6,-10,-9,-4,-10,8,-10,5,5,9,-4,2,-6,-9,-2,5,-1,4,2,7,-10,-2,-2,-8,8,2,8,9,-7,-3,1,6,3,-5,9,-8,5,-1,7,-3,-7,-1,9,8,-10,-4,9,4,9,8,1,8,6,-2,-9,1,10,-8,4,6,9,9,-9,3,-4,7,-6,1,2,-4,10,6,9,-2,2,-9,7,2,-10,-5,3,-2,-7,-1,-8,-2,2,2,-2,6,-2,6,4,-7,-2,-1,-4,-5,5,2,3,-4,1,-10,-10,-6,3,2,-1,-2,-1,7,-5,8,8,-3,-3,-8,3,-7,4,5,-7,-3,-8,-1,-9,6,-9,-5,-6,10,7,6,-5,3,8,5,5,-6,-4,-1,5,6,-6,3,-9,-5,-10,-6,-4,4,-7,1,-8,4,-6,-4,6,7,3,6,-4,10,-10,10,-5,9,-5,3,-7,-5,4,4,-1,2,2,8,6,1,-2,1,-7,-9,-1,6,-9,-9,-2,3,-3,-9,-10,10,-5,-2,-1,-6,5,1,-8,-2,-9,10,-3,7,5,-10,5,10,8,-6,-9,9,8,8,8,2,2,-1,2,-2,5,3,9,-9,7,7,-8,8,8,-9,-9,-4,-3,-7,-4,-4,-8,-9,10,5,3,-3,-8,-6,-10,-3,-6,-9,3,-5,-4,7,8,10,-6,-7,-7,-10,3,1,1,-10,4,-7,5,5,-3,-3,10,8,6,-3,-8,-8,-8,-2,-5,-5,4,-6,-4,-10,5,7,-7,-1,2,6,8,-9,-2,-5,-5,-6,4,10,6,6,-5,7,10,5,-2,10,-4,6,1,-3,-4,7,-4,8,1,1,7,-8,-8,8,3,-1,8,4,-9,-6,-7,-2,2,-3,4,-8,4,9,-8,-3,7,-9,1,2,2,2,-3,-2,-4,5,-9,-10,-9,-6,-6,-10,-4,7,4,-5,7,6,4,4,-3,6,2,-6,5,-7,-2,3,8,1,-9,-10,4,6,-4,-5,-9,-8,7,9,-5,-2,-3,-4,4,5,-10,10,1,-3,8,1,-1,6,2,-1,-4,-3,-7,-2,-2,4,3,7,2,10,-2,-5,9,-2,-1,-7,5,3,-9,-2,-1,-3,10,8,-4,2,-9,-10,2,-9,-6,-7,-6,-2,5,-6,-10], dtype = "uint64")#candidate|6069|(600,)|const|uint64
call_6066 = relay.TupleGetItem(func_1888_call(relay.reshape(const_6067.astype('int64'), []), relay.reshape(const_6068.astype('int64'), [11, 8, 1]), relay.reshape(const_6069.astype('uint64'), [600,]), ), 2)
call_6070 = relay.TupleGetItem(func_1893_call(relay.reshape(const_6067.astype('int64'), []), relay.reshape(const_6068.astype('int64'), [11, 8, 1]), relay.reshape(const_6069.astype('uint64'), [600,]), ), 2)
output = relay.Tuple([bop_6044,bop_6050,call_6066,const_6067,const_6068,const_6069,])
output2 = relay.Tuple([bop_6044,bop_6050,call_6070,const_6067,const_6068,const_6069,])
func_6074 = relay.Function([var_6017,], output)
mod['func_6074'] = func_6074
mod = relay.transform.InferType()(mod)
mutated_mod['func_6074'] = func_6074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6075 = relay.var("var_6075", dtype = "float64", shape = (6, 1, 1))#candidate|6075|(6, 1, 1)|var|float64
func_6074_call = mutated_mod.get_global_var('func_6074')
call_6076 = func_6074_call(var_6075)
output = call_6076
func_6077 = relay.Function([var_6075], output)
mutated_mod['func_6077'] = func_6077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_6111 = relay.TupleGetItem(func_2702_call(), 0)
call_6112 = relay.TupleGetItem(func_2703_call(), 0)
func_5428_call = mod.get_global_var('func_5428')
func_5432_call = mutated_mod.get_global_var('func_5432')
const_6123 = relay.const([-9,4,1,-1,-1,9,2,7,-6,-5,8,1,7,3,-5,3,9,10,-5,2,7,-10,-1,2,7,-2,-5,3,4,3,-4,5,-6,-3,5,6,7,5,-2,5,-4,-8,-10,10,9,-5,-10,8,5,-8,7,6,-10,3,-10,5,5,-3,-4,-3,6,8,8,3,-7,6,5,-9,-3,-8,1,6,-5,-3,2,2,3,4,-5,-5], dtype = "uint8")#candidate|6123|(80,)|const|uint8
var_6124 = relay.var("var_6124", dtype = "uint16", shape = (660, 1))#candidate|6124|(660, 1)|var|uint16
var_6125 = relay.var("var_6125", dtype = "int8", shape = ())#candidate|6125|()|var|int8
call_6122 = relay.TupleGetItem(func_5428_call(relay.reshape(const_6123.astype('uint8'), [40, 2]), relay.reshape(var_6124.astype('uint16'), [660,]), relay.reshape(var_6125.astype('int8'), []), ), 4)
call_6126 = relay.TupleGetItem(func_5432_call(relay.reshape(const_6123.astype('uint8'), [40, 2]), relay.reshape(var_6124.astype('uint16'), [660,]), relay.reshape(var_6125.astype('int8'), []), ), 4)
bop_6131 = relay.mod(const_6123.astype('float64'), var_6124.astype('float64')) # shape=(660, 80)
func_6074_call = mod.get_global_var('func_6074')
func_6077_call = mutated_mod.get_global_var('func_6077')
var_6136 = relay.var("var_6136", dtype = "float64", shape = (6,))#candidate|6136|(6,)|var|float64
call_6135 = relay.TupleGetItem(func_6074_call(relay.reshape(var_6136.astype('float64'), [6, 1, 1])), 3)
call_6137 = relay.TupleGetItem(func_6077_call(relay.reshape(var_6136.astype('float64'), [6, 1, 1])), 3)
output = relay.Tuple([call_6111,call_6122,var_6125,bop_6131,call_6135,var_6136,])
output2 = relay.Tuple([call_6112,call_6126,var_6125,bop_6131,call_6137,var_6136,])
func_6147 = relay.Function([var_6124,var_6125,var_6136,], output)
mod['func_6147'] = func_6147
mod = relay.transform.InferType()(mod)
mutated_mod['func_6147'] = func_6147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6147_call = mutated_mod.get_global_var('func_6147')
var_6149 = relay.var("var_6149", dtype = "uint16", shape = (660, 1))#candidate|6149|(660, 1)|var|uint16
var_6150 = relay.var("var_6150", dtype = "int8", shape = ())#candidate|6150|()|var|int8
var_6151 = relay.var("var_6151", dtype = "float64", shape = (6,))#candidate|6151|(6,)|var|float64
call_6148 = func_6147_call(var_6149,var_6150,var_6151,)
output = call_6148
func_6152 = relay.Function([var_6149,var_6150,var_6151,], output)
mutated_mod['func_6152'] = func_6152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5864_call = mod.get_global_var('func_5864')
func_5866_call = mutated_mod.get_global_var('func_5866')
call_6166 = relay.TupleGetItem(func_5864_call(), 1)
call_6167 = relay.TupleGetItem(func_5866_call(), 1)
const_6170 = relay.const([[[5.258925,4.243972,7.385969,-0.582496],[-4.343549,-0.387077,-1.419026,-0.922773],[4.435488,0.869646,3.554011,3.935947],[2.053773,4.096578,0.160309,4.575368],[1.989205,-2.088313,-3.991278,2.226766],[7.871348,-3.012410,-1.624874,-3.257214],[9.289694,-0.725099,-8.185453,-6.001826]],[[7.057235,2.493694,-1.782316,-9.444421],[0.235879,4.516096,5.864057,6.916565],[-1.052252,-4.763061,-5.917588,-9.974610],[-3.460422,-6.494369,-2.366081,-1.775101],[-4.257173,2.592623,-4.876712,-5.375300],[-8.421020,-1.787670,-7.839654,0.382248],[3.856445,6.519675,-9.413820,7.313173]],[[-1.909081,6.439102,-4.100558,4.905888],[0.744867,-0.148231,-3.007149,-3.637445],[-1.910951,-9.513548,-3.877903,4.452775],[5.481267,4.797921,-5.028538,-1.454362],[0.807180,1.647210,6.086201,-1.442823],[8.001202,-3.111082,-8.551646,1.861647],[2.431098,5.072270,4.689834,5.199945]],[[-5.564152,-8.667704,-0.512837,3.127391],[0.517906,6.627983,8.633182,9.289068],[-3.220107,-4.209324,-9.056083,7.104301],[3.812128,1.522901,2.099438,2.683534],[-4.163910,-5.618135,-6.516107,-4.350012],[6.548063,-9.428281,9.731379,1.454172],[-0.176236,-2.610942,1.443867,-3.933248]],[[4.873309,3.203984,6.018634,-9.361382],[0.402368,-4.709418,-7.146918,9.424646],[-0.975807,6.471647,8.468474,-7.182661],[-8.823599,6.593051,-4.167475,2.428363],[7.741504,5.149771,6.780987,-0.421421],[-1.656711,8.821781,2.137230,-0.692815],[-6.143649,-5.963632,4.977033,1.112063]],[[8.159544,3.312961,7.875308,3.213834],[-6.907402,1.699869,-7.442918,-7.980678],[-8.477460,-4.256666,-7.690027,4.663955],[-3.532544,-9.024719,-1.228918,5.863582],[-0.216593,-5.984156,3.168958,4.797215],[-6.355355,-3.262721,-5.157862,1.110621],[-8.316250,8.442045,5.958207,8.153130]],[[-7.574740,6.558502,-6.297924,-9.078212],[7.514794,-4.253613,8.098164,-9.966776],[-8.133089,-6.549177,8.217772,9.433312],[2.459390,-3.131603,5.800703,-2.019765],[-7.892347,8.501231,8.971640,0.034135],[-5.337655,5.958199,1.118877,7.743988],[-5.758598,5.253022,7.003708,9.903032]]], dtype = "float32")#candidate|6170|(7, 7, 4)|const|float32
bop_6171 = relay.logical_or(call_6166.astype('bool'), relay.reshape(const_6170.astype('bool'), relay.shape_of(call_6166))) # shape=(7, 7, 4)
bop_6174 = relay.logical_or(call_6167.astype('bool'), relay.reshape(const_6170.astype('bool'), relay.shape_of(call_6167))) # shape=(7, 7, 4)
func_3954_call = mod.get_global_var('func_3954')
func_3957_call = mutated_mod.get_global_var('func_3957')
const_6176 = relay.const([-3,10,3,-9,3,3,-3,1,-5,3,10,9,9,-3,-2,8,9,9,9,2,8,-4,-10,-10,-2,5,6,1,-2,10,-1,9,-8,3,6,9,-9,-2,10,6,-5,-5,-8,8,-3,4,-1,-3,3,6,9,1,10,1,-9,3], dtype = "uint64")#candidate|6176|(56,)|const|uint64
const_6177 = relay.const([-7,-3,7,-5,1,3,-5,-9,-6,-8,-8,-4,8,5,7,8,-1,9,8,-6,-2,-2,-7,-9,9,4,6,8,9,-3,-7,10,-1,-3,-7,-7,-2,-7,10,-4,5,-8,-3,-3,10,-3,-7,7,4,-9,1,-1,5,-3,-5,-3,4,1,8,4,-2,-6,-9,-8,-5,5,5,10,-5,-4,-10,1,8,1,-6,5,1,-8,6,-3,-3,8,6,7,-3,-2,-9,6,2,5,-2,7,-6,4,-3,3,-7,5,1,5,-4,-6,9,-2,9,1,2,7,-7,7,9,-5,3,10,-1,-7,-3,9,4,2,-1,-7,5,8,-4,-9,7,9,-3,5,7,8,-4,9,8,-1,6,-9,-1,-10,-2,-10,-2,-8,-10,-8,6,7,3,-7,-9,8,-6,6,-4,4,7,4,3,-4,-6,9,8,-1,4,-2,6,-8,-8,10,3,7,-8,-9,2,3,8,9,10,9,-8,4,-4,8,7,4,-4,9,-2,10,-4,4,-6,9,5,-7,10,8,-6,-6,4,2,-2,9,-1,-10,3,8,8,-5,-7,7,6,3,-10,4,10,-4,-10,8,4,-8,-3,8,8,-6,8,4,9,-5,-8,-4,6,3,-3,-7,9,5,4,3,7,-6,-3,6,-8,10,9,-8,-4,-8,2,-3,1,-2,1,8,5,2,4,9,-8,-10,4,1,9,-4,-7,1,-7,6,10,-6,5,2,-6,3,-1,3,1,5,7,2,-10,-5,-7,7,-2,2,-10,7,7,-2,-3,8,-2,7,-4,-5,-3,3,9,9,2,-9,6,-2,7,5,-10,-5,6,4,-2,-6,7,-5,1,8,-5,-8,4,-6,-4,1,4,8,10,1,1,7,9,4,7,-3,-10,3,-1,-5,2,10,-3,-7,2,-5,9,9,-5,8,-9,-4,4,-5,8,1,-7,9,1,5,6,-6,-3,3,-10,-7,3,-7,9,-1,3,1,3,2,-6,7,6,-6,-8,6,-1,-8,4,-1,-7,-4,-4,-10,4,1,8,3,3,4,2,1,5,-8,-5,6,1,4,-4,10,-8,-2,-3,4,-8,-7,-10,-2,8,-6,8,6,-9,-3,-9,-4,8,-7,3,-6,2,1,-2,7,-4,-4,2,-2,-4,-7,-1,-2,-9,9,10,2,1,-2,-8,-4,3,-5,-1,7,5,8,6,-7,9,-6,-3,9,-4,6,1,4,-9,-8,-9,4,10,10,-4,-9,-2,9,5,-9,10,-1,-5,-6,8,-3,-8,1,-10,4,-7,-6,7,-4,3,1,7,6,-9,-6,-4,-3,7,2,4,-1,8,10,3,8,-7,1,3,8], dtype = "uint64")#candidate|6177|(504,)|const|uint64
call_6175 = relay.TupleGetItem(func_3954_call(relay.reshape(const_6176.astype('uint64'), [4, 14, 1]), relay.reshape(const_6177.astype('uint64'), [4, 14, 9]), ), 1)
call_6178 = relay.TupleGetItem(func_3957_call(relay.reshape(const_6176.astype('uint64'), [4, 14, 1]), relay.reshape(const_6177.astype('uint64'), [4, 14, 9]), ), 1)
output = relay.Tuple([bop_6171,call_6175,const_6176,const_6177,])
output2 = relay.Tuple([bop_6174,call_6178,const_6176,const_6177,])
func_6179 = relay.Function([], output)
mod['func_6179'] = func_6179
mod = relay.transform.InferType()(mod)
mutated_mod['func_6179'] = func_6179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6179_call = mutated_mod.get_global_var('func_6179')
call_6180 = func_6179_call()
output = call_6180
func_6181 = relay.Function([], output)
mutated_mod['func_6181'] = func_6181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3710_call = mod.get_global_var('func_3710')
func_3711_call = mutated_mod.get_global_var('func_3711')
call_6197 = func_3710_call()
call_6198 = func_3710_call()
output = call_6197
output2 = call_6198
func_6206 = relay.Function([], output)
mod['func_6206'] = func_6206
mod = relay.transform.InferType()(mod)
mutated_mod['func_6206'] = func_6206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6206_call = mutated_mod.get_global_var('func_6206')
call_6207 = func_6206_call()
output = call_6207
func_6208 = relay.Function([], output)
mutated_mod['func_6208'] = func_6208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2656_call = mod.get_global_var('func_2656')
func_2657_call = mutated_mod.get_global_var('func_2657')
call_6209 = func_2656_call()
call_6210 = func_2656_call()
output = relay.Tuple([call_6209,])
output2 = relay.Tuple([call_6210,])
func_6221 = relay.Function([], output)
mod['func_6221'] = func_6221
mod = relay.transform.InferType()(mod)
output = func_6221()
func_6222 = relay.Function([], output)
mutated_mod['func_6222'] = func_6222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6278 = relay.var("var_6278", dtype = "int32", shape = (3, 7, 3))#candidate|6278|(3, 7, 3)|var|int32
var_6279 = relay.var("var_6279", dtype = "int32", shape = (3, 7, 3))#candidate|6279|(3, 7, 3)|var|int32
bop_6280 = relay.minimum(var_6278.astype('int32'), relay.reshape(var_6279.astype('int32'), relay.shape_of(var_6278))) # shape=(3, 7, 3)
output = relay.Tuple([bop_6280,])
output2 = relay.Tuple([bop_6280,])
func_6286 = relay.Function([var_6278,var_6279,], output)
mod['func_6286'] = func_6286
mod = relay.transform.InferType()(mod)
mutated_mod['func_6286'] = func_6286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6286_call = mutated_mod.get_global_var('func_6286')
var_6288 = relay.var("var_6288", dtype = "int32", shape = (3, 7, 3))#candidate|6288|(3, 7, 3)|var|int32
var_6289 = relay.var("var_6289", dtype = "int32", shape = (3, 7, 3))#candidate|6289|(3, 7, 3)|var|int32
call_6287 = func_6286_call(var_6288,var_6289,)
output = call_6287
func_6290 = relay.Function([var_6288,var_6289,], output)
mutated_mod['func_6290'] = func_6290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4043_call = mod.get_global_var('func_4043')
func_4044_call = mutated_mod.get_global_var('func_4044')
call_6294 = relay.TupleGetItem(func_4043_call(), 0)
call_6295 = relay.TupleGetItem(func_4044_call(), 0)
func_1888_call = mod.get_global_var('func_1888')
func_1893_call = mutated_mod.get_global_var('func_1893')
var_6298 = relay.var("var_6298", dtype = "int64", shape = ())#candidate|6298|()|var|int64
var_6299 = relay.var("var_6299", dtype = "int64", shape = (88,))#candidate|6299|(88,)|var|int64
var_6300 = relay.var("var_6300", dtype = "uint64", shape = (12, 50))#candidate|6300|(12, 50)|var|uint64
call_6297 = relay.TupleGetItem(func_1888_call(relay.reshape(var_6298.astype('int64'), []), relay.reshape(var_6299.astype('int64'), [11, 8, 1]), relay.reshape(var_6300.astype('uint64'), [600,]), ), 4)
call_6301 = relay.TupleGetItem(func_1893_call(relay.reshape(var_6298.astype('int64'), []), relay.reshape(var_6299.astype('int64'), [11, 8, 1]), relay.reshape(var_6300.astype('uint64'), [600,]), ), 4)
output = relay.Tuple([call_6294,call_6297,var_6298,var_6299,var_6300,])
output2 = relay.Tuple([call_6295,call_6301,var_6298,var_6299,var_6300,])
func_6306 = relay.Function([var_6298,var_6299,var_6300,], output)
mod['func_6306'] = func_6306
mod = relay.transform.InferType()(mod)
var_6307 = relay.var("var_6307", dtype = "int64", shape = ())#candidate|6307|()|var|int64
var_6308 = relay.var("var_6308", dtype = "int64", shape = (88,))#candidate|6308|(88,)|var|int64
var_6309 = relay.var("var_6309", dtype = "uint64", shape = (12, 50))#candidate|6309|(12, 50)|var|uint64
output = func_6306(var_6307,var_6308,var_6309,)
func_6310 = relay.Function([var_6307,var_6308,var_6309,], output)
mutated_mod['func_6310'] = func_6310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6206_call = mod.get_global_var('func_6206')
func_6208_call = mutated_mod.get_global_var('func_6208')
call_6441 = func_6206_call()
call_6442 = func_6206_call()
func_3078_call = mod.get_global_var('func_3078')
func_3080_call = mutated_mod.get_global_var('func_3080')
const_6458 = relay.const([[-4,2,2,9,7,-8,2,2,-2,6,-4,2,-7,5,10,6,-8,9,6,-10,7,-5,5,-5,-8,8,-3,5,-9,-3,10,5,10,8,6,-1,5,10,-5,9,-5,-5,-7,10,3,-5,3,-2,3,-10,-7,2,9,2,-6,-7,-7,-1,5,8,-5,10,2,2,2,-6,3,1,-9,-7,-3,8,-7,2,-8,-9,-5,10,2,3,-4,-3,7,2,-4,-3,-1,6,-7,9,1,8,-6,-3,2,2,-5,6,8,1,5,10,-2,6,-7,7,-3,-5,-7,7,4,-7,6,-2,1,8,-7,6,5,3,6,-1,6,8,-4,-3,8,-9,3,-9,-7,4,3,5,1,3,5,4,10,5,1,-4,7,-1,5,9,-7,5,-3,2,-6,1,9,-5,9,4,-7,9,2,-6,-2,-8,-10,-8,1,8,5,1,7,2,5,8,-4,7,6,2,10,6,-3,4,-6,-3,4,-4,1,6,2,9,-10,-2,2,6,-6,-6,1],[-2,2,8,1,-6,-8,8,8,-5,-6,7,-3,-1,-9,7,-7,-7,-6,7,-6,2,5,3,-7,-4,-7,2,5,-8,-10,-6,-6,10,-9,1,-9,-1,-3,10,3,3,-4,-2,10,-5,7,-9,-4,4,7,-9,8,-3,-4,-9,6,9,-8,-8,2,-1,7,-1,1,4,-3,-2,-3,-10,-9,-4,-4,4,-5,-2,-8,-8,-3,5,6,-9,10,-8,8,10,8,2,-8,-3,9,-1,-8,-1,10,4,5,3,-7,-8,8,4,-1,-7,3,5,-5,10,-7,-6,-8,1,4,-9,-6,7,5,1,10,-7,7,-6,10,8,10,4,-4,1,10,8,7,1,9,-7,7,-1,-8,9,-6,3,10,-3,-2,-2,-4,-10,6,-10,3,-1,3,-7,2,7,4,3,9,8,-10,-6,9,-3,7,-9,1,3,5,-5,5,-4,-3,-2,-2,-6,1,7,9,-6,-3,9,6,-10,-1,7,-8,-4,7,-3,-6,-9,2,6,6,-8,-8,7],[-8,-4,-3,-6,1,1,-5,7,3,8,-2,7,-8,-8,-3,-10,-1,1,-7,-4,6,-8,-10,-2,-1,-8,-5,-2,1,9,7,6,-6,-4,3,-3,3,-10,4,-6,4,-9,-1,4,-5,6,4,3,-9,3,5,3,-5,1,-6,-8,2,-9,-10,-5,-6,8,4,-10,-8,-5,8,3,10,5,-2,6,10,-9,6,7,6,2,7,-3,4,8,-5,-5,6,2,-5,-5,2,7,-7,-2,2,-3,7,-3,-5,2,5,-6,1,10,6,3,9,-10,6,1,7,6,1,4,4,5,-7,-10,-1,-4,-8,-7,-9,-3,-6,-3,-10,6,10,-9,-7,-4,5,3,-6,3,6,-1,6,9,8,-6,1,-4,-1,7,-7,-4,-7,-10,-8,9,4,10,-3,3,-9,2,10,-2,8,3,-10,-10,6,4,-5,-9,-10,-1,5,6,5,-5,5,10,-7,-1,-9,-8,2,-10,-2,10,-5,-6,-6,-6,2,8,1,1,10,-6,4,4,5],[-7,-3,10,-9,-8,-1,-6,8,-10,-9,-6,4,7,-8,-8,-7,10,3,7,10,-4,10,6,3,8,9,-2,7,-3,-2,-10,7,10,1,9,-1,-4,5,10,6,-10,1,7,3,5,-4,-6,-4,-8,-2,-8,-10,-7,-10,2,4,-10,6,-6,-1,6,-7,-4,-9,-8,9,-7,8,-5,10,4,-1,-2,6,-8,9,10,-8,-7,-9,1,2,-9,1,-9,-5,-8,1,-5,-8,-2,1,-2,-8,-8,-5,5,7,8,-1,-3,-1,-3,1,-7,-3,5,-3,-2,8,-8,-9,10,8,-7,6,5,1,8,-6,-8,-6,-10,1,-1,-2,-2,3,-8,-2,10,-5,5,-3,-5,-2,7,-7,8,-8,5,-6,-2,2,10,5,4,-6,-3,4,9,10,-3,-2,-4,-7,-2,-7,2,4,-5,-5,-8,-8,2,-8,7,7,-6,-10,-9,9,-10,8,8,-7,1,-2,4,10,3,7,6,1,-2,2,7,-5,-10,10,-6,-10,10,-6,3],[8,-3,-7,10,-3,-8,6,-8,2,-5,-5,1,8,9,-4,9,2,1,-3,7,5,-10,-1,-5,6,7,-3,-9,2,6,-10,-1,8,-2,-5,4,-8,-5,5,-4,-4,-2,-3,-9,-9,-2,1,-3,-5,8,6,2,-8,-3,-8,4,1,-8,-9,9,1,6,5,9,-4,2,8,-6,-2,9,-7,2,9,2,7,5,-3,10,-2,-9,-9,-8,4,5,-2,-6,7,9,-7,5,2,-2,3,-4,4,-3,2,-9,-5,2,9,8,-3,-2,-8,4,7,9,-9,-4,4,-5,-9,5,-9,3,3,3,-10,6,-2,-10,-6,8,1,10,1,4,-2,-6,-5,10,-2,-8,8,10,6,-10,10,10,1,-7,-7,-4,1,1,-1,-8,4,3,9,3,-5,10,10,-7,9,-5,6,-7,-1,6,7,-3,9,-4,-3,-6,7,-4,-7,8,-4,4,4,8,8,-5,8,-8,8,-7,-9,7,-10,-1,-1,-5,-3,4,8,1,6,5,-8],[10,6,-4,2,-1,6,1,2,-4,-3,-2,-10,1,1,-9,10,2,7,-3,1,1,-5,-5,-8,-1,5,4,-6,-3,-2,3,-2,-9,3,5,-5,1,1,-8,3,10,3,-5,-10,8,-3,-3,8,-1,4,-6,4,-1,-1,2,8,-2,-7,-2,9,6,-10,4,-2,8,-3,-7,2,-10,6,-5,-7,5,-5,-8,6,-6,-6,4,-5,6,-9,-5,-2,1,8,-10,4,8,2,-6,3,-7,-10,6,5,5,8,2,4,6,3,6,3,9,-1,6,-4,-10,-3,-4,-10,-10,-9,-8,10,-5,-2,-8,-7,2,1,10,10,2,8,-10,4,-7,-4,4,-9,-7,-1,5,4,-4,5,2,3,9,-1,10,-10,-8,3,10,-2,2,2,1,-7,10,-10,9,8,7,-6,-5,-5,1,-7,-10,6,4,3,3,-4,-4,-7,10,-1,-5,5,1,4,-9,-5,-2,3,8,-3,6,5,-4,2,-10,-2,-8,-6,8,-5,1,-6,-10],[10,2,10,-1,-7,9,-8,2,3,-8,3,9,2,7,-4,6,-4,7,8,8,2,7,-8,1,-1,10,-4,-1,10,8,-4,8,-5,-1,-5,-8,-8,-1,4,-8,1,-8,-9,-5,6,5,-8,-7,9,5,8,-3,10,3,-5,8,10,-5,6,8,-3,-3,5,5,-9,10,-6,4,-8,-10,7,-1,6,6,5,-6,-4,-1,-9,4,9,-5,-6,2,5,7,2,9,-5,1,-8,10,6,-2,2,-4,10,5,-6,2,-9,-3,8,-10,-8,4,-8,9,-8,10,7,-10,-1,2,1,1,4,10,10,8,-1,-6,-7,-4,6,-6,5,-7,-10,-6,-7,-1,-2,7,-3,10,5,4,10,10,9,6,-9,-2,6,-10,-6,-3,3,10,5,9,-7,6,10,-3,10,-3,-6,10,5,-4,10,-9,9,7,3,-4,1,-10,-5,-8,-4,-4,7,10,-3,-3,2,-5,3,-5,-10,-7,-10,-9,-7,8,1,-2,5,10,-8,10,-3]], dtype = "int64")#candidate|6458|(7, 195)|const|int64
call_6457 = relay.TupleGetItem(func_3078_call(relay.reshape(const_6458.astype('int64'), [7, 195])), 2)
call_6459 = relay.TupleGetItem(func_3080_call(relay.reshape(const_6458.astype('int64'), [7, 195])), 2)
uop_6461 = relay.atanh(call_6457.astype('float32')) # shape=(7, 195)
uop_6463 = relay.atanh(call_6459.astype('float32')) # shape=(7, 195)
output = relay.Tuple([call_6441,const_6458,uop_6461,])
output2 = relay.Tuple([call_6442,const_6458,uop_6463,])
func_6464 = relay.Function([], output)
mod['func_6464'] = func_6464
mod = relay.transform.InferType()(mod)
output = func_6464()
func_6465 = relay.Function([], output)
mutated_mod['func_6465'] = func_6465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6206_call = mod.get_global_var('func_6206')
func_6208_call = mutated_mod.get_global_var('func_6208')
call_6495 = func_6206_call()
call_6496 = func_6206_call()
func_5187_call = mod.get_global_var('func_5187')
func_5189_call = mutated_mod.get_global_var('func_5189')
call_6507 = relay.TupleGetItem(func_5187_call(), 0)
call_6508 = relay.TupleGetItem(func_5189_call(), 0)
output = relay.Tuple([call_6495,call_6507,])
output2 = relay.Tuple([call_6496,call_6508,])
func_6514 = relay.Function([], output)
mod['func_6514'] = func_6514
mod = relay.transform.InferType()(mod)
mutated_mod['func_6514'] = func_6514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6514_call = mutated_mod.get_global_var('func_6514')
call_6515 = func_6514_call()
output = call_6515
func_6516 = relay.Function([], output)
mutated_mod['func_6516'] = func_6516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6179_call = mod.get_global_var('func_6179')
func_6181_call = mutated_mod.get_global_var('func_6181')
call_6540 = relay.TupleGetItem(func_6179_call(), 2)
call_6541 = relay.TupleGetItem(func_6181_call(), 2)
func_4827_call = mod.get_global_var('func_4827')
func_4830_call = mutated_mod.get_global_var('func_4830')
var_6568 = relay.var("var_6568", dtype = "float64", shape = (308,))#candidate|6568|(308,)|var|float64
call_6567 = func_4827_call(relay.reshape(var_6568.astype('float64'), [2, 11, 14]))
call_6569 = func_4827_call(relay.reshape(var_6568.astype('float64'), [2, 11, 14]))
func_1460_call = mod.get_global_var('func_1460')
func_1464_call = mutated_mod.get_global_var('func_1464')
var_6572 = relay.var("var_6572", dtype = "float64", shape = (7, 42))#candidate|6572|(7, 42)|var|float64
call_6571 = func_1460_call(relay.reshape(var_6572.astype('float64'), [7, 3, 14]), relay.reshape(var_6572.astype('float64'), [7, 3, 14]), )
call_6573 = func_1460_call(relay.reshape(var_6572.astype('float64'), [7, 3, 14]), relay.reshape(var_6572.astype('float64'), [7, 3, 14]), )
func_2347_call = mod.get_global_var('func_2347')
func_2350_call = mutated_mod.get_global_var('func_2350')
const_6592 = relay.const([-3,8,-4,8,7,-2,-9,-1,7,7,-10,-5,4,-2,8,4,2,7,-4,-4,6,-8,-8,9,-6,-3,-9,-9,10,4,9,-9,1,-7,-10,6,6,1,4,-1,-8,9,5,-10,7,2,3,9,9,1,-8,5,2,9,-8,6,-9,3,1,8,7,-8,-5,-4,-4,4,-1,-5,5,-7,-8,-10,8,-10,7,10,10,-2,-4,9,-1,-9,2,-5,10,1,-5,-5,-4,-3,-5,-3,-1,-1,-3,-3,3,-7,8,1,4,-7,3,-3,7,8,-6,-8,-7,-4,-9,-5,10,5,-3,-5,-10,-5,6,-4,1,6,4,-6,3,3,6,-2,9,-4,6,9,-4,3,-2,5,-8,3,-5,2,1,-7,1,-5,9,-5,1,-4,-10,-6,-3,-8,-2,-10,-1,2,-6,-3,10,-1,7,7,2,2,-8,6,7,-10,-4,5,-3,-9,8,5,-10,-1,2,3,-9,8,3,-7,-8,9,-9,7,-1,-10,10,9,2,9,7,-10,8,2,-3,-2,-9,-1,5,-10,-8,-7,6,10,-7,-3,-10,-9,-2,10,3,4,-2,10,-5,-6,-1,-3,1,4,-2,-2,-10,1,-3,7,2,10,8,-5,-2,-8,-6,-7,-4,-6,-8,9,9,-9,-2,10,8,9,-2,9,-7,-9,5,1,9,-4,-4,-4,-4,5,9,-1,7,-1,6,7,4,-6,1,8,3,-6,8,9,-3,9,2,-7,10,2,-7,-9,4,-3,3,7,-7,2,-3,7,-9,-7,4,2,1,2,-4,2,8,-2,-7,6,2,-7,-3,10,-1,-3,-1,1,-10,2,5,1,-9,4,-4,10,-10,-2,3,5,8,-9,2,1,-4,-7,8,2,-2,3,-9,-3,-2,-4,-6,-9,8,1,1,-3,6,-3,9,-10,-6,-9,8,7,-7,-4,-1,-7,-4,-10,-2,-9,-4,-3,-2,6,-9,-4,-6,-6,-2,-10,-5,4,7,4,7,-10,-8,6,7,7,-4,3,-9,-7,-1,-6,3,-8,1,2,7,-1,-6,-4,-8,8,-1,-3,10,-3,-8,7,-6,4,9,7,7,-1,-6,5,-6,-5,-4,9,-10,-4,1,2,6,-7,1,1,4,2,-6,4,-9,-9,7,6,-10,8,2,9,5,5,9,-5,-5,-3,-3,3,5,-7,-1,2,5,-3,1,7,7,3,5,9,6,-2,-10,-2,-10,9,-4,-3,4,-8,-9,10,-6,-1,2,4,3,-6,-3,-10,-9,-6,-10,4,6,-9,-8,10,4,8,1,-4,7,1,-10,5,-8,2,2,3,1,-3,-3,-6,2,4,5,-2,-10,6,-2,9,4,1,9,-3,6,-1,7,-7,-1,-6,1,-1,-1,-10,10,4,-1,7,8,10,6,-4,-1,3,4,-8,-7,5,-8,2,4,-9,10,-3,-7,-6,-8,-5,-3,-1,-10,-3,10,7,-3,-3,5,-10,-9,5,9,9,4,-6,-4,4,-8,1,7,5,6,-6,3,6,-2,9,4,1,-2,5,-6,10,-7,1,10,3,7,7,-7,3,7,1,8,7,8,7,-2,9,1,-1,-9,9,4,-7,2,-8,-10,8,2,-9,1,6,7,1,7,-1,6,10,7,-1,-7,-7,2,4,-5,6,-3,7,8,-5,10,1,5,8,-1,10,9,-3,-5,5,-4,-3,-3,-4,-8,8,-7,6,10,-6,4,-7,5,4,-10,7,-9,-8,1,-5,-3,9,-2,3,-10,3,7,8,1,-2,-2,5,-1,4,-7,3,2,1,6,5,5,1,-9,5,-1,-3,8,-4,2,-1,9,-10,-5,-6,-7,6,-1,5,5,2,-7,-1,-10,3,5,1,-7,6,2,-4,4,-4,-8,5,-8,-9,9,-9,-5,2,-8,5,-4,9,10,8,3,9,8,5,10,-3,6,-1,-6,-2,-4,2,-7,-5,-4,10,-4,1,4,9,1,-6,-8,9,-8,10,9,3,3,-4,-2,6,-5,7,2,7,10,10,10,1,4,3,3,1,3,-3,-10,-8,-6,6,1,-1,7,-8,-5,-7,10,2,6,-9,9,-4,3,-5,9,8,5,2,5,10,-8,-8,-7,-4,-6,-1,-7,5,7,2,9,5,-1,7,6,5,6,-4,6,5,-3,6,-9,1,-8,9,2,5,-8,9,-2,10,10,1,4,-5,-10,6,-3,-3,-7,-10,6,-2,8,10,8,7,6,1,2,6,8,-1,-8,-1,7,-3,7,-9,9,-6,-9,-2,-1,-4,10,6,1,-6,-2,-5,-10,-3,-6,-3,-2,-9,-4,-8,5,-9,-4,-10,2,6,-6,-4,9,-1,-8,7], dtype = "uint64")#candidate|6592|(880,)|const|uint64
call_6591 = func_2347_call(relay.reshape(const_6592.astype('uint64'), [11, 8, 10]), relay.reshape(const_6592.astype('uint64'), [11, 8, 10]), )
call_6593 = func_2347_call(relay.reshape(const_6592.astype('uint64'), [11, 8, 10]), relay.reshape(const_6592.astype('uint64'), [11, 8, 10]), )
output = relay.Tuple([call_6540,call_6567,var_6568,call_6571,var_6572,call_6591,const_6592,])
output2 = relay.Tuple([call_6541,call_6569,var_6568,call_6573,var_6572,call_6593,const_6592,])
func_6612 = relay.Function([var_6568,var_6572,], output)
mod['func_6612'] = func_6612
mod = relay.transform.InferType()(mod)
var_6613 = relay.var("var_6613", dtype = "float64", shape = (308,))#candidate|6613|(308,)|var|float64
var_6614 = relay.var("var_6614", dtype = "float64", shape = (7, 42))#candidate|6614|(7, 42)|var|float64
output = func_6612(var_6613,var_6614,)
func_6615 = relay.Function([var_6613,var_6614,], output)
mutated_mod['func_6615'] = func_6615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3851_call = mod.get_global_var('func_3851')
func_3853_call = mutated_mod.get_global_var('func_3853')
call_6683 = relay.TupleGetItem(func_3851_call(), 1)
call_6684 = relay.TupleGetItem(func_3853_call(), 1)
output = call_6683
output2 = call_6684
func_6690 = relay.Function([], output)
mod['func_6690'] = func_6690
mod = relay.transform.InferType()(mod)
mutated_mod['func_6690'] = func_6690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6690_call = mutated_mod.get_global_var('func_6690')
call_6691 = func_6690_call()
output = call_6691
func_6692 = relay.Function([], output)
mutated_mod['func_6692'] = func_6692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4070_call = mod.get_global_var('func_4070')
func_4071_call = mutated_mod.get_global_var('func_4071')
call_6835 = func_4070_call()
call_6836 = func_4070_call()
uop_6839 = relay.log10(call_6835.astype('float32')) # shape=(7, 7, 4)
uop_6841 = relay.log10(call_6836.astype('float32')) # shape=(7, 7, 4)
func_2842_call = mod.get_global_var('func_2842')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_6855 = relay.TupleGetItem(func_2842_call(relay.reshape(uop_6839.astype('float32'), [7, 7, 4])), 0)
call_6856 = relay.TupleGetItem(func_2845_call(relay.reshape(uop_6839.astype('float32'), [7, 7, 4])), 0)
output = relay.Tuple([uop_6839,call_6855,])
output2 = relay.Tuple([uop_6841,call_6856,])
func_6863 = relay.Function([], output)
mod['func_6863'] = func_6863
mod = relay.transform.InferType()(mod)
output = func_6863()
func_6864 = relay.Function([], output)
mutated_mod['func_6864'] = func_6864
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6925 = relay.var("var_6925", dtype = "float32", shape = (10, 4, 6))#candidate|6925|(10, 4, 6)|var|float32
uop_6926 = relay.acos(var_6925.astype('float32')) # shape=(10, 4, 6)
bop_6928 = relay.equal(uop_6926.astype('bool'), relay.reshape(var_6925.astype('bool'), relay.shape_of(uop_6926))) # shape=(10, 4, 6)
output = relay.Tuple([bop_6928,])
output2 = relay.Tuple([bop_6928,])
func_6936 = relay.Function([var_6925,], output)
mod['func_6936'] = func_6936
mod = relay.transform.InferType()(mod)
mutated_mod['func_6936'] = func_6936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6937 = relay.var("var_6937", dtype = "float32", shape = (10, 4, 6))#candidate|6937|(10, 4, 6)|var|float32
func_6936_call = mutated_mod.get_global_var('func_6936')
call_6938 = func_6936_call(var_6937)
output = call_6938
func_6939 = relay.Function([var_6937], output)
mutated_mod['func_6939'] = func_6939
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6983 = relay.const([[[0.210917],[-7.817247],[3.273546],[6.074933],[6.108616],[-8.444763],[6.514592],[3.210841],[3.963771],[-0.667140]]], dtype = "float32")#candidate|6983|(1, 10, 1)|const|float32
var_6984 = relay.var("var_6984", dtype = "float32", shape = (3, 10, 1))#candidate|6984|(3, 10, 1)|var|float32
bop_6985 = relay.divide(const_6983.astype('float32'), var_6984.astype('float32')) # shape=(3, 10, 1)
output = relay.Tuple([bop_6985,])
output2 = relay.Tuple([bop_6985,])
func_6990 = relay.Function([var_6984,], output)
mod['func_6990'] = func_6990
mod = relay.transform.InferType()(mod)
var_6991 = relay.var("var_6991", dtype = "float32", shape = (3, 10, 1))#candidate|6991|(3, 10, 1)|var|float32
output = func_6990(var_6991)
func_6992 = relay.Function([var_6991], output)
mutated_mod['func_6992'] = func_6992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3851_call = mod.get_global_var('func_3851')
func_3853_call = mutated_mod.get_global_var('func_3853')
call_6997 = relay.TupleGetItem(func_3851_call(), 1)
call_6998 = relay.TupleGetItem(func_3853_call(), 1)
var_6999 = relay.var("var_6999", dtype = "float32", shape = (7, 7, 4))#candidate|6999|(7, 7, 4)|var|float32
bop_7000 = relay.not_equal(call_6997.astype('bool'), relay.reshape(var_6999.astype('bool'), relay.shape_of(call_6997))) # shape=(7, 7, 4)
bop_7003 = relay.not_equal(call_6998.astype('bool'), relay.reshape(var_6999.astype('bool'), relay.shape_of(call_6998))) # shape=(7, 7, 4)
func_4749_call = mod.get_global_var('func_4749')
func_4751_call = mutated_mod.get_global_var('func_4751')
call_7008 = relay.TupleGetItem(func_4749_call(), 0)
call_7009 = relay.TupleGetItem(func_4751_call(), 0)
output = relay.Tuple([bop_7000,call_7008,])
output2 = relay.Tuple([bop_7003,call_7009,])
func_7013 = relay.Function([var_6999,], output)
mod['func_7013'] = func_7013
mod = relay.transform.InferType()(mod)
var_7014 = relay.var("var_7014", dtype = "float32", shape = (7, 7, 4))#candidate|7014|(7, 7, 4)|var|float32
output = func_7013(var_7014)
func_7015 = relay.Function([var_7014], output)
mutated_mod['func_7015'] = func_7015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3851_call = mod.get_global_var('func_3851')
func_3853_call = mutated_mod.get_global_var('func_3853')
call_7027 = relay.TupleGetItem(func_3851_call(), 1)
call_7028 = relay.TupleGetItem(func_3853_call(), 1)
output = relay.Tuple([call_7027,])
output2 = relay.Tuple([call_7028,])
func_7038 = relay.Function([], output)
mod['func_7038'] = func_7038
mod = relay.transform.InferType()(mod)
mutated_mod['func_7038'] = func_7038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7038_call = mutated_mod.get_global_var('func_7038')
call_7039 = func_7038_call()
output = call_7039
func_7040 = relay.Function([], output)
mutated_mod['func_7040'] = func_7040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5603_call = mod.get_global_var('func_5603')
func_5605_call = mutated_mod.get_global_var('func_5605')
call_7044 = relay.TupleGetItem(func_5603_call(), 0)
call_7045 = relay.TupleGetItem(func_5605_call(), 0)
output = relay.Tuple([call_7044,])
output2 = relay.Tuple([call_7045,])
func_7046 = relay.Function([], output)
mod['func_7046'] = func_7046
mod = relay.transform.InferType()(mod)
output = func_7046()
func_7047 = relay.Function([], output)
mutated_mod['func_7047'] = func_7047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6514_call = mod.get_global_var('func_6514')
func_6516_call = mutated_mod.get_global_var('func_6516')
call_7051 = relay.TupleGetItem(func_6514_call(), 1)
call_7052 = relay.TupleGetItem(func_6516_call(), 1)
output = call_7051
output2 = call_7052
func_7080 = relay.Function([], output)
mod['func_7080'] = func_7080
mod = relay.transform.InferType()(mod)
mutated_mod['func_7080'] = func_7080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7080_call = mutated_mod.get_global_var('func_7080')
call_7081 = func_7080_call()
output = call_7081
func_7082 = relay.Function([], output)
mutated_mod['func_7082'] = func_7082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5756_call = mod.get_global_var('func_5756')
func_5757_call = mutated_mod.get_global_var('func_5757')
call_7124 = func_5756_call()
call_7125 = func_5756_call()
output = relay.Tuple([call_7124,])
output2 = relay.Tuple([call_7125,])
func_7126 = relay.Function([], output)
mod['func_7126'] = func_7126
mod = relay.transform.InferType()(mod)
output = func_7126()
func_7127 = relay.Function([], output)
mutated_mod['func_7127'] = func_7127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7133 = relay.var("var_7133", dtype = "uint32", shape = ())#candidate|7133|()|var|uint32
var_7134 = relay.var("var_7134", dtype = "uint32", shape = (6, 2, 7))#candidate|7134|(6, 2, 7)|var|uint32
bop_7135 = relay.equal(var_7133.astype('bool'), var_7134.astype('bool')) # shape=(6, 2, 7)
uop_7142 = relay.exp(var_7134.astype('float64')) # shape=(6, 2, 7)
bop_7155 = relay.bitwise_and(var_7134.astype('uint32'), relay.reshape(uop_7142.astype('uint32'), relay.shape_of(var_7134))) # shape=(6, 2, 7)
func_5930_call = mod.get_global_var('func_5930')
func_5933_call = mutated_mod.get_global_var('func_5933')
const_7160 = relay.const([9,-7,-5,-10,-6,2,-6,-2,1,-8,-9,-10,-6,2,-10,-9,4,-8,10,-10,6,4,6,-6,-7,-9,-9,7,-3,-1,1,-1,-7,3,-6,-4,2,6,-1,4,-9,6,-1,5,-3,8,6,8,8,-3,-2,-1,-4,-6,-1,4,-3,-10,-5,-8,-1,4,-8,3,6,2,-2,4,-2,-10,1,7,-6,8,-1,-10,5,-2,-8,8,-2,2,7,-9,-8,-4,-4,-3,-7,2,7,4,7,4,-2,9,-7,7,9,-3,-8,-4,-9,3,-7,-5,6,-6,-5,8,5,3,-10,-5,8,-6,6,-7,8,-10,4,7,7,4,-4,-9,-2,10,-3,-1,-3,-7,6,4,5,-8,1,10,-9,-10,-7,-1,-3,2,-5,9,9,-7,-2,-10,-4,8,6,-5,-2,-9,8,-9,2,-9,6,3,5,-2,-10,6,3,-3,-3,5,5,-6,3,-4,-9,-1,10,-10,-5,-2,7,1,1,10,-4,9,6,-2,3,5,10,4,-2,-5,-7,4,-6,-5,-2,-2,9,-6,9,5,8,3,-7,-8,-1,10,3,-3,2,7,-4,-10,2,-9,6,4,-5,-1,-4,-5,-3,3,10,4,-6,6,2,5,2,7,-8,-3,8,9,-7,4,-1,6,7,-5,-5,-4,-7,-10,-3,-10,-8,5,-8,-5,-1,5,-10,-5,-4,-1,-1,5,4,-10,2,9,2,-5,8,-7,3,-1,6,-1,6,1,-8,7,2,10,-7,6,-3,-4,-3,10,-7,-10,-8,-7,-4,4,-5,-6,10,10,3,1,-9,6,7,9,-10,-9,1,-5,-4,-8,1,5,8,-1,3,8,6,-3,4,9,2,-2,-5,7,5,-6,9,-8,-9,9,-10,4,-3,-8,-1,-10,-6,6,-9,-9,-8,3,-8,-4,9,-9,-2,-4,1,1,9,-5,-4,-4,-1,9,10,9,-2,-3,8,-1,-4,-5,-5,7,8,8,-2,-4,5,-4,-7,3,8,2,7,-4,8,-9,6,8,-7,-5,-9,4,4,1,1,-1,-9,2,-8,-10,-8,9,5,7,2,-3,-10,-6,-4,-4,-2,-3,7,8,6,2,-7,7,6,5,3,-10,-4,-5,-5,3,-5,-8,-6,10,4,-3,10,-6,3,6,-1,8,5,6,-6,9,7,-4,4,4,-3,-3,-8,-1,10,8,-8,-9,-4,6,3,-9,-3,-5,4,-6,-8,-4,-10,9,4,3,6,6,-4,9,-8,-10,-1,7,-6,-4,6,3,3,-5,-9,-1,-10,-6,9,-4,2,-7,10,-8,-9,-3,10,-8,-7,-2,-3,5,1,-8,5,-7,-7,-1,8,-5,4,9,-3,-9,-4,-1,5,8,5,6,7,10,8,3,3,-1,6,-2,-1,-3,3,9,8,-4,5,-5,-3,-6,-8,-5,9,-7,9,5,-10,4,2,1,-3,5,5,10,-6,-9,7,5,-3,2,2,2,8,7,-1,10,-5,2,6,2,-10,6,6,-5,2,2,5,-7,-2,-2,5,9,-8,2,4,-6,4,4,-1,-10,6,-10,8,3,2,-4,-7,8,5,9,-3,-4,5,10,6,-3,-4,3,-10,1,-2,-10,-8,-4,10,2,6,-4,-5,1,4,6,-6,-9,5,-2,-5,-6,3,-7,3,8,-9,-2,-7,-8,8,-9,4,3,-8,-6,9,7,4,-5,-5,-6,-7,9,-3,5,10,8,-9,-3,5,-9,3,-6,-10,-4,6,-9,2,5,2,7,-3,6,-5,1,2,6,-6,4,3,-10,10,10,-5,7,4,-1,-10,-10,-10,7,-1,-7,5,-4,9,-5,-3,-3,1,-8,-6,3,8,5,4,-7,-4,3,-6,-8,-1,6,-10,-4,8,6,-3,-4,-4,-10,-8,5,-3,-3,-5,6,6,2,2,4,10,-8,1,-5,-8,5,-1,-1,-1,5,-7,-6,4,8,-3,-8,4,-5,7,-2,-6,10,-7,4,-5,-8,10,5,1,2,6,7,7,5,-6,6,3,-9,-6,2,10,4,-1,5,-2,6,-10,-8,-6,8,9,2,-1,4,-4,9,-6,5,1,1,-1,-1,-1,6,1,9,-2,-4,4,10,-6,-3,1,-2,-9,6,-10,-1,-6,-8,2,7,-10,5,-10,-3,6,-9,-3,-9,-3,-4,-2,6,9,2,-1,5,1,9,-7,-10,-8,9,-9,6,3,-7,-3,10,-6,5,-3,-3,4,-8,4,-3,-6,-2,1,8,-7,9,-9,4,-3,-7,3,3,-1,8,8,6,6,-10,7,10,-5,6,8,-3,2,7,1,-3,-2,10,2,5,-5,4,-3,7,-3,-5,-4,-10,-10,4,-9,-6,7,3,3,9,1,1,8,-5,3,-10,10,-7,-8,-4,5,-10,-7,4,-8,-7,6,6,-7,3,-3,-1,4,5,-7,1,-10,-6,3,-6,-5,-2,4,3,9,3,10,4,2,-5,8,-2,-6,-5,10,-2,8,-4,-1,4,-2,3,1,-5,7,-1,-6,3,-1,3,-4,4,8,-4,6,1,5,1,1,8,-6,1,1,-5,2,4,2,8,10,9,10,-4,-3,-2,1,-2,-10,-8,-7,-5,-1,-7,-9,-5,6,4,5,2,5,2,-3,-2,7,4,-2,-7,8,-8,-8,7,-6,-2,1,8,-8,-9,-7,2,10,10,-4,7,-10,10,-7,-3], dtype = "int16")#candidate|7160|(1008,)|const|int16
call_7159 = relay.TupleGetItem(func_5930_call(relay.reshape(const_7160.astype('int16'), [1008,])), 2)
call_7161 = relay.TupleGetItem(func_5933_call(relay.reshape(const_7160.astype('int16'), [1008,])), 2)
func_4291_call = mod.get_global_var('func_4291')
func_4293_call = mutated_mod.get_global_var('func_4293')
var_7181 = relay.var("var_7181", dtype = "float32", shape = (196,))#candidate|7181|(196,)|var|float32
call_7180 = relay.TupleGetItem(func_4291_call(relay.reshape(var_7181.astype('float32'), [7, 7, 4])), 1)
call_7182 = relay.TupleGetItem(func_4293_call(relay.reshape(var_7181.astype('float32'), [7, 7, 4])), 1)
bop_7186 = relay.less(bop_7155.astype('bool'), relay.reshape(bop_7135.astype('bool'), relay.shape_of(bop_7155))) # shape=(6, 2, 7)
output = relay.Tuple([call_7159,const_7160,call_7180,var_7181,bop_7186,])
output2 = relay.Tuple([call_7161,const_7160,call_7182,var_7181,bop_7186,])
func_7239 = relay.Function([var_7133,var_7134,var_7181,], output)
mod['func_7239'] = func_7239
mod = relay.transform.InferType()(mod)
mutated_mod['func_7239'] = func_7239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7239_call = mutated_mod.get_global_var('func_7239')
var_7241 = relay.var("var_7241", dtype = "uint32", shape = ())#candidate|7241|()|var|uint32
var_7242 = relay.var("var_7242", dtype = "uint32", shape = (6, 2, 7))#candidate|7242|(6, 2, 7)|var|uint32
var_7243 = relay.var("var_7243", dtype = "float32", shape = (196,))#candidate|7243|(196,)|var|float32
call_7240 = func_7239_call(var_7241,var_7242,var_7243,)
output = call_7240
func_7244 = relay.Function([var_7241,var_7242,var_7243,], output)
mutated_mod['func_7244'] = func_7244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4108_call = mod.get_global_var('func_4108')
func_4110_call = mutated_mod.get_global_var('func_4110')
call_7261 = relay.TupleGetItem(func_4108_call(), 0)
call_7262 = relay.TupleGetItem(func_4110_call(), 0)
var_7275 = relay.var("var_7275", dtype = "float64", shape = (12, 2, 4))#candidate|7275|(12, 2, 4)|var|float64
bop_7276 = relay.power(call_7261.astype('float64'), relay.reshape(var_7275.astype('float64'), relay.shape_of(call_7261))) # shape=(12, 2, 4)
bop_7279 = relay.power(call_7262.astype('float64'), relay.reshape(var_7275.astype('float64'), relay.shape_of(call_7262))) # shape=(12, 2, 4)
func_6514_call = mod.get_global_var('func_6514')
func_6516_call = mutated_mod.get_global_var('func_6516')
call_7284 = relay.TupleGetItem(func_6514_call(), 0)
call_7285 = relay.TupleGetItem(func_6516_call(), 0)
output = relay.Tuple([bop_7276,call_7284,])
output2 = relay.Tuple([bop_7279,call_7285,])
func_7289 = relay.Function([var_7275,], output)
mod['func_7289'] = func_7289
mod = relay.transform.InferType()(mod)
mutated_mod['func_7289'] = func_7289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7290 = relay.var("var_7290", dtype = "float64", shape = (12, 2, 4))#candidate|7290|(12, 2, 4)|var|float64
func_7289_call = mutated_mod.get_global_var('func_7289')
call_7291 = func_7289_call(var_7290)
output = call_7291
func_7292 = relay.Function([var_7290], output)
mutated_mod['func_7292'] = func_7292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_7313 = relay.TupleGetItem(func_2702_call(), 1)
call_7314 = relay.TupleGetItem(func_2703_call(), 1)
uop_7331 = relay.sigmoid(call_7313.astype('float32')) # shape=(7, 7, 4)
uop_7333 = relay.sigmoid(call_7314.astype('float32')) # shape=(7, 7, 4)
func_2842_call = mod.get_global_var('func_2842')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_7346 = relay.TupleGetItem(func_2842_call(relay.reshape(uop_7331.astype('float32'), [7, 7, 4])), 1)
call_7347 = relay.TupleGetItem(func_2845_call(relay.reshape(uop_7331.astype('float32'), [7, 7, 4])), 1)
output = relay.Tuple([uop_7331,call_7346,])
output2 = relay.Tuple([uop_7333,call_7347,])
func_7349 = relay.Function([], output)
mod['func_7349'] = func_7349
mod = relay.transform.InferType()(mod)
output = func_7349()
func_7350 = relay.Function([], output)
mutated_mod['func_7350'] = func_7350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2702_call = mod.get_global_var('func_2702')
func_2703_call = mutated_mod.get_global_var('func_2703')
call_7375 = relay.TupleGetItem(func_2702_call(), 1)
call_7376 = relay.TupleGetItem(func_2703_call(), 1)
output = relay.Tuple([call_7375,])
output2 = relay.Tuple([call_7376,])
func_7380 = relay.Function([], output)
mod['func_7380'] = func_7380
mod = relay.transform.InferType()(mod)
mutated_mod['func_7380'] = func_7380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7380_call = mutated_mod.get_global_var('func_7380')
call_7381 = func_7380_call()
output = call_7381
func_7382 = relay.Function([], output)
mutated_mod['func_7382'] = func_7382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6179_call = mod.get_global_var('func_6179')
func_6181_call = mutated_mod.get_global_var('func_6181')
call_7388 = relay.TupleGetItem(func_6179_call(), 3)
call_7389 = relay.TupleGetItem(func_6181_call(), 3)
output = call_7388
output2 = call_7389
func_7395 = relay.Function([], output)
mod['func_7395'] = func_7395
mod = relay.transform.InferType()(mod)
mutated_mod['func_7395'] = func_7395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7395_call = mutated_mod.get_global_var('func_7395')
call_7396 = func_7395_call()
output = call_7396
func_7397 = relay.Function([], output)
mutated_mod['func_7397'] = func_7397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4108_call = mod.get_global_var('func_4108')
func_4110_call = mutated_mod.get_global_var('func_4110')
call_7407 = relay.TupleGetItem(func_4108_call(), 1)
call_7408 = relay.TupleGetItem(func_4110_call(), 1)
func_5646_call = mod.get_global_var('func_5646')
func_5649_call = mutated_mod.get_global_var('func_5649')
const_7412 = relay.const([-9.014910,-4.998787,7.635463,-6.215560,-7.059375,-1.279215,7.984761,-1.562963,-8.894843,-3.125033,5.100443,-5.353328,2.389810,1.409160,-2.922452,-6.636582,-1.545646,0.355155,-3.341557,1.423040,-2.548826,-4.964591,3.167057,9.628459,-9.600308,2.975432,-6.971036,-9.565242,5.132384,-8.234521,-7.171917,-9.403823,8.629997,7.477686,-8.380048,-0.539964,-0.053312,-0.820748,9.794836,1.712553,4.073779,-1.384319,-2.314600,-1.049577,-5.079609,2.138948,1.715686,-0.202814,-4.474784,-2.539955,-3.610400,6.127526,-4.966473,3.660716,7.517929,6.254799,1.025442,-2.376028,-9.054297,-9.221728,9.371112,-5.630670,1.831153,2.298116,-2.916450,-8.229090,7.061441,7.013732,-8.136385,5.037826,-7.920917,-5.989204,-9.471537,6.211690,2.741499,-3.245906,-5.542831,5.461241,7.684591,7.951407,4.042851,-4.114164,8.074177,-0.961440,-7.167749,5.950939,-4.499717,4.741595,4.823700,-3.464558,-5.449126,7.815183,0.791831,-2.832830,-2.486739,-9.001607], dtype = "float64")#candidate|7412|(96,)|const|float64
call_7411 = relay.TupleGetItem(func_5646_call(relay.reshape(const_7412.astype('float64'), [12, 2, 4])), 0)
call_7413 = relay.TupleGetItem(func_5649_call(relay.reshape(const_7412.astype('float64'), [12, 2, 4])), 0)
func_5603_call = mod.get_global_var('func_5603')
func_5605_call = mutated_mod.get_global_var('func_5605')
call_7416 = relay.TupleGetItem(func_5603_call(), 0)
call_7417 = relay.TupleGetItem(func_5605_call(), 0)
func_3453_call = mod.get_global_var('func_3453')
func_3458_call = mutated_mod.get_global_var('func_3458')
const_7423 = relay.const([-1,-9,7,10,-9,-9,10,5,-5,-6,-10,-9,3,-1,-10,-4,-7,4,2,7,9,-4,-9,6,10,6,-10,-9,8,9,4,-1,-6,-8,-10,-2,8,-7,-6,1,-4,8,-2,9,6,-10,-1,3,5,-8,4,-6,-5,-1,8,9,-9,-8,-5,-2,4,3,-10,-7,-8,2,4,-6,10,1,1,10,8,-2,-4,4,-4,-5,3,-3], dtype = "uint8")#candidate|7423|(80,)|const|uint8
var_7424 = relay.var("var_7424", dtype = "int8", shape = ())#candidate|7424|()|var|int8
var_7425 = relay.var("var_7425", dtype = "int64", shape = (1365,))#candidate|7425|(1365,)|var|int64
call_7422 = relay.TupleGetItem(func_3453_call(relay.reshape(const_7423.astype('uint8'), [80, 1]), relay.reshape(var_7424.astype('int8'), []), relay.reshape(var_7425.astype('int64'), [7, 195]), ), 1)
call_7426 = relay.TupleGetItem(func_3458_call(relay.reshape(const_7423.astype('uint8'), [80, 1]), relay.reshape(var_7424.astype('int8'), []), relay.reshape(var_7425.astype('int64'), [7, 195]), ), 1)
output = relay.Tuple([call_7407,call_7411,const_7412,call_7416,call_7422,const_7423,var_7424,var_7425,])
output2 = relay.Tuple([call_7408,call_7413,const_7412,call_7417,call_7426,const_7423,var_7424,var_7425,])
func_7436 = relay.Function([var_7424,var_7425,], output)
mod['func_7436'] = func_7436
mod = relay.transform.InferType()(mod)
mutated_mod['func_7436'] = func_7436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7436_call = mutated_mod.get_global_var('func_7436')
var_7438 = relay.var("var_7438", dtype = "int8", shape = ())#candidate|7438|()|var|int8
var_7439 = relay.var("var_7439", dtype = "int64", shape = (1365,))#candidate|7439|(1365,)|var|int64
call_7437 = func_7436_call(var_7438,var_7439,)
output = call_7437
func_7440 = relay.Function([var_7438,var_7439,], output)
mutated_mod['func_7440'] = func_7440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4749_call = mod.get_global_var('func_4749')
func_4751_call = mutated_mod.get_global_var('func_4751')
call_7486 = relay.TupleGetItem(func_4749_call(), 0)
call_7487 = relay.TupleGetItem(func_4751_call(), 0)
func_1888_call = mod.get_global_var('func_1888')
func_1893_call = mutated_mod.get_global_var('func_1893')
var_7492 = relay.var("var_7492", dtype = "int64", shape = ())#candidate|7492|()|var|int64
const_7493 = relay.const([10,-10,-10,2,-1,2,-8,-8,-2,-7,-6,-4,-1,-8,-4,3,-5,-4,-1,-8,1,-4,9,-1,-9,-3,5,9,-4,8,-7,4,5,-5,-4,-3,-3,6,-10,-4,-5,3,8,-5,10,2,6,7,2,2,-7,3,-1,-1,-7,-2,-3,4,7,-4,5,-2,10,4,5,9,10,-1,2,4,6,6,10,-9,-1,4,8,9,-9,-1,-9,-6,2,-2,7,6,1,-3], dtype = "int64")#candidate|7493|(88,)|const|int64
const_7494 = relay.const([-10,6,4,-3,-2,-8,-7,-3,7,-10,2,4,-3,1,8,7,-10,-3,6,9,-8,-3,5,-10,1,-9,9,4,-10,7,1,-5,6,-7,-6,2,-3,-1,-1,9,10,7,-3,1,-6,-1,-4,-9,-6,5,-5,6,-2,-6,-7,-6,-5,6,4,3,-8,8,-1,-4,-3,9,-8,6,3,4,7,4,-3,-3,-10,6,1,9,10,2,-2,1,-7,1,-9,9,5,9,6,4,8,-1,5,-4,-3,8,7,-7,-6,-4,5,2,-7,-9,-3,-8,-4,-2,8,2,2,9,1,4,4,4,-3,1,-7,4,5,1,-8,-8,10,-10,-2,-2,4,-10,-7,-10,-1,10,-3,-6,-6,-8,3,-3,-8,5,-1,-2,-6,5,-7,4,8,-3,-10,-9,-9,1,3,-7,8,-10,1,-3,-4,-10,3,-8,10,2,-4,4,-8,-5,10,1,-6,-8,2,-5,2,-9,9,-8,1,-9,-10,8,10,8,-7,-10,9,9,-9,-10,-2,-6,8,-10,-3,-2,1,-1,-5,-1,-10,-5,-8,2,1,-6,3,-5,-5,8,3,-3,1,-7,2,1,10,-3,-2,-4,7,7,-6,-10,7,-1,1,-5,7,-1,10,3,7,8,8,-2,6,8,-10,-2,-10,7,4,-6,-4,2,-8,-5,8,4,-7,-5,-6,2,-3,4,7,5,-3,-4,7,-4,10,9,3,6,-2,1,-3,-5,-9,-10,-2,8,3,4,-8,4,-10,-6,10,2,-2,-1,10,-1,-7,-3,-5,4,-5,-7,-9,-2,6,3,-9,-8,-10,8,-5,8,2,-8,-6,-5,3,5,5,-10,-7,-8,7,-9,-3,8,-8,9,-10,6,-3,7,5,7,-1,-2,1,-7,6,-7,5,-8,-6,4,7,-3,3,4,4,-9,-10,3,10,10,-6,-6,4,3,-2,7,-8,-8,10,10,-5,9,1,7,-4,9,3,2,-7,9,-3,-9,-7,-2,10,1,1,3,5,-3,-4,-10,6,-6,8,-4,-2,-2,1,7,3,7,9,-4,-9,-3,9,-1,7,10,5,-6,9,7,9,-1,2,-6,9,7,-9,10,6,-5,-1,8,-10,-2,-10,1,4,4,2,-9,10,-9,-8,6,-2,-7,-7,8,9,8,-10,-1,-1,-2,-4,1,7,-6,-1,-1,5,-6,4,10,6,5,7,2,-4,10,-5,4,3,9,2,4,7,-8,6,4,-5,9,8,9,-6,-10,2,-5,3,8,3,5,-4,10,-2,-1,5,9,3,-3,-9,-4,-6,5,-2,-7,6,4,4,9,8,2,-2,-5,1,6,3,-10,-8,8,-9,-8,8,5,5,7,6,7,2,-6,1,4,3,-3,-2,-2,8,6,-1,-8,-4,2,-6,-9,10,-5,9,-7,7,3,10,10,5,-4,6,-5,-8,-2,5,-7,9,7,1,-8,3,8,7,1,-4,10,-8,-2,-3,3,6,-4,9,-10,-5,-3,-2,-2,-8,2,-10,4,9,-4,-10,8,-4,10,-6,-8,-1,-1,-9,-1,-8,3,-5,-3,2,-5,-4,-8,-7,-2,1,4,-10,-4,-10,7,5,-3,8,-5,5,5], dtype = "uint64")#candidate|7494|(600,)|const|uint64
call_7491 = relay.TupleGetItem(func_1888_call(relay.reshape(var_7492.astype('int64'), []), relay.reshape(const_7493.astype('int64'), [11, 8, 1]), relay.reshape(const_7494.astype('uint64'), [600,]), ), 1)
call_7495 = relay.TupleGetItem(func_1893_call(relay.reshape(var_7492.astype('int64'), []), relay.reshape(const_7493.astype('int64'), [11, 8, 1]), relay.reshape(const_7494.astype('uint64'), [600,]), ), 1)
uop_7496 = relay.cosh(call_7491.astype('float32')) # shape=(11, 8, 1)
uop_7498 = relay.cosh(call_7495.astype('float32')) # shape=(11, 8, 1)
func_5287_call = mod.get_global_var('func_5287')
func_5290_call = mutated_mod.get_global_var('func_5290')
const_7500 = relay.const([-1.619852,1.738142,-9.019931,7.117762,-1.618871,5.196992,3.348986,-3.407854,-5.924294,-2.553979,-0.594765,9.179175,8.819926,-7.635645,6.620338,-9.654029,2.281485,8.573509,-6.934267,7.357219,-9.267321,-2.600871,-4.758267,-6.446073,-4.303190,-4.498986,-3.595074,6.194858,-0.569318,-5.023462,8.879936,7.486718,-9.136493,6.845938,4.476592,0.930811,9.490217,3.671963,-1.009767,-2.506795,-7.406329,8.636303,-0.477029,5.340795,1.727995,-5.910553,-9.784419,1.499751,-1.307549,-0.664978,9.217383,-3.079987,9.189127,-4.519569,5.606037,-7.084869,8.419840,-7.065072,-0.682883,-3.538518,-9.354994,6.150410,-7.381724,0.044603,0.198020,-7.846766,-6.977871,9.928237,-8.195299,1.773120,8.089409,-2.306589,-7.080941,-6.948662,-8.073199,-9.456895,-0.751376,1.940563,-8.329470,4.111816,-2.258290,-7.712549,-4.529228,-4.122109,4.393712,2.973137,-3.223601,2.673528,-3.086985,5.410554,-6.124062,3.496256,3.175355,6.690366,-3.600968,5.608949,-4.423673,2.246625,-1.899736,4.828646,9.978559,-8.499115,-0.728252,-8.578233,8.234192,8.273240,9.806439,-7.712832,-6.887506,-1.617709,7.769447,9.062146,5.458511,-4.890687,8.116880,5.781050,-1.918325,-4.875242,9.525810,-6.503736,-6.959805,-7.067947,-4.971829,4.243126,-7.231517,0.328077,5.043010,9.400935,3.509821,-3.587305,-6.746836,-1.881194,1.935609,3.495217,7.698195,-0.306272,-3.367455,-7.896110,3.783202,2.316547,9.828082,8.418698,6.159424,-8.396831,4.138023,6.693993,-2.940859,-9.630551,-9.292789,7.824390,7.338547,-3.214114,-6.866150,9.357237,-8.735598,-8.558908,0.370712,-2.304039,-5.378159,-7.868632,-1.719328,5.977498,3.829937,-6.831025,-5.477930,5.333313,6.085321,1.520381,-5.482754,-1.937992,7.785505,9.295546,-8.724516,0.415227,-1.438120,-7.811249,-9.765613,5.870309,-6.369830,8.374509,7.607806,-3.027769,-6.722182,8.680552,-9.560878,7.519258,-4.743951,3.507725,1.036410,0.661775,-2.404525,-8.778738,-9.956546,-0.909186,5.699433,3.676982,-5.760019,-9.270431,3.878393,-8.980942,9.755174,5.817177,-1.842341,-1.858557,8.381212,0.029606,-9.708854,-7.919039,4.255951,9.518680,9.885961,-8.451568,-3.638385,-7.361300,-9.845867,-5.369895,4.381739,6.766129,-5.759126,4.256341,2.377145,9.612948,-2.085350,-2.339597,-9.615677,-4.197649,-1.241196,8.014827,9.921535,-0.797454,-5.350756,9.212582,-9.480760,6.598752,3.792112,9.980876,4.101810,-4.513497,-0.117603,-4.838811,-3.764963,-0.768325,6.239410,9.508994,-3.560153,-3.198463,-2.242239,-6.610755,-7.969253,1.543680,-8.207681,-7.787640,0.396104,4.477575,-9.487823,-4.899230,-7.949040,7.688338,4.404562,6.198076,0.116785,-9.337489,1.677495,-0.909356,5.221008,5.839988,-1.560093,5.613931,-0.741626,-8.088478,-2.901595,7.356278,1.969602,-9.490872,-7.483567,-4.898486,0.527131,5.993929,4.766253,-6.759743,-7.749790,-4.098773,-6.850781,-8.664911,-4.493430,4.105453,-4.359117,-4.989623,6.556753,-5.456935,-9.677935,6.804618,9.935543,-6.948456], dtype = "float64")#candidate|7500|(294,)|const|float64
call_7499 = relay.TupleGetItem(func_5287_call(relay.reshape(const_7494.astype('uint64'), [600,]), relay.reshape(const_7500.astype('float64'), [294,]), ), 0)
call_7501 = relay.TupleGetItem(func_5290_call(relay.reshape(const_7494.astype('uint64'), [600,]), relay.reshape(const_7500.astype('float64'), [294,]), ), 0)
output = relay.Tuple([call_7486,var_7492,const_7493,const_7494,uop_7496,call_7499,const_7500,])
output2 = relay.Tuple([call_7487,var_7492,const_7493,const_7494,uop_7498,call_7501,const_7500,])
func_7511 = relay.Function([var_7492,], output)
mod['func_7511'] = func_7511
mod = relay.transform.InferType()(mod)
mutated_mod['func_7511'] = func_7511
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7512 = relay.var("var_7512", dtype = "int64", shape = ())#candidate|7512|()|var|int64
func_7511_call = mutated_mod.get_global_var('func_7511')
call_7513 = func_7511_call(var_7512)
output = call_7513
func_7514 = relay.Function([var_7512], output)
mutated_mod['func_7514'] = func_7514
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7516 = relay.var("var_7516", dtype = "float64", shape = (7, 15, 14))#candidate|7516|(7, 15, 14)|var|float64
uop_7517 = relay.cosh(var_7516.astype('float64')) # shape=(7, 15, 14)
var_7520 = relay.var("var_7520", dtype = "float64", shape = (7, 15, 14))#candidate|7520|(7, 15, 14)|var|float64
bop_7521 = relay.minimum(uop_7517.astype('uint64'), relay.reshape(var_7520.astype('uint64'), relay.shape_of(uop_7517))) # shape=(7, 15, 14)
func_6221_call = mod.get_global_var('func_6221')
func_6222_call = mutated_mod.get_global_var('func_6222')
call_7530 = relay.TupleGetItem(func_6221_call(), 0)
call_7531 = relay.TupleGetItem(func_6222_call(), 0)
var_7532 = relay.var("var_7532", dtype = "uint64", shape = (7, 15, 14))#candidate|7532|(7, 15, 14)|var|uint64
bop_7533 = relay.equal(bop_7521.astype('bool'), relay.reshape(var_7532.astype('bool'), relay.shape_of(bop_7521))) # shape=(7, 15, 14)
output = relay.Tuple([call_7530,bop_7533,])
output2 = relay.Tuple([call_7531,bop_7533,])
func_7538 = relay.Function([var_7516,var_7520,var_7532,], output)
mod['func_7538'] = func_7538
mod = relay.transform.InferType()(mod)
mutated_mod['func_7538'] = func_7538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7538_call = mutated_mod.get_global_var('func_7538')
var_7540 = relay.var("var_7540", dtype = "float64", shape = (7, 15, 14))#candidate|7540|(7, 15, 14)|var|float64
var_7541 = relay.var("var_7541", dtype = "float64", shape = (7, 15, 14))#candidate|7541|(7, 15, 14)|var|float64
var_7542 = relay.var("var_7542", dtype = "uint64", shape = (7, 15, 14))#candidate|7542|(7, 15, 14)|var|uint64
call_7539 = func_7538_call(var_7540,var_7541,var_7542,)
output = call_7539
func_7543 = relay.Function([var_7540,var_7541,var_7542,], output)
mutated_mod['func_7543'] = func_7543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3851_call = mod.get_global_var('func_3851')
func_3853_call = mutated_mod.get_global_var('func_3853')
call_7584 = relay.TupleGetItem(func_3851_call(), 0)
call_7585 = relay.TupleGetItem(func_3853_call(), 0)
func_3078_call = mod.get_global_var('func_3078')
func_3080_call = mutated_mod.get_global_var('func_3080')
var_7591 = relay.var("var_7591", dtype = "int64", shape = (7, 195))#candidate|7591|(7, 195)|var|int64
call_7590 = relay.TupleGetItem(func_3078_call(relay.reshape(var_7591.astype('int64'), [7, 195])), 1)
call_7592 = relay.TupleGetItem(func_3080_call(relay.reshape(var_7591.astype('int64'), [7, 195])), 1)
const_7595 = relay.const([[[False,True,False,True,False,False,True,True,False,True,False,False,False,False,False],[True,True,True,True,False,False,True,True,False,True,False,True,True,True,False],[True,True,False,False,False,False,False,True,True,False,False,False,True,False,False],[True,False,False,True,True,False,True,True,True,True,False,True,True,True,False],[True,True,False,True,True,False,True,True,False,True,True,False,True,False,True],[True,False,True,True,True,False,True,False,True,False,True,False,False,False,True],[False,False,False,False,True,True,True,True,False,True,False,False,True,True,False]],[[False,False,False,True,False,True,False,True,True,True,False,True,True,False,True],[True,False,True,True,True,True,True,False,False,True,True,False,True,False,True],[False,True,True,False,False,True,False,False,True,True,False,True,False,True,True],[False,False,True,True,False,False,False,True,False,False,False,True,False,False,False],[True,False,True,True,False,True,False,False,False,True,False,False,False,False,True],[True,False,False,True,False,False,True,False,True,False,True,True,True,True,True],[True,True,True,False,False,False,False,False,False,False,False,False,False,False,True]],[[True,False,True,True,True,True,True,False,False,False,False,True,False,False,False],[True,True,True,True,False,True,True,False,False,True,False,False,False,False,False],[True,True,False,False,True,True,False,False,False,False,True,False,True,True,False],[True,False,False,True,True,False,False,False,False,False,False,False,False,False,False],[True,True,True,True,True,False,True,True,True,True,True,False,True,False,True],[False,False,True,False,True,True,False,True,True,False,False,True,False,False,True],[False,True,False,True,True,False,False,False,True,True,True,True,True,False,True]],[[False,False,True,True,False,False,False,False,False,False,False,False,True,False,False],[True,False,False,True,False,True,True,False,True,True,True,False,False,False,False],[True,False,True,True,True,True,True,False,False,True,False,False,True,True,True],[False,False,True,False,False,True,True,True,True,False,False,False,False,False,False],[False,False,False,True,True,False,True,False,False,True,False,False,True,True,True],[False,True,False,False,True,False,True,False,True,True,False,False,True,False,False],[False,True,False,False,False,True,False,True,False,False,False,False,False,False,True]],[[False,False,True,False,False,False,False,False,True,True,True,True,True,False,False],[False,False,True,False,True,True,False,True,True,False,False,True,False,False,True],[True,False,False,False,False,False,True,False,False,False,False,True,True,True,False],[True,True,False,False,False,True,False,False,True,True,False,True,False,False,True],[False,True,False,False,False,False,False,True,True,True,True,True,False,False,False],[False,False,False,True,False,False,False,False,False,True,True,False,False,False,False],[False,False,True,False,False,True,False,False,False,True,True,True,False,False,False]],[[True,False,False,True,True,False,True,False,True,True,True,False,True,False,False],[True,False,False,False,False,False,False,False,True,False,False,False,False,False,False],[False,True,True,False,False,False,False,True,False,True,False,False,False,True,False],[False,False,False,True,True,False,True,True,False,False,True,False,True,True,True],[True,True,False,False,True,True,True,False,False,True,True,True,True,True,False],[True,False,True,True,True,False,True,False,True,False,True,False,False,False,False],[True,True,True,False,False,True,True,True,True,True,False,False,False,False,False]],[[True,True,False,False,True,True,False,False,True,True,False,False,True,True,False],[True,False,False,True,False,False,False,True,True,True,True,True,True,True,True],[True,False,True,True,False,False,False,False,False,False,True,True,False,True,False],[True,False,False,True,True,True,True,True,False,False,False,True,True,False,True],[True,True,True,False,True,False,False,True,False,False,True,False,True,False,True],[True,True,True,False,False,True,True,True,False,True,True,True,True,False,True],[False,True,False,True,True,True,True,True,True,False,False,False,False,True,False]],[[True,True,True,False,True,True,True,False,False,False,True,True,True,False,False],[False,False,True,False,False,True,False,True,False,True,True,False,True,True,False],[False,False,True,True,True,False,True,False,False,True,False,True,True,True,False],[True,True,False,False,False,False,True,False,False,False,True,True,False,False,True],[False,False,True,True,False,False,True,True,True,True,False,True,True,True,True],[True,False,False,True,True,False,False,False,False,False,False,True,True,True,False],[False,True,False,False,True,False,False,False,True,True,False,False,True,True,True]],[[False,False,False,False,True,True,True,True,True,True,True,False,True,True,True],[True,True,False,True,True,True,False,False,False,True,True,False,True,False,True],[True,False,True,True,True,False,False,False,False,True,True,True,True,False,False],[False,True,False,True,True,True,False,True,True,False,False,True,False,False,True],[True,True,False,False,False,True,True,False,True,True,True,False,False,True,True],[True,True,False,True,False,True,False,True,False,False,True,True,True,False,True],[False,True,False,False,False,False,True,True,False,False,False,True,True,False,False]],[[False,True,False,False,False,False,False,True,True,False,True,True,True,False,True],[False,False,False,False,True,False,False,False,True,False,True,True,False,False,False],[False,False,True,False,False,False,True,False,True,False,True,False,True,False,False],[False,True,False,True,True,True,True,False,False,True,False,True,False,False,True],[False,True,True,False,True,True,False,False,False,True,True,True,True,False,True],[True,True,False,True,False,False,True,True,False,True,False,False,False,True,True],[True,True,False,False,True,True,True,True,False,True,False,True,False,True,True]],[[False,False,False,False,False,False,False,True,False,False,False,False,True,False,True],[False,True,True,False,True,False,True,False,False,True,False,False,False,False,False],[False,False,False,False,True,False,True,True,True,True,False,True,True,True,True],[True,True,False,False,True,True,False,False,False,False,False,False,True,False,False],[True,False,True,True,True,False,False,False,True,True,True,True,True,False,False],[False,True,True,True,True,False,False,False,True,False,False,True,False,True,True],[True,False,False,False,False,True,False,False,True,True,True,False,True,False,False]],[[True,True,False,True,False,True,True,False,True,False,True,False,True,True,True],[True,False,False,True,False,False,False,False,False,True,False,True,True,True,False],[True,False,True,True,True,True,True,True,True,False,True,False,False,True,False],[False,False,False,False,True,True,False,True,True,False,False,True,True,True,False],[True,False,True,False,False,False,True,True,True,True,True,True,True,False,False],[True,False,False,False,False,True,True,False,False,False,False,False,False,True,True],[False,True,True,True,True,True,False,True,False,True,False,False,False,True,False]],[[False,True,False,False,True,False,True,False,False,True,False,False,True,False,True],[False,True,False,False,False,False,True,False,True,False,False,True,False,False,False],[False,True,True,False,True,False,False,True,False,False,False,True,False,False,True],[True,False,False,False,False,True,False,False,True,True,False,True,False,False,False],[False,False,True,False,False,False,False,False,True,True,False,False,False,False,False],[True,True,False,False,True,True,True,True,True,False,False,True,False,False,True],[False,True,True,True,True,True,True,True,True,True,False,True,True,False,True]]], dtype = "bool")#candidate|7595|(13, 7, 15)|const|bool
bop_7596 = relay.multiply(call_7590.astype('uint16'), relay.reshape(const_7595.astype('uint16'), relay.shape_of(call_7590))) # shape=(13, 7, 15)
bop_7599 = relay.multiply(call_7592.astype('uint16'), relay.reshape(const_7595.astype('uint16'), relay.shape_of(call_7592))) # shape=(13, 7, 15)
output = relay.Tuple([call_7584,var_7591,bop_7596,])
output2 = relay.Tuple([call_7585,var_7591,bop_7599,])
F = relay.Function([var_7591,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7591,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

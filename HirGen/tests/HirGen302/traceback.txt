==========mod==========
#[version = "0.0.5"]
def @func_15988(%var_15975: Tensor[(12, 4, 3), float32]) -> Tensor[(12, 4, 3), float32] {
  %0 = cast(%var_15975, dtype="float32") /* ty=Tensor[(12, 4, 3), float32] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(12, 4, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 4, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 3), float32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%2, %3) /* ty=Tensor[(12, 4, 3), float32] */
}

def @func_9548() -> Tensor[(16, 13, 14), uint16] {
  %4 = @func_7760() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %4.0
}

def @func_12713(%var_12674: Tensor[(11, 10, 11), float64]) -> (Tensor[(11, 10, 11), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %5 = cast(%var_12674, dtype="float64") /* ty=Tensor[(11, 10, 11), float64] */;
  %6 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %7 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %8 = @func_7285() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %9 = @func_7285() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %10 = log2(%5) /* ty=Tensor[(11, 10, 11), float64] */;
  %11 = %6.0;
  %12 = %7.0;
  %13 = %8.0;
  %14 = %9.0;
  (%10, %11, %12, %13, %14)
}

def @func_4601(%var_4589: Tensor[(1078), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool]) {
  %15 = @func_4198() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %16 = cast(%var_4589, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %17 = cast(%var_4589, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %18 = reshape(%16, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
  %19 = reshape(%17, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
  %20 = @func_3093(%18, %19) /* ty=(Tensor[(7, 11, 14), bool],) */;
  %21 = %15.0;
  %22 = %20.0;
  (%21, %22, %var_4589)
}

def @func_8324() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  %23 = @func_4959() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %24 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %25 = %24.1;
  %26 = cast(%25, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %27 = reshape(%26, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %28 = @func_6081(%27) /* ty=(Tensor[(16, 13, 14), bool],) */;
  %29 = %23.0;
  %30 = %28.0;
  (%29, %25, %30)
}

def @func_13226() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 9, 10), uint8], Tensor[(720, 2), uint64], Tensor[(16, 13, 14), uint16]) {
  %31 = @func_2720() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(720, 2), uint64] */, dtype="uint64") /* ty=Tensor[(720, 2), uint64] */;
  %33 = reshape(%32, newshape=[16, 9, 10]) /* ty=Tensor[(16, 9, 10), uint64] */;
  %34 = @func_4991(%33) /* ty=(Tensor[(16, 9, 10), uint8], Tensor[(16, 13, 14), uint16]) */;
  %35 = @func_11893() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %36 = @func_10395() /* ty=Tensor[(16, 13, 14), uint16] */;
  %37 = %31.0;
  %38 = %34.0;
  %39 = %35.0;
  (%36, %37, %38, meta[relay.Constant][1] /* ty=Tensor[(720, 2), uint64] */, %39)
}

def @func_10036() -> (Tensor[(16, 13, 14), uint16],) {
  %40 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %41 = %40.0;
  (%41,)
}

def @func_12735() -> (Tensor[(16, 13, 14), uint16],) {
  %42 = @func_6867() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %43 = %42.1;
  (%43,)
}

def @func_11856() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %44 = @func_3534() /* ty=Tensor[(16, 13, 14), uint16] */;
  %45 = @func_6055() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%44, %45)
}

def @func_10928() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %46 = @func_3501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
  %47 = @func_6368() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(416), float64]) */;
  %48 = %46.0;
  %49 = %47.1;
  (%48, %49)
}

def @func_7305() -> (Tensor[(16, 13, 14), uint16],) {
  %50 = @func_3732() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%50,)
}

def @func_2851(%var_2840: Tensor[(7, 7, 10), uint32]) -> Tensor[(7, 7, 10), bool] {
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 7, 1), uint32] */, dtype="bool") /* ty=Tensor[(7, 7, 1), bool] */;
  %52 = cast(%var_2840, dtype="bool") /* ty=Tensor[(7, 7, 10), bool] */;
  greater_equal(%51, %52) /* ty=Tensor[(7, 7, 10), bool] */
}

def @func_5922() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %53 = @func_5672() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %54 = @func_4531() /* ty=Tensor[(16, 13, 14), uint16] */;
  %55 = %53.0;
  (%54, %55)
}

def @func_6368() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(416), float64]) {
  %56 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %57 = cast(meta[relay.Constant][3] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
  %58 = cast(meta[relay.Constant][3] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
  %59 = reshape(%57, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int16] */;
  %60 = reshape(%58, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int16] */;
  %61 = @func_2294(%59, %60) /* ty=Tensor[(2, 16, 13), bool] */;
  %62 = cast(%61, dtype="float64") /* ty=Tensor[(2, 16, 13), float64] */;
  %63 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(416), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %64 = cast(meta[relay.Constant][3] /* ty=Tensor[(416), int16] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?), float64] */;
  %66 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
  %67 = %56.1;
  %68 = power(%64, %65) /* ty=Tensor[(416), float64] */;
  (%66, %67, %68)
}

def @func_849() -> (Tensor[(16, 13, 14), uint16],) {
  %69 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %70 = %69.0;
  (%70,)
}

def @func_10891() -> Tensor[(16, 13, 14), uint16] {
  %71 = @func_3882() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %71.0
}

def @func_528(%var_500: Tensor[(3, 14, 7), float64], %var_501: Tensor[(3, 14, 7), float64]) -> Tensor[(3, 14, 7), float32] {
  %72 = cast(%var_501, dtype="float64") /* ty=Tensor[(3, 14, 7), float64] */;
  %73 = shape_of(%var_500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%var_500, dtype="float64") /* ty=Tensor[(3, 14, 7), float64] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %76 = power(%74, %75) /* ty=Tensor[(3, 14, 7), float64] */;
  %77 = cast(%76, dtype="float32") /* ty=Tensor[(3, 14, 7), float32] */;
  log2(%77) /* ty=Tensor[(3, 14, 7), float32] */
}

def @func_14006(%var_13972: Tensor[(11, 13, 13), float32]) -> (Tensor[(16, 13, 14), uint16], Tensor[(11, 13, 13), float64]) {
  %78 = @func_4357() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %79 = @func_9766() /* ty=Tensor[(11, 13, 13), float32] */;
  %80 = cast(%var_13972, dtype="float64") /* ty=Tensor[(11, 13, 13), float64] */;
  %81 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%79, dtype="float64") /* ty=Tensor[(11, 13, 13), float64] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %84 = divide(%82, %83) /* ty=Tensor[(11, 13, 13), float64] */;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(11, 13, 13), float64] */;
  %86 = shape_of(%var_13972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%var_13972, dtype="float64") /* ty=Tensor[(11, 13, 13), float64] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %89 = %78.0;
  %90 = mod(%87, %88) /* ty=Tensor[(11, 13, 13), float64] */;
  (%89, %90)
}

def @func_4462(%var_4417: Tensor[(100), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100), uint8], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %91 = cast(meta[relay.Constant][4] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %92 = reshape(%91, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
  %93 = @func_2650(%92) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(5, 5, 4), float32]) */;
  %94 = cast(%var_4417, dtype="uint8") /* ty=Tensor[(100), uint8] */;
  %95 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(100), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %96 = cast(meta[relay.Constant][4] /* ty=Tensor[(100), float64] */, dtype="uint8") /* ty=Tensor[(100), uint8] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %98 = @func_3127() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %99 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
  %100 = %93.0;
  %101 = @func_3534() /* ty=Tensor[(16, 13, 14), uint16] */;
  %102 = add(%96, %97) /* ty=Tensor[(100), uint8] */;
  %103 = %98.0;
  %104 = @func_3534() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%99, %100, %101, %102, %103, %104)
}

def @func_425() -> (Tensor[(16, 13, 14), uint16],) {
  %105 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %106 = %105.0;
  (%106,)
}

def @func_3026() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  %107 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %108 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %109 = @func_2552() /* ty=Tensor[(16, 13, 14), uint16] */;
  %110 = %107.0;
  %111 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
  %112 = %108.0;
  (%109, %110, %111, %112)
}

def @func_5323() -> (Tensor[(4, 5, 2), float64], Tensor[(16, 13, 14), uint16]) {
  %113 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1, 2), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 2), float64] */;
  %114 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 5, 2), float64] */, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
  %115 = maximum(%113, %114) /* ty=Tensor[(4, 5, 2), float64] */;
  %116 = @func_588() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%115, %116)
}

def @func_14407() -> Tensor[(16, 13, 14), uint16] {
  %117 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %117.2
}

def @func_16114() -> (Tensor[(16, 13, 14), uint16],) {
  %118 = @func_15368() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %119 = %118.3;
  (%119,)
}

def @func_5697() -> Tensor[(16, 13, 14), uint16] {
  %120 = @func_5672() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %120.0
}

def @func_5861(%var_5850: Tensor[(8, 8, 14), float64], %var_5851: Tensor[(8, 8, 14), float64]) -> (Tensor[(8, 8, 14), float64],) {
  %121 = cast(%var_5851, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
  %122 = shape_of(%var_5850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_5850, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %125 = mod(%123, %124) /* ty=Tensor[(8, 8, 14), float64] */;
  (%125,)
}

def @func_5224() -> Tensor[(16, 13, 14), bool] {
  %126 = @func_3501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
  %126.1
}

def @func_7706() -> Tensor[(16, 13, 14), uint16] {
  @func_3534() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_8488() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %127 = @func_4825() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %128 = @func_8324() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %129 = %127.0;
  %130 = %128.0;
  (%129, %130)
}

def @func_10386() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %131 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %132 = @func_2940() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %133 = %131.0;
  %134 = %132.0;
  (%133, %134)
}

def @func_2178() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  %135 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %136 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %137 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %138 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %139 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %140 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %141 = %135.0;
  %142 = %136.0;
  %143 = %137.1;
  %144 = %138.0;
  %145 = %139.0;
  %146 = %140.0;
  (%141, %142, %143, %144, %145, %146)
}

def @func_13652() -> (Tensor[(16, 13, 14), uint16],) {
  %147 = @func_3882() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %148 = %147.0;
  (%148,)
}

def @func_6036() -> (Tensor[(15, ?, 12), uint8], Tensor[(15, 1, 12), float32], Tensor[(16, 13, 14), bool]) {
  %149 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(15, 1, 12), uint8] */;
  %150 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(15, 1, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(meta[relay.Constant][7] /* ty=Tensor[(15, 1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(15, 1, 12), uint8] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %153 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 1, 12), uint8] */, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
  %154 = @func_2348() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %155 = bitwise_and(%151, %152) /* ty=Tensor[(15, ?, 12), uint8] */;
  %156 = asinh(%153) /* ty=Tensor[(15, 1, 12), float32] */;
  %157 = %154.0;
  (%155, %156, %157)
}

def @func_16058() -> (Tensor[(16, 13, 14), uint16],) {
  %158 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %159 = %158.1;
  (%159,)
}

def @func_14944() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %160 = @func_13652() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %161 = %160.0;
  %162 = @func_9082() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%161, %162)
}

def @func_9942(%var_9924: Tensor[(1078), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool], Tensor[(16, 13, 14), uint16]) {
  %163 = cast(%var_9924, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %164 = cast(%var_9924, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %165 = reshape(%163, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
  %166 = reshape(%164, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
  %167 = @func_3093(%165, %166) /* ty=(Tensor[(7, 11, 14), bool],) */;
  %168 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %169 = @func_5790() /* ty=Tensor[(16, 13, 14), uint16] */;
  %170 = %167.0;
  %171 = %168.0;
  (%169, %170, %var_9924, %171)
}

def @func_13482() -> (Tensor[(16, 13, 14), uint16], uint64, Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %172 = @func_4213() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], uint64) */;
  %173 = @func_11670() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %174 = @func_12280() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %175 = @func_4531() /* ty=Tensor[(16, 13, 14), uint16] */;
  %176 = %172.2;
  %177 = %173.1;
  %178 = %174.1;
  (%175, %176, %177, %178)
}

def @func_175() -> (Tensor[(16, 13, 14), uint16],) {
  %179 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%179,)
}

def @func_3281(%var_3275: Tensor[(294), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) {
  %180 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %181 = @func_2473() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %182 = @func_2178() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %183 = @func_2720() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %184 = cast(%var_3275, dtype="float64") /* ty=Tensor[(294), float64] */;
  %185 = reshape(%184, newshape=[294]) /* ty=Tensor[(294), float64] */;
  %186 = @func_1027(%185) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(294), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %187 = %180.1;
  %188 = %181.1;
  %189 = %182.3;
  %190 = %183.0;
  %191 = %186.5;
  (%187, %188, %189, %190, %191, %var_3275)
}

def @func_4213() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], uint64) {
  %192 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %193 = cast(meta[relay.Constant][9] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %194 = reshape(%193, newshape=[]) /* ty=uint64 */;
  %195 = @func_1776(%194) /* ty=(Tensor[(5, 9, 8), uint64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %196 = %192.0;
  %197 = %195.1;
  (%196, %197, meta[relay.Constant][9] /* ty=uint64 */)
}

def @func_7859() -> Tensor[(16, 13, 14), uint16] {
  @func_3732() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_774() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %198 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %199 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %200 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %201 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %202 = %198.0;
  %203 = %199.0;
  %204 = %200.0;
  %205 = %201.0;
  (%202, %203, %204, %205)
}

def @func_8829() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %206 = @func_4213() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], uint64) */;
  %207 = @func_7933() /* ty=Tensor[(16, 13, 14), uint16] */;
  %208 = %206.1;
  %209 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  %210 = @func_5211() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%207, %208, %209, %210)
}

def @func_14158() -> Tensor[(16, 13, 14), uint16] {
  @func_13298() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_888() -> (Tensor[(16, 13, 14), uint16],) {
  %211 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%211,)
}

def @func_7593() -> (Tensor[(16, 13, 14), uint16],) {
  %212 = @func_7305() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %213 = %212.0;
  (%213,)
}

def @func_1687() -> (Tensor[(16, 13, 14), bool],) {
  %214 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  %215 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %216 = %215.2;
  %217 = cast(%216, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %218 = shape_of(%214, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%214, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %221 = greater_equal(%219, %220) /* ty=Tensor[(16, 13, 14), bool] */;
  (%221,)
}

def @func_15411() -> Tensor[(16, 13, 14), uint16] {
  %222 = @func_12951() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %222.1
}

def @func_14687() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  %223 = @func_13963() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %224 = @func_12096() /* ty=Tensor[(16, 13, 14), uint16] */;
  %225 = @func_5224() /* ty=Tensor[(16, 13, 14), bool] */;
  %226 = %223.1;
  (%224, %225, %226)
}

def @func_9190(%var_9178: Tensor[(1, 120), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float64], Tensor[(1, 120), float64]) {
  %227 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %228 = cast(%var_9178, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
  %229 = reshape(%228, newshape=[12, 1, 10]) /* ty=Tensor[(12, 1, 10), float64] */;
  %230 = %227.1;
  %231 = @func_7706() /* ty=Tensor[(16, 13, 14), uint16] */;
  %232 = @func_4330() /* ty=Tensor[(16, 13, 14), uint16] */;
  %233 = @func_5255(%229) /* ty=Tensor[(12, 15, 10), float64] */;
  (%230, %231, %232, %233, %var_9178)
}

def @func_5584() -> Tensor[(16, 13, 14), uint16] {
  %234 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %234.0
}

def @func_2765() -> Tensor[(16, 13, 14), uint16] {
  @func_2552() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_2882() -> Tensor[(16, 13, 14), uint16] {
  %235 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %235.0
}

def @func_3234() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %236 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %237 = @func_2882() /* ty=Tensor[(16, 13, 14), uint16] */;
  %238 = %236.0;
  (%237, %238)
}

def @func_6055() -> Tensor[(16, 13, 14), uint16] {
  %239 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %239.2
}

def @func_8771() -> (Tensor[(16, 13, 14), uint16],) {
  %240 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %241 = %240.0;
  (%241,)
}

def @func_12503() -> (Tensor[(16, 13, 14), uint16],) {
  %242 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %243 = %242.1;
  (%243,)
}

def @func_5768(%var_5761: Tensor[(780), int64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(294), float64], Tensor[(780), int64]) {
  %244 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %245 = cast(meta[relay.Constant][10] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
  %246 = cast(%var_5761, dtype="int64") /* ty=Tensor[(780), int64] */;
  %247 = reshape(%245, newshape=[294]) /* ty=Tensor[(294), float64] */;
  %248 = reshape(%246, newshape=[780]) /* ty=Tensor[(780), int64] */;
  %249 = @func_4914(%247, %248) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(350), uint32], Tensor[(294), float64], Tensor[(16, 13, 14), int32], Tensor[(10, 5, 7), float32], Tensor[(13, 10, 6), bool], int64, Tensor[(780), int64]) */;
  %250 = %244.0;
  %251 = %249.3;
  (%250, %251, meta[relay.Constant][10] /* ty=Tensor[(294), float64] */, %var_5761)
}

def @func_16257() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(77, 14), bool]) {
  %252 = @func_12735() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %253 = @func_11893() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %254 = cast(meta[relay.Constant][11] /* ty=Tensor[(77, 14), bool] */, dtype="bool") /* ty=Tensor[(77, 14), bool] */;
  %255 = reshape(%254, newshape=[1078]) /* ty=Tensor[(1078), bool] */;
  %256 = @func_4601(%255) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool]) */;
  %257 = %252.0;
  %258 = %253.0;
  %259 = @func_7706() /* ty=Tensor[(16, 13, 14), uint16] */;
  %260 = %256.0;
  (%257, %258, %259, %260, meta[relay.Constant][11] /* ty=Tensor[(77, 14), bool] */)
}

def @func_15850() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %261 = @func_14558() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %262 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %263 = %261.0;
  %264 = %262.0;
  (%263, %264)
}

def @func_1932(%var_1907: bool) -> (Tensor[(16, 15, 11), bool], Tensor[(16, 15, 11), int16], Tensor[(16, 13, 14), uint16]) {
  %265 = cast(%var_1907, dtype="bool") /* ty=bool */;
  %266 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 15, 11), bool] */, dtype="bool") /* ty=Tensor[(16, 15, 11), bool] */;
  %267 = cast(%var_1907, dtype="int16") /* ty=int16 */;
  %268 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 15, 11), bool] */, dtype="int16") /* ty=Tensor[(16, 15, 11), int16] */;
  %269 = @func_1243() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %270 = logical_and(%265, %266) /* ty=Tensor[(16, 15, 11), bool] */;
  %271 = maximum(%267, %268) /* ty=Tensor[(16, 15, 11), int16] */;
  %272 = %269.0;
  (%270, %271, %272)
}

def @func_6289() -> Tensor[(16, 13, 14), uint16] {
  %273 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %273.1
}

def @func_7696() -> Tensor[(16, 13, 14), uint16] {
  %274 = @func_5672() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %274.0
}

def @func_8078() -> (Tensor[(16, 13, 14), uint16],) {
  %275 = @func_3026() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %276 = %275.1;
  (%276,)
}

def @func_588() -> Tensor[(16, 13, 14), uint16] {
  %277 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %277.0
}

def @func_2569() -> (Tensor[(16, 13, 14), uint16],) {
  %278 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%278,)
}

def @func_8577() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %279 = @func_5343() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %280 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %281 = %279.0;
  %282 = @func_5790() /* ty=Tensor[(16, 13, 14), uint16] */;
  %283 = %280.0;
  (%281, %282, %283)
}

def @func_9750() -> (Tensor[(16, 13, 14), uint16],) {
  %284 = @func_1967() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %285 = %284.0;
  (%285,)
}

def @func_14814(%var_14794: Tensor[(294), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64], Tensor[(49, 6), float64]) {
  %286 = @func_2803() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %287 = @func_1243() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %288 = cast(%var_14794, dtype="float64") /* ty=Tensor[(294), float64] */;
  %289 = reshape(%288, newshape=[49, 6]) /* ty=Tensor[(49, 6), float64] */;
  %290 = @func_8435(%289) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(49, 6), float64]) */;
  %291 = %290.2;
  %292 = cast(%291, dtype="float64") /* ty=Tensor[(49, 6), float64] */;
  %293 = %286.0;
  %294 = %287.0;
  %295 = rsqrt(%292) /* ty=Tensor[(49, 6), float64] */;
  (%293, %294, %var_14794, %295)
}

def @func_13833() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %296 = @func_6213() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %297 = @func_10386() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %298 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %299 = %296.0;
  %300 = %297.1;
  %301 = %298.3;
  (%299, %300, %301)
}

def @func_13069() -> (Tensor[(16, 13, 14), uint16],) {
  %302 = @func_12951() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %303 = %302.0;
  (%303,)
}

def @func_15729() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %304 = @func_14024() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %305 = @func_10386() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %306 = @func_15633() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %307 = %304.0;
  %308 = %305.0;
  %309 = %306.1;
  (%307, %308, %309)
}

def @func_3534() -> Tensor[(16, 13, 14), uint16] {
  %310 = @func_3127() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %310.1
}

def @func_12998() -> Tensor[(16, 13, 14), uint16] {
  @func_7859() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_1308(%var_1282: Tensor[(16, 13, 14), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) {
  %311 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %312 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %313 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %314 = %311.0;
  %315 = cast(%314, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %316 = reshape(%315, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %317 = @func_675(%316) /* ty=(Tensor[(16, 13, 14), float64],) */;
  %318 = %317.0;
  %319 = cast(%var_1282, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%318, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %323 = cast(%var_1282, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %324 = reshape(%323, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %325 = @func_675(%324) /* ty=(Tensor[(16, 13, 14), float64],) */;
  %326 = %312.0;
  %327 = %313.0;
  %328 = right_shift(%321, %322) /* ty=Tensor[(16, 13, 14), uint16] */;
  %329 = %325.0;
  (%314, %326, %327, %328, %329)
}

def @func_3127() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %330 = @func_1243() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %331 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %332 = @func_2178() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %333 = %330.0;
  %334 = %331.0;
  %335 = @func_588() /* ty=Tensor[(16, 13, 14), uint16] */;
  %336 = %332.2;
  (%333, %334, %335, %336)
}

def @func_4477() -> Tensor[(16, 13, 14), bool] {
  %337 = @func_3501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
  %337.1
}

def @func_1080() -> Tensor[(16, 13, 14), uint16] {
  %338 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %339 = %338.0;
  %340 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 13, 14), uint16] */, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%339, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  multiply(%342, %343) /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_1204() -> (Tensor[(16, 13, 14), uint16],) {
  %344 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%344,)
}

def @func_13298() -> Tensor[(16, 13, 14), uint16] {
  %345 = @func_8488() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %345.0
}

def @func_12348(%var_12326: Tensor[(25, 4), float64], %var_12338: Tensor[(120), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), bool], Tensor[(25, 4), float64], Tensor[(12, 11, 2), int8], Tensor[(264), int8], Tensor[(16, 13, 14), uint16], Tensor[(120), float64]) {
  %346 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %347 = @func_5051() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %348 = @func_8324() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %349 = cast(%var_12326, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
  %350 = reshape(%349, newshape=[50, 2]) /* ty=Tensor[(50, 2), float64] */;
  %351 = @func_8983(%350) /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(50, 2), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %352 = cast(meta[relay.Constant][14] /* ty=Tensor[(264), int8] */, dtype="int8") /* ty=Tensor[(264), int8] */;
  %353 = cast(meta[relay.Constant][14] /* ty=Tensor[(264), int8] */, dtype="int8") /* ty=Tensor[(264), int8] */;
  %354 = reshape(%352, newshape=[12, 11, 2]) /* ty=Tensor[(12, 11, 2), int8] */;
  %355 = reshape(%353, newshape=[12, 11, 2]) /* ty=Tensor[(12, 11, 2), int8] */;
  %356 = cast(%var_12338, dtype="float64") /* ty=Tensor[(120), float64] */;
  %357 = reshape(%356, newshape=[1, 120]) /* ty=Tensor[(1, 120), float64] */;
  %358 = @func_9190(%357) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float64], Tensor[(1, 120), float64]) */;
  %359 = %346.0;
  %360 = @func_5211() /* ty=Tensor[(16, 13, 14), uint16] */;
  %361 = %347.1;
  %362 = %348.2;
  %363 = %351.0;
  %364 = @func_9641(%354, %355) /* ty=Tensor[(12, 11, 2), int8] */;
  %365 = %358.0;
  (%359, %360, %361, %362, %363, %var_12326, %364, meta[relay.Constant][14] /* ty=Tensor[(264), int8] */, %365, %var_12338)
}

def @func_6574() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %366 = @func_4959() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %367 = @func_4531() /* ty=Tensor[(16, 13, 14), uint16] */;
  %368 = %366.1;
  (%367, %368)
}

def @func_15947(%var_15926: Tensor[(416), int16]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(2, 16, 13), bool], Tensor[(416), int16], Tensor[(16, 13, 14), float64]) {
  %369 = cast(%var_15926, dtype="int16") /* ty=Tensor[(416), int16] */;
  %370 = cast(%var_15926, dtype="int16") /* ty=Tensor[(416), int16] */;
  %371 = reshape(%369, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int16] */;
  %372 = reshape(%370, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int16] */;
  %373 = @func_15411() /* ty=Tensor[(16, 13, 14), uint16] */;
  %374 = cast(%373, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %375 = reshape(%374, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %376 = @func_675(%375) /* ty=(Tensor[(16, 13, 14), float64],) */;
  %377 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
  %378 = @func_5584() /* ty=Tensor[(16, 13, 14), uint16] */;
  %379 = @func_2294(%371, %372) /* ty=Tensor[(2, 16, 13), bool] */;
  %380 = %376.0;
  (%373, %377, %378, %379, %var_15926, %380)
}

def @func_14985() -> (Tensor[(16, 13, 14), uint16],) {
  %381 = @func_2803() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %382 = %381.0;
  (%382,)
}

def @func_12084() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %383 = @func_7760() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %384 = @func_4198() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %385 = %383.0;
  %386 = @func_10891() /* ty=Tensor[(16, 13, 14), uint16] */;
  %387 = %384.0;
  %388 = @func_6055() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%385, %386, %387, %388)
}

def @func_2586() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %389 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %390 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %391 = %389.1;
  %392 = %390.1;
  (%391, %392)
}

def @func_11256() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %393 = @func_3234() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %394 = %393.1;
  %395 = @func_9082() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%394, %395)
}

def @func_15834() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %396 = @func_15191() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %397 = @func_12802() /* ty=Tensor[(16, 13, 14), uint16] */;
  %398 = %396.0;
  (%397, %398)
}

def @func_3180() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) {
  %399 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %400 = @func_2067() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %401 = %400.0;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(16, 13, 14), float32] */;
  %403 = %399.0;
  %404 = erf(%402) /* ty=Tensor[(16, 13, 14), float32] */;
  (%403, %404)
}

def @func_8983(%var_8913: Tensor[(50, 2), float64]) -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(50, 2), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %405 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %406 = @func_7760() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %407 = cast(%var_8913, dtype="float64") /* ty=Tensor[(50, 2), float64] */;
  %408 = reshape(%407, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %409 = @func_4462(%408) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100), uint8], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %410 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %411 = @func_6546() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %412 = %405.0;
  %413 = %406.1;
  %414 = %409.2;
  %415 = %410.3;
  %416 = @func_6289() /* ty=Tensor[(16, 13, 14), uint16] */;
  %417 = %411.0;
  (%412, %413, %414, %var_8913, %415, %416, %417)
}

def @func_11948() -> Tensor[(16, 13, 14), bool] {
  %418 = @func_3026() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %418.3
}

def @func_1431() -> (Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %419 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
  %420 = cast(%419, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %421 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %422 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %423 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %424 = acosh(%420) /* ty=Tensor[(16, 13, 14), float64] */;
  %425 = %421.0;
  %426 = %422.0;
  %427 = %423.0;
  %428 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%424, %425, %426, %427, %428)
}

def @func_4105(%var_4081: int64, %var_4082: Tensor[(780), int64], %var_4090: Tensor[(1078, 1), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], int64, Tensor[(780), int64], Tensor[(7, 11, 14), bool], Tensor[(1078, 1), bool], Tensor[(13, 10, 6), float64]) {
  %429 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %430 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %431 = %430.0;
  %432 = cast(%431, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %433 = @func_3677() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %434 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %435 = cast(%var_4090, dtype="bool") /* ty=Tensor[(1078, 1), bool] */;
  %436 = cast(%var_4090, dtype="bool") /* ty=Tensor[(1078, 1), bool] */;
  %437 = reshape(%435, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
  %438 = reshape(%436, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
  %439 = @func_3093(%437, %438) /* ty=(Tensor[(7, 11, 14), bool],) */;
  %440 = cast(%var_4081, dtype="int64") /* ty=int64 */;
  %441 = cast(%var_4082, dtype="int64") /* ty=Tensor[(780), int64] */;
  %442 = reshape(%440, newshape=[]) /* ty=int64 */;
  %443 = reshape(%441, newshape=[13, 10, 6]) /* ty=Tensor[(13, 10, 6), int64] */;
  %444 = @func_2664(%442, %443) /* ty=(Tensor[(13, 10, 6), bool],) */;
  %445 = %444.0;
  %446 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 10, 6), bool] */, dtype="float64") /* ty=Tensor[(13, 10, 6), float64] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="float64") /* ty=Tensor[(13, 10, 6), float64] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %450 = %429.2;
  %451 = exp(%432) /* ty=Tensor[(16, 13, 14), float64] */;
  %452 = %433.1;
  %453 = %434.0;
  %454 = %439.0;
  %455 = divide(%448, %449) /* ty=Tensor[(13, 10, 6), float64] */;
  (%450, %451, %452, %453, %var_4081, %var_4082, %454, %var_4090, %455)
}

def @func_5343() -> (Tensor[(16, 13, 14), uint16],) {
  %456 = @func_2720() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %457 = %456.1;
  (%457,)
}

def @func_11537() -> Tensor[(16, 13, 14), uint16] {
  %458 = @func_3180() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */;
  %458.0
}

def @func_6867() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %459 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %460 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %461 = %459.0;
  %462 = %460.0;
  %463 = @func_2765() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%461, %462, %463)
}

def @func_12815() -> (Tensor[(16, 13, 14), uint16],) {
  %464 = @func_12433() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %465 = %464.0;
  (%465,)
}

def @func_1776(%var_1733: uint64) -> (Tensor[(5, 9, 8), uint64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %466 = cast(%var_1733, dtype="uint64") /* ty=uint64 */;
  %467 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 9, 8), uint64] */, dtype="uint64") /* ty=Tensor[(5, 9, 8), uint64] */;
  %468 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %469 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %470 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %471 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %472 = bitwise_xor(%466, %467) /* ty=Tensor[(5, 9, 8), uint64] */;
  %473 = %468.0;
  %474 = %469.0;
  %475 = %470.0;
  %476 = %471.3;
  (%472, %473, %474, %475, %476)
}

def @func_2022() -> (Tensor[(16, 13, 14), bool],) {
  %477 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %478 = %477.0;
  (%478,)
}

def @func_9431() -> Tensor[(16, 13, 14), uint16] {
  %479 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %479.0
}

def @func_4959() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %480 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %481 = @func_3882() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %482 = %480.3;
  %483 = %481.3;
  (%482, %483)
}

def @func_4357() -> (Tensor[(16, 13, 14), uint16],) {
  %484 = @func_290() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%484,)
}

def @func_2332() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %485 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %486 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %487 = %485.0;
  %488 = %486.0;
  (%487, %488)
}

def @func_11865() -> Tensor[(16, 13, 14), uint16] {
  %489 = @func_5499() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %489.0
}

def @func_2348() -> (Tensor[(16, 13, 14), bool],) {
  %490 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %491 = %490.0;
  (%491,)
}

def @func_8021() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %492 = @func_3882() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %493 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %494 = %492.6;
  %495 = %493.0;
  (%494, %495)
}

def @func_14634() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(120), float64], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float32]) {
  %496 = @func_8488() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %497 = cast(meta[relay.Constant][17] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %498 = reshape(%497, newshape=[1, 120]) /* ty=Tensor[(1, 120), float64] */;
  %499 = @func_9190(%498) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float64], Tensor[(1, 120), float64]) */;
  %500 = %499.3;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
  %502 = tan(%501) /* ty=Tensor[(12, 15, 10), float64] */;
  %503 = cast(%502, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
  %504 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  %505 = %496.1;
  %506 = @func_2882() /* ty=Tensor[(16, 13, 14), uint16] */;
  %507 = sinh(%503) /* ty=Tensor[(12, 15, 10), float32] */;
  (%504, %505, meta[relay.Constant][17] /* ty=Tensor[(120), float64] */, %506, %507)
}

def @func_10395() -> Tensor[(16, 13, 14), uint16] {
  @func_5790() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_15442(%var_15437: Tensor[(15, 4, 13), int64]) -> (Tensor[(15, 4, 13), bool],) {
  %508 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 4, 13), int64] */, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
  %509 = shape_of(%var_15437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%var_15437, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %512 = less_equal(%510, %511) /* ty=Tensor[(15, 4, 13), bool] */;
  (%512,)
}

def @main(%var_16440: Tensor[(13, 1, 7), float32]) -> (Tensor[(13, 1, 7), float32],) {
  %513 = cast(%var_16440, dtype="float32") /* ty=Tensor[(13, 1, 7), float32] */;
  %514 = exp(%513) /* ty=Tensor[(13, 1, 7), float32] */;
  (%514,)
}

def @func_675(%var_662: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), float64],) {
  %515 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %516 = %515.0;
  %517 = cast(%var_662, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%516, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %521 = floor_divide(%519, %520) /* ty=Tensor[(16, 13, 14), float64] */;
  (%521,)
}

def @func_14024() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %522 = @func_10928() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %523 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %524 = %522.0;
  %525 = %523.0;
  (%524, %525)
}

def @func_12550() -> Tensor[(16, 13, 14), uint16] {
  %526 = @func_8194() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %526.0
}

def @func_10501() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) {
  %527 = @func_7440() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %528 = @func_4123() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %529 = %527.1;
  %530 = cast(%529, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %531 = reshape(%530, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %532 = @func_4289(%531) /* ty=(Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), float64]) */;
  %533 = %528.0;
  %534 = %532.0;
  (%529, %533, %534)
}

def @func_5672() -> (Tensor[(16, 13, 14), uint16],) {
  %535 = @func_3234() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %536 = %535.0;
  (%536,)
}

def @func_2803() -> (Tensor[(16, 13, 14), uint16],) {
  %537 = @func_2067() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %538 = %537.0;
  (%538,)
}

def @func_2264(%var_2216: Tensor[(8, 9, 5), uint64]) -> (Tensor[(8, 9, 5), uint64], Tensor[(16, 13, 14), bool], Tensor[(1, 2912), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) {
  %539 = cast(meta[relay.Constant][19] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %540 = cast(%var_2216, dtype="uint64") /* ty=Tensor[(8, 9, 5), uint64] */;
  %541 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 2912), uint16] */, dtype="uint16") /* ty=Tensor[(1, 2912), uint16] */;
  %542 = reshape(%541, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %543 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %544 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %545 = bitwise_or(%539, %540) /* ty=Tensor[(8, 9, 5), uint64] */;
  %546 = @func_1152(%542) /* ty=Tensor[(16, 13, 14), bool] */;
  %547 = %543.0;
  %548 = %544.0;
  (%545, %546, meta[relay.Constant][20] /* ty=Tensor[(1, 2912), uint16] */, %547, %548)
}

def @func_4825() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %549 = @func_2765() /* ty=Tensor[(16, 13, 14), uint16] */;
  %550 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%549, %550)
}

def @func_14464(%var_14438: Tensor[(4, 12, 14), float64], %var_14439: Tensor[(4, 12, 14), float64]) -> (Tensor[(4, 12, 14), float64], Tensor[(16, 13, 14), uint16]) {
  %551 = cast(%var_14439, dtype="float64") /* ty=Tensor[(4, 12, 14), float64] */;
  %552 = shape_of(%var_14438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%var_14438, dtype="float64") /* ty=Tensor[(4, 12, 14), float64] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %555 = maximum(%553, %554) /* ty=Tensor[(4, 12, 14), float64] */;
  %556 = @func_12827() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%555, %556)
}

def @func_13634(%var_13623: Tensor[(2, 3, 5), float32]) -> (Tensor[(2, 3, 5), float32], Tensor[(16, 13, 14), uint16]) {
  %557 = cast(%var_13623, dtype="float32") /* ty=Tensor[(2, 3, 5), float32] */;
  %558 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %559 = rsqrt(%557) /* ty=Tensor[(2, 3, 5), float32] */;
  %560 = %558.0;
  (%559, %560)
}

def @func_14110(%var_14094: Tensor[(360), uint64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(360), uint64], Tensor[(16, 13, 14), uint16]) {
  %561 = @func_8681() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %562 = cast(%var_14094, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %563 = reshape(%562, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), uint64] */;
  %564 = @func_2264(%563) /* ty=(Tensor[(8, 9, 5), uint64], Tensor[(16, 13, 14), bool], Tensor[(1, 2912), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) */;
  %565 = %561.0;
  %566 = %564.3;
  %567 = @func_3900() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%565, %566, %var_14094, %567)
}

def @func_8126(%var_8123: Tensor[(6, 13, 6), float32]) -> (Tensor[(6, 13, 6), float32],) {
  %568 = cast(%var_8123, dtype="float32") /* ty=Tensor[(6, 13, 6), float32] */;
  %569 = asin(%568) /* ty=Tensor[(6, 13, 6), float32] */;
  (%569,)
}

def @func_11021() -> (Tensor[(16, 13, 14), uint16],) {
  %570 = @func_8049() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %571 = %570.0;
  (%571,)
}

def @func_2294(%var_2285: Tensor[(2, 16, 13), int16], %var_2286: Tensor[(2, 16, 13), int16]) -> Tensor[(2, 16, 13), bool] {
  %572 = cast(%var_2286, dtype="bool") /* ty=Tensor[(2, 16, 13), bool] */;
  %573 = shape_of(%var_2285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_2285, dtype="bool") /* ty=Tensor[(2, 16, 13), bool] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%574, %575) /* ty=Tensor[(2, 16, 13), bool] */
}

def @func_10374() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %576 = @func_2765() /* ty=Tensor[(16, 13, 14), uint16] */;
  %577 = @func_5584() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%576, %577)
}

def @func_14317() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  %578 = @func_14069() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %579 = @func_12280() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %580 = @func_6036() /* ty=(Tensor[(15, ?, 12), uint8], Tensor[(15, 1, 12), float32], Tensor[(16, 13, 14), bool]) */;
  %581 = %578.1;
  %582 = %579.0;
  %583 = %580.2;
  (%581, %582, %583)
}

def @func_6510() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) {
  %584 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %585 = @func_1967() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %586 = cast(meta[relay.Constant][21] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
  %587 = reshape(%586, newshape=[294]) /* ty=Tensor[(294), float64] */;
  %588 = @func_3281(%587) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */;
  %589 = %584.2;
  %590 = %585.0;
  %591 = %588.0;
  (%589, %590, %591, meta[relay.Constant][21] /* ty=Tensor[(294), float64] */)
}

def @func_8878() -> Tensor[(16, 13, 14), uint16] {
  %592 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %592.0
}

def @func_140() -> Tensor[(16, 13, 14), uint16] {
  %593 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 13, 14), uint16] */, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %594 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(16, 13, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 13, 14), uint16] */, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  add(%595, %596) /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_9994() -> (Tensor[(16, 13, 14), uint16],) {
  %597 = @func_2552() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%597,)
}

def @func_10063(%var_10041: Tensor[(16, 6, 4), int8], %var_10042: Tensor[(16, 6, 4), int8]) -> Tensor[(16, 6, 4), int8] {
  %598 = cast(%var_10042, dtype="int8") /* ty=Tensor[(16, 6, 4), int8] */;
  %599 = shape_of(%var_10041, dtype="int32") /* ty=Tensor[(3), int32] */;
  %600 = cast(%var_10041, dtype="int8") /* ty=Tensor[(16, 6, 4), int8] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%600, %601) /* ty=Tensor[(16, 6, 4), int8] */
}

def @func_1967() -> (Tensor[(16, 13, 14), uint16],) {
  %602 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%602,)
}

def @func_6876() -> Tensor[(16, 13, 14), uint16] {
  %603 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %603.1
}

def @func_9251(%var_9207: int64, %var_9213: Tensor[(8, 5, 8), int64], %var_9223: Tensor[(8, 5, 8), int64], %var_9228: Tensor[(120), float64], %var_9242: Tensor[(8, 5, 8), int64]) -> (Tensor[(8, 5, 8), uint8], Tensor[(8, 5, 8), float64], Tensor[(8, 5, 8), int8], Tensor[(120), float64], Tensor[(12, 15, 10), float64], Tensor[(8, 5, 8), float32]) {
  %604 = cast(%var_9213, dtype="uint8") /* ty=Tensor[(8, 5, 8), uint8] */;
  %605 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(8, 5, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 5, 8), int64] */, dtype="uint8") /* ty=Tensor[(8, 5, 8), uint8] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %608 = cast(%var_9207, dtype="bool") /* ty=bool */;
  %609 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 5, 8), int64] */, dtype="bool") /* ty=Tensor[(8, 5, 8), bool] */;
  %610 = equal(%608, %609) /* ty=Tensor[(8, 5, 8), bool] */;
  %611 = cast(%610, dtype="float64") /* ty=Tensor[(8, 5, 8), float64] */;
  %612 = shape_of(%var_9213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%var_9213, dtype="float64") /* ty=Tensor[(8, 5, 8), float64] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %615 = cast(%var_9223, dtype="int8") /* ty=Tensor[(8, 5, 8), int8] */;
  %616 = shape_of(%var_9213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%var_9213, dtype="int8") /* ty=Tensor[(8, 5, 8), int8] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %619 = cast(%var_9228, dtype="float64") /* ty=Tensor[(120), float64] */;
  %620 = reshape(%619, newshape=[12, 1, 10]) /* ty=Tensor[(12, 1, 10), float64] */;
  %621 = @func_5255(%620) /* ty=Tensor[(12, 15, 10), float64] */;
  %622 = cast(%621, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
  %623 = cast(%var_9207, dtype="float64") /* ty=float64 */;
  %624 = cast(%var_9242, dtype="float32") /* ty=Tensor[(8, 5, 8), float32] */;
  %625 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(8, 5, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 5, 8), int64] */, dtype="float32") /* ty=Tensor[(8, 5, 8), float32] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %628 = bitwise_and(%606, %607) /* ty=Tensor[(8, 5, 8), uint8] */;
  %629 = floor_divide(%613, %614) /* ty=Tensor[(8, 5, 8), float64] */;
  %630 = right_shift(%617, %618) /* ty=Tensor[(8, 5, 8), int8] */;
  %631 = floor_divide(%622, %623) /* ty=Tensor[(12, 15, 10), float64] */;
  %632 = multiply(%626, %627) /* ty=Tensor[(8, 5, 8), float32] */;
  (%628, %629, %630, %var_9228, %631, %632)
}

def @func_14882() -> (Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), bool]) {
  %633 = @func_10501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */;
  %634 = @func_14317() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %635 = %633.2;
  %636 = %634.2;
  (%635, %636)
}

def @func_8681() -> (Tensor[(16, 13, 14), uint16],) {
  %637 = @func_2882() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%637,)
}

def @func_16421() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %638 = @func_14024() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %639 = @func_8771() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %640 = @func_14944() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %641 = %638.0;
  %642 = %639.0;
  %643 = %640.0;
  (%641, %642, %643)
}

def @func_15269() -> (Tensor[(15, 11, 13), float32],) {
  %644 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 11, 13), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 13), float32] */;
  %645 = asinh(%644) /* ty=Tensor[(15, 11, 13), float32] */;
  (%645,)
}

def @func_4123() -> (Tensor[(16, 13, 14), uint16],) {
  %646 = @func_2586() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %647 = %646.1;
  (%647,)
}

def @func_481() -> Tensor[(16, 13, 14), uint16] {
  @func_140() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_13531() -> Tensor[(16, 13, 14), uint16] {
  @func_2765() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_7285() -> (Tensor[(16, 13, 14), uint16],) {
  %648 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%648,)
}

def @func_1243() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %649 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %650 = %649.0;
  %651 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%650, %651)
}

def @func_14354() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %652 = @func_12170() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %653 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
  %654 = %652.0;
  (%653, %654)
}

def @func_9502() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64], Tensor[(780), int64], Tensor[(12, 16, 12), bool], Tensor[(2304), uint8]) {
  %655 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %656 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %657 = cast(meta[relay.Constant][26] /* ty=Tensor[(780), int64] */, dtype="int64") /* ty=Tensor[(780), int64] */;
  %658 = reshape(%657, newshape=[780]) /* ty=Tensor[(780), int64] */;
  %659 = @func_5768(%658) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(294), float64], Tensor[(780), int64]) */;
  %660 = cast(meta[relay.Constant][27] /* ty=Tensor[(2304), uint8] */, dtype="uint8") /* ty=Tensor[(2304), uint8] */;
  %661 = cast(meta[relay.Constant][27] /* ty=Tensor[(2304), uint8] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %662 = reshape(%660, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), uint8] */;
  %663 = reshape(%661, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float64] */;
  %664 = @func_2420(%662, %663) /* ty=(Tensor[(12, 16, 12), uint8], Tensor[(16, 13, 14), uint16], Tensor[(12, 16, 12), bool]) */;
  %665 = %655.0;
  %666 = %656.0;
  %667 = %659.2;
  %668 = %664.2;
  (%665, %666, %667, meta[relay.Constant][26] /* ty=Tensor[(780), int64] */, %668, meta[relay.Constant][27] /* ty=Tensor[(2304), uint8] */)
}

def @func_9698() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %669 = @func_9603() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %670 = @func_4959() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %671 = %669.0;
  %672 = %670.0;
  (%671, %672)
}

def @func_5373() -> (Tensor[(16, 13, 14), uint16],) {
  %673 = @func_2178() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %674 = %673.2;
  (%674,)
}

def @func_12096() -> Tensor[(16, 13, 14), uint16] {
  %675 = @func_7440() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %675.1
}

def @func_8435(%var_8429: Tensor[(49, 6), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(49, 6), float64]) {
  %676 = @func_2803() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %677 = cast(%var_8429, dtype="float64") /* ty=Tensor[(49, 6), float64] */;
  %678 = reshape(%677, newshape=[294]) /* ty=Tensor[(294), float64] */;
  %679 = @func_1027(%678) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(294), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %680 = %676.0;
  %681 = %679.5;
  (%680, %681, %var_8429)
}

def @func_12280() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %682 = @func_2586() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %683 = %682.1;
  %684 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%683, %684)
}

def @func_11860() -> (Tensor[(16, 13, 14), bool],) {
  %685 = @func_4477() /* ty=Tensor[(16, 13, 14), bool] */;
  (%685,)
}

def @func_14774() -> (Tensor[(16, 13, 14), uint16],) {
  %686 = @func_14476() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %687 = %686.0;
  (%687,)
}

def @func_12764() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %688 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %689 = @func_588() /* ty=Tensor[(16, 13, 14), uint16] */;
  %690 = %688.0;
  (%689, %690)
}

def @func_10342() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %691 = @func_7593() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %692 = @func_8488() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %693 = %691.0;
  %694 = %692.0;
  (%693, %694)
}

def @func_12591(%var_12574: Tensor[(8, 2, 2), float64]) -> (Tensor[(8, 2, 2), float64], Tensor[(16, 13, 14), uint16]) {
  %695 = cast(%var_12574, dtype="float64") /* ty=Tensor[(8, 2, 2), float64] */;
  %696 = @func_7593() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %697 = sqrt(%695) /* ty=Tensor[(8, 2, 2), float64] */;
  %698 = %696.0;
  (%697, %698)
}

def @func_12827() -> Tensor[(16, 13, 14), uint16] {
  @func_290() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_12847() -> (Tensor[(16, 13, 14), bool],) {
  %699 = @func_3549() /* ty=Tensor[(16, 13, 14), bool] */;
  (%699,)
}

def @func_13329() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %700 = @func_5713() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %701 = @func_11670() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %702 = %700.0;
  %703 = %701.1;
  (%702, %703)
}

def @func_16336() -> Tensor[(16, 13, 14), uint16] {
  %704 = @func_15542() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %704.0
}

def @func_14545() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %705 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
  %706 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%705, %706)
}

def @func_13946() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %707 = @func_2348() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %708 = @func_5651() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %709 = %707.0;
  %710 = @func_12550() /* ty=Tensor[(16, 13, 14), uint16] */;
  %711 = @func_5584() /* ty=Tensor[(16, 13, 14), uint16] */;
  %712 = %708.0;
  (%709, %710, %711, %712)
}

def @func_6213() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %713 = @func_2022() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %714 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %715 = @func_4553() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %716 = %713.0;
  %717 = %714.0;
  %718 = %715.0;
  (%716, %717, %718)
}

def @func_10154() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %719 = @func_2473() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %720 = @func_2803() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %721 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %722 = @func_8635() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16]) */;
  %723 = %719.0;
  %724 = %720.0;
  %725 = @func_7696() /* ty=Tensor[(16, 13, 14), uint16] */;
  %726 = %721.3;
  %727 = %722.1;
  (%723, %724, %725, %726, %727)
}

def @func_3048() -> Tensor[(16, 13, 14), uint16] {
  @func_481() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_14208() -> Tensor[(6, 2, 2), float32] {
  %728 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 2), float32] */;
  %729 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(6, 2, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 2), float32] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%730, %731) /* ty=Tensor[(6, 2, 2), float32] */
}

def @func_13725(%var_13694: Tensor[(16, 15, 2), uint32]) -> (Tensor[(16, 15, 2), uint32], Tensor[(16, 13, 14), bool], Tensor[(16, 15, 2), float32]) {
  %732 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 15, 2), uint32] */, dtype="uint32") /* ty=Tensor[(16, 15, 2), uint32] */;
  %733 = shape_of(%var_13694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_13694, dtype="uint32") /* ty=Tensor[(16, 15, 2), uint32] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %736 = @func_3026() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %737 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 15, 2), uint32] */, dtype="float32") /* ty=Tensor[(16, 15, 2), float32] */;
  %738 = minimum(%734, %735) /* ty=Tensor[(16, 15, 2), uint32] */;
  %739 = %736.3;
  %740 = acos(%737) /* ty=Tensor[(16, 15, 2), float32] */;
  (%738, %739, %740)
}

def @func_14568() -> (Tensor[(16, 13, 14), uint16],) {
  %741 = @func_4959() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %742 = %741.0;
  (%742,)
}

def @func_8398(%var_8387: Tensor[(5, 20), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), float32], Tensor[(1078), bool], Tensor[(100), uint8], Tensor[(5, 20), float64]) {
  %743 = cast(meta[relay.Constant][31] /* ty=Tensor[(1078), bool] */, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %744 = cast(meta[relay.Constant][31] /* ty=Tensor[(1078), bool] */, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %745 = reshape(%743, newshape=[1078]) /* ty=Tensor[(1078), bool] */;
  %746 = reshape(%744, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
  %747 = @func_7024(%745, %746) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(1078), bool], Tensor[(7, 11, 14), bool], Tensor[(7, 11, 14), float32]) */;
  %748 = cast(%var_8387, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
  %749 = reshape(%748, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %750 = @func_4462(%749) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100), uint8], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %751 = @func_5697() /* ty=Tensor[(16, 13, 14), uint16] */;
  %752 = %747.3;
  %753 = %750.3;
  (%751, %752, meta[relay.Constant][31] /* ty=Tensor[(1078), bool] */, %753, %var_8387)
}

def @func_4531() -> Tensor[(16, 13, 14), uint16] {
  %754 = @func_3180() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */;
  %754.0
}

def @func_15633() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %755 = @func_6944() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %756 = %755.1;
  %757 = cast(%756, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %758 = reshape(%757, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %759 = @func_1110(%758) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), uint16]) */;
  %760 = %759.4;
  (%756, %760)
}

def @func_10456() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %761 = @func_7160() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %762 = @func_8771() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %763 = %761.0;
  %764 = %762.0;
  (%763, %764)
}

def @func_1110(%var_1086: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), uint16]) {
  %765 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
  %766 = cast(%var_1086, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%765, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %770 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
  %771 = cast(%770, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %772 = reshape(%771, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %773 = @func_675(%772) /* ty=(Tensor[(16, 13, 14), float64],) */;
  %774 = cast(%var_1086, dtype="float32") /* ty=Tensor[(16, 13, 14), float32] */;
  %775 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %776 = less_equal(%768, %769) /* ty=Tensor[(16, 13, 14), bool] */;
  %777 = %773.0;
  %778 = sinh(%774) /* ty=Tensor[(16, 13, 14), float32] */;
  %779 = %775.1;
  (%770, %776, %777, %778, %779)
}

def @func_16035() -> Tensor[(16, 13, 14), uint16] {
  %780 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %780.0
}

def @func_4289(%var_4278: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), float64]) {
  %781 = @func_3501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
  %782 = %781.2;
  %783 = cast(%var_4278, dtype="float32") /* ty=Tensor[(16, 13, 14), float32] */;
  %784 = shape_of(%782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%782, dtype="float32") /* ty=Tensor[(16, 13, 14), float32] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %787 = floor_mod(%785, %786) /* ty=Tensor[(16, 13, 14), float32] */;
  %788 = cast(%787, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %789 = reshape(%788, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), float64] */;
  %790 = @func_1308(%789) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) */;
  %791 = %790.4;
  (%787, %791)
}

def @func_2420(%var_2376: Tensor[(12, 16, 12), uint8], %var_2413: Tensor[(12, 16, 12), float64]) -> (Tensor[(12, 16, 12), uint8], Tensor[(16, 13, 14), uint16], Tensor[(12, 16, 12), bool]) {
  %792 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 16, 12), uint8] */, dtype="uint8") /* ty=Tensor[(12, 16, 12), uint8] */;
  %793 = shape_of(%var_2376, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%var_2376, dtype="uint8") /* ty=Tensor[(12, 16, 12), uint8] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %796 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %797 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 16, 12), uint8] */, dtype="float64") /* ty=Tensor[(12, 16, 12), float64] */;
  %798 = exp(%797) /* ty=Tensor[(12, 16, 12), float64] */;
  %799 = cast(%var_2413, dtype="bool") /* ty=Tensor[(12, 16, 12), bool] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%798, dtype="bool") /* ty=Tensor[(12, 16, 12), bool] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %803 = right_shift(%794, %795) /* ty=Tensor[(12, 16, 12), uint8] */;
  %804 = %796.0;
  %805 = less(%801, %802) /* ty=Tensor[(12, 16, 12), bool] */;
  (%803, %804, %805)
}

def @func_10253() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %806 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %807 = @func_7285() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %808 = %806.0;
  %809 = %807.0;
  (%808, %809)
}

def @func_15191() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %810 = @func_14774() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %811 = @func_2473() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %812 = %810.0;
  %813 = %811.0;
  (%812, %813)
}

def @func_1522() -> (Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %814 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 2, 15), float32] */;
  %815 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(1, 2, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 2, 15), float32] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %818 = divide(%816, %817) /* ty=Tensor[(?, 2, 15), float32] */;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(?, 2, 15), float64] */;
  %820 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %821 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %822 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %823 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %824 = sigmoid(%819) /* ty=Tensor[(?, 2, 15), float64] */;
  %825 = %820.0;
  %826 = %821.0;
  %827 = %822.0;
  %828 = %823.0;
  (%824, %825, %826, %827, %828)
}

def @func_7440() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %829 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %830 = @func_7305() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %831 = %829.0;
  %832 = @func_290() /* ty=Tensor[(16, 13, 14), uint16] */;
  %833 = %830.0;
  (%831, %832, %833)
}

def @func_2067() -> (Tensor[(16, 13, 14), uint16],) {
  %834 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%834,)
}

def @func_15059() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %835 = @func_12847() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %836 = @func_14774() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %837 = @func_6272() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
  %838 = %835.0;
  %839 = %836.0;
  %840 = @func_14720() /* ty=Tensor[(16, 13, 14), uint16] */;
  %841 = %837.0;
  (%838, %839, %840, %841)
}

def @func_16093() -> Tensor[(16, 13, 14), uint16] {
  %842 = @func_5922() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %842.1
}

def @func_2940() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %843 = @func_2720() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %844 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %845 = %843.1;
  %846 = %844.0;
  (%845, %846)
}

def @func_9082() -> Tensor[(16, 13, 14), uint16] {
  @func_140() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_3612(%var_3607: Tensor[(16, 13, 14), uint16]) -> Tensor[(16, 13, 14), int32] {
  %847 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %848 = %847.0;
  %849 = cast(%var_3607, dtype="int32") /* ty=Tensor[(16, 13, 14), int32] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%848, dtype="int32") /* ty=Tensor[(16, 13, 14), int32] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  maximum(%851, %852) /* ty=Tensor[(16, 13, 14), int32] */
}

def @func_252() -> (Tensor[(16, 13, 14), uint16],) {
  %853 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%853,)
}

def @func_15490() -> Tensor[(720, 2), uint64] {
  %854 = @func_13226() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 9, 10), uint8], Tensor[(720, 2), uint64], Tensor[(16, 13, 14), uint16]) */;
  %854.3
}

def @func_12170() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %855 = @func_11893() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %856 = %855.0;
  %857 = @func_7982() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%856, %857)
}

def @func_16382() -> (Tensor[(16, 13, 14), uint16],) {
  %858 = @func_10036() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %859 = %858.0;
  (%859,)
}

def @func_3755() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %860 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %861 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %862 = %860.0;
  %863 = %861.0;
  (%862, %863)
}

def @func_4934() -> (Tensor[(16, 13, 14), uint16],) {
  %864 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %865 = %864.0;
  (%865,)
}

def @func_5713() -> (Tensor[(16, 13, 14), uint16],) {
  %866 = @func_5051() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %867 = %866.0;
  (%867,)
}

def @func_15120() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %868 = @func_13226() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 9, 10), uint8], Tensor[(720, 2), uint64], Tensor[(16, 13, 14), uint16]) */;
  %869 = @func_3732() /* ty=Tensor[(16, 13, 14), uint16] */;
  %870 = %868.1;
  (%869, %870)
}

def @func_2664(%var_2657: int64, %var_2658: Tensor[(13, 10, 6), int64]) -> (Tensor[(13, 10, 6), bool],) {
  %871 = cast(%var_2657, dtype="bool") /* ty=bool */;
  %872 = cast(%var_2658, dtype="bool") /* ty=Tensor[(13, 10, 6), bool] */;
  %873 = equal(%871, %872) /* ty=Tensor[(13, 10, 6), bool] */;
  (%873,)
}

def @func_6611() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %874 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %875 = @func_2067() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %876 = @func_5211() /* ty=Tensor[(16, 13, 14), uint16] */;
  %877 = %874.0;
  %878 = %875.0;
  (%876, %877, %878)
}

def @func_8635() -> (Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16]) {
  %879 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %880 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %881 = %879.0;
  %882 = %880.0;
  (%881, %882)
}

def @func_14476() -> (Tensor[(16, 13, 14), uint16],) {
  %883 = @func_7440() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %884 = %883.0;
  (%884,)
}

def @func_2473() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %885 = @func_2067() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %886 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
  %887 = %885.0;
  (%886, %887)
}

def @func_6546() -> (Tensor[(16, 13, 14), uint16],) {
  %888 = @func_3677() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %889 = %888.0;
  (%889,)
}

def @func_8194() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %890 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %891 = %890.0;
  %892 = @func_900() /* ty=Tensor[(16, 13, 14), uint16] */;
  %893 = @func_3534() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%891, %892, %893)
}

def @func_6081(%var_6075: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), bool],) {
  %894 = @func_5922() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %895 = %894.0;
  %896 = cast(%var_6075, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %897 = shape_of(%895, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%895, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %900 = equal(%898, %899) /* ty=Tensor[(16, 13, 14), bool] */;
  (%900,)
}

def @func_3882() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %901 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %902 = %901.0;
  %903 = cast(%902, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %904 = reshape(%903, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %905 = @func_2569() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %906 = %905.0;
  %907 = cast(%906, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %908 = reshape(%907, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), float64] */;
  %909 = @func_1308(%908) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) */;
  %910 = @func_3755() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %911 = @func_3677() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %912 = @func_3026() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %913 = @func_1152(%904) /* ty=Tensor[(16, 13, 14), bool] */;
  %914 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
  %915 = %909.3;
  %916 = %910.1;
  %917 = %911.1;
  %918 = %912.0;
  %919 = @func_2552() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%902, %913, %914, %906, %915, %916, %917, %918, %919)
}

def @func_11343(%var_11316: Tensor[(780), int64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(780), int64], Tensor[(16, 13, 14), uint16]) {
  %920 = cast(%var_11316, dtype="int64") /* ty=Tensor[(780), int64] */;
  %921 = reshape(%920, newshape=[780]) /* ty=Tensor[(780), int64] */;
  %922 = @func_5768(%921) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(294), float64], Tensor[(780), int64]) */;
  %923 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %924 = @func_10891() /* ty=Tensor[(16, 13, 14), uint16] */;
  %925 = %922.1;
  %926 = %923.0;
  (%924, %925, %var_11316, %926)
}

def @func_10874() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %927 = @func_9047() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(9, 9, 14), float64], Tensor[(16, 13, 14), uint16]) */;
  %928 = @func_6213() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %929 = %927.0;
  %930 = %928.2;
  (%929, %930)
}

def @func_7982() -> Tensor[(16, 13, 14), uint16] {
  %931 = @func_6574() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %931.0
}

def @func_7024(%var_6980: Tensor[(1078), bool], %var_6987: Tensor[(7, 11, 14), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(1078), bool], Tensor[(7, 11, 14), bool], Tensor[(7, 11, 14), float32]) {
  %932 = cast(%var_6980, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %933 = reshape(%932, newshape=[1078]) /* ty=Tensor[(1078), bool] */;
  %934 = @func_4601(%933) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool]) */;
  %935 = %934.1;
  %936 = cast(%var_6987, dtype="bool") /* ty=Tensor[(7, 11, 14), bool] */;
  %937 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%935, dtype="bool") /* ty=Tensor[(7, 11, 14), bool] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %940 = cast(%var_6987, dtype="float32") /* ty=Tensor[(7, 11, 14), float32] */;
  %941 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  %942 = greater_equal(%938, %939) /* ty=Tensor[(7, 11, 14), bool] */;
  %943 = erf(%940) /* ty=Tensor[(7, 11, 14), float32] */;
  (%941, %var_6980, %942, %943)
}

def @func_4553() -> (Tensor[(16, 13, 14), uint16],) {
  %944 = @func_2569() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %945 = %944.0;
  (%945,)
}

def @func_9641(%var_9633: Tensor[(12, 11, 2), int8], %var_9634: Tensor[(12, 11, 2), int8]) -> Tensor[(12, 11, 2), int8] {
  %946 = cast(%var_9634, dtype="int8") /* ty=Tensor[(12, 11, 2), int8] */;
  %947 = shape_of(%var_9633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %948 = cast(%var_9633, dtype="int8") /* ty=Tensor[(12, 11, 2), int8] */;
  %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%948, %949) /* ty=Tensor[(12, 11, 2), int8] */
}

def @func_10783(%var_10745: Tensor[(5, 8, 16), float64], %var_10746: Tensor[(5, 8, 16), float64]) -> (Tensor[(5, 8, 16), bool], Tensor[(16, 13, 14), uint16], Tensor[(5, 8, 16), float64]) {
  %950 = cast(%var_10746, dtype="float64") /* ty=Tensor[(5, 8, 16), float64] */;
  %951 = shape_of(%var_10745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %952 = cast(%var_10745, dtype="float64") /* ty=Tensor[(5, 8, 16), float64] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %954 = divide(%952, %953) /* ty=Tensor[(5, 8, 16), float64] */;
  %955 = cast(%var_10746, dtype="bool") /* ty=Tensor[(5, 8, 16), bool] */;
  %956 = shape_of(%954, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(%954, dtype="bool") /* ty=Tensor[(5, 8, 16), bool] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %959 = @func_2940() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %960 = cast(%var_10745, dtype="float64") /* ty=Tensor[(5, 8, 16), float64] */;
  %961 = not_equal(%957, %958) /* ty=Tensor[(5, 8, 16), bool] */;
  %962 = %959.0;
  %963 = sinh(%960) /* ty=Tensor[(5, 8, 16), float64] */;
  (%961, %962, %963)
}

def @func_14069() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %964 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  %965 = @func_2552() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%964, %965)
}

def @func_5499() -> (Tensor[(16, 13, 14), uint16],) {
  %966 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %967 = %966.0;
  (%967,)
}

def @func_12572() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %968 = @func_5922() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %969 = @func_3180() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */;
  %970 = %968.0;
  %971 = %969.0;
  (%970, %971)
}

def @func_5051() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %972 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %973 = @func_290() /* ty=Tensor[(16, 13, 14), uint16] */;
  %974 = %972.0;
  %975 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%973, %974, %975)
}

def @func_3541() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  %976 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %977 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %978 = %976.2;
  %979 = %977.0;
  (%978, %979)
}

def @func_3677() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %980 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %981 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
  %982 = %980.0;
  (%981, %982)
}

def @func_6757(%var_6626: Tensor[(6, 11, 11), float32]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(6, 11, 11), float32], Tensor[(6, 11, 11), bool], Tensor[(16, 13, 14), uint16]) {
  %983 = @func_2586() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %984 = @func_2720() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %985 = @func_5051() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %986 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %987 = cast(%var_6626, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
  %988 = asin(%987) /* ty=Tensor[(6, 11, 11), float32] */;
  %989 = cast(%988, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
  %990 = cast(%988, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
  %991 = acosh(%990) /* ty=Tensor[(6, 11, 11), float32] */;
  %992 = cast(%991, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
  %993 = acos(%992) /* ty=Tensor[(6, 11, 11), float32] */;
  %994 = cast(%991, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
  %995 = cosh(%994) /* ty=Tensor[(6, 11, 11), float32] */;
  %996 = cast(%995, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %997 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %998 = cast(%993, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1000 = less_equal(%998, %999) /* ty=Tensor[(6, 11, 11), bool] */;
  %1001 = cast(%991, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %1002 = shape_of(%1000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1003 = cast(%1000, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1005 = equal(%1003, %1004) /* ty=Tensor[(6, 11, 11), bool] */;
  %1006 = cast(%var_6626, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %1007 = shape_of(%1005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1008 = cast(%1005, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1010 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1011 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1012 = %983.1;
  %1013 = %984.1;
  %1014 = %985.1;
  %1015 = %986.0;
  %1016 = log(%989) /* ty=Tensor[(6, 11, 11), float32] */;
  %1017 = greater_equal(%1008, %1009) /* ty=Tensor[(6, 11, 11), bool] */;
  %1018 = %1010.0;
  (%1011, %1012, %1013, %1014, %1015, %1016, %1017, %1018)
}

def @func_14579() -> (Tensor[(16, 13, 14), bool],) {
  %1019 = @func_6272() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
  %1020 = %1019.1;
  (%1020,)
}

def @func_900() -> Tensor[(16, 13, 14), uint16] {
  @func_140() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_1152(%var_1144: Tensor[(16, 13, 14), uint16]) -> Tensor[(16, 13, 14), bool] {
  %1021 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1022 = %1021.0;
  %1023 = cast(%var_1144, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %1024 = shape_of(%1022, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1025 = cast(%1022, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1025, %1026) /* ty=Tensor[(16, 13, 14), bool] */
}

def @func_290() -> Tensor[(16, 13, 14), uint16] {
  %1027 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1027.0
}

def @func_4991(%var_4968: Tensor[(16, 9, 10), uint64]) -> (Tensor[(16, 9, 10), uint8], Tensor[(16, 13, 14), uint16]) {
  %1028 = cast(%var_4968, dtype="uint64") /* ty=Tensor[(16, 9, 10), uint64] */;
  %1029 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(16, 9, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1030 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 9, 10), uint64] */, dtype="uint64") /* ty=Tensor[(16, 9, 10), uint64] */;
  %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1032 = subtract(%1030, %1031) /* ty=Tensor[(16, 9, 10), uint64] */;
  %1033 = cast(%var_4968, dtype="uint8") /* ty=Tensor[(16, 9, 10), uint8] */;
  %1034 = shape_of(%1032, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1035 = cast(%1032, dtype="uint8") /* ty=Tensor[(16, 9, 10), uint8] */;
  %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1037 = left_shift(%1035, %1036) /* ty=Tensor[(16, 9, 10), uint8] */;
  %1038 = @func_900() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1037, %1038)
}

def @func_8049() -> (Tensor[(16, 13, 14), uint16],) {
  %1039 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1039,)
}

def @func_11932() -> Tensor[(16, 13, 14), uint16] {
  %1040 = @func_7593() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1040.0
}

def @func_7825(%var_7822: Tensor[(9, 12, 12), float32]) -> (Tensor[(9, 12, 12), float32],) {
  %1041 = cast(%var_7822, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
  %1042 = atanh(%1041) /* ty=Tensor[(9, 12, 12), float32] */;
  (%1042,)
}

def @func_16303() -> (Tensor[(16, 13, 14), uint16],) {
  %1043 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1044 = %1043.1;
  (%1044,)
}

def @func_5790() -> Tensor[(16, 13, 14), uint16] {
  %1045 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1045.0
}

def @func_2363() -> (Tensor[(16, 13, 14), uint16],) {
  %1046 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1047 = %1046.0;
  (%1047,)
}

def @func_11670() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1048 = @func_4123() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1049 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1050 = %1048.0;
  %1051 = %1049.0;
  (%1050, %1051)
}

def @func_12951() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1052 = @func_7305() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1053 = @func_5323() /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 13, 14), uint16]) */;
  %1054 = %1052.0;
  %1055 = %1053.1;
  (%1054, %1055)
}

def @func_15809() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1056 = @func_11893() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1057 = @func_5373() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1058 = %1056.0;
  %1059 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1060 = %1057.0;
  (%1058, %1059, %1060)
}

def @func_3316(%var_3307: Tensor[(10, 5, 7), uint32]) -> (Tensor[(10, 5, 7), uint32],) {
  %1061 = cast(%var_3307, dtype="uint32") /* ty=Tensor[(10, 5, 7), uint32] */;
  %1062 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(10, 5, 7), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1063 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 5, 7), uint32] */, dtype="uint32") /* ty=Tensor[(10, 5, 7), uint32] */;
  %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1065 = bitwise_or(%1063, %1064) /* ty=Tensor[(10, 5, 7), uint32] */;
  (%1065,)
}

def @func_6272() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  %1066 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1067 = @func_3501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
  %1068 = %1066.0;
  %1069 = %1067.1;
  %1070 = @func_6055() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1068, %1069, %1070)
}

def @func_7160() -> (Tensor[(16, 13, 14), uint16],) {
  %1071 = @func_6574() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1072 = %1071.1;
  (%1072,)
}

def @func_2650(%var_2609: Tensor[(5, 5, 4), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(5, 5, 4), float32]) {
  %1073 = @func_2473() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1074 = cast(%var_2609, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
  %1075 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(5, 5, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 5, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1078 = floor_divide(%1076, %1077) /* ty=Tensor[(5, 5, 4), float64] */;
  %1079 = cast(%1078, dtype="float32") /* ty=Tensor[(5, 5, 4), float32] */;
  %1080 = rsqrt(%1079) /* ty=Tensor[(5, 5, 4), float32] */;
  %1081 = cast(%1080, dtype="float32") /* ty=Tensor[(5, 5, 4), float32] */;
  %1082 = %1073.0;
  %1083 = log(%1081) /* ty=Tensor[(5, 5, 4), float32] */;
  (%1082, %1083)
}

def @func_12886(%var_12875: int64) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], int64, Tensor[(16, 13, 14), uint16]) {
  %1084 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1085 = cast(%var_12875, dtype="int64") /* ty=int64 */;
  %1086 = reshape(%1085, newshape=[]) /* ty=int64 */;
  %1087 = @func_10667(%1086) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(13, 10, 6), float64], int64, Tensor[(780), int64], Tensor[(1078), bool]) */;
  %1088 = @func_11256() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1089 = %1084.0;
  %1090 = @func_5584() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1091 = %1087.3;
  %1092 = %1088.0;
  (%1089, %1090, %1091, %var_12875, %1092)
}

def @func_7138() -> (Tensor[(16, 13, 14), bool],) {
  %1093 = @func_2348() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %1094 = %1093.0;
  (%1094,)
}

def @func_3501() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  %1095 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1096 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %1097 = @func_2803() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1098 = %1095.3;
  %1099 = %1096.0;
  %1100 = %1097.0;
  (%1098, %1099, %1100)
}

def @func_3732() -> Tensor[(16, 13, 14), uint16] {
  %1101 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1101.1
}

def @func_9283(%var_9269: Tensor[(16, 11, 2), float32]) -> (Tensor[(16, 11, 2), bool],) {
  %1102 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 11, 2), float32] */, dtype="bool") /* ty=Tensor[(16, 11, 2), bool] */;
  %1103 = shape_of(%var_9269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1104 = cast(%var_9269, dtype="bool") /* ty=Tensor[(16, 11, 2), bool] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1106 = greater_equal(%1104, %1105) /* ty=Tensor[(16, 11, 2), bool] */;
  (%1106,)
}

def @func_14766() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1107 = @func_2067() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1108 = @func_6289() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1109 = %1107.0;
  (%1108, %1109)
}

def @func_13388(%var_13363: Tensor[(14, 16, 12), float64]) -> (Tensor[(14, 16, 12), float64], Tensor[(16, 13, 14), uint16]) {
  %1110 = cast(%var_13363, dtype="float64") /* ty=Tensor[(14, 16, 12), float64] */;
  %1111 = sigmoid(%1110) /* ty=Tensor[(14, 16, 12), float64] */;
  %1112 = cast(%1111, dtype="float64") /* ty=Tensor[(14, 16, 12), float64] */;
  %1113 = @func_4553() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1114 = exp(%1112) /* ty=Tensor[(14, 16, 12), float64] */;
  %1115 = %1113.0;
  (%1114, %1115)
}

def @func_7933() -> Tensor[(16, 13, 14), uint16] {
  %1116 = @func_5922() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1116.1
}

def @func_2720() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1117 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1118 = %1117.0;
  %1119 = @func_900() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1118, %1119)
}

def @func_9766() -> Tensor[(11, 13, 13), float32] {
  %1120 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 13, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 13), float32] */;
  sinh(%1120) /* ty=Tensor[(11, 13, 13), float32] */
}

def @func_12802() -> Tensor[(16, 13, 14), uint16] {
  %1121 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1121.0
}

def @func_10667(%var_10644: int64) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(13, 10, 6), float64], int64, Tensor[(780), int64], Tensor[(1078), bool]) {
  %1122 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1123 = @func_10154() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1124 = %1122.3;
  %1125 = cast(%1124, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %1126 = reshape(%1125, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %1127 = cast(%var_10644, dtype="int64") /* ty=int64 */;
  %1128 = cast(meta[relay.Constant][40] /* ty=Tensor[(780), int64] */, dtype="int64") /* ty=Tensor[(780), int64] */;
  %1129 = cast(meta[relay.Constant][41] /* ty=Tensor[(1078), bool] */, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %1130 = reshape(%1127, newshape=[]) /* ty=int64 */;
  %1131 = reshape(%1128, newshape=[780]) /* ty=Tensor[(780), int64] */;
  %1132 = reshape(%1129, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), bool] */;
  %1133 = @func_4105(%1130, %1131, %1132) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], int64, Tensor[(780), int64], Tensor[(7, 11, 14), bool], Tensor[(1078, 1), bool], Tensor[(13, 10, 6), float64]) */;
  %1134 = @func_5790() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1135 = %1123.1;
  %1136 = @func_3612(%1126) /* ty=Tensor[(16, 13, 14), int32] */;
  %1137 = %1133.8;
  (%1124, %1134, %1135, %1136, %1137, %var_10644, meta[relay.Constant][40] /* ty=Tensor[(780), int64] */, meta[relay.Constant][41] /* ty=Tensor[(1078), bool] */)
}

def @func_3549() -> Tensor[(16, 13, 14), bool] {
  %1138 = @func_2348() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %1138.0
}

def @func_1027(%var_945: Tensor[(294), float64]) -> (Tensor[(3, 14, 7), float32], Tensor[(294), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1139 = cast(%var_945, dtype="float64") /* ty=Tensor[(294), float64] */;
  %1140 = cast(%var_945, dtype="float64") /* ty=Tensor[(294), float64] */;
  %1141 = reshape(%1139, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float64] */;
  %1142 = reshape(%1140, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float64] */;
  %1143 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1144 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1145 = %1144.0;
  %1146 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1147 = %1146.0;
  %1148 = cast(%1147, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %1149 = shape_of(%1145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1150 = cast(%1145, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1152 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1153 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1154 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1155 = %1154.2;
  %1156 = cast(%1155, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %1157 = cast(%1155, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %1158 = reshape(%1157, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %1159 = @func_675(%1158) /* ty=(Tensor[(16, 13, 14), float64],) */;
  %1160 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1161 = @func_528(%1141, %1142) /* ty=Tensor[(3, 14, 7), float32] */;
  %1162 = %1143.0;
  %1163 = subtract(%1150, %1151) /* ty=Tensor[(16, 13, 14), uint16] */;
  %1164 = %1152.0;
  %1165 = %1153.0;
  %1166 = sigmoid(%1156) /* ty=Tensor[(16, 13, 14), float64] */;
  %1167 = %1159.0;
  %1168 = %1160.3;
  %1169 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1161, %var_945, %1162, %1163, %1164, %1165, %1166, %1167, %1168, %1169)
}

def @func_4009(%var_3997: Tensor[(350), uint32], %var_4003: Tensor[(294), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(10, 5, 7), uint32], Tensor[(350), uint32], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) {
  %1170 = cast(%var_3997, dtype="uint32") /* ty=Tensor[(350), uint32] */;
  %1171 = reshape(%1170, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), uint32] */;
  %1172 = @func_3316(%1171) /* ty=(Tensor[(10, 5, 7), uint32],) */;
  %1173 = cast(%var_4003, dtype="float64") /* ty=Tensor[(294), float64] */;
  %1174 = reshape(%1173, newshape=[294]) /* ty=Tensor[(294), float64] */;
  %1175 = @func_1027(%1174) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(294), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1176 = @func_3900() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1177 = %1172.0;
  %1178 = %1175.8;
  (%1176, %1177, %var_3997, %1178, %var_4003)
}

def @func_15587() -> (Tensor[(16, 13, 14), uint16],) {
  %1179 = @func_15542() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1180 = %1179.0;
  (%1180,)
}

def @func_4914(%var_4867: Tensor[(294), float64], %var_4907: Tensor[(780), int64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(350), uint32], Tensor[(294), float64], Tensor[(16, 13, 14), int32], Tensor[(10, 5, 7), float32], Tensor[(13, 10, 6), bool], int64, Tensor[(780), int64]) {
  %1181 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1182 = %1181.0;
  %1183 = cast(%1182, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %1184 = reshape(%1183, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %1185 = cast(meta[relay.Constant][42] /* ty=Tensor[(350), uint32] */, dtype="uint32") /* ty=Tensor[(350), uint32] */;
  %1186 = cast(%var_4867, dtype="float64") /* ty=Tensor[(294), float64] */;
  %1187 = reshape(%1185, newshape=[350]) /* ty=Tensor[(350), uint32] */;
  %1188 = reshape(%1186, newshape=[294]) /* ty=Tensor[(294), float64] */;
  %1189 = @func_4009(%1187, %1188) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(10, 5, 7), uint32], Tensor[(350), uint32], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */;
  %1190 = %1189.1;
  %1191 = cast(%1190, dtype="float32") /* ty=Tensor[(10, 5, 7), float32] */;
  %1192 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1193 = cast(%var_4907, dtype="int64") /* ty=Tensor[(780), int64] */;
  %1194 = reshape(%1192, newshape=[]) /* ty=int64 */;
  %1195 = reshape(%1193, newshape=[13, 10, 6]) /* ty=Tensor[(13, 10, 6), int64] */;
  %1196 = @func_2664(%1194, %1195) /* ty=(Tensor[(13, 10, 6), bool],) */;
  %1197 = @func_3612(%1184) /* ty=Tensor[(16, 13, 14), int32] */;
  %1198 = exp(%1191) /* ty=Tensor[(10, 5, 7), float32] */;
  %1199 = %1196.0;
  (%1182, meta[relay.Constant][42] /* ty=Tensor[(350), uint32] */, %var_4867, %1197, %1198, %1199, -5 /* ty=int64 */, %var_4907)
}

def @func_15160(%var_15125: Tensor[(12, 16, 5), float32]) -> (Tensor[(16, 13, 14), uint16], Tensor[(12, 16, 5), uint8], Tensor[(16, 13, 14), uint16]) {
  %1200 = cast(%var_15125, dtype="float32") /* ty=Tensor[(12, 16, 5), float32] */;
  %1201 = log10(%1200) /* ty=Tensor[(12, 16, 5), float32] */;
  %1202 = cast(%1201, dtype="float32") /* ty=Tensor[(12, 16, 5), float32] */;
  %1203 = log2(%1202) /* ty=Tensor[(12, 16, 5), float32] */;
  %1204 = cast(%1203, dtype="bool") /* ty=Tensor[(12, 16, 5), bool] */;
  %1205 = shape_of(%var_15125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1206 = cast(%var_15125, dtype="bool") /* ty=Tensor[(12, 16, 5), bool] */;
  %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1208 = equal(%1206, %1207) /* ty=Tensor[(12, 16, 5), bool] */;
  %1209 = cast(%var_15125, dtype="uint8") /* ty=Tensor[(12, 16, 5), uint8] */;
  %1210 = shape_of(%1208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1211 = cast(%1208, dtype="uint8") /* ty=Tensor[(12, 16, 5), uint8] */;
  %1212 = dyn.reshape(%1209, %1210, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1213 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1214 = @func_6289() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1215 = right_shift(%1211, %1212) /* ty=Tensor[(12, 16, 5), uint8] */;
  %1216 = %1213.0;
  (%1214, %1215, %1216)
}

def @func_4198() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1217 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1218 = @func_3882() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1219 = @func_1243() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1220 = @func_3180() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */;
  %1221 = %1217.0;
  %1222 = %1218.1;
  %1223 = %1219.0;
  %1224 = %1220.0;
  (%1221, %1222, %1223, %1224)
}

def @func_13797(%var_13763: Tensor[(14, 1, 15), float64], %var_13769: Tensor[(14, 14, 15), float64]) -> (Tensor[(14, 14, 15), uint32], Tensor[(16, 13, 14), uint16]) {
  %1225 = cast(%var_13763, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %1226 = asin(%1225) /* ty=Tensor[(14, 1, 15), float64] */;
  %1227 = cast(%1226, dtype="int16") /* ty=Tensor[(14, 1, 15), int16] */;
  %1228 = cast(%var_13769, dtype="int16") /* ty=Tensor[(14, 14, 15), int16] */;
  %1229 = bitwise_or(%1227, %1228) /* ty=Tensor[(14, 14, 15), int16] */;
  %1230 = cast(%var_13769, dtype="uint32") /* ty=Tensor[(14, 14, 15), uint32] */;
  %1231 = shape_of(%1229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1232 = cast(%1229, dtype="uint32") /* ty=Tensor[(14, 14, 15), uint32] */;
  %1233 = dyn.reshape(%1230, %1231, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1234 = logical_xor(%1232, %1233) /* ty=Tensor[(14, 14, 15), uint32] */;
  %1235 = @func_9082() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1234, %1235)
}

def @func_15368() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1236 = @func_14687() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
  %1237 = @func_12572() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1238 = @func_12495() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1239 = @func_5697() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1240 = %1236.0;
  %1241 = %1237.1;
  %1242 = @func_9431() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1238, %1239, %1240, %1241, %1242)
}

def @func_11436() -> (Tensor[(16, 13, 14), uint16],) {
  %1243 = @func_900() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1243,)
}

def @func_3093(%var_3070: Tensor[(7, 11, 14), bool], %var_3071: Tensor[(7, 11, 14), bool]) -> (Tensor[(7, 11, 14), bool],) {
  %1244 = cast(%var_3071, dtype="bool") /* ty=Tensor[(7, 11, 14), bool] */;
  %1245 = shape_of(%var_3070, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1246 = cast(%var_3070, dtype="bool") /* ty=Tensor[(7, 11, 14), bool] */;
  %1247 = dyn.reshape(%1244, %1245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1248 = logical_or(%1246, %1247) /* ty=Tensor[(7, 11, 14), bool] */;
  (%1248,)
}

def @func_9047() -> (Tensor[(16, 13, 14), uint16], Tensor[(9, 9, 14), float64], Tensor[(16, 13, 14), uint16]) {
  %1249 = @func_1243() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1250 = %1249.1;
  %1251 = @func_6910() /* ty=Tensor[(9, 9, 14), float64] */;
  %1252 = @func_2765() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1250, %1251, %1252)
}

def @func_11706() -> (Tensor[(16, 13, 14), uint16],) {
  %1253 = @func_6611() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1254 = %1253.1;
  (%1254,)
}

def @func_370() -> Tensor[(16, 13, 14), uint16] {
  @func_140() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_620() -> (Tensor[(16, 13, 14), uint16],) {
  %1255 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1255,)
}

def @func_5255(%var_5248: Tensor[(12, 1, 10), float64]) -> Tensor[(12, 15, 10), float64] {
  %1256 = cast(%var_5248, dtype="float64") /* ty=Tensor[(12, 1, 10), float64] */;
  %1257 = cast(meta[relay.Constant][43] /* ty=Tensor[(12, 15, 10), float64] */, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
  divide(%1256, %1257) /* ty=Tensor[(12, 15, 10), float64] */
}

def @func_11750() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100, 1), float64]) {
  %1258 = @func_2348() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %1259 = @func_3677() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1260 = cast(meta[relay.Constant][44] /* ty=Tensor[(100, 1), float64] */, dtype="float64") /* ty=Tensor[(100, 1), float64] */;
  %1261 = reshape(%1260, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
  %1262 = @func_2650(%1261) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(5, 5, 4), float32]) */;
  %1263 = %1258.0;
  %1264 = %1259.1;
  %1265 = %1262.0;
  (%1263, %1264, %1265, meta[relay.Constant][44] /* ty=Tensor[(100, 1), float64] */)
}

def @func_12381() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1266 = @func_6944() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1267 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1268 = @func_5224() /* ty=Tensor[(16, 13, 14), bool] */;
  %1269 = %1266.0;
  %1270 = %1267.0;
  (%1268, %1269, %1270)
}

def @func_12028(%var_12000: Tensor[(10, 15, 10), float32], %var_12001: Tensor[(10, 15, 10), float32]) -> (Tensor[(10, 15, 10), float32], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(10, 15, 10), uint32], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  %1271 = cast(%var_12001, dtype="float32") /* ty=Tensor[(10, 15, 10), float32] */;
  %1272 = shape_of(%var_12000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1273 = cast(%var_12000, dtype="float32") /* ty=Tensor[(10, 15, 10), float32] */;
  %1274 = dyn.reshape(%1271, %1272, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1275 = cast(%var_12000, dtype="uint32") /* ty=Tensor[(10, 15, 10), uint32] */;
  %1276 = shape_of(%var_12001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1277 = cast(%var_12001, dtype="uint32") /* ty=Tensor[(10, 15, 10), uint32] */;
  %1278 = dyn.reshape(%1275, %1276, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1279 = @func_2940() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1280 = divide(%1273, %1274) /* ty=Tensor[(10, 15, 10), float32] */;
  %1281 = @func_8878() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1282 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1283 = minimum(%1277, %1278) /* ty=Tensor[(10, 15, 10), uint32] */;
  %1284 = @func_5224() /* ty=Tensor[(16, 13, 14), bool] */;
  %1285 = %1279.0;
  (%1280, %1281, %1282, %1283, %1284, %1285)
}

def @func_450() -> (Tensor[(16, 13, 14), uint16],) {
  %1286 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1287 = %1286.0;
  (%1287,)
}

def @func_11380() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1288 = @func_10253() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1289 = @func_10456() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1290 = %1288.1;
  %1291 = %1289.1;
  %1292 = @func_5584() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1290, %1291, %1292)
}

def @func_5651() -> (Tensor[(16, 13, 14), uint16],) {
  %1293 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1294 = %1293.0;
  (%1294,)
}

def @func_11893() -> (Tensor[(16, 13, 14), uint16],) {
  %1295 = @func_10456() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1296 = %1295.0;
  (%1296,)
}

def @func_6944() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1297 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1298 = @func_4959() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1299 = %1297.0;
  %1300 = %1298.1;
  (%1299, %1300)
}

def @func_5211() -> Tensor[(16, 13, 14), uint16] {
  %1301 = @func_4213() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], uint64) */;
  %1301.1
}

def @func_16008() -> (Tensor[(16, 13, 14), uint16],) {
  %1302 = @func_6510() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */;
  %1303 = %1302.2;
  (%1303,)
}

def @func_3900() -> Tensor[(16, 13, 14), uint16] {
  %1304 = @func_3026() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %1304.0
}

def @func_2552() -> Tensor[(16, 13, 14), uint16] {
  %1305 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1305.0
}

def @func_15542() -> (Tensor[(16, 13, 14), uint16],) {
  %1306 = @func_10891() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1306,)
}

def @func_16393() -> Tensor[(16, 13, 14), uint16] {
  %1307 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1307.0
}

def @func_2748() -> (Tensor[(16, 13, 14), uint16],) {
  %1308 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1309 = %1308.0;
  (%1309,)
}

def @func_12495() -> Tensor[(16, 13, 14), uint16] {
  @func_9548() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_11396() -> Tensor[(16, 13, 14), uint16] {
  %1310 = @func_2748() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1310.0
}

def @func_9316() -> (Tensor[(16, 13, 14), uint16],) {
  %1311 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1311,)
}

def @func_4770() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  %1312 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1313 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %1314 = %1312.0;
  %1315 = %1313.0;
  (%1314, %1315)
}

def @func_4330() -> Tensor[(16, 13, 14), uint16] {
  %1316 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1316.0
}

def @func_11610(%var_11579: Tensor[(4, 13, 9), uint8]) -> (Tensor[(4, 13, 9), uint8], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1317 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 13, 9), uint8] */, dtype="uint8") /* ty=Tensor[(4, 13, 9), uint8] */;
  %1318 = shape_of(%var_11579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1319 = cast(%var_11579, dtype="uint8") /* ty=Tensor[(4, 13, 9), uint8] */;
  %1320 = dyn.reshape(%1317, %1318, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1321 = @func_6510() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */;
  %1322 = @func_8681() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1323 = left_shift(%1319, %1320) /* ty=Tensor[(4, 13, 9), uint8] */;
  %1324 = %1321.0;
  %1325 = %1322.0;
  %1326 = @func_10395() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1323, %1324, %1325, %1326)
}

def @func_6910() -> Tensor[(9, 9, 14), float64] {
  %1327 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 9, 14), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
  cosh(%1327) /* ty=Tensor[(9, 9, 14), float64] */
}

def @func_12433() -> (Tensor[(16, 13, 14), uint16],) {
  %1328 = @func_9994() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1329 = %1328.0;
  (%1329,)
}

def @func_9603() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1330 = @func_6510() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */;
  %1331 = @func_5697() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1332 = %1330.2;
  (%1331, %1332)
}

def @func_1874() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1333 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1334 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1335 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %1336 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1337 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1338 = %1333.2;
  %1339 = %1334.0;
  %1340 = %1335.0;
  %1341 = %1336.0;
  %1342 = %1337.0;
  (%1338, %1339, %1340, %1341, %1342)
}

def @func_14720() -> Tensor[(16, 13, 14), uint16] {
  @func_481() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_13963() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1343 = @func_10253() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1344 = @func_13226() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 9, 10), uint8], Tensor[(720, 2), uint64], Tensor[(16, 13, 14), uint16]) */;
  %1345 = %1343.1;
  %1346 = %1344.1;
  (%1345, %1346)
}

def @func_15877() -> Tensor[(16, 13, 14), uint16] {
  %1347 = @func_3677() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1347.1
}

def @func_16204() -> Tensor[(16, 13, 14), uint16] {
  @func_8878() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_14558() -> (Tensor[(16, 13, 14), uint16],) {
  %1348 = @func_10874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1349 = %1348.0;
  (%1349,)
}

def @func_1219() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1350 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1351 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1352 = %1350.0;
  %1353 = %1351.0;
  (%1352, %1353)
}

def @func_1535() -> (Tensor[(16, 13, 14), uint16],) {
  %1354 = @func_290() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1354,)
}

def @func_7760() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1355 = @func_5922() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1356 = @func_6546() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1357 = %1355.1;
  %1358 = %1356.0;
  (%1357, %1358)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13330() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %4 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %0 = @func_5713() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1 = @func_11670() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %2 = %0.0;
    %3 = %1.1;
    (%2, %3)
  };
  %4() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_14569() -> (Tensor[(16, 13, 14), uint16],) {
  %7 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %5 = @func_4959() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %6 = %5.0;
    (%6,)
  };
  %7() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_15120() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %8 = @func_13226() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 9, 10), uint8], Tensor[(720, 2), uint64], Tensor[(16, 13, 14), uint16]) */;
  %9 = @func_3732() /* ty=Tensor[(16, 13, 14), uint16] */;
  %10 = %8.1;
  (%9, %10)
}

def @func_4959() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %11 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %12 = @func_3882() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %13 = %11.3;
  %14 = %12.3;
  (%13, %14)
}

def @func_14687() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  %15 = @func_13963() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %16 = @func_12096() /* ty=Tensor[(16, 13, 14), uint16] */;
  %17 = @func_5224() /* ty=Tensor[(16, 13, 14), bool] */;
  %18 = %15.1;
  (%16, %17, %18)
}

def @func_12828() -> Tensor[(16, 13, 14), uint16] {
  %19 = fn () -> Tensor[(16, 13, 14), uint16] {
    @func_290() /* ty=Tensor[(16, 13, 14), uint16] */
  };
  %19() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_15633() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %20 = @func_6944() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %21 = %20.1;
  %22 = cast(%21, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %23 = reshape(%22, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %24 = @func_1110(%23) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), uint16]) */;
  %25 = %24.4;
  (%21, %25)
}

def @func_900() -> Tensor[(16, 13, 14), uint16] {
  @func_140() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_11894() -> (Tensor[(16, 13, 14), uint16],) {
  %28 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %26 = @func_10456() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %27 = %26.0;
    (%27,)
  };
  %28() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_4109(%var_4106: int64, %var_4107: Tensor[(780), int64], %var_4108: Tensor[(1078, 1), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], int64, Tensor[(780), int64], Tensor[(7, 11, 14), bool], Tensor[(1078, 1), bool], Tensor[(13, 10, 6), float64]) {
  %56 = fn (%var_4081: int64, %var_4082: Tensor[(780), int64], %var_4090: Tensor[(1078, 1), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], int64, Tensor[(780), int64], Tensor[(7, 11, 14), bool], Tensor[(1078, 1), bool], Tensor[(13, 10, 6), float64]) {
    %29 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %30 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %31 = %30.0;
    %32 = cast(%31, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
    %33 = @func_3677() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %34 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %35 = cast(%var_4090, dtype="bool") /* ty=Tensor[(1078, 1), bool] */;
    %36 = cast(%var_4090, dtype="bool") /* ty=Tensor[(1078, 1), bool] */;
    %37 = reshape(%35, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
    %38 = reshape(%36, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
    %39 = @func_3093(%37, %38) /* ty=(Tensor[(7, 11, 14), bool],) */;
    %40 = cast(%var_4081, dtype="int64") /* ty=int64 */;
    %41 = cast(%var_4082, dtype="int64") /* ty=Tensor[(780), int64] */;
    %42 = reshape(%40, newshape=[]) /* ty=int64 */;
    %43 = reshape(%41, newshape=[13, 10, 6]) /* ty=Tensor[(13, 10, 6), int64] */;
    %44 = @func_2664(%42, %43) /* ty=(Tensor[(13, 10, 6), bool],) */;
    %45 = %44.0;
    %46 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 10, 6), bool] */, dtype="float64") /* ty=Tensor[(13, 10, 6), float64] */;
    %47 = shape_of(%45, dtype="int32") /* ty=Tensor[(3), int32] */;
    %48 = cast(%45, dtype="float64") /* ty=Tensor[(13, 10, 6), float64] */;
    %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %50 = %29.2;
    %51 = exp(%32) /* ty=Tensor[(16, 13, 14), float64] */;
    %52 = %33.1;
    %53 = %34.0;
    %54 = %39.0;
    %55 = divide(%48, %49) /* ty=Tensor[(13, 10, 6), float64] */;
    (%50, %51, %52, %53, %var_4081, %var_4082, %54, %var_4090, %55)
  };
  %56(%var_4106, %var_4107, %var_4108) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], int64, Tensor[(780), int64], Tensor[(7, 11, 14), bool], Tensor[(1078, 1), bool], Tensor[(13, 10, 6), float64]) */
}

def @func_370() -> Tensor[(16, 13, 14), uint16] {
  @func_140() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_14817(%var_14815: Tensor[(294), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64], Tensor[(49, 6), float64]) {
  @func_14814(%var_14815) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64], Tensor[(49, 6), float64]) */
}

def @func_16395() -> Tensor[(16, 13, 14), uint16] {
  @func_16393() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_9641(%var_9633: Tensor[(12, 11, 2), int8], %var_9634: Tensor[(12, 11, 2), int8]) -> Tensor[(12, 11, 2), int8] {
  %57 = cast(%var_9634, dtype="int8") /* ty=Tensor[(12, 11, 2), int8] */;
  %58 = shape_of(%var_9633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%var_9633, dtype="int8") /* ty=Tensor[(12, 11, 2), int8] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%59, %60) /* ty=Tensor[(12, 11, 2), int8] */
}

def @func_12433() -> (Tensor[(16, 13, 14), uint16],) {
  %61 = @func_9994() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %62 = %61.0;
  (%62,)
}

def @func_3900() -> Tensor[(16, 13, 14), uint16] {
  %63 = @func_3026() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %63.0
}

def @func_5345() -> (Tensor[(16, 13, 14), uint16],) {
  @func_5343() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_16393() -> Tensor[(16, 13, 14), uint16] {
  %64 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %64.0
}

def @func_11671() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %69 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %65 = @func_4123() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %66 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %67 = %65.0;
    %68 = %66.0;
    (%67, %68)
  };
  %69() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_1113(%var_1111: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), uint16]) {
  @func_1110(%var_1111) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), uint16]) */
}

def @func_15587() -> (Tensor[(16, 13, 14), uint16],) {
  %70 = @func_15542() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %71 = %70.0;
  (%71,)
}

def @func_12280() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %72 = @func_2586() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %73 = %72.1;
  %74 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%73, %74)
}

def @func_1935(%var_1933: bool) -> (Tensor[(16, 15, 11), bool], Tensor[(16, 15, 11), int16], Tensor[(16, 13, 14), uint16]) {
  @func_1932(%var_1933) /* ty=(Tensor[(16, 15, 11), bool], Tensor[(16, 15, 11), int16], Tensor[(16, 13, 14), uint16]) */
}

def @func_6868() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %80 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %75 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %76 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %77 = %75.0;
    %78 = %76.0;
    %79 = @func_2765() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%77, %78, %79)
  };
  %80() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_8325() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  %89 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
    %81 = @func_4959() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %82 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %83 = %82.1;
    %84 = cast(%83, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
    %85 = reshape(%84, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
    %86 = @func_6081(%85) /* ty=(Tensor[(16, 13, 14), bool],) */;
    %87 = %81.0;
    %88 = %86.0;
    (%87, %83, %88)
  };
  %89() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */
}

def @func_15543() -> (Tensor[(16, 13, 14), uint16],) {
  %91 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %90 = @func_10891() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%90,)
  };
  %91() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_16305() -> (Tensor[(16, 13, 14), uint16],) {
  @func_16303() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_6945() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %96 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %92 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %93 = @func_4959() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %94 = %92.0;
    %95 = %93.1;
    (%94, %95)
  };
  %96() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_774() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %97 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %98 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %99 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %100 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %101 = %97.0;
  %102 = %98.0;
  %103 = %99.0;
  %104 = %100.0;
  (%101, %102, %103, %104)
}

def @func_2722() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_2720() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_372() -> Tensor[(16, 13, 14), uint16] {
  @func_370() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_9752() -> (Tensor[(16, 13, 14), uint16],) {
  @func_9750() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_12351(%var_12349: Tensor[(25, 4), float64], %var_12350: Tensor[(120), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), bool], Tensor[(25, 4), float64], Tensor[(12, 11, 2), int8], Tensor[(264), int8], Tensor[(16, 13, 14), uint16], Tensor[(120), float64]) {
  %125 = fn (%var_12326: Tensor[(25, 4), float64], %var_12338: Tensor[(120), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), bool], Tensor[(25, 4), float64], Tensor[(12, 11, 2), int8], Tensor[(264), int8], Tensor[(16, 13, 14), uint16], Tensor[(120), float64]) {
    %105 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %106 = @func_5051() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %107 = @func_8324() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
    %108 = cast(%var_12326, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
    %109 = reshape(%108, newshape=[50, 2]) /* ty=Tensor[(50, 2), float64] */;
    %110 = @func_8983(%109) /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(50, 2), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %111 = cast(meta[relay.Constant][1] /* ty=Tensor[(264), int8] */, dtype="int8") /* ty=Tensor[(264), int8] */;
    %112 = cast(meta[relay.Constant][1] /* ty=Tensor[(264), int8] */, dtype="int8") /* ty=Tensor[(264), int8] */;
    %113 = reshape(%111, newshape=[12, 11, 2]) /* ty=Tensor[(12, 11, 2), int8] */;
    %114 = reshape(%112, newshape=[12, 11, 2]) /* ty=Tensor[(12, 11, 2), int8] */;
    %115 = cast(%var_12338, dtype="float64") /* ty=Tensor[(120), float64] */;
    %116 = reshape(%115, newshape=[1, 120]) /* ty=Tensor[(1, 120), float64] */;
    %117 = @func_9190(%116) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float64], Tensor[(1, 120), float64]) */;
    %118 = %105.0;
    %119 = @func_5211() /* ty=Tensor[(16, 13, 14), uint16] */;
    %120 = %106.1;
    %121 = %107.2;
    %122 = %110.0;
    %123 = @func_9641(%113, %114) /* ty=Tensor[(12, 11, 2), int8] */;
    %124 = %117.0;
    (%118, %119, %120, %121, %122, %var_12326, %123, meta[relay.Constant][1] /* ty=Tensor[(264), int8] */, %124, %var_12338)
  };
  %125(%var_12349, %var_12350) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), bool], Tensor[(25, 4), float64], Tensor[(12, 11, 2), int8], Tensor[(264), int8], Tensor[(16, 13, 14), uint16], Tensor[(120), float64]) */
}

def @func_9996() -> (Tensor[(16, 13, 14), uint16],) {
  @func_9994() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_16259() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(77, 14), bool]) {
  @func_16257() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(77, 14), bool]) */
}

def @func_10375() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %128 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %126 = @func_2765() /* ty=Tensor[(16, 13, 14), uint16] */;
    %127 = @func_5584() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%126, %127)
  };
  %128() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_1524() -> (Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_7696() -> Tensor[(16, 13, 14), uint16] {
  %129 = @func_5672() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %129.0
}

def @func_7859() -> Tensor[(16, 13, 14), uint16] {
  @func_3732() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_7982() -> Tensor[(16, 13, 14), uint16] {
  %130 = @func_6574() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %130.0
}

def @func_3503() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  @func_3501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */
}

def @func_4478() -> Tensor[(16, 13, 14), bool] {
  %132 = fn () -> Tensor[(16, 13, 14), bool] {
    %131 = @func_3501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
    %131.1
  };
  %132() /* ty=Tensor[(16, 13, 14), bool] */
}

def @func_11258() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_11256() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_12888(%var_12887: int64) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], int64, Tensor[(16, 13, 14), uint16]) {
  %142 = fn (%var_12875: int64) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], int64, Tensor[(16, 13, 14), uint16]) {
    %133 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %134 = cast(%var_12875, dtype="int64") /* ty=int64 */;
    %135 = reshape(%134, newshape=[]) /* ty=int64 */;
    %136 = @func_10667(%135) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(13, 10, 6), float64], int64, Tensor[(780), int64], Tensor[(1078), bool]) */;
    %137 = @func_11256() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %138 = %133.0;
    %139 = @func_5584() /* ty=Tensor[(16, 13, 14), uint16] */;
    %140 = %136.3;
    %141 = %137.0;
    (%138, %139, %140, %var_12875, %141)
  };
  %142(%var_12887) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], int64, Tensor[(16, 13, 14), uint16]) */
}

def @func_13391(%var_13389: Tensor[(14, 16, 12), float64]) -> (Tensor[(14, 16, 12), float64], Tensor[(16, 13, 14), uint16]) {
  @func_13388(%var_13389) /* ty=(Tensor[(14, 16, 12), float64], Tensor[(16, 13, 14), uint16]) */
}

def @func_12551() -> Tensor[(16, 13, 14), uint16] {
  %144 = fn () -> Tensor[(16, 13, 14), uint16] {
    %143 = @func_8194() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %143.0
  };
  %144() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_14946() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_14944() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_292() -> Tensor[(16, 13, 14), uint16] {
  @func_290() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_5771(%var_5769: Tensor[(780), int64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(294), float64], Tensor[(780), int64]) {
  @func_5768(%var_5769) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(294), float64], Tensor[(780), int64]) */
}

def @func_15635() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_15633() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_16204() -> Tensor[(16, 13, 14), uint16] {
  @func_8878() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_10891() -> Tensor[(16, 13, 14), uint16] {
  %145 = @func_3882() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %145.0
}

def @func_7935() -> Tensor[(16, 13, 14), uint16] {
  @func_7933() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_8080() -> (Tensor[(16, 13, 14), uint16],) {
  @func_8078() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_590() -> Tensor[(16, 13, 14), uint16] {
  @func_588() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_9944(%var_9943: Tensor[(1078), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool], Tensor[(16, 13, 14), uint16]) {
  %155 = fn (%var_9924: Tensor[(1078), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool], Tensor[(16, 13, 14), uint16]) {
    %146 = cast(%var_9924, dtype="bool") /* ty=Tensor[(1078), bool] */;
    %147 = cast(%var_9924, dtype="bool") /* ty=Tensor[(1078), bool] */;
    %148 = reshape(%146, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
    %149 = reshape(%147, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
    %150 = @func_3093(%148, %149) /* ty=(Tensor[(7, 11, 14), bool],) */;
    %151 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %152 = @func_5790() /* ty=Tensor[(16, 13, 14), uint16] */;
    %153 = %150.0;
    %154 = %151.0;
    (%152, %153, %var_9924, %154)
  };
  %155(%var_9943) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool], Tensor[(16, 13, 14), uint16]) */
}

def @func_15729() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %156 = @func_14024() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %157 = @func_10386() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %158 = @func_15633() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %159 = %156.0;
  %160 = %157.0;
  %161 = %158.1;
  (%159, %160, %161)
}

def @func_11867() -> Tensor[(16, 13, 14), uint16] {
  @func_11865() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_252() -> (Tensor[(16, 13, 14), uint16],) {
  %162 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%162,)
}

def @func_14987() -> (Tensor[(16, 13, 14), uint16],) {
  @func_14985() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_1221() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_4555() -> (Tensor[(16, 13, 14), uint16],) {
  @func_4553() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_6214() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %169 = fn () -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %163 = @func_2022() /* ty=(Tensor[(16, 13, 14), bool],) */;
    %164 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %165 = @func_4553() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %166 = %163.0;
    %167 = %164.0;
    %168 = %165.0;
    (%166, %167, %168)
  };
  %169() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_4604(%var_4602: Tensor[(1078), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool]) {
  @func_4601(%var_4602) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool]) */
}

def @func_1110(%var_1086: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), uint16]) {
  %170 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
  %171 = cast(%var_1086, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%170, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %175 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
  %176 = cast(%175, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %177 = reshape(%176, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %178 = @func_675(%177) /* ty=(Tensor[(16, 13, 14), float64],) */;
  %179 = cast(%var_1086, dtype="float32") /* ty=Tensor[(16, 13, 14), float32] */;
  %180 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %181 = less_equal(%173, %174) /* ty=Tensor[(16, 13, 14), bool] */;
  %182 = %178.0;
  %183 = sinh(%179) /* ty=Tensor[(16, 13, 14), float32] */;
  %184 = %180.1;
  (%175, %181, %182, %183, %184)
}

def @func_4918(%var_4916: Tensor[(294), float64], %var_4917: Tensor[(780), int64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(350), uint32], Tensor[(294), float64], Tensor[(16, 13, 14), int32], Tensor[(10, 5, 7), float32], Tensor[(13, 10, 6), bool], int64, Tensor[(780), int64]) {
  @func_4914(%var_4916, %var_4917) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(350), uint32], Tensor[(294), float64], Tensor[(16, 13, 14), int32], Tensor[(10, 5, 7), float32], Tensor[(13, 10, 6), bool], int64, Tensor[(780), int64]) */
}

def @func_8830() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %190 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %185 = @func_4213() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], uint64) */;
    %186 = @func_7933() /* ty=Tensor[(16, 13, 14), uint16] */;
    %187 = %185.1;
    %188 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
    %189 = @func_5211() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%186, %187, %188, %189)
  };
  %190() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_7861() -> Tensor[(16, 13, 14), uint16] {
  @func_7859() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_8050() -> (Tensor[(16, 13, 14), uint16],) {
  %192 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %191 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%191,)
  };
  %192() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_5584() -> Tensor[(16, 13, 14), uint16] {
  %193 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %193.0
}

def @func_1081() -> Tensor[(16, 13, 14), uint16] {
  %200 = fn () -> Tensor[(16, 13, 14), uint16] {
    %194 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %195 = %194.0;
    %196 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 13, 14), uint16] */, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
    %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
    %198 = cast(%195, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
    %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    multiply(%198, %199) /* ty=Tensor[(16, 13, 14), uint16] */
  };
  %200() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_8983(%var_8913: Tensor[(50, 2), float64]) -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(50, 2), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %201 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %202 = @func_7760() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %203 = cast(%var_8913, dtype="float64") /* ty=Tensor[(50, 2), float64] */;
  %204 = reshape(%203, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %205 = @func_4462(%204) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100), uint8], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %206 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %207 = @func_6546() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %208 = %201.0;
  %209 = %202.1;
  %210 = %205.2;
  %211 = %206.3;
  %212 = @func_6289() /* ty=Tensor[(16, 13, 14), uint16] */;
  %213 = %207.0;
  (%208, %209, %210, %var_8913, %211, %212, %213)
}

def @func_290() -> Tensor[(16, 13, 14), uint16] {
  %214 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %214.0
}

def @func_2180() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  @func_2178() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */
}

def @func_10036() -> (Tensor[(16, 13, 14), uint16],) {
  %215 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %216 = %215.0;
  (%216,)
}

def @func_12282() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_12280() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_16094() -> Tensor[(16, 13, 14), uint16] {
  %218 = fn () -> Tensor[(16, 13, 14), uint16] {
    %217 = @func_5922() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %217.1
  };
  %218() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_8636() -> (Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16]) {
  %223 = fn () -> (Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16]) {
    %219 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %220 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %221 = %219.0;
    %222 = %220.0;
    (%221, %222)
  };
  %223() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16]) */
}

def @func_10067(%var_10065: Tensor[(16, 6, 4), int8], %var_10066: Tensor[(16, 6, 4), int8]) -> Tensor[(16, 6, 4), int8] {
  @func_10063(%var_10065, %var_10066) /* ty=Tensor[(16, 6, 4), int8] */
}

def @func_11397() -> Tensor[(16, 13, 14), uint16] {
  %225 = fn () -> Tensor[(16, 13, 14), uint16] {
    %224 = @func_2748() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %224.0
  };
  %225() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_8772() -> (Tensor[(16, 13, 14), uint16],) {
  %228 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %226 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %227 = %226.0;
    (%227,)
  };
  %228() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_8126(%var_8123: Tensor[(6, 13, 6), float32]) -> (Tensor[(6, 13, 6), float32],) {
  %229 = cast(%var_8123, dtype="float32") /* ty=Tensor[(6, 13, 6), float32] */;
  %230 = asin(%229) /* ty=Tensor[(6, 13, 6), float32] */;
  (%230,)
}

def @func_11934() -> Tensor[(16, 13, 14), uint16] {
  @func_11932() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_7441() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %236 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %231 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %232 = @func_7305() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %233 = %231.0;
    %234 = @func_290() /* ty=Tensor[(16, 13, 14), uint16] */;
    %235 = %232.0;
    (%233, %234, %235)
  };
  %236() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_2570() -> (Tensor[(16, 13, 14), uint16],) {
  %238 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %237 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%237,)
  };
  %238() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_8438(%var_8436: Tensor[(49, 6), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(49, 6), float64]) {
  @func_8435(%var_8436) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(49, 6), float64]) */
}

def @func_12097() -> Tensor[(16, 13, 14), uint16] {
  %240 = fn () -> Tensor[(16, 13, 14), uint16] {
    %239 = @func_7440() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %239.1
  };
  %240() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_12383() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_12381() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_12803() -> Tensor[(16, 13, 14), uint16] {
  %242 = fn () -> Tensor[(16, 13, 14), uint16] {
    %241 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %241.0
  };
  %242() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_8021() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %243 = @func_3882() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %244 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %245 = %243.6;
  %246 = %244.0;
  (%245, %246)
}

def @main(%var_16440: Tensor[(13, 1, 7), float32]) -> (Tensor[(13, 1, 7), float32],) {
  %247 = cast(%var_16440, dtype="float32") /* ty=Tensor[(13, 1, 7), float32] */;
  %248 = exp(%247) /* ty=Tensor[(13, 1, 7), float32] */;
  (%248,)
}

def @func_15060() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %256 = fn () -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %249 = @func_12847() /* ty=(Tensor[(16, 13, 14), bool],) */;
    %250 = @func_14774() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %251 = @func_6272() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
    %252 = %249.0;
    %253 = %250.0;
    %254 = @func_14720() /* ty=Tensor[(16, 13, 14), uint16] */;
    %255 = %251.0;
    (%252, %253, %254, %255)
  };
  %256() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_12953() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_12951() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_7162() -> (Tensor[(16, 13, 14), uint16],) {
  @func_7160() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_12496() -> Tensor[(16, 13, 14), uint16] {
  %257 = fn () -> Tensor[(16, 13, 14), uint16] {
    @func_9548() /* ty=Tensor[(16, 13, 14), uint16] */
  };
  %257() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_6878() -> Tensor[(16, 13, 14), uint16] {
  @func_6876() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_10038() -> (Tensor[(16, 13, 14), uint16],) {
  @func_10036() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_5052() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %262 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %258 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %259 = @func_290() /* ty=Tensor[(16, 13, 14), uint16] */;
    %260 = %258.0;
    %261 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%259, %260, %261)
  };
  %262() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_14071() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_14069() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_140() -> Tensor[(16, 13, 14), uint16] {
  %263 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 13, 14), uint16] */, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %264 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(16, 13, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 13, 14), uint16] */, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  add(%265, %266) /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_1030(%var_1028: Tensor[(294), float64]) -> (Tensor[(3, 14, 7), float32], Tensor[(294), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_1027(%var_1028) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(294), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_7305() -> (Tensor[(16, 13, 14), uint16],) {
  %267 = @func_3732() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%267,)
}

def @func_14159() -> Tensor[(16, 13, 14), uint16] {
  %268 = fn () -> Tensor[(16, 13, 14), uint16] {
    @func_13298() /* ty=Tensor[(16, 13, 14), uint16] */
  };
  %268() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_5225() -> Tensor[(16, 13, 14), bool] {
  %270 = fn () -> Tensor[(16, 13, 14), bool] {
    %269 = @func_3501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
    %269.1
  };
  %270() /* ty=Tensor[(16, 13, 14), bool] */
}

def @func_4553() -> (Tensor[(16, 13, 14), uint16],) {
  %271 = @func_2569() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %272 = %271.0;
  (%272,)
}

def @func_1535() -> (Tensor[(16, 13, 14), uint16],) {
  %273 = @func_290() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%273,)
}

def @func_12170() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %274 = @func_11893() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %275 = %274.0;
  %276 = @func_7982() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%275, %276)
}

def @func_11708() -> (Tensor[(16, 13, 14), uint16],) {
  @func_11706() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_4124() -> (Tensor[(16, 13, 14), uint16],) {
  %279 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %277 = @func_2586() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %278 = %277.1;
    (%278,)
  };
  %279() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_1310(%var_1309: Tensor[(16, 13, 14), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) {
  %299 = fn (%var_1282: Tensor[(16, 13, 14), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) {
    %280 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %281 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %282 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %283 = %280.0;
    %284 = cast(%283, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
    %285 = reshape(%284, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
    %286 = @func_675(%285) /* ty=(Tensor[(16, 13, 14), float64],) */;
    %287 = %286.0;
    %288 = cast(%var_1282, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
    %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(3), int32] */;
    %290 = cast(%287, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
    %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %292 = cast(%var_1282, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
    %293 = reshape(%292, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
    %294 = @func_675(%293) /* ty=(Tensor[(16, 13, 14), float64],) */;
    %295 = %281.0;
    %296 = %282.0;
    %297 = right_shift(%290, %291) /* ty=Tensor[(16, 13, 14), uint16] */;
    %298 = %294.0;
    (%283, %295, %296, %297, %298)
  };
  %299(%var_1309) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) */
}

def @func_11346(%var_11344: Tensor[(780), int64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(780), int64], Tensor[(16, 13, 14), uint16]) {
  @func_11343(%var_11344) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(780), int64], Tensor[(16, 13, 14), uint16]) */
}

def @func_9700() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_9698() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_4289(%var_4278: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), float64]) {
  %300 = @func_3501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
  %301 = %300.2;
  %302 = cast(%var_4278, dtype="float32") /* ty=Tensor[(16, 13, 14), float32] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%301, dtype="float32") /* ty=Tensor[(16, 13, 14), float32] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %306 = floor_mod(%304, %305) /* ty=Tensor[(16, 13, 14), float32] */;
  %307 = cast(%306, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %308 = reshape(%307, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), float64] */;
  %309 = @func_1308(%308) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) */;
  %310 = %309.4;
  (%306, %310)
}

def @func_14006(%var_13972: Tensor[(11, 13, 13), float32]) -> (Tensor[(16, 13, 14), uint16], Tensor[(11, 13, 13), float64]) {
  %311 = @func_4357() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %312 = @func_9766() /* ty=Tensor[(11, 13, 13), float32] */;
  %313 = cast(%var_13972, dtype="float64") /* ty=Tensor[(11, 13, 13), float64] */;
  %314 = shape_of(%312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%312, dtype="float64") /* ty=Tensor[(11, 13, 13), float64] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %317 = divide(%315, %316) /* ty=Tensor[(11, 13, 13), float64] */;
  %318 = cast(%317, dtype="float64") /* ty=Tensor[(11, 13, 13), float64] */;
  %319 = shape_of(%var_13972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%var_13972, dtype="float64") /* ty=Tensor[(11, 13, 13), float64] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %322 = %311.0;
  %323 = mod(%320, %321) /* ty=Tensor[(11, 13, 13), float64] */;
  (%322, %323)
}

def @func_14775() -> (Tensor[(16, 13, 14), uint16],) {
  %326 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %324 = @func_14476() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %325 = %324.0;
    (%325,)
  };
  %326() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_16383() -> (Tensor[(16, 13, 14), uint16],) {
  %329 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %327 = @func_10036() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %328 = %327.0;
    (%328,)
  };
  %329() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_13299() -> Tensor[(16, 13, 14), uint16] {
  %331 = fn () -> Tensor[(16, 13, 14), uint16] {
    %330 = @func_8488() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %330.0
  };
  %331() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_11751() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100, 1), float64]) {
  %340 = fn () -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100, 1), float64]) {
    %332 = @func_2348() /* ty=(Tensor[(16, 13, 14), bool],) */;
    %333 = @func_3677() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %334 = cast(meta[relay.Constant][5] /* ty=Tensor[(100, 1), float64] */, dtype="float64") /* ty=Tensor[(100, 1), float64] */;
    %335 = reshape(%334, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
    %336 = @func_2650(%335) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(5, 5, 4), float32]) */;
    %337 = %332.0;
    %338 = %333.1;
    %339 = %336.0;
    (%337, %338, %339, meta[relay.Constant][5] /* ty=Tensor[(100, 1), float64] */)
  };
  %340() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100, 1), float64]) */
}

def @func_452() -> (Tensor[(16, 13, 14), uint16],) {
  @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_1522() -> (Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %341 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 2, 15), float32] */;
  %342 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(1, 2, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 2, 15), float32] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %345 = divide(%343, %344) /* ty=Tensor[(?, 2, 15), float32] */;
  %346 = cast(%345, dtype="float64") /* ty=Tensor[(?, 2, 15), float64] */;
  %347 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %348 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %349 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %350 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %351 = sigmoid(%346) /* ty=Tensor[(?, 2, 15), float64] */;
  %352 = %347.0;
  %353 = %348.0;
  %354 = %349.0;
  %355 = %350.0;
  (%351, %352, %353, %354, %355)
}

def @func_2333() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %360 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %356 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %357 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %358 = %356.0;
    %359 = %357.0;
    (%358, %359)
  };
  %360() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_4331() -> Tensor[(16, 13, 14), uint16] {
  %362 = fn () -> Tensor[(16, 13, 14), uint16] {
    %361 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %361.0
  };
  %362() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_1687() -> (Tensor[(16, 13, 14), bool],) {
  %363 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  %364 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %365 = %364.2;
  %366 = cast(%365, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %367 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%363, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %370 = greater_equal(%368, %369) /* ty=Tensor[(16, 13, 14), bool] */;
  (%370,)
}

def @func_14355() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %374 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %371 = @func_12170() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %372 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
    %373 = %371.0;
    (%372, %373)
  };
  %374() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_3128() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %382 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %375 = @func_1243() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %376 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %377 = @func_2178() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
    %378 = %375.0;
    %379 = %376.0;
    %380 = @func_588() /* ty=Tensor[(16, 13, 14), uint16] */;
    %381 = %377.2;
    (%378, %379, %380, %381)
  };
  %382() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_7933() -> Tensor[(16, 13, 14), uint16] {
  %383 = @func_5922() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %383.1
}

def @func_6575() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %387 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %384 = @func_4959() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %385 = @func_4531() /* ty=Tensor[(16, 13, 14), uint16] */;
    %386 = %384.1;
    (%385, %386)
  };
  %387() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_7139() -> (Tensor[(16, 13, 14), bool],) {
  %390 = fn () -> (Tensor[(16, 13, 14), bool],) {
    %388 = @func_2348() /* ty=(Tensor[(16, 13, 14), bool],) */;
    %389 = %388.0;
    (%389,)
  };
  %390() /* ty=(Tensor[(16, 13, 14), bool],) */
}

def @func_7828(%var_7826: Tensor[(9, 12, 12), float32]) -> (Tensor[(9, 12, 12), float32],) {
  @func_7825(%var_7826) /* ty=(Tensor[(9, 12, 12), float32],) */
}

def @func_15492() -> Tensor[(720, 2), uint64] {
  @func_15490() /* ty=Tensor[(720, 2), uint64] */
}

def @func_15162(%var_15161: Tensor[(12, 16, 5), float32]) -> (Tensor[(16, 13, 14), uint16], Tensor[(12, 16, 5), uint8], Tensor[(16, 13, 14), uint16]) {
  %408 = fn (%var_15125: Tensor[(12, 16, 5), float32]) -> (Tensor[(16, 13, 14), uint16], Tensor[(12, 16, 5), uint8], Tensor[(16, 13, 14), uint16]) {
    %391 = cast(%var_15125, dtype="float32") /* ty=Tensor[(12, 16, 5), float32] */;
    %392 = log10(%391) /* ty=Tensor[(12, 16, 5), float32] */;
    %393 = cast(%392, dtype="float32") /* ty=Tensor[(12, 16, 5), float32] */;
    %394 = log2(%393) /* ty=Tensor[(12, 16, 5), float32] */;
    %395 = cast(%394, dtype="bool") /* ty=Tensor[(12, 16, 5), bool] */;
    %396 = shape_of(%var_15125, dtype="int32") /* ty=Tensor[(3), int32] */;
    %397 = cast(%var_15125, dtype="bool") /* ty=Tensor[(12, 16, 5), bool] */;
    %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %399 = equal(%397, %398) /* ty=Tensor[(12, 16, 5), bool] */;
    %400 = cast(%var_15125, dtype="uint8") /* ty=Tensor[(12, 16, 5), uint8] */;
    %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
    %402 = cast(%399, dtype="uint8") /* ty=Tensor[(12, 16, 5), uint8] */;
    %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %404 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %405 = @func_6289() /* ty=Tensor[(16, 13, 14), uint16] */;
    %406 = right_shift(%402, %403) /* ty=Tensor[(12, 16, 5), uint8] */;
    %407 = %404.0;
    (%405, %406, %407)
  };
  %408(%var_15161) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(12, 16, 5), uint8], Tensor[(16, 13, 14), uint16]) */
}

def @func_7761() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %413 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %409 = @func_5922() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %410 = @func_6546() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %411 = %409.1;
    %412 = %410.0;
    (%411, %412)
  };
  %413() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_15589() -> (Tensor[(16, 13, 14), uint16],) {
  @func_15587() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_15810() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %419 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %414 = @func_11893() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %415 = @func_5373() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %416 = %414.0;
    %417 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
    %418 = %415.0;
    (%416, %417, %418)
  };
  %419() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_1155(%var_1153: Tensor[(16, 13, 14), uint16]) -> Tensor[(16, 13, 14), bool] {
  @func_1152(%var_1153) /* ty=Tensor[(16, 13, 14), bool] */
}

def @func_15442(%var_15437: Tensor[(15, 4, 13), int64]) -> (Tensor[(15, 4, 13), bool],) {
  %420 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 4, 13), int64] */, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
  %421 = shape_of(%var_15437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(%var_15437, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %424 = less_equal(%422, %423) /* ty=Tensor[(15, 4, 13), bool] */;
  (%424,)
}

def @func_15836() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_15834() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_588() -> Tensor[(16, 13, 14), uint16] {
  %425 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %425.0
}

def @func_1152(%var_1144: Tensor[(16, 13, 14), uint16]) -> Tensor[(16, 13, 14), bool] {
  %426 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %427 = %426.0;
  %428 = cast(%var_1144, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %429 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%427, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%430, %431) /* ty=Tensor[(16, 13, 14), bool] */
}

def @func_10395() -> Tensor[(16, 13, 14), uint16] {
  @func_5790() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_532(%var_530: Tensor[(3, 14, 7), float64], %var_531: Tensor[(3, 14, 7), float64]) -> Tensor[(3, 14, 7), float32] {
  @func_528(%var_530, %var_531) /* ty=Tensor[(3, 14, 7), float32] */
}

def @func_12381() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %432 = @func_6944() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %433 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %434 = @func_5224() /* ty=Tensor[(16, 13, 14), bool] */;
  %435 = %432.0;
  %436 = %433.0;
  (%434, %435, %436)
}

def @func_5713() -> (Tensor[(16, 13, 14), uint16],) {
  %437 = @func_5051() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %438 = %437.0;
  (%438,)
}

def @func_7698() -> Tensor[(16, 13, 14), uint16] {
  @func_7696() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_254() -> (Tensor[(16, 13, 14), uint16],) {
  @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_3678() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %442 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %439 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %440 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
    %441 = %439.0;
    (%440, %441)
  };
  %442() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_8681() -> (Tensor[(16, 13, 14), uint16],) {
  %443 = @func_2882() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%443,)
}

def @func_14814(%var_14794: Tensor[(294), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64], Tensor[(49, 6), float64]) {
  %444 = @func_2803() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %445 = @func_1243() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %446 = cast(%var_14794, dtype="float64") /* ty=Tensor[(294), float64] */;
  %447 = reshape(%446, newshape=[49, 6]) /* ty=Tensor[(49, 6), float64] */;
  %448 = @func_8435(%447) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(49, 6), float64]) */;
  %449 = %448.2;
  %450 = cast(%449, dtype="float64") /* ty=Tensor[(49, 6), float64] */;
  %451 = %444.0;
  %452 = %445.0;
  %453 = rsqrt(%450) /* ty=Tensor[(49, 6), float64] */;
  (%451, %452, %var_14794, %453)
}

def @func_10456() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %454 = @func_7160() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %455 = @func_8771() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %456 = %454.0;
  %457 = %455.0;
  (%456, %457)
}

def @func_15878() -> Tensor[(16, 13, 14), uint16] {
  %459 = fn () -> Tensor[(16, 13, 14), uint16] {
    %458 = @func_3677() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %458.1
  };
  %459() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_4826() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %462 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %460 = @func_2765() /* ty=Tensor[(16, 13, 14), uint16] */;
    %461 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%460, %461)
  };
  %462() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_3501() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  %463 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %464 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %465 = @func_2803() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %466 = %463.3;
  %467 = %464.0;
  %468 = %465.0;
  (%466, %467, %468)
}

def @func_4914(%var_4867: Tensor[(294), float64], %var_4907: Tensor[(780), int64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(350), uint32], Tensor[(294), float64], Tensor[(16, 13, 14), int32], Tensor[(10, 5, 7), float32], Tensor[(13, 10, 6), bool], int64, Tensor[(780), int64]) {
  %469 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %470 = %469.0;
  %471 = cast(%470, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %472 = reshape(%471, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %473 = cast(meta[relay.Constant][9] /* ty=Tensor[(350), uint32] */, dtype="uint32") /* ty=Tensor[(350), uint32] */;
  %474 = cast(%var_4867, dtype="float64") /* ty=Tensor[(294), float64] */;
  %475 = reshape(%473, newshape=[350]) /* ty=Tensor[(350), uint32] */;
  %476 = reshape(%474, newshape=[294]) /* ty=Tensor[(294), float64] */;
  %477 = @func_4009(%475, %476) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(10, 5, 7), uint32], Tensor[(350), uint32], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */;
  %478 = %477.1;
  %479 = cast(%478, dtype="float32") /* ty=Tensor[(10, 5, 7), float32] */;
  %480 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %481 = cast(%var_4907, dtype="int64") /* ty=Tensor[(780), int64] */;
  %482 = reshape(%480, newshape=[]) /* ty=int64 */;
  %483 = reshape(%481, newshape=[13, 10, 6]) /* ty=Tensor[(13, 10, 6), int64] */;
  %484 = @func_2664(%482, %483) /* ty=(Tensor[(13, 10, 6), bool],) */;
  %485 = @func_3612(%472) /* ty=Tensor[(16, 13, 14), int32] */;
  %486 = exp(%479) /* ty=Tensor[(10, 5, 7), float32] */;
  %487 = %484.0;
  (%470, meta[relay.Constant][9] /* ty=Tensor[(350), uint32] */, %var_4867, %485, %486, %487, -5 /* ty=int64 */, %var_4907)
}

def @func_2553() -> Tensor[(16, 13, 14), uint16] {
  %489 = fn () -> Tensor[(16, 13, 14), uint16] {
    %488 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %488.0
  };
  %489() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_2804() -> (Tensor[(16, 13, 14), uint16],) {
  %492 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %490 = @func_2067() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %491 = %490.0;
    (%491,)
  };
  %492() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_6369() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(416), float64]) {
  %506 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(416), float64]) {
    %493 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %494 = cast(meta[relay.Constant][10] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
    %495 = cast(meta[relay.Constant][10] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
    %496 = reshape(%494, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int16] */;
    %497 = reshape(%495, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int16] */;
    %498 = @func_2294(%496, %497) /* ty=Tensor[(2, 16, 13), bool] */;
    %499 = cast(%498, dtype="float64") /* ty=Tensor[(2, 16, 13), float64] */;
    %500 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(416), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %501 = cast(meta[relay.Constant][10] /* ty=Tensor[(416), int16] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?), float64] */;
    %503 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
    %504 = %493.1;
    %505 = power(%501, %502) /* ty=Tensor[(416), float64] */;
    (%503, %504, %505)
  };
  %506() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(416), float64]) */
}

def @func_2664(%var_2657: int64, %var_2658: Tensor[(13, 10, 6), int64]) -> (Tensor[(13, 10, 6), bool],) {
  %507 = cast(%var_2657, dtype="bool") /* ty=bool */;
  %508 = cast(%var_2658, dtype="bool") /* ty=Tensor[(13, 10, 6), bool] */;
  %509 = equal(%507, %508) /* ty=Tensor[(13, 10, 6), bool] */;
  (%509,)
}

def @func_12573() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %514 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %510 = @func_5922() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %511 = @func_3180() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */;
    %512 = %510.0;
    %513 = %511.0;
    (%512, %513)
  };
  %514() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_2474() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %518 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %515 = @func_2067() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %516 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
    %517 = %515.0;
    (%516, %517)
  };
  %518() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_7027(%var_7025: Tensor[(1078), bool], %var_7026: Tensor[(7, 11, 14), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(1078), bool], Tensor[(7, 11, 14), bool], Tensor[(7, 11, 14), float32]) {
  %531 = fn (%var_6980: Tensor[(1078), bool], %var_6987: Tensor[(7, 11, 14), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(1078), bool], Tensor[(7, 11, 14), bool], Tensor[(7, 11, 14), float32]) {
    %519 = cast(%var_6980, dtype="bool") /* ty=Tensor[(1078), bool] */;
    %520 = reshape(%519, newshape=[1078]) /* ty=Tensor[(1078), bool] */;
    %521 = @func_4601(%520) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool]) */;
    %522 = %521.1;
    %523 = cast(%var_6987, dtype="bool") /* ty=Tensor[(7, 11, 14), bool] */;
    %524 = shape_of(%522, dtype="int32") /* ty=Tensor[(3), int32] */;
    %525 = cast(%522, dtype="bool") /* ty=Tensor[(7, 11, 14), bool] */;
    %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %527 = cast(%var_6987, dtype="float32") /* ty=Tensor[(7, 11, 14), float32] */;
    %528 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
    %529 = greater_equal(%525, %526) /* ty=Tensor[(7, 11, 14), bool] */;
    %530 = erf(%527) /* ty=Tensor[(7, 11, 14), float32] */;
    (%528, %var_6980, %529, %530)
  };
  %531(%var_7025, %var_7026) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(1078), bool], Tensor[(7, 11, 14), bool], Tensor[(7, 11, 14), float32]) */
}

def @func_5768(%var_5761: Tensor[(780), int64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(294), float64], Tensor[(780), int64]) {
  %532 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %533 = cast(meta[relay.Constant][11] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
  %534 = cast(%var_5761, dtype="int64") /* ty=Tensor[(780), int64] */;
  %535 = reshape(%533, newshape=[294]) /* ty=Tensor[(294), float64] */;
  %536 = reshape(%534, newshape=[780]) /* ty=Tensor[(780), int64] */;
  %537 = @func_4914(%535, %536) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(350), uint32], Tensor[(294), float64], Tensor[(16, 13, 14), int32], Tensor[(10, 5, 7), float32], Tensor[(13, 10, 6), bool], int64, Tensor[(780), int64]) */;
  %538 = %532.0;
  %539 = %537.3;
  (%538, %539, meta[relay.Constant][11] /* ty=Tensor[(294), float64] */, %var_5761)
}

def @func_528(%var_500: Tensor[(3, 14, 7), float64], %var_501: Tensor[(3, 14, 7), float64]) -> Tensor[(3, 14, 7), float32] {
  %540 = cast(%var_501, dtype="float64") /* ty=Tensor[(3, 14, 7), float64] */;
  %541 = shape_of(%var_500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%var_500, dtype="float64") /* ty=Tensor[(3, 14, 7), float64] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %544 = power(%542, %543) /* ty=Tensor[(3, 14, 7), float64] */;
  %545 = cast(%544, dtype="float32") /* ty=Tensor[(3, 14, 7), float32] */;
  log2(%545) /* ty=Tensor[(3, 14, 7), float32] */
}

def @func_2720() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %546 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %547 = %546.0;
  %548 = @func_900() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%547, %548)
}

def @func_3236() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_3234() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_9432() -> Tensor[(16, 13, 14), uint16] {
  %550 = fn () -> Tensor[(16, 13, 14), uint16] {
    %549 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %549.0
  };
  %550() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_9317() -> (Tensor[(16, 13, 14), uint16],) {
  %552 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %551 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%551,)
  };
  %552() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_9503() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64], Tensor[(780), int64], Tensor[(12, 16, 12), bool], Tensor[(2304), uint8]) {
  %567 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64], Tensor[(780), int64], Tensor[(12, 16, 12), bool], Tensor[(2304), uint8]) {
    %553 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %554 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %555 = cast(meta[relay.Constant][12] /* ty=Tensor[(780), int64] */, dtype="int64") /* ty=Tensor[(780), int64] */;
    %556 = reshape(%555, newshape=[780]) /* ty=Tensor[(780), int64] */;
    %557 = @func_5768(%556) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(294), float64], Tensor[(780), int64]) */;
    %558 = cast(meta[relay.Constant][13] /* ty=Tensor[(2304), uint8] */, dtype="uint8") /* ty=Tensor[(2304), uint8] */;
    %559 = cast(meta[relay.Constant][13] /* ty=Tensor[(2304), uint8] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
    %560 = reshape(%558, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), uint8] */;
    %561 = reshape(%559, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float64] */;
    %562 = @func_2420(%560, %561) /* ty=(Tensor[(12, 16, 12), uint8], Tensor[(16, 13, 14), uint16], Tensor[(12, 16, 12), bool]) */;
    %563 = %553.0;
    %564 = %554.0;
    %565 = %557.2;
    %566 = %562.2;
    (%563, %564, %565, meta[relay.Constant][12] /* ty=Tensor[(780), int64] */, %566, meta[relay.Constant][13] /* ty=Tensor[(2304), uint8] */)
  };
  %567() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64], Tensor[(780), int64], Tensor[(12, 16, 12), bool], Tensor[(2304), uint8]) */
}

def @func_14009(%var_14007: Tensor[(11, 13, 13), float32]) -> (Tensor[(16, 13, 14), uint16], Tensor[(11, 13, 13), float64]) {
  @func_14006(%var_14007) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(11, 13, 13), float64]) */
}

def @func_6876() -> Tensor[(16, 13, 14), uint16] {
  %568 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %568.1
}

def @func_14477() -> (Tensor[(16, 13, 14), uint16],) {
  %571 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %569 = @func_7440() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %570 = %569.0;
    (%570,)
  };
  %571() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_11706() -> (Tensor[(16, 13, 14), uint16],) {
  %572 = @func_6611() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %573 = %572.1;
  (%573,)
}

def @func_16008() -> (Tensor[(16, 13, 14), uint16],) {
  %574 = @func_6510() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */;
  %575 = %574.2;
  (%575,)
}

def @func_1243() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %576 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %577 = %576.0;
  %578 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%577, %578)
}

def @func_14558() -> (Tensor[(16, 13, 14), uint16],) {
  %579 = @func_10874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %580 = %579.0;
  (%580,)
}

def @func_9084() -> Tensor[(16, 13, 14), uint16] {
  @func_9082() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_12503() -> (Tensor[(16, 13, 14), uint16],) {
  %581 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %582 = %581.1;
  (%582,)
}

def @func_6911() -> Tensor[(9, 9, 14), float64] {
  %584 = fn () -> Tensor[(9, 9, 14), float64] {
    %583 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 9, 14), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
    cosh(%583) /* ty=Tensor[(9, 9, 14), float64] */
  };
  %584() /* ty=Tensor[(9, 9, 14), float64] */
}

def @func_13964() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %589 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %585 = @func_10253() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %586 = @func_13226() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 9, 10), uint8], Tensor[(720, 2), uint64], Tensor[(16, 13, 14), uint16]) */;
    %587 = %585.1;
    %588 = %586.1;
    (%587, %588)
  };
  %589() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_3181() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) {
  %596 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) {
    %590 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %591 = @func_2067() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %592 = %591.0;
    %593 = cast(%592, dtype="float32") /* ty=Tensor[(16, 13, 14), float32] */;
    %594 = %590.0;
    %595 = erf(%593) /* ty=Tensor[(16, 13, 14), float32] */;
    (%594, %595)
  };
  %596() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */
}

def @func_13835() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_13833() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_14722() -> Tensor[(16, 13, 14), uint16] {
  @func_14720() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_5673() -> (Tensor[(16, 13, 14), uint16],) {
  %599 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %597 = @func_3234() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %598 = %597.0;
    (%598,)
  };
  %599() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_13226() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 9, 10), uint8], Tensor[(720, 2), uint64], Tensor[(16, 13, 14), uint16]) {
  %600 = @func_2720() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %601 = cast(meta[relay.Constant][15] /* ty=Tensor[(720, 2), uint64] */, dtype="uint64") /* ty=Tensor[(720, 2), uint64] */;
  %602 = reshape(%601, newshape=[16, 9, 10]) /* ty=Tensor[(16, 9, 10), uint64] */;
  %603 = @func_4991(%602) /* ty=(Tensor[(16, 9, 10), uint8], Tensor[(16, 13, 14), uint16]) */;
  %604 = @func_11893() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %605 = @func_10395() /* ty=Tensor[(16, 13, 14), uint16] */;
  %606 = %600.0;
  %607 = %603.0;
  %608 = %604.0;
  (%605, %606, %607, meta[relay.Constant][15] /* ty=Tensor[(720, 2), uint64] */, %608)
}

def @func_2748() -> (Tensor[(16, 13, 14), uint16],) {
  %609 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %610 = %609.0;
  (%610,)
}

def @func_1027(%var_945: Tensor[(294), float64]) -> (Tensor[(3, 14, 7), float32], Tensor[(294), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %611 = cast(%var_945, dtype="float64") /* ty=Tensor[(294), float64] */;
  %612 = cast(%var_945, dtype="float64") /* ty=Tensor[(294), float64] */;
  %613 = reshape(%611, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float64] */;
  %614 = reshape(%612, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), float64] */;
  %615 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %616 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %617 = %616.0;
  %618 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %619 = %618.0;
  %620 = cast(%619, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %621 = shape_of(%617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%617, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %624 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %625 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %626 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %627 = %626.2;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %629 = cast(%627, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %630 = reshape(%629, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %631 = @func_675(%630) /* ty=(Tensor[(16, 13, 14), float64],) */;
  %632 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %633 = @func_528(%613, %614) /* ty=Tensor[(3, 14, 7), float32] */;
  %634 = %615.0;
  %635 = subtract(%622, %623) /* ty=Tensor[(16, 13, 14), uint16] */;
  %636 = %624.0;
  %637 = %625.0;
  %638 = sigmoid(%628) /* ty=Tensor[(16, 13, 14), float64] */;
  %639 = %631.0;
  %640 = %632.3;
  %641 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%633, %var_945, %634, %635, %636, %637, %638, %639, %640, %641)
}

def @func_5212() -> Tensor[(16, 13, 14), uint16] {
  %643 = fn () -> Tensor[(16, 13, 14), uint16] {
    %642 = @func_4213() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], uint64) */;
    %642.1
  };
  %643() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_6274() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  @func_6272() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */
}

def @func_13653() -> (Tensor[(16, 13, 14), uint16],) {
  %646 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %644 = @func_3882() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %645 = %644.0;
    (%645,)
  };
  %646() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_8579() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_8577() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_5653() -> (Tensor[(16, 13, 14), uint16],) {
  @func_5651() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_4199() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %655 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %647 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %648 = @func_3882() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %649 = @func_1243() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %650 = @func_3180() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */;
    %651 = %647.0;
    %652 = %648.1;
    %653 = %649.0;
    %654 = %650.0;
    (%651, %652, %653, %654)
  };
  %655() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_15370() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_15368() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_9548() -> Tensor[(16, 13, 14), uint16] {
  %656 = @func_7760() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %656.0
}

def @func_10458() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_10456() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_1778(%var_1777: uint64) -> (Tensor[(5, 9, 8), uint64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %668 = fn (%var_1733: uint64) -> (Tensor[(5, 9, 8), uint64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %657 = cast(%var_1733, dtype="uint64") /* ty=uint64 */;
    %658 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 9, 8), uint64] */, dtype="uint64") /* ty=Tensor[(5, 9, 8), uint64] */;
    %659 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %660 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %661 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %662 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %663 = bitwise_xor(%657, %658) /* ty=Tensor[(5, 9, 8), uint64] */;
    %664 = %659.0;
    %665 = %660.0;
    %666 = %661.0;
    %667 = %662.3;
    (%663, %664, %665, %666, %667)
  };
  %668(%var_1777) /* ty=(Tensor[(5, 9, 8), uint64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_2267(%var_2265: Tensor[(8, 9, 5), uint64]) -> (Tensor[(8, 9, 5), uint64], Tensor[(16, 13, 14), bool], Tensor[(1, 2912), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) {
  @func_2264(%var_2265) /* ty=(Tensor[(8, 9, 5), uint64], Tensor[(16, 13, 14), bool], Tensor[(1, 2912), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) */
}

def @func_3883() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %688 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %669 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %670 = %669.0;
    %671 = cast(%670, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
    %672 = reshape(%671, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
    %673 = @func_2569() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %674 = %673.0;
    %675 = cast(%674, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
    %676 = reshape(%675, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), float64] */;
    %677 = @func_1308(%676) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) */;
    %678 = @func_3755() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %679 = @func_3677() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %680 = @func_3026() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
    %681 = @func_1152(%672) /* ty=Tensor[(16, 13, 14), bool] */;
    %682 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
    %683 = %677.3;
    %684 = %678.1;
    %685 = %679.1;
    %686 = %680.0;
    %687 = @func_2552() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%670, %681, %682, %674, %683, %684, %685, %686, %687)
  };
  %688() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_9550() -> Tensor[(16, 13, 14), uint16] {
  @func_9548() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_11539() -> Tensor[(16, 13, 14), uint16] {
  @func_11537() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_2178() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  %689 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %690 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %691 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %692 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %693 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %694 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %695 = %689.0;
  %696 = %690.0;
  %697 = %691.1;
  %698 = %692.0;
  %699 = %693.0;
  %700 = %694.0;
  (%695, %696, %697, %698, %699, %700)
}

def @func_14720() -> Tensor[(16, 13, 14), uint16] {
  @func_481() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_6511() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) {
  %709 = fn () -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) {
    %701 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %702 = @func_1967() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %703 = cast(meta[relay.Constant][17] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
    %704 = reshape(%703, newshape=[294]) /* ty=Tensor[(294), float64] */;
    %705 = @func_3281(%704) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */;
    %706 = %701.2;
    %707 = %702.0;
    %708 = %705.0;
    (%706, %707, %708, meta[relay.Constant][17] /* ty=Tensor[(294), float64] */)
  };
  %709() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */
}

def @func_4009(%var_3997: Tensor[(350), uint32], %var_4003: Tensor[(294), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(10, 5, 7), uint32], Tensor[(350), uint32], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) {
  %710 = cast(%var_3997, dtype="uint32") /* ty=Tensor[(350), uint32] */;
  %711 = reshape(%710, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), uint32] */;
  %712 = @func_3316(%711) /* ty=(Tensor[(10, 5, 7), uint32],) */;
  %713 = cast(%var_4003, dtype="float64") /* ty=Tensor[(294), float64] */;
  %714 = reshape(%713, newshape=[294]) /* ty=Tensor[(294), float64] */;
  %715 = @func_1027(%714) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(294), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %716 = @func_3900() /* ty=Tensor[(16, 13, 14), uint16] */;
  %717 = %712.0;
  %718 = %715.8;
  (%716, %717, %var_3997, %718, %var_4003)
}

def @func_14069() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %719 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
  %720 = @func_2552() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%719, %720)
}

def @func_2652(%var_2651: Tensor[(5, 5, 4), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(5, 5, 4), float32]) {
  %732 = fn (%var_2609: Tensor[(5, 5, 4), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(5, 5, 4), float32]) {
    %721 = @func_2473() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %722 = cast(%var_2609, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
    %723 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(5, 5, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %724 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 5, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
    %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %726 = floor_divide(%724, %725) /* ty=Tensor[(5, 5, 4), float64] */;
    %727 = cast(%726, dtype="float32") /* ty=Tensor[(5, 5, 4), float32] */;
    %728 = rsqrt(%727) /* ty=Tensor[(5, 5, 4), float32] */;
    %729 = cast(%728, dtype="float32") /* ty=Tensor[(5, 5, 4), float32] */;
    %730 = %721.0;
    %731 = log(%729) /* ty=Tensor[(5, 5, 4), float32] */;
    (%730, %731)
  };
  %732(%var_2651) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(5, 5, 4), float32]) */
}

def @func_5792() -> Tensor[(16, 13, 14), uint16] {
  @func_5790() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_6056() -> Tensor[(16, 13, 14), uint16] {
  %734 = fn () -> Tensor[(16, 13, 14), uint16] {
    %733 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %733.2
  };
  %734() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_13228() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 9, 10), uint8], Tensor[(720, 2), uint64], Tensor[(16, 13, 14), uint16]) {
  @func_13226() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 9, 10), uint8], Tensor[(720, 2), uint64], Tensor[(16, 13, 14), uint16]) */
}

def @func_9082() -> Tensor[(16, 13, 14), uint16] {
  @func_140() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_2766() -> Tensor[(16, 13, 14), uint16] {
  %735 = fn () -> Tensor[(16, 13, 14), uint16] {
    @func_2552() /* ty=Tensor[(16, 13, 14), uint16] */
  };
  %735() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_776() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_15851() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %740 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %736 = @func_14558() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %737 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %738 = %736.0;
    %739 = %737.0;
    (%738, %739)
  };
  %740() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_4358() -> (Tensor[(16, 13, 14), uint16],) {
  %742 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %741 = @func_290() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%741,)
  };
  %742() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_9645(%var_9643: Tensor[(12, 11, 2), int8], %var_9644: Tensor[(12, 11, 2), int8]) -> Tensor[(12, 11, 2), int8] {
  @func_9641(%var_9643, %var_9644) /* ty=Tensor[(12, 11, 2), int8] */
}

def @func_6291() -> Tensor[(16, 13, 14), uint16] {
  @func_6289() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_3551() -> Tensor[(16, 13, 14), bool] {
  @func_3549() /* ty=Tensor[(16, 13, 14), bool] */
}

def @func_7707() -> Tensor[(16, 13, 14), uint16] {
  %743 = fn () -> Tensor[(16, 13, 14), uint16] {
    @func_3534() /* ty=Tensor[(16, 13, 14), uint16] */
  };
  %743() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_426() -> (Tensor[(16, 13, 14), uint16],) {
  %746 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %744 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %745 = %744.0;
    (%745,)
  };
  %746() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_8489() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %751 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %747 = @func_4825() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %748 = @func_8324() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
    %749 = %747.0;
    %750 = %748.0;
    (%749, %750)
  };
  %751() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_7984() -> Tensor[(16, 13, 14), uint16] {
  @func_7982() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_2068() -> (Tensor[(16, 13, 14), uint16],) {
  %753 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %752 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%752,)
  };
  %753() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_14110(%var_14094: Tensor[(360), uint64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(360), uint64], Tensor[(16, 13, 14), uint16]) {
  %754 = @func_8681() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %755 = cast(%var_14094, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %756 = reshape(%755, newshape=[8, 9, 5]) /* ty=Tensor[(8, 9, 5), uint64] */;
  %757 = @func_2264(%756) /* ty=(Tensor[(8, 9, 5), uint64], Tensor[(16, 13, 14), bool], Tensor[(1, 2912), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) */;
  %758 = %754.0;
  %759 = %757.3;
  %760 = @func_3900() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%758, %759, %var_14094, %760)
}

def @func_10387() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %765 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %761 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %762 = @func_2940() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %763 = %761.0;
    %764 = %762.0;
    (%763, %764)
  };
  %765() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_678(%var_676: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), float64],) {
  @func_675(%var_676) /* ty=(Tensor[(16, 13, 14), float64],) */
}

def @func_3027() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  %772 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
    %766 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %767 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
    %768 = @func_2552() /* ty=Tensor[(16, 13, 14), uint16] */;
    %769 = %766.0;
    %770 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
    %771 = %767.0;
    (%768, %769, %770, %771)
  };
  %772() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */
}

def @func_6289() -> Tensor[(16, 13, 14), uint16] {
  %773 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %773.1
}

def @func_14985() -> (Tensor[(16, 13, 14), uint16],) {
  %774 = @func_2803() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %775 = %774.0;
  (%775,)
}

def @func_7307() -> (Tensor[(16, 13, 14), uint16],) {
  @func_7305() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_1932(%var_1907: bool) -> (Tensor[(16, 15, 11), bool], Tensor[(16, 15, 11), int16], Tensor[(16, 13, 14), uint16]) {
  %776 = cast(%var_1907, dtype="bool") /* ty=bool */;
  %777 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 15, 11), bool] */, dtype="bool") /* ty=Tensor[(16, 15, 11), bool] */;
  %778 = cast(%var_1907, dtype="int16") /* ty=int16 */;
  %779 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 15, 11), bool] */, dtype="int16") /* ty=Tensor[(16, 15, 11), int16] */;
  %780 = @func_1243() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %781 = logical_and(%776, %777) /* ty=Tensor[(16, 15, 11), bool] */;
  %782 = maximum(%778, %779) /* ty=Tensor[(16, 15, 11), int16] */;
  %783 = %780.0;
  (%781, %782, %783)
}

def @func_9257(%var_9252: int64, %var_9253: Tensor[(8, 5, 8), int64], %var_9254: Tensor[(8, 5, 8), int64], %var_9255: Tensor[(120), float64], %var_9256: Tensor[(8, 5, 8), int64]) -> (Tensor[(8, 5, 8), uint8], Tensor[(8, 5, 8), float64], Tensor[(8, 5, 8), int8], Tensor[(120), float64], Tensor[(12, 15, 10), float64], Tensor[(8, 5, 8), float32]) {
  %813 = fn (%var_9207: int64, %var_9213: Tensor[(8, 5, 8), int64], %var_9223: Tensor[(8, 5, 8), int64], %var_9228: Tensor[(120), float64], %var_9242: Tensor[(8, 5, 8), int64]) -> (Tensor[(8, 5, 8), uint8], Tensor[(8, 5, 8), float64], Tensor[(8, 5, 8), int8], Tensor[(120), float64], Tensor[(12, 15, 10), float64], Tensor[(8, 5, 8), float32]) {
    %784 = cast(%var_9213, dtype="uint8") /* ty=Tensor[(8, 5, 8), uint8] */;
    %785 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(8, 5, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %786 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 5, 8), int64] */, dtype="uint8") /* ty=Tensor[(8, 5, 8), uint8] */;
    %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %788 = cast(%var_9207, dtype="bool") /* ty=bool */;
    %789 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 5, 8), int64] */, dtype="bool") /* ty=Tensor[(8, 5, 8), bool] */;
    %790 = equal(%788, %789) /* ty=Tensor[(8, 5, 8), bool] */;
    %791 = cast(%790, dtype="float64") /* ty=Tensor[(8, 5, 8), float64] */;
    %792 = shape_of(%var_9213, dtype="int32") /* ty=Tensor[(3), int32] */;
    %793 = cast(%var_9213, dtype="float64") /* ty=Tensor[(8, 5, 8), float64] */;
    %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %795 = cast(%var_9223, dtype="int8") /* ty=Tensor[(8, 5, 8), int8] */;
    %796 = shape_of(%var_9213, dtype="int32") /* ty=Tensor[(3), int32] */;
    %797 = cast(%var_9213, dtype="int8") /* ty=Tensor[(8, 5, 8), int8] */;
    %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %799 = cast(%var_9228, dtype="float64") /* ty=Tensor[(120), float64] */;
    %800 = reshape(%799, newshape=[12, 1, 10]) /* ty=Tensor[(12, 1, 10), float64] */;
    %801 = @func_5255(%800) /* ty=Tensor[(12, 15, 10), float64] */;
    %802 = cast(%801, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
    %803 = cast(%var_9207, dtype="float64") /* ty=float64 */;
    %804 = cast(%var_9242, dtype="float32") /* ty=Tensor[(8, 5, 8), float32] */;
    %805 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(8, 5, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %806 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 5, 8), int64] */, dtype="float32") /* ty=Tensor[(8, 5, 8), float32] */;
    %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %808 = bitwise_and(%786, %787) /* ty=Tensor[(8, 5, 8), uint8] */;
    %809 = floor_divide(%793, %794) /* ty=Tensor[(8, 5, 8), float64] */;
    %810 = right_shift(%797, %798) /* ty=Tensor[(8, 5, 8), int8] */;
    %811 = floor_divide(%802, %803) /* ty=Tensor[(12, 15, 10), float64] */;
    %812 = multiply(%806, %807) /* ty=Tensor[(8, 5, 8), float32] */;
    (%808, %809, %810, %var_9228, %811, %812)
  };
  %813(%var_9252, %var_9253, %var_9254, %var_9255, %var_9256) /* ty=(Tensor[(8, 5, 8), uint8], Tensor[(8, 5, 8), float64], Tensor[(8, 5, 8), int8], Tensor[(120), float64], Tensor[(12, 15, 10), float64], Tensor[(8, 5, 8), float32]) */
}

def @func_15270() -> (Tensor[(15, 11, 13), float32],) {
  %816 = fn () -> (Tensor[(15, 11, 13), float32],) {
    %814 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 11, 13), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 13), float32] */;
    %815 = asinh(%814) /* ty=Tensor[(15, 11, 13), float32] */;
    (%815,)
  };
  %816() /* ty=(Tensor[(15, 11, 13), float32],) */
}

def @func_14113(%var_14111: Tensor[(360), uint64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(360), uint64], Tensor[(16, 13, 14), uint16]) {
  @func_14110(%var_14111) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(360), uint64], Tensor[(16, 13, 14), uint16]) */
}

def @func_9285(%var_9284: Tensor[(16, 11, 2), float32]) -> (Tensor[(16, 11, 2), bool],) {
  %822 = fn (%var_9269: Tensor[(16, 11, 2), float32]) -> (Tensor[(16, 11, 2), bool],) {
    %817 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 11, 2), float32] */, dtype="bool") /* ty=Tensor[(16, 11, 2), bool] */;
    %818 = shape_of(%var_9269, dtype="int32") /* ty=Tensor[(3), int32] */;
    %819 = cast(%var_9269, dtype="bool") /* ty=Tensor[(16, 11, 2), bool] */;
    %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %821 = greater_equal(%819, %820) /* ty=Tensor[(16, 11, 2), bool] */;
    (%821,)
  };
  %822(%var_9284) /* ty=(Tensor[(16, 11, 2), bool],) */
}

def @func_12593(%var_12592: Tensor[(8, 2, 2), float64]) -> (Tensor[(8, 2, 2), float64], Tensor[(16, 13, 14), uint16]) {
  %827 = fn (%var_12574: Tensor[(8, 2, 2), float64]) -> (Tensor[(8, 2, 2), float64], Tensor[(16, 13, 14), uint16]) {
    %823 = cast(%var_12574, dtype="float64") /* ty=Tensor[(8, 2, 2), float64] */;
    %824 = @func_7593() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %825 = sqrt(%823) /* ty=Tensor[(8, 2, 2), float64] */;
    %826 = %824.0;
    (%825, %826)
  };
  %827(%var_12592) /* ty=(Tensor[(8, 2, 2), float64], Tensor[(16, 13, 14), uint16]) */
}

def @func_2883() -> Tensor[(16, 13, 14), uint16] {
  %829 = fn () -> Tensor[(16, 13, 14), uint16] {
    %828 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %828.0
  };
  %829() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_9604() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %833 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %830 = @func_6510() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */;
    %831 = @func_5697() /* ty=Tensor[(16, 13, 14), uint16] */;
    %832 = %830.2;
    (%831, %832)
  };
  %833() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_3234() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %834 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %835 = @func_2882() /* ty=Tensor[(16, 13, 14), uint16] */;
  %836 = %834.0;
  (%835, %836)
}

def @func_13533() -> Tensor[(16, 13, 14), uint16] {
  @func_13531() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_15490() -> Tensor[(720, 2), uint64] {
  %837 = @func_13226() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 9, 10), uint8], Tensor[(720, 2), uint64], Tensor[(16, 13, 14), uint16]) */;
  %837.3
}

def @func_2022() -> (Tensor[(16, 13, 14), bool],) {
  %838 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %839 = %838.0;
  (%839,)
}

def @func_9750() -> (Tensor[(16, 13, 14), uint16],) {
  %840 = @func_1967() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %841 = %840.0;
  (%841,)
}

def @func_2668(%var_2666: int64, %var_2667: Tensor[(13, 10, 6), int64]) -> (Tensor[(13, 10, 6), bool],) {
  @func_2664(%var_2666, %var_2667) /* ty=(Tensor[(13, 10, 6), bool],) */
}

def @func_2420(%var_2376: Tensor[(12, 16, 12), uint8], %var_2413: Tensor[(12, 16, 12), float64]) -> (Tensor[(12, 16, 12), uint8], Tensor[(16, 13, 14), uint16], Tensor[(12, 16, 12), bool]) {
  %842 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 16, 12), uint8] */, dtype="uint8") /* ty=Tensor[(12, 16, 12), uint8] */;
  %843 = shape_of(%var_2376, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%var_2376, dtype="uint8") /* ty=Tensor[(12, 16, 12), uint8] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %846 = @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %847 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 16, 12), uint8] */, dtype="float64") /* ty=Tensor[(12, 16, 12), float64] */;
  %848 = exp(%847) /* ty=Tensor[(12, 16, 12), float64] */;
  %849 = cast(%var_2413, dtype="bool") /* ty=Tensor[(12, 16, 12), bool] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%848, dtype="bool") /* ty=Tensor[(12, 16, 12), bool] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %853 = right_shift(%844, %845) /* ty=Tensor[(12, 16, 12), uint8] */;
  %854 = %846.0;
  %855 = less(%851, %852) /* ty=Tensor[(12, 16, 12), bool] */;
  (%853, %854, %855)
}

def @func_11537() -> Tensor[(16, 13, 14), uint16] {
  %856 = @func_3180() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */;
  %856.0
}

def @func_4934() -> (Tensor[(16, 13, 14), uint16],) {
  %857 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %858 = %857.0;
  (%858,)
}

def @func_1206() -> (Tensor[(16, 13, 14), uint16],) {
  @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_15949(%var_15948: Tensor[(416), int16]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(2, 16, 13), bool], Tensor[(416), int16], Tensor[(16, 13, 14), float64]) {
  %871 = fn (%var_15926: Tensor[(416), int16]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(2, 16, 13), bool], Tensor[(416), int16], Tensor[(16, 13, 14), float64]) {
    %859 = cast(%var_15926, dtype="int16") /* ty=Tensor[(416), int16] */;
    %860 = cast(%var_15926, dtype="int16") /* ty=Tensor[(416), int16] */;
    %861 = reshape(%859, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int16] */;
    %862 = reshape(%860, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int16] */;
    %863 = @func_15411() /* ty=Tensor[(16, 13, 14), uint16] */;
    %864 = cast(%863, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
    %865 = reshape(%864, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
    %866 = @func_675(%865) /* ty=(Tensor[(16, 13, 14), float64],) */;
    %867 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
    %868 = @func_5584() /* ty=Tensor[(16, 13, 14), uint16] */;
    %869 = @func_2294(%861, %862) /* ty=Tensor[(2, 16, 13), bool] */;
    %870 = %866.0;
    (%863, %867, %868, %869, %var_15926, %870)
  };
  %871(%var_15948) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(2, 16, 13), bool], Tensor[(416), int16], Tensor[(16, 13, 14), float64]) */
}

def @func_6272() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  %872 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %873 = @func_3501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
  %874 = %872.0;
  %875 = %873.1;
  %876 = @func_6055() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%874, %875, %876)
}

def @func_2854(%var_2852: Tensor[(7, 7, 10), uint32]) -> Tensor[(7, 7, 10), bool] {
  @func_2851(%var_2852) /* ty=Tensor[(7, 7, 10), bool] */
}

def @func_621() -> (Tensor[(16, 13, 14), uint16],) {
  %878 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %877 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%877,)
  };
  %878() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_16115() -> (Tensor[(16, 13, 14), uint16],) {
  %881 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %879 = @func_15368() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %880 = %879.3;
    (%880,)
  };
  %881() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_14767() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %885 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %882 = @func_2067() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %883 = @func_6289() /* ty=Tensor[(16, 13, 14), uint16] */;
    %884 = %882.0;
    (%883, %884)
  };
  %885() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_10397() -> Tensor[(16, 13, 14), uint16] {
  @func_10395() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_483() -> Tensor[(16, 13, 14), uint16] {
  @func_481() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_6084(%var_6082: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), bool],) {
  @func_6081(%var_6082) /* ty=(Tensor[(16, 13, 14), bool],) */
}

def @func_5715() -> (Tensor[(16, 13, 14), uint16],) {
  @func_5713() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_1689() -> (Tensor[(16, 13, 14), bool],) {
  @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */
}

def @func_8398(%var_8387: Tensor[(5, 20), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), float32], Tensor[(1078), bool], Tensor[(100), uint8], Tensor[(5, 20), float64]) {
  %886 = cast(meta[relay.Constant][24] /* ty=Tensor[(1078), bool] */, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %887 = cast(meta[relay.Constant][24] /* ty=Tensor[(1078), bool] */, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %888 = reshape(%886, newshape=[1078]) /* ty=Tensor[(1078), bool] */;
  %889 = reshape(%887, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
  %890 = @func_7024(%888, %889) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(1078), bool], Tensor[(7, 11, 14), bool], Tensor[(7, 11, 14), float32]) */;
  %891 = cast(%var_8387, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
  %892 = reshape(%891, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %893 = @func_4462(%892) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100), uint8], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %894 = @func_5697() /* ty=Tensor[(16, 13, 14), uint16] */;
  %895 = %890.3;
  %896 = %893.3;
  (%894, %895, meta[relay.Constant][24] /* ty=Tensor[(1078), bool] */, %896, %var_8387)
}

def @func_11613(%var_11611: Tensor[(4, 13, 9), uint8]) -> (Tensor[(4, 13, 9), uint8], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_11610(%var_11611) /* ty=(Tensor[(4, 13, 9), uint8], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_10063(%var_10041: Tensor[(16, 6, 4), int8], %var_10042: Tensor[(16, 6, 4), int8]) -> Tensor[(16, 6, 4), int8] {
  %897 = cast(%var_10042, dtype="int8") /* ty=Tensor[(16, 6, 4), int8] */;
  %898 = shape_of(%var_10041, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%var_10041, dtype="int8") /* ty=Tensor[(16, 6, 4), int8] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%899, %900) /* ty=Tensor[(16, 6, 4), int8] */
}

def @func_15368() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %901 = @func_14687() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
  %902 = @func_12572() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %903 = @func_12495() /* ty=Tensor[(16, 13, 14), uint16] */;
  %904 = @func_5697() /* ty=Tensor[(16, 13, 14), uint16] */;
  %905 = %901.0;
  %906 = %902.1;
  %907 = @func_9431() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%903, %904, %905, %906, %907)
}

def @func_5323() -> (Tensor[(4, 5, 2), float64], Tensor[(16, 13, 14), uint16]) {
  %908 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 1, 2), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 2), float64] */;
  %909 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 5, 2), float64] */, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
  %910 = maximum(%908, %909) /* ty=Tensor[(4, 5, 2), float64] */;
  %911 = @func_588() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%910, %911)
}

def @func_16257() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(77, 14), bool]) {
  %912 = @func_12735() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %913 = @func_11893() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %914 = cast(meta[relay.Constant][27] /* ty=Tensor[(77, 14), bool] */, dtype="bool") /* ty=Tensor[(77, 14), bool] */;
  %915 = reshape(%914, newshape=[1078]) /* ty=Tensor[(1078), bool] */;
  %916 = @func_4601(%915) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool]) */;
  %917 = %912.0;
  %918 = %913.0;
  %919 = @func_7706() /* ty=Tensor[(16, 13, 14), uint16] */;
  %920 = %916.0;
  (%917, %918, %919, %920, meta[relay.Constant][27] /* ty=Tensor[(77, 14), bool] */)
}

def @func_13797(%var_13763: Tensor[(14, 1, 15), float64], %var_13769: Tensor[(14, 14, 15), float64]) -> (Tensor[(14, 14, 15), uint32], Tensor[(16, 13, 14), uint16]) {
  %921 = cast(%var_13763, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %922 = asin(%921) /* ty=Tensor[(14, 1, 15), float64] */;
  %923 = cast(%922, dtype="int16") /* ty=Tensor[(14, 1, 15), int16] */;
  %924 = cast(%var_13769, dtype="int16") /* ty=Tensor[(14, 14, 15), int16] */;
  %925 = bitwise_or(%923, %924) /* ty=Tensor[(14, 14, 15), int16] */;
  %926 = cast(%var_13769, dtype="uint32") /* ty=Tensor[(14, 14, 15), uint32] */;
  %927 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(%925, dtype="uint32") /* ty=Tensor[(14, 14, 15), uint32] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %930 = logical_xor(%928, %929) /* ty=Tensor[(14, 14, 15), uint32] */;
  %931 = @func_9082() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%930, %931)
}

def @func_12028(%var_12000: Tensor[(10, 15, 10), float32], %var_12001: Tensor[(10, 15, 10), float32]) -> (Tensor[(10, 15, 10), float32], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(10, 15, 10), uint32], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  %932 = cast(%var_12001, dtype="float32") /* ty=Tensor[(10, 15, 10), float32] */;
  %933 = shape_of(%var_12000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%var_12000, dtype="float32") /* ty=Tensor[(10, 15, 10), float32] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %936 = cast(%var_12000, dtype="uint32") /* ty=Tensor[(10, 15, 10), uint32] */;
  %937 = shape_of(%var_12001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%var_12001, dtype="uint32") /* ty=Tensor[(10, 15, 10), uint32] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %940 = @func_2940() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %941 = divide(%934, %935) /* ty=Tensor[(10, 15, 10), float32] */;
  %942 = @func_8878() /* ty=Tensor[(16, 13, 14), uint16] */;
  %943 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
  %944 = minimum(%938, %939) /* ty=Tensor[(10, 15, 10), uint32] */;
  %945 = @func_5224() /* ty=Tensor[(16, 13, 14), bool] */;
  %946 = %940.0;
  (%941, %942, %943, %944, %945, %946)
}

def @func_1876() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_481() -> Tensor[(16, 13, 14), uint16] {
  @func_140() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_4601(%var_4589: Tensor[(1078), bool]) -> (Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), bool], Tensor[(1078), bool]) {
  %947 = @func_4198() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %948 = cast(%var_4589, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %949 = cast(%var_4589, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %950 = reshape(%948, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
  %951 = reshape(%949, newshape=[7, 11, 14]) /* ty=Tensor[(7, 11, 14), bool] */;
  %952 = @func_3093(%950, %951) /* ty=(Tensor[(7, 11, 14), bool],) */;
  %953 = %947.0;
  %954 = %952.0;
  (%953, %954, %var_4589)
}

def @func_11256() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %955 = @func_3234() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %956 = %955.1;
  %957 = @func_9082() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%956, %957)
}

def @func_3734() -> Tensor[(16, 13, 14), uint16] {
  @func_3732() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_5790() -> Tensor[(16, 13, 14), uint16] {
  %958 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %958.0
}

def @func_13634(%var_13623: Tensor[(2, 3, 5), float32]) -> (Tensor[(2, 3, 5), float32], Tensor[(16, 13, 14), uint16]) {
  %959 = cast(%var_13623, dtype="float32") /* ty=Tensor[(2, 3, 5), float32] */;
  %960 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %961 = rsqrt(%959) /* ty=Tensor[(2, 3, 5), float32] */;
  %962 = %960.0;
  (%961, %962)
}

def @func_12848() -> (Tensor[(16, 13, 14), bool],) {
  %964 = fn () -> (Tensor[(16, 13, 14), bool],) {
    %963 = @func_3549() /* ty=Tensor[(16, 13, 14), bool] */;
    (%963,)
  };
  %964() /* ty=(Tensor[(16, 13, 14), bool],) */
}

def @func_3902() -> Tensor[(16, 13, 14), uint16] {
  @func_3900() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_6036() -> (Tensor[(15, ?, 12), uint8], Tensor[(15, 1, 12), float32], Tensor[(16, 13, 14), bool]) {
  %965 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(15, 1, 12), uint8] */;
  %966 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(15, 1, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %967 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(15, 1, 12), uint8] */;
  %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %969 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 1, 12), uint8] */, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
  %970 = @func_2348() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %971 = bitwise_and(%967, %968) /* ty=Tensor[(15, ?, 12), uint8] */;
  %972 = asinh(%969) /* ty=Tensor[(15, 1, 12), float32] */;
  %973 = %970.0;
  (%971, %972, %973)
}

def @func_6757(%var_6626: Tensor[(6, 11, 11), float32]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(6, 11, 11), float32], Tensor[(6, 11, 11), bool], Tensor[(16, 13, 14), uint16]) {
  %974 = @func_2586() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %975 = @func_2720() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %976 = @func_5051() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %977 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %978 = cast(%var_6626, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
  %979 = asin(%978) /* ty=Tensor[(6, 11, 11), float32] */;
  %980 = cast(%979, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
  %981 = cast(%979, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
  %982 = acosh(%981) /* ty=Tensor[(6, 11, 11), float32] */;
  %983 = cast(%982, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
  %984 = acos(%983) /* ty=Tensor[(6, 11, 11), float32] */;
  %985 = cast(%982, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
  %986 = cosh(%985) /* ty=Tensor[(6, 11, 11), float32] */;
  %987 = cast(%986, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %988 = shape_of(%984, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%984, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %991 = less_equal(%989, %990) /* ty=Tensor[(6, 11, 11), bool] */;
  %992 = cast(%982, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %993 = shape_of(%991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%991, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %996 = equal(%994, %995) /* ty=Tensor[(6, 11, 11), bool] */;
  %997 = cast(%var_6626, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %998 = shape_of(%996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%996, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1001 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1002 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1003 = %974.1;
  %1004 = %975.1;
  %1005 = %976.1;
  %1006 = %977.0;
  %1007 = log(%980) /* ty=Tensor[(6, 11, 11), float32] */;
  %1008 = greater_equal(%999, %1000) /* ty=Tensor[(6, 11, 11), bool] */;
  %1009 = %1001.0;
  (%1002, %1003, %1004, %1005, %1006, %1007, %1008, %1009)
}

def @func_13483() -> (Tensor[(16, 13, 14), uint16], uint64, Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1017 = fn () -> (Tensor[(16, 13, 14), uint16], uint64, Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1010 = @func_4213() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], uint64) */;
    %1011 = @func_11670() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1012 = @func_12280() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1013 = @func_4531() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1014 = %1010.2;
    %1015 = %1011.1;
    %1016 = %1012.1;
    (%1013, %1014, %1015, %1016)
  };
  %1017() /* ty=(Tensor[(16, 13, 14), uint16], uint64, Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_2851(%var_2840: Tensor[(7, 7, 10), uint32]) -> Tensor[(7, 7, 10), bool] {
  %1018 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 7, 1), uint32] */, dtype="bool") /* ty=Tensor[(7, 7, 1), bool] */;
  %1019 = cast(%var_2840, dtype="bool") /* ty=Tensor[(7, 7, 10), bool] */;
  greater_equal(%1018, %1019) /* ty=Tensor[(7, 7, 10), bool] */
}

def @func_1433() -> (Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_5374() -> (Tensor[(16, 13, 14), uint16],) {
  %1022 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %1020 = @func_2178() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
    %1021 = %1020.2;
    (%1021,)
  };
  %1022() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_2364() -> (Tensor[(16, 13, 14), uint16],) {
  %1025 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %1023 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1024 = %1023.0;
    (%1024,)
  };
  %1025() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_10786(%var_10784: Tensor[(5, 8, 16), float64], %var_10785: Tensor[(5, 8, 16), float64]) -> (Tensor[(5, 8, 16), bool], Tensor[(16, 13, 14), uint16], Tensor[(5, 8, 16), float64]) {
  %1040 = fn (%var_10745: Tensor[(5, 8, 16), float64], %var_10746: Tensor[(5, 8, 16), float64]) -> (Tensor[(5, 8, 16), bool], Tensor[(16, 13, 14), uint16], Tensor[(5, 8, 16), float64]) {
    %1026 = cast(%var_10746, dtype="float64") /* ty=Tensor[(5, 8, 16), float64] */;
    %1027 = shape_of(%var_10745, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1028 = cast(%var_10745, dtype="float64") /* ty=Tensor[(5, 8, 16), float64] */;
    %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1030 = divide(%1028, %1029) /* ty=Tensor[(5, 8, 16), float64] */;
    %1031 = cast(%var_10746, dtype="bool") /* ty=Tensor[(5, 8, 16), bool] */;
    %1032 = shape_of(%1030, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1033 = cast(%1030, dtype="bool") /* ty=Tensor[(5, 8, 16), bool] */;
    %1034 = dyn.reshape(%1031, %1032, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1035 = @func_2940() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1036 = cast(%var_10745, dtype="float64") /* ty=Tensor[(5, 8, 16), float64] */;
    %1037 = not_equal(%1033, %1034) /* ty=Tensor[(5, 8, 16), bool] */;
    %1038 = %1035.0;
    %1039 = sinh(%1036) /* ty=Tensor[(5, 8, 16), float64] */;
    (%1037, %1038, %1039)
  };
  %1040(%var_10784, %var_10785) /* ty=(Tensor[(5, 8, 16), bool], Tensor[(16, 13, 14), uint16], Tensor[(5, 8, 16), float64]) */
}

def @func_851() -> (Tensor[(16, 13, 14), uint16],) {
  @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_10253() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1041 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1042 = @func_7285() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1043 = %1041.0;
  %1044 = %1042.0;
  (%1043, %1044)
}

def @func_11865() -> Tensor[(16, 13, 14), uint16] {
  %1045 = @func_5499() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1045.0
}

def @func_3093(%var_3070: Tensor[(7, 11, 14), bool], %var_3071: Tensor[(7, 11, 14), bool]) -> (Tensor[(7, 11, 14), bool],) {
  %1046 = cast(%var_3071, dtype="bool") /* ty=Tensor[(7, 11, 14), bool] */;
  %1047 = shape_of(%var_3070, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1048 = cast(%var_3070, dtype="bool") /* ty=Tensor[(7, 11, 14), bool] */;
  %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1050 = logical_or(%1048, %1049) /* ty=Tensor[(7, 11, 14), bool] */;
  (%1050,)
}

def @func_4961() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_4959() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_8577() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1051 = @func_5343() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1052 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1053 = %1051.0;
  %1054 = @func_5790() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1055 = %1052.0;
  (%1053, %1054, %1055)
}

def @func_11932() -> Tensor[(16, 13, 14), uint16] {
  %1056 = @func_7593() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1056.0
}

def @func_14025() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1061 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1057 = @func_10928() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1058 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1059 = %1057.0;
    %1060 = %1058.0;
    (%1059, %1060)
  };
  %1061() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_5255(%var_5248: Tensor[(12, 1, 10), float64]) -> Tensor[(12, 15, 10), float64] {
  %1062 = cast(%var_5248, dtype="float64") /* ty=Tensor[(12, 1, 10), float64] */;
  %1063 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 15, 10), float64] */, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
  divide(%1062, %1063) /* ty=Tensor[(12, 15, 10), float64] */
}

def @func_8078() -> (Tensor[(16, 13, 14), uint16],) {
  %1064 = @func_3026() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %1065 = %1064.1;
  (%1065,)
}

def @func_7160() -> (Tensor[(16, 13, 14), uint16],) {
  %1066 = @func_6574() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1067 = %1066.1;
  (%1067,)
}

def @func_13637(%var_13635: Tensor[(2, 3, 5), float32]) -> (Tensor[(2, 3, 5), float32], Tensor[(16, 13, 14), uint16]) {
  @func_13634(%var_13635) /* ty=(Tensor[(2, 3, 5), float32], Tensor[(16, 13, 14), uint16]) */
}

def @func_5343() -> (Tensor[(16, 13, 14), uint16],) {
  %1068 = @func_2720() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1069 = %1068.1;
  (%1069,)
}

def @func_1204() -> (Tensor[(16, 13, 14), uint16],) {
  %1070 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1070,)
}

def @func_6038() -> (Tensor[(15, ?, 12), uint8], Tensor[(15, 1, 12), float32], Tensor[(16, 13, 14), bool]) {
  @func_6036() /* ty=(Tensor[(15, ?, 12), uint8], Tensor[(15, 1, 12), float32], Tensor[(16, 13, 14), bool]) */
}

def @func_12085() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1077 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1071 = @func_7760() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1072 = @func_4198() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1073 = %1071.0;
    %1074 = @func_10891() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1075 = %1072.0;
    %1076 = @func_6055() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1073, %1074, %1075, %1076)
  };
  %1077() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_12715(%var_12714: Tensor[(11, 10, 11), float64]) -> (Tensor[(11, 10, 11), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1088 = fn (%var_12674: Tensor[(11, 10, 11), float64]) -> (Tensor[(11, 10, 11), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1078 = cast(%var_12674, dtype="float64") /* ty=Tensor[(11, 10, 11), float64] */;
    %1079 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1080 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1081 = @func_7285() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1082 = @func_7285() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1083 = log2(%1078) /* ty=Tensor[(11, 10, 11), float64] */;
    %1084 = %1079.0;
    %1085 = %1080.0;
    %1086 = %1081.0;
    %1087 = %1082.0;
    (%1083, %1084, %1085, %1086, %1087)
  };
  %1088(%var_12714) /* ty=(Tensor[(11, 10, 11), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_4772() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  @func_4770() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */
}

def @func_6546() -> (Tensor[(16, 13, 14), uint16],) {
  %1089 = @func_3677() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1090 = %1089.0;
  (%1090,)
}

def @func_2298(%var_2296: Tensor[(2, 16, 13), int16], %var_2297: Tensor[(2, 16, 13), int16]) -> Tensor[(2, 16, 13), bool] {
  @func_2294(%var_2296, %var_2297) /* ty=Tensor[(2, 16, 13), bool] */
}

def @func_2294(%var_2285: Tensor[(2, 16, 13), int16], %var_2286: Tensor[(2, 16, 13), int16]) -> Tensor[(2, 16, 13), bool] {
  %1091 = cast(%var_2286, dtype="bool") /* ty=Tensor[(2, 16, 13), bool] */;
  %1092 = shape_of(%var_2285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1093 = cast(%var_2285, dtype="bool") /* ty=Tensor[(2, 16, 13), bool] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1093, %1094) /* ty=Tensor[(2, 16, 13), bool] */
}

def @func_3543() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  @func_3541() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */
}

def @func_8195() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1099 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1095 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1096 = %1095.0;
    %1097 = @func_900() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1098 = @func_3534() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1096, %1097, %1098)
  };
  %1099() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_450() -> (Tensor[(16, 13, 14), uint16],) {
  %1100 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1101 = %1100.0;
  (%1101,)
}

def @func_3097(%var_3095: Tensor[(7, 11, 14), bool], %var_3096: Tensor[(7, 11, 14), bool]) -> (Tensor[(7, 11, 14), bool],) {
  @func_3093(%var_3095, %var_3096) /* ty=(Tensor[(7, 11, 14), bool],) */
}

def @func_9192(%var_9191: Tensor[(1, 120), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float64], Tensor[(1, 120), float64]) {
  %1109 = fn (%var_9178: Tensor[(1, 120), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float64], Tensor[(1, 120), float64]) {
    %1102 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1103 = cast(%var_9178, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
    %1104 = reshape(%1103, newshape=[12, 1, 10]) /* ty=Tensor[(12, 1, 10), float64] */;
    %1105 = %1102.1;
    %1106 = @func_7706() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1107 = @func_4330() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1108 = @func_5255(%1104) /* ty=Tensor[(12, 15, 10), float64] */;
    (%1105, %1106, %1107, %1108, %var_9178)
  };
  %1109(%var_9191) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float64], Tensor[(1, 120), float64]) */
}

def @func_675(%var_662: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), float64],) {
  %1110 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1111 = %1110.0;
  %1112 = cast(%var_662, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %1113 = shape_of(%1111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1114 = cast(%1111, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1116 = floor_divide(%1114, %1115) /* ty=Tensor[(16, 13, 14), float64] */;
  (%1116,)
}

def @func_3319(%var_3317: Tensor[(10, 5, 7), uint32]) -> (Tensor[(10, 5, 7), uint32],) {
  @func_3316(%var_3317) /* ty=(Tensor[(10, 5, 7), uint32],) */
}

def @func_14636() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(120), float64], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float32]) {
  @func_14634() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(120), float64], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float32]) */
}

def @func_10929() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1121 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1117 = @func_3501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
    %1118 = @func_6368() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(416), float64]) */;
    %1119 = %1117.0;
    %1120 = %1118.1;
    (%1119, %1120)
  };
  %1121() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_8879() -> Tensor[(16, 13, 14), uint16] {
  %1123 = fn () -> Tensor[(16, 13, 14), uint16] {
    %1122 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1122.0
  };
  %1123() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_12816() -> (Tensor[(16, 13, 14), uint16],) {
  %1126 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %1124 = @func_12433() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1125 = %1124.0;
    (%1125,)
  };
  %1126() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_13531() -> Tensor[(16, 13, 14), uint16] {
  @func_2765() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_5258(%var_5256: Tensor[(12, 1, 10), float64]) -> Tensor[(12, 15, 10), float64] {
  @func_5255(%var_5256) /* ty=Tensor[(12, 15, 10), float64] */
}

def @func_15731() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_15729() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_10876() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_10874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_11343(%var_11316: Tensor[(780), int64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(780), int64], Tensor[(16, 13, 14), uint16]) {
  %1127 = cast(%var_11316, dtype="int64") /* ty=Tensor[(780), int64] */;
  %1128 = reshape(%1127, newshape=[780]) /* ty=Tensor[(780), int64] */;
  %1129 = @func_5768(%1128) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(294), float64], Tensor[(780), int64]) */;
  %1130 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1131 = @func_10891() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1132 = %1129.1;
  %1133 = %1130.0;
  (%1131, %1132, %var_11316, %1133)
}

def @func_15445(%var_15443: Tensor[(15, 4, 13), int64]) -> (Tensor[(15, 4, 13), bool],) {
  @func_15442(%var_15443) /* ty=(Tensor[(15, 4, 13), bool],) */
}

def @func_10670(%var_10668: int64) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(13, 10, 6), float64], int64, Tensor[(780), int64], Tensor[(1078), bool]) {
  @func_10667(%var_10668) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(13, 10, 6), float64], int64, Tensor[(780), int64], Tensor[(1078), bool]) */
}

def @func_12951() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1134 = @func_7305() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1135 = @func_5323() /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 13, 14), uint16]) */;
  %1136 = %1134.0;
  %1137 = %1135.1;
  (%1136, %1137)
}

def @func_16058() -> (Tensor[(16, 13, 14), uint16],) {
  %1138 = @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1139 = %1138.1;
  (%1139,)
}

def @func_10343() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1144 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1140 = @func_7593() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1141 = @func_8488() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1142 = %1140.0;
    %1143 = %1141.0;
    (%1142, %1143)
  };
  %1144() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_6081(%var_6075: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), bool],) {
  %1145 = @func_5922() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1146 = %1145.0;
  %1147 = cast(%var_6075, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %1148 = shape_of(%1146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1149 = cast(%1146, dtype="bool") /* ty=Tensor[(16, 13, 14), bool] */;
  %1150 = dyn.reshape(%1147, %1148, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1151 = equal(%1149, %1150) /* ty=Tensor[(16, 13, 14), bool] */;
  (%1151,)
}

def @func_9698() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1152 = @func_9603() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1153 = @func_4959() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1154 = %1152.0;
  %1155 = %1153.0;
  (%1154, %1155)
}

def @func_15990(%var_15989: Tensor[(12, 4, 3), float32]) -> Tensor[(12, 4, 3), float32] {
  %1160 = fn (%var_15975: Tensor[(12, 4, 3), float32]) -> Tensor[(12, 4, 3), float32] {
    %1156 = cast(%var_15975, dtype="float32") /* ty=Tensor[(12, 4, 3), float32] */;
    %1157 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(12, 4, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1158 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 4, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 3), float32] */;
    %1159 = dyn.reshape(%1156, %1157, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    multiply(%1158, %1159) /* ty=Tensor[(12, 4, 3), float32] */
  };
  %1160(%var_15989) /* ty=Tensor[(12, 4, 3), float32] */
}

def @func_14944() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1161 = @func_13652() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1162 = %1161.0;
  %1163 = @func_9082() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1162, %1163)
}

def @func_14689() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  @func_14687() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */
}

def @func_14882() -> (Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), bool]) {
  %1164 = @func_10501() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */;
  %1165 = @func_14317() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %1166 = %1164.2;
  %1167 = %1165.2;
  (%1166, %1167)
}

def @func_11438() -> (Tensor[(16, 13, 14), uint16],) {
  @func_11436() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_5865(%var_5863: Tensor[(8, 8, 14), float64], %var_5864: Tensor[(8, 8, 14), float64]) -> (Tensor[(8, 8, 14), float64],) {
  @func_5861(%var_5863, %var_5864) /* ty=(Tensor[(8, 8, 14), float64],) */
}

def @func_13801(%var_13799: Tensor[(14, 1, 15), float64], %var_13800: Tensor[(14, 14, 15), float64]) -> (Tensor[(14, 14, 15), uint32], Tensor[(16, 13, 14), uint16]) {
  @func_13797(%var_13799, %var_13800) /* ty=(Tensor[(14, 14, 15), uint32], Tensor[(16, 13, 14), uint16]) */
}

def @func_2750() -> (Tensor[(16, 13, 14), uint16],) {
  @func_2748() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_11857() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1170 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1168 = @func_3534() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1169 = @func_6055() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1168, %1169)
  };
  %1170() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_9767() -> Tensor[(11, 13, 13), float32] {
  %1172 = fn () -> Tensor[(11, 13, 13), float32] {
    %1171 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 13, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 13), float32] */;
    sinh(%1171) /* ty=Tensor[(11, 13, 13), float32] */
  };
  %1172() /* ty=Tensor[(11, 13, 13), float32] */
}

def @func_15412() -> Tensor[(16, 13, 14), uint16] {
  %1174 = fn () -> Tensor[(16, 13, 14), uint16] {
    %1173 = @func_12951() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1173.1
  };
  %1174() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_5586() -> Tensor[(16, 13, 14), uint16] {
  @func_5584() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_3535() -> Tensor[(16, 13, 14), uint16] {
  %1176 = fn () -> Tensor[(16, 13, 14), uint16] {
    %1175 = @func_3127() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1175.1
  };
  %1176() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_15193() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_15191() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_2024() -> (Tensor[(16, 13, 14), bool],) {
  @func_2022() /* ty=(Tensor[(16, 13, 14), bool],) */
}

def @func_5651() -> (Tensor[(16, 13, 14), uint16],) {
  %1177 = @func_2363() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1178 = %1177.0;
  (%1178,)
}

def @func_888() -> (Tensor[(16, 13, 14), uint16],) {
  %1179 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1179,)
}

def @func_176() -> (Tensor[(16, 13, 14), uint16],) {
  %1181 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %1180 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1180,)
  };
  %1181() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_4292(%var_4290: Tensor[(16, 13, 14), uint16]) -> (Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), float64]) {
  @func_4289(%var_4290) /* ty=(Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), float64]) */
}

def @func_13388(%var_13363: Tensor[(14, 16, 12), float64]) -> (Tensor[(14, 16, 12), float64], Tensor[(16, 13, 14), uint16]) {
  %1182 = cast(%var_13363, dtype="float64") /* ty=Tensor[(14, 16, 12), float64] */;
  %1183 = sigmoid(%1182) /* ty=Tensor[(14, 16, 12), float64] */;
  %1184 = cast(%1183, dtype="float64") /* ty=Tensor[(14, 16, 12), float64] */;
  %1185 = @func_4553() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1186 = exp(%1184) /* ty=Tensor[(14, 16, 12), float64] */;
  %1187 = %1185.0;
  (%1186, %1187)
}

def @func_11861() -> (Tensor[(16, 13, 14), bool],) {
  %1189 = fn () -> (Tensor[(16, 13, 14), bool],) {
    %1188 = @func_4477() /* ty=Tensor[(16, 13, 14), bool] */;
    (%1188,)
  };
  %1189() /* ty=(Tensor[(16, 13, 14), bool],) */
}

def @func_3549() -> Tensor[(16, 13, 14), bool] {
  %1190 = @func_2348() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %1190.0
}

def @func_14884() -> (Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), bool]) {
  @func_14882() /* ty=(Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), bool]) */
}

def @func_16206() -> Tensor[(16, 13, 14), uint16] {
  @func_16204() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_6548() -> (Tensor[(16, 13, 14), uint16],) {
  @func_6546() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_12736() -> (Tensor[(16, 13, 14), uint16],) {
  %1193 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %1191 = @func_6867() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1192 = %1191.1;
    (%1192,)
  };
  %1193() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_14467(%var_14465: Tensor[(4, 12, 14), float64], %var_14466: Tensor[(4, 12, 14), float64]) -> (Tensor[(4, 12, 14), float64], Tensor[(16, 13, 14), uint16]) {
  %1200 = fn (%var_14438: Tensor[(4, 12, 14), float64], %var_14439: Tensor[(4, 12, 14), float64]) -> (Tensor[(4, 12, 14), float64], Tensor[(16, 13, 14), uint16]) {
    %1194 = cast(%var_14439, dtype="float64") /* ty=Tensor[(4, 12, 14), float64] */;
    %1195 = shape_of(%var_14438, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1196 = cast(%var_14438, dtype="float64") /* ty=Tensor[(4, 12, 14), float64] */;
    %1197 = dyn.reshape(%1194, %1195, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1198 = maximum(%1196, %1197) /* ty=Tensor[(4, 12, 14), float64] */;
    %1199 = @func_12827() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1198, %1199)
  };
  %1200(%var_14465, %var_14466) /* ty=(Tensor[(4, 12, 14), float64], Tensor[(16, 13, 14), uint16]) */
}

def @func_5699() -> Tensor[(16, 13, 14), uint16] {
  @func_5697() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_14318() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  %1207 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
    %1201 = @func_14069() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1202 = @func_12280() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1203 = @func_6036() /* ty=(Tensor[(15, ?, 12), uint8], Tensor[(15, 1, 12), float32], Tensor[(16, 13, 14), bool]) */;
    %1204 = %1201.1;
    %1205 = %1202.0;
    %1206 = %1203.2;
    (%1204, %1205, %1206)
  };
  %1207() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */
}

def @func_10255() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_10253() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_3049() -> Tensor[(16, 13, 14), uint16] {
  %1208 = fn () -> Tensor[(16, 13, 14), uint16] {
    @func_481() /* ty=Tensor[(16, 13, 14), uint16] */
  };
  %1208() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_14634() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(120), float64], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float32]) {
  %1209 = @func_8488() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1210 = cast(meta[relay.Constant][34] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1211 = reshape(%1210, newshape=[1, 120]) /* ty=Tensor[(1, 120), float64] */;
  %1212 = @func_9190(%1211) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(12, 15, 10), float64], Tensor[(1, 120), float64]) */;
  %1213 = %1212.3;
  %1214 = cast(%1213, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
  %1215 = tan(%1214) /* ty=Tensor[(12, 15, 10), float64] */;
  %1216 = cast(%1215, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
  %1217 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1218 = %1209.1;
  %1219 = @func_2882() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1220 = sinh(%1216) /* ty=Tensor[(12, 15, 10), float32] */;
  (%1217, %1218, meta[relay.Constant][34] /* ty=Tensor[(120), float64] */, %1219, %1220)
}

def @func_1968() -> (Tensor[(16, 13, 14), uint16],) {
  %1222 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %1221 = @func_140() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1221,)
  };
  %1222() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_902() -> Tensor[(16, 13, 14), uint16] {
  @func_900() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_15834() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1223 = @func_15191() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1224 = @func_12802() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1225 = %1223.0;
  (%1224, %1225)
}

def @func_13728(%var_13726: Tensor[(16, 15, 2), uint32]) -> (Tensor[(16, 15, 2), uint32], Tensor[(16, 13, 14), bool], Tensor[(16, 15, 2), float32]) {
  @func_13725(%var_13726) /* ty=(Tensor[(16, 15, 2), uint32], Tensor[(16, 13, 14), bool], Tensor[(16, 15, 2), float32]) */
}

def @func_1537() -> (Tensor[(16, 13, 14), uint16],) {
  @func_1535() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_4464(%var_4463: Tensor[(100), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100), uint8], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1240 = fn (%var_4417: Tensor[(100), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100), uint8], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1226 = cast(meta[relay.Constant][35] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
    %1227 = reshape(%1226, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
    %1228 = @func_2650(%1227) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(5, 5, 4), float32]) */;
    %1229 = cast(%var_4417, dtype="uint8") /* ty=Tensor[(100), uint8] */;
    %1230 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(100), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1231 = cast(meta[relay.Constant][35] /* ty=Tensor[(100), float64] */, dtype="uint8") /* ty=Tensor[(100), uint8] */;
    %1232 = dyn.reshape(%1229, %1230, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %1233 = @func_3127() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1234 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1235 = %1228.0;
    %1236 = @func_3534() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1237 = add(%1231, %1232) /* ty=Tensor[(100), uint8] */;
    %1238 = %1233.0;
    %1239 = @func_3534() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1234, %1235, %1236, %1237, %1238, %1239)
  };
  %1240(%var_4463) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(100), uint8], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_5861(%var_5850: Tensor[(8, 8, 14), float64], %var_5851: Tensor[(8, 8, 14), float64]) -> (Tensor[(8, 8, 14), float64],) {
  %1241 = cast(%var_5851, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
  %1242 = shape_of(%var_5850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1243 = cast(%var_5850, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
  %1244 = dyn.reshape(%1241, %1242, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1245 = mod(%1243, %1244) /* ty=Tensor[(8, 8, 14), float64] */;
  (%1245,)
}

def @func_8435(%var_8429: Tensor[(49, 6), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(49, 6), float64]) {
  %1246 = @func_2803() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1247 = cast(%var_8429, dtype="float64") /* ty=Tensor[(49, 6), float64] */;
  %1248 = reshape(%1247, newshape=[294]) /* ty=Tensor[(294), float64] */;
  %1249 = @func_1027(%1248) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(294), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1250 = %1246.0;
  %1251 = %1249.5;
  (%1250, %1251, %var_8429)
}

def @func_11023() -> (Tensor[(16, 13, 14), uint16],) {
  @func_11021() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_14209() -> Tensor[(6, 2, 2), float32] {
  %1256 = fn () -> Tensor[(6, 2, 2), float32] {
    %1252 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 2), float32] */;
    %1253 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(6, 2, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1254 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 2), float32] */;
    %1255 = dyn.reshape(%1252, %1253, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    multiply(%1254, %1255) /* ty=Tensor[(6, 2, 2), float32] */
  };
  %1256() /* ty=Tensor[(6, 2, 2), float32] */
}

def @func_16010() -> (Tensor[(16, 13, 14), uint16],) {
  @func_16008() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_1431() -> (Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1257 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1258 = cast(%1257, dtype="float64") /* ty=Tensor[(16, 13, 14), float64] */;
  %1259 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1260 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1261 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1262 = acosh(%1258) /* ty=Tensor[(16, 13, 14), float64] */;
  %1263 = %1259.0;
  %1264 = %1260.0;
  %1265 = %1261.0;
  %1266 = @func_370() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1262, %1263, %1264, %1265, %1266)
}

def @func_4213() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], uint64) {
  %1267 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1268 = cast(meta[relay.Constant][38] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1269 = reshape(%1268, newshape=[]) /* ty=uint64 */;
  %1270 = @func_1776(%1269) /* ty=(Tensor[(5, 9, 8), uint64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1271 = %1267.0;
  %1272 = %1270.1;
  (%1271, %1272, meta[relay.Constant][38] /* ty=uint64 */)
}

def @func_16337() -> Tensor[(16, 13, 14), uint16] {
  %1274 = fn () -> Tensor[(16, 13, 14), uint16] {
    %1273 = @func_15542() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1273.0
  };
  %1274() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_3316(%var_3307: Tensor[(10, 5, 7), uint32]) -> (Tensor[(10, 5, 7), uint32],) {
  %1275 = cast(%var_3307, dtype="uint32") /* ty=Tensor[(10, 5, 7), uint32] */;
  %1276 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(10, 5, 7), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1277 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 5, 7), uint32] */, dtype="uint32") /* ty=Tensor[(10, 5, 7), uint32] */;
  %1278 = dyn.reshape(%1275, %1276, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1279 = bitwise_or(%1277, %1278) /* ty=Tensor[(10, 5, 7), uint32] */;
  (%1279,)
}

def @func_1245() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_1243() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_2349() -> (Tensor[(16, 13, 14), bool],) {
  %1282 = fn () -> (Tensor[(16, 13, 14), bool],) {
    %1280 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
    %1281 = %1280.0;
    (%1281,)
  };
  %1282() /* ty=(Tensor[(16, 13, 14), bool],) */
}

def @func_5923() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1286 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1283 = @func_5672() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1284 = @func_4531() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1285 = %1283.0;
    (%1284, %1285)
  };
  %1286() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_14408() -> Tensor[(16, 13, 14), uint16] {
  %1288 = fn () -> Tensor[(16, 13, 14), uint16] {
    %1287 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1287.2
  };
  %1288() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_2264(%var_2216: Tensor[(8, 9, 5), uint64]) -> (Tensor[(8, 9, 5), uint64], Tensor[(16, 13, 14), bool], Tensor[(1, 2912), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64]) {
  %1289 = cast(meta[relay.Constant][40] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1290 = cast(%var_2216, dtype="uint64") /* ty=Tensor[(8, 9, 5), uint64] */;
  %1291 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 2912), uint16] */, dtype="uint16") /* ty=Tensor[(1, 2912), uint16] */;
  %1292 = reshape(%1291, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %1293 = @func_450() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1294 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1295 = bitwise_or(%1289, %1290) /* ty=Tensor[(8, 9, 5), uint64] */;
  %1296 = @func_1152(%1292) /* ty=Tensor[(16, 13, 14), bool] */;
  %1297 = %1293.0;
  %1298 = %1294.0;
  (%1295, %1296, meta[relay.Constant][41] /* ty=Tensor[(1, 2912), uint16] */, %1297, %1298)
}

def @func_16422() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1305 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1299 = @func_14024() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1300 = @func_8771() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1301 = @func_14944() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1302 = %1299.0;
    %1303 = %1300.0;
    %1304 = %1301.0;
    (%1302, %1303, %1304)
  };
  %1305() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_11381() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1311 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1306 = @func_10253() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1307 = @func_10456() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1308 = %1306.1;
    %1309 = %1307.1;
    %1310 = @func_5584() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1308, %1309, %1310)
  };
  %1311() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_849() -> (Tensor[(16, 13, 14), uint16],) {
  %1312 = @func_774() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1313 = %1312.0;
  (%1313,)
}

def @func_12505() -> (Tensor[(16, 13, 14), uint16],) {
  @func_12503() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_7825(%var_7822: Tensor[(9, 12, 12), float32]) -> (Tensor[(9, 12, 12), float32],) {
  %1314 = cast(%var_7822, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
  %1315 = atanh(%1314) /* ty=Tensor[(9, 12, 12), float32] */;
  (%1315,)
}

def @func_11021() -> (Tensor[(16, 13, 14), uint16],) {
  %1316 = @func_8049() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1317 = %1316.0;
  (%1317,)
}

def @func_3732() -> Tensor[(16, 13, 14), uint16] {
  %1318 = @func_1219() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1318.1
}

def @func_10156() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_10154() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_12998() -> Tensor[(16, 13, 14), uint16] {
  @func_7859() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_10893() -> Tensor[(16, 13, 14), uint16] {
  @func_10891() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_13000() -> Tensor[(16, 13, 14), uint16] {
  @func_12998() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_5325() -> (Tensor[(4, 5, 2), float64], Tensor[(16, 13, 14), uint16]) {
  @func_5323() /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 13, 14), uint16]) */
}

def @func_14546() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1321 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1319 = @func_3048() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1320 = @func_481() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1319, %1320)
  };
  %1321() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_12766() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_12764() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_14560() -> (Tensor[(16, 13, 14), uint16],) {
  @func_14558() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_11610(%var_11579: Tensor[(4, 13, 9), uint8]) -> (Tensor[(4, 13, 9), uint8], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1322 = cast(meta[relay.Constant][42] /* ty=Tensor[(4, 13, 9), uint8] */, dtype="uint8") /* ty=Tensor[(4, 13, 9), uint8] */;
  %1323 = shape_of(%var_11579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1324 = cast(%var_11579, dtype="uint8") /* ty=Tensor[(4, 13, 9), uint8] */;
  %1325 = dyn.reshape(%1322, %1323, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1326 = @func_6510() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */;
  %1327 = @func_8681() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1328 = left_shift(%1324, %1325) /* ty=Tensor[(4, 13, 9), uint8] */;
  %1329 = %1326.0;
  %1330 = %1327.0;
  %1331 = @func_10395() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1328, %1329, %1330, %1331)
}

def @func_13071() -> (Tensor[(16, 13, 14), uint16],) {
  @func_13069() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_15191() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1332 = @func_14774() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1333 = @func_2473() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1334 = %1332.0;
  %1335 = %1333.0;
  (%1334, %1335)
}

def @func_4936() -> (Tensor[(16, 13, 14), uint16],) {
  @func_4934() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_10667(%var_10644: int64) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), int32], Tensor[(13, 10, 6), float64], int64, Tensor[(780), int64], Tensor[(1078), bool]) {
  %1336 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1337 = @func_10154() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1338 = %1336.3;
  %1339 = cast(%1338, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
  %1340 = reshape(%1339, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
  %1341 = cast(%var_10644, dtype="int64") /* ty=int64 */;
  %1342 = cast(meta[relay.Constant][43] /* ty=Tensor[(780), int64] */, dtype="int64") /* ty=Tensor[(780), int64] */;
  %1343 = cast(meta[relay.Constant][44] /* ty=Tensor[(1078), bool] */, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %1344 = reshape(%1341, newshape=[]) /* ty=int64 */;
  %1345 = reshape(%1342, newshape=[780]) /* ty=Tensor[(780), int64] */;
  %1346 = reshape(%1343, newshape=[1078, 1]) /* ty=Tensor[(1078, 1), bool] */;
  %1347 = @func_4105(%1344, %1345, %1346) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], int64, Tensor[(780), int64], Tensor[(7, 11, 14), bool], Tensor[(1078, 1), bool], Tensor[(13, 10, 6), float64]) */;
  %1348 = @func_5790() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1349 = %1337.1;
  %1350 = @func_3612(%1340) /* ty=Tensor[(16, 13, 14), int32] */;
  %1351 = %1347.8;
  (%1338, %1348, %1349, %1350, %1351, %var_10644, meta[relay.Constant][43] /* ty=Tensor[(780), int64] */, meta[relay.Constant][44] /* ty=Tensor[(1078), bool] */)
}

def @func_15122() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_15120() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_4770() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) {
  %1352 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1353 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %1354 = %1352.0;
  %1355 = %1353.0;
  (%1354, %1355)
}

def @func_8401(%var_8399: Tensor[(5, 20), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), float32], Tensor[(1078), bool], Tensor[(100), uint8], Tensor[(5, 20), float64]) {
  @func_8398(%var_8399) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(7, 11, 14), float32], Tensor[(1078), bool], Tensor[(100), uint8], Tensor[(5, 20), float64]) */
}

def @func_2941() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1360 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1356 = @func_2720() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1357 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1358 = %1356.1;
    %1359 = %1357.0;
    (%1358, %1359)
  };
  %1360() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_16060() -> (Tensor[(16, 13, 14), uint16],) {
  @func_16058() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_8023() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_8021() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_3541() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  %1361 = @func_1874() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1362 = @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1363 = %1361.2;
  %1364 = %1362.0;
  (%1363, %1364)
}

def @func_5697() -> Tensor[(16, 13, 14), uint16] {
  %1365 = @func_5672() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1365.0
}

def @func_3283(%var_3282: Tensor[(294), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) {
  %1378 = fn (%var_3275: Tensor[(294), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) {
    %1366 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1367 = @func_2473() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1368 = @func_2178() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
    %1369 = @func_2720() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1370 = cast(%var_3275, dtype="float64") /* ty=Tensor[(294), float64] */;
    %1371 = reshape(%1370, newshape=[294]) /* ty=Tensor[(294), float64] */;
    %1372 = @func_1027(%1371) /* ty=(Tensor[(3, 14, 7), float32], Tensor[(294), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1373 = %1366.1;
    %1374 = %1367.1;
    %1375 = %1368.3;
    %1376 = %1369.0;
    %1377 = %1372.5;
    (%1373, %1374, %1375, %1376, %1377, %var_3275)
  };
  %1378(%var_3282) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */
}

def @func_3614(%var_3613: Tensor[(16, 13, 14), uint16]) -> Tensor[(16, 13, 14), int32] {
  %1385 = fn (%var_3607: Tensor[(16, 13, 14), uint16]) -> Tensor[(16, 13, 14), int32] {
    %1379 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1380 = %1379.0;
    %1381 = cast(%var_3607, dtype="int32") /* ty=Tensor[(16, 13, 14), int32] */;
    %1382 = shape_of(%1380, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1383 = cast(%1380, dtype="int32") /* ty=Tensor[(16, 13, 14), int32] */;
    %1384 = dyn.reshape(%1381, %1382, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    maximum(%1383, %1384) /* ty=Tensor[(16, 13, 14), int32] */
  };
  %1385(%var_3613) /* ty=Tensor[(16, 13, 14), int32] */
}

def @func_10502() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) {
  %1394 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) {
    %1386 = @func_7440() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1387 = @func_4123() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1388 = %1386.1;
    %1389 = cast(%1388, dtype="uint16") /* ty=Tensor[(16, 13, 14), uint16] */;
    %1390 = reshape(%1389, newshape=[16, 13, 14]) /* ty=Tensor[(16, 13, 14), uint16] */;
    %1391 = @func_4289(%1390) /* ty=(Tensor[(16, 13, 14), float32], Tensor[(16, 13, 14), float64]) */;
    %1392 = %1387.0;
    %1393 = %1391.0;
    (%1388, %1392, %1393)
  };
  %1394() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */
}

def @func_13725(%var_13694: Tensor[(16, 15, 2), uint32]) -> (Tensor[(16, 15, 2), uint32], Tensor[(16, 13, 14), bool], Tensor[(16, 15, 2), float32]) {
  %1395 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 15, 2), uint32] */, dtype="uint32") /* ty=Tensor[(16, 15, 2), uint32] */;
  %1396 = shape_of(%var_13694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1397 = cast(%var_13694, dtype="uint32") /* ty=Tensor[(16, 15, 2), uint32] */;
  %1398 = dyn.reshape(%1395, %1396, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1399 = @func_3026() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
  %1400 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 15, 2), uint32] */, dtype="float32") /* ty=Tensor[(16, 15, 2), float32] */;
  %1401 = minimum(%1397, %1398) /* ty=Tensor[(16, 15, 2), uint32] */;
  %1402 = %1399.3;
  %1403 = acos(%1400) /* ty=Tensor[(16, 15, 2), float32] */;
  (%1401, %1402, %1403)
}

def @func_16036() -> Tensor[(16, 13, 14), uint16] {
  %1405 = fn () -> Tensor[(16, 13, 14), uint16] {
    %1404 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1404.0
  };
  %1405() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_3756() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1410 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1406 = @func_1204() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1407 = @func_2332() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1408 = %1406.0;
    %1409 = %1407.0;
    (%1408, %1409)
  };
  %1410() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_9048() -> (Tensor[(16, 13, 14), uint16], Tensor[(9, 9, 14), float64], Tensor[(16, 13, 14), uint16]) {
  %1415 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(9, 9, 14), float64], Tensor[(16, 13, 14), uint16]) {
    %1411 = @func_1243() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1412 = %1411.1;
    %1413 = @func_6910() /* ty=Tensor[(9, 9, 14), float64] */;
    %1414 = @func_2765() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1412, %1413, %1414)
  };
  %1415() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(9, 9, 14), float64], Tensor[(16, 13, 14), uint16]) */
}

def @func_8129(%var_8127: Tensor[(6, 13, 6), float32]) -> (Tensor[(6, 13, 6), float32],) {
  @func_8126(%var_8127) /* ty=(Tensor[(6, 13, 6), float32],) */
}

def @func_14580() -> (Tensor[(16, 13, 14), bool],) {
  %1418 = fn () -> (Tensor[(16, 13, 14), bool],) {
    %1416 = @func_6272() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */;
    %1417 = %1416.1;
    (%1417,)
  };
  %1418() /* ty=(Tensor[(16, 13, 14), bool],) */
}

def @func_2587() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1423 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1419 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1420 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
    %1421 = %1419.1;
    %1422 = %1420.1;
    (%1421, %1422)
  };
  %1423() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_11436() -> (Tensor[(16, 13, 14), uint16],) {
  %1424 = @func_900() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1424,)
}

def @func_1874() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1425 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1426 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1427 = @func_1687() /* ty=(Tensor[(16, 13, 14), bool],) */;
  %1428 = @func_175() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1429 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1430 = %1425.2;
  %1431 = %1426.0;
  %1432 = %1427.0;
  %1433 = %1428.0;
  %1434 = %1429.0;
  (%1430, %1431, %1432, %1433, %1434)
}

def @func_12032(%var_12030: Tensor[(10, 15, 10), float32], %var_12031: Tensor[(10, 15, 10), float32]) -> (Tensor[(10, 15, 10), float32], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(10, 15, 10), uint32], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) {
  @func_12028(%var_12030, %var_12031) /* ty=(Tensor[(10, 15, 10), float32], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(10, 15, 10), uint32], Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16]) */
}

def @func_10154() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1435 = @func_2473() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1436 = @func_2803() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1437 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1438 = @func_8635() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16]) */;
  %1439 = %1435.0;
  %1440 = %1436.0;
  %1441 = @func_7696() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1442 = %1437.3;
  %1443 = %1438.1;
  (%1439, %1440, %1441, %1442, %1443)
}

def @func_12764() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1444 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1445 = @func_588() /* ty=Tensor[(16, 13, 14), uint16] */;
  %1446 = %1444.0;
  (%1445, %1446)
}

def @func_890() -> (Tensor[(16, 13, 14), uint16],) {
  @func_888() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_142() -> Tensor[(16, 13, 14), uint16] {
  @func_140() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_13833() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1447 = @func_6213() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1448 = @func_10386() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1449 = @func_1522() /* ty=(Tensor[(?, 2, 15), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1450 = %1447.0;
  %1451 = %1448.1;
  %1452 = %1449.3;
  (%1450, %1451, %1452)
}

def @func_6760(%var_6758: Tensor[(6, 11, 11), float32]) -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(6, 11, 11), float32], Tensor[(6, 11, 11), bool], Tensor[(16, 13, 14), uint16]) {
  @func_6757(%var_6758) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(6, 11, 11), float32], Tensor[(6, 11, 11), bool], Tensor[(16, 13, 14), uint16]) */
}

def @func_8986(%var_8984: Tensor[(50, 2), float64]) -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(50, 2), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_8983(%var_8984) /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(50, 2), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_4013(%var_4011: Tensor[(350), uint32], %var_4012: Tensor[(294), float64]) -> (Tensor[(16, 13, 14), uint16], Tensor[(10, 5, 7), uint32], Tensor[(350), uint32], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) {
  @func_4009(%var_4011, %var_4012) /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(10, 5, 7), uint32], Tensor[(350), uint32], Tensor[(16, 13, 14), uint16], Tensor[(294), float64]) */
}

def @func_8683() -> (Tensor[(16, 13, 14), uint16],) {
  @func_8681() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_4215() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], uint64) {
  @func_4213() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], uint64) */
}

def @func_2424(%var_2422: Tensor[(12, 16, 12), uint8], %var_2423: Tensor[(12, 16, 12), float64]) -> (Tensor[(12, 16, 12), uint8], Tensor[(16, 13, 14), uint16], Tensor[(12, 16, 12), bool]) {
  @func_2420(%var_2422, %var_2423) /* ty=(Tensor[(12, 16, 12), uint8], Tensor[(16, 13, 14), uint16], Tensor[(12, 16, 12), bool]) */
}

def @func_7594() -> (Tensor[(16, 13, 14), uint16],) {
  %1455 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %1453 = @func_7305() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1454 = %1453.0;
    (%1454,)
  };
  %1455() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_10874() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1456 = @func_9047() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(9, 9, 14), float64], Tensor[(16, 13, 14), uint16]) */;
  %1457 = @func_6213() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1458 = %1456.0;
  %1459 = %1457.2;
  (%1458, %1459)
}

def @func_13069() -> (Tensor[(16, 13, 14), uint16],) {
  %1460 = @func_12951() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1461 = %1460.0;
  (%1461,)
}

def @func_5500() -> (Tensor[(16, 13, 14), uint16],) {
  %1464 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %1462 = @func_849() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1463 = %1462.0;
    (%1463,)
  };
  %1464() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_6612() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1470 = fn () -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1465 = @func_252() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1466 = @func_2067() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1467 = @func_5211() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1468 = %1465.0;
    %1469 = %1466.0;
    (%1467, %1468, %1469)
  };
  %1470() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_13947() -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1477 = fn () -> (Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
    %1471 = @func_2348() /* ty=(Tensor[(16, 13, 14), bool],) */;
    %1472 = @func_5651() /* ty=(Tensor[(16, 13, 14), uint16],) */;
    %1473 = %1471.0;
    %1474 = @func_12550() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1475 = @func_5584() /* ty=Tensor[(16, 13, 14), uint16] */;
    %1476 = %1472.0;
    (%1473, %1474, %1475, %1476)
  };
  %1477() /* ty=(Tensor[(16, 13, 14), bool], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_7286() -> (Tensor[(16, 13, 14), uint16],) {
  %1479 = fn () -> (Tensor[(16, 13, 14), uint16],) {
    %1478 = @func_1080() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1478,)
  };
  %1479() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

def @func_1219() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  %1480 = @func_620() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1481 = @func_425() /* ty=(Tensor[(16, 13, 14), uint16],) */;
  %1482 = %1480.0;
  %1483 = %1481.0;
  (%1482, %1483)
}

def @func_12172() -> (Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) {
  @func_12170() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */
}

def @func_4532() -> Tensor[(16, 13, 14), uint16] {
  %1485 = fn () -> Tensor[(16, 13, 14), uint16] {
    %1484 = @func_3180() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), float32]) */;
    %1484.0
  };
  %1485() /* ty=Tensor[(16, 13, 14), uint16] */
}

def @func_4993(%var_4992: Tensor[(16, 9, 10), uint64]) -> (Tensor[(16, 9, 10), uint8], Tensor[(16, 13, 14), uint16]) {
  %1497 = fn (%var_4968: Tensor[(16, 9, 10), uint64]) -> (Tensor[(16, 9, 10), uint8], Tensor[(16, 13, 14), uint16]) {
    %1486 = cast(%var_4968, dtype="uint64") /* ty=Tensor[(16, 9, 10), uint64] */;
    %1487 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(16, 9, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1488 = cast(meta[relay.Constant][46] /* ty=Tensor[(16, 9, 10), uint64] */, dtype="uint64") /* ty=Tensor[(16, 9, 10), uint64] */;
    %1489 = dyn.reshape(%1486, %1487, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1490 = subtract(%1488, %1489) /* ty=Tensor[(16, 9, 10), uint64] */;
    %1491 = cast(%var_4968, dtype="uint8") /* ty=Tensor[(16, 9, 10), uint8] */;
    %1492 = shape_of(%1490, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1493 = cast(%1490, dtype="uint8") /* ty=Tensor[(16, 9, 10), uint8] */;
    %1494 = dyn.reshape(%1491, %1492, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1495 = left_shift(%1493, %1494) /* ty=Tensor[(16, 9, 10), uint8] */;
    %1496 = @func_900() /* ty=Tensor[(16, 13, 14), uint16] */;
    (%1495, %1496)
  };
  %1497(%var_4992) /* ty=(Tensor[(16, 9, 10), uint8], Tensor[(16, 13, 14), uint16]) */
}

def @func_9994() -> (Tensor[(16, 13, 14), uint16],) {
  %1498 = @func_2552() /* ty=Tensor[(16, 13, 14), uint16] */;
  (%1498,)
}

def @func_16303() -> (Tensor[(16, 13, 14), uint16],) {
  %1499 = @func_1431() /* ty=(Tensor[(16, 13, 14), float64], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16]) */;
  %1500 = %1499.1;
  (%1500,)
}

def @func_11949() -> Tensor[(16, 13, 14), bool] {
  %1502 = fn () -> Tensor[(16, 13, 14), bool] {
    %1501 = @func_3026() /* ty=(Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), uint16], Tensor[(16, 13, 14), bool]) */;
    %1501.3
  };
  %1502() /* ty=Tensor[(16, 13, 14), bool] */
}

def @func_12435() -> (Tensor[(16, 13, 14), uint16],) {
  @func_12433() /* ty=(Tensor[(16, 13, 14), uint16],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen302/build/output.py:5771: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen302/build/output.py", line 5776, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(91) tvmgen_default_fused_exp_kernel0(float* __restrict__ T_exp, float* __restrict__ placeholder) {
  T_exp[(((int)threadIdx.x))] = __expf(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_225 = relay.var("var_225", dtype = "float64", shape = ())#candidate|225|()|var|float64
var_226 = relay.var("var_226", dtype = "float64", shape = (8, 14, 1))#candidate|226|(8, 14, 1)|var|float64
bop_227 = relay.subtract(var_225.astype('float64'), var_226.astype('float64')) # shape=(8, 14, 1)
bop_250 = relay.floor_divide(var_225.astype('float32'), bop_227.astype('float32')) # shape=(8, 14, 1)
output = bop_250
output2 = bop_250
func_275 = relay.Function([var_225,var_226,], output)
mod['func_275'] = func_275
mod = relay.transform.InferType()(mod)
mutated_mod['func_275'] = func_275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_275_call = mutated_mod.get_global_var('func_275')
var_277 = relay.var("var_277", dtype = "float64", shape = ())#candidate|277|()|var|float64
var_278 = relay.var("var_278", dtype = "float64", shape = (8, 14, 1))#candidate|278|(8, 14, 1)|var|float64
call_276 = func_275_call(var_277,var_278,)
output = call_276
func_279 = relay.Function([var_277,var_278,], output)
mutated_mod['func_279'] = func_279
mutated_mod = relay.transform.InferType()(mutated_mod)
var_588 = relay.var("var_588", dtype = "uint8", shape = (9, 11, 14))#candidate|588|(9, 11, 14)|var|uint8
const_589 = relay.const([[[-8,-7,-4,9,-10,8,-2,4,-4,-5,6,5,-2,2],[9,-7,7,-9,2,-8,1,-2,-9,-6,-7,3,4,-1],[-7,4,-9,3,4,4,2,-8,-8,-5,9,1,6,-9],[-1,7,-5,8,-1,-9,-6,2,-7,-2,1,1,1,-7],[-7,7,7,10,4,-8,-8,9,2,-2,2,-3,3,2],[-7,1,5,3,-2,6,10,1,2,2,3,-10,-9,-7],[-6,-6,-8,-8,7,-7,-2,-6,-8,10,1,4,9,-9],[9,-1,-7,-10,8,-1,9,5,-10,4,10,-10,10,-4],[-9,7,3,3,-7,-8,-10,9,5,-3,-8,7,-2,8],[-2,-1,9,9,8,-3,-4,9,8,-5,5,-1,4,-1],[-4,10,-5,-7,1,-8,7,-3,2,6,3,4,1,8]],[[-1,4,10,-1,7,9,1,6,-9,-10,-2,-1,-10,-2],[10,8,1,-9,8,-7,-8,-4,6,-9,-10,5,5,-6],[3,-6,9,6,-8,2,5,-2,6,3,7,-8,-1,8],[1,3,-3,8,-4,4,9,9,-5,-8,8,-4,5,9],[-7,4,-2,-3,-5,-9,-5,-3,8,10,-3,-4,-10,-4],[-10,-1,-4,4,-9,3,10,-4,-4,1,7,5,10,10],[8,4,-1,-7,-9,10,-8,5,2,4,4,-10,-7,-2],[-2,8,10,-10,-7,5,7,-8,-6,-4,-10,-6,4,-9],[1,-9,-6,5,-8,-7,1,3,-7,5,-1,2,9,-8],[-6,-3,10,9,8,-2,-10,-3,2,1,6,3,-6,1],[-4,8,7,8,5,3,-3,2,-7,4,-1,-9,2,-6]],[[-6,2,7,-4,1,-2,-9,-10,10,-6,4,-6,-7,-2],[8,7,-5,6,9,6,9,-8,3,-3,-9,1,10,-10],[4,-4,-2,-8,10,-10,-3,-2,-4,-3,10,1,-4,5],[-2,1,-1,-10,-7,-1,-2,7,9,8,-2,2,8,3],[8,5,7,7,10,2,-6,4,5,-3,-5,-10,1,-10],[5,-10,3,4,3,7,-9,-1,-5,-2,10,-7,-6,3],[6,8,-7,6,-6,-10,-2,-10,-8,-5,-10,3,4,-5],[4,-8,1,4,4,8,10,7,-6,2,-2,7,8,3],[2,2,6,-8,8,7,-4,2,-4,8,9,-6,-9,-4],[4,8,-5,-4,10,10,-6,10,3,-5,-2,-8,3,4],[6,-10,7,-8,6,-3,-4,2,1,1,5,-2,-9,10]],[[4,-3,-5,-3,-10,-3,5,-1,-3,10,-7,10,6,-9],[-4,-6,-4,-1,1,1,8,-8,-2,-3,-5,8,5,4],[-2,6,-3,-4,-1,-7,-10,-6,2,1,-4,-6,-7,-9],[-2,4,7,10,10,8,-1,-6,3,1,-5,-7,7,5],[8,8,8,-4,2,6,9,3,-9,5,10,-7,-8,-1],[-8,3,-10,-5,-3,-5,4,6,5,7,10,-6,-8,5],[-9,-3,5,-2,6,-5,-10,-3,2,-10,-1,-1,-7,-3],[-1,-2,-7,7,10,-8,1,-5,-6,3,-8,-6,-10,-9],[-5,-3,-3,7,2,5,-5,8,8,5,2,3,3,-8],[-6,9,1,8,-8,7,8,2,5,-9,5,-9,2,-8],[1,7,5,9,-9,-2,-3,-7,-9,4,10,6,-7,-4]],[[-7,5,8,-7,1,9,-4,-9,9,8,4,3,7,-9],[6,-5,-6,3,4,7,8,7,8,-1,-1,-7,2,1],[3,4,-3,-4,-9,3,9,-9,7,-10,-2,-1,3,2],[-2,-5,-2,2,-7,-4,-5,10,-6,-10,-4,7,-5,-3],[-8,2,-7,-3,-5,4,-3,-8,5,2,-6,-4,5,10],[-10,6,7,8,-6,-1,-7,-5,-3,-9,-1,-2,3,9],[7,-8,2,5,-4,1,3,5,1,2,-2,-4,4,-10],[-2,-5,-8,-6,-8,10,-5,6,-5,7,10,9,2,5],[-9,-3,3,10,2,2,8,-6,2,-8,-2,2,8,-5],[7,4,-4,9,-6,9,-4,10,10,4,7,-1,-10,-2],[-6,-7,-7,-9,10,10,-6,6,9,-3,-1,3,8,8]],[[6,-6,-6,-5,6,6,3,-5,-5,10,-6,-5,9,-6],[1,-7,-3,9,-6,4,10,9,8,-2,-5,-6,-7,-8],[8,-5,8,-8,-5,-2,-3,4,-10,7,-6,-8,-5,-4],[7,9,5,-6,8,-6,5,5,-6,-1,1,-2,-1,10],[7,8,-5,9,5,-3,-1,5,6,-4,-8,-7,-5,5],[-1,3,8,-10,-10,-3,6,7,6,3,-3,-4,-2,-9],[-2,-4,-1,1,-8,-2,-1,3,-2,5,4,8,5,-8],[5,-5,-2,-1,5,2,-4,2,-9,5,5,9,-1,5],[-1,4,-10,4,-9,-5,-7,-8,1,-8,-4,4,-4,9],[10,-1,8,-8,6,10,-4,-10,2,-4,7,-5,-5,-10],[-2,6,4,-4,5,-3,-3,-6,10,10,1,6,5,1]],[[-10,3,-2,3,-8,-8,-10,-4,4,10,4,-7,-3,7],[4,-10,-8,4,1,6,6,-10,7,-9,-4,4,-10,-6],[-3,1,-10,-2,3,10,5,3,10,-8,-7,-7,-8,2],[-3,1,1,5,-4,-2,3,2,8,1,-9,6,-8,9],[-7,3,9,-7,-5,-6,9,7,9,-2,-5,6,2,9],[4,-5,9,10,2,-10,2,-8,-5,-5,-4,-1,7,-10],[7,8,-7,4,-3,-6,6,1,-4,-10,-4,1,-1,-7],[-10,-7,8,10,-10,-1,-1,-7,-5,-4,7,-5,-9,9],[1,-8,4,-9,3,-10,-6,-8,-10,-3,-3,-1,10,-1],[4,-7,-5,7,-10,-4,8,8,6,2,-2,8,-1,-8],[-5,-10,-9,6,-3,7,-9,-8,4,-10,3,6,-6,-1]],[[-3,8,7,9,-8,-2,-5,-6,-10,9,2,4,-1,1],[5,4,10,-8,-3,-1,-9,4,1,-6,4,-5,-9,2],[-1,7,2,6,7,-8,-10,-1,-3,-2,-5,-3,6,-5],[-7,4,7,-6,5,2,-5,-2,9,-3,-10,-7,3,-6],[-8,-5,10,-4,3,8,1,9,10,4,-9,-4,-2,-6],[10,6,-4,2,-10,-3,-6,10,10,-7,5,4,8,2],[6,7,-1,4,3,1,4,-8,-4,-10,-10,-9,-10,-8],[8,8,-10,-1,-7,-8,3,-6,3,7,-4,4,-6,8],[5,-4,-6,8,-5,-6,-6,-5,-6,-5,-6,-8,3,-4],[-4,-5,-10,3,-1,-1,2,1,4,6,-6,10,-7,-2],[-2,-9,1,-7,-5,7,1,-4,-7,-8,2,2,-9,2]],[[3,-4,10,-3,-9,2,-3,10,6,5,-3,-4,-1,5],[-1,5,10,-2,5,9,-8,-6,9,4,-3,7,-6,-1],[9,6,-2,7,10,-2,5,-7,-4,5,-2,-7,10,9],[8,2,7,-9,-8,-10,-4,-5,6,3,6,1,8,3],[5,3,-3,9,2,-10,4,1,2,8,-8,8,-10,-2],[-9,6,8,-5,2,-10,4,7,9,8,1,-1,-9,-5],[-8,-7,3,-10,1,-1,-1,-9,2,-5,-3,-6,8,-5],[8,8,-6,-4,-8,-9,10,-4,-4,8,-9,9,-7,-8],[4,-4,3,8,-4,-8,5,-1,-9,7,-10,-9,1,2],[-5,-3,-4,-9,6,4,-8,-4,2,-1,2,6,5,10],[-7,4,-1,-9,1,-1,5,-10,-10,9,2,6,-8,-6]]], dtype = "uint8")#candidate|589|(9, 11, 14)|const|uint8
bop_590 = relay.minimum(var_588.astype('uint8'), relay.reshape(const_589.astype('uint8'), relay.shape_of(var_588))) # shape=(9, 11, 14)
output = relay.Tuple([bop_590,])
output2 = relay.Tuple([bop_590,])
func_597 = relay.Function([var_588,], output)
mod['func_597'] = func_597
mod = relay.transform.InferType()(mod)
mutated_mod['func_597'] = func_597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_598 = relay.var("var_598", dtype = "uint8", shape = (9, 11, 14))#candidate|598|(9, 11, 14)|var|uint8
func_597_call = mutated_mod.get_global_var('func_597')
call_599 = func_597_call(var_598)
output = call_599
func_600 = relay.Function([var_598], output)
mutated_mod['func_600'] = func_600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_697 = relay.var("var_697", dtype = "float64", shape = (10, 6, 4))#candidate|697|(10, 6, 4)|var|float64
uop_698 = relay.sin(var_697.astype('float64')) # shape=(10, 6, 4)
output = relay.Tuple([uop_698,])
output2 = relay.Tuple([uop_698,])
func_706 = relay.Function([var_697,], output)
mod['func_706'] = func_706
mod = relay.transform.InferType()(mod)
mutated_mod['func_706'] = func_706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_707 = relay.var("var_707", dtype = "float64", shape = (10, 6, 4))#candidate|707|(10, 6, 4)|var|float64
func_706_call = mutated_mod.get_global_var('func_706')
call_708 = func_706_call(var_707)
output = call_708
func_709 = relay.Function([var_707], output)
mutated_mod['func_709'] = func_709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_735 = relay.var("var_735", dtype = "float64", shape = (1, 16, 7))#candidate|735|(1, 16, 7)|var|float64
const_736 = relay.const([[[0.464183,-7.612384,0.228843,7.656821,-9.388555,8.871459,-8.899176],[4.035539,-6.544579,2.824616,7.132437,-6.962496,-8.237890,-8.171907],[-1.473886,-9.454107,-8.438639,1.338899,-6.396801,6.161374,9.964196],[-4.176364,-6.583324,4.368749,8.154124,-5.271669,-7.730173,5.379809],[5.195988,2.028888,-0.285223,-8.161918,6.985385,-5.624449,-3.331473],[-8.901732,-0.254619,-6.246524,-0.930967,-7.499081,-9.352436,8.978974],[5.661557,2.219611,-8.096169,-1.141956,-0.119125,5.576065,-4.366053],[-1.379029,8.354719,-0.673228,6.140836,-2.600916,4.628921,7.924756],[4.612058,-8.111687,4.909271,1.236223,5.786044,-7.719435,-7.405987],[8.542196,4.099698,-3.350624,-2.754027,5.508106,7.620607,-8.209366],[-5.083216,-5.759452,-9.975963,-9.873102,-6.935741,8.733788,5.903450],[6.141201,9.133775,-5.988820,-7.270664,0.047153,-1.188817,-6.910903],[-4.010320,-3.945443,-3.943188,-8.075156,0.343285,7.215117,-0.291454],[7.589351,-8.709667,-5.699999,8.717500,2.537868,0.468956,8.954694],[0.852402,0.214428,-9.954624,-9.198594,-6.223756,6.490492,9.327661],[6.895466,1.866260,1.337559,8.329551,0.611480,-4.777398,5.851753]],[[1.954522,7.306132,-6.969633,-3.639605,-7.218721,-5.596318,5.851309],[3.170415,-4.391931,-5.235852,4.801046,6.219260,6.261736,-6.869261],[6.155341,5.822737,-9.866493,0.010139,3.671916,7.734037,-3.702763],[-7.161204,7.008616,-0.027946,-3.525457,4.395288,-2.122661,2.288240],[9.865505,-7.745350,0.730416,7.522548,-5.669601,-2.613387,-8.239533],[-5.974449,7.501283,-9.941214,-9.865232,-7.298091,6.879869,-7.794333],[4.256051,-4.535766,9.530600,7.400158,-9.428811,-0.304756,-1.026830],[2.148724,-3.273206,5.071452,-7.442431,-8.194175,1.082880,-6.248309],[-6.364435,-4.768115,-7.496728,-5.845206,2.561591,-6.005897,-1.217501],[8.123671,3.534128,9.000285,-2.846192,-3.440776,-9.603203,2.860836],[0.279410,6.092594,-9.800576,5.520231,-3.844560,9.256978,-7.979732],[5.884881,-2.553927,6.641395,7.757670,-6.200997,7.165473,4.609330],[1.168353,9.107876,-2.781310,9.499866,3.831095,6.913019,-9.699938],[2.886679,-9.252797,-7.344096,2.905828,-2.089945,-2.151816,-5.988300],[4.212464,-8.830572,-5.900646,-6.798543,-3.979718,-6.232394,-8.578614],[6.425053,-2.881888,4.174107,9.783595,6.829706,0.930585,-8.491730]],[[-6.498652,-3.218136,-5.362654,2.931691,-8.167171,3.955369,7.405828],[-9.537693,6.405209,-2.988976,4.768432,-9.043539,7.074164,5.462120],[2.593870,7.201543,6.486693,-6.628827,-3.455880,-4.502856,1.653863],[4.098511,3.210472,-3.094922,0.537232,-7.654645,1.076734,2.513693],[1.495346,4.513595,-4.505230,-8.053018,-3.602623,7.692690,-9.458002],[-3.623960,4.348869,-9.576395,4.343000,2.103633,-4.964228,8.066865],[-7.200486,-1.771387,-8.697579,7.458737,-3.962326,-3.543086,-7.246153],[0.589699,8.510805,-2.423368,6.091100,-4.788648,2.336776,0.130893],[7.753850,6.854595,-1.719274,4.502117,-9.221203,1.319377,0.517480],[4.065978,-9.269962,-9.382626,-6.487847,-5.942611,-3.837204,7.116874],[4.808948,5.228718,6.335566,-8.866969,-1.099160,-6.506905,-7.916409],[-3.950021,2.145512,3.771955,-5.271871,-8.660527,-8.033647,6.859602],[3.042794,4.515055,1.705219,2.933960,4.001332,-4.595092,-8.485807],[-9.280031,7.180922,-7.936383,0.168852,-5.396140,2.045458,-6.537317],[2.636781,-3.899133,-9.321472,2.101304,-2.591794,8.439820,4.453098],[-7.640191,-0.148525,-1.841813,4.195064,9.592578,0.534252,-1.477074]],[[-3.371425,-6.952635,-2.328614,-3.412619,-2.416366,4.870902,-3.390935],[4.402028,-2.913380,9.371393,-0.376561,-3.676088,-9.586077,-4.535397],[7.752551,8.439613,-2.840030,-6.915294,-0.173257,7.239212,-7.667572],[-6.516847,9.879964,-1.770689,7.251834,4.546251,-2.015460,6.395062],[0.077367,-9.774436,-7.983853,-4.716300,6.006113,-3.920266,2.364697],[9.178918,-4.771809,-9.259644,2.639765,4.688251,3.142429,-7.413285],[9.058396,-5.960837,-5.797652,9.763465,-2.046193,6.282352,-7.740758],[-0.474609,2.847365,-2.505173,6.847285,-4.884662,5.337356,6.486422],[-7.819987,-0.029441,6.507713,-4.318587,3.839309,-7.351307,1.881426],[-6.997091,3.641630,7.259047,-3.610975,-1.910217,-2.396098,-3.527387],[5.896506,-4.590299,4.625653,2.570610,-1.003080,-6.223146,9.773835],[0.278164,-8.227882,0.374254,-8.426506,9.857161,-2.951447,-2.320031],[-2.384613,-6.586713,-6.433898,2.822684,-6.499605,-8.291243,-5.775159],[-3.638867,-5.945278,-2.196444,0.997830,-2.055102,-2.154433,-4.953800],[-7.737517,9.399472,3.490176,-8.063139,4.473671,-6.832593,-3.337025],[-1.905716,5.166299,-9.898307,-9.552929,3.940453,-3.116774,-2.615600]],[[2.982421,0.842294,0.817112,-2.171015,1.035400,7.824744,-5.244124],[-1.951369,-6.470207,6.527727,5.510238,4.305334,-7.409696,-6.984400],[2.753144,0.401054,3.991216,-1.432178,9.160919,-3.147656,0.093644],[3.743887,7.826861,-3.107049,-1.806998,9.519661,9.355626,-2.389446],[4.137762,7.676186,7.411303,5.221688,6.688673,1.654108,-6.558052],[4.011160,2.811097,1.633116,-5.029605,2.850577,2.967308,7.993940],[3.106236,-3.053247,-5.312190,7.112819,-7.013836,-2.374241,-3.217020],[1.430150,8.772813,-4.386038,9.807161,5.125023,1.257930,3.379461],[-4.996449,-5.120224,-4.357284,-8.646003,-1.505522,-7.631418,4.909491],[-6.574366,-1.849112,-2.664157,4.740777,7.184278,4.329599,-7.154239],[0.312268,1.853080,-0.880995,3.297037,9.426515,6.907502,-5.830914],[-0.504024,4.929875,4.273337,-7.328369,3.697059,0.977188,3.735156],[-6.198800,9.681346,3.620536,6.869129,-4.336915,-2.629524,-1.175611],[8.577114,2.870438,-8.428541,0.297313,-9.497376,-2.998497,8.003018],[-9.245678,-9.079060,-3.277510,-5.926240,-2.866805,-9.977782,0.574241],[-3.442240,-6.285578,-6.140109,-1.827973,-7.703223,-2.011576,4.845452]],[[8.849704,-2.632526,3.036052,-6.608490,6.509762,8.404475,-9.495823],[-3.388164,-6.650221,9.654581,7.958894,-3.020050,3.862473,7.397444],[-3.762359,-5.468377,9.482335,7.517417,8.064396,-3.200489,0.728221],[-9.169772,6.247472,6.706555,-0.394416,1.487331,-1.575805,9.039346],[-3.951992,5.942950,3.672976,-9.015232,4.915956,-0.303756,6.659498],[5.765416,-3.113277,-6.874475,-4.694364,-7.708225,1.570204,-2.282100],[4.685647,7.717628,-4.781821,-8.678600,-4.855190,-4.150247,1.006892],[-6.237881,-1.573739,1.998911,2.609568,-4.769246,3.493512,-9.148004],[-0.923147,-0.310639,-1.505456,-6.660513,-3.642794,8.837351,5.099655],[-1.695718,-3.990233,-6.598931,-3.693535,4.654537,1.134998,-0.467467],[-9.672643,7.301915,3.820920,0.179372,0.208661,3.795295,-8.489321],[-7.488299,-9.799812,-7.864250,2.739213,1.640406,-2.198702,-3.569312],[9.412445,-9.436782,0.135937,-6.295087,8.121375,3.470362,8.746531],[3.719124,7.958431,-4.447738,-8.516923,-7.474950,2.377621,-3.006759],[-6.672094,7.017596,3.552374,-7.422356,-5.503826,4.742505,-4.393499],[-4.157926,2.064827,1.544836,-5.412175,2.430640,5.183897,-9.023542]]], dtype = "float64")#candidate|736|(6, 16, 7)|const|float64
bop_737 = relay.divide(var_735.astype('float64'), const_736.astype('float64')) # shape=(6, 16, 7)
uop_740 = relay.sigmoid(const_736.astype('float64')) # shape=(6, 16, 7)
output = relay.Tuple([bop_737,uop_740,])
output2 = relay.Tuple([bop_737,uop_740,])
func_742 = relay.Function([var_735,], output)
mod['func_742'] = func_742
mod = relay.transform.InferType()(mod)
var_743 = relay.var("var_743", dtype = "float64", shape = (1, 16, 7))#candidate|743|(1, 16, 7)|var|float64
output = func_742(var_743)
func_744 = relay.Function([var_743], output)
mutated_mod['func_744'] = func_744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_766 = relay.var("var_766", dtype = "int8", shape = (13, 3, 3))#candidate|766|(13, 3, 3)|var|int8
var_767 = relay.var("var_767", dtype = "int8", shape = (13, 3, 3))#candidate|767|(13, 3, 3)|var|int8
bop_768 = relay.bitwise_or(var_766.astype('int8'), relay.reshape(var_767.astype('int8'), relay.shape_of(var_766))) # shape=(13, 3, 3)
bop_771 = relay.floor_mod(var_767.astype('float64'), relay.reshape(bop_768.astype('float64'), relay.shape_of(var_767))) # shape=(13, 3, 3)
func_706_call = mod.get_global_var('func_706')
func_709_call = mutated_mod.get_global_var('func_709')
var_777 = relay.var("var_777", dtype = "float64", shape = (240,))#candidate|777|(240,)|var|float64
call_776 = relay.TupleGetItem(func_706_call(relay.reshape(var_777.astype('float64'), [10, 6, 4])), 0)
call_778 = relay.TupleGetItem(func_709_call(relay.reshape(var_777.astype('float64'), [10, 6, 4])), 0)
func_275_call = mod.get_global_var('func_275')
func_279_call = mutated_mod.get_global_var('func_279')
var_794 = relay.var("var_794", dtype = "float64", shape = ())#candidate|794|()|var|float64
const_795 = relay.const([[-2.511040,-5.606286],[-2.284552,-5.354505],[3.133559,4.225442],[-3.559923,2.418285],[-8.383116,1.475177],[6.654713,-2.342895],[6.007663,0.548418],[-4.670228,0.884127],[1.405702,9.830829],[-8.301123,3.153918],[9.613398,-1.848492],[-3.572652,-3.426314],[5.647228,-9.971200],[-8.910318,-4.817908],[-0.389387,-0.669299],[4.184128,5.942665],[7.117388,-1.836646],[-2.439787,4.546356],[-3.606643,0.835687],[0.819390,3.458550],[-3.790385,1.925925],[7.406204,-3.845845],[1.587944,-7.535247],[-4.781840,-1.640467],[-5.854268,6.938352],[-2.789467,-8.154663],[0.299374,6.126458],[7.928175,5.676851],[-2.581365,-2.582058],[0.491345,6.699266],[8.797825,4.300439],[-1.104794,3.639861],[-2.451891,5.027776],[5.910733,-1.283584],[-6.329130,-4.268188],[-3.591761,3.502667],[-4.518168,-3.925557],[-0.346025,9.831305],[3.144802,0.444001],[-4.062417,-3.284230],[9.519847,9.413269],[6.289698,2.013289],[2.637945,6.550820],[-0.523746,0.751836],[5.927589,-3.634519],[6.761215,2.497267],[-6.835993,-2.106496],[-4.338294,6.223620],[4.848582,-4.116572],[-6.088743,-7.170168],[1.681924,-5.603244],[-0.514168,5.328398],[4.183666,5.730301],[9.533852,-8.739693],[6.454350,-2.705357],[2.911186,2.084737]], dtype = "float64")#candidate|795|(56, 2)|const|float64
call_793 = func_275_call(relay.reshape(var_794.astype('float64'), []), relay.reshape(const_795.astype('float64'), [8, 14, 1]), )
call_796 = func_275_call(relay.reshape(var_794.astype('float64'), []), relay.reshape(const_795.astype('float64'), [8, 14, 1]), )
var_810 = relay.var("var_810", dtype = "float64", shape = (10, 6, 4))#candidate|810|(10, 6, 4)|var|float64
bop_811 = relay.floor_divide(call_776.astype('float32'), relay.reshape(var_810.astype('float32'), relay.shape_of(call_776))) # shape=(10, 6, 4)
bop_814 = relay.floor_divide(call_778.astype('float32'), relay.reshape(var_810.astype('float32'), relay.shape_of(call_778))) # shape=(10, 6, 4)
uop_817 = relay.log2(bop_811.astype('float64')) # shape=(10, 6, 4)
uop_819 = relay.log2(bop_814.astype('float64')) # shape=(10, 6, 4)
output = relay.Tuple([bop_771,var_777,call_793,var_794,const_795,uop_817,])
output2 = relay.Tuple([bop_771,var_777,call_796,var_794,const_795,uop_819,])
func_832 = relay.Function([var_766,var_767,var_777,var_794,var_810,], output)
mod['func_832'] = func_832
mod = relay.transform.InferType()(mod)
mutated_mod['func_832'] = func_832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_832_call = mutated_mod.get_global_var('func_832')
var_834 = relay.var("var_834", dtype = "int8", shape = (13, 3, 3))#candidate|834|(13, 3, 3)|var|int8
var_835 = relay.var("var_835", dtype = "int8", shape = (13, 3, 3))#candidate|835|(13, 3, 3)|var|int8
var_836 = relay.var("var_836", dtype = "float64", shape = (240,))#candidate|836|(240,)|var|float64
var_837 = relay.var("var_837", dtype = "float64", shape = ())#candidate|837|()|var|float64
var_838 = relay.var("var_838", dtype = "float64", shape = (10, 6, 4))#candidate|838|(10, 6, 4)|var|float64
call_833 = func_832_call(var_834,var_835,var_836,var_837,var_838,)
output = call_833
func_839 = relay.Function([var_834,var_835,var_836,var_837,var_838,], output)
mutated_mod['func_839'] = func_839
mutated_mod = relay.transform.InferType()(mutated_mod)
var_960 = relay.var("var_960", dtype = "float64", shape = (3, 2, 2))#candidate|960|(3, 2, 2)|var|float64
uop_961 = relay.cos(var_960.astype('float64')) # shape=(3, 2, 2)
bop_964 = relay.bitwise_and(var_960.astype('int8'), relay.reshape(uop_961.astype('int8'), relay.shape_of(var_960))) # shape=(3, 2, 2)
output = bop_964
output2 = bop_964
func_967 = relay.Function([var_960,], output)
mod['func_967'] = func_967
mod = relay.transform.InferType()(mod)
mutated_mod['func_967'] = func_967
mutated_mod = relay.transform.InferType()(mutated_mod)
var_968 = relay.var("var_968", dtype = "float64", shape = (3, 2, 2))#candidate|968|(3, 2, 2)|var|float64
func_967_call = mutated_mod.get_global_var('func_967')
call_969 = func_967_call(var_968)
output = call_969
func_970 = relay.Function([var_968], output)
mutated_mod['func_970'] = func_970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1253 = relay.var("var_1253", dtype = "int32", shape = (8, 10, 13))#candidate|1253|(8, 10, 13)|var|int32
const_1254 = relay.const([[[3,-2,9,8,-6,-5,8,-7,10,2,-2,8,-4],[10,10,-3,5,-9,5,8,-2,8,-10,-8,7,-10],[6,-10,-4,8,2,7,9,2,5,-5,4,-6,-8],[-5,-6,-4,2,-3,-4,-10,-4,-6,3,7,9,-5],[-7,5,5,10,4,-4,-8,3,-9,10,10,-8,-3],[10,-9,5,6,-9,2,2,3,-2,-4,3,-10,7],[-9,4,10,-4,-9,-4,10,5,3,6,5,7,5],[-3,4,-6,6,5,-3,6,-9,-8,4,-9,-5,2],[-6,-1,10,-7,-5,5,2,7,8,-9,4,6,-3],[6,3,-7,-7,-2,-2,9,-2,9,6,-1,-9,-3]],[[-10,-2,7,10,-4,-1,-7,7,-1,-9,5,-7,3],[-5,-10,7,9,-2,7,-8,-3,3,-1,-1,9,5],[9,-4,2,7,10,-10,3,-7,6,-1,-2,10,5],[6,-5,-7,-3,-5,10,6,5,-1,2,9,1,8],[4,-7,-1,-2,-3,9,2,2,-7,4,-8,2,-10],[7,-1,-5,5,4,6,-2,-7,-7,-8,-10,9,9],[-8,-5,-4,-10,-9,9,-8,8,1,4,-3,-6,2],[-8,-2,8,9,-8,8,-7,-4,9,-1,9,8,-1],[-6,4,3,-9,-8,-6,-10,8,-4,-5,5,-2,2],[10,5,-3,-6,-9,6,7,4,-10,10,4,-5,4]],[[-4,6,-8,-6,-8,3,5,-7,9,4,9,-10,4],[-5,-7,-8,-5,-7,-3,-5,-3,8,-10,8,1,7],[-7,-9,2,-9,2,10,-2,-8,1,7,-4,1,-10],[-7,4,-2,-10,-2,-6,-1,-8,4,7,6,-9,-3],[10,7,4,2,8,9,-5,-8,1,9,-10,1,9],[9,-2,9,6,-5,-1,-8,-3,5,-9,-10,4,-2],[-4,-6,-10,-1,7,8,7,6,2,-9,3,2,-8],[-2,2,1,-7,-9,1,-3,9,4,5,-7,3,2],[1,8,6,4,-4,-6,-1,1,-4,-10,6,-2,-3],[-7,-5,10,3,-7,-8,9,-5,6,-1,-10,1,-1]],[[-4,-9,-1,3,7,6,-1,-1,4,-4,6,-7,-7],[3,8,7,6,-9,4,5,-5,-3,3,-7,5,-8],[-1,7,3,-6,-3,-3,10,-8,-5,-6,-3,9,5],[5,-9,-1,7,10,10,-10,-10,-4,4,5,-4,-10],[-1,4,-6,6,-1,8,6,9,6,1,-10,-6,-6],[4,1,-6,2,8,1,7,-2,-10,-5,-4,-8,-6],[-9,-3,-1,-4,10,5,-4,-1,-9,-6,5,9,7],[-2,-10,3,9,6,-4,4,-2,5,-4,-10,-7,5],[-2,-6,8,6,-4,-7,7,-5,-4,3,8,2,6],[-6,-8,-9,-3,-3,-10,-9,8,-7,9,-7,1,-1]],[[-10,10,6,-9,4,7,2,10,-9,-6,7,3,7],[1,10,4,4,5,9,4,-3,-3,-3,7,-6,-10],[-8,10,-4,1,2,3,-1,-8,4,6,-7,4,-5],[-3,-4,3,7,-5,-4,-3,4,-4,6,-9,-6,-10],[5,-2,-5,-1,-7,10,6,2,-4,8,-3,-6,6],[1,-10,4,9,8,-2,-4,3,-2,-9,-1,-1,2],[-3,5,4,1,1,9,-5,3,-4,-6,-10,8,-5],[4,-9,-4,-5,-2,-6,-2,10,8,-6,3,-9,9],[-1,1,-7,4,1,8,8,6,-3,-3,-8,10,-6],[-6,-6,-4,-5,3,-10,-7,6,9,-5,9,1,-3]],[[-5,-3,-8,3,7,10,-4,1,1,-3,5,-2,6],[8,-3,6,-4,8,9,5,-1,-5,8,-7,8,-10],[3,-1,3,-4,-2,4,-1,-9,6,-6,9,-9,1],[-9,-7,10,-1,9,-4,-2,-5,-2,9,-7,-5,1],[6,2,8,-6,10,-7,1,-5,-2,9,3,6,-3],[8,-7,4,1,-3,-7,5,7,8,-9,10,10,-3],[-5,9,-3,7,-8,-7,5,7,9,9,4,-3,-10],[6,-6,-5,9,8,2,6,-4,-8,-3,3,5,-7],[7,1,4,-7,8,9,9,1,-3,-1,10,-8,-2],[-4,-2,5,-10,7,6,4,10,-3,-1,8,3,-10]],[[9,-5,-10,-10,-9,-10,-1,-3,-2,3,10,-9,-4],[4,-8,-2,6,-2,6,7,-6,6,-5,-6,-6,9],[9,-7,-6,-10,-7,5,-2,10,-8,-5,5,2,8],[6,-9,10,-4,-10,-7,-9,3,-10,1,-4,6,-1],[-1,-8,3,5,-1,-9,-1,5,7,4,8,-6,-1],[-7,-10,-7,-3,1,1,7,8,-4,3,7,-3,-4],[5,9,-2,5,5,4,7,4,-9,9,-7,8,-4],[1,-8,-8,7,-10,-4,-3,-7,6,4,1,1,3],[-2,-7,8,4,5,8,9,-10,-3,1,2,3,7],[9,3,-5,5,-1,-2,-8,9,8,5,3,3,-7]],[[1,-2,3,4,5,1,3,-4,9,9,-9,-7,7],[4,4,-8,1,-3,3,-10,-9,2,-3,5,8,9],[3,2,4,3,-7,-2,10,5,-5,4,4,-3,2],[-8,-6,-8,2,10,-7,-5,3,-5,5,6,2,3],[8,4,8,10,8,-2,7,-8,6,-9,5,9,3],[-1,9,-3,-1,-7,-9,-2,3,9,7,-4,-3,9],[-6,-9,8,-4,-3,4,-1,3,-7,9,9,2,5],[9,9,-7,8,2,3,1,-2,-10,-5,3,7,4],[9,-2,-1,4,10,-5,-5,-2,-4,6,7,8,-8],[6,4,1,-5,10,7,6,-5,-4,7,-1,-9,8]]], dtype = "int32")#candidate|1254|(8, 10, 13)|const|int32
bop_1255 = relay.left_shift(var_1253.astype('int32'), relay.reshape(const_1254.astype('int32'), relay.shape_of(var_1253))) # shape=(8, 10, 13)
func_597_call = mod.get_global_var('func_597')
func_600_call = mutated_mod.get_global_var('func_600')
const_1259 = relay.const([-6,5,8,4,5,-2,-9,-1,9,8,-10,9,5,-6,-4,-2,-9,10,6,-7,-7,4,-8,-8,-5,-9,3,5,-1,-4,5,5,-2,1,-1,1,-9,-4,9,6,-6,9,4,-9,4,-1,-9,10,3,1,2,-2,6,10,7,7,2,5,1,-2,-9,-1,1,-2,-5,-8,5,-1,-7,-4,6,8,-9,-5,-6,3,-2,-4,8,-9,8,-1,7,-6,3,-9,-3,-9,9,-3,3,-8,2,9,-7,2,-6,-10,7,9,6,-10,-6,-1,5,8,2,4,-8,-2,3,-2,-9,4,-8,5,-3,-5,4,-2,2,6,5,-7,-4,10,5,6,4,-9,3,8,-8,2,3,-2,5,-8,-9,3,-6,-9,-5,-6,-5,3,8,3,-6,-8,1,3,-8,-4,8,10,-2,-6,6,-8,-6,6,-4,-9,-3,9,-9,-10,5,-5,5,10,6,6,9,-10,7,-8,6,1,-6,-7,-5,1,-3,7,-2,5,3,10,7,7,-10,5,4,-9,-8,-3,-1,5,3,-2,-6,-4,10,5,6,3,8,-3,-4,1,7,5,10,-4,9,-9,2,-8,-7,-2,-4,10,1,-4,-8,-6,-1,-4,10,-4,-3,6,6,10,4,10,-4,-9,6,3,8,-8,2,-10,10,-1,-8,-8,8,10,7,9,-10,10,2,9,-5,-9,-9,-7,-6,9,5,10,5,-7,-2,8,7,-10,-3,10,-8,-3,9,-7,2,1,-5,-3,3,-5,-6,-8,10,3,9,-1,4,7,8,10,-1,-7,4,-7,8,1,-4,1,9,9,-7,8,-6,5,-8,-2,-8,5,9,-8,-3,-2,-9,3,7,9,-4,-5,1,-2,7,-10,-3,6,7,8,4,-9,3,5,5,3,-1,10,10,-3,-6,-3,-7,2,4,4,-1,3,6,-3,-9,2,7,-2,-4,4,-7,10,8,8,3,10,-4,8,-10,-4,-7,1,-8,1,-9,9,-3,-9,-2,-5,-8,9,-7,-5,7,-7,4,10,-10,-2,-9,-4,4,5,10,-1,4,-4,6,-9,-7,-1,4,-4,4,3,9,-6,-3,-8,-1,-3,10,8,-7,1,3,6,3,4,-6,-3,-6,-9,-1,2,-8,9,-2,-6,-3,-2,8,4,6,3,4,-6,-4,-9,-1,-7,6,7,-4,-5,-9,-3,-5,-10,-4,-2,6,1,2,-5,9,-2,-9,-2,-3,9,-6,-8,-1,1,-3,6,-10,1,4,-4,9,9,6,-2,8,10,-4,-4,-9,10,7,-1,-2,-6,-10,1,-6,-7,2,1,9,-6,10,-9,7,10,7,1,-6,8,-9,3,-1,-10,-10,-7,-2,3,4,-10,-3,-5,4,10,2,5,-8,7,-1,-4,-7,1,3,9,7,-8,-10,1,-10,-3,10,6,-10,-9,9,1,2,5,-7,-5,-6,5,8,9,10,2,1,9,-10,-2,2,7,7,-1,8,1,9,-9,3,-6,-3,-4,-6,-6,1,-7,3,-7,6,9,4,-8,-5,3,-7,10,9,4,6,4,-10,-10,-5,-7,5,-4,5,5,9,7,-8,7,10,-5,-3,-4,1,8,-1,6,-3,8,-2,-8,-10,8,10,7,9,8,2,7,-6,-9,1,6,8,2,6,3,-2,5,-8,-4,4,-1,4,2,-2,-10,8,9,-9,-6,-10,4,-9,8,1,6,-5,-4,2,10,6,-9,5,2,8,2,6,3,-5,7,-4,3,-10,8,-10,-6,-10,3,-4,3,3,-1,1,8,-5,-6,-8,8,-6,9,-9,-4,-1,-6,4,-6,-5,7,1,4,10,6,-8,7,-3,2,1,-2,-5,-7,6,-5,10,-8,7,8,-3,9,-1,7,-1,7,-7,6,5,-2,-9,-3,8,2,3,-5,6,-10,-10,-2,-8,-5,-8,-8,4,-6,-6,4,10,9,7,2,2,2,-2,3,3,-6,6,-4,3,-5,-8,-3,4,4,10,7,-1,-1,5,-3,-1,9,-3,10,-2,-7,2,3,-5,-9,4,-6,7,9,1,-10,1,2,2,-3,6,9,1,-6,-8,9,1,8,-3,7,9,10,7,-5,1,5,8,-5,-3,-5,-6,-2,10,-4,-9,10,-8,-7,10,4,-1,-1,3,8,-9,-7,-7,-1,-3,3,5,7,4,8,9,7,3,1,-6,-3,1,-9,1,9,-4,-5,6,2,-7,3,-4,-7,10,4,6,2,-7,8,-10,3,9,-3,-9,2,7,5,-8,10,-10,-8,2,-6,1,-1,2,7,2,-4,-6,1,6,7,-10,-3,-1,-9,-3,4,-10,6,-8,3,4,-5,8,6,-3,7,9,-8,-3,3,-3,-9,-1,6,8,3,9,-4,5,-8,-2,6,4,-10,-8,-2,-2,-5,-6,4,10,-7,5,-5,-1,1,-5,5,-8,8,-9,-10,-1,-4,5,10,7,-6,1,5,2,7,4,1,-6,9,-9,-6,3,7,10,-5,5,9,1,-7,-1,-2,-6,-6,-2,-10,3,1,-8,6,-6,-6,10,-8,-1,-6,1,7,1,-2,10,5,-9,-1,-7,-6,-8,5,-8,-1,-9,-3,-4,-8,6,9,-1,1,-1,9,-9,-10,-7,-5,9,6,-2,8,1,-1,5,7,4,-8,-2,4,1,-10,-10,-3,-10,5,-10,-8,-9,10,-2,-4,6,-3,8,-10,1,7,-7,-10,-7,-1,-10,-8,1,-4,8,9,-1,-2,2,-8,-4,-6,-3,-7,3,-9,-8,-1,8,4,-5,-10,7,-5,-4,6,10,-6,-8,5,-3,-4,5,4,3,9,-10,6,1,-10,6,2,8,9,2,-9,10,10,9,1,1,-1,1,10,-9,-8,6,1,7,-10,-5,8,2,-3,1,2,5,4,-3,9,-5,-8,-6,-5,-10,6,5,3,1,8,-9,5,-6,-2,-5,2,10,3,1,-1,-4,-6,-10,-8,-4,-2,-9,-9,-7,-5,-5,-2,-6,-1,4,6,10,9,-1,-10,5,10,-10,-10,-1,7,1,1,6,-2,5,-8,-2,-6,6,-9,-7,-5,-7,3,-8,-6,-2,6,-8,-8,-8,9,-5,-4,2,-2,-4,7,9,-1,-10,8,1,-2,2,-3,8,2,-8,4,2,8,-2,7,-5,-10,5,-9,-2,9,-4,-6,-6,-8,7,-2,-10,4,5,3,2,-5,3,-7,-8,1,-9,-4,5,7,8,2,-4,-9,-10,1,8,-2,1,-6,-6,-10,-3,-9,-8,10,-10,3,-1,-2,-5,-4,8,-3,-3,-7,7,-3,-2,7,-1,-6,-3,2,1,4,7,-10,4,-4,-4,8,-6,10,-5,10,7,-6,4,4,-2,-9,8,3,-5,-1,-8,10,3,-4,8,4,-9,-8,8,6,4,-10,7,4,-10,10,-7,-4,10,-7,-3,8,3,2,-1,3,6,-8,7,-4,9,7,-4,-4,-2,-7,-6,-4,2,-10,6,6,7,6,6,-2,-4,2,-3,-4,-9,-7,-5,-4,9,-10,9,9,-10,1,5,-4,2,6,-2,10,1,-6,10,-3,-6,-6,-1,-3,1,8,5,6,-7,5,-5,1,-4,-4,9,-3,-10,-1,7,-1,-6,-6,-2,10,-5,7,2,5,4,-10,7,-9,-6,10,-4,2,4,3,-10,-5,10,4,9,9,1,10,3,-6,2,2,9,-8,-4,8,5,-1,-5,-8], dtype = "uint8")#candidate|1259|(1386,)|const|uint8
call_1258 = relay.TupleGetItem(func_597_call(relay.reshape(const_1259.astype('uint8'), [9, 11, 14])), 0)
call_1260 = relay.TupleGetItem(func_600_call(relay.reshape(const_1259.astype('uint8'), [9, 11, 14])), 0)
output = relay.Tuple([bop_1255,call_1258,const_1259,])
output2 = relay.Tuple([bop_1255,call_1260,const_1259,])
func_1264 = relay.Function([var_1253,], output)
mod['func_1264'] = func_1264
mod = relay.transform.InferType()(mod)
var_1265 = relay.var("var_1265", dtype = "int32", shape = (8, 10, 13))#candidate|1265|(8, 10, 13)|var|int32
output = func_1264(var_1265)
func_1266 = relay.Function([var_1265], output)
mutated_mod['func_1266'] = func_1266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1321 = relay.var("var_1321", dtype = "float64", shape = (9, 16, 15))#candidate|1321|(9, 16, 15)|var|float64
uop_1322 = relay.cos(var_1321.astype('float64')) # shape=(9, 16, 15)
output = relay.Tuple([uop_1322,])
output2 = relay.Tuple([uop_1322,])
func_1330 = relay.Function([var_1321,], output)
mod['func_1330'] = func_1330
mod = relay.transform.InferType()(mod)
var_1331 = relay.var("var_1331", dtype = "float64", shape = (9, 16, 15))#candidate|1331|(9, 16, 15)|var|float64
output = func_1330(var_1331)
func_1332 = relay.Function([var_1331], output)
mutated_mod['func_1332'] = func_1332
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1485 = relay.var("var_1485", dtype = "float64", shape = ())#candidate|1485|()|var|float64
var_1486 = relay.var("var_1486", dtype = "float64", shape = (11, 14, 12))#candidate|1486|(11, 14, 12)|var|float64
bop_1487 = relay.floor_mod(var_1485.astype('float64'), var_1486.astype('float64')) # shape=(11, 14, 12)
func_597_call = mod.get_global_var('func_597')
func_600_call = mutated_mod.get_global_var('func_600')
const_1498 = relay.const([-6,6,4,-3,-10,10,1,6,3,-8,-10,-8,5,-1,7,-8,10,-9,9,1,-2,9,-10,3,-10,-4,-5,1,8,-4,2,10,-6,-6,-10,6,-8,9,9,1,4,-10,-6,8,-5,-1,-4,6,-9,-7,-1,-2,10,-7,5,2,3,-8,-5,5,1,-6,6,-7,6,5,-8,6,-10,1,-9,7,-5,3,3,7,-1,-1,6,-3,1,-10,4,-9,7,10,-10,-9,3,-2,-9,4,-3,8,-10,-2,6,-2,-5,5,-8,9,-3,3,-2,4,-6,-1,3,8,10,-6,1,-7,6,10,6,-2,-10,4,-9,-3,-7,4,4,5,4,-8,-7,1,6,9,-1,-8,-7,-4,1,1,-10,9,-9,-7,6,-5,-10,-10,8,-8,-2,1,-9,6,-2,1,4,-7,-6,5,10,7,-8,8,-6,-6,-3,8,4,5,2,10,-7,8,-9,-5,5,-1,-1,-1,-5,5,-6,3,10,-9,-5,-10,-6,-6,-3,6,-5,1,5,-2,10,2,4,-7,-3,-7,-5,-1,-5,-6,9,6,-8,-1,2,-5,5,-8,3,3,2,-6,-7,8,5,-10,-5,-10,7,7,-7,10,2,-10,5,-2,-3,6,7,-2,9,1,-2,8,-4,-9,-9,-4,-10,5,8,-4,8,-1,-5,9,6,-9,-1,-8,-6,-8,9,-6,-6,2,-8,5,6,1,8,7,-10,-2,7,-7,-8,-6,9,-4,2,-9,4,-6,-7,-4,-7,-8,-7,-1,2,-5,-5,7,-4,-6,-9,-7,-8,-3,-10,-1,6,-7,2,7,-5,4,7,3,2,-8,-6,-4,-9,-9,-4,7,2,2,1,-7,6,-8,3,-4,3,-8,10,3,-8,8,3,-9,1,-8,-5,-9,-8,-3,8,-10,9,10,-7,-9,-5,5,4,2,9,8,-9,-6,3,10,5,2,5,5,5,6,-3,-8,9,4,2,-4,10,7,-7,7,-6,-8,-1,2,-7,5,-3,6,-3,-10,2,-7,1,-8,-1,-10,3,8,3,1,-2,7,-7,7,-5,6,-10,2,9,10,4,-8,10,-1,10,10,-8,7,-3,-7,1,6,8,-3,-7,-8,-2,7,4,4,2,6,-4,5,-7,-6,6,10,-1,3,-5,-8,-9,1,-5,-5,-1,-4,4,-4,2,9,-3,5,9,3,-1,3,8,-1,-8,-9,-9,-6,2,4,-2,-3,-2,-1,6,-7,5,-5,3,-5,6,10,6,-10,7,-4,9,-6,-6,3,8,-7,9,5,1,3,-5,5,-10,-2,1,6,5,-2,-8,1,7,9,3,8,-8,-3,5,-6,7,1,-6,-9,-10,2,-7,4,-2,-10,8,10,10,-9,-5,9,5,-9,9,-1,-10,5,-5,-9,-1,-3,8,7,9,2,-2,-8,-3,7,-7,-10,-1,-4,5,3,-4,-9,2,-2,-3,-6,7,4,-3,3,9,-6,-8,7,8,1,8,6,-5,10,-5,5,-2,-6,-7,-4,-10,-7,5,-4,-3,6,-7,1,3,10,-10,3,-3,9,-6,8,-5,6,8,4,-7,5,3,7,-9,-5,1,3,5,-4,6,6,-7,-3,4,-10,-8,-8,3,6,-2,1,8,-9,-5,-3,7,4,6,10,-5,-3,-7,3,-6,-2,-9,-4,-6,-10,-8,-5,6,8,5,2,-10,10,-7,7,-1,4,1,-8,10,1,-3,-2,4,-1,-8,8,9,5,-2,-9,-9,-4,2,-9,-2,-10,-7,-3,4,9,-8,-10,-6,1,7,-10,5,-9,5,-9,10,-1,-6,7,2,-2,4,5,8,9,-10,-2,-4,1,-10,-8,4,7,-8,7,-2,-10,2,-8,3,-4,8,-7,-8,6,1,-8,5,-4,-10,3,-10,8,-8,2,6,4,3,-8,2,-7,-10,-7,-10,10,-1,-2,7,7,-6,7,-5,8,4,9,2,8,-2,-8,7,-2,10,3,4,3,7,4,2,-1,7,-10,-5,10,-5,-2,6,-1,6,6,-2,-9,-10,2,-4,6,-3,2,-7,7,-3,-2,-1,-5,-9,-8,-9,-1,-10,9,-5,5,5,8,-10,-4,4,-1,-1,3,-7,-10,-7,-5,5,1,3,10,5,-10,2,9,-9,10,-9,1,-3,-4,3,5,5,10,4,-6,7,-6,-7,7,-7,8,-10,-2,10,-1,-5,-1,-4,8,2,-9,-9,9,1,-4,3,-2,10,3,-10,-5,3,-7,8,9,9,-8,-6,-4,3,5,9,8,-3,-3,7,10,-5,-1,2,4,9,-10,1,1,-2,-1,-6,-4,9,-2,7,-10,-6,-7,2,-10,5,5,-3,-1,5,-10,10,7,-3,-8,8,-3,1,-3,-3,-4,-4,-4,7,4,5,10,9,-5,-4,-5,2,-9,9,-6,6,1,-8,6,10,5,5,-3,3,-9,2,1,1,9,-3,-2,-2,10,-8,5,-8,3,6,-8,-3,-5,-2,-1,8,2,-2,2,-9,-5,-1,-5,1,-2,4,-3,8,2,-4,-2,-2,6,1,1,2,-7,4,-2,7,-1,6,8,4,4,4,2,2,-1,6,3,7,1,-9,6,6,9,-3,-6,6,7,-7,5,7,-2,-9,2,-2,-7,7,9,3,7,-4,5,4,9,10,-1,-3,9,8,7,-6,3,10,-9,1,-10,-9,-2,-6,-4,-6,-3,-8,10,-6,5,1,-7,1,3,2,-4,10,-5,8,3,6,4,8,9,-1,6,-4,3,9,-7,1,5,9,6,-3,5,4,-5,-1,6,1,-4,-5,10,2,6,-1,3,-2,9,-9,-5,2,-5,4,-7,-3,10,5,-1,-9,10,-7,10,-3,5,3,-7,9,10,-3,-8,5,4,8,-8,-2,7,-3,-1,5,-10,-7,3,-1,9,9,2,-5,-5,4,10,-4,-7,1,5,5,4,4,-8,-2,3,-4,5,-3,-2,6,3,8,-6,8,-7,-7,-7,-8,-8,-3,2,-5,-9,-9,-5,3,-4,-8,2,-2,-10,-9,1,-3,-10,1,-6,-8,5,7,2,-8,3,-7,-3,-3,9,10,-1,-1,1,-10,-10,-3,-8,7,-10,-6,-2,-9,3,7,-4,-4,-2,-6,8,-2,-6,5,5,4,8,8,5,4,9,-2,10,10,10,9,-3,6,5,-5,-3,6,3,1,3,-7,-7,-7,-2,3,4,10,10,-1,5,-7,-9,10,-9,9,6,-4,5,-2,-10,-9,-6,6,-2,2,4,-8,2,-4,-10,-3,-1,9,-8,-10,-7,-5,-7,10,-7,-9,-2,4,6,5,1,10,4,-7,-4,1,8,-4,-6,-4,-7,-1,-9,-2,-3,1,-4,-7,2,-1,10,8,7,-3,-8,-5,10,-3,3,6,-2,-1,7,5,1,-8,7,1,1,8,-10,4,10,-1,-5,-10,-5,5,10,-3,-5,4,-6,7,-10,7,-7,10,-2,-2,-1,6,-7,7,-3,10,1,4,-10,5,6,-10,6,-4,-4,-5,-1,8,-6,-5,5,-10,1,2,-5,-1,-2,7,2,4,8,-10,4,4,3,8,-7,2,2,-9,-2,9,-3,2,6,3,7,10,9,9,7,10,8,2,-6,7,3,-4,2,4,-1,-1,-8,10,-7,1,-8,8,3,-8,-10,8,2,-10,7,-2,8,-7,-4,-6,-5,7,-8,-1,-6,1,-5,9,-1,2,2,-6,-5], dtype = "uint8")#candidate|1498|(1386,)|const|uint8
call_1497 = relay.TupleGetItem(func_597_call(relay.reshape(const_1498.astype('uint8'), [9, 11, 14])), 0)
call_1499 = relay.TupleGetItem(func_600_call(relay.reshape(const_1498.astype('uint8'), [9, 11, 14])), 0)
func_1264_call = mod.get_global_var('func_1264')
func_1266_call = mutated_mod.get_global_var('func_1266')
const_1505 = relay.const([-8,5,-2,-9,-9,-6,7,-5,-4,1,7,3,-3,6,6,4,-8,8,-9,5,-2,-2,-8,9,2,-8,-4,-4,-9,-3,-10,3,-7,7,7,-4,4,-1,-1,-4,10,3,1,1,8,9,10,-7,2,-2,8,10,-2,-4,-1,7,10,-5,9,-3,7,-8,-5,-3,3,-7,-1,-4,-10,-5,7,-2,6,-2,-1,-4,8,-7,-9,9,8,-2,5,-4,-4,-5,5,-10,3,3,-6,6,1,6,-6,1,-10,-6,10,-9,-1,5,-10,-4,-8,8,-8,-9,-8,10,-1,1,-7,-6,9,9,-2,7,-1,6,9,-7,-10,7,-3,-5,1,6,5,3,9,-3,6,4,10,-1,8,8,-4,8,-6,-10,9,3,9,-7,7,9,9,-3,5,-9,-9,1,-6,1,-1,8,-8,-5,6,5,-3,7,10,-2,3,6,-2,7,5,1,10,8,-10,-3,7,10,-2,2,6,-7,-9,2,1,1,-7,3,-2,3,6,-8,6,4,6,10,-2,-2,-9,2,2,-5,4,6,1,-7,7,-1,-7,1,-1,-7,7,5,2,5,1,-4,-9,10,-10,-8,-6,10,-4,-7,3,9,3,-5,1,10,-1,6,5,-2,5,-1,-1,-6,-3,1,9,5,3,-7,-9,6,-1,2,8,-10,3,6,4,8,-9,5,-10,9,10,8,5,1,-6,-2,4,7,-5,1,9,9,10,-5,4,-6,2,-6,-7,2,10,8,-8,-3,-2,-4,-8,8,-5,-10,8,5,-9,-4,-10,2,4,5,-8,7,-7,-10,2,-2,-2,-7,-8,8,-5,-6,3,-6,9,-9,2,-5,-4,1,-5,-6,9,7,8,-5,-2,-10,10,-9,7,-5,3,5,7,7,3,10,7,-9,5,-7,-8,1,3,6,8,-9,1,2,2,-1,1,8,1,2,-5,2,-8,-1,2,10,-7,5,-5,-8,-4,-3,-2,-4,2,10,7,-9,4,-5,-7,10,-6,-4,2,7,2,-3,-2,-9,3,10,-3,2,-10,6,3,-1,-1,-7,8,-8,-5,7,6,-2,7,-8,4,8,8,-1,-1,10,-9,4,-3,8,-1,-7,-10,7,-10,10,4,8,-3,5,-1,-6,3,8,2,6,-10,4,10,9,-6,-6,6,-6,-4,3,-3,-8,8,-2,1,-6,1,-10,1,2,10,-10,3,7,5,3,-10,-6,-6,-1,-8,-7,-6,9,8,-5,-1,-7,10,-2,-4,7,-7,-4,-3,9,1,2,4,-3,5,3,2,10,5,-1,6,-5,-2,5,4,-9,-1,2,-4,-10,-2,5,-6,-8,-5,-2,-6,6,-7,-5,7,6,7,-3,-3,-10,-7,-9,-7,4,7,-7,-4,-2,1,10,3,6,-3,9,-4,-1,3,4,8,-6,-3,-1,-3,5,-2,4,2,3,10,1,2,-5,-3,-9,-6,-7,7,5,3,-5,-9,-10,8,-8,9,10,-3,-10,-3,-7,-3,7,4,-9,-6,-4,3,5,1,-10,5,4,5,4,3,7,8,6,-8,9,-9,-8,-10,4,8,-2,3,1,-9,8,-8,8,10,8,-10,1,-1,-4,4,2,1,5,7,-2,2,-8,4,6,1,2,-10,-1,-4,4,4,-9,8,-8,9,3,9,-4,9,-9,-4,2,-5,-7,-9,-6,6,7,-9,-3,5,2,9,-9,5,-9,-10,-5,5,4,4,8,-5,-6,-7,5,-4,6,-4,-2,-4,10,-5,10,6,5,-6,-9,-7,7,3,6,10,1,-10,1,-7,9,-5,-1,3,-2,-8,-1,-6,-8,2,-8,-9,-4,-5,2,-7,3,8,-4,1,-1,7,-3,10,-3,9,-5,-2,5,6,-9,-6,5,-8,6,-3,8,9,-2,-7,3,8,-2,7,-8,-5,-3,1,7,-7,9,-10,-1,-10,-9,-9,3,-10,-8,4,-7,-2,10,-10,-5,3,-10,-2,-3,-7,-1,5,-4,9,-2,-9,-2,1,6,-2,-2,-2,-8,-5,-7,3,9,-2,-3,-6,-5,-3,-7,8,8,2,-5,-2,9,1,-2,-7,-2,-5,-1,-9,-9,3,5,-7,3,2,-4,-8,6,10,-4,10,-8,-3,7,5,-2,-9,-2,-1,6,3,-10,4,2,3,-2,4,-7,7,6,-9,2,5,-6,1,2,3,-4,-7,10,-2,2,-2,-2,-4,-3,-7,2,-9,10,4,3,-3,2,-5,9,-7,-3,1,-8,-6,-9,5,6,-2,5,8,3,7,3,-2,-9,-5,-7,-10,3,-3,-10,4,4,4,-3,-9,6,-6,8,-1,-6,-1,-5,6,-8,10,9,6,1,-5,4,5,-2,1,6,8,2,-4,2,-5,-1,10,1,5,8,8,-8,6,-3,-1,-2,-2,-10,-9,6,-5,-1,7,3,-3,6,6,6,3,10,-8,-2,-5,7,-5,2,-8,-6,-4,-8,3,8,-7,1,4,3,4,-2,-8,-6,2,4,8,6,3,9,-10,-5,-1,-5,10,7,-3,-4,10,5,-6,3,-1,8,-4,9,-5,-1,1,-1,5,-4,9,-1,-7,-10,-7,1,-3,-1,-7,3,5,8,9,6,9,4,7,6,2,-9,10,-7,8,-2,-8,-6,-8,-10,6,-2,-5,1,-2,6,-3,-10,-4,8,5,-4,6,8,6,4,2,-5,2,1,-2,-5,3,-10,2,-6,9,-10,3,10,5,-9,9,4,-1,5,-3,2,8,10,9,9,-9,2,6,-9,-5,-8,4,6,-8,-3,-1,-4], dtype = "int32")#candidate|1505|(1040,)|const|int32
call_1504 = relay.TupleGetItem(func_1264_call(relay.reshape(const_1505.astype('int32'), [8, 10, 13])), 2)
call_1506 = relay.TupleGetItem(func_1266_call(relay.reshape(const_1505.astype('int32'), [8, 10, 13])), 2)
output = relay.Tuple([bop_1487,call_1497,const_1498,call_1504,const_1505,])
output2 = relay.Tuple([bop_1487,call_1499,const_1498,call_1506,const_1505,])
func_1510 = relay.Function([var_1485,var_1486,], output)
mod['func_1510'] = func_1510
mod = relay.transform.InferType()(mod)
mutated_mod['func_1510'] = func_1510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1510_call = mutated_mod.get_global_var('func_1510')
var_1512 = relay.var("var_1512", dtype = "float64", shape = ())#candidate|1512|()|var|float64
var_1513 = relay.var("var_1513", dtype = "float64", shape = (11, 14, 12))#candidate|1513|(11, 14, 12)|var|float64
call_1511 = func_1510_call(var_1512,var_1513,)
output = call_1511
func_1514 = relay.Function([var_1512,var_1513,], output)
mutated_mod['func_1514'] = func_1514
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1639 = relay.const([[[2,-5,-10,5,8,7],[7,6,-5,3,-9,-3],[10,9,7,5,9,-4],[-4,6,9,8,9,7],[7,9,4,2,-3,5],[6,-9,-2,8,4,-10],[9,2,1,3,7,5],[-5,7,-10,8,-4,3],[-10,2,6,8,1,5],[-9,-2,-2,2,-8,5],[-1,3,10,1,-10,-5],[-8,-4,-4,1,-9,4],[1,-1,4,6,9,-3]],[[7,10,-9,-4,1,-6],[-8,10,9,1,9,9],[-7,1,4,6,7,9],[-4,-5,-2,10,7,9],[6,-7,1,-8,-1,-4],[-2,8,-8,-5,1,-7],[-10,-5,9,-4,6,-9],[7,3,6,-7,-10,8],[-2,-2,5,-8,-6,-4],[8,7,-9,-1,4,8],[-3,-8,8,1,-9,2],[10,-8,2,-1,-10,-4],[-5,-9,1,10,-10,5]],[[4,-9,8,-8,-9,7],[8,4,8,-9,5,1],[5,7,10,5,-9,9],[-4,-8,-3,6,4,-1],[8,-5,-10,-8,-8,2],[7,3,2,3,-1,10],[-7,5,-8,4,-6,10],[7,-1,-3,4,10,5],[-1,9,9,-6,-8,10],[5,4,4,9,2,-6],[-5,-4,-8,-9,7,-1],[-7,-7,-7,-3,-2,6],[-10,5,9,8,2,2]],[[-3,10,-9,10,-9,-3],[3,-1,-2,9,3,6],[9,-7,8,-2,-10,-2],[-7,-5,9,-3,3,-7],[2,-6,2,-9,8,4],[7,10,8,8,-4,2],[-10,-8,-10,9,1,-6],[-9,-5,-3,6,5,-9],[8,10,10,-7,-8,5],[-10,-9,10,-5,10,-8],[1,5,10,10,-9,7],[-4,-2,-1,-2,1,-1],[7,-10,10,-4,-3,-8]],[[2,8,10,-1,-2,-1],[-9,-2,-4,-1,-1,-2],[10,1,-4,4,-8,-7],[8,5,2,2,8,-2],[-9,7,-6,2,-4,9],[3,-6,-6,1,3,-5],[-1,8,3,4,-5,-5],[-10,8,3,4,3,-8],[2,-4,-7,-2,7,10],[2,-5,6,1,-8,-2],[6,-6,-7,-9,-6,-6],[1,-1,-7,-10,6,-9],[5,8,7,-4,-9,4]],[[-5,-5,-6,-3,-8,-5],[7,8,-1,6,5,1],[8,-6,6,-1,5,-1],[8,7,-8,2,10,-9],[-7,10,10,3,-5,-3],[1,1,1,-8,-5,4],[9,-1,8,-1,2,4],[-3,10,-7,10,-6,-5],[-4,-5,-8,-4,-4,6],[-4,6,10,-10,6,4],[10,5,-4,4,-3,-9],[-5,-8,8,3,-4,-8],[9,-1,7,-10,7,4]],[[6,-1,4,-2,1,-1],[5,-2,3,5,-9,8],[-10,-4,6,10,5,-10],[9,9,-1,2,-6,-7],[6,10,-6,1,9,-3],[-3,-6,4,7,-8,-5],[1,-9,10,6,5,1],[-6,-9,2,-9,-7,-3],[-1,-4,1,1,5,-8],[3,-10,10,2,-8,3],[3,4,5,10,-2,-6],[-2,-4,5,1,-6,8],[6,3,3,5,8,-7]],[[-9,-10,1,-3,-2,-9],[8,7,-5,-9,-9,7],[8,9,3,10,2,2],[-5,8,3,6,-9,5],[-2,-5,7,-2,-5,-3],[-8,10,-5,5,9,-7],[9,4,-8,2,-3,10],[10,-7,4,1,4,-2],[-6,-9,10,-5,-1,7],[-8,-1,9,-3,5,3],[-1,-3,-8,6,-4,8],[2,3,4,7,2,-3],[1,-9,7,8,-6,4]]], dtype = "int32")#candidate|1639|(8, 13, 6)|const|int32
var_1640 = relay.var("var_1640", dtype = "int32", shape = (8, 13, 6))#candidate|1640|(8, 13, 6)|var|int32
bop_1641 = relay.right_shift(const_1639.astype('int32'), relay.reshape(var_1640.astype('int32'), relay.shape_of(const_1639))) # shape=(8, 13, 6)
func_832_call = mod.get_global_var('func_832')
func_839_call = mutated_mod.get_global_var('func_839')
var_1649 = relay.var("var_1649", dtype = "int8", shape = (117,))#candidate|1649|(117,)|var|int8
var_1650 = relay.var("var_1650", dtype = "float64", shape = (240,))#candidate|1650|(240,)|var|float64
var_1651 = relay.var("var_1651", dtype = "float64", shape = ())#candidate|1651|()|var|float64
call_1648 = relay.TupleGetItem(func_832_call(relay.reshape(var_1649.astype('int8'), [13, 3, 3]), relay.reshape(var_1649.astype('int8'), [13, 3, 3]), relay.reshape(var_1650.astype('float64'), [240,]), relay.reshape(var_1651.astype('float64'), []), relay.reshape(var_1650.astype('float64'), [10, 6, 4]), ), 1)
call_1652 = relay.TupleGetItem(func_839_call(relay.reshape(var_1649.astype('int8'), [13, 3, 3]), relay.reshape(var_1649.astype('int8'), [13, 3, 3]), relay.reshape(var_1650.astype('float64'), [240,]), relay.reshape(var_1651.astype('float64'), []), relay.reshape(var_1650.astype('float64'), [10, 6, 4]), ), 1)
func_967_call = mod.get_global_var('func_967')
func_970_call = mutated_mod.get_global_var('func_970')
const_1660 = relay.const([5.701235,3.191554,-0.924041,3.511362,8.901671,5.066950,6.304035,0.566858,-9.701233,-4.151405,2.989412,7.147459], dtype = "float64")#candidate|1660|(12,)|const|float64
call_1659 = func_967_call(relay.reshape(const_1660.astype('float64'), [3, 2, 2]))
call_1661 = func_967_call(relay.reshape(const_1660.astype('float64'), [3, 2, 2]))
func_706_call = mod.get_global_var('func_706')
func_709_call = mutated_mod.get_global_var('func_709')
call_1666 = relay.TupleGetItem(func_706_call(relay.reshape(var_1650.astype('float64'), [10, 6, 4])), 0)
call_1667 = relay.TupleGetItem(func_709_call(relay.reshape(var_1650.astype('float64'), [10, 6, 4])), 0)
uop_1679 = relay.asinh(var_1640.astype('float32')) # shape=(8, 13, 6)
func_1510_call = mod.get_global_var('func_1510')
func_1514_call = mutated_mod.get_global_var('func_1514')
const_1697 = relay.const([[-8.938905,1.836924,-6.671591,7.843558,-7.485516,6.002894,1.490361,-1.736611,4.568016,-2.430197,-4.953250,0.630782,-5.218638,-7.130567,8.285510,4.314891,9.908052,-8.965107,2.422533,-1.628748,-7.428167,7.360017,6.035426,9.389300,-3.500912,9.771838,4.636565,-7.397291,8.951475,-6.162565,-6.285764,-7.182981,-3.396231,5.917209,-8.450541,-2.135053,-8.500750,-7.000685,8.832581,-9.901544,-9.559891,-4.027584,7.712964,0.989458,8.757187,0.041096,-6.160793,5.400579,-5.106807,-7.063934,0.512378,0.572413,-5.873806,0.293631,4.676747,6.236856,-2.765666,5.571029,-4.663616,-9.650109,-6.275633,1.658762,-9.531636,-4.650221,-3.913891,8.866968,2.761355,1.542337,9.073551,9.331307,-6.589573,-4.622539,-7.755673,-1.503273,-9.628463,-5.453419,-9.545680,1.258818,8.052309,2.025930,-4.964137,6.648527,-5.413275,7.142890,4.434595,-0.972958,0.612517,-3.793227,2.526356,-3.769838,-4.762498,-2.775787,3.903984,4.060653,1.412634,-7.370987,0.687570,6.544741,-3.614699,8.167200,9.629512,8.913631,-4.617084,-6.256852,9.113844,-9.595232,-7.833293,-4.928184,-6.020120,-3.242363,7.993383,-6.488235,-9.402913,-5.699910,-1.179775,-0.051477,6.741718,0.825010,-2.923048,3.366714,-3.341745,7.492415,3.957088,-1.983742,8.780737,6.429824,2.621362,3.496133,-2.426206,-6.385760,-8.508538,-3.203705,3.173973,4.130085,-4.322541,1.998948,-1.291268,5.661052,-8.671671,-8.091830,-1.842516,-4.506206,3.340685,3.220704,9.517618,-1.882824,-9.003114,-0.750254,-0.019593,8.191940,-7.603019,-7.679865,8.955871,-0.942253,8.448121,0.840881,2.007895,-6.676023,-2.693819,-9.392118,2.605660,3.176351,2.720935,5.973965,3.164778,-7.403863,4.769044,0.601951,-4.916157,6.779037,-6.526283,7.633437,-7.331513,-4.566678,9.111166,8.405947,1.382696,2.321710,-7.224174,5.592297,2.639075,5.783833,-9.778727,-4.935959,2.647087,-8.137733,-5.455610,1.561214,5.785856,8.191078,-6.310470,-4.163854,6.804181,-0.751602,-1.495616,-2.403227,-2.494223,3.739842,-5.632770,1.361572,7.020394,9.813619,-4.931626,-1.295209,-8.550925,-0.149270,-3.969849,-5.187132,-2.557229,7.479636,-4.578943,4.536449,-1.217327,9.388803,-1.576120,-6.588534,7.916170,5.847690,-0.534485,5.710869,-1.207886,1.977295,-4.912191,-7.568546,-8.571825,-1.109245,3.314139,9.632487,-5.463330,-9.071937,-1.003724,-6.982442,-6.478507,8.907010,2.506879,6.472944,-4.497662,9.398728,7.104349,-4.266523,0.570641,-2.013953,-1.998415,-4.029101,6.306612,5.081263,2.340956,1.732612,1.319614,-7.696235,7.340048,-3.144763,-4.498494,4.244413,-2.689505,-4.953073,-6.163992,-1.406666,-7.303965,9.963980,-2.139718,6.177146,-6.095724,1.798055,7.992711,-0.526509,-7.211036,8.991291,-3.096077,-8.819440,-0.203776,6.271243,0.558915,9.537601,-2.027677,6.521907,1.822071,4.556171,7.507892,9.721932,-2.947966,-4.180340,9.955984,-6.435820,-6.912987,-8.774420,1.672044,8.572246,0.304288,-8.745972,5.671433,-8.348008,2.353730,-4.767611,3.787344,5.047910,4.608638,-4.157118,9.034237,2.744992,1.428512,-1.210213,7.954983,5.836555,-2.618562,-0.668479,-0.664583,-5.543754,-2.539132,-1.164016,4.057442,-4.298716,9.620265,9.453345,5.408164,-9.704696,-5.417143,8.475789,-9.899071,-5.867668,-3.255136,-8.743796,-3.781257,-2.906152,2.448260,-7.003413,4.265126,-8.007790,9.677598,0.836226,-8.634584,6.471179,2.052634,-5.082813,6.955993,-7.163764,6.765576,-0.353856,-7.044605,1.279361,-6.148108,-5.077257,-5.778294,-6.711420,-2.148064,-4.802589,-9.872662,1.770305,-6.043392,1.646762,-8.303768,6.226360,4.688198,4.977763,6.166370,4.516919,-2.559970,8.022705,-2.552917,-3.690283,0.227089,8.401776,-2.471146,4.346419,-7.294126,7.770244,1.441389,4.589939,-8.820891,-5.258409,0.158594,9.093165,1.574360,-4.688275,6.900651,-7.931863,3.176646,-4.737316,-6.146968,-4.741717,-6.087650,7.483314,-3.069041,-4.305612,-7.723431,-0.984254,4.380843,2.739355,-4.032935,-3.396831,6.738748,8.812836,6.851973,-3.491992,0.033109,-5.901722,-2.289821,4.031726,-3.254306,-2.217385,-0.491657,-1.060759,-8.728003,-8.043147,0.873500,-8.613085,7.087591,4.326994,9.481582,-4.204345,-7.953364,1.641818,4.399269,-0.194260,-8.819616,-8.067625,9.918448,-9.889407,-6.255499,0.388261,-9.752265,-4.802157,1.434024,-8.406579,-7.943504,3.624781,4.901469,7.043522,-8.779191,7.137962,-7.122852,7.895580,-0.511228,-2.681518,9.563332,1.461891,9.805705,2.978772,5.403497,-3.729654,5.289047,2.703339,-4.647588,1.191112,-9.498383,1.703519,-7.945181,-7.315229,4.256803,9.993695,-6.051973,-8.420619,2.786002,-3.095067,0.789984,-7.314166,6.511679,7.011105,-0.422280,-4.843904,4.666438,-9.965394,-2.456631,9.604713,7.116551,-0.922441,0.873570,2.006409,9.725426,4.395934,-1.638679,2.382602,7.740894,4.214921,5.595837,-6.602267,-4.210590,-4.784239,-2.405345,-9.032010,-9.607860,3.639871,9.280738,-3.975801,2.054285,1.534601,6.353414,3.494412,1.008178,5.934499,-0.427266,-1.523404,-6.142192,8.175410,-5.561950,-9.905530,8.107774,-1.642094,-6.076761,8.571533,-8.482243,-2.604360,7.921351,0.543280,-6.386928,2.048690,-9.617296,0.277889,-5.988949,9.556661,-3.973237,7.880838,-2.669968,-8.606997,3.985640,-7.744782,-2.903440,6.660912,-3.291575,4.929592,0.592340,4.282002,-7.653997,-2.697583,1.051717,4.582485,2.030624,5.800571,-1.478867,7.750685,5.792131,8.186098,-5.780868,9.651513,3.240108,9.251840,6.287076,4.043632,-5.370838,-8.008458,2.569068,1.247834,9.181276,-7.290071,4.949884,8.980023,5.689759,-5.937429,3.633273,-2.716479,-2.287345,-8.880516,-5.014630,0.237890,2.197864,6.731036,4.723999,-4.245519,1.517583,-1.358015,-8.047104,-1.699843,4.155358,4.226980,-2.402225,1.557113,4.489309,9.439473,2.469421,-1.366234,-9.224292,-7.085598,7.757826,-7.879364,1.170999,8.973674,-8.709562,-4.469638,-9.074768,8.707442,1.262996,-9.831559,-6.437955,5.311855,-0.141352,-4.071212,0.772864,3.909032,5.205911,8.634753,-2.501996,-3.895123,-1.371344,-8.508834,-8.922013,-8.123726,0.314356,0.041395,-5.216193,0.160301,-5.178951,6.240953,-3.950009,-6.371056,3.662748,7.067583,-8.122625,-2.583179,-7.417825,-8.389051,-6.937867,-3.024476,2.122794,8.168265,-7.254277,-9.298430,0.836453,-2.450359,-2.663238,6.950153,8.468171,-4.727717,5.584568,-3.961483,2.176360,-4.901185,8.007522,2.916773,-6.439643,-6.032265,-0.901627,-3.916872,5.489511,2.311684,2.703149,9.020346,0.434254,0.088411,-6.270703,-7.837475,-6.016173,-3.227330,-3.285117,-9.048174,-8.624613,8.982408,3.892006,-1.128081,5.663841,3.406362,4.407182,8.896507,-7.006520,3.134401,-5.135251,-8.762095,-6.213005,7.332718,0.238490,-0.269104,-5.603387,-6.879209,5.666581,-4.624237,-2.355851,7.632973,-4.173255,9.892730,1.324688,-6.823700,-0.747481,-8.917967,7.459533,0.456514,1.948453,-9.224319,-8.856921,-2.810476,-0.930556,-3.395805,-8.351308,-9.446840,-4.496348,7.386961,-0.365631,2.513564,-1.919913,2.384561,7.963430,-6.026088,-0.958856,9.279968,9.287287,-9.823414,-7.208501,6.500504,7.644321,-6.385559,5.327504,4.882300,7.799796,-3.103944,1.827174,0.462343,0.591512,2.467941,-9.817424,-7.755762,-2.564685,0.806192,3.996941,8.306827,-3.444333,-1.428701,3.549789,4.525024,-2.476675,4.904680,-4.009653,2.101010,-1.473595,2.351829,1.522871,3.453326,0.897714,-4.179836,9.340655,8.418620,6.868416,1.856765,8.794598,6.150064,-5.024054,6.083460,8.851473,-4.372284,-1.323107,6.331353,8.814894,8.061129,6.942620,0.100993,-3.594682,6.011379,-2.764656,-6.310364,9.437384,-9.663984,-1.765744,-9.405678,-7.123770,-5.361867,9.594383,-7.362418,-6.207808,8.857671,0.326252,-3.715779,7.551374,-4.092408,-3.327996,6.281120,-8.900508,9.000613,-2.202635,1.238714,6.850892,2.218664,2.084471,2.393980,9.654344,9.985961,-1.849465,-1.870228,3.648441,7.259280,-7.224702,-1.533013,-7.485988,1.730929,5.531763,1.717324,-9.914505,2.726747,-6.899819,6.483028,6.445858,5.267683,-5.972976,1.291271,-1.141207,5.388640,-4.763951,0.150387,-8.152044,3.234230,0.105978,-6.480780,5.442438,7.146457,-2.488433,2.796711,-1.596881,1.649778,4.380965,-0.821741,-5.734810,-8.499935,3.691248,3.176987,-7.101263,-9.887883,-0.825942,-0.669967,-2.447943,6.412307,-7.159004,2.497832,4.394745,-9.147121,1.022844,-1.500496,-3.776494,-3.293341,6.641880,4.024501,-9.844600,5.700044,-2.311818,-2.636110,-5.429055,-3.291746,1.113918,2.867586,-3.575060,9.906199,-7.187093,7.338994,-8.562935,8.322906,-5.113373,9.865617,-5.294130,0.910181,-5.815832,9.749843,5.358186,-8.659577,2.941965,-2.210539,5.240152,-3.504319,7.980473,-7.744596,5.816667,6.796501,0.373906,6.258303,-5.016425,-5.732321,-9.597152,4.605467,9.706281,-2.895131,0.392480,7.887045,-1.983173,-2.609640,0.937131,1.339034,-0.876466,-2.417040,-5.306364,2.898230,-2.764970,1.300130,-2.542046,9.592941,-3.796914,-2.885762,-1.970489,-3.996787,7.665170,-2.263154,-6.687663,-6.202578,1.544565,-2.004119,-0.056647,-4.837791,6.061039,4.130753,-9.624913,-5.966664,6.758847,-9.524006,-1.544809,-4.913133,1.017798,-4.565039,1.390409,2.026028,-5.003086,-2.921824,8.568238,8.907194,-1.715530,-4.507090,8.267561,-0.154589,-7.130652,-9.728654,8.570998,-9.002953,-5.267874,-2.040686,1.162427,-6.035996,1.294603,-4.513543,1.078143,-9.293581,0.961026,-4.401710,6.194431,4.371936,4.296661,-8.763700,-7.431420,9.083971,7.527109,-0.798825,4.561536,-8.981189,9.453999,-6.807427,7.503379,2.365655,2.472666,7.375311,-7.757013,-6.007460,8.518432,-2.180238,-3.351581,-5.172773,-2.036566,-5.361018,5.640020,-7.722260,-0.847657,5.809020,7.668982,-5.542962,-9.262612,2.784954,-2.725719,-4.083100,-0.410700,6.168605,-0.162172,7.063890,3.059582,8.888963,-5.112201,4.044635,-6.762458,-9.851604,2.599474,-3.881199,3.857919,-6.167425,-0.067514,9.917001,-2.401014,2.046815,-5.156198,6.740815,-7.943976,-6.381531,-4.152982,1.356011,-3.297324,1.007337,-9.296618,5.888242,7.715797,3.722801,-4.945085,3.314979,-9.777524,0.248617,0.530061,-8.637108,5.185556,-6.950099,-4.753240,-9.920199,-4.684627,2.498268,-8.192924,-4.552341,-9.080180,3.602385,-7.435274,4.708561,6.989334,2.171795,8.636643,-7.389663,-3.354587,4.051034,4.848429,4.680932,8.331391,-6.933378,6.774138,3.666269,8.447241,-1.203859,6.224159,-6.602911,-6.619505,4.943960,5.286404,1.850976,6.253728,-4.143969,-0.455377,-1.762483,-3.060412,8.369436,1.578801,-7.858564,1.840167,-2.852790,-4.482834,2.515544,-3.698038,9.559591,6.622540,6.765751,4.808588,1.959628,1.612217,3.161461,-4.357925,4.173790,9.381988,-3.049247,-3.955909,-4.924623,9.827345,9.067693,-6.801655,5.743768,8.112402,-2.660071,7.805920,4.445328,9.947583,-2.409742,1.464854,1.487858,7.503280,-9.809578,-7.442807,2.919213,-2.184175,5.771430,7.334420,-9.329771,4.062394,7.531216,-6.971180,1.622326,8.509364,-0.771825,2.810508,3.037637,1.095633,-3.450534,-5.942397,-5.403655,8.424319,-3.723329,-8.475354,4.935679,0.158172,-4.941654,5.130852,-8.047182,-0.046784,-3.023849,-4.598400,-6.707737,9.911345,-7.109501,-1.414004,-7.645094,-5.330918,-8.606498,-3.025258,4.125840,-7.007683,1.456731,5.465559,-8.823496,-8.913117,-4.980696,2.938942,0.805794,5.615578,-8.258301,-5.920391,2.987413,6.552491,0.720043,-0.538326,-8.422919,1.647250,-8.144068,8.482988,-9.409686,9.043956,-9.608371,1.953682,8.346516,8.664856,7.206063,8.851707,4.241432,-1.695076,-1.578411,2.083117,-0.553671,-7.090898,3.990434,1.222928,-2.656360,-3.449402,9.947942,-5.606955,7.100783,9.725951,7.451568,0.872183,2.302764,9.856266,-0.387987,-2.758821,4.710782,-6.238852,-2.157279,-9.439190,-4.444977,-3.329749,0.758320,6.114602,-2.250130,8.542006,1.973679,-4.954049,-0.969379,-9.883389,-7.566623,7.510817,5.755659,2.525031,-8.215682,-3.516287,-0.947687,-9.311755,9.081949,-5.828902,-6.703531,0.081401,0.793431,5.410645,-3.907466,-0.181068,-0.457672,-0.215827,8.211586,-0.301923,-7.924058,4.835655,1.779741,-6.498537,0.768602,-2.376557,-9.390410,4.940830,-7.328619,8.977764,-8.634602,5.128289,-1.037675,-0.458702,9.303470,9.803461,-2.835351,8.438631,-0.879224,-2.696244,-4.566969,-6.602191,2.080872,-9.498894,-1.515154,-8.672795,-9.336121,8.459349,6.507131,-4.163478,-2.184567,-9.353423,-3.824732,-1.735083,7.397528,-6.942660,-4.238321,-3.417972,-6.647029,7.552484,6.012607,4.688113,9.070696,-9.689865,0.548467,-3.227381,-9.189963,-3.320187,-1.982440,8.492966,3.053255,3.157706,-0.783476,8.753841,5.001682,5.352025,-8.743410,-3.133374,-0.068083,5.440524,9.529350,0.771385,-0.538792,7.182897,1.776669,7.535630,-1.185577,-5.673093,-4.022972,-4.465732,-2.503690,-6.928768,-4.047149,-7.426976,0.800443,-8.982093,5.977479,-2.885164,5.213292,-1.530863,5.997131,-7.520031,3.538359,-4.944204,-0.878445,3.326516,7.947638,-3.879270,-7.036954,-8.281241,-4.120799,-4.353901,-3.093276,7.032022,-0.898383,-0.222904,9.307123,-2.757971,4.714326,4.465867,4.728036,-3.708021,-4.607126,-4.379101,-5.085538,3.564894,-5.871786,-9.033118,-4.910188,-8.062251,-3.454722,-3.206773,0.439758,-6.748699,-6.082291,5.978907,-9.845889,-0.857765,-0.777013,5.751180,5.148961,6.370427,-0.792308,-9.499781,2.485620,-0.487079,-4.108599,-0.443006,8.439370,-6.296439,-2.277608,8.920174,-5.878270,6.693277,-3.806174,5.751271,9.635436,5.279366,-9.004224,8.686103,2.199094,4.432404,-9.458872,4.298495,-2.493969,0.193841,1.359309,4.484901,-9.782385,-5.608289,4.361155,-0.256098,-9.635027,9.791325,-2.603478,0.622544,-3.543993,8.034329,-1.192746,-1.305083,-3.789341,9.342220,-6.740703,7.422249,1.905674,2.163313,6.326801,-9.509946,-1.977212,3.223672,-1.405306,-2.591050,0.172514,8.326510,-7.660310,8.483964,-7.397572,1.502614,4.692113,7.503191,-5.656708,-1.168205,1.823040,-6.594876,-5.275899,-7.786783,-8.545840,5.883813,-5.385914,9.450058,-3.285772,1.119783,6.728466,6.592410,-9.685673,2.501416,6.399165,-2.946580,-1.546729,-1.379095,-8.014119,9.338260,5.548947,1.154052,-4.822700,0.565823,1.340879,8.161429,5.627634,3.302964,7.321031,-6.763848,-5.955736,1.717611,3.164502,6.630592,-2.534374,-8.417422,6.730955,7.198234,-3.601097,-6.697273,-2.756272,-7.467383,-2.638037,1.541124,3.415760,9.797115,-8.210758,-3.976358,-2.392199,-6.902890,7.119487,5.472337,-3.021806,-8.691685,5.404073,-4.295007,-6.377488,8.135999,-8.954656,-3.357428,-8.425228,-6.453983,9.901846,6.545068,-5.266498,-8.245246,-6.251709,7.828794,0.992803,-8.042679,-9.465913,-5.755357,3.657065,-7.654265,-6.899544,6.312518,-5.328723,3.863137,6.948710,7.950110,-0.892908,3.840750,0.843181,9.400430,-2.332302,2.815675,-7.269991,6.487675,8.546088,-8.477154,-4.799530,2.382384,1.334754,-0.868272,5.070849,-3.961802,-0.581692,-7.305810,-9.523832,-6.535384,8.591477,-8.737802,4.399876,-3.282355,0.853303,-5.382114,-8.393282,-5.335093,-8.602963,-3.413185,-0.292530,-5.424705,-2.547084,2.535782,-8.012071,9.380821,0.493528,-0.912364,0.201077,-2.247618,7.219024,8.111019,-0.575331,2.064088,-2.047678,-7.679168,-7.524559,5.547622,4.689044,-7.909468,-6.898087,-7.463585,6.920156,-9.064905,8.059647,0.580228,5.278296,-5.337525,-2.566529,2.283169,-6.043511,9.252186,-1.740839,1.467264,8.124670,6.843097,-5.246089,-3.262397,-8.011835,-7.527636,6.925167,-1.136750,-0.748457,-2.397432,-0.950504,-4.695502,6.863416,-1.018045,-4.270869,1.348420,9.814292,-2.385984,-3.097071,0.238354,1.021944,-0.922000,8.203655,-3.033397,-0.418058,-2.158156,-7.533146,5.116964,-6.358169,5.401782,7.903596,9.940907,5.742352,-5.909607,-3.652360,9.591006,-1.423128,-7.457271,-9.740166,3.145648,4.585378,-1.622142,-0.040815,4.181312,9.437914,-9.465973,5.917358,9.275883,2.837533,5.419714,0.142035,4.144920,-4.624330,0.146802,-2.495509,5.292798,-1.623623,4.320155,9.438703,4.794507,7.141036,-6.619173,0.265000,-6.340840,3.711811,-0.282475,-2.172556,-2.193425,2.531963,3.694088,7.683109,5.044931,-4.007363,-9.518259,1.323519,-5.187880,4.003181,-9.384947,-8.807991,6.559918,-2.073354,-4.267794,-2.947847,6.089207,-3.657439,2.794165,-3.335015,6.807629,-4.113753,-9.947386,-1.195106,-3.731350,9.095999,-2.473709,7.470549,-1.572681,-8.528990,-8.757980,6.599592,-6.917365,4.056084,9.242812,4.849866,-5.180930,6.633001,4.309730,-9.510355,8.177223,-0.610913,3.009680,-9.910739,7.063345,1.267834,2.232538,-4.085301,-4.150932,0.762946,0.096090,8.188202,-6.195456,-1.132344,-8.302479,-6.840310,6.888732,6.013650,-4.898484,-4.903359,-3.278147,-2.309129,-0.181535,-8.317126,-5.083854,7.874148,-2.573470,7.042842,0.875530,-5.874739,-9.719566,6.387947,-6.333255,7.594870,-4.705900,-2.798788,6.073146,-9.562412,6.960408,-1.295366,0.161074,3.505841,-9.922737,-3.163440,1.237107,9.507923,1.699820,8.179146,-5.529907,9.894277,-2.979935,4.549687,-4.972876,4.706158,-1.290944,1.018121,0.195778,5.903178,2.290006,3.366345,7.296671,5.541160,-5.978099,-2.306975,0.252200,1.225250,4.454096,2.206940,1.370423,-2.493694,-4.281891,5.853544,-5.351092,-2.287930,-0.984031,-4.548501,-8.778132,1.817863,-7.438855,9.639593,5.367860,2.549819,-6.611061,-1.024050,-0.571057,5.727488,-8.588332,-0.722256,-1.388773,-8.841877,2.664290,-9.509365,-3.398809,-3.270174,2.872224,-7.215872,-5.995899,4.507924,-7.805354,-9.493479,-8.897734,-7.409907,-6.931924,-6.723891,9.428545,-6.616905,3.601398,-1.132932,-9.068375,0.386367,4.089261,-4.033647,1.962013,-6.272730,4.070701,-0.016697,-0.519990,-6.935413,-9.744111,2.828309,4.112108,-0.130887,-8.438787,3.930795,6.114350,-9.361948,-1.744926,-5.986597,4.371993,-5.887183,-7.156634,-1.822598,0.259626,6.050713,7.400466,2.584422,-7.092183,-0.398490,-5.354552,0.730013,-6.803932,-9.197730,-5.506694,-8.168654,7.582380,-1.623515,-1.682957,5.077438,8.749334,0.243542,5.598868,-3.827890,-2.346309,1.241008,-7.331106,-4.177694,-5.765888,3.652910,7.615691,-9.975617,-6.366075,-9.683026,-1.273232,-2.248943,1.740321,-6.933551,-0.902235,-5.062324,8.027327,-3.838567,5.024711,-9.510405,7.934468,-7.886042,-2.661959,-1.997030,-7.432580,0.224413,-4.003936,-9.426371,5.532863,-3.073972,1.117813,-8.110402,-5.274186,-4.628318,1.597514,-3.585830,7.019023,0.245239,6.902226,-1.936609,0.981616,-3.284988,-4.544714,7.103792,-4.770398,9.245770,-9.658793,-4.999656,-3.403819,-2.052789,-7.637090,2.647649,-6.938744,5.979986,-3.490410,0.865802,9.194857,5.509245,-6.563454,2.485243,-5.341900,4.705262,-9.807363,-8.747606,-8.722991,-6.326019,0.064151,-1.832632,-9.615622,8.728958,-9.263086,-8.370364,5.014487,3.905600,-9.289669,-0.155285,9.493052,-5.103754]], dtype = "float64")#candidate|1697|(1, 1848)|const|float64
call_1696 = relay.TupleGetItem(func_1510_call(relay.reshape(var_1651.astype('float64'), []), relay.reshape(const_1697.astype('float64'), [11, 14, 12]), ), 4)
call_1698 = relay.TupleGetItem(func_1514_call(relay.reshape(var_1651.astype('float64'), []), relay.reshape(const_1697.astype('float64'), [11, 14, 12]), ), 4)
output = relay.Tuple([bop_1641,call_1648,var_1649,var_1650,var_1651,call_1659,const_1660,call_1666,uop_1679,call_1696,const_1697,])
output2 = relay.Tuple([bop_1641,call_1652,var_1649,var_1650,var_1651,call_1661,const_1660,call_1667,uop_1679,call_1698,const_1697,])
func_1701 = relay.Function([var_1640,var_1649,var_1650,var_1651,], output)
mod['func_1701'] = func_1701
mod = relay.transform.InferType()(mod)
var_1702 = relay.var("var_1702", dtype = "int32", shape = (8, 13, 6))#candidate|1702|(8, 13, 6)|var|int32
var_1703 = relay.var("var_1703", dtype = "int8", shape = (117,))#candidate|1703|(117,)|var|int8
var_1704 = relay.var("var_1704", dtype = "float64", shape = (240,))#candidate|1704|(240,)|var|float64
var_1705 = relay.var("var_1705", dtype = "float64", shape = ())#candidate|1705|()|var|float64
output = func_1701(var_1702,var_1703,var_1704,var_1705,)
func_1706 = relay.Function([var_1702,var_1703,var_1704,var_1705,], output)
mutated_mod['func_1706'] = func_1706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1943 = relay.var("var_1943", dtype = "float32", shape = (2, 10, 1))#candidate|1943|(2, 10, 1)|var|float32
var_1944 = relay.var("var_1944", dtype = "float32", shape = (2, 10, 3))#candidate|1944|(2, 10, 3)|var|float32
bop_1945 = relay.floor_mod(var_1943.astype('float32'), var_1944.astype('float32')) # shape=(2, 10, 3)
func_832_call = mod.get_global_var('func_832')
func_839_call = mutated_mod.get_global_var('func_839')
var_1964 = relay.var("var_1964", dtype = "int8", shape = (117,))#candidate|1964|(117,)|var|int8
var_1965 = relay.var("var_1965", dtype = "float64", shape = (240,))#candidate|1965|(240,)|var|float64
var_1966 = relay.var("var_1966", dtype = "float64", shape = ())#candidate|1966|()|var|float64
call_1963 = relay.TupleGetItem(func_832_call(relay.reshape(var_1964.astype('int8'), [13, 3, 3]), relay.reshape(var_1964.astype('int8'), [13, 3, 3]), relay.reshape(var_1965.astype('float64'), [240,]), relay.reshape(var_1966.astype('float64'), []), relay.reshape(var_1965.astype('float64'), [10, 6, 4]), ), 0)
call_1967 = relay.TupleGetItem(func_839_call(relay.reshape(var_1964.astype('int8'), [13, 3, 3]), relay.reshape(var_1964.astype('int8'), [13, 3, 3]), relay.reshape(var_1965.astype('float64'), [240,]), relay.reshape(var_1966.astype('float64'), []), relay.reshape(var_1965.astype('float64'), [10, 6, 4]), ), 0)
func_1701_call = mod.get_global_var('func_1701')
func_1706_call = mutated_mod.get_global_var('func_1706')
const_1970 = relay.const([4,3,-7,1,-5,6,1,3,4,-8,1,10,-5,4,-7,-1,7,10,1,10,8,-5,1,-6,7,3,-8,-7,-9,8,-6,-8,-3,4,2,7,9,9,-9,-5,1,-6,1,9,4,8,6,-10,-6,2,-10,8,-2,9,3,10,4,-2,9,4,1,-3,2,8,2,6,9,-1,-2,-4,6,9,-10,-4,-2,-4,4,2,3,-2,7,4,5,-9,-8,1,7,-4,1,-7,10,-8,9,8,7,4,9,4,-5,-10,5,9,-3,10,2,-9,-1,7,-8,-1,-5,10,6,10,6,4,-3,-7,7,10,-7,4,-9,-7,3,3,4,4,7,1,5,-9,10,3,-3,9,-4,-7,3,10,-1,-6,6,7,5,9,3,6,-3,-3,4,6,6,-2,7,-6,7,-5,3,10,-10,-8,6,8,-5,-6,2,10,5,-8,-6,-3,6,7,2,7,-6,-6,-1,4,5,8,3,-7,9,-3,10,7,-5,-5,-10,8,-9,10,9,7,-5,-5,-2,9,10,4,7,5,-6,9,-5,3,1,6,-1,-8,-10,7,7,-1,7,6,9,-5,4,-10,-1,2,10,6,3,-8,-6,2,10,-2,-1,2,-2,4,1,6,8,-5,-8,-10,2,-3,-2,4,10,-10,6,2,8,-3,-9,2,9,-10,8,-7,7,-1,-4,-2,2,-7,3,-6,5,-4,10,-6,3,5,3,4,-1,10,1,-2,-1,9,8,8,7,-10,8,-6,-9,4,3,3,-2,-1,-2,-4,-4,10,10,-5,-10,4,10,-10,-10,-2,-2,-9,9,-5,-5,-5,-4,10,5,-3,-2,-2,8,3,6,-3,2,3,5,2,9,-8,-4,-10,-4,5,-9,-8,1,-7,9,-5,3,10,-10,-8,2,3,-4,7,6,-4,9,4,-5,6,2,-5,-3,-2,9,-1,8,9,7,-10,7,1,-7,-5,5,-8,-5,1,8,-1,7,-8,-6,-7,-2,-7,10,-7,3,3,5,7,4,10,-5,-1,-10,5,5,-10,-8,7,7,7,6,-9,3,3,-6,-9,3,-1,-8,-1,-10,-1,-10,-6,-4,6,-5,3,1,-5,-10,-7,-4,-5,5,-7,-9,-3,9,-5,-4,-3,5,7,1,-4,6,-3,10,-5,6,-1,-10,-5,4,10,-2,-9,8,-5,-7,9,10,6,-1,-4,2,-3,10,1,-9,-3,3,-10,-9,-1,7,2,3,-9,10,1,-1,-4,6,6,-8,8,3,4,4,10,7,-9,1,-7,1,3,-4,-2,2,-6,7,2,2,3,3,-5,7,-3,2,-9,7,5,-7,-4,3,9,-3,-9,9,1,5,-2,-2,9,4,8,-10,-5,-8,-7,-10,-10,-9,10,-10,2,10,8,-9,-7,6,6,-6,4,1,-6,10,-6,6,-9,-8,2,4,-10,-6,8,2,-8,7,6,-5,-9,-10,-6,-10,3,-5,-5,-4,2,4,3,-3,8,-3,10,-9,-3,-5,-3,3,4,-10,6,8,3,-7,-9,7,2,4,-10,-2,-9,-3,3,-10,-3,-8,4,7,7,4,-6,-5,-5,-2,-1,-1,1,-5,-1,3,-5,2,-4,-7,-5,-7,5,1,1,6,-10,-6,-10,-7,-6,-4,-9,10,-7,6,-1,-3,5,6,-9], dtype = "int32")#candidate|1970|(624,)|const|int32
call_1969 = relay.TupleGetItem(func_1701_call(relay.reshape(const_1970.astype('int32'), [8, 13, 6]), relay.reshape(var_1964.astype('int8'), [117,]), relay.reshape(var_1965.astype('float64'), [240,]), relay.reshape(var_1966.astype('float64'), []), ), 9)
call_1971 = relay.TupleGetItem(func_1706_call(relay.reshape(const_1970.astype('int32'), [8, 13, 6]), relay.reshape(var_1964.astype('int8'), [117,]), relay.reshape(var_1965.astype('float64'), [240,]), relay.reshape(var_1966.astype('float64'), []), ), 9)
bop_1982 = relay.left_shift(var_1943.astype('int8'), var_1944.astype('int8')) # shape=(2, 10, 3)
func_275_call = mod.get_global_var('func_275')
func_279_call = mutated_mod.get_global_var('func_279')
const_1992 = relay.const([[-8.817415,-1.212904,9.239381,3.007356],[1.065343,1.114417,-0.287826,-5.457913],[1.510228,8.142261,5.335598,2.465374],[3.671581,3.099667,0.199168,3.956733],[-9.595596,8.420419,-2.679211,0.665309],[-1.246865,3.629208,6.475346,-4.784301],[-4.751393,1.660482,3.887011,7.239488],[9.540242,-2.194793,-6.421644,7.623084],[-6.564155,-4.526894,5.858732,-4.301430],[5.291555,-3.831432,-8.284579,8.413844],[-8.517567,-4.299915,8.512293,8.031712],[-6.713748,8.114771,8.866550,8.203233],[-5.465450,-3.770338,-0.744231,4.867020],[-5.883840,-2.534386,-2.448640,2.987864],[-8.677406,-2.526362,1.669416,-5.443521],[-5.290561,5.686447,-4.778095,1.478971],[-8.036087,-9.661942,-4.030993,-7.140797],[1.535930,2.941653,-7.563667,0.177801],[-6.698071,-3.002772,8.204335,-9.773378],[0.240589,1.119207,-8.562032,-7.783505],[-4.026515,6.376718,-2.408788,4.077925],[-8.883664,4.845299,-6.729784,8.813344],[5.277421,-9.462691,3.759469,-9.591991],[-5.682316,-8.634315,-5.190297,-2.912553],[-9.253217,9.362775,1.752939,-1.188297],[-4.373476,2.841530,-3.561251,8.118272],[-6.731841,-8.671286,-4.827490,-8.703197],[-4.111528,-1.067971,5.442814,3.431106]], dtype = "float64")#candidate|1992|(28, 4)|const|float64
call_1991 = func_275_call(relay.reshape(var_1966.astype('float64'), []), relay.reshape(const_1992.astype('float64'), [8, 14, 1]), )
call_1993 = func_275_call(relay.reshape(var_1966.astype('float64'), []), relay.reshape(const_1992.astype('float64'), [8, 14, 1]), )
bop_2015 = relay.greater(call_1963.astype('bool'), relay.reshape(var_1964.astype('bool'), relay.shape_of(call_1963))) # shape=(13, 3, 3)
bop_2018 = relay.greater(call_1967.astype('bool'), relay.reshape(var_1964.astype('bool'), relay.shape_of(call_1967))) # shape=(13, 3, 3)
var_2022 = relay.var("var_2022", dtype = "int32", shape = (1040,))#candidate|2022|(1040,)|var|int32
bop_2023 = relay.floor_mod(call_1969.astype('float64'), relay.reshape(var_2022.astype('float64'), relay.shape_of(call_1969))) # shape=(1040,)
bop_2026 = relay.floor_mod(call_1971.astype('float64'), relay.reshape(var_2022.astype('float64'), relay.shape_of(call_1971))) # shape=(1040,)
uop_2050 = relay.sigmoid(call_1963.astype('float32')) # shape=(13, 3, 3)
uop_2052 = relay.sigmoid(call_1967.astype('float32')) # shape=(13, 3, 3)
bop_2053 = relay.subtract(call_1963.astype('uint16'), relay.reshape(uop_2050.astype('uint16'), relay.shape_of(call_1963))) # shape=(13, 3, 3)
bop_2056 = relay.subtract(call_1967.astype('uint16'), relay.reshape(uop_2052.astype('uint16'), relay.shape_of(call_1967))) # shape=(13, 3, 3)
output = relay.Tuple([bop_1945,var_1965,var_1966,const_1970,bop_1982,call_1991,const_1992,bop_2015,bop_2023,bop_2053,])
output2 = relay.Tuple([bop_1945,var_1965,var_1966,const_1970,bop_1982,call_1993,const_1992,bop_2018,bop_2026,bop_2056,])
func_2063 = relay.Function([var_1943,var_1944,var_1964,var_1965,var_1966,var_2022,], output)
mod['func_2063'] = func_2063
mod = relay.transform.InferType()(mod)
var_2064 = relay.var("var_2064", dtype = "float32", shape = (2, 10, 1))#candidate|2064|(2, 10, 1)|var|float32
var_2065 = relay.var("var_2065", dtype = "float32", shape = (2, 10, 3))#candidate|2065|(2, 10, 3)|var|float32
var_2066 = relay.var("var_2066", dtype = "int8", shape = (117,))#candidate|2066|(117,)|var|int8
var_2067 = relay.var("var_2067", dtype = "float64", shape = (240,))#candidate|2067|(240,)|var|float64
var_2068 = relay.var("var_2068", dtype = "float64", shape = ())#candidate|2068|()|var|float64
var_2069 = relay.var("var_2069", dtype = "int32", shape = (1040,))#candidate|2069|(1040,)|var|int32
output = func_2063(var_2064,var_2065,var_2066,var_2067,var_2068,var_2069,)
func_2070 = relay.Function([var_2064,var_2065,var_2066,var_2067,var_2068,var_2069,], output)
mutated_mod['func_2070'] = func_2070
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2144 = relay.const([[[10],[10],[10]],[[10],[7],[-6]],[[9],[-10],[-9]],[[-7],[7],[-2]],[[-8],[5],[-6]]], dtype = "int8")#candidate|2144|(5, 3, 1)|const|int8
var_2145 = relay.var("var_2145", dtype = "int8", shape = (5, 3, 9))#candidate|2145|(5, 3, 9)|var|int8
bop_2146 = relay.multiply(const_2144.astype('int8'), var_2145.astype('int8')) # shape=(5, 3, 9)
bop_2167 = relay.logical_or(var_2145.astype('bool'), const_2144.astype('bool')) # shape=(5, 3, 9)
func_275_call = mod.get_global_var('func_275')
func_279_call = mutated_mod.get_global_var('func_279')
const_2171 = relay.const(0.313337, dtype = "float64")#candidate|2171|()|const|float64
const_2172 = relay.const([[-6.561866,5.378794,0.076722,1.231574,9.600285,5.684462,7.631526,-1.779317,1.743208,-2.423660,-2.876143,1.105530,0.666272,-9.566930,7.864389,-5.542215,-1.541814,9.643749,-3.199110,-1.335904,9.975969,-2.674584,7.979767,-2.573161,-5.696558,9.863893,-2.204460,-7.768690,-2.688853,-2.600769,-1.674029,8.072885,-1.698627,-9.003914,5.695977,-3.986661,3.662793,-8.432427,4.603119,3.825801,5.581168,-0.841308,-9.084480,-2.364697,-6.548120,-3.540782,2.040578,9.716776,-3.825923,-7.156284,9.799233,-5.582502,7.226482,7.823380,2.010302,-3.626169,6.856717,8.162338,1.740204,-8.329101,-3.226112,-8.173896,3.683878,2.887106,-4.191521,3.899124,-5.023578,-7.977714,-0.593551,-2.029450,-3.194856,9.584074,7.316744,4.762247,-0.143397,-7.411528,8.715133,-3.567998,9.827725,-8.488889,5.471442,4.840472,-1.560913,7.519731,4.761071,-9.800484,4.040331,3.899995,-4.032263,3.753968,5.412252,6.917761,4.230778,1.233777,5.690506,-8.700871,6.756996,-0.215859,8.473165,5.946951,2.654064,-7.822972,4.416192,-2.368675,5.379552,-8.604766,2.409449,8.416365,9.895765,3.390314,-6.560408,1.334130]], dtype = "float64")#candidate|2172|(1, 112)|const|float64
call_2170 = func_275_call(relay.reshape(const_2171.astype('float64'), []), relay.reshape(const_2172.astype('float64'), [8, 14, 1]), )
call_2173 = func_275_call(relay.reshape(const_2171.astype('float64'), []), relay.reshape(const_2172.astype('float64'), [8, 14, 1]), )
bop_2177 = relay.bitwise_xor(const_2171.astype('uint64'), const_2172.astype('uint64')) # shape=(1, 112)
output = relay.Tuple([bop_2146,bop_2167,call_2170,bop_2177,])
output2 = relay.Tuple([bop_2146,bop_2167,call_2173,bop_2177,])
func_2184 = relay.Function([var_2145,], output)
mod['func_2184'] = func_2184
mod = relay.transform.InferType()(mod)
var_2185 = relay.var("var_2185", dtype = "int8", shape = (5, 3, 9))#candidate|2185|(5, 3, 9)|var|int8
output = func_2184(var_2185)
func_2186 = relay.Function([var_2185], output)
mutated_mod['func_2186'] = func_2186
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2464 = relay.const([[[3.623455,2.334850,4.380079,0.123274,-7.211798,-6.806711,2.607628,5.862084,4.032286,-9.484465,8.575061],[8.460844,-9.701731,-4.848980,-2.330446,9.872354,-1.337628,0.428912,-0.984336,-7.147693,9.295049,-5.219561]],[[-5.282512,6.792989,-8.332132,-7.469795,-8.353236,-6.042131,2.134334,-0.364233,-5.495950,-5.787782,9.274291],[-6.315401,-9.768059,-1.001284,5.793384,9.900078,1.823898,6.504511,-7.679490,2.467791,9.130026,2.304376]],[[-8.087086,6.031598,8.202333,5.470916,5.518393,5.499386,-3.851719,4.121532,-4.738828,2.966627,6.419848],[7.656890,-6.941419,5.438784,-4.904462,8.834322,-3.583874,9.191291,-0.652776,-7.339813,-3.408865,7.188108]],[[-4.697402,6.978762,3.974502,-3.635235,0.801871,-7.790161,-8.456836,-9.267793,-4.632104,5.793541,-4.775759],[6.840628,7.492134,-3.270679,6.968571,0.882561,9.273914,-9.145978,7.692010,9.425743,-6.707374,2.526983]]], dtype = "float64")#candidate|2464|(4, 2, 11)|const|float64
var_2465 = relay.var("var_2465", dtype = "float64", shape = (4, 2, 11))#candidate|2465|(4, 2, 11)|var|float64
bop_2466 = relay.equal(const_2464.astype('bool'), relay.reshape(var_2465.astype('bool'), relay.shape_of(const_2464))) # shape=(4, 2, 11)
output = relay.Tuple([bop_2466,])
output2 = relay.Tuple([bop_2466,])
func_2475 = relay.Function([var_2465,], output)
mod['func_2475'] = func_2475
mod = relay.transform.InferType()(mod)
mutated_mod['func_2475'] = func_2475
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2476 = relay.var("var_2476", dtype = "float64", shape = (4, 2, 11))#candidate|2476|(4, 2, 11)|var|float64
func_2475_call = mutated_mod.get_global_var('func_2475')
call_2477 = func_2475_call(var_2476)
output = call_2477
func_2478 = relay.Function([var_2476], output)
mutated_mod['func_2478'] = func_2478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2509 = relay.var("var_2509", dtype = "int64", shape = (7, 3, 2))#candidate|2509|(7, 3, 2)|var|int64
const_2510 = relay.const([[[-8,-8],[-7,3],[-1,8]],[[2,-10],[7,2],[-9,-3]],[[-3,8],[5,-7],[-8,-2]],[[-4,-2],[3,10],[7,8]],[[4,-3],[3,5],[-4,-7]],[[1,-2],[1,-6],[10,9]],[[8,-9],[-3,-1],[9,7]]], dtype = "int64")#candidate|2510|(7, 3, 2)|const|int64
bop_2511 = relay.logical_xor(var_2509.astype('int64'), relay.reshape(const_2510.astype('int64'), relay.shape_of(var_2509))) # shape=(7, 3, 2)
func_1264_call = mod.get_global_var('func_1264')
func_1266_call = mutated_mod.get_global_var('func_1266')
var_2519 = relay.var("var_2519", dtype = "int32", shape = (1040,))#candidate|2519|(1040,)|var|int32
call_2518 = relay.TupleGetItem(func_1264_call(relay.reshape(var_2519.astype('int32'), [8, 10, 13])), 1)
call_2520 = relay.TupleGetItem(func_1266_call(relay.reshape(var_2519.astype('int32'), [8, 10, 13])), 1)
output = relay.Tuple([bop_2511,call_2518,var_2519,])
output2 = relay.Tuple([bop_2511,call_2520,var_2519,])
func_2524 = relay.Function([var_2509,var_2519,], output)
mod['func_2524'] = func_2524
mod = relay.transform.InferType()(mod)
var_2525 = relay.var("var_2525", dtype = "int64", shape = (7, 3, 2))#candidate|2525|(7, 3, 2)|var|int64
var_2526 = relay.var("var_2526", dtype = "int32", shape = (1040,))#candidate|2526|(1040,)|var|int32
output = func_2524(var_2525,var_2526,)
func_2527 = relay.Function([var_2525,var_2526,], output)
mutated_mod['func_2527'] = func_2527
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2609 = relay.var("var_2609", dtype = "uint16", shape = (8, 16, 11))#candidate|2609|(8, 16, 11)|var|uint16
var_2610 = relay.var("var_2610", dtype = "uint16", shape = (8, 16, 11))#candidate|2610|(8, 16, 11)|var|uint16
bop_2611 = relay.greater_equal(var_2609.astype('bool'), relay.reshape(var_2610.astype('bool'), relay.shape_of(var_2609))) # shape=(8, 16, 11)
uop_2615 = relay.asin(bop_2611.astype('float64')) # shape=(8, 16, 11)
func_1264_call = mod.get_global_var('func_1264')
func_1266_call = mutated_mod.get_global_var('func_1266')
const_2632 = relay.const([2,-8,-7,10,10,3,-3,5,-7,9,-2,2,9,7,7,-9,-3,-10,3,-10,-5,10,-5,-6,-6,8,9,5,-7,3,10,3,-2,6,2,-8,-8,5,-3,-8,7,-9,7,6,8,-5,5,4,10,1,-7,-9,7,-10,4,-9,3,9,2,3,-7,10,6,-9,5,8,-9,9,-10,6,5,7,3,-8,-3,7,-9,4,-5,2,3,4,-9,-7,9,3,9,2,5,-9,10,10,4,-5,-5,1,-8,-9,5,6,-9,10,8,-2,-3,-1,8,2,-5,1,5,9,6,-2,6,-6,6,5,-9,7,9,-5,-1,-8,-6,-8,2,6,-7,-10,-8,-8,-6,10,-3,5,7,8,7,-4,-7,-5,10,-1,-2,10,9,4,-2,-1,1,6,8,-6,1,9,2,9,3,-1,-10,5,-8,7,5,-6,3,-4,5,5,10,4,-8,-6,-2,8,-7,-5,3,-6,9,-7,-3,5,-3,-3,-6,6,1,-5,-10,-7,7,1,-4,-8,-10,-7,-8,-2,7,-3,-4,7,3,-8,-6,-10,-9,-10,-2,7,-5,-5,-9,3,4,-8,-5,2,6,10,7,4,-3,-6,-5,4,-9,5,10,3,2,-10,6,-4,4,-6,-2,-4,5,9,-4,1,6,1,-2,7,8,10,1,-6,-7,-3,-1,5,8,-5,7,-8,-10,8,-5,-7,-2,5,-2,-8,5,10,-10,-3,9,5,-4,10,1,-9,2,-7,4,8,5,6,7,8,-3,10,-9,-9,-7,8,-6,4,2,10,5,1,-4,-2,5,2,8,-7,6,-1,-4,1,-5,-7,6,2,-5,-1,-10,-4,2,-10,-8,9,-4,9,9,-9,2,-1,3,-10,-6,9,-6,10,9,-2,10,2,-4,-3,10,-9,-8,-3,-4,9,-5,-6,1,1,-10,6,-4,6,-9,1,1,-4,-10,7,-1,4,5,7,9,-6,10,-9,-2,2,-3,3,-5,-4,5,1,-10,-9,8,-10,5,6,-10,2,1,5,9,2,6,-10,-7,-4,7,-1,3,-4,1,-4,6,-3,9,2,8,3,8,-3,-4,2,-4,10,8,4,1,-8,-5,3,3,-4,-7,-4,-10,-2,6,10,8,-5,-2,-4,10,-2,-7,1,-10,10,3,4,1,-2,9,6,1,-4,4,-10,1,1,6,-9,-8,4,3,7,-2,-2,2,-8,1,10,9,-2,-1,-10,7,-1,-8,-8,-1,-4,5,-5,6,-2,5,-4,1,7,-9,8,8,-10,-4,-7,3,-9,-9,-7,-8,-2,2,-1,2,-6,-7,-6,2,3,-6,3,4,-10,-8,10,8,3,9,-5,-2,-3,-3,-5,-7,-5,9,-2,1,7,-1,-9,10,10,-6,2,6,-8,-2,-8,-9,2,10,-2,8,-2,10,-1,-3,-2,8,6,7,4,7,10,4,6,8,7,-9,6,-10,10,7,-4,-5,-10,-6,-6,6,-1,-10,6,-4,5,-2,5,-9,7,8,-3,-6,7,-5,5,1,-6,2,8,-5,-1,5,10,2,1,1,-5,5,8,-7,3,-10,8,3,10,-10,-4,1,-10,-1,3,3,10,-3,7,-5,9,-1,9,-4,1,-4,-10,1,5,1,6,9,-1,4,4,10,7,10,-7,-7,-8,-5,3,10,-8,10,-4,-9,3,5,-3,9,-8,5,5,4,-10,-4,5,-5,-5,-6,-3,-6,-8,-4,-5,2,3,-9,-9,2,3,4,-1,2,3,-9,-3,-5,-7,4,1,7,3,-2,10,4,1,-3,9,8,-1,10,-3,5,-1,2,-2,6,5,-10,2,-10,3,3,7,4,10,2,-9,3,-5,-4,6,-4,7,-7,7,-2,-1,10,8,-5,-10,-2,-7,10,2,9,-5,-8,-7,3,-2,-4,-8,10,10,4,6,2,-5,-3,8,2,9,8,-4,-9,4,9,10,9,7,-4,3,6,8,-2,5,2,3,7,-10,6,-4,7,-8,-5,-2,-8,5,-1,-5,-1,-9,2,4,-3,-10,10,6,7,6,1,-5,2,-4,4,8,-10,10,-10,3,-1,-2,6,-8,4,-9,1,3,-5,-8,6,6,-4,-8,-5,10,4,4,-2,5,8,10,-9,5,-9,2,-1,-1,-9,1,-2,7,-3,-7,7,10,7,7,2,-7,4,-8,2,-2,-10,2,-4,-9,-3,-3,-8,6,-2,1,-2,6,-2,3,-4,2,7,-8,-4,-1,3,7,-6,9,5,-1,10,5,2,3,-2,-1,-10,4,-4,-1,9,-8,-1,3,7,-3,1,-9,5,-10,7,-7,-8,1,6,-1,-9,9,6,-4,-6,-1,4,-2,2,-7,3,7,7,-3,1,-9,3,-10,10,5,2,6,8,4,-2,-10,-5,6,7,6,-3,8,-4,8,-4,-1,9,-2,-7,-8,7,4,6,-5,-7,-3,-7,8,-1,7,-9,4,8,-6,2,4,1,3,-5,-10,-3,-5,-6,-4,-1,-4,9,-10,-4,2,8,7,-1,7,-3,10,-2,8,10,-6,-3,1,8,1,-8,10,-6,-7,9,4,-5,-8,9,-4,6,-2,-10,-2,-6,2,5,-4,-1,9,7,10,8,-8,1,-10,3,7,6,-4,4,8,10,-2,3,10,7,-3,-9,-3,-4,-9,-4,-2,10,3,-6,5,3,8,9,7,10,-10,-2,1,-6,4,-1,-10,-4,6,6,-9,-7,4,-7,-3,-2,7,-7,-9,-1,5,-9,2,2,5,-7,6,1,3,2,4], dtype = "int32")#candidate|2632|(1040,)|const|int32
call_2631 = relay.TupleGetItem(func_1264_call(relay.reshape(const_2632.astype('int32'), [8, 10, 13])), 0)
call_2633 = relay.TupleGetItem(func_1266_call(relay.reshape(const_2632.astype('int32'), [8, 10, 13])), 0)
output = relay.Tuple([uop_2615,call_2631,const_2632,])
output2 = relay.Tuple([uop_2615,call_2633,const_2632,])
func_2655 = relay.Function([var_2609,var_2610,], output)
mod['func_2655'] = func_2655
mod = relay.transform.InferType()(mod)
mutated_mod['func_2655'] = func_2655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2655_call = mutated_mod.get_global_var('func_2655')
var_2657 = relay.var("var_2657", dtype = "uint16", shape = (8, 16, 11))#candidate|2657|(8, 16, 11)|var|uint16
var_2658 = relay.var("var_2658", dtype = "uint16", shape = (8, 16, 11))#candidate|2658|(8, 16, 11)|var|uint16
call_2656 = func_2655_call(var_2657,var_2658,)
output = call_2656
func_2659 = relay.Function([var_2657,var_2658,], output)
mutated_mod['func_2659'] = func_2659
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2877 = relay.const([[[5,9,-8,6,1,2,3,-1,1],[7,-1,4,7,-6,-6,-2,-10,-10],[6,-6,6,-4,-5,7,8,2,4],[-1,-7,-2,1,-2,3,-9,-8,5],[-4,-4,-6,9,-6,3,4,3,-10],[-4,8,-2,-10,1,8,3,-5,-5]],[[9,-6,2,8,-3,9,7,6,9],[-6,1,-8,-3,4,-9,2,-10,6],[-8,-10,-5,-6,-2,8,10,-2,-3],[-1,1,-8,-4,-10,-7,-8,1,7],[7,-8,6,10,-2,-9,3,5,7],[4,-2,-8,1,5,4,-7,5,-9]],[[5,-9,4,-4,-9,-10,-2,2,9],[2,-5,-1,1,9,-7,-7,10,1],[-3,10,4,2,4,-10,3,-2,-1],[7,-3,7,7,-4,1,2,10,10],[1,10,6,-8,-5,9,-5,9,-3],[10,2,8,7,9,-1,1,-1,-7]],[[4,7,-6,-5,-3,9,-1,-7,-2],[8,4,-7,6,-6,1,-3,-9,-2],[9,7,4,-7,6,-9,8,8,-5],[-6,4,-6,-7,10,1,2,3,-1],[7,1,-1,-2,6,-10,6,1,-8],[-7,-8,-1,-2,9,2,10,8,-5]],[[-10,8,8,8,-2,5,6,2,-10],[-2,-6,6,1,-9,7,-9,-2,6],[3,-5,-1,-4,4,-10,9,-7,-3],[4,10,4,-1,8,-8,-3,-6,-7],[-1,-5,-8,-9,5,3,10,-1,-5],[10,7,-9,-2,-7,1,7,-4,-6]],[[5,1,-3,9,4,-4,6,4,3],[8,6,-4,-1,10,3,-8,-5,-10],[3,-2,9,5,3,9,-3,-3,-4],[9,-10,-1,-6,3,7,-10,3,9],[-1,7,4,-9,-3,-9,1,-2,-6],[4,-1,-5,-10,-9,10,-7,2,4]],[[10,-6,-8,-1,2,10,6,4,-10],[-6,-8,5,4,-1,-6,4,-10,10],[-5,9,-4,-9,-2,8,4,4,10],[1,1,-10,-7,-2,5,9,1,-1],[-6,7,-3,-3,10,2,9,4,5],[5,-8,-1,9,5,5,-6,6,2]],[[-8,-8,-4,-6,4,-1,4,1,4],[-5,9,2,-3,8,10,9,-6,-6],[-7,-1,2,10,-9,8,-2,-6,-2],[-6,7,-4,-5,-6,-2,-9,-7,-2],[2,7,-4,7,-9,-6,3,5,7],[8,-4,10,9,5,-10,4,-10,5]]], dtype = "int16")#candidate|2877|(8, 6, 9)|const|int16
const_2878 = relay.const([[[1,5,-6,-9,-1,4,-7,-2,5],[2,-5,-6,4,3,5,-4,-7,-4],[-4,-9,-1,-4,9,5,7,10,6],[4,-5,-4,4,-9,-6,3,5,-6],[6,-7,8,-9,-9,7,-6,3,-8],[2,-6,-3,3,6,-8,4,-4,9]],[[5,7,6,9,-4,3,-1,4,-7],[4,4,10,4,-8,-5,10,-4,3],[-10,-1,-5,6,1,-7,-8,-10,3],[-6,4,-3,10,10,-10,-3,-5,5],[-1,10,-3,-2,-10,-3,2,7,-5],[4,4,9,-5,4,-9,2,2,-3]],[[8,5,-6,10,8,-2,10,8,10],[-7,2,-6,10,4,-9,6,10,7],[10,6,7,-2,-5,-10,-10,9,8],[-6,3,-2,-4,-4,-10,4,10,-9],[-9,-3,-1,-9,-10,4,6,-8,-7],[3,-1,-8,8,2,-2,-5,9,-7]],[[-1,-1,7,-8,-5,-1,-7,6,3],[-8,7,-1,10,-2,-5,1,-7,6],[-10,-8,9,7,-6,-3,-6,10,-10],[4,8,-8,5,9,-4,8,9,10],[5,-5,10,-10,6,2,2,5,2],[-4,-5,-10,10,-4,4,-7,9,10]],[[10,8,1,-2,-3,-4,2,-3,3],[-5,-3,-9,1,6,10,1,-7,5],[-8,2,6,8,5,5,7,10,7],[7,-7,-9,-8,-8,1,2,2,1],[-3,8,-10,-6,10,-9,5,-6,6],[1,10,-10,5,-10,-7,7,-10,9]],[[-5,-9,1,2,3,-10,7,-4,3],[8,5,4,-7,-3,3,8,-7,3],[-6,-5,6,9,-1,10,6,-1,-4],[-2,-8,-1,-7,1,10,1,10,7],[3,9,9,-7,7,-6,7,-5,5],[5,5,-3,9,-2,-9,-5,3,4]],[[5,-8,1,3,-4,-2,4,-10,-3],[-5,6,-3,4,-7,6,-10,-3,1],[-2,2,5,-4,1,-10,-6,1,10],[-7,4,3,3,10,4,4,10,-2],[9,-5,-10,9,10,6,-3,-6,6],[8,-7,-7,-2,8,6,8,-6,10]],[[-6,1,-8,-5,9,10,3,5,8],[2,5,-3,-10,10,2,1,10,5],[9,9,-3,5,6,-7,-6,-8,7],[-5,2,2,-7,5,6,-5,10,-5],[2,-9,2,5,-5,8,-4,-8,8],[4,4,3,7,-5,10,8,-9,-10]]], dtype = "int16")#candidate|2878|(8, 6, 9)|const|int16
bop_2879 = relay.multiply(const_2877.astype('int16'), relay.reshape(const_2878.astype('int16'), relay.shape_of(const_2877))) # shape=(8, 6, 9)
func_742_call = mod.get_global_var('func_742')
func_744_call = mutated_mod.get_global_var('func_744')
var_2885 = relay.var("var_2885", dtype = "float64", shape = (1, 112))#candidate|2885|(1, 112)|var|float64
call_2884 = relay.TupleGetItem(func_742_call(relay.reshape(var_2885.astype('float64'), [1, 16, 7])), 0)
call_2886 = relay.TupleGetItem(func_744_call(relay.reshape(var_2885.astype('float64'), [1, 16, 7])), 0)
output = relay.Tuple([bop_2879,call_2884,var_2885,])
output2 = relay.Tuple([bop_2879,call_2886,var_2885,])
func_2887 = relay.Function([var_2885,], output)
mod['func_2887'] = func_2887
mod = relay.transform.InferType()(mod)
var_2888 = relay.var("var_2888", dtype = "float64", shape = (1, 112))#candidate|2888|(1, 112)|var|float64
output = func_2887(var_2888)
func_2889 = relay.Function([var_2888], output)
mutated_mod['func_2889'] = func_2889
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2956 = relay.var("var_2956", dtype = "uint8", shape = (8, 8, 2))#candidate|2956|(8, 8, 2)|var|uint8
var_2957 = relay.var("var_2957", dtype = "uint8", shape = (8, 8, 2))#candidate|2957|(8, 8, 2)|var|uint8
bop_2958 = relay.bitwise_or(var_2956.astype('uint8'), relay.reshape(var_2957.astype('uint8'), relay.shape_of(var_2956))) # shape=(8, 8, 2)
output = bop_2958
output2 = bop_2958
func_2962 = relay.Function([var_2956,var_2957,], output)
mod['func_2962'] = func_2962
mod = relay.transform.InferType()(mod)
mutated_mod['func_2962'] = func_2962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2962_call = mutated_mod.get_global_var('func_2962')
var_2964 = relay.var("var_2964", dtype = "uint8", shape = (8, 8, 2))#candidate|2964|(8, 8, 2)|var|uint8
var_2965 = relay.var("var_2965", dtype = "uint8", shape = (8, 8, 2))#candidate|2965|(8, 8, 2)|var|uint8
call_2963 = func_2962_call(var_2964,var_2965,)
output = call_2963
func_2966 = relay.Function([var_2964,var_2965,], output)
mutated_mod['func_2966'] = func_2966
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3411 = relay.var("var_3411", dtype = "float64", shape = (5, 14, 6))#candidate|3411|(5, 14, 6)|var|float64
uop_3412 = relay.asin(var_3411.astype('float64')) # shape=(5, 14, 6)
const_3417 = relay.const([[[-8.048532,-4.496282,-7.658231,9.622319,-6.038845,4.469673],[5.136944,2.225458,7.391998,-5.451033,-9.830183,-2.143886],[3.913357,0.971400,-1.639324,0.603120,-5.726362,5.078544],[-0.645169,9.512661,-4.632069,-7.606848,-6.604515,-5.534114],[-9.833042,7.901262,-8.233323,-3.398458,-1.880957,9.031896],[-2.456127,1.356343,-4.366530,-7.084393,9.929993,1.364428],[-1.432549,-0.143725,9.115226,-3.956347,3.351081,5.055038],[-1.825934,4.949752,4.736696,2.048472,1.572008,8.832532],[8.826015,-7.423240,7.148844,-9.600644,8.000480,-8.472105],[-4.660819,4.247387,-2.354068,4.232350,-8.611576,-8.961620],[4.047555,-9.586165,-1.569289,-9.881803,8.492420,4.609767],[8.543373,-2.591042,-9.264393,2.075212,-0.898294,-5.180359],[7.716504,7.290514,-0.745885,-8.997466,0.410176,-6.337016],[-9.435820,-9.399238,4.924913,-9.419662,6.027599,-1.703196]],[[-0.430147,-5.844743,-2.812420,9.124552,8.027325,3.646348],[-2.895844,8.161402,-3.078431,-4.792274,4.858747,-0.440216],[-3.828150,7.743653,-5.271043,9.990749,5.678415,2.915068],[-1.513010,-6.348201,8.469502,9.905210,1.795233,3.375856],[-5.627338,-1.097906,-3.489543,-5.310434,4.511714,6.002700],[3.795667,-1.574278,-9.467813,-1.546293,6.470863,-1.201804],[6.565188,-9.008462,5.260688,-6.792044,8.717981,1.991650],[-4.224597,-9.450555,0.834421,6.174509,-8.330412,0.256165],[6.989840,0.019060,-7.278661,9.670318,2.140193,-2.247708],[1.894124,-7.513593,0.148781,9.735935,-7.415546,-5.702664],[8.901551,-2.913367,8.935509,-3.752043,-4.299557,4.675111],[-6.097854,-0.324554,8.414255,-6.478270,4.479988,8.190097],[-6.774695,-8.989585,4.543876,-2.275360,-7.121550,-6.442335],[-8.649744,-6.358413,5.326436,-3.796385,-5.946999,2.809826]],[[2.944466,3.797487,7.368121,-7.147073,2.182477,-9.103950],[5.455738,6.260355,5.457040,7.060530,-5.748201,-6.861559],[-4.429797,0.266789,0.774820,-3.840118,-4.301954,-4.131486],[-6.074685,4.076564,5.020732,-3.883473,-0.447316,7.401173],[-9.818539,-2.666620,-5.552733,-6.899389,4.250104,-7.668343],[-8.045180,5.533369,-2.956689,-5.386331,-7.701128,-7.038577],[5.813740,-7.137913,-9.665429,-1.831530,9.426500,8.456239],[7.862539,-9.969515,-3.428985,-0.245121,2.135794,5.147156],[5.829755,-0.743797,-9.328642,9.566698,-4.829585,4.490578],[7.789912,7.642237,-1.577288,4.015922,-9.421809,-9.241425],[-2.171713,0.979822,1.030245,1.792142,5.021704,-6.321320],[-3.201222,5.551760,-6.483266,2.631139,-0.659680,-1.704724],[1.214212,4.490498,5.287792,-3.394305,-6.138573,6.579710],[7.000647,-2.196361,-6.380195,-5.588389,-5.204704,9.115665]],[[-1.780335,4.951491,4.471373,-9.881258,5.889189,-5.433924],[9.989917,-9.542896,1.556940,7.151188,-0.096544,3.860534],[4.835409,5.263692,8.884617,-7.709052,4.532250,2.780664],[3.477657,1.429238,4.082696,4.852907,7.912795,-2.797260],[4.329811,5.127598,0.233037,-1.920051,-2.817204,-6.914680],[9.697086,1.077422,-7.073247,5.637498,-2.855020,-6.932765],[5.501982,9.229110,2.615090,5.289791,8.717760,-3.193843],[5.709937,2.369828,-8.844046,7.494692,-7.269812,-0.713183],[1.068520,-4.694920,9.160535,9.186258,-8.615222,6.322284],[-3.474169,-2.515663,1.498283,-4.717407,-1.688799,-4.698473],[-4.438562,-1.922755,-5.920190,3.257919,-6.927433,-5.609762],[3.592743,-9.051850,-6.880648,8.166071,-3.057593,-4.984061],[3.279983,-1.294688,9.284867,-3.051830,4.538509,-3.408321],[-9.383543,4.275374,-6.103654,-0.064892,-8.414693,6.484803]],[[-2.447811,4.545891,5.579585,-8.062968,9.176912,-3.742268],[3.766050,-5.011540,1.792557,-1.750410,-6.091752,-5.374492],[6.803353,-9.867248,-2.807603,-8.435750,1.909578,2.916838],[-1.719320,6.577764,2.848483,-8.995163,-9.120729,7.819087],[6.553286,5.819741,3.909168,-7.813942,-6.390662,-0.790798],[8.024929,9.951636,4.248014,4.732546,-0.771040,9.652524],[-1.276462,-4.629378,-9.309096,-2.440978,-3.235353,7.394761],[6.788919,-6.569951,4.500017,-1.265735,-7.377602,3.291125],[7.209984,5.345633,6.245180,9.683661,-6.121480,-2.369644],[4.349000,-0.194320,2.935724,6.872127,-5.757104,-2.359663],[5.626416,-4.251685,9.832511,1.040761,-2.497053,-6.894319],[1.532766,2.810268,-7.376348,-8.303964,-4.133946,8.233423],[-0.026722,-1.696748,-2.951985,-8.498694,-2.823802,4.334761],[-9.010177,-7.864381,4.978174,-4.768260,-6.689336,-8.464997]]], dtype = "float64")#candidate|3417|(5, 14, 6)|const|float64
bop_3418 = relay.minimum(uop_3412.astype('float64'), relay.reshape(const_3417.astype('float64'), relay.shape_of(uop_3412))) # shape=(5, 14, 6)
func_2184_call = mod.get_global_var('func_2184')
func_2186_call = mutated_mod.get_global_var('func_2186')
const_3426 = relay.const([-1,-6,1,7,-3,-6,-8,-2,-9,-3,-9,4,1,-7,10,1,-7,4,2,-9,10,5,-4,-3,7,3,-7,6,-5,-4,-10,-6,-2,7,2,3,5,-3,7,4,-2,-2,2,-6,8,1,4,7,10,2,-3,-7,4,-7,-6,5,-6,8,4,6,-5,-1,6,7,-5,-1,5,-7,10,8,-5,-3,-1,-10,4,-8,-2,-9,9,8,6,-4,-9,-8,5,2,-2,-10,5,-7,-5,-9,-3,7,4,-8,5,1,-3,3,-6,7,-4,-10,-6,-10,-3,-7,-9,8,10,-4,-6,-10,-6,6,-2,10,1,-4,1,7,5,8,-10,7,-2,6,-6,8,1,-3,-8,-8,-7], dtype = "int8")#candidate|3426|(135,)|const|int8
call_3425 = relay.TupleGetItem(func_2184_call(relay.reshape(const_3426.astype('int8'), [5, 3, 9])), 3)
call_3427 = relay.TupleGetItem(func_2186_call(relay.reshape(const_3426.astype('int8'), [5, 3, 9])), 3)
output = relay.Tuple([bop_3418,call_3425,const_3426,])
output2 = relay.Tuple([bop_3418,call_3427,const_3426,])
func_3434 = relay.Function([var_3411,], output)
mod['func_3434'] = func_3434
mod = relay.transform.InferType()(mod)
mutated_mod['func_3434'] = func_3434
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3435 = relay.var("var_3435", dtype = "float64", shape = (5, 14, 6))#candidate|3435|(5, 14, 6)|var|float64
func_3434_call = mutated_mod.get_global_var('func_3434')
call_3436 = func_3434_call(var_3435)
output = call_3436
func_3437 = relay.Function([var_3435], output)
mutated_mod['func_3437'] = func_3437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3456 = relay.var("var_3456", dtype = "float64", shape = (12, 4, 9))#candidate|3456|(12, 4, 9)|var|float64
uop_3457 = relay.sinh(var_3456.astype('float64')) # shape=(12, 4, 9)
output = relay.Tuple([uop_3457,])
output2 = relay.Tuple([uop_3457,])
func_3469 = relay.Function([var_3456,], output)
mod['func_3469'] = func_3469
mod = relay.transform.InferType()(mod)
mutated_mod['func_3469'] = func_3469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3470 = relay.var("var_3470", dtype = "float64", shape = (12, 4, 9))#candidate|3470|(12, 4, 9)|var|float64
func_3469_call = mutated_mod.get_global_var('func_3469')
call_3471 = func_3469_call(var_3470)
output = call_3471
func_3472 = relay.Function([var_3470], output)
mutated_mod['func_3472'] = func_3472
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3591 = relay.var("var_3591", dtype = "float32", shape = (1, 9, 8))#candidate|3591|(1, 9, 8)|var|float32
uop_3592 = relay.atanh(var_3591.astype('float32')) # shape=(1, 9, 8)
bop_3595 = relay.subtract(uop_3592.astype('float32'), relay.reshape(var_3591.astype('float32'), relay.shape_of(uop_3592))) # shape=(1, 9, 8)
func_2063_call = mod.get_global_var('func_2063')
func_2070_call = mutated_mod.get_global_var('func_2070')
var_3607 = relay.var("var_3607", dtype = "float32", shape = (5, 4))#candidate|3607|(5, 4)|var|float32
var_3608 = relay.var("var_3608", dtype = "float32", shape = (1, 60))#candidate|3608|(1, 60)|var|float32
const_3609 = relay.const([[2,-7,-1,-3,6,-3,-3,-9,1,4,-6,2,9,-9,-6,3,6,-8,10,6,-3,4,7,8,5,-8,6,-1,2,10,-4,5,-6,-9,-4,-4,-5,1,-4,-9,-3,-1,7,-6,3,-8,-10,1,3,10,-8,-6,-3,-4,-8,-5,10,-3,-8,-7,-4,2,-7,8,4,9,4,-4,2,3,10,4,6,8,-4,-6,9,2,10,6,-10,5,-10,-1,8,-4,-4,10,-4,3,-3,-8,-7,-10,2,1,1,-4,-5,-5,2,1,10,5,2,-3,9,9,4,2,-5,8,9,1,8,6,7]], dtype = "int8")#candidate|3609|(1, 117)|const|int8
var_3610 = relay.var("var_3610", dtype = "float64", shape = (240,))#candidate|3610|(240,)|var|float64
const_3611 = relay.const(-4.252588, dtype = "float64")#candidate|3611|()|const|float64
var_3612 = relay.var("var_3612", dtype = "int32", shape = (1040,))#candidate|3612|(1040,)|var|int32
call_3606 = relay.TupleGetItem(func_2063_call(relay.reshape(var_3607.astype('float32'), [2, 10, 1]), relay.reshape(var_3608.astype('float32'), [2, 10, 3]), relay.reshape(const_3609.astype('int8'), [117,]), relay.reshape(var_3610.astype('float64'), [240,]), relay.reshape(const_3611.astype('float64'), []), relay.reshape(var_3612.astype('int32'), [1040,]), ), 0)
call_3613 = relay.TupleGetItem(func_2070_call(relay.reshape(var_3607.astype('float32'), [2, 10, 1]), relay.reshape(var_3608.astype('float32'), [2, 10, 3]), relay.reshape(const_3609.astype('int8'), [117,]), relay.reshape(var_3610.astype('float64'), [240,]), relay.reshape(const_3611.astype('float64'), []), relay.reshape(var_3612.astype('int32'), [1040,]), ), 0)
output = relay.Tuple([bop_3595,call_3606,var_3607,var_3608,const_3609,var_3610,const_3611,var_3612,])
output2 = relay.Tuple([bop_3595,call_3613,var_3607,var_3608,const_3609,var_3610,const_3611,var_3612,])
func_3637 = relay.Function([var_3591,var_3607,var_3608,var_3610,var_3612,], output)
mod['func_3637'] = func_3637
mod = relay.transform.InferType()(mod)
var_3638 = relay.var("var_3638", dtype = "float32", shape = (1, 9, 8))#candidate|3638|(1, 9, 8)|var|float32
var_3639 = relay.var("var_3639", dtype = "float32", shape = (5, 4))#candidate|3639|(5, 4)|var|float32
var_3640 = relay.var("var_3640", dtype = "float32", shape = (1, 60))#candidate|3640|(1, 60)|var|float32
var_3641 = relay.var("var_3641", dtype = "float64", shape = (240,))#candidate|3641|(240,)|var|float64
var_3642 = relay.var("var_3642", dtype = "int32", shape = (1040,))#candidate|3642|(1040,)|var|int32
output = func_3637(var_3638,var_3639,var_3640,var_3641,var_3642,)
func_3643 = relay.Function([var_3638,var_3639,var_3640,var_3641,var_3642,], output)
mutated_mod['func_3643'] = func_3643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3995 = relay.var("var_3995", dtype = "float64", shape = (2, 12, 3))#candidate|3995|(2, 12, 3)|var|float64
uop_3996 = relay.cos(var_3995.astype('float64')) # shape=(2, 12, 3)
output = uop_3996
output2 = uop_3996
func_3999 = relay.Function([var_3995,], output)
mod['func_3999'] = func_3999
mod = relay.transform.InferType()(mod)
var_4000 = relay.var("var_4000", dtype = "float64", shape = (2, 12, 3))#candidate|4000|(2, 12, 3)|var|float64
output = func_3999(var_4000)
func_4001 = relay.Function([var_4000], output)
mutated_mod['func_4001'] = func_4001
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4082 = relay.var("var_4082", dtype = "uint16", shape = (2, 11, 8))#candidate|4082|(2, 11, 8)|var|uint16
const_4083 = relay.const([[[-1,-3,9,8,3,2,4,-3],[4,-2,8,4,6,-4,-9,1],[9,8,3,-6,7,-4,9,-7],[5,-1,-5,-2,4,-1,8,2],[10,-7,-6,-1,8,-8,-7,1],[2,-7,-8,-1,-7,-9,6,2],[3,-9,2,-4,7,9,-6,-6],[-2,-7,-3,7,3,-3,-7,-5],[4,-1,-5,-7,8,-8,6,-5],[8,3,2,-9,5,-4,-7,-7],[4,-7,3,-5,10,9,7,4]],[[-8,7,6,7,-10,-6,-1,-7],[-10,-5,-10,6,-4,-6,9,-8],[-7,-10,-3,-4,7,9,4,-4],[4,-9,-10,4,10,-6,-8,-9],[-1,7,4,-8,-3,1,-7,-4],[-4,5,8,7,7,-8,-8,-1],[-3,-3,-2,-10,-10,-4,5,5],[-9,-3,-10,-4,4,4,-8,-10],[-5,-2,6,4,4,-2,-4,-8],[7,-9,-4,6,6,9,-8,8],[6,10,1,-7,-2,6,5,-10]]], dtype = "uint16")#candidate|4083|(2, 11, 8)|const|uint16
bop_4084 = relay.bitwise_or(var_4082.astype('uint16'), relay.reshape(const_4083.astype('uint16'), relay.shape_of(var_4082))) # shape=(2, 11, 8)
func_706_call = mod.get_global_var('func_706')
func_709_call = mutated_mod.get_global_var('func_709')
var_4090 = relay.var("var_4090", dtype = "float64", shape = (240,))#candidate|4090|(240,)|var|float64
call_4089 = relay.TupleGetItem(func_706_call(relay.reshape(var_4090.astype('float64'), [10, 6, 4])), 0)
call_4091 = relay.TupleGetItem(func_709_call(relay.reshape(var_4090.astype('float64'), [10, 6, 4])), 0)
uop_4103 = relay.atanh(call_4089.astype('float64')) # shape=(10, 6, 4)
uop_4105 = relay.atanh(call_4091.astype('float64')) # shape=(10, 6, 4)
func_597_call = mod.get_global_var('func_597')
func_600_call = mutated_mod.get_global_var('func_600')
const_4111 = relay.const([[-5,-1,10,2,1,-5,-9,-7,7,2,4,-2,-9,5,6,-7,-10,2,6,-1,-1,7,-7,8,-4,6,6,2,4,3,-7,-10,7,-10,5,8,-10,-9,1,1,-8,3,4,9,-3,7,-1,8,9,10,9,-2,-5,8,-6,9,-7,-10,-8,-8,-1,2,3,3,7,-8,1,9,-10,-2,-7,2,3,-6,1,1,-10,6,-2,9,-2,10,-6,-1,-8,-3,-4,-1,-7,10,-3,-9,-6,10,6,1,-6,-1,-2,7,5,-6,-4,-8,6,-8,2,3,2,6,-1,-6,-10,9,1,-3,-7,9,-8,4,-6,-2,-10,6,8,-10,1,-6,-4,2,-1,6,-3,-1,2,6,8,8,-5,-9,-8,-2,6,-9,-4,-8,7,-5,8,3,9,-2,7,4,4,-3,-2,-1,-4,9,-3,-3,2,3,3,-4,3,-1,7,10,-7,-4,-1,-7,7,-3,4,1,5,10,7,-2,1,1,-7,9,-6,-2,8,-2,-7,5,4,-1,-9,-8,-6,-9,2,-5,10,4,7,-3,-7,-1,-3,-8,-2,7,-2,10,-3,-5,6,5,-3,2,-5,6,3,8,4,4,-7,-7,-3,-6,-5,-5,-10,7,-7,7,7,4,3,-5,-8,-2,9,3,-8,10,10,4,-4,-7,-1,5,-8,-7,10,7,-10,-4,-2,-1,-6,4,8,7,-9,5,7,-8,-8,7,5,-8,6,-4,-7,-9,-7,8,-2,-7,7,1,-1,-2,-3,7,-4,-5,-4,-9,5,5,-4,5,-8,-7,6,3,-8,-6,-4,9,7,8,-4,-6,8,8,6,8,-10,3,4,3,10,2,-2,2,4,5,-9,-6,-2,-7,-10,4,-1,-5,-2,-6,8,6,9,-1,8,-3,-7,-3,3,-9,4,-4,2,-9,-8,9,-5,7,-3,-8,-4,-9,10,-4,-2,8,8,-1,1,-9,7,6,2,-5,-2,7,8,9,-8,2,7,3,2,-8,-6,-2,4,4,-1,-3,3,-1,6,8,-4,-1,10,6,2,5,-2,10,6,4,-2,-10,-8,8,10,9,8,-5,-8,2,-7,-5,-3,7,-10,9,-9,-8,10,3,6,4,-4,4,-9,9,1,-7,10,6,-8,-1,-3,-5,7,-5,-10,6,-7,3,5,4,-7,-2,8,6,-4,2,-5,2,-5,-4,-5,8,-1,10,4,-1,6,9,-5,7,-1,9,-5,10,10,-4,6,-9,-4,2,2,10,-9,3,3,5,10,-2,9,-5,-7,3,3,-2,-2,7,-8,-3,6,-2,5,-1,-3,10,-6,-10,5,6,-7,7,3,-3,-10,9,-2,5,10,4,10,3,10,6,-7,3,3,3,-3,8,-3,-9,9,2,-9,-1,2,-4,-9,8,-7,2,-3,7,-9,9,-3,7,-2,9,7,2,-6,-2,7,3,-10,-3,7,-9,6,-10,-6,-8,8,-10,9,-4,8,-2,-3,8,-7,10,-4,2,-7,-6,-9,-3,-4,-2,7,-8,10,-10,2,-10,-3,-4,-7,7,-9,9,7,-5,-7,4,10,8,1,-3,-8,-3,-3,-9,3,6,-9,10,-9,9,-9,-9,-4,-1,7,-1,8,7,2,2,2,-7,-5,8,-1,1,7,-3,8,-9,7,-9,3,4,4,1,4,-6,7,2,-1,2,-4,1,6,-5,10,-7,10,8,-7,-9,-9,7,-10,-5,-3,-9,1,-7,1,-9,-5,-4,8,-8,-1,4,-5,7,2,-6,-9,4,-4,7,2,-8,2,4,4,-5,-1,6,-1,-9,4,-10,10,-3,4,2,7,2,2,1,8,-2,4,4,2,8,1,-1,1,-7,-5,10,-1,-3,-8,8,10,-6,-1,-10,6,-10,-6,-9,-6,-10,7,5,2,-8,4,-8,-7,9,-7,-10,-6,3,1,9,-8,10,-8,-1,3,-3,-7,-1,7,2,-10,-10,-3,8,-5,-3,5,10,8,-6,-3,10,-9,-4,-5,-4,-1,1,7,9,-4,7,-6,3,-8,-7,-7,3,-9,4,-5,9,3,1,-9,2,-3,-3,7,4,-4,-8,-9,-6,-8,-6,-9,1,5,1,-2,-9,3,-5,9,-8,4,5,7,-6,4,-9,7,6,-2,5,-10,-1,6,5,-9,10,9,7,-7,-10,-2,-5,-9,-10,5,-8,-2,2,-7,5,2,-7,1,6,6,-10,-6,-9,3,7,5,-7,-4,-6,5,-7,9,9,-10,9,-2,-6,3,5,-5,5,10,8,10,5,5,4,7,-5,10,-5,-2,-3,6,-2,10,10,1,4,-2,-7,-2,-3,6,-6,-2,1,1,1,-1,8,-2,3,-4,3,5,-5,4,-6,5,-9,2,-3,5,2,-6,-9,-7,-2,-9,-9,6,1,-1,10,-10,3,10,-7,-9,-1,7,5,-2,9,1,-6,-1,9,-4,5,8,6,-3,3,1,-7,3,6,-7,9,-2,-7,1,-2,6,9,-7,-4,-9,10,-10,-10,-9,10,-1,5,3,-4,-9,9,6,-9,-4,-3,9,-1,-2,-2,7,-8,3,10,5,-10,2,2,-7,3,4,-2,-3,2,8,-8,-7,3,-8,-6,1,-1,-5,-3,2,6,3,-8,5,-2,3,-7,-4,10,5,9,2,-9,1,-1,-9,10,5,6,10,-2,-8,3,9,-8,-9,-2,-4,-8,-2,-9,-4,-3,-9,-10,9,-9,-10,2,6,-6,4,-6,7,-5,-10,2,-5,4,3,10,7,2,-4,7,-2,-4,8,-9,1,6,10,7,2,-7,7,-1,-9,-2,-7,2,1,-8,-8,-8,4,-2,3,-10,-1,3,6,-4,7,9,-6,-3,-9,-8,9,5,9,8,7,8,-6,-7,5,9,-7,3,-9,2,9,-4,5,2,5,7,-7,-9,8,-7,-7,-4,-3,8,5,-10,10,-3,-3,1,4,-1,5,-5,-8,-5,-9,9,-7,-5,-9,-5,1,5,2,4,-8,-8,-5,-7,5,7,-2,-7,-5,9,7,4,3,-2,9,-2,10,-9,5,9,-9,-6,-5,8,-5,-6,3,2,1,-1,-1,7,-5,8,4,3,-6,-2,2,-2,9,1,10,-7,7,-3,-3,2,9,-9,1,-6,-1,-9,8,-9,-1,-8,4,-4,-5,1,-1,7,5,3,-8,-3,7,1,3,-2,-2,5,-8,-9,10,-1,3,1,4,5,4,2,-2,-7,-4,-9,-3,-4,-7,-4,-3,10,-4,5,6,3,-10,3,7,8,1,8,4,-5,-3,10,5,-3,2,1,9,-9,-7,2,-2,-5,-8,7,5,4,10,-5,5,-5,5,6,8,-3,-8,10,3,-3,8,-4,-1,-10,-4,5,10,-6,-6,7,8,2,4,5,5,10,-9,4,-3,-2,-9,4,-9,-4,-3,-10,2,-6,-3,-6,1,2,10,-2,2,10,1,1,-6,-4,6,9,-7,6,8,-10,2,10,10,7,-6,-3,2,-6,9,-9,-5,6,-5,-5,6,3,7,-2,-5,-7,5,-7,-6,-7,-2,-1,-5,2,9,5,1,5,-1,-3,5,7,-3,-9,7,1,10,-8,-9,7,6,-5,-9,-4,-5,-7,10,2,-10,10,5,-9,-5,2,-5,-4,-10,-7,9,-9,10,-7,-4,2,8,-3,5,-9,-9,6,1,-5,9,10,-3,2,-9,-2,8,8,5,-8,-3,3,-8,-6,-1,10]], dtype = "uint8")#candidate|4111|(1, 1386)|const|uint8
call_4110 = relay.TupleGetItem(func_597_call(relay.reshape(const_4111.astype('uint8'), [9, 11, 14])), 0)
call_4112 = relay.TupleGetItem(func_600_call(relay.reshape(const_4111.astype('uint8'), [9, 11, 14])), 0)
func_2887_call = mod.get_global_var('func_2887')
func_2889_call = mutated_mod.get_global_var('func_2889')
var_4116 = relay.var("var_4116", dtype = "float64", shape = (112,))#candidate|4116|(112,)|var|float64
call_4115 = relay.TupleGetItem(func_2887_call(relay.reshape(var_4116.astype('float64'), [1, 112])), 0)
call_4117 = relay.TupleGetItem(func_2889_call(relay.reshape(var_4116.astype('float64'), [1, 112])), 0)
uop_4120 = relay.acosh(uop_4103.astype('float64')) # shape=(10, 6, 4)
uop_4122 = relay.acosh(uop_4105.astype('float64')) # shape=(10, 6, 4)
output = relay.Tuple([bop_4084,var_4090,call_4110,const_4111,call_4115,var_4116,uop_4120,])
output2 = relay.Tuple([bop_4084,var_4090,call_4112,const_4111,call_4117,var_4116,uop_4122,])
func_4124 = relay.Function([var_4082,var_4090,var_4116,], output)
mod['func_4124'] = func_4124
mod = relay.transform.InferType()(mod)
mutated_mod['func_4124'] = func_4124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4124_call = mutated_mod.get_global_var('func_4124')
var_4126 = relay.var("var_4126", dtype = "uint16", shape = (2, 11, 8))#candidate|4126|(2, 11, 8)|var|uint16
var_4127 = relay.var("var_4127", dtype = "float64", shape = (240,))#candidate|4127|(240,)|var|float64
var_4128 = relay.var("var_4128", dtype = "float64", shape = (112,))#candidate|4128|(112,)|var|float64
call_4125 = func_4124_call(var_4126,var_4127,var_4128,)
output = call_4125
func_4129 = relay.Function([var_4126,var_4127,var_4128,], output)
mutated_mod['func_4129'] = func_4129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4308 = relay.var("var_4308", dtype = "float32", shape = (11, 8, 1))#candidate|4308|(11, 8, 1)|var|float32
uop_4309 = relay.sinh(var_4308.astype('float32')) # shape=(11, 8, 1)
uop_4326 = relay.asinh(uop_4309.astype('float32')) # shape=(11, 8, 1)
var_4329 = relay.var("var_4329", dtype = "float32", shape = (11, 8, 14))#candidate|4329|(11, 8, 14)|var|float32
bop_4330 = relay.bitwise_or(uop_4309.astype('int64'), var_4329.astype('int64')) # shape=(11, 8, 14)
func_1701_call = mod.get_global_var('func_1701')
func_1706_call = mutated_mod.get_global_var('func_1706')
var_4336 = relay.var("var_4336", dtype = "int32", shape = (624,))#candidate|4336|(624,)|var|int32
var_4337 = relay.var("var_4337", dtype = "int8", shape = (117,))#candidate|4337|(117,)|var|int8
var_4338 = relay.var("var_4338", dtype = "float64", shape = (240,))#candidate|4338|(240,)|var|float64
const_4339 = relay.const(1.471864, dtype = "float64")#candidate|4339|()|const|float64
call_4335 = relay.TupleGetItem(func_1701_call(relay.reshape(var_4336.astype('int32'), [8, 13, 6]), relay.reshape(var_4337.astype('int8'), [117,]), relay.reshape(var_4338.astype('float64'), [240,]), relay.reshape(const_4339.astype('float64'), []), ), 2)
call_4340 = relay.TupleGetItem(func_1706_call(relay.reshape(var_4336.astype('int32'), [8, 13, 6]), relay.reshape(var_4337.astype('int8'), [117,]), relay.reshape(var_4338.astype('float64'), [240,]), relay.reshape(const_4339.astype('float64'), []), ), 2)
bop_4341 = relay.logical_and(uop_4326.astype('bool'), call_4335.astype('bool')) # shape=(11, 8, 117)
bop_4344 = relay.logical_and(uop_4326.astype('bool'), call_4340.astype('bool')) # shape=(11, 8, 117)
output = relay.Tuple([bop_4330,var_4336,var_4337,var_4338,const_4339,bop_4341,])
output2 = relay.Tuple([bop_4330,var_4336,var_4337,var_4338,const_4339,bop_4344,])
func_4348 = relay.Function([var_4308,var_4329,var_4336,var_4337,var_4338,], output)
mod['func_4348'] = func_4348
mod = relay.transform.InferType()(mod)
mutated_mod['func_4348'] = func_4348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4348_call = mutated_mod.get_global_var('func_4348')
var_4350 = relay.var("var_4350", dtype = "float32", shape = (11, 8, 1))#candidate|4350|(11, 8, 1)|var|float32
var_4351 = relay.var("var_4351", dtype = "float32", shape = (11, 8, 14))#candidate|4351|(11, 8, 14)|var|float32
var_4352 = relay.var("var_4352", dtype = "int32", shape = (624,))#candidate|4352|(624,)|var|int32
var_4353 = relay.var("var_4353", dtype = "int8", shape = (117,))#candidate|4353|(117,)|var|int8
var_4354 = relay.var("var_4354", dtype = "float64", shape = (240,))#candidate|4354|(240,)|var|float64
call_4349 = func_4348_call(var_4350,var_4351,var_4352,var_4353,var_4354,)
output = call_4349
func_4355 = relay.Function([var_4350,var_4351,var_4352,var_4353,var_4354,], output)
mutated_mod['func_4355'] = func_4355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4534 = relay.var("var_4534", dtype = "float32", shape = (6, 9, 16))#candidate|4534|(6, 9, 16)|var|float32
uop_4535 = relay.sqrt(var_4534.astype('float32')) # shape=(6, 9, 16)
output = relay.Tuple([uop_4535,])
output2 = relay.Tuple([uop_4535,])
func_4544 = relay.Function([var_4534,], output)
mod['func_4544'] = func_4544
mod = relay.transform.InferType()(mod)
mutated_mod['func_4544'] = func_4544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4545 = relay.var("var_4545", dtype = "float32", shape = (6, 9, 16))#candidate|4545|(6, 9, 16)|var|float32
func_4544_call = mutated_mod.get_global_var('func_4544')
call_4546 = func_4544_call(var_4545)
output = call_4546
func_4547 = relay.Function([var_4545], output)
mutated_mod['func_4547'] = func_4547
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4866 = relay.var("var_4866", dtype = "bool", shape = (9, 14, 14))#candidate|4866|(9, 14, 14)|var|bool
var_4867 = relay.var("var_4867", dtype = "bool", shape = (9, 14, 14))#candidate|4867|(9, 14, 14)|var|bool
bop_4868 = relay.logical_or(var_4866.astype('bool'), relay.reshape(var_4867.astype('bool'), relay.shape_of(var_4866))) # shape=(9, 14, 14)
output = relay.Tuple([bop_4868,])
output2 = relay.Tuple([bop_4868,])
func_4893 = relay.Function([var_4866,var_4867,], output)
mod['func_4893'] = func_4893
mod = relay.transform.InferType()(mod)
var_4894 = relay.var("var_4894", dtype = "bool", shape = (9, 14, 14))#candidate|4894|(9, 14, 14)|var|bool
var_4895 = relay.var("var_4895", dtype = "bool", shape = (9, 14, 14))#candidate|4895|(9, 14, 14)|var|bool
output = func_4893(var_4894,var_4895,)
func_4896 = relay.Function([var_4894,var_4895,], output)
mutated_mod['func_4896'] = func_4896
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5222 = relay.const(-10, dtype = "uint8")#candidate|5222|()|const|uint8
var_5223 = relay.var("var_5223", dtype = "uint8", shape = (5, 1, 12))#candidate|5223|(5, 1, 12)|var|uint8
bop_5224 = relay.add(const_5222.astype('uint8'), var_5223.astype('uint8')) # shape=(5, 1, 12)
func_597_call = mod.get_global_var('func_597')
func_600_call = mutated_mod.get_global_var('func_600')
var_5247 = relay.var("var_5247", dtype = "uint8", shape = (7, 198))#candidate|5247|(7, 198)|var|uint8
call_5246 = relay.TupleGetItem(func_597_call(relay.reshape(var_5247.astype('uint8'), [9, 11, 14])), 0)
call_5248 = relay.TupleGetItem(func_600_call(relay.reshape(var_5247.astype('uint8'), [9, 11, 14])), 0)
output = relay.Tuple([bop_5224,call_5246,var_5247,])
output2 = relay.Tuple([bop_5224,call_5248,var_5247,])
func_5250 = relay.Function([var_5223,var_5247,], output)
mod['func_5250'] = func_5250
mod = relay.transform.InferType()(mod)
mutated_mod['func_5250'] = func_5250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5250_call = mutated_mod.get_global_var('func_5250')
var_5252 = relay.var("var_5252", dtype = "uint8", shape = (5, 1, 12))#candidate|5252|(5, 1, 12)|var|uint8
var_5253 = relay.var("var_5253", dtype = "uint8", shape = (7, 198))#candidate|5253|(7, 198)|var|uint8
call_5251 = func_5250_call(var_5252,var_5253,)
output = call_5251
func_5254 = relay.Function([var_5252,var_5253,], output)
mutated_mod['func_5254'] = func_5254
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5440 = relay.var("var_5440", dtype = "float32", shape = (4, 6, 6))#candidate|5440|(4, 6, 6)|var|float32
uop_5441 = relay.rsqrt(var_5440.astype('float32')) # shape=(4, 6, 6)
output = relay.Tuple([uop_5441,])
output2 = relay.Tuple([uop_5441,])
func_5443 = relay.Function([var_5440,], output)
mod['func_5443'] = func_5443
mod = relay.transform.InferType()(mod)
mutated_mod['func_5443'] = func_5443
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5444 = relay.var("var_5444", dtype = "float32", shape = (4, 6, 6))#candidate|5444|(4, 6, 6)|var|float32
func_5443_call = mutated_mod.get_global_var('func_5443')
call_5445 = func_5443_call(var_5444)
output = call_5445
func_5446 = relay.Function([var_5444], output)
mutated_mod['func_5446'] = func_5446
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5662 = relay.var("var_5662", dtype = "bool", shape = (7, 5, 10))#candidate|5662|(7, 5, 10)|var|bool
const_5663 = relay.const([[[False,True,True,True,True,True,True,True,True,True],[True,False,False,False,False,True,False,True,False,True],[False,True,True,True,False,False,True,False,True,False],[True,False,False,False,True,True,True,False,False,True],[True,False,True,False,False,True,True,False,False,False]],[[True,False,True,True,True,False,True,False,False,True],[True,True,True,True,False,False,False,True,False,True],[False,True,True,True,True,True,False,True,True,False],[True,False,False,False,True,True,False,True,False,True],[False,True,False,True,False,False,True,False,False,True]],[[True,False,False,False,False,False,True,False,True,False],[True,False,True,True,False,False,True,True,True,True],[False,True,False,False,False,False,True,True,False,True],[False,False,True,True,False,True,True,False,False,False],[False,True,False,True,False,False,False,True,True,True]],[[False,True,True,False,False,True,False,True,True,True],[False,True,True,True,False,True,True,True,True,True],[True,False,False,True,True,False,False,True,False,True],[True,False,True,False,True,True,True,True,False,False],[False,False,False,True,True,False,True,False,False,False]],[[True,True,False,True,True,False,False,True,True,False],[False,False,False,True,False,True,False,False,True,False],[False,True,False,False,True,False,True,False,False,True],[False,False,False,True,True,True,True,True,False,False],[True,True,True,False,False,True,True,True,True,False]],[[True,False,False,False,False,True,False,True,True,False],[False,True,False,True,False,False,False,True,True,True],[False,True,False,True,True,False,False,False,True,False],[True,True,False,True,True,False,False,True,False,True],[True,False,False,False,True,True,False,False,False,True]],[[True,False,False,True,True,True,True,False,False,True],[False,True,False,False,False,True,False,False,False,False],[True,True,True,True,True,False,False,True,False,True],[True,True,True,True,False,True,True,False,True,True],[True,True,False,True,True,False,False,True,False,False]]], dtype = "bool")#candidate|5663|(7, 5, 10)|const|bool
bop_5664 = relay.logical_and(var_5662.astype('bool'), relay.reshape(const_5663.astype('bool'), relay.shape_of(var_5662))) # shape=(7, 5, 10)
output = bop_5664
output2 = bop_5664
func_5670 = relay.Function([var_5662,], output)
mod['func_5670'] = func_5670
mod = relay.transform.InferType()(mod)
mutated_mod['func_5670'] = func_5670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5671 = relay.var("var_5671", dtype = "bool", shape = (7, 5, 10))#candidate|5671|(7, 5, 10)|var|bool
func_5670_call = mutated_mod.get_global_var('func_5670')
call_5672 = func_5670_call(var_5671)
output = call_5672
func_5673 = relay.Function([var_5671], output)
mutated_mod['func_5673'] = func_5673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5909 = relay.var("var_5909", dtype = "float32", shape = (16, 5, 2))#candidate|5909|(16, 5, 2)|var|float32
uop_5910 = relay.atanh(var_5909.astype('float32')) # shape=(16, 5, 2)
func_832_call = mod.get_global_var('func_832')
func_839_call = mutated_mod.get_global_var('func_839')
const_5919 = relay.const([1,-2,2,3,1,-2,-3,8,-10,-1,-1,-2,7,1,-8,-6,10,5,9,-6,7,3,-10,-2,-5,-9,7,9,9,-3,-2,8,-9,2,3,8,-5,2,4,-8,-8,-5,10,8,-4,8,9,6,9,6,7,1,-5,-9,-8,7,-6,10,6,5,10,6,9,7,-1,9,-7,1,-3,2,-9,-7,1,1,7,7,-9,-7,4,-6,7,2,8,-7,-2,-4,7,-6,-1,8,-2,5,8,10,6,-7,-3,-10,-2,2,7,7,-7,4,9,-6,-9,-4,5,-10,-10,-5,-8,2,3,4,-9], dtype = "int8")#candidate|5919|(117,)|const|int8
var_5920 = relay.var("var_5920", dtype = "float64", shape = (240,))#candidate|5920|(240,)|var|float64
const_5921 = relay.const(-0.979457, dtype = "float64")#candidate|5921|()|const|float64
call_5918 = relay.TupleGetItem(func_832_call(relay.reshape(const_5919.astype('int8'), [13, 3, 3]), relay.reshape(const_5919.astype('int8'), [13, 3, 3]), relay.reshape(var_5920.astype('float64'), [240,]), relay.reshape(const_5921.astype('float64'), []), relay.reshape(var_5920.astype('float64'), [10, 6, 4]), ), 4)
call_5922 = relay.TupleGetItem(func_839_call(relay.reshape(const_5919.astype('int8'), [13, 3, 3]), relay.reshape(const_5919.astype('int8'), [13, 3, 3]), relay.reshape(var_5920.astype('float64'), [240,]), relay.reshape(const_5921.astype('float64'), []), relay.reshape(var_5920.astype('float64'), [10, 6, 4]), ), 4)
output = relay.Tuple([uop_5910,call_5918,const_5919,var_5920,const_5921,])
output2 = relay.Tuple([uop_5910,call_5922,const_5919,var_5920,const_5921,])
func_5931 = relay.Function([var_5909,var_5920,], output)
mod['func_5931'] = func_5931
mod = relay.transform.InferType()(mod)
var_5932 = relay.var("var_5932", dtype = "float32", shape = (16, 5, 2))#candidate|5932|(16, 5, 2)|var|float32
var_5933 = relay.var("var_5933", dtype = "float64", shape = (240,))#candidate|5933|(240,)|var|float64
output = func_5931(var_5932,var_5933,)
func_5934 = relay.Function([var_5932,var_5933,], output)
mutated_mod['func_5934'] = func_5934
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6046 = relay.const([[[3,-6,-4,-10,10,-6,2,4,7,-4],[-3,-8,1,9,-4,-7,6,4,8,9],[-3,-2,4,6,1,2,-2,-10,4,-3],[6,-9,-5,-4,-6,-8,10,3,-7,-5],[1,-4,-2,8,-4,4,10,10,-6,-6],[-9,-1,-8,3,5,8,9,-9,-6,5],[-9,-8,4,-4,-4,3,9,-2,-10,4],[7,1,4,5,8,-8,2,-6,5,7],[4,-5,-5,10,2,-1,6,4,-2,7],[-2,-7,-4,1,4,-1,7,1,-2,9],[5,-2,-4,8,-7,5,2,4,-6,-5],[10,-9,3,2,1,9,3,-4,10,-2]],[[8,8,9,6,-4,8,-9,4,-8,-7],[-8,-4,8,8,1,6,-7,-9,-6,-4],[8,-4,-8,10,5,-5,-4,5,-9,1],[-3,1,-1,8,7,-8,3,-3,2,-7],[1,-1,-2,-6,-9,3,5,-6,6,6],[6,-8,5,10,-7,4,10,2,2,-5],[6,-7,-3,7,-4,3,-6,9,-2,-9],[-5,-8,10,6,-9,-5,2,8,-2,5],[8,8,-8,-7,3,3,1,-2,1,-3],[3,-9,-9,-10,-2,10,4,-5,-4,-5],[8,-6,9,-10,-10,-3,2,-5,9,-5],[-2,-4,-3,-9,1,8,1,-8,4,1]],[[2,8,-7,8,-10,-10,8,-7,1,1],[-9,1,3,-10,-9,2,6,7,2,-3],[8,5,5,8,7,10,-6,-3,2,7],[-6,-3,10,-8,-5,7,4,9,3,9],[-5,-5,2,10,-3,5,10,10,10,-4],[-10,-8,2,-4,-5,6,-2,2,9,9],[-1,-9,-4,10,-8,-9,-5,3,-6,-4],[-9,-2,-9,6,8,-10,-10,9,8,8],[-4,-4,-5,8,-3,-6,-3,5,5,-2],[9,-10,-8,4,10,4,8,3,-7,9],[-3,4,3,10,3,1,-3,-2,1,1],[-8,3,4,-1,7,1,-5,8,4,-6]],[[-1,10,9,8,-6,9,-3,9,-10,-8],[-2,-9,-4,5,-6,-7,-9,4,7,-7],[-1,8,-1,-1,9,2,-8,8,-9,-2],[-5,5,-5,3,-10,-6,9,5,3,4],[5,5,6,-7,-8,3,7,-1,-6,-4],[-5,5,6,-5,-6,-5,3,-6,5,6],[-2,7,7,-2,2,-9,-10,-10,-4,7],[4,-1,-2,-5,-10,-10,-2,-2,7,-1],[-1,6,5,-8,-3,-9,9,-5,8,-9],[3,-1,-8,-3,8,-4,2,-2,7,6],[-9,8,-6,10,-5,4,-8,-2,-1,-1],[-8,-10,4,9,-4,-3,1,-10,6,-3]],[[-8,-8,6,-3,6,-6,7,-9,7,-2],[5,1,-9,-5,10,-6,8,5,6,9],[-1,8,-8,-1,-5,6,-10,-7,10,4],[3,6,-3,-3,10,1,-6,9,6,-1],[-3,-2,-5,-2,5,5,-5,7,-4,7],[2,-5,-6,4,-6,-4,5,-4,7,7],[1,9,-5,-5,7,-2,1,9,2,1],[2,9,-3,8,-8,-3,-7,4,-7,10],[3,4,9,-5,-1,-1,4,-8,2,9],[3,8,2,-1,-2,-4,-2,1,4,-4],[-2,5,4,3,1,5,-3,3,4,-4],[-2,-3,7,-6,10,3,7,-10,-3,-7]]], dtype = "int32")#candidate|6046|(5, 12, 10)|const|int32
var_6047 = relay.var("var_6047", dtype = "int32", shape = (5, 12, 10))#candidate|6047|(5, 12, 10)|var|int32
bop_6048 = relay.not_equal(const_6046.astype('bool'), relay.reshape(var_6047.astype('bool'), relay.shape_of(const_6046))) # shape=(5, 12, 10)
func_597_call = mod.get_global_var('func_597')
func_600_call = mutated_mod.get_global_var('func_600')
var_6058 = relay.var("var_6058", dtype = "uint8", shape = (1386,))#candidate|6058|(1386,)|var|uint8
call_6057 = relay.TupleGetItem(func_597_call(relay.reshape(var_6058.astype('uint8'), [9, 11, 14])), 0)
call_6059 = relay.TupleGetItem(func_600_call(relay.reshape(var_6058.astype('uint8'), [9, 11, 14])), 0)
func_1510_call = mod.get_global_var('func_1510')
func_1514_call = mutated_mod.get_global_var('func_1514')
var_6062 = relay.var("var_6062", dtype = "float64", shape = ())#candidate|6062|()|var|float64
const_6063 = relay.const([8.347284,0.378510,-4.896685,7.919269,-9.897251,6.048120,6.519330,-2.759283,7.871261,-5.480141,-4.551383,3.017910,8.901736,6.191143,-5.672807,-2.206474,1.426164,-0.051469,-5.368767,-7.994090,-4.257362,4.261170,-6.115514,-6.844721,-9.959782,-4.832935,2.995421,-4.469721,2.749974,4.876100,7.293194,6.008113,7.497705,-3.259957,8.237935,5.101607,-8.781590,5.068961,-1.853334,-6.127475,-0.386835,6.720359,7.430016,-7.252687,-2.865618,-2.137310,9.212201,-3.688678,2.611379,3.416550,-3.847201,-0.847338,5.705139,4.346362,4.777150,-9.916860,-8.155330,7.749068,-6.306590,-4.986438,1.024908,-5.972367,-0.579141,-6.370884,-9.507077,-6.080949,-8.186853,5.474635,-6.805868,4.230703,9.347923,2.403487,6.932923,5.999006,-7.436554,-2.778369,-1.845864,5.219613,-1.226756,-5.435564,6.968956,2.501784,2.580212,8.398203,7.786458,5.479493,6.481304,9.671694,-2.076017,-6.930142,-2.796001,-1.717828,4.920592,-3.160878,5.256243,-2.368709,7.143027,-7.759470,8.705915,1.058247,-0.384600,5.810316,6.306495,9.068273,8.978312,4.759228,-5.328072,-0.060329,1.473578,3.597830,1.437414,7.968910,5.019221,8.365671,8.987891,-1.098750,3.112321,9.763194,-7.211883,-0.193426,-2.975308,4.000288,-5.402592,5.624036,-4.351556,-1.169937,-8.168786,6.038771,-9.115514,-9.340410,0.098511,6.685074,-4.108593,2.779318,9.886053,-4.413458,7.172496,5.578388,0.143131,8.568387,0.871960,7.247842,6.933398,-0.561826,7.788645,-3.670783,8.150087,-1.680614,-7.674252,-1.936160,4.617252,-1.810416,-5.321989,-4.656480,-4.707696,-1.247075,-2.886080,2.513346,-7.069155,7.398128,7.451489,-1.618400,8.611917,-7.994929,-2.463119,-4.571262,-6.944574,3.525885,-3.898347,-7.281366,7.296677,-5.415089,2.031037,-9.599734,2.637620,9.048225,0.022273,1.479438,-2.122283,-0.342864,-3.099094,2.797872,2.661400,-1.903289,-4.390931,-3.700647,9.403937,8.490336,6.246457,-4.627934,0.551651,1.030658,8.163773,-3.875604,-4.256124,-6.648231,3.144128,0.297100,-7.561320,-9.706976,8.511047,3.168374,4.481631,6.597499,-0.807733,-7.203762,2.320798,-2.342003,-3.833872,9.629770,2.815690,-2.012699,8.028743,-3.232759,9.443693,-3.238042,7.654666,8.373838,0.964694,9.091252,-3.000862,0.921236,2.330254,-8.223428,-2.266992,4.629921,9.358169,-1.583737,7.765040,5.359267,5.997350,3.285527,4.927654,-7.444983,3.742147,-0.456731,5.517524,-9.145655,8.900667,-9.333673,-2.618969,2.205021,7.685390,-7.531800,-9.682377,6.020890,7.290046,2.654521,6.634085,3.621970,4.456383,-3.590315,-0.932623,-3.534967,7.525030,0.424603,-2.302409,-1.111207,6.742629,-9.337734,-6.102255,5.844669,0.225123,-7.997195,-2.146984,9.624233,1.457236,-8.388860,-0.558943,1.704465,-1.240339,9.179084,9.707443,-8.025305,-7.199806,4.893959,5.543373,2.287172,1.839389,7.908529,3.565307,8.491491,7.078986,-8.048678,-4.928107,4.948734,2.061566,2.746757,-2.050878,8.353537,4.243387,2.345807,5.524433,8.566860,-5.448181,9.102081,2.439282,-9.056186,-8.493996,9.176272,-4.394452,2.862098,2.015371,2.237060,8.467768,8.222745,1.243727,9.339711,0.999204,5.042156,2.309554,4.662668,1.048417,7.780326,5.539024,1.347593,-2.472578,3.132416,2.407613,9.610255,1.006970,4.229721,-8.699357,9.199949,9.129630,6.232239,3.117525,-3.775601,3.242098,1.736963,-5.625791,-2.468905,0.949411,-3.413351,-1.261606,5.521221,-9.796915,-8.545393,3.424340,-0.943799,-8.677748,-7.463452,6.937947,3.458327,-9.243172,8.092760,9.974483,1.398660,4.035005,0.884810,-4.983217,4.158530,-3.248107,1.552424,3.036334,-1.606039,8.741572,-8.001951,4.611209,0.750598,-3.025647,-6.852262,5.299824,-5.946857,-2.903619,-9.541563,9.128958,2.356020,-1.849208,6.592794,8.655476,2.247753,-1.375813,2.483392,4.059601,-5.603586,8.271225,5.059045,-3.981100,0.971550,-4.443470,0.957033,5.773949,3.963020,9.760821,2.591549,-5.966644,-7.226609,-5.852390,2.276377,-1.934374,7.169795,-6.131803,-3.318686,0.885062,3.954110,-8.564911,1.339287,-1.977809,0.492533,7.689515,-8.080175,2.354027,9.437779,-6.639947,-8.320778,-2.982550,-1.056197,-5.426082,5.320748,-5.412863,4.498402,-5.174995,-1.647993,0.708406,-2.491368,-3.399284,1.691309,4.033048,-2.574636,6.925575,0.353943,-7.893750,-8.849584,-1.112044,-9.889277,5.709592,9.075554,-8.848082,-5.849599,9.301451,6.202024,1.939074,-4.361857,5.516388,-2.167487,0.589932,-4.333561,5.425887,-7.917782,-9.390277,-2.371983,4.781580,9.264730,7.641154,7.470159,7.622455,-0.824131,7.883850,0.075213,6.048940,6.015775,4.880398,6.363784,3.700709,6.727279,-4.916060,5.547849,7.307371,-5.980509,-8.450475,-4.359127,-0.022007,-4.173254,4.561525,-6.265881,8.045362,5.718985,7.754303,1.237408,-1.981426,-7.538411,-5.126104,-9.190322,7.189274,-8.399470,0.704166,3.566683,7.370026,2.565467,2.466637,-3.319065,-6.703197,-9.955708,-8.261555,-7.487166,-0.964336,2.789329,-7.955523,-9.615068,-3.995315,3.875920,3.388404,2.682575,-9.152562,2.941896,-3.375328,-6.319799,1.401911,-2.098187,-7.028427,9.748640,-8.317921,4.505658,-1.953336,-3.283947,-7.113487,-3.238434,-1.992498,-9.069330,0.587711,-5.843964,5.636288,-7.716945,4.391805,-3.977016,9.296618,-3.057719,9.746339,-6.537353,-1.390421,-7.546597,-1.331405,-6.799518,8.307926,7.547180,3.343150,-6.828177,-9.779926,5.797325,-9.843346,2.405312,8.279534,8.160914,6.176553,4.548376,-6.380153,-7.999105,-4.018476,1.301423,8.062199,-2.209241,-2.885230,-9.496499,9.820666,0.797672,4.476058,3.633348,-1.448732,9.148672,-1.301611,1.146509,1.762771,7.556638,4.823774,5.837967,2.375997,5.312783,-1.244605,-5.814142,9.137615,6.187287,-6.085723,-7.787779,8.405244,-2.896444,-8.528125,-3.835400,0.401962,1.679835,-7.153350,-1.055033,5.052557,-1.417032,5.770837,6.284703,-6.673499,9.041660,-0.433225,7.427557,-8.754597,1.057970,-8.153502,-6.347421,-1.888491,-3.800180,-0.919364,-4.038763,-4.441566,1.942907,-6.152234,-7.272990,-0.648036,6.452732,4.912516,-2.633697,7.423109,-0.580751,-3.851151,3.740073,4.241192,3.968403,-7.289202,8.972666,-6.401794,-1.442538,0.643285,3.906035,1.021225,-9.438999,-0.030751,-9.077752,1.489575,5.781182,8.133921,-6.771359,-1.460618,-8.378650,3.590517,2.977218,-5.593052,-7.763825,-3.570507,0.573511,6.901819,5.622865,3.266086,9.670912,-2.494404,-1.641730,0.132723,-9.233435,-1.715499,6.229897,-1.934055,-5.343640,-5.758144,7.428074,-4.197350,-6.710152,-7.307500,1.683772,1.859985,-4.344241,4.658854,5.518048,4.525221,-5.437572,-7.721552,-5.938011,-8.951414,-8.007891,1.661078,-5.026934,-8.127687,9.810968,-3.064844,-4.811875,3.000527,3.249539,9.990818,-0.334832,3.985692,2.892171,-2.277202,-0.225011,-9.224244,0.082320,-8.278217,7.149252,0.757779,-8.448661,-3.446246,7.578427,7.548081,-8.597753,-4.106089,-4.491514,-3.599453,5.223606,2.566309,1.311934,-6.376237,7.655182,-6.059180,-5.197152,-8.845125,6.586862,6.512672,-0.801261,-9.376729,-6.342968,4.609139,-5.522740,-4.519456,-6.227335,6.328554,5.887707,2.655271,5.447231,9.030598,7.011435,-9.628087,-0.989649,8.747147,-1.833038,-0.771655,-1.734026,9.593995,6.788030,4.925557,7.513350,5.517321,-1.397013,-1.622081,1.505073,5.651781,8.471813,1.252338,-2.103814,-2.473737,-7.624821,3.111733,3.864116,8.510283,-0.979385,-6.629078,-7.176137,-9.637493,-2.525159,-3.159826,-8.242134,-5.884781,6.835731,-0.962046,1.701569,-2.331377,7.755780,-6.066433,4.370185,6.495449,-7.187845,2.006380,0.986966,-8.827837,-3.893417,2.371713,-1.433135,-9.145840,-8.076626,5.698043,-9.393578,5.962317,6.428198,-0.102507,-4.139245,-9.702662,6.048569,4.744861,0.937422,0.617161,-4.406882,7.150952,-9.066720,-4.401325,-0.519949,-4.163648,5.708967,-3.515749,-8.216415,3.139269,-9.729108,6.023219,-9.166741,-1.208108,-7.477908,3.248225,0.017479,-8.465524,7.381794,-6.037406,-1.614024,-9.735736,-0.350766,3.032677,9.974729,1.825424,-1.349412,8.134399,2.988298,2.739638,0.533258,-0.541879,8.225990,8.400835,1.358903,-0.437241,-4.197549,-2.433889,5.810630,4.240097,-3.098722,-3.536404,-8.148822,4.663749,8.277311,7.096352,-2.515307,7.054357,-2.673787,-0.674262,-8.679310,-4.914975,4.833568,-8.349942,-1.024807,1.081652,-7.369288,4.697683,6.053719,0.307035,3.573111,-2.312254,-3.023501,2.419383,-3.825932,6.310093,-4.189084,6.737603,-1.672291,-3.685720,-9.125100,0.936705,4.092753,2.227603,-8.983878,-2.490774,5.735471,5.923277,-1.685792,3.570433,-0.112237,-1.168257,-2.374376,-4.223235,2.857830,7.851732,-2.123516,-8.934500,5.987331,-7.893668,-4.408054,-5.816216,3.834189,-6.895026,-2.403493,-5.628956,-7.539625,-9.307375,4.217385,9.715580,9.436052,-2.006899,0.715425,-7.767230,-9.086442,-2.061817,0.955555,-3.304683,-0.110012,-1.626158,-6.818777,9.111960,1.283122,6.386353,-2.884957,2.993348,9.395606,2.617977,5.716528,-5.780398,6.983689,-9.151524,5.694354,3.978894,2.758408,-8.924412,9.770421,-3.581123,2.927143,6.559429,-8.757080,-0.800857,-1.067255,1.557436,3.419524,4.684442,-2.357690,1.773503,-7.088029,-6.664944,-9.143317,-6.926939,-0.974395,3.670076,-0.384623,-6.535640,9.049126,8.047341,-1.325476,9.699652,-1.696044,-3.275349,1.224970,-6.481279,9.143182,4.813839,8.390925,4.351207,3.109334,-9.118573,0.409669,-2.495024,8.192666,-9.005465,-6.079070,2.170674,-5.320823,-8.018197,5.280093,2.938406,9.313466,-7.558082,-3.294540,-2.450719,-3.377320,-4.434459,6.116220,6.735669,-0.692710,4.218418,4.614950,0.062134,-5.881461,6.246173,-6.991871,-0.901641,-6.389778,-4.400393,-3.048061,-3.804010,9.669031,-0.964360,1.556467,1.863766,1.964136,4.553711,1.990578,-0.244278,-1.940619,7.578811,4.645079,-1.287697,0.507651,-8.905503,2.108975,-4.423188,6.169419,-0.975762,-8.913386,-9.164288,-3.833344,7.164846,-1.620829,1.110783,5.579346,6.483807,7.069005,-9.888677,3.979737,-6.033010,9.198987,1.832084,-3.272798,-4.016267,-0.126065,-6.291370,-7.833305,-7.312711,-8.579139,8.514180,1.831629,-7.314901,-7.773283,1.375476,9.548211,-4.784892,-5.142692,-9.203921,4.774073,-7.318669,4.597594,-1.856503,-0.432276,2.583218,5.700261,-0.862596,0.317621,4.888852,-5.356896,8.865542,-9.474153,-2.685678,-4.489826,5.731763,5.203644,6.179844,3.084107,-5.640590,-4.278369,-8.781074,-2.108257,-5.180165,3.997346,1.899924,-4.451495,8.886526,7.845488,-6.397024,-4.135511,0.157289,8.177443,5.903812,6.174562,-1.153265,1.204581,6.848522,2.571859,2.954711,6.004982,-8.805521,-4.714645,-5.642824,-5.356337,4.420807,1.040399,-5.893851,4.798686,4.101766,-2.255655,-3.794503,-0.644371,6.118772,-0.082317,-0.651791,-2.990578,4.045251,-5.058723,-8.859999,-4.162645,-2.592727,-3.544990,-6.353336,-2.660081,-7.564834,7.898901,-2.200302,-7.353134,-8.148303,-8.611404,-0.819341,7.619942,5.690895,-8.438267,-3.981306,8.211683,-4.434970,-1.786035,3.019188,-7.717449,4.208245,9.277832,3.024374,2.733555,-4.623622,-2.380885,-5.953142,-0.445946,9.728922,8.603246,-9.494410,-0.400005,8.377901,7.214495,6.774084,-2.182095,-4.857755,-6.106475,-3.785961,5.489884,-5.466871,3.735307,2.041068,-7.093016,-4.477159,6.381358,7.840420,2.859903,-9.268302,1.384629,-7.803488,-6.030121,9.819454,-2.146517,-4.206584,-2.857447,0.881915,-3.276407,-4.193638,-5.533901,-9.270151,3.891846,2.743024,-9.200675,4.655440,-8.189193,-3.856577,-9.417043,8.636588,5.781689,-7.379724,-6.539463,2.594458,8.477877,-5.373491,8.754414,5.487177,-8.689275,3.445629,-2.424881,-5.633508,3.703272,8.248116,1.989568,-5.163261,-5.771209,-8.497589,8.734084,3.009780,7.676436,-6.953458,6.389847,3.294159,-8.843422,-8.236290,-7.774804,6.159690,1.616007,4.787068,-4.116177,6.484988,4.097893,0.200343,-4.942267,9.055589,-8.705570,-9.088829,1.449285,3.480591,-8.744743,-2.169837,1.331541,-3.404968,-2.933715,6.320150,-7.529236,7.549156,-3.945970,-4.158225,-7.086888,2.324418,9.069607,-8.621758,4.242904,-3.814744,2.495321,-0.224653,8.410548,-4.908605,3.462612,-7.887728,-5.887402,5.371083,-0.582162,0.357497,6.367138,-5.406043,-1.499173,1.773153,-9.016054,-5.722468,-5.391057,-8.973485,5.631374,9.071397,-2.236715,-6.448335,5.052648,-8.436956,3.744935,-0.416969,-4.061217,2.574300,5.173989,-3.940672,6.971605,-9.551827,-6.095993,5.419657,7.738275,-6.463306,-1.081128,-4.212191,-9.372123,8.599175,1.128075,-8.715933,-6.070001,-2.120713,-1.192874,-1.930958,8.076654,8.732257,1.839857,-3.961017,1.221045,5.062982,3.475577,7.674717,-7.857361,-2.250868,9.066915,4.537048,-9.418869,4.799167,-8.405472,-8.847434,-3.660033,0.776775,-0.190335,-4.888966,-8.888806,8.843744,-2.065664,3.475329,-1.583206,-8.636825,-4.257249,3.476611,3.395102,2.290177,-3.264131,-4.913022,3.703369,9.080508,6.724114,8.088691,3.636046,5.971009,-2.226284,-4.456631,-5.761723,-8.613745,-1.198529,-4.503560,-9.879142,1.707569,1.486013,-9.003012,-0.623790,1.242580,1.489043,0.183803,0.151325,-3.878421,-9.289442,-2.335867,1.904022,1.419145,7.450615,-2.329633,-6.350450,-5.351271,3.749217,-0.228236,-1.098146,6.488986,3.699893,-9.844439,0.125988,-3.729164,3.751228,3.509207,1.164705,-3.128448,-9.698477,-7.931557,1.781520,-5.138727,0.521176,-8.060218,-5.383396,-4.775627,-3.930198,4.543282,7.484037,4.495126,-7.160130,-0.709847,-9.274351,-2.727551,4.319112,6.628830,-6.252832,9.105852,-4.101883,8.317101,3.126380,-2.993073,0.522533,8.498063,2.803702,5.977591,3.389962,0.847293,9.049068,-3.510737,3.499203,6.371609,-9.477803,2.000747,-7.331245,9.162281,-5.266540,0.294444,9.320760,5.272437,-1.115220,5.066478,-6.023221,4.369975,-7.017098,-5.443453,1.132667,7.831903,-5.490941,-4.771916,-8.753154,-7.058612,-5.731681,-1.441634,-6.557397,-8.284270,-3.456515,9.938234,0.052421,-2.841893,-0.274606,2.298158,-3.065278,4.373018,8.240908,6.919754,-4.072436,6.424094,-3.204596,-2.604922,7.280270,5.038402,-1.165929,-8.796134,4.019672,-4.657685,5.820235,7.787791,-5.199175,-1.004325,-6.299237,6.319310,7.453418,3.332037,-5.945137,-9.595739,3.164039,-5.256142,-4.245751,4.588510,6.679619,-3.680031,5.190439,9.797072,-5.614331,0.631766,6.317839,6.885801,1.669769,-3.604989,5.046811,1.870327,-7.926114,-5.421808,-0.103795,-2.933814,0.479779,-4.207766,-5.568724,3.863324,6.828398,-2.885646,4.240101,6.248432,-9.244874,9.528089,2.859737,-3.430673,-1.645226,-0.338770,-6.316221,-2.884891,4.327102,-1.042348,-2.702160,2.658536,9.564783,0.526034,1.999188,4.439388,-2.353360,2.656042,-1.034326,-9.552633,8.755473,8.206803,3.031872,9.821746,5.975497,4.176930,0.707784,2.823720,-1.857262,-0.275300,-8.171296,8.036048,-2.929670,-2.678899,2.116352,0.912838,6.776123,-7.480328,-0.261440,-7.787405,-5.025793,-0.431095,-9.408402,-9.724310,-6.726461,-2.533652,-7.829701,4.056297,5.760887,2.430943,-4.911646,3.458648,-3.002812,1.899139,9.832436,-2.101305,2.613298,-6.607076,-2.719231,-5.939340,2.528602,1.382809,-5.330356,-3.757298,-9.126513,-3.155370,-1.287595,4.966566,-2.401713,5.540004,-7.524824,0.126784,-3.309208,6.435064,-7.578209,7.468467,-8.323312,7.306559,-5.261302,-1.400301,-2.000788,3.833628,-9.535911,5.342344,0.936783,1.622633,-9.034292,0.226412,-8.374849,6.229677,-5.706053,-0.938698,-4.949191,-7.663540,8.309201,1.171126,4.061156,-1.890400,6.770547,-1.902350,-7.538397,-0.342411,-9.914166,-7.403211,-2.851268,0.382555,-7.045680,-8.858802,-8.694496,2.939839,5.233039,9.721047,-6.068146,4.220746,0.042576,-0.780222,2.482613,-8.577968,0.027275,-2.441574,-2.724253,-3.016611,8.865875,3.705723,4.591191,3.971164,-4.464621,-5.075875,-4.581379,-1.653955,1.655920,7.611396,-2.654560,6.594947,-6.912988,6.708676,1.661014,-3.417254,-6.644084,-6.697196,-9.232917,7.965391,-8.674630,0.470420,0.941188,-0.975846,4.611336,6.847320,6.903386,9.738299,-7.191713,2.023263,-0.920705,-1.991521,1.174519,2.379453,-8.833254,-6.657919,-6.848870,8.404817,-5.599950,-0.679782,8.111650,9.602157,-4.047290,5.504499,8.189463,3.513126,-5.245235,8.583995,-0.054847,8.779625,8.846709,-1.300511,-2.318505,7.860063,6.397744,-2.671310,0.223353,-4.544400,-3.357160,-4.770473,-0.275960,0.453231,8.570943,-4.206839,0.271994,-0.294448,-7.169267,-1.247994,-2.159730,2.282341,-7.024365,-4.574081,0.798041,2.225174,-3.872428,3.404716,1.168064,5.759997,9.876231,9.522726,-9.797872,3.949772,-8.186814,2.576056,0.764421,-5.360440,-9.131972,0.355346,0.669201,1.421306,-5.517335,-6.923859,4.242397,-5.190549,-8.835129,-0.819051,0.059833,4.957685,5.035790,-5.516349,4.637679,-3.709343,-8.002371,8.943223,2.377067,2.815695,4.875947,2.543461,-9.143237,-8.913815,0.224195,1.067692,-9.522942,-5.127082,4.359225,4.323039,-7.541514,-8.043236,6.544844,-2.107350,-4.925741,5.986237,-4.511453,-1.228040,-7.176918,0.228745,6.713173,2.742116,2.428835,-5.317133,-5.715549,9.848162,9.322512,8.616922,7.515886,4.231294,-6.628330,8.457387,-8.820998,7.768363,-0.399812,-5.374319,5.934180,-8.617931,-0.229684,3.623483,-8.891783,0.329715,-4.635616,-4.128605,-8.879616,4.032510,-6.133333,3.585954,-8.087268,-4.614241,6.014917,6.145408,-2.522149,6.927778,-1.406714,8.066416,5.037988,-4.459499,-6.715810,3.038760,4.075224,9.660477,-1.293747,-8.337242,4.501803,2.546436,4.438248,1.404810,-3.817619,-7.876686,5.959138,3.802631,-5.305350,-9.422244,1.170220,-0.924966,-5.969483,-7.361156,-0.005715,3.983318,5.891399,8.605247,1.488397,-2.290980,6.300815,-2.995824,6.846340,-8.126367,-5.854359,-7.185321,-1.838161,-7.811163,-7.528147,5.089460,7.027305,-0.127674,-6.977475,6.874786,-6.863780,6.986667,4.436537,-7.677005,-0.492536,-1.701560,3.633894,-7.495111,8.180410,-0.047818,9.425260,6.790806,-6.811236,-6.666610,1.924678,8.483557,5.860004,2.966547,-1.463943,8.742675,-3.418759,1.989156,-3.249921,-0.702594,-3.389984,3.940327,-7.761462,-1.428927,-8.158413,8.368283,8.930407,6.313496,-7.093804,8.870170,-5.964004,2.078893,-3.040682,-2.799776,-1.155986,4.778439,7.819899,-9.513570,6.460065,5.024951,6.886133,0.675800,8.112907,-7.554126,6.944190,-2.024532,-2.826925,8.144517,3.093319,-2.704125,-1.600425,-5.003656,-9.251561,4.923848,-0.041753,-1.276754,-1.777522,-3.678356,-7.993935,9.600509,-4.135608,-9.052093,3.860478,4.302131,7.134877,-0.810739,9.324138,-4.514320,0.958207,2.494792,-0.534144,-3.263999,2.618448,-4.816267,2.947074,-6.318036,1.470615,-4.810186,-1.649797,4.660045,4.610489,0.377739,7.302472,2.117172,9.645380,-3.914886,-9.186747,-7.891570,5.714901,8.842956,-1.209389,-3.110128,-1.291702,-6.138071,-9.267053,0.996440,2.471214], dtype = "float64")#candidate|6063|(1848,)|const|float64
call_6061 = relay.TupleGetItem(func_1510_call(relay.reshape(var_6062.astype('float64'), []), relay.reshape(const_6063.astype('float64'), [11, 14, 12]), ), 4)
call_6064 = relay.TupleGetItem(func_1514_call(relay.reshape(var_6062.astype('float64'), []), relay.reshape(const_6063.astype('float64'), [11, 14, 12]), ), 4)
bop_6070 = relay.less(call_6061.astype('bool'), var_6062.astype('bool')) # shape=(1040,)
bop_6073 = relay.less(call_6064.astype('bool'), var_6062.astype('bool')) # shape=(1040,)
output = relay.Tuple([bop_6048,call_6057,var_6058,const_6063,bop_6070,])
output2 = relay.Tuple([bop_6048,call_6059,var_6058,const_6063,bop_6073,])
func_6075 = relay.Function([var_6047,var_6058,var_6062,], output)
mod['func_6075'] = func_6075
mod = relay.transform.InferType()(mod)
var_6076 = relay.var("var_6076", dtype = "int32", shape = (5, 12, 10))#candidate|6076|(5, 12, 10)|var|int32
var_6077 = relay.var("var_6077", dtype = "uint8", shape = (1386,))#candidate|6077|(1386,)|var|uint8
var_6078 = relay.var("var_6078", dtype = "float64", shape = ())#candidate|6078|()|var|float64
output = func_6075(var_6076,var_6077,var_6078,)
func_6079 = relay.Function([var_6076,var_6077,var_6078,], output)
mutated_mod['func_6079'] = func_6079
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6102 = relay.var("var_6102", dtype = "uint32", shape = ())#candidate|6102|()|var|uint32
const_6103 = relay.const([[[10,-7,9,-10,1,5,4,-4,10],[-5,-4,8,-2,-2,7,-10,-5,1],[-3,4,-5,-9,-6,-9,5,-1,-7],[-6,3,-5,9,-9,-10,-10,-1,6],[3,4,-8,-8,-7,1,-9,-4,7],[3,3,-2,-2,6,7,1,7,3],[-8,-8,9,-10,-8,-1,4,-3,-7],[9,-7,7,7,6,-5,1,10,-2],[-1,-7,7,-4,-3,-7,1,-10,-1],[2,6,3,-9,-7,-6,-7,-1,3],[-2,8,-1,-6,1,1,-4,1,5],[1,10,2,-7,10,5,6,10,3],[-9,6,-4,1,1,7,-7,9,-8],[-3,2,-3,-9,-4,-2,-2,5,-10],[-6,8,4,5,-8,1,7,-1,7],[6,4,5,-9,7,-7,-7,-8,4]],[[4,3,4,-8,-8,-2,6,9,9],[5,2,-4,-7,-4,7,6,9,-3],[-5,-6,1,-8,-5,4,2,4,1],[3,-10,-4,-6,8,4,-8,2,2],[1,10,-8,2,6,-3,3,-9,-4],[-9,5,-8,9,-8,10,-4,-3,-9],[-9,-2,-8,-3,3,-5,5,1,-1],[1,-5,-3,-10,-7,1,5,-8,6],[3,8,-1,5,7,6,-5,10,-5],[-4,-9,-9,9,-2,-10,-5,-8,-9],[8,-5,-1,6,7,5,-10,10,-2],[-2,4,9,2,6,-9,-7,10,5],[-2,-7,-7,-4,3,-6,2,5,-2],[9,-10,-2,-2,7,10,5,-3,10],[5,6,-7,-3,2,4,-4,-8,9],[-5,-10,5,4,-1,-2,-8,-4,-7]],[[9,-9,-1,5,-9,2,-6,1,1],[5,5,4,-8,8,-7,4,-6,4],[-7,5,-5,-3,5,-8,-9,-2,10],[6,8,-1,-9,-8,-7,4,-3,-1],[-9,-1,10,1,-4,-8,8,-2,5],[1,8,1,-2,-1,-6,-7,-9,-9],[8,10,4,-6,-1,-1,2,10,-1],[-5,-6,2,-1,8,7,-10,-9,9],[-8,8,-5,-6,10,7,7,-6,8],[-6,7,8,-5,-3,9,-10,8,8],[6,10,-10,-9,9,-1,-5,8,4],[10,-6,-4,6,6,1,-9,6,4],[6,-4,-1,4,5,-10,9,6,4],[2,3,5,-10,2,-4,5,-2,-7],[-5,10,2,-8,-9,-6,-4,4,6],[3,4,3,4,7,6,-8,4,10]],[[-6,-7,-3,-2,1,6,3,-3,-7],[-6,6,-6,7,5,9,-7,6,-4],[7,7,1,-7,-5,3,9,-4,3],[7,-3,1,-10,1,-2,-4,-10,-7],[4,-5,-6,-2,8,-10,-7,10,9],[-6,-8,4,3,-9,7,-3,-9,10],[1,-10,2,-9,-7,1,-8,7,-5],[6,-9,10,-10,-6,3,6,-2,2],[-6,-4,-8,3,3,4,2,-3,-6],[6,-6,-6,-2,3,-1,-7,6,4],[-8,3,-6,7,-6,1,-3,-9,1],[8,-10,-7,-7,-9,-8,10,7,-5],[-10,-5,5,10,2,5,-5,-9,5],[5,2,9,-5,6,-2,-9,5,9],[-9,-8,-6,-6,-7,5,1,-5,2],[-5,-3,-10,-3,-7,2,-8,7,-2]],[[10,-6,-5,10,9,-10,-1,9,-5],[-1,8,9,-6,-3,-5,-7,-4,-2],[4,-4,-7,-5,1,-4,-4,7,5],[-4,-4,-5,1,-4,3,-4,7,-1],[4,3,-1,-2,-2,-9,-6,7,7],[9,-3,4,10,-4,-8,1,2,-7],[-3,-8,-1,-3,9,7,1,5,-10],[2,7,-4,1,-6,1,6,4,10],[-2,-2,-2,-6,-4,1,-9,3,8],[-10,-5,4,2,2,7,-1,5,-9],[-2,-4,-7,2,7,-2,3,4,8],[5,-9,8,-9,2,-4,-4,7,5],[-2,-1,-4,-4,5,-4,7,5,-6],[-1,-3,8,-5,6,-10,-9,9,3],[-3,10,-6,-2,-6,10,-1,-7,-3],[2,7,3,8,-2,-10,-2,-4,10]],[[9,-5,-9,6,-4,-4,8,-7,3],[-6,10,2,5,-4,6,-6,-5,9],[6,6,6,6,-8,-3,-5,-6,7],[6,9,8,3,10,7,-4,3,-2],[1,-5,3,2,6,-4,5,2,1],[1,8,-1,-9,7,-6,2,-8,-6],[6,-10,7,5,5,8,-9,-9,-8],[-1,7,2,-6,-1,-5,7,5,4],[-1,-4,8,2,10,-6,4,-9,7],[4,-6,-8,-2,-2,2,10,5,-10],[7,2,-1,-6,-6,-8,6,6,9],[-5,-1,-9,-5,6,5,4,-8,-9],[-3,-6,4,1,5,4,-1,6,-5],[7,-6,-9,1,-4,10,-7,-10,1],[8,4,9,-7,6,-4,-8,1,4],[-4,-3,-1,2,5,5,-6,2,-6]],[[9,-3,7,-5,8,9,-6,-6,-1],[-4,-7,5,-7,-4,-2,-9,-4,-5],[10,7,4,10,9,8,3,1,3],[3,-8,8,-7,-10,-1,-1,-4,9],[-4,-7,4,-3,9,8,-9,-1,-10],[-8,8,-8,-4,10,-9,6,-9,-8],[-8,10,4,-9,-1,-1,-9,-9,-8],[6,8,-10,6,-2,-6,-7,-1,4],[-9,10,1,-2,-2,-7,-8,4,10],[4,-7,2,9,10,10,-9,4,8],[3,-6,-1,-9,8,4,5,-8,6],[-8,1,9,1,-10,-7,2,8,-9],[3,-5,-9,-10,9,-9,-10,-2,-4],[-2,-8,1,1,-7,3,8,-2,-8],[-4,-7,6,7,-10,7,-1,10,1],[5,5,1,-8,6,3,-2,2,-7]],[[-5,6,-5,-1,2,-6,-1,7,4],[5,-8,-3,3,-8,-5,5,1,-5],[-4,3,-6,-1,1,-4,-7,-7,10],[-5,-5,9,-10,-8,-6,7,9,-6],[-10,-1,-6,-4,-4,7,10,6,-9],[-5,-9,-7,-6,-5,-6,-10,-7,-7],[-6,5,1,5,-7,9,7,-2,7],[-1,8,9,-4,-10,10,5,8,7],[1,-5,4,-4,-5,7,-10,4,2],[-1,2,9,-9,-9,4,10,-9,-6],[6,4,-8,3,7,5,-1,-8,-8],[-5,1,5,2,-3,-2,-4,10,-2],[-8,8,2,-7,-8,8,-3,-4,-8],[2,-6,-1,-5,-7,-4,5,3,1],[7,-2,4,2,4,-4,4,-2,-4],[-1,1,-5,-8,-1,6,-10,-10,9]],[[-4,-3,-6,1,-4,4,-10,-6,4],[8,-4,7,-10,4,-9,6,-5,-2],[-4,4,-7,-6,3,8,1,-3,4],[4,7,6,2,-1,-8,9,5,-10],[2,-9,-7,-4,4,3,7,4,9],[2,-1,-8,6,-1,-9,-3,-8,-7],[3,3,-1,7,-8,-4,2,-6,-8],[2,-2,-5,5,-3,4,7,-3,7],[1,-4,7,-5,3,-4,8,7,10],[-2,-1,9,6,3,10,-5,-5,7],[-8,-3,-6,4,-6,3,-2,-2,-1],[-8,-8,-8,2,9,-4,-9,1,-5],[-10,8,-9,-3,-5,6,5,4,-7],[-4,-8,6,9,6,9,4,10,7],[-2,-10,5,-6,-2,-6,5,-7,10],[6,-1,9,6,1,-7,5,1,8]],[[-3,-6,5,3,-9,4,6,-9,4],[8,3,-6,-10,-10,8,4,-4,-8],[2,10,2,1,6,4,9,-10,3],[-3,-8,-1,10,-2,8,5,9,-1],[9,-8,3,-5,-6,-5,4,2,-10],[2,2,8,2,-10,-9,4,3,5],[6,8,-8,4,2,3,1,-6,9],[-3,-7,4,1,8,-1,-10,4,2],[-3,-3,2,-9,-1,-6,-8,3,-9],[1,-6,6,1,-4,-3,6,-3,-9],[5,8,2,8,10,-5,-10,-8,5],[-2,9,-3,4,-6,-8,-2,4,1],[-1,-6,-4,-1,-7,-1,-5,1,10],[-4,-5,1,-9,8,-2,-9,-10,7],[6,-8,-7,5,1,3,4,-8,-2],[-2,-4,4,1,-1,8,5,-6,-7]],[[2,-4,-10,6,8,10,-3,-9,-5],[2,-6,-7,1,-8,-6,1,-7,-1],[-3,8,1,9,4,-2,3,-3,7],[5,3,-8,-10,-5,3,3,-6,-7],[-3,-2,6,-4,-6,-2,-10,-4,2],[-9,8,-1,-3,6,7,6,-10,7],[-10,9,-9,-2,7,1,7,-2,-6],[-7,9,-6,-9,-6,-1,-6,-5,1],[-5,-2,-9,4,3,-3,10,7,7],[4,8,-4,-5,9,7,-4,3,7],[-1,9,6,4,-6,-3,-4,9,-9],[10,5,-3,-1,5,5,7,-2,9],[-2,3,-3,1,5,1,4,7,-5],[10,-9,2,-8,9,9,7,10,9],[4,3,3,3,-7,5,-3,8,1],[-8,-10,8,-5,-1,2,-2,-4,-6]],[[-9,2,-1,10,3,10,7,-2,4],[-8,-2,-6,9,-3,-3,9,9,-9],[-10,6,6,-5,1,2,7,6,7],[8,-2,-10,-9,6,-2,-8,-6,4],[-10,5,-8,9,-6,-9,-7,-2,7],[3,-3,-3,5,-5,-8,3,10,9],[6,5,3,9,-10,-10,-3,2,3],[10,9,-1,6,4,3,-4,-3,2],[-5,-9,-2,-2,1,2,1,4,-9],[8,-8,-1,-8,-9,-6,-9,2,5],[-5,8,3,2,1,-8,10,6,-8],[8,-4,7,7,-2,-3,2,6,-6],[1,-6,3,-5,-10,10,9,-4,-4],[-2,6,-2,3,-7,-6,-1,-10,-9],[1,-5,-4,8,10,6,-2,4,4],[-5,10,7,4,2,7,8,-5,8]]], dtype = "uint32")#candidate|6103|(12, 16, 9)|const|uint32
bop_6104 = relay.bitwise_xor(var_6102.astype('uint32'), const_6103.astype('uint32')) # shape=(12, 16, 9)
func_3469_call = mod.get_global_var('func_3469')
func_3472_call = mutated_mod.get_global_var('func_3472')
var_6110 = relay.var("var_6110", dtype = "float64", shape = (216, 2))#candidate|6110|(216, 2)|var|float64
call_6109 = relay.TupleGetItem(func_3469_call(relay.reshape(var_6110.astype('float64'), [12, 4, 9])), 0)
call_6111 = relay.TupleGetItem(func_3472_call(relay.reshape(var_6110.astype('float64'), [12, 4, 9])), 0)
output = relay.Tuple([bop_6104,call_6109,var_6110,])
output2 = relay.Tuple([bop_6104,call_6111,var_6110,])
func_6115 = relay.Function([var_6102,var_6110,], output)
mod['func_6115'] = func_6115
mod = relay.transform.InferType()(mod)
mutated_mod['func_6115'] = func_6115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6115_call = mutated_mod.get_global_var('func_6115')
var_6117 = relay.var("var_6117", dtype = "uint32", shape = ())#candidate|6117|()|var|uint32
var_6118 = relay.var("var_6118", dtype = "float64", shape = (216, 2))#candidate|6118|(216, 2)|var|float64
call_6116 = func_6115_call(var_6117,var_6118,)
output = call_6116
func_6119 = relay.Function([var_6117,var_6118,], output)
mutated_mod['func_6119'] = func_6119
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6203 = relay.const([[[-6,-4,-10,-8,1,7,5,2,-3,2],[-9,-2,-5,-8,3,-8,-6,-9,-7,9],[8,1,-3,-3,-2,-2,-9,2,9,6],[-9,-8,-1,1,3,6,-8,-7,2,1],[4,-4,6,-7,-5,7,-9,9,4,-8]],[[2,10,-4,4,8,9,9,-7,1,-1],[8,2,-3,-9,-3,-5,4,-8,4,-4],[7,6,-9,10,10,-10,-9,8,-5,10],[8,6,1,-2,-4,-9,10,-7,-10,-10],[-10,9,-5,3,7,-10,9,7,-8,4]],[[5,-4,-9,-5,2,9,8,-1,-6,2],[8,-8,-6,6,6,-7,-3,6,-4,1],[8,5,-8,8,-3,-9,10,7,-2,1],[2,9,-9,-9,5,6,-10,1,9,3],[-10,2,-10,8,-3,2,-5,3,5,6]],[[2,7,-6,1,8,9,8,7,-2,2],[4,-3,4,-4,9,-10,5,-4,-6,6],[9,-1,7,-7,-5,-6,-2,9,-6,6],[4,-8,-3,-7,5,2,-9,3,1,6],[-8,2,-3,9,-3,-5,-10,3,3,-4]],[[-5,4,-9,9,8,5,-10,-9,9,10],[-10,-8,-8,-8,5,1,10,2,-6,-1],[-8,2,5,-9,-7,6,-6,2,9,6],[3,2,5,-5,6,-7,2,4,-1,10],[2,9,-2,3,-2,5,-6,-9,2,-4]],[[-9,7,-2,-7,-2,3,4,-5,3,-8],[-6,-8,-10,5,-2,2,-2,1,8,7],[6,7,1,6,9,-7,-7,-7,-4,10],[-5,-7,1,-1,7,-2,-7,5,-10,-2],[-3,2,-5,-6,3,-7,8,5,6,-2]],[[-5,8,-3,2,1,10,2,-5,-3,8],[-9,-4,10,10,-7,-9,-5,4,9,1],[9,-6,-5,8,4,-6,10,1,1,-6],[-4,-1,-1,8,3,9,-1,5,-6,6],[8,4,-1,-9,-8,1,9,2,-8,-9]],[[-10,-5,1,-8,4,10,5,-1,3,-1],[7,5,-7,-6,-7,-8,-1,-7,4,3],[1,-9,7,5,1,1,9,6,2,10],[6,6,4,4,-1,5,10,8,-5,-7],[10,-8,3,4,-5,7,-6,-3,-8,-8]],[[5,3,-9,-3,6,5,-10,-7,-5,10],[-7,5,10,6,8,9,9,-9,4,5],[3,-8,-2,-6,5,-9,5,-8,6,2],[-7,-7,4,-7,9,-10,3,-5,-2,2],[-9,10,8,8,1,8,-3,-6,-1,5]],[[8,-2,3,6,8,-3,-10,10,2,-2],[8,-2,-6,-7,-3,9,-8,-4,8,-6],[-9,-5,1,-7,-5,-5,2,3,-8,-7],[5,-4,-6,-7,8,1,2,6,-3,-8],[5,-9,-3,-5,7,3,5,-8,-8,5]]], dtype = "int8")#candidate|6203|(10, 5, 10)|const|int8
var_6204 = relay.var("var_6204", dtype = "int8", shape = (10, 5, 10))#candidate|6204|(10, 5, 10)|var|int8
bop_6205 = relay.right_shift(const_6203.astype('int8'), relay.reshape(var_6204.astype('int8'), relay.shape_of(const_6203))) # shape=(10, 5, 10)
bop_6213 = relay.less_equal(bop_6205.astype('bool'), relay.reshape(var_6204.astype('bool'), relay.shape_of(bop_6205))) # shape=(10, 5, 10)
output = bop_6213
output2 = bop_6213
func_6224 = relay.Function([var_6204,], output)
mod['func_6224'] = func_6224
mod = relay.transform.InferType()(mod)
var_6225 = relay.var("var_6225", dtype = "int8", shape = (10, 5, 10))#candidate|6225|(10, 5, 10)|var|int8
output = func_6224(var_6225)
func_6226 = relay.Function([var_6225], output)
mutated_mod['func_6226'] = func_6226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6685 = relay.var("var_6685", dtype = "int64", shape = (13, 4, 4))#candidate|6685|(13, 4, 4)|var|int64
var_6686 = relay.var("var_6686", dtype = "int64", shape = (13, 4, 4))#candidate|6686|(13, 4, 4)|var|int64
bop_6687 = relay.logical_xor(var_6685.astype('int64'), relay.reshape(var_6686.astype('int64'), relay.shape_of(var_6685))) # shape=(13, 4, 4)
output = bop_6687
output2 = bop_6687
func_6714 = relay.Function([var_6685,var_6686,], output)
mod['func_6714'] = func_6714
mod = relay.transform.InferType()(mod)
mutated_mod['func_6714'] = func_6714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6714_call = mutated_mod.get_global_var('func_6714')
var_6716 = relay.var("var_6716", dtype = "int64", shape = (13, 4, 4))#candidate|6716|(13, 4, 4)|var|int64
var_6717 = relay.var("var_6717", dtype = "int64", shape = (13, 4, 4))#candidate|6717|(13, 4, 4)|var|int64
call_6715 = func_6714_call(var_6716,var_6717,)
output = call_6715
func_6718 = relay.Function([var_6716,var_6717,], output)
mutated_mod['func_6718'] = func_6718
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7201 = relay.const([[[4.349474,-2.534218,5.687712],[-4.636237,-9.014947,9.520225],[-7.450050,-0.416404,5.402644],[-8.198121,-0.636547,0.809860]],[[-4.690841,-0.357895,5.812901],[3.966195,4.002534,9.243168],[9.047422,-1.306233,-1.351476],[-1.250768,-0.785308,-3.407123]],[[-7.222972,-9.900704,6.951026],[9.557438,0.566010,-4.623365],[4.240892,-7.730277,9.304856],[8.871822,1.036655,1.739832]],[[7.550147,9.882824,-4.586171],[-4.820108,-1.023054,0.860397],[-3.559812,9.127274,-5.710843],[-0.633511,2.235822,-0.047875]],[[-2.842921,3.716477,1.567931],[-0.254531,5.929406,9.522101],[0.279023,-4.660300,-8.709965],[-5.993090,-6.250361,-9.724315]],[[6.168764,6.566812,7.029096],[8.403102,4.725285,-5.153653],[7.383769,-6.047884,-3.491664],[-9.871723,3.266801,5.137732]],[[4.175558,-2.758671,2.891391],[-1.784142,8.105122,-7.833387],[-9.581715,7.206639,-9.956351],[-2.689378,-9.927977,-2.122834]],[[-7.932568,-4.231451,1.219882],[6.788525,1.968038,7.100789],[2.053531,6.794993,8.926383],[0.503102,-8.039417,0.247696]]], dtype = "float32")#candidate|7201|(8, 4, 3)|const|float32
uop_7202 = relay.sin(const_7201.astype('float32')) # shape=(8, 4, 3)
bop_7206 = relay.logical_xor(uop_7202.astype('int64'), relay.reshape(const_7201.astype('int64'), relay.shape_of(uop_7202))) # shape=(8, 4, 3)
output = relay.Tuple([bop_7206,])
output2 = relay.Tuple([bop_7206,])
func_7211 = relay.Function([], output)
mod['func_7211'] = func_7211
mod = relay.transform.InferType()(mod)
mutated_mod['func_7211'] = func_7211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mutated_mod.get_global_var('func_7211')
call_7212 = func_7211_call()
output = call_7212
func_7213 = relay.Function([], output)
mutated_mod['func_7213'] = func_7213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_7218 = relay.TupleGetItem(func_7211_call(), 0)
call_7219 = relay.TupleGetItem(func_7213_call(), 0)
func_6075_call = mod.get_global_var('func_6075')
func_6079_call = mutated_mod.get_global_var('func_6079')
const_7228 = relay.const([-1,-8,1,8,-8,10,-7,4,-3,-3,-9,-8,-3,-6,-9,10,7,8,-10,7,-3,1,5,1,6,9,-1,10,-5,9,-7,-6,7,-4,10,-6,10,2,3,-3,9,6,-10,-6,-1,9,-3,6,-8,-8,-2,3,4,-5,-1,7,10,-2,10,-5,2,-10,-10,-5,-7,-9,1,-10,9,3,-6,2,6,8,5,-6,1,1,4,-2,-9,9,4,5,7,-3,-10,10,-2,-9,-4,-3,-3,-6,8,-8,-8,-9,8,-6,-3,9,8,9,-10,9,3,8,-6,-3,-4,-3,9,7,-9,-4,3,-6,-5,-3,3,-8,3,2,-2,-4,-7,-1,3,6,10,-4,3,8,-5,2,4,-4,-6,8,5,-6,-3,1,-2,5,6,7,-9,7,7,-4,7,-7,6,3,-9,6,-6,7,-5,-4,-4,-10,7,9,-5,2,-10,-7,6,10,10,9,-4,-8,9,-7,2,-5,5,10,6,-1,2,-5,-1,6,-2,9,-9,4,-6,10,8,-6,9,2,7,2,-3,-10,1,-8,-10,8,4,9,2,-10,5,3,2,-9,-1,10,7,8,5,2,3,-7,3,10,7,8,-8,8,-8,-10,-8,-3,-10,3,-9,3,7,2,9,-5,-4,10,4,1,-5,-3,3,5,8,-1,5,2,7,3,-6,2,-1,-1,10,-9,4,5,-9,-1,10,-6,7,8,2,9,10,-1,4,8,-5,-9,10,-8,-4,-5,-2,-3,1,-4,5,-2,-5,-5,-6,-2,-1,-1,5,-7,-8,-7,-5,1,2,-8,9,1,4,4,9,10,7,1,9,-2,2,9,-8,5,8,-8,-5,4,6,-9,3,7,1,3,7,10,5,-9,2,6,7,-8,4,2,-9,5,2,-6,-9,6,-6,-7,6,7,-10,-9,-8,9,-8,-2,-6,10,10,-3,-5,-4,5,-4,-9,-10,-6,8,-7,-6,10,3,6,3,1,2,5,9,-9,-5,-5,-7,-6,-5,-4,10,-10,9,8,9,-8,-5,10,6,-8,10,-6,4,-2,4,9,-9,9,-4,-7,-6,5,9,7,7,-6,7,-3,-3,10,-2,-3,10,6,9,-9,2,8,1,7,-1,4,5,10,2,-7,-1,-5,2,-6,-9,-10,1,10,-5,2,10,-5,3,2,7,2,-10,8,-10,-7,-1,8,6,4,7,-9,-1,-3,-2,-2,4,7,-2,-10,-1,-9,-5,-4,5,2,5,-10,-10,3,-7,2,-10,7,-6,-2,5,9,8,-9,-1,-4,6,5,6,7,2,5,8,3,3,3,9,-6,-5,-10,9,5,8,9,-7,-7,6,2,-8,-10,-4,-8,6,10,10,10,-3,-5,6,-5,10,3,-6,4,3,6,8,10,8,5,-9,-7,3,-3,6,5,2,6,4,3,-5,-7,-2,6,9,8,-10,10,7,-4,3,-10,7,4,-5,3,7,2,-6,-9,-4,3,-2,-9,6,3,-5,4,-9,5,5,-4,7,2,-6,8,-8,4,-4,10,-8,-9,5,5,2,-8,10,-9,-7,10,-2,3,-9,-9,-2,3,1,1,5,-2,7,-4,-1,2,6], dtype = "int32")#candidate|7228|(600,)|const|int32
const_7229 = relay.const([-10,5,9,-10,-2,-1,7,10,9,1,-1,1,-9,-8,-6,-2,-1,-4,10,3,9,6,-7,9,10,10,-4,3,-7,-10,-2,-9,-9,5,-9,3,4,5,6,5,-4,7,-9,5,5,-9,8,-2,-3,8,5,1,1,-1,3,-2,3,7,2,-10,-7,-6,8,-6,4,4,-7,1,2,4,-7,2,-8,4,3,8,2,7,-1,3,-6,7,2,1,9,9,4,8,2,-1,-7,-5,5,10,-4,3,10,5,-7,5,-4,2,8,7,3,5,10,-10,3,-3,3,-10,8,-2,-4,3,-3,-3,6,-1,9,-10,9,4,-7,10,4,2,7,-1,3,6,-8,7,8,-6,7,6,3,7,-6,4,8,6,-2,-6,-8,10,-3,1,-6,-10,2,-8,-5,-8,3,3,-8,9,-3,-2,9,-8,-9,-4,5,-6,10,-3,-1,6,-1,-7,7,6,1,2,9,2,8,-3,-2,9,4,-6,2,-9,2,-1,-2,-10,6,4,-1,-5,6,1,10,-9,3,1,9,8,8,2,-6,-4,6,8,-6,-6,3,-8,9,-7,-5,8,8,9,3,5,-8,2,7,-1,2,-3,7,6,-3,10,1,5,-4,-7,-6,8,1,7,-9,9,8,-6,7,10,-7,9,-8,9,-7,-9,-9,8,-7,8,-5,-7,2,7,5,9,-8,10,-3,6,-5,4,1,6,10,2,-2,8,2,3,-3,-7,-3,4,6,-5,-4,9,-4,3,-10,9,4,7,-3,3,-5,6,7,-3,10,6,-8,1,-9,-5,-9,-2,-2,-9,1,2,2,5,7,-2,5,-3,4,-6,6,3,-6,8,-4,-4,1,-1,3,2,-4,-9,4,-4,5,3,-1,-9,-1,-4,8,-2,-3,1,10,8,-8,5,-8,-2,10,6,-4,-8,-2,2,2,8,-8,3,-2,2,-7,-4,7,-8,3,-6,-9,-10,9,-10,7,-8,6,-2,4,8,4,-6,8,-6,8,-8,8,-7,-1,10,6,4,9,2,-2,5,-2,7,-5,-3,-6,-9,8,-5,-2,6,3,1,7,-5,4,7,1,8,-6,8,-1,-8,4,9,-8,-5,6,-1,9,-2,-6,-1,-2,4,9,9,10,10,-1,-9,3,-10,-1,-1,-8,5,1,-2,4,-10,7,-2,7,10,-10,-8,6,3,-8,-10,-7,-10,-1,-3,8,8,3,4,-6,1,-5,1,7,-1,-8,9,5,6,-4,3,-4,-7,2,8,-6,-4,-8,-6,-8,-9,-7,-4,10,10,-8,-5,-5,9,4,5,-6,4,-5,8,7,-2,8,7,-3,-1,2,-5,-8,6,4,3,2,6,8,-3,-3,-9,8,-8,-7,-3,-5,-7,5,-5,5,-10,7,-6,-2,-2,-1,-6,9,9,-3,6,-1,10,-4,-4,5,8,10,7,-1,8,1,9,10,-7,-10,-2,6,8,7,9,-6,3,8,-9,-10,1,1,-5,-7,5,-5,-10,-6,-1,2,6,8,5,1,7,1,5,7,4,-2,3,5,-10,-2,6,2,2,-1,-8,-3,4,-2,-7,-10,-2,9,2,9,-6,3,-4,4,-9,-5,7,-1,-1,3,1,-8,-4,6,-2,7,5,10,9,7,10,4,-9,2,7,9,-7,-8,-5,-8,-1,-7,-7,8,-4,3,-9,3,1,10,-9,5,-6,-6,9,-10,-8,-9,-7,-2,-3,4,3,10,3,3,8,7,-3,5,-6,2,-3,3,-9,-2,4,-2,5,3,3,1,6,-3,10,10,-2,-4,-5,-8,3,-7,-6,-4,-3,1,6,5,-8,10,-6,-6,5,7,6,-4,-5,-6,2,-2,-10,10,4,6,4,10,6,-2,7,-1,-5,3,-8,1,-2,2,7,-6,7,-1,-9,3,-10,-6,-6,-1,4,1,7,-9,-6,-1,-4,1,10,-2,-4,6,-2,10,-1,-1,9,6,-3,-4,-7,1,1,-3,-4,10,2,4,8,3,7,4,-5,1,-7,-8,-10,-6,-1,-4,5,-4,9,4,4,-9,-3,-6,-7,-8,-3,-9,-7,4,3,4,-3,7,-8,1,8,2,7,10,6,8,-6,2,1,1,5,4,-6,10,-1,6,5,1,-10,5,10,-7,10,10,-9,-7,-8,4,1,-10,7,2,-5,-3,5,-3,1,9,-9,-5,2,3,-3,4,3,6,9,1,2,-1,3,-10,-1,-6,-10,1,2,-1,-2,-9,-6,-4,-7,-1,8,6,5,6,6,10,-4,7,-6,-3,1,3,8,-6,-2,-4,10,-4,5,-3,-5,-7,6,6,-10,10,10,-3,-3,-5,-8,7,-8,-5,2,-4,-2,5,4,-10,10,-10,-5,1,1,-5,7,-7,5,-10,9,-6,-6,9,-4,-4,10,5,6,5,3,8,-2,-7,-4,-7,-2,4,-6,5,3,-2,-5,8,4,3,-3,-9,4,3,-2,3,-5,-9,-1,9,-6,-6,-2,6,-8,-3,-8,8,-8,-1,3,-4,2,-7,10,8,-1,-10,-1,-8,5,-1,-6,6,10,-2,-1,9,-2,8,-4,-7,-1,7,1,-10,-9,-9,10,6,-3,2,9,-9,10,10,-6,-1,3,-8,5,3,10,8,-9,1,7,8,-5,-4,8,10,-10,-10,9,7,7,8,2,-9,-2,-5,-4,-2,3,5,-9,-3,6,-10,-1,-8,9,-6,-2,3,3,-1,-10,5,1,5,7,-7,-1,-7,-5,9,-1,-4,9,-8,-5,1,-4,-9,8,-2,-1,-7,7,-5,9,8,-10,-4,10,-3,-3,-10,-3,-1,-4,6,-4,-8,-7,7,6,9,-8,4,6,-4,-2,-5,7,5,-1,-7,-6,-7,-7,-2,-10,10,3,-7,-3,-6,-7,-9,-9,6,-7,-4,-9,7,-5,-2,7,4,-5,-9,-2,-3,-7,5,-9,3,-5,9,8,-3,-7,10,6,6,-7,-10,-9,9,-5,2,-7,-10,-4,8,6,-8,6,-7,-4,-2,7,9,4,3,-2,3,-2,2,1,1,-1,10,-7,-8,7,3,3,-1,-9,8,9,-3,-2,10,-6,1,-10,-5,-8,-9,6,-1,3,7,4,7,7,-8,-6,-4,-9,-2,-8,5,3,-10,-7,9,1,-2,-3,2,-9,-1,-9,9,-10,5,9,1,-6,-10,-4,-1,-7,1,5,2,-4,-1,7,-8,-1,4,-5,-2,8,3,1,6,-10,1,-2,9,5,-8,-10,-1,1,10,10,6,4,-9,-5,4,-6,9,8,-4,8,9,-10,8,4,7,2,4,-7,2,10,5,10,5,-4,5,3,-7,-4,4,4,4,9,1,-10,7,-8,-7,-8,10,-3,1,1,-9,-4,-3,-8,-4,4,2,10,-6,-2,9,-7,-2,-6,-6,-1,-1,2,3,2,7,-5,-10,8,3,10,10,3,-8,4,-5,3,-2,-4,4,-4,-10,10,4,-7,-10,9,2,1,-10,-6,-2,2,3,-10,-2,10,3,-3,7,-4,-4,-8,-6,8,6,10,4,-3,-10,8,9,-5,5,9,-7,-3,-7,-1,10,8,5,3,4,10,2,5,3,2,-7,4,-6,-6,5,-6,7,10,-4,5,2,-9,3,-4,5,8,10,7,-8,9,-2,-10,-8,5,3,9,5,-10,3,7,-1,-1,5,-7,5,-8,-10,8,-9,2,-2,7,-9,6], dtype = "uint8")#candidate|7229|(1386,)|const|uint8
var_7230 = relay.var("var_7230", dtype = "float64", shape = ())#candidate|7230|()|var|float64
call_7227 = relay.TupleGetItem(func_6075_call(relay.reshape(const_7228.astype('int32'), [5, 12, 10]), relay.reshape(const_7229.astype('uint8'), [1386,]), relay.reshape(var_7230.astype('float64'), []), ), 3)
call_7231 = relay.TupleGetItem(func_6079_call(relay.reshape(const_7228.astype('int32'), [5, 12, 10]), relay.reshape(const_7229.astype('uint8'), [1386,]), relay.reshape(var_7230.astype('float64'), []), ), 3)
func_4544_call = mod.get_global_var('func_4544')
func_4547_call = mutated_mod.get_global_var('func_4547')
const_7233 = relay.const([[0.281237,4.326050],[-1.319172,5.329917],[0.564656,-6.664395],[-4.383375,-3.547333],[5.579302,0.398602],[6.086978,6.360679],[3.640266,-6.373449],[-5.065491,-3.070850],[-7.395263,-8.569810],[-2.185717,-0.206583],[-0.558735,-7.927492],[9.489547,-0.509039],[4.315683,-4.943259],[2.447434,8.249204],[-5.402022,5.395787],[-8.697333,5.123555],[1.465230,4.568297],[6.690003,5.638386],[-8.945794,-1.369659],[-2.095253,-7.195207],[7.607384,2.294637],[-9.253449,3.029454],[-4.865374,-7.382893],[-1.649630,7.124221],[4.595703,-7.017747],[-0.434551,-9.785735],[1.626834,-3.156612],[8.073165,7.900990],[3.723314,-6.578685],[7.123898,6.156584],[-0.374560,-6.995929],[7.381520,-8.183237],[-6.769032,5.182456],[-6.828593,7.032324],[-7.711029,3.894948],[-2.248856,-0.933109],[1.832424,-9.761570],[9.830901,8.340949],[1.588037,-7.497064],[4.426944,8.581904],[3.405469,1.513760],[-3.747026,9.849478],[-0.299055,-8.669068],[-5.711254,3.369741],[2.533235,-2.055804],[4.289772,-6.627814],[-0.554155,1.318425],[9.983278,5.790962],[2.014797,-5.440473],[-9.929379,-7.268917],[4.331247,1.925164],[-2.576877,1.444388],[-6.094149,-9.377155],[4.013175,-9.035031],[7.849606,-2.158194],[-0.867163,-4.163609],[-2.698304,7.324597],[-3.438446,4.001304],[9.840743,9.475290],[4.342096,2.073688],[3.069229,2.439554],[7.940844,-7.311665],[4.622996,8.099798],[-9.623010,8.152460],[6.734366,7.999803],[6.153751,6.489880],[-5.902603,-0.434978],[4.859292,5.206884],[4.149422,-3.130158],[1.772940,7.137213],[6.341998,-3.600777],[-1.422615,-3.626465],[8.695285,-5.548218],[-6.707902,3.439123],[-7.998386,3.058584],[3.965382,-3.152167],[5.467858,5.246593],[2.442049,-1.691425],[-9.381614,1.125528],[-6.696195,-9.114295],[9.214375,-1.537274],[-1.288073,-4.469759],[0.877398,-1.657389],[7.889362,9.445511],[7.389066,3.159519],[-5.149043,4.194979],[-9.663958,3.336390],[-2.487073,-8.534146],[-9.514187,-3.209236],[-7.111979,-0.811016],[-6.447693,4.151439],[9.326852,-7.751374],[3.883408,-6.440919],[8.547263,-9.727800],[-1.953584,4.382098],[3.184867,-4.563790],[-3.152460,-6.241611],[-1.804665,3.801746],[-2.747777,-2.370243],[5.108295,-7.278281],[-6.537512,-1.525762],[1.272214,4.657586],[4.589430,-1.739905],[9.256262,-4.450082],[7.610139,-7.188321],[7.333344,-6.234712],[-9.718624,-5.112879],[-4.311113,4.267747],[3.167390,-5.965528],[-6.950882,-2.240081],[-4.415939,2.968165],[5.024990,-0.751478],[-2.058440,-5.219512],[-1.724114,5.154560],[2.663036,-8.474232],[9.496177,-1.847277],[-8.745655,0.854903],[2.490814,-8.811352],[-6.552654,3.100394],[2.251029,7.748680],[-7.528084,-6.781453],[-7.896136,-1.226754],[3.233828,1.698742],[-0.500514,9.702106],[8.348248,7.658240],[-7.123436,-2.066297],[6.620869,-5.960624],[5.921049,2.132589],[-1.559407,-5.286526],[1.560101,-1.804441],[-3.111307,8.268548],[-4.615422,7.316490],[3.320365,-7.017171],[-9.584695,4.735011],[-8.913104,-7.099281],[6.841712,3.587778],[4.368145,-2.265913],[-9.424026,8.359700],[0.218525,9.456861],[3.581348,7.620880],[-7.881218,-4.714404],[-9.720589,-4.402694],[-1.214523,4.420658],[-1.252424,8.983894],[-6.009010,1.504167],[-1.276843,1.445463],[9.095468,8.793662],[6.161630,-1.836291],[-2.380114,-6.630552],[-3.814625,0.634901],[-7.668331,-1.435522],[-8.104974,-2.158836],[4.514783,4.948846],[6.475714,4.638919],[-9.719561,7.517432],[3.724695,7.014110],[6.900123,5.533568],[-2.074303,-7.873668],[7.503495,-9.193802],[-2.253473,-3.754600],[-5.418053,0.710117],[7.963914,-0.290092],[-0.911685,4.188892],[7.496676,9.364322],[0.843128,-0.895103],[-9.138618,-2.875318],[2.797635,5.265234],[4.018457,-5.943660],[6.876627,0.787472],[-6.763548,-7.557856],[-4.142477,6.069768],[-1.108512,-0.224790],[0.221709,-2.552407],[6.434776,9.482383],[0.766006,-1.945464],[-3.229665,-8.536331],[-8.187736,-5.808699],[5.618074,8.396177],[3.035608,-9.212402],[-2.766840,9.503765],[7.514829,6.033703],[-3.315861,-0.825814],[0.536976,-8.645662],[9.040944,5.820943],[9.607273,-6.321771],[4.277429,-6.787285],[-9.712897,-7.532757],[4.470493,-6.326456],[0.166763,3.362345],[-2.059636,0.412616],[-8.525179,-1.593472],[-7.793852,2.613687],[5.520183,8.673720],[-6.696951,5.216725],[-0.651005,9.459378],[1.386878,-1.959529],[2.168858,-7.881484],[2.266218,0.474427],[-5.534878,8.220165],[7.001483,-9.866863],[7.579453,7.582022],[9.836212,-8.163184],[5.308026,4.238965],[-8.290597,0.161900],[3.992689,1.415171],[-7.032815,-6.845064],[-8.935746,6.761505],[-0.458103,4.188029],[5.291343,9.372077],[7.082701,-1.162013],[3.786683,-0.842445],[-9.546362,5.863268],[8.083158,-3.886960],[6.676656,-5.929626],[1.775772,-3.415897],[2.659003,7.234168],[-1.840224,9.148271],[-7.359864,-0.649879],[4.431975,8.084799],[0.383965,5.843750],[-7.102843,-8.284552],[-5.356475,3.770009],[-2.179378,-4.369486],[1.957775,5.574826],[-4.019279,-3.499257],[-8.585575,1.723846],[0.285926,7.419298],[6.125086,4.274962],[0.033109,-6.156272],[6.558577,8.641365],[9.207999,7.989911],[3.992586,-3.051918],[-8.136833,-5.130850],[-2.014432,-9.017591],[2.065017,-7.007557],[9.787710,-9.027940],[3.389595,-3.932212],[-4.238482,-8.699861],[7.670412,7.126662],[-3.412594,0.618882],[-5.854865,-6.916954],[7.441099,-7.399228],[-2.077450,4.497753],[-5.285743,-1.564410],[-2.785036,-2.713696],[-0.173578,-5.070179],[3.254142,-9.433716],[-9.364435,-3.964478],[-8.772180,7.887084],[4.477677,-8.768893],[-1.991977,0.689041],[8.922871,-2.298417],[6.088148,-5.106748],[1.935130,9.051488],[-2.257487,2.922903],[8.065843,7.952752],[-0.960494,6.721515],[-9.160495,4.425329],[-3.274893,-2.553416],[0.264148,1.874197],[9.722687,-5.522066],[4.742158,9.837448],[-6.449777,-5.673329],[-3.321685,8.604144],[-5.972477,8.477352],[-1.756248,4.137941],[5.125159,-7.331595],[-6.105311,6.741621],[9.659088,-4.117190],[-0.552761,3.975123],[-9.478285,-8.877219],[1.604105,8.438402],[5.653769,9.332182],[-6.407406,-6.192611],[-0.304028,-2.580172],[-9.276862,-1.794878],[9.330407,-9.522868],[9.897560,-0.172613],[0.754815,-1.041992],[-8.969992,-4.786036],[-9.927468,0.893142],[-5.304221,8.888613],[-3.359962,4.687706],[9.792528,4.468760],[6.440174,-6.578338],[9.875924,-7.484682],[-7.785926,5.543593],[2.609727,-7.751470],[6.084724,-8.904733],[8.125939,-7.452843],[9.476412,-0.314632],[-8.879526,0.229369],[-9.725397,-1.246025],[7.964941,-4.637806],[2.665351,-8.937272],[-0.833545,8.444202],[2.646544,1.627598],[5.776848,-5.342640],[-8.391082,3.294467],[-7.735602,-8.249445],[0.707746,-2.773958],[9.728323,-2.335783],[3.092408,9.662467],[7.188329,2.940127],[-8.413634,9.692523],[2.542350,-4.072521],[-8.517954,-9.010090],[4.841598,9.509262],[4.144225,1.869084],[4.136093,1.707941],[-0.561760,-7.546346],[0.690788,-6.902590],[-8.386051,6.739193],[-2.599513,7.673368],[-3.332185,2.646061],[-2.947750,-1.899267],[3.417319,8.346150],[0.229623,2.054495],[0.750543,3.187954],[5.420440,1.243688],[5.296198,6.579838],[-4.866439,-5.232653],[-9.692485,-8.243689],[4.507698,-1.518210],[-0.302446,8.814448],[8.072606,-4.038540],[-0.240152,3.279442],[1.012703,1.210894],[-0.311660,-9.061322],[-0.824999,6.813386],[6.480758,6.153734],[-7.921516,2.243903],[8.299665,-0.365372],[7.503856,-2.271676],[-4.900077,5.514125],[-4.814996,-3.359242],[-4.892713,0.363569],[5.558738,0.226469],[0.336530,2.476721],[4.132968,-9.629501],[7.704687,2.367777],[4.349151,-7.481138],[4.895542,-8.000275],[3.311888,-6.262414],[0.452121,-5.139411],[-2.478213,3.166655],[-9.517959,0.302373],[3.394649,6.968169],[-7.522767,0.713212],[-8.641312,9.111569],[-3.572293,7.935055],[-2.395165,3.177392],[8.755394,6.237598],[6.564232,3.679950],[1.342590,1.367327],[0.745876,-8.763429],[6.014103,4.097726],[2.178139,-7.310592],[-3.350925,7.836189],[7.809062,5.100039],[-6.150509,0.853578],[7.051765,-9.401192],[0.538117,-0.896952],[-3.699444,8.381155],[-6.446739,5.373373],[0.625674,7.323115],[4.841020,7.881089],[6.844403,6.499989],[5.520059,-4.921317],[-4.354622,0.883068],[-9.050129,-7.622547],[-8.159747,0.454452],[-0.183975,0.898669],[-4.288823,-5.322696],[5.776904,-4.249166],[-8.905340,9.125990],[-9.454164,-7.714605],[-1.202209,3.750941],[2.363651,2.341393],[4.661040,0.222180],[1.078380,1.138510],[4.653906,1.126725],[9.694856,-6.470773],[5.340414,3.156248],[4.752036,-2.138667],[-3.075753,-2.300583],[6.699715,6.044399],[-1.952605,8.998100],[1.885159,1.127254],[-8.001576,-2.009315],[0.965390,3.050089],[-5.980900,-3.772104],[-8.360403,8.326714],[-7.129491,3.278125],[1.632171,-4.593500],[6.849524,6.009428],[8.078428,3.723082],[2.914893,4.833887],[-1.289062,3.659463],[-6.470750,-1.800425],[1.435957,8.048379],[-9.455825,5.397299],[3.776888,0.757209],[0.080843,-9.050270],[-2.977736,-9.853479],[3.557972,-9.953100],[-5.456013,-7.447660],[5.596612,-3.643720],[-7.119987,6.548361],[-2.934014,-0.984956],[-7.814713,-5.463326],[-2.236959,-1.170050],[-9.368221,-0.856185],[6.373532,-0.317810],[-9.290823,-2.235231],[8.379206,-4.869105],[-9.312312,-8.951787],[5.776839,-6.296497],[7.751609,7.250608],[7.306097,-2.512298],[2.851480,7.752004],[5.214433,-0.171636],[-6.418318,3.937399],[0.653483,3.795497],[2.136338,-5.321845],[-2.339558,1.363695],[3.062408,9.750079],[-7.360909,5.993667],[-3.587711,-3.623354],[-2.068113,-9.180053],[9.042571,-9.977805],[6.934421,-1.377143]], dtype = "float32")#candidate|7233|(432, 2)|const|float32
call_7232 = relay.TupleGetItem(func_4544_call(relay.reshape(const_7233.astype('float32'), [6, 9, 16])), 0)
call_7234 = relay.TupleGetItem(func_4547_call(relay.reshape(const_7233.astype('float32'), [6, 9, 16])), 0)
output = relay.Tuple([call_7218,call_7227,const_7228,const_7229,var_7230,call_7232,const_7233,])
output2 = relay.Tuple([call_7219,call_7231,const_7228,const_7229,var_7230,call_7234,const_7233,])
func_7235 = relay.Function([var_7230,], output)
mod['func_7235'] = func_7235
mod = relay.transform.InferType()(mod)
mutated_mod['func_7235'] = func_7235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7236 = relay.var("var_7236", dtype = "float64", shape = ())#candidate|7236|()|var|float64
func_7235_call = mutated_mod.get_global_var('func_7235')
call_7237 = func_7235_call(var_7236)
output = call_7237
func_7238 = relay.Function([var_7236], output)
mutated_mod['func_7238'] = func_7238
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7240 = relay.var("var_7240", dtype = "float32", shape = (4, 15, 2))#candidate|7240|(4, 15, 2)|var|float32
uop_7241 = relay.cos(var_7240.astype('float32')) # shape=(4, 15, 2)
output = relay.Tuple([uop_7241,])
output2 = relay.Tuple([uop_7241,])
func_7243 = relay.Function([var_7240,], output)
mod['func_7243'] = func_7243
mod = relay.transform.InferType()(mod)
mutated_mod['func_7243'] = func_7243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7244 = relay.var("var_7244", dtype = "float32", shape = (4, 15, 2))#candidate|7244|(4, 15, 2)|var|float32
func_7243_call = mutated_mod.get_global_var('func_7243')
call_7245 = func_7243_call(var_7244)
output = call_7245
func_7246 = relay.Function([var_7244], output)
mutated_mod['func_7246'] = func_7246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_7273 = relay.TupleGetItem(func_7211_call(), 0)
call_7274 = relay.TupleGetItem(func_7213_call(), 0)
func_967_call = mod.get_global_var('func_967')
func_970_call = mutated_mod.get_global_var('func_970')
const_7279 = relay.const([-8.514832,3.926245,6.381420,-6.347027,-6.575465,3.072044,-8.488409,7.400350,1.003655,2.055583,-4.574705,-4.580193], dtype = "float64")#candidate|7279|(12,)|const|float64
call_7278 = func_967_call(relay.reshape(const_7279.astype('float64'), [3, 2, 2]))
call_7280 = func_967_call(relay.reshape(const_7279.astype('float64'), [3, 2, 2]))
func_1330_call = mod.get_global_var('func_1330')
func_1332_call = mutated_mod.get_global_var('func_1332')
const_7288 = relay.const([3.374494,-1.930616,9.141439,-9.799997,2.898671,6.034407,3.311840,0.063155,-0.482005,5.476858,-2.506117,-3.816074,6.760999,4.435197,6.462928,2.297861,-8.429843,0.606391,0.216647,-7.706962,-0.804881,5.607932,4.914883,4.975055,0.803367,2.455219,4.511275,-6.527843,9.963858,8.005839,-7.758951,-4.176366,7.091650,-5.479311,5.400156,4.447501,5.736996,1.306992,2.192519,-3.296245,2.828661,-3.958760,3.846075,8.253916,9.672606,7.710950,-6.601712,-6.621202,-3.767435,-2.325461,4.705394,8.250247,6.439164,8.781111,5.075708,5.079377,0.976468,5.484338,-8.745364,-3.879620,2.766674,4.646784,0.008549,6.520127,0.613768,5.358393,0.466433,3.684954,7.931932,-3.800430,-0.374354,-0.466418,7.202344,-5.242402,-2.484119,9.820710,-7.119099,2.921340,4.514810,9.017929,9.266855,9.384815,6.828333,2.401289,-0.517348,4.247740,6.722850,-9.050648,6.449786,-5.766324,4.919597,-7.621257,-7.370155,4.564978,-6.271988,-3.843033,5.346889,3.282707,-8.209973,-5.690774,-3.516218,2.333197,3.044260,-2.142836,-1.330880,-9.052938,8.590215,-8.617390,8.946310,5.394856,-3.535711,6.326383,7.681989,3.668753,5.836073,-1.750862,3.750285,1.758556,-0.320241,-7.503768,-3.606779,-8.521554,3.855320,0.495544,4.351347,-6.493006,8.463385,2.303511,-3.482512,-0.572145,-5.596584,8.716227,7.299248,-4.272077,7.168124,-7.669667,-6.699321,2.513997,9.359766,-4.819551,8.885721,1.836908,-4.295600,1.068366,7.343517,-4.008605,0.548909,5.094104,-5.095833,-1.156049,-8.084691,9.022257,4.538131,-6.656776,4.263343,9.615731,-0.371776,9.675798,-1.306288,3.099776,7.420948,6.642409,-8.662875,1.286623,4.367350,-5.526649,-9.781428,-3.058429,-5.654364,3.726443,5.183289,-1.030988,2.363082,-8.902171,-6.824705,6.668811,9.120323,-1.657475,6.008786,-1.617793,8.171526,5.183371,-4.111385,-1.616551,-1.794745,-6.144236,-9.115075,8.712930,0.743715,5.657789,-4.590207,1.316893,-7.493951,4.211747,4.090104,-2.539655,-5.909285,-8.217056,1.283216,8.834846,-3.911613,1.515616,-1.333785,-6.421288,-1.737160,7.333773,-5.925086,-7.231799,5.145637,0.244881,7.815317,1.567211,3.108421,-7.816388,-2.846777,-1.458109,7.744299,-4.792368,9.803948,0.019354,-2.786894,-7.191029,6.734812,9.768346,-4.353097,2.302501,-4.498181,8.316892,3.246040,-9.511342,3.217222,-5.205009,-9.527326,-4.216664,-7.612017,0.236199,-4.553909,7.755937,-3.238486,-0.071232,1.700375,-9.553867,4.580959,7.781235,4.670817,-6.424223,7.379127,-1.369967,1.901083,2.740180,-9.586471,6.193385,-8.882536,5.752740,9.200901,2.454154,8.998818,2.818940,0.071609,8.122769,-5.678972,5.141239,8.694375,-4.833578,-1.435557,-4.216910,-0.803643,5.650386,-1.720937,-2.956664,6.936501,0.475004,0.354599,1.527841,8.603959,-9.295455,-4.619885,3.878315,3.630536,4.132126,4.322134,-0.010108,2.780951,-7.929402,-1.970515,7.841668,-0.030959,8.598142,4.248264,-8.493347,4.182877,2.929358,-6.531685,5.493424,-2.330153,5.747898,-2.134610,9.509057,-4.413020,-2.791833,-6.331899,-4.042803,-9.737117,4.619765,-3.510513,-8.631108,-9.656675,8.836676,8.683723,-8.984822,7.569200,6.397670,8.058710,9.090548,7.182795,3.041576,-1.180741,-8.589720,9.819683,-1.878357,-9.740446,1.887534,-8.064263,1.592931,-4.724656,7.093397,-1.222190,6.105675,-2.341757,5.340617,-1.187471,2.817090,-9.913519,8.146535,5.733845,7.994691,0.996793,-6.581197,4.658628,2.250838,5.663784,-3.544266,3.778433,-8.349505,-4.846095,8.452878,-4.844316,6.619296,8.374671,-1.896723,3.574897,-4.749168,-9.987204,-0.186268,-0.758069,0.044841,5.114892,2.902539,-0.348829,-7.393029,2.362532,5.897897,-4.435706,-6.950318,-8.231450,9.944654,-8.373863,-5.926610,-3.587172,3.130887,-8.949737,3.510803,-4.802274,-6.214394,-4.801731,3.984807,3.236333,2.682509,-5.071742,1.639972,-1.946563,-3.908258,-0.035938,6.298088,4.467371,8.168109,-9.571450,1.532239,-9.195753,7.119806,-4.701369,-3.310282,9.629058,-3.861009,-3.924349,-3.727012,-7.786433,9.316212,1.068970,6.300011,8.203879,-3.792813,8.027761,-9.123268,-4.176412,-1.734275,7.308897,-2.501083,-6.941025,-8.367796,-0.185963,3.243594,4.285256,9.687093,-9.961586,7.289690,0.001312,0.317378,-8.565339,-8.239989,8.107970,7.468594,-6.767276,4.225267,-8.010753,8.122405,4.704472,3.110202,1.725740,7.602259,-9.623962,-3.635229,4.327702,-9.283377,4.729558,-0.447362,-6.086139,6.125488,2.154469,6.567490,-8.915953,-2.010765,-0.088712,-7.307298,-5.434289,9.694436,0.248854,-3.155330,2.126625,-8.347093,-2.098921,6.461785,-4.056294,9.981461,3.037966,-7.779109,9.463661,4.935795,-8.332458,0.041416,-3.855628,8.734340,-4.662481,-4.960972,4.625039,8.319197,5.566638,-0.317221,8.385900,1.335109,-5.360161,1.393312,-2.610335,6.522969,-9.341411,8.841656,3.695150,-7.255306,-0.633313,2.173567,5.896398,4.126950,3.661978,7.699330,7.130243,-6.444270,-6.402296,4.231191,-9.141311,7.232047,-1.660480,5.367788,-5.567761,4.435790,-8.970734,-2.188336,2.041752,-4.860636,9.405078,-3.874793,-3.111418,-1.081709,-7.521624,8.645800,9.048248,8.641164,7.192547,0.868845,4.439727,6.976884,-0.751972,5.224024,1.043099,-5.247641,5.286226,-0.278933,2.070084,-6.010268,-8.596638,7.404888,0.945449,4.742590,6.943153,-2.300734,-9.904722,1.363630,9.460097,-1.314128,-2.823607,4.696304,4.327612,-8.134790,-5.402540,-4.474405,-9.320184,-9.898368,7.094425,0.273414,5.757531,7.929315,6.130202,-8.378932,1.273996,6.953855,0.280655,-0.714409,-0.593344,-9.022726,6.781659,-5.415307,-7.557202,8.950845,-8.707996,-2.633353,-4.793567,3.919652,-8.839619,-4.988348,2.719402,-2.018680,-8.378886,9.225311,5.564379,-0.791196,2.762827,-5.844477,7.497958,4.419883,-3.968931,4.552002,7.220781,-2.755437,-8.394114,0.761528,5.674377,7.575122,-8.135441,-3.891139,-9.139096,7.455283,9.659197,4.459499,5.516199,7.248747,-9.428499,3.488521,4.877117,-6.269563,-9.999142,9.817586,3.796003,-1.908736,-2.288570,7.625868,2.531168,-2.883250,-4.827782,1.443457,-7.319172,-5.592200,-0.938952,-0.233870,5.990695,2.075495,-3.793519,2.405158,9.664138,-4.287198,0.110518,-8.784641,-7.913200,3.902075,-1.685550,-6.399729,0.373370,-9.832008,-8.362752,-2.151093,7.770944,-3.546437,-0.651843,1.657384,8.539804,9.156059,9.754401,7.545904,-6.531298,-5.270420,1.216766,2.436292,1.670443,-6.914258,-9.291413,-3.280122,8.192301,-9.154049,-3.658406,8.581474,6.625643,-8.206707,8.270519,-2.620838,3.148315,-6.601585,6.104192,0.694320,5.683953,2.067642,-9.170524,5.330989,-8.633899,-7.798722,5.926534,-2.949695,-8.071636,9.587461,-3.290804,-9.847300,8.415546,-9.877494,-5.389039,2.746859,-4.662487,-0.351325,-5.474337,-8.832881,5.227565,-1.365319,-1.849700,2.118647,7.001143,-7.004764,-4.460410,8.726019,-0.238854,-0.666018,-7.464270,-9.259928,-4.590886,4.374499,5.925160,7.294775,-7.423829,8.854023,-4.656616,-8.785087,-3.597275,3.658413,5.228374,-4.954477,3.074875,-9.443646,-9.023710,-7.489890,1.235331,-8.841761,6.625564,6.909492,2.538894,-4.534624,1.361548,4.492268,-3.229590,-1.835407,-9.370004,8.902704,-1.829678,0.461721,-6.552446,7.548490,6.542716,-7.118358,-9.277281,1.220559,6.503918,7.401005,-4.892988,-8.114227,-3.682216,-8.117928,3.579590,-6.753145,1.819903,-4.164396,7.254259,-9.993118,4.749671,7.626025,-0.157400,4.436325,-4.038060,4.883718,-7.391627,1.821460,-1.276535,5.030697,1.898867,2.591605,4.332379,4.939142,-2.529899,0.200832,-9.110259,9.783121,6.329272,-8.204498,7.449908,-8.527123,3.452367,-1.852566,2.447976,5.417666,4.740670,-1.862721,9.287385,2.271097,1.607203,1.859797,7.785315,-0.526201,-8.020870,3.687624,-5.166748,1.719178,5.496112,-7.433142,8.863958,-3.672936,-7.493959,3.735700,-1.264524,0.834697,3.528096,3.630850,5.584163,-4.748999,0.501101,-3.836965,2.165939,0.012839,5.072243,-3.528883,-2.838371,-5.342412,2.065071,-3.265883,-2.910129,5.123046,-4.575918,8.921933,-6.936769,5.985732,5.334914,-9.856234,9.682725,7.995608,5.031178,4.024417,-6.067110,-7.922981,4.160772,2.806921,1.262662,-8.770162,-8.949226,1.637377,8.744302,-6.299844,-8.452700,3.836318,-5.714354,3.354469,-3.164284,4.032548,-0.681270,-4.768683,-1.519106,0.147473,-1.012250,-1.453776,3.644829,-8.843439,-9.033291,3.259447,5.749125,0.594629,-7.481970,7.515052,5.924764,2.995101,-4.915354,-0.483858,-2.611781,-9.116914,5.929809,8.040816,0.585311,1.173477,-6.368726,-4.185939,1.747501,8.354595,-2.842084,0.461775,-3.165423,2.238240,-8.889094,6.572767,-5.624737,-5.736204,-9.358774,-9.856510,2.508459,-3.226742,6.915333,2.682414,-0.837508,-0.343877,9.683355,-4.253471,-4.293953,-3.870775,6.364847,5.260986,-2.810217,7.570565,1.102751,-7.253292,9.272370,-2.835161,3.603367,-6.453706,9.387396,6.947006,-3.866050,-5.027816,7.078036,3.729293,-3.361878,-5.098266,-9.824976,-9.265702,-2.027953,-5.140454,4.418298,-8.071127,-3.615099,-6.126209,6.986223,-6.483915,8.960224,-6.025894,-8.896875,-4.515921,9.313436,4.826273,-2.854868,1.393521,-5.443234,7.928863,3.283544,-8.986995,-0.867778,3.006229,-7.477496,7.971906,-5.340123,9.217228,0.594079,5.318311,-6.955676,2.327322,-6.102692,6.022260,-1.945687,-5.497287,-7.709729,-9.790128,3.237078,-6.389426,3.917872,-8.933929,-4.768199,-6.778583,6.600945,-8.456567,-4.758363,-5.903043,-9.585476,3.249258,-5.991754,-5.385685,2.757370,7.075653,-4.360907,-7.739279,4.470153,8.015054,-1.295013,-4.247526,-5.577057,-8.280320,-4.325358,6.591194,-4.034085,0.584890,3.341788,-7.711519,-0.493015,9.498517,5.171117,8.923726,-3.748136,-1.286319,-3.684404,-0.573277,5.410004,-3.603336,-1.232380,9.087318,-7.101964,5.364443,-1.906570,-7.639838,-0.202497,-2.295619,-5.059745,-4.858843,-2.859263,7.159419,6.902179,6.225899,-0.373210,-9.561467,-9.228180,-6.088474,4.608978,-8.813906,7.036336,-0.270161,-9.644575,8.293420,-4.288126,-4.749377,2.466250,-2.432519,8.078671,6.730201,3.832345,-9.130170,1.613100,-3.324278,5.531302,9.400015,-9.044246,-9.305509,-7.465291,4.155900,3.400663,3.160239,5.150234,-2.494382,-6.295958,4.453787,0.005508,9.318762,-7.439270,2.027261,-9.786475,-3.011852,9.298875,0.758116,-1.685898,-0.976337,-4.623398,-7.982506,7.149365,1.156854,2.782804,9.175302,-8.845163,8.826653,7.936241,-0.848123,4.156075,-7.567244,8.648661,-7.724429,-7.050727,-5.545809,9.142868,-1.455724,1.643201,-2.408686,-0.053728,9.317444,-8.036596,4.298883,-8.357002,2.864992,-7.695465,-9.161219,6.938575,-8.224308,9.546430,4.973096,9.706211,-8.561809,8.711511,2.485960,-6.179300,-7.993008,-4.957486,-9.336438,-3.388980,-1.715907,8.200850,-7.189365,-3.216735,-8.788401,3.924642,-6.044881,-7.170746,3.268723,2.263276,8.208847,-9.177022,-7.098563,-4.264813,4.308651,-0.218260,5.006061,-4.669129,-8.052263,-7.310749,-3.804427,-2.901630,7.742796,9.869938,-8.052061,3.068719,7.817692,-6.447154,-7.938605,-8.997658,2.498000,-7.700005,5.943555,-7.706562,4.164814,-5.593445,6.894065,-0.835945,0.913849,5.579888,-9.896523,-4.378604,-8.231751,1.292515,5.757029,-0.587066,-7.738226,6.328405,7.435558,4.598985,0.083027,7.168197,2.394915,8.394609,3.483482,-7.103586,2.476846,0.311088,8.981778,0.591547,8.073522,0.566562,-8.339632,1.762801,4.038701,-9.759751,-5.945417,8.945584,6.739234,0.142947,0.633721,-7.194132,-2.934070,9.074769,-9.381319,-0.375904,-4.966994,0.705428,-8.824854,1.971746,5.604933,-1.750117,4.777666,9.047704,-9.089416,4.716711,0.168317,3.630311,-2.198516,1.791382,7.143944,-6.433668,-0.734101,-9.793906,-1.135457,-2.307543,2.089234,0.429651,-7.692281,5.404776,9.319009,-8.730177,-6.311866,-8.489039,-5.852131,2.368621,1.913973,-1.537715,7.876915,5.161450,-6.270663,0.393642,-6.936225,-9.236300,-6.540611,-6.034401,-6.192612,-9.239016,-8.775452,3.957075,-8.904026,-9.873530,-2.807220,9.887517,8.397510,8.990827,-0.732410,0.065013,-8.505965,6.168232,7.973823,-4.201217,7.360083,-9.375639,-5.250128,-8.479767,-8.233937,-4.806575,0.772035,-3.948232,-0.285532,-7.963693,-3.330901,-0.979049,4.932486,6.426076,6.902166,0.870868,-7.267621,-7.826035,9.040296,-0.561088,8.722171,7.525646,-1.965781,8.222148,4.311603,-0.435642,4.528562,-0.919427,-2.230105,5.195268,-7.637489,-6.398862,-7.692713,7.495230,-2.593212,1.379820,-5.027514,-3.540063,-3.986668,-9.783647,-6.643240,6.224998,8.208459,-7.882941,-9.874137,0.414652,-3.092611,7.206664,-4.256071,9.055928,-8.296660,-9.806414,6.386173,-2.871339,-0.286297,2.064008,3.402865,-2.491708,6.191175,-3.567791,-5.099920,-6.839605,-1.852412,7.699165,-1.406281,2.562155,4.314230,3.335882,-6.842193,-9.292367,-4.027971,5.278555,-5.641940,-5.663781,3.370843,1.295070,-0.192573,-4.086459,-8.350416,1.175572,-8.563402,1.270827,-3.606880,-1.169660,-6.828188,9.354112,4.707014,-5.176911,-8.794021,2.248420,-7.359142,3.317452,-8.429963,0.062526,7.032729,9.314032,1.641293,1.041763,8.764924,-4.242987,-1.295617,4.630152,7.981205,-5.018772,-1.872464,7.543258,-3.048992,-8.712811,-2.634726,7.884352,-4.836711,-0.521694,-9.882536,-0.755409,7.534271,6.289097,-4.323266,9.397998,1.579714,-5.897094,8.818642,-6.691430,-0.703345,-8.501202,-7.711257,9.480580,-5.088954,-9.650232,1.956847,0.493951,0.835895,1.988832,9.017311,0.529209,-3.512759,-1.910427,6.758600,1.655345,6.474204,9.590628,-7.566554,5.769227,-7.310998,9.221073,-8.515635,-2.545521,0.812843,9.336907,5.549155,1.845253,-6.239199,4.167717,-7.236904,-0.131056,4.068328,7.484604,-5.120924,-1.638561,-3.857348,-7.069167,-3.477389,4.112901,-3.681643,-6.215566,8.361185,9.712940,-2.811806,-5.009961,-4.487406,-6.901108,-9.244553,3.484080,-8.066268,4.983899,9.126476,9.508299,-1.600982,1.160627,-1.113735,-4.640113,-8.548549,4.680895,9.595446,2.105945,-3.488360,4.688319,-3.917683,8.390371,-4.216891,8.885575,9.461896,-3.669837,6.550628,-6.532257,3.327878,-2.178292,7.275677,-0.311883,1.938341,-4.035855,-4.061367,-6.422744,-0.432283,0.739257,-3.377459,-2.076741,-3.252677,4.143798,-1.578882,1.598334,3.241952,8.450818,0.940501,1.880133,-4.703881,4.788219,1.902844,1.396560,9.685116,-7.678085,3.807917,8.309136,0.494580,-0.998156,1.306148,-5.258102,5.707099,8.071605,0.916415,7.201608,-9.306612,-1.883953,-7.173505,4.186898,9.065162,7.598504,-8.555834,-2.150855,4.728173,0.950036,-0.070742,6.101099,-9.583308,-7.243678,6.087632,7.642570,-4.254229,9.389839,5.038144,7.902644,2.847284,7.374723,4.129568,4.797573,-8.853748,7.205680,-9.380231,-4.494394,2.889374,8.605911,-1.102631,-9.894193,-8.722759,6.773261,-3.784538,-3.033363,7.234725,2.412357,4.308545,-5.643254,-0.680063,-6.069799,-0.614976,5.304181,-4.354817,1.952119,8.121674,3.677154,8.699421,5.037800,9.664375,8.875359,7.335755,-2.725721,-5.174147,1.319983,-5.271836,4.074620,-8.978546,7.474918,3.843617,-6.430979,-6.602428,9.244222,-7.395826,-5.079721,-4.932967,6.250496,-5.049523,4.138537,-1.424933,9.328676,-9.016216,6.020932,1.615815,1.127827,6.118183,2.365573,-4.154099,-1.350018,2.178893,-9.629374,-5.913499,-0.324277,6.658330,5.176887,-9.139318,7.090656,-6.804582,6.589303,7.018818,-5.767296,-7.203118,-5.678160,-8.347650,-1.132093,2.685912,-7.390399,-2.474005,7.146620,-6.096857,0.284536,3.744362,0.662340,3.680298,-0.998271,-0.693649,-9.022068,-4.101606,9.877331,4.338680,3.027189,-8.519099,-6.098016,-7.560281,6.046791,0.426509,6.918369,6.499079,-2.393079,9.007189,3.386948,9.803814,8.300919,-7.209541,7.750780,-5.659143,0.440052,-5.020708,6.041007,7.133861,5.416633,0.463875,8.966424,4.502423,3.983915,-0.915520,-0.987148,-9.693091,-8.056154,-0.408266,-0.994506,-6.381535,-5.964932,-3.644143,4.560294,-0.802678,-3.816477,4.931936,-2.456411,6.847719,6.484560,-5.551844,7.304353,5.522077,4.933374,6.045481,-6.950891,0.167877,-9.286977,-5.956385,9.618452,-0.719978,-9.441486,-7.349839,2.490581,6.760137,8.890465,-9.265239,-6.571302,-0.453967,-7.118607,-0.513357,1.504916,4.510164,5.729400,6.774989,-6.897866,-5.619053,8.964527,9.710911,-6.764733,-2.285890,-2.771764,-6.449343,-1.464985,-6.144572,8.853549,-6.583468,4.916022,-7.964539,9.852126,6.449985,-6.920620,4.954969,-7.946212,-2.720026,0.865862,4.652510,0.980431,-7.532612,-5.883790,-3.510138,3.681594,8.235312,-9.838176,2.822311,2.033421,6.699310,-7.321646,-1.270360,1.239988,3.403981,6.560785,-9.788363,9.229803,-0.405829,-3.121808,0.988221,9.643192,-9.759168,-4.789906,-9.339653,-8.524679,0.332060,-3.088260,-0.053336,-0.630274,-5.511553,-0.127073,9.581098,4.994937,7.843124,-7.545178,-2.448504,7.305451,-6.292892,-6.217550,-1.861992,-8.482642,-4.390840,2.857885,1.145444,-0.856436,4.759379,-5.130676,-0.551061,-1.417073,1.051632,-7.614077,3.431296,-9.395528,-9.539793,-9.488886,-2.696772,-9.457537,3.039451,6.745329,-9.078771,-7.828148,-1.503249,-8.428761,-0.326912,-6.360054,6.510551,6.813449,0.349462,-9.243250,8.189675,-9.079823,-6.432601,-9.330256,-8.604391,-4.505891,0.650346,-8.050012,5.992986,4.428833,3.620963,-0.030627,-5.880167,1.451437,9.320240,9.278571,-0.554278,-9.524130,9.719200,-4.067709,-1.112810,-4.532115,9.867803,5.643992,1.175323,5.462936,0.351707,8.353398,4.420523,9.903709,7.158208,0.574405,-2.856687,-5.127754,-1.817367,7.695718,2.922660,5.382310,-6.524988,3.492407,1.160094,-8.370313,-4.974972,-5.472316,5.438884,9.346738,5.433820,-3.785351,-4.250173,4.148369,-8.135251,-9.655654,-1.478828,-8.247570,-4.484025,-6.874950,-7.538615,-6.054897,-5.305872,8.935793,-7.074500,-5.421148,8.762694,7.969192,8.585329,0.261854,2.862020,8.540183,9.182938,-2.863169,-7.196302,4.279575,-2.078075,2.408904,-5.569069,-3.102817,2.603405,-5.115930,6.725951,0.149126,-2.638492,-5.323229,-7.011793,2.829587,-5.566503,2.055400,-6.085107,5.317177,7.542941,-3.014411,5.414779,-8.832549,4.904174,-4.351431,0.396669,-6.782690,-7.536211,7.890555,-9.549301,-1.074907,1.737327,0.474324,-6.080233,-9.204483,-2.938511,0.427358,5.641695,-2.673643,3.011424,6.443907,-7.926071,-4.220233,5.820880,9.155236,5.580998,-5.885174,-7.093879,-8.956446,-2.534732,-3.650917,4.604966,1.840917,6.462235,-1.081314,-0.664231,6.364682,2.122576,6.403940,-3.138532,-9.032435,-7.473946,-1.078068,8.376189,6.301203,1.514899,-4.173408,6.055444,7.451245,4.149424,6.327248,8.735976,6.661342,0.809219,5.555630,6.089592,6.433106,-1.177139,-7.649509,-3.850151,-9.615783,7.198807,1.417609,-1.719633,-0.293359,-7.573321,9.432250,-7.444386,-5.558647,8.407124,2.440272,5.454062,-9.932619,-3.308950,4.015453,-4.352375,-8.749365,-1.888675,-8.665701,-6.186005,9.517331,9.784760,6.227952,6.523933,1.290297,0.212988,6.005915,1.559683,7.008581,0.703425,-9.140604,-6.987435,5.500207,-3.171687,8.215651,-6.576610,9.014562,9.971551,-5.382269,-6.638887,5.748222,-0.219738,2.630231,-2.087589,-6.527995,3.345401,1.535701,8.424331,3.646779,-0.358088,3.452903,4.283461,-2.699328,7.652744,5.121809,-9.432297,9.997123,5.837663,-7.924018,4.319717,3.419705,-3.116554,-6.692802,-5.937939,5.137527,-4.390583,7.997424,-3.084893,-6.056085,-4.659315,1.160600,-1.906454,-5.676660,0.701034,9.476560,1.572827,-3.932606,6.319722,5.925383,-5.144930,8.004848,8.103065,-3.178925,-8.675862,8.422278,-2.223466,-6.806093,-5.871429,-6.729643,6.669169,-2.453704,2.917291,-1.660294,-9.197208,-0.547356,3.985713,0.601751,-4.278205,-7.575771,2.999297,-8.663061,-9.328324,-5.289060,2.006289,9.585788,6.624461,1.441433,-4.001898,5.014238,0.811720,3.677862,6.392498,-1.662125,-8.615891,6.316235,-7.875000,5.457321,-7.363327,2.679132,-5.992556,-7.195907,7.662481,-8.637547,-4.763092,-1.766265,0.905945,-0.709110,-3.661395,4.088262,8.930424,-6.797733,-4.361895,-8.512845,-4.854584,-0.609113,-3.009536,-0.444112,-5.116149,6.326857,-9.693941,-4.596717,4.470016,0.573217,4.032295,-1.912474,6.178242,3.444279,-7.955238,-3.425218,6.816019,-6.203477,9.505084,3.371329,9.274535,-1.918114,-6.685327,-1.637048,3.898095,-2.389630,-3.245559,1.932809,0.410567,8.456810,8.947137,-7.227666,-6.374420,-4.054011,6.284349,2.738523,8.369169,2.640395,-5.999390,5.000450,2.501352,9.322819,4.757706,2.490238,2.998191,-7.280165,-6.616911,2.024641,3.111614,-4.896511,-2.104333,-4.498039,-6.050826,2.951314,3.995675,-7.724692,-7.042104,-3.597669,3.402708,4.015944,-3.939324,4.836972,-9.561965,0.863848,-8.091752,3.722806,6.973018,-4.729588,8.877236,-8.604732,9.363600,6.640093,-2.092819,6.749128,2.236741,-2.270245,-4.890677,-6.190591,8.314354,7.366146,0.439637,-9.016684,-7.184916,-2.485091,-8.647538,-1.600957,-1.993823,-5.067905,4.701413,-8.535295,-5.892398,-6.653783,-2.481423,2.965335,-9.523886,0.588688,3.253812,-2.424306,6.077055,5.664432,2.623312,1.901135,2.009408,6.401739,2.523385,0.755249,-8.126458,-3.078081,-7.774645,-4.272305,-7.520869,1.243576,3.487016,4.174230,-4.739503,3.067767,-2.788278,9.525828,-2.780316,-2.502657,-9.130319,0.745061,7.457403,3.158554,6.632620,-7.820654,-2.708519,-6.128033,0.627245,-2.320452,-0.689963,-3.993118,-0.083049,0.136895,-1.723687,-8.099625,2.496095,9.252261,6.788235,6.078745,2.069034,8.812772,6.860374,0.651043,7.989279,-9.756496,4.387954,1.745526,0.525570,-3.254089,-9.747830,-1.702303,-6.206015,7.026036,2.386487,0.468736,-6.639355,-8.864489,-8.125119,8.924689,8.474609,8.054055,-6.507114,-3.316338,2.488155,0.878625,7.572195,-8.829452,9.329893,9.169145,-6.969670,0.850178,0.556329,-9.763887,-0.254530,-5.521607,0.833533,-5.524922,-6.776966,7.758934,-0.730395,5.947320,9.151660,1.157220,3.113827,7.425161,1.190758,0.717505,-2.591804,-2.810559,1.755726,-2.107689,4.226382], dtype = "float64")#candidate|7288|(2160,)|const|float64
call_7287 = relay.TupleGetItem(func_1330_call(relay.reshape(const_7288.astype('float64'), [9, 16, 15])), 0)
call_7289 = relay.TupleGetItem(func_1332_call(relay.reshape(const_7288.astype('float64'), [9, 16, 15])), 0)
bop_7293 = relay.divide(call_7278.astype('float64'), relay.reshape(const_7279.astype('float64'), relay.shape_of(call_7278))) # shape=(3, 2, 2)
bop_7296 = relay.divide(call_7280.astype('float64'), relay.reshape(const_7279.astype('float64'), relay.shape_of(call_7280))) # shape=(3, 2, 2)
uop_7299 = relay.atan(call_7287.astype('float32')) # shape=(9, 16, 15)
uop_7301 = relay.atan(call_7289.astype('float32')) # shape=(9, 16, 15)
var_7302 = relay.var("var_7302", dtype = "int64", shape = (8, 4, 3))#candidate|7302|(8, 4, 3)|var|int64
bop_7303 = relay.power(call_7273.astype('float64'), relay.reshape(var_7302.astype('float64'), relay.shape_of(call_7273))) # shape=(8, 4, 3)
bop_7306 = relay.power(call_7274.astype('float64'), relay.reshape(var_7302.astype('float64'), relay.shape_of(call_7274))) # shape=(8, 4, 3)
func_6115_call = mod.get_global_var('func_6115')
func_6119_call = mutated_mod.get_global_var('func_6119')
const_7308 = relay.const(-5, dtype = "uint32")#candidate|7308|()|const|uint32
var_7309 = relay.var("var_7309", dtype = "float64", shape = (432,))#candidate|7309|(432,)|var|float64
call_7307 = relay.TupleGetItem(func_6115_call(relay.reshape(const_7308.astype('uint32'), []), relay.reshape(var_7309.astype('float64'), [216, 2]), ), 2)
call_7310 = relay.TupleGetItem(func_6119_call(relay.reshape(const_7308.astype('uint32'), []), relay.reshape(var_7309.astype('float64'), [216, 2]), ), 2)
output = relay.Tuple([const_7288,bop_7293,uop_7299,bop_7303,call_7307,const_7308,var_7309,])
output2 = relay.Tuple([const_7288,bop_7296,uop_7301,bop_7306,call_7310,const_7308,var_7309,])
func_7318 = relay.Function([var_7302,var_7309,], output)
mod['func_7318'] = func_7318
mod = relay.transform.InferType()(mod)
var_7319 = relay.var("var_7319", dtype = "int64", shape = (8, 4, 3))#candidate|7319|(8, 4, 3)|var|int64
var_7320 = relay.var("var_7320", dtype = "float64", shape = (432,))#candidate|7320|(432,)|var|float64
output = func_7318(var_7319,var_7320,)
func_7321 = relay.Function([var_7319,var_7320,], output)
mutated_mod['func_7321'] = func_7321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7329 = relay.var("var_7329", dtype = "float64", shape = (8, 6, 1))#candidate|7329|(8, 6, 1)|var|float64
var_7330 = relay.var("var_7330", dtype = "float64", shape = (8, 6, 13))#candidate|7330|(8, 6, 13)|var|float64
bop_7331 = relay.not_equal(var_7329.astype('bool'), var_7330.astype('bool')) # shape=(8, 6, 13)
output = relay.Tuple([bop_7331,])
output2 = relay.Tuple([bop_7331,])
func_7341 = relay.Function([var_7329,var_7330,], output)
mod['func_7341'] = func_7341
mod = relay.transform.InferType()(mod)
mutated_mod['func_7341'] = func_7341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7341_call = mutated_mod.get_global_var('func_7341')
var_7343 = relay.var("var_7343", dtype = "float64", shape = (8, 6, 1))#candidate|7343|(8, 6, 1)|var|float64
var_7344 = relay.var("var_7344", dtype = "float64", shape = (8, 6, 13))#candidate|7344|(8, 6, 13)|var|float64
call_7342 = func_7341_call(var_7343,var_7344,)
output = call_7342
func_7345 = relay.Function([var_7343,var_7344,], output)
mutated_mod['func_7345'] = func_7345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_7383 = relay.TupleGetItem(func_7211_call(), 0)
call_7384 = relay.TupleGetItem(func_7213_call(), 0)
output = call_7383
output2 = call_7384
func_7399 = relay.Function([], output)
mod['func_7399'] = func_7399
mod = relay.transform.InferType()(mod)
output = func_7399()
func_7400 = relay.Function([], output)
mutated_mod['func_7400'] = func_7400
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7439 = relay.var("var_7439", dtype = "float64", shape = (9, 3, 13))#candidate|7439|(9, 3, 13)|var|float64
var_7440 = relay.var("var_7440", dtype = "float64", shape = (9, 3, 13))#candidate|7440|(9, 3, 13)|var|float64
bop_7441 = relay.multiply(var_7439.astype('float64'), relay.reshape(var_7440.astype('float64'), relay.shape_of(var_7439))) # shape=(9, 3, 13)
func_5931_call = mod.get_global_var('func_5931')
func_5934_call = mutated_mod.get_global_var('func_5934')
const_7446 = relay.const([5.371693,-2.136552,5.308015,0.097158,0.531916,7.448854,2.237745,7.495095,-6.764827,1.436904,8.654310,-5.156023,6.151915,4.789648,4.104213,0.151160,-4.159332,1.261290,9.053261,3.477320,-0.575952,-8.394466,2.026498,1.597681,0.036851,-0.021743,-1.377467,-4.862734,-5.604316,-1.965924,3.094951,-3.078964,5.216473,4.883929,8.758869,2.084467,8.031991,0.074970,5.505186,8.768704,1.063043,-8.299647,-1.748735,1.701330,-7.727977,-8.912880,-2.491323,2.403674,-0.348800,-7.991416,-5.491929,8.100750,1.685460,-8.311239,-1.435593,-6.693113,0.976678,4.499486,7.017465,2.055785,-6.593477,8.834808,-7.374394,-5.511487,2.902477,-5.298663,2.255214,-7.725905,-0.146557,0.805421,-6.806007,4.321184,-4.583761,2.910503,6.441475,-3.901072,-5.444094,-0.636650,-5.814551,2.298485,2.233064,4.327542,6.416097,-3.383335,-0.387674,-4.188200,0.850481,9.088661,-2.530030,2.040200,1.921652,0.727978,-8.634228,-1.929510,4.655437,-2.624011,-2.414369,2.547601,5.470412,6.890005,6.727846,-7.701110,7.249865,8.021617,-6.988493,-8.309013,-8.544509,6.460406,8.090192,1.823439,7.413408,-7.333807,-6.210040,-8.722559,0.958908,2.117023,5.508213,2.669374,6.225935,3.349245,1.390857,8.020071,0.580173,-7.341204,4.216392,6.870266,-5.601212,-9.280709,6.965435,-1.964159,-0.940226,-2.892373,-1.116657,5.848580,-5.666784,4.363417,-4.467220,6.525495,-5.852535,-4.207589,8.487036,-2.093057,9.546227,-8.739833,3.987258,4.814596,8.694950,-7.330167,6.879561,8.141069,-2.590227,-0.688538,-9.503082,-6.509759,0.260203,-9.452284,4.407435,-8.039250,9.420508,1.418497], dtype = "float32")#candidate|7446|(160,)|const|float32
var_7447 = relay.var("var_7447", dtype = "float64", shape = (240, 1))#candidate|7447|(240, 1)|var|float64
call_7445 = relay.TupleGetItem(func_5931_call(relay.reshape(const_7446.astype('float32'), [16, 5, 2]), relay.reshape(var_7447.astype('float64'), [240,]), ), 4)
call_7448 = relay.TupleGetItem(func_5934_call(relay.reshape(const_7446.astype('float32'), [16, 5, 2]), relay.reshape(var_7447.astype('float64'), [240,]), ), 4)
output = relay.Tuple([bop_7441,call_7445,const_7446,var_7447,])
output2 = relay.Tuple([bop_7441,call_7448,const_7446,var_7447,])
func_7453 = relay.Function([var_7439,var_7440,var_7447,], output)
mod['func_7453'] = func_7453
mod = relay.transform.InferType()(mod)
var_7454 = relay.var("var_7454", dtype = "float64", shape = (9, 3, 13))#candidate|7454|(9, 3, 13)|var|float64
var_7455 = relay.var("var_7455", dtype = "float64", shape = (9, 3, 13))#candidate|7455|(9, 3, 13)|var|float64
var_7456 = relay.var("var_7456", dtype = "float64", shape = (240, 1))#candidate|7456|(240, 1)|var|float64
output = func_7453(var_7454,var_7455,var_7456,)
func_7457 = relay.Function([var_7454,var_7455,var_7456,], output)
mutated_mod['func_7457'] = func_7457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_7482 = relay.TupleGetItem(func_7211_call(), 0)
call_7483 = relay.TupleGetItem(func_7213_call(), 0)
output = call_7482
output2 = call_7483
func_7484 = relay.Function([], output)
mod['func_7484'] = func_7484
mod = relay.transform.InferType()(mod)
mutated_mod['func_7484'] = func_7484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7484_call = mutated_mod.get_global_var('func_7484')
call_7485 = func_7484_call()
output = call_7485
func_7486 = relay.Function([], output)
mutated_mod['func_7486'] = func_7486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7399_call = mod.get_global_var('func_7399')
func_7400_call = mutated_mod.get_global_var('func_7400')
call_7492 = func_7399_call()
call_7493 = func_7399_call()
func_7484_call = mod.get_global_var('func_7484')
func_7486_call = mutated_mod.get_global_var('func_7486')
call_7550 = func_7484_call()
call_7551 = func_7484_call()
func_1330_call = mod.get_global_var('func_1330')
func_1332_call = mutated_mod.get_global_var('func_1332')
const_7553 = relay.const([[-4.883448,1.962501,8.981313,-1.765843,-9.690555,6.960091,9.521463,-2.844802,4.548226,3.654103,1.589329,3.627741,-3.534782,8.146572,-1.006985,-6.027754,-6.421109,2.527902,-7.899366,0.363732,-8.253136,-9.881877,9.167224,3.907481,-1.049320,4.133717,3.763898,3.537072,-9.503728,1.337106,-3.373784,5.655170,6.854031,-0.218746,-4.206414,-0.001837,-2.227787,-8.318995,-6.241276,-6.760191,-0.587447,-7.208590,-7.701386,9.937164,-1.946887,-3.202108,6.421953,-9.773270,-0.344586,-6.877788,-8.491436,-6.645411,1.495269,-5.466354,-1.853222,-0.976001,0.878970,3.632148,6.808019,-2.243769,5.102509,-7.928922,-3.506913,0.999069,0.284721,9.125062,4.758082,-9.175359,-5.220719,-7.889799,8.945697,1.962113,2.288199,-9.390110,-3.896918,-4.571964,4.381482,-9.897803,3.055076,1.060820,4.967704,5.622929,-9.720119,1.026577,-1.167382,0.671211,-0.924431,-6.892016,3.598626,-8.662041,2.005143,5.971325,3.400391,-7.280582,-1.623008,1.586106,-5.495361,-3.237737,-1.093835,3.151775,0.574677,-7.076127,-0.226946,1.792086,-3.178601,0.308878,-0.797698,-2.664705,-8.410846,3.420610,-1.787848,-2.216925,4.259157,8.600525,-0.809587,-2.649794,-1.069996,7.085545,-0.171947,-9.200881,0.436847,-3.187152,2.899835,5.614782,-9.086381,-3.419769,-6.598377,6.337768,8.390950,8.699909,-1.588726,2.428001,7.426781,5.930305,8.872563,-9.048320,0.809983,-9.102025,4.107068,-7.089094,-9.189092,7.928448,3.665162,-8.705778,8.112649,-0.937435,-4.514148,-0.105409,-2.191628,0.354824,-5.405950,-2.417547,-6.432142,-6.972079,3.227365,4.316257,8.993735,-9.979737,-5.313767,9.201572,-4.037517,5.525766,5.460806,-3.840162,7.383921,3.150177,1.675922,7.449151,-0.842781,-2.460162,-7.550537,-0.031219,-2.444111,-9.750629,2.965227,-4.292505,0.511622,-2.998337,-9.055146,-3.541368,-9.673826,3.819596,-7.265590,-5.096185,-7.979165,-7.840964,-1.297519,-0.185915,7.166354,1.953327,-0.948819,-1.603005,3.124879,-3.957520,-2.625004,4.497516,-0.189871,-9.799096,4.017932,3.129802,0.601059,-6.566521,-2.892142,-2.125814,7.989041,1.007119,-1.529588,6.279442,-4.697585,9.826321,1.084252,-7.283714,7.796003,-4.027226,2.946525,-4.446324,4.099319,-2.011880,7.811113,4.411811,7.458584,-2.263838,-2.544106,7.882382,2.914545,5.128991,-8.645117,-4.776134,0.433258,-0.368046,-0.831808,2.036954,-6.349779,-6.842958,7.048778,-5.974085,-1.033035,-6.090899,4.220240,8.497207,-8.686219,5.257185,-7.020591,-8.295593,-8.887538,-0.917464,4.462454,-8.082783,-9.640326,0.236358,-7.425340,-1.755265,-0.619898,1.998919,-8.677017,-0.796537,-9.825883,7.324639,2.191052,-8.333179,7.085872,-3.830939,-4.260645,-0.057173,8.890566,-5.369566,3.415091,-3.804651,4.597088,7.424137,1.471382,-9.277560,4.209083,-5.562763,4.739871,-0.279013,-3.070416,8.616840,3.365154,4.414674,7.702591,-9.568948,-2.326150,-3.505167,5.790456,9.512510,1.730282,-1.535796,-9.812678,8.239979,8.909402,-8.329594,0.994277,-9.779307,5.605257,5.257852,-9.481100,6.424274,3.488960,-0.505966,-4.284687,6.130487,-2.356391,-7.456132,-8.414346,-6.785442,-1.701118,8.853134,9.457528,-2.889793,9.929089,2.392548,-4.744053,-4.074618,5.514013,-9.431474,6.746416,0.362467,0.238239,-6.899733,-9.614355,5.064527,4.262600,-1.455640,-8.946768,5.167297,-7.458131,5.633284,7.463643,-7.610831,0.220814,-2.703189,-8.049510,-6.403943,-7.930261,-8.296181,0.589391,3.236703,-1.873526,2.160999,-4.688098,4.525841,-9.200759,5.608582,-9.415048,-7.839264,-2.062433,-9.334547,-1.550076,-4.325975,9.450372,9.635186,-8.034232,0.815086,-3.646486,-6.100301,1.181037,-6.838774,-6.606377,-8.413590,5.158506,-4.323435,7.932138,5.989571,5.246496,-6.181428,-0.614685,-3.912749,-9.994488,6.993472,-8.440301,-7.011398,9.464728,7.541885,-3.641810,0.678669,-1.721535,-5.458308,-0.995252,-3.558844,1.480963,4.619551,-7.960537,6.374563,6.486099,-4.892827,-5.680128,-2.384742,3.374848,7.467267,6.412425,6.449451,4.839272,9.357662,6.343044,1.599922,7.261447,-5.545232,-3.132934,-1.441736,8.343679,-0.538932,8.697886,5.843570,-8.173720,5.525189,5.088924,-1.358960,-1.065083,5.835422,8.968435,-0.566773,9.886691,-4.252168,-4.265596,7.838063,5.776449,0.231966,-7.660843,8.758873,-6.225323,-6.066316,-8.075295,-6.851724,0.136830,-0.748547,-6.692190,2.640811,-2.403453,-2.843597,-5.410548,-7.361045,7.450597,7.907524,-7.801064,-3.855871,3.627865,9.905591,9.548182,-8.812819,9.555540,3.352804,6.910644,5.168435,9.665271,8.389131,5.592514,2.944506,1.167137,7.710301,-2.720221,-7.130246,-9.114927,9.521511,3.346309,-7.152361,-6.545699,5.605821,-0.616427,7.890000,-2.842910,-7.326393,-3.019026,-9.356593,-1.766520,-4.181825,1.957700,-5.346478,-4.335096,-9.258402,8.389210,-6.384704,-5.870735,0.268586,-5.754178,-6.183169,7.095261,-4.618301,8.252286,-5.104051,-7.582971,-9.786208,5.290183,-3.799175,-8.451263,-8.059831,4.264199,7.607127,-2.529148,6.008072,-4.740472,2.066202,-1.757355,5.259681,-6.776792,2.035952,-5.793681,-8.921757,-0.157215,2.743341,0.204044,-6.524662,-0.273364,4.526164,-3.848561,5.263802,-7.863586,6.555925,8.479926,-2.693866,-1.540785,-8.417483,7.736618,-6.325240,0.924244,-4.519965,5.818059,-1.691274,5.298959,-4.245453,-6.598873,-8.100353,-0.056209,1.565924,-2.134634,8.415188,7.996631,-7.462972,7.352373,-5.559980,-6.159218,9.756041,3.104746,-5.924795,3.365582,-9.910980,-8.472068,0.919544,-2.417345,-2.600698,-2.193793,6.403058,-7.659053,1.157157,9.016794,-3.755581,-9.931832,7.217293,5.835919,-4.314430,2.109032,-4.996313,2.635169,-3.788392,-2.035547,1.075460,9.033159,-4.348209,-2.179690,8.594912,5.933081,0.698721,8.048246,4.486321,-0.454828,-7.217625,9.524673,-1.406844,-0.214218,-6.431964,2.017832,3.680486,7.146837,-6.213519,2.211041,7.537555,-1.332328,1.964920,1.509259,-4.622673,-9.122774,0.598813,-5.324385,0.315729,4.140105,1.919783,7.934630,0.023295,1.062153,-3.999930,5.004577,0.391587,-9.417041,4.013013,-7.135875,-7.964901,-2.097119,-6.814222,0.794185,6.226034,2.304647,0.129043,-9.458369,8.982756,5.170810,-6.220502,9.543810,-3.396218,-0.667774,-1.757043,0.442628,-1.199937,-8.266810,-6.553087,-3.144363,-7.891331,9.847590,-4.854418,-5.252394,6.105688,2.194499,-6.911541,1.655879,-7.946067,4.828451,-3.188537,3.191986,-4.300004,3.362161,8.522132,4.873511,-2.769971,-7.984139,-3.516695,-5.365194,-5.929989,7.650023,5.552188,3.132709,5.417616,-3.634549,3.389838,-2.793640,8.236442,3.358697,1.536268,3.574126,6.931883,-3.467490,-8.635549,1.548392,-9.681395,-7.243151,2.947857,1.588228,-3.816768,0.054991,-9.937292,5.388284,5.528670,-1.787234,0.110619,-6.450655,5.298037,-4.612259,-8.918054,-8.502288,3.310529,-9.800315,-9.408569,0.229137,7.228250,5.420763,-9.853255,3.275838,5.617019,-4.202567,8.735139,6.464577,7.201660,5.060571,6.869710,-4.336662,-5.685202,0.567664,-8.835639,0.524468,9.671193,5.721067,4.026288,-5.562554,6.067341,-4.073912,7.044115,1.696383,0.252108,-3.458904,7.452183,8.684387,0.749714,-7.505960,0.273342,8.879192,-7.410176,-1.621282,-2.073382,-1.092380,0.249521,-0.382573,-3.031136,9.005825,-5.915449,-3.105157,-3.562914,1.325170,2.450079,-7.711926,5.591693,0.426304,-1.807556,-2.338011,-9.033375,-1.287891,3.553047,3.196052,6.883954,1.686670,-6.570886,7.666849,-6.417320,5.639563,-0.163201,-5.704079,3.714377,-2.207796,-1.870803,-4.271469,9.221885,-6.789052,-9.576912,9.680309,3.803906,4.220002,-4.168266,-8.846852,-9.451493,-1.258382,3.542905,-8.802700,4.740759,2.593024,0.107550,-3.561337,-2.829929,4.934414,-1.326719,-3.164848,-7.270314,-6.556748,-3.512651,1.454644,-7.823476,-7.437761,-2.362323,-4.103765,6.826785,5.537666,-2.747001,2.032223,2.589914,2.175567,8.170307,5.117163,2.276899,0.986295,-9.222051,-9.483423,-0.251276,3.056295,-7.931895,-6.746332,0.686659,-0.831120,-3.492383,-7.145861,8.088336,9.826640,-7.335692,-8.304534,-4.005879,4.851831,-7.935618,8.120342,-8.286614,1.675089,8.793697,-4.583677,-6.462005,-0.023425,2.685922,-6.748057,-1.961372,9.947153,-7.512099,-5.898484,7.955932,4.970515,-8.879219,5.396888,6.184423,0.232949,-3.183257,8.528247,-9.815422,3.975615,3.888564,-5.652484,-4.192799,-5.158096,4.551927,6.721164,-4.658070,-5.193943,-5.918161,-8.126223,1.428103,-8.441173,8.542304,-4.888366,5.664403,5.824702,0.301810,-3.708080,-4.054958,-0.462763,4.944596,-2.064862,-8.452755,-3.114774,-5.554162,3.874058,-7.235511,-4.069137,1.307515,-9.433955,-2.553467,1.586762,2.142408,2.413851,-8.062802,-6.309256,-1.370820,-7.105739,3.237517,1.523531,2.626216,7.788234,-5.764002,3.946753,-1.565457,-4.286981,-0.142742,-7.624653,0.272290,8.963045,5.453355,3.588028,-8.410209,1.920751,4.610935,-4.962301,7.028617,-5.812047,3.154761,9.185920,4.178344,-0.178741,-5.203288,-4.454080,8.831498,3.909468,6.822813,-1.627786,-5.606018,8.423560,-0.244168,-0.264253,-3.446632,7.356465,3.683008,6.455949,-7.371111,-2.574564,8.133715,-5.810068,-8.821834,2.910155,-1.289233,4.127759,1.816245,-7.272597,-1.017118,9.021925,-7.400169,-1.152002,-7.195982,-6.842708,-7.608232,9.729809,0.537105,-6.416456,5.467657,4.203670,1.512301,5.753173,-8.607917,-7.445866,-3.292243,1.067692,-6.723319,-1.069844,7.085829,7.553977,1.753215,4.420666,-4.125105,-2.172569,-7.711583,7.809336,0.002195,-4.770264,4.908332,-5.591630,6.461892,-2.454632,-4.797698,-5.572842,0.181915,2.677956,-2.439102,-8.114117,-7.297666,-5.522174,-8.866120,-5.229944,-9.412610,4.545803,8.314313,-6.529264,8.332343,-5.560887,4.058969,-5.398260,-7.310470,-0.803116,-0.847725,6.432390,9.335943,0.722943,3.215491,0.890155,8.474708,6.683500,6.604828,2.162963,-3.882803,-7.386863,-6.511996,3.822005,-1.455956,2.583998,-7.828857,1.757601,-5.929515,1.308761,-6.752180,-2.560271,-8.439077,-6.603113,5.736587,-0.841222,4.563487,8.226119,8.404074,-9.859369,-5.930024,7.381829,-6.046558,2.095682,4.296367,-1.671354,0.003444,3.032344,1.106903,4.353463,9.695568,-0.499541,-5.220629,-5.684940,-1.919436,2.012968,-3.497411,0.781377,7.287640,-4.687869,-5.190967,-9.285467,6.517712,6.628967,3.847763,0.021662,-1.933643,1.595205,3.750078,7.879381,-8.234780,6.567298,4.570939,7.193561,3.794074,9.506985,4.950376,3.704371,-7.538857,2.127734,-2.812747,-4.754973,-4.877925,3.977107,-5.803005,-4.595073,-6.065291,3.894671,-7.699113,-3.530431,-2.179081,0.943161,-8.980787,-8.545912,2.054708,-0.977625,-2.470093,0.779493,6.340513,0.453708,1.978171,-7.592261,4.324680,1.661492,0.219429,8.091519,3.293485,3.440032,9.657383,-7.585900,0.596178,-5.151385,-3.159209,-0.749705,7.507962,6.065510,8.147105,-2.581153,6.435288,7.322499,0.631337,7.422785,7.656077,-3.809845,-0.187786,-8.777565,-8.497460,-2.391319,-7.633701,-3.197517,-0.635187,-0.043260,0.744348,-6.649670,-2.734953],[0.042054,-8.411835,-1.017014,4.177753,-8.684234,-9.705558,4.334059,-6.831556,5.930687,3.298440,-5.248451,1.480995,6.126216,6.330436,3.593554,5.455267,5.679883,1.387046,-0.119280,8.696389,7.399414,0.330484,-6.526875,-9.679447,-5.223185,2.379475,1.255504,5.993473,6.810674,-0.725252,-9.071472,-9.839184,4.302724,0.077083,-6.477062,-6.894582,-3.035112,7.440436,7.478865,-9.841464,6.180768,-0.368752,-4.610060,6.459911,-7.031336,8.884160,-3.626548,2.832393,1.933934,2.287012,9.543317,7.691010,0.017005,-9.700521,-0.680626,-7.527061,-3.664201,-3.446752,-3.082569,-3.228451,0.444615,5.354109,0.581752,7.001259,7.227250,4.940168,0.239024,9.580639,0.456197,8.597570,-5.755664,3.177599,9.048211,-5.899744,4.096576,-6.496252,-1.580714,-6.017349,-8.332127,-1.334560,-4.915583,-6.868493,1.666508,-2.378966,9.793814,-9.584154,1.235497,-7.054152,-2.488757,-4.098485,-5.999121,-1.753922,-9.706612,-3.602810,6.559448,4.396560,-4.064185,3.744748,2.529372,-6.633164,0.140629,-3.910735,-7.407424,0.535554,1.425127,9.172209,2.458159,-1.870419,-6.716136,-8.541113,-6.008353,-4.250548,-8.961035,-4.051360,8.769683,-4.391819,7.267279,-0.008319,-8.592863,-5.002253,7.141026,4.614098,-6.398302,4.760781,-9.742452,-0.537319,4.304073,-3.612025,-7.854228,4.423105,2.676684,-9.232635,-5.516858,0.833346,8.037472,0.579069,2.081737,2.515891,-8.436454,-2.190200,-3.731770,0.151349,4.673394,1.139114,-8.802031,-5.376808,3.123632,7.021232,4.192004,-6.125629,-0.956445,2.278722,-2.716089,5.212914,4.577223,4.249441,-0.699803,0.710701,-0.384129,4.761281,0.250147,7.472548,2.723975,5.368197,3.254412,4.942239,2.688634,6.653616,8.230793,-7.254317,-2.417416,-1.972022,2.907480,9.841143,2.974746,-8.278962,-6.637428,5.742016,-0.930149,-2.441621,-4.222501,-2.550604,-6.505248,2.311834,-2.840030,2.581562,5.600817,-7.687133,0.001305,9.130976,-9.903931,-2.847910,5.034081,-3.303787,-1.341743,7.683099,-0.977264,-4.149296,9.892778,-2.228813,2.663468,-3.124851,-3.198543,8.827090,-3.097058,-9.075330,3.697558,9.769947,-1.872442,-3.630322,-8.056731,8.026953,4.798866,-3.499982,5.301588,6.788506,-1.294977,3.006496,-7.379149,-6.291106,2.332098,1.414234,8.220299,9.634245,7.362340,-6.138442,6.794422,-5.299774,1.925288,1.578336,-1.947301,-7.626011,6.842333,9.627436,-6.663238,-9.617793,-5.735951,-6.208695,2.545470,4.404713,-0.337333,-8.650977,3.387982,-4.018221,5.010409,4.431085,-9.608738,-2.429300,4.155329,5.590323,-9.552021,-0.949038,-6.972258,-5.063583,-4.288986,-6.387873,-3.705862,6.080541,3.479430,-2.007542,5.361722,-1.668685,2.268349,4.175797,-9.447121,2.655448,6.706118,8.724187,-6.375206,3.913299,6.598287,8.945682,-9.327171,5.446627,6.027490,3.000712,9.326789,-6.122954,-1.213661,-3.282233,1.328272,9.180984,0.202771,-3.885843,4.301713,-8.058805,5.212826,-3.819126,-9.365189,5.381804,6.536848,9.164934,2.829753,-1.384332,2.926496,-3.328555,-2.691753,7.557758,6.891929,3.760385,3.738755,2.226662,-3.970040,3.241534,-3.375801,-8.287239,1.118287,-2.744125,4.334702,-5.971665,0.944586,3.794509,0.197932,0.925840,-8.245463,9.652554,5.686364,-3.158459,-8.692316,-9.380266,8.778995,-9.069997,-3.729813,4.466823,7.259794,6.505181,-4.199729,-3.649133,3.579480,-7.582643,0.008867,-6.437094,6.721745,-9.129619,-2.687985,-3.378688,9.932350,-6.616326,7.618505,8.457141,1.754615,-8.487896,-9.455010,7.734446,-8.941185,7.720065,0.108259,-0.647067,0.421921,-8.353309,-2.545261,0.822980,-3.144983,9.999624,4.167137,-3.267870,1.756273,-2.658677,-4.916695,-8.242068,-9.699062,-8.561297,6.419211,-8.739278,4.156414,-1.946722,7.259162,0.363823,0.378568,9.422555,1.114513,4.417388,-6.643038,-4.541246,-4.038202,-0.941514,0.774892,-6.322344,9.819610,1.064089,-0.179660,-0.528409,9.890359,4.139844,8.362985,3.117429,-2.673796,0.290245,-4.000420,5.176187,-1.726862,5.792032,-9.808777,-2.003579,-1.525103,-0.995540,7.233684,-0.329202,-3.534356,7.141649,5.089483,8.652607,-5.463449,-0.042867,-5.301306,8.358906,9.818006,-9.203163,-7.191258,-2.712566,-0.655920,3.705207,1.660937,-0.718405,8.511021,1.282051,-9.845533,3.954118,-3.676635,-1.913944,2.299781,1.094718,-9.632643,2.923521,9.849804,-1.911806,-8.666620,0.974410,3.297701,-3.229396,-8.971594,8.445261,-2.936638,6.223222,7.481541,8.856731,7.623056,6.867818,1.342289,-0.526672,-8.011113,-4.332824,0.444877,6.040485,-2.871821,4.785933,9.864876,1.517517,1.190397,-8.734246,-4.224579,-3.573253,5.954471,-3.789733,-5.097892,8.982809,1.810228,7.548811,0.116093,2.689507,-8.267101,-5.492674,-3.532358,0.276860,-1.377148,-2.616347,-8.236339,-6.384300,-5.101901,-3.637198,-5.120605,-7.948567,9.712073,-2.800472,-3.067287,-1.595989,-2.565934,-5.502859,4.129341,1.212573,-4.483703,-6.691545,-7.059204,-1.133859,8.222375,2.590594,-0.599551,9.939966,8.347631,-7.400253,-8.225953,3.015075,-6.855769,5.692864,0.891897,7.697721,-5.237862,-6.613230,0.002141,5.005496,8.695191,-6.191839,-0.259608,-2.562914,7.965443,0.848766,2.093455,-0.025298,0.487556,0.447776,-2.588977,-9.479901,6.588730,0.570014,4.602284,5.560543,5.758635,-1.525706,-4.136205,-6.988710,7.481452,3.372505,-8.243931,-1.410373,6.003558,-9.218088,9.793044,-0.338370,-3.692321,1.808099,-2.480498,-4.167729,-8.348709,-7.955798,2.735599,-1.752924,-7.029792,-8.552339,2.131596,-5.684020,-5.419656,0.645721,1.843514,-9.094021,5.030426,1.329577,4.181286,-9.040517,-1.551182,-7.261740,0.329237,5.103493,-9.002529,-3.843258,-9.363209,-3.560896,1.715284,-3.349728,8.831481,-3.443766,-3.955290,-7.572028,-6.179410,9.719686,4.273306,-3.549080,-2.135233,7.404621,9.139871,2.491448,-4.552620,9.500297,1.870695,3.616589,-7.929898,3.212511,2.721230,-1.804669,-4.504430,6.911775,1.609519,-8.282785,7.868098,-6.485030,6.509927,-4.648057,8.642433,-6.760079,-7.846846,0.816076,2.447476,8.125938,4.646388,-5.155158,-6.091212,9.111549,-6.397096,4.987555,2.334222,-7.879321,1.713287,4.689048,-5.358560,5.451781,4.291342,-9.627489,-9.142567,5.063475,9.253519,0.931463,7.710115,-9.571226,9.172831,5.070129,9.965739,8.470142,7.967143,-8.944474,-1.096155,-5.371880,-8.473034,4.495501,-1.044356,-4.834686,-4.237609,3.818871,5.916044,4.374886,-0.667122,9.610561,5.161319,-2.654921,1.649346,-7.887595,9.707530,6.098485,7.342235,-2.779590,-6.915184,-8.576918,-0.282786,-4.914760,1.753122,-6.628988,7.710826,1.200344,1.649101,8.850805,-5.092620,-8.341590,-0.613797,-4.099813,-0.372460,7.351443,7.634541,-6.994542,-9.579044,5.830102,-1.262899,1.827024,-4.438869,-8.614428,-9.300586,-1.666213,-0.709920,-2.767889,0.573128,-8.612965,5.420509,-2.327733,7.146880,7.508641,9.789848,8.875826,-4.256826,4.976741,-1.667530,-7.573152,8.605159,3.284648,-1.898803,-3.607099,-4.053107,8.064061,0.575917,8.961688,-1.717913,-3.817936,7.542006,-6.668565,-8.775846,-3.314817,2.592246,9.559442,-6.848610,-2.335788,1.484105,-0.855846,-0.294862,7.986630,6.666309,-7.164094,9.377640,5.151182,6.681083,1.514338,-3.521033,-9.467876,-9.346903,-0.556789,-0.428856,9.346014,-6.869326,-1.836232,-3.604379,-1.227937,-0.850502,0.336912,7.892321,-7.944479,-6.374983,-0.365428,-2.646543,1.699241,-8.025551,8.377491,-8.490999,-2.948779,-4.547169,1.231359,8.755218,-8.459179,9.537462,5.969262,-5.309490,8.924068,6.968454,1.637970,-3.333889,5.648468,7.128038,9.185089,5.243199,-6.069350,-9.554571,-9.639902,5.141725,4.461547,4.097232,6.710396,0.170194,-1.064661,-7.998308,-8.527122,-1.169915,7.492242,-7.491791,-1.247585,3.926711,8.708566,-3.254026,8.194134,-8.480854,-0.727160,6.685090,0.760512,-0.486613,-7.335190,-2.705060,5.038607,-7.797479,-8.742117,-2.737462,-2.324036,1.113889,7.713545,-9.179484,5.701906,-5.877503,-3.104750,2.403608,-0.534427,6.551657,-8.274153,3.189551,8.105921,-8.718065,-2.083882,-2.062264,-2.257486,-0.375267,6.705625,-2.096038,2.677128,2.194549,6.852728,5.880573,-5.994763,-6.332987,-9.425970,3.431235,6.132082,7.156803,-8.768368,-0.029429,8.299014,-4.969300,0.879733,4.707188,1.351886,-1.520864,9.444103,-7.414540,2.577651,-6.624050,-9.087932,7.510501,-5.130210,6.993569,-1.301561,0.307206,-9.965262,-2.505676,5.961518,-7.311486,-4.107890,4.122591,6.969915,-3.084962,-3.668869,-3.890074,-0.354696,-5.742282,0.329025,9.519549,1.193810,0.203110,-1.628612,-2.373659,-5.514314,0.130961,2.308342,-2.993593,-6.559896,0.781716,-8.841490,-6.866690,5.743514,2.700000,-0.769859,-2.704146,6.706902,-4.680208,-6.204774,7.713051,9.528871,8.539712,4.627456,8.739261,-5.469207,-4.153818,3.045616,5.528796,3.819058,1.955621,8.834473,-7.200486,3.550988,9.848763,8.053715,-8.053836,5.799940,4.453999,-0.702248,-2.660260,-3.440825,4.381763,7.662066,-5.438024,6.984040,4.842230,-7.439183,6.506931,-3.480093,7.174682,-7.289847,-8.624041,4.989904,-1.764528,2.361502,7.957144,-0.280537,6.515687,5.669049,-8.714196,3.871988,-4.207302,5.777072,2.475358,-8.293077,6.754138,2.381267,-3.764577,-8.690993,-5.928599,2.374468,8.854238,-7.149755,-3.836400,-7.474724,-7.442990,-2.428081,9.462216,-4.176197,8.453322,7.107453,2.082119,-5.727732,-3.079827,1.576244,-8.328988,-9.294184,-7.060320,-9.058123,-1.316200,4.023275,-0.494738,0.265932,-6.483722,4.649341,-1.616421,-1.036066,2.273689,4.488337,7.888228,-9.902678,-4.643162,9.247275,2.109876,4.560146,7.475939,-0.867090,-5.820707,7.815800,4.285861,-2.125674,-9.423618,-0.498812,5.093084,2.447271,-4.649859,7.354212,-4.010971,1.328646,-2.465026,8.932984,0.303319,-2.340669,-8.025459,-5.453216,-2.058611,7.440024,-5.869396,-5.561637,-1.997269,-3.680322,2.570596,4.284643,8.079328,5.046367,0.566662,3.059306,-7.342783,-7.401924,9.651522,-5.286798,4.888851,-4.200419,3.544089,3.677771,-8.315322,-5.041619,9.617975,3.847737,-2.520607,8.289501,-7.707694,0.055337,-7.829187,8.363370,-5.957386,0.287720,6.611735,3.298082,-7.105847,-6.482416,1.749898,-1.778684,-5.792006,6.903218,-4.709618,-1.249891,4.472613,0.763980,3.341199,7.954773,-3.858597,7.793225,8.959206,4.367058,-2.559799,-8.827137,-8.500154,-2.613620,0.127609,-3.256844,-6.728374,-7.977984,-8.247313,2.649487,-6.941035,7.994131,7.227976,-3.805246,-4.152973,-0.980533,-5.035407,-0.895952,7.220358,4.385971,-2.742357,-5.193737,3.509806,-0.053670,-4.537970,1.004200,-4.425679,-1.112807,-3.892441,-2.338728,-8.360999,4.588731,-8.327738,8.629086,-1.108674,-2.629632,-3.418150,-7.616696,4.519451,4.726124,-8.247490,-7.484091,-8.289925,3.248924,6.772956,4.600413,-4.971890,-2.076558,-3.276610,4.415687,6.146006,5.795652,-9.952917,7.574964,-5.902908,-9.163617,9.147283,8.415712,1.649091,-0.250688,5.946368,-7.269700,-9.462891,-3.827944,-8.407410,-9.085126,5.437495,-1.579653,6.831880,7.714577]], dtype = "float64")#candidate|7553|(2, 1080)|const|float64
call_7552 = relay.TupleGetItem(func_1330_call(relay.reshape(const_7553.astype('float64'), [9, 16, 15])), 0)
call_7554 = relay.TupleGetItem(func_1332_call(relay.reshape(const_7553.astype('float64'), [9, 16, 15])), 0)
func_967_call = mod.get_global_var('func_967')
func_970_call = mutated_mod.get_global_var('func_970')
var_7559 = relay.var("var_7559", dtype = "float64", shape = (12, 1))#candidate|7559|(12, 1)|var|float64
call_7558 = func_967_call(relay.reshape(var_7559.astype('float64'), [3, 2, 2]))
call_7560 = func_967_call(relay.reshape(var_7559.astype('float64'), [3, 2, 2]))
uop_7567 = relay.log(call_7492.astype('float64')) # shape=(8, 4, 3)
uop_7569 = relay.log(call_7493.astype('float64')) # shape=(8, 4, 3)
output = relay.Tuple([call_7550,call_7552,const_7553,call_7558,var_7559,uop_7567,])
output2 = relay.Tuple([call_7551,call_7554,const_7553,call_7560,var_7559,uop_7569,])
func_7584 = relay.Function([var_7559,], output)
mod['func_7584'] = func_7584
mod = relay.transform.InferType()(mod)
var_7585 = relay.var("var_7585", dtype = "float64", shape = (12, 1))#candidate|7585|(12, 1)|var|float64
output = func_7584(var_7585)
func_7586 = relay.Function([var_7585], output)
mutated_mod['func_7586'] = func_7586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_7625 = relay.TupleGetItem(func_7211_call(), 0)
call_7626 = relay.TupleGetItem(func_7213_call(), 0)
func_1330_call = mod.get_global_var('func_1330')
func_1332_call = mutated_mod.get_global_var('func_1332')
var_7629 = relay.var("var_7629", dtype = "float64", shape = (2160,))#candidate|7629|(2160,)|var|float64
call_7628 = relay.TupleGetItem(func_1330_call(relay.reshape(var_7629.astype('float64'), [9, 16, 15])), 0)
call_7630 = relay.TupleGetItem(func_1332_call(relay.reshape(var_7629.astype('float64'), [9, 16, 15])), 0)
output = relay.Tuple([call_7625,call_7628,var_7629,])
output2 = relay.Tuple([call_7626,call_7630,var_7629,])
func_7631 = relay.Function([var_7629,], output)
mod['func_7631'] = func_7631
mod = relay.transform.InferType()(mod)
var_7632 = relay.var("var_7632", dtype = "float64", shape = (2160,))#candidate|7632|(2160,)|var|float64
output = func_7631(var_7632)
func_7633 = relay.Function([var_7632], output)
mutated_mod['func_7633'] = func_7633
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7652 = relay.var("var_7652", dtype = "float32", shape = (11, 10, 12))#candidate|7652|(11, 10, 12)|var|float32
uop_7653 = relay.acos(var_7652.astype('float32')) # shape=(11, 10, 12)
func_7341_call = mod.get_global_var('func_7341')
func_7345_call = mutated_mod.get_global_var('func_7345')
const_7661 = relay.const([-3.646754,9.367084,-7.400629,6.759381,9.915470,1.871681,-2.725666,3.987055,-9.776855,3.604137,4.710394,-8.457355,-0.034169,-7.553021,-7.952121,6.468613,0.999595,-1.575439,-9.758488,3.141772,-4.494597,7.866094,4.012628,-5.394087,4.925792,1.546229,-1.721196,4.224882,0.005926,3.250330,4.450532,-9.957165,6.052102,0.582204,-3.546909,2.350489,4.735375,2.099954,6.130036,7.281481,-9.456225,-6.569299,-4.396593,8.191118,2.671485,-3.209696,8.818884,1.087079], dtype = "float64")#candidate|7661|(48,)|const|float64
const_7662 = relay.const([7.434069,-2.379514,5.138303,-6.438762,3.344864,0.269549,-2.943833,-3.393813,0.163502,-8.527598,-4.456743,-3.780970,9.496921,5.815642,-3.390691,5.884919,5.098657,-2.835863,3.817292,-4.028588,-8.750009,-4.451739,0.735897,-1.365500,-3.693110,7.839504,1.869353,4.174817,-4.745228,8.617155,-4.365428,-5.885984,-6.625621,-6.733359,6.510938,-8.294623,-7.181549,1.585311,5.961044,7.693482,-5.878739,4.922856,-8.595758,7.928154,3.705978,8.963307,1.861629,1.166575,-5.233079,9.675445,-4.450063,-7.027344,1.819999,-5.344454,9.893967,-9.118781,7.438637,2.707581,-6.781154,-1.635801,7.234401,-6.558863,4.387258,-4.680850,6.027746,-0.749884,3.673382,4.195144,-2.556305,0.721795,3.742248,6.579785,3.841815,-6.379389,3.540213,3.112496,-6.174472,2.290389,-7.583626,8.584910,-6.513931,9.810185,-5.798282,-5.207078,9.452499,-2.225958,0.631788,9.593343,-8.528287,3.957687,-6.484596,-4.021868,-0.924227,-4.947566,4.167700,-7.458487,8.347570,0.695431,-8.440225,-5.814436,-3.246677,-6.212424,4.521238,-9.722796,8.382176,5.522878,2.595496,-9.801822,-3.052142,-2.345248,2.248769,3.103986,-7.801775,-6.194809,-7.103920,-3.188808,-4.313106,-5.399267,-8.468508,0.851539,-1.759676,3.911044,1.679441,1.858355,7.703249,2.729367,7.299645,8.149055,-2.811369,-1.335495,0.362948,2.804116,-0.765510,7.457236,-7.504911,-6.911390,9.952054,-5.090876,-9.910338,-8.852521,4.815186,-6.107404,-0.134959,4.035003,4.304607,9.186848,-2.220629,-4.715133,7.296309,-6.932177,3.501683,-2.659867,-1.427457,2.895279,6.375897,-5.423041,6.828327,7.302568,8.676733,-2.201608,-3.224999,3.617044,-3.910086,0.670846,2.842954,-2.141112,6.470723,1.923075,3.135559,-9.857304,6.352324,-3.131205,5.280702,-1.098073,-3.138974,5.575446,2.977783,8.919103,5.751907,9.420102,-3.914417,3.033668,-6.535446,-5.618625,0.203797,-6.960846,1.069401,2.398971,-0.215261,2.162942,9.239998,-4.241387,0.054445,-8.173293,-8.865733,8.608496,6.077361,-7.477564,-6.763958,-0.823099,4.163838,-5.001545,1.154311,7.709185,0.626015,-8.185325,-6.151532,4.943036,-0.381224,-9.299283,6.372829,-4.889516,-4.845737,3.431718,2.834541,-3.709738,-7.008610,3.546122,-8.616336,-9.852649,-1.359960,-9.266711,3.243660,-3.885298,-6.617615,-9.748948,5.576284,-4.170594,-3.502072,-3.156533,3.001133,-6.160001,4.735426,4.568491,0.550076,1.313874,-3.452804,-0.813392,-1.275823,-9.506106,5.339476,-7.883833,7.108806,-3.164241,-8.965029,0.821903,0.371794,-5.985719,2.782641,-7.651029,0.199997,-3.963549,-8.038247,3.229335,-0.977817,9.724608,-0.504343,-3.535011,-8.597909,1.063675,2.542552,9.546468,9.730708,1.968689,1.502753,6.687317,2.714233,3.392459,-4.721845,-4.303074,-0.214032,-6.508388,-7.758889,-4.664316,0.574392,5.558204,-0.639015,6.189879,-1.874207,-7.704885,-3.353550,-9.676612,-1.289658,3.796744,-9.618044,3.018036,9.116695,-7.790417,-2.107179,2.665733,-6.429510,-8.228913,5.355998,-0.049431,-0.133565,4.148791,-7.885215,-4.635768,4.785194,4.409083,-2.569477,-8.157231,-6.282523,7.815752,0.106073,-9.669356,0.740690,-4.895043,-0.914103,4.526087,-7.802666,-5.537267,-3.776980,5.841483,-7.482750,-6.099313,6.760450,0.023292,3.988452,-4.870542,0.454935,-8.695655,2.493487,8.186896,-9.418389,-1.189881,9.023692,2.234679,1.282058,-2.967699,-6.522096,-7.241911,3.801935,2.493460,-7.804359,-5.586901,8.334745,7.078626,8.948908,-0.350670,7.448552,-2.198280,1.040897,-7.038596,-2.635034,4.797939,0.136016,-9.000660,1.028138,5.453336,5.437607,3.119503,4.997042,1.917430,4.325450,-9.072290,-2.298262,6.605668,-3.793637,3.702387,-0.710255,6.891134,-3.956960,9.561765,-4.409411,-8.477496,-8.552800,-5.136878,-7.044287,-0.677449,7.134485,-4.276168,-0.594952,-7.070218,1.532881,3.129616,-2.599472,-8.770008,9.514605,-2.653967,-6.532651,7.733540,-1.687795,-5.518179,-1.302959,-8.377579,8.448372,8.356034,-1.195920,7.086782,9.973601,-2.688004,7.630826,4.010120,-1.083340,-7.617592,-2.216971,8.199794,3.771560,4.846420,-3.260083,-9.962739,-7.217858,1.049744,0.158095,-3.004183,-3.828547,-9.902083,1.072306,-6.635043,3.189945,4.419041,-4.682429,-3.912771,-4.871795,2.409301,2.402285,0.451296,-6.619257,-5.705874,2.004467,-8.274426,4.867153,4.404128,-7.968978,-0.042010,0.675775,8.277436,-7.650929,2.685355,2.572648,-4.763399,-1.548609,-5.207400,-5.138643,-8.401578,-6.172997,0.423018,9.962459,-4.775559,-8.037819,3.445179,-9.083229,-9.594969,-6.430179,-7.857416,-2.509963,-3.418100,-5.618412,2.965285,-9.408753,-3.568854,6.241929,-8.771444,-5.363332,-3.292491,-5.053901,-3.769221,2.974090,0.795692,7.057128,2.546501,-8.091724,-6.580975,6.378047,-4.810312,-4.628605,-8.057395,-1.296607,-7.960773,3.702979,-6.983766,3.900658,4.203522,1.913195,-7.373713,-3.685446,-6.313909,-1.799159,0.892624,9.972504,9.330394,-2.464269,0.110114,-4.083757,8.789663,-8.819680,8.868468,4.337696,-3.063808,-3.696854,8.874466,1.474601,2.951495,-1.111575,3.057638,-2.629134,1.786162,-3.516253,-5.072246,6.940808,-6.661485,7.344168,0.134855,-6.590013,4.991600,-8.358925,6.272601,-5.031923,7.204259,0.595967,-5.618968,4.904271,-1.834439,-3.202788,5.264923,1.654790,-3.800424,4.780551,0.700733,0.286123,-1.522753,0.373945,4.958773,4.966322,-7.092855,5.370648,-6.392825,2.971109,-9.160283,9.133005,0.063207,-2.390153,1.681565,4.544607,4.533261,1.341335,-1.723864,-6.661717,1.311439,6.471222,-8.837209,-3.399111,8.338979,-0.481544,-2.651663,0.605342,-2.009530,8.347222,-4.097290,-4.747007,9.124241,4.681147,-6.313976,-1.025087,2.909579,4.555322,-7.700486,3.595496,0.488350,-1.884731,7.746355,4.170541,0.580327,-8.594441,5.738609,3.495989,-0.169547,5.671394,-6.855686,-3.676684,3.206965,-6.718459,-2.894763,4.361774,6.648401,6.002673,-2.698112,-9.966432,8.158596,1.455510,0.073433,7.184100,3.497096,-7.140233,-9.443103,-9.240566,-6.520974,-6.197776,-6.133290,9.392882,4.115862,-5.766656,8.191639,3.321747,9.400857,-4.329551,5.718621,4.418775,-6.474021,6.506262,-4.831932,-0.480201,-2.292653,7.796649,-5.927296,-9.648387,6.593720,7.027870,8.399163,9.635799,4.278877,9.574928,-6.341203,-7.613310,-2.178395,3.612003,6.321566,5.848179,-8.409262,-1.396027,5.899282,-1.130635,4.171312], dtype = "float64")#candidate|7662|(624,)|const|float64
call_7660 = relay.TupleGetItem(func_7341_call(relay.reshape(const_7661.astype('float64'), [8, 6, 1]), relay.reshape(const_7662.astype('float64'), [8, 6, 13]), ), 0)
call_7663 = relay.TupleGetItem(func_7345_call(relay.reshape(const_7661.astype('float64'), [8, 6, 1]), relay.reshape(const_7662.astype('float64'), [8, 6, 13]), ), 0)
func_7631_call = mod.get_global_var('func_7631')
func_7633_call = mutated_mod.get_global_var('func_7633')
var_7677 = relay.var("var_7677", dtype = "float64", shape = (2160,))#candidate|7677|(2160,)|var|float64
call_7676 = relay.TupleGetItem(func_7631_call(relay.reshape(var_7677.astype('float64'), [2160,])), 1)
call_7678 = relay.TupleGetItem(func_7633_call(relay.reshape(var_7677.astype('float64'), [2160,])), 1)
output = relay.Tuple([uop_7653,call_7660,const_7661,const_7662,call_7676,var_7677,])
output2 = relay.Tuple([uop_7653,call_7663,const_7661,const_7662,call_7678,var_7677,])
func_7682 = relay.Function([var_7652,var_7677,], output)
mod['func_7682'] = func_7682
mod = relay.transform.InferType()(mod)
var_7683 = relay.var("var_7683", dtype = "float32", shape = (11, 10, 12))#candidate|7683|(11, 10, 12)|var|float32
var_7684 = relay.var("var_7684", dtype = "float64", shape = (2160,))#candidate|7684|(2160,)|var|float64
output = func_7682(var_7683,var_7684,)
func_7685 = relay.Function([var_7683,var_7684,], output)
mutated_mod['func_7685'] = func_7685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7484_call = mod.get_global_var('func_7484')
func_7486_call = mutated_mod.get_global_var('func_7486')
call_7769 = func_7484_call()
call_7770 = func_7484_call()
uop_7772 = relay.log10(call_7769.astype('float64')) # shape=(8, 4, 3)
uop_7774 = relay.log10(call_7770.astype('float64')) # shape=(8, 4, 3)
output = relay.Tuple([uop_7772,])
output2 = relay.Tuple([uop_7774,])
func_7778 = relay.Function([], output)
mod['func_7778'] = func_7778
mod = relay.transform.InferType()(mod)
output = func_7778()
func_7779 = relay.Function([], output)
mutated_mod['func_7779'] = func_7779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_7783 = relay.TupleGetItem(func_7211_call(), 0)
call_7784 = relay.TupleGetItem(func_7213_call(), 0)
func_2962_call = mod.get_global_var('func_2962')
func_2966_call = mutated_mod.get_global_var('func_2966')
var_7791 = relay.var("var_7791", dtype = "uint8", shape = (128,))#candidate|7791|(128,)|var|uint8
call_7790 = func_2962_call(relay.reshape(var_7791.astype('uint8'), [8, 8, 2]), relay.reshape(var_7791.astype('uint8'), [8, 8, 2]), )
call_7792 = func_2962_call(relay.reshape(var_7791.astype('uint8'), [8, 8, 2]), relay.reshape(var_7791.astype('uint8'), [8, 8, 2]), )
uop_7803 = relay.asin(call_7783.astype('float32')) # shape=(8, 4, 3)
uop_7805 = relay.asin(call_7784.astype('float32')) # shape=(8, 4, 3)
func_7399_call = mod.get_global_var('func_7399')
func_7400_call = mutated_mod.get_global_var('func_7400')
call_7811 = func_7399_call()
call_7812 = func_7399_call()
func_4124_call = mod.get_global_var('func_4124')
func_4129_call = mutated_mod.get_global_var('func_4129')
const_7816 = relay.const([[5,-3,-4,-5,9,-4,-7,6,-2,-6,-9,-3,7,4,9,-3,3,7,7,6,7,4,1,-1,-6,-9,9,-4,7,-4,-3,-5,4,-4,3,6,-10,-6,-2,-7,6,-3,-7,5],[-6,4,-7,8,8,-2,-1,-5,-3,-3,7,-5,-5,2,-5,8,8,-3,-9,-6,-10,-2,-1,2,-7,8,7,1,-2,-2,1,-10,-1,2,1,-9,-10,-2,7,4,-10,-7,8,7],[-10,8,-10,-10,9,-1,2,1,-8,-3,-6,-8,-3,-3,3,-10,-10,6,-5,9,8,4,9,-4,-10,-1,-5,-5,3,9,8,1,-8,-6,-5,6,-6,-5,-8,1,5,-6,-8,-1],[7,-9,7,-2,8,7,6,7,6,6,-1,3,8,8,-8,-9,7,3,7,-1,5,8,-1,-3,7,2,6,-5,5,-10,-10,-10,-6,-3,8,8,1,-7,1,3,9,7,1,10]], dtype = "uint16")#candidate|7816|(4, 44)|const|uint16
const_7817 = relay.const([-3.940471,7.898288,0.747190,5.118130,-0.047040,-5.358735,2.142962,-1.731766,-8.443045,-3.418306,-2.377078,2.173934,-1.135320,1.920341,6.179543,-6.916193,-2.525019,5.138665,2.482308,-7.372918,9.082992,4.699798,-1.682661,5.872680,4.531002,-7.876149,-0.128558,-5.695546,-2.226184,-6.539810,1.908034,-3.000095,-4.949245,2.774656,-2.260411,-4.001617,-8.996264,-5.401864,1.982590,1.514012,-2.764379,1.148568,8.438937,1.320207,9.122409,-2.259878,6.807438,-0.093260,-1.558041,3.525658,3.266887,7.435188,9.041224,6.342334,2.296685,-4.943851,-9.979958,-8.693075,0.794101,-1.210710,-2.768384,2.343118,6.355546,8.356440,4.762802,-6.073715,-3.506999,8.666968,-7.213498,8.018462,5.631006,0.640813,6.689999,-4.421651,4.800731,0.679331,4.018314,6.946736,-8.801412,-8.094588,5.119197,-4.051382,-1.920787,-6.792682,-7.556742,8.482930,7.851113,-3.515962,-6.806637,5.442361,6.388005,9.021291,-1.534377,9.424195,-4.682425,-5.709201,-3.441242,9.649045,-6.373205,2.628783,3.028279,6.411635,0.783372,9.544138,-3.742087,-8.485190,8.416272,-6.944576,-4.834198,-2.732754,5.455403,4.938450,-5.562478,5.287348,-4.595613,3.518609,4.831755,-0.961128,-6.350250,-4.596663,-3.731471,-0.417148,7.878187,5.159268,-5.300709,-6.508838,8.238642,-9.542932,-0.820208,-5.467819,-5.572499,2.568823,-4.865531,6.387895,3.965191,4.809398,-1.745037,-6.548129,-2.169110,6.484965,0.326374,7.780545,2.480704,-3.097243,4.741380,-2.360548,7.140724,2.449298,9.131991,-4.740631,-3.198155,7.689817,-8.856008,-6.063021,9.936593,7.140277,0.809910,3.516725,-5.425592,5.369962,1.204854,-4.313600,7.665385,-1.512020,-7.647255,9.624811,6.551833,8.712449,-2.353209,-7.594284,6.772860,4.733233,-6.431314,-3.382578,-4.964312,-4.521180,5.068528,-1.354631,-0.864883,-0.682176,-9.720150,-2.082118,-7.885305,1.886483,0.414439,-1.277933,8.823331,-7.786450,0.727669,3.797412,-8.148774,4.532980,-3.601969,-0.016918,-1.594072,3.952896,-0.143304,-8.882742,9.158060,-0.378982,-4.117881,0.758601,-3.028904,3.422225,-6.688629,2.614729,1.177737,1.358167,0.714497,-3.566742,-3.479789,-4.829983,2.993859,5.039994,-5.556021,-8.681044,-9.476290,-8.014914,1.105017,-5.807676,-1.380648,-9.817913,-2.310019,9.291999,2.783632,-4.151695,0.336422,-0.202762,0.288983,2.792450,7.350906,-6.783301,-1.891418,-6.010325,9.349383,4.413971,8.511815,0.505490,3.098387,8.998107], dtype = "float64")#candidate|7817|(240,)|const|float64
var_7818 = relay.var("var_7818", dtype = "float64", shape = (28, 4))#candidate|7818|(28, 4)|var|float64
call_7815 = relay.TupleGetItem(func_4124_call(relay.reshape(const_7816.astype('uint16'), [2, 11, 8]), relay.reshape(const_7817.astype('float64'), [240,]), relay.reshape(var_7818.astype('float64'), [112,]), ), 3)
call_7819 = relay.TupleGetItem(func_4129_call(relay.reshape(const_7816.astype('uint16'), [2, 11, 8]), relay.reshape(const_7817.astype('float64'), [240,]), relay.reshape(var_7818.astype('float64'), [112,]), ), 3)
output = relay.Tuple([call_7790,var_7791,uop_7803,call_7811,call_7815,const_7816,const_7817,var_7818,])
output2 = relay.Tuple([call_7792,var_7791,uop_7805,call_7812,call_7819,const_7816,const_7817,var_7818,])
func_7821 = relay.Function([var_7791,var_7818,], output)
mod['func_7821'] = func_7821
mod = relay.transform.InferType()(mod)
var_7822 = relay.var("var_7822", dtype = "uint8", shape = (128,))#candidate|7822|(128,)|var|uint8
var_7823 = relay.var("var_7823", dtype = "float64", shape = (28, 4))#candidate|7823|(28, 4)|var|float64
output = func_7821(var_7822,var_7823,)
func_7824 = relay.Function([var_7822,var_7823,], output)
mutated_mod['func_7824'] = func_7824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7778_call = mod.get_global_var('func_7778')
func_7779_call = mutated_mod.get_global_var('func_7779')
call_7852 = relay.TupleGetItem(func_7778_call(), 0)
call_7853 = relay.TupleGetItem(func_7779_call(), 0)
uop_7861 = relay.erf(call_7852.astype('float64')) # shape=(8, 4, 3)
uop_7863 = relay.erf(call_7853.astype('float64')) # shape=(8, 4, 3)
output = uop_7861
output2 = uop_7863
func_7872 = relay.Function([], output)
mod['func_7872'] = func_7872
mod = relay.transform.InferType()(mod)
mutated_mod['func_7872'] = func_7872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7872_call = mutated_mod.get_global_var('func_7872')
call_7873 = func_7872_call()
output = call_7873
func_7874 = relay.Function([], output)
mutated_mod['func_7874'] = func_7874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7872_call = mod.get_global_var('func_7872')
func_7874_call = mutated_mod.get_global_var('func_7874')
call_7979 = func_7872_call()
call_7980 = func_7872_call()
output = relay.Tuple([call_7979,])
output2 = relay.Tuple([call_7980,])
func_7993 = relay.Function([], output)
mod['func_7993'] = func_7993
mod = relay.transform.InferType()(mod)
output = func_7993()
func_7994 = relay.Function([], output)
mutated_mod['func_7994'] = func_7994
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8016 = relay.var("var_8016", dtype = "int64", shape = (8, 12, 11))#candidate|8016|(8, 12, 11)|var|int64
var_8017 = relay.var("var_8017", dtype = "int64", shape = (8, 12, 11))#candidate|8017|(8, 12, 11)|var|int64
bop_8018 = relay.right_shift(var_8016.astype('int64'), relay.reshape(var_8017.astype('int64'), relay.shape_of(var_8016))) # shape=(8, 12, 11)
output = bop_8018
output2 = bop_8018
func_8025 = relay.Function([var_8016,var_8017,], output)
mod['func_8025'] = func_8025
mod = relay.transform.InferType()(mod)
var_8026 = relay.var("var_8026", dtype = "int64", shape = (8, 12, 11))#candidate|8026|(8, 12, 11)|var|int64
var_8027 = relay.var("var_8027", dtype = "int64", shape = (8, 12, 11))#candidate|8027|(8, 12, 11)|var|int64
output = func_8025(var_8026,var_8027,)
func_8028 = relay.Function([var_8026,var_8027,], output)
mutated_mod['func_8028'] = func_8028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8055 = relay.var("var_8055", dtype = "uint16", shape = ())#candidate|8055|()|var|uint16
var_8056 = relay.var("var_8056", dtype = "uint16", shape = (1, 16, 13))#candidate|8056|(1, 16, 13)|var|uint16
bop_8057 = relay.less_equal(var_8055.astype('bool'), var_8056.astype('bool')) # shape=(1, 16, 13)
func_4348_call = mod.get_global_var('func_4348')
func_4355_call = mutated_mod.get_global_var('func_4355')
const_8062 = relay.const([6.968181,4.832378,5.109370,-6.707112,1.148663,-5.104993,-4.809343,7.081127,7.935577,-9.236786,8.239460,8.030483,2.411393,-7.025960,1.775902,1.131871,-3.639606,3.004930,-8.383241,-4.248849,-2.256513,7.554818,-0.848503,-8.755384,5.130306,9.923153,-6.857128,-5.669779,1.805025,9.117675,-3.474594,6.593647,7.403268,6.104888,-0.158815,-6.753671,-5.019435,-0.704250,-9.812332,8.764284,9.405623,-0.071368,0.078253,8.811487,5.040972,-2.271766,7.486803,-4.364382,-0.983449,3.737776,-2.354874,-5.703192,8.836084,5.022322,6.431678,2.641354,7.713038,-1.216397,7.325962,8.376059,-3.029344,-8.683394,-9.346918,7.574227,-2.746936,1.511582,-8.538744,-4.816044,-3.305245,4.994834,-4.595555,-2.016212,1.795064,-8.918423,2.174699,8.609227,3.151279,0.686645,4.302078,6.830650,2.519023,-0.623183,-6.273231,3.074873,-6.884225,-4.553286,-1.338446,4.999219], dtype = "float32")#candidate|8062|(88,)|const|float32
const_8063 = relay.const([[5.004881,7.368550,-6.820489,9.960393,5.982894,2.430084,-7.007191,-0.784544,-2.568834,-6.529362,6.612807,-2.884915,-6.327510,-1.102426,-0.057394,0.543490,5.677569,-2.043660,1.286685,4.413732,1.684557,-6.020293,-2.847673,4.489155,4.773447,5.111011,-3.253895,3.325637,9.751042,4.401457,-8.768068,3.909375,-2.978376,6.624034,2.580383,-0.232849,3.565225,-5.904167,5.654358,3.683620,-3.719212,1.792872,-9.887094,5.249276,-5.036314,7.731101,6.051308,-8.123545,-1.094087,2.313405,-7.754835,-8.147203,-2.661602,6.406542,1.444316,7.867522,8.931534,-1.153883,4.333781,-3.608562,1.559284,-3.489026,-9.734823,-0.220419,6.199371,3.132550,1.506573,8.948596,-4.747093,4.701582,5.159580,5.416405,3.456598,-0.032962,-5.832770,-8.096154,-4.593849,-9.994892,-6.676866,-4.204152,6.135726,2.003445,1.492159,-0.582593,-2.990893,7.448528,-2.286812,-9.496251,6.824016,3.829757,6.358530,3.241713,-4.565110,5.400338,-3.670582,-1.950079,2.283910,-0.205543,2.674042,-0.954810,-1.681816,5.601915,3.258740,-0.359076,0.908757,-2.870439,6.529866,-6.233057,3.688132,-2.872144,1.688250,0.509415,2.829944,-8.972553,7.510953,-8.240075,-8.795393,-5.844127,4.745333,-3.655342,-1.431396,-7.181893,-3.543493,-1.122053,-7.761118,7.876177,3.664801,-7.781525,-2.503095,1.149216,6.634391,5.686583,-2.199670,3.345107,-5.729224,-2.006951,-7.974980,5.233168,9.864128,3.408906,-2.879191,-3.100770,5.860451,-4.278693,2.910031,0.060703,3.619093,-7.308981,3.575905,-6.148696,-7.276497,-3.256723,1.911563,7.745769,1.584842,-4.191658,-7.557557,-8.738263,0.771534,6.758950,-0.864416,9.186029,-0.530326,6.663227,-4.583910,4.741097,-2.881139,6.982758,9.339181,4.421580,9.583420,0.429429,-7.438280,-4.343973,-8.648484,-0.273231,-2.760434,7.106981,1.963731,-6.633306,-0.551203,-4.544340,-3.755663,-0.134139,9.648235,-2.245402,7.621078,-8.703587,5.397235,4.575756,-4.215716,8.224312,8.574037,0.002526,0.113826,-3.762876,-4.691057,6.038135,6.089915,-9.015417,4.084426,7.832870,-7.789543,-6.170952,-9.324153,-9.026934,1.863720,-9.297603,-4.122237,9.734589,2.099945,6.635449,0.661093,-4.307822,-6.421845,6.491220,-6.148347,-2.132618,-6.843967,-0.772554,-1.151725,4.152326,-1.711781,-4.162301,-8.976912,6.466123,-8.277479,1.130252,5.920050,-9.837716,-9.754474,8.829658,-7.528751,-9.951664,-6.618765,-6.502812,0.758780,-3.886250,9.821789,-9.936313,-0.699301,4.490985,-6.404490,-9.796569,8.307815,0.804921,-2.517320,-7.742921,-2.792620,3.845943,3.985733,8.012497,-9.988775,7.046272,-8.241060,9.084425,6.924842,6.905267,9.943449,3.559461,-6.358710,-2.480955,1.205131,-9.028814,5.441269,-2.125042,5.553592,0.610093,8.379322,7.878080,-4.535883,-5.502059,7.550409,4.825037,-1.064068,3.120533,5.885907,1.840556,-8.972158,-1.967529,-6.717304,7.303491,-6.831735,7.254129,4.575208,-1.133071,5.018061,7.951564,-2.132370,1.686871,7.399936,-0.760616,-7.438653,7.833574,9.059440,8.011689,-1.356623,8.768355,4.921939,-0.268998,6.809284,0.241630,6.518930,1.729823,3.623918,-8.226931,-8.028310,-0.262091,9.468923,7.102231,3.200959,-4.603355,7.289612,8.985990,-2.297221,6.627028,-6.420628,-4.094290,7.150082,2.207611,-7.241213,5.003025,-4.566537,3.109166,9.864418,-8.532051,8.379268,-5.667835,-0.744267,-3.272430,4.230265,-2.381982,-5.124192,-9.068600,2.211595,-5.492337,9.087912,-6.535477,8.142992,0.207881,-9.832060,-5.630238,-7.967820,7.705388,-5.695470,9.614278,1.327071,7.931193,-1.942334,-1.135140,3.453812,4.479390,-1.355474,6.711682,-7.904857,8.216174,-4.184163,-3.217151,-4.394606,-0.337155,3.914037,4.435118,5.058283,-8.256547,-5.356553,2.175350,-2.602478,-6.861755,-7.348176,-8.881822,5.237988,-0.371018,9.536587,-8.582227,-2.465168,-7.879499,5.307818,-6.078366,-5.501142,-1.139772,2.404810,9.211052,9.200121,4.492793,9.283141,-5.771672,8.607111,-8.794193,8.646026,-5.540241,1.165700,-3.751478,-9.124183,-4.342533,4.758690,6.395144,-7.440404,-9.896465,0.352939,-9.494223,-3.501504,0.705797,3.089148,-7.606258,-2.345716,-2.693384,-8.956460,-1.023249,9.581897,3.548628,-8.712623,-2.103915,2.041955,-8.558796,-5.032763,0.299023,7.269253,-7.934853,7.513122,5.928416,9.574059,5.457720,-1.301649,5.586456,-7.236632,2.311103,9.141730,-9.437755,-9.585553,3.552729,9.655653,3.171080,6.013626,5.806105,8.665687,7.082820,-0.864542,-7.623997,-2.545615,-6.893435,-5.050700,3.094402,9.123714,9.131587,-1.189925,-0.434548,4.536196,-4.928431,3.865096,1.396761,9.236621,-1.125662,-9.553987,-3.744778,-3.515376,8.943429,-6.109736,-9.940958,-4.975518,-5.299438,1.559899,-1.772323,-1.294139,8.517127,-4.715834,-3.002046,3.154144,7.864123,2.921428,4.071996,8.224470,7.742428,6.322199,9.229827,6.551268,0.698847,7.763405,9.844536,-7.471422,6.428855,-4.211419,-9.027210,-2.827336,4.378505,-9.354026,3.751747,3.644015,9.945680,1.616485,3.733064,-9.447746,7.380266,-3.338361,-3.008990,0.851391,-1.360292,6.757880,-9.898105,-7.973895,-3.369304,-7.010425,-7.958896,-8.471945,-4.792166,3.994130,-7.583189,-9.239665,4.228847,-6.366588,-7.393341,6.034765,2.020186,3.452876,4.586228,7.389647,-1.811651,4.300489,-9.856032,8.148063,9.719144,-1.483279,-8.790935,3.387980,4.923606,3.770952,-5.146529,-1.101249,-9.459100,0.297715,-9.910100,1.741229,-8.217806,1.237283,-2.047718,9.546604,6.446421,7.930256,0.500440,9.307169,-9.511148,-0.050770,-9.321271,2.731227,-2.433773,-3.427471,0.470455,-1.874392,-8.440615,-4.265827,-0.073980,9.496180,6.280741,1.539763,6.874976,-5.997716,-1.999482,-7.526796,9.346857,0.087464,-4.093237,-1.476312,6.695898,6.879380,9.801689,-5.371173,-9.079225,2.725568,-7.906685,-1.505441,-2.728171,8.362420,0.812503,0.364241,0.928660,-1.682683,-2.631803,-7.417637,2.826314,1.145082,7.824073,-8.557949,0.664966,-0.916600,1.639466,-2.552503,7.531016,-5.771137,3.775351,4.961951,-5.103485,8.503923,5.887752,-1.283245,5.920423,7.948526,4.062079,-5.613523,2.817539,-7.529607,6.499053,-2.618291,-6.699651,7.291471,-2.363624,1.397881,2.013745,1.582338,-7.577854,9.643443,-9.725100,-7.819601,5.186970,-3.048631,6.555840,5.754104,4.276403],[6.505024,-8.155761,-9.413639,-2.376627,6.738169,-9.753816,-1.243900,-5.755364,-5.261844,-4.175579,-2.691297,-0.469935,-3.459324,5.936833,-7.543765,-6.174169,-9.976191,9.399908,0.656744,-1.269504,4.560367,-3.716772,8.947176,2.434918,1.245900,8.960753,6.435721,-0.244107,4.711414,7.241708,5.017771,-2.958300,-5.295400,-7.527001,7.523006,-0.688218,2.233084,-4.576132,2.749742,-8.522962,8.882472,-5.441943,8.313482,-3.275993,-0.959954,2.950835,8.867624,-2.852891,4.334350,-9.325019,3.502057,2.504756,1.897912,-4.572854,5.704111,2.984705,-8.354027,-9.491634,-2.131884,-0.011731,-6.181153,-9.289000,4.023006,-4.353508,3.816523,4.728125,3.324075,1.880817,-4.083545,-1.758064,7.431255,-1.019325,2.518332,5.010009,-0.722132,3.269770,9.331907,-8.670757,-2.470908,8.763421,2.304255,-4.394287,2.575942,2.527199,6.427572,-5.489469,9.522257,-0.935792,5.001507,1.410696,-5.630577,-3.712250,-1.175963,-2.948630,9.628972,5.222390,6.636727,-4.590967,7.209813,-0.364910,7.752493,1.622889,-3.420879,6.991239,-4.714431,3.428416,8.921907,-2.302404,-4.498826,-8.959457,1.987250,5.755867,-6.213835,9.737235,4.122595,-1.653447,-9.140780,-4.413182,-8.335964,-8.162863,-3.314471,5.210660,-4.133279,7.468608,-1.926057,-6.312058,7.257029,-0.898951,2.350161,-3.975698,-2.984807,3.475079,-5.082333,8.635141,-6.758624,3.166635,3.565726,-1.881007,2.784862,-8.928300,-4.633091,0.167918,-0.939688,5.278914,8.227772,3.754936,-2.576305,0.437078,-7.759508,6.901369,-3.974129,0.428841,3.954625,0.668266,9.231384,0.505539,5.162040,-2.113470,-9.629113,1.097902,8.192382,2.697896,-0.722860,-1.553680,6.364520,8.622310,4.834487,5.787043,-9.283417,5.777602,5.377299,5.420241,5.299312,-9.226370,9.176202,2.785221,-3.531201,3.595542,9.633846,9.237430,6.393594,7.293643,1.468768,-6.196284,3.725168,-7.300799,-4.251322,0.882449,0.896111,1.870453,-9.855066,3.736155,-1.705728,3.286945,-5.869760,-8.635148,2.835370,-7.959848,6.355319,-2.821074,-3.604514,9.138972,8.592608,-3.055657,-2.553781,2.415671,8.456719,-4.153137,7.870259,9.304248,-2.296240,-9.874278,2.430458,9.754770,9.280260,-4.125593,-4.376319,-7.631666,-9.792594,-2.381162,-8.249569,9.089545,-9.580888,9.963533,4.560787,2.556695,1.688142,6.603102,5.320415,0.232353,7.082947,-7.447135,5.887292,3.861933,-6.259075,-1.439854,7.409912,-8.967035,0.163701,-7.128799,-4.052474,9.835315,5.163290,0.998281,5.120568,7.894549,-1.633560,-5.303638,-6.941387,7.077287,6.600356,4.555000,-3.375840,-5.028282,-2.553038,-2.437212,-7.326979,-7.742276,1.308354,-4.310596,-6.053174,0.322041,-1.638168,-5.246167,1.872425,2.625079,3.682836,9.977168,-7.447699,-9.565652,-3.666820,4.255822,-3.349544,-4.625063,2.661356,-4.132184,-5.489700,-8.297606,4.273701,2.384580,5.618035,5.807420,-4.151319,-5.649056,-7.477607,4.791231,3.830966,8.896627,-1.965193,7.071590,8.325018,9.781896,2.375125,-9.438968,-1.024260,8.818831,-1.244850,-1.408763,-3.431568,9.966141,8.828251,9.843360,8.715112,-9.978660,1.809250,-3.766585,1.365451,-9.763668,9.083484,2.969125,6.412975,2.791180,7.413362,-3.506414,-0.760968,-4.447131,-6.163795,0.459694,9.640612,6.430813,4.386461,3.561439,7.353759,-7.736790,-3.461838,-8.687010,-5.131351,6.753794,5.931898,4.130540,6.902946,-9.546378,-8.039150,8.784405,2.054485,-0.374089,-7.589465,-3.962050,1.443289,3.524935,-7.697150,2.652384,7.882172,7.597764,-3.085856,1.275617,-8.400442,5.362886,8.924968,-1.144793,1.941822,9.416821,-5.009334,6.579964,-9.073665,1.308638,-4.052019,-6.797656,8.308970,0.211073,-9.270466,4.373526,-5.701308,2.250726,-9.813924,-6.307611,-2.599328,0.917026,7.749030,6.846561,7.723779,1.594766,5.652903,-5.050761,1.874595,1.763547,-5.880444,-5.857445,1.285322,-0.232571,-7.915701,-6.013694,-6.580212,2.518973,-8.343989,-5.711025,-3.049972,-9.080253,9.083636,-0.541094,-9.436717,-9.853342,4.352861,5.350907,5.827448,-1.820667,-6.216371,-2.784911,-9.229632,4.177561,-6.248170,9.392541,8.634862,4.662717,-3.314561,8.978939,1.365476,7.852937,-7.650818,6.629163,-9.550303,2.976737,-0.405161,9.173270,-4.666748,-4.387366,-0.494602,8.363737,8.302410,-1.834025,-9.822979,-2.377354,-3.720173,-9.444018,-8.423529,-5.336170,4.533008,4.956908,3.400889,7.432101,1.025371,9.651004,5.340561,3.622049,9.729289,-8.754828,9.226146,0.650108,-4.712950,4.335287,0.146056,8.797674,4.799462,6.038763,9.926451,-2.573445,-9.772754,5.164909,-4.674830,-5.057526,-2.687152,-2.714989,4.175882,5.719093,6.697432,-6.980890,-7.926134,-1.712604,-9.375858,7.945697,-9.928405,9.941444,2.206497,-5.102011,3.264687,8.351719,6.181095,-4.632957,5.594385,-6.854107,-2.353154,5.502215,-1.833956,-0.857907,5.494898,-1.306880,-4.636829,-8.493047,-5.194312,0.735365,4.455946,-0.542109,-1.947933,5.354396,-1.625780,1.069452,-3.113160,-3.717876,-9.529601,-3.155378,-0.972693,2.990985,-0.037874,-7.561745,-4.184955,-7.777566,-6.025434,-9.253497,6.720736,-6.637991,3.206856,-8.001278,-4.960378,-2.613122,-4.050988,8.192258,8.563036,3.722409,-4.308862,3.181832,8.241370,9.305973,-8.286019,7.521895,9.411151,1.607778,1.621863,0.093798,-1.167642,-7.682488,-9.509977,6.644598,-7.997538,6.563475,-2.091750,1.810416,-9.979923,4.956120,-4.883605,8.081846,-8.179598,-1.070788,-5.841474,-5.973901,0.330298,4.298585,-0.652333,9.947621,9.204405,3.050138,3.954403,-4.772205,2.047201,-4.192649,-0.742107,-1.692379,5.663686,-0.240324,-6.467581,-7.185406,3.329094,6.047921,0.649527,-9.565762,2.596787,-4.896348,-0.310970,-4.478014,0.097104,8.901777,-4.755373,-4.389919,-2.512362,-1.410228,8.604680,-7.844348,-7.887263,-7.952133,-9.836879,6.442089,8.973620,4.225973,-4.145550,5.189852,-8.676376,0.678505,-0.198238,-3.458177,-5.947781,6.354347,-5.171535,-3.024495,4.497265,-0.365745,2.928686,0.460790,2.604439,-3.027108,8.379549,2.279386,-7.674150,-6.359208,8.608968,4.802401,8.628587,4.417389,-7.450801,5.562975,7.424294,2.634154,5.174329,1.946798,1.535145,-5.646988,2.274918,8.434967,-1.670420,2.040660,-9.049386,3.231445,2.841995,4.065544,-1.948512,-4.476703,-8.693405,-5.876909]], dtype = "float32")#candidate|8063|(2, 616)|const|float32
var_8064 = relay.var("var_8064", dtype = "int32", shape = (624,))#candidate|8064|(624,)|var|int32
const_8065 = relay.const([-5,6,-8,4,-8,-1,-10,-5,-6,8,2,8,10,6,-9,-7,-3,-6,9,10,6,6,8,3,-10,-7,-2,10,-5,10,-5,-8,-1,7,4,-7,1,-8,-5,-4,-2,7,8,-6,6,-6,-4,-9,-1,-2,6,-5,3,7,-4,2,3,-2,9,-3,3,-5,-6,-9,-1,-1,-2,-5,2,4,-2,-4,8,-4,-3,1,10,2,-2,-2,5,1,2,4,-7,-1,-7,-2,2,-1,6,-2,1,2,-6,6,8,9,-5,-5,3,9,-5,-4,-8,-4,8,9,-8,3,-5,-5,8,4,-9,4,-5], dtype = "int8")#candidate|8065|(117,)|const|int8
var_8066 = relay.var("var_8066", dtype = "float64", shape = (240,))#candidate|8066|(240,)|var|float64
call_8061 = relay.TupleGetItem(func_4348_call(relay.reshape(const_8062.astype('float32'), [11, 8, 1]), relay.reshape(const_8063.astype('float32'), [11, 8, 14]), relay.reshape(var_8064.astype('int32'), [624,]), relay.reshape(const_8065.astype('int8'), [117,]), relay.reshape(var_8066.astype('float64'), [240,]), ), 2)
call_8067 = relay.TupleGetItem(func_4355_call(relay.reshape(const_8062.astype('float32'), [11, 8, 1]), relay.reshape(const_8063.astype('float32'), [11, 8, 14]), relay.reshape(var_8064.astype('int32'), [624,]), relay.reshape(const_8065.astype('int8'), [117,]), relay.reshape(var_8066.astype('float64'), [240,]), ), 2)
output = relay.Tuple([bop_8057,call_8061,const_8062,const_8063,var_8064,const_8065,var_8066,])
output2 = relay.Tuple([bop_8057,call_8067,const_8062,const_8063,var_8064,const_8065,var_8066,])
func_8075 = relay.Function([var_8055,var_8056,var_8064,var_8066,], output)
mod['func_8075'] = func_8075
mod = relay.transform.InferType()(mod)
mutated_mod['func_8075'] = func_8075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8075_call = mutated_mod.get_global_var('func_8075')
var_8077 = relay.var("var_8077", dtype = "uint16", shape = ())#candidate|8077|()|var|uint16
var_8078 = relay.var("var_8078", dtype = "uint16", shape = (1, 16, 13))#candidate|8078|(1, 16, 13)|var|uint16
var_8079 = relay.var("var_8079", dtype = "int32", shape = (624,))#candidate|8079|(624,)|var|int32
var_8080 = relay.var("var_8080", dtype = "float64", shape = (240,))#candidate|8080|(240,)|var|float64
call_8076 = func_8075_call(var_8077,var_8078,var_8079,var_8080,)
output = call_8076
func_8081 = relay.Function([var_8077,var_8078,var_8079,var_8080,], output)
mutated_mod['func_8081'] = func_8081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7778_call = mod.get_global_var('func_7778')
func_7779_call = mutated_mod.get_global_var('func_7779')
call_8089 = relay.TupleGetItem(func_7778_call(), 0)
call_8090 = relay.TupleGetItem(func_7779_call(), 0)
func_3637_call = mod.get_global_var('func_3637')
func_3643_call = mutated_mod.get_global_var('func_3643')
var_8092 = relay.var("var_8092", dtype = "float32", shape = (72,))#candidate|8092|(72,)|var|float32
const_8093 = relay.const([-2.966591,-4.970430,2.422893,-2.826669,5.796263,-2.893405,8.691542,1.985683,3.372470,4.620866,2.901847,4.313185,8.771936,-7.900991,-6.283686,-9.399418,1.980642,6.772127,9.951065,-0.815626], dtype = "float32")#candidate|8093|(20,)|const|float32
const_8094 = relay.const([0.696712,-0.359577,4.249212,-4.026344,4.068014,-4.969857,-0.256840,8.947590,0.512760,3.356009,0.572373,9.451055,2.172617,0.483759,-3.297809,2.528473,-7.259859,-8.515759,-9.962406,-5.311645,6.570389,-8.175105,9.175646,-7.691391,9.990593,9.961647,-3.877437,9.338135,-0.708755,-9.815602,-0.152151,-8.033966,-3.207203,1.510440,1.636826,-4.873509,-5.708821,-3.673947,9.113420,-6.710304,6.266773,8.891148,6.055420,9.829195,9.659465,-0.290912,2.347739,-9.462605,-8.274646,-7.765562,6.306747,-0.731358,-0.123012,8.351307,5.133670,-1.059011,4.515576,6.625362,8.593403,-9.060518], dtype = "float32")#candidate|8094|(60,)|const|float32
var_8095 = relay.var("var_8095", dtype = "float64", shape = (120, 2))#candidate|8095|(120, 2)|var|float64
const_8096 = relay.const([[-9,1,9,3,7,7,-3,1,-5,8,-9,7,6,-7,-9,5,7,-5,7,2,-10,-9,9,8,6,10],[-9,-5,4,3,7,3,-1,10,-6,3,-1,-8,-2,-4,10,-4,-1,-5,-1,10,6,3,10,7,-6,-2],[3,-7,4,-5,-7,5,-8,-5,-1,-8,-8,4,4,4,2,-7,5,1,-9,-4,-5,-6,-1,5,-6,7],[-4,2,2,8,-1,10,2,5,-10,-8,10,-10,-5,-3,8,6,2,-9,-5,10,-5,4,-4,7,-10,8],[8,-2,-5,-5,8,-6,-9,-5,-4,-2,5,-6,-5,-4,-9,6,4,-2,7,-1,-9,3,4,2,-3,6],[-10,-1,-5,-1,-9,4,7,2,3,8,2,8,9,3,6,-4,-4,-1,-9,-5,-1,2,3,3,9,8],[3,7,-7,6,4,10,-6,-6,5,-5,-10,-6,3,1,-9,5,-4,-5,-7,-4,2,8,5,3,7,8],[-7,10,-4,-5,-7,-6,-3,2,2,10,8,-10,-1,-4,-2,-6,5,-10,7,3,-6,-5,-7,-8,2,1],[-7,4,-3,-8,9,6,10,-4,-1,-10,-3,5,-1,1,2,-5,2,-7,-8,-1,-9,-2,3,3,-2,-9],[8,-8,-9,-4,10,10,-9,-8,1,3,-6,-6,-2,3,4,2,7,2,-9,-7,-6,-1,-3,1,8,-6],[8,5,3,-5,-1,-8,6,-4,-6,2,-9,6,-1,8,2,4,-7,1,7,8,2,-6,-4,1,-3,-2],[7,-6,7,-8,9,-9,10,-8,-6,5,-2,6,3,-6,2,3,-5,8,5,1,7,-2,-1,-4,-7,-5],[-3,-5,-10,-5,8,-4,6,-9,9,5,-1,2,7,9,8,5,6,-8,-10,9,-2,4,-6,-9,2,-10],[10,5,10,3,9,-9,-7,-1,9,-8,-2,9,5,2,1,-10,-4,10,2,-5,-3,-8,-1,-9,9,-3],[10,-9,-9,2,-3,-3,-1,4,-8,6,3,-2,-5,7,10,6,-4,-5,-6,-5,1,-9,-2,-8,3,-2],[10,-1,6,-8,9,-6,-9,-6,-8,-7,2,1,-10,-4,5,-9,9,9,-9,-2,2,-3,-7,-9,1,-5],[-1,-7,-7,6,-7,6,-7,3,-3,6,3,8,8,6,-3,-2,-7,-7,-10,-6,-10,-4,9,-2,-2,-10],[6,8,5,-5,7,5,6,10,-7,-4,-1,3,-6,2,1,-7,-2,-3,1,7,5,3,6,-1,10,-1],[4,2,-8,1,8,8,-3,7,1,1,8,1,-7,-8,-8,9,4,3,6,1,2,-4,-2,-10,-6,1],[6,7,-4,2,5,-3,5,-1,2,4,1,10,8,-8,-4,8,3,-5,4,1,1,10,-2,6,1,9],[-8,5,10,4,-2,-5,-10,4,-10,-3,8,8,2,-5,5,-5,10,3,-3,5,-9,-2,5,-3,2,-7],[-1,2,10,-8,-9,10,-5,1,-7,-7,1,5,7,10,-6,-10,5,-2,-7,-9,-5,6,-9,-10,-7,5],[6,3,-10,3,-1,4,-2,10,7,6,8,4,10,6,-2,-5,-10,2,-1,-7,7,-8,-8,-2,8,10],[1,5,-9,1,1,10,6,3,-10,-2,4,7,10,8,9,-6,-4,-4,-2,-6,2,-4,1,-6,10,7],[-7,5,-6,-7,-2,5,-4,1,-3,6,-3,4,2,5,9,5,8,5,-6,7,5,-8,-1,4,-5,1],[-5,-4,-8,-8,-10,-3,6,10,-10,1,-3,6,-7,-9,-1,2,9,2,2,-2,-4,1,-3,-3,2,-10],[-3,8,-5,2,-9,-3,-10,-8,6,7,7,1,10,2,-7,4,9,2,1,3,8,-10,2,3,8,-7],[7,-4,9,7,-10,-6,5,6,-1,5,4,10,-3,-3,10,-5,-7,3,7,-2,3,6,7,3,1,-9],[-5,-1,1,-9,-4,-7,-5,7,-2,-7,-8,-6,-6,-2,9,2,-8,2,6,10,10,-9,2,7,4,1],[-8,6,8,-3,-7,10,-9,-7,-8,5,6,2,-9,-2,-4,6,1,-8,-7,-5,7,2,-10,2,-5,7],[-10,-1,-10,3,-7,-8,10,9,-8,-4,10,2,4,-1,1,-4,10,10,-8,6,4,6,-9,-3,-9,-3],[-2,2,-8,-9,-2,-10,8,-2,6,4,3,6,-6,10,-6,6,-9,6,-1,8,7,6,9,2,10,-7],[-7,-5,-2,10,-8,-7,-5,6,-9,-3,-2,2,9,-9,1,1,9,-10,-1,-10,-7,5,2,-1,-8,7],[-5,3,2,-4,10,-10,-9,1,-3,8,9,-5,9,-2,-10,6,10,1,1,-5,-9,9,5,10,10,9],[3,2,10,8,-5,-7,-4,-6,-4,-8,-6,-2,7,-1,10,-8,-4,7,-6,-5,-7,-5,3,-8,2,9],[-2,-1,3,-8,3,-7,8,-2,1,5,-2,-1,-2,1,4,4,-10,-5,-6,-5,-10,-6,10,-3,7,-9],[10,5,8,8,5,5,4,8,2,-10,10,1,6,-1,3,2,-1,-7,-3,10,-4,3,7,-9,7,-3],[7,-6,-9,-6,8,-8,-6,-7,-8,7,2,-2,-1,9,-2,4,-6,2,9,2,5,4,4,10,-8,6],[7,10,10,-8,2,10,4,7,-10,-1,-6,-8,-8,-4,7,8,-7,4,8,10,5,1,-3,-3,7,10],[10,-6,6,5,-8,-7,-1,-2,4,2,1,-1,2,-7,-9,-2,5,-7,6,4,5,10,-4,-7,-4,8]], dtype = "int32")#candidate|8096|(40, 26)|const|int32
call_8091 = relay.TupleGetItem(func_3637_call(relay.reshape(var_8092.astype('float32'), [1, 9, 8]), relay.reshape(const_8093.astype('float32'), [5, 4]), relay.reshape(const_8094.astype('float32'), [1, 60]), relay.reshape(var_8095.astype('float64'), [240,]), relay.reshape(const_8096.astype('int32'), [1040,]), ), 1)
call_8097 = relay.TupleGetItem(func_3643_call(relay.reshape(var_8092.astype('float32'), [1, 9, 8]), relay.reshape(const_8093.astype('float32'), [5, 4]), relay.reshape(const_8094.astype('float32'), [1, 60]), relay.reshape(var_8095.astype('float64'), [240,]), relay.reshape(const_8096.astype('int32'), [1040,]), ), 1)
func_2184_call = mod.get_global_var('func_2184')
func_2186_call = mutated_mod.get_global_var('func_2186')
var_8101 = relay.var("var_8101", dtype = "int8", shape = (135,))#candidate|8101|(135,)|var|int8
call_8100 = relay.TupleGetItem(func_2184_call(relay.reshape(var_8101.astype('int8'), [5, 3, 9])), 3)
call_8102 = relay.TupleGetItem(func_2186_call(relay.reshape(var_8101.astype('int8'), [5, 3, 9])), 3)
output = relay.Tuple([call_8089,call_8091,var_8092,const_8093,const_8094,var_8095,const_8096,call_8100,var_8101,])
output2 = relay.Tuple([call_8090,call_8097,var_8092,const_8093,const_8094,var_8095,const_8096,call_8102,var_8101,])
func_8118 = relay.Function([var_8092,var_8095,var_8101,], output)
mod['func_8118'] = func_8118
mod = relay.transform.InferType()(mod)
mutated_mod['func_8118'] = func_8118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8118_call = mutated_mod.get_global_var('func_8118')
var_8120 = relay.var("var_8120", dtype = "float32", shape = (72,))#candidate|8120|(72,)|var|float32
var_8121 = relay.var("var_8121", dtype = "float64", shape = (120, 2))#candidate|8121|(120, 2)|var|float64
var_8122 = relay.var("var_8122", dtype = "int8", shape = (135,))#candidate|8122|(135,)|var|int8
call_8119 = func_8118_call(var_8120,var_8121,var_8122,)
output = call_8119
func_8123 = relay.Function([var_8120,var_8121,var_8122,], output)
mutated_mod['func_8123'] = func_8123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7778_call = mod.get_global_var('func_7778')
func_7779_call = mutated_mod.get_global_var('func_7779')
call_8167 = relay.TupleGetItem(func_7778_call(), 0)
call_8168 = relay.TupleGetItem(func_7779_call(), 0)
func_2655_call = mod.get_global_var('func_2655')
func_2659_call = mutated_mod.get_global_var('func_2659')
var_8171 = relay.var("var_8171", dtype = "uint16", shape = (1408,))#candidate|8171|(1408,)|var|uint16
call_8170 = relay.TupleGetItem(func_2655_call(relay.reshape(var_8171.astype('uint16'), [8, 16, 11]), relay.reshape(var_8171.astype('uint16'), [8, 16, 11]), ), 2)
call_8172 = relay.TupleGetItem(func_2659_call(relay.reshape(var_8171.astype('uint16'), [8, 16, 11]), relay.reshape(var_8171.astype('uint16'), [8, 16, 11]), ), 2)
uop_8192 = relay.acos(call_8167.astype('float32')) # shape=(8, 4, 3)
uop_8194 = relay.acos(call_8168.astype('float32')) # shape=(8, 4, 3)
output = relay.Tuple([call_8170,var_8171,uop_8192,])
output2 = relay.Tuple([call_8172,var_8171,uop_8194,])
func_8198 = relay.Function([var_8171,], output)
mod['func_8198'] = func_8198
mod = relay.transform.InferType()(mod)
mutated_mod['func_8198'] = func_8198
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8199 = relay.var("var_8199", dtype = "uint16", shape = (1408,))#candidate|8199|(1408,)|var|uint16
func_8198_call = mutated_mod.get_global_var('func_8198')
call_8200 = func_8198_call(var_8199)
output = call_8200
func_8201 = relay.Function([var_8199], output)
mutated_mod['func_8201'] = func_8201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7778_call = mod.get_global_var('func_7778')
func_7779_call = mutated_mod.get_global_var('func_7779')
call_8287 = relay.TupleGetItem(func_7778_call(), 0)
call_8288 = relay.TupleGetItem(func_7779_call(), 0)
func_1701_call = mod.get_global_var('func_1701')
func_1706_call = mutated_mod.get_global_var('func_1706')
const_8300 = relay.const([-5,2,6,-7,1,-8,7,-1,-10,5,-2,-10,-9,2,-8,-4,8,10,3,-10,3,9,7,-10,1,-3,-6,5,7,-1,-8,6,3,2,5,10,-2,-8,1,8,-3,6,-5,-5,8,-5,-2,-4,9,1,-8,4,10,-8,1,-2,6,6,-6,-4,-6,3,-2,-3,1,-6,2,10,3,-10,4,9,-9,3,-5,-2,-6,8,-1,10,2,-2,8,-6,-10,5,10,7,-10,-7,-7,-5,3,10,4,-8,8,1,-2,6,5,7,9,5,4,4,2,-4,-5,-10,6,5,8,9,3,1,1,3,3,7,1,-9,-5,7,9,8,5,-1,-9,10,-10,-2,-10,8,5,1,9,9,2,3,-3,-1,4,1,4,7,-4,-4,-4,-10,-8,-2,-10,2,-9,7,7,2,2,7,7,-10,3,-7,-6,5,-7,-2,10,-1,8,2,-4,7,8,-1,-9,7,-7,-10,-5,-9,-4,9,7,-4,6,10,-10,7,10,4,3,3,10,-4,-8,7,-6,-7,-6,7,7,-3,4,-7,-10,-6,-6,2,2,-1,1,-6,6,-9,4,-6,3,10,-1,-4,9,3,-10,-3,3,5,-4,2,-4,-2,-8,1,-10,-1,-9,-2,-6,4,-2,-8,-3,-8,6,6,-10,10,1,-9,2,1,-6,10,10,8,2,-6,1,-1,5,-8,-10,-4,10,1,5,5,-5,-3,-10,-8,7,7,-1,6,10,10,2,2,-7,-8,-4,-4,-10,5,-8,-2,6,-2,2,2,1,1,-6,-9,-5,-7,-10,10,-8,9,8,10,3,-1,-9,6,-7,-7,-1,7,-3,-6,5,-2,9,-6,3,10,-9,10,6,-10,-4,-7,1,-10,6,7,2,-4,-1,7,-8,3,-10,5,-8,2,-2,-6,10,-7,-3,-10,6,-3,6,-2,-9,-2,-7,-8,4,8,6,8,1,6,10,7,2,2,4,-4,10,-3,-7,-5,-10,4,6,-3,7,-10,-7,-4,9,-9,-3,-5,3,1,10,8,8,5,5,-2,-9,-1,1,7,3,-4,-3,9,-8,3,-6,-7,4,-8,-4,-1,-5,1,-10,-8,8,-7,-1,-4,-5,-9,7,-5,10,10,-6,-8,7,-6,2,8,-6,-1,-1,7,4,-9,4,4,9,-9,-8,5,8,2,5,-10,-7,7,-7,-8,-10,4,2,9,1,-6,3,-4,-3,3,-6,-9,5,3,-10,-5,-9,-6,6,-2,-1,7,10,-9,10,10,-4,-1,5,-2,-6,-7,5,-5,1,1,-6,8,-2,2,8,7,3,8,1,-4,9,1,-7,7,4,9,-6,9,-5,-9,-2,-2,2,2,-2,-2,10,-6,-10,4,-1,-5,4,-7,2,2,10,-9,-6,8,7,-10,3,-3,-9,8,-2,10,-4,6,3,-10,-2,7,-9,-7,-7,3,-4,-7,-3,-4,-6,4,-9,6,6,7,4,-5,1,9,-10,-1,9,7,1,-9,-4,-6,3,7,9,-7,-7,6,-6,-7,-5,1,6,-6,-9,-5,9,-10,-5,-2,-2,-7,-3,9,8,-6,-6,-7,-6,1,-1,10,10,-2,6,1,-3,7,1,-3,-3,2,-7,2,-3,1,-1,-3,9,-8,-9,5,9,-6,-9,9,-2,-1,-1,4,-8,-9,-4,-2], dtype = "int32")#candidate|8300|(624,)|const|int32
var_8301 = relay.var("var_8301", dtype = "int8", shape = (117,))#candidate|8301|(117,)|var|int8
const_8302 = relay.const([[6.082130,3.353671,2.874264,5.661897,-4.234092,-9.591571,5.099851,6.806970,-7.658453,-7.438236],[-6.122514,-4.681544,-5.686104,-0.883745,-6.801388,-7.427855,3.164362,2.335687,3.800314,1.155109],[9.122879,-4.819853,-1.928168,-7.317799,7.376196,6.988315,0.349378,7.296478,2.058437,6.779005],[2.434807,-1.103342,5.921691,6.177928,-5.374488,-9.073513,-8.854662,2.336747,-3.477282,0.859962],[-3.095154,-9.971649,-6.847532,4.160974,9.664184,-1.275096,-3.510043,9.727167,-7.662935,-5.172912],[1.528480,-8.394686,-1.340134,-8.119342,-5.690401,-1.725755,-8.745375,-5.219223,4.471403,3.606389],[-2.885692,4.762940,-2.644328,-7.795825,0.362466,4.160387,0.511279,-2.661631,7.433085,1.062395],[-1.091571,-3.332756,-5.503182,-8.628832,2.986297,-6.247118,7.016705,-9.224721,-4.594860,-9.585850],[-7.021383,7.955343,0.615171,6.956933,-9.909923,-7.823494,-1.500045,-6.444385,-5.275139,-8.142278],[-1.876633,6.577965,-7.424032,9.024050,4.826787,-3.198194,2.210527,3.012938,6.769361,-9.557447],[1.929571,8.983063,2.473495,-4.807197,-0.751248,2.166042,8.923416,-5.782994,4.112816,0.610220],[9.908152,-3.156139,1.846873,8.277994,-5.227998,-6.559851,1.442931,5.681207,9.563489,-1.459265],[5.451812,-2.215685,-8.599774,-8.641300,-3.806275,-7.338798,-1.679997,4.450521,7.802049,-6.762913],[-9.927660,7.751411,-9.921553,-5.443626,7.992277,8.278066,6.000475,4.431406,-9.163160,3.439239],[8.675069,-9.804681,-5.715849,8.817244,6.015316,1.186775,2.894663,5.060583,8.684069,4.743565],[-4.174419,9.814303,3.825411,5.986745,2.987863,-5.824444,1.416127,-1.791910,-2.040006,9.141970],[5.645841,2.080124,8.128567,0.113455,9.292347,2.065768,5.991846,7.096481,-3.251471,7.356799],[8.441641,-2.276443,-7.260006,-4.272951,5.659775,-2.655760,-3.587897,3.402577,-6.704105,-4.190857],[8.025800,9.260230,8.549239,4.462194,-5.446610,7.745578,4.051335,-7.682111,-8.612796,-5.730123],[-1.861701,-7.611607,5.953411,-9.943761,-4.377709,0.289143,3.147218,7.176646,1.217718,-0.017761],[7.419239,5.890560,8.616545,-2.571715,-4.898119,9.423402,-3.289908,1.806699,8.413694,6.391296],[-2.663879,-7.807026,-5.023008,-9.312003,-1.185932,2.814127,-8.503568,-5.470765,-8.498124,3.206511],[-6.230388,0.740331,0.872557,-5.862073,-1.411236,-6.264749,-7.278952,-2.242370,-2.836537,-5.033853],[1.086418,-1.974561,-6.732333,-2.028999,-8.247344,6.558110,-2.412776,1.193574,3.516496,0.602287]], dtype = "float64")#candidate|8302|(24, 10)|const|float64
const_8303 = relay.const(-8.607488, dtype = "float64")#candidate|8303|()|const|float64
call_8299 = relay.TupleGetItem(func_1701_call(relay.reshape(const_8300.astype('int32'), [8, 13, 6]), relay.reshape(var_8301.astype('int8'), [117,]), relay.reshape(const_8302.astype('float64'), [240,]), relay.reshape(const_8303.astype('float64'), []), ), 7)
call_8304 = relay.TupleGetItem(func_1706_call(relay.reshape(const_8300.astype('int32'), [8, 13, 6]), relay.reshape(var_8301.astype('int8'), [117,]), relay.reshape(const_8302.astype('float64'), [240,]), relay.reshape(const_8303.astype('float64'), []), ), 7)
output = relay.Tuple([call_8287,call_8299,const_8300,var_8301,const_8302,const_8303,])
output2 = relay.Tuple([call_8288,call_8304,const_8300,var_8301,const_8302,const_8303,])
func_8314 = relay.Function([var_8301,], output)
mod['func_8314'] = func_8314
mod = relay.transform.InferType()(mod)
var_8315 = relay.var("var_8315", dtype = "int8", shape = (117,))#candidate|8315|(117,)|var|int8
output = func_8314(var_8315)
func_8316 = relay.Function([var_8315], output)
mutated_mod['func_8316'] = func_8316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8326 = relay.var("var_8326", dtype = "float64", shape = (13, 2, 12))#candidate|8326|(13, 2, 12)|var|float64
uop_8327 = relay.acos(var_8326.astype('float64')) # shape=(13, 2, 12)
output = uop_8327
output2 = uop_8327
func_8329 = relay.Function([var_8326,], output)
mod['func_8329'] = func_8329
mod = relay.transform.InferType()(mod)
var_8330 = relay.var("var_8330", dtype = "float64", shape = (13, 2, 12))#candidate|8330|(13, 2, 12)|var|float64
output = func_8329(var_8330)
func_8331 = relay.Function([var_8330], output)
mutated_mod['func_8331'] = func_8331
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8340 = relay.const([[[6,-6,-7,8,-8,-8,10,-10,-6,9,-6],[-2,2,3,4,1,-9,8,5,-3,-6,9],[-2,1,1,-2,2,-1,2,6,-1,7,4],[-5,3,4,-10,5,2,-10,7,10,-7,-6],[7,6,8,8,-9,1,-1,-1,-7,-3,-2],[2,4,-1,-4,-2,8,9,-1,6,-1,2],[-1,3,9,7,-8,1,10,4,8,7,6],[-3,-4,-7,-7,7,3,-6,-5,-4,-1,-4],[8,6,-6,3,10,8,-7,9,7,-10,5]],[[3,-8,-2,5,-1,-7,-10,-10,6,-10,-4],[-1,-9,-10,-9,6,6,2,-4,-7,9,-1],[-9,-3,-1,-3,-10,-9,-5,1,-3,-7,-2],[8,-7,10,-10,-6,-2,-6,-3,-7,3,3],[4,-1,10,5,-10,-7,-9,-2,10,8,8],[4,-2,6,6,5,-3,6,-8,-5,-5,5],[3,-2,7,2,3,9,-6,3,6,3,-4],[-3,1,9,4,1,3,-8,-1,-8,-6,-10],[-3,6,8,-7,8,5,9,5,-9,-9,-10]],[[-3,-7,5,-7,8,7,7,3,2,-3,-1],[2,-4,-4,3,1,-5,6,-2,7,1,5],[-3,-2,-10,-1,-9,-10,-4,-7,-8,-5,-7],[-5,4,-10,-7,-4,3,-5,-3,5,7,-7],[10,2,-2,-1,7,-9,-9,5,6,-8,7],[2,-10,-2,-4,10,2,-2,-8,-3,-10,-6],[-3,-8,-2,8,10,9,-8,-6,1,6,9],[-10,-10,2,7,-10,-2,-9,-5,-4,-6,-4],[8,-7,-10,-4,1,-6,9,3,-7,-8,1]],[[3,-4,-10,4,5,8,2,-4,-4,4,-6],[-9,1,-1,-7,8,-8,-1,-1,6,8,7],[-9,8,-6,5,-5,10,-4,-7,-3,3,7],[2,6,5,10,-5,5,-4,6,-2,6,1],[2,1,4,7,-5,-9,-6,6,-8,-7,-4],[1,-10,3,6,-6,-1,-6,-10,-6,1,-7],[-2,3,3,1,10,-9,9,-6,5,5,-2],[3,-3,8,-6,9,9,-10,-1,-2,-4,-1],[5,10,-1,10,-8,-5,1,3,10,9,-5]],[[2,9,6,6,-8,5,3,-7,-1,-5,5],[2,5,-1,1,-3,-3,8,-8,7,5,6],[-9,-10,-7,1,-3,10,-4,4,1,8,-10],[3,1,3,-3,-6,1,7,3,10,10,5],[2,-9,7,-7,4,-4,-2,-2,8,-7,6],[-7,-1,-6,-6,7,10,-1,5,-3,-7,-5],[6,4,-7,-2,-7,3,-3,-1,10,7,3],[-7,5,7,-7,-3,-2,-8,9,2,-7,4],[-6,1,2,-5,5,3,-10,-3,5,-3,-2]],[[5,-8,-7,-4,5,7,-5,3,6,-10,9],[9,10,-8,10,1,-3,-4,4,-5,-1,4],[-3,-6,6,-6,-9,-6,1,-9,6,-8,-8],[3,-4,10,1,1,-2,3,-6,-2,-5,3],[4,9,-3,3,1,3,4,-3,9,1,3],[-3,4,-6,-6,9,3,10,-4,7,-8,-3],[6,-7,1,10,3,-5,-9,-8,-9,2,4],[6,-6,-5,5,-7,5,-6,4,-2,-9,4],[5,-10,-10,6,8,-3,-7,9,8,3,-1]],[[-2,6,2,9,3,1,-10,-8,6,-8,-10],[-5,7,4,9,-8,10,2,-9,-1,7,-6],[2,3,9,7,6,-8,-7,2,10,4,-6],[-4,-7,7,-7,-1,8,9,3,9,-7,-4],[-1,-8,-10,3,-9,3,1,2,-7,-7,4],[4,-1,1,-2,-10,-3,6,-3,1,3,1],[-6,-2,-3,7,6,-9,4,4,-6,1,-5],[5,3,9,2,1,-3,2,-5,-7,10,-7],[5,2,-6,-1,9,6,-3,-9,-6,-4,5]],[[-7,5,-1,-10,-9,10,6,-6,6,4,7],[-8,2,-7,5,2,-4,5,-2,-4,8,4],[-9,-3,-4,-6,2,-9,9,1,-10,3,-10],[7,-3,-2,-6,-7,7,-9,-4,-3,-8,3],[8,1,-6,2,-5,7,10,9,8,-1,5],[-7,7,-7,4,-4,3,2,10,-7,-3,-2],[-8,10,-8,-10,-1,4,-10,-2,-1,7,-2],[3,-3,6,9,-8,1,-2,7,4,10,7],[-10,-4,-7,-5,10,-10,10,-8,6,-7,-1]],[[7,-2,9,10,-2,7,1,9,-3,-6,3],[-1,-7,4,-5,3,-5,3,-7,-10,-5,-6],[-2,-4,5,10,-8,-8,9,8,-9,5,6],[-9,-3,3,-7,8,-6,-6,2,1,-8,-4],[-5,10,7,-9,3,7,9,8,1,-5,6],[-9,7,10,-3,2,-1,1,8,-1,9,9],[-10,-4,-10,-9,2,7,-10,-7,-3,8,-1],[-10,-10,-10,-8,7,-5,-10,-3,3,7,-7],[9,1,-2,4,9,-4,4,7,4,-4,6]],[[6,-1,5,1,6,-7,-9,-5,4,-8,2],[-2,-6,5,-3,-3,10,-8,-1,-10,-8,-3],[6,2,3,-8,-2,8,-5,7,3,9,-4],[-2,-7,-4,-9,-3,-7,5,-3,-9,-5,2],[-9,10,-8,9,9,9,-4,-2,-9,8,-8],[-10,-7,-5,-7,2,5,-1,-4,-7,2,10],[8,-8,9,-7,-10,9,7,2,8,-1,8],[7,2,7,-1,-1,1,8,-5,6,-1,3],[-8,3,8,2,-3,2,-5,1,-5,5,-10]],[[-5,-7,2,-7,-7,1,4,1,7,-3,1],[-7,-3,5,-10,2,-1,10,6,-10,4,-2],[-1,2,-9,9,4,4,-8,-9,5,-4,8],[-2,3,9,3,6,4,-4,-5,-3,-8,-10],[8,-5,-9,-1,-4,3,-5,5,-4,2,8],[-9,6,2,2,10,-1,3,5,7,5,7],[4,7,-10,4,-2,1,-8,4,4,8,-9],[5,4,-5,4,10,3,-6,4,-1,4,8],[4,1,-6,-5,-1,10,4,6,-7,-6,2]]], dtype = "uint8")#candidate|8340|(11, 9, 11)|const|uint8
const_8341 = relay.const([[[7,-3,6,-2,-10,8,-9,-7,-10,-6,-4],[-2,10,7,10,-2,-1,-10,3,-3,6,4],[2,2,10,1,-2,-7,10,10,4,-6,9],[2,-9,4,-10,3,-2,6,-5,-8,-9,-9],[8,8,3,7,-10,-3,5,6,-6,7,-6],[-1,-9,9,-1,8,10,-1,2,3,6,2],[-3,-7,9,-10,9,7,-10,8,7,-3,4],[9,2,1,-10,-1,3,-6,4,-9,-7,10],[5,1,6,10,-9,-9,3,-1,2,7,-2]],[[8,-7,8,5,1,8,1,-7,-7,2,-7],[5,-9,2,4,9,9,-1,1,-6,6,-6],[1,10,8,-3,6,-3,-7,-10,-10,-3,4],[7,-9,-8,1,4,7,-10,-5,-10,-3,7],[-9,-2,-6,9,10,7,-10,-4,9,5,-1],[1,-9,8,-7,3,2,6,-10,-9,-2,10],[1,5,4,-6,-4,-1,-1,5,4,3,-3],[5,5,-4,10,8,-9,-9,-4,8,-5,1],[9,-3,5,-2,-6,-4,1,-5,5,10,8]],[[-9,-8,10,-9,1,-8,3,-2,-4,4,-9],[-7,5,10,7,9,-10,-2,-4,3,9,2],[5,-8,2,8,-8,6,8,-3,5,9,-10],[-8,-4,-10,4,-8,7,7,-10,3,-1,-1],[6,-2,-5,8,5,-10,9,-3,-5,10,-9],[-1,4,-6,4,4,1,-1,-8,-4,5,2],[-7,4,6,-3,-3,-3,-8,-3,-6,2,-4],[8,2,-5,-7,8,1,-5,6,-3,2,-9],[5,-5,-1,-2,10,7,1,8,8,-3,7]],[[-8,-6,3,7,10,-4,-4,-4,9,6,7],[-7,-7,-2,-6,8,4,-6,-4,9,-6,-1],[-7,9,-10,-4,-4,3,-8,10,3,-9,-2],[4,-10,9,7,10,-6,1,-6,4,-6,1],[-3,-7,1,-3,-4,8,-9,4,9,-9,-5],[-3,-5,-2,8,-4,-6,-7,-10,-1,-9,-8],[6,-4,6,-1,6,-3,-5,-2,10,-3,-9],[-5,-3,3,3,-10,-3,-7,-10,9,4,-8],[7,-3,-10,-3,-9,7,-3,3,10,-9,10]],[[2,-4,-7,-5,1,-9,-10,1,7,2,-1],[2,4,-7,-9,-9,-8,-3,3,-2,-1,7],[9,5,-7,7,5,-3,-5,2,-9,4,1],[-2,7,-9,4,-2,-3,6,5,9,5,6],[4,6,8,9,-9,-4,-5,-7,-10,-10,5],[4,-1,7,-8,-10,3,-4,-5,-10,5,3],[8,7,-8,-10,4,4,-10,-3,-5,1,-8],[9,-9,8,-3,-2,-10,1,-7,-2,7,-8],[8,-7,4,-3,2,-6,10,-3,-2,6,-5]],[[1,-7,2,-8,3,2,10,-8,10,2,-1],[7,-5,-10,-2,-7,-6,3,-10,-10,10,-3],[-2,1,10,-6,-8,-4,4,6,-8,9,9],[6,7,-10,-2,5,-7,5,-4,8,-6,6],[8,-7,7,4,8,-5,8,1,-10,3,5],[-7,-9,-10,9,6,-2,-8,9,-6,2,3],[7,-1,8,-6,-1,1,-8,-4,1,-6,3],[1,-4,10,-8,-7,4,-2,1,7,-1,-2],[3,5,8,-6,-5,-4,4,8,-6,7,-2]],[[-2,8,-7,-2,-7,-6,7,-6,-6,10,4],[5,-7,7,-9,-2,-4,-4,9,-9,-9,9],[-1,-10,7,-1,7,-3,7,8,-2,8,-3],[8,-8,-8,-4,-4,-3,-5,8,3,2,-10],[9,4,2,-9,6,-9,-6,3,8,-8,4],[3,-9,-7,-6,9,-7,-9,7,-6,-7,9],[-3,-7,10,2,-9,5,-5,9,9,9,1],[7,-7,-2,7,10,-4,9,-2,-7,9,-7],[4,6,-3,1,2,-3,8,-3,-9,-5,10]],[[6,-6,-1,4,-9,-5,4,-1,-6,-3,-2],[-6,-8,-8,7,-6,9,5,8,1,10,4],[6,2,-8,2,-8,5,-3,-8,2,-5,-7],[-5,2,2,-2,9,-2,1,-6,10,-1,-9],[-9,-7,10,-5,2,1,4,5,2,3,3],[-5,-6,2,-9,2,-9,-10,10,-7,5,-4],[3,-4,-3,10,2,-4,10,6,10,-9,6],[9,7,6,-6,-9,-10,-8,2,9,-5,4],[3,-7,5,-2,-7,7,-7,-4,-1,-5,-7]],[[-4,-1,7,-7,1,9,3,-4,-7,5,3],[-4,6,1,10,4,-9,8,1,6,-7,2],[1,4,6,-1,-1,7,4,-3,-6,-8,-2],[-2,2,-8,3,9,-3,3,2,8,10,-5],[3,-9,-4,5,-1,-10,-5,4,-6,5,7],[9,-1,-5,4,7,7,-6,1,7,-8,-9],[-5,4,-7,3,4,-3,10,-8,-9,2,1],[7,9,3,2,2,-4,-1,3,5,5,-6],[6,-1,-1,1,1,1,3,-7,8,2,-4]],[[-3,6,-6,-5,-8,-8,-6,-4,-8,-6,-2],[7,-3,9,-6,-10,-1,4,7,-2,10,6],[9,-4,4,8,-10,7,9,-3,-8,2,7],[-9,-7,1,-10,-5,8,8,3,8,-10,-1],[1,-3,-4,2,-1,6,-1,7,-6,2,4],[-6,5,-2,-10,-3,-4,-4,1,10,7,2],[-4,1,3,-6,5,-4,9,-5,-7,-2,7],[9,-9,4,6,-6,-6,4,2,4,3,8],[-4,-1,-3,1,-8,-2,9,5,-1,-8,7]],[[4,-2,-7,-8,7,7,-2,2,4,4,-8],[-9,10,5,-7,-2,4,-1,8,-5,9,6],[6,-5,-7,6,3,10,7,1,-10,5,6],[-4,-5,-3,2,-8,-7,-9,-1,2,2,7],[-9,-3,3,2,4,-6,-6,-5,-6,9,5],[10,2,-2,-7,-4,-9,-7,5,-2,7,9],[-6,-2,-9,-8,8,4,1,6,7,4,7],[10,1,2,-9,1,-9,-8,3,-3,-3,3],[-5,1,9,9,7,9,-1,-5,-5,-8,9]]], dtype = "uint8")#candidate|8341|(11, 9, 11)|const|uint8
bop_8342 = relay.bitwise_and(const_8340.astype('uint8'), relay.reshape(const_8341.astype('uint8'), relay.shape_of(const_8340))) # shape=(11, 9, 11)
output = bop_8342
output2 = bop_8342
func_8353 = relay.Function([], output)
mod['func_8353'] = func_8353
mod = relay.transform.InferType()(mod)
mutated_mod['func_8353'] = func_8353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8353_call = mutated_mod.get_global_var('func_8353')
call_8354 = func_8353_call()
output = call_8354
func_8355 = relay.Function([], output)
mutated_mod['func_8355'] = func_8355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7399_call = mod.get_global_var('func_7399')
func_7400_call = mutated_mod.get_global_var('func_7400')
call_8363 = func_7399_call()
call_8364 = func_7399_call()
output = call_8363
output2 = call_8364
func_8375 = relay.Function([], output)
mod['func_8375'] = func_8375
mod = relay.transform.InferType()(mod)
mutated_mod['func_8375'] = func_8375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8375_call = mutated_mod.get_global_var('func_8375')
call_8376 = func_8375_call()
output = call_8376
func_8377 = relay.Function([], output)
mutated_mod['func_8377'] = func_8377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8353_call = mod.get_global_var('func_8353')
func_8355_call = mutated_mod.get_global_var('func_8355')
call_8381 = func_8353_call()
call_8382 = func_8353_call()
output = relay.Tuple([call_8381,])
output2 = relay.Tuple([call_8382,])
func_8386 = relay.Function([], output)
mod['func_8386'] = func_8386
mod = relay.transform.InferType()(mod)
output = func_8386()
func_8387 = relay.Function([], output)
mutated_mod['func_8387'] = func_8387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8375_call = mod.get_global_var('func_8375')
func_8377_call = mutated_mod.get_global_var('func_8377')
call_8395 = func_8375_call()
call_8396 = func_8375_call()
const_8404 = relay.const([[[7,-1,5],[5,8,10],[-6,-9,5],[5,1,5]],[[-10,-7,-10],[-8,1,6],[-1,-1,-10],[10,-2,-5]],[[8,-2,-5],[-10,-9,-2],[7,10,1],[6,-4,4]],[[10,1,4],[8,5,2],[6,-5,-10],[6,10,9]],[[-3,-5,2],[2,-5,1],[-9,3,8],[6,-9,8]],[[9,-1,3],[10,5,-2],[7,8,-7],[1,-9,-1]],[[-2,-10,7],[2,-6,-7],[-1,3,-6],[-2,1,5]],[[10,-7,2],[5,-5,5],[-4,10,-10],[-9,5,6]]], dtype = "int64")#candidate|8404|(8, 4, 3)|const|int64
bop_8405 = relay.greater(call_8395.astype('bool'), relay.reshape(const_8404.astype('bool'), relay.shape_of(call_8395))) # shape=(8, 4, 3)
bop_8408 = relay.greater(call_8396.astype('bool'), relay.reshape(const_8404.astype('bool'), relay.shape_of(call_8396))) # shape=(8, 4, 3)
func_8329_call = mod.get_global_var('func_8329')
func_8331_call = mutated_mod.get_global_var('func_8331')
var_8410 = relay.var("var_8410", dtype = "float64", shape = (312,))#candidate|8410|(312,)|var|float64
call_8409 = func_8329_call(relay.reshape(var_8410.astype('float64'), [13, 2, 12]))
call_8411 = func_8329_call(relay.reshape(var_8410.astype('float64'), [13, 2, 12]))
func_7484_call = mod.get_global_var('func_7484')
func_7486_call = mutated_mod.get_global_var('func_7486')
call_8427 = func_7484_call()
call_8428 = func_7484_call()
output = relay.Tuple([bop_8405,call_8409,var_8410,call_8427,])
output2 = relay.Tuple([bop_8408,call_8411,var_8410,call_8428,])
func_8430 = relay.Function([var_8410,], output)
mod['func_8430'] = func_8430
mod = relay.transform.InferType()(mod)
var_8431 = relay.var("var_8431", dtype = "float64", shape = (312,))#candidate|8431|(312,)|var|float64
output = func_8430(var_8431)
func_8432 = relay.Function([var_8431], output)
mutated_mod['func_8432'] = func_8432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8452 = relay.var("var_8452", dtype = "float64", shape = ())#candidate|8452|()|var|float64
var_8453 = relay.var("var_8453", dtype = "float64", shape = (9, 13, 5))#candidate|8453|(9, 13, 5)|var|float64
bop_8454 = relay.power(var_8452.astype('float64'), var_8453.astype('float64')) # shape=(9, 13, 5)
output = relay.Tuple([bop_8454,])
output2 = relay.Tuple([bop_8454,])
func_8463 = relay.Function([var_8452,var_8453,], output)
mod['func_8463'] = func_8463
mod = relay.transform.InferType()(mod)
mutated_mod['func_8463'] = func_8463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8463_call = mutated_mod.get_global_var('func_8463')
var_8465 = relay.var("var_8465", dtype = "float64", shape = ())#candidate|8465|()|var|float64
var_8466 = relay.var("var_8466", dtype = "float64", shape = (9, 13, 5))#candidate|8466|(9, 13, 5)|var|float64
call_8464 = func_8463_call(var_8465,var_8466,)
output = call_8464
func_8467 = relay.Function([var_8465,var_8466,], output)
mutated_mod['func_8467'] = func_8467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_8481 = relay.TupleGetItem(func_7211_call(), 0)
call_8482 = relay.TupleGetItem(func_7213_call(), 0)
var_8496 = relay.var("var_8496", dtype = "int64", shape = (8, 4, 3))#candidate|8496|(8, 4, 3)|var|int64
bop_8497 = relay.logical_and(call_8481.astype('bool'), relay.reshape(var_8496.astype('bool'), relay.shape_of(call_8481))) # shape=(8, 4, 3)
bop_8500 = relay.logical_and(call_8482.astype('bool'), relay.reshape(var_8496.astype('bool'), relay.shape_of(call_8482))) # shape=(8, 4, 3)
bop_8523 = relay.add(bop_8497.astype('int64'), relay.reshape(call_8481.astype('int64'), relay.shape_of(bop_8497))) # shape=(8, 4, 3)
bop_8526 = relay.add(bop_8500.astype('int64'), relay.reshape(call_8482.astype('int64'), relay.shape_of(bop_8500))) # shape=(8, 4, 3)
output = relay.Tuple([bop_8523,])
output2 = relay.Tuple([bop_8526,])
func_8536 = relay.Function([var_8496,], output)
mod['func_8536'] = func_8536
mod = relay.transform.InferType()(mod)
mutated_mod['func_8536'] = func_8536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8537 = relay.var("var_8537", dtype = "int64", shape = (8, 4, 3))#candidate|8537|(8, 4, 3)|var|int64
func_8536_call = mutated_mod.get_global_var('func_8536')
call_8538 = func_8536_call(var_8537)
output = call_8538
func_8539 = relay.Function([var_8537], output)
mutated_mod['func_8539'] = func_8539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8386_call = mod.get_global_var('func_8386')
func_8387_call = mutated_mod.get_global_var('func_8387')
call_8591 = relay.TupleGetItem(func_8386_call(), 0)
call_8592 = relay.TupleGetItem(func_8387_call(), 0)
func_5443_call = mod.get_global_var('func_5443')
func_5446_call = mutated_mod.get_global_var('func_5446')
var_8602 = relay.var("var_8602", dtype = "float32", shape = (144,))#candidate|8602|(144,)|var|float32
call_8601 = relay.TupleGetItem(func_5443_call(relay.reshape(var_8602.astype('float32'), [4, 6, 6])), 0)
call_8603 = relay.TupleGetItem(func_5446_call(relay.reshape(var_8602.astype('float32'), [4, 6, 6])), 0)
output = relay.Tuple([call_8591,call_8601,var_8602,])
output2 = relay.Tuple([call_8592,call_8603,var_8602,])
func_8604 = relay.Function([var_8602,], output)
mod['func_8604'] = func_8604
mod = relay.transform.InferType()(mod)
var_8605 = relay.var("var_8605", dtype = "float32", shape = (144,))#candidate|8605|(144,)|var|float32
output = func_8604(var_8605)
func_8606 = relay.Function([var_8605], output)
mutated_mod['func_8606'] = func_8606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7484_call = mod.get_global_var('func_7484')
func_7486_call = mutated_mod.get_global_var('func_7486')
call_8649 = func_7484_call()
call_8650 = func_7484_call()
output = call_8649
output2 = call_8650
func_8651 = relay.Function([], output)
mod['func_8651'] = func_8651
mod = relay.transform.InferType()(mod)
output = func_8651()
func_8652 = relay.Function([], output)
mutated_mod['func_8652'] = func_8652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7399_call = mod.get_global_var('func_7399')
func_7400_call = mutated_mod.get_global_var('func_7400')
call_8686 = func_7399_call()
call_8687 = func_7399_call()
output = call_8686
output2 = call_8687
func_8693 = relay.Function([], output)
mod['func_8693'] = func_8693
mod = relay.transform.InferType()(mod)
mutated_mod['func_8693'] = func_8693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8693_call = mutated_mod.get_global_var('func_8693')
call_8694 = func_8693_call()
output = call_8694
func_8695 = relay.Function([], output)
mutated_mod['func_8695'] = func_8695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8745 = relay.var("var_8745", dtype = "uint32", shape = (2, 4, 15))#candidate|8745|(2, 4, 15)|var|uint32
var_8746 = relay.var("var_8746", dtype = "uint32", shape = (2, 4, 15))#candidate|8746|(2, 4, 15)|var|uint32
bop_8747 = relay.logical_xor(var_8745.astype('uint32'), relay.reshape(var_8746.astype('uint32'), relay.shape_of(var_8745))) # shape=(2, 4, 15)
func_832_call = mod.get_global_var('func_832')
func_839_call = mutated_mod.get_global_var('func_839')
const_8751 = relay.const([[-8,-9,3,-6,6,9,-8,-9,-1],[-5,-6,9,-6,5,-8,8,-7,10],[3,-1,2,7,2,6,9,-10,10],[10,-6,3,10,-1,10,-9,7,-2],[-9,6,-4,-5,-6,9,-4,3,-2],[3,-10,10,-6,-3,-8,2,5,-9],[2,2,-8,-7,-8,10,9,-3,-8],[8,-4,6,7,1,6,1,-3,10],[-1,-2,9,8,-7,-8,-6,8,-9],[-3,-2,10,-6,8,1,-1,-6,1],[8,3,2,10,-10,-9,-5,-7,1],[-9,-6,6,-6,2,-3,7,-2,-7],[-4,4,7,2,10,-3,7,-7,10]], dtype = "int8")#candidate|8751|(13, 9)|const|int8
const_8752 = relay.const([[9.461694,6.093383,0.518032,-8.954524,6.863325,-0.034049,0.590916,6.282597,3.893025,-1.014155],[-6.096889,6.523751,-4.756925,8.797838,3.362231,9.544847,0.552614,-6.711109,2.277876,5.546649],[6.630905,0.769611,1.967908,5.891620,3.027843,-2.122748,5.708261,-8.105031,-1.762424,0.626180],[4.207938,2.996720,7.614834,2.125514,-2.864920,5.570971,-8.098941,-6.125609,5.461585,9.112248],[1.502942,-1.478525,5.387264,-3.115439,-4.915619,3.833118,-0.494565,0.213111,-2.473780,2.855063],[6.999203,-7.070996,1.356031,-9.200889,-3.016980,6.362737,0.690017,9.389863,4.335148,6.794200],[4.687147,1.107095,1.063379,1.898377,1.466689,-8.226557,4.307927,-7.431135,5.710096,2.931341],[-4.456196,8.618391,-7.275720,-9.487177,-7.243865,-0.675680,-2.904839,5.109629,-4.194328,9.940089],[7.513995,-4.811544,-9.911874,-3.664248,7.529589,-1.547314,-9.284989,-5.608695,-4.675106,-6.869091],[-6.359189,-6.010946,-9.658822,-3.466573,-5.408809,-9.240095,3.560379,-8.089440,-6.372515,3.961939],[-3.768205,2.157532,7.635753,3.286560,1.524031,-3.141803,-6.539902,-8.253882,-6.015481,6.373521],[6.971798,2.459606,1.311465,-3.145290,-1.259192,3.186284,5.102447,3.473417,-6.720166,-4.385965],[8.442499,3.948628,6.604294,-3.740607,-9.156438,-1.616709,-6.869748,-6.837539,6.610592,6.667524],[-3.756479,-7.241693,1.937932,-1.028832,7.545869,9.412896,0.459906,-9.823553,8.279320,2.552162],[3.020296,6.974215,4.716099,9.798026,-6.753816,-4.534049,8.141795,5.419362,-6.025626,9.547640],[-3.078255,-3.488902,4.666427,6.083944,-4.009475,8.333972,-4.359239,8.096356,-5.099346,6.396862],[3.174572,-6.091759,-1.347646,8.074128,2.135152,-1.354938,-7.956071,-8.594918,-4.563878,-7.730259],[-7.450687,-0.293548,-8.052820,-6.242452,-3.717177,4.060144,8.198537,-9.341391,3.678938,-4.059254],[-6.168059,6.130693,-2.954454,6.433416,3.188046,6.834910,7.573787,-3.863721,8.808812,-9.076928],[-6.940569,8.158504,1.534289,-7.455580,7.939523,-6.751909,4.955536,-5.347784,0.237135,-8.040367],[5.869618,-3.946299,9.654229,-0.576124,6.371627,-1.455494,1.426316,4.082359,-0.563195,2.025341],[-7.986304,9.758516,9.954516,9.796194,1.098359,8.976273,6.817245,7.918035,5.241297,2.002546],[7.737073,-6.478728,0.824860,2.905856,7.258029,-9.289194,-4.557031,-8.315645,2.724706,-1.071821],[8.587905,-7.883380,2.970593,-8.262111,2.922783,9.552203,3.685866,3.302979,6.864372,-7.007226]], dtype = "float64")#candidate|8752|(24, 10)|const|float64
var_8753 = relay.var("var_8753", dtype = "float64", shape = ())#candidate|8753|()|var|float64
call_8750 = relay.TupleGetItem(func_832_call(relay.reshape(const_8751.astype('int8'), [13, 3, 3]), relay.reshape(const_8751.astype('int8'), [13, 3, 3]), relay.reshape(const_8752.astype('float64'), [240,]), relay.reshape(var_8753.astype('float64'), []), relay.reshape(const_8752.astype('float64'), [10, 6, 4]), ), 2)
call_8754 = relay.TupleGetItem(func_839_call(relay.reshape(const_8751.astype('int8'), [13, 3, 3]), relay.reshape(const_8751.astype('int8'), [13, 3, 3]), relay.reshape(const_8752.astype('float64'), [240,]), relay.reshape(var_8753.astype('float64'), []), relay.reshape(const_8752.astype('float64'), [10, 6, 4]), ), 2)
func_7682_call = mod.get_global_var('func_7682')
func_7685_call = mutated_mod.get_global_var('func_7685')
const_8756 = relay.const([-9.392229,-6.321016,2.521928,-8.163214,-3.166209,-9.485580,3.213369,-2.470453,3.441930,-6.703364,-0.570365,-6.614339,-7.657157,3.775335,-5.310902,4.728686,-3.010355,0.262085,-6.484131,-1.745471,-3.669821,-4.149788,3.749997,8.588502,3.851200,0.531589,6.864673,1.476049,7.740778,-2.674874,9.080698,-4.071840,7.838100,5.725985,-1.925021,-6.940818,-3.335208,-5.209380,5.419330,-6.482145,2.760587,-7.331296,1.888827,-2.736538,9.082737,8.995340,6.745241,-3.519703,9.608900,-0.545941,1.668433,-6.701815,2.098080,1.829935,5.328151,-2.489845,2.321935,5.761790,-4.735529,-2.715545,-9.691261,-7.762407,8.858325,-5.572574,-4.085321,-0.401597,8.802478,1.519853,7.365310,-7.653388,0.784852,4.445559,2.599006,9.258872,5.307057,6.742258,4.195634,7.077613,-3.980543,-4.898885,-0.285831,7.073453,3.134550,-8.006274,9.623689,8.515975,6.750085,-0.657877,-2.235656,-2.596874,7.162032,9.935999,2.553358,6.870358,2.238253,-5.943244,0.213755,9.154429,4.842511,2.360294,-1.299090,9.402837,-0.654446,8.161505,1.051651,-1.532146,5.424097,-1.004983,-1.317864,1.300898,2.197402,1.777034,9.104643,4.868137,-6.554142,3.987913,-4.910900,8.004601,-3.417527,4.782550,-9.598534,-7.153132,5.198500,9.971603,5.413205,6.672139,-1.953940,3.674970,-4.640994,-8.220803,0.550643,1.040535,-2.579635,-5.930756,9.819646,2.549134,6.248589,-6.094169,-6.026803,-4.363499,-1.712853,-1.712129,-6.967756,-7.926942,-6.492000,-7.340118,-0.157165,5.298187,-9.404270,-8.388576,7.670792,1.006655,1.993381,-9.409696,7.506921,9.002702,-7.273817,7.145752,2.937568,8.313873,-5.635371,-6.572669,-4.178974,-8.443731,5.625659,-3.978798,-6.387831,-0.764149,1.844914,7.494062,8.351593,-5.023960,-2.397155,1.189334,3.419585,1.891578,-5.894101,9.736230,-4.492472,7.138727,-5.993839,-8.796671,3.886066,-2.648843,6.384282,-4.243963,7.319307,8.865904,-5.160179,9.417636,7.127115,7.592348,-0.193311,-5.483095,-8.372706,1.908762,-2.984277,4.869964,-4.525278,-5.343113,5.590110,-7.741245,-1.715411,-0.515904,-9.785815,-5.236243,4.338562,2.875442,-2.758860,-8.549789,5.954860,0.709093,3.140218,-5.050354,6.884806,-3.213418,0.547515,3.264900,-0.802349,-3.598665,5.535244,-2.069313,-3.656844,2.944981,-4.440516,-9.889739,8.219691,6.671444,-3.915857,-2.207840,-5.226382,1.999983,4.570150,2.062554,-4.979978,5.976284,5.731210,-9.081098,0.428000,-0.681920,4.166823,-3.959143,4.884000,-2.109936,0.183540,7.860966,8.956581,9.650296,6.726250,-7.311567,-6.342254,0.873102,9.788290,2.539444,4.394746,-2.361559,-0.182827,7.227716,-7.019317,-0.810622,-8.291361,-7.231382,-6.263886,8.840032,-1.508712,7.460524,9.285370,-6.019023,4.121727,0.902657,-5.160831,4.508548,-3.049569,-9.655056,-3.094457,-8.901752,-7.071459,-1.522609,-4.105285,-7.210085,0.421780,0.380879,-2.583273,-1.552883,-0.320034,9.719972,6.671006,3.719046,3.580696,5.446300,-9.039877,2.440008,-9.699557,9.076205,4.209733,7.076203,-3.386991,6.227765,2.962854,-3.832731,1.153984,-8.097497,-8.674377,1.584845,0.116352,-0.067221,-2.323978,-2.505666,6.558902,-8.555361,0.080528,-3.893148,-7.122017,-8.323271,4.135540,9.581028,-3.219333,2.070320,-7.921462,3.330683,2.370098,4.778150,1.494692,-8.193258,-2.892131,0.775823,0.539173,5.698207,9.277171,5.284466,-8.901998,0.999707,-3.492340,7.617229,1.598726,-0.079122,-6.133744,1.659762,0.661624,2.415462,-5.971371,3.056192,-4.358617,3.852342,-6.599155,-9.905832,-4.569658,-9.968340,-8.638608,1.008734,-9.706246,6.637194,3.848798,-5.162945,-5.083921,-6.559382,-4.979439,-1.292727,-3.050664,-9.909143,-7.136621,7.146003,-5.788342,3.274987,-7.710361,0.392774,-5.305128,7.196069,5.197608,-5.542998,5.057762,-3.488937,-1.578291,-5.373046,-0.865993,-3.364397,5.687670,1.504295,2.315608,9.333834,9.518710,-0.750136,5.329995,-8.993771,8.998522,-0.230993,4.946220,-5.814363,-8.121190,6.216021,3.766136,4.036708,3.374344,-9.529697,-1.739175,-4.933391,-9.292055,6.547006,3.124696,-6.518177,0.925470,9.926958,9.667017,-6.674908,7.988412,7.317540,1.309673,1.708471,3.763512,6.172596,0.840313,-1.964465,-6.052787,8.260758,4.037865,-7.191262,0.803781,3.500099,5.848253,-9.172068,4.412807,8.820472,-5.815404,-5.398874,2.867473,4.485920,7.426611,-0.420086,-1.433348,7.558822,-3.197727,-5.232803,-6.354819,-1.454992,2.452868,-8.382525,-0.518142,-6.798805,-3.671914,3.515859,-2.165566,8.771140,-6.626609,-2.550686,7.691535,-7.362707,1.336348,6.642307,-9.062338,-7.918918,-2.040108,0.461845,-0.287013,-4.200785,-6.543317,-3.854316,-4.962861,-9.972190,-0.045600,0.622489,6.002853,2.028316,-4.533154,-9.651137,-2.835021,4.606111,8.101527,-8.254164,-3.987837,-7.349853,-2.662568,1.622001,-4.683898,4.103242,-8.936387,1.387476,-9.558020,7.689550,1.260437,0.906516,-5.572724,5.834336,3.717909,8.071445,-6.354631,-2.646482,3.909713,7.475213,-2.618533,-9.743455,-6.618039,-9.750527,-8.407847,0.420630,8.240195,1.755665,4.662687,4.277554,-8.404763,-3.951236,-3.028069,1.411800,2.666052,-4.300684,8.460279,-5.409219,-6.171018,-2.636688,-8.279400,-7.352281,0.543534,0.779992,-4.164465,9.467622,-0.391628,1.947882,2.057663,-1.450890,-6.689096,-1.238133,6.360276,8.279409,5.980148,-2.639963,3.635466,0.197642,-2.308434,-4.025968,4.420538,-3.321554,0.891804,-8.214525,-0.938265,4.663261,7.344144,5.235288,7.476945,-9.011844,-9.953391,-2.533413,-6.795668,-0.512581,2.031618,4.012740,1.773763,-0.523504,-4.679493,6.715211,3.804732,3.754803,-8.849498,0.935032,8.857457,-3.245910,-2.707952,9.647734,-3.443120,2.793792,-8.662679,-8.183293,-2.661555,5.607090,0.761607,-9.878039,4.234521,-6.597352,-6.690280,2.222011,9.943233,7.131982,0.841006,-4.798614,7.406354,7.997492,3.335251,8.094556,-7.736041,-8.494586,1.355229,-2.418761,-0.798164,-4.058876,-4.704887,-8.416680,7.051651,2.344825,-0.819922,-2.663216,8.261266,-8.788786,4.068604,0.300118,-9.865519,0.067890,-0.033875,-0.666614,-2.624614,1.791915,4.678971,7.899362,5.181442,5.920906,-2.195821,7.878490,7.754829,-4.188345,2.954423,-8.122992,5.440158,6.721270,9.029197,-6.287145,-2.046670,-8.975902,2.123759,-9.370360,-3.426571,0.229307,5.151219,-6.084050,-5.265458,4.220274,-6.620285,6.421018,-2.452754,9.880037,-3.449346,5.279549,5.001760,-2.979573,5.124456,-8.228667,-4.101559,1.033501,-2.772760,-2.272048,-1.061649,5.197345,2.112056,6.780470,2.087369,7.382160,-0.232449,0.442660,-8.307101,1.442672,-1.006370,5.771044,7.170114,4.726263,7.704373,-8.209685,7.936341,-2.671562,-0.259751,-1.241266,7.896635,3.681988,9.378069,4.094942,8.717807,9.575472,-8.480260,-6.511592,6.932355,-9.621319,-7.864321,8.476501,-2.607762,-4.432396,7.481928,-6.224148,9.890029,-8.716536,-8.328604,-5.916743,-1.673693,-3.643598,7.244738,-5.494887,-4.596164,9.070126,0.484886,-8.985742,-2.311689,-4.405621,-2.488095,-6.137812,4.655790,-3.854758,8.663289,3.155152,-2.435806,-1.845467,-5.660982,0.363244,1.829601,9.942287,8.252297,-2.266221,9.777785,8.107423,-0.296438,2.185872,-1.403678,1.258540,-3.116712,-5.942179,-9.891290,-1.787962,1.757378,1.071229,-1.274223,-3.011083,7.306189,-9.647548,1.296966,-0.708037,1.271566,0.690155,8.961629,9.728191,3.622475,-1.210625,9.536966,0.658139,-3.546998,3.081645,3.100398,-1.644607,2.197330,9.069182,-5.146213,-1.606261,6.244628,-4.616370,-5.885199,4.013543,5.971888,-9.795358,-9.089991,7.909395,-6.896099,-3.266928,-6.519321,-1.326384,3.618902,1.658062,6.168488,8.388563,6.339594,1.666971,-4.345641,-0.077025,1.226926,-2.441463,-6.033351,-7.638501,-8.692850,-5.306546,-9.509735,-8.876169,0.417458,6.891810,1.568762,7.939684,-2.583724,4.169767,2.265942,-8.659147,-9.415673,6.510595,3.633764,1.597817,-5.922002,-4.564839,3.976813,-6.586868,-5.707849,9.141037,-8.946786,6.734176,-5.718352,4.980473,-5.304182,-9.568295,-3.682316,4.588690,0.767789,-1.688132,-5.504994,-0.639852,7.934094,-3.238811,3.817604,-8.734357,3.753351,-1.592112,-9.896956,1.037672,-8.199275,8.345222,6.008740,-2.381127,2.829733,-6.551585,8.893790,1.184882,2.866247,9.236567,-2.892182,4.738553,7.489010,8.883601,8.347323,-1.104149,-3.547852,1.298390,-0.182719,-5.399635,-9.929663,7.801041,-4.514666,-2.791666,3.052967,-1.882311,7.901693,7.050412,8.129922,-6.738550,5.378895,-6.652449,-1.242201,-5.100826,5.552344,6.893494,5.509439,-0.832636,2.836719,-3.238769,-4.524868,-3.056777,-6.456367,-0.170998,-6.858142,-2.461927,1.859085,4.952671,-8.475126,-6.058245,9.133435,9.343867,-0.119591,-6.176592,5.289103,-9.837658,7.859764,2.364874,-4.343117,7.367869,8.756946,6.352178,1.673818,-3.838516,-0.086873,9.487409,-4.514412,-3.928012,-0.829243,0.898139,4.866131,9.239552,-8.342937,-1.410132,-3.964310,-9.701195,-2.631765,-5.488372,-7.974571,1.428264,6.012892,-7.936429,-6.056170,4.225970,2.711446,-4.713648,-8.372741,0.889567,-9.579133,-6.430660,-2.003507,-2.754311,-6.935951,-6.833025,-6.698982,4.546716,-8.090206,3.106195,-4.784954,-1.700162,4.467697,8.247275,-9.363227,7.665172,-7.616166,-5.536575,-8.831836,1.057543,4.269056,7.256291,-7.643267,-7.985080,7.870435,3.147962,-7.895056,9.830451,-6.281790,3.706999,-1.286039,0.789292,-1.320357,0.985349,7.120317,8.707856,-8.491568,-6.177313,1.586974,6.871049,-9.933213,4.362644,-2.020467,2.149075,6.301380,-8.510474,4.963671,-5.595224,4.864385,-2.356488,0.952377,4.016187,-1.070475,-8.955094,-3.913385,-2.034388,-1.703776,4.477233,7.656855,1.166821,-9.916952,-0.396632,1.203759,7.414712,-6.912897,3.605905,-8.382304,7.987741,-0.582567,-1.764465,9.602359,-7.527942,-5.371866,0.474983,-6.094560,-5.405695,-9.822458,-1.100995,-5.671259,-4.664046,9.379748,-2.818300,-9.171642,-7.010630,1.874323,-8.944190,-2.448304,-5.387325,-1.446948,-4.867519,-6.502613,2.295174,5.825786,-8.387676,-5.385609,-9.508169,5.971636,6.905083,-4.965652,-0.432772,-0.964465,-2.111439,4.773213,-3.388199,-3.946156,-9.033157,6.020455,0.432757,9.914808,-9.708400,-5.142747,2.736058,2.640059,-4.458806,5.307971,4.581854,2.752994,-6.986783,-6.794783,-9.079885,3.005230,3.375318,3.737333,9.837304,9.362515,-2.276315,-7.408703,0.792375,-3.518827,8.673625,-2.833295,7.427979,-4.689817,2.952819,-8.720420,-3.243126,-3.111915,8.530668,-5.476791,5.004189,-7.431318,-4.449029,2.869430,1.354865,9.460022,3.465472,7.022686,0.655408,-5.514802,5.040174,-1.466640,-0.209553,8.597165,-3.215620,-0.767536,5.770182,2.641544,9.827861,1.045416,-5.975306,6.923915,7.491011,1.833103,3.633292,2.899181,-5.143617,-6.018161,-1.561399,-8.143748,5.343497,-1.768987,-4.535752,-6.855660,6.494080,-6.377183,-9.698840,1.491403,-6.128901,-4.364030,1.594511,-2.515356,-1.207375,-9.611941,1.049801,3.220360,-1.288258,0.299015,-4.565231,-5.675806,-9.680051,1.676720,4.436437,-3.065272,8.501093,5.244326,-8.623794,1.680895,-3.749245,6.147190,-3.108381,-9.778995,2.265318,6.220615,-7.031518,8.597836,-2.150678,1.299232,9.705133,-0.899113,2.378698,1.822788,8.041135,-1.478403,3.539561,7.110110,-7.598198,-1.382135,-2.638934,7.165431,5.805052,0.718108,-4.274209,1.297745,-8.619689,-8.720401,2.737588,5.583466,-8.378521,-9.834615,6.895807,-9.884374,-5.199377,4.872103,-1.075906,1.442990,3.159852,-9.552984,3.817167,-0.441340,8.449495,0.116998,-7.908708,9.569170,-8.781964,-6.797598,-0.620759,-9.762235,9.721205,4.845411,-8.922774,-3.111326,5.561793,8.389009,-5.146547,-9.572518,4.701555,8.301876,-4.243842,-9.933816,-7.662678,-3.897537,5.751092,6.367767,4.812864,3.460098,9.264509,6.469244,-8.459053,-4.235899,-2.343416,-5.545474,-9.803054,-3.227709,-4.259331,-0.128675,4.509814,5.210146,7.792314,-7.654646,4.044197,-6.438225,6.411501,3.010428,5.844784,-2.691826,-1.139071,5.484810,-8.638831,1.266929,-0.015607,-7.690389,1.982071,9.989709,-7.188635,1.431352,5.360767,5.137254,4.576937,-2.892240,-9.442425,9.805247,6.764888,3.265032,-0.164726,-9.298129,-3.140616,-0.121637,6.137784,-0.556406,6.322532,4.109982,-5.137738,9.808978,-4.714909,-4.099252,2.595344,4.429664,-2.235316,-1.451028,-7.595495,7.658815,2.192111,-7.322577,2.628648,2.519393,-4.466009,6.110513,6.411273,-2.077254,-8.456133,-1.611501,-1.673334,-5.042080,-4.198741,4.170291,-4.779906,-3.493413,2.169382,-1.065608,1.585837,3.352679,-5.183722,-7.694096,-0.574818,0.386265,3.544826,-8.816046,-2.657667,-6.328993,0.798139,4.160108,5.773068,-4.695075,-3.136726,5.516125,-0.229464,6.545863,-1.439325,-2.087904,-9.683047,3.296491,2.483454,-3.969439,6.912892,-7.993218,-7.939870,-7.890071,8.573668,-6.310207,2.309596,-7.292075,7.626494,-9.961237,1.198795,-0.577240,8.438039,-9.588022,7.714701,-4.343752,7.653356,7.559175,-7.394683,1.143293,-8.277200,2.709467,-0.320302,1.209712,9.174826,5.386916,-5.183824,-5.480831,2.226061,-2.870762,3.555464,7.459278,-1.667915,4.511902,-6.399914,-7.627945,-7.093912,-4.210227,7.083880,-8.800646,-2.271240,-8.326624,5.522583,-2.978169,0.069394,7.353767,5.668360,4.932185,-0.603116,-7.870604,-8.711799,0.758309,-2.994274,6.076434,-9.888744,-9.412589,3.856259,7.515088,4.590707,5.906626,5.466566,-5.198317,-4.765628,-4.677045,-6.178892,0.474014,1.808539,4.938225,3.431655], dtype = "float32")#candidate|8756|(1320,)|const|float32
var_8757 = relay.var("var_8757", dtype = "float64", shape = (2160,))#candidate|8757|(2160,)|var|float64
call_8755 = relay.TupleGetItem(func_7682_call(relay.reshape(const_8756.astype('float32'), [11, 10, 12]), relay.reshape(var_8757.astype('float64'), [2160,]), ), 4)
call_8758 = relay.TupleGetItem(func_7685_call(relay.reshape(const_8756.astype('float32'), [11, 10, 12]), relay.reshape(var_8757.astype('float64'), [2160,]), ), 4)
func_6714_call = mod.get_global_var('func_6714')
func_6718_call = mutated_mod.get_global_var('func_6718')
const_8766 = relay.const([3,6,-8,6,-3,-3,-7,4,-6,5,7,1,-1,5,-1,9,4,10,4,-8,-5,2,9,9,-7,9,8,-9,-5,2,-5,-9,-10,-9,-7,3,-9,5,-1,3,-1,-3,-4,-9,-9,4,5,10,-4,-10,-7,2,6,-6,-4,-6,-3,3,1,6,-4,-3,6,2,4,1,-5,-9,-2,7,-4,-8,-3,-4,-4,6,3,-7,-5,-10,-3,2,4,6,-4,2,9,7,-3,-6,-3,7,4,-8,-4,-7,9,-4,1,-9,-6,-5,10,-7,-4,2,-7,-5,4,1,-2,-7,-10,-4,-3,-5,5,-4,-5,10,3,-7,4,3,-7,-7,3,-10,7,3,8,-8,2,-9,-10,6,-2,6,-7,3,-5,3,-6,-2,-8,2,-5,-10,-2,-5,8,10,4,-4,-6,5,9,1,2,8,-8,-7,-3,-3,-5,-9,-10,3,-6,-5,5,-4,-9,-10,8,-2,-10,-3,-3,10,-3,-1,10,6,-2,-8,2,-1,-7,-3,-1,-3,-1,4,1,4,-6,8,8,2,5,-6,2,-10,-8,-3,-8,-10], dtype = "int64")#candidate|8766|(208,)|const|int64
call_8765 = func_6714_call(relay.reshape(const_8766.astype('int64'), [13, 4, 4]), relay.reshape(const_8766.astype('int64'), [13, 4, 4]), )
call_8767 = func_6714_call(relay.reshape(const_8766.astype('int64'), [13, 4, 4]), relay.reshape(const_8766.astype('int64'), [13, 4, 4]), )
output = relay.Tuple([bop_8747,call_8750,const_8751,const_8752,var_8753,call_8755,const_8756,var_8757,call_8765,const_8766,])
output2 = relay.Tuple([bop_8747,call_8754,const_8751,const_8752,var_8753,call_8758,const_8756,var_8757,call_8767,const_8766,])
func_8768 = relay.Function([var_8745,var_8746,var_8753,var_8757,], output)
mod['func_8768'] = func_8768
mod = relay.transform.InferType()(mod)
mutated_mod['func_8768'] = func_8768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8768_call = mutated_mod.get_global_var('func_8768')
var_8770 = relay.var("var_8770", dtype = "uint32", shape = (2, 4, 15))#candidate|8770|(2, 4, 15)|var|uint32
var_8771 = relay.var("var_8771", dtype = "uint32", shape = (2, 4, 15))#candidate|8771|(2, 4, 15)|var|uint32
var_8772 = relay.var("var_8772", dtype = "float64", shape = ())#candidate|8772|()|var|float64
var_8773 = relay.var("var_8773", dtype = "float64", shape = (2160,))#candidate|8773|(2160,)|var|float64
call_8769 = func_8768_call(var_8770,var_8771,var_8772,var_8773,)
output = call_8769
func_8774 = relay.Function([var_8770,var_8771,var_8772,var_8773,], output)
mutated_mod['func_8774'] = func_8774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8375_call = mod.get_global_var('func_8375')
func_8377_call = mutated_mod.get_global_var('func_8377')
call_8816 = func_8375_call()
call_8817 = func_8375_call()
func_3999_call = mod.get_global_var('func_3999')
func_4001_call = mutated_mod.get_global_var('func_4001')
var_8821 = relay.var("var_8821", dtype = "float64", shape = (72,))#candidate|8821|(72,)|var|float64
call_8820 = func_3999_call(relay.reshape(var_8821.astype('float64'), [2, 12, 3]))
call_8822 = func_3999_call(relay.reshape(var_8821.astype('float64'), [2, 12, 3]))
output = relay.Tuple([call_8816,call_8820,var_8821,])
output2 = relay.Tuple([call_8817,call_8822,var_8821,])
func_8860 = relay.Function([var_8821,], output)
mod['func_8860'] = func_8860
mod = relay.transform.InferType()(mod)
var_8861 = relay.var("var_8861", dtype = "float64", shape = (72,))#candidate|8861|(72,)|var|float64
output = func_8860(var_8861)
func_8862 = relay.Function([var_8861], output)
mutated_mod['func_8862'] = func_8862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8651_call = mod.get_global_var('func_8651')
func_8652_call = mutated_mod.get_global_var('func_8652')
call_8888 = func_8651_call()
call_8889 = func_8651_call()
output = call_8888
output2 = call_8889
func_8894 = relay.Function([], output)
mod['func_8894'] = func_8894
mod = relay.transform.InferType()(mod)
output = func_8894()
func_8895 = relay.Function([], output)
mutated_mod['func_8895'] = func_8895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8894_call = mod.get_global_var('func_8894')
func_8895_call = mutated_mod.get_global_var('func_8895')
call_8967 = func_8894_call()
call_8968 = func_8894_call()
var_8986 = relay.var("var_8986", dtype = "int64", shape = (8, 4, 3))#candidate|8986|(8, 4, 3)|var|int64
bop_8987 = relay.greater_equal(call_8967.astype('bool'), relay.reshape(var_8986.astype('bool'), relay.shape_of(call_8967))) # shape=(8, 4, 3)
bop_8990 = relay.greater_equal(call_8968.astype('bool'), relay.reshape(var_8986.astype('bool'), relay.shape_of(call_8968))) # shape=(8, 4, 3)
func_7872_call = mod.get_global_var('func_7872')
func_7874_call = mutated_mod.get_global_var('func_7874')
call_8992 = func_7872_call()
call_8993 = func_7872_call()
bop_9015 = relay.not_equal(call_8967.astype('bool'), relay.reshape(var_8986.astype('bool'), relay.shape_of(call_8967))) # shape=(8, 4, 3)
bop_9018 = relay.not_equal(call_8968.astype('bool'), relay.reshape(var_8986.astype('bool'), relay.shape_of(call_8968))) # shape=(8, 4, 3)
func_7484_call = mod.get_global_var('func_7484')
func_7486_call = mutated_mod.get_global_var('func_7486')
call_9023 = func_7484_call()
call_9024 = func_7484_call()
output = relay.Tuple([bop_8987,call_8992,bop_9015,call_9023,])
output2 = relay.Tuple([bop_8990,call_8993,bop_9018,call_9024,])
func_9026 = relay.Function([var_8986,], output)
mod['func_9026'] = func_9026
mod = relay.transform.InferType()(mod)
var_9027 = relay.var("var_9027", dtype = "int64", shape = (8, 4, 3))#candidate|9027|(8, 4, 3)|var|int64
output = func_9026(var_9027)
func_9028 = relay.Function([var_9027], output)
mutated_mod['func_9028'] = func_9028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7872_call = mod.get_global_var('func_7872')
func_7874_call = mutated_mod.get_global_var('func_7874')
call_9077 = func_7872_call()
call_9078 = func_7872_call()
func_597_call = mod.get_global_var('func_597')
func_600_call = mutated_mod.get_global_var('func_600')
var_9089 = relay.var("var_9089", dtype = "uint8", shape = (1386,))#candidate|9089|(1386,)|var|uint8
call_9088 = relay.TupleGetItem(func_597_call(relay.reshape(var_9089.astype('uint8'), [9, 11, 14])), 0)
call_9090 = relay.TupleGetItem(func_600_call(relay.reshape(var_9089.astype('uint8'), [9, 11, 14])), 0)
func_2524_call = mod.get_global_var('func_2524')
func_2527_call = mutated_mod.get_global_var('func_2527')
const_9093 = relay.const([5,2,8,-10,2,6,-6,-1,4,9,7,-4,-9,-6,-9,-7,-8,6,8,8,10,4,-4,4,-4,-5,-10,8,10,-6,6,-1,2,-4,-3,-2,8,-6,-10,-2,5,7], dtype = "int64")#candidate|9093|(42,)|const|int64
var_9094 = relay.var("var_9094", dtype = "int32", shape = (1040,))#candidate|9094|(1040,)|var|int32
call_9092 = relay.TupleGetItem(func_2524_call(relay.reshape(const_9093.astype('int64'), [7, 3, 2]), relay.reshape(var_9094.astype('int32'), [1040,]), ), 1)
call_9095 = relay.TupleGetItem(func_2527_call(relay.reshape(const_9093.astype('int64'), [7, 3, 2]), relay.reshape(var_9094.astype('int32'), [1040,]), ), 1)
uop_9132 = relay.tan(call_9092.astype('float64')) # shape=(9, 11, 14)
uop_9134 = relay.tan(call_9095.astype('float64')) # shape=(9, 11, 14)
bop_9144 = relay.equal(uop_9132.astype('bool'), relay.reshape(var_9089.astype('bool'), relay.shape_of(uop_9132))) # shape=(9, 11, 14)
bop_9147 = relay.equal(uop_9134.astype('bool'), relay.reshape(var_9089.astype('bool'), relay.shape_of(uop_9134))) # shape=(9, 11, 14)
output = relay.Tuple([call_9077,call_9088,const_9093,var_9094,bop_9144,])
output2 = relay.Tuple([call_9078,call_9090,const_9093,var_9094,bop_9147,])
func_9149 = relay.Function([var_9089,var_9094,], output)
mod['func_9149'] = func_9149
mod = relay.transform.InferType()(mod)
var_9150 = relay.var("var_9150", dtype = "uint8", shape = (1386,))#candidate|9150|(1386,)|var|uint8
var_9151 = relay.var("var_9151", dtype = "int32", shape = (1040,))#candidate|9151|(1040,)|var|int32
output = func_9149(var_9150,var_9151,)
func_9152 = relay.Function([var_9150,var_9151,], output)
mutated_mod['func_9152'] = func_9152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8353_call = mod.get_global_var('func_8353')
func_8355_call = mutated_mod.get_global_var('func_8355')
call_9159 = func_8353_call()
call_9160 = func_8353_call()
output = relay.Tuple([call_9159,])
output2 = relay.Tuple([call_9160,])
func_9174 = relay.Function([], output)
mod['func_9174'] = func_9174
mod = relay.transform.InferType()(mod)
output = func_9174()
func_9175 = relay.Function([], output)
mutated_mod['func_9175'] = func_9175
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9182 = relay.const([[[5.881810,-4.356199,5.528463,4.476698],[4.378591,2.238979,-6.168726,9.294107],[3.998205,-0.698319,-2.797784,9.583407],[1.576085,-5.503783,8.511046,4.342706],[4.599664,-4.126738,-5.947710,-5.559272],[5.837591,-9.486130,1.323207,2.467290],[-8.543460,-7.182355,-6.153701,2.217823],[-3.361226,-5.573801,9.634399,5.032912],[3.874963,9.966642,6.666529,5.571656],[0.119043,-3.825507,8.948782,-9.683417],[-5.602761,-5.137243,-0.850953,-6.755444]],[[2.225841,-7.077461,-6.501487,-0.023200],[5.897001,-1.068646,5.630663,5.041680],[9.118628,6.140986,3.711032,0.678298],[-4.748090,-3.302942,6.939185,-6.756304],[1.769541,9.201370,-1.347584,1.963950],[0.185308,-7.578363,1.988852,3.004506],[7.075491,9.723481,-2.408643,-4.851210],[-3.287634,2.367005,-5.918535,4.185541],[-9.981321,3.262856,-3.724083,-4.911932],[-2.620197,-1.208200,-6.834099,9.173041],[-4.886127,-4.942824,6.132557,5.879377]],[[-0.877699,7.090788,-1.015968,-4.903645],[2.342013,0.926690,3.852359,6.813649],[-6.504705,0.972528,1.584834,1.243673],[-2.667461,8.095604,-3.453434,9.252539],[9.369023,5.564432,6.485464,5.084188],[-1.726501,-1.375799,-3.770413,6.525197],[0.056239,-8.006470,2.271320,-8.422728],[0.139818,7.122547,4.446145,-0.895449],[8.452568,-2.219358,-1.585668,6.485273],[6.339572,-5.984360,3.314353,-2.775207],[-0.820924,-4.273226,-0.810689,8.521439]]], dtype = "float32")#candidate|9182|(3, 11, 4)|const|float32
uop_9183 = relay.rsqrt(const_9182.astype('float32')) # shape=(3, 11, 4)
uop_9190 = relay.acos(uop_9183.astype('float32')) # shape=(3, 11, 4)
func_7682_call = mod.get_global_var('func_7682')
func_7685_call = mutated_mod.get_global_var('func_7685')
const_9201 = relay.const([2.488404,-3.604890,5.370461,-0.395257,-9.128568,-1.601186,2.262058,-7.950622,3.381769,0.784967,-9.549403,-8.867940,6.622100,3.896876,-7.561716,1.682614,3.189310,-3.874889,-5.944762,7.228009,-3.875204,-9.273203,-6.178684,3.812376,6.320608,-1.533946,-6.931251,9.229379,2.159375,-6.245542,-6.201162,2.442481,-3.286937,-0.017802,-2.678723,7.753792,-9.503675,-6.852787,-2.586139,-9.475505,-8.213862,9.924315,1.463571,6.041106,7.652382,5.730342,9.847195,-9.940743,-7.036328,2.168764,-2.162311,7.860400,-5.007210,9.595361,0.134156,-9.829206,-4.949425,-9.607160,-0.252954,-8.922678,-3.822800,2.817130,-6.532066,0.532718,6.489612,-0.961254,6.705767,-2.999436,5.572451,-3.155946,2.311857,6.823447,-8.516724,-5.941616,2.619854,-8.781141,-8.589867,0.027946,2.828558,2.954732,5.250078,5.115565,0.402356,-0.415840,1.044329,2.934937,5.790082,7.051538,1.595156,1.878181,-4.638240,-0.418270,8.125907,-6.067977,-7.925628,4.263645,7.848733,-5.934115,-0.406198,5.370611,0.548726,4.124433,3.476198,-6.396131,-6.614496,6.955872,3.105094,7.040262,-6.129017,-8.427795,0.117120,-1.312397,-2.944036,1.764489,-2.278613,-9.722855,3.497633,-7.337966,-5.959503,3.555663,-6.734705,-5.435881,-4.384922,8.788883,2.596774,6.166935,7.044370,2.486739,-9.134802,6.676020,2.856194,-9.401431,6.010837,-5.306066,6.853642,-5.707734,-5.270968,-6.751232,-7.232429,8.984496,4.858057,-2.330731,5.839027,-9.210915,-9.943138,-3.666671,3.585417,-1.454925,3.292152,9.964795,2.044660,1.085349,-3.195688,-4.340312,1.722023,-1.916581,1.399410,3.351135,-3.642206,-1.735763,1.658520,-5.532056,-6.311010,7.665309,3.603858,-8.557529,-1.185601,2.413542,7.721950,9.627959,5.573634,5.297683,-3.171764,8.730880,-6.392543,2.055264,-1.599328,0.672785,0.547546,0.283494,2.816316,5.200983,5.608714,-6.689794,-9.771718,8.454064,8.617819,-1.317168,2.390322,-7.049694,-9.707923,-4.515041,7.571600,0.331791,-2.692822,-1.890486,-1.273664,-0.297959,-1.865472,6.812299,-9.065515,-5.107819,1.237445,-0.334306,8.375490,5.002373,-7.782684,-4.455350,7.009030,-6.398204,-4.093487,9.695603,-4.673412,-6.320967,-7.364334,-7.375650,-0.083830,-2.915327,3.362692,4.772799,8.066982,-1.786808,-0.573013,4.556653,-1.820908,5.059396,-4.792644,-0.902846,-4.679845,7.608047,-2.786768,-4.167517,0.557671,-9.580814,1.614572,1.817473,-5.886736,-4.024576,-6.925541,-7.692128,-0.956945,-7.686393,-4.463343,0.297678,4.755733,7.002460,-7.792392,4.291262,-8.787829,2.574428,5.147497,-5.442513,-4.959725,-7.923504,1.258715,-1.624656,-1.924446,-8.559858,9.012992,-2.316686,1.968451,-5.470260,7.670902,4.366004,4.673988,4.267481,9.832637,2.798602,-2.962035,-8.567344,-1.453182,4.071926,7.493666,-3.302197,-6.516333,-5.271772,-2.125581,0.067358,-3.311477,-2.920540,1.606511,-3.587599,5.094140,6.068286,8.702956,5.245064,-9.681413,-7.163263,8.759123,-0.633618,2.190525,8.679539,2.323851,5.857720,2.612206,3.020362,9.637324,7.265952,8.264053,5.038378,-2.319852,2.283150,1.166184,5.027319,-3.137664,-1.942742,-8.222479,2.896106,3.129797,5.796601,-4.013952,9.081463,-7.107275,4.872619,6.479830,-1.647720,1.566009,-1.075856,9.131060,2.843310,3.877955,-7.384973,5.477817,5.463594,-7.940992,0.598717,-8.344603,8.852909,9.554891,-5.713649,7.782632,4.122075,-7.218097,3.149742,6.875336,0.453429,8.044035,-7.629946,-3.551322,8.556490,-3.613353,6.017291,0.287936,6.650596,8.312891,-3.350845,-2.121970,-0.805091,7.340893,-7.976422,-8.529149,-7.882708,8.254046,3.819925,-2.112743,8.256430,7.291076,3.213557,1.669635,-0.823730,7.956564,8.422871,-3.160103,-4.231127,7.364459,-1.406394,8.459673,9.250013,4.846643,-1.404424,8.298054,-8.702977,-3.656369,-1.379382,-1.952023,7.303668,2.387713,0.579893,-7.173381,2.045812,-6.710798,1.669743,-9.088729,2.905123,9.682680,-9.987759,4.673145,-1.364829,-7.226230,1.880987,5.302182,-2.233385,2.252376,-9.841273,-7.535667,6.061133,7.827360,-7.387272,-2.814341,5.423822,1.437371,-2.327009,-9.045638,-5.223007,2.844412,5.584674,-7.198502,6.356506,0.940021,2.706220,-1.199918,-2.490268,-4.318800,5.368949,-9.474441,-1.232666,-8.771549,-5.232423,9.189124,-5.650500,-0.681100,4.252348,0.895907,-2.021360,-2.611067,-9.927018,1.656386,-9.258579,8.664201,-5.953045,-1.156669,5.251556,2.253005,2.397016,7.105074,-8.945048,5.023168,-5.673378,-6.311721,1.489658,1.863461,9.987872,9.268910,-8.283768,-5.556618,-1.947727,4.038568,1.577307,-0.367249,-5.950622,-5.526362,7.905581,-1.630508,4.749126,9.581174,-7.883767,-8.766937,0.737847,3.302852,6.240378,-5.071469,7.387858,5.808746,-3.367650,0.275105,3.229285,0.350830,-0.484619,7.267732,1.406842,-8.104673,0.359869,5.745425,-5.795845,-1.200004,-0.447349,-0.177956,-4.225595,7.159324,0.880067,0.589287,-7.796865,7.738082,6.506532,-3.534165,2.396205,-5.800331,-2.167231,8.888021,-1.005705,-5.203252,-8.329101,-4.558947,-3.123649,-4.135443,3.271028,4.160827,-7.345650,-7.459813,1.844911,-6.051967,4.520416,0.456481,4.374906,7.115343,-1.016890,-8.530686,-9.057056,7.945909,-7.791134,-6.400175,-7.623397,-8.937713,-2.473552,-9.862877,1.262292,1.229852,8.129639,-6.865906,5.284282,-8.144573,2.215094,0.896643,-6.766629,6.554425,-7.504866,-5.589630,5.720311,7.246299,2.050183,4.543335,7.489522,4.499846,1.703335,2.395885,4.930033,-5.583682,-6.033834,-7.629445,-3.043837,-8.376108,5.721811,4.406142,5.987572,9.066335,-9.239297,8.063595,9.311148,-3.144670,7.666323,2.640093,-3.699958,2.124892,9.546332,5.140083,2.018363,-9.009595,-6.236869,3.860373,7.251811,-9.579555,8.739356,6.259340,-7.099012,9.491727,8.063280,8.511761,-9.045498,-5.409715,-8.222744,-5.800572,8.268031,0.531334,-1.312562,2.030646,5.767136,-8.057547,-8.263640,8.910307,3.958389,-1.460434,3.486649,-3.737198,-7.151191,-1.219368,-8.507157,0.088973,9.803592,9.748092,6.057550,3.178780,-5.164193,-8.089891,7.505668,-9.999448,-8.054037,0.284191,-5.321261,-8.459153,5.649828,4.489307,3.264977,7.356551,5.262303,-8.910014,-9.170469,8.613148,8.520504,3.689369,3.404816,-4.645302,-9.250364,-3.902367,0.073596,4.500699,0.978226,1.443466,5.854744,1.870880,7.462743,-9.962085,-8.031326,7.103677,6.552891,-4.425332,-4.806065,-9.629031,2.873296,1.038347,5.356859,4.535921,9.903370,3.919173,7.078273,-4.070177,4.913171,-8.697345,-4.603822,4.123538,-2.573914,3.309822,-5.472983,7.308621,-4.162914,8.135846,-2.746618,-9.505313,6.751192,-4.601691,-9.445930,5.713586,2.098159,6.569019,7.290492,4.069272,9.062302,-6.252336,3.206358,1.835724,-7.538729,9.273067,3.220926,6.143826,-4.537145,7.373189,-5.507088,-5.202011,9.589595,5.421642,-4.273243,-8.328571,2.951965,-0.734354,5.552318,-9.752352,-7.052468,-5.404149,9.159332,-6.815256,2.372089,0.589481,-7.697557,-8.086035,6.794341,1.783920,-5.761490,4.969121,-1.029304,-1.874878,8.815025,-2.366332,9.410175,3.826463,-7.358124,-6.730322,-1.100205,7.750786,1.838087,-9.277092,1.464693,-2.288370,3.003425,-4.518706,1.019004,1.397113,2.677392,-8.379936,-6.693590,-8.755009,0.011152,8.522674,-5.782370,5.427470,-8.469577,-5.246233,7.066625,7.827454,7.383758,-3.144711,8.629045,7.598135,8.235895,3.051981,-9.801630,-5.939311,-2.791610,8.416919,-1.198382,-3.477282,-9.826757,6.348878,1.905770,-7.848153,-0.150525,-9.626218,8.181983,-2.359458,3.307978,-9.305918,0.921192,-7.517608,-0.973936,-1.155466,-5.435568,0.075943,-7.630638,-4.679507,-6.873013,-0.069131,6.936256,-1.434147,-4.948018,-7.655069,-1.924996,8.451376,2.635062,7.737538,1.536686,9.720445,-6.265352,-5.340467,1.952069,-8.187749,-0.569432,-6.567031,0.476978,-0.639922,4.358823,-1.899563,5.386782,-8.398018,8.653688,4.443436,7.768294,-3.942232,9.962685,-9.283716,9.558536,-2.592165,3.358289,7.356849,9.529262,0.768811,-9.508537,-7.065937,9.290017,4.825370,-1.335694,-3.076955,5.080868,6.203510,9.185799,1.177615,0.894091,-2.385786,-7.289918,1.310111,0.096354,-7.599791,-9.083570,-6.394965,3.111202,-4.630525,-5.882657,-4.520641,2.755384,-9.257069,4.810981,0.177623,-3.539116,-6.822089,-9.243780,-4.834249,-8.108432,0.649711,-5.872893,-8.391862,7.426655,3.701813,7.617016,3.096377,-2.953813,-2.874483,9.043372,-9.123575,2.109854,-1.159765,-9.458329,-1.209144,-2.856268,-9.295725,4.720421,-1.223779,6.163538,-1.523630,4.689587,-1.695099,2.621612,-6.668675,-1.189675,-4.969611,0.440141,9.651958,-7.204548,-2.172004,-9.248631,0.473913,7.320481,-0.459586,4.726868,-7.314067,8.993734,-6.943213,6.796092,0.588675,3.792079,3.264055,4.773644,4.004483,-0.468499,-5.782856,-2.645571,-6.472645,2.315386,-5.827084,1.401232,-9.042722,0.997473,-8.919513,3.342760,0.780472,3.521130,2.233133,3.639395,-5.195577,-3.878018,-6.185787,-2.722725,-6.316098,-0.121129,6.822261,4.446328,-2.073728,-8.898731,2.223775,-8.129107,9.920348,-0.045670,-8.512134,6.383796,1.381656,3.486931,-5.062176,9.896123,-7.102030,6.663303,5.662017,1.796819,-7.346239,-3.821172,8.715888,-5.791909,5.288182,5.555437,-6.899911,-0.318900,-0.332964,-5.924881,-3.694372,0.492148,1.705751,-7.167681,-0.312956,-9.228956,7.618047,-3.586433,1.024921,7.199317,4.109116,9.893112,8.362442,-3.784890,2.801668,-3.259104,-7.555386,-4.205928,3.325514,-9.630329,-1.733907,-5.685595,-5.506881,-6.491665,4.491620,-9.955324,-7.385907,-7.845902,8.935212,8.224272,3.151026,-6.597946,-1.039343,5.459311,6.539389,8.978251,-2.064586,-9.134251,-6.891573,6.175422,-8.873975,5.116292,2.043694,8.803852,-8.882938,5.995818,-3.843734,6.901605,8.186218,-1.219283,-8.584637,-5.028574,4.693266,3.405583,-6.173331,5.991799,-3.333650,1.040449,3.107536,7.980092,-1.466049,4.510289,-1.772908,6.629450,-8.210014,9.497284,4.629576,2.287930,-9.392071,-7.921292,6.342686,6.530487,-4.596572,8.836331,3.199614,2.915604,-9.421307,1.324132,7.658862,-7.392523,-8.602092,8.565425,3.797992,0.825083,5.690148,-2.596673,6.532940,0.796599,3.769473,6.636054,8.376594,-8.061030,-6.292476,-4.797848,-2.195954,2.528930,-2.724716,-1.715510,6.844816,8.014143,3.985037,-6.176905,-6.544924,9.593982,-7.611057,-4.797184,3.778688,6.157653,-0.889681,-0.412161,-3.992384,-6.710427,-1.789392,5.567719,-5.494290,-8.127412,-8.711404,-6.945059,-9.561831,-9.809811,0.028719,-1.779878,0.075072,-0.476956,-0.216735,-0.314855,-3.670547,3.500310,8.923567,-2.789124,-6.036582,-2.007473,3.260045,2.275348,-5.009208,5.294534,-4.474345,-2.901312,3.990697,-0.480024,2.440395,8.560622,0.896187,-2.959299,7.439121,-6.859186,-0.093138,-2.449824,0.893021,4.114590,-2.192759,9.163705,5.017657,-7.449005,-6.540519,-5.339040,-2.930929,1.481190,-5.568591,-1.211880,8.494778,0.497721,1.160842,2.077445,2.790254,-3.387539,8.253570,8.106664,-1.699523,-8.006455,-3.302956,-2.943817,-1.484389,-4.410245,-3.795946,-0.324812,2.632231,6.411644,3.637256,9.173189,4.882377,-2.961683,-5.196792,0.385899,-4.699758,7.313570,-2.967936,1.964501,-4.327915,-6.770645,-3.966342,-8.828557,-5.624476,0.675112,-4.564760,6.846238,-3.380554,8.499729,4.715410,5.756549,-2.577788,-4.048055,3.311994,8.105208,9.689026,-8.305470,-7.738881,5.082005,-4.117245,-0.967371,4.354854,-7.113082,-6.154408,-9.548027,6.656899,7.730336,9.313876,-5.608823,9.983713,-4.580527,4.938964,-2.832836,6.561712,1.181268,-3.841224,-5.146112,0.725685,-3.992514,-2.812715,8.732496,-3.204878,1.403112,-3.587352,-5.768474,4.335113,-1.734620,5.322374,-1.315271,-6.274140,-1.306938,-5.053157,-4.235561,-0.371441,4.640392,-1.236595,-1.068798,4.286954,-9.078613,0.275941,3.700934,2.074900,-8.670071,-2.894110,8.130331,-0.401919,-6.343777,-9.115451,-7.479346,6.834596,-5.037478,-6.748584,-7.933178,-3.006386,7.692941,-4.987522,7.161957,-4.946903,-0.832829,-9.453207,0.522209,-4.680683,9.771531,-3.600003,5.638229,7.995214,1.635930,-8.283297,3.534828,-5.328009,-6.661534,4.442974,-5.459690,6.697677,6.447943,-1.483906,-0.160340,-7.173785,-2.908036,9.124885,-0.902615,3.250939,-4.390062,2.390124,-0.568873,-3.961668,-0.495221,-1.203917,0.520681,-4.865897,-4.373128,3.402722,0.685524,-3.883551,1.482902,6.016834,3.881227,8.720751,-5.646909,2.845264,1.242674,4.044131,-1.831316,-8.112503,-1.885877,-6.661386,-1.029569,9.743427,4.530616,9.826300,-9.944715,-3.376712,8.327088,4.941681,-1.085753,-2.826125,3.582849,-8.157546,-8.683699,5.674136,2.630870,1.620171,-0.342307,4.278126,-0.026218,-7.209354,5.563944,-7.227225,-5.717385,-6.282594,2.979632,-6.221602,-8.142830,-0.784446,-9.752418,4.191775,9.645577,7.363758,-6.592279,0.406151,8.908533,6.883253,-9.359835,1.785091,8.415125,9.348735,-5.036890,7.160061,-7.811309,9.441810,-8.485118,-2.321768,9.568752,5.007131,-8.472040,5.598739,-7.164284,-3.529399,-2.559545,0.845180,3.710560,-8.272597,8.528951,1.938102,6.320275,-9.800452,6.191823,0.567406,-8.126567,-0.254529,3.980999,-9.366126,-1.698700,-7.445003,-9.095490,5.409591,4.075083,1.587848,5.132587,-9.200026,-8.642507,-1.771360,-0.415187,-7.675978,-9.292568,0.430486,-7.162382,2.661112,4.851780,-2.937785,-9.774384,9.514716,8.427692,-7.901349,5.921434,-1.588094,3.330753,-7.581984,-1.591254,-1.271145,2.450532,7.305400,3.554539], dtype = "float32")#candidate|9201|(1320,)|const|float32
const_9202 = relay.const([[6.118065,-3.116330,-6.510764,5.088085,-4.877817,2.721696,2.213984,7.000850,2.499877,-8.051342,9.646497,-9.164312,7.005192,6.109409,4.211176,-3.762216,-1.437799,-2.185604,1.423281,-9.714334,2.424925,6.532333,0.288984,-2.471560,-3.356141,-1.366926,-0.906287,-7.506800,-1.268396,-5.031136,2.859615,-8.748417,7.050215,-0.304181,-9.419036,-5.927048,9.635922,-0.408661,-2.155315,6.214462,-0.262033,5.537316,-3.909177,-1.743703,7.261362,7.377172,8.036164,-3.228518,-3.737680,8.904381,-1.823285,-3.342353,9.023977,-4.639042,9.082656,-9.399530,5.907413,8.985749,1.638209,-1.211577,-1.944574,8.603695,2.303371,-1.734160,-7.400375,9.921561,-9.116294,-9.022054,-7.124674,7.438202,-4.550307,9.010070,0.246529,-2.064917,-2.968140,-6.586664,-5.331208,-9.523118,8.842581,4.064359,-5.496700,-8.995065,-1.729009,-2.557544,-8.610478,-6.309159,7.125563,-4.030957,-1.038924,2.302153,-2.555400,4.405652,1.898267,-6.473110,8.314309,3.170799,-9.826602,-2.573640,-7.813596,-7.302294,-1.920082,-3.184617,-8.959614,7.052269,7.527575,-0.394528,-8.188667,-3.393113],[9.613290,-9.887912,-8.868379,2.478967,-9.740298,1.362553,-3.116944,5.292016,-8.986311,3.938357,-4.042618,-9.840699,9.757541,4.666302,-6.370987,-1.200023,0.445948,-6.609740,-2.382001,-9.588947,8.487473,2.945442,9.177036,4.319855,-1.410928,8.296189,1.771754,-9.923758,-0.958302,-1.533032,1.113296,-9.636648,1.507660,-3.173839,-8.090731,-9.215673,-1.491376,-6.972433,-6.529749,-9.701768,-5.354002,-7.801477,0.865781,-2.845988,-9.204400,-5.295340,4.531749,-0.231702,-7.379125,-0.821935,-2.520364,-5.092789,3.360389,-6.922697,-7.837360,-0.814058,-3.794650,-9.453703,-6.073444,3.578402,1.755786,-5.223384,1.685599,-9.374355,-0.634655,-5.158469,8.263202,9.694804,7.803243,2.734733,-5.397122,-4.510125,-2.328579,-7.053647,-3.518272,1.976557,-9.540585,-0.461509,3.919494,9.121269,-7.701403,-8.593697,-7.013531,-9.064943,5.752133,-1.255424,9.120796,0.605442,9.379605,-7.149933,4.602097,-7.346857,-0.764025,0.487730,6.496612,7.570220,6.803507,6.604754,4.933568,7.784660,7.685813,0.423153,7.221091,-6.248479,-7.023999,-0.493768,2.623256,0.007321],[0.007966,6.498698,5.812677,-6.143619,-3.148409,9.577759,9.853200,-3.022421,-0.779015,-4.505663,-2.546783,-5.753658,6.883424,0.921177,0.735200,-8.813420,4.699985,8.642444,-1.352256,2.861701,-7.304862,1.014050,-9.182053,-5.566345,9.229606,-1.045838,-0.379619,-6.452947,4.678468,-5.295672,7.757682,4.334272,-4.474739,6.159462,2.817132,6.991858,4.652343,2.073273,-1.807739,-8.780210,-3.869972,-6.231414,-3.385452,7.937429,-4.976540,-7.054763,-0.222047,-1.586134,5.566158,-7.648267,7.708392,-6.302761,-6.390734,-1.791927,0.522062,-2.977753,6.120434,-0.207824,1.023870,7.970443,5.808002,6.116207,2.246660,-7.676950,-0.787321,9.387865,-8.802596,-2.206702,-5.302516,-4.299666,-3.872392,0.031312,1.055381,1.588203,9.401551,-5.201600,-9.584432,8.262883,6.230462,-8.872170,-9.878906,2.713471,8.114988,8.985742,-5.049294,-5.419325,-9.525849,-0.021079,9.701492,-9.468279,-5.086213,-0.737463,1.332542,6.204823,8.928585,-2.043461,8.728851,8.978588,1.321843,-7.009223,-6.953812,-7.322288,5.947830,-6.444376,-5.933267,0.117789,6.712225,-0.561441],[4.223942,8.890509,8.521372,-5.239079,-2.611274,-8.666840,-1.886273,9.772126,7.441228,0.605641,1.088633,0.135291,3.043545,-0.435076,-1.938257,7.281936,-3.320471,0.204672,-4.274438,0.290453,3.256933,-2.929389,-4.096618,-1.674067,-4.400830,-6.408692,1.336028,4.114181,3.041830,1.787088,-5.927962,8.684025,8.635425,3.115100,4.738223,-5.708429,-7.024063,-9.856291,0.679314,-4.000788,5.927969,0.307461,-7.325931,8.628058,-4.474882,-8.138307,9.653516,-7.449817,-8.827383,-7.664697,-3.087707,-1.568599,2.466249,6.838766,8.241558,-1.277650,7.727291,6.043852,2.139095,1.956533,4.894791,-8.380334,8.543778,8.077158,-3.188960,3.688783,6.758802,7.268631,2.174443,3.022417,-8.581722,2.834666,4.177533,-4.456099,5.623687,-6.252807,7.827583,3.789393,6.323621,-8.201573,-7.653652,-3.834018,5.728120,-3.131045,7.850535,2.693906,-6.946969,6.272197,9.877483,-2.160913,4.583694,7.316810,8.405441,5.220791,9.037347,4.703595,-2.869832,3.788976,1.836863,-6.217155,8.598674,8.330665,-1.919917,1.477350,-9.295195,-8.917282,0.448780,-0.420830],[-6.503509,5.488730,5.003298,3.062184,1.262702,8.051180,-4.308857,4.079456,3.238597,7.895696,6.037668,4.991548,-5.218523,6.589937,4.604248,1.344881,7.083522,4.831408,7.935388,-5.926303,-9.078611,9.080680,3.451703,-1.467450,6.433478,-7.583332,3.321978,-9.432140,0.954866,6.790117,5.938350,-7.010478,5.330653,0.887295,-9.351410,1.508893,8.949399,-6.210999,7.861554,3.476397,-9.148911,4.230080,1.631989,-7.210212,3.963507,8.495183,-9.305187,-7.940016,-9.234619,-6.391070,4.705832,5.385531,-4.486926,-5.557776,-7.521846,6.484857,7.360157,-9.478622,-6.169156,-2.191555,-8.490471,1.588348,0.341532,8.747295,9.713176,7.205959,3.971359,-8.827649,-3.414579,-5.688728,-4.409408,1.369997,-9.603773,3.989596,-0.634548,5.437551,4.974278,8.071677,-1.520042,-5.850109,-7.593689,-9.294200,-9.456294,-4.189033,5.233052,-5.692483,-9.038682,-7.900508,8.899416,6.963978,3.639336,9.327970,3.030006,9.598917,3.575100,-8.118893,9.759019,0.229226,1.371256,-0.918463,-3.536763,-2.466090,6.991775,-1.088053,-8.503616,-8.761213,-9.554412,5.336103],[7.356469,4.239046,-0.195722,-6.512150,-0.488951,-8.053082,6.250080,0.297550,9.946110,-6.778653,-4.060351,8.909507,1.007391,-8.641615,5.688483,7.140738,-8.782938,9.376493,-5.899389,8.299190,-8.121205,-3.422836,-4.067302,9.283159,-9.433505,-5.429635,-5.718202,2.569973,-5.459256,4.279722,5.359027,-5.480444,4.614896,7.853794,8.953705,4.793362,-5.791485,-3.949053,8.208702,-4.889443,4.902461,-2.755264,-6.373755,7.250130,8.923746,9.355239,-3.329424,-9.608406,4.435282,6.125594,-2.164587,-6.099611,9.196418,-3.117449,2.402439,-5.901718,0.016797,-0.092839,-7.952399,-3.831569,7.289034,9.085382,7.659942,1.256854,5.313790,-5.798887,7.332408,-7.943304,1.408410,2.014766,7.762710,6.452382,-2.329650,-1.703377,-2.467303,-5.908607,-3.679151,3.581965,-0.770854,6.798531,7.324583,4.680905,-2.731234,1.270780,-4.770094,-1.654282,-3.765179,1.401281,-8.338253,-1.291012,-8.594833,-3.479120,-1.337511,5.943437,-7.029911,-0.658540,-0.516952,0.223602,5.428686,-5.737162,1.951982,6.013193,-6.662227,2.422330,-4.980468,4.252364,-4.092761,-2.654733],[4.694301,8.930366,-8.493385,-1.956533,-6.009100,9.916224,-1.934337,5.467920,0.801729,-4.988919,7.260248,-1.109767,9.919034,8.600667,8.276230,-7.729037,5.872821,-1.588673,1.044365,-9.958129,-4.963005,3.537994,1.434069,0.566007,6.456157,-5.813165,4.003098,-1.567432,0.430074,-7.592465,0.363013,9.168781,6.891983,-8.908283,-1.312314,-7.489942,4.758365,-6.293350,-2.540404,6.447283,5.848339,5.117577,-5.025333,5.786565,9.931811,-6.810954,-1.036119,3.869675,7.633419,-2.674452,-3.639983,5.213543,-0.521680,-9.884198,7.818103,-7.361502,4.713436,9.054009,7.480232,8.606712,-2.680889,-5.593080,-5.913657,-7.769384,9.136441,7.185833,6.008717,0.387841,-8.602160,9.546710,6.603474,-3.550109,3.377174,-3.839789,-2.495061,5.015327,4.773028,5.427176,1.768554,-2.545759,-1.607698,-2.751550,-1.265832,0.271350,1.801084,-5.456077,-3.314609,5.473249,-2.957035,9.126393,-8.362769,6.877639,-1.548863,8.334629,5.552042,-8.764851,9.416052,0.279238,4.954310,2.248529,1.390219,1.786422,-2.295132,9.485174,4.922401,-7.682455,2.548466,5.332149],[-8.002846,0.865054,-6.778664,-7.091265,-4.916834,0.357296,-1.943620,-3.732098,-9.699879,-2.744173,0.321781,3.417756,-2.293100,-3.145337,-3.733393,0.921172,-4.934888,-7.411463,-3.853689,-1.106465,-0.858811,-3.369439,-3.275165,9.621323,5.873736,-5.276159,7.473747,0.025938,8.407614,-9.882456,0.351057,-9.375134,-4.065326,4.315793,5.553583,-6.673435,4.188346,4.895410,6.282234,5.242284,-6.299604,2.191315,4.070497,5.683998,-1.677646,-7.974830,4.776546,3.525049,2.862316,-4.462355,2.221755,7.092920,-4.166553,-1.503237,4.233013,-0.784191,7.192477,6.791204,-3.747203,6.911720,-0.863161,-0.896336,4.333795,-9.168595,-2.907534,1.426059,4.508666,3.631113,3.068991,5.442593,8.432579,-9.440323,-7.347399,1.370740,-0.704531,1.095514,5.002716,-0.265671,-3.266276,3.137040,-3.556502,-4.639501,3.320588,6.610119,5.593564,7.907403,-1.591249,-6.410714,-1.130463,2.200536,-8.971178,6.765784,-6.965184,-5.493297,-0.843135,-6.632284,2.660320,-1.211377,-0.882947,1.790743,4.730335,-4.884975,7.214592,-9.953910,-7.704071,-7.903294,-5.211637,-8.826211],[-8.574997,0.894776,5.975225,9.637524,-2.605778,8.700731,0.546308,8.111764,-6.389889,-7.713560,-7.933288,9.269273,-0.184614,1.060349,2.288058,6.723665,0.712761,6.479992,-6.382829,5.184712,-9.974428,2.066785,4.819574,-8.326930,-9.493585,7.470224,3.238230,-4.519634,6.411122,6.580892,4.646464,-9.607017,7.737014,6.243963,-8.236845,9.199753,-4.524946,-5.902368,3.285018,5.866938,3.129086,-0.977388,8.859055,-0.308969,-4.691274,7.619347,-6.636980,-7.849307,2.039201,-1.652070,-7.675746,0.001822,-4.465633,9.728263,-1.565031,-7.421562,3.923274,1.595700,0.069123,5.188102,4.602624,7.334812,-5.232589,0.030069,-8.129590,2.776511,3.481137,3.072454,-8.415069,1.729933,0.428011,-1.450896,-0.362693,3.318933,1.261328,-1.901317,6.665030,2.447088,7.885529,-8.630900,-3.450571,8.000846,-4.206891,9.124316,3.290289,6.798017,-3.872708,7.526376,5.352548,-0.274633,-7.686542,4.336319,3.114392,1.682298,-8.789717,-0.403370,-4.919627,-2.009222,-8.188857,3.615242,3.396269,-3.610450,5.129947,-6.249378,-0.298647,2.313574,7.475790,-0.879162],[5.446969,-0.762714,9.233227,-1.686301,-8.005579,-5.336587,5.858523,-2.310847,4.976869,-2.312196,-6.660222,4.293839,-4.878831,1.856717,-7.117185,-8.150226,-9.600858,5.442503,0.106795,4.000582,-3.931440,-7.771899,4.434422,-7.822498,4.582178,6.348152,-0.077224,-2.558037,-3.631889,-1.934823,9.295214,-0.932717,2.366735,-5.715440,-0.302155,-5.705723,3.424425,-5.094894,6.808338,4.206487,1.632199,4.624001,-6.293962,-0.057463,0.279627,9.440277,1.902002,-8.416817,1.575287,5.700763,-5.024065,-0.162389,-0.684581,9.457691,-1.010343,-0.289485,9.630470,7.596354,9.220323,-9.908835,-3.498714,-6.741263,-4.296952,4.123410,6.496108,5.362545,-9.554586,5.674419,-0.840216,9.233973,-1.226026,-5.857141,7.042498,2.631690,-6.492155,6.625666,6.591933,-8.175473,1.745010,6.226063,5.325536,-4.572061,-2.309415,-4.908938,-0.897931,0.516085,-8.375096,2.664314,2.345903,-7.145111,-1.896425,2.515367,8.085789,7.243997,3.635863,0.550880,7.490881,-0.435537,-6.955049,-3.655903,-0.242476,4.399234,-8.186926,-4.018981,4.463898,5.465717,1.123317,2.600300],[-0.413739,9.953873,0.460988,-9.549592,-3.891200,-7.020815,-8.445344,-7.273204,6.212668,9.252740,-3.999664,6.348105,-1.884073,1.875942,9.698520,6.089373,-5.752704,5.770818,2.440052,-8.642431,0.803732,-9.215848,-7.455527,-3.884609,-1.119062,2.529666,-6.633768,-1.162722,7.413031,-9.355224,-7.346832,-1.355224,-2.687322,-7.878862,-9.139236,0.535934,-2.606760,4.126015,-1.332117,-2.769202,3.912797,0.358021,-1.820546,-3.670623,-8.712756,0.959578,-1.041555,3.960474,8.057563,8.597926,-0.970969,3.698720,-5.834977,4.595819,7.361472,-1.717573,8.915534,-2.490369,7.693532,7.912052,7.639170,9.151360,0.737897,-4.406355,-4.510394,-1.883990,-6.127130,5.396804,-7.641926,-8.580024,-6.867645,-1.464496,-6.077332,-0.719248,3.935940,9.899353,-2.198543,3.430570,4.353050,-1.781894,7.589014,4.942451,1.661532,-3.907385,4.254836,9.352824,2.876884,-3.126973,-4.809005,-4.291392,-3.754804,-3.657348,-9.340428,-3.016028,0.688259,6.679104,2.766678,-9.724894,-9.349458,-3.905918,0.107352,8.856563,6.311584,4.338726,-3.882977,-8.928905,9.056280,9.214572],[-3.652277,-2.813844,6.266936,-3.906281,-6.411005,2.414046,3.618103,-1.478798,6.456472,-5.850849,6.859344,-1.743021,6.358933,1.923635,8.354248,-1.656987,-7.786184,0.953123,-6.531496,1.874066,-6.296715,7.093462,-0.605755,1.397711,-2.957947,6.472771,5.886492,9.404659,-0.910557,7.016933,-8.692755,1.197700,-4.597917,-9.811412,-5.200231,0.822433,-6.227692,-5.909406,0.760524,-2.308235,0.275263,0.840460,1.116107,0.808384,5.485931,4.489376,-2.369236,5.826779,1.810398,-6.098126,1.320635,-5.940669,-4.802200,-9.805176,-4.046720,7.506333,-7.689729,-8.372545,-7.813916,9.141027,1.738425,9.551521,6.119145,-2.571412,-1.431100,-3.001366,1.247354,1.784192,-0.781051,9.087580,-9.589856,-4.895068,3.532581,-0.548639,2.646050,-2.489668,-1.191237,-8.009159,-2.181641,-4.582619,4.776572,-7.291129,4.243021,9.778466,9.391184,3.587249,6.769378,4.377715,-3.985217,-3.297905,8.069245,-9.918499,-9.612490,-2.995105,-3.222960,6.572023,6.919312,-2.494323,7.536307,-9.774868,-1.058486,-3.371720,-9.823648,-7.568514,3.639301,-8.874252,2.813896,-9.939962],[8.297858,-0.607848,6.234031,-2.510511,1.213411,-2.291570,-4.138883,-0.792613,-8.809238,-1.465409,-9.460147,4.696270,-3.880908,-4.129126,9.851654,0.598436,8.098287,-4.804285,-2.000904,-5.043219,3.788365,-4.130801,0.060445,-9.033853,-4.373335,-6.601248,6.442092,-7.051024,5.665534,-7.260069,-6.368996,-0.185641,4.678310,-8.207864,3.213931,-7.814306,4.377760,-9.481956,1.105705,-9.835985,0.928137,-0.368855,8.563300,-0.836198,6.629499,0.529055,5.043276,-1.953632,-4.562405,-7.587295,9.911746,-1.054911,9.449433,0.225505,0.769194,-0.885308,0.084306,8.089569,-2.360952,0.580482,-3.866778,5.256017,-1.326811,0.629604,-5.447971,-9.088391,-1.271934,1.642875,5.490895,-1.224233,-8.713090,-8.849511,3.926413,-7.566246,7.906255,5.293758,-5.808405,9.128839,-8.746518,2.539190,-3.357219,-7.531436,-6.484021,5.576443,9.508575,-3.212952,-1.667398,8.820722,4.678217,0.656720,2.729135,-2.187837,5.057183,9.052559,-9.743086,3.207423,-7.779086,9.470118,6.514415,5.405968,-6.093454,-6.000440,-5.860516,-6.444822,-6.388872,-1.852787,3.309281,4.367897],[9.831720,-0.054600,-7.351504,-5.968137,-4.917450,9.539627,-4.714279,-2.429449,7.197885,-3.404488,-9.550681,7.739151,-3.789969,-3.656058,-9.484426,2.368579,-2.061069,-8.132865,0.843580,-5.282085,-3.251848,0.268126,-0.131544,-0.534356,-3.654598,6.224756,8.168942,6.555424,-7.030508,0.195315,-5.325799,-8.187977,8.391597,3.435812,-2.599629,-7.572079,7.264330,8.350185,1.943592,7.720761,-3.987534,-2.858594,4.211494,-5.709941,3.320231,0.638381,-9.811402,6.638362,-4.023651,-6.881183,-8.599630,4.437925,-6.132872,4.004317,-9.361417,8.040417,3.079136,6.497388,-4.235816,-7.766359,7.918606,4.733181,-9.062724,5.901060,0.945382,1.101825,-7.648645,0.694177,8.629350,-1.419987,-3.579909,4.645618,2.364916,-9.809669,-9.248071,-7.662854,-2.619929,8.821982,-6.154514,0.103314,-1.173127,2.755333,-6.426538,2.530723,2.832025,2.513571,0.462864,1.972995,7.690982,-3.712198,-7.086570,-0.273749,-2.565937,1.356437,-7.555814,-7.784432,8.216092,-8.608242,2.680851,-8.217051,2.072264,-9.574046,-5.077536,-2.915715,9.988833,9.202809,0.287462,4.683734],[2.150236,-8.419268,1.393845,-3.503864,-8.296071,-0.536645,-6.747865,-4.809528,2.845037,-7.512411,-5.541217,5.370335,-7.749693,3.920141,-5.721097,9.544360,-2.855346,-9.972275,6.027456,-8.687410,9.342944,6.309848,2.463236,7.584505,-3.043931,-7.258556,-0.518290,-3.940306,-7.350929,-7.774125,-3.365427,-8.532014,8.179664,5.216893,9.266462,-7.891561,-7.623052,-4.807142,4.695451,-1.990949,-6.238011,-8.345955,2.604905,9.364982,3.953785,-5.343102,8.225914,-9.813558,5.337144,3.012105,4.753226,7.802870,6.261799,-5.533697,-9.224826,-0.868342,3.022298,2.279297,-6.509582,0.433430,3.961937,3.223088,-9.066820,3.569117,4.197529,4.664070,6.384200,8.629989,-0.290365,8.135444,-6.418656,1.368693,8.959863,-7.318064,0.105975,9.262174,-0.578112,-7.615979,-2.877835,-1.951002,-5.624798,-0.145043,1.855565,3.479788,4.713854,-7.903092,-8.836662,-4.440396,-5.735556,0.174393,-0.517273,-9.833117,-1.709990,4.229463,1.422786,-4.765666,2.926374,7.253035,-4.937696,5.238085,0.954879,-7.258143,2.891277,3.117863,8.984600,-0.430691,7.138837,-8.009151],[8.762685,-2.527254,-3.110131,-2.476582,-5.399090,-8.273606,-3.315876,-2.158256,4.334139,-3.995319,7.650690,-2.742673,-3.908111,-1.012965,-1.822497,9.211687,2.740698,-9.291563,9.418503,2.143232,-2.705203,-3.424820,3.828505,-2.065643,9.371672,-4.039164,7.547448,-5.510701,6.562306,1.374653,8.785264,5.968388,3.120795,-0.707962,-1.820766,-4.466333,4.044740,-3.253519,2.033501,1.363418,0.810250,-3.541529,0.318968,-7.697568,3.556077,-7.855557,7.571752,3.536400,4.666225,3.841259,-9.104853,-5.217046,-0.967716,-3.066720,7.323841,4.717302,0.549794,3.438701,-4.258800,4.025448,-1.762224,-6.567363,0.208643,-3.980512,-9.858405,2.357838,5.312793,-7.869648,-0.391425,2.920087,0.869472,-4.126705,-2.336366,5.174631,0.743632,9.332050,-6.346827,9.603391,3.214669,-5.260574,0.853410,-5.757643,3.940420,5.587417,-7.261395,7.516877,3.069502,-0.366496,-9.379477,-5.081716,8.536314,1.126848,2.923206,7.772986,-2.197759,-8.249888,3.056432,-5.240531,-0.767914,-9.252092,-9.990348,-0.632988,6.951437,-1.281470,-0.938100,-0.077946,-6.357073,1.431125],[-2.050192,-0.436660,-7.654538,7.757322,-6.676551,-7.217481,2.954126,9.798674,-9.943821,9.314956,-5.933576,3.613209,-8.123749,-8.696879,8.423987,-5.207521,0.573485,-2.140815,-3.724943,0.358745,8.004669,1.104507,7.441199,2.802358,-4.425460,5.532254,-9.038748,8.479358,-7.937142,9.259526,8.427279,-7.151643,-5.033377,-2.393916,-0.148208,3.650659,6.540356,-7.114144,3.935162,-2.532672,-5.995952,9.978832,8.775164,9.768882,-9.796286,4.374897,-2.379284,-9.428924,7.031310,0.395064,2.626234,5.977356,3.293501,0.490541,1.318117,-2.525944,9.340146,-4.809813,-6.075164,4.991485,-2.224687,-9.288012,-1.930811,-9.809384,4.150189,8.381754,-5.371330,8.796153,-5.798327,0.906709,5.364618,1.818280,1.344675,0.141845,5.709663,-1.618541,4.550659,-4.277810,-1.648327,9.437877,7.510458,-6.208078,-2.555172,1.814366,-7.254477,-8.287431,6.863485,-0.357869,-8.961027,-2.906365,-6.315979,1.295877,-5.857817,0.960298,-0.584312,-8.502025,1.631109,-7.988845,9.595527,-3.094852,-1.502475,6.522181,-1.562838,-4.958378,6.935790,-4.619895,9.947100,7.516272],[-7.664187,-9.229503,-9.967605,-3.786414,3.883999,1.202735,-8.777891,-1.826718,-7.084959,-8.513347,-8.718022,1.867352,-9.981709,2.226852,-0.444279,6.529348,-1.134368,0.498828,-6.833792,-6.615172,-6.403522,-4.079554,-7.361348,7.307078,-5.121862,5.122516,-4.029999,-1.981893,0.850235,8.670326,6.085817,-9.868698,-8.050876,-2.847168,8.049033,0.118569,-4.216627,-9.933375,-6.347152,9.020307,-6.219088,3.703983,-1.939472,4.507286,-4.549301,9.224748,5.500653,4.745942,4.389809,-0.280242,-6.850673,8.128033,-7.182905,3.309111,8.634441,4.188862,-5.678404,3.229684,1.676010,-0.139581,2.754622,5.093109,4.069946,-8.901914,-0.365143,8.379732,-6.722169,8.374412,-2.788521,-9.166182,1.874426,2.723964,-9.579553,-7.885821,0.496856,9.403473,-3.867793,6.989212,4.589199,7.618851,9.704568,9.816934,1.414884,-7.756050,5.999966,8.265768,-4.850375,-8.748097,3.804707,-6.897010,2.291647,6.839387,-7.791100,4.890805,7.238606,1.283015,3.345149,-5.386620,9.320392,7.544904,4.839593,-9.001890,1.414093,9.868347,7.361611,-8.917160,7.708199,4.473001],[-2.823002,-9.687014,9.815036,-8.379161,-5.015715,6.970276,5.536734,-6.317954,5.771019,1.057662,-5.958461,-0.370721,-8.672242,-3.092221,-7.651294,-7.189877,5.192136,-7.613437,-5.396036,4.659324,-9.631435,5.891434,7.864498,-0.356748,-4.023902,-1.463301,-6.355798,-5.786601,8.065998,1.227578,-2.827971,-8.828451,-9.174585,-8.139625,-5.147750,2.484126,-9.532975,-1.839137,-0.546478,1.316141,-0.598964,4.942478,-4.798763,-5.547979,5.882268,8.955333,1.376874,5.913380,6.847657,-6.369502,4.801150,-1.188878,-1.168797,-2.162248,1.912275,5.801884,0.437438,5.816963,9.920725,1.765186,8.808059,-4.475595,-5.986355,-8.164321,-5.024784,8.351215,-8.030973,2.870614,3.524313,7.059661,1.989719,-6.976726,-6.752803,-1.566084,0.755883,-8.715557,7.867474,7.575730,-9.023358,9.690257,7.209069,-4.526338,-2.140734,-3.492558,3.862884,-9.849036,9.902727,2.069736,-2.513400,9.832768,5.727661,-0.087049,-9.626185,4.571110,6.854156,7.866635,8.252382,-5.108483,-4.721580,7.588390,6.357373,-3.791524,0.397935,-6.415083,-5.825767,5.778989,8.201961,-0.092670],[-4.998861,-0.097493,-4.167668,-6.456666,0.812995,6.501942,2.025425,-7.104907,-0.980174,2.876473,-4.822451,-2.706512,3.203784,0.907725,1.553427,9.501876,9.183952,-3.822068,1.795681,2.548664,4.624999,-2.091233,-4.899150,9.182167,-9.267132,-1.286951,-7.307203,6.917973,-8.201539,-8.426457,-1.849410,8.341478,8.050080,1.720786,-6.146305,-5.164089,7.698921,0.386037,4.190293,-9.420652,4.693462,-7.856526,7.463714,-6.894178,-9.145615,-0.763699,-2.910527,-0.590275,1.582556,-9.995693,7.444389,2.921860,-5.351792,-6.161345,-6.823376,6.212155,7.401982,7.742952,2.601547,-2.614568,5.354310,-7.916362,3.860224,9.344593,-4.096955,-2.685683,-1.551040,-8.030260,-3.235501,-4.687049,6.802971,8.169951,-7.080758,-4.645036,-0.926397,5.601746,1.824619,4.330412,7.993367,4.937135,-9.558546,9.986001,3.128694,0.533643,-7.153830,-7.316817,1.333924,-3.245643,8.302778,0.318807,2.352591,5.649829,-1.252885,7.672068,7.070478,2.625229,0.077695,1.814087,-7.628002,-6.699817,-0.863806,9.300862,-9.520051,4.308011,-7.361158,3.791495,-3.039124,-0.234897]], dtype = "float64")#candidate|9202|(20, 108)|const|float64
call_9200 = relay.TupleGetItem(func_7682_call(relay.reshape(const_9201.astype('float32'), [11, 10, 12]), relay.reshape(const_9202.astype('float64'), [2160,]), ), 5)
call_9203 = relay.TupleGetItem(func_7685_call(relay.reshape(const_9201.astype('float32'), [11, 10, 12]), relay.reshape(const_9202.astype('float64'), [2160,]), ), 5)
func_4124_call = mod.get_global_var('func_4124')
func_4129_call = mutated_mod.get_global_var('func_4129')
const_9211 = relay.const([-1,-8,-4,1,4,-2,6,7,-2,-9,10,-9,1,10,-5,8,10,7,10,7,-9,2,7,-1,10,8,-6,-4,5,6,1,-5,2,4,-10,-6,7,4,9,5,-7,-1,3,1,9,7,-1,-10,4,7,-2,3,-10,7,4,9,6,8,5,-7,-7,4,-7,-3,6,-7,2,10,-8,-3,9,-8,2,-4,3,3,6,-8,-10,5,2,8,1,7,-7,2,2,2,-5,-3,8,8,1,-6,-8,1,-3,5,-7,3,-1,-9,-6,7,7,-10,5,-10,6,1,7,8,-1,1,-3,1,1,9,2,9,-7,6,-8,10,2,-10,1,6,10,9,4,-9,3,2,-5,7,-9,6,1,1,-7,-2,-10,-2,8,4,-3,-8,-1,4,-3,-10,7,-10,-1,-4,2,7,-6,2,10,7,9,4,8,-7,-10,-1,-2,7,-2,2,-9,-7,9,9], dtype = "uint16")#candidate|9211|(176,)|const|uint16
const_9212 = relay.const([1.584209,1.883813,5.862983,-2.191058,0.656310,-3.161308,-1.758639,-3.544878,-8.126495,1.158844,5.799948,-3.635061,-9.537321,1.868157,-1.754076,8.543211,7.873474,7.979805,-8.145583,-2.699574,2.356810,-3.267101,1.192372,7.875093,-0.358503,7.992386,8.576080,-9.598747,5.192433,-8.716023,-1.242077,5.991349,-2.640665,0.610740,-9.799150,3.494104,-6.824470,2.268588,-3.141820,1.595918,6.747821,-0.738259,1.701959,8.348993,-0.802636,-1.392355,7.925732,-8.725523,-5.008825,-5.180247,2.508342,-6.409329,-7.938388,7.170722,-2.299415,0.011628,-7.382596,0.467686,-0.067252,-1.208935,-5.877478,6.714892,3.400921,5.780112,5.823230,-9.232791,3.164793,1.290330,6.793402,-9.051970,9.474989,1.139358,-5.912556,6.351950,9.055792,6.485689,-3.220573,3.568484,1.260399,8.119628,6.096550,3.254359,-2.544459,-2.887759,-4.926212,-4.639545,-5.320196,5.790003,-6.573484,9.033290,-8.211194,3.876038,2.850336,-8.556937,3.061013,-9.815441,-0.828110,-5.599801,-7.975915,-7.472621,3.578262,-0.639394,-3.367713,-1.988145,1.607665,0.082064,5.645905,-1.966811,3.160973,9.504943,8.945190,7.476076,0.669508,-0.114397,-4.962106,-2.603502,8.765544,1.946170,-9.448045,-4.373364,3.459688,-4.601182,-9.160006,-1.822701,4.338645,2.415005,1.562543,-9.560434,-9.061569,-3.057492,5.327824,-4.777919,5.633692,9.304636,-8.167351,7.077020,7.905401,-4.109479,8.370175,1.181433,-1.420960,3.313016,-7.521056,-5.269109,-6.866617,6.289592,-7.020898,2.625862,-5.010454,7.671874,-6.606193,-0.603822,-6.384642,-0.982741,4.433932,3.085278,-5.334525,5.045470,-9.294564,0.337610,-1.169056,1.100326,-5.149461,3.572431,7.084900,8.867769,9.575819,7.005892,-9.026931,2.428222,2.511048,7.061343,0.321259,-0.570167,1.437445,1.210498,0.086170,-8.786867,6.650240,-4.163324,-0.332594,-2.791461,3.642425,-8.126820,0.608822,-9.412676,-6.885963,-0.867964,-9.811577,7.761966,-3.285889,-2.299001,4.396254,-9.291289,-4.246325,7.387510,-8.437852,-5.498797,5.352187,-8.324068,4.278058,-5.196267,-7.102398,1.927986,5.322728,-2.011820,3.772384,6.954439,1.555229,4.392473,-1.615534,5.779337,3.467040,0.809970,-4.895526,5.794439,-6.267502,8.942526,6.130807,1.541781,8.450612,-6.454516,-3.425421,-3.945879,8.826526,3.194264,-2.341404,1.552766,4.474179,4.827376,-8.158503,0.604127,-4.629081,4.878265,6.490942,-5.400496,1.183241,-6.213077,0.928932,7.928655], dtype = "float64")#candidate|9212|(240,)|const|float64
var_9213 = relay.var("var_9213", dtype = "float64", shape = (112,))#candidate|9213|(112,)|var|float64
call_9210 = relay.TupleGetItem(func_4124_call(relay.reshape(const_9211.astype('uint16'), [2, 11, 8]), relay.reshape(const_9212.astype('float64'), [240,]), relay.reshape(var_9213.astype('float64'), [112,]), ), 4)
call_9214 = relay.TupleGetItem(func_4129_call(relay.reshape(const_9211.astype('uint16'), [2, 11, 8]), relay.reshape(const_9212.astype('float64'), [240,]), relay.reshape(var_9213.astype('float64'), [112,]), ), 4)
uop_9224 = relay.sinh(uop_9190.astype('float64')) # shape=(3, 11, 4)
output = relay.Tuple([call_9200,const_9201,const_9202,call_9210,const_9211,const_9212,var_9213,uop_9224,])
output2 = relay.Tuple([call_9203,const_9201,const_9202,call_9214,const_9211,const_9212,var_9213,uop_9224,])
func_9235 = relay.Function([var_9213,], output)
mod['func_9235'] = func_9235
mod = relay.transform.InferType()(mod)
mutated_mod['func_9235'] = func_9235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9236 = relay.var("var_9236", dtype = "float64", shape = (112,))#candidate|9236|(112,)|var|float64
func_9235_call = mutated_mod.get_global_var('func_9235')
call_9237 = func_9235_call(var_9236)
output = call_9237
func_9238 = relay.Function([var_9236], output)
mutated_mod['func_9238'] = func_9238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9174_call = mod.get_global_var('func_9174')
func_9175_call = mutated_mod.get_global_var('func_9175')
call_9249 = relay.TupleGetItem(func_9174_call(), 0)
call_9250 = relay.TupleGetItem(func_9175_call(), 0)
output = relay.Tuple([call_9249,])
output2 = relay.Tuple([call_9250,])
func_9257 = relay.Function([], output)
mod['func_9257'] = func_9257
mod = relay.transform.InferType()(mod)
output = func_9257()
func_9258 = relay.Function([], output)
mutated_mod['func_9258'] = func_9258
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9336 = relay.const([[[-8.666724,4.342485,-7.660384,5.619279,2.048271,-6.412313,6.851807,-5.462561,-9.842691,-3.909187,-7.871864,6.025569,4.932760,3.243331,-6.006909],[5.253767,5.156335,2.329163,2.344696,7.950205,-7.280610,-3.535322,0.629581,-3.763328,-4.431290,7.806521,0.892234,3.450917,4.805450,6.218273],[6.170511,-9.476889,-5.912686,-9.397676,7.984130,-2.262581,-5.903186,2.234078,3.438419,0.680522,-7.084464,-8.742476,2.460368,0.142356,-5.564858],[-7.395868,5.494117,-8.284357,6.559488,9.961082,-3.703606,-7.105437,-9.151353,7.386581,2.062097,8.567887,5.103569,6.237414,4.481971,6.119346],[0.131588,-7.484216,6.934677,-2.307028,1.884158,2.905147,1.831206,-7.416375,2.939907,6.079614,0.084609,-1.554152,-6.476581,0.622846,-7.453598],[-8.315540,9.504832,5.153866,4.807446,7.940100,2.704748,5.581217,-0.304172,9.574971,6.257153,-2.986437,6.390889,5.764961,-6.643604,-9.106268],[9.703251,-8.462847,2.387373,6.679052,-2.317947,3.877052,4.482040,-3.979235,1.978736,3.259847,7.270352,8.583600,7.948895,-0.324647,4.139982],[-2.622353,8.886312,7.994290,-5.497415,-6.932169,4.466264,9.082359,-6.255555,-8.184473,6.044507,-4.514082,0.748746,9.016833,-8.721918,-8.639223],[-9.861974,-3.331248,-5.245365,-0.521879,9.861085,2.009593,0.554688,8.023726,-8.855610,7.611357,-6.324196,-1.465997,6.110828,-3.357888,-7.395653]],[[1.819797,6.849967,-8.221927,-6.904989,5.028685,7.219993,-9.122676,1.501561,-9.472804,-8.942485,0.994662,1.533647,-0.632319,2.370978,-9.697119],[-0.673990,5.656453,-0.558505,7.907654,-8.607517,-1.622596,7.861333,-6.126097,-3.040692,-6.361694,-8.253457,2.623894,-1.988050,-4.417269,-6.914832],[5.042909,3.661783,7.246755,-7.972539,-4.066748,7.479794,3.941258,1.108586,6.597890,-2.048508,-0.017179,8.060102,2.752340,-9.575673,6.336123],[-3.031953,8.366995,2.077277,8.890309,2.028202,8.264682,-3.877797,4.721242,-8.193436,-8.209008,-0.381350,-0.936760,-7.107330,8.633134,7.686956],[-4.998333,9.046676,9.543014,-2.639561,6.881871,-6.676768,-8.351209,5.402371,3.027603,-2.036650,-3.688018,-4.536639,-8.617592,-4.221029,6.077062],[-3.840104,-5.556537,3.126952,4.456577,-8.184698,8.364543,2.234584,-1.870697,0.710258,-3.865489,5.898837,6.197640,6.952337,-1.440710,7.834219],[-8.277645,5.912270,-1.346647,-2.129604,-5.099461,-9.927782,-0.314953,8.515295,-4.442535,-9.833870,-2.299576,2.557889,2.067459,7.832738,7.193589],[-8.796918,5.556828,-9.791963,-7.982585,5.715367,6.448821,8.148420,2.416640,-6.395805,5.392895,-7.224830,-0.339936,3.927491,2.635394,-7.788396],[-2.721328,-9.670742,-2.652836,8.168554,3.000935,-5.389367,-1.693516,-3.342332,-5.004055,7.663429,4.924594,-7.906638,3.824465,-0.552112,-1.005116]],[[0.756777,3.202240,-0.198081,-1.182962,-4.482302,-5.045199,4.981412,-7.683322,-3.636831,-2.689378,1.878711,-8.381919,-3.480220,3.960625,-9.934039],[8.749128,-7.615213,4.052499,-6.829833,-7.146101,8.459176,9.500558,5.368504,2.449744,1.940107,8.753993,6.851638,-4.382000,-8.227095,-4.177373],[1.385838,-7.570293,-3.385235,0.416893,-6.641128,-1.298520,-4.854096,-6.843140,8.914059,-0.434924,0.985308,5.260752,5.797324,-0.115845,-3.318203],[-4.628362,-5.763206,1.038308,-4.874165,-4.344542,9.236850,-3.530204,-8.602882,1.318433,-3.624119,-5.936868,-7.449508,5.001013,6.280850,8.715637],[-7.537537,-6.887177,-4.104094,-3.439202,-8.132355,9.333571,5.969666,4.299293,-9.526608,6.006921,-3.914476,7.177482,-3.058512,-6.454752,-3.551935],[9.210913,0.759754,-5.114764,4.842563,-9.377614,2.950665,0.369407,-8.683583,-2.593275,-2.938121,3.760585,-2.259875,0.512674,6.903516,-4.525615],[8.868376,8.130915,4.342943,-8.143514,-9.326054,-7.223705,1.694525,-7.775035,8.203895,-3.506378,-3.183550,-9.909433,-4.667673,1.895052,-4.389914],[-4.396168,8.953551,-7.729431,2.679391,-1.702978,-1.177410,7.693052,-5.010116,1.950876,-4.566155,9.763616,6.669904,6.110561,2.148480,-0.210149],[7.688357,3.376052,-2.442043,9.310094,5.191908,0.336360,4.775675,2.061352,-2.024390,6.267495,-4.951330,9.814636,-9.404109,-4.848313,-1.763893]],[[3.230703,0.504529,-6.475829,8.806976,3.132535,5.195276,-7.306429,4.013806,8.447920,-6.020585,-7.434546,8.283428,-3.597674,0.522682,-9.027637],[8.087027,0.454461,-9.443117,-0.916526,6.206681,-9.948872,-3.755776,9.933467,-7.165704,9.027045,6.498617,-3.212222,-5.734793,9.361102,9.959083],[7.738298,0.795473,6.563586,-7.987064,3.365622,3.252312,2.731837,-8.064766,5.959409,3.469428,9.555464,-5.725142,3.081975,3.096250,-4.800107],[-1.055884,3.876295,-3.869628,-7.982979,6.444304,7.734218,1.196158,-2.126213,4.936006,6.114714,7.875837,-7.094027,-9.005803,-4.389093,-1.527489],[-3.774338,-9.514141,-5.818683,-8.800108,3.657197,0.123485,-6.488404,3.929267,-3.150581,-2.319334,5.978349,4.208658,4.772759,-5.188536,4.372358],[3.620911,2.264702,2.195378,-8.355623,-7.787017,3.255776,-4.218459,6.844885,1.964207,1.481749,8.255262,7.258663,-6.156041,-7.618154,-9.786060],[7.044174,4.336633,8.407674,-3.747147,-1.736880,6.277069,-0.427093,0.855090,-9.075655,-7.509073,-5.276919,-8.331753,-2.023578,-4.485534,8.457263],[-5.198971,-3.181305,-7.344952,-6.680764,-4.250669,6.499153,3.810270,8.152631,7.769126,9.831658,7.023917,0.757540,3.116184,-2.388663,-6.074782],[-7.067274,-2.562753,-1.925779,-5.032135,-0.221466,7.268626,-8.207699,6.971532,7.445996,8.868740,-0.213756,-2.675614,7.225753,0.212576,-6.921240]],[[1.247820,-0.077929,4.639955,-1.271695,-1.386820,-5.409473,6.170849,-9.970094,1.132343,2.907620,-8.699932,0.151594,-8.762501,-9.504174,0.092728],[7.614625,9.018678,-5.050982,0.587028,-0.604833,6.642710,7.155623,4.896681,-2.085659,-0.280401,-3.508548,5.462658,1.645066,-5.237310,-8.244724],[-8.361816,-5.309387,3.353546,3.788836,-9.675301,-4.930285,-5.836644,-7.562207,4.214453,-6.509171,-7.759645,-6.485974,9.358321,7.241088,2.503260],[6.957154,-0.016697,3.283771,-4.100679,-2.858851,-4.586432,4.805177,-0.015521,3.624171,-5.183450,9.831778,-9.470317,-0.240645,-5.680577,2.994275],[7.005895,4.054721,-3.190262,-1.019547,0.127668,8.290970,1.319651,7.755888,-0.924844,-0.580883,-5.597757,-5.925871,4.621382,-9.072015,-6.768336],[-6.054644,-9.042468,9.621676,-5.948633,-1.962749,-1.307166,-4.083201,-7.272853,-8.208769,-4.013884,1.648209,-0.429232,5.211185,-4.897841,8.829171],[1.263608,5.208842,-6.737802,-0.837576,-3.751721,-0.186356,6.223363,-1.451522,-4.702891,-2.225160,4.915203,-7.906954,4.441972,-6.283383,8.644356],[3.394313,8.277641,2.816838,7.785262,-9.150117,-9.344849,7.551822,2.057392,4.532435,-5.991915,-8.093580,1.066682,5.111228,-0.296845,-2.409470],[-7.366550,-5.193409,-1.151136,3.720566,-6.710520,6.787431,-6.740225,-7.473005,2.446708,-4.890469,7.455544,8.038490,9.518257,-6.216416,-8.271094]],[[8.628281,-2.642930,-9.070777,3.547139,-1.063801,-7.487738,-4.725953,-3.303871,-6.836394,-3.231057,6.327028,-1.161850,-7.366894,-0.523595,5.164165],[-1.190538,7.936204,9.175716,2.256967,3.687682,-0.435236,-7.999758,-8.084284,8.548438,-5.157707,0.093463,6.778250,-3.755390,8.162504,-4.934905],[-4.818883,-6.464022,8.862265,3.484864,-7.595806,6.587342,-2.864117,-2.473109,-1.801929,-0.488061,6.439082,2.071562,6.311488,6.180540,-0.536529],[4.148821,-9.956880,-8.074569,4.032883,-5.177221,-8.874411,-4.573242,2.418311,9.398981,-3.019613,-6.966889,-4.747447,7.126836,-9.148340,-6.719041],[-2.791413,2.976273,1.260064,8.416068,1.965762,6.897444,4.084022,6.273195,-7.218822,-9.827109,-6.370532,-1.572506,-2.654792,-5.718120,-4.969983],[3.663515,-9.187290,8.045781,-3.806756,0.261047,2.496318,7.077327,-5.198216,4.837392,-0.981575,-1.069947,5.025615,1.822897,-8.570105,-6.682622],[-6.766670,5.945506,-3.931145,7.326844,1.814740,-2.250124,9.929129,6.673263,-1.011175,-1.920578,1.675205,6.993404,1.117240,-5.009676,-5.204276],[3.605153,2.112500,-4.753526,3.385795,-1.596226,-6.557242,2.675613,3.174628,1.523130,-3.011577,-2.891275,-3.427549,-6.716955,-6.145443,9.822157],[3.188896,0.249200,-9.637903,-5.806350,3.704107,-4.346734,8.672036,6.973266,8.590048,8.994087,-6.760554,3.874237,2.442214,3.067566,-9.435688]],[[5.532830,5.912074,-0.648484,-7.364340,1.184439,-7.551899,9.808570,-5.604015,-4.625881,2.247319,7.061160,1.533935,6.620983,-2.877511,-2.874816],[1.396626,-7.307454,-7.872008,-2.724812,5.896420,4.559302,-6.855145,9.656695,1.758796,-4.272171,5.441612,4.525662,-7.264489,-7.684276,8.903891],[2.248129,-8.330652,3.883855,6.460659,6.189755,5.743242,-4.070824,6.138185,-3.077213,9.557430,7.029879,-4.773837,7.906913,2.179598,7.432742],[-2.062451,-1.116483,-8.359492,4.255587,9.980686,-5.340693,0.535423,-1.713640,1.301089,-8.514283,1.784683,9.427835,-0.495231,-7.141723,-4.154012],[-1.796601,5.450629,0.610633,-6.297315,3.791338,9.068691,-0.371557,-4.842004,8.594895,-0.241390,-2.951950,-9.328933,3.750044,-1.583076,-7.368642],[-1.730594,3.628919,6.908724,4.059413,6.005922,-1.500641,6.421798,-9.088388,3.957256,7.979602,9.831858,-2.489120,2.387377,-3.591185,1.612410],[6.336039,4.845236,8.297017,2.929040,-3.985106,8.315098,-5.241358,1.462167,-0.524431,-2.633264,-1.112682,2.732247,1.250199,9.549655,-2.673465],[2.344331,-7.736790,-3.417327,8.450366,-3.001902,7.143813,-0.255194,-3.148234,-9.522891,6.595767,-4.497100,-2.006947,-0.437879,4.359901,1.578729],[-9.379570,4.849138,4.878771,5.043040,3.777004,-3.777368,7.324036,-5.771027,-4.486675,1.231892,-3.030307,-8.215859,9.596402,-8.134551,-8.275515]],[[3.631876,-7.511961,6.796300,-2.981806,3.535409,-7.899022,-8.090273,-7.083663,-5.092076,8.063395,-8.896329,7.400479,-3.842554,2.723583,0.617962],[-1.735391,9.774203,9.447797,-1.420106,8.909056,-1.058276,9.444240,6.090562,9.865728,8.083484,3.130015,-7.915613,-5.054597,-7.350604,-1.646060],[7.940562,-3.286151,5.790537,5.508535,0.090014,7.911667,-3.117516,5.028235,8.788250,5.637455,4.346719,-8.065929,-8.590893,0.705719,1.262386],[-4.548389,-3.450115,1.587009,5.375313,-9.576351,7.334861,-9.147142,-6.814422,5.297391,-9.364603,-7.368386,-0.966761,-1.312215,3.046240,0.184546],[8.994547,6.108870,-8.666380,4.364973,0.072853,-7.827010,-8.062621,3.464832,-4.983349,-1.122683,7.005575,8.855670,0.429535,-5.207318,3.766720],[6.429380,-4.715207,-0.717767,6.197289,-8.986052,6.750291,8.221860,0.490047,3.442917,-8.593251,-5.980135,-1.725186,6.455700,9.836696,0.264450],[2.410992,2.974235,6.088176,-7.616105,-5.795311,-9.437023,7.343800,8.782948,-5.835880,9.112825,-7.472110,-1.496689,9.305646,-5.313839,-4.339479],[0.987542,2.042834,2.355159,-3.372086,7.471539,-4.747639,4.003692,-6.800954,-6.322164,3.546226,0.698625,4.850179,-8.305785,1.190196,-8.253167],[-5.817545,1.399472,-6.005622,1.165406,-7.611162,6.742432,-0.949028,-0.836590,7.741090,0.153523,-6.775954,-0.570828,-3.482903,-8.900563,-3.652755]],[[8.744450,-2.079524,-7.732591,1.371908,-4.956581,-5.283558,-9.516190,-1.943460,0.654180,1.850329,-2.896072,5.936733,-2.126205,0.628665,9.069522],[2.371475,0.585310,2.652642,-1.537113,0.244880,-1.355776,1.576880,-8.971858,-6.011048,7.975458,-8.327729,0.149407,5.043632,4.120419,9.141596],[-2.552090,-0.816565,-8.279016,3.947906,-4.902432,6.008178,-2.780593,-2.845919,-8.443796,4.992466,-3.676999,8.695893,9.975936,2.406144,-1.826168],[-9.809130,8.866438,-2.387998,-1.708177,7.117664,-3.880471,-7.122929,7.451866,3.977896,0.527457,7.289993,-9.914210,5.159815,6.427335,-2.982035],[7.597737,-3.719522,3.716911,4.626941,-0.059275,9.369467,4.804483,-8.867437,-2.133685,0.348006,-7.002194,8.166363,2.680640,-3.288781,-6.701258],[-7.678125,4.598526,-7.066316,6.876222,3.560182,-0.789131,-6.218126,-2.634063,-7.338914,-0.158921,-6.155391,4.631887,9.372591,-6.071878,8.773716],[0.987661,7.903968,1.591581,3.720560,5.687159,-7.552505,6.199541,3.305987,5.223801,-0.953168,5.753092,-8.419019,9.483075,-2.465759,-9.258003],[-2.533342,8.842053,-8.691750,2.893438,-0.995829,-7.261166,9.075343,3.761394,8.515741,-7.327121,2.117787,-5.422457,-2.914599,3.454799,-8.952279],[8.843153,4.485629,-3.460840,8.257634,-3.783813,-3.974685,-6.316862,-4.488015,-6.794083,9.476024,-9.706034,4.378084,-8.595233,-6.023966,-2.582249]],[[1.550689,2.239723,-5.693920,7.055894,1.788823,6.534599,-2.336751,6.257077,-1.055818,2.970941,7.373021,-5.246358,-0.441669,-9.685429,-1.887515],[2.032573,-2.815064,9.493621,-7.148890,-3.337003,-0.196869,5.089455,-5.787442,0.320731,7.730636,-6.954107,-5.320445,0.714633,9.629780,8.871681],[-0.248732,-6.906663,1.508188,9.937157,-5.095941,-7.770527,-1.037595,9.353256,-8.806429,3.539311,4.663776,-1.009023,-9.974615,8.637056,-3.328518],[7.629007,0.296500,0.648247,8.022567,4.815874,8.770600,-4.599994,7.942799,-0.082769,9.517789,1.841805,9.872393,-5.837081,1.978434,1.244338],[7.277044,-6.495924,-2.963343,5.837519,5.863836,2.135068,-9.528725,-6.533037,-3.237302,-6.732162,-6.975972,-2.806966,0.365007,6.404777,-1.882727],[-2.028170,2.159265,1.892092,5.609361,-6.582109,1.935739,5.627244,4.490077,4.784991,-9.502729,2.305570,-6.657132,-6.972731,7.884111,-5.349057],[-8.896918,7.117345,-6.717139,-9.676317,1.057172,-7.874946,-2.288127,0.170517,8.746631,5.946923,-5.204040,-1.164653,0.632240,-6.648651,-7.324910],[-7.641785,-0.195818,-9.991874,-2.257161,-0.824806,0.639556,-5.688357,-4.596025,-1.385686,8.092190,4.327693,-1.186703,-9.962354,-8.016103,-6.939639],[4.588434,0.509421,-8.573428,-1.546766,-6.397539,8.350398,2.362777,-7.849372,5.897981,6.655368,-2.673306,-8.943954,-5.846562,-5.432336,4.600793]]], dtype = "float32")#candidate|9336|(10, 9, 15)|const|float32
uop_9337 = relay.tan(const_9336.astype('float32')) # shape=(10, 9, 15)
bop_9339 = relay.divide(uop_9337.astype('float32'), relay.reshape(const_9336.astype('float32'), relay.shape_of(uop_9337))) # shape=(10, 9, 15)
func_6075_call = mod.get_global_var('func_6075')
func_6079_call = mutated_mod.get_global_var('func_6079')
const_9347 = relay.const([6,7,-6,-8,9,-6,-1,10,-8,2,-3,3,-6,-3,-7,-4,-10,7,-7,10,-4,-5,-9,8,3,9,3,-10,-10,7,-9,-2,-5,6,-3,-7,3,2,8,-9,-2,-5,-2,-3,7,-2,2,-7,3,8,-2,-3,-9,-8,8,8,-6,4,-9,2,6,2,8,-6,5,-6,-1,3,-5,6,6,3,8,-2,4,-3,-8,10,-6,-6,2,-7,9,2,-1,-7,-4,-3,-8,9,8,2,-7,-1,-3,-4,-7,6,3,1,-8,-2,-9,-7,7,8,-8,-1,-5,5,-9,2,2,-1,-8,8,3,2,-5,8,5,-9,-6,-5,3,10,-3,-8,-2,1,-3,8,10,-7,-9,7,9,-6,-6,-8,4,-3,-2,-1,1,-4,10,-10,2,-3,10,-6,6,6,4,3,3,3,8,-10,4,3,8,4,9,-2,7,-8,9,-5,9,10,-5,-7,-9,-3,-5,-8,-10,-4,10,-7,-5,10,-10,-8,4,-1,3,5,9,4,4,6,4,2,7,9,-8,-5,-5,-9,10,-1,10,-4,3,2,2,1,9,8,-5,-5,9,3,-4,4,-4,9,-8,-4,3,-8,5,10,3,9,8,-2,5,-10,8,3,6,8,6,-5,-8,-5,4,-9,5,4,-2,-10,-2,8,-4,-3,-2,4,-3,-9,4,3,9,-5,-10,10,7,-10,2,-2,8,7,-6,-2,-2,9,-4,5,6,10,1,9,3,1,-9,4,-8,-1,-1,-1,-3,2,3,-3,-9,5,6,-2,-5,-4,3,4,-8,6,-8,-4,-9,8,-6,-1,3,-9,-1,-8,3,1,-2,9,-9,-1,4,-8,4,5,9,6,-3,3,-5,2,-4,6,-9,-6,-10,7,-2,6,-3,5,6,-3,8,7,-6,-1,-4,-4,10,3,-7,-3,-9,5,10,3,-3,7,4,-3,4,1,-1,-3,9,2,-8,4,-5,-9,-9,1,3,-1,3,-9,10,-7,7,3,-5,1,-1,1,2,-1,4,-2,1,4,-9,-2,-5,1,8,9,8,-9,4,5,1,8,-7,4,6,-3,-3,6,-6,1,9,-7,7,-6,-7,-7,-8,-6,5,-4,-10,-6,1,-2,-6,-1,10,-4,6,-7,4,3,-1,6,9,-9,-4,-3,-8,2,-7,-1,-10,5,6,1,8,-1,-1,6,-6,2,-9,-6,1,3,2,-4,-10,10,-10,5,3,8,-2,7,-9,-9,-3,7,5,-1,-3,-1,3,-8,-2,-1,-10,10,-3,-9,5,1,5,1,8,-8,4,-6,1,-10,-9,-8,9,-1,5,3,10,-8,-3,-4,9,-4,1,2,5,3,-2,-3,8,-3,3,-5,-1,-7,-3,7,-5,7,-2,8,-10,1,1,-2,5,-6,-1,-9,-5,9,9,2,-7,-8,9,-6,6,-2,9,-9,-9,-3,7,5,10,2,7,1,-4,-3,-6,3,-6,10,8,10,-4,10,-6,-5,-8,-8,-10,1,10,8,-4,-8,7,8,7,5,-2,5,1,-6,7,-5,3,-1,-3,8,2,-10,4,-4,-5,-6,-5,4,-1,6,4,-2,-9,-9,6,10,3,-6,-7,2,1,-8], dtype = "int32")#candidate|9347|(600,)|const|int32
const_9348 = relay.const([4,-2,-7,-2,-5,-4,1,-2,-7,-2,-6,5,-10,7,5,-8,5,1,-8,3,-4,-10,8,-8,8,9,-9,-3,-1,7,-6,6,8,-5,10,2,6,1,-3,-10,8,-7,4,-8,-2,-2,1,-2,-7,5,-7,-3,8,-9,-10,-4,-6,7,-2,-6,1,5,-8,-3,5,4,7,-7,9,6,4,-10,-2,2,-6,-10,-6,1,1,-9,-1,2,-10,3,-6,-9,-10,1,-7,-5,9,10,-10,1,4,-10,3,-3,3,-2,-6,9,9,-5,3,1,-5,9,-1,-7,-10,-10,-8,-8,8,10,-1,9,9,8,3,-3,-10,4,-3,-6,5,-8,8,6,3,1,4,-4,3,-2,3,5,-10,-5,-7,7,-9,-6,10,7,7,9,-8,-4,-7,7,6,3,8,-10,-3,8,-4,10,-8,7,-7,-9,-1,5,-1,-8,-4,-2,1,1,1,-5,-6,8,6,-1,4,-7,3,1,-6,-1,-1,5,7,5,5,-4,9,-7,7,-5,8,-6,-5,8,-7,2,-4,-10,-4,10,5,2,-3,-6,-7,-3,-4,-9,-7,10,6,2,10,-10,6,-8,3,6,1,8,4,4,-2,9,-1,-5,-1,-6,2,-9,-7,1,7,6,1,7,-7,7,5,3,3,3,-7,-8,7,7,-4,-4,8,-8,-3,-6,5,2,-9,8,-2,-7,9,10,-1,-2,9,-6,5,6,1,10,7,-8,8,-10,4,-3,-3,1,-4,-8,8,-8,10,-10,-9,-6,6,-5,-9,-9,2,-8,-7,-8,-1,-3,-4,1,-8,6,-3,6,-8,8,-7,10,8,-6,-8,-7,-3,-9,3,3,-1,7,-1,7,-7,5,-9,5,5,-6,6,-2,-4,-7,1,8,-7,7,-9,7,7,-10,-9,6,6,6,7,-2,9,10,1,1,3,8,-2,10,9,8,4,-3,-7,-4,-9,7,-10,-9,5,9,-9,1,-3,1,-10,-1,4,-7,-3,7,-9,-1,1,10,-9,5,-7,9,7,4,-10,6,-1,7,3,-7,8,1,-7,5,-9,3,-9,8,6,-5,-10,-2,-3,-6,-3,-9,2,-2,3,6,10,-10,4,4,3,-8,-2,6,9,2,-9,-7,-4,-2,6,9,-7,-4,-8,-3,-2,3,-1,-1,-3,6,-5,2,10,6,-10,-4,5,-10,-8,5,-5,-4,-9,9,-10,-3,8,6,-7,-5,-9,-6,7,-1,-8,-5,-7,1,5,-8,-5,-10,4,2,-10,10,4,-6,-1,-3,3,4,-8,6,5,8,4,-4,4,2,10,5,-8,-4,8,-8,7,3,-6,-3,-2,2,9,-4,3,8,8,9,4,2,3,7,1,9,10,8,-3,7,8,6,7,-5,9,10,-7,9,2,2,-5,-1,-1,6,1,5,-5,1,8,9,-9,-3,1,8,8,-9,1,10,10,5,9,1,4,8,-7,9,5,-4,-6,2,-2,-6,10,4,-2,-3,10,9,-5,6,-5,10,9,-8,8,-8,2,3,10,4,-6,-6,-9,10,3,8,1,2,3,4,2,2,-5,-6,2,-8,-4,-7,-1,-1,-3,6,8,-3,-10,2,8,-3,-9,-8,8,-1,2,7,5,10,6,9,6,5,-8,5,1,6,9,-2,2,1,-1,7,-8,-1,5,-10,-1,-6,-2,-4,-10,-4,8,8,-7,-4,-9,2,10,-6,5,-7,-3,-7,5,-9,-6,6,8,2,4,4,6,3,-1,-4,-6,-5,5,3,3,-7,-4,-3,-6,8,10,5,9,-6,8,-9,3,3,-5,-10,-8,-9,9,-5,-6,6,4,-4,1,5,9,4,-9,-10,3,3,6,-4,-4,9,-3,-6,8,1,-9,9,-2,10,1,-6,-9,-6,2,9,10,-8,4,-1,3,2,-2,-9,-7,8,8,-2,4,9,9,-2,7,3,3,4,10,7,10,-6,5,-6,-7,-10,-6,7,-9,8,8,-7,-7,-6,-8,9,-10,-6,-9,10,1,-7,8,-6,-2,1,6,-2,1,-10,-4,9,-5,1,-9,2,-8,9,-4,1,9,-7,-1,8,8,1,6,-5,6,7,-4,7,9,-8,-3,8,-4,-7,-3,-7,2,2,-9,-10,-3,-2,3,1,-7,4,9,-4,-6,-9,5,-9,-3,4,10,-9,-9,3,4,6,4,-3,-2,9,-7,5,2,10,9,-1,8,-5,3,-2,4,8,8,5,10,7,10,-1,10,-2,-5,-7,3,1,9,-4,-1,-3,6,10,3,3,-1,-8,8,-9,2,-8,-7,-4,-2,3,9,-4,-5,-10,4,-2,10,6,-1,-2,1,10,9,-6,10,-4,-5,-5,5,-9,-1,-1,-10,-10,2,-3,-4,-10,-9,-5,6,-2,-10,-1,2,-1,10,5,-1,-10,1,-5,-8,-7,3,-8,1,-10,-8,-5,3,-5,-2,-3,-7,7,6,-10,-8,3,-9,10,2,-3,3,1,4,8,-6,8,-4,1,8,6,2,-7,2,-3,9,5,3,-7,3,2,6,5,6,2,9,10,-9,2,-6,8,-10,7,-10,-10,-10,2,-4,-8,5,2,9,-5,1,-2,4,-10,4,10,2,6,-4,-1,-7,9,-10,6,-5,10,2,-10,-1,-3,-10,10,4,-5,6,7,5,-7,-8,-6,6,8,-7,4,-1,-4,1,4,-10,6,-4,-1,-10,6,1,-9,-8,-3,-5,3,-6,-10,1,-4,2,-8,4,7,-6,-10,-5,-4,-5,-5,5,-10,-9,10,4,-2,6,5,9,-4,5,4,4,-10,-4,-3,7,2,4,5,-5,-6,-6,3,-3,10,4,5,-3,-8,1,8,7,-1,1,10,-2,-9,7,6,10,7,2,-1,-8,2,2,-7,-9,1,6,-5,10,-9,-5,-7,2,8,-6,7,-10,3,-10,-1,9,-6,-5,-5,5,2,-10,-7,-2,4,-6,10,-1,-5,3,9,-8,-9,8,-8,10,6,-8,10,-8,6,7,-7,10,1,-10,7,7,-10,10,1,7,-9,10,3,-4,-1,6,9,-2,9,-3,9,-4,7,7,5,-5,9,2,3,-10,6,4,1,-8,-9,9,-8,-7,9,5,9,8,5,-7,-5,5,-10,9,-9,2,-5,-6,-5,10,-8,-8,6,5,6,-2,-9,-6,-7,2,9,4,6,9,-2,7,-5,-6,-1,-2,3,1,2,2,-10,7,-8,-5,10,8,-2,-1,8,-8,8,-7,6,2,-5,9,-7,-7,9,1,-4,1,-2,3,-10,2,-2,7,-8,8,-1,1,7,-5,7,-6,-5,-9,9,-8,4,5,10,6,10,1,2,3,7,-6,4,-7,8,7,-7,-6,-6,7,-4,-1,-8,8,-4,9,-9,-8,-6,-3,1,4,4,9,3,-5,10,1,-10,-7,-2,-8,9,3,2,-10,5,-1,5,10,-7,-5,2,-4,-7,-9,-7,-9,4,4,9,7,9,4,7,2,-8,10,2,-4,-8,7,1,-4,7,1,3,9,-7,7,-6,9,-3,8,6,4,7,9,-7,-3,10,-2,3,6,6,-5,2,10,4,1,-10,-1,-8,4,-3,2,2,-8,-7,8,-8,8,8,7,6,1,-5,-4,5,8,7,-1,6,-6,4,8,9,-3,-6,9,8,-1,-4,-8,2,-7,8,10,5,-6,-1,10,2,9,4], dtype = "uint8")#candidate|9348|(1386,)|const|uint8
const_9349 = relay.const(9.674177, dtype = "float64")#candidate|9349|()|const|float64
call_9346 = relay.TupleGetItem(func_6075_call(relay.reshape(const_9347.astype('int32'), [5, 12, 10]), relay.reshape(const_9348.astype('uint8'), [1386,]), relay.reshape(const_9349.astype('float64'), []), ), 2)
call_9350 = relay.TupleGetItem(func_6079_call(relay.reshape(const_9347.astype('int32'), [5, 12, 10]), relay.reshape(const_9348.astype('uint8'), [1386,]), relay.reshape(const_9349.astype('float64'), []), ), 2)
output = relay.Tuple([bop_9339,call_9346,const_9347,const_9348,const_9349,])
output2 = relay.Tuple([bop_9339,call_9350,const_9347,const_9348,const_9349,])
func_9352 = relay.Function([], output)
mod['func_9352'] = func_9352
mod = relay.transform.InferType()(mod)
output = func_9352()
func_9353 = relay.Function([], output)
mutated_mod['func_9353'] = func_9353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8375_call = mod.get_global_var('func_8375')
func_8377_call = mutated_mod.get_global_var('func_8377')
call_9417 = func_8375_call()
call_9418 = func_8375_call()
output = relay.Tuple([call_9417,])
output2 = relay.Tuple([call_9418,])
func_9448 = relay.Function([], output)
mod['func_9448'] = func_9448
mod = relay.transform.InferType()(mod)
output = func_9448()
func_9449 = relay.Function([], output)
mutated_mod['func_9449'] = func_9449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8375_call = mod.get_global_var('func_8375')
func_8377_call = mutated_mod.get_global_var('func_8377')
call_9474 = func_8375_call()
call_9475 = func_8375_call()
var_9478 = relay.var("var_9478", dtype = "int64", shape = (8, 4, 3))#candidate|9478|(8, 4, 3)|var|int64
bop_9479 = relay.floor_mod(call_9474.astype('float32'), relay.reshape(var_9478.astype('float32'), relay.shape_of(call_9474))) # shape=(8, 4, 3)
bop_9482 = relay.floor_mod(call_9475.astype('float32'), relay.reshape(var_9478.astype('float32'), relay.shape_of(call_9475))) # shape=(8, 4, 3)
func_8463_call = mod.get_global_var('func_8463')
func_8467_call = mutated_mod.get_global_var('func_8467')
var_9497 = relay.var("var_9497", dtype = "float64", shape = ())#candidate|9497|()|var|float64
const_9498 = relay.const([-1.233310,5.550200,7.582425,5.705971,-9.750376,-8.003666,-0.517898,0.062330,0.645853,1.725403,2.720237,-0.598458,1.057459,3.970485,9.057439,-9.833247,-0.671321,7.706352,6.236102,5.937777,-9.104888,-3.139857,4.661019,4.322174,2.684500,-0.982251,-5.311800,-5.404833,-7.140458,-5.936095,9.805193,4.966904,8.941134,2.703773,7.421135,-9.248940,-1.329408,-1.306016,-8.788805,-2.006088,7.297893,3.552036,2.749137,4.024243,5.617167,7.079995,6.594229,-3.972899,3.644647,2.447556,4.463088,-6.943904,-0.960568,9.579871,2.736082,-8.998501,3.377760,-8.895071,3.552117,-0.327660,9.844781,0.359924,-8.662574,6.877832,9.416658,-0.923093,7.693450,-1.989118,8.634162,-3.858481,7.871133,2.972831,-3.059932,3.778622,-0.844826,-7.840410,1.717049,-7.114446,-5.491988,-0.910137,-4.603295,-6.191709,5.190332,4.573061,-9.261341,7.435167,-8.116389,-8.055540,-7.534481,0.052629,5.506309,9.861577,2.040028,-0.124983,8.784787,-6.176376,7.239074,8.046061,3.420084,-5.738929,5.566651,-8.808682,-5.944804,-9.468830,-3.315369,3.088299,-5.700979,7.880087,-6.978260,8.043912,-3.664616,8.912355,-7.445227,-4.122491,7.899044,5.704886,9.474181,8.503465,0.488631,-7.630925,1.763079,3.830941,-3.938251,3.581902,1.395649,1.790828,-1.418700,8.955205,5.662105,0.301065,-8.182431,8.125429,-6.366267,-3.429001,6.472499,7.521891,-3.873652,-6.838822,7.668008,-3.347451,-0.785687,-5.634570,-2.030308,1.050099,-7.599942,5.403736,8.958316,-2.365734,6.376979,1.771895,8.413040,8.865369,-4.755395,6.841285,3.443500,-3.562992,8.120700,6.554275,-8.988066,1.574373,4.483412,-5.674172,-4.285876,-5.814394,6.575343,-3.044464,-9.902761,-2.832688,3.052732,6.211660,0.179156,-6.473098,-8.317437,1.549360,-2.222020,3.974000,4.356175,-9.138962,-2.835972,4.533009,4.018665,4.656200,3.896735,-9.601738,0.206586,7.878579,2.808762,4.407633,1.866456,-6.696424,6.162968,1.525777,7.918176,-7.934376,-9.918353,3.217226,2.378591,-6.688524,5.869609,6.821118,-7.767426,3.772391,-9.820554,2.066781,0.519993,7.869922,-1.861251,9.523935,7.904219,9.060702,4.033046,4.206114,9.685794,2.321868,-0.066592,0.030840,-8.885261,-3.767546,5.192623,-7.857469,6.325311,-0.349573,8.427570,-0.630642,8.404796,-7.560694,-3.386676,-5.346448,8.895292,-4.011491,-6.030266,-6.842859,6.906286,-9.944086,6.205057,7.224238,-8.727653,-1.063432,-1.283787,-6.319692,-6.990200,-3.992501,-9.604518,3.047888,4.026775,1.800802,2.014217,-0.107758,-4.379474,-7.148872,4.693938,5.443999,5.745479,6.570801,-1.549212,5.799970,6.943369,0.972379,-4.147948,6.447898,3.828223,-2.848668,5.932611,8.578588,7.681064,9.204802,4.622768,-0.098856,-3.742886,-5.557465,-7.337399,6.811805,-2.691789,4.910578,6.895573,-6.216121,-0.492085,-7.514477,9.390141,0.281824,6.677308,3.054759,9.089115,2.153135,-5.197164,-1.007473,4.566361,-9.834696,1.326460,9.042264,-3.157764,8.648064,-1.805216,-9.748420,3.773117,-6.871875,-9.469838,3.127731,4.972066,1.980579,8.489565,-2.355807,-7.587244,-5.993529,3.050573,-5.840770,4.687925,-8.780540,7.965876,0.466606,-3.774530,2.748449,2.695151,8.668009,2.888921,-9.604463,-7.928228,-2.124844,3.267387,-1.296103,-2.043636,7.526658,-4.144890,0.020804,-0.080239,-0.068845,-7.633989,-9.383557,8.947763,-8.087296,-4.486846,0.899383,-6.852235,5.929734,-0.572903,-5.523065,0.067104,-1.915140,0.235006,5.537891,-7.209830,-4.934848,-4.872439,-8.193060,-0.459895,-6.673207,-3.241298,-3.180072,3.214262,-9.396175,3.202087,-6.031320,-6.143573,9.124412,-7.652581,-9.700729,-4.868708,2.686754,3.907230,-0.382596,5.837526,-7.594025,-4.200519,-2.995231,0.180267,9.511508,9.030118,8.022577,-4.602010,7.599592,0.503960,7.958428,-6.035489,-8.892210,3.105807,-5.680825,-7.250690,-3.586240,8.753489,-0.073006,1.307684,3.574650,-5.062241,5.348553,3.086516,2.218280,-7.158716,4.922144,-0.015083,-5.110047,-5.459428,-8.085080,5.012843,-3.190231,9.381038,4.689310,-8.671373,9.710220,0.745111,-4.607589,9.157325,-6.608377,-5.329261,-4.120434,1.238035,-8.748165,7.092660,-4.828469,1.591900,8.592215,-4.769092,-9.653589,-3.245211,5.541872,-1.983413,-2.077834,2.465589,1.155348,-2.138058,-1.271681,-9.278315,-7.300384,1.322976,-4.943303,3.001403,8.713115,2.786849,-4.324038,4.662130,2.634064,9.319100,5.120240,-1.326215,3.031633,0.895791,6.766957,-5.202335,5.950082,-0.346606,6.074918,-1.146033,8.731772,-7.340319,5.190107,6.629170,1.706809,-8.652086,-7.166930,2.586903,-9.935504,1.010741,-4.946961,0.258774,-5.562213,2.005034,0.555358,-8.269202,4.799474,-3.401947,9.474724,-4.261823,6.604632,1.419352,8.836697,5.670512,0.467408,7.556056,-6.334610,-0.600931,5.889440,-8.227868,7.455419,3.607204,9.385411,9.472439,-2.569930,3.474525,-5.051958,8.667724,6.907943,6.221764,3.992644,-1.155360,8.320621,-5.053233,2.409276,1.996824,-0.839555,2.151790,5.662754,-4.022240,-2.730530,4.536592,-5.501819,4.567142,7.081489,7.279990,9.448078,-8.480106,-1.553493,6.965292,-4.194277,-2.000736,-9.037725,-0.288687,-1.155162,7.750068,5.041676,0.485026,0.701375,8.880138,-7.866372,2.795046,2.442383,-9.539715,7.885400,7.735734,2.444124,-2.491289,5.282197,7.766017,2.706207,7.909738,2.604704,-3.798901,1.808422,8.731803,-3.517161,2.316375,-8.898796,1.216536,-3.073277,8.592100,-8.487821,4.081733,3.358507,9.592689,5.627331,0.465454,-1.986359,7.373102,0.564771,6.162624,1.647972,1.141291,-3.456733,4.220036,1.008915,-6.708805,-4.016438,-3.860649,-2.851237,-0.684108,-9.834527,-4.992124,-3.882832,-3.493403,-0.310559,3.012796,-6.681783,-7.624131,-3.605703,0.132240,-9.332453,7.316266,9.669085,-5.389767,-0.264366,0.731621,-1.879491,7.118626,1.014264,9.628780,5.109448,-8.019837,4.235029,-5.603143,-0.492712,-4.392739,-4.292232,-9.573740,0.983149,3.179868,9.228896,-7.810511], dtype = "float64")#candidate|9498|(585,)|const|float64
call_9496 = relay.TupleGetItem(func_8463_call(relay.reshape(var_9497.astype('float64'), []), relay.reshape(const_9498.astype('float64'), [9, 13, 5]), ), 0)
call_9499 = relay.TupleGetItem(func_8467_call(relay.reshape(var_9497.astype('float64'), []), relay.reshape(const_9498.astype('float64'), [9, 13, 5]), ), 0)
output = relay.Tuple([bop_9479,call_9496,var_9497,const_9498,])
output2 = relay.Tuple([bop_9482,call_9499,var_9497,const_9498,])
func_9500 = relay.Function([var_9478,var_9497,], output)
mod['func_9500'] = func_9500
mod = relay.transform.InferType()(mod)
var_9501 = relay.var("var_9501", dtype = "int64", shape = (8, 4, 3))#candidate|9501|(8, 4, 3)|var|int64
var_9502 = relay.var("var_9502", dtype = "float64", shape = ())#candidate|9502|()|var|float64
output = func_9500(var_9501,var_9502,)
func_9503 = relay.Function([var_9501,var_9502,], output)
mutated_mod['func_9503'] = func_9503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8375_call = mod.get_global_var('func_8375')
func_8377_call = mutated_mod.get_global_var('func_8377')
call_9558 = func_8375_call()
call_9559 = func_8375_call()
var_9562 = relay.var("var_9562", dtype = "int64", shape = (8, 4, 3))#candidate|9562|(8, 4, 3)|var|int64
bop_9563 = relay.bitwise_or(call_9558.astype('int8'), relay.reshape(var_9562.astype('int8'), relay.shape_of(call_9558))) # shape=(8, 4, 3)
bop_9566 = relay.bitwise_or(call_9559.astype('int8'), relay.reshape(var_9562.astype('int8'), relay.shape_of(call_9559))) # shape=(8, 4, 3)
output = bop_9563
output2 = bop_9566
func_9571 = relay.Function([var_9562,], output)
mod['func_9571'] = func_9571
mod = relay.transform.InferType()(mod)
mutated_mod['func_9571'] = func_9571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9572 = relay.var("var_9572", dtype = "int64", shape = (8, 4, 3))#candidate|9572|(8, 4, 3)|var|int64
func_9571_call = mutated_mod.get_global_var('func_9571')
call_9573 = func_9571_call(var_9572)
output = call_9573
func_9574 = relay.Function([var_9572], output)
mutated_mod['func_9574'] = func_9574
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9600 = relay.var("var_9600", dtype = "float32", shape = (13, 16, 14))#candidate|9600|(13, 16, 14)|var|float32
uop_9601 = relay.exp(var_9600.astype('float32')) # shape=(13, 16, 14)
output = uop_9601
output2 = uop_9601
func_9605 = relay.Function([var_9600,], output)
mod['func_9605'] = func_9605
mod = relay.transform.InferType()(mod)
mutated_mod['func_9605'] = func_9605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9606 = relay.var("var_9606", dtype = "float32", shape = (13, 16, 14))#candidate|9606|(13, 16, 14)|var|float32
func_9605_call = mutated_mod.get_global_var('func_9605')
call_9607 = func_9605_call(var_9606)
output = call_9607
func_9608 = relay.Function([var_9606], output)
mutated_mod['func_9608'] = func_9608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_9639 = relay.TupleGetItem(func_7211_call(), 0)
call_9640 = relay.TupleGetItem(func_7213_call(), 0)
const_9641 = relay.const([[[-4,-2,4],[8,-5,5],[4,-1,3],[4,-2,-7]],[[-1,9,-1],[-8,7,-1],[-7,-10,9],[6,-3,8]],[[8,8,-6],[-6,9,3],[-2,6,-2],[2,-8,-4]],[[8,-8,4],[7,-8,1],[-1,3,6],[-1,-6,10]],[[3,-9,-4],[6,2,3],[4,9,6],[-7,9,-8]],[[-5,-3,-7],[1,5,-3],[-5,-1,6],[3,5,-1]],[[-4,-9,-6],[9,-7,4],[-7,5,7],[3,8,-6]],[[-1,2,3],[-6,-2,1],[1,9,4],[3,10,-5]]], dtype = "int64")#candidate|9641|(8, 4, 3)|const|int64
bop_9642 = relay.subtract(call_9639.astype('uint64'), relay.reshape(const_9641.astype('uint64'), relay.shape_of(call_9639))) # shape=(8, 4, 3)
bop_9645 = relay.subtract(call_9640.astype('uint64'), relay.reshape(const_9641.astype('uint64'), relay.shape_of(call_9640))) # shape=(8, 4, 3)
output = relay.Tuple([bop_9642,])
output2 = relay.Tuple([bop_9645,])
func_9652 = relay.Function([], output)
mod['func_9652'] = func_9652
mod = relay.transform.InferType()(mod)
output = func_9652()
func_9653 = relay.Function([], output)
mutated_mod['func_9653'] = func_9653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7778_call = mod.get_global_var('func_7778')
func_7779_call = mutated_mod.get_global_var('func_7779')
call_9711 = relay.TupleGetItem(func_7778_call(), 0)
call_9712 = relay.TupleGetItem(func_7779_call(), 0)
func_4544_call = mod.get_global_var('func_4544')
func_4547_call = mutated_mod.get_global_var('func_4547')
const_9724 = relay.const([4.167802,-5.247019,9.531970,8.705445,9.808989,-7.496761,-9.907541,-6.740955,-9.199347,0.891518,3.099557,2.126941,7.550565,-1.089511,0.179036,-6.826058,7.835628,-0.769997,-1.266152,8.007682,-6.097996,7.343913,-4.098556,1.812333,6.678209,-1.203988,9.296826,8.270693,5.235187,3.787334,-7.971960,7.207255,-2.888402,-1.444628,9.984047,-1.703662,-1.620643,-2.214666,2.382128,9.624035,0.350990,7.008507,-8.156549,9.554023,-6.334541,-2.456597,-1.526094,-8.112285,-2.007640,-1.879486,-5.593625,8.960329,-9.508386,-3.207541,-1.559851,-4.316345,1.640700,-4.412017,-6.125987,4.254024,-7.358802,-1.698133,5.639526,7.334066,7.154726,3.395682,-2.998748,-9.605592,-9.501303,-3.666155,5.246214,-2.312540,-0.980324,-4.578881,-8.859414,-6.882891,3.437688,-8.326218,7.951708,-4.206882,5.836863,5.146038,1.406572,-0.757901,-8.534055,-5.791405,2.831894,-7.059452,9.060683,-4.088379,-1.707629,-0.524652,1.716426,-4.910536,-5.881614,-0.194955,-5.628260,1.284760,5.303321,0.210898,-2.842388,3.015058,6.896589,9.045800,-0.295603,-0.360868,-0.596022,3.860887,4.128286,4.438431,-7.330727,3.443179,9.886113,-4.742082,-7.988919,-9.325602,8.914827,-4.146404,1.378102,4.386509,-5.250449,-1.179887,-7.376282,-3.300712,6.329139,8.078087,3.405601,-6.464237,9.312882,-9.004844,-7.124544,-6.146476,-5.837420,-4.616455,1.674876,-7.807056,-6.678672,-5.636228,-0.733859,-3.080873,-9.804162,3.559587,8.398606,-3.865599,3.191085,-4.051345,1.271659,1.570074,-0.386682,7.179226,-8.216311,3.929516,-4.726182,4.091814,-8.385220,-0.107429,-0.813098,1.583078,2.237098,-2.115008,-0.866256,7.905959,-2.026181,3.434848,-1.592985,-1.684031,-2.595229,8.300132,3.018795,6.003725,9.272350,5.618415,-8.735281,0.274414,-4.204400,-0.156132,-4.554610,4.633980,-7.556999,9.573776,3.119413,6.220356,6.989197,2.252519,-5.087771,0.535024,-9.894876,9.982851,4.978249,3.825266,-9.995405,-4.413988,1.241294,9.617146,-2.690379,-8.843403,-3.176531,-1.302459,7.269286,5.723823,-5.517205,3.293313,9.964191,6.170516,2.170705,-4.512388,-0.312690,-7.896222,-1.921398,-7.944377,9.769703,9.812909,-3.631983,2.045202,4.803484,3.117579,4.107090,-6.721046,1.842869,5.971613,-8.704279,3.943072,-8.101542,-8.550121,1.721611,-2.108868,-6.181642,5.622761,7.645407,-6.208248,9.403661,-2.205846,-3.701181,8.297284,7.656627,-2.131173,-7.826497,-7.182341,7.645051,-0.463165,0.882289,1.852106,-9.687646,7.757298,-9.950541,-2.149199,7.992483,-3.039650,2.255737,-1.394705,4.778982,5.237205,-7.720870,-0.521866,-6.294046,-8.263921,0.949957,5.210416,-7.467543,5.599214,-3.978700,-5.875353,7.678937,2.474478,-4.953696,3.548827,-3.477356,-7.623307,-8.431250,2.810422,9.274289,4.552135,2.440632,-6.029445,6.305039,-9.396916,6.806850,3.741395,-2.797539,1.945174,-7.134709,-1.896310,8.978655,1.665651,4.735380,3.689090,2.294276,-7.705572,2.715916,-5.579605,-8.037372,7.041131,-3.933407,-4.405938,1.204726,9.477458,-9.902719,4.032878,-1.736523,-9.263967,2.466899,-5.958699,-6.613639,2.497008,4.562501,-1.238666,5.006417,1.980375,-5.960409,-0.858449,-5.641927,-7.928002,1.022796,-0.179596,-5.930099,5.053639,-1.419321,-8.819954,-0.349127,5.205932,-6.878126,-4.795368,4.069716,3.045993,7.402026,4.544947,2.574105,7.405811,8.395962,5.316838,-6.381800,9.315928,-6.013930,2.227900,-3.714560,0.013547,-6.867465,-5.513065,1.656359,9.111194,5.290262,-4.871548,-0.422292,2.425382,-1.583994,-4.025340,7.739959,2.784752,5.898671,5.745121,9.620657,-7.809727,-0.316830,6.235611,-5.302470,-8.750238,-9.454996,7.812097,-3.451416,-2.807142,3.723978,2.529887,0.063093,-0.280048,6.057013,-8.771936,-1.676872,-8.544235,7.746940,8.779485,3.595146,2.728774,-1.352301,-2.779263,9.006097,0.602660,1.506586,9.749101,-1.722194,-0.647520,1.002759,-8.523220,0.490134,-1.100021,2.797452,2.191751,-3.218231,-0.857055,3.809797,2.217732,5.453562,5.937833,-7.977420,9.171864,-0.095930,-9.602599,-7.070501,-3.999913,-4.457260,-4.800560,-7.336918,-4.250435,-7.993820,9.814770,1.088085,-2.768445,-5.963268,-0.243312,3.281002,1.449929,7.143492,7.001911,-0.066118,5.441179,3.690663,-8.341867,9.988956,-7.440801,4.909667,0.285291,-8.349524,-1.902649,2.703474,3.585219,-6.132870,7.571800,9.880136,-9.408353,-1.013896,-0.379735,3.623620,8.826543,2.873862,2.197592,4.991326,2.667917,-6.271835,-1.784831,-5.781384,-3.301422,-2.713093,-2.274261,3.618119,-0.104352,9.835636,0.032706,3.784362,4.060454,-2.127082,-0.693259,-1.795038,9.727120,7.657278,-6.775475,-5.348605,-2.543078,-9.236423,-9.728728,2.792243,5.456494,9.105438,-3.653593,3.312123,4.429550,-2.669861,-5.721909,1.567568,4.664743,1.153547,3.392925,3.623868,7.624634,-9.103457,9.777108,-5.435917,-8.874974,3.356090,-1.190676,4.885733,-8.396235,4.923891,-3.071872,-9.458231,6.154941,4.757787,5.625670,7.493351,5.805341,-3.094386,0.511875,1.219823,-5.087540,-3.553356,-7.504829,-4.343373,9.201104,5.518798,2.628593,-3.862685,7.667754,2.016089,-4.712661,2.610506,-0.627852,-3.519214,-7.165603,-8.095239,-8.411039,-8.110885,-5.654504,5.210326,-5.069657,7.510332,-0.278648,3.580298,1.241283,4.104626,1.238964,8.865685,-0.893340,0.925407,-7.042830,-7.068826,6.961092,3.732753,5.933862,1.811043,1.724038,7.587300,-3.331432,7.363238,1.859067,8.159910,-7.737465,8.262234,-9.395793,3.926924,-9.678086,9.893427,-7.192878,0.811700,7.078492,-1.051882,6.871871,7.046011,-9.096070,8.366890,7.741696,-6.007281,-5.858652,-5.611950,-5.081769,0.027559,7.237086,-5.326395,0.359509,-8.313270,4.467843,8.154743,-7.983600,-2.532962,4.138023,1.367381,5.328024,-9.094100,4.104057,-9.320301,8.130257,-9.103309,1.100082,-4.847011,-3.364701,0.633007,3.182778,-5.977505,1.869182,-3.375864,-0.721493,2.336744,6.237237,2.190516,1.645919,4.103415,7.136039,5.302153,-2.274948,2.254000,-1.727156,-6.714928,0.134520,-6.630458,-7.628542,-7.490055,-9.593474,-2.789107,1.010423,-5.451629,1.739352,7.592838,1.508041,5.485333,1.538697,-3.056939,-0.872717,9.054779,9.631426,-2.461503,8.343615,-2.946337,1.082346,1.822772,9.825058,6.922443,6.429272,8.295570,7.413802,1.552588,-2.985295,9.106357,-8.553853,-4.215688,-2.006108,7.579875,4.872272,9.009534,-1.867584,-6.882115,-7.940789,0.565937,-6.639463,-8.800150,7.222717,-3.660982,9.765011,-4.107721,8.524630,0.716269,-7.468851,2.087905,-9.903714,-3.497053,7.939399,-5.957771,-6.046107,-2.780794,5.939156,-6.453070,-2.046120,-8.202073,-7.675203,2.311037,5.584682,5.549615,-6.862788,-1.167693,2.771042,2.386742,9.268092,-0.322907,2.910299,-7.994648,1.048956,-0.075716,-1.753934,3.268647,3.112318,-6.788625,7.087523,-5.263861,-1.445889,1.034982,7.118174,-8.933565,-6.093329,-1.196273,3.091948,-3.623593,-2.244602,-2.203338,5.368004,8.274590,4.454233,-0.140108,-5.173217,-4.114276,4.317467,-6.582271,-5.428790,9.962420,-8.220484,7.262551,-3.411885,-6.452468,-2.313789,8.720507,3.609018,-4.272491,-0.213089,0.492047,-4.662357,7.130007,6.447085,-5.133079,4.378749,0.820410,-8.677785,6.911623,-3.372493,6.247166,8.038116,0.483425,7.527947,8.814223,-1.662560,-2.476013,-5.311422,-7.494719,-0.009834,7.984143,-7.782518,0.795552,0.794433,0.986066,-5.964424,-7.452743,-8.349040,-0.024407,-8.730265,9.908586,1.835240,6.686617,-2.415888,1.825011,-0.165523,-3.279872,9.730028,8.130592,-5.247706,0.671181,8.203263,-8.830571,9.404505,-3.907277,-6.307113,-4.003960,1.231313,7.735564,7.494622,-5.847807,-4.997513,-4.440972,-5.535547,-2.822983,-5.246442,-2.335019,-3.084459,3.454163,7.342032,3.555095,-2.369910,3.146097,3.922288,3.335936,-4.286177,-1.368079,-5.891387,-5.734430,2.015445,8.763889,-3.114010,2.665194,3.950188,-3.648027,-6.895181,-1.420653,4.489380,4.987020,9.419035,2.423103,-7.556445,-2.326996,-0.708358,-8.232558,9.669355,-4.824128,7.349402,-9.428079,-0.798793,8.128384,-9.587398,4.374055,-3.194730,-4.114805,6.871019,1.491298,-4.323368,-4.689079,-5.764253,-4.302941,3.390878,-2.161116,-4.149234,4.193186,6.507001,-9.325929,-7.586854,-0.225335,-4.158524,-0.749905,-5.552960,2.194373,0.021476,-2.670615,-5.590895,-0.680683,9.379793,-0.155065,9.924317,-0.640302,1.048727,2.497177,0.696375,-7.995996,-5.068689,3.870949,-5.251546,0.803401,2.753064,1.027302,-9.031126,9.092790,-4.169881,-5.102941,8.620980,2.300913,9.356306,-7.435851,-8.929200,-3.842760,-6.147636,9.043637,-2.415052,-1.548958,-8.271756,-6.177266,3.936204,-0.748665,5.805488,-1.077289,-6.895625,0.088833,-9.277073,-0.721464,-5.206999,9.133665,-8.434009,2.303435,-2.630731,-9.167147,-0.578799,1.506895,-0.008931,1.556259,-6.902647], dtype = "float32")#candidate|9724|(864,)|const|float32
call_9723 = relay.TupleGetItem(func_4544_call(relay.reshape(const_9724.astype('float32'), [6, 9, 16])), 0)
call_9725 = relay.TupleGetItem(func_4547_call(relay.reshape(const_9724.astype('float32'), [6, 9, 16])), 0)
func_2887_call = mod.get_global_var('func_2887')
func_2889_call = mutated_mod.get_global_var('func_2889')
const_9737 = relay.const([3.959339,-4.433541,-5.062775,-2.321636,-0.025687,-5.985026,3.172185,-6.019472,0.532301,9.575063,-9.903835,8.598072,2.181067,5.845190,9.982258,-4.361457,4.021078,-5.134256,8.430396,0.354479,-4.177443,0.070682,-8.155061,5.127461,0.864888,-2.912072,5.897576,0.890475,-2.996032,2.275613,4.794495,4.166473,-1.751967,7.290196,-9.986325,9.263914,-7.539345,-1.043553,2.902576,2.773707,5.058242,-6.396405,4.933002,6.058100,-3.312264,0.371721,-6.833765,-2.847338,-3.596280,-2.362854,-3.468464,0.894863,-8.795610,0.869401,7.523030,1.288128,-8.019417,1.236486,9.700297,-1.095322,9.300008,-5.676630,-1.920641,-6.777798,-5.403853,1.690780,6.274503,1.650002,-7.420547,1.864967,2.192014,-5.461906,-0.311045,3.996123,-7.145206,1.961694,2.308602,3.735485,-0.414109,0.046106,9.095370,0.480708,9.757056,-5.719522,2.948497,-0.877088,-1.490799,1.823843,-6.752503,5.274013,-9.298684,0.600121,-1.089523,0.060966,-7.869116,2.633398,4.226984,-0.386899,9.712169,-2.723312,-1.207971,-6.150598,-0.459229,2.509610,-3.230672,1.174811,4.420979,2.553824,-0.861253,-8.314078,5.993871,-6.416958], dtype = "float64")#candidate|9737|(112,)|const|float64
call_9736 = relay.TupleGetItem(func_2887_call(relay.reshape(const_9737.astype('float64'), [1, 112])), 2)
call_9738 = relay.TupleGetItem(func_2889_call(relay.reshape(const_9737.astype('float64'), [1, 112])), 2)
uop_9741 = relay.sqrt(const_9724.astype('float64')) # shape=(864,)
output = relay.Tuple([call_9711,call_9723,call_9736,const_9737,uop_9741,])
output2 = relay.Tuple([call_9712,call_9725,call_9738,const_9737,uop_9741,])
func_9743 = relay.Function([], output)
mod['func_9743'] = func_9743
mod = relay.transform.InferType()(mod)
mutated_mod['func_9743'] = func_9743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9743_call = mutated_mod.get_global_var('func_9743')
call_9744 = func_9743_call()
output = call_9744
func_9745 = relay.Function([], output)
mutated_mod['func_9745'] = func_9745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9448_call = mod.get_global_var('func_9448')
func_9449_call = mutated_mod.get_global_var('func_9449')
call_9763 = relay.TupleGetItem(func_9448_call(), 0)
call_9764 = relay.TupleGetItem(func_9449_call(), 0)
var_9792 = relay.var("var_9792", dtype = "int64", shape = (8, 4, 3))#candidate|9792|(8, 4, 3)|var|int64
bop_9793 = relay.multiply(call_9763.astype('float64'), relay.reshape(var_9792.astype('float64'), relay.shape_of(call_9763))) # shape=(8, 4, 3)
bop_9796 = relay.multiply(call_9764.astype('float64'), relay.reshape(var_9792.astype('float64'), relay.shape_of(call_9764))) # shape=(8, 4, 3)
var_9800 = relay.var("var_9800", dtype = "int64", shape = (8, 4, 3))#candidate|9800|(8, 4, 3)|var|int64
bop_9801 = relay.divide(call_9763.astype('float64'), relay.reshape(var_9800.astype('float64'), relay.shape_of(call_9763))) # shape=(8, 4, 3)
bop_9804 = relay.divide(call_9764.astype('float64'), relay.reshape(var_9800.astype('float64'), relay.shape_of(call_9764))) # shape=(8, 4, 3)
func_2524_call = mod.get_global_var('func_2524')
func_2527_call = mutated_mod.get_global_var('func_2527')
var_9808 = relay.var("var_9808", dtype = "int64", shape = (42,))#candidate|9808|(42,)|var|int64
const_9809 = relay.const([[10],[-3],[-7],[-8],[2],[-9],[3],[5],[2],[4],[-7],[-1],[-3],[8],[5],[-9],[3],[2],[4],[7],[7],[4],[-5],[-5],[-7],[7],[7],[-2],[1],[2],[-6],[-10],[4],[1],[1],[6],[5],[9],[-1],[7],[3],[-3],[-3],[3],[-5],[-9],[8],[9],[3],[-2],[9],[4],[9],[4],[-8],[-7],[6],[-3],[5],[5],[5],[-10],[-3],[-6],[3],[1],[-5],[-6],[8],[4],[10],[1],[3],[6],[-2],[-9],[-3],[9],[-10],[-4],[-3],[6],[2],[4],[-1],[-8],[-10],[-8],[-4],[3],[3],[2],[-1],[-6],[8],[-5],[-7],[-2],[-3],[8],[3],[-5],[-6],[-9],[5],[-6],[-2],[-8],[1],[-5],[4],[-3],[10],[-9],[-10],[-7],[7],[-7],[4],[3],[8],[2],[8],[-4],[-2],[10],[-10],[8],[-8],[5],[5],[10],[-5],[-7],[5],[-10],[9],[-4],[10],[8],[6],[9],[-2],[-5],[3],[8],[-3],[4],[-7],[7],[-10],[4],[1],[-8],[5],[-4],[-5],[6],[9],[8],[3],[-3],[-4],[2],[-7],[3],[8],[-7],[-7],[-1],[-3],[3],[9],[7],[-1],[1],[3],[-8],[-1],[10],[1],[-3],[3],[1],[7],[2],[6],[-7],[-5],[2],[-1],[9],[9],[3],[-10],[-7],[-6],[-2],[-2],[-9],[-5],[-6],[8],[-8],[10],[-8],[7],[7],[5],[-5],[10],[-5],[-10],[-5],[2],[-1],[9],[-1],[-3],[-10],[1],[5],[7],[1],[9],[6],[5],[8],[-10],[10],[-1],[2],[10],[-8],[10],[-5],[-8],[-8],[-10],[7],[-4],[1],[-4],[-9],[-5],[10],[-1],[5],[6],[2],[1],[-9],[-6],[4],[-8],[7],[3],[3],[8],[4],[10],[9],[-8],[1],[-8],[-10],[-10],[10],[7],[-2],[-4],[-7],[7],[-4],[2],[8],[4],[3],[4],[6],[9],[-2],[6],[-5],[-7],[-6],[-5],[8],[2],[9],[-2],[8],[-6],[9],[-7],[3],[2],[4],[-9],[-1],[-7],[-5],[-1],[-8],[-7],[-9],[-6],[4],[-7],[4],[-8],[9],[4],[8],[-4],[8],[-7],[8],[8],[-2],[-3],[-3],[-7],[-2],[1],[-10],[5],[-1],[-5],[-2],[9],[2],[7],[-5],[-4],[-1],[10],[-5],[-2],[-3],[5],[2],[-3],[2],[-3],[6],[-8],[-9],[8],[1],[2],[10],[-5],[-1],[4],[-8],[9],[2],[4],[-9],[8],[-8],[-4],[1],[-10],[6],[4],[6],[-1],[-4],[2],[5],[-3],[-5],[-10],[-3],[-10],[7],[5],[-7],[-10],[-9],[-7],[2],[3],[-4],[-2],[-8],[9],[-4],[-8],[9],[6],[-1],[4],[8],[-9],[6],[3],[7],[-6],[2],[-3],[4],[4],[10],[3],[-9],[5],[-3],[-7],[3],[-9],[5],[9],[-9],[4],[-4],[2],[6],[-4],[-9],[8],[-9],[9],[4],[-3],[4],[-7],[6],[-1],[-4],[6],[10],[6],[5],[4],[8],[-1],[5],[-8],[-6],[7],[7],[-8],[-2],[7],[4],[4],[1],[-1],[1],[-10],[7],[5],[-3],[-10],[-8],[-8],[-3],[-5],[7],[-2],[5],[-4],[7],[1],[-3],[6],[-4],[2],[6],[6],[-9],[6],[-3],[6],[4],[1],[-6],[-4],[-2],[-1],[-7],[5],[-8],[7],[-8],[-9],[-9],[10],[9],[-2],[-6],[2],[9],[2],[-2],[8],[-10],[1],[9],[5],[2],[6],[-10],[-5],[-2],[1],[1],[-9],[9],[4],[6],[3],[7],[5],[3],[-3],[5],[-8],[8],[3],[-2],[8],[-8],[-6],[10],[-10],[-3],[4],[8],[-6],[-1],[-8],[10],[9],[-3],[8],[7],[-9],[-6],[-1],[6],[-3],[-6],[-1],[-6],[5],[-9],[2],[-3],[7],[-5],[1],[4],[-8],[6],[7],[3],[-5],[6],[-5],[-4],[-2],[5],[2],[6],[6],[-8],[-7],[9],[-5],[7],[1],[3],[-10],[1],[-3],[-6],[-7],[8],[-3],[-3],[-8],[-7],[5],[10],[-3],[1],[8],[-9],[3],[6],[4],[-1],[-6],[-4],[-5],[-7],[-10],[-8],[2],[-5],[7],[-10],[-10],[-7],[-10],[2],[-8],[-7],[-4],[-3],[-10],[2],[7],[-4],[-9],[8],[5],[-5],[1],[-1],[-9],[-5],[6],[1],[-4],[8],[7],[3],[1],[-4],[6],[-10],[-4],[-7],[1],[3],[1],[-6],[9],[8],[2],[-7],[-10],[-2],[8],[3],[10],[5],[2],[-6],[-2],[-2],[-7],[1],[-6],[1],[-8],[4],[9],[-9],[1],[-10],[-7],[4],[7],[-10],[-1],[3],[1],[-5],[-4],[4],[3],[8],[-5],[10],[8],[9],[-5],[3],[-5],[2],[-9],[5],[8],[8],[4],[-3],[-1],[10],[7],[4],[-10],[-3],[7],[8],[10],[9],[4],[1],[4],[3],[1],[-5],[-7],[10],[3],[-1],[10],[7],[-9],[1],[-4],[1],[8],[1],[1],[-8],[-9],[9],[-7],[2],[-5],[-4],[-9],[2],[7],[-1],[8],[10],[-6],[-8],[6],[1],[8],[-3],[-9],[7],[-10],[-8],[-4],[-8],[8],[4],[3],[-3],[-7],[-6],[-6],[8],[5],[1],[6],[9],[-10],[6],[-9],[-7],[-6],[-2],[6],[-6],[6],[-6],[8],[-6],[-3],[8],[-6],[-5],[2],[-10],[-8],[8],[9],[10],[7],[8],[9],[6],[8],[-10],[-9],[-2],[3],[-1],[1],[-8],[10],[10],[9],[-5],[-8],[-2],[5],[-2],[-1],[5],[1],[7],[5],[1],[-1],[2],[8],[-3],[3],[-3],[-10],[-10],[6],[9],[-6],[-9],[10],[-1],[6],[-8],[4],[2],[-3],[6],[2],[-7],[-8],[-7],[-10],[-2],[-9],[-1],[9],[-3],[-7],[-3],[10],[-10],[-10],[-8],[-8],[3],[3],[10],[6],[-8],[-5],[3],[5],[10],[-6],[1],[-8],[-10],[-9],[-1],[5],[-5],[-5],[2],[1],[6],[10],[-9],[-5],[7],[1],[1],[10],[10],[-10],[-8],[-6],[-3],[-10],[-2],[-4],[-6],[-8],[-1],[5],[8],[5],[9],[-9],[-5],[-1],[-3],[-8],[10],[3],[10],[10],[4],[-2],[-3],[-3],[2],[8],[-5],[10],[7],[-5],[-10],[9],[10],[2],[9],[-5],[-8],[-10],[-1],[-1],[2],[6],[-6],[7],[2],[4],[-2],[2],[2],[1],[3],[-6],[2],[-3],[-8],[-8],[4],[6],[-4],[3],[-5],[-6],[9],[1],[1],[5],[-8],[7],[7],[-5],[-4],[5],[-8],[-6],[-6],[-8],[8],[-7],[3],[8],[-10],[8],[-4],[-9],[4],[-7],[-8],[-4],[5],[-9],[-1],[-1],[-3],[5],[6],[10],[6],[7],[-4],[4],[2],[-4],[-6],[-7],[2],[-2],[-6],[-1],[-1],[7],[-10],[7],[-6],[10],[3],[-5],[5],[-7],[10],[4],[3],[5],[8],[8],[-4],[1],[1],[-2],[4],[-4],[5],[-6],[-1],[-1],[-9],[2],[-10],[-1],[5],[-2],[-2],[5],[-2],[-10],[-10],[-5],[-6],[-5],[-4],[-7],[-1],[4],[8],[-2],[5],[-3],[8],[2],[-6],[6],[7],[-1],[2],[9],[2]], dtype = "int32")#candidate|9809|(1040, 1)|const|int32
call_9807 = relay.TupleGetItem(func_2524_call(relay.reshape(var_9808.astype('int64'), [7, 3, 2]), relay.reshape(const_9809.astype('int32'), [1040,]), ), 1)
call_9810 = relay.TupleGetItem(func_2527_call(relay.reshape(var_9808.astype('int64'), [7, 3, 2]), relay.reshape(const_9809.astype('int32'), [1040,]), ), 1)
func_8604_call = mod.get_global_var('func_8604')
func_8606_call = mutated_mod.get_global_var('func_8606')
var_9828 = relay.var("var_9828", dtype = "float32", shape = (144,))#candidate|9828|(144,)|var|float32
call_9827 = relay.TupleGetItem(func_8604_call(relay.reshape(var_9828.astype('float32'), [144,])), 1)
call_9829 = relay.TupleGetItem(func_8606_call(relay.reshape(var_9828.astype('float32'), [144,])), 1)
bop_9839 = relay.less(call_9827.astype('bool'), relay.reshape(var_9828.astype('bool'), relay.shape_of(call_9827))) # shape=(4, 6, 6)
bop_9842 = relay.less(call_9829.astype('bool'), relay.reshape(var_9828.astype('bool'), relay.shape_of(call_9829))) # shape=(4, 6, 6)
func_7682_call = mod.get_global_var('func_7682')
func_7685_call = mutated_mod.get_global_var('func_7685')
var_9845 = relay.var("var_9845", dtype = "float32", shape = (1320,))#candidate|9845|(1320,)|var|float32
var_9846 = relay.var("var_9846", dtype = "float64", shape = (2160,))#candidate|9846|(2160,)|var|float64
call_9844 = relay.TupleGetItem(func_7682_call(relay.reshape(var_9845.astype('float32'), [11, 10, 12]), relay.reshape(var_9846.astype('float64'), [2160,]), ), 3)
call_9847 = relay.TupleGetItem(func_7685_call(relay.reshape(var_9845.astype('float32'), [11, 10, 12]), relay.reshape(var_9846.astype('float64'), [2160,]), ), 3)
output = relay.Tuple([bop_9793,bop_9801,call_9807,var_9808,const_9809,bop_9839,call_9844,var_9845,var_9846,])
output2 = relay.Tuple([bop_9796,bop_9804,call_9810,var_9808,const_9809,bop_9842,call_9847,var_9845,var_9846,])
func_9848 = relay.Function([var_9792,var_9800,var_9808,var_9828,var_9845,var_9846,], output)
mod['func_9848'] = func_9848
mod = relay.transform.InferType()(mod)
mutated_mod['func_9848'] = func_9848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9848_call = mutated_mod.get_global_var('func_9848')
var_9850 = relay.var("var_9850", dtype = "int64", shape = (8, 4, 3))#candidate|9850|(8, 4, 3)|var|int64
var_9851 = relay.var("var_9851", dtype = "int64", shape = (8, 4, 3))#candidate|9851|(8, 4, 3)|var|int64
var_9852 = relay.var("var_9852", dtype = "int64", shape = (42,))#candidate|9852|(42,)|var|int64
var_9853 = relay.var("var_9853", dtype = "float32", shape = (144,))#candidate|9853|(144,)|var|float32
var_9854 = relay.var("var_9854", dtype = "float32", shape = (1320,))#candidate|9854|(1320,)|var|float32
var_9855 = relay.var("var_9855", dtype = "float64", shape = (2160,))#candidate|9855|(2160,)|var|float64
call_9849 = func_9848_call(var_9850,var_9851,var_9852,var_9853,var_9854,var_9855,)
output = call_9849
func_9856 = relay.Function([var_9850,var_9851,var_9852,var_9853,var_9854,var_9855,], output)
mutated_mod['func_9856'] = func_9856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9448_call = mod.get_global_var('func_9448')
func_9449_call = mutated_mod.get_global_var('func_9449')
call_9913 = relay.TupleGetItem(func_9448_call(), 0)
call_9914 = relay.TupleGetItem(func_9449_call(), 0)
func_9571_call = mod.get_global_var('func_9571')
func_9574_call = mutated_mod.get_global_var('func_9574')
call_9937 = func_9571_call(relay.reshape(call_9913.astype('int64'), [8, 4, 3]))
call_9938 = func_9571_call(relay.reshape(call_9913.astype('int64'), [8, 4, 3]))
func_2655_call = mod.get_global_var('func_2655')
func_2659_call = mutated_mod.get_global_var('func_2659')
const_9952 = relay.const([-8,9,1,1,9,6,3,4,6,2,2,-1,5,-6,-3,-7,6,-3,3,8,-5,-1,6,-4,-3,-2,-8,-7,5,10,-4,1,2,-8,-9,-7,1,-7,-5,-9,-9,5,-4,-2,4,6,-8,10,2,5,4,-8,-9,-2,-5,-5,2,4,10,4,8,4,9,-8,-1,2,6,-2,6,3,7,-8,6,4,9,-2,7,7,-3,9,-9,-1,3,-3,-7,2,4,2,5,-8,3,-3,9,8,-6,-5,-10,-3,-10,-1,3,-3,-5,-7,-1,5,8,-4,-2,8,-9,-3,9,-1,-2,-8,-10,-4,-3,7,7,-8,2,3,-4,1,1,-4,2,1,-10,1,-7,-4,5,6,3,-10,-6,10,1,5,5,-4,5,-1,4,4,6,-6,1,-6,6,1,6,-1,-3,10,-6,-5,10,5,-9,-7,-10,7,-5,-6,-8,2,-10,-4,1,-1,8,9,3,4,-6,-6,-2,-8,5,-7,-2,-10,3,-7,5,5,-5,3,-10,-7,-8,1,-5,6,-2,4,1,8,5,-2,5,-6,-2,8,8,6,-8,3,-5,-5,1,3,-1,-9,8,9,-9,-4,5,-2,-7,6,-7,-1,1,1,3,-5,-7,-1,6,-10,4,-7,-6,-2,9,-10,-1,1,7,4,-6,-6,-3,-9,8,5,3,-3,-3,2,6,-10,-3,9,-5,-9,1,-5,6,-7,-5,-8,-6,-5,-7,5,-9,10,-8,-9,1,-3,7,1,5,-8,10,-9,5,9,3,5,9,-1,4,9,1,-10,-3,2,6,-6,-3,7,1,2,-8,-3,2,-5,5,10,7,4,10,5,3,-4,-8,-6,5,-2,-5,-1,10,-1,-9,1,-2,5,1,8,3,2,-3,2,-6,-4,-9,6,-10,-6,-10,4,-4,-4,8,10,-3,5,-1,-7,-1,-8,5,-2,10,3,-7,-4,5,7,-9,5,1,10,-6,1,-8,-10,2,8,-1,4,8,-8,-5,6,-6,-5,-8,-1,4,2,2,6,5,9,-7,-4,10,-9,9,-8,6,-1,10,1,-7,-9,6,-4,9,6,8,-2,2,-3,9,-7,7,-1,4,-3,8,10,5,-4,-9,4,-10,6,-10,-4,-2,-5,-1,-6,-10,-5,-10,2,-1,4,7,-7,-4,9,-6,4,6,-7,-6,3,5,-8,-3,2,9,3,-2,4,-7,-2,8,9,5,-2,-2,-1,-2,-1,9,8,9,-3,6,-9,-10,4,-8,1,-2,6,-7,2,-6,-4,-8,3,8,8,-5,6,1,5,-6,5,-9,-3,-10,6,10,10,-4,3,1,7,2,3,-5,5,5,9,-10,2,7,-5,10,5,8,-8,-1,9,10,9,10,-9,3,-1,-2,3,3,-6,-3,6,9,4,-1,-7,5,-8,-1,2,-7,-9,7,8,-1,-2,-5,10,4,-8,-7,10,1,6,5,8,-2,10,-2,-9,3,9,-10,2,3,1,-4,-9,-8,-9,-5,-6,-3,-4,5,7,-5,-3,-7,10,-6,-9,1,7,5,6,-10,-4,-9,9,-4,-9,5,3,-1,-2,-6,-7,-9,8,-8,-1,-7,3,-5,-9,1,7,1,9,-5,-9,2,-9,10,-2,-2,-1,9,-6,-8,-3,-4,-6,4,-7,4,1,-3,6,8,6,-4,10,2,-10,-10,1,5,10,-1,-10,4,3,-10,5,-9,-9,-7,-6,4,1,-9,9,-8,-5,8,5,7,-1,7,6,-6,-10,-5,-4,-2,-4,-5,-7,3,-3,-7,3,6,-10,10,10,-2,-1,-7,-5,-1,-10,-1,-1,-6,5,1,-7,2,2,3,9,2,-2,6,6,6,6,-2,4,-1,3,-7,-1,-8,-2,-4,-8,-3,-5,-6,10,8,1,-3,8,-4,-6,-1,-1,-9,-10,5,1,-6,1,-9,6,-5,7,-10,1,-8,-4,-3,8,9,7,5,4,-4,5,-3,1,8,7,-5,-3,-5,-3,-5,10,-8,7,-5,-7,5,-2,-5,-8,1,4,-4,-10,-7,9,6,3,6,-7,1,10,8,-6,-3,5,-2,1,-7,6,5,-3,5,-5,7,4,6,6,5,6,-8,5,1,5,6,1,9,2,-9,6,9,-6,5,-10,5,2,8,-3,-3,6,-2,-3,-10,-6,2,-6,4,-9,-3,-1,6,2,-9,2,3,-1,4,7,-1,-2,5,-5,10,-7,-4,3,-10,-1,-2,-2,10,2,-9,7,-2,-2,-8,5,4,3,10,5,3,-10,-10,1,-8,-3,2,5,-10,-2,-8,8,-10,-8,-7,2,-1,-6,-9,-1,8,1,8,5,-5,-8,-5,-4,5,7,7,3,-4,-10,-6,9,7,-5,6,-4,-6,-5,-9,5,-3,10,-2,7,-2,10,-10,-3,8,3,-7,-6,-1,3,2,-6,2,4,-8,1,-9,-9,9,5,7,1,7,8,-2,10,1,-10,1,-7,6,9,1,4,10,-7,-1,1,-10,8,2,-6,1,5,2,10,-2,-3,7,-4,1,3,2,2,5,-3,-5,9,5,-9,-8,4,8,-4,9,1,9,-3,-10,-4,4,-3,6,-8,-5,-9,6,4,3,10,-6,-3,6,10,3,-2,-9,10,4,6,5,-4,-9,4,8,5,4,3,-7,6,4,9,-1,-9,-6,-6,-2,-9,-1,-4,-8,5,10,4,8,9,7,7,6,-5,-3,-1,-5,8,5,5,5,-7,-5,-2,10,6,9,7,9,10,-7,9,-3,-8,-2,-4,-2,-2,2,1,-5,-3,-10,2,4,-3,2,5,-10,-4,5,-9,-10,5,5,8,-4,-4,1,4,-5,8,-9,-3,-5,3,-6,6,-1,10,8,-6,8,5,-4,-7,-5,8,-8,-5,9,-3,-8,3,-2,7,-10,2,-3,-7,7,-7,1,-8,-6,3,1,-10,-7,-2,5,-10,-2,-5,1,-1,-8,-1,-4,7,2,-5,6,-3,10,3,-3,-2,-5,-10,-3,-5,9,-1,4,3,7,-8,5,7,5,1,-5,2,2,-6,-3,7,6,-5,5,4,-5,-7,2,-6,-6,-4,1,-10,-10,-9,7,6,-1,4,8,8,-10,6,10,10,10,-6,-4,4,-5,8,7,7,-3,-4,9,-6,8,5,-5,-2,1,-4,6,-10,10,-3,9,7,-3,7,-4,2,-7,7,-2,-5,-9,-9,-6,4,-6,-3,8,-9,2,2,-10,-5,1,-7,1,5,10,4,2,3,6,-3,7,-7,9,-2,-6,-6,-9,8,-6,1,-7,-3,5,-5,2,-9,-9,8,8,6,9,10,6,9,3,7,6,-10,-4,2,-2,-6,7,-10,-4,-10,-10,-2,-10,-8,2,4,-5,-9,-9,6,-3,-4,-8,7,3,-6,10,1,10,5,-5,10,-3,-1,-1,8,3,6,8,-3,1,-6,-7,2,-8,-9,-6,-5,9,5,-6,6,5,-9,5,4,1,-8,-8,-6,-7,-1,4,-4,-3,5,-2,-9,4,7,-1,-7,4,-1,-6,-9,9,-6,6,-8,-8,8,-5,-4,4,8,6,-6,-1,-3,5,9,-3,-9,-4,-8,9,2,-3,-4,-10,2,8,-6,-6,-5,4,5,9,-8,10,-7,4,-6,6,5,10,1,5,8,-10,-2,-9,2,2,2,8,4,7,-8,-8,8,-10,8,10,-9,-9,7,-10,5,-10,8,6,-9,-10,7,-2,5,-8,9,9,10,-1,-5,7,4,8,-5,-2,9,-3,-1,5,-9,1,1,-6,-7], dtype = "uint16")#candidate|9952|(1408,)|const|uint16
call_9951 = relay.TupleGetItem(func_2655_call(relay.reshape(const_9952.astype('uint16'), [8, 16, 11]), relay.reshape(const_9952.astype('uint16'), [8, 16, 11]), ), 2)
call_9953 = relay.TupleGetItem(func_2659_call(relay.reshape(const_9952.astype('uint16'), [8, 16, 11]), relay.reshape(const_9952.astype('uint16'), [8, 16, 11]), ), 2)
var_9954 = relay.var("var_9954", dtype = "uint16", shape = (1408,))#candidate|9954|(1408,)|var|uint16
bop_9955 = relay.not_equal(const_9952.astype('bool'), relay.reshape(var_9954.astype('bool'), relay.shape_of(const_9952))) # shape=(1408,)
func_7682_call = mod.get_global_var('func_7682')
func_7685_call = mutated_mod.get_global_var('func_7685')
const_9968 = relay.const([-3.904317,-2.007576,9.079146,-8.562349,-1.719081,-4.064595,-7.171154,9.887495,0.362663,5.882001,6.267306,-9.386315,-8.277427,-4.964442,-2.290409,-1.784898,-3.900547,3.458640,4.316721,9.370127,-2.031751,9.041912,-6.852036,-0.787297,7.494662,7.072545,0.618267,4.747834,2.953790,8.589070,-8.194051,-0.140486,-4.733856,-4.413587,3.248696,6.074757,-7.007228,-6.768651,-6.393287,-9.254189,5.300435,-0.811308,5.662902,-1.334106,5.322204,-9.223426,9.297633,-6.668380,-8.614268,0.336215,-5.540716,3.902968,7.276227,-3.704864,-6.749377,-6.420170,-5.135114,-1.224025,-3.031037,-0.725419,-8.187987,-2.451107,-3.877985,-5.591655,5.122360,-5.257879,-7.689192,-6.209188,-0.235264,7.811821,2.773665,-1.745778,-2.476092,-9.540009,7.803213,3.825077,3.241506,9.856850,-7.388896,8.478530,2.189150,-9.512663,3.966629,-7.153085,0.003438,2.186903,0.113710,-5.212829,-4.644104,-7.877329,6.684180,-2.868641,3.411719,-3.789670,2.176238,-8.932667,-7.141931,-3.725025,4.857441,5.097185,6.605629,-2.119840,-7.022753,-4.760264,6.697742,-8.645394,-1.788102,1.626525,-6.277615,-8.311733,1.526194,-4.145147,3.529314,-8.522139,2.079470,8.648053,-7.271869,3.897815,-5.807541,8.529566,8.502187,-1.238147,-7.524045,5.585586,-1.492214,-7.597930,-3.775770,7.013813,-3.855292,4.586181,9.844125,-7.517302,-2.338790,-3.007309,7.325383,-9.060100,4.494970,1.349135,-0.817513,-6.227667,-5.432686,6.051453,6.278608,-0.006000,-5.781252,-7.819965,-6.680714,9.322642,-2.875264,1.241790,2.600189,-3.404292,-5.546501,5.694627,6.240417,7.817220,-6.006290,-9.902551,7.424470,3.093299,-8.929276,9.532641,-3.447084,2.198683,-9.581689,2.379767,-4.793123,-9.693715,4.812264,-6.471608,5.400483,-3.805077,-0.769111,-0.459951,4.922745,9.450175,3.798032,-3.761279,9.412195,-9.098335,-6.348621,5.761934,-6.624910,8.289006,3.881643,-6.100113,-7.651489,8.686413,4.822514,-1.461855,1.385647,6.561600,6.615817,7.026042,7.748067,-4.865285,4.522238,9.164386,-6.222352,4.786431,-1.944706,-5.474579,-3.438376,3.213446,8.267616,-7.310518,6.734115,6.569720,0.416758,7.770263,9.266632,-2.082020,2.378741,-2.741000,-1.099191,-1.438616,3.118573,6.872578,-2.472296,4.925532,6.724562,-5.296145,2.508414,6.423224,-5.719656,-8.855526,-5.934788,-6.834594,-6.684816,8.778827,-2.673582,8.891635,8.572143,2.641929,1.926518,7.804126,-6.510400,9.693820,-5.388162,-3.043248,2.937621,-5.944410,8.825154,7.140379,5.144188,1.344151,-4.059151,3.371637,6.063979,7.541871,4.337452,6.686830,4.927638,-7.122847,0.945038,-0.019014,2.642275,1.668587,-6.593136,-7.540723,2.320231,9.044518,-1.671265,5.898892,-5.267888,-7.448567,-8.264813,1.755434,-4.109176,8.216000,1.868236,-5.926340,-3.509948,0.297878,-7.165985,-2.696554,6.416451,-9.252828,-9.671284,-4.233014,-2.118235,-5.160524,-9.797071,-2.282080,9.716020,3.443328,-7.138516,4.860548,8.295387,7.915521,-2.444081,1.912896,1.498327,1.778608,-4.628125,-6.351352,-6.612268,5.282171,2.776296,6.156743,7.156547,4.017178,-7.767295,-6.160260,5.350725,-5.119640,2.969200,-8.689978,4.181093,-4.253167,6.473511,-8.905869,9.018897,-0.989471,-2.157807,-5.203814,-6.553082,1.374437,-2.686388,-7.299176,4.858339,-9.109397,7.812708,9.016007,-0.101238,-0.913605,5.362664,-0.407525,-0.228963,9.624247,-8.403143,-8.679358,6.647982,-2.425278,1.392031,4.562729,6.247297,5.558979,-2.642477,8.816765,-2.132252,-6.535550,-7.823027,-4.414378,-9.596221,9.622370,7.876270,3.657578,4.132947,1.259063,8.219164,3.398560,-1.796903,6.986972,-5.125489,4.752340,-8.623604,-2.106511,-9.658884,1.222506,-3.200931,-2.491243,-6.557430,-0.815068,4.295040,-6.978539,-1.495595,7.729306,-9.673109,-6.337055,2.618062,0.779764,3.649408,-3.552071,-4.144219,-5.838979,5.603228,3.054861,4.566556,1.799757,8.272720,5.305759,-3.203845,-1.597207,2.062973,8.866567,-2.292711,-1.644426,-0.920694,-3.669377,-9.760830,6.300808,7.767409,9.044252,-1.927551,5.736998,-7.554963,3.454595,3.371188,4.240108,-0.256786,8.629759,5.386953,6.507700,-8.333842,-9.467227,-0.552907,-1.985653,-6.525743,-5.592621,4.005492,-7.696225,-8.343771,-4.791510,9.255854,-8.128910,-7.673598,1.383534,6.388534,9.254142,-6.237377,-0.351049,4.729858,-8.215498,-1.530521,-0.247455,-6.011713,7.450028,-0.593726,-4.643738,6.768343,-3.743971,-3.738515,1.570724,-5.495937,5.538200,5.199868,0.762313,9.402245,-5.131745,1.354037,0.315074,-1.844895,-1.424812,-9.941386,-7.981131,-8.451375,9.299491,-0.853465,-2.001411,4.880596,0.406663,-5.308940,0.604972,-2.364435,6.762558,-5.268765,1.767408,-5.005804,0.056482,-5.374510,-7.480067,-4.266609,0.899846,1.969136,2.375151,-5.453664,3.407149,-8.849297,-0.857730,-5.011973,-9.850960,-1.704250,1.101766,3.515840,5.308947,7.356894,-6.176359,4.686667,-6.301705,-4.008572,0.392491,6.691763,9.206849,3.292950,-0.385891,4.315093,-1.065246,3.074507,-7.800581,-8.223316,-8.266771,-3.024892,-1.721900,9.038173,-7.749934,-9.283872,-7.639778,-8.425054,3.026456,8.515320,4.531305,-7.831594,-5.606533,-8.809263,2.057364,-5.334196,-2.534013,-7.485732,-5.739211,6.620020,2.569445,-2.863724,9.443909,3.742169,-7.515878,4.859867,-1.958030,7.983828,1.206786,3.342918,-2.376612,-2.326345,-2.242587,0.647970,-4.036104,8.199581,2.158964,1.552589,-8.784943,6.340779,3.706558,8.504061,1.685241,-0.457001,-7.977139,4.869773,3.760632,3.907268,-1.589765,-0.327516,1.743453,6.499725,6.226288,-9.309101,3.254565,-9.621396,-3.975119,-2.990981,-0.126037,-9.020109,6.267737,-3.756876,2.880929,-3.422294,-6.297326,7.289138,7.263982,-0.260409,9.647465,-1.544237,6.744945,-2.103432,-5.808863,8.591745,9.061732,2.307821,3.025648,-6.848954,2.271059,-1.709574,2.288981,-4.325368,-2.884943,-4.435403,7.694162,5.282637,0.087666,-1.169401,-7.143416,1.251735,3.222426,-5.827303,-8.518114,4.689071,-0.547727,4.033361,0.309696,-0.506831,1.850939,-7.627153,7.841568,0.416860,4.004819,4.411820,8.977683,8.198105,2.020744,5.096989,-2.491872,-1.697995,-9.990395,2.786012,3.068928,-8.819870,-8.121272,8.528699,-7.024756,-0.887408,-7.452719,2.432104,-6.902621,-5.963691,8.636976,5.094244,-1.680389,-0.085906,-7.412955,9.568570,3.099906,-3.300908,-1.246614,2.260933,-2.101244,-8.141121,3.467292,-8.054215,-5.009003,-9.997761,-4.721207,-9.707416,2.099817,1.938160,-5.958808,4.808560,-4.923558,2.048280,1.931804,1.556361,-1.727368,-0.917692,-8.543984,-5.606226,2.065521,-6.590497,-7.079017,-1.634704,9.244376,4.579580,-4.843015,4.169746,-2.656841,6.782394,9.991403,7.121988,-4.753966,-3.096651,-1.764599,-5.150739,0.534969,0.930876,6.146922,0.832135,-0.116240,-2.719239,3.054347,0.496192,-5.336211,7.450557,-5.965258,5.976163,-5.508274,3.605381,-9.020114,-8.881035,-5.377512,-8.668858,3.835985,-9.790497,-2.636727,4.689736,-0.230928,-9.379578,0.732645,-1.731378,-9.883359,0.661928,2.027758,-2.164601,-3.600942,0.648288,-9.785335,-2.615047,7.296246,9.343724,7.039644,8.861479,-3.021794,-7.878078,0.356902,3.668351,-9.484448,-5.384715,7.649568,-5.593908,7.131301,-4.486273,6.956481,-7.357584,2.578335,-5.216761,-1.044151,-8.269997,3.963432,-4.715194,0.806608,0.711445,-5.490646,-7.739829,-4.604279,6.382122,-2.378039,2.444887,-6.148880,5.084162,-2.397454,-2.277467,4.786783,3.579706,6.505624,-6.491423,1.920729,2.690070,2.252406,1.457811,-2.840556,-8.467622,-4.011910,-4.646215,5.330164,-7.869110,8.813286,-7.593424,6.188597,-8.269606,1.959091,3.119455,-7.720966,5.585037,-1.600176,9.375282,7.823997,-7.882203,4.263112,2.815255,-0.925891,-5.885611,-7.738813,-2.020114,-2.996635,7.585727,2.306020,-6.593652,8.655456,-3.083190,-9.616516,-9.106176,6.186211,7.017355,6.160673,3.748842,-8.195090,8.601735,-8.553493,-7.664688,-5.750455,-1.344912,2.537279,7.355813,-2.699433,-6.043111,2.849227,7.500920,3.015992,-4.093421,1.175552,-2.314331,2.302641,-3.384167,-5.024046,5.805836,-6.039239,-5.660458,-8.666144,-9.363892,0.708440,-4.313761,4.375621,8.676075,-4.178653,7.132913,4.095468,-5.759270,-7.782039,-7.962277,5.580119,8.410663,-1.201215,9.897154,-8.300089,3.934377,8.571936,-4.380532,6.506196,3.863305,8.377672,1.159930,0.889453,-2.761602,4.007990,-6.110449,-1.069790,-6.041486,4.413876,7.438202,-2.929047,-0.161651,-4.083395,-2.366920,-0.792966,-8.631086,4.809900,2.238560,5.137373,-4.631956,-4.096529,2.135458,-7.439734,5.605216,-2.335007,3.029829,-5.612324,-4.208549,3.706487,-8.773381,-3.772278,8.695541,5.463453,-5.108682,-4.480075,1.613317,1.803591,5.344533,-6.516900,-6.806758,-4.430655,4.028043,5.512003,6.223150,2.964474,-6.024533,-5.194757,2.089916,-1.913333,-5.939405,-7.855602,-8.029788,0.738592,2.832648,-1.581537,-9.969868,-6.106903,7.264124,4.141753,-5.210934,6.118761,-1.774851,-2.306030,1.731972,-1.302007,-3.395102,2.550392,-3.797700,-2.487386,-1.295486,8.393954,0.631355,1.429198,3.021315,-2.749502,6.663868,2.173926,7.025282,6.575071,-3.532128,3.929112,-0.315497,8.074547,2.023178,-0.970305,7.357835,-1.728695,5.679423,8.529891,-3.861961,-6.269666,4.218331,0.167094,-9.634800,7.850258,-1.966592,0.510209,4.488556,-0.038268,-9.677593,2.812033,-1.573273,7.175386,2.372715,2.689015,-7.159848,1.154591,9.672919,-1.916164,6.071100,-8.469488,-1.107194,-3.762432,9.790889,-3.249457,5.894765,8.225772,5.715402,-2.355911,9.690169,-6.457384,1.348094,-5.947279,6.493447,-5.697409,-8.301800,-0.931907,-9.334973,6.324241,0.764370,-9.081320,9.728681,8.954502,-8.960032,9.556150,5.603200,9.982467,2.523237,4.071213,-0.694625,8.005310,-0.377006,-1.194122,-2.559410,-4.365273,0.015998,-0.519826,-9.176692,-9.246710,4.456860,5.839556,6.124831,-8.950578,-0.528775,0.244234,0.378071,1.401058,6.418219,0.906721,0.145783,5.175247,-3.679372,9.763090,1.628295,2.741791,9.963715,8.371118,4.755901,5.653118,8.212968,-3.479915,0.262798,8.233130,7.612035,-3.776332,-4.777318,-8.156974,-6.925869,-7.620667,1.448285,-1.322240,-7.051573,9.507422,5.933379,7.807984,-5.838865,-0.061872,8.736275,-5.774370,-2.842682,-1.835435,-5.493316,1.031649,-6.068803,9.664179,6.855082,4.342248,1.889494,1.301296,1.703706,-5.040706,-6.412037,-9.198257,-3.987294,9.384499,9.107839,7.639799,-1.893521,-4.984597,-1.304163,-9.999617,-6.719064,6.699231,-0.302228,-1.190813,1.531075,9.138928,5.912492,-6.356669,-8.591897,-4.911624,4.197429,-5.093236,-0.766056,-4.538028,-2.853242,-9.948170,-7.589425,-4.033266,-3.121166,8.957280,2.555174,-1.805263,-3.516791,-1.537709,-2.169245,-3.066079,0.318337,3.495986,-4.129535,-1.249058,-6.204962,0.165430,1.178570,9.072533,-1.028852,6.531814,-0.456054,0.862746,-2.943945,6.463683,-2.875164,-0.188647,-0.059603,-6.535259,-3.181851,1.462996,7.085330,7.903786,2.936592,9.534393,6.037597,7.823591,-5.427202,-1.467698,9.710711,2.189999,-5.828730,8.606652,3.757573,8.913259,-4.538501,-5.912199,2.039222,-7.773989,-5.020285,-4.832019,4.157420,5.101026,-0.266605,-4.560049,-7.924961,-9.330068,-8.929905,5.687219,6.291101,4.865219,-9.734632,3.357205,9.673191,-3.583629,2.962788,-7.601221,-1.240965,-8.055798,3.283214,-7.672593,-0.068949,-1.045589,-6.390299,-9.201154,-7.908453,-9.514585,2.459493,-9.216956,1.202417,8.819205,-1.185203,8.898874,8.787582,6.387645,2.703371,-1.639470,-8.563653,-9.257971,7.813573,-2.207182,-1.820214,-6.546939,6.853589,-3.185634,0.266714,5.237680,8.569419,-0.207961,9.361678,-5.595319,-3.863490,-8.672728,1.170170,7.737239,-7.181836,6.366647,-5.461839,-0.216284,-5.893818,8.107398,-4.535344,8.248450,7.585609,2.370957,-0.217420,0.732237,-9.600149,6.249493,-3.204376,-3.402582,4.065640,3.363508,6.400399,0.888749,7.643903,8.746259,2.208506,1.494490,0.516375,1.262007,-9.310176,-4.852013,1.144978,0.042736,-1.511288,-9.485536,4.985291,-4.711513,6.049212,-9.930269,-8.519054,5.230798,7.234958,-8.893312,1.461003,-7.872494,3.531751,-3.037280,-3.259796,-8.215818,-9.199364,-1.790246,2.441088,-5.123496,-2.884298,2.185579,6.723681,4.002951,8.049506,9.195024,3.492250,3.928037,-5.212843,1.713337,1.343577,4.146274,-7.168729,5.499397,-2.355314,3.937253,-9.518087,4.983021,4.726348,-1.713393,2.883438,1.075864,8.415770,1.080751,-0.392401,5.186448,-8.589636,8.098916,-7.143239,-3.790061,3.866126,-5.070044,-9.020193,2.149686,-5.190232,5.496472,5.517361,-9.186211,6.870719,-1.860268,6.142946,8.305858,-9.223669,-2.692856,4.368079,-8.312971,-7.411335,-9.874286,-3.928484,-4.401441,-0.942911,-6.627325,-0.691135,-0.229316,-2.451924,-2.527429,-1.323798,-6.077887,-6.929606,-3.451474,9.329102,-6.306008,9.969698,9.397996,-4.946675,-8.858979,7.123170,-3.058550,4.954034,1.359850,6.709889,2.254392,4.339899,8.449351,2.435145,1.167473,-4.628159,-7.085247,-8.897076,5.437887,-3.270032,5.811862,2.880604,7.827152,9.835228,-6.748034,-1.683296,-0.030257,5.440018,-5.993293,1.618115,-2.612937,7.912313,7.300752,-9.852252,5.556768,-1.869202,-0.090115,-3.266127,2.526543,-3.125880,4.132527,5.875108,-8.666225,7.603538,8.981611,-6.547206,-3.717315,1.849612,4.778708,-0.986218,-4.098898,-7.610757,-0.898731,-2.820100,-6.843564,-1.787159,-7.155678,1.119784,-6.905895,8.207780,-6.210470,3.320445,8.236852], dtype = "float32")#candidate|9968|(1320,)|const|float32
var_9969 = relay.var("var_9969", dtype = "float64", shape = (20, 108))#candidate|9969|(20, 108)|var|float64
call_9967 = relay.TupleGetItem(func_7682_call(relay.reshape(const_9968.astype('float32'), [11, 10, 12]), relay.reshape(var_9969.astype('float64'), [2160,]), ), 4)
call_9970 = relay.TupleGetItem(func_7685_call(relay.reshape(const_9968.astype('float32'), [11, 10, 12]), relay.reshape(var_9969.astype('float64'), [2160,]), ), 4)
func_9235_call = mod.get_global_var('func_9235')
func_9238_call = mutated_mod.get_global_var('func_9238')
var_9972 = relay.var("var_9972", dtype = "float64", shape = (112,))#candidate|9972|(112,)|var|float64
call_9971 = relay.TupleGetItem(func_9235_call(relay.reshape(var_9972.astype('float64'), [112,])), 6)
call_9973 = relay.TupleGetItem(func_9238_call(relay.reshape(var_9972.astype('float64'), [112,])), 6)
bop_9977 = relay.floor_divide(call_9937.astype('float32'), relay.reshape(call_9913.astype('float32'), relay.shape_of(call_9937))) # shape=(8, 4, 3)
bop_9980 = relay.floor_divide(call_9938.astype('float32'), relay.reshape(call_9914.astype('float32'), relay.shape_of(call_9938))) # shape=(8, 4, 3)
func_9026_call = mod.get_global_var('func_9026')
func_9028_call = mutated_mod.get_global_var('func_9028')
call_9988 = relay.TupleGetItem(func_9026_call(relay.reshape(bop_9977.astype('int64'), [8, 4, 3])), 2)
call_9989 = relay.TupleGetItem(func_9028_call(relay.reshape(bop_9977.astype('int64'), [8, 4, 3])), 2)
uop_9993 = relay.log2(const_9952.astype('float64')) # shape=(1408,)
output = relay.Tuple([call_9951,bop_9955,call_9967,const_9968,var_9969,call_9971,var_9972,bop_9977,call_9988,uop_9993,])
output2 = relay.Tuple([call_9953,bop_9955,call_9970,const_9968,var_9969,call_9973,var_9972,bop_9980,call_9989,uop_9993,])
F = relay.Function([var_9954,var_9969,var_9972,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9954,var_9969,var_9972,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

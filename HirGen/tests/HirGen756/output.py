import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_446 = relay.var("var_446", dtype = "bool", shape = (10, 16, 10))#candidate|446|(10, 16, 10)|var|bool
var_447 = relay.var("var_447", dtype = "bool", shape = (10, 16, 10))#candidate|447|(10, 16, 10)|var|bool
bop_448 = relay.logical_or(var_446.astype('bool'), relay.reshape(var_447.astype('bool'), relay.shape_of(var_446))) # shape=(10, 16, 10)
output = bop_448
output2 = bop_448
func_469 = relay.Function([var_446,var_447,], output)
mod['func_469'] = func_469
mod = relay.transform.InferType()(mod)
var_470 = relay.var("var_470", dtype = "bool", shape = (10, 16, 10))#candidate|470|(10, 16, 10)|var|bool
var_471 = relay.var("var_471", dtype = "bool", shape = (10, 16, 10))#candidate|471|(10, 16, 10)|var|bool
output = func_469(var_470,var_471,)
func_472 = relay.Function([var_470,var_471,], output)
mutated_mod['func_472'] = func_472
mutated_mod = relay.transform.InferType()(mutated_mod)
const_608 = relay.const([[[-5.325762,-6.583668,3.723980,6.168374,-1.138878,1.024934,7.536294,-6.974295,-2.000616,8.362590,-4.559421,7.431353,-4.852987,-8.085154,-7.541790,5.775757],[-6.053151,9.206186,0.066271,-1.190062,-1.223191,5.256503,5.216641,9.548429,-3.378530,-3.324737,-0.774629,-0.691421,-7.719220,3.623572,5.494687,8.535648],[-2.702819,5.735182,8.283898,-6.206261,5.667538,1.838734,5.421287,-6.015589,3.279724,5.783267,0.663178,-2.527955,-3.595172,-6.429704,7.430828,5.000292],[-3.090601,1.245854,-2.041204,3.595828,1.876123,9.061483,5.863391,-9.751163,-0.321589,3.259920,-3.257041,1.513266,4.368178,-0.806971,9.528528,4.333000],[-7.839369,-8.341959,-7.625696,-1.349774,-9.736492,-7.327371,8.466538,5.422898,-6.901708,7.036986,-8.797074,-2.545193,2.633675,-0.115821,-0.821644,-3.882965],[-2.056129,-7.631466,5.022499,8.158702,-4.137082,7.778195,-4.162386,8.461314,9.259213,7.677088,6.133553,-5.725926,-6.016871,9.838058,-1.301936,9.574295],[-8.597027,0.933804,-3.982522,-1.437631,-2.932299,7.325644,-1.152778,-2.664183,4.767422,1.296140,1.523981,1.901320,6.092686,-3.228255,4.698986,-0.120693]],[[3.802359,7.286431,-5.100276,-5.608700,5.412974,-8.364068,-4.608589,-0.495224,-6.778650,-3.902679,5.576735,-6.163333,4.606915,-0.884221,-0.980603,-8.779143],[-2.032692,-9.898417,2.014060,6.834127,-1.840607,-3.206650,-2.207209,-6.761376,6.270956,-6.472771,1.459250,1.012719,-1.697361,7.234267,-7.613097,-7.740683],[7.153989,-4.573908,-5.472853,3.338840,7.646624,4.339879,-6.968697,-3.161043,8.089172,-6.130341,6.051750,7.431112,9.459154,8.227965,-1.326226,-6.358989],[-4.527496,6.883720,6.425323,3.133828,-2.388067,-9.987456,-5.822406,-6.272705,-9.980481,-5.469864,-1.951742,0.944293,-9.541515,-3.633168,-8.686528,-8.445425],[9.219782,5.232035,6.374389,5.795681,-8.780582,-3.239987,-7.032165,-3.865136,-5.504298,5.080944,-8.634318,-9.211245,3.041972,4.292137,-1.562126,-8.684781],[1.799835,-9.931364,-4.541305,9.223135,1.217610,7.672162,-6.257340,-8.884335,8.117786,-5.481707,-1.936393,-6.520811,4.652946,-0.923632,-2.829394,1.731601],[-5.127831,-7.844861,5.627826,3.108582,6.202285,-4.872801,-4.584104,-6.967526,-7.967929,2.904675,-5.561522,-6.047180,-1.119218,9.724095,6.642981,-5.323084]],[[-0.319710,-0.584364,-3.319398,-4.504131,5.207227,-4.010213,-6.537685,3.408461,6.477119,9.452758,-8.039082,9.502186,-4.670723,4.974558,6.837078,-1.273009],[-8.671381,7.277890,-1.352050,7.787251,-9.795829,-2.092793,-7.790700,-2.831717,-9.757410,8.325597,5.010687,2.377975,4.918492,-4.706109,0.304991,-1.652502],[0.590625,-0.759881,-7.618669,9.538065,6.886199,5.520409,5.793533,4.556837,2.661480,4.049657,9.627930,1.646731,2.481855,8.239598,-9.004446,6.960674],[2.657694,5.083351,9.193507,7.008098,-8.563441,-7.677921,-3.608922,-0.403058,2.529919,-5.973004,-4.898987,1.989136,8.856033,-0.036840,0.962107,-3.312145],[-4.526361,-2.341182,-3.275898,-6.906259,-4.486075,9.677871,4.978665,-7.850138,6.824410,7.640355,-6.261409,1.622268,-1.199757,7.527244,8.004981,-2.590917],[-3.885370,5.642011,-2.073644,2.185350,8.492531,6.397469,-4.404661,4.418233,9.939487,-5.427517,2.339750,4.505533,7.658100,9.217142,-6.675414,-4.859420],[-7.653782,-0.266542,-1.512637,1.916676,-4.907546,-0.988030,6.663373,-0.162668,-8.538528,-8.831006,-3.790956,0.822495,9.307808,4.247802,5.227231,-8.416398]],[[7.271952,-8.535120,-5.706330,9.615094,0.564105,-1.081175,1.266476,6.836327,0.497462,-5.063737,5.438058,4.212256,-6.413443,7.000042,3.986290,-5.304730],[-9.193541,-2.352752,-9.335417,9.431638,4.193504,-9.098101,-6.622379,-5.604151,-1.194389,8.784504,7.321570,-2.860588,6.099874,0.782361,9.286848,-4.861210],[-6.995102,-0.051940,-4.851618,-3.551221,3.729156,1.985502,-0.538575,2.438390,-1.051587,9.580085,-8.603727,4.496913,8.030502,-4.921533,-0.109525,-1.394563],[6.572619,-0.528681,-3.168228,4.663132,7.697211,9.518323,-1.493850,-5.143211,0.365140,-4.738996,3.276444,-8.806430,-6.508708,2.242229,9.173773,-0.320181],[4.593455,-2.269696,9.399943,2.517114,-2.089151,7.541157,-6.250164,7.645533,4.712591,2.502265,-2.072173,4.930182,-8.363814,4.857869,-1.547353,-6.257460],[-0.848318,0.548664,-2.873027,3.027611,9.845302,4.022251,-1.704208,2.371054,1.348625,1.025925,-6.795647,-6.421124,4.674230,-6.170175,1.356722,0.107389],[-1.074425,-3.785012,-3.097339,7.762709,-1.974019,8.203248,-5.082438,-3.075911,2.061191,5.715225,-9.310259,-0.192197,8.418634,5.101975,1.683738,8.285351]],[[8.843868,-9.555565,5.956322,8.672223,-8.258531,-7.332180,6.765426,-3.489504,-3.035703,2.032359,-5.041619,2.901963,-9.733854,-8.796863,4.854556,0.907743],[4.694051,-2.540319,-4.491574,-1.664267,-4.447203,6.042372,7.847717,-7.800034,8.077356,-5.513521,2.001053,6.164806,-3.643454,6.579105,0.027479,-7.200316],[-5.684825,1.022816,-8.268056,-3.527260,9.413304,9.321886,2.708999,-1.571937,7.430527,-5.895291,-8.486248,-8.667067,-4.551224,0.330274,1.865835,-7.949573],[-4.236891,-5.672675,-7.920012,-3.192528,-7.856688,-7.881807,2.362190,-4.088387,-2.262227,-9.026711,-3.898097,9.771327,-5.018865,0.023303,6.991919,-5.892550],[3.724959,-1.864432,9.503510,2.531971,-5.793267,4.184546,7.039201,-2.267147,5.747311,-2.405101,-8.687134,-2.907826,-4.396077,-9.671570,8.870853,-6.600144],[0.317346,-9.748750,1.401903,-6.573690,-6.723112,6.954588,2.201817,1.594790,-4.899329,-7.645460,8.816755,-1.295144,-9.085135,1.878127,7.668092,4.486248],[0.863242,3.176708,5.706051,-9.875336,8.457747,1.807118,-1.514494,5.784252,4.705245,4.862958,-8.150627,-6.702485,-4.358042,9.523092,7.459690,-7.736908]],[[-5.973074,6.084494,3.474888,1.002377,-8.323630,0.088549,2.795088,4.494341,-0.594869,-4.537040,-6.131278,-6.186781,-7.472139,-6.779583,-7.767270,-9.651265],[-7.956655,-4.626316,-1.380025,5.770303,7.088822,7.977382,5.770742,6.971901,0.907621,6.071310,-1.018669,-9.529240,7.821488,5.011335,9.660467,-9.878088],[5.206169,6.151307,6.921866,-0.682856,7.538013,7.039966,3.580974,-3.687150,-9.558510,-7.484479,2.975870,-1.716211,-7.284301,-9.103629,6.843881,8.168299],[-7.673634,-9.083195,6.934248,-7.221209,-3.505761,-8.630192,-5.904267,-9.496202,-8.244474,8.962315,5.969233,-9.554550,0.147985,1.691715,0.071283,-1.878412],[4.466432,9.872110,6.727054,5.316931,-9.797066,1.487364,5.510387,9.296074,6.657233,0.590393,-9.180309,-9.660153,1.043615,9.142255,-6.123267,-4.387473],[-6.295625,8.773764,7.435576,-3.724149,-5.653224,-7.418282,4.203232,2.606168,-2.940931,-7.820122,-1.666657,4.139576,-7.203487,-6.832755,-8.495455,7.664723],[3.575944,-5.890274,8.647462,-5.574825,8.137771,9.375211,-2.725659,7.043139,-1.017482,-5.131775,-9.959865,-1.073530,-2.140588,4.151849,0.532433,5.228767]],[[9.256253,9.942252,-2.925872,-0.162782,-9.596163,2.178584,-8.730346,9.813560,-1.247803,0.008940,4.906855,0.756908,2.075772,-4.852818,4.186800,4.325979],[-1.396527,-4.735417,-3.585297,-8.744427,-7.707371,6.307798,-1.313365,7.204279,-7.648018,4.889268,-6.073753,2.022081,6.884924,-4.732852,-7.859621,-2.434675],[-2.585851,0.428576,3.677948,6.101171,3.889741,4.144362,-0.788696,-4.976664,6.255273,-2.316483,3.658245,1.510545,-0.837403,6.448173,7.147344,2.858627],[-7.970442,-0.335171,-2.556774,-7.780613,2.027545,9.816701,-8.112352,-1.637429,9.909936,-3.590317,1.201430,3.640606,4.247704,-7.127864,-9.689997,7.490245],[-7.576840,0.721676,7.673013,8.315510,6.130329,-3.624593,-2.929154,1.724670,-4.304964,-6.026401,-2.022096,5.959383,9.900600,-6.865429,3.153489,-9.371880],[-4.399739,-6.484472,4.187603,-6.220167,-1.304397,3.849578,2.673523,-1.232205,-1.821804,7.485928,-5.158392,-4.820384,-8.770952,-8.071208,-1.739515,-4.811916],[-0.368335,4.135130,-7.959846,-2.186776,-5.205491,7.180387,-4.066788,8.068642,6.666681,3.844751,5.072847,9.031899,3.398162,6.264656,-4.775314,-0.416749]],[[-6.353821,2.568617,4.035828,5.953440,5.810536,0.876566,-8.601055,-9.891048,-6.401028,-1.443280,0.961120,7.191643,3.561545,5.777679,-0.340144,-5.852613],[2.782762,8.926640,4.117252,-0.833686,-7.576601,-7.667444,1.225288,-6.867227,9.875898,6.649878,-6.032401,2.669340,-5.075905,8.749622,-2.994914,8.963179],[6.632473,-5.157365,-2.692444,5.376713,-4.714668,5.880269,-8.801007,5.854734,-6.880818,7.944984,-0.985925,-8.170475,0.135978,9.071970,5.503963,0.754512],[-6.033126,5.805382,-3.213336,1.210363,3.093784,-8.496658,-9.628850,8.177859,3.874730,1.185365,6.245654,-3.279320,4.652379,-6.675958,-3.299768,-6.078698],[5.230019,2.011649,-6.405399,-5.026544,-1.388313,-3.926174,0.640305,0.744014,-0.746313,-3.924695,2.785963,-8.011059,-8.876774,1.430924,-9.070518,4.659301],[-7.727819,9.906466,9.245726,-8.131580,3.236832,-8.742135,-0.125060,2.735873,-8.654051,-5.570269,-7.819006,5.322168,5.106653,4.230988,-7.609898,5.965723],[-5.792009,0.210685,-3.654284,2.279381,-9.482768,-5.092783,7.913929,8.493349,2.147458,7.981706,-3.628912,8.637288,-1.294586,6.275801,5.820069,4.628360]],[[-7.882884,-9.328142,-7.877677,-1.646662,3.072230,5.601249,-7.362434,6.882978,-5.523750,2.125560,0.723497,-0.178324,3.786854,-0.144615,-7.559858,-4.136092],[-2.152701,5.058649,-2.369654,-7.892514,4.406239,6.883966,-2.155761,6.450868,3.083794,-6.715283,9.427456,-0.083736,-0.229685,-6.323699,-0.451745,9.176355],[6.083257,5.947715,-3.647100,2.240530,0.874616,8.081743,8.044729,-9.864211,6.149412,1.208327,6.569301,-5.150481,-2.006590,-8.233840,7.229489,-6.589007],[6.304421,2.500597,1.354411,9.698213,2.467227,-7.075184,4.593495,5.986866,1.873977,-1.095884,6.139236,9.229904,4.978532,-2.185654,2.810154,0.522818],[3.218845,3.417578,7.174658,6.904993,7.595015,-0.811352,4.393498,-5.368011,-3.612094,8.789955,4.794620,-2.972390,8.597828,3.444655,0.661159,3.664043],[7.894595,4.571445,2.919782,2.871847,-4.338805,1.598653,-3.551659,1.711868,-7.192021,-1.486828,4.548289,-9.319334,4.059391,6.489910,-5.031206,1.362721],[4.748564,3.982812,-2.337931,-9.715269,-0.913122,-6.672593,5.344892,1.493746,-0.208121,3.599914,-7.685524,-5.732777,1.419967,-8.358536,-0.207746,-7.933616]],[[-7.330928,-6.438877,-9.381465,-3.809598,0.498360,4.600183,-6.326110,-2.518780,-4.009592,-7.784257,-3.712641,3.849939,-8.683290,3.844310,5.753807,1.309655],[4.211365,-2.797471,-7.447074,-8.917206,6.649432,-6.271824,2.861705,7.435771,-4.207611,-2.846706,-7.591320,-8.243365,-6.246883,-5.003503,2.296330,1.756626],[1.768614,7.410659,-5.879413,4.391331,1.775303,0.291995,6.330114,7.764363,-3.987890,-8.214083,0.074616,-3.847567,-9.117019,2.806878,-4.170232,9.403679],[9.007331,4.486157,-0.523515,3.506164,-5.870724,-4.807650,4.791356,9.067858,-3.727202,5.182093,-5.006867,5.319696,-7.723105,6.028202,3.637358,-1.236778],[7.811617,2.425208,2.505350,7.750589,1.709001,6.277202,2.776506,8.306667,-0.294195,0.939623,-9.260210,8.176216,-8.328561,4.840278,1.781334,-9.530143],[5.716201,0.278454,-5.601769,-8.984009,-4.735523,1.408975,-7.082123,3.303796,8.347787,8.617472,2.235647,-2.456797,1.867930,-7.549991,6.635226,1.483324],[-2.948301,2.566225,-1.084739,-6.681096,9.647532,-3.883042,-8.706197,-2.494554,9.410770,5.820763,8.048933,-9.037999,4.143211,1.843782,8.044795,9.500871]],[[9.310753,-5.225994,-3.923124,0.928876,-7.065437,4.135522,9.679650,-5.686613,-5.692744,-8.448981,6.751573,-5.863916,7.042480,-1.495293,4.589027,-4.322831],[-4.307642,-5.196478,7.339071,1.715002,7.824984,6.969927,-1.185025,6.311065,3.130106,-9.886151,-8.097610,-7.414393,6.067535,-8.969993,-7.119246,3.195604],[-4.601675,-7.722492,6.178827,1.567857,-3.132555,-4.270749,4.968178,9.847487,9.319947,0.554313,2.995559,1.922617,-5.170788,6.606231,-1.847440,-3.089507],[-2.668806,-1.905967,-3.384321,-4.146412,-3.895125,9.874264,3.606813,2.024268,0.701136,-8.180274,-4.625356,5.266039,-8.687129,0.538456,5.596843,1.887824],[-2.656969,-4.804880,5.078856,-5.699150,2.366765,7.432672,-0.086224,4.859105,-9.945743,-3.634234,2.826110,7.340698,-5.163585,-8.681340,-3.419538,0.276570],[9.724873,5.565528,7.751672,7.340343,-1.580171,3.164574,1.753136,-5.665252,-7.709062,-1.908974,-9.658917,6.812589,-2.212503,-0.775339,6.445480,-7.032980],[2.836503,-4.136410,6.468321,8.919557,-8.702182,-6.046137,1.159058,9.146236,-0.515281,5.280786,-4.572127,3.909705,-8.741410,4.264163,-5.501704,4.009943]],[[-3.542173,-8.332968,8.197086,0.022298,-2.522979,0.075378,-6.392867,8.192595,-0.411088,2.851831,-0.597476,5.663119,-2.334393,-9.175218,-8.710721,8.380161],[3.542872,-0.919746,3.328222,8.670178,-9.014445,-4.286718,7.567898,4.832681,-2.718433,-8.567876,3.994936,-5.316100,7.114836,-2.071807,-9.461940,-1.657323],[2.950406,-3.361878,-9.213599,-6.785451,-5.306442,5.834980,2.473114,1.943676,6.862759,-9.122151,2.634483,-4.599406,5.122753,8.331476,-3.917170,-2.831038],[-8.042496,9.809816,-5.227873,3.754303,-0.958502,-7.585803,0.953798,9.960559,-3.844465,-4.683354,-4.205782,-7.506314,2.086734,0.768556,3.607818,-3.574641],[-5.580886,-3.477193,0.357707,4.559784,-5.303580,5.197093,2.535156,-8.337135,-3.546177,-0.644244,7.193793,3.042327,-0.780892,9.252745,-2.466435,1.566171],[1.233068,9.726587,-4.933339,-3.938297,-1.459581,-7.524666,-1.700483,5.947362,0.674008,-8.159114,-5.988238,-5.968899,-0.616828,-2.089967,6.779778,-4.652203],[5.747756,8.402774,-6.327656,-8.191747,-5.311377,7.341196,5.475683,1.533818,-9.725567,-0.943336,1.761459,3.843985,-4.337005,-8.514486,2.858723,-8.762795]],[[-4.709482,-0.684459,4.266439,-2.435236,-8.112050,-9.037422,-6.514042,-0.155907,5.077882,-8.082273,3.972320,5.545859,6.892255,7.293703,-6.751127,-0.287023],[-9.831313,4.276180,4.945565,0.028568,4.415409,-3.562685,9.820009,-3.060994,9.563206,-7.797350,-0.006013,-2.314515,7.326243,4.561669,0.801431,7.441115],[-2.846639,5.963235,-6.490980,9.489928,-1.326557,3.500046,2.792562,3.097999,-5.660747,9.577655,3.698362,3.278550,-5.738068,-8.721393,-3.974816,4.156075],[-0.652013,-5.268504,7.769622,2.487192,2.795055,7.017122,-7.520523,2.607353,-3.967272,-4.594649,-0.626175,2.202420,-3.469418,-5.172510,8.403371,1.223446],[-8.690262,-1.837041,-1.250596,-5.897958,-1.561374,-1.794403,-8.546216,-0.841710,-3.988990,-3.639923,-4.791829,3.458502,9.063150,0.314178,1.015985,-3.265908],[-7.562004,9.102163,-0.477822,4.559751,-0.188230,-1.818180,0.693422,5.714210,9.302702,2.329053,0.630393,-7.662753,-7.114926,7.709180,-2.640463,-8.730555],[-1.297420,0.900673,9.867693,-1.513012,-9.967558,-0.181170,8.134932,-8.660252,0.645481,-5.753061,-1.999923,2.616552,-9.972908,2.802058,-2.474150,0.068098]]], dtype = "float64")#candidate|608|(13, 7, 16)|const|float64
uop_609 = relay.sqrt(const_608.astype('float64')) # shape=(13, 7, 16)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
const_623 = relay.const([False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,False,False,True], dtype = "bool")#candidate|623|(1600,)|const|bool
call_622 = func_469_call(relay.reshape(const_623.astype('bool'), [10, 16, 10]), relay.reshape(const_623.astype('bool'), [10, 16, 10]), )
call_624 = func_469_call(relay.reshape(const_623.astype('bool'), [10, 16, 10]), relay.reshape(const_623.astype('bool'), [10, 16, 10]), )
output = relay.Tuple([uop_609,call_622,const_623,])
output2 = relay.Tuple([uop_609,call_624,const_623,])
func_626 = relay.Function([], output)
mod['func_626'] = func_626
mod = relay.transform.InferType()(mod)
mutated_mod['func_626'] = func_626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_626_call = mutated_mod.get_global_var('func_626')
call_627 = func_626_call()
output = call_627
func_628 = relay.Function([], output)
mutated_mod['func_628'] = func_628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_632 = relay.TupleGetItem(func_626_call(), 0)
call_633 = relay.TupleGetItem(func_628_call(), 0)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_645 = relay.TupleGetItem(func_626_call(), 1)
call_646 = relay.TupleGetItem(func_628_call(), 1)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_657 = relay.TupleGetItem(func_626_call(), 1)
call_658 = relay.TupleGetItem(func_628_call(), 1)
uop_670 = relay.log(call_645.astype('float32')) # shape=(10, 16, 10)
uop_672 = relay.log(call_646.astype('float32')) # shape=(10, 16, 10)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
call_676 = func_469_call(relay.reshape(uop_670.astype('bool'), [10, 16, 10]), relay.reshape(call_657.astype('bool'), [10, 16, 10]), )
call_677 = func_469_call(relay.reshape(uop_670.astype('bool'), [10, 16, 10]), relay.reshape(call_657.astype('bool'), [10, 16, 10]), )
output = relay.Tuple([call_632,call_657,uop_670,call_676,])
output2 = relay.Tuple([call_633,call_658,uop_672,call_677,])
func_682 = relay.Function([], output)
mod['func_682'] = func_682
mod = relay.transform.InferType()(mod)
output = func_682()
func_683 = relay.Function([], output)
mutated_mod['func_683'] = func_683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_698 = relay.TupleGetItem(func_626_call(), 1)
call_699 = relay.TupleGetItem(func_628_call(), 1)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_702 = relay.TupleGetItem(func_626_call(), 2)
call_703 = relay.TupleGetItem(func_628_call(), 2)
output = relay.Tuple([call_698,call_702,])
output2 = relay.Tuple([call_699,call_703,])
func_704 = relay.Function([], output)
mod['func_704'] = func_704
mod = relay.transform.InferType()(mod)
mutated_mod['func_704'] = func_704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_704_call = mutated_mod.get_global_var('func_704')
call_705 = func_704_call()
output = call_705
func_706 = relay.Function([], output)
mutated_mod['func_706'] = func_706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_712 = relay.var("var_712", dtype = "float32", shape = (11, 7, 13))#candidate|712|(11, 7, 13)|var|float32
uop_713 = relay.asin(var_712.astype('float32')) # shape=(11, 7, 13)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
var_716 = relay.var("var_716", dtype = "bool", shape = (1600,))#candidate|716|(1600,)|var|bool
call_715 = func_469_call(relay.reshape(var_716.astype('bool'), [10, 16, 10]), relay.reshape(var_716.astype('bool'), [10, 16, 10]), )
call_717 = func_469_call(relay.reshape(var_716.astype('bool'), [10, 16, 10]), relay.reshape(var_716.astype('bool'), [10, 16, 10]), )
output = relay.Tuple([uop_713,call_715,var_716,])
output2 = relay.Tuple([uop_713,call_717,var_716,])
func_725 = relay.Function([var_712,var_716,], output)
mod['func_725'] = func_725
mod = relay.transform.InferType()(mod)
mutated_mod['func_725'] = func_725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_725_call = mutated_mod.get_global_var('func_725')
var_727 = relay.var("var_727", dtype = "float32", shape = (11, 7, 13))#candidate|727|(11, 7, 13)|var|float32
var_728 = relay.var("var_728", dtype = "bool", shape = (1600,))#candidate|728|(1600,)|var|bool
call_726 = func_725_call(var_727,var_728,)
output = call_726
func_729 = relay.Function([var_727,var_728,], output)
mutated_mod['func_729'] = func_729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_682_call = mod.get_global_var('func_682')
func_683_call = mutated_mod.get_global_var('func_683')
call_746 = relay.TupleGetItem(func_682_call(), 1)
call_747 = relay.TupleGetItem(func_683_call(), 1)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
call_750 = func_469_call(relay.reshape(call_746.astype('bool'), [10, 16, 10]), relay.reshape(call_746.astype('bool'), [10, 16, 10]), )
call_751 = func_469_call(relay.reshape(call_746.astype('bool'), [10, 16, 10]), relay.reshape(call_746.astype('bool'), [10, 16, 10]), )
func_725_call = mod.get_global_var('func_725')
func_729_call = mutated_mod.get_global_var('func_729')
const_772 = relay.const([-9.233213,-6.131453,-6.506918,-6.590460,4.588021,7.985404,-5.029740,6.214841,4.019134,5.995569,-1.353137,-3.565620,9.042639,-3.266746,5.009503,2.594556,-2.666939,7.938600,-8.573099,-1.648088,-2.220875,-6.904152,-8.337396,-8.549072,-4.097218,9.436302,7.468436,6.886202,-7.825785,-4.172481,-9.327645,-9.520266,1.565889,2.242324,3.309122,0.942058,5.897724,-3.128873,9.474103,-3.651812,-6.241146,-6.110960,0.838309,2.632101,9.885904,3.990936,7.567275,-2.683573,9.403925,9.440965,-2.640858,-0.372342,-7.650354,4.140765,9.557526,-5.558999,-3.560263,-3.371440,-9.896608,1.845814,5.713475,-2.090584,-3.343133,4.690069,-2.498506,1.996383,4.635487,1.430067,-3.966234,1.370468,-7.139114,-7.619266,-9.819100,-3.195457,-6.545232,-3.035778,9.912886,-2.365615,1.361290,2.413804,-8.849238,-7.642019,9.192531,-9.360211,8.771688,3.365069,2.862627,-9.506920,-6.838880,-4.974271,-5.674974,-6.067689,7.754053,-0.371331,-4.870128,9.299701,-3.528014,-8.197135,6.754167,0.181244,-1.907148,-0.537031,-3.194232,7.417505,9.489822,5.871502,-5.052061,1.486010,1.587423,5.499069,-4.326637,-4.881443,-1.455868,-3.257082,1.492043,-1.026055,-3.723424,2.114895,0.099602,-8.665683,1.086325,1.524244,4.696048,4.519940,-6.049947,0.816836,9.994101,3.914490,-5.463462,6.129566,7.721077,-1.225713,-0.360356,8.495776,-6.957137,5.513837,0.559087,-3.392832,0.398637,0.077448,-9.316142,-9.389404,6.746358,5.444813,0.918585,5.877280,4.291024,2.457556,-8.664030,9.771589,-3.309825,-5.113127,8.712447,-0.127042,-8.058571,-9.076132,-0.789935,7.054928,-3.085803,-7.434989,9.263985,8.624894,7.627322,3.855756,1.979367,-7.362058,4.085406,6.577032,6.876131,4.448179,-4.462729,-7.439672,1.709717,-7.333600,1.323524,1.762711,-3.365099,2.685393,9.129686,6.449806,2.042185,-2.780229,-7.130218,-3.611771,-3.761895,-7.066662,3.939775,8.437334,-9.170543,6.738993,-8.189933,-1.454897,8.193839,-0.829217,-6.523859,7.870488,-4.775161,-9.392537,7.793928,-6.236777,4.252483,-2.084729,-4.223003,6.232899,1.022796,-1.541071,7.752590,3.332052,-7.040072,-8.925669,6.746435,-6.597925,0.984897,2.129576,4.158193,-2.271200,-6.298875,-8.094885,8.265219,0.259431,-2.376869,-2.548936,-3.896608,-7.681323,-9.015114,-7.540372,-6.755694,7.960156,9.430176,-6.577326,-8.524979,0.696608,-0.355398,6.944622,1.618195,-4.503837,-1.257920,-8.092547,-3.313025,1.375447,7.145384,3.928276,9.750652,8.977517,6.248452,7.722369,7.961413,-6.892916,-8.050781,7.608117,-5.790962,4.909388,-6.003799,4.239571,-3.995372,4.068648,-2.844794,0.303646,7.033697,9.674852,6.358354,9.042416,7.592642,-7.975412,2.730240,-9.230881,4.839811,0.686250,2.840311,6.607250,1.330097,7.634395,0.853136,5.566692,8.787345,5.572735,-0.873542,6.914950,-2.796011,6.901160,3.256841,3.865953,-7.838593,9.836122,9.381462,0.090191,1.551926,6.158330,-3.489195,-4.918921,0.576122,-8.341355,-6.056522,5.045442,3.632692,-6.571315,-7.996153,0.399602,-4.674776,-5.413731,6.457255,3.659185,-2.606400,5.056165,2.629498,0.637905,2.334085,-3.995736,0.637906,-9.496333,5.849657,-6.531915,-5.899342,-8.079402,-0.704807,3.001980,-1.733002,-4.579677,7.036776,7.812206,5.146176,6.596674,-1.009747,-4.360206,7.499081,-3.924179,-0.536854,5.775080,6.628114,1.086210,-7.444348,4.154824,4.614685,-1.257671,-6.446390,-0.815886,-2.086675,-8.614695,9.940353,-2.354115,-5.849339,6.933871,8.214433,4.168183,-4.171450,-6.193503,9.103602,-3.175254,-6.461477,7.632026,-2.504869,-8.941578,9.164518,-7.120743,-1.766531,-6.068318,0.017413,0.647778,-2.874709,7.427655,1.225811,0.913499,-7.726678,-2.865983,-6.556015,5.513863,0.978400,9.916213,-7.306865,8.243131,1.412349,1.744185,-0.979925,8.785512,-9.551036,3.404897,2.436323,-9.752164,-6.155723,-0.301922,3.180079,-1.482266,5.505593,2.007111,2.237100,-7.842798,-3.428630,2.427348,-3.197870,2.267057,-2.979973,3.647285,-4.209426,0.735283,-8.844879,8.672046,5.422112,-9.663456,-1.114590,-6.692064,-4.038996,-9.578882,2.905835,8.087726,-9.244434,-6.689704,-5.686518,-6.810994,7.239903,9.774546,7.734586,2.705163,-8.137888,-7.552055,-3.722699,-0.171038,9.470065,4.440570,3.799846,8.423992,-8.565436,-7.150683,8.096255,6.268791,-8.556664,-9.837563,2.393830,-6.792411,8.201453,-2.938044,1.172059,-5.039085,6.114320,3.069052,0.449596,5.989967,-7.758443,-9.079018,-8.345077,6.336817,-4.355569,8.203036,9.822782,-7.830974,-7.918151,-8.735664,4.070049,-4.825355,9.289542,7.837639,-7.800987,-2.232512,-4.292643,-9.141125,-3.870447,4.481061,6.693837,-2.439765,-8.318734,4.590453,-2.650053,5.560047,2.189892,-9.044728,1.317517,4.174914,-9.877691,0.844224,-2.071018,-6.621702,7.863548,1.297310,-0.982440,6.505548,-3.077874,8.912266,1.536408,3.310603,-0.881217,7.796036,6.398649,-9.118539,-1.419407,5.596069,7.621308,5.959086,1.464777,-7.525717,-4.168238,3.791731,-8.085417,2.744404,0.447364,-4.867575,8.225096,5.982635,-9.980981,-9.017319,6.171259,8.112325,8.467076,0.780826,-4.053122,-9.922893,-7.248603,6.366417,-5.610966,-2.155248,9.795840,-8.727113,-8.996189,-8.612236,0.811472,0.180726,-9.822544,0.267175,4.140310,-1.880679,-6.456113,-6.614579,-7.900581,-4.511874,8.313051,-0.362424,6.686477,8.191770,5.664874,8.977289,-6.567446,4.183813,7.527286,6.931195,-8.038288,-4.700055,-4.388382,5.148955,8.703104,-5.933497,-5.590607,6.020257,2.624199,8.925067,-6.152250,3.871891,5.381451,1.266792,8.911103,9.627526,3.230835,3.483105,-2.943873,-4.853833,-2.676113,-4.313295,-8.635511,-6.953222,-6.784639,-7.159357,-2.477672,-0.218874,-5.482099,7.380034,-2.148740,1.525877,-2.096100,0.584670,2.725038,-6.605382,-3.403157,-1.548105,6.585606,-2.894746,-1.472880,-6.001000,-4.512723,-6.948450,6.244092,7.475495,-4.973684,3.494827,5.204417,-2.672761,-6.674197,-8.883266,3.429631,5.680487,3.374078,2.985272,-1.829675,6.600568,-6.212688,-6.993553,4.435593,5.928865,-4.263119,-5.064227,1.028489,6.459663,-2.878325,1.911883,-3.340147,-8.344414,-7.282647,-2.448660,8.380122,-3.339690,5.410581,2.765171,-8.807807,6.770448,9.642411,-1.829681,-6.249258,4.747736,0.828966,-0.061737,6.317739,0.267679,-3.799779,1.366251,3.754557,2.956138,-9.468783,6.840661,9.721216,5.112225,4.885707,-5.096312,7.415308,-6.240625,-7.932289,2.147660,2.595618,9.205304,-3.019276,6.535938,-8.694989,-7.237787,-3.562023,8.294447,-9.535528,-8.365753,-7.103515,7.855714,-4.251980,-6.667450,0.256885,9.127541,7.222149,-5.948863,1.828893,3.923265,7.744840,-5.235684,-2.792727,5.077567,-4.745990,-7.738583,-1.986412,7.266791,2.184267,4.379793,8.696784,4.390319,-4.943750,-0.892030,4.835452,0.765442,6.978824,-3.107746,-9.947929,1.120703,-8.230024,4.803343,3.333812,5.941602,9.266121,1.301274,9.322163,8.718438,1.163543,9.613910,5.098286,8.953090,-9.839509,-3.442877,9.929843,-3.098543,3.026932,1.909980,-3.392083,3.135695,5.729697,-9.582857,4.240775,-5.390410,2.039480,-9.981954,7.039806,5.184482,6.703901,-0.657320,5.632546,-4.097426,-2.646979,-5.644941,0.229971,-7.522013,-1.793938,6.707523,-9.392976,-9.140410,-9.393198,9.088073,-4.097803,9.308887,-0.337502,7.634160,-4.835525,4.741333,0.780088,9.874022,2.345785,7.701562,-9.346895,-8.410268,8.078673,-5.602426,7.323101,2.792330,5.827069,6.428962,-4.402136,3.126223,7.074538,6.101711,-4.703682,1.456345,6.302143,-1.346414,0.716296,-4.253533,8.599344,-6.681039,-7.757714,0.081692,2.881342,-3.481860,9.930400,-2.957283,-4.328743,6.235320,2.368876,-0.116070,6.693766,-3.173425,1.912750,0.138166,-4.330748,2.858979,9.998989,-9.106152,-4.603723,-7.744150,-0.074262,-2.575417,0.380085,-7.516439,-7.133374,9.133299,8.633279,-5.080757,-3.904804,7.185164,-3.842514,-5.207864,0.467614,-2.299735,2.847960,0.181928,0.190298,-6.913892,4.606319,1.262587,3.454664,-0.108671,7.170577,-1.853065,-9.405381,-2.514715,-4.772925,5.003754,2.548528,5.874815,-1.435977,-1.523478,-5.050453,-5.772252,3.727890,5.135846,-7.620490,8.908555,9.819039,-9.193979,-0.940591,-8.650461,3.126887,-0.786231,9.801304,3.267623,5.276855,8.852821,-9.289822,4.729653,-5.248452,-2.330358,-2.980738,-0.441185,1.365873,-7.628173,1.551815,8.971877,-6.459336,0.622787,0.728602,3.044397,-1.518351,7.618395,6.401931,0.098641,9.186132,-7.587461,5.144508,5.225431,3.001490,-6.918248,-9.962898,4.266465,-4.123630,-4.912885,9.417383,-0.537467,9.402033,-2.700051,-8.721586,-1.871313,-2.531320,-4.012944,5.608268,-3.426184,4.847478,9.093760,-9.884270,-7.628272,4.823950,2.644657,-5.553005,-9.811633,3.506566,-3.542778,-9.289533,5.443487,-1.548423,9.580390,-2.500651,-3.952170,-2.464043,0.508144,4.926122,9.130131,5.494775,1.409820,-8.639652,5.734587,0.653136,-2.720790,-7.774404,-0.520822,8.906647,-4.659710,4.743296,7.589388,-6.916768,9.607553,-1.979996,-0.877779,5.698080,6.439672,3.544717,4.853699,7.659415,0.218305,0.964895,-1.946302,9.011486,-4.753733,9.818940,-2.375022,0.078535,5.990127,4.603810,9.152562,-0.694379,-0.240623,4.902219,-1.415430,9.629737,-5.032938,1.488126,1.798574,1.148402,3.326171,6.626524,-7.313286,5.669028,-5.582087,5.543947,3.146325,9.518635,4.286141,1.865738,0.312360,5.590189,-6.791597,-5.964356,6.263040,7.701035,-6.044532,1.505386,8.464221,2.402963,8.374844,3.252545,-9.563943,-0.745686,8.687337,8.769497,0.524445,-5.554273,4.482806,4.333698,-2.435460,4.690448,-7.068892,1.256500,-0.745891,8.598330,5.462732,-8.904478,9.937067,-3.331997,7.802016,9.705257,-7.616773,-9.037071,-5.374991,2.498096,-6.839699,-1.359389,8.410417,1.535649,-9.590418,5.393253,8.590715,8.577617,-0.249331,-3.509809,8.661717,-4.904696,6.692580,6.367978,7.672172,2.898716,7.279554,-4.388966,2.437726,-2.528898,-7.388460,-2.624495,-4.126026,1.037509,8.040381,-2.423422,2.956781,-0.672164,1.938945,0.357339,-7.516428,-2.679397,-1.844904,-0.202720,-1.723136,8.832736,-1.414220,2.580731,4.996265,-4.481631,-6.291803,6.891851,8.670707,-4.339707], dtype = "float32")#candidate|772|(1001,)|const|float32
call_771 = relay.TupleGetItem(func_725_call(relay.reshape(const_772.astype('float32'), [11, 7, 13]), relay.reshape(call_746.astype('bool'), [1600,]), ), 0)
call_773 = relay.TupleGetItem(func_729_call(relay.reshape(const_772.astype('float32'), [11, 7, 13]), relay.reshape(call_746.astype('bool'), [1600,]), ), 0)
output = relay.Tuple([call_746,call_750,call_771,const_772,])
output2 = relay.Tuple([call_747,call_751,call_773,const_772,])
func_775 = relay.Function([], output)
mod['func_775'] = func_775
mod = relay.transform.InferType()(mod)
output = func_775()
func_776 = relay.Function([], output)
mutated_mod['func_776'] = func_776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_783 = relay.TupleGetItem(func_704_call(), 1)
call_784 = relay.TupleGetItem(func_706_call(), 1)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_802 = relay.TupleGetItem(func_775_call(), 1)
call_803 = relay.TupleGetItem(func_776_call(), 1)
output = relay.Tuple([call_783,call_802,])
output2 = relay.Tuple([call_784,call_803,])
func_804 = relay.Function([], output)
mod['func_804'] = func_804
mod = relay.transform.InferType()(mod)
mutated_mod['func_804'] = func_804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_804_call = mutated_mod.get_global_var('func_804')
call_805 = func_804_call()
output = call_805
func_806 = relay.Function([], output)
mutated_mod['func_806'] = func_806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
call_936 = relay.TupleGetItem(func_804_call(), 0)
call_937 = relay.TupleGetItem(func_806_call(), 0)
func_682_call = mod.get_global_var('func_682')
func_683_call = mutated_mod.get_global_var('func_683')
call_941 = relay.TupleGetItem(func_682_call(), 0)
call_942 = relay.TupleGetItem(func_683_call(), 0)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_943 = relay.TupleGetItem(func_775_call(), 0)
call_944 = relay.TupleGetItem(func_776_call(), 0)
bop_949 = relay.floor_mod(call_943.astype('float64'), relay.reshape(call_936.astype('float64'), relay.shape_of(call_943))) # shape=(10, 16, 10)
bop_952 = relay.floor_mod(call_944.astype('float64'), relay.reshape(call_937.astype('float64'), relay.shape_of(call_944))) # shape=(10, 16, 10)
uop_963 = relay.erf(call_941.astype('float32')) # shape=(13, 7, 16)
uop_965 = relay.erf(call_942.astype('float32')) # shape=(13, 7, 16)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_969 = relay.TupleGetItem(func_626_call(), 0)
call_970 = relay.TupleGetItem(func_628_call(), 0)
func_682_call = mod.get_global_var('func_682')
func_683_call = mutated_mod.get_global_var('func_683')
call_974 = relay.TupleGetItem(func_682_call(), 1)
call_975 = relay.TupleGetItem(func_683_call(), 1)
uop_978 = relay.log(uop_963.astype('float32')) # shape=(13, 7, 16)
uop_980 = relay.log(uop_965.astype('float32')) # shape=(13, 7, 16)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_987 = relay.TupleGetItem(func_626_call(), 1)
call_988 = relay.TupleGetItem(func_628_call(), 1)
output = relay.Tuple([bop_949,call_969,call_974,uop_978,call_987,])
output2 = relay.Tuple([bop_952,call_970,call_975,uop_980,call_988,])
func_1007 = relay.Function([], output)
mod['func_1007'] = func_1007
mod = relay.transform.InferType()(mod)
output = func_1007()
func_1008 = relay.Function([], output)
mutated_mod['func_1008'] = func_1008
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1032 = relay.const([[[5],[-2],[7],[8],[-5],[-9],[-5],[-7],[-4],[-6],[-4],[-3],[-7],[-5],[9],[5]],[[-7],[6],[5],[7],[-3],[8],[-5],[-1],[-3],[-7],[3],[7],[10],[9],[1],[-3]],[[10],[-2],[3],[4],[6],[-6],[-10],[-9],[5],[10],[-5],[-6],[-9],[4],[8],[8]],[[-7],[1],[-2],[8],[1],[-8],[-2],[-4],[2],[-4],[10],[-3],[4],[1],[-5],[10]],[[-1],[-1],[-7],[8],[4],[1],[-4],[2],[-8],[6],[6],[-9],[7],[4],[10],[3]],[[4],[2],[-3],[-1],[8],[-3],[-6],[2],[-9],[4],[-8],[-8],[4],[8],[-4],[5]],[[4],[-1],[-10],[4],[-6],[-2],[-1],[-8],[3],[-8],[6],[9],[-5],[-4],[-7],[-9]],[[6],[8],[4],[-4],[10],[-3],[-2],[-1],[-3],[-7],[2],[9],[-2],[-6],[-1],[10]],[[5],[-5],[-3],[-9],[7],[-1],[-3],[4],[-1],[4],[-7],[-1],[-5],[-8],[2],[-8]],[[-9],[7],[-10],[-2],[-10],[-5],[-7],[-10],[-2],[-4],[-7],[-9],[-1],[-3],[-6],[-3]],[[-1],[-6],[7],[-7],[-3],[10],[3],[-10],[4],[5],[-8],[6],[-3],[6],[7],[4]],[[-10],[-9],[8],[-1],[-2],[5],[-1],[-2],[9],[-8],[2],[-8],[-2],[-4],[-4],[9]],[[9],[-10],[-7],[2],[-2],[-5],[-1],[1],[4],[1],[-3],[1],[-5],[-8],[-5],[4]],[[4],[5],[-3],[-1],[3],[1],[10],[-8],[-1],[-10],[-7],[-2],[8],[-3],[5],[-9]]], dtype = "uint64")#candidate|1032|(14, 16, 1)|const|uint64
const_1033 = relay.const([[[2,-10,-10,-8,-8,3,3,-2,6,6,4,-8,-8,-4,5],[10,7,10,-4,-6,-7,6,-3,-4,10,9,-3,2,-9,8],[-8,-1,10,-2,-2,-5,-9,10,1,-1,4,-6,-6,-6,-5],[-10,3,-9,5,-7,10,-9,-7,1,4,1,-5,-5,-7,7],[-7,4,10,-5,5,-5,8,-3,2,-2,-9,4,-4,-4,-2],[-3,-10,1,2,-9,9,-1,-6,9,10,6,-6,1,1,-3],[6,4,-4,-8,-10,-5,-8,4,-3,-4,6,-2,2,4,-1],[-6,2,-5,-4,5,7,-3,-6,-1,-1,2,6,-2,9,2],[3,-7,10,3,4,-10,-8,5,9,3,-2,-7,-8,7,-5],[7,8,4,7,-4,7,-1,-4,-9,4,-2,6,7,10,-1],[-4,4,-6,10,8,-4,7,-10,-2,5,-10,4,-8,-9,-6],[3,3,-2,8,2,-5,2,2,2,-2,1,3,9,-6,-2],[-3,2,2,2,-3,7,9,-9,-1,6,-9,-7,-2,-6,7],[1,-2,-3,-7,4,9,10,-9,10,2,-5,-3,-5,-1,3],[8,-7,9,3,-8,5,-8,-7,6,9,5,8,8,-3,4],[-6,-4,-3,6,-8,-4,-2,-10,9,10,3,-4,5,6,-1]],[[-6,3,4,2,1,-2,2,7,-5,-7,6,10,1,-4,-5],[-9,3,-10,7,7,-9,3,5,3,-8,-6,-10,-4,4,-10],[-2,10,1,4,-10,-8,-10,-2,10,-8,8,3,-10,1,-7],[-3,-1,8,-2,10,3,-3,-8,1,-2,8,-1,-10,-2,-7],[3,1,4,4,2,-8,-3,-10,-5,8,-8,-9,-9,-1,9],[1,-9,-6,2,9,-5,10,7,8,1,-9,-4,9,7,-8],[8,-10,2,10,-7,9,-5,1,-9,3,-7,-8,-3,6,-6],[8,-4,1,-4,1,1,5,-8,-9,5,8,8,-3,-4,-1],[-3,-4,-5,2,-7,3,4,-5,4,1,8,1,5,7,5],[10,4,5,-1,3,2,6,-5,10,5,-1,1,10,-8,-7],[-4,-10,-1,2,-4,9,-10,-3,6,-4,-5,7,-9,-1,-4],[9,-5,8,4,9,-4,5,3,-1,-1,1,2,-1,-5,-5],[1,8,-2,4,-8,-5,1,-8,-10,-5,-4,7,6,-6,-10],[-1,6,7,-8,8,-3,-8,-5,-1,7,-5,4,-6,8,1],[-4,9,4,10,6,-7,10,-5,6,-9,-4,4,4,8,4],[10,-2,8,4,9,3,-10,3,-8,-3,-2,9,5,-7,-7]],[[-2,7,-5,-1,2,-10,-6,-9,-10,-2,4,-2,-9,8,1],[7,10,9,-8,6,-2,6,-1,-1,-2,3,-6,-8,-3,-10],[-2,10,-10,1,3,9,-6,-7,10,5,10,7,-7,10,-5],[-6,9,1,7,1,-9,-7,-7,-9,10,-10,-4,-8,-6,-10],[-1,8,-2,-1,-8,1,3,2,10,-9,-5,-3,-8,1,9],[2,8,2,-8,-1,5,6,7,10,-9,-10,-7,-5,-1,-6],[-8,2,10,-7,5,7,-9,-8,10,6,6,-6,-8,-6,9],[-1,2,-4,5,1,1,-2,10,1,-9,-3,-4,7,-2,-2],[9,-2,7,5,7,-6,3,-1,9,7,8,4,-9,-1,-8],[-5,-8,-7,-1,9,-8,8,-4,-8,-8,4,3,7,10,4],[-3,-6,6,-6,-8,6,-1,-9,3,9,-2,-9,-2,8,6],[-2,3,-10,1,-7,-2,-5,9,-9,3,6,-2,10,-3,5],[-2,-8,3,5,3,-5,7,1,5,-8,9,-2,1,2,2],[-3,4,-1,-9,-5,8,-1,-9,1,-2,2,5,10,-8,1],[-2,4,8,-5,2,1,-9,7,5,-3,10,-6,-1,-2,1],[-9,-10,10,-8,4,6,-2,-10,-6,10,1,5,5,-4,-5]],[[2,9,-6,-9,6,6,1,-1,-10,7,6,-10,-3,-7,1],[5,5,-5,-5,-7,8,-6,-3,1,4,3,-3,-9,7,-7],[-7,2,-6,-2,1,-3,5,7,6,1,-5,-8,-9,-9,4],[-7,-8,-2,5,-7,-5,5,-10,8,-4,6,5,-10,-10,1],[4,-4,6,-9,9,-9,-8,4,9,-4,1,2,3,-10,-2],[-6,8,1,5,5,7,10,-8,-1,-8,-2,4,-7,-6,9],[-10,4,-6,-4,-6,9,-2,-7,7,1,-5,-4,-5,-8,-10],[10,-4,9,-1,5,1,9,2,8,-5,5,-10,-1,-2,7],[-5,-3,3,-1,5,10,-9,-9,-6,-2,-4,1,8,10,-10],[-3,5,-6,-9,3,-2,-8,-3,-3,6,9,2,5,-5,-9],[3,2,9,-6,-6,2,3,10,-9,-6,8,-6,-9,-8,7],[9,-9,-7,8,9,-4,3,-1,7,4,8,1,2,-6,-2],[8,-2,-4,-7,6,-8,7,2,-2,9,-10,-10,10,1,-2],[10,6,-9,2,-3,-4,-1,-2,-8,-1,2,5,-4,-4,2],[8,8,-3,-6,-4,7,2,8,10,10,-6,-3,-4,7,-2],[6,10,-5,10,2,-2,10,7,-10,6,10,-10,-3,2,6]],[[9,-5,5,-6,5,9,-6,-3,-8,4,1,-6,-9,-9,10],[-6,-7,-10,4,7,3,-7,4,-4,3,6,3,8,2,-4],[3,1,-2,-10,6,-6,-3,8,2,-10,1,8,-10,4,4],[-6,10,4,-8,-8,4,-3,-6,-6,2,-1,4,5,-6,7],[8,6,1,-10,4,3,-2,7,-5,6,1,-10,-9,-2,-7],[4,2,-5,-9,2,-5,-5,1,-4,-7,6,8,-4,3,1],[-4,-5,-6,-1,-5,2,10,-6,-9,9,-3,-5,-3,9,6],[-7,-6,9,5,10,-5,-2,8,-5,-10,-3,9,5,9,-9],[-5,-5,1,4,-6,-7,-7,-3,7,-1,2,2,-4,-5,-3],[7,-3,1,-8,1,9,2,-5,10,5,-8,7,-2,9,5],[-4,-1,7,-2,-7,1,-10,-4,10,-8,-7,-3,8,-7,-5],[-10,7,7,-3,10,-3,-6,4,10,5,-2,-6,-9,2,-3],[10,-5,7,10,-2,-10,1,-8,7,2,5,6,-1,-8,-3],[-10,-6,-2,7,-3,-2,4,8,-10,-9,6,-6,-7,-7,8],[6,7,-2,-5,10,-10,8,6,5,10,8,-9,-8,9,-1],[-7,6,-1,10,-9,-3,-3,-2,-8,6,-10,3,9,6,-9]],[[9,-6,-10,5,-2,-10,-5,9,-5,4,-4,-8,-4,2,-8],[-8,5,-2,-10,4,-5,-8,-1,-10,3,-10,10,8,6,5],[1,9,-7,10,1,-1,10,9,-8,10,4,-2,7,-10,10],[-6,-1,6,9,-5,-1,7,10,5,-2,3,6,-10,-5,-5],[-8,-7,-6,-6,10,5,2,3,7,-1,-6,7,-8,-4,-9],[-10,-1,-5,10,2,-3,-9,1,6,-3,-7,1,-10,10,4],[2,6,10,10,5,8,-3,2,3,9,6,7,-9,6,1],[-1,-3,6,-10,-1,-2,-2,10,-8,3,10,-5,-9,-2,-6],[-3,7,3,9,-2,6,-1,-1,-4,5,8,9,2,8,2],[-8,10,-3,9,-6,-2,8,-3,-6,8,6,-7,-7,-2,-3],[-10,9,6,-5,-2,7,5,7,4,5,-5,6,-6,8,-10],[2,4,2,-1,-7,7,-9,1,10,-1,7,-8,7,8,1],[8,9,-5,6,-7,-3,8,9,-9,-7,6,8,9,-7,1],[-6,-3,3,-8,-6,-3,-1,10,-2,-9,-3,5,8,-5,2],[6,6,-6,7,-1,1,3,-5,-2,-4,-8,-5,-8,-8,9],[-10,-1,-4,9,-1,8,2,-3,-6,4,5,9,-6,4,-10]],[[5,10,10,4,-9,10,4,9,-1,-2,5,8,7,10,9],[6,2,1,-10,-3,-8,6,-9,1,10,-6,1,8,7,1],[10,1,3,-5,-6,2,3,8,-3,-1,-4,-5,-10,-7,4],[4,-5,-7,-6,-3,-3,8,3,10,-7,-8,-8,8,-7,-7],[-2,5,8,8,-8,-6,-6,-9,-10,-6,9,-8,6,-5,10],[5,4,1,-6,6,10,5,6,-6,2,-3,-7,-8,-8,7],[6,10,-6,2,10,5,7,5,-3,-10,-6,-6,4,5,6],[10,5,-1,-10,2,10,9,7,-1,-6,5,-3,-2,-4,9],[-10,3,-10,8,-9,10,-10,-7,3,-7,-10,-1,-3,2,-2],[9,-1,-7,9,10,6,5,9,10,1,-10,-10,-6,4,2],[10,-5,-4,-1,-6,10,3,7,-9,-1,-4,1,-2,7,-4],[1,10,6,-10,8,-10,-9,6,-4,-1,-5,-7,-1,3,6],[-6,-5,5,-2,-8,3,9,-2,6,-9,-10,5,1,8,-3],[3,-3,8,10,5,10,-8,1,-3,-4,5,-7,3,4,1],[-6,-9,-3,-1,6,-10,5,7,-6,3,3,5,-8,-7,10],[2,-2,-8,-7,-7,4,-9,-5,-3,7,2,3,1,8,6]],[[5,5,-10,-4,2,9,-1,3,5,9,-3,5,10,9,-5],[7,4,9,7,-2,5,4,-10,-1,4,-10,-3,-3,2,-3],[7,-8,4,-7,-1,1,-10,3,4,8,6,-7,4,3,3],[2,-10,3,10,-6,-10,-8,-1,-2,-4,5,10,-10,3,10],[-1,-6,-3,-4,10,5,-6,10,-1,-2,-5,-7,-10,-9,10],[7,-2,-4,-3,-1,8,-2,-6,-4,7,3,5,-10,7,-6],[-1,-10,-7,1,3,-2,5,-7,-6,-7,7,6,-2,-6,6],[-7,6,-1,4,-2,1,9,-6,4,-9,5,-2,9,9,-2],[7,1,7,-4,-3,9,8,7,-6,8,-5,1,-5,-1,6],[-9,-5,4,-4,4,-7,-1,-8,-1,-3,-10,-1,6,-3,-10],[2,-2,2,10,8,-5,-4,-10,-7,9,-1,6,3,-9,1],[-5,-1,-10,5,-10,2,8,2,-10,-10,-8,-1,-4,-8,-1],[2,-2,3,7,1,-10,3,-1,-5,-5,-4,-7,-9,7,4],[6,4,-1,9,-6,5,5,4,-4,-9,-8,-2,-7,-8,6],[-2,1,10,2,10,-2,-6,3,-5,10,6,8,-5,-8,-1],[8,-7,-9,1,-10,1,-5,1,6,-7,-1,-6,-10,5,-7]],[[-2,-10,-4,-10,2,5,2,-10,-2,-8,-5,-1,-7,6,-8],[-8,8,3,-9,-6,-1,-6,-2,5,-5,10,-9,4,3,9],[5,-6,-9,4,10,-1,-8,7,5,4,4,-1,7,10,-5],[3,-10,2,6,7,5,-10,-5,5,-8,2,-2,-4,6,7],[4,-3,9,-4,-1,-2,9,9,8,5,-10,-5,-10,1,2],[9,-8,-10,8,-1,-5,5,-6,9,8,-9,3,-3,4,8],[2,1,2,8,-5,10,3,-3,10,2,-8,-8,-6,1,-5],[-7,8,8,1,-1,4,-6,7,-5,-3,-6,-1,-1,7,8],[-3,-10,2,3,3,-10,7,5,7,-2,-10,-1,-5,7,-4],[-6,9,10,-6,-3,-8,8,-10,1,5,-10,-2,-4,-3,10],[8,-6,6,6,-8,-2,5,2,-3,3,-8,2,3,-8,-9],[-6,6,1,6,5,10,10,7,9,9,-9,6,-5,-7,7],[-3,2,5,-3,-3,-6,-6,-6,-2,-5,10,6,-7,-5,5],[-2,-5,8,-8,-10,9,-3,4,-8,-6,-5,-8,2,-3,-10],[9,7,-8,3,-7,-6,10,-1,-9,-1,3,1,9,9,-10],[-8,-2,-4,-1,-6,-1,5,2,-8,-9,5,-8,-5,2,9]],[[-2,-5,-4,-5,-6,-1,1,-10,4,-5,-8,-6,9,-3,5],[6,-9,-2,-8,7,-7,-2,-6,3,-2,-4,-9,9,10,-10],[4,-2,7,-7,2,10,2,-10,-8,-10,-1,3,3,-9,-5],[-9,7,3,7,10,4,9,-5,6,-3,-4,-1,6,10,-8],[-8,-6,-8,10,9,-3,1,-10,-2,-10,3,9,4,9,-5],[-10,3,8,3,5,10,-4,3,-9,-10,-9,-6,8,-6,-3],[3,-1,-9,10,-1,-3,-4,-3,-3,-1,5,6,8,1,-3],[4,10,-4,8,-3,10,9,-5,10,-7,8,1,-3,-10,-5],[-1,-8,-6,-1,8,-3,-10,-2,-3,2,5,1,-6,9,7],[10,2,-10,-2,-5,5,-7,-8,-9,-3,-10,10,8,-6,-3],[-10,-2,1,-3,2,-1,3,1,1,4,-8,-4,-8,6,7],[6,2,-10,-9,-4,-10,-8,-7,6,-9,-1,7,-7,8,-10],[3,-2,5,6,6,4,8,-1,-3,2,1,8,9,-4,9],[1,1,6,7,7,3,1,7,6,-3,9,4,-2,3,9],[2,-5,-3,-7,3,6,-9,-9,1,4,6,5,-3,2,-7],[-9,10,1,4,-4,4,-5,6,-7,9,-10,5,4,4,-3]],[[4,-7,-5,-8,6,6,-3,-3,4,8,3,8,-3,7,8],[-6,1,9,-4,5,-2,-2,-9,-5,-6,6,-1,9,-1,-1],[6,3,3,-7,2,8,2,-6,8,-6,6,-6,-10,-1,1],[10,-1,9,7,-2,-6,3,-2,-1,-2,-5,-8,-5,5,-7],[-10,-6,-2,-7,-10,9,7,6,-1,-10,-1,-1,-5,9,-4],[8,3,-7,8,-5,-10,6,6,-9,-8,-8,-5,2,-7,1],[5,-7,3,7,-9,2,7,-9,10,8,8,-9,-8,4,-1],[-9,4,9,2,-1,-8,-10,-10,8,8,2,-5,-2,3,8],[-1,-10,-3,-4,-3,-5,7,6,6,-9,-1,4,-1,10,-2],[-6,5,10,5,2,7,10,5,-1,-1,7,1,-1,6,8],[8,-1,-2,-1,-4,-6,10,-5,2,-6,-8,9,2,6,9],[-8,-8,2,-1,-6,5,6,-7,-2,8,-4,-1,-10,10,3],[-7,-8,1,2,2,4,9,-5,-2,-5,-5,9,-1,10,-4],[-3,-5,6,9,-7,6,-10,-1,1,-2,-6,-5,-4,3,-10],[-9,7,-1,2,-3,-3,-10,5,-6,7,-3,6,7,6,3],[6,-6,8,10,-9,8,-1,5,-10,-4,-10,9,7,-3,5]],[[-9,-10,5,-6,9,-7,7,5,-6,4,3,7,9,7,6],[-10,2,4,1,4,5,-6,9,-6,-8,3,4,3,-3,-7],[-2,-8,8,-4,1,-6,-9,-1,-4,3,7,3,-7,7,5],[-3,-1,-1,-2,-6,3,1,4,8,9,10,-9,-9,9,8],[-10,-1,1,-9,-7,8,-7,-1,1,1,-3,7,-5,-8,-4],[8,-7,-6,3,3,-10,-9,8,-10,-9,8,-1,4,1,10],[-10,1,7,8,-3,-7,2,10,8,-8,10,-1,-2,6,-8],[-1,5,8,9,10,-8,5,-7,-9,-4,3,4,-6,10,-2],[-10,-7,-6,7,-2,7,3,10,-8,6,6,7,-3,8,7],[-2,-6,-2,-5,-8,-3,10,9,-10,9,-9,3,-8,-1,2],[8,-2,6,-9,-2,-9,-3,5,-9,9,8,6,5,2,10],[-3,1,-5,1,7,8,-8,-6,-3,7,4,9,9,-4,2],[-6,-2,-10,1,8,5,-3,-9,8,-6,3,2,-2,5,-1],[-7,2,1,6,-3,9,10,-3,-3,-10,-7,8,4,8,5],[-6,6,4,10,-9,-4,-1,10,-5,4,-1,10,-10,-3,-4],[10,3,-10,3,-8,-2,-1,-1,8,6,-3,5,-10,8,3]],[[-2,-3,-9,3,-2,-6,-7,1,2,4,-3,6,-2,5,10],[3,-3,6,-1,7,1,-10,-2,6,2,3,9,-5,8,3],[8,-7,-4,4,-3,9,-6,-4,-1,4,2,-9,1,-4,-4],[6,-4,-4,7,2,-10,-3,3,5,-8,7,8,-3,-2,7],[-5,-7,-5,5,-10,9,-1,6,-10,10,-2,9,5,-1,10],[-2,-1,2,-9,-8,-8,-10,-9,-5,-9,-8,1,3,9,2],[1,4,2,-8,5,-1,2,3,8,-2,-10,10,-10,-7,8],[-8,-5,3,-10,-10,8,9,-5,-3,10,-1,-10,4,-5,-8],[-2,6,-1,-5,-1,-6,-8,-10,9,7,-9,-4,1,-8,10],[-3,-4,-10,-9,8,1,10,-10,4,2,-1,-2,-1,-4,1],[-4,-6,3,-7,-2,2,-8,-5,-1,-2,-2,3,9,-7,2],[4,-10,8,6,-4,10,-4,-6,-9,-7,9,3,3,7,-4],[8,7,-10,-1,-10,-5,-1,-9,7,6,-10,-5,-9,6,10],[7,9,8,-10,-6,-4,-1,1,5,-1,-3,-6,-3,-1,-2],[-10,-1,-2,-8,7,-3,8,-9,-5,6,5,-6,-2,-7,1],[-3,8,-9,4,1,5,2,9,2,-6,-1,-10,4,-7,4]],[[-10,-8,-3,-9,8,8,-5,7,-2,9,9,-8,8,-10,5],[-2,3,3,6,-4,-3,8,-3,-3,5,-4,5,-3,6,-7],[-9,5,-8,-9,2,1,-6,-5,-5,5,-2,2,2,10,3],[10,6,-6,-6,9,8,5,-8,-2,-1,-2,-5,10,-2,-5],[8,8,1,-8,-1,-6,6,3,-4,-6,-2,-7,5,-4,10],[3,-5,1,5,4,6,-4,-1,-8,-4,9,-5,4,-6,6],[-10,-3,9,10,3,9,3,-4,2,1,-8,-5,9,-2,8],[10,-8,2,6,9,-7,9,-2,8,6,-2,-2,-7,6,5],[-9,3,-7,-3,8,-2,-2,7,-5,8,4,6,-6,-6,-4],[8,7,3,6,-7,-1,1,10,-5,-3,-6,4,-3,-7,-5],[-2,-6,-4,-3,8,7,8,3,8,-3,-3,-7,3,7,1],[-10,-5,-3,9,1,7,7,6,3,7,4,-7,9,1,9],[-10,-4,-7,-3,-3,4,-2,7,-2,-3,-8,-1,8,-6,-7],[-2,4,-3,-2,-9,-1,-7,5,-3,4,-8,-3,-7,10,-1],[-8,8,-8,3,7,7,5,1,7,7,-9,2,-5,-6,-4],[-5,-9,-2,-2,-9,7,7,7,3,3,5,-6,-6,8,7]]], dtype = "uint64")#candidate|1033|(14, 16, 15)|const|uint64
bop_1034 = relay.bitwise_and(const_1032.astype('uint64'), const_1033.astype('uint64')) # shape=(14, 16, 15)
const_1051 = relay.const([[[-3,7,-10,4,-8,4,8,-5,-3,-1,7,3,6,2,-6],[10,-2,1,9,2,4,1,7,-10,-8,-1,-6,-7,-6,10],[2,1,-10,9,-10,7,8,6,2,6,-9,-7,1,-7,2],[9,9,1,-4,7,3,8,1,-7,-3,5,9,-9,5,-7],[3,-3,8,2,-6,6,4,-9,1,8,-8,-8,-6,-7,-2],[9,4,10,10,4,10,3,7,8,7,-1,-2,2,-5,10],[7,1,-5,-3,-2,9,8,-7,-6,-2,5,-10,4,5,-2],[5,8,3,8,8,-3,-3,1,-8,6,-9,-5,6,-2,-7],[9,6,-9,-3,-4,-8,-10,-10,10,7,7,-5,-7,-2,-5],[3,-2,-1,7,1,-5,-8,7,-5,3,-2,-9,5,-9,3],[7,-8,-7,1,5,5,10,-4,-1,-5,-4,-7,4,-9,8],[-7,-9,3,5,8,-7,-9,-6,3,5,-4,-4,2,-2,3],[2,-4,-6,-5,-2,-1,9,5,5,5,-5,-9,-9,-9,1],[-4,5,-3,6,3,4,8,-6,-9,10,-10,-2,-5,1,5],[-7,4,6,2,7,9,-9,-5,9,-5,7,-5,8,3,6],[-1,4,5,-5,1,4,5,8,-10,3,5,3,-2,-9,-10]],[[10,8,-9,3,3,7,-5,-3,-10,9,8,-7,5,-2,2],[-1,-3,8,5,-5,-7,-6,-5,-5,-1,10,8,10,5,-10],[-2,-9,2,-9,9,5,-6,-8,1,-6,8,2,3,1,-2],[7,6,2,-3,4,5,-10,2,2,3,-4,5,-7,7,-8],[-1,-4,-1,4,5,10,9,1,-9,-3,-2,-1,2,-5,8],[-8,8,-7,-8,5,-10,3,4,-1,8,3,-2,7,4,4],[5,10,-6,2,-9,7,-1,-9,8,-8,-7,-8,-7,4,7],[3,2,7,4,3,-8,1,3,-6,3,9,7,6,10,-7],[-9,-3,8,10,1,3,4,-3,-5,9,-3,5,-4,5,-2],[5,3,-4,-7,-2,8,2,-9,-8,-3,4,5,-7,-2,-3],[5,10,5,10,8,2,7,-7,-10,3,-2,-1,-8,-6,-3],[7,-8,-9,-10,-6,-10,4,4,-6,-8,8,-7,9,-1,6],[-5,-3,9,-5,-10,-7,9,8,5,-10,4,-5,8,4,8],[-5,-2,-5,10,-10,-2,9,-10,-7,-2,8,-4,4,-6,3],[-10,-6,-7,-3,-2,7,2,5,4,7,-8,1,7,-6,-8],[6,7,10,2,3,8,7,-8,2,-2,-10,-5,2,8,6]],[[7,4,3,-2,-9,10,-6,9,-7,4,1,2,4,-7,-2],[-10,4,-4,8,-3,-2,-4,10,-10,4,8,9,1,-4,10],[3,6,4,6,8,8,-4,6,-6,1,-2,7,-9,-7,-9],[10,6,9,5,-9,5,-1,-2,3,5,9,-4,-1,7,7],[-4,9,-2,8,-4,-8,-6,9,8,-5,-7,2,-5,6,2],[9,10,-6,6,10,4,-2,7,-8,5,-7,2,-6,2,-10],[-5,2,6,-10,3,6,-7,8,10,-8,3,-7,-7,-1,-5],[5,9,9,-5,-2,8,6,6,1,3,-1,7,3,-3,4],[5,-9,-7,4,9,10,3,5,1,-5,5,3,6,-5,10],[8,-9,4,9,-7,3,6,-5,-3,-6,5,6,5,-3,2],[2,-1,-1,8,-2,-6,4,10,4,-8,-4,6,-10,-2,3],[-8,-4,-5,-5,-4,-8,3,4,-3,-7,-1,-5,-10,7,-8],[4,5,-5,4,3,-7,10,-5,3,5,1,10,-4,-1,-2],[1,-4,-3,-7,9,5,-3,5,-1,7,10,-3,-4,-3,-8],[-3,-1,5,8,-3,4,-4,-4,4,-9,1,-1,-2,-1,-9],[9,10,-10,4,-9,-2,6,7,-5,5,-5,5,-3,8,-1]],[[-5,-8,-10,9,6,-2,8,-6,-8,-7,-7,9,8,-7,8],[-3,8,-5,2,4,-10,6,-4,3,3,3,4,-2,-6,9],[8,-4,-5,-7,-2,7,-7,10,-5,-1,6,-10,8,3,2],[-9,-3,-9,3,-9,8,9,-7,7,3,-2,-6,9,4,-9],[3,-7,10,-7,3,-9,2,-8,-4,-2,-5,-6,-7,-4,-7],[7,10,8,-3,4,-3,-7,-9,-3,-10,-2,7,7,-2,-5],[3,-1,-10,-4,6,-7,8,-1,10,10,8,6,-9,-1,3],[2,-10,10,3,-10,-1,7,4,-4,3,6,-5,9,7,-7],[-8,8,-5,7,-4,7,8,3,-6,-6,-3,10,-7,6,-1],[-4,-3,4,-5,-5,9,-4,-10,9,-6,-2,-9,10,3,10],[10,-10,8,-10,8,4,1,-6,-5,-4,-2,-1,-3,7,-9],[-2,10,-2,8,5,-9,-5,5,1,6,2,-4,-9,5,2],[2,3,-6,4,6,1,-6,-6,-8,2,10,2,-6,10,-8],[7,8,3,4,-9,-5,-4,9,-2,6,-8,8,10,-2,7],[-7,-9,-4,-9,10,-9,-10,-5,-4,5,3,-6,-3,4,9],[3,-8,10,-7,-2,-1,-1,5,-10,-3,1,-8,6,5,7]],[[5,-1,4,-7,-2,-7,2,-4,2,-10,-10,-2,7,-2,-9],[-6,10,-7,9,-5,-3,-4,10,3,-5,-8,3,-3,-9,-1],[-3,3,2,-8,-4,-4,7,3,7,9,9,6,9,-2,-6],[5,8,3,-7,-5,-5,-9,8,-10,-10,-6,6,2,-3,2],[-5,-9,6,-5,4,-6,-8,1,-7,-10,10,5,-9,-9,-1],[-4,-9,-9,6,10,7,-10,10,-2,2,3,9,-8,-5,5],[-10,-2,1,-6,9,-8,1,-1,9,6,-5,-3,-9,7,10],[1,8,-10,7,7,-1,2,10,1,-7,1,7,8,-7,-9],[-6,8,4,-2,-6,-8,-3,1,4,-3,10,-4,-1,3,9],[6,4,9,6,10,-2,2,-9,-9,6,7,-9,5,5,-10],[1,10,-4,5,2,-3,-6,-10,-8,9,4,-10,-6,4,2],[-8,10,10,8,-3,3,-7,-10,5,9,-10,9,-7,-4,8],[3,-10,-7,8,-8,-8,-6,1,3,4,9,4,-3,-2,-9],[2,8,8,2,1,-4,2,-3,6,10,-5,-3,6,-9,4],[9,-4,5,2,-6,9,3,2,6,-1,7,3,6,-7,-8],[-7,-6,-5,2,10,2,10,1,-1,-7,3,-10,-5,8,3]],[[2,2,-2,-10,-6,-2,10,-6,-1,9,-1,5,1,-8,-1],[-2,3,-2,-2,-9,3,-1,-3,-3,3,-6,6,-6,9,-3],[-6,-7,2,-4,-2,-5,4,7,2,-2,3,9,-9,-6,8],[-3,6,-3,-9,-5,10,5,7,-1,-3,-3,-3,8,7,10],[-3,10,-3,8,-10,5,2,-1,-4,-7,7,5,-2,2,5],[7,-7,7,-7,-3,9,-6,8,9,2,-10,8,1,-8,-1],[6,-3,4,4,7,8,-5,-7,4,4,-6,4,-10,5,-7],[3,6,-8,-5,2,2,-10,-6,8,6,5,8,5,-6,8],[-9,-1,-6,-5,-3,-7,-9,-10,3,-7,3,1,3,1,-8],[-7,1,-2,-6,10,-4,-4,1,9,3,-4,-10,-8,-5,-4],[-10,-2,8,-8,8,4,2,-6,2,-10,1,-1,-3,4,2],[2,9,-4,5,1,-9,-7,3,-7,-1,1,-3,3,-3,-3],[-8,-8,-7,6,-4,7,-4,-6,2,-3,10,-4,-6,8,-5],[6,-6,-10,7,-6,3,-4,-10,3,4,2,9,9,-5,7],[-8,5,7,8,3,3,-7,-4,-7,-8,4,9,10,-1,4],[4,10,5,-7,9,7,8,9,1,-9,-1,3,-6,-5,-5]],[[-4,-1,2,-10,-9,9,-1,9,8,-9,3,10,7,6,-3],[-1,3,9,-7,4,-8,-3,-1,10,-4,-6,9,2,10,-10],[-2,9,-2,-3,-7,-7,2,-3,-4,-2,-4,-7,4,8,9],[6,8,9,4,-1,8,4,-9,7,-2,6,-7,8,4,5],[4,7,9,-4,-7,-1,-4,-7,4,10,2,1,-9,-3,6],[6,-3,4,6,-4,6,8,-10,4,-10,9,10,-5,10,-10],[10,-6,9,-5,-1,-8,4,-6,-4,8,7,-9,-7,6,4],[4,3,7,2,-9,-10,-2,4,9,-10,-3,4,6,4,-9],[-9,2,-2,8,-2,-1,-1,-9,10,-4,-6,-9,-6,-4,-8],[-1,-5,-3,-4,3,5,10,-6,2,8,-8,10,7,-4,-8],[-3,1,4,6,-2,-5,2,4,6,-4,1,-1,9,9,-8],[-6,-8,8,9,-1,5,-10,5,7,-2,-8,-2,6,-6,5],[-3,-4,7,4,-5,9,-3,9,6,1,-6,1,-7,-1,1],[6,6,5,-1,-1,6,-8,-2,-8,2,6,-10,6,-3,10],[-3,-10,-8,4,5,-8,7,1,5,-8,1,-5,-1,8,-7],[10,7,-1,-6,-4,2,4,-10,-9,-4,-1,8,-6,8,3]],[[-2,-9,2,4,7,-8,2,8,-5,-6,-3,6,7,-2,-5],[4,7,-6,3,4,-8,9,-4,-3,-4,-10,9,10,-9,1],[-5,-9,6,1,5,-9,10,4,-5,-5,-7,-5,2,-10,-8],[-4,6,7,-1,3,-6,3,-10,-1,4,-3,-2,7,6,6],[-10,6,6,-10,-2,4,-7,3,4,4,2,10,10,10,7],[-9,-8,5,-6,10,-1,-5,1,-8,4,4,-3,-9,-4,-8],[-7,-9,2,7,-2,6,-3,-2,9,-1,3,-8,-2,1,8],[-8,-6,9,3,-6,5,8,2,-6,3,-3,-3,-5,2,10],[5,6,-6,-9,-3,6,4,-7,8,-7,-1,7,5,-8,8],[-8,9,-4,9,6,6,-9,9,-9,1,8,-10,5,-9,-2],[-4,-9,4,-8,7,-2,-5,5,9,1,-2,2,-5,7,10],[8,2,5,-3,9,-6,-4,4,-6,-5,-4,7,-9,1,-4],[-7,-4,-4,-7,3,-6,6,3,3,-4,-8,5,4,-8,4],[-7,8,2,-4,8,4,8,8,-10,1,-7,-4,-4,10,5],[-6,5,-8,6,5,-9,10,8,1,6,6,10,-8,10,6],[10,-10,6,3,7,-3,-8,8,-8,-6,10,8,9,2,-3]],[[-7,-10,1,2,-5,-3,-9,-3,7,-5,-8,2,-3,-3,2],[-3,1,5,-9,-4,-8,-5,8,-4,-9,-7,-2,-2,-9,1],[-1,2,10,-1,-4,3,4,1,-6,-8,-3,-2,1,1,-9],[5,9,-9,3,-7,-9,-9,10,6,6,-3,-6,-6,-8,-8],[3,6,-1,10,7,10,-10,8,10,8,-5,-5,-5,-7,-1],[-2,10,-4,-5,4,-2,9,-5,3,-8,-1,3,5,8,3],[-8,-2,4,-1,10,2,-10,-5,-5,-10,1,-9,9,2,-5],[7,-1,6,-4,-6,-2,8,9,-9,-6,-9,-2,1,2,9],[10,5,-2,9,-7,2,-3,-1,6,7,9,-8,8,-2,-5],[-10,-6,10,-7,6,4,-3,-10,9,6,-7,6,8,7,4],[3,-8,-10,-1,-7,-1,6,-10,-2,-10,7,-5,-3,4,-7],[1,-2,-10,-9,-9,7,1,-6,8,10,-8,7,9,-8,-9],[1,6,-1,8,-9,-10,9,-10,10,4,-7,-6,-8,4,10],[-3,-5,6,5,-10,1,1,-9,6,10,-1,2,1,4,6],[-3,5,-7,-6,3,9,3,-3,-2,2,-10,-8,2,-2,7],[8,-8,7,-2,-8,-8,10,-8,4,3,-1,-10,-5,8,-9]],[[-7,2,10,9,-2,-10,7,-2,2,-4,-5,-7,-3,9,2],[-4,-5,-2,-6,10,1,8,9,-10,9,7,10,9,8,5],[-6,-9,-5,-7,-4,-1,-6,-3,-3,5,9,-6,-5,4,-4],[5,8,-10,-5,-6,-5,-5,9,7,3,4,3,-2,-4,4],[-7,-8,3,8,9,8,-4,-7,3,5,-6,-9,-8,9,-9],[-1,-4,-1,-9,4,4,1,8,-1,2,6,-4,8,8,-5],[10,5,-5,10,7,1,7,1,10,8,-9,-1,-1,-4,-4],[-8,-5,10,-1,-3,4,10,-5,-9,-5,8,-1,-7,-8,3],[-10,-10,-8,-2,-9,-7,-8,-6,-10,-10,4,-8,-9,-9,-6],[10,-7,-8,9,2,-6,4,-8,8,7,-4,6,-8,-9,-1],[-1,-10,3,1,-9,-1,6,8,6,-3,-4,6,10,-4,-10],[3,-9,-10,-2,-4,8,5,-1,-7,9,-1,-8,2,10,-9],[2,-6,7,-1,8,10,-1,1,8,-10,-9,-9,-8,5,6],[2,9,8,5,7,-5,1,-1,-7,-10,5,7,-4,-2,5],[-6,5,7,1,3,5,-4,3,9,-4,6,-8,-3,8,-3],[5,-3,7,6,-2,-8,6,-3,9,8,1,-5,6,3,-5]],[[-10,8,-3,-3,-4,7,-2,-4,-9,-7,6,-2,8,1,4],[8,6,-7,-10,7,5,-6,6,-10,-2,-3,-6,1,3,-5],[-8,10,8,5,8,-4,6,8,1,-9,6,1,-7,5,-6],[8,3,8,-3,-3,-4,2,8,-4,-9,-2,-6,-6,-7,4],[3,-7,-8,-10,-7,4,4,3,-7,1,-1,10,7,-8,-8],[10,-4,8,2,-5,-2,10,4,-10,-10,8,5,7,-3,-8],[9,2,5,-5,9,5,8,9,-7,-4,9,8,-9,8,4],[-5,-6,-8,9,9,5,1,-7,7,9,-3,-5,-2,8,8],[-8,6,-10,-6,-10,-6,8,10,8,-9,1,5,5,-10,-9],[-6,1,-2,10,1,2,-7,-5,-6,-6,-9,-9,3,-6,-8],[1,-4,7,7,-4,9,6,-6,5,-5,7,10,-10,1,-5],[-1,-2,-3,8,8,6,8,5,4,-4,-3,-3,-8,-5,9],[5,-10,-2,7,3,-4,5,1,-3,-4,-4,-9,-1,9,5],[7,5,-8,10,-9,-3,2,-4,-9,-9,-8,-9,9,-6,-5],[-4,3,-2,8,-6,-5,-1,-8,1,6,2,5,10,3,-2],[-7,3,-8,10,-8,-5,5,3,5,-3,-6,-4,6,4,-10]],[[-10,-3,-6,1,-8,-2,4,-1,3,1,-6,10,-7,-3,-8],[7,1,-4,-2,-5,-3,-3,6,-4,-9,-4,-3,2,3,-2],[2,2,9,4,-8,-2,-8,8,9,3,-8,-1,-5,2,2],[-10,3,-10,7,-4,3,-6,2,-4,-7,-7,6,-5,-4,-9],[-10,1,-3,6,2,-5,-9,-5,6,-10,-6,5,8,5,8],[8,-4,-3,-9,9,2,-8,4,10,3,-2,-8,3,8,7],[1,-5,-4,4,-7,9,-6,8,10,-1,-9,-2,-7,-6,10],[-2,-9,-7,-3,-10,-3,-10,4,10,-8,-7,-1,8,1,-4],[7,3,1,1,-1,4,8,5,-4,5,4,-10,8,-5,-10],[-1,3,3,4,-7,2,2,-7,-1,-2,2,-8,-2,-8,7],[-4,-7,2,10,-5,-2,-2,9,1,-10,-8,-8,-3,-5,5],[-3,2,-5,-1,2,-6,4,-9,5,3,-3,-8,-9,1,-1],[6,7,-3,4,-9,-1,1,3,6,-1,5,-2,-5,3,-5],[-6,10,10,-6,-9,-1,2,-4,1,4,1,-6,-2,3,10],[-2,8,-8,5,-3,2,3,-5,2,-8,-9,-8,3,-7,7],[-4,-4,1,3,9,-8,-9,7,-1,1,5,-2,5,3,2]],[[1,-1,10,-8,-5,6,-8,-8,10,-1,-1,-1,1,8,9],[-6,-6,5,6,-7,-10,6,-2,2,6,-3,2,-9,9,7],[-7,-8,9,-9,9,-7,2,7,-10,4,-4,2,-10,-9,8],[8,-10,-8,-4,-3,4,-1,5,-10,9,-8,2,9,1,-4],[-5,-2,-3,-3,9,9,7,-2,10,-7,8,1,5,6,7],[3,-4,-6,-7,-1,6,10,10,6,-5,-8,-8,3,-1,9],[8,-10,9,7,-7,-2,10,6,5,-1,-5,-3,10,-6,6],[-8,9,9,6,-6,6,-5,2,-8,3,9,-8,1,-10,-6],[-4,3,4,3,-9,2,9,-4,1,1,-1,2,-3,-7,1],[3,10,1,9,-2,5,6,3,4,-1,-8,5,2,-6,-5],[4,4,-6,-6,9,3,-5,-7,-8,4,5,-4,5,-2,-4],[-6,5,-2,5,3,-9,-7,7,3,-4,-5,-1,3,4,5],[-2,-10,-2,-7,-2,10,-9,4,-10,1,5,5,6,10,-3],[2,7,-2,4,-6,10,-8,5,-4,8,-1,1,9,-5,-9],[-5,4,3,-2,5,-3,-6,-1,10,7,1,3,5,-1,-2],[-1,-1,10,2,9,2,10,1,-8,-9,3,5,3,-9,-2]],[[-5,9,-9,8,-10,9,-10,-9,-2,-6,-4,-2,4,-8,-10],[-5,5,-8,2,6,-6,-6,-3,9,-2,8,-3,-6,6,1],[6,10,9,-6,6,3,-6,-8,3,-4,-2,2,5,-6,4],[6,5,-3,-3,-5,2,9,-6,5,-6,-6,-3,6,10,8],[1,-6,-9,-1,10,1,6,8,-9,-3,5,-3,-10,6,-3],[4,8,10,-10,10,-7,-2,1,4,6,-4,9,-7,6,-10],[8,1,-5,3,-2,-7,-6,-3,-8,8,6,-5,7,3,5],[-2,-9,-1,4,2,-9,-8,-8,1,-7,2,-8,8,8,1],[-7,8,-6,2,3,7,-3,-6,-5,8,5,-5,4,-2,-5],[6,4,7,5,9,3,1,-2,-6,-5,8,4,-4,-5,1],[-7,-1,2,-2,-7,-4,-8,6,-1,8,-9,-5,10,-1,6],[-6,-10,-8,4,9,1,-10,8,1,-2,-5,-5,-6,-2,1],[-1,-4,1,3,-2,-5,-6,3,4,-3,-3,7,-1,-5,10],[-2,1,1,-6,9,7,-10,-10,-6,9,1,10,-1,3,-5],[-2,-3,2,8,8,-7,-1,7,10,-8,-5,-10,-10,-7,9],[-5,10,5,-2,2,-10,7,6,5,-9,4,3,-10,-8,-6]]], dtype = "uint64")#candidate|1051|(14, 16, 15)|const|uint64
bop_1052 = relay.bitwise_xor(const_1032.astype('uint8'), const_1051.astype('uint8')) # shape=(14, 16, 15)
uop_1062 = relay.sqrt(const_1051.astype('float32')) # shape=(14, 16, 15)
output = relay.Tuple([bop_1034,bop_1052,uop_1062,])
output2 = relay.Tuple([bop_1034,bop_1052,uop_1062,])
func_1067 = relay.Function([], output)
mod['func_1067'] = func_1067
mod = relay.transform.InferType()(mod)
output = func_1067()
func_1068 = relay.Function([], output)
mutated_mod['func_1068'] = func_1068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
call_1072 = relay.TupleGetItem(func_804_call(), 1)
call_1073 = relay.TupleGetItem(func_806_call(), 1)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_1077 = relay.TupleGetItem(func_1067_call(), 0)
call_1078 = relay.TupleGetItem(func_1068_call(), 0)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_1080 = relay.TupleGetItem(func_1067_call(), 0)
call_1081 = relay.TupleGetItem(func_1068_call(), 0)
uop_1087 = relay.acos(call_1077.astype('float32')) # shape=(14, 16, 15)
uop_1089 = relay.acos(call_1078.astype('float32')) # shape=(14, 16, 15)
func_1007_call = mod.get_global_var('func_1007')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_1090 = relay.TupleGetItem(func_1007_call(), 0)
call_1091 = relay.TupleGetItem(func_1008_call(), 0)
uop_1092 = relay.sigmoid(call_1080.astype('float64')) # shape=(14, 16, 15)
uop_1094 = relay.sigmoid(call_1081.astype('float64')) # shape=(14, 16, 15)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_1095 = relay.TupleGetItem(func_626_call(), 2)
call_1096 = relay.TupleGetItem(func_628_call(), 2)
output = relay.Tuple([call_1072,uop_1087,call_1090,uop_1092,call_1095,])
output2 = relay.Tuple([call_1073,uop_1089,call_1091,uop_1094,call_1096,])
func_1106 = relay.Function([], output)
mod['func_1106'] = func_1106
mod = relay.transform.InferType()(mod)
output = func_1106()
func_1107 = relay.Function([], output)
mutated_mod['func_1107'] = func_1107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_1120 = relay.TupleGetItem(func_704_call(), 0)
call_1121 = relay.TupleGetItem(func_706_call(), 0)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_1132 = relay.TupleGetItem(func_626_call(), 1)
call_1133 = relay.TupleGetItem(func_628_call(), 1)
output = relay.Tuple([call_1120,call_1132,])
output2 = relay.Tuple([call_1121,call_1133,])
func_1160 = relay.Function([], output)
mod['func_1160'] = func_1160
mod = relay.transform.InferType()(mod)
output = func_1160()
func_1161 = relay.Function([], output)
mutated_mod['func_1161'] = func_1161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_682_call = mod.get_global_var('func_682')
func_683_call = mutated_mod.get_global_var('func_683')
call_1185 = relay.TupleGetItem(func_682_call(), 0)
call_1186 = relay.TupleGetItem(func_683_call(), 0)
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_1195 = relay.TupleGetItem(func_704_call(), 1)
call_1196 = relay.TupleGetItem(func_706_call(), 1)
const_1198 = relay.const([True,False,False,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True], dtype = "bool")#candidate|1198|(1600,)|const|bool
bop_1199 = relay.left_shift(call_1195.astype('int16'), relay.reshape(const_1198.astype('int16'), relay.shape_of(call_1195))) # shape=(1600,)
bop_1202 = relay.left_shift(call_1196.astype('int16'), relay.reshape(const_1198.astype('int16'), relay.shape_of(call_1196))) # shape=(1600,)
func_725_call = mod.get_global_var('func_725')
func_729_call = mutated_mod.get_global_var('func_729')
const_1205 = relay.const([[8.456454,-0.211764,-3.990546,-4.146201,2.191709,-2.393496,-7.075840,-7.520143,7.768867,-7.234284,-1.404194,5.948254,-5.316362,5.445084,-5.152386,9.920705,-7.689892,1.031564,-7.330372,1.429822,-5.676746,4.708959,3.122404,1.607264,-1.788200,0.976093,4.991225,5.884965,6.726624,-0.554666,-8.949816,8.890856,0.486333,-4.597643,6.156961,1.327120,3.995497,-7.558025,-4.345091,-7.363609,8.690538,4.524298,-7.050483,3.649591,-9.602310,7.828256,9.754476,7.890063,6.423040,-5.517318,9.462216,-7.683868,-7.432842,-8.911120,-4.582229,-8.313467,-8.596036,-1.986256,-6.289438,9.214367,0.465198,6.339687,1.870621,5.227804,-8.329512,4.249381,8.536840,8.383022,-2.900836,-5.391499,-1.871132,8.647733,7.351216,2.956908,2.075156,-0.467186,5.021189],[0.897648,-7.838045,4.215702,-0.288451,-7.946434,-6.893036,-7.766987,0.771491,-7.298450,4.307775,8.866785,9.219758,-9.117975,5.243258,-5.003085,-6.242401,3.864127,-8.535723,-4.784161,-5.043521,7.051757,-3.167118,4.674729,-2.319516,4.544686,1.853410,-5.727692,9.615517,5.189712,8.191270,2.926321,1.401723,-0.193980,1.484198,0.300822,-2.190732,-3.228348,-0.790249,-4.296496,8.256567,-8.514726,-7.366354,-4.420042,9.716124,-8.172656,8.343489,-8.875853,3.746317,-2.647168,5.853615,-6.396091,-1.896058,-0.295012,-6.829580,-4.367251,-3.048008,6.664169,5.743781,-5.739074,2.694252,-5.677683,-3.836148,-7.968845,0.956739,-7.513096,-0.336927,-2.619649,-5.248587,8.133068,-5.768903,-1.298697,-6.886985,5.555741,2.411355,-4.695484,8.967366,3.629143],[3.668822,4.948347,6.042655,-4.631020,-3.773375,-3.014985,5.475124,5.164104,6.716409,2.659562,8.643698,-6.072828,-6.766656,-2.153952,5.085636,-7.180853,4.654206,4.422182,5.675454,-5.826073,6.030697,-9.885589,-7.180816,-6.906919,-0.234699,5.226676,-4.077766,-7.454186,-1.206538,-4.515350,1.892615,-5.254892,-5.898429,9.273022,1.327561,6.546333,-5.101071,-2.618573,-8.125964,9.155445,-1.608130,-6.980785,-4.092310,4.903434,0.054577,-3.144327,-4.887882,4.034126,-3.830190,5.222806,-1.359344,-0.835914,-4.673247,2.758792,3.873832,4.694552,6.800861,7.152245,4.771865,-1.724418,-0.157331,5.935225,-9.724807,-9.387089,5.935690,-2.788665,-8.707764,-2.668899,7.029370,0.435970,-1.404973,-2.989446,0.837448,0.290257,7.611143,3.794129,-1.319709],[-9.427856,-0.083681,-9.503807,-0.311797,7.479345,3.254802,-0.291710,-2.200666,-1.428019,-4.754884,-2.481610,-1.337160,-8.484046,-4.810506,4.958471,-8.211893,8.213751,-7.536748,-5.794665,-7.248121,-2.796635,-1.699521,0.939520,-7.638353,4.760711,-3.575709,-2.342920,-4.943629,-6.129224,4.921848,0.009468,-6.014028,-9.722883,-6.138973,3.810638,-5.859093,8.067233,-1.895926,7.605196,-5.235626,-9.315531,9.777302,9.515572,2.258671,-9.329667,6.841658,6.034803,-5.067170,7.994178,-4.580989,5.679388,-6.055624,6.890197,2.059421,1.694208,-3.683334,2.294647,4.480415,9.282825,-7.543040,6.330213,4.693277,8.523314,-1.113658,8.468846,-5.440602,5.321373,5.497081,5.471623,-5.848477,-3.936210,-8.549724,-9.397450,-9.934642,6.678692,1.638268,-7.462098],[2.240075,-7.006875,-5.926620,-9.561979,-2.126368,6.695582,8.106316,0.977428,-7.358165,-5.417034,2.190077,-6.972925,-8.814665,-6.717468,-0.600252,-3.466233,5.445522,1.327720,-1.665753,-5.647636,6.990531,-8.318096,-1.896784,-9.825644,6.837717,-8.986963,5.617283,-4.235862,-1.909740,1.552164,-6.619055,-0.873006,-8.936427,2.618924,8.316118,-7.567185,-7.277707,0.015239,-0.362021,6.780297,-0.560673,-6.813331,-7.866442,2.939909,4.817661,0.630412,9.163481,5.514570,2.200941,-4.764177,-7.314464,4.947486,-2.182708,-8.699775,1.877754,-0.474906,6.496799,3.011123,-7.228982,-2.118702,-8.398005,9.606868,5.014565,3.041133,6.713905,5.325732,-5.780559,-1.441126,-2.864836,4.098693,-2.559028,8.715769,-9.721767,1.692755,-2.913521,2.490101,8.739174],[-5.675402,0.390994,2.438664,3.847439,6.437402,-0.640986,-0.702987,-4.699116,-2.441638,-8.577017,-9.745350,-6.940938,0.254702,2.034863,0.018728,5.027138,9.890396,-0.243035,0.023145,7.058106,8.865738,7.915274,-7.219852,-9.103414,-9.464666,6.183175,9.301067,4.830765,-5.514625,7.354553,3.138967,4.394889,-7.309117,-9.477371,6.260326,-3.928929,5.965147,4.172394,9.081071,-1.923276,-6.746668,-0.492532,0.504971,-9.708709,-7.049531,-0.585942,-5.715356,-5.675159,7.090483,-3.545979,-7.212297,8.910460,-8.689752,-1.877407,-7.356051,-4.809365,-7.365769,3.313892,-2.311514,1.221671,3.127089,-6.547070,4.565338,-4.744076,6.466068,7.465271,0.696402,7.951133,4.586836,4.675440,-4.979325,-6.013071,-6.038023,4.903210,8.162287,6.057180,-0.694478],[-1.382500,-8.630490,-5.978591,-9.856849,-1.301375,-0.059525,3.981443,1.990427,-1.274222,-6.937116,-1.841220,-2.675451,5.367517,-4.870383,-3.152054,6.834600,-7.542812,-2.310984,0.418486,-3.465371,-6.710575,-4.246392,0.015031,3.151814,3.582471,-4.122550,-7.619260,3.733969,4.069069,5.961586,-5.681119,-1.656160,-0.640746,1.602758,1.175566,9.620509,3.794325,-5.394611,3.918934,-2.494500,9.455436,-7.463801,4.827793,-3.378274,2.448930,-5.586932,-9.344583,-3.188683,7.940554,-7.789730,-5.490003,1.867825,3.693920,-6.419933,2.891451,-8.380764,5.000148,-5.158415,-3.170714,8.770720,-8.406687,-5.263100,0.696160,-7.650017,-3.349675,8.114302,-6.941383,-8.699819,-4.375967,9.452729,8.639442,7.982598,-4.960126,8.084061,-1.724511,2.794013,3.912556],[6.026192,-2.522509,5.450530,-4.599819,3.851761,5.948588,6.763216,-7.392328,0.071646,-9.454995,9.865232,7.797258,2.295957,4.928839,-5.807737,-8.894070,2.322207,5.919384,-2.474746,-1.301227,2.651727,0.460311,1.719197,0.673114,-5.604745,4.202171,-9.193127,-5.825550,-0.896841,-2.721179,-5.195663,-1.131464,-2.796401,7.667649,-1.744945,-5.970665,1.833366,-5.860076,-8.261054,-4.651887,7.169783,-3.294063,-5.108828,9.619687,-9.382576,5.139828,1.770836,0.941126,-5.076980,-4.180098,-1.593469,-6.257656,-9.217009,-3.945452,-4.391759,8.153009,8.789389,9.821675,4.735901,-6.967611,3.938099,-9.122699,-2.290622,-1.286891,-7.391314,9.551729,9.809506,5.114568,-0.649773,-4.745621,-3.251306,-6.655286,7.692144,2.814340,-1.666922,0.799587,2.090728],[-7.632866,3.383458,-7.398992,3.558087,-1.052642,5.271126,8.834695,9.937373,-1.046192,9.837893,4.048285,0.352907,4.906561,1.487693,5.004298,9.314920,-9.624806,-8.073498,-3.002073,-6.733002,-8.377592,-1.887196,5.416811,-7.254247,6.115979,-9.401736,-0.479053,4.693475,3.471300,-7.062264,-8.342796,5.490650,-6.929483,8.182699,7.011823,7.639457,-4.063721,0.315711,-6.746549,5.655141,-5.487840,-6.153508,4.151375,-4.884506,-8.538592,4.558035,-3.957013,9.894985,-7.801675,-6.913244,-6.170331,-5.986240,8.779484,-6.089344,5.617476,-5.364163,7.681124,-1.038204,-1.550348,-2.547711,-3.667807,4.083908,-5.330761,6.037098,-0.806483,-1.928213,-7.666337,6.948303,2.943586,3.029826,3.801871,-1.192319,-2.580696,-9.675380,0.360674,-8.573720,-0.253131],[8.202804,-8.147953,-0.743704,-6.920292,-4.052422,3.222619,-3.063754,5.860545,1.038667,7.027001,-9.088200,-8.956559,9.847059,0.270735,3.045933,5.486319,-4.227383,-4.662535,-7.600851,3.416088,9.218493,-0.206143,8.401447,2.564644,1.082405,-7.730124,-3.236694,-0.412910,1.402638,7.339392,7.462896,3.298044,6.812208,-8.114218,-4.506241,-5.522057,-1.637142,4.146734,-2.228556,-1.028532,-3.479799,7.677275,-2.460142,-0.772323,4.204198,-8.898069,-3.437267,-0.034827,7.434082,-5.644952,4.285637,3.643034,1.563159,8.702769,7.156221,5.620785,2.158626,5.627944,-7.995308,7.823702,1.226761,9.464294,0.993577,7.248105,-2.644482,-7.205371,-3.461154,-5.884749,-6.272276,-5.165195,1.770418,3.331706,-1.909123,-1.839678,-1.137600,1.565963,-2.160912],[-0.844018,-2.042183,-4.302832,7.689513,-6.400816,8.284008,4.346483,6.334098,4.843493,-9.512717,4.690895,4.401542,0.702853,7.927547,-6.749091,8.201452,9.180549,-5.809220,5.434088,-0.022957,-2.241371,-1.735942,3.764667,0.450081,-9.393009,-4.775266,-7.736122,-4.044921,1.057744,-2.134272,5.784672,-1.158745,-4.277472,-5.784633,-8.741247,7.110129,-1.734619,9.876081,3.183252,4.654259,-7.639239,6.003633,6.286330,-0.471933,3.716902,-9.444303,2.914577,5.033413,-8.761664,3.521876,-6.618388,2.289529,-1.772406,7.536027,8.086245,9.699015,-7.662310,-6.463871,-3.255248,-8.324031,-7.491179,-2.920039,-6.446951,5.060427,-4.874403,8.854611,6.083366,8.866780,9.416555,-9.844606,5.005995,-9.102133,-6.008984,-8.097934,-1.833048,4.805855,6.296589],[-7.077616,0.003488,-2.971501,-5.069237,8.572582,-5.582078,2.049839,4.190935,-3.720067,9.775352,-8.206274,-4.845148,1.272059,1.030318,8.123401,-8.702447,-7.721045,1.295694,5.465022,4.155493,1.662778,-9.185669,9.495349,-2.873740,-7.954245,8.351293,-2.151173,0.141284,-8.043643,-1.684380,-6.705703,5.400410,-8.533142,9.545339,-4.233311,-0.979125,4.411733,-1.388785,-7.851427,-2.418811,-8.293004,3.045963,9.747101,-9.565788,-0.433307,5.719887,-7.585100,9.220724,2.078291,-6.488765,8.535483,-7.729164,8.411255,-5.453400,6.601010,0.138705,-8.596134,-7.082276,7.282636,4.962620,7.665371,-7.929356,6.663390,7.391902,6.528865,-7.589048,-8.438911,7.389417,8.989419,-3.789829,-2.836856,-3.495063,-4.174570,7.739381,-1.892014,6.558848,7.477979],[4.019705,-9.721070,-7.669118,-4.164214,-5.156281,9.817538,9.553419,4.611835,3.389037,8.664315,-4.380226,3.270167,0.755446,-9.030976,2.440383,5.366916,-4.823186,9.803346,1.641398,0.855073,4.521721,3.111187,3.526519,-4.530238,-8.543100,4.459540,1.330046,-2.769876,-4.516450,-8.968304,6.941233,-5.516893,1.080605,-7.982859,4.596190,-1.798399,-7.382200,3.695093,9.775017,-4.779057,6.951489,-0.248926,-1.043505,-7.649530,-9.337098,9.689976,-8.572476,3.847860,5.168045,-7.435261,-9.301096,2.867007,-4.788013,-6.597324,-3.499837,0.918628,-0.416674,6.104739,7.238593,5.537077,-0.427777,2.996446,-4.376260,-7.773629,-2.958599,8.392344,6.452981,9.762245,6.293157,0.568797,-4.395497,-8.001589,2.407364,-2.671823,0.241978,-9.139488,-1.941380]], dtype = "float32")#candidate|1205|(13, 77)|const|float32
call_1204 = relay.TupleGetItem(func_725_call(relay.reshape(const_1205.astype('float32'), [11, 7, 13]), relay.reshape(const_1198.astype('bool'), [1600,]), ), 1)
call_1206 = relay.TupleGetItem(func_729_call(relay.reshape(const_1205.astype('float32'), [11, 7, 13]), relay.reshape(const_1198.astype('bool'), [1600,]), ), 1)
output = relay.Tuple([call_1185,bop_1199,call_1204,const_1205,])
output2 = relay.Tuple([call_1186,bop_1202,call_1206,const_1205,])
func_1210 = relay.Function([], output)
mod['func_1210'] = func_1210
mod = relay.transform.InferType()(mod)
output = func_1210()
func_1211 = relay.Function([], output)
mutated_mod['func_1211'] = func_1211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1007_call = mod.get_global_var('func_1007')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_1243 = relay.TupleGetItem(func_1007_call(), 2)
call_1244 = relay.TupleGetItem(func_1008_call(), 2)
func_725_call = mod.get_global_var('func_725')
func_729_call = mutated_mod.get_global_var('func_729')
const_1256 = relay.const([-5.434342,8.431402,-3.765304,0.894740,0.125551,0.100018,3.978864,-9.747429,4.011586,-2.679009,-3.350241,-1.469164,5.546169,-0.597753,1.129233,-0.344008,6.370885,-9.229856,-2.557823,3.067323,-8.889607,-0.999081,-4.287718,-6.595142,-9.812223,-9.903093,9.960288,-9.014486,-8.972381,4.985636,-0.620692,3.674560,0.494262,-4.055440,9.911594,6.454161,-9.239846,-0.365014,-2.227361,3.506013,3.565815,-9.294650,-8.791268,-8.527832,9.911460,2.333059,4.272819,-0.542847,-7.703553,-3.993362,-6.324224,3.202769,1.238185,4.517491,8.874796,-4.672452,-6.797859,7.780794,-3.988074,2.422904,1.053116,3.473997,5.976702,1.803777,-9.767347,-4.425697,4.201770,-1.401737,3.005411,-5.077027,-6.249700,4.942807,3.571263,9.940570,-3.248399,-7.242757,2.841859,1.833734,1.115905,-1.618359,-6.003499,-9.549199,4.938332,7.839428,-6.115644,2.979170,-7.949049,5.513287,1.481854,8.086862,-5.484221,9.741278,-0.361173,-8.590670,2.603103,6.027475,2.178049,2.853859,-5.132775,4.949945,-5.153678,3.813406,-3.501720,5.038508,-9.966899,0.187795,-6.866853,-3.477002,4.222570,-6.918125,-2.500796,1.090047,1.741810,-0.138497,7.501085,-4.800925,-7.361152,-6.568137,-0.912382,-1.155092,0.508922,5.659128,-3.584511,-1.050684,1.125128,-7.072015,-5.785205,5.795000,-8.143918,-6.764880,-1.088457,9.148782,-6.786271,2.348665,6.956607,1.362438,9.536282,-1.497491,3.539131,-4.797840,1.175925,-0.869814,-2.494900,3.782511,8.015421,-0.787230,-4.361474,-0.709772,3.322386,-2.921770,9.444668,9.526917,-5.259933,-1.737913,-1.662189,-7.474769,0.581452,-1.166443,8.003483,-0.811858,0.658660,-4.184798,-7.102108,-4.605769,-7.109541,5.135740,6.445754,-8.861641,-6.935523,4.953955,2.584602,7.372500,-6.448452,-0.318572,7.328276,-1.551252,3.106566,3.121761,5.950629,-6.070398,-7.975855,6.688921,-0.532024,9.205093,-7.427448,-7.596572,5.280837,-1.391671,8.418227,4.072456,8.161281,9.648120,-4.873636,-2.459570,-0.161229,0.358367,-0.607896,-1.446359,-7.819912,-6.967913,-0.234369,1.756499,-1.189614,6.252049,-3.634389,-3.101415,-0.411409,3.915603,-7.123007,-1.173043,-8.098352,1.658048,-7.034382,5.015792,-7.587792,2.545478,-4.369294,-5.492188,-3.121629,-3.823169,-5.510306,-9.578295,-0.311226,0.751179,-1.194312,-4.018856,9.337551,9.940054,3.843364,-1.974356,-6.797095,4.406010,-4.929366,6.000780,9.015504,-7.104751,8.917236,2.799979,-1.602065,-4.257104,-2.812190,3.240656,4.580839,-9.082876,2.861156,-9.440903,-9.064833,0.554746,2.567211,-0.887033,-7.355659,-0.236807,5.149368,-2.221061,-7.697043,-4.091990,6.630078,-1.351201,7.611613,5.967979,7.322537,-9.616005,3.591282,6.688219,2.657784,-8.244790,-4.496913,4.491263,-2.073383,3.148258,-7.873142,4.081117,2.322224,-9.987649,-8.162625,9.356781,9.199568,-8.471001,0.039500,7.163848,1.823115,9.617975,-7.364553,1.491256,-7.687182,3.323716,2.154157,-3.083184,-2.616138,0.445954,-8.646364,9.640266,-4.785506,9.363141,7.680930,-3.026324,-0.377604,-2.973313,-6.197753,9.184445,-5.570433,-7.513272,1.365224,-3.060176,8.558621,9.774214,-1.265684,-4.634156,-3.920202,1.648632,-8.485771,-8.283125,0.129585,-5.303920,-8.740432,-5.424393,-4.382865,-2.448742,7.271532,-3.135469,-5.482466,-5.566985,-6.214487,-9.862120,-0.510398,-0.632706,9.960387,5.495831,1.959679,6.069409,7.423081,-1.632518,-9.231603,-7.557988,1.651124,-7.812343,-6.940998,-7.790533,3.770616,0.008097,-0.259411,1.489705,-0.062680,-4.649317,-8.076572,3.913678,0.723647,7.596711,4.827017,8.255391,-1.085390,-3.068227,7.196964,8.564237,9.815378,-3.620354,-3.143393,-3.326300,5.262104,-4.256210,-9.365130,0.661686,5.729174,7.947094,-9.602999,7.418379,-4.365907,6.256735,2.000324,5.759224,4.612515,-0.464718,1.418138,-5.546915,-1.366507,-9.353179,6.786338,-4.119522,-6.658050,3.815532,0.551280,-0.373509,-0.976955,4.538662,-8.232162,6.471104,-9.008250,-1.182076,-6.856907,-5.714344,0.283203,6.030673,2.671291,-8.929115,6.173120,-7.955976,-9.936612,-5.528667,6.714270,-1.861197,-8.896893,0.261893,-6.653929,-1.358367,3.829491,8.573255,8.842356,5.103115,-3.325639,9.568510,2.480831,-5.846057,-6.969104,-0.327612,-3.354868,0.320031,-3.456280,-0.575369,-4.427445,1.289582,6.668196,8.732149,8.390573,1.855702,-9.832942,8.711626,3.983427,0.671471,9.515341,2.265481,0.096481,-2.263002,4.753144,-3.460277,-3.066304,2.969555,-9.847346,-3.832944,2.252690,4.875244,-1.046625,8.923795,7.881377,0.222031,3.068934,-2.980736,-1.974037,-4.506103,5.921953,2.992553,9.048048,-2.635651,6.046373,8.654936,-5.717704,-7.267036,-7.693083,-7.388879,6.074930,-0.825327,-7.922514,6.485591,6.981358,8.680538,-8.704936,-5.919998,7.847121,9.226056,-8.220731,-7.359882,3.083236,4.122160,-6.089179,9.610023,-6.644105,-3.081383,2.316345,3.956526,-7.031558,4.346946,3.160714,-7.512032,-4.510202,-9.310768,-2.861449,-5.688877,0.974137,1.758775,2.104344,0.732612,-0.423948,9.398207,2.527697,3.844352,8.597543,-6.471858,-1.803814,3.294323,-5.768427,7.009143,-2.409406,2.314131,-4.345926,-3.167899,4.819962,8.736473,6.171258,9.849505,2.736562,-5.637623,-6.542031,1.513810,7.546708,0.090370,-1.097452,9.961233,-9.327649,2.600528,7.136633,9.570419,8.851308,6.982142,5.412898,-0.160226,7.427658,6.257820,1.976221,-9.944114,8.600994,4.937084,2.826323,3.864849,7.552316,-6.032349,-9.402474,5.222469,-6.982348,-0.522699,-7.485422,-2.879116,-9.149414,4.270064,-3.310877,-8.849936,9.397595,-3.649592,-8.674382,4.029126,-1.259724,1.943752,3.758214,-3.701609,9.798768,8.830020,5.343590,7.801209,6.958215,-5.253169,-3.322886,4.558739,-3.067963,-7.221294,5.968150,-4.229628,0.752331,-3.591084,-3.361189,-7.365480,-0.850574,3.961627,8.615464,6.430181,2.297185,7.440318,-1.747202,-6.734945,-2.265642,-7.534285,-6.120098,3.693073,-3.909277,-6.188246,-8.897937,-2.350820,-0.984454,2.013681,-4.066596,-3.893626,-0.441295,6.582371,-8.217881,0.986811,5.262758,9.854154,-2.834023,7.780661,-6.397672,2.428479,8.320544,0.639706,-3.638753,1.492526,1.454351,-6.119194,5.480258,6.297694,3.601778,-4.701385,-0.104203,-2.740903,-7.780736,4.296528,2.990556,-1.917968,-9.638202,-1.175992,-0.165558,8.343429,9.867890,0.282731,7.085383,0.752003,8.443464,4.496958,8.862875,-0.139219,-1.233127,-2.704152,-9.945340,-0.166814,2.027790,0.950076,-4.223250,7.619506,7.234874,7.893808,0.460667,2.917876,-5.943820,-0.776616,9.274563,-1.841544,-5.986463,7.054966,2.338033,5.056946,9.885556,-8.852954,8.192543,2.358405,-0.363514,-2.934564,4.576293,-2.973433,-6.221178,3.745438,2.735712,0.048021,3.398008,-2.110605,-7.458607,3.361726,1.229288,-1.827647,0.839160,3.502180,-7.399237,-7.144939,5.763437,6.922250,6.563046,8.796609,-7.297827,7.469203,-5.819618,-6.756886,2.012960,-4.309726,2.537920,-7.827514,-4.924842,-6.581334,0.650307,4.737303,7.118331,-0.735031,4.390222,8.203845,5.972290,2.941110,9.560682,-6.082778,3.072246,4.187234,2.233757,-9.866504,9.627196,-7.264741,7.484714,0.391772,1.714768,2.667865,-1.166778,-4.914164,3.899258,1.990210,-5.494601,-0.855648,-7.178746,-6.767666,0.366031,2.405156,-6.480467,7.342646,5.004551,-1.753713,-7.031910,-9.450684,7.303975,-3.000947,-7.642413,8.687094,-4.620654,1.713801,0.147499,-1.951420,-1.730166,9.430014,-2.705341,-7.728857,7.523712,-3.966989,-6.605065,-0.923600,4.462162,6.518369,-4.772216,-6.269662,-4.982783,8.199487,-2.135594,-1.518892,-8.760818,9.293728,-5.590874,-9.913730,-7.770253,6.102814,2.256797,-4.278618,9.093065,5.093033,-6.397003,-3.958280,3.557163,-6.082821,3.759317,-8.061675,-2.338088,-1.494999,3.888691,1.613486,0.498892,-0.259294,-9.475437,-9.666953,-6.657492,-6.833272,4.348611,9.484396,-3.854606,-6.451867,-5.922294,6.840164,-0.427209,2.428074,7.996301,-0.516888,-9.676049,8.687662,4.522481,-0.894598,0.015137,2.001368,4.685382,8.324925,-1.947356,1.640633,-0.719941,-7.149498,0.825004,-1.731811,-9.749350,1.740465,-8.544213,6.698645,-3.956238,5.105133,-5.150159,0.020275,-9.532230,-4.090053,-7.807308,6.300106,-2.088337,-5.354278,-0.846365,-2.510887,1.409098,3.534541,9.905967,2.001223,-6.431874,1.902117,2.867368,-8.344702,-5.270234,8.287815,-3.451021,9.344559,-8.663161,-7.716517,7.514611,2.210698,3.453609,-8.967473,1.606118,-7.835970,-9.454668,5.232965,-4.548485,9.906592,-2.284390,-9.698557,-1.655737,1.317301,4.696010,6.240080,7.846558,3.310823,6.540869,9.972105,2.232874,-5.202398,0.891227,-6.872823,8.060484,-9.774889,-1.812878,-0.902621,3.019684,6.082098,-0.092056,5.052092,7.204737,-0.727995,-9.648096,7.998624,6.092765,8.756571,3.729902,2.718628,-1.515818,-7.577227,-7.065586,5.057749,8.178447,-8.292134,8.647992,9.322154,-9.073115,7.217547,6.925999,-8.012511,-5.953612,0.771220,6.423797,-8.227409,7.305635,-1.435694,6.159442,3.598101,-6.264722,-8.692063,8.847443,-7.116043,8.759697,-1.422503,3.319740,-3.082182,-7.314679,6.109424,-9.772798,3.986400,3.430186,0.161458,1.893269,7.322316,-6.780237,8.374215,4.537247,6.133778,7.044013,6.545089,-8.202161,-6.008682,7.937971,0.428899,3.723941,4.916787,-3.292960,-3.099119,7.126433,-3.711711,8.694071,1.059668,6.874105,-6.428935,-8.801193,1.717017,9.577668,-5.604228,-9.858877,-8.312071,-9.634753,-3.942923,-6.326451,1.040723,-7.499315,1.877434,4.535951,-8.954457,0.510772,-5.486079,-4.355716,-1.366643,1.630912,-9.124278,-5.478448,-9.958864,7.663728,-7.640509,4.969593,7.016985,0.503195,3.521661,-0.199281,9.593206,-6.861856,5.585790,-9.615620,-8.330345,-9.972264,8.601716,7.843683,-1.355121,-5.919224,-9.848465,-0.898841,5.284362,-1.993604,-4.195024,-5.160614,-8.537906,0.603340,7.726866,-1.998342,-7.289230,-0.274569,9.516624,4.950374,-1.997900,-4.676603,6.259512,7.011306,-8.783870,8.671614,-8.248075,7.485747,1.011411,-0.858937,-7.258544,-2.877777,-5.879607,-5.119826,1.580712,3.707499,7.884757,-1.676131,-5.460377,0.645637,-6.354832,6.504554,-8.991794,1.868731,-6.347783,-0.412317,-0.243942,6.631054,6.771256,2.140488], dtype = "float32")#candidate|1256|(1001,)|const|float32
call_1255 = relay.TupleGetItem(func_725_call(relay.reshape(const_1256.astype('float32'), [11, 7, 13]), relay.reshape(call_1243.astype('bool'), [1600,]), ), 0)
call_1257 = relay.TupleGetItem(func_729_call(relay.reshape(const_1256.astype('float32'), [11, 7, 13]), relay.reshape(call_1243.astype('bool'), [1600,]), ), 0)
func_1007_call = mod.get_global_var('func_1007')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_1258 = relay.TupleGetItem(func_1007_call(), 3)
call_1259 = relay.TupleGetItem(func_1008_call(), 3)
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_1260 = relay.TupleGetItem(func_704_call(), 0)
call_1261 = relay.TupleGetItem(func_706_call(), 0)
output = relay.Tuple([call_1243,call_1255,const_1256,call_1258,call_1260,])
output2 = relay.Tuple([call_1244,call_1257,const_1256,call_1259,call_1261,])
func_1281 = relay.Function([], output)
mod['func_1281'] = func_1281
mod = relay.transform.InferType()(mod)
output = func_1281()
func_1282 = relay.Function([], output)
mutated_mod['func_1282'] = func_1282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1007_call = mod.get_global_var('func_1007')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_1309 = relay.TupleGetItem(func_1007_call(), 4)
call_1310 = relay.TupleGetItem(func_1008_call(), 4)
var_1326 = relay.var("var_1326", dtype = "bool", shape = (10, 16, 10))#candidate|1326|(10, 16, 10)|var|bool
bop_1327 = relay.maximum(call_1309.astype('uint32'), relay.reshape(var_1326.astype('uint32'), relay.shape_of(call_1309))) # shape=(10, 16, 10)
bop_1330 = relay.maximum(call_1310.astype('uint32'), relay.reshape(var_1326.astype('uint32'), relay.shape_of(call_1310))) # shape=(10, 16, 10)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_1332 = relay.TupleGetItem(func_626_call(), 2)
call_1333 = relay.TupleGetItem(func_628_call(), 2)
output = relay.Tuple([bop_1327,call_1332,])
output2 = relay.Tuple([bop_1330,call_1333,])
func_1336 = relay.Function([var_1326,], output)
mod['func_1336'] = func_1336
mod = relay.transform.InferType()(mod)
mutated_mod['func_1336'] = func_1336
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1337 = relay.var("var_1337", dtype = "bool", shape = (10, 16, 10))#candidate|1337|(10, 16, 10)|var|bool
func_1336_call = mutated_mod.get_global_var('func_1336')
call_1338 = func_1336_call(var_1337)
output = call_1338
func_1339 = relay.Function([var_1337], output)
mutated_mod['func_1339'] = func_1339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1160_call = mod.get_global_var('func_1160')
func_1161_call = mutated_mod.get_global_var('func_1161')
call_1444 = relay.TupleGetItem(func_1160_call(), 1)
call_1445 = relay.TupleGetItem(func_1161_call(), 1)
uop_1456 = relay.rsqrt(call_1444.astype('float64')) # shape=(10, 16, 10)
uop_1458 = relay.rsqrt(call_1445.astype('float64')) # shape=(10, 16, 10)
output = uop_1456
output2 = uop_1458
func_1478 = relay.Function([], output)
mod['func_1478'] = func_1478
mod = relay.transform.InferType()(mod)
mutated_mod['func_1478'] = func_1478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1478_call = mutated_mod.get_global_var('func_1478')
call_1479 = func_1478_call()
output = call_1479
func_1480 = relay.Function([], output)
mutated_mod['func_1480'] = func_1480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1478_call = mod.get_global_var('func_1478')
func_1480_call = mutated_mod.get_global_var('func_1480')
call_1528 = func_1478_call()
call_1529 = func_1478_call()
func_725_call = mod.get_global_var('func_725')
func_729_call = mutated_mod.get_global_var('func_729')
var_1533 = relay.var("var_1533", dtype = "float32", shape = (13, 77))#candidate|1533|(13, 77)|var|float32
call_1532 = relay.TupleGetItem(func_725_call(relay.reshape(var_1533.astype('float32'), [11, 7, 13]), relay.reshape(call_1528.astype('bool'), [1600,]), ), 1)
call_1534 = relay.TupleGetItem(func_729_call(relay.reshape(var_1533.astype('float32'), [11, 7, 13]), relay.reshape(call_1528.astype('bool'), [1600,]), ), 1)
func_1281_call = mod.get_global_var('func_1281')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_1548 = relay.TupleGetItem(func_1281_call(), 0)
call_1549 = relay.TupleGetItem(func_1282_call(), 0)
output = relay.Tuple([call_1528,call_1532,var_1533,call_1548,])
output2 = relay.Tuple([call_1529,call_1534,var_1533,call_1549,])
func_1553 = relay.Function([var_1533,], output)
mod['func_1553'] = func_1553
mod = relay.transform.InferType()(mod)
mutated_mod['func_1553'] = func_1553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1554 = relay.var("var_1554", dtype = "float32", shape = (13, 77))#candidate|1554|(13, 77)|var|float32
func_1553_call = mutated_mod.get_global_var('func_1553')
call_1555 = func_1553_call(var_1554)
output = call_1555
func_1556 = relay.Function([var_1554], output)
mutated_mod['func_1556'] = func_1556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_1583 = relay.TupleGetItem(func_704_call(), 1)
call_1584 = relay.TupleGetItem(func_706_call(), 1)
func_1553_call = mod.get_global_var('func_1553')
func_1556_call = mutated_mod.get_global_var('func_1556')
const_1586 = relay.const([-1.156523,1.935993,1.296728,6.948343,1.965093,6.785785,-5.055783,-0.484539,-4.224739,1.293906,-8.254720,8.924297,7.032263,1.824984,-6.248120,3.368481,-2.142426,3.890246,-2.922037,-1.498443,5.527927,6.246066,-8.421692,-0.084483,3.774495,0.621996,-8.774838,-9.591879,9.114393,-6.841127,-7.267818,-3.555259,4.854470,-6.388108,6.499611,2.728789,-6.330633,-8.290472,1.923815,3.117480,4.838642,-8.281365,-6.156284,3.193982,-7.003083,5.406894,-0.043973,8.118738,1.481859,5.908608,6.660393,6.578476,5.948883,-0.127447,3.354779,2.908876,9.595928,-5.259755,-4.754037,8.679410,8.453560,6.288998,4.233648,0.300585,0.486951,5.581042,-4.342752,-2.723993,-2.324625,-8.159701,3.644846,-4.847307,5.107277,-7.027841,3.010692,-8.980987,-0.732709,-9.525216,-4.433070,5.289793,-5.497624,-2.533723,0.478382,3.284072,-8.940071,0.007799,6.135271,-9.319083,-0.822398,0.009321,-5.858896,7.108849,9.597482,-9.158368,6.424735,3.784886,-2.443399,-2.411035,9.817323,-2.816763,4.216393,9.247641,3.914602,3.375007,-2.102680,5.399838,-0.779333,5.324387,-8.177031,-5.547441,7.771680,-0.456779,0.046583,-4.682079,-3.110810,-5.115235,-7.359202,-4.654273,8.590502,-1.718862,-3.562863,7.555363,-9.262349,3.260302,-6.450608,-0.950961,8.146518,-1.457461,-0.680410,8.195434,2.658156,-8.719340,1.727460,0.125955,8.630473,-2.864744,-4.480816,-4.908540,5.595730,8.335714,7.305460,8.377121,-0.451089,-6.844772,-9.511017,5.489920,9.596358,-7.133503,6.214810,-3.265628,6.466575,-4.761027,-7.964339,-8.253387,-2.742026,0.734685,9.109080,6.933841,-9.108102,-3.080892,9.508182,-0.488453,-2.865498,-0.287524,6.639517,-5.748042,7.607755,-6.563224,6.262772,0.393919,-6.638438,-5.367532,-5.389145,-0.042479,2.029298,4.930130,-4.664212,6.955427,-4.006222,-1.311844,-5.463609,-1.624525,-9.676347,8.594076,2.550497,9.389395,-2.954879,-9.975217,1.913962,5.340791,8.778906,-9.210137,6.209831,-0.355511,4.134697,3.956598,8.100500,2.627328,-5.564688,-4.530521,-7.116236,7.759242,1.209083,7.398674,-9.233600,8.401773,5.688955,-8.810983,3.597213,3.858287,2.913419,4.926534,-6.111903,-8.549245,4.791739,2.046417,4.258628,-6.134146,-1.504705,9.834273,6.002462,-5.764234,-8.332316,4.790081,-3.397907,-7.912751,3.810450,-3.092795,6.600920,-3.361997,7.121521,-9.595669,-7.476678,1.446837,-2.527978,-0.376902,1.070003,-8.693914,2.262697,-5.760602,-9.349301,9.911234,-3.894789,-1.661782,1.731949,-5.074438,-4.898043,6.929710,-8.385346,7.127887,2.416574,-2.878648,-3.307148,9.082298,-8.496788,5.851755,-0.500237,-2.658953,4.294310,-7.700321,6.051140,4.458770,9.072041,-1.966366,-2.404016,-1.429766,8.918495,-4.229923,-7.470795,7.150227,8.042085,3.755484,-8.870559,-6.029806,-0.187051,-0.949140,-0.620016,3.576150,-8.367677,2.538843,0.811201,-5.822404,-4.404749,9.647693,-3.277790,8.689978,9.503022,-2.012209,-7.448889,7.195352,7.711836,-3.373389,-4.792289,-2.609488,7.769168,1.560330,4.890060,-5.422734,-2.882473,-4.969808,-5.920718,4.213217,1.105438,4.272660,-2.815663,-5.433124,-7.789959,5.791142,4.163913,8.736913,9.606894,9.399990,7.862303,-2.312499,2.046804,-0.601143,-6.053382,-7.388483,6.223291,0.653366,-0.650016,-4.869943,-9.603709,1.413693,7.057398,1.691930,0.490085,4.814997,-9.667504,2.508219,2.863428,2.113379,2.899472,3.339639,-3.692547,-3.988917,-4.292730,7.489813,5.618218,-0.063570,-1.361871,7.768088,9.524246,-0.815716,9.932646,9.752109,6.797963,-3.566711,-5.227247,-2.906096,9.480622,-4.612805,3.635764,-8.424342,-1.329575,6.775524,-3.557541,1.625792,9.504538,0.531177,6.822276,1.248856,-2.052749,4.082663,6.076839,6.556812,-7.072007,7.366014,6.876238,-7.405826,-6.580601,-3.605932,8.619172,-7.150124,9.772097,3.493621,5.253738,-5.867841,-9.764976,-7.826802,5.035386,-9.499501,0.372957,6.255742,-5.427002,4.435514,5.328060,3.636102,5.355336,5.502278,-1.661107,0.284391,-9.960891,6.125601,6.933043,-2.480435,3.549928,-2.671455,-9.733097,1.435170,-8.715990,-9.362107,0.273106,-1.837594,4.889564,2.828251,-4.451214,2.697005,-6.995419,3.220126,0.886204,-9.177352,5.164113,7.533288,-9.530885,-8.690371,3.431237,-7.333167,-2.554431,5.885857,5.750892,4.686951,5.296407,-9.733445,3.914788,4.067376,4.871222,3.427377,1.983424,8.802797,-7.951964,-2.725303,-6.957276,-7.582501,3.324867,-3.176430,-5.653262,-0.708166,1.308042,-8.906897,-1.626975,3.760036,8.027950,-6.700695,6.718951,8.486957,9.269085,-3.604833,-6.863318,7.175351,-6.353671,-7.906459,9.745907,4.741999,7.323244,-6.064166,9.388070,-4.037598,-9.117751,6.920830,-0.582278,3.156792,-3.783369,9.764435,-9.628942,-5.641300,-9.610106,-9.959529,6.536565,-9.291321,9.085452,7.535900,-5.695004,6.908571,-7.950223,5.891962,8.638359,4.781980,-7.226032,2.544802,0.013292,9.345551,-3.174513,5.726182,1.026432,0.581350,-9.609660,-7.964723,-8.955483,-6.395271,-0.807086,4.973709,-2.649686,-4.159080,4.215400,-1.264811,2.517527,-0.810601,3.415587,-2.095335,-0.221385,4.813024,-1.054896,2.865079,2.880955,6.314401,3.815553,-8.257853,3.333858,-9.722808,-0.708791,3.359021,7.508668,5.299105,-1.838290,2.193777,4.904703,7.989569,-4.761560,-9.987480,-6.900598,-5.403579,-8.331524,-7.787931,3.123585,-7.258156,6.346263,2.297071,-5.549626,2.094312,-8.165598,8.844029,3.185276,4.020567,5.268574,2.993170,-2.700743,-9.193188,-2.315258,-9.662424,2.487966,4.315949,1.773519,8.266815,-9.116286,-8.538673,-4.269493,-1.262748,-5.886271,9.180041,-2.846829,-4.715760,-8.817431,8.973938,2.080863,-4.965790,8.514513,7.794458,7.127408,-8.661162,0.660025,-1.438048,-1.600087,2.645510,9.106159,-0.026875,9.946839,-5.316104,2.350465,8.462034,0.515515,-1.879693,8.094112,1.101340,-4.960631,-6.079441,-0.957591,2.249285,-9.270957,-3.850859,-4.790297,1.439216,9.116209,5.372698,7.049069,3.912921,7.272667,0.566252,7.691409,3.878151,-5.214176,4.314064,-0.483064,7.720761,9.765945,-6.880861,8.271056,0.261615,4.158641,4.716618,9.376744,-3.316783,-6.681381,-5.724766,-1.625916,-2.828651,2.160409,-7.740342,-9.032597,-3.656478,9.910929,9.500102,-4.940582,4.380196,-0.473013,5.093055,1.879923,-5.945763,9.923367,9.897294,-5.249276,0.977340,3.904221,0.309774,9.319215,7.285262,5.194308,3.996172,3.066125,6.276857,-4.180256,-6.611283,-3.335448,3.944748,8.246837,-7.861850,-5.329933,3.967218,7.964724,-7.828358,2.124528,4.996272,-9.530582,-0.852407,4.413557,0.603313,-8.051726,1.546559,-0.649803,8.826134,7.909041,8.208791,4.310289,9.338963,-8.092781,1.910258,1.302239,-4.703390,-8.647937,4.762209,-3.866991,4.685107,-3.974615,-0.397845,9.949893,-2.620091,6.346473,4.862325,3.334491,0.680070,-6.263630,1.548907,3.401734,1.218894,-9.957925,4.614886,-4.285563,-1.244920,5.391370,4.961569,-4.193417,9.384730,-0.890452,-6.067050,3.526120,1.174817,-1.409339,1.974829,-9.454075,2.712105,4.945867,2.395532,2.586985,6.169290,-8.592499,-8.320015,-9.992096,-4.702491,-8.363525,-8.525038,-9.945591,9.099078,-8.937949,-0.121031,7.388523,-6.645899,-5.523914,-7.523805,9.991317,-0.543070,7.368782,-9.813022,-9.840786,-3.396245,8.196081,-8.858617,-9.490134,-7.687861,-9.156574,7.759468,1.361597,3.830614,0.072482,1.601540,0.811067,4.608350,-2.782695,-1.213673,-1.828239,0.909809,-0.300084,-6.363690,0.419098,5.256474,9.252004,-1.533445,-7.424624,4.966073,4.879648,-9.026667,-3.180479,4.835441,7.949601,-9.391210,-4.895240,9.512574,1.697252,4.969963,5.758735,2.354749,0.498099,4.173089,2.273615,-7.831669,6.211939,4.220747,-7.093429,8.946595,-8.655054,2.785411,0.719207,3.647441,-5.046206,-1.039640,-2.998616,6.925592,5.483910,6.753758,7.866786,8.621524,4.858660,-4.308234,-5.992969,4.287142,9.571934,5.426875,-5.049012,-2.048881,-0.713192,-8.523460,-5.813371,-5.445966,-8.401150,-9.283029,0.540275,-0.655681,-6.724372,-9.666386,-0.506905,2.336120,8.255213,4.068626,-3.140392,-1.855552,-6.387468,6.458263,-7.830876,-3.942955,5.956911,-4.828352,-8.764465,5.766757,-3.629153,4.681339,-2.225641,-8.568833,-0.704873,8.964046,5.982861,8.140927,-1.550307,-8.352948,-6.765733,9.566783,8.438132,6.257042,-0.096015,-3.313958,-1.214830,-1.396986,7.755152,-4.533953,-4.953033,-4.955410,-7.192922,6.746482,-3.243688,7.264000,-8.008430,-5.898735,4.220021,4.116201,3.516766,-6.194148,-5.820830,-1.005529,1.764541,7.011892,-2.241083,-5.788934,1.921688,9.158667,1.053857,-6.506784,6.676909,-8.538929,-4.319922,-1.243510,1.870279,-3.346269,8.838965,2.374301,3.070374,-3.700830,-5.137531,-6.376492,-4.303125,0.989711,5.059315,6.308102,3.917519,0.812845,-1.445727,7.686785,-3.248010,9.672258,-4.382312,-7.774525,2.223487,1.025923,2.075437,8.898086,8.205358,-7.141529,-6.341225,7.330050,5.598747,-4.179504,-6.926487,4.102477,2.097166,5.892018,-1.209526,6.296032,-3.152289,5.209080,9.829468,-7.743963,-0.858186,9.463092,-3.732284,-6.681446,7.250963,5.576415,-0.426280,-5.696866,8.136904,8.938601,7.915386,2.466513,2.722870,-4.015094,1.109889,1.558932,2.227103,2.765868,0.100094,3.368482,-1.646692,-2.434868,2.496224,-7.488063,-2.672285,-4.764394,-3.191648,-6.001465,1.054947,-3.254364,3.760663,-0.184663,-1.895123,-7.516655,0.052878,-0.334203,2.421364,-9.261586,5.790287,6.956813,-1.531339,-9.435113,-3.216199,-8.338809,0.080141,-4.448928,-7.211150,5.196314,-8.771328,-5.679566,8.462788,4.615614,3.292446,3.112390,-9.568651,5.647375,2.966104,-4.417127,-1.066384,2.371343,4.769587,-4.258778,-3.007126,0.280953,0.180942,-4.866552,-1.455434,2.078112,6.222371,1.473596,-7.928204,-6.977109,-0.984285,1.799189,0.959125,-6.402752,-2.776644,-8.864619,-5.542594,-2.833924,0.131388,-5.183819,-3.266057,5.631389,-0.144211,-5.241712,9.078593,-0.427224,2.207444,-7.736999,-8.873973,7.802688,1.735493,6.866689,9.122873,-0.842266,-2.185905,4.352667,-7.444573,-0.577102,0.552131,6.798501,9.204194,-3.308214,5.790631,3.912246,5.198528,9.844454,-6.881298,-0.885206,-1.889682,-7.213763,2.580512], dtype = "float32")#candidate|1586|(1001,)|const|float32
call_1585 = relay.TupleGetItem(func_1553_call(relay.reshape(const_1586.astype('float32'), [13, 77])), 2)
call_1587 = relay.TupleGetItem(func_1556_call(relay.reshape(const_1586.astype('float32'), [13, 77])), 2)
uop_1593 = relay.erf(const_1586.astype('float32')) # shape=(1001,)
output = relay.Tuple([call_1583,call_1585,uop_1593,])
output2 = relay.Tuple([call_1584,call_1587,uop_1593,])
func_1600 = relay.Function([], output)
mod['func_1600'] = func_1600
mod = relay.transform.InferType()(mod)
output = func_1600()
func_1601 = relay.Function([], output)
mutated_mod['func_1601'] = func_1601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1611 = relay.var("var_1611", dtype = "float64", shape = (4, 13, 11))#candidate|1611|(4, 13, 11)|var|float64
uop_1612 = relay.atan(var_1611.astype('float64')) # shape=(4, 13, 11)
bop_1616 = relay.logical_or(uop_1612.astype('bool'), relay.reshape(var_1611.astype('bool'), relay.shape_of(uop_1612))) # shape=(4, 13, 11)
output = relay.Tuple([bop_1616,])
output2 = relay.Tuple([bop_1616,])
func_1621 = relay.Function([var_1611,], output)
mod['func_1621'] = func_1621
mod = relay.transform.InferType()(mod)
var_1622 = relay.var("var_1622", dtype = "float64", shape = (4, 13, 11))#candidate|1622|(4, 13, 11)|var|float64
output = func_1621(var_1622)
func_1623 = relay.Function([var_1622], output)
mutated_mod['func_1623'] = func_1623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1106_call = mod.get_global_var('func_1106')
func_1107_call = mutated_mod.get_global_var('func_1107')
call_1625 = relay.TupleGetItem(func_1106_call(), 1)
call_1626 = relay.TupleGetItem(func_1107_call(), 1)
var_1627 = relay.var("var_1627", dtype = "float32", shape = (14, 16, 15))#candidate|1627|(14, 16, 15)|var|float32
bop_1628 = relay.not_equal(call_1625.astype('bool'), relay.reshape(var_1627.astype('bool'), relay.shape_of(call_1625))) # shape=(14, 16, 15)
bop_1631 = relay.not_equal(call_1626.astype('bool'), relay.reshape(var_1627.astype('bool'), relay.shape_of(call_1626))) # shape=(14, 16, 15)
output = bop_1628
output2 = bop_1631
func_1634 = relay.Function([var_1627,], output)
mod['func_1634'] = func_1634
mod = relay.transform.InferType()(mod)
var_1635 = relay.var("var_1635", dtype = "float32", shape = (14, 16, 15))#candidate|1635|(14, 16, 15)|var|float32
output = func_1634(var_1635)
func_1636 = relay.Function([var_1635], output)
mutated_mod['func_1636'] = func_1636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_1676 = relay.TupleGetItem(func_1600_call(), 0)
call_1677 = relay.TupleGetItem(func_1601_call(), 0)
output = relay.Tuple([call_1676,])
output2 = relay.Tuple([call_1677,])
func_1678 = relay.Function([], output)
mod['func_1678'] = func_1678
mod = relay.transform.InferType()(mod)
output = func_1678()
func_1679 = relay.Function([], output)
mutated_mod['func_1679'] = func_1679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1210_call = mod.get_global_var('func_1210')
func_1211_call = mutated_mod.get_global_var('func_1211')
call_1708 = relay.TupleGetItem(func_1210_call(), 1)
call_1709 = relay.TupleGetItem(func_1211_call(), 1)
output = relay.Tuple([call_1708,])
output2 = relay.Tuple([call_1709,])
func_1725 = relay.Function([], output)
mod['func_1725'] = func_1725
mod = relay.transform.InferType()(mod)
output = func_1725()
func_1726 = relay.Function([], output)
mutated_mod['func_1726'] = func_1726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1761 = relay.var("var_1761", dtype = "int32", shape = (9, 2, 12))#candidate|1761|(9, 2, 12)|var|int32
var_1762 = relay.var("var_1762", dtype = "int32", shape = (9, 2, 12))#candidate|1762|(9, 2, 12)|var|int32
bop_1763 = relay.right_shift(var_1761.astype('int32'), relay.reshape(var_1762.astype('int32'), relay.shape_of(var_1761))) # shape=(9, 2, 12)
output = relay.Tuple([bop_1763,])
output2 = relay.Tuple([bop_1763,])
func_1767 = relay.Function([var_1761,var_1762,], output)
mod['func_1767'] = func_1767
mod = relay.transform.InferType()(mod)
mutated_mod['func_1767'] = func_1767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1767_call = mutated_mod.get_global_var('func_1767')
var_1769 = relay.var("var_1769", dtype = "int32", shape = (9, 2, 12))#candidate|1769|(9, 2, 12)|var|int32
var_1770 = relay.var("var_1770", dtype = "int32", shape = (9, 2, 12))#candidate|1770|(9, 2, 12)|var|int32
call_1768 = func_1767_call(var_1769,var_1770,)
output = call_1768
func_1771 = relay.Function([var_1769,var_1770,], output)
mutated_mod['func_1771'] = func_1771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1281_call = mod.get_global_var('func_1281')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_1773 = relay.TupleGetItem(func_1281_call(), 4)
call_1774 = relay.TupleGetItem(func_1282_call(), 4)
func_1553_call = mod.get_global_var('func_1553')
func_1556_call = mutated_mod.get_global_var('func_1556')
var_1778 = relay.var("var_1778", dtype = "float32", shape = (1001,))#candidate|1778|(1001,)|var|float32
call_1777 = relay.TupleGetItem(func_1553_call(relay.reshape(var_1778.astype('float32'), [13, 77])), 3)
call_1779 = relay.TupleGetItem(func_1556_call(relay.reshape(var_1778.astype('float32'), [13, 77])), 3)
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_1797 = relay.TupleGetItem(func_704_call(), 0)
call_1798 = relay.TupleGetItem(func_706_call(), 0)
output = relay.Tuple([call_1773,call_1777,var_1778,call_1797,])
output2 = relay.Tuple([call_1774,call_1779,var_1778,call_1798,])
func_1800 = relay.Function([var_1778,], output)
mod['func_1800'] = func_1800
mod = relay.transform.InferType()(mod)
mutated_mod['func_1800'] = func_1800
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1801 = relay.var("var_1801", dtype = "float32", shape = (1001,))#candidate|1801|(1001,)|var|float32
func_1800_call = mutated_mod.get_global_var('func_1800')
call_1802 = func_1800_call(var_1801)
output = call_1802
func_1803 = relay.Function([var_1801], output)
mutated_mod['func_1803'] = func_1803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1725_call = mod.get_global_var('func_1725')
func_1726_call = mutated_mod.get_global_var('func_1726')
call_1805 = relay.TupleGetItem(func_1725_call(), 0)
call_1806 = relay.TupleGetItem(func_1726_call(), 0)
var_1809 = relay.var("var_1809", dtype = "int16", shape = (1600,))#candidate|1809|(1600,)|var|int16
bop_1810 = relay.greater_equal(call_1805.astype('bool'), relay.reshape(var_1809.astype('bool'), relay.shape_of(call_1805))) # shape=(1600,)
bop_1813 = relay.greater_equal(call_1806.astype('bool'), relay.reshape(var_1809.astype('bool'), relay.shape_of(call_1806))) # shape=(1600,)
output = relay.Tuple([bop_1810,])
output2 = relay.Tuple([bop_1813,])
func_1828 = relay.Function([var_1809,], output)
mod['func_1828'] = func_1828
mod = relay.transform.InferType()(mod)
mutated_mod['func_1828'] = func_1828
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1829 = relay.var("var_1829", dtype = "int16", shape = (1600,))#candidate|1829|(1600,)|var|int16
func_1828_call = mutated_mod.get_global_var('func_1828')
call_1830 = func_1828_call(var_1829)
output = call_1830
func_1831 = relay.Function([var_1829], output)
mutated_mod['func_1831'] = func_1831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1160_call = mod.get_global_var('func_1160')
func_1161_call = mutated_mod.get_global_var('func_1161')
call_1862 = relay.TupleGetItem(func_1160_call(), 0)
call_1863 = relay.TupleGetItem(func_1161_call(), 0)
func_1634_call = mod.get_global_var('func_1634')
func_1636_call = mutated_mod.get_global_var('func_1636')
const_1874 = relay.const([-1.665133,6.478726,1.835346,-7.173104,-7.370272,-8.459073,8.648372,-8.256673,9.264376,4.304700,2.093964,0.524510,5.811059,0.747573,5.943093,-9.291209,-4.773855,6.843881,8.107134,-6.868020,8.686851,7.562723,5.136830,-5.801099,3.039590,3.686613,3.639751,6.312337,0.355476,9.676951,2.295307,-2.089889,-5.229123,-4.268960,-2.312672,6.109813,0.237556,-7.264204,-6.351998,6.435165,-6.077259,-8.739415,-7.801708,-2.155338,0.652958,-7.399254,-4.492253,-4.457008,5.938834,-4.921941,2.273777,4.053645,-4.103598,1.453605,-0.017591,-8.817181,3.157661,4.319881,4.612891,9.179458,3.445534,1.156058,5.204748,-5.712984,-6.170898,-5.399859,2.678560,-3.133711,4.468437,-9.004326,8.720207,-6.296863,-0.318100,-8.729354,7.200849,-7.389891,9.282132,-2.181436,9.341220,2.255266,-0.305113,7.494635,-7.645321,0.237123,3.047195,5.912370,5.568412,-5.017874,7.022812,3.254155,-1.429078,-6.290150,2.822819,-1.941092,6.531857,6.071952,5.302949,7.926281,-9.313402,2.214956,4.326626,-6.594125,-3.492852,-4.100105,6.252950,5.636526,2.632266,-7.586024,-0.770797,2.219373,-3.713360,6.210768,7.287310,9.647326,-3.714351,1.052203,-3.042041,-8.379473,-3.092859,-8.093617,-3.940916,-1.193882,3.464679,-6.670734,9.171497,-3.143053,-6.131115,-6.956378,-2.618185,-9.785292,-7.416768,-3.536417,3.946028,-0.595727,0.781804,-1.717636,-0.474646,7.934418,1.834799,2.246809,5.989711,-1.878845,-7.054840,9.449779,6.548315,8.716585,-4.360619,-2.122424,-0.869273,0.313602,0.996450,4.221466,-3.782783,-6.238952,-1.656714,8.132500,4.560473,-0.228256,-6.862643,-9.013317,2.643321,6.514069,-5.620618,2.272417,-7.305338,-8.857124,-7.693768,4.626339,1.262982,-2.997259,-5.478738,8.849066,-6.876047,4.216359,-1.218010,-6.321132,7.184928,6.957047,5.356245,-8.067450,5.339059,6.115905,-5.558200,9.644160,-7.954004,8.674295,1.706875,-4.681784,-3.632679,-5.589463,-7.867075,-9.411644,-9.565733,2.433071,8.825764,-5.900466,-4.052206,-8.316476,-7.191842,-2.394695,-2.862746,3.295160,6.006031,4.469420,2.397601,-5.871185,-9.177346,5.540986,-7.161771,-2.311361,-9.136248,-5.062964,-3.390787,3.986438,-8.014691,-8.630207,-4.267682,-7.215335,5.230533,0.556592,2.567946,-8.064087,9.869517,6.327458,-9.199677,5.211448,-5.890957,-8.360319,-7.571496,9.856284,9.421879,9.211797,-1.798509,3.159365,8.762895,-4.958286,-2.424927,-3.509622,4.240966,3.755858,1.956058,-1.080182,4.381632,3.664537,1.614019,-4.356672,-2.387443,-3.901237,-9.582216,-7.996091,-1.097486,-3.639895,-4.452038,-2.399202,-3.901292,4.138377,-1.718995,3.195756,-3.036823,-8.519586,-0.705336,0.874927,-4.617990,3.564224,8.432905,8.306064,-9.854929,4.256626,-0.823877,-2.882405,4.772704,0.702533,-6.717314,4.749362,5.918108,-9.329270,2.387191,-9.858206,1.154218,-6.068394,8.338112,-6.301996,1.506836,-9.771067,-4.252932,6.836378,7.235747,7.119519,6.693105,-0.422496,-4.628106,-6.310532,-2.587857,-6.455698,-6.475966,5.244520,-2.355177,-2.548411,1.557443,2.502126,7.547880,2.739560,1.152163,-9.367395,-7.147431,7.174988,5.787395,-8.627719,-8.067700,0.692595,9.501833,2.631941,8.599999,4.337518,-1.436137,-3.106908,6.043212,-5.580204,-8.801114,-9.207674,-9.744293,-0.165609,4.005125,3.407725,5.752021,1.363780,5.374091,-8.032115,-0.314250,8.771753,-1.429912,-8.557918,-6.935184,3.728220,-2.574860,7.168634,6.350623,-0.766617,-6.903803,0.499177,9.002680,-0.085712,9.302436,5.067342,-3.807688,-5.800793,-0.327051,1.713113,-6.269632,9.159969,-3.175778,5.145973,-8.454068,-0.250991,5.266774,-8.333934,-7.672725,-7.856740,6.950897,0.193004,-7.198621,9.553634,9.755925,3.415571,4.701261,-7.799904,6.499728,8.450216,2.922527,-1.085458,0.855342,7.677886,0.134122,3.471290,6.796983,1.435787,6.173998,-3.932185,6.258340,-4.716436,0.454389,-5.446261,-7.716453,-0.634214,8.994200,-7.440616,-7.601582,3.982019,2.413327,-0.569578,0.378132,2.551364,-7.997949,4.627737,9.789984,-4.341917,-7.263952,-5.131598,5.827972,7.441667,3.700268,3.833857,4.851945,-6.706690,-2.808713,-4.586838,-4.001638,-2.228363,6.170327,-7.529864,9.032880,5.929066,6.497061,-1.224807,0.925416,7.912581,5.595249,-0.750075,1.421279,-4.630013,4.390366,-0.685193,-2.619858,1.787949,-6.621799,-4.501638,-1.148955,-3.486243,0.474539,-2.341709,-5.694324,-1.435949,8.590789,-3.611200,6.770039,-0.786842,4.320408,-4.233084,0.522138,-9.127243,9.610039,6.311978,-1.196166,8.747328,-5.532205,-5.310408,2.447027,-6.313707,1.409276,-9.082034,1.956904,-1.192818,4.847303,-6.014430,-8.988932,-4.170857,-0.393995,1.924088,8.225232,-7.099296,4.799611,-1.397908,9.967566,4.677083,-7.644949,1.572922,-0.885009,-6.614738,-3.587923,-3.470706,9.218125,-4.772761,-8.904415,8.769651,-9.566796,5.881011,-9.321390,7.355669,-9.912233,7.624042,-0.202617,9.515619,-7.142798,-7.495484,-5.645414,0.567628,8.726877,0.647604,4.628265,-0.462388,8.451897,3.902231,7.088163,9.616833,4.692486,-1.931714,-1.289412,-4.144940,-8.853715,6.945577,3.428879,-4.541734,4.836190,-8.780376,-3.993534,-8.583083,-7.116807,-2.304324,-0.647584,-1.123639,-5.940455,2.475371,-4.148176,0.528221,-8.811887,5.316512,8.122640,3.607961,-9.623904,5.986149,-1.984444,-5.328118,-9.860871,-0.181743,-7.080400,-8.200328,-4.273604,0.913446,-2.175192,7.427178,-4.450447,-0.722980,-0.305019,-5.227663,-4.521004,-2.892891,1.873459,6.263026,8.844275,6.994479,-0.631852,-4.579011,5.623233,7.758868,-0.627244,3.860695,-0.471148,-8.479538,7.416826,6.894276,-4.018015,-7.496973,-1.871577,1.069743,4.390843,2.209217,5.335822,-8.860014,-9.182877,-4.413582,-2.151097,8.708841,0.559896,-9.912798,-5.237928,-8.430135,7.293985,-4.295347,7.786995,1.320502,-2.444841,-5.507901,-3.398328,2.197108,8.570887,7.517028,1.902788,-3.533204,-6.348407,8.368826,-6.722528,4.719884,-2.857643,8.686251,-2.899221,-3.803901,1.431391,-0.893380,-3.992576,-9.760825,7.063695,3.632108,-8.359193,3.754704,-7.132957,3.547001,6.926524,-6.258137,0.787110,4.061656,-6.250750,-2.047814,-6.808795,1.423508,-8.360320,-8.216817,5.943479,-7.450671,7.028022,-7.783583,-4.387927,-8.254299,7.660918,8.188485,-1.459309,-6.203213,9.090391,6.146458,3.537957,-4.564796,-3.381667,9.945264,-6.083359,-4.675940,6.500558,-7.108487,-3.351804,8.440536,3.611971,-6.914335,6.821962,9.424693,-6.821817,6.732937,6.619400,1.357885,-8.090290,-1.463267,6.617372,3.267917,1.930189,-4.765961,-2.353140,7.873405,7.934671,-9.920057,-3.999561,1.363710,-3.869458,-3.903451,-2.425255,1.011438,-1.947748,8.249209,-2.948586,4.485555,-4.952655,-7.486166,3.184425,4.563494,4.616855,-2.466949,4.450825,-6.293258,-2.737357,9.792548,1.162716,5.836322,-3.364056,6.175035,5.065470,5.776978,-6.221454,6.656920,4.225593,-3.166702,-5.792722,5.661339,-2.250583,1.779447,-4.012487,5.978906,3.638499,-5.220835,-6.660409,2.488510,-3.711199,9.043268,-0.770790,-2.251774,6.560824,-6.028027,3.844367,6.164504,-1.820771,-5.090664,-7.272201,-4.866666,1.303001,6.129343,-4.958833,6.049719,1.085188,6.161837,2.241816,-5.539986,7.038600,-0.733157,-2.581134,-4.986552,-2.922107,6.965852,7.101874,0.060768,-3.252682,-8.572849,8.968687,6.187675,-6.580823,-9.629236,6.136049,4.701419,9.630693,0.609945,8.901693,-0.034438,2.758493,-6.738108,6.016657,8.773595,5.469040,-9.946764,4.247985,3.720903,9.188633,-4.074117,-5.764257,3.327255,1.952540,8.751987,-8.522768,8.214422,-0.077452,-8.779833,1.865380,8.750739,8.596544,9.333162,-0.445663,5.352669,-4.382962,-0.347073,2.468315,-9.700983,-6.550656,0.321684,-2.974136,-6.213616,2.746592,-1.399162,-0.110291,3.784420,-2.862361,2.848539,8.879910,-1.199260,-5.613888,0.754216,-8.993773,-0.236873,7.852137,4.753735,-3.227364,-1.560146,1.756522,-1.692146,4.823398,3.312231,-0.378492,-7.416484,0.429918,1.520351,0.032468,9.001535,4.917930,-6.268552,-3.427321,-7.938894,-5.630479,-6.060493,4.964044,2.959320,-8.168519,-0.428960,1.287187,-1.356319,7.059994,-1.230967,-5.675699,-1.815860,-4.333546,1.682007,9.354272,5.722762,-6.763345,5.278484,8.597810,-4.622447,1.615064,-0.352732,7.494745,-4.298846,9.960005,6.734339,-5.528849,6.973294,2.683044,3.255474,-8.961421,-5.858932,-4.985619,-1.777988,-2.775132,2.891644,-2.178821,0.346760,6.592088,-7.389374,-1.037921,-0.955305,-8.187605,0.488372,-7.627040,-5.873747,-1.059423,-6.577732,-6.857931,-4.258270,7.414461,-5.888498,5.477471,-6.894064,5.225288,4.260876,-3.705320,5.459246,0.988430,-2.466409,8.021628,-9.061029,1.345453,0.218601,-7.797823,4.633146,1.613572,3.499011,8.810715,4.666616,-7.005179,-9.207364,0.180538,6.805010,0.451476,-5.590380,-3.682133,-2.273368,6.006996,2.562611,7.079418,-2.504590,1.641430,6.586854,3.817696,9.901757,-2.186805,-4.685611,3.788848,-6.442887,-7.193221,-9.926037,-1.889079,-5.604582,-5.547209,7.005383,-1.159328,-5.439222,5.145973,-9.981025,0.259197,-3.123952,-3.171493,2.449180,9.833352,-0.493644,-0.088129,-8.753441,4.914448,1.610698,0.959604,9.760294,-6.168502,4.392877,4.747349,-5.412325,5.391957,-5.818462,0.353445,-3.731728,-2.729217,-8.290590,3.106615,9.624235,-9.345606,-3.982747,0.810502,7.207710,0.624685,9.265491,8.472765,7.552109,-8.718292,-0.034202,5.627033,-8.202911,8.654601,9.663876,-3.194349,0.620827,9.849607,-4.694355,4.108836,-2.963571,-9.602778,3.237472,3.744379,-7.554305,9.519700,2.838523,4.206798,-7.692119,2.770325,4.537114,-1.285140,-9.412059,-5.482467,-6.905955,-8.917389,2.656467,-5.956122,-3.277727,4.184712,9.736264,4.654802,-5.543657,6.772234,0.456989,-0.777040,-9.009852,8.412472,-6.819567,8.320131,7.640293,2.700932,-4.983169,-3.268769,9.414596,3.362894,-5.488926,8.291128,-9.120810,9.324382,4.765296,-7.870664,-0.715471,-0.570568,-8.801892,4.091403,-1.652202,-6.585437,-2.601298,9.575963,-6.748034,-7.051971,-1.639842,9.595451,-4.715515,-5.330627,-2.572090,7.206172,4.398930,3.923559,9.826804,8.893119,8.535431,-9.441949,-5.431068,2.625920,6.226852,2.418707,-1.098108,-8.728216,4.626324,-6.293208,1.913755,-2.570718,-4.278153,-1.666452,-6.076867,2.168043,6.444680,4.253580,5.617563,4.369366,2.772485,-7.865860,2.448801,-5.374613,-3.726197,0.295296,4.978471,-0.677829,9.819885,7.240392,-5.433272,-0.527326,1.579592,-2.160727,-1.620051,4.450383,-7.055159,9.226831,-1.358735,3.866868,3.364181,-4.637988,-0.930510,-7.189331,-2.531499,-0.637369,-4.923466,-6.411590,-7.359627,-4.814758,-2.990147,-8.559831,-0.703905,5.427038,-6.105828,1.775760,1.194805,-6.775022,-7.782486,5.221300,-8.945583,5.181615,-9.015487,-2.635000,-4.767597,-7.714467,-4.461812,-6.623114,-3.725072,4.450149,-9.818357,-4.182577,7.731466,6.859099,5.931131,-6.286749,-1.023189,-5.719324,2.155365,-1.197785,-3.096011,4.124490,2.340033,7.237313,6.474181,-5.524841,2.964837,5.746866,9.306250,-0.188269,6.694963,6.513390,-1.718542,6.665014,-7.742606,-5.480467,-6.204899,-2.834678,4.291678,4.261603,-4.439157,-6.895596,3.150066,-8.779515,-0.844413,2.309776,9.872764,-3.476899,5.601666,-7.402122,0.688983,-2.394776,-5.437904,0.071705,-5.046617,-2.229987,7.725400,-5.089835,-3.503607,6.482909,1.167538,-5.871303,1.595101,-9.036034,-4.311077,6.306665,2.602554,6.332940,-8.573622,5.562010,-6.800093,7.281699,-2.025969,-1.339412,4.110494,-8.124735,-4.783637,8.761246,7.663386,-7.923461,-5.839076,6.932967,8.355826,3.973969,9.616051,-5.404187,-7.151949,1.780830,4.610171,3.763525,-2.941818,2.223136,5.662051,-8.891880,3.093157,-0.887829,-3.033999,1.721046,4.177217,5.505915,-1.588335,-7.468098,-2.801813,8.334636,2.406205,-2.767754,-8.788302,-6.830722,-1.790556,-1.444696,-3.267531,-9.816360,-4.634004,-7.982847,-0.737745,7.390036,-2.362144,-8.166560,3.473948,-7.952258,-3.797688,-4.121573,5.235438,-0.159609,-4.276564,6.969442,-1.772517,3.366319,8.499072,-0.759667,-4.554133,-5.057593,5.916316,6.227876,0.414432,5.155001,-8.261742,-6.172392,-6.394714,8.525634,-6.929969,6.239544,-6.574583,7.274249,4.470535,-3.936597,8.939056,-0.330257,5.414603,-9.848250,2.605758,-9.018164,8.284553,0.391687,-3.068914,-2.687222,5.621719,5.161318,8.501548,-6.267841,-2.656859,-5.114314,2.853681,-1.314320,-8.453004,8.270744,-9.329364,8.548237,6.925593,3.811467,6.984741,-3.583661,-8.672376,5.442755,-0.386351,-2.263644,-8.868994,6.780071,6.138371,-6.748772,-3.722346,7.730154,6.655096,-9.814077,-4.219882,-6.974954,-6.489973,-0.905856,-6.620326,-2.626689,3.816126,6.933224,5.399957,-0.145428,-7.507004,-1.470777,-9.623871,0.097139,-5.524525,-8.453492,-1.308650,-5.852293,9.555520,4.835730,-6.577263,6.538375,-1.169837,8.854553,0.569296,-8.003018,-1.005490,-4.258378,-2.902554,3.349969,3.898768,7.528600,-6.930494,-5.794563,8.213890,-6.384950,7.178228,8.646790,-7.840401,7.793879,-1.665447,-1.135971,-3.669744,-9.417844,-4.351333,3.052040,3.597263,4.070161,0.735858,-5.562252,5.184434,-9.766762,-0.549956,-4.508805,8.747257,-5.296061,0.195368,-9.336465,8.232200,7.076933,-9.138376,5.189973,8.577856,-0.085857,7.377095,7.909244,5.081626,6.960566,-6.512430,-0.337965,-8.487975,9.626909,3.551677,0.272956,-0.741543,2.740326,-6.524732,7.666536,9.971867,-8.400557,-4.296143,-4.309491,2.369419,6.306414,0.430183,4.314570,-8.292295,-9.791288,1.882129,-4.950080,-3.922548,-3.341301,-9.159820,-9.906604,6.000019,-7.608275,6.871214,8.474690,7.364103,-1.619815,6.173213,-6.865850,-7.965194,3.704070,-8.457124,-4.480225,7.134578,1.076784,-5.393406,-3.620787,-0.723751,3.952416,6.763980,1.625685,9.599935,0.446539,0.018405,-3.985099,-6.189611,6.251381,7.090399,9.416183,5.602747,-7.889832,5.814555,8.176638,-4.324359,4.527330,-8.464216,-6.802212,-1.371037,-7.256203,4.601714,3.210681,-8.689593,-5.667058,-1.852738,0.286612,4.144415,7.119590,-2.856912,-2.479129,6.523297,-5.085781,-3.276199,9.709664,-6.413276,4.986533,-5.445253,-0.442554,0.185646,-8.840920,-0.618426,4.391409,-9.824330,-0.661765,-4.663980,4.599582,-4.486332,1.735315,-8.207996,2.862907,-6.774258,-7.923738,-9.384258,7.219156,8.104042,4.890962,4.540882,2.034239,-6.972743,-8.354031,2.502874,-0.185602,8.655634,-4.049088,9.052164,6.698974,-3.984752,-0.760345,-2.332918,5.897946,-3.759484,5.990467,4.904658,5.215795,9.895455,-3.624649,8.055007,-2.860356,-9.965943,-7.361138,1.279584,1.535813,3.988288,-3.792447,-7.031343,8.510090,-2.562527,-8.593698,-7.042663,3.829032,-0.958507,-5.643793,3.548798,-2.619147,6.554049,7.499391,-6.457402,4.848907,-9.924664,4.578007,9.770448,2.366693,-5.201032,8.677740,6.302287,-0.616324,7.471828,4.607322,7.354774,-9.215962,-4.423414,7.124162,6.179302,-4.072963,-7.154969,-0.649286,0.810767,-9.304821,3.662367,-5.163271,-4.120775,-1.078961,7.437047,-1.592852,-5.646900,3.856226,-1.979822,7.421983,5.569132,-2.160007,-8.872653,1.718873,-3.197680,5.608651,-0.075457,7.276665,-1.962181,-9.415997,0.201809,-8.085970,5.667560,5.283026,6.317890,4.978677,-0.239564,-1.715126,-0.116782,-7.404227,4.571373,9.972260,2.605960,9.384840,-0.483974,8.990708,-9.815899,4.746591,-1.034746,-0.929953,-6.138331,-1.388161,1.815856,3.324193,3.282644,-9.491062,3.080722,-9.019253,-6.859991,-7.226813,0.486962,1.545157,7.067648,0.285664,1.220824,0.789777,-5.377886,-6.912151,9.310599,7.893602,-6.431884,9.740409,0.083103,-9.546716,6.852612,1.291867,0.517020,6.225013,6.640536,-8.462527,-9.198130,-9.268664,4.010657,-0.581284,-4.837518,3.542307,0.620923,-8.850736,-1.385752,0.199013,4.277806,-8.552886,6.949642,-1.806020,1.034001,6.976111,-1.959308,-8.631400,-1.390563,-1.328622,-9.120630,7.199938,9.759275,1.985121,9.175794,7.621792,7.518253,9.976281,1.175440,3.075202,-9.457859,-8.549677,3.682527,-6.112342,9.155097,-0.100749,1.627357,-7.745914,-4.658786,-6.580077,-0.953701,-6.511904,-0.490125,-2.091414,5.247332,-4.369891,-0.070142,5.572961,0.016611,5.085379,-0.630276,-8.494229,-9.564120,-7.777834,-2.714594,-0.511956,2.965638,-5.074250,-0.753734,5.123864,4.097694,6.203095,4.026767,5.113909,-1.410744,1.681442,-1.458525,-6.015671,-2.846409,9.520824,-1.923101,6.480455,4.220510,8.349662,-0.054423,9.613398,-3.787216,9.940029,1.192127,-9.163151,-5.389843,2.711462,3.992586,2.672374,-2.443918,4.405622,-2.022351,-9.015456,-3.825133,5.040727,0.562217,-2.996456,7.862667,2.674456,-0.046702,-0.752337,3.910827,-0.998467,-7.289458,5.193468,-4.314092,9.089775,9.009911,-0.653985,0.093823,7.026385,0.225300,-6.758588,9.225797,2.848291,3.922216,-6.900809,6.661472,1.381962,-8.156516,8.633443,3.933634,3.971951,-2.662367,0.274317,2.757872,-5.549279,-2.817825,9.405020,-1.011075,-7.605236,4.521548,3.869725,2.243435,-0.419655,6.212093,-5.808802,-3.024249,5.462625,-6.373896,-7.489982,5.136597,-8.993067,6.103048,-6.540405,-2.747528,7.045909,9.928665,4.724416,1.511736,9.896226,9.871240,-5.855011,1.401533,-5.388978,-1.971415,-4.263122,-6.360247,1.800848,-8.153396,6.012266,-1.931200,-7.940351,2.530876,-9.483447,8.416028,0.004228,-0.306980,-4.230251,-4.794891,8.521604,0.088399,-1.193322,-0.260859,0.647302,8.914042,3.131408,3.713755,-4.859332,4.441017,-6.465894,-5.661087,0.796475,2.144186,-8.212312,1.944135,-3.627916,3.332129,-6.495976,-2.751213,8.318441,-1.949940,-0.051079,-8.225782,4.933172,2.464641,8.378145,5.106350,-3.300908,-2.713087,-5.912495,-2.790543,5.171791,-2.881616,1.320240,6.189597,-2.830011,-3.292408,-7.465580,1.557916,-6.717568,9.813157,-5.913917,9.116140,2.648278,-8.913082,3.282342,-0.002644,-5.162186,-7.744797,9.744150,-0.137467,3.776084,-8.228637,-0.284618,8.621577,7.446899,-3.298967,-7.918005,-6.677500,7.780041,8.734914,-3.150900,7.759211,-6.641570,-5.772197,-2.661595,-9.500126,2.355119,8.224476,-1.633364,4.367148,4.505502,-2.182918,5.568658,5.138154,8.711557,6.456350,-1.817867,-1.327911,-0.261102,-2.239215,-2.433514,-3.386495,-0.787714,9.611664,2.792505,-0.832368,-7.129956,-6.168642,2.068181,-9.061300,-4.036166,-6.938989,5.354972,-3.874584,-6.848305,-7.399688,6.349382,-0.330409,-8.101060,-5.275308,-9.800698,-2.047475,9.779749,-9.880562,-6.415463,6.960728,-4.155213,4.646401,3.594518,6.139115,-4.039468,-2.813938,5.814901,3.707172,-2.691521,6.181298,-1.286696,3.873615,-1.673664,5.466333,-9.505119,1.031372,-6.658243,-8.704871,-3.007480,1.986444,3.209343,-8.932429,9.538470,-5.543565,-9.582047,-1.759248,6.914487,-8.811426,-2.973113,-7.090888,9.156196,1.103749,-1.449225,5.350583,-6.443550,-9.581194,-8.383380,-3.843612,-2.191946,0.145471,-1.547208,-7.479200,2.163411,7.515560,-7.689053,-8.392209,3.312635,2.981386,-5.183574,8.072190,-9.758849,-9.776882,-3.214666,-7.790617,-7.810564,4.391767,0.719463,-6.810241,1.933261,-8.175530,-3.602301,5.167280,0.349767,4.856249,1.799934,-7.429310,-0.298291,-1.491589,5.293999,-5.838165,-2.987560,-6.644174,9.209006,-3.144070,-9.827547,-0.060194,2.349672,-9.627940,-6.057171,-4.836190,-5.205383,9.878693,-4.525488,-8.622314,-0.115391,4.283481,-6.604546,5.814422,-7.014305,-5.106923,-3.960190,6.305682,-6.130445,-9.412610,-8.313014,-7.834456,1.731367,9.247795,8.489384,2.623705,-4.347890,-8.661504,-5.320876,-3.980133,0.649936,3.172410,8.832587,-1.123634,8.762895,8.787811,7.247677,-6.464960,4.911095,-6.075392,1.877909,2.937063,-4.385853,9.929361,0.765018,-4.476350,-8.267515,-9.430962,-4.506654,-3.822266,-2.143098,2.401780,7.541774,-4.798529,-5.206841,-9.290775,7.731031,5.180328,3.034857,-6.683717,6.556447,-3.593753,9.738442,2.057180,3.842231,1.680360,5.766401,3.545471,-8.207670,-4.524839,7.463690,4.880541,-1.005847,-4.763786,4.379217,-9.043981,3.908088,-5.543818,9.708888,8.193642,5.171252,-9.196496,6.362256,-3.706054,-9.528143,-9.142828,1.468897,-6.686009,7.473420,4.417747,4.318670,1.079111,-4.505605,6.393118,8.791840,-2.561758,7.196507,-9.025061,3.733140,8.442169,8.327669,6.690015,6.303669,-4.599206,-8.603343,0.278369,0.336989,2.959532,-4.241344,1.471540,0.548316,9.598277,5.670797,8.908794,-8.920728,-4.231092,6.275673,-5.296077,9.631026,9.401126,-9.162231,0.277283,7.322898,-9.074375,-7.026851,6.821521,5.600172,-6.141323,-5.697736,8.036789,-7.095292,-7.423781,7.406423,-8.723354,0.687338,9.611461,-2.304403,5.771046,9.998755,-0.631898,-7.290780,2.451212,-5.789431,-2.145251,3.031184,8.696050,2.788229,9.818769,-0.102973,6.768146,4.727616,9.460496,9.242158,9.749399,-7.892764,-2.998005,-2.734552,3.150406,-1.183162,7.625217,5.032664,8.547919,0.701539,-4.953386,9.066888,2.212435,-6.600754,-0.695522,-1.298838,-7.161170,7.272791,8.815817,-2.314135,-7.711981,-9.458933,-9.826011,-4.810514,-7.915404,1.887409,7.145806,-2.479056,3.135100,-8.431262,-7.726209,-0.331933,6.047731,-2.444751,0.056017,0.031135,8.849515,0.143318,-2.171320,6.709982,9.618323,9.491186,2.442298,-0.007573,-6.266522,4.826126,9.288368,1.226204,3.497161,4.301135,-6.263041,8.404324,-0.899194,3.969590,-0.760689,5.955045,1.220834,8.286791,-0.090090,-3.607283,-5.270594,6.494830,5.899472,-1.678355,-6.254102,4.244466,2.331702,-2.559830,3.081548,-0.099983,4.611050,-8.848636,-7.726048,2.982166,4.327589,3.038984,8.606161,3.231791,9.903474,-6.669882,4.710890,-7.189413,-7.497831,-2.996505,-7.194401,3.185944,-8.662818,7.214391,3.207282,4.017406,-5.368588,-7.074487,8.546647,-4.745619,-2.479430,2.695516,-9.181623,-9.448028,-0.567086,-3.262442,3.769925,-4.484342,7.359159,-2.384784,2.540046,1.768546,-3.422145,1.670108,6.395302,-1.492713,-2.025672,7.953378,8.746120,1.684834,-6.110962,-0.999128,-4.366353,4.977045,-9.328128,-1.159824,3.067362,6.506356,-3.020301,-5.291581,-0.418640,6.155418,-6.119757,0.031984,-4.768683,9.536223,3.541160,-0.733675,9.284594,2.232390,0.237338,3.461500,-8.074768,-4.836730,2.660557,-1.801497,9.515237,7.102515,2.295103,0.882044,4.351357,-4.404097,-8.902151,-6.481353,7.285954,-6.602522,-5.710324,8.539093,-5.503059,7.688171,-5.345426,-0.602586,7.594115,5.048669,-3.343910,-7.062265,-5.342582,-7.649911,7.150898,-1.586379,5.361214,1.160360,-3.457776,-6.677553,-2.682103,-1.733295,3.266412,-8.947678,-0.073051,4.021594,-7.820352,6.351269,4.804963,9.555296,-8.969389,2.431847,-9.092004,9.201605,2.819697,-1.356812,2.591202,3.469053,8.131659,0.922078,8.914341,-2.524000,-4.696797,-8.221772,-8.138147,-3.900151,9.257550,-1.319042,-3.122570,-9.226492,5.704258,2.230630,-6.071591,9.394029,-5.828509,7.048944,-9.721007,4.625961,9.008562,-2.506653,-4.944622,3.771970,-5.895580,8.792777,9.101717,-0.148289,-5.993367,-8.043967,-6.119628,-5.485713,-1.569534,5.234253,-2.838701,-8.940357,-2.181986,8.109433,7.494422,9.137658,-6.607585,0.883136,-1.377864,-1.254463,7.020593,3.327796,-9.054713,9.283358,-9.775446,7.635747,3.894747,-7.957189,-6.623451,-4.774396,-4.733148,3.484140,5.422569,6.690802,4.147691,-1.076920,-9.646482,-5.073525,-5.605663,5.479658,-8.791618,8.125807,-0.674867,-3.038513,0.492264,9.454832,-4.465584,-7.989534,0.216084,8.844623,0.808163,1.358654,-5.263404,-4.480190,0.409604,6.053132,6.193496,-9.489025,-4.916115,-3.244027,9.448506,-7.971129,7.900352,7.038018,-3.790773,9.290772,1.249601,9.314421,-2.322687,-4.137232,4.840199,-1.294554,-7.760335,2.538930,4.190526,-4.635188,3.649792,-6.821247,7.086404,3.848807,-6.206364,5.182777,5.223104,0.436320,-5.925521,-0.877064,7.152205,-0.053234,8.050258,5.784903,-9.155219,1.200440,-9.515988,-5.239470,-8.272355,8.584332,-4.089254,-7.809378,4.745771,1.201026,4.812830,8.652614,-0.853780,-2.099182,3.771221,-1.039903,2.322087,8.514733,4.902332,5.847085,5.559669,9.243106,4.866167,-2.504170,7.807627,-0.500559,9.668476,-1.674218,-1.747181,2.258014,-7.948190,0.026867,5.659606,1.292495,-5.225448,-5.439155,2.826872,3.283960,8.603161,5.785398,3.491076,7.209591,4.389567,2.024900,-1.375848,-5.379545,-1.282542,-1.807114,-3.691101,4.658594,-0.820019,6.756134,8.584654,-9.056516,-4.849399,2.974006,-4.067741,-8.779333,-1.629509,0.816783,-2.220924,5.583673,0.972474,-6.252013,6.626151,-3.185715,-2.005065,3.690071,-3.938439,-8.741093,3.575278,-8.705866,0.263476,-6.928515,-7.849035,-0.200250,2.981214,-6.076207,-7.085044,-6.501258,-3.482380,8.826360,-8.102055,-2.234899,5.237893,9.665267,-1.128752,-6.409780,-0.951773,-4.276410,-9.940135,8.690156,-1.520760,-9.729286,0.336318,0.264751,9.686056,-5.133979,0.381108,-1.709204,1.140769,-4.476550,1.411447,5.039453,8.945902,7.579866,5.864859,5.531357,-2.490475,-9.473524,-5.572576,8.980862,-5.821279,-6.008540,-9.630235,-2.685979,-9.564949,1.787047,9.308358,-4.228216,-4.940094,-0.143541,-1.704449,-0.605794,1.171704,-1.411609,-9.489779,2.676719,1.217522,-4.597235,-9.617217,-3.025662,9.240108,7.554010,-8.216089,7.518269,2.977807,-6.374622,6.417037,-4.016228,4.443717,5.752632,-4.944562,2.021214,-2.476751,9.070187,-1.030507,3.756275,8.499854,9.684804,-1.774284,1.346758,-9.282969,-9.769074,-4.594957,8.180566,2.370661,6.770235,7.311715,-2.429790,-4.009198,1.950208,4.560802,1.805515,5.420327,-2.397338,7.616599,4.318980,-0.333491,-8.402836,-9.506342,-4.207646,-1.938084,8.271073,-1.391498,4.074286,7.677085,-2.820885,3.874173,0.836320,-3.024518,6.289921,0.811687,8.133159,-7.901281,-6.040261,4.009543,-5.274753,-8.782772,-0.250768,4.828984,-0.641414,-5.304552,8.835239,-2.205446,-3.269942,4.569852,-4.079141,-1.289870,-7.035838,5.494875,7.471421,9.536088,-9.540478,4.988922,4.486366,-8.613071,5.397523,-1.100428,8.766080,8.737927,2.872805,7.612794,-0.734111,2.425856,-9.264711,5.575452,-8.448974,0.069229,8.809483,1.845614,-5.226321,-2.213321,-7.606763,-9.510667,2.158909,4.699537,-3.633721,-0.564154,-9.756109,4.947027,6.210893,-9.987786,-7.247826,-6.960210,-0.220161,-5.611872,-5.740920,-9.514338,6.854844,-5.664917,-8.367436,4.267061,-3.535671,2.922084,2.578957,8.303721,-3.794032,-4.673448,1.566629,-7.393769,-8.886120,-0.606352,0.103163,8.723076,-7.110688,8.133028,8.186164,6.793390,-0.567133,-1.053640,-5.218184,-8.177564,4.943578,6.123191,-1.371087,-8.811592,-1.651944,7.770769,2.123013,-4.107845,-8.020188,0.255203,-7.164862,9.935706,1.629848,-4.697630,2.225968,-0.199132,-2.741053,7.964704,9.422177,5.864316,3.920047,7.212640,-9.198842,-1.872393,0.378519,-2.553130,-0.647580,0.596905,-0.155633,6.434596,-5.621458,-6.407746,4.545511,4.273876,-3.341185,-3.823838,1.368992,-6.009608,4.092243,-3.300526,-4.328716,-9.095919,-8.201193,9.414371,-7.589553,-1.037091,-3.290464,0.236761,1.387496,7.643421,8.161121,4.944345,4.636636,-5.875717,-4.204650,-6.194472,-5.426207,8.149457,-1.812616,5.307111,-4.124275,8.088057,-6.872739,-4.941234,-7.931522,9.580919,-8.739693,-9.852096,8.435731,-6.021873,-0.652453,-6.204991,-9.629938,4.231647,-6.462739,4.449370,7.683412,-5.341562,4.623368,5.182315,-5.739577,2.175619,2.799833,-1.642305,2.021446,-7.668796,4.366378,-2.984294,-8.362489,-0.296707,-0.510098,2.029496,6.877795,3.799605,4.330011,-6.461104,-0.963000,-5.066778,5.517652,-8.946780,4.220787,-2.097723,4.454702,-9.517446,4.475584,4.874282,-2.635800,9.485743,-5.323255,-3.332427,0.526261,1.812072,5.358333,9.908037,-7.121966,4.905680,-1.474777,2.810285,-7.209121,4.693628,-0.297613,2.727778,-5.897634,-2.621488,0.006906,-9.144263,8.869421,-0.097531,1.681466,-4.734334,4.909908,8.201847,5.667780,-8.635872,0.864199,1.772134,-8.029255,-1.646280,2.664898,1.915758,-9.546354,6.683919,1.161774,-0.400344,8.285245,-3.445234,-4.316819,-2.623990,-5.941116,8.651118,8.358634,-5.091154,1.731135,-7.108432,3.847200,7.660149,1.871614,-1.068952,2.553789,4.293972,1.796378,7.946250,5.527357,0.976275,-8.230550,2.974008,-4.023892,6.288650,2.041236,-2.480138,8.821460,-2.327599,1.607491,9.592170,6.006567,1.385547,8.478261,-3.557858,0.248856,-5.741559,-8.470536,3.234832,3.395085,-2.914550,-5.893192,-0.630035,-3.548102,-2.979445,1.265583,-0.152050,-8.738573,5.028262,8.811796,-4.311755,8.785835,-9.774228,4.017860,-2.661970,5.895499,0.622129,-8.600016,2.176497,-7.294712,-2.101951,-2.186077,-9.499074,-3.647491,-3.721270,3.523384,-7.303696,2.625834,-2.771845,-8.869840,-1.608112,5.006490,1.386069,9.403236,-5.943710,-0.111562,8.632717,-3.704903,5.694642,6.909452,-1.553225,7.880351,4.170735,7.534785,3.804237,2.242698,1.372643,6.031309,-0.941120,-0.428186,-1.373994,6.991467,4.833901,9.676536,-5.110556,-4.101260,3.794789,-2.048073,-6.247139,-8.478576,7.179645,2.849501,-5.368980,-3.855881,9.404057,0.415277,0.535541,9.985545,-2.866741,-9.271152,8.182330,0.222283,-5.817309,-2.922171,-7.278954,-5.338124,-9.926025,-8.096369,-5.271711,0.616649,6.416679,1.678313,9.813513,4.791851,3.059980,-1.579748,-3.596444,2.125301,0.031392,-1.305838,-9.166509,-9.102173,-4.583049,1.818351,7.164225,6.345960,0.593874,0.900567,5.569056,5.361175,-3.979116,-1.015700,4.999401,1.034999,8.865884,-6.618625,-3.832379,-0.440405,-3.387033,6.687208,-0.140327,-5.663407,5.057165,-2.142902,9.908256,5.578479,7.603041,-7.041040,7.533804,-3.272916,3.459099,-5.629096,3.535949,6.147103,-1.180054,8.862925,8.412828,3.779178,1.296696,4.915263,6.929571,2.393575,-7.028019,7.979247,7.229500,-8.971068,0.652111,7.332748,2.119902,-7.495820,7.746985,-7.766998,0.817024,-8.258411,2.749752,7.893085,-5.398487,-7.957170,6.163429,5.201414,4.770221,6.992171,-3.443989,4.353735,4.532322,-2.407990,0.414522,0.372133,-1.409518,1.107015,-4.589004,-0.464344,4.097579,3.431379,-1.381436,-1.843075,5.150122,-4.652843,-8.988860,8.248472,0.739489,-3.296489,5.753730,-4.476365,0.555145,6.018652,-7.175036,5.385633,-7.910492,-5.574406,8.193155,-4.545604,7.593054,-7.784652,-6.197930,0.847002,7.764029,-7.125093,-9.712549,-0.922222,8.267872,3.220900,1.952223,8.276632,8.770026,5.756331,-5.043406,8.458968,-1.516010,0.057037,-1.583331,8.845283,0.773564,-5.324606,-6.933486,6.879543,-5.293637,5.006158,7.146797,-7.130705,1.517100,4.163372,0.153928,2.562617,6.181336,6.752473,4.632135,3.511236,-3.011029,-3.400367,2.342431,-1.230022,-2.392070,5.615979,7.402088,2.934926,5.330487,-5.947843,7.169978,7.392587,9.098298,-6.334782,3.335793,7.199543,6.612917,-2.079243,6.977641,7.318313,-2.897360,-7.588321,-8.076520,-1.579448,-4.843993,-0.447102,-8.140391,-9.402677,-1.336121,5.563458,7.445895,-7.355718,-4.498150,9.205641,0.170805,-6.188125,5.452557,3.285296,-6.878106,-4.685248,7.965584,-9.437916,-7.285893,0.086996,-0.204968,-4.241792,8.572310,-2.460320,7.974714,2.490826,-7.252724,-0.662202,-4.536164,1.437380,-5.110124,-3.018097,5.949953,6.848581,3.212488,-9.945051,1.964403,4.865447,0.366420,0.590450,1.329817,-9.261238,-8.942744,-2.839837,-1.884700,5.126192,3.084798,-7.521890,-9.689448,-5.134544,-6.297398,0.755782,9.780762,-0.300352,6.088959,7.976614,8.716026,-2.782738,-1.581278,-2.221196,2.171396,4.349404,4.189028,1.885114,-8.328953,-6.079419,-0.334109,-3.562201,-6.687459,1.078135,-0.728915,6.256832,-4.259445,9.398213,-3.258976,0.305111,7.379687,-6.911654,6.924037,9.104097,2.171280,-4.483865,8.952011,4.769652,-3.367393,6.090690,6.574331,-1.018089,4.983171,-3.046521,3.932710,5.914813,2.290122,-3.429245,3.510494,-1.033681,2.870058,-8.911325,4.649061,-1.379165,-5.017626,0.434311,-4.954597,3.628120,5.807690,5.036111,-7.923445,-0.282058,-5.975571,-1.822374,-6.822959,-3.288628,9.374713,-1.640585,-6.862679,-6.549858,3.742844,-6.338621,5.415529,4.381319,-6.495016,-6.621142,0.941369,-2.773009,1.916595,5.491424,5.845339,8.602141,-7.854963,5.109179,-2.734968,-9.714424,7.107024,-2.929083,-9.111677,-7.892501,-0.131613,9.570443,8.116208,-2.528335,-4.678893,-3.133792,2.015443,5.457939,4.185854,3.333824,-0.517700,5.995596,-2.586964,8.602316,3.685738,4.344969,-4.503888,6.707871,-2.471856,-1.388813,4.634745,-5.614512,-4.779315,8.234447,4.006709,0.078428,-9.232517,7.534686,-6.544801,3.988187,-6.437321,-8.202868,-6.762169,-1.423581,9.794503,6.812179,0.867844,8.587052,9.201802,-0.165085,4.429368,9.413259,-6.586203,0.680651,4.848337,1.957993,6.383927,-6.305378,7.292121,8.462333,4.201371,-2.273034,-9.031342,-8.329541,-2.872701,-3.506598,-7.919815,8.107355,1.496964,-8.116124,7.639848,-4.498492,7.094547,-1.943865,-4.800300,9.280697,2.228959,-4.070711,3.687270,9.528615,2.075337,-0.945588,4.673555,2.314254,-4.624257,0.570707,6.681606,-9.667455,-5.261947,5.575631,-6.943460,-5.622774,-8.171245,-4.235546,2.571341,6.248649,0.801182,2.554753,3.428023,6.303357,-6.437622,-5.546339,1.111770,-6.148776,4.557915,-9.520732,-7.972374,7.688282,5.968992,-4.855798,-3.632655,-1.197827,8.146292,-3.798828,-9.863868,-7.365951,2.678232,-2.951897,-4.480170,-1.955905,-2.539928,2.620640,-5.436470,-9.214889,-2.284660,-0.712153,-6.628935,9.090194,-5.803076,9.313073,6.316892,6.948795,-2.899774,2.602005,-2.607343,-3.972845,-4.323611,1.117007,5.224091,6.600738,7.622153,-3.479126,-3.281022,8.565933,8.314292,8.305476,4.825934,8.788849,-2.907004,-0.706423,1.130528,2.146795,-7.741842,-6.782926,-9.272281,-7.114195,8.451069,-2.221448,-9.305343,3.347455,-0.566758,-3.947216,1.678177,3.482053,8.591731,3.406626,-3.530908,-5.676860,5.259335,-8.786209,-0.894159,9.108065,5.202119,1.913079,-3.948268,-7.626568,6.565541,-3.196365,-3.928308,-9.446090,7.681166,-4.526395,5.460474,-6.611299,5.876022,-3.630565,8.686036,-0.719736,9.012681,-6.956335,-2.753504,-3.608215,-4.315954,-6.311460,-1.631046,-3.120500,-7.498683,-6.710998,9.587182,2.561686,6.933976,6.888613,8.592530,-9.827212,3.617676,-1.875017,7.313336,-7.058801,9.695990], dtype = "float32")#candidate|1874|(3360,)|const|float32
call_1873 = func_1634_call(relay.reshape(const_1874.astype('float32'), [14, 16, 15]))
call_1875 = func_1634_call(relay.reshape(const_1874.astype('float32'), [14, 16, 15]))
bop_1889 = relay.greater_equal(call_1873.astype('bool'), relay.reshape(const_1874.astype('bool'), relay.shape_of(call_1873))) # shape=(14, 16, 15)
bop_1892 = relay.greater_equal(call_1875.astype('bool'), relay.reshape(const_1874.astype('bool'), relay.shape_of(call_1875))) # shape=(14, 16, 15)
func_1210_call = mod.get_global_var('func_1210')
func_1211_call = mutated_mod.get_global_var('func_1211')
call_1915 = relay.TupleGetItem(func_1210_call(), 2)
call_1916 = relay.TupleGetItem(func_1211_call(), 2)
output = relay.Tuple([call_1862,bop_1889,call_1915,])
output2 = relay.Tuple([call_1863,bop_1892,call_1916,])
func_1930 = relay.Function([], output)
mod['func_1930'] = func_1930
mod = relay.transform.InferType()(mod)
mutated_mod['func_1930'] = func_1930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1930_call = mutated_mod.get_global_var('func_1930')
call_1931 = func_1930_call()
output = call_1931
func_1932 = relay.Function([], output)
mutated_mod['func_1932'] = func_1932
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1975 = relay.const([[[1.975906,5.950116,4.185228,1.810205,2.053524,-5.820610,-4.151813,-6.129932,-5.606193,5.473939,-3.394186],[6.187768,-8.884677,-0.316567,0.467568,-1.917540,5.722504,8.942933,-0.617002,7.626584,8.109268,-4.716227],[2.282048,1.882913,1.944407,-1.695197,-7.326239,3.302022,-1.866718,3.379677,9.625111,-3.210286,4.854128],[8.554043,2.095394,9.415673,9.595746,-3.316138,-6.175206,-6.769654,-0.429130,4.841611,3.068470,7.754881],[0.332182,8.713258,-9.911376,4.514080,-2.721018,3.040888,8.487820,-4.509717,-9.015828,7.890111,-6.856847],[2.419015,-7.560451,1.082516,3.322027,3.272038,9.389327,-8.479687,8.971186,7.043509,-8.857455,1.002620],[-1.821616,-3.510503,-7.057206,7.499162,-3.667779,1.744130,-3.643381,-5.604621,0.156148,-7.824910,-7.047074],[-4.819309,-5.729109,7.973173,-0.412140,-2.331663,-3.897671,1.637645,-3.744517,7.978620,9.297661,1.741697],[-2.157421,-1.607073,5.852249,-2.374445,8.414406,6.964066,0.239420,-1.585570,0.234171,-6.601165,-0.937982]],[[-3.239112,-4.682370,7.639565,-4.704777,8.959564,-1.980528,-0.737883,-1.128805,0.816249,7.090814,8.146095],[-1.641994,-5.514444,-4.536458,5.092092,2.705066,6.002143,-6.154997,7.725775,4.121619,4.194056,-3.586386],[-3.123467,-4.405711,-3.562570,-0.065590,-3.857630,-6.702592,2.986012,1.096238,1.916343,-3.995988,9.426504],[8.774422,-0.836824,3.856928,-8.906236,0.316648,0.292341,-5.624120,-6.481222,7.017425,5.395037,7.039170],[8.061965,-5.228551,9.382134,8.962614,2.932932,-6.483134,-2.892537,5.370517,6.263215,4.572191,-1.067738],[0.839839,-2.983033,-9.968699,-2.381923,-4.599394,-7.017074,-6.290865,-5.862129,-7.677695,-0.808520,4.827558],[3.899357,3.896324,5.370870,6.334843,-3.738041,-9.239384,0.782130,4.305243,8.615119,6.602420,-8.705502],[5.814387,-7.695714,-3.931214,-0.985614,8.988294,-2.045630,5.436556,9.702818,7.204308,8.594306,-1.872993],[-5.095727,-3.541280,-1.764182,-5.525952,8.365063,5.700894,8.254796,-3.185849,3.706352,3.674596,-7.251534]],[[3.325890,2.720015,6.130641,7.219102,-7.627604,7.516337,2.266146,-7.062225,-4.090380,7.438516,7.151084],[3.334452,1.172374,7.199394,-8.054708,7.913021,1.728139,9.893214,4.691741,9.309416,-1.160483,-2.260758],[-9.658684,7.677371,-8.693156,-5.290060,-0.756218,4.868958,-6.930010,-3.865940,-4.041393,-0.581282,2.525580],[-8.840451,-5.522394,-6.843744,2.173028,-0.606228,4.975916,-5.513954,0.593746,-2.680499,5.104138,1.927325],[-3.471225,-5.650318,7.128331,7.589301,-4.568202,4.788506,7.434757,-9.474982,-2.317337,-8.816031,-0.046169],[0.231308,8.374414,9.392973,6.227043,-0.921150,8.693819,-6.974704,1.586832,4.225181,8.101356,5.357123],[-3.114988,7.171154,-1.161325,-9.397896,5.803890,-5.691096,0.475078,1.829385,-3.659058,2.981040,-7.235790],[-5.923601,2.783632,-9.277629,-7.147830,8.510829,6.364978,5.914621,-6.621142,-4.329723,5.976912,-9.062310],[5.653929,8.816152,3.351461,3.466540,-4.365660,3.471365,6.258599,7.344497,5.682675,-6.965042,0.962191]],[[9.576144,6.215467,1.926833,-0.448776,-4.408221,3.286437,-4.527253,-3.707663,4.318768,8.594655,-4.024064],[-8.770497,2.237996,-9.314897,-6.998697,4.431260,0.654471,2.344142,-2.284945,-5.284994,8.811208,-1.095997],[-0.245489,9.630329,-6.385717,-7.817355,3.330414,-2.386760,3.143087,-6.380940,-8.995892,5.638812,9.582612],[3.862412,-5.678367,-8.902481,9.332408,7.258942,7.382487,4.379279,-7.992470,-9.674834,-2.760074,-9.307295],[5.128696,8.711473,-0.121261,5.504178,-2.342185,7.178492,-5.963052,-5.054937,0.629003,1.036114,4.187996],[-7.526527,-2.133083,7.992093,9.593342,-7.512595,3.867533,-3.981429,-1.531881,0.394756,-5.914895,-1.825043],[-1.453428,2.984261,-7.002004,-5.734550,4.111319,9.837702,5.338503,9.532859,-4.553540,1.354003,9.123272],[-3.202538,7.533727,-1.937315,-1.919952,-7.997372,-0.974925,-3.634881,-8.223588,-4.248775,9.993048,8.375676],[-1.882279,2.559107,0.400191,-4.437335,6.661090,-0.224762,-6.651685,-7.808866,2.398053,6.519535,-1.349236]],[[8.182489,-3.161862,0.871771,2.945074,-5.824763,5.691425,3.150579,-7.156205,9.796973,-9.918810,-1.865628],[6.237869,8.357178,1.646916,-2.996593,9.451423,-9.835178,1.783432,1.964887,8.175946,-7.811580,-8.623133],[9.285136,-5.605810,-4.083731,-2.888915,5.651070,9.145578,5.762644,-3.837645,3.628986,5.460263,9.240310],[4.934601,8.994222,6.888146,3.755725,8.959664,-1.941448,7.035439,-0.122199,-8.660221,8.010465,3.973012],[-8.164957,-9.946101,0.279882,-3.966050,-5.913533,2.143832,-1.955898,-7.569021,-2.061976,-1.909228,4.002144],[7.594956,5.118418,5.732506,-6.647218,4.845939,-7.235040,-5.670753,4.383139,3.135818,-8.839008,-3.839583],[8.752792,-0.121103,-7.388769,-3.039054,-5.818801,-4.718025,3.690229,3.774270,-3.651138,2.921775,-3.573914],[-8.000674,-3.075887,-5.781029,-9.744573,7.398213,6.802189,-6.223302,-2.335172,6.818326,-7.959251,-3.313657],[3.331758,2.285139,4.871688,6.427557,-0.860795,6.172000,6.910544,6.581052,-9.121482,6.080223,-2.477290]],[[-8.607146,-0.308886,-2.020681,5.014394,3.277727,-9.725693,-2.831516,7.125167,6.126246,1.040748,-1.491730],[-9.618359,-0.192839,-0.230355,-0.273754,1.910040,6.667130,-1.069088,9.426416,-1.200455,8.198577,6.582998],[-2.979913,9.346522,1.311123,2.325012,5.243205,2.159190,-2.840452,6.747618,6.774251,2.179191,-7.647199],[-0.944927,9.484867,-2.046005,5.442929,-7.759040,-9.873496,5.555189,-7.577161,8.709521,9.668594,-2.729472],[-5.392771,-1.083691,-4.412740,-4.711996,-5.571121,-0.304890,-6.233334,-9.881342,9.007621,9.321060,-6.963201],[2.908720,5.079350,-5.856204,3.606175,9.708143,-6.480833,9.622735,2.194541,2.834531,-5.326250,-7.840469],[4.529751,-9.269896,0.158278,-1.883733,7.736702,9.464569,7.802942,3.829854,-6.826085,-0.397936,-2.371960],[2.633840,-4.453618,0.362367,1.017666,4.667474,-9.453607,2.682415,5.322177,9.876277,7.541361,-6.860855],[-4.929467,6.515402,-6.650250,4.073612,-9.701044,-3.858164,-6.428974,3.507525,3.359322,-8.543989,3.497004]],[[-6.307794,7.575381,5.124422,-0.878586,7.421802,3.900647,8.656640,5.830514,-6.307996,0.325194,-6.394860],[9.373589,5.948910,-4.726468,-7.408518,8.813652,-7.896321,2.697973,6.926475,3.658487,-6.511376,-8.365896],[-3.877737,4.186541,6.163738,-7.983918,-6.968634,6.905373,-1.378962,6.033837,2.943602,8.198778,6.593076],[1.169793,-1.032508,-8.564313,0.417959,-6.050351,-3.122714,5.173587,0.093280,6.896692,7.031127,9.105876],[-8.886526,-8.820274,-2.886892,7.363103,-9.506103,-2.190160,-9.879139,-7.466010,2.685259,2.703659,-1.655890],[2.500379,-2.699599,2.467906,-9.522514,-9.742447,5.982978,-0.108035,-8.354558,7.130268,8.085517,-7.555377],[-4.208997,7.351816,6.233059,8.732523,7.652635,0.040750,0.351530,0.652133,-2.365442,-0.674095,8.593314],[3.880660,8.521347,-4.815027,-6.104747,-3.556239,6.455426,6.637148,-2.932746,-3.503572,7.744540,-9.729095],[-0.959093,-3.580711,8.306789,-3.178089,-9.214822,-2.617873,7.023918,-3.818097,4.507586,-8.269729,-9.100245]],[[-7.686464,8.350543,8.580495,-9.560467,8.559239,4.772946,1.755228,9.961120,8.954170,1.378111,3.116788],[9.234127,6.979135,-8.526597,1.675788,4.700794,4.139771,5.586091,0.226805,-6.884664,-0.096839,6.996563],[-7.137869,-9.953376,-9.681265,-7.069884,-2.857863,6.197960,-6.345753,2.512904,-1.804395,4.033015,6.593567],[-9.634441,7.353199,-3.591074,9.289298,7.877243,-5.646053,3.058849,-3.499006,-7.033392,9.293555,-2.675639],[2.640999,-4.872412,-4.990097,7.611886,-8.387551,-7.826932,7.012407,5.875668,-6.358154,-5.727639,-4.483062],[6.694301,2.878389,7.707311,3.676753,3.598964,-9.864855,1.019071,5.940594,-8.682003,-5.272286,9.249381],[3.843524,-2.268935,-3.026295,-8.662567,8.184289,1.945582,5.252057,0.222272,-1.191692,8.945086,-7.995287],[7.475645,-3.588704,2.714279,-8.554122,-9.059655,-9.681109,-2.097559,1.804774,8.117686,-1.957897,-9.249869],[-8.883442,4.992575,-3.000241,8.178592,8.014254,-6.962402,-6.449862,-1.144459,2.965616,6.811643,-4.728010]],[[-8.107119,-8.158313,-9.668419,-3.555034,2.565632,-8.985956,7.574575,8.539624,-9.162755,8.664208,-5.299508],[-7.829135,-2.196378,2.704160,5.152467,7.672929,-7.474379,-6.565827,1.304766,8.457047,1.111715,2.115610],[-3.028891,7.251078,2.412313,1.570486,-6.949651,-9.495169,7.236335,-2.006550,6.682434,-9.640296,-8.601030],[-6.297943,8.556908,-9.132689,-9.240423,4.005826,-7.275626,9.526896,5.918373,-0.854066,-0.521001,5.247800],[-0.600828,8.994403,8.346310,3.879501,-6.750636,1.909483,4.261122,-3.851545,2.222657,-7.282133,-6.658758],[0.283339,6.373943,0.768947,0.140547,2.255717,6.803788,8.089549,3.862856,-8.858589,9.634526,5.010607],[8.173583,-5.960555,-0.940040,-9.591887,-8.906256,-9.635146,0.235203,7.656259,-2.669320,7.226592,3.131729],[9.026997,9.046976,-2.275223,2.453586,-1.211172,3.559107,-1.921318,1.094000,-1.110623,-4.412863,1.457350],[7.895702,-3.648874,-7.511967,5.981326,2.724529,-7.312812,-5.156803,6.763437,-9.578529,-3.963960,-7.992613]],[[8.591292,6.174318,0.882692,6.799578,-2.169100,5.537433,-9.655244,-1.065471,-4.416341,-4.071952,-7.497496],[5.071569,5.348328,3.963422,-9.301803,-6.678871,-9.420503,4.468215,9.229647,-2.193443,4.223149,7.205210],[5.436987,8.516364,8.802135,-7.036421,-8.221163,3.443296,-4.385644,4.312920,-5.138926,-2.036365,-9.020601],[-5.956722,-3.142028,4.070991,-8.513592,-2.293510,-3.291983,0.744321,0.852750,4.425347,-4.593593,4.146472],[-5.705808,9.401037,-3.572183,1.063102,9.822277,6.410884,-3.269671,-5.722576,2.481805,8.035938,-9.470342],[6.331518,-5.187542,-4.933834,4.870473,8.689701,-4.594548,-2.227314,9.240604,5.162663,5.839798,-5.890956],[8.068624,-1.819185,2.404846,-9.803948,2.945435,-1.007599,3.833963,-1.752567,-6.173385,-8.821521,-3.461509],[-9.540446,-0.200218,-6.306765,-4.727396,4.840633,5.479092,-6.987787,3.907546,6.011809,-7.306513,8.512949],[-2.579684,-2.414336,3.614658,0.011596,9.796350,9.875366,-1.266755,0.973518,6.292333,-3.548085,-9.284046]],[[8.401648,-3.538367,-0.488542,-1.216624,-7.200664,0.859107,-5.687298,4.058352,-1.174365,0.737166,-3.582220],[-9.894312,-0.116420,-6.106671,-8.851543,9.175620,8.675769,-3.103842,-7.857186,4.531951,3.654913,4.190791],[7.839225,-5.598862,5.377525,-9.629517,7.408692,1.392395,-3.677913,-3.128681,-5.947613,-4.405418,5.061997],[-1.778883,-9.681403,-3.283020,-3.146498,9.819661,-3.124136,-8.725965,2.196157,5.619220,2.392727,-3.005401],[2.731492,-2.074484,-0.928898,7.237856,-2.675911,0.152567,0.248643,-7.311687,1.980822,4.651216,5.812602],[1.696916,-2.932912,6.222886,7.645778,3.635049,3.931470,-7.254870,1.266778,3.195472,4.749538,-8.722702],[3.350648,9.986285,-2.075073,-8.649414,-5.001728,-3.240081,1.059447,-9.116176,8.987667,9.429858,2.085609],[-5.604697,9.887387,-8.585190,-0.107482,4.974303,-7.538613,-6.199357,6.162772,-5.824820,-3.445523,4.299023],[1.287630,-8.065378,1.939625,1.575567,3.588727,6.141627,8.018033,-4.815429,-1.423053,0.753263,-2.200063]],[[6.767942,7.797693,4.725197,-6.628908,3.059602,-9.644469,-7.157143,3.331803,-6.773450,3.952040,3.017135],[-9.191402,-0.803062,9.544831,4.567644,3.149828,2.514473,-9.996875,-8.869546,4.390008,-2.385731,1.486617],[-7.613341,-3.548078,-3.089730,-0.075523,6.023542,6.456346,-9.489422,2.114726,-0.559727,-6.223659,4.536949],[-5.932500,-7.349393,4.553302,1.810870,8.157099,5.068127,-3.584000,-5.141296,9.907836,2.129938,3.621158],[6.406644,0.894277,-0.573894,-5.507978,9.327769,8.408724,-3.604808,-9.728870,-6.686646,7.119264,-4.307675],[7.115503,0.170893,-4.756444,3.737507,-6.206244,-1.768933,-0.538754,5.449670,3.181453,5.089754,-1.957795],[9.131560,4.528131,7.406300,-5.479559,-3.046349,-7.586223,-5.198720,4.338011,-4.432768,7.725581,2.006153],[1.197259,-4.242058,4.957600,-2.877480,8.925014,1.240769,1.595949,-6.084287,-7.663412,6.324177,-9.724702],[7.499353,4.855802,7.089808,-1.484736,-9.314410,7.359795,-4.503984,-4.223544,8.922915,6.351941,-2.607885]],[[8.774963,-6.565919,4.362013,-1.798138,9.929212,7.416304,7.545191,8.084492,-2.260304,-2.429368,-3.127555],[-9.439650,7.775931,8.734165,-1.914290,4.082132,-2.418263,4.351495,4.672831,8.643078,6.349991,4.671413],[9.811854,0.124360,-3.125254,5.232754,-7.925190,9.603128,1.621188,-7.425433,-1.659680,1.189545,6.649392],[-5.205438,-1.973393,-7.392848,3.612857,6.405004,-4.860013,-8.977507,-0.894748,-1.673608,2.350318,-0.026832],[-2.810967,8.007149,-3.855335,4.825086,8.441500,-6.318651,8.352266,-6.574287,-8.349528,3.594626,-2.747591],[3.389201,3.239069,3.127942,1.481882,-6.147082,1.748543,-0.229540,-0.210492,1.436087,7.339763,-7.351600],[-3.240601,8.784725,-8.516909,-2.770328,-2.349013,0.934701,9.348084,6.368083,-3.944095,-9.416942,9.226800],[6.955044,-2.768158,7.864256,-9.155818,-8.012506,-0.949904,3.073402,-5.792325,0.948520,9.126025,-2.112666],[-6.068269,0.183939,8.334779,-2.146538,-5.424373,3.089390,-4.536709,-8.847726,-4.373699,-0.019615,2.989646]],[[0.597895,4.543642,-6.709770,5.644444,3.855015,-4.597209,-9.197309,-7.610485,-4.016140,-7.341790,3.162333],[9.380085,1.366405,-4.837878,-1.402735,5.967661,8.797150,8.946927,9.798541,-6.308973,-5.903755,0.996503],[1.844082,7.011081,-8.867757,5.754850,-6.453319,5.008298,-3.120193,9.704398,1.604771,-0.859979,8.642485],[4.347374,-3.047715,9.488761,-6.923339,4.428366,-8.179748,-7.527163,-8.481108,-9.591929,-8.170085,-2.278027],[4.097550,6.655317,-5.251700,0.695443,2.947048,-6.451722,1.143291,-2.280044,-9.828875,6.119773,-6.666512],[8.697632,1.615218,-1.189965,9.952208,-3.252905,-9.143811,-7.054091,7.321474,4.249423,-2.135380,-0.596650],[7.042469,0.771239,-8.559830,8.041539,-2.553931,4.626499,-7.284475,2.757904,-8.370670,5.161515,-4.716014],[9.069971,0.043969,-4.650618,-4.737478,9.221881,-7.401494,8.541233,9.116805,2.047430,9.384104,0.890212],[-2.310218,8.279270,-7.250389,-1.038771,-8.498115,-0.023425,-2.224750,2.713084,9.782172,-5.971238,-5.012133]],[[-0.302468,-8.975395,2.633412,-7.643759,-4.976329,-2.060909,7.455385,-5.572648,4.988976,6.038551,-5.663528],[-2.999253,-5.925462,9.742083,9.859342,-2.415126,8.476067,-8.246494,-6.633003,-8.087392,2.559329,3.173304],[2.901911,-8.053172,-0.166920,6.575764,6.108718,0.808716,9.670673,8.186118,-9.138811,8.508790,-5.963538],[-1.375390,-4.653147,8.759084,9.561689,4.041807,-5.783531,9.891221,4.674133,-7.255485,9.045389,1.558098],[-4.989749,8.631478,-5.867151,-7.746041,-3.666459,-0.508727,7.239076,9.717918,-5.051369,-8.992178,-8.743636],[3.783947,-7.426234,9.210025,3.367110,-4.964691,1.695053,-9.583442,-6.707488,-6.971012,-9.103820,-9.980770],[7.118470,-5.573528,-9.628665,-8.334043,1.362717,-3.755246,3.219460,8.544645,-7.705573,-5.445903,0.263385],[-7.770779,-7.508682,6.094022,1.691652,-0.646085,6.140955,-7.521455,7.405831,-3.763625,-7.945519,-7.074830],[-2.365491,2.424696,-8.843490,-4.369895,-2.184425,9.307872,-3.217281,6.380615,-5.323070,-6.955101,6.483472]]], dtype = "float32")#candidate|1975|(15, 9, 11)|const|float32
uop_1976 = relay.log10(const_1975.astype('float32')) # shape=(15, 9, 11)
output = relay.Tuple([uop_1976,])
output2 = relay.Tuple([uop_1976,])
func_1997 = relay.Function([], output)
mod['func_1997'] = func_1997
mod = relay.transform.InferType()(mod)
output = func_1997()
func_1998 = relay.Function([], output)
mutated_mod['func_1998'] = func_1998
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2125 = relay.const([[[-4,-10,5,-8,7],[6,10,2,-1,9]],[[7,-1,6,-1,10],[6,-6,10,8,-2]],[[5,-7,-10,-9,9],[8,-3,-8,-2,3]],[[5,-9,-6,4,7],[9,6,9,4,-6]],[[7,1,-2,-10,8],[-10,1,-5,8,-2]],[[-5,-9,6,4,7],[5,5,5,-6,4]],[[8,-8,3,7,1],[8,-2,-5,-4,-10]],[[-1,4,-2,-3,-6],[2,-1,3,4,-5]],[[1,10,-10,-6,8],[-5,3,-6,2,1]],[[8,-10,-6,3,6],[6,3,3,-5,-10]]], dtype = "uint64")#candidate|2125|(10, 2, 5)|const|uint64
var_2126 = relay.var("var_2126", dtype = "uint64", shape = (10, 2, 5))#candidate|2126|(10, 2, 5)|var|uint64
bop_2127 = relay.maximum(const_2125.astype('uint64'), relay.reshape(var_2126.astype('uint64'), relay.shape_of(const_2125))) # shape=(10, 2, 5)
func_1478_call = mod.get_global_var('func_1478')
func_1480_call = mutated_mod.get_global_var('func_1480')
call_2133 = func_1478_call()
call_2134 = func_1478_call()
output = relay.Tuple([bop_2127,call_2133,])
output2 = relay.Tuple([bop_2127,call_2134,])
func_2137 = relay.Function([var_2126,], output)
mod['func_2137'] = func_2137
mod = relay.transform.InferType()(mod)
var_2138 = relay.var("var_2138", dtype = "uint64", shape = (10, 2, 5))#candidate|2138|(10, 2, 5)|var|uint64
output = func_2137(var_2138)
func_2139 = relay.Function([var_2138], output)
mutated_mod['func_2139'] = func_2139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1678_call = mod.get_global_var('func_1678')
func_1679_call = mutated_mod.get_global_var('func_1679')
call_2141 = relay.TupleGetItem(func_1678_call(), 0)
call_2142 = relay.TupleGetItem(func_1679_call(), 0)
const_2145 = relay.const([False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,False,False], dtype = "bool")#candidate|2145|(1600,)|const|bool
bop_2146 = relay.floor_mod(call_2141.astype('float32'), relay.reshape(const_2145.astype('float32'), relay.shape_of(call_2141))) # shape=(1600,)
bop_2149 = relay.floor_mod(call_2142.astype('float32'), relay.reshape(const_2145.astype('float32'), relay.shape_of(call_2142))) # shape=(1600,)
output = bop_2146
output2 = bop_2149
func_2152 = relay.Function([], output)
mod['func_2152'] = func_2152
mod = relay.transform.InferType()(mod)
mutated_mod['func_2152'] = func_2152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2152_call = mutated_mod.get_global_var('func_2152')
call_2153 = func_2152_call()
output = call_2153
func_2154 = relay.Function([], output)
mutated_mod['func_2154'] = func_2154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_2206 = relay.TupleGetItem(func_775_call(), 3)
call_2207 = relay.TupleGetItem(func_776_call(), 3)
uop_2221 = relay.sinh(call_2206.astype('float64')) # shape=(1001,)
uop_2223 = relay.sinh(call_2207.astype('float64')) # shape=(1001,)
uop_2229 = relay.asin(uop_2221.astype('float64')) # shape=(1001,)
uop_2231 = relay.asin(uop_2223.astype('float64')) # shape=(1001,)
bop_2237 = relay.floor_mod(uop_2229.astype('float32'), relay.reshape(uop_2221.astype('float32'), relay.shape_of(uop_2229))) # shape=(1001,)
bop_2240 = relay.floor_mod(uop_2231.astype('float32'), relay.reshape(uop_2223.astype('float32'), relay.shape_of(uop_2231))) # shape=(1001,)
output = relay.Tuple([bop_2237,])
output2 = relay.Tuple([bop_2240,])
func_2250 = relay.Function([], output)
mod['func_2250'] = func_2250
mod = relay.transform.InferType()(mod)
mutated_mod['func_2250'] = func_2250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2250_call = mutated_mod.get_global_var('func_2250')
call_2251 = func_2250_call()
output = call_2251
func_2252 = relay.Function([], output)
mutated_mod['func_2252'] = func_2252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2293 = relay.var("var_2293", dtype = "uint16", shape = (14, 16, 16))#candidate|2293|(14, 16, 16)|var|uint16
const_2294 = relay.const([[[2,6,-10,5,2,-9,-7,-9,-6,-1,-4,-6,1,-10,-1,-10],[-2,2,-7,-5,-3,9,-9,-10,-1,-10,3,-8,4,-7,4,9],[4,-1,-10,-1,3,10,2,-6,1,8,2,10,3,-4,-5,-4],[-6,-1,1,7,5,3,9,8,5,-4,1,4,1,10,1,-4],[-7,3,-6,10,-10,-7,-2,7,-3,4,-6,8,6,-1,10,-4],[-10,-4,7,-10,-7,-6,-3,6,-5,-10,9,-8,5,-2,7,-3],[4,5,-1,10,3,-9,-10,-2,5,6,1,-1,-3,1,-2,9],[2,-9,9,5,7,8,-10,2,4,3,2,-2,-8,7,9,-6],[-9,8,-6,2,8,9,-4,-5,-9,-4,10,-7,10,8,9,-10],[1,-8,10,8,-2,6,-8,-4,9,9,5,10,2,-5,-4,-9],[3,-9,7,-3,-6,5,-9,-2,-9,10,9,-9,7,-1,-9,3],[-8,-6,-2,4,-7,-4,9,5,-9,4,-4,-10,-9,4,-1,-1],[-1,-4,6,-3,-8,-9,4,-7,-10,2,5,9,-3,3,9,-1],[-1,-7,4,9,-6,-10,-6,-5,9,-2,-9,10,3,-6,-7,5],[3,-6,2,8,6,10,5,8,-3,2,-3,-6,8,-1,10,-5],[-7,-7,-6,9,-2,-4,6,-5,-6,5,-1,-6,-2,4,-2,-2]],[[-9,10,-5,-7,-1,6,-7,-8,-7,-2,3,-5,-6,6,9,-9],[-8,-4,-9,2,6,-7,6,-5,10,1,-7,8,-7,-3,4,-7],[-10,-7,-5,-9,6,3,-3,7,8,-9,-4,10,3,2,-3,2],[-1,2,-8,9,7,6,-2,5,8,-7,-1,6,10,3,-8,-9],[-4,6,-10,-5,-9,-8,3,1,7,6,4,-4,-1,-10,-2,9],[-7,-7,2,-7,5,9,1,1,-7,8,10,-6,10,1,4,-9],[7,-10,-2,-9,2,-4,8,-3,-2,-6,4,5,-9,-10,-8,-4],[7,-5,10,-3,-2,7,2,-4,-10,7,6,10,8,-6,6,-3],[-3,1,2,6,-1,-3,1,-7,10,5,-4,9,2,2,7,-3],[6,2,10,-2,-10,-5,-2,2,-4,8,-1,-4,4,2,-1,-10],[1,-5,-1,-3,9,2,8,-3,-2,-4,8,9,-2,-3,-8,-2],[-6,-9,3,8,7,5,-5,-2,9,-1,4,9,10,2,9,-6],[-10,-2,6,5,7,3,-6,10,-10,2,-2,1,7,10,7,8],[3,-8,-9,6,-3,-7,-3,6,-9,-1,-3,1,-8,-5,10,-10],[-5,-4,3,10,1,7,-6,9,-5,-4,-3,-8,9,5,9,4],[6,-8,-10,-5,8,4,8,7,4,-10,8,9,3,9,-9,-6]],[[1,-4,-2,1,-4,2,-8,3,-2,-10,-3,2,-1,6,1,7],[-5,4,-9,-9,-10,4,2,10,10,-8,7,7,-10,1,4,-5],[6,-10,4,9,10,10,9,-10,9,2,-10,7,-1,-1,-4,-7],[8,7,-5,-4,10,-9,-7,1,-8,4,-1,6,-9,8,5,-6],[-3,5,-1,-4,-6,-3,-3,8,5,-9,-5,8,-4,-7,-2,-4],[-8,-4,7,-4,-3,5,-1,-7,-5,5,-3,-3,-1,-10,5,-9],[-10,-6,1,1,4,7,-6,-4,-3,10,1,-7,-4,-5,-8,6],[7,8,-9,-1,-4,10,5,3,-10,7,6,4,-8,3,-5,-7],[-8,-2,3,-1,4,-9,5,8,-4,-9,-9,-4,-3,-7,5,-5],[-9,9,-2,1,2,-4,1,-4,-7,7,3,-4,-8,7,5,4],[8,-7,6,6,-9,6,-2,-7,3,-6,-3,5,1,5,-3,-1],[-4,3,8,1,10,9,10,-3,-10,-9,1,-4,-7,10,8,3],[2,6,-5,-9,-4,9,4,5,10,7,-10,-6,2,9,7,-3],[-9,-9,4,1,6,-10,-1,6,-10,5,-6,9,6,7,9,2],[-9,-2,1,-2,3,-9,8,-8,-8,10,-3,-1,4,-4,-8,-1],[-9,3,-6,9,7,-6,3,5,8,-5,-4,-9,4,1,2,-2]],[[-5,-3,8,-2,9,-3,-3,-4,-4,1,-7,8,6,5,3,10],[-2,1,-4,6,3,6,8,7,10,1,10,1,1,5,5,4],[-10,-7,7,8,5,-8,-3,-6,-4,-10,-10,-2,7,5,-3,-9],[-3,7,-4,-2,6,-1,-6,10,7,4,-1,6,-4,-1,-1,1],[-1,-4,3,3,5,-8,2,-10,-10,-6,-1,-2,-5,-5,7,10],[6,10,-9,9,-8,4,-7,-9,-9,1,-7,-8,-7,-1,-8,-10],[-5,2,-5,8,9,3,6,-4,-9,4,9,-10,-4,-1,-2,-7],[-3,-10,1,4,-10,6,1,1,-7,5,7,-10,-6,3,4,-4],[-10,-7,-4,1,-8,-10,-8,-8,-7,1,-8,-5,4,2,-10,4],[3,-1,4,3,-8,2,5,3,1,-6,-2,3,10,3,4,-10],[-1,-5,2,7,-10,-7,7,7,-1,10,3,-1,-1,-5,-4,-3],[7,-7,6,10,-3,3,7,9,-10,-5,-2,-7,3,-9,6,-9],[10,3,-2,-3,10,-4,-5,-6,1,9,-10,-8,8,-9,9,-9],[-7,-6,5,-1,-5,-1,7,-5,-1,-6,1,-5,1,-7,-3,1],[9,7,5,9,3,10,9,2,2,-2,-2,-3,-8,-5,-7,1],[4,-1,7,10,-2,-2,8,1,-10,10,-8,6,5,9,8,9]],[[-9,2,2,8,2,5,3,-7,-10,6,-2,-8,-6,9,8,-7],[-8,-4,8,-4,-3,-10,6,-9,4,4,10,5,8,1,1,4],[-4,2,4,4,-5,-4,-2,7,10,6,-5,7,4,-1,3,-8],[8,3,-6,-7,-3,-3,-4,3,-4,-6,-9,-4,1,1,3,-5],[7,-10,6,5,-10,4,-9,-2,7,3,10,-10,3,7,9,4],[9,-1,5,4,-4,-1,-7,-9,-10,-10,-8,-3,2,-6,1,8],[-7,-7,-5,-10,-9,-6,-6,1,-5,-8,1,-5,-1,-1,2,4],[-8,-2,10,-6,4,7,4,6,9,4,5,-3,10,-9,-5,2],[2,10,7,-4,5,3,-1,9,-2,2,-2,-4,-8,7,-5,-9],[-4,-2,-5,3,8,-9,4,-9,-1,-4,5,-7,10,-8,-2,6],[8,-8,2,2,9,9,9,10,8,-7,1,-5,8,7,-2,8],[9,-2,-1,-3,6,-6,9,-9,9,7,9,-2,-7,9,-2,-1],[6,3,10,10,9,2,-1,2,-4,1,-3,10,-1,-3,-7,5],[-10,1,-6,9,-6,-3,2,10,-6,-1,5,1,2,1,8,3],[6,-9,6,8,-9,-2,8,-6,4,-1,1,-8,-4,2,-7,-10],[-2,5,-9,1,-6,8,4,6,3,10,-1,-9,-9,9,-8,7]],[[1,8,-7,-5,-2,8,-9,6,4,-8,-6,2,-7,-9,1,5],[-10,-2,-9,-1,-2,-7,-3,-2,2,-4,4,4,-8,-6,-1,-10],[1,-7,1,-3,4,3,-6,-4,7,-7,-3,-4,-3,9,1,-4],[-3,5,8,-6,-8,10,6,-2,-4,-5,9,-8,-8,-6,-8,3],[1,7,4,4,4,7,9,-2,8,2,7,-10,10,-5,-8,2],[-4,3,-2,-3,-10,-4,-10,4,6,-5,-9,-7,3,-7,-10,-4],[-8,4,3,-4,-8,2,9,-7,-5,7,9,4,7,5,-2,2],[8,-10,5,-4,6,-2,3,1,2,-5,-3,-3,10,-6,10,4],[5,-9,-10,3,10,-1,5,-2,-10,-9,5,3,-3,10,8,3],[10,2,-6,7,2,-10,2,5,-10,4,8,3,-6,-7,8,8],[4,7,-4,-6,2,3,-10,5,5,-5,9,-8,-10,-1,-7,-6],[8,-10,10,9,4,6,-2,-3,-2,-4,6,-8,-7,7,-6,2],[8,6,-2,2,9,-9,10,-8,10,-3,-3,5,10,1,-4,-9],[9,-2,2,-4,-3,10,6,-6,-1,5,10,2,-9,-5,10,-7],[1,7,-5,-4,7,-2,3,9,8,8,3,9,4,5,10,-2],[-5,-6,-1,1,-6,1,10,3,-6,-6,-10,-9,9,-10,-9,-1]],[[1,-7,10,2,-10,5,-5,-7,-9,7,10,-6,1,-9,8,7],[9,-4,9,-5,9,10,-8,2,-2,9,-7,2,-2,-2,-4,2],[10,-4,-3,7,-9,-5,-4,4,-10,-9,-7,6,-5,-10,7,2],[-9,6,5,6,-2,1,-10,3,10,-6,6,-6,2,10,9,5],[-8,2,6,-7,6,6,7,-5,-5,3,5,-2,7,-4,-4,6],[4,5,-3,10,-4,-9,-8,-7,-5,4,-10,-7,-10,5,2,6],[-9,-5,3,6,-2,8,7,-2,-6,4,-7,-4,2,1,-1,9],[5,-4,9,-6,3,2,-9,-6,-3,2,-1,-6,-8,-6,-1,-10],[-1,5,-6,-1,-6,1,-9,2,-9,-1,3,-3,2,1,-6,-10],[-9,7,9,-4,-2,2,-2,-1,-1,1,-10,4,-8,7,-9,-1],[3,2,7,-7,-1,-8,3,5,-4,7,-5,-7,-9,-6,-1,-7],[-4,-6,-6,-10,4,-3,-1,-1,7,10,3,4,4,-2,-9,-9],[9,6,10,4,3,-1,6,-1,3,4,1,-8,9,7,-9,1],[-4,5,10,-8,-7,-9,-2,-7,-2,-1,-10,-5,8,-7,2,7],[4,2,3,10,10,4,-2,8,-3,-6,-1,2,-6,-8,-8,4],[9,5,-7,-2,4,2,-7,9,-3,-3,-7,4,7,-2,7,4]],[[-6,-7,-3,2,5,3,-6,3,9,-4,4,-4,9,3,-3,-3],[-5,-4,7,8,-1,7,-5,-9,-8,-5,-10,-3,-6,-5,3,-10],[8,9,-9,9,-7,-7,7,-9,8,7,-4,7,7,8,1,8],[-9,5,1,-6,-10,-3,9,-2,-7,-5,1,8,3,8,2,-1],[3,9,-10,4,-9,7,-8,-7,9,-5,-1,6,9,-5,-2,-3],[4,10,-10,2,-3,9,7,8,7,6,-6,-1,-8,7,-5,-4],[-4,-3,-1,4,-5,5,1,9,5,-6,-10,6,-5,8,3,1],[8,-2,8,-1,10,-4,-9,1,-8,9,-3,-4,9,-10,-5,10],[2,10,-7,-2,1,10,-1,-6,-7,5,-1,10,-4,-10,3,2],[-1,7,5,7,-7,8,9,7,10,-7,4,8,-10,-4,-8,10],[1,1,7,4,6,-4,-5,-10,4,3,-5,-3,-9,9,5,1],[7,4,10,9,-9,1,-5,-8,-6,-4,-3,-5,-6,-2,-4,-7],[-2,4,-8,-8,-8,-2,9,2,2,-6,3,-9,-8,9,3,2],[8,9,-10,6,7,-3,-7,-10,10,-6,-7,-1,-4,-6,8,-4],[5,6,-10,5,10,4,10,-8,1,-3,-9,-5,7,-1,1,-3],[9,-2,-2,8,3,-9,7,-5,-1,9,5,2,5,-6,9,3]],[[-1,-6,-1,6,8,9,5,4,-4,-6,6,10,-1,8,-10,-7],[5,5,-10,2,-8,-3,-6,-9,-9,9,2,7,-6,5,-5,6],[-8,9,-3,7,-1,4,-7,-8,-5,2,-6,1,3,9,-10,1],[7,-7,-1,4,5,1,-1,10,6,5,2,-8,-6,4,-2,-6],[-5,1,-9,7,-5,8,7,-5,-10,7,-10,7,-1,-2,6,-4],[-10,4,-2,-5,-7,-4,-1,-9,9,2,-10,5,-10,4,2,-4],[3,-4,-8,1,-4,-2,-3,-5,-7,-2,-6,8,-4,1,-10,-10],[2,9,5,-7,-4,3,8,-10,6,1,10,7,4,10,2,9],[4,-6,-8,9,10,9,-3,-4,-2,-1,4,6,6,4,-6,4],[10,10,-10,2,-4,-1,-10,3,8,4,-4,2,6,7,-8,3],[-10,-8,3,-4,10,3,-8,2,2,10,8,-5,-7,-6,3,4],[2,6,1,4,5,3,-6,1,-3,-4,-4,-5,1,-7,1,-2],[5,-2,-7,-10,-4,6,-8,-7,-2,1,-10,-9,8,-7,-9,-5],[6,1,-2,8,3,-5,2,1,-1,-10,-9,-1,-6,7,9,10],[-9,-1,-1,8,-4,5,5,2,10,-8,-2,7,9,-3,-8,-6],[-3,10,7,-10,-3,6,4,-5,-9,-5,-1,-9,8,3,-7,5]],[[-7,6,4,-2,2,6,-6,-10,3,-4,-8,7,6,-2,-8,-5],[-3,-8,8,6,7,-5,3,6,1,-10,-4,6,8,5,6,-10],[4,6,7,-1,3,7,-3,10,4,4,-9,-10,-10,-3,-6,5],[-3,1,2,6,1,-1,-4,-6,-3,8,1,-10,-2,7,-8,-9],[3,2,-5,-3,2,9,-7,6,-7,3,-10,-9,8,4,8,8],[3,-9,10,5,7,10,8,3,8,-5,1,-3,-10,4,10,1],[3,4,-3,-5,-2,2,9,-7,-3,7,6,2,9,-4,-7,-4],[7,4,-6,10,-2,-8,-10,-1,-7,1,-10,-9,-9,6,10,-6],[8,8,-7,-2,3,-3,6,7,2,-5,1,9,-9,-5,7,-5],[-1,8,3,10,-9,8,7,-9,5,1,-9,5,-7,6,-6,-8],[-6,-7,-6,3,-2,-3,8,9,-5,9,-3,2,7,-4,1,-9],[8,-5,5,-2,-1,-7,6,-2,6,-6,6,-9,-8,-5,4,-7],[2,-9,-2,-3,7,-3,5,5,-5,-10,-1,-5,1,9,5,-8],[-9,-5,9,3,-9,-8,-10,-6,3,7,7,4,-1,1,-10,5],[7,10,8,-1,-10,1,-1,-8,-5,10,-6,-9,-1,2,-1,-1],[-7,-4,4,3,-4,5,-3,2,7,-9,-8,9,9,1,8,-10]],[[-4,-3,-2,4,3,3,-2,6,-5,-10,3,2,-1,-6,6,-8],[-2,9,-7,10,-10,-8,6,-2,8,5,3,7,-4,-5,-9,-1],[3,-5,-10,-2,7,-5,-5,5,-10,7,2,7,7,6,-4,6],[-4,-8,7,-7,2,-7,-2,10,-7,-5,-1,4,-6,-5,-7,6],[4,-6,-5,-5,-8,4,7,1,-1,4,1,-3,10,5,-10,9],[-4,5,1,-6,4,-8,-4,-6,5,10,-2,3,2,1,9,-6],[-8,-4,-2,-7,-2,7,4,-2,5,-5,6,9,5,10,2,9],[-6,7,3,4,1,-1,5,3,9,5,5,-5,-5,-6,-10,5],[6,-6,9,6,1,2,3,4,-5,-9,-4,-3,-9,6,-2,9],[-4,-10,-7,3,-2,-4,2,8,8,10,-2,-2,3,-4,8,6],[-10,-7,1,-5,-4,-9,-8,6,2,1,-2,-7,-9,-2,4,-1],[2,-1,7,-5,6,9,-9,-3,4,9,5,1,-6,-2,-10,-3],[2,-3,-10,10,-2,-4,-8,6,-1,10,-10,1,-5,-4,-10,5],[-3,-9,-9,-10,9,-6,1,1,-6,7,3,1,2,10,4,-4],[-8,-9,3,9,-5,1,6,5,4,-7,-1,4,4,7,-1,-5],[5,5,-7,-2,-7,8,6,5,-7,-8,3,-2,-5,-4,-2,-5]],[[-7,5,-3,6,-1,-5,-8,-8,7,3,-7,6,6,8,1,4],[-2,-1,9,8,10,8,6,-4,1,2,2,10,7,7,1,-3],[-2,9,2,1,1,-1,-5,-9,-2,-6,8,-4,4,-1,3,-8],[-10,8,4,-5,9,1,3,-2,-2,9,6,3,5,7,-1,4],[-3,3,-2,-2,6,-6,-5,4,-9,-9,6,-5,7,-8,-6,-10],[-5,-6,-3,9,-4,-10,7,8,5,-1,9,-2,7,-7,-2,-3],[1,-3,10,8,1,4,-10,-2,-10,-7,-10,-9,9,-1,2,6],[-3,-10,3,6,-3,-1,-3,-9,-7,-3,-5,3,8,-5,-8,-4],[1,4,9,9,-10,-7,3,-7,-2,7,-3,-1,2,9,-8,1],[-6,-5,-6,-1,5,1,-3,10,9,3,8,2,2,2,-6,-9],[-9,-1,9,3,-9,-5,3,8,-5,-5,-8,4,8,-2,-8,-9],[7,4,-2,-1,-3,3,-2,-9,3,9,-1,-1,-9,-5,4,-8],[6,7,10,8,6,1,-2,6,-4,-5,8,-4,-1,-5,-5,-7],[6,-8,4,10,-7,8,1,3,9,-2,7,5,7,2,5,-2],[3,-5,-5,-7,-8,-2,-8,-6,-6,-5,6,-1,-2,-6,2,5],[-9,-4,-9,-9,-7,6,7,-4,2,-3,1,-3,7,-7,-9,-8]],[[-7,3,5,-1,-2,-10,2,-1,7,-5,8,-9,-9,-7,1,7],[10,-3,3,-9,-2,-5,7,9,9,-2,3,-5,-10,-1,10,10],[-9,4,7,-8,-4,-3,8,-5,-7,-8,-8,1,7,-10,9,8],[-3,9,-8,10,9,-3,5,-7,-4,-3,10,-2,-5,6,4,-3],[8,8,-8,-8,-2,-7,10,1,1,-8,-7,1,-5,-7,3,-8],[1,-7,-6,9,7,-7,2,-2,-4,-5,3,5,5,8,4,-8],[-6,8,-9,2,-3,-10,-8,5,3,3,5,5,-1,-7,1,-2],[10,8,4,-3,8,-9,8,-10,-5,-6,-10,2,3,8,7,-10],[-9,6,10,-10,5,-7,-7,-1,-8,7,-9,1,10,-6,9,-6],[8,-4,1,7,7,-8,-10,9,7,8,-4,-8,10,3,-3,10],[1,8,-9,-8,8,1,5,6,3,-8,6,-1,-1,8,3,3],[-3,8,7,-10,-3,5,-8,-2,6,8,-5,8,5,-1,-7,4],[7,-4,9,-1,3,-10,6,2,1,6,10,5,-2,-6,1,9],[-4,-4,8,-5,3,4,7,-3,-7,-8,5,-4,10,-5,2,10],[-10,-8,2,-9,-9,4,8,-8,-8,-6,10,9,-2,2,10,-1],[-6,7,10,-1,-9,-7,-4,-6,9,-5,-1,-10,1,-8,-4,1]],[[6,6,-6,-7,1,3,-6,10,-10,6,-1,6,-10,3,3,-4],[2,7,6,-4,-7,-4,8,8,-9,1,5,-2,-4,-1,-6,6],[-4,7,-8,-8,-2,7,8,-7,-2,-7,-8,3,1,-8,10,9],[10,3,9,-2,6,10,-7,-1,7,-7,6,-8,-6,7,2,-10],[-2,-8,-8,3,-2,-8,-9,-7,6,5,5,-10,-10,9,-3,-2],[-3,7,5,-5,-2,-5,1,-9,-7,10,10,5,9,1,4,-6],[-6,-10,10,7,10,2,5,10,-10,3,2,-7,3,-10,1,-8],[8,9,5,1,7,9,-7,-3,-1,4,-6,4,-8,8,2,-8],[6,-10,3,-8,-5,4,8,-8,4,4,-4,9,5,-3,3,-7],[1,2,9,6,-7,-3,-8,5,4,9,-8,-3,-6,-9,-10,-10],[6,-4,-1,6,-1,-4,1,-8,-7,-6,-7,-7,5,-4,2,5],[7,2,10,-6,6,-9,-9,5,-5,-10,-8,-5,-1,-8,-2,-3],[-4,7,-1,-8,-4,6,-3,-9,2,9,6,-4,3,-2,-7,-6],[-9,9,-7,-9,-4,-4,7,-3,5,-10,-8,-10,6,-7,-10,-6],[-5,1,3,-3,-8,-2,-4,-4,9,-2,8,-7,7,-9,-5,5],[1,-4,-7,-9,-5,10,8,-10,9,5,5,2,-5,6,6,-2]]], dtype = "uint16")#candidate|2294|(14, 16, 16)|const|uint16
bop_2295 = relay.greater(var_2293.astype('bool'), relay.reshape(const_2294.astype('bool'), relay.shape_of(var_2293))) # shape=(14, 16, 16)
output = bop_2295
output2 = bop_2295
func_2304 = relay.Function([var_2293,], output)
mod['func_2304'] = func_2304
mod = relay.transform.InferType()(mod)
var_2305 = relay.var("var_2305", dtype = "uint16", shape = (14, 16, 16))#candidate|2305|(14, 16, 16)|var|uint16
output = func_2304(var_2305)
func_2306 = relay.Function([var_2305], output)
mutated_mod['func_2306'] = func_2306
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2359 = relay.var("var_2359", dtype = "float64", shape = (8, 1, 4))#candidate|2359|(8, 1, 4)|var|float64
uop_2360 = relay.cos(var_2359.astype('float64')) # shape=(8, 1, 4)
uop_2367 = relay.sinh(uop_2360.astype('float32')) # shape=(8, 1, 4)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
call_2372 = relay.TupleGetItem(func_804_call(), 0)
call_2373 = relay.TupleGetItem(func_806_call(), 0)
bop_2376 = relay.greater_equal(uop_2360.astype('bool'), relay.reshape(uop_2367.astype('bool'), relay.shape_of(uop_2360))) # shape=(8, 1, 4)
output = relay.Tuple([call_2372,bop_2376,])
output2 = relay.Tuple([call_2373,bop_2376,])
func_2388 = relay.Function([var_2359,], output)
mod['func_2388'] = func_2388
mod = relay.transform.InferType()(mod)
mutated_mod['func_2388'] = func_2388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2389 = relay.var("var_2389", dtype = "float64", shape = (8, 1, 4))#candidate|2389|(8, 1, 4)|var|float64
func_2388_call = mutated_mod.get_global_var('func_2388')
call_2390 = func_2388_call(var_2389)
output = call_2390
func_2391 = relay.Function([var_2389], output)
mutated_mod['func_2391'] = func_2391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_2402 = relay.TupleGetItem(func_1067_call(), 2)
call_2403 = relay.TupleGetItem(func_1068_call(), 2)
const_2409 = relay.const([[[-7.208660,1.952242,-3.969132,-1.115426,-7.111814,1.902694,1.435090,5.287183,-9.570237,-5.635037,8.202545,-7.934346,9.487153,2.629653,3.319507],[0.851289,2.139743,5.663825,-6.387549,-8.341240,-6.353013,0.314170,2.100349,2.929461,6.261244,1.646017,-8.861659,-2.821524,-1.998615,-6.236831],[-0.899138,-8.386376,-5.663396,3.024693,5.290957,5.404004,-1.295089,1.718947,-7.025767,2.714228,1.969146,-6.015509,-2.997342,9.051886,-3.980163],[0.940553,4.351127,6.131447,1.493174,-4.083257,-6.587501,-4.438092,-0.919305,6.709547,2.988880,7.209722,1.441796,-4.094873,-5.272660,7.945659],[8.630390,-0.112911,-6.734541,-6.106025,-4.656369,-6.003227,7.598839,8.725006,-9.489102,-2.958028,-1.363923,-2.634248,6.214080,4.223289,2.345034],[1.900513,6.521678,4.059825,6.525606,0.292690,0.115793,-0.711337,3.000686,-7.540616,-0.806925,5.677612,-3.469068,8.058793,-0.642629,-5.479772],[5.264408,-5.534560,3.035904,-6.334813,7.297818,-2.542434,2.272356,6.113973,0.841060,-4.237127,-7.857332,-3.279106,-1.549222,2.138009,-4.946550],[-1.270787,0.300196,3.069893,-1.250116,8.967518,0.510463,-7.875581,-8.201571,3.260414,-3.121788,-8.600101,5.360235,3.406766,-9.898896,-6.977776],[-0.301855,-5.626714,3.009244,-4.019108,2.503280,-6.363225,-7.858418,0.671504,-5.930221,-1.376369,-1.616380,-8.953612,6.989294,3.116058,-9.676810],[-1.768046,-4.559200,-0.287712,-8.167838,-8.070030,-3.092608,6.022555,0.852821,7.792183,2.229589,-2.965521,-4.936047,-8.571395,5.405235,2.964653],[3.717962,-5.255176,-2.306442,-6.296619,-9.843645,-5.825174,6.136767,8.806133,-2.555424,-9.665843,-7.350127,-0.168678,9.359178,-8.735199,-7.160025],[-5.201039,5.818972,-2.872705,7.337892,0.277322,5.972962,-5.005362,6.014217,3.374059,7.055307,1.616255,3.187344,-9.246440,-3.066525,8.322215],[5.841527,3.196272,-8.859692,-4.100007,-1.377447,1.628884,-9.343810,-6.549585,0.481224,8.809032,0.365529,-6.230938,-4.138434,-0.225521,5.908112],[-9.813476,3.671795,-2.223859,6.829357,-3.975359,-0.431327,6.528492,8.878248,-7.091466,5.697343,2.355579,-3.938490,2.786701,2.125727,-6.217555],[1.883366,8.830672,-0.437043,4.426831,-4.805684,4.974112,5.946837,3.278833,-4.369502,-6.367735,-6.334484,-0.895262,2.623930,5.542970,1.542312],[-8.774303,-0.628991,-9.472729,6.290602,-5.301604,7.922721,-6.390611,-9.470816,4.743328,6.359774,6.031060,-1.199326,-1.996188,1.628349,-5.938094]],[[1.720218,-4.544909,-8.322281,-8.641881,-7.835517,5.558425,-5.809587,-9.960264,-7.224322,1.594695,3.582577,9.421736,1.149065,-6.725495,2.179624],[8.340880,7.825360,5.323298,-8.893479,4.439114,-1.300309,-9.588531,-3.368982,-5.233781,1.777890,-7.421466,-8.277963,-0.831345,0.367883,-3.208297],[6.987202,-0.143498,1.233562,-9.235040,3.229644,-0.816664,-0.354421,0.743344,-2.629142,4.270796,7.177345,-2.385607,4.603008,8.673577,9.005870],[-0.536569,-7.851078,2.524659,-5.592792,2.090750,2.086166,3.838614,0.297265,-5.034175,-7.160656,2.855461,2.833738,7.743526,-7.860659,-4.207920],[4.531120,-8.567334,4.847222,4.658966,3.414184,4.358879,5.705680,-9.249364,9.765255,-6.199774,5.691890,-9.149916,8.298438,6.941563,-8.521039],[-5.496779,-3.483429,4.533009,-0.739760,5.436791,-4.625236,6.777416,-1.204996,-4.807388,-8.183589,2.178693,-9.225480,8.658783,-2.853241,3.421921],[-4.948123,-1.322508,-9.502573,-7.269626,-5.255676,-4.345439,-8.060256,-4.859129,1.224365,3.988471,1.704098,6.432451,-2.170314,-9.077742,-4.013392],[4.191638,8.733677,6.203031,-2.797290,-4.395094,-2.971267,6.672302,-2.081671,1.686653,-9.769646,-8.671439,2.053501,4.813019,-8.790995,-8.715288],[7.917750,2.107568,2.194022,-6.038403,-6.428714,3.341500,6.131641,5.062663,-5.870880,8.819548,0.186786,5.705811,-2.225008,-7.470976,-2.235468],[6.118410,0.435351,-0.654578,8.113273,-1.747604,1.558208,-7.332613,-2.269598,3.586905,-9.239413,5.860333,-1.563956,5.160918,3.688619,1.782632],[-2.460837,6.259738,7.241200,4.397055,-5.022200,-8.566632,1.892659,-5.183582,-9.465015,-8.492049,-1.058143,5.840466,-5.498791,3.485350,-3.001440],[0.388252,7.942120,-4.274502,-1.114094,-9.122713,5.326005,7.783186,5.261372,-0.200658,5.410248,7.607620,-8.352431,-5.542859,8.604647,-9.735488],[-5.122717,-0.595677,-3.976338,-8.898287,-7.924202,2.089714,1.425156,-8.290243,-2.927005,-1.721904,-2.259300,-4.185566,-2.962029,1.396086,-3.515621],[-6.953848,-3.347803,2.496900,2.252518,5.588359,-9.743628,-2.522354,6.583438,-0.819361,1.242271,3.759489,-8.098311,1.164012,-7.957361,-9.871813],[-0.775801,4.799555,-5.094541,-1.511724,-1.047395,1.392988,-3.071516,-5.573720,2.979412,-2.253260,-8.763863,-7.392032,1.023024,4.085353,-8.679475],[-4.278636,-8.123126,5.827629,-9.979718,7.797615,-2.367938,9.647682,-9.707146,-5.356242,5.460593,-5.382486,5.079537,-2.383268,-1.708830,-3.774550]],[[-8.993260,-9.315237,8.613953,1.437410,6.408498,-1.335405,6.213034,-1.253845,-7.210382,6.669888,8.155889,1.358832,-0.065245,0.840281,1.210288],[-6.610259,1.166941,5.429771,-5.279331,-6.745089,8.430482,9.187525,0.851543,-1.836206,3.548368,8.103248,2.781143,1.674511,-9.758479,9.274607],[-4.211370,6.887208,-2.316125,-9.096624,8.034284,-7.512986,-6.120223,-8.370743,5.467492,4.977232,-0.273797,-7.348381,8.904599,-1.930869,-0.666142],[2.093707,5.914016,-7.817432,9.191390,-7.088033,-5.708094,7.551318,6.704171,-2.688490,-2.858847,4.742527,-3.683502,9.475749,1.150299,7.107016],[9.667825,-4.471187,-2.727631,-3.972237,-6.011120,-6.345151,1.812033,1.999964,0.996531,2.254335,9.460854,7.091603,-6.477167,3.894394,-0.508522],[-0.702468,3.860805,-3.049589,5.302352,-5.187637,0.633848,-3.801609,-8.063251,6.507649,9.132492,-5.428171,3.179916,-4.514855,-4.636020,6.201579],[9.451406,-4.308670,7.692418,-1.340392,4.183182,-9.628478,7.441593,4.545792,-3.508038,-8.836143,3.963652,-2.547859,-9.971395,9.542734,-4.780359],[9.057939,-4.630013,-9.079030,-6.626266,-8.453854,0.760918,-5.555593,-4.683114,9.294459,6.306918,-8.723070,-7.491220,8.769024,-2.537240,3.092983],[-7.035768,-8.411132,-7.363426,-2.620039,0.155057,-4.547666,6.531208,2.858365,-9.712796,-3.481500,-5.283935,-5.558657,8.251143,7.121949,-2.793016],[-6.727794,4.183227,0.630789,5.800248,-5.772753,0.554510,-4.105828,-8.569781,-1.492725,-9.211566,-3.500520,7.604742,2.236923,-2.093000,-0.398220],[4.146884,1.241308,2.735495,-6.207715,-5.077561,9.372272,5.457153,-9.580309,-4.511770,-8.392988,6.527499,2.368546,9.665704,8.366054,-8.957641],[7.974354,-6.803434,-0.638031,3.852942,5.670051,-0.526600,6.020781,-8.050131,0.749955,-4.776807,9.264154,-7.621565,8.364914,6.540053,6.227754],[-2.436064,5.484014,-5.298632,8.773011,-0.418639,6.183076,3.679919,-5.850642,9.283043,-1.051324,9.191067,6.397996,7.869459,4.542864,-2.064538],[-1.107179,2.243214,6.961869,9.716666,-3.252264,0.587698,-2.826265,-9.756041,-3.723456,-2.324520,-3.622177,-0.001229,7.578610,-5.862825,-1.858116],[-0.002038,4.835764,-0.279910,8.051083,7.169937,7.295032,0.071186,-8.499519,-1.778810,2.184908,9.763617,-6.418601,-9.123555,1.058021,9.138484],[8.885069,-0.888544,1.663773,8.067620,1.144968,-9.107938,-6.439094,-2.106445,-3.626899,6.244837,-8.625998,6.751902,5.900521,-0.160883,-8.099712]],[[-0.360871,1.939448,-6.437178,-7.389821,5.847183,2.065298,-0.247803,-2.857361,-2.356322,-3.698585,-0.057688,-5.182157,3.022014,4.821800,1.441496],[3.974632,7.569797,-8.047660,-9.682456,-6.414263,-5.433732,5.105461,4.591034,-6.273812,-6.234800,5.901321,2.428610,-9.886058,0.938145,-8.213260],[7.530455,0.145399,1.193695,5.921611,-8.598633,4.832485,1.699150,1.277021,-1.630092,-9.590292,-2.971040,-2.675747,5.555416,0.987866,-9.656370],[1.791744,6.704973,2.491000,3.438673,-7.928161,-2.444621,-2.694232,0.436965,-3.444568,2.180694,-5.180360,-9.692511,4.389308,-3.385707,5.214511],[5.907430,-5.080807,3.733193,6.089652,-0.737430,-4.888312,4.085687,-2.154285,-8.475450,0.375536,3.890942,-3.335860,-3.492236,-3.828483,-6.655158],[0.894106,-3.625489,-8.025158,8.947881,-7.763466,-3.966803,-2.381598,-6.214934,-6.630285,2.084098,-1.443522,4.287617,2.448968,5.160965,-7.689873],[5.168962,3.794687,-7.827449,7.544615,9.300948,7.721139,-3.361773,5.858513,4.543004,6.260534,5.501858,5.586088,-0.688183,-2.029100,-6.594590],[0.311736,5.583626,-3.698658,9.738891,6.707671,0.667202,-2.348238,4.778630,-4.867925,1.837419,9.700881,-0.893943,9.695949,2.598993,-1.574934],[9.794173,7.445740,-2.063357,-7.681474,2.112423,-0.552304,-4.508089,-5.014153,-5.805002,-5.237278,3.123951,6.110316,1.852863,-0.353030,-2.866095],[-5.778982,1.789738,-4.802567,3.879855,7.817177,9.829193,-3.738204,-8.958948,2.151369,6.036405,-0.571279,9.105278,-7.116333,-3.974202,-9.061739],[8.101759,-9.403800,-3.443701,-0.981889,4.106097,0.507287,6.779061,4.018357,-9.730781,2.048223,-2.252799,-9.056187,0.677601,-2.777294,-0.920616],[-0.790820,-7.442796,-7.914938,-2.000848,-2.209422,-2.533434,-5.784628,5.622280,6.234782,-1.201261,-7.403380,-5.713758,-8.978786,4.733719,8.748421],[0.611084,-2.068621,8.425913,5.837735,9.253915,4.353216,2.486338,-6.541387,7.831782,-1.146075,-8.535867,0.146595,-9.170170,-1.293173,-8.368625],[9.605677,3.548471,9.268904,-3.947644,-9.793516,8.376103,9.817376,0.030633,3.306044,8.657266,-0.560883,-0.520392,-5.722905,-5.641812,2.234975],[-4.191425,-0.651503,-3.260507,-1.765836,-1.791123,-9.232506,9.588703,-3.348516,5.179298,2.704629,-3.908247,-3.531548,1.980993,2.080896,8.644413],[0.188190,0.494794,-1.426441,8.023420,-8.521297,6.167920,0.009971,-8.479227,-2.327280,-8.109958,-3.653954,3.080604,3.492656,1.769738,-5.150939]],[[4.251242,-4.885110,-8.483161,-6.624380,-2.248259,5.029635,-2.879797,-4.859587,8.406951,-6.029319,-7.841272,-5.401101,-7.370577,8.904524,-6.134125],[-5.252399,5.163980,-0.919471,7.997858,9.246119,5.206980,-1.900987,-3.129732,-4.549304,4.623377,8.549242,0.121491,9.688129,7.564133,4.426432],[8.554904,-7.936591,-9.801024,-3.968761,1.596896,6.019157,-9.741075,-2.067481,-9.371234,-0.477009,-5.321526,-1.997954,5.447186,3.143337,-3.532703],[-5.741668,-6.698153,-5.747426,8.269375,9.416230,-5.380187,5.024084,-0.249104,0.218043,-9.048557,-7.189306,0.129416,-2.074659,-4.233689,-2.963676],[-3.267060,-4.049527,5.311160,-0.823739,5.438492,0.438244,-6.083227,0.600546,1.255049,-5.334399,-7.166572,-4.525988,8.710827,7.312704,-3.922408],[-9.633236,-3.135261,1.703941,2.322269,6.208129,7.473985,-2.645750,2.300585,-9.756862,1.355363,7.004036,7.307150,4.376692,-0.989848,7.492595],[-1.885725,-9.360108,-1.681401,-8.507211,0.004401,4.431599,4.059102,-3.362643,6.615767,3.817690,0.121647,-2.564711,-0.881775,6.387363,-5.138005],[0.060460,-1.955559,-5.999959,9.952820,-8.934504,-2.398365,-3.223737,-5.144793,-4.214909,9.886705,-0.382670,-8.721086,-4.842499,-5.840696,-0.150130],[-0.180985,-8.875430,5.353868,6.933477,1.949399,9.931589,0.325712,3.632090,-0.689973,5.430507,7.583056,5.269565,0.894191,-0.965818,7.781670],[-6.226739,-6.961411,3.941898,8.148520,7.070622,-3.117194,-4.560258,-8.855930,0.286665,-2.172033,-4.813815,-8.420377,6.551134,0.778638,-8.513312],[-5.100120,-5.680645,2.013502,-5.560010,1.321569,8.196755,-0.211744,0.806769,-5.354255,-2.757626,-6.619481,-0.775568,-5.591126,-4.826507,-9.076274],[-8.517341,1.509661,3.015352,-5.480759,-6.686662,1.477413,-7.642215,8.004115,-5.962005,-7.121825,-8.648081,-7.392869,-0.776680,7.967541,-1.182447],[1.785461,-5.606749,-5.397346,6.355939,-0.232194,-6.384370,0.466410,0.129501,-0.025840,-0.422721,-9.304950,6.893391,-8.845250,2.767143,-4.093038],[2.774089,3.852174,6.629408,6.069476,-5.102330,-2.339459,-2.671789,0.486258,-9.915189,1.390400,9.043431,-3.875493,-7.823499,-8.126015,-1.706105],[-8.761445,-2.581394,7.873415,9.695070,-9.884860,-7.538505,-4.445079,-7.617183,2.421092,3.139893,-3.995792,-6.039279,-0.329724,7.981481,4.502210],[0.208750,9.242507,8.801430,9.956936,0.745737,-2.097998,-5.809654,-6.353447,1.181796,-2.122758,1.904954,0.477454,5.708370,-9.891869,-9.047355]],[[-9.967116,0.679816,8.516395,-0.098075,7.933453,-2.853451,-5.670366,-5.514479,9.149115,-7.021851,8.153293,-4.725271,4.321007,-9.584400,-1.442085],[7.442618,-2.890195,-3.436895,8.421015,5.160504,2.855214,6.115991,-8.689035,-1.940797,1.232033,5.165663,-9.811457,4.000734,9.861278,-3.498463],[-8.446971,-6.619371,-0.943997,-4.742336,-1.172541,3.770497,6.357972,4.583528,-6.479750,7.170097,-1.692020,-0.464808,1.782463,-9.637116,0.612959],[-1.867986,6.288350,6.298629,-5.263082,4.426996,8.097626,-2.692087,2.526934,-4.003042,9.279107,9.060101,6.546668,3.260936,4.389401,0.135728],[-4.462510,-9.980687,0.979932,9.337580,5.198846,-7.809441,3.263805,2.527507,-6.974948,2.830519,-8.019839,9.342005,-9.125754,-8.834332,-7.667006],[5.932983,4.934818,-2.948387,5.331056,-9.596133,1.014703,1.767919,0.344618,4.904313,-2.364107,-8.929575,-1.258335,-0.568351,-9.758746,-9.640439],[4.555296,2.709494,-4.086258,7.111184,9.239816,-3.516679,-0.598456,-1.349343,6.330204,1.555468,-4.998895,-1.308251,8.143163,4.068936,5.298091],[-2.963498,5.271205,9.177069,-2.692252,2.401351,9.786057,-9.891030,5.894299,8.478068,-3.799859,8.801055,-4.837026,1.716551,-7.202108,9.204418],[9.511343,-7.445389,5.231711,-0.615342,-1.839941,-0.325579,3.358889,1.708522,1.109568,7.499193,8.554692,-6.921607,-5.519009,8.587234,-9.645689],[-0.287823,4.597781,5.154599,3.264820,-6.911440,6.200603,6.264685,9.870069,-7.653004,8.784768,-5.256804,-1.617456,4.802798,1.681695,4.447328],[3.839169,2.732865,1.388366,-5.946014,-6.553564,-0.654418,0.635863,-0.620103,3.695671,2.598011,4.747645,4.120202,-1.961660,-7.226456,-6.444971],[3.020103,-7.118350,-6.477258,8.091872,-5.155605,7.299304,-2.381464,-3.506016,3.620366,3.061343,-2.391235,-2.393029,-6.233165,-8.069576,-4.160631],[-8.494001,1.954400,-6.838558,-3.598320,-8.783098,8.801732,-9.181267,-7.535996,7.734648,-3.182676,-2.169561,1.936030,-8.990703,9.189074,-9.391988],[1.607776,7.531608,7.145983,-7.859145,-3.974987,-7.341318,-9.176137,4.363972,1.916789,-4.407947,3.695718,7.805974,-9.557859,-1.757917,-5.585764],[3.757181,4.249006,-6.134914,5.911748,6.557888,1.125903,2.850598,-5.698812,-2.856398,3.626723,5.327583,7.209303,2.426156,-9.293550,5.586451],[7.968297,2.338870,-0.829649,2.791319,-0.112120,2.105755,0.220556,-1.834794,2.249790,3.033990,0.048448,7.265178,8.311681,-1.035539,-5.627161]],[[7.111652,8.494829,-7.804966,-3.358476,7.179871,-2.282341,8.304447,0.471859,1.359668,-0.282446,-0.750354,8.854400,6.520932,-0.185393,7.536335],[9.859030,-7.913347,2.006881,-2.004332,0.769148,-9.892730,-8.973404,3.144796,2.216554,-0.172940,0.914886,-4.382420,-9.059307,-5.698360,0.315697],[8.614542,-1.545839,0.309929,8.002892,3.950671,9.908121,-9.694630,6.500270,-7.273312,1.433395,1.069958,0.998422,3.852718,2.952985,-6.105941],[3.446504,9.889403,-6.827448,0.312591,7.724243,-2.782264,4.545821,-0.475580,-1.719980,5.778754,-3.795816,-7.100029,-8.376206,7.509248,4.840490],[6.718719,-5.366411,-0.448422,0.833069,-2.123799,0.590182,-8.012408,7.693505,8.196095,2.287890,1.406466,9.988624,3.643527,-0.257536,3.724615],[-4.636457,-6.028528,-4.286823,1.071054,8.983922,-0.128875,-5.615594,6.061367,2.175868,1.045471,3.658965,-6.713920,1.908695,8.798746,7.218386],[0.799113,0.253252,-2.515900,1.736539,6.315477,1.398154,6.996688,-4.181473,4.247448,1.101351,-3.226117,-9.800783,-3.947296,-6.520290,3.611426],[-7.871312,-3.912362,-0.962475,3.088568,-9.068052,-3.750108,-6.774559,-6.718569,-8.386842,6.366718,-4.299552,6.916730,-3.858144,-7.882590,3.760244],[-6.128936,3.293187,2.727095,7.533115,6.075686,4.622864,6.949459,4.580051,4.080785,-2.200335,2.217323,-0.014707,6.796627,-5.757185,-7.550353],[5.061140,-9.025408,3.383447,-9.958384,-8.858535,-1.484014,-8.918716,-8.902535,5.043272,1.343393,-8.629548,6.249930,4.181450,5.318960,-9.968304],[5.912904,4.067063,-3.050347,1.589432,5.024424,-7.616081,-8.879661,-7.966153,-3.781476,-9.793429,1.200451,0.461591,1.622083,1.387683,-2.583656],[-9.923767,2.526588,1.559408,-4.702530,-8.231953,5.746068,-9.269450,8.533600,-1.331019,-5.338241,-5.889758,6.194742,-2.354884,-1.235397,8.561188],[-3.762299,3.634901,5.701316,5.483021,6.104382,-8.293351,5.145765,-6.387878,0.915241,-2.460369,9.849410,3.621868,-0.897777,-3.788896,7.160436],[-8.443419,0.374970,0.899617,-8.383758,8.694363,-3.713766,-1.105550,-6.674913,6.792381,7.685417,9.826950,-6.591683,5.276469,8.393626,8.146011],[-2.009213,-6.821605,7.733700,-8.580441,-9.905253,-4.663464,5.023686,-1.084538,9.490898,1.408061,-2.882299,-6.258416,9.886069,9.146719,8.300377],[8.651803,-6.088353,8.662798,9.927018,-9.435294,2.673137,9.269313,2.816706,-8.760170,7.648026,-8.387500,3.584668,-8.562888,-0.866747,2.503710]],[[-6.503915,2.374910,-8.826969,5.321251,6.728339,2.406678,-5.758548,7.499234,5.725894,-2.679854,-2.423561,-6.770793,0.198149,-1.069559,-6.095931],[3.957999,3.245212,-0.261932,-5.995458,6.491909,4.558821,-9.505528,3.142055,5.278120,-5.776523,2.789643,-4.421260,-1.510164,-1.710683,-2.703557],[-3.984281,-8.265171,-1.655456,5.145245,-2.642521,-7.285566,2.710042,4.480799,3.907397,4.768028,-1.457411,-0.688637,-8.668634,0.135071,6.797616],[-1.197059,9.289323,0.376270,3.727625,-5.421078,-9.878320,4.315678,-6.064175,-1.098130,1.893543,8.203388,6.495087,2.883027,-7.478505,-7.068554],[-5.283906,5.003699,4.744521,6.153064,9.018735,-0.240274,9.122078,1.122401,-0.183451,0.711303,-6.622410,-8.021201,-4.360160,6.879344,-9.350789],[-0.736677,-9.983475,-0.642100,5.238730,-2.637589,-8.741630,-2.345042,-5.771307,8.449536,4.635194,0.292717,5.425532,7.732440,7.515826,-0.039521],[6.539165,-2.984954,-1.896823,4.215323,-1.944829,-6.611800,1.275699,-1.239198,-5.894866,-6.157071,-4.069529,7.140432,5.940003,8.582527,-9.239956],[-3.414669,8.610037,8.937906,-3.380642,0.926161,4.554610,2.855392,-4.264311,-7.863698,2.216661,-3.509575,-9.383994,9.557513,3.636567,-7.457919],[-4.593733,0.810363,8.065988,4.778248,7.375266,2.508153,-4.334925,9.703227,-0.353099,8.844448,3.149611,-0.531220,-2.928212,7.172124,-6.745092],[1.976006,0.494240,-5.461209,8.795343,-2.244455,-4.437109,6.302756,-2.402388,9.655061,9.059025,-5.254576,9.050101,-2.862798,-5.996498,2.775063],[-8.829939,7.880001,7.059246,-8.933454,3.138887,7.016837,-0.831575,-1.826838,-4.091476,-3.287300,-4.176773,-4.836774,9.177939,0.217523,-0.336374],[-7.959209,9.016283,-9.087343,-5.370117,-6.885383,3.640135,3.099897,-0.235832,-9.372466,-1.517091,-8.855155,4.997251,-0.323606,-6.384093,-0.904145],[-3.400656,8.805569,-2.619990,-7.527346,-5.702921,-1.633295,-6.793296,-1.876684,7.741327,3.300180,3.819564,8.295895,-2.115670,2.629676,7.009426],[-7.439191,-1.216429,-0.087041,5.322381,5.330521,3.673417,-5.200873,-1.580697,-1.346426,2.316246,4.683137,-3.069990,-6.999167,-9.125605,6.806478],[9.925161,5.071301,2.740954,2.859865,-7.384442,-0.163226,-9.891128,4.385348,9.873155,2.279687,-3.404022,6.329186,7.496999,7.986210,1.143846],[3.999602,-0.112614,3.024276,-1.669811,7.785731,2.039693,-3.448897,-4.600442,-9.067456,-1.031002,-4.659734,-8.556699,8.006497,6.254566,5.180808]],[[5.921885,-5.501291,8.643610,2.371856,-2.565585,-9.750487,-5.278042,0.418163,7.462014,1.802159,8.637972,-6.085100,4.267919,6.892700,-8.115587],[-7.276880,-9.589839,-5.417866,-3.847779,5.328881,-3.232459,-7.773805,3.433075,0.755915,-1.751950,-8.273615,-9.187152,2.255148,-1.294329,9.488304],[-1.694754,-3.456968,-6.209438,-5.780912,-7.676115,4.116170,-7.827228,9.694117,3.058769,-9.607082,7.849014,-2.289673,5.459426,-6.310213,-2.590367],[-3.676166,0.660759,0.016740,8.492462,-9.736235,-3.478882,-0.707249,4.841168,-4.415913,-4.380693,-4.015346,5.500476,-0.416058,3.303452,-7.091582],[-3.432388,-2.177433,8.247543,1.429137,2.335470,-8.990065,4.353901,-7.589459,-9.214967,8.699584,3.787216,4.707202,-7.328961,0.326149,-3.315645],[-3.015879,4.977201,-4.249347,-8.048873,1.728965,0.265446,3.981451,3.115608,1.709159,-8.557401,-1.481811,1.955852,-2.039418,3.519844,4.897456],[9.698626,-5.460506,-7.349167,3.901424,-5.695555,-4.182255,-0.828714,-0.891905,-4.747485,-7.791910,9.772301,-6.068512,-0.450539,-5.091588,1.959416],[0.565130,4.740534,5.607230,-9.001700,9.048881,8.135003,-3.107668,6.658859,8.401072,-4.082847,0.755891,9.958224,-7.147998,-0.548916,5.287146],[-6.797418,5.097452,6.218528,3.080429,7.036150,-3.268600,2.376352,4.736294,-0.611223,-8.080295,-9.535952,-8.575752,1.326633,6.313384,8.055413],[8.829327,6.771898,-2.066015,7.877179,-5.687000,-8.282944,-9.880001,0.200031,-6.133282,-2.084536,-7.730300,-9.380896,-3.134698,-0.183509,-2.134777],[7.499455,1.101636,-0.722868,0.303201,-2.744120,-9.079515,-5.279345,-3.044387,-1.445670,2.348548,3.838191,7.884988,-1.796039,4.137933,9.085164],[4.061635,-9.551978,7.504706,-1.744345,-2.448174,-5.769563,5.513325,8.234909,-8.420702,-2.824730,4.994218,-9.726995,-5.738528,-4.322585,2.825440],[1.755465,-3.437927,2.075785,-3.569710,-1.256039,-7.359241,0.126897,-7.369095,9.467308,7.177541,-4.045462,5.751099,0.950385,-6.217791,-7.916827],[-2.389567,-8.581757,9.783617,-2.287003,5.617821,-9.787101,-2.352575,5.807318,9.614376,3.904896,-0.449490,6.727672,-1.365238,7.863970,-4.842009],[-8.206691,4.897801,-1.311500,1.122692,-1.593587,0.103983,-7.299510,1.221903,-8.047108,8.974699,4.678193,-3.309412,5.423663,0.568940,5.511143],[-8.639418,-1.434834,-4.918415,-9.867030,-2.473658,-6.816907,-5.567126,9.177399,-0.804942,-3.735664,3.980715,1.390169,-9.574369,6.301138,-7.839081]],[[6.372174,-0.817287,-6.487959,-2.274391,-6.125024,-2.461224,9.318634,-0.965901,-3.861166,-3.862992,-8.180114,-5.119802,0.426570,-3.866570,-7.712811],[4.579769,-8.947263,-8.299488,-4.560478,8.902353,9.788079,5.453835,-8.243187,1.815040,-8.077074,1.783007,1.454293,2.142204,-7.372623,1.592388],[-3.231334,0.399263,1.978432,0.520204,-2.580103,-1.546332,-6.464723,-9.348761,5.799500,2.985075,-9.043427,-2.423660,-7.886948,-1.139275,-7.914781],[-0.520761,8.463076,6.337756,5.518678,-5.810485,5.536140,8.553518,9.527704,9.516484,0.249205,-2.818741,4.338904,2.733464,-2.802061,2.221202],[-8.524220,2.858304,8.987643,-9.406821,-5.441919,-1.951173,3.827121,6.851155,-5.958654,-7.529459,-0.918070,0.569450,6.771470,1.955826,-5.614864],[-5.677482,-1.078631,-6.482681,-3.501279,-2.044461,-0.899134,1.220452,-1.151824,-7.813671,0.310134,-7.277346,2.974229,7.457351,2.622016,6.605275],[6.821424,-1.092567,7.182555,3.696953,5.983611,-6.061608,9.396571,8.829764,0.651284,-2.549843,-6.090812,-2.191612,-1.196218,8.462460,-8.857009],[7.694803,-3.711443,-4.466764,4.072148,-1.156715,5.296622,-8.860498,-2.518729,9.046169,2.319733,-4.049128,-2.953164,9.405454,-8.195691,-9.710992],[5.638253,6.988975,3.696384,-9.463278,4.125033,7.292204,8.521310,3.434218,-2.693494,7.043455,-7.757848,4.890258,-8.911162,0.809708,6.893684],[-8.559630,-2.593473,7.733622,1.714352,-0.634689,-0.561061,7.610553,5.713092,8.877958,2.976611,4.754091,-7.684530,6.214811,8.055840,4.908766],[-9.361276,-4.673938,3.739782,2.831025,7.021936,-3.006000,9.071976,3.269272,-3.800157,-0.214862,-1.338543,-1.735550,5.200014,5.844465,-3.525694],[8.889842,-5.112339,4.489432,3.817308,-1.061699,-2.044869,-0.915264,6.723549,-4.437462,-9.353549,6.578446,-9.831765,9.434551,3.483377,6.246148],[-3.695557,4.574563,-5.099517,-4.253957,4.646769,-4.596422,5.430472,1.815202,-2.235878,6.075442,3.491155,0.450954,-4.119539,8.633547,-6.348704],[7.301479,7.444058,9.949000,-1.355351,-5.408857,6.627682,4.215693,9.720019,5.849994,8.225007,6.559901,5.390536,-7.391799,2.866978,-7.660500],[-2.962348,-2.421183,-2.593782,2.290482,-6.498634,-6.256697,-7.540420,-5.523790,-9.984632,-2.544965,-3.001743,-0.167241,-9.275392,4.113505,-0.973302],[5.899512,-8.069496,3.255213,-4.758842,4.681295,-7.032033,-8.990611,4.203656,-6.698324,-0.490533,9.728207,-6.965189,-7.707872,4.275930,0.117710]],[[1.497543,-4.484606,-1.035397,-6.228662,5.445897,0.479403,1.223908,-3.384022,3.671982,4.572262,2.757145,-5.475658,-2.612513,3.258590,5.020603],[-3.578804,8.274155,-9.793256,-6.913143,-5.795353,-1.588479,9.228022,3.831330,-7.270550,-6.832295,-2.635815,6.870447,-6.260707,-7.039007,0.697533],[-3.375672,-4.165610,-4.708895,5.893703,-7.097551,-3.174609,-8.990315,-5.713800,-5.116070,-7.385003,-8.267062,-9.673012,5.165911,-5.065088,-1.742257],[5.088411,3.921667,9.347298,-6.502751,-6.828095,-9.368109,0.856397,-7.493122,9.339117,7.994861,9.542557,-6.807559,6.779629,-1.332253,4.281662],[4.956733,6.367167,4.326007,-8.578406,-3.526232,-3.183175,-4.417332,8.608210,8.755413,7.723733,-0.103739,6.683898,-0.566012,-6.314492,-5.275358],[-9.254153,5.532915,-8.617463,-9.421695,-4.516279,3.612923,3.879382,6.051067,-3.705666,4.403605,0.325444,-9.849375,4.995754,7.197052,-4.880801],[3.512156,8.533801,-3.431636,5.232354,-8.075062,4.206268,-0.275399,7.805830,6.004367,8.696270,7.504016,-8.314044,6.830200,2.171608,-1.648305],[-4.313325,-8.178209,-2.428252,2.685134,3.245909,9.087809,4.751722,7.037080,3.146912,-2.499086,-6.480678,3.032406,8.643118,-9.332446,7.210137],[-7.223346,-5.367549,8.946048,-0.828592,3.346023,8.759858,-1.428994,-3.595659,5.500883,5.154434,-0.536832,-6.364805,-7.492527,-3.479948,-3.134344],[9.146655,5.597388,0.873242,-2.091498,9.173565,8.679897,5.501433,1.679046,4.874083,6.570022,-9.955362,-4.231873,-5.987624,4.953957,9.621432],[-9.122468,-4.522378,0.975934,3.616075,3.014551,6.361466,0.299982,1.926312,-2.589658,1.367221,2.023892,-3.282933,-6.785515,-9.532670,4.606484],[6.695760,1.221437,-5.841330,4.214118,-4.217188,-9.331273,2.786946,-8.227659,0.398678,-4.432068,5.916155,-6.822390,2.796729,-0.365341,-7.683448],[-6.698160,9.119855,-3.904751,-6.625509,3.228567,-4.962642,-6.863098,7.197613,-0.475410,1.106581,-8.343755,-1.621658,-9.002388,3.975281,-7.206158],[6.676744,-1.741510,-6.239929,-3.322740,-6.708470,6.097933,9.172722,8.017781,2.627568,9.458276,-3.174205,0.536559,2.183503,-6.881545,-8.615086],[-4.545507,2.439502,-8.620065,1.811597,-6.677726,6.982066,1.677854,9.724234,3.908967,-6.376665,-9.461204,-5.554282,-1.957968,6.957364,5.982634],[7.401928,0.109365,-2.260991,-1.620427,-6.063166,8.517044,-4.625155,5.148215,2.541868,-9.670332,5.393613,-3.204049,-0.370204,4.049718,-0.054901]],[[6.818531,5.071105,-8.781197,2.880035,0.150696,-2.855066,7.122205,9.763523,-4.681934,0.138848,0.324366,1.012722,7.240337,-7.607733,-4.042251],[7.073577,-1.570773,-6.624076,-6.126697,4.910244,-7.691013,-7.848955,-2.043825,-4.754582,8.254376,-8.013977,-0.318505,-0.704323,9.449777,3.057607],[9.000389,-1.875889,8.761673,0.369029,-5.072507,8.580278,-0.189033,-6.238073,-5.151020,6.373239,-6.117496,-5.233514,-7.738274,-7.641654,3.589580],[9.721643,-4.468857,-4.222472,-8.696943,4.057000,-5.636461,8.257926,1.858441,2.885634,-4.516508,5.367899,-2.788904,-2.023165,-1.644897,4.710721],[-2.224404,4.002554,-7.767653,-0.347211,7.183269,7.336524,-3.698052,-9.973251,-8.328594,7.962620,-9.454737,8.382820,-5.527768,4.679916,3.555457],[-4.059317,1.376993,-5.074414,8.000348,9.210227,9.911522,-5.110392,0.998476,4.456772,2.693780,7.793222,6.768402,-9.019330,-3.694455,-8.169465],[-5.013041,8.673152,-9.120465,5.939468,-0.687250,-0.626259,4.746284,8.746447,4.620921,-7.427698,-8.532564,8.534048,3.602856,9.655163,1.827383],[0.620119,5.950347,-1.425641,-6.453694,3.430989,-0.484237,-0.015820,9.691132,-2.166746,-5.869689,6.411336,-1.494927,-1.860524,-1.585361,8.746376],[-8.738359,-9.702933,1.753618,7.845318,-3.196987,-7.925594,2.412275,3.989276,4.882347,8.375466,-1.875107,-5.588087,3.845054,-4.689626,-8.099840],[-3.421558,-0.970173,-7.976641,1.308273,-1.117431,7.382134,-8.742028,4.434283,7.602588,3.124811,0.312419,9.291877,9.484967,-8.756069,-5.781200],[5.587832,4.433191,2.372907,-7.753730,-5.135171,7.395193,4.436402,-3.264621,2.044978,7.694639,-1.141268,-0.217182,-0.653839,9.480989,-0.524952],[-0.716384,-8.516069,4.544770,8.014872,-0.350175,-0.995143,2.207033,2.611139,7.428152,0.538050,3.456071,2.873958,4.457745,8.095683,-0.142290],[6.902228,-3.663477,2.825815,3.655068,4.305154,-5.416411,2.201188,2.142635,8.484991,1.429687,-6.491098,-8.894978,6.897118,2.002883,-4.830891],[-0.715244,-3.320037,3.565607,-8.100041,6.725767,-4.668853,-1.599556,7.663107,-4.408802,-1.536828,-7.719549,6.948521,-7.351869,-5.238032,6.671627],[7.606769,-6.714259,-1.258425,5.140481,9.107006,-2.424792,-2.667988,6.710063,1.290705,-7.099777,-7.110383,-7.396102,-1.833350,-9.916755,-2.700350],[6.940861,6.062021,-1.687607,-4.369801,-7.893097,-1.671115,5.735987,9.000892,-6.877842,4.553097,-3.125090,7.682131,9.491153,8.451072,0.585368]],[[7.341180,-1.804720,-5.175719,3.777829,-9.369395,-6.251532,-4.484373,-8.331799,2.332624,-0.145230,0.650652,-3.147075,9.083391,-1.233445,1.849568],[7.461895,8.584069,5.681434,-8.739673,-7.213718,-4.175003,9.961770,-4.371993,4.510105,-0.528674,-7.023726,-9.722042,8.685405,-6.228990,4.339518],[4.136644,7.108202,-2.598578,-2.321988,0.084027,8.073241,-5.659607,-4.096655,-1.533476,-1.293881,-1.563647,5.892866,2.574384,-2.670582,-9.417090],[8.140183,-9.591033,-0.491502,7.259159,6.993900,3.017119,-2.815627,8.114026,2.233167,-0.993302,4.975729,-0.217992,-0.954839,3.985771,-7.326465],[-6.581613,6.458276,-0.048877,4.382981,-0.428892,-4.203551,7.440061,6.962463,0.404797,3.279022,-3.667420,-2.953428,3.954094,-1.359819,-3.334629],[-3.019109,-5.131585,6.708366,-5.480478,-5.137459,-8.913764,-3.980003,-6.394744,-6.631457,-3.896541,9.806772,-5.843101,-4.511508,-2.791141,-9.335369],[5.590120,2.128454,-8.748666,-0.943358,1.554461,-3.614555,7.430833,-7.516441,-4.556632,1.429619,-5.450257,-7.369516,3.333517,-4.267570,8.103065],[-9.774234,1.653060,2.066275,-7.886498,-7.633044,-2.786245,3.319818,-4.766117,5.971868,6.753261,7.624279,-1.262219,-5.194978,-5.452994,3.492396],[-9.948149,-9.871687,-9.875779,6.298775,7.026087,-0.753397,-2.626734,1.064168,5.859187,-1.492096,-4.207296,-0.243711,4.872084,-0.506528,0.361048],[5.313478,7.625369,-1.659635,3.388049,-8.426598,8.083017,8.936256,1.975467,-5.857933,7.434026,5.559072,9.446789,-0.928117,-4.732279,-0.465435],[8.338866,2.381873,-8.724597,-6.179385,-9.542917,-7.139544,4.763997,3.670803,3.731768,-6.769019,-1.658779,-5.573189,6.837553,-6.650759,3.458459],[-3.614985,5.777856,8.112261,3.426399,9.999090,-2.206497,4.466894,3.847118,-5.687097,0.810043,-2.721814,-0.970251,8.737980,3.220194,-9.505933],[-3.061233,3.579271,-5.950381,1.601563,-1.479286,8.853706,2.769678,9.621321,-8.238060,2.566788,-1.953951,2.270588,-6.691144,-4.321384,0.438061],[-7.340127,6.818759,5.542538,-9.775487,2.589135,3.658604,5.538391,-0.266356,-6.962825,8.194333,-8.152145,6.445086,-7.880423,-1.927843,1.957745],[0.079256,2.282444,-7.643275,9.689979,-1.258390,5.891552,9.813081,-8.591088,0.575151,-5.316878,-8.212304,-9.583393,7.157863,6.620828,-7.087589],[2.940143,-7.988407,-0.763864,0.227205,5.318918,1.712695,0.463196,6.815413,-6.115698,-1.905850,7.241885,5.285226,-6.168081,3.274811,-7.620307]],[[8.193506,0.629686,-9.775812,-6.228589,8.074303,6.626992,-6.444434,-9.185416,-4.366392,3.056867,0.162637,0.686680,-0.966221,0.759795,1.833710],[3.373622,1.328165,-1.214328,9.962332,9.299318,-4.961639,8.920925,-9.604711,5.956461,-1.914731,1.106288,2.223645,-6.670832,7.094058,7.570972],[1.905472,1.235205,-2.763924,-3.937750,-3.775294,-7.322566,0.078172,6.779262,5.474904,-3.711846,4.351633,-5.982429,3.329422,1.521124,-8.385792],[4.886722,0.791187,2.484606,3.510198,7.987333,0.556721,-6.506915,6.017073,-8.928051,-8.344816,-1.811503,0.930567,6.116250,0.948618,4.474025],[2.570632,4.621726,1.592339,-7.835246,7.819323,-9.877698,-3.094932,8.387705,-2.901155,-4.882572,-5.476715,7.099573,6.735797,-4.384416,5.887027],[4.806322,4.997666,6.120484,7.144819,6.834272,-9.917628,6.880053,-4.239802,-1.898915,8.042461,-0.036709,-0.331662,5.830394,-1.914807,-8.452132],[1.710075,-0.720577,7.828772,5.367749,-8.570081,3.875074,-8.013971,5.164280,4.076133,0.028610,-6.603197,-5.758267,7.104224,8.872588,-8.318672],[0.727959,5.594614,-2.720021,-7.327589,3.360397,-5.375651,1.602272,0.021525,0.852716,-7.680157,0.588922,-3.502585,8.231320,9.331239,4.573934],[3.668349,9.146424,0.546859,8.430211,2.683188,-8.339767,3.803791,-0.965101,-1.248628,5.742985,1.900397,0.695093,-1.962893,4.069693,9.928887],[6.476360,-9.978131,2.578316,-9.323676,7.393575,4.500488,3.407664,6.125080,-9.365540,-8.018143,-1.372192,-0.038008,2.388150,3.487707,7.405989],[-1.572513,3.330281,6.124805,-8.222004,8.872985,-2.508390,5.207050,5.983537,5.185167,-7.299545,5.851657,4.450321,-0.064256,-5.796580,-7.836008],[4.092772,9.006499,0.636867,4.101217,-0.060196,4.058981,-9.139818,0.106988,9.393827,3.033548,-5.314433,-1.229076,-7.851007,-4.027039,-3.151116],[-8.219124,5.556092,-2.770528,5.808650,-6.319650,-3.685894,-8.540079,-2.552092,-6.881153,-0.519823,5.305894,-8.686059,5.345058,7.372460,-8.127697],[-4.827416,9.664306,-3.633445,-1.172594,8.876031,2.064060,-6.633457,-6.113605,7.281840,-7.314390,-7.794659,-7.588996,1.000602,-9.305971,-3.506948],[8.875215,7.818520,-3.625027,-3.677064,7.825173,-5.420728,-9.838797,-5.381246,0.645969,1.787426,-6.844759,-1.444672,7.787973,-1.645130,-3.634050],[-1.678947,6.600235,-7.272203,9.838156,-6.973288,-7.033656,9.422578,3.662789,-3.225834,-5.613636,-8.982324,2.364745,8.277569,-7.710210,-8.562864]]], dtype = "float32")#candidate|2409|(14, 16, 15)|const|float32
bop_2410 = relay.left_shift(call_2402.astype('int16'), relay.reshape(const_2409.astype('int16'), relay.shape_of(call_2402))) # shape=(14, 16, 15)
bop_2413 = relay.left_shift(call_2403.astype('int16'), relay.reshape(const_2409.astype('int16'), relay.shape_of(call_2403))) # shape=(14, 16, 15)
func_1478_call = mod.get_global_var('func_1478')
func_1480_call = mutated_mod.get_global_var('func_1480')
call_2417 = func_1478_call()
call_2418 = func_1478_call()
output = relay.Tuple([bop_2410,call_2417,])
output2 = relay.Tuple([bop_2413,call_2418,])
func_2428 = relay.Function([], output)
mod['func_2428'] = func_2428
mod = relay.transform.InferType()(mod)
mutated_mod['func_2428'] = func_2428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2428_call = mutated_mod.get_global_var('func_2428')
call_2429 = func_2428_call()
output = call_2429
func_2430 = relay.Function([], output)
mutated_mod['func_2430'] = func_2430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1930_call = mod.get_global_var('func_1930')
func_1932_call = mutated_mod.get_global_var('func_1932')
call_2443 = relay.TupleGetItem(func_1930_call(), 1)
call_2444 = relay.TupleGetItem(func_1932_call(), 1)
uop_2445 = relay.erf(call_2443.astype('float64')) # shape=(14, 16, 15)
uop_2447 = relay.erf(call_2444.astype('float64')) # shape=(14, 16, 15)
func_2304_call = mod.get_global_var('func_2304')
func_2306_call = mutated_mod.get_global_var('func_2306')
const_2449 = relay.const([-10,-10,-8,3,-5,-6,-1,7,10,1,-1,9,-7,7,-10,7,-3,-4,-3,-10,4,-5,9,-8,-8,-10,-1,6,-7,-8,-3,8,-2,-6,-1,-5,4,-1,4,5,-10,4,1,-7,-2,7,10,3,10,-10,8,8,-7,-7,10,-6,7,10,-9,8,4,1,3,-9,-3,-5,-4,5,2,6,-5,2,2,10,1,-5,5,10,-7,-10,7,5,10,5,-3,-6,3,10,10,-7,8,-7,-5,1,-5,6,8,-3,1,-10,9,3,-4,7,3,-6,-3,3,9,2,5,-5,-9,-1,8,-7,7,-1,2,-6,2,-5,-6,-5,-2,-10,4,10,-6,6,-2,3,2,2,-1,-1,10,-10,-6,-1,3,-5,-9,-2,8,10,-10,1,4,6,-2,10,2,-8,6,-7,1,8,9,-6,8,6,7,-8,1,-8,-10,4,-2,-2,-2,-7,-1,4,5,-6,3,10,9,3,-3,-4,-3,7,-9,-4,-8,-3,-8,-10,6,-7,-7,-3,9,8,-8,7,9,5,-2,10,-9,-10,1,-9,5,-9,5,9,-5,5,9,5,5,9,-10,-1,3,6,-1,-4,3,1,3,-1,8,4,-8,-7,-10,4,7,-8,5,8,-3,6,-4,-3,6,-9,-1,-2,-3,-4,7,-4,-1,7,-10,-6,7,-8,-7,-10,-6,7,-2,-6,10,-2,8,-5,10,-7,-9,3,2,-7,-2,-2,-5,-6,10,4,4,8,3,10,-7,6,-7,10,-10,-10,3,3,-3,-5,-10,2,8,-5,5,-6,2,8,3,-1,-4,-7,3,5,8,-6,10,4,9,-8,-5,-7,-8,-6,-3,-6,-8,-4,-3,-6,8,9,1,5,-3,6,-7,4,-8,-6,9,-9,-5,7,-1,-8,4,-6,-1,5,-4,-1,-4,6,-7,-4,-4,-3,-6,-6,-3,6,2,-2,-3,-8,-8,9,5,-5,-8,1,1,-1,-4,4,1,-5,-1,7,-4,2,5,-3,7,-5,6,-8,-9,4,10,-1,9,6,-10,4,10,-3,7,7,3,-2,-9,-6,1,-2,-9,2,6,7,-2,10,-9,7,1,4,8,-5,-6,3,-2,-8,7,-8,-9,9,-10,-1,3,6,4,8,-6,8,3,-9,6,5,-1,-6,-9,-10,-3,-7,1,-10,5,-6,10,-5,5,9,3,-7,-8,5,-8,-6,7,7,1,4,5,7,6,-10,5,-4,-5,5,6,1,-4,-6,4,-7,-1,9,3,-1,9,9,3,4,-6,1,8,7,1,-1,7,8,-10,-1,-4,-9,-8,-8,-4,10,1,4,-3,9,4,-7,-9,8,3,-2,4,1,-2,6,1,-5,-7,-2,-2,2,-3,7,-5,3,4,4,-7,-1,-4,-4,-3,7,-8,8,-10,-5,1,-6,7,-4,-5,1,5,-10,1,4,-2,3,8,1,-6,-2,10,-5,9,10,-10,-7,-6,-2,2,-2,6,6,9,-3,-4,5,-5,3,-10,10,-3,-4,8,6,3,6,-5,1,-10,10,9,9,6,10,4,-5,-10,6,7,8,1,-7,-6,10,-5,9,-6,10,8,-7,3,-9,-10,-1,-10,7,2,-8,4,-2,10,3,-10,9,6,-2,7,9,10,-6,-8,-2,7,-1,-9,10,-6,7,-7,-8,10,1,3,7,-10,4,6,-2,-7,3,-6,5,-7,10,7,-6,-7,-6,-7,-6,8,8,-5,8,-3,-7,-6,-3,-5,7,-10,-10,-2,-9,-1,-9,-6,-4,9,-4,3,-1,6,-1,6,2,3,-5,10,5,1,-10,-2,8,4,-2,-3,-9,-9,-9,-10,-1,5,-9,1,6,-9,9,-9,-1,-10,4,-7,4,3,9,6,-8,7,8,1,-2,-10,-10,-1,-4,3,4,-10,6,-4,9,-6,-3,-2,4,6,-4,8,-3,-4,-8,4,-8,2,10,-8,6,-3,10,-1,-9,-8,-3,-4,5,-5,6,9,-4,8,7,-10,-2,3,8,-4,-10,9,-1,10,-2,3,4,2,10,-1,-7,-1,6,1,-7,3,1,1,-5,-2,-5,7,-4,7,-10,-3,1,-6,-8,-5,5,-10,-9,10,1,-1,4,6,-6,4,-1,-2,10,1,8,1,-3,-10,4,-6,-10,1,-4,2,10,-7,2,3,-9,10,-2,9,-3,-8,8,4,-1,-2,4,7,9,-4,3,-2,6,8,-2,3,-5,-4,7,1,-5,-2,-8,-10,3,9,-3,-8,3,-7,4,-4,-3,4,-6,-5,-7,-9,-8,-3,3,8,-2,-5,4,-2,1,9,-4,-1,5,1,-7,-8,-1,9,-2,-2,-5,9,-8,-10,-7,-3,10,-3,-2,-1,-7,5,2,2,10,8,10,7,-8,-6,-5,-8,-5,-4,-7,5,5,-4,3,-1,-9,-8,-6,-8,1,-3,-5,3,-4,-6,-3,-7,-2,-7,6,-9,9,-5,-4,1,-8,-4,-5,-4,6,-4,-2,7,-3,-10,2,-5,7,-6,-4,8,1,-7,-1,-9,-9,-7,-3,7,-9,-4,-4,-4,8,4,6,2,-6,-8,-9,5,10,-9,6,-9,-2,-8,2,9,-1,-10,7,-8,2,-1,3,-9,9,5,3,-4,7,-1,-5,6,7,5,-9,-8,-9,2,-8,2,-10,-7,-1,7,-3,6,3,6,-10,-6,3,2,5,-3,-6,2,-4,-8,-10,-10,5,2,9,-8,10,10,7,7,-7,-9,-7,-10,2,3,-4,6,10,9,-6,8,10,9,-9,3,7,2,3,-3,9,6,1,-3,9,-8,-9,-3,4,10,8,-1,5,1,5,-2,1,8,-9,-3,-4,-5,9,6,10,7,9,-5,1,-10,-1,1,-2,4,-3,-10,-9,-2,3,-10,-3,-10,-4,7,-2,-2,-1,5,-5,5,-7,4,1,2,5,-8,-10,-3,5,2,6,10,-10,-1,3,10,2,-6,2,-9,-2,7,7,-10,9,10,7,-3,5,9,-1,-8,5,-7,1,-3,-5,7,-10,4,1,5,2,-5,3,4,5,6,-7,-8,-3,3,3,9,9,3,5,-7,7,3,8,-1,-1,-6,1,7,4,1,-10,-3,4,-6,-5,8,-7,-9,10,9,-10,-2,-6,5,8,9,8,8,7,1,-9,3,1,10,-3,-7,-3,-4,-9,-10,6,-7,-9,-6,-9,8,9,-3,-5,-4,-1,1,-1,2,7,6,-3,-8,10,-1,-5,8,-10,4,3,6,-8,-9,-4,-8,-4,4,9,-10,-8,-7,-9,6,-5,7,-8,-3,9,-5,2,-4,10,-4,2,8,-6,-2,2,-4,-8,-7,3,-3,2,5,-3,-4,9,-4,3,-10,6,4,9,5,1,4,-3,-8,4,1,-4,-2,3,3,-7,7,-4,3,10,-1,-9,-7,-9,-7,10,-4,-5,9,-2,5,5,5,2,-3,6,-3,8,-9,-5,-1,6,-9,-2,8,1,5,7,5,10,4,-3,-2,9,9,-10,8,8,7,-6,-5,-2,4,2,1,-1,-9,3,7,-7,-5,7,-2,-1,-6,-8,7,-1,1,4,7,-8,10,-10,-5,-3,3,-4,-6,8,5,1,7,-4,-7,-10,-2,1,-10,-8,9,5,-1,10,5,9,3,-1,2,-9,-2,3,5,-7,-8,-2,-8,10,-6,-9,8,3,8,4,-9,-10,1,-8,-9,3,-4,4,-2,3,7,-10,-2,10,7,1,-8,9,-4,8,-4,9,-8,9,-1,7,-6,5,-10,-9,1,-2,-3,-8,8,8,-7,-9,2,-4,-10,-3,1,-6,4,-7,9,6,2,7,-2,-3,4,5,-10,10,-3,8,-2,-3,4,-3,-1,3,7,-5,-6,7,2,7,2,-2,10,-6,-6,1,1,3,5,9,-7,-10,-5,-3,8,7,-7,2,8,-2,-9,4,-6,-3,-2,-4,7,4,-10,8,-6,9,-5,1,-9,10,5,-7,1,-4,4,-2,4,2,-2,4,-7,-3,4,-6,8,-2,-9,6,10,-3,-9,-5,2,7,-10,-3,-3,-7,-10,-1,-8,1,-1,5,6,6,-2,10,-10,7,-9,-5,7,-1,-7,-5,-5,-10,5,8,5,9,-6,-3,-6,-6,-1,9,-5,4,3,6,-8,-2,4,-6,-5,6,4,10,10,-4,9,8,2,-7,-3,-2,-9,-6,6,10,7,-7,-5,-10,2,-5,-5,-8,-7,3,8,-1,-2,2,10,-1,9,-9,-4,-1,-1,9,1,5,4,8,-5,-1,-9,-7,6,-8,-6,1,-4,-8,1,4,-7,-10,9,5,8,-1,10,3,-5,-2,8,3,-8,-10,2,-10,3,2,-7,-5,4,9,-3,-3,-5,-3,10,6,9,-8,-8,-10,8,10,-8,10,3,7,4,-6,6,-2,5,6,-2,5,-3,-10,8,8,-6,-9,8,3,-7,-10,8,9,8,1,2,-9,-2,7,10,5,4,3,9,5,-6,-9,7,-2,-3,-6,-9,-1,-5,-1,4,8,-10,-3,8,-5,4,-1,-1,-7,-5,1,-9,5,1,-8,-9,-6,-9,8,-8,4,-8,-5,7,5,-5,6,-1,10,6,-10,6,4,6,5,-6,7,3,2,4,-3,-6,-4,1,-10,4,2,5,-7,9,-6,-10,-8,5,-4,7,-1,-8,9,-1,-4,8,-4,1,5,-3,6,6,-6,-6,-1,10,6,-6,-5,6,3,5,-9,9,8,-7,-7,10,3,6,7,-5,-1,-9,-10,-6,-9,2,-9,1,5,2,10,-5,-8,-6,-6,9,4,4,5,8,-10,3,1,7,-4,8,-4,5,-4,6,-4,7,-7,1,-10,-7,9,-2,-5,-8,1,-3,1,-7,-10,4,10,-1,2,-10,-3,5,-10,-4,-9,6,-10,-4,-10,5,4,6,-1,-4,9,7,4,5,10,-8,2,8,-4,3,3,-6,9,4,6,-3,1,-8,2,8,-3,-9,-2,-8,-9,-10,1,1,7,10,-1,-10,-2,9,4,-6,-6,3,-3,-6,-2,-5,4,4,9,-5,-6,-7,7,-2,5,-7,6,1,-1,-2,-3,7,-4,7,5,-6,-10,9,10,8,1,8,-5,7,-6,-8,-7,-6,-6,-4,6,-9,-4,-4,10,-2,7,-10,-1,-6,-5,7,9,-1,-8,-5,-7,-3,-3,-5,-10,7,1,10,2,10,-2,1,10,-8,9,5,8,-6,6,5,10,-3,-7,2,3,-1,1,-8,-4,-1,10,8,5,-10,-5,5,6,8,-3,7,4,-2,-9,-8,-7,-5,-7,6,7,1,10,9,5,1,10,5,5,-9,-6,-9,-7,1,-7,6,-4,10,-4,-9,-8,9,10,10,-9,-4,-7,1,5,-8,10,10,2,7,-1,-6,-1,-5,-1,8,5,7,3,5,-2,4,-6,8,-4,-5,5,4,-6,-7,-5,9,9,3,5,-3,3,-1,-2,9,5,-3,-5,6,-7,10,-10,-3,6,2,-7,8,-2,1,9,-2,-5,-5,-1,6,4,9,7,-2,9,2,-8,-8,-9,-4,2,-3,2,-1,-8,2,-3,5,-4,-2,-10,-1,-7,9,-9,-6,-1,-9,-6,-8,5,8,1,-9,10,-8,-6,-9,7,10,-2,-6,-5,8,3,-8,3,8,9,9,-1,-10,-5,1,-6,7,-5,-3,-9,-2,4,-3,-5,-3,10,-4,8,-7,2,6,-7,7,9,2,10,10,-5,-5,4,7,-1,-3,6,3,-8,-9,3,6,-8,7,4,4,-10,10,-6,-6,-9,-5,8,6,-8,-10,-10,2,-7,-8,8,-8,10,2,6,-2,-6,-3,-6,2,-1,6,9,3,-8,-6,-2,7,-4,-9,-7,-7,-9,-9,9,-10,4,-6,-3,8,10,2,-8,-6,-7,5,6,-7,4,2,7,-4,8,-3,-8,4,7,-10,4,1,10,5,8,3,-8,-5,-8,6,-10,-7,-4,-4,7,-7,-9,2,4,7,9,-6,-6,-2,10,10,-8,8,-10,-2,8,9,8,9,1,6,8,7,-2,8,-6,4,5,-4,4,-1,-7,-2,-4,-9,-8,4,-8,10,9,-4,8,9,-9,10,10,8,4,2,-10,2,5,-4,7,3,-5,1,2,-9,-2,4,2,9,1,-5,-10,1,-5,10,-2,-7,9,-2,-7,-2,2,3,10,-10,-1,4,-4,-1,-3,-10,-4,-1,7,4,6,5,5,-10,9,-8,6,6,-8,-8,7,-7,9,6,3,9,9,5,-3,-1,-6,-5,-10,2,-7,2,-10,-9,-6,4,8,-7,9,-2,-9,-7,9,-7,2,-10,10,4,-8,-7,-9,-4,-4,3,2,-8,-8,6,-6,8,-2,6,2,-2,-3,5,-9,9,9,-1,-9,4,3,-7,-4,-6,5,8,1,8,-10,8,-1,5,10,2,6,-9,5,7,-2,8,6,-7,-8,1,-9,7,7,-1,-7,-8,-7,1,6,-3,-4,8,-7,-5,1,2,6,-1,1,-9,2,-1,-8,-5,4,-1,-1,6,-5,4,8,5,3,-8,7,-3,7,-10,-10,-7,4,-1,-8,-4,10,10,-4,-6,2,-1,1,10,2,3,6,6,-2,7,-6,5,-9,-5,-2,9,-3,5,-8,4,-4,10,10,1,5,-2,-1,6,-3,-2,-2,-3,3,10,2,9,-2,-7,7,4,8,-2,4,8,8,6,-10,4,-4,5,10,-1,7,7,-8,7,-9,-4,6,2,-1,-2,5,4,-10,-5,-5,5,6,7,2,-9,-10,4,4,-9,-4,6,9,-1,9,1,6,-7,5,6,5,-8,8,-2,-10,7,-4,-5,3,1,-4,7,8,2,-5,1,-4,6,3,-6,10,4,6,-6,7,-2,-2,3,-2,-3,5,-8,5,3,-3,8,10,-9,3,-7,5,-1,8,-8,1,9,5,3,3,-7,-4,-4,-9,3,10,-4,9,3,1,8,-3,6,-6,10,-6,10,4,-4,-6,-6,-5,3,-6,-1,-8,-7,-8,10,3,-5,-1,-6,-8,-7,-7,3,1,-8,-2,6,-8,2,-7,1,-6,-8,1,1,6,4,-1,7,-2,-1,-4,6,-9,9,3,-5,-6,6,-8,-9,-5,8,-9,-7,10,5,4,-5,10,-8,-5,3,-7,1,6,-8,2,-6,-2,3,-3,-5,10,2,7,-4,-5,4,-6,7,-6,4,2,-10,-4,-8,3,-8,7,-4,1,7,-5,-10,-7,-4,2,2,7,-2,-6,2,6,-2,-9,5,6,-8,4,-3,-4,5,-4,-2,8,-4,4,4,3,1,4,-3,-10,3,-6,-7,3,6,9,-8,4,1,-5,8,-1,-1,-6,9,-3,2,-1,2,10,-1,8,6,-1,-9,-2,-8,5,9,-4,-9,-1,10,1,7,-2,10,10,-3,3,-1,9,7,9,-5,-6,-1,7,-10,5,-10,6,8,-8,-6,1,5,7,3,-9,10,-7,4,-4,2,10,6,-4,1,-3,2,-4,-5,-10,-8,9,6,-9,-9,3,-2,-7,-8,-5,2,5,4,-2,2,-7,1,-6,-3,-5,8,8,-10,8,-6,6,1,-6,1,-5,-10,-3,10,7,-4,10,4,-10,2,4,-3,8,2,-10,-1,-7,-9,1,-10,5,-3,-4,2,1,3,4,6,9,-5,2,-6,-7,1,-4,-8,-3,-3,-10,-2,-9,-8,1,6,-3,-1,-8,-6,-1,3,-8,-4,4,7,-2,-4,-3,5,-8,4,-1,6,1,4,-1,-7,10,7,9,-7,-4,-4,-5,1,-2,-3,-9,2,-3,3,-5,-10,-4,-8,-4,3,-8,-6,-10,6,-1,4,-10,-3,-3,8,9,-3,-6,5,8,9,-9,-10,-2,-8,7,-7,8,-1,-6,-1,6,7,6,3,10,-3,9,-7,-2,-5,8,-6,-2,9,4,3,5,2,-10,7,-9,10,-6,8,-1,-6,5,-5,-9,-4,-4,2,5,-3,1,8,2,7,-4,-5,7,3,-1,8,-3,-2,-9,6,-2,-2,9,-4,-7,-9,3,-5,-5,-4,-7,8,-7,6,-7,-2,1,4,4,-3,9,4,-7,-6,-9,1,-3,3,1,5,-4,-9,-1,-7,2,-5,-3,7,-10,-4,-1,3,6,-5,-7,-5,7,6,-6,2,2,-1,8,6,-8,5,5,-5,-5,-8,-1,5,-8,8,7,-3,9,5,1,5,10,-1,9,-8,6,-1,2,9,-1,5,8,7,2,-7,1,-2,-4,-8,1,-1,5,-6,-10,-6,-1,-6,-8,6,-3,3,-5,-7,-10,-5,-2,-7,-8,1,-9,6,-7,-9,-5,5,8,-4,-2,3,5,-4,4,-3,6,8,-2,-5,7,3,9,-10,5,9,4,-1,9,7,7,-6,5,-8,8,-9,7,7,-10,-2,-10,4,2,2,-1,5,-10,-2,-4,-3,4,-9,3,-5,-2,10,8,7,-9,3,7,-9,10,-1,2,7,7,-4,-2,3,-8,8,-5,7,-4,-6,-8,-10,-6,3,7,3,7,-2,8,5,-8,-1,-9,-1,-9,-6,3,7,6,-9,-1,-7,-10,7,6,-4,-6,1,5,8,8,3,1,1,10,-2,-10,1,-10,8,10,-2,8,2,3,7,4,-1,10,2,-1,2,3,-1,-10,9,-10,-8,4,2,-10,1,1,-10,-3,10,9,5,-5,-7,3,7,-8,-4,7,-2,-6,-4,4,-7,-8,-10,1,1,2,-1,5,-2,4,-7,-1,1,-9,-2,7,-1,8,-2,-9,-5,10,-9,5,-9,-5,-4,-5,-4,8,-9,-7,9,-2,-6,-3,-3,8,-1,-1,-4,7,5,-10,8,4,2,8,7,-4,10,-4,2,6,5,-4,-6,-4,4,-9,-2,10,2,-7,7,-2,1,-1,-7,8,4,10,4,-2,-10,3,-2,7,-10,-5,-8,-3,4,-3,2,-5,-3,8,-1,-8,-1,-2,-3,-9,7,-9,4,5,-7,-10,-8,-7,2,-10,8,-3,-10,-4,-5,-7,10,9,-9,1,-3,-9,8,3,3,-4,-5,2,3,10,2,10,7,-3,6,-6,-6,9,1,5,-9,-7,-7,10,8,6,1,-1,9,-7,-9,-1,6,-9,4,-10,-5,7,-7,-10,1,4,-5,-10,-8,-9,-10,2,-2,2,4,-1,1,1,-7,3,-8,-1,2,7,-8,9,-9,-3,-1,-9,9,6,-9,1,9,-5,-3,-1,-8,6,-7,4,-5,6,-2,-3,-4,4,-7,9,-9,4,-9,-8,3,2,1,5,3,-2,-6,-9,-3,2,-9,5,-5,1,-3,-2,-5,10,2,-1,-9,-1,7,5,-4,1,10,-1,-6,1,-1,8,7,9,-3,6,3,-9,7,2,1,-5,1,5,8,9,-7,5,-4,5,7,3,9,10,-4,-1,8,-5,2,8,-6,-9,-3,8,9,7,7,5,10,5,-2,10,-2,10,-6,2,-5,-4,-7,6,-10,-3,-2,4,-6,9,-5,7,-5,1,-5,-3,6,-9,-4,9,7,-10,10,5,4,3,3,9,7,9,-3,-4,-4,1,7,1,-2,5,6,6,-3,1,9,4,-10,-1,7,-1,10,6,-10,3,7,-3,-9,-5], dtype = "uint16")#candidate|2449|(3584,)|const|uint16
call_2448 = func_2304_call(relay.reshape(const_2449.astype('uint16'), [14, 16, 16]))
call_2450 = func_2304_call(relay.reshape(const_2449.astype('uint16'), [14, 16, 16]))
func_2137_call = mod.get_global_var('func_2137')
func_2139_call = mutated_mod.get_global_var('func_2139')
const_2453 = relay.const([-6,-1,8,-2,-10,-9,2,6,-6,9,-6,-4,8,-7,8,-6,2,7,-1,-1,7,9,4,1,6,3,1,-2,3,9,5,6,-5,9,2,-6,2,10,-3,-3,1,2,5,-2,-5,-10,6,-2,-10,6,-1,-5,-2,-6,-8,-5,-6,10,10,2,4,-10,7,-1,2,-1,4,5,-10,10,-1,6,1,-9,-9,8,2,-4,-9,7,6,4,1,3,-10,9,7,9,3,-9,-8,6,5,10,-6,-3,3,2,7,-7], dtype = "uint64")#candidate|2453|(100,)|const|uint64
call_2452 = relay.TupleGetItem(func_2137_call(relay.reshape(const_2453.astype('uint64'), [10, 2, 5])), 1)
call_2454 = relay.TupleGetItem(func_2139_call(relay.reshape(const_2453.astype('uint64'), [10, 2, 5])), 1)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_2470 = relay.TupleGetItem(func_775_call(), 0)
call_2471 = relay.TupleGetItem(func_776_call(), 0)
bop_2478 = relay.mod(const_2449.astype('float64'), relay.reshape(call_2448.astype('float64'), relay.shape_of(const_2449))) # shape=(3584,)
bop_2481 = relay.mod(const_2449.astype('float64'), relay.reshape(call_2450.astype('float64'), relay.shape_of(const_2449))) # shape=(3584,)
output = relay.Tuple([uop_2445,call_2452,const_2453,call_2470,bop_2478,])
output2 = relay.Tuple([uop_2447,call_2454,const_2453,call_2471,bop_2481,])
func_2500 = relay.Function([], output)
mod['func_2500'] = func_2500
mod = relay.transform.InferType()(mod)
output = func_2500()
func_2501 = relay.Function([], output)
mutated_mod['func_2501'] = func_2501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_2589 = relay.TupleGetItem(func_1997_call(), 0)
call_2590 = relay.TupleGetItem(func_1998_call(), 0)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
var_2608 = relay.var("var_2608", dtype = "bool", shape = (1600,))#candidate|2608|(1600,)|var|bool
call_2607 = func_469_call(relay.reshape(var_2608.astype('bool'), [10, 16, 10]), relay.reshape(var_2608.astype('bool'), [10, 16, 10]), )
call_2609 = func_469_call(relay.reshape(var_2608.astype('bool'), [10, 16, 10]), relay.reshape(var_2608.astype('bool'), [10, 16, 10]), )
output = relay.Tuple([call_2589,call_2607,var_2608,])
output2 = relay.Tuple([call_2590,call_2609,var_2608,])
func_2630 = relay.Function([var_2608,], output)
mod['func_2630'] = func_2630
mod = relay.transform.InferType()(mod)
var_2631 = relay.var("var_2631", dtype = "bool", shape = (1600,))#candidate|2631|(1600,)|var|bool
output = func_2630(var_2631)
func_2632 = relay.Function([var_2631], output)
mutated_mod['func_2632'] = func_2632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2250_call = mod.get_global_var('func_2250')
func_2252_call = mutated_mod.get_global_var('func_2252')
call_2640 = relay.TupleGetItem(func_2250_call(), 0)
call_2641 = relay.TupleGetItem(func_2252_call(), 0)
const_2657 = relay.const([-4.689985,-4.825453,-3.745510,6.656422,-4.809212,-9.982566,-5.284420,8.876678,-5.472974,-5.758527,-0.863618,-9.489034,-8.585290,6.474308,-4.852539,-1.647491,6.605504,-0.521932,-2.167836,-5.094435,-3.799755,-6.872567,-0.758564,2.289156,2.518374,-7.060462,9.705593,-8.008622,1.661403,8.325870,0.732746,-8.652236,-5.473708,-0.987788,4.566253,3.323412,2.528241,-5.831341,-2.784983,5.135162,0.396372,4.218667,-4.592690,-6.604893,-3.257048,3.432545,1.027669,-4.630175,0.593503,9.357703,9.628649,-3.608590,-9.581200,4.880595,-3.416236,-6.256696,-8.580290,-6.323663,-6.858748,-4.793036,-0.942603,-3.230041,-1.388536,-7.373092,7.899270,-6.018769,-5.172974,-8.890355,8.240808,5.381894,-1.595354,-0.473988,-9.862469,4.512253,0.635823,1.987136,3.438804,-7.427101,-8.738534,6.158014,-0.281483,-5.735854,-9.078385,9.472100,-0.453949,3.230825,2.189184,-3.301487,-3.250289,-3.737176,4.938899,-7.834927,2.556075,-8.216205,0.901294,0.376816,7.983498,-6.802576,-4.225954,-1.925549,6.253777,7.758023,5.915513,-5.945352,2.524627,0.768091,-7.493872,-3.747339,-5.469755,3.400546,-1.275247,5.290239,-5.040392,-8.748607,-1.690674,-0.766174,-3.178461,-7.660548,1.161719,-1.441885,7.052312,8.567945,8.929297,5.519414,4.463779,0.378156,8.893657,5.038769,-9.973698,7.475163,-4.518945,-4.456985,9.369929,-5.753671,0.150962,-4.541879,0.984397,-2.738559,4.586199,-6.909143,-1.455362,-0.278945,3.698206,-3.387485,6.817859,-9.129722,3.979491,7.984543,9.733443,9.239700,-1.379801,0.623772,4.161412,-1.136344,4.227619,0.513772,-0.706614,0.569872,-9.151590,1.700751,3.020629,8.913137,1.986998,-4.441853,9.703589,2.683666,9.548001,8.145632,1.673938,9.079786,-0.825260,-0.526247,-8.973876,-8.172798,5.582707,6.925207,7.478692,8.676938,7.981387,3.541641,0.992205,-8.811937,8.961581,-3.488635,2.576932,8.039345,-6.873308,-1.295548,-6.474916,1.629322,-8.695478,-3.568354,-7.686247,-0.228367,8.724248,-7.263821,7.167829,3.554081,-4.129070,3.485549,9.031885,3.047075,-5.596264,9.602296,1.058947,0.668804,6.701102,2.494942,4.003894,1.335705,-1.422443,-6.924814,-7.470839,-7.655555,5.666509,-5.502436,3.195962,-0.504501,1.641263,-5.167865,1.225019,-7.370959,6.725346,-2.609587,-4.192397,-8.118370,9.649488,-6.997943,-0.705673,-5.862074,-9.316387,9.776593,-8.200750,7.949497,6.120293,-7.311793,3.354141,2.451011,2.012522,-4.905720,1.386848,-4.631691,1.683663,-7.715260,9.953752,1.320146,4.774584,1.507992,-3.430038,9.631345,-2.633327,-6.517197,-6.579927,4.408657,7.177142,4.041408,-9.139206,5.245541,-8.033550,1.651038,-6.834585,9.909263,0.618892,-9.330358,-3.188240,4.657930,8.508276,-4.790621,7.986746,9.559342,0.442402,1.707019,-5.068228,5.569935,-5.856890,6.689095,6.205098,-0.581973,8.957801,8.418485,-6.094428,9.226282,-4.697331,-5.554605,5.948761,7.833032,-1.443685,-0.181696,0.467647,-7.487394,-4.740208,1.009613,-0.615700,1.890750,-9.293606,0.421672,0.646897,-2.006072,8.054519,-2.723257,6.635311,7.394732,-5.025697,-8.454533,-4.179746,-9.026397,-1.796105,-1.515193,5.949048,2.850711,-7.267270,7.884767,6.591473,-1.269844,-1.072012,0.800665,-7.452633,3.065304,-7.821580,-0.180087,-5.967100,4.882287,-8.174114,-1.283332,7.527380,1.472094,-9.332733,-9.314455,4.591458,-3.654308,3.595478,9.066954,0.943316,-8.876432,-5.728675,-1.380212,3.958227,-0.135751,4.913584,-8.494254,-0.741242,0.797053,-4.307308,-4.599631,-8.863023,9.469440,-2.624922,1.610602,8.615288,7.317392,-1.969032,9.329431,5.715010,-6.356564,-5.743569,-3.160250,-3.997894,0.603191,4.875713,-7.587486,3.517190,2.710099,-0.280230,3.609496,-8.086664,-2.397283,-1.346792,0.737202,1.063312,-5.849033,-6.512373,-5.442726,-6.434053,4.282215,9.297290,6.481160,3.803726,-6.229102,7.625213,2.865736,-9.167044,7.879471,4.238740,-6.439593,-4.755813,-2.179469,4.632538,7.031853,8.932091,1.932400,8.708137,4.222139,1.442641,-1.380662,8.580356,6.606748,3.626763,-3.790170,3.207122,6.735790,0.222243,-3.938024,-3.492173,1.085092,-7.009507,-2.149261,7.426051,-6.413927,2.078330,-2.580248,-9.960190,-3.767301,-4.678748,6.489840,-9.343945,8.139367,-1.230114,-6.185417,7.017678,-5.724466,6.727783,6.628472,-0.997002,6.139937,1.157255,-1.651441,7.329738,7.693899,3.559340,1.874979,-4.285992,-1.304444,-2.650974,4.135175,-0.427006,3.879789,6.429085,-1.829798,-3.471941,0.050439,0.934464,-3.662307,3.891287,-0.181758,-7.416380,-8.352406,-9.527894,2.845644,6.822842,4.068720,3.129491,0.858670,9.960745,-5.579287,-2.059008,8.002153,-0.876930,-6.253999,-4.671654,-4.201889,0.227775,1.284242,2.270848,-2.795400,7.014192,-9.957669,9.361851,5.692533,-0.453659,-2.289476,-0.730258,-4.878745,3.118871,-8.977288,-6.224659,-8.399798,5.083696,7.943421,9.743912,6.704942,1.038113,1.279174,-9.939577,-0.912010,-0.543793,6.666399,-1.668216,6.974427,-0.765939,0.880289,4.336489,-4.380167,8.153615,6.664696,-9.407669,-7.367189,5.862217,-0.500284,-1.029751,-9.638019,7.389732,0.654934,8.472383,-2.271409,-7.764033,-8.986811,3.128425,-7.180999,6.704698,9.292064,1.242510,7.682850,6.253686,-1.571959,-9.136318,2.831471,-9.032446,-5.479675,6.537096,9.961143,-3.425639,5.031684,3.099445,5.561863,-2.385761,-2.365922,-9.907831,-1.852442,8.409184,8.337327,4.652859,1.939019,-6.117604,0.549874,-4.081243,8.917679,1.513279,5.645566,2.174998,0.724191,7.251134,7.531235,4.021513,-0.626649,-6.037740,8.888356,-6.866531,8.901708,-7.776266,-0.764593,5.121005,8.081207,4.734097,0.990518,7.600866,-5.108420,-2.726783,-8.096921,5.341716,-8.939525,4.357273,2.514644,3.142996,-0.683415,4.410927,-0.577720,-2.971892,9.862313,-3.490839,-4.919393,2.169146,8.552929,-3.199828,-2.622719,-9.139625,3.370466,-2.045553,1.100645,2.534256,1.533352,-7.224356,-9.665811,3.868463,-7.764838,-7.060963,-6.846713,1.033558,-6.587224,7.234996,7.116446,9.169142,9.143793,0.288907,1.329035,-1.062091,-9.703568,7.251535,-4.267895,-2.244289,-6.604690,6.886102,2.968121,-8.676567,0.958850,-0.404762,6.028130,6.107943,8.188690,3.753664,-8.936812,9.429541,4.654931,3.263349,4.148347,-6.484793,-0.587509,-6.347340,7.977241,2.362178,3.167037,0.897111,-7.777897,3.268438,-6.348448,-9.310021,4.110051,3.244945,-6.686183,-3.763242,-8.972443,-5.907338,-5.044781,-9.610838,9.709855,-8.696543,7.975809,-9.109333,3.535775,8.672113,-7.707523,-7.989265,2.035685,-6.290245,-6.505976,-4.968240,-1.414650,3.082609,2.129607,-0.194846,-8.204651,2.919354,-4.527802,0.886353,-2.680974,5.723823,-4.373051,-6.685226,7.588234,-4.296574,8.491010,4.440295,1.745634,-3.797680,-3.971394,7.338062,-2.284703,5.994343,-5.853619,-1.337990,2.250216,-3.694408,5.418706,-4.969452,7.663175,-4.692772,3.684457,-8.436509,-5.710150,5.490966,4.262183,8.246279,-9.803013,4.161530,5.244386,6.682293,0.521308,3.184084,-6.253214,-7.900726,-8.316465,-8.662276,-9.873422,-4.504521,4.103256,4.733591,-3.758558,-3.113686,2.516972,-3.607650,8.329393,-0.124017,7.673469,6.450348,5.239232,5.688055,-9.672607,2.539665,9.357574,-1.845504,9.604455,0.550004,-9.192557,-9.189321,5.296592,6.528954,-1.562549,-6.923330,8.543088,0.871131,4.045139,-1.286016,-2.650749,-9.717197,5.925596,0.682017,-1.834240,-1.459931,-4.849366,8.902039,1.594521,7.398157,-5.426707,3.201560,8.043050,-1.128129,-0.242013,0.661009,-7.820972,-0.727083,-6.465966,-3.820620,-7.239724,5.927916,-1.785606,9.404505,5.295234,3.593307,-3.639469,7.840290,-7.026729,-6.332188,-7.311808,5.091246,8.688240,-1.242587,7.584024,-4.208159,-4.690330,2.768620,-6.571709,-5.002743,7.094510,1.648060,1.270587,1.119981,-8.169207,-7.736711,8.251195,8.505537,4.531012,-7.910230,2.953020,-3.524971,1.007922,-9.541755,-8.441757,1.671705,-7.568491,5.205960,-9.140013,6.842450,-1.073284,1.238096,-4.872454,-5.655037,8.827479,-9.116837,-6.711513,-4.294127,-4.952924,4.275517,6.709382,-8.942405,-4.276373,3.354170,9.176467,1.621752,-9.225464,0.590990,-2.863323,-1.405069,2.342892,-0.017182,-9.679360,2.439545,2.283327,8.557593,3.029197,-2.049158,-4.640763,-3.874831,8.952579,5.563497,3.626590,-7.554373,1.964697,8.917271,7.296047,-3.905873,-1.355457,7.778279,-5.435626,-7.406309,-3.121547,4.276956,0.859311,-7.934833,-7.808352,-4.780297,4.430471,9.273086,-8.992679,6.691252,-9.528198,5.339805,5.884522,-2.620147,2.456691,0.020187,2.810235,-9.007548,1.799678,4.504030,8.917246,0.572921,-7.979072,0.056931,7.228236,4.355250,-0.416351,-4.056992,5.374912,5.662261,2.189984,-0.065986,-8.517409,9.069217,-5.077808,3.953678,9.388867,-1.108757,3.564182,-9.701792,-7.024885,-7.993909,-2.581269,-4.445506,3.965439,-8.144876,-7.081434,3.939242,-4.176490,-9.346905,-6.528873,-2.626581,-9.152693,3.865795,-1.561857,-0.972766,7.085418,3.976869,1.218623,3.753491,0.327161,-0.195353,6.098444,-9.805192,-8.991246,-2.545086,-2.423270,-2.073308,5.040127,-9.527769,9.791831,-1.661480,6.701306,-9.311991,1.402535,1.422309,-2.732226,-2.271671,-2.957833,9.913118,-0.336091,0.767311,-0.950780,2.415238,7.258138,3.866976,0.264311,-4.235884,3.698192,3.727847,-0.607259,6.170455,-7.129594,-1.304920,6.994944,-3.616612,7.386373,-4.456140,2.165344,6.333166,-5.076624,-0.320485,-4.958128,-3.975805,6.235424,-5.846487,5.198724,-4.507170,-3.366363,-7.195543,-3.408688,4.174659,-8.907016,8.360621,7.600733,-0.511587,7.355904,0.632128,4.963126,3.731665,-7.064255,2.499288,-7.288281,6.855021,-4.952499,-1.601909,-3.023161,8.901294,7.492109,6.493439,1.579097,-6.972518,-2.127101,1.301676,-4.096750,-9.804607,-0.359912,-1.130014,-5.918231,8.309745,4.532220,3.355980,7.968474,-0.193617,-4.933085,-1.495772,8.178115,-6.948094,-8.135518,-8.672344,6.711243,9.843770,-2.593598,-3.501129,-7.774744,2.414597,8.389151,0.555723,2.139586,7.743774,8.106168,-1.908240,6.543586,-0.790506,-6.056147,-8.492984,-4.507187,7.920887,2.603793,6.462637,-4.968823,4.385931,5.862338,-4.069423,-1.374264,-6.256091,5.655880,-2.078407], dtype = "float32")#candidate|2657|(1001,)|const|float32
bop_2658 = relay.bitwise_xor(call_2640.astype('int64'), relay.reshape(const_2657.astype('int64'), relay.shape_of(call_2640))) # shape=(1001,)
bop_2661 = relay.bitwise_xor(call_2641.astype('int64'), relay.reshape(const_2657.astype('int64'), relay.shape_of(call_2641))) # shape=(1001,)
uop_2673 = relay.acos(call_2640.astype('float32')) # shape=(1001,)
uop_2675 = relay.acos(call_2641.astype('float32')) # shape=(1001,)
output = relay.Tuple([bop_2658,uop_2673,])
output2 = relay.Tuple([bop_2661,uop_2675,])
func_2680 = relay.Function([], output)
mod['func_2680'] = func_2680
mod = relay.transform.InferType()(mod)
output = func_2680()
func_2681 = relay.Function([], output)
mutated_mod['func_2681'] = func_2681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_2694 = relay.TupleGetItem(func_775_call(), 3)
call_2695 = relay.TupleGetItem(func_776_call(), 3)
func_469_call = mod.get_global_var('func_469')
func_472_call = mutated_mod.get_global_var('func_472')
const_2701 = relay.const([[False,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False],[False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,False]], dtype = "bool")#candidate|2701|(2, 800)|const|bool
call_2700 = func_469_call(relay.reshape(const_2701.astype('bool'), [10, 16, 10]), relay.reshape(const_2701.astype('bool'), [10, 16, 10]), )
call_2702 = func_469_call(relay.reshape(const_2701.astype('bool'), [10, 16, 10]), relay.reshape(const_2701.astype('bool'), [10, 16, 10]), )
func_1678_call = mod.get_global_var('func_1678')
func_1679_call = mutated_mod.get_global_var('func_1679')
call_2705 = relay.TupleGetItem(func_1678_call(), 0)
call_2706 = relay.TupleGetItem(func_1679_call(), 0)
bop_2715 = relay.subtract(call_2700.astype('float32'), relay.reshape(call_2705.astype('float32'), relay.shape_of(call_2700))) # shape=(10, 16, 10)
bop_2718 = relay.subtract(call_2702.astype('float32'), relay.reshape(call_2706.astype('float32'), relay.shape_of(call_2702))) # shape=(10, 16, 10)
output = relay.Tuple([call_2694,const_2701,bop_2715,])
output2 = relay.Tuple([call_2695,const_2701,bop_2718,])
func_2724 = relay.Function([], output)
mod['func_2724'] = func_2724
mod = relay.transform.InferType()(mod)
mutated_mod['func_2724'] = func_2724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2724_call = mutated_mod.get_global_var('func_2724')
call_2725 = func_2724_call()
output = call_2725
func_2726 = relay.Function([], output)
mutated_mod['func_2726'] = func_2726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2763 = relay.var("var_2763", dtype = "float32", shape = (5, 1, 5))#candidate|2763|(5, 1, 5)|var|float32
uop_2764 = relay.erf(var_2763.astype('float32')) # shape=(5, 1, 5)
output = relay.Tuple([uop_2764,])
output2 = relay.Tuple([uop_2764,])
func_2771 = relay.Function([var_2763,], output)
mod['func_2771'] = func_2771
mod = relay.transform.InferType()(mod)
var_2772 = relay.var("var_2772", dtype = "float32", shape = (5, 1, 5))#candidate|2772|(5, 1, 5)|var|float32
output = func_2771(var_2772)
func_2773 = relay.Function([var_2772], output)
mutated_mod['func_2773'] = func_2773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1210_call = mod.get_global_var('func_1210')
func_1211_call = mutated_mod.get_global_var('func_1211')
call_2826 = relay.TupleGetItem(func_1210_call(), 3)
call_2827 = relay.TupleGetItem(func_1211_call(), 3)
var_2828 = relay.var("var_2828", dtype = "float32", shape = (13, 77))#candidate|2828|(13, 77)|var|float32
bop_2829 = relay.greater(call_2826.astype('bool'), relay.reshape(var_2828.astype('bool'), relay.shape_of(call_2826))) # shape=(13, 77)
bop_2832 = relay.greater(call_2827.astype('bool'), relay.reshape(var_2828.astype('bool'), relay.shape_of(call_2827))) # shape=(13, 77)
bop_2834 = relay.subtract(call_2826.astype('float64'), relay.reshape(var_2828.astype('float64'), relay.shape_of(call_2826))) # shape=(13, 77)
bop_2837 = relay.subtract(call_2827.astype('float64'), relay.reshape(var_2828.astype('float64'), relay.shape_of(call_2827))) # shape=(13, 77)
output = relay.Tuple([bop_2829,bop_2834,])
output2 = relay.Tuple([bop_2832,bop_2837,])
func_2841 = relay.Function([var_2828,], output)
mod['func_2841'] = func_2841
mod = relay.transform.InferType()(mod)
mutated_mod['func_2841'] = func_2841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2842 = relay.var("var_2842", dtype = "float32", shape = (13, 77))#candidate|2842|(13, 77)|var|float32
func_2841_call = mutated_mod.get_global_var('func_2841')
call_2843 = func_2841_call(var_2842)
output = call_2843
func_2844 = relay.Function([var_2842], output)
mutated_mod['func_2844'] = func_2844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1725_call = mod.get_global_var('func_1725')
func_1726_call = mutated_mod.get_global_var('func_1726')
call_2894 = relay.TupleGetItem(func_1725_call(), 0)
call_2895 = relay.TupleGetItem(func_1726_call(), 0)
func_1800_call = mod.get_global_var('func_1800')
func_1803_call = mutated_mod.get_global_var('func_1803')
const_2897 = relay.const([4.890127,2.083609,9.064428,-4.482845,4.744446,-5.644729,6.121535,-4.379478,-5.141590,1.968861,9.116206,-9.226890,3.666028,-0.368204,2.978016,-5.148692,-0.153606,-0.025289,6.012833,-6.813419,-0.589222,1.895100,5.736352,5.988134,5.473961,4.488290,4.936210,9.280764,-8.910474,5.464013,-3.699125,-5.566573,-1.353894,-9.858238,3.149649,-2.436659,0.142987,6.596765,1.483581,-1.125243,-2.231337,-2.815303,1.997772,-5.445011,0.040572,-6.371189,7.055289,4.212620,5.068486,-2.950694,-0.345648,-7.360976,-0.109218,-7.937093,5.616862,-6.249441,3.549759,2.565969,3.338755,-5.563682,1.985404,-0.951382,2.156508,-4.595424,5.341105,8.960946,-6.714536,3.233341,-3.183427,-7.989301,-6.877384,0.188572,0.713239,8.868899,-2.987441,-6.260504,-7.848804,8.203055,-7.287065,-2.348708,-2.172196,3.135991,-2.514866,9.283848,-6.898505,-8.257162,-3.586384,-1.699978,-5.299360,-6.485158,5.099657,-2.315650,1.458548,3.400658,-5.850284,2.118016,-8.688934,0.413031,1.428163,0.902814,-1.673190,9.747045,4.366801,7.218808,2.830408,-1.191939,-9.150738,-9.010532,-0.330536,6.958381,0.726305,6.795981,8.087269,-4.800346,9.368783,-0.990387,0.197869,1.435481,-0.455952,-4.741722,-9.985244,-3.001357,-6.034919,4.701654,9.098739,5.646631,9.816202,-0.162126,3.924991,-0.090340,-1.503361,-6.694944,-9.182950,-6.325285,-9.431909,-2.898521,9.423569,9.571076,0.584224,2.255709,9.884291,5.853041,3.073236,0.972145,8.031562,-6.129487,5.243983,9.812635,-4.234230,-0.861751,7.132723,8.980908,3.436888,-6.038016,9.605709,3.104659,-6.718981,-7.354674,-0.215254,-0.062301,8.559378,8.593842,0.605121,-2.661472,-7.750423,1.123730,3.882625,8.978755,3.715009,2.944533,5.285558,-7.522878,2.998541,9.845266,-0.531091,8.747120,-1.321665,-2.948024,-9.795054,9.896306,4.568356,-2.360423,-3.108597,-2.472239,1.678992,-7.080908,-5.211228,-2.229136,3.193754,-7.885461,5.327473,5.889497,-8.926506,0.400288,-5.450210,-0.772698,0.776145,-3.827715,-9.842299,-8.810766,-1.627768,-5.162392,0.315330,3.287079,-6.941678,-1.777517,2.420036,-2.208125,-0.275970,-6.208624,-8.531517,-9.134708,1.236385,2.756063,3.983635,9.057937,4.814970,2.644307,-1.586275,4.937505,-7.255090,-0.623692,-0.833218,3.276346,7.262300,3.382034,-6.983135,1.398279,1.940125,3.137447,-7.009286,-0.896222,-3.592334,-8.824561,-6.050735,-4.850309,-3.504423,9.221851,2.348823,0.073069,-8.408490,-1.683983,-5.892146,5.552589,1.665689,6.024438,6.426977,0.051857,9.801798,1.983737,3.991085,-9.651080,-0.433554,-2.931208,-7.674366,-6.661553,1.315708,-9.263434,6.134156,5.648044,-8.504556,-0.065595,-6.351423,-9.686981,-4.026191,-4.192772,2.406068,4.205226,-2.412988,6.820365,4.003660,6.273619,-8.294720,-6.610804,8.710194,-3.197616,-3.066579,-1.871505,-7.287562,-1.787800,-8.089205,2.274504,8.261958,6.165652,-7.330901,9.350146,8.568584,-0.238551,-9.004774,0.347266,-4.630069,5.185684,-0.456784,-3.092427,-4.459991,6.891065,4.589112,-3.109718,2.207177,-2.268769,-8.081889,2.282020,-6.430068,-1.131546,8.466807,3.148015,2.502059,-9.549059,-2.584569,2.930143,-9.340649,9.467973,7.544277,-4.813291,4.022144,-6.467938,-5.799382,6.546030,-4.427644,5.955325,8.851273,3.520401,-0.108295,3.871804,-5.945247,0.707247,5.046207,-0.874117,4.482107,-8.018401,6.380969,-4.455949,-6.317529,2.936704,2.537224,-9.510455,9.618733,-1.032395,-3.900319,-8.405663,-9.517467,5.593399,-6.955865,-1.590447,-0.441106,-0.075373,9.997007,-2.408905,5.606178,-3.768119,-3.090477,4.440870,7.646802,6.669710,9.680771,-1.173692,-3.358133,-9.876458,-6.312007,-0.954476,9.873746,-5.021952,9.189754,-6.228508,-1.846145,-9.950101,-4.608937,-6.186606,1.064609,0.518588,2.113024,-3.819174,0.878784,-4.731365,3.346071,-7.168761,-4.544879,6.874175,7.358358,-6.166468,9.099957,7.452308,-0.051091,8.452426,1.772120,7.347582,-4.647180,-1.674945,-4.073570,2.219278,1.753719,-9.791548,4.770366,-8.984453,0.704518,-5.087453,1.303497,-0.897274,-3.942747,8.417086,-8.459547,-0.902060,-4.981639,-3.924421,-1.824748,-3.226094,-8.650553,4.672209,-8.616137,-6.175014,-1.113025,-7.627592,-0.145669,3.569130,-1.840788,3.348833,3.262620,-3.438667,-1.407408,-0.830268,-0.799405,3.480391,0.579301,-7.937378,-8.695892,-3.949417,-6.949577,-8.345209,4.347582,6.223268,-2.297540,6.889733,-3.921443,6.779074,-4.510790,2.767603,-6.278568,3.772249,6.568589,2.857031,0.034642,-5.898521,0.293492,-1.968878,9.028784,-8.775687,-1.444292,3.428158,0.734488,-0.597988,6.219037,1.016105,-6.889602,8.422362,-2.504571,1.745951,-7.705388,3.941035,-9.667905,3.768958,7.501354,4.072055,9.721717,2.658028,6.552345,-6.793442,1.478550,-4.523653,6.739177,-0.011553,-5.841346,0.745772,2.994784,-2.763067,-7.704093,7.913952,-5.338864,-8.647787,-1.237370,-2.556658,3.306502,-7.173745,-5.937636,-0.222971,-7.625711,-0.265079,-3.881031,-4.339959,-3.126392,7.719144,-4.814475,0.178180,4.794585,-7.201689,9.385187,4.751811,1.593168,4.544966,-8.719437,0.686122,-9.386348,6.054170,8.713012,2.681926,9.987279,2.352057,8.168081,-7.619411,-1.882806,-5.284471,3.957844,-5.282418,1.510557,3.010504,7.023044,3.705863,-6.297647,-6.940806,-6.211063,8.607027,-0.100694,5.422389,4.840431,-7.029545,-6.278682,0.422507,-5.994593,-2.777010,-4.154690,4.047498,2.082857,4.507985,5.296443,5.530570,1.182074,3.140604,2.738544,-8.702756,-3.917083,-4.145790,2.697802,5.397939,0.888418,-1.705574,0.124753,7.873973,-4.804622,-4.736173,-2.114956,4.912373,-2.359018,8.364055,3.724818,0.796098,-3.812664,-4.078299,3.262785,4.329362,2.356032,-5.373912,9.240900,9.318143,0.209503,-0.135084,-6.868546,6.895487,-5.424006,-0.277984,-6.269996,-3.033760,-1.008504,5.909415,-2.953546,-3.845877,-2.867254,-1.087720,9.597721,1.624588,9.213062,-9.694437,3.981143,-2.405787,8.492783,8.416264,-2.815142,-1.222671,-3.412725,5.042947,0.923738,-7.551376,-8.806529,9.798914,4.215667,-8.348206,-6.671974,-9.501750,0.043402,-7.165519,2.428312,-7.102126,8.034427,-6.305161,-5.916050,-2.208470,-9.986317,8.788638,3.778517,-1.521129,1.779541,0.855812,0.250886,0.011043,-1.605270,3.005964,1.281291,-6.361675,9.149009,-7.824898,-3.486987,3.260671,-0.059057,0.800329,0.276919,-1.411667,1.564017,6.171387,3.765647,5.601062,-3.258133,3.356220,-8.867703,-0.062640,4.500989,-0.209310,3.953898,-3.156341,-3.713366,9.336304,5.367537,4.976078,8.288244,1.151421,2.980994,-5.801170,-5.766273,-8.673890,8.899591,-2.390519,1.987456,-7.727386,-2.541699,-6.472950,4.014038,-8.281829,1.127738,5.598093,-6.213166,0.747727,0.105858,4.897356,-6.897507,-7.024180,-8.859893,-1.702703,4.522557,-0.237210,6.806330,2.245581,-3.097395,5.917494,4.487175,-2.476407,2.772026,0.593507,-8.532759,-1.821890,-1.295091,-8.036720,4.855787,1.665713,-3.325646,-4.237016,-4.644903,-5.478604,-9.782236,1.198736,-2.514474,6.311453,7.579715,-2.872183,-9.101806,-6.479033,1.934718,6.674492,6.289631,-7.921696,0.275804,6.576862,-7.749779,-3.333310,4.662098,-2.722425,-3.982161,-4.133842,-8.916553,2.741654,3.128076,-5.692157,-9.457319,-0.809600,-4.522808,6.740415,0.555653,8.944631,-6.115272,-2.845347,8.514623,6.609194,8.344330,-7.989544,-7.054655,-7.335273,4.131878,1.109663,-0.181465,-2.929946,-7.575936,-1.193403,-4.251556,0.318330,-3.378332,6.504292,-2.132771,4.715798,-6.556688,8.102723,7.262600,-2.230052,-4.206360,-1.171572,1.956945,5.516853,2.502297,-5.575416,-2.872360,-9.387082,4.392815,-5.091593,8.165652,5.821749,2.113358,-1.706392,-2.858672,-0.762983,-0.584018,-8.924127,2.723502,1.049157,1.419568,-1.737501,3.303953,-7.353652,-7.493225,-0.474577,-7.791404,9.143021,5.860791,-5.059967,8.603882,-8.311871,-4.501140,6.740269,1.520865,-0.709543,-2.904969,-3.330438,7.958113,2.533460,9.222969,7.688053,5.196887,-6.728252,7.369659,5.723925,5.858623,-9.185085,-0.739048,4.715670,9.896627,-5.728747,-8.221060,8.571846,-7.011355,-5.664172,5.179764,6.682606,-0.291282,5.928133,9.219482,-6.897798,-5.846286,-8.430703,6.525243,-2.894311,8.211084,-1.880257,4.995994,6.442273,-7.051067,-4.157328,-5.446649,9.423100,3.862270,-6.403851,1.285928,2.654521,0.607120,-7.908054,2.384804,7.923526,1.815055,-2.336093,-8.544806,-8.719921,5.145953,-5.657624,8.454575,5.949978,-8.116676,3.375410,-7.867461,4.721322,-3.615167,-1.996857,4.568604,-7.388339,-3.184843,9.545631,-1.579677,2.854636,-8.833884,4.880301,0.328139,-6.598023,-2.632544,1.002138,-7.215535,1.911236,-8.340673,-9.172195,4.958121,1.961807,-3.457522,-6.926438,-5.226608,-6.825000,6.556246,-1.979404,-4.503501,-7.762813,-2.345599,-4.378272,6.834572,7.342633,3.033701,4.555274,-1.740427,-0.344819,3.624157,-7.624060,6.647538,5.864539,-4.008401,4.687252,-1.651070,-5.055497,-1.866141,-3.520547,-6.833308,3.357650,1.349588,-2.652097,1.534341,-6.590690,-9.377812,2.223974,-0.216102,-1.528913,-6.330275,5.975785,-9.153685,-8.711813,-4.755485,-5.013190,-8.437412,2.915159,-5.129963,-2.725870,-2.540991,-3.420713,6.126979,-9.096420,-4.792929,-1.843433,0.438211,-6.648581,6.810531,-7.504970,2.104102,-5.007314,-7.660288,0.847600,-8.141171,8.142896,1.477996,1.212290,0.903164,-4.666456,-7.198951,-4.979565,-7.624953,2.330198,6.432826,-9.527855,-8.998486,5.997947,-4.416474,8.031052,-7.743074,0.619680,5.776356,-6.980912,4.643910,-6.806045,0.398899,3.927618,6.275630,-6.780300,-4.701651,4.934991,4.222814,5.395747,-5.995957,-9.523900,1.472927,-5.369034,-5.070337,2.242597,6.002208,-3.908950,7.651110,-4.298048,-8.799182,4.387871,0.777049,-0.467301,8.346273,-3.835409,-3.222110,-2.959812,3.191066,-4.207501,2.993512,8.802775,-6.948707,-5.194940,1.005244,-5.798923,5.007978,-2.284100,4.511312,9.223243,-0.917099,-4.396865,8.806416,5.803744,9.652145,-8.128058,6.461946,3.989097,1.735935,2.391334,-8.068676,3.599854,-2.781408,1.342757,-4.581577,-8.362928,-8.679911,0.740961,-2.607829,-8.356734,3.155506,-4.029668,-4.317704,-5.690263,3.226938,-5.937331,6.812584,6.455181,7.236739], dtype = "float32")#candidate|2897|(1001,)|const|float32
call_2896 = relay.TupleGetItem(func_1800_call(relay.reshape(const_2897.astype('float32'), [1001,])), 2)
call_2898 = relay.TupleGetItem(func_1803_call(relay.reshape(const_2897.astype('float32'), [1001,])), 2)
output = relay.Tuple([call_2894,call_2896,const_2897,])
output2 = relay.Tuple([call_2895,call_2898,const_2897,])
func_2900 = relay.Function([], output)
mod['func_2900'] = func_2900
mod = relay.transform.InferType()(mod)
mutated_mod['func_2900'] = func_2900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2900_call = mutated_mod.get_global_var('func_2900')
call_2901 = func_2900_call()
output = call_2901
func_2902 = relay.Function([], output)
mutated_mod['func_2902'] = func_2902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2680_call = mod.get_global_var('func_2680')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_2905 = relay.TupleGetItem(func_2680_call(), 0)
call_2906 = relay.TupleGetItem(func_2681_call(), 0)
func_1725_call = mod.get_global_var('func_1725')
func_1726_call = mutated_mod.get_global_var('func_1726')
call_2925 = relay.TupleGetItem(func_1725_call(), 0)
call_2926 = relay.TupleGetItem(func_1726_call(), 0)
output = relay.Tuple([call_2905,call_2925,])
output2 = relay.Tuple([call_2906,call_2926,])
func_2934 = relay.Function([], output)
mod['func_2934'] = func_2934
mod = relay.transform.InferType()(mod)
output = func_2934()
func_2935 = relay.Function([], output)
mutated_mod['func_2935'] = func_2935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1210_call = mod.get_global_var('func_1210')
func_1211_call = mutated_mod.get_global_var('func_1211')
call_2944 = relay.TupleGetItem(func_1210_call(), 3)
call_2945 = relay.TupleGetItem(func_1211_call(), 3)
func_1553_call = mod.get_global_var('func_1553')
func_1556_call = mutated_mod.get_global_var('func_1556')
call_2952 = relay.TupleGetItem(func_1553_call(relay.reshape(call_2944.astype('float32'), [13, 77])), 0)
call_2953 = relay.TupleGetItem(func_1556_call(relay.reshape(call_2944.astype('float32'), [13, 77])), 0)
func_2304_call = mod.get_global_var('func_2304')
func_2306_call = mutated_mod.get_global_var('func_2306')
const_2965 = relay.const([7,-5,2,-3,-2,-7,2,-4,9,-9,4,-2,7,-4,-4,4,-5,-8,5,-9,-6,1,-2,-7,7,-3,-5,7,10,5,-4,-9,10,-5,-1,-1,-3,-6,-9,5,1,6,6,8,-5,-1,-3,-10,-8,-9,-1,7,-5,8,-8,-2,4,2,3,5,-4,9,-9,-2,3,-7,4,-8,-6,4,3,10,-6,-5,-6,-9,9,8,6,-6,-5,-5,6,7,2,-4,7,-10,10,-2,-8,-7,-8,4,8,4,2,10,5,-9,-7,3,1,-7,-1,-7,9,-5,-10,-2,10,10,7,1,7,10,3,8,-7,4,3,6,-7,2,3,-4,1,-6,-3,-2,-4,-2,4,-2,-6,-10,10,-2,10,-2,9,-5,-9,-9,-7,-1,-3,-10,7,-9,-10,2,6,7,-10,-10,-5,9,5,6,-9,3,-4,-1,6,-1,-1,-6,-1,-5,-10,-1,-10,-10,-10,-7,5,-1,4,7,-3,6,-3,1,3,-6,10,9,8,5,8,-7,3,-2,-1,6,-9,-8,-3,8,-4,1,10,4,-1,-7,2,-2,3,1,-2,8,9,4,4,10,-4,3,-10,5,-7,-10,4,3,3,1,-3,5,-6,8,10,-9,-8,10,1,-1,8,7,-1,-9,-6,-2,-3,3,-7,-9,-8,3,3,5,-1,-4,8,-10,4,5,-2,-1,5,4,6,9,4,-9,5,2,-10,2,-10,7,4,5,1,2,-1,-6,-2,10,-6,4,3,-7,4,1,4,9,-1,3,-2,6,1,-10,-8,8,1,5,-10,9,4,8,-9,5,1,4,2,7,-3,-8,-9,-4,8,4,-4,2,4,-5,8,5,-7,-5,8,-6,-10,3,-1,-10,10,7,-7,-3,10,6,-9,9,1,-7,-7,1,7,7,-2,-9,10,-8,6,10,9,-5,-8,-4,-10,9,6,-3,5,-3,8,1,7,-5,-9,8,-10,8,-9,8,-7,-7,6,-6,-1,-9,-10,-4,-8,-7,-5,-8,-1,-4,1,10,-8,1,-8,-6,5,-5,-4,1,2,-10,4,-4,4,-5,-2,3,3,-6,10,-7,7,-9,5,-4,7,-3,-2,7,-7,-1,9,-8,7,-1,-6,-1,4,-4,9,5,-10,8,-9,9,7,-4,-5,7,6,10,-10,-5,-2,-3,-4,10,1,7,-3,6,8,6,-2,-5,3,-2,-8,-7,-7,5,9,7,-3,9,-3,-8,5,-4,9,7,7,-6,8,9,-4,-7,2,-2,-2,-3,-6,-6,4,-7,-1,4,-6,7,2,9,2,8,2,1,4,9,-4,2,6,1,-6,7,5,-5,-10,4,2,8,-5,8,-10,9,3,-3,3,-6,9,10,-9,-3,-3,3,-1,9,-9,-7,-3,4,-10,-7,-1,1,-8,5,9,-8,-9,8,-1,7,-4,-8,1,-5,9,3,4,-9,8,-2,6,-9,-1,4,-4,4,5,4,-4,-6,-2,-2,-4,1,-8,9,4,-8,5,-9,-3,6,4,4,3,-2,1,-3,6,-7,8,-8,-3,7,8,-8,8,-9,-6,-2,-4,-3,-8,-10,-10,-1,-2,-1,5,5,-4,2,-7,-6,-5,1,1,-4,8,-5,8,9,5,5,7,-1,4,-7,-8,5,9,5,-10,1,1,-8,-4,-9,6,8,7,-8,-7,-2,-6,-8,-3,-7,2,-2,-5,-1,9,5,7,1,-3,5,-2,4,-3,2,-7,-10,-6,9,-5,8,4,9,7,5,7,-1,-6,6,1,-7,5,-5,-2,-10,-9,-8,4,-4,7,2,-1,4,1,-9,6,-9,5,-3,10,-3,4,2,1,8,5,-4,4,-4,-8,7,10,6,-2,4,2,1,-9,3,-6,9,-10,8,1,-1,6,4,6,3,8,-9,5,8,10,-3,2,-10,5,8,-1,-6,9,-4,9,-2,-5,9,9,-3,9,-7,-7,3,6,-9,-2,-3,4,-5,-7,2,-6,-1,10,-5,-1,2,-1,10,-8,-4,4,9,-5,3,-1,-5,7,3,-1,8,5,7,-7,-3,6,3,-5,7,9,3,6,9,3,3,-4,-3,3,7,9,-2,7,6,-2,-3,5,-2,-3,6,-5,-9,10,-10,-6,-2,6,1,-3,-5,-1,5,4,9,-10,-5,-4,6,10,8,4,2,-5,-3,-9,-3,-9,-8,-8,4,10,3,-6,7,-8,2,4,-1,-7,7,-5,8,-9,-10,-1,-4,-2,4,-7,-3,-5,-4,1,8,-2,-5,7,2,2,-2,-4,6,3,-5,-3,3,7,7,-5,-5,-3,-3,-8,6,-4,-2,5,6,8,-6,2,-8,-1,7,1,-4,-4,5,-1,-1,9,5,1,-10,5,-9,7,5,4,5,-6,10,-5,4,-5,-3,8,6,1,10,4,-4,1,-1,3,-10,5,9,-6,6,-7,6,6,7,-2,3,10,-6,-9,6,3,1,6,7,-2,-5,-9,6,-7,-3,4,2,5,5,-7,6,-6,9,4,6,-9,8,-4,-7,1,-9,-8,-1,10,-7,-6,6,-7,-6,3,10,4,3,-2,8,-10,8,-7,1,4,4,-10,-4,7,1,-3,-3,-8,-5,-5,-4,10,-3,1,-4,-3,-7,-9,1,2,-8,-10,1,5,8,7,-7,4,-3,5,9,6,-10,-6,2,2,2,1,9,7,8,-9,-2,8,-7,-5,-2,4,-7,-4,6,-9,7,2,-5,-5,-5,-1,-9,-4,-1,-5,-9,4,9,7,3,6,5,8,-6,-5,7,-8,5,5,1,9,-8,8,-3,5,-10,-8,6,6,-8,5,-9,4,-4,-9,8,7,-5,5,9,-5,-8,3,-10,-8,-10,-6,5,-2,-8,6,-1,3,-7,3,6,-4,-5,-10,5,-5,-10,-5,-2,4,8,-7,-2,-4,-9,-4,6,-3,6,-6,-1,8,-2,8,10,6,-1,-6,3,3,-8,9,6,5,-5,-3,-1,-10,3,-9,-10,-10,7,-6,-7,-4,-6,9,7,4,-4,-10,7,2,-10,3,-7,4,9,6,-9,-1,5,6,3,-6,8,-5,-6,7,7,9,-2,-10,1,7,8,4,7,7,-2,8,-9,-7,10,-2,-3,-1,-1,6,-6,-3,-10,-10,-9,-6,10,-2,-10,3,-2,-7,5,2,10,2,-10,2,2,-6,1,-1,-9,-7,2,9,6,-1,-7,-8,10,4,-5,-1,-10,-9,2,-1,2,9,9,-8,-5,7,1,-6,-7,2,-9,-10,-3,-10,-8,-5,1,4,2,-5,2,-7,-9,-5,-7,10,-1,7,-1,6,-9,2,5,-10,-10,3,8,5,7,6,7,2,-8,4,5,9,-3,4,8,6,-2,2,-3,9,-8,-3,-1,-5,-3,8,-10,-2,9,10,1,-7,-5,2,7,7,6,-4,-7,8,9,6,5,10,-5,3,-4,-6,1,-4,-9,8,3,6,1,7,-2,-7,2,-2,6,2,8,-9,-8,-9,-6,-6,-7,8,-6,7,-10,6,-2,1,-4,9,1,-10,5,-7,6,-1,-6,2,5,-10,6,9,4,7,10,-7,8,-1,-7,-5,2,8,6,-9,-1,-8,-5,-4,-4,7,1,-7,1,1,8,3,-1,-9,-10,9,-9,8,-1,-3,5,1,5,-2,-7,6,-8,-5,-9,7,-3,1,-3,-6,-1,-1,10,-2,-1,-3,7,6,-8,4,5,7,10,-2,6,9,-8,6,4,4,10,6,7,-3,-2,4,-2,7,-10,-5,8,6,4,-3,7,6,5,7,5,-8,-8,-6,3,2,-4,-10,9,-8,5,3,-1,1,2,-9,-7,4,9,-8,3,4,7,10,9,10,9,7,-2,-5,4,1,-3,9,-3,2,6,-5,-1,8,-3,7,-2,2,-1,-10,3,8,-6,-7,3,9,9,-10,-9,2,7,-3,-2,-4,-4,-1,8,4,-6,5,10,7,-7,10,3,7,-1,-8,-5,-9,-9,-5,-10,10,-10,3,10,9,-7,1,-3,10,9,1,2,-3,10,7,7,-6,-4,-6,1,10,-6,-7,-1,7,9,-4,-7,2,-4,-1,-8,-7,8,-7,-9,-6,-9,-6,-2,-4,10,-3,-4,-6,6,9,-4,6,-10,-10,9,-3,-9,-3,-1,-3,5,-8,3,-9,-1,2,-7,-7,1,-3,3,1,5,4,-10,-7,-5,6,-8,6,5,5,6,6,-9,-10,-7,4,-4,9,7,1,-8,-7,-1,-6,-1,-8,-10,4,3,2,4,3,-6,4,-8,-5,-3,5,-5,2,-9,-5,-3,10,5,-10,-2,9,-5,1,-1,2,-9,9,5,2,-10,-6,-7,2,10,1,5,10,-6,-3,-7,10,-1,2,8,3,2,-4,-8,1,8,-2,5,-3,2,5,-3,7,-1,4,-4,1,6,5,4,2,9,5,5,-2,-5,8,1,4,4,-5,-4,-4,-4,4,4,-9,1,4,3,-5,-2,-6,8,-7,9,3,-10,6,6,1,-8,-1,-6,5,3,-8,2,-10,-6,-5,10,-8,4,4,4,10,-6,2,-5,9,-6,-3,-3,-9,9,-3,1,-9,7,-7,-7,-4,-7,4,1,2,-2,-6,-7,3,-10,-6,2,-7,9,10,2,-8,8,3,-7,9,-9,4,3,-5,-8,3,8,-8,6,2,2,7,4,-3,2,-10,-10,-10,-6,3,5,3,-8,10,-1,-1,4,4,7,-1,-1,1,-7,-4,5,-6,-5,-6,2,-8,10,-5,-9,-4,-8,5,-6,-3,-9,-6,4,9,-1,-4,-2,-5,4,-9,-10,-9,-8,10,-3,6,7,8,-4,-3,-5,9,1,-2,-3,-10,-5,-3,-1,8,-5,-8,8,6,-5,10,-9,-7,-2,-7,-1,-10,-6,-9,6,-3,-2,5,-6,-4,3,-1,3,-5,7,10,9,-4,2,3,1,-1,4,-6,7,1,6,-2,-10,-3,-9,4,-4,-4,-4,-4,-3,-9,-1,5,-7,-9,8,1,8,-4,-7,-6,1,-7,7,9,8,-6,4,-8,10,1,7,-8,6,-2,2,-5,-10,-7,6,6,3,3,-5,-8,8,-3,-3,-2,2,-3,-1,-9,-9,-7,-10,10,-7,3,-6,7,2,9,-2,4,6,-10,6,-8,-4,1,-2,-9,4,2,-3,-3,10,10,-4,6,4,7,-3,-6,-3,-1,7,-5,2,-10,8,-1,7,10,8,1,2,-3,-4,2,-5,4,4,3,-7,-10,8,3,5,-9,9,-6,-10,6,9,3,2,5,7,2,3,-8,5,8,-5,4,7,-5,-10,-10,10,2,9,7,-5,9,-3,1,-8,-8,6,-7,2,9,-2,1,-2,-5,10,8,-1,7,4,1,-9,-5,1,-9,1,-6,-8,-8,-2,3,2,-9,-8,6,4,-6,-6,-9,10,-3,5,7,-10,4,-5,-4,-8,-2,9,10,5,8,6,2,3,-8,-9,-4,7,1,-4,-1,-9,-9,-10,4,7,-1,-7,-9,-10,-3,-2,-8,-2,3,3,8,-6,10,8,-3,6,-9,9,-5,7,-10,2,7,6,-2,3,-2,-7,-5,8,3,4,-9,2,-3,-2,7,10,10,4,-8,-9,6,-5,-4,-10,9,9,-8,1,-9,4,-7,-9,-10,-8,-10,1,5,-8,10,-4,-4,6,5,1,2,-9,10,5,-3,-10,-2,-2,6,-5,-7,-7,3,3,3,-1,1,-4,-2,-3,-4,1,-6,2,-2,-8,6,-10,-1,9,10,8,4,2,-1,-2,-10,8,3,-7,6,3,-3,3,7,7,-3,-9,-5,2,8,10,4,-5,9,-1,-9,9,9,-7,5,6,-9,7,-5,-1,-3,-2,-10,-6,-9,5,3,-2,-7,1,-1,2,-1,3,7,9,-6,7,-8,-6,-9,-6,7,5,5,6,2,-7,8,-8,-5,-7,10,8,8,-6,6,-1,10,-5,-3,-4,-2,7,2,-6,-4,9,-10,3,-2,7,3,-9,8,-1,-8,8,-7,-1,-2,-7,2,10,4,2,-6,-3,8,3,7,-5,-10,-6,-7,5,4,6,7,-9,-3,6,9,6,1,-1,5,3,10,2,6,9,-7,-7,-2,5,7,-3,-9,4,-2,8,3,-3,-1,-2,-10,7,5,4,-2,5,10,-6,8,-1,-6,-8,-10,-2,5,10,-5,7,-2,-1,9,4,3,10,-1,-4,10,4,4,-3,-1,8,-3,-8,-5,-9,-5,6,4,-1,-9,-10,6,10,-3,1,-7,10,4,-5,8,-5,-9,-1,1,8,7,-8,5,5,1,1,-6,8,-10,-3,8,-3,1,2,8,-1,-9,9,6,-1,1,5,-3,-1,7,-1,-10,-6,8,4,-7,10,3,-9,5,-4,-1,6,-3,5,9,-8,2,-3,-1,8,-9,3,10,-10,3,-1,-2,-6,-6,-8,-9,-5,10,3,2,-7,-2,4,4,8,8,2,8,9,-9,8,-3,10,10,5,9,-4,4,-4,4,8,3,5,7,5,1,5,6,-7,3,8,-4,2,2,8,9,-9,-5,-4,-8,-8,2,-3,9,3,-4,3,-5,7,4,-5,-1,-5,-1,-7,-8,8,-8,-8,-4,8,-2,-5,-7,-4,6,-4,-6,-3,8,5,-5,-5,7,10,4,7,-1,3,-5,-9,-8,9,-1,-8,4,-6,8,4,3,-7,3,5,8,-4,-6,-5,-7,8,-7,-9,-4,2,6,-7,9,8,-10,8,2,1,6,-4,-8,-2,-1,-8,6,6,7,3,-9,-9,-5,-7,10,4,-1,8,-1,8,3,-8,7,3,7,-1,-8,-5,7,9,-9,-5,1,2,6,-5,-8,-8,-7,1,6,2,10,8,-1,-9,9,-3,-7,-4,6,10,4,-1,8,5,-1,9,-6,3,5,8,-3,-6,-5,-3,-2,5,2,9,7,5,2,-1,2,-6,5,-1,-4,-1,7,-1,9,-7,3,3,9,-10,-2,9,-7,1,8,2,-6,2,9,2,-1,-10,-2,-6,9,-2,-7,6,-6,5,8,-6,2,-8,3,-10,-1,-1,-3,6,3,4,-8,3,7,10,7,2,5,-10,-1,5,9,5,-4,-6,8,8,-10,2,1,5,-7,5,8,-4,-6,-9,6,-6,4,9,2,9,-10,-3,2,-7,6,3,-9,-1,6,9,5,-4,9,-2,-3,-5,2,2,-6,5,4,4,-6,10,6,-6,7,1,-5,7,5,-1,-7,-3,3,-5,-9,-2,-3,-9,-2,-1,6,2,-6,-1,10,8,-4,-2,-2,-6,3,3,10,6,-8,-8,-8,10,-1,3,-3,-1,-5,-8,8,-5,1,9,-4,3,2,8,2,-4,-9,6,-1,2,10,2,-3,-10,-6,8,-6,2,2,9,-8,-1,-1,10,4,9,-4,-1,-7,3,-10,5,-4,5,7,-2,-7,3,-9,-4,-8,6,-2,-9,10,4,7,-5,6,-6,3,9,2,2,8,-4,-6,6,-9,-9,-9,8,-4,-6,4,5,-2,1,-8,-3,8,-3,-10,-4,-4,-10,8,8,5,-2,7,-8,4,3,2,-10,-5,-7,-2,6,4,2,3,5,5,7,-7,-1,4,-4,-9,-9,7,-1,-6,8,2,3,-1,3,6,-8,-7,-3,-2,-9,1,-9,-3,1,7,9,-9,-7,1,-8,2,-9,6,3,-6,1,2,8,-10,5,8,9,8,-10,7,-5,6,9,-3,10,-5,-9,-2,-2,-7,2,-5,-5,-8,-2,-4,4,-1,10,3,5,10,7,-4,4,8,-7,8,5,-6,9,-4,-8,5,-8,7,-8,-1,8,-6,5,10,-6,-3,-4,-10,8,7,-8,3,3,-3,-8,-8,10,-1,-7,-8,-1,7,-9,-2,10,3,4,-8,-8,9,-3,-2,-2,-9,-6,-3,-5,2,-7,1,4,9,-9,-6,-6,-3,-4,4,-10,5,10,-2,-8,1,9,-7,3,2,3,-9,10,1,-6,10,-8,1,2,-4,-8,-10,-4,-1,-2,-9,8,3,-9,-4,9,-3,8,8,-9,-2,5,3,8,-8,-6,5,-4,-2,5,10,-7,-5,-8,6,-3,-6,10,-10,3,1,7,-3,-8,-6,8,-7,10,1,4,7,6,8,3,8,-7,7,-7,-5,-5,8,-8,10,8,7,-9,-9,-10,-4,-8,10,1,9,10,-5,-8,8,-7,-5,-2,-8,9,-7,-6,-3,-1,-2,-2,4,-9,-9,-1,3,5,-4,-2,-7,10,1,5,4,9,-2,-7,5,3,-2,-10,2,-5,-4,1,-10,-7,8,-7,2,8,-8,-10,10,-8,-10,9,6,10,-3,-3,-1,3,4,4,7,2,9,-2,-5,-3,-9,-9,-8,-6,10,-1,-2,2,6,4,10,-1,-7,-9,-3,9,5,-10,-9,-4,-8,1,1,7,-1,-5,6,1,-10,8,-3,7,7,2,6,4,-3,3,8,5,1,-2,5,2,4,-1,9,4,7,-1,-2,-8,-9,10,3,9,-3,-2,-6,6,-6,-6,6,2,-8,8,-9,-4,7,8,-9,-3,9,3,-2,5,7,-5,-1,-6,-2,-8,9,1,-8,-6,-5,-9,4,8,-2,-4,-4,2,5,-4,-2,-8,-6,7,-8,-1,1,7,-4,1,-10,5,-3,-9,4,-5,-8,7,2,8,-8,4,10,5,8,8,-1,2,-9,-2,8,1,-10,10,4,-3,10,2,-1,-2,2,-7,-4,-7,-1,7,-4,-5,-5,-10,6,1,-3,4,9,2,-5,-6,-9,-1,2,10,-6,-2,-2,2,-6,-4,6,-2,3,10,-3,6,-9,-2,6,-7,-9,-5,-3,-10,2,7,-1,4,-3,3,-1,9,7,3,5,10,-10,6,-2,2,2,3,-8,-7,-1,10,9,-6,-1,4,8,2,8,3,6,-5,7,-2,-5,8,1,-10,5,9,-4,4,6,3,-3,6,-2,-10,7,3,-2,7,-9,4,-4,4,7,-9,-1,6,9,-7,-3,9,10,-3,5,6,9,-1,-6,-1,10,-5,-4,-9,5,5,3,-7,8,-5,-9,10,-4,3,4,10,-3,9,10,-2,3,2,-1,-1,8,-3,-9,-9,4,3,-3,3,10,5,9,-4,5,8,-4,7,7,2,-5,-8,-10,-8,-6,1,3,7,-5,2,-6,6,-9,3,-4,-1,6,9,-2,1,6,-5,9,-10,-2,4,5,7,4,-10,-7,-1,-4,-10,-5,-6,6,1,5,2,4,-5,-10,2,4,-4,5,-5,6,-5,10,-2,-5,2,4,7,-3,-4,-5,-7,-8,-10,-8,2,-10,-5,-2,-7,-9,9,4,-9,8,-8,-10,10,7,1,-4,-9,1,5,10,10,-10,3,5,-10,5,-4,4,5,5,-7,10,-3,8,4,-9,-7,3,4,-2,-1,-2,-4,-10,-6,-6,5,-8,8,-8,6,-9,8,-3,-2,-7,-3,-9,-5,-9,-7,5,2,-2,-1,-3,10,2,-7,-2,-1,3,8,-5,2,-4,-9,-1,-2,9,3,-10,7,-3,-8,-3,-2,5,6,-2,1,7,3,-9,9,8,-4,-5,4,-5,-10,1,3,-3,5,-7,-9,6,-2,-9,-7], dtype = "uint16")#candidate|2965|(3584,)|const|uint16
call_2964 = func_2304_call(relay.reshape(const_2965.astype('uint16'), [14, 16, 16]))
call_2966 = func_2304_call(relay.reshape(const_2965.astype('uint16'), [14, 16, 16]))
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_2968 = relay.TupleGetItem(func_704_call(), 1)
call_2969 = relay.TupleGetItem(func_706_call(), 1)
func_1281_call = mod.get_global_var('func_1281')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_2975 = relay.TupleGetItem(func_1281_call(), 0)
call_2976 = relay.TupleGetItem(func_1282_call(), 0)
output = relay.Tuple([call_2944,call_2952,call_2964,const_2965,call_2968,call_2975,])
output2 = relay.Tuple([call_2945,call_2953,call_2966,const_2965,call_2969,call_2976,])
func_2984 = relay.Function([], output)
mod['func_2984'] = func_2984
mod = relay.transform.InferType()(mod)
mutated_mod['func_2984'] = func_2984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2984_call = mutated_mod.get_global_var('func_2984')
call_2985 = func_2984_call()
output = call_2985
func_2986 = relay.Function([], output)
mutated_mod['func_2986'] = func_2986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2984_call = mod.get_global_var('func_2984')
func_2986_call = mutated_mod.get_global_var('func_2986')
call_2989 = relay.TupleGetItem(func_2984_call(), 5)
call_2990 = relay.TupleGetItem(func_2986_call(), 5)
output = relay.Tuple([call_2989,])
output2 = relay.Tuple([call_2990,])
func_3004 = relay.Function([], output)
mod['func_3004'] = func_3004
mod = relay.transform.InferType()(mod)
output = func_3004()
func_3005 = relay.Function([], output)
mutated_mod['func_3005'] = func_3005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1478_call = mod.get_global_var('func_1478')
func_1480_call = mutated_mod.get_global_var('func_1480')
call_3073 = func_1478_call()
call_3074 = func_1478_call()
output = call_3073
output2 = call_3074
func_3080 = relay.Function([], output)
mod['func_3080'] = func_3080
mod = relay.transform.InferType()(mod)
mutated_mod['func_3080'] = func_3080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3080_call = mutated_mod.get_global_var('func_3080')
call_3081 = func_3080_call()
output = call_3081
func_3082 = relay.Function([], output)
mutated_mod['func_3082'] = func_3082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1007_call = mod.get_global_var('func_1007')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_3086 = relay.TupleGetItem(func_1007_call(), 4)
call_3087 = relay.TupleGetItem(func_1008_call(), 4)
uop_3096 = relay.atan(call_3086.astype('float32')) # shape=(10, 16, 10)
uop_3098 = relay.atan(call_3087.astype('float32')) # shape=(10, 16, 10)
output = relay.Tuple([uop_3096,])
output2 = relay.Tuple([uop_3098,])
func_3106 = relay.Function([], output)
mod['func_3106'] = func_3106
mod = relay.transform.InferType()(mod)
output = func_3106()
func_3107 = relay.Function([], output)
mutated_mod['func_3107'] = func_3107
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3119 = relay.const(-3.749709, dtype = "float32")#candidate|3119|()|const|float32
var_3120 = relay.var("var_3120", dtype = "float32", shape = (8, 13, 2))#candidate|3120|(8, 13, 2)|var|float32
bop_3121 = relay.mod(const_3119.astype('float32'), var_3120.astype('float32')) # shape=(8, 13, 2)
uop_3135 = relay.rsqrt(var_3120.astype('float32')) # shape=(8, 13, 2)
output = relay.Tuple([bop_3121,uop_3135,])
output2 = relay.Tuple([bop_3121,uop_3135,])
func_3142 = relay.Function([var_3120,], output)
mod['func_3142'] = func_3142
mod = relay.transform.InferType()(mod)
var_3143 = relay.var("var_3143", dtype = "float32", shape = (8, 13, 2))#candidate|3143|(8, 13, 2)|var|float32
output = func_3142(var_3143)
func_3144 = relay.Function([var_3143], output)
mutated_mod['func_3144'] = func_3144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1106_call = mod.get_global_var('func_1106')
func_1107_call = mutated_mod.get_global_var('func_1107')
call_3151 = relay.TupleGetItem(func_1106_call(), 2)
call_3152 = relay.TupleGetItem(func_1107_call(), 2)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_3161 = relay.TupleGetItem(func_1600_call(), 2)
call_3162 = relay.TupleGetItem(func_1601_call(), 2)
uop_3163 = relay.asinh(call_3151.astype('float64')) # shape=(10, 16, 10)
uop_3165 = relay.asinh(call_3152.astype('float64')) # shape=(10, 16, 10)
uop_3171 = relay.log(call_3161.astype('float64')) # shape=(1001,)
uop_3173 = relay.log(call_3162.astype('float64')) # shape=(1001,)
output = relay.Tuple([uop_3163,uop_3171,])
output2 = relay.Tuple([uop_3165,uop_3173,])
func_3176 = relay.Function([], output)
mod['func_3176'] = func_3176
mod = relay.transform.InferType()(mod)
mutated_mod['func_3176'] = func_3176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3176_call = mutated_mod.get_global_var('func_3176')
call_3177 = func_3176_call()
output = call_3177
func_3178 = relay.Function([], output)
mutated_mod['func_3178'] = func_3178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
call_3218 = relay.TupleGetItem(func_804_call(), 0)
call_3219 = relay.TupleGetItem(func_806_call(), 0)
output = relay.Tuple([call_3218,])
output2 = relay.Tuple([call_3219,])
func_3230 = relay.Function([], output)
mod['func_3230'] = func_3230
mod = relay.transform.InferType()(mod)
output = func_3230()
func_3231 = relay.Function([], output)
mutated_mod['func_3231'] = func_3231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1007_call = mod.get_global_var('func_1007')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_3282 = relay.TupleGetItem(func_1007_call(), 0)
call_3283 = relay.TupleGetItem(func_1008_call(), 0)
func_1553_call = mod.get_global_var('func_1553')
func_1556_call = mutated_mod.get_global_var('func_1556')
const_3285 = relay.const([9.461403,-3.552804,-6.176576,-4.963865,-1.999010,9.128484,-7.165456,-7.852998,-1.354212,3.303319,-2.437849,-0.699519,4.463665,-9.629148,1.472794,-0.148684,4.507092,3.933486,-5.315948,6.000603,-2.731064,-5.156088,6.972548,4.532861,-7.460420,2.318025,8.922525,6.832336,-4.669348,-4.940396,7.815238,-4.628016,6.559578,9.485163,-2.009131,-8.046479,8.659371,3.388523,-7.503248,9.234481,9.593083,8.960011,-5.569999,-9.523504,8.877025,-4.278949,1.050140,1.840283,8.178708,-2.683754,0.063751,-4.850636,2.334840,3.320522,-5.439556,8.104374,4.512230,0.658854,2.324986,-8.890369,-2.067781,5.063314,-2.117681,-5.846022,0.842098,6.031464,-2.382316,-9.752079,3.119145,2.642439,-4.429608,6.081242,6.670546,6.526708,-8.993080,4.141257,-2.030011,-9.505908,-7.013785,-5.425647,-1.081824,-3.290857,1.861351,-0.625947,0.057252,7.014898,-0.048043,0.267467,8.309472,-8.426017,6.034625,-8.133259,0.138052,-7.826589,6.944534,8.415845,-2.945140,-3.597211,-3.599785,-3.162751,-2.906207,0.300376,-3.184914,3.688302,4.390356,-4.206436,2.229094,4.255420,3.355609,-0.671376,-4.241745,-0.743226,-9.855184,1.888341,-0.822717,-0.496085,8.024491,7.876411,-1.632241,9.584925,3.740932,-0.324197,-9.522955,3.755533,4.138819,-4.574060,3.862151,-2.160263,-8.842152,4.352235,2.550085,8.844884,2.065231,2.828784,4.044040,-9.642583,-9.128362,-5.473568,-6.854498,-9.217365,9.316548,7.523251,-4.269363,-8.172559,3.225259,1.002816,4.339738,4.116228,2.767563,0.185180,4.423833,1.472893,-3.963081,-9.565199,3.856899,2.045460,-4.366483,-4.597059,-7.102976,5.343970,-5.688685,0.946283,9.186750,-0.157432,3.836069,-3.608460,3.175984,-4.552073,6.872926,-6.160461,2.913560,4.741087,0.401707,-6.315125,8.071721,8.519184,-7.228346,6.977949,-3.790896,3.154489,6.226212,-2.403678,1.053611,5.807661,-0.696765,-0.036584,9.118495,7.325122,0.123860,-3.999944,5.724976,-2.321918,-6.494805,5.931889,9.291877,-7.258902,-4.588338,-1.412520,9.395693,-6.982162,5.152357,-0.811378,1.528288,6.870709,5.086850,3.058506,-3.331141,0.834288,8.388877,1.480074,1.827006,-1.078743,-7.830734,7.076277,-8.414308,6.978859,-4.780274,-6.054526,2.706302,-5.025512,3.654033,3.957347,4.823172,2.317208,-6.251427,-6.923940,-3.913026,1.859982,0.519362,7.904891,7.365184,7.584632,-4.441930,9.851731,-6.694379,-0.026277,5.118067,8.735587,-4.351655,7.442321,2.363666,-3.703631,-7.035448,-9.226638,2.952510,7.849738,4.922517,-0.301138,-9.952150,3.703969,-1.092603,3.396310,-5.900602,-6.832857,3.802023,4.971616,1.202668,-8.619574,9.102535,6.484989,-0.343286,1.055502,-6.856582,7.520634,5.108688,7.111216,0.604940,3.888750,0.011583,-3.881628,-9.667726,0.072033,-6.903186,8.614053,-2.599636,-0.725348,-7.245784,-9.648086,0.717835,5.388779,4.535928,-6.831032,0.123122,-8.851676,-1.140659,9.814239,-4.944402,-0.367558,5.242597,-1.438419,9.464349,-8.444533,7.625625,-4.350033,0.393734,8.244213,-0.843828,9.043373,-7.324246,-9.246543,-2.172674,2.227597,-6.528110,1.067825,6.897813,6.471803,-4.919803,-2.233240,0.053666,7.411503,7.826880,4.123110,-8.092801,3.565550,-0.718682,7.604968,-5.706462,4.273642,7.654905,-1.590113,-9.155163,0.385693,0.388541,-7.967557,-7.641878,6.909859,0.500030,1.005919,2.724421,-7.535116,-3.044021,4.084807,-6.395281,9.910744,9.200388,-3.294226,8.925554,0.039230,-2.301640,2.136874,0.926328,-7.432897,5.081923,-8.545452,-6.559479,-1.314003,6.107115,0.131423,-8.469263,0.039023,-8.958411,-1.189955,5.294577,6.223491,6.152314,-0.487371,4.040006,9.085212,-7.055178,-7.497296,-2.173108,6.860010,-9.384354,8.828093,8.222240,-2.175494,4.871513,0.523170,-8.217911,-5.349527,-7.965916,-3.707151,5.736632,-4.337041,-8.032061,-9.416355,-0.726376,-8.002298,4.886923,9.884044,-9.315149,-6.259243,-2.864214,-9.321806,-0.534784,6.982841,7.883509,0.517432,9.939797,-1.838156,-3.763823,9.873912,-5.884476,8.662766,4.915762,-5.948654,-4.562796,7.388237,-4.454389,-9.017053,-4.806280,7.804688,7.820775,-3.845478,0.077371,-9.562465,-6.907526,-8.973257,9.879912,-5.992664,-8.716580,-2.240201,4.335804,-2.432026,1.356801,1.901475,-1.222701,4.871295,3.610206,-8.460553,-0.721413,-5.430880,-2.424940,7.771969,-1.105036,7.517662,-2.030208,8.543547,0.369926,-3.385509,-8.823179,8.392168,-0.065487,3.779265,-1.564216,-0.448857,-3.613048,0.377649,3.602010,4.752540,-7.407437,3.411398,-6.141473,4.127614,-4.832095,1.502836,7.384718,1.028794,5.451970,4.081193,-7.668498,7.393834,-2.638674,-8.992603,4.048532,7.906222,-0.052101,1.258531,6.252546,-5.461844,-5.080837,3.193531,-9.984063,9.316848,4.878448,-0.084719,1.549154,-1.156070,-8.210790,6.356168,-6.117379,-8.206849,1.977895,-7.868564,-5.188169,-9.923173,-6.408993,-0.063057,-0.661121,-3.522567,-1.240516,-6.132093,-7.294222,1.534470,4.280165,5.608837,3.210241,-3.891435,1.542144,8.818807,0.540513,-8.477193,3.334208,1.380163,-0.736323,7.012862,-7.336801,-2.110049,6.165728,2.352940,6.078205,-2.912648,-8.281596,8.446728,7.138965,4.545068,0.248952,-1.757302,-0.306781,-1.186620,-6.978005,3.364627,8.793478,2.880025,0.277588,6.314507,8.798195,9.477782,-2.423053,3.885078,-8.759753,4.386611,-8.184633,-2.170368,7.666809,-0.827974,6.988779,-3.769039,8.358158,6.005263,-7.077666,9.307055,-2.406726,-1.605316,-2.965505,2.511464,-5.787367,-6.035647,-2.640380,-5.554552,3.258476,6.935756,-2.291818,-2.069421,-2.905733,4.372385,-7.985197,-0.835494,2.742245,-3.863441,8.255786,-1.987694,-8.833999,-7.694679,-2.127117,-0.161530,2.433577,-8.824798,6.409593,-3.493219,-9.114040,-7.673883,-2.411061,1.942055,5.785051,6.516472,4.870389,5.472867,-5.799974,2.156033,-1.680758,8.145557,4.522428,0.722082,-7.328971,-3.765117,9.017111,8.086892,-8.618065,-8.358908,-1.698492,-0.878636,1.117162,8.350733,5.960436,-8.034283,-6.444700,-7.011065,3.363160,-0.114433,7.590550,-2.400343,-9.077141,-2.444916,7.568342,-5.188179,9.745569,9.888687,-0.645367,-9.541797,9.762693,9.138688,-5.296573,-0.224659,-7.345003,1.420444,6.212105,-9.730094,-6.308043,-1.942745,4.115209,0.851156,3.114160,-0.556597,-2.913618,-7.106029,8.269030,0.366331,4.579437,-0.963133,1.746978,5.330113,3.210986,-9.640359,-3.244401,4.539806,0.238665,-7.837666,-7.697455,7.691259,-0.574960,-4.110453,9.384569,0.030174,0.305356,-9.204425,-5.232059,-2.463997,-0.958091,4.292828,2.266099,-1.848413,3.964451,-4.110004,2.279305,-3.691831,0.760232,-4.969296,2.582035,0.423532,7.629523,4.005598,0.642068,4.248520,-6.462287,-1.927362,-3.496998,-3.061816,-7.797195,3.362514,-1.802526,6.768719,-5.651610,7.440618,7.780919,7.186666,-9.527557,-7.011903,-0.946656,9.068808,-8.377249,-7.912334,3.058904,2.624470,4.680773,5.467594,-1.674828,3.885427,-6.604460,-5.513780,3.047841,-0.282116,-4.814517,8.636282,2.520885,2.257551,4.411230,-4.868135,2.668478,-7.303837,-4.718226,-6.700258,-1.142539,7.945095,-1.012531,-1.161981,6.936426,-3.521190,-1.000956,-3.221205,-5.353839,6.896776,-0.692222,-0.726074,8.865997,-3.043721,0.394496,9.223600,1.215875,-8.238480,-2.913421,4.699628,-9.326626,-7.044098,-2.494921,-8.503183,-7.490713,-0.762291,3.726762,-6.030063,6.509513,-2.860188,-2.646902,-9.521457,-6.070958,6.442416,3.275865,1.347959,-4.871727,-1.575989,-9.323938,-9.585777,1.488607,9.177303,8.964800,2.087285,0.474607,1.060094,1.621464,3.688149,5.547700,8.239178,8.092382,-7.746627,-0.250785,-2.460248,6.352977,7.293398,8.241531,2.639238,5.204426,1.723782,-0.091147,-6.239319,-5.758488,7.175312,-3.993463,3.393425,6.806888,-2.401928,-3.597514,7.479671,9.427240,-8.854715,4.133448,4.701999,6.807191,6.405215,-6.983763,5.458274,9.901372,-8.983637,2.271524,-7.945979,9.101339,-5.783167,0.521907,9.455424,3.597357,-2.710693,3.084810,8.639447,-0.775372,-0.070257,-1.927972,-9.585076,-0.932418,8.482951,-3.327267,7.337958,-3.876884,9.129696,6.015628,-2.181282,9.802990,9.476973,1.573747,4.908058,-6.603156,-0.178723,6.074813,-2.643304,9.697295,-3.674326,4.748079,5.544331,7.262541,-8.200516,9.537275,7.671245,9.406404,6.207542,8.512205,-3.984749,-1.092320,-8.575476,5.769627,8.682677,1.387374,-7.609733,4.233738,-7.009822,8.392176,2.601856,-8.501119,8.381328,-1.755844,-2.666703,0.461344,0.527092,2.570092,1.310159,-3.598768,5.282189,-0.578448,2.084858,7.733084,4.175613,-7.109362,2.851679,7.776499,-5.174786,9.274824,-0.192261,4.912223,-7.085380,1.208120,-0.836734,-1.817212,6.391735,7.588169,0.459403,5.268420,3.114690,1.736145,-1.148593,6.001094,-6.041237,9.549660,8.399560,-6.952626,1.683447,-2.164332,-5.825393,9.463232,6.513800,-1.647757,1.932086,1.845779,6.062048,8.040928,-4.091995,-7.653837,1.893950,1.679653,-0.956032,-4.360776,6.121730,4.380816,1.258221,-1.944417,-4.518796,9.484527,-9.539709,-1.661568,-4.001876,3.876050,9.074610,0.600049,6.861163,5.832967,9.989624,0.608156,-8.203543,-3.949023,4.958823,2.123610,8.264203,8.384644,4.090626,3.894303,7.352804,-1.793719,-1.173462,7.264730,-6.511851,2.745681,-3.201139,3.697599,-2.204647,-3.305645,-5.766366,4.422682,9.328585,3.039665,-3.834755,-8.233762,6.857809,-2.206013,-0.867094,8.228004,7.785717,-6.966955,9.547895,-0.552913,1.271448,3.928022,-0.419429,8.613075,2.026537,4.685693,0.926624,0.875224,-6.123117,-8.513315,1.184591,-4.804448,4.771621,-2.467318,-0.857195,-1.889701,0.973219,2.114443,-6.570684,0.785351,7.612371,5.028331,-5.366165,4.851482,3.650833,-2.812722,2.145188,2.404779,1.074373,4.753734,-1.309000,-8.133316,0.481091,-3.681380,-0.982716,6.068519,-7.854600,5.814112,8.744274,6.802505,-2.928981,8.203538,-6.675475,-8.569254,-5.360189,8.315424,9.534852,-1.209923,1.169519,-9.207314,9.833267,1.086444,6.233687,-2.675629,7.417095,0.637011,5.810734,3.481719,3.287596,-2.796068,2.989820,-4.147813,1.129198,4.035522,9.263272,-7.117278,7.807155,-0.147332,-2.978762,7.616294,5.333049,-9.184523,9.260497,-2.436947,0.610479,-2.710483], dtype = "float32")#candidate|3285|(1001,)|const|float32
call_3284 = relay.TupleGetItem(func_1553_call(relay.reshape(const_3285.astype('float32'), [13, 77])), 3)
call_3286 = relay.TupleGetItem(func_1556_call(relay.reshape(const_3285.astype('float32'), [13, 77])), 3)
output = relay.Tuple([call_3282,call_3284,const_3285,])
output2 = relay.Tuple([call_3283,call_3286,const_3285,])
func_3321 = relay.Function([], output)
mod['func_3321'] = func_3321
mod = relay.transform.InferType()(mod)
output = func_3321()
func_3322 = relay.Function([], output)
mutated_mod['func_3322'] = func_3322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_682_call = mod.get_global_var('func_682')
func_683_call = mutated_mod.get_global_var('func_683')
call_3363 = relay.TupleGetItem(func_682_call(), 0)
call_3364 = relay.TupleGetItem(func_683_call(), 0)
var_3365 = relay.var("var_3365", dtype = "float64", shape = (13, 7, 16))#candidate|3365|(13, 7, 16)|var|float64
bop_3366 = relay.right_shift(call_3363.astype('uint32'), relay.reshape(var_3365.astype('uint32'), relay.shape_of(call_3363))) # shape=(13, 7, 16)
bop_3369 = relay.right_shift(call_3364.astype('uint32'), relay.reshape(var_3365.astype('uint32'), relay.shape_of(call_3364))) # shape=(13, 7, 16)
var_3383 = relay.var("var_3383", dtype = "uint32", shape = (13, 7, 16))#candidate|3383|(13, 7, 16)|var|uint32
bop_3384 = relay.greater_equal(bop_3366.astype('bool'), relay.reshape(var_3383.astype('bool'), relay.shape_of(bop_3366))) # shape=(13, 7, 16)
bop_3387 = relay.greater_equal(bop_3369.astype('bool'), relay.reshape(var_3383.astype('bool'), relay.shape_of(bop_3369))) # shape=(13, 7, 16)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_3388 = relay.TupleGetItem(func_1600_call(), 1)
call_3389 = relay.TupleGetItem(func_1601_call(), 1)
output = relay.Tuple([bop_3384,call_3388,])
output2 = relay.Tuple([bop_3387,call_3389,])
func_3408 = relay.Function([var_3365,var_3383,], output)
mod['func_3408'] = func_3408
mod = relay.transform.InferType()(mod)
var_3409 = relay.var("var_3409", dtype = "float64", shape = (13, 7, 16))#candidate|3409|(13, 7, 16)|var|float64
var_3410 = relay.var("var_3410", dtype = "uint32", shape = (13, 7, 16))#candidate|3410|(13, 7, 16)|var|uint32
output = func_3408(var_3409,var_3410,)
func_3411 = relay.Function([var_3409,var_3410,], output)
mutated_mod['func_3411'] = func_3411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2152_call = mod.get_global_var('func_2152')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_3429 = func_2152_call()
call_3430 = func_2152_call()
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_3442 = relay.TupleGetItem(func_1997_call(), 0)
call_3443 = relay.TupleGetItem(func_1998_call(), 0)
output = relay.Tuple([call_3429,call_3442,])
output2 = relay.Tuple([call_3430,call_3443,])
func_3450 = relay.Function([], output)
mod['func_3450'] = func_3450
mod = relay.transform.InferType()(mod)
mutated_mod['func_3450'] = func_3450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mutated_mod.get_global_var('func_3450')
call_3451 = func_3450_call()
output = call_3451
func_3452 = relay.Function([], output)
mutated_mod['func_3452'] = func_3452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mod.get_global_var('func_3450')
func_3452_call = mutated_mod.get_global_var('func_3452')
call_3523 = relay.TupleGetItem(func_3450_call(), 0)
call_3524 = relay.TupleGetItem(func_3452_call(), 0)
var_3529 = relay.var("var_3529", dtype = "float32", shape = (1600,))#candidate|3529|(1600,)|var|float32
bop_3530 = relay.less_equal(call_3523.astype('bool'), relay.reshape(var_3529.astype('bool'), relay.shape_of(call_3523))) # shape=(1600,)
bop_3533 = relay.less_equal(call_3524.astype('bool'), relay.reshape(var_3529.astype('bool'), relay.shape_of(call_3524))) # shape=(1600,)
func_2137_call = mod.get_global_var('func_2137')
func_2139_call = mutated_mod.get_global_var('func_2139')
var_3538 = relay.var("var_3538", dtype = "uint64", shape = (100,))#candidate|3538|(100,)|var|uint64
call_3537 = relay.TupleGetItem(func_2137_call(relay.reshape(var_3538.astype('uint64'), [10, 2, 5])), 1)
call_3539 = relay.TupleGetItem(func_2139_call(relay.reshape(var_3538.astype('uint64'), [10, 2, 5])), 1)
output = relay.Tuple([bop_3530,call_3537,var_3538,])
output2 = relay.Tuple([bop_3533,call_3539,var_3538,])
func_3541 = relay.Function([var_3529,var_3538,], output)
mod['func_3541'] = func_3541
mod = relay.transform.InferType()(mod)
mutated_mod['func_3541'] = func_3541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3541_call = mutated_mod.get_global_var('func_3541')
var_3543 = relay.var("var_3543", dtype = "float32", shape = (1600,))#candidate|3543|(1600,)|var|float32
var_3544 = relay.var("var_3544", dtype = "uint64", shape = (100,))#candidate|3544|(100,)|var|uint64
call_3542 = func_3541_call(var_3543,var_3544,)
output = call_3542
func_3545 = relay.Function([var_3543,var_3544,], output)
mutated_mod['func_3545'] = func_3545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2428_call = mod.get_global_var('func_2428')
func_2430_call = mutated_mod.get_global_var('func_2430')
call_3651 = relay.TupleGetItem(func_2428_call(), 1)
call_3652 = relay.TupleGetItem(func_2430_call(), 1)
output = relay.Tuple([call_3651,])
output2 = relay.Tuple([call_3652,])
func_3662 = relay.Function([], output)
mod['func_3662'] = func_3662
mod = relay.transform.InferType()(mod)
mutated_mod['func_3662'] = func_3662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3662_call = mutated_mod.get_global_var('func_3662')
call_3663 = func_3662_call()
output = call_3663
func_3664 = relay.Function([], output)
mutated_mod['func_3664'] = func_3664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3176_call = mod.get_global_var('func_3176')
func_3178_call = mutated_mod.get_global_var('func_3178')
call_3703 = relay.TupleGetItem(func_3176_call(), 1)
call_3704 = relay.TupleGetItem(func_3178_call(), 1)
output = call_3703
output2 = call_3704
func_3722 = relay.Function([], output)
mod['func_3722'] = func_3722
mod = relay.transform.InferType()(mod)
output = func_3722()
func_3723 = relay.Function([], output)
mutated_mod['func_3723'] = func_3723
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3779 = relay.var("var_3779", dtype = "uint8", shape = (14, 13, 1))#candidate|3779|(14, 13, 1)|var|uint8
var_3780 = relay.var("var_3780", dtype = "uint8", shape = (14, 13, 1))#candidate|3780|(14, 13, 1)|var|uint8
bop_3781 = relay.maximum(var_3779.astype('uint8'), relay.reshape(var_3780.astype('uint8'), relay.shape_of(var_3779))) # shape=(14, 13, 1)
output = relay.Tuple([bop_3781,])
output2 = relay.Tuple([bop_3781,])
func_3788 = relay.Function([var_3779,var_3780,], output)
mod['func_3788'] = func_3788
mod = relay.transform.InferType()(mod)
var_3789 = relay.var("var_3789", dtype = "uint8", shape = (14, 13, 1))#candidate|3789|(14, 13, 1)|var|uint8
var_3790 = relay.var("var_3790", dtype = "uint8", shape = (14, 13, 1))#candidate|3790|(14, 13, 1)|var|uint8
output = func_3788(var_3789,var_3790,)
func_3791 = relay.Function([var_3789,var_3790,], output)
mutated_mod['func_3791'] = func_3791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_3795 = relay.TupleGetItem(func_704_call(), 1)
call_3796 = relay.TupleGetItem(func_706_call(), 1)
func_682_call = mod.get_global_var('func_682')
func_683_call = mutated_mod.get_global_var('func_683')
call_3809 = relay.TupleGetItem(func_682_call(), 3)
call_3810 = relay.TupleGetItem(func_683_call(), 3)
output = relay.Tuple([call_3795,call_3809,])
output2 = relay.Tuple([call_3796,call_3810,])
func_3815 = relay.Function([], output)
mod['func_3815'] = func_3815
mod = relay.transform.InferType()(mod)
mutated_mod['func_3815'] = func_3815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3815_call = mutated_mod.get_global_var('func_3815')
call_3816 = func_3815_call()
output = call_3816
func_3817 = relay.Function([], output)
mutated_mod['func_3817'] = func_3817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_3831 = relay.TupleGetItem(func_775_call(), 1)
call_3832 = relay.TupleGetItem(func_776_call(), 1)
func_2304_call = mod.get_global_var('func_2304')
func_2306_call = mutated_mod.get_global_var('func_2306')
var_3852 = relay.var("var_3852", dtype = "uint16", shape = (8, 448))#candidate|3852|(8, 448)|var|uint16
call_3851 = func_2304_call(relay.reshape(var_3852.astype('uint16'), [14, 16, 16]))
call_3853 = func_2304_call(relay.reshape(var_3852.astype('uint16'), [14, 16, 16]))
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_3860 = relay.TupleGetItem(func_2900_call(), 2)
call_3861 = relay.TupleGetItem(func_2902_call(), 2)
output = relay.Tuple([call_3831,call_3851,var_3852,call_3860,])
output2 = relay.Tuple([call_3832,call_3853,var_3852,call_3861,])
func_3864 = relay.Function([var_3852,], output)
mod['func_3864'] = func_3864
mod = relay.transform.InferType()(mod)
mutated_mod['func_3864'] = func_3864
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3865 = relay.var("var_3865", dtype = "uint16", shape = (8, 448))#candidate|3865|(8, 448)|var|uint16
func_3864_call = mutated_mod.get_global_var('func_3864')
call_3866 = func_3864_call(var_3865)
output = call_3866
func_3867 = relay.Function([var_3865], output)
mutated_mod['func_3867'] = func_3867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_3921 = relay.TupleGetItem(func_1600_call(), 2)
call_3922 = relay.TupleGetItem(func_1601_call(), 2)
output = call_3921
output2 = call_3922
func_3928 = relay.Function([], output)
mod['func_3928'] = func_3928
mod = relay.transform.InferType()(mod)
mutated_mod['func_3928'] = func_3928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3928_call = mutated_mod.get_global_var('func_3928')
call_3929 = func_3928_call()
output = call_3929
func_3930 = relay.Function([], output)
mutated_mod['func_3930'] = func_3930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2724_call = mod.get_global_var('func_2724')
func_2726_call = mutated_mod.get_global_var('func_2726')
call_3969 = relay.TupleGetItem(func_2724_call(), 2)
call_3970 = relay.TupleGetItem(func_2726_call(), 2)
func_1007_call = mod.get_global_var('func_1007')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_3974 = relay.TupleGetItem(func_1007_call(), 1)
call_3975 = relay.TupleGetItem(func_1008_call(), 1)
output = relay.Tuple([call_3969,call_3974,])
output2 = relay.Tuple([call_3970,call_3975,])
func_3981 = relay.Function([], output)
mod['func_3981'] = func_3981
mod = relay.transform.InferType()(mod)
output = func_3981()
func_3982 = relay.Function([], output)
mutated_mod['func_3982'] = func_3982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1160_call = mod.get_global_var('func_1160')
func_1161_call = mutated_mod.get_global_var('func_1161')
call_4015 = relay.TupleGetItem(func_1160_call(), 0)
call_4016 = relay.TupleGetItem(func_1161_call(), 0)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_4019 = relay.TupleGetItem(func_626_call(), 0)
call_4020 = relay.TupleGetItem(func_628_call(), 0)
func_3981_call = mod.get_global_var('func_3981')
func_3982_call = mutated_mod.get_global_var('func_3982')
call_4035 = relay.TupleGetItem(func_3981_call(), 0)
call_4036 = relay.TupleGetItem(func_3982_call(), 0)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_4037 = relay.TupleGetItem(func_2900_call(), 2)
call_4038 = relay.TupleGetItem(func_2902_call(), 2)
func_1007_call = mod.get_global_var('func_1007')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_4039 = relay.TupleGetItem(func_1007_call(), 1)
call_4040 = relay.TupleGetItem(func_1008_call(), 1)
func_1828_call = mod.get_global_var('func_1828')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_4043 = relay.TupleGetItem(func_1828_call(relay.reshape(call_4015.astype('int16'), [1600,])), 0)
call_4044 = relay.TupleGetItem(func_1831_call(relay.reshape(call_4015.astype('int16'), [1600,])), 0)
output = relay.Tuple([call_4015,call_4019,call_4035,call_4037,call_4039,call_4043,])
output2 = relay.Tuple([call_4016,call_4020,call_4036,call_4038,call_4040,call_4044,])
func_4045 = relay.Function([], output)
mod['func_4045'] = func_4045
mod = relay.transform.InferType()(mod)
output = func_4045()
func_4046 = relay.Function([], output)
mutated_mod['func_4046'] = func_4046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3662_call = mod.get_global_var('func_3662')
func_3664_call = mutated_mod.get_global_var('func_3664')
call_4049 = relay.TupleGetItem(func_3662_call(), 0)
call_4050 = relay.TupleGetItem(func_3664_call(), 0)
output = call_4049
output2 = call_4050
func_4054 = relay.Function([], output)
mod['func_4054'] = func_4054
mod = relay.transform.InferType()(mod)
mutated_mod['func_4054'] = func_4054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4054_call = mutated_mod.get_global_var('func_4054')
call_4055 = func_4054_call()
output = call_4055
func_4056 = relay.Function([], output)
mutated_mod['func_4056'] = func_4056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3722_call = mod.get_global_var('func_3722')
func_3723_call = mutated_mod.get_global_var('func_3723')
call_4090 = func_3722_call()
call_4091 = func_3722_call()
output = relay.Tuple([call_4090,])
output2 = relay.Tuple([call_4091,])
func_4103 = relay.Function([], output)
mod['func_4103'] = func_4103
mod = relay.transform.InferType()(mod)
output = func_4103()
func_4104 = relay.Function([], output)
mutated_mod['func_4104'] = func_4104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4130 = relay.var("var_4130", dtype = "float32", shape = (15, 1, 2))#candidate|4130|(15, 1, 2)|var|float32
var_4131 = relay.var("var_4131", dtype = "float32", shape = (15, 3, 2))#candidate|4131|(15, 3, 2)|var|float32
bop_4132 = relay.maximum(var_4130.astype('float32'), var_4131.astype('float32')) # shape=(15, 3, 2)
uop_4136 = relay.atan(var_4131.astype('float32')) # shape=(15, 3, 2)
output = relay.Tuple([bop_4132,uop_4136,])
output2 = relay.Tuple([bop_4132,uop_4136,])
func_4143 = relay.Function([var_4130,var_4131,], output)
mod['func_4143'] = func_4143
mod = relay.transform.InferType()(mod)
var_4144 = relay.var("var_4144", dtype = "float32", shape = (15, 1, 2))#candidate|4144|(15, 1, 2)|var|float32
var_4145 = relay.var("var_4145", dtype = "float32", shape = (15, 3, 2))#candidate|4145|(15, 3, 2)|var|float32
output = func_4143(var_4144,var_4145,)
func_4146 = relay.Function([var_4144,var_4145,], output)
mutated_mod['func_4146'] = func_4146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3106_call = mod.get_global_var('func_3106')
func_3107_call = mutated_mod.get_global_var('func_3107')
call_4156 = relay.TupleGetItem(func_3106_call(), 0)
call_4157 = relay.TupleGetItem(func_3107_call(), 0)
output = call_4156
output2 = call_4157
func_4175 = relay.Function([], output)
mod['func_4175'] = func_4175
mod = relay.transform.InferType()(mod)
mutated_mod['func_4175'] = func_4175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mutated_mod.get_global_var('func_4175')
call_4176 = func_4175_call()
output = call_4176
func_4177 = relay.Function([], output)
mutated_mod['func_4177'] = func_4177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4192 = relay.var("var_4192", dtype = "float32", shape = (5, 4, 6))#candidate|4192|(5, 4, 6)|var|float32
uop_4193 = relay.log(var_4192.astype('float32')) # shape=(5, 4, 6)
func_4054_call = mod.get_global_var('func_4054')
func_4056_call = mutated_mod.get_global_var('func_4056')
call_4196 = func_4054_call()
call_4197 = func_4054_call()
output = relay.Tuple([uop_4193,call_4196,])
output2 = relay.Tuple([uop_4193,call_4197,])
func_4210 = relay.Function([var_4192,], output)
mod['func_4210'] = func_4210
mod = relay.transform.InferType()(mod)
mutated_mod['func_4210'] = func_4210
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4211 = relay.var("var_4211", dtype = "float32", shape = (5, 4, 6))#candidate|4211|(5, 4, 6)|var|float32
func_4210_call = mutated_mod.get_global_var('func_4210')
call_4212 = func_4210_call(var_4211)
output = call_4212
func_4213 = relay.Function([var_4211], output)
mutated_mod['func_4213'] = func_4213
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4276 = relay.var("var_4276", dtype = "float64", shape = (9, 16, 3))#candidate|4276|(9, 16, 3)|var|float64
uop_4277 = relay.exp(var_4276.astype('float64')) # shape=(9, 16, 3)
bop_4281 = relay.not_equal(var_4276.astype('bool'), relay.reshape(uop_4277.astype('bool'), relay.shape_of(var_4276))) # shape=(9, 16, 3)
func_3176_call = mod.get_global_var('func_3176')
func_3178_call = mutated_mod.get_global_var('func_3178')
call_4284 = relay.TupleGetItem(func_3176_call(), 0)
call_4285 = relay.TupleGetItem(func_3178_call(), 0)
func_1478_call = mod.get_global_var('func_1478')
func_1480_call = mutated_mod.get_global_var('func_1480')
call_4288 = func_1478_call()
call_4289 = func_1478_call()
output = relay.Tuple([bop_4281,call_4284,call_4288,])
output2 = relay.Tuple([bop_4281,call_4285,call_4289,])
func_4299 = relay.Function([var_4276,], output)
mod['func_4299'] = func_4299
mod = relay.transform.InferType()(mod)
mutated_mod['func_4299'] = func_4299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4300 = relay.var("var_4300", dtype = "float64", shape = (9, 16, 3))#candidate|4300|(9, 16, 3)|var|float64
func_4299_call = mutated_mod.get_global_var('func_4299')
call_4301 = func_4299_call(var_4300)
output = call_4301
func_4302 = relay.Function([var_4300], output)
mutated_mod['func_4302'] = func_4302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4054_call = mod.get_global_var('func_4054')
func_4056_call = mutated_mod.get_global_var('func_4056')
call_4309 = func_4054_call()
call_4310 = func_4054_call()
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_4330 = relay.TupleGetItem(func_1600_call(), 0)
call_4331 = relay.TupleGetItem(func_1601_call(), 0)
func_3981_call = mod.get_global_var('func_3981')
func_3982_call = mutated_mod.get_global_var('func_3982')
call_4333 = relay.TupleGetItem(func_3981_call(), 0)
call_4334 = relay.TupleGetItem(func_3982_call(), 0)
output = relay.Tuple([call_4309,call_4330,call_4333,])
output2 = relay.Tuple([call_4310,call_4331,call_4334,])
func_4351 = relay.Function([], output)
mod['func_4351'] = func_4351
mod = relay.transform.InferType()(mod)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4351_call = mutated_mod.get_global_var('func_4351')
call_4352 = func_4351_call()
output = call_4352
func_4353 = relay.Function([], output)
mutated_mod['func_4353'] = func_4353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3662_call = mod.get_global_var('func_3662')
func_3664_call = mutated_mod.get_global_var('func_3664')
call_4354 = relay.TupleGetItem(func_3662_call(), 0)
call_4355 = relay.TupleGetItem(func_3664_call(), 0)
output = call_4354
output2 = call_4355
func_4384 = relay.Function([], output)
mod['func_4384'] = func_4384
mod = relay.transform.InferType()(mod)
output = func_4384()
func_4385 = relay.Function([], output)
mutated_mod['func_4385'] = func_4385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3321_call = mod.get_global_var('func_3321')
func_3322_call = mutated_mod.get_global_var('func_3322')
call_4423 = relay.TupleGetItem(func_3321_call(), 0)
call_4424 = relay.TupleGetItem(func_3322_call(), 0)
output = relay.Tuple([call_4423,])
output2 = relay.Tuple([call_4424,])
func_4431 = relay.Function([], output)
mod['func_4431'] = func_4431
mod = relay.transform.InferType()(mod)
output = func_4431()
func_4432 = relay.Function([], output)
mutated_mod['func_4432'] = func_4432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4054_call = mod.get_global_var('func_4054')
func_4056_call = mutated_mod.get_global_var('func_4056')
call_4502 = func_4054_call()
call_4503 = func_4054_call()
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_4515 = relay.TupleGetItem(func_1997_call(), 0)
call_4516 = relay.TupleGetItem(func_1998_call(), 0)
output = relay.Tuple([call_4502,call_4515,])
output2 = relay.Tuple([call_4503,call_4516,])
func_4518 = relay.Function([], output)
mod['func_4518'] = func_4518
mod = relay.transform.InferType()(mod)
output = func_4518()
func_4519 = relay.Function([], output)
mutated_mod['func_4519'] = func_4519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_4541 = relay.TupleGetItem(func_775_call(), 0)
call_4542 = relay.TupleGetItem(func_776_call(), 0)
uop_4547 = relay.sin(call_4541.astype('float32')) # shape=(10, 16, 10)
uop_4549 = relay.sin(call_4542.astype('float32')) # shape=(10, 16, 10)
func_2934_call = mod.get_global_var('func_2934')
func_2935_call = mutated_mod.get_global_var('func_2935')
call_4551 = relay.TupleGetItem(func_2934_call(), 1)
call_4552 = relay.TupleGetItem(func_2935_call(), 1)
bop_4553 = relay.divide(call_4551.astype('float32'), relay.reshape(call_4541.astype('float32'), relay.shape_of(call_4551))) # shape=(1600,)
bop_4556 = relay.divide(call_4552.astype('float32'), relay.reshape(call_4542.astype('float32'), relay.shape_of(call_4552))) # shape=(1600,)
uop_4558 = relay.acosh(bop_4553.astype('float64')) # shape=(1600,)
uop_4560 = relay.acosh(bop_4556.astype('float64')) # shape=(1600,)
uop_4564 = relay.tan(call_4541.astype('float64')) # shape=(10, 16, 10)
uop_4566 = relay.tan(call_4542.astype('float64')) # shape=(10, 16, 10)
bop_4567 = relay.not_equal(uop_4558.astype('bool'), relay.reshape(uop_4564.astype('bool'), relay.shape_of(uop_4558))) # shape=(1600,)
bop_4570 = relay.not_equal(uop_4560.astype('bool'), relay.reshape(uop_4566.astype('bool'), relay.shape_of(uop_4560))) # shape=(1600,)
output = relay.Tuple([uop_4547,bop_4567,])
output2 = relay.Tuple([uop_4549,bop_4570,])
func_4572 = relay.Function([], output)
mod['func_4572'] = func_4572
mod = relay.transform.InferType()(mod)
output = func_4572()
func_4573 = relay.Function([], output)
mutated_mod['func_4573'] = func_4573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1210_call = mod.get_global_var('func_1210')
func_1211_call = mutated_mod.get_global_var('func_1211')
call_4605 = relay.TupleGetItem(func_1210_call(), 3)
call_4606 = relay.TupleGetItem(func_1211_call(), 3)
var_4615 = relay.var("var_4615", dtype = "float32", shape = (13, 77))#candidate|4615|(13, 77)|var|float32
bop_4616 = relay.maximum(call_4605.astype('int8'), relay.reshape(var_4615.astype('int8'), relay.shape_of(call_4605))) # shape=(13, 77)
bop_4619 = relay.maximum(call_4606.astype('int8'), relay.reshape(var_4615.astype('int8'), relay.shape_of(call_4606))) # shape=(13, 77)
output = bop_4616
output2 = bop_4619
func_4625 = relay.Function([var_4615,], output)
mod['func_4625'] = func_4625
mod = relay.transform.InferType()(mod)
var_4626 = relay.var("var_4626", dtype = "float32", shape = (13, 77))#candidate|4626|(13, 77)|var|float32
output = func_4625(var_4626)
func_4627 = relay.Function([var_4626], output)
mutated_mod['func_4627'] = func_4627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_4713 = relay.TupleGetItem(func_626_call(), 2)
call_4714 = relay.TupleGetItem(func_628_call(), 2)
output = call_4713
output2 = call_4714
func_4723 = relay.Function([], output)
mod['func_4723'] = func_4723
mod = relay.transform.InferType()(mod)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4723_call = mutated_mod.get_global_var('func_4723')
call_4724 = func_4723_call()
output = call_4724
func_4725 = relay.Function([], output)
mutated_mod['func_4725'] = func_4725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1210_call = mod.get_global_var('func_1210')
func_1211_call = mutated_mod.get_global_var('func_1211')
call_4753 = relay.TupleGetItem(func_1210_call(), 1)
call_4754 = relay.TupleGetItem(func_1211_call(), 1)
output = relay.Tuple([call_4753,])
output2 = relay.Tuple([call_4754,])
func_4757 = relay.Function([], output)
mod['func_4757'] = func_4757
mod = relay.transform.InferType()(mod)
output = func_4757()
func_4758 = relay.Function([], output)
mutated_mod['func_4758'] = func_4758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2152_call = mod.get_global_var('func_2152')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_4769 = func_2152_call()
call_4770 = func_2152_call()
uop_4771 = relay.acos(call_4769.astype('float32')) # shape=(1600,)
uop_4773 = relay.acos(call_4770.astype('float32')) # shape=(1600,)
output = uop_4771
output2 = uop_4773
func_4774 = relay.Function([], output)
mod['func_4774'] = func_4774
mod = relay.transform.InferType()(mod)
output = func_4774()
func_4775 = relay.Function([], output)
mutated_mod['func_4775'] = func_4775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3080_call = mod.get_global_var('func_3080')
func_3082_call = mutated_mod.get_global_var('func_3082')
call_4789 = func_3080_call()
call_4790 = func_3080_call()
output = call_4789
output2 = call_4790
func_4806 = relay.Function([], output)
mod['func_4806'] = func_4806
mod = relay.transform.InferType()(mod)
output = func_4806()
func_4807 = relay.Function([], output)
mutated_mod['func_4807'] = func_4807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4384_call = mod.get_global_var('func_4384')
func_4385_call = mutated_mod.get_global_var('func_4385')
call_4866 = func_4384_call()
call_4867 = func_4384_call()
func_1828_call = mod.get_global_var('func_1828')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_4915 = relay.TupleGetItem(func_1828_call(relay.reshape(call_4866.astype('int16'), [1600,])), 0)
call_4916 = relay.TupleGetItem(func_1831_call(relay.reshape(call_4866.astype('int16'), [1600,])), 0)
output = relay.Tuple([call_4866,call_4915,])
output2 = relay.Tuple([call_4867,call_4916,])
func_4924 = relay.Function([], output)
mod['func_4924'] = func_4924
mod = relay.transform.InferType()(mod)
output = func_4924()
func_4925 = relay.Function([], output)
mutated_mod['func_4925'] = func_4925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_4929 = relay.TupleGetItem(func_626_call(), 2)
call_4930 = relay.TupleGetItem(func_628_call(), 2)
uop_4945 = relay.asin(call_4929.astype('float64')) # shape=(1600,)
uop_4947 = relay.asin(call_4930.astype('float64')) # shape=(1600,)
output = relay.Tuple([uop_4945,])
output2 = relay.Tuple([uop_4947,])
func_4965 = relay.Function([], output)
mod['func_4965'] = func_4965
mod = relay.transform.InferType()(mod)
mutated_mod['func_4965'] = func_4965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4965_call = mutated_mod.get_global_var('func_4965')
call_4966 = func_4965_call()
output = call_4966
func_4967 = relay.Function([], output)
mutated_mod['func_4967'] = func_4967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3722_call = mod.get_global_var('func_3722')
func_3723_call = mutated_mod.get_global_var('func_3723')
call_4992 = func_3722_call()
call_4993 = func_3722_call()
const_5002 = relay.const([9.022887,-3.656708,-8.561808,-5.845168,-0.121007,0.693916,-7.072459,4.579539,4.508165,-0.453931,-5.127821,-8.511165,5.125136,-7.895030,-4.108147,9.152804,1.520771,-9.563557,-2.416131,1.647215,4.344530,7.547924,-6.401294,-1.587222,-2.075873,-1.999421,1.370419,4.242264,-4.268671,2.413651,-5.362174,-7.015082,2.502524,1.758411,1.148519,-7.272302,9.788358,7.603300,-6.869839,2.022559,-2.985628,5.058337,1.932037,3.388481,-8.300421,-5.630623,7.296054,2.484542,-6.234506,-6.166083,7.320949,-1.051691,3.236831,-0.915303,0.078127,-9.508987,0.404727,4.222232,6.698494,-5.807093,5.049552,-8.645925,-3.167773,6.669035,-3.367840,-9.161375,4.803364,1.162352,-4.699510,-0.752044,0.263766,-8.994905,6.022146,7.839879,-2.412133,-2.723344,7.042528,-6.699246,-3.924735,-5.622475,-0.240453,-8.109318,2.547229,-2.310709,-0.557956,0.683712,8.976488,-5.385676,2.526521,9.184414,-8.164622,7.029738,-0.932769,3.075960,-6.703401,-2.402113,-0.471138,-1.022099,-6.623360,-4.616453,2.605106,-3.369347,0.097502,7.316538,0.711645,-9.223422,5.197569,3.497106,5.726505,-1.704915,-2.979738,-6.594945,-1.163020,-5.546945,4.942997,1.612690,-8.452238,-7.033528,-0.007873,-7.289889,-7.295110,1.365567,-7.058569,-6.200885,6.984547,1.702010,6.122969,5.172782,-0.819590,-4.181919,-3.803173,8.831391,0.540492,-8.458475,5.225440,5.880951,3.412138,8.501082,1.334885,0.881368,6.686004,-3.810082,1.896469,-3.347770,7.505514,0.564253,-5.090103,-3.238408,-7.544158,5.299707,4.988236,-7.395473,-6.999960,6.935819,0.259065,-1.782061,0.102940,9.368263,-4.589867,8.900911,-9.756333,4.686778,4.081118,-5.780057,-3.818863,4.735497,5.202931,-0.707681,-2.960444,9.302043,9.545883,-2.850486,2.841233,4.298448,2.626331,6.269851,2.788528,-2.568553,8.639356,7.479582,-5.962780,0.639481,-5.534882,2.722638,8.379375,-8.895345,4.988780,-7.520118,-0.470263,-8.762050,-9.161756,5.282435,8.748178,-0.882472,-7.399367,-9.048856,-8.041674,-9.645107,-6.682901,1.916301,2.659677,-1.747707,-9.499510,6.907808,-8.916272,-0.231178,3.595796,-9.778155,2.548010,1.785970,-5.559076,0.945049,-5.232927,1.029209,7.515130,-0.598606,-2.983666,3.919065,4.946848,1.169955,6.200571,-4.088907,9.488108,6.935144,5.050090,7.105196,-7.575799,2.446427,-9.828207,8.395497,5.390334,-9.747514,-9.129687,0.883717,-8.001736,8.706876,-9.662136,0.684943,8.399550,6.940399,5.444850,-3.996676,8.636169,-5.969917,5.675397,0.908757,-4.937472,-8.807541,-5.915749,-9.476080,0.688382,-5.067298,-9.081218,8.949340,-2.218245,-1.689834,2.425472,8.381247,-5.065764,3.133714,-8.031104,6.970106,-8.125151,8.950983,1.083880,-3.514527,-3.122804,-9.018012,-4.736853,-9.412557,-1.868253,-0.639008,1.223270,-7.363285,-8.438592,8.097792,3.865312,1.464729,4.792043,-6.076868,-3.207709,3.497096,6.823967,5.430577,9.653880,-1.419780,9.394178,-0.723857,-1.252040,-4.878154,-8.656914,5.330502,-9.102750,2.131110,-7.901040,-5.691600,-0.703291,4.812220,-0.364807,5.394894,-6.336927,4.376652,6.797745,-9.075900,1.617460,-0.823208,0.926887,8.972040,-1.662298,4.920287,-7.491088,2.754086,7.379065,-0.072635,-6.274751,1.792485,4.130345,-0.397939,-7.961945,-0.165881,4.206934,9.554800,0.346357,3.661088,-0.972975,-5.697486,-8.255567,7.710826,-2.307222,1.843933,-2.593805,4.752749,-9.236779,-3.249142,-0.599929,-3.184787,4.552655,-3.959414,-8.739642,-7.306739,-5.805177,6.632696,-0.694869,-3.759158,-5.255558,3.614222,6.891445,-8.225860,-0.757211,-8.933065,6.737640,0.430618,4.943625,2.079991,5.852658,-0.105647,-4.455962,-5.119811,-4.829577,2.781832,2.808274,0.640613,0.713582,-0.316804,-2.623967,7.020562,0.925530,-7.884152,-1.753270,-7.137630,1.831099,-1.124470,-8.156982,3.469203,8.284890,5.009617,1.556261,3.598967,-7.316095,4.290997,1.710564,-9.746696,2.000519,8.692706,8.584766,7.316579,-1.551169,-2.836960,-1.889177,3.172086,8.730271,-5.301660,-0.818590,3.328744,6.585816,4.500520,1.632512,0.355926,7.517468,3.547861,-9.103414,6.868153,-2.315790,3.472358,0.691199,-4.235791,6.712164,-0.830728,2.790748,-0.850438,-8.838824,6.702095,-3.868889,-8.233194,1.874311,-8.618628,-5.340296,-2.896208,9.103073,4.215108,-4.427292,5.521844,1.608426,7.015144,-9.074131,5.632209,-4.294814,-5.051070,-1.568801,-2.020404,-3.915094,2.969613,-3.397479,2.902236,-4.543804,4.611346,3.614850,-8.443683,-2.278658,6.488994,-8.354540,5.686033,8.037228,9.198522,-7.298595,1.285137,-0.970212,8.219633,-5.002853,-8.709286,2.170883,0.876545,8.838049,0.512421,-0.556799,-6.662382,-1.635308,3.031561,4.922970,3.729976,-8.680408,6.832211,5.305007,1.054713,8.729842,-1.332311,8.001114,7.830027,-9.923237,-8.811463,2.779702,0.179882,-8.250388,4.062723,9.193427,0.776798,1.313015,-1.537435,1.009639,-5.441345,7.833696,-1.002497,0.611837,6.415108,-0.255395,-8.447764,-4.750276,9.329302,-4.902341,4.646857,0.840586,2.664053,3.728125,-5.998637,9.074646,0.316663,8.830631,-6.098124,-9.712492,-5.260917,1.303510,-9.070899,-0.132092,1.776500,8.496238,-2.690669,1.208401,8.208215,9.784755,-5.929245,5.757197,-6.402188,8.506608,2.606048,-1.915117,-3.834226,-1.451964,-3.774317,9.165663,2.849643,-6.986572,5.961455,0.160464,-4.374846,-9.903960,6.087138,-5.851798,7.669299,-5.612597,1.658239,-8.627628,3.834729,2.552249,-5.993071,7.336660,7.321709,1.255416,1.625094,4.689662,-6.808669,-0.784759,1.114636,2.605969,-0.037381,3.216771,-1.359854,-0.840353,-7.627334,6.675828,-5.816329,-9.420331,-6.449547,-8.262128,-0.051762,4.092109,-0.455730,2.642701,2.205776,-0.338080,-8.866589,5.930370,9.863339,-6.201252,5.101579,-4.173754,-3.051123,4.989920,6.458676,3.239525,-2.136729,-6.659069,-0.570097,-4.519017,-1.187342,-7.941118,5.636330,3.523172,1.664522,-3.045970,-9.593158,-1.671130,-6.136354,6.775860,1.406417,0.007355,-2.742022,-9.356950,4.452651,-0.513413,1.213037,6.576673,-5.174906,-3.998916,-8.399257,3.833464,0.306643,-4.241425,2.826513,8.258929,-6.286132,-5.193854,-5.009740,3.113728,-5.775861,4.136473,-8.592223,-0.943375,-8.348512,-8.419277,4.018124,1.530912,4.288354,-7.003685,7.225431,-4.502693,3.990792,-2.846700,6.522902,2.039526,2.538520,-5.200803,1.891889,0.920302,1.553301,4.238253,0.208891,7.902585,-3.680157,7.231583,-5.649177,1.624524,5.267523,6.789205,1.218478,-9.384743,-3.380474,0.307479,3.986202,3.059169,-3.876637,4.289725,1.850006,6.000454,4.804287,6.634524,-7.618922,8.286591,4.748528,-7.668778,5.320238,6.234795,6.681168,-8.046168,3.661216,6.561031,-4.886779,3.774229,-9.438975,7.377226,-4.352713,4.671589,2.110070,-4.245992,1.038440,2.419634,0.451856,-4.077652,2.390801,8.282714,-5.570213,7.835877,8.109535,-7.142489,9.841977,8.531801,5.871378,-0.651331,8.174322,2.853001,7.908219,-8.609900,0.521707,-1.645571,9.931299,-1.604106,-2.512277,-5.037310,-5.618358,7.411066,-0.027176,3.754900,5.876857,-9.045148,-8.559899,-5.768244,-9.997420,-3.868689,4.595770,8.300938,-3.744748,4.029562,5.261211,3.467610,-5.353525,3.318123,8.250708,-9.310430,-8.257082,-0.056888,-3.998561,-4.761637,4.936323,3.355923,8.785625,3.895856,-1.428468,4.788687,-8.280716,3.731338,9.026828,0.481239,-0.514743,-9.382169,-4.963652,7.502871,7.757515,0.680730,6.981896,6.499720,6.892440,-8.619220,4.011297,1.896628,-9.155771,7.010727,4.635092,7.084232,-3.863356,-1.221566,-9.662832,-1.492307,-4.621406,-3.121987,-4.575947,-1.410512,-2.946941,0.793865,-8.059031,5.791368,0.427915,1.315620,9.489382,-4.903145,-4.927406,-2.437832,8.671875,-4.197806,-2.443055,3.226210,-0.535520,9.309713,-9.823353,1.833881,7.394167,-5.364218,6.227369,-3.229210,-3.976683,-4.232921,6.423926,8.697526,1.709954,-3.212189,-2.695629,-2.228201,-5.657906,4.606262,-6.771837,5.674291,0.297049,4.351239,0.974770,3.808314,-6.830210,-9.590144,-0.063463,-7.981181,2.133955,9.285423,-9.015910,6.667916,9.232105,-6.932596,7.303916,-0.600888,3.823104,0.627234,6.977833,-1.497877,-4.323439,9.040283,-2.389314,6.532724,9.164174,0.963835,-6.527806,-2.170198,8.315179,-1.658030,-7.733818,4.791194,-8.134150,4.812013,0.591996,5.092165,-6.016009,-6.919152,9.910299,1.782416,-6.948728,-2.402008,7.771688,5.531005,3.715159,1.405973,-0.932992,4.025841,1.641608,-6.344544,-3.049761,-1.909029,-8.608780,7.661419,-6.820672,-1.786544,8.404615,-7.529199,3.420258,4.165844,9.472160,6.506135,0.531260,-1.484495,6.364760,0.499247,-7.074398,-9.510367,-9.793301,-3.416955,-0.018144,-7.991481,-9.407903,-1.629921,-3.241931,-5.463133,-0.730288,9.494323,0.067442,-7.835373,-7.340117,-2.657391,-5.108987,9.091327,0.494237,3.965471,4.906911,9.192270,-5.737306,0.579203,-8.255909,-3.660877,8.942216,-4.619627,6.763307,7.256314,2.472099,1.635811,7.722014,-0.801867,-4.044787,-1.290353,7.208965,8.660815,-9.367221,-1.042328,5.229065,8.634209,-4.672455,8.411052,7.883624,9.131858,-9.101160,-1.153929,-2.977253,-4.260551,-1.890783,-6.226413,4.496477,-7.374261,-5.472434,-7.879341,3.431581,4.253405,0.487067,-0.248807,8.274864,8.358488,-0.321828,7.326333,3.032566,6.290483,2.186317,4.576042,-8.981031,-5.464529,3.581729,-8.536379,-4.158935,-1.487169,-3.142330,-9.107375,3.971138,2.515753,0.086242,-6.327664,4.999603,0.708662,0.993806,4.250680,-9.732236,-3.537666,-7.100733,-5.790730,-8.034346,-3.251438,4.859778,3.073651,0.816804,-7.492309,1.692713,3.217897,6.470752,7.562011,9.713936,-6.278479,-6.321684,5.238961,5.708898,-0.466499,6.862483,-2.524933,7.818415,9.356995,-0.417860,-6.715805,-5.067608,-6.945993,-6.657635,-5.698137,-4.719478,9.673295,2.566513,3.166377,-0.812134,0.225216,4.194762,9.172928,0.187109,0.215931,-4.679277,2.764913,8.316097,-4.302041,-2.273535,3.705549,0.008412,9.479368,-9.048808,3.221384,-4.498293,-6.073459,-7.559758,0.491277,-4.879197,-0.353566,-4.661733,8.829182,5.111575,2.040196,-6.397928,6.160286,3.669956,-0.514701,6.171247,-8.725550,-8.787135,1.071750,-2.883803,-5.002991,7.660955,-1.492376], dtype = "float64")#candidate|5002|(1001,)|const|float64
bop_5003 = relay.multiply(call_4992.astype('uint16'), relay.reshape(const_5002.astype('uint16'), relay.shape_of(call_4992))) # shape=(1001,)
bop_5006 = relay.multiply(call_4993.astype('uint16'), relay.reshape(const_5002.astype('uint16'), relay.shape_of(call_4993))) # shape=(1001,)
output = relay.Tuple([bop_5003,])
output2 = relay.Tuple([bop_5006,])
func_5008 = relay.Function([], output)
mod['func_5008'] = func_5008
mod = relay.transform.InferType()(mod)
output = func_5008()
func_5009 = relay.Function([], output)
mutated_mod['func_5009'] = func_5009
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5093 = relay.var("var_5093", dtype = "float32", shape = (12, 11, 14))#candidate|5093|(12, 11, 14)|var|float32
uop_5094 = relay.atanh(var_5093.astype('float32')) # shape=(12, 11, 14)
func_4431_call = mod.get_global_var('func_4431')
func_4432_call = mutated_mod.get_global_var('func_4432')
call_5098 = relay.TupleGetItem(func_4431_call(), 0)
call_5099 = relay.TupleGetItem(func_4432_call(), 0)
func_4774_call = mod.get_global_var('func_4774')
func_4775_call = mutated_mod.get_global_var('func_4775')
call_5100 = func_4774_call()
call_5101 = func_4774_call()
func_4054_call = mod.get_global_var('func_4054')
func_4056_call = mutated_mod.get_global_var('func_4056')
call_5105 = func_4054_call()
call_5106 = func_4054_call()
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_5112 = relay.TupleGetItem(func_1997_call(), 0)
call_5113 = relay.TupleGetItem(func_1998_call(), 0)
func_3541_call = mod.get_global_var('func_3541')
func_3545_call = mutated_mod.get_global_var('func_3545')
var_5119 = relay.var("var_5119", dtype = "uint64", shape = (100,))#candidate|5119|(100,)|var|uint64
call_5118 = relay.TupleGetItem(func_3541_call(relay.reshape(call_5098.astype('float32'), [1600,]), relay.reshape(var_5119.astype('uint64'), [100,]), ), 1)
call_5120 = relay.TupleGetItem(func_3545_call(relay.reshape(call_5098.astype('float32'), [1600,]), relay.reshape(var_5119.astype('uint64'), [100,]), ), 1)
const_5131 = relay.constdtype = "float32")#candidate|5131|(12, 11, 14)|const|float32
bop_5132 = relay.mod(uop_5094.astype('float64'), relay.reshape(const_5131.astype('float64'), relay.shape_of(uop_5094))) # shape=(12, 11, 14)
output = relay.Tuple([call_5098,call_5100,call_5105,call_5112,call_5118,var_5119,bop_5132,])
output2 = relay.Tuple([call_5099,call_5101,call_5106,call_5113,call_5120,var_5119,bop_5132,])
func_5135 = relay.Function([var_5093,var_5119,], output)
mod['func_5135'] = func_5135
mod = relay.transform.InferType()(mod)
mutated_mod['func_5135'] = func_5135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5135_call = mutated_mod.get_global_var('func_5135')
var_5137 = relay.var("var_5137", dtype = "float32", shape = (12, 11, 14))#candidate|5137|(12, 11, 14)|var|float32
var_5138 = relay.var("var_5138", dtype = "uint64", shape = (100,))#candidate|5138|(100,)|var|uint64
call_5136 = func_5135_call(var_5137,var_5138,)
output = call_5136
func_5139 = relay.Function([var_5137,var_5138,], output)
mutated_mod['func_5139'] = func_5139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5178 = relay.var("var_5178", dtype = "float64", shape = (2, 11, 1))#candidate|5178|(2, 11, 1)|var|float64
uop_5179 = relay.acosh(var_5178.astype('float64')) # shape=(2, 11, 1)
output = uop_5179
output2 = uop_5179
func_5184 = relay.Function([var_5178,], output)
mod['func_5184'] = func_5184
mod = relay.transform.InferType()(mod)
mutated_mod['func_5184'] = func_5184
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5185 = relay.var("var_5185", dtype = "float64", shape = (2, 11, 1))#candidate|5185|(2, 11, 1)|var|float64
func_5184_call = mutated_mod.get_global_var('func_5184')
call_5186 = func_5184_call(var_5185)
output = call_5186
func_5187 = relay.Function([var_5185], output)
mutated_mod['func_5187'] = func_5187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4045_call = mod.get_global_var('func_4045')
func_4046_call = mutated_mod.get_global_var('func_4046')
call_5192 = relay.TupleGetItem(func_4045_call(), 4)
call_5193 = relay.TupleGetItem(func_4046_call(), 4)
func_2500_call = mod.get_global_var('func_2500')
func_2501_call = mutated_mod.get_global_var('func_2501')
call_5217 = relay.TupleGetItem(func_2500_call(), 4)
call_5218 = relay.TupleGetItem(func_2501_call(), 4)
uop_5239 = relay.log10(call_5217.astype('float64')) # shape=(3584,)
uop_5241 = relay.log10(call_5218.astype('float64')) # shape=(3584,)
func_4210_call = mod.get_global_var('func_4210')
func_4213_call = mutated_mod.get_global_var('func_4213')
var_5243 = relay.var("var_5243", dtype = "float32", shape = (120,))#candidate|5243|(120,)|var|float32
call_5242 = relay.TupleGetItem(func_4210_call(relay.reshape(var_5243.astype('float32'), [5, 4, 6])), 1)
call_5244 = relay.TupleGetItem(func_4213_call(relay.reshape(var_5243.astype('float32'), [5, 4, 6])), 1)
output = relay.Tuple([call_5192,uop_5239,call_5242,var_5243,])
output2 = relay.Tuple([call_5193,uop_5241,call_5244,var_5243,])
func_5246 = relay.Function([var_5243,], output)
mod['func_5246'] = func_5246
mod = relay.transform.InferType()(mod)
mutated_mod['func_5246'] = func_5246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5247 = relay.var("var_5247", dtype = "float32", shape = (120,))#candidate|5247|(120,)|var|float32
func_5246_call = mutated_mod.get_global_var('func_5246')
call_5248 = func_5246_call(var_5247)
output = call_5248
func_5249 = relay.Function([var_5247], output)
mutated_mod['func_5249'] = func_5249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mod.get_global_var('func_4175')
func_4177_call = mutated_mod.get_global_var('func_4177')
call_5297 = func_4175_call()
call_5298 = func_4175_call()
output = relay.Tuple([call_5297,])
output2 = relay.Tuple([call_5298,])
func_5337 = relay.Function([], output)
mod['func_5337'] = func_5337
mod = relay.transform.InferType()(mod)
mutated_mod['func_5337'] = func_5337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5337_call = mutated_mod.get_global_var('func_5337')
call_5338 = func_5337_call()
output = call_5338
func_5339 = relay.Function([], output)
mutated_mod['func_5339'] = func_5339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5377 = relay.var("var_5377", dtype = "float64", shape = (16, 15, 16))#candidate|5377|(16, 15, 16)|var|float64
uop_5378 = relay.asin(var_5377.astype('float64')) # shape=(16, 15, 16)
var_5395 = relay.var("var_5395", dtype = "float64", shape = (16, 15, 16))#candidate|5395|(16, 15, 16)|var|float64
bop_5396 = relay.right_shift(uop_5378.astype('uint32'), relay.reshape(var_5395.astype('uint32'), relay.shape_of(uop_5378))) # shape=(16, 15, 16)
uop_5400 = relay.log(uop_5378.astype('float64')) # shape=(16, 15, 16)
output = relay.Tuple([bop_5396,uop_5400,])
output2 = relay.Tuple([bop_5396,uop_5400,])
func_5403 = relay.Function([var_5377,var_5395,], output)
mod['func_5403'] = func_5403
mod = relay.transform.InferType()(mod)
mutated_mod['func_5403'] = func_5403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5403_call = mutated_mod.get_global_var('func_5403')
var_5405 = relay.var("var_5405", dtype = "float64", shape = (16, 15, 16))#candidate|5405|(16, 15, 16)|var|float64
var_5406 = relay.var("var_5406", dtype = "float64", shape = (16, 15, 16))#candidate|5406|(16, 15, 16)|var|float64
call_5404 = func_5403_call(var_5405,var_5406,)
output = call_5404
func_5407 = relay.Function([var_5405,var_5406,], output)
mutated_mod['func_5407'] = func_5407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mod.get_global_var('func_4103')
func_4104_call = mutated_mod.get_global_var('func_4104')
call_5409 = relay.TupleGetItem(func_4103_call(), 0)
call_5410 = relay.TupleGetItem(func_4104_call(), 0)
output = call_5409
output2 = call_5410
func_5411 = relay.Function([], output)
mod['func_5411'] = func_5411
mod = relay.transform.InferType()(mod)
output = func_5411()
func_5412 = relay.Function([], output)
mutated_mod['func_5412'] = func_5412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4351_call = mod.get_global_var('func_4351')
func_4353_call = mutated_mod.get_global_var('func_4353')
call_5442 = relay.TupleGetItem(func_4351_call(), 1)
call_5443 = relay.TupleGetItem(func_4353_call(), 1)
func_3004_call = mod.get_global_var('func_3004')
func_3005_call = mutated_mod.get_global_var('func_3005')
call_5447 = relay.TupleGetItem(func_3004_call(), 0)
call_5448 = relay.TupleGetItem(func_3005_call(), 0)
uop_5452 = relay.asinh(call_5442.astype('float32')) # shape=(1600,)
uop_5454 = relay.asinh(call_5443.astype('float32')) # shape=(1600,)
func_4572_call = mod.get_global_var('func_4572')
func_4573_call = mutated_mod.get_global_var('func_4573')
call_5460 = relay.TupleGetItem(func_4572_call(), 1)
call_5461 = relay.TupleGetItem(func_4573_call(), 1)
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
const_5465 = relay.const([[7.320274,6.020942,-5.311495,-5.683688,7.506195],[-7.093335,8.478775,-0.590860,-8.462893,-5.536855],[-6.628860,3.464702,7.457328,-0.982144,6.048242],[-3.731307,-5.006816,-3.284808,3.841506,-4.186519],[0.936191,0.145423,-3.735756,-4.494750,8.105235]], dtype = "float32")#candidate|5465|(5, 5)|const|float32
call_5464 = relay.TupleGetItem(func_2771_call(relay.reshape(const_5465.astype('float32'), [5, 1, 5])), 0)
call_5466 = relay.TupleGetItem(func_2773_call(relay.reshape(const_5465.astype('float32'), [5, 1, 5])), 0)
bop_5475 = relay.minimum(uop_5452.astype('uint64'), relay.reshape(call_5447.astype('uint64'), relay.shape_of(uop_5452))) # shape=(1600,)
bop_5478 = relay.minimum(uop_5454.astype('uint64'), relay.reshape(call_5448.astype('uint64'), relay.shape_of(uop_5454))) # shape=(1600,)
output = relay.Tuple([call_5460,call_5464,const_5465,bop_5475,])
output2 = relay.Tuple([call_5461,call_5466,const_5465,bop_5478,])
func_5488 = relay.Function([], output)
mod['func_5488'] = func_5488
mod = relay.transform.InferType()(mod)
mutated_mod['func_5488'] = func_5488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5488_call = mutated_mod.get_global_var('func_5488')
call_5489 = func_5488_call()
output = call_5489
func_5490 = relay.Function([], output)
mutated_mod['func_5490'] = func_5490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_5538 = relay.TupleGetItem(func_704_call(), 1)
call_5539 = relay.TupleGetItem(func_706_call(), 1)
func_4774_call = mod.get_global_var('func_4774')
func_4775_call = mutated_mod.get_global_var('func_4775')
call_5544 = func_4774_call()
call_5545 = func_4774_call()
func_4625_call = mod.get_global_var('func_4625')
func_4627_call = mutated_mod.get_global_var('func_4627')
const_5547 = relay.const([2.380792,-0.953629,-6.081525,3.071540,0.686504,-4.206900,8.601764,-4.123452,-4.055867,-7.447454,6.943349,1.535212,-9.308487,8.415258,-2.970768,5.938550,6.098927,-8.063520,-1.628310,-2.624497,-0.267392,-2.199448,-3.989010,3.844808,-8.769438,4.410968,0.578234,-5.691392,6.614798,8.423259,2.299274,3.177482,-2.398780,-5.591387,0.783363,-9.746904,9.247232,8.646599,-6.043147,5.028850,-6.546459,-7.020948,7.463047,2.788006,-5.686999,6.470570,-0.155608,-7.843367,-3.692426,5.777486,-1.885822,9.339185,-3.492275,3.381919,-5.205203,4.138117,3.916133,-5.792292,7.743164,3.031435,-9.686904,4.481616,8.097797,-1.173983,-6.331665,-3.917080,6.639721,-0.851908,-2.365749,-0.499068,-4.662018,-5.868096,-7.459945,3.068833,-8.079186,0.207320,1.819665,2.191431,2.599777,-1.848244,5.164346,-8.974480,8.460722,-4.525547,-3.543119,-1.681141,8.399845,-6.466380,8.861422,4.485851,5.282980,-9.155537,4.707393,4.351773,1.093601,-2.003271,-8.355519,-6.598392,5.405184,-2.098116,4.284972,9.110726,2.099109,-5.581692,9.990477,-4.898606,6.140512,2.314099,9.499564,1.609732,-1.979114,3.559800,-5.189057,-3.797698,7.185385,6.954874,5.202728,2.003686,-8.631539,6.660671,7.626922,-4.021698,4.019948,9.355588,7.137396,6.074950,-8.135559,-3.487080,-8.999207,-0.734915,0.554519,7.531163,-4.674146,4.789503,-2.173172,-7.214549,1.294812,-3.221670,-3.531140,7.211543,-3.311341,-2.733689,9.426543,7.051943,8.578067,5.842274,3.881221,-2.253236,5.228121,9.709822,-6.291149,1.449443,-8.716330,-5.654123,5.746419,-9.734989,0.376033,-1.576868,-8.144981,-1.748200,-3.100791,-8.716925,-0.145415,7.271866,6.797132,-9.347960,8.003736,3.032706,0.189341,-3.445719,4.120408,1.962864,4.243807,5.522766,7.978701,-1.676369,-3.222641,-2.856721,2.286431,-7.490313,-3.915947,-1.825613,2.737161,3.058869,-9.435481,1.068085,7.828634,-1.483498,2.829403,-1.332770,4.835303,-3.324206,3.640461,1.298226,-8.920225,3.967654,-0.978490,-3.015413,2.103584,-1.453261,-3.792172,6.778370,-9.408649,-4.223736,-5.009116,7.378975,1.091715,4.940854,-7.877667,9.672859,-2.174361,3.107368,6.991968,-0.154193,0.302114,-8.835755,9.339904,3.432894,2.607120,4.990254,-3.037342,2.589292,-0.377900,6.300509,7.793620,0.196399,1.275274,-5.738870,3.451867,-4.060767,-0.025921,-8.612358,-8.238123,9.813021,8.635865,3.196372,6.731893,-3.501746,5.884153,-7.882180,-0.627911,1.758687,-7.048221,-9.269253,-0.990569,7.196750,6.104638,-2.775328,6.596631,3.170032,-2.276739,6.460760,-8.157464,0.006384,8.133629,-6.606392,-1.420791,0.535451,-3.682656,-9.562357,-3.197633,2.973265,3.938909,-9.299447,8.851845,8.364331,-9.648532,-1.045029,-8.683799,6.528912,6.505020,-7.533554,5.557547,8.122386,0.789606,-8.250783,9.478463,-9.427362,-8.094860,0.273602,-3.420187,8.213757,8.852583,7.077299,-5.891127,8.098249,9.961933,0.820048,-1.011538,-0.180888,-2.352112,4.986997,-7.328709,-0.526286,-5.873935,-1.212621,-2.806129,-7.665777,3.252615,-6.383978,-5.427932,-4.594273,6.602723,-6.534294,-2.048187,1.405512,1.156997,-1.784700,-3.434637,-0.593470,-8.569501,-2.892406,4.511319,4.484521,-3.498727,-0.024628,5.967907,-8.746608,-1.050546,-7.034630,0.250788,8.637438,5.590438,-5.405212,-1.334978,-8.428661,-7.387602,8.107446,6.465705,-6.050413,-5.993028,-9.987145,1.328162,-4.948681,8.207281,-0.982420,3.257297,-6.951172,7.091120,-7.725866,6.080850,4.214859,5.161905,9.716668,7.147511,6.900916,-0.836186,2.150098,-2.705799,1.951294,6.127613,1.754749,7.687473,6.980851,-3.508848,-5.072074,-7.963777,7.776417,6.165872,6.220540,8.487712,-9.758603,-6.058318,5.585048,-6.352288,8.310475,0.121048,-6.361131,-7.007597,6.327265,2.541755,-9.055034,7.798662,-2.830749,1.734800,0.621461,-7.948797,-8.377315,-0.625854,1.918431,8.246626,-6.912427,0.350804,7.194666,-6.090365,7.833272,6.948880,2.248545,6.493602,7.990698,6.291329,2.771584,-5.663739,4.610012,-4.004153,5.404731,0.079107,-6.818900,-1.603015,-7.720471,-4.661914,9.964036,2.411883,3.376508,-1.106154,6.781543,5.045125,6.926563,2.634342,-9.138133,8.242749,7.064737,5.284779,-2.158476,3.734300,-3.429514,-3.021073,1.795732,2.049325,-4.284213,7.977701,7.764848,8.791984,4.002607,5.572977,-1.497904,7.118087,6.087448,1.324718,3.838356,-0.851904,-8.294352,1.733177,1.499140,-0.760915,-0.118726,6.599405,6.011083,-1.071483,1.851503,-6.249759,-4.460374,3.990991,0.439526,0.977066,-7.956832,-3.424860,-8.275407,-7.511865,-9.926948,-4.479777,7.573432,0.548859,-7.345405,3.733459,1.339592,4.914618,1.874076,-5.139772,5.498295,5.846172,7.894471,-7.033645,5.525244,8.853392,-0.415023,-7.095642,-4.734191,-7.014498,2.904549,-7.114850,8.892044,1.647636,5.321438,9.541717,5.087366,-1.182225,3.417274,9.220434,2.016988,-0.122680,-0.953995,9.670240,-2.071243,0.272765,7.789890,3.004319,5.356593,-5.113411,-0.758939,2.593078,-1.412509,-4.424769,-7.668510,6.900752,1.140888,4.262044,-2.196256,-1.381861,-0.709378,8.383411,4.085947,2.394749,1.620412,1.156897,3.019969,3.764902,-5.872137,0.496638,5.286100,6.040615,4.635771,-2.106065,6.791965,-1.770865,-5.546944,-0.973737,-6.737452,-6.495720,2.145585,8.797308,-2.197009,-5.689793,9.428500,-4.363492,-5.402660,0.455729,-7.555648,-5.804482,-4.510979,-0.102404,-9.739911,-1.577289,-4.322068,-5.411352,6.872135,-9.090001,-6.550884,-7.705674,6.438274,8.542115,-1.623129,6.819057,-9.180487,4.835199,-3.790528,-2.644595,-4.640302,-7.116261,1.044800,-4.671862,-6.391975,0.596653,7.032281,-9.632280,-8.856122,2.585012,-0.821857,6.655022,-8.048274,2.777329,-5.516384,2.934615,8.057765,2.706287,-9.812703,2.996694,8.712247,7.858909,-4.601409,8.313520,1.442554,-9.934269,2.840832,9.489588,-2.503178,-0.016851,-3.668195,9.058047,8.526275,-0.411094,-7.989287,9.802444,-3.802156,-8.591951,-3.092597,5.093746,-2.201621,-1.370128,-1.533156,1.316478,-3.513272,6.689670,7.010381,-0.835614,-4.960768,-0.487415,-8.675163,-9.308153,9.359182,-3.464730,-2.593114,1.514498,6.014328,-0.239438,2.369748,-1.604661,1.623192,-6.151191,-9.591373,-5.441578,-5.347903,1.666381,-9.489771,8.996060,-3.788790,2.953156,-2.981493,-6.133068,-3.196336,9.417363,-7.237098,-3.417919,8.880473,5.102028,3.678848,-7.311701,-9.056043,5.073271,1.261938,-5.441039,-9.130496,-0.500882,6.795545,-9.832123,7.032171,2.670998,9.414320,-7.508116,4.947193,-7.311708,7.445135,-2.004271,-7.445681,-7.215849,-8.443485,6.391028,-5.163324,9.705773,-2.615602,-1.137497,4.398423,-2.668209,0.892127,-8.150526,-1.436031,4.648085,7.480163,0.082703,4.602949,-1.593556,7.302808,-2.860176,9.066309,8.420635,3.386267,-9.770645,4.273222,7.594294,5.797374,5.638443,-8.014793,9.156656,-5.512186,9.059271,-6.977420,-2.697502,-1.500051,9.858449,-1.292733,3.026223,-9.795834,1.457576,-7.493696,-7.796008,-5.445185,8.425376,4.705901,-5.760983,-8.373125,1.663537,5.140719,-8.381764,9.455129,-6.723461,-1.070325,8.628536,5.822792,-6.772436,-6.140022,9.969266,8.934902,1.268175,4.399122,-3.454873,-7.684408,-3.579492,9.178782,7.586684,-7.542799,9.526553,5.165285,-2.760436,0.501477,2.646607,2.122736,-5.869722,5.919794,8.753360,0.157793,-4.543819,-7.484025,-6.778783,0.658184,-7.151491,1.196563,-3.168297,-4.784018,9.251998,-9.163994,1.052493,9.547472,-1.719606,-1.475639,9.812869,3.719911,2.180385,-0.037579,-1.006020,7.186923,9.044773,-2.787692,4.257692,-0.897540,-6.134248,8.527406,1.004068,6.549006,-6.568262,7.799031,2.652900,9.838532,-0.144808,-0.341741,-1.803428,4.876304,-0.256407,1.638250,4.985009,-1.199250,-6.448653,6.479548,-8.752457,6.729713,-6.144191,-5.361293,-9.746247,-4.592030,5.678062,9.898962,-5.738981,-4.219874,-9.233163,9.581827,1.345630,2.524644,1.180975,0.454081,0.178770,-5.963099,-6.379249,8.359867,6.980877,7.129830,0.348833,-1.846547,-2.900683,-5.951691,-2.807861,-7.520541,-3.186298,-5.862430,-4.435149,3.637817,-6.621128,-4.461891,6.511289,5.364465,6.877173,8.005054,8.497064,8.920985,-2.224371,-6.381768,6.957259,6.948723,-5.803262,9.186344,3.473815,-4.886864,1.900909,-0.761670,4.022507,4.077033,3.477843,3.750561,-3.026846,-0.084332,-8.892791,4.139696,2.806032,0.536889,-1.892316,-5.730849,-5.467551,-3.233183,3.641182,-5.615596,-3.230107,-7.952500,-6.470606,9.253798,-2.818699,-4.115551,-6.222463,-5.525185,-3.143481,-3.397081,-5.172661,-3.567738,2.205247,-3.651742,-6.583938,2.409190,-8.605366,-1.769117,2.764211,7.907388,6.690503,0.028946,-4.370553,9.856665,6.734188,2.594743,-6.552917,-1.535264,-2.106269,5.256138,4.681120,-5.969304,-9.225100,0.553148,-2.671562,6.797617,-8.263850,7.748503,-0.850927,3.498056,-4.607304,6.246358,-8.185095,9.554700,1.048907,8.081797,1.743559,-0.144645,-3.892395,-4.659412,9.830071,-4.813861,-8.418643,-1.041468,-0.566639,-0.552749,-8.294053,-7.777853,-5.711065,-9.384756,-3.999554,-5.868738,6.435654,6.344269,-5.982483,-3.227111,3.518769,7.527541,-2.568061,-4.256669,6.136861,-5.022602,-5.539639,5.947654,-5.884744,-6.869378,0.501539,-2.798371,-3.986546,8.548969,3.918125,-9.227727,-8.992534,-3.858151,3.164946,-1.966041,-9.873141,-7.530119,3.917521,2.298717,9.335368,-5.804691,-6.224921,0.082062,-2.041864,-2.741147,-8.525493,-2.337076,-9.847515,-6.552861,3.641995,3.081994,9.329768,-9.707261,5.093339,-3.319414,-6.290048,0.678342,1.452105,9.844569,1.623180,-7.559588,-8.614159,0.768729,7.210767,-7.209885,-2.455398,-4.659399,9.237001,-9.789713,-7.579260,-3.459594,1.116022,-1.949452,-1.686824,-6.165022,8.175245,-4.325799,3.579151,-8.823090,6.776362,5.654131,-9.116507,4.565474,-5.719476,-5.611811,-1.196996,7.716237,8.416151,-4.081486,5.027322,2.145633,7.482690,-7.450749,0.228661,-0.108065,2.230163,-3.981584,0.397021,-1.253850,5.170940,9.604338,5.767020,0.039837,-7.623730,-7.682212,-0.593655,-0.996304,0.809609,-0.396187,3.325810,9.814290,-7.154991,6.528206,0.944815,-5.293497,-8.537422,-1.101649,-7.214528,-0.234859,-1.337920,8.121846,4.155218], dtype = "float32")#candidate|5547|(1001,)|const|float32
call_5546 = func_4625_call(relay.reshape(const_5547.astype('float32'), [13, 77]))
call_5548 = func_4625_call(relay.reshape(const_5547.astype('float32'), [13, 77]))
func_3230_call = mod.get_global_var('func_3230')
func_3231_call = mutated_mod.get_global_var('func_3231')
call_5552 = relay.TupleGetItem(func_3230_call(), 0)
call_5553 = relay.TupleGetItem(func_3231_call(), 0)
output = relay.Tuple([call_5538,call_5544,call_5546,const_5547,call_5552,])
output2 = relay.Tuple([call_5539,call_5545,call_5548,const_5547,call_5553,])
func_5577 = relay.Function([], output)
mod['func_5577'] = func_5577
mod = relay.transform.InferType()(mod)
mutated_mod['func_5577'] = func_5577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5577_call = mutated_mod.get_global_var('func_5577')
call_5578 = func_5577_call()
output = call_5578
func_5579 = relay.Function([], output)
mutated_mod['func_5579'] = func_5579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2680_call = mod.get_global_var('func_2680')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_5591 = relay.TupleGetItem(func_2680_call(), 0)
call_5592 = relay.TupleGetItem(func_2681_call(), 0)
func_4965_call = mod.get_global_var('func_4965')
func_4967_call = mutated_mod.get_global_var('func_4967')
call_5595 = relay.TupleGetItem(func_4965_call(), 0)
call_5596 = relay.TupleGetItem(func_4967_call(), 0)
output = relay.Tuple([call_5591,call_5595,])
output2 = relay.Tuple([call_5592,call_5596,])
func_5612 = relay.Function([], output)
mod['func_5612'] = func_5612
mod = relay.transform.InferType()(mod)
output = func_5612()
func_5613 = relay.Function([], output)
mutated_mod['func_5613'] = func_5613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1281_call = mod.get_global_var('func_1281')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_5633 = relay.TupleGetItem(func_1281_call(), 2)
call_5634 = relay.TupleGetItem(func_1282_call(), 2)
output = call_5633
output2 = call_5634
func_5654 = relay.Function([], output)
mod['func_5654'] = func_5654
mod = relay.transform.InferType()(mod)
output = func_5654()
func_5655 = relay.Function([], output)
mutated_mod['func_5655'] = func_5655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3321_call = mod.get_global_var('func_3321')
func_3322_call = mutated_mod.get_global_var('func_3322')
call_5662 = relay.TupleGetItem(func_3321_call(), 2)
call_5663 = relay.TupleGetItem(func_3322_call(), 2)
uop_5670 = relay.cosh(call_5662.astype('float64')) # shape=(1001,)
uop_5672 = relay.cosh(call_5663.astype('float64')) # shape=(1001,)
func_3106_call = mod.get_global_var('func_3106')
func_3107_call = mutated_mod.get_global_var('func_3107')
call_5683 = relay.TupleGetItem(func_3106_call(), 0)
call_5684 = relay.TupleGetItem(func_3107_call(), 0)
func_3080_call = mod.get_global_var('func_3080')
func_3082_call = mutated_mod.get_global_var('func_3082')
call_5699 = func_3080_call()
call_5700 = func_3080_call()
output = relay.Tuple([uop_5670,call_5683,call_5699,])
output2 = relay.Tuple([uop_5672,call_5684,call_5700,])
func_5705 = relay.Function([], output)
mod['func_5705'] = func_5705
mod = relay.transform.InferType()(mod)
output = func_5705()
func_5706 = relay.Function([], output)
mutated_mod['func_5706'] = func_5706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_5710 = relay.TupleGetItem(func_1600_call(), 2)
call_5711 = relay.TupleGetItem(func_1601_call(), 2)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_5727 = relay.TupleGetItem(func_775_call(), 0)
call_5728 = relay.TupleGetItem(func_776_call(), 0)
output = relay.Tuple([call_5710,call_5727,])
output2 = relay.Tuple([call_5711,call_5728,])
func_5736 = relay.Function([], output)
mod['func_5736'] = func_5736
mod = relay.transform.InferType()(mod)
mutated_mod['func_5736'] = func_5736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5736_call = mutated_mod.get_global_var('func_5736')
call_5737 = func_5736_call()
output = call_5737
func_5738 = relay.Function([], output)
mutated_mod['func_5738'] = func_5738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_682_call = mod.get_global_var('func_682')
func_683_call = mutated_mod.get_global_var('func_683')
call_5759 = relay.TupleGetItem(func_682_call(), 3)
call_5760 = relay.TupleGetItem(func_683_call(), 3)
func_3981_call = mod.get_global_var('func_3981')
func_3982_call = mutated_mod.get_global_var('func_3982')
call_5763 = relay.TupleGetItem(func_3981_call(), 0)
call_5764 = relay.TupleGetItem(func_3982_call(), 0)
output = relay.Tuple([call_5759,call_5763,])
output2 = relay.Tuple([call_5760,call_5764,])
func_5780 = relay.Function([], output)
mod['func_5780'] = func_5780
mod = relay.transform.InferType()(mod)
output = func_5780()
func_5781 = relay.Function([], output)
mutated_mod['func_5781'] = func_5781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_5802 = relay.TupleGetItem(func_704_call(), 0)
call_5803 = relay.TupleGetItem(func_706_call(), 0)
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_5814 = relay.TupleGetItem(func_1997_call(), 0)
call_5815 = relay.TupleGetItem(func_1998_call(), 0)
output = relay.Tuple([call_5802,call_5814,])
output2 = relay.Tuple([call_5803,call_5815,])
func_5826 = relay.Function([], output)
mod['func_5826'] = func_5826
mod = relay.transform.InferType()(mod)
mutated_mod['func_5826'] = func_5826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5826_call = mutated_mod.get_global_var('func_5826')
call_5827 = func_5826_call()
output = call_5827
func_5828 = relay.Function([], output)
mutated_mod['func_5828'] = func_5828
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5832 = relay.var("var_5832", dtype = "float32", shape = (4, 3, 10))#candidate|5832|(4, 3, 10)|var|float32
uop_5833 = relay.log(var_5832.astype('float32')) # shape=(4, 3, 10)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_5835 = relay.TupleGetItem(func_1600_call(), 2)
call_5836 = relay.TupleGetItem(func_1601_call(), 2)
output = relay.Tuple([uop_5833,call_5835,])
output2 = relay.Tuple([uop_5833,call_5836,])
func_5843 = relay.Function([var_5832,], output)
mod['func_5843'] = func_5843
mod = relay.transform.InferType()(mod)
var_5844 = relay.var("var_5844", dtype = "float32", shape = (4, 3, 10))#candidate|5844|(4, 3, 10)|var|float32
output = func_5843(var_5844)
func_5845 = relay.Function([var_5844], output)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5847 = relay.const(9, dtype = "int32")#candidate|5847|()|const|int32
const_5848 = relay.const([[[2,-5,-7,-7,-5,-4,2,-2,5,2,-3],[3,-4,-6,4,-10,5,9,2,5,-8,10],[-6,-10,-8,-2,9,6,-2,6,-4,-10,-4],[4,-4,5,9,-4,10,6,10,7,-5,-5],[-7,-3,-9,-1,4,9,6,2,1,-8,3],[9,4,-3,10,6,-8,8,1,-10,-7,-3],[-5,8,-2,-7,2,8,-1,-7,-8,-8,-3],[4,10,-9,3,1,8,1,8,6,-3,8],[-7,7,-9,2,3,-7,7,1,-9,-7,-4],[8,-6,1,-1,3,5,3,-5,5,-10,3],[8,9,-8,6,-5,-3,-3,10,3,-1,-3]],[[2,1,8,-10,9,8,-7,4,-10,10,-10],[6,-8,-3,-7,5,-6,7,-6,-8,-6,4],[-3,-9,-5,-6,3,-5,3,9,-6,-1,9],[-10,-6,-3,-5,8,-3,-2,-5,5,10,-6],[-10,5,9,10,-6,4,-9,6,4,-1,-10],[-7,-1,2,4,6,-3,2,1,-10,6,-10],[-3,-8,-2,-5,-4,-9,7,-8,-9,9,-9],[4,6,-8,-1,7,7,-2,8,5,-2,-9],[-6,-3,5,-7,-4,-6,-4,-1,3,1,-5],[2,10,5,2,2,3,2,-9,2,-7,-2],[-5,8,-2,9,-9,1,10,5,10,-9,5]],[[8,-10,5,-1,10,3,3,4,3,6,-7],[7,-8,9,9,1,-8,-10,-6,-4,-8,-4],[-2,-6,4,-8,8,-2,4,4,-7,-3,-5],[10,5,-8,2,-5,-10,9,4,-2,-3,-9],[-6,-2,-7,10,7,3,-5,-6,-5,-9,-3],[9,-6,-8,-7,-7,1,8,2,1,-5,1],[7,6,10,7,6,1,-8,10,-7,8,4],[-7,1,6,-2,9,6,-1,3,-2,-5,8],[5,1,-2,-1,7,3,-3,6,-9,5,2],[-4,6,-1,-10,-6,-6,-8,-8,-5,4,-2],[10,-2,-5,-4,3,-10,-5,-1,2,3,-6]]], dtype = "int32")#candidate|5848|(3, 11, 11)|const|int32
bop_5849 = relay.bitwise_and(const_5847.astype('int32'), const_5848.astype('int32')) # shape=(3, 11, 11)
func_3722_call = mod.get_global_var('func_3722')
func_3723_call = mutated_mod.get_global_var('func_3723')
call_5868 = func_3722_call()
call_5869 = func_3722_call()
uop_5874 = relay.cos(const_5848.astype('float32')) # shape=(3, 11, 11)
output = relay.Tuple([bop_5849,call_5868,uop_5874,])
output2 = relay.Tuple([bop_5849,call_5869,uop_5874,])
func_5886 = relay.Function([], output)
mod['func_5886'] = func_5886
mod = relay.transform.InferType()(mod)
output = func_5886()
func_5887 = relay.Function([], output)
mutated_mod['func_5887'] = func_5887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_626_call = mod.get_global_var('func_626')
func_628_call = mutated_mod.get_global_var('func_628')
call_5892 = relay.TupleGetItem(func_626_call(), 0)
call_5893 = relay.TupleGetItem(func_628_call(), 0)
func_4384_call = mod.get_global_var('func_4384')
func_4385_call = mutated_mod.get_global_var('func_4385')
call_5913 = func_4384_call()
call_5914 = func_4384_call()
func_682_call = mod.get_global_var('func_682')
func_683_call = mutated_mod.get_global_var('func_683')
call_5942 = relay.TupleGetItem(func_682_call(), 3)
call_5943 = relay.TupleGetItem(func_683_call(), 3)
func_2900_call = mod.get_global_var('func_2900')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_5950 = relay.TupleGetItem(func_2900_call(), 2)
call_5951 = relay.TupleGetItem(func_2902_call(), 2)
output = relay.Tuple([call_5892,call_5913,call_5942,call_5950,])
output2 = relay.Tuple([call_5893,call_5914,call_5943,call_5951,])
func_5952 = relay.Function([], output)
mod['func_5952'] = func_5952
mod = relay.transform.InferType()(mod)
mutated_mod['func_5952'] = func_5952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5952_call = mutated_mod.get_global_var('func_5952')
call_5953 = func_5952_call()
output = call_5953
func_5954 = relay.Function([], output)
mutated_mod['func_5954'] = func_5954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2152_call = mod.get_global_var('func_2152')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_5966 = func_2152_call()
call_5967 = func_2152_call()
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
var_5969 = relay.var("var_5969", dtype = "float32", shape = (120,))#candidate|5969|(120,)|var|float32
call_5968 = relay.TupleGetItem(func_5843_call(relay.reshape(var_5969.astype('float32'), [4, 3, 10])), 0)
call_5970 = relay.TupleGetItem(func_5845_call(relay.reshape(var_5969.astype('float32'), [4, 3, 10])), 0)
output = relay.Tuple([call_5966,call_5968,var_5969,])
output2 = relay.Tuple([call_5967,call_5970,var_5969,])
func_5982 = relay.Function([var_5969,], output)
mod['func_5982'] = func_5982
mod = relay.transform.InferType()(mod)
var_5983 = relay.var("var_5983", dtype = "float32", shape = (120,))#candidate|5983|(120,)|var|float32
output = func_5982(var_5983)
func_5984 = relay.Function([var_5983], output)
mutated_mod['func_5984'] = func_5984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5411_call = mod.get_global_var('func_5411')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_6097 = func_5411_call()
call_6098 = func_5411_call()
func_3004_call = mod.get_global_var('func_3004')
func_3005_call = mutated_mod.get_global_var('func_3005')
call_6114 = relay.TupleGetItem(func_3004_call(), 0)
call_6115 = relay.TupleGetItem(func_3005_call(), 0)
output = relay.Tuple([call_6097,call_6114,])
output2 = relay.Tuple([call_6098,call_6115,])
func_6132 = relay.Function([], output)
mod['func_6132'] = func_6132
mod = relay.transform.InferType()(mod)
output = func_6132()
func_6133 = relay.Function([], output)
mutated_mod['func_6133'] = func_6133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2250_call = mod.get_global_var('func_2250')
func_2252_call = mutated_mod.get_global_var('func_2252')
call_6146 = relay.TupleGetItem(func_2250_call(), 0)
call_6147 = relay.TupleGetItem(func_2252_call(), 0)
output = call_6146
output2 = call_6147
func_6161 = relay.Function([], output)
mod['func_6161'] = func_6161
mod = relay.transform.InferType()(mod)
mutated_mod['func_6161'] = func_6161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6161_call = mutated_mod.get_global_var('func_6161')
call_6162 = func_6161_call()
output = call_6162
func_6163 = relay.Function([], output)
mutated_mod['func_6163'] = func_6163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5952_call = mod.get_global_var('func_5952')
func_5954_call = mutated_mod.get_global_var('func_5954')
call_6183 = relay.TupleGetItem(func_5952_call(), 3)
call_6184 = relay.TupleGetItem(func_5954_call(), 3)
output = relay.Tuple([call_6183,])
output2 = relay.Tuple([call_6184,])
func_6185 = relay.Function([], output)
mod['func_6185'] = func_6185
mod = relay.transform.InferType()(mod)
mutated_mod['func_6185'] = func_6185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6185_call = mutated_mod.get_global_var('func_6185')
call_6186 = func_6185_call()
output = call_6186
func_6187 = relay.Function([], output)
mutated_mod['func_6187'] = func_6187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5654_call = mod.get_global_var('func_5654')
func_5655_call = mutated_mod.get_global_var('func_5655')
call_6206 = func_5654_call()
call_6207 = func_5654_call()
func_1478_call = mod.get_global_var('func_1478')
func_1480_call = mutated_mod.get_global_var('func_1480')
call_6210 = func_1478_call()
call_6211 = func_1478_call()
output = relay.Tuple([call_6206,call_6210,])
output2 = relay.Tuple([call_6207,call_6211,])
func_6212 = relay.Function([], output)
mod['func_6212'] = func_6212
mod = relay.transform.InferType()(mod)
output = func_6212()
func_6213 = relay.Function([], output)
mutated_mod['func_6213'] = func_6213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5337_call = mod.get_global_var('func_5337')
func_5339_call = mutated_mod.get_global_var('func_5339')
call_6235 = relay.TupleGetItem(func_5337_call(), 0)
call_6236 = relay.TupleGetItem(func_5339_call(), 0)
output = relay.Tuple([call_6235,])
output2 = relay.Tuple([call_6236,])
func_6237 = relay.Function([], output)
mod['func_6237'] = func_6237
mod = relay.transform.InferType()(mod)
mutated_mod['func_6237'] = func_6237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6237_call = mutated_mod.get_global_var('func_6237')
call_6238 = func_6237_call()
output = call_6238
func_6239 = relay.Function([], output)
mutated_mod['func_6239'] = func_6239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6185_call = mod.get_global_var('func_6185')
func_6187_call = mutated_mod.get_global_var('func_6187')
call_6247 = relay.TupleGetItem(func_6185_call(), 0)
call_6248 = relay.TupleGetItem(func_6187_call(), 0)
output = call_6247
output2 = call_6248
func_6261 = relay.Function([], output)
mod['func_6261'] = func_6261
mod = relay.transform.InferType()(mod)
output = func_6261()
func_6262 = relay.Function([], output)
mutated_mod['func_6262'] = func_6262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5337_call = mod.get_global_var('func_5337')
func_5339_call = mutated_mod.get_global_var('func_5339')
call_6296 = relay.TupleGetItem(func_5337_call(), 0)
call_6297 = relay.TupleGetItem(func_5339_call(), 0)
func_4625_call = mod.get_global_var('func_4625')
func_4627_call = mutated_mod.get_global_var('func_4627')
const_6325 = relay.const([-2.281304,-8.816652,1.102014,1.830133,4.433152,-9.142652,-0.966402,9.788439,0.127474,8.947489,9.932374,-4.840687,3.101809,-5.300586,-5.474947,4.050509,5.123600,9.470328,-1.937278,-0.240509,1.206097,4.476569,0.898022,7.016444,6.609677,-4.095111,6.603957,1.769875,1.905965,6.795845,6.120534,-6.289965,-0.153531,-4.190288,-7.696485,3.291717,8.406655,6.120323,1.726050,7.592369,7.806991,-4.141667,5.310258,-2.296842,4.777558,-0.788992,-7.269127,1.677813,-1.380284,0.353544,3.719665,-3.231412,2.796227,2.034285,-3.715162,3.995792,5.335267,-6.728766,2.498424,5.402206,0.438845,-3.141873,-9.722658,-9.305963,2.030280,0.123184,-4.985345,9.656461,5.687189,4.276279,5.211532,2.913162,-9.922140,1.856673,-9.609673,-4.508440,-2.941765,7.272618,4.746492,-3.750887,-2.264288,6.811171,1.666416,-5.430409,7.726024,6.808110,4.763431,5.875606,-9.712189,0.580237,0.392086,-7.607076,-1.086573,-5.501015,-6.193675,-4.842667,-6.851792,9.499999,-8.362990,-7.795654,8.092097,2.464688,0.838272,-4.854959,4.584003,-6.082257,-4.949693,7.788760,6.215378,-3.662787,-7.680854,-0.134823,-5.482637,-8.124578,8.070037,-8.652581,-5.271427,9.025662,8.506405,-7.543978,-6.282065,5.877489,8.391917,1.394119,6.803025,-7.691090,4.001595,-4.817804,7.041908,-1.891173,-4.776221,2.799588,-0.321389,-5.344080,3.907807,0.988313,2.365122,-3.886158,4.212886,1.152626,0.582145,-5.705531,-2.980844,-1.488702,1.779805,0.757526,3.365097,9.873021,2.652567,6.861711,-2.201753,-1.877786,-2.457943,-1.127438,1.759425,-1.765729,-0.128433,1.750304,9.320977,-1.609263,-2.818003,-9.477973,-8.466232,-4.941074,2.342560,-2.597022,-0.963776,-3.608129,7.789577,-7.733365,-8.844854,4.831445,2.930097,-8.659641,-0.456989,4.078650,-7.362210,9.969485,3.052536,-5.345444,7.361224,-4.375178,-1.823558,-3.390945,-0.595108,-4.489547,1.894362,6.439958,-9.755609,-2.638002,-1.476081,8.259673,6.725090,5.877176,-9.780928,-4.269304,8.095552,7.514249,4.680162,9.955764,-3.789756,-3.759596,-5.711940,-2.276327,4.747345,5.844386,8.627379,-2.506232,9.610001,4.391963,-0.344971,-0.720291,1.012927,7.769601,8.016927,-0.552465,-4.595518,-9.359061,-2.879616,8.627633,1.921720,9.453900,9.507016,2.436523,8.878321,7.708430,-9.001405,6.032103,6.793107,-5.731507,-5.445513,4.153407,-8.439689,3.337559,-7.759186,-0.403691,7.610727,-3.039233,-6.373474,-3.480046,6.054275,2.541156,0.115037,2.842581,4.687911,8.408812,-4.190555,-1.759013,-6.753186,8.896725,-2.458848,-2.201043,8.902997,-5.422639,0.974366,3.519388,-6.451932,-8.826052,-3.813253,1.301898,-7.877104,8.309223,4.816260,2.915552,2.355405,-9.317821,-3.853832,4.192945,-4.877573,0.985587,-2.648209,-4.131431,9.686590,-0.634431,-8.724188,5.117473,0.134045,7.342125,-6.321294,-2.040649,9.088301,5.124728,-4.613639,0.366554,3.467147,-7.734083,9.535025,-8.623992,8.441911,-9.056339,-1.786413,-9.169749,-3.173227,-0.673967,-1.842386,-2.842805,-5.392424,-9.797907,6.329243,9.877871,-5.592138,-7.842280,-1.108359,8.598677,-9.519479,7.478586,2.298408,-6.805889,4.663215,4.095961,1.161152,1.903141,9.077358,-7.096945,1.924363,1.032128,5.577802,2.860516,1.372094,-5.410157,1.520186,-3.296316,5.972628,-6.998837,-8.980140,8.106060,-0.349920,8.127683,-0.951236,-4.567832,3.071506,9.902911,9.729631,-0.018086,6.753353,-1.291349,-1.625765,-7.863435,8.317605,-1.621080,-9.098826,-3.212335,-2.298980,-3.025741,1.836427,-7.745310,6.475948,-2.742151,-2.080717,9.687029,4.142481,-6.332369,-7.964146,0.726577,-2.360183,4.028415,0.221655,4.815406,6.643824,-3.547625,-3.140939,7.186065,5.547524,-8.240717,-8.047944,7.113408,-1.243616,2.074908,-5.037644,-9.917236,-4.299213,2.217975,0.088603,5.672942,4.876160,-9.782255,-4.089479,8.614054,6.686867,-2.159552,3.083472,0.711894,8.599093,-8.633024,7.358613,-1.222911,4.413660,-7.404273,-8.299879,8.498198,8.110335,8.848778,-5.811074,0.627704,8.966362,4.793965,-0.457636,-2.473566,-8.515483,8.189207,7.389051,9.653550,-5.345943,-5.225988,-5.115484,-6.317478,3.238146,2.274992,-1.533537,7.607127,-6.456198,-5.179487,1.610179,9.301793,4.307889,8.530816,-3.262025,3.896623,-9.241971,-8.234180,-1.398488,5.979357,-2.562198,5.796874,4.382982,-8.130165,1.856948,-3.866879,7.847074,-8.519293,0.642918,-0.224873,7.065929,-7.896136,4.529415,-1.682384,8.750653,6.944839,-2.983418,-4.500082,0.937849,-4.193411,2.187802,2.669076,-2.347487,1.011108,8.802474,5.713164,-5.061569,5.116899,-3.725625,3.853996,0.613962,-3.266845,7.611207,1.377237,1.708779,2.710878,4.430871,-2.413485,0.541611,6.839893,2.801146,5.518106,-8.187941,8.595036,-3.146317,-0.501490,1.181584,2.913254,7.219163,1.967738,-4.924794,0.615215,1.982203,1.896913,5.699898,0.472789,-5.529764,-4.082642,8.493879,7.814262,-6.751245,1.332701,-7.364045,-4.332513,-8.024441,3.233509,3.067488,-4.086595,-1.076392,0.389483,-7.267772,-0.580511,2.901772,6.452313,-1.160035,-0.859025,-2.126714,-3.288259,-3.756739,-7.415727,-1.295807,-1.520083,-2.706675,-6.716240,-3.052737,-6.324714,-0.872959,5.670739,-5.560548,7.397720,-8.875892,1.479949,3.698223,1.996754,7.407674,-7.436810,0.695503,7.918149,1.229307,-5.729305,4.925835,-5.084767,7.960710,4.340801,-5.041065,-0.561966,-3.928139,8.226805,1.948262,2.089867,-4.139424,-3.161185,-0.460974,9.470655,2.910326,-9.777133,8.540537,0.398345,-9.828221,-3.798480,9.567371,1.286517,-3.249596,8.113814,-1.595273,-2.776116,5.967121,-6.424544,-8.536445,1.653465,-0.647649,-1.192923,6.204426,-7.351057,-9.100916,-0.644052,-2.134249,1.306753,3.408611,-3.309122,-4.720353,-6.911272,-4.717655,2.478211,7.366398,-3.831237,-8.413698,6.032409,-4.657565,-7.005412,-6.122589,-6.954087,-8.259919,8.008728,3.690263,6.797701,9.788494,0.499980,9.301922,-6.227110,9.135829,-6.264797,-6.147727,2.858667,3.073806,5.273234,4.606068,-1.210743,-5.489521,8.729622,-7.057339,7.730659,-8.554838,6.507706,6.584535,-3.447980,-6.949247,1.606513,-5.631744,-5.642595,-8.710866,0.106986,9.833726,3.543683,-3.774319,1.805209,-7.500865,-5.740014,3.232266,-2.589690,7.494388,-9.673498,3.752809,-9.048757,-6.613587,8.511561,7.973233,-4.562615,1.239647,-1.102387,-0.959401,-9.367173,-5.381449,-1.694672,-6.397863,-1.087988,8.849482,8.539919,-6.705360,8.095199,-3.732002,9.385029,3.129514,4.858112,-5.198426,-6.106378,2.338653,8.838835,7.900402,-2.945930,-3.416399,-9.743893,3.728915,-1.235403,6.782617,-0.651030,-9.233267,5.092494,-1.706275,-2.691118,-2.728713,7.154789,8.869299,2.816666,-4.591872,-9.160645,3.042419,5.312342,0.779865,-5.051352,4.816094,-7.458096,1.111375,0.507828,-7.974153,-9.224602,6.587506,5.817398,-8.585515,4.377370,-5.020227,5.170893,-3.769707,-1.882774,-9.436492,3.190828,8.334670,2.736958,0.062018,-1.508224,1.690753,4.361178,2.503000,9.414855,3.230740,-3.787224,5.378939,7.487772,-1.241809,2.795923,9.479130,-1.775572,-3.098689,2.329376,9.604530,-7.948546,-2.612121,5.447616,-4.967087,4.221265,9.610345,5.745654,1.387013,2.556034,-2.822868,-2.598158,6.283164,-3.384523,-3.038087,4.303371,-2.161674,-7.834095,7.296074,-3.333477,4.480105,-3.237965,9.029972,2.276203,-2.196576,7.296356,0.609645,-6.432896,-7.573508,-9.374003,-6.966350,-9.601468,9.626088,1.166676,-9.627495,-0.096282,9.964364,8.227890,-4.818676,6.160627,7.193502,7.296310,-9.644602,0.788795,7.258320,-2.361009,9.381115,-3.927686,0.413348,-7.415499,5.993896,6.847148,5.458639,5.142750,5.395735,-0.862329,3.954567,9.968005,-4.859157,9.053305,0.443429,1.691791,-5.405042,6.608684,-1.832483,-8.917460,2.095671,-8.150751,-8.836979,-3.699559,5.051508,-4.707702,2.947522,-4.978800,-8.264787,6.745932,4.285442,-5.465520,-8.793267,-4.851512,6.698547,-6.451594,-4.763468,3.742617,-0.281757,3.580271,0.983527,2.768564,9.109256,-8.949878,0.840139,6.012742,-2.844816,-3.220943,-3.931980,8.970228,5.406998,-7.956072,9.113859,-1.161479,5.377113,1.860584,2.952282,4.617794,-9.482152,-6.412399,3.942171,6.469133,-5.857340,-0.631852,-5.568059,-4.363540,2.983495,6.499205,8.470802,9.976128,8.093902,2.422093,4.902015,-5.088538,-2.443272,2.453131,-4.825951,8.592275,-5.455465,7.042892,-8.160553,1.882710,-2.750492,-3.504244,-1.839345,5.784095,-8.363830,4.130287,2.780075,2.854010,-6.892498,-9.245626,4.559826,7.065701,9.131120,-6.677932,1.132173,-1.124460,7.730311,4.846297,-3.349319,8.009555,7.240735,-2.647305,-4.662095,-8.922661,-5.806072,-2.510469,-7.327248,0.684799,-0.392703,4.878607,6.851020,-6.808534,-4.871940,9.038004,-3.971395,8.447753,5.197491,-8.009533,-8.423076,-0.438156,4.915487,-7.628269,8.211435,-7.151887,-3.241390,2.376190,4.446353,-0.862447,8.397954,-9.574562,-4.926059,3.183769,2.021156,-9.056099,-7.246827,-2.614413,3.290456,7.124335,-3.894554,-7.479672,-1.176154,0.814227,7.738307,1.336762,8.539359,-0.694279,-4.541502,7.197218,-8.022769,1.517285,-8.653954,-2.700297,-0.997122,-5.705968,7.880643,2.797710,-4.113879,1.589145,-0.572523,-1.360091,-4.327248,-8.148021,-1.695713,-2.002554,5.611413,2.080362,9.030252,5.215354,-6.010461,1.534967,-5.107196,1.030186,0.822749,8.025875,7.302366,0.275924,-0.797910,-5.478442,9.803770,1.374380,-5.518511,-2.820506,5.265412,-0.377036,-0.307998,3.118647,-5.086828,6.953911,-8.494707,-1.862114,1.693906,7.935575,1.535051,-6.853740,7.590902,2.851044,0.017468,9.966160,0.204989,-3.620017,9.531957,-2.436473,-1.907532,4.831138,-0.634170,-8.204758,3.376947,-8.194902,-0.374862,3.498517,-0.005700,3.667031,8.866489,-8.484107,-0.382150,-3.370854,1.647037,-2.727643,-0.828841,-9.278279,3.663366,-2.188056,-5.200387,8.311668,-5.477154,-7.081906,3.721614,-3.634914,1.882379,3.242185,7.496560,2.623894,-8.626817,-3.373567,-2.944106,-5.670223,7.291908,-2.014665,6.246880,-2.926398,4.726066,-0.113859,7.072558,4.214524,-4.222898,-1.788019,-4.603632,-6.017700,1.574727,9.003509,9.960199,2.818080,3.110327,-6.070448,7.777350,-3.740577,-0.712680], dtype = "float32")#candidate|6325|(1001,)|const|float32
call_6324 = func_4625_call(relay.reshape(const_6325.astype('float32'), [13, 77]))
call_6326 = func_4625_call(relay.reshape(const_6325.astype('float32'), [13, 77]))
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_6329 = relay.TupleGetItem(func_704_call(), 0)
call_6330 = relay.TupleGetItem(func_706_call(), 0)
bop_6333 = relay.not_equal(const_6325.astype('bool'), relay.reshape(call_6324.astype('bool'), relay.shape_of(const_6325))) # shape=(1001,)
bop_6336 = relay.not_equal(const_6325.astype('bool'), relay.reshape(call_6326.astype('bool'), relay.shape_of(const_6325))) # shape=(1001,)
uop_6349 = relay.exp(call_6329.astype('float32')) # shape=(10, 16, 10)
uop_6351 = relay.exp(call_6330.astype('float32')) # shape=(10, 16, 10)
func_6161_call = mod.get_global_var('func_6161')
func_6163_call = mutated_mod.get_global_var('func_6163')
call_6381 = func_6161_call()
call_6382 = func_6161_call()
output = relay.Tuple([call_6296,bop_6333,uop_6349,call_6381,])
output2 = relay.Tuple([call_6297,bop_6336,uop_6351,call_6382,])
func_6387 = relay.Function([], output)
mod['func_6387'] = func_6387
mod = relay.transform.InferType()(mod)
output = func_6387()
func_6388 = relay.Function([], output)
mutated_mod['func_6388'] = func_6388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6237_call = mod.get_global_var('func_6237')
func_6239_call = mutated_mod.get_global_var('func_6239')
call_6433 = relay.TupleGetItem(func_6237_call(), 0)
call_6434 = relay.TupleGetItem(func_6239_call(), 0)
output = relay.Tuple([call_6433,])
output2 = relay.Tuple([call_6434,])
func_6453 = relay.Function([], output)
mod['func_6453'] = func_6453
mod = relay.transform.InferType()(mod)
mutated_mod['func_6453'] = func_6453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6453_call = mutated_mod.get_global_var('func_6453')
call_6454 = func_6453_call()
output = call_6454
func_6455 = relay.Function([], output)
mutated_mod['func_6455'] = func_6455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_6526 = relay.TupleGetItem(func_1600_call(), 1)
call_6527 = relay.TupleGetItem(func_1601_call(), 1)
var_6528 = relay.var("var_6528", dtype = "float32", shape = (13, 77))#candidate|6528|(13, 77)|var|float32
bop_6529 = relay.left_shift(call_6526.astype('uint64'), relay.reshape(var_6528.astype('uint64'), relay.shape_of(call_6526))) # shape=(13, 77)
bop_6532 = relay.left_shift(call_6527.astype('uint64'), relay.reshape(var_6528.astype('uint64'), relay.shape_of(call_6527))) # shape=(13, 77)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_6537 = relay.TupleGetItem(func_775_call(), 3)
call_6538 = relay.TupleGetItem(func_776_call(), 3)
bop_6539 = relay.less(var_6528.astype('bool'), relay.reshape(bop_6529.astype('bool'), relay.shape_of(var_6528))) # shape=(13, 77)
bop_6542 = relay.less(var_6528.astype('bool'), relay.reshape(bop_6532.astype('bool'), relay.shape_of(var_6528))) # shape=(13, 77)
output = relay.Tuple([call_6537,bop_6539,])
output2 = relay.Tuple([call_6538,bop_6542,])
func_6549 = relay.Function([var_6528,], output)
mod['func_6549'] = func_6549
mod = relay.transform.InferType()(mod)
var_6550 = relay.var("var_6550", dtype = "float32", shape = (13, 77))#candidate|6550|(13, 77)|var|float32
output = func_6549(var_6550)
func_6551 = relay.Function([var_6550], output)
mutated_mod['func_6551'] = func_6551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4806_call = mod.get_global_var('func_4806')
func_4807_call = mutated_mod.get_global_var('func_4807')
call_6581 = func_4806_call()
call_6582 = func_4806_call()
output = call_6581
output2 = call_6582
func_6588 = relay.Function([], output)
mod['func_6588'] = func_6588
mod = relay.transform.InferType()(mod)
mutated_mod['func_6588'] = func_6588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6588_call = mutated_mod.get_global_var('func_6588')
call_6589 = func_6588_call()
output = call_6589
func_6590 = relay.Function([], output)
mutated_mod['func_6590'] = func_6590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1160_call = mod.get_global_var('func_1160')
func_1161_call = mutated_mod.get_global_var('func_1161')
call_6623 = relay.TupleGetItem(func_1160_call(), 1)
call_6624 = relay.TupleGetItem(func_1161_call(), 1)
func_3450_call = mod.get_global_var('func_3450')
func_3452_call = mutated_mod.get_global_var('func_3452')
call_6636 = relay.TupleGetItem(func_3450_call(), 1)
call_6637 = relay.TupleGetItem(func_3452_call(), 1)
func_2137_call = mod.get_global_var('func_2137')
func_2139_call = mutated_mod.get_global_var('func_2139')
var_6657 = relay.var("var_6657", dtype = "uint64", shape = (100,))#candidate|6657|(100,)|var|uint64
call_6656 = relay.TupleGetItem(func_2137_call(relay.reshape(var_6657.astype('uint64'), [10, 2, 5])), 0)
call_6658 = relay.TupleGetItem(func_2139_call(relay.reshape(var_6657.astype('uint64'), [10, 2, 5])), 0)
output = relay.Tuple([call_6623,call_6636,call_6656,var_6657,])
output2 = relay.Tuple([call_6624,call_6637,call_6658,var_6657,])
func_6665 = relay.Function([var_6657,], output)
mod['func_6665'] = func_6665
mod = relay.transform.InferType()(mod)
mutated_mod['func_6665'] = func_6665
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6666 = relay.var("var_6666", dtype = "uint64", shape = (100,))#candidate|6666|(100,)|var|uint64
func_6665_call = mutated_mod.get_global_var('func_6665')
call_6667 = func_6665_call(var_6666)
output = call_6667
func_6668 = relay.Function([var_6666], output)
mutated_mod['func_6668'] = func_6668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_6742 = relay.TupleGetItem(func_704_call(), 0)
call_6743 = relay.TupleGetItem(func_706_call(), 0)
output = relay.Tuple([call_6742,])
output2 = relay.Tuple([call_6743,])
func_6759 = relay.Function([], output)
mod['func_6759'] = func_6759
mod = relay.transform.InferType()(mod)
output = func_6759()
func_6760 = relay.Function([], output)
mutated_mod['func_6760'] = func_6760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5337_call = mod.get_global_var('func_5337')
func_5339_call = mutated_mod.get_global_var('func_5339')
call_6797 = relay.TupleGetItem(func_5337_call(), 0)
call_6798 = relay.TupleGetItem(func_5339_call(), 0)
output = call_6797
output2 = call_6798
func_6801 = relay.Function([], output)
mod['func_6801'] = func_6801
mod = relay.transform.InferType()(mod)
output = func_6801()
func_6802 = relay.Function([], output)
mutated_mod['func_6802'] = func_6802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1007_call = mod.get_global_var('func_1007')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_6837 = relay.TupleGetItem(func_1007_call(), 3)
call_6838 = relay.TupleGetItem(func_1008_call(), 3)
func_6665_call = mod.get_global_var('func_6665')
func_6668_call = mutated_mod.get_global_var('func_6668')
const_6851 = relay.const([[2,-1,-9,-4,9,1,-8,-7,9,-3,9,5,4,-10,1,7,-2,-8,3,9],[10,1,3,4,3,-2,1,-6,-1,-7,-6,8,5,1,9,-1,2,-8,-10,-8],[2,-7,5,-8,-10,1,-1,6,-4,-3,10,2,6,6,6,10,2,-3,-1,-5],[7,-8,4,2,2,-1,-9,-4,-4,-2,-4,10,-8,-5,3,-1,-6,7,-3,-8],[-6,9,3,-2,-4,9,5,-4,-4,3,10,8,-2,-8,7,2,-6,-9,-4,7]], dtype = "uint64")#candidate|6851|(5, 20)|const|uint64
call_6850 = relay.TupleGetItem(func_6665_call(relay.reshape(const_6851.astype('uint64'), [100,])), 2)
call_6852 = relay.TupleGetItem(func_6668_call(relay.reshape(const_6851.astype('uint64'), [100,])), 2)
output = relay.Tuple([call_6837,call_6850,const_6851,])
output2 = relay.Tuple([call_6838,call_6852,const_6851,])
func_6862 = relay.Function([], output)
mod['func_6862'] = func_6862
mod = relay.transform.InferType()(mod)
output = func_6862()
func_6863 = relay.Function([], output)
mutated_mod['func_6863'] = func_6863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4045_call = mod.get_global_var('func_4045')
func_4046_call = mutated_mod.get_global_var('func_4046')
call_6947 = relay.TupleGetItem(func_4045_call(), 2)
call_6948 = relay.TupleGetItem(func_4046_call(), 2)
func_4924_call = mod.get_global_var('func_4924')
func_4925_call = mutated_mod.get_global_var('func_4925')
call_6951 = relay.TupleGetItem(func_4924_call(), 1)
call_6952 = relay.TupleGetItem(func_4925_call(), 1)
func_682_call = mod.get_global_var('func_682')
func_683_call = mutated_mod.get_global_var('func_683')
call_6960 = relay.TupleGetItem(func_682_call(), 0)
call_6961 = relay.TupleGetItem(func_683_call(), 0)
output = relay.Tuple([call_6947,call_6951,call_6960,])
output2 = relay.Tuple([call_6948,call_6952,call_6961,])
func_6967 = relay.Function([], output)
mod['func_6967'] = func_6967
mod = relay.transform.InferType()(mod)
output = func_6967()
func_6968 = relay.Function([], output)
mutated_mod['func_6968'] = func_6968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mod.get_global_var('func_3450')
func_3452_call = mutated_mod.get_global_var('func_3452')
call_6980 = relay.TupleGetItem(func_3450_call(), 0)
call_6981 = relay.TupleGetItem(func_3452_call(), 0)
output = call_6980
output2 = call_6981
func_6984 = relay.Function([], output)
mod['func_6984'] = func_6984
mod = relay.transform.InferType()(mod)
output = func_6984()
func_6985 = relay.Function([], output)
mutated_mod['func_6985'] = func_6985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6759_call = mod.get_global_var('func_6759')
func_6760_call = mutated_mod.get_global_var('func_6760')
call_7043 = relay.TupleGetItem(func_6759_call(), 0)
call_7044 = relay.TupleGetItem(func_6760_call(), 0)
output = call_7043
output2 = call_7044
func_7051 = relay.Function([], output)
mod['func_7051'] = func_7051
mod = relay.transform.InferType()(mod)
output = func_7051()
func_7052 = relay.Function([], output)
mutated_mod['func_7052'] = func_7052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6387_call = mod.get_global_var('func_6387')
func_6388_call = mutated_mod.get_global_var('func_6388')
call_7058 = relay.TupleGetItem(func_6387_call(), 3)
call_7059 = relay.TupleGetItem(func_6388_call(), 3)
func_6967_call = mod.get_global_var('func_6967')
func_6968_call = mutated_mod.get_global_var('func_6968')
call_7073 = relay.TupleGetItem(func_6967_call(), 1)
call_7074 = relay.TupleGetItem(func_6968_call(), 1)
output = relay.Tuple([call_7058,call_7073,])
output2 = relay.Tuple([call_7059,call_7074,])
func_7076 = relay.Function([], output)
mod['func_7076'] = func_7076
mod = relay.transform.InferType()(mod)
output = func_7076()
func_7077 = relay.Function([], output)
mutated_mod['func_7077'] = func_7077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1930_call = mod.get_global_var('func_1930')
func_1932_call = mutated_mod.get_global_var('func_1932')
call_7147 = relay.TupleGetItem(func_1930_call(), 1)
call_7148 = relay.TupleGetItem(func_1932_call(), 1)
const_7152 = relay.const([[[False,False,False,True,True,False,False,True,True,True,False,False,False,False,False],[True,False,False,False,False,False,False,False,False,True,True,False,True,True,False],[False,True,False,False,False,False,True,False,True,False,False,True,False,False,True],[False,True,False,False,True,False,False,True,False,False,True,True,True,False,False],[True,False,False,False,True,False,False,False,True,True,False,True,False,False,True],[False,False,False,False,False,True,False,False,True,True,False,False,False,True,False],[True,True,True,True,True,False,True,True,False,False,False,False,True,False,False],[False,False,False,False,False,False,False,True,False,True,False,False,True,False,False],[True,True,True,False,False,False,False,False,True,False,False,True,False,False,True],[False,False,False,False,True,False,False,True,True,False,False,True,True,True,False],[True,False,True,False,True,False,False,True,False,True,False,False,False,False,False],[True,True,True,True,True,False,False,False,True,True,False,True,True,True,False],[True,False,False,False,False,True,False,False,True,False,True,True,True,True,True],[True,True,False,False,False,False,False,False,False,True,False,False,False,True,False],[False,False,False,True,False,True,False,True,True,True,True,True,False,False,False],[False,False,True,False,False,False,False,True,False,False,False,False,True,True,True]],[[True,True,True,True,False,False,False,True,True,False,False,False,True,True,True],[True,True,True,True,True,True,True,False,False,True,False,True,False,True,False],[True,False,True,True,False,False,True,False,True,False,False,True,False,True,False],[True,True,True,False,False,True,False,True,True,False,False,True,True,False,True],[True,False,True,True,True,True,True,False,False,False,False,False,True,False,False],[False,False,True,True,False,True,False,False,False,True,True,False,True,False,True],[False,False,True,True,True,False,True,False,False,True,False,False,True,True,False],[True,True,False,False,True,True,True,True,True,True,True,False,False,False,True],[True,False,True,False,True,False,False,False,False,False,True,False,False,True,True],[False,False,True,True,True,False,False,False,True,True,False,False,False,False,False],[True,True,False,False,True,False,False,True,False,False,True,False,False,True,True],[True,True,True,False,False,False,False,False,True,False,False,True,False,False,True],[True,True,False,True,True,True,True,True,False,False,True,True,False,True,False],[True,False,True,False,True,False,True,True,False,False,True,False,True,False,False],[False,True,True,False,False,False,True,False,True,True,False,False,False,False,True],[False,True,False,True,True,True,True,False,False,False,False,False,False,True,False]],[[True,True,True,False,True,True,True,False,True,False,True,True,True,True,True],[False,True,False,False,True,False,True,False,False,False,False,True,False,True,False],[False,False,False,True,False,True,False,True,False,False,False,True,True,True,True],[True,True,False,True,False,True,True,True,False,False,True,False,True,True,True],[True,True,True,True,False,False,True,True,True,True,True,True,False,False,False],[True,True,False,False,True,False,True,False,True,True,False,True,False,True,False],[True,True,False,True,False,False,True,True,True,False,False,False,False,True,True],[False,False,False,False,False,True,False,False,False,False,True,False,True,True,False],[True,True,True,True,False,True,False,True,True,True,True,True,False,True,False],[True,False,True,True,False,True,True,True,True,True,True,True,True,False,False],[True,True,True,False,True,True,False,True,False,True,False,False,False,False,True],[True,True,True,False,True,False,True,False,True,True,True,False,False,False,False],[False,False,True,False,False,False,True,False,True,False,True,False,False,False,False],[True,True,False,True,True,True,True,False,True,False,True,False,False,True,False],[False,False,False,True,False,True,False,True,True,True,True,True,True,True,True],[False,True,False,False,False,True,True,True,True,False,True,True,False,True,False]],[[False,True,False,True,False,False,False,False,False,True,False,True,False,True,True],[True,True,False,True,True,False,False,False,True,False,False,False,True,False,True],[True,True,False,False,False,False,False,False,True,False,True,True,False,False,False],[True,True,False,True,True,True,True,True,False,False,True,False,False,False,True],[True,False,False,True,False,False,True,False,False,False,True,True,True,True,True],[False,False,True,False,True,False,True,False,True,True,False,True,False,False,True],[True,True,True,True,False,True,True,True,False,True,False,True,False,True,False],[False,True,False,True,True,True,True,True,True,False,False,True,True,False,True],[True,True,False,False,False,False,False,True,True,False,False,True,True,True,True],[True,True,False,True,False,False,False,True,True,True,True,True,False,True,False],[True,False,True,True,False,False,True,False,True,False,False,False,False,True,True],[True,False,False,True,True,False,True,True,True,False,False,False,False,False,True],[False,True,True,True,False,False,True,True,False,True,False,True,True,False,False],[False,True,True,False,False,False,False,False,False,True,False,False,True,False,True],[True,False,False,False,False,True,False,True,False,True,False,False,False,True,False],[False,True,True,True,True,False,False,True,False,False,False,False,False,False,True]],[[True,True,True,False,True,True,True,False,True,True,True,True,False,True,True],[False,True,False,False,True,False,False,True,True,False,True,False,False,True,False],[True,True,True,True,True,False,False,False,False,True,True,True,True,True,False],[False,False,False,False,False,True,False,False,False,False,False,True,False,False,False],[False,False,True,True,True,False,True,True,False,False,True,False,True,False,True],[False,False,True,False,False,True,True,True,True,True,True,True,False,True,False],[False,True,False,False,False,True,False,True,False,True,True,True,True,True,True],[False,True,True,False,True,False,True,False,True,True,True,False,False,True,True],[False,True,False,False,True,False,True,False,True,False,True,True,True,False,False],[True,False,True,False,False,False,False,False,False,True,True,True,True,True,False],[False,False,True,False,False,True,False,False,True,False,False,False,True,True,False],[True,False,False,False,True,True,False,True,True,False,True,False,True,False,True],[True,True,True,False,True,False,True,False,False,False,False,False,False,True,True],[False,False,False,True,False,True,False,False,False,True,False,True,True,True,False],[False,False,True,False,False,False,False,False,False,False,False,False,False,True,True],[True,True,True,True,False,True,False,False,True,True,True,True,False,False,False]],[[False,True,False,True,True,True,False,True,True,False,True,True,True,True,False],[False,False,False,False,False,False,True,False,True,True,True,False,False,False,True],[True,False,False,True,False,True,False,False,False,True,False,True,True,True,False],[True,False,False,True,False,False,False,True,True,True,False,False,True,True,False],[False,False,True,False,True,True,True,False,True,True,True,True,False,False,True],[False,False,True,True,True,True,True,True,False,False,False,True,True,False,False],[True,False,False,False,True,True,True,False,True,False,False,True,False,False,True],[True,True,True,False,False,True,True,True,False,True,False,True,False,True,True],[False,False,True,False,True,False,False,False,True,True,True,True,False,True,True],[False,False,False,True,False,False,False,True,False,True,False,False,False,True,True],[True,True,True,False,False,False,True,False,True,False,True,False,True,False,True],[False,False,True,True,True,True,True,False,False,True,True,False,True,True,True],[False,False,True,False,False,True,False,True,True,True,True,False,True,False,False],[False,True,False,True,False,False,False,True,False,False,True,True,True,False,False],[False,True,False,True,True,False,False,True,False,True,True,True,False,False,False],[False,True,True,True,False,True,True,True,False,True,True,True,False,False,False]],[[False,True,True,False,False,False,False,True,True,False,False,False,False,False,True],[False,True,False,True,False,False,False,True,True,False,False,True,False,False,True],[False,False,False,True,False,True,True,False,False,False,True,False,True,True,True],[False,True,False,False,False,False,False,False,True,False,False,True,True,False,True],[False,False,True,True,True,True,False,False,True,False,True,False,False,False,True],[True,False,False,True,False,False,True,False,False,False,False,True,True,True,True],[False,False,False,True,True,True,False,True,False,False,True,True,False,True,True],[False,True,True,False,False,True,True,False,True,True,False,False,False,False,True],[False,False,True,False,False,False,True,False,True,True,False,False,False,True,False],[True,True,True,False,True,True,True,False,True,True,False,False,True,False,False],[False,False,False,False,False,False,False,False,True,False,True,True,False,False,False],[False,True,True,True,False,True,True,True,True,False,False,True,False,True,False],[False,False,False,True,False,True,True,False,True,False,False,False,False,True,False],[False,True,False,False,True,False,True,False,True,False,False,False,False,True,True],[False,True,True,False,False,True,True,False,False,False,False,False,True,False,True],[True,True,True,True,True,False,True,False,False,True,False,False,True,False,True]],[[False,False,True,False,True,True,True,False,True,True,True,False,False,False,False],[True,True,True,False,True,False,False,False,False,False,True,True,True,False,True],[False,True,False,True,True,True,True,False,True,False,False,False,False,False,False],[True,True,False,False,False,True,True,False,True,True,True,True,False,False,True],[False,False,False,False,False,True,True,True,False,False,True,False,True,False,False],[True,True,True,True,True,True,False,False,False,False,False,True,True,False,True],[False,False,True,True,False,True,False,True,False,False,False,False,False,True,False],[False,False,True,False,False,False,True,False,True,True,False,True,False,True,True],[True,False,False,True,True,False,False,True,False,True,False,False,True,False,True],[True,True,True,False,True,True,False,False,False,True,False,False,False,False,False],[False,False,False,False,True,True,False,True,False,False,False,False,False,True,True],[True,False,False,True,False,True,False,True,True,False,False,True,True,True,False],[True,True,False,True,True,True,False,True,False,False,False,True,True,False,False],[False,False,True,False,True,True,True,True,False,False,False,True,False,True,False],[False,False,True,False,True,False,True,True,True,True,True,True,False,False,False],[True,False,False,False,False,True,True,True,False,False,False,False,True,False,True]],[[True,False,True,False,False,False,False,True,True,True,False,True,True,True,True],[True,False,False,True,False,False,False,True,False,False,True,False,True,False,False],[False,True,False,False,True,False,False,True,True,False,True,True,True,False,False],[False,True,False,False,False,False,True,False,False,True,False,True,True,True,False],[True,False,True,True,False,True,True,False,False,False,False,True,True,True,True],[False,False,False,False,False,False,True,True,False,True,False,True,False,True,False],[False,False,False,False,True,False,True,False,True,True,False,True,True,False,True],[False,False,True,True,False,True,True,True,True,False,False,True,True,True,True],[True,True,True,False,True,True,False,False,True,True,False,False,True,True,False],[False,True,False,True,False,False,False,False,False,True,False,False,True,True,True],[False,False,True,True,False,False,False,True,True,False,False,True,False,True,False],[False,True,True,False,False,False,False,True,False,False,False,False,True,True,True],[False,True,True,True,True,False,False,True,True,True,True,True,False,True,True],[False,True,False,True,True,True,True,False,False,True,False,False,True,True,False],[False,False,True,False,True,False,False,True,False,True,False,True,False,False,True],[True,False,False,False,False,False,True,True,False,True,True,False,True,False,False]],[[True,True,False,True,True,True,True,True,True,True,False,True,True,False,False],[False,False,False,False,False,False,False,True,False,False,False,True,True,True,True],[True,True,False,True,False,True,False,True,False,True,True,False,True,False,True],[True,False,True,True,False,True,False,True,False,False,True,False,True,False,True],[False,True,False,True,False,False,False,True,False,True,False,True,True,True,True],[False,False,True,True,False,True,False,False,False,False,False,False,False,True,False],[False,True,False,False,False,False,True,True,True,True,False,False,False,True,True],[True,False,False,False,True,False,True,False,False,False,False,False,False,True,True],[False,True,False,False,True,True,True,False,False,False,True,False,False,True,True],[False,False,True,False,False,True,False,False,True,False,False,True,False,False,False],[True,False,True,True,True,True,False,False,True,False,False,True,False,True,False],[False,True,True,True,True,True,False,True,True,True,True,True,True,True,True],[True,False,False,True,True,True,False,False,True,True,False,True,False,True,False],[True,True,True,False,False,False,True,True,True,True,False,False,False,True,True],[False,True,True,False,False,True,True,False,True,False,True,True,True,False,False],[False,True,True,True,True,False,False,False,True,True,True,True,False,False,True]],[[True,False,False,True,False,False,False,True,False,True,True,True,False,False,True],[True,False,False,False,False,True,False,False,False,True,True,True,True,True,True],[False,True,True,False,False,True,False,False,False,False,True,True,True,True,False],[True,False,False,True,True,False,True,True,False,True,True,False,False,False,True],[False,False,False,True,False,False,True,False,False,True,False,True,True,True,True],[True,False,True,True,False,False,False,True,False,False,False,True,False,False,True],[False,False,True,False,False,True,True,True,True,True,False,True,True,True,False],[False,False,True,True,False,True,False,False,False,False,False,False,True,True,False],[False,True,True,True,True,True,False,False,False,True,False,False,False,True,False],[False,True,False,True,False,False,False,False,False,False,False,True,False,True,False],[True,True,True,False,False,False,True,False,True,True,True,True,True,True,False],[True,False,True,False,True,True,False,False,False,True,False,False,False,True,False],[False,False,True,True,False,False,True,True,False,False,False,False,True,True,True],[True,True,True,False,True,True,False,True,True,False,False,True,False,False,False],[False,False,False,False,True,False,False,True,True,False,True,True,False,True,True],[False,False,False,True,True,True,False,True,False,True,True,True,True,True,True]],[[True,False,False,False,False,True,False,False,False,False,False,False,True,True,True],[False,True,True,False,False,False,True,True,True,False,False,False,True,True,False],[False,True,False,False,True,False,False,True,False,False,True,False,False,True,True],[True,True,False,True,False,True,True,True,False,True,True,False,True,False,False],[True,True,True,True,True,False,True,True,True,True,False,True,False,False,False],[True,False,True,False,True,True,True,False,True,True,True,False,True,True,True],[True,False,False,False,False,True,False,True,True,False,True,True,True,True,True],[True,False,True,False,False,False,False,True,True,True,False,False,True,False,True],[False,True,False,False,False,False,False,False,True,True,False,False,False,True,True],[True,False,False,True,True,False,True,True,False,False,False,False,True,True,False],[False,False,False,False,False,False,False,False,False,False,True,True,False,True,False],[False,True,True,False,False,False,False,True,True,False,False,True,True,True,False],[True,True,False,True,False,True,True,False,True,False,False,True,True,True,False],[True,True,True,False,True,True,False,True,True,True,False,True,False,True,False],[True,False,True,True,False,True,False,True,False,False,True,False,True,False,True],[True,False,False,True,False,True,False,True,True,True,False,True,False,True,False]],[[False,False,False,False,True,False,True,False,False,True,False,True,False,True,False],[True,False,False,False,True,False,True,False,True,False,True,False,True,False,True],[True,False,True,False,False,False,False,False,False,False,True,False,False,True,True],[False,True,False,False,True,True,False,False,True,False,True,True,False,False,True],[True,False,True,False,False,False,False,False,False,True,True,True,True,True,True],[True,True,False,True,True,True,False,True,True,False,True,False,True,True,True],[False,False,True,True,False,True,True,True,True,True,False,False,True,True,True],[False,False,False,False,True,True,True,False,True,False,False,False,True,True,False],[False,True,False,True,False,True,False,False,False,True,True,False,False,False,True],[True,False,False,False,False,True,True,True,True,False,False,True,True,True,False],[True,True,True,True,False,False,False,False,False,False,True,True,False,True,False],[False,True,False,False,True,True,True,False,False,True,True,False,False,False,True],[True,True,False,False,False,False,False,True,False,False,True,False,False,False,True],[False,False,False,False,False,True,True,True,False,False,False,True,False,True,True],[False,False,False,False,False,False,True,True,True,True,True,True,True,True,True],[True,True,True,True,False,True,True,True,False,True,True,True,False,False,False]],[[True,False,False,True,False,False,True,True,True,True,True,True,False,False,False],[True,True,False,False,True,False,True,False,True,True,True,True,False,True,True],[False,False,True,False,True,True,True,False,True,False,True,False,True,True,False],[False,False,False,False,False,True,False,True,True,True,True,False,False,True,True],[True,False,True,False,False,False,False,True,False,True,False,False,True,True,True],[True,True,False,True,True,False,False,True,False,True,True,True,True,True,False],[False,True,False,True,True,True,True,True,False,False,False,False,False,True,False],[True,True,True,True,False,True,False,True,False,False,False,True,True,False,True],[True,False,False,False,False,True,True,True,True,True,True,True,False,True,True],[False,True,False,True,False,False,False,False,True,True,False,False,False,True,False],[True,True,False,True,True,False,True,False,False,False,True,True,True,True,True],[False,True,False,False,True,False,True,True,True,False,False,True,False,True,True],[False,False,False,True,False,True,True,True,True,True,True,False,True,False,False],[False,True,True,False,True,False,False,False,False,True,True,False,True,True,True],[False,False,False,False,True,False,True,False,True,False,False,False,False,True,False],[False,True,True,False,True,True,False,True,True,False,True,False,True,False,False]]], dtype = "bool")#candidate|7152|(14, 16, 15)|const|bool
bop_7153 = relay.logical_xor(call_7147.astype('int8'), relay.reshape(const_7152.astype('int8'), relay.shape_of(call_7147))) # shape=(14, 16, 15)
bop_7156 = relay.logical_xor(call_7148.astype('int8'), relay.reshape(const_7152.astype('int8'), relay.shape_of(call_7148))) # shape=(14, 16, 15)
output = bop_7153
output2 = bop_7156
func_7162 = relay.Function([], output)
mod['func_7162'] = func_7162
mod = relay.transform.InferType()(mod)
output = func_7162()
func_7163 = relay.Function([], output)
mutated_mod['func_7163'] = func_7163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2680_call = mod.get_global_var('func_2680')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_7212 = relay.TupleGetItem(func_2680_call(), 1)
call_7213 = relay.TupleGetItem(func_2681_call(), 1)
func_1553_call = mod.get_global_var('func_1553')
func_1556_call = mutated_mod.get_global_var('func_1556')
call_7225 = relay.TupleGetItem(func_1553_call(relay.reshape(call_7212.astype('float32'), [13, 77])), 2)
call_7226 = relay.TupleGetItem(func_1556_call(relay.reshape(call_7212.astype('float32'), [13, 77])), 2)
func_1210_call = mod.get_global_var('func_1210')
func_1211_call = mutated_mod.get_global_var('func_1211')
call_7228 = relay.TupleGetItem(func_1210_call(), 0)
call_7229 = relay.TupleGetItem(func_1211_call(), 0)
func_7162_call = mod.get_global_var('func_7162')
func_7163_call = mutated_mod.get_global_var('func_7163')
call_7241 = func_7162_call()
call_7242 = func_7162_call()
output = relay.Tuple([call_7212,call_7225,call_7228,call_7241,])
output2 = relay.Tuple([call_7213,call_7226,call_7229,call_7242,])
func_7252 = relay.Function([], output)
mod['func_7252'] = func_7252
mod = relay.transform.InferType()(mod)
output = func_7252()
func_7253 = relay.Function([], output)
mutated_mod['func_7253'] = func_7253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3080_call = mod.get_global_var('func_3080')
func_3082_call = mutated_mod.get_global_var('func_3082')
call_7331 = func_3080_call()
call_7332 = func_3080_call()
func_5403_call = mod.get_global_var('func_5403')
func_5407_call = mutated_mod.get_global_var('func_5407')
var_7346 = relay.var("var_7346", dtype = "float64", shape = (960, 4))#candidate|7346|(960, 4)|var|float64
call_7345 = relay.TupleGetItem(func_5403_call(relay.reshape(var_7346.astype('float64'), [16, 15, 16]), relay.reshape(var_7346.astype('float64'), [16, 15, 16]), ), 0)
call_7347 = relay.TupleGetItem(func_5407_call(relay.reshape(var_7346.astype('float64'), [16, 15, 16]), relay.reshape(var_7346.astype('float64'), [16, 15, 16]), ), 0)
func_3321_call = mod.get_global_var('func_3321')
func_3322_call = mutated_mod.get_global_var('func_3322')
call_7358 = relay.TupleGetItem(func_3321_call(), 1)
call_7359 = relay.TupleGetItem(func_3322_call(), 1)
bop_7363 = relay.logical_xor(var_7346.astype('uint32'), relay.reshape(call_7345.astype('uint32'), relay.shape_of(var_7346))) # shape=(960, 4)
bop_7366 = relay.logical_xor(var_7346.astype('uint32'), relay.reshape(call_7347.astype('uint32'), relay.shape_of(var_7346))) # shape=(960, 4)
func_7252_call = mod.get_global_var('func_7252')
func_7253_call = mutated_mod.get_global_var('func_7253')
call_7373 = relay.TupleGetItem(func_7252_call(), 2)
call_7374 = relay.TupleGetItem(func_7253_call(), 2)
func_2500_call = mod.get_global_var('func_2500')
func_2501_call = mutated_mod.get_global_var('func_2501')
call_7375 = relay.TupleGetItem(func_2500_call(), 2)
call_7376 = relay.TupleGetItem(func_2501_call(), 2)
output = relay.Tuple([call_7331,call_7358,bop_7363,call_7373,call_7375,])
output2 = relay.Tuple([call_7332,call_7359,bop_7366,call_7374,call_7376,])
func_7422 = relay.Function([var_7346,], output)
mod['func_7422'] = func_7422
mod = relay.transform.InferType()(mod)
var_7423 = relay.var("var_7423", dtype = "float64", shape = (960, 4))#candidate|7423|(960, 4)|var|float64
output = func_7422(var_7423)
func_7424 = relay.Function([var_7423], output)
mutated_mod['func_7424'] = func_7424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3106_call = mod.get_global_var('func_3106')
func_3107_call = mutated_mod.get_global_var('func_3107')
call_7426 = relay.TupleGetItem(func_3106_call(), 0)
call_7427 = relay.TupleGetItem(func_3107_call(), 0)
func_4143_call = mod.get_global_var('func_4143')
func_4146_call = mutated_mod.get_global_var('func_4146')
const_7433 = relay.const([9.537274,-5.647589,0.351588,8.253512,-9.884034,-5.919683,4.964058,-6.253560,9.790081,2.329829,-1.883378,4.860454,1.287317,-4.745683,3.600448,1.431163,8.049178,0.180302,7.400693,8.622105,-1.878163,-3.709609,4.566312,4.595217,-6.336771,-4.318320,-7.271159,-8.487346,-7.537065,8.538010], dtype = "float32")#candidate|7433|(30,)|const|float32
var_7434 = relay.var("var_7434", dtype = "float32", shape = (3, 30))#candidate|7434|(3, 30)|var|float32
call_7432 = relay.TupleGetItem(func_4143_call(relay.reshape(const_7433.astype('float32'), [15, 1, 2]), relay.reshape(var_7434.astype('float32'), [15, 3, 2]), ), 0)
call_7435 = relay.TupleGetItem(func_4146_call(relay.reshape(const_7433.astype('float32'), [15, 1, 2]), relay.reshape(var_7434.astype('float32'), [15, 3, 2]), ), 0)
bop_7448 = relay.not_equal(const_7433.astype('bool'), var_7434.astype('bool')) # shape=(3, 30)
output = relay.Tuple([call_7426,call_7432,bop_7448,])
output2 = relay.Tuple([call_7427,call_7435,bop_7448,])
func_7461 = relay.Function([var_7434,], output)
mod['func_7461'] = func_7461
mod = relay.transform.InferType()(mod)
mutated_mod['func_7461'] = func_7461
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7462 = relay.var("var_7462", dtype = "float32", shape = (3, 30))#candidate|7462|(3, 30)|var|float32
func_7461_call = mutated_mod.get_global_var('func_7461')
call_7463 = func_7461_call(var_7462)
output = call_7463
func_7464 = relay.Function([var_7462], output)
mutated_mod['func_7464'] = func_7464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5411_call = mod.get_global_var('func_5411')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_7542 = func_5411_call()
call_7543 = func_5411_call()
output = call_7542
output2 = call_7543
func_7552 = relay.Function([], output)
mod['func_7552'] = func_7552
mod = relay.transform.InferType()(mod)
output = func_7552()
func_7553 = relay.Function([], output)
mutated_mod['func_7553'] = func_7553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7559 = relay.var("var_7559", dtype = "float32", shape = (15, 1, 12))#candidate|7559|(15, 1, 12)|var|float32
uop_7560 = relay.rsqrt(var_7559.astype('float32')) # shape=(15, 1, 12)
func_1553_call = mod.get_global_var('func_1553')
func_1556_call = mutated_mod.get_global_var('func_1556')
var_7578 = relay.var("var_7578", dtype = "float32", shape = (1001,))#candidate|7578|(1001,)|var|float32
call_7577 = relay.TupleGetItem(func_1553_call(relay.reshape(var_7578.astype('float32'), [13, 77])), 1)
call_7579 = relay.TupleGetItem(func_1556_call(relay.reshape(var_7578.astype('float32'), [13, 77])), 1)
func_6237_call = mod.get_global_var('func_6237')
func_6239_call = mutated_mod.get_global_var('func_6239')
call_7599 = relay.TupleGetItem(func_6237_call(), 0)
call_7600 = relay.TupleGetItem(func_6239_call(), 0)
output = relay.Tuple([uop_7560,call_7577,var_7578,call_7599,])
output2 = relay.Tuple([uop_7560,call_7579,var_7578,call_7600,])
func_7605 = relay.Function([var_7559,var_7578,], output)
mod['func_7605'] = func_7605
mod = relay.transform.InferType()(mod)
var_7606 = relay.var("var_7606", dtype = "float32", shape = (15, 1, 12))#candidate|7606|(15, 1, 12)|var|float32
var_7607 = relay.var("var_7607", dtype = "float32", shape = (1001,))#candidate|7607|(1001,)|var|float32
output = func_7605(var_7606,var_7607,)
func_7608 = relay.Function([var_7606,var_7607,], output)
mutated_mod['func_7608'] = func_7608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3080_call = mod.get_global_var('func_3080')
func_3082_call = mutated_mod.get_global_var('func_3082')
call_7642 = func_3080_call()
call_7643 = func_3080_call()
output = call_7642
output2 = call_7643
func_7660 = relay.Function([], output)
mod['func_7660'] = func_7660
mod = relay.transform.InferType()(mod)
output = func_7660()
func_7661 = relay.Function([], output)
mutated_mod['func_7661'] = func_7661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1725_call = mod.get_global_var('func_1725')
func_1726_call = mutated_mod.get_global_var('func_1726')
call_7694 = relay.TupleGetItem(func_1725_call(), 0)
call_7695 = relay.TupleGetItem(func_1726_call(), 0)
func_5886_call = mod.get_global_var('func_5886')
func_5887_call = mutated_mod.get_global_var('func_5887')
call_7760 = relay.TupleGetItem(func_5886_call(), 1)
call_7761 = relay.TupleGetItem(func_5887_call(), 1)
output = relay.Tuple([call_7694,call_7760,])
output2 = relay.Tuple([call_7695,call_7761,])
func_7766 = relay.Function([], output)
mod['func_7766'] = func_7766
mod = relay.transform.InferType()(mod)
mutated_mod['func_7766'] = func_7766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7766_call = mutated_mod.get_global_var('func_7766')
call_7767 = func_7766_call()
output = call_7767
func_7768 = relay.Function([], output)
mutated_mod['func_7768'] = func_7768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5826_call = mod.get_global_var('func_5826')
func_5828_call = mutated_mod.get_global_var('func_5828')
call_7799 = relay.TupleGetItem(func_5826_call(), 1)
call_7800 = relay.TupleGetItem(func_5828_call(), 1)
func_4175_call = mod.get_global_var('func_4175')
func_4177_call = mutated_mod.get_global_var('func_4177')
call_7810 = func_4175_call()
call_7811 = func_4175_call()
func_5488_call = mod.get_global_var('func_5488')
func_5490_call = mutated_mod.get_global_var('func_5490')
call_7820 = relay.TupleGetItem(func_5488_call(), 0)
call_7821 = relay.TupleGetItem(func_5490_call(), 0)
func_1634_call = mod.get_global_var('func_1634')
func_1636_call = mutated_mod.get_global_var('func_1636')
var_7840 = relay.var("var_7840", dtype = "float32", shape = (840, 4))#candidate|7840|(840, 4)|var|float32
call_7839 = func_1634_call(relay.reshape(var_7840.astype('float32'), [14, 16, 15]))
call_7841 = func_1634_call(relay.reshape(var_7840.astype('float32'), [14, 16, 15]))
const_7849 = relay.const([[-5.100542,-8.000138,-3.579860,5.964747],[3.166304,8.045518,6.752964,-5.007161],[-6.240195,7.362397,-2.027730,-2.990904],[4.554027,-2.608623,-9.831404,4.232739],[4.867267,-2.963096,6.630551,4.912720],[4.017169,-2.380661,-9.125440,3.801925],[5.173239,0.361755,3.444058,5.563750],[1.439110,9.135710,8.904047,-2.799392],[-7.950958,-8.023883,6.877740,-9.642825],[-2.294955,6.118234,3.885105,0.805761],[6.252213,3.900309,1.709209,3.736668],[-7.288330,-2.741120,6.282890,-8.361503],[5.678427,4.495328,-9.910950,5.531355],[5.523113,-4.790930,8.006240,4.396457],[-7.426305,-2.055608,3.767487,-8.377722],[-3.726918,8.020084,9.336338,-1.143022],[-0.466849,6.987617,2.409132,-7.048776],[2.479464,-0.659016,-7.413565,6.722539],[-5.550142,-8.472532,-9.260967,0.825644],[-5.861763,-3.341685,-8.933001,-4.378633],[5.033855,0.899802,9.507889,4.701144],[-9.883297,6.193234,2.801096,4.191823],[-6.239146,-1.621285,-7.206983,-6.375638],[-4.348070,8.530375,7.716538,-8.074913],[0.273350,9.826253,6.664726,-3.379505],[-0.310490,-0.286248,-7.270089,9.861625],[-6.407826,6.316848,3.716704,6.951242],[2.841427,-2.674930,-5.900978,0.010553],[2.733281,-9.917252,8.318159,-4.520137],[9.642489,8.806070,1.064607,-3.669678],[-7.841305,-0.877691,8.662406,-2.319437],[-2.794732,5.631346,7.874610,1.171835],[-0.897157,3.402696,-6.357764,5.297115],[-8.325198,2.128180,-4.902959,0.510328],[-0.800267,-0.666480,2.963763,-1.487097],[-7.322982,4.546601,-1.626768,-0.237415],[-4.767833,-2.423236,6.650945,-3.636661],[-5.605592,5.821891,-6.094482,-6.893128],[5.476225,-8.980423,2.026665,-2.516698],[5.536623,8.900568,-4.480584,-3.349079],[4.021718,0.829261,-5.212749,-8.188625],[-1.168179,1.145302,2.543650,7.519383],[2.488020,4.688988,-7.210351,-9.453437],[8.963653,9.306075,9.209977,7.638418],[-4.622970,2.249944,-9.097216,6.644955],[-8.698168,9.670531,-0.211774,-7.387427],[1.614866,-3.281698,6.047183,2.643885],[-2.549848,2.811808,-9.564060,-2.285435],[1.999600,6.529451,-6.023032,-6.878450],[-2.155920,-0.601047,-4.218502,-5.601660],[-9.194151,9.100380,1.935582,7.831508],[1.198958,9.676245,4.271192,-3.057599],[5.706473,-1.064648,4.007691,-6.931056],[6.398968,-3.000678,4.041423,5.601451],[-9.998910,-0.734144,7.394153,4.627224],[-6.150880,-3.344034,9.429975,-0.301685],[-0.030046,-3.584849,-4.816540,1.549552],[5.862338,9.104396,-7.428338,-8.569649],[-1.950241,-4.279397,-8.742884,-0.355491],[-2.030878,-5.042006,-7.809664,8.036760],[-5.643864,-8.118266,-3.509561,-5.864867],[1.026822,5.354786,-5.488285,-4.997930],[-2.204175,-4.038373,6.382456,8.439811],[1.474492,8.631093,-3.918110,-6.276097],[-3.347013,6.433339,0.878922,-6.630167],[-3.783889,-7.618228,9.133981,6.703877],[-6.340111,3.375504,-3.228055,2.721224],[-1.643067,9.166845,6.940199,3.614073],[-1.100436,5.301063,-9.357674,7.159751],[2.182127,2.653081,-1.954951,-3.710378],[-6.844001,-7.791475,-6.449187,-3.982166],[-3.667820,0.207886,-1.759755,8.023119],[-3.137128,-3.630129,-4.809416,0.616244],[5.840813,0.783017,4.530246,-8.500935],[8.138905,-5.805333,5.526846,-7.451542],[6.558202,8.276033,1.816709,-3.657035],[0.702155,-7.219754,-5.211258,0.949607],[4.198518,-3.916741,-0.514740,-1.272117],[4.454308,8.333472,-6.518122,9.895329],[-1.878439,8.939104,8.260816,9.768146],[-8.144564,7.142119,5.926725,-8.471377],[2.914541,5.326036,-2.053212,5.898920],[-2.023836,-0.749087,-0.483589,-5.114998],[-0.246518,-7.000945,-1.787737,5.636695],[-2.908472,1.442459,7.056738,-0.535099],[-2.267111,9.773015,9.045111,3.515342],[7.658264,-4.390353,8.952563,-0.359138],[-6.606167,0.231233,-9.044887,5.608306],[1.640820,-4.748666,3.514078,1.478607],[-1.250067,-1.525444,7.130002,-8.074477],[4.487297,2.487975,3.325645,-6.836281],[-8.158035,-2.013256,-5.339014,9.839851],[6.570466,9.181005,-4.149290,-3.998175],[5.302450,5.359319,-8.391655,9.645578],[-9.805454,-4.531686,1.462833,-8.581072],[6.980613,-1.765381,-5.292582,7.718389],[-5.541477,-9.808360,-7.668481,5.043622],[1.974834,-2.577819,-2.216611,3.333815],[-8.496074,5.824355,6.522887,-6.146220],[-8.060820,-7.058535,-3.997251,-3.108719],[-2.919320,-4.421558,-0.824017,-9.478874],[-7.503761,6.986262,7.788618,6.683804],[0.860261,5.768160,-1.748375,9.596068],[-3.783820,-4.027306,5.352455,8.449260],[6.664315,-7.286983,-8.177928,-7.101784],[-0.872738,6.112099,-1.513643,0.325511],[1.215414,-5.699602,-7.161132,2.287695],[-8.287899,-9.871033,-2.564426,0.732711],[0.666021,9.519485,6.978660,-9.203613],[-3.882855,9.874611,-2.664762,-0.349449],[3.592745,-1.312366,-7.956740,-6.535994],[8.555326,-8.727421,1.480643,3.507409],[-0.265611,-5.155053,-7.520660,5.790511],[-3.131751,-4.408158,7.265587,6.646780],[3.483839,7.355728,5.458437,-6.322579],[-8.259506,-4.254390,6.131127,-0.249335],[8.267182,1.526620,4.871473,-6.029261],[3.824290,-3.859326,5.071638,2.009875],[8.772468,-0.990164,-1.696717,3.058539],[3.293254,-4.488728,-0.163646,-5.178858],[6.626146,6.463256,-3.988595,3.412941],[-4.002362,9.517288,9.349002,9.291755],[6.140650,3.244386,-1.040997,-8.999367],[-3.680956,-5.914968,4.747668,-7.060023],[-2.361710,1.131326,9.519190,-3.481201],[-5.930139,7.408609,-1.897931,8.142698],[-5.367139,-7.523679,2.455387,4.202993],[8.225774,-5.472309,-7.674334,-9.126646],[2.091612,-3.697154,-2.742683,-2.179450],[-6.200067,-9.270026,-1.341725,-0.618421],[-5.139659,-6.552076,0.470558,2.197035],[6.075952,9.053671,6.759367,5.148623],[0.495337,6.618972,-0.766849,-1.205076],[-0.302578,-0.083345,-0.982200,0.724849],[3.730715,4.454968,5.917052,5.531095],[-5.123500,8.985580,-6.594904,-2.317366],[-1.795047,3.607891,-4.190981,0.396171],[-3.091221,2.722811,-9.162167,8.945473],[-1.276304,-2.084800,-8.344163,4.107832],[-2.536109,-2.462132,7.083346,-2.661765],[-9.408058,-6.352827,9.892302,0.507612],[5.516522,2.999343,-8.053685,2.316892],[3.794350,-6.633232,-7.094106,-4.504679],[-8.829201,0.145076,-1.003959,1.213058],[-3.080930,8.578371,4.707533,1.066973],[0.514903,-1.658992,-2.563069,9.558331],[5.869086,1.993772,5.097179,-0.659742],[-5.329209,1.080348,0.999472,5.912892],[-7.107371,-4.868692,-1.500024,5.738922],[-9.576868,7.344125,7.052086,-8.335206],[-5.861931,-1.501230,2.431653,-7.250851],[1.711990,-6.326137,-8.479735,-2.746672],[-6.031572,0.433323,-7.105360,4.086084],[-6.189513,2.706707,3.058771,8.544657],[1.642198,4.122896,-0.489354,-4.394784],[9.014153,6.040486,4.939665,-8.489771],[-6.240921,-4.231787,-2.427768,0.834746],[-4.112052,3.607443,-8.121716,6.473992],[-0.600931,-7.013607,-8.916669,-1.509378],[-9.576663,-2.817767,8.275222,9.689238],[-7.494735,1.632098,1.663988,7.994952],[9.607711,2.372547,6.411745,-1.180840],[1.257311,9.460540,8.442283,4.673695],[2.092673,6.781391,7.999611,-4.355978],[-3.131993,-0.976776,-3.083451,2.028018],[-3.997429,3.723110,-0.334858,-7.960870],[-6.137136,3.669485,5.358626,9.875315],[-4.534988,-8.483800,-8.605337,6.960489],[-7.568042,-8.985211,-4.211519,-8.741173],[2.239554,-3.976402,7.708856,5.295559],[-9.203594,-1.249893,-5.663216,-5.218248],[-0.649075,-3.730323,2.111973,-1.545340],[4.430884,-8.948573,-0.769989,2.435087],[-8.971314,0.961778,-5.249721,-6.240803],[-1.753867,-4.090229,-1.671725,1.700634],[8.932148,8.056541,-1.095793,-4.803464],[2.141561,6.460473,-1.634904,1.812237],[-7.199789,-7.747732,4.026082,-6.118128],[7.042256,-5.722216,6.340132,8.979529],[0.876543,-7.703803,-5.127145,-6.541666],[1.702073,6.544934,-3.024083,9.008891],[-3.392701,2.214063,-2.057013,2.761601],[-2.535393,4.197686,7.892010,2.536411],[-2.388158,-8.731620,-3.799163,-4.390679],[-6.738999,7.191068,-9.577184,-8.173400],[4.684237,-9.562642,8.226104,4.827282],[-6.002892,2.755873,3.938973,-6.423643],[-7.526579,-4.123133,2.848765,9.314423],[8.277759,-2.859786,3.700078,-4.888071],[-5.188132,-7.065859,-8.950248,-9.061221],[-0.203629,-0.401702,-2.230334,7.638938],[-3.703324,1.006841,-2.124560,4.291835],[-3.940162,3.327778,-5.781375,-2.159114],[1.175894,-8.519902,-8.865686,-0.864509],[3.962947,8.959720,9.587274,-3.550703],[-2.781358,-6.420283,-6.030234,-3.798579],[9.796297,-5.955696,5.031821,0.225299],[4.870094,-7.403666,-2.972050,1.555319],[-0.531771,8.093372,1.158198,5.325970],[6.721847,9.215107,1.956406,-4.443669],[9.601716,1.563930,9.983735,5.718134],[-2.647094,1.533793,-6.191384,-5.420730],[8.440564,1.363592,-7.223645,-1.223053],[-0.239774,6.941474,-0.763502,-0.813797],[3.717783,-5.955436,-7.341980,1.099390],[-2.072301,1.628108,9.477668,0.837336],[1.001584,-6.808275,4.079876,-4.810564],[-6.030491,4.782470,8.826018,-3.203623],[5.031958,-0.487875,8.604726,4.961586],[-2.786473,-7.119570,-9.278682,-8.922637],[-2.012985,4.419073,4.335961,4.786809],[-7.619257,-0.576970,4.946573,-8.082531],[-8.647806,-2.418735,-7.515007,8.090066],[4.854374,0.418179,2.243669,3.660362],[-7.391323,2.212833,-6.388953,3.958167],[4.577902,5.948595,-8.665000,-6.194748],[-4.494088,-5.333038,-9.514018,6.364182],[-8.959884,2.282121,-7.342618,9.149741],[-2.552994,-2.277895,-3.578648,4.768655],[-6.407228,-6.896336,-4.210512,2.816010],[8.105220,1.093156,1.921807,4.116533],[6.304844,9.400312,-3.215611,-2.381327],[9.845415,8.265912,-6.249056,7.864483],[8.201714,-3.402377,-1.532590,-7.135942],[9.849126,2.911296,-1.981454,-7.533915],[-0.831333,3.178120,6.503437,1.986932],[7.173743,-5.596967,2.610011,-7.090617],[4.433003,-8.717123,-5.999725,3.402638],[-2.832134,-5.369172,-2.729409,9.926415],[-6.198160,6.688435,-0.596041,-8.822885],[6.766042,-3.042386,-9.829255,-2.151502],[3.349992,-8.658373,9.510732,2.505079],[-0.991802,8.880715,8.881592,6.670080],[3.123052,7.417480,7.557260,8.315668],[-1.732159,6.384724,-6.836615,-2.680319],[-6.676963,1.013186,-4.987693,-8.069478],[-7.795249,0.664740,-6.310314,5.975364],[2.701152,3.151346,-1.659405,-4.370448],[-6.155068,-9.854719,9.095977,-4.949482],[5.043284,6.203918,1.347786,-6.144557],[9.009088,6.603057,4.322829,-4.604694],[5.178008,5.783831,-0.887645,-5.086415],[-6.726958,-7.620255,7.185457,2.577861],[-5.039998,-4.814959,-2.401303,-6.266873],[3.399395,3.923686,-5.659670,2.342634],[-7.876543,-2.885520,-0.267251,2.142105],[3.449611,-2.353176,6.661555,6.966761],[4.402849,2.338492,-2.804802,3.347350],[7.565008,-4.023314,-3.783830,0.093940],[4.063248,-0.251589,-0.980061,-7.185196],[6.283729,-3.142458,-0.463263,-4.049266],[4.158543,-7.918467,0.895685,7.527776],[-2.018370,5.332037,-7.857448,5.550859],[-3.157053,5.098197,-8.262031,-1.918673],[1.159557,-1.467049,-8.092978,2.517933],[-3.375217,3.940785,6.716180,-3.515756],[9.526444,5.421902,-1.653579,8.509481],[-1.612979,0.002410,-4.680734,-9.349002],[-3.697660,7.098834,0.436299,-6.455902],[-4.524718,-5.126827,1.285899,-8.852750],[-7.976114,-2.206621,-1.436885,1.239040],[-1.471794,0.164992,-8.289544,-6.699333],[-0.913702,1.646005,-8.846113,2.347822],[5.963914,8.097105,-3.074870,5.634739],[2.505146,9.947059,5.675472,-2.235663],[9.147860,-1.876534,6.141462,-1.076519],[5.256475,1.669409,-2.788280,-4.241631],[-7.886679,-5.179819,0.146781,4.897909],[2.717477,2.038840,9.402279,-8.202347],[9.296603,-3.454003,-7.933003,1.991353],[-9.125866,0.946574,5.607071,0.884816],[8.924647,1.694698,9.948122,0.231806],[0.449612,-5.399769,-0.848118,-4.755771],[4.570924,-7.554520,4.105339,8.250754],[0.711762,-8.245772,3.065705,-1.094402],[9.461484,6.358288,1.690682,3.477702],[3.569879,3.284125,5.032559,-9.286616],[6.157610,-7.466110,-3.202033,-6.416591],[-2.006894,-4.705829,-9.756528,4.075327],[-6.330685,7.643817,3.574514,2.410161],[-5.391484,5.023196,-6.482780,-1.508685],[-7.723135,-1.403278,5.357391,-9.823010],[-4.017632,7.415058,-8.514319,-4.562493],[5.027558,-9.568181,5.071994,-7.730042],[-6.963905,8.966034,5.112148,-7.015743],[-8.999795,-4.626829,-8.079657,1.821247],[2.860118,6.204179,6.125019,2.570868],[8.239863,-9.614017,2.563813,-9.312793],[-8.592724,-3.901674,-3.210661,0.704106],[2.391385,-7.802027,8.449804,-7.526333],[-7.916405,-1.541809,-4.516052,-0.231826],[0.981570,-8.806288,6.459427,-5.463531],[-7.491228,5.854529,-2.482540,2.195449],[-3.528570,8.814609,0.671540,6.492874],[8.304993,-4.628697,6.947236,-3.924662],[9.616469,2.597642,1.354381,-4.596213],[-7.643158,-2.906711,-2.217614,-2.312339],[1.886871,-5.878412,-0.444926,-2.093005],[7.662467,5.337956,-6.665517,3.341191],[-8.140820,-6.998740,4.564299,9.597936],[7.634759,-2.104489,7.875825,-0.328302],[-0.349809,0.978561,-5.709192,-4.522900],[-3.201913,-6.430684,2.744202,-2.578677],[-0.754024,-4.095435,7.136426,2.702925],[1.820827,3.861076,7.737988,-4.545918],[-9.911005,-2.560163,2.095643,0.719896],[-9.635666,-9.160291,3.481283,0.677681],[-7.294758,1.399704,7.278789,-0.380182],[-9.614773,2.783848,1.174545,0.965145],[1.998796,6.603454,1.063197,4.310259],[-3.055211,8.709726,-0.470869,-0.378852],[-2.307517,7.432790,-7.816313,9.168774],[6.012395,-3.064166,-9.231544,-3.946538],[9.962260,-3.299195,-1.564475,-5.564595],[-9.484873,3.406012,-1.180517,9.240796],[2.434241,-0.550084,-5.798901,3.625231],[-9.935096,-9.331625,2.714946,0.652182],[-1.364599,8.891237,7.993056,-9.167764],[-4.837648,-9.518680,7.304718,0.367587],[-7.429540,-5.051368,4.746225,-2.564027],[-4.492941,-4.933348,-2.151725,-6.552529],[-5.089879,4.657592,-7.875912,8.257066],[8.485490,0.552096,5.428800,-0.164161],[8.891406,-3.471143,-5.101635,-4.605378],[9.075151,-3.121628,-1.936602,9.122327],[4.501806,-9.942142,-6.288257,-4.775747],[-1.861955,-3.328414,-7.978180,8.499865],[1.045864,7.275431,7.047376,-5.659288],[-9.327018,-7.875084,-0.473254,6.639801],[-5.481225,2.966984,0.568504,5.558194],[3.642703,5.352120,-1.937402,1.532413],[-2.034383,2.972476,2.030592,1.803542],[-6.613199,-4.539716,5.569760,-5.293202],[-5.503497,-3.067178,2.289540,6.848239],[9.355085,2.343841,6.286508,6.155025],[2.459342,4.817057,8.694242,-9.923505],[-8.253854,-1.776653,2.392375,-9.701832],[-0.903616,4.638514,-8.554693,-5.519657],[-7.261819,0.238027,2.832781,4.337731],[8.566807,6.829707,8.854287,-8.477384],[-3.187928,3.258572,-2.196161,5.331879],[-4.488881,-4.265169,7.022273,-1.083987],[-5.110804,-3.982494,2.872337,-5.178882],[-0.032967,3.048035,-6.371455,-8.949926],[-0.170223,-8.030514,2.435308,1.466191],[-2.876347,-3.223955,-6.200538,1.222094],[-1.910640,-7.943198,-9.088470,-8.254900],[-3.315141,-8.745826,5.062807,-3.885060],[9.927626,-7.082810,-9.459447,-9.162890],[-3.502655,9.410625,-2.535922,7.888922],[-1.549488,-7.290156,0.030280,0.835148],[-8.375884,-0.017025,-8.720948,7.723238],[7.380953,-0.262690,0.881434,-5.606821],[8.562176,-7.428909,1.461833,-2.902550],[-5.753426,-3.707207,8.766956,9.446492],[8.019850,-0.465147,-8.499954,1.822295],[0.720824,-7.455788,6.096318,-3.187929],[-1.242578,-8.873260,3.299881,8.343144],[4.221142,7.349227,4.177180,-1.555058],[-8.210095,0.608640,-5.221752,-5.594216],[-9.848117,-3.719298,2.205765,7.327773],[2.580015,6.668978,-5.912585,-3.182529],[-6.296156,8.181922,7.756104,0.799493],[-7.411924,-7.082775,1.106057,-8.219236],[3.432705,0.958590,-5.553462,-4.325974],[-3.806716,-7.255723,-1.204154,-9.568485],[-3.539924,6.659560,1.548598,8.883231],[4.568795,-4.152479,-6.879784,-5.581216],[7.838590,-6.525040,-8.072130,-3.979987],[8.878188,-7.520001,8.189873,-2.454642],[-4.824232,0.432885,-1.656575,2.796961],[9.615276,0.700092,-7.873540,5.304126],[9.238198,3.966262,8.593349,6.879979],[-2.893465,-5.569116,-1.799461,0.398957],[-3.897534,5.669848,5.586917,-8.567358],[-8.941746,-6.385585,-8.713497,8.078081],[-3.205367,2.415678,-4.940249,-2.638958],[-4.773756,-4.180999,1.760082,4.638681],[8.457556,4.417183,1.246677,2.112398],[6.575881,0.404577,1.916922,0.459498],[3.960787,7.421398,0.511033,2.815874],[1.129622,3.777243,1.372420,-4.717444],[1.479337,-8.412454,-4.151763,-6.450628],[9.761851,8.411527,-4.363159,-3.194853],[0.631688,2.930731,6.625065,7.507318],[8.727328,-9.252805,3.192281,0.923643],[-7.869636,-8.252035,8.067457,-5.761101],[-6.136796,7.824894,-1.034662,-0.389918],[-3.427842,0.336752,-5.244043,-0.454039],[8.357997,3.959132,4.299011,1.149721],[-7.815134,-0.262804,-7.061450,-3.270913],[-1.864730,-9.211172,-9.252838,5.826071],[-1.983202,-9.347408,5.923294,-4.945337],[8.572461,6.875531,-8.534362,-9.402066],[-7.135252,-3.898740,3.341155,7.476162],[7.796357,4.873384,2.956521,-6.248730],[5.497937,-0.367042,8.830289,3.007615],[-6.879159,0.800975,2.210523,0.201817],[5.763887,-4.198765,9.241807,-0.091001],[1.329829,-0.590064,-7.655482,4.860352],[4.061439,-0.009833,-1.725941,-2.184241],[3.280483,-3.541057,0.016495,-9.352468],[5.812671,-2.193131,8.313762,4.850778],[-9.698422,7.808093,-5.722727,-3.530097],[-8.142582,-9.973978,-8.594570,-2.916023],[5.262737,-4.164113,-2.519190,5.121261],[0.527715,-4.104815,-3.553042,-2.553041],[4.409864,-0.305820,-5.245651,-3.605535],[5.746177,1.556798,6.883792,4.986930],[-1.143114,0.061216,6.223652,3.138088],[-4.448497,0.560234,4.622371,5.178630],[5.327553,3.424876,-0.895097,-6.909830],[-2.108939,6.055912,2.329945,-8.594319],[-4.655710,5.845187,-5.303463,5.913447],[-5.696382,-9.937884,-8.698708,7.388455],[5.053353,5.599937,-2.729206,7.446059],[3.240669,-3.779645,-2.512938,7.244959],[-1.741529,-5.138885,1.001827,-9.457975],[-0.893148,3.114449,-2.614393,-5.565792],[7.484952,-6.247901,4.980948,0.343667],[-9.928723,-8.093120,-0.411372,-6.661738],[-0.202158,-4.086744,-9.757304,6.466157],[4.313903,6.981105,3.154987,1.036368],[7.936343,-1.885815,9.136854,0.620559],[3.705432,-5.928105,0.065006,8.780921],[2.006147,9.248736,-6.574779,-4.959831],[-3.760647,6.843324,8.745189,-2.807961],[-5.011069,-5.218951,-2.743385,-1.256433],[0.563034,-7.200137,1.006056,-6.973807],[7.538531,-8.201923,-6.547830,7.561472],[-7.079182,4.448732,9.227307,-1.823092],[-1.615920,7.176369,-5.871638,7.360156],[4.118783,0.651797,5.297685,7.094078],[1.431099,-5.349172,2.964300,-9.595340],[-5.309655,9.499896,-2.855888,-4.132175],[-5.164605,9.860575,5.784783,-4.215881],[-8.850491,4.352779,6.417276,-2.465919],[-9.570911,1.763427,-1.995700,6.724146],[0.342103,-1.472385,-3.550628,-1.837401],[3.051687,5.246476,-3.008090,8.420417],[2.074286,-5.958626,7.083942,-5.788506],[1.747194,5.211928,5.403063,4.937516],[-4.146894,-3.235497,-0.182103,5.206689],[2.698563,-8.197647,7.583074,-1.337108],[-4.386759,1.636805,-8.689286,7.356695],[9.739517,6.512083,2.306769,6.060972],[4.642621,-8.923233,5.933234,8.885810],[-2.761245,-8.278389,5.035860,4.772136],[-6.404842,8.224393,-8.142954,-5.077516],[-5.348787,-4.714294,-9.980284,1.315196],[-7.529316,8.447543,4.519934,-9.686783],[-5.743877,5.793381,1.112717,9.213324],[-1.037505,-3.685967,0.456585,-1.472769],[7.261435,9.002874,8.273789,0.990609],[-6.129208,2.259769,6.821504,-8.624954],[-6.965307,6.443252,-0.732785,1.278283],[6.075713,8.980472,7.442807,-5.409421],[-3.626355,-3.608902,-0.690997,6.163762],[5.169118,9.846042,-2.033991,-4.074615],[3.696862,3.852768,0.397601,-5.270342],[-4.232149,4.701565,-5.404616,-3.512406],[-2.237178,-5.130624,-3.403275,0.947660],[-3.223846,-3.960531,-6.773606,2.967113],[-9.567593,4.633268,-2.906038,7.537787],[0.366046,-1.248418,-3.001664,7.661263],[9.512894,-2.805404,5.221295,0.799938],[-6.028654,3.284000,8.990968,-3.079530],[7.277164,3.227510,-9.704093,-2.213759],[1.754426,0.452865,-0.966616,-4.088255],[-2.184582,3.450635,7.845037,6.176195],[7.710651,-0.292303,6.533512,-1.661665],[8.575766,-8.742816,-0.833743,9.853857],[0.958133,-6.175480,6.814532,-8.844887],[0.307613,-9.478851,-1.409096,-7.119651],[-9.367174,-8.745958,5.517721,-6.865176],[-7.794793,-7.280846,4.894144,6.710502],[-4.569607,-6.520091,-1.555168,6.449422],[9.950436,-0.012820,9.058228,3.526765],[-2.481364,-5.062686,-1.722609,-3.450937],[6.752232,-7.473040,-6.611943,-8.641466],[3.000173,4.660190,5.408922,8.163523],[-7.143396,-1.304978,-2.223499,0.484397],[-6.591131,-7.801242,-5.270817,2.082753],[-7.813741,-3.757771,0.898480,1.825946],[-1.974446,5.241284,-5.888269,-8.447068],[-4.416909,-9.766304,-4.838081,2.779064],[6.414171,5.931397,-6.206849,-5.003285],[-6.177923,-3.476197,7.618922,-6.871235],[-2.915281,4.543389,-7.759836,8.294756],[-5.493829,1.193882,7.880245,1.745644],[4.183673,-6.301759,-5.001266,-0.697916],[4.459870,-0.339239,-6.237745,-4.728636],[-6.374687,8.546731,0.962774,-5.140459],[3.321050,-0.991933,-6.857277,2.918484],[9.000691,-6.059746,-7.544598,-9.477796],[4.030251,-0.901887,-3.930353,-4.546693],[-8.668990,8.308851,-3.927816,-9.719883],[-0.071065,-8.153114,-0.545879,-3.544627],[7.014679,3.939915,3.823839,9.306886],[1.976659,-3.951613,8.635747,-1.542572],[0.304044,1.997425,0.256427,5.273623],[0.440054,4.814168,5.498049,6.981290],[-2.921859,3.099316,-8.958867,-9.040962],[-0.802686,2.785454,0.828212,-4.679256],[-6.928855,-0.310564,8.684006,8.301924],[0.098850,-9.652706,-9.646883,2.027434],[8.671820,-0.522949,0.108102,5.094758],[0.794341,1.344724,-3.165857,7.086047],[-6.201955,6.850901,7.594913,-4.381904],[6.905484,-0.218183,-7.690161,-8.109797],[-5.644638,4.354578,5.050603,7.256912],[-6.352428,3.623874,-0.104735,6.856395],[-9.524223,-4.812796,8.555822,-7.699514],[-0.857964,-5.713410,-4.282197,-5.324426],[9.138478,-6.325091,-0.040519,4.176538],[1.016528,5.172899,-5.158200,-4.283063],[6.732704,-8.632475,0.764322,5.724613],[1.240378,-8.726449,-7.286646,-6.006230],[-7.614268,-5.692600,6.700814,3.939672],[-7.983341,-1.866106,7.284300,0.238212],[-1.621043,0.118063,-0.513039,6.524779],[-4.338365,8.552919,-2.654404,-9.984753],[0.407179,3.971823,5.566298,2.750343],[6.441107,-4.937000,-0.804198,-5.954715],[6.425219,-9.168541,-1.671189,-5.286591],[0.976454,-8.702350,9.996412,-0.770952],[2.300280,3.714303,6.965211,6.465410],[6.002384,6.669287,4.607309,-2.335953],[-5.566147,3.020268,-9.140303,7.337931],[4.491551,1.337788,8.250601,2.555657],[5.654515,8.760875,3.392192,1.527696],[-6.951183,-2.414382,-7.390787,-5.810097],[5.386821,-5.723880,1.990587,8.642021],[5.727416,-0.713667,7.384624,7.121694],[-0.296271,4.032803,7.647180,-5.534410],[8.448542,-1.426723,0.492592,-2.814162],[-1.628730,-0.256887,4.509963,-1.035940],[-8.982193,4.283129,0.307783,-8.899547],[6.781745,5.983392,0.284381,-1.178960],[7.984130,-6.720580,1.550426,9.575683],[8.736666,-5.035980,-2.363355,9.046200],[9.666648,-6.607477,-1.360639,-4.694887],[-9.405159,-0.236450,-0.415613,-0.765043],[4.030594,-6.160716,-1.018669,-2.755880],[-0.986366,-5.880064,-4.350213,1.598640],[-8.081596,-0.228256,1.484516,-7.479616],[-0.365271,1.581141,3.019727,-0.469587],[-5.365200,8.489191,2.979540,8.097112],[-6.217613,-3.549091,5.087402,-7.478329],[7.345254,-9.873638,-9.523708,-0.302312],[-0.490484,6.155843,1.637150,-8.084162],[-0.670486,-4.054903,-9.733528,4.350785],[6.481465,8.118193,-3.489665,-7.829269],[-1.142908,-1.914267,7.548894,7.258458],[-6.081349,5.671403,9.941718,7.283545],[-1.159006,6.316155,7.229997,3.788739],[-4.428859,-0.418463,1.106459,-6.986825],[5.197221,-7.927073,1.920187,-6.351426],[-9.482323,9.346463,-7.703257,2.848801],[6.603525,9.691025,-7.606184,3.599823],[9.996105,2.368365,0.782727,-1.475236],[-2.042885,8.478918,-6.492283,5.772830],[-6.908771,-6.297646,5.010660,3.470442],[-5.363099,-3.193272,7.191185,6.543331],[8.703776,8.284321,-3.340507,0.931526],[-7.367466,-7.790914,9.405029,1.558183],[6.800498,-8.952130,-8.619452,4.679840],[-0.709422,4.442209,4.812748,-0.275489],[6.638213,0.039199,6.568236,-2.268627],[-6.389810,-0.899992,-3.985347,4.921874],[-8.399573,-0.487561,7.993236,4.455362],[1.782366,5.085926,-6.832187,3.796414],[-8.733982,6.786324,-0.463348,1.236711],[6.985178,-3.215235,-2.060406,2.707569],[0.293964,4.596618,1.181816,-6.929117],[5.662769,7.473778,8.413549,9.334992],[-6.095526,1.117327,-8.435892,4.932909],[-7.010999,4.804298,2.775380,5.187517],[-6.919365,9.654038,-6.028399,0.561725],[4.623510,0.626211,1.274875,-5.518671],[8.482531,-4.914899,4.540522,2.913076],[9.392259,-1.772153,6.389350,8.855301],[-8.467429,3.935028,-4.845508,-2.407201],[-5.900327,-0.801308,-4.280919,6.979375],[-4.447189,3.413645,1.278433,-4.251986],[3.566263,7.973893,-2.756794,-2.100887],[1.709202,0.735558,-7.483260,0.021876],[7.299048,2.217504,6.503491,-3.179802],[-4.437647,6.601827,-5.423860,6.365877],[-5.927362,9.352796,6.096336,3.680182],[9.974649,3.757629,-6.660429,-4.383740],[-5.653949,2.281138,-6.743712,-6.721430],[2.239000,-0.045128,1.996969,8.696838],[-6.667947,-6.786708,-5.991351,-5.679786],[9.075007,-1.319166,4.551552,3.825032],[-8.591526,1.441865,-6.175278,3.472661],[5.821297,-4.874157,0.744979,-0.485583],[-5.507190,-6.852878,-0.778234,-0.349536],[-2.281466,0.295172,-6.462565,5.368989],[3.231058,1.789587,-1.522297,0.492943],[3.952944,-8.169497,6.227183,-3.256721],[-4.570058,-2.395650,-1.502853,-1.990298],[2.712517,-0.686469,-7.064796,-0.165615],[-7.487887,-0.357415,9.192785,-8.881777],[2.602226,3.098597,2.841394,-3.343011],[-2.115924,-3.523093,9.272765,0.972424],[-6.572058,-6.657480,-4.892126,-1.886661],[8.289219,4.059132,-0.656984,8.930430],[6.054349,-6.438257,-0.425816,-1.444740],[1.872987,6.025691,9.974681,-2.259264],[-5.066668,-1.282437,3.310632,7.488322],[6.386359,9.270050,-7.141871,6.332952],[-4.104982,-5.817479,-9.653288,7.882272],[7.797379,6.035469,-1.731229,-6.927526],[-2.196842,5.209585,1.582081,-6.206048],[8.127436,-8.986646,-0.380501,4.846288],[9.937707,-4.698983,-2.504808,-2.162256],[-9.148899,-5.071052,1.826180,-3.297608],[-6.481785,4.003455,-8.115155,-4.438167],[-2.093602,-4.619881,1.519873,2.498727],[8.936468,-9.664287,1.407666,-8.102972],[-4.872486,-9.555706,1.292946,-0.430099],[-4.554794,-0.618080,1.549881,3.185925],[7.178772,9.774026,8.224516,-8.898772],[-6.554646,2.325424,8.775745,6.164574],[-0.373691,4.857339,-9.672824,8.572007],[7.123151,-3.967340,8.285594,-8.615389],[6.360366,0.576610,-2.666245,1.172475],[-2.165307,3.394786,-4.397183,-2.930610],[-4.309380,2.410039,7.842664,-0.949419],[-2.134853,8.935582,-7.339720,-3.957553],[8.720374,-0.581172,9.862745,-3.477510],[-6.163796,7.383190,4.927187,-5.517770],[5.008717,-2.013081,-2.668574,-9.459262],[9.441230,-6.997626,6.886090,3.543465],[-8.645940,5.082276,-9.567295,-1.786344],[3.149906,6.256215,6.759359,-7.797806],[9.507905,0.594077,9.017787,-7.599457],[4.747210,-1.893672,-6.537301,-9.492456],[-7.643102,-2.565073,8.901767,4.946765],[5.234033,1.481523,-9.552390,8.196058],[4.842499,-3.762373,-1.403333,6.768367],[0.274699,9.765113,-9.515097,2.376933],[1.128709,5.059170,-8.397189,0.083314],[2.366231,-7.925768,-5.274538,-9.110125],[-0.926280,4.830256,3.901831,-8.267719],[-8.324308,-0.840661,5.449065,4.442705],[-7.939070,-3.354990,-3.136284,-8.734848],[-2.717146,5.155303,-3.291940,-1.205878],[-5.717332,-0.287727,6.421604,8.140974],[-2.800516,-5.578357,9.875139,-3.712004],[-7.395232,-3.231924,-4.256284,-1.512090],[2.499723,6.339556,1.958305,-3.850048],[0.173792,-8.513462,6.557606,8.410406],[0.369612,-2.039419,9.129268,-3.410419],[7.614652,-7.133987,8.336740,-9.217462],[2.766543,1.696322,-9.501415,-7.362007],[-2.115154,-7.129395,-2.518716,2.568255],[8.672533,-7.356463,-6.100607,-0.268915],[8.588657,8.106818,8.915145,9.875638],[2.233225,-9.257544,-4.352799,-9.673731],[6.059841,4.550124,-5.859690,3.477155],[-1.535146,-1.536904,7.048081,-0.168980],[-0.304191,0.756255,7.994024,-4.104623],[1.424693,-1.574894,1.438234,-3.034204],[4.237374,3.761526,-4.095202,0.968942],[-6.015322,5.057152,-0.143809,5.442184],[5.345945,7.177815,0.241344,-7.724043],[-5.711471,9.952943,2.298814,-0.041180],[3.190505,-5.191400,-3.363883,-5.460465],[3.099097,-5.961018,6.714721,-4.816088],[5.629079,4.021671,6.394485,5.075615],[5.369396,-1.569719,8.895501,4.827482],[-3.519850,-2.017018,-3.050370,8.420569],[2.174426,6.084589,7.418006,1.206271],[2.767381,-4.927002,-6.964758,-6.493656],[-7.755529,-0.935490,9.577145,-7.335031],[5.009955,0.944488,2.603554,-0.939536],[-3.233044,0.705644,3.410225,-0.811290],[8.081112,-5.950729,6.820995,1.753213],[9.768052,8.292595,-7.036624,-2.075217],[-8.672331,0.075066,-1.659625,-0.952981],[8.453697,5.942153,3.878150,-0.699354],[-8.679150,-2.884978,2.233510,9.812524],[-1.969387,-7.329174,-8.139594,-8.192370],[-2.887395,-8.559068,2.434167,4.366545],[-3.057673,-4.549548,6.392153,-7.508031],[8.243030,2.168679,1.923867,8.469345],[3.201926,-3.921241,-8.436405,-0.043535],[-3.154511,5.635896,-1.874510,-2.858559],[8.602793,-0.355380,6.148727,-3.110948],[4.514837,-9.672936,-7.505951,-5.355889],[8.371723,7.163326,-6.943160,-3.067622],[-3.786019,-3.182361,-8.489303,6.847931],[2.801325,-2.952762,7.423089,1.495446],[-4.184055,5.508073,0.595446,-3.151261],[-4.765671,-2.216206,-2.451541,8.101505],[5.732398,8.750072,-1.941213,2.965275],[-1.462449,2.110326,7.467529,-8.982113],[-0.230526,-4.196592,-1.298223,-3.860705],[2.559517,7.496268,3.291017,-1.195214],[-2.746741,-6.397116,4.821320,4.634580],[-4.070945,0.381269,7.124210,3.790087],[9.067534,-6.940187,1.469049,-6.932293],[8.418247,-6.011201,-7.585700,6.329702],[-5.735534,7.501420,-7.385985,1.914882],[2.789715,-3.799458,-3.991966,-3.565054],[9.457453,0.014266,9.743015,2.858971],[0.692250,4.657741,2.584484,3.736466],[5.473289,5.880715,6.982891,-9.401600],[7.653832,4.830282,-9.852922,4.250292],[-9.659454,-2.942856,-3.695700,9.041687],[5.925346,7.453124,6.446569,-8.646299],[4.511661,-1.450662,-5.986170,-6.196731],[5.621768,-0.372203,8.502401,-0.315981],[-0.061200,-3.345221,-1.769279,6.870209],[-8.919829,-3.528379,2.827233,-7.022638],[-6.919781,5.773220,5.820813,-5.274157],[1.997157,0.155863,-7.507297,2.385670],[-9.231575,1.596924,2.150663,5.938790],[1.088140,8.228826,-7.152311,-3.681630],[6.824633,-6.832128,8.814559,6.590894],[3.880904,7.708553,-1.629267,-7.846450],[-5.841561,-9.202848,-3.120495,-2.610855],[7.881360,-1.444244,2.871259,6.857024],[-1.414545,-9.473345,-0.458152,8.059808],[-3.405259,-8.190635,0.958953,8.064567],[-9.005913,7.643333,0.012632,5.173906],[3.774413,1.228132,-0.954526,3.021488],[-2.893149,-0.300896,-1.937838,-4.529010],[-8.558181,3.821483,8.324997,-6.629086],[-2.649353,4.301427,8.989287,6.782736],[-5.309713,0.572745,2.152784,-3.385816],[-5.138216,-7.006763,-4.379983,2.110709],[2.650199,-6.149582,-6.486523,3.355889],[-0.173854,-6.509151,1.661043,-8.546690],[-6.805449,-6.522787,8.403268,4.998714],[3.719390,-5.150107,-0.586584,-5.751406],[-6.880269,6.341576,1.102916,-3.635147],[9.570518,0.767509,-3.376284,-7.650833],[-6.257914,-4.089702,3.552742,8.325933],[1.878113,-6.060080,-2.984647,-3.088734],[9.529396,6.765820,-7.555730,-2.860909],[-9.510901,-6.827851,-9.682070,-5.475442],[7.591488,-3.929729,-6.930399,0.874690],[6.436309,-3.994013,-0.265790,-4.281378],[-4.281344,6.785189,6.595645,-7.975805],[2.447895,-2.949825,7.235372,-0.726329],[1.950014,-5.976026,3.835182,-0.659091],[8.783133,-2.542704,3.919652,-4.572760],[-8.760268,-5.037232,1.602989,1.954818],[6.342182,-1.392652,-3.545518,7.790814],[9.866135,-1.487510,2.280038,4.007057],[4.444075,-5.419338,2.428847,-4.948457],[-3.249137,9.275501,4.730742,7.648213],[7.743570,7.488685,-6.661938,0.660398],[-7.001716,-3.478209,-0.371279,7.494427],[6.863430,-8.097744,-4.666262,-8.010672],[5.546933,-5.817469,0.614180,0.899911],[-5.455174,-9.841952,3.948767,-7.167913],[9.567938,8.545212,2.863278,1.861234],[7.391600,8.770610,-2.844746,-9.337724],[2.500781,-6.755153,-1.860414,1.072308],[8.158485,-0.471464,-1.468314,-8.477979],[3.795642,0.695145,-5.965823,-7.865471],[7.283433,5.540575,9.554177,5.251463],[4.790190,7.114935,-7.154194,-2.941130],[0.292703,-4.003440,0.980899,1.709510],[8.571184,8.525652,-2.487196,9.437145],[9.026372,5.893329,-6.712205,-6.149050],[1.175608,-2.931433,-2.228042,0.976982],[3.494940,3.359121,-2.566032,1.955677],[-0.964010,-5.425937,-1.734008,-7.839139],[-1.018456,7.379077,-3.359185,-1.087271],[6.137228,9.826900,8.479197,5.197729],[6.168701,-8.515055,-2.885511,0.015878],[-5.372789,5.424903,9.893581,7.158920],[8.058861,-5.122967,-3.063186,3.114829],[3.358853,0.977344,8.770120,4.654203],[-7.704667,3.679923,-7.448168,3.510823],[-1.558933,6.239568,-4.330753,5.119896],[2.372741,6.807561,1.857015,-2.677806],[-5.269937,7.697161,-4.368434,-5.060466],[-6.373522,3.368564,-9.537472,-7.104319],[9.780605,-4.373815,-0.302251,-5.945186],[7.148061,3.172859,-2.544568,-6.893757],[6.531315,5.601113,-9.597631,-3.285568],[0.763213,8.493936,-9.376601,-3.882421],[-2.483190,3.008125,-2.152568,-9.072195],[-2.433554,-9.211098,5.280851,7.826228],[3.742489,1.209721,-0.967324,-3.616393],[4.200372,2.720148,6.156759,-5.131294],[-9.162276,-0.866933,6.202468,-3.225601],[-2.858564,-4.544037,0.408543,6.731030],[-0.508669,1.054424,-3.148768,-7.553078],[4.662857,-3.956336,4.440180,-6.808106],[-9.132322,2.521350,-1.131335,9.884391],[-8.800666,-4.191844,7.140661,-2.886188],[-4.847609,-1.513261,-6.530771,6.684601],[-1.105470,-9.532124,-2.764694,7.740497],[-7.045144,-0.103019,9.794568,5.905949],[2.338069,1.171438,0.076957,8.064016],[5.618536,8.283773,-1.298003,-8.076509],[-7.885990,4.590962,1.692109,8.251145],[3.323564,-7.176811,-3.751413,-5.559378],[-7.446592,-4.913254,-7.309996,8.249283],[-8.263428,3.904189,7.966160,6.504505],[-3.196659,-0.580127,-3.519732,7.984327],[7.696816,-0.785844,-7.130677,-1.861272],[-8.275610,-3.661383,-1.658152,5.583582],[-9.536770,7.937132,-2.587139,6.014758],[9.009642,-5.243454,-4.848006,0.705499],[-3.639619,1.978388,1.242551,8.502229],[-9.145979,-2.206044,8.277632,3.567107],[-7.713244,-3.418407,-7.764453,8.526670],[7.142277,8.132744,-7.686671,-4.768556],[-3.308500,4.086910,6.853354,9.833870],[-4.876141,-6.323129,7.216841,-4.989820],[-8.697700,-8.753111,-6.195380,9.256906],[-2.160608,6.361709,5.123362,4.910254],[9.643018,2.395726,3.518384,6.499696],[-5.244948,0.894484,4.898576,2.659065],[-1.849152,-1.024039,-6.765467,6.985196],[-6.661728,9.254891,-8.419788,3.941058],[3.861346,-9.712794,-9.430598,-5.454380],[1.726034,-6.542991,4.639718,-2.649416],[-8.824105,6.708337,-4.364739,6.272337],[3.198637,0.028291,7.966193,-2.353376],[9.790149,4.006694,-2.841924,6.080723],[3.760975,-8.814571,6.206793,1.217980],[-6.077844,-5.128671,4.928364,3.981681],[-2.103901,-0.994531,-2.474251,-8.400508],[4.003907,8.684370,-8.590138,2.018282],[-6.440224,-5.094100,-6.394166,9.150919],[-7.591843,-3.547842,1.711605,3.227433],[-6.186827,3.807405,-9.651783,-6.908869],[7.032521,9.294991,-7.448243,-8.071222],[-3.144296,2.379728,-8.341161,2.734081],[-7.811874,-8.930583,-7.546964,-3.481839],[6.605442,7.172756,5.865208,9.214725]], dtype = "float32")#candidate|7849|(840, 4)|const|float32
bop_7850 = relay.logical_and(var_7840.astype('bool'), relay.reshape(const_7849.astype('bool'), relay.shape_of(var_7840))) # shape=(840, 4)
output = relay.Tuple([call_7799,call_7810,call_7820,call_7839,bop_7850,])
output2 = relay.Tuple([call_7800,call_7811,call_7821,call_7841,bop_7850,])
func_7855 = relay.Function([var_7840,], output)
mod['func_7855'] = func_7855
mod = relay.transform.InferType()(mod)
mutated_mod['func_7855'] = func_7855
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7856 = relay.var("var_7856", dtype = "float32", shape = (840, 4))#candidate|7856|(840, 4)|var|float32
func_7855_call = mutated_mod.get_global_var('func_7855')
call_7857 = func_7855_call(var_7856)
output = call_7857
func_7858 = relay.Function([var_7856], output)
mutated_mod['func_7858'] = func_7858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1106_call = mod.get_global_var('func_1106')
func_1107_call = mutated_mod.get_global_var('func_1107')
call_7984 = relay.TupleGetItem(func_1106_call(), 4)
call_7985 = relay.TupleGetItem(func_1107_call(), 4)
output = call_7984
output2 = call_7985
func_8000 = relay.Function([], output)
mod['func_8000'] = func_8000
mod = relay.transform.InferType()(mod)
output = func_8000()
func_8001 = relay.Function([], output)
mutated_mod['func_8001'] = func_8001
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8034 = relay.const([[[-8.653641,-0.062965,-8.375300,-5.130974,9.591969,6.506612,-7.976579,4.914094,3.700700,-4.226616,-0.615483,-6.250525,-9.790879,9.460447],[-5.013955,-7.562327,-7.433585,-8.318563,-6.213127,5.076645,-4.861143,2.181091,9.586201,8.588139,1.023355,-3.093363,1.993829,-6.253913],[4.481639,-2.336089,7.385535,-5.665597,-9.261491,-9.510560,7.390435,-9.482065,-4.386345,7.393383,-8.899296,-1.314849,-2.657115,3.305427],[-5.746467,4.089123,5.533766,6.001114,-8.484512,-3.616025,-0.654585,3.730021,8.629879,9.610241,-4.556884,3.657783,3.490554,-5.157530],[-5.989232,5.253856,-4.110160,-9.114094,5.136177,-4.164793,-3.507741,-3.636824,4.488624,-3.063181,7.968554,1.855089,-8.880100,-3.671213],[-5.092815,-0.686270,-5.646737,8.550990,-2.113310,-5.085861,7.073239,-6.556313,1.033762,-3.691143,-9.812854,1.092071,-3.342630,2.395356],[4.263390,1.405446,3.571670,-0.417529,0.092660,-7.050605,-4.885995,2.411323,6.156555,5.684056,-8.691503,7.002633,-0.735251,-6.139227],[3.870541,-2.685070,7.782836,8.559650,9.282185,-5.155975,6.454251,-3.664745,8.167506,-1.813669,9.101827,-8.876516,0.008880,2.309695],[-4.616429,9.703236,6.361032,6.354233,4.380050,5.566963,-3.134976,6.552378,-3.200403,3.770443,-9.553114,-4.955894,9.190258,0.556878],[4.313665,0.435517,8.838334,0.477985,-7.115504,8.993272,2.840242,-5.945375,8.736090,-0.612582,6.694287,4.944849,4.408139,-7.134927],[-6.440165,4.673258,-0.423947,-4.761409,4.346392,-3.726937,-6.136902,0.260354,3.396112,1.215269,-0.497817,-2.188713,-1.093431,2.456697],[-4.675131,-4.996441,7.726023,-1.567656,-3.377558,5.211810,-5.320637,2.728554,-6.072215,2.830827,-1.781476,-1.701369,-3.518916,9.516552],[-5.437785,-4.642581,-2.232893,-3.984117,-5.504362,0.246370,4.799570,4.665146,-6.951638,-6.915138,2.035918,-8.616689,-4.647171,-5.424415],[-9.750801,2.202131,-9.064643,2.628942,6.036321,1.847974,-7.459417,-9.284265,0.331150,2.262294,0.560784,-2.317621,1.246149,-0.813029],[6.603407,-8.937748,-0.249631,1.326223,8.666854,9.765775,-6.469884,5.096315,5.547601,-1.545695,8.637827,0.217748,5.545057,6.514191],[-1.361171,-6.098195,8.000590,0.410687,5.615748,-7.210987,4.753914,2.555210,-3.732085,-3.392296,-4.294873,7.671111,7.451411,-2.870650]],[[-8.709327,4.820602,-4.580957,8.510735,2.569691,5.141546,7.148766,3.738468,-8.985921,-9.836365,2.775474,-3.716277,9.785189,1.236370],[-1.730901,6.605310,-4.323700,-5.567610,-7.083748,-5.026043,-7.839543,-4.953414,7.183137,1.527176,-9.180770,1.092106,-4.421149,-3.016204],[4.622501,-4.559231,7.959585,-3.968928,6.520990,-8.442927,-2.626559,9.306463,2.743404,-4.411721,8.029398,-2.876690,1.570178,-4.628119],[3.082062,6.393885,-1.490579,7.244244,3.830745,9.787043,-9.534763,2.062079,-4.730225,7.060450,-9.786078,7.655826,0.928022,-2.088048],[4.659520,8.886650,5.513568,1.616482,-5.077602,9.112776,-0.076133,-3.731678,6.248375,-7.516484,-1.678271,4.644982,5.764738,4.060696],[-2.323066,-4.366312,-2.095262,-9.293124,-2.321711,0.373115,-2.638402,4.568709,-4.005155,1.812186,8.824740,6.512129,-3.077606,-7.853914],[4.642867,-7.789946,1.140098,9.381133,-4.455686,6.518192,7.397384,-2.153227,-1.826199,2.164018,8.481314,-7.830920,-8.299270,3.727253],[-9.444616,-7.586170,2.223610,7.470526,1.509970,-9.246982,-4.520143,9.274015,-1.007307,-4.157278,0.802506,6.351064,-6.967602,1.022082],[-0.293214,1.244721,-3.693398,-9.660768,7.979958,6.035859,3.598091,-0.949096,9.815624,4.249967,4.768524,-4.390632,4.246297,-7.306230],[1.631791,-0.136602,-4.312934,-9.102162,-5.207509,-1.570270,-3.674367,-3.239019,5.525746,-8.097365,-8.367767,-2.788528,9.415693,-6.944067],[1.851783,-1.969275,-3.598496,-4.819306,1.295099,-9.360776,3.395553,1.851312,-2.965603,9.285156,-5.553849,-9.142601,-5.122040,4.711537],[-0.439153,-0.032748,-1.515903,-4.179730,-5.580898,9.091783,-9.391884,8.426445,-0.238480,0.295599,-9.615705,-0.995980,-1.480778,-5.347547],[5.931841,-9.323750,2.722421,0.514700,-2.736287,7.580793,-7.279389,-7.636604,-4.851593,2.526006,-2.830711,9.734717,7.915803,8.166438],[-5.680796,-2.037146,1.119949,1.260531,-5.170877,-0.460663,8.409732,1.913318,-4.862652,-4.239406,4.445106,9.787725,-2.560572,-8.884084],[-8.524049,-8.949450,3.586715,7.120289,9.989504,-2.845135,7.844255,-2.977826,-2.132363,5.219046,6.147525,1.172501,0.508133,-4.472629],[9.512227,3.737753,4.670455,-1.810884,8.159304,1.076240,4.723385,-2.775763,2.510938,4.706051,-2.941723,-7.214382,-3.152987,-5.080776]],[[7.196281,9.838468,7.730546,-1.980770,-7.423302,-4.654084,-9.272046,8.722168,3.551920,8.568756,-1.187483,-2.292108,6.863551,5.274864],[-9.959696,4.424037,-6.161195,-9.578374,1.689220,-9.982598,6.674459,6.452566,5.825145,7.448425,-7.443720,3.555430,5.068195,2.386430],[-0.256404,-0.933283,-2.890252,-3.533944,0.438339,7.277755,-6.382664,-5.395448,-7.253397,4.899295,-1.131732,-9.633203,8.899456,-0.401965],[1.924533,9.068708,-5.980731,-7.759944,1.395404,2.412985,1.771593,-3.921793,7.209010,4.811380,-0.081399,4.653334,-3.865231,-9.377672],[0.586979,-2.385046,-8.814066,-3.371502,-4.715108,-3.300274,-5.337111,-0.084585,-2.002650,2.706931,2.378998,5.970963,6.120582,0.164858],[-0.984802,-6.577113,-9.275565,-6.423657,-4.244402,2.609273,9.331362,3.939232,4.156287,6.795249,-2.356778,4.808379,5.068079,2.117078],[0.659579,-0.390589,-8.629872,2.794027,-7.722595,-7.365676,2.639881,2.693098,4.262307,-9.496539,-1.818339,-0.159138,-7.203260,-3.680453],[-3.888008,-6.091345,-9.933681,1.462297,1.286602,3.832660,-1.947983,2.828831,9.187289,-1.374036,0.410075,-0.445499,-3.760794,-1.680504],[-9.992176,-0.628792,-1.149122,1.463989,-3.642782,-5.319844,3.689722,1.629252,9.756776,3.810503,3.009251,9.425561,-3.417939,-5.456359],[-5.601302,0.421779,6.464086,8.768988,2.598272,7.778149,4.349721,0.431752,7.474016,-7.623048,7.359090,-6.470676,4.898434,8.873258],[5.341184,-3.836502,-3.407566,-3.938423,9.142511,-2.218892,-7.779808,-0.840471,2.537405,2.004906,-2.825950,0.705165,6.269367,-5.517971],[6.154071,0.884694,9.890072,-4.729037,6.333762,-8.660585,-7.822989,3.695494,-9.118665,-8.335780,-6.618343,-5.181471,6.629535,-7.591106],[1.951303,9.395940,2.502277,3.711200,-1.561376,-3.812677,1.213758,-3.936492,2.777659,-5.253619,-5.969632,8.321655,-7.523904,1.256095],[2.999366,3.962306,7.970884,0.022760,2.619992,7.045354,-2.838907,5.448091,-2.475380,8.652383,-5.660041,6.711624,-0.652639,4.550041],[9.250854,-5.181476,-4.761130,5.341731,-2.283190,-6.086768,-4.072873,5.024420,-5.798441,-2.639961,5.887245,-2.662292,4.155336,-0.387350],[1.836946,6.684535,-1.782242,7.102200,8.110395,-3.240027,-2.895589,9.991479,0.118137,3.141354,5.559886,-8.369444,-2.231635,-1.580638]],[[4.791700,9.575261,-5.900039,0.372776,4.968857,-0.205096,4.472265,-0.347793,3.590233,-5.886620,6.717718,-8.147232,7.309039,2.000109],[-4.862771,-5.512794,-5.989110,-6.500702,-1.817719,4.042391,-2.016716,-9.061012,9.623195,7.583765,-5.000590,1.412357,-6.274227,-3.770987],[-7.924844,6.216564,-8.664463,-7.647062,4.211297,1.962815,-9.053783,7.806722,-5.465974,5.188532,6.603025,5.261815,-2.788950,4.948158],[-1.504409,5.178010,0.677570,9.880161,-6.582507,-2.834419,-8.734618,8.078526,-2.133198,-2.971527,-6.779346,-1.386860,-0.039975,4.623195],[-5.281103,1.649219,-2.579408,-2.014720,6.424561,0.203496,8.181535,-5.489178,-5.040759,2.710710,-0.995325,2.575493,1.166651,-4.209199],[8.936553,-3.763455,-2.457928,9.839222,-6.117967,-9.069174,3.423240,1.508349,8.224824,4.274369,3.625384,6.839919,-4.807194,-0.511415],[-7.798175,2.217233,-1.638486,-8.075916,-0.434233,-6.896041,8.057817,-9.740902,-4.502455,7.369048,2.550692,0.992456,7.578882,4.905102],[-6.459513,7.995183,-0.502280,-0.178899,9.326064,-9.403218,-8.127566,-6.918985,1.113120,1.669858,7.383950,-5.800994,5.020745,5.173061],[-7.188184,-1.121539,0.530448,9.377845,-4.211100,-9.772477,-7.136578,6.691469,5.868039,-1.557457,6.295447,1.652637,3.691505,7.118951],[7.122879,6.037839,7.919500,-7.695922,-2.095771,9.827777,-3.163214,-2.005388,-1.474335,7.395781,9.575660,-9.907375,0.056426,1.271840],[1.160254,2.946532,-7.535647,-5.699526,-9.020808,-6.654792,9.139225,-0.267764,2.324007,-6.961827,-2.347154,-6.532715,-2.565881,-1.256191],[-2.874070,-4.811430,8.349566,-0.715982,-6.763220,1.408934,-5.534470,7.140822,0.501934,5.804403,-1.936345,-1.789188,9.059333,7.063191],[-8.385037,-2.559462,5.299732,-1.436609,-3.866386,-5.844122,-8.044770,-1.599734,7.500739,-3.703547,3.083431,-6.723457,5.692069,-2.857450],[9.584901,-7.245092,-3.411363,-1.347375,5.222744,-3.259064,1.548401,0.648176,-6.716146,-8.189601,7.850265,8.524013,-5.651426,4.911588],[-6.277022,1.820999,6.243609,7.134546,-8.558030,2.872645,5.609860,6.901463,2.596932,-0.388463,-7.524414,2.637013,2.463213,-2.957452],[-6.295684,2.977847,-4.104843,-6.396030,8.845776,7.172629,2.611598,8.731414,-4.841441,-8.125258,0.465298,9.191164,7.076954,-9.299178]],[[8.800706,2.298740,-4.630220,5.479886,2.339911,-8.819580,1.562116,-3.306166,-0.633732,6.225130,-5.116954,-4.635675,-5.840539,-7.652725],[1.938974,-9.720058,2.418691,-1.410595,5.354764,-2.255586,-5.137497,4.145958,-6.653820,-0.328143,7.513357,3.693542,5.180088,-7.762328],[-2.571306,-7.924221,8.679933,-5.287673,-0.632208,-1.941610,-0.094723,-3.786554,3.348735,8.593870,0.842824,-8.550858,9.794727,-8.706767],[-3.662253,2.307507,9.593047,-3.717322,-1.026398,-1.479809,4.945632,-6.462075,7.791176,-0.707187,-9.621511,7.633921,-4.739793,6.153641],[9.532392,-4.889188,-9.914751,-6.898990,5.847552,-8.890552,-7.373393,-6.470930,6.749833,8.376973,3.374774,4.170401,4.882614,7.974420],[-2.272239,-1.537796,2.172577,6.360679,-8.729012,2.085282,-7.642159,3.128675,-7.987154,9.776215,0.726523,6.048644,-9.549713,-9.124597],[3.044016,7.966357,-1.705488,2.530111,6.035599,1.133035,9.235421,8.838172,-8.342595,-2.798614,8.086483,-2.671029,-7.255112,4.349620],[-2.169344,6.444483,-8.173626,-3.733317,-0.434523,-7.579185,-9.955926,1.538474,-0.336850,-6.584694,3.168548,-9.566831,-8.707398,5.016585],[-4.195642,9.013116,8.113468,-1.743767,-7.870510,-4.483697,-9.596044,-3.450333,2.963713,-1.814434,-4.153923,-3.067993,6.727396,-8.843542],[-9.209661,1.079152,2.978268,5.018811,5.993856,-3.784005,-1.971232,-7.375860,2.982821,-4.210317,-1.086884,-2.388514,2.230689,-4.712608],[0.759943,-0.337414,2.092640,-9.662315,-4.409290,3.586929,3.442932,0.626806,-2.694740,9.359720,-4.102185,-9.329532,-5.148477,-5.167306],[-0.788003,0.172730,1.319472,7.471878,8.348268,3.777520,0.035856,9.118033,-2.810709,3.376742,-8.267063,-5.911047,-1.063929,5.994690],[-9.984357,-1.716659,-1.087236,-0.191862,7.640258,-2.074251,-7.849898,-6.616152,-6.695142,-4.120725,7.781764,-0.218321,-5.018909,-7.686160],[8.269299,-0.402763,1.250828,-5.999900,-9.530386,-1.141953,-8.988269,-2.735952,-2.745289,4.486628,-9.385894,-4.064857,7.757632,5.851684],[2.061812,-1.645167,6.897059,-3.560737,3.873617,-0.064037,-4.946752,6.664370,-3.337693,5.232652,-0.963266,3.036474,-4.740070,-9.502288],[-6.582764,-0.922790,-2.365807,4.911175,9.574220,-7.863751,-7.791984,-0.514325,1.995797,-1.033149,0.455498,9.242893,-8.638448,-6.523311]],[[-8.186376,-1.620673,-4.255514,-0.686958,5.072483,-5.598612,-7.334772,6.397390,3.759339,3.793384,4.046940,-8.314221,1.368002,-3.958617],[7.901968,-8.028685,-6.692434,-2.501788,5.772682,9.850077,-4.551681,2.182489,-3.313636,-2.458121,-0.521628,2.159028,9.281624,-3.510311],[2.184550,-1.338730,0.820548,-3.679624,2.440482,-8.746581,0.378019,4.132923,4.131479,-1.257073,4.586307,-4.986267,-2.962788,4.982451],[2.570984,-2.058139,-2.433527,2.955328,-8.169937,6.362238,0.467429,-0.799062,3.502749,-9.194496,4.921342,0.445505,2.919307,-3.746169],[9.647439,5.980743,-2.285535,6.185637,-7.319868,-0.595465,-0.452538,-3.597287,-8.568696,-9.951122,-8.766361,-6.904101,-6.439359,-6.078694],[9.489039,4.948100,-7.987472,-9.751166,2.397379,-9.645827,-4.031747,-8.531632,-5.490274,-8.612677,9.431398,3.519365,-9.678296,1.230984],[6.272766,-4.837835,8.325433,3.892575,5.661864,-0.622045,6.559066,-0.427296,9.664718,-0.991631,-2.892680,-6.119660,1.687518,9.910198],[-8.332675,-9.494569,2.019291,-2.623993,3.457704,-9.366035,0.304952,8.299174,2.300449,3.309421,-7.226111,5.760238,-3.845061,-1.777949],[9.349050,3.297747,3.935353,1.921301,3.821316,7.658289,1.316540,7.807927,-2.774335,8.687796,-7.347878,-9.644079,-5.530303,9.183001],[-1.030124,-7.503987,-4.522808,2.374323,-9.962642,-9.979241,-8.135334,-6.791552,4.467964,9.306435,-8.314738,-8.322307,8.233864,7.838716],[-1.152028,-4.569570,-3.261747,-5.883626,4.550086,-6.657219,-3.213746,5.553142,-0.709316,-6.960652,8.652158,3.419648,-4.824622,-9.179847],[3.631793,2.824497,0.380928,-2.144406,-9.956501,-0.240133,-2.099562,5.589659,2.804312,7.760099,-5.944329,8.912492,5.057963,7.576913],[-9.521161,5.579252,6.142492,5.688053,3.911707,3.242660,-7.760630,5.787190,-3.260414,6.324149,2.985709,-3.120724,-2.619293,0.883989],[-7.213089,6.356342,-8.376554,-3.702384,9.660592,-4.543622,5.411066,2.706689,6.513334,-1.684086,8.867929,6.952419,1.532856,6.584015],[-8.866229,3.594258,3.006338,6.331815,-8.236623,-2.682479,-9.380739,-8.177654,-1.553869,3.256054,-0.332808,8.022123,-8.172994,-0.603533],[-2.065286,4.291600,-0.885716,-2.157222,-5.113825,0.124955,7.106675,-7.979409,8.726741,-9.305332,-3.259509,3.759334,8.135628,4.754539]],[[-4.525943,7.109213,5.009005,0.447791,-7.525198,0.736320,0.394463,1.669462,-8.233054,-0.212444,-9.027587,6.006957,0.995035,0.001279],[-9.700650,-1.429192,-8.544508,9.178399,-0.111035,5.198785,-5.505703,9.411478,2.711221,6.699374,8.017467,4.627999,-0.318635,-0.866579],[-6.634965,-7.907194,-8.341763,2.784719,6.758240,-9.241827,1.925335,-2.946248,0.622278,9.231702,-8.009575,-9.292284,8.421239,0.288021],[4.166208,0.673574,5.943594,-4.697276,-0.274064,-9.947186,-7.454216,4.964692,-9.257880,-5.850877,-1.814410,-3.694413,-0.734343,-1.889824],[6.936782,7.583776,7.178013,-5.097529,-1.608644,9.373376,-2.088823,-6.138046,-4.848306,-3.128333,5.276923,-0.829180,-0.134720,-7.157651],[-0.040401,-1.437746,-2.674291,-5.100039,-8.821342,-6.038310,1.448708,0.942678,5.474671,-7.358707,-7.195810,-5.459813,3.592025,2.902809],[-6.028489,-5.046453,-5.002030,-8.238726,-4.989807,-5.445903,2.680122,-5.541232,-0.828745,-0.219978,7.441946,-8.517267,7.513408,-6.012148],[1.868689,-4.127939,7.538395,-6.506492,-1.957069,8.287545,0.689925,5.618718,-3.174835,4.487993,-1.089652,8.725400,4.599967,8.193845],[-0.404222,0.026543,6.109549,6.686934,4.385277,-0.564499,-2.920457,-6.632515,0.316223,-0.007778,9.802178,4.381081,3.163328,-0.868272],[-5.604412,3.671164,4.063975,-4.466995,1.642400,3.854465,-0.277875,-3.458552,6.982543,-9.340340,-0.220780,8.328177,1.334374,0.239188],[1.741753,8.382681,9.145125,-4.634947,8.718710,1.411472,4.477337,7.163223,-9.005196,-7.342484,4.810756,7.657729,-1.555567,7.946445],[6.073857,-3.523206,-9.712547,-7.432370,1.862615,-0.094243,2.039585,6.587762,1.595780,-3.706671,-8.030190,9.666703,-8.740354,5.498715],[2.868547,-4.962216,-4.428223,5.691506,-2.882055,-3.647077,3.449955,-6.996827,7.882953,9.731479,2.839923,-8.145941,-8.397419,0.854709],[-5.776924,6.257066,5.584706,-6.586236,2.964360,2.122199,7.923004,0.061056,-5.878126,-9.251037,8.362443,-9.970883,2.123046,-9.514163],[3.957663,-2.182747,-2.276814,3.554681,4.088683,2.813867,-9.036838,-3.018427,7.655592,-7.131097,-5.432072,1.456203,-0.277512,-7.479417],[-0.367690,5.221808,-1.134220,-2.268762,-6.738958,-5.027950,2.295866,-3.140686,-8.149915,-5.075925,-0.024690,-6.199046,3.885166,-2.167269]],[[2.417867,0.963326,0.709188,8.233512,8.150401,-2.152417,-5.875231,2.354446,1.707998,6.490914,6.372754,1.604507,-5.104149,-0.310696],[2.854115,7.406491,7.044452,-6.624993,7.333188,-1.626766,5.389749,-6.611526,3.639200,-5.428485,7.815619,7.692630,6.046551,-5.895921],[-4.838268,8.149085,4.274427,-6.861626,1.656989,9.918423,6.164349,7.760207,4.632832,-5.514577,-2.764538,8.484168,-6.400323,-2.462492],[7.490122,5.933248,7.626459,3.395932,9.896961,3.242112,-9.434387,0.154152,-9.787881,9.362400,2.108475,-4.228512,-1.143954,6.516360],[-3.375108,-7.035551,6.386428,8.141908,-9.293577,3.569176,8.853034,-8.722291,-6.643862,5.160789,6.886171,-2.439808,-3.766489,-8.640167],[-4.149214,7.423268,3.188404,-7.745637,6.705739,6.960141,-9.208825,5.498989,6.254452,8.957358,2.120151,-4.808866,2.361824,2.751897],[7.268611,-2.123853,-5.858578,9.792270,6.239978,-1.970234,8.797531,-4.898696,-3.813707,6.989030,-9.795190,9.505667,1.959973,-6.081291],[-5.236703,-0.289694,4.232527,5.372531,-2.739428,9.976262,-4.308094,-5.236691,0.144576,2.516153,-4.153101,4.391254,-2.432137,2.061592],[-2.170869,-8.649040,2.084221,-4.193988,-1.907337,-1.521842,-5.431805,-5.837630,6.851959,0.158175,-1.297668,1.899070,5.438531,1.714566],[8.035088,-3.509043,-2.825447,8.396524,2.402385,-1.135227,2.748428,6.505268,-6.797467,2.671968,-8.309735,-0.350346,3.227901,-5.019045],[-9.697631,-7.590103,-8.214393,8.276533,-2.317697,-4.125455,-9.290526,0.734687,-8.221391,-8.019188,-0.676884,-8.136137,-3.437394,0.572849],[-6.319974,-0.815217,2.745100,1.412431,2.432223,-2.595088,9.672920,-5.534281,1.732459,0.973799,-5.984284,-0.373890,1.109017,2.055201],[4.579974,-3.056442,-8.620622,-4.081064,7.289823,5.731510,-9.978330,-4.470550,8.716153,-8.922142,-6.427843,-0.645066,0.965037,-2.319806],[9.514098,-9.369176,-5.939656,7.467114,4.008936,0.803640,4.660799,-8.334754,-7.639706,1.488469,4.687734,9.009953,6.260687,-0.343199],[-5.918405,-5.208985,-6.202690,5.610067,2.878214,-6.517149,-1.711433,6.416041,-3.781118,-6.401633,8.232974,-1.821057,1.123223,-9.343308],[2.896033,2.050982,0.669197,-8.101603,-3.798856,8.463060,-3.607139,-3.289651,1.865020,-0.368551,5.285884,-4.818428,-2.616336,5.713324]]], dtype = "float32")#candidate|8034|(8, 16, 14)|const|float32
uop_8035 = relay.atanh(const_8034.astype('float32')) # shape=(8, 16, 14)
output = relay.Tuple([uop_8035,])
output2 = relay.Tuple([uop_8035,])
func_8041 = relay.Function([], output)
mod['func_8041'] = func_8041
mod = relay.transform.InferType()(mod)
output = func_8041()
func_8042 = relay.Function([], output)
mutated_mod['func_8042'] = func_8042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1281_call = mod.get_global_var('func_1281')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_8048 = relay.TupleGetItem(func_1281_call(), 4)
call_8049 = relay.TupleGetItem(func_1282_call(), 4)
output = relay.Tuple([call_8048,])
output2 = relay.Tuple([call_8049,])
func_8061 = relay.Function([], output)
mod['func_8061'] = func_8061
mod = relay.transform.InferType()(mod)
output = func_8061()
func_8062 = relay.Function([], output)
mutated_mod['func_8062'] = func_8062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1930_call = mod.get_global_var('func_1930')
func_1932_call = mutated_mod.get_global_var('func_1932')
call_8117 = relay.TupleGetItem(func_1930_call(), 2)
call_8118 = relay.TupleGetItem(func_1932_call(), 2)
func_5008_call = mod.get_global_var('func_5008')
func_5009_call = mutated_mod.get_global_var('func_5009')
call_8130 = relay.TupleGetItem(func_5008_call(), 0)
call_8131 = relay.TupleGetItem(func_5009_call(), 0)
func_4431_call = mod.get_global_var('func_4431')
func_4432_call = mutated_mod.get_global_var('func_4432')
call_8144 = relay.TupleGetItem(func_4431_call(), 0)
call_8145 = relay.TupleGetItem(func_4432_call(), 0)
output = relay.Tuple([call_8117,call_8130,call_8144,])
output2 = relay.Tuple([call_8118,call_8131,call_8145,])
func_8166 = relay.Function([], output)
mod['func_8166'] = func_8166
mod = relay.transform.InferType()(mod)
output = func_8166()
func_8167 = relay.Function([], output)
mutated_mod['func_8167'] = func_8167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4045_call = mod.get_global_var('func_4045')
func_4046_call = mutated_mod.get_global_var('func_4046')
call_8361 = relay.TupleGetItem(func_4045_call(), 3)
call_8362 = relay.TupleGetItem(func_4046_call(), 3)
var_8363 = relay.var("var_8363", dtype = "float32", shape = (1001,))#candidate|8363|(1001,)|var|float32
bop_8364 = relay.logical_and(call_8361.astype('bool'), relay.reshape(var_8363.astype('bool'), relay.shape_of(call_8361))) # shape=(1001,)
bop_8367 = relay.logical_and(call_8362.astype('bool'), relay.reshape(var_8363.astype('bool'), relay.shape_of(call_8362))) # shape=(1001,)
func_5403_call = mod.get_global_var('func_5403')
func_5407_call = mutated_mod.get_global_var('func_5407')
var_8394 = relay.var("var_8394", dtype = "float64", shape = (3840,))#candidate|8394|(3840,)|var|float64
call_8393 = relay.TupleGetItem(func_5403_call(relay.reshape(var_8394.astype('float64'), [16, 15, 16]), relay.reshape(var_8394.astype('float64'), [16, 15, 16]), ), 1)
call_8395 = relay.TupleGetItem(func_5407_call(relay.reshape(var_8394.astype('float64'), [16, 15, 16]), relay.reshape(var_8394.astype('float64'), [16, 15, 16]), ), 1)
output = relay.Tuple([bop_8364,call_8393,var_8394,])
output2 = relay.Tuple([bop_8367,call_8395,var_8394,])
func_8407 = relay.Function([var_8363,var_8394,], output)
mod['func_8407'] = func_8407
mod = relay.transform.InferType()(mod)
mutated_mod['func_8407'] = func_8407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8407_call = mutated_mod.get_global_var('func_8407')
var_8409 = relay.var("var_8409", dtype = "float32", shape = (1001,))#candidate|8409|(1001,)|var|float32
var_8410 = relay.var("var_8410", dtype = "float64", shape = (3840,))#candidate|8410|(3840,)|var|float64
call_8408 = func_8407_call(var_8409,var_8410,)
output = call_8408
func_8411 = relay.Function([var_8409,var_8410,], output)
mutated_mod['func_8411'] = func_8411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_704_call = mod.get_global_var('func_704')
func_706_call = mutated_mod.get_global_var('func_706')
call_8450 = relay.TupleGetItem(func_704_call(), 0)
call_8451 = relay.TupleGetItem(func_706_call(), 0)
output = relay.Tuple([call_8450,])
output2 = relay.Tuple([call_8451,])
func_8454 = relay.Function([], output)
mod['func_8454'] = func_8454
mod = relay.transform.InferType()(mod)
output = func_8454()
func_8455 = relay.Function([], output)
mutated_mod['func_8455'] = func_8455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6453_call = mod.get_global_var('func_6453')
func_6455_call = mutated_mod.get_global_var('func_6455')
call_8458 = relay.TupleGetItem(func_6453_call(), 0)
call_8459 = relay.TupleGetItem(func_6455_call(), 0)
func_4518_call = mod.get_global_var('func_4518')
func_4519_call = mutated_mod.get_global_var('func_4519')
call_8477 = relay.TupleGetItem(func_4518_call(), 1)
call_8478 = relay.TupleGetItem(func_4519_call(), 1)
func_2680_call = mod.get_global_var('func_2680')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_8503 = relay.TupleGetItem(func_2680_call(), 0)
call_8504 = relay.TupleGetItem(func_2681_call(), 0)
func_6588_call = mod.get_global_var('func_6588')
func_6590_call = mutated_mod.get_global_var('func_6590')
call_8505 = func_6588_call()
call_8506 = func_6588_call()
func_7766_call = mod.get_global_var('func_7766')
func_7768_call = mutated_mod.get_global_var('func_7768')
call_8507 = relay.TupleGetItem(func_7766_call(), 0)
call_8508 = relay.TupleGetItem(func_7768_call(), 0)
output = relay.Tuple([call_8458,call_8477,call_8503,call_8505,call_8507,])
output2 = relay.Tuple([call_8459,call_8478,call_8504,call_8506,call_8508,])
func_8510 = relay.Function([], output)
mod['func_8510'] = func_8510
mod = relay.transform.InferType()(mod)
output = func_8510()
func_8511 = relay.Function([], output)
mutated_mod['func_8511'] = func_8511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5654_call = mod.get_global_var('func_5654')
func_5655_call = mutated_mod.get_global_var('func_5655')
call_8546 = func_5654_call()
call_8547 = func_5654_call()
output = relay.Tuple([call_8546,])
output2 = relay.Tuple([call_8547,])
func_8553 = relay.Function([], output)
mod['func_8553'] = func_8553
mod = relay.transform.InferType()(mod)
mutated_mod['func_8553'] = func_8553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8553_call = mutated_mod.get_global_var('func_8553')
call_8554 = func_8553_call()
output = call_8554
func_8555 = relay.Function([], output)
mutated_mod['func_8555'] = func_8555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2428_call = mod.get_global_var('func_2428')
func_2430_call = mutated_mod.get_global_var('func_2430')
call_8588 = relay.TupleGetItem(func_2428_call(), 1)
call_8589 = relay.TupleGetItem(func_2430_call(), 1)
output = call_8588
output2 = call_8589
func_8590 = relay.Function([], output)
mod['func_8590'] = func_8590
mod = relay.transform.InferType()(mod)
output = func_8590()
func_8591 = relay.Function([], output)
mutated_mod['func_8591'] = func_8591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_8629 = relay.TupleGetItem(func_1067_call(), 0)
call_8630 = relay.TupleGetItem(func_1068_call(), 0)
output = relay.Tuple([call_8629,])
output2 = relay.Tuple([call_8630,])
func_8631 = relay.Function([], output)
mod['func_8631'] = func_8631
mod = relay.transform.InferType()(mod)
output = func_8631()
func_8632 = relay.Function([], output)
mutated_mod['func_8632'] = func_8632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6862_call = mod.get_global_var('func_6862')
func_6863_call = mutated_mod.get_global_var('func_6863')
call_8682 = relay.TupleGetItem(func_6862_call(), 1)
call_8683 = relay.TupleGetItem(func_6863_call(), 1)
output = relay.Tuple([call_8682,])
output2 = relay.Tuple([call_8683,])
func_8702 = relay.Function([], output)
mod['func_8702'] = func_8702
mod = relay.transform.InferType()(mod)
output = func_8702()
func_8703 = relay.Function([], output)
mutated_mod['func_8703'] = func_8703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7162_call = mod.get_global_var('func_7162')
func_7163_call = mutated_mod.get_global_var('func_7163')
call_8786 = func_7162_call()
call_8787 = func_7162_call()
output = call_8786
output2 = call_8787
func_8802 = relay.Function([], output)
mod['func_8802'] = func_8802
mod = relay.transform.InferType()(mod)
mutated_mod['func_8802'] = func_8802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8802_call = mutated_mod.get_global_var('func_8802')
call_8803 = func_8802_call()
output = call_8803
func_8804 = relay.Function([], output)
mutated_mod['func_8804'] = func_8804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8702_call = mod.get_global_var('func_8702')
func_8703_call = mutated_mod.get_global_var('func_8703')
call_8819 = relay.TupleGetItem(func_8702_call(), 0)
call_8820 = relay.TupleGetItem(func_8703_call(), 0)
output = relay.Tuple([call_8819,])
output2 = relay.Tuple([call_8820,])
func_8836 = relay.Function([], output)
mod['func_8836'] = func_8836
mod = relay.transform.InferType()(mod)
output = func_8836()
func_8837 = relay.Function([], output)
mutated_mod['func_8837'] = func_8837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6161_call = mod.get_global_var('func_6161')
func_6163_call = mutated_mod.get_global_var('func_6163')
call_8838 = func_6161_call()
call_8839 = func_6161_call()
func_2680_call = mod.get_global_var('func_2680')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_8849 = relay.TupleGetItem(func_2680_call(), 1)
call_8850 = relay.TupleGetItem(func_2681_call(), 1)
func_4045_call = mod.get_global_var('func_4045')
func_4046_call = mutated_mod.get_global_var('func_4046')
call_8860 = relay.TupleGetItem(func_4045_call(), 5)
call_8861 = relay.TupleGetItem(func_4046_call(), 5)
func_2428_call = mod.get_global_var('func_2428')
func_2430_call = mutated_mod.get_global_var('func_2430')
call_8863 = relay.TupleGetItem(func_2428_call(), 0)
call_8864 = relay.TupleGetItem(func_2430_call(), 0)
output = relay.Tuple([call_8838,call_8849,call_8860,call_8863,])
output2 = relay.Tuple([call_8839,call_8850,call_8861,call_8864,])
func_8868 = relay.Function([], output)
mod['func_8868'] = func_8868
mod = relay.transform.InferType()(mod)
mutated_mod['func_8868'] = func_8868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8868_call = mutated_mod.get_global_var('func_8868')
call_8869 = func_8868_call()
output = call_8869
func_8870 = relay.Function([], output)
mutated_mod['func_8870'] = func_8870
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8912 = relay.var("var_8912", dtype = "float64", shape = (8, 14, 15))#candidate|8912|(8, 14, 15)|var|float64
var_8913 = relay.var("var_8913", dtype = "float64", shape = (8, 14, 15))#candidate|8913|(8, 14, 15)|var|float64
bop_8914 = relay.greater(var_8912.astype('bool'), relay.reshape(var_8913.astype('bool'), relay.shape_of(var_8912))) # shape=(8, 14, 15)
output = bop_8914
output2 = bop_8914
func_8917 = relay.Function([var_8912,var_8913,], output)
mod['func_8917'] = func_8917
mod = relay.transform.InferType()(mod)
var_8918 = relay.var("var_8918", dtype = "float64", shape = (8, 14, 15))#candidate|8918|(8, 14, 15)|var|float64
var_8919 = relay.var("var_8919", dtype = "float64", shape = (8, 14, 15))#candidate|8919|(8, 14, 15)|var|float64
output = func_8917(var_8918,var_8919,)
func_8920 = relay.Function([var_8918,var_8919,], output)
mutated_mod['func_8920'] = func_8920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6967_call = mod.get_global_var('func_6967')
func_6968_call = mutated_mod.get_global_var('func_6968')
call_8922 = relay.TupleGetItem(func_6967_call(), 2)
call_8923 = relay.TupleGetItem(func_6968_call(), 2)
output = relay.Tuple([call_8922,])
output2 = relay.Tuple([call_8923,])
func_8933 = relay.Function([], output)
mod['func_8933'] = func_8933
mod = relay.transform.InferType()(mod)
mutated_mod['func_8933'] = func_8933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8933_call = mutated_mod.get_global_var('func_8933')
call_8934 = func_8933_call()
output = call_8934
func_8935 = relay.Function([], output)
mutated_mod['func_8935'] = func_8935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3106_call = mod.get_global_var('func_3106')
func_3107_call = mutated_mod.get_global_var('func_3107')
call_8953 = relay.TupleGetItem(func_3106_call(), 0)
call_8954 = relay.TupleGetItem(func_3107_call(), 0)
output = relay.Tuple([call_8953,])
output2 = relay.Tuple([call_8954,])
func_8955 = relay.Function([], output)
mod['func_8955'] = func_8955
mod = relay.transform.InferType()(mod)
output = func_8955()
func_8956 = relay.Function([], output)
mutated_mod['func_8956'] = func_8956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4054_call = mod.get_global_var('func_4054')
func_4056_call = mutated_mod.get_global_var('func_4056')
call_8972 = func_4054_call()
call_8973 = func_4054_call()
uop_8993 = relay.cos(call_8972.astype('float64')) # shape=(10, 16, 10)
uop_8995 = relay.cos(call_8973.astype('float64')) # shape=(10, 16, 10)
func_7252_call = mod.get_global_var('func_7252')
func_7253_call = mutated_mod.get_global_var('func_7253')
call_8996 = relay.TupleGetItem(func_7252_call(), 3)
call_8997 = relay.TupleGetItem(func_7253_call(), 3)
func_8802_call = mod.get_global_var('func_8802')
func_8804_call = mutated_mod.get_global_var('func_8804')
call_9000 = func_8802_call()
call_9001 = func_8802_call()
output = relay.Tuple([uop_8993,call_8996,call_9000,])
output2 = relay.Tuple([uop_8995,call_8997,call_9001,])
func_9012 = relay.Function([], output)
mod['func_9012'] = func_9012
mod = relay.transform.InferType()(mod)
output = func_9012()
func_9013 = relay.Function([], output)
mutated_mod['func_9013'] = func_9013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1160_call = mod.get_global_var('func_1160')
func_1161_call = mutated_mod.get_global_var('func_1161')
call_9017 = relay.TupleGetItem(func_1160_call(), 1)
call_9018 = relay.TupleGetItem(func_1161_call(), 1)
func_6161_call = mod.get_global_var('func_6161')
func_6163_call = mutated_mod.get_global_var('func_6163')
call_9019 = func_6161_call()
call_9020 = func_6161_call()
output = relay.Tuple([call_9017,call_9019,])
output2 = relay.Tuple([call_9018,call_9020,])
func_9035 = relay.Function([], output)
mod['func_9035'] = func_9035
mod = relay.transform.InferType()(mod)
output = func_9035()
func_9036 = relay.Function([], output)
mutated_mod['func_9036'] = func_9036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5488_call = mod.get_global_var('func_5488')
func_5490_call = mutated_mod.get_global_var('func_5490')
call_9126 = relay.TupleGetItem(func_5488_call(), 0)
call_9127 = relay.TupleGetItem(func_5490_call(), 0)
output = relay.Tuple([call_9126,])
output2 = relay.Tuple([call_9127,])
func_9134 = relay.Function([], output)
mod['func_9134'] = func_9134
mod = relay.transform.InferType()(mod)
output = func_9134()
func_9135 = relay.Function([], output)
mutated_mod['func_9135'] = func_9135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7162_call = mod.get_global_var('func_7162')
func_7163_call = mutated_mod.get_global_var('func_7163')
call_9143 = func_7162_call()
call_9144 = func_7162_call()
output = call_9143
output2 = call_9144
func_9145 = relay.Function([], output)
mod['func_9145'] = func_9145
mod = relay.transform.InferType()(mod)
mutated_mod['func_9145'] = func_9145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9145_call = mutated_mod.get_global_var('func_9145')
call_9146 = func_9145_call()
output = call_9146
func_9147 = relay.Function([], output)
mutated_mod['func_9147'] = func_9147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9168 = relay.var("var_9168", dtype = "uint32", shape = (12, 9, 12))#candidate|9168|(12, 9, 12)|var|uint32
const_9169 = relay.const([[[7,4,-9,-1,-1,7,6,7,-5,3,3,1],[5,6,2,-7,1,6,-4,-4,5,-7,3,7],[10,-1,-9,-4,-10,6,4,8,3,-5,9,1],[1,9,2,1,5,7,-4,6,-1,3,-6,-9],[5,7,5,9,6,9,3,1,4,2,9,2],[-2,5,8,-6,-10,-6,-1,-1,5,6,-2,6],[5,5,-7,3,-2,5,4,2,6,-1,4,-7],[-3,-9,-10,-2,2,-10,-4,8,3,7,-9,-3],[8,-4,-5,-1,4,5,4,10,5,-7,-4,7]],[[8,-5,3,-2,2,-3,-8,9,-4,-7,-10,-8],[-8,-5,10,10,-6,-5,-4,9,-2,7,7,-4],[-8,1,10,4,4,2,1,-2,-8,-5,-3,-10],[-7,6,1,-4,1,-7,-7,-10,-2,5,-6,-2],[3,7,-4,-2,2,-6,6,-1,7,9,-1,-7],[1,8,-10,-10,-2,8,3,-8,7,-7,-3,-1],[6,-8,-7,10,8,5,-10,10,3,-9,-9,-1],[-10,9,-7,-8,10,-10,9,-5,1,5,-7,5],[-7,4,1,2,6,-7,-2,7,-8,-9,8,6]],[[-5,3,7,10,2,10,3,-5,3,-1,-6,9],[5,3,-3,5,1,10,5,4,7,-1,5,-9],[-7,-5,1,6,-3,1,9,6,3,-10,7,6],[-7,4,2,-2,6,-1,-1,-2,6,-2,9,-7],[-3,1,-10,-6,3,-8,-5,-3,8,-9,8,5],[5,1,5,-6,-4,10,3,10,6,-10,-10,6],[-6,-9,6,-10,-9,-7,-8,3,-2,-7,-9,-3],[-7,-9,-6,5,10,6,-5,-9,9,1,8,1],[-8,-5,5,3,-10,7,7,-10,5,1,2,8]],[[-5,-1,6,-3,8,1,-3,-5,7,1,-5,9],[6,-4,1,10,-5,-10,-2,-5,-8,-6,-1,8],[-3,3,9,-10,5,3,-7,3,5,1,6,-8],[2,-7,-4,-4,3,7,-9,-5,10,-10,1,9],[7,-3,-5,7,-6,-4,-1,-7,6,-4,-10,9],[9,7,5,7,-5,4,3,9,8,-10,-2,3],[3,-2,8,-3,3,10,7,1,-8,-1,-8,10],[6,7,9,7,-7,4,-4,-6,-10,-6,-4,6],[2,4,-10,8,-6,-5,4,8,-2,-9,-3,3]],[[9,-8,-6,6,-4,10,5,-1,4,8,1,-7],[10,9,-1,5,-4,5,-7,-10,1,6,-1,-9],[-6,-10,2,-10,-5,4,-3,-10,-1,-1,-5,-1],[2,-4,-6,-7,-7,9,-6,2,8,-9,-4,-2],[-3,-5,-5,-7,-6,1,2,-4,4,-10,2,2],[-7,-5,-8,-8,-9,1,9,-2,-9,-7,-8,1],[6,-2,1,-8,-5,-1,-1,5,-2,-5,-4,-8],[-7,-3,-7,9,-4,-10,5,5,-5,4,-5,-6],[-5,2,8,-2,6,-2,-2,4,1,2,6,-7]],[[-6,-6,10,-2,3,-6,-3,-7,-6,1,9,-3],[-3,-8,4,1,8,5,-9,3,-10,-4,9,-1],[10,10,-9,-4,8,3,-9,4,-10,-5,5,-3],[-9,7,10,-3,-3,-2,6,7,7,-7,-4,6],[-1,5,1,2,-6,-9,8,7,-5,-4,-6,-6],[-10,-1,-6,-8,-8,-5,-10,-2,-6,3,3,5],[-10,8,9,8,4,2,6,1,3,-4,4,1],[7,4,-3,-5,-8,-10,-4,6,8,2,-8,-10],[10,7,-10,-4,10,4,-8,10,-3,-5,-7,-6]],[[9,-10,2,9,6,4,2,-2,7,-10,6,-3],[10,-7,-6,-3,3,-1,5,-7,-6,6,10,-4],[5,-3,6,1,3,3,3,4,1,-2,-7,-9],[3,-3,-5,-1,-1,-3,-10,2,-4,-3,-3,6],[-4,2,9,-4,-9,7,-4,-4,3,-3,-6,8],[-10,-9,-10,6,-5,-5,10,-9,6,2,-4,-6],[-8,2,4,5,1,-6,1,4,8,4,-9,-8],[-1,-7,-1,-2,4,2,-3,1,-3,2,-8,-1],[8,-6,-8,-3,7,4,7,-8,9,8,-8,-6]],[[7,-4,6,1,9,-2,4,-6,7,10,7,6],[7,-9,-4,-6,3,-6,-5,3,-4,3,-2,8],[10,-5,5,2,-5,7,-6,-10,4,7,1,-5],[7,-5,-8,10,1,4,7,8,-7,-1,1,-9],[7,6,8,-5,1,5,2,-7,3,9,-7,3],[-3,6,-6,-8,-3,-3,8,-9,9,-8,1,6],[-9,3,-3,2,1,-9,-3,1,1,-6,-5,8],[8,7,-3,3,-9,10,3,7,7,10,-4,5],[-7,6,5,8,-2,-3,1,9,-2,-1,2,-8]],[[5,-1,1,6,-7,3,-8,7,7,7,8,7],[6,5,-7,8,-3,3,-5,5,3,5,-9,1],[2,2,-5,-10,-7,10,-9,8,-7,9,1,-5],[-10,-6,-1,-4,7,3,-7,5,-9,9,-3,-4],[-9,-4,7,-7,-10,-7,-3,5,9,2,-2,-1],[1,-1,-9,7,-7,10,-2,10,-1,-4,8,-4],[1,2,-2,6,-2,-10,-3,-1,-7,6,-10,-3],[3,-5,1,7,-7,7,1,5,-2,6,-1,10],[8,9,-10,8,2,-4,5,4,10,3,5,-7]],[[-2,-6,10,1,2,3,-4,5,4,-8,-3,-3],[4,-8,-4,9,8,9,1,-5,1,5,8,-1],[1,3,2,1,-2,8,-4,1,2,9,9,-6],[-1,-6,-3,5,-6,2,-4,5,-9,-9,-10,4],[-10,7,6,-2,6,-10,-6,-3,-3,10,7,3],[-10,9,-5,-4,-6,8,4,-1,-9,9,7,-8],[8,-8,-7,1,7,9,-2,1,-6,10,-1,10],[3,5,-3,10,3,8,-3,7,-8,-4,-9,-8],[3,5,-10,-2,-6,5,-2,-5,-3,6,2,5]],[[-10,-10,-3,-4,-8,-8,7,3,1,-7,3,1],[-4,1,8,6,7,7,-6,-6,-3,7,8,-5],[8,-3,1,8,-1,-1,-6,-7,3,-5,-8,-7],[7,10,4,6,5,-6,5,4,-2,5,10,-3],[7,-5,-8,5,-6,5,-10,5,-2,4,4,3],[10,4,-1,6,4,2,-6,9,2,6,-5,-7],[-2,6,10,-2,9,-2,-2,8,-2,9,-7,-9],[-4,-1,6,8,3,-5,-5,-3,2,5,-6,1],[-5,-3,9,-1,7,-2,4,-2,-3,-7,-4,3]],[[8,10,-4,9,1,2,-5,5,-7,-6,8,-5],[7,-1,4,6,5,3,9,9,-3,-2,-3,2],[-5,-10,-8,-5,-9,-5,2,3,9,7,10,-8],[6,-3,8,-9,-4,7,4,-9,10,-5,7,-2],[-6,2,4,8,1,-8,-9,-3,8,6,-6,4],[-1,10,9,-2,-2,10,6,5,3,8,4,4],[-3,-3,-7,5,-8,-4,9,-3,-4,-7,4,10],[7,9,1,-3,-6,-3,5,-1,-5,9,2,-2],[-6,-7,-3,8,-4,1,-10,10,-3,9,3,9]]], dtype = "uint32")#candidate|9169|(12, 9, 12)|const|uint32
bop_9170 = relay.maximum(var_9168.astype('uint32'), relay.reshape(const_9169.astype('uint32'), relay.shape_of(var_9168))) # shape=(12, 9, 12)
func_3408_call = mod.get_global_var('func_3408')
func_3411_call = mutated_mod.get_global_var('func_3411')
var_9174 = relay.var("var_9174", dtype = "float64", shape = (56, 26))#candidate|9174|(56, 26)|var|float64
call_9173 = relay.TupleGetItem(func_3408_call(relay.reshape(var_9174.astype('float64'), [13, 7, 16]), relay.reshape(var_9174.astype('uint32'), [13, 7, 16]), ), 0)
call_9175 = relay.TupleGetItem(func_3411_call(relay.reshape(var_9174.astype('float64'), [13, 7, 16]), relay.reshape(var_9174.astype('uint32'), [13, 7, 16]), ), 0)
func_8917_call = mod.get_global_var('func_8917')
func_8920_call = mutated_mod.get_global_var('func_8920')
var_9177 = relay.var("var_9177", dtype = "float64", shape = (4, 420))#candidate|9177|(4, 420)|var|float64
call_9176 = func_8917_call(relay.reshape(var_9177.astype('float64'), [8, 14, 15]), relay.reshape(var_9177.astype('float64'), [8, 14, 15]), )
call_9178 = func_8917_call(relay.reshape(var_9177.astype('float64'), [8, 14, 15]), relay.reshape(var_9177.astype('float64'), [8, 14, 15]), )
uop_9183 = relay.sqrt(var_9168.astype('float32')) # shape=(12, 9, 12)
output = relay.Tuple([bop_9170,call_9173,var_9174,call_9176,var_9177,uop_9183,])
output2 = relay.Tuple([bop_9170,call_9175,var_9174,call_9178,var_9177,uop_9183,])
func_9189 = relay.Function([var_9168,var_9174,var_9177,], output)
mod['func_9189'] = func_9189
mod = relay.transform.InferType()(mod)
var_9190 = relay.var("var_9190", dtype = "uint32", shape = (12, 9, 12))#candidate|9190|(12, 9, 12)|var|uint32
var_9191 = relay.var("var_9191", dtype = "float64", shape = (56, 26))#candidate|9191|(56, 26)|var|float64
var_9192 = relay.var("var_9192", dtype = "float64", shape = (4, 420))#candidate|9192|(4, 420)|var|float64
output = func_9189(var_9190,var_9191,var_9192,)
func_9193 = relay.Function([var_9190,var_9191,var_9192,], output)
mutated_mod['func_9193'] = func_9193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6967_call = mod.get_global_var('func_6967')
func_6968_call = mutated_mod.get_global_var('func_6968')
call_9201 = relay.TupleGetItem(func_6967_call(), 2)
call_9202 = relay.TupleGetItem(func_6968_call(), 2)
func_4045_call = mod.get_global_var('func_4045')
func_4046_call = mutated_mod.get_global_var('func_4046')
call_9208 = relay.TupleGetItem(func_4045_call(), 2)
call_9209 = relay.TupleGetItem(func_4046_call(), 2)
func_4774_call = mod.get_global_var('func_4774')
func_4775_call = mutated_mod.get_global_var('func_4775')
call_9217 = func_4774_call()
call_9218 = func_4774_call()
output = relay.Tuple([call_9201,call_9208,call_9217,])
output2 = relay.Tuple([call_9202,call_9209,call_9218,])
func_9227 = relay.Function([], output)
mod['func_9227'] = func_9227
mod = relay.transform.InferType()(mod)
output = func_9227()
func_9228 = relay.Function([], output)
mutated_mod['func_9228'] = func_9228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7076_call = mod.get_global_var('func_7076')
func_7077_call = mutated_mod.get_global_var('func_7077')
call_9273 = relay.TupleGetItem(func_7076_call(), 1)
call_9274 = relay.TupleGetItem(func_7077_call(), 1)
output = relay.Tuple([call_9273,])
output2 = relay.Tuple([call_9274,])
func_9296 = relay.Function([], output)
mod['func_9296'] = func_9296
mod = relay.transform.InferType()(mod)
output = func_9296()
func_9297 = relay.Function([], output)
mutated_mod['func_9297'] = func_9297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mod.get_global_var('func_1997')
func_1998_call = mutated_mod.get_global_var('func_1998')
call_9380 = relay.TupleGetItem(func_1997_call(), 0)
call_9381 = relay.TupleGetItem(func_1998_call(), 0)
output = relay.Tuple([call_9380,])
output2 = relay.Tuple([call_9381,])
func_9384 = relay.Function([], output)
mod['func_9384'] = func_9384
mod = relay.transform.InferType()(mod)
mutated_mod['func_9384'] = func_9384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9384_call = mutated_mod.get_global_var('func_9384')
call_9385 = func_9384_call()
output = call_9385
func_9386 = relay.Function([], output)
mutated_mod['func_9386'] = func_9386
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9507 = relay.var("var_9507", dtype = "float64", shape = (9, 14, 9))#candidate|9507|(9, 14, 9)|var|float64
uop_9508 = relay.sin(var_9507.astype('float64')) # shape=(9, 14, 9)
output = uop_9508
output2 = uop_9508
func_9536 = relay.Function([var_9507,], output)
mod['func_9536'] = func_9536
mod = relay.transform.InferType()(mod)
var_9537 = relay.var("var_9537", dtype = "float64", shape = (9, 14, 9))#candidate|9537|(9, 14, 9)|var|float64
output = func_9536(var_9537)
func_9538 = relay.Function([var_9537], output)
mutated_mod['func_9538'] = func_9538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5952_call = mod.get_global_var('func_5952')
func_5954_call = mutated_mod.get_global_var('func_5954')
call_9545 = relay.TupleGetItem(func_5952_call(), 2)
call_9546 = relay.TupleGetItem(func_5954_call(), 2)
output = relay.Tuple([call_9545,])
output2 = relay.Tuple([call_9546,])
func_9571 = relay.Function([], output)
mod['func_9571'] = func_9571
mod = relay.transform.InferType()(mod)
mutated_mod['func_9571'] = func_9571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9571_call = mutated_mod.get_global_var('func_9571')
call_9572 = func_9571_call()
output = call_9572
func_9573 = relay.Function([], output)
mutated_mod['func_9573'] = func_9573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2724_call = mod.get_global_var('func_2724')
func_2726_call = mutated_mod.get_global_var('func_2726')
call_9594 = relay.TupleGetItem(func_2724_call(), 2)
call_9595 = relay.TupleGetItem(func_2726_call(), 2)
output = call_9594
output2 = call_9595
func_9600 = relay.Function([], output)
mod['func_9600'] = func_9600
mod = relay.transform.InferType()(mod)
mutated_mod['func_9600'] = func_9600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9600_call = mutated_mod.get_global_var('func_9600')
call_9601 = func_9600_call()
output = call_9601
func_9602 = relay.Function([], output)
mutated_mod['func_9602'] = func_9602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8166_call = mod.get_global_var('func_8166')
func_8167_call = mutated_mod.get_global_var('func_8167')
call_9605 = relay.TupleGetItem(func_8166_call(), 1)
call_9606 = relay.TupleGetItem(func_8167_call(), 1)
output = relay.Tuple([call_9605,])
output2 = relay.Tuple([call_9606,])
func_9607 = relay.Function([], output)
mod['func_9607'] = func_9607
mod = relay.transform.InferType()(mod)
output = func_9607()
func_9608 = relay.Function([], output)
mutated_mod['func_9608'] = func_9608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2724_call = mod.get_global_var('func_2724')
func_2726_call = mutated_mod.get_global_var('func_2726')
call_9634 = relay.TupleGetItem(func_2724_call(), 1)
call_9635 = relay.TupleGetItem(func_2726_call(), 1)
func_3928_call = mod.get_global_var('func_3928')
func_3930_call = mutated_mod.get_global_var('func_3930')
call_9636 = func_3928_call()
call_9637 = func_3928_call()
uop_9639 = relay.atan(call_9634.astype('float64')) # shape=(2, 800)
uop_9641 = relay.atan(call_9635.astype('float64')) # shape=(2, 800)
output = relay.Tuple([call_9636,uop_9639,])
output2 = relay.Tuple([call_9637,uop_9641,])
func_9661 = relay.Function([], output)
mod['func_9661'] = func_9661
mod = relay.transform.InferType()(mod)
output = func_9661()
func_9662 = relay.Function([], output)
mutated_mod['func_9662'] = func_9662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4924_call = mod.get_global_var('func_4924')
func_4925_call = mutated_mod.get_global_var('func_4925')
call_9685 = relay.TupleGetItem(func_4924_call(), 1)
call_9686 = relay.TupleGetItem(func_4925_call(), 1)
var_9691 = relay.var("var_9691", dtype = "bool", shape = (1600,))#candidate|9691|(1600,)|var|bool
bop_9692 = relay.bitwise_xor(call_9685.astype('int64'), relay.reshape(var_9691.astype('int64'), relay.shape_of(call_9685))) # shape=(1600,)
bop_9695 = relay.bitwise_xor(call_9686.astype('int64'), relay.reshape(var_9691.astype('int64'), relay.shape_of(call_9686))) # shape=(1600,)
func_5886_call = mod.get_global_var('func_5886')
func_5887_call = mutated_mod.get_global_var('func_5887')
call_9696 = relay.TupleGetItem(func_5886_call(), 1)
call_9697 = relay.TupleGetItem(func_5887_call(), 1)
func_3408_call = mod.get_global_var('func_3408')
func_3411_call = mutated_mod.get_global_var('func_3411')
const_9699 = relay.const([3.797087,5.443030,6.442352,-8.473463,-7.643245,-1.739345,-7.465637,6.148939,-1.978709,-2.278661,3.677736,4.599551,6.922336,5.265419,-8.771869,-0.382113,2.860976,-8.169793,8.405698,7.660561,-2.357424,-5.784352,-0.435484,8.689027,-3.539534,-0.724835,6.061922,8.137137,9.136335,6.102053,5.389958,6.356480,1.124662,-7.082194,6.062900,0.654252,0.037780,-1.251482,0.730698,3.687312,2.591755,2.776401,3.422594,1.141540,-7.805182,-7.760258,-4.463331,-1.659181,2.350956,9.016197,-9.114209,-2.121971,-2.565924,4.895281,7.821516,8.109781,-1.528091,5.615361,9.136669,0.344076,-6.867290,-0.404812,2.833072,-3.866012,2.341647,4.074093,-4.172659,1.123003,-2.505463,-3.135319,1.012165,0.188321,2.927100,2.943583,3.915981,-6.471841,-8.799611,6.007737,8.021949,0.927146,9.536748,-2.304555,-3.124601,-0.514964,-5.700262,-1.587921,-0.335759,3.082906,0.002092,-6.164256,4.124322,-9.604169,1.694523,-8.940830,9.435323,4.750906,-5.202511,2.364606,-1.919615,-9.607218,-1.150527,-5.687018,-9.670858,-0.860834,1.963006,-2.494509,1.038511,-9.257760,-6.973880,3.528090,-9.678714,-0.285289,-5.195411,-2.109277,7.368699,5.600181,9.992848,-3.536667,-1.187211,0.394258,-7.131272,-0.817722,-1.146715,-0.398862,0.219968,3.172658,4.484946,8.441964,5.659438,-3.150171,-8.951263,-6.707592,1.328401,2.502386,-8.734173,0.142988,-3.365748,-8.790689,1.592435,-9.015429,3.242249,-5.252404,8.461654,-6.583792,9.999182,-0.365330,6.111922,-1.347578,4.725496,-0.038870,-7.001896,-7.771043,0.225601,-6.036507,-1.812617,-9.065990,-2.199063,-9.181692,-6.420650,-4.208387,7.279302,3.315670,0.865541,7.316893,8.633137,-7.181710,-8.394976,-5.309140,-0.364276,-5.798151,3.052232,-7.082891,1.806059,-9.792440,2.051238,-3.353991,5.361998,2.492593,4.414140,5.172253,-2.458506,-9.995435,9.543578,5.365815,7.699585,-1.647174,-0.246620,-5.813684,4.197246,7.262247,3.562437,5.643390,2.457411,-4.648934,8.176300,7.441444,3.282345,-9.077990,-9.674508,-7.495485,8.222968,4.835775,9.420483,-6.343917,-8.049463,-5.926900,0.133098,-2.602952,-1.510765,7.666522,-9.880752,-2.195232,-7.170686,-2.467912,-5.330830,4.309133,5.630445,5.544457,-7.058754,8.388428,2.448042,8.119009,3.940591,4.715724,-6.929134,-8.317711,8.481382,-2.386081,4.015889,-9.127916,-2.647391,-1.522264,-3.844386,-0.717390,5.287961,4.651162,6.359059,9.705775,-5.570316,7.083988,9.423677,-3.411628,-9.119383,-8.485628,8.429023,1.316176,-9.966420,-5.916829,4.194076,-4.311824,-2.883331,4.591979,-8.445800,2.686089,8.653688,3.267681,-9.693605,8.214572,-1.899094,-2.331813,-3.071542,5.758344,5.508562,-7.786093,7.755161,8.461474,-1.201249,7.332440,1.695405,-0.834993,7.303177,6.089080,0.606623,-1.033804,6.662250,8.593009,-6.846858,-4.237841,-7.247138,-8.487287,4.194814,-6.343016,-2.462202,-7.665249,-4.065911,-6.446297,-9.818759,8.815905,-4.689738,-1.047697,-4.070934,-6.143629,-8.298446,8.941359,4.778381,-5.278600,5.372016,-7.953833,3.529423,-7.835564,3.912518,5.521580,-5.240873,0.274404,3.381999,-9.095039,-4.713003,-1.976388,-2.211817,5.371279,-7.847658,-2.043361,-8.352399,3.085272,-0.622172,1.427586,6.531577,7.894106,4.806848,-7.868128,-2.553305,7.552916,5.012614,-6.953461,9.699109,7.128548,9.452298,6.000475,6.465837,9.643115,-6.019568,4.132839,-1.964406,-9.169070,-0.151863,-4.671808,4.044422,4.236233,5.043772,-4.336390,5.591764,-7.263368,-4.494315,8.597516,7.517816,3.664965,3.969790,3.099434,9.938750,-1.250679,-1.698312,4.526900,-1.835785,8.893553,-6.328139,-9.281914,0.344642,-8.683709,-2.843217,0.869891,3.349413,-0.340096,-7.791013,-5.802972,5.308865,4.194221,1.191899,7.808659,8.676934,8.577337,0.205665,2.708879,6.060066,-3.213650,9.060155,8.552670,-3.223983,-9.996740,9.110239,-1.699116,5.544666,-4.257189,-0.341976,-0.025618,-5.083938,0.347737,5.993407,9.145048,6.280033,-9.868890,1.353113,3.055318,5.327876,-6.163480,-3.221969,8.909752,-0.974248,-8.292271,-8.410716,-4.176050,-7.151106,-7.095258,2.510854,-8.206464,8.633428,6.506490,-8.462645,-9.172910,-9.769294,-8.863127,7.843918,-1.006679,-1.876426,8.780385,9.343141,9.842292,7.422012,6.623264,4.391865,0.495264,3.562759,-0.104772,4.870250,3.342839,8.066129,-1.124789,-3.929464,2.843251,6.451753,2.613722,-8.263011,9.655156,-8.998920,-3.122735,-9.136071,-5.595457,6.260889,-4.952351,8.369601,-7.941493,5.917340,6.244304,-9.700925,-9.791764,5.727211,-3.919809,7.861360,-0.723934,7.293439,1.234142,-2.059742,6.360818,-6.449905,5.411195,2.700266,3.715934,-1.596074,-8.870952,5.427076,4.335812,-4.592152,-8.325066,6.626858,6.423301,-2.323323,-9.637259,-7.158526,-3.568571,3.346085,-1.185918,9.476129,-4.190723,4.782466,-2.844211,8.900927,6.973739,-0.813882,1.915675,-2.921066,-1.595058,-5.082201,-9.190794,-1.902355,9.339567,-4.423815,-1.089375,0.939041,6.879396,-7.317652,9.979872,0.224447,8.007781,5.273903,7.336517,-9.944372,-6.163458,2.311948,1.379297,2.123171,8.425507,7.298693,9.103627,-6.223943,8.369776,2.630148,0.897862,2.124941,-4.866360,6.264862,6.812980,2.017817,-5.958217,-9.169160,-0.634127,3.059194,5.654277,1.090339,1.218268,9.183382,-4.102002,-5.262536,-2.267165,9.861538,-0.452122,-7.920958,-2.149127,6.628792,-3.598920,-9.488487,0.163871,6.694387,-4.503475,1.101792,-0.865164,-2.074172,0.465045,-1.911441,8.201977,-6.338952,1.019890,8.905504,-2.646801,-5.976000,-6.050225,3.889371,-3.003381,-4.046223,-1.627637,4.140771,-0.829873,0.876657,-8.279049,1.675943,2.423215,7.680828,6.303860,-0.493629,7.664776,-3.014011,-9.540942,1.167157,-4.629325,1.273708,4.625465,-8.947270,7.329113,-0.159067,3.812411,7.664466,6.322381,9.780051,0.386277,8.583387,9.034326,-1.430682,7.756424,-0.345822,3.589570,-6.837693,-1.942875,-8.631751,2.610950,1.691928,3.934779,8.180712,1.842337,3.229882,4.086677,9.749293,-6.024219,-4.394753,9.494246,-1.776157,-0.182339,-6.214681,5.444606,-3.697972,7.851980,3.256312,-5.967730,1.761634,-2.506017,-5.997479,9.027873,-8.183380,1.676743,-0.443220,0.857010,3.365975,1.956310,7.954713,0.288226,2.115388,1.231910,3.089422,-3.267143,-2.171501,0.952070,-1.841310,-0.054204,-2.332142,8.860351,8.303025,7.310694,-7.712686,-9.945956,6.633555,-7.815005,-0.352307,-2.538829,2.198339,-5.719092,2.667558,1.401432,3.864903,-2.791229,6.634056,-4.941526,-6.802011,-3.310942,-6.025093,-8.673363,-8.223813,5.177716,4.904655,-9.232508,-6.164683,-3.071600,-0.847959,5.206522,6.676852,7.253487,9.196996,5.757971,-3.016892,-2.654459,-5.194786,-6.357471,5.290143,2.149748,7.148892,-7.854413,5.055521,3.880023,-7.363127,1.860934,-2.552695,-9.393134,-0.546322,-6.814118,0.127535,6.185491,9.546608,-7.537659,8.505455,3.437060,7.984850,-2.803746,-2.972960,-0.379335,-7.628514,1.158742,8.876130,-8.416513,8.413406,-2.701301,-6.546013,5.624469,4.134497,-9.963081,7.786457,-6.186257,3.627545,0.960897,-0.282053,-9.349367,2.577361,-9.954639,-3.468914,-3.463194,7.591150,-1.739444,9.871127,8.042724,-5.053967,5.021305,-3.722929,-3.756996,9.695352,9.091665,-5.899566,-7.787863,4.175631,-7.126121,-0.688601,-4.943516,6.686035,4.184360,-5.540944,0.984699,-3.459997,-9.635723,-2.917107,1.084551,2.260157,-1.935029,-7.750234,4.365043,5.896941,5.757637,8.361534,7.241430,1.701176,2.075360,9.111134,-8.854289,7.907512,-0.238589,2.737761,6.479862,7.415643,-1.123275,5.025696,3.133545,4.336003,-4.790969,-7.517617,1.932680,-8.879456,3.619958,-9.377551,3.017293,9.420405,9.349494,1.363866,6.578849,-1.240857,4.896341,7.094877,-7.039028,6.518426,5.982940,-8.545419,1.802363,4.097964,7.699288,-0.643102,-0.841169,-5.882705,2.774021,-4.295489,-2.181561,-4.080814,-5.749934,4.084478,5.047736,4.470767,-5.577921,1.489452,-1.320270,8.635978,-1.355504,9.872699,3.179637,4.290995,3.565677,0.177881,-6.221688,7.259702,3.888318,-8.624698,-2.486443,-3.707152,6.201574,-6.528372,-4.610764,4.194258,-5.148004,7.612152,8.562797,-2.561253,0.284486,-0.899217,6.179299,-1.878807,-2.340725,1.034533,2.538586,-0.380857,-9.961081,-7.162485,-9.294125,3.923418,-9.480472,-5.307386,2.474879,8.766322,-7.631954,0.877139,4.091739,-0.911782,-9.662800,-8.557140,8.710374,-6.181288,-0.688486,5.869947,5.219659,2.646521,7.463019,4.845227,-7.318528,1.639507,-1.878728,-6.083818,8.731222,-1.098702,4.977880,9.037241,8.167014,-3.652434,-2.988991,-7.246097,-4.394342,-9.339900,7.145901,1.635162,-9.546386,-7.347261,1.262367,-9.374473,6.079525,-0.594686,-9.581905,-1.020468,9.001614,6.349874,-2.970344,8.631893,9.456825,-8.359450,2.510674,-5.166122,7.467480,4.941394,0.325857,1.446027,-0.337973,3.799661,6.735107,-9.448534,-5.157998,-1.419033,9.398023,-0.251653,3.563956,7.874426,-6.401159,-6.336278,-4.613101,-4.605025,-0.554810,-7.569617,1.955823,3.404547,4.384245,9.409409,7.190007,-9.209393,-1.020306,9.725546,-0.354454,-9.823311,-3.923283,-3.446042,-4.269369,-9.305364,-8.696333,3.421706,1.101318,-6.589447,-2.675922,-1.619875,7.014246,-5.085250,7.346948,-2.322596,-7.468438,-0.980654,1.742115,6.012004,2.242682,-2.410673,3.661492,7.070274,-3.239063,6.975411,-1.957219,-4.493981,6.825850,7.903085,-4.566844,-3.381123,-2.299045,5.452559,7.401654,-2.178072,4.577175,-6.331725,-0.437667,3.500533,0.489179,-0.796019,-8.654584,0.411166,0.827004,1.955157,-0.522914,7.473802,-7.350257,3.110322,2.435509,3.263261,-4.335451,9.199618,4.253438,-4.632149,-9.367619,-1.998817,6.804069,-4.381803,-7.677819,8.959430,4.488807,-9.512082,7.366760,1.274403,1.003893,4.804073,-8.866396,-2.217573,9.098025,-9.199347,7.464664,6.428280,-7.609817,-2.515431,8.626333,-3.774683,-2.817350,-5.442488,-6.471072,-7.550942,-9.964343,9.513517,5.820828,6.362585,-4.100263,-8.639311,-0.860892,8.267513,8.593937,-8.006107,6.935724,6.188055,3.756515,2.524034,0.446679,5.529493,-0.319467,-4.157471,-4.002627,-9.280465,0.952880,6.295321,-2.360357,-5.033686,-4.113146,-6.158805,3.184269,0.310891,-6.336933,-9.269836,-7.531334,9.374222,9.024469,-2.476683,2.356232,-8.940544,4.728493,0.649203,-0.500537,8.264287,-5.054277,-4.928654,2.000505,-5.019849,9.238344,1.038335,-0.872027,-4.324151,-8.088302,6.557205,4.945990,-9.135090,3.681372,8.822763,-1.414192,-0.343082,-0.561037,-1.709553,-3.116336,8.470670,-2.319571,-8.551821,-0.722155,-8.638143,7.029427,-0.919573,7.398458,-0.888838,-8.195486,1.107104,-9.687239,2.839981,-3.185855,2.736117,-1.825542,-2.474496,3.373579,4.414453,3.836587,4.696529,-4.130772,-6.387194,-6.323802,-2.560603,-3.503418,6.209355,-0.848627,6.936088,1.553556,7.843334,-3.863248,-1.313085,-5.297946,4.685781,6.592667,4.060608,-9.505419,0.746680,-2.207545,-5.867827,9.557952,1.826514,-7.141000,3.606247,3.098897,-5.814408,-0.765909,-0.829894,-7.032723,5.105527,-2.399919,0.855205,-1.522986,1.779294,3.163429,2.321438,-1.537230,-9.839316,4.079671,-7.980603,-0.572491,-5.748815,0.156909,-2.726262,-0.177678,2.127766,-3.760851,-7.354190,5.640134,9.349534,5.614397,-8.351035,4.254505,-4.075725,-1.549963,-3.508602,6.484985,7.603274,2.344963,3.310407,9.079397,-8.274639,2.356122,-9.027387,-8.439709,9.615562,-9.711708,2.869293,-0.528916,8.199817,-9.469746,-8.118473,-3.089646,-7.671160,4.891823,-6.502569,-9.637333,-8.447050,0.124063,2.221334,-4.838066,2.900550,-4.764555,-0.895691,-5.543437,0.074477,8.746251,6.099602,5.573731,2.057193,7.742464,-5.630233,-4.194005,2.240927,4.205599,-8.965849,-9.404920,3.422693,-1.706996,2.048000,3.652071,-9.222047,-5.255628,-6.902280,0.193189,-2.022232,9.683985,7.978470,4.297983,8.562688,5.654888,-6.896185,4.350553,-8.022391,-9.912403,2.403254,-2.655860,-9.563830,7.122236,-4.822351,8.828437,2.087152,3.382839,-0.380546,9.511889,-4.530080,7.918266,-5.531060,-6.045520,6.428993,1.937838,-2.210522,-6.972594,-6.698863,9.162518,-1.268130,-9.955479,-5.914736,-3.087891,-3.923057,-6.478465,-3.683615,-6.504830,1.535834,5.260084,6.727244,0.914502,-3.365125,-9.913937,2.957063,-2.958605,-2.349591,9.856207,-4.216385,-7.236263,9.643815,1.879643,-3.210996,0.106795,-4.683830,-6.141448,9.718884,4.531652,0.388878,-6.448199,-4.283924,6.053052,9.898673,0.821535,-6.272240,5.007113,-7.459482,-5.681702,-0.455034,-9.471551,-1.809743,-4.731919,-2.159854,-6.460414,8.428779,-3.161923,8.626884,7.370981,-4.294961,-4.903266,-8.545430,6.644761,1.276477,1.742852,7.993959,-8.437378,8.741060,8.212485,4.276560,3.682839,-8.633612,-6.392605,2.176077,3.722393,-4.443830,5.899790,3.390568,8.922975,-2.072922,-2.985784,9.421038,5.548212,6.564902,-9.027537,-2.842833,5.094810,-5.957651,-9.380528,3.112157,5.373455,-3.278892,-2.232254,0.956082,-3.681404,0.714499,8.730904,8.125309,1.841152,9.581923,6.629676,4.688489,9.180308,-1.031004,-7.861778,7.765291,5.258526,-8.156597,9.601886,-2.608971,3.704980,-4.759825,-7.593569,4.343853,-8.046922,7.201709,2.734046,-9.141218,-5.950775,-4.674589,2.449822,3.592623,8.813258,-4.639816,9.912106,-4.414639,-6.422776,-8.953862,2.956891,-5.669093,-6.568995,5.102115,3.955874,-3.415201,8.441592,-5.087203,-5.215956,9.748625,3.361854,-0.489568,-6.264765,1.536507,5.870786,5.097664,5.049411,-2.042670,-7.514841,4.978225,-8.415184,0.794277,1.114586,-1.541005,5.900854,8.976085,9.627038,-9.450996,7.427419,0.792574,3.525952,6.456801,-8.730102,-2.896203,6.719655,-9.668478,-0.028017,4.732633,9.302605,7.013627,-4.134863,2.829491,1.196494,7.952247,1.187383,0.464449,-6.028729,-8.399908,8.136538,0.772228,-0.964055,-5.026172,2.884693,-0.252288,5.473965,-0.478290,3.082592,1.037645,0.571381,5.192241,3.043728,4.006526,9.881026,0.349718,-5.940864,5.540985,-7.087799,1.517717,-8.713928,8.870211,-1.033246,1.479802,3.741641,-2.710682,6.634239,-6.657659,-6.020048,-4.679822,6.356336,-4.346398,-0.047883,-6.993410,7.759276,1.002056,-4.150009,4.084538,-1.774619,-0.107850,-7.106928,-5.071170,-9.196271,-0.489493,-1.401417,-2.184776,-3.955700,2.475275,-0.259734,-8.916614,-7.636300,0.178054,-1.374587,9.377451,6.111538,-4.012715,-4.504428,-5.048379,1.432092,9.945620,5.648592,3.991262,9.009401,6.086128,9.515783,7.670541,2.117178,-1.788888,-3.113374,-3.879663,0.324334,5.426173,7.853589,-0.446293,-4.924966,-7.366761,4.708097,-6.013594,-7.745759,-0.011085,4.468163,9.203059,5.177177,-0.632451,3.982332,2.922936,9.276254,-7.457159,-8.914957,-3.925553,7.693499,1.555761,-4.229348,6.953338,3.914979,-1.366174,8.495723,4.712674,0.686886,-0.836515,-6.230738,9.171555,-2.452256], dtype = "float64")#candidate|9699|(1456,)|const|float64
call_9698 = relay.TupleGetItem(func_3408_call(relay.reshape(const_9699.astype('float64'), [13, 7, 16]), relay.reshape(const_9699.astype('uint32'), [13, 7, 16]), ), 1)
call_9700 = relay.TupleGetItem(func_3411_call(relay.reshape(const_9699.astype('float64'), [13, 7, 16]), relay.reshape(const_9699.astype('uint32'), [13, 7, 16]), ), 1)
output = relay.Tuple([bop_9692,call_9696,call_9698,const_9699,])
output2 = relay.Tuple([bop_9695,call_9697,call_9700,const_9699,])
func_9702 = relay.Function([var_9691,], output)
mod['func_9702'] = func_9702
mod = relay.transform.InferType()(mod)
var_9703 = relay.var("var_9703", dtype = "bool", shape = (1600,))#candidate|9703|(1600,)|var|bool
output = func_9702(var_9703)
func_9704 = relay.Function([var_9703], output)
mutated_mod['func_9704'] = func_9704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5488_call = mod.get_global_var('func_5488')
func_5490_call = mutated_mod.get_global_var('func_5490')
call_9718 = relay.TupleGetItem(func_5488_call(), 1)
call_9719 = relay.TupleGetItem(func_5490_call(), 1)
func_3722_call = mod.get_global_var('func_3722')
func_3723_call = mutated_mod.get_global_var('func_3723')
call_9750 = func_3722_call()
call_9751 = func_3722_call()
func_9661_call = mod.get_global_var('func_9661')
func_9662_call = mutated_mod.get_global_var('func_9662')
call_9765 = relay.TupleGetItem(func_9661_call(), 1)
call_9766 = relay.TupleGetItem(func_9662_call(), 1)
var_9770 = relay.var("var_9770", dtype = "float64", shape = (2, 800))#candidate|9770|(2, 800)|var|float64
bop_9771 = relay.greater(call_9765.astype('bool'), relay.reshape(var_9770.astype('bool'), relay.shape_of(call_9765))) # shape=(2, 800)
bop_9774 = relay.greater(call_9766.astype('bool'), relay.reshape(var_9770.astype('bool'), relay.shape_of(call_9766))) # shape=(2, 800)
func_4757_call = mod.get_global_var('func_4757')
func_4758_call = mutated_mod.get_global_var('func_4758')
call_9797 = relay.TupleGetItem(func_4757_call(), 0)
call_9798 = relay.TupleGetItem(func_4758_call(), 0)
func_7766_call = mod.get_global_var('func_7766')
func_7768_call = mutated_mod.get_global_var('func_7768')
call_9809 = relay.TupleGetItem(func_7766_call(), 1)
call_9810 = relay.TupleGetItem(func_7768_call(), 1)
var_9813 = relay.var("var_9813", dtype = "float32", shape = (5, 14, 5))#candidate|9813|(5, 14, 5)|var|float32
bop_9814 = relay.not_equal(call_9718.astype('bool'), var_9813.astype('bool')) # shape=(5, 14, 5)
bop_9817 = relay.not_equal(call_9719.astype('bool'), var_9813.astype('bool')) # shape=(5, 14, 5)
output = relay.Tuple([call_9750,bop_9771,call_9797,call_9809,bop_9814,])
output2 = relay.Tuple([call_9751,bop_9774,call_9798,call_9810,bop_9817,])
func_9833 = relay.Function([var_9770,var_9813,], output)
mod['func_9833'] = func_9833
mod = relay.transform.InferType()(mod)
var_9834 = relay.var("var_9834", dtype = "float64", shape = (2, 800))#candidate|9834|(2, 800)|var|float64
var_9835 = relay.var("var_9835", dtype = "float32", shape = (5, 14, 5))#candidate|9835|(5, 14, 5)|var|float32
output = func_9833(var_9834,var_9835,)
func_9836 = relay.Function([var_9834,var_9835,], output)
mutated_mod['func_9836'] = func_9836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1210_call = mod.get_global_var('func_1210')
func_1211_call = mutated_mod.get_global_var('func_1211')
call_9982 = relay.TupleGetItem(func_1210_call(), 2)
call_9983 = relay.TupleGetItem(func_1211_call(), 2)
output = relay.Tuple([call_9982,])
output2 = relay.Tuple([call_9983,])
func_9985 = relay.Function([], output)
mod['func_9985'] = func_9985
mod = relay.transform.InferType()(mod)
output = func_9985()
func_9986 = relay.Function([], output)
mutated_mod['func_9986'] = func_9986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1478_call = mod.get_global_var('func_1478')
func_1480_call = mutated_mod.get_global_var('func_1480')
call_10089 = func_1478_call()
call_10090 = func_1478_call()
output = call_10089
output2 = call_10090
func_10102 = relay.Function([], output)
mod['func_10102'] = func_10102
mod = relay.transform.InferType()(mod)
output = func_10102()
func_10103 = relay.Function([], output)
mutated_mod['func_10103'] = func_10103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3928_call = mod.get_global_var('func_3928')
func_3930_call = mutated_mod.get_global_var('func_3930')
call_10115 = func_3928_call()
call_10116 = func_3928_call()
output = call_10115
output2 = call_10116
func_10123 = relay.Function([], output)
mod['func_10123'] = func_10123
mod = relay.transform.InferType()(mod)
mutated_mod['func_10123'] = func_10123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10123_call = mutated_mod.get_global_var('func_10123')
call_10124 = func_10123_call()
output = call_10124
func_10125 = relay.Function([], output)
mutated_mod['func_10125'] = func_10125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1106_call = mod.get_global_var('func_1106')
func_1107_call = mutated_mod.get_global_var('func_1107')
call_10166 = relay.TupleGetItem(func_1106_call(), 0)
call_10167 = relay.TupleGetItem(func_1107_call(), 0)
func_9833_call = mod.get_global_var('func_9833')
func_9836_call = mutated_mod.get_global_var('func_9836')
const_10188 = relay.const([[9.109429,9.221469,2.917420,3.674996,-9.190184,-0.221832,3.419047,-9.309040,7.650724,-6.421457],[-2.938014,-4.352553,0.270317,2.986882,0.184037,-6.213878,-7.971389,-2.705627,-3.571955,5.815349],[1.342573,-2.402657,2.792055,-1.195702,-1.446019,-4.401307,-7.810513,7.440807,-6.526775,-6.299039],[-0.345481,-7.786243,-7.781380,-8.086017,7.405435,4.237119,-6.480097,5.508332,-5.776457,-0.515827],[-3.728945,5.125764,-8.294579,-6.644327,-6.069766,-7.876444,7.753246,7.457135,2.598394,-3.378013],[9.486799,1.408227,3.357597,4.128348,-9.853042,0.479552,-4.379308,6.981362,3.893229,-0.293164],[-1.410818,-3.823810,3.419733,3.759199,-0.394607,6.485575,-4.536082,3.443826,4.132281,2.251762],[-9.672471,-0.001958,-3.452372,3.194010,2.016241,2.616774,-6.555929,2.185831,4.379194,-2.352236],[6.855870,2.615724,-0.910932,7.673231,0.383894,8.149105,7.621571,7.893209,-6.763442,3.325855],[-4.417989,2.726279,1.681937,-3.770080,-2.159639,-2.318784,9.463623,2.552708,-5.497956,8.728887],[2.434843,6.492474,7.999399,-1.135280,-7.444024,4.777137,-9.071510,3.324990,-7.132878,-9.376063],[7.536976,-4.902756,-6.451742,-9.794200,-4.784007,0.564383,2.623566,7.824257,5.246571,-9.640452],[9.353333,-6.674480,-4.994617,6.523561,4.368789,9.609202,-3.183913,1.512738,3.462277,9.444181],[-6.491556,-3.877364,-1.949602,-5.897679,9.821123,3.446974,-6.038744,6.759645,8.884680,1.209040],[-9.455319,0.414986,-7.791956,-0.278122,0.107061,-0.289619,-7.402058,8.812331,-3.568401,-7.679631],[-1.290085,-6.405941,4.675861,7.755502,3.515922,0.972254,-1.686836,-4.268934,-3.043151,-7.426094],[7.553508,5.267969,7.336957,-0.897242,-5.427618,-7.737206,-3.638706,0.038665,-5.273938,-4.665277],[-5.598215,8.948857,6.540247,8.686982,-1.162214,2.857467,-7.844438,4.594504,7.121479,5.729460],[-0.859392,-6.979485,2.015281,-8.088664,-1.299365,0.998374,8.993287,9.777086,-6.202085,-9.161796],[9.916087,-4.292166,-1.154534,2.858565,7.773001,8.826422,-1.966618,-0.526695,5.014376,5.461191],[-6.513902,-4.312950,-9.093739,-7.989340,3.565098,9.381882,-0.454084,-3.922006,-3.660535,-3.681087],[3.662978,1.163894,5.735825,7.106889,6.057304,-5.814853,0.914736,0.643228,8.725546,-3.796835],[-8.514832,2.250765,-7.616158,1.518932,8.773105,-7.139056,9.380869,4.487984,-1.288353,8.033509],[3.001668,4.803279,8.723132,-1.896595,-4.421175,2.152697,5.393348,3.966748,-2.695455,-1.476572],[-2.726768,-1.349178,-7.692940,-1.790034,-3.579510,-5.380398,2.622128,-0.878874,-5.590659,8.513486],[-5.608019,8.141109,5.002404,7.572646,3.660037,-8.898206,-4.474881,7.803033,-2.741052,8.785190],[-2.291829,-3.725090,0.220250,-8.359443,-7.194424,-3.461660,-3.216840,-5.059799,-9.635141,0.882347],[9.453830,8.460541,5.600738,-8.923333,-0.849094,-3.755561,-2.877256,4.304563,-0.109086,4.476218],[8.875696,7.332250,-7.335001,-1.726246,4.131429,-5.772410,9.900292,-5.420082,0.323659,-0.660362],[5.029335,-2.255674,6.352991,4.664609,6.124646,-9.250558,4.501223,-0.266004,6.672577,-9.353220],[-7.085246,0.539256,3.772034,-6.172688,7.639628,-7.850355,-7.772424,-3.960720,-6.518534,0.609100],[-3.815881,6.854042,4.556879,1.897622,-6.657431,3.433155,4.104304,-1.814417,-2.648863,2.060221],[9.594869,-8.114888,-3.180369,0.419669,0.861789,-5.301911,2.089535,1.292834,1.121768,1.594058],[-5.402211,-1.929214,-6.236019,-0.293167,-3.038154,-7.429189,-9.338113,6.855047,1.490674,4.478865],[3.698209,-0.388051,3.742155,8.803193,2.843003,-5.699787,9.760367,7.554466,3.964256,-4.342205]], dtype = "float32")#candidate|10188|(35, 10)|const|float32
call_10187 = relay.TupleGetItem(func_9833_call(relay.reshape(call_10166.astype('float64'), [2, 800]), relay.reshape(const_10188.astype('float32'), [5, 14, 5]), ), 0)
call_10189 = relay.TupleGetItem(func_9836_call(relay.reshape(call_10166.astype('float64'), [2, 800]), relay.reshape(const_10188.astype('float32'), [5, 14, 5]), ), 0)
output = relay.Tuple([call_10166,call_10187,const_10188,])
output2 = relay.Tuple([call_10167,call_10189,const_10188,])
func_10200 = relay.Function([], output)
mod['func_10200'] = func_10200
mod = relay.transform.InferType()(mod)
output = func_10200()
func_10201 = relay.Function([], output)
mutated_mod['func_10201'] = func_10201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_10207 = relay.TupleGetItem(func_775_call(), 3)
call_10208 = relay.TupleGetItem(func_776_call(), 3)
output = call_10207
output2 = call_10208
func_10213 = relay.Function([], output)
mod['func_10213'] = func_10213
mod = relay.transform.InferType()(mod)
output = func_10213()
func_10214 = relay.Function([], output)
mutated_mod['func_10214'] = func_10214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8510_call = mod.get_global_var('func_8510')
func_8511_call = mutated_mod.get_global_var('func_8511')
call_10243 = relay.TupleGetItem(func_8510_call(), 2)
call_10244 = relay.TupleGetItem(func_8511_call(), 2)
func_7855_call = mod.get_global_var('func_7855')
func_7858_call = mutated_mod.get_global_var('func_7858')
var_10248 = relay.var("var_10248", dtype = "float32", shape = (3360,))#candidate|10248|(3360,)|var|float32
call_10247 = relay.TupleGetItem(func_7855_call(relay.reshape(var_10248.astype('float32'), [840, 4])), 2)
call_10249 = relay.TupleGetItem(func_7858_call(relay.reshape(var_10248.astype('float32'), [840, 4])), 2)
output = relay.Tuple([call_10243,call_10247,var_10248,])
output2 = relay.Tuple([call_10244,call_10249,var_10248,])
func_10256 = relay.Function([var_10248,], output)
mod['func_10256'] = func_10256
mod = relay.transform.InferType()(mod)
mutated_mod['func_10256'] = func_10256
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10257 = relay.var("var_10257", dtype = "float32", shape = (3360,))#candidate|10257|(3360,)|var|float32
func_10256_call = mutated_mod.get_global_var('func_10256')
call_10258 = func_10256_call(var_10257)
output = call_10258
func_10259 = relay.Function([var_10257], output)
mutated_mod['func_10259'] = func_10259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8061_call = mod.get_global_var('func_8061')
func_8062_call = mutated_mod.get_global_var('func_8062')
call_10363 = relay.TupleGetItem(func_8061_call(), 0)
call_10364 = relay.TupleGetItem(func_8062_call(), 0)
output = call_10363
output2 = call_10364
func_10388 = relay.Function([], output)
mod['func_10388'] = func_10388
mod = relay.transform.InferType()(mod)
mutated_mod['func_10388'] = func_10388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10388_call = mutated_mod.get_global_var('func_10388')
call_10389 = func_10388_call()
output = call_10389
func_10390 = relay.Function([], output)
mutated_mod['func_10390'] = func_10390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1930_call = mod.get_global_var('func_1930')
func_1932_call = mutated_mod.get_global_var('func_1932')
call_10409 = relay.TupleGetItem(func_1930_call(), 0)
call_10410 = relay.TupleGetItem(func_1932_call(), 0)
output = call_10409
output2 = call_10410
func_10418 = relay.Function([], output)
mod['func_10418'] = func_10418
mod = relay.transform.InferType()(mod)
mutated_mod['func_10418'] = func_10418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10418_call = mutated_mod.get_global_var('func_10418')
call_10419 = func_10418_call()
output = call_10419
func_10420 = relay.Function([], output)
mutated_mod['func_10420'] = func_10420
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10540 = relay.var("var_10540", dtype = "float32", shape = (1, 5, 6))#candidate|10540|(1, 5, 6)|var|float32
uop_10541 = relay.erf(var_10540.astype('float32')) # shape=(1, 5, 6)
var_10549 = relay.var("var_10549", dtype = "float32", shape = (5, 5, 6))#candidate|10549|(5, 5, 6)|var|float32
bop_10550 = relay.mod(uop_10541.astype('float32'), var_10549.astype('float32')) # shape=(5, 5, 6)
bop_10555 = relay.greater_equal(uop_10541.astype('bool'), relay.reshape(var_10540.astype('bool'), relay.shape_of(uop_10541))) # shape=(1, 5, 6)
output = relay.Tuple([bop_10550,bop_10555,])
output2 = relay.Tuple([bop_10550,bop_10555,])
F = relay.Function([var_10540,var_10549,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10540,var_10549,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

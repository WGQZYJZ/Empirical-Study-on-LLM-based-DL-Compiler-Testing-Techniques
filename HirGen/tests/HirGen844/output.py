import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_27 = relay.var("var_27", dtype = "float32", shape = (3, 14, 8))#candidate|27|(3, 14, 8)|var|float32
uop_28 = relay.asinh(var_27.astype('float32')) # shape=(3, 14, 8)
uop_35 = relay.log10(uop_28.astype('float64')) # shape=(3, 14, 8)
output = uop_35
output2 = uop_35
func_48 = relay.Function([var_27,], output)
mod['func_48'] = func_48
mod = relay.transform.InferType()(mod)
var_49 = relay.var("var_49", dtype = "float32", shape = (3, 14, 8))#candidate|49|(3, 14, 8)|var|float32
output = func_48(var_49)
func_50 = relay.Function([var_49], output)
mutated_mod['func_50'] = func_50
mutated_mod = relay.transform.InferType()(mutated_mod)
var_244 = relay.var("var_244", dtype = "float32", shape = (7, 11, 1))#candidate|244|(7, 11, 1)|var|float32
uop_245 = relay.sin(var_244.astype('float32')) # shape=(7, 11, 1)
output = uop_245
output2 = uop_245
func_254 = relay.Function([var_244,], output)
mod['func_254'] = func_254
mod = relay.transform.InferType()(mod)
mutated_mod['func_254'] = func_254
mutated_mod = relay.transform.InferType()(mutated_mod)
var_255 = relay.var("var_255", dtype = "float32", shape = (7, 11, 1))#candidate|255|(7, 11, 1)|var|float32
func_254_call = mutated_mod.get_global_var('func_254')
call_256 = func_254_call(var_255)
output = call_256
func_257 = relay.Function([var_255], output)
mutated_mod['func_257'] = func_257
mutated_mod = relay.transform.InferType()(mutated_mod)
var_276 = relay.var("var_276", dtype = "float32", shape = ())#candidate|276|()|var|float32
const_277 = relay.const([[[3.134984,6.719889],[-8.521061,4.594870],[-2.937233,-5.206384],[-6.747495,2.020680],[2.781934,-9.398063],[2.933133,1.031408],[-0.793524,8.199154],[-6.753918,7.836382],[0.628837,3.051227],[-6.958242,2.704402],[0.016392,-6.456850],[8.229674,-2.020701],[-4.863489,-1.951267],[0.641502,9.273539],[2.754774,-5.120229],[1.360403,2.051974]],[[8.609923,7.156683],[8.447722,-3.761701],[-4.455585,9.651926],[-5.345648,-2.179332],[-8.119559,3.119625],[2.153092,-5.630157],[7.297477,-5.091506],[-5.988988,8.245183],[8.754484,0.554941],[1.794634,4.231540],[-8.508461,-6.069020],[-1.965119,0.168527],[4.598044,-3.473067],[-0.004361,2.316214],[-6.604579,-0.829422],[-8.890975,-5.470127]],[[-9.351082,-1.419974],[0.530926,2.878143],[-7.951026,8.998260],[6.351815,-6.532556],[7.544935,0.518135],[8.179076,9.148929],[-5.540641,-8.538221],[-8.257651,-6.813010],[-2.771317,-1.691932],[-7.578612,-5.171760],[9.076022,7.359567],[-7.444283,5.613813],[5.071358,4.309305],[-5.913205,-2.347097],[2.688615,8.738403],[9.188915,-7.370134]],[[-9.902856,0.518030],[8.036997,-5.179846],[7.555877,6.796919],[8.740240,1.981768],[6.239856,3.355921],[-6.506838,-3.078110],[-8.126836,9.070349],[-7.963978,8.314578],[-8.547299,8.959785],[-2.516937,7.499144],[-6.019741,-4.244915],[1.661946,-0.169581],[-7.514959,-9.137443],[3.295902,-6.780384],[-8.775129,5.752730],[-7.981983,-4.119831]],[[3.930372,-7.211548],[6.210268,-0.095505],[-8.424702,4.874506],[-9.181552,-3.946902],[9.675940,2.492373],[0.705947,-7.041302],[0.026247,-4.041808],[-4.197126,5.785851],[5.304420,-3.247567],[9.117647,-8.497178],[3.292368,2.159556],[8.817038,-2.787713],[2.224093,5.845242],[-5.606667,-9.166586],[5.935163,8.541807],[2.959071,4.593369]],[[-4.054698,1.840579],[-7.487246,6.010656],[6.102623,-5.955977],[-1.922189,3.433621],[-0.570993,-6.999114],[-0.820427,5.421857],[-6.503632,-7.303577],[5.677278,-3.626106],[3.826638,3.120818],[7.981564,1.173037],[8.022306,5.226823],[-7.927928,3.909789],[0.895502,3.692017],[0.187744,0.173139],[8.486189,5.315508],[0.959029,-2.260129]],[[-4.945928,8.795127],[-8.243049,-3.399797],[-1.106005,3.256752],[8.983041,6.201055],[6.702018,-1.814607],[1.549940,-3.812431],[7.174657,3.492946],[2.965749,5.384150],[8.096080,3.090340],[0.559721,-8.881404],[9.603446,1.338595],[-7.591490,3.320029],[3.227156,-7.253954],[8.585872,-8.875375],[2.763526,1.384428],[9.072786,-7.034544]],[[6.450536,9.685782],[7.338899,-2.695068],[4.154894,6.647137],[8.129398,2.713881],[6.465179,4.385434],[-2.958750,7.328641],[-0.941468,-4.947155],[-5.274007,-5.470168],[-5.320693,-3.376748],[6.020118,-0.398152],[-2.395633,5.128175],[-5.432450,9.204224],[-7.198167,-7.843091],[-9.675177,-4.561235],[2.883419,-4.838163],[6.574011,8.460607]],[[-2.998800,-1.517287],[8.891483,7.195377],[-0.093399,9.206297],[9.873492,-9.499787],[2.683269,0.550239],[3.518300,-8.121797],[-5.298885,-4.778367],[-7.311437,-1.097712],[7.018706,-0.699732],[1.567599,6.141334],[-0.984948,2.763203],[0.288405,-8.980609],[-0.433071,-2.741267],[1.958630,-6.441884],[9.976913,-2.081603],[3.750780,0.703886]],[[9.800212,9.130399],[9.480638,-7.413854],[1.521905,2.376572],[-3.496038,2.900096],[0.315245,-4.974348],[3.349844,6.056387],[4.948709,-5.610746],[-6.061733,8.153938],[5.201855,-9.422406],[1.052735,8.598952],[-7.246253,1.765064],[-6.918395,-4.828340],[-2.878577,-3.824757],[2.434518,5.654939],[1.343001,1.020832],[0.402402,3.411293]],[[5.702244,7.644705],[7.069557,9.416662],[6.027158,-8.183657],[-4.643701,-5.196162],[1.566336,-2.159566],[-1.169598,9.766110],[2.420119,9.401928],[2.869142,6.266003],[-4.112122,-6.124967],[2.992048,-4.651718],[-3.170084,-3.205943],[6.436047,-1.021294],[-1.578363,0.291639],[-9.317220,-1.748566],[-9.094369,-2.663424],[4.479204,-9.212929]],[[-2.074142,0.533679],[9.803202,-0.435320],[-4.292349,-2.404696],[7.693555,-0.331643],[6.707292,-4.706713],[-8.100873,0.359319],[-6.703435,-3.893465],[1.969759,-9.536734],[3.363942,-7.607525],[5.154961,9.673654],[2.335260,1.870109],[-3.152930,-6.732500],[9.063902,8.065339],[-0.829256,-8.654880],[-0.058535,-6.513909],[-8.949469,8.905821]],[[-1.285574,-8.874559],[-7.136695,0.837335],[4.750999,9.094449],[-7.923633,6.716096],[-5.808465,6.346772],[2.557501,-5.460911],[-9.388703,1.001893],[1.355441,0.672574],[-0.569345,7.088019],[7.991156,2.835555],[6.317616,-5.580138],[-7.137820,2.477936],[-6.597539,2.745138],[1.143996,4.160203],[-5.708289,-0.319622],[1.098381,4.019301]],[[6.610422,-3.021392],[9.700452,6.966258],[-4.962264,-1.815554],[2.103748,-8.364159],[-1.821277,8.452255],[3.681836,-1.081082],[5.134021,7.302809],[-8.687258,1.609609],[2.968289,-6.605602],[9.531145,8.664862],[1.171824,-2.744990],[3.372822,-7.572206],[5.183235,7.390022],[-1.141531,-0.169362],[-3.302545,-1.982042],[9.818504,-9.711294]]], dtype = "float32")#candidate|277|(14, 16, 2)|const|float32
bop_278 = relay.divide(var_276.astype('float32'), const_277.astype('float32')) # shape=(14, 16, 2)
uop_296 = relay.sqrt(const_277.astype('float64')) # shape=(14, 16, 2)
func_254_call = mod.get_global_var('func_254')
func_257_call = mutated_mod.get_global_var('func_257')
var_307 = relay.var("var_307", dtype = "float32", shape = (77,))#candidate|307|(77,)|var|float32
call_306 = func_254_call(relay.reshape(var_307.astype('float32'), [7, 11, 1]))
call_308 = func_254_call(relay.reshape(var_307.astype('float32'), [7, 11, 1]))
output = relay.Tuple([bop_278,uop_296,call_306,var_307,])
output2 = relay.Tuple([bop_278,uop_296,call_308,var_307,])
func_318 = relay.Function([var_276,var_307,], output)
mod['func_318'] = func_318
mod = relay.transform.InferType()(mod)
var_319 = relay.var("var_319", dtype = "float32", shape = ())#candidate|319|()|var|float32
var_320 = relay.var("var_320", dtype = "float32", shape = (77,))#candidate|320|(77,)|var|float32
output = func_318(var_319,var_320,)
func_321 = relay.Function([var_319,var_320,], output)
mutated_mod['func_321'] = func_321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_346 = relay.var("var_346", dtype = "float64", shape = (2, 6, 13))#candidate|346|(2, 6, 13)|var|float64
uop_347 = relay.sinh(var_346.astype('float64')) # shape=(2, 6, 13)
var_352 = relay.var("var_352", dtype = "float64", shape = (2, 6, 13))#candidate|352|(2, 6, 13)|var|float64
bop_353 = relay.not_equal(uop_347.astype('bool'), relay.reshape(var_352.astype('bool'), relay.shape_of(uop_347))) # shape=(2, 6, 13)
output = relay.Tuple([bop_353,])
output2 = relay.Tuple([bop_353,])
func_365 = relay.Function([var_346,var_352,], output)
mod['func_365'] = func_365
mod = relay.transform.InferType()(mod)
var_366 = relay.var("var_366", dtype = "float64", shape = (2, 6, 13))#candidate|366|(2, 6, 13)|var|float64
var_367 = relay.var("var_367", dtype = "float64", shape = (2, 6, 13))#candidate|367|(2, 6, 13)|var|float64
output = func_365(var_366,var_367,)
func_368 = relay.Function([var_366,var_367,], output)
mutated_mod['func_368'] = func_368
mutated_mod = relay.transform.InferType()(mutated_mod)
var_494 = relay.var("var_494", dtype = "int32", shape = ())#candidate|494|()|var|int32
var_495 = relay.var("var_495", dtype = "int32", shape = (11, 14, 4))#candidate|495|(11, 14, 4)|var|int32
bop_496 = relay.add(var_494.astype('int32'), var_495.astype('int32')) # shape=(11, 14, 4)
output = bop_496
output2 = bop_496
func_499 = relay.Function([var_494,var_495,], output)
mod['func_499'] = func_499
mod = relay.transform.InferType()(mod)
var_500 = relay.var("var_500", dtype = "int32", shape = ())#candidate|500|()|var|int32
var_501 = relay.var("var_501", dtype = "int32", shape = (11, 14, 4))#candidate|501|(11, 14, 4)|var|int32
output = func_499(var_500,var_501,)
func_502 = relay.Function([var_500,var_501,], output)
mutated_mod['func_502'] = func_502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_838 = relay.var("var_838", dtype = "float64", shape = (8, 11, 11))#candidate|838|(8, 11, 11)|var|float64
uop_839 = relay.atanh(var_838.astype('float64')) # shape=(8, 11, 11)
output = uop_839
output2 = uop_839
func_843 = relay.Function([var_838,], output)
mod['func_843'] = func_843
mod = relay.transform.InferType()(mod)
mutated_mod['func_843'] = func_843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_844 = relay.var("var_844", dtype = "float64", shape = (8, 11, 11))#candidate|844|(8, 11, 11)|var|float64
func_843_call = mutated_mod.get_global_var('func_843')
call_845 = func_843_call(var_844)
output = call_845
func_846 = relay.Function([var_844], output)
mutated_mod['func_846'] = func_846
mutated_mod = relay.transform.InferType()(mutated_mod)
const_872 = relay.const([[[8.066755,-9.186817,5.732454,0.589232,-1.830499,-5.846649,-6.474378],[1.758068,-7.123149,-8.817598,3.184414,2.077991,-1.434699,-3.698959],[-6.511946,-1.922978,8.158242,-9.143428,-2.499886,-0.244324,3.123499],[8.808138,-1.957715,-4.089322,-1.899562,9.339721,5.065038,2.142693],[4.256158,1.751648,5.857050,8.088708,0.233200,-3.131318,9.772073],[-9.908578,0.997250,7.140754,-5.817688,-6.303631,-5.022331,-1.353660],[3.661315,6.502773,6.639080,-5.083589,-7.030827,-2.314662,-0.128136],[7.560586,9.745101,-4.435999,-8.964275,7.668683,0.469910,0.281619]],[[9.493076,7.998736,9.574406,2.148448,-4.491130,-1.702354,-0.459997],[-7.615920,9.949586,-7.923168,3.543150,0.773817,-2.590886,-3.977478],[5.854437,2.755718,1.609428,6.276733,4.790581,-5.612219,-2.834599],[9.407118,3.377285,1.374764,1.191184,7.220602,-2.620819,-7.772823],[1.892181,-3.937674,-3.240180,-7.186376,1.821474,5.359914,-2.029936],[-8.974594,-6.694106,9.075930,7.872823,-2.074496,4.896936,7.197873],[-4.900214,-6.686094,-3.035459,-1.624314,6.452382,-8.833327,-8.762390],[0.971104,0.735013,-3.193090,8.133494,5.642993,-7.934971,-8.150747]],[[-1.175249,-2.072449,2.683431,-6.774824,1.796814,7.286808,8.202434],[2.939594,2.719689,1.538999,-9.396027,-9.394876,6.768894,-4.800360],[4.916963,4.674270,-3.117584,-6.527643,7.557851,5.483874,-3.435130],[0.315009,9.966086,8.856728,6.644740,7.901007,-5.759131,-7.755728],[-9.069810,-0.685376,9.838713,4.117695,2.283302,0.733403,-0.770314],[6.870055,2.297125,9.147176,-9.156395,1.978666,5.335216,8.114474],[-7.384894,1.753324,4.589179,-9.468937,-3.595389,-3.010993,-5.412435],[-4.836134,6.745505,0.790159,-1.871402,4.916413,4.226475,-1.595531]],[[7.802749,0.527686,1.920834,-5.656051,-1.279374,7.407714,-7.997070],[-5.762447,-9.424031,-4.824531,-1.089903,-2.371057,-0.133466,9.282481],[2.046750,-6.171327,-1.824347,-9.304539,-3.343937,-9.630176,-8.548515],[2.415597,9.739785,0.500645,-1.462543,4.058231,7.609517,4.256482],[1.783246,6.530366,5.809838,-8.087802,1.194799,4.766039,5.509213],[-7.237612,-7.140434,9.299854,0.384790,1.206094,-0.934774,7.567433],[-9.748368,6.770052,9.075524,-1.100387,-3.297304,-0.037951,-8.194214],[6.961711,8.815229,0.721312,-3.127711,-4.684430,0.114470,5.093015]]], dtype = "float32")#candidate|872|(4, 8, 7)|const|float32
var_873 = relay.var("var_873", dtype = "float32", shape = (4, 8, 7))#candidate|873|(4, 8, 7)|var|float32
bop_874 = relay.power(const_872.astype('float32'), relay.reshape(var_873.astype('float32'), relay.shape_of(const_872))) # shape=(4, 8, 7)
output = relay.Tuple([bop_874,])
output2 = relay.Tuple([bop_874,])
func_888 = relay.Function([var_873,], output)
mod['func_888'] = func_888
mod = relay.transform.InferType()(mod)
mutated_mod['func_888'] = func_888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_889 = relay.var("var_889", dtype = "float32", shape = (4, 8, 7))#candidate|889|(4, 8, 7)|var|float32
func_888_call = mutated_mod.get_global_var('func_888')
call_890 = func_888_call(var_889)
output = call_890
func_891 = relay.Function([var_889], output)
mutated_mod['func_891'] = func_891
mutated_mod = relay.transform.InferType()(mutated_mod)
var_918 = relay.var("var_918", dtype = "float64", shape = (9, 2, 3))#candidate|918|(9, 2, 3)|var|float64
uop_919 = relay.log2(var_918.astype('float64')) # shape=(9, 2, 3)
output = relay.Tuple([uop_919,])
output2 = relay.Tuple([uop_919,])
func_925 = relay.Function([var_918,], output)
mod['func_925'] = func_925
mod = relay.transform.InferType()(mod)
mutated_mod['func_925'] = func_925
mutated_mod = relay.transform.InferType()(mutated_mod)
var_926 = relay.var("var_926", dtype = "float64", shape = (9, 2, 3))#candidate|926|(9, 2, 3)|var|float64
func_925_call = mutated_mod.get_global_var('func_925')
call_927 = func_925_call(var_926)
output = call_927
func_928 = relay.Function([var_926], output)
mutated_mod['func_928'] = func_928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1266 = relay.var("var_1266", dtype = "uint64", shape = (3, 5, 14))#candidate|1266|(3, 5, 14)|var|uint64
const_1267 = relay.const([[[3,-6,2,-4,-7,4,-1,1,3,-7,-3,2,1,-5],[2,2,1,-6,4,-5,9,4,4,-9,5,9,5,9],[7,2,9,5,-2,2,3,8,7,-1,9,2,-5,3],[2,4,6,-9,2,5,-4,-1,-4,-8,-4,4,8,9],[-6,-3,-6,8,-5,-9,10,10,-10,-1,-3,-7,-2,2]],[[8,-5,-6,1,-5,6,-5,-8,8,8,-10,-4,10,2],[4,-3,-3,-5,7,3,-4,-4,3,-3,-10,8,-10,3],[-4,3,6,10,-4,-2,-10,3,-1,4,-6,2,-8,6],[-5,-1,3,-8,-9,2,-3,4,-7,-9,1,2,-10,3],[-9,7,9,4,1,-3,-10,8,1,-1,9,9,-5,9]],[[-9,5,-3,-1,-2,4,-7,-8,6,-2,-7,5,5,6],[-7,5,-9,-4,-5,-7,-10,-2,8,3,5,-10,10,-8],[1,5,1,6,4,-4,-4,8,2,10,2,-5,-1,-1],[10,8,-1,1,-6,-4,6,-1,-9,-6,-1,-2,-2,-1],[-1,5,-10,-5,7,5,-5,-6,-6,-3,6,-5,-8,9]]], dtype = "uint64")#candidate|1267|(3, 5, 14)|const|uint64
bop_1268 = relay.not_equal(var_1266.astype('bool'), relay.reshape(const_1267.astype('bool'), relay.shape_of(var_1266))) # shape=(3, 5, 14)
func_365_call = mod.get_global_var('func_365')
func_368_call = mutated_mod.get_global_var('func_368')
var_1272 = relay.var("var_1272", dtype = "float64", shape = (156,))#candidate|1272|(156,)|var|float64
call_1271 = relay.TupleGetItem(func_365_call(relay.reshape(var_1272.astype('float64'), [2, 6, 13]), relay.reshape(var_1272.astype('float64'), [2, 6, 13]), ), 0)
call_1273 = relay.TupleGetItem(func_368_call(relay.reshape(var_1272.astype('float64'), [2, 6, 13]), relay.reshape(var_1272.astype('float64'), [2, 6, 13]), ), 0)
func_365_call = mod.get_global_var('func_365')
func_368_call = mutated_mod.get_global_var('func_368')
call_1274 = relay.TupleGetItem(func_365_call(relay.reshape(var_1272.astype('float64'), [2, 6, 13]), relay.reshape(call_1271.astype('float64'), [2, 6, 13]), ), 0)
call_1275 = relay.TupleGetItem(func_368_call(relay.reshape(var_1272.astype('float64'), [2, 6, 13]), relay.reshape(call_1271.astype('float64'), [2, 6, 13]), ), 0)
output = relay.Tuple([bop_1268,call_1271,var_1272,call_1274,])
output2 = relay.Tuple([bop_1268,call_1273,var_1272,call_1275,])
func_1301 = relay.Function([var_1266,var_1272,], output)
mod['func_1301'] = func_1301
mod = relay.transform.InferType()(mod)
var_1302 = relay.var("var_1302", dtype = "uint64", shape = (3, 5, 14))#candidate|1302|(3, 5, 14)|var|uint64
var_1303 = relay.var("var_1303", dtype = "float64", shape = (156,))#candidate|1303|(156,)|var|float64
output = func_1301(var_1302,var_1303,)
func_1304 = relay.Function([var_1302,var_1303,], output)
mutated_mod['func_1304'] = func_1304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1419 = relay.var("var_1419", dtype = "bool", shape = (9, 1, 14))#candidate|1419|(9, 1, 14)|var|bool
var_1420 = relay.var("var_1420", dtype = "bool", shape = (9, 15, 14))#candidate|1420|(9, 15, 14)|var|bool
bop_1421 = relay.logical_or(var_1419.astype('bool'), var_1420.astype('bool')) # shape=(9, 15, 14)
output = bop_1421
output2 = bop_1421
func_1446 = relay.Function([var_1419,var_1420,], output)
mod['func_1446'] = func_1446
mod = relay.transform.InferType()(mod)
var_1447 = relay.var("var_1447", dtype = "bool", shape = (9, 1, 14))#candidate|1447|(9, 1, 14)|var|bool
var_1448 = relay.var("var_1448", dtype = "bool", shape = (9, 15, 14))#candidate|1448|(9, 15, 14)|var|bool
output = func_1446(var_1447,var_1448,)
func_1449 = relay.Function([var_1447,var_1448,], output)
mutated_mod['func_1449'] = func_1449
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1673 = relay.var("var_1673", dtype = "float32", shape = (7, 12, 13))#candidate|1673|(7, 12, 13)|var|float32
uop_1674 = relay.cos(var_1673.astype('float32')) # shape=(7, 12, 13)
output = uop_1674
output2 = uop_1674
func_1679 = relay.Function([var_1673,], output)
mod['func_1679'] = func_1679
mod = relay.transform.InferType()(mod)
var_1680 = relay.var("var_1680", dtype = "float32", shape = (7, 12, 13))#candidate|1680|(7, 12, 13)|var|float32
output = func_1679(var_1680)
func_1681 = relay.Function([var_1680], output)
mutated_mod['func_1681'] = func_1681
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1842 = relay.var("var_1842", dtype = "uint64", shape = (14, 4, 5))#candidate|1842|(14, 4, 5)|var|uint64
var_1843 = relay.var("var_1843", dtype = "uint64", shape = (14, 4, 5))#candidate|1843|(14, 4, 5)|var|uint64
bop_1844 = relay.greater(var_1842.astype('bool'), relay.reshape(var_1843.astype('bool'), relay.shape_of(var_1842))) # shape=(14, 4, 5)
func_1301_call = mod.get_global_var('func_1301')
func_1304_call = mutated_mod.get_global_var('func_1304')
const_1850 = relay.const([3,2,-10,8,9,4,10,7,5,-10,-6,9,-8,-7,10,1,2,1,-2,-2,6,-7,5,-10,-5,-1,-3,-4,-5,10,-3,-3,4,6,2,-7,5,-5,-1,3,3,7,-2,9,-4,-7,9,1,-1,-7,5,3,1,10,-3,8,-7,-4,-5,-8,-9,5,2,-1,-3,8,-4,9,9,9,-2,-7,-1,-10,3,5,-3,-10,-4,-10,9,4,8,-3,3,-8,9,6,8,4,3,3,-8,1,-6,-1,-10,10,-8,-5,-5,8,10,-3,9,10,-7,-6,-10,10,-9,-10,-6,6,-5,7,-6,5,-10,-6,6,-10,3,-1,-6,-8,2,3,10,1,10,5,-4,4,9,-4,-8,-9,2,-5,-8,3,-8,-7,-4,4,-8,-2,1,10,-5,-4,-1,-7,2,-3,-2,-2,3,-9,-10,10,3,-4,-7,-4,-9,9,-5,4,8,-10,2,-1,3,-1,-4,-3,-5,1,1,8,8,-9,6,10,1,-2,-4,-9,4,2,-2,-7,1,-3,-7,-4,10,8,9,8,8,2,-7,-8,2,1,4,5], dtype = "uint64")#candidate|1850|(210,)|const|uint64
const_1851 = relay.const([-3.531482,-8.699123,-9.452223,7.417756,2.326288,-4.632792,7.029921,-1.451954,-5.348185,6.051944,1.495859,8.854980,8.924537,-7.038470,-3.239312,-1.478909,-8.655307,-2.815271,4.779998,4.487815,9.906228,-5.591736,-7.036517,1.229597,8.282797,3.732845,3.148344,7.089118,2.064053,-1.002718,5.915386,-6.137783,0.620218,-7.804078,6.717643,3.037072,2.622583,0.625453,2.333964,2.006566,-1.876732,3.239109,2.186434,-0.995738,-6.185134,-0.423121,-1.554330,7.903012,2.870397,-8.052346,7.736514,-7.959511,-0.760584,-1.691176,-1.465992,-3.041564,3.964004,5.663023,-2.033374,3.496198,-0.956753,-1.822488,2.849277,-3.259975,7.087501,4.505729,-5.268402,-6.451606,8.914343,-3.717491,-3.257627,-6.184628,-3.951729,-9.936496,-1.388128,1.429682,-2.198182,4.841929,5.615916,-4.825044,-3.831287,-1.154323,2.394484,4.348396,2.766110,9.155447,-6.196698,7.699355,0.792257,5.380506,-3.563677,-8.233695,-7.793097,-4.670688,3.270207,9.569125,-1.278759,-4.296142,-6.500792,-1.505069,-4.644419,1.360877,-0.388498,5.997249,-4.412308,9.397437,-4.682674,1.361369,5.132779,-4.904813,0.497737,-4.493490,2.721698,1.218687,5.098707,-0.010177,4.714713,-9.323385,-7.359806,6.120755,4.693897,1.585992,-0.503721,-5.520580,-3.376479,-7.724699,-4.902781,5.222502,-4.550551,7.959656,9.138773,8.059071,4.412921,-9.747389,8.238254,7.397919,-6.894113,-6.733507,9.665935,-7.254068,-7.460675,5.924941,3.933919,-5.079266,-9.123358,2.347500,5.808445,-7.337395,0.258472,7.179513,6.093014,4.219513,6.970688,-6.252025,-2.198677,1.464234], dtype = "float64")#candidate|1851|(156,)|const|float64
call_1849 = relay.TupleGetItem(func_1301_call(relay.reshape(const_1850.astype('uint64'), [3, 5, 14]), relay.reshape(const_1851.astype('float64'), [156,]), ), 2)
call_1852 = relay.TupleGetItem(func_1304_call(relay.reshape(const_1850.astype('uint64'), [3, 5, 14]), relay.reshape(const_1851.astype('float64'), [156,]), ), 2)
func_1679_call = mod.get_global_var('func_1679')
func_1681_call = mutated_mod.get_global_var('func_1681')
const_1857 = relay.const([5.758353,-4.993255,-6.162282,2.355296,-1.012947,-6.541459,4.616576,-9.163401,-2.700864,2.247800,-7.898548,3.623178,-5.460972,0.319207,2.318252,9.248694,0.885081,0.400228,0.161824,8.718350,6.636177,1.226253,8.047993,6.046393,-2.926915,4.373366,-5.103931,3.477314,0.350636,9.631998,1.560709,0.600708,-2.194048,-7.590137,-3.188778,8.151248,-2.951626,-1.992262,-5.147499,3.884396,-6.279152,-7.513766,8.754783,8.526394,-5.257509,2.401673,-5.010894,-7.610235,7.560204,-7.958827,-4.244183,4.653788,1.068765,4.611579,-0.642410,-4.559298,1.328730,3.618588,-7.699252,8.294151,9.569908,-3.893921,6.249900,-4.179187,8.193022,-7.451899,-1.682469,-2.898223,-1.698128,-7.067588,-7.345598,8.290981,3.408917,-7.185901,-0.548732,-8.550710,-5.866524,9.623786,0.571709,-6.682095,-4.387334,8.741001,4.221311,-1.464400,2.372976,-8.567807,6.948183,1.013505,-3.052679,-4.697740,5.215890,3.165739,8.919777,6.066458,-6.506225,-7.693784,0.897381,-6.418563,2.377237,-9.058619,2.001262,8.582625,-2.897285,2.566325,-8.946524,9.036124,-9.876370,-3.833643,7.545801,-7.096862,4.436111,9.192911,-7.631154,5.300042,-0.763615,-5.429445,-8.767605,6.617635,-5.856669,-4.454145,-2.072582,-3.523748,-0.137137,5.066671,1.300467,4.968097,-0.422591,0.344026,-9.194490,-8.747495,-5.667438,-0.098644,-4.750473,6.418722,-6.218271,-2.413853,-6.131536,8.941506,2.473106,-4.430237,2.073013,9.326172,-9.307767,-3.251752,-7.519034,-2.625641,-7.914234,0.271075,-5.815737,5.460356,-1.245165,2.290022,3.441796,7.002026,4.684721,0.489630,-2.151571,-3.747867,4.372430,4.058120,-6.060702,-7.124452,1.877158,4.106197,-5.612723,-8.905518,-3.532017,6.792172,1.341955,-4.150058,1.596464,6.433708,1.439715,-4.509145,-6.863437,-1.819112,2.940574,6.286962,-9.086493,-3.625328,-1.719955,-5.490803,2.089648,-7.221244,-5.890817,2.357591,-8.374691,1.004378,6.676164,-9.798598,-8.852050,-6.876005,7.456859,-8.326591,-0.791622,-9.557017,8.454660,-4.143815,2.378013,7.052603,1.094507,8.147676,8.091492,9.948221,-4.916767,5.800029,-2.404178,9.449020,1.338850,-7.429491,-4.449098,-9.079262,2.869593,-6.057759,5.268358,-5.984916,8.822775,-6.913602,3.399000,8.266056,8.786012,-5.336220,-6.915483,4.691549,4.543246,4.992584,4.145554,6.710910,-0.085991,6.630726,-0.514518,7.399464,2.328388,-4.552056,1.730302,-7.065040,-5.975841,3.559891,-0.962619,6.485797,-5.503512,-2.344597,-8.641481,-8.152973,9.113145,8.710967,9.761142,7.157120,-3.552203,5.164099,6.696294,0.640938,-3.395801,-2.802269,5.759214,-6.759666,9.225349,3.854916,7.953316,-5.197928,5.380901,-5.623877,-7.591622,4.905213,9.325897,2.228104,3.398822,6.568071,1.000518,-5.053549,8.793136,-8.022339,4.874439,-0.317367,4.899689,-6.451248,-6.885986,4.297703,-0.708329,-7.215466,-3.549363,1.844697,-5.891057,8.624019,-2.304878,-3.931383,0.852846,-5.773746,1.040956,7.023919,-2.508139,0.616460,-7.239930,6.071343,-2.486499,-5.544058,0.361567,-3.682568,-6.489999,6.789503,7.713534,-8.372594,-1.424269,-7.480523,-2.898034,-7.269248,7.654486,9.382215,7.707355,-0.753260,-2.083928,-7.793358,-0.123816,5.082666,-1.317916,-1.043248,3.557396,-6.504131,7.381956,2.078137,-7.614974,-9.286491,2.526026,4.544695,7.268868,-9.802188,0.739620,7.171691,7.655032,-0.373754,-8.260486,-0.631903,-5.866399,0.888510,5.464962,6.179799,1.410651,2.749801,3.347602,4.250303,-1.270847,3.564609,-3.954604,-5.727519,5.141137,6.100237,0.357692,4.990469,1.088470,9.399085,9.776551,-3.761678,9.096954,-1.760631,7.515348,7.988734,9.120614,5.053701,8.880620,-3.319599,-2.367915,-7.181248,5.208542,4.322502,4.059686,0.037240,1.199485,3.695285,3.246476,-7.060362,6.331608,-3.203162,-7.278211,-5.649739,7.844186,-0.704359,-5.343623,9.843034,1.914786,-4.974119,-0.228258,2.620999,-7.541817,-4.596002,-6.853365,-5.837030,-9.125674,4.093479,-6.968964,-8.024517,-7.988287,8.711265,-2.186969,-9.729243,-5.771340,-4.905742,-6.462151,-3.520167,-2.426968,-3.982177,8.695312,-7.851454,5.130714,-7.823629,3.207439,-1.955236,-3.117245,-1.385704,-2.623131,-0.898453,-9.285845,6.080961,-7.216733,0.296517,-3.559174,-3.298198,-9.662481,8.987227,-2.886253,3.634109,5.264975,4.940397,1.213334,-3.908750,-8.643648,-0.073787,4.757599,9.767394,-3.358476,-3.624081,-5.368972,-5.964975,9.517818,-2.490539,-5.360782,5.407412,2.358952,4.099431,-9.346089,0.278720,-6.310811,6.332368,1.592270,6.277027,1.828297,8.814732,-6.714371,-9.984281,1.167590,9.336365,-9.397610,5.335303,3.677888,4.982122,-1.240254,-6.171937,-7.421841,-9.467352,-7.729063,7.326155,6.845019,7.874122,3.993807,2.302951,8.935314,-8.016222,6.163640,0.314635,-3.292658,5.558544,0.003111,4.794507,1.640759,-2.478612,1.027504,-8.914438,-7.823286,0.066161,7.687454,-0.134236,7.882156,0.882886,7.875391,-2.441728,9.594428,-0.278971,6.736307,-0.764161,-7.127165,7.984284,7.454606,-0.117916,9.616523,2.044780,9.419320,6.140640,-5.666351,8.335792,-3.837614,4.809360,9.649400,-6.323330,7.375482,-9.767421,4.656087,4.318918,6.745339,-9.710840,5.865998,6.460048,-8.167273,-9.122077,7.838032,-7.350623,4.808083,1.915300,2.733287,9.688682,1.062821,-1.544493,8.189372,4.149048,-8.416018,-8.214482,2.514764,-6.248070,-4.765234,-9.300260,-1.765037,8.967139,-0.133912,7.446112,2.380262,-5.877087,-0.521150,0.099191,-9.876960,-4.801555,2.254575,5.137511,-8.561310,-9.088258,-8.523633,9.349500,1.365491,-6.470594,4.805608,1.043493,-4.222397,2.498996,3.717571,2.856352,4.857372,-3.469973,-8.181540,3.034438,2.510041,9.161383,-5.068194,-6.850005,-3.522968,6.466424,-5.364915,-2.455083,-8.824082,4.783131,-1.389535,-0.273977,-6.990818,-7.312930,-4.253898,-1.763219,4.029896,8.455328,-9.385064,0.452367,-1.378568,-3.743612,-5.603612,6.237120,0.301275,-3.937423,2.833557,5.385938,8.619847,-7.293661,-0.409375,3.141080,2.145062,6.042656,-6.730869,-7.924046,-7.871116,-7.953374,6.331020,3.230043,-8.899078,-6.568967,-2.567114,-7.325731,-9.949961,5.748834,8.230346,-8.285222,0.541301,-9.292461,5.508351,-6.032732,0.473922,-5.319454,0.530623,3.886142,1.956970,2.188850,-6.318257,1.578125,0.451914,7.362030,1.553209,0.061191,7.670159,-0.409468,-5.796264,-3.576385,3.950308,-6.335630,6.637197,8.396526,1.192848,-1.449662,-7.669330,-4.146077,2.748222,-8.473674,-0.495576,2.682824,9.408168,-6.415263,0.271444,9.254614,6.840182,1.293677,-9.899665,9.590686,2.080253,5.786381,0.415971,8.295185,4.793328,7.188952,5.193072,6.234187,-9.245354,-2.850171,6.531800,6.841294,0.825150,9.696352,5.381639,-9.039958,-7.496142,-3.453307,4.325542,-6.086285,9.886741,-9.526886,6.815706,4.289978,4.055402,0.739088,3.678997,1.777625,6.029335,-2.368009,6.515474,9.795518,-3.593991,9.661750,-7.971993,-1.780776,7.292843,-7.280769,8.505347,1.554450,-1.148578,9.046554,4.428689,-8.899483,5.014333,4.349390,6.139517,-9.019618,-3.193946,-2.068954,-5.069333,-7.757728,6.479614,-5.682064,-4.777760,-4.185426,-6.550047,-8.615727,-8.597185,-7.741871,-2.266362,2.918014,-4.559452,7.238737,5.059399,2.623975,3.244977,-6.174025,7.112985,2.815852,-4.162737,-3.143540,4.378722,-9.709639,6.848131,5.609452,-0.086314,-2.891829,-9.593306,8.367577,2.312058,5.858825,-0.488196,7.997604,-4.263128,5.906290,-3.877321,8.695454,-6.767615,-1.007282,-3.741222,5.248117,-1.495719,-1.334638,-1.194004,-1.310732,-7.509174,-6.681988,4.948676,-8.471885,-1.494407,-9.070020,2.015713,-1.995263,4.459226,-6.365017,-3.889369,-9.655020,1.781104,1.040960,-7.969719,2.893448,-7.772233,3.173700,2.749949,2.255703,5.611853,4.962249,-5.831845,9.153706,-1.683681,3.705527,2.501747,7.874448,-4.148900,-7.734851,-7.594700,-8.371325,1.190548,9.416388,5.894612,-0.930128,-4.950836,-2.459949,3.948141,1.112980,7.442675,-0.638671,-7.447576,0.391097,8.233760,-1.520610,0.049528,-9.788310,-6.415902,8.781207,-5.588388,5.928059,3.644480,3.452073,4.109552,-8.339341,-6.947949,9.229433,-4.562815,9.040180,3.865848,-2.249750,-2.370236,8.302883,-5.770207,0.533656,7.039532,8.078022,-6.434921,4.603323,8.929516,-2.807074,2.024057,4.713129,-0.083099,8.504195,-8.170150,-2.590431,-3.428019,0.088210,-1.592789,1.107294,6.072217,6.079723,-3.325799,6.829669,-1.804081,1.988325,-4.557097,-7.698048,9.302366,-9.579951,4.723363,1.933501,-4.896648,-8.927058,0.770232,-2.546885,-1.501771,-7.080653,0.553403,7.433645,8.441781,4.842161,6.389268,-7.247926,1.066629,-0.461511,8.446099,-7.011460,-4.963751,-2.358397,-3.377434,6.248371,-9.933373,6.928923,9.177957,-3.670813,1.864597,-4.451157,3.342101,-8.754993,0.950520,9.137360,-2.238208,0.188864,-3.132679,-6.632638,-9.439344,4.974573,5.556887,-9.789508,1.521837,3.985726,-3.446689,6.692232,-1.322013,-4.297754,-0.023204,-0.776411,2.959181,-8.451088,8.041965,4.033621,-5.015291,6.547241,6.458025,-8.852997,-1.230834,-6.411887,-5.078172,-6.118421,7.964041,-2.957911,-1.766109,-9.655458,-6.668280,7.082513,6.747201,-9.370047,7.294316,0.452757,4.966218,-0.259596,0.350933,1.141975,-0.302861,-8.634149,-2.125535,-2.869256,1.150626,5.314839,1.207589,6.458943,1.188531,-6.142632,9.873887,4.737362,3.477416,-4.718691,-6.803974,-4.242671,2.582634,-0.806444,-3.108690,-0.037139,7.238816,8.298732,-8.973997,5.455799,-5.540409,1.918933,2.264372,9.055467,-4.444200,5.277646,6.648619,5.218368,-5.634673,-5.183831,-5.541687,-8.773850,-9.959605,-0.153795,4.886250,-8.505096,5.201414,5.829268,8.506206,-6.818320,6.145899,-9.176175,9.958104,4.414298,-4.479511,-6.766410,4.418833,-7.515000,9.690291,-3.738062,6.824389,-0.169397,-5.375597,6.992323,-7.597157,6.989967,-7.868889,-9.072752,-2.100810,1.422664,-7.313323,0.072395,0.972110,2.108979,1.648338,0.388929,2.269889,3.652021,1.199902,4.594649,-2.670021,3.535702,-7.788980,2.846716,-3.866299,5.376698,-5.058237,-8.417680,2.434822,-3.968137,8.495223,2.275539,-8.210056,6.253346,8.934252,2.960837,7.093256,-2.848921,3.402028,-7.200075,3.515685,-3.199966,9.882642,4.658093,-1.196942,3.090331,2.587995,-8.252624,4.311833,4.765256,-8.640777,5.203350,-1.225908,-9.073274,3.129527,8.604801,-3.467729,-5.994179,-4.136332,-9.373296,-5.951245,-2.181966,-2.271965,5.824785,-9.539256,4.301927,9.061560,5.596677,-8.949732,1.827118,-4.512146,-1.476807,-9.944600,-4.564368,-0.788685,-6.788788,-0.134601,-0.921144,1.119932,4.915830,3.100716,3.319891,6.598459,-5.551983,-9.294474,3.978744,-3.730676,1.907135,-6.979515,4.090834,2.935679,6.514422,-6.701553,-4.718555,4.002506,-5.986117,-0.635137,-5.486267,-8.688982,-5.828696,-3.866468,3.968271,1.261596,-0.719270,4.191757,8.963983,8.565682,-7.267282,-8.244543,0.388193,-2.541055,-8.817370,4.582975,-5.592147,6.110584,-6.716306,-6.439856,-8.049212,6.570874,-7.472253,-0.961665,8.333232,-1.847090,-3.083680,-6.676221,7.459548,4.820814,-8.666233,-4.164275,-1.470878,5.254132,2.932774], dtype = "float32")#candidate|1857|(1092,)|const|float32
call_1856 = func_1679_call(relay.reshape(const_1857.astype('float32'), [7, 12, 13]))
call_1858 = func_1679_call(relay.reshape(const_1857.astype('float32'), [7, 12, 13]))
func_499_call = mod.get_global_var('func_499')
func_502_call = mutated_mod.get_global_var('func_502')
var_1869 = relay.var("var_1869", dtype = "int32", shape = ())#candidate|1869|()|var|int32
var_1870 = relay.var("var_1870", dtype = "int32", shape = (616,))#candidate|1870|(616,)|var|int32
call_1868 = func_499_call(relay.reshape(var_1869.astype('int32'), []), relay.reshape(var_1870.astype('int32'), [11, 14, 4]), )
call_1871 = func_499_call(relay.reshape(var_1869.astype('int32'), []), relay.reshape(var_1870.astype('int32'), [11, 14, 4]), )
func_318_call = mod.get_global_var('func_318')
func_321_call = mutated_mod.get_global_var('func_321')
var_1873 = relay.var("var_1873", dtype = "float32", shape = (77,))#candidate|1873|(77,)|var|float32
call_1872 = relay.TupleGetItem(func_318_call(relay.reshape(var_1869.astype('float32'), []), relay.reshape(var_1873.astype('float32'), [77,]), ), 1)
call_1874 = relay.TupleGetItem(func_321_call(relay.reshape(var_1869.astype('float32'), []), relay.reshape(var_1873.astype('float32'), [77,]), ), 1)
func_1679_call = mod.get_global_var('func_1679')
func_1681_call = mutated_mod.get_global_var('func_1681')
call_1875 = func_1679_call(relay.reshape(call_1856.astype('float32'), [7, 12, 13]))
call_1876 = func_1679_call(relay.reshape(call_1856.astype('float32'), [7, 12, 13]))
var_1885 = relay.var("var_1885", dtype = "float32", shape = (1092,))#candidate|1885|(1092,)|var|float32
bop_1886 = relay.greater_equal(const_1857.astype('bool'), relay.reshape(var_1885.astype('bool'), relay.shape_of(const_1857))) # shape=(1092,)
bop_1895 = relay.add(const_1851.astype('uint8'), var_1869.astype('uint8')) # shape=(156,)
func_843_call = mod.get_global_var('func_843')
func_846_call = mutated_mod.get_global_var('func_846')
var_1910 = relay.var("var_1910", dtype = "float64", shape = (1, 968))#candidate|1910|(1, 968)|var|float64
call_1909 = func_843_call(relay.reshape(var_1910.astype('float64'), [8, 11, 11]))
call_1911 = func_843_call(relay.reshape(var_1910.astype('float64'), [8, 11, 11]))
output = relay.Tuple([bop_1844,call_1849,const_1850,call_1856,call_1868,var_1870,call_1872,var_1873,call_1875,bop_1886,bop_1895,call_1909,var_1910,])
output2 = relay.Tuple([bop_1844,call_1852,const_1850,call_1858,call_1871,var_1870,call_1874,var_1873,call_1876,bop_1886,bop_1895,call_1911,var_1910,])
func_1918 = relay.Function([var_1842,var_1843,var_1869,var_1870,var_1873,var_1885,var_1910,], output)
mod['func_1918'] = func_1918
mod = relay.transform.InferType()(mod)
mutated_mod['func_1918'] = func_1918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1918_call = mutated_mod.get_global_var('func_1918')
var_1920 = relay.var("var_1920", dtype = "uint64", shape = (14, 4, 5))#candidate|1920|(14, 4, 5)|var|uint64
var_1921 = relay.var("var_1921", dtype = "uint64", shape = (14, 4, 5))#candidate|1921|(14, 4, 5)|var|uint64
var_1922 = relay.var("var_1922", dtype = "int32", shape = ())#candidate|1922|()|var|int32
var_1923 = relay.var("var_1923", dtype = "int32", shape = (616,))#candidate|1923|(616,)|var|int32
var_1924 = relay.var("var_1924", dtype = "float32", shape = (77,))#candidate|1924|(77,)|var|float32
var_1925 = relay.var("var_1925", dtype = "float32", shape = (1092,))#candidate|1925|(1092,)|var|float32
var_1926 = relay.var("var_1926", dtype = "float64", shape = (1, 968))#candidate|1926|(1, 968)|var|float64
call_1919 = func_1918_call(var_1920,var_1921,var_1922,var_1923,var_1924,var_1925,var_1926,)
output = call_1919
func_1927 = relay.Function([var_1920,var_1921,var_1922,var_1923,var_1924,var_1925,var_1926,], output)
mutated_mod['func_1927'] = func_1927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1969 = relay.var("var_1969", dtype = "float64", shape = (8, 7, 5))#candidate|1969|(8, 7, 5)|var|float64
uop_1970 = relay.tan(var_1969.astype('float64')) # shape=(8, 7, 5)
func_843_call = mod.get_global_var('func_843')
func_846_call = mutated_mod.get_global_var('func_846')
var_1975 = relay.var("var_1975", dtype = "float64", shape = (968,))#candidate|1975|(968,)|var|float64
call_1974 = func_843_call(relay.reshape(var_1975.astype('float64'), [8, 11, 11]))
call_1976 = func_843_call(relay.reshape(var_1975.astype('float64'), [8, 11, 11]))
output = relay.Tuple([uop_1970,call_1974,var_1975,])
output2 = relay.Tuple([uop_1970,call_1976,var_1975,])
func_1977 = relay.Function([var_1969,var_1975,], output)
mod['func_1977'] = func_1977
mod = relay.transform.InferType()(mod)
var_1978 = relay.var("var_1978", dtype = "float64", shape = (8, 7, 5))#candidate|1978|(8, 7, 5)|var|float64
var_1979 = relay.var("var_1979", dtype = "float64", shape = (968,))#candidate|1979|(968,)|var|float64
output = func_1977(var_1978,var_1979,)
func_1980 = relay.Function([var_1978,var_1979,], output)
mutated_mod['func_1980'] = func_1980
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3365 = relay.var("var_3365", dtype = "bool", shape = (12, 4, 13))#candidate|3365|(12, 4, 13)|var|bool
const_3366 = relay.const([[[True,False,True,False,False,False,True,False,False,True,False,False,False],[False,False,False,False,False,False,True,True,True,True,True,True,False],[False,True,False,True,True,True,True,False,True,False,True,True,False],[True,False,True,True,False,True,False,True,True,False,True,False,True]],[[True,True,True,False,True,True,True,False,True,False,True,False,True],[True,False,False,False,True,True,False,False,True,True,True,True,False],[False,True,True,False,False,False,True,True,True,False,True,False,False],[False,True,False,False,False,True,True,False,True,False,True,True,False]],[[False,False,True,True,False,True,False,False,True,True,False,False,False],[True,False,True,False,True,True,True,True,False,True,False,True,True],[True,True,False,False,True,True,True,False,False,True,True,True,True],[False,False,False,False,False,True,False,False,True,True,True,False,False]],[[True,True,False,False,False,True,True,True,False,False,False,True,False],[False,False,True,True,False,True,True,False,True,False,True,False,False],[True,True,True,True,False,True,True,False,True,True,False,True,False],[False,True,False,True,False,True,True,True,False,True,True,False,True]],[[False,False,True,False,False,False,False,True,True,False,False,False,False],[False,False,False,True,False,False,False,True,True,False,False,True,False],[False,False,True,False,False,True,False,True,False,False,True,False,False],[False,False,False,True,False,False,True,True,True,True,True,False,False]],[[True,False,False,False,False,True,False,True,True,False,True,False,True],[True,False,False,True,False,True,True,True,False,True,True,True,False],[True,False,False,True,True,True,True,True,True,False,False,True,True],[False,False,False,False,True,True,False,False,False,True,True,True,False]],[[True,True,True,False,True,False,False,True,True,True,False,True,True],[True,True,True,True,False,True,True,True,True,False,False,False,False],[True,True,True,False,True,False,True,False,False,True,True,True,False],[False,False,True,True,True,False,False,True,True,True,False,False,False]],[[False,True,False,False,True,True,True,True,False,False,True,True,False],[False,False,True,True,True,False,True,False,True,True,False,False,False],[False,True,False,False,True,False,True,True,False,True,True,True,False],[True,True,True,False,False,True,True,True,False,False,True,False,False]],[[True,True,False,True,True,False,False,True,True,True,False,False,False],[False,True,True,False,True,False,True,True,True,True,False,False,True],[True,False,False,True,False,True,False,False,False,True,True,False,False],[False,True,False,False,False,True,False,True,True,True,False,False,False]],[[True,False,True,True,True,False,True,True,True,True,True,True,True],[True,False,False,False,False,False,True,True,True,True,False,True,True],[True,False,True,True,True,False,True,False,True,False,False,False,False],[True,True,True,False,False,False,False,True,False,False,True,False,True]],[[False,True,True,True,False,False,False,True,False,True,True,True,True],[False,False,True,False,False,False,True,True,False,False,True,False,True],[False,False,False,False,False,True,True,True,False,False,False,False,True],[False,True,True,True,False,True,True,True,False,True,True,True,False]],[[True,True,False,True,False,False,False,True,False,False,False,True,True],[False,True,True,True,True,True,False,False,True,True,True,False,False],[True,False,False,True,False,True,False,False,True,True,False,True,False],[False,True,False,False,False,False,True,False,True,False,True,False,False]]], dtype = "bool")#candidate|3366|(12, 4, 13)|const|bool
bop_3367 = relay.logical_and(var_3365.astype('bool'), relay.reshape(const_3366.astype('bool'), relay.shape_of(var_3365))) # shape=(12, 4, 13)
output = bop_3367
output2 = bop_3367
func_3375 = relay.Function([var_3365,], output)
mod['func_3375'] = func_3375
mod = relay.transform.InferType()(mod)
var_3376 = relay.var("var_3376", dtype = "bool", shape = (12, 4, 13))#candidate|3376|(12, 4, 13)|var|bool
output = func_3375(var_3376)
func_3377 = relay.Function([var_3376], output)
mutated_mod['func_3377'] = func_3377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3869 = relay.var("var_3869", dtype = "float32", shape = (11, 1, 12))#candidate|3869|(11, 1, 12)|var|float32
uop_3870 = relay.cosh(var_3869.astype('float32')) # shape=(11, 1, 12)
func_499_call = mod.get_global_var('func_499')
func_502_call = mutated_mod.get_global_var('func_502')
const_3886 = relay.const(7, dtype = "int32")#candidate|3886|()|const|int32
const_3887 = relay.const([-6,4,7,2,4,6,1,-7,8,6,1,2,-3,-4,-2,2,6,-7,-7,-1,-10,-1,6,2,7,1,-4,-4,7,-7,2,6,7,-1,4,-5,6,7,-6,-4,-7,-9,-8,-7,-2,6,4,-2,-5,7,-4,8,-10,3,-4,-7,4,3,10,6,6,7,-4,-5,3,-10,4,-8,1,-8,-10,7,2,5,3,3,-5,-1,9,-8,8,1,4,-6,-1,-1,1,5,1,5,-3,-3,-1,7,-2,4,1,-2,3,9,2,6,-9,7,5,3,-10,-6,3,-1,-6,-7,-10,-3,6,-8,-3,4,-9,1,-2,-2,1,5,9,2,-1,-4,7,6,9,-4,10,4,10,3,-8,-6,3,6,7,9,5,1,-1,7,-10,-4,-10,2,-4,2,2,-2,9,-6,5,8,-9,4,-7,3,6,10,6,8,8,1,-7,-4,-2,-7,-4,-9,-6,-4,-5,-10,4,9,-3,9,6,-3,4,3,8,5,5,-8,6,-3,8,-4,-7,-2,9,-4,-3,9,-6,5,10,-7,-3,-7,-6,-2,8,-9,-2,-5,-4,5,10,5,6,-2,-10,-3,-4,2,3,-6,-3,-5,-8,5,1,-9,5,7,-4,8,-7,-6,3,3,-5,6,6,2,-2,-7,-8,6,-4,5,-1,1,5,-1,7,-4,-4,10,-4,5,-9,10,3,-3,8,-5,2,-7,5,-5,1,-7,-2,5,1,-1,-4,-10,-7,-2,-10,4,-4,8,10,-6,-7,-3,1,-4,-8,3,-7,7,-3,-1,-9,-6,9,-4,9,7,4,4,10,6,-4,9,1,7,8,-8,4,-8,7,-9,4,4,-8,1,-6,-5,9,2,-2,5,-7,-7,-6,2,-8,2,9,-8,-6,-6,-10,-5,-6,9,5,10,-7,-1,-1,-6,7,1,-6,4,1,-6,-10,-10,-7,-8,2,-2,-4,-2,7,-6,-10,10,-7,9,4,-9,-6,5,-9,-4,1,-2,9,2,3,-2,-4,-10,9,-8,-5,-1,5,2,9,7,-4,-6,4,-10,-5,-2,7,1,9,10,6,5,-7,5,7,-7,2,3,-1,-3,-5,9,-4,7,10,9,1,7,-5,6,-6,-10,-6,2,-5,-8,-9,10,7,-1,7,3,6,-7,-4,-2,6,9,-4,-3,-8,-7,8,-4,-9,4,-5,-5,8,-1,-3,-5,4,2,6,6,6,5,-5,3,-2,-1,5,-9,5,7,4,10,-7,7,-8,9,8,-2,-3,-6,-1,1,2,10,1,-9,1,-2,-2,4,-1,5,-9,4,-1,6,-9,7,8,-1,5,1,-7,-4,1,10,1,3,2,1,-10,-5,-3,-10,-10,-7,1,8,-2,-7,-10,-6,2,-2,-9,-10,-9,7,9,-2,-8,-1,8,7,4,4,-2,-9,-4,-3,-4,-9,9,-5,-5,7,-8,2,-10,8,6,-9,6,5,9,-10,-10,-7,7,7,-1,-7,3,-4,10,-6,-6,3,3,2,5,-6,-3,5,-7,5,-7,6,10,2,2,6,-2,-1,-8,-8,7,9,-9,3,7,3,-8,3,-8,10,4,9,-7,-5,-5,10,-9,3,3,3,4,3,2,2,4,10,-9,6,-1,-5,-3,10,3,-7,1,-6,5,-9], dtype = "int32")#candidate|3887|(616,)|const|int32
call_3885 = func_499_call(relay.reshape(const_3886.astype('int32'), []), relay.reshape(const_3887.astype('int32'), [11, 14, 4]), )
call_3888 = func_499_call(relay.reshape(const_3886.astype('int32'), []), relay.reshape(const_3887.astype('int32'), [11, 14, 4]), )
uop_3904 = relay.acos(uop_3870.astype('float64')) # shape=(11, 1, 12)
output = relay.Tuple([call_3885,const_3886,const_3887,uop_3904,])
output2 = relay.Tuple([call_3888,const_3886,const_3887,uop_3904,])
func_3924 = relay.Function([var_3869,], output)
mod['func_3924'] = func_3924
mod = relay.transform.InferType()(mod)
mutated_mod['func_3924'] = func_3924
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3925 = relay.var("var_3925", dtype = "float32", shape = (11, 1, 12))#candidate|3925|(11, 1, 12)|var|float32
func_3924_call = mutated_mod.get_global_var('func_3924')
call_3926 = func_3924_call(var_3925)
output = call_3926
func_3927 = relay.Function([var_3925], output)
mutated_mod['func_3927'] = func_3927
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3956 = relay.const(-6, dtype = "int64")#candidate|3956|()|const|int64
var_3957 = relay.var("var_3957", dtype = "int64", shape = (13, 5, 1))#candidate|3957|(13, 5, 1)|var|int64
bop_3958 = relay.minimum(const_3956.astype('int64'), var_3957.astype('int64')) # shape=(13, 5, 1)
func_1679_call = mod.get_global_var('func_1679')
func_1681_call = mutated_mod.get_global_var('func_1681')
const_3964 = relay.const([2.732987,3.988219,-9.312772,8.512487,-3.530870,2.775888,7.338202,-5.786307,-5.417334,-2.292868,-2.215340,5.424764,-4.571941,-5.240633,-9.242404,-6.146527,3.465706,8.076864,8.637980,3.262014,3.922929,-7.979367,7.368381,-2.724593,-3.006258,-2.208847,5.192569,5.029827,5.307656,9.887264,2.485727,9.389141,6.839265,-8.894574,0.005682,2.863709,9.216888,4.846704,-8.718430,-4.610796,-4.423575,6.002331,-4.804378,-5.667458,-3.968922,0.041455,1.244937,7.122579,4.636276,9.290762,5.939315,4.578909,7.542010,-8.243028,4.861036,-6.678111,8.663685,3.776051,-7.670285,1.224350,-5.722702,-7.508318,1.017261,-0.684277,-0.331312,-6.736567,-9.337585,-7.404250,-7.849346,-4.511681,4.637904,-2.856404,-6.879565,-5.494340,7.444908,-4.124958,6.876218,9.913365,-5.933521,3.009836,1.905412,-6.564741,-5.732711,5.549085,8.480413,-7.602445,2.439276,3.404571,-1.275500,-2.277121,1.278239,8.995819,-1.611783,-1.669982,0.424725,2.775201,2.541695,-1.382512,-1.471358,-5.702077,9.680076,-9.000358,7.399902,6.826229,5.817230,3.326848,-7.766846,6.798661,4.736796,5.372546,-9.075352,-9.123864,-6.254847,2.751873,-0.883792,9.331849,-4.614165,-1.697607,0.060113,0.324148,-1.102439,-7.644815,-6.246854,2.880675,8.357149,-4.936600,1.902218,3.209431,0.612143,-1.022894,-8.502839,-3.243880,0.377437,6.165534,-6.102573,7.325606,6.789476,7.125899,-3.795126,-3.114111,1.487569,9.033449,7.170237,-0.176991,3.050873,-9.124101,-0.030440,-6.303184,-4.679338,5.718204,-4.293029,1.091652,-0.730906,9.235607,1.715017,-3.618491,-3.785574,8.962266,-3.785183,0.782762,-4.406974,0.459412,-8.455748,-5.606653,6.807048,2.481670,-2.353056,-3.986222,5.580858,7.747519,3.865398,1.403119,0.696127,7.688113,-6.803362,1.771428,-1.507789,-4.210301,-6.127825,8.161803,-6.290274,-9.074371,4.365045,4.628573,-2.271900,1.764098,-4.332631,-1.404936,2.439861,3.317525,-3.448750,-7.355470,3.576283,6.574962,6.626833,-9.840232,0.965953,8.723364,4.065029,7.293731,6.838257,5.572512,7.078884,-7.359290,2.140912,-9.886333,-7.721194,-5.968657,6.984552,-0.920356,9.992432,-9.062911,6.916135,2.051403,-3.036419,-5.403835,-6.400661,9.892624,4.801979,-5.038694,4.499814,-9.273012,-6.492408,-6.999542,-8.504525,-4.884135,8.535350,-0.905937,-8.729139,0.505063,-9.572116,0.491084,2.084228,-4.826316,-6.573844,7.221737,-0.068066,2.419659,-1.722828,-0.497388,-2.875660,-3.551180,-9.073616,-2.081272,7.799840,0.005679,-5.765580,-3.265076,-3.118633,-0.308287,1.150248,-9.899097,-4.592488,-5.967299,7.487271,2.895779,-1.792765,1.649409,0.908857,3.270081,4.530189,-6.582141,8.397025,8.624081,-6.730292,-6.675373,5.070398,6.644001,2.552684,1.391833,-5.287446,-7.586763,-0.083865,5.127029,-1.474705,-9.209083,-4.132937,8.922823,0.019299,5.834519,-1.377802,-6.795712,-6.381334,3.277339,6.601881,5.868204,-3.857216,-0.340109,1.097111,-1.264455,3.787370,-8.926706,1.859934,3.348817,-4.731835,-3.169126,4.893413,3.779962,-7.992819,7.423392,5.747505,-0.275595,-0.877290,-7.466607,-8.583973,7.785450,-8.643177,9.718333,9.902321,-6.761893,9.877384,6.252118,0.644084,8.299363,2.640728,-7.368841,6.939536,-6.377227,7.888149,5.551105,5.846577,9.857394,-4.534340,-3.541449,-5.723974,-1.821476,3.103453,-8.350158,-6.410222,9.252053,-6.757204,-0.010358,-2.849264,1.802489,6.714063,9.079178,-7.887400,-2.859622,-3.993808,-2.569430,-7.436207,-5.594421,-3.244009,-8.092286,-0.506970,4.861455,2.440074,-0.211003,-1.544667,-4.681730,9.948220,6.467018,-3.600296,-9.878556,-8.297021,8.229206,2.983581,-0.125082,-1.122857,-6.289633,-7.407683,1.732467,9.222319,1.491496,-3.912220,-7.496350,-1.429579,1.166858,7.527562,1.774239,-0.125006,-0.805924,-5.107165,-7.822244,-3.515881,-0.335156,-8.084220,-7.829510,4.574130,2.259667,4.371303,6.893170,5.722898,8.676166,7.962651,-1.163938,5.924263,9.292480,-5.525026,1.607379,8.183119,5.232719,6.350785,5.987927,-2.051911,-3.188843,-6.171612,8.863575,-7.200302,0.596537,1.697610,-2.957065,-3.406724,-0.293635,3.150105,8.028709,7.316637,-5.999969,8.622108,-2.762649,-0.322852,4.020367,-7.415388,0.706762,1.005469,-3.934151,-6.741918,-8.035892,4.353109,7.114869,-9.877577,4.810698,-0.307165,-9.506741,0.717266,1.660193,-5.486069,4.445240,3.674372,1.418787,7.989384,7.897659,-6.600819,-5.356586,-3.386573,-2.173464,0.376665,3.380927,6.315425,7.672875,-7.093077,2.634142,9.978849,8.797414,4.075529,-3.796600,4.320639,-7.033936,7.125517,9.781876,4.629673,-0.134500,0.655469,-1.988960,9.818045,4.858565,-8.415509,-7.720578,8.150042,-4.481917,5.890312,8.664669,-0.466335,-9.716951,6.283337,4.154042,-1.792264,0.668183,4.783223,-7.697263,5.380008,-1.531048,-5.294346,8.920470,2.889015,-2.945737,-7.203275,7.556653,-0.505391,-6.397449,1.756621,-7.190802,4.328335,2.397031,2.694692,-7.165470,6.146445,-4.884704,7.263119,-3.158770,2.566770,1.067036,-6.792014,-4.776020,0.554657,-3.309643,-5.333764,-2.829320,-4.741312,8.086596,0.498729,-7.748816,-2.503676,6.938463,2.070849,-3.690869,-8.517106,-1.778899,-9.659227,6.365963,-9.592819,-6.070980,-8.202885,-4.318151,-1.574446,-7.182423,8.645349,7.061266,5.247076,-6.946700,-1.104903,1.396616,-3.313341,0.996081,-9.497817,-5.640810,5.963868,-8.899506,3.026913,-0.762506,-3.493351,-1.217197,-5.204968,3.673534,-6.147698,-8.690664,8.411630,3.009763,5.504668,-9.274383,-7.424399,-1.532530,-3.125820,8.430366,-5.761705,7.582218,9.507612,-7.825531,1.060091,5.706662,3.493644,-1.050538,-2.106778,1.233771,7.918660,1.641998,-4.815005,9.723325,-3.224573,7.084364,-2.416422,9.528142,-9.374291,5.907281,-7.825356,3.006729,-2.670865,-4.584141,6.210860,2.978913,5.966652,-7.219498,-9.746314,-0.563922,1.802105,5.156409,0.960926,5.664148,6.307813,3.568356,3.977471,0.234692,3.584860,-4.871209,2.843505,7.545904,4.827771,3.464343,9.894840,-8.270825,2.979859,-3.711340,7.122761,-1.793915,7.224624,-9.296002,-3.266398,-7.059457,9.006016,-7.705631,-3.358858,5.380319,-8.211380,-9.355415,7.958340,-0.682187,-3.903621,2.543735,-5.208314,-5.948274,3.021071,-4.391778,6.760205,6.826962,-5.244348,3.214837,7.828748,-2.222127,8.150987,3.493205,4.031408,1.386353,3.919789,6.676093,-6.013522,0.492016,-9.354651,1.788424,-8.773902,-0.945869,9.774914,-8.472692,9.133362,-7.647833,9.905049,1.417075,2.671435,-8.444014,9.982212,-0.539390,-7.263683,7.410462,0.496634,-6.003833,-2.399893,-7.761608,-0.142647,-6.051403,2.285937,4.331707,7.573956,-0.600609,5.775799,3.771020,-9.555057,8.759119,2.816181,-1.347903,4.189982,-7.304586,6.238023,1.127261,6.261400,6.480280,-5.331006,1.453141,8.618367,-3.772317,2.607318,6.768882,9.070257,-4.600507,-0.254182,-8.556642,0.980711,0.147974,8.057903,-5.327197,-5.881996,-3.784211,-2.269057,-4.961242,7.985044,8.519949,-0.451524,-1.850228,7.444462,-6.136995,1.927974,6.416244,-3.354454,-4.219046,-3.118670,-7.275754,-7.217000,4.571841,1.422640,5.400197,1.330823,9.526209,6.642123,1.688196,-4.438928,-1.270260,-1.731998,-7.640590,-2.723742,4.930220,1.328473,-2.636729,-6.250041,4.851262,7.716114,-4.408178,4.076712,8.910250,1.562310,8.275841,-4.016175,-4.051764,0.777899,2.180344,7.177519,-8.220916,0.994895,-9.018462,9.693242,8.389496,-8.745176,5.367263,6.221443,6.321708,3.690081,-4.938104,-8.732787,2.530297,9.660396,-8.100564,2.610086,3.469363,0.758188,-4.094441,1.174417,3.324135,9.819754,2.258045,1.073535,5.423476,0.198870,4.044822,-5.262532,-5.200008,7.012720,-2.313834,1.590938,3.992856,-3.773179,0.072215,0.550445,7.085861,2.531949,6.614611,7.589893,-8.302841,-3.099222,4.227373,-7.536291,-3.171185,-4.894671,-5.752291,5.313773,-5.817790,7.426030,7.693017,-0.084445,0.091039,-8.176708,6.121496,9.010633,-8.069017,9.706866,0.254964,2.690255,0.115351,-5.973771,-3.646990,-6.497122,5.393299,-5.820419,-0.297149,-3.647220,9.469343,1.205575,-7.270845,-2.404256,-6.315739,-5.568475,0.405540,-2.561826,1.645962,-0.553810,-4.575530,-7.297784,-8.616770,-3.827197,-5.762561,-9.360114,4.633184,-0.748313,-2.899554,8.245788,-2.538694,-7.680618,9.295677,-4.615711,-8.193420,-5.364130,1.884311,-7.773128,-8.178072,5.451875,3.581524,-8.999219,0.988669,3.475064,6.197443,-5.567940,-5.948335,5.686219,9.586972,1.494733,-7.828639,-2.932696,-8.362559,8.216260,-0.350142,2.132494,-9.582714,-5.146123,-1.778706,8.238015,-2.581154,8.095268,4.890245,1.025703,3.268342,-4.669587,-1.207073,3.014919,9.539576,1.890806,4.267232,-2.237822,-6.981835,4.050368,-1.677444,-0.359874,7.423367,7.266565,-4.180249,1.199530,0.033605,1.462729,5.180557,6.434427,3.564323,-7.621610,5.513242,-3.927363,7.185399,9.319634,2.419270,0.451156,3.587275,5.097658,3.747937,5.191850,-5.210260,-1.116182,-3.374390,-1.198459,4.388094,-3.933625,0.544313,-1.077600,3.163110,-0.578429,-4.278467,1.239352,2.715669,9.530142,8.906577,5.760621,-5.517792,3.909178,4.984892,-5.560539,-7.269257,-4.743481,-7.936044,5.526825,-1.987419,-5.670465,1.008237,-5.887836,-7.583846,6.336736,7.316696,1.067446,-7.617403,-5.475059,-8.800863,-5.536946,6.959721,4.280281,-9.413963,4.553535,-3.682200,0.104738,5.446782,-1.503559,1.672925,-0.410582,4.910364,-1.338469,-6.179321,5.910670,-1.864151,-2.731928,-2.665745,7.298429,-9.345297,9.899673,-0.134611,-4.314119,0.741610,0.032850,-2.556725,9.312751,9.395941,6.511797,-4.702641,-4.682612,9.746870,-2.305479,-2.942897,-8.126927,8.060748,-7.911524,-6.586136,4.377081,3.114171,-4.217909,-2.232846,9.657806,-4.779455,-4.650872,-0.942814,7.772524,2.522005,1.952606,3.921940,-6.441865,-0.131972,-5.792697,6.846586,-8.736046,-7.692811,-1.199218,-1.342285,-5.472782,-1.050512,9.447026,0.878617,-2.094388,-9.477019,3.931332,4.203440,-3.222640,-6.700632,-3.019492,0.774088,-0.523875,-5.547487,-4.021430,9.294062,0.756458,8.718571,-4.822008,9.947035,2.040866,-0.344626,9.578174,-4.452419,9.543823,-5.206646,-7.478360,-2.338882,8.958692,0.755151,0.370814,-3.805443,9.891811,2.224320,-9.449218,-6.383065,8.631373,-8.763316,1.480636,-8.510041,6.056914,-3.344601,-9.287584,3.591679,6.807708,-6.970282,6.434053,0.591912,-2.038579,-1.876370,2.280119,8.985092,8.308440,8.204206,-9.185599,-6.854378,-6.130322,-1.138002,1.796739,-7.024823,-8.234554,-0.129984,4.105129,-7.769784,-9.609154,0.474492,-3.428503,-2.739988,-6.231421,-3.693210,-4.860139,6.039117,3.329601,5.441544,1.014818,-1.426934,-1.147835,3.607545,-9.867226,-5.727004,-5.214431,6.920115,-6.971213,-0.645093,9.616150,0.333139,8.402812,4.314171,-4.480735,-3.252428,-8.719336,-8.428236,5.978858,8.618332,1.699724,-6.749717,9.494365,-5.854260,-7.418659,-3.649414,2.907710,5.438394,-3.757559,-6.572012,3.498915,-4.366227,0.047361,2.103301,-2.188013,-1.782136,-2.851603,1.277212,-2.256383,6.783869,9.412219,5.474135,5.549455,5.410599,8.527305,3.065240,-9.768352,-7.402207], dtype = "float32")#candidate|3964|(1092,)|const|float32
call_3963 = func_1679_call(relay.reshape(const_3964.astype('float32'), [7, 12, 13]))
call_3965 = func_1679_call(relay.reshape(const_3964.astype('float32'), [7, 12, 13]))
bop_3966 = relay.add(var_3957.astype('float32'), const_3964.astype('float32')) # shape=(13, 5, 1092)
func_48_call = mod.get_global_var('func_48')
func_50_call = mutated_mod.get_global_var('func_50')
var_3970 = relay.var("var_3970", dtype = "float32", shape = (336,))#candidate|3970|(336,)|var|float32
call_3969 = func_48_call(relay.reshape(var_3970.astype('float32'), [3, 14, 8]))
call_3971 = func_48_call(relay.reshape(var_3970.astype('float32'), [3, 14, 8]))
func_1918_call = mod.get_global_var('func_1918')
func_1927_call = mutated_mod.get_global_var('func_1927')
const_3973 = relay.const([-7,-3,-9,8,8,-3,9,-10,2,7,-5,-5,10,-4,-8,-9,10,-4,2,-8,-9,9,-8,-2,9,6,6,2,3,-5,5,-6,5,-5,-1,-9,-5,10,-9,4,4,9,-3,-6,-7,7,-4,-8,-4,7,-9,8,9,7,-10,4,-3,4,8,-4,10,8,8,-4,-2,-8,1,4,3,6,2,-9,-6,5,-2,8,2,-7,-5,-3,-4,-5,6,-3,-1,-2,10,2,-4,-10,5,10,8,-10,-10,10,-5,-9,6,-9,2,2,5,-9,-2,-7,1,-6,7,-1,-10,-1,6,5,-3,-9,-10,-8,-6,3,-8,-4,-8,-7,6,-3,9,-1,-5,4,-5,-4,5,-7,3,-8,-2,1,5,-6,5,9,-3,-8,-9,8,-9,-6,-6,-7,6,-9,10,-10,-7,-5,-6,-10,-5,7,3,7,-8,6,9,-3,1,-3,4,-5,10,5,6,-4,4,-6,-7,-10,-7,10,-2,-1,9,-3,9,-3,-7,4,-4,4,-10,-6,3,-3,-4,6,-8,-8,-3,9,8,1,-10,1,-3,-3,-7,-1,7,-3,-9,-7,-8,-5,4,10,-5,7,6,-1,-5,2,-5,2,-7,3,4,4,-2,2,10,-8,-5,-10,5,9,-8,-9,4,-7,6,8,9,-1,-10,1,-5,4,-5,10,-8,9,-10,10,-2,6,6,-8,-5,-10,-2,-4,9,6,6,6,-4,1,5,-9,-8,-5,-8,-3,-1,-7,-5,9,-1,-10], dtype = "uint64")#candidate|3973|(280,)|const|uint64
const_3974 = relay.const([[-3,5,-3,-3,-6,6,2,-10,8,2,4,1,8,-5,-1,3,7,10,-1,-9,-3,-7,-6,3,10,4,-3,-6,-4,-3,5,1,-6,-4,-5,7,9,-4,2,-7,-5,8,5,8,-6,-6,-8,3,-7,4,9,9,5,10,-3,4,9,-5,-8,8,7,-3,1,1,-2,-2,-6,6,6,-3,-7,4,-8,2,5,8,-4,-5,6,4,2,-8,9,-2,-1,2,1,-6],[9,5,-8,4,-5,-6,6,10,10,-8,1,3,-4,-2,3,4,-5,-5,-1,4,7,-6,2,3,-3,10,-1,-7,-10,-10,8,6,-2,-6,-10,-8,10,2,-9,5,-7,7,8,5,-5,-10,10,6,-6,4,3,-3,-7,7,3,9,7,-8,-1,4,7,-1,-1,-8,1,3,5,9,2,-7,7,4,3,8,6,-2,-5,9,-1,-3,2,-6,-1,-8,-10,9,-4,-9],[7,-3,-9,-6,-7,2,-6,10,-10,-5,-1,5,10,9,9,3,7,-8,8,-5,-1,-2,-10,2,-9,1,2,3,4,-7,2,-8,3,-9,2,-7,1,-9,-2,-10,-10,2,1,-7,9,-7,-4,-2,-2,2,-7,8,-8,8,10,10,-1,3,10,-6,-3,-10,9,-8,4,-5,-8,-8,10,6,-6,-1,1,-10,5,9,-10,-7,-2,-9,4,9,9,-6,-5,-10,-3,9],[-6,-4,-4,10,-4,2,3,-2,7,9,-1,4,9,9,6,5,-7,-4,-6,7,-3,-5,2,5,1,5,9,1,5,2,-8,-7,8,7,8,-1,7,-9,-3,8,8,-9,-5,7,-10,5,-5,-4,4,4,-9,2,1,3,-10,2,-6,-7,9,3,4,-9,8,2,7,1,3,10,-9,-1,-5,6,-2,-2,-10,2,3,-3,-5,1,4,-7,-9,2,3,-8,-8,2],[9,3,-1,3,6,-2,-2,-2,9,3,8,6,1,-2,10,1,9,9,8,-3,8,5,10,-6,9,-7,-7,2,8,-8,-7,-6,-2,-6,6,5,7,-4,1,6,-9,9,-5,-3,5,9,-8,-8,-1,1,4,-1,-9,-7,-7,10,-5,2,-2,-3,6,-8,-7,7,3,-7,-7,9,5,6,-9,8,5,-4,-6,-3,8,-1,10,-5,9,9,10,3,3,7,-6,-8],[8,-10,-8,9,8,1,9,10,-5,5,8,1,7,-3,-5,-4,2,7,8,-6,-7,4,-10,-5,5,2,-8,-3,1,8,9,-8,7,-3,-3,-3,5,-8,4,-1,5,-10,-6,-8,3,2,-9,4,-8,-2,5,1,5,-4,5,7,1,-3,-2,-4,8,-6,-8,2,9,-7,1,2,-1,2,6,-6,-7,-3,-1,-4,7,-5,-4,1,2,6,9,-7,8,4,1,10],[2,-8,4,-3,4,6,-6,-1,-8,-2,-5,-5,10,-7,-3,8,-10,-8,10,5,-9,2,-9,-4,10,-4,-4,-9,8,5,3,-7,-2,7,-6,6,3,-3,-2,1,-2,8,4,10,3,5,1,-9,7,-4,8,2,-9,6,-1,-3,2,1,-1,7,-6,-10,-4,-1,4,-8,5,-4,5,4,-6,1,2,-3,-2,-7,-3,-9,-3,-10,4,-9,-5,1,-2,-8,-6,6]], dtype = "int32")#candidate|3974|(7, 88)|const|int32
var_3975 = relay.var("var_3975", dtype = "float32", shape = (77,))#candidate|3975|(77,)|var|float32
const_3976 = relay.const([[-5.183372,-0.295383],[-3.592751,5.375664],[1.566212,-0.946566],[-9.354837,-4.300169],[7.110054,0.463244],[-2.167430,-1.265042],[-2.064028,6.349332],[1.356408,6.825593],[9.177524,3.231069],[-3.051392,-3.784995],[-4.857175,2.861843],[5.027528,5.720162],[-7.896905,-7.575746],[4.151041,-8.911495],[7.946110,-1.390587],[-8.712200,-2.900548],[9.140780,6.131118],[-5.254417,-8.592642],[-4.887722,2.702177],[7.686036,-8.864493],[3.245341,4.945742],[6.577961,6.391012],[9.752185,-7.542136],[9.740716,3.907308],[-1.992881,-3.592425],[4.049361,2.025554],[3.623317,5.851790],[3.050529,-5.571841],[4.132247,-9.022524],[6.343578,3.563728],[5.439362,-6.173938],[-4.299554,-1.167258],[-1.632568,-7.363465],[8.355776,0.892790],[-5.801547,1.632327],[-2.433052,1.792217],[8.839684,6.323778],[5.068694,5.533777],[-8.371500,5.196676],[-1.320579,7.774831],[-7.030641,-5.051507],[4.954464,-9.157482],[-9.027974,6.449948],[2.184733,-3.641272],[-7.658527,1.463888],[-4.125294,4.282098],[-1.317373,-3.835556],[-4.810147,7.073275],[4.453122,-6.438681],[6.667639,-7.215922],[-4.209626,0.874053],[-4.335440,2.260242],[7.720465,-5.543084],[8.873764,-3.057765],[-5.959048,-1.045822],[-6.513442,-9.404198],[0.360603,-1.660523],[4.402086,7.920167],[-7.871697,-7.282653],[-4.246930,-2.948213],[-9.660364,-1.240879],[-5.978806,-8.124231],[7.824815,3.910696],[-1.818461,9.294506],[-7.350230,7.988530],[-7.002644,1.097455],[3.880877,-9.861168],[5.457675,5.238200],[8.009378,-7.615270],[-8.081865,1.608633],[4.692203,7.370447],[-5.641175,-9.724614],[-2.506513,-8.722648],[-7.138893,3.437640],[7.007876,8.860723],[-5.199900,1.802285],[-7.588179,4.765394],[-0.260946,-4.937521],[3.440501,2.675124],[-5.125819,-6.868674],[6.948020,-0.168277],[8.151977,1.818889],[2.047138,1.260567],[4.688086,3.939070],[-1.253041,-0.304319],[4.074513,8.935940],[-2.343906,-6.878457],[-4.260652,5.624567],[-0.096522,3.887908],[-4.189695,-4.013663],[2.365351,6.358127],[-7.731168,1.597780],[-6.499003,9.963421],[-9.663227,-7.967186],[-8.026310,-4.927401],[-1.865420,-9.434401],[2.014779,-4.435656],[7.237466,9.411357],[-2.541539,1.961036],[7.913455,-2.466065],[7.996083,-5.381200],[-3.891787,-9.825409],[1.285364,2.476139],[0.152958,-2.681353],[6.308369,-3.753752],[-2.589373,3.390697],[-3.456362,0.561034],[6.618212,9.932835],[-8.731014,5.623625],[8.990421,8.252144],[-2.228250,-7.354480],[-8.518805,-0.103306],[2.103146,-9.389810],[-0.127681,-8.899156],[2.229067,-3.801401],[9.317436,3.847053],[5.136404,-2.859752],[-7.009369,-9.904033],[-8.216391,-2.073930],[6.537881,-5.371178],[0.624400,-4.897089],[1.744851,2.304988],[5.010006,4.742847],[2.002888,-1.490054],[2.868996,6.523767],[-2.150891,-5.453667],[-0.472217,7.352634],[9.564576,-9.629534],[9.938843,-5.716066],[-5.816671,4.067705],[-4.357143,-0.089941],[0.074636,-9.487892],[-1.107642,-6.630693],[0.110368,1.672835],[-4.434399,-2.522035],[6.877566,-3.806275],[2.992149,9.819729],[-5.357611,3.477994],[9.881237,4.532235],[-4.521543,-0.190686],[0.739908,4.002387],[4.386443,9.059833],[-0.811794,-8.472443],[-4.729605,-0.812443],[9.007689,6.968740],[-3.169835,-9.590353],[0.615083,-0.447216],[-7.072235,-6.017598],[6.000110,-4.171571],[-6.622289,-5.177686],[3.622497,-6.989986],[-9.055091,-0.576141],[-3.476301,0.116814],[-4.409105,8.222717],[0.632139,-8.742852],[-2.390088,-3.858055],[-8.570814,-2.524567],[-9.848755,9.408884],[8.711906,1.483222],[-3.784539,-2.803557],[-7.430024,6.073181],[7.919138,-6.063110],[-7.087247,-1.249609],[5.207063,1.872395],[-5.923149,-1.894577],[-0.358070,-4.106853],[-7.641354,2.511589],[2.004223,6.004782],[-0.968863,7.944302],[4.241300,-2.269827],[-8.317540,-9.132507],[1.369747,6.570604],[-3.335603,-0.450223],[-0.273790,-2.024429],[5.101315,5.918290],[6.173778,-5.854799],[-9.152206,-2.210523],[9.778610,6.360840],[8.109158,0.521256],[8.622081,-1.042201],[-6.254629,7.420332],[-0.738735,4.675035],[1.942544,-1.510806],[-8.313719,-2.815641],[-9.134662,-0.574362],[-4.868904,8.730207],[-8.480598,-4.166382],[-6.453734,2.729248],[-3.643317,8.175483],[-6.347143,-7.601790],[3.950934,1.804366],[1.589004,-0.102227],[-9.757239,2.611447],[1.721580,-2.686520],[7.643958,0.912475],[-1.330203,-7.888487],[1.209480,7.290772],[5.735275,-1.305867],[-7.682729,-3.084266],[0.970588,-3.067827],[9.350067,-4.863821],[-0.287412,-3.052320],[-0.551268,6.572829],[-6.651740,0.438086],[7.059505,-1.036517],[-0.192829,-6.917656],[-5.554096,-7.444693],[0.735084,4.028205],[-3.181013,2.080592],[-5.826375,-1.846661],[-0.317924,4.765017],[3.915229,-8.640972],[0.217561,4.462346],[4.114005,5.069871],[-5.981680,-9.757873],[-8.524378,3.288331],[3.447192,0.617025],[-0.559762,-8.365972],[-8.907483,-6.711524],[-2.843585,-8.078224],[3.710617,8.732301],[1.595296,-9.633920],[-8.434832,-2.842696],[-4.854327,9.649967],[-7.100982,9.803442],[-6.644833,4.579105],[-2.601465,4.327346],[0.120193,-0.691618],[2.134452,4.195912],[-2.069660,4.733481],[-5.972648,3.624856],[9.838753,1.373920],[-8.907590,-5.109722],[-7.263078,9.171539],[7.191799,-6.084059],[-1.682683,3.575138],[-4.302647,8.874247],[-0.047739,-3.824557],[-1.368834,6.224686],[-7.678947,9.812249],[-6.533927,-1.719111],[-8.319580,2.185579],[-9.013175,-5.302992],[-9.555547,-5.451183],[-8.069038,-8.902902],[-4.558747,-3.524587],[-7.062286,-1.695896],[-6.884983,4.744154],[-7.606584,1.999564],[1.636000,-4.165837],[-8.130198,8.550542],[3.089427,-6.585137],[2.180535,-1.009952],[6.449804,-1.649434],[0.265284,-0.151131],[-3.274999,-4.245959],[8.033184,2.282648],[-0.368862,-0.947554],[-0.858963,1.690568],[-5.264155,-7.492381],[-0.024006,8.253692],[2.880177,-3.143535],[7.730533,-6.344930],[-4.672610,-4.342616],[-9.820592,8.492764],[5.736103,-5.821383],[1.329175,2.405509],[4.534293,2.078929],[1.346047,0.657367],[-2.340345,6.163474],[-3.112810,4.167642],[-9.526233,8.495353],[-5.679409,4.363280],[-2.700465,6.690918],[9.625602,7.097056],[-4.997587,5.773313],[-2.752547,-0.645437],[-2.957307,-1.135492],[6.088985,1.448677],[1.168760,5.281526],[6.908234,6.144314],[-6.356283,7.401135],[-2.785092,-1.304247],[0.221388,-3.258810],[-0.638585,-6.312310],[-9.175153,0.398683],[5.495147,3.314109],[2.947551,-9.805519],[8.039756,1.229268],[-3.524033,4.898177],[4.401709,-5.706688],[1.059446,-1.933309],[0.142408,-1.881660],[5.617205,-8.394632],[5.087029,8.416714],[-6.644368,9.992016],[-5.352986,7.785646],[-1.232492,2.449251],[-6.080422,-1.331281],[-4.382787,0.594556],[-9.734637,6.464305],[5.756974,-8.840430],[7.757552,-2.533721],[5.311986,0.428655],[-6.918064,-2.839543],[7.616874,-8.978852],[9.663449,-6.203789],[-8.367526,-7.587830],[1.736617,-4.002361],[9.597160,9.967308],[3.736316,-3.814549],[-1.864928,-9.204055],[-3.041165,3.136556],[-7.715359,8.269772],[-1.145844,6.845462],[7.367291,3.308535],[5.281649,2.791434],[-7.596337,2.594892],[-5.475791,-5.955689],[6.054719,2.936215],[-9.902875,1.415634],[7.006385,-2.704162],[-3.361392,-6.159197],[0.756853,5.840543],[8.489285,7.097392],[0.659531,0.087093],[-6.379405,-5.843196],[-8.466389,5.406220],[-7.968188,5.257519],[7.485986,-3.547643],[9.856152,4.824270],[-8.183420,5.714808],[-9.795093,-9.455106],[8.643150,7.401707],[7.357434,8.542362],[-6.048171,-1.743420],[-7.757833,-4.638642],[-6.766278,4.631285],[0.522567,-8.855102],[9.052471,5.535222],[6.884471,-0.195290],[-2.447202,-1.723526],[2.319420,1.435380],[1.117089,5.226518],[-4.229705,8.305280],[-4.709054,-6.102998],[-3.071664,9.621224],[3.700930,0.051670],[-3.634176,3.195900],[4.877576,3.222735],[-7.190244,-1.939102],[-0.819637,8.219762],[1.920356,8.752950],[3.572494,5.656001],[3.176645,-2.922238],[-3.463235,2.499826],[2.735926,1.001385],[-1.847255,9.131069],[5.452815,-6.664404],[4.953955,-4.337511],[4.724077,-0.116802],[-2.358751,-1.119741],[1.094824,-3.759212],[-9.108929,-6.541187],[-9.234558,-1.971929],[-2.512586,1.373091],[-6.667410,-5.346957],[2.030289,-6.670371],[-2.988935,-2.832897],[6.767971,-3.089356],[8.362841,-3.997569],[-2.376022,9.592490],[-4.084041,-2.913822],[9.508415,-0.905720],[6.191911,-4.541976],[-6.189126,7.709961],[1.101761,1.263019],[-0.753884,2.893080],[-2.212125,7.965830],[5.749828,2.111833],[4.216021,-9.711530],[-6.349859,-7.052739],[3.097694,-5.935239],[9.344043,2.502603],[1.802938,2.917834],[-8.179363,4.380035],[-3.244579,-4.850402],[9.803305,1.112769],[0.498710,-9.173992],[5.799659,4.488100],[9.886969,-9.724129],[-6.637754,1.383887],[-5.454896,4.488342],[-9.443416,8.007892],[-2.844825,-2.261050],[8.680096,-1.772234],[9.851405,-0.192405],[5.853594,-4.052613],[-5.939519,2.643785],[-2.421257,-2.617662],[-4.968006,8.020912],[0.263187,2.605287],[-4.894291,4.648903],[-1.614237,-5.689396],[-2.213528,-3.281890],[4.044584,-4.652204],[6.326658,-8.355583],[6.088259,-5.541551],[-4.460094,-4.768330],[-6.462135,0.970839],[2.117334,-5.618509],[-9.021616,5.011886],[-5.796897,-0.527700],[-0.167449,1.162510],[3.297581,4.748511],[-9.531543,-8.654086],[-8.666609,-3.771762],[-4.272215,4.702806],[9.409232,0.138804],[1.170257,-8.599570],[-4.913938,2.697155],[-9.569300,-0.716309],[-1.225939,-8.571339],[2.426140,7.398357],[4.310122,-9.590515],[-3.765982,3.985504],[-6.651220,7.980693],[2.941624,6.414048],[2.449902,4.632617],[5.500557,7.860288],[5.133597,-5.153143],[-2.912238,-9.165926],[-3.960127,2.478699],[0.485781,-5.556398],[-7.095390,0.555674],[9.461479,5.740339],[5.179055,-5.240103],[2.742529,-2.884030],[7.926849,2.720506],[-3.026189,3.728123],[2.677586,5.145489],[0.509279,-1.436441],[-7.103035,-9.325474],[-7.820559,-7.385291],[-8.360553,-8.379835],[-8.925646,-8.214120],[4.319316,2.231983],[-7.295586,-4.156595],[9.771213,-9.588920],[8.165887,-9.449473],[-9.353996,-2.374717],[5.164692,-3.183592],[6.701781,7.055894],[5.686670,-5.468516],[5.199249,-8.192997],[-8.313144,4.989311],[5.533584,9.636135],[-6.861951,-3.293238],[-6.813496,3.769738],[9.710473,4.747284],[-6.151577,-9.880491],[-7.052526,7.769382],[-3.157709,1.284806],[-4.190861,-7.080555],[-1.144755,3.704312],[-7.317344,8.565873],[-4.001863,-5.365541],[-1.744631,-4.992739],[-9.505637,-6.363356],[4.184360,-9.138033],[-8.450994,7.666038],[9.192212,-5.163151],[6.776879,-1.249056],[9.132179,-5.464015],[8.860170,6.634693],[-3.864025,-9.821930],[-7.724688,4.048951],[-3.012011,7.559367],[-4.134319,-9.471624],[-3.779001,4.212031],[-5.733002,6.607242],[-5.509001,0.483344],[-1.667942,0.841640],[-3.971527,4.340077]], dtype = "float64")#candidate|3976|(484, 2)|const|float64
call_3972 = relay.TupleGetItem(func_1918_call(relay.reshape(const_3973.astype('uint64'), [14, 4, 5]), relay.reshape(const_3973.astype('uint64'), [14, 4, 5]), relay.reshape(const_3956.astype('int32'), []), relay.reshape(const_3974.astype('int32'), [616,]), relay.reshape(var_3975.astype('float32'), [77,]), relay.reshape(const_3964.astype('float32'), [1092,]), relay.reshape(const_3976.astype('float64'), [1, 968]), ), 6)
call_3977 = relay.TupleGetItem(func_1927_call(relay.reshape(const_3973.astype('uint64'), [14, 4, 5]), relay.reshape(const_3973.astype('uint64'), [14, 4, 5]), relay.reshape(const_3956.astype('int32'), []), relay.reshape(const_3974.astype('int32'), [616,]), relay.reshape(var_3975.astype('float32'), [77,]), relay.reshape(const_3964.astype('float32'), [1092,]), relay.reshape(const_3976.astype('float64'), [1, 968]), ), 6)
output = relay.Tuple([bop_3958,call_3963,bop_3966,call_3969,var_3970,call_3972,const_3973,const_3974,var_3975,const_3976,])
output2 = relay.Tuple([bop_3958,call_3965,bop_3966,call_3971,var_3970,call_3977,const_3973,const_3974,var_3975,const_3976,])
func_3982 = relay.Function([var_3957,var_3970,var_3975,], output)
mod['func_3982'] = func_3982
mod = relay.transform.InferType()(mod)
var_3983 = relay.var("var_3983", dtype = "int64", shape = (13, 5, 1))#candidate|3983|(13, 5, 1)|var|int64
var_3984 = relay.var("var_3984", dtype = "float32", shape = (336,))#candidate|3984|(336,)|var|float32
var_3985 = relay.var("var_3985", dtype = "float32", shape = (77,))#candidate|3985|(77,)|var|float32
output = func_3982(var_3983,var_3984,var_3985,)
func_3986 = relay.Function([var_3983,var_3984,var_3985,], output)
mutated_mod['func_3986'] = func_3986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4322 = relay.var("var_4322", dtype = "float64", shape = (15, 16, 5))#candidate|4322|(15, 16, 5)|var|float64
uop_4323 = relay.rsqrt(var_4322.astype('float64')) # shape=(15, 16, 5)
func_1918_call = mod.get_global_var('func_1918')
func_1927_call = mutated_mod.get_global_var('func_1927')
var_4331 = relay.var("var_4331", dtype = "uint64", shape = (280,))#candidate|4331|(280,)|var|uint64
var_4332 = relay.var("var_4332", dtype = "int32", shape = ())#candidate|4332|()|var|int32
const_4333 = relay.const([-4,-2,3,-10,-2,8,-5,3,-6,1,1,8,7,10,10,7,-2,-7,-5,-6,5,8,5,-2,-6,2,6,-3,-5,2,-6,3,8,-5,-8,-1,-8,-1,-10,-3,7,-6,-9,-5,-3,2,-5,-9,7,-7,4,-6,-7,-5,-1,7,-4,-2,-1,-7,-3,6,-6,-3,9,-5,-8,-5,-9,5,-7,-9,-5,-5,-7,3,-3,-8,-3,3,-2,3,9,-8,8,-10,4,-9,-10,5,9,7,-6,3,7,9,4,1,2,4,3,-9,5,7,-2,-5,10,-3,9,6,-1,7,-9,-9,-10,-4,-8,9,1,-1,8,-6,-9,7,-6,-6,-9,2,-3,-2,-3,3,9,7,10,7,-5,8,-3,-2,7,-5,2,6,-6,6,7,3,5,-8,-7,3,-7,5,-6,-6,-6,-1,8,-2,10,-8,-1,-2,10,-1,4,-10,-7,-10,2,7,-9,-6,10,3,-8,-4,1,-7,-6,9,-4,-1,-4,5,-7,3,1,-2,9,-10,4,8,-9,-6,3,5,6,10,4,-5,-8,-6,-8,-1,-2,4,4,-3,6,8,-7,-9,-6,1,6,1,-4,4,-5,-1,-7,-3,10,4,5,5,6,5,7,-3,3,7,-1,3,10,-3,2,8,3,-6,-5,-2,-9,4,-4,8,-1,7,8,9,6,2,9,-10,3,1,-10,-10,2,4,-1,3,7,-5,4,2,-8,-9,-6,9,8,-7,5,-7,1,10,4,-3,7,-6,2,2,2,-6,2,-8,-7,9,4,6,-7,-7,-4,-2,8,2,3,1,7,6,3,10,-10,-10,4,2,-4,2,9,9,-1,-9,-6,2,8,-5,-1,-2,3,-7,-10,10,-10,-2,-6,8,1,-2,10,2,-1,10,3,4,4,5,-2,7,-7,3,-9,1,-10,9,-6,-9,-10,-8,1,-1,3,10,-10,7,6,-1,3,-5,6,5,4,8,5,9,7,-4,5,-6,-10,10,-5,9,4,10,-7,-1,-9,7,4,1,-5,4,8,2,-4,-2,-7,4,-6,-1,-9,5,1,5,9,9,-2,3,2,8,10,-5,-2,8,3,-10,-2,-4,9,10,-7,2,-1,-9,-10,9,6,9,-4,7,-6,2,4,-3,-7,-10,2,-2,-5,-6,-8,7,10,4,-4,-1,-10,10,-1,8,6,2,10,-10,5,-1,2,8,7,6,-5,-4,2,-2,9,-2,-9,-2,8,-3,-8,7,6,4,9,5,-10,10,2,-8,-3,-5,-5,-9,-1,-6,-1,-10,10,10,-7,3,5,1,9,-8,8,-3,2,-5,-8,-3,8,8,9,-7,-3,6,-6,-5,4,7,1,-6,6,8,-6,3,-4,2,-8,-2,1,-1,4,-2,-3,4,-1,-7,-4,10,-7,6,3,9,-8,4,-10,6,3,4,-9,10,-9,-6,3,6,9,3,1,5,4,9,-6,-8,3,7,-10,-1,-3,5,2,-7,-3,-5,4,-6,-3,2,9,10,-4,3,1,7,2,-1,-3,-7,1,-3,-4,-3,3,6,-5,-4,-3,-5,3,-8,3,-1,-8,-3,10,3,-6,-3,-2,-10,5,-8,-1,5,-6,-10,2,5,8,10,5,-6,-10,9,7,-8,5,3,10,1,10,-5], dtype = "int32")#candidate|4333|(616,)|const|int32
const_4334 = relay.const([-2.419113,-2.207208,-9.745169,-4.928905,-9.646621,-2.050010,-2.808571,7.944423,-8.133743,9.151302,-6.949940,-5.131423,0.261522,7.279158,-8.517698,-8.461546,-1.854072,3.959123,5.698857,-2.295679,1.356140,-5.206303,-5.247887,-5.803784,8.883829,8.474204,-0.546783,9.389237,-2.114772,-1.305111,8.962730,-5.342975,2.539340,-4.405478,3.745382,-9.867777,-8.752873,-8.901890,4.757415,2.036103,-4.616049,-0.298448,-3.023662,-6.838139,-4.112433,-2.684829,0.308511,5.064679,-2.708807,9.263641,-0.947022,-9.753517,7.653976,4.842109,7.506012,6.435331,-3.192074,-6.016273,1.067118,7.022164,7.837105,5.662001,-3.680245,9.869121,0.874487,-6.419017,2.212280,-3.815187,6.477942,6.074236,-7.884918,-4.427617,-7.813490,5.869515,9.407941,-3.184531,-3.176896], dtype = "float32")#candidate|4334|(77,)|const|float32
var_4335 = relay.var("var_4335", dtype = "float32", shape = (1092,))#candidate|4335|(1092,)|var|float32
const_4336 = relay.const([[6.302908],[-9.872351],[-9.968014],[3.261613],[-3.766103],[4.399869],[5.884704],[-6.675850],[-9.257239],[3.302825],[2.565422],[1.006937],[-1.644008],[3.159343],[5.683396],[-7.634055],[-8.442197],[6.730774],[-3.609968],[2.336575],[3.123848],[8.829219],[5.030684],[9.398380],[-8.201440],[8.310369],[-6.695330],[-2.857913],[4.651561],[-1.908477],[1.557599],[0.630066],[9.870906],[-7.472201],[-4.216825],[3.938906],[5.861875],[-3.492150],[-2.727517],[-0.761168],[-6.596910],[-8.084334],[-0.826510],[7.965497],[-0.454596],[-7.264408],[-2.976220],[7.458064],[7.804143],[9.597256],[9.944146],[6.635950],[-9.449583],[-1.047122],[6.845654],[5.214518],[-2.442600],[0.546605],[-5.296525],[-9.467003],[-0.137288],[-0.033451],[1.498999],[-5.545888],[-4.698756],[-3.532137],[-9.927043],[-8.629737],[0.651925],[-1.995385],[8.403421],[-0.222432],[3.657511],[-9.133137],[1.199675],[7.259466],[-9.298395],[-1.311067],[8.101121],[-5.722076],[8.686797],[-8.122354],[-5.787364],[-2.147972],[1.648732],[-7.454335],[-7.908886],[-6.234930],[-2.637939],[-3.099693],[9.083948],[7.192436],[3.079666],[3.132819],[7.554750],[-3.948533],[-3.645144],[-2.502764],[6.690442],[-5.085069],[9.084791],[3.293097],[-6.537354],[-4.338734],[2.976422],[-8.398716],[-3.206895],[-2.437847],[5.318656],[-6.624413],[4.813288],[5.237648],[9.610654],[-6.437696],[-6.392675],[3.874061],[5.198949],[-8.819800],[-2.155350],[1.820216],[4.705893],[0.328077],[9.858458],[3.749269],[9.442184],[3.441189],[3.363971],[2.023320],[8.692664],[8.673602],[-2.823872],[3.682085],[-9.305672],[1.959629],[-1.192725],[-0.013443],[-7.034684],[6.254160],[7.473682],[9.302212],[3.079909],[6.847568],[6.637085],[7.003762],[-2.558452],[3.054574],[-8.242933],[-8.532902],[-0.431278],[5.396066],[-8.871296],[-1.692608],[8.719722],[4.669459],[-2.170811],[-8.482075],[1.579867],[-1.307026],[-2.189830],[3.116956],[7.474346],[7.569534],[-8.713630],[-4.027818],[-8.141335],[0.214170],[7.186083],[5.692956],[-9.891803],[9.942022],[3.647593],[-7.334987],[1.868226],[-8.900424],[-8.399555],[-1.245963],[-5.724296],[9.499492],[2.272937],[5.885731],[-0.219376],[5.705140],[-2.417570],[-2.656657],[6.353624],[7.523061],[8.311823],[9.878308],[8.871933],[-1.340224],[-3.789384],[9.167583],[9.131947],[8.324427],[-1.254543],[-6.404948],[7.591446],[-9.477645],[-4.266364],[-4.632215],[-3.713001],[0.204180],[8.468747],[-1.039521],[-4.489975],[0.359751],[6.319261],[2.572332],[9.527820],[6.751757],[4.419691],[-2.891752],[5.392882],[-4.164568],[-4.773589],[9.028693],[-8.020184],[-6.374857],[-7.488277],[-9.532366],[-9.635041],[1.055738],[-5.290146],[-7.388927],[6.904838],[4.680908],[8.848694],[7.019920],[-7.189459],[-0.607204],[5.156025],[6.036075],[-7.239575],[1.770230],[-6.221275],[5.030857],[4.336868],[-5.414210],[6.615300],[-1.916513],[6.585583],[5.179400],[0.281153],[6.811440],[-7.723400],[-6.277092],[-6.198685],[-0.274378],[-2.192419],[5.034396],[0.044799],[4.883678],[1.408784],[0.839550],[-8.133529],[3.142555],[1.281874],[-3.106627],[8.837040],[2.656021],[5.214471],[6.469520],[0.665290],[6.932870],[-6.732145],[1.838125],[5.540645],[-7.063487],[-6.475684],[-1.057709],[9.424027],[-8.441683],[-1.291419],[-3.012322],[4.058307],[-2.789352],[4.619827],[-9.263708],[7.502725],[-6.784816],[-1.071111],[4.453522],[-3.178855],[-3.828733],[6.268856],[8.980335],[-6.157854],[-3.853000],[-8.432704],[-8.128417],[-2.553824],[7.293235],[3.072860],[-9.383502],[2.309555],[-2.187192],[-3.244997],[4.448663],[4.266564],[-2.157652],[-5.668555],[-4.347417],[0.908197],[-9.516873],[7.606818],[5.927029],[4.265860],[6.008227],[-4.839672],[5.376023],[3.784339],[1.901951],[0.224572],[-6.409043],[-2.738663],[-4.603944],[8.361959],[1.956438],[4.838521],[-6.811561],[1.625869],[-8.323405],[-3.372586],[9.998576],[8.949894],[-5.733588],[-2.678131],[6.839757],[2.576098],[-0.077054],[-1.206333],[-2.566326],[4.070043],[-0.733342],[7.272791],[2.997963],[9.679985],[9.468315],[-1.978610],[-2.002826],[7.580213],[-0.784719],[4.593267],[-1.782992],[2.518244],[-6.746082],[1.455528],[1.811826],[2.815183],[5.345234],[3.747006],[6.501664],[-4.851963],[-2.574633],[4.786475],[-5.798205],[-9.526330],[-4.615449],[-2.847503],[-1.905216],[2.610571],[5.374046],[8.687996],[-8.883060],[2.163498],[-1.680993],[-7.164164],[7.614449],[-8.036242],[9.379019],[-7.834283],[3.312811],[-7.432147],[-4.157524],[-1.723310],[7.623894],[-2.147594],[-6.472578],[5.083687],[-3.556052],[-4.031066],[4.852093],[-3.573347],[2.589401],[9.512666],[-6.441338],[-2.913636],[-8.723342],[9.369312],[-1.107562],[3.848659],[9.925805],[-0.560977],[3.403211],[-5.917312],[-3.972151],[-5.747382],[-5.052438],[-2.613956],[-3.145141],[-6.703686],[-6.347239],[-4.217030],[-9.317361],[2.873122],[2.027123],[-2.450463],[-7.770820],[-2.787847],[-4.303442],[7.922003],[1.031489],[2.646396],[-0.807797],[8.156046],[1.188298],[2.405411],[-0.549477],[-4.030960],[3.862446],[7.539120],[-4.966815],[-7.354802],[0.625847],[-1.730263],[8.494765],[-7.011603],[-6.995552],[-2.064535],[-7.109709],[7.809106],[-2.041475],[8.208107],[-2.456063],[1.679203],[9.759381],[-6.889877],[-1.722100],[2.326674],[3.902642],[2.231135],[3.197707],[5.696527],[6.910640],[3.204352],[7.312468],[8.090249],[4.071584],[-7.229743],[-3.629286],[-1.916383],[2.174125],[9.393227],[9.858350],[9.693374],[6.833115],[1.614856],[-6.258425],[-5.899251],[6.243813],[7.961144],[-0.125205],[-6.923379],[2.965910],[3.886017],[-2.195955],[-8.626299],[-2.000203],[4.295478],[-8.662897],[-2.856261],[8.125235],[-8.650902],[-7.288851],[-7.772839],[-1.573727],[-4.573155],[-0.818576],[8.718414],[1.714118],[-8.250630],[-2.664811],[0.689304],[-1.761299],[-9.721857],[4.547886],[-7.582995],[-8.972283],[9.865820],[1.833557],[-9.070169],[8.987738],[-1.605988],[1.541799],[-1.360899],[-9.066520],[-1.837895],[4.327044],[4.056236],[-9.501478],[-1.238317],[-0.336016],[2.363656],[9.343121],[9.288506],[-3.439887],[3.800420],[-4.073243],[4.352872],[5.594448],[6.502891],[-4.557317],[-2.929493],[1.513425],[-0.025716],[6.668729],[-3.503787],[8.843775],[-1.252428],[-3.838478],[-7.009827],[-7.214502],[-3.761218],[8.366263],[-0.834076],[3.451008],[0.345378],[-9.623469],[5.120648],[3.277615],[5.772986],[-2.422439],[1.470860],[2.148787],[7.905285],[1.122200],[-0.939199],[7.128584],[4.810833],[0.958262],[5.185566],[4.381124],[-0.783339],[-2.640742],[3.265326],[2.190486],[-4.916992],[-9.298154],[-0.184819],[5.449671],[2.986892],[1.565225],[-9.369080],[0.960694],[8.071624],[-3.134504],[5.271761],[3.670060],[7.658470],[-0.033053],[-2.211342],[7.579712],[8.964471],[-9.252008],[-7.460274],[0.343545],[-0.420340],[8.421820],[2.127124],[-9.089951],[4.832347],[2.293876],[-9.723251],[5.560727],[-1.305148],[3.296622],[5.440057],[9.908977],[-0.773340],[-3.977271],[-2.256632],[2.006862],[-3.908082],[7.705384],[4.254236],[9.451456],[-0.296383],[5.576029],[8.291270],[-6.686884],[-6.536806],[-5.321481],[2.033420],[1.854454],[4.352815],[-7.680495],[8.749055],[0.417031],[-2.183847],[-8.563152],[-8.319791],[6.780514],[-9.323682],[-8.777726],[7.357038],[-0.268033],[-1.121083],[6.970795],[-1.964331],[8.696182],[2.037366],[0.406776],[6.792065],[-1.768758],[-5.233027],[5.602930],[-9.097883],[5.137564],[-3.956559],[1.596962],[1.667219],[5.059583],[-4.653865],[1.497336],[8.718454],[1.297959],[-7.195470],[-3.755014],[2.703193],[7.038495],[3.261883],[-1.670571],[8.502434],[-6.537194],[9.540373],[1.862501],[0.839975],[-2.636239],[-8.582817],[3.979796],[7.172853],[-7.784137],[4.188051],[1.991953],[5.732687],[-3.372412],[-5.888271],[7.525480],[8.897675],[3.176775],[5.945518],[4.109713],[2.206920],[-2.433567],[8.803507],[-7.646746],[-9.377348],[-3.002501],[1.370182],[-6.357633],[-4.984114],[5.629513],[-2.342288],[7.331951],[-2.137605],[-4.136491],[2.978342],[3.266560],[-8.680688],[-7.599506],[0.595359],[-0.572816],[0.952463],[5.806195],[-0.232421],[-6.630351],[5.499047],[3.056148],[-3.806962],[6.229383],[7.735859],[-5.348249],[4.639473],[-4.965826],[0.205540],[5.459815],[4.276528],[3.122332],[-5.385714],[3.319841],[-3.088658],[2.077873],[0.218437],[9.327812],[1.091256],[-2.655465],[6.093184],[-5.628020],[-4.910200],[-5.144129],[1.425195],[-5.382205],[3.797160],[-1.953007],[2.003503],[-0.497526],[3.606434],[8.760520],[5.839582],[-5.490050],[8.210097],[9.041803],[0.597611],[2.681120],[-7.330823],[3.442108],[9.752511],[-5.689730],[1.906994],[-4.704993],[-0.091056],[6.801419],[-4.245506],[-5.459744],[5.819781],[8.921921],[-9.001718],[2.022127],[-2.478147],[6.800689],[-8.154144],[-0.565005],[8.265312],[-3.559344],[9.952387],[8.876048],[-7.568844],[7.972280],[0.175523],[-8.580261],[-0.753985],[7.009179],[-3.993375],[-9.964197],[8.649030],[-9.016442],[1.148760],[4.962173],[3.816610],[4.128363],[-3.417016],[5.979664],[7.423930],[7.085710],[-5.515243],[-7.126499],[7.937558],[8.108043],[-4.635029],[-0.721078],[-8.084562],[-1.237722],[-7.240074],[-4.666749],[1.950281],[-4.238222],[-5.502364],[-9.144239],[4.411028],[-0.151087],[9.848049],[-4.646046],[-5.792288],[4.481114],[-0.392069],[-3.514208],[-0.719941],[-9.731355],[-1.931492],[-8.060078],[-9.635281],[4.782660],[-3.428208],[3.810595],[5.941190],[-6.590770],[-9.623555],[-9.654620],[-7.794675],[6.716678],[0.551039],[1.714689],[-8.725467],[-8.178004],[-5.104933],[3.614991],[-9.754903],[8.614271],[-6.824013],[-8.609739],[-8.913939],[8.917286],[0.927564],[3.657437],[2.562593],[-6.544868],[-1.413473],[-0.320511],[9.994212],[2.563731],[8.200144],[4.258245],[0.628813],[3.833590],[5.082791],[-0.726004],[-4.525908],[-7.130818],[0.577519],[1.691710],[-3.000806],[0.333082],[-1.370690],[-8.133141],[4.135522],[7.410812],[-8.640897],[-1.578430],[-9.972429],[7.717980],[4.000812],[2.270570],[1.130036],[4.000680],[-3.889310],[8.101387],[3.826223],[6.619723],[-4.979974],[0.763995],[-0.735771],[6.750731],[5.813262],[-6.408361],[5.762107],[0.375319],[8.926260],[-6.865246],[-6.313948],[2.678119],[-8.118757],[-4.919159],[-8.956403],[8.170164],[6.355109],[-8.589901],[-8.587494],[-5.964500],[8.734937],[2.347989],[-6.401515],[4.304707],[6.394629],[6.329102],[3.708863],[-4.272065],[6.070331],[0.167117],[2.917707],[3.137902],[-2.913802],[-0.782642],[4.297698],[-4.522033],[0.936197],[3.663183],[3.541508],[-1.922580],[-7.824585],[-9.433772],[-0.263229],[4.990112],[6.682308],[6.256468],[-1.237204],[0.695782],[-0.349977],[6.508617],[-0.536153],[-7.753950],[1.182720],[-1.108141],[-9.721296],[6.458079],[-9.251823],[6.433449],[1.817103],[-5.186372],[5.710253],[4.883951],[-3.939444],[-1.489542],[-2.269008],[-4.301366],[-3.376346],[-3.479189],[-1.169266],[-6.253673],[6.790886],[8.173702],[7.136952],[1.693987],[-1.547400],[-1.991215],[8.718553],[7.652152],[-2.775411],[3.701860],[5.762311],[-6.361085],[-9.065368],[3.395385],[7.125410],[-1.852529],[7.717173],[-1.859385],[-5.693326],[9.008088],[8.037553],[-8.460553],[2.863871],[1.004924],[-9.145699],[-6.763445],[-6.851472],[1.534876],[-9.736986],[-8.365893],[-2.647576],[-2.674211],[-4.691730],[-6.565465],[-1.743901],[5.946850],[4.898790],[2.596244],[7.977468],[8.932473],[7.044185],[8.465170],[-8.894385],[-9.970868],[8.149550],[-1.821630],[3.541969],[-8.877392],[6.067282],[-9.156526],[-2.683221],[5.732800],[-9.109864],[3.196481],[7.122697],[3.867838],[-7.635821],[9.279427],[9.976351],[0.017846]], dtype = "float64")#candidate|4336|(968, 1)|const|float64
call_4330 = relay.TupleGetItem(func_1918_call(relay.reshape(var_4331.astype('uint64'), [14, 4, 5]), relay.reshape(var_4331.astype('uint64'), [14, 4, 5]), relay.reshape(var_4332.astype('int32'), []), relay.reshape(const_4333.astype('int32'), [616,]), relay.reshape(const_4334.astype('float32'), [77,]), relay.reshape(var_4335.astype('float32'), [1092,]), relay.reshape(const_4336.astype('float64'), [1, 968]), ), 5)
call_4337 = relay.TupleGetItem(func_1927_call(relay.reshape(var_4331.astype('uint64'), [14, 4, 5]), relay.reshape(var_4331.astype('uint64'), [14, 4, 5]), relay.reshape(var_4332.astype('int32'), []), relay.reshape(const_4333.astype('int32'), [616,]), relay.reshape(const_4334.astype('float32'), [77,]), relay.reshape(var_4335.astype('float32'), [1092,]), relay.reshape(const_4336.astype('float64'), [1, 968]), ), 5)
uop_4354 = relay.sqrt(uop_4323.astype('float32')) # shape=(15, 16, 5)
output = relay.Tuple([call_4330,var_4331,var_4332,const_4333,const_4334,var_4335,const_4336,uop_4354,])
output2 = relay.Tuple([call_4337,var_4331,var_4332,const_4333,const_4334,var_4335,const_4336,uop_4354,])
func_4368 = relay.Function([var_4322,var_4331,var_4332,var_4335,], output)
mod['func_4368'] = func_4368
mod = relay.transform.InferType()(mod)
mutated_mod['func_4368'] = func_4368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4368_call = mutated_mod.get_global_var('func_4368')
var_4370 = relay.var("var_4370", dtype = "float64", shape = (15, 16, 5))#candidate|4370|(15, 16, 5)|var|float64
var_4371 = relay.var("var_4371", dtype = "uint64", shape = (280,))#candidate|4371|(280,)|var|uint64
var_4372 = relay.var("var_4372", dtype = "int32", shape = ())#candidate|4372|()|var|int32
var_4373 = relay.var("var_4373", dtype = "float32", shape = (1092,))#candidate|4373|(1092,)|var|float32
call_4369 = func_4368_call(var_4370,var_4371,var_4372,var_4373,)
output = call_4369
func_4374 = relay.Function([var_4370,var_4371,var_4372,var_4373,], output)
mutated_mod['func_4374'] = func_4374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4571 = relay.var("var_4571", dtype = "uint16", shape = (10, 12, 14))#candidate|4571|(10, 12, 14)|var|uint16
const_4572 = relay.const([[[-7,2,-9,-3,-1,4,8,6,8,3,3,9,-1,-4],[-3,4,9,-3,4,-7,-1,-4,6,2,5,8,-9,2],[10,-1,-10,3,9,-8,-10,-10,5,-9,2,-5,-9,5],[-1,-10,-10,-2,-5,2,8,7,-4,-10,2,9,3,3],[8,1,-2,8,1,-4,6,-10,-3,-4,-5,7,-4,-1],[4,-8,-1,-2,10,-5,-2,7,3,2,-4,5,3,-9],[10,-3,-4,-7,-1,-8,-8,4,-1,8,8,-2,-6,-4],[-10,-5,2,7,10,3,-2,4,3,10,7,-10,7,7],[-8,4,3,10,-1,1,2,5,-4,-4,5,3,-3,8],[4,5,8,1,9,5,8,-3,10,4,5,1,3,3],[-8,6,-6,-3,10,-4,-3,1,4,4,10,-8,-8,-4],[-4,7,-7,1,5,8,7,-4,-2,6,9,-2,7,-5]],[[-10,6,-5,5,9,7,-1,9,8,10,10,-8,3,-9],[9,-7,-2,-2,-7,1,4,-2,-3,-2,-6,-1,-8,7],[-6,-4,-10,-5,-6,-1,5,-1,-10,-3,-3,3,9,6],[-10,1,-1,4,-9,-6,-7,10,-1,-10,-5,5,2,-7],[-10,10,-8,-10,9,-10,3,3,-3,2,5,4,-9,-8],[-4,1,10,8,6,6,-1,4,-2,-6,2,-8,3,7],[-10,-10,9,-2,7,-6,-7,-8,3,-6,3,-2,1,-1],[4,6,-10,8,-2,-10,-10,9,1,8,3,8,8,-8],[2,3,7,9,8,9,-10,6,-7,7,-6,1,1,-3],[3,-7,-3,8,2,9,7,-9,-9,6,3,4,-10,-9],[8,9,-5,4,-9,-10,-2,-10,-1,5,-7,7,-4,-1],[8,7,-4,-5,5,9,-6,4,7,6,-6,-9,-1,4]],[[7,-2,-5,-1,9,10,-7,-7,-5,10,8,2,-8,6],[-5,-7,-6,-7,1,-4,2,-4,10,-2,4,-10,10,6],[-3,7,5,-10,2,5,-3,-2,10,6,7,8,-1,-4],[10,-7,4,-1,-8,1,-8,3,-3,8,3,7,3,-5],[-4,5,1,-9,8,4,-10,-7,-1,-2,9,10,-4,-4],[-10,1,-8,-2,-10,3,-10,5,-4,-10,3,9,-10,4],[4,10,8,2,8,6,2,8,-8,1,5,9,1,-10],[7,-4,-3,-6,6,7,-1,-3,-4,-4,6,-8,-7,9],[-5,1,-2,-2,1,-5,8,-10,9,-2,6,7,1,3],[2,-8,-8,8,3,-6,-10,1,5,6,7,-6,4,-5],[9,-3,-9,-8,7,8,6,6,6,-5,-1,6,-1,-10],[-6,-9,4,-5,-2,-9,-7,-3,-2,-2,-8,-9,9,8]],[[-8,6,5,8,-9,2,6,-2,-8,-9,-6,9,7,5],[-5,-8,1,-6,1,-6,9,-2,7,9,9,-8,-8,-8],[-4,10,4,-2,-2,-1,-4,-1,-3,9,9,7,-7,-2],[1,9,5,-7,-7,-5,-9,10,-3,8,6,-8,-7,-2],[10,-1,-7,8,-10,-10,6,-4,2,-10,-8,1,-6,-10],[3,-9,-7,-8,9,-6,-3,-3,-2,5,4,-8,-2,6],[-7,-2,10,5,-10,-2,9,7,4,2,-9,-9,2,5],[4,3,10,2,-5,-9,-10,-5,9,-2,3,7,2,-7],[3,10,5,-9,-9,7,9,-10,-7,7,-6,-6,-6,-1],[1,3,-1,-9,8,-3,10,4,8,-6,10,10,6,-5],[1,1,5,5,-8,-2,4,-5,7,-2,5,1,-5,1],[9,4,-1,3,8,2,4,-4,7,-3,-1,1,-6,9]],[[-3,5,-6,5,5,-5,-6,10,-1,8,-4,-4,7,8],[8,-5,10,7,10,-7,-8,7,-1,5,9,-2,6,7],[3,-7,7,-4,-1,-6,2,5,8,-5,-8,3,-6,2],[2,3,7,6,1,10,2,-4,-1,-4,10,-10,-10,6],[9,-5,-7,6,-10,7,-4,-5,5,9,-10,-7,-2,9],[-1,7,-2,2,-3,-5,-3,-6,3,3,3,-4,-5,-3],[7,7,8,-9,-6,-2,-1,2,1,-1,1,2,6,-9],[6,-7,6,2,-10,4,2,-7,-3,9,8,6,-5,-3],[4,-3,-4,7,6,1,2,2,-1,9,9,-8,7,4],[2,-3,9,-1,6,-2,9,6,1,5,8,-6,1,4],[7,10,-7,-10,-8,-1,10,5,-1,1,3,-3,-10,-8],[2,9,-9,-1,-1,-5,3,-3,1,2,-3,3,-9,-6]],[[5,9,7,-7,8,-5,10,-8,-7,-3,9,2,8,-7],[-2,-5,-1,6,-4,-4,-2,1,-10,2,10,-6,3,-2],[-5,-10,-3,6,3,2,5,-10,-7,-7,-10,4,6,-10],[2,-2,10,-2,8,9,-9,9,-10,-3,1,-6,10,-10],[4,5,-1,-10,10,-8,-1,-10,-9,-6,-9,8,10,-9],[-5,-7,1,4,-1,-5,-8,1,-1,4,1,8,1,-8],[-1,-9,9,7,10,-4,-8,3,-3,9,-5,-3,-3,4],[9,2,2,8,9,-1,-9,-1,-7,4,7,3,4,-10],[-9,8,-8,-7,4,-2,-1,2,-10,-6,7,7,1,8],[6,-2,-2,-10,-3,-3,-2,-9,-7,-2,6,-4,-6,-9],[-8,4,-4,-8,7,9,9,-6,-4,-6,8,8,6,8],[-2,10,-3,6,9,4,-6,-7,-4,5,-9,-10,9,-2]],[[-1,-8,7,-5,-10,-6,6,8,-4,6,7,-7,-4,-5],[7,9,-8,-3,3,-3,-10,4,10,8,7,3,7,2],[9,4,5,-5,10,-7,-7,-8,3,3,-3,9,-6,6],[2,-5,-3,6,4,-10,1,-9,-2,-7,8,8,2,-3],[-10,2,-7,1,-7,8,10,6,-7,-2,-2,4,9,-3],[-1,-1,-7,3,1,-4,2,-2,9,-4,2,7,-4,-6],[-7,6,-7,-9,10,-8,7,-1,-3,-3,-10,-9,4,-8],[9,1,-5,3,6,8,-5,8,10,3,2,-6,-5,-7],[-2,-5,-1,6,7,-9,1,-8,-8,8,-8,1,-9,6],[-1,10,10,-4,-6,-10,-10,-6,8,7,2,4,-8,-2],[2,-10,-3,-6,-10,5,-3,-8,5,3,-10,1,-8,4],[10,5,-5,4,-9,-10,-3,4,-1,-8,-10,2,-3,-4]],[[8,9,3,9,-10,6,7,8,-3,7,-9,-4,8,-9],[-9,-2,-10,-6,-2,10,1,-3,4,-8,8,-2,-2,7],[2,-9,-8,1,-1,-10,-3,-6,8,3,-5,-10,-8,-1],[1,-10,-2,6,-1,8,4,-4,-8,-3,2,-10,-1,-9],[3,9,7,-6,10,1,-9,-1,6,-3,-8,3,-4,-6],[-3,4,-6,-9,2,-4,-9,4,-3,-2,2,7,4,1],[-5,3,-3,-4,-9,4,10,6,2,-9,6,-7,-9,-2],[4,-8,-10,7,-7,-6,5,8,9,-7,5,-7,-9,3],[9,-8,-7,-4,-7,-4,-1,1,-10,5,4,-10,10,-1],[-4,-5,-10,-7,-1,-5,9,5,10,10,-6,7,9,-10],[-7,-7,5,-3,7,3,-9,8,-10,10,8,9,-4,-5],[-6,-3,-8,-3,4,-10,-5,1,-1,-2,2,2,1,-6]],[[-10,2,-8,8,-5,8,6,-2,-1,5,-10,5,-10,-1],[-8,7,-10,3,-4,-3,-3,-10,-9,2,-7,-1,3,-10],[3,-3,10,1,3,-9,5,7,3,7,-4,-3,5,8],[2,-10,-9,7,6,-9,-10,-7,-10,-2,-4,8,-7,8],[5,-9,-4,-1,5,2,6,2,2,2,4,7,-1,7],[-8,-10,-1,-9,10,-7,9,-6,-1,-10,8,4,-6,-9],[10,6,10,-10,-7,-5,-8,-1,2,-2,6,5,-6,5],[2,10,1,-9,-2,-2,-7,-5,1,-1,-5,-5,9,-6],[-9,-8,4,-2,-3,-6,9,5,8,10,-8,-2,6,-6],[5,1,-3,-4,6,-4,6,-8,-1,-8,5,-8,-9,-5],[-8,-1,5,7,-2,6,7,-10,1,10,9,1,-6,-6],[-1,-3,4,-4,-7,-6,3,8,4,-5,-4,-9,2,8]],[[10,4,-8,10,10,-10,6,7,-10,9,3,-8,-8,-3],[-6,-10,-8,8,3,8,4,2,6,7,-4,-9,-10,-7],[6,3,-2,8,7,-6,6,4,3,-7,-5,4,-1,-8],[2,1,5,9,7,7,-5,-6,6,8,8,-8,-10,-4],[-7,-1,-10,-8,8,-2,7,1,-2,-1,-9,-8,4,9],[10,4,8,10,-10,2,-8,-3,6,6,-10,-6,10,5],[-2,10,2,1,9,-7,-10,7,5,-2,5,-9,-9,-6],[-1,-2,7,-6,4,-8,-9,-4,-6,-6,4,-10,-7,3],[-3,2,-10,-8,-6,6,2,-7,-9,-7,-3,-5,-2,-5],[5,-7,-9,-4,-5,5,-7,-3,5,7,10,-10,-10,1],[2,-2,-6,-5,8,-3,4,-6,1,9,9,1,-3,-2],[7,-4,9,-6,-5,-9,4,7,10,-8,-3,8,-4,-1]]], dtype = "uint16")#candidate|4572|(10, 12, 14)|const|uint16
bop_4573 = relay.not_equal(var_4571.astype('bool'), relay.reshape(const_4572.astype('bool'), relay.shape_of(var_4571))) # shape=(10, 12, 14)
uop_4584 = relay.sigmoid(bop_4573.astype('float32')) # shape=(10, 12, 14)
func_3924_call = mod.get_global_var('func_3924')
func_3927_call = mutated_mod.get_global_var('func_3927')
const_4590 = relay.const([-7.289396,5.099829,7.884254,1.160939,3.560853,6.147424,-6.621903,-7.607087,-5.132817,-5.199311,-2.682645,8.342063,7.683294,0.921575,3.838968,-6.074624,-0.540438,-4.008031,3.626822,-6.221795,8.565823,-9.850524,-6.329161,-2.311206,6.643424,7.530419,9.856171,5.299492,-5.062975,5.648575,-0.900399,-6.087057,1.474308,-3.632599,-9.749867,3.701402,-8.833912,-2.417652,-3.773419,-4.968801,9.559401,-3.081684,-7.584550,5.064146,-6.410078,-9.417052,-4.067406,-7.039779,5.123587,-1.586107,2.809004,-5.543211,3.540911,-4.482427,1.819773,-5.996503,-6.467625,6.620606,-4.967339,-9.283643,9.062638,1.717148,8.195659,0.563422,-1.905496,-2.945709,-4.222208,0.474005,3.716785,6.418459,-7.460345,5.375234,-6.240635,3.206288,-1.836108,-6.313614,2.330876,9.972643,1.767564,6.394096,2.112898,3.585799,-6.930135,3.064600,-6.572886,9.069580,-1.149388,-7.894196,9.040919,3.339481,2.510566,-5.028842,9.201518,3.834367,-9.235781,-7.551871,-8.666661,7.693789,5.445434,8.103349,-3.654013,-9.654204,7.173274,7.810106,6.090888,-8.704443,-0.930241,9.483214,2.140797,-7.245384,7.354087,3.093955,-0.328680,3.524447,4.606113,-3.765291,1.824191,2.459980,3.980383,0.459201,9.375181,6.439703,-1.865441,-7.356547,3.308613,-5.832324,9.846493,-1.514471,-9.021663,7.726799,-6.716359,8.926353], dtype = "float32")#candidate|4590|(132,)|const|float32
call_4589 = relay.TupleGetItem(func_3924_call(relay.reshape(const_4590.astype('float32'), [11, 1, 12])), 3)
call_4591 = relay.TupleGetItem(func_3927_call(relay.reshape(const_4590.astype('float32'), [11, 1, 12])), 3)
output = relay.Tuple([uop_4584,call_4589,const_4590,])
output2 = relay.Tuple([uop_4584,call_4591,const_4590,])
func_4592 = relay.Function([var_4571,], output)
mod['func_4592'] = func_4592
mod = relay.transform.InferType()(mod)
mutated_mod['func_4592'] = func_4592
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4593 = relay.var("var_4593", dtype = "uint16", shape = (10, 12, 14))#candidate|4593|(10, 12, 14)|var|uint16
func_4592_call = mutated_mod.get_global_var('func_4592')
call_4594 = func_4592_call(var_4593)
output = call_4594
func_4595 = relay.Function([var_4593], output)
mutated_mod['func_4595'] = func_4595
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4635 = relay.var("var_4635", dtype = "float64", shape = (11, 7, 14))#candidate|4635|(11, 7, 14)|var|float64
uop_4636 = relay.acosh(var_4635.astype('float64')) # shape=(11, 7, 14)
output = relay.Tuple([uop_4636,])
output2 = relay.Tuple([uop_4636,])
func_4638 = relay.Function([var_4635,], output)
mod['func_4638'] = func_4638
mod = relay.transform.InferType()(mod)
mutated_mod['func_4638'] = func_4638
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4639 = relay.var("var_4639", dtype = "float64", shape = (11, 7, 14))#candidate|4639|(11, 7, 14)|var|float64
func_4638_call = mutated_mod.get_global_var('func_4638')
call_4640 = func_4638_call(var_4639)
output = call_4640
func_4641 = relay.Function([var_4639], output)
mutated_mod['func_4641'] = func_4641
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5198 = relay.var("var_5198", dtype = "int8", shape = (4, 12, 12))#candidate|5198|(4, 12, 12)|var|int8
var_5199 = relay.var("var_5199", dtype = "int8", shape = (4, 12, 12))#candidate|5199|(4, 12, 12)|var|int8
bop_5200 = relay.less_equal(var_5198.astype('bool'), relay.reshape(var_5199.astype('bool'), relay.shape_of(var_5198))) # shape=(4, 12, 12)
uop_5206 = relay.cos(var_5199.astype('float64')) # shape=(4, 12, 12)
func_4368_call = mod.get_global_var('func_4368')
func_4374_call = mutated_mod.get_global_var('func_4374')
const_5212 = relay.const([0.327284,1.783612,6.114391,1.633481,-5.319599,1.649762,6.403450,9.142714,6.665866,7.171946,6.745371,8.631728,3.244250,-9.180638,-4.151696,3.083611,5.445183,2.547980,-4.793447,6.167488,9.086966,1.964887,0.508357,3.468635,4.748304,6.353179,-8.717462,-0.334685,-8.580875,-4.567870,6.495004,0.603698,-5.750145,3.039013,7.822922,7.874848,-1.560545,-7.786623,5.929502,-9.273189,-3.296122,-2.494883,-6.954763,-1.688494,4.439626,9.265277,7.178743,0.177320,7.073933,-5.526082,-2.395484,-3.349898,-8.034114,-1.754277,-8.656564,-9.594226,-8.475524,8.732706,-0.363588,-2.405761,-3.439991,-9.797080,-9.346264,-6.668155,4.151488,-4.413411,-8.018062,-4.884045,5.214448,5.846612,5.585142,-1.234208,-0.653396,-3.877993,-8.159200,-5.970456,-8.691897,-8.145172,-2.492066,1.008945,8.619334,5.526570,-6.324640,2.183777,-0.380625,8.938134,-5.459900,-4.685664,9.895749,9.669284,8.607891,-8.453918,4.248988,-7.792482,1.256533,7.853654,1.387402,7.659956,-0.480104,-8.619469,5.080883,-2.821628,6.828022,-6.240001,1.383666,-0.228369,5.492169,-5.601859,4.788787,-7.289590,-7.509766,-7.259370,7.489735,6.700645,-2.450610,-9.395775,5.553715,3.245648,9.892465,2.366798,-7.762601,3.504487,2.703662,-8.262606,-6.901069,6.014151,-2.041432,0.984438,9.322053,7.554957,-7.046337,7.572614,-7.529940,-5.491071,-4.344286,-0.423378,-3.064180,-4.478791,7.469836,-5.680610,-1.145832,3.005668,5.906438,-6.807093,2.890588,-6.949555,2.126031,-5.801348,9.722827,-6.730927,-3.748612,-3.968064,-2.704699,-8.384882,4.439234,-9.294964,8.727980,-0.183592,-5.227060,9.822415,-1.616687,3.475953,-6.064870,1.671483,-4.551416,6.474630,-8.901360,8.078222,3.553687,-8.829753,2.407149,-4.842887,-4.739560,0.580003,9.551666,1.585527,0.360958,8.719480,-8.236005,5.127903,-6.573398,2.791976,-9.196392,-5.542546,0.825523,-9.643814,8.671852,4.392906,8.732295,-9.355205,4.872522,-9.966655,-0.034157,-3.183741,-2.748144,1.199206,9.790135,5.431252,-4.928253,8.640205,-1.367079,-7.095773,-3.074198,-7.972707,-6.951391,-8.442507,-3.965975,-9.843354,-8.734069,0.404638,-9.133404,-1.538537,1.557687,5.610996,0.785479,2.239223,-2.152979,9.495136,2.288905,-8.404639,-7.996595,-9.795035,0.671926,2.416582,6.475269,-0.794820,7.595373,2.687761,-3.131249,-0.912516,3.714687,-3.029083,3.527344,-5.099988,9.690678,0.642426,2.839230,-5.938584,-3.402078,8.561350,-7.412768,-2.389104,-1.167818,-4.269500,-9.078622,-1.028150,0.052512,-9.018856,-1.324264,1.799755,7.850252,7.912774,-0.532721,-1.791530,8.920465,0.284032,6.632718,1.899314,0.633709,7.657156,9.047445,-9.533529,-8.153980,0.056911,7.150441,-9.092363,4.874525,-7.178003,0.788480,1.044630,-8.222949,-4.553535,-7.067993,5.184146,8.335044,0.838214,-6.337765,4.239508,-3.363659,1.343268,-7.403551,0.682493,7.798168,9.419075,-8.881352,4.737052,2.308524,-8.097318,1.954437,-4.838724,-7.968243,3.577320,5.820131,3.876861,-4.857194,1.554701,-3.175555,-5.519838,-4.936836,-0.398119,-8.486989,4.830358,9.522229,4.862310,3.632136,-5.162385,-9.910580,-7.761965,-7.198776,2.074138,-2.890195,5.183765,6.911373,-6.382000,-2.362171,-7.260627,-8.791795,-3.215295,-4.103764,5.794177,1.985873,4.389474,9.283733,2.961472,-8.842098,-7.794317,-8.103675,8.283466,-8.800623,3.683557,5.534513,5.545912,-4.991798,8.828478,-4.910294,-9.217631,-5.869825,6.671494,-3.851837,-4.214524,5.497676,0.265253,-6.851088,-5.462701,9.335155,5.879021,2.361209,-1.724815,9.684018,-4.120373,-9.786381,3.792359,2.107919,3.645218,-1.710944,-8.542306,-3.192909,0.646812,-9.735988,6.208272,4.054465,-6.904731,-3.804050,-2.487277,7.298508,4.475021,-9.945694,-1.267417,3.411508,8.908761,6.185264,4.762415,3.554554,7.849137,-3.824602,1.212437,3.309137,3.058612,3.800475,1.562972,-3.844622,-2.827894,-3.464608,-0.503600,-1.908058,2.978927,0.885225,-9.978594,7.800047,2.087544,-7.975107,6.236578,-2.129590,8.327804,6.459259,-0.087615,0.618580,-0.438857,-6.142931,8.913046,-9.910694,-2.675554,-6.974466,-2.646159,-8.757042,4.782646,9.614005,4.363857,2.099613,0.352368,0.094180,9.430185,-8.309198,-4.332339,-0.409083,-7.541048,-7.387665,2.781561,2.084263,-3.695953,2.284187,-9.943202,0.006986,-6.423863,2.278705,2.176633,-0.501989,5.659703,-6.836243,9.311159,-2.405911,0.874670,-5.243070,3.428363,-8.099352,-8.603831,7.835713,-0.010847,-6.474225,-5.972582,-1.855218,-2.019892,-7.155722,-5.766177,-1.397018,3.001531,4.974372,7.980998,3.162298,7.236445,1.651000,4.088610,-3.834218,1.923586,6.219682,-7.491149,1.410307,-5.229998,0.580809,-4.231359,-5.516730,-9.387358,-4.797920,4.388461,-9.506149,6.401136,-0.514878,-1.339241,7.898049,4.327686,4.697044,-7.476849,8.623031,-1.409106,8.856760,-7.777279,7.739609,5.057065,-9.830414,5.220590,6.760365,-2.887548,-9.956242,8.477511,-3.664112,-7.134122,-7.932796,-3.841258,8.009964,-8.485819,5.821079,-9.620715,7.375887,-6.867811,-3.239683,-1.501056,6.173580,-6.858230,-2.091958,1.818856,-0.981054,-4.225415,-4.706858,-7.584074,-1.483403,4.521101,1.737605,-2.353730,0.688515,7.667445,-2.800485,-9.933258,-5.117336,7.140812,-0.664003,-5.545182,-2.556577,8.612940,8.129568,-7.254511,6.725806,-8.041725,1.773352,4.440337,2.046150,2.383030,3.833990,0.904473,-4.812588,-0.969626,2.601128,7.870132,0.569193,2.433926,8.611368,-0.148903,2.758402,2.353071,2.579650,5.675751,5.846810,2.548262,-3.003945,6.351172,6.433536,3.336615,-4.044102,1.303692,-9.622901,-0.758275,-6.470977,-5.687722,3.686991,7.670577,-7.722676,-9.176963,7.556219,-3.432135,-9.526580,-6.907216,5.152241,1.145123,-3.574544,-1.850982,8.029241,-9.030848,9.555266,7.873253,2.608752,-4.732267,2.732333,8.247642,-9.443382,2.956346,8.395878,-4.010087,0.727581,-8.451616,-3.076801,-0.701482,-6.725205,-8.047937,1.022319,-4.539690,-2.999704,5.090018,0.390234,-0.680310,-0.062166,9.023117,4.258120,9.330969,7.491378,-6.322163,-7.986548,1.059129,-6.412215,-2.708842,0.483420,-7.234810,1.589184,4.921037,-4.011932,-5.906547,5.712015,5.686683,-4.367874,-7.090974,-2.384849,6.754392,2.775618,5.423378,-4.860484,-9.741284,8.934624,1.147372,-8.333190,7.113325,-4.611336,0.288278,2.048911,-1.716928,5.113996,8.012133,-4.427276,-1.161687,5.931292,0.972569,-1.920404,5.299635,-0.602022,-0.779110,-0.448703,9.166097,-8.315569,-9.064549,0.243272,8.722709,9.156111,7.002347,3.602141,-0.835958,0.431041,7.501380,4.491412,2.339519,1.759748,-9.961899,-1.435874,4.319559,-2.514707,-1.695585,-1.734818,2.885757,7.951583,0.560460,-5.622560,5.159391,9.896197,9.285125,-3.137624,-8.366466,5.362014,6.473882,0.916522,-4.644145,-8.586503,3.032310,-0.157366,7.191393,0.367843,-6.475487,-2.755981,-8.493221,-4.009085,-1.017093,-3.171073,0.883275,3.670557,0.769963,2.272901,-3.591472,8.116029,-7.297776,-4.179785,2.473812,5.196906,-9.672634,2.396628,4.500786,-0.507862,-4.993968,7.902065,-0.854132,-6.993410,4.677014,6.059145,-1.332705,7.017652,-8.173142,-1.359856,-1.959557,-7.107518,9.034955,4.262729,1.396259,-5.967009,-4.849015,1.807540,-1.341212,6.288841,9.780895,5.661564,3.401389,4.206932,2.781810,6.836104,4.445252,-8.010573,3.515316,1.711253,7.853937,1.695027,7.780192,7.881565,-9.161843,7.778912,7.872669,3.274453,-6.600195,9.978810,-4.147093,6.989208,-3.363078,-0.997713,5.080045,-1.207668,7.826442,-3.439425,6.085198,-1.446371,-0.629720,1.723502,0.286383,-6.625186,3.972125,9.339439,-8.574965,2.837431,-0.877105,6.470504,-5.074789,-9.391365,9.001922,-2.484635,-5.252286,-4.823930,9.126544,8.426697,1.673371,-2.732841,5.683391,-3.678715,-8.314019,-9.914304,-6.492584,-3.103779,8.528291,-8.391540,4.753303,9.673999,-5.622725,6.048250,-5.562587,-4.837536,-2.260784,-0.774237,-6.655563,-2.378596,8.739891,5.238381,-8.896133,-0.906977,-9.567273,-1.361567,1.011762,-5.805993,1.022463,4.842750,-7.020351,1.289648,-2.834499,-0.015491,6.534034,6.720005,6.912524,-5.605207,-2.935519,5.868487,9.877265,8.361292,-9.605037,-6.575202,9.854347,3.171505,6.636235,-9.716674,-6.788083,-8.298378,1.940148,-9.117371,-1.033178,-1.157308,8.430776,-4.811155,7.492500,-5.522034,3.601262,-8.215644,-4.223782,-3.401225,-2.535533,-2.362227,6.439494,-6.931014,-7.192118,7.288135,1.648635,-1.157004,9.945408,-8.991113,-1.842901,-9.874809,8.861856,-2.940478,-6.589515,-8.732786,8.438542,-9.050726,2.495287,-3.617268,9.408858,6.720857,1.524376,-4.561591,-1.437484,-1.887532,6.008546,-2.622117,4.162988,-3.747485,3.874933,-7.554214,0.626597,9.582466,-0.793194,6.197079,0.221273,-3.876380,-4.631717,0.734757,7.790622,8.492842,3.210844,-2.318301,-3.660205,-7.072548,6.317914,-7.502117,5.996827,2.264859,5.767783,-6.371879,6.785834,-7.050162,3.777874,-5.261235,6.077735,6.548225,0.568589,0.428115,-0.563388,7.127523,-7.158140,2.085721,9.824090,6.768815,9.393218,4.105852,2.051543,-8.902769,-7.739967,2.191739,-5.057520,-7.671718,-8.896500,4.249428,1.589908,-7.007371,-1.650688,-6.217671,0.502528,0.088052,6.263919,9.222637,-6.786184,2.090964,1.686230,-3.277841,6.997347,1.156563,-3.734243,-9.848795,-0.755479,0.222723,-3.704313,-3.325033,-9.133056,-5.041919,0.295977,-7.021836,7.364690,-8.195300,-3.715448,-8.239196,2.999380,-1.878900,-8.556850,7.537065,3.047200,-6.854598,-1.606017,3.496827,-2.464201,-2.135096,-6.229572,5.373745,-0.941136,-3.995204,-0.486615,-4.431419,-9.318407,1.934933,-0.876965,9.498844,4.228188,1.678542,3.442719,-5.308760,2.719617,5.343176,9.836756,5.605433,-3.352552,9.141752,2.717302,-1.048064,-3.597399,-1.344631,-4.055943,-3.708305,9.412355,-0.153064,1.756391,-2.009683,9.848884,-2.880723,-0.342378,8.877197,9.352624,9.906450,-6.922803,-7.247391,3.344223,0.872051,4.970195,-9.780513,-7.349050,1.798898,2.606351,-5.298188,9.170868,-7.006134,-6.266471,-6.414617,-5.630690,-9.988289,3.466740,9.184599,-8.401321,-5.162928,-9.349757,-4.810388,7.937351,-6.832873,-4.359707,-9.208427,8.730866,1.088315,-4.728493,0.044429,-0.401108,9.477670,6.174704,-3.797366,-0.741561,0.152588,3.459181,4.567526,0.840871,-1.722092,-5.681014,1.499379,7.057862,4.323216,-0.366216,-1.504760,5.047801,-3.072223,-5.212679,-4.228657,3.030643,3.498813,3.640264,-3.057821,0.199240,-2.581143,7.244274,5.266341,4.365602,-2.771549,-2.825947,-3.235555,-3.116686,-2.589394,4.071405,2.111813,-4.010386,-9.002441,8.448647,-3.099029,8.625273,-9.103134,-9.343659,9.020408,4.866888,8.120011,-9.566861,5.871668,-7.911188,3.521926,-7.004237,-7.799680,5.589752,-7.967633,8.066919,1.209683,-7.603280,4.304663,-4.116271,-0.743160,-7.829543,6.238354,6.943264,-7.748751,-5.231553,8.692386,-0.185850,5.791902,-7.989460,1.715336,-3.687220,-5.538874,-8.137918,2.077827,-4.113463,-9.812101,3.785789,8.220235,-6.897753,-1.954986,3.878264,7.838550,6.959641,-6.747468,5.334594,-1.250236,-9.212728,-5.461383,-1.820314,9.619854,9.328786,-2.446344,5.426205,5.665427,5.135449,-6.789279,2.249305,-2.476201,-4.580544,6.280242,-3.018265,9.153482,-5.786440,-0.430705,7.663924,-9.946718,5.324442,9.842960,-0.269869,4.379803,-4.912309,2.777675,2.617090,4.942365,-7.467613,2.110941,-7.716652,6.607800,-8.582127,9.568000,-6.122949,-3.708537,-0.747124,-9.142797,-5.275375,-0.226945,-8.286167,7.174186,-0.342036,5.520079,5.535735,9.597317,-2.829613,-3.387566,-1.325174,-4.896227,3.068819,7.771282,2.196059,7.672040,5.840198,-4.867993,2.922571,4.979818,-0.744402,-3.921254,-7.207680,5.324490,-2.546497,5.547926,-2.275792,6.585339,7.387118,0.300512,1.032688,-7.245132,5.078453,-7.378177,-0.888930,-7.032158,-7.945392,-2.986693,-9.513838,9.319520,-0.576820,-8.734116,4.550797,-8.120892,-3.987032,3.122224,-4.443133,-7.425511,-4.474586,-1.092451,-7.975279,-3.410046,2.473211,4.286844,-5.379867,2.667708,-8.861660,0.961174,3.591346,-1.751921,-5.092806,7.480078,1.033792,-1.450635,-5.490035,8.202871,8.215870,-3.453466,-2.834646,-8.230036,-9.468088,2.047537,5.346791,-8.824234,2.299608], dtype = "float64")#candidate|5212|(1200,)|const|float64
var_5213 = relay.var("var_5213", dtype = "uint64", shape = (280, 1))#candidate|5213|(280, 1)|var|uint64
const_5214 = relay.const(-4, dtype = "int32")#candidate|5214|()|const|int32
const_5215 = relay.const([-9.296825,5.538451,-2.258601,-5.387607,-8.504252,7.569602,8.353124,7.437248,-4.936697,6.131795,-1.314164,5.243376,4.056790,-7.935634,6.067544,-7.884975,3.578939,-5.144711,3.065931,-1.399099,0.367309,9.374063,-1.943433,-1.773464,-1.525854,6.363903,2.067114,6.246790,-2.897226,5.995223,4.419153,-5.041581,6.345236,5.727265,0.571664,8.599537,8.994030,4.547921,4.281404,-8.969376,-8.022782,-3.071478,-9.023553,-3.342239,6.175248,-5.827673,9.179433,-8.640079,3.183715,6.758301,2.738983,2.423155,5.812345,-5.036465,2.987255,6.239622,-4.488447,1.893361,1.921955,-2.920183,0.251531,-4.666949,2.747188,9.926521,-8.989179,1.944765,7.051597,-8.770980,-3.115560,-6.727690,1.351014,6.103297,3.598935,-9.609708,-6.858631,-0.236457,5.961410,-3.136714,8.693274,9.459279,-7.048797,9.154196,-6.484971,1.017629,-0.413814,-6.688753,2.559353,2.612822,-6.030398,3.255973,-6.875112,-8.892475,-2.775127,-0.258014,-5.456674,6.543848,1.345094,6.976064,-9.705388,-4.824426,-9.041143,-7.426421,-7.506433,-2.325175,6.699763,9.213721,3.718520,5.897973,-1.031027,6.859883,-0.830370,2.999991,9.490198,2.239056,4.167587,-5.766774,-3.717265,2.654053,8.517349,9.143436,-2.091667,-1.993113,-4.733315,4.808480,-7.173035,3.443785,-2.147057,-9.935349,3.040644,6.856776,3.689951,-8.699080,5.425310,-4.151926,-4.478589,0.937704,-2.924730,-8.924575,-6.477164,1.756146,2.903743,0.333866,6.885241,0.559797,9.144231,-1.304624,7.100757,-7.073372,-7.301851,2.618466,-4.307758,0.204043,-2.734230,7.058151,-2.409646,2.353724,7.023825,5.211749,-2.939308,-3.215161,9.813493,-7.398666,5.756023,5.697821,8.748645,-9.653639,-7.520217,-6.057779,-4.298664,8.163783,-5.067392,-0.734349,5.810049,4.171057,-3.555819,7.494336,-4.282340,-0.414156,-2.256430,0.526489,-3.749642,1.651716,-7.654553,-7.574978,0.539603,4.158174,-3.096208,4.060438,0.800472,-1.899013,-4.597148,8.786171,0.747348,7.567634,-8.045189,-5.490298,-2.092764,2.634476,4.484355,4.347766,5.722455,1.559983,-8.729128,2.709797,7.011196,-2.637258,7.767325,-0.042131,2.447084,-2.930534,-9.557902,6.545026,-4.287187,2.636662,-2.334738,-0.084913,0.987883,9.180796,-6.721558,5.501508,-0.138043,-3.800095,-8.195921,6.193023,-3.156205,5.562012,-1.698365,4.138567,7.100706,-8.415351,-1.949010,6.552550,-1.923299,4.249853,1.445755,-1.511986,-0.936081,8.350064,6.954269,2.692679,-0.046659,4.836106,2.830938,1.365103,7.615281,-8.263705,-2.781570,-9.123896,-6.336124,4.935530,-6.074335,-7.495730,-3.419861,1.634871,-8.894360,8.442422,0.037999,6.133573,-0.847072,3.969641,-0.222929,1.745871,6.582707,-7.892886,9.333247,4.968211,0.908500,0.471525,4.881783,-6.023987,0.545124,-4.099781,-9.284898,1.179474,-7.148971,-1.801845,-8.127463,7.297121,3.307059,6.358048,-4.133233,5.827995,-0.134374,8.625332,0.431715,7.933971,-3.371871,-0.870536,9.078232,9.712715,-2.695538,5.309318,6.288945,5.789032,-5.461914,8.291780,5.875096,-8.669384,3.644116,-9.526085,2.859972,3.041754,4.035222,-7.673453,9.758245,9.776074,-8.183362,-5.727740,5.736418,-5.072403,9.046243,-6.283100,-1.414032,-7.277240,5.225163,0.675203,2.754267,-7.595034,-0.322404,2.476692,-8.254272,3.322984,8.169826,-2.340891,0.935718,-4.594604,-2.673600,-7.876263,-3.079987,1.467988,0.365275,-2.408236,2.118814,7.150683,-7.311723,-7.827456,7.014739,7.915194,2.281258,-8.094443,-3.306886,8.012462,2.657029,-8.896012,2.194570,6.897185,-3.440361,3.519661,-9.032811,2.134812,8.596175,1.449755,7.424529,-6.331077,-4.393587,-1.869358,2.684610,-7.440100,6.643493,-0.910283,-3.945287,1.313660,-0.521223,-9.601446,4.956686,4.163130,7.588203,-9.273709,7.906578,-2.497201,4.275468,-6.776911,-8.501229,8.076139,3.368402,-0.449616,-6.424367,-9.496134,-6.497665,1.092759,-7.460384,8.487193,-6.372057,1.619186,-1.323639,1.971267,-4.067885,-0.832045,-0.566817,-6.753177,-0.979239,4.215470,-6.830409,3.483959,8.656636,-7.142214,1.256058,8.735008,4.601365,9.813782,-2.930697,9.887136,-3.232845,-5.502803,-8.227361,4.088992,7.614777,1.876284,-7.944457,1.513302,8.035581,-9.019918,2.986260,-4.697024,-3.190920,-5.307940,1.201880,3.459563,5.091201,-6.517937,-9.721989,-8.085970,2.830643,8.096904,-7.202756,7.390028,-4.353545,-3.322494,4.979925,5.691220,-4.325992,8.556025,8.365444,-8.076318,-0.739257,-4.622579,-7.681355,-2.715852,-7.189733,2.045987,-8.421844,3.534230,-9.827956,-0.477534,-7.040057,0.301487,3.786682,-1.525109,9.888954,-5.043379,-2.595422,-9.759020,8.762179,-9.272522,-0.777531,8.836020,-4.038476,-2.408202,-1.612329,-5.961050,-0.864950,-8.966877,-4.566388,-6.953615,3.401139,6.940232,-0.798836,-4.068193,2.642963,7.080691,-0.673308,-9.391962,6.387378,-2.361290,-7.048997,9.409128,-7.313698,-2.588744,-3.279261,4.817183,7.300374,4.169876,-0.050770,-7.508836,-8.463293,-5.784254,-0.216545,3.573461,4.375658,2.439190,3.341678,-0.066752,-1.099137,-0.605003,6.507911,-2.325949,1.813719,-7.546480,3.306497,3.080710,7.030340,0.962583,-8.349988,2.664753,-6.130954,8.802943,1.868293,5.314539,8.025456,8.460803,7.854980,9.129334,4.053416,0.987825,-3.294290,4.918516,-7.404179,4.747821,9.826460,-8.604997,-2.491102,8.257322,0.062638,5.923233,6.033246,7.626674,8.026707,6.971485,7.001520,5.118079,6.146580,9.654604,3.091678,-0.242853,3.355962,-7.956861,1.239215,-0.801312,8.517177,4.795277,-2.491860,9.169176,5.063515,-9.654100,3.206367,6.154970,-4.406150,-1.783176,5.991591,2.307072,1.157978,-4.862716,4.584028,1.858254,9.137895,6.674190,-7.795985,4.127369,7.948691,-1.817553,5.174274,9.416510,-3.329194,-0.988807,7.362411,-8.100420,3.738862,7.236563,6.894558,8.167441,6.848698,-3.970253,-6.684806,3.427441,-9.576105,-9.142984,5.083653,1.776245,-9.527163,-2.494794,8.846796,-7.097166,3.410729,-8.086150,9.523487,3.232045,-9.074520,-0.457246,1.926852,4.997503,3.010161,-3.099470,8.992269,-2.028424,5.978978,2.092272,9.841150,6.155554,7.670599,-1.222983,-6.876082,3.291522,6.768900,1.639285,-1.405436,-4.141575,-9.030638,-5.028341,9.095035,5.483259,3.654570,4.493622,9.688187,-0.646822,-3.585774,5.960053,-1.636934,-4.886606,-2.824683,7.260375,-6.094806,-5.989657,-1.274633,-3.920523,6.932134,-6.167661,8.721036,4.217307,-2.983463,6.795219,-0.470899,0.899558,-4.740793,8.390826,6.811976,0.150861,-3.985154,1.546175,-6.263256,-2.139554,1.819398,0.898985,6.585437,5.114951,-9.236611,-9.645874,0.958359,2.977719,7.323661,-1.464398,3.688011,-9.665248,4.971104,-6.232616,-5.961860,1.282071,3.905725,-7.459302,-0.120141,5.054315,-7.550428,2.310635,6.784929,4.725411,2.814111,-7.097789,3.563185,8.324988,-5.119243,1.176303,-4.823588,-3.222380,3.353406,-4.562517,8.261986,-5.132311,-4.575660,6.733045,-9.789726,-9.023578,7.685549,8.517449,-3.684020,7.826480,-6.949433,3.297217,-1.002515,8.014090,-1.020688,7.269876,6.434125,5.506835,7.134338,1.331373,-5.698296,-3.725407,-8.072056,-8.625819,-5.783919,7.770493,-7.421815,6.008955,3.662249,-6.666878,5.668885,6.589345,3.152581,-8.142935,3.245814,5.213951,6.516188,3.729806,3.883365,-5.816436,-7.848365,-2.367464,-6.933419,2.042390,-0.383385,8.113710,4.609249,-5.810177,-4.531990,5.174724,2.445439,8.246492,-1.293094,-1.198665,-0.540295,4.349760,3.593696,-3.595330,-7.842142,7.259805,4.446113,-1.892761,4.483306,-0.931648,3.772561,4.184181,-5.704181,6.066516,-2.834547,-0.318709,6.672169,6.230482,7.032063,-3.142628,2.858678,9.173800,9.713647,5.599803,-2.525103,-0.417228,3.132037,-3.952976,-1.261837,5.177082,-3.884621,8.317219,2.276853,-0.083983,-5.906229,-0.155354,-1.966760,5.591561,7.586136,-5.062063,-2.862425,0.683451,-3.942104,9.032993,-8.287184,0.452589,-4.888191,-7.930497,4.471515,-2.607334,9.167749,0.861348,-6.461351,5.052411,8.042895,-8.533185,-9.055908,-4.989713,4.618839,4.136245,-5.730522,-3.308493,-4.805366,-6.180228,1.769255,2.868924,-9.381529,-6.340073,8.723135,-4.935149,4.891710,-1.485227,1.132128,7.246793,-7.543654,-3.871457,6.174956,8.677190,9.820828,-7.400186,4.994481,0.100045,-3.034021,-1.350223,-0.270518,4.473831,0.298373,5.319910,-5.421229,-6.744103,-9.050917,8.454154,7.610729,7.139746,-7.306297,-7.521124,1.734972,7.079903,5.985995,-9.677336,9.358444,-7.515030,8.028477,5.006144,-9.301007,0.505006,-4.061725,-2.607620,1.865360,-5.378805,8.620251,6.452637,-4.363169,6.038543,6.179013,6.005988,6.031647,8.992252,-5.429829,-3.773747,-0.150792,4.342730,-1.987210,2.970871,0.469367,5.538438,-0.586952,9.880007,-3.944808,-0.981051,-7.904387,-4.702746,5.359350,4.704296,-8.212491,-1.551499,8.171982,1.037155,-4.995458,4.611941,-5.622691,-0.849279,-2.268315,9.851073,-3.624699,-8.712153,-5.594475,-0.154660,-5.111635,6.535588,3.265424,-9.208353,3.619432,-4.817946,-1.321922,7.751294,2.339983,9.553945,0.033812,-9.055677,-8.069057,0.040504,4.610835,9.976066,2.207220,-2.584692,-6.919847,1.168146,-5.484909,3.483541,6.107448,1.683222,9.945926,-0.065011,8.141102,-2.383249,5.408247,-0.780898,-2.797086,8.454272,-6.364139,-6.561125,-9.267429,-0.183751,-9.302024,0.386141,-1.618410,-1.111032,5.347260,5.432336,7.037780,-6.642937,2.800669,1.336383,-9.835261,3.960864,-9.138532,-6.710055,5.761150,3.620913,-7.219018,5.068487,2.679383,-3.215277,2.979382,0.692214,-4.016605,3.753664,6.936194,0.628716,4.184782,-9.961182,-2.674782,-2.380105,-8.441561,2.015005,-0.517494,9.891632,-2.572182,-6.960050,7.785415,-8.319796,-5.256364,8.518856,-8.328847,5.417270,4.222628,0.029359,-1.379964,6.422454,5.085992,-8.183591,-2.542414,7.363707,5.623710,-8.290444,-0.761327,-3.119853,-4.509975,-1.647149,-2.226460,3.562261,3.241923,-8.182809,-5.006978,-0.835496,-9.372301,-4.316547,1.695048,-0.740744,3.013899,7.127623,3.216788,-1.959743,-6.553121,9.784902,9.138445,-1.520150,7.242665,-6.421404,7.990719,-2.584581,9.586849,-3.256018,-8.025483,-8.661946,0.395990,1.414288,7.200363,-2.812060,-4.083812,8.909182,-1.994983,2.563615,-2.349112,-6.868218,-7.660176,9.761422,7.305818,-9.201444,-9.694844,6.639653,8.734088,1.415550,0.369497,-6.963232,5.032276,5.261283,1.061684,7.304236,-6.347178,0.119650,-5.956985,0.384417,-2.427735,-4.198970,-6.852897,-8.780246,-6.410713,-0.090216,-6.366536,-2.718688,-9.658846,7.655123,-6.504856,5.287927,-5.876062,5.133886,-2.378865,-3.015189,5.582490,6.705739,7.487415,8.973770,0.041902,0.168113,-6.743821,4.414550,9.702941,-9.977552,-0.129922,-5.028719,2.688713,3.378245,-4.145042,-9.068328,-3.602898,7.061715,-4.636272,-6.602831,5.894239,1.473686,6.079727,-2.181146,1.640357,-0.010540,6.115346,0.351099,-8.030642,-7.834175,-0.537954,-3.239321,-8.291577,-0.700202,-2.183977,8.944791,-2.001093,4.472484,5.695609,-7.197400,5.263396,-7.986857,-0.802030,0.171645,7.408372,7.921738,-3.913892,-6.564899,-7.207515,1.093365,8.202560,-1.406896,3.977450,4.909715], dtype = "float32")#candidate|5215|(1092,)|const|float32
call_5211 = relay.TupleGetItem(func_4368_call(relay.reshape(const_5212.astype('float64'), [15, 16, 5]), relay.reshape(var_5213.astype('uint64'), [280,]), relay.reshape(const_5214.astype('int32'), []), relay.reshape(const_5215.astype('float32'), [1092,]), ), 3)
call_5216 = relay.TupleGetItem(func_4374_call(relay.reshape(const_5212.astype('float64'), [15, 16, 5]), relay.reshape(var_5213.astype('uint64'), [280,]), relay.reshape(const_5214.astype('int32'), []), relay.reshape(const_5215.astype('float32'), [1092,]), ), 3)
func_4368_call = mod.get_global_var('func_4368')
func_4374_call = mutated_mod.get_global_var('func_4374')
call_5217 = relay.TupleGetItem(func_4368_call(relay.reshape(const_5212.astype('float64'), [15, 16, 5]), relay.reshape(var_5213.astype('uint64'), [280,]), relay.reshape(const_5214.astype('int32'), []), relay.reshape(const_5215.astype('float32'), [1092,]), ), 1)
call_5218 = relay.TupleGetItem(func_4374_call(relay.reshape(const_5212.astype('float64'), [15, 16, 5]), relay.reshape(var_5213.astype('uint64'), [280,]), relay.reshape(const_5214.astype('int32'), []), relay.reshape(const_5215.astype('float32'), [1092,]), ), 1)
bop_5220 = relay.add(var_5199.astype('uint64'), const_5214.astype('uint64')) # shape=(4, 12, 12)
output = relay.Tuple([bop_5200,uop_5206,call_5211,const_5212,var_5213,const_5215,call_5217,bop_5220,])
output2 = relay.Tuple([bop_5200,uop_5206,call_5216,const_5212,var_5213,const_5215,call_5218,bop_5220,])
func_5223 = relay.Function([var_5198,var_5199,var_5213,], output)
mod['func_5223'] = func_5223
mod = relay.transform.InferType()(mod)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5223_call = mutated_mod.get_global_var('func_5223')
var_5225 = relay.var("var_5225", dtype = "int8", shape = (4, 12, 12))#candidate|5225|(4, 12, 12)|var|int8
var_5226 = relay.var("var_5226", dtype = "int8", shape = (4, 12, 12))#candidate|5226|(4, 12, 12)|var|int8
var_5227 = relay.var("var_5227", dtype = "uint64", shape = (280, 1))#candidate|5227|(280, 1)|var|uint64
call_5224 = func_5223_call(var_5225,var_5226,var_5227,)
output = call_5224
func_5228 = relay.Function([var_5225,var_5226,var_5227,], output)
mutated_mod['func_5228'] = func_5228
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5818 = relay.const([[[-6.967458],[0.479839],[7.655745]],[[-7.273238],[1.506739],[3.696861]],[[8.156020],[-1.017215],[4.707655]],[[2.741732],[-6.159852],[-3.312553]],[[-3.480167],[-3.292147],[-1.439216]],[[6.263638],[9.502497],[-8.994201]],[[0.642694],[5.077025],[-2.456823]],[[-3.419573],[-2.815126],[4.616953]],[[3.721377],[3.074742],[-0.879245]]], dtype = "float32")#candidate|5818|(9, 3, 1)|const|float32
uop_5819 = relay.acos(const_5818.astype('float32')) # shape=(9, 3, 1)
output = uop_5819
output2 = uop_5819
func_5839 = relay.Function([], output)
mod['func_5839'] = func_5839
mod = relay.transform.InferType()(mod)
mutated_mod['func_5839'] = func_5839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5839_call = mutated_mod.get_global_var('func_5839')
call_5840 = func_5839_call()
output = call_5840
func_5841 = relay.Function([], output)
mutated_mod['func_5841'] = func_5841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5839_call = mod.get_global_var('func_5839')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_5869 = func_5839_call()
call_5870 = func_5839_call()
output = call_5869
output2 = call_5870
func_5878 = relay.Function([], output)
mod['func_5878'] = func_5878
mod = relay.transform.InferType()(mod)
mutated_mod['func_5878'] = func_5878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mutated_mod.get_global_var('func_5878')
call_5879 = func_5878_call()
output = call_5879
func_5880 = relay.Function([], output)
mutated_mod['func_5880'] = func_5880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mod.get_global_var('func_5878')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_6000 = func_5878_call()
call_6001 = func_5878_call()
uop_6008 = relay.sinh(call_6000.astype('float64')) # shape=(9, 3, 1)
uop_6010 = relay.sinh(call_6001.astype('float64')) # shape=(9, 3, 1)
func_1977_call = mod.get_global_var('func_1977')
func_1980_call = mutated_mod.get_global_var('func_1980')
const_6016 = relay.const([3.974628,1.709610,-4.285078,-5.385052,8.972193,4.609194,-9.672111,-6.256737,-7.253501,-4.772921,8.468791,-5.071946,-8.375746,3.277406,-3.067985,0.672663,-4.565509,-5.375907,-4.279001,-1.231742,-2.091589,1.508578,-0.243529,5.214803,-7.228164,1.726935,-1.604551,-6.695793,9.784032,-1.372039,4.654401,6.611125,-6.268901,-3.258785,3.663840,1.359726,-0.699151,-0.597139,-0.131291,-7.765997,4.015528,-9.623571,6.982037,-0.109451,0.152836,3.553955,-4.089526,-9.687566,-6.601691,4.796351,-5.402674,7.250638,-3.403805,1.776607,7.290001,9.279461,8.990757,-4.239656,9.012566,-9.872569,-0.258719,8.712977,-2.863979,3.430629,-2.117716,-3.363573,3.495755,-7.472818,8.578781,-8.446994,9.872388,2.848101,-8.919150,8.758755,4.162678,-9.554206,5.199032,-3.163750,1.913834,-3.956782,2.823076,-4.416469,-8.883250,-2.186656,-3.557809,-8.498638,-0.931942,7.361406,-4.547559,-1.807826,-7.205234,0.570278,-7.918524,2.567330,2.767121,-2.836731,6.410996,-5.448561,5.358028,2.511442,7.241041,7.098680,-4.860897,-5.738471,2.270748,-7.057239,1.117472,-1.913587,2.051064,-3.589441,4.391867,1.014671,5.855702,9.514593,-2.054686,7.532089,-4.766792,-6.890476,8.677296,9.704448,4.990063,-0.706868,1.867502,5.716241,-5.636093,-7.655061,-7.758675,-0.823308,6.298606,-3.822960,7.767475,3.630531,-9.329530,-2.184028,4.199162,-1.434634,9.889279,3.279326,4.913600,2.985743,-7.805504,-4.620925,-9.044044,4.494587,-9.545926,1.298771,7.336348,4.587082,-1.915144,6.062012,-6.900133,2.914552,-3.147277,-5.743388,1.255407,4.081015,3.713970,-2.633828,6.000257,2.792600,6.936924,1.564938,-4.776336,-8.193232,-6.317136,-5.369959,2.509010,-3.657908,-2.031889,-8.155836,-2.450232,-4.368469,0.505121,6.882151,-4.094230,-3.815311,-5.116987,-2.656305,-2.077133,2.253197,-5.207827,4.272337,5.431993,5.829161,2.536784,3.398757,8.571853,0.441833,-7.094652,8.247490,-9.754420,-1.478108,2.419494,2.724237,2.648604,-1.905493,-3.784764,-3.142937,3.333352,7.777933,6.164494,0.525386,-5.748848,8.000365,6.066893,8.289112,-2.631624,-0.002000,-1.624166,5.457392,7.102090,7.957539,-5.652604,5.421941,3.711497,-3.434894,-0.981823,-1.280221,-1.604557,6.253067,-1.510629,9.947831,6.172746,3.123199,8.092978,8.896563,-6.086571,-0.134542,-2.044710,8.741540,3.102371,-5.260467,8.486827,-9.597612,-9.938936,8.475790,6.646790,8.792574,2.091772,-4.810697,-9.739147,7.019892,8.972634,0.575065,6.560465,0.729638,-1.385990,-3.554873,-3.962362,8.798499,8.113943,-4.786753,-1.470407,2.835138,-2.012781,-7.313813,3.280746,9.072364,-8.411241,9.512480,1.319824,-3.762580,-5.013427,7.038471,4.325584,-8.621380,-3.378415,2.391080,-0.189154,-8.786373,5.610673,6.507034,-9.406731,6.645626,8.415202,-1.716255,7.772467,-1.956183,-2.092088,0.200881], dtype = "float64")#candidate|6016|(280,)|const|float64
const_6017 = relay.const([[-4.736047],[-5.787634],[2.899492],[9.642046],[-7.398215],[0.684028],[-4.481073],[-1.819035],[-3.159983],[1.610674],[-6.665120],[-4.382539],[-5.065408],[0.457956],[1.223842],[-0.536362],[-0.368334],[-8.178751],[-4.118218],[6.596842],[5.790078],[-3.767814],[7.509601],[1.506440],[0.020516],[1.935296],[-1.770403],[8.158120],[8.863332],[0.590517],[-4.894587],[-1.802468],[-3.792749],[-7.282942],[-7.822521],[0.403922],[-0.315966],[-7.169227],[5.349800],[6.936523],[-3.094931],[-3.034539],[4.078854],[5.121443],[-5.649165],[5.315104],[6.013671],[8.880481],[3.630798],[-1.313233],[6.028615],[4.119290],[-4.251677],[-2.284192],[5.311810],[-9.997199],[-4.750828],[-7.051226],[-1.247700],[-7.764417],[-6.387355],[5.742923],[2.648547],[9.229101],[-2.162979],[-4.701715],[-2.458619],[2.383094],[3.376544],[-4.945872],[-7.498672],[4.060495],[1.649401],[-7.445281],[1.728300],[-1.317300],[-5.437022],[4.712384],[-3.651021],[-5.769090],[9.246790],[7.579698],[3.208184],[-4.206384],[-9.558805],[2.725242],[0.646794],[8.732551],[9.180475],[-1.255683],[-0.084103],[-1.073938],[-5.651983],[-7.207431],[2.911709],[7.057176],[8.530226],[-6.452153],[1.449611],[-8.325882],[7.203470],[-8.155590],[-9.160850],[6.462890],[7.495537],[-5.489045],[-1.810778],[7.750577],[3.565961],[1.568445],[-5.679921],[1.989883],[4.665545],[-9.169389],[-3.236136],[-4.426847],[1.768805],[-5.859000],[-7.222729],[8.779344],[7.388217],[5.089061],[-2.612034],[-7.473675],[-0.718474],[-9.462580],[-1.566063],[1.835673],[1.859734],[-8.336710],[-9.368858],[9.083920],[-0.509538],[6.124784],[8.454286],[-8.979327],[-6.375180],[-3.139126],[-9.704644],[-8.354342],[8.634265],[-5.538119],[-6.062142],[9.862931],[7.620229],[4.615633],[6.176767],[9.136300],[-1.957393],[-3.547004],[2.517114],[-5.736085],[6.393219],[3.196670],[2.252602],[-0.046498],[-0.246123],[-2.436076],[-1.694784],[2.113789],[-0.067582],[0.303656],[5.877471],[6.089969],[1.985550],[-8.000756],[-4.301612],[2.247593],[0.030725],[-2.815216],[-9.641727],[4.542356],[9.617042],[-6.158539],[-0.302387],[0.757988],[-1.707837],[-4.969174],[-2.825995],[-1.737482],[4.302198],[-5.008753],[0.342919],[8.542338],[-3.582707],[-4.858743],[5.731966],[-7.544144],[9.172592],[-2.453203],[-1.490721],[-1.079009],[2.291823],[-2.365901],[-9.762025],[7.515297],[7.314293],[-4.991174],[2.989178],[-2.670068],[7.270729],[7.813485],[-0.968496],[1.934400],[-8.476173],[5.000706],[0.948721],[0.599760],[-7.811070],[-7.563211],[-5.483075],[8.899735],[-4.869901],[0.309576],[0.103588],[9.002137],[-2.144960],[8.722994],[-9.770179],[-2.485547],[3.059884],[8.367531],[-8.870235],[4.919192],[4.707383],[0.656098],[2.396813],[5.749101],[-7.580558],[-8.506554],[-7.565561],[-9.146036],[-1.505608],[-8.067673],[-3.516678],[0.834172],[-5.961363],[0.980997],[1.288268],[-3.973728],[-5.327824],[8.471496],[-0.108330],[5.118943],[1.663475],[-0.446805],[-5.434752],[-5.118285],[1.542866],[6.748142],[4.589639],[5.332923],[-8.290655],[-2.061915],[0.013379],[-4.780665],[0.835472],[4.131864],[-5.288879],[-8.995899],[-2.830110],[-9.901605],[-6.762709],[3.334139],[3.502427],[9.007138],[3.136798],[-4.816325],[2.251997],[-8.580996],[4.283569],[9.059539],[-6.498457],[-2.920114],[6.297182],[-8.602124],[-2.545005],[-5.081796],[0.020997],[-0.491076],[6.817481],[3.174320],[-4.047089],[-6.110150],[5.540537],[-4.715385],[6.067894],[0.638101],[-9.393167],[-8.553137],[-6.227318],[-3.838492],[0.021973],[4.424284],[-3.005530],[7.791667],[-8.251555],[3.959336],[8.697161],[-6.194744],[-5.941684],[2.093575],[-5.328160],[2.316509],[0.699436],[7.892908],[-2.234005],[-3.295074],[-0.900904],[-8.462975],[6.867903],[-7.976000],[-9.128077],[-3.946931],[6.569054],[-2.509954],[3.055294],[6.149985],[-6.070220],[-5.575462],[1.791827],[-5.716788],[4.837246],[0.717657],[-7.488845],[1.450290],[-6.147870],[3.514865],[2.709289],[-6.788288],[0.420713],[-2.683966],[-8.466975],[-8.636114],[-7.642747],[-5.290399],[-3.327109],[7.830046],[2.146098],[-5.474802],[-0.960054],[3.527990],[5.370834],[6.268878],[-4.689216],[-2.994156],[5.568854],[-8.795087],[-9.228474],[-2.892674],[-5.089003],[-5.342349],[9.495746],[-6.888645],[4.074230],[4.034601],[-6.282859],[-4.412734],[6.443419],[-7.456856],[2.089421],[5.938286],[8.553273],[-6.891835],[5.626041],[-3.244533],[-4.061703],[-9.870195],[-6.460067],[-6.830344],[5.994227],[5.533073],[6.322888],[-9.621172],[-0.564991],[-1.078453],[2.028836],[-7.881236],[-4.481279],[-9.670406],[2.524536],[5.011425],[-0.026961],[-1.756496],[-8.483573],[-4.515235],[-8.933138],[-1.531764],[8.771274],[-4.776670],[9.010568],[0.945623],[4.887820],[-8.310283],[-5.518327],[8.954065],[2.332577],[5.993151],[-7.032238],[7.952465],[2.795663],[1.412119],[8.796290],[4.350166],[-7.121405],[-3.110658],[-8.499623],[-1.495546],[6.410090],[2.440172],[7.640681],[-3.032103],[0.296816],[-9.475394],[7.165481],[5.106948],[9.284830],[-2.281236],[-5.467232],[6.593164],[3.002620],[-2.026638],[3.879749],[2.101786],[0.661578],[1.065307],[0.918969],[-0.699201],[5.936387],[4.470554],[-2.157275],[4.573205],[3.485550],[-8.699008],[9.221949],[-8.405342],[-4.178116],[6.362460],[1.061568],[-3.103240],[3.816443],[5.903785],[4.581872],[-6.696969],[9.654869],[3.276819],[-2.064703],[8.757323],[-4.415929],[6.568563],[-5.918561],[1.048554],[-9.855314],[-5.535858],[4.253971],[6.220044],[-5.867583],[-2.276370],[-1.388724],[0.220412],[-2.289283],[2.194951],[6.281809],[-8.407645],[-3.602776],[-1.430398],[0.780746],[6.319461],[-3.952640],[1.536017],[0.420054],[-0.426873],[7.108443],[8.798203],[6.079154],[5.703699],[-1.347554],[-5.903151],[-7.955512],[1.335259],[-8.187712],[5.758326],[0.440133],[-9.232132],[-8.980131],[-5.530306],[-3.300846],[-5.518704],[2.670795],[3.070659],[-3.810210],[-8.973979],[1.233444],[-0.471800],[4.180276],[-2.687654],[3.101365],[6.892456],[0.880173],[-1.460757],[4.441601],[1.164970],[-7.501565],[2.682540],[5.098725],[-2.959516],[-7.528771],[-8.435349],[-4.004225],[8.700234],[0.044383],[6.094029],[1.777815],[0.383868],[-3.373343],[-5.112163],[-6.241197],[7.479152],[6.879621],[-7.727720],[8.303181],[-7.071493],[0.839879],[1.826784],[-4.885120],[8.677443],[0.748937],[-5.685371],[7.775327],[5.461836],[-0.604100],[1.536898],[2.644166],[4.977864],[-2.976302],[1.287524],[-9.619206],[1.635896],[1.743627],[4.130872],[9.671514],[7.309006],[-9.553417],[4.566997],[1.803986],[9.450975],[-2.418397],[4.641652],[-8.837047],[8.247908],[-5.372304],[-5.904169],[-1.157949],[7.161876],[8.680915],[4.211297],[8.760986],[1.189216],[2.244671],[-8.795678],[8.800252],[-8.612310],[-5.278905],[4.692204],[-3.266682],[4.308794],[5.095551],[8.616469],[2.180158],[0.755579],[-9.107042],[9.156290],[0.626002],[5.766063],[5.114746],[-5.450881],[1.161097],[5.048371],[-7.039719],[-9.829245],[6.975204],[6.643925],[-8.802115],[-6.389905],[1.137702],[-8.287327],[9.294052],[-1.347599],[-3.251150],[0.944874],[7.000727],[-5.501311],[-1.410400],[-6.608308],[-6.236613],[6.725490],[3.329606],[-3.031349],[4.204612],[1.092407],[4.228463],[-9.839430],[-1.925867],[5.258899],[-7.382100],[-1.927907],[-7.218106],[4.580256],[-3.531072],[8.449702],[-2.907354],[-0.661612],[-5.316270],[6.202536],[-4.374513],[-9.655925],[-9.443616],[-9.912604],[7.824244],[9.881800],[-9.177874],[5.487119],[-7.262502],[4.412276],[2.577206],[3.023542],[2.367044],[2.657936],[0.965715],[0.706715],[2.530960],[7.992288],[3.598653],[-4.325933],[7.541140],[-3.825314],[-0.978054],[3.212596],[-6.061193],[7.777267],[8.838985],[-4.742326],[2.645712],[-2.857537],[-3.014716],[-7.054390],[-8.246569],[-7.401082],[4.193296],[-5.846175],[-2.692437],[-2.966227],[2.081311],[-2.078777],[-7.896168],[8.308322],[-6.684746],[-6.708260],[7.534517],[-6.401822],[-5.995373],[0.657259],[-5.686835],[-2.721010],[7.991794],[5.294223],[-2.146422],[-7.398883],[4.478631],[7.016357],[-8.245093],[0.362039],[-9.633326],[-6.140187],[1.132106],[-0.998358],[2.397248],[-0.831595],[0.073875],[6.276642],[9.988312],[-6.585968],[-8.112156],[2.748899],[0.257755],[0.188300],[4.253123],[2.154133],[-1.122276],[1.414720],[-2.215333],[-6.155024],[-0.680095],[-7.175144],[6.055461],[-2.334427],[-0.106282],[-6.101644],[7.386529],[-7.454028],[0.297584],[-4.019990],[-8.689706],[-5.602525],[-9.187850],[-4.291632],[4.159491],[-5.492138],[4.531280],[2.888965],[8.528868],[-1.220648],[5.995672],[-3.115911],[-9.931140],[6.171250],[8.678953],[6.361428],[3.198826],[-4.703512],[6.885986],[3.051001],[4.711585],[-2.358181],[-1.806458],[-1.590082],[2.307937],[2.761895],[9.443494],[5.728454],[-5.210393],[4.956183],[1.315990],[8.380302],[1.455974],[-7.733465],[8.110030],[6.895228],[7.458203],[7.752294],[-3.670663],[6.128226],[-5.706458],[-3.633581],[4.616685],[-1.277783],[-1.094712],[4.004408],[-5.172236],[8.464029],[-5.634313],[-3.931385],[5.503766],[4.592603],[-2.712728],[-3.346587],[-1.727269],[-5.753888],[-9.972489],[-4.120595],[4.147896],[8.878533],[8.243013],[4.188037],[2.957893],[9.706665],[-0.558575],[1.091056],[4.451436],[-7.651311],[-3.117176],[-8.048974],[1.450522],[0.800261],[3.908072],[2.228546],[-5.161397],[7.696776],[3.759958],[4.526939],[8.995123],[-6.279822],[7.770688],[0.362679],[-7.017689],[-9.547382],[-2.496458],[4.571790],[2.289770],[9.734006],[3.331571],[6.032558],[8.373869],[5.815975],[3.025194],[4.098455],[3.794285],[-0.736210],[-3.398144],[2.849628],[-4.232688],[8.635663],[9.236857],[-9.248345],[0.778085],[1.851363],[-2.389092],[8.725358],[4.938180],[-9.455167],[8.085132],[4.907919],[5.099693],[3.499611],[7.782366],[4.365346],[-2.726821],[-4.503522],[0.065004],[5.031262],[-3.021014],[7.281171],[6.229752],[-5.151963],[9.598626],[-8.051138],[3.125236],[8.479899],[7.603364],[-6.901985],[-6.353900],[-1.929177],[-3.802679],[-6.079211],[1.541515],[-4.643420],[-1.521627],[-6.105340],[-7.112071],[3.054350],[1.248907],[9.705221],[1.611220],[-6.188623],[4.178830],[-9.131227],[-1.251157],[5.848583],[3.057925],[-6.552060],[6.646658],[3.012397],[3.346216],[0.822229],[-2.256680],[0.017231],[-9.574642],[-5.404855],[-8.307551],[9.992294],[8.509555],[7.426767],[-2.506796],[-9.496611],[-6.058926],[4.176944],[-3.277363],[2.843780],[-0.324107],[8.754839],[2.722612],[2.401580],[9.532542],[-3.379206],[-0.293742],[-8.573469],[3.302075],[7.446058],[-6.527634],[2.748058],[-9.257410],[-7.407211],[5.060011],[-9.279337],[-3.896134],[6.751126],[8.267717],[-4.839334],[-5.082879],[-6.117518],[-0.973145],[7.612916],[-1.879024],[0.028576],[-1.927935],[7.020415],[3.919809],[1.802213],[4.373669],[4.409680],[-2.326392],[-6.823118],[1.937936],[-2.880456],[4.537210],[-2.876330],[7.858300],[7.069967],[-8.999154],[-6.491897],[0.259518],[8.030329],[5.407816],[-4.662693],[8.368228],[7.984333],[-9.289046],[3.003216],[-1.754314],[4.810985],[-3.548341],[2.488271],[7.125026],[3.301543],[9.711950],[1.104294],[9.141788],[-6.355984],[1.495050],[6.711026],[-7.645272],[-9.390802],[-6.246615],[-7.673714],[-6.537103],[-8.533198],[6.453067],[-8.805466],[-5.140072],[-9.787709],[-1.365978],[0.375756],[-0.020801],[-4.928463],[-8.576741],[-4.351773],[-9.515578],[5.335363],[-2.882297],[2.539159],[7.016293],[8.566707],[5.624358],[-5.674852],[7.112964],[-4.122222],[-0.708925],[5.523143],[1.155438],[-8.733481],[-4.841333],[-4.152934],[-3.705745],[8.895155],[6.299773],[6.744379],[4.282731],[7.945724]], dtype = "float64")#candidate|6017|(968, 1)|const|float64
call_6015 = relay.TupleGetItem(func_1977_call(relay.reshape(const_6016.astype('float64'), [8, 7, 5]), relay.reshape(const_6017.astype('float64'), [968,]), ), 0)
call_6018 = relay.TupleGetItem(func_1980_call(relay.reshape(const_6016.astype('float64'), [8, 7, 5]), relay.reshape(const_6017.astype('float64'), [968,]), ), 0)
func_318_call = mod.get_global_var('func_318')
func_321_call = mutated_mod.get_global_var('func_321')
var_6024 = relay.var("var_6024", dtype = "float32", shape = ())#candidate|6024|()|var|float32
var_6025 = relay.var("var_6025", dtype = "float32", shape = (77, 1))#candidate|6025|(77, 1)|var|float32
call_6023 = relay.TupleGetItem(func_318_call(relay.reshape(var_6024.astype('float32'), []), relay.reshape(var_6025.astype('float32'), [77,]), ), 3)
call_6026 = relay.TupleGetItem(func_321_call(relay.reshape(var_6024.astype('float32'), []), relay.reshape(var_6025.astype('float32'), [77,]), ), 3)
func_1446_call = mod.get_global_var('func_1446')
func_1449_call = mutated_mod.get_global_var('func_1449')
var_6032 = relay.var("var_6032", dtype = "bool", shape = (126,))#candidate|6032|(126,)|var|bool
var_6033 = relay.var("var_6033", dtype = "bool", shape = (1890,))#candidate|6033|(1890,)|var|bool
call_6031 = func_1446_call(relay.reshape(var_6032.astype('bool'), [9, 1, 14]), relay.reshape(var_6033.astype('bool'), [9, 15, 14]), )
call_6034 = func_1446_call(relay.reshape(var_6032.astype('bool'), [9, 1, 14]), relay.reshape(var_6033.astype('bool'), [9, 15, 14]), )
bop_6043 = relay.bitwise_xor(var_6032.astype('int32'), const_6017.astype('int32')) # shape=(968, 126)
func_48_call = mod.get_global_var('func_48')
func_50_call = mutated_mod.get_global_var('func_50')
var_6051 = relay.var("var_6051", dtype = "float32", shape = (336,))#candidate|6051|(336,)|var|float32
call_6050 = func_48_call(relay.reshape(var_6051.astype('float32'), [3, 14, 8]))
call_6052 = func_48_call(relay.reshape(var_6051.astype('float32'), [3, 14, 8]))
uop_6053 = relay.log2(call_6023.astype('float32')) # shape=(77,)
uop_6055 = relay.log2(call_6026.astype('float32')) # shape=(77,)
output = relay.Tuple([uop_6008,call_6015,const_6016,var_6024,var_6025,call_6031,var_6033,bop_6043,call_6050,var_6051,uop_6053,])
output2 = relay.Tuple([uop_6010,call_6018,const_6016,var_6024,var_6025,call_6034,var_6033,bop_6043,call_6052,var_6051,uop_6055,])
func_6057 = relay.Function([var_6024,var_6025,var_6032,var_6033,var_6051,], output)
mod['func_6057'] = func_6057
mod = relay.transform.InferType()(mod)
var_6058 = relay.var("var_6058", dtype = "float32", shape = ())#candidate|6058|()|var|float32
var_6059 = relay.var("var_6059", dtype = "float32", shape = (77, 1))#candidate|6059|(77, 1)|var|float32
var_6060 = relay.var("var_6060", dtype = "bool", shape = (126,))#candidate|6060|(126,)|var|bool
var_6061 = relay.var("var_6061", dtype = "bool", shape = (1890,))#candidate|6061|(1890,)|var|bool
var_6062 = relay.var("var_6062", dtype = "float32", shape = (336,))#candidate|6062|(336,)|var|float32
output = func_6057(var_6058,var_6059,var_6060,var_6061,var_6062,)
func_6063 = relay.Function([var_6058,var_6059,var_6060,var_6061,var_6062,], output)
mutated_mod['func_6063'] = func_6063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mod.get_global_var('func_5878')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_6070 = func_5878_call()
call_6071 = func_5878_call()
uop_6074 = relay.atanh(call_6070.astype('float32')) # shape=(9, 3, 1)
uop_6076 = relay.atanh(call_6071.astype('float32')) # shape=(9, 3, 1)
uop_6078 = relay.atan(call_6070.astype('float64')) # shape=(9, 3, 1)
uop_6080 = relay.atan(call_6071.astype('float64')) # shape=(9, 3, 1)
func_925_call = mod.get_global_var('func_925')
func_928_call = mutated_mod.get_global_var('func_928')
const_6083 = relay.const([8.831437,5.611909,-1.171759,7.353215,-7.617037,7.834580,2.502101,-7.948526,6.756153,-0.269213,9.413013,-7.574293,3.783759,-1.855269,-2.822275,2.921086,4.703517,-2.856135,-6.795969,5.784276,1.745027,-3.971064,0.298191,-4.925153,-9.557073,1.048002,-4.035773,-4.838989,-1.420351,8.703557,-2.591364,3.607150,5.984979,0.780998,5.157829,-2.328821,2.581355,3.777348,6.986096,-4.940831,-0.837973,-7.609703,5.030972,7.880351,6.830493,-5.504186,6.707606,5.639564,-4.530469,-6.493029,8.863903,-3.030711,4.843286,6.620065], dtype = "float64")#candidate|6083|(54,)|const|float64
call_6082 = relay.TupleGetItem(func_925_call(relay.reshape(const_6083.astype('float64'), [9, 2, 3])), 0)
call_6084 = relay.TupleGetItem(func_928_call(relay.reshape(const_6083.astype('float64'), [9, 2, 3])), 0)
output = relay.Tuple([uop_6074,uop_6078,call_6082,const_6083,])
output2 = relay.Tuple([uop_6076,uop_6080,call_6084,const_6083,])
func_6085 = relay.Function([], output)
mod['func_6085'] = func_6085
mod = relay.transform.InferType()(mod)
output = func_6085()
func_6086 = relay.Function([], output)
mutated_mod['func_6086'] = func_6086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mod.get_global_var('func_5878')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_6108 = func_5878_call()
call_6109 = func_5878_call()
output = call_6108
output2 = call_6109
func_6136 = relay.Function([], output)
mod['func_6136'] = func_6136
mod = relay.transform.InferType()(mod)
output = func_6136()
func_6137 = relay.Function([], output)
mutated_mod['func_6137'] = func_6137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5839_call = mod.get_global_var('func_5839')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_6176 = func_5839_call()
call_6177 = func_5839_call()
func_4368_call = mod.get_global_var('func_4368')
func_4374_call = mutated_mod.get_global_var('func_4374')
var_6183 = relay.var("var_6183", dtype = "float64", shape = (1, 1200))#candidate|6183|(1, 1200)|var|float64
const_6184 = relay.const([-2,8,9,8,3,-6,-4,-1,-4,-2,8,9,-10,-1,5,-4,8,-2,-3,-7,-6,-5,3,-7,-8,3,-6,8,-1,8,-8,7,-2,5,7,2,-2,-2,-4,-3,-7,-2,1,6,-2,2,-7,-6,-7,-6,2,8,6,-2,-10,-7,-3,9,-1,-10,1,1,-2,-7,-9,-5,-1,-6,6,9,2,2,-5,3,-6,-8,-6,5,5,9,6,-4,9,-6,-7,3,-3,7,6,5,-3,-10,-2,-7,8,-1,-1,1,-7,5,4,-3,2,6,-10,-1,3,-1,4,-2,-5,-7,9,6,-7,-10,-8,-9,-3,-8,5,5,1,-1,-6,-9,5,7,4,-10,2,-1,2,-3,-4,-7,2,-8,-10,10,-1,8,5,-4,7,-1,3,-1,1,-10,-9,-7,-1,-4,4,-8,4,-3,-9,9,10,-7,1,9,-4,-10,-8,-3,-10,9,-2,-8,-10,5,-9,-5,4,3,-2,9,3,-8,-4,9,10,7,4,-10,8,6,-2,8,5,-1,-8,-2,10,2,-10,10,-9,-2,4,-9,-9,-2,10,-5,5,-1,-8,4,2,4,6,-2,2,-2,-5,-9,-8,5,2,4,-8,8,7,-8,7,10,5,-2,5,-3,7,-7,2,-4,4,2,2,-9,-2,-9,-8,-6,-1,2,-4,-8,-7,-5,-9,-3,-6,4,-5,-8,-2,9,6,-5,-4,6,-1,9,1,7,3,-10,5,9,-9,-8,-4,2,-2,8,5,-4], dtype = "uint64")#candidate|6184|(280,)|const|uint64
var_6185 = relay.var("var_6185", dtype = "int32", shape = ())#candidate|6185|()|var|int32
var_6186 = relay.var("var_6186", dtype = "float32", shape = (1092,))#candidate|6186|(1092,)|var|float32
call_6182 = relay.TupleGetItem(func_4368_call(relay.reshape(var_6183.astype('float64'), [15, 16, 5]), relay.reshape(const_6184.astype('uint64'), [280,]), relay.reshape(var_6185.astype('int32'), []), relay.reshape(var_6186.astype('float32'), [1092,]), ), 3)
call_6187 = relay.TupleGetItem(func_4374_call(relay.reshape(var_6183.astype('float64'), [15, 16, 5]), relay.reshape(const_6184.astype('uint64'), [280,]), relay.reshape(var_6185.astype('int32'), []), relay.reshape(var_6186.astype('float32'), [1092,]), ), 3)
output = relay.Tuple([call_6176,call_6182,var_6183,const_6184,var_6185,var_6186,])
output2 = relay.Tuple([call_6177,call_6187,var_6183,const_6184,var_6185,var_6186,])
func_6194 = relay.Function([var_6183,var_6185,var_6186,], output)
mod['func_6194'] = func_6194
mod = relay.transform.InferType()(mod)
var_6195 = relay.var("var_6195", dtype = "float64", shape = (1, 1200))#candidate|6195|(1, 1200)|var|float64
var_6196 = relay.var("var_6196", dtype = "int32", shape = ())#candidate|6196|()|var|int32
var_6197 = relay.var("var_6197", dtype = "float32", shape = (1092,))#candidate|6197|(1092,)|var|float32
output = func_6194(var_6195,var_6196,var_6197,)
func_6198 = relay.Function([var_6195,var_6196,var_6197,], output)
mutated_mod['func_6198'] = func_6198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6085_call = mod.get_global_var('func_6085')
func_6086_call = mutated_mod.get_global_var('func_6086')
call_6220 = relay.TupleGetItem(func_6085_call(), 1)
call_6221 = relay.TupleGetItem(func_6086_call(), 1)
func_5839_call = mod.get_global_var('func_5839')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_6223 = func_5839_call()
call_6224 = func_5839_call()
uop_6228 = relay.tan(call_6223.astype('float32')) # shape=(9, 3, 1)
uop_6230 = relay.tan(call_6224.astype('float32')) # shape=(9, 3, 1)
output = relay.Tuple([call_6220,uop_6228,])
output2 = relay.Tuple([call_6221,uop_6230,])
func_6240 = relay.Function([], output)
mod['func_6240'] = func_6240
mod = relay.transform.InferType()(mod)
output = func_6240()
func_6241 = relay.Function([], output)
mutated_mod['func_6241'] = func_6241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mod.get_global_var('func_5878')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_6244 = func_5878_call()
call_6245 = func_5878_call()
func_499_call = mod.get_global_var('func_499')
func_502_call = mutated_mod.get_global_var('func_502')
var_6249 = relay.var("var_6249", dtype = "int32", shape = ())#candidate|6249|()|var|int32
var_6250 = relay.var("var_6250", dtype = "int32", shape = (14, 44))#candidate|6250|(14, 44)|var|int32
call_6248 = func_499_call(relay.reshape(var_6249.astype('int32'), []), relay.reshape(var_6250.astype('int32'), [11, 14, 4]), )
call_6251 = func_499_call(relay.reshape(var_6249.astype('int32'), []), relay.reshape(var_6250.astype('int32'), [11, 14, 4]), )
uop_6255 = relay.exp(var_6250.astype('float32')) # shape=(14, 44)
output = relay.Tuple([call_6244,call_6248,var_6249,uop_6255,])
output2 = relay.Tuple([call_6245,call_6251,var_6249,uop_6255,])
func_6262 = relay.Function([var_6249,var_6250,], output)
mod['func_6262'] = func_6262
mod = relay.transform.InferType()(mod)
mutated_mod['func_6262'] = func_6262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6262_call = mutated_mod.get_global_var('func_6262')
var_6264 = relay.var("var_6264", dtype = "int32", shape = ())#candidate|6264|()|var|int32
var_6265 = relay.var("var_6265", dtype = "int32", shape = (14, 44))#candidate|6265|(14, 44)|var|int32
call_6263 = func_6262_call(var_6264,var_6265,)
output = call_6263
func_6266 = relay.Function([var_6264,var_6265,], output)
mutated_mod['func_6266'] = func_6266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6240_call = mod.get_global_var('func_6240')
func_6241_call = mutated_mod.get_global_var('func_6241')
call_6318 = relay.TupleGetItem(func_6240_call(), 1)
call_6319 = relay.TupleGetItem(func_6241_call(), 1)
func_6136_call = mod.get_global_var('func_6136')
func_6137_call = mutated_mod.get_global_var('func_6137')
call_6321 = func_6136_call()
call_6322 = func_6136_call()
output = relay.Tuple([call_6318,call_6321,])
output2 = relay.Tuple([call_6319,call_6322,])
func_6324 = relay.Function([], output)
mod['func_6324'] = func_6324
mod = relay.transform.InferType()(mod)
mutated_mod['func_6324'] = func_6324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6324_call = mutated_mod.get_global_var('func_6324')
call_6325 = func_6324_call()
output = call_6325
func_6326 = relay.Function([], output)
mutated_mod['func_6326'] = func_6326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6085_call = mod.get_global_var('func_6085')
func_6086_call = mutated_mod.get_global_var('func_6086')
call_6357 = relay.TupleGetItem(func_6085_call(), 2)
call_6358 = relay.TupleGetItem(func_6086_call(), 2)
output = call_6357
output2 = call_6358
func_6360 = relay.Function([], output)
mod['func_6360'] = func_6360
mod = relay.transform.InferType()(mod)
output = func_6360()
func_6361 = relay.Function([], output)
mutated_mod['func_6361'] = func_6361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6324_call = mod.get_global_var('func_6324')
func_6326_call = mutated_mod.get_global_var('func_6326')
call_6370 = relay.TupleGetItem(func_6324_call(), 1)
call_6371 = relay.TupleGetItem(func_6326_call(), 1)
output = call_6370
output2 = call_6371
func_6388 = relay.Function([], output)
mod['func_6388'] = func_6388
mod = relay.transform.InferType()(mod)
output = func_6388()
func_6389 = relay.Function([], output)
mutated_mod['func_6389'] = func_6389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6324_call = mod.get_global_var('func_6324')
func_6326_call = mutated_mod.get_global_var('func_6326')
call_6410 = relay.TupleGetItem(func_6324_call(), 0)
call_6411 = relay.TupleGetItem(func_6326_call(), 0)
output = call_6410
output2 = call_6411
func_6432 = relay.Function([], output)
mod['func_6432'] = func_6432
mod = relay.transform.InferType()(mod)
output = func_6432()
func_6433 = relay.Function([], output)
mutated_mod['func_6433'] = func_6433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6432_call = mod.get_global_var('func_6432')
func_6433_call = mutated_mod.get_global_var('func_6433')
call_6450 = func_6432_call()
call_6451 = func_6432_call()
func_3924_call = mod.get_global_var('func_3924')
func_3927_call = mutated_mod.get_global_var('func_3927')
const_6460 = relay.const([5.670467,7.176200,1.653252,-4.228096,-8.657296,8.542157,6.034648,3.403940,8.885818,8.160172,3.453257,-6.133334,4.557521,-9.837328,-3.834639,1.814594,-4.180906,5.865211,2.564840,-6.916012,2.175728,1.042743,5.171938,4.799024,-4.931230,3.687344,3.078936,3.131698,9.294652,0.725703,4.394536,9.847629,6.788718,6.173099,-6.012477,-9.423531,9.279300,-5.304019,1.512695,5.293626,8.957932,1.865192,2.129647,8.255912,-1.418490,-2.117485,6.960817,4.394792,3.045979,-3.142089,-9.616671,1.680038,-0.785220,8.411423,-1.547488,6.283848,5.744299,-7.110498,8.892461,8.648006,0.254551,0.096248,3.047968,5.983040,8.347253,1.528548,0.006584,-1.996319,-7.321858,4.999173,-8.683914,-2.261777,0.410254,-5.708278,-9.075039,-1.100664,-2.509783,3.441020,-4.785921,-4.637346,-3.429132,3.888156,-0.054390,4.854009,4.657247,4.708676,8.422804,-3.219177,9.573719,-2.188282,-4.194903,5.490372,-2.708789,2.393740,0.142432,0.460075,5.892449,0.226620,-0.670755,-0.109475,3.062813,0.752932,-7.194818,0.646368,3.865009,1.304927,-2.413647,-8.606380,0.295462,9.502518,5.812257,-0.420599,-6.184460,-8.672426,-5.560685,-8.832235,6.457137,2.780356,3.105622,9.820444,-5.085182,4.601667,8.091525,7.290215,6.336850,3.075566,8.147741,6.307314,-9.248638,-8.054113,-8.781855,-9.522649], dtype = "float32")#candidate|6460|(132,)|const|float32
call_6459 = relay.TupleGetItem(func_3924_call(relay.reshape(const_6460.astype('float32'), [11, 1, 12])), 1)
call_6461 = relay.TupleGetItem(func_3927_call(relay.reshape(const_6460.astype('float32'), [11, 1, 12])), 1)
bop_6478 = relay.less_equal(call_6459.astype('bool'), call_6450.astype('bool')) # shape=(9, 3, 1)
bop_6481 = relay.less_equal(call_6461.astype('bool'), call_6451.astype('bool')) # shape=(9, 3, 1)
output = relay.Tuple([const_6460,bop_6478,])
output2 = relay.Tuple([const_6460,bop_6481,])
func_6486 = relay.Function([], output)
mod['func_6486'] = func_6486
mod = relay.transform.InferType()(mod)
output = func_6486()
func_6487 = relay.Function([], output)
mutated_mod['func_6487'] = func_6487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6136_call = mod.get_global_var('func_6136')
func_6137_call = mutated_mod.get_global_var('func_6137')
call_6543 = func_6136_call()
call_6544 = func_6136_call()
output = call_6543
output2 = call_6544
func_6547 = relay.Function([], output)
mod['func_6547'] = func_6547
mod = relay.transform.InferType()(mod)
mutated_mod['func_6547'] = func_6547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6547_call = mutated_mod.get_global_var('func_6547')
call_6548 = func_6547_call()
output = call_6548
func_6549 = relay.Function([], output)
mutated_mod['func_6549'] = func_6549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6432_call = mod.get_global_var('func_6432')
func_6433_call = mutated_mod.get_global_var('func_6433')
call_6570 = func_6432_call()
call_6571 = func_6432_call()
func_4592_call = mod.get_global_var('func_4592')
func_4595_call = mutated_mod.get_global_var('func_4595')
var_6580 = relay.var("var_6580", dtype = "uint16", shape = (1680,))#candidate|6580|(1680,)|var|uint16
call_6579 = relay.TupleGetItem(func_4592_call(relay.reshape(var_6580.astype('uint16'), [10, 12, 14])), 1)
call_6581 = relay.TupleGetItem(func_4595_call(relay.reshape(var_6580.astype('uint16'), [10, 12, 14])), 1)
uop_6585 = relay.asin(var_6580.astype('float64')) # shape=(1680,)
func_6085_call = mod.get_global_var('func_6085')
func_6086_call = mutated_mod.get_global_var('func_6086')
call_6594 = relay.TupleGetItem(func_6085_call(), 3)
call_6595 = relay.TupleGetItem(func_6086_call(), 3)
func_5878_call = mod.get_global_var('func_5878')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_6628 = func_5878_call()
call_6629 = func_5878_call()
output = relay.Tuple([call_6570,call_6579,uop_6585,call_6594,call_6628,])
output2 = relay.Tuple([call_6571,call_6581,uop_6585,call_6595,call_6629,])
func_6631 = relay.Function([var_6580,], output)
mod['func_6631'] = func_6631
mod = relay.transform.InferType()(mod)
var_6632 = relay.var("var_6632", dtype = "uint16", shape = (1680,))#candidate|6632|(1680,)|var|uint16
output = func_6631(var_6632)
func_6633 = relay.Function([var_6632], output)
mutated_mod['func_6633'] = func_6633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6240_call = mod.get_global_var('func_6240')
func_6241_call = mutated_mod.get_global_var('func_6241')
call_6656 = relay.TupleGetItem(func_6240_call(), 1)
call_6657 = relay.TupleGetItem(func_6241_call(), 1)
func_6085_call = mod.get_global_var('func_6085')
func_6086_call = mutated_mod.get_global_var('func_6086')
call_6661 = relay.TupleGetItem(func_6085_call(), 2)
call_6662 = relay.TupleGetItem(func_6086_call(), 2)
output = relay.Tuple([call_6656,call_6661,])
output2 = relay.Tuple([call_6657,call_6662,])
func_6664 = relay.Function([], output)
mod['func_6664'] = func_6664
mod = relay.transform.InferType()(mod)
output = func_6664()
func_6665 = relay.Function([], output)
mutated_mod['func_6665'] = func_6665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6388_call = mod.get_global_var('func_6388')
func_6389_call = mutated_mod.get_global_var('func_6389')
call_6668 = func_6388_call()
call_6669 = func_6388_call()
output = relay.Tuple([call_6668,])
output2 = relay.Tuple([call_6669,])
func_6675 = relay.Function([], output)
mod['func_6675'] = func_6675
mod = relay.transform.InferType()(mod)
mutated_mod['func_6675'] = func_6675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6675_call = mutated_mod.get_global_var('func_6675')
call_6676 = func_6675_call()
output = call_6676
func_6677 = relay.Function([], output)
mutated_mod['func_6677'] = func_6677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6486_call = mod.get_global_var('func_6486')
func_6487_call = mutated_mod.get_global_var('func_6487')
call_6690 = relay.TupleGetItem(func_6486_call(), 0)
call_6691 = relay.TupleGetItem(func_6487_call(), 0)
func_6631_call = mod.get_global_var('func_6631')
func_6633_call = mutated_mod.get_global_var('func_6633')
var_6698 = relay.var("var_6698", dtype = "uint16", shape = (4, 420))#candidate|6698|(4, 420)|var|uint16
call_6697 = relay.TupleGetItem(func_6631_call(relay.reshape(var_6698.astype('uint16'), [1680,])), 1)
call_6699 = relay.TupleGetItem(func_6633_call(relay.reshape(var_6698.astype('uint16'), [1680,])), 1)
output = relay.Tuple([call_6690,call_6697,var_6698,])
output2 = relay.Tuple([call_6691,call_6699,var_6698,])
func_6700 = relay.Function([var_6698,], output)
mod['func_6700'] = func_6700
mod = relay.transform.InferType()(mod)
var_6701 = relay.var("var_6701", dtype = "uint16", shape = (4, 420))#candidate|6701|(4, 420)|var|uint16
output = func_6700(var_6701)
func_6702 = relay.Function([var_6701], output)
mutated_mod['func_6702'] = func_6702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6712 = relay.var("var_6712", dtype = "float64", shape = (3, 7, 14))#candidate|6712|(3, 7, 14)|var|float64
uop_6713 = relay.asinh(var_6712.astype('float64')) # shape=(3, 7, 14)
output = relay.Tuple([uop_6713,])
output2 = relay.Tuple([uop_6713,])
func_6715 = relay.Function([var_6712,], output)
mod['func_6715'] = func_6715
mod = relay.transform.InferType()(mod)
var_6716 = relay.var("var_6716", dtype = "float64", shape = (3, 7, 14))#candidate|6716|(3, 7, 14)|var|float64
output = func_6715(var_6716)
func_6717 = relay.Function([var_6716], output)
mutated_mod['func_6717'] = func_6717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mod.get_global_var('func_5878')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_6726 = func_5878_call()
call_6727 = func_5878_call()
func_4368_call = mod.get_global_var('func_4368')
func_4374_call = mutated_mod.get_global_var('func_4374')
const_6733 = relay.const([-2.359011,-1.934298,-8.027662,0.090599,-6.510900,9.019650,-7.436870,-2.136827,-4.029698,-4.033631,-1.869927,6.298968,-0.762697,-4.037563,8.648493,3.895125,8.277742,-1.456655,6.507896,-6.905855,-6.358429,3.972498,-4.051963,-1.323724,0.285717,-6.150133,3.563198,-3.630440,-7.414781,4.955879,-2.300020,7.989566,1.970914,7.184801,2.122417,-2.965298,8.095803,-4.853883,-2.695208,3.571421,3.078271,7.485206,1.307204,-4.352459,-6.609960,6.368010,-6.509586,3.445344,-6.253914,7.000874,-7.570299,5.000481,2.149638,9.453329,-3.116139,3.326726,-8.446611,6.007461,-6.536488,9.409586,2.838589,8.643779,6.433514,2.924999,8.798965,8.122834,3.981666,5.422683,-9.300194,-3.893493,9.113922,-6.162868,-8.801191,0.651799,-1.747739,-7.009921,0.277430,3.988991,-6.163943,-3.338800,3.394064,2.514313,7.440314,9.378986,8.142748,-6.844392,5.258789,1.397524,-3.233634,-3.447979,8.784261,2.248210,-2.398423,-7.606688,0.678296,-0.753138,-7.637487,1.700935,9.553776,-5.378957,-9.865010,5.620001,5.744587,-1.890596,-5.489241,-8.037155,2.889485,-6.564096,7.837459,-2.183704,-5.155560,5.510618,-0.235596,-4.161918,-7.109516,-5.906685,7.002299,-1.669194,-9.135253,5.566818,-1.329957,3.346885,4.037000,1.298794,-7.636790,7.810980,6.339369,5.821979,-0.453882,2.516342,-1.764358,0.070746,7.469832,8.459978,-5.852092,-2.967360,-4.701410,-4.624110,-7.584114,-1.648291,8.396402,0.090477,8.443745,-4.143303,-9.084395,-8.580496,-5.967172,-5.646447,6.909186,5.730644,-5.665910,-1.607185,1.005860,-8.448572,2.687361,-1.086927,6.171190,3.153699,9.337875,-2.547455,1.124445,-9.081452,-9.488033,0.831412,-3.641415,-7.841764,4.709827,-5.712232,5.026205,-0.567121,4.641570,-8.043563,-4.599692,3.122560,1.971060,8.950754,-1.316513,-2.252618,-1.250463,7.834787,9.081019,-7.196215,-3.070801,7.145039,2.402886,-6.782325,4.693520,7.832250,-2.927072,3.096269,-0.227131,-8.464703,-7.527307,-3.962073,5.424532,-6.406754,2.976932,4.768666,4.079382,4.667464,-0.032050,9.796933,-6.723839,6.518147,-4.180253,7.235423,4.302720,5.412544,-8.773024,-8.030206,0.804707,-7.983528,5.779177,8.692014,9.347733,-9.647808,-0.990170,9.060536,-3.294431,-4.623326,6.093309,-6.488310,5.117965,-2.734209,9.183599,5.124003,7.700024,4.454339,5.239364,6.043596,8.943807,-1.693968,-6.044340,7.964514,-7.249335,1.133607,3.223925,-1.739360,0.020399,-4.309220,-1.245559,-1.656531,-8.131066,-1.748342,-8.874726,-3.846161,6.020350,7.160603,-5.268625,8.554203,-0.875222,-8.513547,-5.529365,2.168138,8.835771,-9.150323,1.747695,-5.321253,-3.210773,-8.365924,-5.497722,-8.289342,5.408118,1.978307,-9.382649,2.888367,7.501561,-5.362313,-4.350831,-2.930376,-9.779901,5.798052,4.973508,9.050958,4.862851,-0.794868,-3.864116,3.175913,-7.031217,9.258470,2.029771,-8.033820,-2.694131,-7.152406,-6.190539,-6.545181,4.753819,-2.476610,2.182822,-4.513472,9.540852,3.201576,-2.142784,-2.291163,2.513273,8.034627,-4.556408,-2.637982,6.343562,3.748036,9.713533,-7.821466,-8.819571,0.445335,-8.311309,-8.835873,-1.092611,3.360312,-9.987634,8.811371,5.718487,1.207386,-7.915867,-7.951561,-2.340346,2.254152,8.764540,9.603620,8.722906,-5.500422,-4.807825,3.548660,-0.939483,1.842694,-3.885771,-5.209734,-9.582450,1.507235,6.436475,-8.566510,-8.603200,7.567064,2.530633,3.820870,6.115008,-8.311492,-4.393283,-8.344376,-3.957828,5.858294,4.489408,-7.000587,8.889559,-7.599948,7.044209,4.469210,0.078488,3.675434,6.447976,1.140437,-3.883026,-8.339891,3.266876,8.555825,4.957257,7.691337,4.663208,-7.396124,1.089663,5.895946,9.668074,-2.363855,-5.823571,3.632399,-3.293018,-7.318085,-8.002497,4.400512,-9.375826,6.168264,-3.831757,-0.028432,-5.041409,-9.696829,6.360822,-5.799960,-1.886669,4.788911,-2.498218,-1.706556,4.761227,-5.609179,-2.805793,-9.401688,-8.912355,-4.517646,-2.602437,-7.874039,8.559008,-1.503355,0.677619,3.257186,-9.874608,-5.547992,7.616853,7.026572,6.437618,-3.635693,-8.684650,-1.891514,-7.911190,4.341154,3.900334,6.437792,-4.494296,-8.607077,-4.226780,-5.357778,-7.470641,9.203026,0.190909,5.588144,-3.379426,-5.567979,-5.065844,-2.952275,0.608374,8.543238,2.871583,1.668014,-0.794304,6.892292,6.527051,9.782214,-7.584975,5.832107,-0.217881,6.126114,-0.396364,7.196638,-7.941750,4.370158,1.598729,4.050781,3.004357,-2.245864,-5.834271,-1.515531,1.915539,7.883453,3.397913,-4.291364,9.697174,-7.427800,5.474659,-6.248857,9.544761,-5.260846,-8.329904,-8.008174,-7.935305,-3.748721,-9.425572,3.169845,-0.598680,-2.685426,0.199447,9.565896,-6.588875,3.136298,3.846047,1.895102,2.414638,6.430063,1.833110,-8.138835,8.513488,-8.366251,4.123189,2.060041,1.624345,8.606527,-7.490025,0.410543,6.878762,5.596322,3.959107,2.477628,-0.568078,-8.507614,-4.393186,3.467768,2.134702,-0.860812,7.047269,2.015176,7.920914,-2.508643,3.747504,-6.238694,-8.985694,-3.620244,-8.120566,-7.312001,-9.679479,0.215594,1.517967,-9.767280,-0.394557,-0.352505,2.549518,-0.731259,-4.606416,-2.736001,7.521416,-4.970758,-9.037361,3.239163,2.592891,0.607484,-2.469932,-9.633650,-5.121506,3.816454,5.486523,-3.656960,0.463326,4.835511,0.286867,5.852966,-9.541974,-9.683547,-3.359326,-2.578367,-1.341495,-0.270131,-6.605662,-7.704017,9.864308,7.184576,4.250350,1.830236,5.286359,0.480367,3.820339,4.761638,-4.872812,-4.789835,1.092911,-2.891792,5.926051,-0.624034,-2.824509,-5.004947,-3.155926,-3.638072,7.357480,-0.843823,6.153732,-3.563652,6.292113,-0.556670,8.062002,-0.108978,0.885969,-6.518683,9.742053,-2.202852,-3.476590,-7.430530,4.912050,-1.843243,-0.530078,1.232887,-1.151827,-6.959051,9.347650,-9.195854,-9.189523,7.343756,0.580883,-1.757695,-3.386660,-7.008001,8.393609,-3.689359,-0.417630,0.213324,2.323759,-3.337403,-1.546389,9.703745,7.755276,6.641801,1.465290,-4.461875,-9.832997,9.333402,5.011763,1.995400,-3.528022,0.385439,7.810241,-7.006677,7.591855,-2.507946,1.695005,9.243263,2.680922,-2.138865,2.792405,-6.644071,1.201514,5.180808,8.309538,9.484879,-5.309820,-1.678070,-6.006909,-6.601836,3.659482,8.393904,1.305431,-2.732269,8.550366,6.428858,0.687981,9.002115,2.528237,3.759703,8.649906,3.930348,-8.601019,8.761842,-2.464540,-8.654501,4.260331,-5.314803,7.806955,9.494408,-4.357161,5.010910,-7.101273,-0.960357,8.537263,3.247772,7.266703,-7.069873,-4.289563,-8.960131,-5.360726,0.770444,-6.799166,-6.284484,-1.150693,8.829742,-8.616658,-4.029267,9.462505,-3.781442,-4.198387,8.555239,-6.230256,9.094356,-3.591631,0.573543,5.239067,-6.838055,6.110398,5.425606,-5.699249,-8.215430,1.703850,-1.077466,5.460556,-1.590876,-9.270332,7.482998,0.594388,2.497696,-3.495578,-1.025109,4.966257,-5.171591,3.286995,-2.886319,-4.851416,-8.737429,7.021004,-7.952087,-9.406271,9.154545,-3.439019,9.860681,0.559421,9.606191,-5.834482,5.178821,-6.830698,-5.503365,4.539845,-8.277972,2.636559,-3.737185,8.946117,6.423299,9.224294,-5.898676,-6.502593,6.329169,-2.719515,0.290503,7.370341,9.394525,-5.629229,9.650699,-0.825385,8.334613,3.549076,7.540650,-8.511325,-2.477200,7.282212,-7.693835,-8.587590,8.836504,-8.563378,2.522485,-5.609087,-7.237007,-1.735664,-7.689246,8.551385,-0.902379,6.807384,3.019667,1.006850,4.271131,-9.294357,-3.515435,-2.491507,2.478331,-8.798683,-6.632767,7.265631,-6.369874,-4.587062,5.871986,-6.779877,-2.286303,9.276945,-2.681860,2.147010,0.324017,6.409126,0.327340,4.356317,-4.569752,0.169241,-8.218255,6.965549,4.227028,-3.490763,1.153773,-9.692159,-4.194463,1.957599,-2.583631,1.343936,-9.203302,3.953239,-5.554688,0.831654,4.999096,7.402378,0.686210,-4.300849,-4.770845,4.237335,9.890419,-4.140949,6.943993,-3.569596,-3.659247,1.004851,-6.679997,-3.123729,-6.690473,-8.098286,9.451732,3.890183,-5.898797,5.640326,-5.367793,8.023909,-7.716826,-4.235729,0.304456,-8.191568,-4.475901,2.136455,-7.288508,7.552089,2.942836,-7.235977,8.797936,0.134570,6.151937,-1.847804,-4.005966,-6.537579,4.298692,-4.336690,1.624331,4.547963,9.801384,4.227191,-4.789246,-0.971448,-8.173558,-1.966238,-5.067435,3.326224,-5.969096,-8.976380,9.358439,-4.147092,0.965635,-8.127934,3.558074,-4.448346,-0.618121,-0.400759,-3.645245,-1.602660,-0.883310,-7.702960,-5.807953,-8.281264,5.285111,7.210869,3.272269,-7.332053,0.473300,-3.315041,-9.108981,4.156193,-1.523467,1.033500,-5.111415,2.718419,6.994102,2.962216,7.971606,-6.066132,-8.646497,-9.020709,6.687700,-7.295813,5.396273,5.360968,1.701128,-9.100862,0.892896,-4.600025,6.750178,-8.982638,2.692107,-7.834212,7.738117,-9.136385,4.900690,-6.346518,7.457976,9.316234,1.494963,-0.662342,6.610150,-4.303545,-3.278702,-1.046330,-2.932215,-4.382631,-1.358644,-6.974571,-1.760664,-8.637957,4.795325,-7.838381,5.271166,6.220823,3.014898,-2.503389,-6.812384,2.598719,3.244750,-6.724009,-0.707334,-4.490826,-9.346491,-8.758086,7.575006,-8.984783,2.988268,2.613732,-0.181937,3.596210,-2.104622,-3.089005,-2.846887,1.587880,6.019659,3.820114,2.103787,-3.153116,1.663675,-4.940069,4.372385,8.114601,4.265616,-6.766111,-3.120731,6.476021,0.127666,3.490359,2.712907,9.730713,0.829171,-9.951651,-6.599126,-5.262060,-6.705518,-7.079111,2.960979,-8.286686,-2.821878,-5.122476,3.117851,3.413713,3.157369,-9.051710,-2.534458,5.356709,0.661665,-0.051358,-5.291086,7.998799,7.644202,3.040599,5.075476,8.893023,-2.314615,-2.758958,-4.240152,-9.402893,8.763282,-1.698028,-7.483394,0.327560,-5.424290,-3.935689,-9.914874,8.390057,6.944710,-9.652866,-3.476727,8.831245,8.426779,-2.542263,0.969193,7.834343,-7.231422,-0.628124,4.457598,-5.827822,0.094125,-3.416808,-9.212934,3.430918,-7.492543,-2.734550,-1.308924,8.885109,-7.601401,1.413153,-1.851611,-7.805946,-0.578262,-1.507263,-7.673120,6.417154,6.194547,3.342454,5.079776,2.306098,-9.958453,5.158297,1.552248,-1.918529,-1.841118,-7.268861,-7.419046,1.812074,4.805435,-8.332834,-3.467486,-8.961925,3.291592,2.502597,-5.274411,4.578424,9.987932,5.264997,2.933674,-1.267034,6.733433,4.087601,1.361930,2.814429,-9.951115,-2.111371,1.405642,-8.026057,-0.293882,-4.743167,-5.835307,9.062227,-3.032859,3.619148,-5.411606,4.328374,-7.980944,2.109673,-1.895308,-2.774013,-2.906674,1.467907,9.725668,-2.366011,-9.932631,0.040946,-0.468658,-4.548483,9.086344,2.564224,5.077698,-0.080678,8.769452,4.083005,-8.560905,-4.003450,-7.224000,-4.540207,3.928665,0.820093,3.353176,-5.319760,0.236393,-1.608784,-0.606752,-6.922002,4.429024,0.902769,-4.025508,-5.732935,7.744427,7.087452,-6.806692,3.797956,-4.211538,5.799829,0.168680,-9.630174,-9.296395,-2.976489,-0.825606,-1.343160,9.884542,-5.157925,-8.354876,-1.126303,3.544248,2.150132,7.457840,4.149232,6.463107,-2.386199,-4.910848,6.162932,0.208225,-2.558127,-5.323853,4.548714,-3.964004,2.340568,-7.772006,-4.363137,9.017881,-9.185073,2.154503,3.684326,-2.951914,9.402059,-3.465600,-7.338493,-1.580183,2.342884,0.853775,-3.122919,-6.624983,9.001487,2.512886,-9.132568,4.838095,-5.164659,-1.135587,-3.740873,1.109964,9.331585,-6.556246,8.160339,-7.502801,-8.456102,-1.131882,-5.270266,-9.615738,8.726414,3.729290,3.350426,-0.711258,2.066899,5.126967,-5.320728,-1.264329,-0.551466,2.442342,2.141476,-5.323647,5.895179,0.657455,1.372528,0.246819,8.493005,-8.347782,-8.295257,-1.903285,7.416747,5.632097,-9.754214,3.447985,-3.429765,7.160138,8.974666,8.765165,-6.271459,-0.938872,1.109891,-6.724343,-3.489088,8.857462,-2.509019,8.624136,8.290086,1.269551,-3.864579,-6.379023,3.756069,-0.578308,2.284908,2.319585,-9.087880,7.494385,-8.099044,6.662601,-7.615683,1.821956,-1.878938,-7.653361,7.809776,-2.655093,-7.645313,-2.131655,-6.155666,-8.770267,9.390662,6.918063,8.999623,0.154447,-1.395907,8.037782,3.522992,3.878511,0.302169,9.693937,8.698137,-5.430426,-8.423264,2.774022,8.389271,-1.232378,-9.677366,1.028726,-0.355237,4.775663,1.936776,7.659487,7.986028,-7.407184,-0.288389,6.081385], dtype = "float64")#candidate|6733|(1200,)|const|float64
const_6734 = relay.const([-2,-1,4,-2,-5,4,2,4,7,-4,3,2,-1,-6,4,-5,6,-7,1,-5,-10,-6,-2,6,-2,-10,-4,8,1,4,-9,2,-2,4,-6,-2,9,1,-10,1,-9,6,3,-7,-10,-2,8,4,2,-5,-8,7,5,-1,6,9,-2,9,1,-2,4,9,9,-6,-3,9,8,-9,7,1,1,-1,3,8,5,-6,-5,3,-10,5,9,-5,4,-1,-3,6,-10,-8,-6,-10,8,10,-1,-9,9,4,-8,5,4,-2,-8,-2,-5,5,9,-10,9,2,2,-3,-3,-9,10,2,-3,3,-3,2,-7,7,2,3,-9,5,4,2,-7,-10,-8,2,-7,3,-2,-9,-3,5,6,-9,2,-6,-2,-4,1,7,-6,-1,4,4,8,-4,-10,6,-6,-2,-1,-5,-9,5,4,-9,2,5,3,-1,5,-2,6,-2,7,3,4,-2,-8,3,8,2,4,-6,-7,8,4,-8,1,5,5,5,-7,-10,-3,-6,-7,-9,-6,-5,-3,6,4,10,-3,3,-4,-7,7,-7,-2,-9,1,-7,-4,1,-7,5,-10,-9,9,-3,2,3,9,10,-2,10,9,-2,2,-10,-10,-2,-7,7,5,-8,-10,-6,2,-8,-7,8,6,8,-5,8,-3,-8,-1,8,-5,-3,-9,1,7,6,10,1,-7,-7,-9,-8,5,-5,-10,-4,-9,-9,-8,-2,2,10,-5,1,9,-4,2,1,7,8,8,2,1,-8], dtype = "uint64")#candidate|6734|(280,)|const|uint64
var_6735 = relay.var("var_6735", dtype = "int32", shape = ())#candidate|6735|()|var|int32
const_6736 = relay.const([3.902510,3.743222,-5.084953,8.700656,2.494106,0.687837,2.230740,1.498063,1.547942,4.243667,6.966593,-7.151057,-2.253249,7.112150,-6.497445,-1.472256,-2.499482,-6.690994,5.688543,-1.393396,-6.881224,-4.843826,6.497140,-6.434535,-0.645805,9.323239,3.629850,9.667106,-5.744938,6.084727,5.069108,-6.717039,0.494380,-6.396941,-0.402174,5.091965,-5.592307,-2.368984,2.026571,-2.418760,-7.370373,0.450950,-3.581415,-0.859926,-0.303241,3.294401,5.036550,0.355839,9.318178,-1.907163,-1.351040,-7.818672,8.144509,-8.899265,9.292567,-5.093990,5.311975,6.753370,-5.008579,-1.868186,7.038070,-4.294162,-6.781493,8.786847,1.815931,8.968161,1.381794,-1.762217,5.826933,1.865917,6.195957,-0.136626,-3.677144,-5.169144,5.735768,8.809678,7.501810,-2.538255,4.950512,1.801125,9.309514,-3.637846,-1.386910,7.406691,1.629500,-0.176466,-3.276273,0.474910,-8.371060,3.032405,3.051979,-1.472706,-2.985738,-5.307012,-2.201060,-0.134835,-7.377957,-8.605319,3.291315,-1.500166,-3.618665,6.972967,-3.759562,0.682795,6.771057,-5.150270,9.158042,8.610097,3.534345,7.672567,9.821256,2.226316,-2.191011,-2.113264,5.826222,8.717752,6.805576,-9.631122,7.375875,-3.172200,-3.277875,5.815150,8.200858,9.118610,-2.648302,-8.605615,-5.238127,-6.416731,0.938022,-1.928930,4.305082,-6.781883,3.005370,-5.911542,2.586631,0.565847,-4.880293,0.545398,2.885162,-0.662161,-8.106062,9.144270,5.175448,3.342506,-6.975314,3.710310,0.529896,-0.859399,9.825850,-2.598170,0.907713,-7.950643,-0.994045,4.065294,5.863164,-5.476149,-9.951493,-5.317841,6.530409,-7.040010,-6.014770,3.998129,8.018715,-0.430603,8.470132,9.934864,-6.845664,-6.688979,-7.178702,-3.672231,1.731613,9.368648,-9.098133,8.370079,0.593778,8.844552,-3.332931,-8.990332,-6.936591,-2.424726,3.097242,-2.424278,8.375378,-6.691650,-9.955155,1.128984,1.248401,6.256132,8.795823,1.464647,-9.111018,-0.699220,-7.748977,-8.527312,9.845814,-7.218901,2.919294,-5.550286,9.912068,-5.834572,3.698815,3.729986,-4.487198,-7.295351,-4.778175,-7.894078,-0.718674,7.390367,5.431565,5.102108,-2.098773,1.802925,-1.903827,-5.044576,9.420795,1.136568,5.891449,5.375068,8.429884,6.644597,-0.812672,-2.504116,-5.581826,2.969146,0.429206,-4.243579,-2.715211,5.445232,1.194121,-7.794937,-2.852156,9.260953,-1.501365,8.625970,-5.052640,7.022053,7.633536,5.694508,0.508261,4.538684,5.254055,-5.436336,-9.876130,-0.156025,-8.081100,-5.961244,-2.960878,-9.646567,-9.078683,-6.790458,-3.249876,8.470086,5.765174,0.657801,2.099026,5.538255,-7.082141,-1.817414,-6.667759,-8.204263,3.335204,6.147639,-7.861139,0.136074,-0.878747,8.518465,0.370822,-6.463698,2.001140,-5.663552,-9.294749,4.455624,9.312397,6.161146,-4.554235,-0.388731,-8.303524,6.997344,0.626188,-8.496443,-4.270309,-9.393226,-4.042111,-8.498378,-3.695182,2.780571,-2.260887,1.500108,-3.289769,0.530877,-0.736709,2.174185,-6.776003,0.472525,4.718665,8.970638,8.073913,4.792835,-8.034149,5.379135,-6.353817,1.037678,8.345000,8.819368,-4.850001,-0.363363,-6.395817,4.556651,-9.142633,2.883856,-4.297605,9.730198,-0.026448,-9.994176,-5.932964,-8.314300,-0.551420,-7.086947,-4.592128,9.392378,-3.898021,-4.321375,5.342916,6.928604,-4.677389,4.432202,9.393952,3.786871,-9.086694,-6.161640,0.733949,5.960626,9.164866,-9.721086,4.601418,-7.366449,3.761193,6.413041,-2.600813,7.644272,2.334274,-5.620416,3.059761,-9.452564,5.940927,1.657966,4.427509,-9.958653,-3.595369,4.102092,-2.434523,4.363924,-4.344215,8.926107,-2.929661,9.627482,0.074689,-1.915172,6.024051,-9.214555,-4.746737,-9.313618,6.388611,-2.309497,6.060536,7.756766,4.265070,6.683460,2.579138,-6.886391,3.148143,5.166851,6.260856,-3.632404,9.749780,2.785710,-6.092147,8.098757,-9.900727,1.446317,7.306099,-1.854316,5.273882,-7.699722,-8.454356,-7.176245,2.366202,-9.851632,-6.481307,1.653245,-6.419902,3.337408,-6.833826,-5.242740,-2.854708,-0.244629,-5.349869,-3.735361,9.594412,8.139348,2.677321,4.555669,1.353066,-7.399361,-4.783746,3.207253,-0.267830,9.399821,-3.494031,-3.622068,2.760920,-4.477985,3.718818,-2.587045,-4.599675,-8.118891,5.487004,-1.248926,9.778197,-5.827217,-2.535513,-5.956511,-3.677154,-1.154339,2.422039,4.979983,4.793189,7.381424,-3.682605,3.389298,6.255324,3.461044,-1.050803,4.960293,-6.081187,6.875384,-0.550209,4.598853,-1.505015,7.869950,-3.869185,-6.946669,-4.289541,-0.102106,5.550574,7.696485,6.144169,-3.198455,-9.466657,-0.201135,9.752913,-4.735788,1.790613,1.569207,0.237368,-7.910097,3.093977,4.111608,-4.733866,9.144143,-7.265501,-8.150463,5.677522,3.178363,-5.543756,-6.627377,8.297056,5.361622,-6.156102,-9.334616,7.231384,-0.073209,-5.188507,4.810252,8.261988,-6.145654,6.978797,-3.128391,2.425847,8.697233,0.420557,-7.328844,-1.403966,7.886812,-0.353062,-6.490465,-8.747777,-7.424235,-0.319251,3.731186,-1.813146,5.936637,-6.891643,-5.257311,2.206086,-1.574692,4.277153,-6.060144,-8.573408,1.792066,6.908556,8.426560,-0.947664,-5.302201,6.889856,-8.293956,-9.420671,2.453245,5.201076,-7.438532,1.004852,2.473987,5.202147,-9.469161,-5.003221,-1.472925,3.607106,6.573268,-8.071337,8.731938,-0.299202,9.450725,7.172095,0.589753,3.483125,-1.352600,-7.570547,5.047979,6.580472,-5.290895,7.856187,8.697310,-7.250601,-3.774355,5.043517,-4.976691,-3.482484,-5.902916,-7.142542,-3.126014,4.300523,9.251919,7.958675,-3.161848,-0.982127,-5.142962,2.533371,7.148831,-5.733045,-9.150965,9.730458,4.981387,1.043089,4.257046,-7.975745,1.509694,-8.642685,0.838729,1.507393,-5.200006,-1.745013,-5.172062,4.186046,5.286433,4.738842,5.020169,-2.859408,-8.793732,-3.288527,-3.944435,-2.476852,-5.808786,-3.607780,-7.456601,4.960501,1.760119,4.460017,-8.181788,1.755898,-2.850776,3.756824,5.476168,8.927029,1.607838,-1.171144,-1.854609,7.387749,5.014767,-7.819535,-4.145600,2.181771,-1.854004,2.153079,3.570182,-5.539382,6.477889,1.357231,-7.811999,4.862884,-0.641862,0.906356,-5.443464,4.988186,-9.222154,4.995384,-6.859484,-0.913263,7.948999,9.944323,0.771253,-1.454849,3.235265,0.583324,-2.911433,-3.589313,-5.789728,4.557525,-1.717244,8.895450,1.056985,2.852782,7.093312,-9.253048,0.524073,7.836953,3.731528,-5.139944,2.911879,-7.074257,-0.230690,-1.353170,-6.315329,6.415160,-5.261184,3.718573,2.773183,5.827557,5.617514,4.764125,0.752021,1.603784,-4.626429,-6.390577,2.638452,-8.335448,4.597099,8.835863,-1.616516,-4.314865,5.392252,-2.905992,1.691441,8.788036,3.746536,3.709289,5.025335,-0.365192,-5.928540,9.083830,5.666995,1.301061,-2.309978,4.412232,8.200147,3.761645,5.169192,9.988428,-1.534361,5.873160,5.887344,-0.485076,2.887821,8.532213,6.992486,-4.453210,-5.285331,0.433297,-7.039161,1.936948,2.353749,-2.105424,5.675237,8.090814,-1.013398,7.413049,3.053134,-1.993921,-5.650350,0.760442,-2.300082,5.346571,1.014202,9.826740,2.934744,-9.683492,6.083926,5.568351,-1.804598,-2.713604,-1.705665,4.649748,-0.527082,-4.270185,3.516282,-7.468136,9.170773,-2.418071,3.521461,-5.478683,-8.515354,9.139289,9.418298,-3.547987,0.390565,-3.458531,2.678559,3.273321,1.613165,-0.761400,4.226657,-7.933767,-0.757348,-9.383461,-0.982634,-5.195277,4.897784,8.327767,7.602479,-2.771105,-1.352206,-8.973693,-6.287600,3.828678,4.562983,-7.037611,7.894595,-7.330506,7.485362,4.082725,8.716881,6.773501,6.734310,-2.153857,-9.928756,7.682208,3.600161,-6.620347,6.500147,-7.489227,-0.444934,-1.654187,7.135165,8.614829,0.462891,7.288774,3.869521,2.632557,4.246331,3.698907,-2.066144,-6.681368,-5.478263,-3.949175,1.178318,-4.407424,2.033800,4.471733,2.912329,-4.190069,0.180673,-6.330621,-7.747010,0.034115,5.857150,1.123595,7.478623,1.507808,8.702539,8.823851,-2.010012,-5.426754,-5.858570,3.412438,-7.588976,-6.840726,7.546288,-3.520358,-9.193723,5.968304,-7.738993,-5.028681,-1.175710,8.137464,3.181161,-9.486888,6.669808,7.462590,-9.142631,9.035082,-5.337578,-2.049629,-3.183536,8.127003,-5.296251,-2.949613,-5.383486,-6.499189,3.697330,-1.571269,2.561125,-4.680831,6.663686,-0.200472,-9.641691,-4.648658,-0.821457,-6.399813,-8.988033,8.011073,-5.618446,5.233599,-2.534953,-5.725490,-4.376920,-8.843664,9.798166,-0.843272,3.471634,9.257277,-3.990061,-1.723760,-8.688614,-9.883467,9.335462,-5.272285,8.196734,-1.177474,9.935098,1.589661,6.305356,9.468348,2.004462,5.973383,4.824139,-5.920949,-2.418840,-3.915443,-8.805763,3.352841,-9.667365,3.573431,-0.584606,-9.907172,-8.000801,4.333165,6.869825,7.749654,-5.680879,4.991708,2.185839,4.030011,6.931950,-8.797746,-1.901074,0.250518,7.752899,8.277933,-3.169046,-2.259743,9.175132,-1.909820,-1.849230,7.992879,-8.135229,-4.742722,3.638808,9.345926,6.912562,-7.402320,-9.713804,7.393034,-5.453821,9.494928,-9.148041,-2.033241,4.642750,-8.645145,-6.640292,-2.795911,7.086189,-0.101866,-7.959923,8.061334,8.776629,-6.657055,5.720493,-4.093787,-4.710879,-1.428812,2.222608,-4.659797,2.382421,-9.583070,5.467708,-0.677755,-7.211658,1.734864,-1.657604,-8.206908,-9.434742,7.116291,-7.930830,0.950321,1.011850,6.920202,-8.818700,0.248961,3.474233,1.461337,-3.473701,6.989112,-2.951081,-5.933660,4.047011,6.087146,3.707494,2.485584,-5.456367,-5.728116,-3.921100,-8.884574,5.464795,-6.100307,4.231823,4.195837,9.413823,-1.448947,9.929981,-8.703228,-7.435449,-7.323409,4.837779,7.145678,7.637950,2.159235,-2.999129,-2.794098,-3.521461,-1.001183,9.115564,1.855351,-8.145554,-0.330827,-8.281384,-2.072235,-5.277199,-0.485204,-8.109360,8.923572,0.139718,6.668666,-6.802900,-8.828250,-5.047709,5.300679,-7.540250,-4.736552,-6.699525,3.817484,6.404706,6.524444,-8.987169,3.862490,-0.125800,-9.016760,-7.719364,8.545471,-1.987068,7.820831,-2.478042,-2.165287,3.296047,1.595676,9.966221,0.574441,-7.343591,0.779325,-2.905234,3.822993,4.751862,4.733929,9.228336,4.060234,-0.511986,-4.423215,0.030550,1.615006,3.850341,-8.807931,4.290357,9.334308,0.851268,3.268210,-3.747989,-5.378366,-4.463619,7.133806,-1.591991,5.667430,8.137927,6.847285,-7.220356,4.278771,1.470734,0.829462,1.447858,-2.488540,9.208508,3.701835,-9.897708,9.809111,1.987897,-0.575009,8.978510,-0.612946,1.699117,9.057364,-7.015457,6.654049,6.039482,3.644166,4.227571,2.023385,0.440662,-2.774215,-3.150584,-4.295609,-3.282539,0.550794,9.339498,-1.345112,5.497283,-5.340010,0.491362,7.861096,-0.307740,1.116049,-1.328790,-7.956628,8.871793,1.370423,7.144409,2.674575,-4.141782,1.211001,-7.520001,-9.678765,-0.956878,-1.671782,-7.453969,-6.437402,-6.605891,-1.296952,-7.769954,-5.375687,-6.533303,1.072435,9.098114,0.422239,2.708299,2.946512,2.786163,0.749742,2.950305,9.935610,6.510862,-6.337035,5.668342,-6.966397,-7.600806,-8.737233,-3.020835,-8.700674,-0.096462,3.310750,-2.911091,-5.555251,-5.582641,0.323607,4.654680,6.944997,-1.346604], dtype = "float32")#candidate|6736|(1092,)|const|float32
call_6732 = relay.TupleGetItem(func_4368_call(relay.reshape(const_6733.astype('float64'), [15, 16, 5]), relay.reshape(const_6734.astype('uint64'), [280,]), relay.reshape(var_6735.astype('int32'), []), relay.reshape(const_6736.astype('float32'), [1092,]), ), 2)
call_6737 = relay.TupleGetItem(func_4374_call(relay.reshape(const_6733.astype('float64'), [15, 16, 5]), relay.reshape(const_6734.astype('uint64'), [280,]), relay.reshape(var_6735.astype('int32'), []), relay.reshape(const_6736.astype('float32'), [1092,]), ), 2)
uop_6738 = relay.sinh(const_6736.astype('float32')) # shape=(1092,)
output = relay.Tuple([call_6726,call_6732,const_6733,const_6734,var_6735,uop_6738,])
output2 = relay.Tuple([call_6727,call_6737,const_6733,const_6734,var_6735,uop_6738,])
func_6741 = relay.Function([var_6735,], output)
mod['func_6741'] = func_6741
mod = relay.transform.InferType()(mod)
var_6742 = relay.var("var_6742", dtype = "int32", shape = ())#candidate|6742|()|var|int32
output = func_6741(var_6742)
func_6743 = relay.Function([var_6742], output)
mutated_mod['func_6743'] = func_6743
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6771 = relay.var("var_6771", dtype = "float32", shape = (3, 11, 15))#candidate|6771|(3, 11, 15)|var|float32
uop_6772 = relay.cos(var_6771.astype('float32')) # shape=(3, 11, 15)
output = relay.Tuple([uop_6772,])
output2 = relay.Tuple([uop_6772,])
func_6778 = relay.Function([var_6771,], output)
mod['func_6778'] = func_6778
mod = relay.transform.InferType()(mod)
var_6779 = relay.var("var_6779", dtype = "float32", shape = (3, 11, 15))#candidate|6779|(3, 11, 15)|var|float32
output = func_6778(var_6779)
func_6780 = relay.Function([var_6779], output)
mutated_mod['func_6780'] = func_6780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6675_call = mod.get_global_var('func_6675')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_6907 = relay.TupleGetItem(func_6675_call(), 0)
call_6908 = relay.TupleGetItem(func_6677_call(), 0)
func_1446_call = mod.get_global_var('func_1446')
func_1449_call = mutated_mod.get_global_var('func_1449')
var_6927 = relay.var("var_6927", dtype = "bool", shape = (126,))#candidate|6927|(126,)|var|bool
var_6928 = relay.var("var_6928", dtype = "bool", shape = (9, 210))#candidate|6928|(9, 210)|var|bool
call_6926 = func_1446_call(relay.reshape(var_6927.astype('bool'), [9, 1, 14]), relay.reshape(var_6928.astype('bool'), [9, 15, 14]), )
call_6929 = func_1446_call(relay.reshape(var_6927.astype('bool'), [9, 1, 14]), relay.reshape(var_6928.astype('bool'), [9, 15, 14]), )
output = relay.Tuple([call_6907,call_6926,var_6927,var_6928,])
output2 = relay.Tuple([call_6908,call_6929,var_6927,var_6928,])
func_6936 = relay.Function([var_6927,var_6928,], output)
mod['func_6936'] = func_6936
mod = relay.transform.InferType()(mod)
mutated_mod['func_6936'] = func_6936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6936_call = mutated_mod.get_global_var('func_6936')
var_6938 = relay.var("var_6938", dtype = "bool", shape = (126,))#candidate|6938|(126,)|var|bool
var_6939 = relay.var("var_6939", dtype = "bool", shape = (9, 210))#candidate|6939|(9, 210)|var|bool
call_6937 = func_6936_call(var_6938,var_6939,)
output = call_6937
func_6940 = relay.Function([var_6938,var_6939,], output)
mutated_mod['func_6940'] = func_6940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mod.get_global_var('func_5878')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_6945 = func_5878_call()
call_6946 = func_5878_call()
func_1301_call = mod.get_global_var('func_1301')
func_1304_call = mutated_mod.get_global_var('func_1304')
const_6948 = relay.const([-6,10,1,5,-8,-10,9,9,-5,-9,-8,5,-4,6,5,-1,-4,-8,-6,-6,6,-5,3,-1,10,5,7,-5,1,4,-7,-9,-10,3,-4,2,4,2,-1,6,-5,1,-1,4,-8,-9,7,-3,7,-3,-4,2,4,5,-9,7,4,-9,-4,8,-5,-4,-5,9,4,4,9,-8,-9,8,-6,5,5,-6,9,3,-10,-6,6,8,1,10,7,-3,-10,8,8,-7,-7,3,8,-2,5,-5,7,-10,5,-8,-7,1,-4,5,-2,6,-7,7,-9,4,-9,4,2,4,-6,-10,-3,-10,9,10,10,-3,9,2,1,9,-5,-7,10,4,4,-9,-4,6,6,7,4,-3,-1,10,-3,5,-3,-6,-4,9,4,-6,6,-2,-10,8,-10,-6,8,-7,4,-10,6,9,4,-9,5,7,-7,-4,1,-8,5,-5,1,-3,-6,3,-8,-2,-10,1,6,7,-8,-8,-2,-1,4,9,8,10,6,-5,-6,7,8,3,9,-7,10,-7,4,9,-1,-3,2,-2,9,-3,4,2,1,8,-5,6], dtype = "uint64")#candidate|6948|(210,)|const|uint64
var_6949 = relay.var("var_6949", dtype = "float64", shape = (156,))#candidate|6949|(156,)|var|float64
call_6947 = relay.TupleGetItem(func_1301_call(relay.reshape(const_6948.astype('uint64'), [3, 5, 14]), relay.reshape(var_6949.astype('float64'), [156,]), ), 1)
call_6950 = relay.TupleGetItem(func_1304_call(relay.reshape(const_6948.astype('uint64'), [3, 5, 14]), relay.reshape(var_6949.astype('float64'), [156,]), ), 1)
uop_6987 = relay.log10(call_6945.astype('float32')) # shape=(9, 3, 1)
uop_6989 = relay.log10(call_6946.astype('float32')) # shape=(9, 3, 1)
output = relay.Tuple([call_6947,const_6948,var_6949,uop_6987,])
output2 = relay.Tuple([call_6950,const_6948,var_6949,uop_6989,])
func_7000 = relay.Function([var_6949,], output)
mod['func_7000'] = func_7000
mod = relay.transform.InferType()(mod)
mutated_mod['func_7000'] = func_7000
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7001 = relay.var("var_7001", dtype = "float64", shape = (156,))#candidate|7001|(156,)|var|float64
func_7000_call = mutated_mod.get_global_var('func_7000')
call_7002 = func_7000_call(var_7001)
output = call_7002
func_7003 = relay.Function([var_7001], output)
mutated_mod['func_7003'] = func_7003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6547_call = mod.get_global_var('func_6547')
func_6549_call = mutated_mod.get_global_var('func_6549')
call_7005 = func_6547_call()
call_7006 = func_6547_call()
output = call_7005
output2 = call_7006
func_7023 = relay.Function([], output)
mod['func_7023'] = func_7023
mod = relay.transform.InferType()(mod)
output = func_7023()
func_7024 = relay.Function([], output)
mutated_mod['func_7024'] = func_7024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6664_call = mod.get_global_var('func_6664')
func_6665_call = mutated_mod.get_global_var('func_6665')
call_7090 = relay.TupleGetItem(func_6664_call(), 1)
call_7091 = relay.TupleGetItem(func_6665_call(), 1)
output = call_7090
output2 = call_7091
func_7096 = relay.Function([], output)
mod['func_7096'] = func_7096
mod = relay.transform.InferType()(mod)
mutated_mod['func_7096'] = func_7096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7096_call = mutated_mod.get_global_var('func_7096')
call_7097 = func_7096_call()
output = call_7097
func_7098 = relay.Function([], output)
mutated_mod['func_7098'] = func_7098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6324_call = mod.get_global_var('func_6324')
func_6326_call = mutated_mod.get_global_var('func_6326')
call_7147 = relay.TupleGetItem(func_6324_call(), 0)
call_7148 = relay.TupleGetItem(func_6326_call(), 0)
output = relay.Tuple([call_7147,])
output2 = relay.Tuple([call_7148,])
func_7181 = relay.Function([], output)
mod['func_7181'] = func_7181
mod = relay.transform.InferType()(mod)
mutated_mod['func_7181'] = func_7181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7181_call = mutated_mod.get_global_var('func_7181')
call_7182 = func_7181_call()
output = call_7182
func_7183 = relay.Function([], output)
mutated_mod['func_7183'] = func_7183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7023_call = mod.get_global_var('func_7023')
func_7024_call = mutated_mod.get_global_var('func_7024')
call_7204 = func_7023_call()
call_7205 = func_7023_call()
var_7214 = relay.var("var_7214", dtype = "float32", shape = (9, 3, 15))#candidate|7214|(9, 3, 15)|var|float32
bop_7215 = relay.logical_xor(call_7204.astype('int8'), var_7214.astype('int8')) # shape=(9, 3, 15)
bop_7218 = relay.logical_xor(call_7205.astype('int8'), var_7214.astype('int8')) # shape=(9, 3, 15)
var_7231 = relay.var("var_7231", dtype = "float32", shape = (9, 3, 15))#candidate|7231|(9, 3, 15)|var|float32
bop_7232 = relay.greater(var_7214.astype('bool'), relay.reshape(var_7231.astype('bool'), relay.shape_of(var_7214))) # shape=(9, 3, 15)
func_1446_call = mod.get_global_var('func_1446')
func_1449_call = mutated_mod.get_global_var('func_1449')
const_7239 = relay.const([[False,False],[False,True],[False,True],[False,True],[True,True],[True,False],[False,True],[True,True],[True,True],[False,True],[True,True],[False,False],[True,True],[True,False],[True,False],[False,False],[True,True],[True,True],[False,True],[True,False],[True,False],[False,True],[True,True],[False,True],[False,False],[False,False],[True,True],[False,True],[False,True],[True,True],[False,False],[True,True],[True,False],[False,True],[False,True],[True,True],[True,False],[False,True],[True,False],[False,False],[False,False],[False,False],[True,False],[True,True],[False,False],[True,False],[False,False],[True,True],[True,True],[True,True],[True,False],[False,False],[False,False],[True,False],[False,True],[False,False],[False,False],[False,True],[False,True],[True,False],[False,False],[False,False],[False,True]], dtype = "bool")#candidate|7239|(63, 2)|const|bool
const_7240 = relay.const([[True,False,False,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True],[True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,False,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,False,False],[True,True,True,False,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False]], dtype = "bool")#candidate|7240|(3, 630)|const|bool
call_7238 = func_1446_call(relay.reshape(const_7239.astype('bool'), [9, 1, 14]), relay.reshape(const_7240.astype('bool'), [9, 15, 14]), )
call_7241 = func_1446_call(relay.reshape(const_7239.astype('bool'), [9, 1, 14]), relay.reshape(const_7240.astype('bool'), [9, 15, 14]), )
uop_7250 = relay.atanh(bop_7232.astype('float64')) # shape=(9, 3, 15)
output = relay.Tuple([bop_7215,call_7238,const_7239,const_7240,uop_7250,])
output2 = relay.Tuple([bop_7218,call_7241,const_7239,const_7240,uop_7250,])
func_7273 = relay.Function([var_7214,var_7231,], output)
mod['func_7273'] = func_7273
mod = relay.transform.InferType()(mod)
mutated_mod['func_7273'] = func_7273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7273_call = mutated_mod.get_global_var('func_7273')
var_7275 = relay.var("var_7275", dtype = "float32", shape = (9, 3, 15))#candidate|7275|(9, 3, 15)|var|float32
var_7276 = relay.var("var_7276", dtype = "float32", shape = (9, 3, 15))#candidate|7276|(9, 3, 15)|var|float32
call_7274 = func_7273_call(var_7275,var_7276,)
output = call_7274
func_7277 = relay.Function([var_7275,var_7276,], output)
mutated_mod['func_7277'] = func_7277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6388_call = mod.get_global_var('func_6388')
func_6389_call = mutated_mod.get_global_var('func_6389')
call_7421 = func_6388_call()
call_7422 = func_6388_call()
output = call_7421
output2 = call_7422
func_7428 = relay.Function([], output)
mod['func_7428'] = func_7428
mod = relay.transform.InferType()(mod)
output = func_7428()
func_7429 = relay.Function([], output)
mutated_mod['func_7429'] = func_7429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6085_call = mod.get_global_var('func_6085')
func_6086_call = mutated_mod.get_global_var('func_6086')
call_7507 = relay.TupleGetItem(func_6085_call(), 2)
call_7508 = relay.TupleGetItem(func_6086_call(), 2)
output = call_7507
output2 = call_7508
func_7515 = relay.Function([], output)
mod['func_7515'] = func_7515
mod = relay.transform.InferType()(mod)
output = func_7515()
func_7516 = relay.Function([], output)
mutated_mod['func_7516'] = func_7516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7515_call = mod.get_global_var('func_7515')
func_7516_call = mutated_mod.get_global_var('func_7516')
call_7551 = func_7515_call()
call_7552 = func_7515_call()
uop_7580 = relay.cos(call_7551.astype('float64')) # shape=(9, 2, 3)
uop_7582 = relay.cos(call_7552.astype('float64')) # shape=(9, 2, 3)
func_6324_call = mod.get_global_var('func_6324')
func_6326_call = mutated_mod.get_global_var('func_6326')
call_7586 = relay.TupleGetItem(func_6324_call(), 1)
call_7587 = relay.TupleGetItem(func_6326_call(), 1)
output = relay.Tuple([uop_7580,call_7586,])
output2 = relay.Tuple([uop_7582,call_7587,])
func_7593 = relay.Function([], output)
mod['func_7593'] = func_7593
mod = relay.transform.InferType()(mod)
output = func_7593()
func_7594 = relay.Function([], output)
mutated_mod['func_7594'] = func_7594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7678 = relay.var("var_7678", dtype = "int16", shape = ())#candidate|7678|()|var|int16
var_7679 = relay.var("var_7679", dtype = "int16", shape = (16, 10, 14))#candidate|7679|(16, 10, 14)|var|int16
bop_7680 = relay.left_shift(var_7678.astype('int16'), var_7679.astype('int16')) # shape=(16, 10, 14)
output = relay.Tuple([bop_7680,])
output2 = relay.Tuple([bop_7680,])
func_7699 = relay.Function([var_7678,var_7679,], output)
mod['func_7699'] = func_7699
mod = relay.transform.InferType()(mod)
var_7700 = relay.var("var_7700", dtype = "int16", shape = ())#candidate|7700|()|var|int16
var_7701 = relay.var("var_7701", dtype = "int16", shape = (16, 10, 14))#candidate|7701|(16, 10, 14)|var|int16
output = func_7699(var_7700,var_7701,)
func_7702 = relay.Function([var_7700,var_7701,], output)
mutated_mod['func_7702'] = func_7702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6388_call = mod.get_global_var('func_6388')
func_6389_call = mutated_mod.get_global_var('func_6389')
call_7794 = func_6388_call()
call_7795 = func_6388_call()
output = relay.Tuple([call_7794,])
output2 = relay.Tuple([call_7795,])
func_7797 = relay.Function([], output)
mod['func_7797'] = func_7797
mod = relay.transform.InferType()(mod)
output = func_7797()
func_7798 = relay.Function([], output)
mutated_mod['func_7798'] = func_7798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mod.get_global_var('func_5878')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_7855 = func_5878_call()
call_7856 = func_5878_call()
uop_7858 = relay.asin(call_7855.astype('float32')) # shape=(9, 3, 1)
uop_7860 = relay.asin(call_7856.astype('float32')) # shape=(9, 3, 1)
func_254_call = mod.get_global_var('func_254')
func_257_call = mutated_mod.get_global_var('func_257')
const_7862 = relay.const([[-9.634863,1.738078,2.975565,-2.592468,-3.168328,9.984866,-0.712275,-4.073691,-8.415267,-7.506962,-3.382862,-3.675058,1.045124,-0.150399,7.470860,6.820504,7.024417,6.536693,-4.613506,-0.256164,-5.107377,-9.520253,-0.260787,8.743440,4.690856,-8.779827,-3.749758,8.451261,-2.772853,7.752692,1.410964,-6.261667,5.264077,0.377755,9.915551,-3.892058,-1.607733,-4.893218,5.684709,6.778731,3.638189,-6.867661,-5.212612,6.082994,8.787387,-9.597694,7.435334,2.600395,-5.891731,-1.438165,2.064147,5.993280,-0.439180,-9.334231,2.397297,-0.893578,9.489909,-0.976564,-4.523603,1.772167,-7.394258,-1.063876,-1.078229,-9.155908,0.701234,-4.835991,9.237515,-6.737568,0.499327,-8.774769,-8.300001,4.357186,2.272852,4.533339,2.457631,-9.686075,-4.285416]], dtype = "float32")#candidate|7862|(1, 77)|const|float32
call_7861 = func_254_call(relay.reshape(const_7862.astype('float32'), [7, 11, 1]))
call_7863 = func_254_call(relay.reshape(const_7862.astype('float32'), [7, 11, 1]))
output = relay.Tuple([uop_7858,call_7861,const_7862,])
output2 = relay.Tuple([uop_7860,call_7863,const_7862,])
func_7871 = relay.Function([], output)
mod['func_7871'] = func_7871
mod = relay.transform.InferType()(mod)
mutated_mod['func_7871'] = func_7871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7871_call = mutated_mod.get_global_var('func_7871')
call_7872 = func_7871_call()
output = call_7872
func_7873 = relay.Function([], output)
mutated_mod['func_7873'] = func_7873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6432_call = mod.get_global_var('func_6432')
func_6433_call = mutated_mod.get_global_var('func_6433')
call_7921 = func_6432_call()
call_7922 = func_6432_call()
output = relay.Tuple([call_7921,])
output2 = relay.Tuple([call_7922,])
func_7946 = relay.Function([], output)
mod['func_7946'] = func_7946
mod = relay.transform.InferType()(mod)
mutated_mod['func_7946'] = func_7946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7946_call = mutated_mod.get_global_var('func_7946')
call_7947 = func_7946_call()
output = call_7947
func_7948 = relay.Function([], output)
mutated_mod['func_7948'] = func_7948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6664_call = mod.get_global_var('func_6664')
func_6665_call = mutated_mod.get_global_var('func_6665')
call_7955 = relay.TupleGetItem(func_6664_call(), 1)
call_7956 = relay.TupleGetItem(func_6665_call(), 1)
output = relay.Tuple([call_7955,])
output2 = relay.Tuple([call_7956,])
func_7959 = relay.Function([], output)
mod['func_7959'] = func_7959
mod = relay.transform.InferType()(mod)
mutated_mod['func_7959'] = func_7959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7959_call = mutated_mod.get_global_var('func_7959')
call_7960 = func_7959_call()
output = call_7960
func_7961 = relay.Function([], output)
mutated_mod['func_7961'] = func_7961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6324_call = mod.get_global_var('func_6324')
func_6326_call = mutated_mod.get_global_var('func_6326')
call_7987 = relay.TupleGetItem(func_6324_call(), 0)
call_7988 = relay.TupleGetItem(func_6326_call(), 0)
output = call_7987
output2 = call_7988
func_8018 = relay.Function([], output)
mod['func_8018'] = func_8018
mod = relay.transform.InferType()(mod)
mutated_mod['func_8018'] = func_8018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8018_call = mutated_mod.get_global_var('func_8018')
call_8019 = func_8018_call()
output = call_8019
func_8020 = relay.Function([], output)
mutated_mod['func_8020'] = func_8020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7096_call = mod.get_global_var('func_7096')
func_7098_call = mutated_mod.get_global_var('func_7098')
call_8065 = func_7096_call()
call_8066 = func_7096_call()
output = relay.Tuple([call_8065,])
output2 = relay.Tuple([call_8066,])
func_8072 = relay.Function([], output)
mod['func_8072'] = func_8072
mod = relay.transform.InferType()(mod)
mutated_mod['func_8072'] = func_8072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8072_call = mutated_mod.get_global_var('func_8072')
call_8073 = func_8072_call()
output = call_8073
func_8074 = relay.Function([], output)
mutated_mod['func_8074'] = func_8074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8078 = relay.var("var_8078", dtype = "bool", shape = ())#candidate|8078|()|var|bool
var_8079 = relay.var("var_8079", dtype = "bool", shape = (1, 15, 6))#candidate|8079|(1, 15, 6)|var|bool
bop_8080 = relay.logical_or(var_8078.astype('bool'), var_8079.astype('bool')) # shape=(1, 15, 6)
output = relay.Tuple([bop_8080,])
output2 = relay.Tuple([bop_8080,])
func_8088 = relay.Function([var_8078,var_8079,], output)
mod['func_8088'] = func_8088
mod = relay.transform.InferType()(mod)
var_8089 = relay.var("var_8089", dtype = "bool", shape = ())#candidate|8089|()|var|bool
var_8090 = relay.var("var_8090", dtype = "bool", shape = (1, 15, 6))#candidate|8090|(1, 15, 6)|var|bool
output = func_8088(var_8089,var_8090,)
func_8091 = relay.Function([var_8089,var_8090,], output)
mutated_mod['func_8091'] = func_8091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7023_call = mod.get_global_var('func_7023')
func_7024_call = mutated_mod.get_global_var('func_7024')
call_8136 = func_7023_call()
call_8137 = func_7023_call()
var_8140 = relay.var("var_8140", dtype = "float32", shape = (9, 3, 1))#candidate|8140|(9, 3, 1)|var|float32
bop_8141 = relay.not_equal(call_8136.astype('bool'), relay.reshape(var_8140.astype('bool'), relay.shape_of(call_8136))) # shape=(9, 3, 1)
bop_8144 = relay.not_equal(call_8137.astype('bool'), relay.reshape(var_8140.astype('bool'), relay.shape_of(call_8137))) # shape=(9, 3, 1)
func_4592_call = mod.get_global_var('func_4592')
func_4595_call = mutated_mod.get_global_var('func_4595')
var_8146 = relay.var("var_8146", dtype = "uint16", shape = (1680,))#candidate|8146|(1680,)|var|uint16
call_8145 = relay.TupleGetItem(func_4592_call(relay.reshape(var_8146.astype('uint16'), [10, 12, 14])), 1)
call_8147 = relay.TupleGetItem(func_4595_call(relay.reshape(var_8146.astype('uint16'), [10, 12, 14])), 1)
bop_8154 = relay.power(bop_8141.astype('float64'), var_8146.astype('float64')) # shape=(9, 3, 1680)
bop_8157 = relay.power(bop_8144.astype('float64'), var_8146.astype('float64')) # shape=(9, 3, 1680)
bop_8159 = relay.bitwise_or(var_8146.astype('uint8'), call_8136.astype('uint8')) # shape=(9, 3, 1680)
bop_8162 = relay.bitwise_or(var_8146.astype('uint8'), call_8137.astype('uint8')) # shape=(9, 3, 1680)
output = relay.Tuple([call_8145,bop_8154,bop_8159,])
output2 = relay.Tuple([call_8147,bop_8157,bop_8162,])
func_8180 = relay.Function([var_8140,var_8146,], output)
mod['func_8180'] = func_8180
mod = relay.transform.InferType()(mod)
var_8181 = relay.var("var_8181", dtype = "float32", shape = (9, 3, 1))#candidate|8181|(9, 3, 1)|var|float32
var_8182 = relay.var("var_8182", dtype = "uint16", shape = (1680,))#candidate|8182|(1680,)|var|uint16
output = func_8180(var_8181,var_8182,)
func_8183 = relay.Function([var_8181,var_8182,], output)
mutated_mod['func_8183'] = func_8183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6486_call = mod.get_global_var('func_6486')
func_6487_call = mutated_mod.get_global_var('func_6487')
call_8203 = relay.TupleGetItem(func_6486_call(), 1)
call_8204 = relay.TupleGetItem(func_6487_call(), 1)
output = call_8203
output2 = call_8204
func_8211 = relay.Function([], output)
mod['func_8211'] = func_8211
mod = relay.transform.InferType()(mod)
output = func_8211()
func_8212 = relay.Function([], output)
mutated_mod['func_8212'] = func_8212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7428_call = mod.get_global_var('func_7428')
func_7429_call = mutated_mod.get_global_var('func_7429')
call_8213 = func_7428_call()
call_8214 = func_7428_call()
output = relay.Tuple([call_8213,])
output2 = relay.Tuple([call_8214,])
func_8229 = relay.Function([], output)
mod['func_8229'] = func_8229
mod = relay.transform.InferType()(mod)
output = func_8229()
func_8230 = relay.Function([], output)
mutated_mod['func_8230'] = func_8230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5839_call = mod.get_global_var('func_5839')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_8272 = func_5839_call()
call_8273 = func_5839_call()
output = relay.Tuple([call_8272,])
output2 = relay.Tuple([call_8273,])
func_8284 = relay.Function([], output)
mod['func_8284'] = func_8284
mod = relay.transform.InferType()(mod)
output = func_8284()
func_8285 = relay.Function([], output)
mutated_mod['func_8285'] = func_8285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6675_call = mod.get_global_var('func_6675')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_8289 = relay.TupleGetItem(func_6675_call(), 0)
call_8290 = relay.TupleGetItem(func_6677_call(), 0)
output = relay.Tuple([call_8289,])
output2 = relay.Tuple([call_8290,])
func_8307 = relay.Function([], output)
mod['func_8307'] = func_8307
mod = relay.transform.InferType()(mod)
output = func_8307()
func_8308 = relay.Function([], output)
mutated_mod['func_8308'] = func_8308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5839_call = mod.get_global_var('func_5839')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_8393 = func_5839_call()
call_8394 = func_5839_call()
func_8088_call = mod.get_global_var('func_8088')
func_8091_call = mutated_mod.get_global_var('func_8091')
var_8400 = relay.var("var_8400", dtype = "bool", shape = ())#candidate|8400|()|var|bool
var_8401 = relay.var("var_8401", dtype = "bool", shape = (90,))#candidate|8401|(90,)|var|bool
call_8399 = relay.TupleGetItem(func_8088_call(relay.reshape(var_8400.astype('bool'), []), relay.reshape(var_8401.astype('bool'), [1, 15, 6]), ), 0)
call_8402 = relay.TupleGetItem(func_8091_call(relay.reshape(var_8400.astype('bool'), []), relay.reshape(var_8401.astype('bool'), [1, 15, 6]), ), 0)
func_8072_call = mod.get_global_var('func_8072')
func_8074_call = mutated_mod.get_global_var('func_8074')
call_8408 = relay.TupleGetItem(func_8072_call(), 0)
call_8409 = relay.TupleGetItem(func_8074_call(), 0)
func_6547_call = mod.get_global_var('func_6547')
func_6549_call = mutated_mod.get_global_var('func_6549')
call_8414 = func_6547_call()
call_8415 = func_6547_call()
output = relay.Tuple([call_8393,call_8399,var_8400,var_8401,call_8408,call_8414,])
output2 = relay.Tuple([call_8394,call_8402,var_8400,var_8401,call_8409,call_8415,])
func_8429 = relay.Function([var_8400,var_8401,], output)
mod['func_8429'] = func_8429
mod = relay.transform.InferType()(mod)
mutated_mod['func_8429'] = func_8429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8429_call = mutated_mod.get_global_var('func_8429')
var_8431 = relay.var("var_8431", dtype = "bool", shape = ())#candidate|8431|()|var|bool
var_8432 = relay.var("var_8432", dtype = "bool", shape = (90,))#candidate|8432|(90,)|var|bool
call_8430 = func_8429_call(var_8431,var_8432,)
output = call_8430
func_8433 = relay.Function([var_8431,var_8432,], output)
mutated_mod['func_8433'] = func_8433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8072_call = mod.get_global_var('func_8072')
func_8074_call = mutated_mod.get_global_var('func_8074')
call_8572 = relay.TupleGetItem(func_8072_call(), 0)
call_8573 = relay.TupleGetItem(func_8074_call(), 0)
output = call_8572
output2 = call_8573
func_8598 = relay.Function([], output)
mod['func_8598'] = func_8598
mod = relay.transform.InferType()(mod)
output = func_8598()
func_8599 = relay.Function([], output)
mutated_mod['func_8599'] = func_8599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6664_call = mod.get_global_var('func_6664')
func_6665_call = mutated_mod.get_global_var('func_6665')
call_8603 = relay.TupleGetItem(func_6664_call(), 0)
call_8604 = relay.TupleGetItem(func_6665_call(), 0)
const_8605 = relay.const([[[2.245398,6.992906,-2.652503,8.187697,9.906467],[-8.962681,-0.957431,-2.941321,-9.639913,5.380527],[-8.961568,-7.000596,-4.689678,-2.316510,-9.620362]],[[-3.473848,7.967531,-0.523594,6.665359,5.715805],[-3.920313,6.362055,9.794923,3.132320,4.254925],[-2.291483,5.362535,7.441973,4.755948,1.658529]],[[4.722497,3.127356,3.464120,3.514167,9.469881],[-1.236695,-5.645220,6.071388,5.167023,-4.932178],[9.127939,2.913707,7.613257,8.197561,-5.077424]],[[-2.332972,-3.885871,-0.100913,1.599514,-1.799049],[5.481845,6.478352,-7.994143,9.263844,9.139702],[-3.468873,-3.866097,7.540742,-5.312663,-6.365884]],[[1.267358,1.824262,-2.360949,4.944001,8.095678],[9.452489,-5.046298,-7.606712,1.321356,6.659236],[3.457419,7.344251,2.121381,9.050033,0.623002]],[[-3.790528,-0.045271,-0.409831,-1.823113,8.680152],[-4.925458,-0.734177,9.492098,3.780457,-8.298230],[5.925188,9.638140,1.333026,0.303028,-2.620748]],[[3.522622,7.778516,-1.096970,-2.377422,3.407612],[-6.535799,-0.248971,8.273880,-4.707171,-1.784628],[3.072720,-4.212946,6.445239,4.607516,0.405647]],[[9.102425,-0.302199,-1.812859,1.284325,5.664855],[-3.964531,-7.570600,-5.088661,-7.231157,-7.870838],[7.036288,-9.458084,-1.435126,-3.181951,-3.752311]],[[-1.927400,-0.270563,-5.577721,5.632640,7.261497],[7.431013,7.329640,2.331582,3.741232,-8.813132],[-7.349836,1.757865,6.535398,-8.644049,4.844560]]], dtype = "float32")#candidate|8605|(9, 3, 5)|const|float32
bop_8606 = relay.minimum(call_8603.astype('uint64'), const_8605.astype('uint64')) # shape=(9, 3, 5)
bop_8609 = relay.minimum(call_8604.astype('uint64'), const_8605.astype('uint64')) # shape=(9, 3, 5)
uop_8625 = relay.acosh(call_8603.astype('float32')) # shape=(9, 3, 1)
uop_8627 = relay.acosh(call_8604.astype('float32')) # shape=(9, 3, 1)
bop_8639 = relay.floor_divide(uop_8625.astype('float32'), relay.reshape(call_8603.astype('float32'), relay.shape_of(uop_8625))) # shape=(9, 3, 1)
bop_8642 = relay.floor_divide(uop_8627.astype('float32'), relay.reshape(call_8604.astype('float32'), relay.shape_of(uop_8627))) # shape=(9, 3, 1)
func_6547_call = mod.get_global_var('func_6547')
func_6549_call = mutated_mod.get_global_var('func_6549')
call_8644 = func_6547_call()
call_8645 = func_6547_call()
func_8211_call = mod.get_global_var('func_8211')
func_8212_call = mutated_mod.get_global_var('func_8212')
call_8656 = func_8211_call()
call_8657 = func_8211_call()
func_6085_call = mod.get_global_var('func_6085')
func_6086_call = mutated_mod.get_global_var('func_6086')
call_8658 = relay.TupleGetItem(func_6085_call(), 1)
call_8659 = relay.TupleGetItem(func_6086_call(), 1)
func_925_call = mod.get_global_var('func_925')
func_928_call = mutated_mod.get_global_var('func_928')
var_8662 = relay.var("var_8662", dtype = "float64", shape = (54,))#candidate|8662|(54,)|var|float64
call_8661 = relay.TupleGetItem(func_925_call(relay.reshape(var_8662.astype('float64'), [9, 2, 3])), 0)
call_8663 = relay.TupleGetItem(func_928_call(relay.reshape(var_8662.astype('float64'), [9, 2, 3])), 0)
bop_8667 = relay.minimum(uop_8625.astype('float32'), relay.reshape(call_8658.astype('float32'), relay.shape_of(uop_8625))) # shape=(9, 3, 1)
bop_8670 = relay.minimum(uop_8627.astype('float32'), relay.reshape(call_8659.astype('float32'), relay.shape_of(uop_8627))) # shape=(9, 3, 1)
uop_8671 = relay.asinh(call_8644.astype('float32')) # shape=(9, 3, 1)
uop_8673 = relay.asinh(call_8645.astype('float32')) # shape=(9, 3, 1)
bop_8687 = relay.right_shift(bop_8639.astype('int16'), relay.reshape(uop_8671.astype('int16'), relay.shape_of(bop_8639))) # shape=(9, 3, 1)
bop_8690 = relay.right_shift(bop_8642.astype('int16'), relay.reshape(uop_8673.astype('int16'), relay.shape_of(bop_8642))) # shape=(9, 3, 1)
output = relay.Tuple([bop_8606,call_8656,call_8661,var_8662,bop_8667,bop_8687,])
output2 = relay.Tuple([bop_8609,call_8657,call_8663,var_8662,bop_8670,bop_8690,])
func_8709 = relay.Function([var_8662,], output)
mod['func_8709'] = func_8709
mod = relay.transform.InferType()(mod)
mutated_mod['func_8709'] = func_8709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8710 = relay.var("var_8710", dtype = "float64", shape = (54,))#candidate|8710|(54,)|var|float64
func_8709_call = mutated_mod.get_global_var('func_8709')
call_8711 = func_8709_call(var_8710)
output = call_8711
func_8712 = relay.Function([var_8710], output)
mutated_mod['func_8712'] = func_8712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mod.get_global_var('func_5878')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_8721 = func_5878_call()
call_8722 = func_5878_call()
func_7959_call = mod.get_global_var('func_7959')
func_7961_call = mutated_mod.get_global_var('func_7961')
call_8735 = relay.TupleGetItem(func_7959_call(), 0)
call_8736 = relay.TupleGetItem(func_7961_call(), 0)
func_6240_call = mod.get_global_var('func_6240')
func_6241_call = mutated_mod.get_global_var('func_6241')
call_8765 = relay.TupleGetItem(func_6240_call(), 1)
call_8766 = relay.TupleGetItem(func_6241_call(), 1)
func_8229_call = mod.get_global_var('func_8229')
func_8230_call = mutated_mod.get_global_var('func_8230')
call_8777 = relay.TupleGetItem(func_8229_call(), 0)
call_8778 = relay.TupleGetItem(func_8230_call(), 0)
output = relay.Tuple([call_8721,call_8735,call_8765,call_8777,])
output2 = relay.Tuple([call_8722,call_8736,call_8766,call_8778,])
func_8782 = relay.Function([], output)
mod['func_8782'] = func_8782
mod = relay.transform.InferType()(mod)
mutated_mod['func_8782'] = func_8782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8782_call = mutated_mod.get_global_var('func_8782')
call_8783 = func_8782_call()
output = call_8783
func_8784 = relay.Function([], output)
mutated_mod['func_8784'] = func_8784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6240_call = mod.get_global_var('func_6240')
func_6241_call = mutated_mod.get_global_var('func_6241')
call_8788 = relay.TupleGetItem(func_6240_call(), 0)
call_8789 = relay.TupleGetItem(func_6241_call(), 0)
output = relay.Tuple([call_8788,])
output2 = relay.Tuple([call_8789,])
func_8791 = relay.Function([], output)
mod['func_8791'] = func_8791
mod = relay.transform.InferType()(mod)
mutated_mod['func_8791'] = func_8791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8791_call = mutated_mod.get_global_var('func_8791')
call_8792 = func_8791_call()
output = call_8792
func_8793 = relay.Function([], output)
mutated_mod['func_8793'] = func_8793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7959_call = mod.get_global_var('func_7959')
func_7961_call = mutated_mod.get_global_var('func_7961')
call_8860 = relay.TupleGetItem(func_7959_call(), 0)
call_8861 = relay.TupleGetItem(func_7961_call(), 0)
output = call_8860
output2 = call_8861
func_8880 = relay.Function([], output)
mod['func_8880'] = func_8880
mod = relay.transform.InferType()(mod)
mutated_mod['func_8880'] = func_8880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8880_call = mutated_mod.get_global_var('func_8880')
call_8881 = func_8880_call()
output = call_8881
func_8882 = relay.Function([], output)
mutated_mod['func_8882'] = func_8882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6360_call = mod.get_global_var('func_6360')
func_6361_call = mutated_mod.get_global_var('func_6361')
call_8883 = func_6360_call()
call_8884 = func_6360_call()
output = call_8883
output2 = call_8884
func_8941 = relay.Function([], output)
mod['func_8941'] = func_8941
mod = relay.transform.InferType()(mod)
mutated_mod['func_8941'] = func_8941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8941_call = mutated_mod.get_global_var('func_8941')
call_8942 = func_8941_call()
output = call_8942
func_8943 = relay.Function([], output)
mutated_mod['func_8943'] = func_8943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6432_call = mod.get_global_var('func_6432')
func_6433_call = mutated_mod.get_global_var('func_6433')
call_8999 = func_6432_call()
call_9000 = func_6432_call()
func_7181_call = mod.get_global_var('func_7181')
func_7183_call = mutated_mod.get_global_var('func_7183')
call_9050 = relay.TupleGetItem(func_7181_call(), 0)
call_9051 = relay.TupleGetItem(func_7183_call(), 0)
output = relay.Tuple([call_8999,call_9050,])
output2 = relay.Tuple([call_9000,call_9051,])
func_9063 = relay.Function([], output)
mod['func_9063'] = func_9063
mod = relay.transform.InferType()(mod)
output = func_9063()
func_9064 = relay.Function([], output)
mutated_mod['func_9064'] = func_9064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6486_call = mod.get_global_var('func_6486')
func_6487_call = mutated_mod.get_global_var('func_6487')
call_9069 = relay.TupleGetItem(func_6486_call(), 1)
call_9070 = relay.TupleGetItem(func_6487_call(), 1)
output = relay.Tuple([call_9069,])
output2 = relay.Tuple([call_9070,])
func_9081 = relay.Function([], output)
mod['func_9081'] = func_9081
mod = relay.transform.InferType()(mod)
output = func_9081()
func_9082 = relay.Function([], output)
mutated_mod['func_9082'] = func_9082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7096_call = mod.get_global_var('func_7096')
func_7098_call = mutated_mod.get_global_var('func_7098')
call_9113 = func_7096_call()
call_9114 = func_7096_call()
output = call_9113
output2 = call_9114
func_9137 = relay.Function([], output)
mod['func_9137'] = func_9137
mod = relay.transform.InferType()(mod)
output = func_9137()
func_9138 = relay.Function([], output)
mutated_mod['func_9138'] = func_9138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8941_call = mod.get_global_var('func_8941')
func_8943_call = mutated_mod.get_global_var('func_8943')
call_9314 = func_8941_call()
call_9315 = func_8941_call()
var_9326 = relay.var("var_9326", dtype = "float64", shape = (9, 2, 3))#candidate|9326|(9, 2, 3)|var|float64
bop_9327 = relay.bitwise_xor(call_9314.astype('uint8'), relay.reshape(var_9326.astype('uint8'), relay.shape_of(call_9314))) # shape=(9, 2, 3)
bop_9330 = relay.bitwise_xor(call_9315.astype('uint8'), relay.reshape(var_9326.astype('uint8'), relay.shape_of(call_9315))) # shape=(9, 2, 3)
func_1977_call = mod.get_global_var('func_1977')
func_1980_call = mutated_mod.get_global_var('func_1980')
const_9334 = relay.const([4.896992,3.676325,-7.848407,-1.525678,6.920755,7.325500,1.151928,-1.393358,3.155025,3.570874,6.835550,6.119233,-1.000552,1.392564,5.129332,9.983273,1.551005,-5.277228,-2.360349,-9.753078,-1.992205,1.363180,8.389468,6.542211,1.986636,-4.391582,-3.884408,-1.815745,-3.357957,-3.631866,0.618698,-0.440878,-0.040680,-6.123803,7.836039,-9.528052,4.852225,1.984570,-7.986726,6.413667,-5.428223,-0.024241,-4.207798,0.949031,8.436744,-4.499350,3.637825,1.893796,1.408127,1.253961,-0.062951,-4.457328,9.794671,-8.899929,-5.157014,6.376860,8.370997,7.470941,2.296605,2.296285,2.765949,0.699589,-6.185281,-8.156288,-5.996974,9.697905,-0.408807,-2.699216,1.736841,4.016191,3.906877,-2.508835,-8.192026,-1.795013,9.288532,-5.956076,2.437787,4.152739,7.758983,9.130252,7.264325,-1.895182,-3.807060,-2.346417,-1.490211,2.833890,-4.900112,-0.352696,6.966975,-8.500823,-7.873665,5.076297,-4.852965,-6.380568,0.975069,-9.677291,-0.914844,-4.689274,9.084162,-7.583571,-4.661593,0.457432,-6.168963,5.297268,-5.597224,-0.538652,4.062023,-0.036802,-7.648728,6.151882,-2.726072,6.603090,-9.522329,5.328395,-0.483078,3.311283,9.637988,5.151750,5.288132,-8.557626,8.002720,-2.721532,-1.993095,-2.329281,8.657351,-1.591904,8.487146,-9.850311,8.315413,-0.005333,-4.137772,-7.095440,-4.391528,5.084559,5.619117,-1.708076,-6.202945,5.724847,1.454067,3.889303,5.095970,3.717525,8.443606,-0.134340,7.335535,-5.354518,2.664689,-1.039975,1.101810,8.770320,5.918975,6.346802,-1.799714,-8.700856,-4.147470,1.173861,-4.830627,5.841912,-9.520587,-6.043073,-5.594466,3.046053,-4.618255,9.422273,2.448575,-5.363603,-3.626911,-7.506289,-3.273071,1.537605,6.438468,-5.769219,3.370554,4.622146,1.918079,5.411687,4.405265,6.917258,-0.529421,0.158267,3.293866,-6.413518,1.077002,1.243402,-6.523135,-9.178139,0.156238,3.340569,-7.929438,-2.769054,-0.292888,9.351560,9.148399,8.695288,-5.970057,7.166738,-8.038634,4.125422,8.573860,3.033590,7.627875,8.296776,-3.943569,7.650501,6.942510,0.320923,-4.503026,4.902307,0.058521,2.472343,6.950645,-6.909746,0.127494,1.948535,-9.305994,-6.487717,4.973252,-5.845006,-7.195256,-2.272582,1.166520,9.380282,0.957840,3.356732,-2.053561,-9.819649,-2.511835,7.288725,-1.211282,-1.794558,-9.262299,9.905997,-2.212102,0.905698,2.599649,-6.406593,3.119838,-8.131988,0.892552,-1.697887,6.540169,2.738698,1.673808,8.920894,-5.225471,-1.445038,-0.090738,-4.391713,0.170158,0.183930,1.526066,4.589676,5.935306,1.625855,-0.861301,-2.167728,-6.835014,1.733038,2.686646,-1.196874,-5.819527,-7.628441,-0.836159,8.166042,-9.928456,-0.398664,-0.075729,3.782796,-7.720161,-1.874050,-6.417080,-9.046241,4.764220,-3.775609,-4.716716,-9.573593,4.816164,8.886152,9.204833,2.622558], dtype = "float64")#candidate|9334|(280,)|const|float64
const_9335 = relay.const([5.754487,9.746803,-7.915245,-1.751055,9.222792,2.585795,-2.236188,6.103678,-9.487888,0.063309,-4.571475,6.596141,9.692794,1.341074,1.167130,2.977632,8.932443,-0.541315,-6.099068,-7.707343,2.878628,-2.532010,7.305076,-6.254489,1.205523,4.635353,-2.783676,9.765892,5.062536,-6.421696,-7.220411,-0.950980,-3.715007,7.285805,2.586434,-4.883141,5.666875,2.732610,-3.801453,8.491714,0.416782,5.170901,3.537601,-7.346786,-9.074638,0.529301,-1.587201,-3.166140,-3.991222,6.360484,-3.647599,-8.656812,2.976303,-4.014240,9.088257,6.949784,8.844260,-0.686768,-1.759940,8.975535,8.394486,4.029813,-4.565742,7.348374,4.407809,6.477858,-5.637998,8.625734,6.577341,-6.133978,5.496396,0.455262,-1.822431,-9.890614,-1.680678,3.678970,-9.471013,5.603713,7.754264,-8.620283,-3.585128,-4.412904,9.194337,-9.723426,5.252886,-6.367605,-1.277112,8.239786,5.241380,0.546496,-1.910864,-5.562365,0.298296,2.028053,-1.356348,7.178076,7.072416,2.766493,-6.648483,4.362829,-8.203694,-3.417137,-7.130432,-9.803805,4.303543,2.718237,-0.955685,3.331532,-4.788569,-8.106403,-7.148444,0.967243,7.438425,-3.587014,-4.591646,-4.083780,8.556039,3.103409,-7.740930,-2.591736,-0.452448,1.338470,4.282303,-0.732556,-2.977306,-2.801475,3.124667,-1.979393,-7.507323,-3.193500,6.405339,-8.426733,7.910352,-4.192615,5.818412,-0.500582,-6.571921,-4.881660,-9.768604,0.291477,-9.303802,5.759074,9.047020,-5.617120,-5.118480,-7.487081,3.602960,1.129401,4.708805,9.067291,-8.837838,-1.812687,8.303613,-4.703596,1.522646,-9.476944,3.424137,3.485739,-5.840468,-2.234290,-1.223881,-9.965390,1.701601,5.256584,9.815636,6.998046,-3.788443,-0.272700,9.184949,3.570132,1.108449,-8.315859,8.807601,3.899325,7.522116,-5.894173,9.935187,-1.807889,-7.850029,5.534035,-5.588798,0.965483,-6.197720,-0.925921,-9.388947,-3.525027,-5.682702,-1.743822,2.961003,8.094228,-7.264058,-8.056135,-3.357791,-7.534995,-9.817846,-0.994158,6.700871,3.121652,5.834867,3.846752,4.294136,2.957272,-2.958920,4.900722,-8.311044,-2.576722,1.995064,-0.716805,8.294366,-3.379643,-1.691903,-9.330357,5.258125,3.585653,-0.756769,-5.084648,-1.936539,3.292305,-8.756280,-1.183395,2.301813,4.974815,-2.017957,-8.673880,-8.775701,0.366071,8.511331,-2.167380,-9.995877,0.425921,-0.155809,-4.148392,-8.790182,1.549860,9.365101,1.283746,5.541107,9.714923,-3.284632,5.592612,-8.389462,3.388811,4.970273,-7.805356,1.323529,-2.626204,-5.841058,-0.274318,-9.169503,1.732193,-6.621495,-9.253629,0.434932,8.385676,1.907061,-5.256154,9.912206,5.981882,-2.135844,-3.632276,0.281564,0.881724,-1.753759,-2.560798,-0.240703,-7.950942,-7.894834,-5.923580,-3.134964,6.797427,-1.777660,4.136500,9.220555,-5.444495,7.349038,1.473189,1.280715,-4.133895,6.687947,-4.724588,-6.118796,-0.093608,8.720836,-0.238780,-9.832893,2.266444,8.842139,-2.694360,0.614198,-2.029602,-6.936437,-5.944955,5.274750,5.394748,4.686310,-2.896254,-4.335563,7.490716,8.234506,6.132912,8.039218,-8.497530,9.961535,-1.552707,-3.140803,2.761637,-7.031776,-0.640244,-6.789428,-7.522074,-5.971224,1.269138,7.863232,-6.846570,-2.886489,-7.653277,0.697369,3.235953,-3.598214,9.116350,-0.717540,4.654817,-2.461746,-8.749870,9.513762,4.671882,4.894296,-2.530988,6.124313,7.568009,-1.526331,5.465767,4.355370,-0.736357,-4.636906,-1.953673,0.355718,-2.491284,5.279891,-0.894658,7.117258,-9.752155,1.765931,-4.168672,-7.411531,-0.144778,6.274735,-5.720291,-2.833157,-6.866931,-0.043128,-9.153947,-3.310419,-1.151687,2.562893,-8.004794,-7.534640,-6.478544,7.470069,-6.744831,-7.167428,-4.863254,-1.816481,-4.313662,-2.673186,-0.134912,6.992161,-5.645705,9.859844,-5.418137,5.093531,0.753691,7.656304,7.942076,-9.542399,-2.105002,3.573361,4.235795,6.417735,-6.248993,-3.753246,4.577042,0.090638,-3.374620,-7.698072,-5.774963,5.355234,1.257692,0.901717,-4.991845,-8.081510,-9.658703,2.661801,4.588841,-8.805023,-6.394098,-6.033982,-5.556777,9.175178,-2.568553,5.742562,-0.008003,9.053445,-6.284320,-9.783631,-6.654162,4.243194,-8.951281,-3.733364,-9.269413,-6.015038,-5.483564,-4.789159,-6.284387,5.757244,5.311395,5.223434,1.210912,1.393486,0.199813,-7.407451,-1.941017,3.249238,6.376441,-7.321366,-4.006646,-2.012931,-3.327742,2.213429,1.996020,2.575050,-9.323767,-2.614950,0.277564,2.465272,2.095055,7.991895,3.415496,1.046692,-1.954424,-4.526975,-9.267188,8.823670,2.993332,3.424583,6.834461,5.885236,-8.978552,-0.195946,6.372417,-0.457104,1.540341,-1.554195,-6.817997,4.148087,-5.379521,2.993451,7.963351,8.821669,-7.855219,1.611039,5.764941,2.155509,-8.721932,-5.909531,4.091478,-1.072359,-7.316385,4.751196,-9.377836,6.547025,3.031549,9.246651,-9.603215,8.863482,-6.542312,-5.665363,-5.801712,5.309806,6.989659,-5.435151,-8.773702,-2.446318,-8.787789,-5.953601,-8.258052,0.255723,-4.246574,-6.142359,2.403939,1.301664,-0.875541,4.695175,0.535241,8.559734,-6.045044,0.042628,6.292389,4.587759,-0.766875,-6.466882,-0.025712,-8.648670,8.599879,8.897211,-0.793291,-3.735916,-1.143745,4.351564,-2.551379,1.530545,2.496868,3.904328,-5.809121,-3.091693,-0.184324,6.153196,-4.480372,-4.000481,2.884458,-3.761917,-6.594385,-8.783055,-8.909893,0.213799,0.605022,-5.456884,9.683259,7.447770,-3.723341,-7.934254,-1.005822,0.335995,6.538191,-5.282104,1.050471,2.127881,2.324531,7.502806,2.496312,-2.816095,5.772618,4.634319,1.072338,-1.368506,-5.882691,-8.814614,-6.138392,4.277956,6.041709,-6.179765,-4.973381,2.642166,-5.110725,-8.322060,4.933214,-2.384553,1.894331,5.863298,-3.354374,-0.766644,6.668376,7.543522,6.253503,0.316825,6.927775,0.107834,1.257970,5.162185,9.688547,-8.507603,5.957231,0.774102,-6.858888,4.883208,-5.950717,-0.028657,-1.312787,-0.255934,-1.645533,4.695215,0.120817,-6.941928,9.768473,-8.488252,5.524749,3.951164,7.050330,5.173918,8.539367,-6.243951,-2.965887,2.656160,7.622073,-2.383598,-2.148409,3.896063,2.113813,-5.334760,2.349390,1.745273,6.336708,5.588296,-3.688400,4.958328,1.699919,7.604896,-4.095397,8.970316,-7.711522,3.589253,9.502482,7.090322,-6.916268,5.748768,-5.248415,-7.755167,2.615052,0.521701,-1.743168,4.690731,-7.870047,-7.587365,-9.455201,-8.224857,4.589930,5.638771,-0.872559,0.663274,-2.962354,4.353247,-8.168094,9.056292,2.576550,8.406088,6.798310,-0.749144,9.174899,-1.853616,-6.066740,5.325661,-6.948653,-8.994464,5.905172,-3.916670,-4.759516,-6.564478,6.197054,-5.005609,-8.403753,6.459707,-8.695458,-1.347929,-2.339557,0.841898,4.999589,-7.781804,3.307236,8.375509,2.875814,8.241841,0.695579,-6.542260,1.485173,9.375532,-9.539551,7.819148,-3.107580,-9.148669,-2.580822,9.768081,-1.842108,9.922231,-9.149999,-5.027225,-6.916118,5.331376,-7.890637,3.045973,-4.238141,5.225002,2.564166,-8.482802,-5.649741,-1.936823,-0.670687,6.862606,7.309831,0.709921,7.428309,6.819601,2.001680,4.086191,-6.367972,2.514026,9.593336,9.694212,8.594562,6.758059,1.574562,-2.682011,2.299742,-6.006441,-9.216523,9.779350,-4.713455,-8.527851,6.391293,7.754206,-2.912736,7.796151,1.538801,-6.788977,-0.212522,3.978153,9.972369,8.838660,3.369914,3.389940,9.368059,8.045180,-4.555851,9.445820,8.257775,3.536823,4.007079,2.624104,-2.647386,5.056229,6.537837,-3.797764,-3.128972,-8.559131,7.102928,-8.364637,-5.191448,-6.077013,6.822196,-8.614282,-9.041352,-1.290328,-0.684116,6.401293,9.668536,5.843163,8.664683,9.360752,-2.704007,8.258760,9.307862,-4.165907,7.924668,-5.456415,6.783303,4.965086,8.697663,4.692581,6.536187,-7.006325,-2.709954,-9.722318,1.684981,9.179366,1.673000,6.162007,-0.724843,-7.388127,5.584428,-7.243913,7.767434,-7.316082,6.147486,6.226064,-8.651609,8.005754,3.636030,-5.640596,8.210470,-7.998661,-7.388154,-1.647344,-8.999937,-2.686652,1.214856,-0.572179,-8.352335,9.989159,-3.399693,8.782115,-0.296300,6.764786,-4.791729,-1.877166,-7.064004,-6.976747,4.217695,6.180222,0.048453,2.457091,2.552543,8.320646,-7.793042,2.585659,9.080573,-0.706434,-6.294130,-3.083515,2.788267,-8.317634,1.626855,0.493535,1.220449,-7.771725,-6.054082,-8.119926,0.087187,-5.433421,-8.761827,2.782859,-6.090919,-4.197472,9.671418,0.044745,7.330828,-1.740330,-6.255961,0.099181,1.009375,-5.418352,0.046392,1.099311,-4.826695,8.416823,8.559404,1.944457,-1.611688,-0.033740,-2.833691,-2.980905,-5.344768,-1.653189,-2.183261,-6.649788,-6.364267,-3.968540,0.401476,-6.414537,7.955441,3.585542,-4.341760,-0.376549,-1.200690,8.053693,-1.659504,-3.016029,-8.577034,7.411621,7.238255,-4.988584,-4.688195,4.213020,-2.499357,4.415926,4.876885,9.051869,9.394553,-2.147997,-0.127333,-9.369016,-9.949139,2.499007,-2.436237,1.998582,8.617734,1.262638,-2.820082,5.555824,-7.689937,-4.218569,1.849622,-3.113908,9.922950,-7.121091,-5.836587,-7.769491,-6.829709,1.416320,-8.255601,-7.339255,3.005359,4.700388,-2.923795,-6.515415,-0.672285,1.350633,-9.222323,-2.441971,-8.351458,-0.225731,-1.636952,3.063982,-9.725453,7.824009,-0.008881,-2.358710,3.172982,0.124355,0.596600,-8.764602,5.887668,3.077360,9.456007,5.436027,5.009603,-4.616697,5.993552,-0.281802,9.723376,-2.910074,3.620122,4.334762,0.398562,-8.038220,-6.652689,-9.413345,-6.548380,-0.641118,8.183772,-9.279996,3.340382,-0.820463,-8.434618,-3.456237,-5.013318,2.903315,-6.794452,-2.278114,-3.999777,-6.730082,-9.817847,-4.474654,-0.210838,-7.539961,-7.866602,-3.830083,-7.663592,-9.544664,3.116305,-5.660218,-8.125680,2.286126,-4.965682,-7.179312,3.230096,5.010614,0.659545,-9.607632,-6.453004,9.074488,8.082802,-3.751518,3.224037,2.201820,-3.491158,-4.438544,0.009271,2.836154,-5.181713], dtype = "float64")#candidate|9335|(968,)|const|float64
call_9333 = relay.TupleGetItem(func_1977_call(relay.reshape(const_9334.astype('float64'), [8, 7, 5]), relay.reshape(const_9335.astype('float64'), [968,]), ), 0)
call_9336 = relay.TupleGetItem(func_1980_call(relay.reshape(const_9334.astype('float64'), [8, 7, 5]), relay.reshape(const_9335.astype('float64'), [968,]), ), 0)
output = relay.Tuple([bop_9327,call_9333,const_9334,const_9335,])
output2 = relay.Tuple([bop_9330,call_9336,const_9334,const_9335,])
func_9339 = relay.Function([var_9326,], output)
mod['func_9339'] = func_9339
mod = relay.transform.InferType()(mod)
var_9340 = relay.var("var_9340", dtype = "float64", shape = (9, 2, 3))#candidate|9340|(9, 2, 3)|var|float64
output = func_9339(var_9340)
func_9341 = relay.Function([var_9340], output)
mutated_mod['func_9341'] = func_9341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8782_call = mod.get_global_var('func_8782')
func_8784_call = mutated_mod.get_global_var('func_8784')
call_9524 = relay.TupleGetItem(func_8782_call(), 1)
call_9525 = relay.TupleGetItem(func_8784_call(), 1)
func_6715_call = mod.get_global_var('func_6715')
func_6717_call = mutated_mod.get_global_var('func_6717')
var_9555 = relay.var("var_9555", dtype = "float64", shape = (294,))#candidate|9555|(294,)|var|float64
call_9554 = relay.TupleGetItem(func_6715_call(relay.reshape(var_9555.astype('float64'), [3, 7, 14])), 0)
call_9556 = relay.TupleGetItem(func_6717_call(relay.reshape(var_9555.astype('float64'), [3, 7, 14])), 0)
bop_9567 = relay.subtract(var_9555.astype('float64'), relay.reshape(call_9554.astype('float64'), relay.shape_of(var_9555))) # shape=(294,)
bop_9570 = relay.subtract(var_9555.astype('float64'), relay.reshape(call_9556.astype('float64'), relay.shape_of(var_9555))) # shape=(294,)
bop_9576 = relay.logical_or(call_9554.astype('bool'), relay.reshape(bop_9567.astype('bool'), relay.shape_of(call_9554))) # shape=(3, 7, 14)
bop_9579 = relay.logical_or(call_9556.astype('bool'), relay.reshape(bop_9570.astype('bool'), relay.shape_of(call_9556))) # shape=(3, 7, 14)
func_1301_call = mod.get_global_var('func_1301')
func_1304_call = mutated_mod.get_global_var('func_1304')
const_9581 = relay.const([-9,-7,6,4,-10,-3,3,-9,10,-4,4,10,6,-10,-5,5,1,-2,-7,6,-9,4,-5,-4,-10,-7,4,8,-9,8,-9,-7,6,-7,6,-2,-2,-8,-7,2,-1,-4,6,-4,2,8,8,10,-7,-8,-2,-9,-5,1,-9,1,-4,6,7,-5,-3,-10,10,-6,-9,-9,3,7,-5,1,-3,-6,7,9,2,-5,-8,-8,7,7,-8,-8,6,-10,4,-5,-6,-6,-10,9,8,9,-10,-4,2,-2,-10,1,4,5,5,-4,2,3,4,6,-9,6,3,-6,-1,-5,-7,-7,8,-10,3,-3,6,6,2,-10,8,-10,-7,-6,-3,1,7,-2,9,9,5,-8,-2,1,-8,-4,-10,-7,-1,7,-4,-5,-6,8,-8,-1,1,-6,-6,4,9,-10,2,-5,-2,8,-3,-9,-9,-6,3,2,9,-4,8,-8,-8,7,10,5,-6,-10,-4,-8,5,2,3,10,5,-4,-4,9,3,-3,9,4,1,-2,4,-9,-6,-7,-6,-1,-4,3,9,9,-9,-4,-10,-2,2,-5,-6,7,7,10], dtype = "uint64")#candidate|9581|(210,)|const|uint64
var_9582 = relay.var("var_9582", dtype = "float64", shape = (156,))#candidate|9582|(156,)|var|float64
call_9580 = relay.TupleGetItem(func_1301_call(relay.reshape(const_9581.astype('uint64'), [3, 5, 14]), relay.reshape(var_9582.astype('float64'), [156,]), ), 2)
call_9583 = relay.TupleGetItem(func_1304_call(relay.reshape(const_9581.astype('uint64'), [3, 5, 14]), relay.reshape(var_9582.astype('float64'), [156,]), ), 2)
func_5839_call = mod.get_global_var('func_5839')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_9615 = func_5839_call()
call_9616 = func_5839_call()
output = relay.Tuple([call_9524,bop_9576,call_9580,const_9581,var_9582,call_9615,])
output2 = relay.Tuple([call_9525,bop_9579,call_9583,const_9581,var_9582,call_9616,])
func_9617 = relay.Function([var_9555,var_9582,], output)
mod['func_9617'] = func_9617
mod = relay.transform.InferType()(mod)
var_9618 = relay.var("var_9618", dtype = "float64", shape = (294,))#candidate|9618|(294,)|var|float64
var_9619 = relay.var("var_9619", dtype = "float64", shape = (156,))#candidate|9619|(156,)|var|float64
output = func_9617(var_9618,var_9619,)
func_9620 = relay.Function([var_9618,var_9619,], output)
mutated_mod['func_9620'] = func_9620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8072_call = mod.get_global_var('func_8072')
func_8074_call = mutated_mod.get_global_var('func_8074')
call_9637 = relay.TupleGetItem(func_8072_call(), 0)
call_9638 = relay.TupleGetItem(func_8074_call(), 0)
func_4368_call = mod.get_global_var('func_4368')
func_4374_call = mutated_mod.get_global_var('func_4374')
var_9649 = relay.var("var_9649", dtype = "float64", shape = (60, 20))#candidate|9649|(60, 20)|var|float64
const_9650 = relay.const([1,-2,-8,7,10,-1,2,1,6,9,6,6,7,-10,7,6,-9,-10,1,2,-9,-4,-6,4,-3,-9,-2,6,-4,-8,-2,-8,-5,10,4,-5,3,-5,-6,-1,3,9,5,-5,-4,10,9,6,6,10,-8,-4,-6,-9,7,-3,-2,-6,-8,7,-5,-7,-7,-10,1,-5,-5,-9,8,-5,-2,7,-1,-4,-5,-10,-2,-7,-1,3,7,2,-9,-4,1,-3,-8,-8,5,-7,-4,3,5,4,8,-10,7,8,-5,4,10,10,8,-6,-1,-5,9,3,-1,1,-6,6,-5,1,7,-5,-3,-6,4,-5,-4,-1,8,6,-1,-9,-2,-2,1,6,-1,6,9,-6,-3,-7,9,9,-2,-7,4,9,2,2,7,1,2,-3,-9,-1,7,-9,-7,-6,-3,-3,-10,2,8,-5,-1,-4,-6,-3,3,9,-3,-8,7,3,-6,9,-1,-8,-5,3,-1,-1,1,4,-8,-5,3,5,-9,2,-5,1,-1,6,-4,-4,-5,4,8,1,2,1,3,-7,-4,-8,-9,-6,8,8,10,-8,6,-2,-3,10,-1,3,7,-6,9,2,1,-10,-2,2,10,-9,-6,-9,-4,-4,-2,-10,-5,1,-10,-3,3,-1,-2,8,-7,-6,-6,9,8,6,10,-10,-2,-10,4,-3,-9,-3,-9,2,-8,8,5,-5,-3,-4,6,-10,5,-9,5,7,6,4,-10,3,5,3,3,5,-10,-10,5,5,2,-10], dtype = "uint64")#candidate|9650|(280,)|const|uint64
const_9651 = relay.const(6, dtype = "int32")#candidate|9651|()|const|int32
const_9652 = relay.const([[7.948066],[8.809069],[6.658153],[4.715076],[-0.848551],[5.483772],[4.140570],[-3.440261],[-8.142491],[4.931325],[1.838512],[-1.239873],[5.560852],[-9.091574],[8.129747],[0.569610],[7.767831],[7.738045],[7.629761],[9.724077],[0.514801],[-4.962413],[0.693328],[-4.021403],[-1.991215],[-7.101704],[3.382657],[-4.435662],[-2.055299],[-1.317142],[1.767892],[-4.024910],[7.550398],[-0.075458],[-2.789905],[-6.756725],[-4.889520],[3.796606],[8.259871],[8.693215],[9.843197],[8.014925],[-5.354104],[-2.432152],[5.713488],[6.001629],[-0.916638],[8.521588],[8.118161],[-7.108369],[-2.925227],[-5.056411],[-1.822793],[-4.730154],[0.698188],[0.915628],[8.009086],[-1.048343],[-4.606870],[-1.857153],[1.851056],[-9.838446],[9.326831],[7.210953],[5.483612],[7.901401],[-6.619198],[7.111238],[9.382333],[2.999734],[7.489791],[2.588270],[9.457451],[6.275933],[-9.203610],[4.857319],[3.389727],[0.719968],[-4.447620],[3.782717],[0.202193],[0.418152],[-5.935546],[-3.093086],[-1.481353],[3.745388],[-5.800717],[4.016892],[-6.484004],[2.188084],[-9.859909],[-9.126136],[-5.879489],[1.251643],[8.855148],[4.090865],[8.131230],[-2.521196],[3.113569],[8.709597],[-0.514473],[8.071976],[9.965537],[7.522006],[5.411950],[4.027471],[1.813415],[7.985404],[9.599754],[-4.147969],[-5.130815],[2.660104],[-1.764769],[0.818374],[-6.099234],[-1.583295],[2.254397],[7.784678],[-3.173283],[-3.745424],[9.278715],[4.828917],[-1.557191],[3.679784],[8.235343],[-7.015156],[2.660513],[6.255849],[3.399040],[5.174076],[2.295717],[7.204393],[2.533393],[-3.206477],[2.123266],[-6.456568],[-9.651570],[3.369389],[-7.293063],[-9.965026],[1.410346],[8.962272],[4.495254],[-9.842409],[-3.935438],[-2.145754],[3.884854],[-9.251050],[3.830017],[-0.085366],[-1.053793],[5.787847],[5.089466],[6.311376],[0.585553],[2.507645],[-2.681640],[1.679727],[-7.830781],[-6.489554],[0.561031],[-5.871945],[-5.407232],[-0.385356],[4.956087],[-0.391390],[5.343326],[-8.186598],[6.177971],[-1.268002],[-9.916614],[6.519287],[6.500055],[-6.238079],[-1.920479],[-5.909728],[6.778645],[4.081377],[9.997344],[1.225357],[-1.772133],[-8.416092],[-8.245099],[-0.075793],[-3.955770],[-6.478953],[7.150635],[4.108951],[4.198404],[-4.778280],[1.908722],[5.013544],[7.092649],[-0.037630],[-8.798645],[-2.999441],[-2.852651],[-0.876791],[6.371387],[-7.169689],[-9.739457],[-9.775168],[-1.390052],[-8.323980],[5.846628],[9.225518],[7.896843],[-9.386510],[2.333632],[5.914199],[-4.483842],[0.689811],[3.686616],[8.803699],[-2.057959],[-1.624503],[2.584914],[-2.879162],[6.279004],[2.315910],[9.232953],[1.109631],[8.344916],[-1.631903],[-6.043046],[1.414115],[4.783555],[6.227910],[-1.928603],[5.183222],[-2.558860],[1.301111],[1.695685],[3.550793],[-9.206629],[3.706195],[-0.179198],[-3.099213],[-4.094278],[-0.785117],[9.816737],[-6.324924],[-2.904914],[5.069732],[-5.212238],[-2.860515],[-0.632828],[-2.587091],[6.636870],[-3.971624],[-7.437190],[-8.340560],[-8.854627],[0.329678],[0.391010],[-0.820143],[2.520424],[2.502092],[-4.157721],[-1.187646],[6.673777],[-2.896481],[4.537097],[7.216423],[-4.037021],[-9.177614],[-9.079931],[6.005648],[-7.945947],[4.851893],[9.013451],[-2.237406],[-5.094445],[-0.418367],[-1.300203],[-0.961824],[8.148732],[3.117325],[6.543734],[-3.919063],[5.754306],[7.989991],[8.566408],[-5.644548],[1.378946],[1.163205],[6.587950],[1.287718],[6.499704],[8.186148],[-6.215782],[2.626866],[-0.289952],[-7.947532],[-8.636977],[2.110602],[-8.487195],[1.790316],[-3.657834],[6.614694],[5.244087],[-8.337332],[-5.724076],[7.484112],[6.975402],[5.335925],[-0.230861],[-7.014178],[2.745416],[-3.253136],[7.049506],[9.919683],[-1.568961],[0.295618],[3.383135],[-8.130357],[3.345993],[0.136107],[-2.085057],[5.697473],[6.725679],[-8.941934],[1.013720],[-1.744274],[2.073145],[-1.474986],[5.614986],[-5.676788],[-2.104639],[-8.014199],[-1.303757],[9.053739],[2.063917],[8.821976],[5.150095],[8.684897],[3.875848],[-2.489138],[-2.492309],[-1.202443],[2.334115],[-4.189028],[-0.943593],[2.114467],[-7.222156],[-7.255977],[-8.177598],[-3.441248],[5.703087],[-1.169000],[-2.913867],[0.235873],[5.156116],[0.652926],[9.762463],[0.888925],[-2.730325],[2.442497],[0.722405],[-8.163070],[-9.115724],[-5.244981],[-7.917268],[-5.651759],[8.036930],[-1.824323],[-6.994189],[4.942054],[9.027964],[-1.586604],[-6.676427],[8.697500],[2.719866],[-1.869275],[6.468548],[3.256216],[1.945140],[6.650005],[-3.765562],[7.218966],[-8.848725],[-3.302248],[-3.272817],[-2.177927],[-1.968660],[-8.412557],[-6.783240],[1.336906],[-5.854141],[-5.704424],[-3.443059],[6.849707],[-1.854301],[7.144157],[-3.167196],[-9.067021],[-7.681685],[9.483302],[-3.610982],[-6.245323],[-7.978070],[-7.452525],[2.158336],[0.324394],[3.367377],[7.904730],[4.694836],[4.590867],[3.804505],[-6.697459],[-3.729204],[-5.927846],[9.624539],[9.279948],[1.790572],[-6.191224],[-0.358019],[5.489196],[8.711523],[5.296294],[-0.917486],[-4.738071],[6.518635],[9.467750],[5.167995],[-7.872449],[-4.089916],[-6.631599],[-8.445903],[-7.098824],[-9.625811],[-3.497442],[6.518456],[-5.223113],[-2.556178],[7.941255],[-4.563565],[-2.257724],[0.535967],[4.388301],[2.809650],[-8.536929],[-6.650925],[-9.204194],[-3.692846],[6.571655],[3.548975],[9.126340],[3.575944],[5.933717],[7.864535],[-6.857184],[2.726546],[6.065914],[9.317606],[0.462710],[-6.208968],[-4.943253],[-7.130963],[-4.898443],[4.614322],[4.487907],[7.992002],[9.166978],[-5.137723],[-3.755258],[5.647924],[-4.609215],[8.775034],[-2.518964],[-4.015816],[8.821441],[8.278647],[3.342752],[-4.617636],[9.926556],[9.405754],[1.409211],[4.323336],[3.947499],[7.148473],[-2.748685],[9.087474],[4.684013],[-4.107933],[3.590980],[5.838070],[-6.674051],[-2.156758],[0.461650],[3.181305],[8.883179],[5.485998],[4.087779],[7.556764],[9.752958],[-7.263157],[-3.406336],[-9.423676],[-0.558008],[5.799062],[1.258249],[-2.632940],[6.710110],[8.588270],[-0.514819],[0.885259],[-5.091963],[-9.446679],[-5.960187],[-7.904798],[-1.903645],[2.147337],[-8.539804],[6.513652],[-0.080622],[-2.838877],[2.167306],[8.949914],[-7.103283],[3.965813],[1.902024],[-6.815901],[-7.784523],[7.757131],[-1.017165],[-6.000094],[-1.023727],[4.322687],[5.590643],[0.386778],[1.184886],[4.479860],[6.295192],[-4.543367],[6.479300],[-9.121354],[-8.279582],[-1.510963],[1.172511],[7.320483],[-7.924864],[-8.245000],[6.887936],[7.408097],[-8.789223],[9.680995],[8.865032],[8.132158],[8.393919],[-4.935984],[8.919755],[-4.682316],[9.250543],[-2.953400],[-2.632170],[-0.404515],[1.934611],[-5.517369],[9.019784],[4.222624],[-0.793771],[2.413135],[5.541761],[-3.500299],[-8.971194],[-4.294326],[6.327911],[-0.273180],[9.004311],[4.841512],[-1.217236],[-9.469142],[6.346058],[3.021764],[6.092971],[-3.288139],[3.920834],[2.104901],[-2.485451],[4.300392],[-5.890439],[0.172419],[-0.137356],[-4.295724],[-6.649984],[-1.145285],[8.782137],[6.985946],[6.728155],[0.619312],[9.200651],[-5.684052],[-0.177156],[-8.554508],[-1.775430],[8.101702],[3.259668],[-9.309385],[-4.210112],[4.615688],[1.958830],[-0.698584],[2.638420],[9.518716],[-3.682707],[1.219634],[-4.990287],[-4.482033],[4.591636],[-8.581548],[-7.117409],[-6.950693],[-7.794967],[-7.742500],[4.624799],[3.477799],[4.172254],[8.545615],[3.919250],[9.785565],[-6.196771],[-7.337079],[-9.329047],[5.332566],[8.638769],[7.403235],[5.043298],[0.835966],[2.098951],[4.789511],[6.623064],[7.177050],[-9.402843],[5.254699],[6.877735],[2.293461],[7.846445],[-2.795385],[-7.658890],[1.493709],[3.520162],[2.227330],[-8.952188],[-2.993342],[-0.176455],[-1.622343],[7.034606],[-0.982624],[5.001456],[2.711290],[-6.989752],[-0.116562],[-2.597931],[-8.539400],[-9.931007],[-7.623102],[-1.687547],[-2.283089],[-5.273729],[-4.918390],[-5.049247],[6.828218],[-7.785677],[6.100513],[0.500147],[-4.076469],[4.464129],[-5.149251],[-0.533971],[-2.163123],[-4.917085],[-7.846490],[7.322774],[-1.523144],[-2.372714],[-6.211280],[6.228124],[-3.028348],[-1.761936],[5.710912],[-6.833202],[2.372636],[-1.963541],[-5.279639],[-1.765852],[0.733008],[3.123139],[-0.159741],[8.786599],[8.466294],[5.293864],[-9.423204],[8.567764],[9.766325],[1.015299],[8.638362],[-2.808803],[5.676493],[-2.862866],[1.263026],[2.671832],[-0.084843],[2.788385],[0.973076],[1.935029],[-9.714593],[-2.405633],[8.598968],[6.009736],[8.921924],[-6.514589],[-6.189012],[-0.987416],[9.605588],[7.516171],[0.778748],[-3.126213],[-2.507623],[-8.519915],[-2.443552],[-7.759365],[9.394181],[1.691803],[-6.311563],[1.386729],[9.113543],[-0.051832],[-2.967036],[-2.899060],[-1.739365],[1.780108],[-6.419458],[7.310198],[0.326850],[-7.339181],[2.583915],[-1.112994],[9.259389],[7.646123],[-8.097880],[-5.669859],[-7.578772],[5.441655],[5.334915],[8.092552],[-2.962213],[7.348930],[-7.320535],[1.001987],[8.344058],[7.603508],[-8.044640],[1.010476],[8.995526],[7.032943],[1.451197],[-5.604196],[-3.914729],[-4.104656],[8.117967],[5.682851],[-2.764957],[-7.423480],[7.359374],[-4.823695],[0.413334],[4.613298],[8.810559],[2.350468],[-4.422503],[-1.786292],[-9.776273],[3.106399],[3.743352],[-2.322871],[3.081898],[-3.816370],[7.545859],[-4.867265],[-6.120758],[2.932705],[-0.916072],[8.544575],[6.070292],[6.490608],[7.671614],[5.678647],[-4.503543],[-3.715569],[-4.619952],[-8.108088],[4.840366],[-6.687496],[1.282154],[2.043707],[5.328841],[1.003089],[-8.123130],[-2.935902],[8.656685],[6.958983],[6.036868],[1.623426],[6.998202],[2.762892],[-9.410579],[-8.181618],[-6.468284],[-7.136888],[6.929484],[1.195777],[-1.445494],[0.309532],[5.699327],[-7.891939],[3.708318],[9.150422],[-6.388173],[-6.318396],[5.647848],[-3.512310],[2.553028],[9.515639],[6.122603],[4.691632],[4.908001],[6.743421],[8.807449],[-2.917284],[-0.460346],[0.871685],[-8.707136],[7.861381],[6.817714],[6.458606],[9.627265],[8.443318],[-2.007348],[2.686096],[-7.454659],[-4.862415],[5.191564],[-2.572220],[-7.998924],[-0.883432],[4.558412],[-6.980632],[-4.430561],[7.287146],[2.768131],[-3.924783],[-2.443204],[0.434315],[-9.642443],[-0.453551],[6.294823],[9.203637],[-8.684639],[4.452505],[-5.033799],[-8.538056],[-8.669945],[-4.092297],[-0.740958],[-9.903253],[-0.571312],[-9.267807],[-7.511367],[8.744857],[-1.991399],[-1.965089],[-6.211255],[1.003303],[1.841931],[-6.649544],[-3.334496],[8.574743],[7.932999],[6.087300],[8.282766],[-7.284972],[0.916872],[-2.061372],[-8.836945],[-1.200264],[7.861638],[1.536404],[-2.146818],[0.175870],[3.233754],[-3.257900],[-2.731348],[-0.779864],[9.558100],[3.138291],[-1.909624],[-1.893296],[-5.284767],[5.002232],[-2.805552],[-8.709618],[-3.428877],[2.220078],[-8.844573],[-7.663188],[-5.432205],[1.416512],[0.919893],[5.982675],[5.216038],[4.458618],[-1.815639],[1.290429],[7.076051],[9.933171],[5.697675],[4.507423],[0.592021],[-0.335725],[5.168920],[-1.744063],[0.405162],[-0.052010],[1.079920],[3.872844],[-4.417575],[-3.552918],[-1.999058],[-4.160197],[8.003459],[8.987486],[9.632246],[-3.486438],[-1.412482],[-4.840789],[-0.018382],[5.688129],[-8.839372],[-9.184927],[0.368250],[-0.590405],[-1.189800],[-0.163820],[4.820435],[-9.984734],[4.757517],[8.202151],[8.290005],[1.528726],[-8.203167],[8.630690],[-2.851171],[4.884753],[4.109555],[6.993941],[4.710354],[-3.781446],[-0.389639],[8.593468],[6.840926],[-1.088645],[5.226413],[6.249395],[-8.665471],[-2.925815],[-6.395112],[4.479371],[7.863902],[6.924059],[-9.148197],[6.895753],[6.772334],[0.046485],[2.702983],[9.199381],[0.865761],[1.576896],[7.992873],[4.430845],[6.633164],[-6.072935],[1.376763],[2.707127],[-2.716893],[8.376777],[9.872030],[5.005708],[8.067977],[-5.670058],[4.845445],[8.700358],[-5.327757],[2.103817],[-6.812527],[4.430365],[1.481178],[1.613989],[3.706677],[1.692358],[-1.209034],[-0.276047],[3.807219],[-4.607405],[-5.930727],[8.894361],[-4.837035],[-8.303330],[7.503612],[-4.765212],[-1.948460],[-2.824439],[6.762320],[7.935615],[-4.976657],[5.135781],[7.364628],[-0.493659],[5.878655],[3.633309],[3.460941],[7.348115],[-7.896408],[-2.040608],[5.238160],[3.168006],[-6.410594],[2.232661],[5.306903],[-1.742439],[1.663529],[-4.271847],[9.412154],[-1.163233],[2.837087],[6.552381],[-3.389797],[-8.240760],[-6.390431],[5.064268],[5.069686],[-2.606777],[-5.583111],[-5.201693],[-4.225242],[5.952119],[-2.187684],[-7.489944],[-1.306004],[-7.202559],[7.175447],[-0.269077],[-7.948554],[-9.958608],[-8.626229],[-5.141165],[-7.180049],[7.649648],[6.563855],[-5.353805],[8.412808],[2.263899],[-9.083392],[7.310990],[-5.806496],[-3.990252],[9.173471],[-6.520047],[-5.109938],[5.877045],[-9.724120],[-2.721108],[-3.083148],[0.608291],[7.438419],[9.547055],[4.537279],[-4.843065],[-9.666253],[-2.947724],[5.778934],[-0.947821],[1.107115],[-9.014238],[6.319612],[-6.245310],[-2.477851],[-4.181085],[6.340584],[-5.750798],[-3.229717],[8.083400]], dtype = "float32")#candidate|9652|(1092, 1)|const|float32
call_9648 = relay.TupleGetItem(func_4368_call(relay.reshape(var_9649.astype('float64'), [15, 16, 5]), relay.reshape(const_9650.astype('uint64'), [280,]), relay.reshape(const_9651.astype('int32'), []), relay.reshape(const_9652.astype('float32'), [1092,]), ), 5)
call_9653 = relay.TupleGetItem(func_4374_call(relay.reshape(var_9649.astype('float64'), [15, 16, 5]), relay.reshape(const_9650.astype('uint64'), [280,]), relay.reshape(const_9651.astype('int32'), []), relay.reshape(const_9652.astype('float32'), [1092,]), ), 5)
func_6936_call = mod.get_global_var('func_6936')
func_6940_call = mutated_mod.get_global_var('func_6940')
const_9663 = relay.const([False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True], dtype = "bool")#candidate|9663|(126,)|const|bool
const_9664 = relay.const([True,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True], dtype = "bool")#candidate|9664|(1890,)|const|bool
call_9662 = relay.TupleGetItem(func_6936_call(relay.reshape(const_9663.astype('bool'), [126,]), relay.reshape(const_9664.astype('bool'), [9, 210]), ), 2)
call_9665 = relay.TupleGetItem(func_6940_call(relay.reshape(const_9663.astype('bool'), [126,]), relay.reshape(const_9664.astype('bool'), [9, 210]), ), 2)
func_6778_call = mod.get_global_var('func_6778')
func_6780_call = mutated_mod.get_global_var('func_6780')
const_9671 = relay.const([-3.193953,2.665289,6.392919,5.166292,-7.773058,-2.148260,-1.184745,0.306668,1.375887,7.606027,0.244159,-6.216675,-8.662744,-7.331004,-7.892627,-5.906214,-1.384138,8.965434,3.251976,7.418396,6.658492,2.206196,-1.131633,6.556615,7.260445,8.634905,6.351786,5.856704,1.865113,6.804484,7.678453,-5.831525,-8.189766,1.834995,-1.448318,1.872927,-0.915511,-1.590179,-5.819265,3.767779,-4.207199,-8.004414,-3.057176,6.153953,5.845102,-7.970477,0.015847,3.383100,-8.933760,4.418631,8.365531,-4.064176,7.699329,9.861682,-5.217118,9.739502,7.609518,5.550654,-9.486235,5.514765,0.024141,-8.660356,-1.990525,-8.838400,-9.796154,6.648644,1.929518,1.916948,-7.214900,-0.010682,1.713544,-1.110168,6.016387,2.991982,-5.636050,-2.338532,-0.629879,-9.716144,-5.254082,9.115891,-7.605848,-9.674809,-7.826859,-1.951731,-0.684707,-1.188242,0.463205,-0.105139,-9.785335,-4.784087,-3.102599,-3.848946,5.181648,1.476477,-4.828969,-4.058288,-6.065035,-8.709475,-8.950361,7.970168,6.360194,3.824345,-3.879097,3.674861,3.031754,-2.420529,-3.096053,-1.040818,7.600368,9.871034,-9.367315,6.105142,7.903549,1.942224,-9.859326,-8.700336,-6.289176,-7.257755,-3.193954,2.499077,8.918166,8.166067,1.395720,0.201569,-3.151112,-3.486535,-9.380545,9.690623,9.075510,-5.266705,9.833165,4.211832,-6.694104,4.622882,0.067119,-3.394880,-1.390014,0.696442,0.278022,-6.346812,8.598984,-2.838354,-1.860569,9.412632,-6.554051,-2.285606,5.188806,-8.003957,0.058015,-4.927064,-1.514751,-6.325934,-4.978383,-0.008564,-7.894389,9.757113,9.345582,-1.534345,6.448825,8.067590,7.112646,-2.885373,9.050978,-4.293822,-2.229878,-7.127322,6.668420,4.541410,-9.643258,4.326573,-9.383231,-2.878192,-7.139675,-2.744096,6.770717,0.379559,9.354153,1.123859,-0.483190,2.893365,-3.052962,-0.191134,-5.593970,1.523294,3.466434,-2.039314,-1.498078,-8.816292,1.315905,-1.929426,-5.212746,9.530102,5.478871,4.536717,-1.784145,-1.760034,-1.328793,-9.497080,-3.183831,2.706246,-6.098845,-7.220541,-2.189139,7.006192,6.950726,-9.711799,8.794541,4.810077,-5.706150,4.259195,4.119099,6.072751,-5.667010,9.728553,-8.889128,-7.585478,-9.175713,3.384402,8.355950,-9.851297,-1.758759,5.445431,-4.205591,5.024797,9.730797,8.559424,-5.741770,-9.119392,-3.465966,-8.402738,-9.491874,0.068338,3.287941,4.660012,0.946402,3.382625,0.920322,6.232553,5.072176,-2.583452,2.041612,1.005016,9.241354,-3.621654,8.682489,-2.644175,-9.527165,-9.569528,-3.875077,-0.336770,9.127081,0.356430,-7.152560,-5.914923,8.465435,-3.496790,-2.934291,3.278465,2.824718,9.262205,-0.272277,-2.036933,0.930861,-2.798463,0.313126,6.345760,-0.629816,2.948273,-2.247755,-8.789415,-4.502291,-8.396887,-0.254655,-0.993949,-0.523010,5.273080,7.379960,1.477982,-1.509219,-0.184603,-9.864501,3.519065,4.068896,-8.412155,-1.481636,8.886355,7.204377,-7.606686,3.625966,-6.209756,-9.252470,-4.765515,7.773598,3.516390,8.164114,1.468525,8.469673,-2.695024,3.148359,-1.347286,4.236657,9.732355,-5.254622,3.092360,-7.148927,1.039825,9.959083,6.358266,2.541872,-2.553078,-6.513195,-9.603768,-6.162726,-8.608978,9.463814,-7.156264,1.707829,-3.189034,1.481353,2.189884,9.732712,-6.208775,7.408795,5.639053,-5.847556,9.733731,-3.298046,0.892178,4.046250,-2.946833,-7.890438,0.765882,-6.567515,6.509644,3.450458,-8.731106,9.782784,9.557861,-1.174215,7.639994,6.519103,8.883995,4.907219,-5.856113,8.718545,7.539760,9.848529,4.128907,-9.021946,2.229904,4.005734,-1.067684,1.043309,8.735437,5.159660,-6.806552,-6.533406,-4.645608,-1.121607,-9.765962,1.534999,-4.176520,-2.083084,5.687657,-1.464560,9.331504,-1.581534,3.111527,3.814839,9.374768,2.312340,8.448230,0.354327,0.492096,2.477664,2.243844,-5.266002,9.412050,3.259097,5.550802,-7.607746,-6.419107,1.206676,-3.362166,-6.024779,3.149918,4.984425,7.436210,-8.342694,0.164678,-2.602947,-6.054412,-9.369250,-8.303502,-3.348011,2.017536,-2.422711,7.662063,6.311653,-3.950631,1.130489,-3.388207,0.321360,-1.444536,-4.610346,2.639353,-7.301594,5.802856,0.113306,1.002398,-8.518976,-2.615892,-9.669293,-0.805885,5.213113,5.051143,-8.102058,-9.060190,-9.424319,8.637244,-2.918266,7.567041,-6.221674,3.145136,-4.148615,-5.956169,2.126156,9.878513,-6.130178,-6.870927,2.101801,6.616725,5.405864,2.855953,-8.284445,-2.495643,1.754555,5.452607,1.652536,0.087029,2.049593,-6.082461,7.109477,-1.001108,3.494178,0.832310,7.352833,-1.106574,-8.664940,-1.985459,-9.654822,6.551471,-8.926337,3.043074,0.828988,-6.944999,-8.687399,-2.736810,-0.018595,-2.651075,3.106706,-1.173309,-5.521913,4.881611,-0.282936,0.731050,-3.027330,-6.119930,7.879157,-5.242103,2.839263,-6.893082,7.031593,9.638069,7.663954,0.072284,5.056726,8.136249,-8.471305,3.399991,-4.866562,3.384745,0.242579,-1.490088,-9.176485,-4.731985,8.038187,1.141019,8.112622,-0.204916,-5.966145,7.136872,-8.188432,7.405179,3.544674], dtype = "float32")#candidate|9671|(495,)|const|float32
call_9670 = relay.TupleGetItem(func_6778_call(relay.reshape(const_9671.astype('float32'), [3, 11, 15])), 0)
call_9672 = relay.TupleGetItem(func_6780_call(relay.reshape(const_9671.astype('float32'), [3, 11, 15])), 0)
bop_9693 = relay.bitwise_or(const_9664.astype('uint64'), const_9652.astype('uint64')) # shape=(1092, 1890)
func_8180_call = mod.get_global_var('func_8180')
func_8183_call = mutated_mod.get_global_var('func_8183')
var_9700 = relay.var("var_9700", dtype = "float32", shape = (27,))#candidate|9700|(27,)|var|float32
var_9701 = relay.var("var_9701", dtype = "uint16", shape = (1680,))#candidate|9701|(1680,)|var|uint16
call_9699 = relay.TupleGetItem(func_8180_call(relay.reshape(var_9700.astype('float32'), [9, 3, 1]), relay.reshape(var_9701.astype('uint16'), [1680,]), ), 2)
call_9702 = relay.TupleGetItem(func_8183_call(relay.reshape(var_9700.astype('float32'), [9, 3, 1]), relay.reshape(var_9701.astype('uint16'), [1680,]), ), 2)
func_6388_call = mod.get_global_var('func_6388')
func_6389_call = mutated_mod.get_global_var('func_6389')
call_9703 = func_6388_call()
call_9704 = func_6388_call()
func_254_call = mod.get_global_var('func_254')
func_257_call = mutated_mod.get_global_var('func_257')
const_9709 = relay.const([7.112771,-6.093705,0.451799,-3.273831,-8.680054,-9.700859,-2.421664,4.003468,6.537133,-8.759946,-3.500960,-8.328358,5.441690,-7.949330,-0.871487,-7.673967,-4.928461,9.383583,7.356916,2.463160,-3.773863,1.259099,3.943416,9.460990,-6.315953,2.174342,9.876931,-4.188617,6.279226,-3.523612,-1.530404,2.341671,9.109724,-1.636718,-3.798924,2.593971,5.937560,1.733446,0.741263,7.889336,-0.336824,-1.181548,2.692896,5.977683,3.737410,-5.856049,-5.084433,-4.163384,-5.815406,7.241080,8.878537,-0.545636,6.072388,3.161925,-0.331879,8.634510,9.637886,-7.612807,-5.837928,-2.628399,3.464937,9.392263,-4.032620,-2.839883,9.134122,-8.998022,-5.193549,8.185564,-9.610882,-1.407926,-1.032185,-6.184777,3.442612,-8.702561,-6.135947,7.197025,5.317379], dtype = "float32")#candidate|9709|(77,)|const|float32
call_9708 = func_254_call(relay.reshape(const_9709.astype('float32'), [7, 11, 1]))
call_9710 = func_254_call(relay.reshape(const_9709.astype('float32'), [7, 11, 1]))
func_7096_call = mod.get_global_var('func_7096')
func_7098_call = mutated_mod.get_global_var('func_7098')
call_9721 = func_7096_call()
call_9722 = func_7096_call()
output = relay.Tuple([call_9637,call_9648,var_9649,const_9650,const_9651,call_9662,const_9663,call_9670,const_9671,bop_9693,call_9699,var_9700,var_9701,call_9703,call_9708,const_9709,call_9721,])
output2 = relay.Tuple([call_9638,call_9653,var_9649,const_9650,const_9651,call_9665,const_9663,call_9672,const_9671,bop_9693,call_9702,var_9700,var_9701,call_9704,call_9710,const_9709,call_9722,])
func_9744 = relay.Function([var_9649,var_9700,var_9701,], output)
mod['func_9744'] = func_9744
mod = relay.transform.InferType()(mod)
var_9745 = relay.var("var_9745", dtype = "float64", shape = (60, 20))#candidate|9745|(60, 20)|var|float64
var_9746 = relay.var("var_9746", dtype = "float32", shape = (27,))#candidate|9746|(27,)|var|float32
var_9747 = relay.var("var_9747", dtype = "uint16", shape = (1680,))#candidate|9747|(1680,)|var|uint16
output = func_9744(var_9745,var_9746,var_9747,)
func_9748 = relay.Function([var_9745,var_9746,var_9747,], output)
mutated_mod['func_9748'] = func_9748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8284_call = mod.get_global_var('func_8284')
func_8285_call = mutated_mod.get_global_var('func_8285')
call_9759 = relay.TupleGetItem(func_8284_call(), 0)
call_9760 = relay.TupleGetItem(func_8285_call(), 0)
func_1679_call = mod.get_global_var('func_1679')
func_1681_call = mutated_mod.get_global_var('func_1681')
var_9772 = relay.var("var_9772", dtype = "float32", shape = (1092,))#candidate|9772|(1092,)|var|float32
call_9771 = func_1679_call(relay.reshape(var_9772.astype('float32'), [7, 12, 13]))
call_9773 = func_1679_call(relay.reshape(var_9772.astype('float32'), [7, 12, 13]))
func_3982_call = mod.get_global_var('func_3982')
func_3986_call = mutated_mod.get_global_var('func_3986')
var_9780 = relay.var("var_9780", dtype = "int64", shape = (65,))#candidate|9780|(65,)|var|int64
const_9781 = relay.const([[-1.113116,-4.274842,8.968847,7.356959,-0.342570,6.161946,1.623859,5.962438,3.679560,-3.925120,4.852236,2.999706,-1.377364,7.699828,-4.647087,-8.462558,9.600406,-1.669063,5.712226,-1.241710,-5.083444,6.708656,-9.049978,2.923439,-5.482148,6.536896,-1.579062,-5.666207,9.757678,0.951690,9.831180,-2.755397,2.864279,5.778297,-8.938997,-7.969095,3.614899,-5.545939,4.901971,9.724455,2.605887,2.184444,-5.962442,-5.775108,3.250305,4.231630,2.857976,4.016967,8.064455,3.060275,-4.352241,-5.241004,5.601954,-4.763744,-3.447557,-7.145458,-9.685661,4.859666,-5.935115,-7.328317,5.139172,-0.224475,2.832366,3.566333,2.556540,-2.306895,3.880954,6.144132,0.032515,7.520410,-6.414628,3.423366,6.754019,1.436669,-9.996577,8.475791,1.961903,-6.156994,6.931454,2.181384,-0.642407,2.281292,-6.611137,-1.320159,-8.531751,2.447237,7.040914,0.847173,8.653595,-9.334447,-0.434305,-4.967659,-6.039614,-6.370014,-9.816981,-4.912971,6.340383,-8.970772,-0.536342,9.652146,-3.974434,0.322858,9.808122,-5.932540,5.753531,-1.240518,-8.032149,-8.488371,2.907205,7.367956,-9.275864,-9.388062,5.005664,-9.542062,4.980603,-1.577133,-3.738490,8.006477,-5.160466,0.300213,9.239488,4.344488,-5.922481,-4.344360,-7.730188,8.448124,5.429602,-6.009461,7.195166,-2.572417,-1.371895,-7.218397,5.252610,-6.316712,-7.786193,5.762109,9.620145,8.463121,-3.893770,4.770795,0.885447,-2.212240,-5.665747,0.123615,8.560002,-9.803337,-3.635353,-5.013407,-2.917047,0.368957,-6.024089,-2.577350,2.378306,4.688855,4.877036,-4.885810,-7.997359,6.125300,0.255489,-2.728420,9.280582,-3.561815,5.012924,5.951286,2.598927,-7.507722,9.825260,8.899221],[2.308437,8.958561,2.351117,5.042954,-0.992568,-2.606255,-3.699424,-4.665729,0.935097,5.024855,3.854193,7.135319,-7.972218,2.052547,-1.473041,-1.807950,5.077517,8.343732,-6.220723,-0.884840,2.660199,-7.711676,9.331846,4.573386,-3.054852,-4.393563,8.140968,-2.571279,7.209960,-0.837931,9.203571,2.245919,-5.101761,0.900401,-0.146982,2.174654,8.039231,6.975812,-0.240143,3.216664,9.690071,-8.806225,7.276776,-5.700601,-8.592257,1.673473,-8.333767,6.426964,2.264562,4.472087,-5.293373,8.161471,-0.253167,4.784453,-0.582173,0.732879,-7.488434,-3.006487,9.480577,-5.691695,6.216773,9.324242,8.597909,-2.718631,7.839483,-1.106178,-6.706817,2.775701,-7.831962,3.981278,-1.911171,-7.606055,6.568799,-5.727215,-7.529921,-8.106157,-1.548126,4.793960,-4.868898,-8.259530,3.501256,-0.348807,8.638182,-9.495700,-3.085845,-1.411293,8.167806,7.422098,1.321589,0.676458,-2.346104,-7.952724,9.041130,-9.288253,0.942460,9.623317,4.890952,3.243138,-0.502121,-9.233354,2.781251,8.500115,-4.198067,2.207474,-9.141592,9.884148,8.739400,-8.026724,7.259525,-3.439243,2.517598,0.578903,4.429493,2.617473,-9.201519,-9.104164,-1.542782,-1.634187,-6.341369,6.923677,-8.100513,-4.412761,-6.005949,-8.086974,4.972404,-3.519743,4.352000,-6.000665,-3.192868,-8.471306,4.779443,9.947415,-0.917936,-3.723338,3.800106,0.208777,-9.709023,2.410787,-0.425884,-9.052775,6.956565,2.308572,-9.894588,3.501625,5.964285,-5.664528,0.279674,3.814457,5.674404,-4.242077,1.749177,7.837765,0.181606,-6.319203,-0.888768,-6.708156,6.376934,-8.551129,6.327294,9.324253,8.761730,3.850866,6.198563,-2.816020,8.377588,4.255424,6.033409,-6.489029]], dtype = "float32")#candidate|9781|(2, 168)|const|float32
var_9782 = relay.var("var_9782", dtype = "float32", shape = (77, 1))#candidate|9782|(77, 1)|var|float32
call_9779 = relay.TupleGetItem(func_3982_call(relay.reshape(var_9780.astype('int64'), [13, 5, 1]), relay.reshape(const_9781.astype('float32'), [336,]), relay.reshape(var_9782.astype('float32'), [77,]), ), 0)
call_9783 = relay.TupleGetItem(func_3986_call(relay.reshape(var_9780.astype('int64'), [13, 5, 1]), relay.reshape(const_9781.astype('float32'), [336,]), relay.reshape(var_9782.astype('float32'), [77,]), ), 0)
func_8709_call = mod.get_global_var('func_8709')
func_8712_call = mutated_mod.get_global_var('func_8712')
const_9786 = relay.const([-0.448177,3.653314,6.834627,-5.261321,-9.156616,-8.818513,1.545916,-3.086122,-7.212828,7.111788,-9.504766,-8.214296,-1.951308,-8.399465,-8.142994,-2.272298,1.136482,-5.485761,3.886131,-2.818403,7.084659,-7.361419,3.022153,2.667998,5.456824,-0.429477,5.631845,-6.185763,-6.801119,8.833822,-4.457822,3.403668,5.935954,-3.389576,-9.418506,-5.566889,-4.800624,8.925445,3.581138,5.071601,3.151011,2.970775,-2.981021,-3.367212,-4.819456,3.677827,3.895671,-3.114715,-4.699809,-9.473011,9.210545,8.860479,4.334014,3.326650], dtype = "float64")#candidate|9786|(54,)|const|float64
call_9785 = relay.TupleGetItem(func_8709_call(relay.reshape(const_9786.astype('float64'), [54,])), 1)
call_9787 = relay.TupleGetItem(func_8712_call(relay.reshape(const_9786.astype('float64'), [54,])), 1)
func_1446_call = mod.get_global_var('func_1446')
func_1449_call = mutated_mod.get_global_var('func_1449')
var_9796 = relay.var("var_9796", dtype = "bool", shape = (126,))#candidate|9796|(126,)|var|bool
var_9797 = relay.var("var_9797", dtype = "bool", shape = (1890,))#candidate|9797|(1890,)|var|bool
call_9795 = func_1446_call(relay.reshape(var_9796.astype('bool'), [9, 1, 14]), relay.reshape(var_9797.astype('bool'), [9, 15, 14]), )
call_9798 = func_1446_call(relay.reshape(var_9796.astype('bool'), [9, 1, 14]), relay.reshape(var_9797.astype('bool'), [9, 15, 14]), )
func_3982_call = mod.get_global_var('func_3982')
func_3986_call = mutated_mod.get_global_var('func_3986')
call_9805 = relay.TupleGetItem(func_3982_call(relay.reshape(call_9779.astype('int64'), [13, 5, 1]), relay.reshape(const_9781.astype('float32'), [336,]), relay.reshape(var_9782.astype('float32'), [77,]), ), 8)
call_9806 = relay.TupleGetItem(func_3986_call(relay.reshape(call_9779.astype('int64'), [13, 5, 1]), relay.reshape(const_9781.astype('float32'), [336,]), relay.reshape(var_9782.astype('float32'), [77,]), ), 8)
output = relay.Tuple([call_9759,call_9771,var_9772,call_9779,var_9780,const_9781,var_9782,call_9785,const_9786,call_9795,var_9796,var_9797,call_9805,])
output2 = relay.Tuple([call_9760,call_9773,var_9772,call_9783,var_9780,const_9781,var_9782,call_9787,const_9786,call_9798,var_9796,var_9797,call_9806,])
func_9810 = relay.Function([var_9772,var_9780,var_9782,var_9796,var_9797,], output)
mod['func_9810'] = func_9810
mod = relay.transform.InferType()(mod)
var_9811 = relay.var("var_9811", dtype = "float32", shape = (1092,))#candidate|9811|(1092,)|var|float32
var_9812 = relay.var("var_9812", dtype = "int64", shape = (65,))#candidate|9812|(65,)|var|int64
var_9813 = relay.var("var_9813", dtype = "float32", shape = (77, 1))#candidate|9813|(77, 1)|var|float32
var_9814 = relay.var("var_9814", dtype = "bool", shape = (126,))#candidate|9814|(126,)|var|bool
var_9815 = relay.var("var_9815", dtype = "bool", shape = (1890,))#candidate|9815|(1890,)|var|bool
output = func_9810(var_9811,var_9812,var_9813,var_9814,var_9815,)
func_9816 = relay.Function([var_9811,var_9812,var_9813,var_9814,var_9815,], output)
mutated_mod['func_9816'] = func_9816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7515_call = mod.get_global_var('func_7515')
func_7516_call = mutated_mod.get_global_var('func_7516')
call_9832 = func_7515_call()
call_9833 = func_7515_call()
output = call_9832
output2 = call_9833
func_9847 = relay.Function([], output)
mod['func_9847'] = func_9847
mod = relay.transform.InferType()(mod)
output = func_9847()
func_9848 = relay.Function([], output)
mutated_mod['func_9848'] = func_9848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8941_call = mod.get_global_var('func_8941')
func_8943_call = mutated_mod.get_global_var('func_8943')
call_9852 = func_8941_call()
call_9853 = func_8941_call()
func_8180_call = mod.get_global_var('func_8180')
func_8183_call = mutated_mod.get_global_var('func_8183')
var_9875 = relay.var("var_9875", dtype = "float32", shape = (27,))#candidate|9875|(27,)|var|float32
const_9876 = relay.const([[6,-8,-4,-9,-3,-5,9,-1,5,-6,-10,1,-7,-10,4,-5,-10,1,3,6,-4,9,3,10,1,-6,-10,-8,7,-2,-8,3,3,1,-4,4,-5,3,-2,-5,-10,-3,9,9,-1,-7,9,4,-4,10,1,-7,-6,6,7,10,-4,10,-4,9,10,-4,-8,3,-5,-1,6,5,-2,9,-2,-7,-1,10,-5,-1,-9,-6,-5,-8,-1,-7,10,-6,-10,-10,-3,9,-3,9,1,3,-5,4,7,10,-4,-6,8,-7,-6,-1,5,2,2,-7,1,1,-8,-8,1,-4,5,-9,1,-1,2,-9,3,-6,3,8,-5,2,5,10,-9,1,4,9,4,6,2,-5,-7,2,6,5,-6,-5,-8,7,1,3,5,-3,-2,9,2,-10,6,-8,9,-6,-10,-8,-7,-6,-2,-4,-1,-8,-5,4,2,6,-6,-2,10,10,10,8,4,6,3,2,6,-4,8,8,-3,-10,3,-4,2,2,-3,-1,-4,-2,6,10,6,5,-3,-6,1,7,-9,-4,-4,-3,7,-5,-3,-8,1,-3,4,-2,10,5,-3,-5,3,3,8,-6,2,-5,-8,-3,3,-5,1,5,-5,-5,5,3,9,-7,4,1,-7,-10,-1,2,-9,2,6,3,10,-2,-8,-2,2,6,-5,1,-5,-4,4,-2,-7,-2,2,4,3,-6,4,-10,9,2,2,5,4,4,9,10,-10,7,-8,-3,-1,-4,7,9,9,-10,-5,-10,6,9,-10,1,1,-2,-3,2,2,-6,1,4,9,2,-1,-6,-6,4,4,-4,5,4,10,1,1,10,-5,1,-10,-1,-5,8,10,7,-9,-10,8,-4,7,10,-5,9,7,-5,5,8,2,1,-7,-7,9,1,-9,-6,10,-6,8,-6,-7,2,8,-2,-5,2,1,-10,-5,10,8,4,-1,5,-8,-4,4,7,-5,10,-3,-6,2,-5,-9,-2,-10,-6,-7,-10,-2,9,10,9,8,7,-2,4,-9,10,5,-4,8,-5,1,-1,-2,10,-8,-7,-8,8,7,5,-2,-3,-9,-1,7,4,-3,-2,7,7,2,-4,10,2,3,-3,-4,-9,5,2,5,-1,-2,3,6,-7,-4,9,-10,-1,-8,-7,3,5,-7,10,-4,-2,4,8,-5,-6,-3,-5,6,7,10,-6,9,1,-10,-7,1,-3,-5,7,-3,1,8,10,-1,7,10,-4,-5,-4,-5,-9,2,-5,10,-1,5,-10,9,6,-6,1,8,-4,2,8,-3,-6,-9,-6,-3,6,8,-10,6,6,10,-6,5,-1,-2,-6,6,-9,-5,7,-1,-3,-7,-7,10,4,3,10,2,6,-10,8,-6,-4,4,-6,-2,-4,-3,-3,6,-5,-7,-8,-6,-4,9,-4,-1,-4,10,9,-1,5,6,9,5,-1,-10,-3,5,5,-9,9,-9,-4,4,-5,8,1,7,-4,-5,-7,5,-1,7,-6,-7,8,-9,7,6,8,-1,8,8,-10,-8,-6,-7,3,5,2,-4,1,3,-7,-9,4,6,10,3,-5,-7,4,-1,7,8,-9,-10,-8,-10,3,-1,-1,-1,9,9,7,-8,-9,9,5,7,-10,6,-9,4,-6,-1,2,-6,-7,6,2,-6,2,-10,3,-3,-2,2,7,-5,8,10,9,-10,4,2,-1,8,4,-2,-3,9,-6,-9,4,8,2,-2,5,-1,10,-4,2,4,-1,-10,-3,-2,-9,-4,6,6,9,1,2,2,5,-4,-1,2,7,4,10,-9,-8,-3,2,-2,-9,-4,7,4,-5,1,-9,5,5,-5,7,6,-6,10,10,8,7,10,-1,7,3,9,-3,9,6,-4,8,8,3,-2,10,-10,-4,-2,-5,1,9,1,6,1,-3,-5,-9,7,-3,-2,-10,1,-3,1,3,5,3,3,5,9,1,1,1,9,-8,8,-3,6,-1,3,10,-6,-3,2,5,8,-7,3,8,1,-4,5,-7,3,-9,-4,4,4,8,-5,-9,-8,-1,-6,6,-6,6,6,-4,3,-5,4,6,-7,4,-9,5,9,2,-7,-3,-7,-4,-6,3,-4,6,-10,-6,9,10,-2,7,3,9,6,-4,-2,-7,7,-8,10,8,8,-6,-5,7,3,1,1,-7,1,-1,10,-3,-10,9,-7,-10,3,2,-2,5,10,3,-5,2,2,3,3,-2,-7,1,-9,8,6,-10,-8,-6,-1,4,9,-4,-1,-6,10,-5,10,2,-6,-3,-2,-1,-10,-1,-7,-6,2,1,6,-6,-5,5,7,-7,8,5,5,-10,-4,5,-7,10,-3,-3,-8,5,-9,1,8,1,9,7,4,8,-10,1,-6,-7,4,7,-10,-7,5,-7,9,-2,-3,-2,-6,-5,5,-4,-9,-9,-2,6,3,10,-3,-2,4,3,-2,-4,-7,-5,-7,3,-9,-8,1,10,7,-1,-7,-5,6,10,-4,6,-3,2,-7,5,-7,6,9,1,8,-8,-4,7,2,-8,2,-6,3,7,4,8,7,1,-2,1,4,-6,-4,-10,10,3,-2,-9,10,6,7,5,-8,1,-1,-9,-4,5,9,6,-3,-3,9,-7,7,-3,7,-10,6,-4,-6,2,-1,-9,2,2,-4,10,9,4,-3,2,-5,-5,-6,8,6,-3,10,-7,-7,8,6,-7,-7,2,-6,-10,-9,-3,-5,-8,-2,-8,-2,5,-6,1,2,10,8,9,-8,-6,3,-5,-10,-9,-3,5,6,5,4,5,-3,-5,-6,-9,-3,-3,-6,-7,1,-1,5,-10,-5,-2,-10,-4,3,-5,4,-5,-1,-5,7,3,8,-2,7,5,-6,10,-5,8,4,6,9,6,10,-7,3,-4,-4,-7,8,-5,-8,-10,-1,-2,-4,-4,-2,3,4,-10,9,-2,-2,-4,-9,-7,-3,-4,5,-1,8,10,-8,1,-2,-2,7,-2,1,9,4,-10,1,5,-2,5,-4,10,-9,-5,-4,-1,-1,7,-10,5,-2,-5,1,-1,4,2,2,-9,5,-1,5,9,5,-9,2,-1,8,-9,3,3,7,-7,-7,7,4,-10,-8,-4,-5,-9,8,-5,-5,-7,-6,10,-6,-10,5,7,-5,-10,-8,-7,-7,1,-8,4,-1,-4,1,-10,-2,4,-8,-9,-9,-8,-3,-1,-3,8,9,9,-2,8,-8,4,7,-7,8,9,-7,4,2,-10,8,-10,-1,6,1,-1,-2,-1,1,-5,-6,-6,-1,-2,-6,2,2,2,1,9,3,3,2,-4,1,-10,8,-9,6,4,4,7,-9,9,6,4,-7,5,-10,-10,10,2,-8,7,-2,8,-8,-6,-6,7,-5,1,7,-9,7,-1,-3,-7,4,5,-6,6,9,-10,-6,-9,7,1,6,-2,3,-9,6,7,1,-6,6,10,-1,-2,-7,-8,-1,-10,-10,9,8,10,-6,-4,9,-4,3,2,-4,2,5,10,8,-4,-4,4,3,-8,10,-7,-3,6,5,-9,-4,4,1,-7,4,9,-4,-4,6,-7,-5,7,-7,3,1,-3,-4,-6,1,-4,-5,-4,4,8,-9,6,1,-1,6,-2,-9,4,4,-6,5,9,-3,-9,-1,6,-1,-6,-8,3,-3,3,-2,5,10,10,-3,3,3,2,-8,6,5,-2,-8,-8,-9,-5,1,8,1,-5,8,2,-2,5,-5,7,-2,-4,5,-5,5,5,10,-5,3,7,10,3,4,-1,-9,-10,1,-5,-3,9,10,4,-1,-3,3,-4,-1,-6,-4,-5,-9,-8,-8,5,3,1,-1,-5,6,-5,-2,-3,-5,-10,-5,-4,4,3,2,5,-3,1,3,-4,-8,9,7,4,10,3,-3,-10,-6,8,2,-7,2,-6,-6,6,-1,-5,-9,-2,-5,2,3,-6,6,9,9,-10,-4,6,9,7,10,-10,-2,-6,1,-6,4,3,6,-6,10,6,4,-5,7,-5,-3,-6,1,-2,1,-7,10,5,-2,2,6,-7,9,5,3,3,-9,2,10,-2,-4,8,-9,-3,-3,-4,-1,1,-2,-6,-10,-2,5,-9,-10,7,-10,-1,7,1,-6,-9,3,-9,-8,-1,-5,7,8,6,-7,-3,8,-7,5,5,2,-10,-5,1,5,2,-6,1,-7,2,-10,2,-7,2,-8,5,10,8,-6,9,-2,1,-1,9,-9,-1,-4,-6,-3,-4,5,2,7,-1,10,4,10,-7,-10,-9,7,-8,3,3,4,1,-9,5,5,-8,-5,-5,10,7,10,8,6,-10,2,8,-3,5,2,-9,-3,9,7,-4,8,6,-7,-5,2,3,1,2,-8,7,5,4,10,8,9,-6,-1,-3,9,-1,-5,5,-6,9,3,4,1,8,3,-1,-9,-7,1,1,10,-1,6,1,4,-8,6,-7,-1,-8,-2,-7,8,-1,6,1,2,2,-1,-2,1,-3,1,3,4,6,-10,5,7,-9,6,2,5,9,-7,2,-10,-6]], dtype = "uint16")#candidate|9876|(1, 1680)|const|uint16
call_9874 = relay.TupleGetItem(func_8180_call(relay.reshape(var_9875.astype('float32'), [9, 3, 1]), relay.reshape(const_9876.astype('uint16'), [1680,]), ), 2)
call_9877 = relay.TupleGetItem(func_8183_call(relay.reshape(var_9875.astype('float32'), [9, 3, 1]), relay.reshape(const_9876.astype('uint16'), [1680,]), ), 2)
output = relay.Tuple([call_9852,call_9874,var_9875,const_9876,])
output2 = relay.Tuple([call_9853,call_9877,var_9875,const_9876,])
func_9878 = relay.Function([var_9875,], output)
mod['func_9878'] = func_9878
mod = relay.transform.InferType()(mod)
var_9879 = relay.var("var_9879", dtype = "float32", shape = (27,))#candidate|9879|(27,)|var|float32
output = func_9878(var_9879)
func_9880 = relay.Function([var_9879], output)
mutated_mod['func_9880'] = func_9880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6547_call = mod.get_global_var('func_6547')
func_6549_call = mutated_mod.get_global_var('func_6549')
call_9919 = func_6547_call()
call_9920 = func_6547_call()
var_9927 = relay.var("var_9927", dtype = "float32", shape = (9, 3, 13))#candidate|9927|(9, 3, 13)|var|float32
bop_9928 = relay.less_equal(call_9919.astype('bool'), var_9927.astype('bool')) # shape=(9, 3, 13)
bop_9931 = relay.less_equal(call_9920.astype('bool'), var_9927.astype('bool')) # shape=(9, 3, 13)
func_6388_call = mod.get_global_var('func_6388')
func_6389_call = mutated_mod.get_global_var('func_6389')
call_9946 = func_6388_call()
call_9947 = func_6388_call()
func_8229_call = mod.get_global_var('func_8229')
func_8230_call = mutated_mod.get_global_var('func_8230')
call_9949 = relay.TupleGetItem(func_8229_call(), 0)
call_9950 = relay.TupleGetItem(func_8230_call(), 0)
bop_9955 = relay.divide(var_9927.astype('float64'), relay.reshape(bop_9928.astype('float64'), relay.shape_of(var_9927))) # shape=(9, 3, 13)
bop_9958 = relay.divide(var_9927.astype('float64'), relay.reshape(bop_9931.astype('float64'), relay.shape_of(var_9927))) # shape=(9, 3, 13)
func_499_call = mod.get_global_var('func_499')
func_502_call = mutated_mod.get_global_var('func_502')
const_9961 = relay.const(2, dtype = "int32")#candidate|9961|()|const|int32
var_9962 = relay.var("var_9962", dtype = "int32", shape = (616,))#candidate|9962|(616,)|var|int32
call_9960 = func_499_call(relay.reshape(const_9961.astype('int32'), []), relay.reshape(var_9962.astype('int32'), [11, 14, 4]), )
call_9963 = func_499_call(relay.reshape(const_9961.astype('int32'), []), relay.reshape(var_9962.astype('int32'), [11, 14, 4]), )
output = relay.Tuple([call_9946,call_9949,bop_9955,call_9960,const_9961,var_9962,])
output2 = relay.Tuple([call_9947,call_9950,bop_9958,call_9963,const_9961,var_9962,])
func_9967 = relay.Function([var_9927,var_9962,], output)
mod['func_9967'] = func_9967
mod = relay.transform.InferType()(mod)
mutated_mod['func_9967'] = func_9967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9967_call = mutated_mod.get_global_var('func_9967')
var_9969 = relay.var("var_9969", dtype = "float32", shape = (9, 3, 13))#candidate|9969|(9, 3, 13)|var|float32
var_9970 = relay.var("var_9970", dtype = "int32", shape = (616,))#candidate|9970|(616,)|var|int32
call_9968 = func_9967_call(var_9969,var_9970,)
output = call_9968
func_9971 = relay.Function([var_9969,var_9970,], output)
mutated_mod['func_9971'] = func_9971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8791_call = mod.get_global_var('func_8791')
func_8793_call = mutated_mod.get_global_var('func_8793')
call_10066 = relay.TupleGetItem(func_8791_call(), 0)
call_10067 = relay.TupleGetItem(func_8793_call(), 0)
output = relay.Tuple([call_10066,])
output2 = relay.Tuple([call_10067,])
func_10074 = relay.Function([], output)
mod['func_10074'] = func_10074
mod = relay.transform.InferType()(mod)
mutated_mod['func_10074'] = func_10074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10074_call = mutated_mod.get_global_var('func_10074')
call_10075 = func_10074_call()
output = call_10075
func_10076 = relay.Function([], output)
mutated_mod['func_10076'] = func_10076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7428_call = mod.get_global_var('func_7428')
func_7429_call = mutated_mod.get_global_var('func_7429')
call_10077 = func_7428_call()
call_10078 = func_7428_call()
func_843_call = mod.get_global_var('func_843')
func_846_call = mutated_mod.get_global_var('func_846')
const_10098 = relay.const([-8.728725,2.139597,2.257443,-5.212665,-7.416656,5.269277,-0.421903,3.090034,-9.396917,4.198131,2.444406,-1.181177,6.283178,9.135855,-1.907654,3.528661,-7.893255,3.334334,-6.344359,0.171576,-8.428802,-0.173425,6.355691,-8.419564,-4.414346,-1.189111,-0.207508,3.581937,8.752982,-6.611302,1.412351,-4.677712,3.435649,4.247050,-8.451666,-2.099195,3.574955,2.506825,-2.698990,-4.221911,-9.691073,-8.486874,2.387705,-7.451106,-8.347213,-7.640597,9.346611,4.533686,-5.650941,-8.924465,6.926758,1.221948,7.603220,-9.256415,7.679637,-2.402157,9.072601,-4.078889,1.525294,4.143688,-1.092052,2.368269,4.174831,-7.260543,6.255457,-0.933796,9.015505,9.095087,-3.024361,-6.598225,-2.946499,6.837098,-3.679644,-3.283962,4.840069,8.811724,0.167505,4.752081,-5.742041,-2.069248,-5.275103,-3.580375,-0.190274,-6.791113,1.515700,-1.504456,3.145650,-7.535451,-0.284030,3.871227,-0.451029,7.184510,6.951085,-2.493810,-9.779266,1.512300,9.240320,-8.129804,0.384735,6.023877,6.540765,-6.982080,8.134963,-0.962735,4.867271,0.121896,5.809957,3.451645,1.603234,-9.073123,-8.119855,-8.338159,9.627540,-3.517694,2.293108,-6.214678,0.102429,-0.056794,8.682453,-1.538558,-5.747434,-1.102960,-8.049767,2.096730,-5.885883,8.925436,2.879215,-7.224009,-5.730792,-8.322788,-9.792107,7.400531,3.608177,9.022759,-3.259503,-9.217642,4.114887,-5.085531,-0.691305,-1.089030,3.158953,-6.607199,8.017735,-9.916899,7.558079,-7.895591,6.544363,9.776382,5.663578,4.306454,5.311173,-5.688205,-1.348552,-6.928669,-0.133623,0.831846,9.109271,0.139334,3.531040,-6.555363,-0.042612,-7.683458,-7.279203,-6.365817,-3.431892,-6.643896,6.267560,6.054784,5.400098,0.663462,-1.284728,-4.086305,-4.950351,-9.183931,2.476670,-3.913959,4.605051,2.057133,-2.369673,1.149455,1.649903,-8.127007,2.596230,-1.098833,-9.702446,-5.848324,7.407841,-6.157512,-7.324622,4.993397,3.875718,2.138902,-9.948893,8.789644,8.023691,-2.827119,-1.045732,2.174773,-6.387352,-6.203155,6.227615,5.365837,3.485472,-4.080687,-4.672398,8.830106,0.849527,9.146530,9.310779,7.652708,9.642480,6.966023,-1.970737,6.815429,5.989539,1.940987,8.116276,3.912527,-6.315152,-7.614143,7.183472,0.521548,3.040733,-8.532257,1.164339,7.904370,0.833317,-2.805618,8.716484,-8.566592,6.211760,-5.586325,-6.418914,-9.041321,3.966823,-4.142284,-7.314715,-9.533643,-3.614747,5.604605,-1.583314,-5.121292,9.737304,8.037095,7.392929,5.793270,-6.764627,2.605187,0.297157,5.390853,-1.344530,0.686962,5.970919,-6.572198,9.535650,0.995377,-7.565033,3.698926,-5.400330,2.417796,7.999297,4.508565,-2.123086,-0.423452,-3.458814,-0.201996,9.719436,9.394875,8.032254,-0.884115,2.957741,-2.117279,-5.453032,-7.449719,2.967756,-7.690117,-7.207048,-2.769632,-3.832817,7.319872,-5.439967,6.542405,9.815459,5.944545,6.569784,0.428435,2.812365,-8.846130,-7.535541,8.821003,-2.184916,-2.451064,4.829570,5.073211,6.938846,-8.899934,8.521469,-1.528956,-7.127132,6.164552,8.415073,1.948796,8.060964,-2.741548,-5.469654,9.703845,0.047716,6.878095,-5.681900,-7.115789,0.840690,8.371467,1.485992,-5.093355,1.747775,6.011292,-1.482250,-9.966726,-3.112622,1.984788,-5.507275,-6.559514,-7.893462,-7.468821,-9.286321,5.948618,0.767830,-9.968273,-6.931031,-1.366846,7.691836,-6.609075,-1.649741,8.145767,-2.038888,3.275807,4.669124,-9.440180,-6.589229,-4.671280,-4.740077,-2.367240,-3.523612,-6.312609,4.469466,1.573589,-1.044192,3.769202,-4.500705,3.456840,3.200787,4.266648,-1.663057,8.214309,-0.442605,-2.865287,3.280084,-9.533862,2.701224,-5.339496,2.920238,0.134149,9.397584,9.137699,5.010553,-1.166955,7.344420,7.493443,-0.579706,-0.221067,-7.531627,5.714880,-9.256383,-9.718386,-9.764513,-8.100931,-8.858546,1.437244,-8.758771,4.584788,9.320847,3.536884,8.442662,7.674944,8.721025,-2.085360,-2.228469,8.112041,3.933013,-3.401301,-6.457401,3.307687,7.636095,-2.888590,5.743382,2.644978,-6.715167,-2.956311,-9.042316,5.210042,2.803329,8.153746,5.631325,-6.640125,-1.338819,-3.432649,-3.945272,2.608414,-7.786339,4.353172,8.511702,-9.099514,1.232926,0.857106,-9.893670,2.270721,-6.583632,8.802324,2.702441,-1.764298,0.530803,-6.859459,7.428779,4.955458,-3.932917,7.032913,9.927260,6.640090,-3.586317,-1.801166,8.101377,3.556817,3.114796,0.432167,-2.800655,-6.518305,-1.816771,1.744749,8.392678,8.680733,-7.543188,2.788908,-8.802196,-3.332928,-9.600775,-1.551878,4.447837,8.789443,-0.705463,1.975559,5.293826,-2.433978,1.142762,1.322474,-8.038923,-0.150167,3.855219,7.856133,-9.305428,7.714403,-9.485563,-0.471108,1.535662,-2.244940,-2.843940,-3.798321,-7.593761,3.992070,0.901437,-7.252187,2.414676,-6.236723,-7.708907,-2.937666,2.930770,5.547831,2.239443,4.719413,-0.641647,6.631954,-0.696049,-9.978297,-8.924582,-8.202907,-2.003979,-2.569280,9.501840,-4.347617,-6.440209,-1.346004,-9.148047,5.876449,4.523496,-6.832337,1.802348,-0.310604,-5.351557,-0.861381,-5.700029,-4.244733,7.390759,-8.582625,2.339709,-1.987139,1.295381,8.610526,4.162857,-6.665595,-4.123462,-5.946762,-8.771032,6.483750,7.063646,5.085097,-4.039126,-0.467566,-1.503681,-9.893272,9.166915,5.508880,5.048608,9.351938,-5.884221,3.356694,-5.494678,-3.439067,-0.502222,6.163756,2.243632,0.690787,-6.380856,0.416562,-7.311209,-1.971339,-3.854437,-1.900765,3.928357,-0.566978,8.048344,-1.381262,3.974584,-6.803397,-1.582628,4.581716,8.940062,1.070627,-4.271078,-3.189810,-9.779704,0.572032,2.703050,-8.927539,7.550134,-2.525420,-8.778584,-1.698308,6.618277,2.823200,1.093009,3.495872,7.626408,-4.678875,5.082626,-6.432555,-7.650532,-5.649930,7.859044,-0.162788,-0.284532,-7.387139,0.176498,-5.159512,9.019579,-3.180791,1.008546,3.098667,-3.473038,-6.422776,5.640798,6.990587,-7.450024,8.253036,-6.353484,-0.053586,-4.376345,8.140920,-1.677265,-1.365429,9.602349,-6.943999,-6.821681,4.338039,8.836352,-7.038916,-7.639894,-2.765864,1.545829,-5.424057,5.043795,-3.983399,0.061084,5.733171,-8.897437,-0.582111,-7.245537,-6.047013,-0.563674,4.737523,8.353371,-1.979174,6.426234,6.208293,-6.787791,-1.726999,-8.387106,4.522220,-9.850795,6.906947,-2.387661,-0.497172,-8.305664,3.008965,-1.846055,3.794958,-6.139928,9.578271,-9.172271,9.756917,5.917312,8.257453,-1.758528,4.912188,2.923268,5.583814,-1.243891,1.354673,-6.735825,-7.671877,4.841858,4.209034,1.749847,-3.165086,9.607265,6.141553,8.624687,-1.105009,8.443217,7.851831,4.875694,8.310934,-2.131101,-9.829326,9.932541,-5.472709,-2.003044,0.643059,-8.193076,-3.451929,6.956658,-9.658749,-8.260266,-4.038842,4.509128,-1.588721,8.357312,-0.322545,-4.317736,-6.633986,8.019523,3.726031,-2.125671,-7.578945,-9.811336,-1.187604,-0.414090,-3.294572,-1.688567,-0.842690,-9.392939,-6.300387,-6.724928,-2.944649,6.814292,3.417008,3.822644,1.022462,8.437557,-1.349076,-7.476021,7.226846,-1.040358,9.316148,-9.700152,-6.102846,-6.832779,-8.444123,6.644450,-5.183891,-2.802341,-9.036110,-6.081302,8.972463,3.143183,7.724584,8.423814,-1.349637,-8.411713,-3.995928,0.207973,-5.587289,5.897745,7.010782,2.319409,9.243715,6.276876,5.457961,0.454314,3.825457,-6.708368,-9.550941,4.079539,0.327183,-6.136141,-5.745628,-5.546048,-2.466227,-9.118379,7.646055,8.343180,4.833176,-8.966675,-5.852403,2.073016,-3.719244,-1.702137,4.109458,4.542693,4.962096,-0.311793,5.149108,-3.580843,-1.354160,9.524936,-9.902208,9.270049,7.495919,-1.072414,0.314797,5.563165,-7.860870,7.129014,4.324428,-5.178002,-5.534850,4.411195,-7.972660,9.259771,-0.290621,-7.599997,9.768072,-6.234866,8.613039,-6.238528,-0.675714,-9.454962,0.003889,5.169968,-0.941974,-9.640222,-3.189114,-0.208825,3.167500,-1.434496,5.424207,3.200258,-9.869043,0.187167,-8.341147,-2.119515,-8.846519,2.112888,-1.343566,-9.372390,1.166828,-4.656151,-0.391062,-0.997736,-9.408125,4.614103,2.112821,7.807256,-7.216464,6.467510,-7.416168,-1.177306,-7.247324,6.775221,-5.962807,8.214351,-1.442141,0.540562,-8.384263,-4.573770,-0.851740,-4.295342,-3.812918,0.403786,7.904499,-3.319372,0.674879,-2.265176,-3.479660,-9.866980,3.498913,-0.041044,8.765744,6.076454,5.319503,6.488867,8.043463,8.509714,3.348248,4.173603,3.957195,-6.943702,-5.708305,-7.395934,-5.793985,8.074866,-8.776700,7.152374,0.392973,-7.831203,9.501563,4.589950,7.806165,-8.268862,7.114209,7.442206,5.105092,5.597825,-1.798982,2.228157,5.927368,8.781042,-6.819654,2.143161,5.824645,9.635272,8.019615,1.792330,5.611599,1.446950,4.956834,-1.792299,1.820302,-3.067534,7.218345,-6.379749,-5.771967,0.721578,3.867997,5.260042,-7.891081,0.678282,7.422993,-4.877234,-9.504093,3.648057,5.015916,0.792171,-0.695858,-0.591372,7.852699,-6.067263,-8.475305,-8.952808,-2.409003,-0.018960,-8.948820,0.158430,4.022580,9.674679,4.139082,9.843025,-6.495240,1.960020,1.855182,-1.068718,7.882608,-7.487567,-5.166820,5.649794,-8.704592,8.939603,4.482879,-2.239683,1.205959,-6.020645,0.134873,7.469235,-9.292200,-2.239781,-8.848352,-8.554040,5.055180,-8.611700,-0.007881,-1.482861,9.747985,4.118417,-9.258026,2.348823,0.632455,9.244224,-3.757664,-7.584182,5.602074,-6.826445,-6.642601,9.307810,4.490323,6.333017,0.241811,7.432530,-5.588181,2.475710,-3.545357,-2.002107,4.907848,-0.398174,-9.893374,-8.112989,2.924090,5.685193,-3.370643,4.786346,-6.424857,6.430205,7.767075,7.038351,4.811419,-1.833876,7.827666,-0.896021,-9.694303,-2.931295,8.597131,7.025047,3.560354,-3.633907,7.449049,-1.390857,4.868836,-1.437578,-7.594683,-8.310647,-4.033839,6.346455,3.818702,-2.757288,3.819109,-2.859857,-4.776957,8.237250,-8.965663,6.008784,-0.476144], dtype = "float64")#candidate|10098|(968,)|const|float64
call_10097 = func_843_call(relay.reshape(const_10098.astype('float64'), [8, 11, 11]))
call_10099 = func_843_call(relay.reshape(const_10098.astype('float64'), [8, 11, 11]))
output = relay.Tuple([call_10077,call_10097,const_10098,])
output2 = relay.Tuple([call_10078,call_10099,const_10098,])
func_10113 = relay.Function([], output)
mod['func_10113'] = func_10113
mod = relay.transform.InferType()(mod)
output = func_10113()
func_10114 = relay.Function([], output)
mutated_mod['func_10114'] = func_10114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8791_call = mod.get_global_var('func_8791')
func_8793_call = mutated_mod.get_global_var('func_8793')
call_10156 = relay.TupleGetItem(func_8791_call(), 0)
call_10157 = relay.TupleGetItem(func_8793_call(), 0)
var_10172 = relay.var("var_10172", dtype = "float64", shape = (9, 3, 3))#candidate|10172|(9, 3, 3)|var|float64
bop_10173 = relay.multiply(call_10156.astype('int32'), var_10172.astype('int32')) # shape=(9, 3, 3)
bop_10176 = relay.multiply(call_10157.astype('int32'), var_10172.astype('int32')) # shape=(9, 3, 3)
output = bop_10173
output2 = bop_10176
func_10177 = relay.Function([var_10172,], output)
mod['func_10177'] = func_10177
mod = relay.transform.InferType()(mod)
var_10178 = relay.var("var_10178", dtype = "float64", shape = (9, 3, 3))#candidate|10178|(9, 3, 3)|var|float64
output = func_10177(var_10178)
func_10179 = relay.Function([var_10178], output)
mutated_mod['func_10179'] = func_10179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6486_call = mod.get_global_var('func_6486')
func_6487_call = mutated_mod.get_global_var('func_6487')
call_10183 = relay.TupleGetItem(func_6486_call(), 0)
call_10184 = relay.TupleGetItem(func_6487_call(), 0)
output = call_10183
output2 = call_10184
func_10189 = relay.Function([], output)
mod['func_10189'] = func_10189
mod = relay.transform.InferType()(mod)
mutated_mod['func_10189'] = func_10189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10189_call = mutated_mod.get_global_var('func_10189')
call_10190 = func_10189_call()
output = call_10190
func_10191 = relay.Function([], output)
mutated_mod['func_10191'] = func_10191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8941_call = mod.get_global_var('func_8941')
func_8943_call = mutated_mod.get_global_var('func_8943')
call_10227 = func_8941_call()
call_10228 = func_8941_call()
func_8782_call = mod.get_global_var('func_8782')
func_8784_call = mutated_mod.get_global_var('func_8784')
call_10234 = relay.TupleGetItem(func_8782_call(), 0)
call_10235 = relay.TupleGetItem(func_8784_call(), 0)
func_6675_call = mod.get_global_var('func_6675')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_10242 = relay.TupleGetItem(func_6675_call(), 0)
call_10243 = relay.TupleGetItem(func_6677_call(), 0)
func_6262_call = mod.get_global_var('func_6262')
func_6266_call = mutated_mod.get_global_var('func_6266')
const_10250 = relay.const(-8, dtype = "int32")#candidate|10250|()|const|int32
var_10251 = relay.var("var_10251", dtype = "int32", shape = (14, 44))#candidate|10251|(14, 44)|var|int32
call_10249 = relay.TupleGetItem(func_6262_call(relay.reshape(const_10250.astype('int32'), []), relay.reshape(var_10251.astype('int32'), [14, 44]), ), 1)
call_10252 = relay.TupleGetItem(func_6266_call(relay.reshape(const_10250.astype('int32'), []), relay.reshape(var_10251.astype('int32'), [14, 44]), ), 1)
output = relay.Tuple([call_10227,call_10234,call_10242,call_10249,const_10250,var_10251,])
output2 = relay.Tuple([call_10228,call_10235,call_10243,call_10252,const_10250,var_10251,])
func_10264 = relay.Function([var_10251,], output)
mod['func_10264'] = func_10264
mod = relay.transform.InferType()(mod)
var_10265 = relay.var("var_10265", dtype = "int32", shape = (14, 44))#candidate|10265|(14, 44)|var|int32
output = func_10264(var_10265)
func_10266 = relay.Function([var_10265], output)
mutated_mod['func_10266'] = func_10266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9847_call = mod.get_global_var('func_9847')
func_9848_call = mutated_mod.get_global_var('func_9848')
call_10333 = func_9847_call()
call_10334 = func_9847_call()
func_318_call = mod.get_global_var('func_318')
func_321_call = mutated_mod.get_global_var('func_321')
const_10350 = relay.const(-3.082734, dtype = "float32")#candidate|10350|()|const|float32
const_10351 = relay.const([-6.641370,-5.113883,1.953468,4.333223,-0.662538,-1.451066,-1.319632,-0.928947,1.150600,9.237490,-1.452910,-9.967428,-5.016889,2.556332,-7.998767,0.349722,-2.796171,4.566637,6.845461,3.641039,9.768765,5.683416,8.997455,-3.428162,-0.676524,6.348180,3.507330,-6.983799,-8.412203,3.772530,-9.595028,4.993206,-8.517127,6.506748,0.474417,-1.030040,-4.804957,6.360832,7.092823,-6.367846,9.358534,3.716701,-3.909675,-9.087668,8.820837,3.337630,0.091941,-5.634418,-3.343938,9.106454,9.141569,-9.226097,-0.497987,7.739119,-2.787117,6.449760,4.808935,-0.521145,5.991111,-9.856014,-4.551914,-6.921456,2.416672,7.051313,-0.966174,7.620431,-5.125566,-1.466965,8.693769,5.689369,9.610670,6.072341,8.361360,-5.651733,9.267373,2.964462,4.974862], dtype = "float32")#candidate|10351|(77,)|const|float32
call_10349 = relay.TupleGetItem(func_318_call(relay.reshape(const_10350.astype('float32'), []), relay.reshape(const_10351.astype('float32'), [77,]), ), 0)
call_10352 = relay.TupleGetItem(func_321_call(relay.reshape(const_10350.astype('float32'), []), relay.reshape(const_10351.astype('float32'), [77,]), ), 0)
output = relay.Tuple([call_10333,call_10349,const_10350,const_10351,])
output2 = relay.Tuple([call_10334,call_10352,const_10350,const_10351,])
func_10359 = relay.Function([], output)
mod['func_10359'] = func_10359
mod = relay.transform.InferType()(mod)
output = func_10359()
func_10360 = relay.Function([], output)
mutated_mod['func_10360'] = func_10360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7181_call = mod.get_global_var('func_7181')
func_7183_call = mutated_mod.get_global_var('func_7183')
call_10405 = relay.TupleGetItem(func_7181_call(), 0)
call_10406 = relay.TupleGetItem(func_7183_call(), 0)
output = relay.Tuple([call_10405,])
output2 = relay.Tuple([call_10406,])
func_10420 = relay.Function([], output)
mod['func_10420'] = func_10420
mod = relay.transform.InferType()(mod)
output = func_10420()
func_10421 = relay.Function([], output)
mutated_mod['func_10421'] = func_10421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10427 = relay.var("var_10427", dtype = "float64", shape = (16, 1, 1))#candidate|10427|(16, 1, 1)|var|float64
var_10428 = relay.var("var_10428", dtype = "float64", shape = (16, 7, 6))#candidate|10428|(16, 7, 6)|var|float64
bop_10429 = relay.mod(var_10427.astype('float64'), var_10428.astype('float64')) # shape=(16, 7, 6)
bop_10432 = relay.subtract(bop_10429.astype('float64'), relay.reshape(var_10428.astype('float64'), relay.shape_of(bop_10429))) # shape=(16, 7, 6)
func_9847_call = mod.get_global_var('func_9847')
func_9848_call = mutated_mod.get_global_var('func_9848')
call_10446 = func_9847_call()
call_10447 = func_9847_call()
func_48_call = mod.get_global_var('func_48')
func_50_call = mutated_mod.get_global_var('func_50')
const_10451 = relay.const([-6.124875,7.339036,7.160250,-9.556765,-9.591546,8.431910,4.423933,-5.874735,-2.266511,2.367217,5.283099,-1.579349,-8.972470,5.108428,7.537627,-6.613574,-5.751910,5.989690,-1.023829,-5.113418,-6.219602,1.732429,-0.342678,5.189390,-7.372782,-2.080798,8.689601,7.099030,4.783539,0.704286,9.138963,-0.007095,9.343685,4.198668,-9.106412,-9.812522,5.341553,-8.280988,4.226274,-5.255128,-1.146594,2.327347,0.774334,5.533301,2.525926,-1.367722,-1.584630,-4.444283,-0.401174,-3.695263,-4.146501,0.533020,-9.447296,0.511909,-5.216023,6.341629,-4.634474,-5.454207,2.326814,-8.462994,-0.818228,4.465258,-7.004279,7.899359,4.109376,8.921541,-5.018138,2.679094,-5.441249,8.322555,-3.885200,-3.102067,2.441999,5.757450,-0.191169,-1.731743,-5.581012,-0.917768,3.300094,0.306343,1.984180,-1.611364,-3.469964,-9.825674,6.349189,4.723536,-6.144697,-5.224981,-7.124023,3.039568,-7.201085,6.358854,8.728088,7.834464,8.669547,-5.732970,8.784934,6.747933,-3.125155,-1.774373,3.834856,-9.430622,7.431845,1.606457,-4.825593,1.375957,-1.644746,4.718922,-0.116856,2.498273,7.428411,-9.446269,-6.696151,-9.758186,5.446042,-4.771571,-6.014001,-3.070718,-5.461148,2.779831,-9.733805,6.059262,-9.235145,7.514277,2.814653,-1.470877,-4.638232,2.430508,-8.853072,6.869563,-1.078361,-0.627339,-6.768362,3.364629,9.931191,6.460478,1.542849,-2.450730,6.874263,-5.495375,-4.732855,-2.761092,2.768762,-4.638339,8.133390,7.386205,1.274285,0.678562,-7.208361,-6.106710,2.798169,-1.283106,-9.474721,-8.938713,-6.852877,-5.207922,-7.571758,0.857112,-8.506269,3.336649,0.834675,-7.300922,4.983794,2.814357,-2.735647,7.329606,8.597491,-1.964846,-0.056768,-8.921515,3.815119,-8.911076,1.096329,0.942236,3.935863,8.397749,3.607846,1.165640,6.989819,-7.745268,4.085889,-7.901791,2.595693,-4.203448,3.727259,-2.332674,-9.935451,-4.451944,-0.275113,7.830063,9.887461,2.266560,-6.424142,2.959039,8.063735,3.600135,9.467050,5.852087,-2.998110,-5.279067,-7.052442,-8.640825,4.849362,-6.456051,-5.293709,1.020373,8.099287,-4.069879,-7.326320,7.163397,-4.410045,-3.946830,-9.211376,-7.210337,4.151995,1.055360,-4.154654,-9.534314,-6.833695,2.527408,8.936523,-5.288483,6.976267,-3.203524,-3.398517,8.837551,6.546694,-1.191565,-2.082166,-2.920017,-3.847470,0.559197,-7.368484,-0.620937,2.534658,5.251794,9.383047,3.316732,0.411521,-0.658686,7.820239,-0.481603,5.255240,6.091947,5.184661,0.574715,1.722498,-0.752929,8.153979,-8.435004,3.463639,4.658313,-1.861053,2.884294,-0.736690,6.451385,-7.910461,-3.306001,4.124449,6.166251,-3.480226,-6.362808,9.026445,4.102415,8.236730,4.783711,2.040752,1.719331,8.899841,1.783013,-6.840115,-9.557451,-3.829043,-1.494812,-2.221787,8.089060,3.273551,-7.737917,-9.246595,8.741957,3.109679,-6.255110,9.405667,-4.453541,5.257861,-8.609682,5.728042,-4.883222,-6.718844,2.420220,-0.608979,4.220313,-6.239341,-9.094783,0.130970,-7.376504,2.411567,0.171377,2.558077,6.606556,-1.458079,-2.749074,-3.097732,5.829943,-6.790332,4.087144,3.115711,-0.139740,-2.122186,1.539452,-8.398672,9.522113,-5.695295,-6.752035,-6.785925,-3.253751,7.744201,-9.969847,6.458509,-8.684725,-0.020682,-8.634456,-8.918383,8.204049,-0.661693,-1.209591,4.458540,-2.701082,6.194614,9.423952,-5.185619,-0.941614,-3.143039,-1.564242,-9.006071,7.571241], dtype = "float32")#candidate|10451|(336,)|const|float32
call_10450 = func_48_call(relay.reshape(const_10451.astype('float32'), [3, 14, 8]))
call_10452 = func_48_call(relay.reshape(const_10451.astype('float32'), [3, 14, 8]))
output = relay.Tuple([bop_10432,call_10446,call_10450,const_10451,])
output2 = relay.Tuple([bop_10432,call_10447,call_10452,const_10451,])
func_10460 = relay.Function([var_10427,var_10428,], output)
mod['func_10460'] = func_10460
mod = relay.transform.InferType()(mod)
var_10461 = relay.var("var_10461", dtype = "float64", shape = (16, 1, 1))#candidate|10461|(16, 1, 1)|var|float64
var_10462 = relay.var("var_10462", dtype = "float64", shape = (16, 7, 6))#candidate|10462|(16, 7, 6)|var|float64
output = func_10460(var_10461,var_10462,)
func_10463 = relay.Function([var_10461,var_10462,], output)
mutated_mod['func_10463'] = func_10463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6085_call = mod.get_global_var('func_6085')
func_6086_call = mutated_mod.get_global_var('func_6086')
call_10553 = relay.TupleGetItem(func_6085_call(), 0)
call_10554 = relay.TupleGetItem(func_6086_call(), 0)
uop_10568 = relay.exp(call_10553.astype('float64')) # shape=(9, 3, 1)
uop_10570 = relay.exp(call_10554.astype('float64')) # shape=(9, 3, 1)
output = relay.Tuple([uop_10568,])
output2 = relay.Tuple([uop_10570,])
func_10573 = relay.Function([], output)
mod['func_10573'] = func_10573
mod = relay.transform.InferType()(mod)
mutated_mod['func_10573'] = func_10573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10573_call = mutated_mod.get_global_var('func_10573')
call_10574 = func_10573_call()
output = call_10574
func_10575 = relay.Function([], output)
mutated_mod['func_10575'] = func_10575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8284_call = mod.get_global_var('func_8284')
func_8285_call = mutated_mod.get_global_var('func_8285')
call_10578 = relay.TupleGetItem(func_8284_call(), 0)
call_10579 = relay.TupleGetItem(func_8285_call(), 0)
func_8211_call = mod.get_global_var('func_8211')
func_8212_call = mutated_mod.get_global_var('func_8212')
call_10588 = func_8211_call()
call_10589 = func_8211_call()
func_10420_call = mod.get_global_var('func_10420')
func_10421_call = mutated_mod.get_global_var('func_10421')
call_10592 = relay.TupleGetItem(func_10420_call(), 0)
call_10593 = relay.TupleGetItem(func_10421_call(), 0)
output = relay.Tuple([call_10578,call_10588,call_10592,])
output2 = relay.Tuple([call_10579,call_10589,call_10593,])
func_10610 = relay.Function([], output)
mod['func_10610'] = func_10610
mod = relay.transform.InferType()(mod)
output = func_10610()
func_10611 = relay.Function([], output)
mutated_mod['func_10611'] = func_10611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9137_call = mod.get_global_var('func_9137')
func_9138_call = mutated_mod.get_global_var('func_9138')
call_10627 = func_9137_call()
call_10628 = func_9137_call()
output = relay.Tuple([call_10627,])
output2 = relay.Tuple([call_10628,])
func_10651 = relay.Function([], output)
mod['func_10651'] = func_10651
mod = relay.transform.InferType()(mod)
output = func_10651()
func_10652 = relay.Function([], output)
mutated_mod['func_10652'] = func_10652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6664_call = mod.get_global_var('func_6664')
func_6665_call = mutated_mod.get_global_var('func_6665')
call_10663 = relay.TupleGetItem(func_6664_call(), 1)
call_10664 = relay.TupleGetItem(func_6665_call(), 1)
output = call_10663
output2 = call_10664
func_10684 = relay.Function([], output)
mod['func_10684'] = func_10684
mod = relay.transform.InferType()(mod)
mutated_mod['func_10684'] = func_10684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10684_call = mutated_mod.get_global_var('func_10684')
call_10685 = func_10684_call()
output = call_10685
func_10686 = relay.Function([], output)
mutated_mod['func_10686'] = func_10686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5839_call = mod.get_global_var('func_5839')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_10730 = func_5839_call()
call_10731 = func_5839_call()
func_4368_call = mod.get_global_var('func_4368')
func_4374_call = mutated_mod.get_global_var('func_4374')
const_10741 = relay.const([4.122373,8.979413,-0.512328,9.837968,-9.541802,-2.088741,5.309054,-7.002762,2.503743,2.859740,0.639391,-3.268132,4.263483,-5.336007,-4.488867,-8.404682,1.155608,4.160846,8.397347,2.771068,-6.127467,1.939123,-6.862603,4.995910,2.177425,-9.260146,3.710184,1.540957,-4.955609,9.371131,-9.582364,-5.687231,3.145764,2.572602,-5.512117,-3.877954,-2.618688,-3.172582,-2.346761,-3.370928,-9.694776,-8.451522,-3.415598,-0.920514,6.400856,2.655163,-3.369786,-3.168910,0.313870,-6.278756,-4.233020,-8.178329,-7.581645,2.548598,7.613860,9.672145,7.124847,4.833108,1.983833,-1.853663,5.156882,6.127199,9.963493,6.648717,0.938167,-1.264053,-5.097739,1.934804,-8.873412,3.477983,-5.866708,0.479574,4.807640,7.219948,5.997656,1.638031,7.338311,-5.522861,-8.579435,-7.997448,2.544322,7.010213,3.990637,0.774235,-8.214527,2.340121,2.943326,-4.644957,8.813875,2.571534,7.340319,5.140135,9.258335,9.630802,8.169441,-9.397968,-0.301841,5.923923,-8.498361,1.972933,5.561584,8.599373,-3.314606,4.219073,-4.030217,-5.800307,-7.990898,-1.069772,7.433582,8.923963,8.982837,7.714237,-8.364113,-7.646330,7.781624,5.214983,-5.770333,9.368542,-0.502033,3.653407,-3.505735,-2.567642,2.830075,-4.277328,-9.751931,-9.644605,9.028556,0.132578,-8.916492,-0.795592,-9.396861,-8.626288,2.796382,5.363668,8.867852,-3.854638,-0.493453,-7.698124,7.032854,-1.646382,-5.224284,-0.483492,-3.050369,9.062292,9.970628,2.611741,0.110531,-7.419264,8.219167,-5.017320,-6.376198,-5.775745,0.853622,3.951169,-5.593680,-7.623853,-1.500389,-3.991750,5.310863,9.665888,-6.297879,-9.863353,-0.324172,-1.771359,-3.156309,-3.313919,9.989055,2.876224,6.327659,0.482863,-2.074565,3.256220,-7.453410,6.699756,5.658080,-1.666457,5.025477,-8.748353,-6.690460,-6.824556,1.098694,1.588581,4.586955,-0.592552,9.645117,-4.795228,9.352527,-5.214233,-5.593340,8.976339,-4.419581,8.853110,-4.408662,-7.625844,-2.557533,3.163063,1.580916,-5.237422,4.856571,-6.751317,-2.673474,-7.696504,-9.661495,-5.667648,7.855934,-2.080818,6.023396,9.071685,4.428046,-2.633998,-5.826086,-4.198553,6.939883,3.792210,8.414525,2.094690,-1.525717,9.509209,1.353357,4.363903,-8.178078,-5.331515,0.669826,0.935198,5.828048,-2.359913,-5.485590,-7.780254,0.824094,-3.380124,3.702515,5.006181,-7.770525,-1.646289,-3.437992,-9.131974,9.106151,-2.782226,-7.463874,-5.274263,-8.591829,-6.207825,4.574850,-6.741960,-1.482980,5.644567,-5.241525,2.340361,9.208805,-0.119949,-9.118361,-9.649838,-3.219990,-3.670538,1.777177,-1.043142,-4.938634,-3.883854,7.846608,-0.786187,6.464935,2.588696,-7.655266,-9.555435,-5.429003,2.587118,1.690742,5.485209,0.883802,6.586435,-7.241375,-5.825215,-5.921169,-1.998599,5.483949,5.591050,-1.656081,-6.127856,8.382311,-0.435688,-1.050501,-4.551297,-4.379583,6.795569,-4.570132,-4.284197,-2.880796,5.408620,8.615733,0.459162,-3.355988,4.630855,3.539896,-8.612894,7.705091,9.165259,-7.417047,2.247270,2.102084,-7.593553,7.337541,-5.419910,1.280207,-4.781869,2.371281,4.820020,-8.031285,-1.732011,8.565122,6.996787,1.564583,-6.564338,-9.549097,-5.473807,-4.625227,2.923577,7.027783,0.447713,4.501877,5.480920,7.190818,0.158319,-8.357813,-0.571588,-7.987145,-4.920753,-0.668284,6.614049,-4.328231,-9.770320,9.552431,1.575210,8.542671,7.027602,-0.572285,2.417938,-0.074273,-4.030469,-8.349504,-9.529457,-0.127429,-0.901559,9.488479,7.772579,-0.072820,-8.017683,-0.495178,-8.379089,-2.308490,-8.109135,8.141072,3.648813,-3.329658,-7.894799,-7.474208,3.795872,7.254276,6.783216,-5.209575,-2.055606,-9.782774,-6.927300,-4.666743,-8.193216,-6.383173,-5.448458,-8.052913,9.453662,1.485018,4.858381,-5.392437,-1.149198,-9.193594,-8.658166,-3.405238,0.007543,3.392267,8.283798,6.155332,9.912123,7.293933,8.736773,1.157249,-6.727164,-0.346318,-5.231925,8.169387,-5.652883,-9.073759,-7.845317,0.868176,7.861931,4.458991,4.421340,-4.540094,-1.230720,-0.243074,3.404407,7.783598,-4.749496,9.554635,-8.433624,3.636135,-2.343934,-4.750653,-7.314010,4.842170,-3.184595,6.604271,7.512198,-9.462377,7.038766,4.485238,-8.952353,-0.358831,-2.717616,6.123811,-5.297908,6.341449,-9.235099,6.971090,8.864516,-8.660812,6.214200,1.328391,4.404133,8.103921,-2.515109,2.044570,2.955292,3.521204,8.572702,-2.142342,0.830062,4.967524,5.442975,4.716359,7.278066,5.253658,8.331493,0.008039,-4.774561,5.826743,3.458535,-9.405926,-3.471096,-9.405934,-5.969758,-0.290578,-8.038895,-4.408844,-9.328053,-7.300027,1.568044,8.453699,7.494334,-6.798139,9.517202,-7.395763,-6.587270,8.841627,1.569199,2.056910,-7.944945,8.836144,9.411072,8.192828,4.361330,1.929098,3.040360,1.835723,5.784448,-7.576909,0.887505,8.167527,6.290066,0.885342,-6.360013,8.382582,-0.632010,3.262385,-7.941320,5.347046,-6.277756,-1.815605,5.578535,-6.830804,0.084487,7.275275,-8.768950,0.342849,9.001446,-5.070929,3.854682,7.037786,-6.560879,9.552132,6.909490,6.445226,0.635440,1.294861,7.960904,2.294302,-1.033683,-3.639615,4.838503,8.375672,-6.756066,-4.580725,2.430910,1.463318,-3.938547,-7.947467,4.859798,7.256930,4.385289,-4.107720,6.293658,-2.917215,-0.297207,-1.497159,-1.907610,4.254505,3.250558,-9.759858,0.761240,-7.579911,-1.022597,8.854367,-4.805231,-2.989415,7.457501,9.255379,-9.790934,-0.183281,-1.493559,-2.462523,-5.153722,7.684887,2.544831,-6.917098,9.735878,-4.328489,1.471495,2.686587,-0.143552,-2.827165,-3.078819,-2.178391,2.413029,-4.062130,3.306551,-6.434106,-2.120378,9.814276,6.809325,-3.429396,3.387161,-1.972760,-1.037012,-2.602616,2.374146,-7.903590,-7.023096,-6.660356,0.245474,6.025487,1.850551,6.852822,6.284730,9.183422,-9.171832,4.339706,-1.145047,7.749118,-4.936840,6.788046,-5.810988,4.543009,1.016886,-2.420145,-4.844310,8.189477,6.272650,2.044982,-3.361333,5.738222,-7.193594,-5.575761,-5.670866,8.284594,0.838206,-3.276101,-9.614995,6.180947,4.137025,9.030847,6.034431,6.893444,4.570781,-3.670737,9.415628,-6.099289,-0.845113,-4.234151,-0.562547,7.567116,-7.743099,5.870905,-2.245219,-0.473556,-0.739676,9.969963,9.031745,-1.135297,-2.793092,-9.259435,-2.392362,0.943728,1.968404,5.955713,-5.357724,3.304380,-9.134444,2.071481,4.310983,-7.172957,7.283421,-9.536933,-8.053312,6.524747,3.116080,-7.843456,0.176902,-9.799618,8.564204,-5.842809,7.109244,4.298521,6.008141,-4.391178,-8.042264,-7.355084,-9.754558,-8.968371,-5.941944,4.098707,4.678010,4.670699,-7.662461,1.114477,-4.490567,6.037471,-6.944431,6.592260,3.378919,-1.371719,2.862492,-4.930623,6.794675,-4.820269,-1.313300,7.666234,-8.458158,-9.394870,0.345800,-3.239460,-3.183410,4.952199,-4.293884,-9.429942,-1.462765,-2.919550,4.904951,3.960055,1.410692,-5.512985,-3.064110,-3.368427,6.172249,3.498799,-2.865147,-0.084991,9.601806,4.692412,-2.673395,0.565178,9.159010,-7.507538,-0.774597,1.906363,-0.648370,-3.089539,-5.474274,4.845563,8.350069,-1.815373,-1.132991,-2.763442,-6.652790,-7.783900,6.179408,7.411529,1.844061,-5.287948,5.865996,0.214389,2.803928,-7.246400,-9.583014,0.582842,-3.845198,-6.929340,-0.387186,-5.014811,-4.939781,-3.713418,9.111031,-5.909536,8.147168,-6.134421,9.697699,-1.496201,0.047686,-0.788343,-2.052842,-9.957469,5.633354,-0.092675,3.764116,-3.612787,6.384792,-3.293947,-0.330933,1.800599,0.715525,-9.126454,6.586187,7.772603,-2.588493,7.165504,-0.627965,7.738814,-5.113032,5.973020,0.028322,6.932028,-3.349912,5.732527,7.247801,5.413520,-7.606318,0.943063,-8.354687,4.392988,-7.261762,-6.217068,-1.853450,-2.869698,8.302779,-4.904135,5.349812,5.126938,1.046262,-4.478552,3.340739,6.076768,3.984020,2.980859,-2.002155,-8.953281,7.908913,6.845634,5.280587,-5.761646,7.744154,0.912063,0.393413,3.817310,5.627325,5.909371,9.996485,-0.963145,5.572532,-4.677033,-2.159467,-4.063829,2.423355,8.824462,4.553059,4.731127,5.704809,2.636621,1.793502,5.540320,-0.067301,6.947144,-4.986217,-1.225471,-1.484113,7.485196,-4.897381,-9.505027,1.096517,-9.106134,-5.107698,8.091965,-6.740301,-6.962664,2.878461,-4.728312,-8.894443,5.942462,9.033586,-9.587856,7.381757,5.111992,6.451869,5.640968,1.576643,3.504968,-1.654671,5.126952,4.539615,-1.789684,-0.727949,-3.514818,9.368647,9.678245,7.272919,-6.242434,6.761927,-1.297672,2.346005,3.945772,6.116396,-1.464666,6.928016,-2.530118,4.029037,-1.123577,2.693527,-7.454075,-7.750205,-3.944470,5.410142,-0.025650,-0.335401,8.620106,4.420289,-8.856153,8.650146,-3.756009,0.366735,9.362257,9.647068,-2.669089,-7.513432,7.526225,-6.195620,0.981430,-4.995606,-5.284693,-5.957931,8.568892,-7.521005,6.675308,-7.667093,-7.803298,-4.188187,6.128679,8.610883,7.723330,-5.780119,8.704435,-6.710185,1.102804,-6.831246,7.683664,0.911439,-8.907020,-6.852870,-4.966205,2.535169,-3.831827,-8.913516,-5.243779,4.086531,-4.300317,-4.025105,-5.239927,-9.891407,-4.232536,6.138611,3.157161,-0.551863,-9.943786,6.024106,3.116853,-0.688165,2.130478,3.867958,-8.732085,6.886000,8.029347,-4.281418,-8.973886,9.472223,-4.539429,-4.087596,6.689967,1.223468,9.810307,-0.701987,-3.140422,7.964693,-6.095337,2.551541,2.205098,1.898577,-9.627026,1.588029,-0.039500,4.236504,8.502189,-6.799165,-3.712551,1.605877,5.208514,7.812851,-9.830065,1.366465,6.312108,7.313244,7.049533,3.765631,9.528556,-7.348200,3.119048,-7.039518,8.552460,-1.395420,-6.926566,0.284972,9.379009,2.901482,1.157854,-9.248527,7.706242,-4.714524,-7.382945,4.784048,-9.303572,0.008617,4.514631,-2.059555,9.958403,2.861557,-2.525222,2.859106,2.705514,9.486087,3.818567,0.401201,-6.821726,6.529274,-0.961163,-9.889457,-8.254741,-4.832903,3.763539,-5.258285,0.984431,-4.760275,-4.576254,-9.947183,7.828844,8.397467,4.713597,3.955356,-6.240483,0.216913,1.394358,5.562526,6.611198,-0.527268,-8.020348,7.948339,-1.776436,-5.603728,3.795001,-7.689770,-3.160542,5.723412,-9.455515,5.659855,0.258753,5.402662,-7.551029,-6.058710,6.230496,-9.648128,1.829943,6.158793,-7.287438,7.020016,-9.308439,-3.389665,2.928336,5.342346,-4.341290,-9.370684,6.577203,2.515261,-0.102980,3.339492,-2.214319,7.082287,-5.361473,5.269740,-8.915288,-1.711946,-4.293014,-9.489882,8.484636,9.986078,-2.028892,2.677946,-5.522404,-6.942668,6.765036,-3.125465,4.135884,2.728011,-9.266465,-3.789409,1.203571,-9.233680,8.299929,8.443923,-4.824321,3.649483,-1.504558,-4.497737,9.076815,9.364608,-2.966578,-4.000614,-4.295329,5.856180,-5.200672,7.962843,3.491233,7.808013,-9.734650,0.417645,6.158005,-5.039651,2.046052,-2.240652,5.175775,3.255065,3.992506,5.561665,-5.983783,5.769550,2.191535,-2.234279,-1.886910,3.990634,2.693473,1.413455,9.260082,-5.387001,-4.966111,7.333117,4.832378,1.032601,-7.753312,-3.709844,-5.474339,8.490670,-8.628558,-3.853181,4.317017,-3.908309,-2.751505,-3.176144,4.733912,-1.540707,4.029734,5.573912,1.492723,-8.489526,5.058498,-1.397275,-0.561694,9.745829,0.230211,8.320855,-3.116499,3.851987,6.489823,-6.377100,0.878640,-8.333354,7.180736,1.562789,-9.389769,-9.200226,-6.900375,6.336014,7.828338,0.797339,-0.163304,7.073555,-4.225184,6.666938,-7.039901,-2.326256,5.352064,5.648805,-6.737061,6.438172,-5.496991,9.040729,-9.664931,1.555243,0.530580,-6.831004,7.922566,-1.094696,9.831720,6.441383,-6.479652,6.460367,-7.461999,-7.394757,6.558816,3.694001,8.999835,-6.980209,-5.829435,9.170727,-5.031159,8.244944,-9.932246,-1.074938,-7.460493,4.833687,8.985429,-9.197469,6.941712,2.075908,-8.811054,-2.186348,2.150231,8.554058,-1.595945,1.583820,-8.497814,-2.191669,3.608060,-1.003431,-9.698956,-1.228975,-6.548591,6.705910,8.628112,-9.719964,-0.099092,4.246365,6.916767,5.326148,-0.704898,2.110317,9.524832,1.115041,-5.843179,-2.382925,2.281689,-4.543755,4.539919,-2.442917,-8.084918,-1.223352,9.602275,-3.032868,-4.130010,7.885155,1.217157,-0.980036,-4.507823,8.424733,4.557823,-1.113167,-4.057205,7.713609,-7.604883,-4.890208], dtype = "float64")#candidate|10741|(1200,)|const|float64
var_10742 = relay.var("var_10742", dtype = "uint64", shape = (280,))#candidate|10742|(280,)|var|uint64
var_10743 = relay.var("var_10743", dtype = "int32", shape = ())#candidate|10743|()|var|int32
const_10744 = relay.const([0.300045,2.490996,-7.900275,1.376663,-4.894590,8.254354,-1.860216,5.071682,-4.174046,5.994947,7.780439,4.530748,9.282791,-3.434408,9.033927,2.740151,-5.647830,-0.991147,2.636650,-7.751846,-0.894965,-4.020649,2.607496,-6.715726,9.740468,-2.609267,-0.886619,-6.362666,-0.065313,-1.634366,-6.390450,-9.271513,-3.822251,1.551952,8.620496,2.006897,-6.577172,-3.045529,2.148083,2.096594,-2.092117,7.610297,4.091310,-2.245781,4.541132,2.358272,2.058309,-3.953523,-4.165834,4.822022,-3.287347,-5.895595,-1.369979,-5.722706,7.144753,-2.743534,-8.693821,-8.764429,8.897387,1.439588,4.599347,1.094344,-7.228112,-5.276437,1.152367,-2.399162,-7.371386,-2.323517,2.998617,8.056476,-9.060663,-0.812693,4.275316,3.416292,-6.109000,8.806082,8.576528,-4.492823,2.723018,4.182361,-9.291474,-6.924073,-5.085370,7.897153,1.761571,-9.165035,-3.998055,-7.367436,-0.351220,2.508451,-7.850043,-9.639273,0.286911,-1.602862,-0.207030,2.108331,7.000972,8.336421,5.744897,-6.848863,7.178784,-5.245000,5.042012,-6.357683,-1.297495,-5.403702,-1.318239,6.530812,2.845180,-5.670056,1.026473,-7.104603,1.931212,-6.736460,-7.876886,-5.070229,4.588313,-5.993094,9.468588,-8.239116,-0.815080,1.765700,-5.451050,-8.736102,-7.915012,6.551413,-5.505037,-9.718994,0.660782,-3.686128,5.526558,-9.105782,-3.393137,-2.044847,3.111567,4.775340,8.357063,-7.328752,4.819000,-1.416023,-9.034985,4.756757,1.853041,-7.359854,-0.055004,3.796029,2.707804,0.550267,-0.085510,-5.643984,-4.858221,0.882747,-2.006791,4.205836,-4.770017,2.556323,0.474887,5.889408,-9.077513,-0.551897,3.263730,7.878869,5.448250,-0.230101,-0.899379,9.057159,-1.997339,-4.087816,-4.823098,6.704900,3.209767,5.340972,5.929768,-0.866152,4.912713,3.449213,-9.417264,9.245228,9.952903,2.043662,-3.033446,-6.774917,7.729425,0.645850,7.581742,-4.285421,4.982220,1.863140,-9.388205,9.402827,-4.590547,-7.549605,6.587270,-9.607468,3.229024,-7.320863,-9.147142,9.475665,6.704375,-8.257058,2.281969,-9.963941,-8.521909,5.090521,7.220514,-1.853942,4.350787,-6.533276,4.619155,1.357621,-7.605064,-5.181084,4.199797,-6.846269,7.239718,4.711689,1.823815,6.041288,2.635962,-0.655641,5.174597,1.427137,-4.782295,4.985913,-0.573306,-9.139277,-2.855108,-7.452154,-0.163014,1.932458,7.192358,-4.100601,-9.069986,-5.112945,6.918960,-5.269411,-1.965207,4.113287,9.827920,-3.140918,-9.335734,-8.026737,6.983017,-5.855999,6.124917,5.221567,-9.742265,3.536689,-8.512313,-5.086893,-4.144168,-3.076192,-7.138149,7.006512,6.068814,-9.973213,5.010350,-7.345068,5.349065,-0.768175,-7.622236,6.947513,-5.078791,1.825654,-7.203440,-5.343595,-6.433560,4.674539,-5.303547,-9.919770,-2.959217,0.519221,7.087748,9.813426,-7.161726,7.123239,1.737302,5.701903,7.914598,-1.489744,3.024619,7.207845,-3.750818,-9.845726,3.810836,-6.871698,9.757121,7.694251,9.032464,0.011165,5.204650,6.374709,8.401441,-6.457839,2.570579,3.394069,3.142601,2.599637,6.152798,-5.906738,-3.738236,8.370009,8.707819,4.056927,1.175631,-2.485899,8.868624,9.536295,8.081283,-0.192520,2.906195,1.527043,-7.376739,-6.236060,-6.551678,-2.645589,6.020882,7.634017,1.556675,6.214863,4.738290,6.771215,2.341905,-9.274541,-9.075651,-1.712849,-9.576289,-8.191756,-5.869515,-3.603821,6.795299,5.432786,-5.994298,5.279113,8.882878,-4.286211,3.006674,-2.455484,9.501355,1.636746,9.732901,5.330052,2.994528,-0.186308,-7.116149,-5.540122,8.533084,-6.995669,-9.353019,7.080498,-9.381369,1.871536,6.103743,7.284652,-2.434990,-2.154105,-7.695106,1.881849,5.402454,4.081096,-0.359744,-2.892635,4.743637,-3.163404,-8.483052,-8.131454,8.784868,-8.684975,1.504673,3.770515,-8.906479,0.403463,7.684122,-3.546584,-0.541673,-8.728127,-3.117219,-9.090370,6.036805,2.759143,2.750882,7.562817,9.159354,2.657307,7.433015,-7.955696,2.616096,-4.228117,-1.220551,5.826762,-5.622973,-3.463321,-3.359704,-5.602130,1.821542,-1.572533,0.582051,6.237018,5.218846,1.994945,-5.771370,8.837688,8.648310,-2.775405,-8.747118,-1.995865,-7.682055,9.080668,-8.204656,-7.948191,-8.357893,-4.252643,-1.257746,-9.022874,-1.254234,-8.919930,-5.311538,-3.092604,7.776779,3.391302,7.580519,-9.040361,-0.688900,-6.943560,-6.822303,-0.361643,6.687582,-1.346024,9.375557,-3.304438,1.713443,-2.658350,-6.339319,0.449514,1.422429,6.437766,5.029476,-5.552324,-4.712517,-3.412486,-8.445143,2.224024,7.583031,8.654788,-4.237585,-6.614533,7.243955,2.216881,-7.364400,5.785422,-0.686104,-0.895200,1.429746,9.602112,1.046210,-5.097771,4.176261,-4.277907,1.681684,0.637340,7.520764,2.558940,-4.945704,-1.302317,-5.447856,-6.352125,-7.921671,-6.334413,-2.892287,7.425559,5.428574,0.856259,5.290757,1.169695,4.555898,8.756170,-0.990075,0.959573,1.630907,3.280514,-8.341222,-4.197765,-8.787958,-0.704318,4.838487,4.188926,8.707498,6.284653,-1.359532,4.144352,9.140026,-5.265596,-8.754133,-1.914912,2.614073,5.437966,7.434078,-8.635015,-9.111705,-9.807839,6.095729,-9.101572,-2.683397,2.733175,-9.544412,6.887903,0.356393,8.331785,0.547801,-0.392716,-6.097571,-4.662303,5.512451,1.414187,8.300430,3.530982,0.630112,1.583541,4.051339,-6.171040,-8.411212,1.478617,3.695665,5.659870,-7.453708,1.007553,5.273431,8.272367,0.794905,-5.335199,-1.677282,3.829692,4.011602,-7.074840,8.547861,-3.943197,-4.578009,-3.881905,-5.868053,-6.217095,2.464903,0.885971,-4.258281,5.516774,-7.370518,-9.468835,-0.473268,-9.603205,4.271156,-7.284505,-3.901684,-6.977882,0.585238,-3.935983,-3.463230,-7.934915,8.269991,-1.599173,-0.679203,4.332548,8.445900,-7.908305,3.246203,7.824042,0.986939,7.945292,-0.953060,-6.105557,-5.100963,6.331003,3.036764,-2.080300,-6.911195,-3.878251,0.204141,3.664134,-8.927817,-4.942400,-6.866605,-7.637866,8.529716,3.070939,4.616216,6.489766,5.458323,-1.716056,2.071135,9.451490,1.405171,-5.227472,8.480865,2.719859,4.506073,5.297986,8.353135,7.751932,6.348022,-5.469496,-1.699553,5.626096,-1.291781,0.774740,-4.134757,8.924284,-6.236947,-8.073939,3.820763,9.146936,5.059915,7.852795,-5.955415,-6.705014,4.152452,-1.482985,-1.076124,7.294832,6.176478,-7.243506,9.857432,7.391635,-1.711229,0.791185,0.511924,-1.206013,3.966867,3.661920,7.184218,-6.209971,-8.520962,-9.101301,-4.308460,-5.930738,-5.520741,6.945670,-3.496753,-8.605047,5.693442,5.903985,-7.709802,6.555140,3.394766,-1.551872,-8.092785,9.429387,6.312489,-3.190746,-0.843460,-3.833011,6.106580,-9.816808,-5.457710,-4.362227,3.165545,8.323565,-2.841420,2.455450,9.946488,-8.747371,-3.768731,1.556723,7.249874,8.148712,-8.287018,4.320589,-1.007728,2.691501,-8.825447,-2.975682,4.456467,8.724626,-0.007424,5.610438,-2.750425,-4.017967,-5.773877,0.558229,5.231733,4.039448,-5.007934,4.190551,-3.435257,5.706417,8.777596,-6.420100,3.831628,-5.199371,2.074246,-3.633936,4.644272,-2.761692,-0.301659,4.052412,4.719899,0.867575,2.274829,-6.472532,0.348893,-1.375418,4.991250,-8.344687,9.732951,-6.352788,-6.540787,-2.325931,7.689338,5.240830,-4.658934,0.839147,0.751768,6.526376,-5.504199,9.876376,-0.789960,-5.516300,-4.400454,-1.169731,4.338661,-8.407088,1.092608,3.642520,-7.241925,-7.394373,0.921841,-7.336870,-5.270248,-2.651258,5.323037,0.838560,4.494225,8.066782,-3.094380,0.566357,-5.930936,3.443769,4.452707,9.172028,-1.703391,-2.945325,1.530725,-5.928821,2.699127,-3.952554,-3.988931,-6.791974,4.524584,-0.016949,2.002317,1.645365,7.525368,-9.683801,4.960969,-9.138774,2.056108,-2.875688,8.446090,4.705536,9.290048,2.314334,1.630247,7.288398,7.523431,-7.981259,-7.145669,7.202064,-0.095859,-5.561906,6.128780,5.795424,6.175599,4.526717,4.937026,2.688276,2.510634,-6.258858,-1.782910,1.073480,3.604065,8.135489,-7.208643,-7.468936,-7.788143,-7.707393,0.747261,-8.983339,5.252553,-9.378701,-4.052819,1.651914,-8.985082,-3.065472,-9.959142,1.673492,8.027459,2.439161,4.444728,7.752302,-2.572918,1.954802,0.204084,-4.124096,2.513897,2.778840,8.852540,9.828797,0.477678,-9.871700,-1.956806,8.551045,-4.321789,6.902576,-3.938946,8.264103,-5.042345,2.281807,7.306553,0.291885,-9.127585,-6.519111,6.124626,8.502787,-0.108340,-3.207024,8.920866,-7.932721,-0.106365,2.118648,-9.209105,2.497417,8.884393,4.792378,2.649810,-8.397808,8.410143,9.465826,-2.982184,9.946759,-0.218888,5.342258,-7.092169,-2.850908,5.481330,8.722137,-4.470980,1.811187,6.779471,-3.825840,5.253283,-7.390598,-7.663710,1.634948,0.013371,2.115872,5.755259,1.952664,-8.043679,-1.175757,-8.134108,-3.392589,7.115925,-6.856879,-9.451274,4.507643,7.035311,-1.712029,6.531715,3.960939,0.280898,-7.665252,1.546619,-2.348447,1.158168,-9.330124,-9.712310,0.306841,-4.290813,0.457137,-1.724362,-3.869674,-1.203957,3.166262,-1.792994,-6.226026,3.403975,-6.342316,0.946881,6.707100,-5.997969,-7.109845,-6.857848,-0.690563,1.438161,7.563740,-5.967946,-4.958215,-6.337518,-1.979598,-0.701534,-0.038529,3.031996,-4.518094,3.566194,-6.518535,2.312823,7.561815,-1.458807,-5.140256,0.017406,1.325818,8.665291,-0.625148,-2.265652,3.694498,-9.899058,-2.029759,-0.564301,-3.639058,-0.592048,7.796692,8.810745,1.100138,-8.677252,2.619257,7.876197,1.689191,-9.772761,9.523206,-0.935546,2.686113,-9.944801,0.927442,1.345341,6.172748,-2.393115,4.938343,3.590530,2.072895,5.508748,5.720017,6.092987,5.319669,-7.932196,-9.663782,8.679100,6.717805,-1.666560,7.463160,-5.287059,2.899971,8.497789,-0.933478,-2.788320,2.683696,9.286851,-8.309278,4.639051,-3.601588,-1.558225,9.306508,2.262090,-9.578225,6.376865,7.205463,-0.932014,-1.348502,3.235888,-2.727367,-7.469555,9.144559,-6.514986,-0.469306,-7.111854,5.208730,-3.918869,-6.562676,-1.530817,2.207235,-2.869715,5.655417,2.755809,8.058994,0.844656,-5.906030,4.760571,5.189879,-0.684216,5.549848,-2.144022,0.057560,2.361048,-6.070313,-8.832312,9.293975,-0.924461,2.760588,-9.907668,7.341993,-6.032654,2.568586,7.570428,5.375371,4.657588,-8.796297,-9.480419,-5.272068,-7.019986,8.994577,-8.624870,0.541768,5.426358,-2.294540,1.450393,0.479456,-8.353351,3.640908,4.247738,8.831854,-1.506581,8.274666,2.722504,-3.638219,-4.137935,2.914651,5.873211,-6.234625,6.952194,-9.265080,-7.385394,1.844520,4.426489,-4.041584,8.570740,3.755489,-5.342510,-7.027965,-2.057129,1.286514,-1.139837,7.215198,3.652668,6.602957,-0.177085,-8.898249,2.401713,4.646857,-6.307081,-3.035357,5.106379,3.556192,-4.944520,-1.226091,8.437105,5.319797,-9.357671,3.074290,-9.169629,-9.310806,-7.145963,4.684894,-6.256785,-4.602071,5.034700,9.978957,-1.195247,-1.561495,-1.817543,6.445931,-7.336725,-8.403443,5.002415,-8.942359,-7.076180,8.624990,0.972364,-7.900927,5.940717,0.011187,6.829437,-9.726433,9.513293,-8.993861,4.473937,6.394285,9.183225,-4.963904,6.216378,-0.455292,2.277306,3.603968,7.969489,2.322617,-1.465946,8.109279], dtype = "float32")#candidate|10744|(1092,)|const|float32
call_10740 = relay.TupleGetItem(func_4368_call(relay.reshape(const_10741.astype('float64'), [15, 16, 5]), relay.reshape(var_10742.astype('uint64'), [280,]), relay.reshape(var_10743.astype('int32'), []), relay.reshape(const_10744.astype('float32'), [1092,]), ), 3)
call_10745 = relay.TupleGetItem(func_4374_call(relay.reshape(const_10741.astype('float64'), [15, 16, 5]), relay.reshape(var_10742.astype('uint64'), [280,]), relay.reshape(var_10743.astype('int32'), []), relay.reshape(const_10744.astype('float32'), [1092,]), ), 3)
func_10420_call = mod.get_global_var('func_10420')
func_10421_call = mutated_mod.get_global_var('func_10421')
call_10749 = relay.TupleGetItem(func_10420_call(), 0)
call_10750 = relay.TupleGetItem(func_10421_call(), 0)
bop_10751 = relay.left_shift(var_10742.astype('int8'), call_10730.astype('int8')) # shape=(9, 3, 280)
bop_10754 = relay.left_shift(var_10742.astype('int8'), call_10731.astype('int8')) # shape=(9, 3, 280)
func_7699_call = mod.get_global_var('func_7699')
func_7702_call = mutated_mod.get_global_var('func_7702')
const_10756 = relay.const([6,8,10,-6,-8,6,-2,8,-4,-10,-5,-3,2,6,8,4,9,5,8,6,10,-5,6,10,10,-5,4,-1,-3,4,-6,5,-10,3,-4,5,-3,-8,4,9,2,8,-3,-2,-7,8,-5,-7,5,-5,10,-5,-8,2,-5,-7,-6,-2,-5,-5,-1,6,-8,-2,-4,4,-5,-7,-3,7,9,-6,-9,3,-3,6,3,-1,-6,4,10,-4,-4,-9,3,7,-10,-8,-1,2,-9,-9,10,-3,-7,-6,2,1,4,-7,6,8,6,6,7,3,-8,-10,4,-7,-8,-7,5,-10,-8,8,8,-1,-4,-2,-4,-8,-7,3,2,4,2,-2,-9,-8,9,2,-3,-2,9,9,8,8,-6,7,-10,9,2,1,-6,-8,-6,-2,3,-6,-9,10,2,3,10,9,-10,-1,2,4,2,4,-2,7,-2,10,9,9,7,-1,-1,-8,-9,-3,-1,-10,9,-1,2,-4,2,-8,-3,2,6,-8,2,-9,-5,1,-9,10,-6,-7,-10,3,-7,3,-7,-2,6,1,8,-8,-2,10,1,9,5,-6,-9,9,1,5,-4,-10,-9,-10,-2,-9,-9,-6,-2,-10,3,4,-6,-5,2,2,9,8,-4,4,-7,10,5,-10,3,6,5,-5,2,7,-1,1,4,7,-8,-6,3,2,-4,-5,-10,2,-10,10,8,-5,8,-1,5,-2,9,5,4,2,-10,6,9,-9,6,10,-7,-4,-10,7,5,6,9,-9,-1,-2,9,2,5,-8,1,4,-4,-2,5,2,1,5,-3,5,-5,-6,-5,6,-2,-3,-4,-2,7,-5,-5,4,6,8,-4,-5,9,5,2,6,-8,8,5,-10,-3,-7,-5,6,8,1,6,3,7,-9,-9,-2,3,-9,-1,-3,8,-5,-8,-4,-5,-10,-3,4,1,1,-10,7,5,4,-6,2,-6,7,-8,-2,-10,-3,5,4,-3,-6,-8,-8,10,10,-10,10,-9,-2,1,-9,-8,3,10,-7,-2,5,5,-2,-5,1,-5,1,-1,1,9,-3,10,10,3,4,10,5,3,10,-2,-3,-3,10,-7,6,-1,-5,-2,3,-2,-3,4,-10,9,-5,3,7,2,10,8,-7,4,2,-7,-3,9,3,-6,-2,-3,6,-7,-1,-2,-10,6,1,-9,6,-5,-7,7,-10,3,9,-3,1,10,8,-3,-2,4,-1,-4,3,7,6,1,10,9,9,6,1,4,-6,6,9,1,4,-6,7,-8,9,8,-1,-9,-1,4,1,-9,-6,6,4,-3,5,7,5,4,5,5,2,-8,-1,3,10,-8,7,-10,-1,1,-6,-9,-6,-7,6,-6,-8,-1,7,-8,6,-3,-1,-5,-10,10,9,-7,4,-5,-5,-9,5,1,-4,1,6,6,-1,-2,9,4,-1,4,-4,6,-10,-2,4,1,2,-9,-7,8,6,-8,-1,-7,-5,8,10,1,-10,8,-6,-4,-10,9,-8,7,6,-10,-10,-7,-8,6,-2,9,-10,6,6,6,-10,7,-1,-1,2,2,-8,8,-8,5,9,-10,1,-7,-5,-4,8,-5,8,6,9,1,-8,5,-3,-6,4,-3,5,3,3,-6,-1,-9,-7,8,-4,-7,-9,-10,5,-7,5,6,-2,-9,8,-5,4,-9,-1,-1,5,-7,10,-9,7,-4,9,-10,2,-7,5,-1,-8,-2,-7,-3,-8,-9,10,-3,-7,9,8,-9,1,3,8,4,4,6,-8,-4,-1,-5,4,-8,-5,-6,-8,-5,9,-4,-2,4,4,-7,-8,9,5,-10,1,9,7,-1,8,-4,6,5,-6,-3,-8,-3,3,-8,5,9,-6,-4,-4,7,-4,1,9,-5,-5,-5,1,1,-1,4,7,-4,2,7,4,9,7,8,-6,-2,3,5,-7,-10,7,4,7,-8,-7,-8,1,9,-7,-5,-9,-3,-8,8,7,6,2,-8,10,-10,3,8,-3,-5,1,3,-8,-4,-5,2,10,5,-7,-1,-1,4,8,9,6,-2,-3,-10,-3,7,-9,-9,-6,3,7,2,4,1,5,-3,-5,9,2,-1,6,-3,9,-5,4,10,-9,-9,-6,5,2,4,3,-5,5,-9,6,-7,4,1,8,-9,-4,2,-9,-3,4,-8,5,3,-1,-2,-6,3,-10,8,-6,5,-7,9,-3,-7,-4,-8,-10,8,5,10,8,3,-8,6,-10,-3,9,5,6,2,8,-8,1,10,7,-7,-3,-5,-1,-2,-3,10,-9,-7,-8,5,-7,4,1,3,-4,-3,3,8,8,-7,-5,4,-3,-8,-9,6,-8,-5,-4,4,-1,7,-4,9,4,-4,6,-2,-10,1,7,-7,-8,3,1,2,-6,-7,3,-4,-6,6,8,-1,10,8,-9,-2,7,1,-5,-3,3,3,10,10,6,5,6,4,8,-5,7,8,-5,6,-3,2,3,-1,-3,-6,-9,-4,-7,-10,8,-5,-5,3,-1,9,-1,1,6,-4,3,7,1,6,10,6,-3,5,4,-9,10,-1,1,-3,-4,-6,-9,8,6,9,-9,-4,-7,-2,8,8,-9,8,-2,7,-2,-4,5,2,-5,-7,-7,9,-9,-5,-2,6,-1,-1,9,-1,-10,1,-7,9,3,8,-7,2,-8,3,-9,3,-5,-4,-2,-5,-8,-10,-1,-6,-6,-4,1,-7,2,-3,10,2,-10,-10,-1,-7,-3,-3,7,-9,-6,-4,-9,-8,-4,6,4,-9,-4,7,8,-6,10,-5,1,-9,-9,3,-5,-10,9,3,4,10,-3,-5,10,1,-3,8,-4,-10,-10,-10,-4,-4,-6,8,10,-10,-6,5,-8,-7,-7,-4,10,2,7,-4,4,-5,8,-2,3,3,-9,-7,-7,10,9,-4,8,-10,-10,7,6,-4,-5,-3,10,-10,-4,-10,3,-6,-1,-3,10,5,2,4,2,-2,-8,-7,-1,-9,-6,-8,8,1,-8,-10,2,8,7,-3,2,10,-10,-10,6,6,10,-10,9,10,10,4,7,-7,6,5,-3,9,2,4,9,-1,-3,-9,-4,10,1,5,5,-4,10,-8,6,8,-7,7,10,6,9,-6,6,-7,9,9,-6,5,-4,-10,-2,-10,1,-6,-5,6,2,9,7,7,9,-10,-10,-2,-1,7,-3,2,-4,6,-3,-5,6,2,-1,-9,-6,-7,7,-3,4,-2,8,-2,2,-4,-4,-9,3,4,-2,-6,4,-9,5,-9,-3,-9,-5,-3,-10,-4,-6,-5,-6,-6,-9,-1,8,-6,-3,3,8,-8,4,9,-10,10,-6,6,-1,-2,-5,-7,-10,-7,10,10,-3,-8,-10,10,-10,6,5,-9,6,-9,2,-5,9,-7,1,4,6,10,-10,5,-3,7,-7,-4,-6,6,-1,2,3,8,9,-10,5,-10,-2,-5,10,-3,-8,9,-2,-6,6,-2,9,2,3,2,4,2,-9,-1,3,-5,2,7,-9,-8,10,1,-3,7,7,-3,1,6,-6,-8,-2,-10,-7,2,-1,-10,-4,10,5,3,-5,2,-4,6,7,1,-9,6,9,3,-10,-10,-5,10,-6,-4,9,-8,6,7,8,-3,-8,-4,-6,-4,9,9,-4,3,-3,-2,-5,-7,2,4,-1,-8,5,3,-6,-10,-3,-8,9,7,-10,-4,7,6,7,-3,9,7,-3,7,-9,6,-5,9,10,8,4,7,-5,-3,4,-1,7,-7,8,2,9,9,4,10,3,4,-9,-9,5,-7,9,-2,-7,9,-2,-5,8,-7,-2,-6,4,-2,-2,-7,2,8,5,-8,-10,10,-7,-7,10,7,10,7,-5,8,10,6,3,-5,-3,-3,-1,7,9,-3,7,-1,7,-4,8,10,9,-2,-10,-9,10,-8,-4,-7,10,-3,3,-7,-3,3,-2,1,-8,2,-8,3,-4,8,-9,-2,-8,7,9,2,-4,5,-7,-9,-9,-5,3,-6,-10,-6,1,7,3,9,-9,-5,-5,10,7,6,-10,5,-10,2,-7,-10,-6,-6,-4,-2,7,7,8,-3,-9,-2,-2,4,-10,-6,3,-5,-5,-10,9,2,-1,-7,6,-5,1,-4,8,8,2,-7,10,-6,3,3,-9,-10,-4,9,-9,7,-6,4,8,-2,-8,7,-10,-4,-10,7,-4,10,-3,9,3,-1,-6,-3,-9,-5,3,-4,7,-8,-6,6,9,7,-5,4,-4,-9,4,-3,6,-1,-1,3,-4,5,-3,10,-9,6,7,3,8,10,-3,-4,-4,-9,-1,-3,3,-5,-2,-2,5,-4,7,4,7,-7,8,1,-8,8,-5,4,-10,-8,-7,-3,8,5,-3,3,2,2,3,3,-6,-1,-4,10,-8,-8,9,-7,9,4,-2,3,7,7,1,-9,3,-9,-7,-10,-9,1,-8,-7,-2,-10,-6,-10,10,-10,9,7,3,6,-5,6,3,-4,-6,9,-9,-4,-1,9,4,-2,1,5,-7,4,7,6,7,-2,-10,-3,-1,-4,-5,-6,2,-2,-1,-9,-7,-10,4,4,-5,-6,-9,-4,10,-5,-10,-2,2,9,10,-10,2,-1,6,-2,2,-6,9,-5,7,-1,-2,-1,-8,8,10,-7,9,-1,-3,-8,10,-10,-3,7,-5,-8,3,3,-2,1,10,4,-8,-8,9,8,1,10,10,-5,8,-4,-5,-4,8,8,-5,-1,1,-4,5,-10,7,-10,7,-4,9,6,6,10,5,-4,-4,3,-6,4,6,-8,3,-2,5,3,-5,-9,-9,5,-9,-4,5,8,4,-3,-7,-5,-10,3,4,-1,-7,2,-9,9,7,3,-3,-5,7,9,-2,-6,-3,10,-7,8,9,-9,8,-8,-3,1,4,-5,8,4,-10,4,1,1,-5,9,3,-4,-6,-8,-5,-5,6,9,3,4,4,-7,2,-1,8,-10,-8,4,9,2,-2,3,6,4,5,-5,7,-6,-1,-5,8,2,2,-9,7,-6,-8,-6,1,6,-9,-7,-4,-5,-9,-3,-8,5,10,-2,7,5,9,2,1,-5,10,7,4,-8,-2,2,-6,1,-2,3,3,7,-9,-1,10,3,10,5,-9,9,-3,-1,-9,-7,7,2,-5,-1,1,-5,2,2,-7,7,1,-7,-8,-5,3,8,9,-10,-1,1,7,-3,-3,8,-4,-5,-1,-9,-5,6,6,9,-5,2,-2,-10,-8,-5,-9,-10,-9,8,-9,1,-1,3,-10,-3,-3,-3,-7,-3,7,5,-4,1,-9,-5,5,-4,10,2,-2,-7,1,10,-4,-10,-3,-8,-9,2,9,-10,-3,1,-4,5,9,10,3,-5,-5,7,1,6,-6,9,6,-8,-4,2,3,5,-1,-1,5,1,-2,-7,-6,4,-1,-7,-2,6,5,5,7,-9,5,3,5,-1,6,1,-2,6,-8,2,2,-6,-8,-7,1,3,8,-9,4,2,-7,-2,10,4,-4,7,-4,5,4,-7,9,-4,-8,10,2,-1,-6,9,2,-3,-10,2,-5,-8,-8,7,-8,4,3,-9,-5,3,-5,9,-8,4,5,3,-5,-1,7,2,-7,1,-10,7,1,9,4,3,-2,-7,-7,7,1,-4,-3,4,-1,-2,-7,6,-8,-6,-5,-4,10,-4,-4,-6,10,-5,-6,-5,-8,-10,7,-5,-3,9,9,-4,5,-5,-8,5,-3,-1,1,-8,6,-4,-5,7,-7,5,10,-7,7,5,3,5,10,4,3,-8,9,-1,-10,-4,7,-3,9,3,1,1,-5,9,4,7,-7,-8,7,-3,-8,-4,-6,-1,8,-1,1,5,10,-1,9,-4,3,5,9,-8,4,-3,10,5,9,9,8,4,-9,-4,5,7,8,-9,-9,-8,-9,-3,-5,9,4,4,3,2,4,-10,-4,6,-8,-10,10,-10,-9,7,9,9,-3,5,-10,-8,5,-3,7,-2,4,2,2,-2,4,6,-7,-9,8,8,3,4,6,-8,9,-7,-3,-7,-10,-5,-2,10,-6,2,2], dtype = "int16")#candidate|10756|(2240,)|const|int16
call_10755 = relay.TupleGetItem(func_7699_call(relay.reshape(var_10743.astype('int16'), []), relay.reshape(const_10756.astype('int16'), [16, 10, 14]), ), 0)
call_10757 = relay.TupleGetItem(func_7702_call(relay.reshape(var_10743.astype('int16'), []), relay.reshape(const_10756.astype('int16'), [16, 10, 14]), ), 0)
output = relay.Tuple([call_10740,const_10741,var_10743,const_10744,call_10749,bop_10751,call_10755,const_10756,])
output2 = relay.Tuple([call_10745,const_10741,var_10743,const_10744,call_10750,bop_10754,call_10757,const_10756,])
func_10766 = relay.Function([var_10742,var_10743,], output)
mod['func_10766'] = func_10766
mod = relay.transform.InferType()(mod)
mutated_mod['func_10766'] = func_10766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10766_call = mutated_mod.get_global_var('func_10766')
var_10768 = relay.var("var_10768", dtype = "uint64", shape = (280,))#candidate|10768|(280,)|var|uint64
var_10769 = relay.var("var_10769", dtype = "int32", shape = ())#candidate|10769|()|var|int32
call_10767 = func_10766_call(var_10768,var_10769,)
output = call_10767
func_10770 = relay.Function([var_10768,var_10769,], output)
mutated_mod['func_10770'] = func_10770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8880_call = mod.get_global_var('func_8880')
func_8882_call = mutated_mod.get_global_var('func_8882')
call_10830 = func_8880_call()
call_10831 = func_8880_call()
func_48_call = mod.get_global_var('func_48')
func_50_call = mutated_mod.get_global_var('func_50')
const_10836 = relay.const([6.282646,6.583768,-9.702578,-6.140319,4.361057,1.317297,-9.991476,-1.341049,-7.860249,9.688601,-6.523540,-9.295855,-7.992328,-1.542280,1.401992,2.420824,-1.081139,-1.501314,-9.217541,-6.916973,3.353118,4.499274,-4.001700,1.245071,-0.655881,3.207510,-6.873402,5.107191,-5.614819,2.906992,-7.327407,-9.255707,4.658718,7.148233,1.203865,6.459921,3.314137,-8.466973,-6.826267,9.492388,-6.472276,7.620658,-7.773169,1.660537,7.260518,-1.890418,0.919966,-2.415396,4.341348,-2.725619,8.945877,-7.904265,-9.330205,9.541300,-0.034327,-3.240386,3.414016,5.901900,-1.157405,8.898075,4.563057,4.802663,-9.895136,7.054739,8.770345,1.331300,6.509434,-2.057765,-6.150011,9.658783,-1.948940,-9.894851,4.876533,4.877253,-6.736135,8.250381,-6.248213,1.787124,6.685855,-3.736468,-2.469436,0.992768,0.230887,-9.470074,7.078545,-6.671021,1.898174,-7.557184,3.484111,-6.956600,-4.827945,5.725266,4.162117,1.744531,-9.059061,6.295990,5.524447,-4.618714,-9.523463,9.439725,-7.984704,4.297230,-5.105981,9.008805,5.689182,4.764724,0.405384,-5.564050,5.165484,0.829772,-6.977716,5.055574,-2.578703,-3.630937,-8.993261,-6.819063,-0.608114,-7.918674,8.284391,-8.903251,4.092477,-7.132127,-1.406510,2.066034,7.336810,1.939404,-5.605989,0.986252,4.948501,0.922691,3.240006,-1.824648,-3.093303,-0.146726,-9.364657,-8.141084,0.220372,4.679135,-9.179190,2.382527,3.009072,5.170006,8.884737,-8.354432,-9.310553,-6.343896,-8.065353,4.483350,4.837102,-9.007953,-0.251238,-5.157679,-1.128322,-2.729213,-8.147438,-6.601546,-0.586224,7.653262,-2.815635,-0.653211,-6.321906,7.319815,-6.933902,9.308848,-2.225439,0.467969,-8.034188,-3.404451,9.100566,3.621456,0.921920,-3.682727,1.871838,5.738522,6.099698,5.223790,3.592590,-4.721087,5.888777,9.611034,-7.599009,8.339768,-7.782413,9.141711,-2.405997,-1.616725,-0.060948,2.728837,-5.593550,5.937408,3.255387,6.720276,1.230573,-6.684694,8.643504,2.697074,-7.979027,2.810263,-1.464384,4.666753,2.249178,-5.588469,-9.572338,-7.248947,2.981392,-0.483711,-1.045932,9.274090,-9.399397,-0.632613,6.881445,6.528604,-3.834411,8.197703,4.032438,4.035154,-7.253715,-4.036655,-9.695511,7.993112,-1.995395,-8.918351,-5.781666,2.723139,5.344078,-2.529023,6.620739,-4.365001,-3.107261,-4.204933,-1.039580,0.118552,-8.309265,1.471136,-2.452500,-6.167437,1.138893,6.523679,-6.344847,-7.005463,-4.931017,-9.568971,-9.628198,-4.913403,-1.702840,-0.670352,-0.382251,8.346119,7.868761,8.663273,-8.318706,-0.217594,-9.713561,1.105650,-8.811396,-5.250425,-0.947531,-6.300353,-8.079983,-2.791846,-9.098616,7.568003,-7.221664,4.007575,-4.931691,8.414982,-6.757770,-1.412147,8.063041,9.793275,7.870211,-1.190394,-5.859134,-1.855485,3.917953,-5.370785,5.533852,5.971670,-0.918930,3.222846,9.316172,2.812385,-0.077463,4.051745,1.135945,-5.877421,-6.067364,3.151239,7.924572,2.322547,-2.580575,-0.797377,-9.112105,0.581877,-7.420254,0.058542,1.472316,4.917509,-6.029502,8.670405,1.940189,-0.960968,-9.596675,9.431589,8.088859,5.308235,-2.112551,5.375998,1.730672,0.983351,8.270320,0.129371,-7.285121,-7.662474,9.319058,-5.159275,6.757205,2.370394,-7.614938,-5.674679,0.244098,5.417979,0.981761,-7.016081,6.038972,9.365840,-9.589716,4.097094,2.762049,8.036754,2.237938,-2.590430,-9.093751,4.980798,-6.665170,-9.044564], dtype = "float32")#candidate|10836|(336,)|const|float32
call_10835 = func_48_call(relay.reshape(const_10836.astype('float32'), [3, 14, 8]))
call_10837 = func_48_call(relay.reshape(const_10836.astype('float32'), [3, 14, 8]))
func_7699_call = mod.get_global_var('func_7699')
func_7702_call = mutated_mod.get_global_var('func_7702')
var_10854 = relay.var("var_10854", dtype = "int16", shape = ())#candidate|10854|()|var|int16
var_10855 = relay.var("var_10855", dtype = "int16", shape = (2240, 1))#candidate|10855|(2240, 1)|var|int16
call_10853 = relay.TupleGetItem(func_7699_call(relay.reshape(var_10854.astype('int16'), []), relay.reshape(var_10855.astype('int16'), [16, 10, 14]), ), 0)
call_10856 = relay.TupleGetItem(func_7702_call(relay.reshape(var_10854.astype('int16'), []), relay.reshape(var_10855.astype('int16'), [16, 10, 14]), ), 0)
var_10866 = relay.var("var_10866", dtype = "int16", shape = (2240, 14))#candidate|10866|(2240, 14)|var|int16
bop_10867 = relay.maximum(var_10855.astype('float64'), var_10866.astype('float64')) # shape=(2240, 14)
func_5839_call = mod.get_global_var('func_5839')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_10876 = func_5839_call()
call_10877 = func_5839_call()
uop_10885 = relay.log(var_10855.astype('float64')) # shape=(2240, 1)
func_8284_call = mod.get_global_var('func_8284')
func_8285_call = mutated_mod.get_global_var('func_8285')
call_10887 = relay.TupleGetItem(func_8284_call(), 0)
call_10888 = relay.TupleGetItem(func_8285_call(), 0)
output = relay.Tuple([call_10830,call_10835,const_10836,call_10853,var_10854,bop_10867,call_10876,uop_10885,call_10887,])
output2 = relay.Tuple([call_10831,call_10837,const_10836,call_10856,var_10854,bop_10867,call_10877,uop_10885,call_10888,])
func_10891 = relay.Function([var_10854,var_10855,var_10866,], output)
mod['func_10891'] = func_10891
mod = relay.transform.InferType()(mod)
var_10892 = relay.var("var_10892", dtype = "int16", shape = ())#candidate|10892|()|var|int16
var_10893 = relay.var("var_10893", dtype = "int16", shape = (2240, 1))#candidate|10893|(2240, 1)|var|int16
var_10894 = relay.var("var_10894", dtype = "int16", shape = (2240, 14))#candidate|10894|(2240, 14)|var|int16
output = func_10891(var_10892,var_10893,var_10894,)
func_10895 = relay.Function([var_10892,var_10893,var_10894,], output)
mutated_mod['func_10895'] = func_10895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10610_call = mod.get_global_var('func_10610')
func_10611_call = mutated_mod.get_global_var('func_10611')
call_10907 = relay.TupleGetItem(func_10610_call(), 1)
call_10908 = relay.TupleGetItem(func_10611_call(), 1)
output = relay.Tuple([call_10907,])
output2 = relay.Tuple([call_10908,])
func_10930 = relay.Function([], output)
mod['func_10930'] = func_10930
mod = relay.transform.InferType()(mod)
mutated_mod['func_10930'] = func_10930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10930_call = mutated_mod.get_global_var('func_10930')
call_10931 = func_10930_call()
output = call_10931
func_10932 = relay.Function([], output)
mutated_mod['func_10932'] = func_10932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7023_call = mod.get_global_var('func_7023')
func_7024_call = mutated_mod.get_global_var('func_7024')
call_10938 = func_7023_call()
call_10939 = func_7023_call()
func_8229_call = mod.get_global_var('func_8229')
func_8230_call = mutated_mod.get_global_var('func_8230')
call_10947 = relay.TupleGetItem(func_8229_call(), 0)
call_10948 = relay.TupleGetItem(func_8230_call(), 0)
func_7593_call = mod.get_global_var('func_7593')
func_7594_call = mutated_mod.get_global_var('func_7594')
call_10958 = relay.TupleGetItem(func_7593_call(), 0)
call_10959 = relay.TupleGetItem(func_7594_call(), 0)
output = relay.Tuple([call_10938,call_10947,call_10958,])
output2 = relay.Tuple([call_10939,call_10948,call_10959,])
func_10965 = relay.Function([], output)
mod['func_10965'] = func_10965
mod = relay.transform.InferType()(mod)
output = func_10965()
func_10966 = relay.Function([], output)
mutated_mod['func_10966'] = func_10966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10113_call = mod.get_global_var('func_10113')
func_10114_call = mutated_mod.get_global_var('func_10114')
call_10982 = relay.TupleGetItem(func_10113_call(), 1)
call_10983 = relay.TupleGetItem(func_10114_call(), 1)
output = call_10982
output2 = call_10983
func_10988 = relay.Function([], output)
mod['func_10988'] = func_10988
mod = relay.transform.InferType()(mod)
mutated_mod['func_10988'] = func_10988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10988_call = mutated_mod.get_global_var('func_10988')
call_10989 = func_10988_call()
output = call_10989
func_10990 = relay.Function([], output)
mutated_mod['func_10990'] = func_10990
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10991 = relay.var("var_10991", dtype = "float64", shape = (1, 11, 12))#candidate|10991|(1, 11, 12)|var|float64
uop_10992 = relay.sqrt(var_10991.astype('float64')) # shape=(1, 11, 12)
bop_10998 = relay.not_equal(uop_10992.astype('bool'), relay.reshape(var_10991.astype('bool'), relay.shape_of(uop_10992))) # shape=(1, 11, 12)
uop_11007 = relay.rsqrt(var_10991.astype('float32')) # shape=(1, 11, 12)
func_3375_call = mod.get_global_var('func_3375')
func_3377_call = mutated_mod.get_global_var('func_3377')
const_11010 = relay.const([True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False], dtype = "bool")#candidate|11010|(624,)|const|bool
call_11009 = func_3375_call(relay.reshape(const_11010.astype('bool'), [12, 4, 13]))
call_11011 = func_3375_call(relay.reshape(const_11010.astype('bool'), [12, 4, 13]))
uop_11013 = relay.sin(call_11009.astype('float64')) # shape=(12, 4, 13)
uop_11015 = relay.sin(call_11011.astype('float64')) # shape=(12, 4, 13)
output = relay.Tuple([bop_10998,uop_11007,const_11010,uop_11013,])
output2 = relay.Tuple([bop_10998,uop_11007,const_11010,uop_11015,])
func_11016 = relay.Function([var_10991,], output)
mod['func_11016'] = func_11016
mod = relay.transform.InferType()(mod)
var_11017 = relay.var("var_11017", dtype = "float64", shape = (1, 11, 12))#candidate|11017|(1, 11, 12)|var|float64
output = func_11016(var_11017)
func_11018 = relay.Function([var_11017], output)
mutated_mod['func_11018'] = func_11018
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11032 = relay.var("var_11032", dtype = "float64", shape = (11, 14, 9))#candidate|11032|(11, 14, 9)|var|float64
uop_11033 = relay.asin(var_11032.astype('float64')) # shape=(11, 14, 9)
output = relay.Tuple([uop_11033,])
output2 = relay.Tuple([uop_11033,])
func_11039 = relay.Function([var_11032,], output)
mod['func_11039'] = func_11039
mod = relay.transform.InferType()(mod)
var_11040 = relay.var("var_11040", dtype = "float64", shape = (11, 14, 9))#candidate|11040|(11, 14, 9)|var|float64
output = func_11039(var_11040)
func_11041 = relay.Function([var_11040], output)
mutated_mod['func_11041'] = func_11041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7959_call = mod.get_global_var('func_7959')
func_7961_call = mutated_mod.get_global_var('func_7961')
call_11161 = relay.TupleGetItem(func_7959_call(), 0)
call_11162 = relay.TupleGetItem(func_7961_call(), 0)
uop_11167 = relay.exp(call_11161.astype('float32')) # shape=(9, 2, 3)
uop_11169 = relay.exp(call_11162.astype('float32')) # shape=(9, 2, 3)
func_4592_call = mod.get_global_var('func_4592')
func_4595_call = mutated_mod.get_global_var('func_4595')
const_11172 = relay.const([[-6,-10,-4,5,2,-2,-8,10,-4,-5,-3,-10,-8,5,4,-8,-10,5,5,-5,9,8,6,-3,-2,9,-3,-8,1,8,-7,-6,-5,2,10,9,-5,-9,4,1,2,3,10,8,-5,5,-3,8,1,-7,9,2,-2,5,7,-2,-6,6,-8,-5,1,2,2,-1,2,-6,4,5,9,10,5,-4,-8,-7,5,7,4,9,1,-1,-9,-4,-4,-7,-8,-10,-10,6,-5,4,6,7,3,10,-5,7,-7,-7,1,-6,4,3,-2,-3,3,8,-9,3,-10,-5,3,1,4,-5,-3,-3,-6,-10,-9,-7,10,-4,-10,-10,2,-9,7,9,9,6,4,8,10,-10,1,-1,-3,-10,6,5,-7,-4,-4,8,6,5,5,-10,1,4,-7,3,-2,5,4,3,-4,-6,2,2,-9,-6,10,9,-9,-3,8,8,-10,-7,3,-6,8,7,-5,6,8,10,1,1,-4,6,-2,-1,9,9,-9,1,6,-7,-7,-6,-6,-4,6,9,-2,2,-1,-8,-3,4,-1,-9,-1,9,9,6,2,4,-7,-7,-10,-5,-6,-1,2,-10,8,-2,-8,-10,6,4,-8,-7,-1,-6,-5,-2,-7,-9,8,-2,3,-9,4,-7,7,-10,10,-2,2,-2,10,-8,-8,-6,8,-5,3,-1,-5,-9,10,9,-5,-10,10,1,-7,7,-8,4,-2,-9,2,1,-8,10,-8,-7,10,9,1,-10,-1,-6,1,-4,-8,7,3,-7,-8,9,8,10,-3,-7,-1,5,-7,10,10,10,-9,7,-5,-4,-5,-1,-1,10,10,-8,-8,2,3,-3,9,10,10,-1,4,-10,-10,-2,1,-5,-1,3,-4,-5,8,10,1,5,-7,-6,4,10,6,5,3,-10,2,6,-8,-5,-8,4,-2,9,-7,-2,1,-7,3,-4,-1,-5,-10,9,1,-6,6,8,-1,1,4,-1,5,-1,9,9,2,2,-4,-1,2,5,9,10,-2,10,-4,8,10,-10,-7,-8,2,10,-1,-10,-8,5,-8,-7,-7,6,-1,-1,-6,-9,-7,-1,-9,4,1,4,-10,-7,5,-1,-5,4,-3,-5,3,1,3,10,2,3,-9,-5,8,-9,7,5,-9,8,-3,1,8,-7,-4,4,-2,-1,6,4,-9,-8,5,10,2,7,10,-1,-2,1,7,3,-4,4,10,5,1,8,7,-9,4,2,4,2,4,-1,9,-4,-10,-3,6,-2,1,2,-5,-7,-9,-5,-4,8,-10,-1,-6,-2,-1,7,-6,4,-8,-5,7,4,-1,-10,5,3,8,-6,6,1,4,-7,-8,8,-7,-10,7,2,-4,2,-10,-7,-10,-3,1,-6,-1,-7,-1,-4,2,-3,-2,6,7,7,5,-6,-7,1,-2,-4,9,-1,-8,1,10,6,10,10,-2,-5,-1,1,-7,-5,-1,-1,10,-3,6,8,-9,-10,8,6,-6,-8,1,4,-4,-8,-8,7,10,8,-3,6,5,-1,-5,-5,-8,-10,4,9,-5,-7,6,2,-4,-4,1,9,5,10,-6,4,10,5,10,-6,-10,7,-4,4,3,5,9,1,1,-5,-8,3,5,-4,1,-7,2,9,-6,6,-10,-3,-4,-4,-8,3,9,4,3,8,-9,-7,10,-8,8,6,-4,8,7,-2,10,-9,-9,-3,-10,-8,-6,9,-10,4,1,-7,-3,1,-6,3,6,5,4,10,10,4,-3,-4,9,1,2,-5,3,-4,-8,-5,10,4,9,-1,-1,7,-9,-9,10,8,-9,8,-10,-3,3,5,-1,1,-2,-10,-7,-9,7,7,-7,9,10,10,-4,-8,-2,-10,9,-2,4,-4,-7,9,10,-1,-3,-2,10,2,-6,10,-3,-8,2,3,-4,-8,9,-6,5,5,10,10,-1,5,-3,5,5,-8,7,-4,-8,1,2,-8,5,-5,-3,4,-7,3,-3,-6,4,-7,5,2,-4,3,-2,-4,-2,-1,-4,-1,1,-1,-2,3,8,9,-1,-7,7,2,-8,-6,5,-7,2,8,-10,10,-3,-10,-2,4,-3,8,-10,-9,9,1,3,-1,-4,8,9,7,-10,-4,-7,6,1,10,-8,-10,-6,-1,8,4,2,-7,-10,2,3,-4,4,2,4,7,-3,-9,9,-8,1,-1,5,-3,-4,7,-10,-10,9,-10,-6,-6,-5,7,-4,-10,-8,9,1,-8,-6,-2,6,-3,-6,1,-1,10,-2,9,-6,3],[2,-7,2,7,2,8,-3,-6,-5,10,4,3,9,-5,3,-8,8,7,3,-1,3,-5,-10,3,8,3,-3,9,6,-8,-2,3,2,-1,4,-9,1,3,-5,-7,10,-6,-6,-7,-10,3,-1,-1,8,7,-4,-1,2,-8,-2,3,-7,-7,3,5,-8,5,-5,-2,8,5,10,9,-9,3,4,-3,3,1,-3,1,-3,3,-3,-10,-6,7,10,10,-4,1,6,-6,4,-7,4,-10,-6,-4,10,2,-9,-4,4,8,-6,6,3,-3,9,-5,9,9,-10,4,5,8,6,2,-5,-10,1,4,-7,-10,6,9,-1,-3,-9,3,-5,-9,2,-1,-4,-9,-6,-9,-10,9,-4,-3,5,8,-3,8,-9,-8,-10,9,1,-7,10,10,-4,-6,-5,5,-5,4,1,7,-10,-2,-6,-2,-8,-6,6,-10,6,9,7,1,-5,1,8,-8,2,7,-9,-9,-10,7,2,6,-3,9,-9,1,9,3,-9,6,-9,1,3,-6,6,9,-1,6,-10,-4,-9,-6,-9,6,8,-1,-4,-8,4,-10,-9,8,3,-4,1,5,-4,-10,8,3,7,-6,8,-10,5,-1,-8,-4,5,8,-9,7,2,8,-3,-9,-5,-3,-6,-3,2,7,7,5,-1,-7,3,-4,9,-8,-3,5,1,-10,1,-10,-1,7,10,7,4,-4,8,-4,1,1,9,1,4,-7,-7,9,3,6,-5,-7,-7,-6,10,-3,-1,5,10,10,-9,8,3,6,3,-1,4,-9,-10,7,-6,1,7,-7,-3,-1,-1,2,8,2,-1,2,-5,-8,6,5,8,-7,-3,9,1,-2,-3,-8,4,2,7,1,-3,-4,-6,10,8,-6,4,-1,-7,9,7,1,-9,7,5,5,8,-8,2,-8,-5,-3,10,-4,-5,9,10,7,2,-3,-3,6,10,6,2,-2,8,8,7,9,6,-8,-9,-6,-9,2,9,-5,-2,3,-5,-2,10,3,1,3,-1,4,6,-4,10,8,4,10,-4,-1,-10,4,-1,9,-10,-1,-5,-4,4,-7,4,4,9,-7,7,-2,8,-6,4,5,2,-6,9,-10,-9,-5,-4,-4,-3,4,6,-8,3,-7,3,-10,6,-2,9,7,-10,-3,-1,7,-8,5,-10,-10,9,7,-9,-7,-4,-9,-2,1,9,8,2,6,-8,-4,6,-1,-3,-6,-7,7,-3,-6,-3,9,-10,-1,-4,-2,10,1,10,-10,10,5,-3,9,-9,1,2,3,8,-6,-3,-5,4,8,7,1,7,3,8,-6,-8,8,-8,4,5,8,-10,-10,10,2,-7,3,7,-2,1,-2,4,9,-1,9,6,-3,-2,-1,-10,-10,-6,-10,10,-9,-9,-9,1,6,4,-9,5,-5,4,1,-10,2,3,-10,4,-5,-10,-8,4,-4,-3,9,4,7,1,-3,-9,9,-5,-7,8,-3,-6,-3,9,1,10,-10,-3,4,6,-6,-2,-9,4,5,-7,2,3,6,-3,-4,4,-1,2,10,3,-3,1,-2,-9,6,-9,-1,-6,-2,5,-3,-1,-7,-10,-1,3,7,-7,8,8,-1,-4,7,1,-8,7,-7,-6,1,9,10,-5,5,-8,7,-7,-4,3,3,-5,2,4,10,2,-7,-3,-5,8,10,3,3,-8,-4,-10,-8,-10,7,-10,6,-10,4,-2,4,1,5,1,-5,-6,-1,6,9,10,9,-5,-3,-8,8,6,-9,6,-10,-3,-10,-3,-3,-10,6,10,-9,10,10,9,-7,2,1,-1,8,7,3,9,-1,-10,-1,2,-7,-4,-10,9,-9,5,-10,2,-4,-8,-10,-5,-7,10,7,-10,6,-3,6,-4,-2,4,9,2,6,10,-6,-9,-10,-1,-2,-1,-4,5,-4,-4,1,-8,7,-4,9,-10,-9,-10,-1,3,-3,-4,-9,-8,9,9,3,2,9,-2,10,-7,-5,7,9,9,-6,-10,1,10,-9,10,8,1,-8,8,-7,8,-2,-7,-6,-3,-7,-7,-1,8,6,4,-2,1,-10,-9,-4,10,-3,-6,-3,-1,-4,-9,-7,-6,9,-9,5,-2,-9,-3,-9,10,9,-10,7,-3,2,-7,-2,-4,-3,1,-2,-6,-5,3,-3,7,1,4,-3,-10,-2,-5,-9,5,-1,1,-1,-4,5,2,2,-10,9,10,3,-8,-4,7,-2,-5,-9,4,-3,-6,-6,6,8,-1,-10,-10,1,-5,-10,10,5]], dtype = "uint16")#candidate|11172|(2, 840)|const|uint16
call_11171 = relay.TupleGetItem(func_4592_call(relay.reshape(const_11172.astype('uint16'), [10, 12, 14])), 1)
call_11173 = relay.TupleGetItem(func_4595_call(relay.reshape(const_11172.astype('uint16'), [10, 12, 14])), 1)
func_7871_call = mod.get_global_var('func_7871')
func_7873_call = mutated_mod.get_global_var('func_7873')
call_11183 = relay.TupleGetItem(func_7871_call(), 0)
call_11184 = relay.TupleGetItem(func_7873_call(), 0)
func_7797_call = mod.get_global_var('func_7797')
func_7798_call = mutated_mod.get_global_var('func_7798')
call_11190 = relay.TupleGetItem(func_7797_call(), 0)
call_11191 = relay.TupleGetItem(func_7798_call(), 0)
output = relay.Tuple([uop_11167,call_11171,const_11172,call_11183,call_11190,])
output2 = relay.Tuple([uop_11169,call_11173,const_11172,call_11184,call_11191,])
func_11192 = relay.Function([], output)
mod['func_11192'] = func_11192
mod = relay.transform.InferType()(mod)
output = func_11192()
func_11193 = relay.Function([], output)
mutated_mod['func_11193'] = func_11193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11192_call = mod.get_global_var('func_11192')
func_11193_call = mutated_mod.get_global_var('func_11193')
call_11236 = relay.TupleGetItem(func_11192_call(), 1)
call_11237 = relay.TupleGetItem(func_11193_call(), 1)
func_5878_call = mod.get_global_var('func_5878')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_11247 = func_5878_call()
call_11248 = func_5878_call()
func_6136_call = mod.get_global_var('func_6136')
func_6137_call = mutated_mod.get_global_var('func_6137')
call_11251 = func_6136_call()
call_11252 = func_6136_call()
output = relay.Tuple([call_11236,call_11247,call_11251,])
output2 = relay.Tuple([call_11237,call_11248,call_11252,])
func_11267 = relay.Function([], output)
mod['func_11267'] = func_11267
mod = relay.transform.InferType()(mod)
mutated_mod['func_11267'] = func_11267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11267_call = mutated_mod.get_global_var('func_11267')
call_11268 = func_11267_call()
output = call_11268
func_11269 = relay.Function([], output)
mutated_mod['func_11269'] = func_11269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10965_call = mod.get_global_var('func_10965')
func_10966_call = mutated_mod.get_global_var('func_10966')
call_11272 = relay.TupleGetItem(func_10965_call(), 0)
call_11273 = relay.TupleGetItem(func_10966_call(), 0)
func_9617_call = mod.get_global_var('func_9617')
func_9620_call = mutated_mod.get_global_var('func_9620')
var_11289 = relay.var("var_11289", dtype = "float64", shape = (294, 1))#candidate|11289|(294, 1)|var|float64
var_11290 = relay.var("var_11290", dtype = "float64", shape = (156,))#candidate|11290|(156,)|var|float64
call_11288 = relay.TupleGetItem(func_9617_call(relay.reshape(var_11289.astype('float64'), [294,]), relay.reshape(var_11290.astype('float64'), [156,]), ), 1)
call_11291 = relay.TupleGetItem(func_9620_call(relay.reshape(var_11289.astype('float64'), [294,]), relay.reshape(var_11290.astype('float64'), [156,]), ), 1)
output = relay.Tuple([call_11272,call_11288,var_11289,var_11290,])
output2 = relay.Tuple([call_11273,call_11291,var_11289,var_11290,])
func_11295 = relay.Function([var_11289,var_11290,], output)
mod['func_11295'] = func_11295
mod = relay.transform.InferType()(mod)
mutated_mod['func_11295'] = func_11295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11295_call = mutated_mod.get_global_var('func_11295')
var_11297 = relay.var("var_11297", dtype = "float64", shape = (294, 1))#candidate|11297|(294, 1)|var|float64
var_11298 = relay.var("var_11298", dtype = "float64", shape = (156,))#candidate|11298|(156,)|var|float64
call_11296 = func_11295_call(var_11297,var_11298,)
output = call_11296
func_11299 = relay.Function([var_11297,var_11298,], output)
mutated_mod['func_11299'] = func_11299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7023_call = mod.get_global_var('func_7023')
func_7024_call = mutated_mod.get_global_var('func_7024')
call_11322 = func_7023_call()
call_11323 = func_7023_call()
func_7096_call = mod.get_global_var('func_7096')
func_7098_call = mutated_mod.get_global_var('func_7098')
call_11335 = func_7096_call()
call_11336 = func_7096_call()
func_6324_call = mod.get_global_var('func_6324')
func_6326_call = mutated_mod.get_global_var('func_6326')
call_11365 = relay.TupleGetItem(func_6324_call(), 1)
call_11366 = relay.TupleGetItem(func_6326_call(), 1)
output = relay.Tuple([call_11322,call_11335,call_11365,])
output2 = relay.Tuple([call_11323,call_11336,call_11366,])
func_11371 = relay.Function([], output)
mod['func_11371'] = func_11371
mod = relay.transform.InferType()(mod)
mutated_mod['func_11371'] = func_11371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11371_call = mutated_mod.get_global_var('func_11371')
call_11372 = func_11371_call()
output = call_11372
func_11373 = relay.Function([], output)
mutated_mod['func_11373'] = func_11373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6085_call = mod.get_global_var('func_6085')
func_6086_call = mutated_mod.get_global_var('func_6086')
call_11388 = relay.TupleGetItem(func_6085_call(), 3)
call_11389 = relay.TupleGetItem(func_6086_call(), 3)
output = relay.Tuple([call_11388,])
output2 = relay.Tuple([call_11389,])
func_11398 = relay.Function([], output)
mod['func_11398'] = func_11398
mod = relay.transform.InferType()(mod)
mutated_mod['func_11398'] = func_11398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11398_call = mutated_mod.get_global_var('func_11398')
call_11399 = func_11398_call()
output = call_11399
func_11400 = relay.Function([], output)
mutated_mod['func_11400'] = func_11400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7023_call = mod.get_global_var('func_7023')
func_7024_call = mutated_mod.get_global_var('func_7024')
call_11430 = func_7023_call()
call_11431 = func_7023_call()
func_9137_call = mod.get_global_var('func_9137')
func_9138_call = mutated_mod.get_global_var('func_9138')
call_11435 = func_9137_call()
call_11436 = func_9137_call()
output = relay.Tuple([call_11430,call_11435,])
output2 = relay.Tuple([call_11431,call_11436,])
func_11441 = relay.Function([], output)
mod['func_11441'] = func_11441
mod = relay.transform.InferType()(mod)
output = func_11441()
func_11442 = relay.Function([], output)
mutated_mod['func_11442'] = func_11442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10573_call = mod.get_global_var('func_10573')
func_10575_call = mutated_mod.get_global_var('func_10575')
call_11450 = relay.TupleGetItem(func_10573_call(), 0)
call_11451 = relay.TupleGetItem(func_10575_call(), 0)
func_6360_call = mod.get_global_var('func_6360')
func_6361_call = mutated_mod.get_global_var('func_6361')
call_11455 = func_6360_call()
call_11456 = func_6360_call()
output = relay.Tuple([call_11450,call_11455,])
output2 = relay.Tuple([call_11451,call_11456,])
func_11460 = relay.Function([], output)
mod['func_11460'] = func_11460
mod = relay.transform.InferType()(mod)
mutated_mod['func_11460'] = func_11460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11460_call = mutated_mod.get_global_var('func_11460')
call_11461 = func_11460_call()
output = call_11461
func_11462 = relay.Function([], output)
mutated_mod['func_11462'] = func_11462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6136_call = mod.get_global_var('func_6136')
func_6137_call = mutated_mod.get_global_var('func_6137')
call_11463 = func_6136_call()
call_11464 = func_6136_call()
uop_11516 = relay.sqrt(call_11463.astype('float64')) # shape=(9, 3, 1)
uop_11518 = relay.sqrt(call_11464.astype('float64')) # shape=(9, 3, 1)
func_10113_call = mod.get_global_var('func_10113')
func_10114_call = mutated_mod.get_global_var('func_10114')
call_11528 = relay.TupleGetItem(func_10113_call(), 0)
call_11529 = relay.TupleGetItem(func_10114_call(), 0)
output = relay.Tuple([uop_11516,call_11528,])
output2 = relay.Tuple([uop_11518,call_11529,])
func_11531 = relay.Function([], output)
mod['func_11531'] = func_11531
mod = relay.transform.InferType()(mod)
output = func_11531()
func_11532 = relay.Function([], output)
mutated_mod['func_11532'] = func_11532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7428_call = mod.get_global_var('func_7428')
func_7429_call = mutated_mod.get_global_var('func_7429')
call_11538 = func_7428_call()
call_11539 = func_7428_call()
output = call_11538
output2 = call_11539
func_11565 = relay.Function([], output)
mod['func_11565'] = func_11565
mod = relay.transform.InferType()(mod)
output = func_11565()
func_11566 = relay.Function([], output)
mutated_mod['func_11566'] = func_11566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10573_call = mod.get_global_var('func_10573')
func_10575_call = mutated_mod.get_global_var('func_10575')
call_11569 = relay.TupleGetItem(func_10573_call(), 0)
call_11570 = relay.TupleGetItem(func_10575_call(), 0)
func_7515_call = mod.get_global_var('func_7515')
func_7516_call = mutated_mod.get_global_var('func_7516')
call_11571 = func_7515_call()
call_11572 = func_7515_call()
func_9339_call = mod.get_global_var('func_9339')
func_9341_call = mutated_mod.get_global_var('func_9341')
call_11580 = relay.TupleGetItem(func_9339_call(relay.reshape(call_11571.astype('float64'), [9, 2, 3])), 3)
call_11581 = relay.TupleGetItem(func_9341_call(relay.reshape(call_11571.astype('float64'), [9, 2, 3])), 3)
output = relay.Tuple([call_11569,call_11571,call_11580,])
output2 = relay.Tuple([call_11570,call_11572,call_11581,])
func_11582 = relay.Function([], output)
mod['func_11582'] = func_11582
mod = relay.transform.InferType()(mod)
mutated_mod['func_11582'] = func_11582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11582_call = mutated_mod.get_global_var('func_11582')
call_11583 = func_11582_call()
output = call_11583
func_11584 = relay.Function([], output)
mutated_mod['func_11584'] = func_11584
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11585 = relay.var("var_11585", dtype = "uint8", shape = (12, 11, 5))#candidate|11585|(12, 11, 5)|var|uint8
var_11586 = relay.var("var_11586", dtype = "uint8", shape = (12, 11, 5))#candidate|11586|(12, 11, 5)|var|uint8
bop_11587 = relay.add(var_11585.astype('uint8'), relay.reshape(var_11586.astype('uint8'), relay.shape_of(var_11585))) # shape=(12, 11, 5)
func_8307_call = mod.get_global_var('func_8307')
func_8308_call = mutated_mod.get_global_var('func_8308')
call_11590 = relay.TupleGetItem(func_8307_call(), 0)
call_11591 = relay.TupleGetItem(func_8308_call(), 0)
func_10264_call = mod.get_global_var('func_10264')
func_10266_call = mutated_mod.get_global_var('func_10266')
const_11595 = relay.const([-5,-10,4,-3,10,-1,-9,6,5,3,10,5,-3,-4,-2,-2,6,5,8,5,3,6,-2,-9,4,4,-9,9,5,-2,6,5,8,2,-7,5,-2,6,-5,-2,9,5,4,10,9,10,8,7,-7,-1,7,-8,6,4,1,10,-3,7,-9,1,-9,-5,-6,2,-3,-8,8,9,2,-5,3,-2,-10,-6,-8,-9,7,3,-6,7,-9,-8,-2,2,2,6,5,-2,9,-4,-4,-3,6,-4,-2,-10,7,9,-6,-3,10,-4,9,2,5,-4,-8,1,4,6,8,6,-5,7,10,10,1,-7,-3,10,-4,8,-3,5,6,-3,9,-2,-6,4,10,6,-1,6,1,-1,-2,6,-9,3,4,2,5,6,6,9,-7,9,-7,1,3,-10,2,-2,-9,-6,3,6,5,-1,-3,7,5,-9,1,10,-3,-10,-8,-8,7,10,4,-10,-8,-10,-9,-3,10,-7,-2,-6,-9,2,7,4,3,-6,10,8,6,8,-2,2,-1,-7,-7,-9,-7,6,8,2,4,10,3,-1,-5,-6,8,-1,6,1,8,2,1,-1,-7,-2,-10,-6,-2,4,6,4,-10,2,-4,-1,-4,-10,-10,6,4,2,-2,-9,-5,-4,4,4,5,-10,-10,-1,-6,9,-2,5,3,-1,4,-3,-4,-10,5,4,10,10,7,-4,2,8,8,-1,-9,-10,-4,-3,-10,-9,-7,-6,7,8,-7,6,6,5,-5,9,-1,-8,1,-5,6,-5,-5,1,7,5,-4,5,-4,5,9,5,4,6,7,-4,3,6,-2,-1,8,3,8,-1,-8,-4,-2,-8,-2,-2,6,-2,7,9,6,-8,-8,6,1,-10,6,8,3,-4,8,4,2,-3,3,-10,-3,-3,1,9,-7,-3,-3,8,-4,-2,10,8,-1,3,-4,3,1,-8,-5,6,-6,-2,-9,6,7,-10,4,-9,1,-1,2,4,-9,-10,1,-6,-7,7,-3,1,-1,-4,-1,9,2,-10,-3,-10,9,9,-7,7,5,10,-7,7,6,-10,-4,-10,9,3,-4,-6,-4,-1,2,-5,-1,7,9,-5,-5,1,-6,-6,-1,-8,-1,-6,-1,-5,6,-4,-4,5,6,8,9,-1,-8,-3,-5,4,7,-10,-8,3,-7,-10,-7,4,-9,5,2,2,-2,-1,-5,-2,6,1,8,-7,-9,6,4,-9,4,10,9,-6,-6,-7,-1,-5,2,-10,-10,-7,-3,-6,5,-9,-9,-3,-10,9,-7,9,5,4,8,8,-10,-8,8,-2,-1,-9,8,1,2,-6,-6,6,6,9,-5,-3,-3,-10,7,3,-10,10,-6,-8,9,-9,8,6,-5,-10,-3,-5,-6,-9,-4,-10,-7,-4,9,3,-7,-5,-8,-9,-10,-1,-1,-9,-1,9,1,10,10,-2,8,-1,10,10,-10,10,5,3,10,-1,2,-6,1,-2,-4,2,-2,6,2,1,-4,-10,-2,5,4,-5,-7,-9,1,-9,-6,6,7,-3,10,9,-2,-3,1,-10,-5,1,-8,-10,2,1,-4,9,10,8,-3,-6,-5,1,8,-3,6,4,-4,2,-6,5,1,9,3,3,-6,3,9,-9,7,9,6,7,10,6,-2,5,-3,5,6,2,-9,5], dtype = "int32")#candidate|11595|(616,)|const|int32
call_11594 = relay.TupleGetItem(func_10264_call(relay.reshape(const_11595.astype('int32'), [14, 44])), 4)
call_11596 = relay.TupleGetItem(func_10266_call(relay.reshape(const_11595.astype('int32'), [14, 44])), 4)
func_8429_call = mod.get_global_var('func_8429')
func_8433_call = mutated_mod.get_global_var('func_8433')
var_11606 = relay.var("var_11606", dtype = "bool", shape = (90,))#candidate|11606|(90,)|var|bool
call_11605 = relay.TupleGetItem(func_8429_call(relay.reshape(call_11594.astype('bool'), []), relay.reshape(var_11606.astype('bool'), [90,]), ), 2)
call_11607 = relay.TupleGetItem(func_8433_call(relay.reshape(call_11594.astype('bool'), []), relay.reshape(var_11606.astype('bool'), [90,]), ), 2)
func_8791_call = mod.get_global_var('func_8791')
func_8793_call = mutated_mod.get_global_var('func_8793')
call_11613 = relay.TupleGetItem(func_8791_call(), 0)
call_11614 = relay.TupleGetItem(func_8793_call(), 0)
output = relay.Tuple([bop_11587,call_11590,call_11594,const_11595,call_11605,var_11606,call_11613,])
output2 = relay.Tuple([bop_11587,call_11591,call_11596,const_11595,call_11607,var_11606,call_11614,])
func_11622 = relay.Function([var_11585,var_11586,var_11606,], output)
mod['func_11622'] = func_11622
mod = relay.transform.InferType()(mod)
mutated_mod['func_11622'] = func_11622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11622_call = mutated_mod.get_global_var('func_11622')
var_11624 = relay.var("var_11624", dtype = "uint8", shape = (12, 11, 5))#candidate|11624|(12, 11, 5)|var|uint8
var_11625 = relay.var("var_11625", dtype = "uint8", shape = (12, 11, 5))#candidate|11625|(12, 11, 5)|var|uint8
var_11626 = relay.var("var_11626", dtype = "bool", shape = (90,))#candidate|11626|(90,)|var|bool
call_11623 = func_11622_call(var_11624,var_11625,var_11626,)
output = call_11623
func_11627 = relay.Function([var_11624,var_11625,var_11626,], output)
mutated_mod['func_11627'] = func_11627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10074_call = mod.get_global_var('func_10074')
func_10076_call = mutated_mod.get_global_var('func_10076')
call_11660 = relay.TupleGetItem(func_10074_call(), 0)
call_11661 = relay.TupleGetItem(func_10076_call(), 0)
func_9744_call = mod.get_global_var('func_9744')
func_9748_call = mutated_mod.get_global_var('func_9748')
const_11663 = relay.const([8.123047,1.012067,-9.366103,6.373270,-9.059421,8.819101,5.553054,4.183149,-5.377931,8.892340,2.091735,-0.014174,-2.314257,-0.146156,-4.156851,-0.629312,5.155954,4.746501,-5.753675,0.925505,1.161567,7.652619,3.436414,3.360716,4.492648,4.777909,-1.492503,-7.253975,1.764634,-3.122856,9.824965,0.109450,-8.746476,-0.395025,7.923037,9.650388,-7.715777,-6.328743,8.803493,-7.622897,-6.510226,6.913400,3.934916,6.862443,2.321684,-7.355531,-3.670580,1.900983,-3.157650,-9.516355,5.126356,-9.651533,-6.069397,-1.150556,9.139607,-3.262740,-8.155052,-8.270795,-1.549421,-9.784569,4.935919,-9.117876,8.587940,-3.500234,5.857490,4.566637,-0.735330,-2.797047,-9.874390,5.573039,3.179472,0.725914,7.492831,5.705572,-5.744027,2.147943,-0.827485,0.569639,7.299257,-6.569068,-8.591221,-4.927021,3.635243,9.830311,6.493373,9.635779,5.005539,-6.750515,-3.142145,-7.021156,3.148582,-8.444195,6.865117,7.609946,7.272093,0.800549,-4.330425,5.669616,-4.553541,9.616891,5.547651,8.529144,-7.125800,7.340593,0.922199,9.910684,-4.817862,0.755714,7.711039,-3.406617,-3.336237,4.021259,8.415844,-6.523578,6.324176,1.947895,5.295987,1.494024,-1.222351,-6.299133,-5.731288,6.928707,-1.238164,-6.315405,4.374510,-4.802315,-3.531138,-6.963414,-6.927041,-5.152782,2.124882,-3.977684,-2.553935,-0.503549,8.000700,-6.179350,-8.947553,-1.903237,-7.344612,-8.955885,7.502812,1.454224,-9.250698,-1.651667,4.057065,2.111635,-9.038697,5.155550,0.594131,-6.835704,-8.446305,9.842709,-2.024009,4.744214,-3.503111,-2.414851,2.525917,-7.456625,-5.609736,-0.819041,2.682151,-0.485631,-8.188015,-1.213079,5.697784,-1.625658,5.203235,-1.065851,4.770046,8.201731,5.450350,5.118180,9.329160,5.325926,-5.627624,8.654184,6.291357,-7.891752,9.131878,2.280941,9.665032,2.873551,8.538908,-0.430063,1.817082,9.306514,2.130019,1.113420,-0.571604,-8.194008,8.195506,-3.869310,1.932754,-2.790716,8.319085,7.364833,5.047836,1.547336,-2.861183,9.099790,6.473875,4.966512,3.770910,-3.693083,0.940418,3.423466,-8.957868,4.801182,-5.923882,9.209332,4.748536,-5.709701,6.359262,-7.066386,0.171072,3.450330,-9.966045,7.733650,-7.966988,0.823388,7.377078,-9.233904,-5.483001,8.337981,9.254691,-5.565087,-4.513487,1.314469,-6.486127,6.361042,1.350355,1.110579,8.985581,9.390425,-7.685346,5.902621,4.043969,7.471020,9.890772,-2.201719,3.329054,-4.100072,4.544119,9.809231,4.296821,4.661601,-4.793050,-6.929927,-6.137734,5.204189,-4.335973,-6.046670,-3.360387,8.283539,-8.970783,-8.914971,-2.837917,0.598995,-1.201953,9.730044,-1.416170,-1.239153,8.947255,-9.550117,-8.984412,-1.753355,1.958322,3.571712,0.489381,7.377793,-1.545831,8.144292,-9.542288,9.346771,-8.096865,-4.548467,5.296068,1.897065,0.424422,-4.759999,9.582562,-7.004296,7.168230,-9.637531,-2.564003,5.546451,7.826999,7.888495,0.922542,-5.656058,-7.716804,-3.591701,7.584151,-8.679742,-3.387080,-4.404039,-9.886975,-4.956813,-2.908765,-8.191136,-0.297630,-5.317081,-4.842373,-8.384838,-2.197293,3.942950,9.523129,-9.028795,4.383184,-8.766599,-7.910542,2.262980,3.746951,-2.440404,-5.049187,6.828717,-4.486545,-4.567059,6.562416,9.880427,1.971731,-0.244899,-2.715636,9.885195,-7.159849,1.420147,1.144650,1.290458,-2.846749,-3.624711,-1.000385,-6.653726,5.261645,7.847558,7.276438,-8.706337,-3.070378,6.818264,-8.456300,-8.124062,-7.250546,8.102784,9.973686,1.235000,-6.460610,-3.759418,0.463446,-7.085479,-1.209428,1.524778,-2.323422,-4.639278,2.107196,3.374505,0.127314,-4.183437,-4.918373,7.964824,-8.349778,0.017554,-8.947651,9.124399,-2.297731,9.845700,0.492811,-0.266561,-0.959102,-6.473362,4.233361,0.984268,-8.949334,-0.776461,9.177269,-4.525509,-8.842410,4.676459,0.447916,-9.389436,-4.828337,-0.207875,2.674785,4.487204,-4.758662,5.510968,3.999995,-7.346718,-1.495019,-6.904239,-6.868037,1.360924,3.434572,4.731093,4.039770,-6.811518,0.845715,3.879784,-0.550152,9.920586,0.798951,-4.153961,2.597217,-8.529793,4.218840,-1.800899,2.825635,2.248056,-4.936913,0.322012,-5.627795,8.544674,4.711263,-5.635737,7.065740,-2.222874,-6.836839,7.864620,5.252409,9.283397,1.851210,-6.025781,7.041771,6.344379,-9.442881,1.278057,-6.512299,5.193904,-5.781140,4.038598,6.175287,-6.887963,-7.962044,3.824684,7.071091,5.659091,-3.847399,7.247266,7.348141,0.368550,4.592232,-1.213640,9.623021,2.695034,-4.393985,2.556968,-2.337566,4.613073,-3.822166,-4.012455,-3.898758,-4.051034,2.708770,-7.584188,-6.669517,8.719839,8.434967,1.847462,2.908182,-6.297260,-5.176583,7.667892,7.863458,9.927889,2.947246,5.447753,5.370442,6.824957,8.460981,4.356805,5.152633,3.550217,1.846113,-7.383731,-2.286408,-3.489142,-1.285357,3.504460,-3.258768,7.993562,7.983081,4.778319,-8.620024,1.395560,2.031277,6.562229,2.614192,9.772669,-3.066344,6.273570,-5.365108,0.931568,1.232266,-3.079435,8.536784,-3.366919,-6.439900,-6.909297,-0.294258,-9.013908,-0.017508,-7.152228,-2.981964,-9.913150,1.133426,0.116530,6.162330,6.578173,-7.146000,8.545267,3.207262,-0.168741,3.744364,7.978635,-0.781404,8.934780,2.229464,6.635596,6.538135,-6.621693,2.565697,-5.875366,-8.137150,-3.229403,6.702465,7.599220,1.494334,-6.705272,-2.275164,-0.263959,0.212973,5.046293,4.465978,1.906577,1.616893,-7.412207,2.174659,5.407063,-6.515107,-6.087704,0.376985,-8.596481,2.389799,-5.405189,-8.839655,6.038839,-5.153998,3.187543,2.425062,3.028773,-1.245213,7.979511,-9.090526,-2.092834,-7.190641,2.830328,-0.294270,-9.999536,-7.574723,3.480448,3.672055,9.195865,7.320718,-4.208475,9.086562,3.056096,7.742112,4.396368,-3.025692,-4.752722,1.698573,-5.464691,0.469128,6.901502,1.291531,8.113326,2.363468,6.144747,8.820743,7.634966,0.397923,-1.293698,-8.911708,-2.159547,0.423999,5.150624,-7.543409,-6.901561,5.559421,-2.103687,-0.256156,6.220161,-8.407503,2.683537,-9.622688,-9.180291,0.349318,-2.607473,-5.997882,-2.076877,3.015006,-3.790877,-8.778864,-6.927829,7.867941,-1.845727,-1.647880,4.442616,-7.732972,-5.054194,-0.246715,-1.326227,3.376494,8.559980,-4.015822,-6.738322,6.925600,7.159279,0.275241,0.714360,-9.463758,1.292311,-9.948981,6.491796,5.920142,3.151843,-2.453603,6.201595,0.635757,-7.664161,1.321477,2.745016,4.950173,-7.123350,-7.088379,3.444351,2.179938,6.175078,-6.609876,3.359232,-6.042249,0.288976,-5.921093,0.986425,8.873094,7.204721,-2.211691,6.368987,-3.696499,-1.845037,-6.664463,4.626113,-7.918165,0.340094,-6.275132,-6.818460,1.541107,8.790117,5.678827,6.526134,-5.892130,2.585258,-1.533436,1.564667,-9.024208,1.718939,7.559810,-6.419183,-4.017376,-1.580910,-9.392230,5.700025,-2.927449,-7.491843,8.691524,-6.711514,-9.926264,-5.770679,7.877584,2.985945,-0.142433,-5.796766,-5.682199,9.243388,-2.497937,4.470844,3.870769,-2.566087,5.805712,7.076547,6.328147,3.131438,5.155270,-9.993273,4.996180,-6.213668,-3.566033,8.615729,4.602475,6.961256,5.576267,4.462090,-6.877483,-7.301787,-0.556450,-9.739832,-5.348494,9.349688,-1.903909,-2.282113,-1.179092,7.835833,4.853509,4.396449,3.735872,-8.469595,1.048541,6.129000,0.873323,6.904108,8.846988,6.515756,0.754967,1.758313,-6.196190,8.953472,-1.066724,-1.103303,-4.135882,6.118899,-4.884756,-2.987131,1.892036,6.132992,4.318558,-9.245177,5.033428,-8.930769,-1.092310,-3.482545,9.818222,1.211846,-4.508894,0.812916,2.921861,-7.209536,-0.880269,6.535394,3.371846,5.266292,-5.499645,4.394370,5.621302,-1.098824,-5.673135,3.785169,9.008165,8.625951,-9.880193,-4.189314,6.300340,4.450305,8.932857,3.094231,-2.535813,6.930881,-0.744611,-8.702110,7.579331,-0.817790,7.554846,6.068892,-6.491229,-0.305613,-6.846179,4.341734,0.536893,0.276142,2.046903,5.452051,8.126397,-8.349372,-2.227765,-0.819951,-7.085333,8.705508,-5.627224,-6.259926,9.323292,7.718730,2.261539,-8.960284,6.818895,7.167352,-4.122051,-1.472715,8.762086,-1.614526,3.722987,9.049439,0.453288,3.660419,-3.822017,-3.743094,-8.157007,7.365736,-7.775046,7.942030,0.827940,1.465248,0.848962,-0.479371,-5.293998,-9.906870,5.511499,9.848467,-6.355107,-1.783467,-5.428351,4.585887,-1.066073,-9.962467,-0.905104,-3.988567,-7.432659,5.965819,-7.363647,1.694085,-4.599675,-3.687940,6.248362,-7.465558,7.722485,-1.189125,-8.286640,-1.699965,-9.029607,7.331521,-1.116870,2.588305,3.587432,8.013271,-1.003087,3.947797,-1.744038,-9.764311,8.771607,-8.403300,9.728649,0.990974,-4.355584,-6.816885,-7.197142,2.154586,7.580381,-0.102858,6.927047,-2.160546,-8.061380,6.717096,-9.266760,-3.826647,-5.473866,-6.546672,-5.698985,8.631268,1.137182,4.493703,-5.418262,5.754773,1.676697,-6.917693,1.367654,-9.085578,-1.504936,-7.251630,7.934781,4.854606,6.414507,8.047650,9.094635,-8.036258,-0.077137,-8.698944,-5.743402,6.574587,4.206650,2.874829,-8.234466,-3.399147,8.703796,1.411745,-5.277064,-5.167236,-6.580605,5.479048,9.404096,3.441615,5.454013,-0.577370,2.633319,-9.143699,7.591819,6.610867,1.066863,0.013952,-6.954052,-7.887038,0.094422,7.364770,-8.687574,8.170601,-9.900363,-0.832916,-3.359992,-9.242592,-7.981379,8.269988,-6.080281,0.460337,-2.183752,-3.984175,-1.709507,4.331067,2.676904,9.051478,4.181166,7.518867,8.175387,-8.761382,-4.450911,9.186356,0.290019,6.485258,6.461281,5.457155,3.267254,0.220365,-6.446914,9.804551,4.430294,-7.691689,3.190621,-2.206186,3.568205,-4.840144,6.070910,-7.466730,-6.498174,-7.365556,-8.156708,-8.690936,5.121240,8.144983,-7.976614,-6.682280,-7.743646,9.524122,-7.418738,-7.178525,-1.016027,-4.052017,4.968589,-3.365548,-3.434867,4.220367,-7.990174,-5.568158,6.962309,-4.593987,-2.716094,5.052846,2.407027,-0.157446,1.013018,5.053339,0.152238,7.313697,-7.116025,6.842960,9.808190,0.710023,-4.612834,4.827431,-9.566040,6.505096,-1.244735,7.754767,0.874171,-2.324239,-8.026061,-2.484142,5.124224,-6.059342,3.270938,-9.640840,6.749338,9.451739,6.097726,4.622823,-0.962302,-6.998110,-5.830911,-0.016379,1.084871,-7.953353,-0.483053,3.030346,-4.361144,5.207893,4.831057,-5.220464,7.962558,-8.601422,3.231944,-8.715021,3.765405,-5.014357,-8.012588,5.457770,2.257195,-7.302472,5.890608,0.518943,4.781382,9.437016,-2.487820,2.158032,2.023576,-8.539731,-9.797743,-2.831346,4.380041,7.050135,1.388981,4.386540,-8.373030,-3.945887,-1.385052,5.842318,-0.401512,-7.678850,6.416519,2.085743,-7.270021,7.339840,-5.299713,-6.315319,-3.060958,-9.477500,-5.936243,2.093060,9.181573,-7.398606,4.732755,2.129608,0.045779,4.603342,-3.778564,2.065183,-4.359552,9.106748,0.876712,2.957799,2.927879,7.933592,4.751565,-2.921049,5.930041,-6.986535,-5.206097,-4.574665,-4.698848,-6.941633,-6.640231,1.515648,-6.257240,-7.960249,-9.552862,-1.627293,9.447167,3.867539,-4.504126,4.911422,1.059342,-6.750292,3.819015,4.360499,-8.256843,-4.666000,6.114169,-4.612080,-2.508613,2.845023,-5.496706,-2.876978,-0.074265,-9.532897,8.118215,-9.283044,-9.771785,3.884112,6.462994,3.760047,-2.028188,9.985754,5.204970,-8.401872,-3.667367,-8.059561,1.578159,-2.055349,-0.153640,-8.576038,-5.941200,-1.206906,7.335085,-9.202069,-0.655021,8.490164,-1.298273,5.079306,-3.845828,5.003924,1.672032,3.498411,8.248851,-9.955126,-3.901419,9.851137,4.443881,9.766242,9.578189,-2.833235,2.591238,6.700289,-6.030808,2.869206,-0.170711,9.660093,-4.967800,-9.453240,-2.417365,-1.339538,4.105218,3.444826,8.711119,9.317323,-6.443842,4.484433,7.436561,9.124343,0.702469,-2.748079,-4.755833,2.261101,-8.754389,-7.274832,4.560662,-6.591766,-1.359223,9.110060,-2.101719,2.774721,-7.767792,7.655217,8.476670,4.138952,8.075359,-1.949302,6.085012,4.164697,3.680674,-4.073735,-0.553797,8.348108,-3.908230,-9.968471,7.414644,-6.382966,-7.121173,-1.104726,-2.277720,-3.099323,3.297318,2.406491,8.885622,2.043571,-9.619934,8.786101,-5.487322,-6.265306,4.568926,8.352123,-5.818839,5.123960,9.536811,-2.911799,1.924210,-0.718374,5.570779,-3.489127], dtype = "float64")#candidate|11663|(1200,)|const|float64
const_11664 = relay.const([9,-3,-1,-4,1,-5,5,7,-8,-6,-9,-5,-2,2,-5,2,-6,2,3,8,-8,-2,8,7,-2,1,5,-2,-6,-9,-7,4,5,1,-4,3,4,4,-7,-8,-5,10,-8,7,9,6,4,-9,5,-8,-1,-2,-6,-6,1,-2,4,6,-8,-7,-8,5,10,10,4,-8,-9,-9,-9,10,1,-6,-7,9,7,2,-9,-7,1,-8,-7,1,7,3,-4,-3,4,-2,-4,-4,-8,-6,3,8,3,10,-10,-6,-10,-2,9,-1,-7,-5,3,1,8,-8,3,7,-10,5,-8,9,-9,2,8,-2,4,5,-7,-9,-6,-5,3,-6,-9,-6,-2,-4,-8,1,-8,1,8,-1,4,9,-9,8,8,-6,7,-5,9,-1,4,10,-3,-5,-7,-6,-6,-9,-1,6,3,8,6,-10,-3,-9,-1,10,-10,-4,9,5,7,10,-5,1,2,9,-5,2,-7,6,2,1,2,8,-7,9,-1,6,-7,5,6,-7,2,-10,10,7,5,5,-5,-9,8,-6,6,4,-9,-1,2,10,7,2,-8,-9,-1,8,-7,-6,-4,-3,-8,-2,-5,-4,10,10,-5,-5,3,6,10,8,1,-2,10,-5,-4,7,-1,4,-6,1,7,4,3,6,4,-1,-9,1,-10,-10,-5,-4,10,10,-4,-5,8,-3,-9,-4,-2,-7,-10,4,7,6,3,-6,8,8,6,5,5,3,-8,7,2,2,-4,-3,2,-3,-7,-7,5,-9,9,5,3,-7,6,10,10,9,-10,-5,10,-7,-6,-6,-8,-2,-10,-2,-6,5,-3,-8,-8,-6,-1,-3,10,-10,4,9,-2,10,9,-6,-9,7,-7,-4,3,-5,5,-5,-6,3,-4,2,5,-9,-4,-1,5,6,2,7,3,10,-8,5,4,3,-10,4,-9,-2,-6,-7,-1,-3,4,-8,1,-7,5,-2,7,4,2,-7,-1,-3,3,9,2,7,-3,-5,3,3,1,6,3,-7,8,-6,-4,5,9,-9,6,-7,1,3,-3,1,-4,-3,-6,3,-6,-4,-10,-6,-3,-9,1,9,-7,5,9,-3,-10,1,7,-10,3,-3,-3,1,6,-6,-4,-10,-7,3,10,10,-2,-5,-3,4,-1,10,-8,1,-8,2,1,-5,6,6,-3,5,7,6,5,7,-9,-9,5,2,6,-7,3,-7,1,-4,-2,-2,6,-9,2,-8,-3,9,-6,3,-2,-1,6,3,-5,-2,5,-6,-3,-4,4,-5,1,-7,4,1,4,-10,-1,-6,1,3,-3,9,-5,3,6,-6,-4,4,-5,-4,6,-7,-9,3,-2,-6,-5,-3,7,-10,7,-10,1,9,-8,4,8,-2,6,-7,-2,-5,7,9,-5,-6,7,3,9,-3,-6,-2,-10,-1,10,7,10,-10,2,-2,-10,-1,-6,4,-8,-2,-6,9,9,-4,-6,2,3,-3,-1,3,-5,8,-9,-5,-1,-9,3,5,-6,10,10,-9,4,-7,9,6,-4,-3,9,8,-9,7,5,-4,8,4,-8,10,-7,8,-9,-9,-9,6,4,-7,10,-5,-5,7,-4,3,6,-3,2,-8,-6,-6,9,4,-5,-6,-5,2,-9,5,-10,5,-2,8,2,5,-2,4,2,-7,-8,-3,-4,-5,4,6,8,9,-4,4,-2,3,-1,-5,4,9,5,-9,7,-3,3,4,-5,-9,-1,-2,-3,8,3,-6,-5,10,-7,10,2,4,5,7,10,-6,1,5,-4,-6,6,5,-7,3,4,7,-9,1,8,3,-4,-10,-10,6,5,2,-4,-3,1,-4,-1,3,3,-3,2,10,8,10,4,-3,-10,10,-1,-6,9,9,4,-10,-6,9,-3,-3,-10,9,2,10,-7,9,-3,10,6,4,1,-8,-10,-4,-7,-4,-3,10,-4,-9,-3,9,-3,10,10,9,9,-8,-4,2,1,-10,-8,10,-1,5,7,-9,-4,-8,-2,-4,4,-10,6,10,7,-6,8,-8,-6,2,8,-2,2,-5,-8,-7,-4,-1,-8,-2,10,-1,3,-9,4,-10,5,-5,5,1,-10,8,-7,6,9,-2,3,7,-5,-3,-10,-1,7,3,-7,-7,-5,3,-1,7,5,9,3,4,-4,6,1,10,5,-4,-8,-1,6,-4,1,9,1,7,-5,9,-9,-5,2,2,7,-10,-7,-7,-5,1,2,-5,7,-4,-3,2,-10,4,-2,-1,-2,-5,4,-1,-5,-4,-2,10,10,-2,1,-5,-2,-2,5,3,-6,6,2,-8,2,6,2,-3,-1,3,10,-2,-7,7,10,9,10,-6,5,-1,-8,10,2,10,10,-3,3,5,10,10,-3,5,-4,-8,-5,-5,6,2,-9,-9,-8,-1,10,1,-9,-1,9,6,7,4,2,6,7,6,-2,6,1,-3,5,-2,-4,-7,-9,10,-8,9,-6,-10,4,-8,10,6,-3,-2,-4,5,9,3,-6,5,9,-5,-10,-7,-8,-1,-1,2,8,4,-10,10,-10,7,-7,-9,-8,-1,-9,3,5,8,10,4,3,10,7,-3,4,-5,2,-7,-10,9,1,7,-5,-4,4,-7,-5,10,-8,3,3,-2,3,5,2,-1,5,8,2,7,1,-4,-10,10,-9,1,-10,7,6,7,6,-10,-7,-1,4,6,3,-2,8,4,-5,-9,7,10,-8,1,6,-2,-2,3,-4,-1,-3,-3,-5,6,9,-8,-3,-10,-7,4,-4,8,1,2,-2,-4,6,-6,2,2,9,-8,10,3,10,-1,-4,-10,10,-2,-9,-7,-4,7,-5,9,-10,-6,6,-8,-5,-3,-7,5,9,10,-4,2,-2,-3,-7,-2,-1,7,-8,-6,-3,-3,3,8,3,-7,-8,4,5,6,-2,-1,7,-10,3,7,4,6,5,-7,-3,5,3,-1,9,-4,-6,-1,3,7,7,1,3,9,1,-10,2,8,-7,8,8,6,-7,8,-10,5,8,-1,3,-3,-7,9,-8,-7,-5,10,6,-9,5,-2,-10,-4,-3,3,4,10,-1,-1,7,-6,10,8,-4,-9,-2,-5,10,-3,4,-8,-6,-2,-9,-5,-8,9,-7,-5,3,9,7,-8,-5,1,-10,10,7,-10,4,3,6,-3,8,-3,4,-6,8,-9,6,-2,8,2,-5,-4,-10,2,-10,7,3,-10,-4,9,2,-4,-7,-7,-10,4,3,-4,-6,9,1,5,7,-10,-2,2,-6,-4,-3,-10,2,-6,-2,8,-7,4,-4,-2,4,2,3,-10,10,-4,5,-6,7,-1,-4,-9,-7,-9,-1,2,6,-1,-9,8,5,4,5,6,-4,3,10,-9,4,-8,2,10,5,7,-2,-5,8,-8,3,-6,-5,-5,10,9,-5,-9,-8,-4,-2,-9,7,-3,5,-9,7,5,6,-4,5,10,-10,-6,-2,1,1,-8,4,-1,-3,9,-6,10,4,8,-7,9,1,-6,-6,-7,-7,-3,-4,-1,-7,-5,-5,-4,-8,10,3,3,-7,-7,9,9,-6,-8,1,9,2,-10,10,-7,6,-4,-9,3,9,10,-3,-4,3,1,-3,-9,-6,-1,-3,-7,-6,-10,-9,10,2,-7,-10,5,-5,7,-9,-5,7,3,4,1,-10,-4,3,-8,7,9,8,-1,2,-3,8,8,-3,7,9,-7,8,-10,9,-5,5,4,-10,6,-4,-5,-4,8,-1,5,3,-1,-7,-4,-10,3,-5,-9,-3,-10,-2,9,-5,-5,4,-8,-4,-9,-1,7,2,-7,8,-5,-10,10,-8,-10,-8,1,7,-8,-2,1,-10,5,2,-8,-7,-3,-7,-9,-2,10,-5,1,-2,-2,5,-10,-4,6,6,-6,6,1,2,8,10,1,1,-9,10,9,-9,-10,-1,-8,-10,-3,-6,2,4,-10,-10,-4,-5,-3,-8,-2,-1,-9,9,-1,-4,7,-9,-7,-1,-9,-10,-3,8,1,8,1,4,-2,-9,-1,-9,2,9,1,8,2,-5,-4,1,-10,-9,-8,3,7,5,5,-8,10,-8,-9,2,-6,-6,-1,6,-6,4,-7,6,-9,1,2,10,-9,4,-7,-9,3,-3,-4,6,1,6,9,1,-10,1,-4,-6,1,8,4,1,5,-2,1,9,-1,2,-6,5,7,-7,-9,1,3,-8,-9,4,2,-4,-5,-9,-9,-4,3,-10,9,1,-2,-8,2,-10,6,8,10,-5,9,3,4,-3,-9,9,-2,-6,1,-7,-9,-7,-3,-4,-8,-9,-2,5,10,-3,2,-6,2,-9,5,7,5,2,-8,-2,-7,3,3,-5,5,3,2,2,-3,-7,8,-4,-8,2,5,4,7,1,-5,-5,6,10,7,-10,-4,1,-10,7,-3,6,5,10,-5,-3,9,3,-6,-3,-6,5,9,1,1,9,-1,2,3,9,4,10,-8,9,5,-6,5,10,7,5,-3,2,9,9,7,-2,8,4,-5,1,-5,3,-10,3,-6,5,-3,3,-10], dtype = "uint16")#candidate|11664|(1680,)|const|uint16
call_11662 = relay.TupleGetItem(func_9744_call(relay.reshape(const_11663.astype('float64'), [60, 20]), relay.reshape(call_11660.astype('float32'), [27,]), relay.reshape(const_11664.astype('uint16'), [1680,]), ), 13)
call_11665 = relay.TupleGetItem(func_9748_call(relay.reshape(const_11663.astype('float64'), [60, 20]), relay.reshape(call_11660.astype('float32'), [27,]), relay.reshape(const_11664.astype('uint16'), [1680,]), ), 13)
bop_11675 = relay.mod(const_11664.astype('float32'), call_11660.astype('float32')) # shape=(9, 3, 1680)
bop_11678 = relay.mod(const_11664.astype('float32'), call_11661.astype('float32')) # shape=(9, 3, 1680)
output = relay.Tuple([call_11662,const_11663,bop_11675,])
output2 = relay.Tuple([call_11665,const_11663,bop_11678,])
func_11682 = relay.Function([], output)
mod['func_11682'] = func_11682
mod = relay.transform.InferType()(mod)
output = func_11682()
func_11683 = relay.Function([], output)
mutated_mod['func_11683'] = func_11683
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11798 = relay.const([[[9,2,6],[6,7,7],[10,10,8],[-1,-9,4],[-2,-9,5],[6,9,-2],[8,-4,-7],[-1,-6,-8],[-10,-1,-2],[2,-3,-10]],[[5,4,4],[9,-3,8],[-2,1,-1],[-2,-10,9],[8,-7,10],[-1,5,-9],[1,-2,-10],[8,-1,-10],[8,3,-5],[-9,2,7]],[[-5,-9,8],[-9,7,-5],[2,-9,-2],[3,-2,-7],[7,-3,-4],[-2,-1,-9],[-2,-7,-10],[8,-8,4],[7,-8,-6],[-6,-3,-3]],[[-9,7,-10],[10,7,-3],[-2,10,7],[7,-5,-2],[2,-3,9],[1,5,-10],[4,-6,-9],[-9,-9,10],[5,1,4],[9,3,10]],[[-2,-10,9],[-1,-1,-6],[-8,-3,4],[-5,1,-8],[-1,-3,-3],[-4,6,-1],[5,-7,-8],[7,8,3],[3,2,5],[-3,9,9]],[[-8,4,-9],[10,6,10],[-2,2,-7],[1,-4,-6],[-3,3,4],[3,-7,8],[3,-9,5],[4,6,-7],[-10,5,-3],[3,7,-9]],[[8,-4,10],[-10,-8,-3],[8,-10,5],[7,8,-1],[10,-9,10],[9,2,4],[5,-7,2],[-8,9,-5],[7,-2,-4],[8,-7,-3]],[[6,4,7],[-2,-1,-7],[-10,3,7],[6,10,1],[-8,-7,7],[-1,-6,-3],[-4,-7,-5],[-10,-3,8],[3,-4,-9],[4,-3,4]],[[3,-2,-2],[-3,-9,3],[-7,3,-8],[-10,3,1],[-6,-1,7],[8,3,-2],[7,1,-8],[-2,-7,-6],[5,3,9],[-2,-10,5]],[[-10,-9,5],[8,-7,-7],[-1,-1,-5],[-3,-3,10],[10,-7,7],[-8,-7,2],[10,-3,6],[3,3,8],[-9,10,-7],[3,4,-10]],[[4,-10,8],[-2,-1,-5],[-8,-6,10],[-1,-7,2],[3,5,-7],[-10,4,-9],[-5,9,7],[3,-4,-6],[-7,5,10],[-1,-5,2]],[[-1,3,6],[8,-5,5],[2,-7,1],[1,4,3],[5,7,-10],[4,-3,7],[-10,-9,1],[-7,6,-9],[9,6,-10],[-7,2,-7]],[[-5,4,-9],[-7,5,2],[-4,8,2],[6,9,-5],[2,4,-8],[-8,3,10],[2,-10,5],[-2,-10,-8],[8,-6,-7],[-6,4,3]],[[-10,-2,-5],[-6,2,-6],[8,8,6],[4,10,-3],[-2,-8,-6],[8,-3,10],[5,-5,-1],[-3,-8,-1],[-7,-10,-7],[-5,-9,-5]]], dtype = "uint64")#candidate|11798|(14, 10, 3)|const|uint64
var_11799 = relay.var("var_11799", dtype = "uint64", shape = (14, 10, 3))#candidate|11799|(14, 10, 3)|var|uint64
bop_11800 = relay.left_shift(const_11798.astype('uint64'), relay.reshape(var_11799.astype('uint64'), relay.shape_of(const_11798))) # shape=(14, 10, 3)
bop_11803 = relay.divide(var_11799.astype('float32'), relay.reshape(bop_11800.astype('float32'), relay.shape_of(var_11799))) # shape=(14, 10, 3)
output = bop_11803
output2 = bop_11803
func_11808 = relay.Function([var_11799,], output)
mod['func_11808'] = func_11808
mod = relay.transform.InferType()(mod)
mutated_mod['func_11808'] = func_11808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11809 = relay.var("var_11809", dtype = "uint64", shape = (14, 10, 3))#candidate|11809|(14, 10, 3)|var|uint64
func_11808_call = mutated_mod.get_global_var('func_11808')
call_11810 = func_11808_call(var_11809)
output = call_11810
func_11811 = relay.Function([var_11809], output)
mutated_mod['func_11811'] = func_11811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6675_call = mod.get_global_var('func_6675')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_11974 = relay.TupleGetItem(func_6675_call(), 0)
call_11975 = relay.TupleGetItem(func_6677_call(), 0)
func_1977_call = mod.get_global_var('func_1977')
func_1980_call = mutated_mod.get_global_var('func_1980')
const_11986 = relay.const([-0.711229,-6.831499,-1.771706,0.737174,-0.754894,4.784584,2.542747,-6.822398,-8.321234,2.638052,-9.488203,7.490749,7.134147,-4.581101,4.738793,-8.968088,5.846214,-8.717460,7.762705,-5.478778,2.584744,2.277145,-9.235523,4.537550,-6.785939,6.280597,-6.892460,1.286192,8.709804,-9.361219,1.369658,1.593947,-4.917493,7.472511,8.987632,9.817801,9.835393,7.967107,-4.895622,-2.395693,7.329556,-9.354708,6.543919,-9.376487,3.349506,5.364321,7.792887,0.244973,6.880548,9.446306,1.351278,4.100684,9.876924,-3.001101,-7.421058,-5.262553,-0.822542,8.073264,-2.277074,7.542601,2.185436,2.912939,5.427358,-6.034196,2.749168,3.611888,-3.929865,0.933400,-8.874375,0.850656,-5.884769,-7.173634,-0.612446,-6.332966,2.839888,-5.265666,4.965519,5.097728,9.006610,7.293303,1.007385,8.906632,3.298863,5.276944,-0.982820,-8.806266,6.710242,9.474490,3.022394,-5.723731,6.639221,5.438557,-0.265602,1.340635,-3.164054,-8.349709,-5.639140,5.814584,-9.587894,3.325634,0.037044,-6.707561,-6.444227,8.313150,7.933719,6.071818,-7.346577,9.692066,3.689956,-1.335640,7.424328,-3.990832,-8.638508,-1.330402,-5.048505,8.012876,7.701265,-7.972755,-9.019345,7.644804,-5.790453,-1.226807,5.161947,8.395461,8.411213,-7.144375,7.456369,-1.296112,-0.255254,-3.957606,-5.784327,3.206848,5.661265,1.264041,1.397487,-2.358798,8.537801,-2.116112,-2.787178,-7.327971,-8.537930,5.482124,9.038290,5.707579,-7.088616,-9.191915,-7.408569,-8.958072,-2.253662,2.133934,5.608707,2.758734,-9.869133,6.597606,0.190416,-5.457473,2.108941,3.369799,8.222105,-0.318927,7.807825,-8.386609,-2.619530,5.388715,1.007444,-8.068591,-5.260163,5.660340,-6.728895,-1.946817,-7.084079,5.469192,-5.940761,-1.192740,4.947448,6.744140,-0.072709,-7.444587,-6.046303,0.161210,-6.940324,-0.708249,6.315850,-0.641663,6.000012,1.838834,2.682210,0.976113,-7.254439,-5.810218,-9.640567,-5.352949,9.881171,-9.097137,-5.825017,1.909512,0.658703,-4.509109,-3.189612,-3.118920,1.073229,7.689066,-7.374392,-6.026278,7.512664,8.643416,-3.256779,-2.556273,-6.742076,0.067768,-3.481426,-2.233808,6.239187,-0.146290,0.814507,2.973206,-8.186078,3.812988,9.086596,4.609931,-7.552407,-9.821779,-4.524114,4.907675,5.327605,-2.249959,4.154393,-3.710002,1.451637,-3.291269,8.895004,7.670386,7.044883,9.608492,-8.295968,2.423210,7.369213,4.163959,-5.910450,-9.617187,9.944531,5.955803,5.247549,5.946208,-4.889866,3.548553,5.568148,5.794503,-3.962987,7.775336,-4.261122,9.106859,7.770245,6.648131,9.388346,7.706173,-3.905208,-0.417505,-5.108773,-8.272443,2.007142,8.673535,-1.950972,7.811092,2.050492,8.929929,5.599855,8.100804,1.637523,-8.257078,-0.065070,-0.895532,-9.052752,8.290296,-9.005842,9.594607,8.910146,3.084906,-1.519670,-3.866367], dtype = "float64")#candidate|11986|(280,)|const|float64
const_11987 = relay.const([2.068261,3.176808,0.076038,5.475997,-8.066301,3.268469,-2.509700,8.765813,-2.366602,2.748513,5.758447,-2.266355,5.554404,0.335807,-8.404533,-5.799679,1.323601,3.111787,6.057901,7.813743,-2.528745,1.003259,8.710059,9.192866,3.992298,4.481418,8.038210,-2.194326,8.710611,-8.770108,-6.523912,6.119892,-5.690988,8.334314,1.998324,1.627788,2.455975,5.049690,-6.399703,-6.608224,2.105397,-1.453503,5.160202,0.998150,6.589942,9.459065,-7.240011,0.189897,2.560682,6.978545,6.012337,-7.657307,5.539683,2.984887,-3.599207,0.405824,-1.281747,7.951962,5.995650,-0.280592,-2.155550,-1.106528,-0.699506,4.031139,-5.144829,-4.145786,-0.129063,-0.147275,-6.766337,8.679895,-8.707262,-1.202411,-5.171024,-8.886145,1.261428,-8.001892,-0.110084,-6.348117,5.372406,-4.716149,-0.829335,2.931143,6.144635,-6.788900,-0.257999,9.783486,8.365274,5.202952,0.601204,3.501133,-5.257834,-6.545498,-3.474565,6.041353,-5.728185,-4.005574,-9.211814,3.433677,3.078852,-9.909500,6.281544,-0.645701,7.740957,4.384799,-2.142169,2.921342,-6.993776,1.540689,4.462834,-5.633590,1.686622,-6.746497,8.784968,5.914159,-5.693182,-9.563727,4.319269,-5.326883,-7.633571,7.758410,-1.845001,3.551341,-1.483149,8.243577,8.243896,-6.191353,-6.727458,-6.455579,-8.423205,7.684950,5.922157,6.775281,-5.694258,-7.293932,8.681884,5.307461,-2.292286,-5.122097,-6.647344,-9.981602,-7.875368,-4.080165,-2.701444,-7.684754,-2.612189,0.715359,5.036033,5.170776,-4.535832,-1.510108,3.043393,5.784395,-1.171100,6.517716,1.615542,-8.411782,-9.508054,0.174269,2.292158,0.763127,9.500584,-4.689804,9.285922,-5.095639,9.163968,2.929309,0.293729,-5.484056,6.101482,-4.310672,-2.764931,-1.292897,5.808076,6.923111,2.490398,-2.680380,7.885027,0.421194,-8.942713,-5.809207,-5.220024,0.049054,-7.795360,1.319343,7.374477,-8.179596,-0.994847,-0.749988,-7.251213,-8.232135,-1.697030,-5.414838,4.491800,9.128943,-0.266425,4.855648,8.884278,-4.259691,7.677908,8.712935,4.984574,-0.823143,-7.974159,2.136415,-3.494553,-4.192198,-9.764657,-9.285959,-9.971534,-9.286824,3.610317,2.805665,-0.576747,-7.014154,2.862294,-2.909346,5.954663,-7.197198,9.872701,2.757361,-2.509333,-9.312887,-4.971832,-7.001852,-8.104872,4.606760,7.893200,7.387797,-3.923462,5.756122,2.265303,-1.824265,-5.812737,6.948342,-2.272286,4.551060,-2.543378,-0.029166,-2.740191,-6.239805,3.827076,-9.261438,-3.303689,-8.535183,4.448725,7.591666,1.435368,0.223994,-0.294874,0.152477,4.334010,2.019381,-7.896596,0.359112,7.561737,-3.080715,8.431230,8.627811,-8.640254,1.920150,1.399051,-8.824674,-7.960179,-2.873063,-2.655587,-0.563928,-0.393641,-1.309341,3.755136,5.123573,9.458392,9.844267,-5.828954,-8.334619,-2.813398,-3.825828,-9.532204,-3.754148,-3.429895,-0.111254,-6.262768,4.215250,-5.055345,4.933197,6.081668,-5.389165,-3.831807,7.905717,-9.900496,6.453266,0.069912,-2.328718,0.219003,9.226739,3.104287,-9.434218,-4.900052,-3.328411,3.797260,-4.609921,-4.966250,3.114377,-8.976824,0.450476,0.389198,8.851350,-5.624670,-6.938470,-9.568311,-0.008452,1.551059,2.997461,-0.882451,1.650020,6.637289,-6.892671,-3.794288,6.661666,-0.662517,-4.642555,2.679037,9.421101,8.997945,3.074952,5.634411,-3.616301,4.146295,-1.470051,4.156021,7.336678,4.346888,6.289061,-6.294138,-8.910887,9.213246,-6.388737,-1.943137,1.945806,3.776200,5.433792,-5.502794,-0.502023,9.912605,2.921816,-7.831319,0.778039,-2.320870,0.661079,2.994770,8.895988,-6.047028,-3.973795,9.413883,2.337344,-8.704699,6.532303,-6.557287,-3.361943,-7.675487,-5.338729,6.501924,-7.349128,-2.835524,-8.010357,3.437134,8.087742,4.586879,-4.887003,2.956620,6.220925,-7.978990,-3.854045,-5.301150,-5.645870,-9.687969,7.520549,0.419827,2.969259,-4.295198,1.754966,1.471765,8.752308,-2.105772,-1.878417,1.190211,-6.557660,-4.468363,-1.515526,4.010871,-5.432137,-0.070106,8.144522,1.630615,2.451446,-6.557669,-2.329016,3.677336,-1.367469,0.583646,9.909586,7.012188,0.351984,-4.472411,-3.774479,-5.651938,1.250408,3.500795,-7.280383,9.083474,-5.330350,6.535502,-2.183101,-7.202656,-3.798783,9.683116,8.154358,1.272955,-5.306020,-2.621080,-5.946191,5.997680,8.243867,-5.011185,-1.385103,-1.180155,-2.782313,4.120725,-6.781074,1.995530,6.481045,3.352206,5.508057,0.846334,-5.227402,1.493036,7.973210,8.843746,9.672486,-9.145024,9.472482,-6.161264,-8.437777,-9.143866,2.652765,-4.036042,-0.181998,8.751753,-5.282420,-8.417149,7.883922,9.322532,-7.347177,8.602139,4.051043,7.545187,-4.094766,-4.431670,4.776325,-3.090219,-4.335149,-0.607981,-5.980316,7.336802,-4.219181,1.063582,1.986773,-7.809613,2.128922,2.262548,-8.720352,-5.350766,-2.417019,2.189914,0.602799,-2.308068,-1.366519,8.689493,5.597231,-9.280394,-6.285338,4.957479,-7.510142,8.296747,5.744147,-8.638181,-6.102940,8.952845,4.637076,-9.555481,-4.784363,4.269671,1.063659,6.549151,9.190936,9.659554,7.954688,4.875177,-1.241127,-7.257354,8.958098,5.601325,8.527834,-2.811415,-9.464005,9.789562,2.803105,2.022481,2.713022,7.241741,-3.787767,-8.287143,4.590302,-3.360460,8.922072,-1.864495,9.776726,-9.671186,-6.878878,-9.826798,5.372562,9.552994,-6.961311,-8.664129,5.157399,-6.009523,-6.615910,6.145873,-1.138671,9.567504,-4.352563,-0.098262,-3.164716,-2.578085,2.416464,4.212854,6.486753,0.551359,0.695171,1.842110,-4.034342,7.432786,0.798114,-2.064974,-8.412244,1.866168,4.357953,-2.293431,-9.467896,-8.248102,0.208224,-9.716257,-0.343733,-3.408783,7.407911,-8.932656,1.149709,-0.230247,7.199050,-2.454399,9.084026,-0.902720,6.734553,-1.750913,-8.738148,4.977840,-4.627610,-6.687967,-4.341600,-3.394582,-3.615547,4.810952,-8.706065,-0.651795,-8.992428,7.547924,-6.011862,1.517755,3.781329,6.121252,-1.848919,2.659850,7.641954,-3.091046,0.262083,9.449683,8.572810,8.069950,2.780598,5.530320,5.818051,4.254804,1.343845,6.481375,-0.455906,-2.109101,-8.417576,2.940791,3.421537,5.938151,-4.150375,-7.744549,0.683484,-5.465816,-6.929500,-8.311334,-2.303749,6.165872,-5.330378,-1.496774,-4.673843,-7.149207,8.252499,-0.456529,7.728021,0.389479,-5.283764,2.849566,7.506057,-9.436896,-1.409620,6.019453,-8.907835,-6.062755,-3.417639,6.687209,3.837670,8.446891,0.153347,3.896946,8.596287,4.522919,-4.213322,3.268240,-0.601915,5.540936,-5.707000,8.918265,-1.137967,-8.693939,4.029292,9.297512,1.379911,4.337243,-8.809216,4.648224,4.651427,9.413878,6.621046,7.417398,7.304486,-7.156034,-5.159699,-5.725682,5.534595,4.930158,2.722743,8.555434,3.625845,2.301690,8.731874,1.559400,1.479735,8.977271,7.959460,-1.441174,6.207797,-4.349389,6.973175,-6.694743,9.909743,2.448637,-3.113835,6.623963,2.818779,5.603689,4.974161,9.613730,-6.665221,-0.757990,1.585962,-1.681373,2.731537,-4.195066,3.279643,-4.889882,-6.247018,9.725563,-3.391849,-0.879218,-2.105125,3.174938,-0.496002,-3.234108,1.084839,-0.768958,-0.567143,1.980930,-3.061250,-1.585849,7.274354,-3.406134,-2.137844,-0.355568,7.959575,-0.478361,2.581581,3.116062,-9.657421,-3.853481,-2.684306,-9.854251,7.356968,5.825241,-4.798749,3.498659,-8.120083,8.635213,-5.053603,6.402994,7.648514,3.823612,8.566817,-0.823776,-3.453838,6.772110,-8.077031,6.000683,-4.494577,5.607968,-9.984603,-2.418675,-1.516572,3.965811,1.434385,-0.391153,-3.840672,8.704946,7.899406,7.503423,-8.525739,-2.183809,2.331945,-4.056825,-1.964845,-7.203790,9.200193,1.047919,-8.545955,-6.222082,-8.607251,-4.037041,-5.383986,-2.415054,-5.363066,6.462062,2.951066,4.891657,-7.375553,-4.382180,9.756712,8.553849,1.061183,-9.167846,-2.491610,7.416165,-5.531286,1.693884,-1.157553,-2.083520,-6.431898,0.440899,5.233719,-7.836597,6.256116,4.017254,1.652714,2.935892,6.807210,-4.396547,-2.267522,-0.593708,-4.442151,4.238974,-8.163716,3.763842,0.066423,-0.147315,0.768882,-5.183168,7.064422,3.685725,2.063220,5.688678,-1.349964,-5.949176,5.144238,8.540236,-6.133432,-9.990387,-9.501224,6.804725,6.764041,6.169811,-8.040138,8.952280,4.302919,-7.913801,8.799287,9.894738,-3.192734,-2.534923,1.628172,8.041194,-2.374752,-4.471477,7.709608,-3.572216,4.450909,8.787504,-9.201724,0.296842,6.652178,-8.334252,7.385298,-3.338050,9.996597,4.040583,2.368399,-9.454768,3.783351,-8.412271,9.734724,7.903180,-6.080574,-0.193304,9.450548,-6.415571,-0.706460,6.960053,6.447965,5.156520,-8.237446,4.051298,7.336478,8.757296,-1.814467,4.343240,-9.371610,-5.638218,3.335754,5.276811,-1.811478,8.387857,-8.922514,-4.003611,-8.413204,-3.815432,-6.821727,-0.961610,-5.903363,-9.696212,-3.086019,-7.668575,-9.878344,7.593141,9.123535,-4.189502,3.530553,-2.211434,-7.518799,4.306961,-9.781854,1.855698,1.787594,-9.854511,9.843672,-9.637265,-7.859161,2.758035,1.788297,-6.214461,6.177860,-7.591266,-9.352714,9.857066,6.412046,-0.461186,-8.748945,-4.547502,9.501141,4.734335,-7.392339,-1.355266,-7.422504,8.754691,0.044069,3.437746,7.626486,2.251401,-7.484159,-1.387984,2.571278,-2.373081,2.162575,5.187257,9.569042,7.023265,-3.489063,2.645508,0.238970,-2.275559,-6.213172,-3.662565,5.735304,-9.712679,-3.378363,8.756173,9.053323,1.842172,-5.328260,3.954424,-2.342354,4.050332,7.816652,1.278839,-2.826672,1.873258,7.176467,-0.312602,9.739044,7.331517,2.592471,2.410975,-3.994485,8.997669,3.429907,-4.779387,-3.744475,-2.275248,-1.651804,-6.138545,2.541621,-8.322887,6.539527,6.765224,6.727581,-9.390972,3.960119,7.956295,0.690532,-4.773501,1.480358,-5.307135,2.435662,2.638285,-0.628746,-1.578402,0.171058,9.463513,6.921285,8.571383,2.197952,9.011808,6.663744,-4.882323,-4.698615,6.652389,6.130662], dtype = "float64")#candidate|11987|(968,)|const|float64
call_11985 = relay.TupleGetItem(func_1977_call(relay.reshape(const_11986.astype('float64'), [8, 7, 5]), relay.reshape(const_11987.astype('float64'), [968,]), ), 0)
call_11988 = relay.TupleGetItem(func_1980_call(relay.reshape(const_11986.astype('float64'), [8, 7, 5]), relay.reshape(const_11987.astype('float64'), [968,]), ), 0)
bop_11998 = relay.right_shift(call_11974.astype('int8'), const_11986.astype('int8')) # shape=(9, 3, 280)
bop_12001 = relay.right_shift(call_11975.astype('int8'), const_11986.astype('int8')) # shape=(9, 3, 280)
func_10766_call = mod.get_global_var('func_10766')
func_10770_call = mutated_mod.get_global_var('func_10770')
var_12007 = relay.var("var_12007", dtype = "int32", shape = ())#candidate|12007|()|var|int32
call_12006 = relay.TupleGetItem(func_10766_call(relay.reshape(const_11986.astype('uint64'), [280,]), relay.reshape(var_12007.astype('int32'), []), ), 3)
call_12008 = relay.TupleGetItem(func_10770_call(relay.reshape(const_11986.astype('uint64'), [280,]), relay.reshape(var_12007.astype('int32'), []), ), 3)
uop_12018 = relay.atan(const_11987.astype('float64')) # shape=(968,)
func_888_call = mod.get_global_var('func_888')
func_891_call = mutated_mod.get_global_var('func_891')
const_12021 = relay.const([2.637900,1.721358,0.795671,7.601408,-7.113020,-7.862102,0.924730,3.858999,-2.717018,-7.076607,-8.373321,-5.842256,0.526734,7.222541,3.295973,2.065873,-7.591642,-4.963095,-6.420256,0.691400,9.646378,7.918408,6.301417,1.548489,6.579995,-2.920422,-3.838701,-0.373134,4.078360,8.237147,-8.999598,9.545047,5.994465,-0.639823,2.265758,-4.737755,-3.768818,-3.767102,3.849009,0.105553,7.965546,-9.524944,-8.603414,9.455963,8.020217,1.679563,-1.831302,-7.111686,-9.292531,2.847859,-0.328441,2.113508,3.747397,-9.490473,8.474249,9.893824,2.373655,-5.562729,-3.622749,1.685015,-0.891755,-7.286068,-0.484302,8.871165,2.025645,-6.198476,-8.196783,-6.706043,6.079846,-2.367565,-2.304402,-2.012545,-8.242740,-8.285012,-1.350929,-4.732651,-7.642506,1.113828,7.093681,7.044688,3.840571,-0.314243,3.715260,0.080208,4.959724,6.590006,-2.426052,4.310234,6.124774,1.217635,6.108771,-8.142271,-4.146671,-2.783222,-2.262885,5.502483,-1.789522,-6.487298,-9.834615,-3.349474,6.343188,-4.849856,1.021915,-5.861302,7.998702,6.808737,7.375170,-1.307519,1.435777,6.039317,-1.130428,-8.481472,-3.132097,8.224677,-7.961558,-3.429769,6.628287,9.575263,-5.103041,6.973776,-6.468434,0.414121,7.781356,7.245284,-5.369985,-5.738661,6.418321,7.861826,3.998958,8.834961,8.871457,-9.811724,-1.356148,3.618113,9.641088,-5.496640,4.704227,-5.291668,7.169430,-6.585942,-9.684493,-3.925882,8.334993,-3.106732,-1.579491,-6.104524,1.722518,2.329616,8.827975,1.267724,3.874005,-0.622227,5.848027,9.284702,-7.179306,-7.978468,6.976448,2.639725,1.997761,9.329543,8.518592,1.430461,-0.522950,-4.589183,4.948890,8.168034,8.125918,-8.535111,-3.956644,6.972367,2.075372,6.776708,-0.562186,9.855039,-7.791500,-8.685704,-2.607380,9.843540,-7.325993,-8.109359,9.396340,-9.511314,7.526917,4.877874,6.147017,0.167059,-6.786232,4.284172,4.158894,-6.290775,2.097432,9.161422,-4.796506,8.139324,-4.864760,4.639607,1.898848,-9.897723,-9.786310,-0.200064,-0.989390,-1.202993,-9.082762,6.618127,-8.986513,-5.305762,-7.059610,3.475926,-7.246420,8.300664,7.228429,-9.594677,4.775095,9.203069,-6.418527,7.221836,1.860554,7.122377,6.085152,7.690463,2.227990,8.505139,8.152102,-3.178369], dtype = "float32")#candidate|12021|(224,)|const|float32
call_12020 = relay.TupleGetItem(func_888_call(relay.reshape(const_12021.astype('float32'), [4, 8, 7])), 0)
call_12022 = relay.TupleGetItem(func_891_call(relay.reshape(const_12021.astype('float32'), [4, 8, 7])), 0)
output = relay.Tuple([call_11985,bop_11998,call_12006,var_12007,uop_12018,call_12020,const_12021,])
output2 = relay.Tuple([call_11988,bop_12001,call_12008,var_12007,uop_12018,call_12022,const_12021,])
func_12024 = relay.Function([var_12007,], output)
mod['func_12024'] = func_12024
mod = relay.transform.InferType()(mod)
var_12025 = relay.var("var_12025", dtype = "int32", shape = ())#candidate|12025|()|var|int32
output = func_12024(var_12025)
func_12026 = relay.Function([var_12025], output)
mutated_mod['func_12026'] = func_12026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8880_call = mod.get_global_var('func_8880')
func_8882_call = mutated_mod.get_global_var('func_8882')
call_12083 = func_8880_call()
call_12084 = func_8880_call()
output = call_12083
output2 = call_12084
func_12106 = relay.Function([], output)
mod['func_12106'] = func_12106
mod = relay.transform.InferType()(mod)
mutated_mod['func_12106'] = func_12106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12106_call = mutated_mod.get_global_var('func_12106')
call_12107 = func_12106_call()
output = call_12107
func_12108 = relay.Function([], output)
mutated_mod['func_12108'] = func_12108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11460_call = mod.get_global_var('func_11460')
func_11462_call = mutated_mod.get_global_var('func_11462')
call_12118 = relay.TupleGetItem(func_11460_call(), 0)
call_12119 = relay.TupleGetItem(func_11462_call(), 0)
func_7593_call = mod.get_global_var('func_7593')
func_7594_call = mutated_mod.get_global_var('func_7594')
call_12129 = relay.TupleGetItem(func_7593_call(), 0)
call_12130 = relay.TupleGetItem(func_7594_call(), 0)
func_6631_call = mod.get_global_var('func_6631')
func_6633_call = mutated_mod.get_global_var('func_6633')
var_12142 = relay.var("var_12142", dtype = "uint16", shape = (1680,))#candidate|12142|(1680,)|var|uint16
call_12141 = relay.TupleGetItem(func_6631_call(relay.reshape(var_12142.astype('uint16'), [1680,])), 2)
call_12143 = relay.TupleGetItem(func_6633_call(relay.reshape(var_12142.astype('uint16'), [1680,])), 2)
func_9878_call = mod.get_global_var('func_9878')
func_9880_call = mutated_mod.get_global_var('func_9880')
call_12145 = relay.TupleGetItem(func_9878_call(relay.reshape(call_12118.astype('float32'), [27,])), 3)
call_12146 = relay.TupleGetItem(func_9880_call(relay.reshape(call_12118.astype('float32'), [27,])), 3)
func_6631_call = mod.get_global_var('func_6631')
func_6633_call = mutated_mod.get_global_var('func_6633')
call_12153 = relay.TupleGetItem(func_6631_call(relay.reshape(var_12142.astype('uint16'), [1680,])), 0)
call_12154 = relay.TupleGetItem(func_6633_call(relay.reshape(var_12142.astype('uint16'), [1680,])), 0)
uop_12158 = relay.tan(call_12145.astype('float64')) # shape=(1, 1680)
uop_12160 = relay.tan(call_12146.astype('float64')) # shape=(1, 1680)
uop_12168 = relay.log2(uop_12158.astype('float32')) # shape=(1, 1680)
uop_12170 = relay.log2(uop_12160.astype('float32')) # shape=(1, 1680)
uop_12172 = relay.log(uop_12158.astype('float64')) # shape=(1, 1680)
uop_12174 = relay.log(uop_12160.astype('float64')) # shape=(1, 1680)
func_6700_call = mod.get_global_var('func_6700')
func_6702_call = mutated_mod.get_global_var('func_6702')
call_12176 = relay.TupleGetItem(func_6700_call(relay.reshape(uop_12158.astype('uint16'), [4, 420])), 2)
call_12177 = relay.TupleGetItem(func_6702_call(relay.reshape(uop_12158.astype('uint16'), [4, 420])), 2)
var_12181 = relay.var("var_12181", dtype = "float32", shape = (3, 1680))#candidate|12181|(3, 1680)|var|float32
bop_12182 = relay.multiply(uop_12168.astype('uint64'), var_12181.astype('uint64')) # shape=(3, 1680)
bop_12185 = relay.multiply(uop_12170.astype('uint64'), var_12181.astype('uint64')) # shape=(3, 1680)
func_11622_call = mod.get_global_var('func_11622')
func_11627_call = mutated_mod.get_global_var('func_11627')
var_12194 = relay.var("var_12194", dtype = "uint8", shape = (660,))#candidate|12194|(660,)|var|uint8
const_12195 = relay.const([True,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True], dtype = "bool")#candidate|12195|(90,)|const|bool
call_12193 = relay.TupleGetItem(func_11622_call(relay.reshape(var_12194.astype('uint8'), [12, 11, 5]), relay.reshape(var_12194.astype('uint8'), [12, 11, 5]), relay.reshape(const_12195.astype('bool'), [90,]), ), 3)
call_12196 = relay.TupleGetItem(func_11627_call(relay.reshape(var_12194.astype('uint8'), [12, 11, 5]), relay.reshape(var_12194.astype('uint8'), [12, 11, 5]), relay.reshape(const_12195.astype('bool'), [90,]), ), 3)
uop_12197 = relay.acos(uop_12168.astype('float32')) # shape=(1, 1680)
uop_12199 = relay.acos(uop_12170.astype('float32')) # shape=(1, 1680)
output = relay.Tuple([call_12118,call_12129,call_12141,var_12142,call_12153,uop_12172,call_12176,bop_12182,call_12193,var_12194,const_12195,uop_12197,])
output2 = relay.Tuple([call_12119,call_12130,call_12143,var_12142,call_12154,uop_12174,call_12177,bop_12185,call_12196,var_12194,const_12195,uop_12199,])
func_12201 = relay.Function([var_12142,var_12181,var_12194,], output)
mod['func_12201'] = func_12201
mod = relay.transform.InferType()(mod)
mutated_mod['func_12201'] = func_12201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12201_call = mutated_mod.get_global_var('func_12201')
var_12203 = relay.var("var_12203", dtype = "uint16", shape = (1680,))#candidate|12203|(1680,)|var|uint16
var_12204 = relay.var("var_12204", dtype = "float32", shape = (3, 1680))#candidate|12204|(3, 1680)|var|float32
var_12205 = relay.var("var_12205", dtype = "uint8", shape = (660,))#candidate|12205|(660,)|var|uint8
call_12202 = func_12201_call(var_12203,var_12204,var_12205,)
output = call_12202
func_12206 = relay.Function([var_12203,var_12204,var_12205,], output)
mutated_mod['func_12206'] = func_12206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6675_call = mod.get_global_var('func_6675')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_12214 = relay.TupleGetItem(func_6675_call(), 0)
call_12215 = relay.TupleGetItem(func_6677_call(), 0)
func_5223_call = mod.get_global_var('func_5223')
func_5228_call = mutated_mod.get_global_var('func_5228')
var_12219 = relay.var("var_12219", dtype = "int8", shape = (576,))#candidate|12219|(576,)|var|int8
var_12220 = relay.var("var_12220", dtype = "uint64", shape = (280,))#candidate|12220|(280,)|var|uint64
call_12218 = relay.TupleGetItem(func_5223_call(relay.reshape(var_12219.astype('int8'), [4, 12, 12]), relay.reshape(var_12219.astype('int8'), [4, 12, 12]), relay.reshape(var_12220.astype('uint64'), [280, 1]), ), 4)
call_12221 = relay.TupleGetItem(func_5228_call(relay.reshape(var_12219.astype('int8'), [4, 12, 12]), relay.reshape(var_12219.astype('int8'), [4, 12, 12]), relay.reshape(var_12220.astype('uint64'), [280, 1]), ), 4)
func_10359_call = mod.get_global_var('func_10359')
func_10360_call = mutated_mod.get_global_var('func_10360')
call_12222 = relay.TupleGetItem(func_10359_call(), 1)
call_12223 = relay.TupleGetItem(func_10360_call(), 1)
output = relay.Tuple([call_12214,call_12218,var_12219,var_12220,call_12222,])
output2 = relay.Tuple([call_12215,call_12221,var_12219,var_12220,call_12223,])
func_12230 = relay.Function([var_12219,var_12220,], output)
mod['func_12230'] = func_12230
mod = relay.transform.InferType()(mod)
var_12231 = relay.var("var_12231", dtype = "int8", shape = (576,))#candidate|12231|(576,)|var|int8
var_12232 = relay.var("var_12232", dtype = "uint64", shape = (280,))#candidate|12232|(280,)|var|uint64
output = func_12230(var_12231,var_12232,)
func_12233 = relay.Function([var_12231,var_12232,], output)
mutated_mod['func_12233'] = func_12233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5839_call = mod.get_global_var('func_5839')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_12297 = func_5839_call()
call_12298 = func_5839_call()
func_10684_call = mod.get_global_var('func_10684')
func_10686_call = mutated_mod.get_global_var('func_10686')
call_12315 = func_10684_call()
call_12316 = func_10684_call()
output = relay.Tuple([call_12297,call_12315,])
output2 = relay.Tuple([call_12298,call_12316,])
func_12341 = relay.Function([], output)
mod['func_12341'] = func_12341
mod = relay.transform.InferType()(mod)
output = func_12341()
func_12342 = relay.Function([], output)
mutated_mod['func_12342'] = func_12342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7871_call = mod.get_global_var('func_7871')
func_7873_call = mutated_mod.get_global_var('func_7873')
call_12358 = relay.TupleGetItem(func_7871_call(), 1)
call_12359 = relay.TupleGetItem(func_7873_call(), 1)
output = relay.Tuple([call_12358,])
output2 = relay.Tuple([call_12359,])
func_12365 = relay.Function([], output)
mod['func_12365'] = func_12365
mod = relay.transform.InferType()(mod)
output = func_12365()
func_12366 = relay.Function([], output)
mutated_mod['func_12366'] = func_12366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12400 = relay.var("var_12400", dtype = "float32", shape = (14, 6, 13))#candidate|12400|(14, 6, 13)|var|float32
uop_12401 = relay.exp(var_12400.astype('float32')) # shape=(14, 6, 13)
func_12201_call = mod.get_global_var('func_12201')
func_12206_call = mutated_mod.get_global_var('func_12206')
var_12404 = relay.var("var_12404", dtype = "uint16", shape = (1680,))#candidate|12404|(1680,)|var|uint16
var_12405 = relay.var("var_12405", dtype = "float32", shape = (5040,))#candidate|12405|(5040,)|var|float32
const_12406 = relay.const([[-4,9],[6,-8],[-1,4],[-1,-2],[2,-10],[-4,-7],[-5,-5],[2,2],[-10,10],[7,5],[-10,-5],[-3,-9],[4,-6],[-6,-5],[5,9],[-1,-5],[-4,-9],[1,-10],[2,-2],[-2,-4],[2,3],[2,-7],[7,-8],[9,-1],[8,-3],[-5,-2],[6,-4],[6,-5],[7,-6],[-5,7],[1,4],[1,-10],[-7,-2],[5,1],[-9,-2],[-2,-3],[4,-9],[-4,-2],[-4,-2],[2,-3],[-4,3],[-8,-1],[-9,4],[-9,-10],[8,-1],[-8,7],[9,-4],[-1,2],[-2,7],[9,-9],[-10,-10],[9,1],[9,-8],[-4,8],[4,8],[1,-5],[7,4],[-9,-2],[3,-9],[2,-10],[3,-2],[4,-4],[-4,-6],[-2,-9],[-2,-5],[-6,-1],[1,-3],[-1,7],[-2,-10],[-7,-5],[-7,-5],[1,-8],[-8,3],[1,5],[3,6],[3,-5],[-2,-9],[1,1],[6,-7],[-1,9],[9,3],[5,6],[8,-9],[7,3],[-1,10],[10,-10],[-9,-3],[-3,10],[-4,5],[-3,-7],[-5,9],[10,-1],[8,-3],[-3,3],[9,2],[10,-5],[7,6],[-3,8],[-7,9],[-10,-8],[-4,-7],[3,10],[-7,7],[4,-4],[4,-8],[2,2],[-4,-9],[-3,-3],[2,-5],[9,9],[8,5],[-8,3],[-8,-8],[9,-4],[-2,9],[3,-4],[3,10],[-3,-10],[-6,2],[-2,5],[-8,-4],[2,-1],[-10,10],[4,6],[3,9],[-6,-6],[-4,6],[5,-9],[4,-1],[-9,3],[-5,-5],[-8,6],[9,-7],[8,7],[4,-9],[-5,-4],[-2,-7],[9,4],[-2,-5],[-10,-10],[-10,-3],[-2,10],[4,-7],[-10,7],[-7,-4],[-4,-2],[-5,-5],[-10,3],[-5,6],[-7,-5],[8,7],[6,7],[-10,-10],[7,-1],[1,-7],[-2,-8],[-7,6],[3,-2],[-5,6],[-6,-5],[-3,-1],[8,-7],[7,-7],[6,-5],[2,-6],[3,3],[-8,-9],[1,1],[8,-8],[-3,5],[-9,-8],[-10,10],[8,-4],[-4,9],[5,8],[-2,3],[2,-8],[8,-6],[8,4],[1,-7],[-7,-10],[-9,5],[-8,3],[6,4],[9,5],[-5,-4],[9,8],[-1,-8],[9,1],[6,-3],[3,-8],[4,-6],[-2,-10],[-4,-10],[4,2],[5,6],[-6,2],[-5,10],[-1,-6],[10,7],[5,-9],[-4,1],[-6,-5],[-2,5],[-10,-4],[1,4],[2,-6],[3,4],[-3,-6],[-1,6],[9,10],[-2,9],[-1,-8],[7,-4],[-3,-9],[6,-2],[-6,5],[-5,-9],[-2,-6],[-6,-6],[-8,-1],[8,1],[-8,8],[6,4],[-8,3],[9,8],[3,-6],[8,7],[-8,-8],[6,10],[2,9],[-7,3],[-1,9],[-8,-9],[-2,9],[-7,-4],[5,-3],[-3,-4],[-8,4],[5,3],[4,5],[-10,3],[9,9],[-6,-3],[7,1],[-9,-7],[-9,4],[-10,1],[-8,8],[-1,9],[-2,-10],[-3,1],[-8,-2],[-9,-8],[1,4],[1,-7],[-2,-9],[7,6],[6,10],[-8,-1],[-3,-5],[-1,-3],[-5,8],[-10,4],[-2,-6],[-1,-8],[6,-8],[9,3],[4,6],[-1,10],[4,1],[-2,8],[10,-3],[-6,-9],[7,9],[1,-9],[9,10],[4,7],[9,4],[5,-7],[7,7],[1,8],[-5,3],[10,-1],[-7,1],[5,9],[-6,-7],[-4,7],[6,-5],[-9,-6],[-1,-10],[-3,3],[4,-1],[-2,4],[1,10],[-8,7],[10,-3],[-4,-3],[10,-7],[8,10],[4,10],[-10,-5],[-6,8],[-3,-1],[6,1],[-3,-6],[-2,5],[-5,-2],[6,6],[-8,9],[-9,9],[-4,4],[-4,-4],[3,-1],[5,3],[-1,-10],[8,-3],[8,-10],[10,10],[10,8],[10,3],[1,6],[-2,-7],[-5,7],[4,10],[3,10],[9,-1],[-3,5],[8,7],[-3,-7]], dtype = "uint8")#candidate|12406|(330, 2)|const|uint8
call_12403 = relay.TupleGetItem(func_12201_call(relay.reshape(var_12404.astype('uint16'), [1680,]), relay.reshape(var_12405.astype('float32'), [3, 1680]), relay.reshape(const_12406.astype('uint8'), [660,]), ), 11)
call_12407 = relay.TupleGetItem(func_12206_call(relay.reshape(var_12404.astype('uint16'), [1680,]), relay.reshape(var_12405.astype('float32'), [3, 1680]), relay.reshape(const_12406.astype('uint8'), [660,]), ), 11)
uop_12417 = relay.atan(var_12405.astype('float32')) # shape=(5040,)
uop_12423 = relay.log(uop_12417.astype('float32')) # shape=(5040,)
func_5223_call = mod.get_global_var('func_5223')
func_5228_call = mutated_mod.get_global_var('func_5228')
const_12431 = relay.const([[-6],[-7],[4],[-2],[-2],[3],[-10],[-9],[10],[-7],[-1],[3],[-3],[-7],[-3],[-3],[9],[-4],[9],[2],[-9],[-9],[10],[4],[-7],[8],[-1],[-6],[-4],[-5],[-7],[5],[-8],[1],[-7],[1],[7],[-2],[7],[6],[-10],[1],[-7],[-6],[-1],[7],[-9],[4],[-3],[7],[7],[5],[7],[3],[-5],[9],[7],[-7],[-9],[7],[-5],[-8],[9],[4],[-8],[-4],[-10],[-10],[-6],[2],[-6],[-9],[4],[-7],[-2],[-3],[-1],[3],[-4],[3],[-7],[-6],[4],[3],[-1],[-3],[7],[7],[-1],[-6],[-3],[8],[-1],[-3],[8],[-4],[3],[-4],[-6],[-8],[4],[-3],[7],[-4],[-8],[-9],[-9],[-4],[-10],[3],[5],[2],[9],[-4],[3],[-3],[7],[-7],[8],[1],[2],[-7],[-7],[-9],[-10],[-4],[4],[-2],[2],[-2],[-9],[-3],[3],[-1],[3],[-6],[-9],[4],[-4],[2],[9],[-8],[2],[6],[7],[2],[-2],[-2],[-4],[7],[4],[2],[6],[1],[1],[5],[-1],[-3],[-2],[-8],[8],[5],[-4],[-7],[2],[6],[7],[9],[-6],[-7],[-6],[-8],[-5],[10],[1],[-8],[-8],[9],[4],[10],[1],[-3],[-4],[6],[-5],[-8],[5],[-5],[-7],[10],[3],[-5],[3],[-2],[-3],[2],[-6],[4],[7],[1],[-1],[10],[3],[6],[10],[-7],[6],[-3],[7],[3],[-6],[6],[9],[-4],[-10],[-8],[-4],[-6],[-6],[8],[-2],[9],[7],[6],[-5],[-6],[5],[-3],[-1],[-3],[-5],[-1],[1],[-7],[-4],[3],[2],[-4],[1],[-4],[9],[7],[3],[-8],[-10],[5],[-4],[-4],[6],[2],[-8],[7],[-6],[-8],[-1],[5],[-4],[3],[4],[-4],[-4],[8],[7],[-3],[-5],[6],[9],[-3],[4],[-3],[-8],[4],[1],[-1],[-3],[-7],[-6],[-7],[9],[10],[8],[-9],[-7],[3],[8],[6],[-2],[-9],[-2],[-6],[-7],[-5],[2],[-8],[3],[-6],[1],[-7],[10],[2],[6],[1],[2],[1],[-10],[10],[1],[-10],[7],[-7],[7],[-3],[-9],[-9],[-2],[4],[-10],[-6],[-6],[-8],[-3],[4],[4],[-1],[6],[-5],[-9],[1],[9],[-8],[10],[-9],[-8],[-5],[-1],[1],[-1],[-9],[2],[10],[-6],[-1],[3],[5],[-10],[5],[7],[-2],[-8],[-1],[10],[-2],[-8],[-10],[9],[-8],[-2],[9],[1],[-9],[7],[10],[-7],[-8],[1],[-3],[-1],[4],[4],[-2],[1],[-7],[1],[10],[10],[-2],[3],[-2],[6],[5],[-9],[-8],[3],[-4],[5],[1],[7],[1],[-2],[9],[-10],[10],[5],[-4],[-1],[-8],[-9],[-3],[-10],[3],[-2],[-1],[10],[7],[3],[-5],[-7],[6],[4],[2],[-1],[6],[-9],[-4],[5],[-6],[2],[5],[1],[6],[-10],[-7],[-4],[10],[5],[3],[-4],[-5],[7],[4],[9],[-8],[9],[-2],[9],[-4],[-9],[-5],[-6],[-10],[7],[-6],[-2],[4],[2],[-1],[7],[-3],[7],[7],[-5],[3],[2],[6],[-5],[6],[2],[4],[2],[-5],[-5],[-9],[-8],[-1],[8],[-10],[-6],[7],[-5],[5],[-9],[-3],[-2],[-7],[5],[1],[8],[2],[-2],[2],[-10],[-5],[9],[4],[6],[3],[10],[-8],[-3],[9],[5],[-7],[9],[1],[-4],[-5],[7],[-1],[-3],[10],[6],[-5],[-1],[9],[8],[-1],[-7],[7],[2],[1],[-1],[10],[-6],[4],[-10],[7],[8],[-2],[-4],[3],[10],[-6],[4],[7],[9],[2],[2],[-10],[7],[-8],[-8],[2],[-8],[5],[7],[6],[1],[8],[-5],[-3],[-1],[-6],[9],[3],[-2],[2],[7],[-8],[-10],[7],[-10],[-7],[-4],[10],[10],[-4],[8],[-7],[-8],[2],[3],[-9],[-8],[3],[9],[-7],[2],[-4],[1],[-6],[5],[3],[1],[-10],[-10],[8]], dtype = "int8")#candidate|12431|(576, 1)|const|int8
const_12432 = relay.const([[-4,4,-7,-6,7,7,-4,-10,-4,4,-2,-4,-9,-8,10,1,-6,-1,7,2,-7,-5,-4,2,7,3,10,-4,10,4,-1,-5,-1,10,4,-6,-4,4,4,-4,-1,4,4,10,9,3,-10,-9,-5,-1,-4,1,-5,-4,10,2,6,-3,-4,-6,9,-5,10,-10,-4,3,5,3,-9,-9,-6,-2,-8,7,-10,-9,4,7,-7,-6,-7,8,-5,2,-10,4,-5,-10,-3,-9,10,3,-9,8,9,-6,5,10,4,5,-6,-10,5,-6,-9,-1,-10,-2,7,6,6,-4,-7,-2,-8,-5,-3,-7,-8,-7,7,-5,2,-9,-9,-5,-8,-7,-5,6,-3,-10,-7,-5,2,-2,-9,8,-6,10,-4,2,6,-7,-6,4,3,8,-1,-4,6,-1,-3,-6,-8,6,-3,-1,8,8,10,-5,-6,-2,-7,-1,2,-6,3,-4,10,10,-8,10,1,-2,-2,4,10,-6,-2,-8,8,-9,-7,1,-5,-1,-4,-1,-3,-7,-9,-4,7,-6,6,3,-9,5,7,7,7,-7,1,9,8,-10,5,6,1,-10,7,2,-8,-5,-3,9,10,-4,-3,-6,6,-7,-7,2,-4,-8,-8,8,5,2,-6,9,-6,-7,-3,9,-1,2,-1,8,9,-8,-4,4,2,9,-7,-5,1,-4,-7,8,1,-5,-6,-8,9,-3,-4,6,3,5,-6,-4,2,-5,-3,6,1,-4,4,-2,-10,10,2,-10,-3,-8]], dtype = "uint64")#candidate|12432|(1, 280)|const|uint64
call_12430 = relay.TupleGetItem(func_5223_call(relay.reshape(const_12431.astype('int8'), [4, 12, 12]), relay.reshape(const_12431.astype('int8'), [4, 12, 12]), relay.reshape(const_12432.astype('uint64'), [280, 1]), ), 1)
call_12433 = relay.TupleGetItem(func_5228_call(relay.reshape(const_12431.astype('int8'), [4, 12, 12]), relay.reshape(const_12431.astype('int8'), [4, 12, 12]), relay.reshape(const_12432.astype('uint64'), [280, 1]), ), 1)
bop_12436 = relay.less(uop_12423.astype('bool'), relay.reshape(uop_12417.astype('bool'), relay.shape_of(uop_12423))) # shape=(5040,)
uop_12449 = relay.asin(const_12432.astype('float64')) # shape=(1, 280)
func_7946_call = mod.get_global_var('func_7946')
func_7948_call = mutated_mod.get_global_var('func_7948')
call_12454 = relay.TupleGetItem(func_7946_call(), 0)
call_12455 = relay.TupleGetItem(func_7948_call(), 0)
bop_12459 = relay.divide(bop_12436.astype('float32'), call_12454.astype('float32')) # shape=(9, 3, 5040)
bop_12462 = relay.divide(bop_12436.astype('float32'), call_12455.astype('float32')) # shape=(9, 3, 5040)
func_11808_call = mod.get_global_var('func_11808')
func_11811_call = mutated_mod.get_global_var('func_11811')
const_12467 = relay.const([1,-7,10,-9,10,5,-7,3,4,2,6,4,-8,-10,-7,2,-8,8,-7,-2,-8,2,5,5,-9,-5,-6,-2,5,3,-2,1,-3,9,6,6,-10,1,4,-3,6,-9,-4,-7,5,-10,-2,-7,1,-5,-7,3,9,-1,2,5,9,-8,-5,3,-4,6,-5,1,7,3,6,1,9,-6,3,7,-5,6,-2,1,3,2,-8,-4,-8,1,2,-7,2,-2,-7,9,-3,-4,-6,-1,-10,-7,-5,-5,7,-6,8,7,-1,6,-7,-9,-10,7,10,4,-10,-10,3,9,3,-6,1,2,-4,9,3,-4,-3,-2,-1,-2,-9,-10,-8,-10,-4,-2,2,8,-4,9,-7,2,-8,-4,1,1,-10,2,-8,1,-9,-1,-8,-10,6,-10,4,2,6,-10,1,9,-10,1,3,4,-4,-4,-1,-3,-6,7,-4,-4,4,9,5,9,7,5,-2,4,3,-6,-4,1,-3,2,1,8,-9,-3,5,10,-3,-3,-6,-1,-7,-3,-10,-1,-7,10,8,-3,5,1,-1,-5,10,9,5,4,9,-2,-6,-9,5,-2,7,2,-3,-5,8,9,6,-3,-8,-2,6,5,7,6,-5,-9,-4,-8,5,-1,1,-10,-8,9,-10,2,-7,10,2,7,2,2,8,3,3,-8,-4,1,-3,-5,-5,9,-5,-7,-4,-8,2,-2,-2,-6,9,-9,-2,4,-3,8,-7,10,-7,2,-3,8,2,6,5,9,5,6,8,-5,-10,-1,-2,-2,9,-10,4,-6,8,-2,-5,6,9,-7,1,-8,-5,-9,-1,7,4,-10,7,-7,-9,7,-8,-4,-6,-3,-3,9,1,8,-6,-10,4,9,8,-8,4,1,-10,-10,5,3,-6,9,-10,-9,-4,7,1,-1,3,-7,7,-1,-2,5,-4,-7,-1,-6,-5,-7,6,-7,3,7,7,5,2,3,6,-3,-6,-9,-1,8,-3,-5,3,5,9,-4,-6,4,-4,5,-5,-10,-1,10,5,-5,6,-7,-1,-7,-6,1,-9,-1,-2,-2,-5,9,-3,-7,8,-7,4,-1,6,-7,8,-4,3,-1,4,-3,8,-6,-3,-9,4,3,-10,5,4,-10,-2,-3,-2,3], dtype = "uint64")#candidate|12467|(420,)|const|uint64
call_12466 = func_11808_call(relay.reshape(const_12467.astype('uint64'), [14, 10, 3]))
call_12468 = func_11808_call(relay.reshape(const_12467.astype('uint64'), [14, 10, 3]))
bop_12475 = relay.add(var_12404.astype('int64'), const_12431.astype('int64')) # shape=(576, 1680)
uop_12485 = relay.tan(uop_12423.astype('float64')) # shape=(5040,)
output = relay.Tuple([uop_12401,call_12403,const_12406,call_12430,uop_12449,bop_12459,call_12466,const_12467,bop_12475,uop_12485,])
output2 = relay.Tuple([uop_12401,call_12407,const_12406,call_12433,uop_12449,bop_12462,call_12468,const_12467,bop_12475,uop_12485,])
F = relay.Function([var_12400,var_12404,var_12405,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12400,var_12404,var_12405,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

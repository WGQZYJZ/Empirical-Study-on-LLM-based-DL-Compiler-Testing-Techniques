import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_77 = relay.var("var_77", dtype = "float32", shape = (5, 11, 3))#candidate|77|(5, 11, 3)|var|float32
const_78 = relay.const([[[0.808827,-4.554880,-8.488479],[3.405775,-8.920671,-5.115730],[-1.372480,-8.729214,-7.282580],[-4.960340,9.656024,3.817992],[0.066857,-6.852124,6.067268],[-2.782288,2.958778,3.381562],[2.334259,-5.388966,6.027478],[8.034523,5.577657,7.714821],[-0.848165,-1.240251,3.817116],[-7.161298,-2.284416,-5.865954],[-3.077174,6.400206,4.345089]],[[-4.838388,2.909107,-6.851722],[9.550759,7.668910,6.719885],[0.656990,-7.282185,-1.508592],[8.547289,-9.789985,3.835119],[6.949949,-6.067197,-7.076562],[9.002550,-8.590879,5.984626],[2.089662,-2.651841,1.172276],[2.438733,0.390256,-2.687644],[-6.140423,2.687400,9.583309],[6.750775,-4.183633,1.095316],[-0.238686,6.694624,-3.016611]],[[0.636314,-5.306068,-9.175820],[-5.799526,-2.894936,9.366276],[6.302061,-4.094845,-0.855372],[8.730769,-7.853222,0.146404],[-4.420279,-6.528620,-5.359513],[-9.850985,-4.089850,1.228421],[-5.288636,6.751581,-5.717620],[9.502177,-8.604568,-5.734819],[-7.279918,-1.512795,2.056228],[-9.445725,3.926723,-5.776017],[2.010750,-4.069631,7.475756]],[[-8.868933,9.331237,-3.417321],[-0.065722,7.755878,2.803044],[-0.634414,6.083659,-7.640032],[-2.809235,0.248512,9.050745],[-5.511050,-6.545882,-5.127009],[-7.672423,-1.610583,-8.774470],[9.630385,-0.318401,8.212874],[-2.978892,1.372649,7.571692],[9.892656,9.074499,6.212257],[-4.779450,6.589422,-7.986835],[-0.993513,7.343325,-4.642653]],[[4.598789,-3.905397,-0.870736],[1.533035,4.677779,4.182077],[-7.512769,8.071395,3.734917],[-9.536404,-3.232859,-4.339568],[7.189257,4.702600,3.485116],[2.092167,-8.526269,1.720261],[6.908433,5.211415,4.991838],[7.670809,7.815564,5.722516],[-5.501415,-0.532645,-2.616051],[9.209391,9.129007,-9.198569],[6.300752,9.908273,7.112872]]], dtype = "float32")#candidate|78|(5, 11, 3)|const|float32
bop_79 = relay.floor_divide(var_77.astype('float32'), relay.reshape(const_78.astype('float32'), relay.shape_of(var_77))) # shape=(5, 11, 3)
uop_84 = relay.cosh(bop_79.astype('float32')) # shape=(5, 11, 3)
output = uop_84
output2 = uop_84
func_86 = relay.Function([var_77,], output)
mod['func_86'] = func_86
mod = relay.transform.InferType()(mod)
mutated_mod['func_86'] = func_86
mutated_mod = relay.transform.InferType()(mutated_mod)
var_87 = relay.var("var_87", dtype = "float32", shape = (5, 11, 3))#candidate|87|(5, 11, 3)|var|float32
func_86_call = mutated_mod.get_global_var('func_86')
call_88 = func_86_call(var_87)
output = call_88
func_89 = relay.Function([var_87], output)
mutated_mod['func_89'] = func_89
mutated_mod = relay.transform.InferType()(mutated_mod)
const_121 = relay.const([[[0.447698,-1.725738,7.972129,2.474632,5.396848],[9.394129,-3.509964,4.370672,1.583855,9.352528],[-8.503832,3.907630,-5.674785,7.038872,3.809955],[5.170558,-2.100227,9.384520,-3.804217,3.047637],[2.938721,3.740922,6.815156,0.354833,8.190861],[5.184763,-2.575282,5.260052,8.861728,-8.803790],[-6.356771,4.124863,5.835332,-1.004572,5.960855]],[[1.866604,9.963227,-3.548955,9.408370,9.569712],[-0.670867,-8.046238,-0.513659,0.868207,-0.989512],[-7.218408,-0.175349,4.643349,-4.175985,4.419330],[-2.890190,-2.768839,-8.033554,-6.765901,-2.040563],[-5.485282,-4.198211,7.812371,-6.283418,-5.970669],[-6.230281,2.132327,-6.579011,-9.874877,0.886429],[-6.138163,-5.292640,9.125483,9.887024,1.493708]],[[1.509663,-6.200100,-0.391991,-2.838177,-4.490605],[-3.930200,-5.707145,4.928805,-6.521896,3.334610],[-0.952902,7.885125,2.335756,5.287366,-1.461364],[-7.011170,-6.402479,2.351794,0.736159,7.830033],[-3.663748,-1.464376,-8.952311,0.101225,-4.435662],[-5.903887,-0.859498,3.310992,-6.973487,-3.056646],[0.234213,-5.244915,3.142830,8.402928,-1.114473]],[[5.739004,-7.614375,5.322401,2.096865,5.080495],[9.638423,-3.038791,-0.836854,8.940628,-7.609026],[2.897954,1.640604,0.572649,-9.451259,2.794731],[-7.735417,2.736717,-1.411286,6.883070,-3.509475],[6.002208,-6.746693,1.275970,-9.422081,7.421849],[2.820208,-3.357385,-6.487183,3.026910,-1.060102],[4.548763,7.753960,9.215675,8.756688,-4.298204]],[[-5.619990,-5.541928,7.320794,3.142954,-9.086210],[7.754151,4.120958,-8.749584,7.475720,-8.641960],[-2.393106,-9.397740,6.885590,-7.092036,-0.339292],[-6.484075,-9.940429,3.135983,-2.022374,3.360661],[6.310578,-1.269312,3.379560,7.588055,6.877623],[-6.368587,3.977163,3.851486,6.949016,-4.095984],[-5.591943,-2.735504,7.302730,1.821780,-8.488892]],[[-9.483211,4.491400,-9.326157,-9.733090,0.178979],[-7.273846,9.035746,3.874202,-1.152031,-7.271819],[-3.870901,6.439471,-7.163435,5.259178,-0.084059],[-9.127476,5.794292,-7.291215,-5.417536,7.930439],[-9.967775,-1.258225,-7.063671,-9.785015,-1.652158],[0.959687,-9.423386,0.754498,5.272081,-1.066242],[-1.877009,-9.940893,-7.597195,7.552009,0.884506]],[[-9.224025,-2.653711,-2.911879,-0.191608,2.227855],[4.619183,-0.127318,1.481438,-3.596626,-0.092285],[5.134212,-7.734917,-0.334944,-5.533157,1.394441],[4.361414,9.806920,-3.271974,-7.648910,-2.097813],[2.212752,-9.916154,6.459338,4.161613,-8.584772],[-8.454900,-8.273184,9.560286,8.117365,3.312715],[-5.179511,4.773630,-1.204336,4.770643,-3.376186]],[[7.187739,7.572922,3.906269,7.242081,5.548515],[-8.801162,3.961887,-6.045480,-3.303673,-9.741765],[-1.595187,-3.823807,-6.678046,-9.842295,1.340367],[-5.914090,-7.848874,-4.643984,-6.249595,4.198767],[1.737672,-8.911485,-1.309037,6.255455,-7.343490],[-7.040226,-9.624559,-9.331157,-8.490123,-7.243876],[-4.637218,-0.268720,2.042236,-3.824125,-7.284753]],[[0.599211,-6.665227,0.438529,-2.534742,9.442566],[-4.675637,3.727684,-8.708084,-5.744612,-9.132012],[-5.784426,1.847793,-4.169691,7.456053,-4.830709],[-5.388594,8.181618,7.236672,8.279717,3.392213],[6.694469,2.833578,4.009085,-1.850958,-2.199444],[-5.263125,8.016667,6.667299,-4.494377,7.592637],[-6.993081,-1.562087,-9.125484,-9.524929,9.079523]],[[-4.699755,-2.748393,-1.568486,6.746772,9.165899],[7.678442,-2.557570,9.981022,-7.793524,-1.860686],[-2.568088,9.690335,-3.151185,1.281902,-8.962768],[-2.027244,9.990701,-8.996003,-3.608220,-9.049202],[1.803583,-4.096399,8.885455,7.043201,5.849675],[9.235327,-7.911406,1.875276,-8.734161,-0.178058],[6.499535,7.147812,2.781537,-1.270084,1.950130]],[[4.494716,8.365499,-6.082746,5.128736,-6.231906],[9.808260,-4.140772,2.322547,-7.959767,-2.212195],[-6.515095,4.514414,-5.261509,4.268848,2.273657],[-2.657090,6.836352,-0.862565,-2.666813,2.359602],[-3.495268,-0.161829,-8.667203,-3.726171,7.843383],[2.651676,5.059804,8.247310,0.741268,-5.292143],[8.859130,0.353237,-3.849648,-4.339604,3.057790]],[[-0.104339,-4.086828,5.343138,-4.436885,9.352106],[-7.696093,0.640472,7.862904,-3.820084,3.628765],[6.915592,6.227305,4.483831,-1.922074,-1.974851],[9.720064,-3.577056,0.635438,-1.333330,9.082881],[3.947134,5.804645,6.876743,0.718230,0.460983],[7.484279,9.924950,-0.668394,-2.835783,-8.219826],[-7.871688,3.394214,4.525343,-8.642118,-3.871476]],[[7.743386,-7.206813,-4.979471,4.121655,2.106661],[-2.209229,-1.686023,8.547634,-7.750461,9.854164],[-5.179214,-3.929803,-3.101035,-0.583691,-3.457731],[8.610570,-9.036642,-0.485948,1.280044,-4.284356],[-7.294791,8.862602,-6.547045,5.099280,4.601642],[3.172235,7.771245,6.408861,1.578327,-3.143061],[9.429055,9.461217,0.947454,-9.365234,6.805278]]], dtype = "float64")#candidate|121|(13, 7, 5)|const|float64
uop_122 = relay.tan(const_121.astype('float64')) # shape=(13, 7, 5)
func_86_call = mod.get_global_var('func_86')
func_89_call = mutated_mod.get_global_var('func_89')
const_145 = relay.const([1.764888,-3.111694,5.793057,7.163738,8.161606,-0.997907,9.456688,-0.278149,2.231044,5.734414,-2.808345,4.830843,-5.089552,-1.526433,9.664695,-6.962357,1.083758,8.709870,6.074108,-3.755332,7.551931,5.638815,4.214885,6.053780,-8.025213,3.663146,8.057191,6.001097,2.266446,0.117500,-6.138219,4.648765,-8.572536,-8.321832,-1.819565,-4.073193,2.875992,-1.271071,3.579987,8.867794,-8.058942,9.250692,2.049762,6.142220,-3.072135,-2.420726,-8.497128,2.461899,-2.701671,9.739674,-7.387662,6.139151,7.379502,-9.953367,5.152130,-8.079560,-0.784620,1.705445,-8.441919,-2.094700,6.267417,2.030814,9.508759,-8.189259,-7.809449,-7.502364,-7.182142,-6.892984,3.649834,-0.634054,5.837653,-9.232079,-1.277917,4.839436,-8.564597,-7.419165,-0.884206,-9.586607,-1.026650,-7.441156,-0.124444,8.438275,-7.479644,-3.761492,-9.774430,-3.708313,4.416375,-6.906458,-8.830734,-7.293781,1.464663,-4.138800,8.157326,9.484892,6.751334,-9.296561,-1.578222,-5.248648,-0.790281,-5.552025,-0.114023,-9.573473,4.205551,5.377539,-3.097772,7.762231,-1.358377,-9.993321,-0.214013,4.955013,5.926926,7.552813,3.055550,-7.783205,-1.468284,7.354620,2.014922,-6.439501,-9.037367,-7.846362,7.729334,-3.845384,6.131207,3.459091,4.747201,1.026591,1.015758,-6.442845,9.107008,-6.612936,-7.904483,-9.276301,3.382794,-1.847654,-7.410403,-6.131568,-2.213957,-8.989839,1.592866,7.619067,-9.107354,2.817668,6.005685,6.199627,-1.898742,-0.209604,8.783784,-5.602990,2.560002,-1.392899,2.222190,-2.952452,1.845856,8.392641,-0.119938,8.530058,-6.385758,-5.561394,6.971062,-3.259566,3.481835,-2.114365,4.978121,4.999898,8.271424], dtype = "float32")#candidate|145|(165,)|const|float32
call_144 = func_86_call(relay.reshape(const_145.astype('float32'), [5, 11, 3]))
call_146 = func_86_call(relay.reshape(const_145.astype('float32'), [5, 11, 3]))
output = relay.Tuple([uop_122,call_144,const_145,])
output2 = relay.Tuple([uop_122,call_146,const_145,])
func_147 = relay.Function([], output)
mod['func_147'] = func_147
mod = relay.transform.InferType()(mod)
mutated_mod['func_147'] = func_147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_147_call = mutated_mod.get_global_var('func_147')
call_148 = func_147_call()
output = call_148
func_149 = relay.Function([], output)
mutated_mod['func_149'] = func_149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_158 = relay.TupleGetItem(func_147_call(), 2)
call_159 = relay.TupleGetItem(func_149_call(), 2)
func_86_call = mod.get_global_var('func_86')
func_89_call = mutated_mod.get_global_var('func_89')
call_177 = func_86_call(relay.reshape(call_158.astype('float32'), [5, 11, 3]))
call_178 = func_86_call(relay.reshape(call_158.astype('float32'), [5, 11, 3]))
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_180 = relay.TupleGetItem(func_147_call(), 0)
call_181 = relay.TupleGetItem(func_149_call(), 0)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_209 = relay.TupleGetItem(func_147_call(), 2)
call_210 = relay.TupleGetItem(func_149_call(), 2)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_213 = relay.TupleGetItem(func_147_call(), 2)
call_214 = relay.TupleGetItem(func_149_call(), 2)
output = relay.Tuple([call_158,call_177,call_180,call_209,call_213,])
output2 = relay.Tuple([call_159,call_178,call_181,call_210,call_214,])
func_217 = relay.Function([], output)
mod['func_217'] = func_217
mod = relay.transform.InferType()(mod)
output = func_217()
func_218 = relay.Function([], output)
mutated_mod['func_218'] = func_218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_224 = relay.var("var_224", dtype = "float32", shape = (13, 9, 9))#candidate|224|(13, 9, 9)|var|float32
uop_225 = relay.rsqrt(var_224.astype('float32')) # shape=(13, 9, 9)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_230 = relay.TupleGetItem(func_147_call(), 1)
call_231 = relay.TupleGetItem(func_149_call(), 1)
uop_242 = relay.tan(call_230.astype('float32')) # shape=(5, 11, 3)
uop_244 = relay.tan(call_231.astype('float32')) # shape=(5, 11, 3)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_247 = relay.TupleGetItem(func_147_call(), 0)
call_248 = relay.TupleGetItem(func_149_call(), 0)
output = relay.Tuple([uop_225,uop_242,call_247,])
output2 = relay.Tuple([uop_225,uop_244,call_248,])
func_251 = relay.Function([var_224,], output)
mod['func_251'] = func_251
mod = relay.transform.InferType()(mod)
var_252 = relay.var("var_252", dtype = "float32", shape = (13, 9, 9))#candidate|252|(13, 9, 9)|var|float32
output = func_251(var_252)
func_253 = relay.Function([var_252], output)
mutated_mod['func_253'] = func_253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_289 = relay.TupleGetItem(func_217_call(), 3)
call_290 = relay.TupleGetItem(func_218_call(), 3)
const_315 = relay.const([5.867849,0.291982,-6.320112,4.144832,3.675297,1.770831,-4.968177,-9.054310,4.501118,-7.851746,-1.022263,7.744632,-0.422967,8.435091,-3.441972,8.555235,7.509188,5.442933,9.048430,3.358386,-7.399384,-6.861982,-4.357724,6.310393,-2.237617,1.855598,4.127485,-8.145527,5.597437,-2.429000,-4.250453,0.645604,-0.391843,1.576490,-2.530712,7.697315,7.120751,0.943732,-7.716643,-6.267750,-9.794381,2.506985,-5.813098,6.530946,1.660289,-4.725969,2.938055,1.963496,-1.093284,4.091011,-6.882043,5.766149,-7.136071,9.262919,6.156053,-1.260241,5.322082,-3.586903,3.180380,7.580428,3.867764,-0.302680,-0.971520,4.241954,-2.506975,2.410272,8.886670,-7.738570,0.659761,-4.522773,2.187044,-7.340049,-0.916061,1.070901,-8.355857,-9.701759,-3.317713,2.788835,-8.093307,1.936455,2.877608,2.640346,-9.625123,4.849551,-1.231041,-1.918555,-4.273450,-1.431427,0.567424,-1.080118,3.688766,-7.411460,8.432750,-4.720327,-1.089492,-6.966234,-7.990329,-4.397473,3.919145,-4.824156,7.787872,-2.733801,2.008358,-8.147728,-5.116732,-1.834485,5.638639,8.211307,-8.244445,-1.661925,0.550176,7.201714,2.465927,-4.866997,9.266925,-4.315406,-5.948570,-5.414327,2.800883,-0.245700,1.803581,5.305979,2.935891,8.671365,-8.371206,-6.917464,-6.671062,3.338684,3.374939,-2.669138,-1.080796,7.482769,8.492854,-4.380411,-9.504722,-0.896760,-7.944624,-7.095111,-6.183265,7.620721,-7.224116,5.097168,2.229305,-9.182708,-8.108460,9.267991,0.743595,3.301499,-1.980407,3.810434,1.177413,-7.054653,-1.310594,5.499212,-9.728220,7.481658,5.269808,5.942801,-9.529623,1.086752,1.974456,9.367771,-4.807505,4.393125,8.504182], dtype = "float32")#candidate|315|(165,)|const|float32
bop_316 = relay.power(call_289.astype('float64'), relay.reshape(const_315.astype('float64'), relay.shape_of(call_289))) # shape=(165,)
bop_319 = relay.power(call_290.astype('float64'), relay.reshape(const_315.astype('float64'), relay.shape_of(call_290))) # shape=(165,)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_328 = relay.TupleGetItem(func_147_call(), 0)
call_329 = relay.TupleGetItem(func_149_call(), 0)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_349 = relay.TupleGetItem(func_217_call(), 4)
call_350 = relay.TupleGetItem(func_218_call(), 4)
output = relay.Tuple([bop_316,call_328,call_349,])
output2 = relay.Tuple([bop_319,call_329,call_350,])
func_351 = relay.Function([], output)
mod['func_351'] = func_351
mod = relay.transform.InferType()(mod)
output = func_351()
func_352 = relay.Function([], output)
mutated_mod['func_352'] = func_352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_353 = relay.TupleGetItem(func_147_call(), 2)
call_354 = relay.TupleGetItem(func_149_call(), 2)
uop_373 = relay.atanh(call_353.astype('float32')) # shape=(165,)
uop_375 = relay.atanh(call_354.astype('float32')) # shape=(165,)
output = relay.Tuple([uop_373,])
output2 = relay.Tuple([uop_375,])
func_377 = relay.Function([], output)
mod['func_377'] = func_377
mod = relay.transform.InferType()(mod)
output = func_377()
func_378 = relay.Function([], output)
mutated_mod['func_378'] = func_378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_382 = relay.TupleGetItem(func_147_call(), 0)
call_383 = relay.TupleGetItem(func_149_call(), 0)
var_389 = relay.var("var_389", dtype = "float64", shape = (13, 7, 5))#candidate|389|(13, 7, 5)|var|float64
bop_390 = relay.bitwise_and(call_382.astype('int32'), relay.reshape(var_389.astype('int32'), relay.shape_of(call_382))) # shape=(13, 7, 5)
bop_393 = relay.bitwise_and(call_383.astype('int32'), relay.reshape(var_389.astype('int32'), relay.shape_of(call_383))) # shape=(13, 7, 5)
output = bop_390
output2 = bop_393
func_398 = relay.Function([var_389,], output)
mod['func_398'] = func_398
mod = relay.transform.InferType()(mod)
mutated_mod['func_398'] = func_398
mutated_mod = relay.transform.InferType()(mutated_mod)
var_399 = relay.var("var_399", dtype = "float64", shape = (13, 7, 5))#candidate|399|(13, 7, 5)|var|float64
func_398_call = mutated_mod.get_global_var('func_398')
call_400 = func_398_call(var_399)
output = call_400
func_401 = relay.Function([var_399], output)
mutated_mod['func_401'] = func_401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_427 = relay.TupleGetItem(func_217_call(), 0)
call_428 = relay.TupleGetItem(func_218_call(), 0)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_432 = relay.TupleGetItem(func_377_call(), 0)
call_433 = relay.TupleGetItem(func_378_call(), 0)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_442 = relay.TupleGetItem(func_377_call(), 0)
call_443 = relay.TupleGetItem(func_378_call(), 0)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_459 = relay.TupleGetItem(func_217_call(), 2)
call_460 = relay.TupleGetItem(func_218_call(), 2)
var_479 = relay.var("var_479", dtype = "float64", shape = (13, 7, 5))#candidate|479|(13, 7, 5)|var|float64
bop_480 = relay.left_shift(call_459.astype('uint64'), relay.reshape(var_479.astype('uint64'), relay.shape_of(call_459))) # shape=(13, 7, 5)
bop_483 = relay.left_shift(call_460.astype('uint64'), relay.reshape(var_479.astype('uint64'), relay.shape_of(call_460))) # shape=(13, 7, 5)
var_497 = relay.var("var_497", dtype = "float64", shape = (13, 7, 5))#candidate|497|(13, 7, 5)|var|float64
bop_498 = relay.minimum(var_479.astype('float64'), relay.reshape(var_497.astype('float64'), relay.shape_of(var_479))) # shape=(13, 7, 5)
func_86_call = mod.get_global_var('func_86')
func_89_call = mutated_mod.get_global_var('func_89')
call_505 = func_86_call(relay.reshape(call_427.astype('float32'), [5, 11, 3]))
call_506 = func_86_call(relay.reshape(call_427.astype('float32'), [5, 11, 3]))
func_86_call = mod.get_global_var('func_86')
func_89_call = mutated_mod.get_global_var('func_89')
call_509 = func_86_call(relay.reshape(call_505.astype('float32'), [5, 11, 3]))
call_510 = func_86_call(relay.reshape(call_505.astype('float32'), [5, 11, 3]))
output = relay.Tuple([call_427,call_432,call_442,bop_480,bop_498,call_505,call_509,])
output2 = relay.Tuple([call_428,call_433,call_443,bop_483,bop_498,call_506,call_510,])
func_512 = relay.Function([var_479,var_497,], output)
mod['func_512'] = func_512
mod = relay.transform.InferType()(mod)
mutated_mod['func_512'] = func_512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_512_call = mutated_mod.get_global_var('func_512')
var_514 = relay.var("var_514", dtype = "float64", shape = (13, 7, 5))#candidate|514|(13, 7, 5)|var|float64
var_515 = relay.var("var_515", dtype = "float64", shape = (13, 7, 5))#candidate|515|(13, 7, 5)|var|float64
call_513 = func_512_call(var_514,var_515,)
output = call_513
func_516 = relay.Function([var_514,var_515,], output)
mutated_mod['func_516'] = func_516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_629 = relay.TupleGetItem(func_217_call(), 4)
call_630 = relay.TupleGetItem(func_218_call(), 4)
output = call_629
output2 = call_630
func_666 = relay.Function([], output)
mod['func_666'] = func_666
mod = relay.transform.InferType()(mod)
mutated_mod['func_666'] = func_666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mutated_mod.get_global_var('func_666')
call_667 = func_666_call()
output = call_667
func_668 = relay.Function([], output)
mutated_mod['func_668'] = func_668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_671 = func_666_call()
call_672 = func_666_call()
output = call_671
output2 = call_672
func_695 = relay.Function([], output)
mod['func_695'] = func_695
mod = relay.transform.InferType()(mod)
mutated_mod['func_695'] = func_695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_695_call = mutated_mod.get_global_var('func_695')
call_696 = func_695_call()
output = call_696
func_697 = relay.Function([], output)
mutated_mod['func_697'] = func_697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_695_call = mod.get_global_var('func_695')
func_697_call = mutated_mod.get_global_var('func_697')
call_712 = func_695_call()
call_713 = func_695_call()
output = call_712
output2 = call_713
func_731 = relay.Function([], output)
mod['func_731'] = func_731
mod = relay.transform.InferType()(mod)
mutated_mod['func_731'] = func_731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_731_call = mutated_mod.get_global_var('func_731')
call_732 = func_731_call()
output = call_732
func_733 = relay.Function([], output)
mutated_mod['func_733'] = func_733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_762 = relay.TupleGetItem(func_217_call(), 3)
call_763 = relay.TupleGetItem(func_218_call(), 3)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_764 = func_666_call()
call_765 = func_666_call()
output = relay.Tuple([call_762,call_764,])
output2 = relay.Tuple([call_763,call_765,])
func_768 = relay.Function([], output)
mod['func_768'] = func_768
mod = relay.transform.InferType()(mod)
output = func_768()
func_769 = relay.Function([], output)
mutated_mod['func_769'] = func_769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_816 = relay.TupleGetItem(func_217_call(), 2)
call_817 = relay.TupleGetItem(func_218_call(), 2)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_830 = relay.TupleGetItem(func_147_call(), 0)
call_831 = relay.TupleGetItem(func_149_call(), 0)
func_251_call = mod.get_global_var('func_251')
func_253_call = mutated_mod.get_global_var('func_253')
const_833 = relay.const([9.843144,-9.340312,0.122630,4.177035,3.752118,-4.062434,2.823325,-2.005103,3.437157,1.317641,-5.454592,9.423006,4.852157,5.372177,4.244505,-4.773061,-4.328714,-1.709560,6.545725,-9.600881,-0.154415,9.502183,-3.649507,2.697774,-7.306051,9.516112,-6.168712,-8.414044,8.175836,-2.740791,3.648357,-7.200531,2.690467,2.300525,-5.874131,-9.165373,8.744040,-3.677667,8.977193,6.343421,2.201483,-0.645435,-8.730347,2.006346,-9.003282,-8.187295,9.100913,-0.151061,3.923860,9.881262,2.038434,5.533263,1.250068,-6.181560,8.049587,-7.797237,-8.458234,6.721854,9.924974,7.055218,-2.321084,-7.913883,-4.297988,2.520555,-2.828121,6.272717,-5.074877,-6.034378,0.221351,-1.697960,6.359021,2.319486,6.283951,-6.831611,9.093733,-8.543638,4.602197,8.069791,3.362053,8.731670,9.938305,1.720072,5.507151,8.815569,-3.242315,-7.559928,4.709759,-8.266993,-9.751822,4.621195,-2.870118,8.148372,-7.923335,4.398700,6.831734,-4.686336,4.976217,-8.296790,6.411540,4.286573,9.386220,1.914413,5.054011,9.140825,-8.488770,-0.641151,3.200078,-1.803531,-7.769683,7.128001,8.020685,2.554120,-8.720762,0.838343,4.250294,5.982089,-4.740953,9.437047,-3.316508,9.739519,-9.988138,1.250592,-4.633184,6.465339,1.211524,-3.948506,-3.888556,-8.367098,-3.961311,2.467045,-1.054547,-2.973373,7.161240,5.707383,2.180061,4.222488,-2.727217,8.795103,-7.974644,9.645711,5.019639,-0.679905,9.261778,-8.501325,8.654167,-5.018792,9.480853,-2.554627,-6.432345,-8.314874,4.115619,6.054751,8.311696,-8.772170,-2.560597,6.113139,4.819573,5.526666,-9.415182,-2.587230,8.796163,-8.231444,-4.966209,-3.557903,-0.627345,-0.167796,-2.185219,1.915721,-5.525695,5.179164,3.746790,-9.425663,5.653762,-6.999669,-6.985383,5.654163,5.674416,-3.945547,-9.680244,-7.306994,1.347468,-3.751898,6.924181,8.919859,0.598983,-3.289492,-0.465614,-2.987852,-3.653929,0.335745,8.050317,0.584747,-7.018601,-4.370793,-8.113005,4.563855,3.385220,3.256412,2.068184,-3.830061,9.979982,-1.404940,-3.051770,9.282151,3.037010,4.622155,1.282677,2.498184,-9.433361,9.249827,-2.102039,-0.441991,-4.384336,-2.966311,1.205660,6.014653,7.203157,-7.141220,-0.030482,5.861241,-3.183378,-3.057446,4.973526,-4.482520,-2.730450,-0.393962,-5.157352,-0.201204,-1.290417,6.028135,-0.679358,-9.932299,-9.916636,5.637542,2.531731,-6.386919,3.116839,9.027828,-0.744138,-9.676807,8.975913,3.208350,5.522014,0.536527,1.981226,2.103866,6.471186,5.801809,-4.662003,-7.565042,1.443122,-6.062136,6.249408,2.888840,0.617676,-5.503358,-6.326014,-7.702378,-2.193929,0.202074,-5.413571,2.466896,2.826539,0.941657,2.607739,3.765856,-7.754099,5.551386,4.193730,5.070697,-0.298904,-7.585306,-5.135583,-1.321531,-1.374718,-3.142306,3.949208,-2.294144,-3.829750,-0.428217,4.279696,9.199599,1.768968,6.162906,5.372901,3.763868,2.440267,7.489087,2.837504,-7.363086,9.922089,-1.239947,-1.347547,7.961607,8.882619,-8.452974,4.249508,-8.368970,-4.268047,-5.110665,5.758689,9.886930,2.029515,-9.270132,-4.344630,-5.699343,8.817041,-2.273739,3.982819,-2.570225,-2.173588,7.913784,-1.596949,-6.824504,2.660236,1.095564,8.330328,4.339109,1.802623,0.386171,-6.631315,6.859700,-8.108393,3.577878,-6.413271,-0.676250,-7.153803,-8.057674,-6.576752,9.174144,4.174002,-5.059618,8.387172,6.244749,3.767055,9.253551,-6.743668,4.951496,-6.607659,-7.073200,-0.186094,9.720925,-4.953487,-8.607464,9.683212,4.941495,-9.088638,8.383699,3.793806,-4.169326,4.002371,2.709562,-5.053463,-2.744964,9.452284,8.902235,-0.041480,8.225918,4.388598,9.481017,9.220607,8.145698,-2.374817,-7.033252,-9.014966,-6.422661,-8.397522,4.669795,-8.477383,8.854654,2.693737,8.108839,-0.967914,-9.409946,-3.079238,-1.033477,-7.004541,7.364869,-0.162517,7.166154,-1.265786,-7.434515,5.753590,-9.176149,1.301518,5.726567,-7.096438,-4.385115,8.363384,-7.254534,-4.568607,-7.000131,3.080829,5.943455,3.177917,-1.030689,-8.253587,-1.098708,-2.236530,4.925077,-3.834123,-2.849620,-2.236569,8.340199,-4.399192,3.450965,-4.248911,2.119758,-4.653487,7.508988,1.247166,6.225727,-9.710240,2.026431,-4.550137,1.225781,-8.066974,-4.097880,-2.947235,-1.615959,3.159263,-8.466829,4.526976,5.337894,-2.433366,8.610056,-5.969410,-2.662931,-0.195455,-4.976678,-0.829935,-6.170065,5.326501,0.329991,-7.164715,-2.020266,-6.108205,-2.716838,4.184488,2.944713,-6.405120,1.877308,1.950824,-8.809662,-3.669787,4.327883,-4.249263,0.085827,-3.447946,2.443733,-8.254513,-0.470699,-9.437469,0.546364,7.705993,-2.100576,9.960197,-6.133824,3.342402,4.933494,8.751665,-2.017338,-5.226845,-5.851761,5.740249,6.399533,6.903830,-3.116049,-6.300254,6.327778,-5.466147,-6.379747,-3.362414,-1.555831,7.848949,4.393157,-1.979974,-0.004066,6.449267,9.834093,-0.710258,-6.350954,2.758583,-7.679459,-3.987632,8.077428,6.280774,6.285172,-3.153049,8.543614,0.024350,6.545721,-3.379767,-3.663420,-2.785957,-4.818399,-7.001088,-3.912055,0.329626,-8.512899,0.288644,-5.011959,0.887587,-6.166019,-1.992325,9.833805,-1.839733,6.605603,-7.773968,-3.372537,-6.524648,6.255730,8.344782,-4.190447,-5.972142,3.640602,-6.641863,-0.187574,7.867382,0.829427,-7.275459,2.876705,0.870814,-6.113530,-7.105171,-3.587434,2.403313,5.237556,-8.479679,-2.925278,-5.493560,-0.728650,0.851495,-1.702019,8.235943,-2.871880,-5.805443,-7.629005,9.488182,7.914192,9.785584,-9.964339,-5.252830,9.824891,0.470407,0.107520,2.617536,-9.530247,1.406479,7.444645,-9.678556,-3.110530,9.109002,5.724677,1.513972,-5.460600,-6.069086,-6.469297,4.816035,5.138042,6.026208,-1.827335,-5.370033,2.340189,-4.128588,-8.835191,6.091467,6.455953,6.548211,3.991614,-7.509247,8.238198,-2.118487,1.244545,-7.082542,-3.485378,3.296878,-7.828613,7.015996,3.565428,9.106725,-9.259518,8.113297,9.381003,-8.940045,7.542328,9.514251,-5.653732,-6.955086,7.679576,-8.413008,-5.877670,-4.119934,-6.835034,8.226231,0.445020,4.291847,1.153610,-1.677442,-1.185678,4.668527,9.813948,-2.558997,-2.061522,3.348229,8.308794,8.726658,1.017853,1.837681,9.010251,-2.876391,7.390284,-0.012550,-6.642585,8.974559,-9.411179,-7.440019,0.906514,6.933274,-6.707182,1.125311,-4.067397,5.457157,5.773080,1.208259,1.174788,7.600130,-8.503036,5.572400,-1.963845,4.668828,3.537966,-7.709677,-0.138769,-1.444026,-2.291380,4.330936,-6.561567,3.518461,6.361893,-0.353907,-9.538426,5.061278,-2.403453,3.420353,2.286610,0.694003,-7.874775,-0.046697,4.542716,1.414279,-4.082617,-7.840277,-9.981840,-7.157960,0.505144,-8.706698,2.528364,-3.033183,1.456316,-4.951678,-8.735067,3.272103,-4.438232,1.531391,2.827240,6.391738,1.920398,-0.804476,7.229515,8.120059,-5.458683,-9.061476,0.505852,3.956223,-2.535967,-6.297346,5.791610,-2.299736,5.164768,5.593505,-1.473896,-3.918110,-5.328068,7.322835,-8.686287,-1.650716,1.275661,-9.038846,2.824672,7.931012,1.041467,-5.254788,5.848569,-1.634599,5.264378,7.113956,8.278906,1.615037,1.117779,3.359290,-0.609900,-6.202516,4.194349,-8.211555,-7.711774,-0.136892,1.815895,-6.073418,1.861040,1.742862,-1.580398,8.392206,8.619321,9.899037,9.123775,-3.901701,1.499753,5.279334,8.864166,1.437148,9.483579,5.105487,0.758245,-2.971894,1.456415,0.021263,-0.575833,9.522976,0.289441,-1.011485,4.486276,-7.113591,9.390649,6.626846,-6.853152,-9.522916,9.447449,-5.756971,6.324392,3.055648,3.393844,-4.726948,0.334165,3.407861,4.742865,-0.882099,-1.631341,4.004916,-2.196830,-2.390852,3.686399,0.787076,-2.990706,0.138668,-2.509829,-5.395934,7.356221,4.784439,-4.041859,-9.206336,8.349787,7.914821,6.040809,5.606520,3.848025,-6.416788,8.193777,8.072351,-8.893746,3.684866,-9.744842,-5.976713,6.978867,-9.243312,-5.192293,3.491279,5.402032,5.120666,9.347497,0.237895,-9.710290,8.148547,1.890339,4.153945,-9.528566,-5.895304,6.212490,-5.389627,-6.957768,-6.971760,0.891128,-0.488229,-4.375863,-8.521663,9.454077,6.469177,0.206394,8.466265,9.896548,-3.954704,2.528351,-1.695853,3.011745,4.740419,-5.265709,-7.630909,7.790358,-3.134872,-2.612464,0.345323,-6.174625,5.478597,-7.901085,-1.311916,-5.102067,6.831471,1.989112,-1.574175,-5.254446,2.529914,8.769237,6.212169,-1.323798,4.237936,-2.352111,-4.216769,1.865747,-2.396474,-9.030149,0.215495,-4.747572,5.116009,9.674866,-8.837336,9.251081,-6.153842,-6.612605,-2.727045,3.363773,1.215216,-5.464550,0.188737,-3.528992,2.334727,-7.261235,1.890547,6.013942,7.694979,-1.572821,1.043401,6.763565,-3.607927,7.186883,-1.399817,-3.486258,-3.987898,-8.032366,-0.185189,0.809156,5.346365,8.685903,-1.684783,6.650403,6.368297,-8.875995,-4.149377,-6.012845,8.896366,2.493078,-4.722970,4.502183,-4.640038,-5.408283,-3.696172,7.411593,-3.228538,-0.694122,0.097624,-8.289251,6.375081,8.405842,-0.745938,8.819422,3.327426,5.553869,-5.341068,-9.313936,-4.677959,-5.404431,1.623685,5.710093,-9.618464,-0.380246,6.495840,-6.672233,1.375533,-8.986173,4.302635,0.195261,-0.525471,-2.409787,-5.900278,-0.759135,-4.076263,4.735040,-8.713399,5.731178,6.517453,-6.618269,-9.787937,3.201863,7.674742,0.164064,3.927383,8.296980,0.926667,1.779948,2.498773,8.125027,-2.637935,5.512840,4.025577,9.035990,-3.416938,5.050415,-3.522068,9.793633,7.569072,-2.038307,5.415142,-3.473139,3.939502,-4.681931,0.723290,-8.004043,0.915837,-6.568853,-2.743567,2.423234,-1.996338,1.536438,7.105340,-1.101619,7.664663,-5.712371,-6.605782,-1.460366,-8.073557,-4.345038,-6.884435,9.544099,-3.177296,-6.151352,6.987018,-8.400759,-2.287590,-9.884310,-9.847023,-4.182522,4.013181,-2.098579,-3.599595,0.645200,-1.102507,-6.742387,4.443689,-2.235263,-9.921323,-7.157654,-9.448100,0.931415,2.847123,-9.604949,-8.467976,4.902128,4.983435,2.974316,-0.512239,-8.951189,3.296094,0.185475,-7.649806,-1.790048,-2.090043,-5.784283,9.588085,-3.858267,2.842160,-7.154128,2.974292,9.171934,-8.990322,-4.961994,-3.016947,1.773791,-4.919622,-2.906004,-9.899555,2.959003,2.970713,0.074177,5.527385,9.261532,-1.723390,-9.717277,-4.645170,2.118976,-2.716436,5.629943,-3.476261,-4.563163,-5.390450,-3.418594,-9.524082,7.534668,8.440745,-9.134326,-0.757432,-1.662299,-3.852621,5.235709,-1.183103,1.256782,-5.637332,7.536900,1.956149,0.029908,-9.220896,-4.034664,0.060248,4.482717,-1.366234,3.929039,9.621195,8.576678,-4.864736,-5.020593,6.520911,-5.223647,7.133300,7.338081,6.429743,-4.798646,-7.235320,-5.924623,-4.835584,-9.774907,-3.664578,-1.462738,6.317783,8.906934,-3.980786], dtype = "float32")#candidate|833|(1053,)|const|float32
call_832 = relay.TupleGetItem(func_251_call(relay.reshape(const_833.astype('float32'), [13, 9, 9])), 1)
call_834 = relay.TupleGetItem(func_253_call(relay.reshape(const_833.astype('float32'), [13, 9, 9])), 1)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_843 = func_666_call()
call_844 = func_666_call()
func_768_call = mod.get_global_var('func_768')
func_769_call = mutated_mod.get_global_var('func_769')
call_862 = relay.TupleGetItem(func_768_call(), 1)
call_863 = relay.TupleGetItem(func_769_call(), 1)
func_351_call = mod.get_global_var('func_351')
func_352_call = mutated_mod.get_global_var('func_352')
call_868 = relay.TupleGetItem(func_351_call(), 1)
call_869 = relay.TupleGetItem(func_352_call(), 1)
output = relay.Tuple([call_816,call_830,call_832,const_833,call_843,call_862,call_868,])
output2 = relay.Tuple([call_817,call_831,call_834,const_833,call_844,call_863,call_869,])
func_876 = relay.Function([], output)
mod['func_876'] = func_876
mod = relay.transform.InferType()(mod)
output = func_876()
func_877 = relay.Function([], output)
mutated_mod['func_877'] = func_877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_731_call = mod.get_global_var('func_731')
func_733_call = mutated_mod.get_global_var('func_733')
call_881 = func_731_call()
call_882 = func_731_call()
output = relay.Tuple([call_881,])
output2 = relay.Tuple([call_882,])
func_888 = relay.Function([], output)
mod['func_888'] = func_888
mod = relay.transform.InferType()(mod)
output = func_888()
func_889 = relay.Function([], output)
mutated_mod['func_889'] = func_889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_895 = relay.TupleGetItem(func_147_call(), 0)
call_896 = relay.TupleGetItem(func_149_call(), 0)
uop_897 = relay.log(call_895.astype('float64')) # shape=(13, 7, 5)
uop_899 = relay.log(call_896.astype('float64')) # shape=(13, 7, 5)
func_768_call = mod.get_global_var('func_768')
func_769_call = mutated_mod.get_global_var('func_769')
call_905 = relay.TupleGetItem(func_768_call(), 0)
call_906 = relay.TupleGetItem(func_769_call(), 0)
bop_908 = relay.subtract(uop_897.astype('int32'), relay.reshape(call_895.astype('int32'), relay.shape_of(uop_897))) # shape=(13, 7, 5)
bop_911 = relay.subtract(uop_899.astype('int32'), relay.reshape(call_896.astype('int32'), relay.shape_of(uop_899))) # shape=(13, 7, 5)
uop_915 = relay.sigmoid(bop_908.astype('float64')) # shape=(13, 7, 5)
uop_917 = relay.sigmoid(bop_911.astype('float64')) # shape=(13, 7, 5)
output = relay.Tuple([call_905,uop_915,])
output2 = relay.Tuple([call_906,uop_917,])
func_922 = relay.Function([], output)
mod['func_922'] = func_922
mod = relay.transform.InferType()(mod)
output = func_922()
func_923 = relay.Function([], output)
mutated_mod['func_923'] = func_923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_950 = relay.TupleGetItem(func_888_call(), 0)
call_951 = relay.TupleGetItem(func_889_call(), 0)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_952 = relay.TupleGetItem(func_217_call(), 1)
call_953 = relay.TupleGetItem(func_218_call(), 1)
output = relay.Tuple([call_950,call_952,])
output2 = relay.Tuple([call_951,call_953,])
func_955 = relay.Function([], output)
mod['func_955'] = func_955
mod = relay.transform.InferType()(mod)
mutated_mod['func_955'] = func_955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_955_call = mutated_mod.get_global_var('func_955')
call_956 = func_955_call()
output = call_956
func_957 = relay.Function([], output)
mutated_mod['func_957'] = func_957
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1056 = relay.var("var_1056", dtype = "uint8", shape = (15, 9, 11))#candidate|1056|(15, 9, 11)|var|uint8
const_1057 = relay.const([[[-6,6,-9,-2,10,8,-5,-8,9,-7,-6],[4,1,-1,-7,-8,7,-8,-8,1,-10,6],[9,-8,-3,3,-6,-5,10,-9,-3,1,-4],[-6,1,10,6,5,-10,-6,-9,-4,-5,-10],[-7,3,8,9,2,4,-5,-5,10,6,6],[-5,-10,-10,8,-1,10,6,-7,2,2,-5],[2,-8,3,-2,-8,3,-4,5,4,-10,10],[-4,2,-8,-4,3,-4,-6,-9,-5,-5,-6],[-1,2,9,-10,7,7,10,6,-8,-9,2]],[[-9,-4,-7,-3,8,6,-7,-10,-5,1,-6],[7,4,-1,-10,-6,5,3,9,-6,10,-6],[6,-6,-3,-3,7,-1,5,-1,6,-6,-1],[2,7,-6,-10,5,-8,-7,7,2,-9,-4],[6,3,-7,2,8,-8,1,-1,8,-9,7],[9,-7,10,3,-2,9,10,4,4,5,-6],[-5,9,5,10,-3,7,-8,-6,1,10,5],[8,4,-3,1,7,-8,-7,-2,6,4,5],[-10,-4,9,3,-6,5,-10,-8,8,6,2]],[[1,-2,9,-10,-9,5,3,1,-10,-6,8],[-3,-8,-2,9,10,7,-4,-8,-1,5,2],[10,4,2,-4,6,7,-10,-10,2,-6,-2],[7,7,8,-6,9,-6,9,-3,-6,-2,-2],[-1,-1,10,6,-10,-1,5,-8,-10,8,-10],[-3,1,1,-2,4,-3,10,2,7,-9,8],[10,4,5,-7,10,-7,9,2,10,7,-3],[-9,1,9,-8,3,-7,9,10,6,-6,-10],[-2,8,-10,-5,2,-10,-4,4,-9,2,-5]],[[-9,-9,-4,9,-1,6,-5,4,1,-6,10],[3,-5,-4,-10,10,-3,-4,7,3,-6,-9],[9,-1,-3,3,-10,-9,1,-2,4,8,-4],[-6,-8,10,2,-5,5,1,-4,1,-1,8],[6,2,-3,-7,5,-9,4,6,-9,7,6],[1,-2,-5,5,-6,-3,-10,1,5,-1,-8],[2,-3,7,-4,-5,7,7,2,-3,-2,-7],[5,10,-3,-2,7,6,-6,7,-10,-7,2],[8,8,2,-10,-2,6,-4,-2,9,2,-9]],[[-2,10,-1,-10,-1,-10,-2,8,-3,6,2],[-6,8,-4,-3,-1,-9,9,-8,-4,-7,-9],[-9,10,7,9,8,4,5,10,-8,4,-4],[9,2,-4,-10,-8,9,-8,6,6,5,3],[7,-7,-6,4,4,3,-7,-6,9,-3,-4],[7,-8,-5,4,-2,-1,7,2,7,-3,3],[-7,-4,-3,-7,7,6,-8,8,-6,4,-1],[-5,2,-6,-2,4,8,-8,-4,5,-2,7],[-1,-3,-7,-6,-7,9,3,-2,-6,6,6]],[[-4,-2,4,-1,3,7,-9,-2,3,6,-7],[-9,3,9,1,7,4,6,1,-10,-9,10],[-3,5,-2,-10,-9,1,-6,3,-4,5,-8],[-7,-10,7,3,-9,2,2,4,-4,-1,-5],[5,-6,-8,8,-2,7,3,-3,-3,-3,-10],[-8,9,7,7,8,-10,3,-3,-4,-8,-1],[6,7,10,-4,-7,3,4,-7,-2,5,7],[-1,-8,9,7,5,4,5,-4,-2,-1,8],[-7,-6,-9,-2,-6,-9,8,-10,-8,10,-9]],[[-5,4,-5,-4,-10,-9,1,-5,6,-6,8],[5,-10,-5,4,-7,-6,-8,-6,5,3,-2],[3,7,-1,-6,-8,-6,-3,-1,4,8,9],[-10,-8,2,-8,8,-2,-3,-10,3,-10,-8],[-10,2,5,2,7,10,7,-9,-6,8,-1],[-2,-10,1,-2,2,6,-3,-5,-6,9,10],[-7,4,-5,1,5,-9,6,4,-6,1,-2],[4,1,2,7,-7,2,-6,-6,-2,-10,-6],[10,-6,6,-2,-2,-8,8,5,3,-8,5]],[[-1,-2,-4,6,1,-1,4,-4,8,3,-1],[5,6,9,-4,-9,7,-7,-6,-2,9,-3],[1,-9,3,4,-3,-9,-8,5,5,6,-7],[-5,-6,-1,-10,-7,-4,-1,-8,-3,5,-4],[-2,-6,4,9,5,-6,10,-7,6,3,-2],[-6,-7,-5,-3,-7,5,2,-5,1,-4,2],[-8,4,3,-1,10,-7,-10,-1,-9,-8,2],[-6,-2,5,-7,7,6,-7,-7,-5,-10,5],[-5,3,-7,-10,2,3,4,9,7,-5,7]],[[1,2,2,8,-2,-8,-7,-7,-1,3,-4],[-4,-8,-8,3,5,-1,1,9,-3,-4,-5],[5,8,-2,1,-9,8,5,10,-1,-3,-2],[-8,-6,3,1,1,-1,-3,9,8,7,5],[1,-2,-10,7,-9,-4,-5,7,6,-3,4],[-1,-9,2,6,8,1,-2,-4,3,-3,2],[-6,5,4,1,5,2,-3,-10,2,-6,9],[-5,8,-8,-7,-10,-9,6,-4,-3,1,1],[-2,2,-10,-8,-8,-1,3,7,10,-4,4]],[[-4,9,5,5,-3,-8,4,3,4,6,-6],[-5,-8,2,-7,2,-5,1,2,-8,4,9],[-2,1,-2,1,6,4,-4,8,3,3,2],[9,-9,-8,-1,-2,-9,-10,1,-10,-9,3],[-1,3,10,3,9,5,-9,10,9,-2,6],[-9,3,-4,-4,-6,-5,-10,-6,-8,-6,-10],[5,4,3,-4,10,-3,-3,-7,-3,3,-3],[-4,7,-1,-2,-8,2,-3,-8,3,-10,-10],[3,-1,10,4,-8,-10,10,-10,6,-1,9]],[[-5,-3,-2,-5,6,-8,6,-3,-1,1,-10],[7,-5,-7,1,-2,-1,-5,8,5,-9,2],[-3,6,-10,5,7,-7,5,1,-9,4,-10],[5,10,1,-5,5,-2,1,-9,9,8,-2],[-1,9,-6,2,-2,3,6,-3,8,10,10],[-1,8,9,-7,9,2,10,2,3,8,10],[-1,-7,-1,-9,8,2,-2,-2,-9,-7,-2],[2,-8,2,10,-3,2,-10,-9,-4,2,3],[-6,-3,7,-10,8,4,7,-3,7,10,8]],[[-4,10,1,5,-6,-8,-8,10,3,7,5],[5,-3,-5,-4,2,7,-8,-5,-2,-6,9],[-5,-1,8,-8,-4,-2,5,-9,-2,9,-4],[-10,1,-10,-4,8,-10,2,7,-3,-2,7],[6,-8,-8,8,5,-10,9,1,1,-5,-10],[-10,-6,7,10,9,1,-2,6,10,-7,-8],[-10,-4,-10,-1,5,-7,-4,10,10,10,7],[-10,-2,-6,1,-7,-3,-2,-9,3,-6,-6],[-7,-6,6,-10,-8,7,9,10,7,2,10]],[[3,9,-5,10,-9,8,6,3,-8,-4,-10],[-8,4,-10,5,10,-9,-8,8,-4,5,-4],[5,-4,-8,-9,3,9,-5,6,8,10,7],[-10,5,1,7,10,-3,-6,-5,9,4,-9],[-6,-1,-1,2,10,-10,-7,5,-6,-7,-1],[8,-7,6,-5,-2,-10,-7,-3,-6,4,-8],[-8,-6,-9,-5,-3,-6,2,-4,9,-9,-9],[9,-9,7,-4,4,-9,8,1,-8,-8,9],[-6,-6,8,-5,4,-9,2,6,-10,-10,1]],[[6,-1,8,-9,-9,9,2,-1,-4,-3,-9],[8,3,-6,-8,-10,8,-1,3,5,-4,9],[2,5,6,9,-4,-1,-7,-9,5,-3,1],[1,-3,7,-9,-5,6,-6,-9,8,-2,-2],[7,7,-9,4,2,5,2,-5,6,-5,-2],[-3,-6,6,-1,8,-10,-9,-5,10,-10,5],[6,-6,-9,-5,2,2,10,-5,-6,10,-1],[-6,3,6,-2,-9,8,-1,6,8,5,-7],[5,7,-6,1,3,4,7,1,-8,10,-6]],[[4,8,-2,-9,-7,1,-10,-8,-6,10,8],[9,-7,-10,6,-7,-7,-2,7,8,-8,9],[-7,10,-1,-3,-8,-10,1,3,5,-6,6],[-3,-1,-8,-1,-8,-3,2,-9,-2,-7,-5],[2,6,7,-10,-1,-5,-4,-1,7,3,-8],[-3,-10,-5,7,9,-7,7,-8,8,-7,-2],[-5,8,-10,3,6,6,-2,6,10,-1,10],[-4,4,-8,4,-4,2,-2,-2,2,-4,-7],[7,8,-1,-8,-8,9,-4,-2,6,-9,9]]], dtype = "uint8")#candidate|1057|(15, 9, 11)|const|uint8
bop_1058 = relay.right_shift(var_1056.astype('uint8'), relay.reshape(const_1057.astype('uint8'), relay.shape_of(var_1056))) # shape=(15, 9, 11)
var_1065 = relay.var("var_1065", dtype = "uint8", shape = (15, 9, 11))#candidate|1065|(15, 9, 11)|var|uint8
bop_1066 = relay.logical_xor(bop_1058.astype('uint32'), relay.reshape(var_1065.astype('uint32'), relay.shape_of(bop_1058))) # shape=(15, 9, 11)
uop_1072 = relay.sqrt(bop_1066.astype('float32')) # shape=(15, 9, 11)
bop_1076 = relay.logical_and(uop_1072.astype('bool'), relay.reshape(var_1056.astype('bool'), relay.shape_of(uop_1072))) # shape=(15, 9, 11)
output = bop_1076
output2 = bop_1076
func_1083 = relay.Function([var_1056,var_1065,], output)
mod['func_1083'] = func_1083
mod = relay.transform.InferType()(mod)
var_1084 = relay.var("var_1084", dtype = "uint8", shape = (15, 9, 11))#candidate|1084|(15, 9, 11)|var|uint8
var_1085 = relay.var("var_1085", dtype = "uint8", shape = (15, 9, 11))#candidate|1085|(15, 9, 11)|var|uint8
output = func_1083(var_1084,var_1085,)
func_1086 = relay.Function([var_1084,var_1085,], output)
mutated_mod['func_1086'] = func_1086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_1123 = relay.TupleGetItem(func_888_call(), 0)
call_1124 = relay.TupleGetItem(func_889_call(), 0)
output = relay.Tuple([call_1123,])
output2 = relay.Tuple([call_1124,])
func_1137 = relay.Function([], output)
mod['func_1137'] = func_1137
mod = relay.transform.InferType()(mod)
output = func_1137()
func_1138 = relay.Function([], output)
mutated_mod['func_1138'] = func_1138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_351_call = mod.get_global_var('func_351')
func_352_call = mutated_mod.get_global_var('func_352')
call_1166 = relay.TupleGetItem(func_351_call(), 2)
call_1167 = relay.TupleGetItem(func_352_call(), 2)
func_768_call = mod.get_global_var('func_768')
func_769_call = mutated_mod.get_global_var('func_769')
call_1185 = relay.TupleGetItem(func_768_call(), 0)
call_1186 = relay.TupleGetItem(func_769_call(), 0)
func_922_call = mod.get_global_var('func_922')
func_923_call = mutated_mod.get_global_var('func_923')
call_1191 = relay.TupleGetItem(func_922_call(), 0)
call_1192 = relay.TupleGetItem(func_923_call(), 0)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_1195 = relay.TupleGetItem(func_147_call(), 0)
call_1196 = relay.TupleGetItem(func_149_call(), 0)
output = relay.Tuple([call_1166,call_1185,call_1191,call_1195,])
output2 = relay.Tuple([call_1167,call_1186,call_1192,call_1196,])
func_1208 = relay.Function([], output)
mod['func_1208'] = func_1208
mod = relay.transform.InferType()(mod)
mutated_mod['func_1208'] = func_1208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1208_call = mutated_mod.get_global_var('func_1208')
call_1209 = func_1208_call()
output = call_1209
func_1210 = relay.Function([], output)
mutated_mod['func_1210'] = func_1210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_731_call = mod.get_global_var('func_731')
func_733_call = mutated_mod.get_global_var('func_733')
call_1263 = func_731_call()
call_1264 = func_731_call()
output = relay.Tuple([call_1263,])
output2 = relay.Tuple([call_1264,])
func_1274 = relay.Function([], output)
mod['func_1274'] = func_1274
mod = relay.transform.InferType()(mod)
mutated_mod['func_1274'] = func_1274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1274_call = mutated_mod.get_global_var('func_1274')
call_1275 = func_1274_call()
output = call_1275
func_1276 = relay.Function([], output)
mutated_mod['func_1276'] = func_1276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1323 = relay.var("var_1323", dtype = "bool", shape = (15, 14, 15))#candidate|1323|(15, 14, 15)|var|bool
const_1324 = relay.const([[[False,True,False,True,False,True,False,False,False,False,True,True,True,False,True],[True,True,True,False,True,True,False,False,False,False,False,False,True,False,True],[False,False,True,False,True,True,True,True,False,False,False,True,True,True,True],[False,False,False,False,False,True,True,True,False,True,True,False,False,False,False],[True,False,False,False,False,True,False,False,True,False,False,True,True,True,False],[True,False,True,True,False,True,True,True,False,True,False,True,True,False,False],[True,False,False,True,False,True,False,False,True,True,False,True,False,False,False],[True,True,False,False,False,False,True,True,True,False,False,False,True,True,False],[True,False,False,False,True,True,True,False,True,False,True,False,True,False,False],[True,True,True,False,True,True,False,False,True,False,False,True,False,False,True],[False,True,True,True,True,True,False,False,True,True,False,False,True,True,False],[True,True,True,False,True,False,False,True,True,True,True,True,False,True,True],[True,False,True,True,True,False,False,True,True,True,False,True,True,False,True],[False,True,False,True,False,True,False,False,False,True,True,False,False,True,True]],[[False,True,True,True,False,False,True,False,True,False,True,False,False,False,False],[True,False,True,True,False,True,False,False,True,False,True,False,False,True,False],[False,True,True,True,False,True,False,False,True,True,False,False,True,False,False],[True,True,True,True,False,True,False,False,True,False,True,False,False,True,True],[False,True,True,True,True,True,False,True,True,True,False,False,True,False,False],[False,True,False,True,False,False,False,True,True,True,True,False,True,True,True],[False,False,True,True,True,False,True,False,True,False,True,True,False,True,True],[True,True,True,True,False,True,True,False,False,False,True,True,False,False,True],[False,False,True,True,False,False,True,True,False,False,True,False,True,False,True],[True,True,False,False,False,False,True,True,False,False,False,True,True,False,True],[False,False,True,True,True,True,False,False,False,False,False,False,False,False,False],[True,True,True,True,True,True,True,False,False,True,False,False,False,False,True],[True,False,True,True,False,True,False,False,True,True,False,False,True,True,False],[True,False,True,False,False,False,True,True,False,True,True,True,False,True,True]],[[True,True,True,False,False,True,True,False,True,True,True,False,True,False,True],[True,True,True,False,True,True,False,False,True,False,False,False,True,False,True],[False,True,False,False,True,False,True,True,True,True,False,False,True,True,True],[False,False,False,True,False,False,True,False,False,False,False,False,False,False,False],[True,False,True,False,False,True,False,False,False,True,True,False,False,False,True],[True,False,True,True,True,True,True,False,True,False,False,True,False,False,True],[True,False,False,False,False,False,True,False,False,True,False,True,True,False,True],[False,True,True,True,False,True,False,False,True,True,False,False,True,False,False],[False,True,False,False,False,False,True,True,True,True,True,True,True,False,True],[False,True,False,False,False,False,True,True,False,False,False,False,False,True,True],[True,False,False,True,False,False,False,True,False,True,True,True,False,False,True],[True,False,False,True,False,True,True,True,False,False,False,False,False,False,False],[True,True,False,False,True,False,False,True,False,False,False,True,True,False,True],[True,True,True,True,False,False,False,True,True,False,True,True,True,False,False]],[[True,True,True,True,True,False,True,False,True,True,False,True,False,False,True],[True,True,False,True,False,False,True,True,False,False,True,True,False,False,True],[False,True,True,True,False,False,False,False,False,True,True,True,True,False,True],[False,True,False,True,False,False,True,True,True,True,False,True,True,False,True],[False,False,True,True,True,True,False,True,True,False,True,True,True,False,True],[False,False,False,False,True,True,True,True,False,False,False,False,True,True,False],[True,False,False,False,True,False,True,True,True,True,False,False,False,True,False],[True,False,True,True,False,False,False,True,True,True,False,False,True,True,True],[False,False,True,False,False,True,False,False,False,False,True,False,False,True,False],[True,False,False,False,True,False,False,False,False,False,True,False,False,False,True],[True,False,False,True,True,False,False,True,False,False,True,True,True,False,False],[True,True,False,True,True,False,True,True,False,True,True,True,True,True,True],[True,True,False,True,False,True,True,False,False,False,False,False,True,True,False],[False,False,True,False,True,False,False,True,True,False,False,True,True,False,False]],[[True,True,True,True,False,True,False,True,True,False,True,False,False,True,True],[False,True,False,True,True,True,True,False,False,True,False,True,False,False,True],[False,True,False,False,False,False,True,False,True,True,False,True,True,True,False],[False,True,True,False,True,False,False,False,False,False,True,True,True,True,True],[False,False,False,False,False,False,False,True,False,False,False,False,True,True,True],[True,False,True,False,False,False,False,False,False,True,True,False,False,False,True],[True,True,True,True,True,True,True,False,True,True,False,True,True,True,True],[True,False,True,False,False,True,False,False,False,False,True,True,False,True,True],[False,False,False,True,True,False,True,False,False,False,True,False,True,True,True],[False,False,True,True,False,True,True,False,True,True,False,True,False,True,False],[True,True,True,False,False,False,False,True,True,False,True,False,False,True,True],[True,True,True,False,True,True,True,False,True,False,True,False,True,True,True],[False,False,False,True,False,False,True,False,False,False,False,True,True,False,False],[False,True,False,False,True,True,True,False,True,True,True,False,True,False,True]],[[False,False,True,False,True,False,False,True,False,False,True,True,False,False,True],[False,True,True,False,True,False,True,False,True,False,True,False,False,False,False],[True,False,True,True,False,False,True,True,True,True,True,True,False,True,True],[False,False,False,True,False,True,True,False,False,False,False,True,False,True,False],[True,False,False,False,True,True,False,False,False,False,False,True,True,False,True],[False,False,True,True,True,True,False,True,True,False,True,False,False,False,True],[False,True,True,False,True,True,True,True,True,True,True,True,True,False,False],[False,True,False,True,False,False,False,False,True,False,True,False,False,True,False],[True,True,True,False,True,False,True,True,False,True,False,True,False,True,False],[False,True,True,True,False,True,True,True,True,False,True,False,False,True,True],[True,False,False,False,False,False,True,False,True,True,True,True,False,True,True],[False,False,False,True,True,True,False,False,False,False,False,True,False,False,False],[False,True,False,False,False,False,False,True,False,True,False,True,True,False,True],[False,True,True,False,False,False,True,True,False,True,True,False,False,True,False]],[[False,True,False,False,False,False,True,False,True,True,False,True,True,True,True],[False,True,False,True,True,True,True,True,False,True,False,True,True,True,False],[True,True,False,True,False,False,True,True,False,False,False,False,True,True,True],[True,True,False,True,False,False,False,True,True,False,False,True,True,True,False],[False,True,False,False,False,False,False,False,True,False,False,True,True,False,True],[False,True,False,True,False,True,True,True,False,False,True,True,True,True,False],[False,True,True,False,True,False,False,True,False,True,True,False,False,False,False],[True,True,True,False,False,False,True,True,True,True,True,False,False,False,True],[True,False,False,False,False,True,False,False,False,False,True,False,True,False,False],[True,True,True,True,True,True,True,False,False,False,False,True,False,False,False],[False,True,False,False,False,True,False,False,True,False,True,True,False,False,True],[True,True,False,False,False,False,False,True,False,False,True,False,False,False,True],[False,False,False,False,False,False,True,False,True,True,True,False,False,True,False],[True,False,True,True,True,False,True,True,True,False,True,True,False,True,True]],[[True,True,True,False,False,True,False,True,False,True,False,True,True,False,False],[True,True,True,True,True,False,True,False,True,False,False,False,True,True,False],[False,False,True,True,False,True,True,True,True,True,False,True,False,False,False],[False,True,True,True,False,False,True,True,True,False,False,True,True,True,False],[True,False,True,False,True,True,False,False,False,True,True,True,False,True,True],[False,False,False,False,True,True,False,True,False,True,True,False,True,False,False],[True,True,False,False,False,True,False,False,False,False,True,True,True,True,True],[False,False,True,True,False,False,False,False,True,False,False,True,True,True,True],[True,False,True,True,True,True,False,True,True,False,True,False,False,True,True],[True,True,True,False,False,True,False,False,False,False,True,False,True,False,True],[False,True,True,True,False,False,False,False,True,True,True,True,True,True,False],[True,False,True,False,False,False,False,False,False,False,False,True,False,True,True],[True,False,False,False,True,False,True,False,True,False,True,False,True,True,True],[True,False,True,True,False,True,True,False,True,True,False,False,True,False,True]],[[False,True,True,True,False,True,True,True,True,False,True,False,False,True,True],[True,False,True,False,True,False,True,False,False,True,False,True,True,True,True],[False,True,True,False,False,True,True,False,False,False,False,True,False,True,False],[False,False,True,True,True,False,True,False,True,False,True,True,True,False,False],[False,True,True,True,True,False,False,False,False,False,False,False,False,False,True],[False,False,False,True,False,True,False,True,True,True,True,True,False,False,True],[False,True,False,True,False,True,True,True,True,True,True,True,False,True,False],[True,False,False,True,True,False,False,True,False,False,False,True,True,False,False],[False,False,True,True,False,True,False,True,False,False,True,False,True,True,True],[True,False,True,False,False,True,False,False,False,False,False,True,False,True,True],[False,False,False,True,True,False,False,True,True,True,True,False,True,True,True],[False,False,False,False,False,False,True,True,False,True,True,True,False,True,False],[False,True,False,False,False,True,False,True,True,True,False,False,False,True,True],[True,True,False,True,True,False,True,False,True,False,False,True,True,False,False]],[[True,False,False,False,False,False,True,False,True,False,False,True,True,False,False],[False,True,False,False,True,True,True,False,False,False,False,False,True,True,False],[False,True,True,False,True,True,False,False,False,False,True,False,True,False,False],[False,False,True,False,True,False,True,False,True,True,False,True,True,False,True],[False,False,False,True,False,True,False,False,True,False,False,False,False,False,False],[False,False,True,False,False,False,False,True,False,True,True,False,True,False,False],[False,False,False,False,True,False,True,False,True,False,False,True,True,True,True],[True,True,True,False,True,True,False,False,True,False,True,False,True,False,False],[True,False,True,False,False,False,False,True,False,True,False,True,True,True,False],[False,False,True,False,True,True,True,True,True,False,False,False,False,True,True],[True,False,True,False,False,False,False,True,True,True,False,True,False,True,False],[False,False,True,True,False,False,False,True,True,True,False,True,False,False,False],[True,True,True,False,True,True,False,False,False,False,True,True,True,True,False],[False,True,False,True,False,False,True,True,False,False,False,False,False,False,False]],[[False,True,False,True,False,True,True,False,True,True,False,False,False,False,True],[True,False,False,True,True,True,False,False,False,False,False,False,False,False,True],[False,True,False,False,False,False,False,True,True,True,True,True,False,True,True],[True,False,True,False,False,False,True,False,False,True,False,True,True,False,True],[False,False,False,True,True,True,True,True,False,False,False,True,False,False,True],[True,False,True,True,False,True,True,True,True,False,False,True,True,True,True],[False,False,False,True,True,True,False,False,False,False,True,False,False,True,True],[True,False,True,False,True,True,False,True,False,True,True,False,True,False,True],[False,False,True,False,True,False,True,True,True,True,False,False,False,False,True],[True,True,True,False,True,True,True,True,False,True,True,True,True,False,True],[False,False,True,False,True,True,False,False,False,True,False,False,True,False,False],[False,True,True,False,True,True,True,False,False,True,True,True,False,False,True],[True,False,False,False,False,True,True,True,True,False,False,True,False,False,True],[True,False,False,False,False,True,True,True,True,False,False,False,True,False,False]],[[True,True,True,True,False,True,False,True,False,True,True,True,True,False,True],[False,True,True,True,True,False,False,True,True,False,True,False,False,False,False],[True,True,False,False,False,False,True,False,True,False,False,True,True,True,True],[False,True,False,True,False,True,True,True,False,True,True,True,True,True,False],[True,False,True,True,False,False,True,False,False,True,False,False,False,True,True],[True,True,True,True,False,True,False,False,False,True,True,True,False,False,True],[False,True,True,False,True,False,False,False,False,False,True,False,True,True,True],[False,False,False,True,True,False,True,False,False,True,True,True,True,True,True],[False,False,True,True,False,False,True,False,False,True,False,False,True,True,True],[False,False,False,False,True,True,True,False,True,True,False,False,True,True,False],[False,True,False,True,False,False,True,False,False,False,True,False,False,True,False],[True,True,False,True,False,True,True,True,False,False,False,False,True,True,True],[True,False,False,True,True,False,True,True,False,True,True,False,True,True,True],[True,False,False,True,False,False,True,True,True,True,True,False,True,False,True]],[[False,True,True,False,False,True,False,True,False,True,False,True,True,False,False],[False,True,False,False,True,False,True,False,True,False,True,True,False,False,True],[False,False,True,True,False,True,False,False,True,False,True,True,True,False,True],[True,False,True,False,True,False,False,False,False,False,False,True,True,True,True],[False,True,True,True,False,True,True,True,True,False,True,True,True,True,True],[True,False,False,False,False,True,False,True,True,False,True,True,True,False,False],[False,False,True,True,False,False,False,True,True,True,True,False,False,False,True],[False,True,False,False,True,False,True,True,True,False,True,False,True,False,False],[False,False,True,True,True,True,True,True,False,False,True,True,True,True,True],[False,True,True,False,True,False,True,False,False,False,False,True,True,False,False],[True,False,False,False,True,False,True,True,True,True,True,False,False,False,False],[False,True,True,True,True,True,True,False,True,True,True,False,True,False,False],[True,True,False,True,False,True,True,True,False,True,True,False,True,True,False],[True,True,True,True,False,True,False,False,True,True,True,False,True,False,False]],[[True,True,False,True,True,False,True,False,True,True,True,False,True,True,False],[False,False,True,True,True,False,False,True,False,False,True,True,False,False,False],[True,False,True,True,True,False,True,False,True,False,False,False,True,True,True],[True,True,False,False,True,True,False,True,True,False,True,False,False,False,False],[False,True,False,True,False,False,False,True,False,True,True,False,True,False,False],[True,True,True,True,False,False,False,False,False,True,True,True,True,True,True],[False,True,False,False,False,False,False,False,True,True,True,True,True,True,True],[True,False,True,True,True,True,True,True,True,True,True,False,True,False,True],[False,False,False,True,True,True,True,True,True,True,False,True,False,False,False],[True,True,False,False,False,True,True,False,False,True,True,True,True,False,False],[True,True,False,True,False,True,False,True,True,False,False,True,True,False,True],[True,False,True,True,False,True,False,False,True,False,True,True,False,False,True],[False,True,False,False,True,False,False,True,False,True,True,False,False,False,True],[False,True,True,True,False,True,False,False,True,False,True,False,True,True,True]],[[False,True,False,True,True,True,True,True,True,True,False,False,False,True,True],[True,True,False,False,False,True,True,False,True,True,False,False,True,True,True],[False,False,False,True,True,False,False,False,True,True,False,False,False,False,True],[True,True,False,True,True,False,False,False,False,False,True,True,False,True,False],[False,True,False,False,False,True,False,True,False,False,False,False,False,False,False],[True,True,True,True,True,False,True,True,False,True,True,False,False,False,True],[True,False,False,True,False,True,True,True,False,True,True,False,True,True,True],[True,False,False,False,True,True,False,False,True,False,True,False,False,False,False],[True,True,False,False,False,True,True,True,False,True,False,True,True,True,False],[False,False,False,True,False,True,False,False,True,True,True,False,False,True,False],[False,True,True,True,True,False,False,False,True,False,True,False,True,False,True],[True,True,False,True,False,False,False,False,True,True,False,False,True,False,True],[False,False,False,True,True,True,True,True,True,True,True,False,True,False,True],[False,True,False,False,False,False,True,False,False,False,True,False,False,True,False]]], dtype = "bool")#candidate|1324|(15, 14, 15)|const|bool
bop_1325 = relay.logical_and(var_1323.astype('bool'), relay.reshape(const_1324.astype('bool'), relay.shape_of(var_1323))) # shape=(15, 14, 15)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_1328 = relay.TupleGetItem(func_888_call(), 0)
call_1329 = relay.TupleGetItem(func_889_call(), 0)
output = relay.Tuple([bop_1325,call_1328,])
output2 = relay.Tuple([bop_1325,call_1329,])
func_1334 = relay.Function([var_1323,], output)
mod['func_1334'] = func_1334
mod = relay.transform.InferType()(mod)
mutated_mod['func_1334'] = func_1334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1335 = relay.var("var_1335", dtype = "bool", shape = (15, 14, 15))#candidate|1335|(15, 14, 15)|var|bool
func_1334_call = mutated_mod.get_global_var('func_1334')
call_1336 = func_1334_call(var_1335)
output = call_1336
func_1337 = relay.Function([var_1335], output)
mutated_mod['func_1337'] = func_1337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_876_call = mod.get_global_var('func_876')
func_877_call = mutated_mod.get_global_var('func_877')
call_1399 = relay.TupleGetItem(func_876_call(), 2)
call_1400 = relay.TupleGetItem(func_877_call(), 2)
output = relay.Tuple([call_1399,])
output2 = relay.Tuple([call_1400,])
func_1409 = relay.Function([], output)
mod['func_1409'] = func_1409
mod = relay.transform.InferType()(mod)
mutated_mod['func_1409'] = func_1409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1409_call = mutated_mod.get_global_var('func_1409')
call_1410 = func_1409_call()
output = call_1410
func_1411 = relay.Function([], output)
mutated_mod['func_1411'] = func_1411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_1478 = relay.TupleGetItem(func_888_call(), 0)
call_1479 = relay.TupleGetItem(func_889_call(), 0)
output = relay.Tuple([call_1478,])
output2 = relay.Tuple([call_1479,])
func_1480 = relay.Function([], output)
mod['func_1480'] = func_1480
mod = relay.transform.InferType()(mod)
mutated_mod['func_1480'] = func_1480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1480_call = mutated_mod.get_global_var('func_1480')
call_1481 = func_1480_call()
output = call_1481
func_1482 = relay.Function([], output)
mutated_mod['func_1482'] = func_1482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_1483 = func_666_call()
call_1484 = func_666_call()
var_1486 = relay.var("var_1486", dtype = "float32", shape = (165,))#candidate|1486|(165,)|var|float32
bop_1487 = relay.right_shift(call_1483.astype('int64'), relay.reshape(var_1486.astype('int64'), relay.shape_of(call_1483))) # shape=(165,)
bop_1490 = relay.right_shift(call_1484.astype('int64'), relay.reshape(var_1486.astype('int64'), relay.shape_of(call_1484))) # shape=(165,)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_1517 = func_666_call()
call_1518 = func_666_call()
func_251_call = mod.get_global_var('func_251')
func_253_call = mutated_mod.get_global_var('func_253')
const_1525 = relay.const([-7.753909,-5.457916,-5.927447,-7.988831,-0.346803,8.336495,-4.144505,-0.255759,-4.423962,-6.777074,-1.492257,-6.065521,-8.324123,0.685189,-6.933373,-4.149270,9.812940,-1.478877,-6.381667,-8.814497,1.338548,-2.139030,-4.736335,7.154442,0.430102,5.887615,0.389283,6.975763,-0.831320,-7.399743,6.869168,5.550517,7.226231,1.658258,-5.509278,0.981411,0.196189,-5.388377,-1.005739,-7.027946,7.281050,2.640241,2.650850,9.634707,-1.216028,-7.010757,-1.204186,-2.452225,1.544310,1.824283,-3.229681,7.142653,-9.523567,9.892267,-3.914896,5.463605,8.674481,-4.749847,1.245517,1.801523,6.241078,-0.396696,1.038822,-8.749342,-6.576792,1.638404,-7.168240,-1.890214,-4.686901,7.786057,8.466336,-5.274599,-6.943215,1.823977,-6.948767,2.484249,-1.449396,-9.273680,-7.802600,-2.120547,-0.055896,2.575567,2.898455,-2.525767,7.568130,-7.452706,-8.743806,-0.113534,4.285614,-7.085203,-6.720703,-6.179117,7.108631,-2.641296,8.021864,-6.185191,-0.645822,-3.551514,7.159968,6.081672,-2.401862,3.904321,2.822443,3.729000,8.965443,-6.976042,6.823470,-5.272759,7.482438,9.079011,-2.305177,8.257160,1.027183,-1.871018,-5.367349,-7.751518,9.224368,7.452240,3.173504,4.726054,-7.338574,-9.254900,-1.163038,4.746003,6.037537,-7.610486,-0.091877,0.659569,7.823006,4.586930,8.072574,5.821889,6.505638,4.455829,6.216355,-1.836777,8.562437,-3.501127,9.512529,4.122283,-5.903079,-4.130678,4.235259,-1.829692,7.450728,-3.210373,5.478531,1.399670,-2.389883,0.815636,-0.147352,-4.700384,-3.398429,0.056142,-7.308704,2.766755,1.926936,0.369601,7.869496,3.102129,0.058313,1.509190,8.335685,-3.165621,-8.630837,-1.739115,5.354859,-5.193294,8.751118,2.980954,-7.085007,-6.896500,6.658058,6.367928,9.957137,2.458041,-1.302964,-4.409207,-5.482996,-4.698586,-1.803826,6.921945,8.488598,-3.960441,0.589803,-3.973654,-4.819176,2.178381,-2.949368,-7.539650,-2.153108,6.298647,-6.631273,-9.241027,-4.364435,4.708785,2.690816,-6.602832,-1.840473,6.856328,-5.183908,-8.652642,-8.233632,-6.679368,-8.018422,6.538808,9.721404,6.088051,-2.610667,-4.645421,-3.116465,1.687584,-8.518910,-1.292347,-2.700921,-4.265124,5.633620,5.498395,9.044390,7.953361,-2.144850,-6.984293,9.664080,-9.351000,5.721489,-6.658186,-3.585551,-0.509743,5.666149,-9.357452,-6.967350,-1.406785,6.368750,-1.898686,-2.564143,-4.621699,-4.416811,-4.126948,-8.692267,4.973461,4.329803,-9.265970,0.207593,-8.791373,8.709543,4.967980,6.303837,-9.377185,6.214356,1.421483,-9.025790,3.296727,-0.488955,-7.966582,-1.227923,3.787898,5.074367,2.701793,-3.276132,3.946239,-1.691641,6.031036,-1.888010,-1.584961,-2.597677,2.907203,5.370946,1.649155,-3.157188,0.093141,3.015950,-3.455027,-6.689170,-4.221045,8.147225,-6.466238,-5.799144,-5.745744,4.931324,-2.639032,-8.807458,-7.809688,-2.541347,-9.872371,3.594514,4.201023,-9.544335,4.183844,-4.710489,2.851214,2.380597,1.067135,4.490848,0.751886,5.814131,4.115917,0.311635,8.558878,5.388905,5.102416,0.102023,-4.096069,-1.361188,-4.538953,0.146951,1.091636,-3.087551,-5.885333,-3.934260,-0.171298,6.234170,2.784732,-9.951062,5.666470,-3.325248,-6.144076,7.310947,0.353518,5.251432,-3.776622,5.296981,5.296930,2.182073,-9.423880,8.001327,2.559051,-8.566554,-6.722608,7.022351,-7.457355,-1.626376,-2.663732,9.581247,3.486326,3.932882,0.764745,1.429070,-0.267356,-3.242815,-5.372453,-4.214990,6.963348,3.220159,0.373091,7.884588,-0.030232,-4.242476,5.272535,1.559936,-8.065251,1.502335,5.439216,0.522000,6.018261,-4.404840,9.278445,4.138962,6.567293,-8.879686,2.825345,6.190280,1.868892,-8.108385,9.737662,-0.033641,3.842978,-1.762132,-9.702120,-6.248647,5.593830,-7.700354,0.079431,7.097799,-9.616878,4.511756,6.721495,1.236508,6.004801,-6.952312,6.624905,-2.122300,-6.280635,-3.937782,-6.693485,-1.194678,9.049812,3.029022,-2.124216,-9.032612,-0.851908,-1.490502,-2.263272,6.677718,-6.987954,-8.096029,-9.959904,-3.085582,9.324116,1.128671,9.856267,-9.362725,-7.703309,-3.196219,-6.411529,6.738582,-3.131062,4.145604,-9.327032,-2.260230,-7.622320,-1.826707,-5.443706,6.998691,6.920513,6.210908,-2.076936,-4.706095,7.093260,8.195525,7.404674,4.508267,-4.507690,-2.370173,4.565583,6.715288,0.216366,-8.597670,-1.976981,-7.147131,-4.773512,0.272477,3.864379,-3.054311,-2.591688,-6.303096,-7.609682,1.383377,-0.369890,8.622840,3.892379,5.677810,8.427352,-4.208101,3.898683,9.917738,-5.225059,-8.146111,-9.787641,8.888008,-2.037021,-4.378880,8.087620,-8.969195,8.156561,0.306266,-6.280812,-8.470700,-0.584376,-6.140803,6.469120,9.340024,-7.087303,8.455399,-6.280802,1.374224,-8.302632,-8.348039,1.217016,-1.270721,-8.840926,9.920493,-6.652246,-2.205168,-1.365838,4.224872,5.573388,-9.050952,-3.617191,-3.217509,-2.653927,-0.627209,-8.702443,-6.283763,6.105626,-3.558558,-4.927786,-7.380927,9.429887,4.746652,2.200827,2.082870,0.150615,-3.608318,6.360659,9.469748,-0.827993,0.994674,-4.284680,7.274702,-9.785607,5.072873,0.099399,1.893748,9.884335,3.010485,9.454597,2.665919,-3.690228,2.376045,-1.164819,4.372207,-4.751930,3.823816,-6.313947,-2.770547,5.314159,5.809190,1.507499,3.909972,3.872987,-6.559830,-6.336414,2.105969,2.697782,-5.724629,8.660204,2.524596,-9.303285,-2.868611,4.796795,2.522251,9.464128,0.554329,-3.470995,8.840010,1.125712,-4.215612,5.504967,-1.010438,-4.181875,-1.742967,-6.627546,3.296855,3.757363,5.245323,-8.441531,1.254930,1.035665,9.074915,9.291097,7.979286,-0.063092,-2.289697,-2.596626,-7.893888,-8.441298,-1.424637,-0.516843,1.674831,-6.684454,-8.724069,-0.991671,-4.797846,9.235857,5.420683,-1.124595,7.395320,-7.924201,-9.097872,5.847065,-6.670253,1.714779,-3.601024,-7.583506,0.510022,3.537626,-2.191813,0.227791,4.657757,-5.784233,-9.426038,-6.855513,7.467450,4.832021,9.153772,-1.462780,-1.307474,-4.243664,-0.469141,6.133918,7.510949,0.693418,-1.827566,-1.569578,8.156446,-2.659636,8.153450,-1.451685,4.865884,-8.380817,-6.230241,-0.421229,2.191708,0.322737,-8.481235,1.635785,5.141083,3.889848,-3.385092,-0.421679,-9.300529,9.916759,9.194661,-6.607410,9.886584,5.014253,9.862665,1.008469,-6.401650,-2.822088,7.908918,4.766106,4.721578,-5.731671,-0.789935,9.994348,7.556438,7.958694,-5.638574,8.112411,-7.140932,6.193871,4.149341,-1.220648,-3.992189,-5.621245,4.034292,-1.758866,-5.947901,-3.076318,5.108160,2.045013,-1.499523,7.603692,-3.722835,-4.538184,4.054191,-1.767688,-5.214697,8.606213,-9.109155,-6.948904,7.788639,-2.999068,7.306983,-2.827555,-3.363971,1.073298,-4.056262,-5.794089,-3.658497,-4.286728,-0.887097,-9.162356,9.792150,0.368993,6.429852,9.141611,0.426105,-7.277039,-7.334851,9.454479,-6.891158,3.258842,-2.136773,7.446291,2.246541,-9.240522,-4.487249,-4.853452,-6.335668,9.363762,-4.145807,-8.839809,-2.995834,-7.947785,-6.393961,-0.666087,5.262369,5.125139,6.541155,-3.800910,-7.871900,-8.744780,9.184399,5.134122,2.473903,4.343780,3.038118,8.101707,-8.828143,5.470359,1.734091,3.657163,6.650392,-1.389141,4.768256,2.463814,-3.294820,-9.359249,5.047858,3.190735,4.407486,-1.510540,9.245189,-4.691492,5.723341,-0.028790,7.978737,5.915863,-8.021062,4.701451,-9.386433,-7.246709,5.926267,-3.863420,-1.085220,2.150846,-3.265172,-9.569168,7.857386,3.718179,-8.293837,7.089591,0.744526,3.705255,6.769837,7.052441,1.861536,-0.213982,6.306284,5.732146,-9.080976,1.256905,-4.561924,-1.944364,-5.844247,4.558877,3.472388,8.504449,8.154964,5.242800,3.342401,5.876853,-6.111258,4.711984,-6.041826,6.655648,0.613019,-2.650452,-0.406544,2.683886,-0.390408,-4.046418,-0.099889,7.664340,-1.630360,-6.011976,2.925566,-9.203687,3.095367,5.385041,9.367537,-0.476827,1.354756,-6.827510,-7.190833,3.315011,-2.210960,-7.596565,8.533961,0.531612,-5.562390,9.349256,4.333486,4.981108,-5.778815,-8.416755,9.419522,-9.875223,8.398899,8.394163,3.482846,7.471740,-2.162971,-3.237580,1.448619,7.589711,4.779860,8.154488,-2.343333,4.801507,-6.906092,-5.873644,-7.372869,-5.491572,-3.837944,7.421441,-9.172430,2.582318,2.853377,-2.336164,3.102611,-0.848009,0.415207,4.599300,5.645538,-9.514735,3.844753,4.320325,5.300827,6.272986,9.686705,7.960115,4.157951,-4.275399,-7.959960,6.681469,-1.652203,-3.956312,-7.104283,-0.194043,-6.821654,9.712251,8.726036,-4.371677,-8.250785,-9.936089,-4.252866,-6.456806,3.523197,-8.981931,7.862106,1.331877,-7.746741,9.841729,-5.851362,-5.935808,-7.197664,-9.425726,-1.417653,4.313573,-8.595968,8.609930,9.324556,7.736561,-2.854839,3.693283,2.090253,-1.706180,-8.397133,-7.666851,2.479896,-2.440511,-3.964707,6.240379,8.756626,-3.315107,1.047897,-1.610472,7.896580,3.916287,-2.208343,0.632593,5.723688,9.064436,-3.242245,-1.390590,-4.820582,8.730478,3.372643,6.379384,7.997094,1.452597,2.043919,-5.081942,3.400021,5.160048,-5.098399,8.942020,-3.246327,0.234400,8.055882,-2.028653,-8.613053,-9.166842,-9.096605,-2.956417,9.615903,-4.821807,-5.773988,4.015721,-6.072588,3.789421,-1.822452,3.469592,0.531125,3.489069,-4.081776,-4.081734,5.004617,7.317617,-1.352841,-7.939494,5.860750,5.621997,6.692708,3.206962,4.729342,-1.883559,3.945304,-8.822972,-1.586152,8.944560,2.918979,-6.170083,3.627944,-3.258057,1.332435,6.055411,-0.596696,-5.187094,-7.780451,7.100597,-3.352871,5.046299,3.162460,-3.759852,3.496052,6.950581,6.573315,7.061508,8.610570,6.831291,-6.286399,6.630462,5.302208,-4.249229,6.763420,4.467839,0.762420,1.947696,-9.852246,0.191528,-9.111902,-7.126396,-5.024755,-0.236211,8.005969,-1.430544,-9.475469,-2.638426,-0.763506,2.661734,4.532651,8.957683,4.305266,3.308501,9.715941,0.549731,5.052197,2.674991,-6.624498,8.873536,9.419876,1.384808,5.329471,0.699330,2.423046,6.153809,5.837370,6.692335,-5.800496,-7.151015,3.326099,7.906137,1.079443,-5.131527,-2.367158,-8.917428,-5.146371,8.110317,6.701691,2.330513,-4.772828,1.455063,8.818077,-8.538285,-3.785750,1.830351,1.365833,-4.690306,-5.154531,-1.878478,5.657745,-7.189250,-5.928379,9.454739,5.781274,-5.064499,-7.992223,5.921381,0.341228,2.303684,1.813713,7.548480,6.292055,3.687388,3.819498,-5.330641,-7.150065,-2.699585,-3.545424,8.882721,-8.617157,5.601115,2.107314,-5.274650,4.807871,-7.199563,9.657313,1.205794,-5.456401,-8.194038,-6.857924,-7.883060,5.862146,4.484653,-1.524533,0.618399,0.032173,3.708622,-4.283861,0.980066,4.025146,-2.885519,1.241349,6.809900,-4.999248,7.291407,-2.450206,-1.075428,-6.084087], dtype = "float32")#candidate|1525|(1053,)|const|float32
call_1524 = relay.TupleGetItem(func_251_call(relay.reshape(const_1525.astype('float32'), [13, 9, 9])), 0)
call_1526 = relay.TupleGetItem(func_253_call(relay.reshape(const_1525.astype('float32'), [13, 9, 9])), 0)
output = relay.Tuple([bop_1487,call_1517,call_1524,const_1525,])
output2 = relay.Tuple([bop_1490,call_1518,call_1526,const_1525,])
func_1536 = relay.Function([var_1486,], output)
mod['func_1536'] = func_1536
mod = relay.transform.InferType()(mod)
mutated_mod['func_1536'] = func_1536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1537 = relay.var("var_1537", dtype = "float32", shape = (165,))#candidate|1537|(165,)|var|float32
func_1536_call = mutated_mod.get_global_var('func_1536')
call_1538 = func_1536_call(var_1537)
output = call_1538
func_1539 = relay.Function([var_1537], output)
mutated_mod['func_1539'] = func_1539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_731_call = mod.get_global_var('func_731')
func_733_call = mutated_mod.get_global_var('func_733')
call_1636 = func_731_call()
call_1637 = func_731_call()
output = call_1636
output2 = call_1637
func_1651 = relay.Function([], output)
mod['func_1651'] = func_1651
mod = relay.transform.InferType()(mod)
mutated_mod['func_1651'] = func_1651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1651_call = mutated_mod.get_global_var('func_1651')
call_1652 = func_1651_call()
output = call_1652
func_1653 = relay.Function([], output)
mutated_mod['func_1653'] = func_1653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_1660 = relay.TupleGetItem(func_377_call(), 0)
call_1661 = relay.TupleGetItem(func_378_call(), 0)
func_876_call = mod.get_global_var('func_876')
func_877_call = mutated_mod.get_global_var('func_877')
call_1673 = relay.TupleGetItem(func_876_call(), 4)
call_1674 = relay.TupleGetItem(func_877_call(), 4)
output = relay.Tuple([call_1660,call_1673,])
output2 = relay.Tuple([call_1661,call_1674,])
func_1675 = relay.Function([], output)
mod['func_1675'] = func_1675
mod = relay.transform.InferType()(mod)
output = func_1675()
func_1676 = relay.Function([], output)
mutated_mod['func_1676'] = func_1676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_1677 = func_666_call()
call_1678 = func_666_call()
func_1334_call = mod.get_global_var('func_1334')
func_1337_call = mutated_mod.get_global_var('func_1337')
var_1698 = relay.var("var_1698", dtype = "bool", shape = (1, 3150))#candidate|1698|(1, 3150)|var|bool
call_1697 = relay.TupleGetItem(func_1334_call(relay.reshape(var_1698.astype('bool'), [15, 14, 15])), 1)
call_1699 = relay.TupleGetItem(func_1337_call(relay.reshape(var_1698.astype('bool'), [15, 14, 15])), 1)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_1700 = relay.TupleGetItem(func_147_call(), 0)
call_1701 = relay.TupleGetItem(func_149_call(), 0)
output = relay.Tuple([call_1677,call_1697,var_1698,call_1700,])
output2 = relay.Tuple([call_1678,call_1699,var_1698,call_1701,])
func_1702 = relay.Function([var_1698,], output)
mod['func_1702'] = func_1702
mod = relay.transform.InferType()(mod)
var_1703 = relay.var("var_1703", dtype = "bool", shape = (1, 3150))#candidate|1703|(1, 3150)|var|bool
output = func_1702(var_1703)
func_1704 = relay.Function([var_1703], output)
mutated_mod['func_1704'] = func_1704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1676_call = mutated_mod.get_global_var('func_1676')
call_1806 = relay.TupleGetItem(func_1675_call(), 1)
call_1807 = relay.TupleGetItem(func_1676_call(), 1)
const_1816 = relay.const([-7.663718,-3.969827,-4.069555,8.436325,5.154197,7.459955,-1.182795,8.749152,0.266632,-3.150419,0.540750,-9.495077,6.962918,-3.290806,-1.734165,7.257576,-8.508356,1.352497,-6.296808,9.283722,6.020942,0.334883,-3.477590,-4.702919,0.156237,-9.618585,8.762817,-3.056781,-0.223949,0.331929,-3.679862,0.687190,6.629381,-1.486015,8.361986,2.949813,-9.559555,-6.892783,-4.825360,-0.100589,1.644903,-1.008114,4.583729,7.480659,9.126066,-4.502090,-9.797941,-0.644538,7.002081,2.364567,-9.476928,3.189795,4.655857,7.658676,-1.782838,-4.091772,-4.633066,-4.714899,2.525853,2.650599,-8.467156,-7.780307,-5.486246,-1.757401,4.287038,-5.525759,5.881566,-7.472430,-5.856000,-5.190962,7.928657,-2.276159,9.118309,-0.817112,1.778186,3.235660,3.673665,-3.661284,-6.339965,9.965607,-3.321694,6.334619,7.288413,-8.869786,8.237256,-1.524203,0.956025,8.830849,9.226962,8.183284,4.986946,6.356736,3.540244,-6.271120,-7.923740,1.421727,-1.586078,-4.251269,9.144436,2.413875,8.617564,2.569994,-3.585215,9.884344,-7.717261,-3.725617,6.336095,9.657569,0.898515,-3.053718,2.817003,-4.124966,-4.919262,-8.912330,-3.278873,1.516802,7.203678,-5.371479,1.713496,-8.332770,8.976469,6.049715,-2.841637,9.314776,2.226931,2.372886,9.510809,-4.418633,8.197708,8.948819,-4.756974,7.807987,-0.769702,9.585602,-8.420446,5.540222,8.094260,-1.050020,2.694511,3.528950,-5.669568,-5.259697,6.619655,7.541662,6.605185,-2.329768,4.468007,9.721578,0.463158,5.615064,-8.358093,4.690880,-3.111223,3.090061,5.231195,-3.704151,-8.883412,-5.798284,8.243006,-2.639448,-6.194619,-7.051765,-7.379444,6.515373,-5.727407], dtype = "float32")#candidate|1816|(165,)|const|float32
bop_1817 = relay.divide(call_1806.astype('float32'), relay.reshape(const_1816.astype('float32'), relay.shape_of(call_1806))) # shape=(165,)
bop_1820 = relay.divide(call_1807.astype('float32'), relay.reshape(const_1816.astype('float32'), relay.shape_of(call_1807))) # shape=(165,)
func_86_call = mod.get_global_var('func_86')
func_89_call = mutated_mod.get_global_var('func_89')
call_1822 = func_86_call(relay.reshape(bop_1817.astype('float32'), [5, 11, 3]))
call_1823 = func_86_call(relay.reshape(bop_1817.astype('float32'), [5, 11, 3]))
output = relay.Tuple([bop_1817,call_1822,])
output2 = relay.Tuple([bop_1820,call_1823,])
func_1835 = relay.Function([], output)
mod['func_1835'] = func_1835
mod = relay.transform.InferType()(mod)
mutated_mod['func_1835'] = func_1835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1835_call = mutated_mod.get_global_var('func_1835')
call_1836 = func_1835_call()
output = call_1836
func_1837 = relay.Function([], output)
mutated_mod['func_1837'] = func_1837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_768_call = mod.get_global_var('func_768')
func_769_call = mutated_mod.get_global_var('func_769')
call_1841 = relay.TupleGetItem(func_768_call(), 0)
call_1842 = relay.TupleGetItem(func_769_call(), 0)
output = call_1841
output2 = call_1842
func_1848 = relay.Function([], output)
mod['func_1848'] = func_1848
mod = relay.transform.InferType()(mod)
output = func_1848()
func_1849 = relay.Function([], output)
mutated_mod['func_1849'] = func_1849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1676_call = mutated_mod.get_global_var('func_1676')
call_1850 = relay.TupleGetItem(func_1675_call(), 1)
call_1851 = relay.TupleGetItem(func_1676_call(), 1)
output = relay.Tuple([call_1850,])
output2 = relay.Tuple([call_1851,])
func_1871 = relay.Function([], output)
mod['func_1871'] = func_1871
mod = relay.transform.InferType()(mod)
mutated_mod['func_1871'] = func_1871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1871_call = mutated_mod.get_global_var('func_1871')
call_1872 = func_1871_call()
output = call_1872
func_1873 = relay.Function([], output)
mutated_mod['func_1873'] = func_1873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1871_call = mod.get_global_var('func_1871')
func_1873_call = mutated_mod.get_global_var('func_1873')
call_1880 = relay.TupleGetItem(func_1871_call(), 0)
call_1881 = relay.TupleGetItem(func_1873_call(), 0)
output = call_1880
output2 = call_1881
func_1894 = relay.Function([], output)
mod['func_1894'] = func_1894
mod = relay.transform.InferType()(mod)
output = func_1894()
func_1895 = relay.Function([], output)
mutated_mod['func_1895'] = func_1895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_1954 = relay.TupleGetItem(func_217_call(), 0)
call_1955 = relay.TupleGetItem(func_218_call(), 0)
func_1480_call = mod.get_global_var('func_1480')
func_1482_call = mutated_mod.get_global_var('func_1482')
call_1956 = relay.TupleGetItem(func_1480_call(), 0)
call_1957 = relay.TupleGetItem(func_1482_call(), 0)
func_512_call = mod.get_global_var('func_512')
func_516_call = mutated_mod.get_global_var('func_516')
const_1965 = relay.const([9.533978,9.380249,2.876669,4.338358,-7.036839,7.315301,4.237194,3.072020,-0.187410,-1.681392,-9.603945,-7.726728,9.957184,-8.068990,1.213865,7.428311,1.593220,7.876094,-1.503125,-3.079267,1.935487,-2.948451,4.789056,0.315797,-8.117813,9.930788,-8.630101,8.346148,-4.811773,-4.998865,-8.647595,-3.791606,4.577019,-1.693513,-9.326800,-3.875046,6.014824,-3.948167,-1.748602,-5.898997,-7.532118,-9.018507,-8.735179,-8.169833,0.002921,-3.192551,-9.359083,4.365847,-7.523016,3.760249,1.538339,-2.140507,-0.998152,5.536804,-0.934091,-0.683608,5.632844,0.944775,-6.630784,-3.483767,4.806654,3.476179,0.175069,5.371302,3.867959,-5.513455,-6.200103,4.977195,-0.431665,-3.847293,-6.035502,5.631670,4.328398,0.089626,-2.290412,9.046951,-1.232017,4.352565,1.007760,1.103057,3.513511,2.482020,-8.630161,7.819845,6.973755,9.915996,-5.516937,9.091597,-4.176376,1.145108,-2.568422,-5.360626,2.057943,-8.284436,-8.593333,6.941639,-6.134740,1.071844,2.520481,8.844143,-0.427510,3.734620,7.856416,-6.320397,0.323926,-5.550944,-6.594420,4.204765,-1.099482,1.145811,4.704828,-2.599473,3.158623,3.844357,-2.167383,-2.763318,7.000460,8.622718,-1.282646,-0.558982,4.628384,-5.990795,4.240694,-4.931867,3.214938,-4.042885,-8.160724,-9.092909,8.190762,3.782400,-7.649388,-4.785642,2.050889,-2.052774,-6.498306,6.291396,8.807032,1.368518,0.468577,-7.051875,0.666564,-2.284988,-3.821318,-0.709711,-8.209244,9.966841,8.489284,-2.666232,-4.390869,-3.110931,-2.443746,-2.038521,0.657696,-6.564189,0.808000,-5.890727,-7.057024,2.667273,6.243632,-5.134476,1.267695,5.722603,2.857868,0.967102,-8.889617,-3.527610,2.732265,3.918180,8.563466,-8.666501,-1.389690,2.305661,4.653630,4.462740,-8.806406,-9.653791,-6.458293,-5.106275,7.497587,8.342766,-7.553194,-6.050296,-8.665076,-8.069186,-4.261866,8.357716,6.790041,4.166877,5.163420,-5.736920,-5.738308,1.625352,-6.014711,-2.854283,5.977515,6.763560,-1.154571,7.451122,9.606550,-1.431590,-0.584370,2.714449,-9.906569,-0.172170,6.645810,-2.085062,0.567507,-7.523765,7.898813,-1.224726,-7.970338,-6.892913,6.653569,-0.953411,-7.412781,-9.099610,-0.681179,-8.107438,-8.153244,-8.396865,2.920247,0.458958,-5.367627,-1.445157,6.898154,-6.249625,3.497757,-2.567634,-8.765411,0.986349,0.647710,-8.406739,6.856904,-0.804129,7.514883,-4.715107,3.256310,-6.274132,0.226129,-6.466476,1.394053,0.994318,3.499703,7.604385,-8.789494,-5.693823,0.382354,6.496716,-4.366135,-9.156136,-7.994593,-6.275797,7.971050,3.531738,-6.516849,0.641858,-8.427774,-9.776929,-9.206744,0.448417,-6.973592,-9.274581,-9.483912,0.698960,4.366006,4.180420,-6.004039,-6.151182,-6.809924,-9.772267,8.179649,-6.733608,-9.211044,5.105906,-1.420798,9.574760,3.352268,-9.576973,0.627468,-9.663020,-0.929645,-7.126643,6.278844,-5.684325,-8.692878,-3.619881,-3.048243,7.283779,6.415141,0.877493,-7.543518,4.419015,-2.700068,8.019627,3.765204,-8.018349,2.107960,-9.994490,4.703656,-7.120853,1.030626,4.297143,6.084683,7.978088,-3.836014,6.398397,8.676701,-3.871304,-7.274173,-8.509958,4.461311,3.959932,4.447961,5.387506,-0.078682,2.082808,6.145920,7.815331,9.230811,8.140328,7.154985,-0.823642,4.106949,-9.140611,5.277843,0.754793,-8.056531,2.577317,-5.078978,-9.912452,8.515193,6.335264,4.728978,0.187429,4.410547,-0.629243,8.599106,0.131129,9.521521,4.854703,-9.044346,2.269486,5.026517,2.787658,8.978834,6.100657,0.330401,3.536006,1.356281,4.888895,-9.250823,-3.729569,1.380396,-3.942081,4.064326,2.771739,2.449706,-6.069072,4.743140,-6.663645,-0.396024,1.553766,-1.061306,-5.360690,-2.586410,-2.080244,8.988609,-1.224221,2.299119,9.421625,-0.601982,-8.940079,7.943575,4.446148,-2.725537,1.534723,3.348667,-3.181534,-9.113848,6.505370,0.419615,8.943381,-4.306258,2.416773,-1.812501,5.439013,4.661849,-3.657330,-1.475775,1.142627,-9.541640,8.037624,-5.985156,5.433772,-7.957534,9.751398,0.623570,-5.041112,-4.508641,2.557578,-1.690299,-7.674525,-7.655225,-2.486954,-7.449803,-0.494037,4.127626,-7.543067,8.266771,-7.304811,-6.551163,5.553380,-8.183440,-3.261888,9.164649,8.086026,-5.606308,0.187013,0.067945,2.538164,-9.065339,-2.052444,-7.232289,9.098181,-0.405291,6.758612,8.186574,-1.200715,0.075258,-5.708541,-0.644868,-2.449890,6.926792,-2.561118,-8.788579,-3.166917,4.200792,-9.553327,0.950012,6.621647,6.966746,6.798277,-3.205328,-5.630702,-8.061739,-8.154654,-1.570080,6.808004,8.182855,-0.561884,5.076680,-7.551182,0.111742,-5.394610,-9.137604], dtype = "float64")#candidate|1965|(455,)|const|float64
call_1964 = relay.TupleGetItem(func_512_call(relay.reshape(const_1965.astype('float64'), [13, 7, 5]), relay.reshape(const_1965.astype('float64'), [13, 7, 5]), ), 0)
call_1966 = relay.TupleGetItem(func_516_call(relay.reshape(const_1965.astype('float64'), [13, 7, 5]), relay.reshape(const_1965.astype('float64'), [13, 7, 5]), ), 0)
bop_1985 = relay.bitwise_or(call_1956.astype('int64'), relay.reshape(call_1954.astype('int64'), relay.shape_of(call_1956))) # shape=(165,)
bop_1988 = relay.bitwise_or(call_1957.astype('int64'), relay.reshape(call_1955.astype('int64'), relay.shape_of(call_1957))) # shape=(165,)
func_1334_call = mod.get_global_var('func_1334')
func_1337_call = mutated_mod.get_global_var('func_1337')
var_1999 = relay.var("var_1999", dtype = "bool", shape = (3150,))#candidate|1999|(3150,)|var|bool
call_1998 = relay.TupleGetItem(func_1334_call(relay.reshape(var_1999.astype('bool'), [15, 14, 15])), 0)
call_2000 = relay.TupleGetItem(func_1337_call(relay.reshape(var_1999.astype('bool'), [15, 14, 15])), 0)
func_768_call = mod.get_global_var('func_768')
func_769_call = mutated_mod.get_global_var('func_769')
call_2004 = relay.TupleGetItem(func_768_call(), 0)
call_2005 = relay.TupleGetItem(func_769_call(), 0)
func_955_call = mod.get_global_var('func_955')
func_957_call = mutated_mod.get_global_var('func_957')
call_2020 = relay.TupleGetItem(func_955_call(), 0)
call_2021 = relay.TupleGetItem(func_957_call(), 0)
func_695_call = mod.get_global_var('func_695')
func_697_call = mutated_mod.get_global_var('func_697')
call_2042 = func_695_call()
call_2043 = func_695_call()
uop_2048 = relay.erf(var_1999.astype('float32')) # shape=(3150,)
bop_2056 = relay.logical_xor(uop_2048.astype('int64'), relay.reshape(call_1998.astype('int64'), relay.shape_of(uop_2048))) # shape=(3150,)
bop_2059 = relay.logical_xor(uop_2048.astype('int64'), relay.reshape(call_2000.astype('int64'), relay.shape_of(uop_2048))) # shape=(3150,)
output = relay.Tuple([call_1964,const_1965,bop_1985,call_2004,call_2020,call_2042,bop_2056,])
output2 = relay.Tuple([call_1966,const_1965,bop_1988,call_2005,call_2021,call_2043,bop_2059,])
func_2061 = relay.Function([var_1999,], output)
mod['func_2061'] = func_2061
mod = relay.transform.InferType()(mod)
mutated_mod['func_2061'] = func_2061
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2062 = relay.var("var_2062", dtype = "bool", shape = (3150,))#candidate|2062|(3150,)|var|bool
func_2061_call = mutated_mod.get_global_var('func_2061')
call_2063 = func_2061_call(var_2062)
output = call_2063
func_2064 = relay.Function([var_2062], output)
mutated_mod['func_2064'] = func_2064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1274_call = mod.get_global_var('func_1274')
func_1276_call = mutated_mod.get_global_var('func_1276')
call_2130 = relay.TupleGetItem(func_1274_call(), 0)
call_2131 = relay.TupleGetItem(func_1276_call(), 0)
func_398_call = mod.get_global_var('func_398')
func_401_call = mutated_mod.get_global_var('func_401')
var_2133 = relay.var("var_2133", dtype = "float64", shape = (65, 7))#candidate|2133|(65, 7)|var|float64
call_2132 = func_398_call(relay.reshape(var_2133.astype('float64'), [13, 7, 5]))
call_2134 = func_398_call(relay.reshape(var_2133.astype('float64'), [13, 7, 5]))
uop_2143 = relay.acosh(call_2130.astype('float64')) # shape=(165,)
uop_2145 = relay.acosh(call_2131.astype('float64')) # shape=(165,)
func_251_call = mod.get_global_var('func_251')
func_253_call = mutated_mod.get_global_var('func_253')
const_2157 = relay.const([-6.770547,9.262643,1.824026,7.773597,-8.106120,2.790316,-0.141603,-9.352133,7.667023,6.125887,-3.944999,-6.424557,-7.082724,-2.817410,-6.457715,4.640469,-7.420506,-0.410508,-0.439991,1.556043,-8.700144,8.604810,-3.267728,0.022648,-5.748849,5.068708,-7.163018,9.950660,0.477155,-8.935179,-9.239471,-7.029176,0.574888,-0.652538,-5.830320,-5.837751,-1.049844,2.216664,5.038190,-8.040712,5.398654,-5.792466,5.792926,-0.154345,6.403607,-7.681016,7.272354,6.196875,-3.371243,-3.835661,2.234380,7.267512,-4.726968,-0.497029,8.881824,9.074772,-6.772419,-5.317970,0.307254,0.663190,1.424702,-6.156017,-6.848634,4.781599,9.698730,-3.834234,0.611105,-7.829854,-9.537209,1.992026,-9.858707,8.852560,9.396522,-2.304352,-1.381334,9.223636,-6.883951,-1.888914,5.783487,3.259432,8.585627,1.412885,4.161118,-6.961872,-3.074424,6.681290,-0.604702,-1.353476,-2.934512,4.238330,-9.230910,-1.301229,-7.102661,5.057771,0.193590,8.858814,-9.741809,5.158139,-4.933942,-0.151612,2.070996,0.984459,-6.257398,4.273255,8.735942,8.631716,-2.911705,-6.076459,4.824357,-1.269420,-4.082860,8.270031,4.942310,-8.536827,5.452064,-5.199232,-9.152842,-9.482067,8.780578,3.930257,-4.613835,-6.926266,-2.690098,-9.462889,7.499133,-8.925260,-4.390941,-9.813326,-2.113513,0.178133,8.590108,3.328298,-9.503221,-6.294837,4.499483,-4.727068,4.022918,-4.303434,2.009449,7.942567,-2.507524,-0.912089,1.402290,-4.226791,4.623505,6.136863,9.324484,-8.471569,4.242978,-0.158042,-7.182925,-6.173558,6.645544,8.101151,1.805007,1.378772,7.533486,-7.061803,7.406268,-2.110301,7.720871,4.503582,-8.841716,-8.722155,7.158610,7.206346,8.511538,7.123165,-1.916328,9.862227,9.200395,4.338777,-3.768149,3.167889,-9.285277,-8.562461,-4.159410,9.752806,7.488431,-9.999708,-8.050376,-9.505687,1.225447,-0.376978,-4.006229,-2.136970,8.681229,-8.418416,1.615673,4.976162,-5.904457,9.079891,7.978995,9.714885,-5.258919,2.555825,3.857243,-6.909994,7.537234,7.744119,-4.674542,8.787192,2.147815,8.287645,-5.984582,3.776947,-1.931346,1.379496,2.041617,-3.372688,-3.193543,-3.038965,6.224137,-0.953552,0.239333,9.331987,0.254503,0.647790,-8.053665,-5.066297,9.621285,0.311252,-3.590478,-2.300017,-7.858094,-4.347158,-3.789735,-1.169028,5.272807,8.144692,-7.407422,9.130909,9.756534,1.553556,3.923759,-8.026368,1.472604,6.612337,-5.591080,0.950826,-4.666130,5.575765,-6.902545,1.978773,0.517002,-9.263410,2.457087,3.727858,5.734738,-8.346372,-0.584729,9.422553,3.446775,-8.555989,-6.619569,-8.314621,0.871642,-1.863791,7.250241,1.293339,-2.456513,6.679551,2.776490,-0.704190,1.528479,-6.084178,-9.345237,6.894597,-8.199618,4.758506,4.323540,4.547692,-4.653349,-9.737034,0.125390,-4.392125,3.765209,5.463554,-1.251090,9.496034,9.788350,-2.784670,-9.756592,3.397329,8.879238,0.814870,-5.141174,1.510237,-4.757894,-4.060770,5.704298,8.971621,-9.501883,-4.438475,3.941782,-4.052290,6.127920,-3.656842,-3.979652,-8.015624,-8.489603,-3.087549,-0.834232,5.831847,9.684148,9.287755,-5.913071,-7.934694,7.516889,-4.356385,-5.321163,4.509240,6.386585,8.149328,6.036786,6.374614,-5.205778,-8.992870,9.647395,2.465574,-0.883284,3.985105,-2.901676,3.477052,-3.102604,-9.197468,6.148964,-3.811705,1.191566,-5.021751,6.834258,-5.756552,-8.383596,5.379378,0.073441,-8.756205,6.214901,-5.388394,2.824073,2.089150,3.903626,6.790877,-2.562570,0.383920,4.292951,-4.984143,7.244689,-7.307909,-7.052299,4.506584,8.404877,0.819567,-7.616640,-2.285644,1.909440,6.359358,6.588951,7.050615,3.559930,8.976088,8.939977,5.849397,-7.462328,-0.753302,9.140239,-8.466338,6.668559,2.957977,-9.621777,-6.062593,-5.681267,-8.838753,-1.972074,6.160092,8.187866,-9.048603,-2.280215,2.821862,-8.687030,1.365072,-4.614803,-5.769805,1.350530,4.154360,8.498722,-3.084584,7.266003,5.471497,-7.948072,2.704555,4.711589,-2.428020,-6.364484,-9.593394,5.583516,-5.644669,-7.013923,-5.463820,4.346534,9.691447,7.894798,-2.890587,-6.748053,-9.491921,-9.938494,-3.560337,7.388765,4.159542,5.482392,-7.454338,-2.497708,-8.358884,0.556712,-6.166872,-9.928145,7.588408,3.166380,-0.144041,2.001309,7.161824,8.582235,1.825342,-5.093726,-7.132600,9.286153,5.423862,8.126486,-7.739561,-6.371733,3.917907,-1.631110,-3.222501,-8.054415,0.593501,2.443085,2.653425,3.415954,5.859485,-8.715611,7.535372,1.711094,4.391789,-7.573575,9.821948,-8.598298,7.974491,-3.707426,4.069918,-2.690493,-3.760000,5.211511,-8.696948,8.338630,-4.823931,5.057916,3.743952,-0.263782,-2.752289,-6.249567,5.655650,-6.688798,9.984926,-4.623374,-4.649155,9.077983,-4.187460,-0.455720,1.245102,9.273818,2.739218,4.840672,0.717467,8.056521,-4.705589,1.027661,8.711338,-6.914982,-5.675371,4.938284,-0.988520,-5.366414,9.546217,8.646817,-1.349473,-9.087828,-7.458023,-4.639677,-1.478619,4.189122,8.786775,-6.186441,-0.313991,0.324849,-0.974249,4.784866,7.268000,8.408720,5.792406,-4.173067,8.720517,3.882535,-5.904588,9.023686,-6.501966,-5.681766,-6.523288,-7.688116,1.248404,1.599086,-4.452245,-2.730151,-6.679400,-2.721101,1.200150,1.179249,1.721964,-5.704721,-6.361076,-6.234668,-1.420413,-5.429394,-4.823911,6.797059,-6.339234,9.715765,-0.749345,8.447202,7.160618,-7.209686,-8.896913,-2.920911,-2.619111,5.071560,-4.254441,1.161598,-5.432233,5.564638,-8.838698,0.865911,-2.196492,4.774657,-0.826721,7.570963,-9.175673,-7.150641,-3.665016,8.479315,2.035086,5.676222,-0.618145,-4.846327,9.387411,8.268294,9.743706,-6.614422,3.045358,-6.848800,-4.561812,-9.732601,5.474073,2.524791,8.098007,-1.320545,-9.174796,-8.740973,9.808843,1.697782,1.995739,-4.516002,4.570955,-9.143994,4.028079,7.823721,-5.764014,-4.013488,-7.665689,9.489123,-8.258533,4.107875,-0.871117,-7.913721,-8.522143,-0.961281,-2.618449,-1.245950,3.272275,1.503410,8.908610,0.752434,-9.010454,2.887662,8.461674,-2.498381,4.081434,-8.657173,2.226362,1.343029,7.841274,0.810940,-2.008316,3.193713,-8.936021,-4.332284,6.158770,-6.306760,-5.627068,1.187526,-4.406361,5.460825,2.611689,4.458850,-7.342319,-6.699902,-5.731506,-6.471272,-4.274202,4.959565,-4.951435,-7.716907,7.885137,6.491654,6.980672,1.143554,-2.792864,9.900859,3.437726,-5.310189,5.771391,1.555796,6.606086,-4.763783,1.211643,-4.924414,-1.354828,-9.419261,1.772275,9.229542,-8.640097,6.198973,1.333393,-6.423724,7.045381,2.248502,0.285837,2.310750,-2.898464,-1.533824,5.122197,9.888720,-0.033439,2.181138,4.763018,-4.754390,0.254959,-1.976540,-0.280144,9.671447,4.696895,-8.759925,4.840874,2.085648,4.606341,-4.350912,6.296232,-3.901070,4.049722,1.873638,-1.388417,-2.414936,7.598181,4.444566,1.900527,-4.141519,9.557212,4.913999,-6.149032,-3.232461,1.022587,-2.332905,-5.518306,-1.770906,-2.450314,-0.046852,4.277477,-3.974907,4.473579,-6.373436,1.763763,9.624836,9.617080,2.913950,-5.507774,9.977018,-1.677513,-5.663030,8.469615,-7.687292,-1.206619,-9.884624,9.602832,1.406686,-5.633946,9.743005,-1.293599,-8.227267,-7.366448,4.114125,6.066268,-6.021931,-8.382406,-2.986165,7.092685,2.542113,9.400474,9.611403,-0.800507,7.282086,-0.296259,-5.061383,-5.692376,-9.542708,5.712897,4.274536,-2.589545,-4.224572,-1.457587,-7.432649,-5.993582,8.399508,-3.989444,-6.880771,6.400038,9.568111,1.822107,-7.875054,4.765613,-3.051241,-7.198829,3.110370,4.248131,1.014023,0.398724,4.284687,4.323523,9.982510,8.541635,4.848656,-0.955339,-2.798598,-3.907284,9.226101,0.556457,-5.462577,4.631176,-3.194593,-8.954502,-5.675919,-4.223574,0.533407,-0.338942,0.779989,-4.275428,8.752071,8.455330,-3.418508,-1.299404,2.689827,7.043421,-9.763365,-5.525581,8.602917,-1.165307,-7.317075,1.832656,5.345501,-9.888983,9.801070,5.538564,3.415039,-8.236344,-8.208034,7.303120,-8.561818,-5.196305,9.347736,-8.380841,2.211847,-7.162174,0.680764,9.271388,-1.506083,5.437394,-2.050526,-0.822281,8.531743,-4.218345,5.677522,-7.604232,-1.739688,-2.536676,2.609043,8.800188,-4.144267,-5.020023,4.389244,-2.159071,6.744922,-5.179221,-6.316271,-6.340553,2.064295,5.469340,-5.166957,0.692201,-3.764967,6.760897,-2.078824,-5.593908,-2.320074,-6.382314,-5.483433,3.366286,-8.294610,-3.698183,-1.296973,-2.611734,9.556022,3.489033,2.797558,-9.885430,-8.376473,9.480354,-2.885658,5.025851,-6.510404,8.323357,-6.655145,3.282122,-0.870899,8.401772,-2.942593,-3.831175,-9.070711,5.288833,-0.411209,7.351899,7.206767,4.849306,9.967704,8.746516,-0.471376,-1.751909,4.070891,1.947336,6.335045,3.769981,4.597938,7.400065,5.406463,6.904728,3.530389,-3.631455,-9.217814,-5.181116,4.495997,0.128630,-3.012659,-1.629637,4.988043,6.038876,5.189350,-7.050707,8.807938,-3.284680,7.664340,-6.237292,-0.835489,5.808087,7.606385,-0.577624,3.365056,-3.685616,-1.131209,-7.399182,9.787331,-9.070430,-5.838020,2.944412,1.925358,-6.322537,8.896442,0.777295,3.578419,-2.245782,-8.747879,2.737895,7.072121,-7.029339,9.812811,6.361740,-5.714534,8.042959,9.011679,-6.999124,-6.486938,9.952481,-3.438992,4.068784,7.472898,-3.790989,4.101252,-2.677663,7.995445,-7.898689,3.160105,2.424736,3.662934,-3.572355,6.191767,5.786923,5.774697,-1.241204,1.278166,0.660113,7.630135,3.777991,-5.463897,8.185855,-7.869125,-5.607144,-2.573615,9.225747,-3.647829,-4.379579,5.375472,1.841115,-7.553973,-4.485738,6.956408,-3.859891,1.346123,6.108798,7.957261,4.810617,-3.902473,1.784433,-5.670686,8.612902,-5.913922,-4.062178,3.549153,-8.130209,1.266702,-4.116973,1.023196,-6.858894,-0.596280,-4.963267,-0.936381,2.975969,4.750497,8.362320,5.049006,-3.169823,-6.542138,8.972117,-7.434002,3.038142,-3.642720,-4.581687,4.541932,-3.367016,7.737409,4.176105,4.069052,-1.527149,-6.069816,-4.565768,-1.979960,9.729798,1.942366,9.126872,5.314555,-4.555668,-6.616791,0.323711,4.022112,1.911575,-2.798721,-6.399531,7.892557,-6.369107,0.928520,2.962237,6.179509,-4.028138,-9.965166,-6.023745,4.962858,4.043972,0.860620,9.145589,3.869551,7.187994,0.043214,7.097692,6.031749,-4.103071,-0.152427,-4.951219,7.201478,-0.246404,-4.058882,2.846118,1.596855,8.088528,1.727834,5.869428,0.120365,-8.008821,9.078659,8.338068,6.630055,0.216968,-9.256381,4.111868,-1.220935,1.223729,-6.984456,-0.180501,4.361938,-2.961262,-0.325880,5.551727,2.412776,1.909216,2.277980,9.616914,-8.554054,-8.533017,-7.412010,-8.680445,-2.472774,-9.322149,-7.295742,-1.071679,-1.531115,-0.713155,3.813029,7.612725,6.426970,6.650139,2.552802], dtype = "float32")#candidate|2157|(1053,)|const|float32
call_2156 = relay.TupleGetItem(func_251_call(relay.reshape(const_2157.astype('float32'), [13, 9, 9])), 2)
call_2158 = relay.TupleGetItem(func_253_call(relay.reshape(const_2157.astype('float32'), [13, 9, 9])), 2)
output = relay.Tuple([call_2132,var_2133,uop_2143,call_2156,const_2157,])
output2 = relay.Tuple([call_2134,var_2133,uop_2145,call_2158,const_2157,])
func_2174 = relay.Function([var_2133,], output)
mod['func_2174'] = func_2174
mod = relay.transform.InferType()(mod)
mutated_mod['func_2174'] = func_2174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2175 = relay.var("var_2175", dtype = "float64", shape = (65, 7))#candidate|2175|(65, 7)|var|float64
func_2174_call = mutated_mod.get_global_var('func_2174')
call_2176 = func_2174_call(var_2175)
output = call_2176
func_2177 = relay.Function([var_2175], output)
mutated_mod['func_2177'] = func_2177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2198 = relay.var("var_2198", dtype = "int16", shape = (1, 11, 4))#candidate|2198|(1, 11, 4)|var|int16
const_2199 = relay.const([[[3,-9,-7,-1],[-8,-10,10,-2],[-9,-7,-2,-2],[-2,8,-6,-5],[2,5,3,-8],[1,-1,1,7],[4,2,-4,2],[1,-5,6,-7],[2,-8,2,-5],[-1,1,2,4],[1,-2,2,1]],[[6,4,6,8],[5,-2,-1,9],[5,-6,9,5],[-7,5,2,5],[-9,-10,10,2],[4,-2,3,9],[-5,-5,4,-4],[-8,10,-2,8],[2,8,-5,-7],[6,-6,-3,5],[7,-2,-1,-1]],[[3,8,6,9],[-3,-10,-9,9],[-8,-2,-9,9],[-10,-8,5,-1],[3,-6,-9,-9],[-1,-3,7,6],[7,4,-9,-4],[4,-2,-1,7],[-4,3,7,-6],[-2,-1,-10,-4],[-6,-5,-3,-4]]], dtype = "int16")#candidate|2199|(3, 11, 4)|const|int16
bop_2200 = relay.less_equal(var_2198.astype('bool'), const_2199.astype('bool')) # shape=(3, 11, 4)
output = relay.Tuple([bop_2200,])
output2 = relay.Tuple([bop_2200,])
func_2210 = relay.Function([var_2198,], output)
mod['func_2210'] = func_2210
mod = relay.transform.InferType()(mod)
var_2211 = relay.var("var_2211", dtype = "int16", shape = (1, 11, 4))#candidate|2211|(1, 11, 4)|var|int16
output = func_2210(var_2211)
func_2212 = relay.Function([var_2211], output)
mutated_mod['func_2212'] = func_2212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_876_call = mod.get_global_var('func_876')
func_877_call = mutated_mod.get_global_var('func_877')
call_2271 = relay.TupleGetItem(func_876_call(), 1)
call_2272 = relay.TupleGetItem(func_877_call(), 1)
func_1137_call = mod.get_global_var('func_1137')
func_1138_call = mutated_mod.get_global_var('func_1138')
call_2280 = relay.TupleGetItem(func_1137_call(), 0)
call_2281 = relay.TupleGetItem(func_1138_call(), 0)
output = relay.Tuple([call_2271,call_2280,])
output2 = relay.Tuple([call_2272,call_2281,])
func_2284 = relay.Function([], output)
mod['func_2284'] = func_2284
mod = relay.transform.InferType()(mod)
output = func_2284()
func_2285 = relay.Function([], output)
mutated_mod['func_2285'] = func_2285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_2318 = relay.TupleGetItem(func_217_call(), 4)
call_2319 = relay.TupleGetItem(func_218_call(), 4)
func_1480_call = mod.get_global_var('func_1480')
func_1482_call = mutated_mod.get_global_var('func_1482')
call_2336 = relay.TupleGetItem(func_1480_call(), 0)
call_2337 = relay.TupleGetItem(func_1482_call(), 0)
func_512_call = mod.get_global_var('func_512')
func_516_call = mutated_mod.get_global_var('func_516')
const_2349 = relay.const([[-8.531463,-2.698711,-1.045918,-6.810507,6.257437,-0.565612,6.813954],[2.576771,-0.066265,1.430517,8.615562,3.373967,8.357988,3.545895],[6.287396,-7.991314,1.748442,2.875073,-1.182720,-0.831199,0.611109],[-9.620160,8.516035,-2.951380,-1.044108,4.081971,-7.611823,1.972822],[-2.710431,-3.764293,5.053355,2.838043,9.407021,-6.565503,-6.229246],[5.565715,0.724724,-0.203526,-9.920562,-2.122611,4.118961,-8.952848],[-5.990915,7.580018,-8.908616,-9.868341,-1.431294,-4.561672,8.325294],[2.778086,7.456290,2.140260,6.930405,6.379498,-0.440010,-8.547322],[-7.149820,5.476479,2.234252,5.561684,-3.089716,3.239962,3.369877],[-0.747324,1.492773,-9.066550,1.001961,7.825665,7.824738,-9.209660],[4.481743,6.991304,4.105557,-1.124472,4.783225,-4.448328,-4.583079],[5.918637,-9.879057,-5.105686,1.894222,-9.553379,-8.471724,8.042677],[1.086321,5.136691,1.905982,-5.502082,9.569983,9.724855,-3.238083],[4.779837,1.633082,-7.638551,-7.419899,7.041529,5.529204,-5.567659],[-1.771209,5.358733,2.027217,-1.977414,-7.897461,4.170323,9.373394],[-0.871501,9.233006,-1.449781,-2.898118,-9.299749,8.685277,0.217336],[3.765521,-8.443512,5.431334,0.424965,-0.671745,7.857335,-0.243656],[0.403572,7.609793,7.627617,7.413454,-7.926964,-4.261213,-0.091950],[-6.071314,-5.961934,-1.468525,2.122424,4.497181,-0.885523,-6.406865],[-2.557519,8.153531,4.327473,2.665503,7.064056,-4.037380,2.020852],[-3.695984,4.838186,6.970410,-5.634494,-4.367008,4.887915,4.574778],[-4.092178,-0.421731,-0.321139,-1.596066,-8.093058,1.725165,-3.639469],[5.101738,-0.681121,1.737161,2.158127,-7.090077,-1.722621,2.437853],[-2.793100,-4.978558,3.643878,1.692619,-9.055593,2.134087,7.754719],[-9.871236,-4.371814,9.863669,0.533647,-4.706106,1.247025,-7.767131],[-6.232961,-8.288558,-7.558014,8.448378,3.913219,-0.266447,-7.200108],[-5.968596,-5.347468,6.052078,8.829564,9.100937,5.964327,9.180472],[-2.953955,6.637730,8.278851,1.044837,-8.641827,5.566908,0.060686],[8.760542,6.081177,-2.773655,-9.723034,8.829849,-3.755892,-4.286648],[-0.841334,6.188450,1.141054,5.680617,-0.998380,2.191943,6.242980],[-0.290831,-4.701016,-7.383143,5.826309,5.723466,-7.961074,2.361369],[3.131154,8.164173,7.814810,8.740720,1.175251,-9.563324,3.157152],[-3.643844,-5.404504,-7.986297,-0.408708,1.247010,4.230177,7.320816],[9.541198,-4.166764,-5.531207,-4.321567,-5.188106,-4.160488,9.830841],[9.050142,-6.904107,3.093863,-9.921720,1.599351,7.215641,7.042779],[2.501644,-9.995437,6.083287,-1.411298,-4.293635,-8.861406,-3.135953],[-6.756891,4.390882,-1.132646,7.371955,-2.842200,9.981063,-8.755945],[-9.110387,6.753007,-7.005180,-7.031324,9.179826,8.213139,-7.542154],[-1.622493,6.017184,-0.136922,0.850337,-5.432348,-4.800611,-1.497902],[6.170478,-5.607669,-6.775990,3.010736,-2.308408,7.859905,-9.908157],[9.129573,-6.170129,1.287912,0.186002,-1.284459,0.440159,4.725238],[5.102741,5.003500,2.663892,0.020586,-5.534813,-3.788994,-4.566007],[-8.004628,7.735680,8.068437,6.180231,8.030062,-8.201609,5.542648],[-2.241099,-4.585201,1.797067,-0.633384,3.306915,-9.956196,6.368944],[-4.632743,-8.721527,-5.018635,5.575279,0.680281,8.358048,9.662103],[-9.388862,4.641565,9.493803,6.992554,1.730915,4.319494,4.621208],[-9.866832,5.503615,-4.426872,8.855624,5.763862,4.288103,-3.348796],[2.786063,-8.159797,-5.110032,-7.517222,1.901743,-8.035120,-1.804804],[-9.329065,-8.214693,-6.586238,7.737625,9.934956,8.544128,8.144345],[-0.347815,7.464542,8.728762,3.624377,6.571002,-1.979209,9.329415],[-1.976178,-2.462584,6.529442,9.752973,-2.508676,3.221488,-6.879739],[-4.628902,2.897400,5.210609,-2.155093,-9.859750,-2.156167,-0.318842],[0.153713,-7.181964,5.803018,-9.329308,4.490464,-8.154551,-0.485741],[9.132371,-1.536449,2.461479,-8.229640,9.117842,3.804292,7.832359],[1.246652,-7.888172,1.643899,-3.489998,-8.831055,-1.740300,2.990302],[4.372282,-8.188889,-5.296041,2.113066,-9.523393,-5.758583,-3.654268],[0.690513,7.653077,1.001778,6.612178,-7.030015,5.578943,-5.459841],[-4.295513,-6.341932,-9.049856,0.183450,-8.650667,-6.245066,-7.815388],[-3.548475,-3.094005,-5.104627,-2.314407,-7.669051,7.361033,-5.128154],[9.051907,-9.473462,-7.522564,0.772714,1.461949,4.803291,7.819070],[-9.030084,-7.633101,4.862830,-3.547364,-1.752786,6.498132,3.533690],[-6.209527,-3.240178,-0.164375,4.943989,6.997331,5.288570,4.194424],[-3.112914,-7.048637,3.678504,6.924645,-6.604105,-1.830424,2.619088],[4.601802,-6.837339,-5.711823,5.060172,1.796391,9.318189,1.246089],[3.354968,7.885259,-6.792079,-9.421010,-9.126594,-8.100669,-1.516462]], dtype = "float64")#candidate|2349|(65, 7)|const|float64
call_2348 = relay.TupleGetItem(func_512_call(relay.reshape(const_2349.astype('float64'), [13, 7, 5]), relay.reshape(const_2349.astype('float64'), [13, 7, 5]), ), 0)
call_2350 = relay.TupleGetItem(func_516_call(relay.reshape(const_2349.astype('float64'), [13, 7, 5]), relay.reshape(const_2349.astype('float64'), [13, 7, 5]), ), 0)
output = relay.Tuple([call_2318,call_2336,call_2348,const_2349,])
output2 = relay.Tuple([call_2319,call_2337,call_2350,const_2349,])
func_2353 = relay.Function([], output)
mod['func_2353'] = func_2353
mod = relay.transform.InferType()(mod)
mutated_mod['func_2353'] = func_2353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2353_call = mutated_mod.get_global_var('func_2353')
call_2354 = func_2353_call()
output = call_2354
func_2355 = relay.Function([], output)
mutated_mod['func_2355'] = func_2355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_2372 = relay.TupleGetItem(func_888_call(), 0)
call_2373 = relay.TupleGetItem(func_889_call(), 0)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_2386 = func_666_call()
call_2387 = func_666_call()
func_731_call = mod.get_global_var('func_731')
func_733_call = mutated_mod.get_global_var('func_733')
call_2396 = func_731_call()
call_2397 = func_731_call()
var_2398 = relay.var("var_2398", dtype = "float32", shape = (165,))#candidate|2398|(165,)|var|float32
bop_2399 = relay.bitwise_and(call_2372.astype('uint8'), relay.reshape(var_2398.astype('uint8'), relay.shape_of(call_2372))) # shape=(165,)
bop_2402 = relay.bitwise_and(call_2373.astype('uint8'), relay.reshape(var_2398.astype('uint8'), relay.shape_of(call_2373))) # shape=(165,)
output = relay.Tuple([call_2386,call_2396,bop_2399,])
output2 = relay.Tuple([call_2387,call_2397,bop_2402,])
func_2413 = relay.Function([var_2398,], output)
mod['func_2413'] = func_2413
mod = relay.transform.InferType()(mod)
var_2414 = relay.var("var_2414", dtype = "float32", shape = (165,))#candidate|2414|(165,)|var|float32
output = func_2413(var_2414)
func_2415 = relay.Function([var_2414], output)
mutated_mod['func_2415'] = func_2415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1651_call = mod.get_global_var('func_1651')
func_1653_call = mutated_mod.get_global_var('func_1653')
call_2434 = func_1651_call()
call_2435 = func_1651_call()
func_351_call = mod.get_global_var('func_351')
func_352_call = mutated_mod.get_global_var('func_352')
call_2464 = relay.TupleGetItem(func_351_call(), 1)
call_2465 = relay.TupleGetItem(func_352_call(), 1)
uop_2476 = relay.atanh(call_2464.astype('float32')) # shape=(13, 7, 5)
uop_2478 = relay.atanh(call_2465.astype('float32')) # shape=(13, 7, 5)
uop_2487 = relay.exp(uop_2476.astype('float64')) # shape=(13, 7, 5)
uop_2489 = relay.exp(uop_2478.astype('float64')) # shape=(13, 7, 5)
func_695_call = mod.get_global_var('func_695')
func_697_call = mutated_mod.get_global_var('func_697')
call_2497 = func_695_call()
call_2498 = func_695_call()
output = relay.Tuple([call_2434,uop_2487,call_2497,])
output2 = relay.Tuple([call_2435,uop_2489,call_2498,])
func_2502 = relay.Function([], output)
mod['func_2502'] = func_2502
mod = relay.transform.InferType()(mod)
mutated_mod['func_2502'] = func_2502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mutated_mod.get_global_var('func_2502')
call_2503 = func_2502_call()
output = call_2503
func_2504 = relay.Function([], output)
mutated_mod['func_2504'] = func_2504
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2537 = relay.constdtype = "float64")#candidate|2537|(14, 13, 12)|const|float64
uop_2538 = relay.erf(const_2537.astype('float64')) # shape=(14, 13, 12)
func_1334_call = mod.get_global_var('func_1334')
func_1337_call = mutated_mod.get_global_var('func_1337')
const_2555 = relay.const([False,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,True,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,False,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False], dtype = "bool")#candidate|2555|(3150,)|const|bool
call_2554 = relay.TupleGetItem(func_1334_call(relay.reshape(const_2555.astype('bool'), [15, 14, 15])), 1)
call_2556 = relay.TupleGetItem(func_1337_call(relay.reshape(const_2555.astype('bool'), [15, 14, 15])), 1)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_2570 = relay.TupleGetItem(func_217_call(), 3)
call_2571 = relay.TupleGetItem(func_218_call(), 3)
func_251_call = mod.get_global_var('func_251')
func_253_call = mutated_mod.get_global_var('func_253')
var_2579 = relay.var("var_2579", dtype = "float32", shape = (351, 3))#candidate|2579|(351, 3)|var|float32
call_2578 = relay.TupleGetItem(func_251_call(relay.reshape(var_2579.astype('float32'), [13, 9, 9])), 2)
call_2580 = relay.TupleGetItem(func_253_call(relay.reshape(var_2579.astype('float32'), [13, 9, 9])), 2)
output = relay.Tuple([uop_2538,call_2554,const_2555,call_2570,call_2578,var_2579,])
output2 = relay.Tuple([uop_2538,call_2556,const_2555,call_2571,call_2580,var_2579,])
func_2582 = relay.Function([var_2579,], output)
mod['func_2582'] = func_2582
mod = relay.transform.InferType()(mod)
mutated_mod['func_2582'] = func_2582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2583 = relay.var("var_2583", dtype = "float32", shape = (351, 3))#candidate|2583|(351, 3)|var|float32
func_2582_call = mutated_mod.get_global_var('func_2582')
call_2584 = func_2582_call(var_2583)
output = call_2584
func_2585 = relay.Function([var_2583], output)
mutated_mod['func_2585'] = func_2585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
call_2606 = relay.TupleGetItem(func_1409_call(), 0)
call_2607 = relay.TupleGetItem(func_1411_call(), 0)
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
const_2611 = relay.const([[10,1],[2,4],[1,-7],[-1,4],[-7,-3],[-6,2],[-9,-6],[7,-6],[-3,10],[2,-5],[3,1],[-8,3],[-3,-4],[3,-1],[-3,1],[-2,-10],[3,-10],[5,9],[9,3],[-4,5],[-3,6],[-2,-2]], dtype = "int16")#candidate|2611|(22, 2)|const|int16
call_2610 = relay.TupleGetItem(func_2210_call(relay.reshape(const_2611.astype('int16'), [1, 11, 4])), 0)
call_2612 = relay.TupleGetItem(func_2212_call(relay.reshape(const_2611.astype('int16'), [1, 11, 4])), 0)
const_2616 = relay.const([[[7.137269,8.013346,-2.660112],[5.747539,-0.991514,-5.355902],[5.876923,9.391029,1.773655],[6.903374,-6.861523,-0.198807],[-1.861138,8.217244,-5.655100],[-2.270802,3.528103,2.281646],[-4.532056,-2.862164,-9.235095],[-6.717088,-0.237254,8.169216],[-4.510823,4.933554,6.437718],[-3.437337,5.309921,-2.800431],[-7.085530,-5.504106,-7.229853]],[[1.169511,-6.992601,6.490615],[6.895192,-9.782908,-8.067611],[5.572412,3.530456,7.991838],[-3.832144,-9.452020,4.453130],[4.250863,4.238375,6.993816],[8.570161,-5.159112,-1.693746],[-7.901291,4.150984,-0.493405],[-4.394369,1.425998,-4.085903],[0.794913,-0.143113,0.864240],[-1.404681,1.702298,-8.317050],[5.988409,0.760235,3.901048]],[[4.437004,1.356678,0.962832],[-8.285698,7.242066,5.924108],[-5.210088,-8.112024,-0.686398],[-9.430705,6.970219,8.564789],[-4.446902,1.439310,-0.674102],[-6.658348,6.986659,3.073856],[3.071968,-9.867272,7.027672],[-7.731091,-1.219803,-8.845764],[-3.478117,2.030349,-0.984589],[7.919349,0.945743,-2.143844],[-2.958469,-4.842786,8.389263]],[[-7.328754,1.730688,6.426789],[-1.769402,1.981501,2.151833],[1.770731,-7.404052,2.052984],[7.495202,-5.791299,4.096463],[5.455552,7.515819,0.167115],[9.407485,3.897279,1.571618],[0.548114,-0.391408,-5.007017],[-7.897103,-8.974045,1.358299],[1.052807,-7.714378,8.526079],[-0.195548,5.702723,-0.547441],[-4.952039,-8.138725,9.309102]],[[1.110751,8.415405,3.636696],[0.895753,-4.615548,-3.458748],[7.407872,-8.099006,2.734807],[7.180133,-8.887632,6.844019],[-1.353025,-5.953093,2.382500],[-0.430139,-4.989175,8.118375],[1.499431,8.223999,-8.996783],[2.791175,8.937697,1.844891],[-9.321965,4.607181,-2.318140],[1.826189,-6.691459,3.241425],[4.632501,-4.477761,-4.409490]]], dtype = "float32")#candidate|2616|(5, 11, 3)|const|float32
bop_2617 = relay.logical_or(call_2606.astype('bool'), relay.reshape(const_2616.astype('bool'), relay.shape_of(call_2606))) # shape=(5, 11, 3)
bop_2620 = relay.logical_or(call_2607.astype('bool'), relay.reshape(const_2616.astype('bool'), relay.shape_of(call_2607))) # shape=(5, 11, 3)
func_2413_call = mod.get_global_var('func_2413')
func_2415_call = mutated_mod.get_global_var('func_2415')
call_2624 = relay.TupleGetItem(func_2413_call(relay.reshape(const_2616.astype('float32'), [165,])), 0)
call_2625 = relay.TupleGetItem(func_2415_call(relay.reshape(const_2616.astype('float32'), [165,])), 0)
func_695_call = mod.get_global_var('func_695')
func_697_call = mutated_mod.get_global_var('func_697')
call_2626 = func_695_call()
call_2627 = func_695_call()
func_398_call = mod.get_global_var('func_398')
func_401_call = mutated_mod.get_global_var('func_401')
var_2641 = relay.var("var_2641", dtype = "float64", shape = (455,))#candidate|2641|(455,)|var|float64
call_2640 = func_398_call(relay.reshape(var_2641.astype('float64'), [13, 7, 5]))
call_2642 = func_398_call(relay.reshape(var_2641.astype('float64'), [13, 7, 5]))
uop_2643 = relay.asinh(call_2640.astype('float64')) # shape=(13, 7, 5)
uop_2645 = relay.asinh(call_2642.astype('float64')) # shape=(13, 7, 5)
output = relay.Tuple([call_2610,const_2611,bop_2617,call_2624,call_2626,var_2641,uop_2643,])
output2 = relay.Tuple([call_2612,const_2611,bop_2620,call_2625,call_2627,var_2641,uop_2645,])
func_2647 = relay.Function([var_2641,], output)
mod['func_2647'] = func_2647
mod = relay.transform.InferType()(mod)
var_2648 = relay.var("var_2648", dtype = "float64", shape = (455,))#candidate|2648|(455,)|var|float64
output = func_2647(var_2648)
func_2649 = relay.Function([var_2648], output)
mutated_mod['func_2649'] = func_2649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1835_call = mod.get_global_var('func_1835')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_2713 = relay.TupleGetItem(func_1835_call(), 0)
call_2714 = relay.TupleGetItem(func_1837_call(), 0)
output = relay.Tuple([call_2713,])
output2 = relay.Tuple([call_2714,])
func_2724 = relay.Function([], output)
mod['func_2724'] = func_2724
mod = relay.transform.InferType()(mod)
output = func_2724()
func_2725 = relay.Function([], output)
mutated_mod['func_2725'] = func_2725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1274_call = mod.get_global_var('func_1274')
func_1276_call = mutated_mod.get_global_var('func_1276')
call_2728 = relay.TupleGetItem(func_1274_call(), 0)
call_2729 = relay.TupleGetItem(func_1276_call(), 0)
func_2502_call = mod.get_global_var('func_2502')
func_2504_call = mutated_mod.get_global_var('func_2504')
call_2733 = relay.TupleGetItem(func_2502_call(), 2)
call_2734 = relay.TupleGetItem(func_2504_call(), 2)
output = relay.Tuple([call_2728,call_2733,])
output2 = relay.Tuple([call_2729,call_2734,])
func_2738 = relay.Function([], output)
mod['func_2738'] = func_2738
mod = relay.transform.InferType()(mod)
mutated_mod['func_2738'] = func_2738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mutated_mod.get_global_var('func_2738')
call_2739 = func_2738_call()
output = call_2739
func_2740 = relay.Function([], output)
mutated_mod['func_2740'] = func_2740
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2778 = relay.var("var_2778", dtype = "int8", shape = (8, 16, 3))#candidate|2778|(8, 16, 3)|var|int8
var_2779 = relay.var("var_2779", dtype = "int8", shape = (8, 16, 3))#candidate|2779|(8, 16, 3)|var|int8
bop_2780 = relay.bitwise_xor(var_2778.astype('int8'), relay.reshape(var_2779.astype('int8'), relay.shape_of(var_2778))) # shape=(8, 16, 3)
uop_2787 = relay.tan(bop_2780.astype('float32')) # shape=(8, 16, 3)
output = relay.Tuple([uop_2787,])
output2 = relay.Tuple([uop_2787,])
func_2798 = relay.Function([var_2778,var_2779,], output)
mod['func_2798'] = func_2798
mod = relay.transform.InferType()(mod)
mutated_mod['func_2798'] = func_2798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2798_call = mutated_mod.get_global_var('func_2798')
var_2800 = relay.var("var_2800", dtype = "int8", shape = (8, 16, 3))#candidate|2800|(8, 16, 3)|var|int8
var_2801 = relay.var("var_2801", dtype = "int8", shape = (8, 16, 3))#candidate|2801|(8, 16, 3)|var|int8
call_2799 = func_2798_call(var_2800,var_2801,)
output = call_2799
func_2802 = relay.Function([var_2800,var_2801,], output)
mutated_mod['func_2802'] = func_2802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1676_call = mutated_mod.get_global_var('func_1676')
call_2822 = relay.TupleGetItem(func_1675_call(), 0)
call_2823 = relay.TupleGetItem(func_1676_call(), 0)
func_398_call = mod.get_global_var('func_398')
func_401_call = mutated_mod.get_global_var('func_401')
const_2837 = relay.const([-5.826418,1.148605,-5.579768,5.251001,-9.796844,-1.407207,-2.924683,-1.646254,6.274630,7.579238,9.821953,-8.494081,-2.126868,-5.006401,7.180210,-3.866617,-6.817773,-0.614420,6.122400,-7.397408,5.487908,-0.356183,2.611619,-5.673091,3.086562,-6.632171,-3.181087,1.766807,0.054010,-4.121435,6.416348,3.151699,-4.270519,-9.642973,2.578478,-4.414976,7.214207,0.113612,9.895939,3.366532,5.016097,-2.950289,-8.960407,-9.802322,7.794133,-9.591731,4.666008,9.055609,1.413367,8.859959,-7.454482,0.639125,8.249063,-7.690279,-0.763162,1.638021,9.531442,4.900749,-5.285214,-0.785585,-1.142703,-5.883050,-1.079537,-5.722401,-4.655030,-9.200842,0.818833,-0.314429,-4.653201,6.076966,3.072660,-8.118830,-8.717057,-9.508366,-3.902306,7.260231,-9.831371,-6.214614,6.830607,-7.176628,4.699215,-5.245936,6.971563,5.649025,2.055774,-2.551438,2.654818,3.701127,0.754783,-7.531500,-4.239977,-2.663248,-5.029917,7.650948,6.627071,6.552308,4.076024,3.956500,-3.198474,-3.518557,-2.430776,-9.916261,-1.084884,3.457019,-5.457986,7.446631,9.377373,9.641718,-9.489146,3.144574,-6.306426,-3.674681,-3.699818,-6.462376,-3.274653,-1.380892,-7.796356,1.793321,0.880631,-0.234513,-7.787369,-0.536936,9.264597,0.250758,3.850566,-2.102894,2.032757,9.761934,-5.902451,7.879548,-9.008494,4.580345,-0.263632,7.316948,-6.426242,8.256485,4.627860,-1.925282,2.340680,6.790498,9.665716,6.755183,-5.443649,-1.360994,-8.152105,-1.599126,-1.449775,5.923929,-5.807209,-9.734714,-6.243976,6.309489,4.633284,8.468749,-1.548472,3.984281,-3.978655,-5.231455,7.302320,0.072656,-3.257676,1.882337,-6.612316,-0.311859,4.012118,6.057235,-2.490717,-1.915981,-7.499505,2.356126,-6.995685,-0.222716,8.386061,6.216782,-8.588827,-4.434632,-6.415406,3.648066,8.283526,0.638723,-7.761191,-7.361715,-1.242823,-2.401908,-4.515562,2.840815,9.640854,9.844976,-0.678591,5.995533,-0.877125,-1.847193,7.585757,9.262171,2.173621,-8.304311,3.561807,-2.501668,1.981819,-9.465871,-5.356713,-3.073074,-2.188753,-6.721649,-2.322271,1.970576,-9.927980,-9.657489,0.439974,-5.596482,-1.033031,-3.146609,0.777450,1.416515,7.516100,7.682975,5.946502,6.672341,6.954184,1.412959,-8.971503,-2.445469,-6.586837,-4.132346,-4.508727,-3.404728,0.185380,-8.868041,6.965927,0.281988,-1.025974,4.863703,-6.149271,4.341479,-6.471803,-0.932705,1.598725,1.508052,5.399460,2.301350,-1.738611,-4.619347,-6.691825,0.809371,6.908252,-2.353134,4.152767,1.972225,8.787209,4.250086,9.263432,-0.117173,7.951831,-3.580075,0.303643,-0.235009,5.172694,-4.419961,-2.059747,-1.956693,-8.476709,7.525452,-3.842760,-9.464508,2.449070,3.721157,8.619856,1.607126,-5.959669,6.008514,2.348754,2.013051,-2.136457,-2.773850,9.550250,-1.440098,6.661387,5.782151,0.960902,4.613914,-4.111726,4.126442,-1.878182,-3.284511,0.542497,3.240652,5.441026,7.799014,-9.310056,-5.792643,-4.734023,8.356139,-3.813690,7.559733,-8.922241,-1.573495,-1.352538,-3.472650,-0.003578,6.684534,-3.802970,-6.277508,9.919698,-7.489094,3.668814,-5.713985,2.628313,-2.301485,-0.047609,3.635815,-2.899162,6.404372,-4.839802,-2.965624,-3.343682,-9.469149,-9.456743,5.609708,-8.819392,5.564503,-3.611620,-7.898939,4.622477,-3.924982,-4.535740,6.478276,8.774687,8.511691,-3.978837,1.844702,2.862159,-5.078835,-3.297755,-8.290932,5.708544,6.990415,9.435990,0.096372,-9.113107,-6.702494,-7.780945,1.657836,7.562598,1.263970,-2.606887,-8.095487,-9.525940,4.068060,-8.571382,3.388621,5.953360,-1.377450,-9.111317,-9.626287,4.766696,-8.075041,-1.898391,4.346189,-4.665344,7.322405,1.912742,7.444428,-4.796043,4.944073,-4.885192,-4.258517,7.149468,-6.764940,2.517036,-0.951083,0.102733,-2.683415,-4.897711,2.490598,-9.794115,-9.561541,9.971403,8.026230,-4.131907,-8.368739,1.708641,3.866941,9.417220,3.398390,-1.310181,0.520281,-0.669883,0.894368,-7.180422,0.974582,5.554745,-9.434339,5.159130,3.333774,-8.787854,-4.786081,-9.927296,-8.496710,1.216969,-5.388978,7.155734,-9.560528,9.334895,5.361338,-6.319070,-7.483418,-7.882639,-5.558590,-0.803202,5.738221,-5.184407,4.752046,5.516655,-4.402359,6.144530,-5.542177,2.893059,-6.636278,-8.290664,-0.853077,-6.405983,2.856576,6.776256,4.830352,5.975255,5.372861,-8.121265,-5.042200,-8.585042,9.532826,-1.521424,2.833656,-7.008569,-0.927022,8.337466,3.183379,-8.404281,-7.237307,2.475221,0.776410,-8.240579,-4.985813,3.302142,4.017411,9.566068,1.806897,-2.160268,7.315682,-6.344223,-0.681870,-7.041422,-5.103985,-0.627196,0.255866,-2.412772], dtype = "float64")#candidate|2837|(455,)|const|float64
call_2836 = func_398_call(relay.reshape(const_2837.astype('float64'), [13, 7, 5]))
call_2838 = func_398_call(relay.reshape(const_2837.astype('float64'), [13, 7, 5]))
output = relay.Tuple([call_2822,call_2836,const_2837,])
output2 = relay.Tuple([call_2823,call_2838,const_2837,])
func_2843 = relay.Function([], output)
mod['func_2843'] = func_2843
mod = relay.transform.InferType()(mod)
mutated_mod['func_2843'] = func_2843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mutated_mod.get_global_var('func_2843')
call_2844 = func_2843_call()
output = call_2844
func_2845 = relay.Function([], output)
mutated_mod['func_2845'] = func_2845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_2923 = relay.TupleGetItem(func_888_call(), 0)
call_2924 = relay.TupleGetItem(func_889_call(), 0)
func_1675_call = mod.get_global_var('func_1675')
func_1676_call = mutated_mod.get_global_var('func_1676')
call_2935 = relay.TupleGetItem(func_1675_call(), 0)
call_2936 = relay.TupleGetItem(func_1676_call(), 0)
var_2952 = relay.var("var_2952", dtype = "float32", shape = (165,))#candidate|2952|(165,)|var|float32
bop_2953 = relay.greater_equal(call_2935.astype('bool'), relay.reshape(var_2952.astype('bool'), relay.shape_of(call_2935))) # shape=(165,)
bop_2956 = relay.greater_equal(call_2936.astype('bool'), relay.reshape(var_2952.astype('bool'), relay.shape_of(call_2936))) # shape=(165,)
func_2353_call = mod.get_global_var('func_2353')
func_2355_call = mutated_mod.get_global_var('func_2355')
call_2957 = relay.TupleGetItem(func_2353_call(), 1)
call_2958 = relay.TupleGetItem(func_2355_call(), 1)
func_2284_call = mod.get_global_var('func_2284')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_2966 = relay.TupleGetItem(func_2284_call(), 1)
call_2967 = relay.TupleGetItem(func_2285_call(), 1)
output = relay.Tuple([call_2923,bop_2953,call_2957,call_2966,])
output2 = relay.Tuple([call_2924,bop_2956,call_2958,call_2967,])
func_2971 = relay.Function([var_2952,], output)
mod['func_2971'] = func_2971
mod = relay.transform.InferType()(mod)
var_2972 = relay.var("var_2972", dtype = "float32", shape = (165,))#candidate|2972|(165,)|var|float32
output = func_2971(var_2972)
func_2973 = relay.Function([var_2972], output)
mutated_mod['func_2973'] = func_2973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_768_call = mod.get_global_var('func_768')
func_769_call = mutated_mod.get_global_var('func_769')
call_3012 = relay.TupleGetItem(func_768_call(), 1)
call_3013 = relay.TupleGetItem(func_769_call(), 1)
uop_3043 = relay.log(call_3012.astype('float32')) # shape=(165,)
uop_3045 = relay.log(call_3013.astype('float32')) # shape=(165,)
func_398_call = mod.get_global_var('func_398')
func_401_call = mutated_mod.get_global_var('func_401')
const_3066 = relay.const([0.693469,6.991164,8.300385,-6.689525,5.177237,-9.101445,2.830627,-2.237364,9.601180,6.711296,6.133785,-1.694025,3.903738,8.327467,1.020508,2.324059,-8.008076,-1.567716,7.045445,9.106319,-0.807864,2.806816,-9.206703,2.969486,7.840291,-9.834434,6.412845,-8.231817,-3.449103,7.821821,-0.581118,-6.964534,-8.507460,5.561836,9.547498,-6.834455,-6.474657,6.713561,-4.031550,-2.519578,3.784203,-4.350464,5.823091,9.964667,-2.688972,-4.380781,9.057148,6.834840,3.391810,8.487843,2.484880,8.580975,-2.534665,9.237930,5.750987,-0.702256,-9.119986,2.605197,4.410690,7.756568,8.408765,-1.488027,-5.597088,-1.622180,-5.702625,-7.738960,-2.386038,-1.102233,-1.528853,3.869361,4.972138,-8.733427,-4.143899,-1.005835,1.678362,8.858214,7.513215,8.620092,4.396483,1.511547,-4.474389,7.212066,0.369927,9.651112,6.239483,9.528226,-8.182053,-3.848351,2.931430,-4.878768,-7.407071,-6.824501,0.681351,2.395469,1.185474,0.161000,-6.102713,-9.970828,-5.183935,7.676924,-4.880999,-5.909443,0.995873,3.137206,6.997947,0.945969,8.176156,4.366238,7.978639,2.064831,-1.255957,-9.699477,-4.874373,-4.341183,-0.415733,-2.451456,6.302553,6.153393,-0.388568,2.565853,-4.622709,3.888328,-9.925489,9.465527,-7.672104,0.109810,0.725965,5.246511,-5.019648,-0.895117,-3.201422,-6.774082,7.380823,-1.639452,-5.879177,-9.393217,-2.861862,3.131954,-1.330253,-3.762832,5.392004,4.074334,-6.066093,-0.274205,3.468876,1.239842,-4.568554,3.210163,-0.005579,6.745415,0.528961,3.891736,0.092613,6.476338,1.951654,-2.826154,0.087696,1.337263,4.226658,-4.922963,-4.072235,-6.294996,8.323909,2.857538,9.904618,2.799010,-1.351425,-2.164653,1.500016,4.127738,6.446930,6.667860,-9.658183,-2.050306,1.329679,-0.267190,5.604744,-0.353752,-4.801811,-2.104654,-3.698447,-2.344859,-9.060352,-9.462573,-2.788391,0.058915,-9.780547,-6.229620,9.562136,-9.074333,-7.413625,0.732452,1.353524,-9.216063,5.261368,8.498995,-6.244189,-4.491069,-4.536906,-7.163166,-4.290988,-3.920421,2.857229,9.324172,-1.860863,6.073699,-0.051965,-9.267925,-3.177402,5.604772,2.173732,4.501775,9.074622,-7.952344,-7.433870,-8.190733,-0.404698,7.664663,-4.262609,5.704006,-8.096917,6.866532,8.374717,-4.686253,-6.041399,4.577522,-5.148235,-4.406627,-8.192036,1.198774,0.283575,4.537732,5.760827,9.067078,-9.361114,-4.449444,3.703430,3.202163,5.071979,-2.770927,-2.853087,5.638128,-8.538231,-0.222713,-5.762553,-5.711889,6.057231,-5.732500,-9.392513,-5.230518,-7.863321,-7.247940,-7.725986,-7.868000,1.961642,-9.590893,-7.528114,7.944795,2.931226,0.305595,6.943994,2.273094,3.490729,2.520522,-4.303273,-9.925474,-7.870155,-8.762258,1.697787,-7.274901,-0.577539,-4.567788,-8.438406,9.697437,5.510557,-0.077917,-8.595197,5.527984,1.568567,-5.180177,6.836588,-6.225117,6.190725,-4.870352,4.437253,0.441857,2.317635,-6.440566,6.843841,8.631193,-1.515577,-3.993581,-6.682292,-8.766031,-7.527947,2.516348,-7.553299,-5.625730,-0.242615,-6.140646,4.959536,1.767227,1.624468,0.049191,-0.125568,9.932216,-5.669315,3.217031,6.059475,-6.965194,-9.322287,7.871714,2.875773,-5.769061,2.027003,5.166860,7.905343,4.920519,-2.597100,3.588491,-7.017022,6.814130,-3.770155,3.995295,-5.331346,-4.399095,4.935305,5.620474,8.869276,-4.411589,-3.549883,0.148587,7.991306,-3.500218,9.503572,-8.834375,-9.427116,-6.988823,-3.391338,9.657292,5.289554,-8.199551,9.562713,9.896990,5.428077,7.816382,1.917583,6.548143,-1.222716,-7.488517,-6.471426,2.107833,-0.440238,2.916325,5.640871,-1.852819,-1.545168,4.717679,-0.359064,-8.157986,-7.061586,-3.680047,7.035439,-4.954484,8.219472,2.152468,3.642077,2.277611,9.470089,9.851449,2.738806,4.401824,-3.451136,2.006346,-6.575980,-9.369590,-9.107958,-1.046023,0.272761,0.906556,-5.579603,-7.958456,9.891148,7.014324,-3.439921,5.867115,-2.950207,-4.278097,7.775189,-7.552222,2.882949,-6.508317,4.232841,3.640218,-3.748776,8.720411,-5.107545,-9.328922,8.057457,-3.377464,-4.114541,5.551675,-0.449246,3.388867,-6.836848,0.285346,8.265601,2.436536,9.235274,8.011900,1.125965,-2.907585,-5.701151,2.092710,-4.877401,2.103517,8.658245,-6.690031,-2.854856,8.446375,8.636346,4.942810,-2.249946,3.926573,0.725874,5.973079,6.588901,-5.022939,9.617094,-5.088188,3.214612,-3.984768,-0.410586,2.790470,4.418566,6.230521,6.411299,1.813611,0.424961,5.278806,4.089419,1.079734,-7.167499,-2.845309,7.638374,-7.079294,-7.783466,2.432668,7.853641,-0.724883,1.721357,3.588147,-8.440695,1.353758,5.568478], dtype = "float64")#candidate|3066|(455,)|const|float64
call_3065 = func_398_call(relay.reshape(const_3066.astype('float64'), [13, 7, 5]))
call_3067 = func_398_call(relay.reshape(const_3066.astype('float64'), [13, 7, 5]))
var_3074 = relay.var("var_3074", dtype = "float32", shape = (165,))#candidate|3074|(165,)|var|float32
bop_3075 = relay.add(call_3012.astype('uint32'), relay.reshape(var_3074.astype('uint32'), relay.shape_of(call_3012))) # shape=(165,)
bop_3078 = relay.add(call_3013.astype('uint32'), relay.reshape(var_3074.astype('uint32'), relay.shape_of(call_3013))) # shape=(165,)
output = relay.Tuple([uop_3043,call_3065,const_3066,bop_3075,])
output2 = relay.Tuple([uop_3045,call_3067,const_3066,bop_3078,])
func_3089 = relay.Function([var_3074,], output)
mod['func_3089'] = func_3089
mod = relay.transform.InferType()(mod)
var_3090 = relay.var("var_3090", dtype = "float32", shape = (165,))#candidate|3090|(165,)|var|float32
output = func_3089(var_3090)
func_3091 = relay.Function([var_3090], output)
mutated_mod['func_3091'] = func_3091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_3139 = relay.TupleGetItem(func_888_call(), 0)
call_3140 = relay.TupleGetItem(func_889_call(), 0)
output = call_3139
output2 = call_3140
func_3142 = relay.Function([], output)
mod['func_3142'] = func_3142
mod = relay.transform.InferType()(mod)
output = func_3142()
func_3143 = relay.Function([], output)
mutated_mod['func_3143'] = func_3143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_3149 = relay.TupleGetItem(func_377_call(), 0)
call_3150 = relay.TupleGetItem(func_378_call(), 0)
func_251_call = mod.get_global_var('func_251')
func_253_call = mutated_mod.get_global_var('func_253')
var_3155 = relay.var("var_3155", dtype = "float32", shape = (1053,))#candidate|3155|(1053,)|var|float32
call_3154 = relay.TupleGetItem(func_251_call(relay.reshape(var_3155.astype('float32'), [13, 9, 9])), 2)
call_3156 = relay.TupleGetItem(func_253_call(relay.reshape(var_3155.astype('float32'), [13, 9, 9])), 2)
func_1651_call = mod.get_global_var('func_1651')
func_1653_call = mutated_mod.get_global_var('func_1653')
call_3199 = func_1651_call()
call_3200 = func_1651_call()
func_1274_call = mod.get_global_var('func_1274')
func_1276_call = mutated_mod.get_global_var('func_1276')
call_3202 = relay.TupleGetItem(func_1274_call(), 0)
call_3203 = relay.TupleGetItem(func_1276_call(), 0)
output = relay.Tuple([call_3149,call_3154,var_3155,call_3199,call_3202,])
output2 = relay.Tuple([call_3150,call_3156,var_3155,call_3200,call_3203,])
func_3210 = relay.Function([var_3155,], output)
mod['func_3210'] = func_3210
mod = relay.transform.InferType()(mod)
mutated_mod['func_3210'] = func_3210
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3211 = relay.var("var_3211", dtype = "float32", shape = (1053,))#candidate|3211|(1053,)|var|float32
func_3210_call = mutated_mod.get_global_var('func_3210')
call_3212 = func_3210_call(var_3211)
output = call_3212
func_3213 = relay.Function([var_3211], output)
mutated_mod['func_3213'] = func_3213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_217_call = mod.get_global_var('func_217')
func_218_call = mutated_mod.get_global_var('func_218')
call_3226 = relay.TupleGetItem(func_217_call(), 0)
call_3227 = relay.TupleGetItem(func_218_call(), 0)
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
const_3231 = relay.const([-2,-10,1,-2,-3,8,-7,-6,5,9,-10,-2,-8,2,-3,1,-7,6,1,3,-3,9,8,-6,7,-8,-2,9,-1,5,9,-1,-9,2,-3,3,-8,7,8,-6,9,-3,6,-10], dtype = "int16")#candidate|3231|(44,)|const|int16
call_3230 = relay.TupleGetItem(func_2210_call(relay.reshape(const_3231.astype('int16'), [1, 11, 4])), 0)
call_3232 = relay.TupleGetItem(func_2212_call(relay.reshape(const_3231.astype('int16'), [1, 11, 4])), 0)
output = relay.Tuple([call_3226,call_3230,const_3231,])
output2 = relay.Tuple([call_3227,call_3232,const_3231,])
func_3244 = relay.Function([], output)
mod['func_3244'] = func_3244
mod = relay.transform.InferType()(mod)
mutated_mod['func_3244'] = func_3244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mutated_mod.get_global_var('func_3244')
call_3245 = func_3244_call()
output = call_3245
func_3246 = relay.Function([], output)
mutated_mod['func_3246'] = func_3246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_3257 = relay.TupleGetItem(func_2843_call(), 1)
call_3258 = relay.TupleGetItem(func_2845_call(), 1)
var_3261 = relay.var("var_3261", dtype = "int32", shape = (13, 7, 5))#candidate|3261|(13, 7, 5)|var|int32
bop_3262 = relay.logical_xor(call_3257.astype('int64'), relay.reshape(var_3261.astype('int64'), relay.shape_of(call_3257))) # shape=(13, 7, 5)
bop_3265 = relay.logical_xor(call_3258.astype('int64'), relay.reshape(var_3261.astype('int64'), relay.shape_of(call_3258))) # shape=(13, 7, 5)
output = bop_3262
output2 = bop_3265
func_3266 = relay.Function([var_3261,], output)
mod['func_3266'] = func_3266
mod = relay.transform.InferType()(mod)
mutated_mod['func_3266'] = func_3266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3267 = relay.var("var_3267", dtype = "int32", shape = (13, 7, 5))#candidate|3267|(13, 7, 5)|var|int32
func_3266_call = mutated_mod.get_global_var('func_3266')
call_3268 = func_3266_call(var_3267)
output = call_3268
func_3269 = relay.Function([var_3267], output)
mutated_mod['func_3269'] = func_3269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1848_call = mod.get_global_var('func_1848')
func_1849_call = mutated_mod.get_global_var('func_1849')
call_3276 = func_1848_call()
call_3277 = func_1848_call()
func_922_call = mod.get_global_var('func_922')
func_923_call = mutated_mod.get_global_var('func_923')
call_3281 = relay.TupleGetItem(func_922_call(), 1)
call_3282 = relay.TupleGetItem(func_923_call(), 1)
output = relay.Tuple([call_3276,call_3281,])
output2 = relay.Tuple([call_3277,call_3282,])
func_3284 = relay.Function([], output)
mod['func_3284'] = func_3284
mod = relay.transform.InferType()(mod)
output = func_3284()
func_3285 = relay.Function([], output)
mutated_mod['func_3285'] = func_3285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1137_call = mod.get_global_var('func_1137')
func_1138_call = mutated_mod.get_global_var('func_1138')
call_3303 = relay.TupleGetItem(func_1137_call(), 0)
call_3304 = relay.TupleGetItem(func_1138_call(), 0)
func_2647_call = mod.get_global_var('func_2647')
func_2649_call = mutated_mod.get_global_var('func_2649')
const_3315 = relay.const([[5.723569,8.152904,3.954282,9.210983,8.931761,3.703373,2.280640],[0.213704,-4.813187,-8.148235,0.977170,-5.818347,-6.653501,-1.934085],[-0.241504,-2.210895,-2.436460,-2.520297,4.005330,0.420602,-3.185666],[-0.452015,-6.464607,-9.004379,-8.724233,8.201221,-4.212125,-9.579385],[5.926741,8.498802,-8.513444,4.170387,0.272181,-8.846520,7.538798],[-3.132638,-7.684279,-2.917671,-8.345019,-1.693204,2.734854,-4.322816],[9.140768,-1.372189,-0.806458,-7.531474,1.262470,8.369479,5.772994],[0.155139,6.591867,-0.881167,-6.625726,2.401287,1.378486,8.201440],[8.100389,-6.455131,-8.278322,6.170744,0.563813,1.510684,-1.486945],[0.287378,0.737436,-9.055997,-9.891860,-2.425892,7.260292,9.884364],[4.229070,0.765203,3.652916,2.319157,-7.603040,-2.086065,-2.085591],[-1.431156,-7.160051,-3.779494,-9.189343,3.301249,-6.278610,2.078628],[1.853493,-2.237691,-2.991562,8.465211,-9.566844,5.366088,1.411295],[-6.517063,-0.950930,-2.192544,-4.320555,-3.622194,-8.196139,-7.790920],[0.894715,-6.131669,-9.063863,-4.041888,5.535952,-8.585204,-3.531984],[-3.539526,4.203385,-8.632970,-8.818583,0.896013,4.651255,4.453692],[9.277240,-1.024121,-1.492321,7.632076,-9.097619,1.175098,5.073967],[9.434363,0.043913,9.162131,-2.141357,-3.066681,0.752586,8.681093],[8.456240,-5.794454,-7.710003,-0.766077,1.240257,-9.422379,2.430570],[3.212762,5.735863,-8.589995,5.723992,-8.628105,1.618432,-4.645478],[-9.436991,-2.134981,-2.377904,-8.115345,8.410582,7.480836,-1.870681],[-7.640569,9.621334,-7.617470,-0.775485,-0.185010,-3.945937,1.601233],[2.252315,-4.603895,-0.925308,-1.909131,7.595597,3.626888,4.987069],[-2.978004,-9.711314,5.419685,-3.352043,1.050206,-4.723462,-6.474955],[-4.271995,9.768035,6.911328,2.745037,-6.387894,4.727883,-9.202065],[-8.875234,3.680858,1.419836,-6.050543,-1.592068,-5.257590,9.855578],[4.508874,9.672473,-6.180605,4.082452,9.307573,7.107795,-4.683685],[4.210623,6.445541,-4.685779,-2.966730,1.570054,-1.696409,-7.688385],[6.515715,-4.694351,4.603789,-7.275881,-7.889361,-4.672947,-8.127711],[9.818314,-4.199337,5.541147,-2.601394,-4.763752,8.592265,9.909696],[9.549755,-6.123421,-6.461300,8.995732,-1.047906,9.914831,-2.608245],[-8.682853,0.453503,2.037694,1.621251,6.495529,2.452418,-9.206691],[3.714519,-9.617787,6.195844,3.718492,9.226235,-1.312617,-8.216410],[-6.027047,3.696024,6.193678,-1.119446,-6.844621,1.092136,-7.821199],[7.221606,8.620957,-0.587014,-5.674527,-7.859734,6.716729,-9.360631],[-1.802841,9.078596,0.997889,1.312422,6.170791,-7.011897,5.421197],[-8.090411,-3.540822,6.996186,-0.263287,4.198132,8.847028,0.337301],[-3.926264,-0.861142,-8.660343,0.826641,-1.559911,1.070907,4.720100],[9.997206,3.091233,-6.212799,-9.892172,-0.211609,4.353334,1.111779],[7.181171,-2.136845,-8.680241,-5.435681,-1.175695,1.238622,8.394490],[1.736694,-7.896814,1.475847,-7.012913,1.650833,2.018890,2.535902],[4.234571,-0.229821,6.262257,-7.026855,1.292928,3.855628,2.054250],[3.138552,3.208861,7.938047,3.670484,9.400945,-6.450425,-1.115335],[-7.531922,-4.971718,-1.859355,8.728726,5.258249,-0.667815,-6.245908],[3.632599,-5.752360,-7.642513,3.818685,8.120191,0.650576,-6.833998],[1.477500,7.848207,-4.083517,9.714116,-7.040193,8.033547,7.681085],[8.162078,6.719187,1.216699,6.929859,5.864825,7.516853,0.917266],[6.867652,-7.112578,3.160516,2.793529,9.864982,-8.710502,6.176910],[-2.963630,0.653386,-2.195700,-3.134889,-4.232268,-0.990191,-3.642036],[-0.605273,-5.921919,7.462983,-9.112044,-1.503060,-3.951321,1.798025],[-7.323951,-7.626966,3.756729,-8.530528,-0.033479,3.861474,-8.049662],[-9.426644,9.256679,-4.883169,1.527626,-6.498578,-8.039765,3.357749],[-0.491518,-5.268249,4.635538,5.351857,-0.795975,-8.213417,-7.619993],[-4.305033,1.662321,9.956075,7.537319,-9.260397,1.171556,8.699335],[-7.979184,7.405742,9.869498,8.633124,-3.588956,2.617762,-3.476115],[-0.091692,3.594336,1.374409,1.945433,6.561962,-9.171833,0.075961],[-2.526702,-7.067219,0.352472,6.802900,6.731441,7.004509,-6.866673],[-8.342272,6.171895,3.365858,6.003805,3.865940,-3.164917,-2.722565],[1.524894,-2.022638,-3.860808,-2.863872,-9.625711,-4.070212,-1.705019],[-9.951376,-2.101924,7.326907,7.667649,-9.132465,7.945605,2.776215],[-5.104247,-4.589704,-7.779790,5.660137,7.481673,-7.420755,8.737808],[5.729955,4.247354,-2.948415,6.696531,6.370765,6.630862,6.296830],[1.239825,-5.327236,-3.390919,5.576622,7.787992,1.789154,-0.117400],[0.084990,-5.286701,4.863469,-4.094646,8.218311,4.354970,-4.448358],[-8.833795,5.428541,-1.478150,1.909073,8.751180,0.907422,4.881761]], dtype = "float64")#candidate|3315|(65, 7)|const|float64
call_3314 = relay.TupleGetItem(func_2647_call(relay.reshape(const_3315.astype('float64'), [455,])), 3)
call_3316 = relay.TupleGetItem(func_2649_call(relay.reshape(const_3315.astype('float64'), [455,])), 3)
output = relay.Tuple([call_3303,call_3314,const_3315,])
output2 = relay.Tuple([call_3304,call_3316,const_3315,])
func_3329 = relay.Function([], output)
mod['func_3329'] = func_3329
mod = relay.transform.InferType()(mod)
mutated_mod['func_3329'] = func_3329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3329_call = mutated_mod.get_global_var('func_3329')
call_3330 = func_3329_call()
output = call_3330
func_3331 = relay.Function([], output)
mutated_mod['func_3331'] = func_3331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_3332 = relay.TupleGetItem(func_2843_call(), 2)
call_3333 = relay.TupleGetItem(func_2845_call(), 2)
var_3334 = relay.var("var_3334", dtype = "float64", shape = (455,))#candidate|3334|(455,)|var|float64
bop_3335 = relay.add(call_3332.astype('uint8'), relay.reshape(var_3334.astype('uint8'), relay.shape_of(call_3332))) # shape=(455,)
bop_3338 = relay.add(call_3333.astype('uint8'), relay.reshape(var_3334.astype('uint8'), relay.shape_of(call_3333))) # shape=(455,)
uop_3344 = relay.atanh(call_3332.astype('float32')) # shape=(455,)
uop_3346 = relay.atanh(call_3333.astype('float32')) # shape=(455,)
uop_3347 = relay.sqrt(uop_3344.astype('float64')) # shape=(455,)
uop_3349 = relay.sqrt(uop_3346.astype('float64')) # shape=(455,)
var_3355 = relay.var("var_3355", dtype = "float64", shape = (455,))#candidate|3355|(455,)|var|float64
bop_3356 = relay.bitwise_or(uop_3347.astype('uint16'), relay.reshape(var_3355.astype('uint16'), relay.shape_of(uop_3347))) # shape=(455,)
bop_3359 = relay.bitwise_or(uop_3349.astype('uint16'), relay.reshape(var_3355.astype('uint16'), relay.shape_of(uop_3349))) # shape=(455,)
bop_3360 = relay.subtract(uop_3347.astype('float32'), relay.reshape(bop_3335.astype('float32'), relay.shape_of(uop_3347))) # shape=(455,)
bop_3363 = relay.subtract(uop_3349.astype('float32'), relay.reshape(bop_3338.astype('float32'), relay.shape_of(uop_3349))) # shape=(455,)
func_1894_call = mod.get_global_var('func_1894')
func_1895_call = mutated_mod.get_global_var('func_1895')
call_3372 = func_1894_call()
call_3373 = func_1894_call()
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_3374 = relay.TupleGetItem(func_2971_call(relay.reshape(call_3372.astype('float32'), [165,])), 2)
call_3375 = relay.TupleGetItem(func_2973_call(relay.reshape(call_3372.astype('float32'), [165,])), 2)
bop_3377 = relay.floor_mod(uop_3344.astype('float64'), relay.reshape(bop_3356.astype('float64'), relay.shape_of(uop_3344))) # shape=(455,)
bop_3380 = relay.floor_mod(uop_3346.astype('float64'), relay.reshape(bop_3359.astype('float64'), relay.shape_of(uop_3346))) # shape=(455,)
output = relay.Tuple([bop_3360,call_3372,call_3374,bop_3377,])
output2 = relay.Tuple([bop_3363,call_3373,call_3375,bop_3380,])
func_3390 = relay.Function([var_3334,var_3355,], output)
mod['func_3390'] = func_3390
mod = relay.transform.InferType()(mod)
mutated_mod['func_3390'] = func_3390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3390_call = mutated_mod.get_global_var('func_3390')
var_3392 = relay.var("var_3392", dtype = "float64", shape = (455,))#candidate|3392|(455,)|var|float64
var_3393 = relay.var("var_3393", dtype = "float64", shape = (455,))#candidate|3393|(455,)|var|float64
call_3391 = func_3390_call(var_3392,var_3393,)
output = call_3391
func_3394 = relay.Function([var_3392,var_3393,], output)
mutated_mod['func_3394'] = func_3394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
call_3461 = relay.TupleGetItem(func_1409_call(), 0)
call_3462 = relay.TupleGetItem(func_1411_call(), 0)
func_3266_call = mod.get_global_var('func_3266')
func_3269_call = mutated_mod.get_global_var('func_3269')
const_3474 = relay.const([[10,-3,7,-2,-6,7,-5,-4,9,-3,3,6,6,-10,1,-4,-8,-5,-2,1,1,-1,-10,9,8,-10,1,-2,-1,3,-8,4,-5,-1,7,-2,-2,9,7,-1,-9,5,7,7,10,2,7,6,-5,9,-8,4,-6,-2,-10,-10,-4,-1,4,10,9,4,6,-10,-6,4,-1,-4,1,2,8,2,-6,-4,-10,6,6,5,-9,-4,-5,-9,-9,5,-8,3,10,-2,8,-9,-2,-8,-5,8,-10,-9,3,3,-2,1,-7,7,-8,4,-7,-4,7,7,7,-6,-8,-3,-4,2,-5,7,5,-9,-5,9,-5,-2,5,6,5,-2,-8,3,-1,9,5,-8,-2,-3,10,-10,5,1,9,3,-9,6,-7,-1,-5,-6,6,3,3,-4,8,-9,-6,-2,-8,-1,-7,4,8,-6,-6,5,6,-10,4,1,-10,2,3,-4,-8,-7,2,2,-5,-4,9,-4,7,-4,-10,2,9,9,-9,-4,8,3,1,1,-4,-8,6,9,-8,4,-10,-1,10,3,-2,8,8,-1,7,-6,1,-5,8,10,-7,-3,1,-7,3,-2,-9,-7,10,-6,2,-9,6,7,7,7,4,-10,3,7,9,10,-8,5,-5,-8,-10,7,2,-9,3,-1,-7,1,-10,5,8,9,2,-7,-4,-3,3,-10,6,-3,7,-6,-7,-6,7,-10,7,-4,-3,8,-7,2,1,-6,3,-5,-5,9,-10,-1,-6,-6,2,4,3,5,-4,-2,10,3,-5,-8,-1,-4,-9,2,8,10,7,7,7,2,10,-8,9,-8,2,-7,-10,-4,6,4,-3,5,-8,2,6,-9,-7,1,-8,2,-2,3,-10,10,-2,-1,9,-6,8,-4,-1,5,2,4,4,10,-5,-7,-1,-2,-3,9,-8,-1,-3,5,2,4,5,-3,-3,4,-7,4,9,-10,-10,-6,-6,-7,4,4,1,9,5,-4,5,8,-10,-10,10,-1,1,-9,4,5,-7,5,7,5,-6,-10,-8,4,1,-4,6,-1,3,-3,5,5,8,-1,2,5,-4,8,3,7,6,5,9,10,-4,-6,-2,3,1,-3,8,10,4,2,-9,-1,2,-8,10,2,-10,6,-9,2,-3,-2,4,2,1,-7,-5,-9,6,8,5,1,8,7,-6,-9,3,-9,7,-7,7,1,6,-9,-7,-8,6,-6,-9,-4,-10,-4,-6]], dtype = "int32")#candidate|3474|(1, 455)|const|int32
call_3473 = func_3266_call(relay.reshape(const_3474.astype('int32'), [13, 7, 5]))
call_3475 = func_3266_call(relay.reshape(const_3474.astype('int32'), [13, 7, 5]))
uop_3485 = relay.asin(const_3474.astype('float32')) # shape=(1, 455)
output = relay.Tuple([call_3461,call_3473,uop_3485,])
output2 = relay.Tuple([call_3462,call_3475,uop_3485,])
func_3491 = relay.Function([], output)
mod['func_3491'] = func_3491
mod = relay.transform.InferType()(mod)
output = func_3491()
func_3492 = relay.Function([], output)
mutated_mod['func_3492'] = func_3492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1871_call = mod.get_global_var('func_1871')
func_1873_call = mutated_mod.get_global_var('func_1873')
call_3493 = relay.TupleGetItem(func_1871_call(), 0)
call_3494 = relay.TupleGetItem(func_1873_call(), 0)
output = call_3493
output2 = call_3494
func_3529 = relay.Function([], output)
mod['func_3529'] = func_3529
mod = relay.transform.InferType()(mod)
output = func_3529()
func_3530 = relay.Function([], output)
mutated_mod['func_3530'] = func_3530
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3566 = relay.var("var_3566", dtype = "float32", shape = (10, 11, 9))#candidate|3566|(10, 11, 9)|var|float32
uop_3567 = relay.acosh(var_3566.astype('float32')) # shape=(10, 11, 9)
output = relay.Tuple([uop_3567,])
output2 = relay.Tuple([uop_3567,])
func_3573 = relay.Function([var_3566,], output)
mod['func_3573'] = func_3573
mod = relay.transform.InferType()(mod)
var_3574 = relay.var("var_3574", dtype = "float32", shape = (10, 11, 9))#candidate|3574|(10, 11, 9)|var|float32
output = func_3573(var_3574)
func_3575 = relay.Function([var_3574], output)
mutated_mod['func_3575'] = func_3575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1137_call = mod.get_global_var('func_1137')
func_1138_call = mutated_mod.get_global_var('func_1138')
call_3632 = relay.TupleGetItem(func_1137_call(), 0)
call_3633 = relay.TupleGetItem(func_1138_call(), 0)
output = relay.Tuple([call_3632,])
output2 = relay.Tuple([call_3633,])
func_3637 = relay.Function([], output)
mod['func_3637'] = func_3637
mod = relay.transform.InferType()(mod)
mutated_mod['func_3637'] = func_3637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3637_call = mutated_mod.get_global_var('func_3637')
call_3638 = func_3637_call()
output = call_3638
func_3639 = relay.Function([], output)
mutated_mod['func_3639'] = func_3639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_147_call = mod.get_global_var('func_147')
func_149_call = mutated_mod.get_global_var('func_149')
call_3652 = relay.TupleGetItem(func_147_call(), 2)
call_3653 = relay.TupleGetItem(func_149_call(), 2)
output = call_3652
output2 = call_3653
func_3662 = relay.Function([], output)
mod['func_3662'] = func_3662
mod = relay.transform.InferType()(mod)
mutated_mod['func_3662'] = func_3662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3662_call = mutated_mod.get_global_var('func_3662')
call_3663 = func_3662_call()
output = call_3663
func_3664 = relay.Function([], output)
mutated_mod['func_3664'] = func_3664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1480_call = mod.get_global_var('func_1480')
func_1482_call = mutated_mod.get_global_var('func_1482')
call_3665 = relay.TupleGetItem(func_1480_call(), 0)
call_3666 = relay.TupleGetItem(func_1482_call(), 0)
output = call_3665
output2 = call_3666
func_3699 = relay.Function([], output)
mod['func_3699'] = func_3699
mod = relay.transform.InferType()(mod)
output = func_3699()
func_3700 = relay.Function([], output)
mutated_mod['func_3700'] = func_3700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3662_call = mod.get_global_var('func_3662')
func_3664_call = mutated_mod.get_global_var('func_3664')
call_3723 = func_3662_call()
call_3724 = func_3662_call()
output = relay.Tuple([call_3723,])
output2 = relay.Tuple([call_3724,])
func_3727 = relay.Function([], output)
mod['func_3727'] = func_3727
mod = relay.transform.InferType()(mod)
output = func_3727()
func_3728 = relay.Function([], output)
mutated_mod['func_3728'] = func_3728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_955_call = mod.get_global_var('func_955')
func_957_call = mutated_mod.get_global_var('func_957')
call_3741 = relay.TupleGetItem(func_955_call(), 0)
call_3742 = relay.TupleGetItem(func_957_call(), 0)
output = call_3741
output2 = call_3742
func_3743 = relay.Function([], output)
mod['func_3743'] = func_3743
mod = relay.transform.InferType()(mod)
mutated_mod['func_3743'] = func_3743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3743_call = mutated_mod.get_global_var('func_3743')
call_3744 = func_3743_call()
output = call_3744
func_3745 = relay.Function([], output)
mutated_mod['func_3745'] = func_3745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1137_call = mod.get_global_var('func_1137')
func_1138_call = mutated_mod.get_global_var('func_1138')
call_3775 = relay.TupleGetItem(func_1137_call(), 0)
call_3776 = relay.TupleGetItem(func_1138_call(), 0)
output = relay.Tuple([call_3775,])
output2 = relay.Tuple([call_3776,])
func_3799 = relay.Function([], output)
mod['func_3799'] = func_3799
mod = relay.transform.InferType()(mod)
mutated_mod['func_3799'] = func_3799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3799_call = mutated_mod.get_global_var('func_3799')
call_3800 = func_3799_call()
output = call_3800
func_3801 = relay.Function([], output)
mutated_mod['func_3801'] = func_3801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3662_call = mod.get_global_var('func_3662')
func_3664_call = mutated_mod.get_global_var('func_3664')
call_3866 = func_3662_call()
call_3867 = func_3662_call()
output = call_3866
output2 = call_3867
func_3889 = relay.Function([], output)
mod['func_3889'] = func_3889
mod = relay.transform.InferType()(mod)
mutated_mod['func_3889'] = func_3889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3889_call = mutated_mod.get_global_var('func_3889')
call_3890 = func_3889_call()
output = call_3890
func_3891 = relay.Function([], output)
mutated_mod['func_3891'] = func_3891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_876_call = mod.get_global_var('func_876')
func_877_call = mutated_mod.get_global_var('func_877')
call_3911 = relay.TupleGetItem(func_876_call(), 6)
call_3912 = relay.TupleGetItem(func_877_call(), 6)
func_876_call = mod.get_global_var('func_876')
func_877_call = mutated_mod.get_global_var('func_877')
call_3922 = relay.TupleGetItem(func_876_call(), 1)
call_3923 = relay.TupleGetItem(func_877_call(), 1)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
var_3927 = relay.var("var_3927", dtype = "float32", shape = (165,))#candidate|3927|(165,)|var|float32
call_3926 = relay.TupleGetItem(func_2971_call(relay.reshape(var_3927.astype('float32'), [165,])), 0)
call_3928 = relay.TupleGetItem(func_2973_call(relay.reshape(var_3927.astype('float32'), [165,])), 0)
output = relay.Tuple([call_3911,call_3922,call_3926,var_3927,])
output2 = relay.Tuple([call_3912,call_3923,call_3928,var_3927,])
func_3931 = relay.Function([var_3927,], output)
mod['func_3931'] = func_3931
mod = relay.transform.InferType()(mod)
mutated_mod['func_3931'] = func_3931
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3932 = relay.var("var_3932", dtype = "float32", shape = (165,))#candidate|3932|(165,)|var|float32
func_3931_call = mutated_mod.get_global_var('func_3931')
call_3933 = func_3931_call(var_3932)
output = call_3933
func_3934 = relay.Function([var_3932], output)
mutated_mod['func_3934'] = func_3934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3329_call = mod.get_global_var('func_3329')
func_3331_call = mutated_mod.get_global_var('func_3331')
call_3941 = relay.TupleGetItem(func_3329_call(), 1)
call_3942 = relay.TupleGetItem(func_3331_call(), 1)
output = call_3941
output2 = call_3942
func_3950 = relay.Function([], output)
mod['func_3950'] = func_3950
mod = relay.transform.InferType()(mod)
mutated_mod['func_3950'] = func_3950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3950_call = mutated_mod.get_global_var('func_3950')
call_3951 = func_3950_call()
output = call_3951
func_3952 = relay.Function([], output)
mutated_mod['func_3952'] = func_3952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_4039 = relay.TupleGetItem(func_377_call(), 0)
call_4040 = relay.TupleGetItem(func_378_call(), 0)
func_512_call = mod.get_global_var('func_512')
func_516_call = mutated_mod.get_global_var('func_516')
var_4049 = relay.var("var_4049", dtype = "float64", shape = (455,))#candidate|4049|(455,)|var|float64
call_4048 = relay.TupleGetItem(func_512_call(relay.reshape(var_4049.astype('float64'), [13, 7, 5]), relay.reshape(var_4049.astype('float64'), [13, 7, 5]), ), 4)
call_4050 = relay.TupleGetItem(func_516_call(relay.reshape(var_4049.astype('float64'), [13, 7, 5]), relay.reshape(var_4049.astype('float64'), [13, 7, 5]), ), 4)
func_3637_call = mod.get_global_var('func_3637')
func_3639_call = mutated_mod.get_global_var('func_3639')
call_4069 = relay.TupleGetItem(func_3637_call(), 0)
call_4070 = relay.TupleGetItem(func_3639_call(), 0)
output = relay.Tuple([call_4039,call_4048,var_4049,call_4069,])
output2 = relay.Tuple([call_4040,call_4050,var_4049,call_4070,])
func_4073 = relay.Function([var_4049,], output)
mod['func_4073'] = func_4073
mod = relay.transform.InferType()(mod)
mutated_mod['func_4073'] = func_4073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4074 = relay.var("var_4074", dtype = "float64", shape = (455,))#candidate|4074|(455,)|var|float64
func_4073_call = mutated_mod.get_global_var('func_4073')
call_4075 = func_4073_call(var_4074)
output = call_4075
func_4076 = relay.Function([var_4074], output)
mutated_mod['func_4076'] = func_4076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1274_call = mod.get_global_var('func_1274')
func_1276_call = mutated_mod.get_global_var('func_1276')
call_4082 = relay.TupleGetItem(func_1274_call(), 0)
call_4083 = relay.TupleGetItem(func_1276_call(), 0)
output = relay.Tuple([call_4082,])
output2 = relay.Tuple([call_4083,])
func_4084 = relay.Function([], output)
mod['func_4084'] = func_4084
mod = relay.transform.InferType()(mod)
mutated_mod['func_4084'] = func_4084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mutated_mod.get_global_var('func_4084')
call_4085 = func_4084_call()
output = call_4085
func_4086 = relay.Function([], output)
mutated_mod['func_4086'] = func_4086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3284_call = mod.get_global_var('func_3284')
func_3285_call = mutated_mod.get_global_var('func_3285')
call_4104 = relay.TupleGetItem(func_3284_call(), 0)
call_4105 = relay.TupleGetItem(func_3285_call(), 0)
output = call_4104
output2 = call_4105
func_4110 = relay.Function([], output)
mod['func_4110'] = func_4110
mod = relay.transform.InferType()(mod)
mutated_mod['func_4110'] = func_4110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4110_call = mutated_mod.get_global_var('func_4110')
call_4111 = func_4110_call()
output = call_4111
func_4112 = relay.Function([], output)
mutated_mod['func_4112'] = func_4112
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4117 = relay.const([[[4,-9],[-3,-7]],[[1,5],[-7,5]],[[-5,5],[-1,5]],[[-8,-2],[2,9]],[[5,-7],[9,3]],[[3,7],[-4,-7]],[[1,-7],[10,8]],[[4,1],[8,-2]],[[-9,3],[-2,-10]],[[-6,-4],[-9,-9]],[[3,-7],[-1,3]]], dtype = "uint32")#candidate|4117|(11, 2, 2)|const|uint32
var_4118 = relay.var("var_4118", dtype = "uint32", shape = (11, 2, 2))#candidate|4118|(11, 2, 2)|var|uint32
bop_4119 = relay.right_shift(const_4117.astype('uint32'), relay.reshape(var_4118.astype('uint32'), relay.shape_of(const_4117))) # shape=(11, 2, 2)
output = relay.Tuple([bop_4119,])
output2 = relay.Tuple([bop_4119,])
func_4128 = relay.Function([var_4118,], output)
mod['func_4128'] = func_4128
mod = relay.transform.InferType()(mod)
mutated_mod['func_4128'] = func_4128
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4129 = relay.var("var_4129", dtype = "uint32", shape = (11, 2, 2))#candidate|4129|(11, 2, 2)|var|uint32
func_4128_call = mutated_mod.get_global_var('func_4128')
call_4130 = func_4128_call(var_4129)
output = call_4130
func_4131 = relay.Function([var_4129], output)
mutated_mod['func_4131'] = func_4131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2724_call = mod.get_global_var('func_2724')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_4160 = relay.TupleGetItem(func_2724_call(), 0)
call_4161 = relay.TupleGetItem(func_2725_call(), 0)
func_3727_call = mod.get_global_var('func_3727')
func_3728_call = mutated_mod.get_global_var('func_3728')
call_4170 = relay.TupleGetItem(func_3727_call(), 0)
call_4171 = relay.TupleGetItem(func_3728_call(), 0)
func_1137_call = mod.get_global_var('func_1137')
func_1138_call = mutated_mod.get_global_var('func_1138')
call_4175 = relay.TupleGetItem(func_1137_call(), 0)
call_4176 = relay.TupleGetItem(func_1138_call(), 0)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_4179 = relay.TupleGetItem(func_2971_call(relay.reshape(call_4160.astype('float32'), [165,])), 2)
call_4180 = relay.TupleGetItem(func_2973_call(relay.reshape(call_4160.astype('float32'), [165,])), 2)
func_922_call = mod.get_global_var('func_922')
func_923_call = mutated_mod.get_global_var('func_923')
call_4199 = relay.TupleGetItem(func_922_call(), 1)
call_4200 = relay.TupleGetItem(func_923_call(), 1)
func_2413_call = mod.get_global_var('func_2413')
func_2415_call = mutated_mod.get_global_var('func_2415')
call_4212 = relay.TupleGetItem(func_2413_call(relay.reshape(call_4175.astype('float32'), [165,])), 1)
call_4213 = relay.TupleGetItem(func_2415_call(relay.reshape(call_4175.astype('float32'), [165,])), 1)
func_1083_call = mod.get_global_var('func_1083')
func_1086_call = mutated_mod.get_global_var('func_1086')
const_4221 = relay.const([-3,-7,-1,4,-5,7,-9,-8,1,3,-4,3,9,6,-9,-6,-2,-9,-6,-4,4,-10,-2,7,2,1,8,9,10,-3,-2,3,-1,-8,-5,-9,4,3,10,3,-1,7,-10,7,2,1,8,-2,6,6,-4,2,6,8,-7,-7,-5,8,-3,-5,6,10,10,2,2,7,5,-6,9,7,2,4,10,-3,10,7,4,9,1,-9,-9,9,-8,-7,8,4,-9,9,2,-2,10,8,1,9,9,5,6,4,-10,2,-4,-9,-5,-2,-2,9,8,-7,5,8,-6,3,-8,6,7,-5,-2,-4,5,-6,-2,9,4,-8,-4,4,1,1,-6,5,-3,-4,7,4,6,8,-4,-10,7,-9,6,10,-3,-5,8,-2,-2,-7,-6,2,-2,-2,9,7,3,6,1,7,9,-5,-3,7,3,6,-7,-1,-9,7,8,4,4,-1,8,-1,7,3,10,7,5,3,2,-3,1,-2,6,10,-8,4,-6,-4,-10,-5,6,-6,-5,-3,4,-1,5,-4,9,-8,-5,-4,7,6,-4,8,4,3,2,8,1,3,-3,7,-2,-1,-7,-10,5,-2,8,1,3,-3,9,2,-3,5,1,9,7,10,7,8,7,-10,-1,9,4,-8,-3,4,3,-3,-1,8,4,-2,8,-10,-2,-10,-1,7,-10,2,-7,-1,-6,-5,-9,-5,-10,4,6,5,-6,1,5,-7,-4,8,5,-2,-6,-8,-3,-9,-9,-3,9,-3,4,-2,-3,-3,8,-8,3,-2,10,-5,4,-6,-1,5,8,4,-3,10,-5,-3,-4,-6,3,-7,9,-6,10,-3,10,8,10,-9,-10,9,3,8,6,-6,3,4,7,-4,-1,-5,-9,-10,-9,-9,9,2,-3,9,6,8,9,1,1,3,2,-4,3,9,-2,-10,-8,3,5,-1,-5,10,3,8,-7,-8,8,-2,-8,6,-1,1,9,3,3,-6,-4,-2,8,-1,-2,-5,-2,5,10,-10,-6,-10,-4,-8,6,-9,10,5,3,4,4,-8,-8,4,2,9,-6,4,2,1,8,6,9,-6,9,10,1,10,8,-1,10,2,-9,-6,-8,10,-6,4,10,-10,1,-2,5,-6,-8,7,7,3,-6,8,7,2,4,9,-7,1,-8,-4,7,-9,-7,2,-8,9,-6,-1,-4,-6,-10,-2,-5,-9,-8,-9,-1,9,-7,-1,5,-8,-8,6,2,2,-1,1,9,-3,10,-3,10,-10,-2,9,-2,10,6,2,10,-1,8,8,-9,6,3,-4,-3,8,-7,5,-6,9,-1,-1,5,-5,-2,-2,-4,-4,-2,-9,-3,10,-6,7,-10,-3,9,3,3,-9,-2,10,3,-2,10,-10,8,3,5,-5,8,5,1,-1,7,-3,-1,5,-7,-9,-10,-2,-8,-4,4,-5,7,-8,-9,5,7,7,3,3,8,-6,10,-9,-2,-1,-10,7,-10,8,-3,7,2,-9,-5,2,-6,-4,-8,-5,3,5,4,-3,-6,-6,-3,-9,7,10,2,-9,-2,-5,5,-1,7,4,-7,-8,9,3,6,-8,2,7,10,2,-9,4,-8,4,8,-1,-8,-9,-4,8,-6,3,4,2,5,10,3,-10,7,-8,-4,2,-9,-9,-3,1,5,7,-5,5,-5,4,7,10,-9,-10,7,-5,1,9,10,5,-5,5,1,10,5,5,9,7,-4,-1,7,9,-7,-5,-8,10,-1,1,-5,2,-6,-3,2,3,8,-9,7,4,6,-10,-10,-8,-5,6,2,1,3,-5,5,1,1,10,-9,1,-6,2,3,-8,2,10,10,-4,-7,-9,6,-8,1,-4,-2,6,7,-3,-1,-1,-5,-7,-4,7,1,-6,6,-5,-9,7,-5,1,-4,-4,-7,8,-6,6,-7,1,-1,-8,-10,5,-3,3,9,1,2,8,10,1,2,-8,-4,-8,8,5,-8,-7,7,8,8,9,7,-9,-5,5,-10,6,-3,-1,10,-9,8,-1,10,1,1,7,-7,-6,-7,-10,7,-2,-2,-3,1,-3,2,2,-5,1,2,5,4,-4,2,7,1,10,-4,-8,-7,-2,6,10,-8,7,-6,-1,-4,1,-2,7,-2,9,-2,-9,-9,-7,-8,6,7,-7,-8,5,-5,9,-9,-1,3,-4,-6,-3,7,-9,6,-10,1,-6,-8,-2,-9,10,-5,-6,-2,3,-7,-4,6,-9,1,5,-9,-2,4,-9,2,9,-4,-8,-7,-6,-9,9,6,-10,-7,10,8,4,7,-2,-5,-8,8,-7,7,1,6,1,-10,-2,6,5,-5,3,-2,-2,-8,8,-6,-4,10,1,7,-1,-3,-4,-4,-10,-7,2,-9,-8,5,-6,-3,-6,-6,-1,8,-8,5,-7,-10,-8,3,-6,-4,-3,2,-2,8,10,-4,4,4,-3,3,-8,1,10,5,8,10,-8,1,-9,-9,-2,1,7,10,-4,1,8,9,-8,5,6,9,10,-6,-10,8,-8,-8,6,-4,-2,4,9,-9,-10,4,10,9,-5,10,10,7,-9,-10,6,-5,8,-10,3,-3,6,10,-3,7,-4,5,-5,1,-1,8,2,6,1,7,7,-8,9,10,-6,2,-4,-5,1,-4,4,10,3,8,-1,-9,-6,3,4,-9,-10,10,10,-6,1,5,-2,-3,-10,3,7,2,-9,-9,8,-3,1,-4,-1,3,-10,7,-3,9,1,-3,-3,2,-9,7,10,-6,5,1,-8,-6,-3,10,-3,-7,2,3,-6,9,7,-5,-8,-10,-8,-9,-7,7,-9,-6,-8,7,7,-7,-6,-10,-4,1,-5,5,2,-4,-10,-1,-7,-1,1,7,9,-1,-2,-7,-8,-8,-7,-10,10,10,-4,9,7,8,-10,-6,-9,-4,-9,-7,7,-4,2,-7,-8,10,-7,3,1,-4,6,-1,-6,-4,-6,-6,8,-9,-3,-1,-3,-3,2,-6,7,5,7,-8,9,-2,5,-7,-7,3,3,1,7,-6,-1,-3,2,4,3,6,4,-8,5,1,-4,-2,-8,-4,-10,-5,5,-1,-7,-8,-7,-4,-2,9,10,1,-4,-2,7,-9,-8,-8,-2,2,6,-10,6,-3,8,8,-1,5,-2,-8,-5,-6,1,6,4,3,-7,2,-8,-4,4,8,10,1,-10,-3,-7,-6,4,2,-9,8,7,-1,-3,-5,6,-4,-5,-10,-5,-10,1,-1,-9,3,-7,7,-10,-10,3,2,9,6,1,10,9,8,-7,5,1,7,-10,1,5,3,-7,7,-8,-9,-1,7,-1,1,6,-8,-5,-5,9,5,7,2,-10,1,4,-1,1,6,-2,9,-5,5,2,-7,7,-7,-7,-10,9,-8,-3,9,-6,-3,-4,-8,-1,-10,-2,8,-6,-4,5,1,7,-7,6,-2,3,-3,-2,-5,-4,10,2,5,-2,-1,7,2,-1,4,-7,10,-6,6,-3,-2,5,-3,1,-5,9,1,7,-1,4,-6,4,10,10,-9,-6,8,-5,8,-8,-9,8,6,5,4,3,-2,-7,-8,-8,-7,-7,6,5,10,-7,-4,-10,10,6,-7,-3,7,-1,6,9,4,10,2,3,1,-10,3,-3,-7,7,9,3,2,10,-3,-3,7,-6,9,8,7,4,9,-3,8,2,-1,-3,9,3,2,-9,-9,7,-2,9,4,9,3,-10,1,-8,7,7,7,-7,6,-8,-9,-3,10,2,7,7,-3,-1,-9,9,4,-1,6,8,2,-6,-10,5,3,4,-9,2,-10,-8,-3,4,-7,-8,10,4,3,6,3,5,-9,7,-2,3,1,-10,10,-6,6,9,-2,-2,7,10,9,5,6,9,-1,1,-4,8,2,3,8,8,7,4,-7,-1,2,8,7,8,-10,10,8,9,4,10,4,-1,-7,4,-1,-2,-2,-1,-8,7,-5,-1,4,5,-2,9,4,-6,7,6,-6], dtype = "uint8")#candidate|4221|(1485,)|const|uint8
call_4220 = func_1083_call(relay.reshape(const_4221.astype('uint8'), [15, 9, 11]), relay.reshape(const_4221.astype('uint8'), [15, 9, 11]), )
call_4222 = func_1083_call(relay.reshape(const_4221.astype('uint8'), [15, 9, 11]), relay.reshape(const_4221.astype('uint8'), [15, 9, 11]), )
bop_4223 = relay.greater_equal(call_4220.astype('bool'), relay.reshape(const_4221.astype('bool'), relay.shape_of(call_4220))) # shape=(15, 9, 11)
bop_4226 = relay.greater_equal(call_4222.astype('bool'), relay.reshape(const_4221.astype('bool'), relay.shape_of(call_4222))) # shape=(15, 9, 11)
func_3266_call = mod.get_global_var('func_3266')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_4233 = func_3266_call(relay.reshape(call_4199.astype('int32'), [13, 7, 5]))
call_4234 = func_3266_call(relay.reshape(call_4199.astype('int32'), [13, 7, 5]))
uop_4238 = relay.rsqrt(call_4220.astype('float64')) # shape=(15, 9, 11)
uop_4240 = relay.rsqrt(call_4222.astype('float64')) # shape=(15, 9, 11)
func_3699_call = mod.get_global_var('func_3699')
func_3700_call = mutated_mod.get_global_var('func_3700')
call_4248 = func_3699_call()
call_4249 = func_3699_call()
func_351_call = mod.get_global_var('func_351')
func_352_call = mutated_mod.get_global_var('func_352')
call_4250 = relay.TupleGetItem(func_351_call(), 1)
call_4251 = relay.TupleGetItem(func_352_call(), 1)
output = relay.Tuple([call_4160,call_4170,call_4175,call_4179,call_4199,call_4212,bop_4223,call_4233,uop_4238,call_4248,call_4250,])
output2 = relay.Tuple([call_4161,call_4171,call_4176,call_4180,call_4200,call_4213,bop_4226,call_4234,uop_4240,call_4249,call_4251,])
func_4257 = relay.Function([], output)
mod['func_4257'] = func_4257
mod = relay.transform.InferType()(mod)
mutated_mod['func_4257'] = func_4257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4257_call = mutated_mod.get_global_var('func_4257')
call_4258 = func_4257_call()
output = call_4258
func_4259 = relay.Function([], output)
mutated_mod['func_4259'] = func_4259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3662_call = mod.get_global_var('func_3662')
func_3664_call = mutated_mod.get_global_var('func_3664')
call_4262 = func_3662_call()
call_4263 = func_3662_call()
output = relay.Tuple([call_4262,])
output2 = relay.Tuple([call_4263,])
func_4275 = relay.Function([], output)
mod['func_4275'] = func_4275
mod = relay.transform.InferType()(mod)
mutated_mod['func_4275'] = func_4275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4275_call = mutated_mod.get_global_var('func_4275')
call_4276 = func_4275_call()
output = call_4276
func_4277 = relay.Function([], output)
mutated_mod['func_4277'] = func_4277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4285 = relay.var("var_4285", dtype = "float32", shape = (7, 1, 9))#candidate|4285|(7, 1, 9)|var|float32
uop_4286 = relay.asinh(var_4285.astype('float32')) # shape=(7, 1, 9)
bop_4288 = relay.maximum(uop_4286.astype('uint32'), relay.reshape(var_4285.astype('uint32'), relay.shape_of(uop_4286))) # shape=(7, 1, 9)
func_922_call = mod.get_global_var('func_922')
func_923_call = mutated_mod.get_global_var('func_923')
call_4293 = relay.TupleGetItem(func_922_call(), 1)
call_4294 = relay.TupleGetItem(func_923_call(), 1)
output = relay.Tuple([bop_4288,call_4293,])
output2 = relay.Tuple([bop_4288,call_4294,])
func_4297 = relay.Function([var_4285,], output)
mod['func_4297'] = func_4297
mod = relay.transform.InferType()(mod)
mutated_mod['func_4297'] = func_4297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4298 = relay.var("var_4298", dtype = "float32", shape = (7, 1, 9))#candidate|4298|(7, 1, 9)|var|float32
func_4297_call = mutated_mod.get_global_var('func_4297')
call_4299 = func_4297_call(var_4298)
output = call_4299
func_4300 = relay.Function([var_4298], output)
mutated_mod['func_4300'] = func_4300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_4341 = relay.TupleGetItem(func_2843_call(), 0)
call_4342 = relay.TupleGetItem(func_2845_call(), 0)
output = relay.Tuple([call_4341,])
output2 = relay.Tuple([call_4342,])
func_4349 = relay.Function([], output)
mod['func_4349'] = func_4349
mod = relay.transform.InferType()(mod)
output = func_4349()
func_4350 = relay.Function([], output)
mutated_mod['func_4350'] = func_4350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1894_call = mod.get_global_var('func_1894')
func_1895_call = mutated_mod.get_global_var('func_1895')
call_4374 = func_1894_call()
call_4375 = func_1894_call()
func_398_call = mod.get_global_var('func_398')
func_401_call = mutated_mod.get_global_var('func_401')
const_4396 = relay.const([-8.051672,-8.671528,-5.472886,3.840008,3.573097,9.394892,-9.523428,4.599054,-8.887354,3.760749,9.439964,6.747048,-4.769873,-1.238701,3.894331,-8.541601,-4.871297,6.503108,3.292486,7.193318,-2.499877,3.142851,-1.571932,-8.744946,-9.589922,-3.044640,1.511770,-6.341373,2.870508,-9.704538,-6.218742,-4.772610,4.157365,0.274937,-4.872726,3.995179,0.815631,1.271184,-2.066050,3.294368,2.099440,-8.562552,8.179074,-1.331276,0.467279,-8.963833,6.612602,-1.834787,-4.246732,-6.238287,0.367253,8.389844,-7.599134,-3.422274,-7.736726,5.855168,0.157966,-6.628967,3.053891,5.595612,8.157013,-2.194925,-2.747666,9.354301,-8.906754,6.441532,-5.177179,-0.847708,-7.837984,5.213279,-1.547890,-0.629976,-6.438709,5.446810,-8.727398,5.915625,-3.471291,-7.601724,-6.294836,7.756995,8.534184,-9.160220,7.875796,7.089053,0.258568,-6.966609,7.969246,3.661807,4.748361,7.706200,4.085505,-7.673990,-0.096984,-1.194721,-4.580196,0.241005,3.032313,2.263025,8.557680,-0.702084,7.897610,-5.422185,3.790229,5.899895,-7.086079,-2.714594,7.645990,2.230354,-6.957148,-8.288509,1.630880,-1.903159,-2.183755,8.729751,-0.469248,-2.841625,-5.238186,4.230586,4.382672,1.532699,8.439600,3.386052,-4.217308,2.688447,3.096279,3.390148,4.452290,9.056436,-1.228104,5.135213,-2.722858,-1.731313,9.251042,-9.258328,-6.832903,-4.320785,-9.296851,-5.706722,9.291160,6.915716,-9.551758,8.878840,-5.197557,2.240190,-5.843577,-4.718272,-9.734230,5.721526,-7.646358,-2.780962,3.948819,-7.423341,3.002950,-4.182352,-0.293758,6.540427,1.584131,4.282434,0.417364,-4.745345,0.338712,-7.005749,4.309563,1.552601,3.764213,5.561572,2.494202,-1.639167,-6.204943,2.131142,-2.939954,6.908595,0.191678,-4.798596,0.001725,-2.805481,1.824493,9.975466,0.472964,-2.687661,-5.598939,2.434146,0.170567,-1.344328,2.498089,1.322874,-2.410924,7.000587,6.266331,-3.761814,-3.184133,1.962037,5.985291,-4.375818,-9.741716,-6.306196,-5.550492,-6.264764,9.973994,-4.008655,-0.841635,0.610277,-4.286173,-0.781123,-5.482731,5.237614,-5.861351,-1.696972,1.022528,-9.539742,8.376212,-8.528704,-7.079011,0.563105,-1.921309,-3.166208,0.359724,0.670840,-2.835224,2.914176,6.058521,5.426041,-4.220285,2.598617,4.766600,4.842179,-3.760028,-2.157430,-3.122490,1.848959,9.849092,3.694041,5.767991,6.356467,-7.046108,-2.006386,7.523088,6.694039,5.538873,6.998065,-5.321516,8.770512,-5.347548,-2.926244,1.904339,7.606242,2.131096,-8.557339,-2.582686,8.909373,-2.764109,-2.112697,1.132989,8.079248,-7.626090,0.509749,9.769775,-5.078246,4.455783,-5.006372,-2.027451,7.437367,-0.573373,-5.953991,7.185329,-7.136162,1.857971,7.084110,-5.849194,4.489863,7.960592,-4.822172,7.825888,1.353926,9.926605,5.553174,9.935399,1.001923,-0.008553,-7.766715,9.499300,-4.449236,5.261790,-6.718554,-9.653717,6.973786,-4.304805,3.485184,-4.298626,-2.154520,-2.040242,5.947319,7.699650,-2.903152,-6.058189,0.569411,2.726443,-1.378943,-5.573164,-7.334483,-3.032701,-9.452388,2.518301,-9.843831,-9.134964,6.094598,-3.532489,1.404676,-8.236127,-7.110568,-2.425860,-2.419219,7.900601,4.677396,3.720784,-6.205052,6.068708,0.500705,-2.081156,-3.914433,-0.862919,-7.276743,-1.045030,-7.491682,4.590407,2.908249,1.134639,4.307456,-9.699885,-7.026983,-3.176035,9.039789,6.571260,9.074681,-0.172904,7.070478,7.014104,1.810440,8.042889,-0.364028,-9.124633,-1.836609,-8.076962,-2.312636,-4.105454,-1.195578,-4.237672,-4.204984,-1.169732,7.572592,0.994924,-0.574599,-7.760725,-4.295982,3.860975,-0.035250,-8.918600,3.140324,-8.955021,5.647626,-9.741555,-5.974506,2.163779,7.155749,-1.453040,-5.106381,1.790946,-4.636521,2.165668,4.317130,-7.460386,-6.093911,-3.330370,2.430251,-7.485562,-1.853694,-8.081405,6.311889,0.033995,-9.472213,6.697537,-5.269426,7.379879,1.844549,0.161818,5.263105,-5.068508,7.761911,-2.705287,-8.690457,4.852774,6.175879,6.701100,-4.936482,1.869026,-5.958562,6.544346,9.609263,9.003802,7.070223,0.680094,-4.087056,3.771715,9.251648,-6.519870,-5.574114,-0.869841,-8.252576,-1.969468,-3.671792,0.317870,-6.369718,9.067980,8.499163,-2.866211,-9.412723,3.704681,-1.377967,-7.105945,-8.848732,1.651864,-7.720943,9.784816,7.118702,8.251236,2.668442,-7.580087,-7.453712,-1.210084,-8.746304,-3.095604,-4.722263,-6.697241,-4.774353,-7.148926,0.430341,0.813088,9.379314,-7.575967,-9.928385,0.291452,-9.684587,-3.791937,6.962432,-7.430625,2.760528,-7.425915,5.057580,-8.071683,1.192666,-1.362132,-3.888797,4.925834,-7.832073,-8.206295], dtype = "float64")#candidate|4396|(455,)|const|float64
call_4395 = func_398_call(relay.reshape(const_4396.astype('float64'), [13, 7, 5]))
call_4397 = func_398_call(relay.reshape(const_4396.astype('float64'), [13, 7, 5]))
bop_4402 = relay.greater(const_4396.astype('bool'), relay.reshape(call_4395.astype('bool'), relay.shape_of(const_4396))) # shape=(455,)
bop_4405 = relay.greater(const_4396.astype('bool'), relay.reshape(call_4397.astype('bool'), relay.shape_of(const_4396))) # shape=(455,)
output = relay.Tuple([call_4374,bop_4402,])
output2 = relay.Tuple([call_4375,bop_4405,])
func_4409 = relay.Function([], output)
mod['func_4409'] = func_4409
mod = relay.transform.InferType()(mod)
mutated_mod['func_4409'] = func_4409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4409_call = mutated_mod.get_global_var('func_4409')
call_4410 = func_4409_call()
output = call_4410
func_4411 = relay.Function([], output)
mutated_mod['func_4411'] = func_4411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_4444 = relay.TupleGetItem(func_377_call(), 0)
call_4445 = relay.TupleGetItem(func_378_call(), 0)
func_2582_call = mod.get_global_var('func_2582')
func_2585_call = mutated_mod.get_global_var('func_2585')
var_4449 = relay.var("var_4449", dtype = "float32", shape = (1053,))#candidate|4449|(1053,)|var|float32
call_4448 = relay.TupleGetItem(func_2582_call(relay.reshape(var_4449.astype('float32'), [351, 3])), 3)
call_4450 = relay.TupleGetItem(func_2585_call(relay.reshape(var_4449.astype('float32'), [351, 3])), 3)
func_3529_call = mod.get_global_var('func_3529')
func_3530_call = mutated_mod.get_global_var('func_3530')
call_4455 = func_3529_call()
call_4456 = func_3529_call()
func_1334_call = mod.get_global_var('func_1334')
func_1337_call = mutated_mod.get_global_var('func_1337')
const_4462 = relay.const([True,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,True], dtype = "bool")#candidate|4462|(3150,)|const|bool
call_4461 = relay.TupleGetItem(func_1334_call(relay.reshape(const_4462.astype('bool'), [15, 14, 15])), 1)
call_4463 = relay.TupleGetItem(func_1337_call(relay.reshape(const_4462.astype('bool'), [15, 14, 15])), 1)
func_3329_call = mod.get_global_var('func_3329')
func_3331_call = mutated_mod.get_global_var('func_3331')
call_4470 = relay.TupleGetItem(func_3329_call(), 1)
call_4471 = relay.TupleGetItem(func_3331_call(), 1)
func_2174_call = mod.get_global_var('func_2174')
func_2177_call = mutated_mod.get_global_var('func_2177')
const_4479 = relay.const([-7.418112,1.336293,-2.198352,-9.145803,0.180396,-9.441288,-1.065077,-0.727014,-0.043558,1.944247,3.741502,1.740855,5.346900,-1.479048,-2.700884,-5.360223,-4.101275,-7.362205,-4.726392,2.507707,7.396736,5.124122,8.284826,-2.472630,4.369811,3.850400,6.887911,3.126802,-5.220210,3.769763,-2.266754,5.712195,2.890175,-0.663380,-0.049344,1.535032,3.488472,0.574842,-0.238012,-5.482835,-1.150428,-9.024065,-2.903850,-1.327681,-6.802545,9.635894,6.140001,7.680602,-0.542488,3.774997,2.858784,3.055852,0.990913,0.428464,-5.583547,-7.721474,9.527971,1.101424,-2.865231,-5.013395,3.435180,-2.948601,-1.074158,-6.844862,6.382958,9.106914,-6.074176,9.407879,-9.188498,-8.977980,-8.420525,5.543199,2.598762,-6.980028,-1.723904,-1.564945,-6.081248,-7.045826,-9.500582,-6.828659,-9.937080,-0.922240,-7.308770,1.337163,0.544005,5.454224,-5.973059,7.179403,9.543711,7.139111,2.030250,-7.495628,-6.167043,-5.742380,9.307190,-9.124788,1.472519,-8.260237,-3.772399,-6.616940,4.576366,-8.043562,-4.939092,-1.693525,9.125055,7.835175,6.285528,-4.474838,-5.276616,0.388013,3.005022,-8.587712,-5.154949,-0.838253,-3.144810,-8.212781,6.319371,5.606668,6.963224,7.476124,4.880360,8.577495,-3.822778,1.308073,-9.604046,-6.226044,-6.090544,-5.122417,-7.260199,-8.461113,5.342819,-6.753104,9.977990,-4.722551,5.422443,1.491646,-2.871204,-8.768637,-7.834359,-8.491286,-8.295181,1.120710,5.509050,6.814787,-9.537362,-4.127546,8.324832,-5.082993,-2.670387,2.860283,1.712684,-0.295043,3.540000,-1.137386,-8.662181,-4.175806,-4.816797,-1.103587,-4.119449,7.545657,3.020738,-6.172213,-4.991471,8.094933,-9.005319,3.609276,5.448710,4.711308,-1.644846,-6.369768,-4.634093,8.963699,-0.659454,-8.213187,8.391425,-0.098103,4.313003,9.908170,2.571049,-1.265724,4.265513,3.220678,-4.488862,9.493873,0.224196,9.137150,9.292195,-3.696777,-3.349866,-5.177951,-1.084780,-2.748079,3.621840,3.649229,-8.626855,-2.492691,3.288776,-5.388413,1.650694,-7.177396,-1.192613,-4.903070,-2.677058,5.566944,-9.030783,5.892064,-5.811893,-1.822219,1.483414,8.557263,-4.843619,-6.723063,0.384512,5.344776,-7.444914,9.897101,3.471952,-4.894148,-7.230839,6.663076,0.802546,2.965506,-0.417809,-5.047112,-9.531317,-0.503625,0.329794,-9.308825,5.413537,0.450018,-0.468253,-7.221414,4.260669,5.212460,3.015846,-3.660573,5.445044,-2.356503,0.946303,-3.203443,-1.767526,-4.146624,0.957434,0.115688,-2.294059,-8.077145,6.576595,9.351284,-3.134337,2.819888,7.613203,-6.136923,0.335721,-6.470532,4.400258,-3.586835,6.093425,-1.958138,-2.883454,-2.087074,-9.229789,2.128428,1.283404,-7.125671,7.848043,3.040412,8.052915,-6.896334,7.404020,-2.751046,5.690301,-7.256464,5.191686,5.382043,-0.709533,3.253679,-1.259935,2.197894,0.520418,2.610125,0.220376,2.474045,0.123235,1.406881,-1.958681,0.969723,9.427766,4.007847,-8.839396,-5.482293,-9.383221,-9.787578,-9.272344,-6.094758,8.385817,-4.811250,9.013071,-9.048924,8.449779,0.381468,6.844824,0.157567,-1.120077,2.889747,1.763922,-0.554517,5.283490,8.002896,-1.083418,7.018692,7.493073,-9.526093,9.844304,9.616185,-2.528933,9.263280,-3.550992,-6.818769,6.883966,9.919866,1.394429,-4.830268,-4.504360,-5.773989,8.799430,0.315670,-0.512898,3.277720,-2.184868,-0.588804,5.006390,-9.070551,2.886148,6.091406,-4.157442,3.101378,-8.764647,7.827187,3.575313,6.419700,1.508409,-4.136048,-7.173315,-5.902064,-4.317079,2.528842,-7.303453,9.898493,7.462832,-1.634662,-5.877026,2.670824,4.315230,5.137979,8.809222,2.706006,7.480318,-1.491730,-9.749767,-1.182114,8.926402,-8.268219,1.151741,6.542971,-2.848100,1.134757,-5.961210,7.517369,1.706016,-6.295234,7.070219,2.120629,2.771159,-5.506876,-0.338503,5.691571,0.228439,3.773503,3.186846,1.071607,-7.822689,-3.735937,4.436946,-0.476988,8.712468,2.432995,0.811317,8.738464,-7.362982,-9.443659,1.405354,0.737495,8.396049,0.064244,1.950256,0.214398,9.360473,-6.451615,9.755952,9.073674,-6.298575,-1.144701,-5.686837,-7.278537,5.863835,1.364978,-0.279632,5.422857,-4.473516,6.488083,3.728162,0.311477,-3.204541,-0.612157,8.743513,-0.968736,-4.400944,2.429727,7.692260,-4.704368,-8.305505,9.287383,-2.830486,-8.878167,4.812764,-8.210356,-7.377661,-0.301280,-1.670917,4.066493,-6.624645,9.154103,-0.083611,2.522721,-2.560625,-8.446565,-9.813641,-7.284331,4.341116,5.727850,-3.202233,7.342996,4.402376,0.223165,-9.501767,7.459977,5.505952,-8.578834,2.462493,2.122264,2.383977,-9.956561,4.907915,-4.987147,-7.395553], dtype = "float64")#candidate|4479|(455,)|const|float64
call_4478 = relay.TupleGetItem(func_2174_call(relay.reshape(const_4479.astype('float64'), [65, 7])), 4)
call_4480 = relay.TupleGetItem(func_2177_call(relay.reshape(const_4479.astype('float64'), [65, 7])), 4)
func_2582_call = mod.get_global_var('func_2582')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_4508 = relay.TupleGetItem(func_2582_call(relay.reshape(var_4449.astype('float32'), [351, 3])), 4)
call_4509 = relay.TupleGetItem(func_2585_call(relay.reshape(var_4449.astype('float32'), [351, 3])), 4)
func_3799_call = mod.get_global_var('func_3799')
func_3801_call = mutated_mod.get_global_var('func_3801')
call_4519 = relay.TupleGetItem(func_3799_call(), 0)
call_4520 = relay.TupleGetItem(func_3801_call(), 0)
func_2413_call = mod.get_global_var('func_2413')
func_2415_call = mutated_mod.get_global_var('func_2415')
call_4550 = relay.TupleGetItem(func_2413_call(relay.reshape(call_4461.astype('float32'), [165,])), 2)
call_4551 = relay.TupleGetItem(func_2415_call(relay.reshape(call_4461.astype('float32'), [165,])), 2)
func_1208_call = mod.get_global_var('func_1208')
func_1210_call = mutated_mod.get_global_var('func_1210')
call_4560 = relay.TupleGetItem(func_1208_call(), 2)
call_4561 = relay.TupleGetItem(func_1210_call(), 2)
func_3266_call = mod.get_global_var('func_3266')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_4574 = func_3266_call(relay.reshape(call_4508.astype('int32'), [13, 7, 5]))
call_4575 = func_3266_call(relay.reshape(call_4508.astype('int32'), [13, 7, 5]))
uop_4579 = relay.cos(call_4574.astype('float32')) # shape=(13, 7, 5)
uop_4581 = relay.cos(call_4575.astype('float32')) # shape=(13, 7, 5)
func_398_call = mod.get_global_var('func_398')
func_401_call = mutated_mod.get_global_var('func_401')
call_4596 = func_398_call(relay.reshape(const_4479.astype('float64'), [13, 7, 5]))
call_4597 = func_398_call(relay.reshape(const_4479.astype('float64'), [13, 7, 5]))
output = relay.Tuple([call_4444,call_4448,var_4449,call_4455,call_4461,const_4462,call_4470,call_4478,const_4479,call_4508,call_4519,call_4550,call_4560,uop_4579,call_4596,])
output2 = relay.Tuple([call_4445,call_4450,var_4449,call_4456,call_4463,const_4462,call_4471,call_4480,const_4479,call_4509,call_4520,call_4551,call_4561,uop_4581,call_4597,])
func_4604 = relay.Function([var_4449,], output)
mod['func_4604'] = func_4604
mod = relay.transform.InferType()(mod)
var_4605 = relay.var("var_4605", dtype = "float32", shape = (1053,))#candidate|4605|(1053,)|var|float32
output = func_4604(var_4605)
func_4606 = relay.Function([var_4605], output)
mutated_mod['func_4606'] = func_4606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_4779 = relay.TupleGetItem(func_2738_call(), 1)
call_4780 = relay.TupleGetItem(func_2740_call(), 1)
output = call_4779
output2 = call_4780
func_4785 = relay.Function([], output)
mod['func_4785'] = func_4785
mod = relay.transform.InferType()(mod)
mutated_mod['func_4785'] = func_4785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mutated_mod.get_global_var('func_4785')
call_4786 = func_4785_call()
output = call_4786
func_4787 = relay.Function([], output)
mutated_mod['func_4787'] = func_4787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1480_call = mod.get_global_var('func_1480')
func_1482_call = mutated_mod.get_global_var('func_1482')
call_4796 = relay.TupleGetItem(func_1480_call(), 0)
call_4797 = relay.TupleGetItem(func_1482_call(), 0)
output = relay.Tuple([call_4796,])
output2 = relay.Tuple([call_4797,])
func_4798 = relay.Function([], output)
mod['func_4798'] = func_4798
mod = relay.transform.InferType()(mod)
mutated_mod['func_4798'] = func_4798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4798_call = mutated_mod.get_global_var('func_4798')
call_4799 = func_4798_call()
output = call_4799
func_4800 = relay.Function([], output)
mutated_mod['func_4800'] = func_4800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_4871 = relay.TupleGetItem(func_2843_call(), 2)
call_4872 = relay.TupleGetItem(func_2845_call(), 2)
uop_4898 = relay.cosh(call_4871.astype('float32')) # shape=(455,)
uop_4900 = relay.cosh(call_4872.astype('float32')) # shape=(455,)
func_3799_call = mod.get_global_var('func_3799')
func_3801_call = mutated_mod.get_global_var('func_3801')
call_4902 = relay.TupleGetItem(func_3799_call(), 0)
call_4903 = relay.TupleGetItem(func_3801_call(), 0)
func_3089_call = mod.get_global_var('func_3089')
func_3091_call = mutated_mod.get_global_var('func_3091')
call_4910 = relay.TupleGetItem(func_3089_call(relay.reshape(call_4902.astype('float32'), [165,])), 0)
call_4911 = relay.TupleGetItem(func_3091_call(relay.reshape(call_4902.astype('float32'), [165,])), 0)
output = relay.Tuple([uop_4898,call_4902,call_4910,])
output2 = relay.Tuple([uop_4900,call_4903,call_4911,])
func_4913 = relay.Function([], output)
mod['func_4913'] = func_4913
mod = relay.transform.InferType()(mod)
output = func_4913()
func_4914 = relay.Function([], output)
mutated_mod['func_4914'] = func_4914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1480_call = mod.get_global_var('func_1480')
func_1482_call = mutated_mod.get_global_var('func_1482')
call_5015 = relay.TupleGetItem(func_1480_call(), 0)
call_5016 = relay.TupleGetItem(func_1482_call(), 0)
func_4409_call = mod.get_global_var('func_4409')
func_4411_call = mutated_mod.get_global_var('func_4411')
call_5022 = relay.TupleGetItem(func_4409_call(), 0)
call_5023 = relay.TupleGetItem(func_4411_call(), 0)
func_876_call = mod.get_global_var('func_876')
func_877_call = mutated_mod.get_global_var('func_877')
call_5026 = relay.TupleGetItem(func_876_call(), 6)
call_5027 = relay.TupleGetItem(func_877_call(), 6)
output = relay.Tuple([call_5015,call_5022,call_5026,])
output2 = relay.Tuple([call_5016,call_5023,call_5027,])
func_5044 = relay.Function([], output)
mod['func_5044'] = func_5044
mod = relay.transform.InferType()(mod)
output = func_5044()
func_5045 = relay.Function([], output)
mutated_mod['func_5045'] = func_5045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_5054 = relay.TupleGetItem(func_377_call(), 0)
call_5055 = relay.TupleGetItem(func_378_call(), 0)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_5093 = relay.TupleGetItem(func_2843_call(), 2)
call_5094 = relay.TupleGetItem(func_2845_call(), 2)
var_5096 = relay.var("var_5096", dtype = "float64", shape = (455,))#candidate|5096|(455,)|var|float64
bop_5097 = relay.equal(call_5093.astype('bool'), relay.reshape(var_5096.astype('bool'), relay.shape_of(call_5093))) # shape=(455,)
bop_5100 = relay.equal(call_5094.astype('bool'), relay.reshape(var_5096.astype('bool'), relay.shape_of(call_5094))) # shape=(455,)
output = relay.Tuple([call_5054,bop_5097,])
output2 = relay.Tuple([call_5055,bop_5100,])
func_5112 = relay.Function([var_5096,], output)
mod['func_5112'] = func_5112
mod = relay.transform.InferType()(mod)
mutated_mod['func_5112'] = func_5112
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5113 = relay.var("var_5113", dtype = "float64", shape = (455,))#candidate|5113|(455,)|var|float64
func_5112_call = mutated_mod.get_global_var('func_5112')
call_5114 = func_5112_call(var_5113)
output = call_5114
func_5115 = relay.Function([var_5113], output)
mutated_mod['func_5115'] = func_5115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2724_call = mod.get_global_var('func_2724')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_5268 = relay.TupleGetItem(func_2724_call(), 0)
call_5269 = relay.TupleGetItem(func_2725_call(), 0)
output = relay.Tuple([call_5268,])
output2 = relay.Tuple([call_5269,])
func_5288 = relay.Function([], output)
mod['func_5288'] = func_5288
mod = relay.transform.InferType()(mod)
mutated_mod['func_5288'] = func_5288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5288_call = mutated_mod.get_global_var('func_5288')
call_5289 = func_5288_call()
output = call_5289
func_5290 = relay.Function([], output)
mutated_mod['func_5290'] = func_5290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4275_call = mod.get_global_var('func_4275')
func_4277_call = mutated_mod.get_global_var('func_4277')
call_5318 = relay.TupleGetItem(func_4275_call(), 0)
call_5319 = relay.TupleGetItem(func_4277_call(), 0)
output = call_5318
output2 = call_5319
func_5323 = relay.Function([], output)
mod['func_5323'] = func_5323
mod = relay.transform.InferType()(mod)
output = func_5323()
func_5324 = relay.Function([], output)
mutated_mod['func_5324'] = func_5324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4110_call = mod.get_global_var('func_4110')
func_4112_call = mutated_mod.get_global_var('func_4112')
call_5348 = func_4110_call()
call_5349 = func_4110_call()
func_1702_call = mod.get_global_var('func_1702')
func_1704_call = mutated_mod.get_global_var('func_1704')
const_5383 = relay.const([True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True], dtype = "bool")#candidate|5383|(3150,)|const|bool
call_5382 = relay.TupleGetItem(func_1702_call(relay.reshape(const_5383.astype('bool'), [1, 3150])), 0)
call_5384 = relay.TupleGetItem(func_1704_call(relay.reshape(const_5383.astype('bool'), [1, 3150])), 0)
func_2174_call = mod.get_global_var('func_2174')
func_2177_call = mutated_mod.get_global_var('func_2177')
const_5390 = relay.const([9.056834,-9.970515,1.116309,1.363558,3.313559,2.231310,4.748609,0.417846,3.757388,-0.565589,-6.416448,4.541492,-1.183525,0.917058,-9.075740,-2.475364,-2.592205,7.722385,-7.173391,-2.706998,3.083099,7.826561,4.951563,-6.852771,-2.003478,-3.563722,6.084890,4.659990,-3.351443,4.209002,9.114197,-0.639854,-1.491865,0.937492,9.197057,-8.143177,5.628793,7.714709,-3.752000,6.633876,3.554338,1.516084,-7.679151,-8.467293,-3.224693,4.356936,7.768168,3.336168,-7.108570,-9.158651,-5.843722,-3.346963,-8.354514,-1.031542,-5.589493,-4.605882,-4.085074,-1.065042,-2.531079,1.132511,-9.882189,-1.196273,-0.094187,5.852618,-5.968375,-8.664380,-2.842663,7.307572,3.641583,-8.945629,6.862101,3.984939,-2.310503,-7.178517,-3.527638,3.448690,8.861328,-3.209068,-0.350462,-1.268282,-7.375153,2.414205,1.728363,7.345229,7.032094,-4.862882,-4.161970,-1.789895,4.411923,4.013217,-2.472440,-7.922126,-6.557595,1.930084,-0.236866,-8.452067,5.128922,-8.594275,-3.740514,7.832685,9.306055,-0.957682,7.866017,-1.210744,-8.094034,-5.648895,9.651402,-7.575411,1.868372,-2.922015,0.460071,-7.423880,-8.880841,3.581918,6.282018,-3.169111,3.526936,-0.452218,0.586671,4.975921,7.538139,-5.320044,7.295864,-8.130616,4.885026,-3.125320,5.057067,4.820574,1.487921,-4.831118,9.054697,9.046069,-6.922790,8.183286,1.641334,6.850358,-7.657431,4.806449,-6.480315,-3.009521,-0.803487,-4.789378,-5.691130,4.484329,-9.005460,-6.550753,8.792926,-1.658384,1.395097,8.295894,7.882106,6.503148,9.227689,1.269924,5.564293,6.933802,-1.192103,4.289105,0.834055,7.677276,7.859275,7.181636,3.471080,-8.381935,1.415711,8.274927,-2.125956,-1.600010,3.128810,2.218246,5.648121,-9.251986,-6.652069,-6.010596,8.351697,7.619288,7.571955,7.800391,2.664806,-1.960727,2.182150,8.466376,-2.562232,4.462902,0.682945,-4.149835,6.494919,-7.678077,6.332980,3.411507,-5.062691,5.819281,4.079272,3.976477,-5.477063,5.596483,9.341530,7.321591,-1.570096,-4.987121,8.436894,3.427359,2.361190,-0.039497,-9.209539,5.634755,-3.777535,0.900337,3.336245,-2.835388,-6.204336,-6.746548,-3.513289,8.444398,-8.614206,-8.953746,1.953218,1.357960,-6.514720,2.775167,4.084154,6.975907,2.550233,-4.198835,4.433185,-0.625707,-8.644555,-5.001819,-4.340898,-8.763424,0.316586,-6.723255,-2.499665,6.820444,5.435612,9.512247,-2.834920,-4.852294,9.022798,-2.941519,-1.018523,-2.828326,8.136574,5.344954,9.528235,2.984263,3.924010,3.995573,8.573486,-5.314189,9.454243,0.415709,-6.775481,3.329059,-8.101242,4.742720,-5.392525,-4.477630,-1.439733,7.483235,5.150723,-3.864654,-5.361361,-2.101226,-5.793057,-5.107746,-2.927006,5.307512,5.763606,2.372105,4.501472,-5.955639,-9.593232,9.738413,1.500333,-6.173705,4.749644,0.232848,-3.079620,9.669908,-9.642277,-7.272202,-3.330248,7.673881,-3.741920,7.728442,8.775582,8.084623,-9.501496,-3.435782,2.332388,-3.543283,3.579049,-5.002012,4.384985,8.450543,3.872979,1.457769,2.620302,-9.829894,6.488013,5.299541,3.513833,-8.108692,-6.112643,4.091405,-8.033126,-6.296266,8.657776,3.145261,0.842161,-8.134625,9.653338,-2.452638,8.212825,-3.686399,-8.906478,7.709876,3.039726,-4.859673,4.217620,0.619982,7.842306,9.717851,5.498056,-6.261789,9.542574,7.947539,-5.863913,-1.179229,-2.839976,-8.696953,-5.115985,0.304230,2.401991,2.006492,1.486326,-9.386067,9.622612,-3.495087,0.436773,0.021715,3.902800,6.347424,-1.467585,0.527994,-4.089775,9.957330,-3.743452,-5.756336,-7.932425,-5.565229,6.462313,5.313437,-0.504131,2.538086,-1.327479,8.207794,4.131729,1.311928,-4.583108,7.060466,-0.193834,0.283327,3.569157,-4.445873,-0.686668,5.452946,-3.041811,-9.770363,-4.564431,-1.084088,-0.751142,5.434062,-1.613014,2.155320,4.818040,3.442330,5.020668,-9.905595,1.271240,6.260931,9.445335,5.421161,1.952384,1.357229,6.998073,-0.940558,7.542344,7.205920,-8.683850,-5.580328,1.698169,7.189483,-4.710155,7.638939,-3.339234,0.973880,-0.832338,3.183482,-9.291933,0.705486,-7.965298,4.412571,1.887171,2.850406,5.792271,-6.653681,-7.631520,-8.389314,5.365841,-6.180535,-1.551577,-5.548666,-3.985637,-5.536113,-3.865536,-2.694007,4.883433,-9.592707,-4.151196,-9.235725,6.528297,4.480766,-0.990151,-3.883676,1.330814,7.572023,1.857325,-7.163232,-2.016578,-3.769998,3.884512,4.769894,3.724662,5.301618,-3.284718,3.629300,-9.809421,6.894997,-1.741416,3.013673,-2.435847,0.845490,-8.328865,3.313153,-9.452345,1.934223,-5.801035,-4.923019,-8.630208,8.295969,4.174474,-6.246455,1.093697], dtype = "float64")#candidate|5390|(455,)|const|float64
call_5389 = relay.TupleGetItem(func_2174_call(relay.reshape(const_5390.astype('float64'), [65, 7])), 4)
call_5391 = relay.TupleGetItem(func_2177_call(relay.reshape(const_5390.astype('float64'), [65, 7])), 4)
output = relay.Tuple([call_5348,call_5382,const_5383,call_5389,const_5390,])
output2 = relay.Tuple([call_5349,call_5384,const_5383,call_5391,const_5390,])
func_5392 = relay.Function([], output)
mod['func_5392'] = func_5392
mod = relay.transform.InferType()(mod)
mutated_mod['func_5392'] = func_5392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5392_call = mutated_mod.get_global_var('func_5392')
call_5393 = func_5392_call()
output = call_5393
func_5394 = relay.Function([], output)
mutated_mod['func_5394'] = func_5394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_5518 = func_4785_call()
call_5519 = func_4785_call()
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
call_5529 = relay.TupleGetItem(func_1409_call(), 0)
call_5530 = relay.TupleGetItem(func_1411_call(), 0)
func_1871_call = mod.get_global_var('func_1871')
func_1873_call = mutated_mod.get_global_var('func_1873')
call_5535 = relay.TupleGetItem(func_1871_call(), 0)
call_5536 = relay.TupleGetItem(func_1873_call(), 0)
output = relay.Tuple([call_5518,call_5529,call_5535,])
output2 = relay.Tuple([call_5519,call_5530,call_5536,])
func_5559 = relay.Function([], output)
mod['func_5559'] = func_5559
mod = relay.transform.InferType()(mod)
output = func_5559()
func_5560 = relay.Function([], output)
mutated_mod['func_5560'] = func_5560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2724_call = mod.get_global_var('func_2724')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_5589 = relay.TupleGetItem(func_2724_call(), 0)
call_5590 = relay.TupleGetItem(func_2725_call(), 0)
output = call_5589
output2 = call_5590
func_5640 = relay.Function([], output)
mod['func_5640'] = func_5640
mod = relay.transform.InferType()(mod)
output = func_5640()
func_5641 = relay.Function([], output)
mutated_mod['func_5641'] = func_5641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_5675 = relay.TupleGetItem(func_377_call(), 0)
call_5676 = relay.TupleGetItem(func_378_call(), 0)
func_3727_call = mod.get_global_var('func_3727')
func_3728_call = mutated_mod.get_global_var('func_3728')
call_5689 = relay.TupleGetItem(func_3727_call(), 0)
call_5690 = relay.TupleGetItem(func_3728_call(), 0)
output = relay.Tuple([call_5675,call_5689,])
output2 = relay.Tuple([call_5676,call_5690,])
func_5695 = relay.Function([], output)
mod['func_5695'] = func_5695
mod = relay.transform.InferType()(mod)
mutated_mod['func_5695'] = func_5695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5695_call = mutated_mod.get_global_var('func_5695')
call_5696 = func_5695_call()
output = call_5696
func_5697 = relay.Function([], output)
mutated_mod['func_5697'] = func_5697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1651_call = mod.get_global_var('func_1651')
func_1653_call = mutated_mod.get_global_var('func_1653')
call_5703 = func_1651_call()
call_5704 = func_1651_call()
output = call_5703
output2 = call_5704
func_5724 = relay.Function([], output)
mod['func_5724'] = func_5724
mod = relay.transform.InferType()(mod)
mutated_mod['func_5724'] = func_5724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5724_call = mutated_mod.get_global_var('func_5724')
call_5725 = func_5724_call()
output = call_5725
func_5726 = relay.Function([], output)
mutated_mod['func_5726'] = func_5726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4110_call = mod.get_global_var('func_4110')
func_4112_call = mutated_mod.get_global_var('func_4112')
call_5729 = func_4110_call()
call_5730 = func_4110_call()
output = relay.Tuple([call_5729,])
output2 = relay.Tuple([call_5730,])
func_5743 = relay.Function([], output)
mod['func_5743'] = func_5743
mod = relay.transform.InferType()(mod)
output = func_5743()
func_5744 = relay.Function([], output)
mutated_mod['func_5744'] = func_5744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1848_call = mod.get_global_var('func_1848')
func_1849_call = mutated_mod.get_global_var('func_1849')
call_5763 = func_1848_call()
call_5764 = func_1848_call()
func_5323_call = mod.get_global_var('func_5323')
func_5324_call = mutated_mod.get_global_var('func_5324')
call_5776 = func_5323_call()
call_5777 = func_5323_call()
output = relay.Tuple([call_5763,call_5776,])
output2 = relay.Tuple([call_5764,call_5777,])
func_5786 = relay.Function([], output)
mod['func_5786'] = func_5786
mod = relay.transform.InferType()(mod)
mutated_mod['func_5786'] = func_5786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5786_call = mutated_mod.get_global_var('func_5786')
call_5787 = func_5786_call()
output = call_5787
func_5788 = relay.Function([], output)
mutated_mod['func_5788'] = func_5788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3284_call = mod.get_global_var('func_3284')
func_3285_call = mutated_mod.get_global_var('func_3285')
call_5805 = relay.TupleGetItem(func_3284_call(), 1)
call_5806 = relay.TupleGetItem(func_3285_call(), 1)
const_5814 = relay.const([[[-1.996037,3.115531,-9.813359,0.584893,-5.803876],[-7.858350,6.516647,8.903345,-1.199999,2.749326],[8.921938,1.796833,4.810036,9.113327,7.208646],[-8.695656,-1.878154,-4.980322,5.308575,9.696085],[2.950149,1.059554,-3.445617,1.181587,-5.403487],[-9.533525,8.924585,5.989450,-2.169279,8.085233],[-1.762962,6.338570,4.056632,6.365912,7.512554]],[[0.973774,-5.034888,-1.829708,4.103585,3.147564],[-4.753870,7.014035,-5.325294,2.915007,-7.283238],[-3.782831,-1.186758,9.478831,-2.066407,-4.526511],[-7.643553,-8.981969,-7.266853,2.855273,-6.176598],[3.865115,-1.609867,-3.145575,4.279129,2.670675],[2.610552,-6.102935,6.181963,6.930296,4.366296],[-7.826442,0.207796,-4.705426,8.445560,6.419035]],[[6.982814,-2.750683,-5.959686,-7.023231,-5.313969],[8.123194,5.341761,1.157147,8.292414,-7.493226],[-1.144734,-5.815650,2.354098,1.712369,9.312045],[3.251472,4.917407,-4.673410,-3.802281,-1.782652],[3.304305,-4.334174,5.476401,4.524711,9.637839],[5.166214,-6.201749,3.431027,6.291948,-2.347893],[-1.228727,5.017016,-2.729471,5.222819,-8.396405]],[[2.147584,9.628832,-1.723552,-7.299968,3.200771],[-6.001553,4.119456,0.813518,-8.707524,-5.684512],[5.427399,-6.242281,-2.556129,-8.171017,-1.944893],[0.355718,-5.339689,4.250293,-9.708720,2.062961],[4.771888,-9.870409,-1.754118,-0.965914,-1.129160],[-1.595428,7.342561,-7.901283,5.869560,0.069629],[3.602219,7.312811,2.562656,2.311877,-2.220679]],[[1.815003,-5.943434,0.465351,5.553101,0.711536],[-4.823098,8.358536,8.230655,9.992189,6.758685],[-7.783760,-6.194838,-7.054387,-5.915371,5.543279],[-0.610660,8.982067,-9.003384,-6.353032,-0.892543],[-1.693677,2.670213,-7.452541,3.991523,6.779005],[-9.947684,-8.739844,1.035114,-0.642459,-4.055839],[3.742710,-4.014269,6.558099,4.136646,4.635095]],[[8.068445,-5.112508,4.712669,8.343828,-3.716290],[2.003527,-5.288517,8.964263,3.714782,-8.787711],[9.819129,-4.051658,-1.647888,4.172278,0.769425],[2.663640,-9.311250,7.982229,-5.561770,-4.087793],[4.711395,4.093483,0.642428,-6.710598,-6.478512],[-0.163659,-7.510014,2.998028,-7.101718,-3.009929],[8.128861,3.130112,6.439353,-5.716676,9.604174]],[[-0.896419,-3.041995,5.845663,2.731405,-6.283883],[-6.026878,7.895974,-6.746472,9.822469,6.946114],[-5.332974,3.529132,-3.848012,6.392647,-3.327038],[-6.761119,8.285545,-4.210099,-3.023342,-5.150812],[4.963851,-8.366174,8.976340,2.682060,4.494020],[-2.939405,-2.219024,1.357460,-3.005020,6.011044],[-1.628644,-7.171120,-6.029668,-5.749489,-3.628266]],[[-3.316980,4.095415,-1.587862,2.829713,7.205097],[3.728391,-9.006280,2.777623,-6.022812,-9.437151],[-4.135917,5.780911,6.223646,6.939987,4.625073],[-7.792859,6.341794,-7.087017,8.653097,8.649456],[-5.407332,-2.759684,-9.928523,9.735357,-7.711565],[-0.819623,-5.908161,2.301028,-6.624989,6.716793],[-7.936854,6.906399,9.974629,2.900751,4.007251]],[[1.780708,0.352117,-1.210922,1.551128,4.976240],[-4.792664,-5.195595,1.583964,-4.113760,-5.283181],[3.049418,0.656527,-8.726124,-6.271981,2.174081],[-5.533209,-0.784576,4.970612,-0.603529,-9.845460],[-7.679954,1.546191,9.156378,-1.018046,-7.358894],[6.547931,3.998950,-4.780776,2.913640,1.819108],[-2.586764,4.891720,-8.396758,-0.199495,4.750649]],[[-9.783159,0.358139,-0.398257,-8.428691,-6.553211],[3.802369,1.986400,-7.768024,-7.936673,-6.376570],[2.087585,1.514155,0.827590,5.739210,-0.579494],[-4.257670,-6.788575,2.406755,-6.317782,9.322651],[-0.334496,-6.685786,2.469791,-2.220495,-2.812539],[6.964779,0.997895,-1.012097,-7.955519,-2.495523],[-4.481417,6.083759,-8.278466,9.197104,4.911357]],[[1.691921,7.490351,9.900825,9.132298,-7.175529],[-7.000025,0.962353,9.797726,2.654826,9.424324],[-0.012685,-6.220772,-5.034217,-7.769164,-8.900615],[-8.849891,-5.770949,9.677683,-2.730747,0.605238],[6.860107,-4.674299,6.934817,-4.363311,-6.122594],[6.403483,-6.746902,-5.351052,-2.127247,-8.365292],[-8.409838,5.230898,0.981915,-3.274002,6.195609]],[[-7.049860,-8.293295,1.572974,-1.884524,-9.568971],[0.257054,-6.275915,6.338986,-8.830262,2.010779],[-8.477230,2.925376,-1.811766,4.143588,-7.090092],[-4.363544,6.998609,5.572431,1.811735,-5.319715],[-1.796157,8.374378,0.174965,-3.472097,-9.599524],[9.167884,0.636425,-0.662933,9.187744,8.616750],[-1.116137,-1.572912,-0.178433,-1.395557,-2.502767]],[[7.094897,-2.493134,0.031523,4.480577,0.608764],[4.773677,6.798121,9.052655,3.959739,5.229609],[-8.797844,-6.154978,2.000274,6.507558,-6.115432],[-9.315607,-8.942112,-2.811694,5.254899,4.668951],[-0.880659,4.978952,-0.017009,3.942786,2.872481],[-9.839308,2.451399,-4.748050,0.726051,-2.789716],[1.144669,6.293600,-3.601783,4.828620,1.566504]]], dtype = "float64")#candidate|5814|(13, 7, 5)|const|float64
bop_5815 = relay.power(call_5805.astype('float32'), relay.reshape(const_5814.astype('float32'), relay.shape_of(call_5805))) # shape=(13, 7, 5)
bop_5818 = relay.power(call_5806.astype('float32'), relay.reshape(const_5814.astype('float32'), relay.shape_of(call_5806))) # shape=(13, 7, 5)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_5820 = relay.TupleGetItem(func_3244_call(), 0)
call_5821 = relay.TupleGetItem(func_3246_call(), 0)
output = relay.Tuple([bop_5815,call_5820,])
output2 = relay.Tuple([bop_5818,call_5821,])
func_5836 = relay.Function([], output)
mod['func_5836'] = func_5836
mod = relay.transform.InferType()(mod)
mutated_mod['func_5836'] = func_5836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5836_call = mutated_mod.get_global_var('func_5836')
call_5837 = func_5836_call()
output = call_5837
func_5838 = relay.Function([], output)
mutated_mod['func_5838'] = func_5838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_731_call = mod.get_global_var('func_731')
func_733_call = mutated_mod.get_global_var('func_733')
call_5855 = func_731_call()
call_5856 = func_731_call()
func_5695_call = mod.get_global_var('func_5695')
func_5697_call = mutated_mod.get_global_var('func_5697')
call_5858 = relay.TupleGetItem(func_5695_call(), 0)
call_5859 = relay.TupleGetItem(func_5697_call(), 0)
func_876_call = mod.get_global_var('func_876')
func_877_call = mutated_mod.get_global_var('func_877')
call_5863 = relay.TupleGetItem(func_876_call(), 2)
call_5864 = relay.TupleGetItem(func_877_call(), 2)
uop_5870 = relay.log10(call_5863.astype('float64')) # shape=(5, 11, 3)
uop_5872 = relay.log10(call_5864.astype('float64')) # shape=(5, 11, 3)
func_3142_call = mod.get_global_var('func_3142')
func_3143_call = mutated_mod.get_global_var('func_3143')
call_5877 = func_3142_call()
call_5878 = func_3142_call()
output = relay.Tuple([call_5855,call_5858,uop_5870,call_5877,])
output2 = relay.Tuple([call_5856,call_5859,uop_5872,call_5878,])
func_5904 = relay.Function([], output)
mod['func_5904'] = func_5904
mod = relay.transform.InferType()(mod)
mutated_mod['func_5904'] = func_5904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5904_call = mutated_mod.get_global_var('func_5904')
call_5905 = func_5904_call()
output = call_5905
func_5906 = relay.Function([], output)
mutated_mod['func_5906'] = func_5906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
call_5914 = relay.TupleGetItem(func_1409_call(), 0)
call_5915 = relay.TupleGetItem(func_1411_call(), 0)
output = call_5914
output2 = call_5915
func_5919 = relay.Function([], output)
mod['func_5919'] = func_5919
mod = relay.transform.InferType()(mod)
output = func_5919()
func_5920 = relay.Function([], output)
mutated_mod['func_5920'] = func_5920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5559_call = mod.get_global_var('func_5559')
func_5560_call = mutated_mod.get_global_var('func_5560')
call_6025 = relay.TupleGetItem(func_5559_call(), 0)
call_6026 = relay.TupleGetItem(func_5560_call(), 0)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_6027 = relay.TupleGetItem(func_377_call(), 0)
call_6028 = relay.TupleGetItem(func_378_call(), 0)
output = relay.Tuple([call_6025,call_6027,])
output2 = relay.Tuple([call_6026,call_6028,])
func_6032 = relay.Function([], output)
mod['func_6032'] = func_6032
mod = relay.transform.InferType()(mod)
output = func_6032()
func_6033 = relay.Function([], output)
mutated_mod['func_6033'] = func_6033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1274_call = mod.get_global_var('func_1274')
func_1276_call = mutated_mod.get_global_var('func_1276')
call_6056 = relay.TupleGetItem(func_1274_call(), 0)
call_6057 = relay.TupleGetItem(func_1276_call(), 0)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_6060 = relay.TupleGetItem(func_377_call(), 0)
call_6061 = relay.TupleGetItem(func_378_call(), 0)
func_5640_call = mod.get_global_var('func_5640')
func_5641_call = mutated_mod.get_global_var('func_5641')
call_6067 = func_5640_call()
call_6068 = func_5640_call()
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
call_6122 = relay.TupleGetItem(func_1409_call(), 0)
call_6123 = relay.TupleGetItem(func_1411_call(), 0)
const_6127 = relay.const([[[-1.043197,8.700395,-3.262281],[-4.917087,-5.393344,-1.143877],[-8.014962,-6.138398,6.612205],[-7.286678,2.900307,-6.972190],[8.536571,8.407902,6.816792],[7.947755,-2.259366,2.378699],[-0.482872,2.391323,-4.923355],[1.724730,-1.178155,-0.203734],[7.259191,-8.557570,-5.037818],[3.546354,-0.412899,-8.175109],[1.250734,2.583250,-6.327251]],[[-3.081109,-1.031945,8.341027],[5.620756,-5.792827,8.828271],[-3.862061,9.478367,0.541787],[9.199535,3.980420,0.629515],[1.156634,9.397285,9.102835],[8.352222,-6.525637,0.946997],[-5.090960,-8.176691,-8.347434],[8.562209,-3.906120,8.532560],[1.190382,7.049084,-1.605976],[-4.198056,9.964534,5.375677],[0.413207,8.330950,-0.360616]],[[4.999401,9.291793,1.122511],[5.081853,-8.493698,8.904516],[-3.309285,-9.969580,8.442245],[-7.225308,-6.441399,2.561212],[-3.248869,-6.292487,-3.678332],[-0.334609,6.639326,-8.683874],[6.243710,-5.938742,4.637893],[-8.612072,-5.563094,7.599935],[1.956504,0.269470,-8.428705],[0.194274,0.127143,-9.721773],[2.346381,9.704427,-9.035627]],[[7.991643,-8.006565,-6.919325],[-7.050333,9.416934,2.217326],[-0.223055,-8.327886,0.221957],[8.102038,-4.648287,-5.963350],[-6.838573,0.741509,4.049066],[8.556786,-8.869257,-3.101328],[-9.084248,5.684360,2.606260],[-4.149399,5.849466,4.721237],[3.132896,-2.841549,6.934354],[-2.185813,-4.430840,8.730647],[-5.449411,-4.859619,-2.470561]],[[1.436955,4.985503,-8.562073],[2.647742,0.524984,-8.800174],[9.236151,0.152808,2.636986],[2.744041,-5.284681,6.493960],[2.306560,8.997732,-1.562568],[-5.819159,-9.036848,-6.174811],[-6.297860,2.455855,5.462396],[-1.409803,-8.365756,-3.602841],[-8.960179,7.990502,7.518976],[-1.047788,-9.585900,-4.156092],[-4.071864,-9.087110,9.093433]]], dtype = "float32")#candidate|6127|(5, 11, 3)|const|float32
bop_6128 = relay.minimum(call_6122.astype('uint32'), relay.reshape(const_6127.astype('uint32'), relay.shape_of(call_6122))) # shape=(5, 11, 3)
bop_6131 = relay.minimum(call_6123.astype('uint32'), relay.reshape(const_6127.astype('uint32'), relay.shape_of(call_6123))) # shape=(5, 11, 3)
output = relay.Tuple([call_6056,call_6060,call_6067,bop_6128,])
output2 = relay.Tuple([call_6057,call_6061,call_6068,bop_6131,])
func_6135 = relay.Function([], output)
mod['func_6135'] = func_6135
mod = relay.transform.InferType()(mod)
output = func_6135()
func_6136 = relay.Function([], output)
mutated_mod['func_6136'] = func_6136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mod.get_global_var('func_2502')
func_2504_call = mutated_mod.get_global_var('func_2504')
call_6195 = relay.TupleGetItem(func_2502_call(), 0)
call_6196 = relay.TupleGetItem(func_2504_call(), 0)
func_2284_call = mod.get_global_var('func_2284')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_6208 = relay.TupleGetItem(func_2284_call(), 0)
call_6209 = relay.TupleGetItem(func_2285_call(), 0)
output = relay.Tuple([call_6195,call_6208,])
output2 = relay.Tuple([call_6196,call_6209,])
func_6239 = relay.Function([], output)
mod['func_6239'] = func_6239
mod = relay.transform.InferType()(mod)
output = func_6239()
func_6240 = relay.Function([], output)
mutated_mod['func_6240'] = func_6240
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6259 = relay.var("var_6259", dtype = "float32", shape = (12, 14, 10))#candidate|6259|(12, 14, 10)|var|float32
uop_6260 = relay.sigmoid(var_6259.astype('float32')) # shape=(12, 14, 10)
uop_6264 = relay.log2(uop_6260.astype('float32')) # shape=(12, 14, 10)
output = relay.Tuple([uop_6264,])
output2 = relay.Tuple([uop_6264,])
func_6268 = relay.Function([var_6259,], output)
mod['func_6268'] = func_6268
mod = relay.transform.InferType()(mod)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6269 = relay.var("var_6269", dtype = "float32", shape = (12, 14, 10))#candidate|6269|(12, 14, 10)|var|float32
func_6268_call = mutated_mod.get_global_var('func_6268')
call_6270 = func_6268_call(var_6269)
output = call_6270
func_6271 = relay.Function([var_6269], output)
mutated_mod['func_6271'] = func_6271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5640_call = mod.get_global_var('func_5640')
func_5641_call = mutated_mod.get_global_var('func_5641')
call_6299 = func_5640_call()
call_6300 = func_5640_call()
output = relay.Tuple([call_6299,])
output2 = relay.Tuple([call_6300,])
func_6317 = relay.Function([], output)
mod['func_6317'] = func_6317
mod = relay.transform.InferType()(mod)
mutated_mod['func_6317'] = func_6317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6317_call = mutated_mod.get_global_var('func_6317')
call_6318 = func_6317_call()
output = call_6318
func_6319 = relay.Function([], output)
mutated_mod['func_6319'] = func_6319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_6320 = func_4785_call()
call_6321 = func_4785_call()
func_4110_call = mod.get_global_var('func_4110')
func_4112_call = mutated_mod.get_global_var('func_4112')
call_6323 = func_4110_call()
call_6324 = func_4110_call()
func_1702_call = mod.get_global_var('func_1702')
func_1704_call = mutated_mod.get_global_var('func_1704')
var_6326 = relay.var("var_6326", dtype = "bool", shape = (3150,))#candidate|6326|(3150,)|var|bool
call_6325 = relay.TupleGetItem(func_1702_call(relay.reshape(var_6326.astype('bool'), [1, 3150])), 1)
call_6327 = relay.TupleGetItem(func_1704_call(relay.reshape(var_6326.astype('bool'), [1, 3150])), 1)
output = relay.Tuple([call_6320,call_6323,call_6325,var_6326,])
output2 = relay.Tuple([call_6321,call_6324,call_6327,var_6326,])
func_6329 = relay.Function([var_6326,], output)
mod['func_6329'] = func_6329
mod = relay.transform.InferType()(mod)
var_6330 = relay.var("var_6330", dtype = "bool", shape = (3150,))#candidate|6330|(3150,)|var|bool
output = func_6329(var_6330)
func_6331 = relay.Function([var_6330], output)
mutated_mod['func_6331'] = func_6331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5695_call = mod.get_global_var('func_5695')
func_5697_call = mutated_mod.get_global_var('func_5697')
call_6380 = relay.TupleGetItem(func_5695_call(), 0)
call_6381 = relay.TupleGetItem(func_5697_call(), 0)
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
const_6407 = relay.const([-3,7,8,10,-7,-7,-10,-4,10,-3,-2,2,7,-8,-5,4,10,3,-7,1,1,5,-10,4,-10,1,-9,3,-4,-4,-6,8,10,-3,8,10,-1,-1,-5,1,1,7,-6,8], dtype = "int16")#candidate|6407|(44,)|const|int16
call_6406 = relay.TupleGetItem(func_2210_call(relay.reshape(const_6407.astype('int16'), [1, 11, 4])), 0)
call_6408 = relay.TupleGetItem(func_2212_call(relay.reshape(const_6407.astype('int16'), [1, 11, 4])), 0)
output = relay.Tuple([call_6380,call_6406,const_6407,])
output2 = relay.Tuple([call_6381,call_6408,const_6407,])
func_6419 = relay.Function([], output)
mod['func_6419'] = func_6419
mod = relay.transform.InferType()(mod)
mutated_mod['func_6419'] = func_6419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6419_call = mutated_mod.get_global_var('func_6419')
call_6420 = func_6419_call()
output = call_6420
func_6421 = relay.Function([], output)
mutated_mod['func_6421'] = func_6421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3889_call = mod.get_global_var('func_3889')
func_3891_call = mutated_mod.get_global_var('func_3891')
call_6442 = func_3889_call()
call_6443 = func_3889_call()
output = call_6442
output2 = call_6443
func_6469 = relay.Function([], output)
mod['func_6469'] = func_6469
mod = relay.transform.InferType()(mod)
mutated_mod['func_6469'] = func_6469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6469_call = mutated_mod.get_global_var('func_6469')
call_6470 = func_6469_call()
output = call_6470
func_6471 = relay.Function([], output)
mutated_mod['func_6471'] = func_6471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6469_call = mod.get_global_var('func_6469')
func_6471_call = mutated_mod.get_global_var('func_6471')
call_6502 = func_6469_call()
call_6503 = func_6469_call()
func_4798_call = mod.get_global_var('func_4798')
func_4800_call = mutated_mod.get_global_var('func_4800')
call_6508 = relay.TupleGetItem(func_4798_call(), 0)
call_6509 = relay.TupleGetItem(func_4800_call(), 0)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_6532 = relay.TupleGetItem(func_377_call(), 0)
call_6533 = relay.TupleGetItem(func_378_call(), 0)
output = relay.Tuple([call_6502,call_6508,call_6532,])
output2 = relay.Tuple([call_6503,call_6509,call_6533,])
func_6541 = relay.Function([], output)
mod['func_6541'] = func_6541
mod = relay.transform.InferType()(mod)
mutated_mod['func_6541'] = func_6541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6541_call = mutated_mod.get_global_var('func_6541')
call_6542 = func_6541_call()
output = call_6542
func_6543 = relay.Function([], output)
mutated_mod['func_6543'] = func_6543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_6561 = relay.TupleGetItem(func_377_call(), 0)
call_6562 = relay.TupleGetItem(func_378_call(), 0)
func_3210_call = mod.get_global_var('func_3210')
func_3213_call = mutated_mod.get_global_var('func_3213')
var_6564 = relay.var("var_6564", dtype = "float32", shape = (1053,))#candidate|6564|(1053,)|var|float32
call_6563 = relay.TupleGetItem(func_3210_call(relay.reshape(var_6564.astype('float32'), [1053,])), 4)
call_6565 = relay.TupleGetItem(func_3213_call(relay.reshape(var_6564.astype('float32'), [1053,])), 4)
var_6579 = relay.var("var_6579", dtype = "float32", shape = (1053,))#candidate|6579|(1053,)|var|float32
bop_6580 = relay.subtract(var_6564.astype('uint8'), relay.reshape(var_6579.astype('uint8'), relay.shape_of(var_6564))) # shape=(1053,)
output = relay.Tuple([call_6561,call_6563,bop_6580,])
output2 = relay.Tuple([call_6562,call_6565,bop_6580,])
func_6583 = relay.Function([var_6564,var_6579,], output)
mod['func_6583'] = func_6583
mod = relay.transform.InferType()(mod)
mutated_mod['func_6583'] = func_6583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6583_call = mutated_mod.get_global_var('func_6583')
var_6585 = relay.var("var_6585", dtype = "float32", shape = (1053,))#candidate|6585|(1053,)|var|float32
var_6586 = relay.var("var_6586", dtype = "float32", shape = (1053,))#candidate|6586|(1053,)|var|float32
call_6584 = func_6583_call(var_6585,var_6586,)
output = call_6584
func_6587 = relay.Function([var_6585,var_6586,], output)
mutated_mod['func_6587'] = func_6587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2724_call = mod.get_global_var('func_2724')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_6614 = relay.TupleGetItem(func_2724_call(), 0)
call_6615 = relay.TupleGetItem(func_2725_call(), 0)
func_4297_call = mod.get_global_var('func_4297')
func_4300_call = mutated_mod.get_global_var('func_4300')
var_6617 = relay.var("var_6617", dtype = "float32", shape = (63,))#candidate|6617|(63,)|var|float32
call_6616 = relay.TupleGetItem(func_4297_call(relay.reshape(var_6617.astype('float32'), [7, 1, 9])), 0)
call_6618 = relay.TupleGetItem(func_4300_call(relay.reshape(var_6617.astype('float32'), [7, 1, 9])), 0)
output = relay.Tuple([call_6614,call_6616,var_6617,])
output2 = relay.Tuple([call_6615,call_6618,var_6617,])
func_6627 = relay.Function([var_6617,], output)
mod['func_6627'] = func_6627
mod = relay.transform.InferType()(mod)
mutated_mod['func_6627'] = func_6627
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6628 = relay.var("var_6628", dtype = "float32", shape = (63,))#candidate|6628|(63,)|var|float32
func_6627_call = mutated_mod.get_global_var('func_6627')
call_6629 = func_6627_call(var_6628)
output = call_6629
func_6630 = relay.Function([var_6628], output)
mutated_mod['func_6630'] = func_6630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
call_6634 = relay.TupleGetItem(func_1409_call(), 0)
call_6635 = relay.TupleGetItem(func_1411_call(), 0)
func_2647_call = mod.get_global_var('func_2647')
func_2649_call = mutated_mod.get_global_var('func_2649')
var_6644 = relay.var("var_6644", dtype = "float64", shape = (455,))#candidate|6644|(455,)|var|float64
call_6643 = relay.TupleGetItem(func_2647_call(relay.reshape(var_6644.astype('float64'), [455,])), 5)
call_6645 = relay.TupleGetItem(func_2649_call(relay.reshape(var_6644.astype('float64'), [455,])), 5)
output = relay.Tuple([call_6634,call_6643,var_6644,])
output2 = relay.Tuple([call_6635,call_6645,var_6644,])
func_6666 = relay.Function([var_6644,], output)
mod['func_6666'] = func_6666
mod = relay.transform.InferType()(mod)
mutated_mod['func_6666'] = func_6666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6667 = relay.var("var_6667", dtype = "float64", shape = (455,))#candidate|6667|(455,)|var|float64
func_6666_call = mutated_mod.get_global_var('func_6666')
call_6668 = func_6666_call(var_6667)
output = call_6668
func_6669 = relay.Function([var_6667], output)
mutated_mod['func_6669'] = func_6669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_768_call = mod.get_global_var('func_768')
func_769_call = mutated_mod.get_global_var('func_769')
call_6681 = relay.TupleGetItem(func_768_call(), 1)
call_6682 = relay.TupleGetItem(func_769_call(), 1)
func_4257_call = mod.get_global_var('func_4257')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_6684 = relay.TupleGetItem(func_4257_call(), 7)
call_6685 = relay.TupleGetItem(func_4259_call(), 7)
func_4275_call = mod.get_global_var('func_4275')
func_4277_call = mutated_mod.get_global_var('func_4277')
call_6688 = relay.TupleGetItem(func_4275_call(), 0)
call_6689 = relay.TupleGetItem(func_4277_call(), 0)
func_3210_call = mod.get_global_var('func_3210')
func_3213_call = mutated_mod.get_global_var('func_3213')
const_6702 = relay.const([7.573936,0.555197,2.326496,3.280240,4.898057,4.070423,-0.963708,6.333306,-4.628433,7.182142,8.643863,5.242733,5.789699,9.364171,7.209944,-9.078306,4.773567,-5.947337,-1.326512,-8.026784,6.340385,2.010079,-7.076904,6.042506,4.386859,7.430586,9.849733,-2.672512,-0.716946,-1.857286,-5.449679,6.471764,-2.931944,5.284011,4.196387,5.002851,1.627190,-2.984685,7.002627,-3.114340,-3.336482,1.627722,-8.237737,-3.288463,-5.620134,7.096833,-7.676139,-0.028678,-1.542028,3.368537,0.580307,-7.237904,8.822503,1.564835,-7.681233,5.000869,2.306513,9.134104,8.015477,-1.758333,-0.812782,-1.572214,-8.919786,3.038812,-9.780012,3.878531,3.814891,-1.624334,-0.739130,6.414615,0.962118,-6.137738,-4.106204,4.230688,3.985281,0.529611,0.534556,-2.194253,-1.378035,-8.389052,-5.791391,-4.454734,2.893136,1.175608,-6.040741,-0.308694,7.988391,-0.573260,-3.865146,8.567621,-8.305400,5.687452,8.409294,5.051196,-9.910389,-4.769153,3.332920,-2.779937,-6.672597,9.448668,0.618468,-1.052207,-3.533617,-8.623944,-9.923043,-1.163205,-8.956430,-5.425581,-5.978820,2.786391,7.872657,8.733299,-1.008761,2.529728,2.032749,-7.018981,9.678558,-4.006557,0.745917,-7.187171,-2.065282,-7.480084,1.458260,-5.215092,8.964243,-7.551736,-4.354758,4.714066,1.178299,9.153776,4.781310,9.579625,-5.680816,-4.544340,-7.915536,-5.256699,-0.734350,7.524741,5.163506,6.636188,8.433868,-4.590059,8.635402,4.727444,-5.280810,-8.023252,-7.723590,-6.871064,2.258263,-2.044892,-4.857780,-5.867246,-3.513127,-6.882371,-6.294319,-8.582498,5.025227,8.901443,-3.737987,4.789657,9.465121,8.929088,-4.420001,-9.255905,-2.961532,7.152479,7.197824,3.735082,-8.259209,-3.183058,7.220527,-3.826162,1.563911,-7.437380,-5.374745,-9.873468,1.897113,5.469521,-8.745627,7.032179,8.239898,6.341714,-9.768081,-9.696403,-8.112238,4.696957,4.770402,-5.286392,2.044179,-1.244117,-4.813503,1.377809,-3.129977,0.015462,5.316324,-4.773925,-8.697608,2.986565,-8.502501,2.500628,-9.236977,8.671695,-2.570003,-4.871127,-1.114831,-4.120965,-6.404176,-1.564277,-4.056369,7.269632,-5.913285,-5.401094,7.505541,1.365223,0.484887,-1.831624,-8.480711,7.908082,1.027357,-0.389301,7.313004,-6.985439,8.661618,-8.798913,0.089870,4.334797,9.083034,-6.350418,9.653006,0.533156,-9.767129,7.500358,1.319424,2.028210,-5.383315,-7.857727,-5.473153,1.003880,4.114439,-8.177929,7.322945,-0.723923,2.875734,6.694764,-8.084053,-5.931924,-9.242635,7.978080,-1.607675,-3.531279,7.397537,-2.562975,-4.978303,7.390162,-8.049688,-4.752481,5.027831,-8.137079,8.080456,1.581910,-2.449711,-7.277368,0.162596,-1.717784,-4.756645,3.077320,6.331626,-3.282267,6.507208,5.726705,3.998263,-5.117344,-6.989310,0.714694,-1.278820,-9.964317,-3.191672,-5.883261,-3.481868,-5.432363,4.285683,-3.490045,0.353621,-7.678250,-4.329001,-8.954381,4.669319,-9.196417,-8.103736,7.140434,1.621517,6.798437,-6.550490,3.972725,8.822962,-2.251979,2.905414,0.334934,6.658179,-1.432303,-1.742472,8.345407,2.425720,7.574381,1.149765,-3.286161,-8.164744,6.260189,3.417472,-9.179177,-4.776617,-7.726592,9.072957,-7.028326,5.180814,7.012469,-8.511936,-0.185594,-7.484546,3.751273,-0.541000,-1.513457,7.640088,-0.607595,6.603717,3.551926,3.628039,1.266071,-0.882023,8.821128,-0.374186,1.409602,0.519234,-9.321381,2.489728,7.750586,-3.294211,5.768207,6.517698,-9.715962,-9.474567,-4.317575,8.158050,-8.676078,-9.219845,-1.145028,-3.209230,7.338527,7.869578,-9.796466,8.549703,-5.787813,8.501503,9.761823,8.392228,6.879915,-1.366610,6.591056,-1.176902,1.598383,8.215742,3.022602,1.441584,3.110222,0.864131,0.776078,-5.720280,-7.094608,2.123211,-3.540820,7.356355,-4.501538,-4.100589,-6.865631,-2.548817,6.476965,8.975152,7.036137,3.287872,9.457668,-4.803642,1.765170,-6.798742,3.754013,4.428083,9.014758,9.596937,-0.272857,7.840965,-8.484905,-4.340557,-6.258301,4.298797,-6.427426,-3.694450,0.460849,1.774301,2.156189,-2.053954,0.710395,6.917381,-5.605349,8.767757,-7.571456,0.371899,-8.681262,-1.174426,4.436645,-6.445406,-2.068520,5.065569,-4.325633,-0.583467,4.988413,-3.710074,-0.244471,2.003832,-2.165545,-7.606259,4.287739,-1.814837,8.352045,-2.975745,-2.187138,3.845422,-4.419293,-4.562146,3.463895,-9.974461,1.373633,1.651106,-1.794757,-0.204911,3.295411,0.376728,7.406566,-4.942096,-1.231897,2.144179,-1.466350,0.772840,-4.299930,8.146421,-7.618065,-7.552369,-7.118575,-2.750077,-7.436933,6.252222,6.844311,-0.120796,-1.214037,2.714204,-2.853950,5.065882,7.030064,1.901081,-4.707480,5.280750,-2.268983,-2.540082,-2.972779,-0.091730,-0.328709,-1.708850,-7.142870,-0.374378,-1.743371,-0.787755,-5.088166,6.424745,-1.868452,1.484821,9.408133,-8.919539,-9.576145,-2.441554,0.753165,0.612294,-5.272394,8.376314,5.053164,-4.427705,1.331415,-2.953235,-5.305549,-9.146985,-6.397757,-1.227825,-1.826416,9.117962,0.537467,9.812562,-7.800499,-7.454533,7.865706,-3.793713,0.943043,-2.425212,3.757662,6.653203,-0.316469,-8.584482,2.275000,-7.011330,2.767946,8.051368,3.793776,9.242207,3.790194,-6.158400,5.941807,1.252960,3.007452,-0.998879,-4.094904,2.955264,3.769470,7.650515,-7.795749,-1.367040,-2.119636,-7.213404,8.124042,8.440167,-2.307861,9.591956,-4.601204,-8.450469,-8.363815,-3.877669,-6.720637,4.485739,-8.301158,9.149567,-1.003135,-1.078693,3.166920,-7.860321,7.406399,3.384919,6.233603,3.286394,-6.471963,-8.303269,-1.899790,4.458811,-6.128772,-3.158313,-8.625930,7.038583,-9.911688,2.807757,-0.969371,-9.737451,2.941581,6.111611,-4.544474,5.953380,7.287663,7.057942,-9.972269,-0.658471,1.117948,4.116370,-1.306592,-0.693099,9.575597,-8.359119,4.599527,6.654751,2.234446,2.178578,6.039067,-9.162096,-1.439307,9.191560,-6.752612,7.737170,-0.313527,6.436086,9.023596,8.053870,8.216347,7.141420,-9.395283,-2.489283,0.315187,0.124100,-2.142238,7.743753,5.682875,8.576079,6.634333,8.033354,-5.289349,-5.024930,-9.239659,-2.967515,-7.907709,-7.210079,-8.589508,-8.389311,0.280827,-7.186134,9.481601,-8.438685,-4.625381,-5.021132,4.414678,-7.476747,8.796387,9.361317,-5.485047,3.987428,7.282977,-4.905941,-1.417396,-5.146529,-2.373341,7.728106,-7.981324,7.996489,-9.525684,-4.494503,5.240954,9.100199,-3.214253,5.572385,-7.231145,0.484723,-2.704038,0.783090,-6.160330,-7.300231,-1.460628,-3.041467,-2.243627,-5.000309,0.083803,-9.926979,9.115023,9.565749,-4.244697,-5.404613,-6.178157,1.822742,9.782116,6.918885,-1.468925,0.285637,-2.571727,7.778108,8.907954,3.707044,0.445723,6.159074,3.930702,-1.763462,8.262781,-3.351755,-5.917342,6.010450,-6.035163,9.316836,-1.526306,2.689518,-8.509431,5.406262,-5.175705,-1.144040,-2.468317,-9.518949,6.571621,-4.673192,-9.568163,-6.926108,-9.120211,-8.390287,-1.552705,7.501826,-3.033726,7.686657,1.121660,-7.676337,8.157429,1.724147,8.446138,3.524990,-3.820529,0.188120,-0.105470,4.522220,5.662535,9.749397,7.915901,2.104827,-1.505710,-4.478961,9.523221,1.332610,-5.250692,1.372317,3.759202,-9.386189,-1.604987,-3.720904,8.514003,7.561474,2.238519,-1.472282,5.963457,1.753405,1.063144,0.766669,-4.485875,1.587050,-0.377049,-5.766117,-8.146768,0.234385,5.941593,3.814853,-3.759428,1.424038,-5.838256,-9.025869,6.776494,7.844020,-0.022094,-7.753722,5.144364,1.421314,-3.421174,6.046595,-5.633303,6.957141,-8.231170,-4.991848,6.895642,1.224112,0.291002,8.953839,7.897519,0.917217,7.684905,-6.647960,-9.910391,-2.791146,-5.044173,9.727105,4.464512,-4.891753,2.276970,-8.726031,-8.744244,-0.872451,2.068059,0.655051,-5.092650,-8.585875,-4.058014,6.501743,-3.837096,4.798859,8.612470,3.379621,8.218766,5.495657,-8.604436,9.381741,0.625389,5.221872,4.536445,9.945541,7.016593,3.416636,-0.341491,-4.366741,1.400147,3.350264,-3.254493,9.920962,-5.049204,0.559121,-1.405026,-4.568031,-1.492674,-3.969989,-9.472363,-6.922761,-1.203691,2.608285,-3.582037,8.562551,5.173327,-2.245198,-8.140760,4.066883,-5.058864,2.681567,4.795463,-6.858074,3.699648,5.195835,-8.273331,-5.182831,8.257297,-9.275510,9.398451,5.902339,-8.319613,2.141160,6.559746,-9.268312,2.726877,-2.037707,6.010917,-9.416177,-6.360770,-8.436302,2.584325,1.508490,-4.120554,-7.570366,4.453514,-1.289479,-8.232033,-1.178802,-9.604394,5.161701,7.560398,-2.416911,5.141093,7.788770,-9.255262,-0.236915,-1.822561,-3.952911,4.308439,5.916412,1.625897,1.867905,0.195619,7.358211,-4.239885,0.371326,8.646888,-5.871475,-7.734652,-3.031270,9.281546,4.991129,-2.733904,-9.244661,-7.032974,-7.295715,5.748743,4.880853,-6.366708,-0.725281,-8.611182,-1.266090,6.735340,-0.109200,-5.742819,-6.977528,3.651312,-7.371667,7.474318,-0.014633,-1.666448,2.381538,-2.567539,-9.258308,-9.549314,8.301795,-0.390156,-6.493936,-5.121941,8.839614,4.528834,-2.933053,6.204435,-1.614267,5.237305,0.387322,0.324347,3.040261,0.877365,-8.236519,-6.110899,-8.021671,4.516780,-5.483243,4.381435,8.893871,1.829096,-9.498613,-2.355095,4.261435,4.085919,5.535591,-4.397858,-2.107366,-4.166546,4.303194,-6.594869,6.319533,-7.714911,3.266651,6.574096,-3.305672,-9.644312,-2.456961,8.479815,-6.493328,-7.616998,5.872309,-2.769366,-7.952026,0.263713,3.862235,-6.842850,6.041378,-8.610402,-3.794150,6.549473,-4.131066,8.920196,-7.188458,-0.658121,9.388764,-4.521854,5.983670,-2.734025,7.530829,6.079849,9.033681,7.554272,-9.011046,0.109937,-3.567743,0.180196,-7.905847,7.185797,2.706175,9.539622,-9.373326,-5.879270,-7.251173,2.768512,-6.989706,-0.960639,-2.025970,-3.210468,9.401627,-9.822685,4.102405,-9.445150,-5.019642,-4.565843,-3.714905,3.003437,-8.873912,-5.465847,-1.621870,-9.980919,8.574509,9.318186,3.359559,-4.741591,1.560278,-3.855765,2.889691,4.608523,-8.476228,4.828492,0.959454,9.376240,-9.596992,0.413222,7.901740,7.860091,-9.761658,3.502895,9.080244,8.064075,-7.853306,4.576806,-1.988967,9.378622,-1.088973,7.044167,0.177516,9.511745,9.607018,4.921427,7.880775,2.546575,6.972481,1.884079,-1.119775,2.629853,-7.272434,-9.645248,1.536976,0.933247,8.417769,-2.758678,5.993784,-5.785991,-4.212574,2.208412,9.823105,5.523765,3.613908,8.690971,9.698019,-3.796687,4.879888,2.297653,2.829661,-4.097240,7.315872,6.037469,5.336018,2.674937,6.280561,2.673566,2.270457,4.536828,1.024492,9.086378,-7.257246,-8.002550,-9.718953,-0.740852,-3.894329,-9.709178,3.444233,-6.937967,-8.327679,-2.844386,-4.100842,-0.704938,4.718688,0.560026,-6.742274,4.113411,-9.440667,-6.791398,1.296909], dtype = "float32")#candidate|6702|(1053,)|const|float32
call_6701 = relay.TupleGetItem(func_3210_call(relay.reshape(const_6702.astype('float32'), [1053,])), 3)
call_6703 = relay.TupleGetItem(func_3213_call(relay.reshape(const_6702.astype('float32'), [1053,])), 3)
output = relay.Tuple([call_6681,call_6684,call_6688,call_6701,const_6702,])
output2 = relay.Tuple([call_6682,call_6685,call_6689,call_6703,const_6702,])
func_6710 = relay.Function([], output)
mod['func_6710'] = func_6710
mod = relay.transform.InferType()(mod)
output = func_6710()
func_6711 = relay.Function([], output)
mutated_mod['func_6711'] = func_6711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6135_call = mod.get_global_var('func_6135')
func_6136_call = mutated_mod.get_global_var('func_6136')
call_6743 = relay.TupleGetItem(func_6135_call(), 1)
call_6744 = relay.TupleGetItem(func_6136_call(), 1)
func_3931_call = mod.get_global_var('func_3931')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_6760 = relay.TupleGetItem(func_3931_call(relay.reshape(call_6743.astype('float32'), [165,])), 1)
call_6761 = relay.TupleGetItem(func_3934_call(relay.reshape(call_6743.astype('float32'), [165,])), 1)
func_3529_call = mod.get_global_var('func_3529')
func_3530_call = mutated_mod.get_global_var('func_3530')
call_6762 = func_3529_call()
call_6763 = func_3529_call()
output = relay.Tuple([call_6743,call_6760,call_6762,])
output2 = relay.Tuple([call_6744,call_6761,call_6763,])
func_6788 = relay.Function([], output)
mod['func_6788'] = func_6788
mod = relay.transform.InferType()(mod)
output = func_6788()
func_6789 = relay.Function([], output)
mutated_mod['func_6789'] = func_6789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5323_call = mod.get_global_var('func_5323')
func_5324_call = mutated_mod.get_global_var('func_5324')
call_6851 = func_5323_call()
call_6852 = func_5323_call()
output = call_6851
output2 = call_6852
func_6856 = relay.Function([], output)
mod['func_6856'] = func_6856
mod = relay.transform.InferType()(mod)
mutated_mod['func_6856'] = func_6856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6856_call = mutated_mod.get_global_var('func_6856')
call_6857 = func_6856_call()
output = call_6857
func_6858 = relay.Function([], output)
mutated_mod['func_6858'] = func_6858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6419_call = mod.get_global_var('func_6419')
func_6421_call = mutated_mod.get_global_var('func_6421')
call_6868 = relay.TupleGetItem(func_6419_call(), 1)
call_6869 = relay.TupleGetItem(func_6421_call(), 1)
var_6892 = relay.var("var_6892", dtype = "bool", shape = (3, 11, 4))#candidate|6892|(3, 11, 4)|var|bool
bop_6893 = relay.bitwise_xor(call_6868.astype('int8'), relay.reshape(var_6892.astype('int8'), relay.shape_of(call_6868))) # shape=(3, 11, 4)
bop_6896 = relay.bitwise_xor(call_6869.astype('int8'), relay.reshape(var_6892.astype('int8'), relay.shape_of(call_6869))) # shape=(3, 11, 4)
bop_6906 = relay.logical_and(call_6868.astype('bool'), relay.reshape(bop_6893.astype('bool'), relay.shape_of(call_6868))) # shape=(3, 11, 4)
bop_6909 = relay.logical_and(call_6869.astype('bool'), relay.reshape(bop_6896.astype('bool'), relay.shape_of(call_6869))) # shape=(3, 11, 4)
output = bop_6906
output2 = bop_6909
func_6911 = relay.Function([var_6892,], output)
mod['func_6911'] = func_6911
mod = relay.transform.InferType()(mod)
var_6912 = relay.var("var_6912", dtype = "bool", shape = (3, 11, 4))#candidate|6912|(3, 11, 4)|var|bool
output = func_6911(var_6912)
func_6913 = relay.Function([var_6912], output)
mutated_mod['func_6913'] = func_6913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4349_call = mod.get_global_var('func_4349')
func_4350_call = mutated_mod.get_global_var('func_4350')
call_6978 = relay.TupleGetItem(func_4349_call(), 0)
call_6979 = relay.TupleGetItem(func_4350_call(), 0)
func_3931_call = mod.get_global_var('func_3931')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_6981 = relay.TupleGetItem(func_3931_call(relay.reshape(call_6978.astype('float32'), [165,])), 0)
call_6982 = relay.TupleGetItem(func_3934_call(relay.reshape(call_6978.astype('float32'), [165,])), 0)
func_5904_call = mod.get_global_var('func_5904')
func_5906_call = mutated_mod.get_global_var('func_5906')
call_6998 = relay.TupleGetItem(func_5904_call(), 3)
call_6999 = relay.TupleGetItem(func_5906_call(), 3)
output = relay.Tuple([call_6978,call_6981,call_6998,])
output2 = relay.Tuple([call_6979,call_6982,call_6999,])
func_7000 = relay.Function([], output)
mod['func_7000'] = func_7000
mod = relay.transform.InferType()(mod)
mutated_mod['func_7000'] = func_7000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7000_call = mutated_mod.get_global_var('func_7000')
call_7001 = func_7000_call()
output = call_7001
func_7002 = relay.Function([], output)
mutated_mod['func_7002'] = func_7002
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7006 = relay.const([[[3.918356,8.306158,4.329892,-4.557134,4.685189,2.541013,2.765019,-0.509440,-7.490149,4.269001,-7.248834,-1.654981],[-0.403710,2.832801,4.594547,-3.332896,7.771346,-1.354730,-4.277084,7.833653,-5.081012,-9.445676,-8.111768,-4.506247]],[[8.704109,-2.387239,9.672988,-6.616738,6.430565,-0.080303,-3.023799,0.241069,-2.056355,1.684605,-1.860842,-9.554594],[6.661363,-5.977231,2.151758,-8.710869,2.664681,3.941391,5.724030,-5.614390,2.756637,0.489511,-6.467967,5.890951]],[[4.743549,7.479333,4.360148,-6.405073,-0.983281,7.026823,1.752140,-6.341704,-7.866094,6.243803,-7.196124,-3.265551],[0.971419,6.498029,-8.747798,-6.977935,1.154098,-2.643977,-9.148963,-4.907772,8.461929,-6.398409,8.145831,0.031795]],[[-8.835956,-0.261138,5.338851,-5.162936,-9.790035,-3.663687,-2.406626,-9.068261,-6.877679,0.157907,7.874908,8.786568],[6.565392,3.809189,-0.845866,-6.469194,-6.085176,3.862313,5.624840,-1.817518,-2.507775,-2.951784,8.721034,-1.841112]],[[7.791922,-9.993184,4.523288,-2.391447,-5.793586,-8.957681,-8.925827,7.974602,3.523571,-7.960713,4.519697,-6.319597],[6.631553,-0.376958,-0.231003,-6.255441,-6.279616,-3.315774,-4.417808,-8.715346,5.246648,-3.214221,6.425590,-7.120460]],[[-2.828946,7.550691,1.410152,9.162451,3.579579,3.263108,7.632982,8.280423,4.138857,2.042787,-0.308511,-3.692792],[-5.115740,-4.377339,-4.704675,-8.656037,5.666966,-8.771778,-6.583634,-2.201494,-0.932906,7.475492,8.117642,7.528859]],[[-9.319435,7.851408,2.699436,-7.969060,-9.766039,0.633905,3.031882,5.558737,-3.905789,0.395198,-2.955184,-6.700386],[-5.069036,-4.614839,-3.204474,-1.174259,-6.637805,-6.529666,6.661497,-4.936526,8.687403,-3.207297,9.555738,7.865162]],[[-2.368447,-7.859932,-2.414415,5.715409,-4.280943,7.172202,7.031549,-5.761714,2.692306,8.036718,2.373841,-1.955164],[-3.893116,-6.486602,-7.056269,0.990998,-6.604948,2.495117,-2.403309,9.212015,-8.844185,6.518090,-1.252197,-3.875439]],[[-4.153533,-0.344883,5.060120,-0.793873,-6.847933,6.825424,9.285207,4.315286,2.104979,-6.226980,5.450421,-9.841631],[-6.352482,6.220484,8.351512,-0.952831,-6.239210,-0.132599,9.686181,4.659778,4.433313,4.583583,6.948008,-9.412503]],[[5.023881,-9.520623,9.837711,9.436312,-2.451526,-4.999954,-2.226217,-2.853695,-4.211000,-3.283769,0.975563,0.353535],[-9.729908,8.695265,2.489822,-1.901430,2.220819,5.319372,-0.213598,-7.435158,3.051796,-6.405475,-2.998703,-7.319595]]], dtype = "float32")#candidate|7006|(10, 2, 12)|const|float32
uop_7007 = relay.sigmoid(const_7006.astype('float32')) # shape=(10, 2, 12)
func_351_call = mod.get_global_var('func_351')
func_352_call = mutated_mod.get_global_var('func_352')
call_7012 = relay.TupleGetItem(func_351_call(), 1)
call_7013 = relay.TupleGetItem(func_352_call(), 1)
uop_7014 = relay.erf(uop_7007.astype('float32')) # shape=(10, 2, 12)
output = relay.Tuple([call_7012,uop_7014,])
output2 = relay.Tuple([call_7013,uop_7014,])
func_7025 = relay.Function([], output)
mod['func_7025'] = func_7025
mod = relay.transform.InferType()(mod)
mutated_mod['func_7025'] = func_7025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7025_call = mutated_mod.get_global_var('func_7025')
call_7026 = func_7025_call()
output = call_7026
func_7027 = relay.Function([], output)
mutated_mod['func_7027'] = func_7027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1274_call = mod.get_global_var('func_1274')
func_1276_call = mutated_mod.get_global_var('func_1276')
call_7030 = relay.TupleGetItem(func_1274_call(), 0)
call_7031 = relay.TupleGetItem(func_1276_call(), 0)
output = relay.Tuple([call_7030,])
output2 = relay.Tuple([call_7031,])
func_7041 = relay.Function([], output)
mod['func_7041'] = func_7041
mod = relay.transform.InferType()(mod)
mutated_mod['func_7041'] = func_7041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7041_call = mutated_mod.get_global_var('func_7041')
call_7042 = func_7041_call()
output = call_7042
func_7043 = relay.Function([], output)
mutated_mod['func_7043'] = func_7043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6317_call = mod.get_global_var('func_6317')
func_6319_call = mutated_mod.get_global_var('func_6319')
call_7068 = relay.TupleGetItem(func_6317_call(), 0)
call_7069 = relay.TupleGetItem(func_6319_call(), 0)
output = relay.Tuple([call_7068,])
output2 = relay.Tuple([call_7069,])
func_7072 = relay.Function([], output)
mod['func_7072'] = func_7072
mod = relay.transform.InferType()(mod)
output = func_7072()
func_7073 = relay.Function([], output)
mutated_mod['func_7073'] = func_7073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7083 = relay.var("var_7083", dtype = "bool", shape = (4, 5, 14))#candidate|7083|(4, 5, 14)|var|bool
var_7084 = relay.var("var_7084", dtype = "bool", shape = (4, 5, 14))#candidate|7084|(4, 5, 14)|var|bool
bop_7085 = relay.logical_and(var_7083.astype('bool'), relay.reshape(var_7084.astype('bool'), relay.shape_of(var_7083))) # shape=(4, 5, 14)
bop_7093 = relay.greater_equal(var_7083.astype('bool'), relay.reshape(bop_7085.astype('bool'), relay.shape_of(var_7083))) # shape=(4, 5, 14)
output = relay.Tuple([bop_7093,])
output2 = relay.Tuple([bop_7093,])
func_7100 = relay.Function([var_7083,var_7084,], output)
mod['func_7100'] = func_7100
mod = relay.transform.InferType()(mod)
mutated_mod['func_7100'] = func_7100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7100_call = mutated_mod.get_global_var('func_7100')
var_7102 = relay.var("var_7102", dtype = "bool", shape = (4, 5, 14))#candidate|7102|(4, 5, 14)|var|bool
var_7103 = relay.var("var_7103", dtype = "bool", shape = (4, 5, 14))#candidate|7103|(4, 5, 14)|var|bool
call_7101 = func_7100_call(var_7102,var_7103,)
output = call_7101
func_7104 = relay.Function([var_7102,var_7103,], output)
mutated_mod['func_7104'] = func_7104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6469_call = mod.get_global_var('func_6469')
func_6471_call = mutated_mod.get_global_var('func_6471')
call_7134 = func_6469_call()
call_7135 = func_6469_call()
output = call_7134
output2 = call_7135
func_7141 = relay.Function([], output)
mod['func_7141'] = func_7141
mod = relay.transform.InferType()(mod)
mutated_mod['func_7141'] = func_7141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7141_call = mutated_mod.get_global_var('func_7141')
call_7142 = func_7141_call()
output = call_7142
func_7143 = relay.Function([], output)
mutated_mod['func_7143'] = func_7143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1835_call = mod.get_global_var('func_1835')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_7160 = relay.TupleGetItem(func_1835_call(), 0)
call_7161 = relay.TupleGetItem(func_1837_call(), 0)
output = relay.Tuple([call_7160,])
output2 = relay.Tuple([call_7161,])
func_7164 = relay.Function([], output)
mod['func_7164'] = func_7164
mod = relay.transform.InferType()(mod)
output = func_7164()
func_7165 = relay.Function([], output)
mutated_mod['func_7165'] = func_7165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
call_7194 = relay.TupleGetItem(func_1409_call(), 0)
call_7195 = relay.TupleGetItem(func_1411_call(), 0)
func_5640_call = mod.get_global_var('func_5640')
func_5641_call = mutated_mod.get_global_var('func_5641')
call_7214 = func_5640_call()
call_7215 = func_5640_call()
func_5904_call = mod.get_global_var('func_5904')
func_5906_call = mutated_mod.get_global_var('func_5906')
call_7223 = relay.TupleGetItem(func_5904_call(), 3)
call_7224 = relay.TupleGetItem(func_5906_call(), 3)
output = relay.Tuple([call_7194,call_7214,call_7223,])
output2 = relay.Tuple([call_7195,call_7215,call_7224,])
func_7228 = relay.Function([], output)
mod['func_7228'] = func_7228
mod = relay.transform.InferType()(mod)
mutated_mod['func_7228'] = func_7228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7228_call = mutated_mod.get_global_var('func_7228')
call_7229 = func_7228_call()
output = call_7229
func_7230 = relay.Function([], output)
mutated_mod['func_7230'] = func_7230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1676_call = mutated_mod.get_global_var('func_1676')
call_7248 = relay.TupleGetItem(func_1675_call(), 0)
call_7249 = relay.TupleGetItem(func_1676_call(), 0)
output = call_7248
output2 = call_7249
func_7267 = relay.Function([], output)
mod['func_7267'] = func_7267
mod = relay.transform.InferType()(mod)
mutated_mod['func_7267'] = func_7267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7267_call = mutated_mod.get_global_var('func_7267')
call_7268 = func_7267_call()
output = call_7268
func_7269 = relay.Function([], output)
mutated_mod['func_7269'] = func_7269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1480_call = mod.get_global_var('func_1480')
func_1482_call = mutated_mod.get_global_var('func_1482')
call_7401 = relay.TupleGetItem(func_1480_call(), 0)
call_7402 = relay.TupleGetItem(func_1482_call(), 0)
output = relay.Tuple([call_7401,])
output2 = relay.Tuple([call_7402,])
func_7407 = relay.Function([], output)
mod['func_7407'] = func_7407
mod = relay.transform.InferType()(mod)
output = func_7407()
func_7408 = relay.Function([], output)
mutated_mod['func_7408'] = func_7408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7407_call = mod.get_global_var('func_7407')
func_7408_call = mutated_mod.get_global_var('func_7408')
call_7431 = relay.TupleGetItem(func_7407_call(), 0)
call_7432 = relay.TupleGetItem(func_7408_call(), 0)
func_5836_call = mod.get_global_var('func_5836')
func_5838_call = mutated_mod.get_global_var('func_5838')
call_7450 = relay.TupleGetItem(func_5836_call(), 0)
call_7451 = relay.TupleGetItem(func_5838_call(), 0)
var_7460 = relay.var("var_7460", dtype = "float32", shape = (13, 7, 5))#candidate|7460|(13, 7, 5)|var|float32
bop_7461 = relay.greater(call_7450.astype('bool'), relay.reshape(var_7460.astype('bool'), relay.shape_of(call_7450))) # shape=(13, 7, 5)
bop_7464 = relay.greater(call_7451.astype('bool'), relay.reshape(var_7460.astype('bool'), relay.shape_of(call_7451))) # shape=(13, 7, 5)
func_5112_call = mod.get_global_var('func_5112')
func_5115_call = mutated_mod.get_global_var('func_5115')
call_7481 = relay.TupleGetItem(func_5112_call(relay.reshape(bop_7461.astype('float64'), [455,])), 0)
call_7482 = relay.TupleGetItem(func_5115_call(relay.reshape(bop_7461.astype('float64'), [455,])), 0)
output = relay.Tuple([call_7431,bop_7461,call_7481,])
output2 = relay.Tuple([call_7432,bop_7464,call_7482,])
func_7493 = relay.Function([var_7460,], output)
mod['func_7493'] = func_7493
mod = relay.transform.InferType()(mod)
var_7494 = relay.var("var_7494", dtype = "float32", shape = (13, 7, 5))#candidate|7494|(13, 7, 5)|var|float32
output = func_7493(var_7494)
func_7495 = relay.Function([var_7494], output)
mutated_mod['func_7495'] = func_7495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3329_call = mod.get_global_var('func_3329')
func_3331_call = mutated_mod.get_global_var('func_3331')
call_7499 = relay.TupleGetItem(func_3329_call(), 0)
call_7500 = relay.TupleGetItem(func_3331_call(), 0)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_7520 = relay.TupleGetItem(func_2971_call(relay.reshape(call_7499.astype('float32'), [165,])), 3)
call_7521 = relay.TupleGetItem(func_2973_call(relay.reshape(call_7499.astype('float32'), [165,])), 3)
func_5288_call = mod.get_global_var('func_5288')
func_5290_call = mutated_mod.get_global_var('func_5290')
call_7530 = relay.TupleGetItem(func_5288_call(), 0)
call_7531 = relay.TupleGetItem(func_5290_call(), 0)
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
call_7541 = relay.TupleGetItem(func_1409_call(), 0)
call_7542 = relay.TupleGetItem(func_1411_call(), 0)
bop_7546 = relay.power(call_7541.astype('float64'), relay.reshape(call_7520.astype('float64'), relay.shape_of(call_7541))) # shape=(5, 11, 3)
bop_7549 = relay.power(call_7542.astype('float64'), relay.reshape(call_7521.astype('float64'), relay.shape_of(call_7542))) # shape=(5, 11, 3)
uop_7554 = relay.sinh(call_7530.astype('float32')) # shape=(165,)
uop_7556 = relay.sinh(call_7531.astype('float32')) # shape=(165,)
func_4604_call = mod.get_global_var('func_4604')
func_4606_call = mutated_mod.get_global_var('func_4606')
const_7559 = relay.const([[-2.931860,-9.355346,-3.490355,1.917395,-3.581106,5.714648,-9.084574,0.618662,1.936300,-3.769942,-6.952023,-8.140356,3.717137,1.285372,2.621237,-7.094686,2.178986,3.094207,-6.478169,-4.879834,8.572400,2.552331,-4.141749,-1.766007,6.883245,-8.006596,7.623145,0.370572,-9.500798,-5.082500,6.353691,-3.616371,4.813137,2.649761,-3.534545,3.624356,4.791081,-5.285827,1.059375,0.410746,0.918453,5.017809,-4.164271,4.727537,2.579967,0.592530,-3.446223,2.441707,1.375857,1.370839,-9.068527,3.674307,-4.146738,-9.999898,-7.484787,-1.557379,2.812753,6.482184,-5.964940,-9.149534,-0.131103,-6.918747,4.794929,4.451853,-8.050630,6.717021,2.063115,-7.597703,-8.294869,8.510155,5.271757,-2.681188,0.454509,-2.985312,-3.830556,3.472117,-6.980678,4.358103,2.305529,-5.972561,1.752389,7.574414,-7.843347,-0.176730,-2.783292,-5.540593,0.706338,-5.543817,-1.836839,-5.151209,8.649082,4.308847,-1.496954,-4.725225,5.839261,4.353792,-1.401287,0.309151,6.504939,8.030337,-4.529844,6.131378,-5.826273,-9.494107,-6.829178,6.667365,5.799531,-0.284160,3.059218,0.233924,6.560499,6.318020,7.082719,4.533416,6.775214,-4.890139,-9.229813,0.372839,3.772934,8.317220,9.358317,-9.622670,1.893841,-9.501240,9.568108,-8.139455,-4.496433,-2.915796,-7.270345,-1.506090,-4.249665,1.296112,-8.146739,0.876199,6.103291,-3.600124,1.900411,2.178771,1.758087,7.733482,0.764598,2.241204,9.246750,-6.534401,1.106562,3.574718,9.812161,-4.518521,-3.310049,-2.595979,-3.138932,-4.225419,7.256100,3.344441,1.471089,9.498057,-3.750965,-3.517332,-8.502606,0.875194,-3.697042,0.098675,-0.580749,5.300231,2.083908,-3.282866,-9.483495,5.371653,-1.719264,-9.752356,4.766890,-5.423540,5.907886,7.339350,7.387828,9.751548,-3.893974,-9.233433,3.106261,8.386537,5.955993,-0.390347,-0.699141,4.365917,-2.013882,-6.945202,5.630173,9.001022,5.023677,-0.032628,-5.755311,-7.436848,-9.261416,6.144285,8.941456,-1.819080,-9.621300,-0.466945,-9.122943,2.826819,-4.136335,-9.578455,-8.565315,-5.281051,-5.726031,9.311934,-8.270020,6.797781,-5.515115,-5.186214,1.632915,-4.704483,-4.091575,-5.849672,-9.443023,7.935725,5.423206,-1.188254,-1.308721,-5.590317,7.574633,7.673569,9.008430,-6.828947,5.321342,8.955057,4.865365,-4.891274,4.080125,-4.833922,-0.328316,-6.858987,6.777995,4.260418,1.564660,-3.559768,8.389594,-5.473853,2.162480,-8.141767,-8.129852,4.982227,8.080933,1.881607,6.991816,-0.597704,0.690978,5.201374,2.375884,-1.198826,-6.330605,2.130112,-8.154524,2.115264,-9.655872,-2.006813,6.039753,-8.534448,3.145910,4.032575,3.297334,-4.370269,-1.177068,6.379411,1.882166,-4.967828,3.002963,6.343929,-8.731323,5.716447,5.980992,5.583056,9.256744,2.598589,8.195502,2.008677,8.092493,6.539650,-3.344802,5.098402,4.849219,1.937915,-7.600807,-8.987067,6.839855,5.263202,-6.677847,-9.112415,7.799011,-1.304297,-2.814827,8.780895,-4.199100,-7.729230,-2.791302,-6.479975,1.707777,-9.715807,-5.188165,-2.455348,-8.928779,-3.999523,-8.124710,-8.617421,2.140400,-5.108436,2.102213,0.139348,4.998301,-1.332112,0.042998,6.488799,-3.772566,-2.334758,-2.109079,3.612581,5.484734,8.617484,-7.603260,0.270965,3.767331,7.655329,9.145097,-4.458828,-8.599629,-2.617636,6.038345,4.100642,6.769042,-7.805507,-2.292009,-1.330653,-6.848715,-1.667845,-1.884242,-4.608749,5.276692,-0.670365,-2.270307,6.265708,2.595773,-3.774875,9.194340,-5.589664,-9.418133,5.116322,-1.476214,-1.291804,7.290953,0.308128,-2.145161,9.122316,-3.148430,-8.020780,-6.553903,1.279112,-0.949202,-7.171524,3.107213,-6.152255,-4.132325,6.656429,-5.833377,1.921943,-5.701345,6.543599,-0.586784,-0.360237,-8.901474,4.050006,0.988347,-2.742155,-2.463799,0.396184,5.775937,1.638097,8.997412,3.588079,-0.975242,-0.019940,1.912021,0.260476,-8.634030,-0.216631,7.885271,-3.931687,0.666400,-7.638491,1.892163,7.050641,9.809404,-8.166733,8.161622,-6.311073,-8.881998,-1.749811,-9.965813,7.980526,-3.958597,4.310398,9.261298,-3.229157,-7.410470,5.172429,-8.758727,2.907583,9.704039,8.385627,9.133854,4.912697,-0.934218,9.744795,4.311729,7.151782,4.420851,4.727895,-4.205177,0.839566,-2.129619,7.798531,2.687984,3.501281,-2.720730,-2.297539,-0.765597,-9.865551,5.533251,-1.726524,-4.738377,-8.952798,-2.379342,9.305110,6.171467,-3.731723,4.593391,5.709038,-9.416394,3.697030,5.779411,-6.392600,9.950024,-8.144417,-1.399264,-1.463889,-5.607869,-0.125955,-2.832293,-5.721879,-7.389435,-8.268941,-6.532513,5.797195,-4.701925,2.678438,-6.270133,9.028679,-6.599747,-0.986713,-6.055399,-9.810742,-9.162540,-1.234803,-8.621546,-9.450631,8.068464,-4.664193,-0.484169,-1.950863,-6.725316,-3.373549,7.465846,3.208911,5.812701,-5.483819,-3.900138,5.812310,-0.636821,0.515480,-3.778196,9.533937,-5.962076,7.894860,5.992132,0.054031,3.792595,-1.593933,-9.840840,6.895908,-5.705340,4.706934,-6.904705,8.498924,-3.267188,4.411078,-0.189280,-7.427390,-4.327396,-6.842654,8.701165,9.811433,0.333478,6.248271,5.581644,-1.027764,8.746355,-9.628427,-1.708896,-0.763549,8.676802,8.192986,-7.004316,-3.535131,6.694024,4.540286,8.676412,2.090064,-8.928655,-5.856320,7.127871,6.989969,-2.038068,-8.546027,9.666663,-5.441953,-6.115900,1.849152,6.668410,4.132270,-3.522480,-9.329190,-9.354501,-6.860338,-1.307975,-7.429048,8.465210,-4.125696,-1.405266,-7.691680,5.521562,-5.582236,-1.557669,9.059195,9.173102,-3.738838,8.951395,3.719922,7.373201,-3.763370,-7.719796,4.378194,8.658341,-2.184722,7.469988,8.339953,3.642948,-5.207737,6.251902,9.961372,0.263396,-6.236813,-2.189517,-7.581590,-0.780920,-1.104666,9.881642,-6.006074,4.354623,-2.345380,-8.661459,-0.647337,1.294996,6.857904,-1.135732,-8.340926,4.206262,-4.280247,-4.364228,9.297697,5.470237,-4.657894,8.850699,6.639353,1.323115,4.202147,-0.112052,6.482601,0.673393,-9.197138,1.892603,1.509923,-1.368951,3.037828,-2.214596,2.125834,-0.010865,-9.509732,-5.600995,-5.354881,-7.731859,8.702837,8.123138,-8.616402,-3.004001,-2.133879,3.748072,-7.290637,1.687805,3.844800,-6.627902,-4.776417,-2.375632,-7.188376,-0.771786,-3.190882,7.526886,1.766076,-6.608824,6.029533,1.370423,-8.217651,0.180648,-8.387970,-3.359107,-4.042230,-1.107249,6.227348,1.409290,9.510970,3.776228,-5.790348,-9.260400,9.596341,-3.905220,7.200261,3.036497,-4.596347,-4.560736,1.839384,-6.613880,4.615624,-8.556755,4.105343,-6.336366,-9.591267,-2.128207,-3.157884,-4.341354,8.127703,-8.887067,-9.267891,4.746509,-0.356203,7.792455,-8.412236,7.190825,-0.490578,9.308080,-8.815927,3.126563,1.408863,6.691894,-5.895663,4.689158,-0.338123,-3.914978,5.318118,-1.371433,3.345666,-2.033080,2.952479,0.014794,9.032541,-3.339393,-8.981112,-3.157196,4.723432,-1.558842,-7.263652,-6.059248,7.790888,2.555851,-4.762975,2.163721,-5.905010,2.687443,2.874981,3.532340,1.990293,-0.305239,0.883979,1.171758,1.411802,-6.662038,-6.648841,-8.579441,9.734404,-1.164113,5.427469,3.821019,8.139857,-7.102374,0.910617,-8.274491,1.623460,0.621750,2.496194,9.637439,-8.689869,-3.515749,-3.461513,-0.859413,6.166024,7.040988,-3.213123,-8.527037,-7.283444,0.039504,-9.344977,-9.561566,-4.252278,9.168877,3.761388,-9.504135,-7.827584,-9.703022,-9.733592,5.004408,9.344379,-6.173683,9.116786,-4.030706,8.700811,-4.827501,6.004719,9.864080,-7.845126,8.011279,-3.195408,7.502316,6.564871,7.772122,-9.972703,7.684462,-3.006958,-6.195705,-9.917873,4.632973,-1.014433,5.676434,-9.183182,3.617938,8.075529,-5.064545,9.584412,9.669985,1.780685,-5.036303,8.864425,-6.372511,9.316987,9.352088,2.947465,-2.380354,-3.464742,2.009887,-1.585988,9.223127,0.611802,4.914019,4.744223,5.620682,-4.997751,5.260025,1.319405,9.433849,-0.147267,-4.458257,6.768774,3.486758,5.292278,-5.145611,0.356432,1.510338,-4.985079,6.227199,1.230308,-9.455594,-6.721976,2.198357,6.195926,2.487712,-6.842809,2.686815,-6.228558,6.056262,9.987526,7.336928,-3.798442,-4.772934,-9.403841,-3.187626,-9.159671,6.710662,-5.084398,5.980113,3.769985,1.942896,-2.637341,4.030778,4.405639,-9.186751,-6.398268,-2.463677,4.908005,3.296403,-2.141596,8.284389,2.116837,-9.759897,-8.915731,2.400466,-0.286707,6.178718,-7.335456,8.611847,3.729315,-3.743534,0.438737,-3.075180,8.680819,-9.393268,-1.727275,8.502056,-1.105148,8.719772,1.849982,-8.466589,-2.658810,-3.007215,-3.926582,-3.443994,-5.613083,-7.393004,3.587722,-8.931233,-9.001478,5.073651,-7.606477,-4.471597,-0.608409,8.355386,3.833568,7.684686,3.532513,-5.496224,5.877629,-7.837665,0.328419,5.783372,0.316338,-1.308811,5.401304,-5.332514,-2.921261,-7.434733,2.978623,-2.754375,-1.136194,-2.888892,9.606708,8.667793,6.327727,-7.575287,-9.191486,-9.610713,0.865407,-3.630400,-6.237147,0.457432,1.231293,7.283672,5.709891,7.305205,7.722311,-3.212127,-7.107568,4.081395,4.749007,1.583823,4.330681,1.594664,-7.364789,1.449620,6.590041,3.942630,6.943712,2.415152,-9.664597,-5.758503,-1.006314,-7.737348,-1.819714,-2.032975,-9.483304,-9.987543,0.004537,-1.314016,9.757061,-8.623428,-1.449443,4.639618,-2.751708,9.057970,-4.250803,-9.100835,-6.898798,7.590088,-7.968055,-1.999133,5.249467,0.642242,-4.506942,-6.564535,2.239843,-9.478765,-8.686009,1.198102,-7.696963,0.883711,-8.670758,9.296410,0.770115,-8.285804,3.589853,-7.891803,0.205770,4.328681,2.923549,8.775994,0.942081,5.249689,8.457180,-8.719107,6.592148,-9.530589,-6.449395,-1.474512,2.529283,4.809478,6.594309,4.933961,6.493740,-7.400695,4.774674,-7.841001,-4.249322,-9.442285,-0.948218,2.537044,6.779359,-1.094703,-9.890642,3.149081,0.142662,-0.786207,-7.716029,1.732475,-7.618292,-1.796013,7.637983,-2.731958,-4.992991,8.987739,-0.786552,-0.939806,3.001933,4.650178,8.521914,0.627845,6.410327,7.984473,6.114996,-2.385301,3.990258,3.347472,1.510112,-3.392949,2.806785,-0.124628,-3.029654,6.397747,9.546627,5.356711,5.204639,1.183700,-3.412155,-8.436336,1.638567,-4.874238,4.816169,7.068400,6.586681,8.023842,-8.214893,-5.527364,-5.935447,-3.025484,-9.028297,0.079713,-8.944854,9.332330,8.930083,-3.778028,-6.370354,9.883007,2.881195,-3.698272,-3.667040,3.470044,8.687905,-9.394922,7.686681,-1.870791,-0.470828,3.179174,-0.139253,-8.933774,-9.171942,4.783080,6.093468,-8.131194,9.039978,2.888145,-4.509195,-5.819129,3.249468,-8.670407,5.602475,-8.922484,-1.112076,-5.819132,-2.353567,-1.779216,-4.898266,2.395659,3.597852,-3.138702,-9.395326,-3.741749,-1.763302,5.908203,8.492913,-9.799764]], dtype = "float32")#candidate|7559|(1, 1053)|const|float32
call_7558 = relay.TupleGetItem(func_4604_call(relay.reshape(const_7559.astype('float32'), [1053,])), 4)
call_7560 = relay.TupleGetItem(func_4606_call(relay.reshape(const_7559.astype('float32'), [1053,])), 4)
output = relay.Tuple([call_7499,bop_7546,uop_7554,call_7558,const_7559,])
output2 = relay.Tuple([call_7500,bop_7549,uop_7556,call_7560,const_7559,])
func_7563 = relay.Function([], output)
mod['func_7563'] = func_7563
mod = relay.transform.InferType()(mod)
output = func_7563()
func_7564 = relay.Function([], output)
mutated_mod['func_7564'] = func_7564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5904_call = mod.get_global_var('func_5904')
func_5906_call = mutated_mod.get_global_var('func_5906')
call_7620 = relay.TupleGetItem(func_5904_call(), 3)
call_7621 = relay.TupleGetItem(func_5906_call(), 3)
func_2582_call = mod.get_global_var('func_2582')
func_2585_call = mutated_mod.get_global_var('func_2585')
var_7635 = relay.var("var_7635", dtype = "float32", shape = (1053,))#candidate|7635|(1053,)|var|float32
call_7634 = relay.TupleGetItem(func_2582_call(relay.reshape(var_7635.astype('float32'), [351, 3])), 4)
call_7636 = relay.TupleGetItem(func_2585_call(relay.reshape(var_7635.astype('float32'), [351, 3])), 4)
output = relay.Tuple([call_7620,call_7634,var_7635,])
output2 = relay.Tuple([call_7621,call_7636,var_7635,])
func_7637 = relay.Function([var_7635,], output)
mod['func_7637'] = func_7637
mod = relay.transform.InferType()(mod)
mutated_mod['func_7637'] = func_7637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7638 = relay.var("var_7638", dtype = "float32", shape = (1053,))#candidate|7638|(1053,)|var|float32
func_7637_call = mutated_mod.get_global_var('func_7637')
call_7639 = func_7637_call(var_7638)
output = call_7639
func_7640 = relay.Function([var_7638], output)
mutated_mod['func_7640'] = func_7640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_768_call = mod.get_global_var('func_768')
func_769_call = mutated_mod.get_global_var('func_769')
call_7683 = relay.TupleGetItem(func_768_call(), 1)
call_7684 = relay.TupleGetItem(func_769_call(), 1)
output = relay.Tuple([call_7683,])
output2 = relay.Tuple([call_7684,])
func_7689 = relay.Function([], output)
mod['func_7689'] = func_7689
mod = relay.transform.InferType()(mod)
mutated_mod['func_7689'] = func_7689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7689_call = mutated_mod.get_global_var('func_7689')
call_7690 = func_7689_call()
output = call_7690
func_7691 = relay.Function([], output)
mutated_mod['func_7691'] = func_7691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
call_7742 = relay.TupleGetItem(func_1409_call(), 0)
call_7743 = relay.TupleGetItem(func_1411_call(), 0)
output = call_7742
output2 = call_7743
func_7745 = relay.Function([], output)
mod['func_7745'] = func_7745
mod = relay.transform.InferType()(mod)
output = func_7745()
func_7746 = relay.Function([], output)
mutated_mod['func_7746'] = func_7746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4257_call = mod.get_global_var('func_4257')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_7752 = relay.TupleGetItem(func_4257_call(), 9)
call_7753 = relay.TupleGetItem(func_4259_call(), 9)
output = call_7752
output2 = call_7753
func_7777 = relay.Function([], output)
mod['func_7777'] = func_7777
mod = relay.transform.InferType()(mod)
output = func_7777()
func_7778 = relay.Function([], output)
mutated_mod['func_7778'] = func_7778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_7887 = relay.TupleGetItem(func_2738_call(), 0)
call_7888 = relay.TupleGetItem(func_2740_call(), 0)
func_6135_call = mod.get_global_var('func_6135')
func_6136_call = mutated_mod.get_global_var('func_6136')
call_7889 = relay.TupleGetItem(func_6135_call(), 0)
call_7890 = relay.TupleGetItem(func_6136_call(), 0)
func_5836_call = mod.get_global_var('func_5836')
func_5838_call = mutated_mod.get_global_var('func_5838')
call_7910 = relay.TupleGetItem(func_5836_call(), 1)
call_7911 = relay.TupleGetItem(func_5838_call(), 1)
func_3329_call = mod.get_global_var('func_3329')
func_3331_call = mutated_mod.get_global_var('func_3331')
call_7933 = relay.TupleGetItem(func_3329_call(), 0)
call_7934 = relay.TupleGetItem(func_3331_call(), 0)
output = relay.Tuple([call_7887,call_7889,call_7910,call_7933,])
output2 = relay.Tuple([call_7888,call_7890,call_7911,call_7934,])
func_7941 = relay.Function([], output)
mod['func_7941'] = func_7941
mod = relay.transform.InferType()(mod)
output = func_7941()
func_7942 = relay.Function([], output)
mutated_mod['func_7942'] = func_7942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1835_call = mod.get_global_var('func_1835')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_7952 = relay.TupleGetItem(func_1835_call(), 1)
call_7953 = relay.TupleGetItem(func_1837_call(), 1)
func_377_call = mod.get_global_var('func_377')
func_378_call = mutated_mod.get_global_var('func_378')
call_7962 = relay.TupleGetItem(func_377_call(), 0)
call_7963 = relay.TupleGetItem(func_378_call(), 0)
func_1894_call = mod.get_global_var('func_1894')
func_1895_call = mutated_mod.get_global_var('func_1895')
call_7965 = func_1894_call()
call_7966 = func_1894_call()
func_7100_call = mod.get_global_var('func_7100')
func_7104_call = mutated_mod.get_global_var('func_7104')
const_7984 = relay.const([False,False,True,False,True,False,False,False,True,False,False,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,True,True,False], dtype = "bool")#candidate|7984|(280,)|const|bool
call_7983 = relay.TupleGetItem(func_7100_call(relay.reshape(const_7984.astype('bool'), [4, 5, 14]), relay.reshape(const_7984.astype('bool'), [4, 5, 14]), ), 0)
call_7985 = relay.TupleGetItem(func_7104_call(relay.reshape(const_7984.astype('bool'), [4, 5, 14]), relay.reshape(const_7984.astype('bool'), [4, 5, 14]), ), 0)
output = relay.Tuple([call_7952,call_7962,call_7965,call_7983,const_7984,])
output2 = relay.Tuple([call_7953,call_7963,call_7966,call_7985,const_7984,])
func_7990 = relay.Function([], output)
mod['func_7990'] = func_7990
mod = relay.transform.InferType()(mod)
output = func_7990()
func_7991 = relay.Function([], output)
mutated_mod['func_7991'] = func_7991
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8003 = relay.var("var_8003", dtype = "int8", shape = (3, 2, 5))#candidate|8003|(3, 2, 5)|var|int8
var_8004 = relay.var("var_8004", dtype = "int8", shape = (3, 2, 5))#candidate|8004|(3, 2, 5)|var|int8
bop_8005 = relay.add(var_8003.astype('int8'), relay.reshape(var_8004.astype('int8'), relay.shape_of(var_8003))) # shape=(3, 2, 5)
output = relay.Tuple([bop_8005,])
output2 = relay.Tuple([bop_8005,])
func_8014 = relay.Function([var_8003,var_8004,], output)
mod['func_8014'] = func_8014
mod = relay.transform.InferType()(mod)
var_8015 = relay.var("var_8015", dtype = "int8", shape = (3, 2, 5))#candidate|8015|(3, 2, 5)|var|int8
var_8016 = relay.var("var_8016", dtype = "int8", shape = (3, 2, 5))#candidate|8016|(3, 2, 5)|var|int8
output = func_8014(var_8015,var_8016,)
func_8017 = relay.Function([var_8015,var_8016,], output)
mutated_mod['func_8017'] = func_8017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7689_call = mod.get_global_var('func_7689')
func_7691_call = mutated_mod.get_global_var('func_7691')
call_8019 = relay.TupleGetItem(func_7689_call(), 0)
call_8020 = relay.TupleGetItem(func_7691_call(), 0)
output = call_8019
output2 = call_8020
func_8046 = relay.Function([], output)
mod['func_8046'] = func_8046
mod = relay.transform.InferType()(mod)
mutated_mod['func_8046'] = func_8046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8046_call = mutated_mod.get_global_var('func_8046')
call_8047 = func_8046_call()
output = call_8047
func_8048 = relay.Function([], output)
mutated_mod['func_8048'] = func_8048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7267_call = mod.get_global_var('func_7267')
func_7269_call = mutated_mod.get_global_var('func_7269')
call_8049 = func_7267_call()
call_8050 = func_7267_call()
output = relay.Tuple([call_8049,])
output2 = relay.Tuple([call_8050,])
func_8051 = relay.Function([], output)
mod['func_8051'] = func_8051
mod = relay.transform.InferType()(mod)
mutated_mod['func_8051'] = func_8051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8051_call = mutated_mod.get_global_var('func_8051')
call_8052 = func_8051_call()
output = call_8052
func_8053 = relay.Function([], output)
mutated_mod['func_8053'] = func_8053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5786_call = mod.get_global_var('func_5786')
func_5788_call = mutated_mod.get_global_var('func_5788')
call_8088 = relay.TupleGetItem(func_5786_call(), 1)
call_8089 = relay.TupleGetItem(func_5788_call(), 1)
func_1536_call = mod.get_global_var('func_1536')
func_1539_call = mutated_mod.get_global_var('func_1539')
call_8093 = relay.TupleGetItem(func_1536_call(relay.reshape(call_8088.astype('float32'), [165,])), 1)
call_8094 = relay.TupleGetItem(func_1539_call(relay.reshape(call_8088.astype('float32'), [165,])), 1)
func_6627_call = mod.get_global_var('func_6627')
func_6630_call = mutated_mod.get_global_var('func_6630')
const_8096 = relay.const([9.239110,-1.375921,9.477597,6.511763,5.060182,-3.349553,-0.070570,1.539719,-8.962850,-9.348804,8.823921,-3.349280,7.607489,8.387742,-6.293373,7.252798,9.668877,-5.557447,-1.811986,3.032716,4.890586,0.515946,1.347564,5.387637,-8.009561,8.665434,8.259003,4.739585,0.189160,0.231406,6.696630,-6.758605,8.757364,8.216684,-7.513041,2.714779,7.564715,8.286500,-3.423855,-4.617692,-1.969889,-7.956894,4.655673,-2.889071,3.713882,-3.253186,1.800385,4.111200,6.927430,-5.886532,5.433195,0.783632,-5.015987,-5.383410,3.580138,-4.863208,-8.638960,-5.212192,-3.127376,-4.771352,-8.579381,-6.788808,0.669505], dtype = "float32")#candidate|8096|(63,)|const|float32
call_8095 = relay.TupleGetItem(func_6627_call(relay.reshape(const_8096.astype('float32'), [63,])), 1)
call_8097 = relay.TupleGetItem(func_6630_call(relay.reshape(const_8096.astype('float32'), [63,])), 1)
func_5323_call = mod.get_global_var('func_5323')
func_5324_call = mutated_mod.get_global_var('func_5324')
call_8099 = func_5323_call()
call_8100 = func_5323_call()
func_2413_call = mod.get_global_var('func_2413')
func_2415_call = mutated_mod.get_global_var('func_2415')
call_8107 = relay.TupleGetItem(func_2413_call(relay.reshape(call_8088.astype('float32'), [165,])), 0)
call_8108 = relay.TupleGetItem(func_2415_call(relay.reshape(call_8088.astype('float32'), [165,])), 0)
func_3529_call = mod.get_global_var('func_3529')
func_3530_call = mutated_mod.get_global_var('func_3530')
call_8137 = func_3529_call()
call_8138 = func_3529_call()
output = relay.Tuple([call_8088,call_8093,call_8095,const_8096,call_8099,call_8107,call_8137,])
output2 = relay.Tuple([call_8089,call_8094,call_8097,const_8096,call_8100,call_8108,call_8138,])
func_8143 = relay.Function([], output)
mod['func_8143'] = func_8143
mod = relay.transform.InferType()(mod)
mutated_mod['func_8143'] = func_8143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8143_call = mutated_mod.get_global_var('func_8143')
call_8144 = func_8143_call()
output = call_8144
func_8145 = relay.Function([], output)
mutated_mod['func_8145'] = func_8145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8157 = relay.var("var_8157", dtype = "float32", shape = (7, 3, 6))#candidate|8157|(7, 3, 6)|var|float32
var_8158 = relay.var("var_8158", dtype = "float32", shape = (7, 3, 6))#candidate|8158|(7, 3, 6)|var|float32
bop_8159 = relay.add(var_8157.astype('float32'), relay.reshape(var_8158.astype('float32'), relay.shape_of(var_8157))) # shape=(7, 3, 6)
output = relay.Tuple([bop_8159,])
output2 = relay.Tuple([bop_8159,])
func_8170 = relay.Function([var_8157,var_8158,], output)
mod['func_8170'] = func_8170
mod = relay.transform.InferType()(mod)
mutated_mod['func_8170'] = func_8170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8170_call = mutated_mod.get_global_var('func_8170')
var_8172 = relay.var("var_8172", dtype = "float32", shape = (7, 3, 6))#candidate|8172|(7, 3, 6)|var|float32
var_8173 = relay.var("var_8173", dtype = "float32", shape = (7, 3, 6))#candidate|8173|(7, 3, 6)|var|float32
call_8171 = func_8170_call(var_8172,var_8173,)
output = call_8171
func_8174 = relay.Function([var_8172,var_8173,], output)
mutated_mod['func_8174'] = func_8174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8143_call = mod.get_global_var('func_8143')
func_8145_call = mutated_mod.get_global_var('func_8145')
call_8194 = relay.TupleGetItem(func_8143_call(), 5)
call_8195 = relay.TupleGetItem(func_8145_call(), 5)
func_1137_call = mod.get_global_var('func_1137')
func_1138_call = mutated_mod.get_global_var('func_1138')
call_8196 = relay.TupleGetItem(func_1137_call(), 0)
call_8197 = relay.TupleGetItem(func_1138_call(), 0)
func_6469_call = mod.get_global_var('func_6469')
func_6471_call = mutated_mod.get_global_var('func_6471')
call_8200 = func_6469_call()
call_8201 = func_6469_call()
func_8014_call = mod.get_global_var('func_8014')
func_8017_call = mutated_mod.get_global_var('func_8017')
const_8231 = relay.const([[-5],[9],[-3],[5],[-2],[4],[1],[1],[9],[-4],[-5],[-10],[-4],[1],[-2],[8],[-5],[7],[4],[5],[-7],[9],[-7],[2],[6],[-2],[6],[-2],[-6],[-4]], dtype = "int8")#candidate|8231|(30, 1)|const|int8
call_8230 = relay.TupleGetItem(func_8014_call(relay.reshape(const_8231.astype('int8'), [3, 2, 5]), relay.reshape(const_8231.astype('int8'), [3, 2, 5]), ), 0)
call_8232 = relay.TupleGetItem(func_8017_call(relay.reshape(const_8231.astype('int8'), [3, 2, 5]), relay.reshape(const_8231.astype('int8'), [3, 2, 5]), ), 0)
bop_8240 = relay.equal(call_8196.astype('bool'), const_8231.astype('bool')) # shape=(30, 165)
bop_8243 = relay.equal(call_8197.astype('bool'), const_8231.astype('bool')) # shape=(30, 165)
func_7407_call = mod.get_global_var('func_7407')
func_7408_call = mutated_mod.get_global_var('func_7408')
call_8254 = relay.TupleGetItem(func_7407_call(), 0)
call_8255 = relay.TupleGetItem(func_7408_call(), 0)
output = relay.Tuple([call_8194,call_8200,call_8230,bop_8240,call_8254,])
output2 = relay.Tuple([call_8195,call_8201,call_8232,bop_8243,call_8255,])
func_8284 = relay.Function([], output)
mod['func_8284'] = func_8284
mod = relay.transform.InferType()(mod)
output = func_8284()
func_8285 = relay.Function([], output)
mutated_mod['func_8285'] = func_8285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6710_call = mod.get_global_var('func_6710')
func_6711_call = mutated_mod.get_global_var('func_6711')
call_8318 = relay.TupleGetItem(func_6710_call(), 2)
call_8319 = relay.TupleGetItem(func_6711_call(), 2)
output = call_8318
output2 = call_8319
func_8324 = relay.Function([], output)
mod['func_8324'] = func_8324
mod = relay.transform.InferType()(mod)
mutated_mod['func_8324'] = func_8324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8324_call = mutated_mod.get_global_var('func_8324')
call_8325 = func_8324_call()
output = call_8325
func_8326 = relay.Function([], output)
mutated_mod['func_8326'] = func_8326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6856_call = mod.get_global_var('func_6856')
func_6858_call = mutated_mod.get_global_var('func_6858')
call_8347 = func_6856_call()
call_8348 = func_6856_call()
func_8284_call = mod.get_global_var('func_8284')
func_8285_call = mutated_mod.get_global_var('func_8285')
call_8349 = relay.TupleGetItem(func_8284_call(), 4)
call_8350 = relay.TupleGetItem(func_8285_call(), 4)
output = relay.Tuple([call_8347,call_8349,])
output2 = relay.Tuple([call_8348,call_8350,])
func_8351 = relay.Function([], output)
mod['func_8351'] = func_8351
mod = relay.transform.InferType()(mod)
output = func_8351()
func_8352 = relay.Function([], output)
mutated_mod['func_8352'] = func_8352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5288_call = mod.get_global_var('func_5288')
func_5290_call = mutated_mod.get_global_var('func_5290')
call_8357 = relay.TupleGetItem(func_5288_call(), 0)
call_8358 = relay.TupleGetItem(func_5290_call(), 0)
func_768_call = mod.get_global_var('func_768')
func_769_call = mutated_mod.get_global_var('func_769')
call_8369 = relay.TupleGetItem(func_768_call(), 1)
call_8370 = relay.TupleGetItem(func_769_call(), 1)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_8382 = relay.TupleGetItem(func_2971_call(relay.reshape(call_8369.astype('float32'), [165,])), 1)
call_8383 = relay.TupleGetItem(func_2973_call(relay.reshape(call_8369.astype('float32'), [165,])), 1)
func_922_call = mod.get_global_var('func_922')
func_923_call = mutated_mod.get_global_var('func_923')
call_8386 = relay.TupleGetItem(func_922_call(), 0)
call_8387 = relay.TupleGetItem(func_923_call(), 0)
output = relay.Tuple([call_8357,call_8369,call_8382,call_8386,])
output2 = relay.Tuple([call_8358,call_8370,call_8383,call_8387,])
func_8389 = relay.Function([], output)
mod['func_8389'] = func_8389
mod = relay.transform.InferType()(mod)
mutated_mod['func_8389'] = func_8389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8389_call = mutated_mod.get_global_var('func_8389')
call_8390 = func_8389_call()
output = call_8390
func_8391 = relay.Function([], output)
mutated_mod['func_8391'] = func_8391
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8403 = relay.const([[[-8.912944,-5.340513,-9.359303,-3.513216,9.245062],[-9.198378,0.125185,9.361933,-0.830480,-3.547418],[-9.318006,2.950923,4.529558,4.663702,8.765632],[-4.710896,1.840375,-7.131638,-1.208134,3.074375],[0.781907,-7.366167,-0.614649,4.011699,5.985224],[-6.545506,-2.418243,-5.464574,2.510763,8.463263],[-9.354567,-7.419460,-0.277288,6.477273,4.805799],[9.064484,8.192086,0.966828,8.280348,-9.965074],[4.737733,-6.220979,-6.344958,5.374847,-4.303781],[3.821030,-9.953087,8.161599,-8.914018,2.521658],[2.456674,-6.084897,8.534671,-5.494055,-8.924865]],[[8.853851,-0.908478,-2.695233,-8.710086,-3.288232],[-2.287284,-4.589032,9.107292,8.532801,-3.654741],[-6.282593,7.408429,-5.207563,-4.323962,-6.439580],[-3.013814,-1.232624,2.889683,1.823289,8.659174],[8.517434,7.319674,-8.392394,1.139111,3.242196],[0.327305,1.184880,-5.995789,4.736121,2.740763],[-3.788641,8.806999,-1.419971,7.703244,4.702943],[8.370763,-6.397255,-8.860290,9.037487,-9.641333],[1.060691,-5.963900,4.297909,0.227392,-1.504513],[-6.391951,-1.917421,6.111348,-3.072553,-3.978091],[9.287101,-1.362139,4.839959,4.172662,-9.336923]],[[9.469560,5.951618,7.833088,-8.156984,0.881575],[1.317346,9.840713,0.978395,-3.636734,7.282686],[5.981796,-4.779332,-2.210643,-9.147631,-3.772504],[-7.083438,4.450282,-3.011336,-0.976060,9.435509],[2.912341,2.511937,-4.518484,4.800983,-5.201064],[3.732367,-5.406295,-3.566417,8.325803,-9.001776],[3.370355,2.580383,-8.432780,9.419752,1.522554],[-9.207771,0.509492,4.204112,-7.008729,-9.491447],[-0.257097,1.306445,2.202627,3.204545,-5.018339],[9.961745,-6.385484,-8.967912,-7.356466,3.535145],[-6.054508,-2.032328,4.919579,8.257822,-6.787520]]], dtype = "float64")#candidate|8403|(3, 11, 5)|const|float64
uop_8404 = relay.acos(const_8403.astype('float64')) # shape=(3, 11, 5)
output = uop_8404
output2 = uop_8404
func_8407 = relay.Function([], output)
mod['func_8407'] = func_8407
mod = relay.transform.InferType()(mod)
mutated_mod['func_8407'] = func_8407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8407_call = mutated_mod.get_global_var('func_8407')
call_8408 = func_8407_call()
output = call_8408
func_8409 = relay.Function([], output)
mutated_mod['func_8409'] = func_8409
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8412 = relay.var("var_8412", dtype = "float32", shape = (7, 5, 11))#candidate|8412|(7, 5, 11)|var|float32
uop_8413 = relay.exp(var_8412.astype('float32')) # shape=(7, 5, 11)
uop_8421 = relay.sinh(uop_8413.astype('float64')) # shape=(7, 5, 11)
func_1536_call = mod.get_global_var('func_1536')
func_1539_call = mutated_mod.get_global_var('func_1539')
const_8426 = relay.const([[-3.327677,-0.524963,1.188771,4.931693,-5.418786],[-3.267613,-4.223495,4.821101,4.687440,0.108218],[-8.899215,7.768983,-0.352081,4.262649,-9.229424],[-9.306588,4.138263,0.990174,9.537911,7.350977],[8.610734,-9.253502,-2.029326,-2.384717,3.075910],[-6.751873,-7.642126,-9.048036,-8.565464,6.646476],[-8.254894,2.240382,9.406279,-6.569800,3.076380],[-5.312968,-6.711716,-4.943212,-5.745752,-7.397969],[5.233871,-7.485207,1.967968,-6.511671,-8.832571],[-1.732825,7.206337,-7.739974,-6.274089,-0.362859],[0.017052,1.609911,5.693637,-7.971337,-2.371666],[2.681279,9.285918,5.758121,-5.663352,-7.622722],[-1.538240,-2.250722,-7.574672,-5.817017,2.827662],[-3.168327,7.186830,-6.355246,-3.512547,9.343582],[-5.916355,-3.970866,-7.723179,-0.033489,2.266460],[0.480292,7.849942,7.243430,6.377193,-1.835476],[-4.982804,2.057327,-2.705607,2.181264,-7.791955],[-5.317925,8.027008,7.450891,-1.150944,6.666508],[-6.886276,4.867850,-8.510846,-0.048313,-1.246237],[-1.963949,5.461968,2.624741,-8.258585,-9.911222],[6.425998,4.645334,5.670580,-0.989065,-5.272866],[9.552392,-3.871446,-2.219677,-7.467510,-0.896485],[2.685474,8.178059,-7.128345,6.064332,4.485958],[-7.949194,-2.997941,-3.878824,-8.754278,3.494988],[-8.193067,5.224470,-2.962044,4.243851,-7.212836],[8.528865,-4.151397,8.183138,7.821395,3.873970],[-6.405723,2.662312,9.593249,8.414941,-2.815091],[-6.148180,8.622456,-5.994697,7.173209,-3.772744],[3.623435,-3.697278,4.837978,7.035448,-1.017621],[5.315826,-9.422236,8.941204,-0.558412,8.920628],[0.846114,6.616214,7.715763,-5.566038,5.002550],[8.124233,3.977943,9.067990,7.111635,1.099362],[0.567724,-3.072206,-6.500756,-6.134817,-7.041496]], dtype = "float32")#candidate|8426|(33, 5)|const|float32
call_8425 = relay.TupleGetItem(func_1536_call(relay.reshape(const_8426.astype('float32'), [165,])), 1)
call_8427 = relay.TupleGetItem(func_1539_call(relay.reshape(const_8426.astype('float32'), [165,])), 1)
uop_8439 = relay.log10(uop_8413.astype('float32')) # shape=(7, 5, 11)
bop_8454 = relay.less_equal(uop_8421.astype('bool'), relay.reshape(uop_8439.astype('bool'), relay.shape_of(uop_8421))) # shape=(7, 5, 11)
func_5724_call = mod.get_global_var('func_5724')
func_5726_call = mutated_mod.get_global_var('func_5726')
call_8458 = func_5724_call()
call_8459 = func_5724_call()
output = relay.Tuple([call_8425,const_8426,bop_8454,call_8458,])
output2 = relay.Tuple([call_8427,const_8426,bop_8454,call_8459,])
func_8468 = relay.Function([var_8412,], output)
mod['func_8468'] = func_8468
mod = relay.transform.InferType()(mod)
var_8469 = relay.var("var_8469", dtype = "float32", shape = (7, 5, 11))#candidate|8469|(7, 5, 11)|var|float32
output = func_8468(var_8469)
func_8470 = relay.Function([var_8469], output)
mutated_mod['func_8470'] = func_8470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6317_call = mod.get_global_var('func_6317')
func_6319_call = mutated_mod.get_global_var('func_6319')
call_8475 = relay.TupleGetItem(func_6317_call(), 0)
call_8476 = relay.TupleGetItem(func_6319_call(), 0)
func_6135_call = mod.get_global_var('func_6135')
func_6136_call = mutated_mod.get_global_var('func_6136')
call_8485 = relay.TupleGetItem(func_6135_call(), 3)
call_8486 = relay.TupleGetItem(func_6136_call(), 3)
uop_8487 = relay.sigmoid(call_8485.astype('float32')) # shape=(5, 11, 3)
uop_8489 = relay.sigmoid(call_8486.astype('float32')) # shape=(5, 11, 3)
output = relay.Tuple([call_8475,uop_8487,])
output2 = relay.Tuple([call_8476,uop_8489,])
func_8501 = relay.Function([], output)
mod['func_8501'] = func_8501
mod = relay.transform.InferType()(mod)
output = func_8501()
func_8502 = relay.Function([], output)
mutated_mod['func_8502'] = func_8502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3743_call = mod.get_global_var('func_3743')
func_3745_call = mutated_mod.get_global_var('func_3745')
call_8542 = func_3743_call()
call_8543 = func_3743_call()
output = relay.Tuple([call_8542,])
output2 = relay.Tuple([call_8543,])
func_8545 = relay.Function([], output)
mod['func_8545'] = func_8545
mod = relay.transform.InferType()(mod)
output = func_8545()
func_8546 = relay.Function([], output)
mutated_mod['func_8546'] = func_8546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8614 = relay.var("var_8614", dtype = "float64", shape = (16, 5, 7))#candidate|8614|(16, 5, 7)|var|float64
const_8615 = relay.const([[[-2.279731,-6.165882,8.809873,-9.433378,3.089878,-2.077193,2.205404],[1.962526,4.350065,7.501033,-5.791830,0.101225,7.178171,6.352140],[-1.212775,0.907137,5.153280,2.860979,9.762554,-7.830930,-3.277335],[-6.621087,-1.894219,6.744739,-3.351702,4.756573,-3.075098,-3.210133],[0.856406,-0.528843,-4.659739,-7.055930,4.565116,-8.652703,5.317243]],[[1.912223,-2.933004,-4.819689,-2.035470,-2.803110,-8.420158,4.956452],[-4.147625,-6.602110,-8.797470,1.898230,-1.123169,-8.406506,-4.441780],[5.249166,-9.139955,4.399161,-1.659553,3.350663,8.297951,0.422514],[5.228031,-0.090080,-9.002741,4.113916,9.357248,7.267635,9.435062],[7.973836,7.780800,4.513742,8.324657,-0.019419,-2.770336,-9.486441]],[[1.999125,0.297267,2.418828,-0.366133,-6.737933,-3.155196,-9.882052],[-5.454975,0.093387,1.998589,-9.315516,-6.311979,4.531769,6.114667],[-5.029934,1.460177,3.192001,-4.498275,-7.373857,-9.749819,2.596381],[-2.244501,-1.516834,7.515552,-3.939152,-5.808326,5.476059,7.047490],[7.021697,1.307316,-7.469153,5.419090,2.292651,-0.253181,-5.656497]],[[5.905568,0.157698,-7.699345,-3.040083,-6.082868,-9.492357,7.709816],[3.528923,7.683219,5.301064,7.962095,4.083564,8.174118,-2.715358],[5.327840,-3.287136,-6.209958,-7.024186,8.584721,-4.189672,-5.032170],[9.993436,8.787944,-8.398369,7.908762,6.936708,6.878620,-3.303581],[9.823899,1.584134,6.911506,3.173352,9.888648,-8.175858,-1.263681]],[[-3.270747,-0.847480,-8.605569,1.071152,-7.974109,-1.176131,8.960314],[-6.951854,-9.975742,-9.518553,-7.301415,8.893614,-8.302520,-0.540170],[-9.523906,7.634513,0.500756,-9.022434,3.270557,-1.200624,-5.056501],[9.781849,-0.306660,2.576438,-9.610805,-2.651154,-3.134000,-6.312882],[1.015202,5.353549,-9.049812,-0.497714,-4.337805,4.368226,-0.854668]],[[1.404421,0.959274,-5.525059,7.053480,-8.380442,-0.411674,-8.136949],[7.036524,3.404211,2.758196,-9.003234,3.157300,7.451607,0.654299],[-0.251300,-3.308293,-9.133476,-4.423004,-6.183166,2.097364,1.658831],[4.960902,-9.949282,2.185071,2.866738,-7.434228,-3.970402,5.901826],[-7.374160,-5.048425,-1.757859,-5.477264,-0.194752,-1.778291,-5.737267]],[[-6.732932,1.993859,-3.547531,-4.668178,3.413658,-5.350134,8.565453],[8.336147,7.604185,5.507120,-0.844530,-8.672376,-6.458605,-3.575260],[7.654228,-5.547914,-1.539739,-1.786745,3.110442,-2.847781,-6.666977],[5.954451,6.932808,-3.600969,-8.176262,6.738853,-7.732943,3.554410],[-2.829707,5.873752,3.579358,2.705467,8.530135,-7.397735,-3.276174]],[[7.197881,9.189678,-5.423690,1.246851,2.585918,-4.417467,0.392813],[9.913187,-6.916260,-6.899197,1.801736,9.857486,1.531701,-1.701712],[-1.390434,7.233732,-0.084562,-9.900358,2.509394,4.069333,3.295913],[5.763680,-5.825737,2.626489,3.009641,-0.083627,3.723896,3.368221],[-7.565850,-8.190270,6.348111,-5.616904,7.979746,-9.880454,5.183392]],[[1.739658,-5.684138,9.417587,9.548539,9.023766,-7.930187,-9.814946],[3.061979,-0.296608,9.183743,-1.616300,-6.815096,-0.878348,6.117590],[8.625996,6.253269,4.315735,8.721805,-0.534104,-2.167466,5.986047],[-2.851137,-3.922978,-1.734712,9.071577,-0.146529,-8.924006,5.321812],[-7.014502,0.240229,9.176434,-4.304906,-7.994271,5.028910,6.491135]],[[-6.729539,-8.560895,-1.584622,8.478241,8.614219,-1.600225,-1.460448],[3.437804,-6.531493,1.780676,3.061491,-1.487902,7.404734,9.449585],[9.151231,-7.543025,-0.230148,-5.199586,-8.597718,1.739648,5.703377],[9.353949,-5.285953,8.535272,-8.605962,-1.030001,0.790270,2.782183],[-6.991144,1.620567,0.847701,1.228577,-5.853568,-3.842483,4.728388]],[[-1.393170,-4.907400,4.554771,-4.399772,6.839249,0.377557,-6.987630],[-0.815847,2.307093,4.187809,-4.337291,0.087835,-5.258439,-7.027848],[-0.664384,-8.479770,-3.974039,-1.403345,0.305415,-4.443632,5.820990],[-7.453262,-4.689139,5.372322,8.006351,-3.091285,-9.607030,-0.995064],[0.001295,5.072961,-0.511929,-5.003982,-1.250584,-5.923521,-1.694758]],[[-5.250666,-0.057826,3.804876,5.103571,5.671080,9.978086,7.036781],[6.969585,-8.945289,-4.856605,-0.470168,4.537633,4.103754,1.740774],[1.730813,-5.958966,7.625212,1.715530,0.845578,9.443079,8.004504],[-9.635204,-8.618397,-8.846571,-1.794874,8.528667,-4.081996,5.067798],[-8.114697,5.167388,-7.933989,-2.714620,3.498581,9.170885,-0.096987]],[[4.620393,0.179441,-4.041601,1.739531,8.120448,0.915405,-9.355615],[7.806378,6.041059,-6.777125,-4.543710,-1.848018,-1.996416,-2.264679],[-0.582577,-2.925348,-9.874923,0.144284,-4.465757,-3.583356,-0.994324],[-3.681195,6.469876,9.772544,0.310795,0.528658,-6.906413,-9.329935],[2.294083,-8.090541,-3.672707,9.860900,7.896682,2.510171,8.580086]],[[1.780008,-0.726423,-0.970429,4.580026,-5.923539,5.772697,-0.183588],[-3.058927,-7.715748,8.621006,7.316435,-3.447120,3.211363,-7.745790],[1.024569,-1.934500,6.082717,-0.458456,-5.912750,3.313511,-7.190489],[-4.436694,4.279548,-0.163147,6.287813,-2.230075,2.508335,3.814059],[-3.385270,2.581124,-4.501445,-2.444616,-6.775829,6.807090,7.849839]],[[-5.573036,-9.923452,-8.474234,6.450859,6.899040,8.647789,0.813478],[-7.235548,8.057479,-0.864217,-0.478868,-9.929746,8.697890,5.423308],[3.423971,7.830183,7.475796,-1.619525,9.732508,-4.199865,-1.998191],[8.967357,-1.085595,4.654423,-3.154990,-9.761152,-0.750771,-0.246183],[-5.177102,-8.854998,-7.740375,5.671680,7.458678,6.038649,2.287082]],[[-8.800423,1.093490,5.952476,0.949236,1.991410,3.610375,8.652017],[-7.595995,1.326227,8.750159,-3.500312,3.158570,0.539939,-1.456448],[-3.603157,-2.793033,9.566298,-5.833964,9.854567,4.075247,8.272230],[0.406481,-2.245264,-1.315347,-5.545274,-0.736570,7.254457,-8.018042],[-1.124299,-9.113425,-1.528382,7.987678,-0.181194,-9.904215,-4.390391]]], dtype = "float64")#candidate|8615|(16, 5, 7)|const|float64
bop_8616 = relay.floor_divide(var_8614.astype('float64'), relay.reshape(const_8615.astype('float64'), relay.shape_of(var_8614))) # shape=(16, 5, 7)
output = relay.Tuple([bop_8616,])
output2 = relay.Tuple([bop_8616,])
func_8619 = relay.Function([var_8614,], output)
mod['func_8619'] = func_8619
mod = relay.transform.InferType()(mod)
var_8620 = relay.var("var_8620", dtype = "float64", shape = (16, 5, 7))#candidate|8620|(16, 5, 7)|var|float64
output = func_8619(var_8620)
func_8621 = relay.Function([var_8620], output)
mutated_mod['func_8621'] = func_8621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5640_call = mod.get_global_var('func_5640')
func_5641_call = mutated_mod.get_global_var('func_5641')
call_8623 = func_5640_call()
call_8624 = func_5640_call()
func_5288_call = mod.get_global_var('func_5288')
func_5290_call = mutated_mod.get_global_var('func_5290')
call_8646 = relay.TupleGetItem(func_5288_call(), 0)
call_8647 = relay.TupleGetItem(func_5290_call(), 0)
func_8046_call = mod.get_global_var('func_8046')
func_8048_call = mutated_mod.get_global_var('func_8048')
call_8648 = func_8046_call()
call_8649 = func_8046_call()
output = relay.Tuple([call_8623,call_8646,call_8648,])
output2 = relay.Tuple([call_8624,call_8647,call_8649,])
func_8674 = relay.Function([], output)
mod['func_8674'] = func_8674
mod = relay.transform.InferType()(mod)
mutated_mod['func_8674'] = func_8674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8674_call = mutated_mod.get_global_var('func_8674')
call_8675 = func_8674_call()
output = call_8675
func_8676 = relay.Function([], output)
mutated_mod['func_8676'] = func_8676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6419_call = mod.get_global_var('func_6419')
func_6421_call = mutated_mod.get_global_var('func_6421')
call_8677 = relay.TupleGetItem(func_6419_call(), 0)
call_8678 = relay.TupleGetItem(func_6421_call(), 0)
output = relay.Tuple([call_8677,])
output2 = relay.Tuple([call_8678,])
func_8682 = relay.Function([], output)
mod['func_8682'] = func_8682
mod = relay.transform.InferType()(mod)
output = func_8682()
func_8683 = relay.Function([], output)
mutated_mod['func_8683'] = func_8683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_876_call = mod.get_global_var('func_876')
func_877_call = mutated_mod.get_global_var('func_877')
call_8728 = relay.TupleGetItem(func_876_call(), 5)
call_8729 = relay.TupleGetItem(func_877_call(), 5)
output = call_8728
output2 = call_8729
func_8730 = relay.Function([], output)
mod['func_8730'] = func_8730
mod = relay.transform.InferType()(mod)
output = func_8730()
func_8731 = relay.Function([], output)
mutated_mod['func_8731'] = func_8731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6469_call = mod.get_global_var('func_6469')
func_6471_call = mutated_mod.get_global_var('func_6471')
call_8764 = func_6469_call()
call_8765 = func_6469_call()
func_7041_call = mod.get_global_var('func_7041')
func_7043_call = mutated_mod.get_global_var('func_7043')
call_8766 = relay.TupleGetItem(func_7041_call(), 0)
call_8767 = relay.TupleGetItem(func_7043_call(), 0)
output = relay.Tuple([call_8764,call_8766,])
output2 = relay.Tuple([call_8765,call_8767,])
func_8779 = relay.Function([], output)
mod['func_8779'] = func_8779
mod = relay.transform.InferType()(mod)
output = func_8779()
func_8780 = relay.Function([], output)
mutated_mod['func_8780'] = func_8780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3799_call = mod.get_global_var('func_3799')
func_3801_call = mutated_mod.get_global_var('func_3801')
call_8805 = relay.TupleGetItem(func_3799_call(), 0)
call_8806 = relay.TupleGetItem(func_3801_call(), 0)
func_3329_call = mod.get_global_var('func_3329')
func_3331_call = mutated_mod.get_global_var('func_3331')
call_8809 = relay.TupleGetItem(func_3329_call(), 0)
call_8810 = relay.TupleGetItem(func_3331_call(), 0)
output = relay.Tuple([call_8805,call_8809,])
output2 = relay.Tuple([call_8806,call_8810,])
func_8819 = relay.Function([], output)
mod['func_8819'] = func_8819
mod = relay.transform.InferType()(mod)
output = func_8819()
func_8820 = relay.Function([], output)
mutated_mod['func_8820'] = func_8820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2284_call = mod.get_global_var('func_2284')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_8823 = relay.TupleGetItem(func_2284_call(), 1)
call_8824 = relay.TupleGetItem(func_2285_call(), 1)
output = call_8823
output2 = call_8824
func_8852 = relay.Function([], output)
mod['func_8852'] = func_8852
mod = relay.transform.InferType()(mod)
output = func_8852()
func_8853 = relay.Function([], output)
mutated_mod['func_8853'] = func_8853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4275_call = mod.get_global_var('func_4275')
func_4277_call = mutated_mod.get_global_var('func_4277')
call_8885 = relay.TupleGetItem(func_4275_call(), 0)
call_8886 = relay.TupleGetItem(func_4277_call(), 0)
func_2502_call = mod.get_global_var('func_2502')
func_2504_call = mutated_mod.get_global_var('func_2504')
call_8914 = relay.TupleGetItem(func_2502_call(), 0)
call_8915 = relay.TupleGetItem(func_2504_call(), 0)
output = relay.Tuple([call_8885,call_8914,])
output2 = relay.Tuple([call_8886,call_8915,])
func_8974 = relay.Function([], output)
mod['func_8974'] = func_8974
mod = relay.transform.InferType()(mod)
output = func_8974()
func_8975 = relay.Function([], output)
mutated_mod['func_8975'] = func_8975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_876_call = mod.get_global_var('func_876')
func_877_call = mutated_mod.get_global_var('func_877')
call_9011 = relay.TupleGetItem(func_876_call(), 0)
call_9012 = relay.TupleGetItem(func_877_call(), 0)
func_1137_call = mod.get_global_var('func_1137')
func_1138_call = mutated_mod.get_global_var('func_1138')
call_9023 = relay.TupleGetItem(func_1137_call(), 0)
call_9024 = relay.TupleGetItem(func_1138_call(), 0)
func_8730_call = mod.get_global_var('func_8730')
func_8731_call = mutated_mod.get_global_var('func_8731')
call_9041 = func_8730_call()
call_9042 = func_8730_call()
func_7745_call = mod.get_global_var('func_7745')
func_7746_call = mutated_mod.get_global_var('func_7746')
call_9055 = func_7745_call()
call_9056 = func_7745_call()
uop_9084 = relay.erf(call_9011.astype('float64')) # shape=(13, 7, 5)
uop_9086 = relay.erf(call_9012.astype('float64')) # shape=(13, 7, 5)
func_5919_call = mod.get_global_var('func_5919')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_9099 = func_5919_call()
call_9100 = func_5919_call()
output = relay.Tuple([call_9023,call_9041,call_9055,uop_9084,call_9099,])
output2 = relay.Tuple([call_9024,call_9042,call_9056,uop_9086,call_9100,])
func_9112 = relay.Function([], output)
mod['func_9112'] = func_9112
mod = relay.transform.InferType()(mod)
output = func_9112()
func_9113 = relay.Function([], output)
mutated_mod['func_9113'] = func_9113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7025_call = mod.get_global_var('func_7025')
func_7027_call = mutated_mod.get_global_var('func_7027')
call_9131 = relay.TupleGetItem(func_7025_call(), 0)
call_9132 = relay.TupleGetItem(func_7027_call(), 0)
func_922_call = mod.get_global_var('func_922')
func_923_call = mutated_mod.get_global_var('func_923')
call_9134 = relay.TupleGetItem(func_922_call(), 0)
call_9135 = relay.TupleGetItem(func_923_call(), 0)
func_1848_call = mod.get_global_var('func_1848')
func_1849_call = mutated_mod.get_global_var('func_1849')
call_9136 = func_1848_call()
call_9137 = func_1848_call()
output = relay.Tuple([call_9131,call_9134,call_9136,])
output2 = relay.Tuple([call_9132,call_9135,call_9137,])
func_9141 = relay.Function([], output)
mod['func_9141'] = func_9141
mod = relay.transform.InferType()(mod)
output = func_9141()
func_9142 = relay.Function([], output)
mutated_mod['func_9142'] = func_9142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9151 = relay.var("var_9151", dtype = "uint8", shape = (15, 15, 6))#candidate|9151|(15, 15, 6)|var|uint8
var_9152 = relay.var("var_9152", dtype = "uint8", shape = (15, 15, 6))#candidate|9152|(15, 15, 6)|var|uint8
bop_9153 = relay.subtract(var_9151.astype('uint8'), relay.reshape(var_9152.astype('uint8'), relay.shape_of(var_9151))) # shape=(15, 15, 6)
func_3529_call = mod.get_global_var('func_3529')
func_3530_call = mutated_mod.get_global_var('func_3530')
call_9156 = func_3529_call()
call_9157 = func_3529_call()
func_1848_call = mod.get_global_var('func_1848')
func_1849_call = mutated_mod.get_global_var('func_1849')
call_9160 = func_1848_call()
call_9161 = func_1848_call()
func_2798_call = mod.get_global_var('func_2798')
func_2802_call = mutated_mod.get_global_var('func_2802')
var_9183 = relay.var("var_9183", dtype = "int8", shape = (384,))#candidate|9183|(384,)|var|int8
call_9182 = relay.TupleGetItem(func_2798_call(relay.reshape(var_9183.astype('int8'), [8, 16, 3]), relay.reshape(var_9183.astype('int8'), [8, 16, 3]), ), 0)
call_9184 = relay.TupleGetItem(func_2802_call(relay.reshape(var_9183.astype('int8'), [8, 16, 3]), relay.reshape(var_9183.astype('int8'), [8, 16, 3]), ), 0)
output = relay.Tuple([bop_9153,call_9156,call_9160,call_9182,var_9183,])
output2 = relay.Tuple([bop_9153,call_9157,call_9161,call_9184,var_9183,])
func_9198 = relay.Function([var_9151,var_9152,var_9183,], output)
mod['func_9198'] = func_9198
mod = relay.transform.InferType()(mod)
mutated_mod['func_9198'] = func_9198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9198_call = mutated_mod.get_global_var('func_9198')
var_9200 = relay.var("var_9200", dtype = "uint8", shape = (15, 15, 6))#candidate|9200|(15, 15, 6)|var|uint8
var_9201 = relay.var("var_9201", dtype = "uint8", shape = (15, 15, 6))#candidate|9201|(15, 15, 6)|var|uint8
var_9202 = relay.var("var_9202", dtype = "int8", shape = (384,))#candidate|9202|(384,)|var|int8
call_9199 = func_9198_call(var_9200,var_9201,var_9202,)
output = call_9199
func_9203 = relay.Function([var_9200,var_9201,var_9202,], output)
mutated_mod['func_9203'] = func_9203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1676_call = mutated_mod.get_global_var('func_1676')
call_9221 = relay.TupleGetItem(func_1675_call(), 0)
call_9222 = relay.TupleGetItem(func_1676_call(), 0)
output = relay.Tuple([call_9221,])
output2 = relay.Tuple([call_9222,])
func_9244 = relay.Function([], output)
mod['func_9244'] = func_9244
mod = relay.transform.InferType()(mod)
output = func_9244()
func_9245 = relay.Function([], output)
mutated_mod['func_9245'] = func_9245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3529_call = mod.get_global_var('func_3529')
func_3530_call = mutated_mod.get_global_var('func_3530')
call_9253 = func_3529_call()
call_9254 = func_3529_call()
func_4084_call = mod.get_global_var('func_4084')
func_4086_call = mutated_mod.get_global_var('func_4086')
call_9303 = relay.TupleGetItem(func_4084_call(), 0)
call_9304 = relay.TupleGetItem(func_4086_call(), 0)
output = relay.Tuple([call_9253,call_9303,])
output2 = relay.Tuple([call_9254,call_9304,])
func_9325 = relay.Function([], output)
mod['func_9325'] = func_9325
mod = relay.transform.InferType()(mod)
output = func_9325()
func_9326 = relay.Function([], output)
mutated_mod['func_9326'] = func_9326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7228_call = mod.get_global_var('func_7228')
func_7230_call = mutated_mod.get_global_var('func_7230')
call_9330 = relay.TupleGetItem(func_7228_call(), 0)
call_9331 = relay.TupleGetItem(func_7230_call(), 0)
uop_9338 = relay.exp(call_9330.astype('float32')) # shape=(5, 11, 3)
uop_9340 = relay.exp(call_9331.astype('float32')) # shape=(5, 11, 3)
func_4257_call = mod.get_global_var('func_4257')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_9341 = relay.TupleGetItem(func_4257_call(), 5)
call_9342 = relay.TupleGetItem(func_4259_call(), 5)
func_3889_call = mod.get_global_var('func_3889')
func_3891_call = mutated_mod.get_global_var('func_3891')
call_9352 = func_3889_call()
call_9353 = func_3889_call()
func_351_call = mod.get_global_var('func_351')
func_352_call = mutated_mod.get_global_var('func_352')
call_9373 = relay.TupleGetItem(func_351_call(), 0)
call_9374 = relay.TupleGetItem(func_352_call(), 0)
output = relay.Tuple([uop_9338,call_9341,call_9352,call_9373,])
output2 = relay.Tuple([uop_9340,call_9342,call_9353,call_9374,])
func_9379 = relay.Function([], output)
mod['func_9379'] = func_9379
mod = relay.transform.InferType()(mod)
mutated_mod['func_9379'] = func_9379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9379_call = mutated_mod.get_global_var('func_9379')
call_9380 = func_9379_call()
output = call_9380
func_9381 = relay.Function([], output)
mutated_mod['func_9381'] = func_9381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7941_call = mod.get_global_var('func_7941')
func_7942_call = mutated_mod.get_global_var('func_7942')
call_9382 = relay.TupleGetItem(func_7941_call(), 2)
call_9383 = relay.TupleGetItem(func_7942_call(), 2)
output = relay.Tuple([call_9382,])
output2 = relay.Tuple([call_9383,])
func_9388 = relay.Function([], output)
mod['func_9388'] = func_9388
mod = relay.transform.InferType()(mod)
output = func_9388()
func_9389 = relay.Function([], output)
mutated_mod['func_9389'] = func_9389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7228_call = mod.get_global_var('func_7228')
func_7230_call = mutated_mod.get_global_var('func_7230')
call_9425 = relay.TupleGetItem(func_7228_call(), 1)
call_9426 = relay.TupleGetItem(func_7230_call(), 1)
output = relay.Tuple([call_9425,])
output2 = relay.Tuple([call_9426,])
func_9431 = relay.Function([], output)
mod['func_9431'] = func_9431
mod = relay.transform.InferType()(mod)
mutated_mod['func_9431'] = func_9431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9431_call = mutated_mod.get_global_var('func_9431')
call_9432 = func_9431_call()
output = call_9432
func_9433 = relay.Function([], output)
mutated_mod['func_9433'] = func_9433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8730_call = mod.get_global_var('func_8730')
func_8731_call = mutated_mod.get_global_var('func_8731')
call_9483 = func_8730_call()
call_9484 = func_8730_call()
output = call_9483
output2 = call_9484
func_9521 = relay.Function([], output)
mod['func_9521'] = func_9521
mod = relay.transform.InferType()(mod)
output = func_9521()
func_9522 = relay.Function([], output)
mutated_mod['func_9522'] = func_9522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9112_call = mod.get_global_var('func_9112')
func_9113_call = mutated_mod.get_global_var('func_9113')
call_9531 = relay.TupleGetItem(func_9112_call(), 0)
call_9532 = relay.TupleGetItem(func_9113_call(), 0)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_9540 = relay.TupleGetItem(func_2971_call(relay.reshape(call_9531.astype('float32'), [165,])), 2)
call_9541 = relay.TupleGetItem(func_2973_call(relay.reshape(call_9531.astype('float32'), [165,])), 2)
func_5044_call = mod.get_global_var('func_5044')
func_5045_call = mutated_mod.get_global_var('func_5045')
call_9542 = relay.TupleGetItem(func_5044_call(), 1)
call_9543 = relay.TupleGetItem(func_5045_call(), 1)
func_6317_call = mod.get_global_var('func_6317')
func_6319_call = mutated_mod.get_global_var('func_6319')
call_9548 = relay.TupleGetItem(func_6317_call(), 0)
call_9549 = relay.TupleGetItem(func_6319_call(), 0)
output = relay.Tuple([call_9531,call_9540,call_9542,call_9548,])
output2 = relay.Tuple([call_9532,call_9541,call_9543,call_9549,])
func_9566 = relay.Function([], output)
mod['func_9566'] = func_9566
mod = relay.transform.InferType()(mod)
mutated_mod['func_9566'] = func_9566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9566_call = mutated_mod.get_global_var('func_9566')
call_9567 = func_9566_call()
output = call_9567
func_9568 = relay.Function([], output)
mutated_mod['func_9568'] = func_9568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4110_call = mod.get_global_var('func_4110')
func_4112_call = mutated_mod.get_global_var('func_4112')
call_9613 = func_4110_call()
call_9614 = func_4110_call()
output = call_9613
output2 = call_9614
func_9637 = relay.Function([], output)
mod['func_9637'] = func_9637
mod = relay.transform.InferType()(mod)
mutated_mod['func_9637'] = func_9637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9637_call = mutated_mod.get_global_var('func_9637')
call_9638 = func_9637_call()
output = call_9638
func_9639 = relay.Function([], output)
mutated_mod['func_9639'] = func_9639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9244_call = mod.get_global_var('func_9244')
func_9245_call = mutated_mod.get_global_var('func_9245')
call_9796 = relay.TupleGetItem(func_9244_call(), 0)
call_9797 = relay.TupleGetItem(func_9245_call(), 0)
func_5904_call = mod.get_global_var('func_5904')
func_5906_call = mutated_mod.get_global_var('func_5906')
call_9798 = relay.TupleGetItem(func_5904_call(), 0)
call_9799 = relay.TupleGetItem(func_5906_call(), 0)
output = relay.Tuple([call_9796,call_9798,])
output2 = relay.Tuple([call_9797,call_9799,])
func_9800 = relay.Function([], output)
mod['func_9800'] = func_9800
mod = relay.transform.InferType()(mod)
output = func_9800()
func_9801 = relay.Function([], output)
mutated_mod['func_9801'] = func_9801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1894_call = mod.get_global_var('func_1894')
func_1895_call = mutated_mod.get_global_var('func_1895')
call_9826 = func_1894_call()
call_9827 = func_1894_call()
output = call_9826
output2 = call_9827
func_9835 = relay.Function([], output)
mod['func_9835'] = func_9835
mod = relay.transform.InferType()(mod)
mutated_mod['func_9835'] = func_9835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9835_call = mutated_mod.get_global_var('func_9835')
call_9836 = func_9835_call()
output = call_9836
func_9837 = relay.Function([], output)
mutated_mod['func_9837'] = func_9837
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9958 = relay.const([[[6,3,-5,2,9,7,1,-8,8],[-2,8,8,10,10,-1,-3,-8,-10],[1,3,7,7,-5,2,2,-6,3],[10,-4,-7,-3,1,-1,6,-4,-9],[9,10,2,7,5,4,-5,-5,-5],[3,5,1,4,5,4,-8,3,-9],[1,8,-7,-8,-7,3,-5,1,-10],[-3,10,2,-5,9,10,2,-1,-7]],[[-3,3,8,-3,2,-1,6,7,-6],[-10,-7,7,-6,-9,9,7,3,-1],[6,3,10,10,-10,2,6,-6,-10],[2,-2,-4,9,3,1,-2,-10,5],[-9,-5,-4,4,10,2,-3,-7,5],[5,1,3,-4,9,10,-3,2,7],[-7,-5,2,-9,4,-9,-7,1,4],[2,-1,-1,6,1,4,-6,-2,7]],[[8,9,2,-1,4,-7,-7,6,9],[-2,-3,-4,2,7,-1,-8,-2,3],[6,-3,5,9,-10,-2,4,5,-7],[-4,9,5,-8,10,-1,-4,-4,-7],[8,3,-3,-6,-8,-6,-1,6,-4],[1,3,1,-2,-10,3,-9,7,8],[6,-9,-8,9,-7,-9,-5,2,2],[3,10,4,3,6,-3,10,-2,-4]],[[-5,-10,-8,-3,1,-3,1,-7,-7],[6,-4,10,9,-9,-10,-1,-5,-5],[-2,-8,-6,-6,-4,9,5,3,-10],[-7,4,1,-8,-7,5,-8,2,2],[6,4,10,-3,-9,-4,-1,9,6],[7,4,9,-8,8,4,8,5,-1],[-3,10,3,2,-5,-9,-1,-5,2],[4,-2,10,10,5,9,-2,2,-6]],[[-6,-1,7,3,8,-3,-3,-2,9],[10,-9,-9,-3,-3,-5,-2,-5,-3],[4,-2,-6,-3,-4,-6,7,6,-3],[6,-6,-2,6,-3,8,-5,1,-3],[4,8,10,-3,-9,5,-2,7,10],[8,-5,8,6,-6,-3,-8,4,5],[9,3,4,10,-10,5,-8,5,5],[-7,-7,2,1,-6,-3,10,-8,-1]],[[-4,-10,8,4,2,9,5,10,8],[-3,-9,3,2,5,-10,-4,-7,-9],[-2,3,2,-1,10,10,-3,-9,2],[6,7,3,10,-2,-4,4,-5,1],[-2,6,-6,-2,-9,-1,2,4,9],[-9,-9,-5,-5,10,-9,7,7,-5],[-10,-2,-9,10,8,-3,5,5,-6],[-6,1,-8,1,2,-9,-1,-6,-7]],[[-5,8,-5,4,4,4,10,-8,-8],[-1,-4,-8,-2,3,1,-4,-9,4],[3,1,-7,-9,5,-10,-6,3,-6],[2,-10,-7,-4,-9,-3,-6,1,6],[-4,-7,-2,3,7,-9,-7,-2,-7],[7,-2,-6,-1,1,-2,2,-2,7],[5,4,-8,-7,-6,-3,2,4,-8],[8,3,-5,-8,2,-7,8,3,-6]],[[-6,7,3,-3,-9,8,-7,9,8],[6,-1,8,1,10,7,-4,-8,-3],[10,8,2,7,4,1,7,8,8],[-8,1,3,-3,-10,-10,5,-10,-7],[1,-4,-9,-7,-4,6,4,-1,1],[4,2,8,7,-2,-6,-1,-5,4],[-2,10,-7,-6,-10,7,-2,9,2],[-8,1,-10,-8,-6,8,7,-10,-3]],[[-3,9,9,-7,6,7,-3,9,-4],[3,-9,-7,10,6,10,8,-10,7],[2,2,-1,-5,3,-10,-4,3,3],[-2,-3,-2,10,6,-6,9,8,5],[-10,6,8,-4,-9,10,6,-7,-10],[4,9,-2,-5,-3,4,-4,2,-10],[6,-5,-1,-8,-6,-6,4,-8,1],[7,3,-3,-2,1,-9,-4,-5,9]],[[-3,2,4,8,9,-2,-8,-8,-1],[-7,-10,-6,-9,1,1,-1,8,6],[1,-1,-3,-1,-10,-1,-2,3,-7],[8,-9,-2,-10,5,-6,2,-8,-10],[-4,2,-1,-6,-1,4,5,-8,4],[5,4,-4,2,8,8,8,10,-7],[-3,4,1,-6,4,3,3,-10,7],[-7,-9,-6,4,1,4,-5,-1,2]],[[8,2,-1,8,10,-1,3,3,-7],[-10,-3,-5,9,5,-10,3,7,10],[8,-2,-7,5,-4,-3,-9,2,-2],[-10,-8,10,-4,-5,-8,-8,4,-7],[4,-10,-4,9,-6,5,9,-10,10],[2,4,-2,-2,-3,2,-7,3,5],[4,1,7,9,-9,1,-8,-3,2],[-7,8,3,1,6,-1,1,7,5]],[[-8,-9,3,8,7,-6,-9,-5,4],[-4,-10,-8,3,6,3,-5,-4,-8],[8,-10,7,4,-10,10,-9,-8,-7],[9,8,-2,-7,-10,3,9,3,-6],[5,6,-9,9,5,6,-6,3,-2],[-2,4,-1,-1,-8,-10,-9,-4,-2],[3,10,1,-1,-1,-10,1,-4,-8],[-2,5,-7,6,-4,1,3,7,4]],[[-9,6,1,-7,-2,5,-5,-10,9],[-9,-3,7,-7,10,6,-4,10,7],[10,4,-4,-1,-6,-1,-8,1,-1],[7,-9,-6,2,-1,1,-6,3,-2],[-8,8,-6,10,9,-7,-10,-2,1],[5,7,-10,8,-9,7,-8,6,1],[-4,6,-2,6,7,-2,-6,-4,7],[-1,-9,3,-4,10,-8,-4,2,8]],[[2,8,3,-8,1,2,-5,10,-5],[-9,-6,3,-2,8,6,9,-1,-9],[-9,5,-10,-7,-2,-8,-1,-8,-10],[5,-7,-7,1,10,5,10,8,-5],[4,1,10,-3,-10,2,-3,1,9],[10,4,-4,1,4,-9,8,-10,7],[10,-2,4,-2,10,4,3,-1,-6],[-7,-9,6,7,-1,-3,-8,-2,-5]]], dtype = "uint64")#candidate|9958|(14, 8, 9)|const|uint64
var_9959 = relay.var("var_9959", dtype = "uint64", shape = (14, 8, 9))#candidate|9959|(14, 8, 9)|var|uint64
bop_9960 = relay.logical_xor(const_9958.astype('uint64'), relay.reshape(var_9959.astype('uint64'), relay.shape_of(const_9958))) # shape=(14, 8, 9)
func_6239_call = mod.get_global_var('func_6239')
func_6240_call = mutated_mod.get_global_var('func_6240')
call_9971 = relay.TupleGetItem(func_6239_call(), 1)
call_9972 = relay.TupleGetItem(func_6240_call(), 1)
output = relay.Tuple([bop_9960,call_9971,])
output2 = relay.Tuple([bop_9960,call_9972,])
func_9978 = relay.Function([var_9959,], output)
mod['func_9978'] = func_9978
mod = relay.transform.InferType()(mod)
var_9979 = relay.var("var_9979", dtype = "uint64", shape = (14, 8, 9))#candidate|9979|(14, 8, 9)|var|uint64
output = func_9978(var_9979)
func_9980 = relay.Function([var_9979], output)
mutated_mod['func_9980'] = func_9980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8143_call = mod.get_global_var('func_8143')
func_8145_call = mutated_mod.get_global_var('func_8145')
call_10028 = relay.TupleGetItem(func_8143_call(), 3)
call_10029 = relay.TupleGetItem(func_8145_call(), 3)
output = call_10028
output2 = call_10029
func_10041 = relay.Function([], output)
mod['func_10041'] = func_10041
mod = relay.transform.InferType()(mod)
mutated_mod['func_10041'] = func_10041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10041_call = mutated_mod.get_global_var('func_10041')
call_10042 = func_10041_call()
output = call_10042
func_10043 = relay.Function([], output)
mutated_mod['func_10043'] = func_10043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_10062 = func_4785_call()
call_10063 = func_4785_call()
output = call_10062
output2 = call_10063
func_10066 = relay.Function([], output)
mod['func_10066'] = func_10066
mod = relay.transform.InferType()(mod)
output = func_10066()
func_10067 = relay.Function([], output)
mutated_mod['func_10067'] = func_10067
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10074 = relay.const([[[-10,-3,2,-9,6,-4,-4,-3,-1,5,-3,6,-8,-4],[7,2,-10,10,-10,6,-8,-8,7,3,-2,5,7,-9]]], dtype = "int64")#candidate|10074|(1, 2, 14)|const|int64
var_10075 = relay.var("var_10075", dtype = "int64", shape = (12, 2, 14))#candidate|10075|(12, 2, 14)|var|int64
bop_10076 = relay.bitwise_xor(const_10074.astype('int64'), var_10075.astype('int64')) # shape=(12, 2, 14)
output = relay.Tuple([bop_10076,])
output2 = relay.Tuple([bop_10076,])
func_10082 = relay.Function([var_10075,], output)
mod['func_10082'] = func_10082
mod = relay.transform.InferType()(mod)
mutated_mod['func_10082'] = func_10082
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10083 = relay.var("var_10083", dtype = "int64", shape = (12, 2, 14))#candidate|10083|(12, 2, 14)|var|int64
func_10082_call = mutated_mod.get_global_var('func_10082')
call_10084 = func_10082_call(var_10083)
output = call_10084
func_10085 = relay.Function([var_10083], output)
mutated_mod['func_10085'] = func_10085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8779_call = mod.get_global_var('func_8779')
func_8780_call = mutated_mod.get_global_var('func_8780')
call_10097 = relay.TupleGetItem(func_8779_call(), 0)
call_10098 = relay.TupleGetItem(func_8780_call(), 0)
output = call_10097
output2 = call_10098
func_10101 = relay.Function([], output)
mod['func_10101'] = func_10101
mod = relay.transform.InferType()(mod)
mutated_mod['func_10101'] = func_10101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10101_call = mutated_mod.get_global_var('func_10101')
call_10102 = func_10101_call()
output = call_10102
func_10103 = relay.Function([], output)
mutated_mod['func_10103'] = func_10103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1137_call = mod.get_global_var('func_1137')
func_1138_call = mutated_mod.get_global_var('func_1138')
call_10133 = relay.TupleGetItem(func_1137_call(), 0)
call_10134 = relay.TupleGetItem(func_1138_call(), 0)
func_8852_call = mod.get_global_var('func_8852')
func_8853_call = mutated_mod.get_global_var('func_8853')
call_10144 = func_8852_call()
call_10145 = func_8852_call()
output = relay.Tuple([call_10133,call_10144,])
output2 = relay.Tuple([call_10134,call_10145,])
func_10150 = relay.Function([], output)
mod['func_10150'] = func_10150
mod = relay.transform.InferType()(mod)
output = func_10150()
func_10151 = relay.Function([], output)
mutated_mod['func_10151'] = func_10151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3329_call = mod.get_global_var('func_3329')
func_3331_call = mutated_mod.get_global_var('func_3331')
call_10152 = relay.TupleGetItem(func_3329_call(), 1)
call_10153 = relay.TupleGetItem(func_3331_call(), 1)
func_1536_call = mod.get_global_var('func_1536')
func_1539_call = mutated_mod.get_global_var('func_1539')
call_10191 = relay.TupleGetItem(func_1536_call(relay.reshape(call_10152.astype('float32'), [165,])), 3)
call_10192 = relay.TupleGetItem(func_1539_call(relay.reshape(call_10152.astype('float32'), [165,])), 3)
func_8351_call = mod.get_global_var('func_8351')
func_8352_call = mutated_mod.get_global_var('func_8352')
call_10217 = relay.TupleGetItem(func_8351_call(), 0)
call_10218 = relay.TupleGetItem(func_8352_call(), 0)
output = relay.Tuple([call_10152,call_10191,call_10217,])
output2 = relay.Tuple([call_10153,call_10192,call_10218,])
func_10221 = relay.Function([], output)
mod['func_10221'] = func_10221
mod = relay.transform.InferType()(mod)
mutated_mod['func_10221'] = func_10221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10221_call = mutated_mod.get_global_var('func_10221')
call_10222 = func_10221_call()
output = call_10222
func_10223 = relay.Function([], output)
mutated_mod['func_10223'] = func_10223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1651_call = mod.get_global_var('func_1651')
func_1653_call = mutated_mod.get_global_var('func_1653')
call_10332 = func_1651_call()
call_10333 = func_1651_call()
output = relay.Tuple([call_10332,])
output2 = relay.Tuple([call_10333,])
func_10347 = relay.Function([], output)
mod['func_10347'] = func_10347
mod = relay.transform.InferType()(mod)
mutated_mod['func_10347'] = func_10347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10347_call = mutated_mod.get_global_var('func_10347')
call_10348 = func_10347_call()
output = call_10348
func_10349 = relay.Function([], output)
mutated_mod['func_10349'] = func_10349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7563_call = mod.get_global_var('func_7563')
func_7564_call = mutated_mod.get_global_var('func_7564')
call_10413 = relay.TupleGetItem(func_7563_call(), 4)
call_10414 = relay.TupleGetItem(func_7564_call(), 4)
var_10415 = relay.var("var_10415", dtype = "float32", shape = (8, 1053))#candidate|10415|(8, 1053)|var|float32
bop_10416 = relay.minimum(call_10413.astype('uint8'), var_10415.astype('uint8')) # shape=(8, 1053)
bop_10419 = relay.minimum(call_10414.astype('uint8'), var_10415.astype('uint8')) # shape=(8, 1053)
func_9835_call = mod.get_global_var('func_9835')
func_9837_call = mutated_mod.get_global_var('func_9837')
call_10422 = func_9835_call()
call_10423 = func_9835_call()
uop_10428 = relay.asinh(call_10413.astype('float64')) # shape=(1, 1053)
uop_10430 = relay.asinh(call_10414.astype('float64')) # shape=(1, 1053)
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
var_10447 = relay.var("var_10447", dtype = "int16", shape = (44,))#candidate|10447|(44,)|var|int16
call_10446 = relay.TupleGetItem(func_2210_call(relay.reshape(var_10447.astype('int16'), [1, 11, 4])), 0)
call_10448 = relay.TupleGetItem(func_2212_call(relay.reshape(var_10447.astype('int16'), [1, 11, 4])), 0)
output = relay.Tuple([bop_10416,call_10422,uop_10428,call_10446,var_10447,])
output2 = relay.Tuple([bop_10419,call_10423,uop_10430,call_10448,var_10447,])
func_10461 = relay.Function([var_10415,var_10447,], output)
mod['func_10461'] = func_10461
mod = relay.transform.InferType()(mod)
var_10462 = relay.var("var_10462", dtype = "float32", shape = (8, 1053))#candidate|10462|(8, 1053)|var|float32
var_10463 = relay.var("var_10463", dtype = "int16", shape = (44,))#candidate|10463|(44,)|var|int16
output = func_10461(var_10462,var_10463,)
func_10464 = relay.Function([var_10462,var_10463,], output)
mutated_mod['func_10464'] = func_10464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1208_call = mod.get_global_var('func_1208')
func_1210_call = mutated_mod.get_global_var('func_1210')
call_10484 = relay.TupleGetItem(func_1208_call(), 3)
call_10485 = relay.TupleGetItem(func_1210_call(), 3)
output = relay.Tuple([call_10484,])
output2 = relay.Tuple([call_10485,])
func_10490 = relay.Function([], output)
mod['func_10490'] = func_10490
mod = relay.transform.InferType()(mod)
output = func_10490()
func_10491 = relay.Function([], output)
mutated_mod['func_10491'] = func_10491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3799_call = mod.get_global_var('func_3799')
func_3801_call = mutated_mod.get_global_var('func_3801')
call_10559 = relay.TupleGetItem(func_3799_call(), 0)
call_10560 = relay.TupleGetItem(func_3801_call(), 0)
func_2413_call = mod.get_global_var('func_2413')
func_2415_call = mutated_mod.get_global_var('func_2415')
call_10577 = relay.TupleGetItem(func_2413_call(relay.reshape(call_10559.astype('float32'), [165,])), 2)
call_10578 = relay.TupleGetItem(func_2415_call(relay.reshape(call_10559.astype('float32'), [165,])), 2)
output = relay.Tuple([call_10559,call_10577,])
output2 = relay.Tuple([call_10560,call_10578,])
func_10584 = relay.Function([], output)
mod['func_10584'] = func_10584
mod = relay.transform.InferType()(mod)
output = func_10584()
func_10585 = relay.Function([], output)
mutated_mod['func_10585'] = func_10585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7228_call = mod.get_global_var('func_7228')
func_7230_call = mutated_mod.get_global_var('func_7230')
call_10591 = relay.TupleGetItem(func_7228_call(), 2)
call_10592 = relay.TupleGetItem(func_7230_call(), 2)
func_3390_call = mod.get_global_var('func_3390')
func_3394_call = mutated_mod.get_global_var('func_3394')
var_10600 = relay.var("var_10600", dtype = "float64", shape = (455,))#candidate|10600|(455,)|var|float64
call_10599 = relay.TupleGetItem(func_3390_call(relay.reshape(var_10600.astype('float64'), [455,]), relay.reshape(var_10600.astype('float64'), [455,]), ), 1)
call_10601 = relay.TupleGetItem(func_3394_call(relay.reshape(var_10600.astype('float64'), [455,]), relay.reshape(var_10600.astype('float64'), [455,]), ), 1)
func_10490_call = mod.get_global_var('func_10490')
func_10491_call = mutated_mod.get_global_var('func_10491')
call_10613 = relay.TupleGetItem(func_10490_call(), 0)
call_10614 = relay.TupleGetItem(func_10491_call(), 0)
output = relay.Tuple([call_10591,call_10599,var_10600,call_10613,])
output2 = relay.Tuple([call_10592,call_10601,var_10600,call_10614,])
func_10627 = relay.Function([var_10600,], output)
mod['func_10627'] = func_10627
mod = relay.transform.InferType()(mod)
mutated_mod['func_10627'] = func_10627
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10628 = relay.var("var_10628", dtype = "float64", shape = (455,))#candidate|10628|(455,)|var|float64
func_10627_call = mutated_mod.get_global_var('func_10627')
call_10629 = func_10627_call(var_10628)
output = call_10629
func_10630 = relay.Function([var_10628], output)
mutated_mod['func_10630'] = func_10630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1208_call = mod.get_global_var('func_1208')
func_1210_call = mutated_mod.get_global_var('func_1210')
call_10642 = relay.TupleGetItem(func_1208_call(), 3)
call_10643 = relay.TupleGetItem(func_1210_call(), 3)
output = call_10642
output2 = call_10643
func_10644 = relay.Function([], output)
mod['func_10644'] = func_10644
mod = relay.transform.InferType()(mod)
output = func_10644()
func_10645 = relay.Function([], output)
mutated_mod['func_10645'] = func_10645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8051_call = mod.get_global_var('func_8051')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_10666 = relay.TupleGetItem(func_8051_call(), 0)
call_10667 = relay.TupleGetItem(func_8053_call(), 0)
output = call_10666
output2 = call_10667
func_10695 = relay.Function([], output)
mod['func_10695'] = func_10695
mod = relay.transform.InferType()(mod)
mutated_mod['func_10695'] = func_10695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10695_call = mutated_mod.get_global_var('func_10695')
call_10696 = func_10695_call()
output = call_10696
func_10697 = relay.Function([], output)
mutated_mod['func_10697'] = func_10697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5743_call = mod.get_global_var('func_5743')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_10709 = relay.TupleGetItem(func_5743_call(), 0)
call_10710 = relay.TupleGetItem(func_5744_call(), 0)
func_1702_call = mod.get_global_var('func_1702')
func_1704_call = mutated_mod.get_global_var('func_1704')
var_10714 = relay.var("var_10714", dtype = "bool", shape = (3150,))#candidate|10714|(3150,)|var|bool
call_10713 = relay.TupleGetItem(func_1702_call(relay.reshape(var_10714.astype('bool'), [1, 3150])), 0)
call_10715 = relay.TupleGetItem(func_1704_call(relay.reshape(var_10714.astype('bool'), [1, 3150])), 0)
const_10723 = relay.const([False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,True,True,True,True,False,False,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False], dtype = "bool")#candidate|10723|(3150,)|const|bool
bop_10724 = relay.multiply(var_10714.astype('uint32'), relay.reshape(const_10723.astype('uint32'), relay.shape_of(var_10714))) # shape=(3150,)
func_3089_call = mod.get_global_var('func_3089')
func_3091_call = mutated_mod.get_global_var('func_3091')
call_10731 = relay.TupleGetItem(func_3089_call(relay.reshape(call_10709.astype('float32'), [165,])), 3)
call_10732 = relay.TupleGetItem(func_3091_call(relay.reshape(call_10709.astype('float32'), [165,])), 3)
output = relay.Tuple([call_10709,call_10713,bop_10724,call_10731,])
output2 = relay.Tuple([call_10710,call_10715,bop_10724,call_10732,])
func_10733 = relay.Function([var_10714,], output)
mod['func_10733'] = func_10733
mod = relay.transform.InferType()(mod)
var_10734 = relay.var("var_10734", dtype = "bool", shape = (3150,))#candidate|10734|(3150,)|var|bool
output = func_10733(var_10734)
func_10735 = relay.Function([var_10734], output)
mutated_mod['func_10735'] = func_10735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7228_call = mod.get_global_var('func_7228')
func_7230_call = mutated_mod.get_global_var('func_7230')
call_10822 = relay.TupleGetItem(func_7228_call(), 0)
call_10823 = relay.TupleGetItem(func_7230_call(), 0)
output = call_10822
output2 = call_10823
func_10839 = relay.Function([], output)
mod['func_10839'] = func_10839
mod = relay.transform.InferType()(mod)
output = func_10839()
func_10840 = relay.Function([], output)
mutated_mod['func_10840'] = func_10840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5836_call = mod.get_global_var('func_5836')
func_5838_call = mutated_mod.get_global_var('func_5838')
call_10897 = relay.TupleGetItem(func_5836_call(), 1)
call_10898 = relay.TupleGetItem(func_5838_call(), 1)
func_2724_call = mod.get_global_var('func_2724')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_10902 = relay.TupleGetItem(func_2724_call(), 0)
call_10903 = relay.TupleGetItem(func_2725_call(), 0)
func_7100_call = mod.get_global_var('func_7100')
func_7104_call = mutated_mod.get_global_var('func_7104')
const_10916 = relay.const([True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True], dtype = "bool")#candidate|10916|(280,)|const|bool
call_10915 = relay.TupleGetItem(func_7100_call(relay.reshape(const_10916.astype('bool'), [4, 5, 14]), relay.reshape(const_10916.astype('bool'), [4, 5, 14]), ), 0)
call_10917 = relay.TupleGetItem(func_7104_call(relay.reshape(const_10916.astype('bool'), [4, 5, 14]), relay.reshape(const_10916.astype('bool'), [4, 5, 14]), ), 0)
func_9244_call = mod.get_global_var('func_9244')
func_9245_call = mutated_mod.get_global_var('func_9245')
call_10925 = relay.TupleGetItem(func_9244_call(), 0)
call_10926 = relay.TupleGetItem(func_9245_call(), 0)
output = relay.Tuple([call_10897,call_10902,call_10915,const_10916,call_10925,])
output2 = relay.Tuple([call_10898,call_10903,call_10917,const_10916,call_10926,])
func_10953 = relay.Function([], output)
mod['func_10953'] = func_10953
mod = relay.transform.InferType()(mod)
mutated_mod['func_10953'] = func_10953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10953_call = mutated_mod.get_global_var('func_10953')
call_10954 = func_10953_call()
output = call_10954
func_10955 = relay.Function([], output)
mutated_mod['func_10955'] = func_10955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9388_call = mod.get_global_var('func_9388')
func_9389_call = mutated_mod.get_global_var('func_9389')
call_10980 = relay.TupleGetItem(func_9388_call(), 0)
call_10981 = relay.TupleGetItem(func_9389_call(), 0)
func_8046_call = mod.get_global_var('func_8046')
func_8048_call = mutated_mod.get_global_var('func_8048')
call_11022 = func_8046_call()
call_11023 = func_8046_call()
output = relay.Tuple([call_10980,call_11022,])
output2 = relay.Tuple([call_10981,call_11023,])
func_11030 = relay.Function([], output)
mod['func_11030'] = func_11030
mod = relay.transform.InferType()(mod)
mutated_mod['func_11030'] = func_11030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11030_call = mutated_mod.get_global_var('func_11030')
call_11031 = func_11030_call()
output = call_11031
func_11032 = relay.Function([], output)
mutated_mod['func_11032'] = func_11032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8682_call = mod.get_global_var('func_8682')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_11082 = relay.TupleGetItem(func_8682_call(), 0)
call_11083 = relay.TupleGetItem(func_8683_call(), 0)
func_6627_call = mod.get_global_var('func_6627')
func_6630_call = mutated_mod.get_global_var('func_6630')
const_11088 = relay.const([3.604950,-8.701011,7.000755,5.743156,8.565498,-1.406353,-4.583837,6.869543,3.178849,-4.162667,2.169778,4.575333,-7.405937,3.036862,-3.512032,4.717187,-5.516317,7.572448,-8.012476,-0.397771,-9.456481,2.777112,-1.369815,-7.945269,-6.969327,1.161769,9.182788,-5.115535,0.281109,8.410325,7.448076,9.734977,-4.235524,6.955858,-9.453040,5.709605,-3.262029,4.888037,5.747980,-8.041669,-8.767454,-0.339011,-0.237290,9.299950,-1.572583,9.869299,9.656057,-7.874280,6.801192,-7.321610,0.819918,-9.699468,-2.464629,-4.751212,6.226892,9.164543,7.789444,-1.830739,0.426865,0.076367,-4.472916,0.716197,-3.569976], dtype = "float32")#candidate|11088|(63,)|const|float32
call_11087 = relay.TupleGetItem(func_6627_call(relay.reshape(const_11088.astype('float32'), [63,])), 1)
call_11089 = relay.TupleGetItem(func_6630_call(relay.reshape(const_11088.astype('float32'), [63,])), 1)
func_10953_call = mod.get_global_var('func_10953')
func_10955_call = mutated_mod.get_global_var('func_10955')
call_11090 = relay.TupleGetItem(func_10953_call(), 4)
call_11091 = relay.TupleGetItem(func_10955_call(), 4)
func_5288_call = mod.get_global_var('func_5288')
func_5290_call = mutated_mod.get_global_var('func_5290')
call_11103 = relay.TupleGetItem(func_5288_call(), 0)
call_11104 = relay.TupleGetItem(func_5290_call(), 0)
func_10101_call = mod.get_global_var('func_10101')
func_10103_call = mutated_mod.get_global_var('func_10103')
call_11107 = func_10101_call()
call_11108 = func_10101_call()
output = relay.Tuple([call_11082,call_11087,const_11088,call_11090,call_11103,call_11107,])
output2 = relay.Tuple([call_11083,call_11089,const_11088,call_11091,call_11104,call_11108,])
func_11111 = relay.Function([], output)
mod['func_11111'] = func_11111
mod = relay.transform.InferType()(mod)
output = func_11111()
func_11112 = relay.Function([], output)
mutated_mod['func_11112'] = func_11112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4913_call = mod.get_global_var('func_4913')
func_4914_call = mutated_mod.get_global_var('func_4914')
call_11152 = relay.TupleGetItem(func_4913_call(), 1)
call_11153 = relay.TupleGetItem(func_4914_call(), 1)
func_5786_call = mod.get_global_var('func_5786')
func_5788_call = mutated_mod.get_global_var('func_5788')
call_11166 = relay.TupleGetItem(func_5786_call(), 1)
call_11167 = relay.TupleGetItem(func_5788_call(), 1)
func_8284_call = mod.get_global_var('func_8284')
func_8285_call = mutated_mod.get_global_var('func_8285')
call_11178 = relay.TupleGetItem(func_8284_call(), 2)
call_11179 = relay.TupleGetItem(func_8285_call(), 2)
var_11189 = relay.var("var_11189", dtype = "int8", shape = (3, 2, 5))#candidate|11189|(3, 2, 5)|var|int8
bop_11190 = relay.maximum(call_11178.astype('int64'), relay.reshape(var_11189.astype('int64'), relay.shape_of(call_11178))) # shape=(3, 2, 5)
bop_11193 = relay.maximum(call_11179.astype('int64'), relay.reshape(var_11189.astype('int64'), relay.shape_of(call_11179))) # shape=(3, 2, 5)
output = relay.Tuple([call_11152,call_11166,bop_11190,])
output2 = relay.Tuple([call_11153,call_11167,bop_11193,])
func_11194 = relay.Function([var_11189,], output)
mod['func_11194'] = func_11194
mod = relay.transform.InferType()(mod)
var_11195 = relay.var("var_11195", dtype = "int8", shape = (3, 2, 5))#candidate|11195|(3, 2, 5)|var|int8
output = func_11194(var_11195)
func_11196 = relay.Function([var_11195], output)
mutated_mod['func_11196'] = func_11196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_768_call = mod.get_global_var('func_768')
func_769_call = mutated_mod.get_global_var('func_769')
call_11267 = relay.TupleGetItem(func_768_call(), 1)
call_11268 = relay.TupleGetItem(func_769_call(), 1)
output = call_11267
output2 = call_11268
func_11278 = relay.Function([], output)
mod['func_11278'] = func_11278
mod = relay.transform.InferType()(mod)
mutated_mod['func_11278'] = func_11278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11278_call = mutated_mod.get_global_var('func_11278')
call_11279 = func_11278_call()
output = call_11279
func_11280 = relay.Function([], output)
mutated_mod['func_11280'] = func_11280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_695_call = mod.get_global_var('func_695')
func_697_call = mutated_mod.get_global_var('func_697')
call_11338 = func_695_call()
call_11339 = func_695_call()
output = call_11338
output2 = call_11339
func_11348 = relay.Function([], output)
mod['func_11348'] = func_11348
mod = relay.transform.InferType()(mod)
output = func_11348()
func_11349 = relay.Function([], output)
mutated_mod['func_11349'] = func_11349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10066_call = mod.get_global_var('func_10066')
func_10067_call = mutated_mod.get_global_var('func_10067')
call_11350 = func_10066_call()
call_11351 = func_10066_call()
output = call_11350
output2 = call_11351
func_11354 = relay.Function([], output)
mod['func_11354'] = func_11354
mod = relay.transform.InferType()(mod)
output = func_11354()
func_11355 = relay.Function([], output)
mutated_mod['func_11355'] = func_11355
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11412 = relay.const([[[8.039989,4.511134,-6.597052,9.401402,3.761584],[9.649770,-9.427663,6.159796,8.485852,-6.085335],[-0.388833,-0.206531,2.022570,-1.800798,6.682974],[-2.113291,3.497438,-8.446949,1.326706,8.790233],[-7.458042,-0.573346,7.944955,6.864695,-8.919721],[-5.576971,-3.527018,5.980071,7.119451,-0.985280],[3.912361,8.192273,-0.011050,-5.083258,6.082223]],[[9.508590,8.023965,-9.000409,1.740008,8.259069],[-3.251973,-6.093175,8.928029,-6.426403,7.384803],[5.155996,-7.652716,-4.458233,-1.767134,-2.513843],[-8.352139,-6.292865,8.411259,-7.321409,-1.852769],[6.271519,-3.003933,8.936143,5.723377,-7.881498],[-5.829377,0.394028,-3.887320,-7.383438,-9.560615],[-4.990764,-0.459690,-4.518964,6.820571,-8.334960]],[[7.181140,-0.635230,4.930760,1.977798,-9.095630],[0.805457,8.084687,8.117180,-0.849977,-3.296914],[-0.005341,-1.988728,4.331570,-6.541544,2.611998],[-7.474629,-6.058543,-2.362156,-8.171509,-3.248918],[3.407912,-5.018208,-0.465262,-5.814775,3.289518],[-5.779028,2.849386,-8.487729,8.330653,-9.239012],[1.219923,9.882104,1.743888,2.316420,2.009998]]], dtype = "float32")#candidate|11412|(3, 7, 5)|const|float32
uop_11413 = relay.cosh(const_11412.astype('float32')) # shape=(3, 7, 5)
uop_11415 = relay.acosh(uop_11413.astype('float64')) # shape=(3, 7, 5)
func_11354_call = mod.get_global_var('func_11354')
func_11355_call = mutated_mod.get_global_var('func_11355')
call_11421 = func_11354_call()
call_11422 = func_11354_call()
output = relay.Tuple([uop_11415,call_11421,])
output2 = relay.Tuple([uop_11415,call_11422,])
func_11461 = relay.Function([], output)
mod['func_11461'] = func_11461
mod = relay.transform.InferType()(mod)
mutated_mod['func_11461'] = func_11461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11461_call = mutated_mod.get_global_var('func_11461')
call_11462 = func_11461_call()
output = call_11462
func_11463 = relay.Function([], output)
mutated_mod['func_11463'] = func_11463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9566_call = mod.get_global_var('func_9566')
func_9568_call = mutated_mod.get_global_var('func_9568')
call_11477 = relay.TupleGetItem(func_9566_call(), 1)
call_11478 = relay.TupleGetItem(func_9568_call(), 1)
output = call_11477
output2 = call_11478
func_11487 = relay.Function([], output)
mod['func_11487'] = func_11487
mod = relay.transform.InferType()(mod)
output = func_11487()
func_11488 = relay.Function([], output)
mutated_mod['func_11488'] = func_11488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7041_call = mod.get_global_var('func_7041')
func_7043_call = mutated_mod.get_global_var('func_7043')
call_11556 = relay.TupleGetItem(func_7041_call(), 0)
call_11557 = relay.TupleGetItem(func_7043_call(), 0)
func_10695_call = mod.get_global_var('func_10695')
func_10697_call = mutated_mod.get_global_var('func_10697')
call_11561 = func_10695_call()
call_11562 = func_10695_call()
func_7689_call = mod.get_global_var('func_7689')
func_7691_call = mutated_mod.get_global_var('func_7691')
call_11573 = relay.TupleGetItem(func_7689_call(), 0)
call_11574 = relay.TupleGetItem(func_7691_call(), 0)
func_11278_call = mod.get_global_var('func_11278')
func_11280_call = mutated_mod.get_global_var('func_11280')
call_11578 = func_11278_call()
call_11579 = func_11278_call()
func_8974_call = mod.get_global_var('func_8974')
func_8975_call = mutated_mod.get_global_var('func_8975')
call_11580 = relay.TupleGetItem(func_8974_call(), 1)
call_11581 = relay.TupleGetItem(func_8975_call(), 1)
output = relay.Tuple([call_11556,call_11561,call_11573,call_11578,call_11580,])
output2 = relay.Tuple([call_11557,call_11562,call_11574,call_11579,call_11581,])
func_11582 = relay.Function([], output)
mod['func_11582'] = func_11582
mod = relay.transform.InferType()(mod)
mutated_mod['func_11582'] = func_11582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11582_call = mutated_mod.get_global_var('func_11582')
call_11583 = func_11582_call()
output = call_11583
func_11584 = relay.Function([], output)
mutated_mod['func_11584'] = func_11584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10101_call = mod.get_global_var('func_10101')
func_10103_call = mutated_mod.get_global_var('func_10103')
call_11612 = func_10101_call()
call_11613 = func_10101_call()
func_7493_call = mod.get_global_var('func_7493')
func_7495_call = mutated_mod.get_global_var('func_7495')
const_11656 = relay.const([-7.028619,4.863479,-2.989280,8.783253,3.724996,-6.802527,7.871539,8.490675,0.182139,5.900837,-4.487620,5.810103,1.536025,-2.902087,-6.769574,-8.604015,5.830866,0.661119,-1.328772,-1.752278,-5.487590,3.527283,-9.142910,-0.843613,-3.530492,-2.335549,6.632936,-8.646289,6.047223,1.867652,9.069832,-0.336618,8.878527,-5.428558,7.145044,0.715827,0.069926,2.535158,8.579128,2.159957,8.923729,9.610173,3.515535,5.324805,-9.613538,-6.780553,4.089434,9.389606,3.830759,-7.138845,-9.937612,-0.387175,3.767427,5.628780,9.797718,-9.396880,5.434933,9.822791,2.661126,4.122682,8.816002,1.274307,0.696738,-3.837222,-0.241708,0.234091,-3.471515,6.355190,0.771387,1.073420,5.036547,3.616930,1.650572,-5.828348,-8.883493,-3.856649,1.270437,-8.305092,-9.813887,6.166897,6.755374,2.078893,-4.438045,8.784150,-6.517645,-3.058338,-2.287757,-9.661053,-9.302760,-3.063841,-5.278239,9.441321,-0.312743,-5.242380,-4.369894,-9.969593,-3.865743,5.089815,-1.875942,-6.304926,9.348464,-7.428702,4.186408,7.372663,3.210656,-1.867134,5.889653,-4.892041,5.083745,-7.019004,-5.407276,1.016878,1.570607,-4.625011,-4.528857,-4.744863,2.864309,3.502305,1.793124,8.241545,7.551067,-2.577704,6.883234,-2.538399,-3.728718,-1.396712,1.605229,6.599520,-2.457382,-1.754422,6.058245,8.198049,-8.648951,8.584911,0.490034,-4.985395,-0.382109,8.005964,0.050060,-0.343467,5.102072,6.762078,-1.640067,8.745123,-5.058013,0.884026,-7.315940,-1.456686,-3.990835,-9.986891,-9.631354,-7.722827,2.727354,-9.409614,2.398662,-7.280943,5.574556,-1.019166,4.066340,8.422147,0.399922,7.891844,4.115326,-6.819495,5.746279,6.554869,-4.880687,-3.139922,-4.178299,-2.247872,8.929236,-4.394996,-1.355023,-2.745881,-2.689015,8.488182,0.122033,4.806979,8.621243,-6.044576,-5.902113,-0.665437,4.001551,-4.139379,-5.985203,0.929732,-6.657252,-2.066009,-0.827400,-2.197619,-4.813852,9.792409,-2.019217,-1.701479,-5.975837,-9.108994,1.029424,2.350635,0.736922,-3.837305,6.396111,0.432517,1.802942,-7.073182,-0.296001,-9.784195,7.744148,-5.910143,-1.607488,6.603994,9.398865,3.413808,-5.138938,5.761244,-9.369686,4.062130,-2.464527,5.017312,1.954286,1.467714,-6.725122,-7.339622,7.791212,4.073836,-5.624129,9.095144,-6.791520,-1.374719,7.162856,-5.306060,2.791894,0.814505,-8.106067,7.845907,1.259782,-2.026900,-3.798081,0.357084,7.669193,3.678317,8.514453,-8.458597,3.177658,-0.589824,-2.124279,-9.320649,0.553046,9.845774,5.299161,5.306097,-8.637592,-6.609767,-2.250024,-3.087772,5.363654,1.719875,-3.133474,-9.415823,-5.602444,1.917419,-6.316922,-0.401076,8.210449,2.771915,-4.485139,2.877282,-0.823484,6.070600,3.352982,2.880164,3.834826,5.879671,-9.452800,5.894596,0.253753,6.290052,9.712203,8.390532,-3.471155,4.587564,9.774267,2.188605,-8.805892,-7.410351,-9.886032,-9.373134,0.300732,-1.198765,-1.910972,-2.413029,-1.143541,3.220034,-4.236806,-6.006483,6.750958,1.470627,6.789062,1.001716,-3.782423,6.500431,4.874519,-9.598594,-0.430702,-4.261329,2.441385,-0.771457,-8.431161,5.679170,-6.550764,6.662163,2.699207,-0.110468,3.203954,-2.900032,4.771205,6.471957,-7.738695,9.919077,-9.859573,1.977876,7.038927,8.503018,7.464590,-7.250218,-6.203519,3.892379,-4.810143,-6.122595,6.528951,0.163752,1.447693,1.002179,6.015462,-9.109752,-0.614358,6.288202,0.110437,-0.066639,5.219743,-2.181549,-6.746516,7.252084,2.034332,1.441457,-4.148874,7.943072,1.884078,4.636797,-9.058605,-4.658408,0.156897,-0.232020,-3.386057,5.816454,3.315830,4.367769,-0.899843,-1.954611,9.769557,-0.297546,3.071218,4.222354,5.094997,8.124239,-7.286549,-8.149956,1.528544,-0.698611,8.563677,4.136221,2.659753,7.264061,2.051446,1.675667,3.734198,-3.146573,2.423736,1.754267,9.950895,-8.349050,-3.745696,9.920107,0.882917,7.121957,-2.935237,7.056252,6.055734,0.415387,8.263340,2.733099,-7.799876,2.828067,3.438793,-6.696803,9.815325,-5.030713,-5.610127,7.269191,6.674870,-4.099664,1.361193,3.712041,-4.930090,4.103090,4.184554,-6.476851,-0.103440,-4.523205,-7.646405,-2.701328,6.495491,1.051534,6.984457,-3.904390,1.810228,-1.537944,-6.822681,-4.926125,-2.487621,-1.589783,-9.916926,6.032723,-0.194270,4.727789,5.761073,-8.639555,-6.814707,-1.036137,-2.630146,3.977965,4.039679,-0.455305,9.922438,9.650431,-6.262687,-1.725219,-8.654154,-1.626950,9.001489,-5.339898,3.030441,6.818126,-7.386399,7.216724,-3.935258,5.082878,-4.541452,-0.379542,-4.974211,0.339815,2.426702,7.458971,-0.879813,3.735744,8.127472], dtype = "float32")#candidate|11656|(455,)|const|float32
call_11655 = relay.TupleGetItem(func_7493_call(relay.reshape(const_11656.astype('float32'), [13, 7, 5])), 0)
call_11657 = relay.TupleGetItem(func_7495_call(relay.reshape(const_11656.astype('float32'), [13, 7, 5])), 0)
func_4257_call = mod.get_global_var('func_4257')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_11658 = relay.TupleGetItem(func_4257_call(), 10)
call_11659 = relay.TupleGetItem(func_4259_call(), 10)
output = relay.Tuple([call_11612,call_11655,const_11656,call_11658,])
output2 = relay.Tuple([call_11613,call_11657,const_11656,call_11659,])
func_11661 = relay.Function([], output)
mod['func_11661'] = func_11661
mod = relay.transform.InferType()(mod)
mutated_mod['func_11661'] = func_11661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11661_call = mutated_mod.get_global_var('func_11661')
call_11662 = func_11661_call()
output = call_11662
func_11663 = relay.Function([], output)
mutated_mod['func_11663'] = func_11663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3727_call = mod.get_global_var('func_3727')
func_3728_call = mutated_mod.get_global_var('func_3728')
call_11696 = relay.TupleGetItem(func_3727_call(), 0)
call_11697 = relay.TupleGetItem(func_3728_call(), 0)
output = relay.Tuple([call_11696,])
output2 = relay.Tuple([call_11697,])
func_11735 = relay.Function([], output)
mod['func_11735'] = func_11735
mod = relay.transform.InferType()(mod)
output = func_11735()
func_11736 = relay.Function([], output)
mutated_mod['func_11736'] = func_11736
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11765 = relay.const(9, dtype = "uint8")#candidate|11765|()|const|uint8
var_11766 = relay.var("var_11766", dtype = "uint8", shape = (8, 14, 16))#candidate|11766|(8, 14, 16)|var|uint8
bop_11767 = relay.add(const_11765.astype('uint8'), var_11766.astype('uint8')) # shape=(8, 14, 16)
bop_11778 = relay.divide(const_11765.astype('float32'), bop_11767.astype('float32')) # shape=(8, 14, 16)
output = relay.Tuple([bop_11778,])
output2 = relay.Tuple([bop_11778,])
func_11792 = relay.Function([var_11766,], output)
mod['func_11792'] = func_11792
mod = relay.transform.InferType()(mod)
mutated_mod['func_11792'] = func_11792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11793 = relay.var("var_11793", dtype = "uint8", shape = (8, 14, 16))#candidate|11793|(8, 14, 16)|var|uint8
func_11792_call = mutated_mod.get_global_var('func_11792')
call_11794 = func_11792_call(var_11793)
output = call_11794
func_11795 = relay.Function([var_11793], output)
mutated_mod['func_11795'] = func_11795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_955_call = mod.get_global_var('func_955')
func_957_call = mutated_mod.get_global_var('func_957')
call_11832 = relay.TupleGetItem(func_955_call(), 1)
call_11833 = relay.TupleGetItem(func_957_call(), 1)
output = call_11832
output2 = call_11833
func_11834 = relay.Function([], output)
mod['func_11834'] = func_11834
mod = relay.transform.InferType()(mod)
mutated_mod['func_11834'] = func_11834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11834_call = mutated_mod.get_global_var('func_11834')
call_11835 = func_11834_call()
output = call_11835
func_11836 = relay.Function([], output)
mutated_mod['func_11836'] = func_11836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2724_call = mod.get_global_var('func_2724')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_11887 = relay.TupleGetItem(func_2724_call(), 0)
call_11888 = relay.TupleGetItem(func_2725_call(), 0)
output = relay.Tuple([call_11887,])
output2 = relay.Tuple([call_11888,])
func_11894 = relay.Function([], output)
mod['func_11894'] = func_11894
mod = relay.transform.InferType()(mod)
output = func_11894()
func_11895 = relay.Function([], output)
mutated_mod['func_11895'] = func_11895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7990_call = mod.get_global_var('func_7990')
func_7991_call = mutated_mod.get_global_var('func_7991')
call_11896 = relay.TupleGetItem(func_7990_call(), 2)
call_11897 = relay.TupleGetItem(func_7991_call(), 2)
output = relay.Tuple([call_11896,])
output2 = relay.Tuple([call_11897,])
func_11902 = relay.Function([], output)
mod['func_11902'] = func_11902
mod = relay.transform.InferType()(mod)
output = func_11902()
func_11903 = relay.Function([], output)
mutated_mod['func_11903'] = func_11903
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11915 = relay.var("var_11915", dtype = "float64", shape = (1, 9, 6))#candidate|11915|(1, 9, 6)|var|float64
uop_11916 = relay.cosh(var_11915.astype('float64')) # shape=(1, 9, 6)
output = uop_11916
output2 = uop_11916
func_11918 = relay.Function([var_11915,], output)
mod['func_11918'] = func_11918
mod = relay.transform.InferType()(mod)
var_11919 = relay.var("var_11919", dtype = "float64", shape = (1, 9, 6))#candidate|11919|(1, 9, 6)|var|float64
output = func_11918(var_11919)
func_11920 = relay.Function([var_11919], output)
mutated_mod['func_11920'] = func_11920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7041_call = mod.get_global_var('func_7041')
func_7043_call = mutated_mod.get_global_var('func_7043')
call_11922 = relay.TupleGetItem(func_7041_call(), 0)
call_11923 = relay.TupleGetItem(func_7043_call(), 0)
func_955_call = mod.get_global_var('func_955')
func_957_call = mutated_mod.get_global_var('func_957')
call_11929 = relay.TupleGetItem(func_955_call(), 1)
call_11930 = relay.TupleGetItem(func_957_call(), 1)
func_5044_call = mod.get_global_var('func_5044')
func_5045_call = mutated_mod.get_global_var('func_5045')
call_11932 = relay.TupleGetItem(func_5044_call(), 2)
call_11933 = relay.TupleGetItem(func_5045_call(), 2)
output = relay.Tuple([call_11922,call_11929,call_11932,])
output2 = relay.Tuple([call_11923,call_11930,call_11933,])
func_11944 = relay.Function([], output)
mod['func_11944'] = func_11944
mod = relay.transform.InferType()(mod)
mutated_mod['func_11944'] = func_11944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11944_call = mutated_mod.get_global_var('func_11944')
call_11945 = func_11944_call()
output = call_11945
func_11946 = relay.Function([], output)
mutated_mod['func_11946'] = func_11946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4409_call = mod.get_global_var('func_4409')
func_4411_call = mutated_mod.get_global_var('func_4411')
call_12012 = relay.TupleGetItem(func_4409_call(), 1)
call_12013 = relay.TupleGetItem(func_4411_call(), 1)
uop_12029 = relay.log2(call_12012.astype('float64')) # shape=(455,)
uop_12031 = relay.log2(call_12013.astype('float64')) # shape=(455,)
var_12058 = relay.var("var_12058", dtype = "float64", shape = (455,))#candidate|12058|(455,)|var|float64
bop_12059 = relay.less(uop_12029.astype('bool'), relay.reshape(var_12058.astype('bool'), relay.shape_of(uop_12029))) # shape=(455,)
bop_12062 = relay.less(uop_12031.astype('bool'), relay.reshape(var_12058.astype('bool'), relay.shape_of(uop_12031))) # shape=(455,)
func_8501_call = mod.get_global_var('func_8501')
func_8502_call = mutated_mod.get_global_var('func_8502')
call_12063 = relay.TupleGetItem(func_8501_call(), 1)
call_12064 = relay.TupleGetItem(func_8502_call(), 1)
output = relay.Tuple([bop_12059,call_12063,])
output2 = relay.Tuple([bop_12062,call_12064,])
func_12067 = relay.Function([var_12058,], output)
mod['func_12067'] = func_12067
mod = relay.transform.InferType()(mod)
var_12068 = relay.var("var_12068", dtype = "float64", shape = (455,))#candidate|12068|(455,)|var|float64
output = func_12067(var_12068)
func_12069 = relay.Function([var_12068], output)
mutated_mod['func_12069'] = func_12069
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12110 = relay.var("var_12110", dtype = "float64", shape = (16, 3, 9))#candidate|12110|(16, 3, 9)|var|float64
uop_12111 = relay.acosh(var_12110.astype('float64')) # shape=(16, 3, 9)
output = uop_12111
output2 = uop_12111
func_12116 = relay.Function([var_12110,], output)
mod['func_12116'] = func_12116
mod = relay.transform.InferType()(mod)
mutated_mod['func_12116'] = func_12116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12117 = relay.var("var_12117", dtype = "float64", shape = (16, 3, 9))#candidate|12117|(16, 3, 9)|var|float64
func_12116_call = mutated_mod.get_global_var('func_12116')
call_12118 = func_12116_call(var_12117)
output = call_12118
func_12119 = relay.Function([var_12117], output)
mutated_mod['func_12119'] = func_12119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
call_12159 = relay.TupleGetItem(func_1409_call(), 0)
call_12160 = relay.TupleGetItem(func_1411_call(), 0)
output = call_12159
output2 = call_12160
func_12161 = relay.Function([], output)
mod['func_12161'] = func_12161
mod = relay.transform.InferType()(mod)
mutated_mod['func_12161'] = func_12161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12161_call = mutated_mod.get_global_var('func_12161')
call_12162 = func_12161_call()
output = call_12162
func_12163 = relay.Function([], output)
mutated_mod['func_12163'] = func_12163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11902_call = mod.get_global_var('func_11902')
func_11903_call = mutated_mod.get_global_var('func_11903')
call_12189 = relay.TupleGetItem(func_11902_call(), 0)
call_12190 = relay.TupleGetItem(func_11903_call(), 0)
func_11944_call = mod.get_global_var('func_11944')
func_11946_call = mutated_mod.get_global_var('func_11946')
call_12211 = relay.TupleGetItem(func_11944_call(), 0)
call_12212 = relay.TupleGetItem(func_11946_call(), 0)
func_3889_call = mod.get_global_var('func_3889')
func_3891_call = mutated_mod.get_global_var('func_3891')
call_12217 = func_3889_call()
call_12218 = func_3889_call()
func_1274_call = mod.get_global_var('func_1274')
func_1276_call = mutated_mod.get_global_var('func_1276')
call_12226 = relay.TupleGetItem(func_1274_call(), 0)
call_12227 = relay.TupleGetItem(func_1276_call(), 0)
output = relay.Tuple([call_12189,call_12211,call_12217,call_12226,])
output2 = relay.Tuple([call_12190,call_12212,call_12218,call_12227,])
func_12230 = relay.Function([], output)
mod['func_12230'] = func_12230
mod = relay.transform.InferType()(mod)
output = func_12230()
func_12231 = relay.Function([], output)
mutated_mod['func_12231'] = func_12231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8389_call = mod.get_global_var('func_8389')
func_8391_call = mutated_mod.get_global_var('func_8391')
call_12232 = relay.TupleGetItem(func_8389_call(), 0)
call_12233 = relay.TupleGetItem(func_8391_call(), 0)
output = relay.Tuple([call_12232,])
output2 = relay.Tuple([call_12233,])
func_12250 = relay.Function([], output)
mod['func_12250'] = func_12250
mod = relay.transform.InferType()(mod)
mutated_mod['func_12250'] = func_12250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12250_call = mutated_mod.get_global_var('func_12250')
call_12251 = func_12250_call()
output = call_12251
func_12252 = relay.Function([], output)
mutated_mod['func_12252'] = func_12252
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12348 = relay.const([[[-7.761572,-0.618023],[9.599740,-0.377988],[-6.843453,-7.344298],[3.002510,4.807848],[-3.686804,-7.004890],[-7.746578,0.437674],[9.032969,4.656989],[-6.196517,-4.076069],[9.154743,-8.770664],[2.931548,-8.558913],[5.308802,5.914465],[0.442827,4.331351],[7.156332,6.068463]],[[-8.326837,2.913577],[-0.269869,-2.352297],[3.327337,4.808884],[6.038080,0.410424],[-6.637003,-6.383613],[7.068403,-0.317224],[4.350799,-0.653354],[-7.039669,-8.811603],[-5.092724,-0.215809],[-0.726602,4.036399],[6.121010,3.566726],[-3.482237,5.591111],[-5.029771,-0.135865]],[[6.225474,9.229719],[-1.889905,6.569880],[2.581642,-2.749900],[1.323121,-7.110795],[9.060103,-6.751853],[-2.372903,2.779080],[-8.807285,1.221814],[-9.200401,-4.208109],[8.779684,-9.795940],[-1.500010,-7.742232],[-7.027752,5.918687],[4.750989,8.985790],[-4.078242,6.536103]],[[3.358483,8.498619],[0.860028,0.129383],[5.378772,-8.038906],[2.086685,-6.342786],[-6.394067,2.538411],[2.082467,1.262675],[8.325846,5.298073],[-9.881037,-5.565295],[6.700519,7.416895],[7.442898,3.688857],[5.969632,5.550667],[-5.221542,-9.870150],[-2.781322,6.998419]],[[-4.102402,-6.130834],[-8.442390,9.905469],[-5.922175,-5.072677],[-6.925187,-3.131282],[-7.029318,-8.909505],[2.924610,-3.928138],[2.640700,5.496483],[2.779672,-8.335134],[9.649079,9.314034],[-6.258003,-3.537475],[-3.747923,5.534874],[-3.321017,-3.835658],[3.227318,-1.166496]],[[-8.902591,-0.962500],[5.201134,8.126064],[1.438695,8.564759],[-6.699480,-7.206764],[2.500566,8.328799],[7.560266,-1.186399],[8.291234,4.627673],[2.267213,9.792342],[-6.777332,-0.951012],[3.988256,-3.254459],[4.152125,3.486555],[-6.800121,-7.718390],[-9.794669,-5.609613]],[[-7.949866,-8.962049],[6.773856,-7.224280],[5.224620,7.919041],[-5.765144,-9.352757],[6.971142,-6.591622],[-2.238510,7.180442],[1.189991,-8.208932],[0.202067,0.400805],[-2.355638,4.807800],[1.523685,-5.146141],[-9.757390,7.543624],[9.589855,-3.793477],[-5.891487,8.547590]],[[9.237222,-4.824942],[8.486925,-8.376380],[4.436581,-5.129918],[5.857801,8.054936],[-7.081992,-0.415952],[7.950753,0.452931],[8.961722,-1.599535],[-7.390390,-8.176249],[-3.442214,-4.576384],[5.516235,-3.636672],[-9.840366,-0.127051],[1.606290,3.666207],[-9.779085,-4.577298]],[[4.287515,-0.802192],[1.367639,-6.496929],[7.081770,5.691492],[3.200262,3.547848],[2.445005,3.665169],[-7.988448,1.539987],[-8.560400,2.558170],[-7.625178,-4.323643],[0.270607,-5.142453],[9.322055,-5.121598],[1.455904,-0.508904],[6.368677,-4.561601],[-9.150075,8.186372]],[[7.059435,-5.605315],[5.846889,-7.456789],[5.529967,9.917306],[-7.975065,1.042187],[-7.305880,-0.885126],[-6.918198,0.472895],[-3.807880,-8.268512],[5.188656,5.010793],[-5.764713,-3.545113],[-9.467583,-7.405737],[-3.587237,-2.129795],[4.890652,-4.543530],[-8.442894,-1.308301]],[[-7.666233,-6.758505],[3.434798,2.967559],[-4.045285,4.687505],[-6.333351,-7.200115],[6.106940,-7.361486],[-9.151277,-9.445962],[-0.304709,-1.955153],[1.197810,8.535634],[-5.651464,-1.173536],[-1.940235,-2.728594],[-7.400952,-4.610558],[-0.305769,7.947235],[0.306436,4.379707]],[[1.987631,6.374979],[-0.074532,-9.984231],[-7.112142,5.000334],[9.682201,-6.685164],[1.681869,2.729872],[7.224343,-7.135361],[-8.022388,4.176316],[1.422498,-8.134421],[-1.698940,3.982640],[0.524793,-3.230151],[0.793917,-6.410783],[7.298727,1.935567],[8.935767,-7.224406]],[[-0.877242,-8.721976],[8.713987,-4.736788],[-5.458366,6.915165],[-9.178707,-7.589256],[-9.946728,-6.853723],[-2.811531,-2.194899],[3.140609,4.980120],[-3.646312,2.799335],[-3.901416,-0.899824],[4.557270,3.970861],[1.288480,-8.061047],[7.108528,0.975476],[3.808654,9.306419]]], dtype = "float64")#candidate|12348|(13, 13, 2)|const|float64
uop_12349 = relay.cosh(const_12348.astype('float64')) # shape=(13, 13, 2)
uop_12361 = relay.rsqrt(const_12348.astype('float64')) # shape=(13, 13, 2)
output = relay.Tuple([uop_12349,uop_12361,])
output2 = relay.Tuple([uop_12349,uop_12361,])
func_12372 = relay.Function([], output)
mod['func_12372'] = func_12372
mod = relay.transform.InferType()(mod)
output = func_12372()
func_12373 = relay.Function([], output)
mutated_mod['func_12373'] = func_12373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7141_call = mod.get_global_var('func_7141')
func_7143_call = mutated_mod.get_global_var('func_7143')
call_12402 = func_7141_call()
call_12403 = func_7141_call()
output = relay.Tuple([call_12402,])
output2 = relay.Tuple([call_12403,])
func_12410 = relay.Function([], output)
mod['func_12410'] = func_12410
mod = relay.transform.InferType()(mod)
mutated_mod['func_12410'] = func_12410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12410_call = mutated_mod.get_global_var('func_12410')
call_12411 = func_12410_call()
output = call_12411
func_12412 = relay.Function([], output)
mutated_mod['func_12412'] = func_12412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12425 = relay.var("var_12425", dtype = "float32", shape = ())#candidate|12425|()|var|float32
var_12426 = relay.var("var_12426", dtype = "float32", shape = (1, 3, 1))#candidate|12426|(1, 3, 1)|var|float32
bop_12427 = relay.divide(var_12425.astype('float32'), var_12426.astype('float32')) # shape=(1, 3, 1)
output = relay.Tuple([bop_12427,])
output2 = relay.Tuple([bop_12427,])
func_12434 = relay.Function([var_12425,var_12426,], output)
mod['func_12434'] = func_12434
mod = relay.transform.InferType()(mod)
var_12435 = relay.var("var_12435", dtype = "float32", shape = ())#candidate|12435|()|var|float32
var_12436 = relay.var("var_12436", dtype = "float32", shape = (1, 3, 1))#candidate|12436|(1, 3, 1)|var|float32
output = func_12434(var_12435,var_12436,)
func_12437 = relay.Function([var_12435,var_12436,], output)
mutated_mod['func_12437'] = func_12437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5904_call = mod.get_global_var('func_5904')
func_5906_call = mutated_mod.get_global_var('func_5906')
call_12442 = relay.TupleGetItem(func_5904_call(), 1)
call_12443 = relay.TupleGetItem(func_5906_call(), 1)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_12446 = relay.TupleGetItem(func_2971_call(relay.reshape(call_12442.astype('float32'), [165,])), 1)
call_12447 = relay.TupleGetItem(func_2973_call(relay.reshape(call_12442.astype('float32'), [165,])), 1)
func_12250_call = mod.get_global_var('func_12250')
func_12252_call = mutated_mod.get_global_var('func_12252')
call_12475 = relay.TupleGetItem(func_12250_call(), 0)
call_12476 = relay.TupleGetItem(func_12252_call(), 0)
func_2971_call = mod.get_global_var('func_2971')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_12483 = relay.TupleGetItem(func_2971_call(relay.reshape(call_12446.astype('float32'), [165,])), 3)
call_12484 = relay.TupleGetItem(func_2973_call(relay.reshape(call_12446.astype('float32'), [165,])), 3)
output = relay.Tuple([call_12442,call_12446,call_12475,call_12483,])
output2 = relay.Tuple([call_12443,call_12447,call_12476,call_12484,])
func_12493 = relay.Function([], output)
mod['func_12493'] = func_12493
mod = relay.transform.InferType()(mod)
output = func_12493()
func_12494 = relay.Function([], output)
mutated_mod['func_12494'] = func_12494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9800_call = mod.get_global_var('func_9800')
func_9801_call = mutated_mod.get_global_var('func_9801')
call_12514 = relay.TupleGetItem(func_9800_call(), 1)
call_12515 = relay.TupleGetItem(func_9801_call(), 1)
func_3950_call = mod.get_global_var('func_3950')
func_3952_call = mutated_mod.get_global_var('func_3952')
call_12518 = func_3950_call()
call_12519 = func_3950_call()
output = relay.Tuple([call_12514,call_12518,])
output2 = relay.Tuple([call_12515,call_12519,])
func_12521 = relay.Function([], output)
mod['func_12521'] = func_12521
mod = relay.transform.InferType()(mod)
output = func_12521()
func_12522 = relay.Function([], output)
mutated_mod['func_12522'] = func_12522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5640_call = mod.get_global_var('func_5640')
func_5641_call = mutated_mod.get_global_var('func_5641')
call_12541 = func_5640_call()
call_12542 = func_5640_call()
func_8674_call = mod.get_global_var('func_8674')
func_8676_call = mutated_mod.get_global_var('func_8676')
call_12549 = relay.TupleGetItem(func_8674_call(), 2)
call_12550 = relay.TupleGetItem(func_8676_call(), 2)
output = relay.Tuple([call_12541,call_12549,])
output2 = relay.Tuple([call_12542,call_12550,])
func_12556 = relay.Function([], output)
mod['func_12556'] = func_12556
mod = relay.transform.InferType()(mod)
mutated_mod['func_12556'] = func_12556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12556_call = mutated_mod.get_global_var('func_12556')
call_12557 = func_12556_call()
output = call_12557
func_12558 = relay.Function([], output)
mutated_mod['func_12558'] = func_12558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11834_call = mod.get_global_var('func_11834')
func_11836_call = mutated_mod.get_global_var('func_11836')
call_12617 = func_11834_call()
call_12618 = func_11834_call()
func_5743_call = mod.get_global_var('func_5743')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_12633 = relay.TupleGetItem(func_5743_call(), 0)
call_12634 = relay.TupleGetItem(func_5744_call(), 0)
output = relay.Tuple([call_12617,call_12633,])
output2 = relay.Tuple([call_12618,call_12634,])
func_12637 = relay.Function([], output)
mod['func_12637'] = func_12637
mod = relay.transform.InferType()(mod)
mutated_mod['func_12637'] = func_12637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12637_call = mutated_mod.get_global_var('func_12637')
call_12638 = func_12637_call()
output = call_12638
func_12639 = relay.Function([], output)
mutated_mod['func_12639'] = func_12639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6032_call = mod.get_global_var('func_6032')
func_6033_call = mutated_mod.get_global_var('func_6033')
call_12657 = relay.TupleGetItem(func_6032_call(), 1)
call_12658 = relay.TupleGetItem(func_6033_call(), 1)
output = relay.Tuple([call_12657,])
output2 = relay.Tuple([call_12658,])
func_12664 = relay.Function([], output)
mod['func_12664'] = func_12664
mod = relay.transform.InferType()(mod)
mutated_mod['func_12664'] = func_12664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12664_call = mutated_mod.get_global_var('func_12664')
call_12665 = func_12664_call()
output = call_12665
func_12666 = relay.Function([], output)
mutated_mod['func_12666'] = func_12666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9521_call = mod.get_global_var('func_9521')
func_9522_call = mutated_mod.get_global_var('func_9522')
call_12667 = func_9521_call()
call_12668 = func_9521_call()
func_3727_call = mod.get_global_var('func_3727')
func_3728_call = mutated_mod.get_global_var('func_3728')
call_12675 = relay.TupleGetItem(func_3727_call(), 0)
call_12676 = relay.TupleGetItem(func_3728_call(), 0)
func_4409_call = mod.get_global_var('func_4409')
func_4411_call = mutated_mod.get_global_var('func_4411')
call_12687 = relay.TupleGetItem(func_4409_call(), 0)
call_12688 = relay.TupleGetItem(func_4411_call(), 0)
func_11487_call = mod.get_global_var('func_11487')
func_11488_call = mutated_mod.get_global_var('func_11488')
call_12693 = func_11487_call()
call_12694 = func_11487_call()
output = relay.Tuple([call_12667,call_12675,call_12687,call_12693,])
output2 = relay.Tuple([call_12668,call_12676,call_12688,call_12694,])
func_12721 = relay.Function([], output)
mod['func_12721'] = func_12721
mod = relay.transform.InferType()(mod)
mutated_mod['func_12721'] = func_12721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12721_call = mutated_mod.get_global_var('func_12721')
call_12722 = func_12721_call()
output = call_12722
func_12723 = relay.Function([], output)
mutated_mod['func_12723'] = func_12723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1871_call = mod.get_global_var('func_1871')
func_1873_call = mutated_mod.get_global_var('func_1873')
call_12734 = relay.TupleGetItem(func_1871_call(), 0)
call_12735 = relay.TupleGetItem(func_1873_call(), 0)
func_2413_call = mod.get_global_var('func_2413')
func_2415_call = mutated_mod.get_global_var('func_2415')
call_12759 = relay.TupleGetItem(func_2413_call(relay.reshape(call_12734.astype('float32'), [165,])), 1)
call_12760 = relay.TupleGetItem(func_2415_call(relay.reshape(call_12734.astype('float32'), [165,])), 1)
func_11461_call = mod.get_global_var('func_11461')
func_11463_call = mutated_mod.get_global_var('func_11463')
call_12767 = relay.TupleGetItem(func_11461_call(), 0)
call_12768 = relay.TupleGetItem(func_11463_call(), 0)
func_12067_call = mod.get_global_var('func_12067')
func_12069_call = mutated_mod.get_global_var('func_12069')
const_12770 = relay.const([[-7.511022,-5.774263,-9.646867,-6.757076,-0.662515,-4.799984,0.294248],[1.902347,2.771733,1.415417,-8.936594,-0.994722,-8.586521,-5.025931],[6.469611,-1.095012,-9.967924,5.718542,-1.211399,-9.862999,4.576995],[6.314705,5.328914,-3.863907,-6.684491,0.853724,-0.611158,-0.846642],[8.526757,6.425858,-3.675998,-2.293407,5.040738,4.305495,7.390045],[-3.764013,-0.910561,-6.381017,-0.389828,-7.758777,-3.068408,9.029967],[4.282222,3.716834,-9.240209,1.844722,-9.788877,-4.666320,4.205326],[1.450501,8.907672,5.764076,-6.425329,-2.956200,-8.403848,2.913455],[-1.396150,5.394054,-4.962486,-1.746029,-6.449537,1.081561,3.486943],[-2.680960,9.092106,-4.164298,8.226381,-1.275341,8.617204,-0.142542],[1.839749,-7.356009,-6.094368,7.478639,1.713155,2.359731,-0.307728],[-4.581422,-2.980836,-5.457025,8.229138,0.315607,0.237060,-5.147938],[-1.511159,-3.705255,-2.656724,0.628387,5.543063,7.864943,-9.400068],[-3.048961,3.097176,-0.395969,1.083114,8.646992,8.251412,3.007464],[-2.330819,9.076418,-2.972098,-3.622578,0.118218,2.907820,-1.440512],[5.689727,6.950336,7.501468,-9.850865,9.351068,3.756590,-9.232132],[3.908610,2.565265,0.891655,-6.418697,-8.405697,-7.135447,-1.627306],[-8.722621,-9.559256,7.527430,5.941827,-0.245451,-8.872402,3.030969],[-2.562307,6.674785,8.756790,0.014488,0.335661,-2.395652,-1.329573],[4.205318,-0.034550,-3.788039,6.437494,4.643251,-9.500945,3.996563],[1.110740,-4.078447,-4.005223,0.674085,-2.850589,5.664026,-6.684477],[-8.727990,-0.164156,6.462634,7.988279,-5.045191,1.913183,-7.394847],[9.955685,-9.314159,-5.170924,4.168565,-4.315011,9.214904,6.728975],[7.413388,-7.337334,3.915657,8.556346,-1.125595,-0.437663,-5.098866],[-3.958972,8.426411,-8.493499,-1.892555,4.046523,7.419027,-1.775099],[-3.031472,2.572973,7.570526,1.666936,1.071244,4.525002,-5.153226],[-9.430748,3.772548,4.688554,-4.603754,-2.936228,-3.961006,-6.030492],[-6.436033,-1.615972,0.920699,-6.417175,-2.955057,0.051204,-9.802574],[0.730275,-2.834867,3.203070,-0.340008,-9.710676,-0.511490,5.345372],[-6.611165,8.925123,-8.626657,-6.157529,1.000569,-2.603897,-7.081411],[2.566731,-3.629253,1.040677,-3.406897,-0.195358,0.326270,-9.009068],[0.310002,5.907392,8.910652,-2.865242,-9.657676,9.475902,2.276374],[0.775506,7.358128,6.573339,6.582982,-8.181241,0.184079,-5.865723],[-0.355552,8.340244,-0.590220,4.810234,5.972505,8.281085,-4.260750],[6.735404,-2.238473,-2.710119,-9.966227,5.067765,-3.647267,3.465921],[-5.767489,3.549074,-2.263132,4.542133,6.166529,5.123646,-6.898115],[-7.314422,4.171093,3.848770,0.820761,-6.047379,6.106243,4.015211],[2.613534,0.041420,6.797058,-4.022206,6.558428,-1.954719,3.827683],[0.905264,0.733894,-9.553477,-5.542518,-8.020995,9.137659,0.478909],[3.762849,3.642510,0.842487,-9.678000,5.202946,3.334725,-4.872003],[3.886289,0.838804,-0.330700,-0.589284,8.428235,-6.690493,-5.243610],[-8.262064,-0.870810,3.809547,5.618535,-8.924087,5.371143,-4.579940],[8.817770,-2.292209,-7.200706,3.084874,-0.592817,-1.815039,-0.173787],[-4.854595,-8.980549,-8.644443,-6.372966,-2.156950,9.929048,2.619114],[-8.385912,6.562272,9.394649,-3.042543,8.167457,-3.546568,-5.930031],[9.225497,6.714748,2.537650,2.255980,-2.656030,9.508804,3.159420],[3.097474,4.557242,-2.758231,7.655052,9.928451,-8.481857,-7.434651],[-6.606485,0.293662,3.027085,7.299166,-7.361035,4.565504,-3.194211],[-2.256562,4.440498,7.299219,5.337318,2.994923,9.007212,0.548357],[9.348332,-5.793643,-2.241491,4.886135,-7.364063,-6.200600,7.899658],[5.088376,1.869324,4.247547,5.761674,2.360538,7.071140,-3.937383],[2.155250,-0.662429,7.622802,8.332617,-2.004901,6.133523,5.500555],[6.907256,9.763071,9.558276,-7.776682,2.173641,4.324426,4.571428],[7.639099,9.086427,6.340762,1.852042,-0.759612,-8.460246,-2.054578],[7.069829,2.266360,-8.829348,2.425801,9.776619,1.465097,8.807599],[-4.629679,1.153888,-0.473323,-1.906882,-4.804232,-8.775261,-9.246075],[4.056421,8.931339,8.369724,2.465988,3.077258,1.905403,4.352255],[-2.250994,1.600454,1.466330,-3.565707,2.273210,3.093734,4.538756],[-6.327098,-0.059110,-6.112324,-3.896161,-9.594034,5.282907,-1.546468],[3.074497,1.098220,-1.942541,-6.444732,8.488476,-6.913830,8.062864],[-7.044923,4.514896,5.039058,-5.819885,0.722327,6.055841,8.977114],[-9.939291,5.200907,4.204110,2.275579,7.686194,6.350974,-7.322162],[4.401069,4.406257,-7.840577,-4.854277,-4.449398,3.244397,2.493136],[3.190678,-6.743833,-9.546453,9.285578,-8.403387,8.872976,-6.565848],[4.864387,-8.563227,0.303221,-2.091949,5.033673,0.104487,-3.363375]], dtype = "float64")#candidate|12770|(65, 7)|const|float64
call_12769 = relay.TupleGetItem(func_12067_call(relay.reshape(const_12770.astype('float64'), [455,])), 0)
call_12771 = relay.TupleGetItem(func_12069_call(relay.reshape(const_12770.astype('float64'), [455,])), 0)
func_10461_call = mod.get_global_var('func_10461')
func_10464_call = mutated_mod.get_global_var('func_10464')
var_12773 = relay.var("var_12773", dtype = "float32", shape = (8424,))#candidate|12773|(8424,)|var|float32
var_12774 = relay.var("var_12774", dtype = "int16", shape = (44,))#candidate|12774|(44,)|var|int16
call_12772 = relay.TupleGetItem(func_10461_call(relay.reshape(var_12773.astype('float32'), [8, 1053]), relay.reshape(var_12774.astype('int16'), [44,]), ), 3)
call_12775 = relay.TupleGetItem(func_10464_call(relay.reshape(var_12773.astype('float32'), [8, 1053]), relay.reshape(var_12774.astype('int16'), [44,]), ), 3)
uop_12786 = relay.erf(call_12767.astype('float64')) # shape=(3, 7, 5)
uop_12788 = relay.erf(call_12768.astype('float64')) # shape=(3, 7, 5)
output = relay.Tuple([call_12734,call_12759,call_12769,const_12770,call_12772,var_12773,var_12774,uop_12786,])
output2 = relay.Tuple([call_12735,call_12760,call_12771,const_12770,call_12775,var_12773,var_12774,uop_12788,])
F = relay.Function([var_12773,var_12774,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12773,var_12774,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

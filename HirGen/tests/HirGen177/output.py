import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_0 = relay.var("var_0", dtype = "bool", shape = (4, 1, 5))#candidate|0|(4, 1, 5)|var|bool
var_1 = relay.var("var_1", dtype = "bool", shape = (4, 7, 5))#candidate|1|(4, 7, 5)|var|bool
bop_2 = relay.logical_and(var_0.astype('bool'), var_1.astype('bool')) # shape=(4, 7, 5)
uop_21 = relay.sigmoid(var_0.astype('float32')) # shape=(4, 1, 5)
bop_25 = relay.equal(bop_2.astype('bool'), uop_21.astype('bool')) # shape=(4, 7, 5)
output = bop_25
output2 = bop_25
func_64 = relay.Function([var_0,var_1,], output)
mod['func_64'] = func_64
mod = relay.transform.InferType()(mod)
var_65 = relay.var("var_65", dtype = "bool", shape = (4, 1, 5))#candidate|65|(4, 1, 5)|var|bool
var_66 = relay.var("var_66", dtype = "bool", shape = (4, 7, 5))#candidate|66|(4, 7, 5)|var|bool
output = func_64(var_65,var_66,)
func_67 = relay.Function([var_65,var_66,], output)
mutated_mod['func_67'] = func_67
mutated_mod = relay.transform.InferType()(mutated_mod)
var_188 = relay.var("var_188", dtype = "float32", shape = ())#candidate|188|()|var|float32
var_189 = relay.var("var_189", dtype = "float32", shape = (8, 13, 13))#candidate|189|(8, 13, 13)|var|float32
bop_190 = relay.floor_mod(var_188.astype('float32'), var_189.astype('float32')) # shape=(8, 13, 13)
output = relay.Tuple([bop_190,])
output2 = relay.Tuple([bop_190,])
func_193 = relay.Function([var_188,var_189,], output)
mod['func_193'] = func_193
mod = relay.transform.InferType()(mod)
mutated_mod['func_193'] = func_193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_193_call = mutated_mod.get_global_var('func_193')
var_195 = relay.var("var_195", dtype = "float32", shape = ())#candidate|195|()|var|float32
var_196 = relay.var("var_196", dtype = "float32", shape = (8, 13, 13))#candidate|196|(8, 13, 13)|var|float32
call_194 = func_193_call(var_195,var_196,)
output = call_194
func_197 = relay.Function([var_195,var_196,], output)
mutated_mod['func_197'] = func_197
mutated_mod = relay.transform.InferType()(mutated_mod)
const_278 = relay.const([[[-3.957069,3.036524,-3.925887,-7.654943,-0.082634,3.681695,-5.412871,-3.237902,-1.540503],[9.721107,5.085899,-0.728600,3.987595,2.351251,-5.511378,4.586691,-6.733825,-2.175907],[8.596389,4.335897,9.164322,7.544061,-1.838214,-6.480160,4.315800,-6.108523,7.674424],[8.933566,8.299809,-4.718732,-6.066364,-8.109708,-0.425543,1.566509,-3.626614,5.636974],[6.626048,2.644835,9.468155,1.433428,-8.902479,8.815770,-2.280186,-8.990754,8.761503],[2.350682,-4.684335,6.711876,3.511985,-0.907673,9.755578,8.813602,-1.152815,-2.853289],[7.502277,-9.461763,-5.085534,7.738017,8.018221,-2.511715,-8.626641,-9.248330,-2.810871],[4.214046,-2.319721,6.258967,-8.770899,-7.019633,1.128162,-6.519107,-9.432026,-1.467378],[-5.132800,8.306849,7.717872,-4.132803,-8.029473,-7.527075,-6.078679,-5.097489,-6.549892],[-9.980820,-3.930740,0.160336,-5.042903,-7.392718,0.468598,1.345174,3.404651,6.569601],[-8.198041,-3.699870,-9.517713,3.967600,8.555333,0.494321,5.777164,-1.065374,-1.084502],[-6.429528,7.160180,-5.672893,8.392319,-7.080988,-3.884861,-9.567001,1.271162,2.258251]],[[3.815103,0.641278,-9.565858,-1.625957,-1.789754,-2.290928,8.391746,1.845699,8.973083],[3.723926,4.151048,2.286003,6.608953,4.866636,5.470200,-5.233411,9.028195,9.881808],[-9.616406,-2.549790,-4.085710,8.321805,6.243888,-1.161603,-3.654762,8.694555,3.997409],[-3.435543,-0.941133,3.148291,-5.314197,6.609131,1.389552,-3.045483,-4.763977,7.947120],[7.144715,-3.782668,2.867889,6.184027,-3.943332,-1.716276,-8.790333,-5.074438,-2.215057],[-6.153937,6.126840,-7.661570,-0.370960,-6.802230,3.218284,5.056400,2.621332,9.395762],[-2.060811,-2.243576,-7.664263,-1.431856,5.229268,5.420220,-3.201685,9.899395,5.521287],[7.331782,-0.601244,4.521072,0.602558,-4.034949,-1.403440,4.860770,-8.539141,-4.380632],[-8.724481,3.544175,5.768863,3.484175,-8.181437,-0.664358,3.525724,9.414570,2.285067],[2.057763,7.211286,3.789591,-9.514744,-7.718145,2.415124,0.433345,5.137887,8.434312],[1.431820,5.057124,1.581430,-4.615533,0.152030,-0.429929,-3.035490,6.859001,5.878850],[1.096757,3.102070,9.504535,-9.357827,0.887689,9.314270,9.338696,7.646798,8.185322]],[[-2.951597,6.969621,4.810589,-0.602442,-4.487699,-6.510091,7.589446,9.005045,1.844779],[7.172407,1.762722,-4.998668,8.714473,0.844215,-2.362882,-6.399959,-8.409157,-5.302241],[7.120696,1.074596,-8.820860,-9.280366,-1.443215,-2.677813,-6.513418,2.140607,-6.271436],[-7.784839,9.423241,2.421462,-9.158358,-0.149864,0.648852,4.056376,-3.425969,-7.885847],[-3.965620,-0.566196,-8.642663,-5.361346,-2.819602,-7.819860,6.460513,-5.276539,1.563064],[-3.379383,7.852713,-5.555529,1.121117,-9.605493,8.725826,-6.457675,5.871047,-0.433026],[-2.828153,-3.808522,-3.047658,7.473122,1.912128,0.935097,0.307100,7.828543,-9.015494],[-5.539421,1.319186,8.777153,0.734022,-5.001528,-5.364861,8.398049,1.797903,7.008543],[-5.620425,-1.396465,7.751726,-7.653198,7.528893,8.436457,-0.453103,-9.734191,-5.624667],[-7.078665,6.342971,-1.599517,5.691206,-4.246381,0.397644,-1.579032,2.904960,-9.046623],[-2.156701,3.407600,-7.952578,-5.751891,-8.240551,-5.280539,-4.632900,3.489944,0.271675],[-3.624021,3.692975,6.064224,-4.357093,-5.615675,-9.067929,-2.391188,-2.757411,0.085713]],[[9.489731,7.209285,-9.958773,-5.425481,-9.824221,-2.812703,-6.911533,-3.644960,-3.689600],[-5.119262,0.101069,-5.016273,0.794516,0.655823,-8.570566,-8.065060,-9.803981,-8.315353],[7.825830,4.169059,-6.080682,8.081809,-1.603615,-5.977074,-9.554459,-1.310151,9.511405],[9.388908,4.088061,-1.300925,1.039708,1.699911,-3.147976,-7.908497,7.985574,2.672200],[-7.478103,-6.852707,-3.478526,4.242957,1.537413,8.121681,-3.353058,-0.587765,8.167037],[7.930624,5.909459,-4.507506,-6.800280,-9.533344,-2.593774,5.997267,-4.323283,-2.019458],[-3.379156,0.010215,0.730816,4.617464,-4.282270,5.005245,-8.467929,-0.363154,-8.462869],[-8.704287,-8.202111,-2.091738,-0.251194,8.108746,4.719890,-2.112772,8.491729,9.553456],[-3.775282,-3.308701,-7.121093,-3.686571,-8.887294,7.183681,5.281377,-2.902578,-2.623333],[-2.653997,-4.408653,9.619063,0.154111,-2.115654,-2.278113,4.083321,-8.053835,6.425476],[-5.092276,8.790191,-3.234425,2.218282,-1.090529,7.433423,-1.531076,-5.644553,2.316960],[-4.816471,7.189559,4.270564,-5.648638,-0.540263,-8.295933,-2.467620,2.511780,-7.440836]],[[-7.221395,0.534531,6.833551,0.481792,-8.385290,-9.151084,7.493896,2.526075,2.077679],[-9.906701,3.294606,-8.225558,-7.310710,-5.088837,4.313758,-3.198785,-6.651088,-2.866795],[-8.719630,6.577686,9.356237,7.489246,-7.969862,1.328095,3.057748,-6.891959,-7.969137],[3.223530,0.146824,-7.136594,-9.667743,-0.944932,-6.369942,-8.453660,-5.034039,-9.027544],[8.728315,-2.864779,-6.198742,-1.026047,-9.540232,-0.118674,3.156694,5.761757,-7.440544],[5.075870,-8.294883,7.067840,3.074775,-3.883360,-6.938417,4.363727,-1.295919,0.893134],[-0.629606,-0.760855,-3.900910,0.465306,-3.580826,-2.446634,0.289822,7.206343,4.579024],[-8.386214,-9.722964,-2.591981,2.442843,4.762886,-2.978767,-2.119533,-8.377048,9.545008],[-4.671929,-3.060694,1.096699,2.957318,6.649242,1.076931,5.553753,8.895583,-3.888052],[-3.096432,6.833244,9.756888,9.726488,-9.155895,-2.144649,-4.536450,8.692912,-0.563392],[-6.729139,6.658146,-1.504865,-9.133504,-3.639949,-1.238182,-9.484506,7.228673,-2.693457],[3.409313,-9.886705,5.988603,3.637699,1.750782,-3.483066,3.331829,2.472434,-9.719179]],[[5.568259,-0.788958,-3.920681,-8.717382,5.429185,6.615709,-5.778307,6.234283,-5.194117],[-0.134461,8.416632,-1.465697,8.322567,-3.116063,-0.970643,-4.366484,4.806508,-5.733834],[8.842509,-3.930844,-9.051685,-5.558162,-1.957132,0.060287,-4.763129,-8.806527,-0.046193],[-5.852161,3.609479,-2.814477,2.664948,7.678303,4.777408,6.322335,3.966391,-6.288215],[7.044711,-0.788963,-4.520980,-4.357155,7.783884,-4.474256,-8.171376,7.194820,0.276708],[1.863947,5.978863,-9.340024,-4.923609,7.925512,1.837304,5.872658,5.731776,8.277512],[-7.342235,-4.945193,-3.263324,6.465683,4.806862,-3.391254,-9.888881,-4.490843,8.307856],[0.235732,-9.208283,0.095260,-9.926115,-3.620954,-0.680841,0.593803,3.662604,4.632299],[5.774090,-2.583261,2.009098,1.708593,5.708714,8.057784,-8.391889,-5.976585,-8.102168],[3.686211,5.401651,-0.528099,5.286637,-2.274541,2.037432,-0.998571,-2.783947,-3.208122],[-1.618723,8.821136,0.811072,-7.340679,6.018632,-0.959796,-2.408937,-4.805612,4.184345],[7.107822,1.287964,5.020912,7.822365,0.511792,3.540050,-4.138340,7.478278,6.958397]],[[-2.821576,2.334822,-5.951835,6.605936,8.007303,-9.533266,-5.136523,0.277127,0.169338],[7.453517,-1.816842,-1.256826,-9.607881,4.176054,6.445527,-3.855017,-6.674468,3.525326],[1.459745,0.824704,6.717345,9.653686,-0.309346,6.921244,7.844005,-0.915432,1.287067],[3.873142,6.777682,6.684089,0.939695,0.866224,3.724346,8.421761,4.961664,8.045331],[-1.579235,1.276526,3.836088,6.690448,6.563328,6.915754,-7.471464,-7.503899,3.853522],[-4.518185,8.592789,0.415370,0.423373,1.164394,4.655536,6.844905,6.584470,-3.733356],[9.462262,4.911806,-2.849076,5.492246,-7.960097,-9.713288,7.649973,-9.724171,-6.655609],[-3.990916,-8.028477,7.290422,-0.436632,-3.503668,9.974391,7.665431,-1.206917,7.216567],[8.635209,1.639406,-9.654957,1.285580,5.549698,-4.605195,5.907604,4.914142,-1.526428],[-7.290061,4.584855,-9.020782,4.984642,8.219220,-6.300670,-1.677584,0.168863,1.672217],[-4.133481,1.229936,4.075627,9.205954,-5.124546,-4.491968,1.633719,-5.786239,4.085165],[2.151547,-0.633592,-6.406187,4.236077,-5.837991,7.925776,-2.045493,-2.840704,0.233557]],[[4.970488,8.280222,5.976489,-7.567101,-0.600916,8.161796,5.959259,-9.692488,5.892225],[2.365803,-3.248323,0.882306,2.472838,4.453223,3.301736,1.882755,5.507681,6.519095],[6.393009,-4.031098,-3.720795,3.619445,-2.982243,3.673790,1.645646,7.481873,-9.695297],[9.209663,-7.236472,0.653894,3.849439,2.943422,4.634633,1.944199,-8.192895,-2.316978],[2.826485,3.089472,-0.068470,2.837995,8.438814,8.301926,0.157340,4.633396,7.933758],[6.051617,-6.844070,2.127352,9.273873,-0.024519,-1.707115,-0.219679,-5.782194,-1.945641],[-7.959026,-7.945895,-5.210613,9.890508,-3.952565,3.599999,-3.301634,-2.026941,8.640639],[-3.357530,-9.262218,0.988964,-6.359119,-1.264276,3.421675,1.582785,-7.757536,6.089034],[1.770504,-3.308166,1.685549,2.321632,2.707165,-1.380287,3.090006,4.968086,9.053035],[9.756700,9.140891,6.590428,-3.007973,-2.099041,-2.278941,0.141701,2.949923,-8.360604],[0.438434,-2.044534,2.597621,-7.004575,7.348695,2.417358,-1.206670,-1.320620,-4.921711],[-6.270096,-1.128491,-7.654262,-9.502818,-4.865927,0.890270,-0.253502,-1.807913,3.799320]],[[-3.781547,2.577827,-9.898803,-0.262859,0.930878,-0.964780,-0.583686,-5.462823,2.513800],[-1.460008,-5.873088,4.724420,0.279009,-0.079246,-7.315852,8.367133,1.370893,2.161318],[3.761606,-5.745369,-6.110808,3.364592,3.574429,-1.699000,-8.066706,-9.242714,0.419054],[-8.558577,-2.073981,7.623441,2.997633,1.655752,1.461313,-5.535205,-5.723839,4.959312],[0.626605,-0.926271,-5.077770,9.310026,1.172422,8.405266,-5.973807,8.517241,-6.601053],[3.295960,5.079241,0.179168,5.024956,-8.368498,-5.979706,9.526703,-8.174462,3.644446],[-7.016637,9.432518,-3.919261,-3.007091,-6.766775,0.691059,-6.132077,-2.153239,3.587936],[-1.120386,9.391310,8.999432,-1.760538,5.253578,-4.972321,4.773755,-1.744620,-1.610078],[1.164398,7.883596,-4.581222,4.276961,9.595300,-7.753264,1.991698,-5.228836,8.972153],[-2.597337,-1.589369,-3.727591,-5.989650,1.395672,-4.535980,-7.260571,-7.134919,-6.604739],[-2.703533,-8.468670,9.285881,9.831694,0.945955,-2.045030,8.765312,6.213776,-6.799540],[-5.823829,3.276651,4.359330,1.534914,-2.830635,4.054866,-9.438116,-4.560276,-3.557127]],[[7.149099,-7.724028,5.470035,-6.460310,3.911238,-5.564926,6.166267,1.752653,-7.654158],[1.781567,-9.426946,7.234337,-3.882910,5.725004,-0.488897,-0.297155,3.513478,2.775689],[6.386921,5.645626,3.753328,1.632391,-7.512545,5.524407,5.271277,-5.041281,-5.165186],[-7.401685,1.897039,0.960847,5.430581,-8.243810,-8.918917,3.202350,7.809784,5.034139],[-3.392054,0.361967,7.542739,4.260665,7.964464,-0.972688,0.768919,-0.589544,-0.954985],[2.199240,-8.212716,4.883171,2.234801,-0.819093,0.728221,3.981055,-4.177348,2.845037],[5.974707,0.580661,-9.992848,0.775038,-7.952200,1.245064,4.755299,-2.252250,-8.289614],[6.673030,-4.627192,-8.384589,8.813413,5.642124,-4.053867,3.570832,3.420878,3.109845],[-5.836395,5.983157,-1.929858,9.020464,4.251947,9.719520,0.402142,9.812780,4.433051],[-2.233563,5.233783,-1.705477,-2.164107,-1.699074,-4.331591,4.033275,-5.065162,4.433892],[4.284024,-4.252969,-1.577125,-8.496603,-0.094737,6.533749,6.840841,-1.030738,8.392661],[9.984813,-3.758602,1.156655,7.805628,5.493415,-4.836307,-5.617331,-4.899016,-1.555036]],[[4.302173,-1.193898,6.265204,6.014511,3.133428,7.343406,-5.404542,-3.997015,-1.716362],[-2.594661,1.748946,0.576311,-5.806438,1.769822,7.961597,-7.679719,7.025060,-8.692694],[-9.852874,3.405937,-7.013500,2.669593,5.878451,6.463234,8.784286,7.239392,-8.523251],[-7.607728,8.277652,2.530388,-8.830808,2.180039,-7.053067,-6.428328,1.870135,2.991025],[-9.150646,-1.935042,-0.021182,-0.572516,0.180657,-5.330217,-6.792521,5.651945,8.086448],[-6.429363,-6.512171,9.785561,-5.198584,4.933515,2.865672,8.053433,7.746405,-2.937216],[7.527899,-7.757946,-2.306306,-7.738779,2.764128,-5.252789,-1.851578,-1.204709,-3.612605],[-0.852289,0.539513,-7.528624,-3.609893,6.842313,-0.714013,3.160987,-3.150139,-3.075787],[0.148071,4.948317,-7.573828,0.689483,3.993946,5.928174,0.304804,-4.282529,-4.162047],[8.799942,-1.531641,-0.951813,-1.772285,-8.236920,7.283621,-0.691222,-6.164780,-7.463953],[4.924048,6.840144,1.800939,5.805002,-6.774698,-0.357623,-0.893329,5.548513,-5.026232],[0.862266,-2.023570,1.456815,4.474503,-1.428676,1.801284,-7.725484,-7.473727,8.595085]],[[5.149544,-3.162469,-9.608726,-1.370229,-6.474222,6.643932,7.696012,-2.668522,1.647883],[-8.947854,5.045222,-4.474063,0.858743,4.880916,-5.998780,8.863631,2.283366,-5.169376],[-8.553323,0.375045,-0.721612,1.543808,8.043983,8.972197,9.697658,8.187730,-5.225758],[-0.493413,6.636356,6.232914,-2.533294,8.599723,-2.934823,-7.044846,-9.800258,-4.030540],[-7.258416,-3.668181,1.070583,-8.027127,3.553455,5.228249,6.729091,6.109169,6.557809],[3.344371,-0.455747,-5.046978,-8.275444,8.700011,-4.540170,5.008954,-5.752420,-3.011850],[-3.978329,-5.332383,0.989259,6.859272,8.911893,6.834836,-7.638874,1.869380,6.234378],[9.760017,-1.698962,-5.348583,-1.248425,7.401723,9.534012,-3.571409,7.863088,-3.152191],[-4.754028,4.529834,-4.384535,1.089836,7.340328,0.625704,-3.084823,-3.323711,-6.621513],[7.160156,5.623045,4.178747,-8.601633,-0.873382,-9.747241,-5.428662,-5.258979,3.591313],[-3.751289,4.555509,8.689261,-4.711193,-7.253755,-3.694758,9.081786,6.341896,-1.517606],[-2.581595,5.892939,-4.031133,4.729741,-7.690387,8.848081,-7.145640,-8.971773,7.720178]],[[0.375482,8.198007,4.971839,-0.877017,7.178673,8.755016,-7.499978,4.534611,-0.641596],[0.378363,-7.426932,4.339794,2.581888,-2.879182,-3.416949,6.113243,6.279164,8.366071],[-2.898486,-5.542498,2.037697,-3.754080,8.165520,6.753377,6.441654,4.556664,7.829861],[5.886103,-2.737638,-1.831803,-0.972242,-1.116411,3.649055,-8.249334,7.166784,2.709292],[-9.320297,-4.653402,6.234059,0.710982,2.468691,2.074222,1.206640,6.252462,-0.278005],[-6.676273,-4.215742,-7.782538,-7.065434,3.239324,5.041600,5.819609,-2.063212,2.024619],[4.809838,7.424237,7.170872,8.511896,7.245870,6.773610,8.227365,-6.728648,-3.916301],[2.341794,8.156282,2.835730,4.571429,-1.031633,-5.378331,-0.045820,-0.114031,-1.390158],[-5.282727,2.367221,0.830877,9.430606,-3.247219,-7.051375,-4.580269,-3.056389,-3.620522],[9.594020,-3.956529,-6.064644,2.167764,-7.806332,-3.071872,-5.664745,6.750888,-9.205136],[-6.084028,1.949951,-7.197016,9.811845,5.641216,-1.166179,4.295225,7.322240,-2.221835],[1.435909,-0.807104,0.310106,-5.848291,4.760554,5.914229,-9.416066,4.291915,3.835220]]], dtype = "float64")#candidate|278|(13, 12, 9)|const|float64
uop_279 = relay.asin(const_278.astype('float64')) # shape=(13, 12, 9)
uop_282 = relay.erf(const_278.astype('float64')) # shape=(13, 12, 9)
func_193_call = mod.get_global_var('func_193')
func_197_call = mutated_mod.get_global_var('func_197')
var_285 = relay.var("var_285", dtype = "float32", shape = ())#candidate|285|()|var|float32
const_286 = relay.const([[3.018160,-5.739198,0.616309,-7.006568,-4.574884,-6.803219,-5.048751,-9.326475,9.887697,1.813904,2.057910,2.091400,3.930445,-9.097167,3.268273,-4.003047,-6.413582,4.635634,-1.641779,3.926250,-7.799643,3.448883,1.174168,7.155824,8.320987,-8.145700,-3.354636,-3.737978,2.002570,1.158654,-1.485991,6.156951,-7.210835,-1.441943,-3.834982,-4.494999,4.825376,1.271004,9.370980,9.649815,3.182432,0.218262,-7.020800,2.595603,-9.394027,-9.963480,-3.238682,6.957700,1.929442,6.791425,0.563422,-3.099884,-6.980714,8.899915,-5.654758,-6.962720,8.635214,2.839743,3.120267,6.549874,7.535305,-6.673553,5.263196,9.798260,0.514930,-7.074531,-8.628934,-1.100649,-4.584850,-5.299386,-6.896816,3.474316,-6.661503,4.492519,6.639048,-2.120304,1.348019,4.582131,-0.850440,0.668344,7.524911,0.980928,-0.888762,-1.754857,7.059033,7.051788,5.492898,6.875362,-2.828148,-5.862679,8.827501,-8.946956,2.491454,0.278204,-5.568319,-7.486070,-7.559316,8.172610,1.643545,-7.732452,-3.567870,-5.972627,-9.146675,-0.381452],[5.741531,-2.218629,5.348138,6.469457,-7.163861,-0.548110,5.672155,9.502997,-5.488624,-2.968833,-8.574980,8.982952,-9.409738,3.597751,3.244755,7.023730,-9.468269,-7.829525,1.629793,-5.195978,-1.693543,-3.950105,9.515446,-7.460034,9.297978,0.795832,7.284820,-8.909199,3.301656,-3.429681,0.293852,9.273352,8.630897,7.930976,0.321644,7.257784,4.466244,8.235453,2.569950,-3.738165,-7.262231,-2.721764,-9.836359,1.859825,-8.169718,1.450125,-6.532564,5.283877,-3.191139,-8.252374,6.642838,6.628713,7.256882,2.566241,-5.493223,5.357591,-8.107242,-9.473760,1.401171,-5.413011,4.601842,4.568151,-3.631851,-8.303486,-0.395367,-5.971894,-3.170755,-8.768340,-2.846526,-1.267826,2.515896,3.100298,5.880352,0.747245,5.257522,9.993101,4.014157,-5.962761,4.901083,-5.894025,0.707297,4.925836,-6.938270,-6.691735,-1.255975,-1.829009,-4.282858,8.886398,0.069992,-2.221149,-1.201877,-2.107889,2.176603,0.174702,7.280260,-7.485449,-9.249742,-2.359173,2.425866,3.252952,4.697449,3.534336,1.025745,4.998070],[1.753324,8.756153,9.697375,7.235573,4.861302,-0.746502,-5.883849,1.880300,-8.793656,-7.587430,-6.515888,5.297518,2.071960,-0.312895,1.935589,1.326406,4.164659,-0.934876,-4.915546,2.694787,-9.937339,-2.116840,-2.824626,3.294526,7.721783,-6.313225,3.811934,2.256265,3.131803,6.597821,-9.988063,8.743137,-6.001059,-1.253128,-3.299254,-0.068284,5.477861,4.191282,-2.365419,2.681181,-5.755681,-2.673518,0.427205,-6.554214,5.366124,-4.806522,2.801605,0.523797,2.491017,-1.625344,-0.980000,2.191425,-7.543855,2.802366,3.971717,-1.632427,7.024478,-5.944539,2.112527,7.487238,-1.323453,-4.858856,8.266493,1.159316,2.789824,-0.996531,-5.818696,-4.006212,4.599731,-0.013162,-5.402021,-1.226043,7.127426,-9.641264,-7.962708,5.508541,3.030500,-6.500013,6.974938,-6.493039,9.176448,-5.445708,-1.329039,-8.438594,4.454776,-1.832035,-6.483711,6.722355,9.572499,-2.969741,5.070094,4.445642,7.805219,8.271086,0.195940,1.823409,0.784894,3.586927,-4.952709,1.422633,-7.142960,1.527187,-0.916713,-7.397967],[3.068810,2.847492,-4.487390,6.824230,-8.506388,-6.584487,-7.988969,3.722711,-8.128141,2.538399,-7.762872,-5.334625,9.424763,6.125849,-1.816263,6.964600,-2.744619,-2.831995,8.430558,-7.182701,-0.119316,-0.530417,8.681344,-0.150520,-3.032904,-2.891367,-4.469896,7.516133,6.454430,-2.181626,-6.796299,5.182860,-2.175790,9.681185,4.573685,-4.042119,-1.392503,2.329817,-0.746605,3.650971,5.366917,5.964549,-4.274873,5.228150,-7.732022,6.450950,-2.285334,4.097730,-8.612784,-3.401771,1.959156,-3.647111,1.832462,3.639517,6.872877,-0.324256,-1.855745,2.296199,-2.779714,-8.205450,-4.016041,0.699213,-1.832145,9.141391,9.447755,3.243170,-1.414848,8.023364,0.883566,6.645968,7.472265,7.711675,-0.636180,1.924197,-6.857791,5.490809,3.640561,5.291146,5.104753,5.903705,-3.737818,4.367378,-1.939527,1.233265,6.493406,-3.865216,-3.437364,9.061787,-9.424633,-3.107879,-4.001913,5.727335,-8.801121,-5.956782,-7.414840,6.565790,-5.521290,5.720496,0.575375,-4.974685,-4.141434,5.108930,-7.704636,1.983382],[4.264249,6.379538,2.583800,-4.235086,5.814985,5.683664,-5.086280,7.376205,-8.638852,7.061357,7.976782,-9.886275,-7.703480,-7.950755,-8.949158,-0.179867,3.972297,-5.656672,-0.261297,1.421680,3.828493,7.098210,8.743608,-4.540734,-8.382626,2.942456,8.197399,8.652876,0.047361,-2.933832,6.351837,-0.350492,4.243657,4.193125,7.482840,7.575696,8.234445,-1.314531,0.067452,-8.419430,-0.306881,9.218360,-9.211306,0.853280,8.853437,1.711271,-8.893589,5.241496,-5.303137,-7.807363,9.184213,-4.668631,-9.477426,2.940418,0.967167,9.021299,8.591835,6.709437,0.437217,-1.792639,0.580748,2.204942,4.742488,1.626989,7.857753,8.368720,1.968965,-7.142907,-6.956864,-7.343134,1.280785,1.833027,-2.089776,-5.334242,6.548443,-6.047562,4.949706,0.785225,4.813792,-9.682896,-0.497340,9.317619,-8.151629,3.388016,-3.857241,-2.648163,-4.327867,-9.467684,9.652106,-5.390732,2.590688,8.939597,1.344310,5.851339,2.920830,7.950623,9.664106,7.854352,-3.042011,-5.768952,-1.207622,1.468470,-5.025027,-4.236621],[-0.498549,2.527144,4.925745,-5.197615,1.833681,1.349307,-2.406338,-4.136761,-6.283774,7.302879,-1.363897,4.045582,-9.990871,1.026090,-3.642117,-2.896950,7.692637,1.072885,-0.912376,7.426275,0.574432,-5.579620,1.282587,-4.524032,3.418726,0.091770,6.606519,-5.799303,0.810839,6.657660,3.164646,-3.523376,6.746326,-2.472043,-1.483840,9.134675,-8.928679,6.917669,-5.703663,8.124833,5.045036,1.183611,0.710944,-5.414961,-9.949503,5.392889,-8.320325,-5.750545,4.804247,7.185687,-3.664079,6.510124,8.348088,-7.147673,-7.809143,2.073038,-9.145662,9.813699,-9.336083,-0.436117,8.624091,2.156402,-0.880391,8.514542,-1.756942,8.233284,3.917869,5.831115,2.295967,-7.166320,-7.349393,9.467929,-4.477935,-6.742331,-4.180669,5.002928,-7.817677,8.854748,-8.284727,-7.939813,-9.174898,3.986831,0.349267,-7.723354,0.428288,-9.176371,-6.221025,-3.895963,-4.359015,5.628849,-0.080746,-7.608387,0.587271,5.495111,-6.687807,-2.793232,1.772618,-9.255475,5.255658,7.501409,8.137535,-1.723284,6.297963,2.481569],[7.950646,-7.292620,0.490054,9.018069,5.205809,2.502253,-1.539635,-6.948417,8.133504,-6.599057,8.583235,0.319254,-8.956075,-2.735072,2.179573,9.537776,-2.718706,-6.716680,9.008438,9.796502,-7.024663,-8.889051,-6.564090,-5.567019,-7.969628,-5.336929,-9.484382,-7.759231,0.980666,-2.158791,-5.090309,-8.581273,0.236331,9.138627,-6.700478,8.269905,1.373018,9.255056,-6.693316,9.900012,5.318791,-4.700066,-2.973438,-1.297439,3.332915,-5.097784,-5.603186,0.345756,8.385934,-5.231582,5.845629,-5.371827,-6.427624,-9.551768,6.811490,7.058195,-6.365962,-3.223728,-0.109668,-0.489820,9.434382,-1.971404,0.891590,0.205505,-4.831043,-9.854629,-7.867019,-2.141248,2.337008,7.772898,-6.009125,5.655756,0.716555,7.782511,-6.019216,9.243416,-0.702274,3.241057,7.699952,-0.478219,0.281685,0.486269,8.540149,-9.861036,2.419091,9.163333,-0.857109,-2.803773,-0.561186,2.246145,2.678278,-1.213320,-9.651370,-2.500405,2.274848,1.814634,8.563141,-4.842101,-7.845863,9.395769,-9.829828,-0.248918,2.947623,-5.070880],[-2.306373,-5.636090,7.678693,-5.424414,5.554481,7.880256,3.816545,0.337313,-6.587009,-6.176540,-2.180344,-6.138607,-8.918989,4.097536,7.103598,-1.895098,4.068798,0.147799,9.314519,5.151022,-2.419982,2.651557,7.045726,5.336511,-6.981063,2.120444,8.501587,-8.340453,-2.334084,-0.741418,9.953915,1.867473,6.802689,8.376698,-8.681569,5.930560,-4.643115,5.208132,2.644649,1.166202,-1.985492,-3.357038,-3.933989,1.966350,-7.797469,-7.369173,-9.384922,1.675701,-9.901110,2.709508,1.844776,-2.643501,1.749266,4.662717,-0.369395,7.902943,4.969844,-9.991198,-2.784116,-9.597566,9.042238,-6.732973,6.632527,-2.947351,0.068395,-1.070599,-8.687624,-0.899222,-2.685711,1.597509,-3.391492,0.544431,-0.886589,0.690521,-6.402181,-8.405526,-8.106065,9.739680,-6.496145,9.352152,4.617888,-4.529477,-3.039707,-2.243461,-3.436261,7.173026,-2.070301,2.591873,1.199046,6.836256,-2.965163,9.760113,-4.418977,-2.557918,-4.309482,-3.825574,-2.775924,-4.252688,7.965183,9.747173,-6.981024,-8.838971,-6.646874,5.118484],[-1.931885,4.643257,-4.990346,8.685480,5.339177,7.070566,-8.914689,-4.115094,-7.085460,8.919162,3.359941,-2.754693,-2.840551,-2.662099,-2.746588,-5.589715,-3.409683,5.605797,-2.359722,3.361211,1.942612,-5.552609,7.529492,-2.093690,6.423047,0.670316,-7.913804,-6.966537,1.852692,5.102087,-7.587652,-0.051618,3.963896,-4.654322,5.960086,-7.285210,-9.058142,-4.776339,7.793908,-4.642515,-4.852462,3.305950,5.811085,9.862263,-2.983336,-2.459619,-3.792121,8.746105,-1.236096,-1.997658,7.979736,-4.899107,1.515766,0.677182,3.060859,4.104078,-1.875800,9.158716,-4.174053,-9.482408,0.836286,7.071187,3.506538,-8.357692,-8.662030,3.968706,5.261858,-1.376921,-9.800791,0.254703,0.776419,-9.363446,9.545588,8.702185,-7.257471,-4.325520,-5.867639,-8.042429,-1.612490,7.926673,3.397883,-7.426908,7.193691,1.547223,6.519659,5.823219,6.674760,-8.804978,5.222774,-2.172136,9.603103,-2.035778,-0.303879,8.041736,8.027447,-9.271098,-8.488221,9.208227,4.833288,8.414076,7.837037,0.619824,-9.622194,9.092487],[0.116409,-4.060007,-1.668286,-4.824681,0.412165,1.229917,-5.531912,2.364448,-5.165239,-5.279414,5.823903,-1.574125,9.162814,0.661327,0.603502,9.368710,-7.521195,2.144144,-4.695998,8.161192,-0.468938,-3.415817,-1.102508,6.032524,-4.637352,-0.486650,5.494132,-6.930234,-1.262883,2.057675,-3.463772,-5.015177,-4.406464,7.277990,6.183177,-2.975664,3.162279,1.965357,-7.219443,2.118790,-1.755528,-7.029242,-3.329055,-6.604453,-7.019087,8.081704,1.157634,2.171210,2.687261,-6.758397,4.828955,-3.404143,-1.473282,4.008186,-2.135378,1.143463,-6.260384,6.717059,0.173185,-5.256638,8.074219,-2.317478,5.425699,-4.295099,1.919208,-9.426260,6.970565,9.555195,-9.807831,-6.448053,1.570283,6.883996,7.146875,8.781093,2.861718,-7.209099,3.961954,7.394395,-6.281895,5.794514,-7.614885,-6.520740,1.539305,9.021124,-4.140416,-0.824504,-2.552624,-1.285851,-1.544509,-2.776383,3.011618,-9.778370,9.805748,2.190278,4.402949,2.817185,-8.271889,5.995493,-7.723207,2.208403,-8.638755,-4.604027,-3.286757,-8.606430],[-3.672828,-1.634544,2.385585,-1.614389,-9.425617,-1.910755,7.617149,3.718281,-3.379742,9.349351,-4.868845,2.032515,-0.498635,4.533573,-0.366913,-7.787623,-3.770989,-9.127600,6.791641,-8.320405,7.478483,-7.288148,4.791698,-2.994185,-6.801839,-3.007638,9.015208,-0.360819,2.382807,-8.877411,0.140437,0.545915,8.873269,-0.517684,-4.754791,-2.263506,4.604132,-0.905754,-7.264626,-2.397529,-0.964559,1.480645,5.780642,-4.351651,0.119527,-5.437772,9.593251,-4.874421,-1.139809,3.910906,-2.769285,-1.359440,-1.476132,-5.829701,5.817967,-7.310766,8.409253,0.350443,6.503378,6.774692,-1.096936,0.757688,7.927400,-1.246381,-3.570740,8.535324,6.626204,8.714817,-3.336043,7.788463,-9.739644,-2.912181,9.367157,-5.726652,5.310264,-8.684866,-4.734481,9.568501,0.439824,5.323773,4.571022,-0.378292,-5.339803,2.176693,5.112153,-8.525164,-0.123832,4.543634,1.401603,-7.907162,-3.842186,-2.458454,-9.323867,-6.101527,-6.056732,-5.925082,-8.821115,-9.819324,-0.158445,-4.846625,-8.072135,0.758292,3.671681,3.934119],[7.834550,9.773740,-5.177486,-6.333061,2.657700,-6.153272,-9.189760,6.850118,-8.148212,8.618012,4.259199,-7.601016,-3.786663,-5.072403,7.434022,-9.313401,1.422705,-1.673812,-7.600759,9.556029,3.339812,0.880508,-5.163590,1.503733,-2.648954,7.380959,-6.140599,-5.307140,9.064851,-6.453810,-9.283100,5.648485,-7.200987,3.838415,-0.555863,-3.008161,-7.588256,0.590934,-0.357179,2.875103,4.375854,1.680242,2.844544,6.403180,-0.791851,3.683343,-5.639676,8.092909,-9.436418,7.264332,2.779509,-9.167690,1.243988,-8.496659,-7.000365,0.737162,-9.403381,0.446346,-0.337539,-7.796332,-5.056177,3.681728,9.359562,7.483101,6.938784,-9.896120,-0.201235,-4.310206,5.089444,-5.873639,4.169353,2.687275,-2.248365,1.175570,5.943573,4.900626,4.697071,7.387782,4.703616,-8.809991,9.042471,4.993032,3.049928,-4.005330,-5.952658,3.315535,-8.878499,7.100488,9.888083,7.819427,7.950327,2.748858,3.190073,7.398189,2.394408,7.164653,-0.802179,4.322789,-3.003559,-5.773385,-6.245178,-1.913916,3.079402,4.302038],[-7.618097,5.243214,3.632154,-7.200787,0.621177,-1.944899,7.203822,-6.598935,-5.010491,-3.069466,3.723059,-3.724867,-3.241904,-6.694039,-2.607708,-0.194515,-2.891366,-8.764618,-0.290301,-9.542831,-9.505344,1.869597,-7.653762,-3.436779,6.091648,1.601166,1.143245,-3.714237,6.444191,6.052256,-8.441427,-0.777407,-2.002126,-3.820027,-9.886357,-7.176234,5.060767,-6.058485,9.174748,8.740064,0.332338,3.342874,-1.120476,-3.246079,-2.196827,2.257311,-2.252231,5.618429,6.837096,5.438088,-4.381870,-1.040200,3.139916,5.413261,7.970711,5.997077,-6.268508,-4.474619,-2.896917,-6.084824,-1.292266,0.986863,3.746404,2.239835,6.992513,-1.327037,0.762787,8.188187,-8.729987,0.485197,1.251356,-0.020371,-8.146682,-1.343538,-4.830799,7.694905,7.211597,1.687232,-3.126830,1.724497,6.666193,0.463984,-6.778883,-8.987643,-6.913190,4.769478,-4.344049,8.047373,-2.125379,-9.892193,-2.091628,9.927503,-6.934070,-1.102178,-2.393103,-0.975143,-3.475442,-3.684914,6.771453,5.541550,-3.981546,0.811893,-3.837881,7.057789]], dtype = "float32")#candidate|286|(13, 104)|const|float32
call_284 = relay.TupleGetItem(func_193_call(relay.reshape(var_285.astype('float32'), []), relay.reshape(const_286.astype('float32'), [8, 13, 13]), ), 0)
call_287 = relay.TupleGetItem(func_197_call(relay.reshape(var_285.astype('float32'), []), relay.reshape(const_286.astype('float32'), [8, 13, 13]), ), 0)
func_64_call = mod.get_global_var('func_64')
func_67_call = mutated_mod.get_global_var('func_67')
var_294 = relay.var("var_294", dtype = "bool", shape = (20, 1))#candidate|294|(20, 1)|var|bool
var_295 = relay.var("var_295", dtype = "bool", shape = (5, 28))#candidate|295|(5, 28)|var|bool
call_293 = func_64_call(relay.reshape(var_294.astype('bool'), [4, 1, 5]), relay.reshape(var_295.astype('bool'), [4, 7, 5]), )
call_296 = func_64_call(relay.reshape(var_294.astype('bool'), [4, 1, 5]), relay.reshape(var_295.astype('bool'), [4, 7, 5]), )
bop_299 = relay.not_equal(uop_279.astype('bool'), relay.reshape(const_278.astype('bool'), relay.shape_of(uop_279))) # shape=(13, 12, 9)
bop_315 = relay.bitwise_xor(bop_299.astype('uint8'), relay.reshape(uop_282.astype('uint8'), relay.shape_of(bop_299))) # shape=(13, 12, 9)
func_64_call = mod.get_global_var('func_64')
func_67_call = mutated_mod.get_global_var('func_67')
call_335 = func_64_call(relay.reshape(var_294.astype('bool'), [4, 1, 5]), relay.reshape(var_295.astype('bool'), [4, 7, 5]), )
call_336 = func_64_call(relay.reshape(var_294.astype('bool'), [4, 1, 5]), relay.reshape(var_295.astype('bool'), [4, 7, 5]), )
uop_352 = relay.sinh(bop_299.astype('float32')) # shape=(13, 12, 9)
func_64_call = mod.get_global_var('func_64')
func_67_call = mutated_mod.get_global_var('func_67')
call_363 = func_64_call(relay.reshape(var_294.astype('bool'), [4, 1, 5]), relay.reshape(call_335.astype('bool'), [4, 7, 5]), )
call_364 = func_64_call(relay.reshape(var_294.astype('bool'), [4, 1, 5]), relay.reshape(call_335.astype('bool'), [4, 7, 5]), )
func_193_call = mod.get_global_var('func_193')
func_197_call = mutated_mod.get_global_var('func_197')
call_384 = relay.TupleGetItem(func_193_call(relay.reshape(var_285.astype('float32'), []), relay.reshape(const_286.astype('float32'), [8, 13, 13]), ), 0)
call_385 = relay.TupleGetItem(func_197_call(relay.reshape(var_285.astype('float32'), []), relay.reshape(const_286.astype('float32'), [8, 13, 13]), ), 0)
output = relay.Tuple([call_284,var_285,const_286,call_293,var_294,var_295,bop_315,call_335,uop_352,call_363,call_384,])
output2 = relay.Tuple([call_287,var_285,const_286,call_296,var_294,var_295,bop_315,call_336,uop_352,call_364,call_385,])
func_386 = relay.Function([var_285,var_294,var_295,], output)
mod['func_386'] = func_386
mod = relay.transform.InferType()(mod)
mutated_mod['func_386'] = func_386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_386_call = mutated_mod.get_global_var('func_386')
var_388 = relay.var("var_388", dtype = "float32", shape = ())#candidate|388|()|var|float32
var_389 = relay.var("var_389", dtype = "bool", shape = (20, 1))#candidate|389|(20, 1)|var|bool
var_390 = relay.var("var_390", dtype = "bool", shape = (5, 28))#candidate|390|(5, 28)|var|bool
call_387 = func_386_call(var_388,var_389,var_390,)
output = call_387
func_391 = relay.Function([var_388,var_389,var_390,], output)
mutated_mod['func_391'] = func_391
mutated_mod = relay.transform.InferType()(mutated_mod)
const_417 = relay.const([[[3.187066,9.939205,-1.744072,6.009166,5.313850,9.612540,-3.434906],[-8.190934,3.671450,9.925609,-3.547622,2.568796,-1.136063,-7.116015],[-9.827799,6.875464,-7.984286,-0.566968,6.491835,5.606739,-6.118026],[5.819319,-8.863918,-1.995008,2.442807,-0.061993,2.290543,-4.053776],[5.689811,4.445698,-6.019138,-2.293520,-6.299307,-2.796500,-1.488441],[-2.564254,-6.962645,3.211708,5.780704,5.662126,9.585871,6.742524],[5.529483,-6.194199,-1.170471,-1.377431,-5.653527,3.766678,2.641490],[-0.795045,5.914714,8.394604,-5.877526,4.726473,-6.466792,1.688526],[-7.122311,-8.380007,-4.973161,-0.667933,9.549534,4.741270,2.728382],[-1.740433,-1.329041,-2.776898,4.427224,-7.469692,-6.238414,2.249471]],[[-0.660876,6.665376,1.808782,-5.578305,-5.575778,-2.713095,8.606847],[-5.176889,-6.304124,8.688101,5.248478,6.617985,9.194754,5.688728],[0.324652,-1.151238,2.807582,-0.528937,-9.919315,-2.062891,8.213912],[-4.412548,-2.129639,-5.511415,9.855415,-3.398120,0.707009,9.618439],[8.333808,6.036481,9.286480,-8.608343,0.762479,-4.339990,7.301464],[-3.860213,4.920392,4.474652,8.709633,1.524181,8.105842,-1.193201],[7.834544,-4.170319,-4.577241,7.302831,9.203001,-7.299211,-0.554160],[-8.453488,2.819654,-9.395632,7.447652,-2.605631,6.123909,8.363337],[4.214068,-4.617835,2.591213,9.087033,-7.814170,-5.439834,-3.084723],[-2.168876,6.238505,-2.940337,4.556830,4.532994,-5.959574,-9.379959]],[[4.363424,6.548197,1.542231,5.045468,-2.122834,-1.949458,4.783444],[-0.487987,3.743821,-5.955033,-1.076180,0.309171,-6.431043,-4.902776],[-0.518689,-2.070105,5.741038,5.529269,4.977096,2.968301,7.479828],[-2.440476,-7.954088,9.661216,4.629422,-1.497311,-6.133838,-0.325329],[3.538114,-9.752050,0.670567,9.190663,-4.429099,3.929743,-8.929918],[8.048580,-0.543210,-0.376045,-4.109464,-1.194572,-5.699924,5.251950],[-2.467056,0.865595,0.316374,6.595222,-2.487199,0.328740,1.546966],[3.118860,6.582291,-6.180364,-9.637065,6.576588,-0.295204,2.689787],[-2.326300,8.975556,-2.761072,-0.750649,-3.011692,-3.315105,7.921363],[6.606903,-8.535751,-8.874057,7.280299,4.899570,4.412304,0.633365]],[[-1.753159,-5.932400,6.400496,9.483377,-7.707838,8.759485,7.686595],[-4.899988,1.292149,-1.713131,-9.200045,-8.066343,0.553955,0.851474],[-3.240319,-7.835530,7.178309,8.430598,-7.232419,-8.995301,4.137316],[-7.574027,6.696289,0.585030,-4.869725,-7.604207,-5.582302,8.473929],[-6.203056,-0.981720,0.844842,7.672010,-6.982944,9.465267,8.268119],[3.072626,-7.298734,-4.226969,-3.527140,-4.411670,4.579852,4.148021],[7.821039,9.713731,-0.863545,-7.015706,-9.802893,-6.937854,4.676605],[4.989960,-2.911453,8.973903,-1.361474,-3.342762,1.063154,-2.519374],[-4.333050,-7.972341,-2.617426,7.392825,0.643600,-0.882505,-9.657970],[-8.571648,-6.179154,-5.630371,4.158728,2.647902,2.848734,-4.237208]],[[3.915166,2.873779,1.978900,1.200966,1.476584,-8.027531,2.839762],[-9.209267,3.173249,1.357183,3.668674,-4.646343,0.691496,-9.150249],[-7.608423,7.981436,8.322957,7.339913,-6.281743,-5.478065,6.045669],[-4.474800,8.506498,-2.531041,-6.417497,5.884870,-5.388906,-9.237293],[1.100485,-5.075391,4.232439,8.925259,0.460133,9.872041,-5.904211],[7.139487,-6.650275,-2.143717,0.077749,1.055474,-5.578522,4.819605],[-1.134808,-9.029653,-0.697534,2.526117,-6.054653,8.309601,0.267919],[8.025333,-4.826799,-3.184355,-3.734913,8.025771,4.646490,2.817790],[1.111325,-3.758981,-8.162153,2.819986,-9.630643,5.505998,-3.667242],[-5.876112,9.581651,5.725181,-6.623987,2.891053,-1.054925,-5.156907]],[[0.166392,8.519846,-8.123718,-3.728831,-3.519202,-8.911848,0.598218],[3.879308,-0.364860,3.375803,8.007990,3.091957,-2.527096,-4.416040],[9.643432,9.258946,6.277615,1.778264,-7.164839,-0.820104,-2.990597],[2.043850,-6.743953,6.833800,-3.302229,9.568081,3.276996,-8.414133],[6.721023,-9.035837,4.124553,3.501856,-7.088098,3.851107,-2.897600],[5.733103,-3.464914,-0.513185,8.578721,0.124776,1.096367,1.510524],[5.933734,-2.156337,-7.636844,-1.396843,-9.222615,-8.532792,-4.444555],[-0.738300,-6.918942,0.765024,-0.618424,3.280209,4.853644,-6.951603],[7.795320,5.415901,0.579646,3.668867,-9.386358,2.808890,9.895809],[4.755648,8.644971,6.731017,9.408784,-8.524481,-3.963299,9.753346]],[[-5.084421,-7.765508,9.953394,6.116631,-6.823061,2.630499,-6.135393],[3.557024,-5.613656,4.860488,-9.882061,9.420045,-6.741503,-4.133218],[-2.673461,-4.220813,6.079748,-9.050154,0.356643,1.757157,5.640741],[-5.746491,0.532974,7.405588,9.349432,-4.804201,9.430227,4.774912],[6.378487,7.675071,-2.796785,8.587686,-1.637710,-5.738341,9.735091],[8.243860,-0.635585,-5.650098,-9.313813,-8.298232,-9.203409,9.895899],[-9.453685,4.309824,-4.469983,7.468897,3.073037,-4.884182,1.832817],[1.142152,-9.866112,1.855804,-4.910203,6.982255,0.297043,-3.861861],[-8.386674,-0.900311,7.971868,-7.955256,-7.577658,-9.351202,-0.285686],[6.897664,1.751938,-0.196914,-5.417559,8.732111,1.689570,3.287920]],[[-6.435405,6.033151,5.661764,0.255796,7.091403,8.976748,-6.093863],[2.765242,-9.424740,-7.619335,7.990701,-9.055659,-9.940268,7.501163],[-2.755739,-7.352248,-6.074370,7.040692,5.874222,-5.453128,-6.872952],[-6.447257,0.358898,-9.787984,5.436130,-2.150712,5.935679,-7.077651],[-7.287815,-4.090839,-6.147991,9.188308,-6.289690,-4.506998,5.924607],[-0.294889,-2.008801,-8.859321,1.103880,-6.997930,8.638232,1.744459],[2.542694,-9.327937,1.258557,-3.376906,-0.553204,2.907502,-9.639736],[-8.657047,-9.196592,4.767667,-2.647899,4.181178,-8.795221,-3.799552],[-1.671113,5.786588,7.206464,4.596302,-2.047818,-1.567812,9.163122],[6.483221,2.265037,2.171419,-7.655621,6.014081,0.810614,-7.329670]],[[-1.909173,9.912602,1.319731,-5.027396,7.819858,2.970023,8.424683],[-8.203201,3.323315,-8.149117,9.769629,3.191072,-2.180195,-0.199774],[0.747412,-0.834821,2.145821,-1.595493,-7.355221,5.795303,-1.283428],[9.080287,-1.203575,-6.056294,9.991408,7.088203,-4.194496,-0.980817],[8.945953,-0.385655,-5.981111,-6.444813,1.880097,-5.032457,0.506432],[8.977477,-0.954171,7.070719,-3.219552,4.519030,-4.108376,-5.171863],[9.616530,5.432279,-2.596553,0.162571,-8.504812,-9.911539,-9.410735],[9.799905,0.292865,7.876422,5.809676,-5.777823,-9.092326,0.344340],[-5.715846,0.910492,7.025710,-9.724891,3.650024,-6.352292,8.908289],[7.178688,8.807407,7.704827,3.704577,-4.968158,4.629545,-0.932574]],[[-5.661974,-8.109766,4.425510,-7.794023,3.998175,-2.435998,-9.727384],[-4.941281,-8.642999,8.292101,4.202229,-8.745795,8.914410,7.752087],[7.667539,-1.823773,-7.781033,9.807488,4.655482,-6.858709,-4.568223],[5.318756,5.261006,1.624499,4.082533,3.848071,7.071133,8.771124],[-3.131846,-3.575282,-2.711969,-5.798467,3.224435,-8.560990,2.598093],[7.260777,-1.105676,7.852951,0.265936,4.081179,9.134960,8.696779],[-1.457972,-0.176762,0.851679,-5.404658,0.558447,-6.145658,-6.401233],[3.106302,3.883678,-1.354244,3.720679,5.756432,-1.414374,3.211248],[2.110841,-6.111285,6.098977,3.693298,3.747137,-4.323745,-7.605311],[-6.310109,-8.827121,-8.891350,-1.569193,5.397692,-0.828515,-8.733097]],[[0.015275,9.726366,-0.180237,-7.327890,-7.163916,7.660490,8.754771],[-4.790073,-6.611446,0.443757,7.426912,0.119182,-0.203717,7.771356],[8.358111,8.959800,-0.348882,-1.860587,-8.939470,-9.745963,-3.301335],[3.703854,-6.004412,8.870303,-0.080567,7.753148,-0.832293,8.909619],[9.522885,-6.968770,3.603036,4.106322,-6.151750,-9.397805,-1.861541],[4.106705,-4.858142,-0.717797,-2.132641,-0.679691,-6.631743,-7.760568],[-4.864643,0.961366,2.665238,-9.267066,4.399926,-7.473230,7.356252],[8.256122,0.302225,-5.025549,3.168289,-9.991826,-6.948835,-0.456686],[-9.986518,-7.391609,-9.585512,-6.857321,8.458918,-6.273419,-3.446074],[-4.419408,-4.438755,8.887739,-1.073938,2.862178,2.738721,9.296815]],[[-3.470581,-2.882315,7.794039,2.360467,9.277222,4.753958,5.669554],[8.341486,-4.572690,0.188167,8.727307,-5.432503,2.138532,7.611147],[-6.711844,-3.029750,-9.221324,6.274295,9.088772,-9.254679,2.541149],[1.579932,7.305842,-0.013840,-5.084708,-9.343780,0.221124,5.778160],[4.916158,4.058992,-3.133285,-6.847571,-8.225093,-9.009731,5.135471],[-6.405737,-5.206074,1.993336,4.765084,7.419538,5.646234,6.335297],[-4.978048,2.561982,-6.258442,5.875987,9.687292,2.853291,-1.383895],[7.958980,-9.848324,-4.262824,-9.023925,3.792184,8.723879,0.701199],[-2.322648,5.561249,-1.335537,-2.222811,9.392522,3.853734,-1.185615],[5.178625,-9.600440,-5.945449,-9.060354,4.384249,-3.019227,-5.408092]],[[3.755234,-1.482761,1.764519,-2.283727,7.507304,-0.121088,6.710273],[8.602514,-2.299866,-1.086649,9.562977,-3.434526,0.816787,-4.964785],[-7.854559,2.314657,3.919324,7.569862,-9.817805,-4.234796,8.212449],[-6.455298,-2.322239,-4.925809,-9.490126,0.450882,6.854401,-7.796325],[2.264132,-6.603023,1.341649,7.810999,5.819591,5.501147,-4.265069],[6.097597,-2.078741,-2.258455,8.078641,-5.411219,6.726230,-1.552380],[7.746647,5.559265,6.601768,-0.227026,-0.836737,3.382796,-3.333986],[7.258256,-9.451701,-7.234465,-7.419235,3.512995,7.819038,-1.513597],[6.974848,0.276479,4.201339,7.534847,-2.562233,9.049154,1.696233],[1.653542,-9.122449,2.878684,1.656724,9.351936,-5.251775,-9.039140]]], dtype = "float32")#candidate|417|(13, 10, 7)|const|float32
uop_418 = relay.log10(const_417.astype('float32')) # shape=(13, 10, 7)
func_64_call = mod.get_global_var('func_64')
func_67_call = mutated_mod.get_global_var('func_67')
const_441 = relay.const([[False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,False]], dtype = "bool")#candidate|441|(1, 20)|const|bool
var_442 = relay.var("var_442", dtype = "bool", shape = (140,))#candidate|442|(140,)|var|bool
call_440 = func_64_call(relay.reshape(const_441.astype('bool'), [4, 1, 5]), relay.reshape(var_442.astype('bool'), [4, 7, 5]), )
call_443 = func_64_call(relay.reshape(const_441.astype('bool'), [4, 1, 5]), relay.reshape(var_442.astype('bool'), [4, 7, 5]), )
var_452 = relay.var("var_452", dtype = "bool", shape = (3, 20))#candidate|452|(3, 20)|var|bool
bop_453 = relay.greater_equal(const_441.astype('bool'), var_452.astype('bool')) # shape=(3, 20)
bop_460 = relay.bitwise_or(call_440.astype('int64'), relay.reshape(var_442.astype('int64'), relay.shape_of(call_440))) # shape=(4, 7, 5)
bop_463 = relay.bitwise_or(call_443.astype('int64'), relay.reshape(var_442.astype('int64'), relay.shape_of(call_443))) # shape=(4, 7, 5)
uop_464 = relay.sinh(bop_460.astype('float64')) # shape=(4, 7, 5)
uop_466 = relay.sinh(bop_463.astype('float64')) # shape=(4, 7, 5)
output = relay.Tuple([uop_418,bop_453,uop_464,])
output2 = relay.Tuple([uop_418,bop_453,uop_466,])
func_476 = relay.Function([var_442,var_452,], output)
mod['func_476'] = func_476
mod = relay.transform.InferType()(mod)
var_477 = relay.var("var_477", dtype = "bool", shape = (140,))#candidate|477|(140,)|var|bool
var_478 = relay.var("var_478", dtype = "bool", shape = (3, 20))#candidate|478|(3, 20)|var|bool
output = func_476(var_477,var_478,)
func_479 = relay.Function([var_477,var_478,], output)
mutated_mod['func_479'] = func_479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_484 = relay.var("var_484", dtype = "float64", shape = (4, 13, 7))#candidate|484|(4, 13, 7)|var|float64
uop_485 = relay.sqrt(var_484.astype('float64')) # shape=(4, 13, 7)
bop_510 = relay.not_equal(var_484.astype('bool'), relay.reshape(uop_485.astype('bool'), relay.shape_of(var_484))) # shape=(4, 13, 7)
bop_521 = relay.equal(var_484.astype('bool'), relay.reshape(bop_510.astype('bool'), relay.shape_of(var_484))) # shape=(4, 13, 7)
func_476_call = mod.get_global_var('func_476')
func_479_call = mutated_mod.get_global_var('func_479')
const_525 = relay.const([True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,False], dtype = "bool")#candidate|525|(140,)|const|bool
var_526 = relay.var("var_526", dtype = "bool", shape = (60,))#candidate|526|(60,)|var|bool
call_524 = relay.TupleGetItem(func_476_call(relay.reshape(const_525.astype('bool'), [140,]), relay.reshape(var_526.astype('bool'), [3, 20]), ), 0)
call_527 = relay.TupleGetItem(func_479_call(relay.reshape(const_525.astype('bool'), [140,]), relay.reshape(var_526.astype('bool'), [3, 20]), ), 0)
uop_536 = relay.atan(bop_521.astype('float32')) # shape=(4, 13, 7)
bop_552 = relay.bitwise_or(uop_536.astype('int32'), relay.reshape(uop_485.astype('int32'), relay.shape_of(uop_536))) # shape=(4, 13, 7)
output = relay.Tuple([call_524,const_525,var_526,bop_552,])
output2 = relay.Tuple([call_527,const_525,var_526,bop_552,])
func_569 = relay.Function([var_484,var_526,], output)
mod['func_569'] = func_569
mod = relay.transform.InferType()(mod)
var_570 = relay.var("var_570", dtype = "float64", shape = (4, 13, 7))#candidate|570|(4, 13, 7)|var|float64
var_571 = relay.var("var_571", dtype = "bool", shape = (60,))#candidate|571|(60,)|var|bool
output = func_569(var_570,var_571,)
func_572 = relay.Function([var_570,var_571,], output)
mutated_mod['func_572'] = func_572
mutated_mod = relay.transform.InferType()(mutated_mod)
var_595 = relay.var("var_595", dtype = "float64", shape = (15, 6, 9))#candidate|595|(15, 6, 9)|var|float64
uop_596 = relay.sin(var_595.astype('float64')) # shape=(15, 6, 9)
output = relay.Tuple([uop_596,])
output2 = relay.Tuple([uop_596,])
func_600 = relay.Function([var_595,], output)
mod['func_600'] = func_600
mod = relay.transform.InferType()(mod)
mutated_mod['func_600'] = func_600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_601 = relay.var("var_601", dtype = "float64", shape = (15, 6, 9))#candidate|601|(15, 6, 9)|var|float64
func_600_call = mutated_mod.get_global_var('func_600')
call_602 = func_600_call(var_601)
output = call_602
func_603 = relay.Function([var_601], output)
mutated_mod['func_603'] = func_603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_730 = relay.var("var_730", dtype = "float64", shape = ())#candidate|730|()|var|float64
var_731 = relay.var("var_731", dtype = "float64", shape = (1, 8))#candidate|731|(1, 8)|var|float64
bop_732 = relay.floor_divide(var_730.astype('float64'), var_731.astype('float64')) # shape=(1, 8)
func_64_call = mod.get_global_var('func_64')
func_67_call = mutated_mod.get_global_var('func_67')
var_739 = relay.var("var_739", dtype = "bool", shape = (20,))#candidate|739|(20,)|var|bool
const_740 = relay.const([False,True,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False], dtype = "bool")#candidate|740|(140,)|const|bool
call_738 = func_64_call(relay.reshape(var_739.astype('bool'), [4, 1, 5]), relay.reshape(const_740.astype('bool'), [4, 7, 5]), )
call_741 = func_64_call(relay.reshape(var_739.astype('bool'), [4, 1, 5]), relay.reshape(const_740.astype('bool'), [4, 7, 5]), )
func_193_call = mod.get_global_var('func_193')
func_197_call = mutated_mod.get_global_var('func_197')
var_749 = relay.var("var_749", dtype = "float32", shape = (1352,))#candidate|749|(1352,)|var|float32
call_748 = relay.TupleGetItem(func_193_call(relay.reshape(var_730.astype('float32'), []), relay.reshape(var_749.astype('float32'), [8, 13, 13]), ), 0)
call_750 = relay.TupleGetItem(func_197_call(relay.reshape(var_730.astype('float32'), []), relay.reshape(var_749.astype('float32'), [8, 13, 13]), ), 0)
output = relay.Tuple([bop_732,call_738,var_739,const_740,call_748,var_749,])
output2 = relay.Tuple([bop_732,call_741,var_739,const_740,call_750,var_749,])
func_755 = relay.Function([var_730,var_731,var_739,var_749,], output)
mod['func_755'] = func_755
mod = relay.transform.InferType()(mod)
mutated_mod['func_755'] = func_755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_755_call = mutated_mod.get_global_var('func_755')
var_757 = relay.var("var_757", dtype = "float64", shape = ())#candidate|757|()|var|float64
var_758 = relay.var("var_758", dtype = "float64", shape = (1, 8))#candidate|758|(1, 8)|var|float64
var_759 = relay.var("var_759", dtype = "bool", shape = (20,))#candidate|759|(20,)|var|bool
var_760 = relay.var("var_760", dtype = "float32", shape = (1352,))#candidate|760|(1352,)|var|float32
call_756 = func_755_call(var_757,var_758,var_759,var_760,)
output = call_756
func_761 = relay.Function([var_757,var_758,var_759,var_760,], output)
mutated_mod['func_761'] = func_761
mutated_mod = relay.transform.InferType()(mutated_mod)
const_834 = relay.const([[[-2.064307,-0.595297,4.693022,-8.049205,2.354471,5.146304,-6.807679,-2.445431,-7.567934,8.490569,-9.583968,-9.691114,3.836768,-9.642571],[-1.118015,5.453306,9.818031,1.579534,-5.722799,-8.478118,0.612721,4.913239,9.744796,-5.755391,8.727638,-7.853000,-8.671203,-7.769976]],[[7.173353,4.621720,-9.410528,-1.179663,-6.836192,-1.046150,0.253251,-6.349034,-3.475288,-3.006858,-5.847801,8.807513,7.873886,7.715294],[6.995649,3.262822,1.114186,-6.851495,7.475948,3.576225,-1.683707,-6.694577,-9.253881,8.290314,-0.729180,-8.238143,-1.842924,-5.018120]],[[8.914284,5.674371,-4.777824,7.137237,4.346934,2.869337,-9.231059,2.623538,4.906957,5.198693,-8.349521,-0.304216,-3.694315,8.341760],[4.275224,-8.557879,-8.747113,4.344773,-0.771148,-4.464726,-0.827147,1.585902,-5.241018,-9.611158,-4.177878,-2.948800,-6.770980,-7.011401]],[[1.224508,9.200121,3.747634,-4.727469,-8.871177,-7.571071,-0.179746,-4.149110,1.728037,-8.985863,-9.812290,7.167548,-6.217629,-8.712168],[-1.165893,3.086313,-7.963070,-2.670808,3.083960,0.973496,-8.497587,-1.141623,-5.883380,-5.918422,-1.518767,-9.570823,8.545119,-0.269825]],[[5.956632,-9.489200,3.265535,1.443336,-8.268780,9.740624,-9.760139,7.558013,8.594093,-1.616280,7.900499,4.257250,7.838163,-8.393908],[9.929934,-1.770272,7.564773,-4.415623,-5.797093,5.272571,-2.283598,-2.218407,1.949362,8.654501,-3.309897,0.702388,-7.590372,6.394560]],[[-5.932783,-4.617744,-6.281675,-6.141238,8.956776,-4.193014,-5.122100,9.093190,8.099855,-1.523356,4.912783,2.791780,2.973915,3.008512],[7.894295,6.470783,1.222555,8.993989,-3.585998,3.254013,-3.200024,1.095542,1.869120,3.306386,2.456831,-6.460671,-1.462181,-9.911577]],[[-2.802544,5.486210,-4.081745,0.898866,6.435903,-0.030952,-9.215229,2.894993,3.201381,0.549683,9.139569,5.556239,-1.397785,-6.068430],[8.067481,-9.220872,-6.278157,9.378687,-8.041889,-4.732642,8.235728,6.505771,2.422678,1.490740,-2.991318,9.302484,0.238972,-2.574090]],[[-7.758740,-2.054040,1.826613,6.574547,0.260781,-3.745755,3.383751,8.939227,2.719433,-6.457836,4.897189,-8.284294,4.584864,-1.497990],[-7.391004,-8.985255,9.353159,8.414729,-7.919103,-6.633633,0.677093,7.514149,-6.156740,-7.552431,-9.927396,-9.203135,-6.863410,8.466571]],[[-5.220231,-1.823136,-3.862238,-9.742142,-8.499413,-5.287231,-7.367126,-9.332459,5.425556,9.441884,-0.315350,-6.424270,-9.731422,-4.881103],[0.438074,-8.046657,9.521502,-3.620701,-8.116296,0.128102,-0.512025,4.305689,3.027203,0.884593,8.341055,-6.476562,-2.309029,-7.116105]],[[8.428150,8.218888,-8.898782,-3.727099,-8.024893,0.023004,0.940623,5.734549,-1.351777,7.919887,-8.296249,7.073944,8.935878,4.178561],[-3.948316,-6.931846,3.363948,-9.038917,-2.814825,1.735443,4.608451,5.511319,-4.845961,1.197641,3.188438,-6.802500,6.196917,9.375019]],[[5.859184,-5.425312,1.869966,9.588251,-2.919180,-2.487382,-8.629522,3.313185,9.087913,9.593241,-5.601443,-9.801482,2.502341,6.710497],[-2.108461,9.619417,-3.647610,5.499864,-3.413416,-2.367342,-2.444938,0.592803,-4.222358,1.991180,5.935549,1.970320,8.576254,4.191237]],[[-1.157672,9.364232,-3.831968,-8.560396,-3.439385,-1.265749,-8.001711,7.950043,2.425658,-5.041435,9.831799,5.213991,-7.518362,-1.130721],[8.528318,-1.766590,5.237753,-8.535139,-8.420316,-4.650966,8.834599,5.575268,6.244210,-1.398340,-5.993323,-4.927035,-8.767055,-9.317933]],[[3.863630,-0.974589,3.079171,-7.321882,-2.944859,-8.762297,-6.625317,4.224445,8.999092,8.767496,3.938769,5.112857,-6.910207,-6.421365],[-9.044823,9.522906,3.876042,-6.223397,-7.153930,5.834700,4.989040,0.851218,-4.029970,8.903580,-3.122212,-4.894030,8.040149,7.220828]],[[-3.124811,-8.991450,-4.836560,-0.194074,-1.900959,-2.680295,2.423584,6.808960,9.778245,-2.695124,-3.106923,0.009277,3.851336,-9.613700],[-5.476522,-1.015967,0.405909,0.209015,7.700747,-1.140687,-8.486221,-2.816761,-3.428616,-2.942448,6.926267,-6.997261,8.460823,-1.068949]],[[4.351332,0.616858,-5.675029,-4.967257,-0.734036,5.806048,3.722015,9.490849,0.640576,-0.805108,-9.339374,2.333506,3.815759,1.517798],[-6.202585,2.460218,-3.184101,6.279893,5.059002,3.518465,4.647467,1.232342,-4.824932,-2.339786,-4.951126,7.870747,7.680469,-2.016447]],[[-2.118314,1.471090,7.373634,9.623851,7.890385,-9.035186,-8.209998,1.568009,2.027719,9.017511,7.596965,3.678528,-7.397874,-3.981886],[3.534191,-8.078565,-3.273319,-1.181771,2.929402,-8.780786,-7.797919,2.403872,-9.249520,-8.518405,3.623385,4.191162,5.224265,-6.506227]]], dtype = "float32")#candidate|834|(16, 2, 14)|const|float32
uop_835 = relay.acosh(const_834.astype('float32')) # shape=(16, 2, 14)
bop_859 = relay.minimum(uop_835.astype('float64'), relay.reshape(const_834.astype('float64'), relay.shape_of(uop_835))) # shape=(16, 2, 14)
output = bop_859
output2 = bop_859
func_877 = relay.Function([], output)
mod['func_877'] = func_877
mod = relay.transform.InferType()(mod)
mutated_mod['func_877'] = func_877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_877_call = mutated_mod.get_global_var('func_877')
call_878 = func_877_call()
output = call_878
func_879 = relay.Function([], output)
mutated_mod['func_879'] = func_879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_877_call = mod.get_global_var('func_877')
func_879_call = mutated_mod.get_global_var('func_879')
call_883 = func_877_call()
call_884 = func_877_call()
func_476_call = mod.get_global_var('func_476')
func_479_call = mutated_mod.get_global_var('func_479')
var_891 = relay.var("var_891", dtype = "bool", shape = (140,))#candidate|891|(140,)|var|bool
var_892 = relay.var("var_892", dtype = "bool", shape = (3, 20))#candidate|892|(3, 20)|var|bool
call_890 = relay.TupleGetItem(func_476_call(relay.reshape(var_891.astype('bool'), [140,]), relay.reshape(var_892.astype('bool'), [3, 20]), ), 2)
call_893 = relay.TupleGetItem(func_479_call(relay.reshape(var_891.astype('bool'), [140,]), relay.reshape(var_892.astype('bool'), [3, 20]), ), 2)
output = relay.Tuple([call_883,call_890,var_891,var_892,])
output2 = relay.Tuple([call_884,call_893,var_891,var_892,])
func_894 = relay.Function([var_891,var_892,], output)
mod['func_894'] = func_894
mod = relay.transform.InferType()(mod)
var_895 = relay.var("var_895", dtype = "bool", shape = (140,))#candidate|895|(140,)|var|bool
var_896 = relay.var("var_896", dtype = "bool", shape = (3, 20))#candidate|896|(3, 20)|var|bool
output = func_894(var_895,var_896,)
func_897 = relay.Function([var_895,var_896,], output)
mutated_mod['func_897'] = func_897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_877_call = mod.get_global_var('func_877')
func_879_call = mutated_mod.get_global_var('func_879')
call_982 = func_877_call()
call_983 = func_877_call()
func_476_call = mod.get_global_var('func_476')
func_479_call = mutated_mod.get_global_var('func_479')
const_986 = relay.const([False,False,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,False,True], dtype = "bool")#candidate|986|(140,)|const|bool
const_987 = relay.const([True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False], dtype = "bool")#candidate|987|(60,)|const|bool
call_985 = relay.TupleGetItem(func_476_call(relay.reshape(const_986.astype('bool'), [140,]), relay.reshape(const_987.astype('bool'), [3, 20]), ), 0)
call_988 = relay.TupleGetItem(func_479_call(relay.reshape(const_986.astype('bool'), [140,]), relay.reshape(const_987.astype('bool'), [3, 20]), ), 0)
func_476_call = mod.get_global_var('func_476')
func_479_call = mutated_mod.get_global_var('func_479')
call_992 = relay.TupleGetItem(func_476_call(relay.reshape(const_986.astype('bool'), [140,]), relay.reshape(const_987.astype('bool'), [3, 20]), ), 0)
call_993 = relay.TupleGetItem(func_479_call(relay.reshape(const_986.astype('bool'), [140,]), relay.reshape(const_987.astype('bool'), [3, 20]), ), 0)
func_386_call = mod.get_global_var('func_386')
func_391_call = mutated_mod.get_global_var('func_391')
const_1017 = relay.const(5.892181, dtype = "float32")#candidate|1017|()|const|float32
const_1018 = relay.const([True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False], dtype = "bool")#candidate|1018|(20,)|const|bool
call_1016 = relay.TupleGetItem(func_386_call(relay.reshape(const_1017.astype('float32'), []), relay.reshape(const_1018.astype('bool'), [20, 1]), relay.reshape(const_986.astype('bool'), [5, 28]), ), 3)
call_1019 = relay.TupleGetItem(func_391_call(relay.reshape(const_1017.astype('float32'), []), relay.reshape(const_1018.astype('bool'), [20, 1]), relay.reshape(const_986.astype('bool'), [5, 28]), ), 3)
bop_1026 = relay.subtract(const_986.astype('uint64'), relay.reshape(call_1016.astype('uint64'), relay.shape_of(const_986))) # shape=(140,)
bop_1029 = relay.subtract(const_986.astype('uint64'), relay.reshape(call_1019.astype('uint64'), relay.shape_of(const_986))) # shape=(140,)
output = relay.Tuple([call_982,call_985,const_987,call_992,const_1017,const_1018,bop_1026,])
output2 = relay.Tuple([call_983,call_988,const_987,call_993,const_1017,const_1018,bop_1029,])
func_1036 = relay.Function([], output)
mod['func_1036'] = func_1036
mod = relay.transform.InferType()(mod)
mutated_mod['func_1036'] = func_1036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1036_call = mutated_mod.get_global_var('func_1036')
call_1037 = func_1036_call()
output = call_1037
func_1038 = relay.Function([], output)
mutated_mod['func_1038'] = func_1038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1036_call = mod.get_global_var('func_1036')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_1069 = relay.TupleGetItem(func_1036_call(), 6)
call_1070 = relay.TupleGetItem(func_1038_call(), 6)
func_894_call = mod.get_global_var('func_894')
func_897_call = mutated_mod.get_global_var('func_897')
var_1072 = relay.var("var_1072", dtype = "bool", shape = (60,))#candidate|1072|(60,)|var|bool
call_1071 = relay.TupleGetItem(func_894_call(relay.reshape(call_1069.astype('bool'), [140,]), relay.reshape(var_1072.astype('bool'), [3, 20]), ), 0)
call_1073 = relay.TupleGetItem(func_897_call(relay.reshape(call_1069.astype('bool'), [140,]), relay.reshape(var_1072.astype('bool'), [3, 20]), ), 0)
output = relay.Tuple([call_1069,call_1071,var_1072,])
output2 = relay.Tuple([call_1070,call_1073,var_1072,])
func_1080 = relay.Function([var_1072,], output)
mod['func_1080'] = func_1080
mod = relay.transform.InferType()(mod)
mutated_mod['func_1080'] = func_1080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1081 = relay.var("var_1081", dtype = "bool", shape = (60,))#candidate|1081|(60,)|var|bool
func_1080_call = mutated_mod.get_global_var('func_1080')
call_1082 = func_1080_call(var_1081)
output = call_1082
func_1083 = relay.Function([var_1081], output)
mutated_mod['func_1083'] = func_1083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_877_call = mod.get_global_var('func_877')
func_879_call = mutated_mod.get_global_var('func_879')
call_1095 = func_877_call()
call_1096 = func_877_call()
var_1102 = relay.var("var_1102", dtype = "float64", shape = (16, 2, 14))#candidate|1102|(16, 2, 14)|var|float64
bop_1103 = relay.left_shift(call_1095.astype('uint64'), relay.reshape(var_1102.astype('uint64'), relay.shape_of(call_1095))) # shape=(16, 2, 14)
bop_1106 = relay.left_shift(call_1096.astype('uint64'), relay.reshape(var_1102.astype('uint64'), relay.shape_of(call_1096))) # shape=(16, 2, 14)
output = bop_1103
output2 = bop_1106
func_1108 = relay.Function([var_1102,], output)
mod['func_1108'] = func_1108
mod = relay.transform.InferType()(mod)
mutated_mod['func_1108'] = func_1108
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1109 = relay.var("var_1109", dtype = "float64", shape = (16, 2, 14))#candidate|1109|(16, 2, 14)|var|float64
func_1108_call = mutated_mod.get_global_var('func_1108')
call_1110 = func_1108_call(var_1109)
output = call_1110
func_1111 = relay.Function([var_1109], output)
mutated_mod['func_1111'] = func_1111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_877_call = mod.get_global_var('func_877')
func_879_call = mutated_mod.get_global_var('func_879')
call_1133 = func_877_call()
call_1134 = func_877_call()
output = relay.Tuple([call_1133,])
output2 = relay.Tuple([call_1134,])
func_1140 = relay.Function([], output)
mod['func_1140'] = func_1140
mod = relay.transform.InferType()(mod)
mutated_mod['func_1140'] = func_1140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mutated_mod.get_global_var('func_1140')
call_1141 = func_1140_call()
output = call_1141
func_1142 = relay.Function([], output)
mutated_mod['func_1142'] = func_1142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1036_call = mod.get_global_var('func_1036')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_1156 = relay.TupleGetItem(func_1036_call(), 3)
call_1157 = relay.TupleGetItem(func_1038_call(), 3)
output = relay.Tuple([call_1156,])
output2 = relay.Tuple([call_1157,])
func_1159 = relay.Function([], output)
mod['func_1159'] = func_1159
mod = relay.transform.InferType()(mod)
output = func_1159()
func_1160 = relay.Function([], output)
mutated_mod['func_1160'] = func_1160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1202 = relay.var("var_1202", dtype = "uint32", shape = ())#candidate|1202|()|var|uint32
var_1203 = relay.var("var_1203", dtype = "uint32", shape = (7, 4, 2))#candidate|1203|(7, 4, 2)|var|uint32
bop_1204 = relay.left_shift(var_1202.astype('uint32'), var_1203.astype('uint32')) # shape=(7, 4, 2)
output = bop_1204
output2 = bop_1204
func_1226 = relay.Function([var_1202,var_1203,], output)
mod['func_1226'] = func_1226
mod = relay.transform.InferType()(mod)
mutated_mod['func_1226'] = func_1226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1226_call = mutated_mod.get_global_var('func_1226')
var_1228 = relay.var("var_1228", dtype = "uint32", shape = ())#candidate|1228|()|var|uint32
var_1229 = relay.var("var_1229", dtype = "uint32", shape = (7, 4, 2))#candidate|1229|(7, 4, 2)|var|uint32
call_1227 = func_1226_call(var_1228,var_1229,)
output = call_1227
func_1230 = relay.Function([var_1228,var_1229,], output)
mutated_mod['func_1230'] = func_1230
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1236 = relay.var("var_1236", dtype = "int16", shape = (5, 6, 4))#candidate|1236|(5, 6, 4)|var|int16
var_1237 = relay.var("var_1237", dtype = "int16", shape = (5, 6, 4))#candidate|1237|(5, 6, 4)|var|int16
bop_1238 = relay.bitwise_or(var_1236.astype('int16'), relay.reshape(var_1237.astype('int16'), relay.shape_of(var_1236))) # shape=(5, 6, 4)
bop_1244 = relay.logical_xor(var_1236.astype('uint32'), relay.reshape(bop_1238.astype('uint32'), relay.shape_of(var_1236))) # shape=(5, 6, 4)
func_1159_call = mod.get_global_var('func_1159')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1248 = relay.TupleGetItem(func_1159_call(), 0)
call_1249 = relay.TupleGetItem(func_1160_call(), 0)
func_755_call = mod.get_global_var('func_755')
func_761_call = mutated_mod.get_global_var('func_761')
var_1258 = relay.var("var_1258", dtype = "float64", shape = ())#candidate|1258|()|var|float64
var_1259 = relay.var("var_1259", dtype = "float64", shape = (8,))#candidate|1259|(8,)|var|float64
var_1260 = relay.var("var_1260", dtype = "bool", shape = (20,))#candidate|1260|(20,)|var|bool
var_1261 = relay.var("var_1261", dtype = "float32", shape = (1352,))#candidate|1261|(1352,)|var|float32
call_1257 = relay.TupleGetItem(func_755_call(relay.reshape(var_1258.astype('float64'), []), relay.reshape(var_1259.astype('float64'), [1, 8]), relay.reshape(var_1260.astype('bool'), [20,]), relay.reshape(var_1261.astype('float32'), [1352,]), ), 2)
call_1262 = relay.TupleGetItem(func_761_call(relay.reshape(var_1258.astype('float64'), []), relay.reshape(var_1259.astype('float64'), [1, 8]), relay.reshape(var_1260.astype('bool'), [20,]), relay.reshape(var_1261.astype('float32'), [1352,]), ), 2)
bop_1274 = relay.less_equal(var_1237.astype('bool'), var_1258.astype('bool')) # shape=(5, 6, 4)
uop_1277 = relay.exp(bop_1244.astype('float32')) # shape=(5, 6, 4)
func_1159_call = mod.get_global_var('func_1159')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1283 = relay.TupleGetItem(func_1159_call(), 0)
call_1284 = relay.TupleGetItem(func_1160_call(), 0)
output = relay.Tuple([call_1248,call_1257,var_1259,var_1260,var_1261,bop_1274,uop_1277,call_1283,])
output2 = relay.Tuple([call_1249,call_1262,var_1259,var_1260,var_1261,bop_1274,uop_1277,call_1284,])
func_1288 = relay.Function([var_1236,var_1237,var_1258,var_1259,var_1260,var_1261,], output)
mod['func_1288'] = func_1288
mod = relay.transform.InferType()(mod)
mutated_mod['func_1288'] = func_1288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1288_call = mutated_mod.get_global_var('func_1288')
var_1290 = relay.var("var_1290", dtype = "int16", shape = (5, 6, 4))#candidate|1290|(5, 6, 4)|var|int16
var_1291 = relay.var("var_1291", dtype = "int16", shape = (5, 6, 4))#candidate|1291|(5, 6, 4)|var|int16
var_1292 = relay.var("var_1292", dtype = "float64", shape = ())#candidate|1292|()|var|float64
var_1293 = relay.var("var_1293", dtype = "float64", shape = (8,))#candidate|1293|(8,)|var|float64
var_1294 = relay.var("var_1294", dtype = "bool", shape = (20,))#candidate|1294|(20,)|var|bool
var_1295 = relay.var("var_1295", dtype = "float32", shape = (1352,))#candidate|1295|(1352,)|var|float32
call_1289 = func_1288_call(var_1290,var_1291,var_1292,var_1293,var_1294,var_1295,)
output = call_1289
func_1296 = relay.Function([var_1290,var_1291,var_1292,var_1293,var_1294,var_1295,], output)
mutated_mod['func_1296'] = func_1296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1159_call = mod.get_global_var('func_1159')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1300 = relay.TupleGetItem(func_1159_call(), 0)
call_1301 = relay.TupleGetItem(func_1160_call(), 0)
func_569_call = mod.get_global_var('func_569')
func_572_call = mutated_mod.get_global_var('func_572')
const_1303 = relay.const([-6.387116,-4.342315,1.589155,-7.070757,6.815355,-0.313690,-4.589470,7.616735,0.741975,-0.721304,-0.237450,-6.063913,7.145957,-3.984652,-8.036365,3.784246,-4.027363,7.805824,5.270200,-7.494485,-8.693886,-9.516167,3.711304,4.795118,8.165879,6.695807,9.010457,8.021595,1.133498,3.537569,-3.753282,4.114290,-9.509090,-8.645670,-0.480530,-8.092170,-3.204089,2.433556,-3.000062,-2.563933,-8.717159,1.782453,5.552149,6.938787,6.119959,-5.794051,7.112566,-6.927178,3.041191,8.874889,2.456564,-4.802577,-7.860965,-0.697429,-3.504252,5.610798,-4.931836,-0.226271,7.199713,5.092246,4.042046,-1.975170,0.388416,-0.391728,-6.915822,-4.473036,-9.394698,3.428480,-7.611254,2.687254,-0.860576,-8.207237,-2.142112,8.019874,-1.912191,-4.654971,-9.423119,-4.251601,8.921382,-4.621327,-5.288557,-7.682492,-9.762903,-4.235338,4.813013,4.861938,-4.713477,-2.305999,1.528696,-4.892281,-3.063166,3.524668,-8.851102,-2.402382,-2.802754,7.344337,1.963703,0.999379,7.728526,0.681559,-6.980254,-8.409048,-4.444557,4.438256,-7.737320,4.937671,-8.562091,-0.636507,-7.354822,-8.682367,5.845890,3.566116,1.816573,-4.673246,-6.320728,5.652931,9.551119,7.392683,9.690066,9.984385,0.541707,-5.290606,5.184788,-0.433138,-5.455320,-2.406870,-4.847559,-0.534036,7.035746,-8.732415,-5.364955,-8.746386,2.151390,1.951272,-9.372110,1.357339,6.983517,3.088065,-1.286810,-2.683257,-7.630221,-4.044189,5.746432,3.017186,-6.372585,-5.405491,6.340470,-3.019347,3.092699,5.169372,-3.444322,4.323987,1.663874,-3.034866,-6.210237,-1.387612,2.958905,4.673216,6.346309,0.194262,-0.232530,1.166668,-2.630226,-9.416999,0.439280,4.890505,-2.506423,-0.911805,0.180953,4.685970,5.955517,2.131157,4.888741,7.194617,4.448963,-6.871023,3.435292,3.997833,3.225272,1.113760,-3.699576,-2.847702,5.231834,-8.253314,7.165509,-1.807485,8.354181,9.056032,-4.781525,2.470949,-6.215955,0.158321,3.222158,4.717588,-9.707316,-9.621598,-6.593638,-2.176928,1.087341,-0.847873,-1.830910,3.129493,-5.484308,-0.433696,-0.820792,-0.586186,7.557781,-3.913319,7.172991,2.159050,-3.730071,-3.499332,-1.506487,-4.419220,0.178842,-5.722550,4.630432,2.287453,3.117258,-8.999275,3.078541,-4.979873,-8.475922,-7.786722,-5.903672,7.464168,0.331395,9.182368,-1.292888,6.612261,3.211912,-8.689799,9.342138,-9.721650,4.389104,-6.770331,-0.610535,-1.034214,1.864952,-5.380872,-7.992512,-3.091697,1.649501,-4.758080,0.243983,3.244272,9.803551,9.200009,7.380559,3.660500,-0.139001,4.808333,-6.555935,8.455293,-6.370850,-7.726005,-9.004750,-6.015026,-8.569172,0.760536,-2.100697,-0.533704,-9.585453,7.142372,-5.831022,2.897956,-1.232417,6.791302,-7.067962,6.074283,-6.974126,1.894374,-3.120060,-0.663500,-7.644456,5.402207,-7.771314,4.087910,3.226909,-8.652490,7.849209,3.579036,-6.916982,1.316372,3.488315,-8.243570,-0.090585,-0.691108,3.014114,2.477919,4.207891,1.255117,2.614213,-6.698540,0.979711,-6.333784,-5.747297,-5.809933,-0.299702,4.727572,-2.409486,7.830052,-3.942745,-5.811520,-3.169289,5.810946,-0.380564,1.243704,7.255117,-7.131080,-4.732331,-2.267295,-9.274968,8.194745,-6.846676,9.377599,-7.825141,1.231275,-3.654920,8.297226,2.961085,-2.246112,3.083064,4.762142,-0.800600,9.817935,-7.152120,5.050432,-9.344302,3.587039,-5.915224,-7.106926,3.473797,5.237054,7.011517,-8.724581,2.399219,-7.977071,-8.860948,-9.872374,4.047441,0.816562,6.103144,9.892618,-5.484111,-7.003134,4.349892,3.566092,-4.477252,-8.213960,6.860907,-0.608337,-4.636114,8.524750,8.601358,3.800562,4.123825,-3.730944,5.765102,7.568044,5.093025,-9.739652,-0.014252,1.532188], dtype = "float64")#candidate|1303|(364,)|const|float64
var_1304 = relay.var("var_1304", dtype = "bool", shape = (60,))#candidate|1304|(60,)|var|bool
call_1302 = relay.TupleGetItem(func_569_call(relay.reshape(const_1303.astype('float64'), [4, 13, 7]), relay.reshape(var_1304.astype('bool'), [60,]), ), 0)
call_1305 = relay.TupleGetItem(func_572_call(relay.reshape(const_1303.astype('float64'), [4, 13, 7]), relay.reshape(var_1304.astype('bool'), [60,]), ), 0)
func_1036_call = mod.get_global_var('func_1036')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_1324 = relay.TupleGetItem(func_1036_call(), 1)
call_1325 = relay.TupleGetItem(func_1038_call(), 1)
output = relay.Tuple([call_1300,call_1302,const_1303,var_1304,call_1324,])
output2 = relay.Tuple([call_1301,call_1305,const_1303,var_1304,call_1325,])
func_1331 = relay.Function([var_1304,], output)
mod['func_1331'] = func_1331
mod = relay.transform.InferType()(mod)
mutated_mod['func_1331'] = func_1331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1332 = relay.var("var_1332", dtype = "bool", shape = (60,))#candidate|1332|(60,)|var|bool
func_1331_call = mutated_mod.get_global_var('func_1331')
call_1333 = func_1331_call(var_1332)
output = call_1333
func_1334 = relay.Function([var_1332], output)
mutated_mod['func_1334'] = func_1334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_877_call = mod.get_global_var('func_877')
func_879_call = mutated_mod.get_global_var('func_879')
call_1339 = func_877_call()
call_1340 = func_877_call()
func_755_call = mod.get_global_var('func_755')
func_761_call = mutated_mod.get_global_var('func_761')
const_1346 = relay.const(4.762698, dtype = "float64")#candidate|1346|()|const|float64
var_1347 = relay.var("var_1347", dtype = "float64", shape = (8,))#candidate|1347|(8,)|var|float64
const_1348 = relay.const([True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False], dtype = "bool")#candidate|1348|(20,)|const|bool
var_1349 = relay.var("var_1349", dtype = "float32", shape = (1, 1352))#candidate|1349|(1, 1352)|var|float32
call_1345 = relay.TupleGetItem(func_755_call(relay.reshape(const_1346.astype('float64'), []), relay.reshape(var_1347.astype('float64'), [1, 8]), relay.reshape(const_1348.astype('bool'), [20,]), relay.reshape(var_1349.astype('float32'), [1352,]), ), 4)
call_1350 = relay.TupleGetItem(func_761_call(relay.reshape(const_1346.astype('float64'), []), relay.reshape(var_1347.astype('float64'), [1, 8]), relay.reshape(const_1348.astype('bool'), [20,]), relay.reshape(var_1349.astype('float32'), [1352,]), ), 4)
func_1108_call = mod.get_global_var('func_1108')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_1374 = func_1108_call(relay.reshape(call_1339.astype('float64'), [16, 2, 14]))
call_1375 = func_1108_call(relay.reshape(call_1339.astype('float64'), [16, 2, 14]))
output = relay.Tuple([call_1339,call_1345,const_1346,var_1347,const_1348,var_1349,call_1374,])
output2 = relay.Tuple([call_1340,call_1350,const_1346,var_1347,const_1348,var_1349,call_1375,])
func_1379 = relay.Function([var_1347,var_1349,], output)
mod['func_1379'] = func_1379
mod = relay.transform.InferType()(mod)
var_1380 = relay.var("var_1380", dtype = "float64", shape = (8,))#candidate|1380|(8,)|var|float64
var_1381 = relay.var("var_1381", dtype = "float32", shape = (1, 1352))#candidate|1381|(1, 1352)|var|float32
output = func_1379(var_1380,var_1381,)
func_1382 = relay.Function([var_1380,var_1381,], output)
mutated_mod['func_1382'] = func_1382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1036_call = mod.get_global_var('func_1036')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_1415 = relay.TupleGetItem(func_1036_call(), 1)
call_1416 = relay.TupleGetItem(func_1038_call(), 1)
output = call_1415
output2 = call_1416
func_1417 = relay.Function([], output)
mod['func_1417'] = func_1417
mod = relay.transform.InferType()(mod)
output = func_1417()
func_1418 = relay.Function([], output)
mutated_mod['func_1418'] = func_1418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1159_call = mod.get_global_var('func_1159')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1432 = relay.TupleGetItem(func_1159_call(), 0)
call_1433 = relay.TupleGetItem(func_1160_call(), 0)
uop_1442 = relay.log(call_1432.astype('float64')) # shape=(13, 10, 7)
uop_1444 = relay.log(call_1433.astype('float64')) # shape=(13, 10, 7)
func_1417_call = mod.get_global_var('func_1417')
func_1418_call = mutated_mod.get_global_var('func_1418')
call_1451 = func_1417_call()
call_1452 = func_1417_call()
func_64_call = mod.get_global_var('func_64')
func_67_call = mutated_mod.get_global_var('func_67')
var_1454 = relay.var("var_1454", dtype = "bool", shape = (20,))#candidate|1454|(20,)|var|bool
const_1455 = relay.const([True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,False], dtype = "bool")#candidate|1455|(140,)|const|bool
call_1453 = func_64_call(relay.reshape(var_1454.astype('bool'), [4, 1, 5]), relay.reshape(const_1455.astype('bool'), [4, 7, 5]), )
call_1456 = func_64_call(relay.reshape(var_1454.astype('bool'), [4, 1, 5]), relay.reshape(const_1455.astype('bool'), [4, 7, 5]), )
const_1457 = relay.const([[[-5.946655,0.192058,3.156638,-9.267045,-7.631931,-8.117396,-0.765561],[-8.633103,1.200172,-5.084220,0.618440,9.985041,-5.971174,3.165356],[7.460770,-5.829748,-6.526654,-4.644641,8.182880,1.270722,-3.718690],[4.591514,-6.224462,-0.500925,-1.189890,5.724390,-4.583919,-7.747260],[0.655089,-1.414052,-3.799122,-0.434387,-6.378058,-0.507171,-0.351900],[-2.824661,7.561819,5.865313,4.187400,-1.026857,-3.939058,-2.161866],[-6.983979,5.718758,-8.915086,3.928533,-5.883960,3.085529,-2.047119],[-9.658309,5.744032,7.294225,0.499154,-6.842571,5.678621,-0.354733],[-0.711133,-3.556630,8.794949,-3.926467,9.464601,-9.144084,-5.278454],[9.534613,0.300095,1.620968,-4.803699,0.206032,4.513352,-8.450127]],[[-3.487789,-6.867686,3.546070,-7.416121,-1.795840,-5.819638,-8.087525],[-4.982662,-6.681965,4.234754,8.559394,-0.212965,-3.227494,0.251008],[-6.604111,-6.421710,-5.241515,4.236117,3.056857,-0.324838,5.525660],[5.069014,2.906824,-1.114516,1.693485,6.959784,-9.754644,-2.857672],[-3.580408,-5.932382,-2.404597,2.686742,4.156032,-3.649596,-5.235567],[-0.420145,-5.283859,6.478565,2.661443,4.473844,-4.595714,-9.241452],[4.505891,9.541733,-9.668627,-6.630650,-9.019607,-4.987695,-8.428661],[-2.526703,7.286487,-9.764168,-5.184722,-1.797943,3.302458,7.151557],[-0.171368,-7.882238,-4.173469,2.015284,2.871658,2.839689,-6.289037],[6.055581,5.414647,5.789433,5.722277,-1.058157,-1.276472,5.154545]],[[-6.670097,9.783788,-4.434683,-6.080445,8.743242,-1.003703,3.824389],[-5.124224,3.854072,2.230125,7.240964,8.878303,-2.230540,-9.729507],[-6.476794,4.287335,-4.401890,-9.394038,-7.701811,-0.395993,-4.321260],[8.204304,-1.033351,3.051665,4.346031,-9.912144,-2.526884,9.357371],[8.785491,6.940163,-2.917079,3.509869,0.968063,2.559518,-0.899652],[6.641514,-6.330223,1.018246,-9.640930,-4.546578,8.255078,-4.298924],[3.312144,-6.154622,9.895433,-2.518111,-4.072396,9.059754,9.341552],[-7.776072,-2.448982,4.894093,-4.266073,9.760741,2.836062,-2.099481],[0.766890,-9.380185,1.357298,2.525267,-7.981292,-9.480961,2.895206],[-6.474728,-3.545658,2.670006,-5.147065,-2.424749,8.848114,2.193527]],[[2.946622,8.023429,-1.457980,8.172587,-6.580196,0.866645,1.527632],[-2.110546,7.938408,1.536483,5.352778,-7.220205,9.689269,-2.448954],[-8.792518,-8.956420,0.376483,-2.341289,4.160144,1.137863,6.270298],[4.957397,-7.503587,1.944373,-6.941224,-4.314767,1.833954,-8.431952],[5.080272,7.513693,-2.589066,7.175950,0.367510,-4.629623,-1.710640],[0.803859,-1.173416,-5.405006,-3.521871,-6.396057,-1.286547,-5.409224],[9.270951,2.206637,9.050850,-4.612096,-8.175090,9.544130,-1.246648],[-7.554584,-5.151906,-0.243684,-4.545691,4.894650,-9.463567,-5.063218],[-1.678682,2.335410,5.174644,-7.314411,3.671494,-4.652031,7.344420],[-2.914555,2.715942,-1.243215,-6.763685,-0.154784,5.848356,5.149955]],[[3.653387,-9.895044,-2.874347,1.630173,-0.801475,-5.523035,4.321489],[4.615816,-9.640330,-4.933744,9.755333,3.749345,7.841605,-5.944264],[-3.316113,-4.413302,2.472201,6.517275,-1.877728,4.757670,7.295812],[2.887178,2.900114,4.784915,-5.911310,2.451240,-1.572394,3.506585],[5.453180,-3.409784,5.754219,8.770543,9.294836,-0.135785,-3.185390],[4.366940,9.470746,-4.951774,7.620302,-6.477568,1.068100,6.235239],[5.311538,4.313777,9.415030,-8.403026,-8.844404,5.373032,-4.900837],[-4.553368,-3.330203,-0.935935,-0.168020,-7.892207,-1.370513,5.066552],[-0.231164,9.923772,3.331991,-8.824730,-8.384404,8.473711,7.899541],[3.199863,-3.673685,-6.207947,0.405750,-8.269254,4.607629,6.426220]],[[3.149228,7.494010,-4.690779,9.960591,4.756492,-6.874105,-1.024052],[-4.598421,-6.162892,-4.382200,6.036024,5.480312,1.123522,-0.091039],[-6.926004,2.448721,-1.550885,-0.746667,6.101182,-0.243230,4.400537],[7.231665,-3.061163,3.510221,3.531976,4.403627,-4.630472,9.778090],[-0.267825,-9.388102,4.039176,3.424712,-2.271161,-2.708728,3.039439],[-8.699428,1.279833,8.396649,-6.735629,0.266889,-8.550326,-7.602628],[0.473166,-8.627719,-7.956020,0.172343,-8.236567,1.483072,-9.754022],[8.937565,8.200017,-6.601397,8.658948,-3.192439,3.668272,1.275909],[0.768285,-4.301726,8.241978,-2.824780,-1.570741,7.940475,-6.250859],[5.644664,8.810655,2.161020,6.875305,1.347285,6.994176,-5.581675]],[[8.758602,-9.911538,8.165200,-6.294547,3.178834,-1.669872,-4.819847],[9.025609,3.254001,3.913657,3.068001,9.913984,-8.390432,6.151887],[-6.577161,-7.048364,4.325235,-0.205779,-2.919824,7.997239,-9.302150],[7.030021,4.851110,6.400359,0.010031,4.710542,3.636207,4.759960],[-8.577680,7.935492,-5.567399,-6.848789,-8.415426,6.299086,4.160901],[8.784615,-3.289864,-1.691623,0.791902,-2.166945,-7.543455,1.212866],[-4.038181,-8.321396,1.148161,-0.844011,6.771625,7.146005,8.334510],[-8.593482,9.356263,-7.393747,-1.601788,3.681251,6.135387,3.690718],[-4.884140,4.319952,9.635770,0.500614,-7.124570,2.956028,-1.479469],[1.367879,4.218685,4.378031,2.137961,-9.082504,-5.778748,1.353482]],[[-3.774444,-0.306607,7.285245,1.512061,1.856421,8.382903,-2.663230],[6.616775,8.174186,6.084106,3.300170,4.028200,-6.009366,-4.255402],[-6.020376,-2.438698,-9.039278,2.004923,5.096548,8.072589,2.299466],[-8.435999,9.981359,-0.103158,-3.330316,4.105643,-3.416074,4.745463],[-2.032073,-4.755706,0.785185,2.959039,2.536228,-2.696615,-1.786207],[3.475607,-5.336438,8.736355,5.387712,5.485197,6.521624,6.228442],[9.136542,9.467577,3.212540,-9.183602,-1.649514,-1.644250,-5.141822],[-0.108091,-5.038960,-4.383746,3.503459,-7.065154,-6.231490,3.308006],[-9.108568,5.715501,5.278733,-9.170813,-3.298016,5.954765,-3.477962],[-4.359296,-7.287460,6.810857,-2.584994,-6.136387,-3.502049,5.275576]],[[-2.357067,-0.850851,0.506633,-2.531915,-8.883194,0.154917,-5.530988],[-8.923291,8.704222,1.863453,7.743118,-3.052253,4.842100,-5.641576],[-5.371899,-2.518104,-9.566031,7.664779,-0.925778,-7.959736,-3.734670],[-1.561568,-9.546749,-7.090503,0.762310,-2.316354,-6.787701,3.692940],[0.065446,1.011583,5.715001,-7.558273,9.808317,2.413929,0.739385],[-1.251554,-1.534284,-1.971159,9.408193,-7.133067,4.729718,-8.723689],[8.457150,9.934058,8.051726,-6.497927,-4.911447,-4.058076,9.962617],[3.320964,9.398648,-4.871539,-6.654227,-1.361931,1.317815,3.294723],[3.487799,5.596168,7.461062,0.663600,9.656610,6.405661,-8.075297],[4.784071,6.062927,5.619543,0.887759,-7.254607,-6.337044,8.846036]],[[1.303759,-9.527013,-5.006805,-0.109921,-1.410974,-0.483000,0.989352],[5.356403,7.701958,9.580239,-8.399225,5.204379,9.004400,6.488925],[3.082524,2.355458,4.398161,4.283442,0.049927,8.982663,-3.711649],[-7.712987,5.390139,1.760736,-6.888969,-8.315147,4.057994,-7.859978],[4.735796,6.131216,3.261790,-0.933363,-5.473077,-7.724473,6.020594],[-1.855601,-8.781188,9.991178,-5.375078,-3.524915,-1.496579,3.333499],[0.097976,-1.093728,-2.993107,4.519111,-7.643307,-5.619229,6.260468],[3.471855,9.461034,-7.125257,-5.378688,8.575263,2.771017,6.750680],[-6.661245,5.990274,5.268497,7.669728,7.641041,0.534601,-5.637549],[6.276046,-5.759312,-2.789633,-0.547992,5.357805,-2.490078,5.384848]],[[9.785345,5.268954,-9.422019,9.263233,-0.352745,4.029827,8.180880],[-8.628816,-4.462883,9.685626,-1.377340,-3.864457,9.508518,5.913540],[8.928557,1.167834,0.925177,-2.000390,3.479099,1.020215,-5.947485],[-6.408480,9.422539,2.123969,-7.554547,0.559790,-3.275888,9.035894],[2.720957,-9.753596,0.603467,2.541979,-0.056583,-7.934846,2.333374],[-9.692288,-9.700141,4.112229,7.930253,-8.948756,-0.095052,-9.647384],[0.789743,-0.834099,-3.954407,7.654719,-8.372926,-4.731610,4.946382],[-2.832472,2.926128,-8.340902,3.405401,8.591995,8.071747,-5.474085],[3.718273,-6.193994,-1.723392,-1.163564,1.579466,7.176990,-2.979776],[8.853138,-9.208331,4.528859,-8.769504,-0.223427,9.228037,-5.732946]],[[3.574278,-3.297625,7.619402,3.468120,8.642861,-6.059595,-3.952113],[-6.192762,0.641926,-0.266956,-0.186951,0.165925,6.527938,-5.339377],[-4.401272,3.844346,-2.547752,-0.803071,5.522013,8.065885,3.792121],[1.043882,7.219405,2.533744,0.374445,0.400675,2.290068,-6.984848],[-7.796873,6.975897,8.801775,-4.904312,2.455952,8.569680,-5.369338],[8.863374,-2.479211,7.172541,4.693698,8.265634,-5.861025,-4.546440],[1.577030,2.243375,0.544611,-6.163698,7.097537,-6.072278,-3.238525],[5.754657,1.892370,-8.430459,-3.728099,8.124170,-6.866485,-2.970055],[3.928848,-4.538586,-2.964578,-8.890851,2.761255,-4.600935,4.538977],[0.369440,0.338232,2.215015,0.110654,-5.449435,1.701287,0.620806]],[[-8.017938,3.295140,-8.852511,9.321761,1.326425,5.588504,-7.399481],[6.282843,-9.693382,9.637600,-3.431426,-8.582821,1.537775,0.012696],[2.963951,-9.573823,-5.403137,1.522616,-1.808985,6.145070,0.561187],[-6.609525,7.674518,8.962593,-9.509730,3.074547,6.879377,-6.107488],[-9.945890,-5.067137,6.286543,-0.211615,-0.487395,-9.182741,-5.567651],[-6.260565,-6.123630,9.502683,-6.187014,-4.739296,-3.379344,9.965566],[6.938765,-7.968203,1.746434,4.335629,9.921072,3.133744,-4.493039],[-7.055135,8.812615,-0.875680,2.260201,0.548587,-3.481413,-8.669811],[0.567179,6.545227,-8.147501,8.486540,-8.659587,-5.830550,-7.473399],[3.362801,5.859585,2.214651,-6.400912,6.881351,9.085709,7.621074]]], dtype = "float64")#candidate|1457|(13, 10, 7)|const|float64
bop_1458 = relay.power(uop_1442.astype('float32'), relay.reshape(const_1457.astype('float32'), relay.shape_of(uop_1442))) # shape=(13, 10, 7)
bop_1461 = relay.power(uop_1444.astype('float32'), relay.reshape(const_1457.astype('float32'), relay.shape_of(uop_1444))) # shape=(13, 10, 7)
func_1159_call = mod.get_global_var('func_1159')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1467 = relay.TupleGetItem(func_1159_call(), 0)
call_1468 = relay.TupleGetItem(func_1160_call(), 0)
func_1080_call = mod.get_global_var('func_1080')
func_1083_call = mutated_mod.get_global_var('func_1083')
var_1479 = relay.var("var_1479", dtype = "bool", shape = (60,))#candidate|1479|(60,)|var|bool
call_1478 = relay.TupleGetItem(func_1080_call(relay.reshape(var_1479.astype('bool'), [60,])), 1)
call_1480 = relay.TupleGetItem(func_1083_call(relay.reshape(var_1479.astype('bool'), [60,])), 1)
bop_1481 = relay.logical_or(call_1451.astype('bool'), relay.reshape(call_1467.astype('bool'), relay.shape_of(call_1451))) # shape=(13, 10, 7)
bop_1484 = relay.logical_or(call_1452.astype('bool'), relay.reshape(call_1468.astype('bool'), relay.shape_of(call_1452))) # shape=(13, 10, 7)
output = relay.Tuple([call_1453,var_1454,const_1455,bop_1458,call_1478,var_1479,bop_1481,])
output2 = relay.Tuple([call_1456,var_1454,const_1455,bop_1461,call_1480,var_1479,bop_1484,])
func_1485 = relay.Function([var_1454,var_1479,], output)
mod['func_1485'] = func_1485
mod = relay.transform.InferType()(mod)
mutated_mod['func_1485'] = func_1485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1485_call = mutated_mod.get_global_var('func_1485')
var_1487 = relay.var("var_1487", dtype = "bool", shape = (20,))#candidate|1487|(20,)|var|bool
var_1488 = relay.var("var_1488", dtype = "bool", shape = (60,))#candidate|1488|(60,)|var|bool
call_1486 = func_1485_call(var_1487,var_1488,)
output = call_1486
func_1489 = relay.Function([var_1487,var_1488,], output)
mutated_mod['func_1489'] = func_1489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1572 = relay.TupleGetItem(func_1140_call(), 0)
call_1573 = relay.TupleGetItem(func_1142_call(), 0)
output = call_1572
output2 = call_1573
func_1574 = relay.Function([], output)
mod['func_1574'] = func_1574
mod = relay.transform.InferType()(mod)
output = func_1574()
func_1575 = relay.Function([], output)
mutated_mod['func_1575'] = func_1575
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1586 = relay.var("var_1586", dtype = "float32", shape = (13, 8, 5))#candidate|1586|(13, 8, 5)|var|float32
uop_1587 = relay.cos(var_1586.astype('float32')) # shape=(13, 8, 5)
bop_1595 = relay.add(uop_1587.astype('int32'), relay.reshape(var_1586.astype('int32'), relay.shape_of(uop_1587))) # shape=(13, 8, 5)
bop_1598 = relay.logical_or(var_1586.astype('bool'), relay.reshape(uop_1587.astype('bool'), relay.shape_of(var_1586))) # shape=(13, 8, 5)
func_1226_call = mod.get_global_var('func_1226')
func_1230_call = mutated_mod.get_global_var('func_1230')
const_1604 = relay.const(10, dtype = "uint32")#candidate|1604|()|const|uint32
var_1605 = relay.var("var_1605", dtype = "uint32", shape = (56,))#candidate|1605|(56,)|var|uint32
call_1603 = func_1226_call(relay.reshape(const_1604.astype('uint32'), []), relay.reshape(var_1605.astype('uint32'), [7, 4, 2]), )
call_1606 = func_1226_call(relay.reshape(const_1604.astype('uint32'), []), relay.reshape(var_1605.astype('uint32'), [7, 4, 2]), )
output = relay.Tuple([bop_1595,bop_1598,call_1603,const_1604,var_1605,])
output2 = relay.Tuple([bop_1595,bop_1598,call_1606,const_1604,var_1605,])
func_1618 = relay.Function([var_1586,var_1605,], output)
mod['func_1618'] = func_1618
mod = relay.transform.InferType()(mod)
mutated_mod['func_1618'] = func_1618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1618_call = mutated_mod.get_global_var('func_1618')
var_1620 = relay.var("var_1620", dtype = "float32", shape = (13, 8, 5))#candidate|1620|(13, 8, 5)|var|float32
var_1621 = relay.var("var_1621", dtype = "uint32", shape = (56,))#candidate|1621|(56,)|var|uint32
call_1619 = func_1618_call(var_1620,var_1621,)
output = call_1619
func_1622 = relay.Function([var_1620,var_1621,], output)
mutated_mod['func_1622'] = func_1622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1417_call = mod.get_global_var('func_1417')
func_1418_call = mutated_mod.get_global_var('func_1418')
call_1655 = func_1417_call()
call_1656 = func_1417_call()
output = call_1655
output2 = call_1656
func_1667 = relay.Function([], output)
mod['func_1667'] = func_1667
mod = relay.transform.InferType()(mod)
output = func_1667()
func_1668 = relay.Function([], output)
mutated_mod['func_1668'] = func_1668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1679 = relay.TupleGetItem(func_1140_call(), 0)
call_1680 = relay.TupleGetItem(func_1142_call(), 0)
func_386_call = mod.get_global_var('func_386')
func_391_call = mutated_mod.get_global_var('func_391')
var_1693 = relay.var("var_1693", dtype = "float32", shape = ())#candidate|1693|()|var|float32
var_1694 = relay.var("var_1694", dtype = "bool", shape = (5, 4))#candidate|1694|(5, 4)|var|bool
const_1695 = relay.const([True,True,False,False,True,False,False,False,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True], dtype = "bool")#candidate|1695|(140,)|const|bool
call_1692 = relay.TupleGetItem(func_386_call(relay.reshape(var_1693.astype('float32'), []), relay.reshape(var_1694.astype('bool'), [20, 1]), relay.reshape(const_1695.astype('bool'), [5, 28]), ), 9)
call_1696 = relay.TupleGetItem(func_391_call(relay.reshape(var_1693.astype('float32'), []), relay.reshape(var_1694.astype('bool'), [20, 1]), relay.reshape(const_1695.astype('bool'), [5, 28]), ), 9)
output = relay.Tuple([call_1679,call_1692,var_1693,var_1694,const_1695,])
output2 = relay.Tuple([call_1680,call_1696,var_1693,var_1694,const_1695,])
func_1700 = relay.Function([var_1693,var_1694,], output)
mod['func_1700'] = func_1700
mod = relay.transform.InferType()(mod)
mutated_mod['func_1700'] = func_1700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1700_call = mutated_mod.get_global_var('func_1700')
var_1702 = relay.var("var_1702", dtype = "float32", shape = ())#candidate|1702|()|var|float32
var_1703 = relay.var("var_1703", dtype = "bool", shape = (5, 4))#candidate|1703|(5, 4)|var|bool
call_1701 = func_1700_call(var_1702,var_1703,)
output = call_1701
func_1704 = relay.Function([var_1702,var_1703,], output)
mutated_mod['func_1704'] = func_1704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1706 = relay.TupleGetItem(func_1140_call(), 0)
call_1707 = relay.TupleGetItem(func_1142_call(), 0)
output = relay.Tuple([call_1706,])
output2 = relay.Tuple([call_1707,])
func_1719 = relay.Function([], output)
mod['func_1719'] = func_1719
mod = relay.transform.InferType()(mod)
mutated_mod['func_1719'] = func_1719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1719_call = mutated_mod.get_global_var('func_1719')
call_1720 = func_1719_call()
output = call_1720
func_1721 = relay.Function([], output)
mutated_mod['func_1721'] = func_1721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1417_call = mod.get_global_var('func_1417')
func_1418_call = mutated_mod.get_global_var('func_1418')
call_1727 = func_1417_call()
call_1728 = func_1417_call()
uop_1731 = relay.log2(call_1727.astype('float32')) # shape=(13, 10, 7)
uop_1733 = relay.log2(call_1728.astype('float32')) # shape=(13, 10, 7)
output = uop_1731
output2 = uop_1733
func_1745 = relay.Function([], output)
mod['func_1745'] = func_1745
mod = relay.transform.InferType()(mod)
mutated_mod['func_1745'] = func_1745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mutated_mod.get_global_var('func_1745')
call_1746 = func_1745_call()
output = call_1746
func_1747 = relay.Function([], output)
mutated_mod['func_1747'] = func_1747
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1759 = relay.var("var_1759", dtype = "float32", shape = (2, 13, 10))#candidate|1759|(2, 13, 10)|var|float32
uop_1760 = relay.asinh(var_1759.astype('float32')) # shape=(2, 13, 10)
func_1574_call = mod.get_global_var('func_1574')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_1767 = func_1574_call()
call_1768 = func_1574_call()
func_755_call = mod.get_global_var('func_755')
func_761_call = mutated_mod.get_global_var('func_761')
const_1771 = relay.const(-4.040468, dtype = "float64")#candidate|1771|()|const|float64
var_1772 = relay.var("var_1772", dtype = "float64", shape = (8,))#candidate|1772|(8,)|var|float64
const_1773 = relay.const([False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True], dtype = "bool")#candidate|1773|(20,)|const|bool
const_1774 = relay.const([-9.018663,3.496449,6.932698,-7.519328,8.657994,9.751515,4.100713,9.343109,1.052732,7.843507,8.056258,-2.359836,5.813134,5.137403,5.634921,-3.127982,-7.448153,2.328454,-0.501424,-5.393350,5.839384,-3.522698,9.993894,4.595339,1.533544,-2.731762,-3.264801,-5.559850,-7.477842,-1.638458,4.427625,7.049740,0.505024,-8.910210,-8.883821,7.354959,-1.066313,-2.567427,1.498575,-2.348684,3.625898,4.241877,6.820995,9.816611,-5.642362,8.690075,-8.129563,0.626245,1.207569,3.922631,-5.086546,-6.380477,-6.157870,-9.060094,-7.762759,-0.401060,4.349421,3.854977,4.776920,-7.139243,9.041067,-9.914279,-9.710757,2.293604,0.566865,-1.658329,8.099523,-2.898322,2.275496,5.101181,3.447010,8.827459,9.979034,7.087787,7.374243,-3.960864,1.255617,-5.708985,-6.460062,-9.840850,-8.312235,1.668000,3.542547,7.080568,-7.005928,-5.601656,-9.497419,2.121054,-6.487355,8.744982,-6.651277,-1.357349,-9.584126,-5.243082,-6.591257,-3.734604,9.080198,-4.306378,0.946911,1.188978,-3.369653,1.934532,-2.030127,6.619168,3.499569,-9.406818,-6.794403,5.704751,-5.922867,-3.137147,-8.931682,0.461867,-3.706540,-7.277610,-2.464014,-9.589975,9.700276,9.716634,-1.745366,9.066586,4.923154,1.993607,-8.991225,-7.450534,-7.886184,-5.034200,9.521429,-2.824589,5.463849,5.617132,0.701540,5.652340,0.496491,-1.721179,4.915188,1.519595,5.688048,-2.813846,-5.619913,-2.840412,3.557421,3.701847,9.075542,2.004747,2.518113,-4.713068,-6.549716,5.457264,-3.530450,1.045629,4.554951,5.694101,4.193014,5.885083,-5.821040,8.783613,-8.034479,3.342351,-9.234523,-2.664049,8.852988,-8.106131,-0.722663,-7.493215,2.828577,-9.190528,-6.433995,-5.450663,-2.667226,2.957351,4.747992,-5.003901,-6.765550,6.882132,-5.766222,-4.777938,-7.902786,9.507858,-3.035787,-9.346358,4.106076,0.004914,-7.536100,-6.982386,3.101389,3.019626,-1.744190,-8.157769,0.738617,2.984500,4.521786,-4.508342,1.358337,6.985966,0.839195,4.680051,-0.429123,-7.102066,-2.640434,9.796928,3.291054,3.561264,1.485372,-4.571706,8.306580,-1.995638,6.345671,4.525568,4.978880,-6.220050,-0.433957,1.220441,-6.200383,9.946180,-3.385074,-4.369502,0.269458,1.375797,5.545025,-2.058402,-0.242730,-2.695731,1.675996,-7.252465,-7.632741,2.665965,-7.608029,8.263687,-4.602133,-1.590194,-1.887271,-3.599547,-5.503525,-8.498000,7.395629,-0.808522,2.348109,7.706420,-9.174164,6.647007,6.966975,6.385146,-9.305031,-7.130149,2.352690,7.971388,-8.312674,-3.010731,-0.134697,-0.928882,9.842630,6.840995,7.693403,1.736066,-0.307268,-9.491806,2.474800,7.598171,1.860639,-5.453151,-8.584859,-9.955790,-9.123811,2.580709,1.370225,-7.259677,2.092647,7.743051,5.986907,-6.038132,-4.135356,1.582757,5.645117,9.610102,-0.488962,3.470699,7.620617,1.017415,-9.992578,-2.857889,9.423237,-9.813833,-2.592540,3.268171,-9.899710,9.078415,7.823245,-9.641814,-7.377641,0.407609,-4.341454,5.262611,-7.883320,8.996625,-9.083289,-7.616184,-3.854549,-7.978411,-2.183548,-9.185989,1.971039,7.857701,-9.678933,4.179673,1.943498,-7.314739,-0.780900,-0.733926,-7.702530,1.923877,5.522891,-5.054834,0.724206,8.673017,1.648239,-2.598206,5.843484,1.119035,-8.830518,-6.068194,0.610670,4.642066,2.387872,-5.663038,3.291673,-5.137829,0.192944,-2.896162,9.431589,-7.469633,-5.547096,1.581452,4.217494,1.628156,-1.969253,8.930768,-0.047470,3.562697,-6.822902,-3.797759,6.961596,5.186297,6.819437,3.027858,0.558252,6.471173,4.742207,4.383007,4.109782,-7.596126,4.721383,3.406661,-8.374380,0.443849,-6.848193,-2.463220,-9.796301,-4.422381,0.961344,-6.074214,-0.203464,-1.966788,-3.840594,-3.135612,3.136820,4.899561,-4.345150,-2.703774,0.763746,-8.763220,6.728428,-2.848551,-7.618581,-8.429167,-8.417668,-1.864404,-6.915421,-5.092160,-7.312026,2.457555,4.657139,-5.178828,6.999185,-5.911955,-1.888902,4.607661,5.738257,0.714445,-7.101441,-0.443435,-0.596572,3.622103,3.336317,-7.842658,-8.577491,9.611001,-4.510039,-6.856108,1.447015,5.345458,5.326207,8.166300,-1.896425,-6.430033,-7.047393,6.693369,0.159127,-7.950420,4.050179,-2.858522,-8.927917,8.355429,-2.329095,-3.063877,2.090121,6.506206,-5.498707,6.741024,-7.144771,-2.726655,-1.812325,0.887644,-9.539214,0.127343,-9.931099,-0.246467,5.392210,-3.522914,5.461581,4.351369,-5.249714,4.830322,-5.767342,4.940101,-2.917611,7.711158,5.126123,-2.888938,-7.915292,8.197078,5.580226,4.286513,-3.313734,-0.833682,3.391385,-0.878619,9.308842,-1.283185,-7.728862,-4.152098,7.300503,-9.538176,-2.890088,4.302190,-1.368702,-4.983597,-2.535325,-3.911598,6.948906,-8.369672,9.409790,-0.734580,-3.863709,-6.016225,-3.299628,8.930463,-7.379840,-6.912695,-9.796231,-4.057790,0.314447,-5.342555,-0.173748,-0.964663,-0.270864,-2.332331,0.794884,-8.937869,-3.594066,-8.772097,2.664620,-6.042218,1.082350,-4.876814,-1.805687,-3.879311,5.686264,9.867697,-2.694635,9.938960,-3.531454,-6.157711,-1.000170,1.960916,1.032250,2.630978,0.926860,-6.934204,9.234015,-7.400392,8.571818,1.674473,-7.352558,7.760449,-5.540146,7.305197,-4.566773,-0.894585,-2.523564,2.022394,4.148416,-2.009900,0.030787,-5.083462,7.299475,-5.478736,8.259656,-4.709303,9.333785,-2.324614,-4.427526,-9.955215,5.823110,-9.564065,8.121535,7.862108,-4.552514,6.698496,2.067418,-8.413040,8.826449,7.366401,-4.420507,-6.837366,8.952084,9.272396,-7.281672,6.493782,-2.831175,9.590190,2.899574,5.638140,-4.945605,1.619075,-7.231428,-8.386864,0.024916,-5.558721,6.533412,6.542646,-2.196060,6.761884,-6.785425,-3.463119,-7.117137,-3.640154,4.665019,5.985823,0.706063,0.383591,1.974180,5.622831,9.792920,-6.484674,-3.800833,-6.111338,9.823401,6.654351,-2.148965,-5.269918,5.628752,-1.364817,-0.823377,-3.939350,8.577985,9.712476,5.338834,0.231162,7.881206,-2.762130,4.232464,-5.514468,-8.054606,-3.488922,0.002830,8.636775,-0.616598,3.437185,3.024423,-1.126059,2.086417,3.141525,-8.575148,-9.596664,6.144037,1.638103,3.335801,9.032644,0.661872,-5.521440,-0.581227,0.226286,9.301228,-5.953686,-7.279374,5.770342,-1.636092,-2.858940,2.809697,-1.013401,2.521209,7.917829,4.095864,-8.974958,3.353825,-4.765880,-8.194881,-6.216216,-6.503400,0.726285,5.187893,9.456978,3.645794,-1.954227,-6.107182,9.959285,-1.270686,-4.626990,6.385444,-0.683078,5.457770,7.914759,-5.443358,3.387649,-3.721409,3.363348,-6.119951,2.765956,-4.046720,-6.833454,3.715669,6.681039,6.598992,6.340853,-5.248667,9.469089,-9.285271,-9.694426,-3.526708,-6.938433,-3.750937,-1.985733,-2.510601,-2.869135,0.399640,4.883909,3.407083,-2.680512,-5.995755,7.793898,5.411544,-3.263798,0.971361,-3.178220,-6.963602,-1.739147,-0.122355,9.273489,2.474703,5.364788,0.945383,1.240050,9.228206,7.085597,8.121935,9.401583,6.895239,7.474658,-0.444921,-3.067412,-9.642456,6.842711,4.417214,0.685682,-2.377126,3.948061,1.090818,-5.646074,-6.408498,-5.397002,3.728794,-1.030022,0.690992,2.186121,8.731812,-2.853509,8.886578,-8.801067,2.595754,7.847787,-3.692255,2.671272,0.607324,0.828840,2.018947,6.234745,5.515001,9.734708,5.957022,-4.763099,-1.201517,-2.405615,-8.661087,-3.624903,-0.951794,9.512611,-4.857429,-1.278580,8.203996,5.594314,7.938891,8.172988,-2.663792,9.672961,0.272631,-1.555400,2.345045,6.619107,8.750245,7.597492,8.608811,-6.447026,4.286475,1.635840,-8.221256,9.850634,-1.178187,-4.569642,2.199353,-6.896655,6.836482,-6.796011,-9.962867,-9.347684,0.255441,6.397590,5.334234,-6.434387,8.622472,9.078231,-2.229341,6.213791,0.126873,3.881849,-2.905342,4.095395,-4.826316,-8.443589,-5.454180,-1.242043,-8.581386,-1.471405,4.625843,-1.685123,6.299828,6.449195,-5.428483,-1.474500,-7.566515,-2.849385,0.349522,1.311178,9.061592,-9.542058,-9.484429,7.698943,4.652469,-4.487379,-5.058635,3.422947,-2.079232,7.872564,9.603021,-3.552514,3.724511,-0.265165,4.761904,-1.291175,6.358585,-4.370642,4.832872,-4.298699,2.274291,0.499019,5.847535,5.775323,4.304766,-7.524197,-9.310080,2.007192,7.493103,1.750549,3.377613,0.865610,-1.709802,-8.881348,6.932646,-3.441616,-4.859825,-3.670977,-9.598346,5.788284,-6.782700,0.670774,1.958978,-5.696454,-4.705809,0.839791,7.292303,6.028922,-8.986566,0.163536,-6.367571,-2.260437,-7.421461,0.265261,8.821523,-8.856320,-3.119513,-3.518343,-3.759590,7.577394,-7.909889,-5.749244,3.458845,-4.362548,-3.809364,-4.902301,3.026010,7.960620,5.532598,7.152948,6.537465,0.778281,8.145574,3.896311,-6.391800,-8.959882,1.034047,8.893620,-9.496214,-4.672995,2.996234,-5.030301,-3.148065,-7.321665,-3.867462,-4.423847,-4.231550,8.469619,6.779700,7.071504,9.610968,6.248953,7.466628,-6.803670,-7.800767,-8.040982,2.477690,-5.312823,-7.664165,6.671647,-5.677796,-1.486452,0.425733,-1.669592,5.757809,9.799367,-0.346288,6.672390,6.338264,4.753256,8.174914,1.313168,-1.947068,-3.644310,6.074266,0.446612,0.971870,-5.218619,-0.259922,0.987274,-0.912313,-2.775619,1.529841,-8.589774,2.008179,-1.279200,0.233094,6.296478,-1.672535,-5.302361,-8.298278,1.341862,-0.673169,-5.856369,1.293313,-1.696996,-1.807207,-9.507427,-3.619128,-6.542388,-9.401104,-2.977162,6.270621,-1.354005,6.023858,8.211167,-0.615838,8.884500,-0.247663,9.953383,-3.952869,2.159276,2.210866,-3.417351,2.575981,4.166126,-6.187469,8.129542,-4.149138,8.184608,9.994828,7.188921,3.042117,-4.518783,-4.222553,6.804975,7.899439,-9.582968,-6.514813,-6.394128,8.070327,-7.114124,-7.605620,9.724119,4.586213,-0.751076,1.891887,-9.985647,1.818242,-0.108963,2.896987,-7.294821,7.009536,0.972065,1.523010,2.680502,8.853293,-1.189959,9.501355,-9.298514,-5.376016,3.279533,-6.641542,7.251214,-2.186658,-3.680908,4.164757,-3.422188,5.023642,7.617053,-7.670833,7.405344,-9.397580,8.554981,-0.416188,-4.974025,-8.816366,-8.386325,9.630676,-3.723406,-5.818354,9.013820,8.804691,-3.873322,7.524991,-7.911904,-7.776245,-5.505909,1.352683,-1.669946,0.135887,8.657484,1.911295,5.717303,7.434136,-2.362103,-7.388361,6.462966,-2.747010,-3.032684,7.233265,6.279949,-1.373239,-0.909624,1.445997,0.860336,5.018990,-1.423023,2.503522,-0.678601,-9.460441,-3.122518,-9.080008,-9.339598,9.975760,5.848802,0.290700,-8.584614,-0.462418,-8.754222,5.686042,-1.211145,-7.874240,5.119995,-7.028949,-4.967904,1.031516,3.596545,-6.620618,-7.195918,-7.366526,1.339984,-1.606218,-8.712244,-2.892709,-7.636913,-0.741657,9.133161,6.451460,-2.246846,-0.019889,-1.806651,5.797285,7.188985,-9.479396,8.932301,1.931831,-1.760101,-2.894253,-9.372701,3.083356,2.474087,-4.121233,-7.649695,0.936518,3.462682,7.351822,2.696401,-4.233613,3.403487,-4.185753,5.236340,7.730393,8.996157,-4.173474,-0.063367,-1.357115,-6.088893,-5.893735,0.441712,8.289848,2.228679,-6.763244,-7.910267,-4.240875,5.702717,-7.398446,-8.441656,5.556494,-9.840826,-6.302388,7.031841,-7.904808,9.146342,2.383131,-0.633814,8.181483,0.562964,9.963400,-4.802128,5.374598,-6.057438,2.950722,5.477304,8.048480,-1.574408,1.320126,-7.050498,0.325040,-5.965489,-8.152225,-8.981543,2.166205,-3.688918,2.759656,-4.583190,-1.769383,-7.069083,7.380862,-9.233149,0.261700,-2.872616,4.249481,-6.961349,-2.760275,5.657781,-1.820836,4.956593,8.020051,-5.799261,-2.079868,-6.297969,2.250497,-4.186912,-9.997047,3.691524,-2.489197,-6.007406,0.759146,-0.810858,-9.894533,-6.519584,9.800055,-5.154263,8.505676,7.867621,8.297753,8.331425,4.822928,9.798525,-5.960542,2.878554,8.158589,-4.573168,4.977046,-0.571133,-0.394059,-6.267749,-1.950624,1.739323,7.275567,-4.084005,-9.874718,1.335360,1.489281,5.091109,-2.825349,-6.536312,5.494819,-3.438641,-8.511175,-0.175467,7.206563,-5.491858,6.044070,-1.576486,5.430638,8.239170,-3.579216,5.833836,7.435575,1.469341,9.374572,2.410597,5.376364,7.074365,6.563994,-4.489608,-4.309507,-4.642131,-4.595995,-0.967522,8.909354,7.723902,9.855191,-9.797331,-7.125234,-4.776505,6.913556,-9.801081,1.650398,-1.528534,9.545728,2.152919,-1.335876,5.576302,-8.327813,-4.419489,0.975155,5.694496,-1.728999,0.915682,-6.867361,-3.299896,-4.547919,-9.003075,9.788410,-1.392193,9.933813,-6.971981,9.783440,2.075988,-7.973682,-9.839114,3.440413,-7.414639,8.257363,-0.444117,3.235879,8.305545,2.854080,3.065033,6.478109,9.308602,5.061114,-3.238862,6.449636,9.662620,7.920060,4.289103,2.439619,-7.722163,-7.246062,-7.938652,4.894505,7.678215,1.915387,4.285308,-9.629835,-3.847567,1.667467,-0.876298,-3.895472,-0.937004,2.964076,-6.519307,0.114127,4.506835,-4.936875,5.460969,-4.926138,-4.693841,5.688144,-1.985395,0.119380,6.172684,2.243588,7.489225,8.005287,5.809900,-9.261492,-5.733844,-9.955840,4.328941,5.547580,-7.776714,4.208232,-8.592057,4.610238,-3.578713,2.976064,3.979054,1.514713,-2.049361,-5.183956,-4.696896,0.832197,-5.564413,-7.342295,-3.085722,-7.081261,3.668927,-2.668623,-8.714328,-2.528631,-2.296617,-6.159071,-7.356685,-9.509030,3.048320,-4.153224,5.715018,-2.685984,8.330263,1.016191,-1.050049,6.906584,7.112748,0.467629,7.741455,-9.757843,5.999511,6.219884,2.254579,-0.475824,-8.331378,-3.305790,5.672437,0.462025,5.099116,-8.593941,-0.871347,-8.869165,6.394394,4.982655,6.783550,-1.077354,-6.134207,1.390324,-0.124684,-9.273670,-5.970930,-2.852820,6.286483,7.575750,4.612083,1.432220,4.819843,1.022138,4.785894,9.734786,1.238342,-1.781039,2.098877,7.781883,4.644303,-5.338681,-9.374420,7.725772,-6.503654,-3.469682,4.668602,8.541017,5.690283,1.885709,2.674772,-1.588429,7.355523,-3.271396,-1.131437], dtype = "float32")#candidate|1774|(1352,)|const|float32
call_1770 = relay.TupleGetItem(func_755_call(relay.reshape(const_1771.astype('float64'), []), relay.reshape(var_1772.astype('float64'), [1, 8]), relay.reshape(const_1773.astype('bool'), [20,]), relay.reshape(const_1774.astype('float32'), [1352,]), ), 1)
call_1775 = relay.TupleGetItem(func_761_call(relay.reshape(const_1771.astype('float64'), []), relay.reshape(var_1772.astype('float64'), [1, 8]), relay.reshape(const_1773.astype('bool'), [20,]), relay.reshape(const_1774.astype('float32'), [1352,]), ), 1)
func_600_call = mod.get_global_var('func_600')
func_603_call = mutated_mod.get_global_var('func_603')
const_1777 = relay.const([[9.932887,-1.278439,7.148005,-3.075297,3.167843,9.439315,-9.832000,-6.597555,1.013032,-9.617967,-3.201826,-7.744539,6.105322,8.751444,1.242396,-0.938218,6.569595,8.659521,2.406957,7.337930,4.203556,-3.767563,0.301513,5.535370,2.402801,-9.139912,-5.387612,0.340212,7.943894,5.152068,-4.967212,4.355111,9.960963,-3.340697,-4.122500,2.177356,4.050087,3.884683,-3.475478,6.948661,-8.771023,1.985318,5.711226,-0.964966,3.903472,4.380717,-1.299196,4.663555,-0.967313,-7.476469,-2.906169,-2.171183,4.459919,-8.446667,-4.321645,3.968273,-7.252352,6.088491,2.170006,-9.053480,-8.768946,-3.335399,-8.313389,-9.883849,-0.316760,-7.656490,-0.131060,-2.630121,-0.308910,4.744563,-2.647727,-7.502223,5.598193,-1.400092,8.848957,-4.876386,0.350895,-2.211550,-4.107633,-8.972317,2.099652,3.886990,0.426154,8.108877,4.058879,3.001128,9.039724,-0.001220,4.886667,-1.086561,5.096602,-0.649624,3.340709,-7.751255,5.875656,-6.078602,9.306508,-6.741186,3.370390,8.324395,-1.682060,5.597270,-1.027731,4.926986,-2.715514,-1.055868,-4.362997,-3.353484,-4.359665,8.632881,7.991108,-1.646591,-0.348948,-5.248878,7.695863,-6.018473,-9.861774,2.658005,3.905918,-9.463284,-4.586412,5.337957,-7.499771,6.614875,-6.292816,-8.210639,-3.679836,2.242628,-2.519496,3.406032,8.315646,1.598583,6.304422,-7.504511,9.596890,-7.282596,0.267762,-5.851786,-9.731445,-6.782773,0.834020,-1.003330,-0.689706,-0.267332,3.322093,-2.346522,4.439912,-8.509856,-4.170335,2.352954,-2.309221,-7.947038,0.772255,8.455472,-6.143930,-0.058199,-7.718810,0.494892,-6.045540,0.581165,7.168443,-9.170607,-7.763736,8.635494,9.355902,-6.881278,5.045324,-9.572839,-3.035842,-1.702270,2.004203,-3.221804,1.447320,-2.743822,5.521542,-4.019917,1.268195,1.790244,0.266448,5.976224,1.435500,-4.036364,-8.732800,9.475720,-9.485156,7.820356,-4.400338,-3.316782,1.808695,-7.182541,-2.163772,-3.077082,3.980444,1.094802,-5.450314,-0.297444,5.825336,-4.173188,8.135342,-9.101420,5.598518,2.670282,0.210614,-3.053867,0.323308,9.261768,5.543418,5.601593,8.567055,9.688972,1.081044,0.482749,6.727387,-8.372502,2.782877,-5.327902,-9.857616,-3.666758,7.954768,0.394983,2.800884,3.792221,-6.872555,-4.842793,0.347500,7.340791,4.877783,4.795456,7.580930,3.019509,-4.565636,8.781747,0.773287,-2.326709,-3.766543,2.830631,-4.978044,-8.322142,-3.553829,-2.448368,5.546691,-2.418445,-1.097618,5.220093,-2.817897,-5.588140,-4.752852,8.501302,-6.698855,2.657009,8.695717,-1.675441,3.779268,-4.185744,7.784475,9.818888,6.480725,5.949321,-0.278396,6.207315,1.982074,8.781318,8.036860,-8.354811,5.416485,0.639973,-5.370486,-8.783756,-4.699433,5.014745],[-8.784061,-9.912829,1.967435,8.652388,-4.705572,-9.401048,9.300485,-5.374613,-6.991981,-9.997293,-8.618035,5.128505,0.003507,-6.190933,-3.463530,-9.323029,-7.056787,-3.941325,-5.004949,4.391018,-3.335112,6.340706,-2.890928,7.897936,-0.577270,-5.403568,3.882784,6.761147,4.605729,-5.204988,-0.733526,-5.400212,-2.527062,-7.576073,1.393029,3.698921,9.416434,1.492570,-1.404280,-6.267692,-7.627026,9.294015,-7.704785,-2.657198,-8.931338,-9.227001,7.326060,-9.127458,4.802285,9.824469,-3.863218,1.681159,4.156762,7.516145,2.979077,-0.368063,-4.526296,1.166289,-7.964552,0.970550,-2.804147,5.382680,-7.331533,8.410154,-3.851978,-6.545572,-0.091376,-8.886552,-9.110947,2.485758,-8.213333,1.517759,-3.431129,3.592450,9.703452,7.503860,-9.742264,6.772708,-9.619426,6.145079,1.323225,-2.498068,6.361615,9.393397,-2.287477,4.786869,-9.564915,-0.470725,1.180274,-8.634061,-5.808793,-7.432296,-4.191375,5.408299,3.883699,-0.287452,0.660554,-8.593082,5.548872,-8.172180,-8.050156,-0.043903,7.499873,2.976442,5.734742,4.749849,-6.145414,-1.210235,9.054781,7.267135,-7.352584,-2.221145,-3.738523,-3.403739,-2.077466,-3.010988,-1.943504,-0.126718,5.468764,-3.675460,8.993866,-1.859258,-1.411132,-8.561454,-3.347505,-3.764267,5.624526,-4.621968,8.211861,-5.715739,-7.834208,-6.862828,4.925585,-2.383273,5.027784,5.909321,-2.004613,-0.135577,6.915968,-8.657960,-7.939024,-7.549816,2.799965,-2.307809,-8.468232,6.260282,9.011690,1.319114,-3.911511,6.630970,9.248140,-7.056162,-4.376447,-5.010406,4.868823,9.062401,0.848578,-5.601339,3.308413,4.953378,2.495570,-3.867527,-8.300302,6.915961,0.640209,-1.004874,-8.547527,-5.901987,5.133577,-3.965271,9.879122,2.698637,0.631989,-0.283214,-5.053682,-8.028791,-7.732689,-1.279038,0.826051,1.772388,-0.780600,8.106883,-7.039615,5.483604,-3.481951,-3.985595,4.657902,-6.699743,2.744849,2.532119,-0.713231,4.478729,-1.861815,6.742867,-3.062433,-5.769429,6.563657,9.362715,6.935124,5.790390,-0.985763,-4.448174,6.372254,-9.598361,1.869931,-1.474939,-0.272688,-5.457848,6.231995,-4.361547,-2.678943,-0.476591,-0.865558,6.263212,-6.086715,8.164906,-0.055502,5.088716,-2.050835,1.970667,7.729911,2.515359,2.284988,6.959564,0.709661,-8.295328,-6.487616,3.839005,-2.225759,7.928164,-5.804071,1.803691,-4.559725,-7.873238,6.083154,-2.087036,-8.433790,-0.520670,8.001518,-9.719242,8.004202,-0.225874,-1.148735,-9.351313,-5.719599,3.788337,-1.728692,8.797204,9.099382,6.307945,4.250203,-9.837624,9.077245,-5.812902,-8.120387,3.369539,2.608409,6.356338,-8.416119,2.643600,9.870264,6.725470,0.591338,-3.520335,-6.008281,6.555472,2.786448,2.666045,-0.847958,1.203627],[5.370326,-4.235708,-0.549110,-8.446146,9.403415,4.036835,-6.004487,-3.721357,-4.466907,0.052635,-7.668192,-3.868670,-9.855768,-8.145555,9.053323,9.703395,3.593390,-2.061674,0.786551,-8.560466,-3.921056,-5.664811,-1.561302,-7.105302,1.157870,6.390204,4.033479,-8.329025,-1.457900,-8.893306,-9.051820,-9.407576,-4.520940,-0.410966,2.306176,-9.800508,-0.110697,-2.815531,-7.033118,4.254747,-1.126272,5.309695,8.855012,9.533458,1.341673,0.357669,3.648316,6.202798,-0.010445,-2.837282,-3.671269,2.628167,8.475111,7.321068,1.068874,1.033752,7.856293,5.976525,-7.414470,-5.607603,-8.718666,-0.412958,3.123110,9.384140,0.784159,2.270537,2.553569,-9.400735,7.910353,-3.661201,8.870471,-2.952457,-2.795752,8.876253,4.298344,-6.745599,0.315130,6.341491,-2.503393,1.898097,-0.785291,5.524349,2.328452,-6.474647,5.475314,1.252659,7.840299,-4.445531,1.128438,-4.205159,6.569140,3.828997,6.759703,-1.587446,4.571397,9.261424,-9.177671,6.034977,3.477379,-8.173126,-6.416776,4.136817,-1.040347,-2.655517,1.098838,-3.834514,3.153019,4.838323,-1.913162,5.861412,5.314806,-8.927692,8.340268,-3.632830,9.704991,-6.259013,-1.293115,0.285875,5.114499,5.399619,4.482494,4.983459,6.751953,8.393232,-3.166311,6.112949,-1.354083,-2.587523,-6.503477,-2.699639,7.887776,8.754969,-1.309121,-7.101468,-1.555780,-4.245397,2.905479,3.692622,-4.451165,1.307486,1.936188,1.820799,-9.104002,8.914818,-0.949294,-0.405075,-1.308166,8.574870,7.555183,-1.869211,5.381347,6.754057,4.530391,3.936330,8.932453,-2.649399,-3.484181,-9.814180,1.249613,1.279342,2.019531,-1.787489,9.780308,-6.379578,9.990330,7.431727,2.827045,-5.090961,0.695196,0.272012,-0.165941,3.000601,4.714748,5.119198,7.586274,-9.443562,-7.294020,3.568609,-7.996437,-4.405642,-5.441483,0.416018,-9.476424,-4.223222,9.775500,8.260019,-9.388010,-5.872500,-1.965426,-2.162526,-1.628856,4.668897,5.303279,3.175581,-8.123965,-6.870541,1.633926,7.568029,4.957530,9.780869,4.038314,-3.435392,7.138361,8.039539,-7.893426,6.630452,-1.075924,0.927550,2.564033,5.500860,5.989182,3.148386,8.308037,-6.469783,-7.557062,-3.125750,-9.401807,7.056270,8.482921,-1.716964,4.545716,3.482169,-3.779971,6.968116,0.052095,7.885151,-5.253244,6.545631,4.068338,-7.582022,1.860579,9.053819,0.382712,2.721165,1.499992,-7.808486,0.240919,-7.678966,9.686532,-4.823448,2.451130,9.792316,-5.078236,3.428102,-4.717806,6.207161,-1.470084,-6.695060,-4.788389,1.626401,4.015598,-0.825940,2.757393,-5.356156,-9.902866,0.858797,-1.627529,-4.198209,0.139564,9.349485,8.664758,9.031820,8.044987,-3.842688,7.076722,-1.799704,1.454341,6.839596,4.410790,3.468603]], dtype = "float64")#candidate|1777|(3, 270)|const|float64
call_1776 = relay.TupleGetItem(func_600_call(relay.reshape(const_1777.astype('float64'), [15, 6, 9])), 0)
call_1778 = relay.TupleGetItem(func_603_call(relay.reshape(const_1777.astype('float64'), [15, 6, 9])), 0)
output = relay.Tuple([uop_1760,call_1767,call_1770,const_1771,var_1772,const_1773,const_1774,call_1776,const_1777,])
output2 = relay.Tuple([uop_1760,call_1768,call_1775,const_1771,var_1772,const_1773,const_1774,call_1778,const_1777,])
func_1794 = relay.Function([var_1759,var_1772,], output)
mod['func_1794'] = func_1794
mod = relay.transform.InferType()(mod)
mutated_mod['func_1794'] = func_1794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1794_call = mutated_mod.get_global_var('func_1794')
var_1796 = relay.var("var_1796", dtype = "float32", shape = (2, 13, 10))#candidate|1796|(2, 13, 10)|var|float32
var_1797 = relay.var("var_1797", dtype = "float64", shape = (8,))#candidate|1797|(8,)|var|float64
call_1795 = func_1794_call(var_1796,var_1797,)
output = call_1795
func_1798 = relay.Function([var_1796,var_1797,], output)
mutated_mod['func_1798'] = func_1798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1831 = relay.var("var_1831", dtype = "uint16", shape = (15, 10, 2))#candidate|1831|(15, 10, 2)|var|uint16
var_1832 = relay.var("var_1832", dtype = "uint16", shape = (15, 10, 2))#candidate|1832|(15, 10, 2)|var|uint16
bop_1833 = relay.bitwise_or(var_1831.astype('uint16'), relay.reshape(var_1832.astype('uint16'), relay.shape_of(var_1831))) # shape=(15, 10, 2)
output = bop_1833
output2 = bop_1833
func_1838 = relay.Function([var_1831,var_1832,], output)
mod['func_1838'] = func_1838
mod = relay.transform.InferType()(mod)
var_1839 = relay.var("var_1839", dtype = "uint16", shape = (15, 10, 2))#candidate|1839|(15, 10, 2)|var|uint16
var_1840 = relay.var("var_1840", dtype = "uint16", shape = (15, 10, 2))#candidate|1840|(15, 10, 2)|var|uint16
output = func_1838(var_1839,var_1840,)
func_1841 = relay.Function([var_1839,var_1840,], output)
mutated_mod['func_1841'] = func_1841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1667_call = mod.get_global_var('func_1667')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_1848 = func_1667_call()
call_1849 = func_1667_call()
output = call_1848
output2 = call_1849
func_1854 = relay.Function([], output)
mod['func_1854'] = func_1854
mod = relay.transform.InferType()(mod)
output = func_1854()
func_1855 = relay.Function([], output)
mutated_mod['func_1855'] = func_1855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1417_call = mod.get_global_var('func_1417')
func_1418_call = mutated_mod.get_global_var('func_1418')
call_1861 = func_1417_call()
call_1862 = func_1417_call()
func_476_call = mod.get_global_var('func_476')
func_479_call = mutated_mod.get_global_var('func_479')
const_1878 = relay.const([[True,True,False,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True],[True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True],[False,True,False,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True],[True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True],[False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False]], dtype = "bool")#candidate|1878|(5, 28)|const|bool
var_1879 = relay.var("var_1879", dtype = "bool", shape = (60,))#candidate|1879|(60,)|var|bool
call_1877 = relay.TupleGetItem(func_476_call(relay.reshape(const_1878.astype('bool'), [140,]), relay.reshape(var_1879.astype('bool'), [3, 20]), ), 1)
call_1880 = relay.TupleGetItem(func_479_call(relay.reshape(const_1878.astype('bool'), [140,]), relay.reshape(var_1879.astype('bool'), [3, 20]), ), 1)
uop_1881 = relay.acos(const_1878.astype('float64')) # shape=(5, 28)
var_1883 = relay.var("var_1883", dtype = "float64", shape = (5, 28))#candidate|1883|(5, 28)|var|float64
bop_1884 = relay.greater(uop_1881.astype('bool'), relay.reshape(var_1883.astype('bool'), relay.shape_of(uop_1881))) # shape=(5, 28)
uop_1888 = relay.sigmoid(uop_1881.astype('float32')) # shape=(5, 28)
uop_1894 = relay.sinh(uop_1888.astype('float32')) # shape=(5, 28)
output = relay.Tuple([call_1861,call_1877,var_1879,bop_1884,uop_1894,])
output2 = relay.Tuple([call_1862,call_1880,var_1879,bop_1884,uop_1894,])
func_1900 = relay.Function([var_1879,var_1883,], output)
mod['func_1900'] = func_1900
mod = relay.transform.InferType()(mod)
mutated_mod['func_1900'] = func_1900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mutated_mod.get_global_var('func_1900')
var_1902 = relay.var("var_1902", dtype = "bool", shape = (60,))#candidate|1902|(60,)|var|bool
var_1903 = relay.var("var_1903", dtype = "float64", shape = (5, 28))#candidate|1903|(5, 28)|var|float64
call_1901 = func_1900_call(var_1902,var_1903,)
output = call_1901
func_1904 = relay.Function([var_1902,var_1903,], output)
mutated_mod['func_1904'] = func_1904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_877_call = mod.get_global_var('func_877')
func_879_call = mutated_mod.get_global_var('func_879')
call_1917 = func_877_call()
call_1918 = func_877_call()
func_600_call = mod.get_global_var('func_600')
func_603_call = mutated_mod.get_global_var('func_603')
const_1922 = relay.const([-5.370084,-1.207680,3.629668,-1.207347,-5.871185,-4.650261,-6.648072,-7.662820,3.245874,1.332566,-2.293352,-7.423345,-5.370753,-7.034678,3.170890,3.126659,-9.129696,6.472475,-9.086186,-3.341658,-4.127519,-1.579772,-9.612689,7.255518,3.622152,2.954815,-4.488792,-2.277724,-9.536339,-3.014346,-3.294964,5.990280,4.327662,-0.978425,-5.074705,-2.306281,7.616261,-9.066485,9.481941,-0.975602,-6.056120,-3.105073,9.638434,7.660946,-1.126040,-0.444981,4.920849,9.783164,-6.747512,-3.060872,-8.130268,1.686447,-0.955038,1.206675,3.639396,-7.051605,-3.911416,-1.587763,6.502743,2.884104,9.109646,-4.551404,8.900147,2.487247,-2.076335,-9.940874,-1.447657,-9.043230,1.497652,-5.253125,6.565722,-5.665660,-6.035598,-2.538410,-6.844743,9.230099,0.897756,4.154740,3.825044,-7.415405,-8.429316,-0.259585,-5.760336,0.923641,0.715187,2.413782,-5.041018,-4.262202,-2.204103,-0.332577,-6.098979,9.524792,-8.994054,-3.221090,0.051718,9.379480,3.071343,1.339635,-2.335155,-1.961554,-5.103263,7.866545,9.993921,7.268069,-7.671301,7.544786,3.630025,-9.972481,7.440790,2.260304,2.562975,-4.808679,2.665870,-6.516050,3.539112,1.269716,-4.072480,-4.475711,-7.536127,-4.309285,-9.224204,5.078051,-8.028052,4.942859,-9.444762,-4.666531,0.613342,-0.242168,-1.470710,-7.905681,9.005735,-0.278226,-4.127106,-8.776814,-9.635058,7.455482,-5.511619,0.981114,-6.295128,-8.523824,4.470246,-6.617167,0.044898,6.675997,-0.471073,2.324480,9.914059,6.269511,4.066687,-7.619110,-6.144480,-5.373757,-5.181193,2.080186,-4.520383,1.983290,3.699017,-5.822355,1.485524,-0.534862,6.598720,9.255125,5.409214,3.543640,-8.676898,2.468766,1.490794,8.973844,9.749680,3.808476,-7.819059,7.442125,-3.829007,7.739621,-4.936878,2.249744,9.718049,-0.652249,-4.731310,3.928349,-7.619549,0.070063,-8.805494,8.059763,-9.271880,1.343286,-6.890389,-8.829193,-5.697795,-8.426658,3.204654,5.593741,-3.945034,-9.758554,3.023907,-5.716957,-6.157989,4.231703,-0.740483,-6.312157,9.715935,-4.900411,-8.729164,1.963819,-6.370105,0.913153,1.009991,-9.720228,2.033454,-9.459464,2.779040,-3.934303,5.659291,-7.896325,-0.599405,-7.277907,3.011304,2.555892,7.510169,-5.946069,-6.084490,1.421649,-5.684509,-3.538623,-9.390987,-0.347159,2.478825,8.924309,6.183155,-0.969851,-4.415406,2.336361,9.352053,-5.132042,1.826997,-7.089185,-6.481619,-2.766430,-0.053615,-1.537991,0.478812,-4.153425,3.220415,2.936557,6.703246,3.314044,-2.451388,3.583961,8.893369,-3.877047,7.613020,7.058176,4.161742,-4.672869,-5.363108,-4.126068,-7.306808,-4.727908,2.395701,-3.223782,7.988627,-4.516707,-2.471028,-2.757156,6.342604,4.746519,0.418753,6.917857,-4.907895,-6.224381,-6.316774,-3.872248,7.429983,7.916980,4.700338,-3.844729,2.163683,-8.655896,-0.425046,4.318034,-4.243633,-5.646333,8.351147,-1.117456,-0.655146,-6.416946,5.185497,9.422477,1.879019,5.982222,-1.651024,-6.928834,6.067730,5.702522,7.453138,9.829273,7.008740,6.525355,1.258125,-4.341389,7.771349,2.074175,-5.159476,1.376181,2.898823,-3.846836,-8.608827,2.299857,1.933929,-4.564140,9.251704,-8.599969,9.073387,-6.203541,0.292765,-7.239808,6.437492,-5.133877,-5.080912,-3.465385,-8.947347,3.252490,0.166243,-3.356601,-8.456412,5.899728,3.154053,-1.278307,7.364514,5.015998,-3.293965,2.649310,0.656689,2.462707,-7.801610,9.609572,-8.197502,2.072549,3.206752,-4.426250,-1.611716,-7.386453,-4.152884,2.160925,5.476246,-6.296768,-3.289342,5.308697,3.546009,-1.376567,-8.112058,0.549947,-6.000833,-4.958971,-2.380888,6.782630,-3.632750,-1.076284,2.079631,5.011111,4.447081,-1.114984,5.455261,3.148308,-4.644687,-0.494530,-6.515969,5.225502,6.635498,-7.363153,-7.546352,-7.975976,1.459041,9.091860,-5.181546,6.790198,1.677340,-3.409115,-3.703485,1.541876,8.370071,0.801322,9.066071,-5.784705,5.480149,6.156510,6.423931,-5.142805,-8.568623,1.803120,-3.620899,-8.214481,-4.922452,1.934803,2.674491,4.145765,-6.804870,-5.374301,5.890606,-0.071339,2.411957,-1.903568,-8.281609,-1.171953,4.773470,2.854727,-7.945343,9.470338,-6.816031,5.428843,1.710989,-9.158898,-9.196740,-6.244417,-5.510031,-1.757786,-7.758095,-9.303590,3.673705,7.740127,-6.681087,4.728524,1.632193,9.773634,9.940532,9.833306,2.573626,-5.553600,-7.307768,8.968541,-8.888870,-7.410147,-8.087537,2.902517,5.767495,-5.180801,2.186363,2.268990,-4.684925,1.647209,5.127466,0.336523,-5.508518,-0.873534,-0.017394,6.899540,3.696895,1.193782,-6.407425,-2.786537,7.365567,0.191990,-6.026277,9.468343,7.373827,-3.731061,2.795589,6.345710,4.850232,-6.688075,2.880003,-8.154925,-9.765118,8.008995,-0.380400,-4.043285,-4.431547,2.216969,-6.399932,-0.025824,3.870649,3.655151,-8.029685,-8.653943,-8.225077,1.408054,2.241539,8.572912,6.379702,-6.947994,-7.435736,7.746557,0.702581,6.881310,-3.664499,0.408662,-7.756620,-4.273596,-7.927148,-8.916144,-4.522466,-9.038795,-4.327365,2.341483,-0.520355,0.216545,-9.967095,-2.426422,0.022889,-9.008868,9.471081,2.467063,-0.158499,-2.288552,3.904051,4.945095,-2.906692,9.228970,1.152046,-9.159017,-5.846380,-7.358217,-1.364757,-9.450967,-2.320585,6.156454,9.435883,4.435194,8.004068,-1.304913,2.127465,-8.990449,8.511962,-2.372607,-0.781376,7.750528,-9.067980,5.066803,-1.519081,5.320948,-5.072198,-8.342314,3.484010,1.212980,7.653941,7.484721,-7.399592,-4.714591,7.675254,-5.659490,2.792559,6.792534,-5.632343,-3.832370,-7.305391,9.860136,4.218017,-3.678756,-4.896787,0.151640,2.576785,-4.645785,-5.421406,-3.989333,8.395030,0.489232,-3.158541,-2.945721,8.713980,6.639379,-1.052141,6.156985,-1.390259,4.020872,1.008475,-9.439208,5.128587,-9.471498,5.679721,-8.958793,-5.924196,3.515941,-6.557957,6.310953,-9.718784,6.933950,6.029284,-2.494970,1.326697,-0.769744,-4.471090,1.219382,8.101932,9.084820,-5.948546,1.594033,9.955735,6.804170,3.004889,-8.796393,9.752454,-7.258497,-3.373696,-0.371630,-1.608437,-8.771018,5.059878,9.951042,-4.996276,8.991334,-4.993448,9.101815,5.948453,4.773697,5.606526,1.746246,0.555665,9.884378,-2.878242,5.920633,1.542153,-0.479327,-0.485394,4.312095,-1.779268,6.374901,-6.009246,5.571632,-3.410145,-9.620173,-1.319163,-7.577248,6.172532,5.926467,-9.037290,0.397257,-0.929290,-6.649812,4.901349,7.428045,9.283845,-1.227735,2.393327,4.716439,-6.275585,2.659304,5.081566,-3.100880,-0.024451,3.114612,2.917797,-6.768520,-2.604647,-7.428927,-9.602439,5.153134,-6.445313,1.210289,0.832870,2.665186,-4.922223,-8.213740,5.974352,0.276721,-6.276903,-3.235756,7.068396,-6.456697,5.381027,9.055425,-0.946563,8.602196,-0.909906,5.045096,-4.386513,6.870589,5.417075,-0.969478,-1.357427,-8.101262,-3.412841,-1.238185,6.688278,9.833813,9.838944,2.588798,-2.614782,7.284244,9.688221,-1.233280,4.895966,3.751382,-1.342782,3.842533,6.045521,6.878450,-1.072551,7.451243,-0.206225,1.764406,3.066353,-2.133670,9.202086,-4.482735,-3.876348,-1.215331,-2.159856,-4.355954,-2.142718,1.049953,-1.643469,6.407907,9.747723,-3.413357,-6.621333,9.897022,-7.935883,3.907143,6.133067,0.756354,-0.031986,-6.008223,9.021782,2.351564,-5.666384,5.414511,-5.778247,-2.177769,3.973938,4.654046,-6.876204,2.102814,-1.721049,-7.661110,-9.953482,6.925267,-7.011017,1.983957,3.579953,7.250597,2.399175,-5.711584,2.016081,1.612051,5.950680,-6.782561,-0.941326,2.533049,-7.955080,-7.371794,0.990507,-1.471317,5.822090,5.786069,-6.566388,6.418201,0.723015,7.802967,-7.184200,0.864359,-9.309418,9.121241,7.605007,7.779201,-3.037731,-1.602453,-1.294117,4.113133,-4.175864,-9.612468,8.735450,-5.372534,7.415578,-2.575030,6.392271,7.361499,9.658154,-5.941333,3.454791,7.675985,6.923368,1.584069,-3.349556,-4.377765,1.296258,7.296521,-5.545575,0.684034,-2.062402,9.253159,2.842824,3.200139,1.032634,1.029637,7.609651,-2.195375,-8.756268,-8.390241,4.890938,5.004522,7.410350,8.025191,2.273308,7.809712,-1.716068,2.898473,-4.073872,0.041383,-0.426206,-5.996491,4.323569,-8.888915,2.480436,-5.821464,3.981695,2.744928,-8.451230,-3.050708,-0.763464,6.849789], dtype = "float64")#candidate|1922|(810,)|const|float64
call_1921 = relay.TupleGetItem(func_600_call(relay.reshape(const_1922.astype('float64'), [15, 6, 9])), 0)
call_1923 = relay.TupleGetItem(func_603_call(relay.reshape(const_1922.astype('float64'), [15, 6, 9])), 0)
func_1288_call = mod.get_global_var('func_1288')
func_1296_call = mutated_mod.get_global_var('func_1296')
const_1929 = relay.const([[3,4,6,6,-1,-7,-10,5,-5,-9,8,9,-5,-4,10,-3,-3,-8,-10,-2],[9,-6,-10,-6,6,1,-5,-3,-7,-5,2,-3,-4,-3,7,5,-5,-4,-4,2],[-8,-3,3,3,-4,8,-6,-2,-4,-7,10,-7,-3,-4,3,-8,-8,2,-6,3],[5,7,-4,4,-5,7,10,-4,4,3,-3,8,9,-3,7,8,-1,3,-5,-3],[7,6,5,4,8,-9,-6,2,-9,4,-3,9,-7,-9,-9,-3,-2,6,10,9],[5,9,-4,-1,-6,-10,7,-4,2,-7,4,9,-10,5,5,8,-1,5,9,-10]], dtype = "int16")#candidate|1929|(6, 20)|const|int16
var_1930 = relay.var("var_1930", dtype = "float64", shape = ())#candidate|1930|()|var|float64
const_1931 = relay.const([-0.360087,6.482601,-1.587323,9.226456,3.649970,-9.545423,-0.553384,-8.361824], dtype = "float64")#candidate|1931|(8,)|const|float64
var_1932 = relay.var("var_1932", dtype = "bool", shape = (20,))#candidate|1932|(20,)|var|bool
var_1933 = relay.var("var_1933", dtype = "float32", shape = (1352,))#candidate|1933|(1352,)|var|float32
call_1928 = relay.TupleGetItem(func_1288_call(relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(var_1930.astype('float64'), []), relay.reshape(const_1931.astype('float64'), [8,]), relay.reshape(var_1932.astype('bool'), [20,]), relay.reshape(var_1933.astype('float32'), [1352,]), ), 7)
call_1934 = relay.TupleGetItem(func_1296_call(relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(var_1930.astype('float64'), []), relay.reshape(const_1931.astype('float64'), [8,]), relay.reshape(var_1932.astype('bool'), [20,]), relay.reshape(var_1933.astype('float32'), [1352,]), ), 7)
func_894_call = mod.get_global_var('func_894')
func_897_call = mutated_mod.get_global_var('func_897')
const_1958 = relay.const([False,False,True,False,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True], dtype = "bool")#candidate|1958|(140,)|const|bool
const_1959 = relay.const([False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,True,True], dtype = "bool")#candidate|1959|(60,)|const|bool
call_1957 = relay.TupleGetItem(func_894_call(relay.reshape(const_1958.astype('bool'), [140,]), relay.reshape(const_1959.astype('bool'), [3, 20]), ), 1)
call_1960 = relay.TupleGetItem(func_897_call(relay.reshape(const_1958.astype('bool'), [140,]), relay.reshape(const_1959.astype('bool'), [3, 20]), ), 1)
func_1226_call = mod.get_global_var('func_1226')
func_1230_call = mutated_mod.get_global_var('func_1230')
var_1973 = relay.var("var_1973", dtype = "uint32", shape = (56,))#candidate|1973|(56,)|var|uint32
call_1972 = func_1226_call(relay.reshape(var_1930.astype('uint32'), []), relay.reshape(var_1973.astype('uint32'), [7, 4, 2]), )
call_1974 = func_1226_call(relay.reshape(var_1930.astype('uint32'), []), relay.reshape(var_1973.astype('uint32'), [7, 4, 2]), )
func_1159_call = mod.get_global_var('func_1159')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1980 = relay.TupleGetItem(func_1159_call(), 0)
call_1981 = relay.TupleGetItem(func_1160_call(), 0)
func_1288_call = mod.get_global_var('func_1288')
func_1296_call = mutated_mod.get_global_var('func_1296')
call_1983 = relay.TupleGetItem(func_1288_call(relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(var_1930.astype('float64'), []), relay.reshape(const_1931.astype('float64'), [8,]), relay.reshape(var_1932.astype('bool'), [20,]), relay.reshape(var_1933.astype('float32'), [1352,]), ), 1)
call_1984 = relay.TupleGetItem(func_1296_call(relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(var_1930.astype('float64'), []), relay.reshape(const_1931.astype('float64'), [8,]), relay.reshape(var_1932.astype('bool'), [20,]), relay.reshape(var_1933.astype('float32'), [1352,]), ), 1)
bop_1989 = relay.subtract(call_1980.astype('uint64'), relay.reshape(call_1928.astype('uint64'), relay.shape_of(call_1980))) # shape=(13, 10, 7)
bop_1992 = relay.subtract(call_1981.astype('uint64'), relay.reshape(call_1934.astype('uint64'), relay.shape_of(call_1981))) # shape=(13, 10, 7)
func_1159_call = mod.get_global_var('func_1159')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_2003 = relay.TupleGetItem(func_1159_call(), 0)
call_2004 = relay.TupleGetItem(func_1160_call(), 0)
func_1288_call = mod.get_global_var('func_1288')
func_1296_call = mutated_mod.get_global_var('func_1296')
call_2013 = relay.TupleGetItem(func_1288_call(relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(var_1930.astype('float64'), []), relay.reshape(const_1931.astype('float64'), [8,]), relay.reshape(call_1983.astype('bool'), [20,]), relay.reshape(var_1933.astype('float32'), [1352,]), ), 2)
call_2014 = relay.TupleGetItem(func_1296_call(relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(const_1929.astype('int16'), [5, 6, 4]), relay.reshape(var_1930.astype('float64'), []), relay.reshape(const_1931.astype('float64'), [8,]), relay.reshape(call_1983.astype('bool'), [20,]), relay.reshape(var_1933.astype('float32'), [1352,]), ), 2)
func_894_call = mod.get_global_var('func_894')
func_897_call = mutated_mod.get_global_var('func_897')
call_2021 = relay.TupleGetItem(func_894_call(relay.reshape(call_1957.astype('bool'), [140,]), relay.reshape(const_1959.astype('bool'), [3, 20]), ), 2)
call_2022 = relay.TupleGetItem(func_897_call(relay.reshape(call_1957.astype('bool'), [140,]), relay.reshape(const_1959.astype('bool'), [3, 20]), ), 2)
func_1379_call = mod.get_global_var('func_1379')
func_1382_call = mutated_mod.get_global_var('func_1382')
call_2025 = relay.TupleGetItem(func_1379_call(relay.reshape(const_1931.astype('float64'), [8,]), relay.reshape(var_1933.astype('float32'), [1, 1352]), ), 2)
call_2026 = relay.TupleGetItem(func_1382_call(relay.reshape(const_1931.astype('float64'), [8,]), relay.reshape(var_1933.astype('float32'), [1, 1352]), ), 2)
output = relay.Tuple([call_1917,call_1921,const_1922,const_1929,var_1930,const_1931,var_1932,var_1933,call_1957,const_1958,const_1959,call_1972,var_1973,call_1983,bop_1989,call_2003,call_2013,call_2021,call_2025,])
output2 = relay.Tuple([call_1918,call_1923,const_1922,const_1929,var_1930,const_1931,var_1932,var_1933,call_1960,const_1958,const_1959,call_1974,var_1973,call_1984,bop_1992,call_2004,call_2014,call_2022,call_2026,])
func_2036 = relay.Function([var_1930,var_1932,var_1933,var_1973,], output)
mod['func_2036'] = func_2036
mod = relay.transform.InferType()(mod)
var_2037 = relay.var("var_2037", dtype = "float64", shape = ())#candidate|2037|()|var|float64
var_2038 = relay.var("var_2038", dtype = "bool", shape = (20,))#candidate|2038|(20,)|var|bool
var_2039 = relay.var("var_2039", dtype = "float32", shape = (1352,))#candidate|2039|(1352,)|var|float32
var_2040 = relay.var("var_2040", dtype = "uint32", shape = (56,))#candidate|2040|(56,)|var|uint32
output = func_2036(var_2037,var_2038,var_2039,var_2040,)
func_2041 = relay.Function([var_2037,var_2038,var_2039,var_2040,], output)
mutated_mod['func_2041'] = func_2041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1854_call = mod.get_global_var('func_1854')
func_1855_call = mutated_mod.get_global_var('func_1855')
call_2056 = func_1854_call()
call_2057 = func_1854_call()
func_476_call = mod.get_global_var('func_476')
func_479_call = mutated_mod.get_global_var('func_479')
const_2101 = relay.const([[True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,True,False,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True]], dtype = "bool")#candidate|2101|(1, 140)|const|bool
var_2102 = relay.var("var_2102", dtype = "bool", shape = (60,))#candidate|2102|(60,)|var|bool
call_2100 = relay.TupleGetItem(func_476_call(relay.reshape(const_2101.astype('bool'), [140,]), relay.reshape(var_2102.astype('bool'), [3, 20]), ), 1)
call_2103 = relay.TupleGetItem(func_479_call(relay.reshape(const_2101.astype('bool'), [140,]), relay.reshape(var_2102.astype('bool'), [3, 20]), ), 1)
func_755_call = mod.get_global_var('func_755')
func_761_call = mutated_mod.get_global_var('func_761')
var_2111 = relay.var("var_2111", dtype = "float64", shape = ())#candidate|2111|()|var|float64
var_2112 = relay.var("var_2112", dtype = "float64", shape = (8, 1))#candidate|2112|(8, 1)|var|float64
const_2113 = relay.const([True,True,True,False,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True], dtype = "bool")#candidate|2113|(20,)|const|bool
var_2114 = relay.var("var_2114", dtype = "float32", shape = (1352,))#candidate|2114|(1352,)|var|float32
call_2110 = relay.TupleGetItem(func_755_call(relay.reshape(var_2111.astype('float64'), []), relay.reshape(var_2112.astype('float64'), [1, 8]), relay.reshape(const_2113.astype('bool'), [20,]), relay.reshape(var_2114.astype('float32'), [1352,]), ), 5)
call_2115 = relay.TupleGetItem(func_761_call(relay.reshape(var_2111.astype('float64'), []), relay.reshape(var_2112.astype('float64'), [1, 8]), relay.reshape(const_2113.astype('bool'), [20,]), relay.reshape(var_2114.astype('float32'), [1352,]), ), 5)
output = relay.Tuple([call_2056,call_2100,const_2101,var_2102,call_2110,var_2111,var_2112,const_2113,var_2114,])
output2 = relay.Tuple([call_2057,call_2103,const_2101,var_2102,call_2115,var_2111,var_2112,const_2113,var_2114,])
func_2116 = relay.Function([var_2102,var_2111,var_2112,var_2114,], output)
mod['func_2116'] = func_2116
mod = relay.transform.InferType()(mod)
mutated_mod['func_2116'] = func_2116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2116_call = mutated_mod.get_global_var('func_2116')
var_2118 = relay.var("var_2118", dtype = "bool", shape = (60,))#candidate|2118|(60,)|var|bool
var_2119 = relay.var("var_2119", dtype = "float64", shape = ())#candidate|2119|()|var|float64
var_2120 = relay.var("var_2120", dtype = "float64", shape = (8, 1))#candidate|2120|(8, 1)|var|float64
var_2121 = relay.var("var_2121", dtype = "float32", shape = (1352,))#candidate|2121|(1352,)|var|float32
call_2117 = func_2116_call(var_2118,var_2119,var_2120,var_2121,)
output = call_2117
func_2122 = relay.Function([var_2118,var_2119,var_2120,var_2121,], output)
mutated_mod['func_2122'] = func_2122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1854_call = mod.get_global_var('func_1854')
func_1855_call = mutated_mod.get_global_var('func_1855')
call_2130 = func_1854_call()
call_2131 = func_1854_call()
uop_2138 = relay.cosh(call_2130.astype('float32')) # shape=(13, 10, 7)
uop_2140 = relay.cosh(call_2131.astype('float32')) # shape=(13, 10, 7)
func_1379_call = mod.get_global_var('func_1379')
func_1382_call = mutated_mod.get_global_var('func_1382')
const_2149 = relay.const([-2.583679,9.579787,3.879670,-8.109158,2.614978,3.660998,-4.845956,-7.092075], dtype = "float64")#candidate|2149|(8,)|const|float64
var_2150 = relay.var("var_2150", dtype = "float32", shape = (1352,))#candidate|2150|(1352,)|var|float32
call_2148 = relay.TupleGetItem(func_1379_call(relay.reshape(const_2149.astype('float64'), [8,]), relay.reshape(var_2150.astype('float32'), [1, 1352]), ), 6)
call_2151 = relay.TupleGetItem(func_1382_call(relay.reshape(const_2149.astype('float64'), [8,]), relay.reshape(var_2150.astype('float32'), [1, 1352]), ), 6)
bop_2165 = relay.equal(uop_2138.astype('bool'), relay.reshape(call_2130.astype('bool'), relay.shape_of(uop_2138))) # shape=(13, 10, 7)
bop_2168 = relay.equal(uop_2140.astype('bool'), relay.reshape(call_2131.astype('bool'), relay.shape_of(uop_2140))) # shape=(13, 10, 7)
func_64_call = mod.get_global_var('func_64')
func_67_call = mutated_mod.get_global_var('func_67')
const_2177 = relay.const([True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True], dtype = "bool")#candidate|2177|(20,)|const|bool
const_2178 = relay.const([True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,False,False,True], dtype = "bool")#candidate|2178|(140,)|const|bool
call_2176 = func_64_call(relay.reshape(const_2177.astype('bool'), [4, 1, 5]), relay.reshape(const_2178.astype('bool'), [4, 7, 5]), )
call_2179 = func_64_call(relay.reshape(const_2177.astype('bool'), [4, 1, 5]), relay.reshape(const_2178.astype('bool'), [4, 7, 5]), )
output = relay.Tuple([call_2148,const_2149,var_2150,bop_2165,call_2176,const_2177,const_2178,])
output2 = relay.Tuple([call_2151,const_2149,var_2150,bop_2168,call_2179,const_2177,const_2178,])
func_2185 = relay.Function([var_2150,], output)
mod['func_2185'] = func_2185
mod = relay.transform.InferType()(mod)
mutated_mod['func_2185'] = func_2185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2186 = relay.var("var_2186", dtype = "float32", shape = (1352,))#candidate|2186|(1352,)|var|float32
func_2185_call = mutated_mod.get_global_var('func_2185')
call_2187 = func_2185_call(var_2186)
output = call_2187
func_2188 = relay.Function([var_2186], output)
mutated_mod['func_2188'] = func_2188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_2241 = relay.TupleGetItem(func_1140_call(), 0)
call_2242 = relay.TupleGetItem(func_1142_call(), 0)
uop_2249 = relay.log(call_2241.astype('float32')) # shape=(16, 2, 14)
uop_2251 = relay.log(call_2242.astype('float32')) # shape=(16, 2, 14)
output = relay.Tuple([uop_2249,])
output2 = relay.Tuple([uop_2251,])
func_2254 = relay.Function([], output)
mod['func_2254'] = func_2254
mod = relay.transform.InferType()(mod)
mutated_mod['func_2254'] = func_2254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2254_call = mutated_mod.get_global_var('func_2254')
call_2255 = func_2254_call()
output = call_2255
func_2256 = relay.Function([], output)
mutated_mod['func_2256'] = func_2256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1667_call = mod.get_global_var('func_1667')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_2321 = func_1667_call()
call_2322 = func_1667_call()
output = call_2321
output2 = call_2322
func_2323 = relay.Function([], output)
mod['func_2323'] = func_2323
mod = relay.transform.InferType()(mod)
mutated_mod['func_2323'] = func_2323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2323_call = mutated_mod.get_global_var('func_2323')
call_2324 = func_2323_call()
output = call_2324
func_2325 = relay.Function([], output)
mutated_mod['func_2325'] = func_2325
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2334 = relay.var("var_2334", dtype = "float32", shape = (10, 16, 7))#candidate|2334|(10, 16, 7)|var|float32
uop_2335 = relay.acos(var_2334.astype('float32')) # shape=(10, 16, 7)
const_2337 = relay.const([[[5.528179,6.227972,3.475119,1.511953,9.559191,-3.762783,-3.166118],[-9.739641,1.699420,1.052421,-3.498138,-3.873438,-5.684002,-1.757055],[6.267016,0.633168,-8.438005,-1.438115,7.914890,1.468828,-8.759186],[-1.008301,-6.097437,3.091450,-2.387213,4.607238,9.034222,9.344824],[-1.673148,-2.867060,-9.864655,-3.798827,-6.228917,-1.082516,-0.562974],[-9.984495,6.003221,5.330334,0.460091,4.905325,-8.708028,-8.544319],[-3.379351,7.241196,1.816903,-5.655841,-2.747758,-6.607809,-2.896482],[-7.652881,1.668600,3.746433,2.797981,-1.409175,6.780558,-2.402370],[-4.861018,9.577954,-9.453846,1.164576,-1.722084,3.928567,-0.328507],[2.571926,-7.151347,2.809632,-0.357579,-0.167583,5.070845,-4.777884],[-3.960153,-4.742888,9.654279,-4.636280,2.169932,-0.353880,9.854859],[-3.928942,7.478836,-2.610721,6.658195,5.484183,-6.145351,3.925479],[-7.024825,3.539325,-1.722085,5.126039,8.939809,2.477145,7.692760],[9.398611,-7.766575,-3.783640,6.314310,2.960551,-6.068326,3.437212],[5.017126,8.712245,-6.190359,-8.978880,-3.345511,5.280326,5.505000],[-8.384835,-7.592118,-4.785500,5.381494,-0.870230,4.938515,3.964853]],[[6.015543,2.752980,6.802888,-1.039568,0.133913,-2.988728,2.982838],[1.355121,3.573759,8.411810,8.391676,-3.277182,1.185040,-5.778924],[-2.361406,-5.515023,-4.985870,-7.867429,-7.459025,0.864353,-3.081998],[-8.307062,5.788476,-7.867088,1.836597,-3.799288,7.339176,-5.487310],[-8.820490,-9.975040,-3.281019,-5.223602,-0.643321,4.761535,9.060801],[-8.865171,-0.572586,4.618892,-7.822367,-3.551129,-2.067648,3.930451],[0.998309,-6.606170,-0.887807,5.297818,7.980752,5.100488,-8.887035],[9.514136,7.428333,3.622079,-3.434074,-5.873451,2.122966,-1.630296],[2.724253,5.648203,7.522072,-5.834648,-1.701386,3.864353,5.477704],[1.273995,7.523340,-7.927468,-7.272175,-9.089538,-0.547712,-5.483825],[-5.550768,2.868751,-2.322382,-9.485978,-3.440292,4.916861,-6.505553],[1.311946,2.213228,-8.344256,6.525618,8.517012,-1.750643,-9.217605],[-0.726646,-1.557919,5.397181,5.950964,7.048102,-3.319975,-4.476465],[-8.366978,-2.167982,4.822848,1.497267,-9.815307,-1.226025,-6.088464],[5.906029,8.125298,8.781732,-8.357452,-4.211849,-9.100184,-9.796091],[0.599756,-7.971138,3.818477,1.276086,-7.068513,-7.042601,7.929628]],[[9.074816,-6.903372,-4.141492,-7.398694,9.932474,9.790718,-4.010259],[9.606594,-2.280700,-4.470564,9.701929,9.954339,-7.585780,8.098761],[-3.684965,5.286250,-0.484053,-4.472693,5.583581,3.647840,-7.037798],[-5.475900,-4.720052,4.072888,4.930283,-8.375669,1.712811,0.457037],[7.009846,9.286773,-7.820491,5.958546,-6.600272,3.784074,5.338562],[-9.864494,0.991385,-7.181347,6.061854,-2.962969,6.107190,4.383228],[-2.903520,-9.172516,0.399525,9.645056,-7.621026,-2.941249,2.252523],[4.857822,-0.361818,-7.668662,-3.851210,-6.384186,-7.810629,-2.378910],[0.206542,-3.252331,4.612411,5.104428,-3.087895,-5.761450,-0.585991],[2.866760,-1.713439,-0.293058,1.951025,2.590446,5.192121,8.007050],[-1.027813,-6.263352,8.347995,-0.035726,2.771239,3.756511,-8.414054],[2.111149,-4.956949,-9.565322,0.190275,-5.373879,9.353284,-0.196788],[3.101680,-8.018351,-7.131872,7.640103,-4.705150,-7.644185,2.104958],[8.709746,1.898483,-0.131709,-6.838050,-5.451774,9.183925,-0.902985],[-1.768598,-6.508509,-5.775204,-5.388324,4.413097,-0.654851,0.426607],[8.513433,-2.510372,-3.993516,6.325066,9.434199,-1.796530,5.264352]],[[-9.502713,-1.775679,2.423682,-9.424623,-8.096848,-1.510540,-1.241087],[9.497351,7.247832,8.436087,0.057025,2.294037,-8.775118,-5.721198],[-5.611897,6.382634,0.501421,-5.869966,-6.092243,-2.182345,8.419775],[-4.718019,5.384931,0.799508,-1.197827,-8.108948,-7.246913,4.250035],[4.604561,4.530201,7.106836,-7.389493,4.529420,1.679920,-5.262734],[-8.634736,-6.873252,5.211515,-9.927449,-3.151365,8.758283,-8.946964],[-7.326708,9.134154,-9.185141,-5.932562,6.494076,-1.805400,6.440754],[-2.858362,-2.518572,2.404745,7.448883,-9.769573,3.624187,-4.267220],[-9.416733,-5.384219,-4.275252,-7.324138,6.527146,1.460889,4.671410],[9.032529,7.856426,-5.575030,-3.667960,1.739147,3.390504,8.686144],[-6.658198,2.605087,-7.408421,-2.604655,6.399829,3.469364,5.174407],[7.200140,9.743022,7.518069,-6.923461,-8.470914,8.257928,-9.633284],[1.003257,7.457440,-1.244816,-1.631607,-0.334057,6.207105,0.996559],[-2.087509,8.442383,-4.589877,-6.371587,-5.487696,3.820096,8.934357],[-1.193980,5.536159,9.479590,8.550195,-8.022271,9.460253,-8.978816],[-4.479515,1.051624,-8.590638,0.384098,2.309471,-4.678730,-5.802402]],[[-9.576099,-5.816894,-5.473048,1.001884,-6.319793,9.387943,-8.152727],[-5.514231,1.397288,7.520022,9.699999,-3.266200,-8.374205,9.427003],[8.133084,-5.191616,4.282322,-0.470131,4.095441,-2.084171,-4.746063],[-8.924600,-9.699729,-7.113380,1.357647,-8.603591,8.797342,1.692856],[5.762412,7.002213,5.984834,-6.301328,-6.106386,-8.169339,-4.662897],[-1.508864,-8.004849,-8.388676,4.270950,-9.850576,-9.500553,2.488318],[4.781946,3.061610,1.022185,4.218669,-3.223559,-5.352876,-1.269617],[-9.273110,5.270957,-2.704194,2.942111,-4.935094,9.674306,-7.423134],[0.778424,1.286924,-4.731598,8.541229,2.232886,-9.036266,6.973242],[0.454696,5.672698,-3.250312,-3.989191,-1.340540,4.596249,-6.560689],[-4.447890,-5.185517,-1.131682,-8.043655,-9.784005,6.514411,2.962963],[-6.655542,-0.195301,-8.342272,0.757083,-5.866138,2.803528,-3.932682],[4.785469,0.111243,9.006235,0.768178,-1.456878,-4.833024,-9.423742],[-6.723024,-0.286977,-5.810102,-8.466861,-4.455137,1.388561,3.551737],[-1.633118,-3.537055,-4.395366,6.991198,6.206105,-3.314040,-3.280909],[6.964657,-3.889799,-3.240654,-4.947908,1.729465,-5.543465,-8.786219]],[[-3.897414,-1.149862,1.544605,-0.457715,1.145809,3.618913,-5.935709],[-3.806327,2.011827,7.419628,6.113907,-6.092154,-2.310887,5.816044],[9.771188,3.583997,5.361387,-0.775416,-2.889567,8.721153,-7.707484],[-0.605050,-1.959340,-2.322743,-1.217336,9.109884,8.850566,1.521159],[5.934735,-0.313601,5.599608,-2.775033,-2.900652,1.109553,2.569684],[-2.210067,-2.641803,-7.066463,2.758127,-8.339783,7.170219,8.310254],[1.166703,-6.793553,8.765630,9.322324,-2.289413,-8.664297,7.638883],[5.172935,-1.156564,-3.696445,1.687902,9.453221,2.577651,-5.505015],[1.772540,-7.960601,2.714655,5.172625,6.015929,5.118279,-8.941422],[-8.660006,3.339562,-6.091078,7.598750,-5.324510,7.434729,2.213228],[3.666178,4.738276,-1.003285,8.362836,4.757358,-6.344919,-6.936542],[-2.834175,9.047483,-6.046155,2.614778,-1.323354,0.451327,5.403677],[-6.940280,-4.530259,-9.229305,-0.715406,7.310217,-3.634953,-0.378313],[0.194051,-4.093000,5.423050,1.105362,0.647131,-6.744494,0.760109],[-1.095464,0.860935,-7.056340,8.221325,7.484455,8.566535,4.871631],[4.850354,-9.724572,-1.363106,9.864496,1.320662,8.206561,9.257432]],[[-7.809351,-5.226935,1.676045,-6.973169,8.883054,-6.876320,7.718698],[0.014091,-2.074770,5.379205,8.842753,8.598469,4.620023,8.747024],[1.731525,8.388079,-6.361779,8.483883,3.064060,3.619179,9.498260],[3.262370,1.163693,5.075062,-7.499540,-4.778099,2.568489,-4.830441],[-9.715545,0.791598,-7.878451,-3.499031,-8.626788,-3.578109,7.756980],[-7.428506,5.296440,9.919538,-9.746174,-8.957192,1.453740,7.658360],[2.313094,-7.186947,9.358263,7.292882,-1.484855,-6.753581,9.192879],[-9.346072,-3.918544,0.757221,-7.807109,-4.084505,-3.577028,9.566002],[-0.074959,-0.693874,-7.266449,9.369597,-9.416764,6.949735,-6.147556],[-5.279115,-6.441878,-4.292256,0.716668,5.049443,4.041887,4.764501],[-0.478885,5.800929,8.113022,-2.434430,-0.046566,3.949154,6.191197],[7.417666,6.456859,4.405938,-9.368685,-4.769169,-9.573170,-2.066607],[-7.758815,7.353645,-9.440074,5.982085,-5.953570,-3.288196,3.322140],[4.412021,-1.905732,0.458990,-9.740260,-4.721904,-8.136514,2.615981],[-9.084835,-8.205540,3.643958,2.300924,6.531523,4.766992,3.186614],[-8.904981,5.627482,2.358672,3.382391,3.169169,2.745301,-4.083479]],[[0.203641,-6.133936,6.205559,-4.130844,-8.609921,5.169441,-4.331726],[0.415688,-2.258942,-5.721748,-8.959191,5.758886,-2.892712,3.691695],[-6.733744,-2.073167,5.324818,8.525779,2.640961,8.633177,-8.871391],[0.335768,9.993105,-9.770780,3.012022,-1.958362,-4.371727,1.186510],[-6.575717,-0.156543,-6.652517,-4.325420,-1.610129,8.116828,1.883210],[6.974860,7.813857,-9.462491,-3.267315,-7.749041,-8.055457,4.176197],[-5.639019,9.601072,7.143177,-6.979832,-7.186256,-5.540993,-5.172761],[7.232955,-0.037535,0.191311,5.969662,3.799100,-0.403489,2.167478],[-1.477190,9.345081,5.949111,3.099178,1.686889,9.154741,9.813373],[-6.940398,5.401606,9.538328,-6.289676,0.066519,3.153170,7.225526],[-9.738205,-6.485070,6.554226,3.663678,-1.230204,-9.317259,-5.570800],[-8.315031,3.067388,-9.654302,-4.484578,-0.056410,-7.954321,-3.477959],[-3.270323,-6.712961,6.765021,0.642173,-1.292170,4.127337,-7.744691],[-4.973034,1.205475,-1.808915,3.770500,4.307635,-0.083231,9.208047],[2.730710,-9.857755,4.972203,-2.245312,4.961320,-0.857992,4.242615],[9.509763,5.184958,-6.255772,-5.885002,9.833074,2.565965,4.539009]],[[-1.682347,1.533263,-3.754157,-3.425318,-1.626746,-1.568550,-8.264060],[8.681379,6.526883,5.458319,7.409179,1.564641,-5.742891,4.034222],[-2.475774,-5.471020,8.638944,-0.192695,1.511856,-0.547162,-2.056891],[-1.662946,7.170885,-0.063050,-7.606455,5.117135,6.249530,7.875111],[5.186411,-1.993560,3.419749,-8.768800,-7.557509,-0.675309,7.064152],[8.860153,-6.270308,7.552188,5.943517,-8.538901,9.706370,7.979971],[-1.071082,1.552852,-3.993799,7.693650,-3.512991,-6.265092,5.052933],[-3.487738,8.843798,-1.768531,7.969726,1.493637,7.451520,-7.664524],[9.185442,3.654396,-0.043737,7.848588,-5.570513,-4.955760,9.387059],[0.539083,-1.614900,6.275859,1.001490,1.470898,9.998017,-8.590859],[-9.389852,-0.207121,-4.617277,0.686582,-9.756546,8.098760,-5.177237],[4.590051,3.672243,-2.843728,-7.931601,2.502270,5.762560,5.228992],[-8.906306,2.971946,-2.546502,-6.919948,1.672391,-0.198970,6.531263],[8.357610,9.565360,6.780277,2.209581,-2.821117,7.384625,-6.382554],[-0.994583,-0.352104,9.090481,8.651913,2.171949,-4.384257,-7.134604],[-1.562856,8.615289,0.024665,-3.833507,6.948185,-2.236122,0.285778]],[[9.134946,-5.895413,7.629369,-0.552098,-7.979155,1.282741,-4.821320],[-4.664365,-5.798494,-4.623377,-4.449973,-3.497393,-8.671124,4.622747],[-5.869886,-2.996141,-3.662467,8.752647,4.535601,-5.306727,-3.356094],[8.279584,9.610483,5.022685,-8.012645,1.618964,2.743386,8.672768],[5.443719,-6.452484,-4.603018,-5.314155,1.560640,-6.844849,3.996402],[-2.292402,-2.347290,-9.334160,8.471309,7.837019,1.096767,0.556580],[3.643063,-7.809332,7.827463,-6.471992,-5.014019,-9.062185,-5.733872],[-7.330220,9.885983,5.537590,6.655223,8.231944,1.152998,-9.603620],[-4.450696,0.851487,0.175891,-1.375706,-5.035996,-8.711265,6.945862],[-4.940290,4.152702,-6.463735,2.042432,0.760990,9.335911,-0.730183],[0.071152,-7.040832,-2.767882,7.076076,9.736962,-0.926992,-3.283470],[-7.350755,0.517993,-9.182625,-7.299679,6.461819,-8.795764,-5.100305],[0.950965,4.803320,8.798154,-6.840839,6.138254,5.357726,-6.567113],[5.347812,-5.743652,-1.206431,-4.558612,7.107510,5.392065,0.356414],[6.095242,-3.534477,-4.614558,3.872752,5.261466,9.020356,-6.780230],[8.752496,-6.857596,0.723106,3.536165,-9.387668,-4.428566,-2.180383]]], dtype = "float32")#candidate|2337|(10, 16, 7)|const|float32
bop_2338 = relay.logical_xor(uop_2335.astype('uint8'), relay.reshape(const_2337.astype('uint8'), relay.shape_of(uop_2335))) # shape=(10, 16, 7)
uop_2342 = relay.cosh(bop_2338.astype('float32')) # shape=(10, 16, 7)
func_1485_call = mod.get_global_var('func_1485')
func_1489_call = mutated_mod.get_global_var('func_1489')
const_2347 = relay.const([False,False,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,True], dtype = "bool")#candidate|2347|(20,)|const|bool
var_2348 = relay.var("var_2348", dtype = "bool", shape = (60,))#candidate|2348|(60,)|var|bool
call_2346 = relay.TupleGetItem(func_1485_call(relay.reshape(const_2347.astype('bool'), [20,]), relay.reshape(var_2348.astype('bool'), [60,]), ), 4)
call_2349 = relay.TupleGetItem(func_1489_call(relay.reshape(const_2347.astype('bool'), [20,]), relay.reshape(var_2348.astype('bool'), [60,]), ), 4)
output = relay.Tuple([uop_2342,call_2346,const_2347,var_2348,])
output2 = relay.Tuple([uop_2342,call_2349,const_2347,var_2348,])
func_2360 = relay.Function([var_2334,var_2348,], output)
mod['func_2360'] = func_2360
mod = relay.transform.InferType()(mod)
mutated_mod['func_2360'] = func_2360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2360_call = mutated_mod.get_global_var('func_2360')
var_2362 = relay.var("var_2362", dtype = "float32", shape = (10, 16, 7))#candidate|2362|(10, 16, 7)|var|float32
var_2363 = relay.var("var_2363", dtype = "bool", shape = (60,))#candidate|2363|(60,)|var|bool
call_2361 = func_2360_call(var_2362,var_2363,)
output = call_2361
func_2364 = relay.Function([var_2362,var_2363,], output)
mutated_mod['func_2364'] = func_2364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mod.get_global_var('func_1745')
func_1747_call = mutated_mod.get_global_var('func_1747')
call_2372 = func_1745_call()
call_2373 = func_1745_call()
output = relay.Tuple([call_2372,])
output2 = relay.Tuple([call_2373,])
func_2386 = relay.Function([], output)
mod['func_2386'] = func_2386
mod = relay.transform.InferType()(mod)
mutated_mod['func_2386'] = func_2386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2386_call = mutated_mod.get_global_var('func_2386')
call_2387 = func_2386_call()
output = call_2387
func_2388 = relay.Function([], output)
mutated_mod['func_2388'] = func_2388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1036_call = mod.get_global_var('func_1036')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_2392 = relay.TupleGetItem(func_1036_call(), 5)
call_2393 = relay.TupleGetItem(func_1038_call(), 5)
output = call_2392
output2 = call_2393
func_2407 = relay.Function([], output)
mod['func_2407'] = func_2407
mod = relay.transform.InferType()(mod)
mutated_mod['func_2407'] = func_2407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2407_call = mutated_mod.get_global_var('func_2407')
call_2408 = func_2407_call()
output = call_2408
func_2409 = relay.Function([], output)
mutated_mod['func_2409'] = func_2409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mod.get_global_var('func_1745')
func_1747_call = mutated_mod.get_global_var('func_1747')
call_2417 = func_1745_call()
call_2418 = func_1745_call()
func_476_call = mod.get_global_var('func_476')
func_479_call = mutated_mod.get_global_var('func_479')
const_2429 = relay.const([[True,False],[False,True],[True,False],[False,False],[True,False],[False,True],[True,False],[False,True],[True,False],[False,True],[True,True],[True,False],[False,True],[True,False],[False,False],[False,True],[False,False],[False,True],[False,True],[True,True],[True,False],[True,False],[False,True],[False,True],[False,False],[True,True],[True,False],[True,True],[False,False],[False,False],[False,False],[True,False],[False,False],[True,True],[True,False],[False,False],[False,True],[True,False],[True,True],[False,True],[True,True],[False,False],[True,True],[True,True],[True,True],[True,True],[True,True],[True,False],[True,False],[True,False],[False,True],[False,True],[True,True],[True,False],[False,True],[True,True],[False,True],[True,False],[False,True],[True,True],[False,True],[False,False],[False,True],[False,True],[True,True],[True,True],[False,True],[False,True],[True,False],[True,True]], dtype = "bool")#candidate|2429|(70, 2)|const|bool
var_2430 = relay.var("var_2430", dtype = "bool", shape = (60,))#candidate|2430|(60,)|var|bool
call_2428 = relay.TupleGetItem(func_476_call(relay.reshape(const_2429.astype('bool'), [140,]), relay.reshape(var_2430.astype('bool'), [3, 20]), ), 1)
call_2431 = relay.TupleGetItem(func_479_call(relay.reshape(const_2429.astype('bool'), [140,]), relay.reshape(var_2430.astype('bool'), [3, 20]), ), 1)
output = relay.Tuple([call_2417,call_2428,const_2429,var_2430,])
output2 = relay.Tuple([call_2418,call_2431,const_2429,var_2430,])
func_2444 = relay.Function([var_2430,], output)
mod['func_2444'] = func_2444
mod = relay.transform.InferType()(mod)
mutated_mod['func_2444'] = func_2444
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2445 = relay.var("var_2445", dtype = "bool", shape = (60,))#candidate|2445|(60,)|var|bool
func_2444_call = mutated_mod.get_global_var('func_2444')
call_2446 = func_2444_call(var_2445)
output = call_2446
func_2447 = relay.Function([var_2445], output)
mutated_mod['func_2447'] = func_2447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_877_call = mod.get_global_var('func_877')
func_879_call = mutated_mod.get_global_var('func_879')
call_2460 = func_877_call()
call_2461 = func_877_call()
const_2468 = relay.const([[[5.193873,7.686378,9.218021,9.239585,9.847665,-2.797532,2.181710,-3.362874,3.502258,-4.938453,6.857608,-8.980361,-6.294770,-7.130084],[-0.314816,-0.771453,-9.906924,-8.549970,6.280484,9.496462,7.457791,-6.197836,-4.688191,7.664808,-5.392098,-4.214080,-9.789521,-6.525287]],[[-9.691927,6.285448,-4.604556,-8.763743,8.655889,6.241223,-8.222644,8.456914,-2.319985,-7.633192,3.672292,-6.570506,-4.581333,1.673200],[7.982378,9.094429,-9.571965,-2.854988,6.843221,2.587455,2.869416,7.668899,5.651722,7.715374,-9.667391,-6.382168,-5.422676,2.619411]],[[-6.072471,2.204362,-0.644169,1.227133,9.107820,-1.205325,-7.812654,3.196771,-3.623278,8.655339,4.843680,6.183903,-2.542858,2.499597],[-7.376082,1.974680,2.095042,-9.636239,-8.468465,-7.053608,-0.707704,-3.238716,-7.927079,-9.632960,-8.307505,-9.986476,8.861036,-4.205592]],[[-2.016957,-9.793240,-9.220274,4.618664,-7.093302,-1.178718,1.546961,-5.355130,4.314240,-3.470271,-7.126586,-3.558182,-1.510693,-7.710407],[-6.193747,4.208412,1.053334,6.019498,-8.281718,5.829834,-7.046116,0.899437,5.724484,6.810456,-9.297923,-4.160624,5.345219,7.109209]],[[-8.141488,9.695061,-6.597636,0.998947,-6.169990,-5.216120,5.032429,1.917376,8.384069,9.122330,-0.613376,2.249302,-5.025136,5.447151],[-1.632610,6.359152,-4.636324,7.603567,4.331104,-3.755311,0.995586,-9.722214,9.961429,-7.097519,-2.885618,6.231823,3.878523,4.263277]],[[-9.601396,6.306168,-3.263095,0.002550,1.101423,1.693204,3.583919,-5.461263,-6.469123,6.601785,-5.436216,-3.139692,3.313692,4.335133],[-8.573018,-5.378728,2.571934,1.751367,-2.590221,-6.426742,0.628843,0.112703,-9.691110,4.991196,-2.601877,-6.976537,9.935654,-3.336567]],[[-8.770170,6.482706,-8.370514,8.286226,0.557614,2.565329,-9.794197,4.649484,-9.249590,-9.636016,-2.744222,7.590115,1.956516,5.190138],[7.612087,0.784367,8.881479,-2.137507,1.075903,6.585535,7.395189,-6.808361,-8.996899,4.745209,-9.553533,8.545454,-9.603785,-9.219941]],[[-6.030139,-7.365130,6.638656,7.942499,-6.658426,-9.293098,-0.231281,-2.827003,4.153381,3.531089,-8.620917,-0.542916,-7.337896,5.556660],[-8.240721,-6.642849,2.098313,-4.106810,6.784592,3.400148,-8.594700,5.195047,4.390709,-5.916926,-0.004591,-6.543567,-5.072660,-2.742096]],[[0.008268,5.792183,9.720171,-7.512580,-8.941080,0.430290,7.933247,5.456148,-2.894960,-5.366825,-1.199997,-2.500173,-4.805097,0.312380],[1.565509,5.195672,8.321067,1.172262,6.207765,6.935523,-6.249115,0.742050,7.497109,2.489619,6.783311,4.720695,-0.142369,-8.201415]],[[5.408561,-9.132419,1.449990,1.479182,-5.103146,7.113866,-7.278046,-5.370918,8.129883,-0.218231,-0.909717,8.618464,5.195421,-4.172976],[-1.665268,-2.256749,-0.656994,0.991957,9.351578,6.413379,1.415260,0.165942,7.918560,-3.565796,4.246662,-1.016689,8.982755,7.258389]],[[-8.566043,-9.955587,-0.152279,-8.186813,9.652723,1.482899,-8.368921,5.103790,5.022587,-4.412637,-9.675502,-0.573638,8.773754,4.831569],[-3.356633,-0.808912,-4.967934,1.341362,4.550247,-2.017960,2.506449,6.604896,-1.809672,5.705250,3.558305,-5.924102,6.397781,8.374303]],[[1.476739,9.482959,8.995640,2.928153,-9.025409,4.549954,-8.657096,8.647743,7.380324,-7.202182,4.996462,8.714672,6.234506,-7.611867],[-1.827132,4.862033,-6.528469,1.774855,-2.264670,-9.879962,-6.587245,2.889865,9.629707,-1.450440,2.104513,-1.230044,0.639865,-2.449394]],[[7.125188,0.295391,-7.706194,-5.603938,4.514981,4.161486,-4.736635,-0.496030,4.963739,6.514871,-9.103709,2.903059,-4.322146,-1.774161],[9.369106,-5.002536,1.756046,4.280806,2.038023,9.591061,1.990953,-2.097739,-6.104871,-7.168685,-2.277197,-5.908686,-6.233419,1.541347]],[[8.452367,-5.240911,-1.145931,1.245904,-7.361699,5.126588,-5.459304,-4.038546,3.636522,3.742040,4.215806,5.269419,-6.114075,2.437107],[9.577849,2.651161,-2.166074,-0.916624,3.949585,5.375057,-1.750490,4.738391,3.748220,-3.456335,-3.624831,-5.547909,-3.958050,-5.079934]],[[3.599674,9.312795,-6.987386,7.261699,-3.934116,5.049494,0.087055,8.007339,2.485809,5.382553,-2.836886,-6.885843,7.510427,-7.841617],[-8.789611,-2.145163,-7.540775,8.015554,4.830699,-4.004590,-5.957290,1.395489,-0.323431,7.857968,1.440910,-0.291319,-1.789207,-5.316674]],[[4.998093,2.754633,0.444173,6.519911,6.758833,-1.651431,4.560220,-7.395653,-4.827256,2.123282,-1.583943,8.983700,8.061880,0.632428],[-6.149805,-8.039592,0.485821,4.100143,5.625358,-3.398198,7.711806,3.168877,6.250972,-0.325695,5.188679,-4.286395,-3.645112,2.412033]]], dtype = "float64")#candidate|2468|(16, 2, 14)|const|float64
bop_2469 = relay.bitwise_or(call_2460.astype('int32'), relay.reshape(const_2468.astype('int32'), relay.shape_of(call_2460))) # shape=(16, 2, 14)
bop_2472 = relay.bitwise_or(call_2461.astype('int32'), relay.reshape(const_2468.astype('int32'), relay.shape_of(call_2461))) # shape=(16, 2, 14)
output = relay.Tuple([bop_2469,])
output2 = relay.Tuple([bop_2472,])
func_2477 = relay.Function([], output)
mod['func_2477'] = func_2477
mod = relay.transform.InferType()(mod)
output = func_2477()
func_2478 = relay.Function([], output)
mutated_mod['func_2478'] = func_2478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2505 = relay.var("var_2505", dtype = "bool", shape = (5, 8, 11))#candidate|2505|(5, 8, 11)|var|bool
var_2506 = relay.var("var_2506", dtype = "bool", shape = (5, 8, 11))#candidate|2506|(5, 8, 11)|var|bool
bop_2507 = relay.logical_or(var_2505.astype('bool'), relay.reshape(var_2506.astype('bool'), relay.shape_of(var_2505))) # shape=(5, 8, 11)
output = bop_2507
output2 = bop_2507
func_2518 = relay.Function([var_2505,var_2506,], output)
mod['func_2518'] = func_2518
mod = relay.transform.InferType()(mod)
var_2519 = relay.var("var_2519", dtype = "bool", shape = (5, 8, 11))#candidate|2519|(5, 8, 11)|var|bool
var_2520 = relay.var("var_2520", dtype = "bool", shape = (5, 8, 11))#candidate|2520|(5, 8, 11)|var|bool
output = func_2518(var_2519,var_2520,)
func_2521 = relay.Function([var_2519,var_2520,], output)
mutated_mod['func_2521'] = func_2521
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2523 = relay.var("var_2523", dtype = "float64", shape = (9, 15, 6))#candidate|2523|(9, 15, 6)|var|float64
uop_2524 = relay.log(var_2523.astype('float64')) # shape=(9, 15, 6)
output = relay.Tuple([uop_2524,])
output2 = relay.Tuple([uop_2524,])
func_2526 = relay.Function([var_2523,], output)
mod['func_2526'] = func_2526
mod = relay.transform.InferType()(mod)
var_2527 = relay.var("var_2527", dtype = "float64", shape = (9, 15, 6))#candidate|2527|(9, 15, 6)|var|float64
output = func_2526(var_2527)
func_2528 = relay.Function([var_2527], output)
mutated_mod['func_2528'] = func_2528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_2613 = relay.TupleGetItem(func_1140_call(), 0)
call_2614 = relay.TupleGetItem(func_1142_call(), 0)
func_1288_call = mod.get_global_var('func_1288')
func_1296_call = mutated_mod.get_global_var('func_1296')
const_2626 = relay.const([[-5],[3],[-8],[-2],[-6],[-6],[-10],[-1],[3],[-8],[-10],[-5],[-10],[-7],[4],[-9],[4],[5],[-2],[4],[1],[-7],[2],[-1],[3],[-2],[-2],[4],[-5],[4],[6],[8],[-7],[3],[-2],[-1],[9],[-6],[-7],[8],[6],[-1],[-8],[-2],[-7],[10],[-2],[-3],[-3],[-10],[7],[10],[9],[-9],[-2],[-4],[-6],[7],[-1],[-8],[-7],[-2],[-9],[8],[3],[-7],[-7],[-6],[-2],[3],[-1],[-2],[-6],[-2],[-10],[-5],[-1],[4],[4],[-1],[7],[-7],[6],[3],[8],[2],[4],[6],[-3],[-5],[1],[9],[-9],[-1],[4],[9],[-2],[10],[-10],[8],[8],[7],[3],[2],[-2],[-10],[8],[-4],[-4],[-9],[-8],[2],[3],[-10],[4],[10],[9],[3],[-1],[-10]], dtype = "int16")#candidate|2626|(120, 1)|const|int16
const_2627 = relay.const(6.233488, dtype = "float64")#candidate|2627|()|const|float64
const_2628 = relay.const([-9.966603,-0.275456,8.224885,5.785897,1.094836,-5.345841,-2.942694,-9.944101], dtype = "float64")#candidate|2628|(8,)|const|float64
const_2629 = relay.const([True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True], dtype = "bool")#candidate|2629|(20,)|const|bool
var_2630 = relay.var("var_2630", dtype = "float32", shape = (338, 4))#candidate|2630|(338, 4)|var|float32
call_2625 = relay.TupleGetItem(func_1288_call(relay.reshape(const_2626.astype('int16'), [5, 6, 4]), relay.reshape(const_2626.astype('int16'), [5, 6, 4]), relay.reshape(const_2627.astype('float64'), []), relay.reshape(const_2628.astype('float64'), [8,]), relay.reshape(const_2629.astype('bool'), [20,]), relay.reshape(var_2630.astype('float32'), [1352,]), ), 2)
call_2631 = relay.TupleGetItem(func_1296_call(relay.reshape(const_2626.astype('int16'), [5, 6, 4]), relay.reshape(const_2626.astype('int16'), [5, 6, 4]), relay.reshape(const_2627.astype('float64'), []), relay.reshape(const_2628.astype('float64'), [8,]), relay.reshape(const_2629.astype('bool'), [20,]), relay.reshape(var_2630.astype('float32'), [1352,]), ), 2)
output = relay.Tuple([call_2613,call_2625,const_2626,const_2627,const_2628,const_2629,var_2630,])
output2 = relay.Tuple([call_2614,call_2631,const_2626,const_2627,const_2628,const_2629,var_2630,])
func_2655 = relay.Function([var_2630,], output)
mod['func_2655'] = func_2655
mod = relay.transform.InferType()(mod)
mutated_mod['func_2655'] = func_2655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2656 = relay.var("var_2656", dtype = "float32", shape = (338, 4))#candidate|2656|(338, 4)|var|float32
func_2655_call = mutated_mod.get_global_var('func_2655')
call_2657 = func_2655_call(var_2656)
output = call_2657
func_2658 = relay.Function([var_2656], output)
mutated_mod['func_2658'] = func_2658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1036_call = mod.get_global_var('func_1036')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_2675 = relay.TupleGetItem(func_1036_call(), 2)
call_2676 = relay.TupleGetItem(func_1038_call(), 2)
func_2185_call = mod.get_global_var('func_2185')
func_2188_call = mutated_mod.get_global_var('func_2188')
const_2678 = relay.const([-7.095438,0.676662,-7.694716,-2.977027,-1.317983,-1.092590,-0.505115,-4.257944,8.891665,5.635672,-9.663416,-2.149609,-7.070243,-5.578310,-5.191636,6.526139,1.491785,5.130688,9.719616,3.914935,-2.549500,-0.387170,-7.469801,8.038439,-6.675039,6.332010,6.873648,-9.030269,6.374169,-9.684413,3.263601,-4.917330,-8.137556,8.803271,4.593998,-5.562321,-1.950035,0.555961,4.464300,-3.431573,1.251469,2.225057,7.385830,-9.062049,-0.142849,0.342067,3.008508,-4.791398,5.144026,9.376637,-3.640092,0.442919,3.392072,-8.010042,4.751647,-3.269438,-2.279787,-6.360809,1.949577,-1.544630,1.568478,-7.021581,5.090309,-8.776716,-4.916688,-2.988583,5.316128,7.791372,-4.496424,-0.208493,3.436887,-0.056880,-7.007484,4.386275,8.589281,1.308147,2.059934,5.753656,-1.379821,-4.794960,-1.986109,-9.971571,-0.675840,-3.022284,0.653833,-8.747158,1.399474,-2.533985,2.249180,8.416994,-7.400884,9.626885,-3.909817,-5.119730,4.222267,8.632230,4.341981,4.537943,-0.244105,-0.266196,-3.414252,-1.953210,2.849090,2.721552,-4.599258,-3.200159,4.647880,4.328994,-9.317132,1.791549,-8.519029,3.454270,-7.501109,0.910393,-2.257031,-5.356093,-3.545540,-7.704049,4.952748,5.197946,6.048371,-7.099354,7.897872,-6.884338,-1.655476,7.895117,8.185108,-2.944684,-4.926221,-8.639284,-2.122375,5.779369,3.167516,-4.971710,-1.797444,-8.476228,2.917845,-7.272628,-2.807175,0.235973,-7.713689,4.371486,3.659732,2.834083,4.569186,4.434700,-1.051144,4.459866,-4.824494,0.671389,8.983439,-5.128357,-3.087432,0.338246,-4.375814,5.732329,-7.644100,-8.984874,6.781741,6.090317,6.193391,-8.860782,1.273610,3.960411,2.605792,-5.270752,-8.219612,-0.491025,-7.219633,-2.928934,-5.590714,6.770452,-4.790444,-0.116663,-6.215645,8.785899,-1.222193,7.154183,9.818845,-3.079647,8.980981,5.010750,5.416805,3.861445,1.605172,-5.178221,6.213149,-7.892115,0.495445,5.511443,-5.307362,0.153839,-6.296348,8.056893,3.300583,9.768741,-3.535377,7.205708,-1.925291,2.026822,-7.036564,5.939959,-8.981358,4.935579,-0.694220,5.493127,9.415333,-7.894480,2.011342,4.264061,0.353236,-7.715231,4.111896,8.706939,-4.265069,-9.448866,0.109799,-7.413532,5.144159,5.665148,2.573989,4.772758,-6.076168,-0.483168,7.830646,-8.195632,-0.845365,-3.083936,-8.482235,3.890781,0.624113,0.686998,7.023569,-0.411005,-6.814860,2.141558,-1.296457,-7.169149,-8.968815,-9.322888,4.596099,-6.589050,5.528959,5.370704,-3.565927,-5.641835,-0.362047,-6.103637,-1.209792,2.350096,2.508276,-2.177756,5.504912,-0.614434,5.543217,8.606605,2.588967,5.185368,-8.375994,5.551399,1.784098,-2.180702,7.870866,-2.397589,6.102498,-2.442553,-9.458082,-6.878045,-7.603707,9.764372,-2.170327,-1.026072,-3.845366,-6.184899,-0.115748,5.689675,-4.418130,-1.979106,0.732734,2.412292,-5.524200,6.074631,-9.618791,-4.138245,-5.423684,-4.302543,-0.225996,-0.687453,-5.173002,4.501505,-2.939337,6.389716,6.248204,1.690748,-3.985230,6.192558,-5.179954,6.766736,4.830337,3.869696,8.063868,-8.757559,-7.949159,-9.996696,5.707390,-9.435991,-7.573485,-1.771748,5.730860,-7.495225,-9.158159,-5.171414,-5.051711,9.777442,3.014430,7.430478,4.392621,-5.572621,0.201824,-3.691430,-2.502413,-5.568481,-7.894222,-7.464543,-9.545241,5.772986,6.059013,-9.978869,5.158797,0.923486,-5.380487,0.493486,-0.359741,-2.674009,-5.555594,-9.643023,0.442910,-7.617262,-0.422843,5.428207,1.000445,7.472401,-4.711557,5.024804,-1.850707,-5.370021,9.547224,-9.741314,0.867611,6.345499,2.236673,-8.852610,1.616297,0.810024,-9.367943,-6.076220,5.871266,-3.461307,7.568078,-0.180382,-8.026045,2.234670,-5.665348,7.033419,-2.678563,-2.305449,-9.809320,-8.303774,4.139509,7.911666,-9.570251,8.702724,-1.401748,0.560908,8.908374,7.637060,-2.564232,-6.056465,-9.868228,-8.266435,-7.254570,-7.090462,8.627546,-2.330612,-0.706176,-8.078990,-5.487180,9.880644,2.352506,-9.262041,-3.687339,-7.311104,-0.454982,3.801293,-8.496963,9.417914,-5.746841,-8.372235,-4.310392,-6.301997,-1.235894,0.126953,0.115468,1.942870,3.952941,3.845022,8.683696,-4.606067,-6.262146,-0.292246,8.370498,-6.708024,-8.781363,-2.030418,0.151291,6.968199,3.742499,-2.252274,5.876304,-4.655217,-7.853608,-8.676375,4.952177,9.067975,6.158916,0.946176,-9.496488,-9.548272,-9.324504,3.135905,-8.105400,1.217358,-3.162410,-8.633755,-8.194532,-5.936212,-0.581349,-2.223759,-0.924300,-8.096951,-8.489900,-5.252701,5.359796,5.876336,7.109113,3.020770,7.311760,-4.813223,3.314677,-0.366557,5.206435,-6.039570,9.614389,3.216090,-3.194819,1.983184,1.208027,0.467488,4.688500,-9.415058,-4.623180,-9.394893,5.590569,7.630949,1.768915,-7.422530,-2.803673,-5.347676,8.656027,6.657555,8.188436,-6.664797,8.222796,8.650257,-1.735858,2.016392,-6.766062,8.532902,-8.895153,-1.795097,-6.210694,-9.543781,1.173403,-5.649584,7.228357,-7.341992,7.551856,8.450282,4.346472,8.436156,9.983610,-8.659690,-9.934447,3.785961,-9.973777,-4.301074,-7.429524,3.589770,4.555966,-3.825493,-5.732755,-1.051348,-4.136488,-0.551296,-2.082810,1.065588,-7.129535,7.771161,9.477386,-4.309976,-7.341681,-2.524924,8.263869,-6.577568,-1.814954,0.756803,-9.395096,-3.668496,-7.448379,-1.127960,-0.503602,-2.086649,0.310810,3.054788,-3.819950,-5.386337,-8.539133,1.165378,-6.269675,-2.003285,-8.224059,2.888648,6.903087,8.427263,-8.078566,4.708689,-9.743685,-3.842646,7.502529,-9.155275,3.646775,5.847845,-6.951591,5.966465,-5.352432,9.073495,-8.917876,8.522170,-0.991671,5.990095,-9.842835,8.394211,-4.328095,-5.377253,6.308732,1.549837,1.273628,-9.316244,9.384989,4.509931,9.359589,-0.142525,6.708995,-1.196350,1.972929,9.497944,-1.027190,-6.942737,-2.065956,-8.487163,2.983827,-8.851147,-6.781057,-7.052753,-3.618990,-0.156592,-9.544826,3.238304,-8.921647,9.212167,7.683169,-8.878235,1.339230,-6.424554,9.270450,7.039737,-4.384305,-9.456805,-9.393888,-3.047627,-1.827064,7.147559,-5.268426,-1.530228,-0.549052,-1.454916,-6.933211,9.903304,8.879346,2.763778,-9.186402,4.335653,-6.134595,-0.807827,8.745964,-5.380730,5.435740,-4.726349,-9.268206,-5.534788,5.237967,7.767402,4.270902,3.752216,-1.590104,-9.788651,-2.613954,-8.899770,4.982395,4.591232,8.862672,-4.343583,6.637632,-5.801718,5.710916,-0.608027,4.571005,1.696449,-8.863128,6.469872,7.800300,-0.257591,-4.250015,7.330982,0.129884,-2.531872,-8.557839,8.947679,8.220585,0.597524,-9.853614,8.714209,7.469958,0.136389,-0.757354,5.892987,-6.523176,0.110974,-7.758146,-6.019659,5.191885,-8.063519,9.814612,-3.707127,-5.005678,4.958279,7.783448,-5.983955,0.240991,1.391216,0.373127,-9.281702,-6.836499,-8.317888,-4.730061,-3.807286,2.319575,3.739822,-6.425638,1.597640,9.433302,6.051711,-6.140016,-5.997686,4.461142,4.778476,-5.735641,-8.563124,2.956959,2.053589,3.890206,9.845358,-2.179202,3.965776,-0.624492,9.861332,-9.021566,4.624494,0.208327,-2.721930,9.300429,2.937872,1.602047,-0.455480,-1.963438,-1.052214,4.431390,-7.210905,-5.294377,-6.699815,-8.507836,8.284326,-7.509670,0.062349,-9.347891,2.486003,6.794736,8.903958,-8.030839,0.298765,3.104891,2.575805,-1.214747,-3.772745,0.653492,5.917595,3.188606,-5.551060,5.038685,3.385661,-5.262324,7.659719,8.062523,-9.362690,-0.402561,-1.603810,-2.938022,-8.328239,2.400525,2.058154,9.438089,-5.691928,4.588681,6.573769,2.300846,-7.473397,5.340430,0.954489,-1.859192,-4.478359,-9.486248,-3.640440,-0.543855,7.058492,-9.622733,1.947646,4.261595,-0.437457,-7.950899,-5.439860,-2.016371,8.489098,-6.810856,-3.714786,7.798847,-2.622398,6.671034,-4.128878,6.778599,4.164142,-9.393150,-7.340681,-1.388325,7.417839,-5.759647,-3.869816,-7.111851,-5.910932,1.940965,-0.589502,3.890169,-9.814162,7.706697,3.716710,-6.545217,-4.704635,5.426511,-6.751977,7.521167,-4.766045,0.540462,-7.557681,9.409919,9.646468,5.822476,1.233278,-7.950414,0.298822,-7.351453,-3.260202,7.761404,4.002402,9.926230,8.313861,0.604209,-3.669967,-4.013486,4.020749,8.941237,-5.749487,-7.319072,-6.545530,6.476823,-9.310628,-1.460324,-2.786939,-4.015677,-9.855271,-0.011183,-7.499884,5.502219,-3.926397,-1.074819,8.698480,-9.546526,-0.174618,7.765476,3.721501,0.379011,-6.817807,3.727582,8.930336,4.273291,7.900400,6.793502,6.169090,0.780927,3.873668,2.351109,8.658116,-4.232977,-9.030126,-5.587922,6.307991,-6.502140,3.129830,-5.461657,3.199511,-7.496569,9.717942,-4.306965,0.646321,6.256132,0.421074,1.409934,-9.479717,4.454788,-2.903648,5.786150,9.254140,0.785326,8.249274,5.811927,7.754003,9.005224,-9.014059,-0.395440,8.993240,-3.554226,-5.246344,-8.698615,9.230791,-3.716927,6.966698,6.113490,3.379179,-9.228158,4.737692,3.849699,5.254768,7.818959,-6.045262,9.286111,0.611452,4.611952,-0.016697,4.414007,3.742148,0.276721,8.044360,2.308773,3.962573,4.910923,7.802086,-4.559309,4.421689,-3.652291,5.656379,-9.770658,1.896696,-3.717615,8.476676,-9.070672,7.824963,4.436579,-7.958525,6.420019,-2.116751,-6.519088,6.997162,3.594317,3.531198,7.820802,5.506760,1.712924,8.590963,-2.675147,1.064759,7.592526,-7.328618,3.492631,4.251430,1.385106,0.210812,7.455266,-5.476023,-7.984182,3.521276,-8.502605,1.633695,1.259753,5.017659,6.348506,-9.270281,-3.760557,3.318440,-1.290249,-1.154937,5.800253,8.212072,3.264165,8.466633,1.104716,1.224573,2.610048,-6.272089,3.573655,6.621791,-1.541133,6.978044,-0.866534,8.073793,5.598624,-5.880930,2.420093,4.270080,8.114125,-9.395590,1.154772,-7.773401,-4.129877,-5.763188,2.532472,-2.266811,7.944550,-2.681401,1.630799,-0.633187,7.198135,0.348279,3.525704,9.453930,3.916689,8.489070,5.633727,3.819509,-9.662499,8.714649,5.087063,-7.633762,0.927623,0.446787,-6.497978,1.729731,-7.229226,-8.047775,-8.362074,5.113991,-6.330817,-9.862644,-2.402137,8.223715,7.150022,-5.717121,9.319483,-7.830599,3.276095,6.365653,2.800352,-2.295186,4.806703,2.410998,-0.792019,0.925382,-5.210603,2.448387,1.524064,5.858867,6.814413,-6.090147,-0.497530,-3.042013,-9.130343,1.107110,-4.837921,2.061043,3.386991,1.835906,7.510980,-7.516519,5.534279,1.860651,-2.984349,3.020872,-2.400414,-6.808592,-8.467814,9.721888,-3.831468,0.227060,-4.252501,-9.711374,1.322851,1.090483,-9.151779,-0.200717,7.154499,7.813504,3.950530,-7.128889,-8.517915,-2.348535,2.864933,8.551370,9.442667,-6.659797,2.974370,0.118717,4.476462,-1.816229,-1.989804,0.760177,-7.400512,2.671300,6.882403,0.588193,1.560593,7.555664,3.106307,-7.423328,7.115021,-2.014086,-2.580080,8.587010,0.758959,0.966239,8.885772,7.044909,5.629054,7.720189,-7.879612,-7.043549,-2.804235,-2.330461,-9.377891,-1.994622,-0.092157,6.234262,-5.511191,-1.338080,-4.492687,0.588820,-1.260294,9.948298,-9.186345,-0.930108,9.445152,-1.718437,-6.278299,-7.938419,7.599025,-4.764850,0.216865,-7.647534,8.295820,3.376001,3.292808,5.886659,-1.891503,2.415838,6.787868,1.983519,1.458821,-0.920698,1.291778,-7.207875,-2.152179,-6.858413,-6.897838,0.088116,8.161554,0.058758,-6.191457,-0.009165,9.243013,7.865432,4.636547,-2.267376,-7.308769,9.780325,2.396703,-8.102332,-9.243096,2.267952,-3.337899,-7.671241,-3.522192,-6.386240,-6.819634,8.939719,-8.794247,-8.211092,9.871939,-2.153002,-3.598541,5.250421,-2.588770,3.379300,-3.892377,3.392646,2.133307,-1.529848,-7.146815,-3.113399,8.520456,-2.762283,-2.668321,-6.440394,2.592272,3.112018,-9.241668,6.828232,9.587879,9.140404,-1.353682,-2.170598,4.466430,3.703145,8.094881,-0.734598,0.126926,-0.882053,-6.443651,8.064927,-6.491585,8.963621,-1.805954,1.250816,4.463010,0.642147,0.248870,9.923264,6.008666,-3.619414,4.461565,8.301609,-8.464857,-0.124545,-5.072036,-6.765082,9.176317,4.281358,3.341036,1.908413,-1.642418,-2.373228,-8.558503,-5.895653,-5.688056,-4.007244,9.391570,-6.058581,1.263141,-6.890500,-3.137553,-5.769443,-7.269965,8.149053,-2.149956,-8.504095,-7.416417,3.642033,1.803502,-2.250611,-1.974527,2.610078,-3.726463,6.365520,-5.669213,-3.533214,6.057753,-3.413407,-8.986678,2.743671,-5.083468,5.768229,-9.633737,2.878295,-7.275625,7.379824,-1.620512,7.312340,-6.672249,2.846123,-1.155794,0.027501,-1.372715,-5.650693,-6.661628,-3.901533,7.129083,1.690204,-0.405497,9.316056,-1.045149,3.794914,1.705428,4.618399,-8.966610,7.029899,-1.462332,-3.178757,-3.528194,-1.534548,-7.209783,-3.408085,-8.031694,1.590146,-6.547930,-3.435226,7.111424,-3.052068,-0.608372,-9.045799,-1.672286,2.175878,-3.526101,9.811283,-0.528923,0.388038,-6.917055,3.730338,6.722747,4.276086,3.600513,-7.064172,-0.182802,-4.153197,8.730590,5.854126,-9.369288,-1.492823,-9.494399,1.576516,0.656972,3.328937,-8.709714,5.148232,6.835977,-8.477304,-3.235477,5.986569,8.521603,5.156353,-5.165959,-3.150860,5.049406,6.833425,-1.525243,7.639558,-5.469839,-1.449172,3.774751,-8.059664,-9.523109,1.175962,-2.140945,6.373632,-7.005605,-9.493152,3.228719,2.972014,9.100654,-7.998017,-5.845145,-2.649318,-4.452862,0.244873,-1.321727,-5.496962,-6.069137,0.344820,-1.511330,-8.973728,4.015633,4.166218,6.168807,8.794631,-3.856827,3.754464,8.975328,7.833235,-2.806243,8.763327,-0.155197,7.583972,-0.987869,6.762039,-4.578152,9.637792,-6.827740,-2.622057,-3.617363,8.070723,-1.009625,8.157550,-2.807474,6.337276,4.794868,6.278022,7.950465,5.698864,1.981688,-6.130157,-7.414582,9.361438,4.555003,7.929511,8.259324,-6.708835,5.453948,-9.779071,-5.699917,-6.542072,-6.562687,0.350566,-1.193188,0.213219,-5.329710,2.280897,-6.942947,9.712425], dtype = "float32")#candidate|2678|(1352,)|const|float32
call_2677 = relay.TupleGetItem(func_2185_call(relay.reshape(const_2678.astype('float32'), [1352,])), 6)
call_2679 = relay.TupleGetItem(func_2188_call(relay.reshape(const_2678.astype('float32'), [1352,])), 6)
uop_2680 = relay.cosh(const_2678.astype('float64')) # shape=(1352,)
output = relay.Tuple([call_2675,call_2677,uop_2680,])
output2 = relay.Tuple([call_2676,call_2679,uop_2680,])
func_2687 = relay.Function([], output)
mod['func_2687'] = func_2687
mod = relay.transform.InferType()(mod)
mutated_mod['func_2687'] = func_2687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2687_call = mutated_mod.get_global_var('func_2687')
call_2688 = func_2687_call()
output = call_2688
func_2689 = relay.Function([], output)
mutated_mod['func_2689'] = func_2689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1667_call = mod.get_global_var('func_1667')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_2701 = func_1667_call()
call_2702 = func_1667_call()
func_1379_call = mod.get_global_var('func_1379')
func_1382_call = mutated_mod.get_global_var('func_1382')
const_2715 = relay.const([5.130895,5.627790,7.976391,-6.836786,-0.818217,9.422248,6.938435,-2.219946], dtype = "float64")#candidate|2715|(8,)|const|float64
const_2716 = relay.const([9.788405,-3.941173,-1.987893,-2.457594,-4.859846,-7.504279,-2.962955,0.638221,-2.077093,7.287895,-8.733539,9.113866,-1.629380,-9.118260,-2.114143,0.322357,-1.564153,2.810170,-7.777671,-3.433440,9.943338,8.407032,-8.071387,-3.033846,-3.906005,1.198347,-6.363549,-8.759391,2.845848,-7.029707,4.405584,4.675607,8.810762,-0.210394,-1.393015,-4.202371,-5.955812,5.956924,8.840957,8.202452,-5.022253,-2.369129,0.902763,5.397187,-6.328855,-0.603958,1.496098,6.030033,1.512667,-0.479118,-6.602416,3.948084,-0.696927,7.825639,-9.987808,1.654689,-2.153168,7.253656,-3.936356,-8.639007,-6.376818,8.012384,-0.558156,5.132605,-1.824237,1.877040,-4.027337,5.168578,9.107623,-1.964980,8.617160,-0.064560,-8.271558,-3.773957,-9.233547,0.173446,2.921158,-8.179811,2.859190,5.328199,-4.811517,-8.310336,-3.685501,9.802199,-4.416880,0.730183,-6.446345,6.746105,-4.509555,2.435674,-4.533486,5.198512,1.136292,6.896565,4.167714,5.563307,3.422535,5.605720,4.798494,-6.401343,-7.930178,-0.693238,7.565594,6.440872,8.968087,2.531368,1.892169,2.742056,-1.378461,4.485477,-0.167490,9.237425,-0.318511,5.915276,-9.084528,-8.955343,9.323621,5.376750,-6.338537,-6.113339,9.381618,-6.428326,6.391387,-0.936134,-6.006242,6.786769,-8.046070,1.969570,2.302792,-9.676363,-2.320466,1.029757,1.925925,-9.598853,6.228549,0.826450,-0.618784,-0.570417,-6.054374,-1.311053,-9.645431,9.952283,-5.887012,-1.595504,3.712165,9.757056,8.588530,4.220004,7.605974,-5.868842,4.237143,-5.086583,8.844050,2.058950,2.592975,8.830171,4.284000,-6.717107,1.028334,-7.534117,1.340951,-4.573574,-5.858989,-8.945304,2.433318,-1.059677,-0.160758,3.624127,6.346931,8.070692,-9.557290,5.806999,0.167524,7.305070,-7.528218,0.590334,-7.061100,-6.157552,-1.283114,-0.167922,0.437954,-6.558524,1.876248,-7.293882,-8.339003,8.761607,-3.595011,-2.282483,-8.838603,-7.040719,5.138186,5.398346,3.905149,-8.594126,-6.385219,0.497056,-7.091461,2.753923,8.940484,-8.258041,-8.516352,-7.988828,-5.270921,-8.520158,6.418625,7.058561,2.165325,-5.038029,-0.195550,-9.054749,4.329401,2.951591,1.329448,-8.843471,-0.012845,-3.127242,-1.539724,2.214748,5.865834,-1.101081,-9.620825,-4.574981,-8.142940,-2.080521,1.619559,7.188614,-0.997251,-5.362484,8.165910,8.115955,-3.740078,-2.038965,-2.357728,5.689571,-8.566322,-6.612128,-1.769782,-0.310756,3.825386,5.582306,4.058470,-0.129065,1.442876,8.635905,5.266797,-6.744421,-5.027786,-1.372353,-4.374887,-6.493401,9.787428,0.909712,4.807908,-6.185640,-0.519818,-0.165963,-4.822348,-4.798289,0.396128,3.732228,-4.965964,-1.381484,-8.495981,0.576853,3.128743,6.329043,5.893994,-2.930846,-6.346246,5.323364,-6.003022,-3.119829,-6.055647,8.593872,-1.958344,-3.763270,-4.698610,8.567279,-9.908794,-8.530781,9.940205,-5.961503,-6.160516,6.310805,-9.267849,-8.489992,-4.649664,4.807409,7.470796,3.659072,3.330124,-9.431086,-2.862104,7.062791,-0.646163,-3.240760,7.652520,-9.929139,2.813349,9.992386,7.062327,3.415931,-8.267126,-4.907004,4.098189,-6.214912,-3.109317,-7.521841,-9.369292,6.025622,9.568023,-8.692783,-5.045599,0.098347,3.686531,3.401441,-7.948525,-7.157694,-2.776438,-7.527395,-5.111783,-2.980670,7.339064,-3.358858,-4.360762,-6.220479,4.360863,7.814201,-6.122448,-2.445536,1.179311,-8.795865,-8.812833,-8.178191,8.019650,-8.881388,6.617352,-5.940309,4.003875,3.629600,-0.872494,-4.184431,-1.612864,-5.188487,-8.357702,-6.751761,-7.617123,3.999195,-9.313573,4.630201,-8.395009,4.521670,1.539662,-2.532957,-0.893053,-9.780395,4.150348,4.155626,-9.748826,-0.856579,-8.277409,-9.475909,7.171000,4.639407,-1.521149,-8.699711,-3.194960,-3.501842,5.319152,-3.583991,-6.908494,7.740635,0.544160,-0.916985,-3.188707,-1.215253,7.142507,2.804690,-1.706215,-9.329722,-0.839318,5.236057,9.563521,-2.739777,-8.440738,-1.582318,5.503170,2.077737,-6.129002,6.240028,-1.677136,0.657822,-8.357561,8.888524,9.293448,1.179479,-1.086252,-7.382471,0.331225,-7.923759,-4.160577,-1.271292,-1.749218,-1.750570,9.007986,2.810137,-1.700212,-8.245594,-8.709850,3.493286,2.054605,5.532982,-8.750764,9.895705,-2.793416,3.257401,0.039749,-8.719633,3.286835,-7.482415,-9.138086,2.312391,0.078102,-7.418814,1.756508,4.842193,-6.844290,-3.514011,5.087839,-6.259037,8.990551,-2.005374,-4.768359,9.112029,3.741015,-0.310444,0.016296,-2.545950,8.712581,-9.368420,4.021891,-3.607243,-8.901858,-1.503452,-7.290705,0.611476,-3.949398,-0.407172,3.748908,8.264268,-8.375516,-8.079008,4.482810,-4.320855,0.434344,9.266123,-4.862949,2.379655,-9.155693,-3.545438,-1.482969,-0.025371,5.833015,0.380784,-8.650032,-1.441552,5.088341,4.803644,8.135166,8.542889,-4.222318,3.261659,-7.152548,-5.693994,-3.700565,-4.731365,-5.981148,-8.570165,0.659523,-2.373116,-7.777283,-4.226626,-9.273664,-4.662397,8.927107,-4.577185,-7.843814,1.764253,-7.309304,0.733482,-2.373093,-7.618050,-0.395633,8.453986,-9.619154,-2.893730,-3.623134,-1.395541,-1.644073,-7.091242,4.212530,1.137781,7.601745,-7.322472,-4.506069,-8.082099,2.870573,-6.446521,0.990639,-9.159971,5.237788,-3.921445,9.098114,-9.386585,3.555591,-0.008180,-5.817108,-0.314120,-6.890340,1.597246,-3.446053,7.128549,-9.106238,-4.792876,5.295116,-7.203200,5.409721,-5.151979,7.218480,-3.788041,-2.292279,7.289845,-5.705497,-5.529629,0.284720,-8.826247,8.409129,4.317814,6.794750,-4.951034,-0.751701,7.381352,1.652845,6.457945,6.826261,-4.378669,-3.972497,-2.851257,6.521956,8.289984,-6.809132,4.619863,0.466448,-2.507970,-4.821431,-1.824268,5.512551,-2.635520,4.946006,0.455188,8.997012,-0.835134,-6.197142,-2.795773,6.826887,-5.790529,4.140416,-0.358802,-9.928429,1.209606,4.263609,-8.134697,-3.253099,9.406697,-6.237866,-1.215695,-2.882697,1.956190,8.750122,9.918688,1.296404,-4.543595,6.147188,5.009959,3.964993,-6.190284,-4.867008,6.211715,3.131743,0.704027,-8.830056,8.261791,-9.226755,6.616956,-6.037154,0.766241,-0.570718,0.076147,-4.888882,7.059231,8.507522,-6.600732,-3.830979,-2.633174,-9.471440,4.485410,3.629118,-5.496182,1.765312,3.332348,-9.126149,3.852906,0.354961,-8.282378,-7.737351,9.202773,5.182010,6.987400,-5.465988,6.096764,4.190929,3.489238,7.286996,2.728677,6.418372,-9.960080,1.368803,-8.757918,-8.932553,-4.628213,-6.138274,2.700400,9.794019,-9.137731,-3.896773,-4.558895,-5.459730,4.467604,4.268810,9.003792,6.616662,-4.383679,8.262677,6.123086,9.054074,-7.454389,-9.399835,9.534119,7.737923,8.930095,0.346928,0.274011,5.110907,7.343053,6.903973,4.469064,5.876728,0.782818,-1.344759,-6.388240,-9.312360,5.304756,-9.251458,-4.431179,-2.655345,-9.022653,-1.841161,-5.880251,-8.490803,-3.053605,-6.664174,-0.810384,-1.314821,-3.883654,4.118527,-7.692238,-3.459167,-7.026046,1.211211,-1.441462,-9.501430,3.104241,-8.770628,-3.340382,-4.714717,1.259720,-0.753503,-7.146353,7.238039,9.800807,7.704118,9.652623,9.467710,0.869356,-6.398670,8.519260,-4.700660,3.927498,-5.079698,2.362449,2.646249,9.702873,-9.910682,-2.575587,-1.219282,-2.358729,5.140796,4.797718,4.245431,1.027061,-7.488576,-5.280319,-5.382964,-4.119146,7.562650,5.469615,-9.419982,-4.100860,-1.113173,-9.192706,-4.764196,-8.443460,-2.919862,3.170176,-8.667451,-3.593756,6.675847,9.890789,-3.852517,-8.913405,6.825265,-5.102186,-0.015544,7.242254,2.745042,0.833138,-4.398252,-7.643253,-6.915036,7.248090,-1.291929,6.213415,-6.759179,2.390231,-2.819615,3.087792,8.519934,4.945892,-2.668407,-1.273100,4.624794,-9.516225,-9.675074,-7.733712,-2.214775,3.206641,8.912982,-0.633742,-5.657278,3.446448,4.818978,-4.347333,-8.402872,-4.900672,-7.871552,3.515592,-9.756876,-5.016988,-7.236646,3.658415,-9.601889,6.357522,-1.150937,5.004694,-1.704956,8.321609,7.680958,-1.818338,-7.735857,4.306239,-3.024181,-8.233165,-8.931135,6.230564,5.044725,9.532141,3.544572,-9.558305,-8.201570,-8.606343,-1.489692,-6.875667,-7.873029,3.676782,8.629575,2.047091,1.535788,-1.694026,-8.103790,-2.041080,1.890336,5.986162,4.570687,-1.329254,-8.807596,-8.339892,-7.612633,-1.454357,1.940245,0.072476,-3.114750,-0.344675,-1.396224,6.329975,-0.086344,8.261386,0.532492,5.803266,-5.560041,-5.840338,-6.237983,7.571068,5.380130,3.629679,2.033707,3.868124,-7.776844,-5.616207,9.931972,4.171413,6.258647,5.899543,-8.988594,2.401129,-0.078774,1.609580,-7.246583,8.334696,-7.629410,7.518007,-9.494712,-1.615161,-3.404541,7.727679,-3.123669,-6.545515,8.132326,1.038168,-0.432232,-5.313507,-2.938497,0.355367,-5.615323,5.150547,-7.621830,0.984103,5.124439,5.399837,-3.801287,9.277564,1.021994,-3.423614,4.888097,-8.973896,8.990576,-7.750966,-3.760547,-6.931267,4.902276,-5.617535,-6.180028,-7.751445,1.716334,-0.024484,-6.414301,-1.797953,0.568315,2.073856,-9.532542,-0.796061,-7.062565,-7.098821,-4.342079,-0.850195,-6.481261,8.057924,-3.494124,-5.980227,9.618819,3.440040,4.372789,-9.319857,-5.153870,6.472318,8.651218,-5.791633,5.729931,7.176717,-9.992893,0.010630,-9.885224,5.011240,-1.831846,-7.418888,-5.508097,0.415721,5.993201,-8.095353,0.470976,3.473463,6.794421,1.124498,-6.191354,3.155890,-7.907538,2.478341,2.398083,0.024732,-0.081540,-4.320692,9.407248,-7.495969,0.557737,-7.932219,3.091573,5.205108,-0.166092,1.317592,7.783548,9.648625,5.935060,-0.654654,5.286945,-7.703999,9.379630,4.242954,-4.862856,-1.135713,-9.692968,8.895307,-9.985391,9.099240,0.484799,7.490624,4.081505,-1.604578,9.815925,4.068716,-1.029724,-6.331447,-4.574860,-3.482661,-0.292862,-7.657865,3.729020,-0.109340,8.348540,-9.163402,-4.698294,8.031412,-4.116376,-5.114328,5.010414,7.795414,6.478960,7.995342,0.326608,-4.411214,-0.355722,-9.988046,-5.942824,1.374207,-7.293590,-3.761832,5.752316,-0.877891,2.126776,4.427168,6.303068,-0.988147,8.722794,-2.074497,7.500700,-0.086490,-1.482968,-8.298657,2.792146,-6.848849,7.482358,-5.028975,-2.659239,4.860818,8.775830,-4.734351,0.131964,9.056655,7.112119,5.864968,-5.771498,-6.057978,-7.788196,-9.037187,7.506904,-5.060922,0.807548,6.300722,2.955751,-1.510619,-6.672085,1.080369,5.726216,-2.614306,5.580029,-7.489838,4.799371,-9.134087,1.045371,1.096466,9.807253,3.077100,-1.269183,-4.148760,8.756793,-7.217914,-2.071101,4.018984,-7.130682,-1.569106,6.975460,7.057158,9.869655,6.272566,-0.017168,0.594969,-8.763949,6.985043,-7.343332,-3.588626,-9.906956,6.397506,4.021466,-8.510129,-5.911693,9.115926,5.776586,-5.271355,-7.829971,7.808001,-7.364258,-7.153653,-3.543246,9.014091,9.099303,-6.126312,-9.643463,-2.307409,9.649418,4.986935,8.438861,1.583992,6.136561,-3.742161,6.620750,3.701548,-5.776084,-8.438910,0.909832,9.677529,-3.163725,-6.166270,5.942959,-8.228817,7.590904,-9.244449,-9.716382,-7.355277,0.591718,7.815179,-2.078122,-6.587594,-5.325468,2.359530,-8.271699,-6.294205,9.618386,6.081750,-9.449459,6.941592,2.310606,-9.787510,8.018004,-6.980309,9.589156,-1.994108,-0.831549,0.796874,7.281293,-5.215295,4.121464,-5.451177,7.668147,-5.424294,3.931050,8.854156,9.551619,-7.304604,-5.259039,-3.624571,-0.486360,-9.254218,5.672308,3.667777,-0.974776,5.413643,1.255622,-5.788021,5.850328,-4.576337,-4.653424,-6.803590,8.764067,2.513522,4.730483,-6.076205,-6.157535,-3.426945,-3.804778,-4.294510,4.365135,-7.148364,-1.904348,1.057011,3.265801,-7.168061,3.163004,-3.868667,-0.388366,4.924143,2.649145,5.664462,-9.128610,4.862525,-9.941220,7.774649,0.375081,-4.872060,2.451330,-9.479928,8.956034,-2.417552,1.081328,1.789098,-8.428298,8.145610,-7.509907,4.545470,-8.654856,8.728632,7.414180,-4.230442,3.365919,-9.860351,-8.261645,6.243966,5.698205,-4.233527,-8.175951,-3.076728,-9.679770,-9.197688,2.311371,0.939091,1.740590,-3.266866,-0.673658,4.741362,5.773180,-6.111058,-2.205198,4.057912,6.204590,-8.550782,9.722892,5.734913,-3.983933,7.880891,1.986865,5.206519,6.304922,0.760325,-5.111962,1.909609,-5.101061,1.090045,-0.072116,8.730248,8.466545,6.126807,-9.940616,-5.906898,4.523619,-8.216091,9.881948,0.401338,1.297109,-6.153139,5.841692,3.164583,7.189608,7.404162,1.077943,4.785864,-6.424861,-1.806733,7.956453,-8.163379,-9.552143,-3.333364,-7.003115,-5.094301,-1.306702,-8.780217,6.420591,-5.094943,-5.905232,-4.679135,-4.355171,-7.429238,-5.801638,1.884225,-9.482277,-8.269121,0.227309,-9.847497,-4.347094,7.192909,4.814266,2.753515,-5.026609,0.547285,9.323453,-1.181784,9.717252,-8.609858,1.238269,-7.075418,6.753212,-1.676764,9.101057,9.397496,-5.895605,-4.133521,-5.776664,-3.171188,2.584594,3.373892,3.879625,-8.626979,0.930410,-1.585333,0.479218,-1.596917,-6.945909,8.235555,4.013536,7.962450,6.098310,9.309702,8.623108,-5.665655,5.173826,4.330014,-1.852524,0.678200,5.162597,-8.610010,-2.184479,2.598443,-6.426054,-5.005878,5.297409,7.960794,-6.628569,-5.595283,-3.989260,-3.785530,4.181571,-8.201302,-6.585151,7.314074,2.792326,-3.376971,-8.986139,-2.594892,-0.426062,-2.418182,4.320185,-7.764037,-2.792470,5.875489,-4.571246,-9.151476,-0.459356,5.176579,-6.588833,-4.896858,-0.509786,-1.900753,-3.881095,7.032758,3.732398,6.880522,9.630992,-2.974267,-8.581724,-9.140294,-7.297717,-3.784936,8.087538,0.684726,-0.379872,-0.983536,-6.559101,7.345860,5.050088,6.708065,-3.066047,0.741156,-7.108151,4.799824,-6.359985,6.970126,-6.899716,6.184572,5.883406,-9.487193,-7.624907,8.072115,1.891138,8.783316,1.434931,6.225944,1.922480,-5.514937,8.559972,5.097327,1.218228,-8.752387,-8.498386,-8.751837,-9.018764,-6.646576], dtype = "float32")#candidate|2716|(1352,)|const|float32
call_2714 = relay.TupleGetItem(func_1379_call(relay.reshape(const_2715.astype('float64'), [8,]), relay.reshape(const_2716.astype('float32'), [1, 1352]), ), 6)
call_2717 = relay.TupleGetItem(func_1382_call(relay.reshape(const_2715.astype('float64'), [8,]), relay.reshape(const_2716.astype('float32'), [1, 1352]), ), 6)
uop_2718 = relay.asinh(call_2701.astype('float64')) # shape=(13, 10, 7)
uop_2720 = relay.asinh(call_2702.astype('float64')) # shape=(13, 10, 7)
output = relay.Tuple([call_2714,const_2715,const_2716,uop_2718,])
output2 = relay.Tuple([call_2717,const_2715,const_2716,uop_2720,])
func_2725 = relay.Function([], output)
mod['func_2725'] = func_2725
mod = relay.transform.InferType()(mod)
output = func_2725()
func_2726 = relay.Function([], output)
mutated_mod['func_2726'] = func_2726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mod.get_global_var('func_1745')
func_1747_call = mutated_mod.get_global_var('func_1747')
call_2776 = func_1745_call()
call_2777 = func_1745_call()
output = relay.Tuple([call_2776,])
output2 = relay.Tuple([call_2777,])
func_2780 = relay.Function([], output)
mod['func_2780'] = func_2780
mod = relay.transform.InferType()(mod)
output = func_2780()
func_2781 = relay.Function([], output)
mutated_mod['func_2781'] = func_2781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_2805 = relay.TupleGetItem(func_1140_call(), 0)
call_2806 = relay.TupleGetItem(func_1142_call(), 0)
output = relay.Tuple([call_2805,])
output2 = relay.Tuple([call_2806,])
func_2807 = relay.Function([], output)
mod['func_2807'] = func_2807
mod = relay.transform.InferType()(mod)
mutated_mod['func_2807'] = func_2807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2807_call = mutated_mod.get_global_var('func_2807')
call_2808 = func_2807_call()
output = call_2808
func_2809 = relay.Function([], output)
mutated_mod['func_2809'] = func_2809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mod.get_global_var('func_1745')
func_1747_call = mutated_mod.get_global_var('func_1747')
call_2827 = func_1745_call()
call_2828 = func_1745_call()
var_2831 = relay.var("var_2831", dtype = "float32", shape = (13, 10, 7))#candidate|2831|(13, 10, 7)|var|float32
bop_2832 = relay.right_shift(call_2827.astype('int64'), relay.reshape(var_2831.astype('int64'), relay.shape_of(call_2827))) # shape=(13, 10, 7)
bop_2835 = relay.right_shift(call_2828.astype('int64'), relay.reshape(var_2831.astype('int64'), relay.shape_of(call_2828))) # shape=(13, 10, 7)
func_193_call = mod.get_global_var('func_193')
func_197_call = mutated_mod.get_global_var('func_197')
const_2837 = relay.const(6.207077, dtype = "float32")#candidate|2837|()|const|float32
const_2838 = relay.const([[-6.997156,-5.022074],[-2.079231,-1.452962],[-5.779158,-3.674926],[-2.571791,-1.063577],[-5.872963,2.883300],[9.985975,5.818445],[-6.875307,6.949411],[3.779625,6.705861],[8.102523,4.231317],[-1.914629,-6.915943],[-1.378883,8.003373],[-1.484601,9.773556],[3.220269,-8.545726],[-2.470541,1.458428],[-6.152532,6.639464],[-4.998311,6.812530],[8.694488,1.385724],[3.953077,-4.684577],[-6.702389,-4.831930],[-4.755807,-1.000527],[-2.191569,-6.958671],[-3.198305,5.606032],[8.623652,-0.034681],[1.385697,2.928650],[-4.274556,-7.753778],[-0.107406,3.475640],[-6.943202,9.897458],[-5.192886,0.365067],[-9.732315,0.921560],[1.058590,8.076558],[6.409513,-1.729752],[-2.673667,5.930044],[7.917839,-8.965103],[9.309614,-9.978376],[8.749111,-5.800233],[0.252115,-4.721075],[0.907981,-0.838971],[-4.043594,7.564664],[8.958952,-5.533096],[9.549413,4.939914],[-7.576092,-7.039247],[5.043533,5.426005],[2.567099,-8.449638],[6.856808,-1.236916],[-9.370582,-9.866671],[2.129663,1.519927],[8.004179,-5.008289],[7.877235,4.069485],[8.700859,0.083181],[2.954594,6.196098],[-8.557730,1.537198],[-9.668373,2.762604],[8.148286,5.072426],[4.060064,2.458325],[-4.086235,-5.669255],[6.442429,4.950742],[6.734600,-2.437821],[-3.555008,9.433337],[6.908088,-4.576087],[2.234670,4.438826],[8.778720,2.596902],[5.697388,-4.191901],[-6.747737,8.251730],[-5.836454,-3.944988],[-6.751331,-4.748058],[-3.537707,4.586551],[5.721496,6.777529],[3.369688,4.978643],[0.335849,-5.780363],[1.019021,-2.538623],[2.609527,-8.701900],[9.912588,0.964147],[0.621684,-4.784065],[-3.945998,1.682002],[8.866038,-3.879133],[9.031328,-9.598511],[-2.844271,2.927993],[1.357021,8.758150],[-5.456074,-3.438214],[-7.834593,3.841941],[-0.801427,0.748468],[0.662213,-5.931793],[7.281790,-0.260615],[-9.716094,7.269246],[1.309307,-9.638257],[-0.430515,3.888459],[1.002611,-4.804826],[5.713220,6.780858],[3.313263,-6.085017],[-4.137793,-8.840375],[7.284649,-6.379653],[6.822249,-0.695025],[2.079588,0.697985],[-7.030550,-1.065304],[-7.402315,9.419982],[-0.414173,1.629574],[0.694981,-3.421391],[-6.014669,2.777081],[9.080520,0.933932],[1.451942,6.801696],[5.021594,1.034613],[2.119127,1.213320],[-3.335931,-7.035401],[-3.006785,2.790405],[2.347312,6.874543],[-3.038518,-7.118521],[-6.587450,-1.548685],[3.971759,-4.216853],[-3.387933,3.886885],[9.007915,6.255067],[3.153370,-3.362228],[-6.494195,-2.477859],[-8.183277,3.470142],[-8.586583,-8.358210],[-1.863278,4.420740],[9.607356,-3.743589],[4.932842,5.702565],[-9.288062,-3.034692],[-2.758565,7.375382],[-6.651939,1.199074],[4.445850,4.880893],[-2.383937,5.826523],[-5.272301,-1.579859],[-9.670890,0.406852],[-8.402984,1.714234],[-6.282610,4.290931],[-6.915068,1.297484],[-0.655678,7.677276],[4.928989,9.410884],[6.717605,-9.013347],[3.604844,7.023015],[2.476350,0.009515],[5.929606,2.137685],[5.545172,9.222091],[6.595945,-6.227322],[0.323379,-8.761157],[4.982164,-0.703351],[-0.753136,-5.177295],[0.292195,2.390923],[7.113297,1.991181],[4.413939,-2.013833],[2.950641,8.045937],[-3.134029,-5.766861],[4.127403,-4.954904],[-7.879180,5.118504],[-6.178959,3.818701],[6.354748,-6.795362],[4.442175,-5.039148],[-5.436909,5.797052],[-8.409306,8.692100],[6.351910,-6.145350],[-4.134894,0.755529],[3.274293,7.447316],[-7.691111,9.087584],[4.206941,-8.724035],[0.570570,-4.531770],[1.113722,6.544287],[-7.212415,-9.027699],[-4.493776,-9.586864],[-0.869261,-6.939946],[5.905335,4.091699],[-3.409174,9.717340],[-6.484757,-9.510501],[-8.310261,-0.870530],[3.338471,4.544511],[-0.587147,2.441776],[-3.816796,9.190256],[9.528978,-7.307268],[2.096525,-0.940499],[9.933227,7.352405],[-5.838976,5.903892],[-1.412939,-8.333112],[-7.487481,7.371514],[-2.722421,8.078971],[2.164458,9.711625],[-3.074509,8.707152],[8.778129,5.193621],[9.720810,-9.821535],[7.076745,1.783814],[3.236508,0.247918],[1.668659,-0.100574],[7.782556,8.299983],[-0.802480,6.076725],[-1.887327,-0.222734],[-1.233069,-8.806004],[0.056599,7.987942],[8.916419,-6.224870],[1.337418,-4.664500],[2.173521,-4.094902],[-8.300832,2.526801],[-5.075406,-1.998385],[5.918304,-0.987045],[-0.435635,9.068759],[2.274759,-0.150526],[3.087285,-7.578171],[-7.954164,-3.779707],[5.454315,-6.845304],[-3.929915,4.083266],[-6.435139,0.387106],[-4.613287,-9.531979],[9.628687,-8.317421],[-4.249636,5.465629],[-5.729712,-4.988420],[-6.798961,-1.547219],[1.125146,9.297691],[-5.209322,-3.768535],[-7.441600,-7.881566],[5.400203,-7.888876],[-4.496256,-9.828536],[8.932456,6.934903],[2.758253,2.734080],[-5.785020,8.350500],[-8.074641,8.750309],[0.791903,-8.400653],[7.331204,3.594838],[5.293971,7.177275],[-2.592005,-3.156478],[1.586553,6.975139],[-2.101892,-1.292969],[-0.554898,-8.881752],[2.844905,7.961243],[-5.350341,-1.776289],[-0.192527,-3.897663],[1.428515,-2.122105],[3.000464,-1.778405],[-4.264144,7.828652],[-4.404977,5.868783],[-7.393798,0.404793],[3.762194,-9.348805],[-8.947461,0.788439],[-8.035330,-8.253339],[-4.708499,-8.315090],[-0.644252,-9.486786],[-6.908878,4.427305],[-7.265697,-4.041976],[-2.540341,-7.263493],[-2.143386,4.494102],[6.669472,-5.146829],[1.082311,-6.975013],[4.677131,0.452849],[9.686702,-3.779906],[-3.460260,-1.924010],[-4.476348,0.484721],[-7.470030,-1.050803],[-6.866756,-5.070355],[-1.160021,-9.764810],[5.879331,5.824966],[2.127750,-5.635370],[4.851306,-7.604156],[-4.791032,-1.084950],[9.383629,-5.498992],[1.216105,1.953985],[-8.530893,8.520808],[-8.206368,-7.473758],[-3.171093,-2.164303],[1.622821,-3.715582],[3.777891,-6.856306],[6.051431,-1.502886],[-7.972377,9.338357],[7.611835,8.596128],[-8.142517,-6.386341],[-0.727086,-0.842756],[0.297863,-6.538004],[-2.200072,6.327530],[-2.624246,8.350264],[-2.773875,-1.615424],[-6.000267,-5.248890],[-1.900194,-0.481881],[-1.177743,5.182857],[9.939190,-0.527632],[-5.053310,6.292979],[0.771828,-6.948687],[-6.136787,-4.590249],[2.316932,5.234907],[-7.733183,2.800351],[-1.502992,4.533324],[4.957838,1.239405],[-8.984256,7.088499],[4.345034,9.500999],[9.220949,-1.557465],[-1.791572,-2.679385],[9.005985,7.560784],[6.327665,0.739222],[-2.022085,-9.474585],[9.074116,7.044891],[8.323154,6.587310],[8.326012,-7.166735],[-1.681477,9.141674],[4.299134,6.102302],[6.684107,-5.564740],[9.693001,-6.876222],[-2.442757,8.946900],[3.144022,1.451204],[1.422258,7.871377],[-6.965641,4.492180],[-1.286070,9.047832],[-3.946587,-3.105126],[9.605839,-4.161371],[-6.580579,8.706151],[-1.464664,1.053339],[5.826783,-6.642465],[4.340253,0.023510],[6.030580,-9.115650],[4.124420,1.489308],[-7.299095,-2.367445],[-2.761269,6.947148],[2.578862,7.208028],[1.105764,4.264934],[-1.557060,-9.548468],[8.711048,3.875798],[-8.724947,-7.546757],[1.814348,-0.258065],[-7.069251,9.202177],[1.413746,4.311792],[7.243585,-5.766561],[5.866383,5.120355],[-3.110663,6.684193],[-2.441237,-4.210689],[9.226115,-0.299961],[6.184949,-6.257754],[8.038824,-1.293472],[-6.176795,-4.197841],[5.999739,3.911654],[-5.853784,-0.978603],[-2.976911,3.567805],[-4.715030,0.121888],[-6.285711,-9.929101],[-2.681575,6.845906],[-8.432271,0.931651],[-3.455208,3.263549],[-6.307875,-4.228761],[0.328785,4.418262],[7.752414,-3.669970],[2.948581,0.532621],[-0.048785,4.027649],[-4.637496,-1.576099],[-9.888518,-6.381750],[2.383509,-4.272725],[-9.054177,4.715268],[0.059034,9.729444],[0.144054,-2.658542],[5.721419,-3.076319],[4.275883,1.615796],[4.377940,9.995588],[3.228216,-9.701805],[8.567698,-8.910973],[6.728421,6.993764],[4.239063,8.146902],[8.042978,2.091837],[6.636876,-5.197341],[1.551320,4.533046],[6.995994,-4.219470],[-9.397455,-4.712159],[-6.313477,0.897409],[-0.388603,-0.990559],[7.622102,-8.740078],[-2.511461,2.149069],[5.957351,-6.185216],[9.850267,9.033799],[-7.534690,9.587811],[-2.361009,-5.471990],[7.086532,2.899663],[8.065308,6.179813],[5.017713,7.891309],[4.529300,-9.764344],[-1.864349,7.206685],[-2.846696,-7.757464],[-4.784396,5.069006],[0.309309,5.235586],[3.133801,-7.291149],[9.042709,2.814590],[9.024019,-5.703885],[1.047093,-9.913645],[6.184690,-6.380109],[-5.401334,6.997493],[-0.507733,-7.435367],[-1.831128,-3.566328],[-1.832430,-9.856736],[-2.925234,-0.793395],[-7.415012,-3.645351],[4.210824,6.172691],[-2.166844,-7.462255],[3.044080,-9.859478],[-0.031025,7.570223],[-0.078876,-7.918181],[5.930139,-3.945640],[-4.359789,7.440705],[1.708969,3.799948],[-0.306599,-9.397796],[-9.268688,-8.795823],[-7.237439,6.865693],[2.144414,4.320385],[4.471481,-6.735935],[7.527511,-2.761868],[1.261449,-7.349045],[-0.682521,-0.098761],[2.798889,8.628116],[2.360883,3.266819],[-0.961149,2.559876],[7.173530,-1.259619],[-2.055038,2.634466],[2.098323,-7.105644],[-3.826194,-5.568944],[-9.786273,0.078976],[7.410279,6.740714],[-0.566816,-0.635776],[3.787792,-8.142217],[-9.747190,9.972377],[7.899772,-5.373103],[9.568827,-9.193148],[-0.925860,-9.757863],[2.948780,-2.816796],[-0.166622,1.753944],[-7.692609,-8.729341],[0.903947,-5.068009],[3.119366,7.258773],[0.103297,6.934845],[-6.355818,-5.261223],[-8.700047,2.905372],[-9.546924,-8.185178],[2.935759,-1.791150],[0.800989,6.304450],[4.803386,9.181094],[-8.446064,-5.209540],[-3.561650,-6.363454],[7.967699,8.380914],[1.627472,7.830724],[-6.473494,-8.313882],[1.427688,8.904222],[7.578387,-6.627214],[4.917592,2.203170],[-4.364463,9.528423],[-9.015836,2.078782],[-4.205361,9.470981],[6.080227,7.612070],[4.291038,1.740916],[-1.474527,1.355136],[1.667592,0.175344],[9.739862,-5.900962],[-3.724018,6.150453],[5.450269,-6.134631],[1.794432,0.395648],[-8.396983,9.102579],[4.906565,-9.444916],[2.863599,0.809654],[4.074540,8.691031],[-3.986981,-5.521191],[9.775940,8.121463],[-4.055637,-7.696568],[9.713796,-8.220273],[4.178321,9.355724],[-0.521862,-3.551401],[-7.465602,3.966200],[-4.918475,-8.975395],[-6.871898,9.659886],[-4.192052,7.914450],[-2.256308,5.941494],[4.339195,8.801846],[1.541259,3.247924],[6.203435,0.325715],[-2.177278,5.453546],[-1.869053,4.053879],[1.270250,-7.355859],[4.733376,-1.572269],[-5.297886,0.910888],[-6.016549,-8.758153],[-5.934684,7.326926],[6.616796,8.995489],[8.931851,0.847628],[-0.249299,6.781453],[2.006313,-2.010175],[2.897884,5.322492],[-7.472874,2.801260],[1.898804,-1.347417],[-1.250760,5.887028],[-2.085126,5.893900],[-5.609238,0.467978],[3.991764,-1.365510],[3.573075,0.122975],[4.236713,-4.127084],[1.605499,-8.518100],[5.879432,-6.530251],[5.745383,2.225650],[-3.959757,3.412871],[3.578513,-8.883142],[5.709237,-8.055431],[5.501854,8.969676],[-3.209056,-6.254110],[-7.683279,-5.039805],[0.459863,4.687694],[1.748776,-7.986208],[3.686080,-4.155964],[9.527428,8.626913],[7.232442,3.846904],[4.440599,1.941589],[-2.801958,1.771103],[8.395734,-7.370088],[9.394592,4.105994],[-1.987614,-0.541081],[5.801152,2.294936],[3.450600,-2.572086],[-3.631512,0.619128],[-9.375549,5.568442],[-9.878243,9.417899],[-0.914514,-3.817320],[7.794374,-1.137773],[-4.605425,7.621270],[2.351060,-5.503642],[2.737611,8.297521],[-5.414753,4.327397],[-8.741474,4.277826],[-5.517042,-1.174422],[-2.169032,-7.919044],[-5.124087,0.162253],[6.591144,-6.108704],[3.783322,-8.282391],[1.154934,-8.663610],[-9.598257,1.538720],[-5.257115,-9.780371],[3.768959,-1.584110],[1.444612,-8.518184],[8.082623,-7.575742],[-1.093495,-7.791798],[4.001817,0.827232],[-7.931414,-9.255462],[4.559371,5.106344],[-1.557041,-4.485474],[-8.313756,3.946692],[6.351415,7.450524],[-4.647915,-7.572235],[5.628153,-2.292534],[9.549787,8.096754],[-4.099752,-5.006147],[3.092726,8.276884],[8.052548,-5.771912],[-8.367982,-1.172468],[8.288728,1.378239],[2.315550,-4.878421],[-9.680223,-7.172563],[-2.506323,5.579271],[6.578322,4.028917],[-3.368296,8.167992],[-4.708426,4.220315],[1.683300,1.772168],[-1.470786,-4.140221],[-2.415148,-1.865811],[-4.829273,-4.406197],[-0.675440,9.538493],[4.630401,1.338669],[0.054909,-4.066575],[-4.990083,4.328183],[4.571814,-2.436213],[0.910048,5.621278],[5.374571,-4.513854],[-7.333394,9.182389],[-9.063890,3.576344],[4.449235,4.788324],[8.593266,-0.571370],[-4.102036,8.209623],[-5.128001,7.585236],[5.561849,8.034445],[-5.804629,-3.149979],[-5.587244,2.170352],[-5.706126,5.138152],[9.833546,-9.632722],[-6.650432,-2.302367],[-4.442292,-2.101481],[5.518745,-9.811351],[-4.279684,-5.107404],[1.911380,-3.092418],[-6.429845,2.329913],[-2.984053,-2.261118],[2.670012,-7.166608],[7.773733,-4.308950],[-6.003364,2.671469],[-6.909181,-1.754901],[7.010316,2.602207],[4.426275,8.491406],[-5.752226,-7.521618],[7.705879,-8.680796],[-8.319892,-1.612792],[-4.244113,0.507335],[7.046685,-7.460079],[0.230742,-2.275987],[1.742708,6.841614],[6.128928,-8.412028],[6.955846,-2.968179],[9.327859,-1.160593],[7.911637,-7.188434],[7.840955,9.014643],[-1.071946,5.421903],[-5.491305,-8.358499],[9.856231,0.494165],[-9.447042,-7.203620],[-1.863983,-4.434395],[-2.811186,6.491427],[2.293384,7.413863],[-8.248841,6.725012],[-3.505785,-8.857265],[8.127081,8.889742],[-4.607211,4.863866],[-8.971199,9.504201],[5.235217,5.466767],[-3.810636,2.566614],[-0.956048,-3.852924],[3.553335,6.195079],[-2.328323,1.754377],[-9.038115,5.983712],[2.683460,-8.849614],[-1.492183,-4.857825],[9.985539,3.172679],[2.213460,-5.433578],[4.951847,-7.860226],[-1.895040,3.233218],[9.659763,-7.144776],[7.312799,-6.239179],[6.583635,-6.663392],[-7.692011,9.158438],[-7.825651,4.117933],[4.083980,3.425708],[7.910707,-0.934737],[3.598864,-7.375198],[-0.720552,6.560024],[-8.104244,-7.762847],[-3.561176,-8.894789],[4.417571,-3.847506],[-1.192775,3.957067],[2.498342,8.370360],[-1.955819,0.395903],[4.527591,-9.635168],[-7.339080,0.019973],[-7.413525,-7.127058],[-6.146384,1.150076],[-4.960505,-3.640720],[-9.855057,9.806819],[-7.721928,-9.345556],[-3.219211,0.817339],[3.797705,6.087527],[1.223104,2.272864],[-6.858766,-8.317188],[-9.964777,-5.913377],[0.348538,1.126590],[2.205640,-2.229285],[4.431952,-6.386454],[-2.008749,9.850096],[-0.770258,4.575094],[5.817409,7.299259],[9.571859,4.624971],[1.097724,-6.286845],[-5.074670,-9.853011],[-5.115986,7.100260],[8.634974,3.966235],[1.197968,-0.412661],[9.243449,1.307374],[-9.648243,-0.939343],[-2.242035,6.491142],[-7.499271,1.186574],[1.514409,-3.946150],[-0.281779,-2.476568],[3.485836,2.474858],[-0.789215,-1.122182],[8.329316,5.753935],[-3.209413,5.765953],[6.841322,9.731454],[5.118899,-9.743664],[-2.172394,-7.062957],[-6.608839,9.340123],[1.837284,3.025673],[-3.627205,0.400407],[0.944341,5.495401],[7.984416,7.237205],[3.077853,-7.701871],[7.420682,2.837740],[2.868691,-0.992949],[-5.614607,2.305184],[-6.775573,-3.844336]], dtype = "float32")#candidate|2838|(676, 2)|const|float32
call_2836 = relay.TupleGetItem(func_193_call(relay.reshape(const_2837.astype('float32'), []), relay.reshape(const_2838.astype('float32'), [8, 13, 13]), ), 0)
call_2839 = relay.TupleGetItem(func_197_call(relay.reshape(const_2837.astype('float32'), []), relay.reshape(const_2838.astype('float32'), [8, 13, 13]), ), 0)
output = relay.Tuple([bop_2832,call_2836,const_2837,const_2838,])
output2 = relay.Tuple([bop_2835,call_2839,const_2837,const_2838,])
func_2841 = relay.Function([var_2831,], output)
mod['func_2841'] = func_2841
mod = relay.transform.InferType()(mod)
var_2842 = relay.var("var_2842", dtype = "float32", shape = (13, 10, 7))#candidate|2842|(13, 10, 7)|var|float32
output = func_2841(var_2842)
func_2843 = relay.Function([var_2842], output)
mutated_mod['func_2843'] = func_2843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1719_call = mod.get_global_var('func_1719')
func_1721_call = mutated_mod.get_global_var('func_1721')
call_2895 = relay.TupleGetItem(func_1719_call(), 0)
call_2896 = relay.TupleGetItem(func_1721_call(), 0)
output = relay.Tuple([call_2895,])
output2 = relay.Tuple([call_2896,])
func_2901 = relay.Function([], output)
mod['func_2901'] = func_2901
mod = relay.transform.InferType()(mod)
output = func_2901()
func_2902 = relay.Function([], output)
mutated_mod['func_2902'] = func_2902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2726_call = mutated_mod.get_global_var('func_2726')
call_2924 = relay.TupleGetItem(func_2725_call(), 1)
call_2925 = relay.TupleGetItem(func_2726_call(), 1)
output = relay.Tuple([call_2924,])
output2 = relay.Tuple([call_2925,])
func_2935 = relay.Function([], output)
mod['func_2935'] = func_2935
mod = relay.transform.InferType()(mod)
mutated_mod['func_2935'] = func_2935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2935_call = mutated_mod.get_global_var('func_2935')
call_2936 = func_2935_call()
output = call_2936
func_2937 = relay.Function([], output)
mutated_mod['func_2937'] = func_2937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2687_call = mod.get_global_var('func_2687')
func_2689_call = mutated_mod.get_global_var('func_2689')
call_2951 = relay.TupleGetItem(func_2687_call(), 1)
call_2952 = relay.TupleGetItem(func_2689_call(), 1)
func_1838_call = mod.get_global_var('func_1838')
func_1841_call = mutated_mod.get_global_var('func_1841')
var_2964 = relay.var("var_2964", dtype = "uint16", shape = (300, 1))#candidate|2964|(300, 1)|var|uint16
call_2963 = func_1838_call(relay.reshape(var_2964.astype('uint16'), [15, 10, 2]), relay.reshape(var_2964.astype('uint16'), [15, 10, 2]), )
call_2965 = func_1838_call(relay.reshape(var_2964.astype('uint16'), [15, 10, 2]), relay.reshape(var_2964.astype('uint16'), [15, 10, 2]), )
var_2998 = relay.var("var_2998", dtype = "uint16", shape = (15, 10, 2))#candidate|2998|(15, 10, 2)|var|uint16
bop_2999 = relay.greater_equal(call_2963.astype('bool'), relay.reshape(var_2998.astype('bool'), relay.shape_of(call_2963))) # shape=(15, 10, 2)
bop_3002 = relay.greater_equal(call_2965.astype('bool'), relay.reshape(var_2998.astype('bool'), relay.shape_of(call_2965))) # shape=(15, 10, 2)
output = relay.Tuple([call_2951,var_2964,bop_2999,])
output2 = relay.Tuple([call_2952,var_2964,bop_3002,])
func_3003 = relay.Function([var_2964,var_2998,], output)
mod['func_3003'] = func_3003
mod = relay.transform.InferType()(mod)
var_3004 = relay.var("var_3004", dtype = "uint16", shape = (300, 1))#candidate|3004|(300, 1)|var|uint16
var_3005 = relay.var("var_3005", dtype = "uint16", shape = (15, 10, 2))#candidate|3005|(15, 10, 2)|var|uint16
output = func_3003(var_3004,var_3005,)
func_3006 = relay.Function([var_3004,var_3005,], output)
mutated_mod['func_3006'] = func_3006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2935_call = mod.get_global_var('func_2935')
func_2937_call = mutated_mod.get_global_var('func_2937')
call_3117 = relay.TupleGetItem(func_2935_call(), 0)
call_3118 = relay.TupleGetItem(func_2937_call(), 0)
func_2935_call = mod.get_global_var('func_2935')
func_2937_call = mutated_mod.get_global_var('func_2937')
call_3143 = relay.TupleGetItem(func_2935_call(), 0)
call_3144 = relay.TupleGetItem(func_2937_call(), 0)
output = relay.Tuple([call_3117,call_3143,])
output2 = relay.Tuple([call_3118,call_3144,])
func_3150 = relay.Function([], output)
mod['func_3150'] = func_3150
mod = relay.transform.InferType()(mod)
mutated_mod['func_3150'] = func_3150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3150_call = mutated_mod.get_global_var('func_3150')
call_3151 = func_3150_call()
output = call_3151
func_3152 = relay.Function([], output)
mutated_mod['func_3152'] = func_3152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2477_call = mod.get_global_var('func_2477')
func_2478_call = mutated_mod.get_global_var('func_2478')
call_3176 = relay.TupleGetItem(func_2477_call(), 0)
call_3177 = relay.TupleGetItem(func_2478_call(), 0)
output = call_3176
output2 = call_3177
func_3194 = relay.Function([], output)
mod['func_3194'] = func_3194
mod = relay.transform.InferType()(mod)
output = func_3194()
func_3195 = relay.Function([], output)
mutated_mod['func_3195'] = func_3195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_3207 = relay.TupleGetItem(func_1140_call(), 0)
call_3208 = relay.TupleGetItem(func_1142_call(), 0)
var_3211 = relay.var("var_3211", dtype = "float64", shape = (16, 2, 14))#candidate|3211|(16, 2, 14)|var|float64
bop_3212 = relay.logical_and(call_3207.astype('bool'), relay.reshape(var_3211.astype('bool'), relay.shape_of(call_3207))) # shape=(16, 2, 14)
bop_3215 = relay.logical_and(call_3208.astype('bool'), relay.reshape(var_3211.astype('bool'), relay.shape_of(call_3208))) # shape=(16, 2, 14)
output = relay.Tuple([bop_3212,])
output2 = relay.Tuple([bop_3215,])
func_3220 = relay.Function([var_3211,], output)
mod['func_3220'] = func_3220
mod = relay.transform.InferType()(mod)
mutated_mod['func_3220'] = func_3220
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3221 = relay.var("var_3221", dtype = "float64", shape = (16, 2, 14))#candidate|3221|(16, 2, 14)|var|float64
func_3220_call = mutated_mod.get_global_var('func_3220')
call_3222 = func_3220_call(var_3221)
output = call_3222
func_3223 = relay.Function([var_3221], output)
mutated_mod['func_3223'] = func_3223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3237 = relay.var("var_3237", dtype = "float64", shape = (3, 6, 12))#candidate|3237|(3, 6, 12)|var|float64
uop_3238 = relay.atan(var_3237.astype('float64')) # shape=(3, 6, 12)
uop_3243 = relay.sigmoid(uop_3238.astype('float32')) # shape=(3, 6, 12)
bop_3246 = relay.less_equal(var_3237.astype('bool'), relay.reshape(uop_3238.astype('bool'), relay.shape_of(var_3237))) # shape=(3, 6, 12)
output = relay.Tuple([uop_3243,bop_3246,])
output2 = relay.Tuple([uop_3243,bop_3246,])
func_3259 = relay.Function([var_3237,], output)
mod['func_3259'] = func_3259
mod = relay.transform.InferType()(mod)
mutated_mod['func_3259'] = func_3259
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3260 = relay.var("var_3260", dtype = "float64", shape = (3, 6, 12))#candidate|3260|(3, 6, 12)|var|float64
func_3259_call = mutated_mod.get_global_var('func_3259')
call_3261 = func_3259_call(var_3260)
output = call_3261
func_3262 = relay.Function([var_3260], output)
mutated_mod['func_3262'] = func_3262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3150_call = mod.get_global_var('func_3150')
func_3152_call = mutated_mod.get_global_var('func_3152')
call_3267 = relay.TupleGetItem(func_3150_call(), 0)
call_3268 = relay.TupleGetItem(func_3152_call(), 0)
output = relay.Tuple([call_3267,])
output2 = relay.Tuple([call_3268,])
func_3272 = relay.Function([], output)
mod['func_3272'] = func_3272
mod = relay.transform.InferType()(mod)
output = func_3272()
func_3273 = relay.Function([], output)
mutated_mod['func_3273'] = func_3273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1667_call = mod.get_global_var('func_1667')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_3288 = func_1667_call()
call_3289 = func_1667_call()
func_1700_call = mod.get_global_var('func_1700')
func_1704_call = mutated_mod.get_global_var('func_1704')
const_3300 = relay.const(9.263957, dtype = "float32")#candidate|3300|()|const|float32
var_3301 = relay.var("var_3301", dtype = "bool", shape = (20,))#candidate|3301|(20,)|var|bool
call_3299 = relay.TupleGetItem(func_1700_call(relay.reshape(const_3300.astype('float32'), []), relay.reshape(var_3301.astype('bool'), [5, 4]), ), 4)
call_3302 = relay.TupleGetItem(func_1704_call(relay.reshape(const_3300.astype('float32'), []), relay.reshape(var_3301.astype('bool'), [5, 4]), ), 4)
output = relay.Tuple([call_3288,call_3299,const_3300,var_3301,])
output2 = relay.Tuple([call_3289,call_3302,const_3300,var_3301,])
func_3313 = relay.Function([var_3301,], output)
mod['func_3313'] = func_3313
mod = relay.transform.InferType()(mod)
mutated_mod['func_3313'] = func_3313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3314 = relay.var("var_3314", dtype = "bool", shape = (20,))#candidate|3314|(20,)|var|bool
func_3313_call = mutated_mod.get_global_var('func_3313')
call_3315 = func_3313_call(var_3314)
output = call_3315
func_3316 = relay.Function([var_3314], output)
mutated_mod['func_3316'] = func_3316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3272_call = mod.get_global_var('func_3272')
func_3273_call = mutated_mod.get_global_var('func_3273')
call_3360 = relay.TupleGetItem(func_3272_call(), 0)
call_3361 = relay.TupleGetItem(func_3273_call(), 0)
func_476_call = mod.get_global_var('func_476')
func_479_call = mutated_mod.get_global_var('func_479')
const_3372 = relay.const([False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False], dtype = "bool")#candidate|3372|(140,)|const|bool
const_3373 = relay.const([False,True,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False], dtype = "bool")#candidate|3373|(60,)|const|bool
call_3371 = relay.TupleGetItem(func_476_call(relay.reshape(const_3372.astype('bool'), [140,]), relay.reshape(const_3373.astype('bool'), [3, 20]), ), 2)
call_3374 = relay.TupleGetItem(func_479_call(relay.reshape(const_3372.astype('bool'), [140,]), relay.reshape(const_3373.astype('bool'), [3, 20]), ), 2)
func_755_call = mod.get_global_var('func_755')
func_761_call = mutated_mod.get_global_var('func_761')
const_3382 = relay.const(-6.488757, dtype = "float64")#candidate|3382|()|const|float64
const_3383 = relay.const([[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True]], dtype = "bool")#candidate|3383|(20, 1)|const|bool
var_3384 = relay.var("var_3384", dtype = "float32", shape = (1352,))#candidate|3384|(1352,)|var|float32
call_3381 = relay.TupleGetItem(func_755_call(relay.reshape(const_3382.astype('float64'), []), relay.reshape(call_3360.astype('float64'), [1, 8]), relay.reshape(const_3383.astype('bool'), [20,]), relay.reshape(var_3384.astype('float32'), [1352,]), ), 3)
call_3385 = relay.TupleGetItem(func_761_call(relay.reshape(const_3382.astype('float64'), []), relay.reshape(call_3360.astype('float64'), [1, 8]), relay.reshape(const_3383.astype('bool'), [20,]), relay.reshape(var_3384.astype('float32'), [1352,]), ), 3)
bop_3388 = relay.multiply(const_3373.astype('int8'), const_3383.astype('int8')) # shape=(20, 60)
output = relay.Tuple([call_3360,call_3371,const_3372,call_3381,const_3382,var_3384,bop_3388,])
output2 = relay.Tuple([call_3361,call_3374,const_3372,call_3385,const_3382,var_3384,bop_3388,])
func_3400 = relay.Function([var_3384,], output)
mod['func_3400'] = func_3400
mod = relay.transform.InferType()(mod)
mutated_mod['func_3400'] = func_3400
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3401 = relay.var("var_3401", dtype = "float32", shape = (1352,))#candidate|3401|(1352,)|var|float32
func_3400_call = mutated_mod.get_global_var('func_3400')
call_3402 = func_3400_call(var_3401)
output = call_3402
func_3403 = relay.Function([var_3401], output)
mutated_mod['func_3403'] = func_3403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1854_call = mod.get_global_var('func_1854')
func_1855_call = mutated_mod.get_global_var('func_1855')
call_3415 = func_1854_call()
call_3416 = func_1854_call()
output = call_3415
output2 = call_3416
func_3417 = relay.Function([], output)
mod['func_3417'] = func_3417
mod = relay.transform.InferType()(mod)
mutated_mod['func_3417'] = func_3417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3417_call = mutated_mod.get_global_var('func_3417')
call_3418 = func_3417_call()
output = call_3418
func_3419 = relay.Function([], output)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_3425 = func_3417_call()
call_3426 = func_3417_call()
func_2526_call = mod.get_global_var('func_2526')
func_2528_call = mutated_mod.get_global_var('func_2528')
const_3429 = relay.const([4.017074,-2.848174,-3.927329,-4.885643,6.504553,-3.040127,-9.381501,-9.176698,9.746945,-3.929152,0.912723,8.686329,8.162194,5.979867,-3.111744,1.246878,-5.922941,7.675632,-0.957033,-0.395903,0.365474,-8.733585,7.592024,-3.872060,-9.406223,6.954275,8.473501,1.322801,5.693470,8.998262,3.447952,9.286474,-3.952548,-7.655955,-2.188458,7.036204,3.472217,8.403020,-3.249763,7.811942,6.209205,2.351321,1.338390,4.852694,0.331238,-8.744992,5.068585,-8.442123,0.931588,8.788064,3.713604,5.886344,-6.291301,3.084412,2.598116,-3.399105,9.443307,8.275700,-2.336127,0.611018,-2.576391,-3.023265,7.251132,0.415655,4.858546,-5.363441,7.222341,0.639131,2.566943,7.161901,7.448952,2.480752,8.434081,-9.565330,8.496653,1.159717,8.050047,1.443244,-6.481335,7.577030,2.426300,-3.185079,-5.204135,4.886619,-9.185217,-0.578868,-6.813814,-4.587120,-4.453171,3.646792,5.740638,4.744248,-7.629410,2.135869,-8.749038,-6.385142,4.437009,-3.076170,-2.255749,2.079920,-0.768876,-0.724926,8.043316,-8.868580,9.208358,0.119222,-1.459763,-1.600269,8.228839,8.124480,-2.338626,-5.606233,-1.239330,6.302573,-1.912907,1.866764,-3.783402,3.840780,4.139158,-2.692752,0.117699,2.249588,-8.341597,-9.859546,5.071406,5.080383,5.224231,0.954309,1.826279,-1.358978,1.852972,-5.786020,6.188792,0.939834,-0.503656,-1.827953,5.776486,7.301060,3.198146,-9.987176,-3.416645,-2.871819,2.539695,5.651824,6.183276,-2.323501,-1.597770,-8.580406,-9.669148,-9.048608,5.381719,-2.215441,-3.706833,9.263933,7.811522,-7.496954,4.833338,8.763900,8.297619,3.446145,-4.317856,5.873874,7.177412,-4.726248,-9.515077,-7.400203,5.161423,-5.896764,-1.587420,1.258300,6.128908,9.401678,7.309283,1.174332,-8.448538,4.935780,-7.785692,8.149055,-9.207720,0.278899,-9.141829,1.399356,-6.233114,8.385235,6.516164,-1.382530,-3.183373,6.749582,-3.961016,-0.891217,-2.461611,3.602607,3.653132,-4.715969,8.390893,-1.314911,9.283758,3.848898,6.768809,-5.540211,-2.193515,-8.169958,6.234028,-5.725740,-2.637857,-7.277261,-5.048069,-4.274116,-3.052126,8.414753,-5.279431,5.733482,3.897739,-9.019971,9.232499,0.210364,5.035936,-8.180380,-2.770256,8.404508,-7.464066,1.184988,5.782810,-2.178192,-0.120750,2.914658,8.177483,-4.239177,-5.522773,2.581362,4.599511,3.111200,-5.716727,9.564695,-6.192145,-0.032847,-3.710191,8.554368,2.844426,4.127344,2.317626,-8.272290,5.116302,-9.022722,6.546620,5.242728,-1.952893,-1.515060,1.441843,4.385354,-3.504677,-5.297051,2.598619,-4.906703,3.864233,-8.839698,3.504937,5.966508,5.407297,-2.711997,7.073713,-9.859907,-8.831837,8.322740,-0.896167,5.381025,-5.979085,-8.970846,7.461190,-4.972280,-8.875766,5.096685,8.062077,4.534923,-3.539802,-5.976395,1.332380,-2.485476,5.859910,4.442211,-3.481044,-1.236974,-5.860915,1.786166,1.482934,-0.934546,-5.374509,8.084930,-7.752892,3.355124,-9.864290,6.499910,-0.790478,7.176289,1.464826,4.566110,0.275857,-4.395879,-4.898420,0.987829,3.795534,-9.343584,-8.670494,1.224766,-9.904770,7.804792,-1.089254,-2.931724,-8.593389,-0.457855,2.891837,-2.060940,4.278727,-6.505747,-1.395645,-6.329502,-5.450751,5.227486,-1.039480,0.377480,0.146605,-6.760356,9.574035,-5.702237,-6.341082,3.823066,7.849642,4.914826,-7.107407,-9.050382,9.750014,-2.815148,9.295930,-5.205260,9.981255,-1.717877,1.036477,-2.242374,-0.544149,-6.919485,-5.044964,-0.159825,7.791046,-3.316015,9.047260,-5.358492,6.423758,-7.320139,4.763210,7.846459,2.633272,1.673148,-8.351000,6.966270,5.508513,6.170965,-0.743199,8.931854,8.241167,2.298537,-3.709267,-0.536340,1.213204,4.186030,8.191886,1.274297,-1.981677,2.687034,-0.183809,0.071452,3.093487,0.199548,-9.691148,5.329211,1.989200,4.411556,3.920746,6.709732,-2.263293,3.198901,4.335197,-0.701256,1.911668,-7.668432,0.254862,9.523102,2.876940,-1.753864,9.318346,6.883534,-5.314056,5.532218,-6.808457,-5.343827,3.614272,1.619058,-9.389014,-5.943063,9.177490,-6.679722,3.725499,2.342718,-0.501807,-9.853084,-3.695630,-6.379360,-2.455815,-7.390336,8.129315,-0.690895,-1.079048,1.035477,2.421262,-4.735773,9.413925,4.922159,1.449388,1.666022,-0.721325,0.345767,0.894069,-9.747514,5.171701,6.114188,7.255411,5.144829,0.429446,3.220540,5.536999,5.446020,-2.899716,3.213329,-4.205636,4.082599,-3.840527,4.909475,6.828193,-9.906315,-6.088362,7.443862,3.696388,6.320793,0.898516,2.470763,-8.643983,8.142901,-7.997122,-7.847274,8.180133,7.510216,6.479413,-8.600066,-3.487302,9.163030,-0.736865,5.088838,-1.571522,-5.578609,5.998964,-0.913936,-4.271442,-3.047554,-5.338383,5.921390,-8.404232,8.687511,9.665192,-5.691243,-7.664032,-2.148069,-2.934144,-9.374869,-0.930601,9.327577,4.535804,-9.178143,6.165840,-3.314956,8.942630,-1.680596,-1.526418,4.244998,0.272933,-6.330618,-6.762630,-7.257883,-6.084292,6.022291,2.061610,-4.698129,-5.333040,-3.640626,8.214217,4.359957,7.538532,-3.169802,6.807686,0.015682,-8.911867,1.491012,7.532942,0.523275,-3.955763,-9.762699,3.364741,-9.051045,1.079838,-1.714438,5.891961,-0.457885,4.522119,2.837161,-9.170180,6.639298,-3.602475,8.899551,-0.046889,6.619999,6.457783,-9.223287,-1.555012,-1.216485,7.254844,-5.495870,-9.782225,3.148089,3.582127,6.746290,-3.680981,-0.671948,5.832071,-8.866469,0.699846,-3.395716,4.553740,5.152170,-0.604701,-9.308282,-7.834864,-8.233931,9.311860,-0.960473,-5.354060,-8.771933,-1.520276,2.173008,6.699979,7.455414,4.258264,4.646640,-3.973833,-3.368536,0.246574,1.714975,0.616666,-5.268026,6.539075,-2.650615,-2.563973,-4.562302,9.916149,-9.083983,6.321909,0.992118,-7.865814,-8.412897,-1.836662,6.776658,2.201564,0.224656,-2.340882,1.628243,7.173541,-2.588870,-9.654847,-2.501830,-6.335854,-9.719098,9.800633,7.146213,4.283612,-8.497456,-2.517779,2.487474,-9.694266,4.562083,-9.590546,7.054552,-5.970400,-5.708360,-5.688979,-5.810224,3.533673,0.158055,7.299068,-2.558732,-1.515013,-8.102167,-9.530880,-4.735845,-1.221574,-0.198632,-9.609466,-4.312520,8.539718,1.100264,-6.507673,-3.409059,6.895304,-0.001865,-7.983946,1.863927,8.781379,-1.382611,7.558535,1.510975,-1.374296,-6.878495,8.518409,6.803196,9.228012,-4.281153,-1.061658,-0.624891,-6.014963,-4.748420,9.349841,2.491210,6.935816,4.477787,-0.541850,8.094397,-9.956399,6.251622,-0.697704,-5.576572,-1.247681,8.078720,6.651818,-2.818331,-0.230223,2.646757,-6.789892,9.065118,-4.037824,-7.833619,0.446009,7.007918,1.499280,7.597575,5.380452,-6.404223,-9.560491,-9.397483,6.422244,-2.173781,-8.740572,8.191423,-7.773777,-6.081255,5.595595,-3.115827,-1.694114,-6.200712,-9.264167,-1.923042,8.154685,5.420556,-9.689933,-8.124857,-9.214814,-3.419463,-1.213977,3.273520,-5.961019,6.285708,-6.869404,-7.487805,2.409659,7.379921,-7.290087,4.481654,-2.932425,0.596271,-7.866286,-8.883407,-1.060768,6.653604,-5.834150,-2.223622,6.727217,0.870236,7.049420,-5.152566,-8.617430,-4.098740,1.290726,7.191984,4.841232,7.858178,-0.105384,-0.498616,-5.821801,3.368654,4.276685,2.675667,6.683457,-7.613766,-4.891809,8.614259,-3.662960,5.164262,1.138765,0.885198,1.797846,-9.094340,-2.532254,9.095517,0.705182,-3.440744,-1.239340,1.678805,-2.633082,-0.976458,-3.366841,5.757511,5.273636,2.028085,0.822742,9.758356,0.976692,-5.369822,9.965047,-6.117984,-7.120723,3.548552,-7.687921,-2.167751,-4.527478,3.898287,-7.679897,-2.361714,3.674737,-7.917812,-9.258469,6.548476,-9.463267,-7.188886,4.075191,-1.119352,6.164426,-0.796303,-0.908310,-1.024523,7.339794,7.016841,-8.302261,-8.982582,3.384527,1.843933,-0.269092,4.429708,-2.955230,-2.371683,-1.136144,-9.362265,-8.213137,0.962953,5.988655,-4.659778,1.587420,8.742005,0.814274,2.748106,-2.968488,-1.154302,-7.196759,0.746329,8.994894,-8.304512,-6.878697,4.053543,-8.644684,9.551375,-3.093392,-2.684274,-7.026215,-2.055427,6.398397,-4.273202,-7.074784,8.439098,6.910063,9.275188,-4.148934,-3.590271,-9.054211,-0.724522,4.287658,9.058980,7.683779,6.744850,4.676310,9.442000,-8.536113,-7.954146,-3.455531,2.911908,6.083184,0.585678], dtype = "float64")#candidate|3429|(810,)|const|float64
call_3428 = relay.TupleGetItem(func_2526_call(relay.reshape(const_3429.astype('float64'), [9, 15, 6])), 0)
call_3430 = relay.TupleGetItem(func_2528_call(relay.reshape(const_3429.astype('float64'), [9, 15, 6])), 0)
output = relay.Tuple([call_3425,call_3428,const_3429,])
output2 = relay.Tuple([call_3426,call_3430,const_3429,])
func_3436 = relay.Function([], output)
mod['func_3436'] = func_3436
mod = relay.transform.InferType()(mod)
mutated_mod['func_3436'] = func_3436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3436_call = mutated_mod.get_global_var('func_3436')
call_3437 = func_3436_call()
output = call_3437
func_3438 = relay.Function([], output)
mutated_mod['func_3438'] = func_3438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2726_call = mutated_mod.get_global_var('func_2726')
call_3473 = relay.TupleGetItem(func_2725_call(), 3)
call_3474 = relay.TupleGetItem(func_2726_call(), 3)
func_2935_call = mod.get_global_var('func_2935')
func_2937_call = mutated_mod.get_global_var('func_2937')
call_3492 = relay.TupleGetItem(func_2935_call(), 0)
call_3493 = relay.TupleGetItem(func_2937_call(), 0)
output = relay.Tuple([call_3473,call_3492,])
output2 = relay.Tuple([call_3474,call_3493,])
func_3496 = relay.Function([], output)
mod['func_3496'] = func_3496
mod = relay.transform.InferType()(mod)
output = func_3496()
func_3497 = relay.Function([], output)
mutated_mod['func_3497'] = func_3497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2386_call = mod.get_global_var('func_2386')
func_2388_call = mutated_mod.get_global_var('func_2388')
call_3507 = relay.TupleGetItem(func_2386_call(), 0)
call_3508 = relay.TupleGetItem(func_2388_call(), 0)
var_3521 = relay.var("var_3521", dtype = "float32", shape = (13, 10, 7))#candidate|3521|(13, 10, 7)|var|float32
bop_3522 = relay.bitwise_xor(call_3507.astype('int64'), relay.reshape(var_3521.astype('int64'), relay.shape_of(call_3507))) # shape=(13, 10, 7)
bop_3525 = relay.bitwise_xor(call_3508.astype('int64'), relay.reshape(var_3521.astype('int64'), relay.shape_of(call_3508))) # shape=(13, 10, 7)
uop_3528 = relay.asin(var_3521.astype('float32')) # shape=(13, 10, 7)
bop_3530 = relay.mod(uop_3528.astype('float32'), relay.reshape(call_3507.astype('float32'), relay.shape_of(uop_3528))) # shape=(13, 10, 7)
bop_3533 = relay.mod(uop_3528.astype('float32'), relay.reshape(call_3508.astype('float32'), relay.shape_of(uop_3528))) # shape=(13, 10, 7)
output = relay.Tuple([bop_3522,bop_3530,])
output2 = relay.Tuple([bop_3525,bop_3533,])
func_3537 = relay.Function([var_3521,], output)
mod['func_3537'] = func_3537
mod = relay.transform.InferType()(mod)
var_3538 = relay.var("var_3538", dtype = "float32", shape = (13, 10, 7))#candidate|3538|(13, 10, 7)|var|float32
output = func_3537(var_3538)
func_3539 = relay.Function([var_3538], output)
mutated_mod['func_3539'] = func_3539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_877_call = mod.get_global_var('func_877')
func_879_call = mutated_mod.get_global_var('func_879')
call_3563 = func_877_call()
call_3564 = func_877_call()
output = call_3563
output2 = call_3564
func_3565 = relay.Function([], output)
mod['func_3565'] = func_3565
mod = relay.transform.InferType()(mod)
mutated_mod['func_3565'] = func_3565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3565_call = mutated_mod.get_global_var('func_3565')
call_3566 = func_3565_call()
output = call_3566
func_3567 = relay.Function([], output)
mutated_mod['func_3567'] = func_3567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2780_call = mod.get_global_var('func_2780')
func_2781_call = mutated_mod.get_global_var('func_2781')
call_3643 = relay.TupleGetItem(func_2780_call(), 0)
call_3644 = relay.TupleGetItem(func_2781_call(), 0)
output = call_3643
output2 = call_3644
func_3654 = relay.Function([], output)
mod['func_3654'] = func_3654
mod = relay.transform.InferType()(mod)
mutated_mod['func_3654'] = func_3654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3654_call = mutated_mod.get_global_var('func_3654')
call_3655 = func_3654_call()
output = call_3655
func_3656 = relay.Function([], output)
mutated_mod['func_3656'] = func_3656
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3660 = relay.const(7.101659, dtype = "float64")#candidate|3660|()|const|float64
var_3661 = relay.var("var_3661", dtype = "float64", shape = (8, 12, 14))#candidate|3661|(8, 12, 14)|var|float64
bop_3662 = relay.floor_mod(const_3660.astype('float64'), var_3661.astype('float64')) # shape=(8, 12, 14)
output = bop_3662
output2 = bop_3662
func_3672 = relay.Function([var_3661,], output)
mod['func_3672'] = func_3672
mod = relay.transform.InferType()(mod)
var_3673 = relay.var("var_3673", dtype = "float64", shape = (8, 12, 14))#candidate|3673|(8, 12, 14)|var|float64
output = func_3672(var_3673)
func_3674 = relay.Function([var_3673], output)
mutated_mod['func_3674'] = func_3674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_3710 = func_3417_call()
call_3711 = func_3417_call()
var_3720 = relay.var("var_3720", dtype = "float32", shape = (13, 10, 7))#candidate|3720|(13, 10, 7)|var|float32
bop_3721 = relay.logical_xor(call_3710.astype('int8'), relay.reshape(var_3720.astype('int8'), relay.shape_of(call_3710))) # shape=(13, 10, 7)
bop_3724 = relay.logical_xor(call_3711.astype('int8'), relay.reshape(var_3720.astype('int8'), relay.shape_of(call_3711))) # shape=(13, 10, 7)
func_2185_call = mod.get_global_var('func_2185')
func_2188_call = mutated_mod.get_global_var('func_2188')
const_3729 = relay.const([-9.110568,5.494368,5.745376,5.193518,-0.943789,-0.397522,-5.084055,-5.003400,-5.708310,-8.176591,0.991123,-1.807865,6.279183,-0.309052,-9.466017,-2.152639,-5.546688,1.609578,6.700589,1.444439,-4.545963,6.842229,1.336956,6.582649,4.945977,-6.685951,-4.663130,-9.277763,3.943430,-8.136972,8.359551,4.016083,1.429186,-2.710163,2.064463,-1.710731,9.762320,5.799607,3.250493,-3.240230,-8.688105,-9.552537,5.810134,-7.321126,9.249674,-2.594919,1.741902,-6.128470,-2.918344,8.843125,-5.221175,-8.418199,2.096272,-3.906261,-8.743850,-7.851361,4.548089,9.092571,4.840136,-4.336752,7.116787,8.626429,-1.267376,8.873496,-7.709323,-4.076855,-0.375413,-2.398913,-9.857725,5.488523,4.894245,1.748778,-4.285575,4.005341,8.984413,-0.717467,3.545538,0.038663,9.922055,-0.257621,-7.948366,-6.922233,2.534148,-9.968208,2.146475,6.009964,9.768889,3.190771,1.365461,1.290493,-1.953295,1.299684,-4.936435,9.608137,8.646815,9.271837,3.341888,6.733130,2.312140,-3.419895,5.277005,0.545848,1.728385,-2.860465,-0.290446,0.004296,2.701164,-5.453816,0.686375,6.027477,0.746795,-2.230107,-3.611568,-4.449768,-5.326910,-1.503174,-7.919191,-2.095342,-2.156854,-0.729275,9.161473,-1.857349,2.858826,-3.872667,-0.957024,7.226980,-5.042264,-5.688193,5.986247,-1.568328,-7.358850,2.321701,2.983565,-1.729478,-4.924203,-2.203804,-0.016179,-8.675122,6.093107,-1.299297,-9.953863,3.408038,-4.310026,9.380563,-7.136167,4.452175,-4.336255,4.921810,-7.680830,-9.034022,2.139249,-9.168225,2.651856,0.590890,9.743013,-6.996136,9.880129,3.747013,-7.373772,-9.525466,-0.383337,3.487221,-5.479939,-7.385212,-0.418696,-1.685456,5.374771,3.046395,1.310447,6.129883,-5.163128,6.487466,-8.794149,3.120894,6.444832,8.878169,0.012970,9.902636,-3.841858,9.380302,-7.011813,-5.208205,-5.634745,-0.072029,-4.876071,8.261220,0.310914,-7.890170,7.566932,-8.767048,0.010948,-9.970669,-7.039518,8.492590,-4.160971,2.912371,-0.264893,-1.174622,3.994938,-4.295306,9.867360,0.691933,-1.720971,-9.954086,7.437252,1.908841,-7.049121,-5.736160,9.724872,0.227626,-4.590060,-1.628739,-6.347237,0.050244,0.990819,9.085299,8.964688,2.968104,1.998936,9.585529,5.738436,6.977164,6.023121,-7.730386,6.066423,-9.486295,9.542344,-7.620330,5.701385,5.177543,-8.391449,2.917005,5.503233,0.724281,-1.462820,-4.213130,9.446581,-7.733466,8.452473,1.018960,-4.117996,-5.831759,-9.980167,-2.430901,-4.351890,-0.418244,-9.677655,0.657062,1.381533,-9.374051,9.830539,3.064906,7.469845,1.961812,-7.024035,8.014975,-8.463405,-9.506452,9.318401,6.345282,0.012229,-4.185711,0.756544,7.626121,-3.223217,8.151631,-5.944356,7.299255,-2.527559,-1.116784,2.680688,4.555143,6.165925,8.841450,-6.500552,2.421548,-7.152387,-8.519146,0.992610,-2.611237,0.418353,9.332222,-7.483852,7.640236,-7.263865,-2.146464,-8.002402,8.055773,2.323925,-6.922651,3.323358,2.507838,2.572353,-4.997200,-3.540076,-2.136471,-0.205470,1.262858,-5.655278,7.003020,1.518579,2.293296,4.029415,9.047980,8.533208,5.512863,7.922534,-3.150564,-1.576504,8.804517,-4.108139,-5.834884,-6.372695,5.537552,9.420907,0.056540,-1.561598,-7.749068,1.099288,5.062074,8.312053,-3.776305,8.493137,2.468945,0.764651,-7.698190,-8.194080,-0.705993,0.252416,-1.832749,-8.161776,8.357962,-2.441685,-1.843128,1.784151,-3.527878,-4.005371,-1.874116,0.782570,4.634217,-6.068212,-6.931610,0.283047,6.602488,8.091774,7.308476,5.133464,-9.132956,-3.524660,-3.150586,-7.020135,-3.418932,5.379291,0.957614,-2.548731,2.956585,-4.265385,9.372589,-4.179838,-0.193194,-8.273174,2.304785,-6.954052,4.552837,-3.820988,3.625466,-7.343679,-1.507100,-2.020644,6.987127,-3.425405,5.168898,-5.012266,-6.747260,-6.852882,-0.012813,-2.069188,-1.395013,-7.360141,3.123827,4.723932,3.546303,-1.728256,9.209667,3.405752,5.653986,2.708355,2.416128,-7.096952,-9.007096,-0.465758,7.224879,-9.004989,-1.685406,-5.281564,-1.260293,-8.706840,7.394684,0.086328,6.505313,0.920046,-6.762971,5.944924,2.927865,-5.006117,-4.395989,-0.016310,1.678737,-8.454054,1.412303,-7.864407,-4.542869,-2.188285,0.146219,7.813103,-8.457915,-3.899667,2.856648,-3.052684,1.018722,1.951340,-5.390307,1.372484,-1.155857,8.386066,-9.274258,2.375165,-8.360835,1.363957,1.242659,-9.375844,6.628523,1.108507,-8.960861,4.073138,-9.568453,-5.843073,5.577430,-8.617795,8.147261,7.649728,0.227287,-2.992298,-8.267505,-0.760124,-1.098561,-2.847278,4.555607,5.234836,0.598566,2.480475,9.789701,-6.285918,4.177264,-5.705622,-5.060562,4.973848,9.713658,0.709979,1.000837,5.715955,-6.458287,5.925802,8.395965,-2.568781,-4.140663,-4.880790,3.954523,-3.257989,-5.705079,1.378823,-5.706606,-8.835838,-1.829959,-7.871455,1.102883,-6.715839,2.577145,0.272916,-7.007244,9.488761,6.232020,-7.070745,4.919455,-5.286691,2.803721,-6.026353,-6.640785,9.648612,0.290222,-6.624204,-9.825037,-1.497895,-5.862909,-5.237472,6.908296,9.233150,-7.537690,9.954172,-8.122204,5.674943,8.861328,-9.224928,-0.249561,2.534778,1.578172,8.863905,-7.856272,3.723987,0.910991,6.191427,9.117829,-8.153677,-3.725035,6.093893,9.457590,-0.685569,1.281106,-1.167514,4.000013,8.157954,4.785263,-9.618104,-7.577684,-8.591280,0.895569,0.436473,4.344621,-0.775304,3.296304,-4.917151,-4.119297,-9.707397,7.035366,-2.103165,-5.256485,8.031801,-9.886228,7.576148,2.604932,-3.700004,2.034109,-4.185484,3.712064,-7.429830,-6.907755,1.494863,5.920431,-1.935275,-8.918343,2.518087,-2.646167,-1.787992,-7.882599,-7.733121,-2.140195,2.373653,-3.822866,-7.470716,-7.164800,-0.427940,3.205110,-1.930169,6.656540,-8.122482,9.017126,-2.489439,-5.176765,-6.556177,-2.515347,1.227385,5.722931,-8.602008,-2.632657,-9.850270,5.823019,4.266032,-5.859102,-4.257919,1.436244,-7.814684,-5.679256,-8.466526,0.627758,-0.428128,0.379114,-6.701658,-9.906199,-6.488246,6.479820,5.044126,-5.515007,-5.571729,-3.346467,-0.586633,6.809462,-2.508697,-2.225295,-7.828437,0.954804,7.845672,-6.254422,-4.112867,1.940960,9.303126,5.740204,0.519915,-8.690415,-5.073484,-9.978352,-4.670620,8.496294,-7.069895,9.137905,-0.901797,8.058842,-6.112475,4.995574,-4.867943,2.895553,-1.617266,-1.454973,-1.399444,3.504272,-8.304187,-3.758927,5.429852,5.824236,7.498058,-9.093485,-8.872773,0.248384,-7.452141,8.321707,6.818629,-0.560256,0.742297,-4.644935,6.389567,-2.766316,1.958776,-4.286635,3.696253,-8.002913,8.561465,-9.562377,-2.890088,-5.937177,-9.653485,8.699301,-3.160546,2.212543,2.472486,-9.582088,3.219046,-5.147633,9.977734,0.508468,-5.203465,8.254494,8.438287,1.447039,1.428276,-9.205675,8.146380,-6.281970,2.748604,8.394155,5.110853,-6.393407,8.928564,8.641149,1.398356,0.127910,6.520008,3.969802,-0.906815,-7.570660,-4.516477,7.472114,5.263398,-3.506185,-6.286603,0.394349,1.812811,-1.412968,-9.982423,8.697215,9.351844,4.616675,8.456107,8.034823,-8.373721,6.887130,-2.653196,-1.489685,-4.099133,-4.438024,2.891892,-8.520309,0.627343,3.112757,7.472858,-5.576065,1.139107,3.849047,-7.870119,-2.825035,-2.156109,-3.603691,-1.604100,-6.575626,9.177754,7.531358,-6.107765,1.705186,4.279412,2.814380,2.136067,5.016247,-8.064029,7.346587,2.675069,9.173901,0.487289,-3.187644,-4.745224,1.380450,1.651218,-8.669369,-6.270805,-6.941646,-6.032415,-0.811519,7.473856,-3.639402,-2.992855,-6.858635,1.116125,-2.167432,0.483108,4.523133,8.444312,6.452807,5.851397,4.156493,8.436063,9.733176,4.833491,3.632500,1.545267,-8.293231,0.031798,7.634248,-2.154853,-1.755740,-7.914208,-3.972738,-0.898474,1.068206,8.630311,8.584984,-1.657845,5.168257,3.503800,-4.135327,-6.923673,-4.357845,5.937170,3.433633,3.969327,-3.715223,3.304759,-9.913364,-9.809896,8.781049,-7.843021,8.932429,-1.329082,-4.869126,0.536455,-0.217549,-6.466780,-7.712121,0.480912,6.825021,2.787115,-0.412129,-5.814867,-4.683470,-1.137306,8.905730,-8.888378,2.534506,5.509019,-2.235955,-5.691290,-8.322664,-8.282072,1.882551,-2.802904,-1.341036,-4.433887,-0.774516,3.485185,8.500662,8.345426,-7.749278,8.645188,-6.556732,-2.921354,-7.267707,6.440083,9.526131,2.969850,1.380862,0.954397,8.184802,6.321589,7.669267,-4.706966,-1.104296,3.715651,6.324518,0.271211,8.587639,5.162656,-4.478215,-4.778118,-5.810544,-9.774470,-2.165068,9.607322,0.297443,0.305577,-4.890089,-1.463350,7.868242,6.659949,-2.566196,-8.380026,-2.018238,1.253265,8.131638,-8.378595,9.524417,1.904892,6.846117,5.925217,3.333664,0.603441,-7.706596,9.970892,6.434087,6.679601,4.277823,5.081603,9.496106,-5.532945,-2.662047,-4.099113,-2.697421,6.063696,-7.561528,-3.193126,-7.527712,1.467364,6.828011,-3.086286,-6.225283,0.159926,-8.162650,9.753680,2.140644,-0.366905,6.499428,-2.031561,-4.286073,0.864221,-9.139322,6.833187,8.464027,-1.038719,3.386855,6.416172,-6.463787,8.161112,7.781153,-6.918294,-9.692415,-3.511115,8.451523,4.323117,6.653522,-4.199685,5.591934,-5.953572,8.506594,4.447473,3.333213,-7.681272,8.912779,-8.606954,-2.537056,-5.962437,0.337438,-3.536198,2.113329,1.804819,-2.051353,-6.436817,3.421254,-7.018804,7.667338,0.522625,-6.885755,-0.142874,0.621447,-8.305322,9.588717,-4.594577,-6.948842,8.823742,8.010356,-2.122251,2.663549,4.207137,7.895029,0.920704,1.916711,0.338198,-0.857837,-1.077577,4.365070,8.757008,9.346775,6.356938,2.866226,3.699320,0.873391,-3.959281,-8.558534,2.915105,-3.640106,6.693127,6.427147,8.939128,-8.815061,5.640159,5.695625,5.841723,6.087951,-0.539530,1.372775,7.177500,9.382962,4.180181,3.609918,5.976418,7.899199,2.889854,7.445677,-6.015873,-9.049622,9.573194,7.777506,-5.408801,-7.612559,9.122675,-8.690046,-7.953250,-7.677175,-9.189748,4.543792,1.415599,-3.994314,0.554449,-8.387390,7.065926,-2.280008,-0.403834,4.098276,-0.750877,5.749483,-4.055392,-8.155863,9.497460,-0.969876,-0.071774,6.188995,1.397704,-6.262941,8.889139,-5.414077,-1.759046,-2.849322,-5.204323,0.478711,5.871370,-1.826251,3.801798,-4.458341,-7.543373,-6.582573,-2.846884,-6.026507,4.930344,1.860667,8.788391,6.283929,-9.167601,-2.976564,-4.929578,2.589090,-7.615520,5.175160,-4.655989,-0.441340,-3.237630,1.418223,-7.424482,-6.784076,-3.503489,0.216101,-3.039019,7.054340,-0.727780,4.838661,-2.507296,-4.128730,2.406993,-5.254260,2.119948,-4.561575,9.363835,1.708849,7.138489,2.000086,7.884124,-1.513603,2.748785,-3.563143,2.254979,-5.653892,-3.957503,7.565894,-0.817940,4.144911,-4.123437,-3.504077,5.207235,-5.027381,5.840655,-3.217631,-2.759939,-1.574177,1.070582,1.821556,9.738021,-7.581094,-6.444749,2.504219,8.506880,-1.089178,-5.885905,4.972841,-0.830996,-9.438415,9.349796,-0.418748,6.416793,1.694335,2.475530,-1.161942,6.287725,-9.991470,-2.671695,-5.066741,-8.136514,0.056891,7.243267,-7.996151,-6.417550,-3.937251,-8.690672,6.394589,0.103884,-4.622652,3.594811,6.536963,1.333197,-6.641978,7.167114,9.629919,-5.929655,-4.498864,8.187101,0.671160,-1.590070,0.099160,4.748859,-2.356820,6.192926,9.601723,8.901366,7.493449,9.089582,-9.036782,8.448691,-0.547937,5.037452,8.704811,-9.240696,-8.108223,-0.565753,6.234755,6.265000,5.338374,-6.296330,6.455588,0.914822,-7.630170,6.593561,-0.495171,-8.894769,-5.795756,1.478999,-8.282306,-3.165710,-2.908601,-9.781340,-0.151644,-5.707308,-6.317562,7.833177,-7.128227,1.260367,0.104873,-5.436362,9.184267,-9.418945,-4.669413,9.455230,6.448621,6.691472,4.248650,1.757142,0.555966,0.085417,-8.735610,-5.180785,2.133593,5.261496,-0.589812,-4.067974,-6.563835,7.456126,1.019154,9.161988,-8.116225,-8.055110,-7.642752,-9.823884,0.191709,-0.501570,-5.182942,3.320530,-9.577534,-7.228285,-9.532593,-3.151917,7.107112,9.346779,-4.557091,-4.033420,6.715936,-8.537503,-8.843928,-2.433506,-6.655731,-6.070521,7.005831,4.036374,-6.344213,-4.146695,-3.585980,-6.297432,-8.780022,-4.846429,-1.045389,7.502465,-1.642529,-0.008131,-9.265971,-3.252909,9.474742,2.280993,-9.489407,-2.781421,-3.222489,3.178142,9.569185,6.129860,2.585836,-3.002552,-4.445456,-6.942008,-5.653949,4.265066,2.351986,8.469195,-7.910241,1.344822,7.284032,-3.334472,-7.798472,4.436935,4.777977,2.808675,-9.700307,-5.704732,8.729653,4.439962,3.539843,7.883535,1.395987,1.537796,4.536874,-2.311896,-4.877229,1.114329,8.863710,-3.284734,0.705370,8.916860,-7.583500,-4.615645,-4.740316,8.937066,-3.491476,-9.841378,5.946593,-7.898430,-7.492838,-3.633005,5.295289,0.302690,-0.671591,4.533592,9.306196,1.790631,-6.668946,-3.505820,-3.673386,5.390756,-2.662860,-6.332339,7.518533,-6.505395,7.326656,6.799015,-1.255125,5.595259,-4.305489,-2.225059,-5.154478,0.723396,6.274620,7.598617,7.021884,9.902241,7.691521,-7.025060,-5.084461,-8.287038,1.696597,-9.501646,1.815297,-4.450362,-3.888772,0.137246,-0.113037,0.748434,-0.678527,5.152008,8.152638,5.047672,-9.166219,-0.736627,2.471439,1.519888,-7.525607,-4.690274,3.473351,4.302200,-9.645397,-3.623760,-8.978504,-9.208262,2.987939,-9.216992,-6.950703,4.360279,5.646512,5.481233,-7.391284,9.361914,-1.826827,-6.986331,-0.949876,8.673986,9.210089,-6.754167,-0.806176,-6.867777,-4.675835,-5.245325,8.937746,-1.539731,5.674492,9.329081,-3.374497,-3.406627,-9.542193,-6.611109,9.338416,0.470614,-7.602489,-2.630466,8.920416,-8.200496,8.199596,-8.385917,-9.935483,-2.929066,7.064115,0.725399,-2.404647,-6.740557,2.460836,-5.655193,5.291331,3.968246,8.188467,-9.421987,-7.952599,-8.196362,7.754247,-0.974352,8.716951,-3.856748,-1.302408], dtype = "float32")#candidate|3729|(1352,)|const|float32
call_3728 = relay.TupleGetItem(func_2185_call(relay.reshape(const_3729.astype('float32'), [1352,])), 4)
call_3730 = relay.TupleGetItem(func_2188_call(relay.reshape(const_3729.astype('float32'), [1352,])), 4)
output = relay.Tuple([bop_3721,call_3728,const_3729,])
output2 = relay.Tuple([bop_3724,call_3730,const_3729,])
func_3731 = relay.Function([var_3720,], output)
mod['func_3731'] = func_3731
mod = relay.transform.InferType()(mod)
mutated_mod['func_3731'] = func_3731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3732 = relay.var("var_3732", dtype = "float32", shape = (13, 10, 7))#candidate|3732|(13, 10, 7)|var|float32
func_3731_call = mutated_mod.get_global_var('func_3731')
call_3733 = func_3731_call(var_3732)
output = call_3733
func_3734 = relay.Function([var_3732], output)
mutated_mod['func_3734'] = func_3734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2726_call = mutated_mod.get_global_var('func_2726')
call_3739 = relay.TupleGetItem(func_2725_call(), 1)
call_3740 = relay.TupleGetItem(func_2726_call(), 1)
func_1036_call = mod.get_global_var('func_1036')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_3741 = relay.TupleGetItem(func_1036_call(), 3)
call_3742 = relay.TupleGetItem(func_1038_call(), 3)
output = relay.Tuple([call_3739,call_3741,])
output2 = relay.Tuple([call_3740,call_3742,])
func_3750 = relay.Function([], output)
mod['func_3750'] = func_3750
mod = relay.transform.InferType()(mod)
output = func_3750()
func_3751 = relay.Function([], output)
mutated_mod['func_3751'] = func_3751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1036_call = mod.get_global_var('func_1036')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_3752 = relay.TupleGetItem(func_1036_call(), 0)
call_3753 = relay.TupleGetItem(func_1038_call(), 0)
uop_3764 = relay.cos(call_3752.astype('float32')) # shape=(16, 2, 14)
uop_3766 = relay.cos(call_3753.astype('float32')) # shape=(16, 2, 14)
func_3400_call = mod.get_global_var('func_3400')
func_3403_call = mutated_mod.get_global_var('func_3403')
const_3775 = relay.const([3.651745,2.304460,-6.709125,8.209969,-3.768236,-0.518470,0.734423,-2.191942,8.334353,5.115548,-2.234868,7.742250,-3.070257,1.244404,6.343267,8.542773,8.959429,-3.041261,-6.558084,-1.447071,4.418843,-0.099788,-9.577521,6.901125,-9.887892,8.799946,-9.559054,9.757794,0.274449,-5.293501,-6.277426,8.773658,5.765631,2.413389,-7.031263,-0.519431,-4.367618,-4.393863,9.850462,-8.617858,9.197004,2.074194,5.653808,-4.885183,4.467344,1.234060,-2.497145,-7.769382,-3.950193,-8.224790,2.031465,-2.110047,1.803831,6.294643,-6.042962,-5.704960,9.795636,9.083072,-1.668810,3.573514,5.910691,-2.044649,6.729027,9.440631,-6.727564,-7.141658,-8.394287,-2.705148,-5.790080,2.224600,3.659702,-0.678492,9.934012,9.174846,9.418715,2.026874,4.084191,6.755466,-6.977661,-6.730058,-9.000034,4.958059,1.005992,-2.375983,0.406094,8.780215,-3.198375,7.955959,0.825228,5.704355,4.462222,1.059361,-9.570308,3.396557,7.131693,-6.164110,3.087873,3.056895,5.720609,-6.199176,1.235139,9.469591,4.218349,5.193811,-3.296858,9.295716,1.821805,-5.185383,9.418994,6.998956,-1.062135,-4.402490,0.806933,-5.213994,-6.213345,7.964577,-9.848706,2.111632,5.213385,7.538777,6.446381,6.029434,3.322786,9.303501,7.027212,-0.395781,-9.355366,1.722053,-6.354261,-8.372091,-9.968057,-4.220128,-8.715760,-5.487760,-1.778919,6.544270,1.328185,-0.755746,7.788456,4.773899,-4.975040,-1.864530,3.636510,-5.338059,2.827426,-0.281984,-4.641694,0.485825,-5.862976,-4.811779,1.673322,-1.890208,-3.796785,2.595610,-6.235891,5.282367,-1.698641,4.096396,0.956404,9.682222,-1.097044,4.365786,-2.339996,-5.598667,-2.172180,5.492001,-0.714604,-2.488510,2.172098,-6.317444,9.803661,-0.067747,9.181634,1.438933,-7.979906,-3.612994,-4.670908,1.686963,-4.095228,6.650900,5.934559,-7.266243,-4.551586,-6.218263,-6.203455,-3.310919,-4.560273,-7.564125,-9.657588,5.937450,-2.575040,-6.661674,4.181864,-0.560033,4.145220,-9.327277,-5.304942,-2.955744,-0.240147,-8.272558,-2.312577,-1.964372,-7.905153,-2.541331,-4.674880,8.594211,5.741500,5.158174,9.839163,-5.039436,7.523630,3.506926,6.780181,-7.809890,3.677041,7.973195,4.847476,-6.422087,-3.055161,6.173465,-6.723892,8.864520,-9.226489,-8.599433,-9.436239,-1.269877,-4.140130,-0.858097,3.829700,6.588322,3.652859,-2.292012,-5.621031,-9.405360,-5.895500,0.403863,-4.226251,-1.405600,3.155614,7.973108,-5.057460,9.545676,7.987927,-1.478140,-1.406827,4.648885,-9.944663,9.186989,0.527072,0.483538,4.164072,-1.321856,-0.908843,-5.445529,-4.524556,9.704479,9.259998,3.658455,-6.748096,5.895228,7.180879,4.882794,2.058316,-8.639337,-4.462891,-9.319027,-3.274648,-1.067879,8.541548,-4.080310,-7.843896,-6.651740,-2.940502,-3.025031,-9.195299,2.693563,1.516952,8.691554,3.921854,3.882623,-4.391720,8.584520,-2.692987,1.048974,-0.036289,3.542263,0.533659,-6.097916,3.571650,0.150978,2.989534,2.496613,2.993507,9.167305,-9.045178,-4.294460,-8.652714,1.837962,3.250353,-8.064658,-3.103696,-7.693796,-5.955163,1.557415,-5.409346,6.031088,-9.935884,-1.106075,7.132905,-1.133435,-4.484786,-1.194173,5.564285,7.124424,-4.357281,-7.815993,-3.661945,0.133704,-2.332509,-5.750757,4.026648,-3.750335,3.946538,0.629737,-4.418180,-3.264447,-1.246698,5.449539,3.325393,2.109966,-8.598589,-9.208366,-3.162103,6.383130,3.881866,9.298106,4.330984,-7.241388,-2.446350,-7.716066,4.420100,9.586924,9.866361,0.804727,-9.778728,7.519999,3.047810,6.895621,0.402001,-8.074993,-3.446662,3.885080,3.844316,-6.257942,6.364517,-6.338251,-9.141518,-5.907779,-8.986019,-2.516215,-7.704966,9.527901,2.014258,-3.986814,-3.352643,6.286337,-6.479824,-1.254626,-2.484975,-5.302875,9.513553,0.454353,-7.823176,-8.066465,1.405447,4.467730,-1.632102,7.358384,5.229612,-1.534311,-7.545706,5.810144,-8.263721,-7.629201,-3.911699,-5.092144,1.818439,8.543900,7.479047,-8.935397,-9.789401,2.541104,7.622129,9.183513,-3.332600,-4.254048,2.477946,5.474550,4.531501,2.977728,-6.472745,-3.279070,4.411033,-1.157969,1.628647,9.280342,-1.542685,-2.044394,-7.297266,2.985638,4.349590,3.487542,4.342161,-1.985125,7.826584,-1.140844,8.120077,5.727800,5.208137,3.431420,4.129200,-0.116809,0.535064,8.487258,-6.087360,-7.410428,-1.395022,5.907018,2.943270,-1.371126,4.245766,-8.938567,3.364121,6.502275,3.250938,1.273929,6.574598,2.789894,-4.178811,-3.139361,7.935901,-1.485167,9.571299,0.279547,3.862233,9.833247,-2.250230,8.010980,9.841087,-5.896145,-4.870202,1.518422,-0.416765,-6.526352,5.747075,5.464126,-1.850130,-2.670392,8.688264,-0.476691,-1.904931,8.197283,8.410294,-0.941065,2.407517,-7.110736,8.297487,-0.089549,-7.819681,-8.210318,8.329508,-0.083802,-6.051955,9.992165,-8.200394,-8.569117,3.046789,1.639378,2.976159,-8.122141,0.044857,-0.022103,-4.981642,-9.835723,5.721907,8.600165,-7.458700,-2.317994,-5.011707,8.971761,1.885594,3.381986,6.209642,-6.442225,7.710793,-5.250043,0.972106,2.162897,3.708911,-0.588874,-4.522674,4.962240,0.851226,4.569192,-7.755219,-0.530810,1.311413,-4.187745,-3.568698,4.243542,2.695597,-9.561076,-4.747954,3.797870,2.051223,-7.146321,8.814741,8.975576,-0.683390,-0.298777,1.087985,-6.728103,9.906324,0.537431,5.824742,8.622594,-9.199280,6.175454,1.513708,-6.959874,-5.983789,-5.001603,9.837418,-8.958356,6.892077,-7.862986,2.606534,5.326278,9.197830,9.791123,1.144887,-2.515081,-4.519971,-6.024105,-5.790628,3.294725,9.937490,-3.690503,1.307846,-1.566971,7.734022,9.201505,-9.165139,7.872783,5.169053,-9.486927,4.952833,7.671640,6.052431,8.988715,-5.513285,-2.930067,1.468570,-6.448980,-2.099013,8.693390,0.326546,-0.204787,0.661487,-0.446493,-1.577800,4.047701,2.957155,-2.671286,-9.567174,-9.306138,-2.228021,-8.122503,4.032198,-1.014080,-1.497606,0.775673,-5.529226,2.782042,-8.446592,-2.682332,-8.387656,-7.670959,-2.269641,-5.804860,2.816340,-0.325976,-5.258445,4.931615,7.533074,6.040892,2.624515,-8.772218,-3.304158,5.895419,7.785136,-5.368842,8.301334,9.448515,0.377004,-3.762401,-0.317989,-4.113768,1.192073,-0.437178,8.305932,-8.880594,-0.325586,-4.586181,-7.300511,2.355795,4.804372,-1.430745,4.856418,5.707736,6.136319,2.467959,-8.301744,-7.750123,8.566846,-0.673906,-0.016999,6.978708,9.045613,-1.390835,3.842942,7.941152,2.633145,2.616557,0.203962,1.227258,-8.713714,-9.952385,-5.952625,-6.883106,2.822717,-7.239374,-4.003288,3.198145,0.859875,1.519241,9.912480,9.633699,-0.959457,9.254804,1.203825,1.842995,2.493892,-5.117357,-1.853547,5.569899,-7.979302,-0.037803,9.108196,-7.578843,1.564916,4.518882,6.950511,4.901547,1.790272,9.342888,4.741134,-5.690155,1.522094,-8.587141,-4.104498,4.620791,3.058765,9.984695,3.940547,4.559472,7.805332,-2.911621,6.950401,0.436767,-7.498254,-8.595391,4.572517,8.200949,3.255065,-9.431442,2.905204,-6.672909,5.906785,-4.351442,-0.181000,6.478290,-9.902655,-6.925905,5.949944,2.121617,-8.205819,7.951642,-4.798482,-9.919245,-5.101726,5.276948,9.308062,-8.903854,9.115299,8.022937,-7.612462,-9.957114,-1.977078,8.227121,-6.107187,-0.519070,-9.994034,-4.152634,-2.403013,-0.494511,3.266524,-8.036056,-5.098600,-5.215533,2.391769,0.909427,-0.342595,3.551023,-9.277570,6.314565,9.233010,1.414281,4.299725,-1.805950,8.429904,4.665494,6.807833,1.480440,-2.145447,2.497894,1.731376,-2.308735,-3.798125,0.867021,-1.138221,2.693891,-1.498220,1.138748,-4.494120,6.941609,-9.120523,1.403775,-7.555348,5.410667,-4.090312,3.838084,9.725507,6.477411,6.293134,-9.124808,4.358320,5.996997,4.495203,-3.510733,-7.304273,1.419065,-6.371239,-7.614814,5.988851,1.700741,6.128792,6.704699,-0.284901,-4.455537,9.064525,8.895943,9.091844,-7.532020,7.706283,-4.998320,-2.331221,0.098898,-4.651031,-9.400641,5.923241,8.409079,-0.840406,-7.536660,-7.999410,-8.770168,5.210504,-8.772136,-6.501302,5.256164,1.403573,6.944629,3.808341,-0.901778,5.579529,9.385220,8.364887,0.097679,-2.393186,-9.880675,-1.933811,-3.207852,1.139848,-7.542921,-1.580298,5.511998,-8.402758,5.058567,2.153123,9.055230,-3.765848,-1.288073,-7.344967,5.008203,9.070178,2.771640,-7.796610,5.279375,-0.653891,3.624192,-9.495315,5.731393,-6.967789,-3.435463,-8.352522,-9.691685,3.908947,-0.738967,-8.937677,-9.607720,-0.840123,0.656392,9.827186,-2.084613,5.837376,-4.097012,-4.180243,-7.046250,6.241201,9.475291,-6.031028,-4.152329,-8.523388,6.182999,3.994329,-5.210584,1.512916,-4.852280,-3.886330,3.193237,5.394303,7.315254,6.651246,-5.041518,0.182505,-8.427986,0.024294,9.323538,-5.793049,-7.868440,-6.305138,1.117001,-1.226197,-3.809525,-2.264506,-6.862987,-2.341337,6.545128,4.412404,-6.785819,8.500361,1.764549,4.048106,-6.414050,5.336172,7.651716,2.452452,-6.177671,5.110781,4.443831,-5.610676,0.743076,0.917389,-7.629112,-6.611526,6.363659,9.544530,-1.700170,9.273828,-7.090231,2.781229,-5.154696,-0.207380,-6.654445,-1.518344,9.192403,-1.517262,7.851214,-6.689075,-1.381961,-1.140485,-5.877569,-6.408979,-8.058429,-3.361836,3.471999,2.514130,-9.483495,-9.925239,9.688401,-8.032368,9.377575,5.989093,5.620333,-6.668468,-5.810962,2.965698,-9.814922,0.535057,-0.890117,-8.436363,0.964858,0.859687,4.009870,-5.322997,-0.630341,-7.377274,5.803212,-0.811422,8.031773,5.244758,8.600690,-4.530378,-8.252206,5.707262,6.115829,-2.981913,1.525070,2.942863,1.890005,6.476937,-1.890929,0.543637,1.671958,-3.682082,-9.046316,-5.193471,6.347045,-0.332701,-6.818105,-2.540097,8.680050,-1.669882,-9.250498,3.299904,1.493513,-1.519552,-5.594062,-3.047850,8.076079,-6.950543,-2.810252,-3.706069,-4.975587,7.575475,-1.901145,-5.106035,9.883079,-5.210737,-2.722490,1.815188,-4.983531,-7.265410,-1.703042,-7.752043,6.131479,7.257215,3.585570,7.023996,-8.812183,-3.184776,-7.046346,-4.419959,1.495304,-8.686413,5.812088,3.584859,9.146898,-6.582878,-7.544788,0.482257,-2.617136,8.503228,-1.638858,6.416479,-5.945983,8.640871,-5.519557,-1.323552,-1.764065,-1.220393,-0.382903,9.128138,5.413052,1.091661,-8.746592,1.756204,-6.814132,-0.820374,-5.996252,0.548088,8.089468,1.550203,5.702316,8.934807,-9.632312,7.447132,-1.881011,-7.061089,-0.482534,5.763671,0.118198,1.132993,-5.877550,-6.458245,6.761932,6.984642,3.500855,5.334069,-6.933316,-9.815782,-9.056479,3.437811,0.776238,-8.811977,-3.355674,-7.048330,-5.719961,7.410803,-0.770399,8.821374,4.597208,-8.493243,-6.216326,9.440300,3.891286,0.449061,9.789306,-3.816725,9.782779,6.531645,-1.897447,6.465205,1.863705,3.488190,-7.862704,-1.719885,7.935265,-0.136834,-1.723852,-0.367314,-8.321541,8.536140,0.702685,-0.416985,-7.126810,-5.548850,8.856745,4.855912,-6.291822,-3.754831,-3.476174,-4.788054,-8.309337,9.568983,2.643836,-8.448727,9.230266,1.980490,0.230040,2.187001,4.002147,-1.322704,7.854957,-3.501709,3.060598,9.434555,0.176040,5.180827,-6.210964,-7.412261,7.876726,0.248292,-2.655856,8.469364,-2.247737,6.622067,-4.035908,0.233680,9.500065,5.769900,-2.871772,-0.928100,-7.473770,4.260744,-5.618819,-8.809172,-0.502512,0.510520,4.475231,-7.269580,4.844918,4.631147,-3.744717,-2.842225,-7.120780,-6.175238,-4.554367,-3.431582,-8.488531,5.543819,5.169239,-6.951586,-4.214865,-7.204357,-0.230525,1.402990,-0.032834,4.701032,3.455002,7.772194,9.241980,9.121222,-8.640471,6.025857,2.993497,-8.080538,-7.831687,5.773728,-9.794152,-9.273005,-7.161822,-8.294595,9.723214,7.548111,5.610216,-2.330789,-7.757310,-3.664681,-8.160896,-8.972586,7.295216,-2.267942,7.385682,-3.049649,-0.495209,0.031256,-0.274760,2.323018,0.801693,6.523053,4.282469,-8.685561,1.966980,6.544651,-0.541396,0.059190,-0.937401,5.924579,6.130676,8.308181,5.380416,6.964177,-5.519185,9.072948,9.963323,8.172144,-1.041378,8.175835,-5.885797,5.425786,-1.783968,-4.115552,2.239633,-5.290488,0.720386,-2.527177,-7.540862,5.062966,-4.525530,3.115723,0.465730,4.085001,-9.075439,7.365132,6.233471,2.775293,0.768246,-1.999701,4.224214,-3.107765,-4.248524,2.381027,-1.897714,7.449161,7.519139,-8.533361,4.722023,2.672963,-6.790818,5.795534,3.437323,2.987487,-1.674538,0.349908,2.061760,3.260473,-3.533473,-2.791321,2.244437,-8.478044,-3.104471,5.610907,-7.747309,5.854383,1.632534,-9.553849,0.106255,3.842741,3.138045,-2.870346,-2.357812,-0.725836,-0.532721,0.736040,-7.308015,1.947983,5.538030,2.150442,1.703025,-9.769563,3.189004,1.060747,7.041940,-5.264335,-6.270901,1.227824,-3.119623,8.187931,-7.833936,-4.742949,-3.265568,-4.240628,-3.471969,3.684062,-4.911144,-3.796028,-6.961551,8.786461,5.902046,-9.829925,-4.766922,-6.568835,8.056736,8.471678,1.844111,3.247241,5.741185,3.234410,2.193393,9.009323,-4.438728,6.284709,-6.569060,-8.812044,-2.611108,5.432059,-9.918533,-5.400270,2.792991,-5.875156,9.041515,1.363688,6.543145,7.092891,3.395502,-9.742390,-5.454159,9.045619,-5.674307,-6.020504,-0.446165,0.330059,-1.710129,9.653021,-6.230779,-3.508232,2.283276,-9.693694,-5.142843,2.379550,5.832171,6.243877,7.936092,-9.540734,1.631575,-2.356167,-2.835040,-6.985803,9.855953,-7.936115,3.317799,-8.451814,-6.083241,9.221814,-4.305710,7.114806,9.958963,4.328027,1.900785,-8.943921,6.402605,-5.789600,2.442617,-8.329770,-0.347502,-5.110465,5.906454,-9.108678,6.725972,-3.614764,-6.121582,0.175917,-2.228305,-2.304930,-5.264600,-2.450294,-2.992121,4.282723,-4.676417,-6.559754,7.264214,-0.582789,0.742589,-2.906962,5.357896,-6.211937,-3.401871,0.746364,4.926251,-6.805098,-1.292909], dtype = "float32")#candidate|3775|(1352,)|const|float32
call_3774 = relay.TupleGetItem(func_3400_call(relay.reshape(const_3775.astype('float32'), [1352,])), 3)
call_3776 = relay.TupleGetItem(func_3403_call(relay.reshape(const_3775.astype('float32'), [1352,])), 3)
output = relay.Tuple([uop_3764,call_3774,const_3775,])
output2 = relay.Tuple([uop_3766,call_3776,const_3775,])
func_3782 = relay.Function([], output)
mod['func_3782'] = func_3782
mod = relay.transform.InferType()(mod)
mutated_mod['func_3782'] = func_3782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mutated_mod.get_global_var('func_3782')
call_3783 = func_3782_call()
output = call_3783
func_3784 = relay.Function([], output)
mutated_mod['func_3784'] = func_3784
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3822 = relay.var("var_3822", dtype = "float32", shape = (10, 7, 5))#candidate|3822|(10, 7, 5)|var|float32
uop_3823 = relay.tan(var_3822.astype('float32')) # shape=(10, 7, 5)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_3826 = func_3417_call()
call_3827 = func_3417_call()
output = relay.Tuple([uop_3823,call_3826,])
output2 = relay.Tuple([uop_3823,call_3827,])
func_3831 = relay.Function([var_3822,], output)
mod['func_3831'] = func_3831
mod = relay.transform.InferType()(mod)
var_3832 = relay.var("var_3832", dtype = "float32", shape = (10, 7, 5))#candidate|3832|(10, 7, 5)|var|float32
output = func_3831(var_3832)
func_3833 = relay.Function([var_3832], output)
mutated_mod['func_3833'] = func_3833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3854 = relay.var("var_3854", dtype = "float32", shape = (2, 9, 10))#candidate|3854|(2, 9, 10)|var|float32
uop_3855 = relay.log10(var_3854.astype('float32')) # shape=(2, 9, 10)
output = uop_3855
output2 = uop_3855
func_3859 = relay.Function([var_3854,], output)
mod['func_3859'] = func_3859
mod = relay.transform.InferType()(mod)
mutated_mod['func_3859'] = func_3859
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3860 = relay.var("var_3860", dtype = "float32", shape = (2, 9, 10))#candidate|3860|(2, 9, 10)|var|float32
func_3859_call = mutated_mod.get_global_var('func_3859')
call_3861 = func_3859_call(var_3860)
output = call_3861
func_3862 = relay.Function([var_3860], output)
mutated_mod['func_3862'] = func_3862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2477_call = mod.get_global_var('func_2477')
func_2478_call = mutated_mod.get_global_var('func_2478')
call_4007 = relay.TupleGetItem(func_2477_call(), 0)
call_4008 = relay.TupleGetItem(func_2478_call(), 0)
output = call_4007
output2 = call_4008
func_4010 = relay.Function([], output)
mod['func_4010'] = func_4010
mod = relay.transform.InferType()(mod)
output = func_4010()
func_4011 = relay.Function([], output)
mutated_mod['func_4011'] = func_4011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2807_call = mod.get_global_var('func_2807')
func_2809_call = mutated_mod.get_global_var('func_2809')
call_4018 = relay.TupleGetItem(func_2807_call(), 0)
call_4019 = relay.TupleGetItem(func_2809_call(), 0)
func_1226_call = mod.get_global_var('func_1226')
func_1230_call = mutated_mod.get_global_var('func_1230')
const_4035 = relay.const(8, dtype = "uint32")#candidate|4035|()|const|uint32
var_4036 = relay.var("var_4036", dtype = "uint32", shape = (1, 56))#candidate|4036|(1, 56)|var|uint32
call_4034 = func_1226_call(relay.reshape(const_4035.astype('uint32'), []), relay.reshape(var_4036.astype('uint32'), [7, 4, 2]), )
call_4037 = func_1226_call(relay.reshape(const_4035.astype('uint32'), []), relay.reshape(var_4036.astype('uint32'), [7, 4, 2]), )
func_3750_call = mod.get_global_var('func_3750')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_4054 = relay.TupleGetItem(func_3750_call(), 0)
call_4055 = relay.TupleGetItem(func_3751_call(), 0)
output = relay.Tuple([call_4018,call_4034,const_4035,var_4036,call_4054,])
output2 = relay.Tuple([call_4019,call_4037,const_4035,var_4036,call_4055,])
func_4056 = relay.Function([var_4036,], output)
mod['func_4056'] = func_4056
mod = relay.transform.InferType()(mod)
var_4057 = relay.var("var_4057", dtype = "uint32", shape = (1, 56))#candidate|4057|(1, 56)|var|uint32
output = func_4056(var_4057)
func_4058 = relay.Function([var_4057], output)
mutated_mod['func_4058'] = func_4058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_4081 = func_3417_call()
call_4082 = func_3417_call()
func_1108_call = mod.get_global_var('func_1108')
func_1111_call = mutated_mod.get_global_var('func_1111')
const_4088 = relay.const([-3.544619,1.424635,-5.530602,-7.596167,-2.188037,-0.108599,0.421071,4.802036,-3.917973,-6.706273,9.812156,5.292454,3.884090,3.478416,-6.256704,0.321107,6.940931,0.812899,-1.139398,-7.493349,6.570385,7.025384,9.507346,-3.963384,4.944814,-8.582759,-3.028961,-8.025239,7.037027,-0.568411,-7.343886,1.248754,-4.086481,7.174946,-1.186975,8.337045,-5.400860,-5.315474,6.129074,-8.642374,-7.603130,6.909525,-1.344293,-8.596318,-3.013910,-4.595630,-5.295066,-8.354777,-1.587280,-4.289457,4.938714,-3.885912,-2.824178,7.789988,0.482658,4.686726,-9.027532,-2.612682,-9.155626,9.867004,3.138032,6.556756,5.535047,0.488288,4.706430,-2.352462,4.696397,3.703172,-7.316421,-3.257253,-1.535754,1.960855,-7.169204,7.348525,-6.051140,1.344723,-0.112314,-1.733973,-4.292767,4.201867,1.182341,0.389334,-0.017378,-5.866796,0.279211,1.181513,-6.100740,3.841254,-7.299133,0.868402,3.192308,6.160203,5.586088,9.927890,5.395134,-1.892866,-0.578169,8.492533,-1.320353,1.042365,-0.667270,7.803094,3.357293,-7.536316,8.516603,1.610216,-1.245967,4.255952,-5.881625,-5.258238,8.564467,-1.521532,-1.858971,3.994018,5.532741,-0.950377,8.583940,5.147235,-3.432020,-6.582903,1.176694,-0.982278,-9.350752,-9.565201,-9.236279,-2.312544,0.325323,-7.512949,4.491338,-9.568349,-5.996157,-6.383468,-7.815448,5.111960,5.744559,-1.618973,3.529680,2.581710,-0.454625,-2.451132,-2.520474,0.471259,8.292430,2.940269,0.653141,8.011796,-8.711450,0.485334,2.646033,-5.906118,-9.547641,-7.481458,7.423775,-9.347979,0.053876,5.990023,5.881203,8.335536,-9.429910,5.738503,-6.022346,6.288684,0.055690,2.583122,2.315228,4.913427,-8.484097,0.980175,0.055564,-6.658384,-6.515421,-6.269101,-9.596662,-6.968095,-6.794756,-7.731812,0.975357,-3.862305,-5.933508,7.502385,1.189673,4.439893,-1.992602,6.873463,-5.554226,-3.229044,5.979525,7.130418,-8.919251,-3.558310,0.734905,7.707872,0.548177,5.319455,2.287063,5.952885,-2.680255,7.915367,-2.667959,-0.756295,-2.057295,2.232037,-3.308098,5.276989,6.929556,5.396506,-0.030990,0.240144,-3.380588,9.833588,7.718286,-8.427909,5.460598,0.203792,6.266062,2.157551,-6.148509,7.024619,5.362440,-5.714268,3.106207,6.040382,-8.033252,4.817864,-1.269088,4.904341,5.891396,1.214226,9.515737,-5.642336,-3.737101,-0.278973,2.162612,0.618222,-0.380150,9.397511,-0.758830,4.718769,5.414010,9.159290,0.053956,5.678773,4.649352,8.418029,2.700143,7.657942,9.319357,2.563903,1.286222,8.436060,-5.732976,0.162842,-6.771357,4.658007,8.305674,7.352022,4.402394,-2.569425,8.505595,9.813299,3.332884,-2.457670,-5.683902,0.416835,0.901554,3.559651,4.659835,-0.853835,3.684296,5.469556,-0.926364,7.385306,-8.410685,-3.486296,-8.382051,-4.492451,-6.607044,-8.692539,-7.294773,8.696989,8.348627,3.447785,1.383859,-6.208060,-8.410505,-8.334992,-2.962142,-7.279556,0.768314,-5.232561,9.600880,2.992384,2.604532,-6.689453,-5.742190,9.712228,2.072846,-8.759201,-3.348867,0.005536,0.691278,-1.062639,-6.127528,-7.911859,0.744957,7.364153,9.748616,4.816339,-2.613098,7.939733,9.964261,-0.611210,1.797207,8.900016,6.377862,-4.443530,-1.133054,-5.922215,-2.350742,-2.096029,5.206978,-8.675267,4.178142,-8.583814,7.583858,-1.725204,-7.395457,3.343823,3.624299,-7.923949,-5.213646,2.638482,2.679824,0.389549,-2.293259,8.175418,6.090378,8.003238,8.639966,-4.922919,9.183057,7.435504,-1.305711,4.260546,-0.113364,-8.625241,6.596190,5.716586,-1.698278,-2.951391,1.360019,-9.570121,9.888257,5.455826,5.965728,4.174447,-9.989000,6.971274,-6.545168,-9.102244,-5.534083,8.074984,9.076755,-5.677787,2.232125,-1.355966,-6.312435,9.972869,-6.868169,0.319188,-6.990766,-5.538279,2.032186,1.013463,4.510302,-6.144099,4.864440,0.684822,0.771078,-4.600190,-9.836002,3.438347,6.901585,-8.937470,1.416140,-2.694393,-4.953604,-7.880416,-1.992189,4.075408,8.953282,9.627039,5.074414,2.597470,-2.926611,7.561269,6.013531,0.035814,0.613161,-2.274872,7.614929,9.904428,-8.004386,-0.938431,7.738487,-1.405019,0.115759,8.292324,-2.434859,1.052977,-2.862846,0.909012,0.839107,2.825598,-1.002973,0.275125,-8.610924,9.562805,-6.608926,0.131655,-8.031856,4.408104,4.321809,-5.005073,0.256775,-4.074608,3.001017,0.803704,-4.374088,2.951743,9.234865,9.633377,4.647006,-7.156401,-0.711112,-1.985230,9.266280,-3.804502,-3.772845,-9.232325,5.210113,-3.581108,-4.723907,5.918029,-4.130351,3.581047,-5.945056,3.973173], dtype = "float64")#candidate|4088|(448,)|const|float64
call_4087 = func_1108_call(relay.reshape(const_4088.astype('float64'), [16, 2, 14]))
call_4089 = func_1108_call(relay.reshape(const_4088.astype('float64'), [16, 2, 14]))
output = relay.Tuple([call_4081,call_4087,const_4088,])
output2 = relay.Tuple([call_4082,call_4089,const_4088,])
func_4097 = relay.Function([], output)
mod['func_4097'] = func_4097
mod = relay.transform.InferType()(mod)
mutated_mod['func_4097'] = func_4097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4097_call = mutated_mod.get_global_var('func_4097')
call_4098 = func_4097_call()
output = call_4098
func_4099 = relay.Function([], output)
mutated_mod['func_4099'] = func_4099
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4122 = relay.var("var_4122", dtype = "float64", shape = ())#candidate|4122|()|var|float64
var_4123 = relay.var("var_4123", dtype = "float64", shape = (11, 15, 2))#candidate|4123|(11, 15, 2)|var|float64
bop_4124 = relay.floor_divide(var_4122.astype('float64'), var_4123.astype('float64')) # shape=(11, 15, 2)
output = relay.Tuple([bop_4124,])
output2 = relay.Tuple([bop_4124,])
func_4128 = relay.Function([var_4122,var_4123,], output)
mod['func_4128'] = func_4128
mod = relay.transform.InferType()(mod)
var_4129 = relay.var("var_4129", dtype = "float64", shape = ())#candidate|4129|()|var|float64
var_4130 = relay.var("var_4130", dtype = "float64", shape = (11, 15, 2))#candidate|4130|(11, 15, 2)|var|float64
output = func_4128(var_4129,var_4130,)
func_4131 = relay.Function([var_4129,var_4130,], output)
mutated_mod['func_4131'] = func_4131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1574_call = mod.get_global_var('func_1574')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_4162 = func_1574_call()
call_4163 = func_1574_call()
func_2655_call = mod.get_global_var('func_2655')
func_2658_call = mutated_mod.get_global_var('func_2658')
var_4175 = relay.var("var_4175", dtype = "float32", shape = (1352,))#candidate|4175|(1352,)|var|float32
call_4174 = relay.TupleGetItem(func_2655_call(relay.reshape(var_4175.astype('float32'), [338, 4])), 6)
call_4176 = relay.TupleGetItem(func_2658_call(relay.reshape(var_4175.astype('float32'), [338, 4])), 6)
func_2254_call = mod.get_global_var('func_2254')
func_2256_call = mutated_mod.get_global_var('func_2256')
call_4178 = relay.TupleGetItem(func_2254_call(), 0)
call_4179 = relay.TupleGetItem(func_2256_call(), 0)
uop_4187 = relay.sinh(call_4178.astype('float32')) # shape=(16, 2, 14)
uop_4189 = relay.sinh(call_4179.astype('float32')) # shape=(16, 2, 14)
output = relay.Tuple([call_4162,call_4174,var_4175,uop_4187,])
output2 = relay.Tuple([call_4163,call_4176,var_4175,uop_4189,])
func_4195 = relay.Function([var_4175,], output)
mod['func_4195'] = func_4195
mod = relay.transform.InferType()(mod)
mutated_mod['func_4195'] = func_4195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4196 = relay.var("var_4196", dtype = "float32", shape = (1352,))#candidate|4196|(1352,)|var|float32
func_4195_call = mutated_mod.get_global_var('func_4195')
call_4197 = func_4195_call(var_4196)
output = call_4197
func_4198 = relay.Function([var_4196], output)
mutated_mod['func_4198'] = func_4198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mod.get_global_var('func_3750')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_4217 = relay.TupleGetItem(func_3750_call(), 1)
call_4218 = relay.TupleGetItem(func_3751_call(), 1)
output = relay.Tuple([call_4217,])
output2 = relay.Tuple([call_4218,])
func_4241 = relay.Function([], output)
mod['func_4241'] = func_4241
mod = relay.transform.InferType()(mod)
output = func_4241()
func_4242 = relay.Function([], output)
mutated_mod['func_4242'] = func_4242
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4299 = relay.var("var_4299", dtype = "float64", shape = (12, 5, 1))#candidate|4299|(12, 5, 1)|var|float64
uop_4300 = relay.acos(var_4299.astype('float64')) # shape=(12, 5, 1)
bop_4303 = relay.power(uop_4300.astype('float32'), relay.reshape(var_4299.astype('float32'), relay.shape_of(uop_4300))) # shape=(12, 5, 1)
func_2935_call = mod.get_global_var('func_2935')
func_2937_call = mutated_mod.get_global_var('func_2937')
call_4312 = relay.TupleGetItem(func_2935_call(), 0)
call_4313 = relay.TupleGetItem(func_2937_call(), 0)
bop_4317 = relay.divide(var_4299.astype('float32'), relay.reshape(uop_4300.astype('float32'), relay.shape_of(var_4299))) # shape=(12, 5, 1)
func_1719_call = mod.get_global_var('func_1719')
func_1721_call = mutated_mod.get_global_var('func_1721')
call_4320 = relay.TupleGetItem(func_1719_call(), 0)
call_4321 = relay.TupleGetItem(func_1721_call(), 0)
output = relay.Tuple([bop_4303,call_4312,bop_4317,call_4320,])
output2 = relay.Tuple([bop_4303,call_4313,bop_4317,call_4321,])
func_4322 = relay.Function([var_4299,], output)
mod['func_4322'] = func_4322
mod = relay.transform.InferType()(mod)
var_4323 = relay.var("var_4323", dtype = "float64", shape = (12, 5, 1))#candidate|4323|(12, 5, 1)|var|float64
output = func_4322(var_4323)
func_4324 = relay.Function([var_4323], output)
mutated_mod['func_4324'] = func_4324
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4407 = relay.var("var_4407", dtype = "int8", shape = (16, 13, 16))#candidate|4407|(16, 13, 16)|var|int8
var_4408 = relay.var("var_4408", dtype = "int8", shape = (16, 13, 16))#candidate|4408|(16, 13, 16)|var|int8
bop_4409 = relay.less_equal(var_4407.astype('bool'), relay.reshape(var_4408.astype('bool'), relay.shape_of(var_4407))) # shape=(16, 13, 16)
func_1900_call = mod.get_global_var('func_1900')
func_1904_call = mutated_mod.get_global_var('func_1904')
var_4415 = relay.var("var_4415", dtype = "bool", shape = (15, 4))#candidate|4415|(15, 4)|var|bool
const_4416 = relay.const([2.696288,0.783225,1.347301,4.304344,5.651332,-3.469354,-1.084092,-4.034968,-5.803071,-4.085418,-4.299247,1.742505,1.010081,4.069280,6.655487,3.074817,7.386553,-7.564234,-3.965722,-7.860878,1.532722,6.593550,9.538780,-6.158572,5.010621,3.586217,6.178988,6.791261,7.437953,9.354413,-6.930189,9.313358,3.254120,-6.748434,4.830356,-8.418387,-4.409914,2.929552,1.651309,2.204091,-4.037346,-5.672134,7.363100,-9.118106,-0.948187,-0.421001,-7.899273,-4.929610,1.715889,4.280967,-9.516896,1.890454,4.387934,-1.746787,-5.959483,-2.919211,-1.091306,7.023142,-2.382569,-9.270074,1.189699,9.687467,-8.686529,-3.562599,6.830549,7.452687,7.945506,-9.767001,3.993451,5.949595,-5.454479,-4.415575,-3.350837,-6.369504,3.684794,8.099382,5.654060,-1.578183,8.378304,-2.187368,-6.288557,-2.610555,-7.811852,-3.969854,9.880770,-3.391727,7.619509,6.987000,-7.526262,-5.207411,-6.527461,-8.992498,0.311095,-8.632727,5.869879,0.045168,-7.953778,9.981178,-5.901954,-8.907560,4.408171,3.249762,4.837614,-0.990842,-1.138885,2.571451,5.586782,0.391489,-8.958203,7.963708,-8.748052,8.030021,-3.839257,8.161533,-7.867474,-3.549619,-1.996157,8.450636,-5.144420,5.637585,-8.691956,-7.878796,0.071299,-3.091042,1.677986,2.055842,-9.835862,-3.997605,-5.170847,8.579078,2.036963,-8.143345,9.637711,3.314398,-7.936129,8.298056,5.129447,-8.036239,7.877166,-7.353618], dtype = "float64")#candidate|4416|(140,)|const|float64
call_4414 = relay.TupleGetItem(func_1900_call(relay.reshape(var_4415.astype('bool'), [60,]), relay.reshape(const_4416.astype('float64'), [5, 28]), ), 3)
call_4417 = relay.TupleGetItem(func_1904_call(relay.reshape(var_4415.astype('bool'), [60,]), relay.reshape(const_4416.astype('float64'), [5, 28]), ), 3)
bop_4419 = relay.multiply(var_4408.astype('uint32'), relay.reshape(bop_4409.astype('uint32'), relay.shape_of(var_4408))) # shape=(16, 13, 16)
bop_4429 = relay.not_equal(var_4407.astype('bool'), relay.reshape(var_4408.astype('bool'), relay.shape_of(var_4407))) # shape=(16, 13, 16)
output = relay.Tuple([call_4414,var_4415,const_4416,bop_4419,bop_4429,])
output2 = relay.Tuple([call_4417,var_4415,const_4416,bop_4419,bop_4429,])
func_4455 = relay.Function([var_4407,var_4408,var_4415,], output)
mod['func_4455'] = func_4455
mod = relay.transform.InferType()(mod)
var_4456 = relay.var("var_4456", dtype = "int8", shape = (16, 13, 16))#candidate|4456|(16, 13, 16)|var|int8
var_4457 = relay.var("var_4457", dtype = "int8", shape = (16, 13, 16))#candidate|4457|(16, 13, 16)|var|int8
var_4458 = relay.var("var_4458", dtype = "bool", shape = (15, 4))#candidate|4458|(15, 4)|var|bool
output = func_4455(var_4456,var_4457,var_4458,)
func_4459 = relay.Function([var_4456,var_4457,var_4458,], output)
mutated_mod['func_4459'] = func_4459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1854_call = mod.get_global_var('func_1854')
func_1855_call = mutated_mod.get_global_var('func_1855')
call_4475 = func_1854_call()
call_4476 = func_1854_call()
output = call_4475
output2 = call_4476
func_4481 = relay.Function([], output)
mod['func_4481'] = func_4481
mod = relay.transform.InferType()(mod)
output = func_4481()
func_4482 = relay.Function([], output)
mutated_mod['func_4482'] = func_4482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3654_call = mod.get_global_var('func_3654')
func_3656_call = mutated_mod.get_global_var('func_3656')
call_4486 = func_3654_call()
call_4487 = func_3654_call()
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_4491 = relay.TupleGetItem(func_1140_call(), 0)
call_4492 = relay.TupleGetItem(func_1142_call(), 0)
func_1036_call = mod.get_global_var('func_1036')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_4503 = relay.TupleGetItem(func_1036_call(), 1)
call_4504 = relay.TupleGetItem(func_1038_call(), 1)
bop_4528 = relay.not_equal(call_4503.astype('bool'), relay.reshape(call_4486.astype('bool'), relay.shape_of(call_4503))) # shape=(13, 10, 7)
bop_4531 = relay.not_equal(call_4504.astype('bool'), relay.reshape(call_4487.astype('bool'), relay.shape_of(call_4504))) # shape=(13, 10, 7)
func_2687_call = mod.get_global_var('func_2687')
func_2689_call = mutated_mod.get_global_var('func_2689')
call_4534 = relay.TupleGetItem(func_2687_call(), 2)
call_4535 = relay.TupleGetItem(func_2689_call(), 2)
uop_4548 = relay.sigmoid(call_4534.astype('float64')) # shape=(1352,)
uop_4550 = relay.sigmoid(call_4535.astype('float64')) # shape=(1352,)
func_1379_call = mod.get_global_var('func_1379')
func_1382_call = mutated_mod.get_global_var('func_1382')
var_4552 = relay.var("var_4552", dtype = "float64", shape = (8,))#candidate|4552|(8,)|var|float64
call_4551 = relay.TupleGetItem(func_1379_call(relay.reshape(var_4552.astype('float64'), [8,]), relay.reshape(uop_4548.astype('float32'), [1, 1352]), ), 4)
call_4553 = relay.TupleGetItem(func_1382_call(relay.reshape(var_4552.astype('float64'), [8,]), relay.reshape(uop_4548.astype('float32'), [1, 1352]), ), 4)
func_3750_call = mod.get_global_var('func_3750')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_4560 = relay.TupleGetItem(func_3750_call(), 0)
call_4561 = relay.TupleGetItem(func_3751_call(), 0)
output = relay.Tuple([call_4491,bop_4528,uop_4548,call_4551,var_4552,call_4560,])
output2 = relay.Tuple([call_4492,bop_4531,uop_4550,call_4553,var_4552,call_4561,])
func_4579 = relay.Function([var_4552,], output)
mod['func_4579'] = func_4579
mod = relay.transform.InferType()(mod)
mutated_mod['func_4579'] = func_4579
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4580 = relay.var("var_4580", dtype = "float64", shape = (8,))#candidate|4580|(8,)|var|float64
func_4579_call = mutated_mod.get_global_var('func_4579')
call_4581 = func_4579_call(var_4580)
output = call_4581
func_4582 = relay.Function([var_4580], output)
mutated_mod['func_4582'] = func_4582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4622 = relay.var("var_4622", dtype = "float32", shape = (1, 9))#candidate|4622|(1, 9)|var|float32
uop_4623 = relay.acosh(var_4622.astype('float32')) # shape=(1, 9)
func_2687_call = mod.get_global_var('func_2687')
func_2689_call = mutated_mod.get_global_var('func_2689')
call_4634 = relay.TupleGetItem(func_2687_call(), 1)
call_4635 = relay.TupleGetItem(func_2689_call(), 1)
output = relay.Tuple([uop_4623,call_4634,])
output2 = relay.Tuple([uop_4623,call_4635,])
func_4646 = relay.Function([var_4622,], output)
mod['func_4646'] = func_4646
mod = relay.transform.InferType()(mod)
var_4647 = relay.var("var_4647", dtype = "float32", shape = (1, 9))#candidate|4647|(1, 9)|var|float32
output = func_4646(var_4647)
func_4648 = relay.Function([var_4647], output)
mutated_mod['func_4648'] = func_4648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3150_call = mod.get_global_var('func_3150')
func_3152_call = mutated_mod.get_global_var('func_3152')
call_4667 = relay.TupleGetItem(func_3150_call(), 0)
call_4668 = relay.TupleGetItem(func_3152_call(), 0)
func_1667_call = mod.get_global_var('func_1667')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_4672 = func_1667_call()
call_4673 = func_1667_call()
func_3003_call = mod.get_global_var('func_3003')
func_3006_call = mutated_mod.get_global_var('func_3006')
const_4679 = relay.const([-8,-1,1,-2,2,1,-5,8,-9,-3,-3,-10,4,-6,-6,8,-4,-3,-4,4,-8,-7,7,10,10,-10,10,7,-10,7,-7,-3,3,-8,2,-5,6,-1,7,-10,7,-7,3,-1,8,10,2,-6,1,1,5,-2,-10,-5,-8,-6,-6,2,-9,-4,-10,2,-10,-6,-2,4,5,-8,1,-1,-10,-4,2,-8,8,7,6,9,-8,7,-1,5,7,10,1,-8,10,9,-9,-2,1,-4,-9,-5,9,-4,2,-6,-7,8,-10,8,8,2,6,-4,-3,6,-3,-6,-2,3,-4,-3,-5,-8,7,5,-3,1,-8,8,5,-3,4,1,2,10,-10,8,5,-10,-9,-8,-1,6,5,-3,8,9,5,-8,3,-4,2,-10,-5,-9,-7,-1,-5,-8,-8,1,6,8,9,8,-1,-4,-2,9,-5,4,-3,-10,1,-9,10,-5,-9,8,8,-9,-8,-1,9,10,8,8,10,-2,-10,9,2,-8,8,2,-4,4,-5,-6,7,-10,1,-10,10,3,-4,9,10,-10,3,-4,-4,1,-5,6,3,9,-6,7,3,-5,4,-7,-9,-3,-9,-9,5,-2,5,2,-6,1,10,-9,8,1,5,-8,-3,7,6,-6,-6,-1,6,10,-2,3,9,-6,5,-2,-3,5,9,-9,7,-8,-4,5,-10,-4,-4,-6,-9,3,-8,-4,-3,-9,8,9,-3,-10,4,9,-8,6,-9,8,-3,-4,6,-3,5,-3,-10,-2,-9,-2,-8,9,-3,2,7,2,1,-4,1,7,-9,-3,-7,2,9,-1], dtype = "uint16")#candidate|4679|(300,)|const|uint16
call_4678 = relay.TupleGetItem(func_3003_call(relay.reshape(const_4679.astype('uint16'), [300, 1]), relay.reshape(const_4679.astype('uint16'), [15, 10, 2]), ), 1)
call_4680 = relay.TupleGetItem(func_3006_call(relay.reshape(const_4679.astype('uint16'), [300, 1]), relay.reshape(const_4679.astype('uint16'), [15, 10, 2]), ), 1)
output = relay.Tuple([call_4667,call_4672,call_4678,const_4679,])
output2 = relay.Tuple([call_4668,call_4673,call_4680,const_4679,])
func_4688 = relay.Function([], output)
mod['func_4688'] = func_4688
mod = relay.transform.InferType()(mod)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4688_call = mutated_mod.get_global_var('func_4688')
call_4689 = func_4688_call()
output = call_4689
func_4690 = relay.Function([], output)
mutated_mod['func_4690'] = func_4690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2407_call = mod.get_global_var('func_2407')
func_2409_call = mutated_mod.get_global_var('func_2409')
call_4748 = func_2407_call()
call_4749 = func_2407_call()
func_1036_call = mod.get_global_var('func_1036')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_4762 = relay.TupleGetItem(func_1036_call(), 3)
call_4763 = relay.TupleGetItem(func_1038_call(), 3)
func_2518_call = mod.get_global_var('func_2518')
func_2521_call = mutated_mod.get_global_var('func_2521')
const_4774 = relay.const([False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True], dtype = "bool")#candidate|4774|(440,)|const|bool
call_4773 = func_2518_call(relay.reshape(const_4774.astype('bool'), [5, 8, 11]), relay.reshape(const_4774.astype('bool'), [5, 8, 11]), )
call_4775 = func_2518_call(relay.reshape(const_4774.astype('bool'), [5, 8, 11]), relay.reshape(const_4774.astype('bool'), [5, 8, 11]), )
func_4455_call = mod.get_global_var('func_4455')
func_4459_call = mutated_mod.get_global_var('func_4459')
const_4782 = relay.const([10,-3,-4,-1,-3,4,6,8,-10,2,-2,10,-9,-9,8,-5,4,1,-8,6,-9,-3,-2,9,-4,4,5,-6,-8,-7,3,-5,10,6,10,9,-2,8,-5,-8,8,-5,-5,9,-7,10,-10,6,4,-6,-2,6,9,-8,3,-3,7,3,-10,7,-1,-7,3,1,-5,-2,3,-3,-3,7,8,-6,8,8,4,-7,-4,7,10,-7,-6,6,-10,-2,-9,-9,-6,3,-6,4,-6,-6,7,-2,-3,6,9,-9,-8,-1,7,-3,5,-9,-6,-3,-3,-7,-4,9,-7,5,4,2,-4,-10,-3,3,8,-10,-2,1,2,8,-4,-3,2,6,3,-8,2,-5,-3,-4,-10,-7,9,-2,5,-7,4,1,-10,-2,6,-8,-9,3,3,5,6,-10,2,-6,-9,-8,-4,1,-8,5,-6,-2,9,-9,5,-8,7,-5,-1,6,5,4,-4,3,1,-6,4,2,-3,6,6,-10,5,10,8,5,-1,-3,6,-7,-4,2,8,1,-8,3,2,-4,1,-10,-1,10,-4,7,9,-4,4,2,3,-5,-10,-4,-2,-7,4,1,2,7,4,-3,5,-5,5,-3,1,-9,8,1,-2,4,8,1,-5,-6,-2,2,-8,8,-6,-2,-1,-8,-6,1,-9,-6,-8,-7,-7,4,1,9,-6,-3,-8,-9,-9,7,6,-5,-3,-4,-10,-6,3,8,-7,-5,4,5,-6,2,-1,-1,9,2,7,-4,6,-5,1,6,10,1,1,9,-10,3,2,-8,7,4,5,-2,8,-3,1,-7,1,9,5,1,9,-7,-5,-3,-5,6,-4,5,6,-1,7,9,9,2,-6,-9,7,7,3,4,-6,1,1,-4,-2,-5,4,-7,-2,8,3,4,-5,10,10,5,-6,-7,-2,5,5,-3,4,3,2,-5,-9,3,-1,-2,-8,-6,-5,5,-4,-1,10,8,-7,-1,2,-2,-6,-5,-9,-7,-5,-3,-6,8,-9,-8,5,5,9,-1,-4,4,-7,7,7,2,5,-2,6,-2,9,5,6,-5,6,7,-6,-9,3,8,-8,-2,8,7,-4,-8,-8,6,-3,-10,5,-8,-2,6,3,-5,-4,7,3,-7,-10,9,-8,-4,5,9,-5,1,-3,1,10,-8,-3,8,8,2,-10,8,7,10,-7,-10,-5,-8,-9,-8,-6,-3,1,6,9,-9,-10,-1,-8,9,-8,-10,1,3,8,8,10,-5,-5,2,1,-4,-6,-8,-6,4,7,8,1,-7,-5,-4,-6,-5,2,-6,-7,-3,-7,-1,-9,6,-8,-3,8,-7,5,-7,2,4,9,6,4,1,2,4,-7,-7,-9,-4,-10,-1,4,-6,9,-10,-1,4,-6,9,-7,1,-7,10,1,-2,-7,-8,8,7,5,6,4,3,7,9,-5,1,-3,8,7,4,1,-4,5,8,9,-8,-8,-2,-5,10,-3,3,-1,7,9,1,5,-2,-9,2,8,10,5,10,2,9,8,1,-1,7,-2,-3,-6,-1,5,2,5,9,3,-9,7,2,10,-7,2,4,-6,4,9,-8,9,10,-1,6,-8,1,-5,-3,4,9,-7,1,7,7,1,2,5,-5,-3,-2,-8,-6,-6,9,2,8,-10,-5,6,-2,-5,-8,10,-7,-4,4,2,6,-1,-9,-4,4,-10,10,-9,5,-1,-4,-6,-2,2,6,-5,1,1,1,-9,-9,2,-6,-2,-6,-6,3,-3,-6,-2,8,-7,5,1,5,-9,-10,4,1,-1,-10,-9,-2,-10,7,3,9,-4,-9,-10,-6,9,-9,4,-8,9,1,-10,10,1,2,-3,-3,-7,4,7,6,6,8,9,4,-5,-8,9,-7,-7,4,1,-9,-4,-6,2,6,9,-7,-9,6,7,-10,-2,-7,-7,-9,10,7,-10,4,4,10,-3,10,10,-9,10,3,6,8,-3,-10,-4,7,-9,-6,3,6,6,10,-2,3,8,-3,-8,-8,8,3,6,-6,3,5,1,-1,-7,-3,2,2,-3,-4,6,1,-1,-5,-4,-9,-6,-10,8,-4,-4,8,4,-6,3,-10,-4,-2,-5,10,-2,6,-7,-5,-10,2,7,-2,9,1,-7,-10,2,-6,1,-8,-6,10,-3,-10,5,6,3,-6,5,-4,-8,5,-8,-1,-8,-3,3,10,10,8,-2,-1,2,5,5,-4,-6,7,2,5,6,4,1,5,2,9,8,10,7,1,-7,-7,4,4,-1,-3,7,8,1,-3,5,-10,-2,-4,6,-1,10,5,-3,7,-10,-2,-10,-8,4,-8,1,-3,-6,2,-2,-6,-2,-4,10,10,6,8,4,8,5,-6,-4,1,-6,2,9,-10,-9,-7,-10,8,3,-3,-1,-5,-9,-5,10,2,1,5,4,-1,4,1,-7,1,6,-6,-6,-3,2,7,6,-9,5,-8,-3,-1,9,10,-2,7,-4,-5,4,7,-8,9,6,-2,3,-2,-9,3,9,-5,4,-9,4,9,5,-5,2,6,1,-1,-8,-1,7,4,-5,7,10,8,-3,4,-4,-1,-3,4,-7,-8,-7,-1,-1,2,-3,-5,-6,-6,3,7,1,4,4,-7,3,5,2,-6,-8,-1,7,3,1,2,-3,1,-4,-7,-3,1,-8,7,2,-3,2,-3,-9,10,-8,-6,-1,5,2,-6,-4,10,-3,2,-10,8,-10,-9,-9,-1,-3,-10,-3,-10,4,-7,-2,2,4,5,-10,4,-5,-9,3,-1,-6,-1,-5,2,-8,10,8,7,6,7,-4,6,-5,-4,-4,7,6,-6,10,10,7,-7,-2,8,-8,-3,-6,-4,3,-1,2,4,-5,-9,-8,-2,9,-1,-4,8,-6,6,10,-2,5,8,1,-5,4,-1,3,9,-3,-10,1,-10,-10,8,-6,3,-6,-1,4,-5,-10,-1,2,-4,2,1,-3,-10,-7,3,3,-5,8,9,-1,-10,-3,-5,-3,-9,4,-8,-2,10,-1,5,8,6,-5,7,9,9,2,-4,-3,-2,2,-4,10,-6,-6,6,8,-9,5,2,-5,6,7,4,3,-8,6,1,-5,-9,-5,-6,-7,9,3,7,-2,-7,3,8,-5,-4,8,7,2,8,-10,-10,9,10,1,-2,-10,-2,10,2,-8,-6,-2,2,10,-9,4,1,1,9,-9,-4,10,6,8,7,4,2,8,-8,-6,3,10,-7,-5,4,-7,-7,-6,9,10,-10,9,10,8,8,-7,-5,-6,8,9,7,10,-3,8,-10,5,-3,-4,2,1,7,4,2,4,-3,-2,9,6,-10,-3,3,2,2,8,-7,7,-4,-6,3,6,3,6,-2,3,9,4,-5,7,-2,5,-4,1,-5,4,-7,4,10,3,4,-4,3,4,-6,-5,-8,6,-3,9,6,-6,6,4,-9,8,2,-8,-9,4,3,-4,10,-2,10,10,5,-8,5,-6,8,10,5,-8,-10,2,10,4,-7,-4,8,-3,-2,-5,-5,-3,-7,7,-1,-8,5,-4,-7,6,7,-1,8,1,6,-8,8,-6,-6,-9,-5,-8,9,5,2,-10,-5,-5,6,2,-1,3,-2,6,-9,7,-2,-4,8,-4,5,9,-4,1,-8,2,-3,-1,-1,5,10,5,8,2,1,4,10,5,10,6,1,9,2,-9,7,-4,-7,-10,10,-8,-7,-6,10,5,-9,7,-10,4,-8,-6,8,-3,-10,-9,-6,1,1,-2,-1,10,9,-10,6,10,8,9,7,10,-7,-8,-7,-6,-6,-1,7,-7,-9,-3,2,8,-1,-5,-3,6,3,4,-10,-8,1,3,1,2,8,6,9,9,3,8,8,-7,-7,1,-1,6,-10,-8,1,-2,5,3,4,-6,6,4,-10,-7,9,-6,8,-10,3,1,8,-4,-3,-7,-9,-3,-6,10,-9,-3,-4,-9,-1,5,9,-7,-1,-9,8,-1,-8,-3,-5,-2,-10,3,4,-8,-2,-10,-9,9,-9,-6,4,-5,4,-9,-1,-1,4,4,-5,6,3,8,4,-4,6,10,-7,-2,-3,10,-10,4,5,5,-8,7,6,5,-5,-2,9,10,-9,5,-3,-7,-5,8,-8,-2,-1,-2,-8,-6,-6,-3,2,-8,-6,-6,-9,-2,5,6,1,4,1,-9,-2,2,-7,10,-10,2,-3,-5,-3,-7,-6,-6,5,1,5,-4,6,5,-5,-3,-5,-1,5,-1,4,1,-2,-9,8,-4,-9,-9,6,-8,-9,6,-10,-2,-4,5,10,-9,4,1,5,4,4,9,-7,1,-2,2,5,-6,7,-8,-9,9,-5,5,6,4,-3,9,1,-10,10,-2,-5,5,-4,-9,2,-6,10,6,1,5,-2,5,-6,-6,-6,1,-9,-3,9,-5,2,7,5,6,-1,3,5,7,-3,-6,-3,2,3,-4,9,-5,-1,3,-6,-5,1,-2,-3,8,4,-9,-2,7,-6,8,-10,-6,-5,-8,-9,-10,10,5,-1,-1,8,1,1,-5,-9,-4,-8,-2,1,-6,5,-1,5,8,10,10,1,9,-9,3,-7,-9,-1,-10,4,-5,9,4,1,-10,5,-2,-1,-10,-5,-10,-10,-7,-1,3,2,-4,3,3,-4,-6,4,5,9,6,10,6,5,1,2,-1,4,-3,5,-3,-2,-10,-9,2,2,-1,3,2,-3,-4,-1,-9,-2,3,2,-8,7,9,-3,-3,8,-9,3,9,-8,-1,1,5,-4,-3,-4,-9,9,6,-8,10,5,8,-1,-6,-1,-8,-8,-6,-1,9,9,6,-7,-3,3,2,3,8,7,2,2,10,3,4,-6,9,4,-5,-8,-7,-4,-1,-1,8,2,7,2,-5,7,8,6,-9,3,-1,-4,3,1,4,2,1,-4,9,-10,-8,6,10,-5,2,3,-10,4,-9,-9,7,5,-5,-8,4,9,-5,-1,-6,-2,-2,-2,5,8,-8,-7,8,3,-2,10,-9,9,5,-6,6,-9,-6,3,-6,-5,9,1,3,-5,-5,10,-5,5,-1,-8,1,-5,10,-8,2,3,5,-1,8,-5,2,-8,-8,-4,5,6,-1,5,-3,-8,-8,6,-4,4,-2,6,4,-8,6,1,-6,-9,10,-6,9,-5,4,-10,8,-10,-1,-6,-10,-7,-8,10,-7,-9,-5,9,-1,-10,-6,3,2,-6,-2,2,-7,-10,9,-7,3,3,-2,-1,-7,-10,-1,6,-8,10,3,4,1,4,-6,-6,8,-6,-10,-5,-9,-9,-8,8,7,8,10,-1,7,-10,-6,-1,-4,5,5,-10,-5,-9,-3,-10,4,2,1,-4,-9,-1,-1,-9,9,-10,2,-1,10,-1,-6,3,1,4,9,10,2,-2,6,-7,-3,-1,8,3,3,-1,5,7,-1,7,8,-7,3,-3,-1,3,-9,3,8,5,2,-8,-10,-4,-7,3,2,-8,-1,3,-5,-10,-3,-2,-10,2,-3,-2,7,-5,9,-4,10,-6,-4,3,-5,4,7,-9,-4,-1,-1,-1,-9,7,-6,10,2,5,3,3,-2,-6,-2,-7,3,-3,-3,5,3,-1,-2,3,5,7,-7,-7,-7,1,5,-8,-6,-5,5,10,-3,-7,9,8,-7,3,-7,-6,-1,-6,4,7,4,10,3,7,10,10,3,7,-2,7,-1,6,1,10,-7,-7,8,-10,7,6,1,-1,5,4,8,-9,-6,1,-8,-3,10,5,7,-1,-1,4,-7,6,-2,-9,4,9,4,9,3,-8,10,-10,-7,1,-2,-1,9,8,10,2,-7,7,-1,5,6,6,7,5,1,-1,3,9,-1,-3,-6,6,6,-7,10,2,5,4,-7,5,6,-8,-10,-1,6,2,9,-5,3,-9,-4,-9,-10,-3,5,-3,-6,10,-10,8,4,-7,-10,-5,4,8,-6,9,3,3,1,-6,6,4,-8,-3,-2,7,-5,-9,-10,-7,5,4,-7,3,-10,-5,-7,-6,1,1,-2,-9,3,-7,4,-1,1,4,-2,-8,-6,-3,-1,-9,-8,10,-9,8,5,-6,9,-8,5,-10,9,-1,10,9,3,-6,10,-3,-2,-2,-8,8,10,-10,7,1,-8,10,-6,-9,-9,-2,-10,-10,9,1,-2,7,-4,6,8,5,4,2,-6,-9,-6,4,7,10,5,3,10,-1,10,-6,-9,-4,10,-2,-9,-1,-3,10,-10,6,-2,5,1,-8,7,9,9,-8,-1,5,-3,-4,-5,6,7,-1,9,10,-3,-10,4,-8,-3,2,-7,6,7,-6,-6,-8,-2,-9,4,-2,-10,9,2,-9,-4,-10,1,-2,-6,1,-1,-5,5,-8,5,-9,-2,3,8,10,-4,-4,4,3,4,-4,-10,-8,2,5,-7,4,-5,-5,8,4,4,7,1,2,4,10,4,9,5,-5,10,-2,-8,-5,-10,10,-6,6,9,-3,-3,-6,-3,2,1,-8,7,-6,-7,-1,2,5,-10,-5,10,-9,1,9,-10,-1,6,-2,1,8,-10,7,2,-10,-4,9,-3,6,-6,7,3,7,-9,-4,6,8,-3,-8,10,7,-4,-5,-9,-2,-5,-10,-9,8,5,-8,-4,-9,-3,3,-6,7,-1,7,-5,-4,10,-7,-9,4,-6,5,9,8,2,5,-4,-7,7,4,5,-10,-1,1,-3,6,-7,9,6,10,-9,-3,9,9,-6,-8,2,-5,7,5,-2,9,-3,-7,-6,-4,-4,-9,8,9,-2,8,-6,-8,-10,-3,5,4,-10,4,8,2,-6,-4,-2,2,-1,9,3,10,-4,8,7,-7,2,5,-1,3,2,4,10,8,-6,1,-6,-5,-6,-10,-4,1,8,8,-5,-7,-8,-10,6,-2,-5,-4,-5,-3,-3,-5,-10,4,6,-7,5,-9,2,-1,-5,3,-7,-3,7,5,-9,-8,9,-8,6,-8,-7,3,-4,10,-9,-1,1,9,4,-7,-4,-3,-6,10,4,2,2,-3,-10,-8,-7,7,7,-5,2,3,6,1,-6,-6,10,2,-5,-10,9,6,-1,5,1,-8,-1,-10,-8,10,3,-4,4,-5,-2,-4,7,10,-2,-5,-4,-5,5,-1,6,6,-7,-2,-8,-10,6,-3,5,-10,-8,-2,-9,7,-2,-6,8,-10,4,-8,3,-5,3,1,-1,8,5,2,-7,-7,-7,-9,-8,-2,3,7,7,4,-7,-9,-5,10,7,3,2,4,2,6,2,-2,-7,10,10,5,8,-8,1,4,-3,-1,-4,6,-8,-8,10,7,1,-3,-3,6,2,-8,-3,10,-7,1,-8,1,-9,8,9,9,7,8,-10,-5,2,5,4,-3,10,4,1,4,4,-1,9,4,-2,6,-1,-2,2,8,5,-9,-5,3,-10,-8,-8,9,9,-3,-6,-10,-2,9,2,-2,-1,1,7,4,10,-4,-10,-8,-6,9,4,10,4,9,-9,4,-5,-7,-9,-2,2,-9,-8,-3,-10,10,-4,9,4,-5,-1,4,-5,10,2,5,7,8,1,-4,4,4,-8,9,10,-6,4,-9,-9,-5,1,4,-1,5,-4,4,5,-9,2,-5,-1,-5,9,5,5,10,7,-5,-6,2,-1,9,6,-9,5,1,4,-10,4,-4,3,-8,-10,1,-5,-8,-9,4,-5,4,-8,-6,4,7,3,-10,7,-9,1,1,-2,6,-5,9,-3,2,9,-2,-5,-3,-2,7,1,4,-5,-1,5,-10,-6,-4,1,8,5,-5,3,-9,2,-4,-1,6,7,-2,-5,-5,-1,-1,5,2,-1,10,-4,-1,-6,-1,7,-2,-5,7,9,2,-2,-2,-2,9,-1,1,10,4,-9,3,-2,-10,-1,8,2,-10,5,-5,4,4,5,-3,-7,10,-1,2,8,-2,-3,-9,-2,-1,-8,-4,10,-10,-3,-1,1,6,4,7,4,-1,2,1,-8,1,-7,-10,4,4,-4,-8,6,-9,4,2,-7,-4,-4,3,5,10,10,1,-10,1,-7,9,3,-4,3,-6,1,-9,4,1,-7,-1,10,1,4,4,-3,7,-10,-4,8,-5,-1,-6,-8,2,7,-4,-5,9,-9,5,7,-7,-2,1,-2,-9,-3,-7,3,6,-5,8,-5,1,1,5,9,-6,2,1,6,-8,8,-9,7,2,8,-3,-9,9,2,10,6,2,-3,-4,6,7,-9,4,4,7,-8,-6,-7,-8,7,-10,-2,-2,7,6,-10,-5,1,-5,7,-6,-4,-3,7,10,7,-8,-2,4,4,1,2,3,7,-8,-3,1,-9,10,4,-10,10,10,6,-1,5,-6,-10,-2,-10,5,-7,3,-9,-9,-5,-5,-9,-6,10,-7,9,-4,6,-10,-6,-10,-9,8,7,4,8,-6,-4,-4,-2,-1,-6,-4,3,-9,-8,4,3,7,1,2,1,-8,4,1,-3,-9,-1,1,6,7,-8,-1,-4,9,-2,-5,-2,-9,-3,2,-5,4,3,-2,-3,3,9,-10,-4,6,-3,8,4,-2,8,-4,7,8,3,-1,8,-10,7,8,3,7,7,-1,-3,-9,-1,3,-10,9,3,-4,3,-6,3,4,-9,2,-6,-6,-8,-9,7,6,-5,3,-5,10,10,-10,1,-9,-5,-6,-3,-8,-5,-1,-1,2,-10,-5,-3,-2,-3,5,6,-6,-4,2,3,10,6,-2,8,4,-10,-4,-6,-3,-1,-2,-2,-10,9,4,9,-1,7,4,9,5,7,-10,8,-1,-2,7,-1,8,6,-5,-8,-4,2,-10,5,8,-5,-6,-2,1,10,-7,3,-5,1,-6,6,4,7,9,-9,8,5,-4,-1,-2,1,5,9,4,10,9,-9,6,-6,2,1,-9,5,7,6,-8,3,2,-1,-3,8,9,-4,-5,-9,8,-8,8,8,-9,7,5,1,3,6,3], dtype = "int8")#candidate|4782|(3328,)|const|int8
const_4783 = relay.const([False,True,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True], dtype = "bool")#candidate|4783|(60,)|const|bool
call_4781 = relay.TupleGetItem(func_4455_call(relay.reshape(const_4782.astype('int8'), [16, 13, 16]), relay.reshape(const_4782.astype('int8'), [16, 13, 16]), relay.reshape(const_4783.astype('bool'), [15, 4]), ), 4)
call_4784 = relay.TupleGetItem(func_4459_call(relay.reshape(const_4782.astype('int8'), [16, 13, 16]), relay.reshape(const_4782.astype('int8'), [16, 13, 16]), relay.reshape(const_4783.astype('bool'), [15, 4]), ), 4)
output = relay.Tuple([call_4748,call_4762,call_4773,const_4774,call_4781,const_4782,const_4783,])
output2 = relay.Tuple([call_4749,call_4763,call_4775,const_4774,call_4784,const_4782,const_4783,])
func_4797 = relay.Function([], output)
mod['func_4797'] = func_4797
mod = relay.transform.InferType()(mod)
output = func_4797()
func_4798 = relay.Function([], output)
mutated_mod['func_4798'] = func_4798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2407_call = mod.get_global_var('func_2407')
func_2409_call = mutated_mod.get_global_var('func_2409')
call_4833 = func_2407_call()
call_4834 = func_2407_call()
output = relay.Tuple([call_4833,])
output2 = relay.Tuple([call_4834,])
func_4842 = relay.Function([], output)
mod['func_4842'] = func_4842
mod = relay.transform.InferType()(mod)
mutated_mod['func_4842'] = func_4842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4842_call = mutated_mod.get_global_var('func_4842')
call_4843 = func_4842_call()
output = call_4843
func_4844 = relay.Function([], output)
mutated_mod['func_4844'] = func_4844
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4849 = relay.const([[[4,4,-7,-9,-3,-7,9,-1,-1,-3,2,4,10,6],[4,1,-7,-5,1,1,10,-3,1,-3,-4,1,-2,5]],[[6,1,7,-7,8,-1,5,-3,2,-4,-1,-7,3,4],[-5,-7,-8,1,2,-10,-10,-9,4,2,7,1,4,6]],[[6,-5,9,-1,10,-2,8,3,6,-4,2,-8,-1,1],[-7,-5,9,5,9,2,-8,2,-10,-5,-4,7,-3,9]],[[4,-1,6,-5,3,-10,-5,-4,1,-10,-10,7,2,-2],[-9,-2,10,3,9,-1,-9,7,-5,9,-6,7,4,1]],[[-8,-2,3,-9,7,-9,3,9,2,9,4,5,9,-5],[8,8,9,4,-3,-7,8,-9,7,-6,-3,-8,3,8]],[[-9,-4,8,-4,1,3,4,6,-7,4,2,-4,-5,1],[-8,-9,-3,4,4,-10,-8,10,-2,-4,3,2,-8,-2]],[[9,-10,-4,3,-3,-9,-5,-3,-4,2,3,-5,-6,4],[3,4,1,10,4,-3,10,-5,10,9,2,2,-9,-4]],[[5,-6,3,-2,-5,-10,-8,7,2,7,1,10,7,-1],[-8,-9,2,-1,9,-9,-8,5,-1,-7,6,7,-8,-5]],[[8,1,-2,8,8,-10,5,-3,-10,10,-3,-4,-1,-8],[-9,-3,-10,2,-7,-5,10,-1,-7,-9,-3,6,-7,4]],[[-5,-8,5,3,8,-7,-6,9,8,-2,-6,-1,1,6],[-2,-10,5,1,-1,-7,-8,5,7,-3,-8,3,7,5]],[[-3,-9,-3,10,-7,10,-3,-1,1,8,-2,6,-7,5],[3,3,-3,9,-1,6,9,-8,-4,5,4,5,6,7]],[[-10,-7,-2,-7,3,3,-4,-2,4,7,-10,3,-8,2],[-2,7,-9,3,5,8,-7,-1,-9,-5,-4,3,5,-8]],[[6,8,6,10,-10,-9,-4,-10,-8,-1,4,10,-8,-2],[10,-5,1,-4,9,-4,-6,3,-10,10,-5,-4,9,-7]],[[-8,-10,-2,-5,-10,-1,1,-7,10,9,-2,9,4,-6],[-7,9,-5,-4,-6,1,-7,3,8,7,10,8,-6,1]],[[10,2,4,5,-10,8,7,10,-10,4,-4,5,-6,10],[-10,2,2,-7,3,6,10,-9,-3,-3,-3,2,5,-3]],[[-10,2,6,8,-6,-2,5,-4,6,-4,-4,4,1,5],[5,8,3,-5,-6,4,-8,-2,-8,9,-2,5,-9,5]]], dtype = "uint32")#candidate|4849|(16, 2, 14)|const|uint32
var_4850 = relay.var("var_4850", dtype = "uint32", shape = (16, 2, 14))#candidate|4850|(16, 2, 14)|var|uint32
bop_4851 = relay.not_equal(const_4849.astype('bool'), relay.reshape(var_4850.astype('bool'), relay.shape_of(const_4849))) # shape=(16, 2, 14)
output = relay.Tuple([bop_4851,])
output2 = relay.Tuple([bop_4851,])
func_4859 = relay.Function([var_4850,], output)
mod['func_4859'] = func_4859
mod = relay.transform.InferType()(mod)
var_4860 = relay.var("var_4860", dtype = "uint32", shape = (16, 2, 14))#candidate|4860|(16, 2, 14)|var|uint32
output = func_4859(var_4860)
func_4861 = relay.Function([var_4860], output)
mutated_mod['func_4861'] = func_4861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4842_call = mod.get_global_var('func_4842')
func_4844_call = mutated_mod.get_global_var('func_4844')
call_4954 = relay.TupleGetItem(func_4842_call(), 0)
call_4955 = relay.TupleGetItem(func_4844_call(), 0)
var_4958 = relay.var("var_4958", dtype = "bool", shape = (20,))#candidate|4958|(20,)|var|bool
bop_4959 = relay.add(call_4954.astype('float32'), relay.reshape(var_4958.astype('float32'), relay.shape_of(call_4954))) # shape=(20,)
bop_4962 = relay.add(call_4955.astype('float32'), relay.reshape(var_4958.astype('float32'), relay.shape_of(call_4955))) # shape=(20,)
uop_4979 = relay.atanh(bop_4959.astype('float64')) # shape=(20,)
uop_4981 = relay.atanh(bop_4962.astype('float64')) # shape=(20,)
output = uop_4979
output2 = uop_4981
func_4984 = relay.Function([var_4958,], output)
mod['func_4984'] = func_4984
mod = relay.transform.InferType()(mod)
mutated_mod['func_4984'] = func_4984
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4985 = relay.var("var_4985", dtype = "bool", shape = (20,))#candidate|4985|(20,)|var|bool
func_4984_call = mutated_mod.get_global_var('func_4984')
call_4986 = func_4984_call(var_4985)
output = call_4986
func_4987 = relay.Function([var_4985], output)
mutated_mod['func_4987'] = func_4987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1417_call = mod.get_global_var('func_1417')
func_1418_call = mutated_mod.get_global_var('func_1418')
call_5005 = func_1417_call()
call_5006 = func_1417_call()
func_3731_call = mod.get_global_var('func_3731')
func_3734_call = mutated_mod.get_global_var('func_3734')
call_5047 = relay.TupleGetItem(func_3731_call(relay.reshape(call_5005.astype('float32'), [13, 10, 7])), 0)
call_5048 = relay.TupleGetItem(func_3734_call(relay.reshape(call_5005.astype('float32'), [13, 10, 7])), 0)
output = relay.Tuple([call_5005,call_5047,])
output2 = relay.Tuple([call_5006,call_5048,])
func_5066 = relay.Function([], output)
mod['func_5066'] = func_5066
mod = relay.transform.InferType()(mod)
output = func_5066()
func_5067 = relay.Function([], output)
mutated_mod['func_5067'] = func_5067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2386_call = mod.get_global_var('func_2386')
func_2388_call = mutated_mod.get_global_var('func_2388')
call_5098 = relay.TupleGetItem(func_2386_call(), 0)
call_5099 = relay.TupleGetItem(func_2388_call(), 0)
func_600_call = mod.get_global_var('func_600')
func_603_call = mutated_mod.get_global_var('func_603')
var_5114 = relay.var("var_5114", dtype = "float64", shape = (810,))#candidate|5114|(810,)|var|float64
call_5113 = relay.TupleGetItem(func_600_call(relay.reshape(var_5114.astype('float64'), [15, 6, 9])), 0)
call_5115 = relay.TupleGetItem(func_603_call(relay.reshape(var_5114.astype('float64'), [15, 6, 9])), 0)
output = relay.Tuple([call_5098,call_5113,var_5114,])
output2 = relay.Tuple([call_5099,call_5115,var_5114,])
func_5119 = relay.Function([var_5114,], output)
mod['func_5119'] = func_5119
mod = relay.transform.InferType()(mod)
var_5120 = relay.var("var_5120", dtype = "float64", shape = (810,))#candidate|5120|(810,)|var|float64
output = func_5119(var_5120)
func_5121 = relay.Function([var_5120], output)
mutated_mod['func_5121'] = func_5121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5136 = relay.var("var_5136", dtype = "int32", shape = (9, 16, 13))#candidate|5136|(9, 16, 13)|var|int32
const_5137 = relay.const([[[-6,-10,-10,-1,-3,-4,7,-7,10,-9,1,4,-4],[5,-4,4,7,-6,-8,-8,1,-8,-9,5,3,8],[2,7,8,5,-6,-2,7,-2,7,6,1,-8,6],[-10,5,-5,9,6,4,1,-2,-5,-1,4,8,-5],[3,-9,-7,10,-8,9,-6,5,8,-2,-9,1,-7],[-7,4,-1,-7,6,1,6,-10,7,1,8,9,10],[-8,-7,6,7,8,-9,-2,1,-10,5,1,7,-5],[1,-4,10,-10,6,-1,-5,5,-5,8,10,-2,-9],[-6,-7,9,3,-9,-5,9,4,-6,-10,3,-8,3],[1,3,-10,-6,10,-5,1,5,2,9,8,4,-8],[5,-10,-4,-4,2,-5,-1,8,-7,9,-6,10,6],[5,-5,-9,-1,-7,-1,-1,4,-3,-3,10,-1,4],[9,-7,1,5,4,-4,-2,-9,3,7,-10,-2,-3],[-2,1,-4,-9,3,2,6,1,-1,1,9,-2,1],[9,2,6,-8,2,-7,-2,1,-10,10,-6,-6,10],[3,2,-1,-7,-2,-9,-10,-4,-3,7,8,2,-1]],[[-8,-5,2,10,2,-4,-8,-2,9,-9,-8,9,6],[-5,7,7,2,-4,2,8,-7,6,1,4,1,4],[6,9,1,2,-1,-3,-3,-9,3,2,2,-7,6],[-6,7,-6,-3,4,-8,-4,-7,2,-8,-6,10,2],[4,6,3,4,-2,-2,7,3,-4,6,5,-3,1],[-3,5,-3,-7,8,-3,-1,-5,1,8,-9,2,6],[-3,10,6,5,1,2,-8,-9,5,7,-10,1,-4],[-2,6,-4,7,-1,9,4,-3,-7,7,4,-7,-1],[1,7,-6,2,9,9,9,-8,-7,8,1,2,5],[-9,7,9,5,3,-7,3,10,9,-3,10,9,1],[5,-9,9,3,9,-6,-10,-8,-2,2,-3,3,-9],[-8,-1,10,4,6,-7,-1,-3,-5,-6,1,-3,9],[-5,6,5,4,-2,-10,6,-2,-7,3,10,4,-10],[3,9,3,-6,9,2,-5,-2,3,-5,10,7,-3],[-1,4,-5,9,1,-7,1,-8,1,-7,2,-10,-2],[8,-6,-8,-1,10,-9,9,1,9,-4,-2,2,-8]],[[7,1,2,9,-2,5,-9,-9,-4,-8,-4,6,6],[3,-5,-4,2,-2,-7,-10,-9,-4,2,5,-2,10],[2,4,-3,-7,9,-3,-7,3,7,4,-8,4,-2],[5,-6,9,-2,5,9,4,-3,7,3,5,3,7],[8,3,-4,3,5,5,7,1,-4,-4,-3,7,2],[7,9,-1,7,6,-4,1,-5,7,8,7,-4,-7],[3,4,-3,-5,6,1,1,7,10,-5,4,-6,9],[-6,-4,1,-6,7,7,-6,-9,8,-6,-7,3,-1],[3,3,1,-8,-2,-6,-3,2,6,-3,-4,-9,6],[-9,8,-7,-7,5,-10,5,-2,-2,6,5,1,9],[8,8,-3,-4,8,2,-4,5,1,-5,3,-10,-9],[-10,-2,6,6,6,2,10,3,-7,-2,8,4,-6],[9,5,10,10,4,-6,1,-2,3,-7,8,1,8],[-3,5,1,-7,3,4,9,-9,-2,8,5,8,6],[-6,5,-8,-8,10,-6,8,4,3,1,10,-4,7],[-8,3,-2,2,-5,-8,5,4,6,-3,5,-6,1]],[[10,-4,5,4,7,7,3,-4,-4,-10,-2,-2,7],[-2,6,8,-9,4,6,1,2,-5,-1,6,9,6],[2,-8,-7,-3,6,-8,-6,8,-10,5,1,5,-2],[7,-8,-3,-9,1,-1,-9,-8,1,-1,5,-10,-3],[4,-2,2,-6,-10,-1,9,-7,8,7,-6,9,-7],[-1,7,-9,4,7,-9,-4,-1,-8,-9,-3,2,3],[8,5,8,-2,10,6,-1,7,6,-8,10,-9,2],[8,-2,10,-4,-3,9,-7,-9,2,-4,1,-2,-8],[7,-3,-1,-1,-1,1,5,8,-3,2,6,3,3],[-3,-5,9,-10,2,-3,-2,-5,-8,1,6,-10,8],[-2,-7,7,2,-1,-7,-5,-2,-4,-1,-1,1,6],[6,6,4,-4,-5,-1,6,-9,-4,-2,3,3,4],[4,6,3,-7,-5,-8,-10,-2,9,-6,1,-3,8],[-8,9,-5,-9,2,-2,-2,-10,5,-1,-2,7,9],[9,10,7,8,-9,-8,3,-10,-10,9,-3,9,-3],[6,-10,7,-6,-7,-4,10,8,-2,9,4,-6,-9]],[[-9,-5,-3,4,6,5,10,-7,-6,8,5,5,-3],[3,-3,-10,-5,7,-6,1,4,-3,7,1,-5,9],[8,-3,-4,10,-1,10,-5,-1,-9,2,10,10,-5],[3,9,-1,-8,7,1,7,-8,-7,5,-4,2,-6],[1,-2,-6,-8,8,1,6,-8,-3,-10,-4,-4,4],[-1,-1,-9,-4,9,-5,-4,-8,9,-3,10,1,-9],[-6,-4,-10,-5,2,5,4,-8,3,-1,9,7,-6],[9,9,-4,2,3,1,-5,3,-10,6,-3,-2,-1],[6,-2,-7,4,1,-10,4,-5,3,-9,-9,-3,-9],[-5,-3,-1,-6,-3,-7,8,-5,-3,4,-3,9,3],[-2,-5,3,1,6,-6,8,5,6,-5,2,9,5],[2,5,2,-2,-8,6,-2,5,5,7,1,3,-6],[4,-10,-9,-3,-6,2,1,-2,1,-1,1,-2,-6],[-4,8,4,7,-1,6,1,-8,-1,-2,7,-8,2],[4,8,4,1,-3,-6,-10,-7,10,8,10,10,-2],[-7,-7,10,10,3,1,8,10,-4,-10,7,-10,9]],[[-6,-4,-7,-1,-10,6,-8,-6,5,-10,-7,-7,7],[6,-1,-9,-5,5,6,4,4,5,-1,10,-6,-2],[7,9,-3,5,-1,1,9,-8,10,2,2,-8,10],[-10,10,-1,-3,-5,7,-2,-4,6,9,-2,-6,4],[4,2,2,10,5,-1,2,-7,-3,9,2,-5,-1],[-9,-1,-4,5,-9,-9,-8,-2,5,4,5,10,9],[1,-4,-10,9,6,-8,-1,-9,-8,5,8,4,-1],[-9,2,5,-1,8,-2,7,-2,2,-2,4,-9,-9],[-8,-9,9,9,8,-7,-5,-2,-1,4,4,7,-6],[-5,9,-4,-5,7,4,7,2,-1,-10,3,-2,7],[4,1,6,-6,7,3,4,-8,-7,-10,-3,-5,6],[6,-6,5,10,9,1,2,-5,2,6,10,6,-2],[1,-2,7,8,-5,-1,-10,-1,-6,-10,8,10,3],[5,10,-6,7,9,-8,-7,-9,-5,9,-9,-9,-5],[3,8,7,-3,3,9,9,-3,-6,-1,-9,3,4],[-2,-3,9,4,1,-3,10,6,-5,9,6,-8,-2]],[[3,4,1,10,5,-9,-7,2,-7,-7,4,-9,-1],[10,-2,-8,-10,-2,-10,-5,10,-6,6,-8,-10,5],[-6,-9,-1,-8,-5,-8,1,-8,-10,8,8,-8,1],[7,-8,7,9,3,-9,3,-9,9,-2,-3,-9,-4],[-2,-1,-8,-4,1,2,-9,9,6,-2,-4,-7,7],[9,-8,2,5,4,-10,-10,4,-10,-7,-1,-1,-9],[3,3,5,-5,-7,4,-8,7,-1,-10,9,7,7],[8,-2,-4,3,6,-1,1,-8,2,-7,6,6,-10],[4,-10,7,8,6,-4,-9,-7,1,-8,6,5,-9],[-9,6,9,-9,10,10,5,2,-7,10,-3,5,-10],[-1,2,5,-6,-3,1,-5,-7,-9,-3,4,1,-5],[6,6,-8,-10,-9,-4,-6,-2,-8,-5,4,-7,-4],[6,-4,-8,10,6,-2,-10,1,-6,10,3,-4,3],[4,-4,3,-4,2,7,7,-2,10,-10,6,10,-3],[-2,-5,5,-6,-10,3,-6,-7,7,-8,4,2,1],[-9,2,7,-1,10,2,6,-3,-5,4,-3,7,-1]],[[-9,5,1,-4,8,-8,2,4,3,5,9,-6,3],[5,1,8,-10,-4,9,-3,-7,-5,-8,6,-10,-9],[2,-3,5,2,-3,7,-5,4,9,10,-10,-7,-3],[10,-4,4,4,-1,-5,-6,3,-2,6,-2,-5,3],[9,-4,2,8,4,-4,-9,-9,7,-3,-1,-1,-2],[4,-7,-3,-6,1,-10,8,10,2,6,-6,-9,3],[5,-8,9,4,-10,4,-3,-6,3,9,-5,-7,-4],[-3,-1,4,-2,-2,-6,-9,-5,-2,8,-1,3,6],[-1,-10,5,8,2,1,6,-7,10,-9,-8,3,-3],[9,-4,-8,10,-10,3,-1,1,1,5,-2,-3,-10],[-5,9,7,6,4,6,1,-1,7,-1,3,-8,7],[3,-2,-1,8,-5,-7,-8,-4,-7,2,1,-9,8],[2,10,5,-9,8,1,9,3,-8,9,5,9,3],[7,-10,-5,10,-4,-1,-3,5,5,2,2,-8,2],[-6,-1,10,-10,-4,5,-10,-10,-3,2,-6,2,6],[10,4,7,4,8,7,-6,-2,-4,9,-5,-8,-10]],[[3,-4,9,-3,5,-2,8,-3,-7,6,10,-2,-6],[3,4,-8,-9,-6,-4,1,8,8,-3,-3,-10,10],[10,10,8,2,1,9,-2,-6,3,-8,1,9,9],[-4,4,10,5,2,7,5,3,6,10,-2,1,6],[-7,6,8,6,4,-7,-8,-2,2,3,-1,1,-2],[4,4,-7,-4,9,-5,-5,-3,-7,1,5,5,9],[8,-9,4,4,-3,10,-4,-9,-4,-7,7,7,3],[1,2,6,-1,-10,8,2,-5,-9,1,-9,2,-1],[1,-7,2,2,8,-3,3,-4,7,2,-8,2,-7],[-4,10,10,-3,-6,4,8,6,-3,-3,9,2,-2],[2,-2,5,-10,1,-6,6,7,10,4,-7,6,-3],[-7,-6,-7,-3,9,-5,4,-8,10,4,4,5,1],[-4,-1,2,1,-9,8,9,1,-6,-2,7,6,1],[5,-7,-7,3,-7,-6,-5,-9,6,-2,-4,3,-1],[-9,-2,-9,6,5,-9,9,-7,4,-7,-7,-3,-9],[-7,6,-3,-7,5,5,-5,3,1,10,7,10,-1]]], dtype = "int32")#candidate|5137|(9, 16, 13)|const|int32
bop_5138 = relay.bitwise_and(var_5136.astype('int32'), relay.reshape(const_5137.astype('int32'), relay.shape_of(var_5136))) # shape=(9, 16, 13)
func_4195_call = mod.get_global_var('func_4195')
func_4198_call = mutated_mod.get_global_var('func_4198')
var_5145 = relay.var("var_5145", dtype = "float32", shape = (1352,))#candidate|5145|(1352,)|var|float32
call_5144 = relay.TupleGetItem(func_4195_call(relay.reshape(var_5145.astype('float32'), [1352,])), 1)
call_5146 = relay.TupleGetItem(func_4198_call(relay.reshape(var_5145.astype('float32'), [1352,])), 1)
func_3672_call = mod.get_global_var('func_3672')
func_3674_call = mutated_mod.get_global_var('func_3674')
const_5154 = relay.const([-4.734535,-1.187898,-0.632127,6.452636,-7.671369,4.071186,-3.604660,0.232275,1.641514,-5.678522,3.891742,9.096520,-4.258401,-2.956189,5.589323,9.166872,-3.237481,-4.562361,-6.075061,-6.249412,7.845069,7.081281,-4.126442,9.034899,-2.368783,2.028855,3.155895,5.817606,9.727927,6.423647,-0.009347,-6.728484,2.036038,-1.822791,-0.307392,-2.192593,-9.469073,8.399632,-3.574838,-1.873077,-5.840671,0.068924,-2.423249,-1.547385,-7.260590,-3.523849,-9.336158,7.007362,-8.826982,-6.818385,-7.980989,-5.887488,-9.480182,1.032894,-6.196952,6.390238,-3.190444,3.852433,5.876018,-6.036977,1.595198,-0.333238,-9.057445,0.648619,9.012151,2.821408,-2.355420,-2.210998,-7.743362,-5.296123,-7.824364,9.410499,-6.007395,9.042824,-4.221808,6.597168,5.145846,-6.920575,7.753381,-2.020973,2.723295,8.515543,9.806248,-0.017126,4.846341,-0.485954,-8.148277,-4.963295,-6.636272,-8.007418,-2.093550,5.907866,6.783950,1.100576,9.366680,-1.493923,6.715761,9.983697,2.183307,-0.745386,-8.714429,-3.612924,2.880423,3.108083,8.013264,-8.690505,6.086532,9.361995,9.230512,5.558317,-1.501179,3.340835,7.572488,-3.074512,-0.604336,-0.780524,5.025615,5.469031,4.424069,2.954623,-8.892728,-7.883858,4.027929,8.216405,-3.314828,9.093825,-4.398787,8.861959,0.820019,-8.667790,-2.495763,-7.246748,-7.882559,-1.457554,-9.935253,-8.532822,-0.137725,-4.466979,-1.861121,-0.646843,6.117274,2.566726,0.563639,1.185838,-5.690917,-0.020488,-0.001637,-2.951534,1.091463,1.691623,-7.893346,-6.600391,-4.975514,-9.446816,-2.091492,-2.194861,0.135518,8.648146,-1.476193,4.126809,7.798585,6.855276,8.279215,-5.622117,0.700685,-0.925619,6.752366,-5.498336,-3.211010,-7.688830,7.886021,-1.526600,-6.063690,2.469543,-9.557972,6.406640,1.497664,-3.580674,-3.531383,0.237519,-5.392917,-7.113220,-8.198533,4.528017,2.776289,-7.850984,-6.710798,0.502292,-7.705187,6.621754,-8.240848,-9.159395,-9.275006,-8.883701,7.459980,-6.983065,6.591036,3.994617,6.956932,-4.407245,-2.701115,2.318224,3.648653,7.300285,-0.959379,7.589974,5.739656,-7.701118,-4.994702,3.892199,-4.074022,6.715730,-2.989476,2.997377,7.611814,-5.911204,-6.521005,0.218334,6.989853,-9.393566,6.669386,-0.704827,6.488563,-6.332767,1.699132,-6.521897,1.694514,6.825470,-4.480860,9.760828,4.143587,-7.902459,-8.553985,7.554344,-6.276096,7.363819,1.655026,4.830995,-4.693839,-2.171003,9.746200,1.520877,-7.096989,-3.167534,0.159899,5.983996,5.305334,7.330358,6.675711,5.458745,-7.325431,7.123609,-6.345877,-6.905861,5.280435,-7.340054,5.920428,5.988518,6.195983,2.406531,-5.494546,7.406760,-8.483890,1.531181,2.727915,2.711539,9.631439,-5.519351,5.679897,-8.254260,1.944769,4.573701,-0.496533,4.218352,-5.194716,-5.861154,0.471688,0.659154,-2.027974,8.191177,1.390939,7.831141,3.281966,1.387945,5.692598,8.536839,-6.594288,5.034400,-1.521091,-1.503765,6.136109,3.918115,-5.951532,-1.118694,3.577531,1.246052,2.511032,3.588529,-2.474862,0.149307,-8.623490,-1.542749,-1.339737,1.912454,-4.907801,2.021260,-2.911550,-3.346001,6.451138,-1.430434,-7.908182,-4.036926,-0.683338,0.102296,-9.245486,-0.976702,8.822816,1.713053,7.889151,-8.062038,6.567659,9.396067,-4.545673,-1.266566,3.789324,-7.423577,-4.450328,2.495296,-0.632675,2.479640,0.411258,5.693585,1.835886,-4.275969,9.742783,-9.425695,1.089688,2.029053,-0.054701,5.417732,-7.426641,1.645471,-6.656565,2.822475,0.719779,2.496637,3.364025,-3.893659,-2.555332,4.026892,2.311265,-1.676799,9.112419,0.428342,6.302413,7.879143,-8.660919,1.992355,1.365524,-2.114927,7.962030,-8.326178,-6.609017,7.900009,1.472581,9.860643,8.314285,8.826836,0.335819,-2.424470,-2.989371,-7.520167,-9.305878,1.105722,-0.999462,3.853420,-6.012097,-5.297390,-9.701226,4.362363,-9.819314,-2.454977,-8.069267,3.656349,-1.515465,-4.532531,8.273645,-0.879590,-9.622140,-9.359770,2.713758,8.103311,3.065596,-1.107936,4.830688,2.353575,-2.190597,3.045295,-6.060119,-4.238385,-2.135875,3.583806,6.314707,-2.830843,9.200312,1.669009,-0.009108,-8.227771,-5.180486,3.918044,-6.510133,-7.165307,-1.984827,7.625875,-3.625951,-6.773840,7.661693,-0.142979,9.689955,-0.305444,4.722630,0.636775,-4.007482,5.467668,-8.250653,4.372868,-3.062712,-3.592072,5.812952,5.723923,6.695026,8.748058,5.381675,-4.765939,-1.187567,1.976906,-7.729127,9.717383,7.428619,1.655136,9.892906,-0.211007,-7.401931,-4.070301,3.351406,9.027494,1.801698,5.835031,8.775767,3.609787,-1.044677,1.619769,2.146183,-2.837438,-2.695318,0.306544,-7.154745,9.976663,-4.619264,-9.969704,6.106023,-9.212160,-4.918433,4.426800,4.167568,6.395154,2.626904,-0.453568,7.622013,0.464229,5.643262,0.791552,1.638752,-2.776990,4.760368,8.570632,6.593781,3.755996,0.764845,4.031150,-3.342170,-6.571609,4.785116,-1.590182,7.987043,-2.573671,-2.366157,-8.202873,-6.050066,1.702431,-6.410597,-6.140041,9.620343,8.536738,-4.524252,6.903990,-0.800509,1.045678,9.387236,-2.158180,0.230680,7.476802,3.029934,7.096608,-1.536918,5.871674,8.614757,-1.166657,3.921220,7.816123,-4.951341,-6.114593,9.222540,9.080512,-2.215053,1.045864,-4.476420,4.303309,9.063424,-5.923471,-1.221202,-6.163308,2.329856,-7.432342,-6.832294,0.445304,-1.017886,9.881128,8.518592,-1.573917,2.154332,0.659655,-3.312194,6.260412,-8.795750,-8.166201,8.233398,-1.384566,4.156354,6.550470,7.358876,6.073296,9.154396,0.926262,3.632601,-7.389828,7.975662,-2.551212,-6.295160,3.388240,1.087095,8.558623,-0.682804,-7.790292,-7.333636,-7.785603,-8.440811,-4.333402,-4.415413,-1.702089,3.577805,-0.322872,-4.531306,6.031296,-4.298019,2.114751,-9.499978,-5.192727,7.373531,-6.242466,3.298357,6.791610,-3.189766,5.458924,2.216377,-9.042876,-8.327959,5.236949,-0.742836,4.695469,-4.643695,-2.197974,-6.338594,9.078353,2.765563,9.779012,-8.198149,-6.465962,-6.510723,-3.847208,9.750374,5.886848,5.924746,2.815103,7.260114,3.592922,1.250427,-5.583747,-8.036774,4.622312,6.252525,-4.309151,8.403058,0.802504,-7.000077,7.072734,-7.182909,3.117845,-7.454524,4.936409,-3.111033,4.312885,9.832832,9.253365,3.792465,7.962652,1.372685,5.801371,2.381063,4.365633,-9.298116,2.961913,5.004223,-1.956532,5.127506,1.208714,-7.305425,-7.962914,-9.828572,-8.555102,-8.286758,-2.242357,3.731795,7.527202,-7.081671,4.149761,3.075591,-7.841063,1.097709,-2.068711,-3.767711,-7.064166,-3.709672,-6.690376,-4.885972,7.175561,7.625668,0.978143,3.359582,4.048788,7.415792,-8.555905,7.360128,5.057144,1.151499,-2.138034,9.784921,2.499545,9.282143,-6.619782,-3.919329,-7.446157,0.456187,-7.157021,-9.186863,0.061965,-5.053817,4.038074,-0.951996,4.933398,-4.915985,2.191830,-4.977559,-2.579842,3.423691,-3.119265,-5.147214,8.437129,-3.567535,-4.425436,6.879887,-7.803598,8.359387,8.999945,-8.761179,8.868467,-6.275591,-0.944460,1.559173,-9.000843,6.184564,-7.613299,-8.083708,9.780539,-6.556293,6.975114,4.956003,2.195011,6.286507,-3.341820,0.907395,4.607643,4.325686,3.925147,-3.453126,4.299743,-6.364170,0.632754,4.297174,6.356729,-6.532572,9.952287,-8.768702,-3.876662,2.934093,2.279266,-4.121158,8.911755,-8.566925,5.363857,-4.058008,-9.927184,-6.866442,2.438895,-0.249550,9.232789,-7.363198,9.662747,-8.376311,-5.915786,-9.338125,-2.121649,-5.274534,-0.999593,-9.263535,2.300175,-9.041926,6.723012,0.218307,-9.885448,6.308259,-9.973319,-9.042614,-7.012508,4.407229,9.974691,-7.704865,8.206048,6.650452,0.882357,6.456601,-1.868833,-9.938679,-2.837313,4.004703,-4.639793,0.060840,-0.434403,-0.849593,-4.462917,7.796590,3.340763,6.026759,5.267716,9.948377,4.779711,0.908207,-7.702068,2.774509,-5.681216,-4.553736,-5.255133,9.329199,2.936868,8.600323,-3.744901,8.713214,3.512014,-4.988294,3.464686,8.131937,-9.882245,6.931404,2.458885,2.239921,6.198393,-9.258928,1.339560,-4.148806,4.179256,-5.231672,-8.777276,9.136416,3.836730,-3.597341,6.160216,3.478475,2.294896,1.525328,0.861781,-5.649898,-0.512366,-8.826429,-8.194138,-0.424000,8.510047,7.091620,7.485140,5.329851,-9.985800,4.203364,5.432645,9.800908,3.669997,6.360898,-8.614532,7.210370,-4.434488,-1.653779,-5.630465,-5.692682,-1.113283,-4.770677,1.093288,-5.653443,0.230375,4.087466,-3.344648,6.095159,9.730580,-6.294209,-3.078495,-8.940376,-7.637481,-4.258959,-9.778912,-3.197788,-8.646362,-2.646737,-9.645169,-4.360790,-5.617671,-3.540015,-4.351748,4.609683,8.916347,2.492098,8.853821,-9.656835,4.512545,8.487356,-8.156554,-4.315301,-7.009153,-7.675807,7.532765,-9.059010,-3.426697,-5.829372,6.710950,6.343881,4.671058,-8.196868,-1.683896,-8.174559,7.251295,7.129098,7.075089,2.782232,-9.860756,-5.570098,-6.311505,-8.188284,-8.091725,0.951560,-7.850150,-5.764225,-9.804484,-4.650238,3.883911,-9.523157,-6.157225,-4.486310,8.958842,7.572640,7.986435,1.394312,5.759026,7.192803,-8.734621,3.849970,1.457246,-1.011972,-4.311015,-3.924451,-0.914952,9.240880,7.091138,-1.102582,7.798072,-8.279804,-0.022660,-1.100432,4.549348,6.509307,-1.300390,-6.476619,-3.364838,8.728543,-4.595182,-0.213015,-5.910151,9.058224,-4.431240,-3.758243,-9.294073,-8.165872,-1.238898,-9.091304,-5.075548,8.049559,-5.036174,-8.078621,7.607521,5.269979,-2.026926,-9.824827,4.452890,-6.686691,5.589206,3.854265,7.356554,-8.048104,-5.338077,-0.314228,-3.443552,-6.553132,6.706245,8.696111,-8.565838,-2.551070,9.757856,-9.913599,9.808541,-2.149767,1.099922,-5.947736,6.269152,0.172417,6.089031,6.459057,0.550286,-5.312328,-7.707457,0.359217,-3.709262,9.403677,-3.226059,6.800587,-3.057640,0.743234,8.007325,9.893909,-4.527966,8.762359,-6.273487,-3.184111,-7.336880,-7.872503,-6.567410,4.827869,-1.774114,-2.926412,-4.787671,-2.027648,8.958103,3.157205,6.297580,-0.439382,4.692095,4.863469,-5.628896,0.013478,-9.977652,0.795332,-6.541732,6.144275,-9.834727,1.410260,4.857836,8.317179,2.996632,-9.458814,3.293480,6.038109,-7.589535,-0.167756,-0.220418,9.498134,-7.369867,9.741747,6.111566,6.903338,5.702619,8.864106,-9.205031,3.656816,5.381244,-1.017616,-2.605757,4.368553,-3.296471,3.248150,8.373011,3.990517,-5.783172,-7.016017,3.314957,6.363107,8.594419,-5.155371,2.961929,6.945602,0.692612,-8.294153,4.044342,-9.475289,1.435620,-1.474672,-7.380339,-0.314916,1.064583,-3.976636,-8.873629,0.253800,-7.160405,4.417791,3.315453,-1.436195,-4.965454,4.973357,-2.278948,7.543701,1.382009,0.189844,8.353235,-8.330304,-0.769144,-2.713024,-9.288519,-0.620117,7.069284,9.476725,2.351971,4.430985,-1.831943,5.968905,-0.271586,-9.060666,9.657868,4.525168,-8.909678,5.095771,-3.939156,9.789607,2.874131,-2.966656,-3.909479,5.760458,5.035942,6.017140,9.337630,0.652904,-9.348061,-0.503664,0.158588,-8.919765,8.985160,-3.325994,0.334268,3.065603,-9.225064,2.346276,0.353842,-6.471229,9.983728,-2.628525,-2.071537,-9.519784,4.634329,-8.303616,-3.065232,-5.999538,-9.224307,-5.944335,9.104432,-1.111298,2.835453,-4.188812,8.596792,4.730377,-8.147445,2.935424,9.675309,8.109822,-1.335385,7.870917,0.955677,6.805091,3.349910,0.587434,7.289842,-1.583675,-7.652495,4.458523,8.791484,-6.235262,-2.973108,-4.229570,-1.007310,-9.339532,-7.880666,5.466032,-7.384516,2.482713,-7.792327,-9.118005,7.120568,-9.125498,6.310574,4.930072,4.400934,-0.146786,5.514987,9.403419,0.599264,5.025726,-8.467575,2.107543,1.234489,-3.912713,6.902510,1.144955,7.563156,-4.233995,0.243875,3.927908,-8.507336,-4.306561,-8.917870,3.354589,6.497020,7.117013,6.635963,-5.928356,-4.658900,2.751789,4.024837,-7.972448,-0.792269,0.804030,-7.124462,-5.211882,7.735225,-0.202865,4.919433,5.998605,-1.696550,-1.947830,8.370980,-8.836156,7.146797,6.610767,-3.204774,6.085323,5.055848,-3.834663,8.471486,-7.413187,8.075713,-1.560030,-0.520999,-7.677315,0.935177,-6.124658,4.660032,-3.359110,-1.367726,-8.391074,3.578770,-3.613576,-9.236805,-3.787512,6.612011,-3.545338,8.060453,4.566587,-7.766761,2.897819,-9.234691,-3.741378,-6.272815,-1.178869,3.987486,-8.302338,-8.835986,7.822697,6.600403,-2.731969,-2.191058,-6.728293,-4.648154,5.992151,5.886895,-9.165918,-5.445748,0.435251,3.487716,-4.258151,-1.383697,8.766286,0.508617,-6.196727,-9.054962,6.546535,7.128267,-2.042600,-7.560356,5.871035,-9.024846,4.120175,-4.052561,-1.948570,6.580792,-6.346774,7.037436,-4.331121,-1.566126,5.161538,-0.844369,6.205374,-2.007984,1.028442,7.317843,-1.482187,-8.953487,5.669685,2.366029,-4.393129,-1.700328,-3.800193,-3.451662,-9.370344,3.554661,7.645721,-6.052280,-9.575580,-1.143949,7.327546,-9.795081,-7.684444,-7.404478,5.586912,7.734183,-3.015199,6.884718,2.317324,2.681752,-8.761244,7.925043,-9.853500,2.261237,2.692707,-9.273525,2.543744,-3.319756,7.456960,9.462858,-2.613417,-7.105677,-2.011151,-5.928955,1.799386,9.345385,-3.190945,9.886924,6.656883,3.594088,0.790525,5.683473,-9.105772,-1.779464,-2.256064,8.874325,-1.539528,9.169615,7.731772,-3.033419,-4.345483,-8.948329,-8.400290,6.867163,-6.735502,-7.266428,0.987492,1.505778,-4.428187,7.735181,2.017052,7.998524,1.698443,4.321203,-3.834505,0.527488,0.739211,-1.550039,-3.794312,2.111078,-0.462452,-2.348607,-8.110986,-9.696587,3.470294,8.306876,-9.983346,-0.927376,-0.020291,-7.169971,9.876614,1.627344,3.221922,-2.266229,3.726853,3.758504,-2.873340,8.036014,8.495115,8.427147,-4.113804,7.139275,8.625882,-9.208807,2.590827,0.368909], dtype = "float64")#candidate|5154|(1344,)|const|float64
call_5153 = func_3672_call(relay.reshape(const_5154.astype('float64'), [8, 12, 14]))
call_5155 = func_3672_call(relay.reshape(const_5154.astype('float64'), [8, 12, 14]))
const_5159 = relay.const([[[2,-5,-4,8,7,-6,10,7,-9,2,8,-4,-7],[6,9,-3,-9,-7,3,3,-9,-4,-2,-5,-5,-9],[-8,5,7,7,-7,-8,-1,3,8,5,-4,-10,-2],[-9,3,2,-2,-7,8,4,6,-2,-7,-2,-3,-6],[-6,5,-1,-4,4,-6,-3,-5,6,-4,3,9,3],[7,-6,2,9,-9,4,5,-7,4,3,-1,-9,1],[-3,2,-2,3,-1,-2,-4,1,4,6,6,-3,9],[9,-9,10,3,-9,10,-4,8,-1,9,-10,7,-6],[8,-3,-3,7,-1,5,6,10,7,6,2,-10,1],[-5,10,3,-3,6,-7,2,-7,-3,-3,10,-6,7],[-8,-10,1,-9,-9,8,7,1,-5,3,10,-7,-8],[4,7,-4,10,-4,-1,1,-3,5,-1,5,9,-7],[5,-3,3,9,-1,-5,-6,2,-1,-9,-10,-6,1],[6,-9,-3,7,9,5,1,10,-7,-4,6,-1,-10],[9,3,-7,-2,-2,-1,2,10,-8,1,5,-6,8],[4,7,4,8,-8,6,1,6,8,4,3,-9,1]],[[4,-4,-9,4,2,4,5,5,3,-9,2,6,7],[9,8,1,9,-4,4,6,6,-6,-3,2,8,6],[-1,7,4,4,-8,-3,2,5,7,-2,1,-4,8],[10,-7,8,-9,-6,1,-6,-6,-5,-10,4,2,-2],[3,-9,2,-9,-8,-7,-9,3,-4,8,9,10,-4],[9,-2,10,5,-6,-3,-7,1,-7,8,10,-8,-6],[10,8,-10,-1,-6,-8,2,-9,9,5,10,10,-3],[-2,9,-10,3,4,-3,-6,5,1,7,4,7,-6],[1,-7,-8,-5,-4,-7,-3,10,7,-4,-1,-2,6],[-6,5,-10,-2,1,5,-7,3,7,7,1,-5,-6],[1,-9,-4,-9,-9,-5,7,8,-4,-2,1,2,-7],[1,9,2,-5,-6,-6,-8,-6,-3,-7,-5,-10,-9],[-4,-10,-5,5,-10,3,-8,6,3,-8,-5,2,-3],[-4,-1,5,-5,8,-8,3,2,7,4,-3,-7,4],[1,5,-2,-9,5,10,-1,-9,1,-8,9,-4,-9],[8,7,8,-9,-4,-6,-3,6,-1,2,-5,4,-8]],[[9,6,9,3,-9,4,6,10,-10,2,-8,3,3],[-3,-1,1,-2,-7,-2,-7,-1,-8,8,8,-3,-5],[3,1,8,-2,6,9,10,-1,6,1,10,4,-9],[7,7,1,2,6,7,-8,-1,10,-3,-4,-10,8],[-8,9,9,9,10,3,-1,9,-9,10,-4,-3,-3],[7,4,3,-8,-9,-10,2,-8,9,4,-9,5,-2],[10,-7,2,6,9,-10,-4,5,-7,2,-2,5,1],[10,3,-6,-9,8,6,1,-5,-4,10,-5,-8,10],[-9,9,-9,5,-3,5,-3,7,-8,5,-7,-4,-2],[-4,5,-2,1,4,10,-1,2,7,10,-3,10,2],[10,-6,5,1,-6,-4,-4,-4,-10,9,3,-5,10],[3,-7,1,1,10,-9,-5,3,9,-10,4,-10,-9],[-7,-7,-2,8,5,9,-7,5,-9,9,2,3,-3],[-9,8,-7,10,-3,-6,6,-2,-9,-3,5,5,-7],[-3,8,-5,-8,-2,-7,1,-9,-3,-8,7,4,-2],[-3,4,-5,-10,5,-9,-8,10,-5,7,5,8,-7]],[[-1,-6,-9,-3,1,-1,10,-6,-1,-1,-2,-9,10],[-1,7,3,10,-2,-10,-3,4,10,10,-2,10,1],[10,3,5,-10,3,-2,-5,-3,1,4,9,-9,1],[3,7,-5,3,-8,-3,1,-4,-10,-9,-1,-8,8],[-10,10,8,-7,7,-1,10,-9,10,1,-4,10,-6],[6,8,3,10,-1,7,3,-10,4,-6,4,-2,-7],[-8,2,9,-7,-1,-7,4,-9,-6,4,-7,-7,-9],[10,-8,10,5,9,7,1,6,8,5,-10,-10,-8],[-3,1,-6,7,-7,9,6,-7,5,2,-5,-1,8],[3,10,-6,-6,6,7,7,10,-7,7,-9,2,-4],[-4,9,-8,9,-6,10,-1,8,-2,5,3,8,5],[-10,1,-4,-1,-6,-9,-7,-9,1,-7,-1,3,1],[-7,6,8,-9,-2,-3,-7,-3,5,3,9,7,2],[5,3,3,-6,-10,-7,-3,-3,3,7,-8,6,-6],[7,10,-1,-5,10,-2,7,1,2,-4,-2,7,-10],[10,6,10,-9,-3,5,5,-7,4,-3,-9,-8,-2]],[[-9,10,1,7,7,-3,8,-9,5,10,10,-8,-8],[-10,10,-9,-8,-10,8,-10,-3,-3,8,-5,3,7],[-3,8,1,-10,-7,-2,5,-6,7,7,-9,-4,2],[2,-9,1,-3,3,-7,7,-1,1,-10,2,4,-1],[2,2,7,9,2,-5,-9,8,-3,-1,5,4,-8],[-5,6,5,-1,9,-10,1,-8,-6,-7,2,1,-6],[-5,2,-5,-8,-10,8,-2,7,-5,4,7,10,-8],[3,8,-6,2,-8,4,9,-1,-7,-3,-2,5,10],[10,5,4,7,-9,-3,-10,9,7,10,-2,10,1],[4,10,7,5,5,-2,-9,5,4,-5,1,-9,-1],[-8,-8,2,5,5,-1,-4,8,-1,8,1,3,-5],[9,7,-8,-10,4,-6,6,-2,2,5,3,6,-6],[-3,4,-5,-5,4,7,-10,8,1,9,-10,9,-10],[-5,-4,-5,10,-9,4,-9,-7,-2,9,-3,1,4],[-3,-9,7,-9,-5,-8,-6,1,-10,8,-7,4,-8],[8,9,3,7,4,7,5,-10,8,1,-5,10,-8]],[[-4,2,-9,3,4,-9,1,-7,9,-2,-6,-6,-10],[9,6,6,2,-2,-10,-1,5,9,5,8,-7,-4],[3,-1,-1,-4,10,5,-9,4,-5,8,-9,8,1],[8,6,-5,2,-3,-8,7,6,1,2,9,-4,-9],[-1,5,-5,-2,-6,10,-2,-10,2,10,3,5,1],[-3,8,6,-1,1,-7,-6,9,1,-1,-4,2,10],[7,1,1,3,-7,9,9,3,7,8,-7,9,-4],[10,-9,1,8,-4,-7,-8,-5,6,1,1,-9,3],[-10,4,7,1,-6,2,6,5,-4,-10,2,-4,-5],[10,-5,-2,5,-10,1,8,4,3,9,-3,-3,-3],[-1,7,-1,-2,9,-1,9,5,-3,-9,-5,6,4],[-7,4,-1,7,1,-4,6,6,-6,-1,8,5,2],[2,4,-1,3,10,-2,-2,7,-7,-7,-10,-9,5],[-6,5,-2,8,-4,-6,-6,-9,-5,1,-4,5,-1],[-6,8,8,-4,4,1,-2,4,-10,-6,9,1,-3],[8,8,-7,-2,8,10,4,-7,-9,9,-9,-2,-9]],[[8,10,-5,-1,2,9,-2,-5,-6,10,5,4,-3],[-5,10,7,-6,-9,-7,-5,-8,-2,-1,7,-7,3],[-6,-8,-2,3,8,9,-7,4,1,-3,-6,-1,2],[-4,-7,-1,-4,2,-1,-7,5,3,-4,-5,8,4],[-3,-9,-5,3,10,4,2,-9,1,2,-1,7,1],[8,2,-5,9,9,9,-5,-6,4,-5,9,-10,-1],[5,6,-1,-9,-6,-7,8,-8,-8,5,-2,-1,1],[-2,-2,-10,10,-7,10,-6,-10,-3,9,-5,-4,2],[-9,-4,5,-1,-8,6,-9,-3,-10,-7,-1,9,2],[8,6,6,5,4,-6,8,8,-6,-10,-3,-5,1],[3,-6,5,2,8,-5,-8,4,5,-1,-10,9,-5],[10,-5,6,10,2,9,-7,4,9,-4,-9,7,-4],[-7,6,-5,2,7,7,-3,3,5,-7,3,-2,-9],[5,-10,-2,2,-1,-6,7,2,-1,3,6,-5,8],[9,4,-2,5,-8,3,8,-6,-6,8,-7,4,4],[-7,-3,6,8,3,10,3,4,9,7,-6,8,-10]],[[4,4,-4,-8,7,-2,-5,6,2,3,-5,-9,8],[7,1,1,-3,-5,8,-5,-7,-2,3,-8,-7,-10],[5,-9,7,1,5,-3,-8,7,-10,-5,-1,-1,-6],[9,2,-8,-1,2,-4,5,-6,8,-5,-2,-9,-3],[-5,-5,5,-4,5,4,10,-5,-8,4,9,7,-8],[10,-7,8,-9,-3,-10,1,-1,-3,-10,7,-9,9],[-6,-3,-5,-2,7,-4,-4,3,4,-9,-9,-9,-1],[5,9,9,2,10,4,-10,1,-9,1,-10,6,-1],[2,-1,6,4,-2,1,-4,9,-2,-10,7,9,-1],[-4,-8,1,-4,-4,8,6,-4,2,-9,-7,4,-5],[7,8,2,-5,6,2,-8,-10,8,-6,4,-10,9],[-5,5,3,-5,9,2,10,10,7,2,-6,-5,3],[-8,-6,10,-1,1,-6,6,6,9,-7,-9,9,-6],[-2,-7,2,-7,4,10,-4,-3,9,-6,-9,-8,6],[-3,-9,-1,-9,5,4,2,1,5,-4,8,8,-6],[-10,5,4,-2,6,1,4,9,-7,-7,-2,8,3]],[[-9,9,-9,-2,7,-2,-6,-4,2,-4,-7,-1,-3],[-9,10,6,-6,-5,-6,-9,2,1,8,6,5,-2],[-4,7,7,-8,-1,-6,-1,-1,-7,-9,-2,6,8],[-1,-5,5,7,5,-9,10,-7,-4,7,-7,-6,3],[9,-5,3,-9,-10,-8,-6,2,7,-5,10,5,5],[-4,-8,-6,-8,3,-10,2,9,-8,2,-10,3,5],[5,5,-2,10,7,9,10,9,-6,-9,-10,10,8],[-10,3,6,-5,-9,-9,-7,6,2,-7,5,1,-8],[2,2,8,-1,-7,-1,8,-9,9,-5,-1,-1,9],[4,2,2,2,6,-8,-2,-5,-7,-3,2,-4,6],[-8,-6,5,-9,-3,-2,7,-4,-4,9,-9,4,5],[-3,5,-8,8,-1,5,-9,3,3,9,4,-6,-3],[-9,7,3,7,-1,2,-9,2,5,2,5,7,-5],[-7,3,-5,9,10,-6,-3,-2,-6,-7,2,-2,-9],[10,-10,8,7,9,8,6,1,5,-8,-8,5,-3],[-9,-3,-1,-4,-9,6,6,10,5,-1,9,-2,-10]]], dtype = "int32")#candidate|5159|(9, 16, 13)|const|int32
bop_5160 = relay.less_equal(var_5136.astype('bool'), relay.reshape(const_5159.astype('bool'), relay.shape_of(var_5136))) # shape=(9, 16, 13)
output = relay.Tuple([bop_5138,call_5144,var_5145,call_5153,const_5154,bop_5160,])
output2 = relay.Tuple([bop_5138,call_5146,var_5145,call_5155,const_5154,bop_5160,])
func_5168 = relay.Function([var_5136,var_5145,], output)
mod['func_5168'] = func_5168
mod = relay.transform.InferType()(mod)
var_5169 = relay.var("var_5169", dtype = "int32", shape = (9, 16, 13))#candidate|5169|(9, 16, 13)|var|int32
var_5170 = relay.var("var_5170", dtype = "float32", shape = (1352,))#candidate|5170|(1352,)|var|float32
output = func_5168(var_5169,var_5170,)
func_5171 = relay.Function([var_5169,var_5170,], output)
mutated_mod['func_5171'] = func_5171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4097_call = mod.get_global_var('func_4097')
func_4099_call = mutated_mod.get_global_var('func_4099')
call_5241 = relay.TupleGetItem(func_4097_call(), 2)
call_5242 = relay.TupleGetItem(func_4099_call(), 2)
output = relay.Tuple([call_5241,])
output2 = relay.Tuple([call_5242,])
func_5243 = relay.Function([], output)
mod['func_5243'] = func_5243
mod = relay.transform.InferType()(mod)
mutated_mod['func_5243'] = func_5243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5243_call = mutated_mod.get_global_var('func_5243')
call_5244 = func_5243_call()
output = call_5244
func_5245 = relay.Function([], output)
mutated_mod['func_5245'] = func_5245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4481_call = mod.get_global_var('func_4481')
func_4482_call = mutated_mod.get_global_var('func_4482')
call_5269 = func_4481_call()
call_5270 = func_4481_call()
func_1080_call = mod.get_global_var('func_1080')
func_1083_call = mutated_mod.get_global_var('func_1083')
var_5305 = relay.var("var_5305", dtype = "bool", shape = (60, 1))#candidate|5305|(60, 1)|var|bool
call_5304 = relay.TupleGetItem(func_1080_call(relay.reshape(var_5305.astype('bool'), [60,])), 0)
call_5306 = relay.TupleGetItem(func_1083_call(relay.reshape(var_5305.astype('bool'), [60,])), 0)
bop_5309 = relay.floor_mod(call_5304.astype('float32'), var_5305.astype('float32')) # shape=(60, 140)
bop_5312 = relay.floor_mod(call_5306.astype('float32'), var_5305.astype('float32')) # shape=(60, 140)
bop_5315 = relay.not_equal(call_5304.astype('bool'), var_5305.astype('bool')) # shape=(60, 140)
bop_5318 = relay.not_equal(call_5306.astype('bool'), var_5305.astype('bool')) # shape=(60, 140)
uop_5321 = relay.rsqrt(bop_5309.astype('float32')) # shape=(60, 140)
uop_5323 = relay.rsqrt(bop_5312.astype('float32')) # shape=(60, 140)
output = relay.Tuple([call_5269,bop_5315,uop_5321,])
output2 = relay.Tuple([call_5270,bop_5318,uop_5323,])
func_5334 = relay.Function([var_5305,], output)
mod['func_5334'] = func_5334
mod = relay.transform.InferType()(mod)
var_5335 = relay.var("var_5335", dtype = "bool", shape = (60, 1))#candidate|5335|(60, 1)|var|bool
output = func_5334(var_5335)
func_5336 = relay.Function([var_5335], output)
mutated_mod['func_5336'] = func_5336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1719_call = mod.get_global_var('func_1719')
func_1721_call = mutated_mod.get_global_var('func_1721')
call_5348 = relay.TupleGetItem(func_1719_call(), 0)
call_5349 = relay.TupleGetItem(func_1721_call(), 0)
output = relay.Tuple([call_5348,])
output2 = relay.Tuple([call_5349,])
func_5378 = relay.Function([], output)
mod['func_5378'] = func_5378
mod = relay.transform.InferType()(mod)
mutated_mod['func_5378'] = func_5378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5378_call = mutated_mod.get_global_var('func_5378')
call_5379 = func_5378_call()
output = call_5379
func_5380 = relay.Function([], output)
mutated_mod['func_5380'] = func_5380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3150_call = mod.get_global_var('func_3150')
func_3152_call = mutated_mod.get_global_var('func_3152')
call_5384 = relay.TupleGetItem(func_3150_call(), 0)
call_5385 = relay.TupleGetItem(func_3152_call(), 0)
output = call_5384
output2 = call_5385
func_5397 = relay.Function([], output)
mod['func_5397'] = func_5397
mod = relay.transform.InferType()(mod)
output = func_5397()
func_5398 = relay.Function([], output)
mutated_mod['func_5398'] = func_5398
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5405 = relay.const([[[-4.986462,3.275893,2.636211,-8.708116,4.046901,-8.795777,4.085333,2.448169,-5.613204,-4.186927,0.965756,-0.579064],[-0.458795,8.160248,9.518742,5.664712,-3.176691,6.036065,0.845555,1.318059,-0.422857,-3.227109,-6.319257,-1.962554],[-0.959304,-8.427871,-5.761522,8.801025,-3.577482,2.748307,8.467806,-3.444770,0.402132,-4.697064,4.594978,9.291122],[6.503087,-2.713290,0.543686,-9.585301,2.813716,6.995794,5.321269,7.268226,4.461068,-4.287188,5.888263,4.430685],[-7.827603,6.822623,9.843569,3.096712,-6.493915,-2.429374,-8.450478,-5.924528,5.473669,5.679880,-4.193065,5.772146]],[[-7.366887,-2.409590,-7.733508,-0.643356,5.324315,-0.675561,2.871334,4.908506,3.468759,3.484676,0.915435,-4.594069],[-0.975809,7.808146,-6.131243,-8.633896,-2.091635,-7.514814,-8.988238,1.345479,0.575740,-2.604617,5.102206,-9.914438],[-6.412718,8.845199,1.515080,-1.337440,1.916229,-8.382598,-9.760101,-1.920896,-2.356319,1.149308,-5.827189,-7.092859],[3.125430,-3.338949,3.560724,7.249225,-9.220679,3.353768,-6.507479,8.320563,4.093505,7.606931,6.528712,5.508102],[8.958171,-4.374626,8.495279,7.056818,-6.858778,-1.842692,-1.798859,0.828922,-9.220554,1.752663,-4.433686,-4.933184]],[[-0.652968,-6.241314,-9.966023,1.723719,-5.567168,3.578597,8.440716,-3.324940,-6.671906,9.896491,7.933772,9.100913],[0.871999,-7.586925,-5.108974,3.667233,2.308710,-9.513138,3.793800,0.825497,8.726696,-2.723742,4.292208,-7.143458],[6.983461,-6.391564,-5.925262,-3.823852,-9.137685,-5.980856,3.766506,-5.003504,0.248398,-1.031989,-6.507030,-8.614306],[-9.379662,-1.704558,-9.504030,3.947338,-5.927227,-6.197928,-9.803404,-1.238404,9.535982,9.483710,6.266098,9.347886],[-4.657069,7.513099,9.188777,-7.049227,-0.742497,1.448366,-1.322774,-6.510375,4.683339,1.945492,8.154705,-5.889999]],[[-2.451855,-7.193919,9.017845,-3.519760,0.422633,3.357046,-9.426773,7.224177,-1.646037,1.858783,1.410678,-1.356750],[-5.217005,-8.982724,4.226127,-5.154401,-8.647094,7.156482,0.680050,7.382746,-6.137463,0.300403,8.790237,7.815093],[-4.003154,-3.810175,6.662410,-7.922852,-8.751929,2.675172,3.270859,-1.076218,-8.791046,-0.742982,2.772932,6.986653],[-1.919217,-4.111048,7.181530,0.234924,-1.103313,4.052143,-7.220170,5.652120,8.077155,6.190437,1.469872,-6.305313],[0.911988,9.802707,9.636392,-3.670364,2.437194,6.962459,6.266274,-6.512381,-1.421615,6.563876,1.586506,8.054100]],[[2.805894,-5.785595,-1.332714,5.031866,5.156226,7.810007,6.570223,-3.369169,-2.965128,9.412641,-2.472875,-7.239981],[2.604898,-4.101515,-3.990105,0.423486,-7.109155,-5.256414,6.197471,-1.252805,-7.017578,5.331030,-6.248475,4.870743],[9.373665,-4.453534,-2.714805,-9.342198,-5.342642,9.057593,-5.575091,-0.112905,-1.007295,-5.747847,-1.964120,-7.045849],[-1.292327,-9.615801,6.533825,9.486044,-1.632202,-9.896625,-1.916915,8.782685,1.172102,-1.195331,0.059065,-2.722400],[9.783716,7.788213,-3.752551,3.584357,5.025873,3.219782,9.409263,3.703777,-5.295415,-0.414648,-1.292393,2.408803]]], dtype = "float32")#candidate|5405|(5, 5, 12)|const|float32
uop_5406 = relay.sigmoid(const_5405.astype('float32')) # shape=(5, 5, 12)
func_1108_call = mod.get_global_var('func_1108')
func_1111_call = mutated_mod.get_global_var('func_1111')
const_5409 = relay.const([-0.457441,-5.299482,-9.845364,6.620674,-8.968173,-1.333239,2.979638,-4.519114,-0.491851,0.576195,-0.831040,3.040969,4.830031,-6.435139,5.593581,-9.575458,2.737273,6.252368,-6.041588,2.750729,9.401994,4.051522,-7.063197,3.703133,-1.959477,-0.341848,-3.312316,7.322019,8.840012,7.454743,8.787057,-2.621211,-3.517132,-5.319639,1.230664,-6.792514,-1.889224,8.649394,5.455428,5.559761,0.347970,-1.894515,8.444750,3.139283,5.680006,6.585264,-6.009688,3.882572,-8.397053,-4.573060,8.596694,-0.143913,-7.160743,-9.154383,-7.382365,1.938047,6.195713,-7.660190,-4.647954,-5.169784,-0.519020,-1.017578,7.983806,5.818341,-8.990017,0.262561,-3.037968,3.865239,9.597787,-6.606833,0.621834,0.053722,-4.982970,3.265644,-5.504731,-9.084732,5.395508,9.116390,2.886132,-8.980313,-8.032575,8.589557,-4.811843,5.418065,8.122760,6.552407,-1.914450,2.100131,-0.216668,4.155636,-1.088561,5.580502,-4.903319,1.880725,-3.189750,2.828183,1.843633,7.148471,6.984541,-1.424770,6.708413,5.990517,-5.442785,-2.974494,8.901940,0.298174,8.044956,-6.409960,-1.167370,8.334409,1.524180,6.181707,-4.466009,-5.390873,-6.292625,-6.751359,6.273919,7.407199,-2.329923,-5.214648,5.187816,-9.558032,0.873225,-2.611191,-4.742286,-0.151513,2.956179,-3.105209,-7.819787,6.831755,5.086819,-6.894994,-8.044659,2.883796,5.533744,-4.937557,4.463897,-5.799954,7.131649,-4.426933,-2.237810,-2.137850,6.976691,7.893192,4.126419,-2.298668,-6.046437,5.997182,-8.911028,-8.094753,4.336304,-7.299914,1.593519,5.572076,1.660228,-2.421938,-8.180379,9.630137,5.239744,0.466119,-1.332592,-2.146270,5.351064,1.502524,-3.220568,0.043114,-9.243295,-9.199981,-5.497834,1.506854,-5.586591,-0.920141,-1.235379,-3.214204,-5.305430,-8.487034,3.303684,-3.395795,6.007508,-8.292930,8.713207,9.288580,9.142002,1.811852,0.890496,3.252763,-6.342161,-4.217953,-2.350892,-9.637218,-2.885452,3.459268,2.080931,-5.056706,6.029668,-9.591957,0.355963,-4.410966,-6.046295,-8.088233,-3.254553,2.453574,6.179467,8.424657,-8.557025,1.479882,1.320571,-2.921777,-2.811048,7.422644,4.917823,-8.847891,7.388414,6.074877,-0.045725,9.065538,7.948978,4.952888,-4.716944,-6.480803,-1.768284,1.839234,-4.001155,7.952565,8.894221,-2.885980,-5.404323,4.481428,-3.705592,4.368087,-1.902339,6.607887,7.111621,3.399177,-3.765781,-3.742992,5.987203,-0.901387,8.177952,-3.128433,-1.079181,8.955330,7.905166,-9.009092,3.703278,-4.299993,-0.697805,-2.446915,-5.844597,0.142938,2.063403,1.694903,6.881573,3.000009,7.220982,5.898734,-1.086713,2.590499,2.586762,3.444265,7.841055,3.332503,-7.205783,-2.656342,9.080422,6.440191,6.580602,7.790971,-6.663407,-2.321774,-2.542074,2.957577,-1.434424,-6.972885,-5.845921,2.078708,3.912137,0.233423,-1.861358,-3.014918,1.618932,-8.871338,-7.524757,3.995741,-8.988950,0.093027,-8.235710,-7.941272,2.410682,-2.989620,-2.572730,5.762867,-5.131879,3.514906,-3.864103,-4.965009,0.362537,6.999385,-3.143527,-6.791395,-8.797822,5.797863,-0.866510,7.238970,-3.240094,0.036638,7.820360,-5.766750,2.685624,-8.790126,0.567574,4.777769,-4.523253,6.114726,-9.877075,6.420629,0.394215,8.901908,-7.587764,3.288375,-3.168414,-1.925554,9.659950,-7.689406,-7.245607,1.378912,4.838522,7.752165,5.051093,4.781447,-9.255169,-1.867204,6.520788,-9.167166,-6.286720,3.180993,-2.615913,1.893649,-2.506706,9.496820,-7.334364,2.451923,7.243484,1.604899,0.187860,-0.005540,-6.144815,2.854138,-8.939942,2.968657,9.440092,-1.991472,-1.425818,6.900133,1.026208,-1.968933,0.681121,7.277652,-8.091887,2.537538,1.897177,7.119930,-3.027470,-0.531565,-2.129312,-5.035704,-8.189690,-4.274901,-8.949129,3.346614,-7.582395,2.359893,4.859845,-9.507209,-6.219157,2.884730,-1.451725,3.859624,9.160281,5.389991,6.902500,4.708200,-9.562922,7.110973,-9.034814,-1.603833,-1.338031,-0.712126,4.976970,7.421325,0.779957,1.042352,2.336592,-7.293455,-5.427606,6.045718,6.135218,2.408526,-8.065225,-8.868879,-3.960210,4.849618,3.978687,-1.409718,-8.651676,-4.323650,2.981830,0.672408,-1.920667,7.356129,-1.656789,-0.611025,-5.221573,1.801585,-4.543231,5.440782,5.952771,7.746230,-2.737196,0.135705,8.473569,-9.095662,7.296038,-4.332739,-9.356661,1.981168,-2.816903,-4.699900,0.238650,0.939566,-4.183746,-3.942798,7.896903,-7.173697,-9.859241,-6.525314,8.911727,-1.026100,7.902929,-8.719611,-1.721346,-4.165053,9.842497,8.840998,-5.391231,3.041676,1.090209,-0.235600], dtype = "float64")#candidate|5409|(448,)|const|float64
call_5408 = func_1108_call(relay.reshape(const_5409.astype('float64'), [16, 2, 14]))
call_5410 = func_1108_call(relay.reshape(const_5409.astype('float64'), [16, 2, 14]))
func_4056_call = mod.get_global_var('func_4056')
func_4058_call = mutated_mod.get_global_var('func_4058')
const_5418 = relay.const([-1,1,6,9,3,-4,1,-10,-7,-4,-3,1,-10,-2,-1,7,7,-5,3,-2,3,-5,9,-5,6,9,8,3,-5,10,-10,-7,4,10,5,6,-8,-4,6,-5,1,-2,-4,-4,9,-4,-3,-6,2,-8,7,-6,-5,-4,-10,-3], dtype = "uint32")#candidate|5418|(56,)|const|uint32
call_5417 = relay.TupleGetItem(func_4056_call(relay.reshape(const_5418.astype('uint32'), [1, 56])), 4)
call_5419 = relay.TupleGetItem(func_4058_call(relay.reshape(const_5418.astype('uint32'), [1, 56])), 4)
output = relay.Tuple([uop_5406,call_5408,const_5409,call_5417,const_5418,])
output2 = relay.Tuple([uop_5406,call_5410,const_5409,call_5419,const_5418,])
func_5431 = relay.Function([], output)
mod['func_5431'] = func_5431
mod = relay.transform.InferType()(mod)
output = func_5431()
func_5432 = relay.Function([], output)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3150_call = mod.get_global_var('func_3150')
func_3152_call = mutated_mod.get_global_var('func_3152')
call_5435 = relay.TupleGetItem(func_3150_call(), 1)
call_5436 = relay.TupleGetItem(func_3152_call(), 1)
output = call_5435
output2 = call_5436
func_5449 = relay.Function([], output)
mod['func_5449'] = func_5449
mod = relay.transform.InferType()(mod)
output = func_5449()
func_5450 = relay.Function([], output)
mutated_mod['func_5450'] = func_5450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1159_call = mod.get_global_var('func_1159')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_5453 = relay.TupleGetItem(func_1159_call(), 0)
call_5454 = relay.TupleGetItem(func_1160_call(), 0)
output = relay.Tuple([call_5453,])
output2 = relay.Tuple([call_5454,])
func_5457 = relay.Function([], output)
mod['func_5457'] = func_5457
mod = relay.transform.InferType()(mod)
mutated_mod['func_5457'] = func_5457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5457_call = mutated_mod.get_global_var('func_5457')
call_5458 = func_5457_call()
output = call_5458
func_5459 = relay.Function([], output)
mutated_mod['func_5459'] = func_5459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2477_call = mod.get_global_var('func_2477')
func_2478_call = mutated_mod.get_global_var('func_2478')
call_5465 = relay.TupleGetItem(func_2477_call(), 0)
call_5466 = relay.TupleGetItem(func_2478_call(), 0)
output = call_5465
output2 = call_5466
func_5472 = relay.Function([], output)
mod['func_5472'] = func_5472
mod = relay.transform.InferType()(mod)
mutated_mod['func_5472'] = func_5472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5472_call = mutated_mod.get_global_var('func_5472')
call_5473 = func_5472_call()
output = call_5473
func_5474 = relay.Function([], output)
mutated_mod['func_5474'] = func_5474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2323_call = mod.get_global_var('func_2323')
func_2325_call = mutated_mod.get_global_var('func_2325')
call_5600 = func_2323_call()
call_5601 = func_2323_call()
output = relay.Tuple([call_5600,])
output2 = relay.Tuple([call_5601,])
func_5607 = relay.Function([], output)
mod['func_5607'] = func_5607
mod = relay.transform.InferType()(mod)
mutated_mod['func_5607'] = func_5607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5607_call = mutated_mod.get_global_var('func_5607')
call_5608 = func_5607_call()
output = call_5608
func_5609 = relay.Function([], output)
mutated_mod['func_5609'] = func_5609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1574_call = mod.get_global_var('func_1574')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_5618 = func_1574_call()
call_5619 = func_1574_call()
uop_5649 = relay.atan(call_5618.astype('float64')) # shape=(16, 2, 14)
uop_5651 = relay.atan(call_5619.astype('float64')) # shape=(16, 2, 14)
func_4646_call = mod.get_global_var('func_4646')
func_4648_call = mutated_mod.get_global_var('func_4648')
var_5654 = relay.var("var_5654", dtype = "float32", shape = (9,))#candidate|5654|(9,)|var|float32
call_5653 = relay.TupleGetItem(func_4646_call(relay.reshape(var_5654.astype('float32'), [1, 9])), 0)
call_5655 = relay.TupleGetItem(func_4648_call(relay.reshape(var_5654.astype('float32'), [1, 9])), 0)
output = relay.Tuple([uop_5649,call_5653,var_5654,])
output2 = relay.Tuple([uop_5651,call_5655,var_5654,])
func_5666 = relay.Function([var_5654,], output)
mod['func_5666'] = func_5666
mod = relay.transform.InferType()(mod)
mutated_mod['func_5666'] = func_5666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5667 = relay.var("var_5667", dtype = "float32", shape = (9,))#candidate|5667|(9,)|var|float32
func_5666_call = mutated_mod.get_global_var('func_5666')
call_5668 = func_5666_call(var_5667)
output = call_5668
func_5669 = relay.Function([var_5667], output)
mutated_mod['func_5669'] = func_5669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3565_call = mod.get_global_var('func_3565')
func_3567_call = mutated_mod.get_global_var('func_3567')
call_5694 = func_3565_call()
call_5695 = func_3565_call()
var_5698 = relay.var("var_5698", dtype = "float64", shape = (16, 2, 14))#candidate|5698|(16, 2, 14)|var|float64
bop_5699 = relay.equal(call_5694.astype('bool'), relay.reshape(var_5698.astype('bool'), relay.shape_of(call_5694))) # shape=(16, 2, 14)
bop_5702 = relay.equal(call_5695.astype('bool'), relay.reshape(var_5698.astype('bool'), relay.shape_of(call_5695))) # shape=(16, 2, 14)
output = relay.Tuple([bop_5699,])
output2 = relay.Tuple([bop_5702,])
func_5711 = relay.Function([var_5698,], output)
mod['func_5711'] = func_5711
mod = relay.transform.InferType()(mod)
mutated_mod['func_5711'] = func_5711
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5712 = relay.var("var_5712", dtype = "float64", shape = (16, 2, 14))#candidate|5712|(16, 2, 14)|var|float64
func_5711_call = mutated_mod.get_global_var('func_5711')
call_5713 = func_5711_call(var_5712)
output = call_5713
func_5714 = relay.Function([var_5712], output)
mutated_mod['func_5714'] = func_5714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mod.get_global_var('func_3750')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_5755 = relay.TupleGetItem(func_3750_call(), 0)
call_5756 = relay.TupleGetItem(func_3751_call(), 0)
func_2116_call = mod.get_global_var('func_2116')
func_2122_call = mutated_mod.get_global_var('func_2122')
const_5762 = relay.const([[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[False]], dtype = "bool")#candidate|5762|(60, 1)|const|bool
const_5763 = relay.const(-5.088843, dtype = "float64")#candidate|5763|()|const|float64
const_5764 = relay.const([[-2.753114,-7.094687,8.042095,0.650994,-1.123090,-3.254307,-7.161275,-2.047232,0.317153,7.487743,4.823117,2.632387,7.088788,3.273077,-6.679383,-3.168290,2.822336,-5.877272,-8.662006,5.891427,-9.324697,7.245092,-2.225469,2.098222,4.757239,-5.690005,-5.389935,-2.248465,0.899829,-7.237917,4.611913,-2.741757,3.501639,0.445007,-1.853784,-0.219727,-4.826583,-6.391857,5.114976,-0.984587,-7.819038,-3.285341,-4.380592,-7.428791,-9.133262,7.469705,4.319301,-5.085072,8.384440,-0.955590,5.728102,-6.625315,-0.268942,-8.182866,-1.754311,9.680915,0.811834,-4.221501,-8.826005,0.136046,6.890451,-8.561336,-6.479273,3.452244,-5.185431,-7.991667,6.079246,8.924440,2.859707,3.075331,-9.653818,-7.793501,-9.980269,9.724877,4.405551,3.799554,-4.450527,5.527437,3.061606,-6.707836,1.769451,0.102286,6.381188,-9.407042,-7.345074,7.164723,-2.268923,-2.086175,-9.793923,6.792421,7.840283,-4.593753,-7.203124,-5.224995,-1.269522,9.405784,5.522248,-9.559951,1.911830,4.235901,2.168188,-0.734850,-2.266384,-5.148453],[0.393022,-2.354299,9.114284,-3.878433,9.018757,7.249582,1.002241,9.504596,5.587186,0.985659,-8.701883,-5.206787,2.387586,-6.743816,5.930017,-9.182923,-7.578501,2.881310,9.933502,-8.938650,6.755988,5.415232,-8.506057,0.692037,-8.898509,6.511212,-5.103369,-4.852360,-0.212224,4.389397,-0.821219,-1.813983,6.222744,-4.583829,0.008048,3.830275,-9.419971,7.642122,2.412063,-7.950193,-3.988614,-2.428127,5.032318,-3.405004,1.791612,1.514372,-8.201438,1.004832,-5.546801,-1.179999,-2.320342,-8.715134,-9.710346,9.520695,-9.587718,-6.761639,8.328510,0.144584,2.209924,5.114247,-4.027350,-4.408047,-6.813314,-1.265207,3.566592,8.868892,-3.623568,-1.861728,7.913807,-8.936994,9.370127,-6.332223,3.739747,2.623909,-6.039465,-7.981298,-7.404377,3.132745,-3.510308,3.549969,-6.459406,4.310419,-9.384963,-2.039795,8.754673,8.758848,4.876422,-3.425594,-2.412850,9.817038,-7.233895,1.307329,2.429845,2.641891,-3.070532,5.699040,2.874839,0.393176,0.746351,-9.334756,-8.801200,3.258330,6.549236,-5.335990],[-0.667805,-0.766555,8.400054,1.248799,-6.164698,-2.055536,3.903749,-9.701470,-8.386286,-8.182353,2.817325,4.934839,-3.344495,8.109597,-7.458252,1.213725,0.371045,5.947691,2.414936,4.535524,3.051739,-7.497844,-1.814671,-1.442226,-6.519240,-6.615775,6.560958,7.387444,-1.944050,2.803495,9.742212,6.956543,0.877502,2.722704,4.726623,-3.486608,3.374075,0.197820,8.842241,-5.607917,-4.506676,2.315845,-2.553219,-3.498072,2.407798,3.299174,-1.375260,-7.451844,0.816044,4.273012,-5.293369,-0.443254,-5.255561,7.562180,1.816258,-9.110499,-9.065857,6.186400,-5.303422,-1.837087,1.816242,-4.008157,-8.986882,2.634250,8.157181,9.771168,2.961861,4.010599,9.446981,4.773420,-5.324813,9.165256,-0.806735,-3.934945,-7.480168,-4.228615,-8.755397,8.359343,6.614623,2.164444,3.396307,1.713925,-0.636472,4.538635,7.842531,-5.236519,-2.777444,2.490166,-0.663762,5.551308,-8.368557,-8.650251,5.657947,0.630854,6.375152,5.167943,7.868763,7.418848,0.561286,-7.179181,8.063620,-3.534380,-2.286975,-9.026077],[0.661722,9.669423,-7.986828,9.592693,7.901887,-1.208683,9.353507,-0.426141,-9.904717,-0.150078,-2.140233,6.805449,1.291094,6.939025,6.428120,-4.894294,5.725517,-8.927358,9.858671,8.040247,-2.518919,9.406753,5.824464,9.104719,1.353214,0.644485,-1.611098,-0.844475,3.836859,5.508790,3.286470,9.675362,0.523360,-0.293705,2.123799,0.665363,-3.508532,7.081749,-3.882733,0.530386,-2.174851,3.587682,6.648519,-9.383531,9.947435,2.475611,7.990234,-9.926967,-8.712782,-6.501679,-7.121054,-9.944594,-4.732134,7.754300,-6.150347,7.672646,6.128410,9.649735,-2.480099,6.653384,9.819305,-2.067659,-7.094583,9.753973,-5.519076,-4.142544,2.768351,7.190088,4.411507,1.751765,7.016786,-0.664243,6.312561,-0.829292,-7.243424,-1.074846,-6.908922,-0.802362,8.880153,-0.773305,7.716615,-7.368449,7.005976,2.870674,-4.327190,-5.936692,7.324562,2.338164,-0.753673,-7.775251,2.865290,-5.715010,4.192951,-2.982027,-9.505825,-5.081728,-5.068428,-9.853720,-5.672751,-8.439375,-3.595348,4.952071,2.524617,6.447023],[-2.393245,-2.674306,-9.990328,8.995502,-1.482262,-9.162600,-6.655332,-4.034747,7.681141,-0.407015,-0.796917,9.786124,0.344021,-0.494185,9.433508,-5.968168,4.558912,3.998846,4.738174,-9.818974,6.926784,-2.707716,4.709999,-2.746716,-8.541806,7.085125,1.547145,0.749160,1.634512,1.616009,2.405281,-0.928424,2.444242,-7.887247,-3.793561,-1.570727,0.706473,-7.960556,8.593368,-7.260238,3.937564,1.687167,-7.890310,-3.094339,-2.813670,-6.764093,1.662076,1.017215,-0.912501,-9.652471,-9.339385,-6.864083,7.410432,-7.123780,4.450275,-0.433357,-0.794693,1.933789,5.961752,-4.053802,-6.916244,4.911401,5.358592,-4.169550,6.519774,7.657612,0.418323,3.777744,-2.521502,2.665910,-5.572105,-2.487103,8.438068,6.388265,4.299868,1.515004,-8.139464,-8.315602,9.855006,-4.058887,3.314073,-6.347592,1.221658,7.636245,1.591219,-4.287223,5.715958,8.809527,-5.987203,1.429952,-3.843473,7.757900,6.793586,4.354495,-3.460577,3.522028,4.299403,-7.115235,-3.047748,-8.173768,7.900137,3.755838,6.559758,9.699638],[-7.914274,-0.285135,6.392188,6.570144,2.329871,6.040152,-2.383040,7.964195,-2.333111,1.876141,2.448529,8.750201,-0.413904,7.238860,5.253796,7.130690,6.289826,-7.915461,-1.897076,-9.282320,-6.183417,2.785397,-3.236345,-4.641609,7.333999,6.481687,2.791570,9.310102,-6.458072,-4.629752,6.586970,5.554723,3.990842,-4.850977,6.239950,3.965281,-7.956866,1.410473,0.515918,-6.431013,6.037352,4.070049,-0.293686,-6.389915,-2.011378,-0.357912,-2.523861,-3.042089,7.836189,5.407556,7.102157,0.776791,-4.485016,0.935367,-3.268765,-7.911031,5.966688,4.464784,-9.658716,-5.207759,-0.491490,-2.956443,-8.748920,-0.383448,2.251437,3.479657,-2.048004,8.658507,8.216005,-6.248446,-3.401272,8.571680,-6.584927,2.581229,-1.547899,3.659935,-9.699040,4.889854,2.618612,-1.545272,-9.093022,0.713684,-4.866862,7.304071,3.400531,-7.775754,-9.710543,-8.081008,-7.847207,0.058372,2.359094,8.362042,-2.230828,0.999762,-9.841591,3.848075,1.315373,2.623651,2.328685,9.738603,-5.659563,-0.263916,7.379427,6.192681],[-9.718926,-0.772229,-5.779841,6.800079,-7.128015,-3.875101,-8.383921,4.483545,-5.163211,-7.184813,2.241225,4.760746,1.433140,-6.878530,-1.363055,-3.856880,-6.071347,-2.834644,-1.441542,-3.591850,-0.593151,4.057593,-3.280441,-3.583111,3.578245,-0.913571,-6.278403,-3.953495,5.130288,-1.314323,-6.094126,-3.531775,1.438871,9.283504,-1.137066,0.290522,-4.391535,3.023025,7.402178,-8.619863,-6.425875,-3.041262,-2.575346,-2.099562,9.782097,8.212116,3.159070,3.136479,-2.416072,-5.180891,-7.156776,-8.844324,-0.097671,6.054990,8.548627,-8.945401,-2.981182,0.235643,8.620185,-1.640769,-2.381594,0.606799,1.074930,0.152302,9.988711,-7.051939,9.968551,0.851960,-7.680585,8.041149,-1.557360,-7.727017,-3.133115,2.033285,0.885879,0.484811,8.619892,-1.180305,4.206726,-7.233859,8.166485,-6.464641,4.347294,2.728311,-9.037020,-3.458116,-1.891900,8.600764,-3.413623,1.418550,-0.765385,9.206109,9.395168,-3.736667,4.488204,5.231263,9.560726,6.846142,2.129455,-7.767942,-2.726562,-0.157506,7.947289,1.137917],[-0.220776,-1.850772,8.442858,-4.344612,8.610040,2.978604,-8.809322,8.712437,-3.840278,-9.650681,4.189513,5.778880,1.812148,1.218791,3.838065,-2.654979,2.697519,-3.059455,0.847966,5.310602,9.920878,8.408146,6.939232,0.848804,-7.812806,-7.001618,9.503654,0.469473,0.345823,1.685521,3.053113,2.713540,-6.715720,-8.128240,-4.642570,-5.025796,-4.432427,4.149769,3.287380,-7.007105,1.942923,6.310619,-5.385655,1.656433,8.952718,4.653243,4.589217,3.676860,-9.766206,6.239221,8.555019,1.778393,8.660183,-7.173232,4.620956,-8.996790,6.785734,4.528495,-5.218713,1.043778,-0.784078,7.917486,6.857514,9.001752,-7.881837,8.332045,9.351633,2.332220,1.447480,2.152894,-6.452255,5.656389,6.697129,-8.344667,-3.541791,-9.019820,-9.104669,-8.401406,-7.108970,1.290397,-2.957171,7.397074,9.648111,-2.031250,-9.329962,-9.474452,-6.198372,-8.975334,-5.673315,5.959373,-0.879052,6.912062,5.337561,9.935208,-3.463707,-1.702352,1.983365,-2.706605,0.694876,6.321074,-1.208767,-4.353749,-0.622157,-9.008547],[9.921912,5.199524,1.852251,-3.858169,-1.220505,0.297156,7.674955,7.473322,7.196720,1.620912,-5.315425,-7.952461,-2.528477,6.015398,0.497707,-2.764802,-8.405074,-4.393236,-1.978227,-7.498881,-7.616335,1.456146,-9.412741,-1.448484,-6.814848,-7.819270,9.680458,0.817915,6.533226,-5.723113,3.316889,-2.407500,-6.426417,5.273676,4.911532,1.245612,6.403630,4.093656,0.491150,2.588158,-1.132601,-5.407462,-7.280080,7.153772,1.924889,-2.840763,-6.013899,-4.257217,-3.608150,-7.432481,7.546753,0.747070,-0.237346,-5.945157,1.626253,-8.013646,2.339961,7.200659,-8.300568,-0.382166,-6.421919,-2.222946,6.572088,2.911020,2.229523,0.949525,9.695578,7.731359,-5.272113,3.023086,-3.418328,6.048056,-3.318417,3.947492,5.426984,-4.974915,8.490736,0.337487,2.048014,-0.480143,-0.592830,-2.397980,-7.623468,6.675852,8.944581,-9.813541,-1.492323,-8.280867,-2.701992,-5.694221,9.927144,0.721534,6.414808,7.213637,7.170848,3.509142,4.625426,5.598934,-1.310680,-6.770752,8.890989,9.397993,-7.964010,1.696045],[6.096233,0.341961,-9.709510,7.505489,8.254656,5.908633,-1.673348,-4.239218,-3.213779,-1.485140,-1.902020,-5.375549,3.424282,-9.132666,8.585747,1.500803,9.838313,6.692762,4.134475,6.365013,4.024730,-2.411069,-0.270316,-2.140219,-6.684958,1.866281,1.439777,0.512708,2.657828,8.778726,7.827673,4.454801,9.598369,-1.285733,-3.918377,6.066637,-2.358547,6.991805,-7.275453,9.157788,-4.908557,3.658644,3.163725,7.089227,-9.481198,8.433823,0.021179,-0.011127,-8.896600,5.594846,1.937241,-1.983816,-6.864642,-1.247308,9.645388,-7.577582,-6.625598,-4.894053,-8.608560,-2.502334,-9.229086,-3.027669,-5.660558,-2.270916,5.571439,5.436926,-6.141070,5.058556,-1.469210,2.704867,5.184078,1.998990,9.036741,1.560592,0.785120,7.161816,-3.825115,3.567468,-1.224552,6.548662,-9.032512,-1.146558,-5.923534,6.247031,2.680853,7.380607,-4.830767,-4.675688,-1.131691,0.298577,0.111563,2.846312,-3.706427,2.217559,-0.161959,6.410093,1.078964,5.028175,2.979037,-7.475447,9.097119,2.557024,2.392400,3.385719],[-2.406254,5.490896,2.139635,0.245585,-9.554243,0.859346,9.751666,2.709625,-9.416049,-2.739031,6.925617,2.014881,-5.346841,3.178937,-3.530153,0.673103,1.386617,8.549313,3.516840,8.238820,8.653313,-8.349914,9.737350,4.124196,-7.005694,5.873568,9.411450,-1.127163,5.724787,3.918918,3.041316,-7.199280,3.594723,9.599914,-9.783471,-0.298471,8.740151,-2.613797,-5.020625,7.712196,-5.020974,6.964625,0.291820,6.060002,6.673984,-1.655854,-3.740842,7.218057,-0.726070,-9.017117,5.366747,-4.136211,-7.603528,6.397179,1.376981,0.668496,5.315102,5.594653,3.417982,-2.738784,7.826462,0.227191,9.691960,2.775250,0.690458,3.302957,4.563714,-1.669738,-7.362875,-6.639419,-1.772399,5.253682,-2.224918,-1.230874,-7.460501,-3.579411,0.031596,5.097592,4.718664,9.878315,-2.862026,7.883655,-7.607402,9.670972,-2.366072,-1.822695,-7.445838,-0.796941,-4.001039,-7.145434,5.521987,-2.720184,-2.798086,-6.907098,7.001124,-8.731299,-3.476730,6.282587,2.334819,2.542682,-3.656953,-0.449918,-9.932534,-7.610343],[9.528412,2.910034,7.407672,-3.585154,8.642437,7.312896,-4.783782,-9.096874,-7.044232,5.979396,8.476213,5.206149,8.183485,-3.578424,-8.451270,-7.135714,6.366071,2.217574,-5.518142,-9.895043,-3.954287,-8.772375,0.141758,8.685687,-9.329066,-7.865534,3.975704,7.890924,4.326930,-2.732380,-2.329690,-6.572399,-4.101776,1.291069,2.828823,-8.863693,0.962343,-2.517433,-2.431851,-3.222555,-3.050921,-7.240353,-0.702239,-8.476171,8.310718,-4.489748,-4.112962,9.789914,-2.219657,5.904753,-1.320083,3.365075,-7.772182,-3.524979,2.002037,9.988900,0.434868,0.214109,5.285425,-6.261264,5.066009,5.994373,1.293458,-1.098551,0.229854,0.112824,-3.653764,8.551001,-4.199442,7.874378,8.942327,4.541394,-5.608005,-3.294481,1.956741,-2.610273,6.600640,-5.494454,-5.273491,-6.966561,-2.276510,0.249846,-4.740201,6.139467,-5.047844,-6.233446,1.499501,6.358987,8.558045,8.194686,-7.813992,7.394598,9.213148,-6.800671,-8.754764,0.649371,-0.148515,9.645834,-7.178166,7.945238,3.539214,-8.536748,6.619725,-8.751467],[6.327815,8.276697,7.045442,-5.792650,-8.834593,-5.343899,0.126271,7.480301,-5.014742,4.208609,8.967058,-5.359743,-4.444953,9.061744,-9.793849,-9.935010,-4.623148,1.466485,-6.196423,-1.407690,-5.766319,-4.615579,6.009678,4.162496,-8.388021,-8.388801,9.181439,8.969308,6.129608,4.142898,-1.238142,6.145846,-3.244108,0.569025,-4.121427,4.276482,-4.839835,4.676918,-0.107700,-3.184835,1.542597,-1.169800,7.090970,-7.800731,2.836208,-4.154526,-8.644485,-8.219815,-1.994774,8.536182,6.027387,8.813633,-5.601277,7.572860,9.936408,-5.150451,-0.279720,9.371101,-0.766398,-8.024451,0.617739,8.514256,6.186099,-5.771339,8.340669,-8.665569,2.111704,2.131241,-5.945413,-8.626567,-9.821256,-9.696541,9.852235,-6.698973,-6.795876,6.488556,6.356197,0.727405,-9.569334,-7.752185,3.912981,3.875989,-6.948003,7.488655,2.604087,-8.052350,-6.901092,4.000292,-6.052913,5.052034,-9.677062,-2.773793,7.091125,-7.022268,-4.775478,-5.380426,-8.202518,-4.437509,-9.931691,2.687195,5.734713,5.384473,8.409602,0.233392]], dtype = "float32")#candidate|5764|(13, 104)|const|float32
call_5761 = relay.TupleGetItem(func_2116_call(relay.reshape(const_5762.astype('bool'), [60,]), relay.reshape(const_5763.astype('float64'), []), relay.reshape(call_5755.astype('float64'), [8, 1]), relay.reshape(const_5764.astype('float32'), [1352,]), ), 0)
call_5765 = relay.TupleGetItem(func_2122_call(relay.reshape(const_5762.astype('bool'), [60,]), relay.reshape(const_5763.astype('float64'), []), relay.reshape(call_5755.astype('float64'), [8, 1]), relay.reshape(const_5764.astype('float32'), [1352,]), ), 0)
output = relay.Tuple([call_5755,call_5761,const_5762,const_5763,const_5764,])
output2 = relay.Tuple([call_5756,call_5765,const_5762,const_5763,const_5764,])
func_5770 = relay.Function([], output)
mod['func_5770'] = func_5770
mod = relay.transform.InferType()(mod)
output = func_5770()
func_5771 = relay.Function([], output)
mutated_mod['func_5771'] = func_5771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2477_call = mod.get_global_var('func_2477')
func_2478_call = mutated_mod.get_global_var('func_2478')
call_5780 = relay.TupleGetItem(func_2477_call(), 0)
call_5781 = relay.TupleGetItem(func_2478_call(), 0)
output = call_5780
output2 = call_5781
func_5782 = relay.Function([], output)
mod['func_5782'] = func_5782
mod = relay.transform.InferType()(mod)
output = func_5782()
func_5783 = relay.Function([], output)
mutated_mod['func_5783'] = func_5783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5457_call = mod.get_global_var('func_5457')
func_5459_call = mutated_mod.get_global_var('func_5459')
call_5863 = relay.TupleGetItem(func_5457_call(), 0)
call_5864 = relay.TupleGetItem(func_5459_call(), 0)
func_4481_call = mod.get_global_var('func_4481')
func_4482_call = mutated_mod.get_global_var('func_4482')
call_5873 = func_4481_call()
call_5874 = func_4481_call()
func_2407_call = mod.get_global_var('func_2407')
func_2409_call = mutated_mod.get_global_var('func_2409')
call_5888 = func_2407_call()
call_5889 = func_2407_call()
output = relay.Tuple([call_5863,call_5873,call_5888,])
output2 = relay.Tuple([call_5864,call_5874,call_5889,])
func_5911 = relay.Function([], output)
mod['func_5911'] = func_5911
mod = relay.transform.InferType()(mod)
output = func_5911()
func_5912 = relay.Function([], output)
mutated_mod['func_5912'] = func_5912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1417_call = mod.get_global_var('func_1417')
func_1418_call = mutated_mod.get_global_var('func_1418')
call_5915 = func_1417_call()
call_5916 = func_1417_call()
output = relay.Tuple([call_5915,])
output2 = relay.Tuple([call_5916,])
func_5917 = relay.Function([], output)
mod['func_5917'] = func_5917
mod = relay.transform.InferType()(mod)
mutated_mod['func_5917'] = func_5917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5917_call = mutated_mod.get_global_var('func_5917')
call_5918 = func_5917_call()
output = call_5918
func_5919 = relay.Function([], output)
mutated_mod['func_5919'] = func_5919
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5938 = relay.var("var_5938", dtype = "float64", shape = (5, 5, 16))#candidate|5938|(5, 5, 16)|var|float64
uop_5939 = relay.tan(var_5938.astype('float64')) # shape=(5, 5, 16)
func_3654_call = mod.get_global_var('func_3654')
func_3656_call = mutated_mod.get_global_var('func_3656')
call_5984 = func_3654_call()
call_5985 = func_3654_call()
output = relay.Tuple([uop_5939,call_5984,])
output2 = relay.Tuple([uop_5939,call_5985,])
func_5999 = relay.Function([var_5938,], output)
mod['func_5999'] = func_5999
mod = relay.transform.InferType()(mod)
var_6000 = relay.var("var_6000", dtype = "float64", shape = (5, 5, 16))#candidate|6000|(5, 5, 16)|var|float64
output = func_5999(var_6000)
func_6001 = relay.Function([var_6000], output)
mutated_mod['func_6001'] = func_6001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mod.get_global_var('func_5449')
func_5450_call = mutated_mod.get_global_var('func_5450')
call_6073 = func_5449_call()
call_6074 = func_5449_call()
func_1080_call = mod.get_global_var('func_1080')
func_1083_call = mutated_mod.get_global_var('func_1083')
const_6077 = relay.const([[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True]], dtype = "bool")#candidate|6077|(60, 1)|const|bool
call_6076 = relay.TupleGetItem(func_1080_call(relay.reshape(const_6077.astype('bool'), [60,])), 1)
call_6078 = relay.TupleGetItem(func_1083_call(relay.reshape(const_6077.astype('bool'), [60,])), 1)
output = relay.Tuple([call_6073,call_6076,const_6077,])
output2 = relay.Tuple([call_6074,call_6078,const_6077,])
func_6084 = relay.Function([], output)
mod['func_6084'] = func_6084
mod = relay.transform.InferType()(mod)
mutated_mod['func_6084'] = func_6084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6084_call = mutated_mod.get_global_var('func_6084')
call_6085 = func_6084_call()
output = call_6085
func_6086 = relay.Function([], output)
mutated_mod['func_6086'] = func_6086
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6091 = relay.const([[[6,-6,3],[5,4,-5]],[[-7,4,-5],[-3,-2,2]],[[2,-4,-8],[-8,8,1]],[[6,5,3],[3,-3,7]],[[-7,6,-1],[-3,-4,-10]],[[1,-7,4],[10,5,1]],[[5,7,-3],[7,7,1]],[[6,10,2],[-4,-8,2]],[[10,-3,9],[-2,8,-4]]], dtype = "uint64")#candidate|6091|(9, 2, 3)|const|uint64
var_6092 = relay.var("var_6092", dtype = "uint64", shape = (9, 2, 3))#candidate|6092|(9, 2, 3)|var|uint64
bop_6093 = relay.right_shift(const_6091.astype('uint64'), relay.reshape(var_6092.astype('uint64'), relay.shape_of(const_6091))) # shape=(9, 2, 3)
output = bop_6093
output2 = bop_6093
func_6103 = relay.Function([var_6092,], output)
mod['func_6103'] = func_6103
mod = relay.transform.InferType()(mod)
mutated_mod['func_6103'] = func_6103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6104 = relay.var("var_6104", dtype = "uint64", shape = (9, 2, 3))#candidate|6104|(9, 2, 3)|var|uint64
func_6103_call = mutated_mod.get_global_var('func_6103')
call_6105 = func_6103_call(var_6104)
output = call_6105
func_6106 = relay.Function([var_6104], output)
mutated_mod['func_6106'] = func_6106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_6141 = relay.TupleGetItem(func_3782_call(), 2)
call_6142 = relay.TupleGetItem(func_3784_call(), 2)
output = call_6141
output2 = call_6142
func_6144 = relay.Function([], output)
mod['func_6144'] = func_6144
mod = relay.transform.InferType()(mod)
mutated_mod['func_6144'] = func_6144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6144_call = mutated_mod.get_global_var('func_6144')
call_6145 = func_6144_call()
output = call_6145
func_6146 = relay.Function([], output)
mutated_mod['func_6146'] = func_6146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6180 = relay.var("var_6180", dtype = "float64", shape = (9, 4, 10))#candidate|6180|(9, 4, 10)|var|float64
uop_6181 = relay.cosh(var_6180.astype('float64')) # shape=(9, 4, 10)
func_1900_call = mod.get_global_var('func_1900')
func_1904_call = mutated_mod.get_global_var('func_1904')
var_6185 = relay.var("var_6185", dtype = "bool", shape = (60,))#candidate|6185|(60,)|var|bool
var_6186 = relay.var("var_6186", dtype = "float64", shape = (140,))#candidate|6186|(140,)|var|float64
call_6184 = relay.TupleGetItem(func_1900_call(relay.reshape(var_6185.astype('bool'), [60,]), relay.reshape(var_6186.astype('float64'), [5, 28]), ), 0)
call_6187 = relay.TupleGetItem(func_1904_call(relay.reshape(var_6185.astype('bool'), [60,]), relay.reshape(var_6186.astype('float64'), [5, 28]), ), 0)
func_2807_call = mod.get_global_var('func_2807')
func_2809_call = mutated_mod.get_global_var('func_2809')
call_6197 = relay.TupleGetItem(func_2807_call(), 0)
call_6198 = relay.TupleGetItem(func_2809_call(), 0)
output = relay.Tuple([uop_6181,call_6184,var_6185,var_6186,call_6197,])
output2 = relay.Tuple([uop_6181,call_6187,var_6185,var_6186,call_6198,])
func_6213 = relay.Function([var_6180,var_6185,var_6186,], output)
mod['func_6213'] = func_6213
mod = relay.transform.InferType()(mod)
var_6214 = relay.var("var_6214", dtype = "float64", shape = (9, 4, 10))#candidate|6214|(9, 4, 10)|var|float64
var_6215 = relay.var("var_6215", dtype = "bool", shape = (60,))#candidate|6215|(60,)|var|bool
var_6216 = relay.var("var_6216", dtype = "float64", shape = (140,))#candidate|6216|(140,)|var|float64
output = func_6213(var_6214,var_6215,var_6216,)
func_6217 = relay.Function([var_6214,var_6215,var_6216,], output)
mutated_mod['func_6217'] = func_6217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2386_call = mod.get_global_var('func_2386')
func_2388_call = mutated_mod.get_global_var('func_2388')
call_6254 = relay.TupleGetItem(func_2386_call(), 0)
call_6255 = relay.TupleGetItem(func_2388_call(), 0)
func_1080_call = mod.get_global_var('func_1080')
func_1083_call = mutated_mod.get_global_var('func_1083')
var_6257 = relay.var("var_6257", dtype = "bool", shape = (60,))#candidate|6257|(60,)|var|bool
call_6256 = relay.TupleGetItem(func_1080_call(relay.reshape(var_6257.astype('bool'), [60,])), 0)
call_6258 = relay.TupleGetItem(func_1083_call(relay.reshape(var_6257.astype('bool'), [60,])), 0)
func_3831_call = mod.get_global_var('func_3831')
func_3833_call = mutated_mod.get_global_var('func_3833')
var_6274 = relay.var("var_6274", dtype = "float32", shape = (350, 1))#candidate|6274|(350, 1)|var|float32
call_6273 = relay.TupleGetItem(func_3831_call(relay.reshape(var_6274.astype('float32'), [10, 7, 5])), 0)
call_6275 = relay.TupleGetItem(func_3833_call(relay.reshape(var_6274.astype('float32'), [10, 7, 5])), 0)
func_2323_call = mod.get_global_var('func_2323')
func_2325_call = mutated_mod.get_global_var('func_2325')
call_6278 = func_2323_call()
call_6279 = func_2323_call()
func_386_call = mod.get_global_var('func_386')
func_391_call = mutated_mod.get_global_var('func_391')
const_6281 = relay.const(9.333621, dtype = "float32")#candidate|6281|()|const|float32
var_6282 = relay.var("var_6282", dtype = "bool", shape = (10, 2))#candidate|6282|(10, 2)|var|bool
call_6280 = relay.TupleGetItem(func_386_call(relay.reshape(const_6281.astype('float32'), []), relay.reshape(var_6282.astype('bool'), [20, 1]), relay.reshape(call_6256.astype('bool'), [5, 28]), ), 4)
call_6283 = relay.TupleGetItem(func_391_call(relay.reshape(const_6281.astype('float32'), []), relay.reshape(var_6282.astype('bool'), [20, 1]), relay.reshape(call_6256.astype('bool'), [5, 28]), ), 4)
output = relay.Tuple([call_6254,call_6256,var_6257,call_6273,var_6274,call_6278,call_6280,const_6281,var_6282,])
output2 = relay.Tuple([call_6255,call_6258,var_6257,call_6275,var_6274,call_6279,call_6283,const_6281,var_6282,])
func_6293 = relay.Function([var_6257,var_6274,var_6282,], output)
mod['func_6293'] = func_6293
mod = relay.transform.InferType()(mod)
var_6294 = relay.var("var_6294", dtype = "bool", shape = (60,))#candidate|6294|(60,)|var|bool
var_6295 = relay.var("var_6295", dtype = "float32", shape = (350, 1))#candidate|6295|(350, 1)|var|float32
var_6296 = relay.var("var_6296", dtype = "bool", shape = (10, 2))#candidate|6296|(10, 2)|var|bool
output = func_6293(var_6294,var_6295,var_6296,)
func_6297 = relay.Function([var_6294,var_6295,var_6296,], output)
mutated_mod['func_6297'] = func_6297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6338 = relay.var("var_6338", dtype = "float64", shape = ())#candidate|6338|()|var|float64
const_6339 = relay.const([[[-9.762014,1.944557,1.360987,0.916976,4.447847,-4.726018,-3.016759,6.571297],[-5.280639,3.930599,-1.864614,3.200543,4.906944,-4.402495,-2.457237,0.860561],[-0.368752,4.941149,-2.691456,-4.868244,6.402996,-3.188280,3.475237,8.178337],[-2.411829,-7.018351,-0.785705,-2.292122,8.160483,6.881578,-4.181405,-5.068194],[8.038016,9.800549,-9.769334,-1.769246,-3.142565,2.070452,-2.025879,2.946733],[5.329446,-0.801902,-9.751191,-9.141490,9.691278,0.581726,-5.251494,-8.046993],[-3.373464,5.205378,2.204896,-6.235829,-5.680936,-8.191067,-3.889817,4.584967],[9.335815,-7.485583,-9.023178,-3.876761,-7.965665,-8.151403,4.383664,2.482024]],[[-5.529753,3.226731,-9.135893,1.607432,8.757259,8.013900,5.792487,-1.247852],[-9.009987,-2.064967,0.832459,-7.350479,6.737767,-1.138409,-2.014964,-7.272499],[-1.598474,-8.640899,8.122998,5.378034,8.854694,-0.598050,4.693188,-2.976243],[7.879498,9.411447,5.086499,2.948163,-3.045248,8.801048,7.793433,2.973154],[5.332883,-1.368923,4.554475,-5.725151,-9.071016,2.657203,2.389749,-7.936798],[1.863744,4.451852,2.876708,6.961318,-5.752656,-7.015410,-7.492931,5.229350],[-9.562489,-2.241775,2.791958,-2.427258,7.278951,9.168605,9.771947,-0.691832],[9.547528,6.371397,-0.772153,-7.357761,-9.948447,-4.845763,-8.486491,-4.355335]]], dtype = "float64")#candidate|6339|(2, 8, 8)|const|float64
bop_6340 = relay.power(var_6338.astype('float64'), const_6339.astype('float64')) # shape=(2, 8, 8)
bop_6344 = relay.less(const_6339.astype('bool'), var_6338.astype('bool')) # shape=(2, 8, 8)
var_6349 = relay.var("var_6349", dtype = "float64", shape = (2, 8, 8))#candidate|6349|(2, 8, 8)|var|float64
bop_6350 = relay.floor_mod(const_6339.astype('float64'), relay.reshape(var_6349.astype('float64'), relay.shape_of(const_6339))) # shape=(2, 8, 8)
var_6356 = relay.var("var_6356", dtype = "float64", shape = (2, 8, 8))#candidate|6356|(2, 8, 8)|var|float64
bop_6357 = relay.greater_equal(var_6349.astype('bool'), relay.reshape(var_6356.astype('bool'), relay.shape_of(var_6349))) # shape=(2, 8, 8)
func_6213_call = mod.get_global_var('func_6213')
func_6217_call = mutated_mod.get_global_var('func_6217')
const_6362 = relay.const([0.255342,3.576481,-6.231969,-7.775598,-6.348397,2.007641,6.592057,-4.773366,5.627730,-7.388051,-4.249352,3.239673,7.727730,1.075086,-3.427344,0.651113,-0.188234,4.923767,7.836923,6.273244,-0.645518,-4.034819,2.669156,3.443701,-8.735345,-0.843437,-8.569023,-0.007257,8.535618,-5.915066,-0.289169,-5.609558,8.339773,-0.198886,1.361911,-0.677496,-4.394927,-1.905676,0.219643,-1.173550,2.057842,-1.648177,0.820849,-8.931711,0.642331,-0.145690,-4.291216,-7.194784,-7.061642,7.235413,-7.236311,-2.364259,-5.560976,0.869155,-4.851551,0.676668,-1.523678,-2.300556,-3.393984,6.039342,1.119628,-4.866284,-0.546129,7.546871,6.222471,-5.974742,9.709829,-5.524307,8.086136,0.658929,-2.010849,-6.384025,5.079350,-1.339786,9.002134,7.037320,5.024955,-5.837836,-5.406907,1.701232,-9.304284,-5.128152,-5.214427,2.650646,-7.681151,1.245035,4.817151,3.150661,-4.823099,7.921345,4.376685,1.177898,-9.070524,-6.007103,4.757066,-3.751510,-6.548228,8.128636,9.251950,-9.976090,-1.170097,-9.003567,0.018463,-0.250574,2.580634,8.623031,-2.522279,-0.380296,1.126313,6.340653,-7.932141,-8.427984,-8.960934,1.165279,4.307776,9.122988,3.849774,1.411335,-0.264155,4.899599,9.013261,-9.954497,0.492357,-1.859376,-0.206848,1.760640,6.509216,7.221777,-2.155256,-4.079408,-9.280713,7.454441,8.994128,2.040509,-7.003108,-5.345518,2.836035,2.828548,3.839020,7.863789,5.306131,-2.697909,6.985127,1.850985,-5.294741,6.904234,0.754218,-5.974252,0.305758,-0.201245,-4.685065,-4.016818,-5.895927,-7.163648,3.491817,6.602117,9.746862,-2.430391,3.774768,-7.766433,9.957844,-0.657655,-1.622433,7.926497,-7.982325,5.357630,-1.432455,5.415891,4.206847,-0.878134,3.905833,5.894276,1.709267,4.615610,9.201217,-8.511305,8.492320,-4.003976,-1.060857,-9.419188,6.955716,4.439570,7.975430,-3.904162,2.938408,2.333131,-3.713282,7.238727,-7.775145,-4.105668,-8.755841,-8.034511,-1.617104,4.641498,7.230637,1.598643,3.817745,-5.175721,7.721936,8.434687,-3.241460,-8.432928,7.805234,-9.230286,-4.830420,-1.109191,-0.890485,8.992230,1.779810,7.315086,-8.285002,5.454526,8.852579,-7.528943,5.787720,0.187041,-5.245477,-7.088119,5.156078,-0.593890,-1.238793,-9.432069,2.064465,3.409275,-7.340237,1.141207,1.692827,-3.967390,6.570458,-4.290934,-9.954146,-1.587005,8.609105,6.795892,7.967955,-6.757608,-5.059570,-2.982618,-2.914175,-3.826611,-5.212705,2.583624,-8.439265,7.395517,-8.341347,-2.520798,1.039914,-6.258820,-3.584916,-3.682951,7.845537,9.261181,3.208298,4.575382,3.131595,2.125668,-1.554013,3.966649,-4.744802,-1.750459,-9.572724,-2.634056,7.366648,-5.401424,-5.675322,1.417414,-8.282363,5.320200,2.762022,2.987284,-1.615674,-2.970995,-3.223332,4.487128,-0.071986,6.143836,1.922173,7.587644,-8.359398,-8.562159,-0.890403,-9.436142,-1.711322,-2.131999,9.343823,-7.552461,-3.686183,-2.776029,-8.507101,-5.741861,7.722234,-6.239519,7.266694,7.963225,9.714012,-1.146368,0.330277,-0.584484,-0.161251,3.577601,3.656750,6.101804,0.302458,-3.396668,1.648165,-1.283937,-6.875166,9.596687,-9.559650,-0.504211,-0.033097,5.110571,5.056273,4.673181,6.985735,9.713122,-5.877089,-1.432557,-0.553380,-7.491068,4.410965,-7.798194,5.779715,8.197858,-2.099535,6.635465,-2.285049,1.347547,5.745503,1.113308,4.012454,6.147585,0.765868,7.326416,-5.685819,-7.577606,9.918744,1.488569,-0.016862,-9.783750,-7.523565,-7.986854,1.525090,0.892417,-6.568957,0.380679,5.070521,-5.948987,-8.300984,7.294782,9.744846,6.148025,-3.876145,9.360705,5.365191,-8.616347,9.773673,7.258708,-8.498417,8.046804], dtype = "float64")#candidate|6362|(360,)|const|float64
const_6363 = relay.const([[True,False,True,False],[False,False,True,True],[True,False,True,True],[False,True,False,True],[True,False,True,True],[True,True,True,False],[True,True,True,False],[False,True,False,True],[True,False,True,True],[False,False,False,True],[True,False,True,True],[True,True,False,False],[True,True,True,False],[False,True,True,True],[False,False,True,False]], dtype = "bool")#candidate|6363|(15, 4)|const|bool
var_6364 = relay.var("var_6364", dtype = "float64", shape = (140,))#candidate|6364|(140,)|var|float64
call_6361 = relay.TupleGetItem(func_6213_call(relay.reshape(const_6362.astype('float64'), [9, 4, 10]), relay.reshape(const_6363.astype('bool'), [60,]), relay.reshape(var_6364.astype('float64'), [140,]), ), 2)
call_6365 = relay.TupleGetItem(func_6217_call(relay.reshape(const_6362.astype('float64'), [9, 4, 10]), relay.reshape(const_6363.astype('bool'), [60,]), relay.reshape(var_6364.astype('float64'), [140,]), ), 2)
uop_6366 = relay.cos(var_6349.astype('float64')) # shape=(2, 8, 8)
output = relay.Tuple([bop_6340,bop_6344,bop_6350,bop_6357,call_6361,const_6362,const_6363,var_6364,uop_6366,])
output2 = relay.Tuple([bop_6340,bop_6344,bop_6350,bop_6357,call_6365,const_6362,const_6363,var_6364,uop_6366,])
func_6381 = relay.Function([var_6338,var_6349,var_6356,var_6364,], output)
mod['func_6381'] = func_6381
mod = relay.transform.InferType()(mod)
mutated_mod['func_6381'] = func_6381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6381_call = mutated_mod.get_global_var('func_6381')
var_6383 = relay.var("var_6383", dtype = "float64", shape = ())#candidate|6383|()|var|float64
var_6384 = relay.var("var_6384", dtype = "float64", shape = (2, 8, 8))#candidate|6384|(2, 8, 8)|var|float64
var_6385 = relay.var("var_6385", dtype = "float64", shape = (2, 8, 8))#candidate|6385|(2, 8, 8)|var|float64
var_6386 = relay.var("var_6386", dtype = "float64", shape = (140,))#candidate|6386|(140,)|var|float64
call_6382 = func_6381_call(var_6383,var_6384,var_6385,var_6386,)
output = call_6382
func_6387 = relay.Function([var_6383,var_6384,var_6385,var_6386,], output)
mutated_mod['func_6387'] = func_6387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mod.get_global_var('func_3750')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_6433 = relay.TupleGetItem(func_3750_call(), 0)
call_6434 = relay.TupleGetItem(func_3751_call(), 0)
output = relay.Tuple([call_6433,])
output2 = relay.Tuple([call_6434,])
func_6441 = relay.Function([], output)
mod['func_6441'] = func_6441
mod = relay.transform.InferType()(mod)
output = func_6441()
func_6442 = relay.Function([], output)
mutated_mod['func_6442'] = func_6442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_6497 = relay.TupleGetItem(func_3782_call(), 2)
call_6498 = relay.TupleGetItem(func_3784_call(), 2)
output = call_6497
output2 = call_6498
func_6499 = relay.Function([], output)
mod['func_6499'] = func_6499
mod = relay.transform.InferType()(mod)
output = func_6499()
func_6500 = relay.Function([], output)
mutated_mod['func_6500'] = func_6500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2726_call = mutated_mod.get_global_var('func_2726')
call_6555 = relay.TupleGetItem(func_2725_call(), 0)
call_6556 = relay.TupleGetItem(func_2726_call(), 0)
output = call_6555
output2 = call_6556
func_6564 = relay.Function([], output)
mod['func_6564'] = func_6564
mod = relay.transform.InferType()(mod)
mutated_mod['func_6564'] = func_6564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6564_call = mutated_mod.get_global_var('func_6564')
call_6565 = func_6564_call()
output = call_6565
func_6566 = relay.Function([], output)
mutated_mod['func_6566'] = func_6566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2386_call = mod.get_global_var('func_2386')
func_2388_call = mutated_mod.get_global_var('func_2388')
call_6567 = relay.TupleGetItem(func_2386_call(), 0)
call_6568 = relay.TupleGetItem(func_2388_call(), 0)
func_5243_call = mod.get_global_var('func_5243')
func_5245_call = mutated_mod.get_global_var('func_5245')
call_6585 = relay.TupleGetItem(func_5243_call(), 0)
call_6586 = relay.TupleGetItem(func_5245_call(), 0)
func_2901_call = mod.get_global_var('func_2901')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_6593 = relay.TupleGetItem(func_2901_call(), 0)
call_6594 = relay.TupleGetItem(func_2902_call(), 0)
const_6607 = relay.const([[[-3.299693,9.718857,-0.818243,9.264667,-3.898268,2.099675,-7.872795,8.654178,1.877863,-5.303030,-3.749991,2.159937,0.757568,-9.416334],[6.553070,5.906788,2.068244,-2.422540,3.994737,1.654272,-6.906505,7.944043,-5.062799,0.948327,3.367051,6.127459,-2.044970,-6.645948]],[[0.366469,-5.724380,-8.189861,-5.825969,1.373260,9.825393,-5.336455,-9.450324,1.003997,-9.467852,-0.388823,-2.279398,6.429902,-6.426793],[-4.796994,9.744083,7.440049,-0.576853,5.711365,-9.781042,5.980470,-7.821166,-9.251327,-4.044369,-2.661393,4.995882,9.609643,5.149107]],[[8.248826,-4.159040,-6.864062,-3.943272,-4.876192,-4.605508,3.537387,-1.905791,-5.592365,1.977564,7.124482,0.831088,-3.148198,5.225814],[-4.101519,-4.922368,-2.363735,3.080154,0.003920,-5.314199,2.860920,6.249023,7.600793,3.361028,-8.167003,-4.275234,0.774909,-0.758351]],[[-1.702526,2.353425,-5.753594,5.781411,-4.547829,2.367291,-4.561766,4.828282,-0.709494,-5.072172,-1.180020,-1.612895,-6.626078,6.258716],[-6.253192,7.818533,7.576230,8.317190,3.140232,-7.600874,8.516010,3.562965,8.798466,6.345612,9.242202,-6.503656,-9.652812,5.863554]],[[3.905093,-1.318891,-5.485323,9.145003,-0.865245,1.820412,1.750078,6.644314,9.400270,-4.305024,-1.678312,6.819532,4.330521,5.640706],[-0.323337,5.324092,0.429297,1.643533,3.844231,4.222986,3.613291,5.397585,-8.246367,5.241630,2.153991,2.693648,-0.450028,-6.883650]],[[-0.158523,7.456407,-6.315164,-5.069195,-5.018509,0.825775,-2.699039,3.620383,5.516521,-4.453795,5.593780,6.021364,6.231871,-6.964824],[9.539225,-7.558101,6.201799,-2.461795,-7.517672,3.814451,-5.955760,-1.013494,-9.526702,-1.815057,6.404384,2.984482,1.757612,5.690246]],[[0.992109,-9.861097,-5.025999,-1.369371,-3.453466,5.625093,-5.928700,5.533416,0.832203,4.978785,2.045232,9.823682,5.632807,4.838018],[-2.144626,2.037513,7.106304,-9.377830,-8.467541,8.334561,-0.484893,0.371184,0.866236,7.935359,6.254454,-0.512430,9.397956,0.630572]],[[3.491532,3.065597,6.329505,9.916693,-0.970877,5.322653,8.457521,5.258961,7.695359,-5.260936,2.841963,-8.514127,-7.198612,5.610131],[-7.971833,-8.202433,1.208624,0.462422,2.335575,4.031617,2.978577,-4.876210,0.626888,-3.394327,3.842198,-5.202244,-9.008504,6.478167]],[[3.293134,-3.640302,3.763464,2.781039,-9.982299,3.224236,-1.993943,4.721854,1.775569,-1.889416,4.117102,-6.000667,8.573927,2.219145],[2.842979,-7.975586,2.802548,-7.351082,-8.813240,-0.702513,8.718858,-0.359631,-2.260784,3.196397,7.322830,4.499704,-8.724011,3.006236]],[[-8.228526,0.725448,5.642367,-8.414569,9.754685,9.754616,5.275164,-7.824576,-7.653729,-3.827401,4.052296,-5.791323,3.977714,1.867802],[4.304093,0.256337,-0.404054,8.973770,-5.621177,-8.878605,5.623000,8.642530,7.028307,2.031938,-0.114154,9.783252,0.123099,2.330834]],[[3.056784,-0.190775,4.029651,-2.942668,-6.899736,-2.169361,6.326655,-1.212180,-9.459679,2.180628,-1.239905,5.905078,-8.089661,-2.526093],[9.326745,-0.458223,-6.407830,8.866995,-8.060842,6.231107,-0.641576,-4.092223,9.560716,-2.170293,-4.647694,2.971931,-8.527797,-2.535650]],[[6.363524,-3.765063,-3.733960,3.986507,9.577594,-5.121183,-0.098333,-9.933830,8.086112,8.683724,-5.344673,0.960527,5.257124,1.346324],[2.966205,4.810667,-7.210423,0.542704,-5.389379,4.103555,-1.188111,-2.254650,-8.478652,5.839429,7.523087,-9.895880,-8.111625,-0.685260]],[[-8.839974,9.203168,8.660870,5.333996,-9.732659,-5.180160,9.679422,-7.802273,-4.293725,4.865485,8.440506,-1.941415,0.930239,-6.400353],[-2.319112,5.929985,-6.068835,4.264782,2.064816,5.281789,2.688858,7.467432,-4.627509,-3.720516,-7.264137,0.040556,-7.364543,-6.535476]],[[-1.112573,3.232541,1.523892,9.611700,4.460678,-5.353411,5.942283,-3.143042,2.212518,-2.398978,1.280480,-4.060872,-2.153137,-6.405382],[-5.179073,-0.853825,4.247479,2.058594,-0.286068,6.303692,7.581684,5.884095,6.125385,-5.329335,6.664361,-8.397548,1.464770,-9.844818]],[[-2.656558,8.973761,8.711878,4.821077,6.870293,8.355169,-7.982344,-0.154256,-5.358698,-5.622767,3.967455,7.604815,3.530234,-7.210149],[-4.701189,-2.685702,8.957634,9.971259,5.811498,6.301200,-6.918554,1.977212,3.853370,-7.960117,0.589937,-7.681675,9.847234,7.750642]],[[7.781564,-0.338795,-6.962651,1.657915,-0.915045,-9.670388,9.429578,-2.645649,-4.316880,-4.801653,8.934629,-2.597350,-8.378559,-2.005445],[-8.314627,-4.548434,9.308974,3.283065,-6.017156,4.737050,-6.983974,-0.758117,1.619442,4.712117,-4.304581,-3.912981,-1.767880,-6.768758]]], dtype = "float64")#candidate|6607|(16, 2, 14)|const|float64
bop_6608 = relay.less(call_6593.astype('bool'), relay.reshape(const_6607.astype('bool'), relay.shape_of(call_6593))) # shape=(16, 2, 14)
bop_6611 = relay.less(call_6594.astype('bool'), relay.reshape(const_6607.astype('bool'), relay.shape_of(call_6594))) # shape=(16, 2, 14)
output = relay.Tuple([call_6567,call_6585,bop_6608,])
output2 = relay.Tuple([call_6568,call_6586,bop_6611,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

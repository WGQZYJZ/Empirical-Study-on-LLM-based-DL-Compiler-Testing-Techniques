==========mod==========
#[version = "0.0.5"]
def @func_7018(%var_6953: Tensor[(15, 8, 16), float64]) -> (Tensor[(15, 8, 16), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(110, 6), float64], uint64, Tensor[(14, 10, ?), int64]) {
  %0 = @func_5567() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %3 = cast(%var_6953, dtype="float32") /* ty=Tensor[(15, 8, 16), float32] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %5 = cast(meta[relay.Constant][1] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %6 = reshape(%4, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %7 = reshape(%5, newshape=[]) /* ty=uint64 */;
  %8 = @func_5880(%6, %7) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(660), float64], uint64) */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %10 = reshape(%9, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %11 = @func_357(%10) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %12 = floor_divide(%2, %3) /* ty=Tensor[(15, 8, 16), float32] */;
  %13 = @func_6867() /* ty=Tensor[(15, 8, 1), float64] */;
  %14 = %8.0;
  %15 = %11.0;
  (%12, %13, %14, meta[relay.Constant][0] /* ty=Tensor[(110, 6), float64] */, meta[relay.Constant][1] /* ty=uint64 */, %15)
}

def @func_5509() -> (Tensor[(15, 8, 1), float64],) {
  %16 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %17 = %16.0;
  (%17,)
}

def @func_6153() -> Tensor[(30, 9), float32] {
  @func_5360() /* ty=Tensor[(30, 9), float32] */
}

def @func_8103() -> Tensor[(15, 8, 1), float64] {
  %18 = @func_5567() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) */;
  %18.0
}

def @func_10958() -> (Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(15, 8, 1), float64]) {
  %19 = @func_10031() /* ty=(Tensor[(30, 9), float32],) */;
  %20 = @func_8888() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float32]) */;
  %21 = @func_7705() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) */;
  %22 = %19.0;
  %23 = %20.0;
  %24 = @func_5175() /* ty=Tensor[(3, 10, 9), float32] */;
  %25 = %21.2;
  (%22, %23, %24, %25)
}

def @func_11124() -> (Tensor[(15, 8, 1), float64], Tensor[(9, 13, 2), float64], Tensor[(234), float64]) {
  %26 = @func_8156() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32]) */;
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
  %28 = reshape(%27, newshape=[9, 13, 2]) /* ty=Tensor[(9, 13, 2), float64] */;
  %29 = %26.0;
  %30 = @func_9469(%28) /* ty=Tensor[(9, 13, 2), float64] */;
  (%29, %30, meta[relay.Constant][2] /* ty=Tensor[(234), float64] */)
}

def @func_9052(%var_9035: Tensor[(660), float64], %var_9041: Tensor[(1920), float64]) -> (Tensor[(30, 9), float32], Tensor[(660), float64], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(15, 8, 16), int32], Tensor[(1920), float64]) {
  %31 = cast(meta[relay.Constant][3] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %32 = cast(meta[relay.Constant][4] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %33 = cast(%var_9035, dtype="float64") /* ty=Tensor[(660), float64] */;
  %34 = reshape(%31, newshape=[]) /* ty=uint64 */;
  %35 = reshape(%32, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), uint64] */;
  %36 = reshape(%33, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %37 = @func_451(%34, %35, %36) /* ty=(Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
  %38 = cast(%var_9041, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %39 = reshape(%38, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float64] */;
  %40 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  %41 = %37.2;
  %42 = @func_6598(%39) /* ty=Tensor[(15, 8, 16), int32] */;
  (%40, %41, meta[relay.Constant][3] /* ty=uint64 */, meta[relay.Constant][4] /* ty=Tensor[(28), uint64] */, %var_9035, %42, %var_9041)
}

def @func_10031() -> (Tensor[(30, 9), float32],) {
  %43 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
  %44 = %43.0;
  (%44,)
}

def @func_5835(%var_5824: Tensor[(8, 2, 2), float64]) -> Tensor[(8, 2, 2), float64] {
  %45 = cast(%var_5824, dtype="float64") /* ty=Tensor[(8, 2, 2), float64] */;
  sinh(%45) /* ty=Tensor[(8, 2, 2), float64] */
}

def @func_1844(%var_1822: Tensor[(11, 5, 4), float64], %var_1836: Tensor[(490), float32]) -> (Tensor[(11, 5, 4), float64], Tensor[(5, 15, 8), float32], Tensor[(490), float32]) {
  %46 = cast(%var_1822, dtype="float64") /* ty=Tensor[(11, 5, 4), float64] */;
  %47 = cast(%var_1836, dtype="float32") /* ty=Tensor[(490), float32] */;
  %48 = reshape(%47, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), float32] */;
  %49 = @func_1325(%48) /* ty=(Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */;
  %50 = atan(%46) /* ty=Tensor[(11, 5, 4), float64] */;
  %51 = %49.5;
  (%50, %51, %var_1836)
}

def @func_5567() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) {
  %52 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  %53 = cast(meta[relay.Constant][5] /* ty=Tensor[(30, 9), float32] */, dtype="int64") /* ty=Tensor[(30, 9), int64] */;
  %54 = shape_of(%52, dtype="int32") /* ty=Tensor[(2), int32] */;
  %55 = cast(%52, dtype="int64") /* ty=Tensor[(30, 9), int64] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %57 = bitwise_xor(%55, %56) /* ty=Tensor[(30, 9), int64] */;
  %58 = cast(meta[relay.Constant][5] /* ty=Tensor[(30, 9), float32] */, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %59 = shape_of(%57, dtype="int32") /* ty=Tensor[(2), int32] */;
  %60 = cast(%57, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %62 = @func_5034() /* ty=Tensor[(15, 8, 1), float64] */;
  %63 = floor_divide(%60, %61) /* ty=Tensor[(30, 9), float32] */;
  (%62, %63)
}

def @func_4432() -> (Tensor[(15, 8, 1), float64],) {
  %64 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %65 = asinh(%64) /* ty=Tensor[(15, 8, 1), float32] */;
  %66 = cast(%65, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
  %67 = cosh(%66) /* ty=Tensor[(15, 8, 1), float64] */;
  (%67,)
}

def @func_5269(%var_5247: Tensor[(15, 8, 9), float64], %var_5259: Tensor[(40), int32]) -> (Tensor[(15, 8, 9), bool], Tensor[(7, 4), uint64], Tensor[(40), int32], Tensor[(660), float64]) {
  %68 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %69 = %68.0;
  %70 = cast(%69, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %71 = cast(%var_5247, dtype="bool") /* ty=Tensor[(15, 8, 9), bool] */;
  %72 = cast(%var_5259, dtype="int32") /* ty=Tensor[(40), int32] */;
  %73 = cast(%69, dtype="int32") /* ty=Tensor[(15, 8, 1), int32] */;
  %74 = cast(meta[relay.Constant][7] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %75 = reshape(%72, newshape=[8, 1, 5]) /* ty=Tensor[(8, 1, 5), int32] */;
  %76 = reshape(%73, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), int32] */;
  %77 = reshape(%74, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %78 = @func_4623(%75, %76, %77) /* ty=(Tensor[(8, 3, 5), int32], Tensor[(7, 4), uint64], Tensor[(3, 504), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(600), float32], Tensor[(15, 4, 9), bool], int16, Tensor[(540), int16]) */;
  %79 = greater(%70, %71) /* ty=Tensor[(15, 8, 9), bool] */;
  %80 = %78.1;
  (%79, %80, %var_5259, meta[relay.Constant][7] /* ty=Tensor[(660), float64] */)
}

def @func_10749(%var_10713: uint64, %var_10714: Tensor[(14, 2), uint64], %var_10715: Tensor[(660), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(11, 4, 15), float64], uint64, Tensor[(14, 2), uint64], Tensor[(660), float64], Tensor[(30, 9), float32]) {
  %81 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %82 = cast(%var_10713, dtype="uint64") /* ty=uint64 */;
  %83 = cast(%var_10714, dtype="uint64") /* ty=Tensor[(14, 2), uint64] */;
  %84 = cast(%var_10715, dtype="float64") /* ty=Tensor[(660), float64] */;
  %85 = reshape(%82, newshape=[]) /* ty=uint64 */;
  %86 = reshape(%83, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), uint64] */;
  %87 = reshape(%84, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %88 = @func_451(%85, %86, %87) /* ty=(Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
  %89 = %81.0;
  %90 = %88.1;
  %91 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  (%89, %90, %var_10713, %var_10714, %var_10715, %91)
}

def @func_556(%var_507: Tensor[(10, 11, 2), float32], %var_551: Tensor[(7, 4), uint64]) -> (Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) {
  %92 = cast(meta[relay.Constant][8] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %93 = reshape(%92, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %94 = @func_253(%93) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %95 = cast(%var_507, dtype="float32") /* ty=Tensor[(10, 11, 2), float32] */;
  %96 = tan(%95) /* ty=Tensor[(10, 11, 2), float32] */;
  %97 = cast(%var_507, dtype="float32") /* ty=Tensor[(10, 11, 2), float32] */;
  %98 = shape_of(%96, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%96, dtype="float32") /* ty=Tensor[(10, 11, 2), float32] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %101 = cast(meta[relay.Constant][9] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %102 = cast(%var_551, dtype="uint64") /* ty=Tensor[(7, 4), uint64] */;
  %103 = cast(meta[relay.Constant][8] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %104 = reshape(%101, newshape=[]) /* ty=uint64 */;
  %105 = reshape(%102, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), uint64] */;
  %106 = reshape(%103, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %107 = @func_451(%104, %105, %106) /* ty=(Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
  %108 = %94.0;
  %109 = power(%99, %100) /* ty=Tensor[(10, 11, 2), float32] */;
  %110 = %107.1;
  (%108, meta[relay.Constant][8] /* ty=Tensor[(660), float64] */, %109, %110, meta[relay.Constant][9] /* ty=uint64 */, %var_551)
}

def @func_2433(%var_2382: Tensor[(12, 9, 14), float32], %var_2391: Tensor[(1, 660), float64], %var_2416: Tensor[(490), float32], %var_2421: Tensor[(600), float32]) -> (Tensor[(12, 9, 14), float32], Tensor[(1, 660), float64], Tensor[(14, 10, ?), float32], Tensor[(330, 2), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(7, 4), uint64], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), float64]) {
  %111 = cast(%var_2382, dtype="float32") /* ty=Tensor[(12, 9, 14), float32] */;
  %112 = cast(%var_2391, dtype="float64") /* ty=Tensor[(1, 660), float64] */;
  %113 = reshape(%112, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %114 = @func_357(%113) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %115 = %114.0;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(14, 10, ?), float32] */;
  %117 = cast(%var_2391, dtype="float64") /* ty=Tensor[(1, 660), float64] */;
  %118 = reshape(%117, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %119 = @func_357(%118) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %120 = cast(%var_2416, dtype="float32") /* ty=Tensor[(490), float32] */;
  %121 = reshape(%120, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), float32] */;
  %122 = @func_1325(%121) /* ty=(Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */;
  %123 = cast(meta[relay.Constant][10] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %124 = cast(%var_2421, dtype="float32") /* ty=Tensor[(600), float32] */;
  %125 = reshape(%123, newshape=[2, 16, 14]) /* ty=Tensor[(2, 16, 14), float64] */;
  %126 = reshape(%124, newshape=[60, 10]) /* ty=Tensor[(60, 10), float32] */;
  %127 = @func_1948(%125, %126) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(220), float32], Tensor[(7, 4), uint64], Tensor[(5, 15, 8), float32], Tensor[(60, 10), float32], Tensor[(2, 16, 14), float32]) */;
  %128 = cast(meta[relay.Constant][10] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %129 = cast(%var_2421, dtype="float32") /* ty=Tensor[(600), float32] */;
  %130 = reshape(%128, newshape=[2, 16, 14]) /* ty=Tensor[(2, 16, 14), float64] */;
  %131 = reshape(%129, newshape=[60, 10]) /* ty=Tensor[(60, 10), float32] */;
  %132 = @func_1948(%130, %131) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(220), float32], Tensor[(7, 4), uint64], Tensor[(5, 15, 8), float32], Tensor[(60, 10), float32], Tensor[(2, 16, 14), float32]) */;
  %133 = log(%111) /* ty=Tensor[(12, 9, 14), float32] */;
  %134 = log(%116) /* ty=Tensor[(14, 10, ?), float32] */;
  %135 = %119.2;
  %136 = %122.4;
  %137 = %127.2;
  %138 = %132.0;
  (%133, %var_2391, %134, %135, %136, %var_2416, %137, meta[relay.Constant][10] /* ty=Tensor[(448), float64] */, %var_2421, %138)
}

def @func_8424(%var_8372: Tensor[(6, 14, 4), int32], %var_8373: Tensor[(6, 14, 4), int32]) -> (Tensor[(6, 14, 4), float64], Tensor[(15, 8, 1), float64], Tensor[(6, 14, 4), float32]) {
  %139 = cast(%var_8372, dtype="float64") /* ty=Tensor[(6, 14, 4), float64] */;
  %140 = @func_6615() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %141 = cast(%var_8373, dtype="bool") /* ty=Tensor[(6, 14, 4), bool] */;
  %142 = shape_of(%var_8372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%var_8372, dtype="bool") /* ty=Tensor[(6, 14, 4), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %145 = not_equal(%143, %144) /* ty=Tensor[(6, 14, 4), bool] */;
  %146 = cast(%var_8373, dtype="float32") /* ty=Tensor[(6, 14, 4), float32] */;
  %147 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%145, dtype="float32") /* ty=Tensor[(6, 14, 4), float32] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %150 = sqrt(%139) /* ty=Tensor[(6, 14, 4), float64] */;
  %151 = %140.0;
  %152 = floor_mod(%148, %149) /* ty=Tensor[(6, 14, 4), float32] */;
  (%150, %151, %152)
}

def @func_7480(%var_7442: Tensor[(30, 9), float64]) -> (Tensor[(30, 9), bool], Tensor[(30, 9), float32], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) {
  %153 = @func_6673() /* ty=(Tensor[(30, 9), float64],) */;
  %154 = %153.0;
  %155 = cast(%var_7442, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
  %156 = shape_of(%154, dtype="int32") /* ty=Tensor[(2), int32] */;
  %157 = cast(%154, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %159 = cast(%var_7442, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %160 = cast(meta[relay.Constant][11] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %161 = reshape(%160, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float64] */;
  %162 = @func_2033(%161) /* ty=(Tensor[(9, 10, 11), float64],) */;
  %163 = equal(%157, %158) /* ty=Tensor[(30, 9), bool] */;
  %164 = exp(%159) /* ty=Tensor[(30, 9), float32] */;
  %165 = %162.0;
  (%163, %164, %165, meta[relay.Constant][11] /* ty=Tensor[(990), float64] */)
}

def @func_8446(%var_8439: bool, %var_8440: Tensor[(6, 9, 16), bool]) -> (Tensor[(6, 9, 16), bool],) {
  %166 = cast(%var_8439, dtype="bool") /* ty=bool */;
  %167 = cast(%var_8440, dtype="bool") /* ty=Tensor[(6, 9, 16), bool] */;
  %168 = logical_and(%166, %167) /* ty=Tensor[(6, 9, 16), bool] */;
  (%168,)
}

def @func_7110(%var_7083: Tensor[(15, 8, 8), float64], %var_7092: Tensor[(3, 90), float32]) -> (Tensor[(15, 8, 8), uint32], Tensor[(3, 10, 9), float32], Tensor[(3, 90), float32]) {
  %169 = @func_5912() /* ty=Tensor[(15, 8, 1), float64] */;
  %170 = cast(%169, dtype="uint32") /* ty=Tensor[(15, 8, 1), uint32] */;
  %171 = cast(%var_7083, dtype="uint32") /* ty=Tensor[(15, 8, 8), uint32] */;
  %172 = cast(%var_7092, dtype="float32") /* ty=Tensor[(3, 90), float32] */;
  %173 = reshape(%172, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %174 = add(%170, %171) /* ty=Tensor[(15, 8, 8), uint32] */;
  %175 = @func_3731(%173) /* ty=Tensor[(3, 10, 9), float32] */;
  (%174, %175, %var_7092)
}

def @func_5034() -> Tensor[(15, 8, 1), float64] {
  %176 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %176.0
}

def @func_8547(%var_8536: Tensor[(15, 8, 10), float64]) -> (Tensor[(15, 8, 10), bool], Tensor[(30, 9), float64]) {
  %177 = @func_5034() /* ty=Tensor[(15, 8, 1), float64] */;
  %178 = cast(%177, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %179 = cast(%var_8536, dtype="bool") /* ty=Tensor[(15, 8, 10), bool] */;
  %180 = @func_6673() /* ty=(Tensor[(30, 9), float64],) */;
  %181 = greater(%178, %179) /* ty=Tensor[(15, 8, 10), bool] */;
  %182 = %180.0;
  (%181, %182)
}

def @func_6247(%var_6242: Tensor[(600), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) {
  %183 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %184 = cast(meta[relay.Constant][12] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %185 = reshape(%184, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %186 = cast(%var_6242, dtype="float32") /* ty=Tensor[(600), float32] */;
  %187 = reshape(%186, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %188 = @func_718(%187) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) */;
  %189 = %183.0;
  %190 = @func_3731(%185) /* ty=Tensor[(3, 10, 9), float32] */;
  %191 = %188.0;
  (%189, %190, meta[relay.Constant][12] /* ty=Tensor[(270), float32] */, %191, %var_6242)
}

def @func_6673() -> (Tensor[(30, 9), float64],) {
  %192 = @func_6153() /* ty=Tensor[(30, 9), float32] */;
  %193 = cast(%192, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %194 = cos(%193) /* ty=Tensor[(30, 9), float64] */;
  (%194,)
}

def @func_6906(%var_6899: Tensor[(30, 9), float64]) -> Tensor[(30, 9), uint8] {
  %195 = @func_6745() /* ty=(Tensor[(30, 9), float64],) */;
  %196 = %195.0;
  %197 = cast(%var_6899, dtype="uint8") /* ty=Tensor[(30, 9), uint8] */;
  %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(2), int32] */;
  %199 = cast(%196, dtype="uint8") /* ty=Tensor[(30, 9), uint8] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  left_shift(%199, %200) /* ty=Tensor[(30, 9), uint8] */
}

def @func_8347() -> (Tensor[(270), float32], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
  %201 = @func_8244() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(270), float32], Tensor[(11, 4, 15), float64], Tensor[(28), uint64], Tensor[(10, 66), float64]) */;
  %202 = @func_7705() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) */;
  %203 = %202.1;
  %204 = cast(%203, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %205 = @func_6615() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %206 = %201.2;
  %207 = log(%204) /* ty=Tensor[(30, 9), float64] */;
  %208 = %205.0;
  (%206, %207, %208)
}

def @func_6850() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %209 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %210 = @func_5567() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) */;
  %211 = %209.0;
  %212 = %210.0;
  (%211, %212)
}

def @main(%var_11411: Tensor[(1, 6, 6), float32], %var_11412: Tensor[(7, 6, 6), float32]) -> Tensor[(7, 6, 6), float32] {
  %213 = cast(%var_11411, dtype="float32") /* ty=Tensor[(1, 6, 6), float32] */;
  %214 = cast(%var_11412, dtype="float32") /* ty=Tensor[(7, 6, 6), float32] */;
  divide(%213, %214) /* ty=Tensor[(7, 6, 6), float32] */
}

def @func_11386(%var_11354: Tensor[(490, 1), float32], %var_11355: Tensor[(600), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(490, 1), float32], Tensor[(600), float32], Tensor[(15, 8, 1), float64], Tensor[(756, 2), bool], Tensor[(11, 16, 13), float32], Tensor[(2288), float32]) {
  %215 = @func_10684() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %216 = cast(meta[relay.Constant][13] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %217 = reshape(%216, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %218 = @func_357(%217) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %219 = @func_8655() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %220 = cast(meta[relay.Constant][14] /* ty=Tensor[(756, 2), float32] */, dtype="float32") /* ty=Tensor[(756, 2), float32] */;
  %221 = cast(meta[relay.Constant][13] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %222 = cast(%var_11354, dtype="float32") /* ty=Tensor[(490, 1), float32] */;
  %223 = cast(%var_11355, dtype="float32") /* ty=Tensor[(600), float32] */;
  %224 = reshape(%220, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), float32] */;
  %225 = reshape(%221, newshape=[1, 660]) /* ty=Tensor[(1, 660), float64] */;
  %226 = reshape(%222, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %227 = reshape(%223, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %228 = @func_2433(%224, %225, %226, %227) /* ty=(Tensor[(12, 9, 14), float32], Tensor[(1, 660), float64], Tensor[(14, 10, ?), float32], Tensor[(330, 2), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(7, 4), uint64], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), float64]) */;
  %229 = %228.0;
  %230 = cast(%229, dtype="bool") /* ty=Tensor[(12, 9, 14), bool] */;
  %231 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(756, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %232 = cast(meta[relay.Constant][14] /* ty=Tensor[(756, 2), float32] */, dtype="bool") /* ty=Tensor[(756, 2), bool] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %234 = cast(meta[relay.Constant][15] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %235 = reshape(%234, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), float32] */;
  %236 = @func_3169(%235) /* ty=(Tensor[(11, 16, 13), float32],) */;
  %237 = %215.0;
  %238 = %218.0;
  %239 = %219.0;
  %240 = not_equal(%232, %233) /* ty=Tensor[(756, 2), bool] */;
  %241 = %236.0;
  (%237, %238, meta[relay.Constant][13] /* ty=Tensor[(660), float64] */, %var_11354, %var_11355, %239, %240, %241, meta[relay.Constant][15] /* ty=Tensor[(2288), float32] */)
}

def @func_7636() -> Tensor[(15, 8, 1), float64] {
  %242 = @func_5962() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %242.0
}

def @func_2946(%var_2884: Tensor[(1, 16, 3), float32], %var_2885: Tensor[(3, 16, 3), float32], %var_2894: Tensor[(490), float32], %var_2914: Tensor[(600, 1), float32], %var_2918: uint64) -> (Tensor[(3, 16, 3), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(660), float64], Tensor[(220), float32], Tensor[(28), uint64], Tensor[(490), float32], Tensor[(5, 15, 8), float64], Tensor[(600, 1), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(11, 5, 4), float64]) {
  %243 = cast(%var_2884, dtype="float32") /* ty=Tensor[(1, 16, 3), float32] */;
  %244 = cast(%var_2885, dtype="float32") /* ty=Tensor[(3, 16, 3), float32] */;
  %245 = cast(%var_2894, dtype="float32") /* ty=Tensor[(490), float32] */;
  %246 = reshape(%245, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), float32] */;
  %247 = @func_1325(%246) /* ty=(Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */;
  %248 = cast(meta[relay.Constant][16] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %249 = cast(meta[relay.Constant][17] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %250 = reshape(%248, newshape=[10, 11, 2]) /* ty=Tensor[(10, 11, 2), float32] */;
  %251 = reshape(%249, newshape=[7, 4]) /* ty=Tensor[(7, 4), uint64] */;
  %252 = @func_556(%250, %251) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) */;
  %253 = cast(meta[relay.Constant][16] /* ty=Tensor[(220), float32] */, dtype="float64") /* ty=Tensor[(220), float64] */;
  %254 = %247.4;
  %255 = cast(%254, dtype="float32") /* ty=Tensor[(7, 14, 5), float32] */;
  %256 = reshape(%253, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), float64] */;
  %257 = reshape(%255, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %258 = @func_1844(%256, %257) /* ty=(Tensor[(11, 5, 4), float64], Tensor[(5, 15, 8), float32], Tensor[(490), float32]) */;
  %259 = cast(%var_2914, dtype="float32") /* ty=Tensor[(600, 1), float32] */;
  %260 = reshape(%259, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %261 = @func_718(%260) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) */;
  %262 = cast(%var_2918, dtype="uint64") /* ty=uint64 */;
  %263 = cast(meta[relay.Constant][17] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %264 = %252.1;
  %265 = cast(%264, dtype="float64") /* ty=Tensor[(660), float64] */;
  %266 = reshape(%262, newshape=[]) /* ty=uint64 */;
  %267 = reshape(%263, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), uint64] */;
  %268 = reshape(%265, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %269 = @func_451(%266, %267, %268) /* ty=(Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
  %270 = cast(meta[relay.Constant][16] /* ty=Tensor[(220), float32] */, dtype="float64") /* ty=Tensor[(220), float64] */;
  %271 = %258.2;
  %272 = cast(%271, dtype="float32") /* ty=Tensor[(490), float32] */;
  %273 = reshape(%270, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), float64] */;
  %274 = reshape(%272, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %275 = @func_1844(%273, %274) /* ty=(Tensor[(11, 5, 4), float64], Tensor[(5, 15, 8), float32], Tensor[(490), float32]) */;
  %276 = minimum(%243, %244) /* ty=Tensor[(3, 16, 3), float32] */;
  %277 = %261.1;
  %278 = %269.1;
  %279 = %275.0;
  (%276, %254, %var_2894, %264, meta[relay.Constant][16] /* ty=Tensor[(220), float32] */, meta[relay.Constant][17] /* ty=Tensor[(28), uint64] */, %271, %277, %var_2914, %278, %var_2918, %279)
}

def @func_6745() -> (Tensor[(30, 9), float64],) {
  %280 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
  %281 = %280.0;
  %282 = cast(%281, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %283 = asin(%282) /* ty=Tensor[(30, 9), float64] */;
  (%283,)
}

def @func_8888() -> (Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float32]) {
  %284 = @func_6785() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) */;
  %285 = %284.2;
  %286 = cast(%285, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %287 = @func_5093() /* ty=Tensor[(15, 8, 1), float64] */;
  %288 = log2(%286) /* ty=Tensor[(9, 10, 11), float32] */;
  (%287, %288)
}

def @func_4564() -> (Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) {
  %289 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %290 = cast(meta[relay.Constant][18] /* ty=Tensor[(30, 9), float32] */, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %291 = reshape(%290, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %292 = %289.0;
  %293 = @func_3731(%291) /* ty=Tensor[(3, 10, 9), float32] */;
  (%292, %293, meta[relay.Constant][18] /* ty=Tensor[(30, 9), float32] */)
}

def @func_6944() -> (Tensor[(15, 8, 1), float64],) {
  %294 = @func_6850() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %295 = %294.1;
  (%295,)
}

def @func_6598(%var_6592: Tensor[(15, 8, 16), float64]) -> Tensor[(15, 8, 16), int32] {
  %296 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="int32") /* ty=Tensor[(15, 8, 1), int32] */;
  %299 = cast(%var_6592, dtype="int32") /* ty=Tensor[(15, 8, 16), int32] */;
  subtract(%298, %299) /* ty=Tensor[(15, 8, 16), int32] */
}

def @func_7278() -> Tensor[(15, 8, 1), float64] {
  %300 = @func_6850() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %300.0
}

def @func_8940(%var_8915: Tensor[(1920), float64], %var_8935: Tensor[(490), float32]) -> (Tensor[(15, 8, 16), int32], Tensor[(1920), float64], Tensor[(15, 8, 1), float64], Tensor[(30, 9), bool], Tensor[(11, 4, 15), int8], Tensor[(490), float32], Tensor[(30, 9), float32]) {
  %301 = cast(%var_8915, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %302 = reshape(%301, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float64] */;
  %303 = @func_6944() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %304 = @func_5567() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) */;
  %305 = %304.1;
  %306 = cast(meta[relay.Constant][19] /* ty=Tensor[(30, 9), float32] */, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(2), int32] */;
  %308 = cast(%305, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %310 = cast(%var_8935, dtype="float32") /* ty=Tensor[(490), float32] */;
  %311 = reshape(%310, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), float32] */;
  %312 = @func_1325(%311) /* ty=(Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */;
  %313 = cast(meta[relay.Constant][19] /* ty=Tensor[(30, 9), float32] */, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %314 = log2(%313) /* ty=Tensor[(30, 9), float64] */;
  %315 = cast(%314, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %316 = @func_6598(%302) /* ty=Tensor[(15, 8, 16), int32] */;
  %317 = %303.0;
  %318 = less_equal(%308, %309) /* ty=Tensor[(30, 9), bool] */;
  %319 = %312.3;
  %320 = acosh(%315) /* ty=Tensor[(30, 9), float32] */;
  (%316, %var_8915, %317, %318, %319, %var_8935, %320)
}

def @func_6058(%var_6048: Tensor[(660), float64]) -> (Tensor[(30, 9), float32], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) {
  %321 = cast(%var_6048, dtype="float64") /* ty=Tensor[(660), float64] */;
  %322 = reshape(%321, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %323 = @func_253(%322) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %324 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  %325 = %323.0;
  (%324, %325, %var_6048)
}

def @func_8768() -> (Tensor[(15, 8, 1), float64],) {
  %326 = @func_6867() /* ty=Tensor[(15, 8, 1), float64] */;
  (%326,)
}

def @func_6615() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %327 = @func_6114() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %328 = @func_5034() /* ty=Tensor[(15, 8, 1), float64] */;
  %329 = %327.0;
  (%328, %329)
}

def @func_10364() -> Tensor[(15, 8, 1), float64] {
  @func_4652() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_9492(%var_9474: Tensor[(13, 8, 12), float32], %var_9475: Tensor[(13, 8, 12), float32]) -> Tensor[(13, 8, 12), bool] {
  %330 = cast(%var_9475, dtype="bool") /* ty=Tensor[(13, 8, 12), bool] */;
  %331 = shape_of(%var_9474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%var_9474, dtype="bool") /* ty=Tensor[(13, 8, 12), bool] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%332, %333) /* ty=Tensor[(13, 8, 12), bool] */
}

def @func_10131() -> Tensor[(15, 8, 1), float64] {
  %334 = @func_5567() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) */;
  %334.0
}

def @func_7259(%var_7217: Tensor[(2, 120), float64]) -> (Tensor[(660), float64], Tensor[(2, 120), float64], Tensor[(15, 8, 240), bool], Tensor[(11, 4, 15), float64]) {
  %335 = cast(%var_7217, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %336 = cast(meta[relay.Constant][20] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %337 = reshape(%336, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %338 = @func_253(%337) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %339 = %338.1;
  %340 = cast(%339, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %341 = reshape(%335, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %342 = reshape(%340, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %343 = @func_5487(%341, %342) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(15, 8, 240), int32]) */;
  %344 = %343.2;
  %345 = cast(%344, dtype="float64") /* ty=Tensor[(15, 8, 240), float64] */;
  %346 = log(%345) /* ty=Tensor[(15, 8, 240), float64] */;
  %347 = @func_6615() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %348 = %347.0;
  %349 = cast(%346, dtype="bool") /* ty=Tensor[(15, 8, 240), bool] */;
  %350 = cast(%348, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %351 = cast(%339, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %352 = greater(%349, %350) /* ty=Tensor[(15, 8, 240), bool] */;
  %353 = acos(%351) /* ty=Tensor[(11, 4, 15), float64] */;
  (meta[relay.Constant][20] /* ty=Tensor[(660), float64] */, %var_7217, %352, %353)
}

def @func_8244() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(270), float32], Tensor[(11, 4, 15), float64], Tensor[(28), uint64], Tensor[(10, 66), float64]) {
  %354 = @func_5962() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %355 = cast(meta[relay.Constant][21] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %356 = reshape(%355, newshape=[30, 9]) /* ty=Tensor[(30, 9), float32] */;
  %357 = @func_6524(%356) /* ty=(Tensor[(30, 9), float32], Tensor[(30, 9), float64]) */;
  %358 = cast(meta[relay.Constant][22] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %359 = cast(meta[relay.Constant][23] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %360 = reshape(%358, newshape=[1, 28]) /* ty=Tensor[(1, 28), uint64] */;
  %361 = reshape(%359, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %362 = @func_7370(%360, %361) /* ty=(Tensor[(28), uint64], Tensor[(4, 48), float64], Tensor[(220), float32], Tensor[(1, 28), uint64], Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float32]) */;
  %363 = %354.0;
  %364 = %357.1;
  %365 = %362.4;
  (%363, %364, meta[relay.Constant][21] /* ty=Tensor[(270), float32] */, %365, meta[relay.Constant][22] /* ty=Tensor[(28), uint64] */, meta[relay.Constant][23] /* ty=Tensor[(10, 66), float64] */)
}

def @func_8156() -> (Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32]) {
  %366 = @func_6114() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %367 = %366.0;
  %368 = @func_5175() /* ty=Tensor[(3, 10, 9), float32] */;
  (%367, %368)
}

def @func_8655() -> (Tensor[(15, 8, 1), float64],) {
  %369 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %370 = %369.0;
  (%370,)
}

def @func_10861() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
  %371 = @func_8156() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32]) */;
  %372 = @func_6745() /* ty=(Tensor[(30, 9), float64],) */;
  %373 = @func_10556() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %374 = %371.0;
  %375 = %372.0;
  %376 = %373.0;
  (%374, %375, %376)
}

def @func_11325(%var_11292: Tensor[(1512), float32], %var_11293: Tensor[(660), float64], %var_11295: Tensor[(600), float32]) -> (Tensor[(1512), float32], Tensor[(660), float64], Tensor[(490, 1), float32], Tensor[(600), float32], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(15, 8, 660), float64]) {
  %377 = cast(meta[relay.Constant][25] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %378 = reshape(%377, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %379 = cast(%var_11292, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %380 = cast(%var_11293, dtype="float64") /* ty=Tensor[(660), float64] */;
  %381 = cast(meta[relay.Constant][24] /* ty=Tensor[(490, 1), float32] */, dtype="float32") /* ty=Tensor[(490, 1), float32] */;
  %382 = cast(%var_11295, dtype="float32") /* ty=Tensor[(600), float32] */;
  %383 = reshape(%379, newshape=[1512]) /* ty=Tensor[(1512), float32] */;
  %384 = reshape(%380, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %385 = reshape(%381, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %386 = reshape(%382, newshape=[60, 10]) /* ty=Tensor[(60, 10), float32] */;
  %387 = @func_9416(%383, %384, %385, %386) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(1, 660), float64], Tensor[(1512), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(60, 10), float32]) */;
  %388 = %387.1;
  %389 = @func_7039() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %390 = %389.0;
  %391 = cast(%388, dtype="float64") /* ty=Tensor[(1, 660), float64] */;
  %392 = cast(%390, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
  %393 = @func_3731(%378) /* ty=Tensor[(3, 10, 9), float32] */;
  %394 = power(%391, %392) /* ty=Tensor[(15, 8, 660), float64] */;
  (%var_11292, %var_11293, meta[relay.Constant][24] /* ty=Tensor[(490, 1), float32] */, %var_11295, %393, meta[relay.Constant][25] /* ty=Tensor[(270), float32] */, %394)
}

def @func_6181(%var_6176: Tensor[(40), int32], %var_6177: Tensor[(120), int32], %var_6178: Tensor[(660), float64]) -> (Tensor[(30, 9), float32], Tensor[(3, 504), float32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64]) {
  %395 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  %396 = cast(%395, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %397 = cast(%var_6176, dtype="int32") /* ty=Tensor[(40), int32] */;
  %398 = cast(%var_6177, dtype="int32") /* ty=Tensor[(120), int32] */;
  %399 = cast(%var_6178, dtype="float64") /* ty=Tensor[(660), float64] */;
  %400 = reshape(%397, newshape=[8, 1, 5]) /* ty=Tensor[(8, 1, 5), int32] */;
  %401 = reshape(%398, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), int32] */;
  %402 = reshape(%399, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %403 = @func_4623(%400, %401, %402) /* ty=(Tensor[(8, 3, 5), int32], Tensor[(7, 4), uint64], Tensor[(3, 504), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(600), float32], Tensor[(15, 4, 9), bool], int16, Tensor[(540), int16]) */;
  %404 = asinh(%396) /* ty=Tensor[(30, 9), float32] */;
  %405 = %403.2;
  (%404, %405, %var_6176, %var_6177, %var_6178)
}

def @func_4668() -> (Tensor[(15, 8, 1), float64],) {
  %406 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %407 = %406.0;
  (%407,)
}

def @func_6317(%var_6301: Tensor[(15, 13, 2), uint32]) -> (Tensor[(15, 13, 2), uint32],) {
  %408 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 13, 2), uint32] */, dtype="uint32") /* ty=Tensor[(15, 13, 2), uint32] */;
  %409 = shape_of(%var_6301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%var_6301, dtype="uint32") /* ty=Tensor[(15, 13, 2), uint32] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %412 = left_shift(%410, %411) /* ty=Tensor[(15, 13, 2), uint32] */;
  (%412,)
}

def @func_8729(%var_8669: Tensor[(5, 14, 12), float64], %var_8670: Tensor[(5, 14, 12), float64]) -> (Tensor[(5, 14, 12), float64], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %413 = cast(%var_8670, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
  %414 = shape_of(%var_8669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%var_8669, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %417 = @func_6850() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %418 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %419 = power(%415, %416) /* ty=Tensor[(5, 14, 12), float64] */;
  %420 = %417.0;
  %421 = %418.0;
  (%419, %420, %421)
}

def @func_5093() -> Tensor[(15, 8, 1), float64] {
  %422 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %422.0
}

def @func_9469(%var_9462: Tensor[(9, 13, 2), float64]) -> Tensor[(9, 13, 2), float64] {
  %423 = cast(%var_9462, dtype="float64") /* ty=Tensor[(9, 13, 2), float64] */;
  sqrt(%423) /* ty=Tensor[(9, 13, 2), float64] */
}

def @func_5912() -> Tensor[(15, 8, 1), float64] {
  %424 = @func_5509() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %424.0
}

def @func_8970() -> (Tensor[(4, 16, 14), float32], uint64, Tensor[(110, 2), float32]) {
  %425 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 16, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 16, 14), float32] */;
  %426 = cast(meta[relay.Constant][28] /* ty=Tensor[(110, 2), float32] */, dtype="float32") /* ty=Tensor[(110, 2), float32] */;
  %427 = cast(meta[relay.Constant][28] /* ty=Tensor[(110, 2), float32] */, dtype="float32") /* ty=Tensor[(110, 2), float32] */;
  %428 = reshape(%426, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
  %429 = reshape(%427, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
  %430 = @func_4747(%428, %429) /* ty=(Tensor[(15, 8, 1), float64], uint64, Tensor[(28), uint64], Tensor[(5, 44), float32]) */;
  %431 = sin(%425) /* ty=Tensor[(4, 16, 14), float32] */;
  %432 = %430.1;
  (%431, %432, meta[relay.Constant][28] /* ty=Tensor[(110, 2), float32] */)
}

def @func_4548(%var_4511: Tensor[(15, 8, 2), float64]) -> (Tensor[(15, 8, 1), float32], Tensor[(15, 8, 2), bool]) {
  %433 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %434 = %433.0;
  %435 = cast(%434, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %436 = cast(%434, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %437 = cast(%var_4511, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
  %438 = atan(%435) /* ty=Tensor[(15, 8, 1), float32] */;
  %439 = logical_or(%436, %437) /* ty=Tensor[(15, 8, 2), bool] */;
  (%438, %439)
}

def @func_10556() -> (Tensor[(15, 8, 1), float64],) {
  %440 = @func_6615() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %441 = %440.0;
  (%441,)
}

def @func_5423(%var_5414: Tensor[(4, 60), float64], %var_5421: Tensor[(660), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 2), bool], Tensor[(4, 60), float64], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) {
  %442 = cast(%var_5414, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %443 = reshape(%442, newshape=[15, 8, 2]) /* ty=Tensor[(15, 8, 2), float64] */;
  %444 = @func_4548(%443) /* ty=(Tensor[(15, 8, 1), float32], Tensor[(15, 8, 2), bool]) */;
  %445 = cast(%var_5421, dtype="float64") /* ty=Tensor[(660), float64] */;
  %446 = reshape(%445, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %447 = @func_253(%446) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %448 = @func_4652() /* ty=Tensor[(15, 8, 1), float64] */;
  %449 = %444.1;
  %450 = %447.0;
  (%448, %449, %var_5414, %450, %var_5421)
}

def @func_11087() -> Tensor[(15, 8, 1), float64] {
  %451 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %451.0
}

def @func_6383() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %452 = @func_6324() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %453 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %454 = %452.0;
  %455 = %453.0;
  (%454, %455)
}

def @func_6114() -> (Tensor[(15, 8, 1), float64],) {
  %456 = @func_5912() /* ty=Tensor[(15, 8, 1), float64] */;
  (%456,)
}

def @func_2477(%var_2457: Tensor[(2, 14, 10), uint16], %var_2464: uint64, %var_2465: Tensor[(28), uint64], %var_2466: Tensor[(660), float64], %var_2469: Tensor[(448), float64], %var_2470: Tensor[(600), float32]) -> (Tensor[(2, 14, 10), uint16], Tensor[(7, 1, 4), bool], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(220), float32], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), int8]) {
  %457 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 14, 10), uint16] */, dtype="uint16") /* ty=Tensor[(2, 14, 10), uint16] */;
  %458 = shape_of(%var_2457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%var_2457, dtype="uint16") /* ty=Tensor[(2, 14, 10), uint16] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %461 = cast(%var_2464, dtype="uint64") /* ty=uint64 */;
  %462 = cast(%var_2465, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %463 = cast(%var_2466, dtype="float64") /* ty=Tensor[(660), float64] */;
  %464 = reshape(%461, newshape=[]) /* ty=uint64 */;
  %465 = reshape(%462, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), uint64] */;
  %466 = reshape(%463, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %467 = @func_451(%464, %465, %466) /* ty=(Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
  %468 = cast(%var_2469, dtype="float64") /* ty=Tensor[(448), float64] */;
  %469 = cast(%var_2470, dtype="float32") /* ty=Tensor[(600), float32] */;
  %470 = reshape(%468, newshape=[2, 16, 14]) /* ty=Tensor[(2, 16, 14), float64] */;
  %471 = reshape(%469, newshape=[60, 10]) /* ty=Tensor[(60, 10), float32] */;
  %472 = @func_1948(%470, %471) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(220), float32], Tensor[(7, 4), uint64], Tensor[(5, 15, 8), float32], Tensor[(60, 10), float32], Tensor[(2, 16, 14), float32]) */;
  %473 = cast(%var_2466, dtype="float64") /* ty=Tensor[(660), float64] */;
  %474 = reshape(%473, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %475 = @func_357(%474) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %476 = multiply(%459, %460) /* ty=Tensor[(2, 14, 10), uint16] */;
  %477 = %467.0;
  %478 = %472.1;
  %479 = %475.5;
  (%476, %477, %var_2464, %var_2465, %var_2466, %478, %var_2469, %var_2470, %479)
}

def @func_9218(%var_9144: Tensor[(660), float64], %var_9145: uint64, %var_9184: Tensor[(55, 4), float32], %var_9185: Tensor[(28), uint64], %var_9204: Tensor[(600), float32]) -> (Tensor[(30, 9), float32], uint64, Tensor[(660), float64], uint64, Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64], Tensor[(30, 9), uint8], Tensor[(1, 220), float32], Tensor[(192), float64], Tensor[(55, 4), float32], Tensor[(28), uint64], Tensor[(3, 10, 9), float64], Tensor[(270), float32], Tensor[(600), float32], Tensor[(15, 8, 1), float64]) {
  %480 = cast(%var_9144, dtype="float64") /* ty=Tensor[(660), float64] */;
  %481 = cast(%var_9145, dtype="uint64") /* ty=uint64 */;
  %482 = reshape(%480, newshape=[660, 1]) /* ty=Tensor[(660, 1), float64] */;
  %483 = reshape(%481, newshape=[]) /* ty=uint64 */;
  %484 = @func_8084(%482, %483) /* ty=(Tensor[(15, 8, 1), float64], uint64, Tensor[(660, 1), float64], uint64) */;
  %485 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  %486 = cast(%485, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %487 = reshape(%486, newshape=[30, 9]) /* ty=Tensor[(30, 9), float64] */;
  %488 = @func_7480(%487) /* ty=(Tensor[(30, 9), bool], Tensor[(30, 9), float32], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) */;
  %489 = @func_6944() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %490 = cast(%485, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %491 = reshape(%490, newshape=[30, 9]) /* ty=Tensor[(30, 9), float64] */;
  %492 = cast(meta[relay.Constant][30] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %493 = cast(%var_9184, dtype="float32") /* ty=Tensor[(55, 4), float32] */;
  %494 = cast(%var_9185, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %495 = reshape(%492, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), float64] */;
  %496 = reshape(%493, newshape=[1, 220]) /* ty=Tensor[(1, 220), float32] */;
  %497 = reshape(%494, newshape=[28]) /* ty=Tensor[(28), uint64] */;
  %498 = @func_3708(%495, %496, %497) /* ty=(Tensor[(16, 12, 1), float64], Tensor[(11, 4, 15), float64], Tensor[(1, 220), float32], Tensor[(28), uint64]) */;
  %499 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %500 = %499.1;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %502 = cast(%var_9204, dtype="float32") /* ty=Tensor[(600), float32] */;
  %503 = reshape(%502, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %504 = @func_6247(%503) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */;
  %505 = @func_4889() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %506 = %484.3;
  %507 = %488.1;
  %508 = %489.0;
  %509 = @func_6906(%491) /* ty=Tensor[(30, 9), uint8] */;
  %510 = %498.2;
  %511 = sinh(%501) /* ty=Tensor[(3, 10, 9), float64] */;
  %512 = %504.2;
  %513 = %505.0;
  (%485, %506, %var_9144, %var_9145, %507, %508, %509, %510, meta[relay.Constant][30] /* ty=Tensor[(192), float64] */, %var_9184, %var_9185, %511, %512, %var_9204, %513)
}

def @func_11175() -> Tensor[(15, 8, 1), float64] {
  %514 = @func_6383() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %514.1
}

def @func_7862() -> Tensor[(15, 8, 1), float64] {
  @func_7278() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_10684() -> (Tensor[(15, 8, 1), float64],) {
  %515 = @func_4652() /* ty=Tensor[(15, 8, 1), float64] */;
  (%515,)
}

def @func_3708(%var_3679: Tensor[(16, 12, 1), float64], %var_3697: Tensor[(1, 220), float32], %var_3698: Tensor[(28), uint64]) -> (Tensor[(16, 12, 1), float64], Tensor[(11, 4, 15), float64], Tensor[(1, 220), float32], Tensor[(28), uint64]) {
  %516 = cast(%var_3679, dtype="float64") /* ty=Tensor[(16, 12, 1), float64] */;
  %517 = cast(%var_3697, dtype="float32") /* ty=Tensor[(1, 220), float32] */;
  %518 = cast(%var_3698, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %519 = reshape(%517, newshape=[10, 11, 2]) /* ty=Tensor[(10, 11, 2), float32] */;
  %520 = reshape(%518, newshape=[7, 4]) /* ty=Tensor[(7, 4), uint64] */;
  %521 = @func_556(%519, %520) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) */;
  %522 = rsqrt(%516) /* ty=Tensor[(16, 12, 1), float64] */;
  %523 = %521.3;
  (%522, %523, %var_3697, %var_3698)
}

def @func_7822() -> (Tensor[(15, 8, 8), int64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) {
  %524 = @func_5093() /* ty=Tensor[(15, 8, 1), float64] */;
  %525 = cast(%524, dtype="int64") /* ty=Tensor[(15, 8, 1), int64] */;
  %526 = cast(meta[relay.Constant][31] /* ty=Tensor[(15, 8, 8), float64] */, dtype="int64") /* ty=Tensor[(15, 8, 8), int64] */;
  %527 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
  %528 = @func_6944() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %529 = subtract(%525, %526) /* ty=Tensor[(15, 8, 8), int64] */;
  %530 = %527.0;
  %531 = %528.0;
  (%529, %530, %531)
}

def @func_9755(%var_9693: Tensor[(3, 90), float32], %var_9698: Tensor[(600), float32], %var_9708: Tensor[(1, 220), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(3, 90), float32], Tensor[(5, 15, 8), float64], Tensor[(600), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 220), int16]) {
  %532 = @func_8481() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %533 = cast(%var_9693, dtype="float32") /* ty=Tensor[(3, 90), float32] */;
  %534 = reshape(%533, newshape=[30, 9]) /* ty=Tensor[(30, 9), float32] */;
  %535 = @func_6524(%534) /* ty=(Tensor[(30, 9), float32], Tensor[(30, 9), float64]) */;
  %536 = cast(%var_9698, dtype="float32") /* ty=Tensor[(600), float32] */;
  %537 = reshape(%536, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %538 = @func_718(%537) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) */;
  %539 = cast(%var_9708, dtype="float32") /* ty=Tensor[(1, 220), float32] */;
  %540 = reshape(%539, newshape=[220]) /* ty=Tensor[(220), float32] */;
  %541 = @func_9123(%540) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(220), float32]) */;
  %542 = %541.0;
  %543 = cast(%var_9708, dtype="int16") /* ty=Tensor[(1, 220), int16] */;
  %544 = cast(%542, dtype="int16") /* ty=Tensor[(15, 8, 1), int16] */;
  %545 = %532.0;
  %546 = %535.1;
  %547 = %538.1;
  %548 = @func_7636() /* ty=Tensor[(15, 8, 1), float64] */;
  %549 = maximum(%543, %544) /* ty=Tensor[(15, 8, 220), int16] */;
  (%545, %546, %var_9693, %547, %var_9698, %548, %549)
}

def @func_8897() -> Tensor[(15, 8, 1), float64] {
  @func_6867() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_4889() -> (Tensor[(15, 8, 1), float64],) {
  %550 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %551 = %550.0;
  (%551,)
}

def @func_9656() -> Tensor[(15, 8, 1), float64] {
  %552 = @func_5509() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %552.0
}

def @func_718(%var_696: Tensor[(5, 15, 8), float32]) -> (Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) {
  %553 = cast(%var_696, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
  %554 = cast(%var_696, dtype="float64") /* ty=Tensor[(5, 15, 8), float64] */;
  %555 = sigmoid(%553) /* ty=Tensor[(5, 15, 8), float32] */;
  %556 = tan(%554) /* ty=Tensor[(5, 15, 8), float64] */;
  (%555, %556)
}

def @func_5214() -> (Tensor[(30, 9), float32],) {
  %557 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %558 = %557.2;
  (%558,)
}

def @func_3169(%var_3133: Tensor[(11, 16, 13), float32]) -> (Tensor[(11, 16, 13), float32],) {
  %559 = cast(%var_3133, dtype="float32") /* ty=Tensor[(11, 16, 13), float32] */;
  %560 = atanh(%559) /* ty=Tensor[(11, 16, 13), float32] */;
  (%560,)
}

def @func_9609() -> Tensor[(15, 8, 1), float64] {
  %561 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %561.0
}

def @func_6867() -> Tensor[(15, 8, 1), float64] {
  @func_5912() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_5175() -> Tensor[(3, 10, 9), float32] {
  %562 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %562.1
}

def @func_7422() -> (Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
  %563 = cast(meta[relay.Constant][32] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %564 = reshape(%563, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %565 = @func_6058(%564) /* ty=(Tensor[(30, 9), float32], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
  %566 = @func_6673() /* ty=(Tensor[(30, 9), float64],) */;
  %567 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %568 = %567.0;
  %569 = cast(%568, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
  %570 = %565.1;
  %571 = %566.0;
  %572 = asin(%569) /* ty=Tensor[(15, 8, 1), float64] */;
  (%570, meta[relay.Constant][32] /* ty=Tensor[(660), float64] */, %571, %572)
}

def @func_3000(%var_2991: Tensor[(9, 14, 4), int16]) -> Tensor[(9, 14, 4), int16] {
  %573 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 14, 4), int16] */, dtype="int16") /* ty=Tensor[(9, 14, 4), int16] */;
  %574 = shape_of(%var_2991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%var_2991, dtype="int16") /* ty=Tensor[(9, 14, 4), int16] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%575, %576) /* ty=Tensor[(9, 14, 4), int16] */
}

def @func_2033(%var_2003: Tensor[(9, 10, 11), float64]) -> (Tensor[(9, 10, 11), float64],) {
  %577 = cast(%var_2003, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
  %578 = log10(%577) /* ty=Tensor[(9, 10, 11), float64] */;
  (%578,)
}

def @func_4954() -> (Tensor[(15, 8, 1), float64],) {
  %579 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %580 = %579.0;
  (%580,)
}

def @func_6391(%var_6387: Tensor[(4, 12, 5), int32]) -> Tensor[(4, 12, 5), bool] {
  %581 = cast(%var_6387, dtype="bool") /* ty=Tensor[(4, 12, 5), bool] */;
  %582 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(4, 12, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 12, 5), int32] */, dtype="bool") /* ty=Tensor[(4, 12, 5), bool] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%583, %584) /* ty=Tensor[(4, 12, 5), bool] */
}

def @func_8518(%var_8497: Tensor[(7, 11, 7), uint64], %var_8498: Tensor[(7, 11, 7), uint64]) -> (Tensor[(7, 11, 7), float32], Tensor[(7, 11, 7), float32]) {
  %585 = cast(%var_8498, dtype="bool") /* ty=Tensor[(7, 11, 7), bool] */;
  %586 = shape_of(%var_8497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%var_8497, dtype="bool") /* ty=Tensor[(7, 11, 7), bool] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %589 = less_equal(%587, %588) /* ty=Tensor[(7, 11, 7), bool] */;
  %590 = cast(%589, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
  %591 = cast(%var_8498, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
  %592 = log2(%590) /* ty=Tensor[(7, 11, 7), float32] */;
  %593 = rsqrt(%591) /* ty=Tensor[(7, 11, 7), float32] */;
  (%592, %593)
}

def @func_10226(%var_10137: Tensor[(15, 10, 8), uint8], %var_10138: Tensor[(15, 10, 8), uint8], %var_10183: uint8, %var_10224: Tensor[(840), float64]) -> (Tensor[(15, 10, 8), uint8], Tensor[(15, 8, 2), bool], uint8, Tensor[(576), uint8], Tensor[(15, 10, 8), float32], Tensor[(5, 14, 12), float64], Tensor[(840), float64]) {
  %594 = cast(%var_10138, dtype="uint8") /* ty=Tensor[(15, 10, 8), uint8] */;
  %595 = shape_of(%var_10137, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(%var_10137, dtype="uint8") /* ty=Tensor[(15, 10, 8), uint8] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %598 = cast(%var_10183, dtype="uint8") /* ty=uint8 */;
  %599 = cast(meta[relay.Constant][35] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %600 = reshape(%598, newshape=[]) /* ty=uint8 */;
  %601 = reshape(%599, newshape=[6, 12, 8]) /* ty=Tensor[(6, 12, 8), uint8] */;
  %602 = @func_5809(%600, %601) /* ty=(Tensor[(6, 12, 8), uint8], Tensor[(15, 8, ?), bool], Tensor[(15, 8, 2), bool], Tensor[(240), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(11, 16, 13), float32], Tensor[(2288), float32]) */;
  %603 = cast(%var_10137, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %604 = cast(%var_10224, dtype="float64") /* ty=Tensor[(840), float64] */;
  %605 = cast(%var_10224, dtype="float64") /* ty=Tensor[(840), float64] */;
  %606 = reshape(%604, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), float64] */;
  %607 = reshape(%605, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), float64] */;
  %608 = @func_8729(%606, %607) /* ty=(Tensor[(5, 14, 12), float64], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %609 = bitwise_and(%596, %597) /* ty=Tensor[(15, 10, 8), uint8] */;
  %610 = %602.2;
  %611 = exp(%603) /* ty=Tensor[(15, 10, 8), float32] */;
  %612 = %608.0;
  (%609, %610, %var_10183, meta[relay.Constant][35] /* ty=Tensor[(576), uint8] */, %611, %612, %var_10224)
}

def @func_5487(%var_5463: Tensor[(240), float64], %var_5464: Tensor[(660), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(15, 8, 240), int32]) {
  %613 = cast(%var_5463, dtype="float64") /* ty=Tensor[(240), float64] */;
  %614 = cast(%var_5464, dtype="float64") /* ty=Tensor[(660), float64] */;
  %615 = reshape(%613, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %616 = reshape(%614, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %617 = @func_5423(%615, %616) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 2), bool], Tensor[(4, 60), float64], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
  %618 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %619 = %618.0;
  %620 = cast(%var_5463, dtype="int32") /* ty=Tensor[(240), int32] */;
  %621 = cast(%619, dtype="int32") /* ty=Tensor[(15, 8, 1), int32] */;
  %622 = %617.0;
  %623 = right_shift(%620, %621) /* ty=Tensor[(15, 8, 240), int32] */;
  (%622, %var_5464, %623)
}

def @func_253(%var_242: Tensor[(11, 4, 15), float64]) -> (Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) {
  %624 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %625 = acosh(%624) /* ty=Tensor[(11, 4, 15), float64] */;
  %626 = cast(%var_242, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %627 = shape_of(%625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(%625, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %630 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 4, 15), float64] */, dtype="int8") /* ty=Tensor[(11, 4, 15), int8] */;
  %631 = shape_of(%625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%625, dtype="int8") /* ty=Tensor[(11, 4, 15), int8] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %634 = power(%628, %629) /* ty=Tensor[(11, 4, 15), float64] */;
  %635 = bitwise_and(%632, %633) /* ty=Tensor[(11, 4, 15), int8] */;
  (%634, %635)
}

def @func_9389() -> (Tensor[(15, 8, 1), float64],) {
  %636 = @func_6324() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %637 = %636.0;
  (%637,)
}

def @func_4188(%var_4176: int16, %var_4177: Tensor[(15, 4, 9), int16]) -> (Tensor[(15, 4, 9), bool], Tensor[(3, 10, 9), float32], Tensor[(270), float32]) {
  %638 = cast(%var_4176, dtype="bool") /* ty=bool */;
  %639 = cast(%var_4177, dtype="bool") /* ty=Tensor[(15, 4, 9), bool] */;
  %640 = cast(meta[relay.Constant][38] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %641 = reshape(%640, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %642 = equal(%638, %639) /* ty=Tensor[(15, 4, 9), bool] */;
  %643 = @func_3731(%641) /* ty=Tensor[(3, 10, 9), float32] */;
  (%642, %643, meta[relay.Constant][38] /* ty=Tensor[(270), float32] */)
}

def @func_10056() -> (Tensor[(15, 8, 1), float64],) {
  %644 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %645 = %644.0;
  (%645,)
}

def @func_5360() -> Tensor[(30, 9), float32] {
  %646 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
  %647 = %646.0;
  %648 = cast(%647, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  log10(%648) /* ty=Tensor[(30, 9), float32] */
}

def @func_6355(%var_6350: Tensor[(220), float32]) -> (Tensor[(15, 8, 1), float64], uint64, Tensor[(220), float32]) {
  %649 = @func_4889() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %650 = cast(%var_6350, dtype="float32") /* ty=Tensor[(220), float32] */;
  %651 = cast(%var_6350, dtype="float32") /* ty=Tensor[(220), float32] */;
  %652 = reshape(%650, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
  %653 = reshape(%651, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
  %654 = @func_4747(%652, %653) /* ty=(Tensor[(15, 8, 1), float64], uint64, Tensor[(28), uint64], Tensor[(5, 44), float32]) */;
  %655 = %649.0;
  %656 = %654.1;
  (%655, %656, %var_6350)
}

def @func_5962() -> (Tensor[(15, 8, 1), float64],) {
  %657 = @func_5709() /* ty=Tensor[(15, 8, 1), float64] */;
  (%657,)
}

def @func_6324() -> (Tensor[(15, 8, 1), float64],) {
  %658 = @func_5034() /* ty=Tensor[(15, 8, 1), float64] */;
  (%658,)
}

def @func_4747(%var_4720: Tensor[(5, 44), float32], %var_4743: Tensor[(5, 44), float32]) -> (Tensor[(15, 8, 1), float64], uint64, Tensor[(28), uint64], Tensor[(5, 44), float32]) {
  %659 = cast(%var_4720, dtype="float32") /* ty=Tensor[(5, 44), float32] */;
  %660 = cast(meta[relay.Constant][39] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %661 = reshape(%659, newshape=[10, 11, 2]) /* ty=Tensor[(10, 11, 2), float32] */;
  %662 = reshape(%660, newshape=[7, 4]) /* ty=Tensor[(7, 4), uint64] */;
  %663 = @func_556(%661, %662) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) */;
  %664 = cast(%var_4720, dtype="float32") /* ty=Tensor[(5, 44), float32] */;
  %665 = log2(%664) /* ty=Tensor[(5, 44), float32] */;
  %666 = cast(%var_4743, dtype="float32") /* ty=Tensor[(5, 44), float32] */;
  %667 = shape_of(%665, dtype="int32") /* ty=Tensor[(2), int32] */;
  %668 = cast(%665, dtype="float32") /* ty=Tensor[(5, 44), float32] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %670 = @func_4652() /* ty=Tensor[(15, 8, 1), float64] */;
  %671 = %663.4;
  %672 = divide(%668, %669) /* ty=Tensor[(5, 44), float32] */;
  (%670, %671, meta[relay.Constant][39] /* ty=Tensor[(28), uint64] */, %672)
}

def @func_10505(%var_10446: bool, %var_10482: Tensor[(1920), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(8, 2, 2), float64], Tensor[(32), float64], Tensor[(6, 9, 16), bool], bool, Tensor[(864), bool], Tensor[(11, 4, 15), int8], Tensor[(1920), float64], Tensor[(490), float32], Tensor[(15, 8, 1), float64]) {
  %673 = cast(meta[relay.Constant][40] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %674 = reshape(%673, newshape=[8, 2, 2]) /* ty=Tensor[(8, 2, 2), float64] */;
  %675 = cast(%var_10446, dtype="bool") /* ty=bool */;
  %676 = cast(meta[relay.Constant][41] /* ty=Tensor[(864), bool] */, dtype="bool") /* ty=Tensor[(864), bool] */;
  %677 = reshape(%675, newshape=[]) /* ty=bool */;
  %678 = reshape(%676, newshape=[6, 9, 16]) /* ty=Tensor[(6, 9, 16), bool] */;
  %679 = @func_8446(%677, %678) /* ty=(Tensor[(6, 9, 16), bool],) */;
  %680 = cast(%var_10482, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %681 = cast(meta[relay.Constant][42] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %682 = reshape(%680, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %683 = reshape(%681, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %684 = @func_8940(%682, %683) /* ty=(Tensor[(15, 8, 16), int32], Tensor[(1920), float64], Tensor[(15, 8, 1), float64], Tensor[(30, 9), bool], Tensor[(11, 4, 15), int8], Tensor[(490), float32], Tensor[(30, 9), float32]) */;
  %685 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %686 = @func_8777() /* ty=Tensor[(15, 8, 1), float64] */;
  %687 = @func_5835(%674) /* ty=Tensor[(8, 2, 2), float64] */;
  %688 = %679.0;
  %689 = %684.4;
  %690 = %685.0;
  (%686, %687, meta[relay.Constant][40] /* ty=Tensor[(32), float64] */, %688, %var_10446, meta[relay.Constant][41] /* ty=Tensor[(864), bool] */, %689, %var_10482, meta[relay.Constant][42] /* ty=Tensor[(490), float32] */, %690)
}

def @func_10330(%var_10294: Tensor[(1080), float64], %var_10312: Tensor[(120), int32]) -> (Tensor[(30, 9), float32], Tensor[(3, 90), float32], Tensor[(960, 1), float64], Tensor[(15, 8, 9), bool], Tensor[(1080), float64], Tensor[(40), int32], Tensor[(120), int32], Tensor[(120), int32], Tensor[(660), float64], Tensor[(28), uint64], Tensor[(1, 1920), float64]) {
  %691 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
  %692 = cast(meta[relay.Constant][43] /* ty=Tensor[(960, 1), float64] */, dtype="float64") /* ty=Tensor[(960, 1), float64] */;
  %693 = %691.0;
  %694 = cast(%693, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %695 = reshape(%692, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float64] */;
  %696 = reshape(%694, newshape=[3, 90]) /* ty=Tensor[(3, 90), float32] */;
  %697 = @func_7110(%695, %696) /* ty=(Tensor[(15, 8, 8), uint32], Tensor[(3, 10, 9), float32], Tensor[(3, 90), float32]) */;
  %698 = cast(%var_10294, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %699 = cast(meta[relay.Constant][44] /* ty=Tensor[(40), int32] */, dtype="int32") /* ty=Tensor[(40), int32] */;
  %700 = reshape(%698, newshape=[15, 8, 9]) /* ty=Tensor[(15, 8, 9), float64] */;
  %701 = reshape(%699, newshape=[40]) /* ty=Tensor[(40), int32] */;
  %702 = @func_5269(%700, %701) /* ty=(Tensor[(15, 8, 9), bool], Tensor[(7, 4), uint64], Tensor[(40), int32], Tensor[(660), float64]) */;
  %703 = cast(meta[relay.Constant][44] /* ty=Tensor[(40), int32] */, dtype="int32") /* ty=Tensor[(40), int32] */;
  %704 = cast(%var_10312, dtype="int32") /* ty=Tensor[(120), int32] */;
  %705 = cast(meta[relay.Constant][45] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %706 = reshape(%703, newshape=[40]) /* ty=Tensor[(40), int32] */;
  %707 = reshape(%704, newshape=[120]) /* ty=Tensor[(120), int32] */;
  %708 = reshape(%705, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %709 = @func_6181(%706, %707, %708) /* ty=(Tensor[(30, 9), float32], Tensor[(3, 504), float32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64]) */;
  %710 = cast(meta[relay.Constant][45] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %711 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 1920), float64] */, dtype="float64") /* ty=Tensor[(1, 1920), float64] */;
  %712 = reshape(%710, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %713 = reshape(%711, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %714 = @func_9052(%712, %713) /* ty=(Tensor[(30, 9), float32], Tensor[(660), float64], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(15, 8, 16), int32], Tensor[(1920), float64]) */;
  %715 = %697.2;
  %716 = %702.0;
  %717 = %709.3;
  %718 = %714.3;
  (%693, %715, meta[relay.Constant][43] /* ty=Tensor[(960, 1), float64] */, %716, %var_10294, meta[relay.Constant][44] /* ty=Tensor[(40), int32] */, %717, %var_10312, meta[relay.Constant][45] /* ty=Tensor[(660), float64] */, %718, meta[relay.Constant][46] /* ty=Tensor[(1, 1920), float64] */)
}

def @func_6423() -> Tensor[(30, 9), float64] {
  %719 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  %720 = cast(%719, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  sigmoid(%720) /* ty=Tensor[(30, 9), float64] */
}

def @func_7039() -> (Tensor[(15, 8, 1), float64],) {
  %721 = @func_6944() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %722 = %721.0;
  (%722,)
}

def @func_7370(%var_7356: Tensor[(1, 28), uint64], %var_7359: Tensor[(660), float64]) -> (Tensor[(28), uint64], Tensor[(4, 48), float64], Tensor[(220), float32], Tensor[(1, 28), uint64], Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float32]) {
  %723 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 48), float64] */, dtype="float64") /* ty=Tensor[(4, 48), float64] */;
  %724 = cast(meta[relay.Constant][48] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %725 = cast(%var_7356, dtype="uint64") /* ty=Tensor[(1, 28), uint64] */;
  %726 = reshape(%723, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), float64] */;
  %727 = reshape(%724, newshape=[1, 220]) /* ty=Tensor[(1, 220), float32] */;
  %728 = reshape(%725, newshape=[28]) /* ty=Tensor[(28), uint64] */;
  %729 = @func_3708(%726, %727, %728) /* ty=(Tensor[(16, 12, 1), float64], Tensor[(11, 4, 15), float64], Tensor[(1, 220), float32], Tensor[(28), uint64]) */;
  %730 = cast(%var_7359, dtype="float64") /* ty=Tensor[(660), float64] */;
  %731 = reshape(%730, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %732 = @func_253(%731) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %733 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  %734 = cast(%733, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %735 = %729.3;
  %736 = %732.0;
  %737 = cosh(%734) /* ty=Tensor[(30, 9), float32] */;
  (%735, meta[relay.Constant][47] /* ty=Tensor[(4, 48), float64] */, meta[relay.Constant][48] /* ty=Tensor[(220), float32] */, %var_7356, %736, %var_7359, %737)
}

def @func_1325(%var_1293: Tensor[(7, 14, 5), float32]) -> (Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) {
  %738 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 14, 5), float32] */;
  %739 = shape_of(%var_1293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%var_1293, dtype="float32") /* ty=Tensor[(7, 14, 5), float32] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %742 = cast(meta[relay.Constant][50] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %743 = reshape(%742, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %744 = @func_357(%743) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %745 = cast(meta[relay.Constant][50] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %746 = reshape(%745, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %747 = @func_357(%746) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %748 = cast(%var_1293, dtype="float32") /* ty=Tensor[(7, 14, 5), float32] */;
  %749 = cast(meta[relay.Constant][51] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %750 = reshape(%749, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %751 = @func_718(%750) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) */;
  %752 = minimum(%740, %741) /* ty=Tensor[(7, 14, 5), float32] */;
  %753 = %744.0;
  %754 = %747.1;
  %755 = exp(%748) /* ty=Tensor[(7, 14, 5), float32] */;
  %756 = %751.0;
  (%752, %753, meta[relay.Constant][50] /* ty=Tensor[(660), float64] */, %754, %755, %756, meta[relay.Constant][51] /* ty=Tensor[(600), float32] */)
}

def @func_10649(%var_10617: Tensor[(6, 1, 16), float64], %var_10630: Tensor[(6, 6, 16), float64]) -> (Tensor[(6, 6, 16), uint8], Tensor[(15, 8, 1), float64]) {
  %757 = cast(%var_10617, dtype="float64") /* ty=Tensor[(6, 1, 16), float64] */;
  %758 = tan(%757) /* ty=Tensor[(6, 1, 16), float64] */;
  %759 = cast(%758, dtype="uint8") /* ty=Tensor[(6, 1, 16), uint8] */;
  %760 = cast(%var_10630, dtype="uint8") /* ty=Tensor[(6, 6, 16), uint8] */;
  %761 = @func_8888() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float32]) */;
  %762 = subtract(%759, %760) /* ty=Tensor[(6, 6, 16), uint8] */;
  %763 = %761.0;
  (%762, %763)
}

def @func_1948(%var_1904: Tensor[(2, 16, 14), float64], %var_1930: Tensor[(60, 10), float32]) -> (Tensor[(11, 4, 15), float64], Tensor[(220), float32], Tensor[(7, 4), uint64], Tensor[(5, 15, 8), float32], Tensor[(60, 10), float32], Tensor[(2, 16, 14), float32]) {
  %764 = cast(meta[relay.Constant][52] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %765 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 4), uint64] */, dtype="uint64") /* ty=Tensor[(7, 4), uint64] */;
  %766 = reshape(%764, newshape=[10, 11, 2]) /* ty=Tensor[(10, 11, 2), float32] */;
  %767 = reshape(%765, newshape=[7, 4]) /* ty=Tensor[(7, 4), uint64] */;
  %768 = @func_556(%766, %767) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) */;
  %769 = cast(%var_1930, dtype="float32") /* ty=Tensor[(60, 10), float32] */;
  %770 = reshape(%769, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %771 = @func_718(%770) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) */;
  %772 = cast(%var_1904, dtype="float64") /* ty=Tensor[(2, 16, 14), float64] */;
  %773 = exp(%772) /* ty=Tensor[(2, 16, 14), float64] */;
  %774 = cast(%773, dtype="float64") /* ty=Tensor[(2, 16, 14), float64] */;
  %775 = erf(%774) /* ty=Tensor[(2, 16, 14), float64] */;
  %776 = cast(%775, dtype="float32") /* ty=Tensor[(2, 16, 14), float32] */;
  %777 = %768.0;
  %778 = %771.0;
  %779 = sigmoid(%776) /* ty=Tensor[(2, 16, 14), float32] */;
  (%777, meta[relay.Constant][52] /* ty=Tensor[(220), float32] */, meta[relay.Constant][53] /* ty=Tensor[(7, 4), uint64] */, %778, %var_1930, %779)
}

def @func_5709() -> Tensor[(15, 8, 1), float64] {
  @func_5034() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_4842(%var_4790: Tensor[(660), float64], %var_4823: uint64) -> (Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(11, 4, 15), int8], Tensor[(660), float64], Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(280), uint16], uint64, Tensor[(28), uint64], Tensor[(448), float64], Tensor[(60, 10), float32], Tensor[(5, 198), float64]) {
  %780 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %781 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 198), float64] */, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %782 = reshape(%781, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float64] */;
  %783 = @func_2033(%782) /* ty=(Tensor[(9, 10, 11), float64],) */;
  %784 = cast(%var_4790, dtype="float64") /* ty=Tensor[(660), float64] */;
  %785 = reshape(%784, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %786 = @func_357(%785) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %787 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %788 = cast(meta[relay.Constant][55] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %789 = cast(%var_4823, dtype="uint64") /* ty=uint64 */;
  %790 = cast(meta[relay.Constant][56] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %791 = %786.1;
  %792 = cast(%791, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %793 = cast(meta[relay.Constant][57] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %794 = cast(meta[relay.Constant][58] /* ty=Tensor[(60, 10), float32] */, dtype="float32") /* ty=Tensor[(60, 10), float32] */;
  %795 = reshape(%788, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), uint16] */;
  %796 = reshape(%789, newshape=[]) /* ty=uint64 */;
  %797 = reshape(%790, newshape=[28]) /* ty=Tensor[(28), uint64] */;
  %798 = reshape(%792, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %799 = reshape(%793, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %800 = reshape(%794, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %801 = @func_2477(%795, %796, %797, %798, %799, %800) /* ty=(Tensor[(2, 14, 10), uint16], Tensor[(7, 1, 4), bool], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(220), float32], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), int8]) */;
  %802 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 198), float64] */, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %803 = cos(%802) /* ty=Tensor[(5, 198), float64] */;
  %804 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 198), float64] */, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(2), int32] */;
  %806 = cast(%803, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %808 = %780.0;
  %809 = %783.0;
  %810 = %787.0;
  %811 = %801.4;
  %812 = floor_divide(%806, %807) /* ty=Tensor[(5, 198), float64] */;
  (%808, %809, %791, %var_4790, %810, %811, meta[relay.Constant][55] /* ty=Tensor[(280), uint16] */, %var_4823, meta[relay.Constant][56] /* ty=Tensor[(28), uint64] */, meta[relay.Constant][57] /* ty=Tensor[(448), float64] */, meta[relay.Constant][58] /* ty=Tensor[(60, 10), float32] */, %812)
}

def @func_8084(%var_8077: Tensor[(660, 1), float64], %var_8078: uint64) -> (Tensor[(15, 8, 1), float64], uint64, Tensor[(660, 1), float64], uint64) {
  %813 = @func_7705() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) */;
  %814 = cast(%var_8077, dtype="float64") /* ty=Tensor[(660, 1), float64] */;
  %815 = cast(%var_8078, dtype="uint64") /* ty=uint64 */;
  %816 = reshape(%814, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %817 = reshape(%815, newshape=[]) /* ty=uint64 */;
  %818 = @func_5880(%816, %817) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(660), float64], uint64) */;
  %819 = %813.0;
  %820 = %818.3;
  (%819, %820, %var_8077, %var_8078)
}

def @func_10002(%var_9986: Tensor[(1920), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(11, 4, 15), int8], Tensor[(1, 660), float64], Tensor[(15, 8, 1), float64], Tensor[(28), uint64], Tensor[(1920), float64], Tensor[(15, 8, 1), float64]) {
  %821 = @func_4954() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %822 = @func_5509() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %823 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 660), float64] */, dtype="float64") /* ty=Tensor[(1, 660), float64] */;
  %824 = reshape(%823, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %825 = @func_253(%824) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %826 = %825.1;
  %827 = cast(%826, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %828 = cast(%var_9986, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %829 = reshape(%827, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %830 = reshape(%828, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %831 = @func_9052(%829, %830) /* ty=(Tensor[(30, 9), float32], Tensor[(660), float64], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(15, 8, 16), int32], Tensor[(1920), float64]) */;
  %832 = @func_8768() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %833 = %821.0;
  %834 = %822.0;
  %835 = @func_5709() /* ty=Tensor[(15, 8, 1), float64] */;
  %836 = %831.3;
  %837 = %832.0;
  (%833, %834, %826, meta[relay.Constant][59] /* ty=Tensor[(1, 660), float64] */, %835, %836, %var_9986, %837)
}

def @func_5809(%var_5718: uint8, %var_5719: Tensor[(6, 12, 8), uint8]) -> (Tensor[(6, 12, 8), uint8], Tensor[(15, 8, ?), bool], Tensor[(15, 8, 2), bool], Tensor[(240), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(11, 16, 13), float32], Tensor[(2288), float32]) {
  %838 = cast(%var_5718, dtype="uint8") /* ty=uint8 */;
  %839 = cast(%var_5719, dtype="uint8") /* ty=Tensor[(6, 12, 8), uint8] */;
  %840 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %841 = %840.0;
  %842 = @func_5034() /* ty=Tensor[(15, 8, 1), float64] */;
  %843 = cast(%842, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %844 = shape_of(%841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%841, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %847 = cast(meta[relay.Constant][60] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %848 = reshape(%847, newshape=[15, 8, 2]) /* ty=Tensor[(15, 8, 2), float64] */;
  %849 = @func_4548(%848) /* ty=(Tensor[(15, 8, 1), float32], Tensor[(15, 8, 2), bool]) */;
  %850 = cast(meta[relay.Constant][61] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %851 = reshape(%850, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %852 = cast(meta[relay.Constant][62] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %853 = reshape(%852, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), float32] */;
  %854 = @func_3169(%853) /* ty=(Tensor[(11, 16, 13), float32],) */;
  %855 = add(%838, %839) /* ty=Tensor[(6, 12, 8), uint8] */;
  %856 = not_equal(%845, %846) /* ty=Tensor[(15, 8, ?), bool] */;
  %857 = %849.1;
  %858 = @func_3731(%851) /* ty=Tensor[(3, 10, 9), float32] */;
  %859 = %854.0;
  (%855, %856, %857, meta[relay.Constant][60] /* ty=Tensor[(240), float64] */, %858, meta[relay.Constant][61] /* ty=Tensor[(270), float32] */, %859, meta[relay.Constant][62] /* ty=Tensor[(2288), float32] */)
}

def @func_8481() -> (Tensor[(15, 8, 1), float64],) {
  %860 = @func_5912() /* ty=Tensor[(15, 8, 1), float64] */;
  (%860,)
}

def @func_4652() -> Tensor[(15, 8, 1), float64] {
  %861 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %861.0
}

def @func_8777() -> Tensor[(15, 8, 1), float64] {
  @func_5034() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_357(%var_315: Tensor[(330, 2), float64]) -> (Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) {
  %862 = cast(meta[relay.Constant][64] /* ty=Tensor[(14, 10, 1), int64] */, dtype="int64") /* ty=Tensor[(14, 10, 1), int64] */;
  %863 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(14, 10, 1), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(meta[relay.Constant][63] /* ty=Tensor[(14, 10, 1), int64] */, dtype="int64") /* ty=Tensor[(14, 10, 1), int64] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %866 = cast(meta[relay.Constant][65] /* ty=Tensor[(330, 2), float64] */, dtype="float64") /* ty=Tensor[(330, 2), float64] */;
  %867 = reshape(%866, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %868 = @func_253(%867) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %869 = cast(%var_315, dtype="float32") /* ty=Tensor[(330, 2), float32] */;
  %870 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(330, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %871 = cast(meta[relay.Constant][65] /* ty=Tensor[(330, 2), float64] */, dtype="float32") /* ty=Tensor[(330, 2), float32] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %873 = cast(%var_315, dtype="float64") /* ty=Tensor[(330, 2), float64] */;
  %874 = reshape(%873, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %875 = @func_253(%874) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %876 = cast(%var_315, dtype="float64") /* ty=Tensor[(330, 2), float64] */;
  %877 = %868.1;
  %878 = cast(%877, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %879 = reshape(%878, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %880 = @func_253(%879) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %881 = multiply(%864, %865) /* ty=Tensor[(14, 10, ?), int64] */;
  %882 = minimum(%871, %872) /* ty=Tensor[(330, 2), float32] */;
  %883 = %875.1;
  %884 = sigmoid(%876) /* ty=Tensor[(330, 2), float64] */;
  %885 = %880.1;
  (%881, %877, %882, %883, %884, %885)
}

def @func_6524(%var_6496: Tensor[(30, 9), float32]) -> (Tensor[(30, 9), float32], Tensor[(30, 9), float64]) {
  %886 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
  %887 = %886.0;
  %888 = cast(%var_6496, dtype="int8") /* ty=Tensor[(30, 9), int8] */;
  %889 = shape_of(%887, dtype="int32") /* ty=Tensor[(2), int32] */;
  %890 = cast(%887, dtype="int8") /* ty=Tensor[(30, 9), int8] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %892 = maximum(%890, %891) /* ty=Tensor[(30, 9), int8] */;
  %893 = cast(%892, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %894 = sqrt(%893) /* ty=Tensor[(30, 9), float32] */;
  %895 = cast(%894, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %896 = atan(%895) /* ty=Tensor[(30, 9), float32] */;
  %897 = @func_6423() /* ty=Tensor[(30, 9), float64] */;
  (%896, %897)
}

def @func_7679() -> (Tensor[(30, 9), float64], Tensor[(9, 14, 4), int16], Tensor[(504), int16]) {
  %898 = @func_6745() /* ty=(Tensor[(30, 9), float64],) */;
  %899 = cast(meta[relay.Constant][66] /* ty=Tensor[(504), int16] */, dtype="int16") /* ty=Tensor[(504), int16] */;
  %900 = reshape(%899, newshape=[9, 14, 4]) /* ty=Tensor[(9, 14, 4), int16] */;
  %901 = %898.0;
  %902 = @func_3000(%900) /* ty=Tensor[(9, 14, 4), int16] */;
  (%901, %902, meta[relay.Constant][66] /* ty=Tensor[(504), int16] */)
}

def @func_5880(%var_5858: Tensor[(660), float64], %var_5859: uint64) -> (Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(660), float64], uint64) {
  %903 = @func_5509() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %904 = cast(%var_5858, dtype="float64") /* ty=Tensor[(660), float64] */;
  %905 = cast(%var_5859, dtype="uint64") /* ty=uint64 */;
  %906 = reshape(%904, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %907 = reshape(%905, newshape=[]) /* ty=uint64 */;
  %908 = @func_4842(%906, %907) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(11, 4, 15), int8], Tensor[(660), float64], Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(280), uint16], uint64, Tensor[(28), uint64], Tensor[(448), float64], Tensor[(60, 10), float32], Tensor[(5, 198), float64]) */;
  %909 = %903.0;
  %910 = %908.1;
  (%909, %910, %var_5858, %var_5859)
}

def @func_9123(%var_9120: Tensor[(220), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(220), float32]) {
  %911 = @func_8481() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %912 = cast(%var_9120, dtype="float32") /* ty=Tensor[(220), float32] */;
  %913 = cast(%var_9120, dtype="float32") /* ty=Tensor[(220), float32] */;
  %914 = reshape(%912, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
  %915 = reshape(%913, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
  %916 = @func_4747(%914, %915) /* ty=(Tensor[(15, 8, 1), float64], uint64, Tensor[(28), uint64], Tensor[(5, 44), float32]) */;
  %917 = %911.0;
  %918 = %916.0;
  (%917, %918, %var_9120)
}

def @func_10808() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %919 = @func_6944() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %920 = %919.0;
  %921 = @func_9609() /* ty=Tensor[(15, 8, 1), float64] */;
  (%920, %921)
}

def @func_10982() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %922 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %923 = %922.0;
  %924 = @func_5093() /* ty=Tensor[(15, 8, 1), float64] */;
  (%923, %924)
}

def @func_7705() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) {
  %925 = @func_6114() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %926 = @func_4652() /* ty=Tensor[(15, 8, 1), float64] */;
  %927 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  %928 = %925.0;
  (%926, %927, %928)
}

def @func_8042(%var_7939: Tensor[(14, 2), uint64]) -> (Tensor[(14, 2), uint64], Tensor[(10, 66), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 28), bool], Tensor[(15, 8, 660), uint64], uint64, Tensor[(220), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 13, 2), uint32], Tensor[(65, 6), uint32]) {
  %929 = cast(%var_7939, dtype="uint64") /* ty=Tensor[(14, 2), uint64] */;
  %930 = cast(meta[relay.Constant][67] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %931 = reshape(%929, newshape=[1, 28]) /* ty=Tensor[(1, 28), uint64] */;
  %932 = reshape(%930, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %933 = @func_7370(%931, %932) /* ty=(Tensor[(28), uint64], Tensor[(4, 48), float64], Tensor[(220), float32], Tensor[(1, 28), uint64], Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float32]) */;
  %934 = %933.3;
  %935 = @func_6785() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) */;
  %936 = %935.0;
  %937 = cast(%934, dtype="float32") /* ty=Tensor[(1, 28), float32] */;
  %938 = cast(%936, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %939 = maximum(%937, %938) /* ty=Tensor[(15, 8, 28), float32] */;
  %940 = cast(meta[relay.Constant][68] /* ty=Tensor[(15, 8, 28), float32] */, dtype="bool") /* ty=Tensor[(15, 8, 28), bool] */;
  %941 = shape_of(%939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%939, dtype="bool") /* ty=Tensor[(15, 8, 28), bool] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %944 = cast(meta[relay.Constant][67] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %945 = reshape(%944, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %946 = @func_6058(%945) /* ty=(Tensor[(30, 9), float32], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
  %947 = %946.2;
  %948 = @func_4954() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %949 = %948.0;
  %950 = cast(%947, dtype="uint64") /* ty=Tensor[(660), uint64] */;
  %951 = cast(%949, dtype="uint64") /* ty=Tensor[(15, 8, 1), uint64] */;
  %952 = cast(meta[relay.Constant][69] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %953 = cast(%var_7939, dtype="uint64") /* ty=Tensor[(14, 2), uint64] */;
  %954 = reshape(%952, newshape=[10, 11, 2]) /* ty=Tensor[(10, 11, 2), float32] */;
  %955 = reshape(%953, newshape=[7, 4]) /* ty=Tensor[(7, 4), uint64] */;
  %956 = @func_556(%954, %955) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) */;
  %957 = cast(meta[relay.Constant][70] /* ty=Tensor[(65, 6), uint32] */, dtype="uint32") /* ty=Tensor[(65, 6), uint32] */;
  %958 = reshape(%957, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint32] */;
  %959 = @func_6317(%958) /* ty=(Tensor[(15, 13, 2), uint32],) */;
  %960 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  %961 = equal(%942, %943) /* ty=Tensor[(15, 8, 28), bool] */;
  %962 = bitwise_and(%950, %951) /* ty=Tensor[(15, 8, 660), uint64] */;
  %963 = %956.4;
  %964 = @func_6867() /* ty=Tensor[(15, 8, 1), float64] */;
  %965 = %959.0;
  (%var_7939, meta[relay.Constant][67] /* ty=Tensor[(10, 66), float64] */, %960, %961, %962, %963, meta[relay.Constant][69] /* ty=Tensor[(220), float32] */, %964, %965, meta[relay.Constant][70] /* ty=Tensor[(65, 6), uint32] */)
}

def @func_3731(%var_3718: Tensor[(3, 10, 9), float32]) -> Tensor[(3, 10, 9), float32] {
  %966 = cast(%var_3718, dtype="float32") /* ty=Tensor[(3, 10, 9), float32] */;
  erf(%966) /* ty=Tensor[(3, 10, 9), float32] */
}

def @func_2758(%var_2741: Tensor[(5, 12, 10), float64]) -> (Tensor[(5, 12, 10), float64], Tensor[(11, 4, 15), int8], Tensor[(660), float64]) {
  %967 = cast(%var_2741, dtype="float64") /* ty=Tensor[(5, 12, 10), float64] */;
  %968 = cast(meta[relay.Constant][71] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %969 = reshape(%968, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %970 = @func_357(%969) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %971 = rsqrt(%967) /* ty=Tensor[(5, 12, 10), float64] */;
  %972 = %970.1;
  (%971, %972, meta[relay.Constant][71] /* ty=Tensor[(660), float64] */)
}

def @func_4623(%var_4572: Tensor[(8, 1, 5), int32], %var_4573: Tensor[(8, 3, 5), int32], %var_4591: Tensor[(660), float64]) -> (Tensor[(8, 3, 5), int32], Tensor[(7, 4), uint64], Tensor[(3, 504), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(600), float32], Tensor[(15, 4, 9), bool], int16, Tensor[(540), int16]) {
  %973 = cast(%var_4572, dtype="int32") /* ty=Tensor[(8, 1, 5), int32] */;
  %974 = cast(%var_4573, dtype="int32") /* ty=Tensor[(8, 3, 5), int32] */;
  %975 = cast(meta[relay.Constant][72] /* ty=Tensor[(3, 504), float32] */, dtype="float32") /* ty=Tensor[(3, 504), float32] */;
  %976 = cast(%var_4591, dtype="float64") /* ty=Tensor[(660), float64] */;
  %977 = cast(meta[relay.Constant][73] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %978 = cast(meta[relay.Constant][74] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %979 = reshape(%975, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), float32] */;
  %980 = reshape(%976, newshape=[1, 660]) /* ty=Tensor[(1, 660), float64] */;
  %981 = reshape(%977, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %982 = reshape(%978, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %983 = @func_2433(%979, %980, %981, %982) /* ty=(Tensor[(12, 9, 14), float32], Tensor[(1, 660), float64], Tensor[(14, 10, ?), float32], Tensor[(330, 2), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(7, 4), uint64], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), float64]) */;
  %984 = cast(meta[relay.Constant][75] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %985 = cast(meta[relay.Constant][76] /* ty=Tensor[(540), int16] */, dtype="int16") /* ty=Tensor[(540), int16] */;
  %986 = reshape(%984, newshape=[]) /* ty=int16 */;
  %987 = reshape(%985, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), int16] */;
  %988 = @func_4188(%986, %987) /* ty=(Tensor[(15, 4, 9), bool], Tensor[(3, 10, 9), float32], Tensor[(270), float32]) */;
  %989 = right_shift(%973, %974) /* ty=Tensor[(8, 3, 5), int32] */;
  %990 = %983.6;
  %991 = %988.0;
  (%989, %990, meta[relay.Constant][72] /* ty=Tensor[(3, 504), float32] */, %var_4591, meta[relay.Constant][73] /* ty=Tensor[(490), float32] */, meta[relay.Constant][74] /* ty=Tensor[(600), float32] */, %991, meta[relay.Constant][75] /* ty=int16 */, meta[relay.Constant][76] /* ty=Tensor[(540), int16] */)
}

def @func_6785() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) {
  %992 = @func_6324() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %993 = @func_6745() /* ty=(Tensor[(30, 9), float64],) */;
  %994 = cast(meta[relay.Constant][77] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %995 = reshape(%994, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float64] */;
  %996 = @func_2033(%995) /* ty=(Tensor[(9, 10, 11), float64],) */;
  %997 = %992.0;
  %998 = %993.0;
  %999 = %996.0;
  (%997, %998, %999, meta[relay.Constant][77] /* ty=Tensor[(990), float64] */)
}

def @func_451(%var_426: uint64, %var_427: Tensor[(7, 1, 4), uint64], %var_449: Tensor[(660), float64]) -> (Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) {
  %1000 = cast(%var_426, dtype="bool") /* ty=bool */;
  %1001 = cast(%var_427, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
  %1002 = cast(%var_449, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1003 = reshape(%1002, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %1004 = @func_253(%1003) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %1005 = less_equal(%1000, %1001) /* ty=Tensor[(7, 1, 4), bool] */;
  %1006 = %1004.0;
  (%1005, %1006, %var_449)
}

def @func_9923(%var_9862: Tensor[(120), int32], %var_9863: Tensor[(660), float64]) -> (Tensor[(9, 10, 11), float64], Tensor[(120), int32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64], Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
  %1007 = @func_9350() /* ty=(Tensor[(9, 10, 11), float64],) */;
  %1008 = cast(meta[relay.Constant][78] /* ty=Tensor[(40), int32] */, dtype="int32") /* ty=Tensor[(40), int32] */;
  %1009 = cast(%var_9862, dtype="int32") /* ty=Tensor[(120), int32] */;
  %1010 = cast(%var_9863, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1011 = reshape(%1008, newshape=[40]) /* ty=Tensor[(40), int32] */;
  %1012 = reshape(%1009, newshape=[120]) /* ty=Tensor[(120), int32] */;
  %1013 = reshape(%1010, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %1014 = @func_6181(%1011, %1012, %1013) /* ty=(Tensor[(30, 9), float32], Tensor[(3, 504), float32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64]) */;
  %1015 = @func_7039() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %1016 = @func_6745() /* ty=(Tensor[(30, 9), float64],) */;
  %1017 = %1007.0;
  %1018 = %1014.3;
  %1019 = %1015.0;
  %1020 = %1016.0;
  %1021 = @func_5912() /* ty=Tensor[(15, 8, 1), float64] */;
  (%1017, %1018, meta[relay.Constant][78] /* ty=Tensor[(40), int32] */, %var_9862, %var_9863, %1019, %1020, %1021)
}

def @func_5022(%var_5000: Tensor[(15, 8, 12), float64]) -> (Tensor[(15, 8, 12), bool], Tensor[(15, 8, 1), float32]) {
  %1022 = @func_4889() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %1023 = %1022.0;
  %1024 = cast(%1023, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %1025 = cast(%var_5000, dtype="bool") /* ty=Tensor[(15, 8, 12), bool] */;
  %1026 = cast(%1023, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %1027 = log10(%1026) /* ty=Tensor[(15, 8, 1), float32] */;
  %1028 = cast(%1027, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %1029 = greater(%1024, %1025) /* ty=Tensor[(15, 8, 12), bool] */;
  %1030 = log2(%1028) /* ty=Tensor[(15, 8, 1), float32] */;
  (%1029, %1030)
}

def @func_5646(%var_5611: Tensor[(30, 9), float32]) -> (Tensor[(30, 9), bool], Tensor[(3, 10, 9), float32]) {
  %1031 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %1032 = %1031.2;
  %1033 = cast(%var_5611, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
  %1034 = shape_of(%1032, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1035 = cast(%1032, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
  %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1037 = not_equal(%1035, %1036) /* ty=Tensor[(30, 9), bool] */;
  %1038 = cast(%1037, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %1039 = reshape(%1038, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %1040 = @func_3731(%1039) /* ty=Tensor[(3, 10, 9), float32] */;
  (%1037, %1040)
}

def @func_9287(%var_9265: Tensor[(270), float32]) -> (Tensor[(270), bool],) {
  %1041 = @func_8347() /* ty=(Tensor[(270), float32], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) */;
  %1042 = %1041.0;
  %1043 = cast(%var_9265, dtype="bool") /* ty=Tensor[(270), bool] */;
  %1044 = shape_of(%1042, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1045 = cast(%1042, dtype="bool") /* ty=Tensor[(270), bool] */;
  %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1047 = logical_or(%1045, %1046) /* ty=Tensor[(270), bool] */;
  (%1047,)
}

def @func_9416(%var_9411: Tensor[(1512), float32], %var_9412: Tensor[(660), float64], %var_9413: Tensor[(490), float32], %var_9414: Tensor[(60, 10), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(1, 660), float64], Tensor[(1512), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(60, 10), float32]) {
  %1048 = cast(%var_9411, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %1049 = cast(%var_9412, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1050 = cast(%var_9413, dtype="float32") /* ty=Tensor[(490), float32] */;
  %1051 = cast(%var_9414, dtype="float32") /* ty=Tensor[(60, 10), float32] */;
  %1052 = reshape(%1048, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), float32] */;
  %1053 = reshape(%1049, newshape=[1, 660]) /* ty=Tensor[(1, 660), float64] */;
  %1054 = reshape(%1050, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %1055 = reshape(%1051, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %1056 = @func_2433(%1052, %1053, %1054, %1055) /* ty=(Tensor[(12, 9, 14), float32], Tensor[(1, 660), float64], Tensor[(14, 10, ?), float32], Tensor[(330, 2), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(7, 4), uint64], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), float64]) */;
  %1057 = @func_4652() /* ty=Tensor[(15, 8, 1), float64] */;
  %1058 = %1056.1;
  (%1057, %1058, %var_9411, %var_9412, %var_9413, %var_9414)
}

def @func_9350() -> (Tensor[(9, 10, 11), float64],) {
  %1059 = @func_6785() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) */;
  %1060 = %1059.2;
  (%1060,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9760(%var_9757: Tensor[(3, 90), float32], %var_9758: Tensor[(600), float32], %var_9759: Tensor[(1, 220), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(3, 90), float32], Tensor[(5, 15, 8), float64], Tensor[(600), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 220), int16]) {
  @func_9755(%var_9757, %var_9758, %var_9759) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(3, 90), float32], Tensor[(5, 15, 8), float64], Tensor[(600), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 220), int16]) */
}

def @func_5646(%var_5611: Tensor[(30, 9), float32]) -> (Tensor[(30, 9), bool], Tensor[(3, 10, 9), float32]) {
  %0 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %1 = %0.2;
  %2 = cast(%var_5611, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(2), int32] */;
  %4 = cast(%1, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %6 = not_equal(%4, %5) /* ty=Tensor[(30, 9), bool] */;
  %7 = cast(%6, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %8 = reshape(%7, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %9 = @func_3731(%8) /* ty=Tensor[(3, 10, 9), float32] */;
  (%6, %9)
}

def @func_7040() -> (Tensor[(15, 8, 1), float64],) {
  %12 = fn () -> (Tensor[(15, 8, 1), float64],) {
    %10 = @func_6944() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %11 = %10.0;
    (%11,)
  };
  %12() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_6674() -> (Tensor[(30, 9), float64],) {
  %16 = fn () -> (Tensor[(30, 9), float64],) {
    %13 = @func_6153() /* ty=Tensor[(30, 9), float32] */;
    %14 = cast(%13, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
    %15 = cos(%14) /* ty=Tensor[(30, 9), float64] */;
    (%15,)
  };
  %16() /* ty=(Tensor[(30, 9), float64],) */
}

def @func_10005(%var_10003: Tensor[(1920), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(11, 4, 15), int8], Tensor[(1, 660), float64], Tensor[(15, 8, 1), float64], Tensor[(28), uint64], Tensor[(1920), float64], Tensor[(15, 8, 1), float64]) {
  @func_10002(%var_10003) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(11, 4, 15), int8], Tensor[(1, 660), float64], Tensor[(15, 8, 1), float64], Tensor[(28), uint64], Tensor[(1920), float64], Tensor[(15, 8, 1), float64]) */
}

def @func_5034() -> Tensor[(15, 8, 1), float64] {
  %17 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %17.0
}

def @func_4192(%var_4190: int16, %var_4191: Tensor[(15, 4, 9), int16]) -> (Tensor[(15, 4, 9), bool], Tensor[(3, 10, 9), float32], Tensor[(270), float32]) {
  @func_4188(%var_4190, %var_4191) /* ty=(Tensor[(15, 4, 9), bool], Tensor[(3, 10, 9), float32], Tensor[(270), float32]) */
}

def @func_9218(%var_9144: Tensor[(660), float64], %var_9145: uint64, %var_9184: Tensor[(55, 4), float32], %var_9185: Tensor[(28), uint64], %var_9204: Tensor[(600), float32]) -> (Tensor[(30, 9), float32], uint64, Tensor[(660), float64], uint64, Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64], Tensor[(30, 9), uint8], Tensor[(1, 220), float32], Tensor[(192), float64], Tensor[(55, 4), float32], Tensor[(28), uint64], Tensor[(3, 10, 9), float64], Tensor[(270), float32], Tensor[(600), float32], Tensor[(15, 8, 1), float64]) {
  %18 = cast(%var_9144, dtype="float64") /* ty=Tensor[(660), float64] */;
  %19 = cast(%var_9145, dtype="uint64") /* ty=uint64 */;
  %20 = reshape(%18, newshape=[660, 1]) /* ty=Tensor[(660, 1), float64] */;
  %21 = reshape(%19, newshape=[]) /* ty=uint64 */;
  %22 = @func_8084(%20, %21) /* ty=(Tensor[(15, 8, 1), float64], uint64, Tensor[(660, 1), float64], uint64) */;
  %23 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  %24 = cast(%23, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %25 = reshape(%24, newshape=[30, 9]) /* ty=Tensor[(30, 9), float64] */;
  %26 = @func_7480(%25) /* ty=(Tensor[(30, 9), bool], Tensor[(30, 9), float32], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) */;
  %27 = @func_6944() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %28 = cast(%23, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %29 = reshape(%28, newshape=[30, 9]) /* ty=Tensor[(30, 9), float64] */;
  %30 = cast(meta[relay.Constant][0] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %31 = cast(%var_9184, dtype="float32") /* ty=Tensor[(55, 4), float32] */;
  %32 = cast(%var_9185, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %33 = reshape(%30, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), float64] */;
  %34 = reshape(%31, newshape=[1, 220]) /* ty=Tensor[(1, 220), float32] */;
  %35 = reshape(%32, newshape=[28]) /* ty=Tensor[(28), uint64] */;
  %36 = @func_3708(%33, %34, %35) /* ty=(Tensor[(16, 12, 1), float64], Tensor[(11, 4, 15), float64], Tensor[(1, 220), float32], Tensor[(28), uint64]) */;
  %37 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %38 = %37.1;
  %39 = cast(%38, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %40 = cast(%var_9204, dtype="float32") /* ty=Tensor[(600), float32] */;
  %41 = reshape(%40, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %42 = @func_6247(%41) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */;
  %43 = @func_4889() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %44 = %22.3;
  %45 = %26.1;
  %46 = %27.0;
  %47 = @func_6906(%29) /* ty=Tensor[(30, 9), uint8] */;
  %48 = %36.2;
  %49 = sinh(%39) /* ty=Tensor[(3, 10, 9), float64] */;
  %50 = %42.2;
  %51 = %43.0;
  (%23, %44, %var_9144, %var_9145, %45, %46, %47, %48, meta[relay.Constant][0] /* ty=Tensor[(192), float64] */, %var_9184, %var_9185, %49, %50, %var_9204, %51)
}

def @func_8521(%var_8519: Tensor[(7, 11, 7), uint64], %var_8520: Tensor[(7, 11, 7), uint64]) -> (Tensor[(7, 11, 7), float32], Tensor[(7, 11, 7), float32]) {
  %61 = fn (%var_8497: Tensor[(7, 11, 7), uint64], %var_8498: Tensor[(7, 11, 7), uint64]) -> (Tensor[(7, 11, 7), float32], Tensor[(7, 11, 7), float32]) {
    %52 = cast(%var_8498, dtype="bool") /* ty=Tensor[(7, 11, 7), bool] */;
    %53 = shape_of(%var_8497, dtype="int32") /* ty=Tensor[(3), int32] */;
    %54 = cast(%var_8497, dtype="bool") /* ty=Tensor[(7, 11, 7), bool] */;
    %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %56 = less_equal(%54, %55) /* ty=Tensor[(7, 11, 7), bool] */;
    %57 = cast(%56, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
    %58 = cast(%var_8498, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
    %59 = log2(%57) /* ty=Tensor[(7, 11, 7), float32] */;
    %60 = rsqrt(%58) /* ty=Tensor[(7, 11, 7), float32] */;
    (%59, %60)
  };
  %61(%var_8519, %var_8520) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(7, 11, 7), float32]) */
}

def @func_7822() -> (Tensor[(15, 8, 8), int64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) {
  %62 = @func_5093() /* ty=Tensor[(15, 8, 1), float64] */;
  %63 = cast(%62, dtype="int64") /* ty=Tensor[(15, 8, 1), int64] */;
  %64 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 8, 8), float64] */, dtype="int64") /* ty=Tensor[(15, 8, 8), int64] */;
  %65 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
  %66 = @func_6944() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %67 = subtract(%63, %64) /* ty=Tensor[(15, 8, 8), int64] */;
  %68 = %65.0;
  %69 = %66.0;
  (%67, %68, %69)
}

def @func_8348() -> (Tensor[(270), float32], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
  %78 = fn () -> (Tensor[(270), float32], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
    %70 = @func_8244() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(270), float32], Tensor[(11, 4, 15), float64], Tensor[(28), uint64], Tensor[(10, 66), float64]) */;
    %71 = @func_7705() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) */;
    %72 = %71.1;
    %73 = cast(%72, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
    %74 = @func_6615() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
    %75 = %70.2;
    %76 = log(%73) /* ty=Tensor[(30, 9), float64] */;
    %77 = %74.0;
    (%75, %76, %77)
  };
  %78() /* ty=(Tensor[(270), float32], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) */
}

def @func_9495(%var_9493: Tensor[(13, 8, 12), float32], %var_9494: Tensor[(13, 8, 12), float32]) -> Tensor[(13, 8, 12), bool] {
  %83 = fn (%var_9474: Tensor[(13, 8, 12), float32], %var_9475: Tensor[(13, 8, 12), float32]) -> Tensor[(13, 8, 12), bool] {
    %79 = cast(%var_9475, dtype="bool") /* ty=Tensor[(13, 8, 12), bool] */;
    %80 = shape_of(%var_9474, dtype="int32") /* ty=Tensor[(3), int32] */;
    %81 = cast(%var_9474, dtype="bool") /* ty=Tensor[(13, 8, 12), bool] */;
    %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%81, %82) /* ty=Tensor[(13, 8, 12), bool] */
  };
  %83(%var_9493, %var_9494) /* ty=Tensor[(13, 8, 12), bool] */
}

def @func_1951(%var_1949: Tensor[(2, 16, 14), float64], %var_1950: Tensor[(60, 10), float32]) -> (Tensor[(11, 4, 15), float64], Tensor[(220), float32], Tensor[(7, 4), uint64], Tensor[(5, 15, 8), float32], Tensor[(60, 10), float32], Tensor[(2, 16, 14), float32]) {
  %100 = fn (%var_1904: Tensor[(2, 16, 14), float64], %var_1930: Tensor[(60, 10), float32]) -> (Tensor[(11, 4, 15), float64], Tensor[(220), float32], Tensor[(7, 4), uint64], Tensor[(5, 15, 8), float32], Tensor[(60, 10), float32], Tensor[(2, 16, 14), float32]) {
    %84 = cast(meta[relay.Constant][2] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
    %85 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 4), uint64] */, dtype="uint64") /* ty=Tensor[(7, 4), uint64] */;
    %86 = reshape(%84, newshape=[10, 11, 2]) /* ty=Tensor[(10, 11, 2), float32] */;
    %87 = reshape(%85, newshape=[7, 4]) /* ty=Tensor[(7, 4), uint64] */;
    %88 = @func_556(%86, %87) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) */;
    %89 = cast(%var_1930, dtype="float32") /* ty=Tensor[(60, 10), float32] */;
    %90 = reshape(%89, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
    %91 = @func_718(%90) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) */;
    %92 = cast(%var_1904, dtype="float64") /* ty=Tensor[(2, 16, 14), float64] */;
    %93 = exp(%92) /* ty=Tensor[(2, 16, 14), float64] */;
    %94 = cast(%93, dtype="float64") /* ty=Tensor[(2, 16, 14), float64] */;
    %95 = erf(%94) /* ty=Tensor[(2, 16, 14), float64] */;
    %96 = cast(%95, dtype="float32") /* ty=Tensor[(2, 16, 14), float32] */;
    %97 = %88.0;
    %98 = %91.0;
    %99 = sigmoid(%96) /* ty=Tensor[(2, 16, 14), float32] */;
    (%97, meta[relay.Constant][2] /* ty=Tensor[(220), float32] */, meta[relay.Constant][3] /* ty=Tensor[(7, 4), uint64] */, %98, %var_1930, %99)
  };
  %100(%var_1949, %var_1950) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(220), float32], Tensor[(7, 4), uint64], Tensor[(5, 15, 8), float32], Tensor[(60, 10), float32], Tensor[(2, 16, 14), float32]) */
}

def @func_7373(%var_7371: Tensor[(1, 28), uint64], %var_7372: Tensor[(660), float64]) -> (Tensor[(28), uint64], Tensor[(4, 48), float64], Tensor[(220), float32], Tensor[(1, 28), uint64], Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float32]) {
  %116 = fn (%var_7356: Tensor[(1, 28), uint64], %var_7359: Tensor[(660), float64]) -> (Tensor[(28), uint64], Tensor[(4, 48), float64], Tensor[(220), float32], Tensor[(1, 28), uint64], Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float32]) {
    %101 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 48), float64] */, dtype="float64") /* ty=Tensor[(4, 48), float64] */;
    %102 = cast(meta[relay.Constant][5] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
    %103 = cast(%var_7356, dtype="uint64") /* ty=Tensor[(1, 28), uint64] */;
    %104 = reshape(%101, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), float64] */;
    %105 = reshape(%102, newshape=[1, 220]) /* ty=Tensor[(1, 220), float32] */;
    %106 = reshape(%103, newshape=[28]) /* ty=Tensor[(28), uint64] */;
    %107 = @func_3708(%104, %105, %106) /* ty=(Tensor[(16, 12, 1), float64], Tensor[(11, 4, 15), float64], Tensor[(1, 220), float32], Tensor[(28), uint64]) */;
    %108 = cast(%var_7359, dtype="float64") /* ty=Tensor[(660), float64] */;
    %109 = reshape(%108, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
    %110 = @func_253(%109) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
    %111 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
    %112 = cast(%111, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
    %113 = %107.3;
    %114 = %110.0;
    %115 = cosh(%112) /* ty=Tensor[(30, 9), float32] */;
    (%113, meta[relay.Constant][4] /* ty=Tensor[(4, 48), float64] */, meta[relay.Constant][5] /* ty=Tensor[(220), float32] */, %var_7356, %114, %var_7359, %115)
  };
  %116(%var_7371, %var_7372) /* ty=(Tensor[(28), uint64], Tensor[(4, 48), float64], Tensor[(220), float32], Tensor[(1, 28), uint64], Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float32]) */
}

def @func_8481() -> (Tensor[(15, 8, 1), float64],) {
  %117 = @func_5912() /* ty=Tensor[(15, 8, 1), float64] */;
  (%117,)
}

def @func_5812(%var_5810: uint8, %var_5811: Tensor[(6, 12, 8), uint8]) -> (Tensor[(6, 12, 8), uint8], Tensor[(15, 8, ?), bool], Tensor[(15, 8, 2), bool], Tensor[(240), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(11, 16, 13), float32], Tensor[(2288), float32]) {
  %140 = fn (%var_5718: uint8, %var_5719: Tensor[(6, 12, 8), uint8]) -> (Tensor[(6, 12, 8), uint8], Tensor[(15, 8, ?), bool], Tensor[(15, 8, 2), bool], Tensor[(240), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(11, 16, 13), float32], Tensor[(2288), float32]) {
    %118 = cast(%var_5718, dtype="uint8") /* ty=uint8 */;
    %119 = cast(%var_5719, dtype="uint8") /* ty=Tensor[(6, 12, 8), uint8] */;
    %120 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
    %121 = %120.0;
    %122 = @func_5034() /* ty=Tensor[(15, 8, 1), float64] */;
    %123 = cast(%122, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
    %124 = shape_of(%121, dtype="int32") /* ty=Tensor[(3), int32] */;
    %125 = cast(%121, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
    %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %128 = reshape(%127, newshape=[15, 8, 2]) /* ty=Tensor[(15, 8, 2), float64] */;
    %129 = @func_4548(%128) /* ty=(Tensor[(15, 8, 1), float32], Tensor[(15, 8, 2), bool]) */;
    %130 = cast(meta[relay.Constant][7] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
    %131 = reshape(%130, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
    %132 = cast(meta[relay.Constant][8] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
    %133 = reshape(%132, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), float32] */;
    %134 = @func_3169(%133) /* ty=(Tensor[(11, 16, 13), float32],) */;
    %135 = add(%118, %119) /* ty=Tensor[(6, 12, 8), uint8] */;
    %136 = not_equal(%125, %126) /* ty=Tensor[(15, 8, ?), bool] */;
    %137 = %129.1;
    %138 = @func_3731(%131) /* ty=Tensor[(3, 10, 9), float32] */;
    %139 = %134.0;
    (%135, %136, %137, meta[relay.Constant][6] /* ty=Tensor[(240), float64] */, %138, meta[relay.Constant][7] /* ty=Tensor[(270), float32] */, %139, meta[relay.Constant][8] /* ty=Tensor[(2288), float32] */)
  };
  %140(%var_5810, %var_5811) /* ty=(Tensor[(6, 12, 8), uint8], Tensor[(15, 8, ?), bool], Tensor[(15, 8, 2), bool], Tensor[(240), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(11, 16, 13), float32], Tensor[(2288), float32]) */
}

def @func_9287(%var_9265: Tensor[(270), float32]) -> (Tensor[(270), bool],) {
  %141 = @func_8347() /* ty=(Tensor[(270), float32], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) */;
  %142 = %141.0;
  %143 = cast(%var_9265, dtype="bool") /* ty=Tensor[(270), bool] */;
  %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(1), int32] */;
  %145 = cast(%142, dtype="bool") /* ty=Tensor[(270), bool] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?), bool] */;
  %147 = logical_or(%145, %146) /* ty=Tensor[(270), bool] */;
  (%147,)
}

def @func_5649(%var_5647: Tensor[(30, 9), float32]) -> (Tensor[(30, 9), bool], Tensor[(3, 10, 9), float32]) {
  @func_5646(%var_5647) /* ty=(Tensor[(30, 9), bool], Tensor[(3, 10, 9), float32]) */
}

def @func_5362() -> Tensor[(30, 9), float32] {
  @func_5360() /* ty=Tensor[(30, 9), float32] */
}

def @func_1328(%var_1326: Tensor[(7, 14, 5), float32]) -> (Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) {
  @func_1325(%var_1326) /* ty=(Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */
}

def @func_7680() -> (Tensor[(30, 9), float64], Tensor[(9, 14, 4), int16], Tensor[(504), int16]) {
  %153 = fn () -> (Tensor[(30, 9), float64], Tensor[(9, 14, 4), int16], Tensor[(504), int16]) {
    %148 = @func_6745() /* ty=(Tensor[(30, 9), float64],) */;
    %149 = cast(meta[relay.Constant][9] /* ty=Tensor[(504), int16] */, dtype="int16") /* ty=Tensor[(504), int16] */;
    %150 = reshape(%149, newshape=[9, 14, 4]) /* ty=Tensor[(9, 14, 4), int16] */;
    %151 = %148.0;
    %152 = @func_3000(%150) /* ty=Tensor[(9, 14, 4), int16] */;
    (%151, %152, meta[relay.Constant][9] /* ty=Tensor[(504), int16] */)
  };
  %153() /* ty=(Tensor[(30, 9), float64], Tensor[(9, 14, 4), int16], Tensor[(504), int16]) */
}

def @func_4956() -> (Tensor[(15, 8, 1), float64],) {
  @func_4954() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_6185(%var_6182: Tensor[(40), int32], %var_6183: Tensor[(120), int32], %var_6184: Tensor[(660), float64]) -> (Tensor[(30, 9), float32], Tensor[(3, 504), float32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64]) {
  %165 = fn (%var_6176: Tensor[(40), int32], %var_6177: Tensor[(120), int32], %var_6178: Tensor[(660), float64]) -> (Tensor[(30, 9), float32], Tensor[(3, 504), float32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64]) {
    %154 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
    %155 = cast(%154, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
    %156 = cast(%var_6176, dtype="int32") /* ty=Tensor[(40), int32] */;
    %157 = cast(%var_6177, dtype="int32") /* ty=Tensor[(120), int32] */;
    %158 = cast(%var_6178, dtype="float64") /* ty=Tensor[(660), float64] */;
    %159 = reshape(%156, newshape=[8, 1, 5]) /* ty=Tensor[(8, 1, 5), int32] */;
    %160 = reshape(%157, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), int32] */;
    %161 = reshape(%158, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %162 = @func_4623(%159, %160, %161) /* ty=(Tensor[(8, 3, 5), int32], Tensor[(7, 4), uint64], Tensor[(3, 504), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(600), float32], Tensor[(15, 4, 9), bool], int16, Tensor[(540), int16]) */;
    %163 = asinh(%155) /* ty=Tensor[(30, 9), float32] */;
    %164 = %162.2;
    (%163, %164, %var_6176, %var_6177, %var_6178)
  };
  %165(%var_6182, %var_6183, %var_6184) /* ty=(Tensor[(30, 9), float32], Tensor[(3, 504), float32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64]) */
}

def @func_6867() -> Tensor[(15, 8, 1), float64] {
  @func_5912() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_8245() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(270), float32], Tensor[(11, 4, 15), float64], Tensor[(28), uint64], Tensor[(10, 66), float64]) {
  %178 = fn () -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(270), float32], Tensor[(11, 4, 15), float64], Tensor[(28), uint64], Tensor[(10, 66), float64]) {
    %166 = @func_5962() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %167 = cast(meta[relay.Constant][10] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
    %168 = reshape(%167, newshape=[30, 9]) /* ty=Tensor[(30, 9), float32] */;
    %169 = @func_6524(%168) /* ty=(Tensor[(30, 9), float32], Tensor[(30, 9), float64]) */;
    %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
    %171 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
    %172 = reshape(%170, newshape=[1, 28]) /* ty=Tensor[(1, 28), uint64] */;
    %173 = reshape(%171, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %174 = @func_7370(%172, %173) /* ty=(Tensor[(28), uint64], Tensor[(4, 48), float64], Tensor[(220), float32], Tensor[(1, 28), uint64], Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float32]) */;
    %175 = %166.0;
    %176 = %169.1;
    %177 = %174.4;
    (%175, %176, meta[relay.Constant][10] /* ty=Tensor[(270), float32] */, %177, meta[relay.Constant][11] /* ty=Tensor[(28), uint64] */, meta[relay.Constant][12] /* ty=Tensor[(10, 66), float64] */)
  };
  %178() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(270), float32], Tensor[(11, 4, 15), float64], Tensor[(28), uint64], Tensor[(10, 66), float64]) */
}

def @func_2033(%var_2003: Tensor[(9, 10, 11), float64]) -> (Tensor[(9, 10, 11), float64],) {
  %179 = cast(%var_2003, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
  %180 = log10(%179) /* ty=Tensor[(9, 10, 11), float64] */;
  (%180,)
}

def @func_8657() -> (Tensor[(15, 8, 1), float64],) {
  @func_8655() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_8898() -> Tensor[(15, 8, 1), float64] {
  %181 = fn () -> Tensor[(15, 8, 1), float64] {
    @func_6867() /* ty=Tensor[(15, 8, 1), float64] */
  };
  %181() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_3713(%var_3710: Tensor[(16, 12, 1), float64], %var_3711: Tensor[(1, 220), float32], %var_3712: Tensor[(28), uint64]) -> (Tensor[(16, 12, 1), float64], Tensor[(11, 4, 15), float64], Tensor[(1, 220), float32], Tensor[(28), uint64]) {
  @func_3708(%var_3710, %var_3711, %var_3712) /* ty=(Tensor[(16, 12, 1), float64], Tensor[(11, 4, 15), float64], Tensor[(1, 220), float32], Tensor[(28), uint64]) */
}

def @func_6946() -> (Tensor[(15, 8, 1), float64],) {
  @func_6944() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_6326() -> (Tensor[(15, 8, 1), float64],) {
  @func_6324() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_10861() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
  %182 = @func_8156() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32]) */;
  %183 = @func_6745() /* ty=(Tensor[(30, 9), float64],) */;
  %184 = @func_10556() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %185 = %182.0;
  %186 = %183.0;
  %187 = %184.0;
  (%185, %186, %187)
}

def @func_718(%var_696: Tensor[(5, 15, 8), float32]) -> (Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) {
  %188 = cast(%var_696, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
  %189 = cast(%var_696, dtype="float64") /* ty=Tensor[(5, 15, 8), float64] */;
  %190 = sigmoid(%188) /* ty=Tensor[(5, 15, 8), float32] */;
  %191 = tan(%189) /* ty=Tensor[(5, 15, 8), float64] */;
  (%190, %191)
}

def @func_5491(%var_5489: Tensor[(240), float64], %var_5490: Tensor[(660), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(15, 8, 240), int32]) {
  @func_5487(%var_5489, %var_5490) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(15, 8, 240), int32]) */
}

def @func_8428(%var_8426: Tensor[(6, 14, 4), int32], %var_8427: Tensor[(6, 14, 4), int32]) -> (Tensor[(6, 14, 4), float64], Tensor[(15, 8, 1), float64], Tensor[(6, 14, 4), float32]) {
  @func_8424(%var_8426, %var_8427) /* ty=(Tensor[(6, 14, 4), float64], Tensor[(15, 8, 1), float64], Tensor[(6, 14, 4), float32]) */
}

def @func_4433() -> (Tensor[(15, 8, 1), float64],) {
  %196 = fn () -> (Tensor[(15, 8, 1), float64],) {
    %192 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
    %193 = asinh(%192) /* ty=Tensor[(15, 8, 1), float32] */;
    %194 = cast(%193, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
    %195 = cosh(%194) /* ty=Tensor[(15, 8, 1), float64] */;
    (%195,)
  };
  %196() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_6114() -> (Tensor[(15, 8, 1), float64],) {
  %197 = @func_5912() /* ty=Tensor[(15, 8, 1), float64] */;
  (%197,)
}

def @func_6324() -> (Tensor[(15, 8, 1), float64],) {
  %198 = @func_5034() /* ty=Tensor[(15, 8, 1), float64] */;
  (%198,)
}

def @func_6745() -> (Tensor[(30, 9), float64],) {
  %199 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
  %200 = %199.0;
  %201 = cast(%200, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %202 = asin(%201) /* ty=Tensor[(30, 9), float64] */;
  (%202,)
}

def @func_4188(%var_4176: int16, %var_4177: Tensor[(15, 4, 9), int16]) -> (Tensor[(15, 4, 9), bool], Tensor[(3, 10, 9), float32], Tensor[(270), float32]) {
  %203 = cast(%var_4176, dtype="bool") /* ty=bool */;
  %204 = cast(%var_4177, dtype="bool") /* ty=Tensor[(15, 4, 9), bool] */;
  %205 = cast(meta[relay.Constant][14] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %206 = reshape(%205, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %207 = equal(%203, %204) /* ty=Tensor[(15, 4, 9), bool] */;
  %208 = @func_3731(%206) /* ty=Tensor[(3, 10, 9), float32] */;
  (%207, %208, meta[relay.Constant][14] /* ty=Tensor[(270), float32] */)
}

def @func_6116() -> (Tensor[(15, 8, 1), float64],) {
  @func_6114() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_6944() -> (Tensor[(15, 8, 1), float64],) {
  %209 = @func_6850() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %210 = %209.1;
  (%210,)
}

def @func_7279() -> Tensor[(15, 8, 1), float64] {
  %212 = fn () -> Tensor[(15, 8, 1), float64] {
    %211 = @func_6850() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
    %211.0
  };
  %212() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_11089() -> Tensor[(15, 8, 1), float64] {
  @func_11087() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_10556() -> (Tensor[(15, 8, 1), float64],) {
  %213 = @func_6615() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %214 = %213.0;
  (%214,)
}

def @func_9755(%var_9693: Tensor[(3, 90), float32], %var_9698: Tensor[(600), float32], %var_9708: Tensor[(1, 220), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(3, 90), float32], Tensor[(5, 15, 8), float64], Tensor[(600), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 220), int16]) {
  %215 = @func_8481() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %216 = cast(%var_9693, dtype="float32") /* ty=Tensor[(3, 90), float32] */;
  %217 = reshape(%216, newshape=[30, 9]) /* ty=Tensor[(30, 9), float32] */;
  %218 = @func_6524(%217) /* ty=(Tensor[(30, 9), float32], Tensor[(30, 9), float64]) */;
  %219 = cast(%var_9698, dtype="float32") /* ty=Tensor[(600), float32] */;
  %220 = reshape(%219, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %221 = @func_718(%220) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) */;
  %222 = cast(%var_9708, dtype="float32") /* ty=Tensor[(1, 220), float32] */;
  %223 = reshape(%222, newshape=[220]) /* ty=Tensor[(220), float32] */;
  %224 = @func_9123(%223) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(220), float32]) */;
  %225 = %224.0;
  %226 = cast(%var_9708, dtype="int16") /* ty=Tensor[(1, 220), int16] */;
  %227 = cast(%225, dtype="int16") /* ty=Tensor[(15, 8, 1), int16] */;
  %228 = %215.0;
  %229 = %218.1;
  %230 = %221.1;
  %231 = @func_7636() /* ty=Tensor[(15, 8, 1), float64] */;
  %232 = maximum(%226, %227) /* ty=Tensor[(15, 8, 220), int16] */;
  (%228, %229, %var_9693, %230, %var_9698, %231, %232)
}

def @func_8483() -> (Tensor[(15, 8, 1), float64],) {
  @func_8481() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_9656() -> Tensor[(15, 8, 1), float64] {
  %233 = @func_5509() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %233.0
}

def @func_7705() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) {
  %234 = @func_6114() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %235 = @func_4652() /* ty=Tensor[(15, 8, 1), float64] */;
  %236 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  %237 = %234.0;
  (%235, %236, %237)
}

def @func_3708(%var_3679: Tensor[(16, 12, 1), float64], %var_3697: Tensor[(1, 220), float32], %var_3698: Tensor[(28), uint64]) -> (Tensor[(16, 12, 1), float64], Tensor[(11, 4, 15), float64], Tensor[(1, 220), float32], Tensor[(28), uint64]) {
  %238 = cast(%var_3679, dtype="float64") /* ty=Tensor[(16, 12, 1), float64] */;
  %239 = cast(%var_3697, dtype="float32") /* ty=Tensor[(1, 220), float32] */;
  %240 = cast(%var_3698, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %241 = reshape(%239, newshape=[10, 11, 2]) /* ty=Tensor[(10, 11, 2), float32] */;
  %242 = reshape(%240, newshape=[7, 4]) /* ty=Tensor[(7, 4), uint64] */;
  %243 = @func_556(%241, %242) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) */;
  %244 = rsqrt(%238) /* ty=Tensor[(16, 12, 1), float64] */;
  %245 = %243.3;
  (%244, %245, %var_3697, %var_3698)
}

def @func_10231(%var_10227: Tensor[(15, 10, 8), uint8], %var_10228: Tensor[(15, 10, 8), uint8], %var_10229: uint8, %var_10230: Tensor[(840), float64]) -> (Tensor[(15, 10, 8), uint8], Tensor[(15, 8, 2), bool], uint8, Tensor[(576), uint8], Tensor[(15, 10, 8), float32], Tensor[(5, 14, 12), float64], Tensor[(840), float64]) {
  %265 = fn (%var_10137: Tensor[(15, 10, 8), uint8], %var_10138: Tensor[(15, 10, 8), uint8], %var_10183: uint8, %var_10224: Tensor[(840), float64]) -> (Tensor[(15, 10, 8), uint8], Tensor[(15, 8, 2), bool], uint8, Tensor[(576), uint8], Tensor[(15, 10, 8), float32], Tensor[(5, 14, 12), float64], Tensor[(840), float64]) {
    %246 = cast(%var_10138, dtype="uint8") /* ty=Tensor[(15, 10, 8), uint8] */;
    %247 = shape_of(%var_10137, dtype="int32") /* ty=Tensor[(3), int32] */;
    %248 = cast(%var_10137, dtype="uint8") /* ty=Tensor[(15, 10, 8), uint8] */;
    %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %250 = cast(%var_10183, dtype="uint8") /* ty=uint8 */;
    %251 = cast(meta[relay.Constant][15] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
    %252 = reshape(%250, newshape=[]) /* ty=uint8 */;
    %253 = reshape(%251, newshape=[6, 12, 8]) /* ty=Tensor[(6, 12, 8), uint8] */;
    %254 = @func_5809(%252, %253) /* ty=(Tensor[(6, 12, 8), uint8], Tensor[(15, 8, ?), bool], Tensor[(15, 8, 2), bool], Tensor[(240), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(11, 16, 13), float32], Tensor[(2288), float32]) */;
    %255 = cast(%var_10137, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
    %256 = cast(%var_10224, dtype="float64") /* ty=Tensor[(840), float64] */;
    %257 = cast(%var_10224, dtype="float64") /* ty=Tensor[(840), float64] */;
    %258 = reshape(%256, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), float64] */;
    %259 = reshape(%257, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), float64] */;
    %260 = @func_8729(%258, %259) /* ty=(Tensor[(5, 14, 12), float64], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
    %261 = bitwise_and(%248, %249) /* ty=Tensor[(15, 10, 8), uint8] */;
    %262 = %254.2;
    %263 = exp(%255) /* ty=Tensor[(15, 10, 8), float32] */;
    %264 = %260.0;
    (%261, %262, %var_10183, meta[relay.Constant][15] /* ty=Tensor[(576), uint8] */, %263, %264, %var_10224)
  };
  %265(%var_10227, %var_10228, %var_10229, %var_10230) /* ty=(Tensor[(15, 10, 8), uint8], Tensor[(15, 8, 2), bool], uint8, Tensor[(576), uint8], Tensor[(15, 10, 8), float32], Tensor[(5, 14, 12), float64], Tensor[(840), float64]) */
}

def @func_6850() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %266 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %267 = @func_5567() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) */;
  %268 = %266.0;
  %269 = %267.0;
  (%268, %269)
}

def @func_7482(%var_7481: Tensor[(30, 9), float64]) -> (Tensor[(30, 9), bool], Tensor[(30, 9), float32], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) {
  %283 = fn (%var_7442: Tensor[(30, 9), float64]) -> (Tensor[(30, 9), bool], Tensor[(30, 9), float32], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) {
    %270 = @func_6673() /* ty=(Tensor[(30, 9), float64],) */;
    %271 = %270.0;
    %272 = cast(%var_7442, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
    %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(2), int32] */;
    %274 = cast(%271, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
    %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %276 = cast(%var_7442, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
    %277 = cast(meta[relay.Constant][16] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
    %278 = reshape(%277, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float64] */;
    %279 = @func_2033(%278) /* ty=(Tensor[(9, 10, 11), float64],) */;
    %280 = equal(%274, %275) /* ty=Tensor[(30, 9), bool] */;
    %281 = exp(%276) /* ty=Tensor[(30, 9), float32] */;
    %282 = %279.0;
    (%280, %281, %282, meta[relay.Constant][16] /* ty=Tensor[(990), float64] */)
  };
  %283(%var_7481) /* ty=(Tensor[(30, 9), bool], Tensor[(30, 9), float32], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) */
}

def @func_7824() -> (Tensor[(15, 8, 8), int64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) {
  @func_7822() /* ty=(Tensor[(15, 8, 8), int64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) */
}

def @func_1848(%var_1846: Tensor[(11, 5, 4), float64], %var_1847: Tensor[(490), float32]) -> (Tensor[(11, 5, 4), float64], Tensor[(5, 15, 8), float32], Tensor[(490), float32]) {
  @func_1844(%var_1846, %var_1847) /* ty=(Tensor[(11, 5, 4), float64], Tensor[(5, 15, 8), float32], Tensor[(490), float32]) */
}

def @func_10364() -> Tensor[(15, 8, 1), float64] {
  @func_4652() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_1844(%var_1822: Tensor[(11, 5, 4), float64], %var_1836: Tensor[(490), float32]) -> (Tensor[(11, 5, 4), float64], Tensor[(5, 15, 8), float32], Tensor[(490), float32]) {
  %284 = cast(%var_1822, dtype="float64") /* ty=Tensor[(11, 5, 4), float64] */;
  %285 = cast(%var_1836, dtype="float32") /* ty=Tensor[(490), float32] */;
  %286 = reshape(%285, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), float32] */;
  %287 = @func_1325(%286) /* ty=(Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */;
  %288 = atan(%284) /* ty=Tensor[(11, 5, 4), float64] */;
  %289 = %287.5;
  (%288, %289, %var_1836)
}

def @func_9225(%var_9220: Tensor[(660), float64], %var_9221: uint64, %var_9222: Tensor[(55, 4), float32], %var_9223: Tensor[(28), uint64], %var_9224: Tensor[(600), float32]) -> (Tensor[(30, 9), float32], uint64, Tensor[(660), float64], uint64, Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64], Tensor[(30, 9), uint8], Tensor[(1, 220), float32], Tensor[(192), float64], Tensor[(55, 4), float32], Tensor[(28), uint64], Tensor[(3, 10, 9), float64], Tensor[(270), float32], Tensor[(600), float32], Tensor[(15, 8, 1), float64]) {
  @func_9218(%var_9220, %var_9221, %var_9222, %var_9223, %var_9224) /* ty=(Tensor[(30, 9), float32], uint64, Tensor[(660), float64], uint64, Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64], Tensor[(30, 9), uint8], Tensor[(1, 220), float32], Tensor[(192), float64], Tensor[(55, 4), float32], Tensor[(28), uint64], Tensor[(3, 10, 9), float64], Tensor[(270), float32], Tensor[(600), float32], Tensor[(15, 8, 1), float64]) */
}

def @func_6391(%var_6387: Tensor[(4, 12, 5), int32]) -> Tensor[(4, 12, 5), bool] {
  %290 = cast(%var_6387, dtype="bool") /* ty=Tensor[(4, 12, 5), bool] */;
  %291 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(4, 12, 5), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 12, 5), int32] */, dtype="bool") /* ty=Tensor[(4, 12, 5), bool] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%292, %293) /* ty=Tensor[(4, 12, 5), bool] */
}

def @func_4653() -> Tensor[(15, 8, 1), float64] {
  %295 = fn () -> Tensor[(15, 8, 1), float64] {
    %294 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %294.0
  };
  %295() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_10558() -> (Tensor[(15, 8, 1), float64],) {
  @func_10556() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_8446(%var_8439: bool, %var_8440: Tensor[(6, 9, 16), bool]) -> (Tensor[(6, 9, 16), bool],) {
  %296 = cast(%var_8439, dtype="bool") /* ty=bool */;
  %297 = cast(%var_8440, dtype="bool") /* ty=Tensor[(6, 9, 16), bool] */;
  %298 = logical_and(%296, %297) /* ty=Tensor[(6, 9, 16), bool] */;
  (%298,)
}

def @func_7262(%var_7260: Tensor[(2, 120), float64]) -> (Tensor[(660), float64], Tensor[(2, 120), float64], Tensor[(15, 8, 240), bool], Tensor[(11, 4, 15), float64]) {
  @func_7259(%var_7260) /* ty=(Tensor[(660), float64], Tensor[(2, 120), float64], Tensor[(15, 8, 240), bool], Tensor[(11, 4, 15), float64]) */
}

def @func_2433(%var_2382: Tensor[(12, 9, 14), float32], %var_2391: Tensor[(1, 660), float64], %var_2416: Tensor[(490), float32], %var_2421: Tensor[(600), float32]) -> (Tensor[(12, 9, 14), float32], Tensor[(1, 660), float64], Tensor[(14, 10, ?), float32], Tensor[(330, 2), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(7, 4), uint64], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), float64]) {
  %299 = cast(%var_2382, dtype="float32") /* ty=Tensor[(12, 9, 14), float32] */;
  %300 = cast(%var_2391, dtype="float64") /* ty=Tensor[(1, 660), float64] */;
  %301 = reshape(%300, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %302 = @func_357(%301) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %303 = %302.0;
  %304 = cast(%303, dtype="float32") /* ty=Tensor[(14, 10, ?), float32] */;
  %305 = cast(%var_2391, dtype="float64") /* ty=Tensor[(1, 660), float64] */;
  %306 = reshape(%305, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %307 = @func_357(%306) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %308 = cast(%var_2416, dtype="float32") /* ty=Tensor[(490), float32] */;
  %309 = reshape(%308, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), float32] */;
  %310 = @func_1325(%309) /* ty=(Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */;
  %311 = cast(meta[relay.Constant][18] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %312 = cast(%var_2421, dtype="float32") /* ty=Tensor[(600), float32] */;
  %313 = reshape(%311, newshape=[2, 16, 14]) /* ty=Tensor[(2, 16, 14), float64] */;
  %314 = reshape(%312, newshape=[60, 10]) /* ty=Tensor[(60, 10), float32] */;
  %315 = @func_1948(%313, %314) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(220), float32], Tensor[(7, 4), uint64], Tensor[(5, 15, 8), float32], Tensor[(60, 10), float32], Tensor[(2, 16, 14), float32]) */;
  %316 = cast(meta[relay.Constant][18] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %317 = cast(%var_2421, dtype="float32") /* ty=Tensor[(600), float32] */;
  %318 = reshape(%316, newshape=[2, 16, 14]) /* ty=Tensor[(2, 16, 14), float64] */;
  %319 = reshape(%317, newshape=[60, 10]) /* ty=Tensor[(60, 10), float32] */;
  %320 = @func_1948(%318, %319) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(220), float32], Tensor[(7, 4), uint64], Tensor[(5, 15, 8), float32], Tensor[(60, 10), float32], Tensor[(2, 16, 14), float32]) */;
  %321 = log(%299) /* ty=Tensor[(12, 9, 14), float32] */;
  %322 = log(%304) /* ty=Tensor[(14, 10, ?), float32] */;
  %323 = %307.2;
  %324 = %310.4;
  %325 = %315.2;
  %326 = %320.0;
  (%321, %var_2391, %322, %323, %324, %var_2416, %325, meta[relay.Constant][18] /* ty=Tensor[(448), float64] */, %var_2421, %326)
}

def @func_5568() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) {
  %339 = fn () -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) {
    %327 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
    %328 = cast(meta[relay.Constant][19] /* ty=Tensor[(30, 9), float32] */, dtype="int64") /* ty=Tensor[(30, 9), int64] */;
    %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(2), int32] */;
    %330 = cast(%327, dtype="int64") /* ty=Tensor[(30, 9), int64] */;
    %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %332 = bitwise_xor(%330, %331) /* ty=Tensor[(30, 9), int64] */;
    %333 = cast(meta[relay.Constant][19] /* ty=Tensor[(30, 9), float32] */, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
    %334 = shape_of(%332, dtype="int32") /* ty=Tensor[(2), int32] */;
    %335 = cast(%332, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
    %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %337 = @func_5034() /* ty=Tensor[(15, 8, 1), float64] */;
    %338 = floor_divide(%335, %336) /* ty=Tensor[(30, 9), float32] */;
    (%337, %338)
  };
  %339() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) */
}

def @func_5837(%var_5836: Tensor[(8, 2, 2), float64]) -> Tensor[(8, 2, 2), float64] {
  %341 = fn (%var_5824: Tensor[(8, 2, 2), float64]) -> Tensor[(8, 2, 2), float64] {
    %340 = cast(%var_5824, dtype="float64") /* ty=Tensor[(8, 2, 2), float64] */;
    sinh(%340) /* ty=Tensor[(8, 2, 2), float64] */
  };
  %341(%var_5836) /* ty=Tensor[(8, 2, 2), float64] */
}

def @func_7113(%var_7111: Tensor[(15, 8, 8), float64], %var_7112: Tensor[(3, 90), float32]) -> (Tensor[(15, 8, 8), uint32], Tensor[(3, 10, 9), float32], Tensor[(3, 90), float32]) {
  %349 = fn (%var_7083: Tensor[(15, 8, 8), float64], %var_7092: Tensor[(3, 90), float32]) -> (Tensor[(15, 8, 8), uint32], Tensor[(3, 10, 9), float32], Tensor[(3, 90), float32]) {
    %342 = @func_5912() /* ty=Tensor[(15, 8, 1), float64] */;
    %343 = cast(%342, dtype="uint32") /* ty=Tensor[(15, 8, 1), uint32] */;
    %344 = cast(%var_7083, dtype="uint32") /* ty=Tensor[(15, 8, 8), uint32] */;
    %345 = cast(%var_7092, dtype="float32") /* ty=Tensor[(3, 90), float32] */;
    %346 = reshape(%345, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
    %347 = add(%343, %344) /* ty=Tensor[(15, 8, 8), uint32] */;
    %348 = @func_3731(%346) /* ty=Tensor[(3, 10, 9), float32] */;
    (%347, %348, %var_7092)
  };
  %349(%var_7111, %var_7112) /* ty=(Tensor[(15, 8, 8), uint32], Tensor[(3, 10, 9), float32], Tensor[(3, 90), float32]) */
}

def @func_8087(%var_8085: Tensor[(660, 1), float64], %var_8086: uint64) -> (Tensor[(15, 8, 1), float64], uint64, Tensor[(660, 1), float64], uint64) {
  %358 = fn (%var_8077: Tensor[(660, 1), float64], %var_8078: uint64) -> (Tensor[(15, 8, 1), float64], uint64, Tensor[(660, 1), float64], uint64) {
    %350 = @func_7705() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) */;
    %351 = cast(%var_8077, dtype="float64") /* ty=Tensor[(660, 1), float64] */;
    %352 = cast(%var_8078, dtype="uint64") /* ty=uint64 */;
    %353 = reshape(%351, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %354 = reshape(%352, newshape=[]) /* ty=uint64 */;
    %355 = @func_5880(%353, %354) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(660), float64], uint64) */;
    %356 = %350.0;
    %357 = %355.3;
    (%356, %357, %var_8077, %var_8078)
  };
  %358(%var_8085, %var_8086) /* ty=(Tensor[(15, 8, 1), float64], uint64, Tensor[(660, 1), float64], uint64) */
}

def @func_10334(%var_10332: Tensor[(1080), float64], %var_10333: Tensor[(120), int32]) -> (Tensor[(30, 9), float32], Tensor[(3, 90), float32], Tensor[(960, 1), float64], Tensor[(15, 8, 9), bool], Tensor[(1080), float64], Tensor[(40), int32], Tensor[(120), int32], Tensor[(120), int32], Tensor[(660), float64], Tensor[(28), uint64], Tensor[(1, 1920), float64]) {
  @func_10330(%var_10332, %var_10333) /* ty=(Tensor[(30, 9), float32], Tensor[(3, 90), float32], Tensor[(960, 1), float64], Tensor[(15, 8, 9), bool], Tensor[(1080), float64], Tensor[(40), int32], Tensor[(120), int32], Tensor[(120), int32], Tensor[(660), float64], Tensor[(28), uint64], Tensor[(1, 1920), float64]) */
}

def @func_2036(%var_2034: Tensor[(9, 10, 11), float64]) -> (Tensor[(9, 10, 11), float64],) {
  @func_2033(%var_2034) /* ty=(Tensor[(9, 10, 11), float64],) */
}

def @func_9350() -> (Tensor[(9, 10, 11), float64],) {
  %359 = @func_6785() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) */;
  %360 = %359.2;
  (%360,)
}

def @func_8547(%var_8536: Tensor[(15, 8, 10), float64]) -> (Tensor[(15, 8, 10), bool], Tensor[(30, 9), float64]) {
  %361 = @func_5034() /* ty=Tensor[(15, 8, 1), float64] */;
  %362 = cast(%361, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %363 = cast(%var_8536, dtype="bool") /* ty=Tensor[(15, 8, 10), bool] */;
  %364 = @func_6673() /* ty=(Tensor[(30, 9), float64],) */;
  %365 = greater(%362, %363) /* ty=Tensor[(15, 8, 10), bool] */;
  %366 = %364.0;
  (%365, %366)
}

def @func_8889() -> (Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float32]) {
  %372 = fn () -> (Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float32]) {
    %367 = @func_6785() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) */;
    %368 = %367.2;
    %369 = cast(%368, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
    %370 = @func_5093() /* ty=Tensor[(15, 8, 1), float64] */;
    %371 = log2(%369) /* ty=Tensor[(9, 10, 11), float32] */;
    (%370, %371)
  };
  %372() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float32]) */
}

def @func_1325(%var_1293: Tensor[(7, 14, 5), float32]) -> (Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) {
  %373 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 14, 5), float32] */;
  %374 = shape_of(%var_1293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%var_1293, dtype="float32") /* ty=Tensor[(7, 14, 5), float32] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %377 = cast(meta[relay.Constant][21] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %378 = reshape(%377, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %379 = @func_357(%378) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %380 = cast(meta[relay.Constant][21] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %381 = reshape(%380, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %382 = @func_357(%381) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %383 = cast(%var_1293, dtype="float32") /* ty=Tensor[(7, 14, 5), float32] */;
  %384 = cast(meta[relay.Constant][22] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %385 = reshape(%384, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %386 = @func_718(%385) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) */;
  %387 = minimum(%375, %376) /* ty=Tensor[(7, 14, 5), float32] */;
  %388 = %379.0;
  %389 = %382.1;
  %390 = exp(%383) /* ty=Tensor[(7, 14, 5), float32] */;
  %391 = %386.0;
  (%387, %388, meta[relay.Constant][21] /* ty=Tensor[(660), float64] */, %389, %390, %391, meta[relay.Constant][22] /* ty=Tensor[(600), float32] */)
}

def @func_6869() -> Tensor[(15, 8, 1), float64] {
  @func_6867() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_10330(%var_10294: Tensor[(1080), float64], %var_10312: Tensor[(120), int32]) -> (Tensor[(30, 9), float32], Tensor[(3, 90), float32], Tensor[(960, 1), float64], Tensor[(15, 8, 9), bool], Tensor[(1080), float64], Tensor[(40), int32], Tensor[(120), int32], Tensor[(120), int32], Tensor[(660), float64], Tensor[(28), uint64], Tensor[(1, 1920), float64]) {
  %392 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
  %393 = cast(meta[relay.Constant][23] /* ty=Tensor[(960, 1), float64] */, dtype="float64") /* ty=Tensor[(960, 1), float64] */;
  %394 = %392.0;
  %395 = cast(%394, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %396 = reshape(%393, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float64] */;
  %397 = reshape(%395, newshape=[3, 90]) /* ty=Tensor[(3, 90), float32] */;
  %398 = @func_7110(%396, %397) /* ty=(Tensor[(15, 8, 8), uint32], Tensor[(3, 10, 9), float32], Tensor[(3, 90), float32]) */;
  %399 = cast(%var_10294, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %400 = cast(meta[relay.Constant][24] /* ty=Tensor[(40), int32] */, dtype="int32") /* ty=Tensor[(40), int32] */;
  %401 = reshape(%399, newshape=[15, 8, 9]) /* ty=Tensor[(15, 8, 9), float64] */;
  %402 = reshape(%400, newshape=[40]) /* ty=Tensor[(40), int32] */;
  %403 = @func_5269(%401, %402) /* ty=(Tensor[(15, 8, 9), bool], Tensor[(7, 4), uint64], Tensor[(40), int32], Tensor[(660), float64]) */;
  %404 = cast(meta[relay.Constant][24] /* ty=Tensor[(40), int32] */, dtype="int32") /* ty=Tensor[(40), int32] */;
  %405 = cast(%var_10312, dtype="int32") /* ty=Tensor[(120), int32] */;
  %406 = cast(meta[relay.Constant][25] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %407 = reshape(%404, newshape=[40]) /* ty=Tensor[(40), int32] */;
  %408 = reshape(%405, newshape=[120]) /* ty=Tensor[(120), int32] */;
  %409 = reshape(%406, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %410 = @func_6181(%407, %408, %409) /* ty=(Tensor[(30, 9), float32], Tensor[(3, 504), float32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64]) */;
  %411 = cast(meta[relay.Constant][25] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %412 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 1920), float64] */, dtype="float64") /* ty=Tensor[(1, 1920), float64] */;
  %413 = reshape(%411, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %414 = reshape(%412, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %415 = @func_9052(%413, %414) /* ty=(Tensor[(30, 9), float32], Tensor[(660), float64], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(15, 8, 16), int32], Tensor[(1920), float64]) */;
  %416 = %398.2;
  %417 = %403.0;
  %418 = %410.3;
  %419 = %415.3;
  (%394, %416, meta[relay.Constant][23] /* ty=Tensor[(960, 1), float64] */, %417, %var_10294, meta[relay.Constant][24] /* ty=Tensor[(40), int32] */, %418, %var_10312, meta[relay.Constant][25] /* ty=Tensor[(660), float64] */, %419, meta[relay.Constant][26] /* ty=Tensor[(1, 1920), float64] */)
}

def @func_10002(%var_9986: Tensor[(1920), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(11, 4, 15), int8], Tensor[(1, 660), float64], Tensor[(15, 8, 1), float64], Tensor[(28), uint64], Tensor[(1920), float64], Tensor[(15, 8, 1), float64]) {
  %420 = @func_4954() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %421 = @func_5509() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %422 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 660), float64] */, dtype="float64") /* ty=Tensor[(1, 660), float64] */;
  %423 = reshape(%422, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %424 = @func_253(%423) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %425 = %424.1;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %427 = cast(%var_9986, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %428 = reshape(%426, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %429 = reshape(%427, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %430 = @func_9052(%428, %429) /* ty=(Tensor[(30, 9), float32], Tensor[(660), float64], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(15, 8, 16), int32], Tensor[(1920), float64]) */;
  %431 = @func_8768() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %432 = %420.0;
  %433 = %421.0;
  %434 = @func_5709() /* ty=Tensor[(15, 8, 1), float64] */;
  %435 = %430.3;
  %436 = %431.0;
  (%432, %433, %425, meta[relay.Constant][27] /* ty=Tensor[(1, 660), float64] */, %434, %435, %var_9986, %436)
}

def @func_4566() -> (Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) {
  @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */
}

def @func_256(%var_254: Tensor[(11, 4, 15), float64]) -> (Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) {
  @func_253(%var_254) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */
}

def @func_9469(%var_9462: Tensor[(9, 13, 2), float64]) -> Tensor[(9, 13, 2), float64] {
  %437 = cast(%var_9462, dtype="float64") /* ty=Tensor[(9, 13, 2), float64] */;
  sqrt(%437) /* ty=Tensor[(9, 13, 2), float64] */
}

def @func_6908(%var_6907: Tensor[(30, 9), float64]) -> Tensor[(30, 9), uint8] {
  %444 = fn (%var_6899: Tensor[(30, 9), float64]) -> Tensor[(30, 9), uint8] {
    %438 = @func_6745() /* ty=(Tensor[(30, 9), float64],) */;
    %439 = %438.0;
    %440 = cast(%var_6899, dtype="uint8") /* ty=Tensor[(30, 9), uint8] */;
    %441 = shape_of(%439, dtype="int32") /* ty=Tensor[(2), int32] */;
    %442 = cast(%439, dtype="uint8") /* ty=Tensor[(30, 9), uint8] */;
    %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    left_shift(%442, %443) /* ty=Tensor[(30, 9), uint8] */
  };
  %444(%var_6907) /* ty=Tensor[(30, 9), uint8] */
}

def @func_9472(%var_9470: Tensor[(9, 13, 2), float64]) -> Tensor[(9, 13, 2), float64] {
  @func_9469(%var_9470) /* ty=Tensor[(9, 13, 2), float64] */
}

def @func_5175() -> Tensor[(3, 10, 9), float32] {
  %445 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %445.1
}

def @func_7020(%var_7019: Tensor[(15, 8, 16), float64]) -> (Tensor[(15, 8, 16), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(110, 6), float64], uint64, Tensor[(14, 10, ?), int64]) {
  %462 = fn (%var_6953: Tensor[(15, 8, 16), float64]) -> (Tensor[(15, 8, 16), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(110, 6), float64], uint64, Tensor[(14, 10, ?), int64]) {
    %446 = @func_5567() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) */;
    %447 = %446.0;
    %448 = cast(%447, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
    %449 = cast(%var_6953, dtype="float32") /* ty=Tensor[(15, 8, 16), float32] */;
    %450 = cast(meta[relay.Constant][28] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
    %451 = cast(meta[relay.Constant][29] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %452 = reshape(%450, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %453 = reshape(%451, newshape=[]) /* ty=uint64 */;
    %454 = @func_5880(%452, %453) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(660), float64], uint64) */;
    %455 = cast(meta[relay.Constant][28] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
    %456 = reshape(%455, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
    %457 = @func_357(%456) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
    %458 = floor_divide(%448, %449) /* ty=Tensor[(15, 8, 16), float32] */;
    %459 = @func_6867() /* ty=Tensor[(15, 8, 1), float64] */;
    %460 = %454.0;
    %461 = %457.0;
    (%458, %459, %460, meta[relay.Constant][28] /* ty=Tensor[(110, 6), float64] */, meta[relay.Constant][29] /* ty=uint64 */, %461)
  };
  %462(%var_7019) /* ty=(Tensor[(15, 8, 16), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(110, 6), float64], uint64, Tensor[(14, 10, ?), int64]) */
}

def @func_4890() -> (Tensor[(15, 8, 1), float64],) {
  %465 = fn () -> (Tensor[(15, 8, 1), float64],) {
    %463 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %464 = %463.0;
    (%464,)
  };
  %465() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_7422() -> (Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
  %466 = cast(meta[relay.Constant][30] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %467 = reshape(%466, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %468 = @func_6058(%467) /* ty=(Tensor[(30, 9), float32], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
  %469 = @func_6673() /* ty=(Tensor[(30, 9), float64],) */;
  %470 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %471 = %470.0;
  %472 = cast(%471, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
  %473 = %468.1;
  %474 = %469.0;
  %475 = asin(%472) /* ty=Tensor[(15, 8, 1), float64] */;
  (%473, meta[relay.Constant][30] /* ty=Tensor[(660), float64] */, %474, %475)
}

def @func_4747(%var_4720: Tensor[(5, 44), float32], %var_4743: Tensor[(5, 44), float32]) -> (Tensor[(15, 8, 1), float64], uint64, Tensor[(28), uint64], Tensor[(5, 44), float32]) {
  %476 = cast(%var_4720, dtype="float32") /* ty=Tensor[(5, 44), float32] */;
  %477 = cast(meta[relay.Constant][31] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
  %478 = reshape(%476, newshape=[10, 11, 2]) /* ty=Tensor[(10, 11, 2), float32] */;
  %479 = reshape(%477, newshape=[7, 4]) /* ty=Tensor[(7, 4), uint64] */;
  %480 = @func_556(%478, %479) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) */;
  %481 = cast(%var_4720, dtype="float32") /* ty=Tensor[(5, 44), float32] */;
  %482 = log2(%481) /* ty=Tensor[(5, 44), float32] */;
  %483 = cast(%var_4743, dtype="float32") /* ty=Tensor[(5, 44), float32] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(2), int32] */;
  %485 = cast(%482, dtype="float32") /* ty=Tensor[(5, 44), float32] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %487 = @func_4652() /* ty=Tensor[(15, 8, 1), float64] */;
  %488 = %480.4;
  %489 = divide(%485, %486) /* ty=Tensor[(5, 44), float32] */;
  (%487, %488, meta[relay.Constant][31] /* ty=Tensor[(28), uint64] */, %489)
}

def @func_2952(%var_2947: Tensor[(1, 16, 3), float32], %var_2948: Tensor[(3, 16, 3), float32], %var_2949: Tensor[(490), float32], %var_2950: Tensor[(600, 1), float32], %var_2951: uint64) -> (Tensor[(3, 16, 3), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(660), float64], Tensor[(220), float32], Tensor[(28), uint64], Tensor[(490), float32], Tensor[(5, 15, 8), float64], Tensor[(600, 1), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(11, 5, 4), float64]) {
  %527 = fn (%var_2884: Tensor[(1, 16, 3), float32], %var_2885: Tensor[(3, 16, 3), float32], %var_2894: Tensor[(490), float32], %var_2914: Tensor[(600, 1), float32], %var_2918: uint64) -> (Tensor[(3, 16, 3), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(660), float64], Tensor[(220), float32], Tensor[(28), uint64], Tensor[(490), float32], Tensor[(5, 15, 8), float64], Tensor[(600, 1), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(11, 5, 4), float64]) {
    %490 = cast(%var_2884, dtype="float32") /* ty=Tensor[(1, 16, 3), float32] */;
    %491 = cast(%var_2885, dtype="float32") /* ty=Tensor[(3, 16, 3), float32] */;
    %492 = cast(%var_2894, dtype="float32") /* ty=Tensor[(490), float32] */;
    %493 = reshape(%492, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), float32] */;
    %494 = @func_1325(%493) /* ty=(Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */;
    %495 = cast(meta[relay.Constant][32] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
    %496 = cast(meta[relay.Constant][33] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
    %497 = reshape(%495, newshape=[10, 11, 2]) /* ty=Tensor[(10, 11, 2), float32] */;
    %498 = reshape(%496, newshape=[7, 4]) /* ty=Tensor[(7, 4), uint64] */;
    %499 = @func_556(%497, %498) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) */;
    %500 = cast(meta[relay.Constant][32] /* ty=Tensor[(220), float32] */, dtype="float64") /* ty=Tensor[(220), float64] */;
    %501 = %494.4;
    %502 = cast(%501, dtype="float32") /* ty=Tensor[(7, 14, 5), float32] */;
    %503 = reshape(%500, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), float64] */;
    %504 = reshape(%502, newshape=[490]) /* ty=Tensor[(490), float32] */;
    %505 = @func_1844(%503, %504) /* ty=(Tensor[(11, 5, 4), float64], Tensor[(5, 15, 8), float32], Tensor[(490), float32]) */;
    %506 = cast(%var_2914, dtype="float32") /* ty=Tensor[(600, 1), float32] */;
    %507 = reshape(%506, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
    %508 = @func_718(%507) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) */;
    %509 = cast(%var_2918, dtype="uint64") /* ty=uint64 */;
    %510 = cast(meta[relay.Constant][33] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
    %511 = %499.1;
    %512 = cast(%511, dtype="float64") /* ty=Tensor[(660), float64] */;
    %513 = reshape(%509, newshape=[]) /* ty=uint64 */;
    %514 = reshape(%510, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), uint64] */;
    %515 = reshape(%512, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %516 = @func_451(%513, %514, %515) /* ty=(Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
    %517 = cast(meta[relay.Constant][32] /* ty=Tensor[(220), float32] */, dtype="float64") /* ty=Tensor[(220), float64] */;
    %518 = %505.2;
    %519 = cast(%518, dtype="float32") /* ty=Tensor[(490), float32] */;
    %520 = reshape(%517, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), float64] */;
    %521 = reshape(%519, newshape=[490]) /* ty=Tensor[(490), float32] */;
    %522 = @func_1844(%520, %521) /* ty=(Tensor[(11, 5, 4), float64], Tensor[(5, 15, 8), float32], Tensor[(490), float32]) */;
    %523 = minimum(%490, %491) /* ty=Tensor[(3, 16, 3), float32] */;
    %524 = %508.1;
    %525 = %516.1;
    %526 = %522.0;
    (%523, %501, %var_2894, %511, meta[relay.Constant][32] /* ty=Tensor[(220), float32] */, meta[relay.Constant][33] /* ty=Tensor[(28), uint64] */, %518, %524, %var_2914, %525, %var_2918, %526)
  };
  %527(%var_2947, %var_2948, %var_2949, %var_2950, %var_2951) /* ty=(Tensor[(3, 16, 3), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(660), float64], Tensor[(220), float32], Tensor[(28), uint64], Tensor[(490), float32], Tensor[(5, 15, 8), float64], Tensor[(600, 1), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(11, 5, 4), float64]) */
}

def @func_8158() -> (Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32]) {
  @func_8156() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32]) */
}

def @func_5710() -> Tensor[(15, 8, 1), float64] {
  %528 = fn () -> Tensor[(15, 8, 1), float64] {
    @func_5034() /* ty=Tensor[(15, 8, 1), float64] */
  };
  %528() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_5511() -> (Tensor[(15, 8, 1), float64],) {
  @func_5509() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_5215() -> (Tensor[(30, 9), float32],) {
  %531 = fn () -> (Tensor[(30, 9), float32],) {
    %529 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
    %530 = %529.2;
    (%530,)
  };
  %531() /* ty=(Tensor[(30, 9), float32],) */
}

def @func_3000(%var_2991: Tensor[(9, 14, 4), int16]) -> Tensor[(9, 14, 4), int16] {
  %532 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 14, 4), int16] */, dtype="int16") /* ty=Tensor[(9, 14, 4), int16] */;
  %533 = shape_of(%var_2991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%var_2991, dtype="int16") /* ty=Tensor[(9, 14, 4), int16] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%534, %535) /* ty=Tensor[(9, 14, 4), int16] */
}

def @func_559(%var_557: Tensor[(10, 11, 2), float32], %var_558: Tensor[(7, 4), uint64]) -> (Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) {
  %555 = fn (%var_507: Tensor[(10, 11, 2), float32], %var_551: Tensor[(7, 4), uint64]) -> (Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) {
    %536 = cast(meta[relay.Constant][35] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
    %537 = reshape(%536, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
    %538 = @func_253(%537) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
    %539 = cast(%var_507, dtype="float32") /* ty=Tensor[(10, 11, 2), float32] */;
    %540 = tan(%539) /* ty=Tensor[(10, 11, 2), float32] */;
    %541 = cast(%var_507, dtype="float32") /* ty=Tensor[(10, 11, 2), float32] */;
    %542 = shape_of(%540, dtype="int32") /* ty=Tensor[(3), int32] */;
    %543 = cast(%540, dtype="float32") /* ty=Tensor[(10, 11, 2), float32] */;
    %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %545 = cast(meta[relay.Constant][36] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %546 = cast(%var_551, dtype="uint64") /* ty=Tensor[(7, 4), uint64] */;
    %547 = cast(meta[relay.Constant][35] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
    %548 = reshape(%545, newshape=[]) /* ty=uint64 */;
    %549 = reshape(%546, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), uint64] */;
    %550 = reshape(%547, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %551 = @func_451(%548, %549, %550) /* ty=(Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
    %552 = %538.0;
    %553 = power(%543, %544) /* ty=Tensor[(10, 11, 2), float32] */;
    %554 = %551.1;
    (%552, meta[relay.Constant][35] /* ty=Tensor[(660), float64] */, %553, %554, meta[relay.Constant][36] /* ty=uint64 */, %var_551)
  };
  %555(%var_557, %var_558) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) */
}

def @func_10684() -> (Tensor[(15, 8, 1), float64],) {
  %556 = @func_4652() /* ty=Tensor[(15, 8, 1), float64] */;
  (%556,)
}

def @func_6747() -> (Tensor[(30, 9), float64],) {
  @func_6745() /* ty=(Tensor[(30, 9), float64],) */
}

def @func_4548(%var_4511: Tensor[(15, 8, 2), float64]) -> (Tensor[(15, 8, 1), float32], Tensor[(15, 8, 2), bool]) {
  %557 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %558 = %557.0;
  %559 = cast(%558, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %560 = cast(%558, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %561 = cast(%var_4511, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
  %562 = atan(%559) /* ty=Tensor[(15, 8, 1), float32] */;
  %563 = logical_or(%560, %561) /* ty=Tensor[(15, 8, 2), bool] */;
  (%562, %563)
}

def @func_5269(%var_5247: Tensor[(15, 8, 9), float64], %var_5259: Tensor[(40), int32]) -> (Tensor[(15, 8, 9), bool], Tensor[(7, 4), uint64], Tensor[(40), int32], Tensor[(660), float64]) {
  %564 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %565 = %564.0;
  %566 = cast(%565, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %567 = cast(%var_5247, dtype="bool") /* ty=Tensor[(15, 8, 9), bool] */;
  %568 = cast(%var_5259, dtype="int32") /* ty=Tensor[(40), int32] */;
  %569 = cast(%565, dtype="int32") /* ty=Tensor[(15, 8, 1), int32] */;
  %570 = cast(meta[relay.Constant][37] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %571 = reshape(%568, newshape=[8, 1, 5]) /* ty=Tensor[(8, 1, 5), int32] */;
  %572 = reshape(%569, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), int32] */;
  %573 = reshape(%570, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %574 = @func_4623(%571, %572, %573) /* ty=(Tensor[(8, 3, 5), int32], Tensor[(7, 4), uint64], Tensor[(3, 504), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(600), float32], Tensor[(15, 4, 9), bool], int16, Tensor[(540), int16]) */;
  %575 = greater(%566, %567) /* ty=Tensor[(15, 8, 9), bool] */;
  %576 = %574.1;
  (%575, %576, %var_5259, meta[relay.Constant][37] /* ty=Tensor[(660), float64] */)
}

def @func_10960() -> (Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(15, 8, 1), float64]) {
  @func_10958() /* ty=(Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(15, 8, 1), float64]) */
}

def @func_11386(%var_11354: Tensor[(490, 1), float32], %var_11355: Tensor[(600), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(490, 1), float32], Tensor[(600), float32], Tensor[(15, 8, 1), float64], Tensor[(756, 2), bool], Tensor[(11, 16, 13), float32], Tensor[(2288), float32]) {
  %577 = @func_10684() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %578 = cast(meta[relay.Constant][38] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %579 = reshape(%578, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
  %580 = @func_357(%579) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
  %581 = @func_8655() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %582 = cast(meta[relay.Constant][39] /* ty=Tensor[(756, 2), float32] */, dtype="float32") /* ty=Tensor[(756, 2), float32] */;
  %583 = cast(meta[relay.Constant][38] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %584 = cast(%var_11354, dtype="float32") /* ty=Tensor[(490, 1), float32] */;
  %585 = cast(%var_11355, dtype="float32") /* ty=Tensor[(600), float32] */;
  %586 = reshape(%582, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), float32] */;
  %587 = reshape(%583, newshape=[1, 660]) /* ty=Tensor[(1, 660), float64] */;
  %588 = reshape(%584, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %589 = reshape(%585, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %590 = @func_2433(%586, %587, %588, %589) /* ty=(Tensor[(12, 9, 14), float32], Tensor[(1, 660), float64], Tensor[(14, 10, ?), float32], Tensor[(330, 2), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(7, 4), uint64], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), float64]) */;
  %591 = %590.0;
  %592 = cast(%591, dtype="bool") /* ty=Tensor[(12, 9, 14), bool] */;
  %593 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(756, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %594 = cast(meta[relay.Constant][39] /* ty=Tensor[(756, 2), float32] */, dtype="bool") /* ty=Tensor[(756, 2), bool] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %596 = cast(meta[relay.Constant][40] /* ty=Tensor[(2288), float32] */, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %597 = reshape(%596, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), float32] */;
  %598 = @func_3169(%597) /* ty=(Tensor[(11, 16, 13), float32],) */;
  %599 = %577.0;
  %600 = %580.0;
  %601 = %581.0;
  %602 = not_equal(%594, %595) /* ty=Tensor[(756, 2), bool] */;
  %603 = %598.0;
  (%599, %600, meta[relay.Constant][38] /* ty=Tensor[(660), float64] */, %var_11354, %var_11355, %601, %602, %603, meta[relay.Constant][40] /* ty=Tensor[(2288), float32] */)
}

def @func_10809() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %607 = fn () -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
    %604 = @func_6944() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %605 = %604.0;
    %606 = @func_9609() /* ty=Tensor[(15, 8, 1), float64] */;
    (%605, %606)
  };
  %607() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */
}

def @func_10754(%var_10751: uint64, %var_10752: Tensor[(14, 2), uint64], %var_10753: Tensor[(660), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(11, 4, 15), float64], uint64, Tensor[(14, 2), uint64], Tensor[(660), float64], Tensor[(30, 9), float32]) {
  @func_10749(%var_10751, %var_10752, %var_10753) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(11, 4, 15), float64], uint64, Tensor[(14, 2), uint64], Tensor[(660), float64], Tensor[(30, 9), float32]) */
}

def @func_5036() -> Tensor[(15, 8, 1), float64] {
  @func_5034() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_8943(%var_8941: Tensor[(1920), float64], %var_8942: Tensor[(490), float32]) -> (Tensor[(15, 8, 16), int32], Tensor[(1920), float64], Tensor[(15, 8, 1), float64], Tensor[(30, 9), bool], Tensor[(11, 4, 15), int8], Tensor[(490), float32], Tensor[(30, 9), float32]) {
  %628 = fn (%var_8915: Tensor[(1920), float64], %var_8935: Tensor[(490), float32]) -> (Tensor[(15, 8, 16), int32], Tensor[(1920), float64], Tensor[(15, 8, 1), float64], Tensor[(30, 9), bool], Tensor[(11, 4, 15), int8], Tensor[(490), float32], Tensor[(30, 9), float32]) {
    %608 = cast(%var_8915, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %609 = reshape(%608, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float64] */;
    %610 = @func_6944() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %611 = @func_5567() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) */;
    %612 = %611.1;
    %613 = cast(meta[relay.Constant][41] /* ty=Tensor[(30, 9), float32] */, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
    %614 = shape_of(%612, dtype="int32") /* ty=Tensor[(2), int32] */;
    %615 = cast(%612, dtype="bool") /* ty=Tensor[(30, 9), bool] */;
    %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %617 = cast(%var_8935, dtype="float32") /* ty=Tensor[(490), float32] */;
    %618 = reshape(%617, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), float32] */;
    %619 = @func_1325(%618) /* ty=(Tensor[(7, 14, 5), float32], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(11, 4, 15), int8], Tensor[(7, 14, 5), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */;
    %620 = cast(meta[relay.Constant][41] /* ty=Tensor[(30, 9), float32] */, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
    %621 = log2(%620) /* ty=Tensor[(30, 9), float64] */;
    %622 = cast(%621, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
    %623 = @func_6598(%609) /* ty=Tensor[(15, 8, 16), int32] */;
    %624 = %610.0;
    %625 = less_equal(%615, %616) /* ty=Tensor[(30, 9), bool] */;
    %626 = %619.3;
    %627 = acosh(%622) /* ty=Tensor[(30, 9), float32] */;
    (%623, %var_8915, %624, %625, %626, %var_8935, %627)
  };
  %628(%var_8941, %var_8942) /* ty=(Tensor[(15, 8, 16), int32], Tensor[(1920), float64], Tensor[(15, 8, 1), float64], Tensor[(30, 9), bool], Tensor[(11, 4, 15), int8], Tensor[(490), float32], Tensor[(30, 9), float32]) */
}

def @func_5913() -> Tensor[(15, 8, 1), float64] {
  %630 = fn () -> Tensor[(15, 8, 1), float64] {
    %629 = @func_5509() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %629.0
  };
  %630() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_6385() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  @func_6383() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */
}

def @func_5487(%var_5463: Tensor[(240), float64], %var_5464: Tensor[(660), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(15, 8, 240), int32]) {
  %631 = cast(%var_5463, dtype="float64") /* ty=Tensor[(240), float64] */;
  %632 = cast(%var_5464, dtype="float64") /* ty=Tensor[(660), float64] */;
  %633 = reshape(%631, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %634 = reshape(%632, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %635 = @func_5423(%633, %634) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 2), bool], Tensor[(4, 60), float64], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
  %636 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
  %637 = %636.0;
  %638 = cast(%var_5463, dtype="int32") /* ty=Tensor[(240), int32] */;
  %639 = cast(%637, dtype="int32") /* ty=Tensor[(15, 8, 1), int32] */;
  %640 = %635.0;
  %641 = right_shift(%638, %639) /* ty=Tensor[(15, 8, 240), int32] */;
  (%640, %var_5464, %641)
}

def @func_9055(%var_9053: Tensor[(660), float64], %var_9054: Tensor[(1920), float64]) -> (Tensor[(30, 9), float32], Tensor[(660), float64], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(15, 8, 16), int32], Tensor[(1920), float64]) {
  %654 = fn (%var_9035: Tensor[(660), float64], %var_9041: Tensor[(1920), float64]) -> (Tensor[(30, 9), float32], Tensor[(660), float64], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(15, 8, 16), int32], Tensor[(1920), float64]) {
    %642 = cast(meta[relay.Constant][42] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %643 = cast(meta[relay.Constant][43] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
    %644 = cast(%var_9035, dtype="float64") /* ty=Tensor[(660), float64] */;
    %645 = reshape(%642, newshape=[]) /* ty=uint64 */;
    %646 = reshape(%643, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), uint64] */;
    %647 = reshape(%644, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %648 = @func_451(%645, %646, %647) /* ty=(Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
    %649 = cast(%var_9041, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %650 = reshape(%649, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float64] */;
    %651 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
    %652 = %648.2;
    %653 = @func_6598(%650) /* ty=Tensor[(15, 8, 16), int32] */;
    (%651, %652, meta[relay.Constant][42] /* ty=uint64 */, meta[relay.Constant][43] /* ty=Tensor[(28), uint64] */, %var_9035, %653, %var_9041)
  };
  %654(%var_9053, %var_9054) /* ty=(Tensor[(30, 9), float32], Tensor[(660), float64], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(15, 8, 16), int32], Tensor[(1920), float64]) */
}

def @func_8105() -> Tensor[(15, 8, 1), float64] {
  @func_8103() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_5022(%var_5000: Tensor[(15, 8, 12), float64]) -> (Tensor[(15, 8, 12), bool], Tensor[(15, 8, 1), float32]) {
  %655 = @func_4889() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %656 = %655.0;
  %657 = cast(%656, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %658 = cast(%var_5000, dtype="bool") /* ty=Tensor[(15, 8, 12), bool] */;
  %659 = cast(%656, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %660 = log10(%659) /* ty=Tensor[(15, 8, 1), float32] */;
  %661 = cast(%660, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %662 = greater(%657, %658) /* ty=Tensor[(15, 8, 12), bool] */;
  %663 = log2(%661) /* ty=Tensor[(15, 8, 1), float32] */;
  (%662, %663)
}

def @func_8550(%var_8548: Tensor[(15, 8, 10), float64]) -> (Tensor[(15, 8, 10), bool], Tensor[(30, 9), float64]) {
  @func_8547(%var_8548) /* ty=(Tensor[(15, 8, 10), bool], Tensor[(30, 9), float64]) */
}

def @func_8044(%var_8043: Tensor[(14, 2), uint64]) -> (Tensor[(14, 2), uint64], Tensor[(10, 66), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 28), bool], Tensor[(15, 8, 660), uint64], uint64, Tensor[(220), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 13, 2), uint32], Tensor[(65, 6), uint32]) {
  %701 = fn (%var_7939: Tensor[(14, 2), uint64]) -> (Tensor[(14, 2), uint64], Tensor[(10, 66), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 28), bool], Tensor[(15, 8, 660), uint64], uint64, Tensor[(220), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 13, 2), uint32], Tensor[(65, 6), uint32]) {
    %664 = cast(%var_7939, dtype="uint64") /* ty=Tensor[(14, 2), uint64] */;
    %665 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
    %666 = reshape(%664, newshape=[1, 28]) /* ty=Tensor[(1, 28), uint64] */;
    %667 = reshape(%665, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %668 = @func_7370(%666, %667) /* ty=(Tensor[(28), uint64], Tensor[(4, 48), float64], Tensor[(220), float32], Tensor[(1, 28), uint64], Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float32]) */;
    %669 = %668.3;
    %670 = @func_6785() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) */;
    %671 = %670.0;
    %672 = cast(%669, dtype="float32") /* ty=Tensor[(1, 28), float32] */;
    %673 = cast(%671, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
    %674 = maximum(%672, %673) /* ty=Tensor[(15, 8, 28), float32] */;
    %675 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 8, 28), float32] */, dtype="bool") /* ty=Tensor[(15, 8, 28), bool] */;
    %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
    %677 = cast(%674, dtype="bool") /* ty=Tensor[(15, 8, 28), bool] */;
    %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %679 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
    %680 = reshape(%679, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %681 = @func_6058(%680) /* ty=(Tensor[(30, 9), float32], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
    %682 = %681.2;
    %683 = @func_4954() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %684 = %683.0;
    %685 = cast(%682, dtype="uint64") /* ty=Tensor[(660), uint64] */;
    %686 = cast(%684, dtype="uint64") /* ty=Tensor[(15, 8, 1), uint64] */;
    %687 = cast(meta[relay.Constant][46] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
    %688 = cast(%var_7939, dtype="uint64") /* ty=Tensor[(14, 2), uint64] */;
    %689 = reshape(%687, newshape=[10, 11, 2]) /* ty=Tensor[(10, 11, 2), float32] */;
    %690 = reshape(%688, newshape=[7, 4]) /* ty=Tensor[(7, 4), uint64] */;
    %691 = @func_556(%689, %690) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(10, 11, 2), float32], Tensor[(11, 4, 15), float64], uint64, Tensor[(7, 4), uint64]) */;
    %692 = cast(meta[relay.Constant][47] /* ty=Tensor[(65, 6), uint32] */, dtype="uint32") /* ty=Tensor[(65, 6), uint32] */;
    %693 = reshape(%692, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint32] */;
    %694 = @func_6317(%693) /* ty=(Tensor[(15, 13, 2), uint32],) */;
    %695 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
    %696 = equal(%677, %678) /* ty=Tensor[(15, 8, 28), bool] */;
    %697 = bitwise_and(%685, %686) /* ty=Tensor[(15, 8, 660), uint64] */;
    %698 = %691.4;
    %699 = @func_6867() /* ty=Tensor[(15, 8, 1), float64] */;
    %700 = %694.0;
    (%var_7939, meta[relay.Constant][44] /* ty=Tensor[(10, 66), float64] */, %695, %696, %697, %698, meta[relay.Constant][46] /* ty=Tensor[(220), float32] */, %699, %700, meta[relay.Constant][47] /* ty=Tensor[(65, 6), uint32] */)
  };
  %701(%var_8043) /* ty=(Tensor[(14, 2), uint64], Tensor[(10, 66), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 28), bool], Tensor[(15, 8, 660), uint64], uint64, Tensor[(220), float32], Tensor[(15, 8, 1), float64], Tensor[(15, 13, 2), uint32], Tensor[(65, 6), uint32]) */
}

def @func_2484(%var_2478: Tensor[(2, 14, 10), uint16], %var_2479: uint64, %var_2480: Tensor[(28), uint64], %var_2481: Tensor[(660), float64], %var_2482: Tensor[(448), float64], %var_2483: Tensor[(600), float32]) -> (Tensor[(2, 14, 10), uint16], Tensor[(7, 1, 4), bool], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(220), float32], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), int8]) {
  %725 = fn (%var_2457: Tensor[(2, 14, 10), uint16], %var_2464: uint64, %var_2465: Tensor[(28), uint64], %var_2466: Tensor[(660), float64], %var_2469: Tensor[(448), float64], %var_2470: Tensor[(600), float32]) -> (Tensor[(2, 14, 10), uint16], Tensor[(7, 1, 4), bool], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(220), float32], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), int8]) {
    %702 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 14, 10), uint16] */, dtype="uint16") /* ty=Tensor[(2, 14, 10), uint16] */;
    %703 = shape_of(%var_2457, dtype="int32") /* ty=Tensor[(3), int32] */;
    %704 = cast(%var_2457, dtype="uint16") /* ty=Tensor[(2, 14, 10), uint16] */;
    %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %706 = cast(%var_2464, dtype="uint64") /* ty=uint64 */;
    %707 = cast(%var_2465, dtype="uint64") /* ty=Tensor[(28), uint64] */;
    %708 = cast(%var_2466, dtype="float64") /* ty=Tensor[(660), float64] */;
    %709 = reshape(%706, newshape=[]) /* ty=uint64 */;
    %710 = reshape(%707, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), uint64] */;
    %711 = reshape(%708, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %712 = @func_451(%709, %710, %711) /* ty=(Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
    %713 = cast(%var_2469, dtype="float64") /* ty=Tensor[(448), float64] */;
    %714 = cast(%var_2470, dtype="float32") /* ty=Tensor[(600), float32] */;
    %715 = reshape(%713, newshape=[2, 16, 14]) /* ty=Tensor[(2, 16, 14), float64] */;
    %716 = reshape(%714, newshape=[60, 10]) /* ty=Tensor[(60, 10), float32] */;
    %717 = @func_1948(%715, %716) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(220), float32], Tensor[(7, 4), uint64], Tensor[(5, 15, 8), float32], Tensor[(60, 10), float32], Tensor[(2, 16, 14), float32]) */;
    %718 = cast(%var_2466, dtype="float64") /* ty=Tensor[(660), float64] */;
    %719 = reshape(%718, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
    %720 = @func_357(%719) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
    %721 = multiply(%704, %705) /* ty=Tensor[(2, 14, 10), uint16] */;
    %722 = %712.0;
    %723 = %717.1;
    %724 = %720.5;
    (%721, %722, %var_2464, %var_2465, %var_2466, %723, %var_2469, %var_2470, %724)
  };
  %725(%var_2478, %var_2479, %var_2480, %var_2481, %var_2482, %var_2483) /* ty=(Tensor[(2, 14, 10), uint16], Tensor[(7, 1, 4), bool], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(220), float32], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), int8]) */
}

def @func_6852() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  @func_6850() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */
}

def @func_4751(%var_4749: Tensor[(5, 44), float32], %var_4750: Tensor[(5, 44), float32]) -> (Tensor[(15, 8, 1), float64], uint64, Tensor[(28), uint64], Tensor[(5, 44), float32]) {
  @func_4747(%var_4749, %var_4750) /* ty=(Tensor[(15, 8, 1), float64], uint64, Tensor[(28), uint64], Tensor[(5, 44), float32]) */
}

def @func_8655() -> (Tensor[(15, 8, 1), float64],) {
  %726 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %727 = %726.0;
  (%727,)
}

def @func_8769() -> (Tensor[(15, 8, 1), float64],) {
  %729 = fn () -> (Tensor[(15, 8, 1), float64],) {
    %728 = @func_6867() /* ty=Tensor[(15, 8, 1), float64] */;
    (%728,)
  };
  %729() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_9352() -> (Tensor[(9, 10, 11), float64],) {
  @func_9350() /* ty=(Tensor[(9, 10, 11), float64],) */
}

def @func_357(%var_315: Tensor[(330, 2), float64]) -> (Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) {
  %730 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 10, 1), int64] */, dtype="int64") /* ty=Tensor[(14, 10, 1), int64] */;
  %731 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(14, 10, 1), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 10, 1), int64] */, dtype="int64") /* ty=Tensor[(14, 10, 1), int64] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %734 = cast(meta[relay.Constant][51] /* ty=Tensor[(330, 2), float64] */, dtype="float64") /* ty=Tensor[(330, 2), float64] */;
  %735 = reshape(%734, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %736 = @func_253(%735) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %737 = cast(%var_315, dtype="float32") /* ty=Tensor[(330, 2), float32] */;
  %738 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(330, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %739 = cast(meta[relay.Constant][51] /* ty=Tensor[(330, 2), float64] */, dtype="float32") /* ty=Tensor[(330, 2), float32] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %741 = cast(%var_315, dtype="float64") /* ty=Tensor[(330, 2), float64] */;
  %742 = reshape(%741, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %743 = @func_253(%742) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %744 = cast(%var_315, dtype="float64") /* ty=Tensor[(330, 2), float64] */;
  %745 = %736.1;
  %746 = cast(%745, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %747 = reshape(%746, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %748 = @func_253(%747) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %749 = multiply(%732, %733) /* ty=Tensor[(14, 10, ?), int64] */;
  %750 = minimum(%739, %740) /* ty=Tensor[(330, 2), float32] */;
  %751 = %743.1;
  %752 = sigmoid(%744) /* ty=Tensor[(330, 2), float64] */;
  %753 = %748.1;
  (%749, %745, %750, %751, %752, %753)
}

def @func_9609() -> Tensor[(15, 8, 1), float64] {
  %754 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %754.0
}

def @func_6320(%var_6318: Tensor[(15, 13, 2), uint32]) -> (Tensor[(15, 13, 2), uint32],) {
  @func_6317(%var_6318) /* ty=(Tensor[(15, 13, 2), uint32],) */
}

def @func_10131() -> Tensor[(15, 8, 1), float64] {
  %755 = @func_5567() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) */;
  %755.0
}

def @func_6394(%var_6392: Tensor[(4, 12, 5), int32]) -> Tensor[(4, 12, 5), bool] {
  @func_6391(%var_6392) /* ty=Tensor[(4, 12, 5), bool] */
}

def @func_4668() -> (Tensor[(15, 8, 1), float64],) {
  %756 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %757 = %756.0;
  (%757,)
}

def @func_4845(%var_4843: Tensor[(660), float64], %var_4844: uint64) -> (Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(11, 4, 15), int8], Tensor[(660), float64], Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(280), uint16], uint64, Tensor[(28), uint64], Tensor[(448), float64], Tensor[(60, 10), float32], Tensor[(5, 198), float64]) {
  %791 = fn (%var_4790: Tensor[(660), float64], %var_4823: uint64) -> (Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(11, 4, 15), int8], Tensor[(660), float64], Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(280), uint16], uint64, Tensor[(28), uint64], Tensor[(448), float64], Tensor[(60, 10), float32], Tensor[(5, 198), float64]) {
    %758 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %759 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 198), float64] */, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
    %760 = reshape(%759, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float64] */;
    %761 = @func_2033(%760) /* ty=(Tensor[(9, 10, 11), float64],) */;
    %762 = cast(%var_4790, dtype="float64") /* ty=Tensor[(660), float64] */;
    %763 = reshape(%762, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
    %764 = @func_357(%763) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
    %765 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %766 = cast(meta[relay.Constant][53] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
    %767 = cast(%var_4823, dtype="uint64") /* ty=uint64 */;
    %768 = cast(meta[relay.Constant][54] /* ty=Tensor[(28), uint64] */, dtype="uint64") /* ty=Tensor[(28), uint64] */;
    %769 = %764.1;
    %770 = cast(%769, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
    %771 = cast(meta[relay.Constant][55] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %772 = cast(meta[relay.Constant][56] /* ty=Tensor[(60, 10), float32] */, dtype="float32") /* ty=Tensor[(60, 10), float32] */;
    %773 = reshape(%766, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), uint16] */;
    %774 = reshape(%767, newshape=[]) /* ty=uint64 */;
    %775 = reshape(%768, newshape=[28]) /* ty=Tensor[(28), uint64] */;
    %776 = reshape(%770, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %777 = reshape(%771, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %778 = reshape(%772, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %779 = @func_2477(%773, %774, %775, %776, %777, %778) /* ty=(Tensor[(2, 14, 10), uint16], Tensor[(7, 1, 4), bool], uint64, Tensor[(28), uint64], Tensor[(660), float64], Tensor[(220), float32], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), int8]) */;
    %780 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 198), float64] */, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
    %781 = cos(%780) /* ty=Tensor[(5, 198), float64] */;
    %782 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 198), float64] */, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
    %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(2), int32] */;
    %784 = cast(%781, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
    %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %786 = %758.0;
    %787 = %761.0;
    %788 = %765.0;
    %789 = %779.4;
    %790 = floor_divide(%784, %785) /* ty=Tensor[(5, 198), float64] */;
    (%786, %787, %769, %var_4790, %788, %789, meta[relay.Constant][53] /* ty=Tensor[(280), uint16] */, %var_4823, meta[relay.Constant][54] /* ty=Tensor[(28), uint64] */, meta[relay.Constant][55] /* ty=Tensor[(448), float64] */, meta[relay.Constant][56] /* ty=Tensor[(60, 10), float32] */, %790)
  };
  %791(%var_4843, %var_4844) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(11, 4, 15), int8], Tensor[(660), float64], Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(280), uint16], uint64, Tensor[(28), uint64], Tensor[(448), float64], Tensor[(60, 10), float32], Tensor[(5, 198), float64]) */
}

def @func_9125(%var_9124: Tensor[(220), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(220), float32]) {
  %800 = fn (%var_9120: Tensor[(220), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(220), float32]) {
    %792 = @func_8481() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %793 = cast(%var_9120, dtype="float32") /* ty=Tensor[(220), float32] */;
    %794 = cast(%var_9120, dtype="float32") /* ty=Tensor[(220), float32] */;
    %795 = reshape(%793, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
    %796 = reshape(%794, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
    %797 = @func_4747(%795, %796) /* ty=(Tensor[(15, 8, 1), float64], uint64, Tensor[(28), uint64], Tensor[(5, 44), float32]) */;
    %798 = %792.0;
    %799 = %797.0;
    (%798, %799, %var_9120)
  };
  %800(%var_9124) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64], Tensor[(220), float32]) */
}

def @func_10508(%var_10506: bool, %var_10507: Tensor[(1920), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(8, 2, 2), float64], Tensor[(32), float64], Tensor[(6, 9, 16), bool], bool, Tensor[(864), bool], Tensor[(11, 4, 15), int8], Tensor[(1920), float64], Tensor[(490), float32], Tensor[(15, 8, 1), float64]) {
  %819 = fn (%var_10446: bool, %var_10482: Tensor[(1920), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(8, 2, 2), float64], Tensor[(32), float64], Tensor[(6, 9, 16), bool], bool, Tensor[(864), bool], Tensor[(11, 4, 15), int8], Tensor[(1920), float64], Tensor[(490), float32], Tensor[(15, 8, 1), float64]) {
    %801 = cast(meta[relay.Constant][57] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
    %802 = reshape(%801, newshape=[8, 2, 2]) /* ty=Tensor[(8, 2, 2), float64] */;
    %803 = cast(%var_10446, dtype="bool") /* ty=bool */;
    %804 = cast(meta[relay.Constant][58] /* ty=Tensor[(864), bool] */, dtype="bool") /* ty=Tensor[(864), bool] */;
    %805 = reshape(%803, newshape=[]) /* ty=bool */;
    %806 = reshape(%804, newshape=[6, 9, 16]) /* ty=Tensor[(6, 9, 16), bool] */;
    %807 = @func_8446(%805, %806) /* ty=(Tensor[(6, 9, 16), bool],) */;
    %808 = cast(%var_10482, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %809 = cast(meta[relay.Constant][59] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
    %810 = reshape(%808, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %811 = reshape(%809, newshape=[490]) /* ty=Tensor[(490), float32] */;
    %812 = @func_8940(%810, %811) /* ty=(Tensor[(15, 8, 16), int32], Tensor[(1920), float64], Tensor[(15, 8, 1), float64], Tensor[(30, 9), bool], Tensor[(11, 4, 15), int8], Tensor[(490), float32], Tensor[(30, 9), float32]) */;
    %813 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
    %814 = @func_8777() /* ty=Tensor[(15, 8, 1), float64] */;
    %815 = @func_5835(%802) /* ty=Tensor[(8, 2, 2), float64] */;
    %816 = %807.0;
    %817 = %812.4;
    %818 = %813.0;
    (%814, %815, meta[relay.Constant][57] /* ty=Tensor[(32), float64] */, %816, %var_10446, meta[relay.Constant][58] /* ty=Tensor[(864), bool] */, %817, %var_10482, meta[relay.Constant][59] /* ty=Tensor[(490), float32] */, %818)
  };
  %819(%var_10506, %var_10507) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(8, 2, 2), float64], Tensor[(32), float64], Tensor[(6, 9, 16), bool], bool, Tensor[(864), bool], Tensor[(11, 4, 15), int8], Tensor[(1920), float64], Tensor[(490), float32], Tensor[(15, 8, 1), float64]) */
}

def @func_11325(%var_11292: Tensor[(1512), float32], %var_11293: Tensor[(660), float64], %var_11295: Tensor[(600), float32]) -> (Tensor[(1512), float32], Tensor[(660), float64], Tensor[(490, 1), float32], Tensor[(600), float32], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(15, 8, 660), float64]) {
  %820 = cast(meta[relay.Constant][61] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %821 = reshape(%820, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %822 = cast(%var_11292, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %823 = cast(%var_11293, dtype="float64") /* ty=Tensor[(660), float64] */;
  %824 = cast(meta[relay.Constant][60] /* ty=Tensor[(490, 1), float32] */, dtype="float32") /* ty=Tensor[(490, 1), float32] */;
  %825 = cast(%var_11295, dtype="float32") /* ty=Tensor[(600), float32] */;
  %826 = reshape(%822, newshape=[1512]) /* ty=Tensor[(1512), float32] */;
  %827 = reshape(%823, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %828 = reshape(%824, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %829 = reshape(%825, newshape=[60, 10]) /* ty=Tensor[(60, 10), float32] */;
  %830 = @func_9416(%826, %827, %828, %829) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(1, 660), float64], Tensor[(1512), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(60, 10), float32]) */;
  %831 = %830.1;
  %832 = @func_7039() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %833 = %832.0;
  %834 = cast(%831, dtype="float64") /* ty=Tensor[(1, 660), float64] */;
  %835 = cast(%833, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
  %836 = @func_3731(%821) /* ty=Tensor[(3, 10, 9), float32] */;
  %837 = power(%834, %835) /* ty=Tensor[(15, 8, 660), float64] */;
  (%var_11292, %var_11293, meta[relay.Constant][60] /* ty=Tensor[(490, 1), float32] */, %var_11295, %836, meta[relay.Constant][61] /* ty=Tensor[(270), float32] */, %837)
}

def @func_7424() -> (Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
  @func_7422() /* ty=(Tensor[(11, 4, 15), float64], Tensor[(660), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) */
}

def @func_10032() -> (Tensor[(30, 9), float32],) {
  %840 = fn () -> (Tensor[(30, 9), float32],) {
    %838 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
    %839 = %838.0;
    (%839,)
  };
  %840() /* ty=(Tensor[(30, 9), float32],) */
}

def @func_5094() -> Tensor[(15, 8, 1), float64] {
  %842 = fn () -> Tensor[(15, 8, 1), float64] {
    %841 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %841.0
  };
  %842() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_10863() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
  @func_10861() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) */
}

def @func_6317(%var_6301: Tensor[(15, 13, 2), uint32]) -> (Tensor[(15, 13, 2), uint32],) {
  %843 = cast(meta[relay.Constant][62] /* ty=Tensor[(15, 13, 2), uint32] */, dtype="uint32") /* ty=Tensor[(15, 13, 2), uint32] */;
  %844 = shape_of(%var_6301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%var_6301, dtype="uint32") /* ty=Tensor[(15, 13, 2), uint32] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %847 = left_shift(%845, %846) /* ty=Tensor[(15, 13, 2), uint32] */;
  (%847,)
}

def @func_10749(%var_10713: uint64, %var_10714: Tensor[(14, 2), uint64], %var_10715: Tensor[(660), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(11, 4, 15), float64], uint64, Tensor[(14, 2), uint64], Tensor[(660), float64], Tensor[(30, 9), float32]) {
  %848 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %849 = cast(%var_10713, dtype="uint64") /* ty=uint64 */;
  %850 = cast(%var_10714, dtype="uint64") /* ty=Tensor[(14, 2), uint64] */;
  %851 = cast(%var_10715, dtype="float64") /* ty=Tensor[(660), float64] */;
  %852 = reshape(%849, newshape=[]) /* ty=uint64 */;
  %853 = reshape(%850, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), uint64] */;
  %854 = reshape(%851, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %855 = @func_451(%852, %853, %854) /* ty=(Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */;
  %856 = %848.0;
  %857 = %855.1;
  %858 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
  (%856, %857, %var_10713, %var_10714, %var_10715, %858)
}

def @func_5025(%var_5023: Tensor[(15, 8, 12), float64]) -> (Tensor[(15, 8, 12), bool], Tensor[(15, 8, 1), float32]) {
  @func_5022(%var_5023) /* ty=(Tensor[(15, 8, 12), bool], Tensor[(15, 8, 1), float32]) */
}

def @func_6600(%var_6599: Tensor[(15, 8, 16), float64]) -> Tensor[(15, 8, 16), int32] {
  %863 = fn (%var_6592: Tensor[(15, 8, 16), float64]) -> Tensor[(15, 8, 16), int32] {
    %859 = @func_4564() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) */;
    %860 = %859.0;
    %861 = cast(%860, dtype="int32") /* ty=Tensor[(15, 8, 1), int32] */;
    %862 = cast(%var_6592, dtype="int32") /* ty=Tensor[(15, 8, 16), int32] */;
    subtract(%861, %862) /* ty=Tensor[(15, 8, 16), int32] */
  };
  %863(%var_6599) /* ty=Tensor[(15, 8, 16), int32] */
}

def @func_4670() -> (Tensor[(15, 8, 1), float64],) {
  @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_5509() -> (Tensor[(15, 8, 1), float64],) {
  %864 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %865 = %864.0;
  (%865,)
}

def @func_9391() -> (Tensor[(15, 8, 1), float64],) {
  @func_9389() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_3171(%var_3170: Tensor[(11, 16, 13), float32]) -> (Tensor[(11, 16, 13), float32],) {
  %868 = fn (%var_3133: Tensor[(11, 16, 13), float32]) -> (Tensor[(11, 16, 13), float32],) {
    %866 = cast(%var_3133, dtype="float32") /* ty=Tensor[(11, 16, 13), float32] */;
    %867 = atanh(%866) /* ty=Tensor[(11, 16, 13), float32] */;
    (%867,)
  };
  %868(%var_3170) /* ty=(Tensor[(11, 16, 13), float32],) */
}

def @func_5426(%var_5424: Tensor[(4, 60), float64], %var_5425: Tensor[(660), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 2), bool], Tensor[(4, 60), float64], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) {
  %878 = fn (%var_5414: Tensor[(4, 60), float64], %var_5421: Tensor[(660), float64]) -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 2), bool], Tensor[(4, 60), float64], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) {
    %869 = cast(%var_5414, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
    %870 = reshape(%869, newshape=[15, 8, 2]) /* ty=Tensor[(15, 8, 2), float64] */;
    %871 = @func_4548(%870) /* ty=(Tensor[(15, 8, 1), float32], Tensor[(15, 8, 2), bool]) */;
    %872 = cast(%var_5421, dtype="float64") /* ty=Tensor[(660), float64] */;
    %873 = reshape(%872, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
    %874 = @func_253(%873) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
    %875 = @func_4652() /* ty=Tensor[(15, 8, 1), float64] */;
    %876 = %871.1;
    %877 = %874.0;
    (%875, %876, %var_5414, %877, %var_5421)
  };
  %878(%var_5424, %var_5425) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 2), bool], Tensor[(4, 60), float64], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */
}

def @func_9926(%var_9924: Tensor[(120), int32], %var_9925: Tensor[(660), float64]) -> (Tensor[(9, 10, 11), float64], Tensor[(120), int32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64], Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
  %894 = fn (%var_9862: Tensor[(120), int32], %var_9863: Tensor[(660), float64]) -> (Tensor[(9, 10, 11), float64], Tensor[(120), int32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64], Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) {
    %879 = @func_9350() /* ty=(Tensor[(9, 10, 11), float64],) */;
    %880 = cast(meta[relay.Constant][63] /* ty=Tensor[(40), int32] */, dtype="int32") /* ty=Tensor[(40), int32] */;
    %881 = cast(%var_9862, dtype="int32") /* ty=Tensor[(120), int32] */;
    %882 = cast(%var_9863, dtype="float64") /* ty=Tensor[(660), float64] */;
    %883 = reshape(%880, newshape=[40]) /* ty=Tensor[(40), int32] */;
    %884 = reshape(%881, newshape=[120]) /* ty=Tensor[(120), int32] */;
    %885 = reshape(%882, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %886 = @func_6181(%883, %884, %885) /* ty=(Tensor[(30, 9), float32], Tensor[(3, 504), float32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64]) */;
    %887 = @func_7039() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %888 = @func_6745() /* ty=(Tensor[(30, 9), float64],) */;
    %889 = %879.0;
    %890 = %886.3;
    %891 = %887.0;
    %892 = %888.0;
    %893 = @func_5912() /* ty=Tensor[(15, 8, 1), float64] */;
    (%889, %890, meta[relay.Constant][63] /* ty=Tensor[(40), int32] */, %var_9862, %var_9863, %891, %892, %893)
  };
  %894(%var_9924, %var_9925) /* ty=(Tensor[(9, 10, 11), float64], Tensor[(120), int32], Tensor[(40), int32], Tensor[(120), int32], Tensor[(660), float64], Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(15, 8, 1), float64]) */
}

def @func_6787() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) {
  @func_6785() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) */
}

def @func_10058() -> (Tensor[(15, 8, 1), float64],) {
  @func_10056() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_10652(%var_10650: Tensor[(6, 1, 16), float64], %var_10651: Tensor[(6, 6, 16), float64]) -> (Tensor[(6, 6, 16), uint8], Tensor[(15, 8, 1), float64]) {
  %902 = fn (%var_10617: Tensor[(6, 1, 16), float64], %var_10630: Tensor[(6, 6, 16), float64]) -> (Tensor[(6, 6, 16), uint8], Tensor[(15, 8, 1), float64]) {
    %895 = cast(%var_10617, dtype="float64") /* ty=Tensor[(6, 1, 16), float64] */;
    %896 = tan(%895) /* ty=Tensor[(6, 1, 16), float64] */;
    %897 = cast(%896, dtype="uint8") /* ty=Tensor[(6, 1, 16), uint8] */;
    %898 = cast(%var_10630, dtype="uint8") /* ty=Tensor[(6, 6, 16), uint8] */;
    %899 = @func_8888() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float32]) */;
    %900 = subtract(%897, %898) /* ty=Tensor[(6, 6, 16), uint8] */;
    %901 = %899.0;
    (%900, %901)
  };
  %902(%var_10650, %var_10651) /* ty=(Tensor[(6, 6, 16), uint8], Tensor[(15, 8, 1), float64]) */
}

def @func_2439(%var_2435: Tensor[(12, 9, 14), float32], %var_2436: Tensor[(1, 660), float64], %var_2437: Tensor[(490), float32], %var_2438: Tensor[(600), float32]) -> (Tensor[(12, 9, 14), float32], Tensor[(1, 660), float64], Tensor[(14, 10, ?), float32], Tensor[(330, 2), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(7, 4), uint64], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), float64]) {
  @func_2433(%var_2435, %var_2436, %var_2437, %var_2438) /* ty=(Tensor[(12, 9, 14), float32], Tensor[(1, 660), float64], Tensor[(14, 10, ?), float32], Tensor[(330, 2), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(7, 4), uint64], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), float64]) */
}

def @func_9658() -> Tensor[(15, 8, 1), float64] {
  @func_9656() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_253(%var_242: Tensor[(11, 4, 15), float64]) -> (Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) {
  %903 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %904 = acosh(%903) /* ty=Tensor[(11, 4, 15), float64] */;
  %905 = cast(%var_242, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %906 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %907 = cast(%904, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %909 = cast(meta[relay.Constant][65] /* ty=Tensor[(11, 4, 15), float64] */, dtype="int8") /* ty=Tensor[(11, 4, 15), int8] */;
  %910 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(%904, dtype="int8") /* ty=Tensor[(11, 4, 15), int8] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %913 = power(%907, %908) /* ty=Tensor[(11, 4, 15), float64] */;
  %914 = bitwise_and(%911, %912) /* ty=Tensor[(11, 4, 15), int8] */;
  (%913, %914)
}

def @func_7864() -> Tensor[(15, 8, 1), float64] {
  @func_7862() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_721(%var_719: Tensor[(5, 15, 8), float32]) -> (Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) {
  @func_718(%var_719) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) */
}

def @func_6250(%var_6248: Tensor[(600), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) {
  @func_6247(%var_6248) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) */
}

def @func_4627(%var_4624: Tensor[(8, 1, 5), int32], %var_4625: Tensor[(8, 3, 5), int32], %var_4626: Tensor[(660), float64]) -> (Tensor[(8, 3, 5), int32], Tensor[(7, 4), uint64], Tensor[(3, 504), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(600), float32], Tensor[(15, 4, 9), bool], int16, Tensor[(540), int16]) {
  %934 = fn (%var_4572: Tensor[(8, 1, 5), int32], %var_4573: Tensor[(8, 3, 5), int32], %var_4591: Tensor[(660), float64]) -> (Tensor[(8, 3, 5), int32], Tensor[(7, 4), uint64], Tensor[(3, 504), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(600), float32], Tensor[(15, 4, 9), bool], int16, Tensor[(540), int16]) {
    %915 = cast(%var_4572, dtype="int32") /* ty=Tensor[(8, 1, 5), int32] */;
    %916 = cast(%var_4573, dtype="int32") /* ty=Tensor[(8, 3, 5), int32] */;
    %917 = cast(meta[relay.Constant][66] /* ty=Tensor[(3, 504), float32] */, dtype="float32") /* ty=Tensor[(3, 504), float32] */;
    %918 = cast(%var_4591, dtype="float64") /* ty=Tensor[(660), float64] */;
    %919 = cast(meta[relay.Constant][67] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
    %920 = cast(meta[relay.Constant][68] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
    %921 = reshape(%917, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), float32] */;
    %922 = reshape(%918, newshape=[1, 660]) /* ty=Tensor[(1, 660), float64] */;
    %923 = reshape(%919, newshape=[490]) /* ty=Tensor[(490), float32] */;
    %924 = reshape(%920, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %925 = @func_2433(%921, %922, %923, %924) /* ty=(Tensor[(12, 9, 14), float32], Tensor[(1, 660), float64], Tensor[(14, 10, ?), float32], Tensor[(330, 2), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(7, 4), uint64], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), float64]) */;
    %926 = cast(meta[relay.Constant][69] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %927 = cast(meta[relay.Constant][70] /* ty=Tensor[(540), int16] */, dtype="int16") /* ty=Tensor[(540), int16] */;
    %928 = reshape(%926, newshape=[]) /* ty=int16 */;
    %929 = reshape(%927, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), int16] */;
    %930 = @func_4188(%928, %929) /* ty=(Tensor[(15, 4, 9), bool], Tensor[(3, 10, 9), float32], Tensor[(270), float32]) */;
    %931 = right_shift(%915, %916) /* ty=Tensor[(8, 3, 5), int32] */;
    %932 = %925.6;
    %933 = %930.0;
    (%931, %932, meta[relay.Constant][66] /* ty=Tensor[(3, 504), float32] */, %var_4591, meta[relay.Constant][67] /* ty=Tensor[(490), float32] */, meta[relay.Constant][68] /* ty=Tensor[(600), float32] */, %933, meta[relay.Constant][69] /* ty=int16 */, meta[relay.Constant][70] /* ty=Tensor[(540), int16] */)
  };
  %934(%var_4624, %var_4625, %var_4626) /* ty=(Tensor[(8, 3, 5), int32], Tensor[(7, 4), uint64], Tensor[(3, 504), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(600), float32], Tensor[(15, 4, 9), bool], int16, Tensor[(540), int16]) */
}

def @func_8971() -> (Tensor[(4, 16, 14), float32], uint64, Tensor[(110, 2), float32]) {
  %943 = fn () -> (Tensor[(4, 16, 14), float32], uint64, Tensor[(110, 2), float32]) {
    %935 = cast(meta[relay.Constant][71] /* ty=Tensor[(4, 16, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 16, 14), float32] */;
    %936 = cast(meta[relay.Constant][72] /* ty=Tensor[(110, 2), float32] */, dtype="float32") /* ty=Tensor[(110, 2), float32] */;
    %937 = cast(meta[relay.Constant][72] /* ty=Tensor[(110, 2), float32] */, dtype="float32") /* ty=Tensor[(110, 2), float32] */;
    %938 = reshape(%936, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
    %939 = reshape(%937, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
    %940 = @func_4747(%938, %939) /* ty=(Tensor[(15, 8, 1), float64], uint64, Tensor[(28), uint64], Tensor[(5, 44), float32]) */;
    %941 = sin(%935) /* ty=Tensor[(4, 16, 14), float32] */;
    %942 = %940.1;
    (%941, %942, meta[relay.Constant][72] /* ty=Tensor[(110, 2), float32] */)
  };
  %943() /* ty=(Tensor[(4, 16, 14), float32], uint64, Tensor[(110, 2), float32]) */
}

def @func_11125() -> (Tensor[(15, 8, 1), float64], Tensor[(9, 13, 2), float64], Tensor[(234), float64]) {
  %949 = fn () -> (Tensor[(15, 8, 1), float64], Tensor[(9, 13, 2), float64], Tensor[(234), float64]) {
    %944 = @func_8156() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32]) */;
    %945 = cast(meta[relay.Constant][73] /* ty=Tensor[(234), float64] */, dtype="float64") /* ty=Tensor[(234), float64] */;
    %946 = reshape(%945, newshape=[9, 13, 2]) /* ty=Tensor[(9, 13, 2), float64] */;
    %947 = %944.0;
    %948 = @func_9469(%946) /* ty=Tensor[(9, 13, 2), float64] */;
    (%947, %948, meta[relay.Constant][73] /* ty=Tensor[(234), float64] */)
  };
  %949() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 13, 2), float64], Tensor[(234), float64]) */
}

def @func_4564() -> (Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(30, 9), float32]) {
  %950 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %951 = cast(meta[relay.Constant][74] /* ty=Tensor[(30, 9), float32] */, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %952 = reshape(%951, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %953 = %950.0;
  %954 = @func_3731(%952) /* ty=Tensor[(3, 10, 9), float32] */;
  (%953, %954, meta[relay.Constant][74] /* ty=Tensor[(30, 9), float32] */)
}

def @func_10056() -> (Tensor[(15, 8, 1), float64],) {
  %955 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %956 = %955.0;
  (%956,)
}

def @func_6383() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %957 = @func_6324() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %958 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %959 = %957.0;
  %960 = %958.0;
  (%959, %960)
}

def @func_11175() -> Tensor[(15, 8, 1), float64] {
  %961 = @func_6383() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %961.1
}

def @func_6154() -> Tensor[(30, 9), float32] {
  %962 = fn () -> Tensor[(30, 9), float32] {
    @func_5360() /* ty=Tensor[(30, 9), float32] */
  };
  %962() /* ty=Tensor[(30, 9), float32] */
}

def @func_8103() -> Tensor[(15, 8, 1), float64] {
  %963 = @func_5567() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32]) */;
  %963.0
}

def @func_4954() -> (Tensor[(15, 8, 1), float64],) {
  %964 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %965 = %964.0;
  (%965,)
}

def @func_6247(%var_6242: Tensor[(600), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(5, 15, 8), float32], Tensor[(600), float32]) {
  %966 = @func_4432() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %967 = cast(meta[relay.Constant][75] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %968 = reshape(%967, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float32] */;
  %969 = cast(%var_6242, dtype="float32") /* ty=Tensor[(600), float32] */;
  %970 = reshape(%969, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %971 = @func_718(%970) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(5, 15, 8), float64]) */;
  %972 = %966.0;
  %973 = @func_3731(%968) /* ty=Tensor[(3, 10, 9), float32] */;
  %974 = %971.0;
  (%972, %973, meta[relay.Constant][75] /* ty=Tensor[(270), float32] */, %974, %var_6242)
}

def @func_6526(%var_6525: Tensor[(30, 9), float32]) -> (Tensor[(30, 9), float32], Tensor[(30, 9), float64]) {
  %987 = fn (%var_6496: Tensor[(30, 9), float32]) -> (Tensor[(30, 9), float32], Tensor[(30, 9), float64]) {
    %975 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
    %976 = %975.0;
    %977 = cast(%var_6496, dtype="int8") /* ty=Tensor[(30, 9), int8] */;
    %978 = shape_of(%976, dtype="int32") /* ty=Tensor[(2), int32] */;
    %979 = cast(%976, dtype="int8") /* ty=Tensor[(30, 9), int8] */;
    %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %981 = maximum(%979, %980) /* ty=Tensor[(30, 9), int8] */;
    %982 = cast(%981, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
    %983 = sqrt(%982) /* ty=Tensor[(30, 9), float32] */;
    %984 = cast(%983, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
    %985 = atan(%984) /* ty=Tensor[(30, 9), float32] */;
    %986 = @func_6423() /* ty=Tensor[(30, 9), float64] */;
    (%985, %986)
  };
  %987(%var_6525) /* ty=(Tensor[(30, 9), float32], Tensor[(30, 9), float64]) */
}

def @func_10983() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %991 = fn () -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
    %988 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %989 = %988.0;
    %990 = @func_5093() /* ty=Tensor[(15, 8, 1), float64] */;
    (%989, %990)
  };
  %991() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */
}

def @func_5880(%var_5858: Tensor[(660), float64], %var_5859: uint64) -> (Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(660), float64], uint64) {
  %992 = @func_5509() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %993 = cast(%var_5858, dtype="float64") /* ty=Tensor[(660), float64] */;
  %994 = cast(%var_5859, dtype="uint64") /* ty=uint64 */;
  %995 = reshape(%993, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %996 = reshape(%994, newshape=[]) /* ty=uint64 */;
  %997 = @func_4842(%995, %996) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(11, 4, 15), int8], Tensor[(660), float64], Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(280), uint16], uint64, Tensor[(28), uint64], Tensor[(448), float64], Tensor[(60, 10), float32], Tensor[(5, 198), float64]) */;
  %998 = %992.0;
  %999 = %997.1;
  (%998, %999, %var_5858, %var_5859)
}

def @func_2760(%var_2759: Tensor[(5, 12, 10), float64]) -> (Tensor[(5, 12, 10), float64], Tensor[(11, 4, 15), int8], Tensor[(660), float64]) {
  %1006 = fn (%var_2741: Tensor[(5, 12, 10), float64]) -> (Tensor[(5, 12, 10), float64], Tensor[(11, 4, 15), int8], Tensor[(660), float64]) {
    %1000 = cast(%var_2741, dtype="float64") /* ty=Tensor[(5, 12, 10), float64] */;
    %1001 = cast(meta[relay.Constant][76] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
    %1002 = reshape(%1001, newshape=[330, 2]) /* ty=Tensor[(330, 2), float64] */;
    %1003 = @func_357(%1002) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */;
    %1004 = rsqrt(%1000) /* ty=Tensor[(5, 12, 10), float64] */;
    %1005 = %1003.1;
    (%1004, %1005, meta[relay.Constant][76] /* ty=Tensor[(660), float64] */)
  };
  %1006(%var_2759) /* ty=(Tensor[(5, 12, 10), float64], Tensor[(11, 4, 15), int8], Tensor[(660), float64]) */
}

def @func_8778() -> Tensor[(15, 8, 1), float64] {
  %1007 = fn () -> Tensor[(15, 8, 1), float64] {
    @func_5034() /* ty=Tensor[(15, 8, 1), float64] */
  };
  %1007() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_11087() -> Tensor[(15, 8, 1), float64] {
  %1008 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %1008.0
}

def @func_4551(%var_4549: Tensor[(15, 8, 2), float64]) -> (Tensor[(15, 8, 1), float32], Tensor[(15, 8, 2), bool]) {
  @func_4548(%var_4549) /* ty=(Tensor[(15, 8, 1), float32], Tensor[(15, 8, 2), bool]) */
}

def @func_6785() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float64], Tensor[(9, 10, 11), float64], Tensor[(990), float64]) {
  %1009 = @func_6324() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %1010 = @func_6745() /* ty=(Tensor[(30, 9), float64],) */;
  %1011 = cast(meta[relay.Constant][77] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %1012 = reshape(%1011, newshape=[9, 10, 11]) /* ty=Tensor[(9, 10, 11), float64] */;
  %1013 = @func_2033(%1012) /* ty=(Tensor[(9, 10, 11), float64],) */;
  %1014 = %1009.0;
  %1015 = %1010.0;
  %1016 = %1013.0;
  (%1014, %1015, %1016, meta[relay.Constant][77] /* ty=Tensor[(990), float64] */)
}

def @func_11390(%var_11388: Tensor[(490, 1), float32], %var_11389: Tensor[(600), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(490, 1), float32], Tensor[(600), float32], Tensor[(15, 8, 1), float64], Tensor[(756, 2), bool], Tensor[(11, 16, 13), float32], Tensor[(2288), float32]) {
  @func_11386(%var_11388, %var_11389) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(14, 10, ?), int64], Tensor[(660), float64], Tensor[(490, 1), float32], Tensor[(600), float32], Tensor[(15, 8, 1), float64], Tensor[(756, 2), bool], Tensor[(11, 16, 13), float32], Tensor[(2288), float32]) */
}

def @func_5177() -> Tensor[(3, 10, 9), float32] {
  @func_5175() /* ty=Tensor[(3, 10, 9), float32] */
}

def @func_10366() -> Tensor[(15, 8, 1), float64] {
  @func_10364() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_7862() -> Tensor[(15, 8, 1), float64] {
  @func_7278() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_9290(%var_9288: Tensor[(270), float32]) -> (Tensor[(270), bool],) {
  @func_9287(%var_9288) /* ty=(Tensor[(270), bool],) */
}

def @func_6616() -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %1020 = fn () -> (Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
    %1017 = @func_6114() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %1018 = @func_5034() /* ty=Tensor[(15, 8, 1), float64] */;
    %1019 = %1017.0;
    (%1018, %1019)
  };
  %1020() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */
}

def @func_360(%var_358: Tensor[(330, 2), float64]) -> (Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) {
  @func_357(%var_358) /* ty=(Tensor[(14, 10, ?), int64], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float32], Tensor[(11, 4, 15), int8], Tensor[(330, 2), float64], Tensor[(11, 4, 15), int8]) */
}

def @func_11330(%var_11327: Tensor[(1512), float32], %var_11328: Tensor[(660), float64], %var_11329: Tensor[(600), float32]) -> (Tensor[(1512), float32], Tensor[(660), float64], Tensor[(490, 1), float32], Tensor[(600), float32], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(15, 8, 660), float64]) {
  @func_11325(%var_11327, %var_11328, %var_11329) /* ty=(Tensor[(1512), float32], Tensor[(660), float64], Tensor[(490, 1), float32], Tensor[(600), float32], Tensor[(3, 10, 9), float32], Tensor[(270), float32], Tensor[(15, 8, 660), float64]) */
}

def @func_8156() -> (Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32]) {
  %1021 = @func_6114() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %1022 = %1021.0;
  %1023 = @func_5175() /* ty=Tensor[(3, 10, 9), float32] */;
  (%1022, %1023)
}

def @func_7259(%var_7217: Tensor[(2, 120), float64]) -> (Tensor[(660), float64], Tensor[(2, 120), float64], Tensor[(15, 8, 240), bool], Tensor[(11, 4, 15), float64]) {
  %1024 = cast(%var_7217, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %1025 = cast(meta[relay.Constant][78] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1026 = reshape(%1025, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %1027 = @func_253(%1026) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
  %1028 = %1027.1;
  %1029 = cast(%1028, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %1030 = reshape(%1024, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %1031 = reshape(%1029, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %1032 = @func_5487(%1030, %1031) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(660), float64], Tensor[(15, 8, 240), int32]) */;
  %1033 = %1032.2;
  %1034 = cast(%1033, dtype="float64") /* ty=Tensor[(15, 8, 240), float64] */;
  %1035 = log(%1034) /* ty=Tensor[(15, 8, 240), float64] */;
  %1036 = @func_6615() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %1037 = %1036.0;
  %1038 = cast(%1035, dtype="bool") /* ty=Tensor[(15, 8, 240), bool] */;
  %1039 = cast(%1037, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %1040 = cast(%1028, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %1041 = greater(%1038, %1039) /* ty=Tensor[(15, 8, 240), bool] */;
  %1042 = acos(%1040) /* ty=Tensor[(11, 4, 15), float64] */;
  (meta[relay.Constant][78] /* ty=Tensor[(660), float64] */, %var_7217, %1041, %1042)
}

def @func_5360() -> Tensor[(30, 9), float32] {
  %1043 = @func_5214() /* ty=(Tensor[(30, 9), float32],) */;
  %1044 = %1043.0;
  %1045 = cast(%1044, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  log10(%1045) /* ty=Tensor[(30, 9), float32] */
}

def @func_8424(%var_8372: Tensor[(6, 14, 4), int32], %var_8373: Tensor[(6, 14, 4), int32]) -> (Tensor[(6, 14, 4), float64], Tensor[(15, 8, 1), float64], Tensor[(6, 14, 4), float32]) {
  %1046 = cast(%var_8372, dtype="float64") /* ty=Tensor[(6, 14, 4), float64] */;
  %1047 = @func_6615() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
  %1048 = cast(%var_8373, dtype="bool") /* ty=Tensor[(6, 14, 4), bool] */;
  %1049 = shape_of(%var_8372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1050 = cast(%var_8372, dtype="bool") /* ty=Tensor[(6, 14, 4), bool] */;
  %1051 = dyn.reshape(%1048, %1049, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1052 = not_equal(%1050, %1051) /* ty=Tensor[(6, 14, 4), bool] */;
  %1053 = cast(%var_8373, dtype="float32") /* ty=Tensor[(6, 14, 4), float32] */;
  %1054 = shape_of(%1052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1055 = cast(%1052, dtype="float32") /* ty=Tensor[(6, 14, 4), float32] */;
  %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1057 = sqrt(%1046) /* ty=Tensor[(6, 14, 4), float64] */;
  %1058 = %1047.0;
  %1059 = floor_mod(%1055, %1056) /* ty=Tensor[(6, 14, 4), float32] */;
  (%1057, %1058, %1059)
}

def @func_10958() -> (Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64], Tensor[(3, 10, 9), float32], Tensor[(15, 8, 1), float64]) {
  %1060 = @func_10031() /* ty=(Tensor[(30, 9), float32],) */;
  %1061 = @func_8888() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float32]) */;
  %1062 = @func_7705() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) */;
  %1063 = %1060.0;
  %1064 = %1061.0;
  %1065 = @func_5175() /* ty=Tensor[(3, 10, 9), float32] */;
  %1066 = %1062.2;
  (%1063, %1064, %1065, %1066)
}

def @func_5884(%var_5882: Tensor[(660), float64], %var_5883: uint64) -> (Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(660), float64], uint64) {
  @func_5880(%var_5882, %var_5883) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(9, 10, 11), float64], Tensor[(660), float64], uint64) */
}

def @func_7707() -> (Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) {
  @func_7705() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(30, 9), float32], Tensor[(15, 8, 1), float64]) */
}

def @func_3003(%var_3001: Tensor[(9, 14, 4), int16]) -> Tensor[(9, 14, 4), int16] {
  @func_3000(%var_3001) /* ty=Tensor[(9, 14, 4), int16] */
}

def @func_9389() -> (Tensor[(15, 8, 1), float64],) {
  %1067 = @func_6324() /* ty=(Tensor[(15, 8, 1), float64],) */;
  %1068 = %1067.0;
  (%1068,)
}

def @func_9611() -> Tensor[(15, 8, 1), float64] {
  @func_9609() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_6060(%var_6059: Tensor[(660), float64]) -> (Tensor[(30, 9), float32], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) {
  %1074 = fn (%var_6048: Tensor[(660), float64]) -> (Tensor[(30, 9), float32], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) {
    %1069 = cast(%var_6048, dtype="float64") /* ty=Tensor[(660), float64] */;
    %1070 = reshape(%1069, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
    %1071 = @func_253(%1070) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
    %1072 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
    %1073 = %1071.0;
    (%1072, %1073, %var_6048)
  };
  %1074(%var_6059) /* ty=(Tensor[(30, 9), float32], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */
}

def @func_9421(%var_9417: Tensor[(1512), float32], %var_9418: Tensor[(660), float64], %var_9419: Tensor[(490), float32], %var_9420: Tensor[(60, 10), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(1, 660), float64], Tensor[(1512), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(60, 10), float32]) {
  %1086 = fn (%var_9411: Tensor[(1512), float32], %var_9412: Tensor[(660), float64], %var_9413: Tensor[(490), float32], %var_9414: Tensor[(60, 10), float32]) -> (Tensor[(15, 8, 1), float64], Tensor[(1, 660), float64], Tensor[(1512), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(60, 10), float32]) {
    %1075 = cast(%var_9411, dtype="float32") /* ty=Tensor[(1512), float32] */;
    %1076 = cast(%var_9412, dtype="float64") /* ty=Tensor[(660), float64] */;
    %1077 = cast(%var_9413, dtype="float32") /* ty=Tensor[(490), float32] */;
    %1078 = cast(%var_9414, dtype="float32") /* ty=Tensor[(60, 10), float32] */;
    %1079 = reshape(%1075, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), float32] */;
    %1080 = reshape(%1076, newshape=[1, 660]) /* ty=Tensor[(1, 660), float64] */;
    %1081 = reshape(%1077, newshape=[490]) /* ty=Tensor[(490), float32] */;
    %1082 = reshape(%1078, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %1083 = @func_2433(%1079, %1080, %1081, %1082) /* ty=(Tensor[(12, 9, 14), float32], Tensor[(1, 660), float64], Tensor[(14, 10, ?), float32], Tensor[(330, 2), float32], Tensor[(7, 14, 5), float32], Tensor[(490), float32], Tensor[(7, 4), uint64], Tensor[(448), float64], Tensor[(600), float32], Tensor[(11, 4, 15), float64]) */;
    %1084 = @func_4652() /* ty=Tensor[(15, 8, 1), float64] */;
    %1085 = %1083.1;
    (%1084, %1085, %var_9411, %var_9412, %var_9413, %var_9414)
  };
  %1086(%var_9417, %var_9418, %var_9419, %var_9420) /* ty=(Tensor[(15, 8, 1), float64], Tensor[(1, 660), float64], Tensor[(1512), float32], Tensor[(660), float64], Tensor[(490), float32], Tensor[(60, 10), float32]) */
}

def @func_10686() -> (Tensor[(15, 8, 1), float64],) {
  @func_10684() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_11177() -> Tensor[(15, 8, 1), float64] {
  @func_11175() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_7637() -> Tensor[(15, 8, 1), float64] {
  %1088 = fn () -> Tensor[(15, 8, 1), float64] {
    %1087 = @func_5962() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %1087.0
  };
  %1088() /* ty=Tensor[(15, 8, 1), float64] */
}

def @func_8450(%var_8448: bool, %var_8449: Tensor[(6, 9, 16), bool]) -> (Tensor[(6, 9, 16), bool],) {
  @func_8446(%var_8448, %var_8449) /* ty=(Tensor[(6, 9, 16), bool],) */
}

def @func_5273(%var_5271: Tensor[(15, 8, 9), float64], %var_5272: Tensor[(40), int32]) -> (Tensor[(15, 8, 9), bool], Tensor[(7, 4), uint64], Tensor[(40), int32], Tensor[(660), float64]) {
  @func_5269(%var_5271, %var_5272) /* ty=(Tensor[(15, 8, 9), bool], Tensor[(7, 4), uint64], Tensor[(40), int32], Tensor[(660), float64]) */
}

def @func_8732(%var_8730: Tensor[(5, 14, 12), float64], %var_8731: Tensor[(5, 14, 12), float64]) -> (Tensor[(5, 14, 12), float64], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
  %1098 = fn (%var_8669: Tensor[(5, 14, 12), float64], %var_8670: Tensor[(5, 14, 12), float64]) -> (Tensor[(5, 14, 12), float64], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) {
    %1089 = cast(%var_8670, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
    %1090 = shape_of(%var_8669, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1091 = cast(%var_8669, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
    %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1093 = @func_6850() /* ty=(Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */;
    %1094 = @func_4668() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %1095 = power(%1091, %1092) /* ty=Tensor[(5, 14, 12), float64] */;
    %1096 = %1093.0;
    %1097 = %1094.0;
    (%1095, %1096, %1097)
  };
  %1098(%var_8730, %var_8731) /* ty=(Tensor[(5, 14, 12), float64], Tensor[(15, 8, 1), float64], Tensor[(15, 8, 1), float64]) */
}

def @func_455(%var_452: uint64, %var_453: Tensor[(7, 1, 4), uint64], %var_454: Tensor[(660), float64]) -> (Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) {
  %1106 = fn (%var_426: uint64, %var_427: Tensor[(7, 1, 4), uint64], %var_449: Tensor[(660), float64]) -> (Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) {
    %1099 = cast(%var_426, dtype="bool") /* ty=bool */;
    %1100 = cast(%var_427, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
    %1101 = cast(%var_449, dtype="float64") /* ty=Tensor[(660), float64] */;
    %1102 = reshape(%1101, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
    %1103 = @func_253(%1102) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(11, 4, 15), int8]) */;
    %1104 = less_equal(%1099, %1100) /* ty=Tensor[(7, 1, 4), bool] */;
    %1105 = %1103.0;
    (%1104, %1105, %var_449)
  };
  %1106(%var_452, %var_453, %var_454) /* ty=(Tensor[(7, 1, 4), bool], Tensor[(11, 4, 15), float64], Tensor[(660), float64]) */
}

def @func_5963() -> (Tensor[(15, 8, 1), float64],) {
  %1108 = fn () -> (Tensor[(15, 8, 1), float64],) {
    %1107 = @func_5709() /* ty=Tensor[(15, 8, 1), float64] */;
    (%1107,)
  };
  %1108() /* ty=(Tensor[(15, 8, 1), float64],) */
}

def @func_6424() -> Tensor[(30, 9), float64] {
  %1111 = fn () -> Tensor[(30, 9), float64] {
    %1109 = @func_5360() /* ty=Tensor[(30, 9), float32] */;
    %1110 = cast(%1109, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
    sigmoid(%1110) /* ty=Tensor[(30, 9), float64] */
  };
  %1111() /* ty=Tensor[(30, 9), float64] */
}

def @func_10133() -> Tensor[(15, 8, 1), float64] {
  @func_10131() /* ty=Tensor[(15, 8, 1), float64] */
}

def @main(%var_11411: Tensor[(1, 6, 6), float32], %var_11412: Tensor[(7, 6, 6), float32]) -> Tensor[(7, 6, 6), float32] {
  %1112 = cast(%var_11411, dtype="float32") /* ty=Tensor[(1, 6, 6), float32] */;
  %1113 = cast(%var_11412, dtype="float32") /* ty=Tensor[(7, 6, 6), float32] */;
  divide(%1112, %1113) /* ty=Tensor[(7, 6, 6), float32] */
}

def @func_3733(%var_3732: Tensor[(3, 10, 9), float32]) -> Tensor[(3, 10, 9), float32] {
  %1115 = fn (%var_3718: Tensor[(3, 10, 9), float32]) -> Tensor[(3, 10, 9), float32] {
    %1114 = cast(%var_3718, dtype="float32") /* ty=Tensor[(3, 10, 9), float32] */;
    erf(%1114) /* ty=Tensor[(3, 10, 9), float32] */
  };
  %1115(%var_3732) /* ty=Tensor[(3, 10, 9), float32] */
}

def @func_6357(%var_6356: Tensor[(220), float32]) -> (Tensor[(15, 8, 1), float64], uint64, Tensor[(220), float32]) {
  %1124 = fn (%var_6350: Tensor[(220), float32]) -> (Tensor[(15, 8, 1), float64], uint64, Tensor[(220), float32]) {
    %1116 = @func_4889() /* ty=(Tensor[(15, 8, 1), float64],) */;
    %1117 = cast(%var_6350, dtype="float32") /* ty=Tensor[(220), float32] */;
    %1118 = cast(%var_6350, dtype="float32") /* ty=Tensor[(220), float32] */;
    %1119 = reshape(%1117, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
    %1120 = reshape(%1118, newshape=[5, 44]) /* ty=Tensor[(5, 44), float32] */;
    %1121 = @func_4747(%1119, %1120) /* ty=(Tensor[(15, 8, 1), float64], uint64, Tensor[(28), uint64], Tensor[(5, 44), float32]) */;
    %1122 = %1116.0;
    %1123 = %1121.1;
    (%1122, %1123, %var_6350)
  };
  %1124(%var_6356) /* ty=(Tensor[(15, 8, 1), float64], uint64, Tensor[(220), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen838/build/output.py:2981: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen838/build/output.py", line 2986, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(252) tvmgen_default_fused_divide_kernel0(float* __restrict__ T_divide, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_divide[(((int)threadIdx.x))] = (placeholder[((((int)threadIdx.x) % 36))] / placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_1607(%var_1576: int8, %var_1577: Tensor[(528), int8]) -> (Tensor[(2535), float32], Tensor[(52), float64], int8, Tensor[(528), int8], Tensor[(13, 13, 15), float32], Tensor[(7, 6, 1), float64]) {
  %0 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %1 = cast(%var_1576, dtype="int8") /* ty=int8 */;
  %2 = cast(%var_1577, dtype="int8") /* ty=Tensor[(528), int8] */;
  %3 = reshape(%1, newshape=[]) /* ty=int8 */;
  %4 = reshape(%2, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), int8] */;
  %5 = @func_654(%3, %4) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) */;
  %6 = %0.2;
  %7 = cast(%6, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %8 = cast(%var_1577, dtype="int8") /* ty=Tensor[(528), int8] */;
  %9 = reshape(%7, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %10 = reshape(%8, newshape=[528]) /* ty=Tensor[(528), int8] */;
  %11 = @func_951(%9, %10) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(52), float64], Tensor[(624), int16], Tensor[(140, 2), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float32], Tensor[(11, 12, 4), int8], Tensor[(528), int8], Tensor[(140, 2), bool]) */;
  %12 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %13 = %5.2;
  %14 = %11.4;
  %15 = %12.0;
  (%6, %13, %var_1576, %var_1577, %14, %15)
}

def @func_3841(%var_3830: Tensor[(8, 16, 8), float32]) -> (Tensor[(8, 16, 8), float32], Tensor[(528, 1), int8]) {
  %16 = cast(%var_3830, dtype="float32") /* ty=Tensor[(8, 16, 8), float32] */;
  %17 = sigmoid(%16) /* ty=Tensor[(8, 16, 8), float32] */;
  %18 = @func_2890() /* ty=Tensor[(528, 1), int8] */;
  (%17, %18)
}

def @func_3109(%var_3011: Tensor[(8448), int32], %var_3095: Tensor[(52), float64]) -> (int8, Tensor[(11, 12, 4), float32], Tensor[(624), int16], Tensor[(528, 16), int64], Tensor[(8448), bool], Tensor[(8448), float64], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(7, 6, 8448), bool]) {
  %19 = @func_1859() /* ty=(int8,) */;
  %20 = cast(%var_3011, dtype="int32") /* ty=Tensor[(8448), int32] */;
  %21 = reshape(%20, newshape=[528, 16]) /* ty=Tensor[(528, 16), int32] */;
  %22 = @func_1994(%21) /* ty=(Tensor[(528, 16), bool], Tensor[(528, ?), float64], Tensor[(528, 16), bool]) */;
  %23 = %22.0;
  %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(528, 16), bool] */, dtype="int64") /* ty=Tensor[(528, 16), int64] */;
  %25 = shape_of(%23, dtype="int32") /* ty=Tensor[(2), int32] */;
  %26 = cast(%23, dtype="int64") /* ty=Tensor[(528, 16), int64] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %28 = cast(%var_3011, dtype="float64") /* ty=Tensor[(8448), float64] */;
  %29 = acosh(%28) /* ty=Tensor[(8448), float64] */;
  %30 = cast(%29, dtype="float64") /* ty=Tensor[(8448), float64] */;
  %31 = log(%30) /* ty=Tensor[(8448), float64] */;
  %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(8448), int32] */, dtype="int8") /* ty=Tensor[(8448), int8] */;
  %33 = shape_of(%var_3011, dtype="int32") /* ty=Tensor[(1), int32] */;
  %34 = cast(%var_3011, dtype="int8") /* ty=Tensor[(8448), int8] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?), int8] */;
  %36 = bitwise_xor(%34, %35) /* ty=Tensor[(8448), int8] */;
  %37 = cast(%36, dtype="bool") /* ty=Tensor[(8448), bool] */;
  %38 = shape_of(%31, dtype="int32") /* ty=Tensor[(1), int32] */;
  %39 = cast(%31, dtype="bool") /* ty=Tensor[(8448), bool] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?), bool] */;
  %41 = cast(%29, dtype="float64") /* ty=Tensor[(8448), float64] */;
  %42 = cast(%var_3095, dtype="float64") /* ty=Tensor[(52), float64] */;
  %43 = reshape(%42, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), float64] */;
  %44 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %45 = %44.0;
  %46 = cast(%var_3011, dtype="float64") /* ty=Tensor[(8448), float64] */;
  %47 = cast(%45, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %48 = power(%46, %47) /* ty=Tensor[(7, 6, 8448), float64] */;
  %49 = cast(%29, dtype="int64") /* ty=Tensor[(8448), int64] */;
  %50 = cast(%48, dtype="int64") /* ty=Tensor[(7, 6, 8448), int64] */;
  %51 = multiply(%49, %50) /* ty=Tensor[(7, 6, 8448), int64] */;
  %52 = cast(meta[relay.Constant][0] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %53 = reshape(%52, newshape=[24, 26]) /* ty=Tensor[(24, 26), int16] */;
  %54 = @func_1097(%53) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(24, 26), int16]) */;
  %55 = %54.0;
  %56 = cast(%51, dtype="bool") /* ty=Tensor[(7, 6, 8448), bool] */;
  %57 = cast(%55, dtype="bool") /* ty=Tensor[(7, 6, 1), bool] */;
  %58 = %19.0;
  %59 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
  %60 = multiply(%26, %27) /* ty=Tensor[(528, 16), int64] */;
  %61 = logical_and(%39, %40) /* ty=Tensor[(8448), bool] */;
  %62 = sqrt(%41) /* ty=Tensor[(8448), float64] */;
  %63 = @func_249(%43) /* ty=Tensor[(?, 13, 4), int16] */;
  %64 = greater(%56, %57) /* ty=Tensor[(7, 6, 8448), bool] */;
  (%58, %59, meta[relay.Constant][0] /* ty=Tensor[(624), int16] */, %60, %61, %62, %63, %var_3095, %64)
}

def @func_3571(%var_3551: Tensor[(528, 5), int32]) -> (Tensor[(528, 5), bool], Tensor[(7, 6, 1), float64], Tensor[(528, 5), int8]) {
  %65 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
  %66 = cast(%65, dtype="bool") /* ty=Tensor[(528, ?), bool] */;
  %67 = cast(%var_3551, dtype="bool") /* ty=Tensor[(528, 5), bool] */;
  %68 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %69 = cast(%var_3551, dtype="int8") /* ty=Tensor[(528, 5), int8] */;
  %70 = cast(%65, dtype="int8") /* ty=Tensor[(528, ?), int8] */;
  %71 = greater(%66, %67) /* ty=Tensor[(528, 5), bool] */;
  %72 = %68.0;
  %73 = bitwise_and(%69, %70) /* ty=Tensor[(528, 5), int8] */;
  (%71, %72, %73)
}

def @func_5594(%var_5569: Tensor[(528, 5), int32]) -> (Tensor[(528, 5), uint64], Tensor[(528, 5), int64], Tensor[(528, 1), int8]) {
  %74 = @func_5287() /* ty=(Tensor[(528, ?), int32],) */;
  %75 = %74.0;
  %76 = cast(%75, dtype="uint64") /* ty=Tensor[(528, ?), uint64] */;
  %77 = cast(%var_5569, dtype="uint64") /* ty=Tensor[(528, 5), uint64] */;
  %78 = cast(%75, dtype="bool") /* ty=Tensor[(528, ?), bool] */;
  %79 = cast(%var_5569, dtype="bool") /* ty=Tensor[(528, 5), bool] */;
  %80 = less_equal(%78, %79) /* ty=Tensor[(528, 5), bool] */;
  %81 = cast(%80, dtype="int64") /* ty=Tensor[(528, 5), int64] */;
  %82 = shape_of(%var_5569, dtype="int32") /* ty=Tensor[(2), int32] */;
  %83 = cast(%var_5569, dtype="int64") /* ty=Tensor[(528, 5), int64] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %85 = add(%76, %77) /* ty=Tensor[(528, 5), uint64] */;
  %86 = bitwise_xor(%83, %84) /* ty=Tensor[(528, 5), int64] */;
  %87 = @func_2163() /* ty=Tensor[(528, 1), int8] */;
  (%85, %86, %87)
}

def @func_654(%var_638: int8, %var_639: Tensor[(11, 12, 4), int8]) -> (Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) {
  %88 = cast(%var_638, dtype="int8") /* ty=int8 */;
  %89 = cast(%var_639, dtype="int8") /* ty=Tensor[(11, 12, 4), int8] */;
  %90 = cast(meta[relay.Constant][3] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %91 = reshape(%90, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), float64] */;
  %92 = maximum(%88, %89) /* ty=Tensor[(11, 12, 4), int8] */;
  %93 = @func_249(%91) /* ty=Tensor[(?, 13, 4), int16] */;
  (%92, %93, meta[relay.Constant][3] /* ty=Tensor[(52), float64] */)
}

def @func_1641() -> int8 {
  %94 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %94.0
}

def @func_4328(%var_4319: Tensor[(12, 10, 16), float32]) -> (Tensor[(528, 1), float32], Tensor[(12, 10, 16), int8]) {
  %95 = @func_4264() /* ty=Tensor[(528, 1), int8] */;
  %96 = cast(%95, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %97 = @func_3162() /* ty=Tensor[(1, 10, 16), float32] */;
  %98 = cast(%97, dtype="int8") /* ty=Tensor[(1, 10, 16), int8] */;
  %99 = cast(%var_4319, dtype="int8") /* ty=Tensor[(12, 10, 16), int8] */;
  %100 = atan(%96) /* ty=Tensor[(528, 1), float32] */;
  %101 = maximum(%98, %99) /* ty=Tensor[(12, 10, 16), int8] */;
  (%100, %101)
}

def @func_1097(%var_1094: Tensor[(24, 26), int16]) -> (Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(24, 26), int16]) {
  %102 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %103 = cast(%var_1094, dtype="int16") /* ty=Tensor[(24, 26), int16] */;
  %104 = reshape(%103, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %105 = @func_1036(%104) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(1, 280), float32], Tensor[(624), int16]) */;
  %106 = %102.0;
  %107 = %105.1;
  (%106, %107, %var_1094)
}

def @func_5114() -> (Tensor[(13, 13, 15), float64], Tensor[(7, 6, 1), float64]) {
  %108 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %109 = %108.1;
  %110 = cast(%109, dtype="float64") /* ty=Tensor[(13, 13, 15), float64] */;
  %111 = exp(%110) /* ty=Tensor[(13, 13, 15), float64] */;
  %112 = @func_3352() /* ty=Tensor[(7, 6, 1), float64] */;
  (%111, %112)
}

def @func_3137() -> (Tensor[(7, 6, 1), float64],) {
  %113 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %114 = %113.0;
  (%114,)
}

def @func_5851(%var_5806: Tensor[(630), float64]) -> (Tensor[(7, 6, 4), bool], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, ?), bool], Tensor[(10, 63), float64], Tensor[(2535), float32], Tensor[(528, 630), float64], Tensor[(528, ?), float64], Tensor[(528, 1), int8]) {
  %115 = @func_5415() /* ty=(Tensor[(528, 1), int8], Tensor[(7, 6, ?), float32]) */;
  %116 = %115.1;
  %117 = cast(%116, dtype="bool") /* ty=Tensor[(7, 6, ?), bool] */;
  %118 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 6, 4), float32] */, dtype="bool") /* ty=Tensor[(7, 6, 4), bool] */;
  %119 = cast(%var_5806, dtype="float64") /* ty=Tensor[(630), float64] */;
  %120 = cast(meta[relay.Constant][5] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %121 = reshape(%119, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %122 = reshape(%120, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %123 = @func_1825(%121, %122) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(528, 1), int8], Tensor[(2535), float32], Tensor[(630), float64], Tensor[(624), int16]) */;
  %124 = @func_5287() /* ty=(Tensor[(528, ?), int32],) */;
  %125 = %124.0;
  %126 = cast(%125, dtype="float64") /* ty=Tensor[(528, ?), float64] */;
  %127 = cos(%126) /* ty=Tensor[(528, ?), float64] */;
  %128 = cast(%127, dtype="int32") /* ty=Tensor[(528, ?), int32] */;
  %129 = reshape(%128, newshape=[528, 1]) /* ty=Tensor[(528, 1), int32] */;
  %130 = cast(meta[relay.Constant][5] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %131 = cast(meta[relay.Constant][6] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %132 = cast(%var_5806, dtype="float64") /* ty=Tensor[(630), float64] */;
  %133 = reshape(%130, newshape=[624, 1]) /* ty=Tensor[(624, 1), int16] */;
  %134 = reshape(%131, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %135 = reshape(%132, newshape=[10, 63]) /* ty=Tensor[(10, 63), float64] */;
  %136 = @func_4640(%133, %134, %135) /* ty=(Tensor[(528, 1), int8], Tensor[(528, ?), float64], Tensor[(624), int16], Tensor[(819), int8], Tensor[(624, 1), int16], Tensor[(52), float64], int8, Tensor[(2535), bool], Tensor[(2535), float32], Tensor[(10, 63), float64]) */;
  %137 = cast(%127, dtype="float64") /* ty=Tensor[(528, ?), float64] */;
  %138 = cast(%var_5806, dtype="float64") /* ty=Tensor[(630), float64] */;
  %139 = cast(%127, dtype="float64") /* ty=Tensor[(528, ?), float64] */;
  %140 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %141 = equal(%117, %118) /* ty=Tensor[(7, 6, 4), bool] */;
  %142 = %123.5;
  %143 = @func_4375(%129) /* ty=Tensor[(528, ?), bool] */;
  %144 = %136.9;
  %145 = floor_mod(%137, %138) /* ty=Tensor[(528, 630), float64] */;
  %146 = log2(%139) /* ty=Tensor[(528, ?), float64] */;
  %147 = %140.0;
  (%141, %142, meta[relay.Constant][5] /* ty=Tensor[(624), int16] */, %143, %144, meta[relay.Constant][6] /* ty=Tensor[(2535), float32] */, %145, %146, %147)
}

def @func_5627() -> (Tensor[(528, ?), int32],) {
  %148 = @func_4203() /* ty=Tensor[(528, ?), int32] */;
  (%148,)
}

def @func_4075(%var_4047: Tensor[(2535), float32]) -> (Tensor[(2535), int64],) {
  %149 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %150 = %149.2;
  %151 = cast(%var_4047, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %152 = shape_of(%150, dtype="int32") /* ty=Tensor[(1), int32] */;
  %153 = cast(%150, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?), bool] */;
  %155 = not_equal(%153, %154) /* ty=Tensor[(2535), bool] */;
  %156 = cast(meta[relay.Constant][7] /* ty=Tensor[(2535), bool] */, dtype="int64") /* ty=Tensor[(2535), int64] */;
  %157 = shape_of(%155, dtype="int32") /* ty=Tensor[(1), int32] */;
  %158 = cast(%155, dtype="int64") /* ty=Tensor[(2535), int64] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?), int64] */;
  %160 = bitwise_or(%158, %159) /* ty=Tensor[(2535), int64] */;
  (%160,)
}

def @func_2300(%var_2258: Tensor[(3, 6, 16), uint8], %var_2259: Tensor[(3, 6, 16), uint8], %var_2283: Tensor[(3, 6, 16), uint8]) -> (Tensor[(3, 6, 16), uint8], Tensor[(11, 12, 4), float32], Tensor[(3, 6, 16), bool], Tensor[(13, 13, 15), float32], Tensor[(169, 15), float32]) {
  %161 = cast(%var_2259, dtype="uint8") /* ty=Tensor[(3, 6, 16), uint8] */;
  %162 = shape_of(%var_2258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%var_2258, dtype="uint8") /* ty=Tensor[(3, 6, 16), uint8] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %165 = cast(%var_2283, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
  %166 = shape_of(%var_2259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%var_2259, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %169 = cast(meta[relay.Constant][8] /* ty=Tensor[(169, 15), float32] */, dtype="float32") /* ty=Tensor[(169, 15), float32] */;
  %170 = reshape(%169, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
  %171 = minimum(%163, %164) /* ty=Tensor[(3, 6, 16), uint8] */;
  %172 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
  %173 = less_equal(%167, %168) /* ty=Tensor[(3, 6, 16), bool] */;
  %174 = @func_392(%170) /* ty=Tensor[(13, 13, 15), float32] */;
  (%171, %172, %173, %174, meta[relay.Constant][8] /* ty=Tensor[(169, 15), float32] */)
}

def @func_864() -> (Tensor[(7, 6, 1), float64],) {
  %175 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %176 = %175.0;
  (%176,)
}

def @func_1859() -> (int8,) {
  %177 = @func_1641() /* ty=int8 */;
  (%177,)
}

def @func_2328() -> (Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) {
  %178 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %179 = @func_2163() /* ty=Tensor[(528, 1), int8] */;
  %180 = cast(%179, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
  %181 = cast(meta[relay.Constant][9] /* ty=Tensor[(528, 11), int8] */, dtype="bool") /* ty=Tensor[(528, 11), bool] */;
  %182 = %178.0;
  %183 = greater_equal(%180, %181) /* ty=Tensor[(528, 11), bool] */;
  %184 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
  (%182, %183, %184)
}

def @func_2687(%var_2684: Tensor[(9, 16, 5), float32]) -> Tensor[(9, 16, 5), float32] {
  %185 = cast(%var_2684, dtype="float32") /* ty=Tensor[(9, 16, 5), float32] */;
  acosh(%185) /* ty=Tensor[(9, 16, 5), float32] */
}

def @func_1994(%var_1973: Tensor[(528, 16), int32]) -> (Tensor[(528, 16), bool], Tensor[(528, ?), float64], Tensor[(528, 16), bool]) {
  %186 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
  %187 = cast(%186, dtype="bool") /* ty=Tensor[(528, ?), bool] */;
  %188 = cast(%var_1973, dtype="bool") /* ty=Tensor[(528, 16), bool] */;
  %189 = cast(%186, dtype="float64") /* ty=Tensor[(528, ?), float64] */;
  %190 = cast(%var_1973, dtype="bool") /* ty=Tensor[(528, 16), bool] */;
  %191 = cast(%186, dtype="bool") /* ty=Tensor[(528, ?), bool] */;
  %192 = greater(%187, %188) /* ty=Tensor[(528, 16), bool] */;
  %193 = asinh(%189) /* ty=Tensor[(528, ?), float64] */;
  %194 = equal(%190, %191) /* ty=Tensor[(528, 16), bool] */;
  (%192, %193, %194)
}

def @func_951(%var_916: Tensor[(2535), float32], %var_921: Tensor[(528), int8]) -> (Tensor[(7, 6, 1), float64], Tensor[(52), float64], Tensor[(624), int16], Tensor[(140, 2), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float32], Tensor[(11, 12, 4), int8], Tensor[(528), int8], Tensor[(140, 2), bool]) {
  %195 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %196 = cast(meta[relay.Constant][10] /* ty=Tensor[(140, 2), float32] */, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %197 = cast(meta[relay.Constant][11] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %198 = reshape(%196, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %199 = reshape(%197, newshape=[12, 13, 4]) /* ty=Tensor[(12, 13, 4), int16] */;
  %200 = @func_630(%198, %199) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) */;
  %201 = cast(meta[relay.Constant][12] /* ty=Tensor[(140, 2), float32] */, dtype="float64") /* ty=Tensor[(140, 2), float64] */;
  %202 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(140, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %203 = cast(meta[relay.Constant][10] /* ty=Tensor[(140, 2), float32] */, dtype="float64") /* ty=Tensor[(140, 2), float64] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %205 = cast(%var_916, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %206 = reshape(%205, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
  %207 = cast(meta[relay.Constant][13] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %208 = cast(%var_921, dtype="int8") /* ty=Tensor[(528), int8] */;
  %209 = reshape(%207, newshape=[]) /* ty=int8 */;
  %210 = reshape(%208, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), int8] */;
  %211 = @func_654(%209, %210) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) */;
  %212 = cast(meta[relay.Constant][10] /* ty=Tensor[(140, 2), float32] */, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %213 = cosh(%212) /* ty=Tensor[(140, 2), float32] */;
  %214 = cast(%213, dtype="bool") /* ty=Tensor[(140, 2), bool] */;
  %215 = cast(meta[relay.Constant][13] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %216 = %195.0;
  %217 = %200.1;
  %218 = floor_mod(%203, %204) /* ty=Tensor[(140, 2), float64] */;
  %219 = @func_392(%206) /* ty=Tensor[(13, 13, 15), float32] */;
  %220 = %211.0;
  %221 = greater_equal(%214, %215) /* ty=Tensor[(140, 2), bool] */;
  (%216, %217, meta[relay.Constant][11] /* ty=Tensor[(624), int16] */, %218, %219, %var_916, %220, %var_921, %221)
}

def @func_2890() -> Tensor[(528, 1), int8] {
  %222 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %222.0
}

def @func_5608() -> Tensor[(528, 1), int32] {
  %223 = @func_3312() /* ty=(Tensor[(528, 1), int32],) */;
  %223.0
}

def @func_4121() -> (Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(7, 6, 1), float64]) {
  %224 = @func_3706() /* ty=(Tensor[(528, ?), int32],) */;
  %225 = @func_4022() /* ty=Tensor[(7, 6, 1), float64] */;
  %226 = %224.0;
  %227 = @func_3352() /* ty=Tensor[(7, 6, 1), float64] */;
  (%225, %226, %227)
}

def @func_6101() -> (Tensor[(7, 6, 1), float64],) {
  %228 = @func_5703() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %229 = %228.0;
  (%229,)
}

def @func_6134(%var_6110: Tensor[(16, 7, 15), float32]) -> (Tensor[(16, 7, 15), float32], int8, Tensor[(528, 16), bool], Tensor[(8448), int32]) {
  %230 = cast(%var_6110, dtype="float32") /* ty=Tensor[(16, 7, 15), float32] */;
  %231 = cast(meta[relay.Constant][14] /* ty=Tensor[(8448), int32] */, dtype="int32") /* ty=Tensor[(8448), int32] */;
  %232 = reshape(%231, newshape=[528, 16]) /* ty=Tensor[(528, 16), int32] */;
  %233 = @func_1994(%232) /* ty=(Tensor[(528, 16), bool], Tensor[(528, ?), float64], Tensor[(528, 16), bool]) */;
  %234 = cos(%230) /* ty=Tensor[(16, 7, 15), float32] */;
  %235 = @func_4254() /* ty=int8 */;
  %236 = %233.2;
  (%234, %235, %236, meta[relay.Constant][14] /* ty=Tensor[(8448), int32] */)
}

def @func_3671() -> (Tensor[(7, 6, 1), float64],) {
  %237 = @func_3352() /* ty=Tensor[(7, 6, 1), float64] */;
  (%237,)
}

def @func_3205(%var_3177: Tensor[(8448, 1), int32], %var_3181: Tensor[(528, 16), bool]) -> (Tensor[(7, 6, 1), float64], Tensor[(528, 16), bool], Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(8448, 630), uint8]) {
  %238 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %239 = cast(%var_3177, dtype="int32") /* ty=Tensor[(8448, 1), int32] */;
  %240 = reshape(%239, newshape=[528, 16]) /* ty=Tensor[(528, 16), int32] */;
  %241 = @func_1994(%240) /* ty=(Tensor[(528, 16), bool], Tensor[(528, ?), float64], Tensor[(528, 16), bool]) */;
  %242 = %241.2;
  %243 = cast(%var_3181, dtype="bool") /* ty=Tensor[(528, 16), bool] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(2), int32] */;
  %245 = cast(%242, dtype="bool") /* ty=Tensor[(528, 16), bool] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %247 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %248 = cast(meta[relay.Constant][15] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %249 = reshape(%248, newshape=[10, 63]) /* ty=Tensor[(10, 63), float64] */;
  %250 = @func_2668(%249) /* ty=(Tensor[(528, 11), bool], Tensor[(2535), float32], Tensor[(5, 14, 4), float64], Tensor[(528, ?), int32], Tensor[(1, 624), int16], Tensor[(528, 1), int8], Tensor[(10, 63), float32]) */;
  %251 = cast(meta[relay.Constant][15] /* ty=Tensor[(630), float64] */, dtype="uint8") /* ty=Tensor[(630), uint8] */;
  %252 = cast(%var_3177, dtype="uint8") /* ty=Tensor[(8448, 1), uint8] */;
  %253 = %238.0;
  %254 = less(%245, %246) /* ty=Tensor[(528, 16), bool] */;
  %255 = %247.0;
  %256 = %250.0;
  %257 = multiply(%251, %252) /* ty=Tensor[(8448, 630), uint8] */;
  (%253, %254, %255, %256, %257)
}

def @main(%var_6154: Tensor[(528, 4), int32]) -> (Tensor[(528, 4), bool], Tensor[(528, 4), float64]) {
  %258 = @func_5335() /* ty=(Tensor[(528, ?), int32],) */;
  %259 = %258.0;
  %260 = cast(%259, dtype="bool") /* ty=Tensor[(528, ?), bool] */;
  %261 = cast(%var_6154, dtype="bool") /* ty=Tensor[(528, 4), bool] */;
  %262 = cast(%var_6154, dtype="float64") /* ty=Tensor[(528, 4), float64] */;
  %263 = equal(%260, %261) /* ty=Tensor[(528, 4), bool] */;
  %264 = cos(%262) /* ty=Tensor[(528, 4), float64] */;
  (%263, %264)
}

def @func_1664() -> Tensor[(7, 6, 1), float64] {
  %265 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %265.0
}

def @func_4544() -> (Tensor[(11, 12, 4), float32],) {
  %266 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
  (%266,)
}

def @func_630(%var_555: Tensor[(5, 14, 4), float32], %var_594: Tensor[(12, 13, 4), int16]) -> (Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) {
  %267 = cast(%var_555, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %268 = cast(meta[relay.Constant][16] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %269 = reshape(%268, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), float64] */;
  %270 = @func_249(%269) /* ty=Tensor[(?, 13, 4), int16] */;
  %271 = cast(%270, dtype="bool") /* ty=Tensor[(?, 13, 4), bool] */;
  %272 = cast(%var_594, dtype="bool") /* ty=Tensor[(12, 13, 4), bool] */;
  %273 = log2(%267) /* ty=Tensor[(5, 14, 4), float32] */;
  %274 = equal(%271, %272) /* ty=Tensor[(12, 13, 4), bool] */;
  (%273, meta[relay.Constant][16] /* ty=Tensor[(52), float64] */, %274)
}

def @func_1540(%var_1510: Tensor[(7, 6, 15), float64], %var_1517: Tensor[(4, 156), int16]) -> (Tensor[(7, 6, 15), float64], Tensor[(24, 26), int16], Tensor[(4, 156), int16], Tensor[(2535), bool], Tensor[(2535), float32]) {
  %275 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %276 = %275.0;
  %277 = cast(%276, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %278 = cast(%var_1510, dtype="float64") /* ty=Tensor[(7, 6, 15), float64] */;
  %279 = cast(%var_1517, dtype="int16") /* ty=Tensor[(4, 156), int16] */;
  %280 = reshape(%279, newshape=[24, 26]) /* ty=Tensor[(24, 26), int16] */;
  %281 = @func_1097(%280) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(24, 26), int16]) */;
  %282 = cast(meta[relay.Constant][17] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %283 = reshape(%282, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
  %284 = @func_392(%283) /* ty=Tensor[(13, 13, 15), float32] */;
  %285 = cast(%284, dtype="bool") /* ty=Tensor[(13, 13, 15), bool] */;
  %286 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(2535), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %287 = cast(meta[relay.Constant][17] /* ty=Tensor[(2535), float32] */, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?), bool] */;
  %289 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %290 = floor_mod(%277, %278) /* ty=Tensor[(7, 6, 15), float64] */;
  %291 = %281.2;
  %292 = greater_equal(%287, %288) /* ty=Tensor[(2535), bool] */;
  %293 = %289.2;
  (%290, %291, %var_1517, %292, %293)
}

def @func_5966() -> (Tensor[(528, 1), int8],) {
  %294 = @func_5504() /* ty=Tensor[(528, 1), int8] */;
  (%294,)
}

def @func_3162() -> Tensor[(1, 10, 16), float32] {
  %295 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 10, 16), float32] */, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  cosh(%295) /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_1442() -> (int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) {
  %296 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %297 = cast(meta[relay.Constant][19] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %298 = reshape(%297, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
  %299 = %296.2;
  %300 = @func_392(%298) /* ty=Tensor[(13, 13, 15), float32] */;
  (%299, %300, meta[relay.Constant][19] /* ty=Tensor[(2535), float32] */)
}

def @func_4428(%var_4403: Tensor[(2, 312), int16], %var_4419: Tensor[(5, 126), float64]) -> (Tensor[(7, 6, 1), float64], Tensor[(624), int16], Tensor[(2, 312), int16], Tensor[(4, 156), int16], Tensor[(5, 126), float64]) {
  %301 = cast(%var_4403, dtype="int16") /* ty=Tensor[(2, 312), int16] */;
  %302 = reshape(%301, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %303 = @func_3657(%302) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(624), int16], Tensor[(528, 1), float64]) */;
  %304 = cast(%var_4419, dtype="float64") /* ty=Tensor[(5, 126), float64] */;
  %305 = cast(%var_4403, dtype="int16") /* ty=Tensor[(2, 312), int16] */;
  %306 = reshape(%304, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), float64] */;
  %307 = reshape(%305, newshape=[4, 156]) /* ty=Tensor[(4, 156), int16] */;
  %308 = @func_1540(%306, %307) /* ty=(Tensor[(7, 6, 15), float64], Tensor[(24, 26), int16], Tensor[(4, 156), int16], Tensor[(2535), bool], Tensor[(2535), float32]) */;
  %309 = @func_1664() /* ty=Tensor[(7, 6, 1), float64] */;
  %310 = %303.1;
  %311 = %308.2;
  (%309, %310, %var_4403, %311, %var_4419)
}

def @func_1486(%var_1477: Tensor[(6864), int8]) -> (Tensor[(7, 6, 1), float64], Tensor[(13, 13, 15), float32], Tensor[(6864), int8], Tensor[(52), float64], Tensor[(2535), float32]) {
  %312 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %313 = cast(%var_1477, dtype="int8") /* ty=Tensor[(6864), int8] */;
  %314 = cast(meta[relay.Constant][20] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %315 = cast(meta[relay.Constant][21] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %316 = cast(meta[relay.Constant][21] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %317 = reshape(%313, newshape=[528, 13]) /* ty=Tensor[(528, 13), int8] */;
  %318 = reshape(%314, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %319 = reshape(%315, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %320 = reshape(%316, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %321 = @func_1397(%317, %318, %319, %320) /* ty=(Tensor[(528, 13), float32], Tensor[(528, 13), bool], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(13, 13, 15), float32], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(528, 1), int8], Tensor[(13, 13, 15), float32], Tensor[(11, 12, 4), int8]) */;
  %322 = %312.0;
  %323 = %321.8;
  (%322, %323, %var_1477, meta[relay.Constant][20] /* ty=Tensor[(52), float64] */, meta[relay.Constant][21] /* ty=Tensor[(2535), float32] */)
}

def @func_3539(%var_3475: Tensor[(4, 14, 12), uint32]) -> (Tensor[(4, 14, 12), bool], Tensor[(4, 14, 12), float64], Tensor[(11, 12, 4), float32], Tensor[(3, 42), float32], Tensor[(528, 1), int8], int8) {
  %324 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 1, 12), uint32] */, dtype="uint32") /* ty=Tensor[(4, 1, 12), uint32] */;
  %325 = cast(%var_3475, dtype="uint32") /* ty=Tensor[(4, 14, 12), uint32] */;
  %326 = bitwise_and(%324, %325) /* ty=Tensor[(4, 14, 12), uint32] */;
  %327 = cast(%326, dtype="uint64") /* ty=Tensor[(4, 14, 12), uint64] */;
  %328 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 1, 12), uint32] */, dtype="uint64") /* ty=Tensor[(4, 1, 12), uint64] */;
  %329 = add(%327, %328) /* ty=Tensor[(4, 14, 12), uint64] */;
  %330 = cast(%var_3475, dtype="bool") /* ty=Tensor[(4, 14, 12), bool] */;
  %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%329, dtype="bool") /* ty=Tensor[(4, 14, 12), bool] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %334 = cast(%329, dtype="float64") /* ty=Tensor[(4, 14, 12), float64] */;
  %335 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 42), float32] */, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %336 = reshape(%335, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float32] */;
  %337 = @func_2130(%336) /* ty=(Tensor[(14, 3, 3), float32], Tensor[(11, 12, 4), float32]) */;
  %338 = not_equal(%332, %333) /* ty=Tensor[(4, 14, 12), bool] */;
  %339 = sigmoid(%334) /* ty=Tensor[(4, 14, 12), float64] */;
  %340 = %337.1;
  %341 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
  %342 = @func_1641() /* ty=int8 */;
  (%338, %339, %340, meta[relay.Constant][23] /* ty=Tensor[(3, 42), float32] */, %341, %342)
}

def @func_5335() -> (Tensor[(528, ?), int32],) {
  %343 = @func_4820() /* ty=Tensor[(528, ?), int32] */;
  (%343,)
}

def @func_4640(%var_4621: Tensor[(624, 1), int16], %var_4637: Tensor[(2535), float32], %var_4638: Tensor[(10, 63), float64]) -> (Tensor[(528, 1), int8], Tensor[(528, ?), float64], Tensor[(624), int16], Tensor[(819), int8], Tensor[(624, 1), int16], Tensor[(52), float64], int8, Tensor[(2535), bool], Tensor[(2535), float32], Tensor[(10, 63), float64]) {
  %344 = @func_2328() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) */;
  %345 = %344.2;
  %346 = cast(%345, dtype="float64") /* ty=Tensor[(528, ?), float64] */;
  %347 = cast(meta[relay.Constant][24] /* ty=Tensor[(819), int8] */, dtype="int8") /* ty=Tensor[(819), int8] */;
  %348 = cast(%var_4621, dtype="int16") /* ty=Tensor[(624, 1), int16] */;
  %349 = reshape(%347, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), int8] */;
  %350 = reshape(%348, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %351 = @func_3616(%349, %350) /* ty=(Tensor[(13, 9, 7), uint8], Tensor[(624), int16], Tensor[(624), int16]) */;
  %352 = cast(meta[relay.Constant][25] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %353 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
  %354 = cast(%353, dtype="int8") /* ty=Tensor[(528, 1), int8] */;
  %355 = reshape(%352, newshape=[]) /* ty=int8 */;
  %356 = reshape(%354, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), int8] */;
  %357 = @func_654(%355, %356) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) */;
  %358 = cast(%var_4637, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %359 = cast(%var_4638, dtype="float64") /* ty=Tensor[(10, 63), float64] */;
  %360 = cast(%var_4637, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %361 = reshape(%358, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %362 = reshape(%359, newshape=[70, 9]) /* ty=Tensor[(70, 9), float64] */;
  %363 = reshape(%360, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %364 = @func_2528(%361, %362, %363) /* ty=(Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) */;
  %365 = sqrt(%346) /* ty=Tensor[(528, ?), float64] */;
  %366 = %351.1;
  %367 = %357.2;
  %368 = %364.3;
  (%353, %365, %366, meta[relay.Constant][24] /* ty=Tensor[(819), int8] */, %var_4621, %367, meta[relay.Constant][25] /* ty=int8 */, %368, %var_4637, %var_4638)
}

def @func_2603() -> (Tensor[(7, 6, 1), float64],) {
  %369 = @func_2328() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) */;
  %370 = %369.0;
  (%370,)
}

def @func_2066(%var_2044: Tensor[(7, 6, 6), float64]) -> (Tensor[(7, 6, 6), bool],) {
  %371 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %372 = %371.0;
  %373 = cast(%372, dtype="uint8") /* ty=Tensor[(7, 6, 1), uint8] */;
  %374 = cast(%var_2044, dtype="uint8") /* ty=Tensor[(7, 6, 6), uint8] */;
  %375 = subtract(%373, %374) /* ty=Tensor[(7, 6, 6), uint8] */;
  %376 = cast(%var_2044, dtype="bool") /* ty=Tensor[(7, 6, 6), bool] */;
  %377 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%375, dtype="bool") /* ty=Tensor[(7, 6, 6), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %380 = less_equal(%378, %379) /* ty=Tensor[(7, 6, 6), bool] */;
  (%380,)
}

def @func_3731() -> (Tensor[(528, 1), float32],) {
  %381 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
  %382 = cast(%381, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %383 = log(%382) /* ty=Tensor[(528, 1), float32] */;
  (%383,)
}

def @func_6036() -> Tensor[(528, 1), int8] {
  @func_2890() /* ty=Tensor[(528, 1), int8] */
}

def @func_2528(%var_2482: Tensor[(2535), float32], %var_2495: Tensor[(70, 9), float64], %var_2518: Tensor[(2535), float64]) -> (Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) {
  %384 = cast(%var_2495, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %385 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 624), int16] */, dtype="int16") /* ty=Tensor[(1, 624), int16] */;
  %386 = reshape(%384, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), float64] */;
  %387 = reshape(%385, newshape=[4, 156]) /* ty=Tensor[(4, 156), int16] */;
  %388 = @func_1540(%386, %387) /* ty=(Tensor[(7, 6, 15), float64], Tensor[(24, 26), int16], Tensor[(4, 156), int16], Tensor[(2535), bool], Tensor[(2535), float32]) */;
  %389 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %390 = %389.2;
  %391 = cast(%var_2482, dtype="uint16") /* ty=Tensor[(2535), uint16] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(1), int32] */;
  %393 = cast(%390, dtype="uint16") /* ty=Tensor[(2535), uint16] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %395 = logical_xor(%393, %394) /* ty=Tensor[(2535), uint16] */;
  %396 = cast(%390, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %397 = shape_of(%395, dtype="int32") /* ty=Tensor[(1), int32] */;
  %398 = cast(%395, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?), float64] */;
  %400 = floor_divide(%398, %399) /* ty=Tensor[(2535), float64] */;
  %401 = cast(%var_2518, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %402 = shape_of(%400, dtype="int32") /* ty=Tensor[(1), int32] */;
  %403 = cast(%400, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?), bool] */;
  %405 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 56), float32] */, dtype="float32") /* ty=Tensor[(5, 56), float32] */;
  %406 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 624), int16] */, dtype="int16") /* ty=Tensor[(1, 624), int16] */;
  %407 = reshape(%405, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %408 = reshape(%406, newshape=[12, 13, 4]) /* ty=Tensor[(12, 13, 4), int16] */;
  %409 = @func_630(%407, %408) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) */;
  %410 = %388.4;
  %411 = greater(%403, %404) /* ty=Tensor[(2535), bool] */;
  %412 = %409.0;
  (%410, %var_2495, meta[relay.Constant][26] /* ty=Tensor[(1, 624), int16] */, %411, %412, meta[relay.Constant][27] /* ty=Tensor[(5, 56), float32] */)
}

def @func_3706() -> (Tensor[(528, ?), int32],) {
  %413 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
  (%413,)
}

def @func_2130(%var_2122: Tensor[(14, 3, 3), float32]) -> (Tensor[(14, 3, 3), float32], Tensor[(11, 12, 4), float32]) {
  %414 = cast(%var_2122, dtype="float32") /* ty=Tensor[(14, 3, 3), float32] */;
  %415 = exp(%414) /* ty=Tensor[(14, 3, 3), float32] */;
  %416 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
  (%415, %416)
}

def @func_5287() -> (Tensor[(528, ?), int32],) {
  %417 = @func_3706() /* ty=(Tensor[(528, ?), int32],) */;
  %418 = %417.0;
  (%418,)
}

def @func_5933(%var_5923: Tensor[(7, 13, 11), float64]) -> (Tensor[(7, 13, 11), float64], Tensor[(7, 6, 1), float64]) {
  %419 = cast(%var_5923, dtype="float64") /* ty=Tensor[(7, 13, 11), float64] */;
  %420 = @func_3137() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %421 = log2(%419) /* ty=Tensor[(7, 13, 11), float64] */;
  %422 = %420.0;
  (%421, %422)
}

def @func_4254() -> int8 {
  %423 = @func_1859() /* ty=(int8,) */;
  %423.0
}

def @func_2163() -> Tensor[(528, 1), int8] {
  %424 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %424.0
}

def @func_3352() -> Tensor[(7, 6, 1), float64] {
  %425 = @func_2328() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) */;
  %425.0
}

def @func_3616(%var_3591: Tensor[(13, 9, 7), int8], %var_3600: Tensor[(624), int16]) -> (Tensor[(13, 9, 7), uint8], Tensor[(624), int16], Tensor[(624), int16]) {
  %426 = @func_1641() /* ty=int8 */;
  %427 = cast(%426, dtype="uint8") /* ty=uint8 */;
  %428 = cast(%var_3591, dtype="uint8") /* ty=Tensor[(13, 9, 7), uint8] */;
  %429 = cast(%426, dtype="int8") /* ty=int8 */;
  %430 = cast(%var_3600, dtype="int16") /* ty=Tensor[(624), int16] */;
  %431 = reshape(%429, newshape=[]) /* ty=int8 */;
  %432 = reshape(%430, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %433 = @func_3467(%431, %432) /* ty=(Tensor[(2535), float32], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, 1), uint64], Tensor[(5, 56), float32], Tensor[(10, 63), uint32], Tensor[(7, 6, 1), float64]) */;
  %434 = left_shift(%427, %428) /* ty=Tensor[(13, 9, 7), uint8] */;
  %435 = %433.1;
  (%434, %435, %var_3600)
}

def @func_5415() -> (Tensor[(528, 1), int8], Tensor[(7, 6, ?), float32]) {
  %436 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %437 = @func_4022() /* ty=Tensor[(7, 6, 1), float64] */;
  %438 = @func_2603() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %439 = %438.0;
  %440 = cast(%439, dtype="float32") /* ty=Tensor[(7, 6, 1), float32] */;
  %441 = shape_of(%437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%437, dtype="float32") /* ty=Tensor[(7, 6, 1), float32] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %444 = %436.0;
  %445 = divide(%442, %443) /* ty=Tensor[(7, 6, ?), float32] */;
  (%444, %445)
}

def @func_5485(%var_5469: Tensor[(528, 6), int32], %var_5478: Tensor[(288), uint8]) -> (Tensor[(528, 6), uint16], Tensor[(3, 6, 16), bool], Tensor[(288), uint8], Tensor[(7, 6, 1), float64]) {
  %446 = @func_4203() /* ty=Tensor[(528, ?), int32] */;
  %447 = cast(%446, dtype="uint16") /* ty=Tensor[(528, ?), uint16] */;
  %448 = cast(%var_5469, dtype="uint16") /* ty=Tensor[(528, 6), uint16] */;
  %449 = cast(%var_5478, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %450 = cast(%var_5478, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %451 = cast(%var_5478, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %452 = reshape(%449, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint8] */;
  %453 = reshape(%450, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint8] */;
  %454 = reshape(%451, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint8] */;
  %455 = @func_2300(%452, %453, %454) /* ty=(Tensor[(3, 6, 16), uint8], Tensor[(11, 12, 4), float32], Tensor[(3, 6, 16), bool], Tensor[(13, 13, 15), float32], Tensor[(169, 15), float32]) */;
  %456 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %457 = multiply(%447, %448) /* ty=Tensor[(528, 6), uint16] */;
  %458 = %455.2;
  %459 = %456.0;
  (%457, %458, %var_5478, %459)
}

def @func_249(%var_235: Tensor[(1, 13, 4), float64]) -> Tensor[(?, 13, 4), int16] {
  %460 = cast(%var_235, dtype="float64") /* ty=Tensor[(1, 13, 4), float64] */;
  %461 = rsqrt(%460) /* ty=Tensor[(1, 13, 4), float64] */;
  %462 = cast(%var_235, dtype="int16") /* ty=Tensor[(1, 13, 4), int16] */;
  %463 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%461, dtype="int16") /* ty=Tensor[(1, 13, 4), int16] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%464, %465) /* ty=Tensor[(?, 13, 4), int16] */
}

def @func_4789() -> Tensor[(528, 1), int8] {
  @func_4264() /* ty=Tensor[(528, 1), int8] */
}

def @func_4022() -> Tensor[(7, 6, 1), float64] {
  %466 = @func_2328() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) */;
  %466.0
}

def @func_3312() -> (Tensor[(528, 1), int32],) {
  %467 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
  %468 = @func_1859() /* ty=(int8,) */;
  %469 = %468.0;
  %470 = cast(%467, dtype="int32") /* ty=Tensor[(528, 1), int32] */;
  %471 = cast(%469, dtype="int32") /* ty=int32 */;
  %472 = maximum(%470, %471) /* ty=Tensor[(528, 1), int32] */;
  (%472,)
}

def @func_392(%var_387: Tensor[(13, 13, 15), float32]) -> Tensor[(13, 13, 15), float32] {
  %473 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 13, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
  %474 = shape_of(%var_387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(%var_387, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%475, %476) /* ty=Tensor[(13, 13, 15), float32] */
}

def @func_4820() -> Tensor[(528, ?), int32] {
  %477 = @func_3706() /* ty=(Tensor[(528, ?), int32],) */;
  %477.0
}

def @func_5453() -> (Tensor[(528, ?), int32],) {
  %478 = @func_4121() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(7, 6, 1), float64]) */;
  %479 = %478.1;
  (%479,)
}

def @func_4375(%var_4351: Tensor[(528, 1), int32]) -> Tensor[(528, ?), bool] {
  %480 = @func_3312() /* ty=(Tensor[(528, 1), int32],) */;
  %481 = %480.0;
  %482 = cast(%var_4351, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(2), int32] */;
  %484 = cast(%481, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%484, %485) /* ty=Tensor[(528, ?), bool] */
}

def @func_1233() -> Tensor[(528, ?), int32] {
  %486 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %487 = %486.0;
  %488 = cast(%487, dtype="float64") /* ty=Tensor[(528, 1), float64] */;
  %489 = exp(%488) /* ty=Tensor[(528, 1), float64] */;
  %490 = cast(%487, dtype="int32") /* ty=Tensor[(528, 1), int32] */;
  %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(2), int32] */;
  %492 = cast(%489, dtype="int32") /* ty=Tensor[(528, 1), int32] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  multiply(%492, %493) /* ty=Tensor[(528, ?), int32] */
}

def @func_1164() -> Tensor[(11, 12, 4), float32] {
  %494 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %495 = %494.1;
  %496 = cast(%495, dtype="float32") /* ty=Tensor[(11, 12, 4), float32] */;
  sinh(%496) /* ty=Tensor[(11, 12, 4), float32] */
}

def @func_2940(%var_2932: Tensor[(52), float64]) -> (Tensor[(7, 6, 1), float64], Tensor[(52), float64], Tensor[(6864), int8], Tensor[(52), float64], Tensor[(13, 13, 15), float64]) {
  %497 = @func_2603() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %498 = cast(meta[relay.Constant][29] /* ty=Tensor[(6864), int8] */, dtype="int8") /* ty=Tensor[(6864), int8] */;
  %499 = cast(%var_2932, dtype="float64") /* ty=Tensor[(52), float64] */;
  %500 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %501 = %500.1;
  %502 = cast(%501, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
  %503 = cast(%501, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
  %504 = reshape(%498, newshape=[528, 13]) /* ty=Tensor[(528, 13), int8] */;
  %505 = reshape(%499, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %506 = reshape(%502, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %507 = reshape(%503, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %508 = @func_1397(%504, %505, %506, %507) /* ty=(Tensor[(528, 13), float32], Tensor[(528, 13), bool], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(13, 13, 15), float32], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(528, 1), int8], Tensor[(13, 13, 15), float32], Tensor[(11, 12, 4), int8]) */;
  %509 = cast(%501, dtype="float64") /* ty=Tensor[(13, 13, 15), float64] */;
  %510 = %497.0;
  %511 = %508.3;
  %512 = sin(%509) /* ty=Tensor[(13, 13, 15), float64] */;
  (%510, %511, meta[relay.Constant][29] /* ty=Tensor[(6864), int8] */, %var_2932, %512)
}

def @func_5246(%var_5240: Tensor[(16, 10, 7), uint16], %var_5241: Tensor[(16, 10, 7), uint16]) -> Tensor[(16, 10, 7), bool] {
  %513 = cast(%var_5241, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  %514 = shape_of(%var_5240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%var_5240, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%515, %516) /* ty=Tensor[(16, 10, 7), bool] */
}

def @func_5504() -> Tensor[(528, 1), int8] {
  %517 = @func_5415() /* ty=(Tensor[(528, 1), int8], Tensor[(7, 6, ?), float32]) */;
  %517.0
}

def @func_6002() -> (Tensor[(528, 1), int8],) {
  %518 = @func_5415() /* ty=(Tensor[(528, 1), int8], Tensor[(7, 6, ?), float32]) */;
  %519 = %518.0;
  (%519,)
}

def @func_1728(%var_1703: Tensor[(624), int16]) -> (Tensor[(528, 1), int8], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, ?), int32]) {
  %520 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %521 = cast(%var_1703, dtype="int16") /* ty=Tensor[(624), int16] */;
  %522 = reshape(%521, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %523 = @func_1036(%522) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(1, 280), float32], Tensor[(624), int16]) */;
  %524 = %520.3;
  %525 = %523.3;
  %526 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
  (%524, %525, %var_1703, %526)
}

def @func_1825(%var_1814: Tensor[(630), float64], %var_1815: Tensor[(624), int16]) -> (Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(528, 1), int8], Tensor[(2535), float32], Tensor[(630), float64], Tensor[(624), int16]) {
  %527 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %528 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %529 = cast(%var_1814, dtype="float64") /* ty=Tensor[(630), float64] */;
  %530 = cast(%var_1815, dtype="int16") /* ty=Tensor[(624), int16] */;
  %531 = reshape(%529, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), float64] */;
  %532 = reshape(%530, newshape=[4, 156]) /* ty=Tensor[(4, 156), int16] */;
  %533 = @func_1540(%531, %532) /* ty=(Tensor[(7, 6, 15), float64], Tensor[(24, 26), int16], Tensor[(4, 156), int16], Tensor[(2535), bool], Tensor[(2535), float32]) */;
  %534 = %527.0;
  %535 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
  %536 = %528.0;
  %537 = %533.4;
  (%534, %535, %536, %537, %var_1814, %var_1815)
}

def @func_3825(%var_3776: Tensor[(624), int16]) -> (Tensor[(11, 12, 4), float32], Tensor[(630), float64], Tensor[(210, 3), float64], Tensor[(9, 16, 5), float32], Tensor[(720), float32], Tensor[(7, 6, 1), float64], Tensor[(624), float32], Tensor[(12, 13, 4), bool], Tensor[(280), float32]) {
  %538 = cast(meta[relay.Constant][30] /* ty=Tensor[(210, 3), float64] */, dtype="float64") /* ty=Tensor[(210, 3), float64] */;
  %539 = cast(%var_3776, dtype="int16") /* ty=Tensor[(624), int16] */;
  %540 = reshape(%538, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %541 = reshape(%539, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %542 = @func_1825(%540, %541) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(528, 1), int8], Tensor[(2535), float32], Tensor[(630), float64], Tensor[(624), int16]) */;
  %543 = cast(meta[relay.Constant][31] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %544 = reshape(%543, newshape=[9, 16, 5]) /* ty=Tensor[(9, 16, 5), float32] */;
  %545 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %546 = cast(%var_3776, dtype="float32") /* ty=Tensor[(624), float32] */;
  %547 = cast(meta[relay.Constant][32] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %548 = sin(%546) /* ty=Tensor[(624), float32] */;
  %549 = cast(%548, dtype="int16") /* ty=Tensor[(624), int16] */;
  %550 = reshape(%547, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %551 = reshape(%549, newshape=[12, 13, 4]) /* ty=Tensor[(12, 13, 4), int16] */;
  %552 = @func_630(%550, %551) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) */;
  %553 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
  %554 = %542.4;
  %555 = @func_2687(%544) /* ty=Tensor[(9, 16, 5), float32] */;
  %556 = %545.0;
  %557 = %552.2;
  (%553, %554, meta[relay.Constant][30] /* ty=Tensor[(210, 3), float64] */, %555, meta[relay.Constant][31] /* ty=Tensor[(720), float32] */, %556, %548, %557, meta[relay.Constant][32] /* ty=Tensor[(280), float32] */)
}

def @func_1397(%var_1290: Tensor[(528, 13), int8], %var_1328: Tensor[(52), float64], %var_1331: Tensor[(2535), float32], %var_1375: Tensor[(2535), float32]) -> (Tensor[(528, 13), float32], Tensor[(528, 13), bool], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(13, 13, 15), float32], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(528, 1), int8], Tensor[(13, 13, 15), float32], Tensor[(11, 12, 4), int8]) {
  %558 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %559 = %558.0;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %561 = cast(%var_1290, dtype="float32") /* ty=Tensor[(528, 13), float32] */;
  %562 = cast(%var_1290, dtype="bool") /* ty=Tensor[(528, 13), bool] */;
  %563 = cast(%559, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
  %564 = cast(%var_1328, dtype="float64") /* ty=Tensor[(52), float64] */;
  %565 = reshape(%564, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), float64] */;
  %566 = cast(%var_1331, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %567 = reshape(%566, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
  %568 = cast(%var_1331, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %569 = reshape(%568, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
  %570 = cast(%var_1331, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %571 = atan(%570) /* ty=Tensor[(2535), float32] */;
  %572 = cast(%571, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %573 = acos(%572) /* ty=Tensor[(2535), float32] */;
  %574 = cast(%var_1375, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(1), int32] */;
  %576 = cast(%573, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?), float64] */;
  %578 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %579 = cast(%var_1331, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %580 = reshape(%579, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
  %581 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %582 = divide(%560, %561) /* ty=Tensor[(528, 13), float32] */;
  %583 = greater(%562, %563) /* ty=Tensor[(528, 13), bool] */;
  %584 = @func_249(%565) /* ty=Tensor[(?, 13, 4), int16] */;
  %585 = @func_392(%567) /* ty=Tensor[(13, 13, 15), float32] */;
  %586 = @func_392(%569) /* ty=Tensor[(13, 13, 15), float32] */;
  %587 = power(%576, %577) /* ty=Tensor[(2535), float64] */;
  %588 = %578.3;
  %589 = @func_392(%580) /* ty=Tensor[(13, 13, 15), float32] */;
  %590 = %581.1;
  (%582, %583, %584, %var_1328, %585, %586, %587, %588, %589, %590)
}

def @func_5182(%var_5179: Tensor[(15, 3, 13), float64]) -> Tensor[(15, 3, 13), float64] {
  %591 = cast(%var_5179, dtype="float64") /* ty=Tensor[(15, 3, 13), float64] */;
  acosh(%591) /* ty=Tensor[(15, 3, 13), float64] */
}

def @func_5703() -> (Tensor[(7, 6, 1), float64],) {
  %592 = @func_1664() /* ty=Tensor[(7, 6, 1), float64] */;
  (%592,)
}

def @func_5749(%var_5741: Tensor[(280), float32], %var_5742: Tensor[(624), int16], %var_5745: Tensor[(672), uint32]) -> (Tensor[(528, ?), int32], Tensor[(5, 14, 4), float32], Tensor[(280), float32], Tensor[(624), int16], int8, Tensor[(672), uint32]) {
  %593 = @func_5287() /* ty=(Tensor[(528, ?), int32],) */;
  %594 = cast(%var_5741, dtype="float32") /* ty=Tensor[(280), float32] */;
  %595 = cast(%var_5742, dtype="int16") /* ty=Tensor[(624), int16] */;
  %596 = reshape(%594, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %597 = reshape(%595, newshape=[12, 13, 4]) /* ty=Tensor[(12, 13, 4), int16] */;
  %598 = @func_630(%596, %597) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) */;
  %599 = cast(%var_5745, dtype="uint32") /* ty=Tensor[(672), uint32] */;
  %600 = reshape(%599, newshape=[4, 14, 12]) /* ty=Tensor[(4, 14, 12), uint32] */;
  %601 = @func_3539(%600) /* ty=(Tensor[(4, 14, 12), bool], Tensor[(4, 14, 12), float64], Tensor[(11, 12, 4), float32], Tensor[(3, 42), float32], Tensor[(528, 1), int8], int8) */;
  %602 = %593.0;
  %603 = %598.0;
  %604 = %601.5;
  (%602, %603, %var_5741, %var_5742, %604, %var_5745)
}

def @func_4203() -> Tensor[(528, ?), int32] {
  @func_1233() /* ty=Tensor[(528, ?), int32] */
}

def @func_837() -> (Tensor[(7, 6, 1), float64],) {
  %605 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 6, 1), float64] */, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %606 = tan(%605) /* ty=Tensor[(7, 6, 1), float64] */;
  (%606,)
}

def @func_3657(%var_3649: Tensor[(624), int16]) -> (Tensor[(11, 12, 4), int8], Tensor[(624), int16], Tensor[(528, 1), float64]) {
  %607 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %608 = cast(meta[relay.Constant][34] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %609 = cast(%var_3649, dtype="int16") /* ty=Tensor[(624), int16] */;
  %610 = reshape(%608, newshape=[]) /* ty=int8 */;
  %611 = reshape(%609, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %612 = @func_3467(%610, %611) /* ty=(Tensor[(2535), float32], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, 1), uint64], Tensor[(5, 56), float32], Tensor[(10, 63), uint32], Tensor[(7, 6, 1), float64]) */;
  %613 = %612.3;
  %614 = cast(meta[relay.Constant][34] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %615 = cast(%613, dtype="float64") /* ty=Tensor[(528, 1), float64] */;
  %616 = %607.1;
  %617 = add(%614, %615) /* ty=Tensor[(528, 1), float64] */;
  (%616, %var_3649, %617)
}

def @func_5051() -> (Tensor[(7, 6, ?), bool],) {
  %618 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %619 = %618.0;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(7, 6, 1), float32] */;
  %621 = cosh(%620) /* ty=Tensor[(7, 6, 1), float32] */;
  %622 = cast(%619, dtype="bool") /* ty=Tensor[(7, 6, 1), bool] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="bool") /* ty=Tensor[(7, 6, 1), bool] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %626 = equal(%624, %625) /* ty=Tensor[(7, 6, ?), bool] */;
  (%626,)
}

def @func_2402(%var_2369: Tensor[(7, 6, 6), float64], %var_2378: Tensor[(13, 13, 15), float32]) -> (Tensor[(7, 6, 6), uint64], Tensor[(13, 13, 15), int64]) {
  %627 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %628 = %627.0;
  %629 = cast(%628, dtype="uint64") /* ty=Tensor[(7, 6, 1), uint64] */;
  %630 = cast(%var_2369, dtype="uint64") /* ty=Tensor[(7, 6, 6), uint64] */;
  %631 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %632 = %631.1;
  %633 = cast(%var_2378, dtype="int64") /* ty=Tensor[(13, 13, 15), int64] */;
  %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%632, dtype="int64") /* ty=Tensor[(13, 13, 15), int64] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %637 = bitwise_xor(%629, %630) /* ty=Tensor[(7, 6, 6), uint64] */;
  %638 = add(%635, %636) /* ty=Tensor[(13, 13, 15), int64] */;
  (%637, %638)
}

def @func_3997() -> Tensor[(7, 6, 1), float64] {
  %639 = @func_2603() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %639.0
}

def @func_4521() -> (Tensor[(528, 13), bool],) {
  %640 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
  %641 = cast(%640, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
  %642 = cast(meta[relay.Constant][35] /* ty=Tensor[(528, 13), int8] */, dtype="bool") /* ty=Tensor[(528, 13), bool] */;
  %643 = greater_equal(%641, %642) /* ty=Tensor[(528, 13), bool] */;
  (%643,)
}

def @func_1036(%var_1026: Tensor[(624), int16]) -> (Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(1, 280), float32], Tensor[(624), int16]) {
  %644 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %645 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 280), float32] */, dtype="float32") /* ty=Tensor[(1, 280), float32] */;
  %646 = cast(%var_1026, dtype="int16") /* ty=Tensor[(624), int16] */;
  %647 = reshape(%645, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %648 = reshape(%646, newshape=[12, 13, 4]) /* ty=Tensor[(12, 13, 4), int16] */;
  %649 = @func_630(%647, %648) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) */;
  %650 = %644.0;
  %651 = %649.2;
  (%650, %651, meta[relay.Constant][36] /* ty=Tensor[(1, 280), float32] */, %var_1026)
}

def @func_4988(%var_4943: Tensor[(624), int16], %var_4944: Tensor[(10, 63), float64], %var_4948: Tensor[(5, 126), float64]) -> (Tensor[(528, 1), int8], Tensor[(624), int16], Tensor[(5, 126), uint64], Tensor[(10, 63), int64], Tensor[(5, 126), float32]) {
  %652 = cast(%var_4943, dtype="int16") /* ty=Tensor[(624), int16] */;
  %653 = cast(%var_4944, dtype="float64") /* ty=Tensor[(10, 63), float64] */;
  %654 = reshape(%652, newshape=[2, 312]) /* ty=Tensor[(2, 312), int16] */;
  %655 = reshape(%653, newshape=[5, 126]) /* ty=Tensor[(5, 126), float64] */;
  %656 = @func_4428(%654, %655) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(624), int16], Tensor[(2, 312), int16], Tensor[(4, 156), int16], Tensor[(5, 126), float64]) */;
  %657 = %656.4;
  %658 = cast(%var_4948, dtype="uint64") /* ty=Tensor[(5, 126), uint64] */;
  %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(2), int32] */;
  %660 = cast(%657, dtype="uint64") /* ty=Tensor[(5, 126), uint64] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %662 = cast(%657, dtype="int64") /* ty=Tensor[(5, 126), int64] */;
  %663 = shape_of(%var_4944, dtype="int32") /* ty=Tensor[(2), int32] */;
  %664 = cast(%var_4944, dtype="int64") /* ty=Tensor[(10, 63), int64] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %666 = cast(%var_4944, dtype="uint8") /* ty=Tensor[(10, 63), uint8] */;
  %667 = shape_of(%var_4948, dtype="int32") /* ty=Tensor[(2), int32] */;
  %668 = cast(%var_4948, dtype="uint8") /* ty=Tensor[(5, 126), uint8] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %670 = bitwise_xor(%668, %669) /* ty=Tensor[(5, 126), uint8] */;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(5, 126), float64] */;
  %672 = sqrt(%671) /* ty=Tensor[(5, 126), float64] */;
  %673 = cast(%672, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
  %674 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
  %675 = bitwise_and(%660, %661) /* ty=Tensor[(5, 126), uint64] */;
  %676 = minimum(%664, %665) /* ty=Tensor[(10, 63), int64] */;
  %677 = rsqrt(%673) /* ty=Tensor[(5, 126), float32] */;
  (%674, %var_4943, %675, %676, %677)
}

def @func_3889() -> (Tensor[(?, 15, 12), bool], Tensor[(7, 6, 1), float64]) {
  %678 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 15, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 12), float64] */;
  %679 = log10(%678) /* ty=Tensor[(1, 15, 12), float64] */;
  %680 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 15, 12), float64] */, dtype="bool") /* ty=Tensor[(1, 15, 12), bool] */;
  %681 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%679, dtype="bool") /* ty=Tensor[(1, 15, 12), bool] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %684 = @func_3137() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %685 = equal(%682, %683) /* ty=Tensor[(?, 15, 12), bool] */;
  %686 = %684.0;
  (%685, %686)
}

def @func_5028() -> (int8, Tensor[(528, 1), float32]) {
  %687 = @func_3731() /* ty=(Tensor[(528, 1), float32],) */;
  %688 = @func_4254() /* ty=int8 */;
  %689 = %687.0;
  (%688, %689)
}

def @func_4264() -> Tensor[(528, 1), int8] {
  @func_2163() /* ty=Tensor[(528, 1), int8] */
}

def @func_3467(%var_3396: int8, %var_3400: Tensor[(624), int16]) -> (Tensor[(2535), float32], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, 1), uint64], Tensor[(5, 56), float32], Tensor[(10, 63), uint32], Tensor[(7, 6, 1), float64]) {
  %690 = cast(%var_3396, dtype="int8") /* ty=int8 */;
  %691 = @func_3312() /* ty=(Tensor[(528, 1), int32],) */;
  %692 = %691.0;
  %693 = cast(%692, dtype="int8") /* ty=Tensor[(528, 1), int8] */;
  %694 = reshape(%690, newshape=[]) /* ty=int8 */;
  %695 = reshape(%693, newshape=[528]) /* ty=Tensor[(528), int8] */;
  %696 = @func_1607(%694, %695) /* ty=(Tensor[(2535), float32], Tensor[(52), float64], int8, Tensor[(528), int8], Tensor[(13, 13, 15), float32], Tensor[(7, 6, 1), float64]) */;
  %697 = cast(%var_3400, dtype="int16") /* ty=Tensor[(624), int16] */;
  %698 = reshape(%697, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %699 = @func_1036(%698) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(1, 280), float32], Tensor[(624), int16]) */;
  %700 = cast(%692, dtype="uint64") /* ty=Tensor[(528, 1), uint64] */;
  %701 = cast(%var_3396, dtype="uint64") /* ty=uint64 */;
  %702 = %696.0;
  %703 = cast(%702, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %704 = cast(meta[relay.Constant][38] /* ty=Tensor[(10, 63), float64] */, dtype="float64") /* ty=Tensor[(10, 63), float64] */;
  %705 = cast(%702, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %706 = reshape(%703, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %707 = reshape(%704, newshape=[70, 9]) /* ty=Tensor[(70, 9), float64] */;
  %708 = reshape(%705, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %709 = @func_2528(%706, %707, %708) /* ty=(Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) */;
  %710 = cast(meta[relay.Constant][38] /* ty=Tensor[(10, 63), float64] */, dtype="uint32") /* ty=Tensor[(10, 63), uint32] */;
  %711 = cast(%var_3396, dtype="uint32") /* ty=uint32 */;
  %712 = @func_2603() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %713 = %699.3;
  %714 = subtract(%700, %701) /* ty=Tensor[(528, 1), uint64] */;
  %715 = %709.5;
  %716 = right_shift(%710, %711) /* ty=Tensor[(10, 63), uint32] */;
  %717 = %712.0;
  (%702, %713, %var_3400, %714, %715, %716, %717)
}

def @func_4721() -> (Tensor[(7, 6, 1), float64], Tensor[(528, 13), bool], Tensor[(528, ?), int32]) {
  %718 = @func_4521() /* ty=(Tensor[(528, 13), bool],) */;
  %719 = @func_3352() /* ty=Tensor[(7, 6, 1), float64] */;
  %720 = %718.0;
  %721 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
  (%719, %720, %721)
}

def @func_4286(%var_4278: int64, %var_4279: Tensor[(2, 14, 13), int64]) -> Tensor[(2, 14, 13), int64] {
  %722 = cast(%var_4278, dtype="int64") /* ty=int64 */;
  %723 = cast(%var_4279, dtype="int64") /* ty=Tensor[(2, 14, 13), int64] */;
  multiply(%722, %723) /* ty=Tensor[(2, 14, 13), int64] */
}

def @func_4908(%var_4851: int8) -> (Tensor[(7, 6, 1), float64], Tensor[(624), int16], Tensor[(624), int16], Tensor[(630), float64], Tensor[(5, 14, 4), float32], Tensor[(11, 12, 4), int64], Tensor[(528, ?), int32], Tensor[(7, 6, 2535), float64]) {
  %724 = cast(%var_4851, dtype="int8") /* ty=int8 */;
  %725 = cast(meta[relay.Constant][39] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %726 = reshape(%724, newshape=[]) /* ty=int8 */;
  %727 = reshape(%725, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %728 = @func_3467(%726, %727) /* ty=(Tensor[(2535), float32], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, 1), uint64], Tensor[(5, 56), float32], Tensor[(10, 63), uint32], Tensor[(7, 6, 1), float64]) */;
  %729 = cast(meta[relay.Constant][40] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %730 = cast(meta[relay.Constant][39] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %731 = reshape(%729, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %732 = reshape(%730, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %733 = @func_1825(%731, %732) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(528, 1), int8], Tensor[(2535), float32], Tensor[(630), float64], Tensor[(624), int16]) */;
  %734 = cast(meta[relay.Constant][41] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %735 = cast(meta[relay.Constant][40] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %736 = cast(meta[relay.Constant][41] /* ty=Tensor[(2535), float32] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %737 = reshape(%734, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %738 = reshape(%735, newshape=[70, 9]) /* ty=Tensor[(70, 9), float64] */;
  %739 = reshape(%736, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %740 = @func_2528(%737, %738, %739) /* ty=(Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) */;
  %741 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
  %742 = cast(%741, dtype="int64") /* ty=Tensor[(11, 12, 4), int64] */;
  %743 = cast(%var_4851, dtype="int64") /* ty=int64 */;
  %744 = @func_4022() /* ty=Tensor[(7, 6, 1), float64] */;
  %745 = cast(meta[relay.Constant][41] /* ty=Tensor[(2535), float32] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %746 = cast(%744, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %747 = %728.6;
  %748 = %733.5;
  %749 = %740.4;
  %750 = right_shift(%742, %743) /* ty=Tensor[(11, 12, 4), int64] */;
  %751 = @func_4820() /* ty=Tensor[(528, ?), int32] */;
  %752 = floor_mod(%745, %746) /* ty=Tensor[(7, 6, 2535), float64] */;
  (%747, meta[relay.Constant][39] /* ty=Tensor[(624), int16] */, %748, meta[relay.Constant][40] /* ty=Tensor[(630), float64] */, %749, %750, %751, %752)
}

def @func_1197() -> (Tensor[(528, 1), int8],) {
  %753 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %754 = %753.3;
  (%754,)
}

def @func_1115() -> (Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) {
  %755 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %756 = cast(meta[relay.Constant][42] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %757 = cast(meta[relay.Constant][43] /* ty=Tensor[(528, 1), int8] */, dtype="int8") /* ty=Tensor[(528, 1), int8] */;
  %758 = reshape(%756, newshape=[]) /* ty=int8 */;
  %759 = reshape(%757, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), int8] */;
  %760 = @func_654(%758, %759) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) */;
  %761 = %755.0;
  %762 = %760.0;
  (%761, %762, meta[relay.Constant][42] /* ty=int8 */, meta[relay.Constant][43] /* ty=Tensor[(528, 1), int8] */)
}

def @func_5643() -> (Tensor[(7, 6, 1), float64],) {
  %763 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %764 = %763.0;
  (%764,)
}

def @func_2993() -> Tensor[(528, 1), int8] {
  @func_2890() /* ty=Tensor[(528, 1), int8] */
}

def @func_2668(%var_2636: Tensor[(10, 63), float64]) -> (Tensor[(528, 11), bool], Tensor[(2535), float32], Tensor[(5, 14, 4), float64], Tensor[(528, ?), int32], Tensor[(1, 624), int16], Tensor[(528, 1), int8], Tensor[(10, 63), float32]) {
  %765 = @func_2328() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) */;
  %766 = cast(meta[relay.Constant][44] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %767 = cast(%var_2636, dtype="float64") /* ty=Tensor[(10, 63), float64] */;
  %768 = cast(meta[relay.Constant][44] /* ty=Tensor[(2535), float32] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %769 = reshape(%766, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %770 = reshape(%767, newshape=[70, 9]) /* ty=Tensor[(70, 9), float64] */;
  %771 = reshape(%768, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %772 = @func_2528(%769, %770, %771) /* ty=(Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) */;
  %773 = %772.4;
  %774 = cast(%773, dtype="float64") /* ty=Tensor[(5, 14, 4), float64] */;
  %775 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 624), int16] */, dtype="int16") /* ty=Tensor[(1, 624), int16] */;
  %776 = reshape(%775, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %777 = @func_1728(%776) /* ty=(Tensor[(528, 1), int8], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, ?), int32]) */;
  %778 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %779 = cast(%var_2636, dtype="float32") /* ty=Tensor[(10, 63), float32] */;
  %780 = cos(%779) /* ty=Tensor[(10, 63), float32] */;
  %781 = cast(%780, dtype="float32") /* ty=Tensor[(10, 63), float32] */;
  %782 = %765.1;
  %783 = cosh(%774) /* ty=Tensor[(5, 14, 4), float64] */;
  %784 = %777.3;
  %785 = %778.3;
  %786 = exp(%781) /* ty=Tensor[(10, 63), float32] */;
  (%782, meta[relay.Constant][44] /* ty=Tensor[(2535), float32] */, %783, %784, meta[relay.Constant][45] /* ty=Tensor[(1, 624), int16] */, %785, %786)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3844(%var_3842: Tensor[(8, 16, 8), float32]) -> (Tensor[(8, 16, 8), float32], Tensor[(528, 1), int8]) {
  @func_3841(%var_3842) /* ty=(Tensor[(8, 16, 8), float32], Tensor[(528, 1), int8]) */
}

def @func_2329() -> (Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) {
  %7 = fn () -> (Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) {
    %0 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
    %1 = @func_2163() /* ty=Tensor[(528, 1), int8] */;
    %2 = cast(%1, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
    %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(528, 11), int8] */, dtype="bool") /* ty=Tensor[(528, 11), bool] */;
    %4 = %0.0;
    %5 = greater_equal(%2, %3) /* ty=Tensor[(528, 11), bool] */;
    %6 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
    (%4, %5, %6)
  };
  %7() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) */
}

def @func_6136(%var_6135: Tensor[(16, 7, 15), float32]) -> (Tensor[(16, 7, 15), float32], int8, Tensor[(528, 16), bool], Tensor[(8448), int32]) {
  %15 = fn (%var_6110: Tensor[(16, 7, 15), float32]) -> (Tensor[(16, 7, 15), float32], int8, Tensor[(528, 16), bool], Tensor[(8448), int32]) {
    %8 = cast(%var_6110, dtype="float32") /* ty=Tensor[(16, 7, 15), float32] */;
    %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(8448), int32] */, dtype="int32") /* ty=Tensor[(8448), int32] */;
    %10 = reshape(%9, newshape=[528, 16]) /* ty=Tensor[(528, 16), int32] */;
    %11 = @func_1994(%10) /* ty=(Tensor[(528, 16), bool], Tensor[(528, ?), float64], Tensor[(528, 16), bool]) */;
    %12 = cos(%8) /* ty=Tensor[(16, 7, 15), float32] */;
    %13 = @func_4254() /* ty=int8 */;
    %14 = %11.2;
    (%12, %13, %14, meta[relay.Constant][1] /* ty=Tensor[(8448), int32] */)
  };
  %15(%var_6135) /* ty=(Tensor[(16, 7, 15), float32], int8, Tensor[(528, 16), bool], Tensor[(8448), int32]) */
}

def @func_4330(%var_4329: Tensor[(12, 10, 16), float32]) -> (Tensor[(528, 1), float32], Tensor[(12, 10, 16), int8]) {
  %23 = fn (%var_4319: Tensor[(12, 10, 16), float32]) -> (Tensor[(528, 1), float32], Tensor[(12, 10, 16), int8]) {
    %16 = @func_4264() /* ty=Tensor[(528, 1), int8] */;
    %17 = cast(%16, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
    %18 = @func_3162() /* ty=Tensor[(1, 10, 16), float32] */;
    %19 = cast(%18, dtype="int8") /* ty=Tensor[(1, 10, 16), int8] */;
    %20 = cast(%var_4319, dtype="int8") /* ty=Tensor[(12, 10, 16), int8] */;
    %21 = atan(%17) /* ty=Tensor[(528, 1), float32] */;
    %22 = maximum(%19, %20) /* ty=Tensor[(12, 10, 16), int8] */;
    (%21, %22)
  };
  %23(%var_4329) /* ty=(Tensor[(528, 1), float32], Tensor[(12, 10, 16), int8]) */
}

def @func_1402(%var_1398: Tensor[(528, 13), int8], %var_1399: Tensor[(52), float64], %var_1400: Tensor[(2535), float32], %var_1401: Tensor[(2535), float32]) -> (Tensor[(528, 13), float32], Tensor[(528, 13), bool], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(13, 13, 15), float32], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(528, 1), int8], Tensor[(13, 13, 15), float32], Tensor[(11, 12, 4), int8]) {
  %57 = fn (%var_1290: Tensor[(528, 13), int8], %var_1328: Tensor[(52), float64], %var_1331: Tensor[(2535), float32], %var_1375: Tensor[(2535), float32]) -> (Tensor[(528, 13), float32], Tensor[(528, 13), bool], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(13, 13, 15), float32], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(528, 1), int8], Tensor[(13, 13, 15), float32], Tensor[(11, 12, 4), int8]) {
    %24 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
    %25 = %24.0;
    %26 = cast(%25, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
    %27 = cast(%var_1290, dtype="float32") /* ty=Tensor[(528, 13), float32] */;
    %28 = cast(%var_1290, dtype="bool") /* ty=Tensor[(528, 13), bool] */;
    %29 = cast(%25, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
    %30 = cast(%var_1328, dtype="float64") /* ty=Tensor[(52), float64] */;
    %31 = reshape(%30, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), float64] */;
    %32 = cast(%var_1331, dtype="float32") /* ty=Tensor[(2535), float32] */;
    %33 = reshape(%32, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
    %34 = cast(%var_1331, dtype="float32") /* ty=Tensor[(2535), float32] */;
    %35 = reshape(%34, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
    %36 = cast(%var_1331, dtype="float32") /* ty=Tensor[(2535), float32] */;
    %37 = atan(%36) /* ty=Tensor[(2535), float32] */;
    %38 = cast(%37, dtype="float32") /* ty=Tensor[(2535), float32] */;
    %39 = acos(%38) /* ty=Tensor[(2535), float32] */;
    %40 = cast(%var_1375, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(1), int32] */;
    %42 = cast(%39, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?), float64] */;
    %44 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
    %45 = cast(%var_1331, dtype="float32") /* ty=Tensor[(2535), float32] */;
    %46 = reshape(%45, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
    %47 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
    %48 = divide(%26, %27) /* ty=Tensor[(528, 13), float32] */;
    %49 = greater(%28, %29) /* ty=Tensor[(528, 13), bool] */;
    %50 = @func_249(%31) /* ty=Tensor[(?, 13, 4), int16] */;
    %51 = @func_392(%33) /* ty=Tensor[(13, 13, 15), float32] */;
    %52 = @func_392(%35) /* ty=Tensor[(13, 13, 15), float32] */;
    %53 = power(%42, %43) /* ty=Tensor[(2535), float64] */;
    %54 = %44.3;
    %55 = @func_392(%46) /* ty=Tensor[(13, 13, 15), float32] */;
    %56 = %47.1;
    (%48, %49, %50, %var_1328, %51, %52, %53, %54, %55, %56)
  };
  %57(%var_1398, %var_1399, %var_1400, %var_1401) /* ty=(Tensor[(528, 13), float32], Tensor[(528, 13), bool], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(13, 13, 15), float32], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(528, 1), int8], Tensor[(13, 13, 15), float32], Tensor[(11, 12, 4), int8]) */
}

def @func_5705() -> (Tensor[(7, 6, 1), float64],) {
  @func_5703() /* ty=(Tensor[(7, 6, 1), float64],) */
}

def @func_955(%var_953: Tensor[(2535), float32], %var_954: Tensor[(528), int8]) -> (Tensor[(7, 6, 1), float64], Tensor[(52), float64], Tensor[(624), int16], Tensor[(140, 2), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float32], Tensor[(11, 12, 4), int8], Tensor[(528), int8], Tensor[(140, 2), bool]) {
  @func_951(%var_953, %var_954) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(52), float64], Tensor[(624), int16], Tensor[(140, 2), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float32], Tensor[(11, 12, 4), int8], Tensor[(528), int8], Tensor[(140, 2), bool]) */
}

def @func_657(%var_655: int8, %var_656: Tensor[(11, 12, 4), int8]) -> (Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) {
  %64 = fn (%var_638: int8, %var_639: Tensor[(11, 12, 4), int8]) -> (Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) {
    %58 = cast(%var_638, dtype="int8") /* ty=int8 */;
    %59 = cast(%var_639, dtype="int8") /* ty=Tensor[(11, 12, 4), int8] */;
    %60 = cast(meta[relay.Constant][2] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
    %61 = reshape(%60, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), float64] */;
    %62 = maximum(%58, %59) /* ty=Tensor[(11, 12, 4), int8] */;
    %63 = @func_249(%61) /* ty=Tensor[(?, 13, 4), int16] */;
    (%62, %63, meta[relay.Constant][2] /* ty=Tensor[(52), float64] */)
  };
  %64(%var_655, %var_656) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) */
}

def @func_3671() -> (Tensor[(7, 6, 1), float64],) {
  %65 = @func_3352() /* ty=Tensor[(7, 6, 1), float64] */;
  (%65,)
}

def @func_4523() -> (Tensor[(528, 13), bool],) {
  @func_4521() /* ty=(Tensor[(528, 13), bool],) */
}

def @func_5455() -> (Tensor[(528, ?), int32],) {
  @func_5453() /* ty=(Tensor[(528, ?), int32],) */
}

def @func_1198() -> (Tensor[(528, 1), int8],) {
  %68 = fn () -> (Tensor[(528, 1), int8],) {
    %66 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
    %67 = %66.3;
    (%67,)
  };
  %68() /* ty=(Tensor[(528, 1), int8],) */
}

def @func_4205() -> Tensor[(528, ?), int32] {
  @func_4203() /* ty=Tensor[(528, ?), int32] */
}

def @func_2604() -> (Tensor[(7, 6, 1), float64],) {
  %71 = fn () -> (Tensor[(7, 6, 1), float64],) {
    %69 = @func_2328() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) */;
    %70 = %69.0;
    (%70,)
  };
  %71() /* ty=(Tensor[(7, 6, 1), float64],) */
}

def @func_3162() -> Tensor[(1, 10, 16), float32] {
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 10, 16), float32] */, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  cosh(%72) /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_4645(%var_4642: Tensor[(624, 1), int16], %var_4643: Tensor[(2535), float32], %var_4644: Tensor[(10, 63), float64]) -> (Tensor[(528, 1), int8], Tensor[(528, ?), float64], Tensor[(624), int16], Tensor[(819), int8], Tensor[(624, 1), int16], Tensor[(52), float64], int8, Tensor[(2535), bool], Tensor[(2535), float32], Tensor[(10, 63), float64]) {
  @func_4640(%var_4642, %var_4643, %var_4644) /* ty=(Tensor[(528, 1), int8], Tensor[(528, ?), float64], Tensor[(624), int16], Tensor[(819), int8], Tensor[(624, 1), int16], Tensor[(52), float64], int8, Tensor[(2535), bool], Tensor[(2535), float32], Tensor[(10, 63), float64]) */
}

def @func_5504() -> Tensor[(528, 1), int8] {
  %73 = @func_5415() /* ty=(Tensor[(528, 1), int8], Tensor[(7, 6, ?), float32]) */;
  %73.0
}

def @func_2304(%var_2301: Tensor[(3, 6, 16), uint8], %var_2302: Tensor[(3, 6, 16), uint8], %var_2303: Tensor[(3, 6, 16), uint8]) -> (Tensor[(3, 6, 16), uint8], Tensor[(11, 12, 4), float32], Tensor[(3, 6, 16), bool], Tensor[(13, 13, 15), float32], Tensor[(169, 15), float32]) {
  %88 = fn (%var_2258: Tensor[(3, 6, 16), uint8], %var_2259: Tensor[(3, 6, 16), uint8], %var_2283: Tensor[(3, 6, 16), uint8]) -> (Tensor[(3, 6, 16), uint8], Tensor[(11, 12, 4), float32], Tensor[(3, 6, 16), bool], Tensor[(13, 13, 15), float32], Tensor[(169, 15), float32]) {
    %74 = cast(%var_2259, dtype="uint8") /* ty=Tensor[(3, 6, 16), uint8] */;
    %75 = shape_of(%var_2258, dtype="int32") /* ty=Tensor[(3), int32] */;
    %76 = cast(%var_2258, dtype="uint8") /* ty=Tensor[(3, 6, 16), uint8] */;
    %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %78 = cast(%var_2283, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
    %79 = shape_of(%var_2259, dtype="int32") /* ty=Tensor[(3), int32] */;
    %80 = cast(%var_2259, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
    %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %82 = cast(meta[relay.Constant][4] /* ty=Tensor[(169, 15), float32] */, dtype="float32") /* ty=Tensor[(169, 15), float32] */;
    %83 = reshape(%82, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
    %84 = minimum(%76, %77) /* ty=Tensor[(3, 6, 16), uint8] */;
    %85 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
    %86 = less_equal(%80, %81) /* ty=Tensor[(3, 6, 16), bool] */;
    %87 = @func_392(%83) /* ty=Tensor[(13, 13, 15), float32] */;
    (%84, %85, %86, %87, meta[relay.Constant][4] /* ty=Tensor[(169, 15), float32] */)
  };
  %88(%var_2301, %var_2302, %var_2303) /* ty=(Tensor[(3, 6, 16), uint8], Tensor[(11, 12, 4), float32], Tensor[(3, 6, 16), bool], Tensor[(13, 13, 15), float32], Tensor[(169, 15), float32]) */
}

def @func_1607(%var_1576: int8, %var_1577: Tensor[(528), int8]) -> (Tensor[(2535), float32], Tensor[(52), float64], int8, Tensor[(528), int8], Tensor[(13, 13, 15), float32], Tensor[(7, 6, 1), float64]) {
  %89 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %90 = cast(%var_1576, dtype="int8") /* ty=int8 */;
  %91 = cast(%var_1577, dtype="int8") /* ty=Tensor[(528), int8] */;
  %92 = reshape(%90, newshape=[]) /* ty=int8 */;
  %93 = reshape(%91, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), int8] */;
  %94 = @func_654(%92, %93) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) */;
  %95 = %89.2;
  %96 = cast(%95, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %97 = cast(%var_1577, dtype="int8") /* ty=Tensor[(528), int8] */;
  %98 = reshape(%96, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %99 = reshape(%97, newshape=[528]) /* ty=Tensor[(528), int8] */;
  %100 = @func_951(%98, %99) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(52), float64], Tensor[(624), int16], Tensor[(140, 2), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float32], Tensor[(11, 12, 4), int8], Tensor[(528), int8], Tensor[(140, 2), bool]) */;
  %101 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %102 = %94.2;
  %103 = %100.4;
  %104 = %101.0;
  (%95, %102, %var_1576, %var_1577, %103, %104)
}

def @func_1666() -> Tensor[(7, 6, 1), float64] {
  @func_1664() /* ty=Tensor[(7, 6, 1), float64] */
}

def @func_5933(%var_5923: Tensor[(7, 13, 11), float64]) -> (Tensor[(7, 13, 11), float64], Tensor[(7, 6, 1), float64]) {
  %105 = cast(%var_5923, dtype="float64") /* ty=Tensor[(7, 13, 11), float64] */;
  %106 = @func_3137() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %107 = log2(%105) /* ty=Tensor[(7, 13, 11), float64] */;
  %108 = %106.0;
  (%107, %108)
}

def @func_951(%var_916: Tensor[(2535), float32], %var_921: Tensor[(528), int8]) -> (Tensor[(7, 6, 1), float64], Tensor[(52), float64], Tensor[(624), int16], Tensor[(140, 2), float64], Tensor[(13, 13, 15), float32], Tensor[(2535), float32], Tensor[(11, 12, 4), int8], Tensor[(528), int8], Tensor[(140, 2), bool]) {
  %109 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %110 = cast(meta[relay.Constant][5] /* ty=Tensor[(140, 2), float32] */, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %111 = cast(meta[relay.Constant][6] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %112 = reshape(%110, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %113 = reshape(%111, newshape=[12, 13, 4]) /* ty=Tensor[(12, 13, 4), int16] */;
  %114 = @func_630(%112, %113) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) */;
  %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(140, 2), float32] */, dtype="float64") /* ty=Tensor[(140, 2), float64] */;
  %116 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(140, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %117 = cast(meta[relay.Constant][5] /* ty=Tensor[(140, 2), float32] */, dtype="float64") /* ty=Tensor[(140, 2), float64] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %119 = cast(%var_916, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %120 = reshape(%119, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
  %121 = cast(meta[relay.Constant][8] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %122 = cast(%var_921, dtype="int8") /* ty=Tensor[(528), int8] */;
  %123 = reshape(%121, newshape=[]) /* ty=int8 */;
  %124 = reshape(%122, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), int8] */;
  %125 = @func_654(%123, %124) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) */;
  %126 = cast(meta[relay.Constant][5] /* ty=Tensor[(140, 2), float32] */, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %127 = cosh(%126) /* ty=Tensor[(140, 2), float32] */;
  %128 = cast(%127, dtype="bool") /* ty=Tensor[(140, 2), bool] */;
  %129 = cast(meta[relay.Constant][8] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %130 = %109.0;
  %131 = %114.1;
  %132 = floor_mod(%117, %118) /* ty=Tensor[(140, 2), float64] */;
  %133 = @func_392(%120) /* ty=Tensor[(13, 13, 15), float32] */;
  %134 = %125.0;
  %135 = greater_equal(%128, %129) /* ty=Tensor[(140, 2), bool] */;
  (%130, %131, meta[relay.Constant][6] /* ty=Tensor[(624), int16] */, %132, %133, %var_916, %134, %var_921, %135)
}

def @func_3113(%var_3111: Tensor[(8448), int32], %var_3112: Tensor[(52), float64]) -> (int8, Tensor[(11, 12, 4), float32], Tensor[(624), int16], Tensor[(528, 16), int64], Tensor[(8448), bool], Tensor[(8448), float64], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(7, 6, 8448), bool]) {
  @func_3109(%var_3111, %var_3112) /* ty=(int8, Tensor[(11, 12, 4), float32], Tensor[(624), int16], Tensor[(528, 16), int64], Tensor[(8448), bool], Tensor[(8448), float64], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(7, 6, 8448), bool]) */
}

def @func_4378(%var_4376: Tensor[(528, 1), int32]) -> Tensor[(528, ?), bool] {
  @func_4375(%var_4376) /* ty=Tensor[(528, ?), bool] */
}

def @func_1829(%var_1827: Tensor[(630), float64], %var_1828: Tensor[(624), int16]) -> (Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(528, 1), int8], Tensor[(2535), float32], Tensor[(630), float64], Tensor[(624), int16]) {
  @func_1825(%var_1827, %var_1828) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(528, 1), int8], Tensor[(2535), float32], Tensor[(630), float64], Tensor[(624), int16]) */
}

def @func_4910(%var_4909: int8) -> (Tensor[(7, 6, 1), float64], Tensor[(624), int16], Tensor[(624), int16], Tensor[(630), float64], Tensor[(5, 14, 4), float32], Tensor[(11, 12, 4), int64], Tensor[(528, ?), int32], Tensor[(7, 6, 2535), float64]) {
  %165 = fn (%var_4851: int8) -> (Tensor[(7, 6, 1), float64], Tensor[(624), int16], Tensor[(624), int16], Tensor[(630), float64], Tensor[(5, 14, 4), float32], Tensor[(11, 12, 4), int64], Tensor[(528, ?), int32], Tensor[(7, 6, 2535), float64]) {
    %136 = cast(%var_4851, dtype="int8") /* ty=int8 */;
    %137 = cast(meta[relay.Constant][9] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
    %138 = reshape(%136, newshape=[]) /* ty=int8 */;
    %139 = reshape(%137, newshape=[624]) /* ty=Tensor[(624), int16] */;
    %140 = @func_3467(%138, %139) /* ty=(Tensor[(2535), float32], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, 1), uint64], Tensor[(5, 56), float32], Tensor[(10, 63), uint32], Tensor[(7, 6, 1), float64]) */;
    %141 = cast(meta[relay.Constant][10] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %142 = cast(meta[relay.Constant][9] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
    %143 = reshape(%141, newshape=[630]) /* ty=Tensor[(630), float64] */;
    %144 = reshape(%142, newshape=[624]) /* ty=Tensor[(624), int16] */;
    %145 = @func_1825(%143, %144) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(528, 1), int8], Tensor[(2535), float32], Tensor[(630), float64], Tensor[(624), int16]) */;
    %146 = cast(meta[relay.Constant][11] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
    %147 = cast(meta[relay.Constant][10] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %148 = cast(meta[relay.Constant][11] /* ty=Tensor[(2535), float32] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %149 = reshape(%146, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
    %150 = reshape(%147, newshape=[70, 9]) /* ty=Tensor[(70, 9), float64] */;
    %151 = reshape(%148, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %152 = @func_2528(%149, %150, %151) /* ty=(Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) */;
    %153 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
    %154 = cast(%153, dtype="int64") /* ty=Tensor[(11, 12, 4), int64] */;
    %155 = cast(%var_4851, dtype="int64") /* ty=int64 */;
    %156 = @func_4022() /* ty=Tensor[(7, 6, 1), float64] */;
    %157 = cast(meta[relay.Constant][11] /* ty=Tensor[(2535), float32] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %158 = cast(%156, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
    %159 = %140.6;
    %160 = %145.5;
    %161 = %152.4;
    %162 = right_shift(%154, %155) /* ty=Tensor[(11, 12, 4), int64] */;
    %163 = @func_4820() /* ty=Tensor[(528, ?), int32] */;
    %164 = floor_mod(%157, %158) /* ty=Tensor[(7, 6, 2535), float64] */;
    (%159, meta[relay.Constant][9] /* ty=Tensor[(624), int16] */, %160, meta[relay.Constant][10] /* ty=Tensor[(630), float64] */, %161, %162, %163, %164)
  };
  %165(%var_4909) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(624), int16], Tensor[(624), int16], Tensor[(630), float64], Tensor[(5, 14, 4), float32], Tensor[(11, 12, 4), int64], Tensor[(528, ?), int32], Tensor[(7, 6, 2535), float64]) */
}

def @func_4790() -> Tensor[(528, 1), int8] {
  %166 = fn () -> Tensor[(528, 1), int8] {
    @func_4264() /* ty=Tensor[(528, 1), int8] */
  };
  %166() /* ty=Tensor[(528, 1), int8] */
}

def @func_1444() -> (int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) {
  @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */
}

def @func_1489(%var_1487: Tensor[(6864), int8]) -> (Tensor[(7, 6, 1), float64], Tensor[(13, 13, 15), float32], Tensor[(6864), int8], Tensor[(52), float64], Tensor[(2535), float32]) {
  @func_1486(%var_1487) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(13, 13, 15), float32], Tensor[(6864), int8], Tensor[(52), float64], Tensor[(2535), float32]) */
}

def @func_2670(%var_2669: Tensor[(10, 63), float64]) -> (Tensor[(528, 11), bool], Tensor[(2535), float32], Tensor[(5, 14, 4), float64], Tensor[(528, ?), int32], Tensor[(1, 624), int16], Tensor[(528, 1), int8], Tensor[(10, 63), float32]) {
  %189 = fn (%var_2636: Tensor[(10, 63), float64]) -> (Tensor[(528, 11), bool], Tensor[(2535), float32], Tensor[(5, 14, 4), float64], Tensor[(528, ?), int32], Tensor[(1, 624), int16], Tensor[(528, 1), int8], Tensor[(10, 63), float32]) {
    %167 = @func_2328() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) */;
    %168 = cast(meta[relay.Constant][12] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
    %169 = cast(%var_2636, dtype="float64") /* ty=Tensor[(10, 63), float64] */;
    %170 = cast(meta[relay.Constant][12] /* ty=Tensor[(2535), float32] */, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %171 = reshape(%168, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
    %172 = reshape(%169, newshape=[70, 9]) /* ty=Tensor[(70, 9), float64] */;
    %173 = reshape(%170, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %174 = @func_2528(%171, %172, %173) /* ty=(Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) */;
    %175 = %174.4;
    %176 = cast(%175, dtype="float64") /* ty=Tensor[(5, 14, 4), float64] */;
    %177 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 624), int16] */, dtype="int16") /* ty=Tensor[(1, 624), int16] */;
    %178 = reshape(%177, newshape=[624]) /* ty=Tensor[(624), int16] */;
    %179 = @func_1728(%178) /* ty=(Tensor[(528, 1), int8], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, ?), int32]) */;
    %180 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
    %181 = cast(%var_2636, dtype="float32") /* ty=Tensor[(10, 63), float32] */;
    %182 = cos(%181) /* ty=Tensor[(10, 63), float32] */;
    %183 = cast(%182, dtype="float32") /* ty=Tensor[(10, 63), float32] */;
    %184 = %167.1;
    %185 = cosh(%176) /* ty=Tensor[(5, 14, 4), float64] */;
    %186 = %179.3;
    %187 = %180.3;
    %188 = exp(%183) /* ty=Tensor[(10, 63), float32] */;
    (%184, meta[relay.Constant][12] /* ty=Tensor[(2535), float32] */, %185, %186, meta[relay.Constant][13] /* ty=Tensor[(1, 624), int16] */, %187, %188)
  };
  %189(%var_2669) /* ty=(Tensor[(528, 11), bool], Tensor[(2535), float32], Tensor[(5, 14, 4), float64], Tensor[(528, ?), int32], Tensor[(1, 624), int16], Tensor[(528, 1), int8], Tensor[(10, 63), float32]) */
}

def @func_5287() -> (Tensor[(528, ?), int32],) {
  %190 = @func_3706() /* ty=(Tensor[(528, ?), int32],) */;
  %191 = %190.0;
  (%191,)
}

def @func_1100(%var_1098: Tensor[(24, 26), int16]) -> (Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(24, 26), int16]) {
  @func_1097(%var_1098) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(24, 26), int16]) */
}

def @func_2406(%var_2404: Tensor[(7, 6, 6), float64], %var_2405: Tensor[(13, 13, 15), float32]) -> (Tensor[(7, 6, 6), uint64], Tensor[(13, 13, 15), int64]) {
  @func_2402(%var_2404, %var_2405) /* ty=(Tensor[(7, 6, 6), uint64], Tensor[(13, 13, 15), int64]) */
}

def @func_2890() -> Tensor[(528, 1), int8] {
  %192 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %192.0
}

def @func_1486(%var_1477: Tensor[(6864), int8]) -> (Tensor[(7, 6, 1), float64], Tensor[(13, 13, 15), float32], Tensor[(6864), int8], Tensor[(52), float64], Tensor[(2535), float32]) {
  %193 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %194 = cast(%var_1477, dtype="int8") /* ty=Tensor[(6864), int8] */;
  %195 = cast(meta[relay.Constant][14] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %196 = cast(meta[relay.Constant][15] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %197 = cast(meta[relay.Constant][15] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %198 = reshape(%194, newshape=[528, 13]) /* ty=Tensor[(528, 13), int8] */;
  %199 = reshape(%195, newshape=[52]) /* ty=Tensor[(52), float64] */;
  %200 = reshape(%196, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %201 = reshape(%197, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %202 = @func_1397(%198, %199, %200, %201) /* ty=(Tensor[(528, 13), float32], Tensor[(528, 13), bool], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(13, 13, 15), float32], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(528, 1), int8], Tensor[(13, 13, 15), float32], Tensor[(11, 12, 4), int8]) */;
  %203 = %193.0;
  %204 = %202.8;
  (%203, %204, %var_1477, meta[relay.Constant][14] /* ty=Tensor[(52), float64] */, meta[relay.Constant][15] /* ty=Tensor[(2535), float32] */)
}

def @func_1859() -> (int8,) {
  %205 = @func_1641() /* ty=int8 */;
  (%205,)
}

def @func_5489(%var_5487: Tensor[(528, 6), int32], %var_5488: Tensor[(288), uint8]) -> (Tensor[(528, 6), uint16], Tensor[(3, 6, 16), bool], Tensor[(288), uint8], Tensor[(7, 6, 1), float64]) {
  @func_5485(%var_5487, %var_5488) /* ty=(Tensor[(528, 6), uint16], Tensor[(3, 6, 16), bool], Tensor[(288), uint8], Tensor[(7, 6, 1), float64]) */
}

def @func_1234() -> Tensor[(528, ?), int32] {
  %214 = fn () -> Tensor[(528, ?), int32] {
    %206 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
    %207 = %206.0;
    %208 = cast(%207, dtype="float64") /* ty=Tensor[(528, 1), float64] */;
    %209 = exp(%208) /* ty=Tensor[(528, 1), float64] */;
    %210 = cast(%207, dtype="int32") /* ty=Tensor[(528, 1), int32] */;
    %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(2), int32] */;
    %212 = cast(%209, dtype="int32") /* ty=Tensor[(528, 1), int32] */;
    %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    multiply(%212, %213) /* ty=Tensor[(528, ?), int32] */
  };
  %214() /* ty=Tensor[(528, ?), int32] */
}

def @func_4992(%var_4989: Tensor[(624), int16], %var_4990: Tensor[(10, 63), float64], %var_4991: Tensor[(5, 126), float64]) -> (Tensor[(528, 1), int8], Tensor[(624), int16], Tensor[(5, 126), uint64], Tensor[(10, 63), int64], Tensor[(5, 126), float32]) {
  %241 = fn (%var_4943: Tensor[(624), int16], %var_4944: Tensor[(10, 63), float64], %var_4948: Tensor[(5, 126), float64]) -> (Tensor[(528, 1), int8], Tensor[(624), int16], Tensor[(5, 126), uint64], Tensor[(10, 63), int64], Tensor[(5, 126), float32]) {
    %215 = cast(%var_4943, dtype="int16") /* ty=Tensor[(624), int16] */;
    %216 = cast(%var_4944, dtype="float64") /* ty=Tensor[(10, 63), float64] */;
    %217 = reshape(%215, newshape=[2, 312]) /* ty=Tensor[(2, 312), int16] */;
    %218 = reshape(%216, newshape=[5, 126]) /* ty=Tensor[(5, 126), float64] */;
    %219 = @func_4428(%217, %218) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(624), int16], Tensor[(2, 312), int16], Tensor[(4, 156), int16], Tensor[(5, 126), float64]) */;
    %220 = %219.4;
    %221 = cast(%var_4948, dtype="uint64") /* ty=Tensor[(5, 126), uint64] */;
    %222 = shape_of(%220, dtype="int32") /* ty=Tensor[(2), int32] */;
    %223 = cast(%220, dtype="uint64") /* ty=Tensor[(5, 126), uint64] */;
    %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %225 = cast(%220, dtype="int64") /* ty=Tensor[(5, 126), int64] */;
    %226 = shape_of(%var_4944, dtype="int32") /* ty=Tensor[(2), int32] */;
    %227 = cast(%var_4944, dtype="int64") /* ty=Tensor[(10, 63), int64] */;
    %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %229 = cast(%var_4944, dtype="uint8") /* ty=Tensor[(10, 63), uint8] */;
    %230 = shape_of(%var_4948, dtype="int32") /* ty=Tensor[(2), int32] */;
    %231 = cast(%var_4948, dtype="uint8") /* ty=Tensor[(5, 126), uint8] */;
    %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %233 = bitwise_xor(%231, %232) /* ty=Tensor[(5, 126), uint8] */;
    %234 = cast(%233, dtype="float64") /* ty=Tensor[(5, 126), float64] */;
    %235 = sqrt(%234) /* ty=Tensor[(5, 126), float64] */;
    %236 = cast(%235, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
    %237 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
    %238 = bitwise_and(%223, %224) /* ty=Tensor[(5, 126), uint64] */;
    %239 = minimum(%227, %228) /* ty=Tensor[(10, 63), int64] */;
    %240 = rsqrt(%236) /* ty=Tensor[(5, 126), float32] */;
    (%237, %var_4943, %238, %239, %240)
  };
  %241(%var_4989, %var_4990, %var_4991) /* ty=(Tensor[(528, 1), int8], Tensor[(624), int16], Tensor[(5, 126), uint64], Tensor[(10, 63), int64], Tensor[(5, 126), float32]) */
}

def @func_5335() -> (Tensor[(528, ?), int32],) {
  %242 = @func_4820() /* ty=Tensor[(528, ?), int32] */;
  (%242,)
}

def @func_5453() -> (Tensor[(528, ?), int32],) {
  %243 = @func_4121() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(7, 6, 1), float64]) */;
  %244 = %243.1;
  (%244,)
}

def @func_1642() -> int8 {
  %246 = fn () -> int8 {
    %245 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
    %245.0
  };
  %246() /* ty=int8 */
}

def @func_1036(%var_1026: Tensor[(624), int16]) -> (Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(1, 280), float32], Tensor[(624), int16]) {
  %247 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %248 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 280), float32] */, dtype="float32") /* ty=Tensor[(1, 280), float32] */;
  %249 = cast(%var_1026, dtype="int16") /* ty=Tensor[(624), int16] */;
  %250 = reshape(%248, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %251 = reshape(%249, newshape=[12, 13, 4]) /* ty=Tensor[(12, 13, 4), int16] */;
  %252 = @func_630(%250, %251) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) */;
  %253 = %247.0;
  %254 = %252.2;
  (%253, %254, meta[relay.Constant][16] /* ty=Tensor[(1, 280), float32] */, %var_1026)
}

def @func_2165() -> Tensor[(528, 1), int8] {
  @func_2163() /* ty=Tensor[(528, 1), int8] */
}

def @func_5029() -> (int8, Tensor[(528, 1), float32]) {
  %258 = fn () -> (int8, Tensor[(528, 1), float32]) {
    %255 = @func_3731() /* ty=(Tensor[(528, 1), float32],) */;
    %256 = @func_4254() /* ty=int8 */;
    %257 = %255.0;
    (%256, %257)
  };
  %258() /* ty=(int8, Tensor[(528, 1), float32]) */
}

def @func_394(%var_393: Tensor[(13, 13, 15), float32]) -> Tensor[(13, 13, 15), float32] {
  %263 = fn (%var_387: Tensor[(13, 13, 15), float32]) -> Tensor[(13, 13, 15), float32] {
    %259 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 13, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
    %260 = shape_of(%var_387, dtype="int32") /* ty=Tensor[(3), int32] */;
    %261 = cast(%var_387, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
    %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%261, %262) /* ty=Tensor[(13, 13, 15), float32] */
  };
  %263(%var_393) /* ty=Tensor[(13, 13, 15), float32] */
}

def @func_2132(%var_2131: Tensor[(14, 3, 3), float32]) -> (Tensor[(14, 3, 3), float32], Tensor[(11, 12, 4), float32]) {
  %267 = fn (%var_2122: Tensor[(14, 3, 3), float32]) -> (Tensor[(14, 3, 3), float32], Tensor[(11, 12, 4), float32]) {
    %264 = cast(%var_2122, dtype="float32") /* ty=Tensor[(14, 3, 3), float32] */;
    %265 = exp(%264) /* ty=Tensor[(14, 3, 3), float32] */;
    %266 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
    (%265, %266)
  };
  %267(%var_2131) /* ty=(Tensor[(14, 3, 3), float32], Tensor[(11, 12, 4), float32]) */
}

def @func_1097(%var_1094: Tensor[(24, 26), int16]) -> (Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(24, 26), int16]) {
  %268 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %269 = cast(%var_1094, dtype="int16") /* ty=Tensor[(24, 26), int16] */;
  %270 = reshape(%269, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %271 = @func_1036(%270) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(1, 280), float32], Tensor[(624), int16]) */;
  %272 = %268.0;
  %273 = %271.1;
  (%272, %273, %var_1094)
}

def @func_1996(%var_1995: Tensor[(528, 16), int32]) -> (Tensor[(528, 16), bool], Tensor[(528, ?), float64], Tensor[(528, 16), bool]) {
  %283 = fn (%var_1973: Tensor[(528, 16), int32]) -> (Tensor[(528, 16), bool], Tensor[(528, ?), float64], Tensor[(528, 16), bool]) {
    %274 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
    %275 = cast(%274, dtype="bool") /* ty=Tensor[(528, ?), bool] */;
    %276 = cast(%var_1973, dtype="bool") /* ty=Tensor[(528, 16), bool] */;
    %277 = cast(%274, dtype="float64") /* ty=Tensor[(528, ?), float64] */;
    %278 = cast(%var_1973, dtype="bool") /* ty=Tensor[(528, 16), bool] */;
    %279 = cast(%274, dtype="bool") /* ty=Tensor[(528, ?), bool] */;
    %280 = greater(%275, %276) /* ty=Tensor[(528, 16), bool] */;
    %281 = asinh(%277) /* ty=Tensor[(528, ?), float64] */;
    %282 = equal(%278, %279) /* ty=Tensor[(528, 16), bool] */;
    (%280, %281, %282)
  };
  %283(%var_1995) /* ty=(Tensor[(528, 16), bool], Tensor[(528, ?), float64], Tensor[(528, 16), bool]) */
}

def @func_2402(%var_2369: Tensor[(7, 6, 6), float64], %var_2378: Tensor[(13, 13, 15), float32]) -> (Tensor[(7, 6, 6), uint64], Tensor[(13, 13, 15), int64]) {
  %284 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %285 = %284.0;
  %286 = cast(%285, dtype="uint64") /* ty=Tensor[(7, 6, 1), uint64] */;
  %287 = cast(%var_2369, dtype="uint64") /* ty=Tensor[(7, 6, 6), uint64] */;
  %288 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %289 = %288.1;
  %290 = cast(%var_2378, dtype="int64") /* ty=Tensor[(13, 13, 15), int64] */;
  %291 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%289, dtype="int64") /* ty=Tensor[(13, 13, 15), int64] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %294 = bitwise_xor(%286, %287) /* ty=Tensor[(7, 6, 6), uint64] */;
  %295 = add(%292, %293) /* ty=Tensor[(13, 13, 15), int64] */;
  (%294, %295)
}

def @func_4640(%var_4621: Tensor[(624, 1), int16], %var_4637: Tensor[(2535), float32], %var_4638: Tensor[(10, 63), float64]) -> (Tensor[(528, 1), int8], Tensor[(528, ?), float64], Tensor[(624), int16], Tensor[(819), int8], Tensor[(624, 1), int16], Tensor[(52), float64], int8, Tensor[(2535), bool], Tensor[(2535), float32], Tensor[(10, 63), float64]) {
  %296 = @func_2328() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) */;
  %297 = %296.2;
  %298 = cast(%297, dtype="float64") /* ty=Tensor[(528, ?), float64] */;
  %299 = cast(meta[relay.Constant][18] /* ty=Tensor[(819), int8] */, dtype="int8") /* ty=Tensor[(819), int8] */;
  %300 = cast(%var_4621, dtype="int16") /* ty=Tensor[(624, 1), int16] */;
  %301 = reshape(%299, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), int8] */;
  %302 = reshape(%300, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %303 = @func_3616(%301, %302) /* ty=(Tensor[(13, 9, 7), uint8], Tensor[(624), int16], Tensor[(624), int16]) */;
  %304 = cast(meta[relay.Constant][19] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %305 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
  %306 = cast(%305, dtype="int8") /* ty=Tensor[(528, 1), int8] */;
  %307 = reshape(%304, newshape=[]) /* ty=int8 */;
  %308 = reshape(%306, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), int8] */;
  %309 = @func_654(%307, %308) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) */;
  %310 = cast(%var_4637, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %311 = cast(%var_4638, dtype="float64") /* ty=Tensor[(10, 63), float64] */;
  %312 = cast(%var_4637, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %313 = reshape(%310, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %314 = reshape(%311, newshape=[70, 9]) /* ty=Tensor[(70, 9), float64] */;
  %315 = reshape(%312, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
  %316 = @func_2528(%313, %314, %315) /* ty=(Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) */;
  %317 = sqrt(%298) /* ty=Tensor[(528, ?), float64] */;
  %318 = %303.1;
  %319 = %309.2;
  %320 = %316.3;
  (%305, %317, %318, meta[relay.Constant][18] /* ty=Tensor[(819), int8] */, %var_4621, %319, meta[relay.Constant][19] /* ty=int8 */, %320, %var_4637, %var_4638)
}

def @func_3731() -> (Tensor[(528, 1), float32],) {
  %321 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
  %322 = cast(%321, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %323 = log(%322) /* ty=Tensor[(528, 1), float32] */;
  (%323,)
}

def @func_3539(%var_3475: Tensor[(4, 14, 12), uint32]) -> (Tensor[(4, 14, 12), bool], Tensor[(4, 14, 12), float64], Tensor[(11, 12, 4), float32], Tensor[(3, 42), float32], Tensor[(528, 1), int8], int8) {
  %324 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 1, 12), uint32] */, dtype="uint32") /* ty=Tensor[(4, 1, 12), uint32] */;
  %325 = cast(%var_3475, dtype="uint32") /* ty=Tensor[(4, 14, 12), uint32] */;
  %326 = bitwise_and(%324, %325) /* ty=Tensor[(4, 14, 12), uint32] */;
  %327 = cast(%326, dtype="uint64") /* ty=Tensor[(4, 14, 12), uint64] */;
  %328 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 1, 12), uint32] */, dtype="uint64") /* ty=Tensor[(4, 1, 12), uint64] */;
  %329 = add(%327, %328) /* ty=Tensor[(4, 14, 12), uint64] */;
  %330 = cast(%var_3475, dtype="bool") /* ty=Tensor[(4, 14, 12), bool] */;
  %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%329, dtype="bool") /* ty=Tensor[(4, 14, 12), bool] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %334 = cast(%329, dtype="float64") /* ty=Tensor[(4, 14, 12), float64] */;
  %335 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 42), float32] */, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %336 = reshape(%335, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float32] */;
  %337 = @func_2130(%336) /* ty=(Tensor[(14, 3, 3), float32], Tensor[(11, 12, 4), float32]) */;
  %338 = not_equal(%332, %333) /* ty=Tensor[(4, 14, 12), bool] */;
  %339 = sigmoid(%334) /* ty=Tensor[(4, 14, 12), float64] */;
  %340 = %337.1;
  %341 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
  %342 = @func_1641() /* ty=int8 */;
  (%338, %339, %340, meta[relay.Constant][21] /* ty=Tensor[(3, 42), float32] */, %341, %342)
}

def @func_3708() -> (Tensor[(528, ?), int32],) {
  @func_3706() /* ty=(Tensor[(528, ?), int32],) */
}

def @func_4078(%var_4076: Tensor[(2535), float32]) -> (Tensor[(2535), int64],) {
  @func_4075(%var_4076) /* ty=(Tensor[(2535), int64],) */
}

def @func_4820() -> Tensor[(528, ?), int32] {
  %343 = @func_3706() /* ty=(Tensor[(528, ?), int32],) */;
  %343.0
}

def @func_2687(%var_2684: Tensor[(9, 16, 5), float32]) -> Tensor[(9, 16, 5), float32] {
  %344 = cast(%var_2684, dtype="float32") /* ty=Tensor[(9, 16, 5), float32] */;
  acosh(%344) /* ty=Tensor[(9, 16, 5), float32] */
}

def @func_5417() -> (Tensor[(528, 1), int8], Tensor[(7, 6, ?), float32]) {
  @func_5415() /* ty=(Tensor[(528, 1), int8], Tensor[(7, 6, ?), float32]) */
}

def @func_3354() -> Tensor[(7, 6, 1), float64] {
  @func_3352() /* ty=Tensor[(7, 6, 1), float64] */
}

def @func_2163() -> Tensor[(528, 1), int8] {
  %345 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %345.0
}

def @func_4375(%var_4351: Tensor[(528, 1), int32]) -> Tensor[(528, ?), bool] {
  %346 = @func_3312() /* ty=(Tensor[(528, 1), int32],) */;
  %347 = %346.0;
  %348 = cast(%var_4351, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(2), int32] */;
  %350 = cast(%347, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%350, %351) /* ty=Tensor[(528, ?), bool] */
}

def @func_4723() -> (Tensor[(7, 6, 1), float64], Tensor[(528, 13), bool], Tensor[(528, ?), int32]) {
  @func_4721() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 13), bool], Tensor[(528, ?), int32]) */
}

def @func_3999() -> Tensor[(7, 6, 1), float64] {
  @func_3997() /* ty=Tensor[(7, 6, 1), float64] */
}

def @func_630(%var_555: Tensor[(5, 14, 4), float32], %var_594: Tensor[(12, 13, 4), int16]) -> (Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) {
  %352 = cast(%var_555, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %353 = cast(meta[relay.Constant][22] /* ty=Tensor[(52), float64] */, dtype="float64") /* ty=Tensor[(52), float64] */;
  %354 = reshape(%353, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), float64] */;
  %355 = @func_249(%354) /* ty=Tensor[(?, 13, 4), int16] */;
  %356 = cast(%355, dtype="bool") /* ty=Tensor[(?, 13, 4), bool] */;
  %357 = cast(%var_594, dtype="bool") /* ty=Tensor[(12, 13, 4), bool] */;
  %358 = log2(%352) /* ty=Tensor[(5, 14, 4), float32] */;
  %359 = equal(%356, %357) /* ty=Tensor[(12, 13, 4), bool] */;
  (%358, meta[relay.Constant][22] /* ty=Tensor[(52), float64] */, %359)
}

def @func_5289() -> (Tensor[(528, ?), int32],) {
  @func_5287() /* ty=(Tensor[(528, ?), int32],) */
}

def @func_6003() -> (Tensor[(528, 1), int8],) {
  %362 = fn () -> (Tensor[(528, 1), int8],) {
    %360 = @func_5415() /* ty=(Tensor[(528, 1), int8], Tensor[(7, 6, ?), float32]) */;
    %361 = %360.0;
    (%361,)
  };
  %362() /* ty=(Tensor[(528, 1), int8],) */
}

def @func_3312() -> (Tensor[(528, 1), int32],) {
  %363 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
  %364 = @func_1859() /* ty=(int8,) */;
  %365 = %364.0;
  %366 = cast(%363, dtype="int32") /* ty=Tensor[(528, 1), int32] */;
  %367 = cast(%365, dtype="int32") /* ty=int32 */;
  %368 = maximum(%366, %367) /* ty=Tensor[(528, 1), int32] */;
  (%368,)
}

def @func_4721() -> (Tensor[(7, 6, 1), float64], Tensor[(528, 13), bool], Tensor[(528, ?), int32]) {
  %369 = @func_4521() /* ty=(Tensor[(528, 13), bool],) */;
  %370 = @func_3352() /* ty=Tensor[(7, 6, 1), float64] */;
  %371 = %369.0;
  %372 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
  (%370, %371, %372)
}

def @func_5506() -> Tensor[(528, 1), int8] {
  @func_5504() /* ty=Tensor[(528, 1), int8] */
}

def @func_5629() -> (Tensor[(528, ?), int32],) {
  @func_5627() /* ty=(Tensor[(528, ?), int32],) */
}

def @func_5703() -> (Tensor[(7, 6, 1), float64],) {
  %373 = @func_1664() /* ty=Tensor[(7, 6, 1), float64] */;
  (%373,)
}

def @func_249(%var_235: Tensor[(1, 13, 4), float64]) -> Tensor[(?, 13, 4), int16] {
  %374 = cast(%var_235, dtype="float64") /* ty=Tensor[(1, 13, 4), float64] */;
  %375 = rsqrt(%374) /* ty=Tensor[(1, 13, 4), float64] */;
  %376 = cast(%var_235, dtype="int16") /* ty=Tensor[(1, 13, 4), int16] */;
  %377 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%375, dtype="int16") /* ty=Tensor[(1, 13, 4), int16] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%378, %379) /* ty=Tensor[(?, 13, 4), int16] */
}

def @func_5485(%var_5469: Tensor[(528, 6), int32], %var_5478: Tensor[(288), uint8]) -> (Tensor[(528, 6), uint16], Tensor[(3, 6, 16), bool], Tensor[(288), uint8], Tensor[(7, 6, 1), float64]) {
  %380 = @func_4203() /* ty=Tensor[(528, ?), int32] */;
  %381 = cast(%380, dtype="uint16") /* ty=Tensor[(528, ?), uint16] */;
  %382 = cast(%var_5469, dtype="uint16") /* ty=Tensor[(528, 6), uint16] */;
  %383 = cast(%var_5478, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %384 = cast(%var_5478, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %385 = cast(%var_5478, dtype="uint8") /* ty=Tensor[(288), uint8] */;
  %386 = reshape(%383, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint8] */;
  %387 = reshape(%384, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint8] */;
  %388 = reshape(%385, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint8] */;
  %389 = @func_2300(%386, %387, %388) /* ty=(Tensor[(3, 6, 16), uint8], Tensor[(11, 12, 4), float32], Tensor[(3, 6, 16), bool], Tensor[(13, 13, 15), float32], Tensor[(169, 15), float32]) */;
  %390 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %391 = multiply(%381, %382) /* ty=Tensor[(528, 6), uint16] */;
  %392 = %389.2;
  %393 = %390.0;
  (%391, %392, %var_5478, %393)
}

def @func_3314() -> (Tensor[(528, 1), int32],) {
  @func_3312() /* ty=(Tensor[(528, 1), int32],) */
}

def @func_3673() -> (Tensor[(7, 6, 1), float64],) {
  @func_3671() /* ty=(Tensor[(7, 6, 1), float64],) */
}

def @func_5753(%var_5750: Tensor[(280), float32], %var_5751: Tensor[(624), int16], %var_5752: Tensor[(672), uint32]) -> (Tensor[(528, ?), int32], Tensor[(5, 14, 4), float32], Tensor[(280), float32], Tensor[(624), int16], int8, Tensor[(672), uint32]) {
  %406 = fn (%var_5741: Tensor[(280), float32], %var_5742: Tensor[(624), int16], %var_5745: Tensor[(672), uint32]) -> (Tensor[(528, ?), int32], Tensor[(5, 14, 4), float32], Tensor[(280), float32], Tensor[(624), int16], int8, Tensor[(672), uint32]) {
    %394 = @func_5287() /* ty=(Tensor[(528, ?), int32],) */;
    %395 = cast(%var_5741, dtype="float32") /* ty=Tensor[(280), float32] */;
    %396 = cast(%var_5742, dtype="int16") /* ty=Tensor[(624), int16] */;
    %397 = reshape(%395, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
    %398 = reshape(%396, newshape=[12, 13, 4]) /* ty=Tensor[(12, 13, 4), int16] */;
    %399 = @func_630(%397, %398) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) */;
    %400 = cast(%var_5745, dtype="uint32") /* ty=Tensor[(672), uint32] */;
    %401 = reshape(%400, newshape=[4, 14, 12]) /* ty=Tensor[(4, 14, 12), uint32] */;
    %402 = @func_3539(%401) /* ty=(Tensor[(4, 14, 12), bool], Tensor[(4, 14, 12), float64], Tensor[(11, 12, 4), float32], Tensor[(3, 42), float32], Tensor[(528, 1), int8], int8) */;
    %403 = %394.0;
    %404 = %399.0;
    %405 = %402.5;
    (%403, %404, %var_5741, %var_5742, %405, %var_5745)
  };
  %406(%var_5750, %var_5751, %var_5752) /* ty=(Tensor[(528, ?), int32], Tensor[(5, 14, 4), float32], Tensor[(280), float32], Tensor[(624), int16], int8, Tensor[(672), uint32]) */
}

def @main(%var_6154: Tensor[(528, 4), int32]) -> (Tensor[(528, 4), bool], Tensor[(528, 4), float64]) {
  %407 = @func_5337() /* ty=(Tensor[(528, ?), int32],) */;
  %408 = %407.0;
  %409 = cast(%408, dtype="bool") /* ty=Tensor[(528, ?), bool] */;
  %410 = cast(%var_6154, dtype="bool") /* ty=Tensor[(528, 4), bool] */;
  %411 = cast(%var_6154, dtype="float64") /* ty=Tensor[(528, 4), float64] */;
  %412 = equal(%409, %410) /* ty=Tensor[(528, 4), bool] */;
  %413 = cos(%411) /* ty=Tensor[(528, 4), float64] */;
  (%412, %413)
}

def @func_2533(%var_2530: Tensor[(2535), float32], %var_2531: Tensor[(70, 9), float64], %var_2532: Tensor[(2535), float64]) -> (Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) {
  @func_2528(%var_2530, %var_2531, %var_2532) /* ty=(Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) */
}

def @func_2528(%var_2482: Tensor[(2535), float32], %var_2495: Tensor[(70, 9), float64], %var_2518: Tensor[(2535), float64]) -> (Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) {
  %414 = cast(%var_2495, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %415 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 624), int16] */, dtype="int16") /* ty=Tensor[(1, 624), int16] */;
  %416 = reshape(%414, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), float64] */;
  %417 = reshape(%415, newshape=[4, 156]) /* ty=Tensor[(4, 156), int16] */;
  %418 = @func_1540(%416, %417) /* ty=(Tensor[(7, 6, 15), float64], Tensor[(24, 26), int16], Tensor[(4, 156), int16], Tensor[(2535), bool], Tensor[(2535), float32]) */;
  %419 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %420 = %419.2;
  %421 = cast(%var_2482, dtype="uint16") /* ty=Tensor[(2535), uint16] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(1), int32] */;
  %423 = cast(%420, dtype="uint16") /* ty=Tensor[(2535), uint16] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %425 = logical_xor(%423, %424) /* ty=Tensor[(2535), uint16] */;
  %426 = cast(%420, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(1), int32] */;
  %428 = cast(%425, dtype="float64") /* ty=Tensor[(2535), float64] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?), float64] */;
  %430 = floor_divide(%428, %429) /* ty=Tensor[(2535), float64] */;
  %431 = cast(%var_2518, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %432 = shape_of(%430, dtype="int32") /* ty=Tensor[(1), int32] */;
  %433 = cast(%430, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?), bool] */;
  %435 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 56), float32] */, dtype="float32") /* ty=Tensor[(5, 56), float32] */;
  %436 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 624), int16] */, dtype="int16") /* ty=Tensor[(1, 624), int16] */;
  %437 = reshape(%435, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %438 = reshape(%436, newshape=[12, 13, 4]) /* ty=Tensor[(12, 13, 4), int16] */;
  %439 = @func_630(%437, %438) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) */;
  %440 = %418.4;
  %441 = greater(%433, %434) /* ty=Tensor[(2535), bool] */;
  %442 = %439.0;
  (%440, %var_2495, meta[relay.Constant][23] /* ty=Tensor[(1, 624), int16] */, %441, %442, meta[relay.Constant][24] /* ty=Tensor[(5, 56), float32] */)
}

def @func_3542(%var_3540: Tensor[(4, 14, 12), uint32]) -> (Tensor[(4, 14, 12), bool], Tensor[(4, 14, 12), float64], Tensor[(11, 12, 4), float32], Tensor[(3, 42), float32], Tensor[(528, 1), int8], int8) {
  @func_3539(%var_3540) /* ty=(Tensor[(4, 14, 12), bool], Tensor[(4, 14, 12), float64], Tensor[(11, 12, 4), float32], Tensor[(3, 42), float32], Tensor[(528, 1), int8], int8) */
}

def @func_5184(%var_5183: Tensor[(15, 3, 13), float64]) -> Tensor[(15, 3, 13), float64] {
  %444 = fn (%var_5179: Tensor[(15, 3, 13), float64]) -> Tensor[(15, 3, 13), float64] {
    %443 = cast(%var_5179, dtype="float64") /* ty=Tensor[(15, 3, 13), float64] */;
    acosh(%443) /* ty=Tensor[(15, 3, 13), float64] */
  };
  %444(%var_5183) /* ty=Tensor[(15, 3, 13), float64] */
}

def @func_4255() -> int8 {
  %446 = fn () -> int8 {
    %445 = @func_1859() /* ty=(int8,) */;
    %445.0
  };
  %446() /* ty=int8 */
}

def @func_4264() -> Tensor[(528, 1), int8] {
  @func_2163() /* ty=Tensor[(528, 1), int8] */
}

def @func_4431(%var_4429: Tensor[(2, 312), int16], %var_4430: Tensor[(5, 126), float64]) -> (Tensor[(7, 6, 1), float64], Tensor[(624), int16], Tensor[(2, 312), int16], Tensor[(4, 156), int16], Tensor[(5, 126), float64]) {
  %458 = fn (%var_4403: Tensor[(2, 312), int16], %var_4419: Tensor[(5, 126), float64]) -> (Tensor[(7, 6, 1), float64], Tensor[(624), int16], Tensor[(2, 312), int16], Tensor[(4, 156), int16], Tensor[(5, 126), float64]) {
    %447 = cast(%var_4403, dtype="int16") /* ty=Tensor[(2, 312), int16] */;
    %448 = reshape(%447, newshape=[624]) /* ty=Tensor[(624), int16] */;
    %449 = @func_3657(%448) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(624), int16], Tensor[(528, 1), float64]) */;
    %450 = cast(%var_4419, dtype="float64") /* ty=Tensor[(5, 126), float64] */;
    %451 = cast(%var_4403, dtype="int16") /* ty=Tensor[(2, 312), int16] */;
    %452 = reshape(%450, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), float64] */;
    %453 = reshape(%451, newshape=[4, 156]) /* ty=Tensor[(4, 156), int16] */;
    %454 = @func_1540(%452, %453) /* ty=(Tensor[(7, 6, 15), float64], Tensor[(24, 26), int16], Tensor[(4, 156), int16], Tensor[(2535), bool], Tensor[(2535), float32]) */;
    %455 = @func_1664() /* ty=Tensor[(7, 6, 1), float64] */;
    %456 = %449.1;
    %457 = %454.2;
    (%455, %456, %var_4403, %457, %var_4419)
  };
  %458(%var_4429, %var_4430) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(624), int16], Tensor[(2, 312), int16], Tensor[(4, 156), int16], Tensor[(5, 126), float64]) */
}

def @func_5854(%var_5852: Tensor[(630), float64]) -> (Tensor[(7, 6, 4), bool], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, ?), bool], Tensor[(10, 63), float64], Tensor[(2535), float32], Tensor[(528, 630), float64], Tensor[(528, ?), float64], Tensor[(528, 1), int8]) {
  @func_5851(%var_5852) /* ty=(Tensor[(7, 6, 4), bool], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, ?), bool], Tensor[(10, 63), float64], Tensor[(2535), float32], Tensor[(528, 630), float64], Tensor[(528, ?), float64], Tensor[(528, 1), int8]) */
}

def @func_634(%var_632: Tensor[(5, 14, 4), float32], %var_633: Tensor[(12, 13, 4), int16]) -> (Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) {
  @func_630(%var_632, %var_633) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) */
}

def @func_1442() -> (int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) {
  %459 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %460 = cast(meta[relay.Constant][25] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %461 = reshape(%460, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
  %462 = %459.2;
  %463 = @func_392(%461) /* ty=Tensor[(13, 13, 15), float32] */;
  (%462, %463, meta[relay.Constant][25] /* ty=Tensor[(2535), float32] */)
}

def @func_5645() -> (Tensor[(7, 6, 1), float64],) {
  @func_5643() /* ty=(Tensor[(7, 6, 1), float64],) */
}

def @func_2993() -> Tensor[(528, 1), int8] {
  @func_2890() /* ty=Tensor[(528, 1), int8] */
}

def @func_3470(%var_3468: int8, %var_3469: Tensor[(624), int16]) -> (Tensor[(2535), float32], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, 1), uint64], Tensor[(5, 56), float32], Tensor[(10, 63), uint32], Tensor[(7, 6, 1), float64]) {
  %492 = fn (%var_3396: int8, %var_3400: Tensor[(624), int16]) -> (Tensor[(2535), float32], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, 1), uint64], Tensor[(5, 56), float32], Tensor[(10, 63), uint32], Tensor[(7, 6, 1), float64]) {
    %464 = cast(%var_3396, dtype="int8") /* ty=int8 */;
    %465 = @func_3312() /* ty=(Tensor[(528, 1), int32],) */;
    %466 = %465.0;
    %467 = cast(%466, dtype="int8") /* ty=Tensor[(528, 1), int8] */;
    %468 = reshape(%464, newshape=[]) /* ty=int8 */;
    %469 = reshape(%467, newshape=[528]) /* ty=Tensor[(528), int8] */;
    %470 = @func_1607(%468, %469) /* ty=(Tensor[(2535), float32], Tensor[(52), float64], int8, Tensor[(528), int8], Tensor[(13, 13, 15), float32], Tensor[(7, 6, 1), float64]) */;
    %471 = cast(%var_3400, dtype="int16") /* ty=Tensor[(624), int16] */;
    %472 = reshape(%471, newshape=[624]) /* ty=Tensor[(624), int16] */;
    %473 = @func_1036(%472) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(1, 280), float32], Tensor[(624), int16]) */;
    %474 = cast(%466, dtype="uint64") /* ty=Tensor[(528, 1), uint64] */;
    %475 = cast(%var_3396, dtype="uint64") /* ty=uint64 */;
    %476 = %470.0;
    %477 = cast(%476, dtype="float32") /* ty=Tensor[(2535), float32] */;
    %478 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 63), float64] */, dtype="float64") /* ty=Tensor[(10, 63), float64] */;
    %479 = cast(%476, dtype="float64") /* ty=Tensor[(2535), float64] */;
    %480 = reshape(%477, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
    %481 = reshape(%478, newshape=[70, 9]) /* ty=Tensor[(70, 9), float64] */;
    %482 = reshape(%479, newshape=[2535]) /* ty=Tensor[(2535), float64] */;
    %483 = @func_2528(%480, %481, %482) /* ty=(Tensor[(2535), float32], Tensor[(70, 9), float64], Tensor[(1, 624), int16], Tensor[(2535), bool], Tensor[(5, 14, 4), float32], Tensor[(5, 56), float32]) */;
    %484 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 63), float64] */, dtype="uint32") /* ty=Tensor[(10, 63), uint32] */;
    %485 = cast(%var_3396, dtype="uint32") /* ty=uint32 */;
    %486 = @func_2603() /* ty=(Tensor[(7, 6, 1), float64],) */;
    %487 = %473.3;
    %488 = subtract(%474, %475) /* ty=Tensor[(528, 1), uint64] */;
    %489 = %483.5;
    %490 = right_shift(%484, %485) /* ty=Tensor[(10, 63), uint32] */;
    %491 = %486.0;
    (%476, %487, %var_3400, %488, %489, %490, %491)
  };
  %492(%var_3468, %var_3469) /* ty=(Tensor[(2535), float32], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, 1), uint64], Tensor[(5, 56), float32], Tensor[(10, 63), uint32], Tensor[(7, 6, 1), float64]) */
}

def @func_5594(%var_5569: Tensor[(528, 5), int32]) -> (Tensor[(528, 5), uint64], Tensor[(528, 5), int64], Tensor[(528, 1), int8]) {
  %493 = @func_5287() /* ty=(Tensor[(528, ?), int32],) */;
  %494 = %493.0;
  %495 = cast(%494, dtype="uint64") /* ty=Tensor[(528, ?), uint64] */;
  %496 = cast(%var_5569, dtype="uint64") /* ty=Tensor[(528, 5), uint64] */;
  %497 = cast(%494, dtype="bool") /* ty=Tensor[(528, ?), bool] */;
  %498 = cast(%var_5569, dtype="bool") /* ty=Tensor[(528, 5), bool] */;
  %499 = less_equal(%497, %498) /* ty=Tensor[(528, 5), bool] */;
  %500 = cast(%499, dtype="int64") /* ty=Tensor[(528, 5), int64] */;
  %501 = shape_of(%var_5569, dtype="int32") /* ty=Tensor[(2), int32] */;
  %502 = cast(%var_5569, dtype="int64") /* ty=Tensor[(528, 5), int64] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %504 = add(%495, %496) /* ty=Tensor[(528, 5), uint64] */;
  %505 = bitwise_xor(%502, %503) /* ty=Tensor[(528, 5), int64] */;
  %506 = @func_2163() /* ty=Tensor[(528, 1), int8] */;
  (%504, %505, %506)
}

def @func_5627() -> (Tensor[(528, ?), int32],) {
  %507 = @func_4203() /* ty=Tensor[(528, ?), int32] */;
  (%507,)
}

def @func_252(%var_250: Tensor[(1, 13, 4), float64]) -> Tensor[(?, 13, 4), int16] {
  @func_249(%var_250) /* ty=Tensor[(?, 13, 4), int16] */
}

def @func_1039(%var_1037: Tensor[(624), int16]) -> (Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(1, 280), float32], Tensor[(624), int16]) {
  @func_1036(%var_1037) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(1, 280), float32], Tensor[(624), int16]) */
}

def @func_4075(%var_4047: Tensor[(2535), float32]) -> (Tensor[(2535), int64],) {
  %508 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %509 = %508.2;
  %510 = cast(%var_4047, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(1), int32] */;
  %512 = cast(%509, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?), bool] */;
  %514 = not_equal(%512, %513) /* ty=Tensor[(2535), bool] */;
  %515 = cast(meta[relay.Constant][27] /* ty=Tensor[(2535), bool] */, dtype="int64") /* ty=Tensor[(2535), int64] */;
  %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(1), int32] */;
  %517 = cast(%514, dtype="int64") /* ty=Tensor[(2535), int64] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?), int64] */;
  %519 = bitwise_or(%517, %518) /* ty=Tensor[(2535), int64] */;
  (%519,)
}

def @func_865() -> (Tensor[(7, 6, 1), float64],) {
  %522 = fn () -> (Tensor[(7, 6, 1), float64],) {
    %520 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
    %521 = %520.0;
    (%521,)
  };
  %522() /* ty=(Tensor[(7, 6, 1), float64],) */
}

def @func_5966() -> (Tensor[(528, 1), int8],) {
  %523 = @func_5504() /* ty=Tensor[(528, 1), int8] */;
  (%523,)
}

def @func_3891() -> (Tensor[(?, 15, 12), bool], Tensor[(7, 6, 1), float64]) {
  @func_3889() /* ty=(Tensor[(?, 15, 12), bool], Tensor[(7, 6, 1), float64]) */
}

def @func_3573(%var_3572: Tensor[(528, 5), int32]) -> (Tensor[(528, 5), bool], Tensor[(7, 6, 1), float64], Tensor[(528, 5), int8]) {
  %533 = fn (%var_3551: Tensor[(528, 5), int32]) -> (Tensor[(528, 5), bool], Tensor[(7, 6, 1), float64], Tensor[(528, 5), int8]) {
    %524 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
    %525 = cast(%524, dtype="bool") /* ty=Tensor[(528, ?), bool] */;
    %526 = cast(%var_3551, dtype="bool") /* ty=Tensor[(528, 5), bool] */;
    %527 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
    %528 = cast(%var_3551, dtype="int8") /* ty=Tensor[(528, 5), int8] */;
    %529 = cast(%524, dtype="int8") /* ty=Tensor[(528, ?), int8] */;
    %530 = greater(%525, %526) /* ty=Tensor[(528, 5), bool] */;
    %531 = %527.0;
    %532 = bitwise_and(%528, %529) /* ty=Tensor[(528, 5), int8] */;
    (%530, %531, %532)
  };
  %533(%var_3572) /* ty=(Tensor[(528, 5), bool], Tensor[(7, 6, 1), float64], Tensor[(528, 5), int8]) */
}

def @func_5936(%var_5934: Tensor[(7, 13, 11), float64]) -> (Tensor[(7, 13, 11), float64], Tensor[(7, 6, 1), float64]) {
  @func_5933(%var_5934) /* ty=(Tensor[(7, 13, 11), float64], Tensor[(7, 6, 1), float64]) */
}

def @func_5114() -> (Tensor[(13, 13, 15), float64], Tensor[(7, 6, 1), float64]) {
  %534 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
  %535 = %534.1;
  %536 = cast(%535, dtype="float64") /* ty=Tensor[(13, 13, 15), float64] */;
  %537 = exp(%536) /* ty=Tensor[(13, 13, 15), float64] */;
  %538 = @func_3352() /* ty=Tensor[(7, 6, 1), float64] */;
  (%537, %538)
}

def @func_4266() -> Tensor[(528, 1), int8] {
  @func_4264() /* ty=Tensor[(528, 1), int8] */
}

def @func_4121() -> (Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(7, 6, 1), float64]) {
  %539 = @func_3706() /* ty=(Tensor[(528, ?), int32],) */;
  %540 = @func_4022() /* ty=Tensor[(7, 6, 1), float64] */;
  %541 = %539.0;
  %542 = @func_3352() /* ty=Tensor[(7, 6, 1), float64] */;
  (%540, %541, %542)
}

def @func_3657(%var_3649: Tensor[(624), int16]) -> (Tensor[(11, 12, 4), int8], Tensor[(624), int16], Tensor[(528, 1), float64]) {
  %543 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %544 = cast(meta[relay.Constant][28] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %545 = cast(%var_3649, dtype="int16") /* ty=Tensor[(624), int16] */;
  %546 = reshape(%544, newshape=[]) /* ty=int8 */;
  %547 = reshape(%545, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %548 = @func_3467(%546, %547) /* ty=(Tensor[(2535), float32], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, 1), uint64], Tensor[(5, 56), float32], Tensor[(10, 63), uint32], Tensor[(7, 6, 1), float64]) */;
  %549 = %548.3;
  %550 = cast(meta[relay.Constant][28] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %551 = cast(%549, dtype="float64") /* ty=Tensor[(528, 1), float64] */;
  %552 = %543.1;
  %553 = add(%550, %551) /* ty=Tensor[(528, 1), float64] */;
  (%552, %var_3649, %553)
}

def @func_4123() -> (Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(7, 6, 1), float64]) {
  @func_4121() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(7, 6, 1), float64]) */
}

def @func_2690(%var_2688: Tensor[(9, 16, 5), float32]) -> Tensor[(9, 16, 5), float32] {
  @func_2687(%var_2688) /* ty=Tensor[(9, 16, 5), float32] */
}

def @func_3706() -> (Tensor[(528, ?), int32],) {
  %554 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
  (%554,)
}

def @func_5851(%var_5806: Tensor[(630), float64]) -> (Tensor[(7, 6, 4), bool], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, ?), bool], Tensor[(10, 63), float64], Tensor[(2535), float32], Tensor[(528, 630), float64], Tensor[(528, ?), float64], Tensor[(528, 1), int8]) {
  %555 = @func_5415() /* ty=(Tensor[(528, 1), int8], Tensor[(7, 6, ?), float32]) */;
  %556 = %555.1;
  %557 = cast(%556, dtype="bool") /* ty=Tensor[(7, 6, ?), bool] */;
  %558 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 6, 4), float32] */, dtype="bool") /* ty=Tensor[(7, 6, 4), bool] */;
  %559 = cast(%var_5806, dtype="float64") /* ty=Tensor[(630), float64] */;
  %560 = cast(meta[relay.Constant][30] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %561 = reshape(%559, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %562 = reshape(%560, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %563 = @func_1825(%561, %562) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(528, 1), int8], Tensor[(2535), float32], Tensor[(630), float64], Tensor[(624), int16]) */;
  %564 = @func_5287() /* ty=(Tensor[(528, ?), int32],) */;
  %565 = %564.0;
  %566 = cast(%565, dtype="float64") /* ty=Tensor[(528, ?), float64] */;
  %567 = cos(%566) /* ty=Tensor[(528, ?), float64] */;
  %568 = cast(%567, dtype="int32") /* ty=Tensor[(528, ?), int32] */;
  %569 = reshape(%568, newshape=[528, 1]) /* ty=Tensor[(528, 1), int32] */;
  %570 = cast(meta[relay.Constant][30] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %571 = cast(meta[relay.Constant][31] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %572 = cast(%var_5806, dtype="float64") /* ty=Tensor[(630), float64] */;
  %573 = reshape(%570, newshape=[624, 1]) /* ty=Tensor[(624, 1), int16] */;
  %574 = reshape(%571, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
  %575 = reshape(%572, newshape=[10, 63]) /* ty=Tensor[(10, 63), float64] */;
  %576 = @func_4640(%573, %574, %575) /* ty=(Tensor[(528, 1), int8], Tensor[(528, ?), float64], Tensor[(624), int16], Tensor[(819), int8], Tensor[(624, 1), int16], Tensor[(52), float64], int8, Tensor[(2535), bool], Tensor[(2535), float32], Tensor[(10, 63), float64]) */;
  %577 = cast(%567, dtype="float64") /* ty=Tensor[(528, ?), float64] */;
  %578 = cast(%var_5806, dtype="float64") /* ty=Tensor[(630), float64] */;
  %579 = cast(%567, dtype="float64") /* ty=Tensor[(528, ?), float64] */;
  %580 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %581 = equal(%557, %558) /* ty=Tensor[(7, 6, 4), bool] */;
  %582 = %563.5;
  %583 = @func_4375(%569) /* ty=Tensor[(528, ?), bool] */;
  %584 = %576.9;
  %585 = floor_mod(%577, %578) /* ty=Tensor[(528, 630), float64] */;
  %586 = log2(%579) /* ty=Tensor[(528, ?), float64] */;
  %587 = %580.0;
  (%581, %582, meta[relay.Constant][30] /* ty=Tensor[(624), int16] */, %583, %584, meta[relay.Constant][31] /* ty=Tensor[(2535), float32] */, %585, %586, %587)
}

def @func_6101() -> (Tensor[(7, 6, 1), float64],) {
  %588 = @func_5703() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %589 = %588.0;
  (%589,)
}

def @func_1664() -> Tensor[(7, 6, 1), float64] {
  %590 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %590.0
}

def @func_3825(%var_3776: Tensor[(624), int16]) -> (Tensor[(11, 12, 4), float32], Tensor[(630), float64], Tensor[(210, 3), float64], Tensor[(9, 16, 5), float32], Tensor[(720), float32], Tensor[(7, 6, 1), float64], Tensor[(624), float32], Tensor[(12, 13, 4), bool], Tensor[(280), float32]) {
  %591 = cast(meta[relay.Constant][32] /* ty=Tensor[(210, 3), float64] */, dtype="float64") /* ty=Tensor[(210, 3), float64] */;
  %592 = cast(%var_3776, dtype="int16") /* ty=Tensor[(624), int16] */;
  %593 = reshape(%591, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %594 = reshape(%592, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %595 = @func_1825(%593, %594) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(528, 1), int8], Tensor[(2535), float32], Tensor[(630), float64], Tensor[(624), int16]) */;
  %596 = cast(meta[relay.Constant][33] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %597 = reshape(%596, newshape=[9, 16, 5]) /* ty=Tensor[(9, 16, 5), float32] */;
  %598 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %599 = cast(%var_3776, dtype="float32") /* ty=Tensor[(624), float32] */;
  %600 = cast(meta[relay.Constant][34] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %601 = sin(%599) /* ty=Tensor[(624), float32] */;
  %602 = cast(%601, dtype="int16") /* ty=Tensor[(624), int16] */;
  %603 = reshape(%600, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %604 = reshape(%602, newshape=[12, 13, 4]) /* ty=Tensor[(12, 13, 4), int16] */;
  %605 = @func_630(%603, %604) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(52), float64], Tensor[(12, 13, 4), bool]) */;
  %606 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
  %607 = %595.4;
  %608 = @func_2687(%597) /* ty=Tensor[(9, 16, 5), float32] */;
  %609 = %598.0;
  %610 = %605.2;
  (%606, %607, meta[relay.Constant][32] /* ty=Tensor[(210, 3), float64] */, %608, meta[relay.Constant][33] /* ty=Tensor[(720), float32] */, %609, %601, %610, meta[relay.Constant][34] /* ty=Tensor[(280), float32] */)
}

def @func_1116() -> (Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) {
  %619 = fn () -> (Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) {
    %611 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
    %612 = cast(meta[relay.Constant][35] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %613 = cast(meta[relay.Constant][36] /* ty=Tensor[(528, 1), int8] */, dtype="int8") /* ty=Tensor[(528, 1), int8] */;
    %614 = reshape(%612, newshape=[]) /* ty=int8 */;
    %615 = reshape(%613, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), int8] */;
    %616 = @func_654(%614, %615) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(?, 13, 4), int16], Tensor[(52), float64]) */;
    %617 = %611.0;
    %618 = %616.0;
    (%617, %618, meta[relay.Constant][35] /* ty=int8 */, meta[relay.Constant][36] /* ty=Tensor[(528, 1), int8] */)
  };
  %619() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */
}

def @func_3138() -> (Tensor[(7, 6, 1), float64],) {
  %622 = fn () -> (Tensor[(7, 6, 1), float64],) {
    %620 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
    %621 = %620.0;
    (%621,)
  };
  %622() /* ty=(Tensor[(7, 6, 1), float64],) */
}

def @func_6036() -> Tensor[(528, 1), int8] {
  @func_2890() /* ty=Tensor[(528, 1), int8] */
}

def @func_4822() -> Tensor[(528, ?), int32] {
  @func_4820() /* ty=Tensor[(528, ?), int32] */
}

def @func_3733() -> (Tensor[(528, 1), float32],) {
  @func_3731() /* ty=(Tensor[(528, 1), float32],) */
}

def @func_3620(%var_3618: Tensor[(13, 9, 7), int8], %var_3619: Tensor[(624), int16]) -> (Tensor[(13, 9, 7), uint8], Tensor[(624), int16], Tensor[(624), int16]) {
  @func_3616(%var_3618, %var_3619) /* ty=(Tensor[(13, 9, 7), uint8], Tensor[(624), int16], Tensor[(624), int16]) */
}

def @func_5337() -> (Tensor[(528, ?), int32],) {
  @func_5335() /* ty=(Tensor[(528, ?), int32],) */
}

def @func_6038() -> Tensor[(528, 1), int8] {
  @func_6036() /* ty=Tensor[(528, 1), int8] */
}

def @func_2995() -> Tensor[(528, 1), int8] {
  @func_2993() /* ty=Tensor[(528, 1), int8] */
}

def @func_3208(%var_3206: Tensor[(8448, 1), int32], %var_3207: Tensor[(528, 16), bool]) -> (Tensor[(7, 6, 1), float64], Tensor[(528, 16), bool], Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(8448, 630), uint8]) {
  %643 = fn (%var_3177: Tensor[(8448, 1), int32], %var_3181: Tensor[(528, 16), bool]) -> (Tensor[(7, 6, 1), float64], Tensor[(528, 16), bool], Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(8448, 630), uint8]) {
    %623 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
    %624 = cast(%var_3177, dtype="int32") /* ty=Tensor[(8448, 1), int32] */;
    %625 = reshape(%624, newshape=[528, 16]) /* ty=Tensor[(528, 16), int32] */;
    %626 = @func_1994(%625) /* ty=(Tensor[(528, 16), bool], Tensor[(528, ?), float64], Tensor[(528, 16), bool]) */;
    %627 = %626.2;
    %628 = cast(%var_3181, dtype="bool") /* ty=Tensor[(528, 16), bool] */;
    %629 = shape_of(%627, dtype="int32") /* ty=Tensor[(2), int32] */;
    %630 = cast(%627, dtype="bool") /* ty=Tensor[(528, 16), bool] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %632 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
    %633 = cast(meta[relay.Constant][37] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %634 = reshape(%633, newshape=[10, 63]) /* ty=Tensor[(10, 63), float64] */;
    %635 = @func_2668(%634) /* ty=(Tensor[(528, 11), bool], Tensor[(2535), float32], Tensor[(5, 14, 4), float64], Tensor[(528, ?), int32], Tensor[(1, 624), int16], Tensor[(528, 1), int8], Tensor[(10, 63), float32]) */;
    %636 = cast(meta[relay.Constant][37] /* ty=Tensor[(630), float64] */, dtype="uint8") /* ty=Tensor[(630), uint8] */;
    %637 = cast(%var_3177, dtype="uint8") /* ty=Tensor[(8448, 1), uint8] */;
    %638 = %623.0;
    %639 = less(%630, %631) /* ty=Tensor[(528, 16), bool] */;
    %640 = %632.0;
    %641 = %635.0;
    %642 = multiply(%636, %637) /* ty=Tensor[(8448, 630), uint8] */;
    (%638, %639, %640, %641, %642)
  };
  %643(%var_3206, %var_3207) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 16), bool], Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(8448, 630), uint8]) */
}

def @func_5597(%var_5595: Tensor[(528, 5), int32]) -> (Tensor[(528, 5), uint64], Tensor[(528, 5), int64], Tensor[(528, 1), int8]) {
  @func_5594(%var_5595) /* ty=(Tensor[(528, 5), uint64], Tensor[(528, 5), int64], Tensor[(528, 1), int8]) */
}

def @func_4203() -> Tensor[(528, ?), int32] {
  @func_1233() /* ty=Tensor[(528, ?), int32] */
}

def @func_4024() -> Tensor[(7, 6, 1), float64] {
  @func_4022() /* ty=Tensor[(7, 6, 1), float64] */
}

def @func_838() -> (Tensor[(7, 6, 1), float64],) {
  %646 = fn () -> (Tensor[(7, 6, 1), float64],) {
    %644 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 6, 1), float64] */, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
    %645 = tan(%644) /* ty=Tensor[(7, 6, 1), float64] */;
    (%645,)
  };
  %646() /* ty=(Tensor[(7, 6, 1), float64],) */
}

def @func_1825(%var_1814: Tensor[(630), float64], %var_1815: Tensor[(624), int16]) -> (Tensor[(7, 6, 1), float64], Tensor[(528, ?), int32], Tensor[(528, 1), int8], Tensor[(2535), float32], Tensor[(630), float64], Tensor[(624), int16]) {
  %647 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %648 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %649 = cast(%var_1814, dtype="float64") /* ty=Tensor[(630), float64] */;
  %650 = cast(%var_1815, dtype="int16") /* ty=Tensor[(624), int16] */;
  %651 = reshape(%649, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), float64] */;
  %652 = reshape(%650, newshape=[4, 156]) /* ty=Tensor[(4, 156), int16] */;
  %653 = @func_1540(%651, %652) /* ty=(Tensor[(7, 6, 15), float64], Tensor[(24, 26), int16], Tensor[(4, 156), int16], Tensor[(2535), bool], Tensor[(2535), float32]) */;
  %654 = %647.0;
  %655 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
  %656 = %648.0;
  %657 = %653.4;
  (%654, %655, %656, %657, %var_1814, %var_1815)
}

def @func_3841(%var_3830: Tensor[(8, 16, 8), float32]) -> (Tensor[(8, 16, 8), float32], Tensor[(528, 1), int8]) {
  %658 = cast(%var_3830, dtype="float32") /* ty=Tensor[(8, 16, 8), float32] */;
  %659 = sigmoid(%658) /* ty=Tensor[(8, 16, 8), float32] */;
  %660 = @func_2890() /* ty=Tensor[(528, 1), int8] */;
  (%659, %660)
}

def @func_4521() -> (Tensor[(528, 13), bool],) {
  %661 = @func_2993() /* ty=Tensor[(528, 1), int8] */;
  %662 = cast(%661, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
  %663 = cast(meta[relay.Constant][39] /* ty=Tensor[(528, 13), int8] */, dtype="bool") /* ty=Tensor[(528, 13), bool] */;
  %664 = greater_equal(%662, %663) /* ty=Tensor[(528, 13), bool] */;
  (%664,)
}

def @func_4022() -> Tensor[(7, 6, 1), float64] {
  %665 = @func_2328() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) */;
  %665.0
}

def @func_3660(%var_3658: Tensor[(624), int16]) -> (Tensor[(11, 12, 4), int8], Tensor[(624), int16], Tensor[(528, 1), float64]) {
  @func_3657(%var_3658) /* ty=(Tensor[(11, 12, 4), int8], Tensor[(624), int16], Tensor[(528, 1), float64]) */
}

def @func_5249(%var_5247: Tensor[(16, 10, 7), uint16], %var_5248: Tensor[(16, 10, 7), uint16]) -> Tensor[(16, 10, 7), bool] {
  %670 = fn (%var_5240: Tensor[(16, 10, 7), uint16], %var_5241: Tensor[(16, 10, 7), uint16]) -> Tensor[(16, 10, 7), bool] {
    %666 = cast(%var_5241, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
    %667 = shape_of(%var_5240, dtype="int32") /* ty=Tensor[(3), int32] */;
    %668 = cast(%var_5240, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
    %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%668, %669) /* ty=Tensor[(16, 10, 7), bool] */
  };
  %670(%var_5247, %var_5248) /* ty=Tensor[(16, 10, 7), bool] */
}

def @func_1611(%var_1609: int8, %var_1610: Tensor[(528), int8]) -> (Tensor[(2535), float32], Tensor[(52), float64], int8, Tensor[(528), int8], Tensor[(13, 13, 15), float32], Tensor[(7, 6, 1), float64]) {
  @func_1607(%var_1609, %var_1610) /* ty=(Tensor[(2535), float32], Tensor[(52), float64], int8, Tensor[(528), int8], Tensor[(13, 13, 15), float32], Tensor[(7, 6, 1), float64]) */
}

def @func_4286(%var_4278: int64, %var_4279: Tensor[(2, 14, 13), int64]) -> Tensor[(2, 14, 13), int64] {
  %671 = cast(%var_4278, dtype="int64") /* ty=int64 */;
  %672 = cast(%var_4279, dtype="int64") /* ty=Tensor[(2, 14, 13), int64] */;
  multiply(%671, %672) /* ty=Tensor[(2, 14, 13), int64] */
}

def @func_4545() -> (Tensor[(11, 12, 4), float32],) {
  %674 = fn () -> (Tensor[(11, 12, 4), float32],) {
    %673 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
    (%673,)
  };
  %674() /* ty=(Tensor[(11, 12, 4), float32],) */
}

def @func_5609() -> Tensor[(528, 1), int32] {
  %676 = fn () -> Tensor[(528, 1), int32] {
    %675 = @func_3312() /* ty=(Tensor[(528, 1), int32],) */;
    %675.0
  };
  %676() /* ty=Tensor[(528, 1), int32] */
}

def @func_3828(%var_3826: Tensor[(624), int16]) -> (Tensor[(11, 12, 4), float32], Tensor[(630), float64], Tensor[(210, 3), float64], Tensor[(9, 16, 5), float32], Tensor[(720), float32], Tensor[(7, 6, 1), float64], Tensor[(624), float32], Tensor[(12, 13, 4), bool], Tensor[(280), float32]) {
  @func_3825(%var_3826) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(630), float64], Tensor[(210, 3), float64], Tensor[(9, 16, 5), float32], Tensor[(720), float32], Tensor[(7, 6, 1), float64], Tensor[(624), float32], Tensor[(12, 13, 4), bool], Tensor[(280), float32]) */
}

def @func_5116() -> (Tensor[(13, 13, 15), float64], Tensor[(7, 6, 1), float64]) {
  @func_5114() /* ty=(Tensor[(13, 13, 15), float64], Tensor[(7, 6, 1), float64]) */
}

def @func_3352() -> Tensor[(7, 6, 1), float64] {
  %677 = @func_2328() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(528, 11), bool], Tensor[(528, ?), int32]) */;
  %677.0
}

def @func_4290(%var_4288: int64, %var_4289: Tensor[(2, 14, 13), int64]) -> Tensor[(2, 14, 13), int64] {
  @func_4286(%var_4288, %var_4289) /* ty=Tensor[(2, 14, 13), int64] */
}

def @func_1165() -> Tensor[(11, 12, 4), float32] {
  %681 = fn () -> Tensor[(11, 12, 4), float32] {
    %678 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
    %679 = %678.1;
    %680 = cast(%679, dtype="float32") /* ty=Tensor[(11, 12, 4), float32] */;
    sinh(%680) /* ty=Tensor[(11, 12, 4), float32] */
  };
  %681() /* ty=Tensor[(11, 12, 4), float32] */
}

def @func_1543(%var_1541: Tensor[(7, 6, 15), float64], %var_1542: Tensor[(4, 156), int16]) -> (Tensor[(7, 6, 15), float64], Tensor[(24, 26), int16], Tensor[(4, 156), int16], Tensor[(2535), bool], Tensor[(2535), float32]) {
  %701 = fn (%var_1510: Tensor[(7, 6, 15), float64], %var_1517: Tensor[(4, 156), int16]) -> (Tensor[(7, 6, 15), float64], Tensor[(24, 26), int16], Tensor[(4, 156), int16], Tensor[(2535), bool], Tensor[(2535), float32]) {
    %682 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
    %683 = %682.0;
    %684 = cast(%683, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
    %685 = cast(%var_1510, dtype="float64") /* ty=Tensor[(7, 6, 15), float64] */;
    %686 = cast(%var_1517, dtype="int16") /* ty=Tensor[(4, 156), int16] */;
    %687 = reshape(%686, newshape=[24, 26]) /* ty=Tensor[(24, 26), int16] */;
    %688 = @func_1097(%687) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(24, 26), int16]) */;
    %689 = cast(meta[relay.Constant][40] /* ty=Tensor[(2535), float32] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
    %690 = reshape(%689, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), float32] */;
    %691 = @func_392(%690) /* ty=Tensor[(13, 13, 15), float32] */;
    %692 = cast(%691, dtype="bool") /* ty=Tensor[(13, 13, 15), bool] */;
    %693 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(2535), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %694 = cast(meta[relay.Constant][40] /* ty=Tensor[(2535), float32] */, dtype="bool") /* ty=Tensor[(2535), bool] */;
    %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?), bool] */;
    %696 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
    %697 = floor_mod(%684, %685) /* ty=Tensor[(7, 6, 15), float64] */;
    %698 = %688.2;
    %699 = greater_equal(%694, %695) /* ty=Tensor[(2535), bool] */;
    %700 = %696.2;
    (%697, %698, %var_1517, %699, %700)
  };
  %701(%var_1541, %var_1542) /* ty=(Tensor[(7, 6, 15), float64], Tensor[(24, 26), int16], Tensor[(4, 156), int16], Tensor[(2535), bool], Tensor[(2535), float32]) */
}

def @func_2942(%var_2941: Tensor[(52), float64]) -> (Tensor[(7, 6, 1), float64], Tensor[(52), float64], Tensor[(6864), int8], Tensor[(52), float64], Tensor[(13, 13, 15), float64]) {
  %718 = fn (%var_2932: Tensor[(52), float64]) -> (Tensor[(7, 6, 1), float64], Tensor[(52), float64], Tensor[(6864), int8], Tensor[(52), float64], Tensor[(13, 13, 15), float64]) {
    %702 = @func_2603() /* ty=(Tensor[(7, 6, 1), float64],) */;
    %703 = cast(meta[relay.Constant][41] /* ty=Tensor[(6864), int8] */, dtype="int8") /* ty=Tensor[(6864), int8] */;
    %704 = cast(%var_2932, dtype="float64") /* ty=Tensor[(52), float64] */;
    %705 = @func_1442() /* ty=(int8, Tensor[(13, 13, 15), float32], Tensor[(2535), float32]) */;
    %706 = %705.1;
    %707 = cast(%706, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
    %708 = cast(%706, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
    %709 = reshape(%703, newshape=[528, 13]) /* ty=Tensor[(528, 13), int8] */;
    %710 = reshape(%704, newshape=[52]) /* ty=Tensor[(52), float64] */;
    %711 = reshape(%707, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
    %712 = reshape(%708, newshape=[2535]) /* ty=Tensor[(2535), float32] */;
    %713 = @func_1397(%709, %710, %711, %712) /* ty=(Tensor[(528, 13), float32], Tensor[(528, 13), bool], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(13, 13, 15), float32], Tensor[(13, 13, 15), float32], Tensor[(2535), float64], Tensor[(528, 1), int8], Tensor[(13, 13, 15), float32], Tensor[(11, 12, 4), int8]) */;
    %714 = cast(%706, dtype="float64") /* ty=Tensor[(13, 13, 15), float64] */;
    %715 = %702.0;
    %716 = %713.3;
    %717 = sin(%714) /* ty=Tensor[(13, 13, 15), float64] */;
    (%715, %716, meta[relay.Constant][41] /* ty=Tensor[(6864), int8] */, %var_2932, %717)
  };
  %718(%var_2941) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(52), float64], Tensor[(6864), int8], Tensor[(52), float64], Tensor[(13, 13, 15), float64]) */
}

def @func_3997() -> Tensor[(7, 6, 1), float64] {
  %719 = @func_2603() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %719.0
}

def @func_1861() -> (int8,) {
  @func_1859() /* ty=(int8,) */
}

def @func_3889() -> (Tensor[(?, 15, 12), bool], Tensor[(7, 6, 1), float64]) {
  %720 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 15, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 12), float64] */;
  %721 = log10(%720) /* ty=Tensor[(1, 15, 12), float64] */;
  %722 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 15, 12), float64] */, dtype="bool") /* ty=Tensor[(1, 15, 12), bool] */;
  %723 = shape_of(%721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%721, dtype="bool") /* ty=Tensor[(1, 15, 12), bool] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %726 = @func_3137() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %727 = equal(%724, %725) /* ty=Tensor[(?, 15, 12), bool] */;
  %728 = %726.0;
  (%727, %728)
}

def @func_3616(%var_3591: Tensor[(13, 9, 7), int8], %var_3600: Tensor[(624), int16]) -> (Tensor[(13, 9, 7), uint8], Tensor[(624), int16], Tensor[(624), int16]) {
  %729 = @func_1641() /* ty=int8 */;
  %730 = cast(%729, dtype="uint8") /* ty=uint8 */;
  %731 = cast(%var_3591, dtype="uint8") /* ty=Tensor[(13, 9, 7), uint8] */;
  %732 = cast(%729, dtype="int8") /* ty=int8 */;
  %733 = cast(%var_3600, dtype="int16") /* ty=Tensor[(624), int16] */;
  %734 = reshape(%732, newshape=[]) /* ty=int8 */;
  %735 = reshape(%733, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %736 = @func_3467(%734, %735) /* ty=(Tensor[(2535), float32], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, 1), uint64], Tensor[(5, 56), float32], Tensor[(10, 63), uint32], Tensor[(7, 6, 1), float64]) */;
  %737 = left_shift(%730, %731) /* ty=Tensor[(13, 9, 7), uint8] */;
  %738 = %736.1;
  (%737, %738, %var_3600)
}

def @func_2068(%var_2067: Tensor[(7, 6, 6), float64]) -> (Tensor[(7, 6, 6), bool],) {
  %749 = fn (%var_2044: Tensor[(7, 6, 6), float64]) -> (Tensor[(7, 6, 6), bool],) {
    %739 = @func_837() /* ty=(Tensor[(7, 6, 1), float64],) */;
    %740 = %739.0;
    %741 = cast(%740, dtype="uint8") /* ty=Tensor[(7, 6, 1), uint8] */;
    %742 = cast(%var_2044, dtype="uint8") /* ty=Tensor[(7, 6, 6), uint8] */;
    %743 = subtract(%741, %742) /* ty=Tensor[(7, 6, 6), uint8] */;
    %744 = cast(%var_2044, dtype="bool") /* ty=Tensor[(7, 6, 6), bool] */;
    %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(3), int32] */;
    %746 = cast(%743, dtype="bool") /* ty=Tensor[(7, 6, 6), bool] */;
    %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %748 = less_equal(%746, %747) /* ty=Tensor[(7, 6, 6), bool] */;
    (%748,)
  };
  %749(%var_2067) /* ty=(Tensor[(7, 6, 6), bool],) */
}

def @func_5643() -> (Tensor[(7, 6, 1), float64],) {
  %750 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
  %751 = %750.0;
  (%751,)
}

def @func_2892() -> Tensor[(528, 1), int8] {
  @func_2890() /* ty=Tensor[(528, 1), int8] */
}

def @func_5415() -> (Tensor[(528, 1), int8], Tensor[(7, 6, ?), float32]) {
  %752 = @func_1197() /* ty=(Tensor[(528, 1), int8],) */;
  %753 = @func_4022() /* ty=Tensor[(7, 6, 1), float64] */;
  %754 = @func_2603() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %755 = %754.0;
  %756 = cast(%755, dtype="float32") /* ty=Tensor[(7, 6, 1), float32] */;
  %757 = shape_of(%753, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%753, dtype="float32") /* ty=Tensor[(7, 6, 1), float32] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %760 = %752.0;
  %761 = divide(%758, %759) /* ty=Tensor[(7, 6, ?), float32] */;
  (%760, %761)
}

def @func_1730(%var_1729: Tensor[(624), int16]) -> (Tensor[(528, 1), int8], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, ?), int32]) {
  %769 = fn (%var_1703: Tensor[(624), int16]) -> (Tensor[(528, 1), int8], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, ?), int32]) {
    %762 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
    %763 = cast(%var_1703, dtype="int16") /* ty=Tensor[(624), int16] */;
    %764 = reshape(%763, newshape=[624]) /* ty=Tensor[(624), int16] */;
    %765 = @func_1036(%764) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(1, 280), float32], Tensor[(624), int16]) */;
    %766 = %762.3;
    %767 = %765.3;
    %768 = @func_1233() /* ty=Tensor[(528, ?), int32] */;
    (%766, %767, %var_1703, %768)
  };
  %769(%var_1729) /* ty=(Tensor[(528, 1), int8], Tensor[(624), int16], Tensor[(624), int16], Tensor[(528, ?), int32]) */
}

def @func_3109(%var_3011: Tensor[(8448), int32], %var_3095: Tensor[(52), float64]) -> (int8, Tensor[(11, 12, 4), float32], Tensor[(624), int16], Tensor[(528, 16), int64], Tensor[(8448), bool], Tensor[(8448), float64], Tensor[(?, 13, 4), int16], Tensor[(52), float64], Tensor[(7, 6, 8448), bool]) {
  %770 = @func_1859() /* ty=(int8,) */;
  %771 = cast(%var_3011, dtype="int32") /* ty=Tensor[(8448), int32] */;
  %772 = reshape(%771, newshape=[528, 16]) /* ty=Tensor[(528, 16), int32] */;
  %773 = @func_1994(%772) /* ty=(Tensor[(528, 16), bool], Tensor[(528, ?), float64], Tensor[(528, 16), bool]) */;
  %774 = %773.0;
  %775 = cast(meta[relay.Constant][44] /* ty=Tensor[(528, 16), bool] */, dtype="int64") /* ty=Tensor[(528, 16), int64] */;
  %776 = shape_of(%774, dtype="int32") /* ty=Tensor[(2), int32] */;
  %777 = cast(%774, dtype="int64") /* ty=Tensor[(528, 16), int64] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %779 = cast(%var_3011, dtype="float64") /* ty=Tensor[(8448), float64] */;
  %780 = acosh(%779) /* ty=Tensor[(8448), float64] */;
  %781 = cast(%780, dtype="float64") /* ty=Tensor[(8448), float64] */;
  %782 = log(%781) /* ty=Tensor[(8448), float64] */;
  %783 = cast(meta[relay.Constant][45] /* ty=Tensor[(8448), int32] */, dtype="int8") /* ty=Tensor[(8448), int8] */;
  %784 = shape_of(%var_3011, dtype="int32") /* ty=Tensor[(1), int32] */;
  %785 = cast(%var_3011, dtype="int8") /* ty=Tensor[(8448), int8] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?), int8] */;
  %787 = bitwise_xor(%785, %786) /* ty=Tensor[(8448), int8] */;
  %788 = cast(%787, dtype="bool") /* ty=Tensor[(8448), bool] */;
  %789 = shape_of(%782, dtype="int32") /* ty=Tensor[(1), int32] */;
  %790 = cast(%782, dtype="bool") /* ty=Tensor[(8448), bool] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?), bool] */;
  %792 = cast(%780, dtype="float64") /* ty=Tensor[(8448), float64] */;
  %793 = cast(%var_3095, dtype="float64") /* ty=Tensor[(52), float64] */;
  %794 = reshape(%793, newshape=[1, 13, 4]) /* ty=Tensor[(1, 13, 4), float64] */;
  %795 = @func_864() /* ty=(Tensor[(7, 6, 1), float64],) */;
  %796 = %795.0;
  %797 = cast(%var_3011, dtype="float64") /* ty=Tensor[(8448), float64] */;
  %798 = cast(%796, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %799 = power(%797, %798) /* ty=Tensor[(7, 6, 8448), float64] */;
  %800 = cast(%780, dtype="int64") /* ty=Tensor[(8448), int64] */;
  %801 = cast(%799, dtype="int64") /* ty=Tensor[(7, 6, 8448), int64] */;
  %802 = multiply(%800, %801) /* ty=Tensor[(7, 6, 8448), int64] */;
  %803 = cast(meta[relay.Constant][43] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %804 = reshape(%803, newshape=[24, 26]) /* ty=Tensor[(24, 26), int16] */;
  %805 = @func_1097(%804) /* ty=(Tensor[(7, 6, 1), float64], Tensor[(12, 13, 4), bool], Tensor[(24, 26), int16]) */;
  %806 = %805.0;
  %807 = cast(%802, dtype="bool") /* ty=Tensor[(7, 6, 8448), bool] */;
  %808 = cast(%806, dtype="bool") /* ty=Tensor[(7, 6, 1), bool] */;
  %809 = %770.0;
  %810 = @func_1164() /* ty=Tensor[(11, 12, 4), float32] */;
  %811 = multiply(%777, %778) /* ty=Tensor[(528, 16), int64] */;
  %812 = logical_and(%790, %791) /* ty=Tensor[(8448), bool] */;
  %813 = sqrt(%792) /* ty=Tensor[(8448), float64] */;
  %814 = @func_249(%794) /* ty=Tensor[(?, 13, 4), int16] */;
  %815 = greater(%807, %808) /* ty=Tensor[(7, 6, 8448), bool] */;
  (%809, %810, meta[relay.Constant][43] /* ty=Tensor[(624), int16] */, %811, %812, %813, %814, %var_3095, %815)
}

def @func_6103() -> (Tensor[(7, 6, 1), float64],) {
  @func_6101() /* ty=(Tensor[(7, 6, 1), float64],) */
}

def @func_5968() -> (Tensor[(528, 1), int8],) {
  @func_5966() /* ty=(Tensor[(528, 1), int8],) */
}

def @func_3164() -> Tensor[(1, 10, 16), float32] {
  @func_3162() /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_5052() -> (Tensor[(7, 6, ?), bool],) {
  %825 = fn () -> (Tensor[(7, 6, ?), bool],) {
    %816 = @func_1115() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(11, 12, 4), int8], int8, Tensor[(528, 1), int8]) */;
    %817 = %816.0;
    %818 = cast(%817, dtype="float32") /* ty=Tensor[(7, 6, 1), float32] */;
    %819 = cosh(%818) /* ty=Tensor[(7, 6, 1), float32] */;
    %820 = cast(%817, dtype="bool") /* ty=Tensor[(7, 6, 1), bool] */;
    %821 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
    %822 = cast(%819, dtype="bool") /* ty=Tensor[(7, 6, 1), bool] */;
    %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %824 = equal(%822, %823) /* ty=Tensor[(7, 6, ?), bool] */;
    (%824,)
  };
  %825() /* ty=(Tensor[(7, 6, ?), bool],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_235 = relay.var("var_235", dtype = "float64", shape = (1, 13, 4))#candidate|235|(1, 13, 4)|var|float64
uop_236 = relay.rsqrt(var_235.astype('float64')) # shape=(1, 13, 4)
bop_243 = relay.minimum(uop_236.astype('int16'), relay.reshape(var_235.astype('int16'), relay.shape_of(uop_236))) # shape=(1, 13, 4)
output = bop_243
output2 = bop_243
func_249 = relay.Function([var_235,], output)
mod['func_249'] = func_249
mod = relay.transform.InferType()(mod)
mutated_mod['func_249'] = func_249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_250 = relay.var("var_250", dtype = "float64", shape = (1, 13, 4))#candidate|250|(1, 13, 4)|var|float64
func_249_call = mutated_mod.get_global_var('func_249')
call_251 = func_249_call(var_250)
output = call_251
func_252 = relay.Function([var_250], output)
mutated_mod['func_252'] = func_252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_387 = relay.var("var_387", dtype = "float32", shape = (13, 13, 15))#candidate|387|(13, 13, 15)|var|float32
const_388 = relay.constdtype = "float32")#candidate|388|(13, 13, 15)|const|float32
bop_389 = relay.mod(var_387.astype('float32'), relay.reshape(const_388.astype('float32'), relay.shape_of(var_387))) # shape=(13, 13, 15)
output = bop_389
output2 = bop_389
func_392 = relay.Function([var_387,], output)
mod['func_392'] = func_392
mod = relay.transform.InferType()(mod)
var_393 = relay.var("var_393", dtype = "float32", shape = (13, 13, 15))#candidate|393|(13, 13, 15)|var|float32
output = func_392(var_393)
func_394 = relay.Function([var_393], output)
mutated_mod['func_394'] = func_394
mutated_mod = relay.transform.InferType()(mutated_mod)
var_555 = relay.var("var_555", dtype = "float32", shape = (5, 14, 4))#candidate|555|(5, 14, 4)|var|float32
uop_556 = relay.log2(var_555.astype('float32')) # shape=(5, 14, 4)
func_249_call = mod.get_global_var('func_249')
func_252_call = mutated_mod.get_global_var('func_252')
const_590 = relay.const([1.310424,5.225774,-1.160255,2.989592,-2.462815,-3.319209,6.699199,5.955859,-5.819178,-2.330795,3.844204,-0.065765,-1.150581,5.156855,-8.216871,4.263729,8.990755,-5.023452,6.165428,7.350824,-6.123729,-5.381763,1.603245,7.248054,8.521842,2.310647,7.272739,-8.647972,-0.697370,3.206413,-3.338097,-0.394549,-3.125225,0.188066,-3.158780,5.475056,-4.552082,6.819919,2.347173,-4.510274,-1.140444,7.611791,3.465965,2.825162,0.288506,-8.103898,7.458616,8.522679,0.827009,-0.615574,-9.050048,-3.005583], dtype = "float64")#candidate|590|(52,)|const|float64
call_589 = func_249_call(relay.reshape(const_590.astype('float64'), [1, 13, 4]))
call_591 = func_249_call(relay.reshape(const_590.astype('float64'), [1, 13, 4]))
var_594 = relay.var("var_594", dtype = "int16", shape = (12, 13, 4))#candidate|594|(12, 13, 4)|var|int16
bop_595 = relay.equal(call_589.astype('bool'), var_594.astype('bool')) # shape=(12, 13, 4)
bop_598 = relay.equal(call_591.astype('bool'), var_594.astype('bool')) # shape=(12, 13, 4)
output = relay.Tuple([uop_556,const_590,bop_595,])
output2 = relay.Tuple([uop_556,const_590,bop_598,])
func_630 = relay.Function([var_555,var_594,], output)
mod['func_630'] = func_630
mod = relay.transform.InferType()(mod)
mutated_mod['func_630'] = func_630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_630_call = mutated_mod.get_global_var('func_630')
var_632 = relay.var("var_632", dtype = "float32", shape = (5, 14, 4))#candidate|632|(5, 14, 4)|var|float32
var_633 = relay.var("var_633", dtype = "int16", shape = (12, 13, 4))#candidate|633|(12, 13, 4)|var|int16
call_631 = func_630_call(var_632,var_633,)
output = call_631
func_634 = relay.Function([var_632,var_633,], output)
mutated_mod['func_634'] = func_634
mutated_mod = relay.transform.InferType()(mutated_mod)
var_638 = relay.var("var_638", dtype = "int8", shape = ())#candidate|638|()|var|int8
var_639 = relay.var("var_639", dtype = "int8", shape = (11, 12, 4))#candidate|639|(11, 12, 4)|var|int8
bop_640 = relay.maximum(var_638.astype('int8'), var_639.astype('int8')) # shape=(11, 12, 4)
func_249_call = mod.get_global_var('func_249')
func_252_call = mutated_mod.get_global_var('func_252')
const_644 = relay.const([-8.360016,0.629031,-6.412103,-2.580161,3.035919,3.348525,-8.454676,-5.078921,-8.440593,-3.275900,-9.066424,-4.080345,-9.500589,-9.498384,-1.715221,-0.906253,2.894394,-4.293764,1.290849,5.466163,-8.626349,-8.900159,4.849152,0.472305,8.917442,9.738620,-1.657695,9.973800,-9.966957,-4.762993,4.436515,-5.696021,-0.617365,-2.739643,8.847909,-9.365542,8.542104,1.341485,1.194168,-6.018815,-9.929438,6.185992,2.590511,7.145469,-0.324186,-3.778633,-4.132173,-5.330487,-3.922392,-4.897703,-8.751748,8.421895], dtype = "float64")#candidate|644|(52,)|const|float64
call_643 = func_249_call(relay.reshape(const_644.astype('float64'), [1, 13, 4]))
call_645 = func_249_call(relay.reshape(const_644.astype('float64'), [1, 13, 4]))
output = relay.Tuple([bop_640,call_643,const_644,])
output2 = relay.Tuple([bop_640,call_645,const_644,])
func_654 = relay.Function([var_638,var_639,], output)
mod['func_654'] = func_654
mod = relay.transform.InferType()(mod)
var_655 = relay.var("var_655", dtype = "int8", shape = ())#candidate|655|()|var|int8
var_656 = relay.var("var_656", dtype = "int8", shape = (11, 12, 4))#candidate|656|(11, 12, 4)|var|int8
output = func_654(var_655,var_656,)
func_657 = relay.Function([var_655,var_656,], output)
mutated_mod['func_657'] = func_657
mutated_mod = relay.transform.InferType()(mutated_mod)
const_831 = relay.const([[[4.902725],[-7.472761],[6.825130],[-6.233434],[-3.415040],[-9.441583]],[[2.396706],[-1.976692],[-3.417931],[3.545553],[-5.422465],[1.385257]],[[8.915162],[-5.898080],[5.736552],[-8.538556],[-4.215483],[-7.951325]],[[4.119393],[-1.739909],[7.428937],[3.496920],[-0.562117],[-6.858447]],[[7.526692],[1.622003],[9.680690],[5.807059],[-3.140133],[7.591923]],[[-0.717359],[-4.933348],[5.128930],[-9.608092],[6.813797],[-1.667973]],[[5.841703],[7.215542],[1.190686],[8.217608],[-6.745554],[-1.562902]]], dtype = "float64")#candidate|831|(7, 6, 1)|const|float64
uop_832 = relay.tan(const_831.astype('float64')) # shape=(7, 6, 1)
output = relay.Tuple([uop_832,])
output2 = relay.Tuple([uop_832,])
func_837 = relay.Function([], output)
mod['func_837'] = func_837
mod = relay.transform.InferType()(mod)
output = func_837()
func_838 = relay.Function([], output)
mutated_mod['func_838'] = func_838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_837_call = mod.get_global_var('func_837')
func_838_call = mutated_mod.get_global_var('func_838')
call_844 = relay.TupleGetItem(func_837_call(), 0)
call_845 = relay.TupleGetItem(func_838_call(), 0)
output = relay.Tuple([call_844,])
output2 = relay.Tuple([call_845,])
func_864 = relay.Function([], output)
mod['func_864'] = func_864
mod = relay.transform.InferType()(mod)
output = func_864()
func_865 = relay.Function([], output)
mutated_mod['func_865'] = func_865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_884 = relay.TupleGetItem(func_864_call(), 0)
call_885 = relay.TupleGetItem(func_865_call(), 0)
func_630_call = mod.get_global_var('func_630')
func_634_call = mutated_mod.get_global_var('func_634')
const_897 = relay.const([[-6.488777,0.672366],[1.505200,4.390341],[-3.218849,9.030009],[-5.614415,2.676365],[9.279766,8.920096],[3.024385,2.150957],[-4.717294,-8.616336],[-5.259156,3.289809],[3.812133,7.498490],[6.545988,-3.792582],[-3.185525,8.727015],[-8.293858,-9.158076],[8.181779,-4.088599],[-7.659164,-3.001029],[-6.442996,7.530470],[-6.053142,6.383650],[0.501077,-5.972978],[-6.201415,6.732047],[-4.202633,9.377535],[4.881896,-3.372746],[-4.770927,-1.858893],[-8.655875,8.091171],[8.759479,-1.949877],[4.667631,-1.095911],[-6.668429,5.098476],[5.310665,1.766454],[3.407845,4.482702],[-7.366586,8.288247],[-5.242884,8.546572],[-2.491837,9.175067],[1.201600,3.904598],[-6.480893,1.756755],[1.916425,6.151540],[2.486179,-4.187519],[7.527356,-5.102405],[-5.923503,-7.899697],[1.656837,0.710943],[6.763438,7.481145],[-4.986907,6.614152],[-4.459287,1.276972],[-6.187298,5.694567],[9.178237,-9.577456],[4.599372,-0.639702],[4.944222,-7.943276],[-0.639129,-1.174882],[-8.241952,-0.867344],[8.459536,9.920782],[3.351536,2.006187],[5.162370,0.276054],[-3.720283,-9.756743],[-2.318041,0.234390],[2.092478,-7.256619],[-8.062741,7.707938],[9.781151,7.098618],[-8.208292,-8.752125],[-7.874929,7.866556],[-5.648227,-0.563776],[-8.605837,-8.227928],[-3.279682,-2.748532],[6.029077,9.640032],[-0.865271,2.727125],[9.919628,-3.034273],[0.370476,4.544568],[-5.082418,-2.426055],[1.494557,5.953867],[6.115720,8.526221],[-8.480413,8.605267],[-3.720060,0.642125],[-7.926644,-3.325043],[9.577057,5.275863],[-3.164014,-8.513861],[9.241643,8.439954],[-3.873601,-4.887040],[9.744055,7.635575],[-1.100272,5.263943],[5.142929,5.612213],[5.824071,7.752536],[-9.102465,-4.136376],[5.367094,6.378691],[0.289706,-6.609609],[7.323412,9.351200],[-3.584193,-9.755773],[7.984745,3.969306],[-9.637441,-2.938230],[4.336127,4.221424],[-4.315172,-5.724468],[-7.987287,-8.042627],[-0.412124,5.076456],[-0.449450,-3.357496],[9.206096,3.868846],[0.736967,-8.849178],[9.077186,1.273762],[-2.307865,-5.324164],[-0.433833,1.275365],[-8.222202,-7.157524],[-6.641090,-5.412871],[-0.370549,4.117232],[-5.187583,7.999790],[5.171765,3.639669],[-1.360718,6.376351],[4.658072,-8.668350],[-1.807925,7.408934],[6.167194,-3.151632],[5.079566,-9.961754],[4.262288,-4.307330],[-7.634773,4.242460],[7.811536,-3.184506],[-3.601531,-7.731841],[7.680905,9.313612],[-8.445493,-8.511805],[7.064899,3.511106],[-7.477683,-0.327747],[2.038122,7.699114],[-9.437724,-1.924480],[0.036031,-4.689376],[-5.246229,-1.055209],[1.830633,-0.952825],[-7.974178,6.856210],[7.687002,-1.587822],[2.334631,1.875549],[9.971039,-6.011971],[-7.811772,7.600604],[-0.869555,8.493905],[9.971733,-1.836943],[1.750956,-1.506895],[-7.189752,2.460572],[4.417119,3.469135],[2.634994,5.043820],[2.040653,-6.141938],[-3.789722,8.457940],[6.392795,-4.756173],[-0.600996,2.845889],[4.909127,9.407886],[-0.522282,4.030625],[1.485356,-7.575376],[7.912561,7.577023],[9.338684,-8.523674],[-9.280960,-5.296405],[-4.067502,-6.828288],[-7.108769,8.811826]], dtype = "float32")#candidate|897|(140, 2)|const|float32
const_898 = relay.const([7,1,10,5,3,6,-8,1,2,10,-10,10,-8,4,-2,-5,5,-3,3,10,-9,-5,-1,4,2,7,-3,-1,-7,-2,-4,-10,-4,-5,-10,-4,1,-8,10,6,-10,-4,-9,-5,-2,7,-3,-8,-9,-7,-7,-10,2,3,-1,-4,3,3,4,10,4,-5,-6,7,5,-4,7,-3,1,-1,-4,-3,-6,10,-6,-8,-10,7,-6,-9,10,-3,7,-6,-1,-3,3,-3,4,-10,6,9,3,-9,-4,-9,-4,-9,-10,3,1,6,2,4,-5,-6,-2,-6,-5,-5,-5,-1,-9,-4,-5,-10,-1,-2,-8,-10,-3,-5,-3,2,-7,-7,1,5,-8,1,-6,-2,7,-1,-10,-1,9,-8,8,10,-6,10,-5,-9,4,8,9,8,-4,5,1,-7,-2,3,-6,5,-2,-9,-10,3,8,-5,-1,-5,1,9,5,-10,-2,5,10,9,-3,-10,-7,-8,-4,2,-3,8,-8,-3,2,8,-10,1,-2,-1,-9,1,-2,10,1,9,8,7,-6,-9,-8,4,3,-8,-6,-4,-8,10,4,-5,-10,9,6,6,-8,2,-5,4,2,4,10,10,1,-7,-9,-9,1,-9,-4,8,-3,8,7,-7,-5,-4,9,3,5,4,-6,-3,9,-3,8,-6,4,-10,-7,9,-9,9,10,-5,-1,8,-2,-4,6,5,-1,-6,5,7,4,8,-10,9,-6,-4,5,-4,-7,-9,8,-7,-5,5,9,-5,-7,-6,7,-6,2,-2,3,4,-6,3,5,4,-2,-1,2,-6,7,7,-9,-9,-4,8,8,-9,2,-8,-3,8,-3,8,5,4,10,-7,4,-10,6,-8,-9,-9,-1,10,1,-9,9,8,5,-7,3,4,10,8,1,10,-4,-2,6,-9,4,-9,-9,-8,-1,1,-8,5,-8,-4,10,-10,-3,-1,6,5,-2,-2,3,5,-4,-10,-1,2,8,2,-2,-4,7,-3,5,-1,-4,8,-3,-5,-1,-9,10,6,9,-9,10,-5,7,10,-8,9,-3,1,-1,-1,1,-5,-3,-2,8,-5,-3,7,-8,3,7,-10,-10,4,-7,-4,-7,1,1,-4,5,9,-10,9,3,-8,6,1,-8,9,-10,-6,-5,8,-2,-9,4,4,-6,5,-5,-2,-8,-10,7,-4,4,5,8,-7,8,5,4,9,2,-1,-5,-1,7,-1,-1,-1,-4,-4,10,1,7,-3,7,5,3,10,1,1,1,2,7,-6,-10,5,2,-1,6,-4,-3,2,-4,-4,-4,-5,-8,-6,2,10,-2,5,3,-5,-7,1,9,-8,8,10,-8,6,3,3,-5,1,-7,1,2,8,8,-1,-5,-10,2,4,6,-6,-3,8,1,5,-4,8,6,-7,-5,9,-7,2,8,9,-7,5,-5,8,-2,4,9,4,-7,-10,-7,-4,-8,6,-4,2,-4,-1,-1,7,-4,-9,-4,-10,4,-7,7,-7,-10,2,10,7,-2,4,-9,-7,3,-6,1,-10,-6,-5,-8,9,-7,-4,-7,-2,-1,-4,-9,-3,-9,9,-5,-2,-8,5,1,-4,4,-7,8,2,8,-10,-7,9,-4,-5,-9,-1,5,-3,-9,-5,4,6,3,-3,-3,8,-10,7,5,-4,-10,1,2,-2,-10,3,-2,10,-4,8,10,9,-5,3], dtype = "int16")#candidate|898|(624,)|const|int16
call_896 = relay.TupleGetItem(func_630_call(relay.reshape(const_897.astype('float32'), [5, 14, 4]), relay.reshape(const_898.astype('int16'), [12, 13, 4]), ), 1)
call_899 = relay.TupleGetItem(func_634_call(relay.reshape(const_897.astype('float32'), [5, 14, 4]), relay.reshape(const_898.astype('int16'), [12, 13, 4]), ), 1)
const_901 = relay.const([[4.781993,9.717719],[-0.414163,5.770171],[9.954500,3.985852],[4.677308,-6.020402],[5.248814,-9.120846],[-5.683083,2.315447],[-9.216222,8.651125],[6.306907,3.431249],[8.629551,9.653280],[-5.537891,4.788475],[-5.039406,9.733289],[-1.807827,0.601184],[-3.760737,-9.564640],[1.420082,2.666381],[9.304759,-5.057370],[4.198680,2.864890],[-4.855758,-7.038930],[1.502886,-7.652185],[0.989044,7.689851],[-1.484615,3.950413],[9.668602,3.447707],[1.567610,-3.066522],[2.481997,-9.605407],[-1.251030,9.369080],[-2.397373,3.218983],[3.455763,9.537436],[-5.681063,-1.087151],[-1.230455,8.776760],[4.411170,-8.481048],[-4.851000,1.037561],[7.538887,-4.407050],[1.810357,-9.552930],[-3.967545,4.643565],[-3.626069,-5.340149],[-2.846439,4.597276],[-2.404034,-6.694759],[5.165852,7.393377],[6.308830,3.263602],[-1.223345,7.068064],[7.525894,3.338683],[1.914055,6.602796],[-0.648436,-0.045834],[-7.127339,4.450359],[8.221855,-7.374510],[-6.989551,-8.239238],[-6.074413,3.732091],[8.766003,-3.077350],[-3.563267,-2.785053],[-4.311469,5.779019],[6.808724,6.894395],[7.066049,7.783649],[-6.418391,1.206863],[1.010770,1.766676],[8.370427,-5.150440],[1.306415,1.120606],[-3.064755,0.765731],[4.759347,5.523794],[4.166508,-6.094096],[2.291861,8.742646],[6.178606,2.880054],[-1.700004,-4.373201],[4.214330,-0.535680],[2.410611,-0.432450],[-1.680225,8.770193],[5.140457,-0.386686],[2.643405,5.191018],[-4.419272,4.719411],[-5.375963,-6.806476],[6.275037,-2.260597],[5.668825,0.438983],[3.380263,9.065198],[1.382323,6.292479],[2.188765,3.315736],[7.956561,-0.631560],[0.611468,9.908735],[-8.165757,-0.341080],[8.871681,-5.336597],[-5.739472,7.775034],[0.662711,3.809140],[6.297829,0.740087],[-4.461430,-6.184392],[-7.581609,-8.390990],[-8.247381,5.790715],[9.306813,-4.888602],[-2.582430,-2.640880],[-6.178452,-7.568531],[-5.275917,-7.253889],[2.172045,-8.750976],[8.369304,6.676224],[9.703059,1.317296],[1.026091,-7.197644],[5.913067,2.454167],[4.568439,-8.958564],[-6.075903,-9.649988],[-4.107528,-0.525211],[-1.772592,0.220478],[0.211364,7.451577],[-3.707029,-3.691332],[9.045096,5.177054],[9.704543,3.195022],[-8.729032,-6.477446],[-0.349419,5.563711],[-0.942889,-6.872634],[-0.306048,-3.703257],[-1.335795,7.957987],[-6.177399,0.714696],[-2.193343,-3.325996],[1.467970,5.760153],[9.584065,-1.767239],[-3.958018,-8.245250],[-2.972558,1.536185],[6.145961,-8.621722],[-2.884209,-0.146417],[-1.640057,-1.530024],[-5.480282,-6.895318],[-7.177387,6.216611],[-2.925270,-3.251756],[7.289641,7.153934],[3.650670,5.299161],[-7.626404,3.067036],[1.315336,6.246278],[8.307925,-8.478366],[3.317254,5.701306],[-1.353812,3.657544],[7.586180,0.016223],[7.438873,-3.746731],[-3.982648,1.663686],[6.710475,0.723211],[-5.309136,-0.470234],[-2.988235,-2.584277],[-0.216376,-4.257913],[-8.419191,4.381641],[2.165366,3.522245],[5.914928,7.142828],[2.948854,-2.749145],[7.307993,6.052688],[-3.389701,2.294573],[-8.562312,-2.458031],[-4.254275,-3.993218],[6.986882,-1.785139]], dtype = "float32")#candidate|901|(140, 2)|const|float32
bop_902 = relay.floor_mod(const_897.astype('float64'), relay.reshape(const_901.astype('float64'), relay.shape_of(const_897))) # shape=(140, 2)
func_392_call = mod.get_global_var('func_392')
func_394_call = mutated_mod.get_global_var('func_394')
var_916 = relay.var("var_916", dtype = "float32", shape = (2535,))#candidate|916|(2535,)|var|float32
call_915 = func_392_call(relay.reshape(var_916.astype('float32'), [13, 13, 15]))
call_917 = func_392_call(relay.reshape(var_916.astype('float32'), [13, 13, 15]))
func_654_call = mod.get_global_var('func_654')
func_657_call = mutated_mod.get_global_var('func_657')
const_920 = relay.const(1, dtype = "int8")#candidate|920|()|const|int8
var_921 = relay.var("var_921", dtype = "int8", shape = (528,))#candidate|921|(528,)|var|int8
call_919 = relay.TupleGetItem(func_654_call(relay.reshape(const_920.astype('int8'), []), relay.reshape(var_921.astype('int8'), [11, 12, 4]), ), 0)
call_922 = relay.TupleGetItem(func_657_call(relay.reshape(const_920.astype('int8'), []), relay.reshape(var_921.astype('int8'), [11, 12, 4]), ), 0)
uop_923 = relay.cosh(const_897.astype('float32')) # shape=(140, 2)
bop_946 = relay.greater_equal(uop_923.astype('bool'), const_920.astype('bool')) # shape=(140, 2)
output = relay.Tuple([call_884,call_896,const_898,bop_902,call_915,var_916,call_919,var_921,bop_946,])
output2 = relay.Tuple([call_885,call_899,const_898,bop_902,call_917,var_916,call_922,var_921,bop_946,])
func_951 = relay.Function([var_916,var_921,], output)
mod['func_951'] = func_951
mod = relay.transform.InferType()(mod)
mutated_mod['func_951'] = func_951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_951_call = mutated_mod.get_global_var('func_951')
var_953 = relay.var("var_953", dtype = "float32", shape = (2535,))#candidate|953|(2535,)|var|float32
var_954 = relay.var("var_954", dtype = "int8", shape = (528,))#candidate|954|(528,)|var|int8
call_952 = func_951_call(var_953,var_954,)
output = call_952
func_955 = relay.Function([var_953,var_954,], output)
mutated_mod['func_955'] = func_955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_837_call = mod.get_global_var('func_837')
func_838_call = mutated_mod.get_global_var('func_838')
call_1014 = relay.TupleGetItem(func_837_call(), 0)
call_1015 = relay.TupleGetItem(func_838_call(), 0)
func_630_call = mod.get_global_var('func_630')
func_634_call = mutated_mod.get_global_var('func_634')
const_1025 = relay.const([[-2.973292,-2.212728,-6.855419,-7.362322,-6.355080,-9.031273,-4.965470,7.423765,8.336646,-5.489685,-2.622828,-8.283694,-3.314153,-9.936084,4.296887,-0.665861,-0.110546,-5.831746,5.284127,-3.524164,3.227288,-6.992440,-2.432214,8.115671,4.315187,-0.526947,-7.246808,6.177268,-2.840860,-4.100818,6.197117,-8.342843,1.577062,-5.047184,3.467076,-6.135777,3.356894,-1.902989,-7.830949,-7.181289,-8.217638,6.809912,6.880383,8.418391,-0.449651,7.847310,-4.237602,1.459873,-1.508948,-8.739522,-8.026896,8.757991,2.464385,7.644143,0.370894,-9.213178,8.342951,9.636114,-1.401753,-8.663479,-7.886722,-5.843414,6.664415,-7.990146,8.257463,3.804252,-9.724307,9.047761,4.856806,4.149476,-7.639243,-0.204710,-9.022103,8.210756,-4.191674,7.749905,6.094862,8.173293,-1.763944,3.461041,6.051881,7.989324,5.801427,1.962122,-9.314571,6.581486,-5.733044,-2.204694,5.674506,6.614812,7.662720,-4.908167,-5.694920,-6.461285,-4.990980,-2.799793,-8.073274,4.093404,4.196730,-1.209355,7.917485,-4.748350,9.217006,-2.666019,-8.203126,-6.167313,3.060604,5.167717,3.605873,-8.478701,9.396365,9.918280,-6.964264,9.255026,2.084872,6.744805,0.500189,2.802503,-2.837026,-4.681349,8.084805,7.936260,7.802291,7.831304,-7.952875,-5.115029,-3.811889,2.677032,-5.456146,-1.260117,1.319620,5.020580,-7.496965,7.678051,-1.607265,8.028437,9.461665,-5.308149,9.525325,3.023570,1.265213,5.594382,5.169187,8.139983,6.570135,7.498397,8.324973,-2.318988,2.423979,6.940053,5.425479,-8.431912,1.351287,0.200466,-2.953588,-0.344802,9.496996,6.675565,-0.657461,-7.373965,3.232292,-9.916548,-9.894288,-2.986812,5.273155,-1.664976,-1.588300,4.641264,1.594856,6.987600,1.908375,-4.742362,5.016029,4.049147,-3.802187,-9.126872,2.434614,-3.534724,3.346292,-9.083522,-3.727157,1.380772,6.968582,-3.304197,4.507875,-8.186617,4.966409,8.714009,-2.214927,1.913491,2.801700,-6.394930,-7.603238,-5.129327,9.085082,-4.408412,9.245473,3.442615,-4.693308,-1.456592,8.987610,-2.822924,6.056761,9.133160,-3.056117,-1.150121,-0.463107,7.045546,4.620674,-0.720159,-7.707104,4.827083,-2.956630,-8.770425,-1.261150,4.226884,5.535072,2.384715,8.628622,-3.942647,5.342313,7.739297,-9.496002,-3.319306,7.456385,-8.025813,-8.073626,3.487721,-7.349997,2.800655,-1.659386,-2.838204,7.925114,-1.310081,9.685645,-6.504392,8.712473,-9.335684,-3.766126,-6.243207,-0.771305,5.548408,-2.770247,1.741358,-3.923969,6.569524,8.782501,-4.398776,9.542644,-8.565741,-2.241511,1.658984,-9.511345,7.789029,2.184686,-4.893369,-9.860274,-8.858113,9.532273,-9.157535,-5.924252,-3.808503,1.806528,-0.483821,-5.296263,5.868015,-5.221989,-3.360330,8.279719,1.499479,1.923508,-6.168263,-5.316117,-4.499814,-6.602147,7.313883,3.486528,4.184690,4.373948,6.728572]], dtype = "float32")#candidate|1025|(1, 280)|const|float32
var_1026 = relay.var("var_1026", dtype = "int16", shape = (624,))#candidate|1026|(624,)|var|int16
call_1024 = relay.TupleGetItem(func_630_call(relay.reshape(const_1025.astype('float32'), [5, 14, 4]), relay.reshape(var_1026.astype('int16'), [12, 13, 4]), ), 2)
call_1027 = relay.TupleGetItem(func_634_call(relay.reshape(const_1025.astype('float32'), [5, 14, 4]), relay.reshape(var_1026.astype('int16'), [12, 13, 4]), ), 2)
output = relay.Tuple([call_1014,call_1024,const_1025,var_1026,])
output2 = relay.Tuple([call_1015,call_1027,const_1025,var_1026,])
func_1036 = relay.Function([var_1026,], output)
mod['func_1036'] = func_1036
mod = relay.transform.InferType()(mod)
mutated_mod['func_1036'] = func_1036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1037 = relay.var("var_1037", dtype = "int16", shape = (624,))#candidate|1037|(624,)|var|int16
func_1036_call = mutated_mod.get_global_var('func_1036')
call_1038 = func_1036_call(var_1037)
output = call_1038
func_1039 = relay.Function([var_1037], output)
mutated_mod['func_1039'] = func_1039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_1063 = relay.TupleGetItem(func_864_call(), 0)
call_1064 = relay.TupleGetItem(func_865_call(), 0)
func_1036_call = mod.get_global_var('func_1036')
func_1039_call = mutated_mod.get_global_var('func_1039')
var_1094 = relay.var("var_1094", dtype = "int16", shape = (24, 26))#candidate|1094|(24, 26)|var|int16
call_1093 = relay.TupleGetItem(func_1036_call(relay.reshape(var_1094.astype('int16'), [624,])), 1)
call_1095 = relay.TupleGetItem(func_1039_call(relay.reshape(var_1094.astype('int16'), [624,])), 1)
output = relay.Tuple([call_1063,call_1093,var_1094,])
output2 = relay.Tuple([call_1064,call_1095,var_1094,])
func_1097 = relay.Function([var_1094,], output)
mod['func_1097'] = func_1097
mod = relay.transform.InferType()(mod)
mutated_mod['func_1097'] = func_1097
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1098 = relay.var("var_1098", dtype = "int16", shape = (24, 26))#candidate|1098|(24, 26)|var|int16
func_1097_call = mutated_mod.get_global_var('func_1097')
call_1099 = func_1097_call(var_1098)
output = call_1099
func_1100 = relay.Function([var_1098], output)
mutated_mod['func_1100'] = func_1100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_837_call = mod.get_global_var('func_837')
func_838_call = mutated_mod.get_global_var('func_838')
call_1105 = relay.TupleGetItem(func_837_call(), 0)
call_1106 = relay.TupleGetItem(func_838_call(), 0)
func_654_call = mod.get_global_var('func_654')
func_657_call = mutated_mod.get_global_var('func_657')
const_1111 = relay.const(-8, dtype = "int8")#candidate|1111|()|const|int8
const_1112 = relay.const([[-6],[-9],[-4],[10],[-2],[-7],[10],[8],[-1],[3],[4],[1],[9],[-4],[10],[10],[-7],[-6],[-7],[-8],[-3],[-5],[3],[9],[8],[7],[1],[10],[10],[2],[2],[-7],[-10],[-3],[-1],[-7],[-3],[9],[6],[3],[-9],[8],[10],[1],[-3],[-1],[4],[5],[3],[10],[8],[10],[8],[1],[-7],[-9],[-5],[-6],[6],[7],[10],[-6],[6],[-8],[-1],[4],[-6],[3],[4],[-9],[8],[-7],[5],[-8],[-3],[-8],[-2],[9],[6],[-8],[-6],[6],[-5],[-7],[3],[-1],[-3],[2],[4],[-9],[-6],[1],[-1],[-8],[8],[6],[8],[-7],[1],[3],[-9],[4],[3],[-2],[-9],[-5],[7],[-3],[-6],[7],[-8],[-9],[7],[9],[-9],[3],[-7],[4],[5],[6],[-6],[-9],[8],[-1],[-4],[10],[3],[6],[7],[-9],[10],[-6],[9],[6],[7],[-7],[6],[4],[-7],[-10],[-5],[-1],[-2],[-10],[6],[5],[1],[2],[3],[-5],[-1],[-1],[-6],[1],[-4],[-4],[-3],[-9],[6],[2],[-9],[8],[10],[2],[-2],[-4],[-9],[2],[-2],[1],[-5],[-4],[2],[1],[-5],[1],[-2],[5],[-3],[-5],[-6],[-7],[-4],[4],[-1],[-3],[-2],[5],[2],[-3],[1],[-10],[5],[2],[4],[10],[-6],[9],[-6],[-7],[8],[5],[9],[-3],[6],[-8],[9],[9],[-5],[1],[-10],[-1],[8],[8],[1],[-2],[7],[8],[-7],[-7],[-8],[-1],[2],[1],[5],[-7],[3],[-3],[10],[-4],[9],[1],[-3],[-2],[-9],[-7],[-3],[-3],[10],[-2],[-8],[-10],[-1],[-3],[-4],[-1],[4],[9],[-2],[-2],[-9],[7],[7],[6],[-8],[2],[1],[8],[-3],[-2],[-9],[-10],[-6],[2],[9],[8],[-1],[7],[-9],[-5],[3],[-4],[7],[6],[-2],[-1],[-1],[3],[9],[5],[7],[5],[10],[-6],[-6],[7],[-8],[4],[10],[7],[8],[2],[8],[-9],[1],[6],[-1],[6],[2],[-2],[2],[-8],[8],[-8],[-1],[2],[-3],[-1],[2],[-10],[5],[-10],[7],[-8],[7],[7],[-7],[2],[6],[4],[4],[-9],[2],[2],[9],[4],[-7],[10],[10],[3],[8],[-1],[-7],[-10],[4],[2],[-2],[9],[-8],[-8],[2],[-1],[-8],[-3],[9],[-10],[-7],[3],[5],[-9],[-9],[-10],[-10],[7],[-9],[-7],[10],[-10],[-8],[-1],[-2],[-5],[-1],[5],[2],[-8],[2],[6],[-7],[2],[-1],[-7],[-6],[9],[1],[-5],[10],[-3],[8],[10],[9],[5],[-6],[-5],[-5],[6],[-5],[-6],[9],[7],[7],[2],[1],[10],[-3],[-1],[6],[6],[-8],[-2],[-8],[-6],[-3],[-4],[-10],[-4],[-2],[-2],[-2],[-4],[3],[-7],[-1],[1],[-4],[2],[-3],[-6],[3],[-1],[-2],[7],[1],[-9],[-4],[-10],[-8],[3],[10],[9],[-7],[7],[-1],[8],[-5],[-4],[2],[-3],[3],[-6],[4],[-3],[2],[2],[-2],[-9],[3],[-10],[-1],[8],[-5],[-4],[-4],[-10],[8],[-5],[1],[-5],[-3],[-7],[1],[3],[4],[-10],[-10],[-10],[1],[-2],[1],[-5],[7],[3],[5],[2],[-8],[-3],[7],[-3],[-9],[-5],[-1],[4],[8],[-10],[-7],[10],[-2],[-3],[-5],[-5],[6],[-10],[-5],[-3],[7],[-3],[-2],[2],[-4],[-1],[-7],[8],[-7],[8],[-8],[5],[-2],[8],[-7],[2],[-8],[2],[-2],[9],[9],[9],[-4],[5],[10],[5],[8],[-1],[-2],[-8],[9],[-5],[-6],[4]], dtype = "int8")#candidate|1112|(528, 1)|const|int8
call_1110 = relay.TupleGetItem(func_654_call(relay.reshape(const_1111.astype('int8'), []), relay.reshape(const_1112.astype('int8'), [11, 12, 4]), ), 0)
call_1113 = relay.TupleGetItem(func_657_call(relay.reshape(const_1111.astype('int8'), []), relay.reshape(const_1112.astype('int8'), [11, 12, 4]), ), 0)
output = relay.Tuple([call_1105,call_1110,const_1111,const_1112,])
output2 = relay.Tuple([call_1106,call_1113,const_1111,const_1112,])
func_1115 = relay.Function([], output)
mod['func_1115'] = func_1115
mod = relay.transform.InferType()(mod)
output = func_1115()
func_1116 = relay.Function([], output)
mutated_mod['func_1116'] = func_1116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1140 = relay.TupleGetItem(func_1115_call(), 1)
call_1141 = relay.TupleGetItem(func_1116_call(), 1)
uop_1157 = relay.sinh(call_1140.astype('float32')) # shape=(11, 12, 4)
uop_1159 = relay.sinh(call_1141.astype('float32')) # shape=(11, 12, 4)
output = uop_1157
output2 = uop_1159
func_1164 = relay.Function([], output)
mod['func_1164'] = func_1164
mod = relay.transform.InferType()(mod)
output = func_1164()
func_1165 = relay.Function([], output)
mutated_mod['func_1165'] = func_1165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1172 = relay.TupleGetItem(func_1115_call(), 3)
call_1173 = relay.TupleGetItem(func_1116_call(), 3)
output = relay.Tuple([call_1172,])
output2 = relay.Tuple([call_1173,])
func_1197 = relay.Function([], output)
mod['func_1197'] = func_1197
mod = relay.transform.InferType()(mod)
output = func_1197()
func_1198 = relay.Function([], output)
mutated_mod['func_1198'] = func_1198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_1213 = relay.TupleGetItem(func_1197_call(), 0)
call_1214 = relay.TupleGetItem(func_1198_call(), 0)
uop_1216 = relay.exp(call_1213.astype('float64')) # shape=(528, 1)
uop_1218 = relay.exp(call_1214.astype('float64')) # shape=(528, 1)
bop_1220 = relay.multiply(uop_1216.astype('int32'), relay.reshape(call_1213.astype('int32'), relay.shape_of(uop_1216))) # shape=(528, 1)
bop_1223 = relay.multiply(uop_1218.astype('int32'), relay.reshape(call_1214.astype('int32'), relay.shape_of(uop_1218))) # shape=(528, 1)
output = bop_1220
output2 = bop_1223
func_1233 = relay.Function([], output)
mod['func_1233'] = func_1233
mod = relay.transform.InferType()(mod)
output = func_1233()
func_1234 = relay.Function([], output)
mutated_mod['func_1234'] = func_1234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_1282 = relay.TupleGetItem(func_1197_call(), 0)
call_1283 = relay.TupleGetItem(func_1198_call(), 0)
var_1290 = relay.var("var_1290", dtype = "int8", shape = (528, 13))#candidate|1290|(528, 13)|var|int8
bop_1291 = relay.divide(call_1282.astype('float32'), var_1290.astype('float32')) # shape=(528, 13)
bop_1294 = relay.divide(call_1283.astype('float32'), var_1290.astype('float32')) # shape=(528, 13)
bop_1317 = relay.greater(var_1290.astype('bool'), call_1282.astype('bool')) # shape=(528, 13)
bop_1320 = relay.greater(var_1290.astype('bool'), call_1283.astype('bool')) # shape=(528, 13)
func_249_call = mod.get_global_var('func_249')
func_252_call = mutated_mod.get_global_var('func_252')
var_1328 = relay.var("var_1328", dtype = "float64", shape = (52,))#candidate|1328|(52,)|var|float64
call_1327 = func_249_call(relay.reshape(var_1328.astype('float64'), [1, 13, 4]))
call_1329 = func_249_call(relay.reshape(var_1328.astype('float64'), [1, 13, 4]))
func_392_call = mod.get_global_var('func_392')
func_394_call = mutated_mod.get_global_var('func_394')
var_1331 = relay.var("var_1331", dtype = "float32", shape = (2535,))#candidate|1331|(2535,)|var|float32
call_1330 = func_392_call(relay.reshape(var_1331.astype('float32'), [13, 13, 15]))
call_1332 = func_392_call(relay.reshape(var_1331.astype('float32'), [13, 13, 15]))
func_392_call = mod.get_global_var('func_392')
func_394_call = mutated_mod.get_global_var('func_394')
call_1334 = func_392_call(relay.reshape(var_1331.astype('float32'), [13, 13, 15]))
call_1335 = func_392_call(relay.reshape(var_1331.astype('float32'), [13, 13, 15]))
uop_1342 = relay.atan(var_1331.astype('float32')) # shape=(2535,)
uop_1363 = relay.acos(uop_1342.astype('float32')) # shape=(2535,)
var_1375 = relay.var("var_1375", dtype = "float32", shape = (2535,))#candidate|1375|(2535,)|var|float32
bop_1376 = relay.power(uop_1363.astype('float64'), relay.reshape(var_1375.astype('float64'), relay.shape_of(uop_1363))) # shape=(2535,)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1382 = relay.TupleGetItem(func_1115_call(), 3)
call_1383 = relay.TupleGetItem(func_1116_call(), 3)
func_392_call = mod.get_global_var('func_392')
func_394_call = mutated_mod.get_global_var('func_394')
call_1384 = func_392_call(relay.reshape(var_1331.astype('float32'), [13, 13, 15]))
call_1385 = func_392_call(relay.reshape(var_1331.astype('float32'), [13, 13, 15]))
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1392 = relay.TupleGetItem(func_1115_call(), 1)
call_1393 = relay.TupleGetItem(func_1116_call(), 1)
output = relay.Tuple([bop_1291,bop_1317,call_1327,var_1328,call_1330,call_1334,bop_1376,call_1382,call_1384,call_1392,])
output2 = relay.Tuple([bop_1294,bop_1320,call_1329,var_1328,call_1332,call_1335,bop_1376,call_1383,call_1385,call_1393,])
func_1397 = relay.Function([var_1290,var_1328,var_1331,var_1375,], output)
mod['func_1397'] = func_1397
mod = relay.transform.InferType()(mod)
var_1398 = relay.var("var_1398", dtype = "int8", shape = (528, 13))#candidate|1398|(528, 13)|var|int8
var_1399 = relay.var("var_1399", dtype = "float64", shape = (52,))#candidate|1399|(52,)|var|float64
var_1400 = relay.var("var_1400", dtype = "float32", shape = (2535,))#candidate|1400|(2535,)|var|float32
var_1401 = relay.var("var_1401", dtype = "float32", shape = (2535,))#candidate|1401|(2535,)|var|float32
output = func_1397(var_1398,var_1399,var_1400,var_1401,)
func_1402 = relay.Function([var_1398,var_1399,var_1400,var_1401,], output)
mutated_mod['func_1402'] = func_1402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1418 = relay.TupleGetItem(func_1115_call(), 2)
call_1419 = relay.TupleGetItem(func_1116_call(), 2)
func_392_call = mod.get_global_var('func_392')
func_394_call = mutated_mod.get_global_var('func_394')
const_1432 = relay.const([5.738723,-7.058661,-4.033658,-4.091398,-8.381154,-6.988853,7.124709,-1.874416,1.569538,7.018476,3.153561,2.730650,6.133120,-0.540925,-5.416069,-7.091495,9.916316,-2.360754,-9.635569,-4.162109,8.573729,-6.379884,4.776542,-9.199594,-7.801988,-8.942968,0.771917,5.839516,1.140492,4.021339,-1.623062,-2.785938,-4.996937,6.001186,5.153313,6.042686,4.718774,3.426669,2.765204,9.475142,2.199615,6.319335,8.423711,6.590134,-5.583350,-3.830804,0.464251,-6.591600,2.135307,-3.476365,-4.702033,2.169502,0.987410,-0.433612,5.559555,1.250836,8.240305,4.553385,7.500856,-0.754594,5.298566,-9.962202,7.929544,3.238174,2.564198,7.835186,4.261636,0.915656,8.812501,8.070255,0.180201,-7.375650,1.544597,7.604194,-5.347161,6.969694,-7.956942,-5.500915,-3.318619,-2.331616,-3.797428,5.862425,-1.006438,-1.566192,-0.234927,-8.238047,-2.558961,3.939996,-7.620056,1.004936,-7.667439,6.588372,-4.397765,-4.074481,7.056836,-3.339000,-2.863384,1.757543,-0.678274,-2.316204,-1.470170,-8.278149,4.702951,-6.229748,-4.999383,5.177970,-8.110764,1.472547,-1.186131,-0.565795,-3.126687,9.661224,-5.361636,-2.897279,5.156456,-2.567982,0.669965,-3.526554,-9.409784,5.156254,-4.261176,2.185377,9.505860,-0.726074,-6.672487,9.004901,5.871943,8.314794,6.767426,9.588083,-9.215238,-7.566667,-6.134734,3.234336,-0.530626,-8.939581,7.648253,4.124374,-1.511815,-8.996995,-3.127622,-8.524181,2.668018,-5.228050,1.352150,3.119854,8.279744,1.502496,-5.921444,-7.302859,8.657189,-3.666585,-8.545978,1.884344,9.390517,8.301757,4.065607,4.373468,0.099240,-1.437359,1.645533,-7.550439,3.484075,0.514881,-1.002667,-7.355806,-6.997955,-6.249170,8.450594,3.684245,-4.573031,-6.765948,-1.683151,-5.444112,1.113905,-1.077493,-6.904110,6.361844,0.155463,1.894504,-5.698142,4.964345,-2.860369,0.946885,-8.717260,-2.005244,4.995026,-3.844625,1.635716,7.599019,6.085315,5.261120,0.587588,-0.013285,8.691328,-0.488973,5.762644,-4.839069,-5.080103,7.099614,5.570476,9.347813,8.259790,-2.449961,-6.769596,0.197265,-7.536052,5.688557,-2.601695,-0.256269,7.052016,1.404085,-7.343036,7.799577,-4.384996,5.600697,-7.210181,-0.668039,2.571004,-1.499364,4.046580,2.853074,8.410738,1.410052,-4.945934,2.607071,-9.436724,4.805558,0.973807,7.889693,3.915844,2.682981,5.322587,3.988972,-6.032219,-4.072772,-5.631917,5.589804,-3.900642,0.618750,-4.070858,6.755670,9.925467,-4.832402,8.722043,-3.724724,-7.130020,-8.938818,-9.486796,-0.366237,-4.502274,-4.436368,1.478321,-2.465530,-7.477129,-2.811244,-0.294807,0.334496,-8.761344,-7.257420,-0.286322,6.461753,-2.462946,-6.844807,8.525743,-6.201626,-1.704508,-3.261026,-0.051054,6.598786,-7.719203,-1.014453,6.143706,9.332661,4.336046,9.358575,-7.001782,-2.666217,4.197475,6.508530,-7.774452,-4.576201,-6.515046,-9.529241,3.783108,7.292303,1.827329,-4.128369,-4.329387,9.451569,-3.858262,3.377839,7.886670,1.800072,-2.270306,1.157108,-0.413378,4.897582,7.037278,-3.916901,-3.014148,-1.779022,5.472953,-6.621801,-5.699666,8.361284,7.477689,-8.289741,-9.885753,1.965580,-8.789584,6.224753,-2.346048,-9.397166,-6.997012,-4.626350,-7.441244,6.143871,6.343087,1.485406,7.743728,-4.811034,6.708784,7.111550,5.722878,8.031673,1.354967,-4.747144,8.463735,0.806986,6.649203,-3.849484,7.899859,8.342696,-0.091384,-6.036973,9.694452,-7.744538,5.696468,1.459474,-4.315900,0.197433,4.600851,2.040755,-3.033080,2.198144,-7.034426,6.378121,5.397455,-9.531697,-2.686108,1.288008,-8.067632,-8.538740,2.062076,-8.959246,-2.741936,6.405546,4.134555,8.957528,-2.496166,-9.511249,-9.707536,-1.289644,-4.273890,3.647382,9.282790,2.956552,-5.103004,-5.350916,6.403524,7.183638,-7.790757,2.140024,7.369390,9.557065,2.072220,-0.265555,7.249006,1.202794,-1.912847,-0.207510,3.796100,1.325396,-4.209318,4.067002,-0.247294,8.431060,-7.873213,-0.719841,1.913390,9.596607,5.490752,9.608864,-7.386093,3.603853,1.309156,-7.787401,4.877808,2.804893,8.389515,9.863661,1.199398,-3.482404,2.620578,-4.416918,-1.789439,-8.497490,0.115083,4.975794,-6.206423,-4.807355,-9.189615,8.097884,-2.052206,1.634249,6.021654,5.036666,-7.056496,-4.755219,1.133157,-4.910408,-8.144284,6.101453,-0.744922,6.466612,1.653119,5.346451,9.152114,9.816555,7.855179,8.927500,7.860077,9.578095,5.957856,-0.760444,-7.915634,-6.790345,9.865668,3.682240,-2.210916,-1.743281,-2.038994,-8.289091,-4.798904,-8.390342,-6.074076,3.428446,-1.992587,8.095750,-3.965988,-6.055164,9.645942,-8.613731,8.389852,-9.317397,-7.904717,4.546942,-4.202543,-1.327291,-3.391063,-3.422904,6.140633,-7.204479,8.131592,7.016232,8.406249,-3.209008,-7.160731,6.943567,-6.633640,-4.463984,7.463218,-4.604900,6.462799,-9.523883,9.782673,-1.041899,-4.141663,-2.922478,0.943483,-6.844249,-4.512892,2.678680,7.890598,-1.946037,-1.796989,-3.550620,-2.802974,-3.808405,-7.400876,3.250586,5.297705,-2.725348,9.530758,4.450905,-4.617423,0.133672,9.879085,5.447026,-5.807365,-7.090324,-6.435393,-3.580276,3.032819,-1.046322,6.627585,6.611903,-3.353863,1.595607,7.438549,-2.119285,-5.215086,-1.576696,-0.462733,-1.920343,3.405158,2.827430,7.227810,-1.234620,-1.048924,-8.658534,0.910634,3.641763,6.842204,5.223587,7.041457,-3.282344,7.160936,8.458246,2.243857,-7.591561,6.196048,-6.892901,5.342202,5.913036,-0.963570,-6.410791,-8.070312,7.138631,-9.472453,-5.933437,-2.016158,1.749670,0.435868,4.862989,-4.052265,0.677298,8.349310,-6.443185,-5.616049,3.778565,-1.247474,-2.007641,7.247580,-3.857517,-9.898552,7.412285,-3.920177,4.077652,-1.458401,-0.571778,-9.823309,-6.039379,7.883224,7.294852,-6.943312,-2.288378,-4.437735,8.735580,-2.743839,5.860284,-9.563970,0.375340,6.258578,-6.994451,0.706547,-6.157678,-2.690483,-1.043699,7.770023,-1.850765,-1.811672,-1.900249,8.453679,-2.749301,-1.821724,8.657734,-3.554950,2.332115,4.217799,0.728708,-0.570718,-3.805392,-7.279308,-5.349117,-9.887999,-8.457535,-3.614273,6.051379,-2.560729,5.107570,1.772530,-6.600585,-0.763797,2.237277,7.698423,-8.044969,-8.530291,0.471399,2.786659,2.777720,-8.379352,-5.343248,-1.331262,-3.554698,0.081956,7.499960,-2.201062,3.310136,0.165141,-2.582933,5.520428,-2.991414,-4.800931,4.256245,-4.576437,2.311597,-0.519490,1.138969,-6.028886,2.389649,2.289500,-1.329127,-2.172739,-9.587178,5.100903,3.803078,-0.156141,-3.223844,2.370487,-5.156394,-7.775653,-7.195829,-8.050911,-7.024320,1.453955,-8.754368,-7.269427,2.180915,-6.981153,8.528886,-1.617594,5.697661,-3.292206,5.209376,4.827980,9.805378,-8.151807,-8.093746,2.821695,4.424569,-2.116731,-7.690943,-6.831767,-4.740791,6.781191,-9.294024,-6.762988,-1.898345,-9.941445,-2.829291,-0.442326,5.741670,2.323576,6.893973,-1.688001,9.463267,-1.609292,-9.605998,6.806695,-8.396215,-3.485262,4.924968,-4.833336,7.986494,8.605223,-7.194468,-6.690361,-2.415092,3.882084,-5.369961,-9.419434,-5.324515,9.331203,-4.227895,0.428948,-4.643946,5.335213,-3.404192,0.290660,-4.327911,3.081641,-2.447942,0.166062,0.591069,-5.792985,-2.425992,-8.189124,-6.366425,1.189910,-5.836610,4.583200,-7.107321,-7.284670,-0.537569,6.682636,9.182726,1.985199,-8.958430,-5.674388,7.154233,1.771041,-2.023090,-4.794782,-4.925021,2.458398,9.962806,5.337991,2.703599,-0.755760,9.706792,5.758597,3.603149,6.709542,9.148153,3.691252,-2.744089,-5.416076,-3.282935,3.646289,6.551138,-8.093835,2.755644,-0.869182,0.323992,-4.036346,-5.888802,4.981938,-0.903597,9.767142,9.440564,-3.764699,-2.560603,-3.681714,-4.599525,5.922817,-2.648287,-6.555917,4.225225,-6.568546,2.898092,3.416253,-9.138185,2.148070,2.944763,-7.128527,-6.107192,2.196896,-9.018036,6.686774,7.725616,-1.113140,-7.925162,-5.769873,7.510482,5.022242,8.478052,4.111796,0.080549,1.229948,9.462707,2.271133,-4.057521,-6.832971,-3.183983,6.835364,-0.198669,7.286891,-8.439652,-0.121659,8.365467,5.582061,4.258886,-7.192407,7.208256,8.491742,-0.436195,-0.932068,2.731006,0.321369,9.579530,-5.691642,-4.207235,-4.802724,5.927392,-0.884361,-8.727836,5.973635,-6.267021,7.183336,1.131632,3.880131,4.858632,7.444374,-0.763867,7.819168,3.438527,-1.786851,6.196346,9.646839,8.426698,2.019061,0.273719,5.272545,0.365805,5.747297,-8.087734,-1.122273,4.438378,-9.530004,-1.550480,9.012244,5.126344,0.491985,-3.287197,6.312195,-9.244437,-2.668427,-8.628525,-0.607341,-6.610284,-7.013802,-8.488364,-6.877282,-7.533446,1.892961,-1.399850,9.189932,-6.315187,1.330581,6.808269,8.871211,0.450859,4.085002,0.857262,0.728910,7.638074,-8.260171,-7.049838,7.383890,-5.740719,8.118116,1.119550,-4.212916,5.321319,6.824294,1.307617,2.689232,-5.434879,-7.884909,-0.060995,9.107001,1.233513,4.155458,-2.896797,8.509979,0.068220,-3.618541,5.682415,7.808073,-8.319984,4.889784,3.528548,-4.317285,5.606402,2.736254,5.189638,0.920262,4.387497,-5.580330,-4.867091,-2.251468,4.206595,-4.647541,5.964020,2.836645,-8.376498,0.350565,3.404531,6.122529,-4.762240,-6.462534,4.787255,3.872593,-8.945773,2.767948,9.831935,6.866192,-3.690262,9.368574,6.017823,7.790113,8.413964,1.732592,-0.594420,0.355793,5.916356,-4.280111,3.112666,3.574347,-7.817914,-6.840717,-4.975715,-6.275118,-8.924618,6.237304,-8.130625,8.855415,3.307305,8.611255,-2.353436,5.523637,-0.705684,-3.610070,0.844452,-2.343073,-7.000100,2.844635,-4.234929,0.495740,0.135480,-5.395016,2.060718,4.963144,-1.162811,6.938249,5.314695,-7.576799,-9.474012,4.560047,0.928846,5.363291,0.823118,-8.721782,-5.266745,-8.855599,-5.943329,-6.737224,-2.503567,3.748095,-5.054785,9.205256,4.232887,8.947552,6.506663,2.799531,-0.592958,-0.255904,3.040820,0.466143,5.680872,1.089358,-6.862837,9.862254,1.920156,4.639117,3.895047,3.264585,7.058742,7.334930,9.220129,7.053220,1.316323,0.356586,-6.992621,4.393148,-5.692206,-1.697732,-0.415032,-0.822222,-1.554280,6.260696,-5.714855,-2.486174,9.472046,-6.115100,-8.112914,5.617540,-1.200776,-5.907096,8.937663,-6.766205,-5.338634,1.372620,-6.028765,-7.112534,6.508785,0.634302,-8.306282,3.416450,0.738397,-8.808592,7.835375,6.243108,5.515435,4.015734,6.592112,-6.667869,-0.494864,-6.075324,4.336017,6.170186,-9.008512,8.985418,-3.013697,6.066711,-4.206523,9.584495,5.315434,4.782753,-6.612581,5.404581,-8.043117,1.369648,3.333261,-0.758906,-5.356101,-3.523279,-2.048956,2.311063,-8.508700,-5.468277,-0.973302,2.001324,-0.171725,-3.550010,4.964860,6.363280,-0.442757,-2.582678,-0.408041,-2.434953,-3.683905,-6.907079,-1.432770,4.541147,-9.720798,-9.493229,0.996376,-6.342774,-7.688035,-3.654154,-3.276631,-9.541050,-2.539812,9.580749,1.179935,9.724467,-9.895085,-5.468910,7.318566,8.898259,7.981046,-4.205660,3.624712,-0.164779,-4.153877,5.812903,-2.177929,1.588100,-4.626403,-4.195292,-9.789921,9.481923,0.528902,-8.133948,4.097005,-7.776578,1.918730,4.224206,2.562912,-2.114410,-3.824725,-2.170703,1.434872,7.531490,-6.738524,6.173038,1.633187,5.639811,-1.697808,1.665463,-6.258042,-4.242573,7.696472,-8.927298,-5.746593,-3.103871,3.992417,5.482340,-0.501283,-4.447856,-2.291577,8.914019,5.099269,-1.756818,-8.736528,5.420919,5.515366,-2.473783,-2.791940,9.840328,-8.306592,7.924774,2.445598,-8.172357,-5.655950,-8.815122,8.073747,-9.312879,3.745388,-4.738097,1.007580,-3.594249,-5.058077,4.057984,3.707320,6.093531,-8.041939,0.507987,6.042837,9.917811,3.886417,3.892443,6.445048,3.926811,-9.304230,8.265030,7.206498,4.348467,-2.726889,-6.675156,9.364847,0.402006,0.473501,9.518194,0.333605,-5.353083,6.514300,4.692317,1.799608,9.749728,-7.940283,8.072223,-4.247220,4.742029,6.659413,-9.036638,0.150246,-0.935644,4.881521,-3.629882,-1.595668,3.476667,-4.289474,9.199555,0.337522,0.492572,1.753918,9.640408,5.172090,-2.044901,3.491205,-6.930122,7.009114,7.830574,-9.651806,7.426864,-3.415968,-0.270746,0.297212,-7.138872,-7.253625,-6.703686,3.104664,9.897246,9.041802,0.898584,4.577356,9.206450,6.505495,6.440360,-9.038064,-4.551695,0.615595,2.183884,-4.614378,7.389250,-2.953216,-2.445026,3.889849,-2.154228,-6.709659,6.532903,3.785670,-0.314767,2.514690,9.101023,-8.860585,-6.226909,-8.822379,-5.158232,-3.522623,-2.310452,9.038064,-1.368530,-7.001788,8.116803,-5.962627,-4.363277,-9.118418,-7.026651,-6.599627,8.687866,-0.739429,-9.512251,-3.480129,9.396463,-8.180696,3.706233,4.987987,0.982447,-2.267593,-9.854793,9.295246,3.360358,7.908230,-0.144172,1.033272,-2.859057,7.585752,-2.615361,3.936082,-2.533726,1.818002,7.943238,0.205715,5.022826,-7.018601,6.701792,-1.979074,4.602546,-2.685531,-8.490952,8.743012,0.023616,9.232338,-3.117076,-3.754824,5.526862,-7.652153,-5.165183,5.312760,-8.233635,0.579371,2.415180,-5.167828,5.052995,-9.243091,-8.393814,-5.410693,7.892384,9.033221,-4.399419,-8.614900,-8.298423,-0.101068,5.656388,-7.806519,5.922362,6.294190,6.077221,0.952251,-2.551928,-7.161075,-6.401842,5.094565,0.155620,1.220136,-1.403079,8.671896,3.941606,1.903397,0.774079,-0.334143,5.452382,2.615264,8.947852,1.954900,8.611632,-3.770426,-0.430713,2.250324,-2.419763,6.667741,-3.419896,4.043915,-3.457295,-3.297093,-8.352648,3.286380,-9.873244,8.760415,3.645503,-1.509109,-7.080739,-4.040686,-8.207795,-3.286299,4.244693,7.868050,-2.683511,1.094541,5.561956,-9.998270,-6.490597,3.241949,6.038508,-0.731372,8.135925,7.099778,9.762258,-0.255215,0.059154,-1.222738,-4.148326,-4.903908,9.453630,7.120218,-9.909917,-7.510567,3.064986,5.537869,-5.806652,-3.859553,-7.459228,-2.955425,7.118039,3.622035,7.481148,2.857883,9.644392,3.524879,6.675585,5.755588,-4.860011,-4.324664,3.986228,-8.955559,8.853988,0.425619,-2.479039,4.389264,-3.257672,-6.170867,7.127791,1.565550,-5.468963,2.979415,-3.591618,1.364928,-3.001294,-9.551250,2.210434,-5.017170,1.879021,0.068931,8.058475,-7.467956,8.843969,2.343869,-5.522733,-8.465080,3.883394,9.531791,-3.357740,7.723564,-9.983732,0.894480,-6.231490,9.883132,5.872142,-8.135493,4.069373,4.940138,9.775399,8.413920,8.290605,-9.258093,1.842771,-5.225668,-8.985520,7.967115,-3.217190,8.348551,-9.557130,-2.288628,0.765093,-7.699034,7.147339,7.397307,-4.534007,2.739784,-8.225660,2.105341,6.270355,-6.052539,7.034001,-6.406439,-0.477629,-5.662126,-4.314220,-2.483398,9.603038,6.227104,-0.504165,-6.816153,2.302889,4.363123,2.066975,-0.837917,-1.790583,8.669492,-3.635545,5.527386,0.477279,0.424922,7.147703,9.831035,-3.796526,0.527992,0.761588,9.312155,6.632235,1.818336,7.055742,0.141485,-2.708426,7.519806,5.014531,2.653419,4.938830,-9.306803,-8.097242,8.913868,-2.022473,-0.506696,-6.618670,6.606520,-2.516189,7.643595,-5.616242,7.990017,4.913045,8.451638,-4.194978,1.344833,3.450650,-6.650518,7.250491,-7.051636,-8.875405,5.472155,-7.842819,4.178215,1.858518,8.918174,3.151097,-2.870252,3.435822,0.543360,-1.357572,3.119203,2.537955,-0.509962,-5.282162,-5.322213,1.090161,6.663413,-6.756652,-7.712133,2.739933,3.367211,-3.810328,1.469317,2.201770,0.877859,7.629680,4.424913,-9.174317,8.843016,-8.542717,-5.682821,-3.434684,-0.917669,-5.857436,-0.433231,-7.593958,-9.481172,-9.084574,-4.677980,9.024016,1.376573,7.593364,4.027536,-9.758380,-2.899738,-0.309660,-9.441533,-1.694912,-0.098465,3.945894,8.920533,-7.758805,1.600766,6.501647,6.025616,4.031965,-8.213730,5.302861,8.751432,-4.776152,9.204331,-1.047825,3.065936,-7.992185,5.336079,7.868274,0.538988,-2.440280,-0.895895,-7.996098,-0.388148,-0.264803,-7.064591,-1.353677,-5.171092,3.914122,-3.180809,0.372291,4.732495,6.135466,-4.689858,7.759002,-9.605118,-0.383734,6.904994,-5.707623,-5.964401,-4.110099,7.293791,-9.768784,-0.865981,3.593880,0.526089,-5.541605,-2.078951,5.827361,-4.736361,-5.266982,2.307777,2.319823,8.438946,-6.743838,1.389633,5.052998,-4.823719,-7.114351,3.364507,8.183317,-7.813235,1.866441,8.827727,9.068946,9.185841,-6.153991,-2.934867,-1.780282,-7.893540,-8.542736,1.184049,-6.020643,7.244124,-5.125591,-2.710932,-0.774873,-2.958484,7.117401,-2.523483,9.938598,-1.096815,-3.293725,-1.477629,-9.028065,-7.693913,-8.034518,-1.049405,2.798566,0.218804,2.610820,3.890803,-4.389037,8.795375,6.976750,3.916979,-1.143617,-8.541972,-8.555889,0.075977,4.523996,7.030184,7.015613,-4.523719,-4.543315,3.940380,5.274586,3.246940,-4.004236,5.508322,-3.307723,-3.441234,-1.317650,-4.071374,4.811926,-2.253314,1.990147,-4.101792,6.940502,3.609149,-9.509189,8.527347,2.869797,-6.672138,-3.227341,2.726914,-9.476302,4.541641,-5.282603,3.123389,8.940896,0.049469,-7.561138,9.470471,-3.564244,8.292906,1.726775,9.595211,2.295839,-6.427228,5.240896,-4.574243,-4.769261,4.372856,2.671605,-4.182446,-7.612176,2.850572,-8.303298,-7.982145,8.780734,3.299893,6.420220,2.035870,-8.812147,-9.014318,0.514193,6.819137,-1.514498,3.964206,-3.486744,-9.616898,9.049638,8.135173,-6.457424,-2.051934,6.003953,3.985085,-8.863781,0.998049,-6.112027,3.963771,-9.495022,5.287825,2.011020,0.007439,3.732408,-6.493230,2.911688,-7.965487,0.102633,-0.109064,-7.441320,9.876215,-2.391433,-4.221118,-9.150676,5.301411,-4.939294,8.563717,8.121219,0.700714,-6.648049,5.373421,4.235010,-4.621113,-1.433293,3.200463,-8.303356,-6.704353,2.960559,6.978557,-0.036645,3.266962,-3.255436,-0.893858,6.611602,-1.852831,3.048521,7.271238,0.445998,6.252817,-8.091036,-9.081068,-1.515539,-5.437329,6.401219,0.878701,-6.870079,2.756578,-9.118827,-8.633282,1.842996,1.396522,-1.121070,-7.818571,-5.327740,7.598311,-5.907501,3.757956,-0.330587,5.737537,-8.846942,4.729738,2.693743,4.422704,-2.242299,3.372916,-3.545448,-0.409222,1.328699,-9.452885,9.370514,4.057704,0.853449,-9.657456,-2.344375,-3.621265,-3.504711,5.120450,-0.393552,5.993158,-1.403409,-1.032168,-0.779195,8.331286,5.113765,5.658795,0.695543,9.950638,-4.688478,4.724073,3.849255,1.716924,6.524986,3.273154,1.946300,3.599090,4.083869,-4.192318,-9.475161,8.817775,6.566357,-7.043958,7.266313,9.081412,6.264340,-2.677192,-9.796815,5.134625,-0.409578,0.141162,8.210919,7.223389,8.196783,-0.536833,4.955985,5.955264,7.744719,-5.728521,3.153915,-6.847909,-4.025574,8.403756,-9.390414,-0.743900,2.401318,-8.128837,-2.342727,9.437098,5.983298,-6.624023,-3.467004,8.324419,2.618825,-8.780669,5.400026,-3.504151,-3.726622,1.084416,-3.953973,5.875252,6.449701,-1.808773,-0.878402,7.107487,-6.366922,-3.912721,-2.354045,-9.849623,2.009297,-7.669774,4.843866,-8.772796,2.484840,-2.241769,-4.701823,1.765191,8.307761,1.684713,-4.598210,3.209678,-7.025308,3.490947,1.017118,8.217877,-3.367794,3.948433,-2.336624,5.245058,6.117711,3.932906,-5.668627,-1.331160,-6.040443,9.649126,-2.247152,6.799979,-9.571648,9.938505,-4.278143,4.443937,5.961456,-5.298745,-0.274762,5.676699,0.647237,7.774710,6.605157,0.352656,-5.873774,-0.533219,0.484195,3.916136,-5.720336,5.913105,4.067023,-1.176226,-7.448912,-2.314110,-9.051519,-2.709889,-7.320522,8.175861,9.413701,-6.829122,3.345054,2.629275,-3.230552,2.559428,5.365194,-6.406380,5.306753,1.308026,1.600138,-4.283102,0.943304,-5.993976,8.954529,-6.987198,-9.844796,-1.914083,5.912901,2.091604,-1.224443,8.420869,6.001176,7.409454,-4.689258,-0.105154,-1.926406,9.555634,-9.755702,-8.323915,-9.414018,-7.039679,5.906458,-4.033021,-5.831428,-6.125153,-9.090762,1.793207,3.439297,-0.536820,5.513956,-9.077433,-0.036948,-9.094509,2.691460,-1.626159,3.054846,-3.898554,1.149666,0.643374,-7.944153,-7.068087,8.950136,4.506089,-2.629635,-9.164625,-8.995806,-9.556939,1.135306,6.635625,1.591087,-1.713156,4.127827,3.619647,4.489072,-6.393211,-7.876996,8.217591,-9.442013,5.575539,-8.999058,6.820713,-1.860797,8.332979,-7.029560,-4.950527,-4.814677,-5.600722,2.298345,-0.494150,-6.160606,6.521166,-5.946173,7.947115,1.949010,3.419333,-3.002186,-5.668265,-0.331811,-9.456393,1.827849,-5.418110,7.781219,1.945427,-9.528109,-9.633708,-2.091370,-2.780710,-9.591992,-9.972868,-5.551539,6.363643,-1.922224,7.149367,-3.989115,9.334376,-5.840226,8.885380,-0.659624,-5.220285,5.577950,8.801593,-8.352271,-0.499868,3.930995,-9.214726,-7.046018,0.734481,-9.196030,-2.080717,-2.466782,-7.745288,3.397897,4.852816,-8.497936,2.073607,-2.567481,0.233294,-7.357203,7.425728,-6.014705,1.498465,0.926764,6.905940,1.798841,-7.705385,2.317526,-6.307700,8.745680,-1.061093,7.969391,8.254674,0.375614,7.710545,-4.346159,4.224093,-6.590871,5.715030,9.679340,7.525511,-8.170673,6.191601,-8.043964,9.958570,9.939461,3.959041,0.095188,-5.130917,-5.885873,-1.881889,-3.375655,8.200259,-7.408013,-4.073267,-0.315229,-3.556395,-4.056926,-2.478002,6.828409,-9.340767,-4.704296,5.682006,-6.405225,-6.521023,2.619034,3.632419,-0.514946,6.048583,2.198159,3.983268,9.118620,1.010751,3.283580,5.283367,6.688674,2.025773,7.355193,9.564477,-7.955394,-6.498815,-9.442834,5.551584,9.856277,0.802053,-9.009540,-2.572920,-4.935557,7.308632,5.409060,-3.943717,-3.189464,-8.311099,-1.002654,2.879374,7.896110,3.585568,2.909793,6.115366,0.389012,-3.507848,9.141203,6.465525,-8.615855,8.028588,0.720961,-3.853965,6.100518,-5.589625,-3.252201,-7.345326,4.252692,3.414318,-2.990236,8.154123,7.517044,3.593778,-5.739214,-4.554507,-4.467946,4.707652,5.985369,9.159717,-9.553653,-3.037112,-2.860342,7.204656,-3.379617,-6.651746,8.826989,-9.001673,9.829722,6.668083,7.088586,-5.640581,1.483032,0.771419,3.427884,9.894795,-9.670323,-9.353404,-7.169849,3.192282,-4.655106,1.786162,9.864366,-1.078691,3.300128,9.500176,4.195217,-8.130471,0.886095,3.576526,3.721663,-8.902053,8.981029,-0.579151,-0.737050,-7.784618,7.783557,-3.323963,-4.527573,-3.538500,-1.712194,-4.772612,5.917457,-5.984669,-9.887843,-4.577193,-5.530093,-6.966005,8.491338,7.198618,-3.605500,1.568870,5.334189,-2.856702,-1.603712,-2.115479,-6.108298,1.936697,4.221652,-3.243061,9.935944,2.397878,-9.949428,2.656908,-4.298282,3.423039,7.134094,5.606845,0.200683,-1.634591,-1.036305,-5.932797,1.723693,-8.408504,-5.409387,-4.526954,8.342527,6.297273,0.250891,-7.017392,-0.305654,-1.779455,-5.487104,-4.647146,-1.607438,9.482580,0.067706,3.596154,4.631210,-8.027033,6.037856,-0.563286,-2.388166,-6.280355,-4.342514,-9.931173,-5.674989,-4.720143,-8.834937,-5.795568,6.303976,2.905139,-2.326671,5.916297,-6.903049,0.802835,2.114498,9.307759,6.163945,5.947514,-9.475304,-0.343568,6.825075,2.012083,-8.929619,-6.585630,7.251235,-1.539404,-8.006762,-1.483724,8.060155,-6.458024,1.023904,3.517068,0.388734,-4.751708,-4.664020,3.314627,-4.235545,5.453370,-1.422776,-2.677465,5.264976,8.917566,7.267426,-9.784008,0.569370,6.337205,-7.623764,-4.217108,7.795691,9.637998,3.426025,2.813398,6.787140,-9.066265,-8.398919,-9.251821,-8.868464,-2.818569,6.011187,-9.739752,9.895142,3.352338,-8.878234,-0.545148,-8.254967,6.663461,-2.691433,1.457867,7.324579,8.666200,6.025942,2.418089,-1.371034,3.022091,3.442349,-4.706495,8.072162,-6.059078,6.698370,1.042134,6.403091,-9.018597,-2.465897,8.465211,2.350496,6.655746,-9.911139,-2.790112,-4.486651,-3.279086,-0.729482,1.676240,-1.619491,6.247542,-6.177755,-0.060757,-6.111273,3.850576,-6.805947,-5.795922,2.031838,-8.600247,9.477415,-1.893298,-9.048403,3.470329,-9.766957,-9.133330,-4.800840,-6.875415,3.850935,-0.040969,1.967625,-8.207292,8.163376,-9.859909,-4.954188,-2.796973,1.817122,-0.387586,-5.833675,-6.884000,-0.558494,8.352471,3.258548,9.713201,-1.447873,-4.641457,7.837813,-9.191836,8.606567,6.877506,9.004984,7.212102,7.610677,1.647576,9.285543,-5.725953,-2.360167,7.627488,3.092027,-7.864977,-0.586540,-3.427017,1.864932,-9.444809,0.509716,8.513506,-5.825440,8.882830,-5.928397,0.955682,7.474636,9.915648,1.109645,9.854265,6.449952,2.042227,-0.957369,9.058058,-6.499546,-7.996873,0.347024,-7.701850,7.502294,0.907678,-0.368938,1.992134,-8.225490,-2.151153,2.955663,5.535181,7.111638,2.841325,-1.449387,-5.898429,-3.166237,-9.672083,-1.869874,1.644834,-3.288497,0.017836,5.749101,-9.240192,4.139860,-8.170793,-7.386885,4.344278,-6.216398,3.345258,3.524880,1.089536,6.046187,5.881015,-3.142607,2.659661,-1.373934,-9.117936,0.766482,9.757037,7.544677,-6.077867,2.562238,8.775583,-0.619467,-5.407346,-3.844547,7.097291,8.002344,4.918750,-6.224304,2.110631,7.514484,-7.761480,-1.783905,8.458845,8.162805,-1.642946,3.716867,-6.695997,-5.087001,2.100299,-6.068672,-5.485477,-5.789925,-7.953186,-8.525332,3.219976,0.478860,9.668959,4.236168,5.364637,-6.463508,-8.987041,9.985948,5.656174,5.294196,2.045228,7.737432,-9.003710,4.071130,-5.480057,-5.540793,-1.696997,-4.236630,3.826110,-9.314188,-6.309186,-2.739288,5.218830,-1.334480,-3.538062,0.792679,6.468786,9.237271,-8.718449,-4.436721,0.126776,-2.174246,-2.705818,3.220795,2.601487,-2.182827,-6.807795,-7.297518,7.443729,-4.635232,-5.815200,6.505423,-5.129986,5.450223,3.198744,-9.166191,-9.945263,-9.221513,9.507716,3.890980,-2.424631,-5.424343,-7.417168,-1.384699,7.762461,1.449676,-0.731837,-5.164711,-5.074628,-6.513076,6.269388,-5.362940,6.506499,5.642396,-8.535822,4.396293,-5.260623,8.015757,-1.664664,-2.986285,-3.682786,-9.696618,-8.594116,5.487773,-8.715356,1.839744,-6.460781,-4.160412,-5.068978,-4.460862], dtype = "float32")#candidate|1432|(2535,)|const|float32
call_1431 = func_392_call(relay.reshape(const_1432.astype('float32'), [13, 13, 15]))
call_1433 = func_392_call(relay.reshape(const_1432.astype('float32'), [13, 13, 15]))
output = relay.Tuple([call_1418,call_1431,const_1432,])
output2 = relay.Tuple([call_1419,call_1433,const_1432,])
func_1442 = relay.Function([], output)
mod['func_1442'] = func_1442
mod = relay.transform.InferType()(mod)
mutated_mod['func_1442'] = func_1442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1442_call = mutated_mod.get_global_var('func_1442')
call_1443 = func_1442_call()
output = call_1443
func_1444 = relay.Function([], output)
mutated_mod['func_1444'] = func_1444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_837_call = mod.get_global_var('func_837')
func_838_call = mutated_mod.get_global_var('func_838')
call_1464 = relay.TupleGetItem(func_837_call(), 0)
call_1465 = relay.TupleGetItem(func_838_call(), 0)
func_1397_call = mod.get_global_var('func_1397')
func_1402_call = mutated_mod.get_global_var('func_1402')
var_1477 = relay.var("var_1477", dtype = "int8", shape = (6864,))#candidate|1477|(6864,)|var|int8
const_1478 = relay.const([-4.981884,-5.809341,4.980173,4.843742,2.510011,-0.188047,6.140396,2.319809,9.647845,-1.606544,0.487968,-0.347771,4.221208,4.011346,6.832979,-0.033282,-9.337207,-1.744383,-7.303232,-1.920294,-9.561714,3.166544,-3.061413,3.873591,-5.851097,-5.992289,8.996927,0.025860,8.904060,-8.750915,4.745929,8.020538,0.514581,-2.791340,8.641977,-1.733491,3.832191,-8.606324,-2.482263,-3.532199,7.145727,-6.274218,2.370165,1.221418,6.034468,-4.224310,-5.583052,-1.575523,8.276216,8.430673,-6.477541,-7.199109], dtype = "float64")#candidate|1478|(52,)|const|float64
const_1479 = relay.const([-0.403913,-5.956519,-3.557141,7.070017,-5.802319,4.190986,-5.080819,1.618351,1.124563,-9.402836,-1.659401,6.377415,0.866550,-8.503378,-4.202015,1.574931,2.157287,1.181590,-1.178025,-7.875527,9.318554,-9.793393,4.041008,5.211245,-9.165104,8.297115,2.579823,5.285258,2.889753,-8.631663,7.005270,-5.527138,4.132034,9.874667,-8.181630,0.563467,4.879781,2.660030,3.869718,9.303385,4.365801,-4.806261,8.271446,5.281792,7.536390,6.167549,0.921146,-4.522197,5.442568,5.198572,1.518139,5.819061,-8.245380,8.225090,5.488148,1.478999,1.993462,-7.321530,7.915072,6.000293,5.635816,-6.309008,1.596523,6.612442,-8.981975,-7.341020,9.213312,-9.363175,7.144967,7.234396,-9.951356,3.050000,-1.028526,-6.422772,4.708131,2.513263,-4.432700,-2.042720,-8.982742,-1.167953,-7.794252,-6.472347,1.927943,0.406880,-1.958017,4.604074,-6.388962,-6.857602,-1.135805,-2.697495,3.946411,-0.162793,0.451007,2.750768,5.322579,-4.335395,-0.646602,4.143132,2.698208,-9.158604,-2.399239,-1.081666,-7.768221,5.119711,-2.764893,2.681140,6.560079,4.977655,-1.985655,-9.069177,2.115439,5.034070,7.387979,4.233310,3.842501,-1.230361,0.545262,-8.188686,-2.761224,2.728654,-2.359937,-0.962828,-7.984059,-1.068418,-6.983940,-0.414515,-3.270517,0.284346,3.692011,-5.132253,2.196896,-2.270574,-5.044793,-2.999946,-1.966328,0.085435,-5.000045,8.634086,9.185400,6.952224,-4.298525,2.676512,7.825172,9.190398,2.872361,-3.594649,-7.572201,-2.495165,5.758807,9.686927,-3.158144,-0.464077,-2.347380,8.827288,-1.260127,9.383336,0.748045,5.373453,-4.781979,3.163649,-1.352177,-1.053544,-2.404359,8.183403,8.814424,8.107833,3.664692,1.565357,9.283896,-1.679667,9.017601,4.391479,-8.727994,-0.169213,8.981744,2.989933,0.260534,-2.330338,-7.823330,6.823735,6.940900,5.558361,2.000371,-6.791917,7.069182,-5.686594,2.619734,9.356243,-1.594854,-7.277082,5.437494,1.117206,1.248944,-6.115977,-5.785383,4.430698,9.207820,-5.316123,8.902800,7.403631,1.152732,-0.675571,7.636211,6.017779,5.434041,8.768687,0.127700,4.793826,7.017122,-6.447967,3.228989,6.699779,-4.620889,7.692402,-0.900124,-5.519261,-7.962641,-5.743700,5.613297,3.674567,8.117926,0.107275,-6.024141,9.196734,2.068530,2.985711,-9.843070,1.250671,-3.097243,-5.772743,9.240400,6.378466,9.907866,-9.265475,5.508103,1.879200,-9.425011,4.912729,6.423896,-5.121101,-0.240201,-1.778171,-3.118789,1.393505,-1.222692,-8.635022,-8.589747,-3.768325,5.951098,-7.034902,-0.528367,-6.378339,8.698426,8.969705,-5.202365,7.939315,3.947266,7.335712,9.010347,1.117864,6.312681,0.988444,8.120286,2.421696,-7.272721,1.941725,-6.282343,-6.164700,8.986981,-7.488649,7.857422,-5.532784,7.768126,1.118264,-5.578268,2.944255,-9.279313,9.404835,-9.009711,-5.533985,0.181518,3.762865,1.739199,8.855008,-0.426989,0.111289,9.879745,-0.866897,8.643010,1.671925,-8.843240,6.158338,8.589971,-8.166567,-8.499126,9.735677,-9.112067,8.753365,-1.435379,-0.660573,-5.100060,-9.106677,7.906730,6.104075,-3.205813,-2.524489,9.534767,1.753365,0.954726,-7.223854,1.795655,9.413151,-3.316749,4.778037,9.272072,0.246380,7.108608,0.591213,7.109794,-7.155778,6.620635,-1.657024,-8.392509,5.796277,-8.480767,6.590803,6.837667,5.181836,1.789745,-4.588042,5.354617,4.713616,-9.090683,9.961418,0.714104,5.618796,0.567806,2.669525,-5.661681,6.096319,-3.155632,-5.931451,9.352306,1.266737,-5.535950,1.015248,-7.805631,7.578673,1.577591,-2.708133,-5.367678,2.759085,2.716917,9.878426,8.761675,-5.161037,-4.687114,-6.812816,9.507480,-0.796257,7.513609,9.685297,-3.748125,-0.609491,6.324066,-8.265041,0.685613,3.966383,-7.019993,-2.293770,1.851719,5.256649,3.882008,1.792839,-5.047718,-0.711999,8.176418,5.627218,-1.378671,7.273522,-5.756448,7.109500,9.375731,-4.337130,-3.067003,-0.820314,-4.490382,5.368983,5.148920,-1.709327,-6.864237,1.329467,-5.406493,-7.577792,8.253988,-6.718007,5.593508,6.524304,2.990777,2.540886,-0.962115,5.432521,9.978059,-7.161518,-7.906285,-8.079323,6.539525,-9.950413,-8.261536,0.123846,4.239498,0.645840,2.228279,1.702299,0.960860,-3.662780,-3.499847,-8.889064,-2.395574,-6.004421,8.163076,-3.174019,3.972041,-0.300074,1.539632,6.375195,7.352400,1.188659,1.704133,0.237834,6.997124,-5.055336,-2.522286,-6.673094,7.896900,7.716572,1.124063,1.553550,-1.543552,4.636988,8.136365,-6.902709,0.295325,-0.719653,2.396481,2.437717,5.093204,-9.655824,-1.134856,3.816488,-9.201788,-4.495222,-0.685786,-2.041689,8.921935,-8.423559,-4.802011,-9.729082,-3.118967,-5.970198,-6.197374,4.831516,2.633402,0.211644,-1.402417,0.761490,5.820445,-5.806408,6.218390,7.576171,-9.128536,-1.673504,-8.054407,1.021660,1.496208,-5.615497,5.131942,8.729827,-7.581772,2.002604,2.362566,3.027978,-5.773015,-4.600451,-8.821425,8.169703,7.207954,5.061692,-8.163560,4.374605,-4.960461,5.872157,7.571706,-3.893346,-0.876305,-6.476887,-3.110594,-1.814743,4.288905,-7.535697,-7.493705,9.756469,8.421071,-2.403589,3.945861,7.757129,4.223873,2.102163,-0.695987,-5.356624,3.178222,-3.585523,-6.692328,2.726983,-6.038104,3.266366,7.250727,-0.852781,2.052455,-4.439782,-6.285047,-1.714002,-7.214815,-8.322345,8.549308,2.260962,6.813139,-6.685458,5.531659,-7.105654,-1.734122,-3.482365,-8.230957,-9.369554,4.803054,-0.428654,5.035278,-4.427677,-2.240798,-6.544935,4.296056,4.190113,8.300979,8.132078,8.905190,-0.062777,1.457216,8.471591,-2.451568,-0.287122,-9.974814,2.094537,2.411418,8.995961,3.083783,-2.090708,-1.300140,7.178340,6.886989,-2.311977,-0.898710,-7.683898,7.622876,9.556191,-0.105985,-3.821174,-0.885159,-0.762225,1.946297,-4.615860,9.292817,2.794231,-7.824730,3.384337,1.901916,-2.864319,4.072167,-1.188575,-3.237196,-9.485120,4.805707,2.420228,-1.416652,8.250708,7.215215,-5.140586,-3.760274,-0.040271,8.437513,8.342367,4.150169,-2.461975,-8.015950,-4.690607,2.441270,8.957437,5.768340,-0.446887,-6.862533,0.934731,5.091749,-7.717863,0.040548,-7.451169,4.043592,-4.975421,6.676723,9.723233,8.193152,-4.372525,-8.669690,0.218855,-1.940000,5.567866,5.667127,0.437239,9.804801,8.427200,-4.496188,7.555778,6.372421,1.151422,-1.746372,-1.017808,-7.889701,-3.143933,8.872341,-5.058752,-1.286688,-4.308415,-2.935823,-3.847877,-3.053045,-6.330336,-5.908153,-7.341508,1.942520,-9.880340,-2.321964,1.871788,-3.032912,8.856219,2.851623,7.753809,2.695815,-1.224830,7.646259,5.655682,-9.811478,6.578128,4.626413,-4.246246,9.942131,8.459837,0.560149,-1.980510,-8.559554,7.257703,0.661065,4.750691,7.711173,-7.390527,4.206232,-6.782313,1.362710,-1.182110,6.888388,-8.239082,9.393514,-9.952102,-0.398109,-3.064213,-1.972488,6.238327,6.275607,-8.840811,-7.588586,2.249924,1.535925,9.075933,6.625603,5.354322,-2.251188,0.542285,6.092355,-1.230376,-9.458484,7.785187,1.803924,-4.595862,6.140416,2.532402,4.171849,8.535038,-1.924748,-9.075270,-0.257126,-4.123780,2.999133,0.272732,2.023857,-2.790010,-3.645987,-3.034698,-8.350801,-1.686550,8.353555,7.839956,8.690354,6.262470,7.471494,7.485364,-4.493569,-3.006608,-4.171257,-8.122870,-4.601550,3.815316,-9.623925,-4.838922,7.042981,4.292914,-6.462698,5.568112,7.510363,1.808905,-0.096701,6.603215,-5.600366,-7.000162,9.463243,-8.398244,-7.039545,-8.049340,3.516334,6.102621,-9.706783,8.894454,-7.512801,-4.282602,-8.517846,-1.645779,-4.889444,8.697773,-4.947874,9.437206,-7.124271,0.921789,-2.913897,-9.279063,-6.520289,-8.169546,-6.410731,5.715257,-6.450254,-4.471397,9.978582,-8.513854,-6.137777,-5.441795,0.595731,-7.969438,8.168496,-8.893110,-5.626774,8.361622,6.031466,5.343361,8.585581,-6.731684,-3.395093,-6.080028,7.347083,7.190135,-8.782298,-6.781468,-9.586412,-2.002114,-7.143179,5.720841,7.068918,7.010177,-5.354943,-0.011079,7.322993,6.502977,0.639358,4.544981,-6.956231,9.867446,-5.298543,8.457162,-5.179809,-2.840723,-4.837450,2.071820,-4.791817,-9.280490,3.170987,2.214142,4.436512,-9.535679,-3.222598,-5.309160,8.593712,-6.720402,7.282719,-3.146455,2.727603,2.355789,-6.698876,3.341801,8.877716,1.685118,-3.646979,-2.040984,2.608559,-3.204468,-2.164138,4.775463,-3.799842,-7.322331,6.259388,-3.492602,4.060935,-1.228440,-2.261266,8.546540,-4.649942,4.319304,5.093724,-7.985967,-1.978922,-5.852637,0.059676,-0.742346,1.132211,-5.147971,8.046958,3.770041,-2.211408,-3.389272,3.056143,-4.956750,-3.759580,-1.660126,5.649163,9.940270,-7.297290,0.294884,5.058594,9.509822,-6.413245,7.721265,-2.203016,-3.382651,-3.040357,-8.918734,-2.936120,0.912275,-0.787491,-5.609604,9.956728,1.961432,-4.855281,4.731894,8.677792,-2.064637,-3.195507,4.409044,3.006824,1.770828,5.735858,2.810871,3.848700,-7.766985,8.347810,2.780934,-5.169509,-6.437436,6.659023,-7.043387,-3.383557,-4.821997,-7.564129,-5.364586,-3.439069,-5.665764,1.163597,0.586949,-4.194008,-8.057941,1.004815,-6.543422,-1.729930,-8.271457,1.403470,-6.032580,2.778168,-4.180203,4.144526,2.914669,7.395319,7.822019,-7.764446,3.395092,-3.637816,-2.219218,1.985970,-3.166007,3.935376,-8.569113,6.138795,-3.335089,6.490492,0.337819,7.523826,-7.811567,-1.493046,7.018531,5.241133,9.076920,-6.816169,6.668955,3.927537,-5.172323,-6.655523,8.851849,6.564903,-3.636244,-5.919329,2.978992,6.873600,-7.007301,4.844175,-7.071640,-0.902645,9.507911,4.023299,8.177685,-3.329177,7.217584,-0.684843,-5.045425,-6.735333,-1.266549,-3.964699,4.505269,-4.520418,3.560352,1.775448,-4.747325,-4.888131,8.919573,-4.956735,-6.992277,-2.744452,7.527993,-5.798764,-0.788329,-3.445965,7.492508,0.160047,-9.977049,3.646375,0.043195,6.682149,-4.970125,9.307589,7.051820,-5.229347,-8.619968,7.150450,7.528537,-7.270860,1.549095,6.460997,9.549518,3.938440,-7.571156,-8.291080,5.003233,7.846902,5.520427,0.151790,-9.174355,-1.786764,-6.816674,-5.831050,3.834425,-4.574744,1.464407,0.632870,-3.857020,9.347974,2.619860,-4.244821,8.949452,1.564099,7.811725,-0.247798,-4.313320,-9.982820,-2.949541,8.322189,4.790683,-0.428604,8.545892,-1.217250,-9.736062,-0.936742,3.982616,5.883492,-8.889701,7.948155,5.277218,6.713002,-0.518772,2.042047,-9.236217,-6.377472,-8.438536,-0.295715,-5.474654,3.776690,-5.348369,5.055202,-7.289751,0.637413,7.411106,-2.614863,-3.577723,-1.953621,-4.537256,2.462628,-9.302976,-2.095227,3.851683,-8.526889,1.266994,-5.091000,6.894686,9.291794,-0.723240,-5.027252,8.764218,2.230596,-6.056161,-2.369628,2.868858,4.037447,1.453230,-3.462931,0.595259,3.594457,-4.843776,-8.808596,9.428678,9.194967,-4.400388,3.612654,2.783910,6.228203,-7.148853,-9.457560,-5.042794,-5.117935,9.899424,-1.293715,8.064745,-7.250043,6.879132,-5.481078,-7.466844,8.730055,6.248509,0.217552,0.491776,6.496624,-4.709001,2.100705,8.573880,3.444067,-3.778196,0.129177,4.344718,2.775915,3.120373,7.675560,3.833630,-9.479345,9.848941,9.421133,2.707933,-2.841639,-8.344736,-3.931329,4.043728,8.350311,2.022140,-6.542595,-4.904760,1.399249,3.939265,9.139859,3.054880,9.680704,8.147560,5.258687,6.362197,8.787426,0.617717,-8.640652,4.707630,-4.827425,-8.227146,8.322221,-5.168815,-6.824532,2.114308,5.700460,-2.454963,7.911330,1.997248,-4.421024,-2.707628,2.595210,4.621626,8.050878,6.756157,0.679923,-5.630733,-3.613199,7.936858,-9.504052,-1.409340,-4.959276,-6.141219,0.529545,-8.177427,3.956150,4.651726,9.234671,-8.079754,7.675646,-1.259133,7.089444,9.471819,-0.839577,9.445782,5.239530,-9.320788,-0.115191,1.445968,-7.877153,6.885884,-2.413233,-1.325208,4.648150,-9.286373,-9.428423,6.978497,0.915994,0.841512,8.343569,-4.216365,9.421374,-5.305506,-5.145488,4.736862,-6.519138,-7.217814,2.891046,-8.894975,5.067034,7.273952,1.648762,2.985636,8.442693,-1.315152,7.944933,1.898484,3.590538,-0.511671,4.829537,6.231370,-5.993719,-0.423484,-1.837739,-6.512899,-4.563854,-8.982958,-2.184386,-9.298179,-6.381419,7.279132,-1.679739,-0.224290,-9.357642,3.142607,-7.596900,5.095226,-8.244247,-2.667035,-3.097446,-8.925614,-9.402493,3.958050,-7.374954,-7.675088,-5.185919,0.182369,-7.794009,7.722236,-4.417852,-3.111173,9.380881,-4.873663,-1.338341,-7.102951,8.676622,0.014281,5.222326,2.008390,-5.679716,8.035613,4.814572,7.482182,-1.681973,-9.505976,2.284713,-2.112213,5.968620,-2.264688,0.641463,-6.801795,1.061128,4.632722,-8.372622,9.505153,-4.643671,-0.423883,4.489159,-1.108462,-3.881570,-9.345334,1.319355,-1.300580,8.181090,-7.658197,7.501156,-6.950868,-0.723894,-9.288107,-3.454851,-4.839869,-7.717919,-2.586943,-5.315536,9.941502,2.353024,3.748190,-7.323988,9.658102,-6.804051,0.918222,2.263802,4.367449,1.707292,-0.634225,3.451161,-9.599413,3.396624,2.116192,6.751851,-7.059583,-3.382401,-8.435284,7.635051,2.196499,5.063118,-1.006953,-3.054674,7.796641,3.526165,7.960580,-7.713992,-3.744198,-9.256530,8.486497,-4.651093,-8.484903,7.299814,-1.119686,2.936051,0.173613,-1.145232,9.377799,3.958484,-4.492180,-4.252697,2.469601,2.485317,7.276313,3.654023,-7.530745,-8.473939,-5.746965,2.845828,4.565299,-9.299508,5.845399,-8.544602,2.143515,5.532596,-7.323158,1.147234,-1.234249,6.831010,-7.846151,8.319248,-5.372346,-0.772857,3.305116,7.759044,-1.790576,0.515204,-7.503752,-2.498912,3.737599,3.461971,7.061635,4.773928,-3.010454,5.658274,6.468596,2.105308,5.936583,2.642806,9.358804,2.444548,-2.050193,5.121626,-2.116306,9.509939,-6.073860,4.074371,3.315922,0.944012,2.412103,4.975929,9.018433,-8.848699,-0.329712,-3.902197,8.454648,8.002282,-5.619501,-9.796578,-9.331111,1.155889,7.255489,-9.130518,5.085386,-9.138796,0.480938,-6.079251,-4.957122,3.927998,-5.404679,-7.623597,5.780214,1.423868,-2.507251,-4.263189,7.117797,8.049089,-5.471487,-2.446941,-7.466368,-3.499527,-7.096156,-7.462408,8.865522,2.801530,6.254671,6.957735,9.204857,6.035475,1.061067,-2.290601,2.206500,8.329868,2.514338,8.536921,-3.280489,1.941076,-7.142908,0.606593,8.697327,5.909159,-8.785009,0.276120,-5.041864,1.644201,-5.911575,-6.813295,-3.795513,6.092404,1.506973,9.922384,-9.726735,-5.348460,-0.147674,4.717238,-2.348814,7.229119,5.837750,-7.143729,2.712091,0.832453,4.678989,8.010019,3.158132,-4.428744,7.355559,-6.884750,-8.292060,9.310933,-8.955054,9.408146,0.558977,3.854376,7.322386,-0.206083,-6.864148,9.326716,-8.223220,3.961984,2.668994,-8.592279,1.125524,5.835416,-6.293297,-3.355524,9.660844,4.252224,-0.620492,5.968751,2.631865,-6.167765,-6.156015,7.225997,-5.120868,-1.699377,-3.465543,1.703405,-8.365847,-2.536390,0.331281,2.256273,-7.554924,7.772413,-2.859317,-8.728297,8.937393,3.783006,-3.585669,-9.088320,2.725530,8.104857,4.306018,8.334872,9.087357,-7.546518,-3.753116,2.542299,7.085649,-3.432241,4.813587,9.992165,1.565859,-9.525894,3.022136,1.529149,-3.768654,5.436750,4.454296,3.147600,-9.303785,9.514600,1.516668,8.106906,5.092394,-7.526075,-4.548998,7.924680,-3.043515,-8.363389,-2.264400,-7.022451,-8.121652,3.978761,-4.172047,-3.382070,-4.878878,-1.835865,-1.096687,-5.062576,6.603402,-6.649834,-9.241373,4.494484,-9.653964,8.145473,3.790436,8.797689,5.727606,6.135001,6.388828,-4.910177,2.647053,8.108693,-1.920211,-8.588562,4.937205,7.037574,-7.085624,-6.041542,-4.927610,-2.677542,-9.868282,1.310632,-4.507701,9.006899,-1.599154,2.363120,-1.540461,2.463619,5.412768,-9.373402,1.485036,-7.298648,0.186383,-3.707537,-5.469550,0.449163,-3.588177,-7.969663,-5.810893,-9.629306,3.102748,-9.014791,-5.390088,-2.533142,8.132472,-1.116558,3.880285,1.356575,-2.006589,-9.449430,-7.743212,6.463688,2.239755,4.350802,6.259832,-0.318734,2.725835,3.407151,4.391073,2.221186,-7.300562,9.799940,1.129068,-9.830137,-3.962911,-9.266347,8.645140,3.413724,-3.785240,-5.093773,-3.855754,-3.806875,0.393668,1.431177,-1.512419,-2.700639,4.151128,-7.453786,-3.156003,-8.451926,8.397299,0.176858,-0.489515,4.016269,1.251702,-1.473433,8.063067,8.909642,-2.534463,6.628050,-7.817863,-3.703538,8.206278,-9.517387,3.517069,-2.461099,4.970030,2.166454,-6.641342,-0.263155,-6.894694,4.187201,-8.403915,2.864103,5.343443,4.303198,-7.198387,6.846699,-7.939532,2.663824,-4.592007,-1.123188,7.588119,7.908421,3.244453,5.891620,3.811382,0.858144,1.337311,-1.804711,7.254642,-5.649109,0.670238,7.488070,9.289896,-6.807496,-2.412377,-7.568772,-5.310843,2.486592,0.053504,-9.637442,4.972457,-1.858436,-1.189449,6.190063,-1.454298,8.382736,-9.063660,0.690425,3.042335,1.229071,0.099718,1.478128,-1.429873,0.342802,4.621696,-3.789447,6.057447,2.259366,3.207348,8.418326,5.276175,-4.999043,4.137072,4.224119,3.930879,-1.942093,-8.371235,-6.469323,-9.205430,7.146241,8.748322,-4.668855,-5.949934,-0.652191,-2.394318,-9.035347,-2.627065,9.761151,-8.316018,-1.789626,-3.338836,-3.860231,-3.676209,0.853920,-8.681181,-7.682038,-5.143404,-9.681177,9.960804,-0.532333,-5.631469,4.847544,9.108826,-6.750145,9.641111,2.407890,4.040970,7.291299,4.949011,-3.620604,7.779876,4.682031,7.779772,-3.156237,5.165002,4.147015,3.225741,-7.675349,6.402819,8.207889,-6.162671,-7.783174,-0.442833,8.250683,-6.657424,-1.617365,5.767902,4.090998,9.177413,8.603377,9.750990,9.847029,4.989979,7.948211,-8.764361,5.784195,-4.622427,1.014447,8.020542,-7.304822,-5.410101,8.822485,-5.098484,8.881763,7.377415,-6.798322,9.313004,6.086315,-1.031121,3.541161,2.268791,1.127757,4.478933,0.701251,6.102214,-3.529269,-5.653058,1.100730,5.807435,-7.426014,1.337422,3.868944,-2.814467,8.015090,6.944116,-8.583772,-8.098577,-8.877996,-2.611672,-7.089539,1.472403,1.624417,2.308139,1.604821,6.194702,7.491400,-3.061087,4.339198,2.662051,3.936780,-9.030943,-0.364449,3.659470,-5.645873,-6.004276,-7.145549,0.741792,2.325900,-2.626269,7.678083,-9.028338,9.723913,6.594560,-1.132632,1.434390,-9.087998,5.718569,-0.829316,1.451624,-0.939139,-9.878454,-3.887672,-9.114774,-1.251837,-3.512256,5.549149,-1.879986,2.420966,0.227307,-3.431303,-7.393666,-6.619982,3.893150,-4.517636,6.532951,-4.816199,1.826793,-9.696036,-6.763230,7.162840,-2.898648,-2.725953,9.245534,2.608610,4.409445,4.649121,-8.605917,0.874405,1.275778,-0.754839,-5.385307,-3.732189,5.942506,8.837308,5.545246,-2.635869,8.163532,-4.617280,2.274108,-7.937154,5.766367,-0.827525,3.660401,-3.951968,4.356341,-0.230503,0.466119,-6.886037,3.648786,1.075559,-5.496692,-0.745990,-1.837379,-5.026998,-1.594803,-7.117708,-8.689692,1.018745,-0.484432,-9.643539,0.409587,4.912484,9.895834,2.343785,7.991197,0.767781,0.937340,-8.115198,-3.229369,5.478927,6.041418,0.789244,-7.555660,7.652223,-8.460353,-6.703026,-0.780368,-4.651038,6.422287,-2.301182,-7.281607,-7.881434,-1.598193,0.252872,7.428851,7.242013,-2.553733,5.563403,-4.954504,0.349816,-6.068697,-5.587144,7.590673,5.436290,-2.589377,-1.455567,5.425778,-4.757530,5.788492,1.688837,-6.028263,8.237796,1.147079,2.024685,4.049972,-2.396537,3.280407,0.900207,3.185918,8.732706,-1.455707,6.662203,9.352338,8.056357,3.200969,8.161555,-9.957753,9.199744,6.087503,6.001502,3.528325,0.151383,-9.814641,-2.197587,0.630158,0.634951,7.897721,2.892472,2.975797,4.714310,1.978929,-1.819966,3.129588,7.312624,0.445113,9.844654,-9.525165,3.002337,0.491258,7.375289,3.586103,7.316975,7.767246,3.317102,5.953599,1.574622,-7.990837,-2.547885,3.114222,-9.417331,-9.059640,-9.742847,-0.731041,2.664244,0.256078,-7.405914,-4.331941,6.862044,7.910441,-5.170835,9.456666,6.970841,0.713107,3.802754,-0.274992,5.510477,0.890175,2.168490,7.612809,-4.784732,2.061565,-9.347593,-5.197099,0.192985,-7.169252,-5.763076,-5.960131,2.240261,-7.303581,-6.747293,7.798707,3.202871,5.331961,-0.783965,-8.044062,7.145409,-7.301579,8.620885,5.646379,-4.584238,-0.223452,7.749985,-7.802201,-1.772319,4.845902,6.863386,7.955387,-7.954163,-7.099822,8.844250,8.020597,-7.216338,-3.954978,-7.526459,6.305316,-6.177229,4.252164,-0.759292,-6.083194,-9.941723,3.691521,-8.490582,2.541069,-7.998686,-5.517866,-3.493624,-0.436713,8.540637,-9.520217,7.670579,-1.796326,8.528293,7.073080,6.935458,-0.813282,-1.097958,-1.620081,-5.555026,0.467612,2.900458,2.826623,7.945519,-2.073056,-3.596076,-2.914945,-9.289636,6.338441,-1.843410,3.707679,1.846796,-9.414811,-5.385275,-8.430758,-7.461253,1.027184,6.591613,4.874088,-9.041249,4.571644,-9.275295,-9.647404,-3.653276,-0.533950,2.931095,4.594058,6.266841,-3.857432,-8.368188,3.461896,-1.616944,-1.951607,2.351758,-0.951193,7.012936,-7.071781,4.126072,9.347678,3.481080,-0.188056,6.559623,6.620914,0.730740,-0.472256,-6.385169,-3.473074,-7.755060,4.221538,-6.206504,-4.465501,4.087112,5.080076,4.167942,5.471302,-1.617054,3.888423,9.053564,8.595884,-1.794783,-1.650170,3.820737,3.165813,0.549665,9.894671,-8.592798,5.835451,-0.914769,-0.050550,9.979844,-6.968530,-8.382450,-8.318602,-3.331537,-4.706493,4.202049,-2.273415,-7.531647,9.797607,-5.831103,8.440840,-3.914618,-3.194809,-2.068014,-4.766524,-4.317744,2.349274,1.537319,-9.451053,2.823462,-1.927575,4.099956,3.103093,1.557623,8.351688,0.192671,-5.517775,-9.229866,7.670894,-0.184374,-5.441038,-7.842130,2.515403,3.984801,-9.426134,-7.730093,-0.154317,4.425219,1.408103,-7.192837,-5.731908,-2.545527,3.572158,2.910413,7.196784,-4.069684,7.820419,6.878981,-1.184776,-7.072349,-1.229549,-2.710989,4.660680,-9.161414,-7.454160,7.255937,7.797457,9.900849,-1.157794,5.820952,-8.950940,-5.119541,-4.349121,-2.760024,-9.862876,6.162801,-1.887886,9.180756,8.764204,-8.615574,-1.384574,-0.313487,3.018930,-4.921319,6.323737,0.558285,-0.484535,8.929501,-0.622706,8.039467,-2.500777,3.809170,-9.403673,-0.641298,-2.276569,8.713532,5.070261,-4.935043,-1.569931,-3.366660,-8.204787,5.364842,2.831355,-2.032900,1.737655,0.788566,-6.939274,-9.822890,1.893869,7.671645,6.327229,1.669128,-6.734434,-3.483812,-1.509275,-7.811888,-9.689834,2.547473,-1.254454,5.048052,-1.715065,-8.658952,3.646614,9.888623,7.237257,8.415029,-3.220006,2.068623,-6.135070,3.087979,6.900315,-0.901819,5.516672,5.438312,6.613672,2.485868,2.627324,-4.897803,-8.582535,-7.228621,-7.889553,2.036689,-7.298980,-5.902227,-1.854310,5.718155,0.159555,9.036278,-6.827442,4.254274,-2.252023,8.977146,-0.808592,-6.808919,3.248502,-0.666465,-3.798852,-6.580022,0.065298,-3.546803,-6.527274,2.384653,1.736338,4.238713,9.616567,2.526347,0.027150,-6.357852,-4.523067,3.467963,2.440005,-1.236017,3.365377,-9.342886,3.112789,-5.707113,-3.918820,5.213426,-7.704024,8.512421,2.961664,5.114838,2.809652,-5.153462,6.336202,-7.388635,-4.848614,-7.065830,3.503305,-7.214709,7.314079,1.087077,-1.188048,3.043920,2.292210,-1.437819,2.588830,3.559203,4.685524,2.598725,5.962601,7.592841,-5.345874,1.661548,-6.761733,-7.416400,-1.980283,-5.560014,-4.726833,-9.882705,-0.549591,5.101504,-4.594808,4.318937,-6.863914,-5.434370,-0.525927,8.768523,-3.354711,-2.216735,-5.437574,-9.042544,-8.176502,1.698652,9.126769,-5.986600,6.512687,0.098627,6.231492,8.153997,1.861648,4.319532,-9.333183,-0.757461,-5.503080,5.545144,8.252756,7.752220,-5.039357,4.966078,-5.384835,-3.977126,3.185061,-5.020899,-4.612023,-7.934930,2.481646,3.925784,8.430475,-4.432642,-7.800147,-0.255095,-4.146369,-8.455400,7.384833,-2.626633,7.696828,9.405807,-2.936277,7.412843,6.313830,9.180609,-5.547737,-8.471562,-9.411035,8.603106,8.365431,4.297067,2.418749,-4.540417,9.763749,7.167282,9.926671,8.258439,-8.349586,-5.944400,-3.451015,-6.125728,-2.264174,-0.613637,-6.728410,-3.159294,-0.945918,1.281005,4.361762,-5.034707,-2.715210,8.487409,-1.213251,5.875414,-5.279098,-6.674713,2.737150,3.355268,-8.700663,6.719058,4.837299,-7.344243,8.141772,5.036979,5.943346,5.870499,6.718275,-1.832158,6.681551,-4.615707,8.763280,-5.054401,-3.401277,8.298635,-6.863982,2.267659,-5.446100,5.997501,8.838609,-3.087623,-9.549425,-1.318173,-3.091809,3.463459,-6.182408,0.472125,-5.745063,9.517976,9.859411,0.706617,3.642285,5.858367,-8.930108,1.652240,-8.052423,5.129022,3.548712,-2.928152,-8.699244,6.302895,-2.565945,-1.974593,-1.501431,1.269634,-5.527017,0.703615,4.494049,4.985800,9.567676,3.798734,-8.899662,-0.984550,-3.994725,-3.697185,-0.096517,6.019387,-3.779848,-5.823417,5.588004,9.788646,-4.274003,5.944691,4.211787,-8.627345,8.715048,-1.929488,-4.491532,0.288326,-2.606781,0.437391,2.867537,8.931211,-6.172301,2.361924,3.059468,-0.517368,9.279804,6.398030,-3.894480,-9.281962,5.198852,-4.559057,5.468356,-5.824201,9.103707,6.096395,-9.269173,-6.524539,-6.905914,8.994559,-7.415657,5.558456,5.051153,2.288569,-9.393294,-6.553957,-2.771386,3.327283,-5.317312,0.105542,6.398569,9.522642,6.273212,4.491425,3.466693,8.621370,-3.431455,7.690407,4.686647,5.598069,-7.656616,3.239062,-9.812499,2.657657,-7.988057,-3.103090,8.076125,-4.982618,-2.759099,-6.099376,-3.496729,7.504748,-1.137520,-3.704622,9.766177,-7.146674,6.760654,1.406650,-9.337909,6.900982,1.470281,9.589602,5.616476,-0.594468,5.763037,5.966259,-6.060489,-3.699713,1.959947,0.053434,-3.991020,2.704752,6.727288,-0.947268,3.771883,3.343624,8.986109,3.411182,-9.559112,-6.277064,-7.526145,8.081796,6.276823,2.825780,-8.066603,3.786865,-0.207333,8.739045], dtype = "float32")#candidate|1479|(2535,)|const|float32
call_1476 = relay.TupleGetItem(func_1397_call(relay.reshape(var_1477.astype('int8'), [528, 13]), relay.reshape(const_1478.astype('float64'), [52,]), relay.reshape(const_1479.astype('float32'), [2535,]), relay.reshape(const_1479.astype('float32'), [2535,]), ), 8)
call_1480 = relay.TupleGetItem(func_1402_call(relay.reshape(var_1477.astype('int8'), [528, 13]), relay.reshape(const_1478.astype('float64'), [52,]), relay.reshape(const_1479.astype('float32'), [2535,]), relay.reshape(const_1479.astype('float32'), [2535,]), ), 8)
output = relay.Tuple([call_1464,call_1476,var_1477,const_1478,const_1479,])
output2 = relay.Tuple([call_1465,call_1480,var_1477,const_1478,const_1479,])
func_1486 = relay.Function([var_1477,], output)
mod['func_1486'] = func_1486
mod = relay.transform.InferType()(mod)
mutated_mod['func_1486'] = func_1486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1487 = relay.var("var_1487", dtype = "int8", shape = (6864,))#candidate|1487|(6864,)|var|int8
func_1486_call = mutated_mod.get_global_var('func_1486')
call_1488 = func_1486_call(var_1487)
output = call_1488
func_1489 = relay.Function([var_1487], output)
mutated_mod['func_1489'] = func_1489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1505 = relay.TupleGetItem(func_1115_call(), 0)
call_1506 = relay.TupleGetItem(func_1116_call(), 0)
var_1510 = relay.var("var_1510", dtype = "float64", shape = (7, 6, 15))#candidate|1510|(7, 6, 15)|var|float64
bop_1511 = relay.floor_mod(call_1505.astype('float64'), var_1510.astype('float64')) # shape=(7, 6, 15)
bop_1514 = relay.floor_mod(call_1506.astype('float64'), var_1510.astype('float64')) # shape=(7, 6, 15)
func_1097_call = mod.get_global_var('func_1097')
func_1100_call = mutated_mod.get_global_var('func_1100')
var_1517 = relay.var("var_1517", dtype = "int16", shape = (4, 156))#candidate|1517|(4, 156)|var|int16
call_1516 = relay.TupleGetItem(func_1097_call(relay.reshape(var_1517.astype('int16'), [24, 26])), 2)
call_1518 = relay.TupleGetItem(func_1100_call(relay.reshape(var_1517.astype('int16'), [24, 26])), 2)
func_392_call = mod.get_global_var('func_392')
func_394_call = mutated_mod.get_global_var('func_394')
const_1522 = relay.const([6.887220,8.396349,-5.951014,-1.288408,6.708602,-4.736134,-9.399917,-8.344835,-3.243567,0.772405,6.988603,-4.818659,7.039690,-5.705100,4.288335,6.700854,-0.367504,-3.279989,-1.552015,-3.162244,-1.952353,-8.467506,-7.491921,-8.917587,-2.185123,4.504677,4.105174,-4.084800,-0.386208,1.907402,-8.223863,-3.686811,-1.312027,6.313045,4.307893,-4.257766,2.503160,-4.050420,7.716182,-4.420159,7.735230,8.099233,-3.608787,8.807286,-6.171782,-2.313317,2.585600,4.453442,0.922753,4.238364,-8.019628,-4.842716,-1.630979,2.647716,5.403091,7.767239,7.633231,-4.335064,-5.668085,6.252758,-5.633483,-2.719309,-0.256906,1.788295,-4.918390,6.350707,-7.695570,-8.887191,-6.385999,-9.116515,-9.321879,-2.427538,-0.705618,9.979244,-0.949829,0.642349,-0.281473,9.548811,-0.539243,-4.383123,0.876754,7.157674,7.091015,-9.635286,-0.095197,5.160601,-7.817675,-7.971087,-0.657223,-5.019357,-7.032237,-9.208435,4.761592,-0.054651,-0.118558,-0.186624,-7.925638,-5.039521,-3.941428,0.278922,6.057387,4.873470,4.048000,6.491492,8.584404,-4.021668,2.576381,-8.534270,-1.206767,-3.556205,4.116518,-0.221072,0.740143,7.282835,5.547912,-3.874935,0.075517,1.987914,2.891371,1.472872,-5.703177,5.214551,-1.979590,-5.697734,-8.675580,0.691256,1.489199,8.741261,-8.183493,-3.205359,6.691614,2.061098,-3.669670,1.164593,8.418499,-3.043543,6.480620,5.988512,8.328585,-0.232711,8.786817,6.267521,-2.531683,0.709703,0.769071,-0.201601,-1.846394,-4.535258,-6.984632,-4.858303,-2.749650,2.731573,-4.921752,3.459268,-8.035492,9.321316,6.464288,6.306402,5.189503,3.516311,-4.263540,-4.020487,7.506070,-9.815723,-7.068439,3.013911,3.892565,-6.806874,1.613956,-1.441552,-6.400379,1.556686,-0.636880,8.690564,0.759880,1.245651,-6.310602,-9.518801,-4.282485,-6.646681,-4.248188,0.946926,-8.574363,0.817822,1.981745,-9.490440,-4.393301,5.027935,-4.282325,-6.386943,7.431630,7.339433,6.761494,7.918036,-5.041362,6.691278,9.852712,0.926538,-3.014328,-1.413171,-5.207814,9.538527,-0.120007,0.259637,7.734228,0.174674,7.520672,2.402448,-0.740330,-8.993350,-6.695338,8.852569,-3.474784,5.591208,-2.478243,-7.366803,-6.192648,5.100174,8.032503,4.647637,-1.027172,6.820227,-0.351680,3.863105,-9.662991,8.625808,4.434631,-2.865500,0.662627,-1.340445,1.083731,-2.624759,2.175008,9.747487,7.775519,0.260956,6.398719,5.973021,4.819956,-0.449458,0.410325,-4.744134,6.929873,-4.304199,5.914129,-5.884221,-0.136945,-0.781664,-0.546583,-4.319218,1.552393,0.646903,-9.674793,-6.329791,8.487117,3.870293,-6.510951,4.778945,5.856923,9.925469,1.222726,9.407866,-4.129746,7.027894,0.268675,-8.449803,3.921781,8.802600,5.936608,-9.609004,5.507632,3.374960,3.030424,3.911365,-9.438542,5.256961,-3.223921,4.204377,3.723770,4.829552,-4.166753,3.168012,4.901110,-9.918762,-8.079807,-9.479239,-5.151273,3.955909,-4.798171,-9.253533,5.838224,-5.073464,1.941399,9.999874,-0.482999,3.475239,-4.241415,4.791885,-2.924648,-8.981463,-5.709739,-7.716815,-9.892413,-4.016650,-9.565601,-7.355755,2.167641,5.609050,-5.849605,3.182494,3.693160,-5.528589,2.082836,0.365428,6.949572,-7.943781,-0.291879,-1.250799,-8.404674,-6.762132,-3.064896,3.944658,6.555661,-2.627370,3.916667,1.073836,-6.852745,-6.968492,3.190017,1.545255,-8.250575,-0.745292,-4.674576,4.534106,5.081744,8.236496,-2.445440,6.327503,7.096895,-2.240651,8.786109,3.393877,3.218981,4.945343,-7.978716,8.339627,-4.622564,9.129704,-5.972573,-8.299881,-7.136481,7.806091,-9.284455,9.414519,-3.241305,-1.220512,5.077613,-3.085387,9.163119,7.119941,-7.952678,-6.134685,-1.058292,-9.872903,2.503324,-8.073067,-0.056677,-6.771051,8.686725,3.566348,1.653884,8.479618,4.665906,3.498337,-2.338276,-9.433141,1.602003,1.273446,1.618142,1.963132,-0.225653,-7.957060,5.943389,4.567571,-7.775908,9.139775,-8.835795,-6.252961,-3.541306,5.493237,-9.412466,7.997630,-8.657152,5.767748,-1.812031,-5.603044,5.179460,-6.458792,-0.012990,7.858414,-4.705105,-5.730047,6.695267,-8.814841,6.650889,-5.206488,-8.300672,7.949152,8.738891,-3.866902,0.634882,-2.041970,7.128507,-9.586108,1.474334,0.371961,-9.190223,-1.234118,-6.108538,2.088692,-2.927239,-7.855814,0.610974,-6.345716,-5.950507,8.934238,4.039420,-1.183721,-0.615672,-3.060735,-3.405487,1.023367,-8.574363,9.763524,-3.901101,-1.516996,-6.992233,1.082734,-4.813232,-5.572508,-4.076883,0.031373,-4.368586,2.044011,-1.696488,-8.547019,9.536190,1.919727,5.060147,-3.707037,1.362972,0.776170,5.664361,2.777670,-9.959981,2.997336,1.551655,-7.873186,-1.952591,-6.684613,-5.851098,-7.724206,-8.259511,6.841452,-3.624474,-4.977327,-2.490860,5.284690,-2.090331,5.095440,1.842278,-8.113554,3.548785,-7.354250,-8.786523,-4.026895,4.348959,-9.905391,-1.978936,7.990975,5.072876,-2.540021,9.788207,-3.471864,7.422863,-2.403584,-4.623728,0.374510,-7.686078,9.803716,0.675762,5.600253,-3.742559,-2.225131,2.345035,4.795413,5.906383,-7.136036,-0.536938,8.803573,-8.878495,-4.463190,-2.983155,1.009778,1.924347,7.527523,-0.995200,7.315571,-2.454910,-7.588319,4.721469,-5.891661,4.881004,-8.484384,8.860700,7.956641,3.417425,-3.422944,-6.740019,-4.770297,2.152865,-6.431972,-2.414419,-8.155546,8.923008,-1.980453,4.602169,-0.237246,8.402425,-0.900595,-2.384014,4.733129,1.487629,5.871951,8.675726,3.716077,4.193588,-1.506460,7.276872,-8.804539,1.821574,3.177766,6.364342,-5.004483,-5.576118,-9.432518,-0.106211,7.481539,2.104473,2.072317,-9.016341,6.880523,-7.356252,-9.815540,9.413659,5.880305,4.409746,9.260793,-4.131928,-8.326889,-9.054733,2.888842,-7.643008,-3.223624,3.931075,-8.993960,-1.067545,1.169319,1.165843,-0.193135,-3.628238,-4.726900,-8.218191,-3.751434,6.026471,-6.620120,8.567372,-9.108321,-9.333756,-4.409729,6.095908,2.729365,-6.658866,-1.984192,-5.452353,-3.825925,-2.287402,5.961416,-4.120706,8.433868,-1.207325,7.633610,0.020657,0.379659,-1.553216,2.029410,-2.756519,4.774021,9.749990,-8.174823,-4.025716,-1.837853,3.073683,-8.944622,-5.481266,5.343766,5.331596,-8.227379,3.261201,-0.738391,4.456450,4.715746,-5.869135,5.215566,-4.225319,-1.977798,-1.311525,-7.514161,-5.578452,-8.481048,-2.564279,4.519393,-2.174572,8.729249,9.048494,-4.058482,7.106505,-3.349462,-9.391591,-7.583769,8.318058,-4.392231,7.369152,-8.518297,5.148727,-0.754037,-9.434475,6.363105,-2.118407,-6.695469,-1.982409,-5.443800,-9.593031,0.539429,-7.022851,-7.434585,-9.822322,-1.805982,2.060037,7.142536,6.181118,-6.188352,3.470250,-3.165382,-5.999527,0.736915,0.457179,1.676805,-5.864138,2.128835,-7.939263,5.584587,-2.836261,-5.921175,-3.618641,-0.417842,-4.444391,3.570235,-3.324764,3.177013,2.042388,1.101533,-3.502331,-2.353714,5.784690,-5.662018,4.388549,9.490787,6.347198,2.922940,2.602357,0.552941,2.704834,-1.743091,-3.295792,-0.149676,-8.302001,3.238679,-3.540453,-4.802658,1.404401,1.851567,-7.441325,-3.343807,0.971308,6.128600,0.841921,-9.948046,7.877112,-6.722678,-2.455717,7.254286,-9.126520,8.655443,0.151093,-9.468003,-8.105275,3.975773,-5.595452,-4.965454,-5.734133,6.089305,-1.861469,-6.117789,-1.898076,-3.637950,5.030619,7.438257,-1.333078,0.161237,-5.216039,-8.224618,0.707791,7.483246,3.304594,4.810826,9.618360,8.371956,-2.748929,-2.961361,-0.592114,0.399193,-3.598742,1.198060,-5.365657,-4.141159,-2.086127,0.459191,3.642330,-5.694200,6.639479,-7.138679,-3.342672,-7.381928,7.063085,2.974819,8.779325,1.611770,9.473498,-7.926991,7.322358,2.922085,1.991394,-8.580891,4.137766,6.368574,-6.768395,-4.023458,3.759164,-1.386384,6.814011,-0.519841,-0.849946,-1.749271,-2.141130,2.450211,-1.039466,-9.996101,-1.268567,-6.577650,8.814627,-2.825013,4.728552,-4.461589,7.859144,1.842862,-1.273387,-1.072580,2.405605,-0.191380,8.433989,-2.584609,-7.580277,-8.350636,4.618039,3.419463,-8.299887,-2.773210,-0.650629,4.234404,4.357290,-5.373554,-8.125709,5.400428,4.075866,-3.726436,1.879610,-7.447697,0.049095,-8.646201,5.925357,8.970140,0.241736,8.778673,-5.737785,-4.303342,8.670298,3.227711,8.392284,-9.062263,-6.133468,5.754435,5.634940,-6.600325,-2.036663,1.819363,-2.285489,-7.920172,-7.689692,9.066247,-8.934626,5.162804,-4.927615,5.499414,0.143258,-6.030934,-3.192096,8.597894,-5.767611,-3.965137,2.054409,-8.851699,-3.911820,2.251634,2.880721,3.988752,-5.337696,8.209305,9.735711,-6.317830,-7.590666,2.825725,9.161127,-0.942432,-5.026130,-4.630439,-7.931915,1.161823,2.430321,-8.588313,0.569003,-4.129641,-4.252369,-4.482817,9.588493,-9.307806,0.524837,-4.666206,-6.196346,-5.840824,-0.005917,-3.577258,-7.887869,4.662486,8.028990,-2.820936,-8.334424,-8.346274,-9.671188,-2.192478,-1.813436,-9.890230,-6.895408,-2.572241,1.127397,5.730010,6.286218,3.802347,5.537498,-8.952140,-1.955237,5.788031,1.066635,5.571843,-1.895664,8.893457,-1.857137,1.010076,1.722034,6.537862,-9.566601,-0.219459,3.775200,8.435951,-6.640885,9.301536,-2.188854,2.512662,-2.772794,-2.820815,4.226990,4.266836,9.599610,-5.622452,-2.581652,5.962168,4.830609,1.949316,2.821205,9.330760,-6.215264,-9.382882,-8.857716,-7.220959,-4.877409,9.086084,0.765654,0.666823,1.371509,2.050861,-0.547699,2.087414,-7.589196,-4.679105,4.578657,3.889957,-1.050692,2.959357,-0.002704,2.592259,-8.363594,-8.169536,-4.820225,-9.061464,2.420539,8.234547,-4.945180,4.799721,7.312559,5.368481,-7.230325,-8.511558,-7.646939,2.044569,-8.029140,-4.955222,1.713914,-5.822457,-4.829185,-6.469051,-3.707226,1.913081,-2.926329,4.511052,-4.119241,-8.660165,5.446655,9.916243,-8.762907,-4.202228,-6.165076,9.812437,7.395406,8.957160,-2.703255,-0.188949,8.859284,-4.887898,-2.795801,-9.714881,-5.599159,1.366013,4.178413,2.422352,0.893107,-7.944695,-4.106991,-7.604368,8.028204,-8.919233,7.017219,-6.768674,-1.715396,-3.643936,-3.670552,-6.437198,7.062607,1.921388,-4.417019,1.433639,-0.743038,3.522665,5.727516,2.145080,7.638172,0.451372,-6.982020,-6.469057,-3.938615,0.474943,7.444986,2.779504,-7.948617,5.616937,8.653347,-2.162941,4.739855,4.356701,5.812463,6.207768,-8.417005,8.116730,6.014364,7.001602,-8.913972,-4.716104,-2.737146,9.992967,-0.962185,-1.838563,5.759125,-2.114414,-8.921621,2.352940,-4.636439,5.369439,5.373452,5.459638,-4.834081,-7.149609,9.974913,-6.325825,-1.849200,-0.349766,-3.074402,2.668440,-7.773049,-0.954030,7.067525,-0.344182,9.267004,-1.969412,1.350415,4.939312,-6.302039,-6.945638,-0.330448,-5.773117,-9.113063,-4.055754,8.994732,-1.234522,2.954243,-8.510186,4.235014,-3.448894,-3.660148,3.256482,-1.285111,8.120848,3.686033,-4.177719,-4.716691,-9.398829,-1.338874,-9.840469,-4.728114,6.161762,6.881684,-9.234118,-5.731450,6.907966,0.721861,-5.222657,2.921168,1.753489,-7.483636,4.274130,-1.939585,1.540352,-3.533010,-7.649159,6.452917,-2.193087,9.183675,0.707785,7.564515,6.116113,2.082695,-0.274003,4.284700,7.787498,1.909617,1.704329,4.873610,-6.717367,-9.623163,-4.149007,-9.360728,-2.494145,-7.692846,-5.713774,3.814565,-3.650943,3.103079,0.520429,-1.109593,-8.422380,2.508851,4.657117,0.897087,-4.163048,-6.301503,0.515889,0.579416,9.884607,8.495401,2.763515,5.509689,6.234019,-7.863305,8.221444,-7.570517,9.056032,8.284072,-0.414954,-2.383767,-1.917475,3.989343,-0.986808,-2.202543,-8.857546,3.702020,-2.806630,-6.885105,6.102313,-3.122067,1.052224,0.867587,3.753356,-0.213319,8.773943,-1.826036,6.867271,3.279953,6.084905,1.695442,2.317198,1.214259,5.317715,5.554168,0.911944,-5.695857,-7.389932,8.068570,-5.540211,2.302926,-2.910859,-5.298022,-7.316921,4.736885,4.406418,9.005239,5.027948,-5.826381,-0.057602,-2.242968,1.755551,1.150734,-8.663235,6.991347,-6.717982,-1.343937,6.730198,-0.858898,-1.219241,7.938341,4.739008,-1.744659,9.985233,2.654743,-2.616961,6.330798,-6.216670,-1.028756,9.491350,-0.511135,-1.481422,4.520677,9.051697,7.708696,1.514544,0.389285,-9.183864,-6.637984,-1.928778,2.682182,5.281458,-8.323533,6.910175,-6.181831,8.830630,-9.826086,1.673160,7.238172,-8.182140,-4.489140,4.179573,-0.727777,2.152586,7.537988,-7.976262,-7.026475,-0.676280,-5.557523,4.869243,-4.216881,7.105153,3.663816,-6.580841,1.776245,9.133351,4.621754,8.755574,-3.638376,-3.651349,-0.010932,1.924038,-2.471213,6.428782,2.647859,6.677008,9.003577,2.814999,4.453348,4.709090,-3.739414,-6.981693,8.885818,7.412194,-4.074447,-4.981789,-3.406621,4.236341,5.315205,6.123185,-7.475001,-3.013000,0.760271,-9.522942,-7.442434,9.973218,-0.888443,-7.644583,7.779952,-5.321708,7.873079,-9.705464,-0.510889,-9.472143,3.927820,-7.280720,-8.296191,8.883422,-5.587988,-1.070849,-0.817116,3.662624,5.263750,-1.346373,3.314722,-1.670106,6.861340,4.940514,-8.311354,9.476907,3.727110,7.807449,3.741779,-2.024275,-0.903873,-4.484906,-2.019823,-2.016000,1.579528,8.796050,4.968670,1.913868,-7.772261,-6.528101,-3.985854,-5.345743,7.397718,7.620478,4.756782,7.003428,-3.760015,-4.167008,7.238894,-6.427339,6.759991,-0.485004,5.693794,-1.041438,-5.540098,-0.382930,-0.778719,-4.228682,4.519464,-3.616903,6.429561,-2.492802,8.199985,4.289951,2.953244,4.410604,7.166275,6.800795,1.557508,-3.878489,-2.530941,-2.164994,-6.602186,3.828441,-6.478591,-9.436725,2.361346,9.771131,4.871719,7.565838,-6.703373,5.246310,-3.628474,-9.947121,-5.351736,3.890252,-3.284025,-9.344535,8.044445,-4.140489,4.745527,5.649058,0.286453,-4.681465,2.557149,-3.118990,-8.560586,6.032240,-8.179867,6.263085,9.546376,-6.367509,-6.053135,-9.094428,-2.432471,-9.607681,7.564143,-2.758259,-8.875715,2.303209,-2.154980,-1.710287,9.400500,-3.516720,0.041372,9.182826,-9.703296,-8.974683,-4.081710,-1.782831,7.878550,-8.243686,0.787032,-8.151020,0.824596,7.029099,6.269796,1.477693,-6.183141,-2.511244,6.930609,-3.197239,6.259665,-0.094552,0.903111,-5.823456,1.755915,0.630803,2.854601,8.796837,9.862198,3.194974,-7.385423,5.208515,-7.992024,-0.853627,2.991587,2.924206,-4.744227,-3.630799,5.321101,-6.098942,-3.420923,7.784408,7.992426,-7.282789,9.089863,3.550849,-8.931479,-0.462994,8.781204,-3.938719,5.821945,7.738206,-1.956525,8.272583,1.721033,-2.691559,3.188139,3.771466,-8.791140,9.126112,9.283144,4.247071,-7.738387,-5.438103,8.004357,-5.491081,1.764620,-1.535447,-8.087331,7.186707,0.676373,1.703568,2.882833,-4.382926,-5.866054,1.117480,-8.554124,-8.133686,8.586133,-3.531345,4.280999,0.284692,8.510792,-2.094282,-3.973990,8.376338,-4.832988,-9.744836,9.790904,7.196872,7.633737,-6.634509,-0.338334,-3.156923,9.429380,-0.706011,4.768285,4.387323,2.535125,-4.333914,2.776576,7.305023,-1.518359,0.327717,-8.425929,-6.316927,-9.652168,-1.997785,9.747889,-0.370039,7.833528,1.851100,-0.980012,6.275545,5.591368,6.450803,4.821990,-9.654950,1.751221,-0.733264,-9.111968,4.918739,2.918551,4.690193,-9.360777,0.937834,-0.730985,-8.916652,-2.625579,-5.919129,-7.990783,-2.660228,3.755910,0.540053,7.691263,-8.811398,-2.981138,-4.249508,6.734114,-1.556139,8.283166,-0.191702,1.577748,-3.397387,-3.175288,4.656062,6.376660,3.628855,-2.579384,3.746424,-7.430347,2.559001,4.771400,-5.564212,-1.819647,-5.346697,-6.277018,2.038457,3.382695,3.099450,1.098973,-1.743588,5.778357,8.867173,2.837307,6.070685,-6.476351,-2.989269,-3.106055,0.598036,-0.185568,-5.460723,-6.215075,-9.446784,5.554030,5.791908,-0.003217,2.897535,0.441512,8.704734,2.693437,-2.939513,1.637820,0.051161,4.748564,-8.426224,-7.777211,2.057760,4.762243,1.418574,9.488951,1.804270,-7.219627,6.617469,7.755716,-5.628688,2.781620,-9.551789,-9.507010,-5.836138,-3.661616,8.172085,8.702858,0.646206,-5.079041,-6.577823,-9.436238,5.068424,-5.617873,-8.039547,0.935703,6.030720,-8.781328,1.338666,8.548125,-7.955712,0.624704,0.513147,-3.812072,1.653512,8.843506,1.925217,5.784932,-1.496737,7.321552,8.038151,-4.055278,-6.388766,-4.156355,6.430289,9.011350,-0.543152,8.823660,-7.183436,-1.083596,-4.461305,3.528729,6.378110,-8.067188,-6.577700,1.933753,-2.068434,-9.284250,-9.637256,-2.502457,4.991020,5.785655,-4.277498,2.402114,3.790822,-4.033457,4.835562,0.213978,-2.872089,-9.713973,7.299342,-7.800665,9.871686,-0.393621,-2.949760,2.352304,2.464372,4.281818,5.917970,-4.588267,-1.812016,-3.222248,-5.394154,3.943090,7.275757,4.747736,0.892032,-7.202190,7.768610,-6.118513,-4.710240,1.186147,-4.543584,4.376311,2.377734,-9.782532,8.600752,0.709667,-6.848154,-4.904452,-4.683572,3.672372,-0.340933,1.302733,-3.684815,7.285500,3.886471,-0.769414,4.249630,-3.576644,0.135712,-7.855133,3.963887,-7.044774,-7.342314,-0.385313,2.409353,-8.196340,0.779908,3.130015,5.958652,-3.939987,5.550522,0.445407,5.903750,7.361042,-6.071383,4.538050,6.114388,-8.137925,-2.223394,-5.754614,-5.504657,4.092366,-8.009375,5.882603,1.192071,8.601215,0.867990,5.347975,-9.966614,2.472011,5.896361,-0.985141,0.021618,-5.527235,4.083802,4.025103,-8.994663,-8.754077,8.733623,-7.954871,2.655621,0.080412,-1.113641,6.407973,7.465447,-0.263854,2.841644,1.429407,5.524893,7.977547,-5.607943,-0.465282,2.081901,-9.054400,-5.187234,-0.011243,-0.498859,-2.485683,-4.915035,3.122012,0.519190,-6.431032,-8.587667,4.914879,-0.615878,6.993751,9.752394,1.506934,-0.673829,8.349460,-3.975160,-1.010250,5.942512,-6.533280,9.797912,6.109136,5.157246,2.640108,9.365513,7.780839,6.202819,-6.116707,-6.134151,-2.404932,2.339528,7.853073,2.466721,-7.239405,3.786768,-6.738646,-1.671828,3.831425,-8.972662,-0.569929,8.671152,2.743932,-4.105632,7.626811,5.565987,4.529451,9.646471,-3.636978,-5.147373,6.186787,1.797841,-8.422968,8.992435,7.454088,2.010927,9.520691,0.518339,6.064341,-5.634168,-9.113177,-8.172082,2.810588,9.201583,-3.502916,-2.457661,6.318499,-3.181897,-1.572483,6.009527,3.091017,2.318137,1.288829,2.450516,-9.765119,0.081858,7.670749,-7.898917,5.913118,-2.536751,8.575524,1.093334,2.079259,7.933092,8.592563,9.514130,5.451645,0.282075,-4.184123,0.239037,-5.311422,1.346409,6.040522,-2.549266,5.439087,-3.149787,-3.230701,6.552792,2.458508,0.084565,0.803275,9.792250,0.207095,6.283400,7.070091,-4.067835,5.593789,0.693578,6.971610,6.163130,6.534514,2.306500,6.395269,6.650815,5.628412,2.946225,3.746168,8.606217,8.729273,-1.965027,-8.875860,7.196700,6.084050,-7.178145,-0.244789,1.831089,8.657803,5.737783,-7.306944,-9.857217,4.601010,-7.837428,-2.551220,7.121529,5.680548,0.909978,-9.445532,5.245895,0.789939,-4.000493,-8.970178,9.598065,5.917063,-9.085487,5.125734,5.427243,4.902437,-5.285836,-3.633666,4.906905,6.463474,0.274732,0.393400,5.523397,-4.831936,0.398905,-8.330697,-7.145269,4.871317,4.702981,9.752876,-4.797114,-7.561493,0.889465,-2.052525,-9.613790,7.511908,-3.981978,2.887735,7.536953,8.340531,-2.301862,-2.193808,2.743910,4.768374,-0.997168,-3.135689,2.697589,4.395982,6.747557,-6.305536,-7.390011,1.781346,-3.362598,-0.408520,-8.982497,-0.460623,1.706426,6.912234,5.969711,6.474170,-7.381689,-0.958095,3.022790,-1.213386,1.127526,-8.024336,-2.554019,-5.899503,-5.312104,-2.275461,5.507406,9.398762,3.409643,3.137086,-7.752341,0.703248,-5.431410,-2.008539,2.960010,-0.601661,3.475064,-0.483488,-9.917350,9.363824,-6.862224,6.335247,-5.071732,-0.969146,-4.389914,-7.780200,8.095214,8.317673,8.979216,9.740610,-0.651042,-2.687029,-3.928391,8.968507,0.913490,-5.831084,-7.400521,8.033809,-7.756147,7.534953,-8.993932,3.707415,3.625009,2.275707,4.704787,5.900618,2.134870,0.461138,8.646191,-3.179956,4.590866,-3.292985,5.989787,4.198231,2.711170,-5.671745,-4.967271,1.224038,-6.198837,1.222448,0.872280,4.955362,-6.703166,7.523484,8.989403,-7.727240,-2.879823,-2.826866,4.679251,0.978248,-7.410985,-4.895426,-8.391895,-8.250308,-1.749715,-8.579766,9.355432,-0.074421,-9.317133,8.756764,-9.191357,4.599475,-9.801629,-7.144397,4.221616,-3.737979,9.886493,-5.298128,8.363192,-0.638428,-1.851996,1.311221,-1.955352,7.071483,6.709475,-2.838170,4.235141,-9.708149,1.480088,7.560937,0.902981,9.612029,-0.473946,-3.497236,-0.769072,6.886507,6.321548,-6.714037,0.865144,-1.200960,-4.800144,-2.442400,-3.571270,2.797840,2.909027,-1.350642,6.932147,9.314937,-6.371343,5.334932,-4.413057,6.286378,8.793850,6.739038,-9.861674,-6.128870,-3.652863,-9.838736,7.054620,-2.593775,-7.345155,8.923497,-2.433775,9.538391,-1.769629,-7.669773,0.917420,-9.656508,7.938558,9.207005,-6.706059,0.821630,-9.607958,3.879165,9.201197,-0.725440,8.036965,6.306156,-6.669104,-8.085034,7.477768,8.322547,-3.008999,-5.590478,4.021288,1.611146,1.390409,-0.008678,-0.987841,8.731427,-4.603640,4.127921,-1.230260,8.409439,4.923135,1.369746,-3.463899,-7.566884,6.211498,2.715755,-7.028258,-3.368250,9.150491,-9.844309,-1.841146,3.309880,7.545847,-8.677912,-6.209805,4.997900,4.384650,-1.408367,6.249469,2.409464,2.111997,-8.450150,8.800531,2.896914,7.302284,9.118555,-6.297837,-0.496892,8.796301,6.931336,3.392594,-4.109247,6.146833,-5.783345,6.360725,0.788694,-9.028752,-9.135341,-4.528588,-4.659362,1.047090,-8.355536,3.700087,-4.376762,7.107610,-8.480123,-3.850678,-3.292211,2.102069,-0.228396,-8.749506,-7.245967,6.411084,-0.978366,-5.663908,-4.175922,-1.184342,1.097245,2.506497,8.357280,8.444855,7.075847,-0.054211,-9.638763,4.503592,-8.598759,-8.424019,-7.546589,5.044999,-2.098682,-3.992450,-2.863342,3.177864,-1.769687,6.871876,3.535787,1.631369,-8.402610,-9.780360,5.947428,4.326668,7.266825,-9.331515,-8.118625,8.575129,-5.083826,1.826552,-7.502714,-5.828285,9.343528,-9.563202,5.831299,-1.122445,6.476547,-2.826265,-7.477069,-2.921924,1.807149,8.646261,3.263258,-1.882687,-4.881730,-1.495734,-4.216572,9.907753,-2.780845,5.349781,9.433704,9.157294,-4.283635,-0.707974,6.233925,9.668150,5.613249,-4.126905,6.426189,-6.520195,-2.700320,-2.179790,-4.842813,0.396634,-4.078534,-7.377479,-0.744086,-8.597037,4.712490,7.353100,-4.431146,5.929276,1.977697,-9.961809,6.098667,9.639679,6.730571,-9.975999,5.376749,-1.074189,-8.747889,-2.494594,-3.832605,-7.578493,0.254269,-8.581488,-9.192287,7.336780,-6.743630,-8.927789,3.506198,4.362025,3.492900,-4.846370,0.965731,-5.304291,8.234596,-6.785853,-8.010227,0.278020,-4.847794,0.340970,8.903254,6.499077,-5.072531,3.761016,8.090099,-6.909245,1.948279,6.629015,3.821201,-1.629970,-0.833536,-3.930566,3.981850,-8.984982,7.120580,-5.492933,1.294541,-5.726184,8.780566,0.159607,5.689189,-2.747085,-0.718146,2.554557,8.429501,-1.511834,1.029717,-8.899215,-5.319861,-4.660006,-8.908379,-9.215332,-5.449411,8.052899,4.138869,-0.060154,-1.961487,6.880601,4.082754,-1.405918,-9.179337,-4.125941,9.735048,4.895256,-6.365498,-1.810001,-8.556883,-8.019362,3.928731,7.488415,-7.496121,7.586141,-1.804097,6.093851,-5.606498,-2.524734,-9.814170,-9.200906,-7.616678,8.872441,3.032849,7.429250,-5.576146,3.012559,-6.175166,-0.234919,-9.294506,1.618878,-3.570163,-6.189508,0.640987,-5.923509,-5.050451,3.536488,-5.584525,9.131035,-3.247342,6.055320,-0.610566,8.042948,8.018944,4.759791,2.740919,-3.132293,0.534715,-8.120629,-2.590658,-9.843281,1.369450,4.362894,-1.861945,-4.383912,2.591425,6.237520,-6.189574,-7.263029,6.079277,6.368160,0.870501,-0.614201,8.388985,3.646169,7.696335,-1.481080,0.596247,-7.393276,-4.104694,3.546598,1.123352,6.677462,4.830871,0.855779,8.492071,3.213532,7.553340,1.451386,0.003829,-4.838796,-6.721615,5.798024,-5.310866,9.873190,-0.792414,-5.812953,6.084167,4.806558,-1.475026,9.876674,-5.662712,-5.096544,9.472332,-2.684983,-5.181092,9.846768,9.095794,-7.762436,2.016036,-2.126751,-2.501767,0.517092,-3.491410,-9.046164,0.799217,-9.817364,7.997241,5.218410,-1.087037,0.673889,-4.368649,9.192617,8.957382,2.177416,7.968661,5.727893,6.981541,7.257704,5.316434,-5.897240,-5.027390,-7.578376,2.409446,-7.111798,1.298376,-2.449773,-6.681436,7.171038,0.846090,-4.880646,-8.943279,9.289819,-0.100807,5.878616,-7.266500,8.356296,-0.329947,-7.305472,1.149178,8.438429,-3.602177,4.955418,6.795120,9.347621,0.396535,0.547634,1.509836,2.522241,-2.676207,4.922209,-6.584110,3.591952,9.964342,-4.724184,-8.906186,1.628976,9.155549,4.245306,-9.782100,-3.026324,4.629628,4.219487,-9.435779,-2.941522,-6.091508,7.892899,-9.288739,2.703642,3.936480,3.485029,-1.322747,-9.104523,4.582591,-9.958571,-1.660959,4.597801,6.261903,-5.974427,-9.389145,-1.535850,2.916465,3.525833,-9.837219,3.276723,4.654338,4.661731,2.622282,3.994918,9.055091,-5.176034,-8.646821,6.047159,1.108043,8.931281,1.486902,-9.397089,-5.307717,-0.119199,-1.450027,-3.994940,-1.304057,7.123737,4.352624,-1.051641,2.023803,3.775370,0.271263,6.547404,-0.330370,-5.620760,-9.401521,-6.360969,-7.070190,2.597919,-7.556743,-0.024961,3.779980,1.146466,4.729765,0.734568,-1.299178,-0.606592,-2.490878,-4.851994,8.042313,-0.747251,3.964604,-5.016918,1.219150,0.268360,0.507990,3.307702,8.692896,8.625901,-8.795446,0.499926,8.804561,-9.386899,4.081685,5.295818,9.026520,-9.720039,-5.244577,1.486814,-5.765523,-5.670306,-8.556874,-3.381136,-9.375785,-6.297417,8.240979,0.977685,-0.644751,-3.310463,0.821848,-7.518230,8.739934,4.725591,9.420486,7.181093,2.459519,9.306025,8.072836,-5.819402,7.579460,6.172786,-5.172660], dtype = "float32")#candidate|1522|(2535,)|const|float32
call_1521 = func_392_call(relay.reshape(const_1522.astype('float32'), [13, 13, 15]))
call_1523 = func_392_call(relay.reshape(const_1522.astype('float32'), [13, 13, 15]))
bop_1524 = relay.greater_equal(const_1522.astype('bool'), relay.reshape(call_1521.astype('bool'), relay.shape_of(const_1522))) # shape=(2535,)
bop_1527 = relay.greater_equal(const_1522.astype('bool'), relay.reshape(call_1523.astype('bool'), relay.shape_of(const_1522))) # shape=(2535,)
func_1442_call = mod.get_global_var('func_1442')
func_1444_call = mutated_mod.get_global_var('func_1444')
call_1529 = relay.TupleGetItem(func_1442_call(), 2)
call_1530 = relay.TupleGetItem(func_1444_call(), 2)
output = relay.Tuple([bop_1511,call_1516,var_1517,bop_1524,call_1529,])
output2 = relay.Tuple([bop_1514,call_1518,var_1517,bop_1527,call_1530,])
func_1540 = relay.Function([var_1510,var_1517,], output)
mod['func_1540'] = func_1540
mod = relay.transform.InferType()(mod)
var_1541 = relay.var("var_1541", dtype = "float64", shape = (7, 6, 15))#candidate|1541|(7, 6, 15)|var|float64
var_1542 = relay.var("var_1542", dtype = "int16", shape = (4, 156))#candidate|1542|(4, 156)|var|int16
output = func_1540(var_1541,var_1542,)
func_1543 = relay.Function([var_1541,var_1542,], output)
mutated_mod['func_1543'] = func_1543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1442_call = mod.get_global_var('func_1442')
func_1444_call = mutated_mod.get_global_var('func_1444')
call_1565 = relay.TupleGetItem(func_1442_call(), 2)
call_1566 = relay.TupleGetItem(func_1444_call(), 2)
func_654_call = mod.get_global_var('func_654')
func_657_call = mutated_mod.get_global_var('func_657')
var_1576 = relay.var("var_1576", dtype = "int8", shape = ())#candidate|1576|()|var|int8
var_1577 = relay.var("var_1577", dtype = "int8", shape = (528,))#candidate|1577|(528,)|var|int8
call_1575 = relay.TupleGetItem(func_654_call(relay.reshape(var_1576.astype('int8'), []), relay.reshape(var_1577.astype('int8'), [11, 12, 4]), ), 2)
call_1578 = relay.TupleGetItem(func_657_call(relay.reshape(var_1576.astype('int8'), []), relay.reshape(var_1577.astype('int8'), [11, 12, 4]), ), 2)
func_951_call = mod.get_global_var('func_951')
func_955_call = mutated_mod.get_global_var('func_955')
call_1594 = relay.TupleGetItem(func_951_call(relay.reshape(call_1565.astype('float32'), [2535,]), relay.reshape(var_1577.astype('int8'), [528,]), ), 4)
call_1595 = relay.TupleGetItem(func_955_call(relay.reshape(call_1565.astype('float32'), [2535,]), relay.reshape(var_1577.astype('int8'), [528,]), ), 4)
func_837_call = mod.get_global_var('func_837')
func_838_call = mutated_mod.get_global_var('func_838')
call_1599 = relay.TupleGetItem(func_837_call(), 0)
call_1600 = relay.TupleGetItem(func_838_call(), 0)
output = relay.Tuple([call_1565,call_1575,var_1576,var_1577,call_1594,call_1599,])
output2 = relay.Tuple([call_1566,call_1578,var_1576,var_1577,call_1595,call_1600,])
func_1607 = relay.Function([var_1576,var_1577,], output)
mod['func_1607'] = func_1607
mod = relay.transform.InferType()(mod)
mutated_mod['func_1607'] = func_1607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1607_call = mutated_mod.get_global_var('func_1607')
var_1609 = relay.var("var_1609", dtype = "int8", shape = ())#candidate|1609|()|var|int8
var_1610 = relay.var("var_1610", dtype = "int8", shape = (528,))#candidate|1610|(528,)|var|int8
call_1608 = func_1607_call(var_1609,var_1610,)
output = call_1608
func_1611 = relay.Function([var_1609,var_1610,], output)
mutated_mod['func_1611'] = func_1611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1442_call = mod.get_global_var('func_1442')
func_1444_call = mutated_mod.get_global_var('func_1444')
call_1635 = relay.TupleGetItem(func_1442_call(), 0)
call_1636 = relay.TupleGetItem(func_1444_call(), 0)
output = call_1635
output2 = call_1636
func_1641 = relay.Function([], output)
mod['func_1641'] = func_1641
mod = relay.transform.InferType()(mod)
output = func_1641()
func_1642 = relay.Function([], output)
mutated_mod['func_1642'] = func_1642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_837_call = mod.get_global_var('func_837')
func_838_call = mutated_mod.get_global_var('func_838')
call_1654 = relay.TupleGetItem(func_837_call(), 0)
call_1655 = relay.TupleGetItem(func_838_call(), 0)
output = call_1654
output2 = call_1655
func_1664 = relay.Function([], output)
mod['func_1664'] = func_1664
mod = relay.transform.InferType()(mod)
mutated_mod['func_1664'] = func_1664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1664_call = mutated_mod.get_global_var('func_1664')
call_1665 = func_1664_call()
output = call_1665
func_1666 = relay.Function([], output)
mutated_mod['func_1666'] = func_1666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1700 = relay.TupleGetItem(func_1115_call(), 3)
call_1701 = relay.TupleGetItem(func_1116_call(), 3)
func_1036_call = mod.get_global_var('func_1036')
func_1039_call = mutated_mod.get_global_var('func_1039')
var_1703 = relay.var("var_1703", dtype = "int16", shape = (624,))#candidate|1703|(624,)|var|int16
call_1702 = relay.TupleGetItem(func_1036_call(relay.reshape(var_1703.astype('int16'), [624,])), 3)
call_1704 = relay.TupleGetItem(func_1039_call(relay.reshape(var_1703.astype('int16'), [624,])), 3)
func_1233_call = mod.get_global_var('func_1233')
func_1234_call = mutated_mod.get_global_var('func_1234')
call_1716 = func_1233_call()
call_1717 = func_1233_call()
output = relay.Tuple([call_1700,call_1702,var_1703,call_1716,])
output2 = relay.Tuple([call_1701,call_1704,var_1703,call_1717,])
func_1728 = relay.Function([var_1703,], output)
mod['func_1728'] = func_1728
mod = relay.transform.InferType()(mod)
var_1729 = relay.var("var_1729", dtype = "int16", shape = (624,))#candidate|1729|(624,)|var|int16
output = func_1728(var_1729)
func_1730 = relay.Function([var_1729], output)
mutated_mod['func_1730'] = func_1730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_837_call = mod.get_global_var('func_837')
func_838_call = mutated_mod.get_global_var('func_838')
call_1788 = relay.TupleGetItem(func_837_call(), 0)
call_1789 = relay.TupleGetItem(func_838_call(), 0)
func_1233_call = mod.get_global_var('func_1233')
func_1234_call = mutated_mod.get_global_var('func_1234')
call_1802 = func_1233_call()
call_1803 = func_1233_call()
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_1811 = relay.TupleGetItem(func_1197_call(), 0)
call_1812 = relay.TupleGetItem(func_1198_call(), 0)
func_1540_call = mod.get_global_var('func_1540')
func_1543_call = mutated_mod.get_global_var('func_1543')
var_1814 = relay.var("var_1814", dtype = "float64", shape = (630,))#candidate|1814|(630,)|var|float64
var_1815 = relay.var("var_1815", dtype = "int16", shape = (624,))#candidate|1815|(624,)|var|int16
call_1813 = relay.TupleGetItem(func_1540_call(relay.reshape(var_1814.astype('float64'), [7, 6, 15]), relay.reshape(var_1815.astype('int16'), [4, 156]), ), 4)
call_1816 = relay.TupleGetItem(func_1543_call(relay.reshape(var_1814.astype('float64'), [7, 6, 15]), relay.reshape(var_1815.astype('int16'), [4, 156]), ), 4)
output = relay.Tuple([call_1788,call_1802,call_1811,call_1813,var_1814,var_1815,])
output2 = relay.Tuple([call_1789,call_1803,call_1812,call_1816,var_1814,var_1815,])
func_1825 = relay.Function([var_1814,var_1815,], output)
mod['func_1825'] = func_1825
mod = relay.transform.InferType()(mod)
mutated_mod['func_1825'] = func_1825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1825_call = mutated_mod.get_global_var('func_1825')
var_1827 = relay.var("var_1827", dtype = "float64", shape = (630,))#candidate|1827|(630,)|var|float64
var_1828 = relay.var("var_1828", dtype = "int16", shape = (624,))#candidate|1828|(624,)|var|int16
call_1826 = func_1825_call(var_1827,var_1828,)
output = call_1826
func_1829 = relay.Function([var_1827,var_1828,], output)
mutated_mod['func_1829'] = func_1829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1641_call = mod.get_global_var('func_1641')
func_1642_call = mutated_mod.get_global_var('func_1642')
call_1853 = func_1641_call()
call_1854 = func_1641_call()
output = relay.Tuple([call_1853,])
output2 = relay.Tuple([call_1854,])
func_1859 = relay.Function([], output)
mod['func_1859'] = func_1859
mod = relay.transform.InferType()(mod)
mutated_mod['func_1859'] = func_1859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1859_call = mutated_mod.get_global_var('func_1859')
call_1860 = func_1859_call()
output = call_1860
func_1861 = relay.Function([], output)
mutated_mod['func_1861'] = func_1861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1233_call = mod.get_global_var('func_1233')
func_1234_call = mutated_mod.get_global_var('func_1234')
call_1965 = func_1233_call()
call_1966 = func_1233_call()
var_1973 = relay.var("var_1973", dtype = "int32", shape = (528, 16))#candidate|1973|(528, 16)|var|int32
bop_1974 = relay.greater(call_1965.astype('bool'), var_1973.astype('bool')) # shape=(528, 16)
bop_1977 = relay.greater(call_1966.astype('bool'), var_1973.astype('bool')) # shape=(528, 16)
uop_1984 = relay.asinh(call_1965.astype('float64')) # shape=(528, 1)
uop_1986 = relay.asinh(call_1966.astype('float64')) # shape=(528, 1)
bop_1987 = relay.equal(var_1973.astype('bool'), call_1965.astype('bool')) # shape=(528, 16)
bop_1990 = relay.equal(var_1973.astype('bool'), call_1966.astype('bool')) # shape=(528, 16)
output = relay.Tuple([bop_1974,uop_1984,bop_1987,])
output2 = relay.Tuple([bop_1977,uop_1986,bop_1990,])
func_1994 = relay.Function([var_1973,], output)
mod['func_1994'] = func_1994
mod = relay.transform.InferType()(mod)
var_1995 = relay.var("var_1995", dtype = "int32", shape = (528, 16))#candidate|1995|(528, 16)|var|int32
output = func_1994(var_1995)
func_1996 = relay.Function([var_1995], output)
mutated_mod['func_1996'] = func_1996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_837_call = mod.get_global_var('func_837')
func_838_call = mutated_mod.get_global_var('func_838')
call_2027 = relay.TupleGetItem(func_837_call(), 0)
call_2028 = relay.TupleGetItem(func_838_call(), 0)
var_2044 = relay.var("var_2044", dtype = "float64", shape = (7, 6, 6))#candidate|2044|(7, 6, 6)|var|float64
bop_2045 = relay.subtract(call_2027.astype('uint8'), var_2044.astype('uint8')) # shape=(7, 6, 6)
bop_2048 = relay.subtract(call_2028.astype('uint8'), var_2044.astype('uint8')) # shape=(7, 6, 6)
bop_2056 = relay.less_equal(bop_2045.astype('bool'), relay.reshape(var_2044.astype('bool'), relay.shape_of(bop_2045))) # shape=(7, 6, 6)
bop_2059 = relay.less_equal(bop_2048.astype('bool'), relay.reshape(var_2044.astype('bool'), relay.shape_of(bop_2048))) # shape=(7, 6, 6)
output = relay.Tuple([bop_2056,])
output2 = relay.Tuple([bop_2059,])
func_2066 = relay.Function([var_2044,], output)
mod['func_2066'] = func_2066
mod = relay.transform.InferType()(mod)
var_2067 = relay.var("var_2067", dtype = "float64", shape = (7, 6, 6))#candidate|2067|(7, 6, 6)|var|float64
output = func_2066(var_2067)
func_2068 = relay.Function([var_2067], output)
mutated_mod['func_2068'] = func_2068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2122 = relay.var("var_2122", dtype = "float32", shape = (14, 3, 3))#candidate|2122|(14, 3, 3)|var|float32
uop_2123 = relay.exp(var_2122.astype('float32')) # shape=(14, 3, 3)
func_1164_call = mod.get_global_var('func_1164')
func_1165_call = mutated_mod.get_global_var('func_1165')
call_2128 = func_1164_call()
call_2129 = func_1164_call()
output = relay.Tuple([uop_2123,call_2128,])
output2 = relay.Tuple([uop_2123,call_2129,])
func_2130 = relay.Function([var_2122,], output)
mod['func_2130'] = func_2130
mod = relay.transform.InferType()(mod)
var_2131 = relay.var("var_2131", dtype = "float32", shape = (14, 3, 3))#candidate|2131|(14, 3, 3)|var|float32
output = func_2130(var_2131)
func_2132 = relay.Function([var_2131], output)
mutated_mod['func_2132'] = func_2132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_2153 = relay.TupleGetItem(func_1197_call(), 0)
call_2154 = relay.TupleGetItem(func_1198_call(), 0)
output = call_2153
output2 = call_2154
func_2163 = relay.Function([], output)
mod['func_2163'] = func_2163
mod = relay.transform.InferType()(mod)
mutated_mod['func_2163'] = func_2163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2164 = func_2163_call()
output = call_2164
func_2165 = relay.Function([], output)
mutated_mod['func_2165'] = func_2165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2258 = relay.var("var_2258", dtype = "uint8", shape = (3, 6, 16))#candidate|2258|(3, 6, 16)|var|uint8
var_2259 = relay.var("var_2259", dtype = "uint8", shape = (3, 6, 16))#candidate|2259|(3, 6, 16)|var|uint8
bop_2260 = relay.minimum(var_2258.astype('uint8'), relay.reshape(var_2259.astype('uint8'), relay.shape_of(var_2258))) # shape=(3, 6, 16)
func_1164_call = mod.get_global_var('func_1164')
func_1165_call = mutated_mod.get_global_var('func_1165')
call_2280 = func_1164_call()
call_2281 = func_1164_call()
var_2283 = relay.var("var_2283", dtype = "uint8", shape = (3, 6, 16))#candidate|2283|(3, 6, 16)|var|uint8
bop_2284 = relay.less_equal(var_2259.astype('bool'), relay.reshape(var_2283.astype('bool'), relay.shape_of(var_2259))) # shape=(3, 6, 16)
func_392_call = mod.get_global_var('func_392')
func_394_call = mutated_mod.get_global_var('func_394')
const_2289 = relay.const([[-7.992932,2.568018,5.710504,-7.635724,-0.556251,5.842446,-5.972529,4.631018,-0.286143,8.664105,-7.988222,2.372916,-5.144284,1.953812,0.343819],[4.664773,4.211592,-1.879785,-9.139381,-0.784069,3.847014,3.889144,0.587003,8.836693,2.107985,3.339736,-6.734595,-5.593097,-0.958951,5.159650],[-8.163380,2.392660,7.875180,-7.273457,-7.051180,0.866381,4.345384,-0.146505,0.020611,-3.780431,-7.654818,-0.154260,-4.258437,8.030217,-7.337827],[-3.227038,3.645347,-5.989406,-5.903496,-2.343871,-5.965277,-5.564750,1.785389,-0.119213,-1.776382,8.441079,7.970607,9.146666,-7.112263,-8.249829],[-8.476652,1.173686,-0.177521,-1.042946,5.311895,0.367237,-2.022954,5.675726,-7.463340,4.533623,-1.965383,4.384596,-8.218447,-4.335968,9.688487],[-6.745791,6.437683,-4.909220,4.940162,-4.014363,1.510485,-1.511683,4.541303,8.792087,-8.422311,8.147609,6.628261,-4.835070,5.732543,8.951171],[3.780534,-2.463748,5.573821,-1.192445,-7.722231,9.911434,-4.800851,7.609771,1.909636,-6.474099,9.093729,7.176132,-8.850123,5.747685,-8.200384],[3.400198,-3.192753,-3.231806,-3.476282,-5.858385,-4.980519,-0.252316,-1.327924,-4.457334,2.937116,7.691563,-7.875897,7.270166,-1.900039,0.706691],[0.492300,-0.535964,-5.753042,-6.851966,2.521932,9.024117,-9.451540,-6.240279,-9.820115,0.449746,4.633860,-8.600609,0.518139,1.056242,-7.877959],[-7.957489,9.895301,4.659443,0.459284,-7.408786,3.695407,-2.639807,8.258617,-2.605487,-4.790988,6.142151,-4.528142,8.608225,-0.419575,7.773659],[5.422104,-6.606190,-5.476678,5.921647,6.919337,-0.609126,5.429167,0.255407,9.257898,-8.862062,9.066860,-9.788238,-5.896179,3.886882,-6.141123],[7.917369,-2.764906,-7.538619,-7.833722,-3.090212,7.219620,-0.872356,-9.304586,5.811567,9.611141,2.485329,-8.897873,-4.173768,3.592452,4.874568],[-2.085269,-5.624309,-2.852107,0.534798,-7.254629,0.875523,-0.344438,-7.985958,1.967960,-0.994401,-2.895988,8.316686,1.841087,2.329960,5.878367],[-4.814128,6.515652,-8.645636,3.869452,-0.489134,2.207765,9.966223,9.750412,-4.441166,-7.389629,6.611609,-8.014281,5.879111,-4.451485,0.824946],[3.994802,3.268496,-3.131040,-2.786095,4.697527,2.229723,-8.468425,-5.085868,-5.355970,-2.601093,-6.790622,8.987951,-7.757447,-3.298396,9.571175],[-0.156664,-8.875799,-7.473259,0.425493,-4.213572,9.657908,-9.124826,4.360601,-5.158302,6.426401,-9.574080,-9.240443,4.199722,-0.567809,-6.347129],[4.839875,-2.191317,-1.920070,-0.149807,6.344987,2.776903,-3.157649,7.413796,-6.660641,7.282250,-5.315912,5.450875,-9.612953,-2.554099,7.078177],[-4.704831,5.482760,-9.585681,5.654190,-7.649313,1.506606,-6.497129,8.420140,0.563233,6.826968,3.670515,-5.181480,-5.976211,3.984773,3.211086],[5.228860,9.378301,-4.277552,3.565824,-9.271249,4.403766,4.427795,7.386143,6.580855,-2.297110,-5.833941,-2.735894,3.978480,9.010779,0.689155],[0.052733,-6.088185,-2.816644,-7.374434,2.932656,9.819046,-3.436780,-4.722179,0.874171,8.576418,-2.274864,3.486653,-9.845049,9.491919,-1.370402],[1.712927,-9.653886,-9.494416,-5.189732,-3.128756,-5.341664,-9.128016,-6.219053,-8.292545,-7.572142,8.392648,6.890104,-5.184499,1.906606,5.381468],[-4.043353,0.089498,1.500507,1.262605,-4.897542,0.609016,1.145951,-4.033345,-2.036091,7.654288,-9.835041,3.527939,-7.887560,4.028134,4.208865],[5.031416,1.690005,-7.891012,-4.624712,4.718462,4.884901,0.969968,-4.768344,-6.896390,0.916024,-2.559151,8.726513,1.120120,8.051555,4.957259],[-4.055564,-6.034274,-4.017309,-1.355960,2.031942,5.244400,-0.178920,3.956564,-4.740345,7.131000,-3.963399,8.027087,3.642641,7.050371,-5.803435],[8.411971,3.628088,-6.925422,5.917079,-4.723000,-1.510394,0.790569,6.125864,-1.920159,9.869998,4.547151,5.729663,2.413612,6.397927,9.761380],[1.949220,-0.405711,-0.468202,-0.101127,7.912651,-3.415580,8.181567,-5.716700,6.464418,-4.259051,-7.643600,-5.779864,5.148492,-2.528894,-7.952082],[-3.512652,6.508617,-9.555302,0.560556,5.728270,7.550329,0.027664,7.359404,8.331433,-3.520781,2.035501,2.749977,-1.838102,0.358412,-7.156840],[-1.506276,-9.775542,5.062755,0.691511,0.078971,-8.409564,4.530321,6.921660,8.683215,7.903751,8.313634,8.524196,-9.590339,3.885797,-9.538696],[1.383097,-0.645791,-5.934311,-8.070312,-8.118693,-3.332759,-7.203143,-9.301070,6.128817,1.892094,8.716951,8.039023,9.868914,-0.853451,-9.684759],[-5.819476,3.915523,0.710767,5.978227,-6.514877,5.454743,-7.637499,-3.023160,-5.739485,-1.037474,-8.331680,-3.567717,-5.483101,4.820324,-3.325667],[-6.526292,2.326916,7.925854,7.569509,-6.414549,-7.339273,7.315207,0.716777,-5.796383,2.372316,3.905862,-6.285941,7.246840,-6.839234,-9.551606],[-3.158872,7.740895,-1.906440,-2.916908,7.496569,4.706812,8.619274,-6.398857,-9.612756,-6.650878,-1.844358,3.685783,3.405693,8.221312,7.259855],[-8.121934,-3.195006,4.071501,-3.395132,3.260633,-4.697407,2.897574,8.814543,8.331598,-8.359737,8.073829,9.608838,-2.991149,9.105710,-0.287300],[7.969454,5.009284,8.355852,-3.668024,-9.345181,1.138027,9.016084,-0.779942,4.948706,-6.981929,9.391061,-6.026260,2.828456,4.460854,-2.873438],[0.660849,-8.088502,-5.549935,-6.684437,9.126364,-6.540374,6.101029,-8.393482,-3.473999,3.294877,8.804033,-3.387543,-4.728860,-8.176894,-5.850550],[3.141145,-9.303188,-2.323931,7.122730,-3.333086,-8.952677,-3.987136,-7.466217,9.672569,-9.858913,1.646545,-8.714273,6.458819,2.495207,-4.820083],[-9.307582,-5.199953,-7.689769,4.217818,0.526133,-8.148222,-5.214115,5.855088,5.885674,1.277322,-4.658542,-9.323419,-6.038375,9.528012,8.471228],[-5.561485,8.421288,8.821887,1.478646,-6.015276,-5.775146,-1.629426,5.551321,3.804597,5.878732,-9.872717,5.874006,-0.918435,-6.686034,-7.041468],[3.041869,1.324792,6.523085,-4.655725,-0.468877,2.259602,-6.807977,1.380212,4.568837,-4.488226,-3.407593,-5.573394,8.799673,2.440384,-3.968889],[-5.876414,-1.007491,6.398010,-2.116192,7.584962,-8.479445,7.158233,-1.610588,-0.757903,0.909122,-6.948478,9.272621,8.996123,5.135660,-1.402292],[-0.390741,-2.675916,-9.802328,-3.209915,7.506554,8.741574,-3.384844,-9.860891,-0.585303,7.314773,-5.019508,3.562087,-5.352298,-0.657860,1.566442],[-8.449348,6.067876,9.303144,-5.831180,-5.101757,6.413192,6.618118,-9.047946,-4.385247,-5.927971,-9.027706,-7.102914,-4.354846,4.208498,-2.118467],[3.270422,-4.022739,3.702063,-9.794051,-9.762473,-9.855712,3.816895,1.378995,0.494953,-9.488784,6.786528,-5.963085,-9.838872,6.582256,-3.553004],[-6.710853,-6.870909,-6.726192,-8.271048,1.681117,-1.291722,-5.250187,2.297063,2.630161,-6.352831,-4.772603,8.130164,6.746653,4.226038,5.202543],[-1.325433,9.968613,-8.620956,0.698224,-6.974870,8.527613,-6.702167,-3.703696,-6.409121,-8.232710,9.632996,-4.218518,-8.262389,-3.155924,-2.924782],[5.048620,-5.667573,1.845750,-1.879149,8.798848,7.889176,6.979087,5.619993,4.345543,-3.644167,-1.285440,-0.373889,-6.275717,-0.784322,-9.162722],[-8.116645,2.976334,-6.859154,8.431158,8.909483,-4.744109,-2.700957,-5.016713,9.820499,9.176207,-7.393132,-5.318971,-2.334841,4.256047,1.550172],[-5.442947,9.755692,-5.938970,-6.378393,-3.347724,9.160867,7.534238,2.615164,2.402096,8.054397,-1.660440,-3.878894,1.905199,7.985019,3.610389],[-7.628350,-0.205458,2.857006,-5.129134,-6.520512,-7.803630,2.847298,6.683904,6.664703,9.068172,2.287755,-9.910676,-0.869473,9.239035,-3.716420],[1.225863,-5.523202,-6.949568,-6.902714,8.988073,-1.987785,-4.786590,5.951341,-0.561850,-0.099419,-7.658644,1.064808,7.294545,-7.468316,5.128750],[5.634564,4.935869,-8.363393,-4.592442,-7.074525,5.726935,6.208282,-0.184862,-9.229823,3.670799,8.757425,-8.167250,1.136814,-4.527129,-8.997587],[-1.646094,-1.842368,8.851270,-7.061677,-4.962623,-6.719225,1.612490,1.713859,-4.757255,-5.833884,7.601520,3.356404,-0.090288,7.015694,-0.595894],[-5.799929,-9.540760,9.522787,4.245519,4.775857,-6.772981,7.636893,5.678046,-0.290773,-6.341638,1.885133,-2.999277,-8.421255,0.508444,7.987546],[5.485239,4.904034,9.217574,-5.391449,-1.953278,-6.659573,6.143713,-1.483945,-9.533887,-0.841755,0.566179,-1.252389,6.517421,-1.753179,9.640506],[-9.030793,3.107688,-6.468567,-9.684320,9.311215,-9.410535,-0.672702,2.299252,-6.688975,1.914390,7.075517,-6.386617,-8.741263,-5.197037,0.094988],[-2.091248,-4.279173,3.525219,-7.670493,7.448993,-2.177952,6.841829,9.628981,7.508608,6.168884,7.981269,6.711869,-5.872268,9.209381,-4.253144],[-5.031189,-1.932798,-9.844304,8.416754,-6.767639,-8.333964,-6.462287,8.524167,-8.742537,5.518126,7.739675,-9.223018,2.183940,-4.320198,2.698658],[7.770060,6.751764,8.351664,0.587160,8.662911,8.306722,-3.631574,1.808487,-6.563540,-1.136642,7.787365,-5.647534,-1.033403,4.947807,-8.180130],[6.040986,-0.013120,4.473793,-9.217155,7.335807,-2.778480,9.629522,-8.729537,-8.476017,-1.012141,3.321014,-4.367151,-6.664200,5.928398,0.819457],[-3.901889,9.287722,-7.681719,-3.302654,4.783556,-5.455215,7.994072,-3.025647,-2.014885,-9.795644,8.329302,7.777769,7.680529,-8.064817,3.608181],[-3.826900,-5.104763,-0.452180,-1.834417,9.561210,-2.524232,-3.752644,9.312621,-3.688206,0.115828,-0.567925,-6.606111,8.981210,3.214651,-0.215924],[0.727997,5.688426,-2.051710,-0.636913,-5.244986,-2.644664,8.606641,-1.294733,7.889518,6.145223,3.936212,3.154850,7.190195,8.449462,-5.575109],[4.720962,-0.428657,1.358501,-8.051526,-8.621744,3.787417,-1.232122,6.386841,0.552872,2.744912,8.513738,-7.195797,-3.434487,6.455663,7.217576],[7.194179,-3.604338,2.961651,-2.032704,3.559662,-0.286791,0.065512,-8.998801,-3.953490,8.908474,-1.930860,-3.100851,3.635663,-8.161087,2.127194],[-6.730937,-3.660116,-1.054604,-6.419844,9.393081,4.919562,-6.985367,-5.894358,2.186074,-0.444023,-5.243430,-8.880758,7.439602,0.397247,-7.219511],[5.155082,5.249222,8.575494,0.441639,-0.979729,-9.690125,1.524065,-3.117904,3.156207,-3.737233,-5.675556,-9.292074,8.265246,-5.124965,3.202463],[6.021897,1.380053,-4.738693,2.389918,-9.344345,-2.293050,1.445542,8.866329,-1.846616,-0.945038,-7.256633,7.778532,4.180353,9.638456,-4.220106],[-9.604113,4.124183,-8.338866,3.958434,-8.962979,-0.924066,-6.371962,-1.178766,4.156144,-9.678137,0.577793,3.828417,8.799046,7.823586,-6.674042],[4.086106,-6.752529,9.822489,-4.975855,-7.065541,-6.744939,4.672972,-6.419561,3.044807,-9.466535,5.989536,-8.799961,1.363204,9.831844,-8.350213],[-0.766299,3.600248,0.025171,1.171343,6.013383,-2.462343,-9.459069,-7.907993,0.663971,4.026609,6.067678,1.887153,5.017225,2.702962,5.286334],[-3.596336,5.309590,-3.736080,-8.872228,-1.503026,9.776944,-8.264103,-3.775529,4.576107,-5.797105,-5.982121,2.318192,7.678317,-3.967352,-4.822208],[1.266713,3.828333,-1.402120,2.075586,0.459372,-4.900790,-3.813065,1.636788,1.402859,-6.139426,8.387135,4.633389,-5.600001,5.092230,6.089774],[-5.337097,-4.811562,8.200445,-1.437633,-6.072916,-6.122137,-5.796666,8.742584,0.817835,-4.719395,-0.923048,-8.855389,1.032154,-2.976229,6.819855],[-6.462712,-7.765092,1.500658,3.970478,-7.609109,-2.411354,-6.682255,9.866881,-2.034104,-9.633453,-9.623421,-2.261818,-1.459648,4.684236,-8.975100],[-7.287419,7.351337,3.156307,-1.497631,-4.032774,-8.658496,6.450699,6.758098,-2.166505,6.794068,7.104468,2.492860,6.736747,7.231074,6.337696],[5.365416,-2.610768,-0.655804,-0.215324,-2.849673,-0.232438,6.063192,7.456570,-9.309090,-4.340768,-2.135280,-6.299250,4.809431,5.631428,-6.197037],[-6.825790,-6.067605,-2.453819,-3.261501,7.955121,9.869690,-6.532145,4.315597,-3.927616,2.068039,6.716997,-3.645304,-2.557220,7.034263,-6.244876],[-1.815811,-4.489400,8.058781,5.715085,0.035852,-2.811228,-9.033207,8.925378,-6.042167,-1.191885,-4.881518,1.366307,7.400679,-3.395855,4.081844],[-6.368195,9.974624,-3.308785,-7.954692,-2.450930,-6.591053,-5.800145,3.786064,-2.921590,1.007096,-0.760651,-8.318365,-1.961909,7.227257,9.349876],[5.892312,-3.522246,-6.516368,5.475545,-7.549605,-7.521920,-4.746550,-5.897651,-4.811238,8.696341,7.528275,7.679194,0.347888,0.969836,-3.421144],[1.119395,-7.860718,-9.271362,-6.146188,9.986557,1.456996,6.906315,1.378621,-3.787366,-7.273708,6.324972,9.313573,-2.417938,7.571572,4.868256],[-7.632297,0.069801,-5.711543,8.095942,-5.890287,0.058765,-7.706126,0.725850,-0.809651,3.984956,-0.054277,-9.322692,6.046108,-2.832452,-5.168720],[-3.606336,0.794170,-1.121321,4.578861,-8.655136,-2.353820,3.272679,9.329920,-9.074043,-4.083797,-9.240647,3.339305,-9.109368,0.942099,3.165718],[-7.182731,-8.669495,2.496674,9.381889,-4.706645,-1.659199,-7.185726,6.388746,6.722767,0.094632,5.997363,-7.097264,4.889657,4.017524,5.649269],[-9.649893,-9.779907,0.553545,8.284137,-0.093962,8.969598,1.467224,2.060852,6.288162,-9.072886,-2.261778,-3.368268,-1.455606,-1.776154,9.630106],[-7.734816,5.463625,-5.581856,9.242198,-2.257375,-0.596322,-4.168947,5.608561,-2.182228,-5.544249,2.704490,3.785034,6.514397,1.406644,3.956042],[-4.881054,3.245323,9.766471,-9.385479,5.804817,-2.542745,-9.576040,3.253134,-4.385336,-7.768511,6.651002,-6.301559,-2.475286,-4.866660,6.503724],[-8.180714,-5.425966,3.879679,2.513414,-0.492748,-9.768262,-1.200435,2.712263,-6.422837,-4.637307,4.508559,9.211353,-6.389068,3.124862,9.581887],[-0.068619,-6.576181,4.891842,-5.565443,-6.919336,-7.013234,-1.515910,3.559763,-9.914576,3.115473,2.621056,-7.223827,-6.043180,-2.716103,-2.789680],[-8.580872,6.350612,7.799743,6.977791,9.544444,-9.700783,-7.233112,7.102030,-7.308835,-2.549422,-9.262321,-3.909870,-3.878913,5.048304,2.274951],[-5.391791,-6.338430,-6.546904,1.369252,-4.303958,7.739969,-0.983491,5.411242,-1.410515,2.901235,8.818973,-3.576403,4.976468,6.779090,5.417810],[-0.509306,-1.364021,2.786848,-7.110238,-7.777312,7.847175,1.707211,-0.545833,9.782409,-2.119589,6.340352,-8.698663,-6.151760,-8.863953,-1.880992],[-4.545664,0.503578,-1.156033,9.949408,6.799907,2.194137,-7.594660,-1.576254,9.260329,8.896154,8.084170,6.472653,-0.976314,7.406152,3.268435],[-5.007882,-6.019929,8.222667,-5.092062,7.533411,-9.167266,-5.857720,8.418943,1.318290,4.262176,-6.353894,9.267417,-7.592971,2.158409,-8.517342],[-8.998567,-1.025045,5.007274,5.070721,2.022792,8.257371,1.392781,-4.073951,9.906547,1.613682,-5.949923,2.218158,5.406805,3.448413,8.732097],[-7.818665,-4.867257,-8.112531,-8.563095,0.505756,-5.495929,0.194475,-6.212004,-8.343783,-0.378022,-7.229343,0.391116,-8.123298,-9.340775,-3.324056],[-5.652187,4.150720,2.452187,-1.936025,7.299091,8.353893,-7.665186,6.453756,-1.409848,-9.155435,3.966467,9.043386,-8.853349,5.445955,7.670539],[-7.903129,-0.724714,-8.329318,3.783436,5.370512,-0.091626,-2.600485,-8.359922,-5.513167,1.391702,9.224301,9.699746,-8.359647,-8.480921,-0.203211],[7.199737,7.250808,-6.101417,4.587327,-0.942765,-9.720059,-8.856639,-3.140268,-3.020349,8.775476,8.168653,-9.477878,-2.402762,3.892860,0.461491],[-7.936594,-0.886401,-3.494567,-3.980195,1.055670,7.446399,4.397714,-2.000224,-7.164710,-7.243978,0.499059,-0.192806,0.911333,-4.772458,1.793129],[-6.278643,-1.018613,-8.723942,-3.452322,-8.547345,8.846365,8.973268,7.054596,-1.525558,4.837997,-1.711654,9.618769,-3.750248,8.412505,7.499511],[-1.310712,-1.265107,-6.446084,-0.281202,1.409595,-1.611562,-9.717304,-2.423985,-6.657475,4.313788,3.979714,-3.189389,-7.850770,6.460218,0.206237],[-8.287035,1.361255,-3.446384,4.935877,-2.842502,2.371355,-1.797984,-8.335347,-7.723890,6.620966,-8.381636,0.100409,3.037043,-1.730674,0.247132],[1.313349,5.425622,-7.630535,9.501529,-6.103771,7.111559,-1.418166,3.080618,-9.183918,3.899903,4.354948,-0.399016,-4.696519,-4.361907,8.853658],[-6.626909,-3.844942,4.975934,7.362670,-5.651965,-3.580255,-5.531882,1.977125,6.381386,1.955577,-7.787909,9.824552,1.420441,-8.566092,-3.544880],[1.989135,4.558309,-8.293420,-7.231171,7.012226,-7.759885,-0.580186,-6.577830,-4.278638,7.256224,7.918986,4.794631,2.764608,-9.822354,-7.084322],[0.987806,-5.224196,6.632773,3.882643,-0.448100,1.359153,-0.635953,6.763451,3.783995,-0.488138,9.150419,-5.941562,-5.316354,1.647522,-0.354582],[1.177016,9.818846,-9.396217,4.589945,8.718720,-4.818978,-9.147785,-4.703838,6.801458,4.311109,0.529113,5.028036,4.399255,4.104245,2.278712],[4.095647,6.641087,-3.393625,2.308472,0.671193,2.828562,3.037280,-0.018890,-4.270334,-6.021636,9.025584,-2.472320,8.453231,5.097551,8.082269],[-9.903144,8.946236,1.324126,5.011379,3.970827,5.386860,-6.535435,-6.130352,9.796618,7.900939,0.277240,4.090432,4.383245,9.760873,7.311001],[4.896389,2.707093,9.985991,-1.428787,-4.622389,2.087196,3.815328,-9.472038,-9.183396,-0.262140,4.663007,-4.334962,9.823726,-0.789032,-6.225654],[2.533322,8.697400,3.811558,-4.105485,-3.197525,7.710852,-6.050607,8.868741,9.310074,-4.702505,2.972076,9.775832,-0.532739,-2.676750,8.333361],[-1.183078,-5.853099,-5.501107,-5.750915,-1.433154,6.101467,-4.745838,-3.873926,-3.159545,1.486275,9.134841,9.283417,2.974178,9.685962,-0.199330],[-0.904726,-9.816087,-7.640384,-6.763806,0.494764,8.696864,2.417488,-1.275156,-2.877464,9.614006,-9.196535,-9.045675,3.436855,8.874108,7.124121],[6.396526,6.480232,9.590299,-3.833479,-0.412078,-8.265192,-9.995659,-8.411579,3.321223,-6.247962,-2.620311,1.943000,-0.313619,-8.391969,9.403784],[5.054847,-8.324405,-4.715687,-8.289734,1.732707,-0.281475,1.293180,6.182573,-9.043594,-5.794834,4.132089,4.754731,5.959544,5.631859,3.239379],[-5.276231,-1.286253,2.367315,-4.080282,5.762626,3.349591,2.244254,1.800859,-1.529112,9.496467,-7.789137,4.790419,5.045280,3.566254,6.027811],[0.388946,2.393764,-7.521186,8.426014,-7.884858,-6.229092,-9.954479,-9.790113,3.209788,9.138979,8.383360,0.016093,7.236382,-9.563147,-1.075270],[-8.713331,3.491536,2.821821,-8.352516,-1.652641,8.680104,-5.215028,-3.691082,0.387019,2.544773,-2.666666,-1.921576,-3.388385,-3.779077,-9.819945],[-3.076133,-0.598789,-0.487588,1.645228,-8.298384,-1.555235,-5.606816,-2.612085,9.277572,-5.265900,-2.335040,-0.682263,6.517653,1.491109,3.917700],[-0.655650,-4.230770,1.555871,-4.779145,3.828382,-5.445514,-7.818475,6.916481,9.533818,7.248653,0.869059,-8.371638,-6.998340,-8.151580,9.397410],[-3.685449,9.451535,-2.680974,9.899987,0.600271,-2.023642,-3.309240,8.212049,8.959403,7.873452,-0.397820,-1.578378,-9.396487,-7.855598,-4.488832],[-3.891972,8.152503,1.204668,-7.841758,-8.450699,-6.461958,9.321280,-6.413464,-9.683138,3.030996,-9.100556,-2.559766,-2.928838,0.263971,-8.947318],[-6.848923,-6.746654,-2.050525,8.729921,3.388443,1.345034,-3.567768,-7.590636,5.100123,-8.796311,-3.418032,-6.014432,-6.542354,4.021501,-7.682821],[8.484000,-4.525532,-7.111316,-4.814476,0.270627,-9.411419,4.763183,2.498606,2.922436,-3.869677,1.894410,-0.932233,1.081129,-4.274924,-7.207718],[-4.033847,4.406069,-2.627033,-1.020801,-1.771362,-9.953864,-5.549732,9.554243,9.176067,-9.173246,6.240128,1.032298,1.035559,-2.824848,2.872182],[-6.723927,-0.025946,0.099105,-5.859937,0.143167,9.628133,1.842708,2.079758,-6.455940,3.752478,-8.451155,-8.581082,-4.058917,6.860924,-6.147029],[9.230804,-8.232354,-5.578486,-1.127779,0.404526,0.080778,9.160290,-9.035636,-0.753975,-8.670651,9.270417,-2.321314,-7.099303,-0.176089,7.478956],[-9.972422,8.218682,-7.690480,-0.038425,-1.780023,4.007179,0.551540,-0.048093,8.911231,-3.996486,-4.252982,2.577176,5.438991,0.090058,8.334423],[-4.906512,-7.405852,-1.639720,-2.271975,5.582183,0.931624,-8.183797,-4.065875,-8.255071,9.926336,9.545857,8.510846,-0.110459,-3.558656,-0.779667],[-4.015273,7.634167,-2.905103,-6.372033,0.364795,-8.429313,-6.369424,9.592093,0.661504,-8.724114,-4.267298,7.590502,-4.095287,-6.415362,7.351289],[-7.103627,-8.021700,-1.682014,-0.541377,9.095983,0.696066,-6.757472,-7.758995,-7.240247,3.850527,6.170391,-7.475773,0.592425,-3.430322,4.769394],[-0.722365,-8.483297,6.551539,-8.578698,5.077464,9.236454,4.451912,-6.964714,8.175347,4.065016,8.455230,-9.493842,4.607986,3.041475,-6.039673],[-9.657851,-2.646065,6.336049,1.805395,9.900675,8.730122,7.599683,-5.611370,-4.893275,-0.582146,0.312686,-0.040270,7.675076,4.673678,-3.954737],[7.352353,6.590849,1.725516,-1.851713,-9.925557,3.090314,-4.618657,-8.748932,-0.071560,9.892719,-5.576010,-6.347606,-5.164285,8.018382,-4.688411],[7.937294,-3.795973,-7.288254,8.238393,-6.315779,-3.085117,7.132330,6.579356,-5.152320,6.871790,-2.734038,-6.581244,-2.593005,4.350547,-7.375344],[3.538997,5.892870,-5.759438,2.549986,-4.043336,1.246651,8.741337,-1.449857,-3.043079,-8.755266,-5.551192,-8.708936,-2.840019,7.464750,-7.827078],[3.513741,-1.122422,2.927102,-2.672742,-2.528828,-8.864531,-7.014649,2.601014,-4.511637,1.768542,5.475586,-6.035220,-1.290635,-6.561636,-2.107199],[0.506977,7.809054,-7.399699,0.258786,8.251813,-1.952621,0.618011,-9.222407,2.018447,5.544170,8.172984,-2.260478,-6.814232,-0.542651,-0.215329],[5.018687,2.804154,5.978492,9.035004,-2.885839,1.407207,-5.789279,6.245339,4.712645,-4.826198,8.046067,1.984522,8.013847,-4.713693,-0.306571],[-2.117727,9.718026,-8.426559,5.708104,7.141102,5.977945,-4.252550,9.302982,-3.737848,-3.864144,8.391949,-6.510091,9.217866,-8.264972,-9.612376],[6.606168,-6.317358,-5.353662,7.666669,-6.196313,6.104461,0.004800,-5.263406,-3.633681,9.736653,0.107825,-6.234535,7.185788,8.404859,-7.375592],[1.232019,-4.733180,-1.990087,-9.811345,-5.673588,-4.434516,-9.245772,-5.619607,-8.455354,2.990646,2.815230,1.533133,3.909052,-7.594666,-0.275876],[-8.041652,-9.181132,-0.399134,8.819347,-6.419475,3.092711,8.962933,6.713058,-9.971072,-8.496129,5.801422,-8.005817,-9.550821,-5.989896,-8.499547],[5.225210,-0.613487,2.290393,-9.110957,9.183728,7.639090,1.724965,6.755457,-2.457421,-7.845366,7.502136,-7.513074,-5.019162,2.714526,1.387774],[-2.677302,-7.883373,-3.804114,2.341234,-3.344435,-8.446486,3.834688,5.064069,-0.018208,7.119844,-4.452604,-3.906387,-3.223344,2.831362,3.269063],[-0.469422,0.542606,-9.634177,-1.419782,-1.233650,1.632507,-6.993799,-0.028948,4.290486,3.210585,-2.944856,3.872610,6.224782,3.955572,-6.576715],[1.732283,-1.735972,1.553977,2.353527,-3.830055,2.294053,-3.792941,4.155679,8.286717,1.775896,5.299257,-7.035027,-0.896460,-5.967937,2.955634],[1.599207,6.302088,3.893248,-3.374102,1.697473,9.708826,-0.320570,-7.808858,-1.765211,-3.035343,2.067227,5.128738,5.025243,3.788992,-6.287602],[-1.736669,0.368822,7.834644,-1.382696,2.886558,4.873328,-0.371952,-7.847414,3.241064,-3.099329,-6.656476,0.435908,-6.638571,-1.905091,-4.424413],[-4.457099,-5.836456,5.614494,-9.721457,2.585041,1.734347,-9.602897,5.505550,-8.834603,-1.763336,-0.601288,-3.951786,-2.862258,-0.282640,-0.716751],[7.356815,0.372031,6.546653,-1.904087,2.944814,8.122269,-4.436816,-3.899002,3.617265,-2.369406,-8.731032,-3.851598,-3.338402,4.249926,7.286600],[3.750533,-0.166960,-4.335620,4.045346,6.116136,7.215103,4.294467,9.075229,2.111337,4.953280,-7.352620,-6.888631,-5.237978,9.790440,-5.236766],[-9.272988,-9.444992,-8.067027,-0.638989,7.178272,-0.631849,-9.498532,-4.857388,-3.013470,-9.108990,6.789028,7.328284,-5.614564,-4.277150,0.996268],[-7.350275,-3.468854,-0.873883,-9.568148,6.422689,-4.001282,-2.770618,7.372068,-3.988082,-3.051770,8.739591,7.485531,9.149183,2.946813,-8.633551],[-3.828060,-4.763516,7.850260,-0.447718,9.287501,2.942863,6.765643,-4.015149,-4.185405,-9.452150,-5.674784,-1.347792,-2.623416,8.574767,0.084527],[-2.015975,-6.585821,-7.401757,5.903331,3.248901,-0.583157,3.080151,-4.715797,6.478022,-8.872434,2.279142,9.165343,7.815518,-9.335875,5.200929],[-5.033354,0.516177,-1.396001,-1.171891,-3.391283,-4.967409,-4.342368,9.262991,-5.171574,7.926198,-8.650579,1.525560,-5.925456,-6.060705,5.452375],[-9.237999,8.144254,-4.548548,3.701366,-2.065637,0.225676,4.104577,-5.921420,-6.988099,5.342889,3.193639,1.730289,1.496501,9.164404,-1.692206],[-3.059680,-8.728200,-5.521693,5.752727,0.790216,-7.129519,1.354270,-7.243952,-6.290700,-2.776644,-7.949839,5.064578,-4.099010,7.354883,-5.904511],[-2.248428,-7.448926,4.509576,8.666381,8.877844,-1.131514,4.154408,9.167334,0.075440,3.705935,3.072350,4.689110,0.162431,0.822691,-0.683402],[-6.054392,-6.747382,0.358642,5.572265,2.916968,-1.685411,-5.263613,1.209738,5.033747,4.079230,-6.300885,6.133957,-5.646613,9.711136,1.477473],[9.617766,-1.540556,7.884730,7.702476,-4.782200,8.349551,-2.300763,2.551342,1.660393,-1.808841,7.605495,5.468113,3.051115,7.305775,6.714448],[-2.476740,-1.161196,9.956380,-8.820836,-2.888305,7.086395,6.568194,-1.946716,2.372737,-5.002867,-3.511579,-0.120182,-6.408638,7.584199,-8.733548],[-6.804534,-8.506992,3.875103,-2.604478,-2.700630,-2.452412,-2.398592,-4.346047,-1.821599,-2.719212,9.429724,-2.734522,-1.078706,8.023650,-2.908864],[4.035268,-8.411551,7.203438,3.808840,-0.346813,2.939097,9.285962,-3.240690,-0.210997,8.089478,8.105445,5.828010,-0.781267,-3.465292,-1.684341],[7.075924,-7.806083,1.717894,4.128094,7.598376,-7.684990,-1.380977,5.103563,4.788775,-4.251423,-2.835700,-6.406299,4.795469,-8.428412,-2.580389],[9.780218,-6.115582,-3.439457,5.006665,-4.395242,5.895820,7.181694,-1.105155,-8.458342,-9.755526,-4.257335,5.398490,9.140103,7.866632,-2.406719],[-2.960241,1.533475,7.685380,-3.328884,8.736097,-6.476338,4.329938,-4.144610,-9.604459,-0.032640,9.105084,1.801500,6.479311,-0.235481,-9.126236]], dtype = "float32")#candidate|2289|(169, 15)|const|float32
call_2288 = func_392_call(relay.reshape(const_2289.astype('float32'), [13, 13, 15]))
call_2290 = func_392_call(relay.reshape(const_2289.astype('float32'), [13, 13, 15]))
output = relay.Tuple([bop_2260,call_2280,bop_2284,call_2288,const_2289,])
output2 = relay.Tuple([bop_2260,call_2281,bop_2284,call_2290,const_2289,])
func_2300 = relay.Function([var_2258,var_2259,var_2283,], output)
mod['func_2300'] = func_2300
mod = relay.transform.InferType()(mod)
var_2301 = relay.var("var_2301", dtype = "uint8", shape = (3, 6, 16))#candidate|2301|(3, 6, 16)|var|uint8
var_2302 = relay.var("var_2302", dtype = "uint8", shape = (3, 6, 16))#candidate|2302|(3, 6, 16)|var|uint8
var_2303 = relay.var("var_2303", dtype = "uint8", shape = (3, 6, 16))#candidate|2303|(3, 6, 16)|var|uint8
output = func_2300(var_2301,var_2302,var_2303,)
func_2304 = relay.Function([var_2301,var_2302,var_2303,], output)
mutated_mod['func_2304'] = func_2304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2163_call = mod.get_global_var('func_2163')
func_2165_call = mutated_mod.get_global_var('func_2165')
call_2306 = func_2163_call()
call_2307 = func_2163_call()
func_837_call = mod.get_global_var('func_837')
func_838_call = mutated_mod.get_global_var('func_838')
call_2308 = relay.TupleGetItem(func_837_call(), 0)
call_2309 = relay.TupleGetItem(func_838_call(), 0)
const_2313 = relay.const([[-5,-8,-6,-7,8,-9,-8,2,-6,-10,-8],[-2,-5,8,-1,9,-7,3,9,10,-10,4],[-2,9,-9,8,4,-8,2,2,9,3,8],[1,6,5,-8,5,-7,-10,3,-4,10,7],[7,7,-1,-4,-6,6,-6,-1,-2,-8,1],[5,-6,3,8,9,-9,1,-5,-9,-2,5],[8,4,-2,-8,10,9,2,-1,-3,-6,-5],[10,-4,4,-4,5,5,-9,-2,10,-10,-8],[-2,-3,-9,5,7,-5,4,8,8,-9,3],[-10,7,-6,10,1,3,6,2,6,-9,-10],[-2,-3,2,-3,-2,-9,-4,9,-1,7,2],[-7,-5,6,4,6,-4,6,1,-10,-4,-5],[6,-4,4,-4,-3,3,-2,3,-4,-3,8],[-6,-9,-5,5,-1,5,1,-7,8,-4,9],[9,-5,10,3,7,10,-6,-1,4,6,-9],[9,-2,5,9,5,5,2,7,-5,7,-2],[-10,-5,-9,6,-10,4,-3,9,5,9,-1],[9,-8,-2,-2,7,-1,8,5,-8,10,-8],[-10,-4,-10,-7,4,1,-2,7,9,-4,8],[10,6,10,-9,9,-7,6,-4,10,-1,-1],[6,-5,-4,7,10,9,5,-2,-10,-4,1],[-4,-5,6,5,-8,-7,-6,-3,5,10,3],[-5,-10,5,-4,3,3,4,5,7,10,10],[5,1,-1,5,-6,7,7,-9,-8,9,-2],[3,2,-5,-5,10,-10,-1,-4,5,9,6],[-5,7,9,7,8,-3,9,7,-4,-6,-8],[5,3,1,-3,-8,-4,-2,-10,6,-8,-2],[-6,-2,4,5,5,5,4,-10,7,-3,-2],[3,3,-1,8,-1,10,7,1,9,3,-4],[4,-4,-3,-1,2,-8,-5,10,-2,-10,-4],[8,8,-3,-3,-10,2,-7,10,1,-2,-1],[-10,2,1,6,-8,3,4,-9,-3,-6,-2],[10,-1,-6,-2,1,7,3,5,5,4,9],[2,-6,6,9,-3,10,2,8,-4,-7,4],[10,9,-3,1,-2,-8,7,-8,-4,5,-8],[1,-2,-7,-7,-9,8,-2,3,-3,-8,3],[6,2,-4,-3,6,8,-8,-7,6,2,3],[7,7,1,10,1,-5,6,-1,-2,3,-5],[7,-6,5,6,-1,-6,-10,2,-8,8,7],[5,-2,-5,6,-6,9,5,1,3,-4,-8],[5,6,6,-9,7,9,10,4,3,1,3],[7,7,6,1,8,6,1,8,-5,3,-4],[-9,1,8,3,7,-5,-1,6,7,-8,-7],[-6,-1,10,4,-9,2,-4,-3,2,-8,2],[10,-1,-9,-9,-10,-1,-6,6,-7,-5,-8],[-9,-8,9,-10,5,-9,4,-5,-4,9,-7],[8,-5,10,-4,-10,9,6,4,-9,3,-5],[-5,3,5,-9,-7,6,4,3,-8,2,3],[-5,1,7,-3,-4,-3,2,-9,10,7,-7],[6,8,-4,-1,-6,3,-2,5,3,6,8],[-3,6,-2,-3,-4,10,-5,2,-1,-4,-8],[-5,2,4,-3,5,-9,9,-5,-2,-3,1],[-7,4,3,-4,-4,6,6,-5,2,5,10],[5,-8,4,-9,9,-10,-6,1,-4,1,-3],[9,6,-10,7,6,-7,8,8,-8,7,-2],[-3,-5,1,6,-2,4,10,-10,-3,-8,-3],[-4,8,-9,-4,-8,-5,-1,-8,10,3,10],[7,-10,-8,-3,-7,-3,-10,9,-3,-10,-1],[-5,-9,-9,-9,8,10,-8,-8,-1,-9,9],[-7,3,5,-10,-4,5,10,-8,4,-4,-5],[7,3,-6,2,-2,-4,-1,-10,-5,-6,10],[4,-2,3,7,10,9,1,6,3,-4,-4],[-7,-6,9,-3,-5,-4,-9,4,-6,9,-8],[5,4,3,-6,-1,-9,7,8,-6,1,1],[-8,-6,-1,-2,-5,-4,-6,7,4,-6,6],[3,-3,6,-9,-4,1,-3,-6,1,3,-10],[-2,8,-6,9,8,-3,-8,-7,-3,-6,-10],[7,6,-7,1,6,6,-9,10,2,9,9],[6,6,6,6,-3,-5,-8,5,-2,5,7],[-10,-2,-5,10,10,-1,-5,-10,-6,-1,1],[-3,-1,9,3,-9,-3,5,-2,3,1,10],[-2,7,3,-8,1,3,6,-7,-10,-4,-7],[-2,-6,-3,-10,4,-5,-9,-3,5,8,-6],[-9,-7,-9,-3,-2,9,9,-4,7,10,-1],[2,-8,5,-4,4,6,-4,2,3,-2,9],[-4,-10,-3,5,-1,-5,4,7,-3,-3,10],[-3,-3,-6,1,-8,-8,-8,-1,4,-1,-3],[9,3,2,-10,-1,7,-1,1,-6,-7,-9],[7,9,4,-10,-5,10,2,5,-4,-5,2],[-2,8,-4,-4,3,5,-3,-3,7,-4,7],[-6,-8,-1,-1,-10,8,1,-6,-6,-6,-2],[9,4,5,-4,-5,-7,3,7,10,5,7],[1,10,-4,-8,7,-2,-7,10,1,2,-8],[5,8,-3,5,-8,-5,4,7,6,3,-9],[-6,2,4,-7,-8,10,-8,-9,-4,9,-7],[9,-7,10,-6,10,7,1,-5,-6,1,-1],[8,1,-8,1,5,1,-6,4,1,-4,-8],[-2,3,10,-5,-2,2,4,6,-9,-7,5],[-3,-7,-6,5,-8,-9,-6,-3,-9,-3,-10],[2,2,7,2,-3,2,1,3,-2,-2,1],[9,6,-1,-8,4,5,9,-5,5,-8,-10],[-6,3,-3,2,-1,-10,-8,6,1,6,-9],[-9,8,4,4,-4,-8,-2,-2,-7,-3,3],[-7,9,-10,4,-4,6,9,-9,-6,3,10],[7,10,-6,-10,-6,8,4,2,9,-3,9],[7,-4,9,-6,-5,-10,6,7,4,2,-1],[-2,-6,-9,8,-10,-6,-7,-2,-3,-6,9],[2,10,9,10,8,-3,6,3,1,-8,-8],[1,8,6,-10,7,-10,8,9,-1,1,-3],[-9,-1,-10,7,-4,7,-2,-7,7,-4,3],[8,9,10,7,-7,10,7,6,9,10,-3],[8,-7,-8,-1,3,10,1,2,-3,-4,-6],[4,-5,-4,-8,1,9,-10,9,7,-1,3],[-6,1,5,-4,-8,-5,-3,8,-7,9,7],[2,-1,7,7,7,7,5,-5,5,9,-6],[8,-6,-5,1,-4,-7,4,-10,-7,4,-5],[8,-8,-5,10,1,-7,10,-2,3,4,5],[-5,-6,-10,-6,1,-6,6,8,-5,1,6],[2,-4,5,7,5,3,-4,-4,-1,-6,-4],[10,-8,10,5,-3,-5,-3,5,10,-2,1],[-7,8,-10,5,-9,-7,-8,-6,-7,1,6],[-2,-4,10,5,-1,6,8,-6,-3,8,9],[1,8,-4,7,2,2,-2,-1,-2,7,2],[8,-10,10,-1,3,-6,-7,1,2,-5,-1],[-7,-2,-5,-8,6,-2,7,4,2,-7,2],[1,-1,-1,7,1,-4,-4,-4,5,-8,-8],[-10,-2,-4,3,4,1,6,2,-4,9,8],[7,6,3,9,-9,-4,3,10,3,-7,1],[-6,9,6,10,-1,-9,10,-1,3,-10,-10],[6,7,8,-4,9,10,2,8,-3,8,6],[-3,-7,-8,3,9,2,9,-2,-6,4,1],[-5,7,-7,-9,-3,9,-9,8,-7,-3,5],[-6,6,-9,10,-8,10,3,10,-2,6,-6],[10,-9,3,3,-4,4,-3,-4,-5,-9,8],[4,-6,5,-8,7,5,3,7,-3,-9,3],[-9,4,-7,-9,-7,-5,9,-4,-10,-3,6],[4,-5,4,-5,-3,-4,-10,-2,-10,-4,-1],[-4,8,-8,1,-10,-7,2,-7,10,1,1],[-9,-10,9,3,-7,-6,10,-7,-8,-6,1],[8,-4,2,-4,-7,-3,1,3,5,-10,-4],[-3,-3,-9,5,4,-2,2,6,-6,-9,1],[2,-6,1,-5,8,7,8,10,-8,5,-5],[-3,-2,-3,7,-3,-8,-5,4,-6,-10,4],[9,-1,8,-6,-2,-3,5,7,2,10,-8],[-2,6,7,-1,4,-6,-8,3,-9,-4,-1],[-10,2,8,-5,8,9,5,10,6,7,-10],[-6,2,10,-10,6,9,4,-9,-4,-6,1],[-8,9,-4,7,5,9,-1,-3,9,-10,7],[-8,5,-5,6,6,6,1,4,-6,-1,6],[3,2,-1,2,6,-8,3,-6,9,4,-5],[-5,-1,8,5,6,5,10,10,-6,10,-9],[-7,-2,5,10,-9,1,-8,-5,-4,1,-9],[-5,-2,7,-7,5,-1,10,4,-10,-7,-4],[1,-9,10,-4,10,-10,-4,-4,-3,-5,-9],[4,5,6,-6,-6,-2,4,5,-3,-9,7],[1,-6,-4,1,-4,-5,-1,-2,3,-6,2],[-7,7,-4,-2,-4,4,-7,9,-2,-7,5],[-9,-6,4,7,1,-5,-3,-9,-9,8,-10],[-2,7,5,2,-1,-4,3,-9,4,-4,2],[-7,2,3,1,-9,6,8,9,1,1,6],[-3,-6,-9,-7,6,2,-2,-8,-10,-8,2],[-8,-6,-10,4,2,-3,6,9,-2,7,-10],[1,-2,6,9,-5,-8,8,9,4,-9,2],[-8,9,3,-4,-5,-3,-7,-6,-9,-5,-2],[-3,-5,2,5,-1,4,-2,6,-10,-2,9],[-5,8,-3,-9,6,-6,10,-8,4,7,-9],[-3,-5,-9,9,6,10,6,-7,-10,10,7],[-6,6,-4,5,1,10,2,-5,-7,5,-7],[3,-7,-8,-9,-6,9,4,-4,-7,-7,-3],[8,2,-8,-3,9,8,8,-2,2,1,-9],[-7,4,-7,2,-3,-5,6,-1,10,-4,5],[-6,-9,4,-4,-7,-3,-4,5,10,8,3],[3,-2,4,-1,8,-6,8,6,-3,2,5],[8,-3,6,-8,-5,2,3,-5,-7,-2,7],[4,-3,-8,5,-10,-3,-3,-6,9,9,-1],[9,7,-9,2,-2,-1,5,9,-3,3,3],[7,5,3,9,-8,-9,6,-5,-6,-7,3],[6,-10,-2,7,8,-7,9,-9,-3,7,-4],[-2,3,8,-4,-2,3,-9,4,4,-9,-5],[10,-7,10,9,-8,5,-10,1,-3,4,4],[5,-9,-2,-2,7,10,9,9,-6,-10,2],[5,5,8,-8,-3,2,3,-8,-10,7,10],[-2,3,-10,2,-2,-5,6,6,-6,8,1],[-2,6,-6,4,10,-9,-7,-5,-10,7,-6],[9,-9,-3,2,10,-4,10,1,8,-1,2],[5,-8,-6,2,-7,4,-5,3,-10,5,-9],[-6,8,-10,2,-8,1,3,10,9,-4,1],[9,-9,7,5,-9,-6,4,8,2,-4,-2],[10,10,-7,-10,6,-2,-10,-8,-7,-3,-6],[1,-4,7,-3,5,-1,3,-1,-8,-4,-3],[1,7,-2,1,9,9,-2,-3,7,10,-5],[6,6,7,6,4,5,5,2,-3,-7,-8],[9,6,1,4,9,-4,-5,4,-2,9,10],[3,2,-6,-8,-8,6,-3,-9,5,-6,-2],[-9,-2,-7,-8,-5,-2,7,-5,-2,2,-6],[7,1,-5,10,-9,6,-1,10,-3,-8,-3],[-10,-2,1,2,-10,-5,10,9,7,-10,7],[9,9,-4,4,-4,6,-9,-9,-6,-10,9],[1,2,5,-5,3,2,4,1,-3,-4,-2],[-6,4,9,5,5,-5,5,7,2,4,4],[-10,-7,1,-4,6,3,3,5,-9,3,-5],[3,8,4,9,-1,-2,-2,2,3,5,10],[-7,6,-5,-9,7,4,9,-7,-5,-7,-9],[-9,4,-10,9,9,-5,1,3,-10,-4,-6],[-2,1,-3,4,5,2,-5,-10,-2,-2,5],[-5,-5,-9,-9,2,-9,-7,-9,-4,-4,8],[9,-6,9,8,-1,-10,-9,-5,-3,-10,-10],[-5,-9,7,-7,5,-3,7,-6,3,9,4],[-4,4,6,2,-2,4,7,-5,6,-2,-8],[8,5,3,-7,-10,4,8,10,5,-8,3],[2,-2,7,-5,3,3,5,2,1,-4,-7],[-6,-4,-9,1,8,2,-10,-3,6,-8,-4],[4,-6,-7,1,-3,-1,9,-9,-3,-2,4],[4,4,-5,-2,7,6,-1,4,-9,1,3],[-9,10,9,7,-3,3,4,2,-7,-1,2],[6,-6,-4,6,-8,-2,-8,-2,4,-9,-3],[-5,8,5,4,3,-5,6,9,9,-6,-8],[1,1,-5,4,-3,4,2,-5,7,8,-9],[1,8,-7,-8,1,7,7,-10,2,2,9],[5,10,-9,2,-7,-8,-3,-9,2,-2,-2],[2,2,7,8,-7,7,-5,-8,-8,9,9],[-1,-5,-8,3,-8,2,-7,-1,5,9,5],[-2,-10,9,-6,-3,7,-1,9,-5,-9,6],[-7,2,-6,6,3,-6,10,-4,6,-3,-7],[9,10,-2,2,6,4,-1,-9,4,7,-6],[-7,-3,-8,-7,-3,-1,-2,-4,9,-2,-8],[-5,-2,-8,1,7,-6,5,7,9,8,-4],[2,-3,-8,6,-1,-2,4,-3,-5,4,-1],[5,9,-9,-3,7,3,-6,8,6,5,-2],[9,3,-6,-5,-6,-4,-4,3,-7,1,-2],[-2,9,10,7,2,-7,-2,-3,-9,-7,3],[-7,-7,9,-6,-6,-3,-10,10,5,5,-8],[7,4,-10,1,2,-2,-4,-8,-1,-3,-9],[7,2,1,6,-4,1,-8,-7,-4,9,-8],[6,7,10,2,-3,-9,3,-2,-9,9,-2],[-1,-8,-10,1,-1,-5,4,8,-7,9,8],[7,-8,-6,-6,-5,-9,-4,-1,-8,3,1],[-3,7,4,7,7,-1,10,-3,-8,-5,-3],[-8,7,-7,3,2,-8,7,7,3,-10,1],[4,8,4,8,6,10,-4,-6,4,1,8],[-4,-4,9,3,-3,3,8,-5,-3,-2,4],[1,-3,9,8,1,-2,-1,8,10,1,-1],[1,5,8,-10,-3,4,7,-9,-1,-9,7],[6,3,7,1,1,7,-7,-3,-7,9,2],[5,3,2,-8,9,6,-10,-6,-2,-3,2],[4,-7,4,2,-4,-5,-10,-6,-10,2,8],[9,-3,2,-10,7,2,2,-2,1,-1,10],[5,-2,4,1,8,-8,10,8,-6,3,9],[-5,-2,-4,3,6,3,-3,6,10,5,-4],[10,7,6,-6,-7,-3,-5,4,4,-6,-2],[3,6,-1,-3,-5,6,9,-2,-7,3,-2],[9,-8,7,-2,-6,6,-10,2,1,-4,-9],[-1,7,-4,7,1,-1,1,-7,-9,-9,5],[-2,-3,-4,2,-10,-6,10,-7,5,5,1],[4,-8,-10,-7,-6,-4,4,6,3,10,2],[1,-6,-9,2,6,7,10,3,-6,6,8],[10,-7,-1,-4,6,-2,6,1,3,-6,1],[8,3,3,-4,9,-6,-8,-3,9,10,2],[-5,5,-10,8,7,7,2,9,-2,1,-7],[4,1,-9,-9,8,6,1,4,-9,-7,-1],[8,-8,-6,-8,-8,-3,10,-4,5,-2,-5],[6,4,2,-4,2,-1,-2,-9,-2,-7,-10],[8,-5,-7,-5,1,4,9,-7,-7,4,-1],[-6,1,1,-2,-6,-6,7,-7,8,4,-3],[9,3,-3,5,7,6,9,5,-10,-4,-1],[2,3,-8,-3,7,3,8,-9,9,2,4],[-5,-3,-10,-1,-7,-1,-2,-7,-9,5,-4],[-7,-5,1,-4,-9,1,-1,-10,-4,-7,7],[-3,6,-9,-6,-5,-8,-1,-8,-1,1,-8],[5,-9,4,3,7,8,-9,-6,9,-10,-10],[5,6,-4,10,-1,9,-5,8,-4,3,10],[-8,9,-6,6,9,-3,-7,-4,-8,-3,5],[-9,5,9,7,10,-4,5,-7,7,2,3],[-6,8,1,2,-1,-10,6,4,9,-1,2],[-2,-8,-9,8,2,10,-9,-5,-9,-3,1],[-8,-5,9,-9,-3,-4,-1,-3,-6,4,-9],[6,-5,-10,-4,8,-6,-1,8,-5,-5,3],[-3,-5,-5,2,-2,-10,3,-3,-1,-3,3],[-9,5,5,-5,6,-9,7,-7,-10,7,-6],[-7,1,2,-4,-7,-10,-9,2,5,3,8],[6,9,6,5,10,3,-2,3,-3,-1,3],[-8,-7,3,-5,-10,-6,-8,-6,-6,-6,8],[-5,-6,-1,1,-8,-1,2,-4,4,-1,-2],[-3,-3,-7,-8,-1,-7,-1,-3,-4,-1,-5],[-8,-3,3,-3,2,-7,6,6,-10,7,3],[8,10,8,-1,-6,1,3,3,1,3,10],[2,3,2,-1,-10,10,5,3,2,4,1],[1,3,-7,10,8,-5,5,-3,-10,-9,4],[10,-9,7,10,-1,9,-1,-2,6,-4,-3],[8,-9,-8,1,-2,9,5,-5,3,-6,-3],[3,-9,-7,9,5,-5,-6,-1,-7,9,-4],[-2,-1,-8,1,5,7,2,8,4,-1,-6],[-4,-5,1,6,10,6,-7,8,4,-10,7],[6,3,9,-9,-2,-3,3,-1,-9,9,2],[-10,1,-4,-8,3,6,-4,-10,1,7,9],[10,-10,-10,-6,4,5,-1,-6,-9,3,-5],[-2,1,8,-9,-9,-8,-8,6,3,2,-5],[4,-4,-2,-10,-3,5,6,-3,10,-4,10],[7,9,-8,-7,-4,6,-5,4,-5,-8,4],[-4,8,8,4,-5,-6,2,-5,-6,-9,-8],[9,8,2,6,1,-2,8,3,10,5,-4],[9,-4,-10,-5,7,-2,-2,2,-8,-10,2],[-2,1,2,-7,3,-6,9,1,-4,-10,3],[1,-9,-8,9,8,2,-3,-5,1,-6,-8],[4,-9,-8,-5,10,-8,-4,8,4,-5,7],[-3,8,-2,-2,7,10,4,-8,2,-4,-7],[-5,-10,-4,7,2,-4,5,-3,8,3,-10],[7,6,6,-10,-6,1,-5,-2,-6,2,5],[6,4,-1,-2,-2,1,-10,7,3,4,1],[8,-2,10,-4,3,4,-6,2,10,-8,-3],[-7,8,-4,-5,-2,8,7,9,-2,3,-10],[5,-8,-10,-3,5,-5,-1,7,-4,8,4],[10,1,8,10,-5,-1,-9,9,6,-3,9],[10,1,-7,-7,-6,-6,1,-1,1,-7,6],[5,-7,1,2,5,8,-5,2,-5,1,5],[5,-4,-1,1,8,-5,9,-4,-8,10,-2],[8,-8,-4,4,10,7,-6,-6,8,-4,-6],[10,3,-8,3,-9,6,6,4,-1,-7,-8],[-9,-1,8,-3,-8,6,-1,4,6,7,-1],[-2,-2,1,3,4,6,10,-9,-10,-6,-8],[-1,-2,-6,-9,-1,1,-5,-5,-4,2,-4],[-5,5,-10,2,-9,10,9,10,2,10,7],[8,4,2,-3,8,9,-3,-6,9,-9,-5],[-5,-6,-8,-2,2,8,-3,3,5,6,-7],[-5,6,-8,-4,-3,8,8,6,3,-2,-5],[1,3,-1,2,-9,-1,-2,8,-2,9,-10],[7,8,7,1,5,10,-8,6,-9,8,10],[8,7,10,-1,-2,-8,8,-10,-7,-1,-4],[10,-8,7,-10,5,6,8,-10,8,-9,2],[-4,-6,-1,10,5,-9,8,8,-4,5,-7],[-6,6,-8,-2,10,-5,7,-5,-1,-6,3],[6,-3,6,-2,5,-1,4,3,2,-2,-2],[-2,5,-7,-6,6,-4,4,-8,-5,6,3],[-5,-6,2,3,4,-2,9,-9,-2,6,-3],[-5,9,-6,-6,-3,-5,-8,-4,4,-8,-6],[-8,1,9,5,10,-4,8,3,9,4,4],[5,-7,-7,-5,-10,-7,2,-2,9,5,-2],[3,8,1,10,-6,-5,-3,-7,-5,-1,10],[10,8,-6,3,7,-3,-10,9,-2,-4,-9],[9,-5,-3,-1,-10,6,2,-3,2,-3,-7],[1,-4,10,-10,-6,4,-5,8,1,7,-7],[1,-6,-4,-10,-3,-6,4,8,4,2,5],[-5,1,2,5,-9,-1,-1,-3,5,-2,4],[8,9,-7,-10,-8,7,2,9,3,6,-10],[-9,8,8,7,-9,5,-7,-8,-5,3,-8],[-5,2,3,-2,-5,-6,8,-6,-8,-2,-2],[5,7,8,6,-6,-1,9,-8,-6,1,-7],[-8,6,9,-8,6,-3,-5,-6,7,4,-2],[-3,-3,5,-3,-4,9,-6,5,-9,7,-5],[-3,7,-3,-7,3,7,-10,-1,9,5,-5],[-4,5,3,-5,6,9,5,4,9,3,5],[-10,-8,2,-5,-4,-9,-4,9,-1,5,-10],[-4,-6,4,-8,-3,-5,-7,6,-6,-3,-7],[7,6,3,-10,6,9,-6,1,2,-4,7],[-6,3,3,-6,5,-8,-1,-4,6,-6,2],[-8,8,7,10,1,-6,7,10,-10,7,8],[9,-1,-2,1,-1,-6,-10,-10,8,-6,8],[6,7,5,-5,9,4,8,7,1,8,-6],[2,-1,-7,-7,-10,-5,10,-8,10,9,-9],[2,-8,-5,-2,-9,7,7,6,-1,8,3],[3,-4,-1,8,2,8,-3,-10,-4,-9,8],[-8,-1,-1,4,-8,-5,1,5,-8,9,9],[-8,5,8,6,-10,-8,-1,8,3,4,8],[6,5,2,-9,-4,-2,1,-2,5,9,-1],[-4,-8,6,-7,-7,10,6,-6,7,-3,8],[8,-1,10,-6,-2,1,-7,4,-3,-8,5],[-7,2,8,2,9,5,-4,-2,7,1,8],[5,6,4,-1,2,7,-1,-7,-2,6,8],[4,10,-6,9,3,-5,-2,-4,6,-10,-8],[-10,5,-5,9,10,-3,-5,3,2,-8,4],[-4,10,4,2,2,-1,4,-7,-9,-8,-9],[-1,7,-8,-10,4,1,-3,5,-1,9,-3],[5,-8,10,9,1,10,5,4,10,-9,-3],[10,-2,-4,-10,-6,10,1,9,7,-2,-9],[-5,-4,2,-8,8,2,8,10,4,4,7],[-4,-7,-10,10,-8,2,-1,-5,-9,8,2],[-9,1,6,1,-1,2,6,9,-1,2,-8],[10,-4,6,-2,6,-9,-9,4,-8,3,-5],[4,-6,10,10,10,1,9,-6,6,-2,-10],[-1,9,9,3,-4,7,-2,9,-5,2,-5],[-7,-9,2,9,-2,-6,2,-6,9,-2,1],[5,7,-1,10,-7,-4,10,-10,7,1,-7],[-9,10,5,6,7,6,-3,-1,10,8,6],[9,6,2,-9,10,1,8,3,4,5,-4],[-6,1,-4,-1,6,-10,7,-10,10,6,2],[-9,-8,-5,-2,3,-3,-5,3,1,7,-4],[1,5,-7,-5,5,-4,-7,-5,-9,7,3],[10,8,-9,-1,1,6,7,9,2,6,-6],[-8,-9,1,8,-8,2,-10,-2,4,6,1],[5,3,-1,-5,1,-10,-10,-6,5,-7,-1],[7,-7,-7,1,6,6,-3,-8,6,4,2],[6,-2,-4,-7,-7,6,-5,9,-9,-2,-4],[-5,-5,-4,6,-5,-3,-3,-8,-2,7,1],[1,10,4,-6,-10,1,-2,6,-10,-2,10],[10,8,-4,-9,8,6,-1,-3,7,10,1],[-2,1,10,4,1,-9,-7,-5,-10,8,3],[4,-8,1,10,1,-9,-3,6,-8,-5,-5],[1,-1,-2,-7,-10,-3,4,8,4,-6,-2],[1,-10,6,-7,8,-10,9,7,9,8,6],[3,-8,3,-1,4,-6,2,-2,2,7,8],[-8,-3,-2,8,-5,-4,-2,-6,4,7,-6],[2,8,-7,-10,2,-10,4,7,2,4,4],[4,9,2,10,4,8,-5,-8,10,10,4],[3,-7,3,4,-7,7,-8,9,9,-7,-7],[1,-7,5,2,3,-3,4,-2,-5,-7,-5],[3,3,9,-8,4,10,-10,-1,8,-10,6],[9,2,-7,6,4,-5,-9,6,-9,-9,-2],[-7,3,-6,-6,-9,-10,-9,-2,8,4,2],[8,-3,10,9,10,4,-1,8,-3,-4,-10],[2,10,7,-5,-7,8,-1,1,8,-8,-5],[-3,8,-10,10,7,-1,4,-1,6,4,-8],[-10,-7,-8,-1,3,6,1,-6,-7,5,-10],[-5,-9,-8,4,-2,-3,-5,5,6,1,9],[-9,4,-8,5,1,-6,10,5,-10,-10,-5],[5,-10,-8,-2,-6,-2,8,-1,-7,-2,3],[8,8,5,10,3,-2,4,-8,8,9,4],[1,2,-8,-2,-10,10,-6,-6,-9,-2,3],[-10,4,5,-10,-5,-4,9,-3,6,-9,3],[-3,4,9,-2,3,5,2,5,9,-2,-8],[9,-2,-7,3,-8,9,10,-7,-10,6,10],[-7,1,4,1,4,3,4,7,-8,-4,7],[4,-6,-6,2,-2,10,5,7,-4,-5,-5],[7,-6,6,-1,-6,7,-9,-6,-9,-2,-2],[-1,-2,-9,3,7,5,4,-5,-4,-10,-5],[-6,-4,7,-3,2,7,-10,2,-10,3,4],[9,-4,2,-8,5,-8,-8,-2,6,-7,-9],[-1,2,9,9,5,-5,-2,1,6,3,-4],[8,4,-1,9,9,8,-1,7,2,-9,8],[-8,1,-6,7,-9,-7,3,3,-5,-1,-4],[-2,2,2,5,-3,1,-6,-2,9,1,2],[4,-5,-10,2,9,-4,9,2,-5,6,3],[-7,8,4,-3,-3,-6,4,5,9,-3,2],[-8,-8,3,3,10,1,-7,7,-5,-5,-1],[6,-8,-7,-7,-2,7,-2,-4,6,-4,-1],[-2,-10,-3,6,5,-9,7,3,6,3,-5],[-4,7,-4,7,-3,-6,-3,-8,-2,-3,10],[-6,7,10,7,-2,-6,-3,1,6,8,-5],[-10,2,-9,-2,6,-10,1,-3,-5,3,4],[-4,7,-7,3,-6,8,-4,2,4,5,2],[-5,-8,8,4,9,-6,-7,1,-8,2,4],[1,-3,7,10,-3,2,5,-5,3,8,-10],[6,-4,8,-2,-3,2,9,-3,-7,-4,-10],[-3,10,8,-7,3,-2,2,5,6,-7,6],[-6,-7,-5,-3,1,-1,2,-1,10,6,4],[-3,10,-9,-6,4,-1,-6,-1,-3,-5,-5],[4,9,1,5,1,-4,-7,-1,7,-6,8],[7,1,4,-4,6,-7,1,8,5,6,-4],[2,8,3,-10,-6,-2,6,-6,9,10,4],[-5,-1,-6,10,2,7,5,-5,-3,-1,9],[-3,2,6,-9,5,-5,-6,3,-10,2,-4],[7,2,-10,7,2,4,-3,6,-1,7,5],[-8,3,-3,5,-2,9,-4,-8,-10,-2,-4],[7,8,1,5,-1,6,10,9,-1,10,4],[10,-7,-2,-9,4,8,-5,7,7,-4,2],[-4,-1,-1,-6,-7,6,-9,10,7,-3,6],[-6,-7,-3,-7,4,7,8,-6,-4,1,4],[-10,-7,10,4,7,1,2,-4,10,-8,-3],[6,1,2,-9,3,3,-8,9,9,1,-9],[-3,-10,2,9,-4,-5,-4,-8,-5,4,-10],[-1,6,4,-1,8,9,6,-6,7,9,-9],[-10,7,6,5,8,5,-7,1,6,-3,-7],[-4,-5,7,4,-8,2,2,-1,-4,-3,10],[9,-10,-1,10,2,-3,5,-3,-5,-5,-8],[-5,-4,-5,9,8,9,5,-3,-9,6,-3],[1,4,-7,-3,8,2,-6,-10,4,-2,-6],[-4,1,5,3,-10,2,-2,-5,-3,-10,2],[4,10,-9,-3,-9,-5,10,10,6,10,6],[-8,-5,-3,-6,1,-8,-1,3,-4,-3,-5],[-1,-6,6,6,10,-4,-4,1,1,-1,-3],[6,6,-2,-2,-10,3,9,-6,3,10,-2],[-4,4,5,4,8,7,1,3,-6,6,2],[1,2,-3,-1,7,-6,-1,-8,2,-7,10],[-8,-3,5,-6,-5,-5,10,1,1,-7,3],[-1,-4,-7,-3,3,9,8,5,2,-8,9],[5,9,2,-6,-5,5,1,2,-8,-7,-1],[4,-6,6,-3,2,-8,5,-7,4,9,1],[1,6,-8,-10,-6,5,-9,8,9,-2,-2],[-9,-2,-3,2,3,-9,7,-1,-8,-9,1],[-5,4,10,1,4,1,2,-7,9,-2,-8],[-6,5,-8,-7,4,9,-8,-3,10,-8,5],[4,8,1,-2,8,10,3,10,8,-4,2],[-3,-10,4,4,9,3,-3,-9,5,-4,3],[-4,7,-6,6,-10,5,-2,7,-10,7,-6],[-8,-7,4,-10,9,7,4,5,-3,9,-5],[9,-10,-2,4,7,-5,-7,-6,-4,-8,8],[-6,4,-2,-7,5,-10,-7,-3,-2,-1,7],[-4,4,7,-10,-6,10,4,-4,-10,9,5],[2,-4,-8,-1,-4,7,2,-2,9,-7,-9],[-2,5,1,1,7,3,10,-8,-6,4,10],[5,8,-1,6,9,-2,-9,-8,8,6,9],[-3,-6,9,2,8,3,-3,5,6,-9,-8],[-3,9,-4,-5,10,1,-6,-6,10,-8,-1],[9,2,10,4,-10,-8,8,-5,-6,10,-2],[8,5,-3,-2,5,10,5,-9,-2,5,9],[2,6,-10,5,-3,2,-10,-2,-1,4,-4],[-3,-9,3,5,-9,5,-6,2,-9,-4,-6],[5,-9,-4,-8,-5,5,-8,-9,-10,9,-4],[2,-6,-4,9,-7,5,-9,-10,-1,-7,-8],[-5,-7,5,-10,-3,-8,3,-1,9,7,5],[-5,2,-9,-4,-6,-4,-4,1,2,8,4],[10,-4,-7,-5,6,7,-7,10,3,-10,1],[6,8,7,-7,-7,-8,8,-1,-8,-2,-6],[-9,-2,-2,-9,-6,4,-4,2,-4,8,10],[-7,-6,8,10,-1,-10,-3,-5,7,9,5],[-4,3,-6,2,-7,-6,6,3,8,6,6],[4,4,-3,7,-6,-5,-1,-2,-6,3,-3],[6,4,-1,3,4,1,1,2,-3,10,-9],[-10,3,-1,-6,3,10,5,2,1,7,3],[-7,7,5,-8,8,5,-4,8,-1,-3,2],[4,-7,-9,6,-6,9,3,-1,-8,10,2],[2,-3,1,-3,3,-7,4,-9,-8,-3,8],[-10,-8,-10,2,2,2,-6,-1,-5,8,-9],[8,3,10,-4,4,9,-2,10,-1,-9,-8],[-7,6,7,6,6,-1,3,-7,-2,-10,-2],[-10,-8,7,-5,4,5,-7,-4,8,8,-9],[3,-7,8,5,-2,4,-7,9,7,-5,-3],[-5,-5,7,10,-4,3,-7,-9,-2,-7,-2],[9,-6,5,7,4,-3,4,-2,-7,9,-8],[-2,9,7,-10,8,-10,-4,-6,3,4,8],[-7,2,7,-3,-8,-3,8,-2,-10,-8,7],[-5,6,2,5,7,10,-5,3,-3,4,-9],[-5,3,-3,6,-4,4,9,9,8,6,-7],[5,1,-2,-2,-7,2,-2,2,9,-9,5],[9,-3,-2,-4,-10,-9,-9,-5,-2,9,4],[-10,-7,10,2,-3,-1,-7,-5,-2,-2,-7],[-3,-1,5,-8,-9,-3,7,-2,3,9,2],[-9,-7,-4,-3,9,1,9,-7,-7,7,-5],[-5,5,-4,2,-2,-5,-1,7,7,-9,5],[-8,-7,1,5,10,6,-8,10,8,-8,-3],[1,-4,-8,-9,-3,7,10,-5,5,4,1],[-4,1,-4,-3,9,-9,-2,-6,-9,-8,8],[-4,4,6,-3,-2,-9,6,-2,-10,-3,-4],[5,-8,6,9,-5,-6,-2,-8,9,-9,1],[-2,4,-5,-3,4,8,10,-7,7,2,10],[6,-9,8,-5,-5,3,1,8,9,-9,3],[1,10,1,-1,-8,-9,-2,-6,7,4,-1],[-9,8,-1,3,8,-4,-1,-2,6,-9,-6],[-1,8,4,-7,6,3,4,-10,-8,10,-9]], dtype = "int8")#candidate|2313|(528, 11)|const|int8
bop_2314 = relay.greater_equal(call_2306.astype('bool'), const_2313.astype('bool')) # shape=(528, 11)
bop_2317 = relay.greater_equal(call_2307.astype('bool'), const_2313.astype('bool')) # shape=(528, 11)
func_1233_call = mod.get_global_var('func_1233')
func_1234_call = mutated_mod.get_global_var('func_1234')
call_2325 = func_1233_call()
call_2326 = func_1233_call()
output = relay.Tuple([call_2308,bop_2314,call_2325,])
output2 = relay.Tuple([call_2309,bop_2317,call_2326,])
func_2328 = relay.Function([], output)
mod['func_2328'] = func_2328
mod = relay.transform.InferType()(mod)
output = func_2328()
func_2329 = relay.Function([], output)
mutated_mod['func_2329'] = func_2329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1442_call = mod.get_global_var('func_1442')
func_1444_call = mutated_mod.get_global_var('func_1444')
call_2350 = relay.TupleGetItem(func_1442_call(), 1)
call_2351 = relay.TupleGetItem(func_1444_call(), 1)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_2353 = relay.TupleGetItem(func_1115_call(), 0)
call_2354 = relay.TupleGetItem(func_1116_call(), 0)
var_2369 = relay.var("var_2369", dtype = "float64", shape = (7, 6, 6))#candidate|2369|(7, 6, 6)|var|float64
bop_2370 = relay.bitwise_xor(call_2353.astype('uint64'), var_2369.astype('uint64')) # shape=(7, 6, 6)
bop_2373 = relay.bitwise_xor(call_2354.astype('uint64'), var_2369.astype('uint64')) # shape=(7, 6, 6)
var_2378 = relay.var("var_2378", dtype = "float32", shape = (13, 13, 15))#candidate|2378|(13, 13, 15)|var|float32
bop_2379 = relay.add(call_2350.astype('int64'), relay.reshape(var_2378.astype('int64'), relay.shape_of(call_2350))) # shape=(13, 13, 15)
bop_2382 = relay.add(call_2351.astype('int64'), relay.reshape(var_2378.astype('int64'), relay.shape_of(call_2351))) # shape=(13, 13, 15)
output = relay.Tuple([bop_2370,bop_2379,])
output2 = relay.Tuple([bop_2373,bop_2382,])
func_2402 = relay.Function([var_2369,var_2378,], output)
mod['func_2402'] = func_2402
mod = relay.transform.InferType()(mod)
mutated_mod['func_2402'] = func_2402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2402_call = mutated_mod.get_global_var('func_2402')
var_2404 = relay.var("var_2404", dtype = "float64", shape = (7, 6, 6))#candidate|2404|(7, 6, 6)|var|float64
var_2405 = relay.var("var_2405", dtype = "float32", shape = (13, 13, 15))#candidate|2405|(13, 13, 15)|var|float32
call_2403 = func_2402_call(var_2404,var_2405,)
output = call_2403
func_2406 = relay.Function([var_2404,var_2405,], output)
mutated_mod['func_2406'] = func_2406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1442_call = mod.get_global_var('func_1442')
func_1444_call = mutated_mod.get_global_var('func_1444')
call_2467 = relay.TupleGetItem(func_1442_call(), 2)
call_2468 = relay.TupleGetItem(func_1444_call(), 2)
var_2482 = relay.var("var_2482", dtype = "float32", shape = (2535,))#candidate|2482|(2535,)|var|float32
bop_2483 = relay.logical_xor(call_2467.astype('uint16'), relay.reshape(var_2482.astype('uint16'), relay.shape_of(call_2467))) # shape=(2535,)
bop_2486 = relay.logical_xor(call_2468.astype('uint16'), relay.reshape(var_2482.astype('uint16'), relay.shape_of(call_2468))) # shape=(2535,)
bop_2489 = relay.floor_divide(bop_2483.astype('float64'), relay.reshape(call_2467.astype('float64'), relay.shape_of(bop_2483))) # shape=(2535,)
bop_2492 = relay.floor_divide(bop_2486.astype('float64'), relay.reshape(call_2468.astype('float64'), relay.shape_of(bop_2486))) # shape=(2535,)
func_1540_call = mod.get_global_var('func_1540')
func_1543_call = mutated_mod.get_global_var('func_1543')
var_2495 = relay.var("var_2495", dtype = "float64", shape = (70, 9))#candidate|2495|(70, 9)|var|float64
const_2496 = relay.const([[8,-10,9,-5,-7,2,-2,9,10,-9,-1,10,10,2,-5,-10,2,-3,3,7,2,7,6,-1,-7,-9,-1,-8,-10,5,-5,-10,6,1,3,3,-9,9,-8,2,-3,4,2,5,2,-9,6,3,5,5,-4,-5,-9,-8,7,10,1,-5,6,4,1,-7,3,1,6,5,-2,-2,-5,6,8,-3,2,1,8,-7,3,8,-4,3,4,-9,-10,-7,-9,8,-1,-8,7,-10,-9,5,-3,-7,1,8,-9,2,-7,-6,-2,-6,3,5,-5,8,3,5,6,2,3,-3,-6,2,1,-2,2,7,3,-9,8,4,3,-7,3,-6,-1,9,-3,-1,-10,-1,-2,-2,-2,-5,8,-4,-3,10,4,2,-7,3,1,6,6,6,8,4,8,-10,1,9,-9,-9,9,6,-2,7,2,7,-3,-7,2,8,-3,8,6,-7,8,-6,7,2,3,-3,5,5,4,8,5,5,8,-1,3,-7,-4,-8,9,8,-9,6,-10,3,-5,9,-9,-8,-10,-1,-7,-3,-5,9,1,3,8,-6,-2,-4,2,-7,-2,9,-5,6,-1,2,8,-10,-1,-8,4,-1,5,-3,3,-9,4,6,10,-1,10,9,-7,6,-1,8,10,-2,-7,1,5,-4,8,10,1,-9,7,9,-6,-3,-9,4,4,-6,1,10,9,-6,-3,5,10,-5,1,-2,-8,3,9,1,-3,4,-4,1,10,10,-4,9,8,-2,7,5,-10,-5,8,-2,-2,-5,5,-10,3,-8,3,-2,9,-2,-7,-4,-9,-6,4,6,-6,-2,6,6,10,-8,-9,-5,-4,7,-8,-6,1,-2,2,10,-8,1,-2,5,8,6,4,10,-10,7,9,3,-7,-4,2,7,6,-5,-4,2,-4,1,-10,3,-9,6,-6,-7,-5,-2,-7,-8,-6,3,5,-3,-2,6,5,-9,-2,2,5,10,2,-6,10,2,-9,5,-8,3,-5,1,-10,4,-7,-1,10,4,-1,1,-6,-7,-9,9,5,9,-2,-9,3,6,2,6,-9,3,5,-3,-8,8,-7,7,10,9,8,-6,-3,-5,-2,-6,3,2,5,1,-8,-3,5,-6,-9,8,-4,2,-9,-2,-8,-3,-2,-1,2,2,-8,-6,8,9,-8,-5,-3,10,4,4,-4,4,-2,1,-6,4,10,8,-2,3,6,-4,7,-3,-8,4,4,8,-5,-1,-3,-5,-7,-1,10,10,-4,-4,-8,5,-2,8,8,-3,4,-6,-1,10,-1,-6,4,6,-8,-2,-5,-4,5,4,-7,-10,3,10,4,1,-10,8,-2,-2,5,9,-1,1,-5,1,6,-7,-7,2,-4,9,-1,-7,-1,5,5,10,-7,1,-7,-7,6,-9,-8,2,-5,7,-8,-9,5,7,-8,-5,-7,8,-1,-7,9,-7,9,3,2,8,-6,9,10,3,-4,-2,5,6,-7,2,-7,6,-10,-9,-1,-10,-5,8,8,3,10,-2,-5,10,1,7,10,-5,-2,-1,-3,-10,4,6,-1,-4,2,5,-6,9,-6,-5,-10,9,7,7,-4,10,4,10,5,-6,9,4,8,-3,10,5,10,-3,3,-7,-6,-5,-3,10,6,-4,-9,2,-2,4,-7,-3,2,-2,-8,1,5,6,10,5,2,-3]], dtype = "int16")#candidate|2496|(1, 624)|const|int16
call_2494 = relay.TupleGetItem(func_1540_call(relay.reshape(var_2495.astype('float64'), [7, 6, 15]), relay.reshape(const_2496.astype('int16'), [4, 156]), ), 4)
call_2497 = relay.TupleGetItem(func_1543_call(relay.reshape(var_2495.astype('float64'), [7, 6, 15]), relay.reshape(const_2496.astype('int16'), [4, 156]), ), 4)
var_2518 = relay.var("var_2518", dtype = "float64", shape = (2535,))#candidate|2518|(2535,)|var|float64
bop_2519 = relay.greater(bop_2489.astype('bool'), relay.reshape(var_2518.astype('bool'), relay.shape_of(bop_2489))) # shape=(2535,)
bop_2522 = relay.greater(bop_2492.astype('bool'), relay.reshape(var_2518.astype('bool'), relay.shape_of(bop_2492))) # shape=(2535,)
func_630_call = mod.get_global_var('func_630')
func_634_call = mutated_mod.get_global_var('func_634')
const_2524 = relay.const([[2.424670,-1.912914,3.112307,-3.435759,-0.559459,5.097864,5.141854,-7.218166,-3.644576,5.210945,7.820556,-3.911744,-7.680191,-2.347708,6.382361,0.244651,-1.679067,0.862745,5.015711,-3.601549,5.374677,-1.920949,-4.532429,-3.384120,-8.964467,-7.299202,-6.254279,-1.550832,-5.787781,7.540987,8.309617,-2.655426,4.005358,-4.577872,4.748891,-0.234853,-6.366549,6.220814,-9.881108,8.307754,1.674317,-8.826569,-7.246019,-1.883275,7.036038,7.001087,-6.997604,-9.709654,9.588119,6.739199,8.101943,2.366793,-2.514384,-3.172084,1.408387,5.459246],[1.531290,-4.379543,-4.726200,-3.949719,8.462345,4.795834,7.861128,4.135516,-4.647424,6.065195,-2.106413,9.800336,6.307276,0.330669,0.125668,-8.787138,2.018120,7.692690,4.920733,7.367211,9.964394,7.489836,0.180451,4.746402,9.446362,5.160091,8.763014,-7.402441,6.981075,9.687489,9.315597,6.009167,0.373863,-3.476018,0.578206,0.631241,-4.401868,1.698129,6.276569,2.056551,-9.798150,-5.768151,9.018850,-1.291097,8.309558,-8.159181,9.874296,0.960606,-9.452952,-6.689132,9.770300,-8.741484,-8.901992,8.921069,-5.154444,-3.759773],[-4.497348,-4.100747,3.044187,-2.872684,5.723065,7.175975,-9.611217,3.351726,4.869686,-5.085807,0.351000,-0.087697,6.305257,9.308531,6.167027,-8.265015,-3.147470,5.908055,0.887213,-7.644228,-8.633158,-6.871901,-6.287896,3.509691,7.274034,3.800782,-0.609593,-2.400283,6.383465,4.996911,0.753174,-7.019742,1.047300,8.134587,7.287383,1.429970,-5.332000,6.526796,9.012946,-0.510494,-3.544303,3.918741,0.684729,-8.552760,1.421481,7.092311,5.411077,-2.359802,-5.157093,-5.687308,-8.708877,4.511412,2.914095,3.339749,-0.938214,4.938027],[5.925012,4.501578,-3.729523,-9.920403,-0.619337,-0.712644,9.326508,-6.417762,-7.085869,-9.633201,-6.841605,9.752217,-1.031228,-8.221494,-3.573621,7.400137,-4.718423,1.440123,8.682713,-4.758001,0.344977,1.737839,1.812466,-0.469364,-1.494957,-2.393274,7.528763,-7.670413,7.222915,-9.699299,-8.446729,2.851696,-3.864368,9.892714,-0.617367,2.974576,-1.087975,5.902609,-5.905483,-5.351814,-2.826761,9.393122,-4.968576,0.929672,-5.339785,-2.501352,7.667270,7.111457,-1.648634,9.872119,-2.029995,-1.999687,-6.705258,5.727849,-8.229171,6.345160],[-5.292519,-3.500097,3.538245,-7.505608,5.740959,-3.920703,3.304391,-2.000861,1.187829,-8.547949,6.684235,-6.974958,-9.108807,-4.863363,2.637141,9.513402,2.044962,4.981850,0.180141,-9.921226,-4.139895,-7.729285,1.522291,4.372523,-1.257809,-4.754295,-7.131220,6.920036,-4.507663,7.087491,-5.218590,-6.568679,-1.336256,-4.554388,5.047318,-4.958552,4.102254,2.704591,-1.136754,6.713698,6.165858,-1.927114,4.042779,-6.973288,5.901882,9.948017,5.385936,0.689783,9.767158,2.237858,7.779241,-7.272403,-2.893383,6.752931,-2.233825,-1.462119]], dtype = "float32")#candidate|2524|(5, 56)|const|float32
call_2523 = relay.TupleGetItem(func_630_call(relay.reshape(const_2524.astype('float32'), [5, 14, 4]), relay.reshape(const_2496.astype('int16'), [12, 13, 4]), ), 0)
call_2525 = relay.TupleGetItem(func_634_call(relay.reshape(const_2524.astype('float32'), [5, 14, 4]), relay.reshape(const_2496.astype('int16'), [12, 13, 4]), ), 0)
output = relay.Tuple([call_2494,var_2495,const_2496,bop_2519,call_2523,const_2524,])
output2 = relay.Tuple([call_2497,var_2495,const_2496,bop_2522,call_2525,const_2524,])
func_2528 = relay.Function([var_2482,var_2495,var_2518,], output)
mod['func_2528'] = func_2528
mod = relay.transform.InferType()(mod)
mutated_mod['func_2528'] = func_2528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2528_call = mutated_mod.get_global_var('func_2528')
var_2530 = relay.var("var_2530", dtype = "float32", shape = (2535,))#candidate|2530|(2535,)|var|float32
var_2531 = relay.var("var_2531", dtype = "float64", shape = (70, 9))#candidate|2531|(70, 9)|var|float64
var_2532 = relay.var("var_2532", dtype = "float64", shape = (2535,))#candidate|2532|(2535,)|var|float64
call_2529 = func_2528_call(var_2530,var_2531,var_2532,)
output = call_2529
func_2533 = relay.Function([var_2530,var_2531,var_2532,], output)
mutated_mod['func_2533'] = func_2533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2328_call = mod.get_global_var('func_2328')
func_2329_call = mutated_mod.get_global_var('func_2329')
call_2593 = relay.TupleGetItem(func_2328_call(), 0)
call_2594 = relay.TupleGetItem(func_2329_call(), 0)
output = relay.Tuple([call_2593,])
output2 = relay.Tuple([call_2594,])
func_2603 = relay.Function([], output)
mod['func_2603'] = func_2603
mod = relay.transform.InferType()(mod)
output = func_2603()
func_2604 = relay.Function([], output)
mutated_mod['func_2604'] = func_2604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2328_call = mod.get_global_var('func_2328')
func_2329_call = mutated_mod.get_global_var('func_2329')
call_2624 = relay.TupleGetItem(func_2328_call(), 1)
call_2625 = relay.TupleGetItem(func_2329_call(), 1)
func_2528_call = mod.get_global_var('func_2528')
func_2533_call = mutated_mod.get_global_var('func_2533')
const_2635 = relay.const([-1.151349,9.046018,6.877675,7.202433,2.599368,-9.293395,0.105768,5.496930,-8.744113,-2.735116,8.962968,1.150821,1.110129,4.780677,-7.502920,0.882361,-1.066875,-0.472137,1.839253,8.646027,2.773301,3.876960,8.644167,0.003806,-5.919337,-4.777808,-9.451810,-6.158888,-6.045040,7.560106,1.552931,-5.947775,1.767911,2.547736,-5.476658,9.656920,-3.904029,-4.569625,1.792510,8.426575,7.665805,6.544784,4.488548,9.502157,-2.897864,0.543675,2.444459,7.681261,-5.735033,3.263054,8.124215,0.686259,4.612815,1.052983,0.414324,5.607070,8.048508,-1.879200,-4.962542,-8.818670,-5.969954,-7.610489,5.631897,-6.949304,4.008612,-3.639738,-6.342749,-1.134293,7.828487,-8.376091,1.595311,9.323979,5.480388,3.584130,9.574092,-5.084353,5.982105,7.822966,-6.549337,5.471952,-5.328176,-4.580944,8.209596,-2.312708,4.014264,2.062675,-7.471460,6.450861,-7.961155,-9.928414,-6.670990,-7.544385,1.609014,5.470320,4.494187,8.014828,-3.828769,7.150159,3.190328,7.768543,-7.659868,0.794802,7.549463,-6.774188,3.790226,-7.579903,7.557153,-6.926677,-7.241483,-7.701257,-0.550202,4.225766,-0.743907,-6.096770,6.987071,-2.751710,-0.406636,-5.768013,-2.953221,5.081133,4.582834,0.064393,-4.616999,-0.293444,6.363498,3.819904,-6.064223,4.010294,3.633261,-1.769281,9.420363,-3.995727,-6.847547,7.110033,-8.171445,5.872921,-3.073019,-2.970382,-3.830008,-5.996011,-2.649057,1.926499,-8.870944,6.734060,-3.273038,-7.894503,-6.789072,1.384229,-3.581130,8.284500,4.832770,-4.926302,9.509734,1.198089,5.710519,-4.442033,7.998313,5.226071,-6.399034,7.180247,-7.026030,-2.961421,-1.657933,-8.655128,-4.376770,2.861629,-3.611270,-9.938901,5.672644,4.189909,7.901834,-3.862425,5.048513,-0.048949,-6.600201,-4.094491,-0.544450,9.930636,-0.605246,2.471591,9.778582,-1.589382,-0.837104,7.450412,-2.325289,6.769975,-4.293068,-6.232818,9.331550,1.722302,-6.127350,-9.685175,-8.028232,-7.393500,4.907341,-3.933957,-3.977495,-0.002362,6.166466,-0.589389,-8.086195,3.751096,7.457831,-9.719486,-4.853017,-9.300533,9.729075,4.318871,-0.718088,-9.880281,8.318219,-9.697022,-1.180492,9.757105,4.616071,6.987249,8.716775,-8.807319,5.899578,9.620980,3.667654,-2.497586,-4.082761,-7.685307,2.222213,1.845155,0.364747,2.327884,-6.113801,9.798627,-5.438361,-2.809140,7.109918,7.879766,3.729755,7.816399,-9.934684,-9.076164,1.098789,-9.143647,3.818949,-3.913189,1.957488,-3.003140,-9.358474,5.529166,9.842219,-0.327738,8.335956,6.135388,-3.453016,2.119144,-3.944059,6.165922,-8.635545,8.420144,9.054725,9.073798,7.138332,3.059203,3.941974,-1.269023,-2.278043,-5.478114,-9.860280,-6.939923,-7.606848,-2.975921,1.614654,-9.160394,8.873047,-8.714628,3.236226,2.138938,5.451578,-6.954202,-2.325841,2.341371,5.329181,-8.974150,7.729571,-5.872641,-4.218058,9.425445,6.801496,9.881138,0.316976,1.664507,0.756920,7.877861,4.900826,-3.048468,-9.087600,-7.544015,3.065637,-0.148874,-6.656788,-7.279441,8.180685,-8.723739,8.472799,2.559127,7.220155,-6.812141,9.630494,-6.390190,0.382335,-7.460168,-2.290899,-3.099227,9.903991,6.568712,5.193058,-3.780444,0.223089,8.678532,2.457281,7.925126,-6.349147,3.760027,3.601837,-8.881696,-7.295257,-4.518385,-4.007832,-0.844487,1.350054,8.576578,3.476674,3.847690,-6.177846,-2.576974,4.675497,7.972265,8.212220,-4.046644,-4.337490,1.295000,6.097815,9.968300,-6.722009,-2.183867,5.496212,2.818510,2.552442,5.003786,1.248885,9.502794,4.554716,-7.458868,-2.124099,8.225124,-2.884846,9.678339,8.872627,0.109301,6.453894,0.809795,5.205412,8.555111,-7.053212,-1.062864,-8.781331,-4.406836,-6.352377,-5.948069,6.114013,3.582215,2.584326,-1.951501,-9.917176,-3.327777,2.670721,-8.600442,-0.259020,9.710269,9.252473,9.770216,-7.231785,7.558468,-9.085586,0.119187,-9.765829,5.874601,2.943597,-6.907830,7.269155,0.238239,-6.218691,8.547102,-4.758444,0.434127,3.622385,3.265743,9.177697,-5.575538,3.544405,3.594541,6.270134,1.435930,-2.138397,-1.689199,-7.263224,-9.802186,0.334005,-3.142470,7.481436,0.196124,-5.598189,-8.430221,-2.791887,4.724825,-4.264392,4.869297,-3.084869,-8.009032,-8.236514,-1.262772,2.959151,9.790695,3.573396,-5.641930,-5.723893,6.969439,-6.967531,-5.934166,-6.589968,-1.923011,-3.446667,-0.762964,-7.322068,-1.541839,9.352666,-9.683148,4.601362,-2.946797,8.232133,9.218062,-8.266784,-2.129229,-1.917697,9.441623,-7.693320,0.572397,0.133031,8.552629,7.854669,-7.683174,0.672467,0.264275,3.939866,1.152252,-9.131718,-0.480061,6.674639,4.389931,1.955083,-0.622931,0.416983,-1.081973,-0.709582,-7.021877,9.763085,-9.350443,2.915365,-5.807898,8.272809,1.168561,-4.827501,1.366291,-9.624847,-5.882781,9.524811,-1.645831,-1.191787,-5.476618,-2.119060,-0.140290,9.836930,-9.431751,-5.454267,1.026082,-0.868480,1.759364,-6.760681,-7.246875,-5.622522,-8.966005,-4.140025,-7.333637,-3.360314,9.897048,2.338661,-7.405927,-5.277059,-5.069166,8.905000,6.147871,-8.818204,2.006419,8.534676,-6.571756,-9.009060,4.243074,3.990664,1.564913,-3.231856,-4.637403,2.439762,5.997014,-2.381427,-4.375611,0.864536,5.616518,4.741305,2.264528,5.128156,-9.231981,-0.931908,-5.034433,6.706149,3.553515,-3.408457,7.401085,6.532590,0.145087,-6.455686,8.268942,4.541032,-6.394552,9.611586,1.264306,7.162836,-4.986289,-5.270940,7.084956,2.522916,3.782097,-0.349809,9.589457,8.635049,0.878379,-1.222702,-0.260138,-2.711144,-8.234094,-7.447611,-8.759135,8.180034,6.311059,2.435790,8.662981,-7.441563,-7.572900,-2.559177,-6.686909,-0.620485,2.385093,-2.740567,5.157498,-0.971043,8.215798,8.646873,-6.821900,-9.371848,-4.567794,-4.355392,-0.552915,9.436159,-4.816641,-5.324472,1.738875,-8.274849,-3.021087,-9.630646,8.068297,2.667618,6.119941,-0.533744,-3.282409,-7.251517,-7.257844,-6.179783,7.670931,8.121043,1.196462,-5.152109,2.847503,-3.763221,3.460156,4.991119,8.293824,0.702650,0.297473,9.650108,0.846865,2.453545,-2.639314,-3.180942,9.064196,7.602868,-7.595726,2.797715,0.662362,2.114055,3.718280,1.838957,1.624306,8.992449,4.756342,-6.341020,-8.246465,-3.009282,-7.390165,-4.315254,7.823099,-0.687691,2.059879,9.743025,9.502067,-5.268895,3.708688,-4.325382,-0.993747,1.493690,-6.706468,-9.807485,3.957544,2.265146,-1.657709,1.356061,-6.483060,4.502604,-0.324190,-3.933454,8.494186,-5.060629,-0.888678,0.117477,-9.237777,-7.255270,8.901005,-4.439509,-4.481111,-5.334967,5.367301,-5.288317,1.918953,-5.916780,-7.387977,-0.341075,2.679257,-0.937902,4.827230,-9.062099,-7.370354,-6.028125,-5.389890,2.618368,-6.876076,6.964996,0.819424,6.331714,5.263747,-7.445084,-0.495817,5.871732,1.876173,-7.443792,6.095351,8.161690,8.039969,9.720318,-0.893044,-2.534150,-9.224271,-4.708224,6.879499,6.156314,9.340413,-5.179809,-2.000975,7.604891,0.455527,-6.211544,8.520480,6.218032,3.800504,-7.997206,9.635524,-6.837112,-9.648141,9.286131,5.345240,-5.227596,4.439294,-5.211128,-7.418800,1.821768,7.162590,-9.046393,0.373576,-1.598844,2.335370,-9.754819,6.025519,-2.519293,-8.422198,-9.121098,-9.190582,-8.978921,7.891061,6.445029,7.113548,-3.785187,-8.295935,1.295837,-5.051457,-3.996851,-8.429643,-3.888561,-7.715452,3.325540,-6.092737,-6.560854,-1.149920,-8.326967,3.803227,8.755829,6.173088,-1.488964,-4.623878,1.428472,1.236351,-9.720179,6.121887,1.896806,-0.002908,-5.341540,-5.497354,8.559656,2.664572,7.026146,-7.308345,0.653898,-9.034923,3.776973,9.568099,2.912598,3.866952,-8.866243,-8.430298,-1.548742,-9.945884,8.247982,5.309769,6.538928,4.520761,0.785967,1.822177,7.392706,-7.587121,5.730944,1.371952,-8.953790,-8.328407,4.211612,3.360692,9.116469,-6.621959,-4.681951,-7.800945,7.382039,-7.973982,1.388095,0.602655,7.726427,2.215016,-1.565451,0.569421,9.950341,5.610287,-3.983618,-1.410050,8.710114,9.617533,-8.301535,0.678422,7.743901,0.446369,-9.715525,9.275393,-5.825759,-0.547119,7.994205,-3.663024,7.626560,-4.941004,-7.344654,-1.677052,4.828589,0.951200,4.311863,1.178398,8.850096,2.177427,-7.722303,4.882351,4.418596,8.337960,-4.976477,-1.316978,4.418267,3.466183,8.036462,5.772727,7.254447,1.092911,-7.528393,7.928739,9.595019,9.246789,2.181383,-2.348472,-2.267054,-4.788640,6.879216,-1.986103,6.929327,-8.603366,9.636267,8.122163,2.223004,3.311763,-7.456288,5.335902,9.054167,6.474825,1.989070,-2.778855,9.293562,-1.088647,5.859229,0.572261,8.298067,4.696586,-3.621071,2.034178,3.559922,1.477201,-6.695475,7.106078,3.048249,-2.633252,7.106784,-0.270555,9.096342,0.735221,2.350299,6.658640,5.849027,-4.124406,-4.410988,1.895313,-4.093461,9.820816,0.872320,8.777591,1.596215,9.563754,-4.773041,4.167454,1.313185,-3.266482,2.471637,7.744599,-0.520842,-4.726727,5.223168,8.520013,-0.915710,-0.378274,1.819197,-2.737441,-9.535168,5.022486,1.898130,-8.933486,-6.342942,-0.587558,8.757110,-5.045174,7.229403,-4.784283,-0.698623,-7.199696,-4.738649,-8.876223,-4.673122,-8.517040,-6.900309,0.070778,-6.504969,-8.893514,-9.993514,-9.872258,-6.929645,-2.330166,-4.826902,9.950713,-3.166723,9.885250,-0.197230,-8.166317,6.428140,8.566477,1.817532,1.102597,1.829671,-7.740436,-6.792955,5.481596,2.986608,-0.350903,-6.034417,-3.195277,-1.782053,1.923065,7.500412,3.698155,-7.927859,-5.368406,-0.277664,6.946366,-5.922773,5.252430,-9.325943,8.872804,-0.673377,9.971035,2.958496,0.395568,-6.600278,2.928534,8.403035,-0.179699,4.415987,6.628463,-6.791669,6.461960,-4.312699,-0.839785,9.796402,-6.474582,3.146625,-8.374478,5.623716,-6.341874,-4.608545,0.130595,3.292776,4.864094,-1.990579,-9.837136,9.752920,8.737771,-0.770346,9.145451,-4.421012,-2.414405,7.243147,-4.056946,-8.837884,-4.948013,-1.482881,-5.815045,0.830343,8.173093,-2.445135,3.567320,9.833540,5.263646,-9.225843,-4.565053,-1.162474,-5.723204,5.777133,-4.861213,-3.738365,4.826419,-2.949739,-4.090962,5.411571,-2.494343,4.431010,-2.434349,-9.340051,-7.930973,-0.337807,5.735365,3.920883,-5.593778,4.425094,5.302072,-3.919230,-5.408280,-4.075175,-8.857359,-3.709746,-3.218163,-8.979944,9.712840,-2.240446,6.132253,-9.596656,-7.204147,6.745675,-4.213859,6.308537,-6.930782,-4.164018,4.847132,3.878535,0.116664,-9.894070,2.312472,-8.495726,2.182681,-8.451962,8.901376,-2.507659,0.104731,-7.327566,-0.802747,6.213757,3.923059,6.133569,-7.697029,9.155397,3.019958,8.145242,-8.835682,2.820689,3.438572,2.139987,-8.279931,-9.694309,1.043820,1.597733,-4.528514,-2.012901,0.845820,-8.837291,-5.010888,8.138001,9.299627,-0.511797,-0.880851,-6.951581,4.260558,-8.162395,1.564212,0.360132,6.676754,-0.041743,6.112135,-5.567753,-8.417686,3.686426,-9.081455,-7.441205,6.150372,5.546927,-2.987645,1.453305,2.007195,9.597491,-7.330597,6.322525,-3.515780,-3.716959,-2.541128,-2.161054,4.300333,9.730862,-7.976513,-1.037696,-7.036820,5.071139,9.151248,5.952654,-7.806090,2.535113,8.877836,-2.856517,-0.784391,-3.722593,0.344004,7.550205,-8.300203,-8.020261,3.580534,-3.360119,5.068563,-1.048141,8.915259,7.418815,0.083507,-2.461822,-4.872691,-9.368688,7.730946,5.516275,5.421116,-1.286639,-1.509493,-8.922382,2.901912,9.265717,-1.279796,8.020266,5.232536,0.681993,9.957619,-1.486880,-1.517568,-6.200982,6.957982,8.092440,-6.183223,-8.924935,-8.207488,-1.855472,3.841248,-5.005963,-5.473872,5.303519,3.570758,-8.796687,3.949630,-6.876985,9.621443,2.072835,-2.273909,7.510948,-2.417292,0.636892,-6.682226,-6.323850,-2.240894,1.911541,-7.300789,-4.086571,7.504792,-5.154804,3.122948,-0.164401,9.001349,1.025287,-1.622775,5.872738,-3.934370,-0.661185,-2.844933,2.649969,4.700364,1.799532,6.699974,8.685602,-8.819577,4.397370,-0.178311,-9.409045,-7.884596,-8.949494,-1.158592,6.814804,-0.872766,1.158808,6.522060,3.549753,6.594124,-2.282964,6.610547,9.988706,-3.505611,6.294741,5.253518,-1.216406,-2.024777,-5.563180,-7.041793,6.583016,9.209385,-2.862931,1.265810,-0.853761,-0.088276,-1.556196,-5.402377,-0.009391,-1.896825,-0.554412,3.057864,8.399853,6.313535,6.746587,-8.352596,-8.034952,2.096144,-8.998449,8.785503,-1.115852,7.297196,0.476477,-8.895135,-2.687903,8.326833,-6.672762,-6.305137,-5.433874,-3.271250,6.135270,4.178878,-3.512355,-8.051363,1.722783,0.440323,-4.374468,-8.437814,0.623913,9.988307,-1.633816,-6.616227,1.763006,-7.140893,-8.402585,4.423026,2.011746,7.325704,-7.152850,-8.049730,7.840767,6.661698,0.326680,1.799108,-6.237161,-7.760556,-6.714528,-9.805052,9.974802,3.942531,5.174035,-0.976631,7.001528,-4.360097,9.047191,-5.312513,6.955459,-5.595339,4.868431,7.177111,-5.778888,-1.233023,-3.532319,4.630398,-8.774157,6.666854,5.014814,-2.360998,1.414702,-2.806927,-9.210400,-5.998004,-1.558142,-0.052204,-3.013406,-0.060068,3.128226,4.911129,7.021170,-3.429664,-0.968017,2.220759,2.829480,-6.038998,-8.103228,6.433749,1.335108,-6.629928,4.174788,-3.536462,-8.723094,-9.975243,6.008496,7.790888,-8.921467,-2.860020,4.400797,2.135412,-2.733098,-4.203759,-0.390175,9.592755,7.291426,-4.783613,-8.732905,-3.124850,9.050971,-8.798830,2.488286,6.056123,1.273671,-3.032630,7.719855,3.380552,0.444803,-5.733865,-6.622707,-1.078818,-1.886263,-7.428835,1.782633,9.382638,6.098528,5.364949,-5.376414,1.061031,4.058683,-6.386860,9.973695,-5.612983,5.403290,-4.880734,-5.843255,5.766829,2.231470,6.721234,1.945938,2.560104,-7.516468,5.979512,1.131974,8.489566,-0.361858,8.609522,3.953410,-3.107179,6.570595,-8.939482,6.656870,-2.636726,3.972260,8.702799,-8.751449,-2.406104,-3.414993,0.537422,-2.866920,-6.131670,0.311115,-2.773040,3.431086,9.962626,3.595673,-9.817486,-4.790513,-9.702713,-3.609877,-0.627160,-7.895487,7.321160,-3.186848,8.006773,4.719277,6.002066,5.711359,-4.230821,-1.877962,4.621064,5.841081,1.712298,-8.894519,-9.278384,4.445016,-1.490369,1.885573,-3.101990,-0.318907,-1.773364,6.737366,-4.731532,7.557858,7.258957,2.112731,3.768570,-1.658123,-8.460146,-9.168907,2.771332,3.223666,-5.011989,-7.041361,-1.635220,-5.560763,-0.844166,-4.516093,-5.997836,6.174502,6.476488,7.103331,-8.572659,7.932446,-8.672464,5.718644,-7.593994,1.707721,0.238677,0.057856,8.083393,-5.191498,-7.974808,-9.415119,-3.745221,-2.179301,-4.377521,-2.467997,-8.026923,0.804088,-7.411307,-6.092145,9.872840,8.395416,8.661477,-5.218301,-0.916570,3.957028,4.953323,6.200468,0.084974,-3.312237,4.646049,-1.520527,-3.364527,7.007286,-7.611254,3.704381,4.490440,-3.312451,-7.310953,4.544492,6.306041,7.995468,8.753979,-6.225582,-8.157857,-5.977275,-8.502665,8.029745,5.843489,2.423323,1.577491,0.010025,4.324512,8.980247,3.755193,-5.182011,5.597488,5.488344,-5.981921,-1.144436,-2.520006,9.142609,5.044774,-9.893106,4.345090,5.875072,-5.446179,0.155075,-1.605239,7.641087,-3.534023,8.765942,7.436001,-2.887654,-1.981548,5.442657,5.733515,3.493891,2.023794,3.767836,9.158846,0.058006,-2.098367,4.335104,-4.591463,-2.899907,-5.715452,-8.433476,-7.655914,-7.688356,8.778079,-6.267130,-1.053957,-6.255456,4.813627,-6.217219,-5.397087,-9.166694,-4.779670,9.512080,2.603796,9.377899,4.394941,4.615728,-7.477581,6.031020,6.067016,0.329230,2.286159,-0.662795,8.079091,-0.963135,-0.289693,-1.435527,-6.801327,5.834799,3.720727,-5.697319,5.902431,6.071129,1.602044,1.500485,-6.643295,-3.235785,-8.226595,-9.856488,9.020740,3.216366,3.447889,-2.236823,-0.021899,3.509093,1.568744,-9.727686,-9.592211,-7.558011,-3.434910,-5.281537,-5.000373,2.083459,3.880465,0.431093,-9.758460,8.038543,-5.976831,0.226675,6.647699,7.796928,-6.772155,1.212377,7.595071,-9.284248,-1.932965,-1.576943,6.204671,6.756813,2.605938,2.148029,-2.845171,3.233752,1.567073,0.067662,-8.530128,8.975747,-2.871990,1.974207,-9.643295,-2.853399,-2.352884,-0.154524,-5.129276,0.575407,-1.898843,1.533097,4.379346,3.255446,4.880219,9.816776,4.489759,7.486022,-1.941032,5.801407,-3.469149,5.905505,-1.987223,4.188240,7.768024,-5.082785,4.207278,-2.067544,2.758747,2.731749,-9.458797,-5.748483,8.948958,-9.336333,-3.209479,8.500159,3.653559,0.348053,-4.872176,-2.530189,5.244001,4.812925,-5.461795,2.146341,0.620904,-2.577555,-8.435084,-1.632101,-0.583860,3.637790,-9.923356,-4.888181,6.433871,-0.622438,-3.424903,3.695322,2.077024,-5.674985,4.908214,0.023382,5.155537,-0.276309,-6.310604,7.077028,8.594597,6.350706,2.593094,0.789032,-3.644079,-4.948122,-9.345971,-7.433335,-6.607525,8.549034,2.100660,7.530446,5.709522,-1.015364,-9.331994,-4.163699,-9.818768,2.037196,4.638433,-0.324799,-1.284319,-8.167976,-8.269548,1.546522,-1.435176,-4.846863,8.199571,-0.606868,-2.457258,2.297302,-5.272657,-2.479806,8.996704,9.882163,7.392101,-3.987836,-7.604179,-2.655890,-7.347480,-4.489698,8.433705,-0.598521,-4.031839,3.823819,7.286911,6.217106,-7.177750,-5.664393,5.410749,1.586941,4.412084,6.338648,-6.483128,-8.288680,3.032766,8.941529,-7.733113,6.524277,-4.002625,6.243151,5.355167,-9.025100,-4.469855,-3.601444,-8.075681,-5.406142,9.768287,6.607244,-5.147531,-3.505205,-6.094324,-7.437526,1.692229,2.330196,-2.017531,6.134568,6.225752,8.187323,-8.438116,-2.701722,5.048824,-7.841940,-3.297240,8.997000,-7.499692,-1.345645,6.921939,8.399017,-7.909290,6.874967,0.931685,0.654372,-0.300700,-8.471266,-7.993150,1.157646,-6.634504,-4.200070,3.991036,7.699000,-2.781371,3.992308,-6.408284,-8.798549,7.113914,7.955999,2.031172,-2.866099,5.747955,-8.354802,4.952716,-1.222045,-6.257366,-3.998461,-8.091988,0.508392,9.735078,-6.927509,9.188552,-3.598073,-9.841924,2.872435,-3.491784,8.536040,-6.832213,1.175269,3.434832,4.879218,8.598512,-3.772979,9.391246,-8.710235,-0.648863,-1.330015,6.120261,-7.085570,-4.296301,8.683271,7.354313,8.888307,3.144938,9.029553,-3.006722,-8.261026,-7.019079,3.051251,-1.589912,-2.599088,-7.348288,-6.181221,-1.989495,-0.631344,-2.765124,4.736158,-4.528052,0.994683,-0.014949,1.560827,-9.222237,-3.100750,-1.487150,-7.463933,8.415759,2.370993,-1.627544,5.589202,-7.102909,3.528369,-5.004896,4.935086,8.782988,-1.920451,4.672449,-7.138025,2.099828,6.332646,-7.858504,-7.733701,-0.591878,-0.594474,5.114233,1.552692,6.581911,-9.797834,-2.566173,-6.159248,-6.426262,7.429804,-7.464930,5.638158,-3.803176,1.130970,2.264680,-6.381985,5.715263,-1.026865,-2.450295,2.428348,-5.376183,8.123946,2.803974,3.192076,-7.913982,0.205383,-4.234689,-2.052354,5.276964,-3.173178,2.672439,5.020329,2.928548,3.730976,2.879530,4.509103,-9.763531,-1.491985,-8.088946,-4.135069,-3.394518,-7.845515,-4.485141,0.572104,-2.868818,-2.849045,-2.670350,0.107885,9.613027,-1.443681,3.715457,9.053913,-5.455384,2.575098,9.353310,-7.639014,4.491805,-2.626966,6.938064,-4.430660,6.651177,-0.422350,-5.522406,1.918539,-2.090020,-5.998348,4.785983,-7.171706,-7.824308,5.065035,9.826110,3.965256,-9.547324,-3.965053,-9.485583,1.504053,-8.887913,0.246396,3.322779,-6.293911,-6.957467,8.670729,-6.682121,-1.124763,3.460420,-0.783793,3.212075,-8.747516,-5.492093,4.071038,7.544866,-4.754559,-9.991321,-8.292476,9.589729,-0.162408,9.004677,5.684150,4.844639,-3.300854,9.581071,2.046705,9.241035,-7.982725,-2.310525,-8.945938,5.764907,6.741514,-0.089506,4.903792,6.992702,-0.449441,-5.230785,-3.397939,2.651485,-7.423591,-0.684422,6.248701,9.854327,0.233746,0.283836,6.932868,-3.288992,9.600375,-9.255408,-6.597053,-8.157299,2.008892,9.490942,-8.555616,-3.239330,8.525873,-7.047018,-7.325081,1.621954,4.503209,0.817428,6.572171,-1.982329,7.201485,4.751443,-7.059327,-0.514208,-2.984473,8.147477,-5.706745,-2.487526,-6.451072,-6.600789,-2.916012,-7.911794,-6.215735,4.549862,-8.561686,-6.409060,-0.877018,2.480188,5.095486,-1.194110,3.152403,-5.126181,-2.447863,-0.980883,7.530261,5.906020,-3.024542,-8.175764,-6.804671,-7.890039,9.581823,-4.310572,-1.392795,-7.153008,8.071332,-7.325077,-0.162062,-9.025048,2.437616,-6.856433,0.336706,-8.117497,5.580168,-6.859564,-2.730036,-7.424503,-9.283389,-7.802107,4.198881,-9.690723,2.655978,1.443269,-7.627511,-0.542220,-8.116611,-2.690257,5.036559,7.580718,1.523180,-5.832884,-3.362281,7.679743,3.167730,-9.160793,-6.003750,3.447139,3.096931,-4.531568,-0.051326,6.004001,0.541221,-3.904178,-2.262087,4.074975,0.846747,-2.435614,3.149820,-9.850030,4.806433,8.022156,-2.405619,4.273590,1.005824,5.838299,8.766416,8.627462,-7.728412,0.013648,4.907073,4.220174,-1.942279,8.177860,5.769675,-1.805335,-9.529733,9.051387,-1.170434,-5.677762,-6.964347,1.561610,-2.382039,-8.829058,-8.662208,8.252223,-3.315896,-6.822979,-7.435421,-9.808022,-1.749331,-2.649118,-6.552701,2.419514,2.151018,2.097820,2.321452,8.123676,5.146241,-0.908401,6.854621,7.625204,-5.224812,-3.146848,0.049103,8.917367,3.611813,-0.397341,5.957310,-2.046730,0.679434,-8.570889,-4.670534,-3.684172,3.907928,0.826231,8.394470,-0.195491,-2.415914,-4.529162,-9.317987,2.534597,-7.503843,5.528856,7.121638,-0.506780,3.505431,3.499390,-7.831773,5.014933,2.462947,-8.336550,-1.374030,-2.307730,2.464626,-8.174384,-5.463416,3.309957,-3.302290,-4.548047,-2.436183,-6.038818,7.248310,5.662216,-2.727761,1.122005,3.122996,-5.884068,7.215191,-7.952468,5.044538,-8.655533,4.305442,-8.079256,-1.469787,8.088759,9.030738,9.769560,-6.536151,-6.097408,0.750339,-2.843373,1.313579,-7.365541,5.207304,5.817507,-8.210146,2.227663,3.368878,3.436734,-3.154679,-1.377982,-3.504136,6.683837,-6.178429,8.450703,5.666171,-9.382857,-3.082059,0.706699,-3.686893,4.072476,-6.389615,-3.715070,-0.640452,-7.539337,-0.503773,0.205366,-9.566442,4.715619,-1.253412,-9.799678,-1.786305,3.943465,-0.797824,9.640498,8.750784,6.981326,8.370495,-5.550478,4.999397,-8.559413,8.549137,-7.683762,-0.349361,7.306698,3.313156,4.064287,-8.358611,-2.148546,7.380795,8.648276,-3.955391,5.860163,-0.827482,-4.302338,-1.108452,-9.451132,-0.641366,0.163164,-2.269261,2.627292,-1.837986,-4.541977,2.817675,2.585568,-8.866717,-4.794176,7.060634,-9.211275,2.417933,7.608192,2.392199,9.843335,0.894791,0.865980,2.235164,3.221592,1.822015,0.217338,-8.590997,1.127088,2.279073,-1.964341,6.596427,7.646954,2.722911,-1.015719,-1.992567,-2.900195,-5.576374,7.058111,-5.033147,-7.070953,-2.675347,5.459365,-5.510879,5.005606,-9.777262,1.350644,-4.907146,-8.690139,7.670594,7.789346,-2.596694,9.345129,7.776959,3.021661,5.366068,5.729054,5.719460,8.725296,0.374330,4.414369,-6.507186,-2.087998,5.077720,-8.380522,4.979428,-0.162955,8.593460,1.647796,4.420978,-6.339030,-6.689444,-9.257675,-2.225087,7.408728,0.120595,8.690707,1.716468,-2.007528,-4.151715,-8.244666,-3.705200,-8.706279,-7.153188,-8.392148,-0.672419,6.844259,-4.257936,-4.633307,2.871938,9.390202,-4.530098,-1.750874,-8.085589,7.340961,2.018424,-5.977922,-9.933284,9.598968,-6.330571,-2.680383,-4.764375,5.524878,-8.215571,-2.368141,-6.451980,-9.414551,-6.070965,-0.104134,4.909639,-3.947213,2.748733,3.615166,2.506257,5.341559,-6.881083,-5.657278,4.737090,-6.971426,8.147195,4.058551,-6.305776,-1.835604,-9.118362,1.398335,-3.783900,-6.691169,-6.927148,-6.975782,-7.827676,-0.787043,5.232089,6.908367,-9.445176,-0.149881,-2.920005,2.491271,9.543524,-6.292344,5.326373,-8.766576,9.517758,9.118322,-7.817387,9.650539,3.665765,1.305515,-8.602986,8.079994,-1.346579,-8.058620,5.871129,2.655970,0.202068,-3.701758,9.212442,2.431600,5.106133,7.229787,-8.936176,-0.804105,-2.369557,-6.873330,6.769149,3.533235,-6.141146,-0.874812,-9.113170,-6.914434,8.294189,-9.523831,6.366440,0.904059,-5.231973,-0.776827,7.726298,4.169968,0.013808,-0.706786,3.318780,-5.973891,3.404061,-5.434629,4.718713,-4.658829,4.252809,7.307454,-8.846190,-4.623473,9.860797,4.268815,5.753048,-1.275794,-7.411307,3.087956,0.447870,3.484613,5.364397,-2.503829,3.072820,4.256890,0.262743,5.990338,-7.613817,-0.209346,3.765257,-2.439480,-3.805826,8.763326,-1.971437,8.553021,-6.740859,-9.978422,-1.287136,-0.880613,2.694917,-4.340728,5.749583,-4.622712,2.055396,9.232507,-7.346569,-3.672112,0.597491,-0.459198,-7.366528,3.982899,-9.341492,-3.611489,-8.135701,-5.045193,8.845078,-7.287372,0.333094,-6.872799,6.595660,1.146023,3.733549,3.259945,9.297080,-1.554773,2.605029,-6.114616,-0.292929,-0.456155,-1.330175,-4.048305,6.490476,-5.842414,-3.022241,-9.039239,-5.876562,9.920370,3.729370,-9.281816,-0.581099,-6.214797,-5.539257,-0.420362,-0.669044,7.290954,9.867917,-4.326234,-0.706803,5.274277,1.900642,0.811073,1.971800,8.217607,9.243208,3.404181,7.489126,4.442143,4.250574,-6.339287,-0.666888,-0.647070,3.750000,-6.937635,9.019421,-7.286620,9.230472,-7.686700,0.840934,2.121294,-5.722576,-5.173592,4.949360,8.573569,2.677724,-2.502976,-6.545421,-8.718341,6.011950,7.558846,-5.037740,2.500263,2.148498,0.771446,2.814367,5.094379,1.003866,9.710714,0.280316,1.163774,-9.470949,-0.155046,-2.112011,7.044658,-1.532626,-5.990605,-2.039349,-6.995947,-5.084025,-0.652819,7.772110,6.415559,-3.081919,5.035848,9.244821,-9.615559,-5.514043,-9.271125,9.564710,-3.684812,9.814515,9.732579,-6.330440,0.322864,8.593300,-3.825563,-5.780385,1.675882,1.254442,-8.121134,-9.137407,-2.457585,-5.165960,2.122010,-0.169837,4.681847,7.598064,-6.090612,-5.001945,-4.820791,6.551303,-1.253195,-1.605884,-4.236480,-6.131751], dtype = "float32")#candidate|2635|(2535,)|const|float32
var_2636 = relay.var("var_2636", dtype = "float64", shape = (10, 63))#candidate|2636|(10, 63)|var|float64
call_2634 = relay.TupleGetItem(func_2528_call(relay.reshape(const_2635.astype('float32'), [2535,]), relay.reshape(var_2636.astype('float64'), [70, 9]), relay.reshape(const_2635.astype('float64'), [2535,]), ), 4)
call_2637 = relay.TupleGetItem(func_2533_call(relay.reshape(const_2635.astype('float32'), [2535,]), relay.reshape(var_2636.astype('float64'), [70, 9]), relay.reshape(const_2635.astype('float64'), [2535,]), ), 4)
uop_2639 = relay.cos(var_2636.astype('float32')) # shape=(10, 63)
uop_2645 = relay.cosh(call_2634.astype('float64')) # shape=(5, 14, 4)
uop_2647 = relay.cosh(call_2637.astype('float64')) # shape=(5, 14, 4)
func_1728_call = mod.get_global_var('func_1728')
func_1730_call = mutated_mod.get_global_var('func_1730')
const_2649 = relay.const([[-1,-3,9,-9,2,10,-10,-4,2,-7,5,-5,7,7,-5,8,3,9,7,-8,4,8,-3,-4,-4,7,6,8,-4,-7,-1,7,8,-9,-5,-4,7,2,8,-4,-6,-2,4,4,-7,7,5,4,-1,8,2,-7,-6,8,5,-6,2,3,-10,-4,-9,-6,6,-10,5,-2,-2,7,-8,-3,6,3,-9,-5,-5,-7,1,-9,-3,1,8,6,-2,9,-7,-2,4,-10,6,-4,-6,5,4,4,4,-7,1,-4,6,3,-8,6,-4,8,2,1,5,-5,2,8,7,8,-9,-2,-8,8,-2,1,-1,-8,-3,2,4,6,-9,2,10,-3,-6,3,10,1,8,-9,-1,3,-7,3,-2,-7,-3,-8,-3,-1,-6,3,8,1,6,-4,-9,4,-1,7,-5,-8,-7,1,-7,-1,9,-10,-7,-10,3,3,-2,-7,-3,-10,-3,7,3,10,-2,-5,-4,-5,-8,-6,-10,2,-8,-9,-5,9,7,8,6,2,-10,7,1,-6,9,-9,-3,-5,2,-9,-2,7,-4,9,-4,8,-5,-9,-8,-7,-7,10,-9,-10,-8,10,-9,7,-1,-3,-7,-10,-7,1,3,6,4,9,-10,4,8,-10,-10,-10,5,-7,-6,5,7,-1,-3,8,3,-1,-4,3,-9,-9,-9,-10,-2,-7,4,-4,-9,1,1,1,7,-7,9,5,2,-6,10,-7,1,-3,-7,7,-1,10,-8,-6,-5,7,4,1,-3,8,1,10,-9,-10,-1,2,5,-5,-5,7,-3,-5,4,2,-2,-5,-6,-8,9,1,5,1,7,3,5,3,4,-7,-3,10,-7,-10,-9,8,-4,-7,6,1,3,7,-3,8,-8,8,3,-7,-2,-5,-3,10,-4,8,-6,-5,-2,7,-5,-3,-1,4,-8,6,6,-2,4,6,-10,10,-3,4,-9,3,7,7,-8,4,10,7,-1,4,-2,5,-7,7,-2,-9,2,-7,7,-9,-4,2,-2,1,7,-9,8,-10,-9,-6,6,3,7,-6,-3,1,7,3,-4,1,2,10,-3,8,7,-4,1,-10,-5,-3,1,-8,-9,8,-7,-5,-10,-2,7,-7,-4,-1,8,1,10,-4,2,-9,-2,4,-5,-10,-6,-8,-10,9,-3,9,2,7,-6,2,2,8,-8,5,1,-8,8,10,-10,2,-9,-7,2,2,-4,5,6,1,-6,-9,4,4,3,9,-2,7,3,10,-7,-3,-7,-6,-4,8,5,-8,5,10,5,1,2,7,-3,3,9,10,6,10,-7,3,6,-1,-3,-10,10,-8,-3,-10,-1,-6,-8,-10,-4,-6,9,-1,1,9,-4,-4,4,9,-6,2,1,-2,4,-5,2,-9,1,7,3,7,7,-2,-5,6,9,1,-8,10,4,-2,9,9,-1,-3,4,-10,3,-10,2,-2,-6,10,5,-7,7,7,-1,7,3,-6,4,-8,9,-7,-5,-1,-9,4,3,3,3,8,-6,-5,7,-10,7,-7,-7,9,-3,-3,-3,6,-10,-8,1,-6,2,-10,3,1,-7,8,5,5,8,-10,-7,-9,-7,2,4,9,-9,7,8,-4,8,-10,-1,-1,-3,2,-9,-6,9,-6,-6,-8,-5,-7,-5,-1,-4,8,-6,-6,1,-8,10,-9,-2,9,2,-2,-4,-2]], dtype = "int16")#candidate|2649|(1, 624)|const|int16
call_2648 = relay.TupleGetItem(func_1728_call(relay.reshape(const_2649.astype('int16'), [624,])), 3)
call_2650 = relay.TupleGetItem(func_1730_call(relay.reshape(const_2649.astype('int16'), [624,])), 3)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_2652 = relay.TupleGetItem(func_1115_call(), 3)
call_2653 = relay.TupleGetItem(func_1116_call(), 3)
uop_2666 = relay.exp(uop_2639.astype('float32')) # shape=(10, 63)
output = relay.Tuple([call_2624,const_2635,uop_2645,call_2648,const_2649,call_2652,uop_2666,])
output2 = relay.Tuple([call_2625,const_2635,uop_2647,call_2650,const_2649,call_2653,uop_2666,])
func_2668 = relay.Function([var_2636,], output)
mod['func_2668'] = func_2668
mod = relay.transform.InferType()(mod)
var_2669 = relay.var("var_2669", dtype = "float64", shape = (10, 63))#candidate|2669|(10, 63)|var|float64
output = func_2668(var_2669)
func_2670 = relay.Function([var_2669], output)
mutated_mod['func_2670'] = func_2670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2684 = relay.var("var_2684", dtype = "float32", shape = (9, 16, 5))#candidate|2684|(9, 16, 5)|var|float32
uop_2685 = relay.acosh(var_2684.astype('float32')) # shape=(9, 16, 5)
output = uop_2685
output2 = uop_2685
func_2687 = relay.Function([var_2684,], output)
mod['func_2687'] = func_2687
mod = relay.transform.InferType()(mod)
mutated_mod['func_2687'] = func_2687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2688 = relay.var("var_2688", dtype = "float32", shape = (9, 16, 5))#candidate|2688|(9, 16, 5)|var|float32
func_2687_call = mutated_mod.get_global_var('func_2687')
call_2689 = func_2687_call(var_2688)
output = call_2689
func_2690 = relay.Function([var_2688], output)
mutated_mod['func_2690'] = func_2690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_2888 = relay.TupleGetItem(func_1197_call(), 0)
call_2889 = relay.TupleGetItem(func_1198_call(), 0)
output = call_2888
output2 = call_2889
func_2890 = relay.Function([], output)
mod['func_2890'] = func_2890
mod = relay.transform.InferType()(mod)
mutated_mod['func_2890'] = func_2890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2890_call = mutated_mod.get_global_var('func_2890')
call_2891 = func_2890_call()
output = call_2891
func_2892 = relay.Function([], output)
mutated_mod['func_2892'] = func_2892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2603_call = mod.get_global_var('func_2603')
func_2604_call = mutated_mod.get_global_var('func_2604')
call_2922 = relay.TupleGetItem(func_2603_call(), 0)
call_2923 = relay.TupleGetItem(func_2604_call(), 0)
func_1442_call = mod.get_global_var('func_1442')
func_1444_call = mutated_mod.get_global_var('func_1444')
call_2927 = relay.TupleGetItem(func_1442_call(), 1)
call_2928 = relay.TupleGetItem(func_1444_call(), 1)
func_1397_call = mod.get_global_var('func_1397')
func_1402_call = mutated_mod.get_global_var('func_1402')
const_2931 = relay.const([2,1,3,-4,-9,-9,-9,-2,-7,8,10,-5,-10,1,7,-3,1,-10,2,-1,7,5,-6,8,-8,1,10,5,1,8,-2,-1,-6,9,9,6,9,1,-2,3,7,-8,-9,9,-8,2,-7,-3,5,1,-2,-9,2,-10,-1,4,6,5,6,-9,-2,-4,-3,-1,9,-10,1,-3,1,5,6,-10,-3,10,-10,6,8,-10,-5,9,3,4,-1,6,10,-4,3,9,-10,7,-7,-1,-3,8,-1,3,-8,-7,5,1,-5,4,-10,5,-1,9,7,5,-10,-9,9,5,10,4,-7,1,-1,-1,-7,10,-3,7,10,10,-2,3,3,-9,-1,-6,-8,-2,1,10,10,-7,-9,-2,6,-1,5,10,-3,8,-1,-4,-3,-10,10,2,7,4,4,7,2,-8,3,2,8,1,6,2,2,4,9,-1,-5,-6,-2,9,-2,-10,7,-10,4,8,-5,-9,-10,8,-9,10,5,-7,1,-1,-4,-8,3,-8,7,6,6,-10,10,-8,10,-7,5,2,-9,-9,-5,4,2,6,-9,5,10,2,5,1,9,10,1,10,-8,2,3,-1,1,-6,2,8,7,3,1,9,3,5,-1,5,3,3,5,-3,-3,-9,-2,-8,6,-3,7,-6,-1,-6,6,-4,-9,7,2,2,-10,-2,-5,-3,2,-7,-10,-9,4,5,-7,8,-5,9,4,-5,-10,1,7,-8,2,8,-6,4,4,-9,6,6,2,-1,7,-5,2,4,-9,-10,8,4,-9,-4,-6,4,10,-5,5,9,3,1,-9,7,-9,-9,-7,1,-1,-8,5,9,2,-8,-2,-1,2,-10,-8,8,-6,-4,-10,-10,7,-8,-2,10,4,2,-6,3,-4,-8,2,2,3,-2,9,5,-3,-10,1,10,-7,-1,7,10,9,-6,4,-8,3,1,5,10,9,3,-10,-7,-5,-2,4,-4,10,3,-7,10,-2,-2,6,-5,1,-7,2,2,2,-10,5,-9,-7,10,3,5,-8,-4,-8,1,8,-4,2,8,9,-10,5,1,2,-5,1,2,-7,-6,-7,6,-5,-6,6,10,-3,10,-10,9,4,6,-1,5,-7,3,-7,9,-1,8,-8,-3,-9,-10,-5,2,10,5,8,-1,2,-7,5,3,-1,-3,1,2,10,8,1,-5,8,2,1,-1,7,1,5,10,-7,9,-1,-6,2,-6,-6,4,2,-1,1,-5,-1,-2,2,-4,-7,7,-3,8,-10,10,7,1,-2,-4,6,9,8,4,3,1,3,7,2,3,2,-8,-7,-10,-3,10,-4,5,-2,1,10,-7,-9,-9,4,3,-5,-4,-1,-1,-9,-4,-10,2,-9,-9,-7,2,-5,-7,2,2,4,-8,-2,-1,-10,3,-3,5,-2,-3,-3,4,-3,-4,2,2,5,3,1,-10,9,2,-10,6,-3,10,-3,3,-5,2,-4,5,4,-7,-2,-7,-10,-2,6,-2,-6,-5,5,4,-7,-9,-9,-10,-10,10,-4,2,-6,6,-10,-10,-1,3,5,7,-4,-4,-1,-7,-3,-3,-2,3,-7,9,-9,4,-6,-7,-8,6,1,4,4,2,-8,6,-10,-7,10,-6,7,-9,1,-7,-2,-9,-10,-4,-6,-4,1,-4,1,-2,9,9,10,-8,-6,7,7,1,-3,-2,1,-3,5,7,-9,6,7,-4,7,-5,9,1,2,-3,-6,3,-10,2,-4,-3,8,-10,7,9,8,-9,9,-2,1,-5,-8,-6,5,-6,-9,-1,-8,-1,7,-1,7,1,-9,7,6,-6,-10,-7,-10,-3,1,5,7,6,-7,8,-8,-10,-9,4,-8,-4,-3,-5,-1,4,-2,-3,7,2,8,-8,8,3,4,5,-10,-10,7,7,-4,1,-10,-9,-6,2,1,-10,9,-6,-3,-5,-1,7,2,7,-5,-6,-3,-5,-3,2,-7,3,-6,-9,2,-1,8,-1,1,8,6,-4,-6,5,4,-5,10,8,-9,-6,-8,-5,6,-9,-4,5,-9,-9,8,4,1,-6,9,8,9,-10,2,5,3,-5,9,7,2,2,-9,-5,-8,-5,3,5,-9,10,10,9,7,10,-7,3,4,9,-4,6,-5,8,-4,1,8,7,5,3,2,-8,-2,-6,6,10,2,-1,8,-5,2,8,-5,2,-8,2,10,-9,-10,-9,-2,8,6,1,9,-6,9,-3,-8,-4,9,8,-5,4,-2,6,5,-8,-3,6,-4,-1,8,-7,8,-3,-7,-10,6,2,8,-3,-1,-5,1,-4,-4,8,-10,6,-6,9,-10,10,5,-5,9,8,-1,4,-4,7,-5,10,9,7,9,-1,-7,6,-2,-6,10,-2,-9,-1,7,3,-2,-1,-2,-8,-6,-9,-9,-6,-5,5,6,-6,-6,-10,-4,6,9,-9,-6,2,-4,-5,-6,-8,-3,6,-10,6,9,6,-2,-3,10,10,7,-7,2,7,-5,1,-6,7,1,-10,1,6,-2,4,1,7,-7,10,-8,-9,10,1,7,3,-3,-8,1,-8,3,5,6,-1,-10,-4,7,-1,1,4,10,-6,10,-7,-10,-6,-7,-6,-6,-7,9,5,5,3,-10,6,4,-2,5,-9,-6,-9,-7,7,-3,10,-6,-8,-2,6,9,3,3,-10,-7,-5,-6,-6,-1,-8,9,-8,4,-5,8,10,5,-1,-9,1,1,-8,2,10,9,10,8,3,4,10,-1,-7,4,-7,10,10,3,6,4,-9,-6,8,-6,5,9,2,-6,8,-9,-4,2,10,-3,-1,4,1,10,1,-10,-8,10,1,-10,-7,-4,8,6,-1,4,-10,-5,-6,10,-5,-4,1,4,1,1,-3,-8,2,8,-6,9,-1,-5,-1,6,5,-8,5,8,-6,-1,-7,1,-6,-5,3,6,-10,3,-8,-9,9,9,1,-10,-8,7,2,5,9,10,-5,8,-1,-9,9,2,-5,-4,10,-5,-4,6,-10,-8,4,-1,-6,4,-9,6,1,10,1,-2,7,-1,-10,1,-1,-9,6,-4,10,-10,3,10,4,-9,5,5,-9,-7,7,-8,-8,3,-10,6,9,10,-2,5,2,10,-5,9,3,-2,-5,-1,9,7,-3,9,1,-3,10,2,1,-9,-8,8,-6,4,-3,4,-8,-3,-6,-6,-2,1,-8,5,-4,4,3,-5,-4,-10,-5,1,5,-6,-6,7,3,1,-2,9,-9,10,-6,-10,-6,-9,5,4,-4,1,5,8,-8,7,5,6,8,-5,2,7,8,-9,-6,4,-3,9,-3,-6,-8,-10,9,-7,3,3,9,-5,4,1,5,9,10,-8,7,-5,6,-7,5,-4,-6,-6,-7,-4,-3,2,-2,-9,-10,-9,-2,-1,-2,-5,-2,5,-8,-7,-2,-7,-7,2,-9,-4,-10,6,-7,-10,7,8,-4,9,4,8,-8,10,3,7,-4,3,-3,-4,7,-3,-9,4,-2,7,1,-1,-10,4,-4,7,1,-10,10,7,9,-2,9,-6,-10,-8,-8,-8,1,-2,-3,10,9,-8,-7,-6,7,7,-3,10,3,4,8,-10,4,-3,-10,-10,-5,8,5,8,-2,-9,-7,-10,-6,4,6,4,-5,-8,-2,-4,9,10,-5,-8,-5,-4,8,5,-8,-8,4,-6,-9,-5,-5,7,-2,7,-5,-8,4,3,8,5,-6,2,-5,10,-5,6,-6,1,1,-7,5,-7,5,-8,-9,-9,-6,-6,9,8,10,3,8,-4,-2,-3,4,5,-3,4,-5,-10,6,-5,-3,1,6,9,-6,1,4,6,-8,-9,3,5,-8,3,1,1,3,-7,-3,-5,3,-10,1,-7,6,-4,-1,9,3,5,1,10,-7,-3,5,-3,3,5,7,7,-10,-2,-9,2,4,8,3,-9,4,5,9,10,-9,-10,-7,-2,7,7,7,-7,-7,6,2,-4,-7,-8,5,2,2,-2,8,-7,-8,-10,6,-3,2,-4,-5,3,-7,2,-8,6,8,-3,2,1,6,2,-9,-6,-6,-9,9,7,-2,8,5,4,-1,-10,-6,-2,2,-6,-1,-4,-1,10,-5,-5,-5,-1,-6,4,1,-2,-2,-1,10,-7,-8,-10,6,-10,-8,-1,10,3,-6,-5,10,-6,-6,9,2,9,-1,-10,10,9,7,-10,2,2,2,-5,-9,-5,7,10,-3,1,9,-10,-3,6,-9,-6,-2,8,-8,-6,-5,-3,-6,4,-4,-3,8,4,4,-1,8,5,8,4,8,4,-1,-4,9,-6,2,-8,5,-2,-3,2,-2,1,-10,-5,-3,2,5,-10,-5,-9,-8,-7,-10,1,-6,3,2,8,-9,2,2,-7,-9,1,-7,-1,7,5,-1,-1,1,-4,9,5,-3,-3,9,1,-9,4,-3,1,6,-9,4,3,5,-6,-9,4,6,-6,7,6,10,-4,-6,-6,2,-9,-5,-2,2,-5,-9,-3,-6,1,-8,1,-9,-4,-1,9,-6,-10,3,-1,9,5,5,-2,-9,-4,4,-7,-2,7,-9,-7,-7,8,-8,-6,-5,5,-1,2,-2,8,-2,8,-4,-7,3,10,10,9,-6,-5,8,-2,-6,10,1,-5,-3,-6,2,-3,-7,5,10,-5,1,-7,9,9,-6,-5,-6,-9,-5,-7,-2,2,-3,9,10,-8,-4,-1,6,8,6,-8,-6,-3,-6,8,1,7,6,7,-10,9,2,8,-10,2,2,10,1,-8,6,-4,5,-2,7,-7,6,2,-7,-6,9,-5,-9,8,10,6,-6,-4,-2,-2,-8,8,8,-2,10,-2,-5,9,-3,4,5,-1,10,1,-4,3,-5,-7,-10,-8,6,-9,-8,-7,-5,4,2,-10,3,-4,-8,10,-7,6,6,8,-5,-5,5,-4,4,10,-5,8,-6,6,1,-7,5,-8,7,-4,-6,5,-10,2,9,10,6,4,2,6,-8,-4,6,5,-1,-8,-8,8,4,-2,2,8,1,10,4,7,-10,-4,-4,-2,5,-1,2,1,-9,-10,-6,-9,-10,10,-6,5,-9,-2,5,-9,-3,3,2,-3,6,4,-2,1,-3,-6,-8,-4,-10,-2,-2,7,-3,-3,6,-8,1,-6,-4,-5,-8,5,-3,-2,7,10,-5,7,9,7,-9,-10,6,1,3,-8,-8,6,3,-6,2,-2,-5,8,-2,-1,-9,-9,-7,4,6,-2,6,6,5,-2,8,-7,6,8,8,8,8,-2,-8,8,10,-10,7,-6,10,1,-1,-2,4,4,9,1,9,-4,-4,3,-2,10,3,-2,-3,2,3,-2,5,-9,8,-2,5,-4,-8,-1,-1,10,9,8,6,6,5,-6,-4,3,-5,6,2,-9,8,3,-2,-5,6,1,-3,-3,6,7,6,-1,6,3,9,2,-3,-7,9,-6,-5,-9,5,-7,5,3,5,-2,-1,-2,-8,-6,-9,-6,6,3,8,-2,-6,-7,2,-10,-2,-1,-1,3,-5,-10,3,3,7,-3,-6,9,-1,-2,-6,3,9,5,4,7,9,6,-3,-3,4,5,-8,-3,3,-5,10,-1,9,8,3,7,-3,4,-3,-4,1,-9,4,-10,-7,-7,3,7,1,-7,1,6,8,-9,5,8,-3,-4,8,5,1,6,10,-7,-7,7,10,-1,1,1,-3,1,7,6,-1,3,-5,-5,-2,-7,-7,-8,-8,-7,-1,7,9,-4,3,-4,-1,8,7,10,-6,-10,-3,-1,-9,2,-9,6,6,6,7,6,10,3,-5,-7,-2,-3,-7,-6,3,4,6,9,9,-1,-7,4,1,7,10,9,2,7,-8,-6,2,4,2,-1,-9,5,1,7,9,-2,-7,3,4,-9,-6,5,4,7,3,7,2,1,-3,7,-10,3,9,9,9,-6,-2,2,-2,-4,-8,-6,2,4,-4,9,10,-3,9,2,7,-2,1,-9,-4,-6,1,-3,-1,-10,9,-1,1,-8,4,-8,-8,-4,-4,-1,-3,1,1,10,-4,-9,10,-2,3,-3,7,-10,4,3,-6,-6,-1,6,4,6,-6,9,-2,-1,2,-2,7,-4,-7,-9,-1,-3,-4,6,4,-4,-6,10,-7,-5,-7,7,-10,-5,10,-9,10,3,2,2,3,8,-2,-7,9,5,8,10,-3,-4,-2,3,-8,6,8,-6,5,-10,2,3,7,9,-1,3,5,-8,4,-9,-10,10,4,-10,-10,5,8,-5,-7,10,3,-4,5,-7,3,-9,2,4,-5,-4,-7,-9,6,-7,6,1,-5,10,-6,6,3,-6,-7,1,-7,9,4,6,-3,3,4,-1,-8,6,-5,7,10,-3,4,-10,-8,4,10,2,-2,-3,10,5,2,-3,-6,5,4,4,1,-10,5,-1,-1,-6,-9,-1,-2,8,-8,3,1,-1,-7,4,6,-6,-7,6,1,3,3,-10,10,1,9,3,1,7,-6,-5,-7,5,-10,-2,-5,5,-8,-2,-3,8,6,-1,5,6,-3,6,-6,3,-4,-8,-9,8,8,-8,5,-10,-9,-10,3,8,1,-5,6,2,5,10,3,-3,-8,-9,-9,5,-1,4,5,9,5,10,4,-1,1,4,9,-4,-8,-1,-3,-7,-3,10,3,1,-5,-1,-4,9,4,-1,1,-2,-8,10,-9,-8,9,8,1,-2,-2,-7,-5,-4,-10,-2,10,-1,-6,2,7,-8,1,-8,7,9,3,8,2,7,-6,-4,4,7,-6,7,-10,-10,1,1,8,-9,-6,8,-8,-2,5,-1,3,1,6,3,-3,6,2,3,-7,-10,-1,1,-5,-4,-8,1,4,1,2,-5,-8,10,-8,10,9,-8,-2,10,1,8,-10,3,5,-3,1,-1,-8,-8,5,-2,2,5,-9,9,-8,1,10,-1,9,9,1,-8,-2,-5,-6,1,5,10,-10,3,-10,5,10,2,-9,9,4,9,6,2,9,10,9,9,10,7,-6,-7,-8,8,-3,-9,6,10,-2,-4,8,-6,-5,-8,6,-5,8,1,-3,5,-7,3,-2,5,-9,-4,6,-6,4,-6,-9,-5,2,-5,4,-3,6,-4,2,4,-2,-8,8,-9,-6,-5,5,4,-5,-6,-10,-1,6,-9,-7,-2,1,7,-2,6,-1,-4,8,-6,6,-1,1,-7,7,9,-8,7,9,-3,-10,10,7,-10,2,7,9,6,-9,-9,8,-2,-7,8,-3,-8,7,8,1,-10,-5,-3,-2,-6,-4,9,5,10,2,-9,-10,-10,4,-2,8,-8,-6,9,1,-3,10,-7,-5,8,-9,-2,3,-8,2,4,2,4,4,-10,-7,-8,-4,4,5,7,-9,1,-5,-1,-8,8,6,10,3,2,2,1,-8,7,6,-5,7,7,6,-10,2,6,9,-5,-7,-6,-1,-9,9,10,2,-10,-5,2,6,8,1,3,2,-4,-9,10,-7,-8,-4,4,8,-8,3,-4,3,7,6,6,10,-6,2,10,4,-8,8,6,-7,7,-6,1,3,-5,-7,-6,3,-7,-10,6,5,-4,-5,-9,7,-2,-6,-2,8,9,-8,-4,9,-8,10,-4,-6,-10,-9,3,4,8,-6,-1,8,2,5,7,-1,2,8,8,4,-7,8,8,-3,4,-7,-6,4,-10,-5,-2,3,10,2,7,10,7,-4,-10,3,8,10,4,-1,-5,-1,-5,-3,-8,-6,10,-9,-4,4,-1,9,-5,-3,-6,-3,-3,10,-9,-4,9,-1,6,6,4,3,4,-5,2,10,-2,-9,-7,4,3,4,10,10,7,3,3,7,9,-10,9,10,-5,8,-9,8,10,5,7,-5,9,-6,-5,4,4,-8,-6,-6,-9,-2,5,-2,4,-7,1,5,-10,-4,3,-9,-4,4,5,-2,4,-5,-4,6,-6,-10,4,9,-8,7,3,-10,4,8,4,6,-3,-7,-1,6,-7,-4,-2,3,10,-3,7,-1,-9,-10,8,-1,8,8,4,-7,-2,9,6,4,-3,8,-10,1,-9,-4,-1,-7,-4,10,-1,-6,10,7,-9,-1,-9,4,-9,1,-8,-2,-10,9,6,-10,6,1,3,-1,10,7,-10,-9,6,6,4,4,-9,-6,4,-3,1,-4,2,7,7,9,4,8,-9,5,-4,-7,-6,9,8,8,-6,4,-10,-1,-6,6,-10,10,-9,-5,8,6,-5,-1,9,-2,4,4,-10,10,-5,6,1,7,2,2,1,3,-5,9,-6,8,1,-3,-6,7,-7,9,10,7,7,4,-9,6,-3,-7,-9,6,-6,-1,2,-6,-2,7,2,-5,-5,-8,8,-8,2,8,2,-1,5,-3,-1,-5,5,-8,8,-5,-4,9,9,-3,-5,-2,6,-7,5,-7,-10,-3,6,9,5,-9,1,3,5,2,-6,7,8,-1,6,1,-10,-9,6,-10,-6,-1,7,6,7,-10,-10,3,2,1,3,2,-6,2,10,4,3,2,9,-9,-6,9,7,4,-9,-9,-8,-6,3,8,-9,1,8,-1,-1,-5,-9,-3,-8,10,-5,-10,2,-9,5,2,10,8,-9,8,7,-9,8,7,-10,-3,-5,-7,-8,-2,4,9,-7,5,-5,-8,-4,1,8,8,-4,-4,-4,8,9,-7,3,-8,-2,-10,4,1,4,10,9,-1,-8,6,8,-6,-3,10,8,10,-9,-8,6,-2,1,-2,1,5,-10,3,-4,-7,-1,-5,-4,-10,-5,7,8,-2,3,-9,-9,6,-7,9,6,-10,-2,-6,10,-9,-6,6,6,-3,6,-3,-8,6,8,9,-1,2,4,10,-6,10,-5,-6,-8,2,-10,-9,-6,8,-2,9,-5,-9,-3,-6,-9,-2,5,-7,-6,-7,6,9,-2,-7,3,8,-8,-9,-5,9,3,8,1,9,6,6,-1,-3,3,7,-7,3,1,6,9,2,9,10,-7,7,-6,-5,-1,9,-8,7,-3,-1,-6,-4,6,-7,-8,-7,5,-8,1,7,10,6,-6,5,5,6,7,-6,-4,10,-1,6,-2,-6,-8,5,-3,-7,-3,-8,10,-10,2,10,1,9,-8,8,1,-3,1,6,10,-2,-6,3,-6,3,-3,5,4,5,-1,1,9,1,-3,-5,-10,8,-9,2,-8,-3,-9,-2,-4,-2,-2,-7,7,2,-4,-7,-3,-10,7,-8,-6,-5,-1,7,-6,2,-2,-10,8,-10,-8,-5,-1,-5,-7,-5,-6,-10,-7,-2,-6,2,5,6,3,-4,-3,4,-3,4,2,5,-10,-4,-1,-2,3,4,4,-1,-8,-10,5,-6,-2,10,-2,3,7,-10,6,-5,4,10,1,-8,6,1,1,10,10,7,-5,3,-8,2,5,-6,9,8,5,1,4,-5,-9,-8,4,-2,-6,3,-8,-9,-2,-3,-8,3,6,7,5,-5,-6,5,8,1,2,7,8,-4,-8,-1,7,2,-9,-5,10,3,3,-9,7,5,5,1,8,2,-4,2,1,9,4,6,-6,-1,-9,9,10,5,-8,9,-6,1,5,3,1,8,8,9,-5,2,-1,-7,-9,-8,-1,-2,-7,-6,10,8,3,-5,10,-4,4,-8,-9,6,9,2,9,6,-10,-8,-2,-2,-4,8,2,-8,10,-1,-1,4,1,10,3,-7,8,3,-6,7,-1,4,8,10,-8,-6,10,-10,7,2,-6,3,8,4,-1,2,7,-7,-9,-5,-10,7,1,10,7,-10,-4,-5,-10,-6,1,7,3,-4,-3,-9,-8,-10,6,-6,3,-4,-2,-9,9,5,3,-7,-6,-1,10,1,-8,6,2,-7,-10,1,-1,4,6,-1,1,-7,10,5,8,5,-8,2,-5,-4,9,6,-8,1,10,-4,1,-8,-7,-1,1,-5,-9,9,-5,8,10,5,6,3,9,7,-9,2,-9,3,1,9,4,-3,-10,-2,-6,-10,2,-8,-3,10,1,-7,5,2,-9,-3,6,-9,-8,7,-5,-4,-4,-7,-7,-10,9,1,-9,-7,4,9,-9,-6,-9,-8,-4,3,-5,7,-9,4,-4,1,10,2,-1,3,9,-4,-6,5,5,10,-10,5,1,7,-6,9,-6,9,-1,-5,6,1,2,-4,7,10,-8,-7,6,-6,-2,-10,7,-6,-4,9,10,3,-9,2,8,3,1,-9,-6,9,10,-4,9,-5,1,-4,-5,7,-2,2,-3,10,-7,-10,3,-8,-1,10,-2,-4,1,6,-4,2,3,8,8,-1,6,-7,5,4,8,5,-10,-5,-6,9,-5,6,6,6,-3,-1,10,-9,-3,-10,-6,-1,3,-9,8,-9,-10,2,2,-4,-7,-5,4,4,7,-8,-9,1,-8,3,8,-8,-10,8,10,-6,-8,-6,2,-2,3,2,-3,-6,-3,5,-2,2,5,1,-4,2,5,-6,9,-8,8,-4,4,9,8,1,-9,1,6,1,10,-2,3,-6,4,5,-5,-2,-1,-8,-7,1,5,1,-6,9,-8,-3,-9,-5,2,-6,1,7,8,-10,-8,10,5,-3,4,6,-5,6,7,-8,1,5,-1,-3,2,2,4,-3,3,-9,10,-2,-4,10,10,-10,3,3,2,2,9,1,-8,-4,10,10,1,-6,10,8,-5,3,6,1,1,-9,7,-8,6,-6,7,10,-9,3,-4,3,7,-7,-1,-10,-2,-5,-3,-6,8,9,9,1,6,1,-3,9,-8,7,-7,-2,-8,-1,-3,-1,-10,-4,2,9,9,7,-2,-6,-7,10,9,-4,-10,-9,-4,1,3,-3,3,2,-9,6,7,4,4,-9,-7,-10,-10,9,9,7,7,6,9,-2,7,2,9,-10,-1,5,-4,6,-4,-7,6,5,-2,-3,-9,1,-4,-1,-10,-7,-2,10,5,-9,2,-2,-9,-2,-7,4,-2,1,-8,1,5,-1,-8,4,-9,-4,10,9,-2,2,6,5,-1,-5,9,8,-6,3,-2,-9,4,1,-1,5,1,-3,5,8,2,-6,-1,-7,3,-1,10,5,-5,-10,-9,10,-4,1,-10,-7,4,5,8,-2,-3,6,-7,7,-9,10,2,2,-4,-7,-3,1,8,3,-10,-6,2,-6,3,10,-10,2,10,-8,-6,-1,1,-6,-9,-8,-6,2,6,-4,1,1,-4,-3,-6,1,10,-2,-3,4,7,-1,-4,-10,2,9,10,5,2,10,-1,-3,4,-3,-4,-9,7,-6,4,1,-2,9,10,-9,4,-4,2,-7,3,-1,5,1,-1,-2,5,-1,4,10,-6,6,-8,-6,-8,-7,4,-9,10,-10,-9,6,-8,10,6,5,10,-1,-4,1,1,2,-5,-4,-4,-8,1,-4,2,10,-7,10,-8,6,-10,-3,-4,-6,-7,6,5,4,-9,-4,4,8,10,-9,-9,-10,3,-9,8,7,-4,-9,-6,-6,1,3,5,-9,9,3,2,-8,7,-1,3,-4,-1,-7,-6,-10,-6,-6,-6,5,-10,5,4,-8,-9,9,7,8,-6,2,1,-1,-7,-7,2,8,2,6,5,10,3,7,-5,-5,-3,5,9,10,-4,8,-10,-8,10,-2,-7,10,-4,-9,3,9,1,9,-9,7,-7,-7,-1,-1,10,5,-8,9,-3,8,-2,-3,1,4,-4,-1,-6,-10,-5,8,-4,5,2,-3,-4,-3,10,-1,10,8,6,5,-10,-9,-5,4,-3,-3,-5,-10,-7,-5,-10,7,10,4,-7,-8,-1,5,5,5,-6,-3,-5,10,-9,-1,9,-9,-3,7,-9,8,1,5,-1,-3,9,10,2,-7,4,8,-6,-6,-9,1,-5,7,4,-1,-4,-4,2,-8,5,-5,-5,-6,-1,4,-5,-7,5,8,8,4,6,7,-3,4,2,1,-6,10,1,-7,-8,9,-10,3,-8,2,-7,2,3,2,-9,5,-1,-1,1,-1,4,-4,-6,-4,6,-8,4,4,8,-7,8,2,-8,-2,-5,-8,2,5,9,-2,-7,7,-2,1,5,-9,-9,-2,4,-6,6,7,-5,6,4,-10,-10,-2,-8,-2,-2,-5,10,10,1,4,-1,7,-5,-2,3,-10,9,-5,9,-9,8,4,3,-3,-9,4,-10,-7,-4,-4,3,1,-7,10,-4,7,-6,2,-4,-4,4,4,-8,8,2,-10,7,-8,8,2,-10,7,-9,-3,-6,7,-6,-3,-2,8,-7,10,10,10,-7,-3,3,-10,9,-7,-4,-4,-5,-5,-9,2,1,-2,9,10,-6,10,-3,2,-8,4,5,-10,-4,-1,10,-3,-5,-4,6,-10,-7,2,3,-1,-6,10,-2,4,-7,-2,-8,8,9,8,5,8,10,-5,7,-3,10,4,6,-1,7,-10,8,10,1,3,-8,2,-2,-9,3,-3,7,-9,7,6,3,9,-7,9,9,-7,-2,2,-6,-4,-5,3,4,5,-2,-7,8,-8,-7,2,-8,2,10,5,-9,6,-6,7,3,-5,-2,1,10,-4,6,-4,5,-2,2,-10,6,6,-6,-6,-3,-3,-3,5,-4,2,-5,2,-4,6,4,8,1,-4,7,6,-10,6,-1,-9,-10,-5,-9,6,3,-1,7,7,-5,6,2,3,1,5,2,7,5,8,8,7,-5,8,-10,-1,7,-7,9,3,1,2,-4,-5,10,4,9,-9,2,8,2,6,-7,2,-5,6,5,-1,-8,1,-2,-7,-6,5,4,9,3,7,10,-7,-6,-3,2,1,10,7,-7,-3,1,-5,1,10,9,5,-7,-6,-5,6,-1,-7,-9,3,1,2,-5,-4,1,2,1,3,8,-3,-8,-2,5,2,-4,-3,2,-6,4,-5,3,-7,5,-6,-9,7,9,-6,7,-10,4,7,-1,-3,2,-2,-5,1,8,2,10,5,-7,6,1,-8,-1,3,7,-9,-5,-3,-9,-10,-6,6,-2,-5,-4,-4,9,1,6,-4,-1,-1,3,7,-2,10,-9,-4,-7,-9,-2,-7,-4,10,4,4,-8,-4,-1,-4,-7,-3,-9,5,-5,-9,7,7,6,-5,3,8,4,-2,-2,-2,-1,3,-9,5,5,3,10,5,-9,-6,8,4,3,-1,-4,-4,-5,4,7,9,3,-2,-2,-9,-7,-3,-9,9,3,-9,-2,-10,9,-2,-3,-6,3,-1,7,5,-5,7,3,5,7,-3,-6,5,-8,2,7,10,-6,-4,1,4,-8,-9,8,-9,10,3,6,3,-6,9,-1,-3,10,-9,-7,-8,-8,5,2,3,5,-10,-6,9,6,-5,-7,-5,6,-9,-8,5,3,-2,-4,-7,-10,2,-9,-10,-8,-1,5,-1,1,3,4,-5,-8,2,-3,10,5,1,-2,-7,8,-3,-6,-6,-4,-6,7,-5,-10,6,5,9,8,4,-3,-2,10,5,-10,5,-10,-4,4,-1,-8,10,-4,5,-8,-4,9,3,-1,-7,1,-7,-3,-7,2,-1,-4,-6,-9,10,10,-10,10,-10,4,-4,-1,6,-3,3,1,-8,5,3,6,3,9,-5,-9,-2,4,9,-6,-1,6,-4,8,-1,-5,8,2,-5,7,2,7,-2,-7,-8,4,1,5,-8,-5,-5,5,-2,-7,8,1,3,-3,10,-3,-4,-10,-8,8,8,-5,6,8,-9,-6,-2,-8,-4,-9,-10,5,-1,8,-9,-5,10,2,2,-3,-7,-9,-6,6,-7,-4,-9,-2,3,-10,-6,1,-7,-3,5,1,5,-2,8,-10,-5,3,-3,-2,6,-1,7,2,5,4,-1,3,-4,6,-5,6,-1,1,5,-2,-7,7,5,9,-3,1,7,-10,8,-4,10,-2,10,-5,-1,8,-10,-4,-4,-6,-6,-1,-10,6,6,-3,-10,7,2,-7,-1,-9,-1,5,-7,-4,-7,-8,5,8,-5,-8,-8,7,9,1,10,-10,-4,-6,-9,6,5,-4,9,4,3,-9,8,-10,-1,-6,2,1,4,-7,-8,-8,8,-7,-6,-2,-2,-9,-8,-9,10,7,-3,8,-8,10,-9,-2,2,3,-10,-6,-6,5,4,3,9,-3,-2,10,7,7,10,-2,-7,-2,-2,1,1,-3,8,-8,8,1,-2,10,-3,-5,6,-9,2,10,-8,-1,-7,-4,2,3,-3,10,7,5,8,-7,7,7,-5,-3,-8,-2,1,-1,7,-3,-10,8,-4,9,4,6,10,-1,10,8,10,-4,-7,2,-1,-6,9,-8,8,-4,-5,-4,-2,2,8,-2,1,7,-1,3,5,2,-5,6,-10,-6,1,-10,2,6,1,10,2,-9,8,4,1,-5,6,10,2,-9,-5,-7,-10,-8,-1,-10,-6,7,-10,5,-6,-10,4,8,-7,10,-7,-8,9,5,-2,2,-5,2,-9,1,-1,-8,2,-2,5,10,6,7,1,5,9,3,-6,3,4,-1,-4,10,6,-6,4,1,1,-7,-3,10,-8,8,-10,9,5,-8,8,-7,-2,5,9,7,-7,-6,7,-2,9,-8,3,2,7,6,-2,2,-10,-1,5,10,-4,-2,-2,-3,6,-1,-9,4,-5,-1,-7,-10,-2,-5,10,-10,-6,3,-9,-1,10,-4,5,4,2,4,10,8,6,10,-1,-8,5,6,-10,10,9,10,4,3,-1,7,4,3,9,3,6,-8,3,-4,3,4,10,7,9,-1,-10,2,-4,-1,10,4,5,6,7,2,4,3,1,-7,1,-1,-8,4,-9,6,9,5,5,-4,1,-4,6,-10,-7,-7,5,-1,10,7,-10,-9,3,5,-7,-10,-8,5,2,-1,2,-7,-8,2,-4,7,1,5,4,-2,10,9,-8,2,-10,9,4,1,-4,10,-1,2,-5,-6,6,9,-1,5,-3,-9,3,6,-4,7,-9,6,4,-4,2,7,9,5,2,-1,-9,1,10,7,-6,4,1,-7,-7,-3,10,-8,-4,1,2,-5,4,-1,3,10,2,5,5,10,5,-10,3,-4,-10,-7,6,-3,7,-7,-2,2,-3,9,2,-8,3,2,8,5,10,10,3,8,-7,-4,4,-7,4,-2,5,3,-10,6,-10,5,2,-8,9,6,-3,-9,8,-3,-9,-9,9,-4,9,-8,-2,1,-8,-10,-6,-7,9,-7,9,7,7,4,-2,-6,2,-9,6,-8,-8,-5,5,5,-5,8,2,-4,5,-6,8,-7,-7,5,-8,-10,-1,1,5,9,6,-6,7,9,7,1,1,-8,-8,-2,5,-1,6,-4,7,3,-5,4,-8,-5,10,10,8,10,8,10,-3,-2,4,4,-9,7,-7,-5,-5,7,8,9,-3,10,10,-7,-3,-3,-4,10,-3,7,-7,-2,5,-10,-7,9,-5,-3,10,-7,8,-2,5,6,-1,8,9,2,1,9,8,-8,-8,9,1,-3,-6,-1,-8,-10,4,-7,-10,-7,1,-7,-3,-4,-7,10,-9,-9,9,7,-1,-8,-5,-5,6,-5,7,5,-10,2,-10,-7,5,-3,8,-4,4,-3,7,-5,-2,-9,4,-9,-1,-2,-5,-9,7,-7,-1,-5,2,-8,-7,-1,5,6,-4,-4,9,-7,6,-5,9,7,2,6,9,-3,9,3,-4,3,-7,-4,-4,-1,6,-3,-7,-4,2,2,-6,-6,-9,-6,2,-2,10,-7,4,7,5,4,10,-2,-7,-2,7,7,10,10,5,-1,7,-1,6,-10,8,3,-3,-10,7,-3,-1,2,-6,-3,4,7,-2,4,-6,8,-10,2,6,-4,-4,-9,9,-6,6,5,-3,-3,1,-4,-2,1,-3,-7,-4,2,-8,-3,-6,2,-10,4,-1,10,-4,9,5,10,-2,7,-8,4,-1,2,7,9,-3,1,-10,6,-5,2,4,8,-10,5,-3,3,5,-1,-1,10,-5,-6,1,-1,-6,6,6,9,8,-6,-3,5,6,2,8,1,-2,8,-10,10,3,-9,10,7,-2,-9,3,4,-1,9,8,-3,-1,-4,2,-9,9,-6,-4,7,7,2,3,9,2,-3,10,-1,-9,-1,8,-7,-6,8,-5,9,-2,-2,-6,-8,9,-9,1,9,6,2,10,2,2,9,4,9,-6,10,-10,-10,-4,-1,10,5,-1,-1,8,-8,-1,8,-4,3,6,4,4,8,-5,-2,-8,-1,6,2,5,-4,7,-4,-7,-1,-10,10,8,-3,6,10,-4,4,2,4,4,-4,10,-3,4,-1,-10,-8,10,3,-7,-9,-3,9,-9,-5,-10,5,8,8,-4,4,-9,-2,4,-4,-8,1,8,-9,4,-9,2,8,-3,-9,3,-9,-8,3,8,-6,-4,8,-9,-10,-10,1,4,1,4,-2,-5,-3,-4,8,6,6,1,2,2,2,3,-5,3,-4,-8,-7,-9,-8,5,-5,-10,-10,7,-10,4,-5,7,3,8,8,6,-10,6,-8,-6,1,-3,6,5,-3,7,-7,9,-6,-9,-2,-2,10,2,8,-10,-3,-1,5,4,4,-5,8,1,1,-2,5,-7,3,-10,5,-1,-2,-7,8,-4,-5,-3,5,10,-6,-10,8,3,-5,10,2,8,4,3,-9,4,8,-10,3,-10,2,-9,5,10,4,10,3,-4,-7,1,-5,-1,-2,7,-1,-6,5,3,-7,8,7,1,-7,-9,1,-10,2,-1,-2,-2,3,6,-3,-8,2,-2,-7,10,-8,-10,-8,-7,-2,7,-5,7,-8,10,1,-2,5,3,6,7,2,-3,8,1,8,-5,8,3,-4,7,-2,-2,2,-10,-9,-2,-2,1,7,-9,-1,-8,-6,-5,5,-10,3,-3,-5,3,9,7,4,-3,-10,-4,9,-10,-4,-9,-10,-5,9,8,-2,-10,-8,-4,4,3,-4,-5,-8,9,-1,-2,-5,4,4,10,4,-9,-6,7,2,4,-7,-8,3,9,-6,-4,6,7,-9,8,-6,6,-9,3,-10,-7,5,2,-5,-1,1,-1,1,-9,-4,4,5,5,-2,5,-5,-1,-2,-8,5,7,3,5,6,6,2,-2,-9,-10,7,-5,2,5,-8,-8,-2,-8,-2,1,-8,10,9,8,-2,1,6,2,-9,-1,-9,1,-5,-8,-2,7,-10,-2,2,6,-8,3,-2,-1,3,-9,10,-6,9,-2,-5,-2,7,-3,-4,2,8,6,-10,3,7,-6,2,-10,7,5,-10,-6,-1,-5,-10,8,2,-5,9,6,10,4,3,4,-7,-2,5,5,9,-4,-7,-4,-4,-1,-9,-2,-8,-2,10,1,-6,-4,10,-1,-9,7,-7,7,2,-6,-5,-9,-5,-4,-8,2,-5,-4,-8,-6,-10,-7,6,8,-1,10,-5,9,-1,-4,-5,2,5,-8,3,-1,1,-9,1,-6,4,-8,-4,-8,9,3,-8,-7,10,-7,-1,5,-6,8,2,8,9,-2,3,9,1,8,-6,-4,10,1,-10,5,9,-3,-9,-4,7,3,-7,3,-4,-1,8,9,9,-3,-4,-6,2,-5,-8,-9,-8,-6,5,-5,4,1,3,10,-10,2,-1,-1,6,4,-5,-3,-7,8,-10,-3,10,6,6,5,1,3,6,5,-8,-7,3,-7,-9,-2,-9,5,1,-3,9,4,-5,-2,-9,-2,7,1,1,10,-3,1,9,1,7,-6,2,-6,7,8,4,-2,-1,-1,-2,-2,-3,-9,9,2,-4,4,-8,-10,10,-8,10,-5,6,-3,5,5,8,-10,-2,7,-9,-1,-3,2,1,-8,-4,3,-7,8,2,9,5,-1,10,-2,-8,7,-6,-5,-9,-7,5,2,-6,5,-2,-10,-4,4,8,2,-1,-9,8,-3,8,1,-1,7,-1,-7,-7,-10,7,-2,3,1,6,2,-6,2,-6,7,-6,-9,7,4,5,2,9,9,9,-8,9,-9,-7,-9,6,4,-10,-2,9,8,9,5,5,2,3,-1,1,9,2,3,-2,9,10,-9,-7,-10,-9,4,1,8,-7,-6,8,8,-3,-8,-8,9,10,6,8,-2,2,-1,-4,-5,-9,-9,8,8,10,8,-5,-5,-6,-10,6,-1,8,1,4,-2,9,-1,1,-10,-5,9,5,3,-5,-6,-5,-1,-1,-4,8,-8,-7,6,8,1,6,3,5,3,-1,3,5,8,6,-1,-5,-3,-7,4,-7,-9,4,2,-2,-1,3,-6,8,4,-5,8,1,-4,-10,-6,-3,10,8,7,7,2,2,8,-1,5,7,-6,7,-1,-10,4,1,-3,5,9,-9,-4,9,4,6,6,5,6,-3,8,1,9,5,-2,-3,6,2,-3,-4,2,6,-7,-9,-2,-9,8,-4,3,10,-2,6,4,-8,2,-6,1,-10,5,-1,-4,9,2,2,3,-3,-6,4,9,-9,-5,-3,6,-7,5,-10,-10,-4,2,-10,-7,-3,1,2,-1,-3,5,5,1], dtype = "int8")#candidate|2931|(6864,)|const|int8
var_2932 = relay.var("var_2932", dtype = "float64", shape = (52,))#candidate|2932|(52,)|var|float64
call_2930 = relay.TupleGetItem(func_1397_call(relay.reshape(const_2931.astype('int8'), [528, 13]), relay.reshape(var_2932.astype('float64'), [52,]), relay.reshape(call_2927.astype('float32'), [2535,]), relay.reshape(call_2927.astype('float32'), [2535,]), ), 3)
call_2933 = relay.TupleGetItem(func_1402_call(relay.reshape(const_2931.astype('int8'), [528, 13]), relay.reshape(var_2932.astype('float64'), [52,]), relay.reshape(call_2927.astype('float32'), [2535,]), relay.reshape(call_2927.astype('float32'), [2535,]), ), 3)
uop_2937 = relay.sin(call_2927.astype('float64')) # shape=(13, 13, 15)
uop_2939 = relay.sin(call_2928.astype('float64')) # shape=(13, 13, 15)
output = relay.Tuple([call_2922,call_2930,const_2931,var_2932,uop_2937,])
output2 = relay.Tuple([call_2923,call_2933,const_2931,var_2932,uop_2939,])
func_2940 = relay.Function([var_2932,], output)
mod['func_2940'] = func_2940
mod = relay.transform.InferType()(mod)
var_2941 = relay.var("var_2941", dtype = "float64", shape = (52,))#candidate|2941|(52,)|var|float64
output = func_2940(var_2941)
func_2942 = relay.Function([var_2941], output)
mutated_mod['func_2942'] = func_2942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_2988 = func_2890_call()
call_2989 = func_2890_call()
output = call_2988
output2 = call_2989
func_2993 = relay.Function([], output)
mod['func_2993'] = func_2993
mod = relay.transform.InferType()(mod)
mutated_mod['func_2993'] = func_2993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2993_call = mutated_mod.get_global_var('func_2993')
call_2994 = func_2993_call()
output = call_2994
func_2995 = relay.Function([], output)
mutated_mod['func_2995'] = func_2995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_3006 = relay.TupleGetItem(func_864_call(), 0)
call_3007 = relay.TupleGetItem(func_865_call(), 0)
func_1994_call = mod.get_global_var('func_1994')
func_1996_call = mutated_mod.get_global_var('func_1996')
var_3011 = relay.var("var_3011", dtype = "int32", shape = (8448,))#candidate|3011|(8448,)|var|int32
call_3010 = relay.TupleGetItem(func_1994_call(relay.reshape(var_3011.astype('int32'), [528, 16])), 0)
call_3012 = relay.TupleGetItem(func_1996_call(relay.reshape(var_3011.astype('int32'), [528, 16])), 0)
bop_3014 = relay.power(var_3011.astype('float64'), call_3006.astype('float64')) # shape=(7, 6, 8448)
bop_3017 = relay.power(var_3011.astype('float64'), call_3007.astype('float64')) # shape=(7, 6, 8448)
func_1859_call = mod.get_global_var('func_1859')
func_1861_call = mutated_mod.get_global_var('func_1861')
call_3019 = relay.TupleGetItem(func_1859_call(), 0)
call_3020 = relay.TupleGetItem(func_1861_call(), 0)
const_3023 = relay.const([-8,1,2,10,2,6,8,-7,-2,8,-6,9,-6,-8,4,8,6,7,-3,-10,9,-8,-1,-9,8,1,4,7,-1,-10,-2,6,10,-8,2,-9,5,9,-2,1,8,3,-1,2,5,6,-2,7,-8,4,2,-1,3,-3,8,7,5,10,10,10,3,3,10,7,3,-6,-7,2,-6,-4,-10,-4,1,-2,3,-4,-10,2,-5,8,10,-4,2,6,-2,4,-1,8,-2,3,-2,4,6,-2,6,-10,3,-3,2,2,-10,-6,7,-5,4,-6,6,8,7,4,9,8,-10,6,-10,5,-9,1,5,-4,-5,-7,2,5,-5,-3,-7,-6,-3,8,-3,1,4,-7,-9,7,-3,7,10,-5,4,-1,8,-7,-10,-2,8,4,-9,-10,-3,-4,-3,-10,-4,-8,-2,9,-6,10,-3,-2,10,-2,6,9,1,6,4,-7,-2,9,5,3,-6,1,7,-10,-9,6,-8,-7,-8,-3,8,3,8,-3,9,6,10,5,-1,4,9,7,5,-6,-4,5,2,3,9,-3,-3,6,-8,-1,-5,-3,5,4,4,2,1,-2,-5,-5,1,5,-8,-7,9,7,1,10,10,7,-6,-3,-8,1,10,-10,-3,6,5,8,-9,9,5,-7,5,-10,-5,-7,-8,10,2,10,4,-7,-9,-4,9,10,7,2,3,3,3,-3,-8,-8,3,-8,-5,-10,9,1,-9,4,8,8,-8,-1,10,-3,-9,1,-10,-2,3,9,8,-9,-1,-3,-1,-2,1,-9,1,9,4,5,10,-8,9,-2,7,4,-6,-9,-7,3,6,8,5,-9,-1,2,-2,-2,-8,-10,8,3,2,-1,2,-6,8,-10,-5,-2,5,-6,4,10,6,5,5,-10,-9,-5,-6,3,-4,9,-4,-6,6,-6,3,10,-7,5,-4,-8,-5,6,-3,-7,2,8,8,-4,7,-5,-7,2,-4,7,-2,-1,-7,10,7,-9,-5,6,-1,10,-10,2,1,-3,-9,-3,3,-7,2,-2,-7,10,6,-7,-8,-8,-1,-8,-4,-9,9,-3,-5,-5,-8,-8,8,6,7,4,10,6,2,-6,-4,9,-7,8,-3,-1,-1,-7,-10,-4,6,-2,10,10,1,10,10,-1,-2,-9,5,9,10,7,-8,-6,-7,-3,-8,10,-8,7,10,7,10,-10,-7,-10,-2,8,6,-4,-4,-1,-9,-4,-1,-7,10,6,9,2,4,2,9,-8,3,9,1,10,2,7,4,6,-7,1,-10,-9,-6,-10,10,-1,2,-8,1,2,-1,-9,-2,-8,-9,4,-3,2,3,-6,2,6,7,-6,4,-4,-7,-2,7,-10,1,6,7,5,3,-5,-9,10,4,6,4,-5,-4,1,-6,-10,7,3,5,5,9,3,-4,-4,7,-8,-10,3,7,7,-7,10,-4,-9,1,5,6,6,8,-8,-9,-9,9,-5,8,-10,1,-10,-5,2,-2,7,-6,10,2,3,6,2,-4,2,3,8,5,8,6,7,-8,8,7,10,-7,1,-4,9,-4,-1,-4,-10,8,9,8,6,8,4,3,5,8,5,2,10,-4,2,2,7,8,8,1,5,-7,7,4,1,-7,-4,10,-5,-6,4,-9,-10,8,4,-9,1,10,7,9,6,2,-6,-1,-7,-8,-5,-4,3,-2,-1,7,-8,-9,1,-10,-3,4,-5,10,5,2,4,-6,8,-5,-8,3,1,10,-10,-8,3,2,-10,1,-2,-5,1,-5,-9,7,3,5,4,8,8,-6,-10,10,-5,-7,-3,3,-4,-2,9,2,1,-5,-5,-8,-9,-5,-5,2,3,6,10,2,8,-8,-5,-10,-2,-1,10,-1,6,-9,-8,-2,8,10,7,-5,6,-3,-6,9,-8,6,-2,6,-2,10,7,4,7,-5,-8,3,-6,6,9,-1,-8,6,5,-7,-8,10,8,-1,7,-1,-8,8,-1,5,2,9,-2,-9,7,-5,-4,10,-8,8,9,-10,-4,-9,7,-6,-10,8,-10,-1,2,9,3,-7,-10,-6,-6,4,-9,6,-6,4,9,-8,-6,3,-6,-5,4,10,8,-3,-6,-4,-1,-10,5,3,-5,-1,1,-10,-8,6,10,-6,-1,3,-7,2,-9,4,-8,8,-9,4,-6,-5,-1,6,6,-10,-10,-4,-9,-4,-1,-4,7,-10,-2,-4,-1,3,-1,-3,-1,-4,5,-10,6,-3,-4,6,1,-8,4,-1,5,7,5,3,-3,8,6,-10,-4,3,-2,-9,-7,-5,-1,6,-4,-1,2,-4,-2,-1,-2,3,8,4,-7,4,-10,-4,7,6,-2,-10,-3,-9,9,-3,3,-9,-4,-10,5,-4,2,5,-8,1,-10,-4,7,7,-3,9,8,4,10,-2,7,10,-4,1,10,1,4,2,-9,9,9,8,7,-9,8,-10,5,-6,-6,10,8,-5,-7,6,-8,-7,-3,6,7,-7,-5,1,8,1,-4,-10,-2,-5,-4,4,5,10,-6,-8,-2,-9,-1,-10,-10,2,2,6,-1,-3,-3,-8,10,-6,6,1,-8,-8,-5,-9,7,-6,-5,3,5,-2,4,-5,-10,1,7,-6,4,-4,-2,3,4,10,-4,-7,10,-7,9,-7,5,7,-9,6,8,-4,3,-10,7,-10,3,-9,-7,7,8,-7,3,-4,-8,8,10,-6,9,2,6,-6,9,3,-10,4,-6,1,-6,4,3,1,5,-6,3,-10,-10,-9,-2,3,-3,-9,9,-8,5,8,-3,-3,8,3,-9,-2,1,-6,-6,-2,7,7,1,10,9,-8,-6,-1,2,8,8,8,1,-10,-6,-5,-6,-8,2,-5,-5,3,3,8,9,7,-5,-9,-1,-5,-3,-2,7,-8,-8,-7,-5,6,4,5,9,-3,7,3,10,6,10,-4,6,3,-4,-8,-3,-1,10,2,-6,-6,-6,-10,6,-2,2,1,-8,3,-7,5,7,6,-9,-7,-3,7,-9,-6,5,-1,-3,-6,-7,5,1,-3,-5,6,-7,-9,7,8,5,2,1,8,6,-7,4,-6,-3,5,-7,-1,5,3,-8,-9,4,-4,3,-10,-3,-1,-8,-1,-5,8,7,-6,-9,-6,9,-1,-5,7,4,-8,-4,-5,-5,5,3,1,3,4,-6,1,6,-8,5,-2,3,-8,-8,-1,-9,2,-10,-4,10,-6,-10,2,9,10,5,4,1,-9,7,1,-6,8,8,2,-1,6,7,9,8,-1,1,-5,1,1,-3,4,5,-9,5,5,-2,-9,-9,-7,10,-1,5,-3,-9,-4,7,2,-1,7,2,4,-2,-3,3,-7,-7,-2,-6,1,-7,6,5,6,-8,-4,6,2,-2,7,2,6,6,-4,-3,8,9,6,1,-2,6,7,3,-9,6,-10,-4,10,4,-2,8,-9,-3,3,-8,3,10,-7,3,9,2,8,4,5,1,-5,7,-9,8,6,-8,9,3,2,1,-3,-1,-8,10,-2,-1,3,-2,2,-4,-5,9,10,-1,-6,-6,-5,4,1,-9,5,2,9,10,-4,-10,-9,-5,1,-3,-10,7,-3,1,5,7,-9,9,2,1,-4,-7,2,-1,-9,9,3,-7,9,10,-7,5,7,5,-3,-5,7,-9,-3,-1,5,4,-10,-6,-8,-4,-5,-10,-2,2,-9,-2,1,7,-2,-10,10,6,-4,8,9,6,2,-8,9,10,9,6,3,-5,2,1,9,2,8,-5,4,2,-5,10,2,-2,2,-4,1,-8,-7,3,-6,9,-6,2,-6,-6,9,-5,-6,4,6,2,7,10,-1,-10,-9,3,-3,-3,-1,2,-5,-1,-7,-8,4,10,-2,-7,-3,-1,6,-6,-7,10,8,-10,-10,-3,-7,-9,2,2,8,-8,6,1,-3,3,-8,10,6,10,-10,-10,-7,-7,8,5,-1,-7,4,9,9,-7,-6,4,6,5,-8,-4,5,3,3,1,3,-10,-8,-2,2,3,-6,-7,2,10,-10,6,-6,-1,9,10,8,8,-9,-2,-10,9,1,-10,-10,2,5,-5,6,-9,-6,4,-10,-1,-3,-2,-7,2,-6,8,5,4,-7,-4,-3,-6,3,-2,-4,-4,5,1,6,7,-8,-6,6,-6,6,-3,-4,-7,-1,-1,-3,2,-2,9,8,10,4,2,5,-2,9,-2,-6,-9,-2,-4,7,5,10,-7,-2,8,-4,-6,10,2,3,4,6,8,6,-5,9,2,3,-10,8,-1,-8,-1,-2,2,8,-9,-9,-4,-1,6,8,9,-7,6,-5,-8,-3,5,-4,5,1,8,-2,-5,-3,3,10,3,-1,5,-8,-10,1,-8,-2,-7,-8,-5,9,-1,2,4,-8,-1,9,-4,8,10,1,6,-5,-10,-10,-1,-6,3,-8,10,-7,-4,7,-5,-4,-6,-7,10,-5,-2,5,8,-10,7,-10,-6,10,-3,-8,1,5,6,-10,-3,5,2,1,-1,-2,8,7,-7,4,1,-10,1,-10,7,-3,6,6,-8,-9,9,-7,-1,3,-1,-10,8,-7,-5,-5,-8,3,-8,2,-9,5,2,6,-8,3,-5,-4,-5,1,-9,-4,-7,-10,5,1,5,-1,9,2,6,7,-2,-2,3,9,-2,-10,10,-5,6,-9,3,-7,7,10,-7,-5,-1,6,-2,7,-7,-4,10,10,-5,-6,10,3,-3,5,1,6,6,-7,6,2,-2,8,8,-8,10,-3,7,2,-8,-9,4,2,-9,8,-4,7,-9,-8,5,-1,-7,-5,-8,-4,1,-7,1,7,-8,-3,7,8,7,2,1,-8,8,3,-2,4,2,-10,-1,-1,10,-3,6,-3,-9,-6,10,9,9,6,10,-5,-1,3,10,5,8,8,-1,-8,10,1,9,-10,3,-8,-7,-5,-7,-2,-4,10,-5,7,-1,-6,-10,3,-6,-6,10,-2,-8,-3,7,6,2,-3,-4,3,-5,6,-6,5,-1,-1,-6,6,-1,-2,6,-8,-2,5,1,-1,9,-4,-6,8,-9,-8,3,-10,7,-3,-8,3,-1,-5,-8,-3,-4,3,3,9,10,6,3,10,-7,-5,1,6,6,-8,-10,1,-7,3,-4,3,-10,-9,-6,5,1,2,-7,6,2,8,-7,7,1,-4,-2,3,8,7,3,9,3,6,10,3,-7,5,8,-8,1,8,-10,7,2,-2,-9,9,-2,2,-8,-5,6,1,-1,-6,2,10,-4,-10,3,1,4,-4,4,8,10,9,3,-1,8,9,-1,1,-5,2,-4,-10,5,-5,-9,-1,4,5,9,-2,-3,-6,-9,10,2,4,4,-6,-7,8,-2,4,-8,-5,-9,3,-9,6,7,-4,7,7,-1,2,2,3,-10,3,-10,-4,-7,-10,-7,-6,4,5,9,5,-3,-7,9,-10,-9,-9,-1,-5,-2,-7,-3,5,-7,9,2,-6,-4,-9,-3,4,-4,-10,-7,-5,9,-8,-9,10,-5,1,-6,2,10,-3,-4,4,1,3,8,-7,-4,-1,-9,-10,-1,-2,8,7,7,2,8,-9,9,-6,-4,3,-9,-2,7,-3,-2,5,10,1,-3,-9,8,-3,2,1,-2,3,-1,10,-8,6,1,-4,-5,-8,-6,3,-7,-9,6,6,-6,-1,-5,-3,-7,2,2,9,-1,-8,-6,-10,-7,-5,-3,-5,9,6,-9,8,9,4,-6,-9,-9,-3,-9,-9,4,-3,4,-5,-4,-8,1,-10,6,2,-8,8,-1,4,3,-8,9,5,-9,-6,-3,-7,10,3,-3,7,-7,3,-5,-7,2,9,-7,7,-7,1,9,4,-5,-5,-5,4,-7,-9,-3,3,2,-9,8,-8,-8,7,-5,7,10,-10,6,7,8,8,-4,9,4,-6,-5,-9,3,10,-9,-8,9,-5,2,8,8,5,8,-8,3,7,10,1,-4,-1,-8,-1,9,-3,8,4,9,9,-1,-4,-3,-2,-6,8,6,2,-8,-2,-9,-9,6,2,-1,5,-8,-10,-9,-5,7,-7,-3,-4,2,-10,-9,-7,-2,-2,-1,-9,-3,1,-1,-9,2,-9,2,7,-9,4,-6,7,-1,-3,4,-3,-10,3,3,-10,-5,-1,4,3,-3,-3,10,-8,-9,-3,-4,-3,1,8,5,10,-6,-9,6,-4,-10,9,9,1,10,-2,-10,-9,-9,4,4,6,-2,-10,8,1,-1,8,-8,7,-2,-2,-3,3,9,-8,3,3,-2,6,-7,9,-7,-9,5,3,-4,-2,-8,-1,-6,10,-6,5,-7,7,7,-3,3,9,7,-9,-9,-10,-8,3,-3,-1,9,-6,-6,10,10,-8,-5,-3,1,5,-3,-6,-7,4,4,-6,3,9,6,-5,-3,9,1,10,2,-9,-10,5,-6,7,6,2,7,1,1,2,-8,-3,3,-1,9,-1,7,-8,6,-2,1,4,-7,3,-10,1,-8,-6,-8,-7,9,9,7,-8,5,7,-5,-7,-5,-10,7,-10,-8,5,5,4,-3,1,-10,-5,10,4,1,8,2,-9,-9,-4,-9,-2,3,10,1,-8,-10,-8,2,-8,3,-1,3,-2,2,1,4,-6,1,5,-9,3,-5,-2,4,10,-5,10,2,10,9,3,-5,4,-7,8,-1,7,-3,-3,-8,-4,-5,-9,-8,10,10,-5,-4,-5,-8,-9,5,7,5,-6,-2,-4,-7,-5,-3,4,-10,-2,-8,7,9,4,-6,-5,10,3,-4,-10,-1,-9,10,10,4,4,9,7,1,-4,-2,-7,-2,4,-9,-10,9,-7,-3,-9,-8,-9,6,5,-7,4,9,2,2,-9,4,1,9,4,-4,-2,-8,1,7,3,6,5,-7,-7,7,-9,-7,4,-10,-1,3,-9,4,-7,6,7,7,7,3,4,4,-2,-6,1,7,2,-3,3,1,-10,-9,-10,3,2,-3,-7,-10,2,-7,1,2,6,-4,-5,-8,-3,4,-3,1,4,-2,5,-1,-9,7,-4,3,8,-10,2,10,5,9,2,5,-5,8,-10,-4,-1,7,2,7,9,3,-5,9,8,10,-7,7,-4,10,5,-1,7,-2,-1,-6,-6,4,-1,-3,-10,-8,-10,10,9,-7,6,-9,-9,-9,-1,1,-6,-1,7,-6,7,-5,-9,2,-7,-10,-9,5,3,-8,-10,4,-3,3,-10,-8,-2,-5,-10,-7,-8,-9,10,-6,-7,-7,-3,-5,7,8,-4,6,1,-7,8,7,2,4,-9,5,5,7,7,4,-7,-3,1,8,-1,-5,10,-7,-8,-6,-9,7,7,2,3,9,-10,-4,2,-5,9,-3,9,-5,9,8,-6,-4,8,-8,1,4,10,4,-9,6,-8,9,7,8,7,5,-2,6,-4,2,2,9,-3,-5,-4,2,-9,9,7,3,-3,7,9,7,8,9,7,-3,4,5,-10,-10,-2,-5,8,4,8,9,5,-1,5,-4,-9,-3,4,1,-6,2,-3,6,-9,-5,2,-4,-1,-1,-6,-9,3,-8,-1,-2,3,5,-3,7,3,-10,-7,-3,1,5,10,-2,9,1,-10,-8,-9,7,8,-5,-8,-4,-9,-3,3,-8,3,6,-10,3,10,-3,8,2,-7,-5,-1,-10,-7,3,-1,3,-10,10,-7,-2,-6,-7,-8,-10,-5,-10,5,-7,2,-4,-10,1,-7,-4,3,3,-2,6,1,-6,3,3,5,2,-9,-2,-5,-10,3,-9,9,-8,4,4,-9,10,-6,10,2,-1,-10,1,-8,-10,-7,7,-2,-9,-10,2,5,1,-6,5,5,-10,-10,2,3,9,10,-8,-5,-9,-9,-4,4,6,-6,-7,-8,6,9,8,-10,4,4,-4,-8,-4,5,-1,-1,8,-1,-8,3,1,-2,6,5,-1,1,-10,10,5,-9,-6,-7,-10,9,-9,2,4,8,-5,7,4,3,6,9,1,-10,-10,9,-3,-10,1,-2,-7,5,3,-9,-2,4,-6,-9,-1,-3,-6,-5,-5,3,8,-2,-6,-8,-1,-8,9,-2,5,5,-2,8,-3,7,7,-5,-5,-9,-4,-2,6,-9,-3,4,-4,-3,7,4,-4,9,1,6,1,-9,-4,1,4,-5,-2,-7,7,-3,-3,6,8,-9,-9,4,-10,-4,-7,-4,-4,-8,-9,-1,4,3,-10,5,6,4,-6,-3,5,-3,-2,-3,-6,-1,5,3,7,-9,7,-5,-5,-6,9,-9,1,-7,9,-9,3,1,-3,9,4,-7,1,4,10,9,3,6,-10,-5,4,-3,6,-9,2,-1,6,-5,-1,-5,9,2,1,-6,-2,-9,6,5,8,3,2,6,1,6,-10,-2,-4,3,-2,-4,9,-3,7,-9,2,7,-3,5,-4,-7,-2,5,5,1,6,-6,-1,2,-6,5,2,-3,4,-10,-9,-3,9,-8,6,6,7,1,-8,7,5,-4,-3,1,-5,6,-9,6,8,2,3,8,-9,-7,-3,3,-6,2,-3,1,-3,3,-5,-9,3,7,-1,-8,-5,9,3,5,-8,1,9,9,-8,-3,1,7,5,-4,2,-9,10,6,-10,3,7,9,-5,-9,3,9,6,-10,10,7,5,-9,-6,6,-6,-3,-2,-1,5,1,2,1,-6,6,2,-9,3,-10,3,-2,5,-3,2,-6,-2,4,-9,-9,-4,2,-2,3,-9,2,-10,-2,-4,2,9,-2,6,-4,-8,9,-1,10,-2,-9,-7,-4,7,-2,2,-6,3,-1,-3,4,-1,-5,-4,6,-5,8,9,-9,-9,-9,4,-2,-5,-5,-8,-10,-2,1,-8,-3,-5,-7,2,-1,6,1,-5,-6,-4,9,-8,2,1,-7,4,4,-8,4,-6,10,-4,9,-2,2,-5,-9,-7,6,-6,-9,-10,2,3,-7,-10,10,-8,3,-5,7,5,7,-8,-2,-4,7,-5,2,-4,6,8,5,-6,-7,5,-2,-1,-2,10,5,4,-7,-10,6,2,5,-9,-7,1,5,9,6,-6,8,2,-1,-5,7,9,-9,-7,-10,-5,1,-2,-3,4,2,-10,6,-4,-8,5,-6,9,7,8,-2,6,-2,-10,1,6,5,-4,8,8,-8,-1,9,-10,8,6,4,3,-10,10,-8,3,-4,4,6,8,-7,8,3,-4,7,-10,10,4,-6,-1,5,-8,2,1,-4,-2,1,6,-8,-4,-8,4,8,10,-4,-8,5,-10,-6,3,-9,10,4,4,6,-7,-2,4,10,-4,3,7,-6,4,-5,3,-3,6,10,-1,1,1,-10,-3,-9,7,1,-1,-1,10,-4,-2,7,-6,9,3,5,3,-1,8,-7,3,10,-4,10,7,-8,-3,-6,-10,-6,6,7,7,-8,-7,1,-3,-3,-10,-1,-7,5,-2,8,-7,-6,-6,-2,2,-9,5,8,-10,4,-2,-8,-4,8,3,9,-10,1,-10,6,-3,1,-4,-7,-8,4,-8,10,5,-7,3,8,-10,7,4,-2,-10,-8,-9,-1,-7,-8,9,-4,-7,-5,-6,-4,-4,8,8,-4,4,5,8,-2,-2,10,10,6,-7,-8,3,-1,4,-4,3,3,1,-1,-5,-4,5,8,9,3,-6,9,2,8,-1,-10,-2,2,-10,-4,7,-2,1,-8,-4,6,-1,-1,7,10,-4,2,3,1,4,8,3,-6,10,5,-6,-5,-8,-1,-8,10,-3,-7,-6,-10,4,-4,8,1,3,-1,9,-5,4,1,-10,3,-5,10,1,-4,1,-9,-5,8,-8,-6,-7,-5,10,3,9,1,-8,-5,-4,3,-6,-4,-5,-10,3,10,-8,3,1,8,-3,3,-2,2,7,3,2,-6,-2,-9,-4,-7,4,-2,5,4,-9,-1,7,-8,3,-10,9,-9,2,-5,9,-9,-1,9,-1,4,-1,-10,10,-3,-9,5,6,-8,6,-7,7,-9,6,-2,2,-6,3,-1,4,-8,-4,-1,-9,-3,4,1,5,-8,9,-10,8,-3,-2,5,-8,-8,-6,-5,8,3,7,1,-3,2,1,-2,-8,3,1,5,-3,-4,-10,5,6,-9,-1,4,1,5,-8,4,-5,-5,5,6,2,6,-8,1,-10,-6,1,2,-5,-6,5,8,-5,6,4,-9,-1,-8,7,-4,8,-7,-9,-2,7,7,6,-1,10,-2,-1,-1,-7,3,8,2,-7,-6,-7,1,4,5,1,2,7,-6,-6,-3,5,8,5,-9,8,-9,4,8,-5,-10,1,10,8,6,-2,-9,-7,10,7,-4,-7,-10,2,10,1,6,4,9,3,-7,6,-3,5,3,-5,6,10,2,4,-1,-6,8,-6,-3,4,-5,-8,-3,2,-4,5,-8,8,8,3,-8,8,-10,-2,-3,-7,-9,7,-7,-10,-7,-4,9,-6,-5,-8,-10,8,-1,5,9,4,-6,-7,-1,5,-1,2,1,9,-9,-1,-5,8,-1,2,6,5,-7,6,-1,-6,2,-2,-6,-2,-8,-3,-4,-9,-6,5,6,-8,4,1,-7,-8,2,3,-1,-2,-8,3,6,4,-4,-5,-9,-3,7,8,8,-4,-6,-10,-3,-9,7,-2,-6,4,7,2,2,-1,-9,6,5,-10,10,9,2,4,-1,-2,-5,7,-8,10,-4,3,-1,1,-9,-8,-2,-2,-6,6,5,2,-4,3,-8,4,-3,-5,3,10,-8,-3,-7,7,-3,1,-10,-7,-4,8,3,-5,-8,3,-6,-5,1,-7,3,4,-8,4,-7,-4,-1,-4,4,-3,10,4,-8,2,-7,10,4,7,-8,-10,4,-8,8,-1,1,-5,-9,7,-9,9,-10,7,-4,6,5,-8,3,4,-10,-4,-1,2,-9,9,7,-4,-8,1,-5,-5,6,-9,-9,-8,10,-10,10,-10,10,-9,-9,6,-5,-1,-5,-1,10,-7,5,-10,7,5,-3,-10,-6,1,-1,-3,5,7,10,8,9,1,-1,8,-10,-7,10,7,4,3,7,4,-2,10,8,-2,-5,1,-3,-4,-4,7,6,-3,-1,8,4,10,2,8,1,-8,-2,-10,2,9,5,-1,9,3,-10,-10,4,10,1,7,7,-8,-6,5,2,-3,7,10,-10,6,4,6,-5,4,-2,9,8,-10,6,2,7,-9,-9,-10,1,-1,-3,5,-3,7,-1,7,-6,4,10,1,1,-4,8,1,2,-6,-1,5,1,-9,8,4,3,-5,-5,-4,8,-1,2,8,6,-2,-5,8,9,-10,5,1,5,-3,-6,-9,5,-3,-1,-4,4,-1,3,9,-9,8,-5,4,-7,-2,-5,7,10,8,8,-8,8,-5,1,10,3,5,-9,7,7,-6,10,-2,-3,4,2,8,-1,10,5,3,-10,-5,9,-2,3,9,-3,-8,1,10,3,-5,10,-8,5,-2,-2,-1,-3,7,3,3,-9,4,10,5,-1,10,4,-6,-1,-4,-7,6,-10,-8,-3,10,-10,1,-10,7,-7,-5,-5,1,-1,-1,-2,8,1,6,7,-5,-2,-10,1,6,-2,-10,-1,-3,8,1,-2,-3,-7,7,6,-10,8,-3,-5,8,9,6,-9,-4,-2,6,-4,-7,9,-4,7,5,5,-6,-6,-10,4,-7,-5,-1,-4,3,7,10,5,3,9,1,6,6,4,7,2,-3,2,5,1,5,-7,4,-2,-8,-4,7,-6,2,-1,-10,-2,9,6,-2,-2,-3,-4,1,-3,-9,7,7,-10,-5,-5,-3,7,10,8,10,-9,-6,-1,10,-7,-1,6,-8,-6,-5,-8,-9,-2,10,-1,7,5,-4,4,10,-5,-4,10,5,-4,8,-1,-1,-6,-3,3,-8,7,5,-7,3,-10,3,10,8,10,-8,-5,-6,-1,-9,-10,5,10,-9,8,9,8,8,9,1,-5,2,7,-10,-4,-5,7,-2,-1,-4,-2,7,-4,-7,4,-4,-7,7,-2,-4,-8,-3,-10,-4,5,-2,-2,6,-7,-10,-10,-7,9,-1,-3,-7,4,7,-4,-9,-10,7,-1,7,5,8,-2,-2,-9,9,-6,4,-8,-7,4,1,-6,-6,-3,-6,10,4,9,2,9,-1,-10,6,-7,-2,7,-5,-4,-2,5,5,-4,-9,5,2,-5,-8,9,4,-4,-7,10,6,4,-10,9,-4,4,-5,-5,4,1,4,5,6,-4,2,6,7,9,-8,-3,-1,-6,-6,5,-10,2,-6,3,8,-6,3,-10,1,10,-8,-4,9,-5,-2,5,-9,-9,3,9,-1,-4,7,9,-3,-1,-1,2,-6,5,9,1,6,-5,2,-10,10,-1,8,-7,8,-6,5,-1,4,9,5,-3,10,9,1,6,5,-8,-7,8,7,8,-9,-2,-4,-8,1,-9,-7,-4,10,-2,9,-10,9,6,1,5,-3,-4,-8,-6,-2,-1,-5,-1,-6,2,5,4,9,7,3,9,-8,3,-3,-6,-7,-6,-3,9,-2,-5,-2,-8,-10,-8,-6,9,10,-2,4,-10,7,5,-4,9,3,10,2,6,-10,5,1,-2,9,-4,3,5,-9,-2,-3,7,-5,-3,5,-9,6,-3,-1,8,8,-2,-5,3,-7,6,-5,8,-2,-7,2,3,3,5,-10,1,-6,-9,1,-4,8,-8,3,-3,9,-3,9,1,10,5,10,8,-2,-4,2,1,7,2,-5,6,-6,-9,5,-8,-5,-6,8,8,4,3,1,3,3,-10,2,-4,-7,3,2,-8,4,-9,-10,2,-2,-10,-9,1,-10,-2,-8,-1,1,8,7,8,4,4,8,-9,-3,1,4,5,4,-8,-4,-1,5,8,-7,-1,-6,6,1,2,4,7,5,4,9,-4,-1,10,4,5,-4,4,-1,2,6,9,7,-8,10,-4,1,4,4,-7,-1,4,1,3,-8,8,-9,4,3,-10,1,3,-3,6,-10,10,7,5,1,2,3,5,-6,-9,8,-3,-5,-5,-3,8,5,-5,1,4,9,3,-7,7,-5,6,6,-4,-8,-9,-1,-6,-6,-3,-2,1,3,5,-2,5,9,-3,-1,-5,-8,-1,3,5,6,-8,-5,10,-3,-7,-9,2,-6,-2,2,7,4,-6,3,8,-1,10,7,3,-8,5,-5,-5,10,7,5,-9,-9,-7,8,6,4,-5,-7,-1,7,2,2,2,-5,3,2,-8,-9,-5,-2,6,8,-9,10,-10,7,-10,7,1,10,1,-6,-4,6,1,2,-6,-1,-5,-4,-7,-7,9,8,8,-2,1,-10,2,-8,-3,-4,-1,3,-5,1,7,-10,1,-6,7,8,7,-5,-3,4,3,7,3,2,-5,2,10,-10,-10,-2,6,7,9,4,6,1,8,-5,-6,-10,9,-4,-4,4,3,-2,-7,6,-10,-9,10,8,-8,10,-10,-4,4,10,4,-1,1,8,2,-5,6,-1,-5,-6,-9,-4,9,-10,6,1,5,9,-5,3,2,-10,-1,5,-7,9,-1,7,-1,-3,8,-8,-5,-10,-1,6,10,-2,-6,-6,-1,-10,-8,-2,-7,-5,-8,9,-8,-6,1,-4,9,-1,4,9,-2,6,8,-10,-5,-2,-8,8,2,-8,-7,4,-8,-10,-2,-6,10,6,-1,4,1,-9,-9,-6,-3,1,-7,-4,10,7,-5,-8,-8,2,1,5,2,-3,-3,1,5,3,-9,-7,5,10,-7,-4,3,4,3,-7,5,7,3,3,-2,-8,-5,7,-8,-1,-5,10,2,3,-5,-4,4,-8,9,-3,-6,-1,5,-3,7,8,1,-2,-5,-2,-7,1,-8,-6,-8,8,-9,7,7,7,-7,5,-4,-3,-10,-9,1,-8,-7,-4,3,-9,10,-6,-7,8,9,-2,-8,2,-1,-7,-1,1,-1,-10,-8,-7,-6,-3,10,-9,-5,-4,7,3,8,-2,6,6,-8,-2,-7,3,5,-6,-9,4,7,7,3,-4,1,-10,7,4,2,2,-8,3,-2,8,6,-5,9,9,-1,3,-6,9,-6,-1,-3,-8,-7,-4,-1,-10,2,2,-7,-3,1,-2,-6,-4,-6,-3,-5,9,3,3,-4,1,-8,9,-3,4,8,-2,-9,-9,9,-5,4,-10,-7,-10,-6,1,5,1,-2,-1,3,5,10,-6,-7,-7,4,7,-10,6,-10,-2,-7,-3,10,-9,9,-4,9,10,-10,6,-4,-7,10,2,8,-4,-9,-4,-3,1,-9,3,-4,4,9,7,-3,-8,8,4,6,-3,-7,3,1,3,8,8,8,5,3,1,-6,8,10,10,-10,-2,-9,8,-10,10,9,-1,3,4,-8,10,5,8,2,3,10,-10,2,-10,2,-4,1,6,1,-8,7,5,-7,-9,-2,2,10,2,1,6,-4,-4,6,-9,-2,-8,-6,-10,7,-4,2,2,10,-5,7,-6,-4,8,-10,8,5,-10,-2,-3,-10,7,-5,-7,2,7,5,-4,4,10,-10,-8,8,-5,-10,9,-7,3,5,8,4,-1,-9,-10,7,-6,2,-10,-2,1,3,-2,-4,4,-7,-9,8,-1,-2,-1,-5,-6,3,-7,10,6,6,6,5,1,4,6,-9,10,-10,-2,8,-1,-5,5,-6,1,-1,4,-8,-1,-5,4,-3,-9,5,-7,-1,-3,9,-2,-1,7,-1,-9,5,1,6,-6,-2,-4,-8,10,-1,6,3,5,2,-5,2,-1,-5,-5,-10,1,-7,8,10,-3,-1,3,6,7,9,-10,-9,5,7,-6,-4,10,-4,5,4,-4,-8,8,-4,-1,-8,-3,-3,-10,10,-7,5,-6,-6,4,10,7,-7,-1,2,6,-4,-9,-7,7,-7,6,4,2,2,7,5,7,9,-3,-1,-4,-7,-1,-2,-6,5,-2,3,-6,-9,4,-7,8,-10,-10,9,5,5,-4,4,-9,-1,5,-4,-8,4,-8,4,8,6,-4,-9,5,-5,-4,-1,8,-3,-6,2,3,6,6,7,6,1,2,-1,8,8,-4,7,10,5,-9,2,2,3,-7,-3,6,5,7,-7,-1,-9,3,-9,5,9,-10,4,-8,-3,7,-10,-1,5,8,-5,6,-5,9,1,9,-6,10,2,-6,3,-10,-10,-5,-1,8,3,7,4,4,-9,-5,2,6,-3,9,-10,8,-2,-5,-9,6,-7,-10,10,-6,6,6,7,2,-6,6,1,-6,-1,5,-3,2,5,-1,-7,-6,6,-1,-7,5,-3,9,-6,-7,5,-9,-1,10,-4,-3,-8,3,2,-9,6,-2,4,1,8,9,7,4,8,6,-5,-4,-9,-8,-1,-9,10,4,-7,-6,-4,-10,2,1,-10,-3,-7,9,-3,6,-4,1,-8,-10,3,-10,10,7,6,3,6,-2,-4,-8,9,-3,9,-9,-10,-2,4,9,3,-7,6,6,5,-7,-10,7,7,4,-3,-2,3,-5,5,-2,-2,7,6,-1,1,3,-3,3,-8,5,-2,-4,9,4,5,-2,5,-8,3,4,-9,9,7,1,1,-7,-3,9,-2,7,1,6,-9,6,4,-9,-9,5,2,-1,2,-7,-9,-8,-1,8,-4,-5,1,-6,3,9,6,10,-2,9,7,10,2,6,-2,-5,-1,1,4,-8,-5,-1,-1,-6,-1,6,3,-5,3,-8,8,-3,-6,2,4,-8,-6,-7,-9,-9,-2,-8,10,-9,7,-2,-3,-3,-1,-8,4,3,5,7,5,-6,-1,-1,10,-8,9,9,6,10,8,4,4,-3,9,4,-6,-2,-5,-1,-3,9,10,-4,3,-6,4,4,-7,-6,7,-2,-10,-1,7,7,1,-4,7,9,-3,-10,5,4,5,10,-10,6,-7,5,8,-6,10,-2,-7,7,-6,-7,-5,6,-1,-1,-1,2,-3,-3,-1,-4,6,-7,6,3,3,6,-8,-5,9,3,2,-9,2,-7,-1,-3,-8,-2,-6,-8,-2,6,-7,3,8,7,9,4,9,6,4,-9,-2,7,-5,-7,-9,8,-6,3,5,4,7,-9,1,8,-5,-8,-9,6,-1,-2,-8,8,1,9,-3,-4,-1,7,-8,-9,-6,-1,3,-1,-2,9,-3,-7,-8,2,7,2,-1,-2,-5,-2,-10,-6,-2,-1,7,-6,5,-7,-8,-6,7,5,-6,4,7,-2,1,-2,-4,5,1,4,-5,-10,-9,7,4,-1,8,4,3,4,6,5,9,5,-3,7,-9,-2,3,6,3,10,5,9,-9,-2,-9,5,10,7,9,3,10,8,-7,5,-2,-1,6,-6,3,8,-6,-9,2,-4,-1,-9,-4,-6,-3,-1,3,-3,6,-4,7,10,-6,4,6,-9,4,-7,6,9,4,4,6,8,7,10,5,-1,-10,9,2,-2,-7,-5,4,-4,-6,10,8,-3,-2,-10,4,8,-8,-9,-4,-7,1,5,5,-6,10,4,-3,-2,1,-4,7,8,-10,4,-1,-8,-2,-8,2,10,1,9,-3,1,-7,9,-10,7,-6,-5,-3,-9,-5,2,2,-9,-5,9,1,10,-6,2,-7,-5,10,-10,-4,-8,8,6,1,3,6,-2,1,-7,-4,-4,-7,-4,10,10,4,2,-7,2,-6,3,-6,-10,-8,7,-5,-3,-1,-9,-2,6,8,-6,8,10,4,7,8,-10,-6,10,-7,6,-1,-10,6,9,-3,9,-4,7,-2,-7,-4,9,-3,3,-4,-7,-6,8,-4,-5,1,-10,5,-2,-2,9,5,5,-9,-7,7,-7,-2,4,1,2,-5,8,10,7,10,-9,6,-2,-2,9,4,2,-1,3,8,-6,8,5,6,3,9,-1,-5,9,4,7,-4,-6,-7,-10,4,10,-10,1,8,-3,5,-10,-9,-8,-9,-10,3,-9,-7,-7,-5,-3,3,-4,-10,-6,1,5,-6,-2,9,-7,10,-5,7,7,9,10,8,1,-8,-4,4,8,4,3,2,8,-10,-8,-4,-2,7,-5,3,-2,4,2,7,7,8,5,-4,1,-5,-2,3,2,-3,6,4,8,4,-7,10,2,-4,7,9,1,-6,-3,-6,-1,-1,-8,5,-4,-8,9,4,5,10,7,9,-3,2,7,10,-10,5,3,-4,10,-7,9,2,-1,-7,4,-8,-2,-5,-10,-7,4,-8,3,-6,-5,5,4,9,2,6,1,-2,-6,-10,-10,7,-10,-2,9,7,1,-8,-9,-2,1,4,-4,5,-3,-6,-1,-8,-8,-3,8,-8,1,-6,3,1,8,7,4,-1,4,-2,10,7,2,-4,-9,-1,-10,-3,3,-8,9,-2,-5,10,10,-6,3,8,-3,-8,-5,-5,4,-10,1,-9,-3,-3,-3,10,4,4,9,-3,-4,-5,9,-6,9,1,5,-10,10,7,-8,-9,-10,10,-4,-2,-5,9,-10,-7,2,8,-8,6,-4,1,9,-4,4,-10,10,-9,2,9,7,-10,-5,-8,9,-9,8,-6,-4,6,6,-8,-2,1,7,6,7,-4,-4,-3,6,-5,6,1,-4,5,7,-8,10,-10,9,-2,-2,1,7,-9,8,9,-7,-1,1,1,-9,4,-8,8,-2,8,-5,8,-10,8,10,1,10,-8,-10,-7,-10,10,-7,7,-9,1,-3,7,-7,3,-4,5,-6,5,6,5,-6,3,-3,3,9,-7,5,6,-1,-1,3,1,1,-5,1,-2,-7,10,-9,-4,-9,9,-7,7,-3,-4,-6,-4,-2,-3,-1,8,2,-7,-3,7,4,-7,10,8,2,-10,7,-5,-2,-2,5,-10,9,8,-10,5,3,-4,6,8,8,-8,1,5,-4,-8,-6,6,8,9,-8,-4,6,6,4,2,2,-6,-3,-8,-8,4,5,-1,-3,-2,5,-4,6,5,-7,-1,-6,2,9,-6,8,-1,1,7,2,-7,-7,-2,-4,-4,-3,-10,3,-10,-3,9,6,4,2,3,3,3,-4,7,-1,9,-8,-4,-2,-3,-9,-8,-4,4,6,-10,-9,10,-7,1,8,3,-10,6,9,9,-4,5,-1,-4,6,5,8,-1,2,2,-4,5,1,-8,-3,-10,-5,-6,4,3,-3,-7,8,5,-10,10,-3,-7,-6,-5,-1,-7,10,5,3,-5,-8,7,-10,6,1,-3,-2,-9,5,-1,-10,5,2,-3,-7,9,-1,-3,-9,1,8,-6,-4,3,10,-6,-10,2,2,-5,6,-6,2,-7,2,-3,-10,1,6,3,-7,8,-3,-9,8,4,2,10,-1,7,5,-2,-10,10,8,-2,4,2,10,2,7,-1,-6,-1,8,-8,9,-9,-6,5,-2,-9,-8,-6,2,6,4,8,-8,6,-8,-8,-6,-8,-6,6,-1,-8,8,9,4,9,3,-7,-6,-9,-5,3,-6,6,5,3,9,-7,5,-6,1,6,-3,-5,4,-5,-10,2,9,-9,-2,-2,-2,-7,-3,6,8,-8,-3,-4,-6,7,9,-2,-9,-5,-1,-9,4,-2,9,-2,9,10,4,10,2,6,9,2,-8,7,1,-4,4,-5,5,-9,-9,8,-4,-1,-10,-10,6,-4,-6,-8,9,-4,-10,-5,4,9,3,-7,10,3,-7,-8,4,1,-5,7,-1,-6,-7,5,-4,-5,6,6,-1,5,-2,3,4,-6,-3,4,1,6,-2,-9,9,-5,-7,-10,-10,6,-9,7,-5,4,-5,1,-8,-4,-9,-5,7,5,1,-4,-2,2,-1,7,-4,-3,7,5,-2,4,-1,2,-10,-4,2,-1,-8,8,-6,5,-3,-8,-2,-4,1,-8,10,10,4,-1,4,3,-7,-3,-3,2,9,-6,5,7,-1,-8,-2,-9,4,5,5,10,-8,-6,3,8,-8,-3,8,8,-3,-8,-5,-3,10,5,-5,-7,9,-3,1,-2,-8,3,7,3,8,-4,10,-1,5,-6,-2,3,-6,4,10,6,3,3,-3,-9,-2,3,2,2,2,8,-9,-7,-9,-2,-7,8,10,-9,2,5,2,-3,3,-2,3,3,2,9,-1,10,-1,-9,2,5,7,-5,7,-1,-3,-9,4,-10,-10,-6,8,-10,-4,2,-6,-9,7,1,-10,-6,7,1,5,-6,8,7,-9,7,-5,-1,-3,3,-2,4,9,7,3,-7,-1,5,-6,7,1,-1,10,9,-10,-5,-9,4,-9,5,-1,2,7,3,-2,-1,2,-1,-1,10,-3,4,2,-9,1,4,-6,5,-6,9,7,-2,9,3,-4,-1,-8,10,-3,2,4,-5,2,6,-6,-5,4,-4,-3,-4,10,7,-2,-9,-7,-6,-4,-3,-1,-6,5,-2,1,3,2,4,-5,-1,7,10,8,-4,1,3,-6,10,10,-10,7,8,1,3,-2,-2,4,-10,-2,-9,2,4,10,-1,6,-3,5,4,1,3,-2,2,-9,-10,-9,-3,-2,-10,2,3,3,5,-7,-5,4,4,2,-4,10,-3,7,-9,4,-1,1,8,-2,-1,10,1,-1,-2,1,-8,-3,10,-7,-9,10,-9,6,2,-10,8,8,-6,4,-4,7,6,2,-10,-6,-2,-8,7,2,-1,4,-2,9,-1,-7,8,8,-4,1,-1,-2,5,-8,6,-4,2,-8,-10,4,10,10,-5,-1,1,2,2,9,-6,10,8,-10,-3,5,-7,-9,-10,4,-9,4,-10,-4,-10,10,1,-9,5,9,10,-5,5,-6,3,10,-9,-4,1,-1,-2,-7,10,-3,-5,-7,8,-4,6,-8,1,2,4,-9,5,-8,-9,-9,-10,6,-7,-2,4,6,7,-10,-3,8,-10,4,7,2,6,-6,6,-4,6,-5,-4,-2,-6,1,7,-9,-6,-2,-3,-10,-6,5,-10,-2,-5,-9,-10,1,-3,7,4,7,-9,5,-3,-10,1,10,4,-8,-1,-1,-5,-10,7,-8,-3,10,-6,-5,10,-8,3,-10,2,-10,-4,7,-3,8,4,10,-3,-1,-7,-7,-4,-8,5,-5,-8,1,4,-1,-2,-7,-7,6,-9,-10,-5,-5,-4,-7,-3,-5,5,-2,3,-8,-4,-3,-3,-2,8,-9,3,-4,-7,5,1,-2,5,7,-9,2,9,-4,-6,5,2,-9,-9,9,3,-7,-5,3,5,9,7,7,7,-10,-10,9,10,5,10,-5,-2,-9,3,9,6,-2,-9,8,-10,1,3,2,-5,-3,4,7,-2,5,10,5,-9,-8,-4,4,-5,6,4,-1,8,3,-2,10,-9,-3,-8,-7,-3,-7,3,3,-8,-6,-8,9,-3,-7,-3,10,1,-2,-2,-6,-4,-4,-4,-5,-7,-3,1,10,-6,-8,-4,-2,-4,2,5,-10,10,-8,-10,-7,5,1,-3,10,8,10,-6,6,7,5,5,3,-1,10,-5,8,8,-5,-2,2,-3,-1,3,1,3,-5,3,-6,8,-8,6,2,7,6,-4,-9,-9,8,-6,-5,8,9,-8,8,4,1,-1,-3,4,-8,-8,-7,-5,-10,-7,2,-6,7,-8,4,-8,-2,-1,7,-4,6,-2,-8,10,-8,6,-2,-2,8,3,-4,8,2,-2,-5,-4,8,-5,-2,6,-4,1,7,-7,3,-7,-5,-4,-6,-5,-3,-1,-4,-9,3,-8,10,-5,3,1,3,5,-5,-4,5,2,-8,-1,1,-1,-5,-3,8,-1,-1,-9,2,-4,-4,6,8,9,2,10,-8,-8,-8,8,-1,7,3,8,-9,-10,9,-4,5,4,-1,-1,-3,-4,9,9,2,4,1,1,-2,-6,-9,9,2,-3,8,-4,10,2,-9,-3,-6,-6,-7,-10,10,-2,-4,4,6,1,-9,5,-4,-3,9,-3,1,5,-8,8,10,-8,-3,-4,-8,-3,1,-8,-6,-7,-7,1,2,5,-10,10,3,6,-10,4,-5,-7,-6,1,-8,-8,-1,-2,-4,4,9,6,4,7,10,4,-10,-4,-7,-2,-5,9,-1,8,-9,-9,-8,10,7,-6,3,-4,10,-1,5,2,-6,-6,4,-2,6,-1,6,-8,1,2,3,-6,6,-2,3,-10,4,3,10,1,7,-4,-3,10,8,9,9,-6,5,5,1,6,-3,-5,6,-1,-8,-8,7,7,9,7,-3,3,1,7,-5,-9,-6,9,10,5,-7,9,2,-9,5,-10,-1,8,3,3,-2,4,7,-10,-5,5,1,-8,-1,7,-3,6,-2,-5,2,10,-2,-4,10,-6,-10,-9,-4,-5,3,2,-8,1,3,-4,-6,10,1,-9,-7,-9,5,-7,4,5,-3,5,-3,1,2,10,-4,-8,-2,7,1,6,6,4,-5,-9,-3,-10,-9,-2,-10,1,-3,-8,-5,4,-3,-1,-4,-10,3,7,-4,-6,-10,5,3,2,6,-10,-7,8,-5,-10,3,9,-9,-6,3,-7,-10,-1,-8,-8,-4,-7,5,2,2,10,-6,-5,-3,-8,-3,-9,7,8,4,-2,-6,-1,4,-10,9,-6,-7,10,2,-6,4,1,-5,9,-7,-10,-1,4,6,4,2,-10,10,10,-7,8,2,-5,10,-10,6,-10,1,-6,5,-2,-1,7,2,5,4,1,5,-6,-1,-2,4,-7,3,2,3,-5,6,-8,-9,-8,-6,-10,-6,-8,1,-5,1,2,5,-1,9,3,-10,-6,3,4,6,4,10,-10,-1,8,6,3,-5,10,-2,9,-5,3,-10,9,10,-9,-5,-1,-3,6,8,-1,-6,7,5,10,-5,-7,-9,-1,10,-9,-9,9,9,1,7,-2,-2,-10,7,4,4,-6,-10,4,-9,6,3,-7,-3,2,10,-2,5,7,2,5,-7,-1,-2,-8,7,-6,-9,5,-1,1,-2,-4,-5,-2,-4,-6,-2,5,-3,-2,7,3,2,10,-4,7,-4,-7,-1,7,-10,4,10,-3,-4,-3,4,9,-3,-9,9,-7,6,1,4,1,-1,-5,8,-5,-2,3,4,2,-10,6,-7,-2,6,-10,-3,4,10,6,7,10,10,7,-7,3,10,-7,-4,-3,2,1,-6,9,4,4,5,-3,7,-10,7,-4,-5,-7,9,9,3,7,5,-7,-1,2,-5,4,-3,8,8,-10,-2,1,-6,5,10,-9,9,-6,7,8,-3,7,7,-7,-7,1,3,-3,2,-8,-9,7,-5,8,-1,7,1,9,9,-6,-2,-10,-6,-5,8,-1,2,-4,-1,10,-1,5,1,9,-9,-8,1,-7,8,7,9,6,-8,-10,-3,2,-7,3,10,-8,8,-9,4,7,-9,-10,4,10,6,-2,10,2,-2,5,-8,10,-9,-6,4,4,10,4,2,6,5,7,-4,5,6,8,3,2,9,-6,5,-8,8,9,-7,-9,4,6,-7,-6,10,-6,3,8,8,-5,-6,6,-7,5,1,-4,10,-5,-2,-7,-8,-7,1,-5,1,-1,-4,-2,-3,5,-1,-9,1,-7,6,5,-8,-6,-2,-7,-10,-2,5,-5,3,10,-1,4,-4,2,6,5,2,3,10,-8,6,7,6,-10,4,-2,1,-4,8,7,5,-7,1,2,-8,4,-10,9,-2,2,9,10,9,-6,-10,-10,5,4,7,-9,-8,-1,1,2,-9,9,10,1,-3,-8,-10,-10,6,-10,1,8,-10,8,10,-7,6,-8,-5,-8,4,1,-4,10,6,1,-9,7,-7,-3,4,-6,5,-9,-3,-9,4,-2,3,-6,-1,-6,-5,2,-7,1,-6,-4,-10,-1,1], dtype = "int32")#candidate|3023|(8448,)|const|int32
bop_3024 = relay.bitwise_xor(var_3011.astype('int8'), relay.reshape(const_3023.astype('int8'), relay.shape_of(var_3011))) # shape=(8448,)
uop_3035 = relay.acosh(var_3011.astype('float64')) # shape=(8448,)
bop_3038 = relay.multiply(uop_3035.astype('int64'), bop_3014.astype('int64')) # shape=(7, 6, 8448)
bop_3041 = relay.multiply(uop_3035.astype('int64'), bop_3017.astype('int64')) # shape=(7, 6, 8448)
func_1164_call = mod.get_global_var('func_1164')
func_1165_call = mutated_mod.get_global_var('func_1165')
call_3043 = func_1164_call()
call_3044 = func_1164_call()
func_1097_call = mod.get_global_var('func_1097')
func_1100_call = mutated_mod.get_global_var('func_1100')
const_3052 = relay.const([10,9,6,8,-5,5,2,3,4,-10,2,8,-8,-9,10,6,9,-9,-7,-7,2,6,-5,10,4,-6,-5,4,-7,10,2,-7,-3,-5,5,-3,-8,-9,-7,4,-2,8,5,1,-6,9,-8,8,-5,2,-7,-5,5,9,6,1,-4,-3,2,2,6,-7,-10,-6,10,-2,-6,-3,2,10,5,-6,-4,-9,7,-6,3,-9,-10,5,-4,8,-6,8,-5,8,4,1,4,-6,-1,4,-8,6,-8,8,10,2,9,5,-2,3,6,-6,4,-1,-4,9,-8,2,6,9,-7,1,3,-9,-9,-1,-6,5,-8,-5,1,-6,8,6,9,-1,6,-2,8,-4,-6,3,-1,-4,-5,3,4,7,-7,-8,-8,-3,-1,-5,-8,7,3,6,8,-5,8,1,9,-5,-8,-5,2,-3,4,-1,7,6,9,4,-1,-10,-8,2,8,-4,-10,5,6,4,-5,2,-2,2,10,9,-8,2,-2,3,-4,6,-7,-6,10,3,-5,-9,-3,8,-8,5,-8,10,-1,-9,2,-9,-6,-2,-6,-4,-9,-8,2,6,-5,-6,7,-2,-10,3,6,-3,-8,-1,-9,3,-5,-2,9,9,-2,8,10,10,-10,-2,-7,-1,9,7,-6,-7,5,8,-1,9,-1,-1,-8,-8,3,7,6,-5,9,-2,6,5,-1,5,-1,3,3,10,-6,10,-2,-1,6,-3,8,9,7,5,-9,9,-7,2,8,-9,-4,-4,-5,-5,1,-5,5,4,2,-9,-10,-2,1,-4,8,3,-4,8,-4,-2,1,5,-3,-6,-8,7,3,4,-3,-5,4,3,-7,-7,4,-7,7,10,4,-9,3,2,-3,-4,-7,-9,6,-8,3,-5,7,3,-7,5,3,4,10,-3,-2,-1,-5,9,2,-6,3,3,5,-5,3,4,6,1,1,8,3,2,10,1,7,7,1,1,8,-10,7,-6,-9,-6,-10,-4,4,3,5,3,3,5,2,2,1,-2,4,-9,4,5,-10,1,5,7,9,-4,-4,8,5,7,-4,4,10,2,1,-9,6,-8,-3,-3,-6,7,-5,5,7,-8,4,10,7,5,-9,2,6,8,-4,-2,-7,-8,3,4,7,10,4,-3,-4,-9,-7,-10,-1,-2,1,-3,2,3,-7,5,9,-5,-7,-1,9,4,3,6,-6,8,2,-8,-5,10,-7,5,-10,6,9,8,9,3,-10,7,9,3,-7,6,9,-3,8,-4,-8,-8,10,-8,-2,3,2,-5,-5,2,7,-3,1,7,-2,10,1,-1,-7,-10,-10,10,4,2,-4,-3,-2,1,10,5,-9,6,-4,-1,-7,-10,5,-10,-5,-2,9,-2,-10,4,-1,4,5,-7,6,-2,10,-10,3,-6,4,-7,-1,-4,4,-1,-9,4,-4,3,-1,-2,8,-4,2,9,-7,-9,-7,-1,10,-5,-6,3,10,-1,2,9,-5,-10,6,5,8,-4,-8,6,-7,-9,2,5,9,-2,-9,-10,8,3,9,-7,-5,-4,6,-1,2,5,1,5,-8,-10,8,3,-1,-9,-8,9,-7,-4,-2,-5,-6,-10,2,8,10,9,9,-5,-10,-3,3,2,3,-3,5,-3,8,-8,7,-2,-6,-9,5,-7,10,-5,-10,-5,7,9,-5,2], dtype = "int16")#candidate|3052|(624,)|const|int16
call_3051 = relay.TupleGetItem(func_1097_call(relay.reshape(const_3052.astype('int16'), [24, 26])), 0)
call_3053 = relay.TupleGetItem(func_1100_call(relay.reshape(const_3052.astype('int16'), [24, 26])), 0)
uop_3055 = relay.log(uop_3035.astype('float64')) # shape=(8448,)
const_3061 = relay.const([[False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,False],[False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True],[False,True,True,False,True,False,False,False,False,True,False,True,True,False,True,False],[False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True],[True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True],[True,True,False,True,False,False,False,True,True,False,False,False,False,True,False,True],[False,True,True,True,True,False,False,False,False,False,True,True,True,True,False,False],[True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False],[False,True,True,False,True,True,False,False,True,True,True,False,True,False,True,False],[True,True,True,False,True,True,True,False,False,False,True,False,True,True,False,True],[True,True,True,False,False,False,False,True,True,False,True,False,False,False,False,True],[True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,True],[False,False,False,False,False,False,True,False,False,False,False,False,True,True,True,False],[False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,False],[True,False,False,True,False,True,True,True,False,False,True,True,True,True,True,True],[False,True,True,True,False,True,True,False,True,True,False,True,True,False,False,False],[False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False],[True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True],[True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False],[True,False,False,True,False,True,True,False,True,False,False,False,True,True,True,False],[True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,False],[True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True],[False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,True],[True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True],[True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False],[False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False],[False,True,True,True,False,True,True,True,False,True,False,True,False,False,False,False],[True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False],[False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True],[False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True],[True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False],[False,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True],[False,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True],[False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True],[True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False],[False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True],[True,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True],[False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True],[False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True],[True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,True],[False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True],[False,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True],[False,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False],[False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False],[True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True],[True,True,True,True,False,True,False,True,False,True,False,False,False,True,False,True],[False,False,True,True,False,True,False,True,False,True,False,True,False,True,False,True],[False,True,True,False,False,True,False,True,False,False,True,False,True,True,True,True],[True,True,True,True,False,True,False,True,True,False,False,True,True,True,False,False],[False,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True],[False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,False],[False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,True],[True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True],[False,True,False,False,False,True,False,False,False,False,False,True,False,True,False,True],[False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False],[True,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False],[False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True],[False,False,False,False,True,False,True,False,True,True,True,False,True,True,False,True],[True,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False],[True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True],[False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True],[True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False],[False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False],[False,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True],[False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False],[True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True],[False,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True],[True,True,False,True,True,False,False,False,True,False,False,True,True,False,False,True],[False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False],[False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False],[False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False],[False,False,True,True,False,True,True,False,True,False,True,True,False,True,False,False],[False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True],[False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,False],[False,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True],[False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False],[False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False],[False,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True],[False,True,True,True,True,False,False,False,False,True,False,True,True,True,True,True],[True,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True],[True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True],[False,True,False,True,True,True,False,False,False,True,False,True,False,True,True,True],[True,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False],[False,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False],[False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False],[True,False,False,False,False,True,False,True,False,True,True,False,True,False,False,True],[True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True],[False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True],[True,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True],[False,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True],[False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False],[True,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True],[True,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True],[False,False,False,True,False,False,True,True,True,False,False,False,False,True,False,True],[False,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True],[True,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False],[True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,True],[True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False],[False,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False],[False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False],[False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False],[False,True,False,False,True,False,False,False,True,False,False,False,True,False,False,True],[True,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True],[False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,False],[False,False,False,True,True,True,False,True,True,True,False,False,False,True,True,True],[False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,True],[True,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True],[False,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True],[True,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True],[True,True,False,False,True,False,False,False,True,False,False,True,True,True,False,False],[True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False],[False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,False],[True,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False],[True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True],[True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False],[True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,False],[False,True,True,False,False,True,False,False,True,True,False,False,False,False,True,True],[True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True],[True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False],[False,False,True,False,False,True,False,True,False,False,False,True,False,False,False,True],[False,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True],[False,True,True,False,True,False,True,True,False,True,False,False,False,False,True,False],[True,True,False,True,False,True,False,False,False,True,True,False,True,True,True,True],[True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False],[True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,True],[True,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True],[False,False,False,False,False,True,True,True,False,False,True,False,True,True,True,False],[True,False,True,True,False,False,False,True,True,False,False,True,False,True,True,False],[True,True,True,True,True,False,False,True,True,False,True,False,True,False,False,False],[False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False],[True,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False],[False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,False],[False,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True],[True,True,True,True,True,False,False,True,False,False,True,True,False,True,True,False],[False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False],[False,True,False,False,False,False,True,False,True,False,True,True,True,False,True,True],[True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True],[True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True],[True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False],[True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False],[False,True,True,True,True,True,False,True,False,False,False,True,False,False,True,True],[False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,False],[False,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True],[True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False],[True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False],[False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,True],[False,True,True,False,True,True,True,False,False,True,False,False,False,False,False,False],[False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False],[True,False,False,True,True,False,True,False,True,False,False,True,False,False,True,False],[True,False,False,True,False,False,False,False,True,False,True,True,False,False,True,False],[False,True,True,True,True,False,True,False,False,True,True,False,False,True,False,True],[True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False],[False,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True],[True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True],[False,True,True,True,False,True,False,True,False,False,False,True,True,False,False,False],[True,True,True,False,False,True,True,False,False,True,True,True,False,False,True,False],[True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,True],[False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True],[True,False,False,False,False,True,True,False,True,False,False,True,True,False,False,True],[True,True,True,False,False,False,False,True,False,False,True,False,True,False,True,False],[False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False],[True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,False],[False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False],[False,True,True,False,False,False,False,True,False,True,True,False,False,False,False,False],[False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False],[False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True],[False,True,False,True,False,True,False,True,True,True,True,True,False,False,True,False],[True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True],[True,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True],[True,False,False,True,True,False,False,True,True,False,True,False,False,True,True,True],[True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False],[True,True,True,False,True,False,True,False,False,True,False,False,False,False,True,True],[False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False],[True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False],[False,True,True,True,False,True,True,True,False,True,True,True,False,True,True,True],[True,True,False,True,True,False,True,False,False,True,True,False,False,True,False,False],[True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False],[False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False],[True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False],[True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True],[True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True],[True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,True],[False,False,False,True,True,False,True,True,False,False,True,False,False,True,True,True],[False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False],[True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False],[False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False],[False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,True],[False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False],[False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True],[True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False],[False,False,True,True,False,True,False,True,True,True,True,False,True,False,True,False],[False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False],[True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True],[True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True],[False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False],[False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False],[False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False],[True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,False],[False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,False],[False,False,False,False,True,True,True,False,False,False,False,False,False,False,True,False],[False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,False],[True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,True],[False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True],[False,True,True,False,True,False,False,False,False,True,False,True,False,True,False,False],[False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True],[True,False,True,False,False,False,False,False,True,True,True,True,False,True,False,False],[False,True,False,False,True,True,False,False,True,False,False,False,False,False,True,True],[False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False],[False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,False],[True,True,True,False,True,False,True,False,False,False,True,False,True,False,False,True],[False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True],[False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,False],[True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,True],[False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False],[False,True,False,False,False,False,False,False,False,False,False,True,True,False,False,False],[False,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False],[True,True,False,True,False,True,False,False,True,False,False,False,False,False,False,False],[True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False],[False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False],[True,True,False,False,False,True,False,False,False,True,False,True,True,False,True,True],[True,True,True,False,False,False,True,False,False,False,False,True,True,False,True,True],[True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,False],[False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False],[False,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False],[True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True],[False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False],[True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True],[True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True],[True,True,True,False,False,False,True,True,False,False,True,False,False,False,True,True],[True,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True],[False,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False],[False,False,False,True,False,True,True,False,True,False,True,True,True,False,True,False],[False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,False],[False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,False],[False,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False],[False,False,True,False,True,False,True,False,False,True,False,True,True,True,True,True],[False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False],[False,False,False,True,False,True,True,True,False,False,False,True,True,True,True,True],[False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False],[False,True,False,True,False,True,False,False,True,False,False,False,True,True,False,True],[False,False,False,False,False,True,False,False,True,False,True,True,False,False,True,True],[True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False],[True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False],[True,True,True,False,True,False,False,True,False,True,False,False,False,True,True,False],[False,False,False,False,True,False,True,False,True,True,False,False,True,True,False,False],[False,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True],[True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True],[False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,True],[True,True,True,False,False,False,True,False,True,True,False,True,False,True,False,True],[True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,False],[True,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False],[True,True,True,True,True,False,True,True,True,False,False,False,False,False,False,True],[True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True],[False,True,True,True,True,False,True,False,False,True,False,False,True,False,True,False],[False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False],[True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,False],[True,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True],[True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True],[False,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False],[False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,True],[False,False,True,True,False,True,False,False,True,True,True,False,False,False,True,False],[False,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True],[True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True],[False,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True],[True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,False],[False,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True],[True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False],[False,True,False,True,False,False,True,True,False,False,True,False,True,True,False,False],[False,False,False,False,True,True,False,False,True,False,True,True,True,False,True,True],[False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False],[False,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True],[True,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False],[True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,False],[True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,False],[True,True,True,False,False,True,True,False,True,True,False,False,True,False,True,False],[False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,True],[True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True],[True,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False],[True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,True],[True,False,True,False,False,False,False,True,False,True,False,True,True,False,True,False],[True,True,True,False,True,False,False,True,True,False,False,True,True,False,False,False],[True,False,False,True,False,False,False,False,False,False,True,True,True,False,True,False],[True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False],[False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False],[True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True],[False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False],[True,False,False,False,True,False,False,False,True,False,True,False,False,True,True,False],[True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True],[True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True],[False,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False],[True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False],[False,False,False,False,True,True,True,True,False,False,True,False,False,False,False,True],[True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,False],[True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True],[False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,False],[False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False],[False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False],[True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True],[False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True],[True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True],[False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False],[True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True],[False,False,True,False,True,False,False,False,True,False,True,False,False,False,False,True],[False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,True],[True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True],[False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True],[True,False,False,True,False,True,False,True,True,False,False,True,True,False,False,True],[True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False],[True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False],[False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,False],[True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False],[True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True],[False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True],[True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,True],[False,False,False,True,False,False,True,True,False,False,True,False,True,False,True,False],[False,False,True,False,False,True,False,False,False,False,True,True,False,True,False,False],[True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False],[True,True,False,True,False,False,True,False,True,False,True,True,True,True,True,False],[True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True],[False,False,False,True,True,False,True,False,False,True,True,False,False,False,False,False],[False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True],[True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True],[False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,False],[True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True],[True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False],[True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False],[True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False],[False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,True],[False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False],[False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True],[True,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False],[False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False],[True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True],[True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False],[False,False,False,True,False,False,False,False,True,False,True,False,True,False,True,False],[True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,True],[False,True,False,True,True,False,True,False,True,False,False,False,False,True,False,True],[True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False],[False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False],[False,True,True,True,False,False,False,True,False,True,False,False,False,True,False,True],[True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True],[True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,True],[True,False,True,False,False,False,True,True,False,True,True,True,True,True,True,False],[False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False],[True,False,True,True,False,False,False,False,True,False,False,True,True,True,True,False],[True,True,True,False,False,False,True,False,True,False,False,False,True,False,True,False],[False,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True],[True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True],[False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,True],[False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,False],[False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True],[True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True],[True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False],[False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False],[True,False,True,False,False,False,False,True,True,True,False,False,False,True,False,False],[True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,False],[False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False],[True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True],[False,False,True,False,True,True,True,False,True,True,False,False,False,True,False,True],[True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True],[False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True],[True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False],[True,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False],[False,False,False,True,False,True,True,True,False,True,True,False,False,True,False,False],[True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False],[False,False,True,False,True,True,True,True,False,False,True,True,False,True,True,True],[True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,False],[False,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True],[True,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False],[False,True,False,True,False,True,False,False,True,True,True,True,False,False,True,False],[True,False,False,True,True,True,False,False,False,True,False,False,True,True,True,True],[True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,False],[False,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False],[False,False,True,False,True,True,False,True,False,True,True,True,True,False,True,True],[False,False,False,False,True,True,False,True,True,False,True,False,False,True,False,False],[True,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True],[False,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False],[False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True],[True,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False],[True,True,False,True,False,True,True,False,False,False,True,True,True,False,False,False],[True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False],[True,False,True,False,True,True,False,True,True,True,False,True,False,True,True,True],[False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,False],[True,True,False,False,False,False,False,True,False,False,False,False,True,False,True,False],[False,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False],[False,False,True,False,True,True,False,True,True,False,True,True,False,False,True,True],[False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False],[False,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False],[False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,False],[False,False,True,False,True,False,True,True,True,True,True,True,False,False,True,False],[True,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True],[True,True,True,True,True,False,False,True,True,True,False,True,True,True,True,False],[False,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False],[True,False,True,True,True,True,False,False,False,False,False,True,True,True,True,True],[False,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True],[True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,False],[False,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True],[True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True],[False,True,True,True,False,True,False,True,False,False,True,False,False,False,True,True],[True,False,True,False,False,False,True,False,False,True,False,False,True,False,True,True],[True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True],[False,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False],[True,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True],[False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False],[False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True],[True,False,False,False,True,True,False,False,False,False,True,True,False,True,True,False],[False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True],[False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False],[False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True],[True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True],[True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True],[True,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True],[True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False],[False,True,False,True,False,False,True,False,False,False,True,True,False,True,False,True],[True,True,True,True,False,False,True,True,False,False,False,True,True,True,True,True],[False,True,False,False,False,True,True,False,False,False,True,False,False,False,True,True],[True,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True],[True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False],[False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,True],[True,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False],[False,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False],[True,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True],[True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False],[True,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False],[True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,True],[False,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False],[True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False],[False,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False],[True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False],[False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,True],[False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True],[True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,False],[True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False],[True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True],[False,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False],[True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False],[False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,True],[True,True,False,False,True,False,True,True,False,False,True,False,False,False,True,True],[False,False,False,True,True,True,True,False,True,True,True,False,True,True,True,True],[False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False],[False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False],[False,True,True,False,True,True,False,True,True,False,False,False,False,False,False,False],[False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False],[False,True,False,True,False,False,False,False,False,True,False,False,True,False,False,False],[False,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True],[False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,True],[False,False,False,True,True,True,False,False,True,True,True,False,False,False,True,False],[True,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True],[False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True],[True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True],[False,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True],[False,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True],[True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,True],[True,False,True,False,True,False,False,False,True,False,False,False,True,True,False,True],[True,False,True,True,False,True,True,True,False,True,True,False,False,True,True,True],[True,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False],[True,False,True,True,True,False,False,True,True,False,False,True,True,True,True,False],[False,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True],[True,True,True,False,True,True,False,False,True,False,True,False,True,False,False,False],[True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False],[False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True],[False,True,True,False,True,True,False,True,True,True,False,False,True,False,False,True],[True,False,True,True,True,False,True,True,True,False,True,True,True,True,False,True],[True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False],[False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False],[True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,False],[True,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True],[True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,True],[True,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False],[False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False],[True,False,False,False,True,True,False,False,True,True,False,False,True,False,False,False],[True,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True],[False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False],[True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False],[False,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False],[True,False,False,True,False,True,True,False,False,False,True,True,False,True,True,True],[False,True,True,False,False,False,False,False,False,True,False,True,False,False,True,True],[False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False],[False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True],[False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,True],[True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False],[True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True],[False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,False],[False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True],[True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True],[False,True,False,False,False,True,False,False,False,False,False,True,True,False,True,False],[False,False,False,True,True,False,True,False,True,False,False,False,True,False,True,True],[True,True,True,False,False,False,False,True,False,False,False,True,True,True,True,True],[False,False,False,True,False,True,True,True,True,True,True,False,False,False,False,True],[False,True,True,False,True,False,True,False,False,False,True,True,True,True,False,True],[True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True],[True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,False],[False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,True],[False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,True],[False,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False],[True,False,True,True,True,True,False,True,True,True,False,False,True,True,True,True],[True,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True],[True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False],[False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True],[True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False],[True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True],[False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True],[False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True],[False,False,True,True,False,False,True,False,False,True,True,True,False,False,False,False],[False,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True],[False,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False],[True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False],[False,True,True,True,True,False,True,False,False,False,True,False,True,False,False,False],[True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True],[True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True],[False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True],[False,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False],[False,False,False,True,False,True,False,False,True,False,False,True,True,False,False,True],[False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False],[False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True],[False,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False],[False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,False],[True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True],[False,True,False,True,True,True,True,True,True,True,True,False,False,True,False,True],[False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True],[True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False],[True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False],[False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False],[True,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True],[True,False,True,False,False,False,False,True,False,False,True,True,True,True,True,False],[False,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True],[True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,True],[False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False]], dtype = "bool")#candidate|3061|(528, 16)|const|bool
bop_3062 = relay.multiply(call_3010.astype('int64'), relay.reshape(const_3061.astype('int64'), relay.shape_of(call_3010))) # shape=(528, 16)
bop_3065 = relay.multiply(call_3012.astype('int64'), relay.reshape(const_3061.astype('int64'), relay.shape_of(call_3012))) # shape=(528, 16)
bop_3076 = relay.logical_and(uop_3055.astype('bool'), relay.reshape(bop_3024.astype('bool'), relay.shape_of(uop_3055))) # shape=(8448,)
uop_3090 = relay.sqrt(uop_3035.astype('float64')) # shape=(8448,)
func_249_call = mod.get_global_var('func_249')
func_252_call = mutated_mod.get_global_var('func_252')
var_3095 = relay.var("var_3095", dtype = "float64", shape = (52,))#candidate|3095|(52,)|var|float64
call_3094 = func_249_call(relay.reshape(var_3095.astype('float64'), [1, 13, 4]))
call_3096 = func_249_call(relay.reshape(var_3095.astype('float64'), [1, 13, 4]))
bop_3102 = relay.greater(bop_3038.astype('bool'), call_3051.astype('bool')) # shape=(7, 6, 8448)
bop_3105 = relay.greater(bop_3041.astype('bool'), call_3053.astype('bool')) # shape=(7, 6, 8448)
output = relay.Tuple([call_3019,call_3043,const_3052,bop_3062,bop_3076,uop_3090,call_3094,var_3095,bop_3102,])
output2 = relay.Tuple([call_3020,call_3044,const_3052,bop_3065,bop_3076,uop_3090,call_3096,var_3095,bop_3105,])
func_3109 = relay.Function([var_3011,var_3095,], output)
mod['func_3109'] = func_3109
mod = relay.transform.InferType()(mod)
mutated_mod['func_3109'] = func_3109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3109_call = mutated_mod.get_global_var('func_3109')
var_3111 = relay.var("var_3111", dtype = "int32", shape = (8448,))#candidate|3111|(8448,)|var|int32
var_3112 = relay.var("var_3112", dtype = "float64", shape = (52,))#candidate|3112|(52,)|var|float64
call_3110 = func_3109_call(var_3111,var_3112,)
output = call_3110
func_3113 = relay.Function([var_3111,var_3112,], output)
mutated_mod['func_3113'] = func_3113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_837_call = mod.get_global_var('func_837')
func_838_call = mutated_mod.get_global_var('func_838')
call_3130 = relay.TupleGetItem(func_837_call(), 0)
call_3131 = relay.TupleGetItem(func_838_call(), 0)
output = relay.Tuple([call_3130,])
output2 = relay.Tuple([call_3131,])
func_3137 = relay.Function([], output)
mod['func_3137'] = func_3137
mod = relay.transform.InferType()(mod)
output = func_3137()
func_3138 = relay.Function([], output)
mutated_mod['func_3138'] = func_3138
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3154 = relay.const([[[-7.078757,-3.688313,7.149367,2.401848,-7.940393,-0.894462,-7.897975,5.674447,-9.837839,-3.132433,6.321490,-3.579657,7.400553,9.792204,-8.639572,1.449955],[8.779515,-9.606582,2.050495,2.606071,-3.118688,7.095535,-8.532467,-6.371960,-0.550464,7.851653,1.456299,-2.851755,-2.549877,9.482347,5.365442,-3.068236],[-3.727413,3.571085,-2.990215,0.756738,3.476891,3.179625,1.358123,-1.945510,2.466527,2.034617,5.552737,0.810942,-9.663385,-5.687637,1.599928,-7.720781],[1.666624,-1.931003,-4.343134,3.364501,-4.415970,-4.709631,-3.889873,-1.682045,-0.605356,9.409762,1.297325,-9.599517,5.824673,2.402781,4.643169,-2.487700],[-7.840048,-4.131766,-6.374887,-0.424960,-5.141952,-1.720244,3.869470,-5.260540,-8.119762,7.349845,9.087145,8.627709,-0.761250,0.013982,-2.275062,-8.127884],[-1.230159,-2.989765,-8.109772,-2.472592,7.260604,-0.643193,3.915354,-1.885926,-2.615271,0.195337,3.474423,-1.445466,-0.728217,5.771218,1.472910,5.587400],[-4.932409,-6.659107,-4.340996,-5.454602,8.132736,-7.694623,5.212730,-4.390076,-3.518027,8.036595,0.070804,7.647926,-6.760946,-0.222934,-9.061705,1.795605],[9.605030,-4.141091,-1.816541,6.997965,6.833495,-4.825786,3.458719,-6.833772,8.087870,3.041865,0.635550,-0.924229,-3.954900,7.086980,-1.361385,7.288349],[-6.063557,6.900807,-4.513107,-0.328252,-2.755526,7.836367,5.928114,2.738137,8.960869,1.651422,7.946552,-3.560162,8.147471,-2.276519,5.314284,6.043114],[4.880470,-4.097381,-9.025359,6.263085,-5.905838,-9.617326,-2.743616,-2.139363,-9.351623,-3.955000,7.531475,2.502655,-9.224510,-9.729894,-2.367754,2.396028]]], dtype = "float32")#candidate|3154|(1, 10, 16)|const|float32
uop_3155 = relay.cosh(const_3154.astype('float32')) # shape=(1, 10, 16)
output = uop_3155
output2 = uop_3155
func_3162 = relay.Function([], output)
mod['func_3162'] = func_3162
mod = relay.transform.InferType()(mod)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3162_call = mutated_mod.get_global_var('func_3162')
call_3163 = func_3162_call()
output = call_3163
func_3164 = relay.Function([], output)
mutated_mod['func_3164'] = func_3164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_3171 = relay.TupleGetItem(func_864_call(), 0)
call_3172 = relay.TupleGetItem(func_865_call(), 0)
func_1994_call = mod.get_global_var('func_1994')
func_1996_call = mutated_mod.get_global_var('func_1996')
var_3177 = relay.var("var_3177", dtype = "int32", shape = (8448, 1))#candidate|3177|(8448, 1)|var|int32
call_3176 = relay.TupleGetItem(func_1994_call(relay.reshape(var_3177.astype('int32'), [528, 16])), 2)
call_3178 = relay.TupleGetItem(func_1996_call(relay.reshape(var_3177.astype('int32'), [528, 16])), 2)
var_3181 = relay.var("var_3181", dtype = "bool", shape = (528, 16))#candidate|3181|(528, 16)|var|bool
bop_3182 = relay.less(call_3176.astype('bool'), relay.reshape(var_3181.astype('bool'), relay.shape_of(call_3176))) # shape=(528, 16)
bop_3185 = relay.less(call_3178.astype('bool'), relay.reshape(var_3181.astype('bool'), relay.shape_of(call_3178))) # shape=(528, 16)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_3186 = relay.TupleGetItem(func_864_call(), 0)
call_3187 = relay.TupleGetItem(func_865_call(), 0)
func_2668_call = mod.get_global_var('func_2668')
func_2670_call = mutated_mod.get_global_var('func_2670')
const_3192 = relay.const([4.504301,2.426320,-9.388154,-6.768874,2.798995,0.149663,-0.613701,-5.256640,-9.020983,7.493898,-2.329318,1.676960,0.068309,-6.617670,-1.302286,7.398644,-0.736905,-3.283128,3.185142,6.947953,-9.206030,-7.849922,-9.607842,9.295070,4.127270,1.192067,2.717753,-0.032392,9.144510,-8.613965,-1.751299,-3.093594,-1.264738,1.138603,9.910193,-2.183394,-7.314430,-5.444841,-7.088775,4.396918,1.724651,7.308788,3.433865,7.964674,-4.173547,-4.288555,7.938667,9.793151,8.369609,4.835113,8.683073,-0.099774,-9.749723,4.595049,-3.777492,1.446788,6.314837,7.514327,-9.893270,-8.407616,-1.538203,8.510043,2.046374,3.068529,2.379948,9.384271,4.602197,-7.199816,5.499552,-5.449522,7.861412,2.499341,-6.190275,5.190643,3.914717,-7.101877,0.166246,7.910096,-1.397789,3.027837,0.584483,3.799463,5.403923,-2.127091,3.243849,-4.555397,-5.593108,4.630653,-0.993317,8.430783,-1.210613,6.362873,1.383638,-5.522733,-6.990971,-6.034054,1.907316,-2.739239,0.494289,8.624093,5.119325,9.932919,0.834125,-9.583610,-6.362892,9.058886,1.406837,-9.543422,2.702694,1.722228,-5.824288,1.634862,8.295004,-2.967992,-6.030844,7.016291,-9.528001,-6.859976,8.246748,9.184565,-9.199351,9.807427,-2.652407,3.704126,-2.955580,3.337323,-6.759154,-3.114889,-1.371171,-0.556802,-2.579252,-9.413081,8.570881,-9.407354,9.070808,-8.264746,-6.710837,-0.240443,4.932759,-8.982027,-4.941820,-0.082468,-0.231963,-9.753458,-0.436001,-9.760511,-4.833212,7.665462,0.306590,-9.144334,2.155478,-1.170364,-7.851456,-0.930889,-6.567756,-1.504605,-6.395642,8.795857,6.456967,6.281250,5.390882,6.320989,-5.627248,2.829628,-3.338441,3.664262,-2.250924,-6.226078,-8.110826,-2.667826,1.637332,1.715630,3.664905,1.307590,-1.837898,-0.383900,-4.271595,8.308575,-4.693125,-9.032925,-2.473535,6.458986,3.418161,-0.942188,-5.625848,2.601993,3.029091,-4.564349,9.807755,1.234430,-6.106402,9.503285,9.756513,-0.326841,8.967357,2.010592,-7.694335,-1.220022,-5.533296,5.334150,0.030391,-5.341180,3.406768,-5.457175,-9.628687,-0.402858,5.527833,7.871196,-9.705286,7.635114,-1.488961,5.762918,1.308836,7.142018,-5.900223,-8.032593,5.065725,-5.951261,7.165965,8.151734,5.150542,8.104571,-6.864830,6.391340,-1.317206,-5.064476,0.033274,7.774344,-5.453776,-8.218560,7.747813,-5.326587,-2.435469,4.869203,0.894542,6.331523,-0.015764,-0.462536,-2.850902,9.697500,-2.395664,1.635644,5.477483,-3.822717,9.176760,8.275295,9.604482,9.445077,-6.051341,-0.889618,-2.901707,-2.938070,-0.281540,8.503454,9.495398,8.569124,-3.520973,9.534266,3.040862,1.265397,0.835242,3.413616,0.862751,-8.632803,8.675357,6.190152,-5.989935,-8.216763,-4.153356,1.141313,-8.480680,2.583579,-0.726255,-7.394698,-5.764448,-7.537557,-9.683448,6.158689,3.317455,-1.060599,-6.703582,-4.985824,8.653982,6.690674,-5.048794,5.153844,5.316245,8.003156,-0.028042,7.359906,-5.245719,-7.201169,2.283440,-4.524882,0.728092,9.323834,-6.150900,-5.632763,-0.084622,-1.430743,6.414722,1.063685,-5.461632,-0.932808,-3.988256,-3.902247,9.137464,-7.091149,-5.425326,5.377152,3.734684,1.596594,-4.196331,7.460381,3.990845,9.965777,-5.056385,7.074654,-3.655565,1.834886,4.901746,4.730941,-0.866852,6.952825,-3.433023,-5.782923,1.770393,4.604977,8.784844,-4.216470,-4.822588,2.019508,-6.805759,-0.417270,-9.514172,4.869428,1.655089,7.919247,-4.338186,-3.662550,3.161979,-9.036285,-9.520486,1.619362,4.655846,-6.477549,8.949663,-8.180371,-3.443057,-0.484543,-8.154135,-3.642784,-7.939775,8.989231,-7.924999,5.758890,-3.841120,-0.264149,-5.657631,-8.493228,5.920148,3.820029,4.825016,-7.390772,-3.511235,-7.733659,-7.119073,-4.436162,-1.348625,-2.905093,0.703833,0.615787,7.978546,-1.939650,0.344833,9.862627,8.869575,9.880057,-6.185654,-9.048528,4.543490,6.373682,1.056743,-0.578177,6.571472,-5.194045,2.078334,-5.549104,6.457616,-6.881430,-7.154785,7.960692,-9.289003,-0.511413,-2.833020,-9.383865,5.571862,-9.489388,6.117399,3.172429,5.448724,-1.932117,5.472003,5.915937,9.466718,6.610264,-7.962810,-4.589752,0.914992,9.869432,7.217612,1.716371,-8.664959,-3.753651,0.143158,-7.859224,5.459474,9.102799,-6.657407,-4.182757,-6.911398,5.555733,-9.640788,8.848668,-5.000045,-5.920803,-7.517137,-8.150363,1.841325,7.950411,-0.132268,4.481920,-4.451585,-8.410075,1.849237,-3.508121,-9.587064,-7.948258,0.350160,0.856146,6.307785,-7.413753,9.957227,-1.104207,9.518347,3.692502,2.062346,3.212898,0.775072,-3.049112,-1.380932,-8.647498,-6.866801,-7.267575,1.208166,1.551039,5.112855,-1.151408,5.540151,5.843235,-7.407600,-9.742606,5.716588,2.637696,-3.678167,3.716702,1.075442,3.441159,0.522083,2.774055,8.153886,8.272653,-5.510729,-9.795276,-3.066734,-9.785726,-9.197554,-0.974717,6.160282,6.746451,-8.154931,-5.365177,-7.491376,8.186396,5.316098,-7.660040,-0.038368,8.104938,-3.039465,-7.885416,9.305340,9.476860,4.134436,3.693032,-1.694766,-5.320367,-3.773251,-3.367568,2.928744,-1.793413,-1.387005,6.989855,-5.461434,-7.965453,-1.679913,8.719306,0.691177,-2.242808,-5.770164,6.432554,-2.974709,1.891072,6.242044,0.595790,-3.385343,3.429987,1.847532,8.350681,-1.415575,-0.490854,-1.721688,-4.207672,-7.334428,-9.180351,8.394130,9.889987,-2.529211,-3.868782,-8.011687,-1.242569,8.421564,-7.651546,-9.268581,-9.372268,9.235897,-1.155720,-0.698538,7.912343,7.309633,4.348626,-1.717041,-8.814425,-6.303286,-7.630666,-5.020555,4.423560,-9.297036,-2.789288,2.769493,7.741173,5.662738,-4.868518,5.294233,9.329543,1.835287,7.296827,5.916308,-1.348329,-4.536125,4.149718,8.703161,-8.849450,-7.728140,1.317404,3.604545,-3.503667,-2.082649,-0.938588,-9.810173,-8.242006,-2.856593,7.851830,6.657403,5.165212,-5.721687,-6.315977,4.639279,-1.220884,-2.973824,7.160028,-4.547989,-3.254012,-2.298809,-9.159054,-7.452533,6.716144,-0.351001,3.998949,-1.597578,7.363934,8.430629,1.332887,-1.575489,-5.013450,4.047587,-5.160830,3.368849,-4.944802,1.570425,-9.097157,0.922413,0.240676,0.619848,4.065867,5.269339,-5.121066,-1.509498,-4.221049,0.298866,0.049486,-9.179716,8.739238,9.577121,-5.187567,-3.316931,-2.396850,-1.145632,-2.297400,-9.401053,8.032263,-3.912468,-0.300785,5.318286,-9.271055,5.776223,1.428321,4.995620,0.845067,-5.393472,-1.208557], dtype = "float64")#candidate|3192|(630,)|const|float64
call_3191 = relay.TupleGetItem(func_2668_call(relay.reshape(const_3192.astype('float64'), [10, 63])), 0)
call_3193 = relay.TupleGetItem(func_2670_call(relay.reshape(const_3192.astype('float64'), [10, 63])), 0)
bop_3201 = relay.multiply(const_3192.astype('uint8'), var_3177.astype('uint8')) # shape=(8448, 630)
output = relay.Tuple([call_3171,bop_3182,call_3186,call_3191,bop_3201,])
output2 = relay.Tuple([call_3172,bop_3185,call_3187,call_3193,bop_3201,])
func_3205 = relay.Function([var_3177,var_3181,], output)
mod['func_3205'] = func_3205
mod = relay.transform.InferType()(mod)
var_3206 = relay.var("var_3206", dtype = "int32", shape = (8448, 1))#candidate|3206|(8448, 1)|var|int32
var_3207 = relay.var("var_3207", dtype = "bool", shape = (528, 16))#candidate|3207|(528, 16)|var|bool
output = func_3205(var_3206,var_3207,)
func_3208 = relay.Function([var_3206,var_3207,], output)
mutated_mod['func_3208'] = func_3208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1859_call = mod.get_global_var('func_1859')
func_1861_call = mutated_mod.get_global_var('func_1861')
call_3286 = relay.TupleGetItem(func_1859_call(), 0)
call_3287 = relay.TupleGetItem(func_1861_call(), 0)
func_2993_call = mod.get_global_var('func_2993')
func_2995_call = mutated_mod.get_global_var('func_2995')
call_3301 = func_2993_call()
call_3302 = func_2993_call()
bop_3308 = relay.maximum(call_3301.astype('int32'), call_3286.astype('int32')) # shape=(528, 1)
bop_3311 = relay.maximum(call_3302.astype('int32'), call_3287.astype('int32')) # shape=(528, 1)
output = relay.Tuple([bop_3308,])
output2 = relay.Tuple([bop_3311,])
func_3312 = relay.Function([], output)
mod['func_3312'] = func_3312
mod = relay.transform.InferType()(mod)
mutated_mod['func_3312'] = func_3312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3312_call = mutated_mod.get_global_var('func_3312')
call_3313 = func_3312_call()
output = call_3313
func_3314 = relay.Function([], output)
mutated_mod['func_3314'] = func_3314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2328_call = mod.get_global_var('func_2328')
func_2329_call = mutated_mod.get_global_var('func_2329')
call_3348 = relay.TupleGetItem(func_2328_call(), 0)
call_3349 = relay.TupleGetItem(func_2329_call(), 0)
output = call_3348
output2 = call_3349
func_3352 = relay.Function([], output)
mod['func_3352'] = func_3352
mod = relay.transform.InferType()(mod)
mutated_mod['func_3352'] = func_3352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mutated_mod.get_global_var('func_3352')
call_3353 = func_3352_call()
output = call_3353
func_3354 = relay.Function([], output)
mutated_mod['func_3354'] = func_3354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3312_call = mod.get_global_var('func_3312')
func_3314_call = mutated_mod.get_global_var('func_3314')
call_3393 = relay.TupleGetItem(func_3312_call(), 0)
call_3394 = relay.TupleGetItem(func_3314_call(), 0)
func_1607_call = mod.get_global_var('func_1607')
func_1611_call = mutated_mod.get_global_var('func_1611')
var_3396 = relay.var("var_3396", dtype = "int8", shape = ())#candidate|3396|()|var|int8
call_3395 = relay.TupleGetItem(func_1607_call(relay.reshape(var_3396.astype('int8'), []), relay.reshape(call_3393.astype('int8'), [528,]), ), 0)
call_3397 = relay.TupleGetItem(func_1611_call(relay.reshape(var_3396.astype('int8'), []), relay.reshape(call_3393.astype('int8'), [528,]), ), 0)
func_1036_call = mod.get_global_var('func_1036')
func_1039_call = mutated_mod.get_global_var('func_1039')
var_3400 = relay.var("var_3400", dtype = "int16", shape = (624,))#candidate|3400|(624,)|var|int16
call_3399 = relay.TupleGetItem(func_1036_call(relay.reshape(var_3400.astype('int16'), [624,])), 3)
call_3401 = relay.TupleGetItem(func_1039_call(relay.reshape(var_3400.astype('int16'), [624,])), 3)
bop_3423 = relay.subtract(call_3393.astype('uint64'), var_3396.astype('uint64')) # shape=(528, 1)
bop_3426 = relay.subtract(call_3394.astype('uint64'), var_3396.astype('uint64')) # shape=(528, 1)
func_2528_call = mod.get_global_var('func_2528')
func_2533_call = mutated_mod.get_global_var('func_2533')
const_3439 = relay.const([[7.250586,5.404815,-8.561374,-9.380134,0.823233,-9.248258,-1.448524,-4.964055,9.267048,-8.809227,6.068104,5.355564,8.857945,-9.288807,2.877970,2.871977,-2.828899,0.190292,-9.861689,-6.195861,2.860233,7.039987,-1.027394,-4.436009,-2.761184,8.007483,2.033353,-2.478270,-6.011248,9.818104,-8.534369,-1.871889,3.153060,-2.305994,3.041756,-0.223365,6.091625,1.249772,1.471289,4.444961,-1.389933,-7.142968,-4.858166,-7.319222,1.674354,-8.676890,2.167147,-3.409555,-0.728374,-7.856707,-2.060292,-8.895381,-5.677604,5.384761,8.157500,-2.499729,0.698106,7.447287,2.097472,-8.484707,4.155976,6.415342,-8.861073],[-0.683733,-1.947954,-9.216993,9.511469,-8.427409,-4.916457,1.468189,5.754256,2.761746,-3.235400,-2.061579,2.530492,3.655582,8.417587,7.007426,-5.594270,-7.298540,-6.498782,6.019231,9.994659,-6.350396,1.031106,8.739102,0.908188,-5.460369,3.485373,9.857135,9.115870,-7.857775,1.082455,-7.385857,0.286914,-5.635477,-1.818616,0.982103,-6.499129,0.272764,7.004875,-7.076179,-5.008456,7.994351,8.031457,-7.886287,0.714544,0.225464,-6.411479,-1.157721,-3.021879,0.175893,0.750984,-8.690720,-6.444496,1.694923,-7.357906,-2.103133,-1.353439,-4.650595,2.597166,9.106624,7.369992,5.475525,-8.248623,0.495178],[6.073650,6.628730,3.800806,-9.374051,-6.626960,-3.750795,2.789488,8.190225,-4.289443,8.163934,-2.003613,-2.911676,9.123151,6.701567,6.553707,-9.673679,5.487186,2.745578,4.029052,7.244807,-3.959418,-7.996123,-1.753233,6.687843,4.399240,-2.294764,4.423092,-9.426546,4.274657,6.500808,-0.299154,8.694059,7.716878,2.093264,-3.248490,-8.829068,-7.227799,-2.197734,-4.842684,9.028616,-8.149107,9.042401,-6.880500,-4.458516,8.102080,-5.492417,5.566955,-6.949178,7.655162,9.104089,-3.064209,-3.220238,-7.321853,7.294487,-3.447090,-5.052341,6.732065,1.602694,2.936941,6.229413,0.865591,3.879203,0.618782],[0.444886,0.424131,-4.667279,9.517982,-0.483526,0.499692,-2.820271,-2.410924,-0.418984,6.261034,6.287857,9.945262,9.644199,-1.087802,2.998601,-1.130597,-5.208531,1.877576,8.528344,9.000981,-8.609590,-9.887464,0.764573,7.792462,-6.528245,0.267686,-1.004577,-5.124132,0.206059,-9.226438,-5.685509,7.395667,-3.091445,7.634622,4.028733,2.923561,1.374885,5.219682,-1.414732,-8.324180,0.931594,-9.088014,-5.246510,8.735916,0.165685,-6.507676,5.900916,8.125864,-8.904911,7.963372,0.214217,0.479510,-8.909661,9.732307,6.426038,8.656993,9.477356,-4.953372,-9.885340,2.580462,1.315340,9.760020,-4.443198],[-7.390138,4.874486,-8.687943,-1.160189,7.923934,-3.835616,3.792376,-3.101152,-6.385251,-9.397687,0.816498,3.896167,3.138007,-8.236556,0.737401,6.241121,8.307443,2.068776,0.863515,3.650831,2.943690,-2.634934,-5.185647,7.384738,-9.308776,6.181047,4.635260,2.670617,-7.704893,7.580902,-3.822808,6.144352,-5.302232,7.995440,3.785648,-3.600950,1.122092,2.155841,-9.850616,-3.583427,3.832274,-3.728570,-9.619405,1.750639,-7.883721,-1.746762,8.697966,-1.702875,0.110896,9.367460,1.573816,2.548430,-9.897804,-9.224162,2.500869,-7.032985,-2.696228,5.276961,-7.794787,2.173037,-4.728943,7.544011,-5.928009],[9.067080,4.810408,-8.319041,-3.004361,4.084001,-1.921127,6.728833,7.240617,-8.636098,8.392298,-3.334591,-9.936440,-4.180173,-9.127948,-1.346250,5.211860,-2.821986,1.368427,9.918405,-4.349929,-9.223178,-8.821594,-2.634793,7.789449,-3.425022,3.965312,-5.351823,-8.314081,-3.672424,-1.146234,8.303887,-7.572657,3.478939,-8.016985,4.190285,5.469307,-7.837525,-9.595426,5.017073,1.919107,-2.391560,6.203705,4.634933,5.838225,-1.123915,-4.719153,3.893910,3.461164,-6.406552,-3.246571,-4.481760,-3.222755,3.680140,4.939199,-8.572200,-4.799497,3.840959,-6.686957,-5.797483,-2.786468,8.230686,-0.155403,0.417819],[4.153928,-4.682795,-3.453745,-3.009014,6.103831,7.253954,-6.308491,8.559112,-1.977412,-3.622617,0.712179,-3.439255,3.366193,6.716456,-4.597860,0.822861,-4.782268,6.658667,-2.039416,6.928600,-5.993724,0.858513,6.779150,3.511605,1.492685,-7.584523,-5.301504,0.744787,-2.890327,-9.946895,8.414171,3.204285,4.326539,-8.047468,-9.849445,8.529156,-6.900208,9.558235,2.059210,0.978086,9.447241,-0.425627,-9.673242,7.226464,-9.735154,-3.539546,-7.893933,9.003975,-3.449366,9.912202,-7.503082,2.186093,1.402036,-8.214827,-7.347424,-8.952115,6.444917,8.760918,-7.689546,-9.072173,-0.503693,-3.505935,-7.099257],[-6.448687,-6.901931,9.150454,-8.817914,2.791773,-8.590337,2.921895,-1.027586,-0.147803,-8.073191,9.856047,-6.706273,3.794612,-8.577301,7.690768,9.778012,-4.977938,-3.384404,-5.934343,-6.062967,-6.667650,6.535773,3.380449,8.998588,7.667522,-2.410844,-2.917022,4.268711,2.896193,-3.116611,-1.077861,0.673055,9.741428,9.991139,-9.971984,2.892307,-2.603793,-6.043496,-4.812313,8.860400,0.609981,7.466130,-5.573050,0.947129,-4.272083,0.782342,-2.656848,2.870875,-8.506662,4.427706,3.913999,3.605077,-5.037912,9.163398,-8.525692,-5.274041,-1.960666,3.517262,-8.640668,3.161868,-7.557680,-5.100969,1.671805],[-0.726610,-5.842579,-3.788118,3.006657,7.425711,-0.470811,-1.952034,1.538428,-2.833025,-7.414450,-6.746185,2.809516,-4.685262,-4.150704,-9.402954,-5.989462,5.543532,-0.749479,-0.792334,-9.564481,6.824290,2.532091,3.078820,0.672679,-0.098703,8.636838,-0.383534,-2.805738,9.095749,2.711049,-9.942774,-8.376488,-1.769756,-7.902617,-6.847036,-0.150851,6.691942,-1.479201,-6.530512,-1.532326,1.838624,-3.207421,-1.648774,-3.425883,2.840396,8.518348,-5.154044,-1.131594,6.757917,3.037181,5.698891,9.131589,8.554342,4.487013,0.569477,0.439167,9.953461,1.707914,-7.151172,4.377312,4.436404,-6.903265,8.027967],[5.854678,7.420197,-8.637697,-9.554766,6.046318,2.795965,-9.413079,-3.880024,-4.665494,9.099384,-3.376777,2.145840,7.758950,-1.364876,-2.715736,-7.612945,-9.092466,9.919106,-4.015400,7.246042,1.743293,-1.230845,1.425649,1.017658,6.433830,5.968140,2.482374,6.444067,-9.235702,-7.377767,0.764001,-8.716968,-2.958875,2.533948,1.905996,-4.619665,7.003219,-6.979149,8.167528,-1.488693,-4.761113,-6.219663,7.955101,3.063929,-3.641424,-1.618350,-6.656154,8.191711,-2.586048,-3.996165,5.163842,6.458275,4.262365,-7.203217,1.744636,1.770420,-8.107020,1.840619,-7.332408,3.961602,-0.933050,-8.695222,-5.667901]], dtype = "float64")#candidate|3439|(10, 63)|const|float64
call_3438 = relay.TupleGetItem(func_2528_call(relay.reshape(call_3395.astype('float32'), [2535,]), relay.reshape(const_3439.astype('float64'), [70, 9]), relay.reshape(call_3395.astype('float64'), [2535,]), ), 5)
call_3440 = relay.TupleGetItem(func_2533_call(relay.reshape(call_3395.astype('float32'), [2535,]), relay.reshape(const_3439.astype('float64'), [70, 9]), relay.reshape(call_3395.astype('float64'), [2535,]), ), 5)
bop_3458 = relay.right_shift(const_3439.astype('uint32'), var_3396.astype('uint32')) # shape=(10, 63)
func_2603_call = mod.get_global_var('func_2603')
func_2604_call = mutated_mod.get_global_var('func_2604')
call_3463 = relay.TupleGetItem(func_2603_call(), 0)
call_3464 = relay.TupleGetItem(func_2604_call(), 0)
output = relay.Tuple([call_3395,call_3399,var_3400,bop_3423,call_3438,bop_3458,call_3463,])
output2 = relay.Tuple([call_3397,call_3401,var_3400,bop_3426,call_3440,bop_3458,call_3464,])
func_3467 = relay.Function([var_3396,var_3400,], output)
mod['func_3467'] = func_3467
mod = relay.transform.InferType()(mod)
var_3468 = relay.var("var_3468", dtype = "int8", shape = ())#candidate|3468|()|var|int8
var_3469 = relay.var("var_3469", dtype = "int16", shape = (624,))#candidate|3469|(624,)|var|int16
output = func_3467(var_3468,var_3469,)
func_3470 = relay.Function([var_3468,var_3469,], output)
mutated_mod['func_3470'] = func_3470
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3474 = relay.const([[[9,7,-2,-2,8,9,7,10,3,-7,-10,-10]],[[3,-5,-7,6,-8,2,10,3,7,-3,-6,-6]],[[-8,-5,-3,9,4,10,9,-9,-1,-7,4,10]],[[3,-6,6,-5,4,-3,6,-4,7,4,-9,5]]], dtype = "uint32")#candidate|3474|(4, 1, 12)|const|uint32
var_3475 = relay.var("var_3475", dtype = "uint32", shape = (4, 14, 12))#candidate|3475|(4, 14, 12)|var|uint32
bop_3476 = relay.bitwise_and(const_3474.astype('uint32'), var_3475.astype('uint32')) # shape=(4, 14, 12)
bop_3485 = relay.add(bop_3476.astype('uint64'), const_3474.astype('uint64')) # shape=(4, 14, 12)
bop_3493 = relay.not_equal(bop_3485.astype('bool'), relay.reshape(var_3475.astype('bool'), relay.shape_of(bop_3485))) # shape=(4, 14, 12)
uop_3516 = relay.sigmoid(bop_3485.astype('float64')) # shape=(4, 14, 12)
func_2130_call = mod.get_global_var('func_2130')
func_2132_call = mutated_mod.get_global_var('func_2132')
const_3520 = relay.const([[5.344375,-1.478320,-9.829583,9.246116,-4.594932,-0.143653,-6.183295,1.958473,8.080646,7.557694,9.465598,-4.173176,-9.926605,-5.756120,-2.481976,9.415317,-5.320025,-9.574041,8.849211,-9.405209,9.568780,-9.077033,-2.246077,1.235487,-7.206877,-2.885672,-8.394580,8.582779,-1.040900,0.534651,-7.983323,-8.829176,-8.117186,0.728844,-4.039595,1.188892,-7.651066,-9.132453,-6.860948,-1.109120,-8.695024,-8.965129],[5.190190,2.091324,3.572143,8.892456,-1.957732,-4.365747,-3.450952,-1.118142,-1.638238,-7.307790,-1.828693,5.879715,-0.757523,0.941311,-4.088682,4.619466,-1.826496,3.488976,5.205112,1.731355,-0.115223,7.043884,-0.962980,-2.763853,3.390743,3.658715,9.173022,-5.291542,0.014297,-2.691230,-1.118481,0.571858,-8.940453,-0.527066,5.293955,1.672505,-6.349128,-4.798565,6.926247,8.752591,4.316383,-7.630973],[8.719613,-9.425023,-6.564197,4.475073,-5.097785,4.710280,8.728096,4.226534,-9.733441,0.344475,3.148201,3.115813,-9.414274,3.029581,3.860601,-6.554171,8.971819,4.601322,9.790120,-9.343645,-6.868171,-6.548576,2.319996,-0.263995,7.868945,-5.642146,-1.793244,8.505983,-9.235196,-3.023765,-2.763635,2.630246,-6.641573,7.834214,7.653485,1.483039,-8.247025,1.254100,8.628328,1.419141,3.519088,3.026437]], dtype = "float32")#candidate|3520|(3, 42)|const|float32
call_3519 = relay.TupleGetItem(func_2130_call(relay.reshape(const_3520.astype('float32'), [14, 3, 3])), 1)
call_3521 = relay.TupleGetItem(func_2132_call(relay.reshape(const_3520.astype('float32'), [14, 3, 3])), 1)
func_2993_call = mod.get_global_var('func_2993')
func_2995_call = mutated_mod.get_global_var('func_2995')
call_3526 = func_2993_call()
call_3527 = func_2993_call()
func_1641_call = mod.get_global_var('func_1641')
func_1642_call = mutated_mod.get_global_var('func_1642')
call_3531 = func_1641_call()
call_3532 = func_1641_call()
output = relay.Tuple([bop_3493,uop_3516,call_3519,const_3520,call_3526,call_3531,])
output2 = relay.Tuple([bop_3493,uop_3516,call_3521,const_3520,call_3527,call_3532,])
func_3539 = relay.Function([var_3475,], output)
mod['func_3539'] = func_3539
mod = relay.transform.InferType()(mod)
mutated_mod['func_3539'] = func_3539
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3540 = relay.var("var_3540", dtype = "uint32", shape = (4, 14, 12))#candidate|3540|(4, 14, 12)|var|uint32
func_3539_call = mutated_mod.get_global_var('func_3539')
call_3541 = func_3539_call(var_3540)
output = call_3541
func_3542 = relay.Function([var_3540], output)
mutated_mod['func_3542'] = func_3542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1233_call = mod.get_global_var('func_1233')
func_1234_call = mutated_mod.get_global_var('func_1234')
call_3546 = func_1233_call()
call_3547 = func_1233_call()
var_3551 = relay.var("var_3551", dtype = "int32", shape = (528, 5))#candidate|3551|(528, 5)|var|int32
bop_3552 = relay.greater(call_3546.astype('bool'), var_3551.astype('bool')) # shape=(528, 5)
bop_3555 = relay.greater(call_3547.astype('bool'), var_3551.astype('bool')) # shape=(528, 5)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_3556 = relay.TupleGetItem(func_864_call(), 0)
call_3557 = relay.TupleGetItem(func_865_call(), 0)
bop_3562 = relay.bitwise_and(var_3551.astype('int8'), call_3546.astype('int8')) # shape=(528, 5)
bop_3565 = relay.bitwise_and(var_3551.astype('int8'), call_3547.astype('int8')) # shape=(528, 5)
output = relay.Tuple([bop_3552,call_3556,bop_3562,])
output2 = relay.Tuple([bop_3555,call_3557,bop_3565,])
func_3571 = relay.Function([var_3551,], output)
mod['func_3571'] = func_3571
mod = relay.transform.InferType()(mod)
var_3572 = relay.var("var_3572", dtype = "int32", shape = (528, 5))#candidate|3572|(528, 5)|var|int32
output = func_3571(var_3572)
func_3573 = relay.Function([var_3572], output)
mutated_mod['func_3573'] = func_3573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1641_call = mod.get_global_var('func_1641')
func_1642_call = mutated_mod.get_global_var('func_1642')
call_3588 = func_1641_call()
call_3589 = func_1641_call()
var_3591 = relay.var("var_3591", dtype = "int8", shape = (13, 9, 7))#candidate|3591|(13, 9, 7)|var|int8
bop_3592 = relay.left_shift(call_3588.astype('uint8'), var_3591.astype('uint8')) # shape=(13, 9, 7)
bop_3595 = relay.left_shift(call_3589.astype('uint8'), var_3591.astype('uint8')) # shape=(13, 9, 7)
func_3467_call = mod.get_global_var('func_3467')
func_3470_call = mutated_mod.get_global_var('func_3470')
var_3600 = relay.var("var_3600", dtype = "int16", shape = (624,))#candidate|3600|(624,)|var|int16
call_3599 = relay.TupleGetItem(func_3467_call(relay.reshape(call_3588.astype('int8'), []), relay.reshape(var_3600.astype('int16'), [624,]), ), 1)
call_3601 = relay.TupleGetItem(func_3470_call(relay.reshape(call_3588.astype('int8'), []), relay.reshape(var_3600.astype('int16'), [624,]), ), 1)
output = relay.Tuple([bop_3592,call_3599,var_3600,])
output2 = relay.Tuple([bop_3595,call_3601,var_3600,])
func_3616 = relay.Function([var_3591,var_3600,], output)
mod['func_3616'] = func_3616
mod = relay.transform.InferType()(mod)
mutated_mod['func_3616'] = func_3616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3616_call = mutated_mod.get_global_var('func_3616')
var_3618 = relay.var("var_3618", dtype = "int8", shape = (13, 9, 7))#candidate|3618|(13, 9, 7)|var|int8
var_3619 = relay.var("var_3619", dtype = "int16", shape = (624,))#candidate|3619|(624,)|var|int16
call_3617 = func_3616_call(var_3618,var_3619,)
output = call_3617
func_3620 = relay.Function([var_3618,var_3619,], output)
mutated_mod['func_3620'] = func_3620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_3629 = relay.TupleGetItem(func_1115_call(), 1)
call_3630 = relay.TupleGetItem(func_1116_call(), 1)
func_3467_call = mod.get_global_var('func_3467')
func_3470_call = mutated_mod.get_global_var('func_3470')
const_3648 = relay.const(-1, dtype = "int8")#candidate|3648|()|const|int8
var_3649 = relay.var("var_3649", dtype = "int16", shape = (624,))#candidate|3649|(624,)|var|int16
call_3647 = relay.TupleGetItem(func_3467_call(relay.reshape(const_3648.astype('int8'), []), relay.reshape(var_3649.astype('int16'), [624,]), ), 3)
call_3650 = relay.TupleGetItem(func_3470_call(relay.reshape(const_3648.astype('int8'), []), relay.reshape(var_3649.astype('int16'), [624,]), ), 3)
bop_3651 = relay.add(const_3648.astype('float64'), call_3647.astype('float64')) # shape=(528, 1)
bop_3654 = relay.add(const_3648.astype('float64'), call_3650.astype('float64')) # shape=(528, 1)
output = relay.Tuple([call_3629,var_3649,bop_3651,])
output2 = relay.Tuple([call_3630,var_3649,bop_3654,])
func_3657 = relay.Function([var_3649,], output)
mod['func_3657'] = func_3657
mod = relay.transform.InferType()(mod)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3658 = relay.var("var_3658", dtype = "int16", shape = (624,))#candidate|3658|(624,)|var|int16
func_3657_call = mutated_mod.get_global_var('func_3657')
call_3659 = func_3657_call(var_3658)
output = call_3659
func_3660 = relay.Function([var_3658], output)
mutated_mod['func_3660'] = func_3660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_3668 = func_3352_call()
call_3669 = func_3352_call()
output = relay.Tuple([call_3668,])
output2 = relay.Tuple([call_3669,])
func_3671 = relay.Function([], output)
mod['func_3671'] = func_3671
mod = relay.transform.InferType()(mod)
mutated_mod['func_3671'] = func_3671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3671_call = mutated_mod.get_global_var('func_3671')
call_3672 = func_3671_call()
output = call_3672
func_3673 = relay.Function([], output)
mutated_mod['func_3673'] = func_3673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1233_call = mod.get_global_var('func_1233')
func_1234_call = mutated_mod.get_global_var('func_1234')
call_3693 = func_1233_call()
call_3694 = func_1233_call()
output = relay.Tuple([call_3693,])
output2 = relay.Tuple([call_3694,])
func_3706 = relay.Function([], output)
mod['func_3706'] = func_3706
mod = relay.transform.InferType()(mod)
mutated_mod['func_3706'] = func_3706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3706_call = mutated_mod.get_global_var('func_3706')
call_3707 = func_3706_call()
output = call_3707
func_3708 = relay.Function([], output)
mutated_mod['func_3708'] = func_3708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2993_call = mod.get_global_var('func_2993')
func_2995_call = mutated_mod.get_global_var('func_2995')
call_3717 = func_2993_call()
call_3718 = func_2993_call()
uop_3724 = relay.log(call_3717.astype('float32')) # shape=(528, 1)
uop_3726 = relay.log(call_3718.astype('float32')) # shape=(528, 1)
output = relay.Tuple([uop_3724,])
output2 = relay.Tuple([uop_3726,])
func_3731 = relay.Function([], output)
mod['func_3731'] = func_3731
mod = relay.transform.InferType()(mod)
mutated_mod['func_3731'] = func_3731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3731_call = mutated_mod.get_global_var('func_3731')
call_3732 = func_3731_call()
output = call_3732
func_3733 = relay.Function([], output)
mutated_mod['func_3733'] = func_3733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1164_call = mod.get_global_var('func_1164')
func_1165_call = mutated_mod.get_global_var('func_1165')
call_3744 = func_1164_call()
call_3745 = func_1164_call()
func_1825_call = mod.get_global_var('func_1825')
func_1829_call = mutated_mod.get_global_var('func_1829')
const_3775 = relay.const([[7.246330,9.929596,-1.689077],[-7.087452,-6.963263,-7.091312],[-7.612973,1.784704,2.932969],[-2.122056,2.622298,-4.308120],[-4.829953,-5.854164,-2.085760],[1.087884,9.542545,-8.865398],[-0.602439,-0.711588,5.214901],[-1.279176,2.791031,-3.550194],[3.093498,8.217606,-7.931131],[-7.429968,-7.540335,7.871928],[-7.301458,-9.354553,3.894727],[7.964869,-0.844342,-7.219050],[1.251128,2.592028,-9.120116],[0.858822,-2.934886,-4.356916],[-2.429693,3.298983,1.742066],[6.102297,5.824187,1.889800],[-6.698693,-2.744506,-9.408579],[2.847296,-0.948357,-1.297321],[-5.070520,-5.666380,2.927353],[6.062327,7.592244,-8.408768],[0.259753,-0.259829,6.174780],[6.476834,5.163752,-7.484425],[-1.779298,6.607963,-2.298554],[0.126548,3.249614,9.680101],[-7.228741,-6.883653,6.746175],[-9.674404,5.806866,-3.514807],[5.025595,-2.403263,3.381767],[-1.794343,-1.428369,-8.988043],[-4.932222,-9.107883,-4.278128],[-1.666627,-2.677676,-1.012728],[1.838481,1.629811,-4.958462],[0.464675,9.859800,-3.832265],[1.479102,5.584779,-7.101729],[-7.265400,5.485478,-9.181912],[4.477711,2.672595,9.958621],[1.260786,-8.821163,4.603277],[-1.967900,-4.988742,3.876834],[0.285166,-4.841700,-0.546447],[-2.874574,9.595552,0.912765],[6.728873,-9.358364,3.877874],[8.428287,-7.803425,6.361200],[-1.106045,-7.544571,0.777209],[5.645426,-9.642006,9.215022],[-4.785435,-5.363611,-7.182836],[7.769457,-1.096470,-5.497685],[5.673463,-7.152824,9.932361],[-6.951318,-0.250857,6.123554],[-8.702331,-4.691672,-2.790404],[8.169220,2.697588,-1.753666],[-5.097788,-1.660503,0.537104],[-3.391448,-0.046185,-4.421087],[-4.009799,4.519467,9.502029],[-1.160862,1.581439,2.175437],[1.656921,-0.158984,-8.781160],[-2.503550,-9.143992,4.475939],[8.314875,-6.841411,-8.825756],[8.630457,9.254015,7.218501],[8.303319,-3.619709,-1.350255],[-7.805843,2.855955,8.160902],[8.279772,-2.798365,-6.182426],[9.226260,0.523287,4.573743],[-2.570214,-0.907188,9.724778],[7.915232,2.181555,8.681650],[4.510752,0.459860,-7.623812],[-7.237867,-1.983975,9.065130],[-0.436034,-5.367753,-4.269281],[4.885871,9.382113,7.967011],[-9.087642,0.559609,-4.950994],[9.875180,3.605786,-2.289161],[5.222316,6.768331,4.929383],[-7.100951,-6.568658,5.018853],[-7.976048,4.046130,-2.426546],[-6.171807,5.439096,6.811393],[-1.420881,9.616467,4.197767],[6.952476,-6.684108,1.905795],[8.653470,0.858436,-6.240599],[7.592603,-0.071890,-8.563323],[2.291999,8.477237,4.123596],[-5.018562,7.907147,0.862812],[-1.746072,-9.695074,2.995420],[-1.380341,0.483585,-8.265342],[7.672478,0.801360,6.333457],[-6.498899,-6.802725,1.712631],[-7.477452,-6.601827,-5.292529],[5.530806,-5.509576,8.634714],[7.073043,4.587409,-9.572878],[-2.777877,2.427680,7.323397],[-5.868636,2.394686,9.082461],[-4.537063,-2.202782,6.546760],[-9.980868,9.800046,-8.020784],[-7.093839,8.991248,0.862401],[-7.434549,5.132555,3.958467],[-8.235438,-3.454041,-2.382665],[-6.472344,-9.277776,9.710674],[7.030129,-4.663499,0.368133],[-3.127776,-5.911986,7.693255],[8.000460,9.883783,4.538162],[5.073789,-4.885392,1.070763],[1.787519,8.848375,-4.345981],[8.954449,-2.535887,3.778221],[3.147999,-2.028910,7.632040],[6.254644,9.653455,7.095636],[1.425039,-4.060212,-4.570455],[-9.935372,3.780445,2.192950],[5.647550,-3.800490,-9.027984],[3.933124,8.476841,2.283192],[2.839370,0.348528,-9.522150],[5.399785,6.950110,3.521356],[9.277833,9.425925,-6.546739],[-6.476642,3.661254,0.900157],[-2.124851,3.120607,-1.581601],[-6.462621,5.120036,-5.638462],[-0.130250,0.975115,6.534676],[-5.686429,0.988054,-7.509179],[-6.081865,4.768094,7.920844],[-9.426938,8.686112,9.254094],[-0.173825,8.266992,5.453012],[9.908954,8.053538,1.991502],[-6.471096,3.180322,2.487574],[5.933738,-0.493856,8.186996],[4.865119,-6.092723,-3.495164],[0.167279,9.413414,-6.606450],[-2.651462,2.467510,8.052640],[4.906998,-2.112478,7.291884],[-4.349984,9.292797,7.880903],[-6.909156,-2.431450,7.406978],[-4.700366,-4.243109,6.664701],[-4.521051,-2.632427,6.652995],[-1.337937,6.142795,1.240060],[-5.037611,1.188491,-4.692269],[-1.622646,-7.296098,9.447610],[7.502164,-5.435012,-0.254932],[9.521735,5.483410,-7.554936],[7.811595,3.340827,0.221955],[7.631165,-9.326465,2.611755],[9.568939,5.851138,5.512456],[1.616412,-6.115635,-2.582256],[3.282241,9.310043,2.537051],[5.229255,-8.795449,-0.550412],[0.033590,2.260194,-3.559633],[-2.970110,2.831872,8.186022],[4.238057,0.414216,-1.785040],[-7.485588,5.537522,6.303106],[8.296684,3.853263,0.842814],[3.022773,7.261696,1.114520],[9.190510,5.479515,7.818888],[1.799145,4.599755,2.059536],[-6.052845,4.369323,1.886850],[1.070472,0.330871,4.783673],[-4.302606,7.754851,0.115386],[7.814300,6.701376,8.048908],[-3.116147,1.278922,-2.948990],[9.560895,-3.131721,-9.810670],[4.865617,-0.582477,3.910084],[-4.614995,-8.205822,1.657553],[-5.196889,-6.759277,-3.914331],[-4.689133,2.163821,-9.193956],[-0.810581,-1.827312,4.572863],[3.046057,-5.413502,6.912822],[4.557196,4.754303,-9.076993],[0.361189,-5.607966,-3.770530],[-0.442101,1.363779,-2.486460],[9.011477,5.133452,4.290017],[-5.941236,-9.929414,-2.651374],[-6.863337,1.371460,0.432778],[3.490614,-7.544259,-3.312303],[-3.529339,3.989797,-4.817834],[1.847321,0.106785,-3.295940],[5.437056,5.564573,5.419619],[-5.949845,3.640265,-6.636599],[0.474182,0.862647,3.305222],[-3.919204,-3.387466,6.739782],[7.580874,-3.601908,0.904464],[6.474505,-0.998218,-1.456860],[-5.250408,7.758561,-9.389959],[-4.677047,7.369723,4.357582],[0.627061,-2.321005,-7.071040],[1.978139,7.933641,-4.715509],[-4.868179,2.729466,-2.820918],[-1.273683,-8.303546,-5.210976],[7.755597,-5.472096,-1.643049],[5.937286,9.405132,-0.755045],[0.846665,3.028578,7.553995],[-3.111948,7.171955,-1.360962],[6.969462,-7.865247,5.282162],[7.918512,1.719432,5.571273],[1.521395,-8.599428,2.810286],[-9.604269,-6.964559,9.233718],[6.231120,3.419020,7.673284],[-0.053846,-9.523744,7.196712],[4.651359,2.316366,-0.515532],[5.357065,7.802940,3.323004],[-5.664895,-0.056850,0.272631],[-0.670749,4.058734,-8.043705],[-9.659885,2.297482,0.025641],[-9.552412,2.925588,-2.601279],[-7.022313,-8.616748,8.736669],[-6.784255,5.003874,-7.013019],[-2.397252,-4.451292,-2.634823],[8.700682,7.857820,7.479605],[0.293603,-4.732463,3.073152],[-3.117459,-5.150490,-4.172825],[-1.220359,3.643417,0.452469],[6.139222,-6.110489,1.785705],[-3.014387,6.998786,4.457531],[-9.208890,-9.359536,-7.754357],[2.288729,-6.077956,7.988801],[5.928870,7.824279,1.325601],[-8.655847,5.123627,-1.480886],[4.005610,1.025546,9.795542]], dtype = "float64")#candidate|3775|(210, 3)|const|float64
var_3776 = relay.var("var_3776", dtype = "int16", shape = (624,))#candidate|3776|(624,)|var|int16
call_3774 = relay.TupleGetItem(func_1825_call(relay.reshape(const_3775.astype('float64'), [630,]), relay.reshape(var_3776.astype('int16'), [624,]), ), 4)
call_3777 = relay.TupleGetItem(func_1829_call(relay.reshape(const_3775.astype('float64'), [630,]), relay.reshape(var_3776.astype('int16'), [624,]), ), 4)
func_2687_call = mod.get_global_var('func_2687')
func_2690_call = mutated_mod.get_global_var('func_2690')
const_3791 = relay.const([3.789455,4.962948,-8.818737,9.157599,-7.012878,9.542986,7.955490,8.986174,4.580158,-1.813794,-7.927298,4.768503,1.465172,4.794756,-2.233261,-0.097897,-9.435415,8.242114,-4.763577,7.946539,-5.727363,-9.219210,-7.894919,-4.759030,-7.665245,-4.624905,4.745744,-7.689949,-7.047781,6.465957,9.554623,-6.966088,5.023632,5.391359,3.839733,5.048188,3.965259,1.522110,7.844917,5.807368,-1.271097,5.806504,3.922025,8.034915,7.123676,-8.717018,-6.818312,-1.186800,-3.013932,8.624729,5.227582,0.772805,-6.839707,-6.155344,-1.914897,-5.418459,3.984470,-5.609679,5.009155,9.253588,-0.488354,4.081245,-2.613488,5.854708,4.580197,-8.751491,9.659004,0.942572,0.242228,1.845338,8.097945,-7.019283,1.146274,5.628476,-9.370624,-9.444419,-8.329377,-6.639890,3.314242,4.817228,-3.061303,5.026400,6.333677,-2.260031,-5.834282,1.963912,2.599272,5.977180,-2.933849,9.800257,9.361491,-5.709450,1.278757,-1.683608,-9.402672,-9.086401,-6.580989,-1.756879,-2.771679,-0.778631,-6.100810,6.457612,6.415363,7.869401,8.672896,3.058059,-9.520100,8.222299,-4.579831,-1.386923,1.339089,9.530109,7.720132,-0.271125,-0.530119,-0.091154,-3.593487,-9.330165,-3.689257,4.283886,-8.496983,-9.530257,-4.443230,3.554652,-4.931588,9.062208,-3.599584,2.922882,-0.780801,0.842771,-3.861844,-7.632997,0.363381,-3.871605,-8.384063,-6.886806,-0.566334,4.770948,-5.598593,9.511529,-9.591110,-2.267621,-6.437645,-4.612317,2.132928,2.194351,-2.366782,-4.865826,9.537169,5.966911,6.916973,-0.318786,5.224699,-5.868631,-3.525330,-2.034503,6.937401,7.505803,-6.738107,-3.241965,-6.687148,5.122450,7.675462,-0.889616,-3.366465,-2.407010,6.517321,-2.073875,-2.719914,-8.382765,-3.387937,-4.313124,-2.703164,4.677873,7.713827,-4.103586,-1.689027,-3.454198,-5.825188,-5.747924,9.851902,-1.051178,3.560081,2.940440,5.389276,7.004563,-4.228557,6.014620,0.939538,4.524165,1.799988,-6.195242,0.287092,6.513474,-3.987477,-2.427282,1.335294,-9.199516,1.629463,-8.842287,-3.141497,1.096966,2.663454,3.899816,9.014701,-1.761823,-1.947510,-0.660225,9.791751,1.287430,6.628726,6.893760,-8.481360,-5.126250,9.359732,0.809186,-9.175936,-6.785091,9.005141,-5.562054,-4.227202,0.883618,-7.375974,-4.892411,-7.966215,3.962777,-0.909446,-1.167201,-1.597828,-9.918922,6.286983,1.411535,-0.208405,-6.476082,8.771214,7.701524,5.328867,3.732671,-1.353951,8.212987,3.096621,3.269350,-4.794222,7.200580,-3.930831,-4.839951,7.222917,7.183787,-7.993722,7.902162,-7.069570,0.562887,-3.549784,7.779764,6.022218,6.454172,4.159185,-2.698487,-3.206606,9.548407,3.655285,-3.275808,1.780447,3.812242,1.443926,-1.598050,3.125292,3.387206,-0.865024,-8.333794,-7.980499,-9.860571,-2.875710,9.409251,-4.008333,3.739103,-8.402344,-8.122089,7.626643,8.795533,1.467113,7.701338,-4.800177,-2.405386,1.610517,-0.408473,-1.937207,-5.047526,1.051870,6.259440,-5.354876,7.825652,-2.562710,-4.432726,7.129295,1.015637,7.688034,8.277950,5.868622,-2.157322,4.667247,-9.908669,-8.446552,-4.494814,-0.465086,1.313764,4.985929,-2.795825,4.985125,9.251105,-8.465076,2.425302,0.994957,5.582380,-3.311581,-3.116231,-3.796807,3.613336,1.959457,-6.072140,9.299936,-3.807996,2.310808,-7.436339,6.621486,6.280799,-9.267192,-1.152070,-5.509976,8.484786,1.983192,-3.420167,-7.693041,-9.754864,3.110268,-4.305243,7.470827,3.958952,6.317143,1.953428,-2.295532,-5.675023,2.639251,-3.247272,1.804135,-1.321460,5.105362,-6.502725,-8.015473,7.450128,-8.991666,-6.516536,-1.141811,-5.107260,8.152449,5.491557,-2.698044,1.740073,-2.179546,6.377181,0.881340,-3.001668,-5.180711,-4.900688,-0.674851,0.178206,2.273894,-8.603059,9.126078,1.161509,-8.791906,-4.713105,8.846116,-2.850168,-9.619121,3.890623,2.798064,-1.445493,-8.141377,-3.617214,1.869639,7.969163,4.164259,-4.239611,-8.547046,1.850125,-8.538299,-7.897319,4.436823,4.269967,-4.417050,0.175624,0.595872,-1.994410,3.461599,-5.378099,-3.386413,4.596334,6.880300,-9.257882,-2.602386,-2.487957,-3.155505,-0.431249,5.792994,3.411227,-5.450259,5.403327,-3.552296,8.188045,-4.872236,-2.937430,-8.430174,-7.280823,-9.564592,4.680118,-8.328647,4.843619,-2.956829,3.933716,-4.132578,-1.448419,6.113500,-5.735282,1.456665,2.630678,8.036296,-2.759589,-7.226119,5.054248,6.145914,3.698359,-1.193120,-6.509379,-5.999228,-7.849142,-4.820519,7.701102,-3.239147,-2.691307,5.279901,9.110191,1.495024,-8.586528,-8.526110,-0.110789,3.896741,3.748670,0.143286,-5.133524,9.272438,-9.413996,7.517126,-5.174985,9.019607,6.312279,-5.636740,4.300275,-9.812880,5.253099,3.709430,8.908171,5.298132,-6.165153,-4.702888,-9.335289,8.606311,-8.995318,-0.071350,-4.456472,3.017234,5.522587,-3.860048,8.374977,-7.731451,9.539917,0.275482,-9.160979,8.016467,4.681760,-2.799924,-5.229437,-7.359332,-0.768768,7.046644,-9.093320,6.377846,-2.517565,-4.532022,-4.583042,8.226343,-5.088002,-7.885291,6.936609,0.905270,-5.427280,4.120364,4.484776,2.734605,-2.495500,-4.528853,7.130729,-8.417517,6.090661,5.753310,-6.113506,4.541821,6.580827,4.706671,2.308331,5.352832,-5.378517,-1.609003,-3.701339,-6.197707,-6.233819,1.799659,-8.216686,-8.660773,-6.562609,4.911049,-8.340643,4.824509,6.538566,-6.981315,5.077229,-7.245217,-1.605850,2.142782,-1.692502,-6.373413,-3.100171,-3.614435,8.060033,-2.390163,-6.417595,-7.324391,-6.315552,8.663867,3.843893,1.798779,9.377172,-8.168791,-5.765544,6.698070,8.421949,-3.002342,4.667997,-2.761416,5.460665,2.913440,0.294311,-0.414562,3.325594,0.931506,6.053359,-5.784149,-3.836779,7.004468,-8.324689,4.566638,-3.129342,-7.722945,-4.934322,-9.796109,1.477825,1.361728,-0.606217,4.993112,8.356916,-1.324773,6.406681,-7.035108,9.362324,-6.999766,-6.895437,-6.532198,5.071633,-8.252343,4.546022,9.280196,-4.674465,1.205683,-3.875935,9.335286,5.603471,3.572674,-8.713134,-1.692064,1.371211,0.723021,-6.830340,-2.397982,-2.534985,1.024673,3.992856,1.105760,-5.370568,-1.809735,7.263882,-9.111732,7.206890,4.413744,2.950289,-4.708555,-0.580826,-6.082107,7.890452,9.642495,-3.380241,2.222353,7.982029,1.311992,-4.565690,4.612727,8.085751,-2.587905,1.353228,-9.553572,-2.705935,6.187742,0.990657,6.259594,-6.473221,-8.006302,-1.657241,-2.696412,-3.439694,7.370173,-7.711086,-5.536227,-2.539095,-2.059240,-2.047742,1.261313,5.653204,-8.222465,-4.523192,5.614888,-0.244207,0.777550,-3.583428,-7.727374,-3.825763,3.676398,-1.732110,-4.840046,-9.904569,-7.832919,-2.132451,8.134276,-3.957595,-1.759645,-7.419107,5.183971,7.989415,9.773719,7.584876,9.090579,5.066680,-0.302144,-0.083122,-9.731365,1.742595,-7.041994,-8.024659,-3.700008,4.673894,-2.405885,-6.624565,-9.508447,-3.335871,2.829816,5.918838,4.895350,1.695492,5.370734,0.732413,3.853753,-7.511306,-9.520816,9.211354,-6.580658,7.921224,-3.594510,-4.630537,7.656060,-3.473811,-3.817154,9.295453,-0.229944,9.073668,4.969155,-7.191416,-3.679718,-7.323362,0.935240,7.495995,-2.735466,-5.738968,-5.343968,3.497154,-4.571132,9.986829,4.348646,-2.551138,7.049667,2.388299,-6.970641,2.109952,9.989028,8.165986,-0.125271,-0.498835,7.251954,6.586286,0.241795,-0.861653,6.116666,5.835538], dtype = "float32")#candidate|3791|(720,)|const|float32
call_3790 = func_2687_call(relay.reshape(const_3791.astype('float32'), [9, 16, 5]))
call_3792 = func_2687_call(relay.reshape(const_3791.astype('float32'), [9, 16, 5]))
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_3801 = relay.TupleGetItem(func_864_call(), 0)
call_3802 = relay.TupleGetItem(func_865_call(), 0)
uop_3809 = relay.sin(var_3776.astype('float32')) # shape=(624,)
func_630_call = mod.get_global_var('func_630')
func_634_call = mutated_mod.get_global_var('func_634')
const_3813 = relay.const([3.108761,-4.323263,-0.925452,-6.857245,1.768973,-4.988104,4.989313,-7.130822,-0.453191,-4.937057,-7.052690,2.886545,-1.818177,-2.570766,6.201170,-2.262556,5.313728,-6.628021,6.475853,0.257372,3.868723,0.232488,9.147240,-1.066618,-0.376639,5.207211,-1.866823,-9.264403,-2.271814,-1.089926,2.691315,-2.205608,0.007544,8.931212,-7.128454,7.794158,-1.237040,-0.539072,0.540919,8.925097,-2.882648,-5.503617,8.019930,7.599002,1.146435,7.208167,-2.112465,-3.710352,7.254255,-8.261821,-1.638358,7.487946,-3.217511,-8.572829,-1.573912,-8.983295,-0.949843,-7.972961,1.729416,1.930206,0.542304,-9.366702,8.280387,-6.284606,-0.528628,-3.740394,-3.071035,7.061440,2.671259,-1.118364,6.174206,-9.819648,-7.858450,8.396206,8.399959,-8.316150,1.467871,-8.506488,1.040531,6.445995,-1.646663,-7.936839,-1.487175,9.828038,5.233266,7.392721,-8.834020,-6.691954,-8.145984,4.202776,9.598259,1.826762,-1.110514,5.561208,-1.704761,3.199243,-3.467291,1.101412,4.110750,-1.168180,7.785166,2.914876,-6.589099,-0.934690,6.871081,-6.798627,7.305618,9.693981,5.058033,-5.660061,-5.548694,-6.950625,0.640296,9.031828,3.487426,-3.670640,6.630652,-4.164632,0.683348,1.305699,-5.145150,8.813256,3.117556,6.676871,5.673264,-9.218885,6.934970,-1.186328,-2.381787,0.488794,-5.690364,-4.997236,6.647032,9.682072,6.987539,0.572142,-4.705971,-6.993047,-5.958721,-3.439788,5.652995,1.808485,-6.682119,4.792091,3.972881,-1.281865,-8.791380,6.842120,2.800149,7.687616,9.340048,8.113833,1.328632,7.122282,1.045431,-9.034536,-5.015273,-0.547530,4.567145,-4.700664,-7.446627,-4.792565,3.041426,9.482563,-0.286081,-6.189775,2.606290,8.671313,9.060121,-5.783020,0.005823,6.838977,-7.669164,-2.111168,9.302896,-2.371673,3.629022,0.085967,5.504268,6.612725,1.098181,6.608593,1.565290,1.958014,-6.053424,-9.467784,-7.087215,5.768861,8.402250,6.567285,-2.649790,-2.743368,-4.529090,7.905583,-5.162448,-3.918566,-9.670354,0.710015,-4.518135,-5.293975,-3.204091,-5.135462,-8.159880,-2.980233,8.165431,-4.914523,4.896280,6.611543,-1.098928,3.573829,-9.850012,-1.408082,-3.522603,-7.929196,3.543653,2.325088,2.663884,-1.556004,0.732024,5.232673,-1.160965,1.944821,6.354371,-4.882470,8.320723,-8.677817,8.673107,-6.000766,-6.180201,-0.036226,6.713268,-0.167336,-6.739891,-1.890355,8.185965,-3.131396,5.747549,6.180350,4.863003,8.800330,-3.902837,-7.481949,-6.721917,2.221789,4.393744,-4.644261,6.326496,-9.535040,-6.500820,7.794149,-7.415000,1.983934,4.431639,-4.387613,-5.443196,9.108056,-3.524291,-3.680771,-1.955990,9.473527,-8.279615,-1.081134,-1.011608,1.216566,9.972237,-2.303904,-3.649243,-9.500944,1.054306,-4.840239,-7.065531,-3.690091,6.897956,4.763118,-3.393150,-3.441421,6.575185,-1.060820,2.686475,-2.272302], dtype = "float32")#candidate|3813|(280,)|const|float32
call_3812 = relay.TupleGetItem(func_630_call(relay.reshape(const_3813.astype('float32'), [5, 14, 4]), relay.reshape(uop_3809.astype('int16'), [12, 13, 4]), ), 2)
call_3814 = relay.TupleGetItem(func_634_call(relay.reshape(const_3813.astype('float32'), [5, 14, 4]), relay.reshape(uop_3809.astype('int16'), [12, 13, 4]), ), 2)
output = relay.Tuple([call_3744,call_3774,const_3775,call_3790,const_3791,call_3801,uop_3809,call_3812,const_3813,])
output2 = relay.Tuple([call_3745,call_3777,const_3775,call_3792,const_3791,call_3802,uop_3809,call_3814,const_3813,])
func_3825 = relay.Function([var_3776,], output)
mod['func_3825'] = func_3825
mod = relay.transform.InferType()(mod)
mutated_mod['func_3825'] = func_3825
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3826 = relay.var("var_3826", dtype = "int16", shape = (624,))#candidate|3826|(624,)|var|int16
func_3825_call = mutated_mod.get_global_var('func_3825')
call_3827 = func_3825_call(var_3826)
output = call_3827
func_3828 = relay.Function([var_3826], output)
mutated_mod['func_3828'] = func_3828
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3830 = relay.var("var_3830", dtype = "float32", shape = (8, 16, 8))#candidate|3830|(8, 16, 8)|var|float32
uop_3831 = relay.sigmoid(var_3830.astype('float32')) # shape=(8, 16, 8)
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_3838 = func_2890_call()
call_3839 = func_2890_call()
output = relay.Tuple([uop_3831,call_3838,])
output2 = relay.Tuple([uop_3831,call_3839,])
func_3841 = relay.Function([var_3830,], output)
mod['func_3841'] = func_3841
mod = relay.transform.InferType()(mod)
mutated_mod['func_3841'] = func_3841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3842 = relay.var("var_3842", dtype = "float32", shape = (8, 16, 8))#candidate|3842|(8, 16, 8)|var|float32
func_3841_call = mutated_mod.get_global_var('func_3841')
call_3843 = func_3841_call(var_3842)
output = call_3843
func_3844 = relay.Function([var_3842], output)
mutated_mod['func_3844'] = func_3844
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3863 = relay.const([[[-3.071211,1.576704,-8.560540,4.253935,-5.892379,-5.052649,0.981560,4.094526,-1.169550,-5.871238,-2.316029,1.993272],[-2.155964,-2.767932,-0.374693,3.112754,0.871045,-6.977443,-4.473374,-8.964909,-5.991345,-2.129585,6.819989,-6.482941],[-4.423119,0.492129,8.985439,2.299774,4.282867,-7.285528,3.219557,9.900081,8.717178,-2.220836,4.155096,-1.909885],[0.574498,-6.707765,-1.228030,3.638965,3.849329,0.901428,6.580467,-7.132901,9.274648,-7.157800,-5.414634,4.271620],[3.668466,-3.757533,-2.920213,-0.268844,2.895616,-5.900843,3.226489,-1.212395,9.674433,2.029210,-9.499577,0.387403],[1.147132,1.798984,4.900318,5.269592,-9.490299,-0.260500,-3.641923,6.794540,4.616760,4.137417,3.500963,7.821733],[6.214012,9.793601,-0.657927,0.479410,-8.566412,1.063651,-4.457051,-0.892886,-4.007166,3.386692,3.655001,-4.379005],[5.010042,1.986357,-7.539301,8.770183,9.862102,1.788649,1.838453,7.358730,3.390899,-2.168857,2.712286,1.232520],[9.697140,-3.994376,6.017548,3.704639,-9.279877,1.535472,9.127182,2.194926,4.095731,-4.788871,9.778009,-9.878026],[-9.963689,-4.152146,0.271602,-6.005592,0.669049,8.022785,3.073377,8.067096,9.128299,-8.815183,1.553331,3.252247],[2.630679,1.900989,-4.363823,3.231624,-3.408845,-3.438922,0.590871,-5.724752,-1.950370,6.657520,-8.586738,6.517326],[9.300073,-7.618443,8.250816,7.493663,5.215684,-1.440784,-0.831256,9.082216,0.943779,-2.803949,-1.375032,4.755141],[-8.758472,-9.647149,2.248185,-2.832179,-5.602937,8.789495,5.090999,-3.510385,-8.760825,-1.729533,-7.434326,1.291798],[4.550541,0.495817,4.616018,-0.098942,5.238740,-0.181596,1.711046,-3.825269,-5.184166,9.793101,-8.751866,-2.240237],[-8.242800,-0.982123,-8.491400,9.261197,9.138161,1.951396,1.226539,7.094844,7.243649,-9.033314,-7.229144,-1.565219]]], dtype = "float64")#candidate|3863|(1, 15, 12)|const|float64
uop_3864 = relay.log10(const_3863.astype('float64')) # shape=(1, 15, 12)
bop_3876 = relay.equal(uop_3864.astype('bool'), relay.reshape(const_3863.astype('bool'), relay.shape_of(uop_3864))) # shape=(1, 15, 12)
func_3137_call = mod.get_global_var('func_3137')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_3883 = relay.TupleGetItem(func_3137_call(), 0)
call_3884 = relay.TupleGetItem(func_3138_call(), 0)
output = relay.Tuple([bop_3876,call_3883,])
output2 = relay.Tuple([bop_3876,call_3884,])
func_3889 = relay.Function([], output)
mod['func_3889'] = func_3889
mod = relay.transform.InferType()(mod)
mutated_mod['func_3889'] = func_3889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3889_call = mutated_mod.get_global_var('func_3889')
call_3890 = func_3889_call()
output = call_3890
func_3891 = relay.Function([], output)
mutated_mod['func_3891'] = func_3891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2603_call = mod.get_global_var('func_2603')
func_2604_call = mutated_mod.get_global_var('func_2604')
call_3989 = relay.TupleGetItem(func_2603_call(), 0)
call_3990 = relay.TupleGetItem(func_2604_call(), 0)
output = call_3989
output2 = call_3990
func_3997 = relay.Function([], output)
mod['func_3997'] = func_3997
mod = relay.transform.InferType()(mod)
mutated_mod['func_3997'] = func_3997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3997_call = mutated_mod.get_global_var('func_3997')
call_3998 = func_3997_call()
output = call_3998
func_3999 = relay.Function([], output)
mutated_mod['func_3999'] = func_3999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2328_call = mod.get_global_var('func_2328')
func_2329_call = mutated_mod.get_global_var('func_2329')
call_4020 = relay.TupleGetItem(func_2328_call(), 0)
call_4021 = relay.TupleGetItem(func_2329_call(), 0)
output = call_4020
output2 = call_4021
func_4022 = relay.Function([], output)
mod['func_4022'] = func_4022
mod = relay.transform.InferType()(mod)
mutated_mod['func_4022'] = func_4022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4022_call = mutated_mod.get_global_var('func_4022')
call_4023 = func_4022_call()
output = call_4023
func_4024 = relay.Function([], output)
mutated_mod['func_4024'] = func_4024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1442_call = mod.get_global_var('func_1442')
func_1444_call = mutated_mod.get_global_var('func_1444')
call_4044 = relay.TupleGetItem(func_1442_call(), 2)
call_4045 = relay.TupleGetItem(func_1444_call(), 2)
var_4047 = relay.var("var_4047", dtype = "float32", shape = (2535,))#candidate|4047|(2535,)|var|float32
bop_4048 = relay.not_equal(call_4044.astype('bool'), relay.reshape(var_4047.astype('bool'), relay.shape_of(call_4044))) # shape=(2535,)
bop_4051 = relay.not_equal(call_4045.astype('bool'), relay.reshape(var_4047.astype('bool'), relay.shape_of(call_4045))) # shape=(2535,)
const_4053 = relay.const([True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,False,False], dtype = "bool")#candidate|4053|(2535,)|const|bool
bop_4054 = relay.bitwise_or(bop_4048.astype('int64'), relay.reshape(const_4053.astype('int64'), relay.shape_of(bop_4048))) # shape=(2535,)
bop_4057 = relay.bitwise_or(bop_4051.astype('int64'), relay.reshape(const_4053.astype('int64'), relay.shape_of(bop_4051))) # shape=(2535,)
output = relay.Tuple([bop_4054,])
output2 = relay.Tuple([bop_4057,])
func_4075 = relay.Function([var_4047,], output)
mod['func_4075'] = func_4075
mod = relay.transform.InferType()(mod)
mutated_mod['func_4075'] = func_4075
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4076 = relay.var("var_4076", dtype = "float32", shape = (2535,))#candidate|4076|(2535,)|var|float32
func_4075_call = mutated_mod.get_global_var('func_4075')
call_4077 = func_4075_call(var_4076)
output = call_4077
func_4078 = relay.Function([var_4076], output)
mutated_mod['func_4078'] = func_4078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4022_call = mod.get_global_var('func_4022')
func_4024_call = mutated_mod.get_global_var('func_4024')
call_4110 = func_4022_call()
call_4111 = func_4022_call()
func_3706_call = mod.get_global_var('func_3706')
func_3708_call = mutated_mod.get_global_var('func_3708')
call_4114 = relay.TupleGetItem(func_3706_call(), 0)
call_4115 = relay.TupleGetItem(func_3708_call(), 0)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_4118 = func_3352_call()
call_4119 = func_3352_call()
output = relay.Tuple([call_4110,call_4114,call_4118,])
output2 = relay.Tuple([call_4111,call_4115,call_4119,])
func_4121 = relay.Function([], output)
mod['func_4121'] = func_4121
mod = relay.transform.InferType()(mod)
mutated_mod['func_4121'] = func_4121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4121_call = mutated_mod.get_global_var('func_4121')
call_4122 = func_4121_call()
output = call_4122
func_4123 = relay.Function([], output)
mutated_mod['func_4123'] = func_4123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1233_call = mod.get_global_var('func_1233')
func_1234_call = mutated_mod.get_global_var('func_1234')
call_4191 = func_1233_call()
call_4192 = func_1233_call()
output = call_4191
output2 = call_4192
func_4203 = relay.Function([], output)
mod['func_4203'] = func_4203
mod = relay.transform.InferType()(mod)
mutated_mod['func_4203'] = func_4203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4203_call = mutated_mod.get_global_var('func_4203')
call_4204 = func_4203_call()
output = call_4204
func_4205 = relay.Function([], output)
mutated_mod['func_4205'] = func_4205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1859_call = mod.get_global_var('func_1859')
func_1861_call = mutated_mod.get_global_var('func_1861')
call_4250 = relay.TupleGetItem(func_1859_call(), 0)
call_4251 = relay.TupleGetItem(func_1861_call(), 0)
output = call_4250
output2 = call_4251
func_4254 = relay.Function([], output)
mod['func_4254'] = func_4254
mod = relay.transform.InferType()(mod)
output = func_4254()
func_4255 = relay.Function([], output)
mutated_mod['func_4255'] = func_4255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2163_call = mod.get_global_var('func_2163')
func_2165_call = mutated_mod.get_global_var('func_2165')
call_4259 = func_2163_call()
call_4260 = func_2163_call()
output = call_4259
output2 = call_4260
func_4264 = relay.Function([], output)
mod['func_4264'] = func_4264
mod = relay.transform.InferType()(mod)
mutated_mod['func_4264'] = func_4264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4264_call = mutated_mod.get_global_var('func_4264')
call_4265 = func_4264_call()
output = call_4265
func_4266 = relay.Function([], output)
mutated_mod['func_4266'] = func_4266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4278 = relay.var("var_4278", dtype = "int64", shape = ())#candidate|4278|()|var|int64
var_4279 = relay.var("var_4279", dtype = "int64", shape = (2, 14, 13))#candidate|4279|(2, 14, 13)|var|int64
bop_4280 = relay.multiply(var_4278.astype('int64'), var_4279.astype('int64')) # shape=(2, 14, 13)
output = bop_4280
output2 = bop_4280
func_4286 = relay.Function([var_4278,var_4279,], output)
mod['func_4286'] = func_4286
mod = relay.transform.InferType()(mod)
mutated_mod['func_4286'] = func_4286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4286_call = mutated_mod.get_global_var('func_4286')
var_4288 = relay.var("var_4288", dtype = "int64", shape = ())#candidate|4288|()|var|int64
var_4289 = relay.var("var_4289", dtype = "int64", shape = (2, 14, 13))#candidate|4289|(2, 14, 13)|var|int64
call_4287 = func_4286_call(var_4288,var_4289,)
output = call_4287
func_4290 = relay.Function([var_4288,var_4289,], output)
mutated_mod['func_4290'] = func_4290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4264_call = mod.get_global_var('func_4264')
func_4266_call = mutated_mod.get_global_var('func_4266')
call_4295 = func_4264_call()
call_4296 = func_4264_call()
func_3162_call = mod.get_global_var('func_3162')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_4299 = func_3162_call()
call_4300 = func_3162_call()
uop_4310 = relay.atan(call_4295.astype('float32')) # shape=(528, 1)
uop_4312 = relay.atan(call_4296.astype('float32')) # shape=(528, 1)
var_4319 = relay.var("var_4319", dtype = "float32", shape = (12, 10, 16))#candidate|4319|(12, 10, 16)|var|float32
bop_4320 = relay.maximum(call_4299.astype('int8'), var_4319.astype('int8')) # shape=(12, 10, 16)
bop_4323 = relay.maximum(call_4300.astype('int8'), var_4319.astype('int8')) # shape=(12, 10, 16)
output = relay.Tuple([uop_4310,bop_4320,])
output2 = relay.Tuple([uop_4312,bop_4323,])
func_4328 = relay.Function([var_4319,], output)
mod['func_4328'] = func_4328
mod = relay.transform.InferType()(mod)
var_4329 = relay.var("var_4329", dtype = "float32", shape = (12, 10, 16))#candidate|4329|(12, 10, 16)|var|float32
output = func_4328(var_4329)
func_4330 = relay.Function([var_4329], output)
mutated_mod['func_4330'] = func_4330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3312_call = mod.get_global_var('func_3312')
func_3314_call = mutated_mod.get_global_var('func_3314')
call_4349 = relay.TupleGetItem(func_3312_call(), 0)
call_4350 = relay.TupleGetItem(func_3314_call(), 0)
var_4351 = relay.var("var_4351", dtype = "int32", shape = (528, 1))#candidate|4351|(528, 1)|var|int32
bop_4352 = relay.less_equal(call_4349.astype('bool'), relay.reshape(var_4351.astype('bool'), relay.shape_of(call_4349))) # shape=(528, 1)
bop_4355 = relay.less_equal(call_4350.astype('bool'), relay.reshape(var_4351.astype('bool'), relay.shape_of(call_4350))) # shape=(528, 1)
output = bop_4352
output2 = bop_4355
func_4375 = relay.Function([var_4351,], output)
mod['func_4375'] = func_4375
mod = relay.transform.InferType()(mod)
mutated_mod['func_4375'] = func_4375
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4376 = relay.var("var_4376", dtype = "int32", shape = (528, 1))#candidate|4376|(528, 1)|var|int32
func_4375_call = mutated_mod.get_global_var('func_4375')
call_4377 = func_4375_call(var_4376)
output = call_4377
func_4378 = relay.Function([var_4376], output)
mutated_mod['func_4378'] = func_4378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1664_call = mod.get_global_var('func_1664')
func_1666_call = mutated_mod.get_global_var('func_1666')
call_4386 = func_1664_call()
call_4387 = func_1664_call()
func_3657_call = mod.get_global_var('func_3657')
func_3660_call = mutated_mod.get_global_var('func_3660')
var_4403 = relay.var("var_4403", dtype = "int16", shape = (2, 312))#candidate|4403|(2, 312)|var|int16
call_4402 = relay.TupleGetItem(func_3657_call(relay.reshape(var_4403.astype('int16'), [624,])), 1)
call_4404 = relay.TupleGetItem(func_3660_call(relay.reshape(var_4403.astype('int16'), [624,])), 1)
func_1540_call = mod.get_global_var('func_1540')
func_1543_call = mutated_mod.get_global_var('func_1543')
var_4419 = relay.var("var_4419", dtype = "float64", shape = (5, 126))#candidate|4419|(5, 126)|var|float64
call_4418 = relay.TupleGetItem(func_1540_call(relay.reshape(var_4419.astype('float64'), [7, 6, 15]), relay.reshape(var_4403.astype('int16'), [4, 156]), ), 2)
call_4420 = relay.TupleGetItem(func_1543_call(relay.reshape(var_4419.astype('float64'), [7, 6, 15]), relay.reshape(var_4403.astype('int16'), [4, 156]), ), 2)
output = relay.Tuple([call_4386,call_4402,var_4403,call_4418,var_4419,])
output2 = relay.Tuple([call_4387,call_4404,var_4403,call_4420,var_4419,])
func_4428 = relay.Function([var_4403,var_4419,], output)
mod['func_4428'] = func_4428
mod = relay.transform.InferType()(mod)
var_4429 = relay.var("var_4429", dtype = "int16", shape = (2, 312))#candidate|4429|(2, 312)|var|int16
var_4430 = relay.var("var_4430", dtype = "float64", shape = (5, 126))#candidate|4430|(5, 126)|var|float64
output = func_4428(var_4429,var_4430,)
func_4431 = relay.Function([var_4429,var_4430,], output)
mutated_mod['func_4431'] = func_4431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2993_call = mod.get_global_var('func_2993')
func_2995_call = mutated_mod.get_global_var('func_2995')
call_4510 = func_2993_call()
call_4511 = func_2993_call()
const_4513 = relay.const([[-8,8,9,3,-4,-8,3,9,5,4,-5,5,7],[2,-5,-9,9,6,-5,-10,1,-7,6,-8,2,-2],[-3,10,8,-7,4,-6,7,5,-5,3,2,10,4],[2,2,-2,-1,-4,-6,-2,10,5,1,9,4,-2],[10,6,-10,1,-2,-6,5,10,4,4,-1,1,-9],[-10,2,3,1,-7,10,2,1,5,-9,-9,-8,-7],[2,-10,6,-7,-9,-2,10,1,7,1,1,-8,-10],[3,10,4,-8,4,-6,4,-9,-8,-6,-10,2,3],[-5,4,-5,-3,9,-8,6,10,-1,7,-1,-1,-2],[9,2,7,-10,5,2,-2,-9,-7,-2,-5,3,5],[7,-10,6,-4,1,6,-6,9,-10,8,-3,4,-2],[-10,-3,9,-10,-10,10,5,-9,5,3,-3,6,2],[-4,9,-7,1,4,9,-10,-2,-7,4,-9,9,-2],[5,-2,1,5,-4,-9,-10,6,8,-2,-8,9,-3],[10,2,-6,4,-6,-6,5,3,4,8,7,-5,8],[8,-7,8,4,-3,-9,-8,10,-7,-3,-10,6,-4],[3,9,-7,9,-7,3,-6,-2,1,-9,-4,-7,-7],[-4,6,5,9,1,1,10,-4,3,-9,-5,5,-3],[-2,-7,-9,3,1,5,2,-6,5,-4,10,10,-2],[-2,-1,-7,-7,-6,-5,4,-7,-6,4,-5,-1,-7],[-6,-2,4,-5,-1,9,-7,6,6,-8,8,5,9],[2,-8,-2,-6,1,10,-6,-8,-9,-2,7,-7,-2],[-10,-9,-6,8,10,6,-4,-9,-5,-5,9,-6,-1],[8,7,-2,-8,3,-2,8,10,-1,3,1,2,-10],[2,-2,8,-10,4,9,3,-8,4,-8,-1,1,10],[3,9,-4,9,5,-8,2,7,3,-5,4,8,4],[-4,7,-8,-5,-4,-10,-7,-2,-8,-6,-6,-4,2],[8,1,-1,-6,8,-9,-1,-3,7,5,-4,2,9],[-9,-6,-10,-2,6,-7,-4,-8,-9,-5,1,-4,-1],[-1,-8,-10,-3,9,3,-8,7,-3,10,3,10,6],[1,-10,-8,-5,1,-3,-4,-10,4,-5,-3,3,10],[5,-5,5,-10,-8,4,-3,9,-1,-8,9,1,6],[-4,9,4,-6,-6,-7,-4,5,6,-6,5,9,10],[-5,2,7,10,-10,2,7,6,4,-7,-9,6,10],[-3,-5,7,-6,-3,6,8,2,-1,6,1,7,-9],[-2,4,-8,-3,9,-5,10,7,3,-2,-3,-2,-10],[1,2,6,6,-8,-6,-7,10,2,-10,-5,-4,8],[10,8,-2,7,-8,-9,-4,9,5,-7,-8,6,9],[4,8,3,-1,-6,-2,8,8,6,-2,4,-1,-6],[-1,10,4,7,6,-8,3,-10,8,8,-5,10,9],[9,-6,-2,7,-8,8,3,-5,10,4,6,-10,-10],[9,6,-3,-10,2,-7,-6,10,-2,5,-3,-9,5],[-10,8,-1,7,4,4,10,-6,5,-4,3,9,5],[-4,-10,10,5,-8,-4,6,9,-2,4,-8,7,5],[9,-9,-7,-1,-4,-8,6,7,-3,9,-1,-2,8],[-5,5,-6,-7,1,10,2,10,2,6,-9,2,-4],[9,-9,8,-4,7,9,5,-7,-1,-8,1,-10,-1],[9,-7,8,8,4,3,-1,6,-4,2,-7,-2,-6],[6,9,5,1,-10,-9,-8,8,-9,-2,1,-7,5],[5,-10,10,7,3,7,7,5,-8,8,-4,5,3],[10,-8,-5,-4,-4,-1,4,-6,-10,-10,8,7,6],[-5,7,-6,8,-4,8,8,-2,4,2,1,-4,6],[1,-8,-9,7,-10,3,-8,3,-6,-8,9,-6,-4],[5,-10,-10,6,-9,2,1,10,10,-2,3,-3,8],[-5,-4,-1,-8,10,1,7,-3,5,-9,-1,-2,3],[2,-10,-1,-3,7,4,7,3,-3,10,-9,3,10],[8,-6,-1,8,-7,8,4,5,9,5,2,4,6],[-6,1,3,-10,-2,-5,2,-7,-3,-4,-10,-2,6],[-3,-5,4,-7,7,-6,-7,8,9,8,-10,7,-1],[8,-10,-9,-5,-1,6,-5,8,-8,2,-10,5,6],[-9,9,10,5,-2,-4,-9,-7,4,7,-5,-8,-10],[7,6,-1,8,7,7,-9,-8,-7,9,3,-6,-5],[5,10,-4,3,2,-7,7,-8,7,5,-10,4,6],[3,10,-5,-3,-4,-3,7,2,6,9,4,-1,3],[1,1,7,-9,1,-3,10,9,4,-9,-1,6,10],[6,-10,3,6,-1,5,1,-6,8,2,9,7,-2],[6,-10,9,6,-7,-1,10,-8,-1,-10,-3,-5,10],[-9,-6,7,9,8,5,9,2,5,-3,-8,-1,-3],[1,-7,4,9,-9,9,4,-7,-1,1,6,7,8],[-4,-8,-1,-5,-1,6,-8,-8,4,4,1,6,3],[7,-1,-7,-1,-2,-7,3,-7,-10,6,1,8,-1],[-3,10,-9,7,-1,7,-1,-6,-7,6,2,6,-4],[7,-4,-2,5,4,10,-6,-6,-2,-3,5,1,-3],[-9,-10,7,6,6,-10,-1,-7,-6,1,9,10,4],[-1,1,6,6,-3,-5,-6,-7,4,-3,-7,7,2],[3,-7,9,2,5,-10,-5,-3,1,3,-8,-6,-9],[9,-2,1,2,2,7,1,-3,-2,5,-1,7,-6],[9,3,8,-6,-2,8,7,7,-6,-8,1,-9,5],[3,-4,-4,-5,-2,8,5,-5,6,-5,-5,-1,-1],[-1,7,2,10,2,-8,-3,-10,-8,-3,-8,-4,9],[-3,10,-3,4,-1,-1,-2,-4,-10,1,-8,-4,4],[9,4,-5,10,-1,-10,-2,-3,9,8,6,-10,7],[-7,-10,-3,-7,9,-4,-1,4,1,-10,3,-10,5],[-8,-4,-5,-7,4,-4,-9,-4,5,-9,5,-7,6],[6,-10,3,-6,-2,-2,5,-9,6,5,-2,-7,9],[10,-9,-7,-4,8,4,8,4,-5,5,-10,-3,-3],[5,-3,-4,-4,1,9,-8,-5,-10,10,-3,3,-8],[-9,9,-5,3,-1,-1,9,-6,-9,5,9,-7,7],[4,7,4,3,7,-8,-6,-7,-3,10,5,4,-3],[3,-1,-9,-4,-7,10,2,9,-8,-10,-3,1,2],[3,6,-10,8,-3,6,-1,6,4,1,-9,-8,5],[-1,7,4,9,7,-1,1,-2,-3,-8,4,-6,-5],[5,-3,-7,9,-8,-5,5,6,-9,-3,-4,1,3],[5,-4,8,6,-2,-8,6,-7,2,-4,-9,-7,-3],[-9,2,2,5,8,7,-5,-6,1,-6,4,2,8],[3,6,-6,-10,8,6,10,-5,7,-6,-2,4,7],[7,7,3,-3,-4,3,-7,-6,2,-6,-2,8,5],[-7,9,-8,5,4,-3,-6,-5,-1,-10,5,2,1],[-6,2,-1,2,-2,6,4,-5,8,4,-10,6,-3],[-2,-4,-10,3,2,10,-4,2,10,-2,5,-6,-5],[-5,6,4,4,2,10,6,9,-6,8,5,-6,-3],[-10,1,3,8,7,-9,2,6,7,4,8,3,9],[-4,-6,7,5,-1,5,10,-3,-4,-8,-7,-10,5],[2,-6,5,-8,-8,-6,5,1,-7,4,10,7,6],[-5,6,6,7,10,3,-10,3,4,-3,7,-6,2],[-9,-3,2,3,9,7,-3,-5,-5,7,-1,5,6],[4,5,9,4,8,4,-3,1,7,6,-2,9,8],[-10,3,-7,9,4,5,-4,1,4,-8,-5,1,-9],[4,-2,-9,7,2,1,-5,1,-1,3,-10,-10,-2],[-5,6,-7,3,5,6,4,-6,-9,-9,3,5,4],[2,6,-10,-10,5,9,9,-10,5,-2,8,-4,-2],[-9,-2,4,8,2,1,4,-9,5,-6,2,-8,2],[4,5,2,4,-8,10,8,-5,3,-4,4,-10,-2],[-2,7,-8,-10,8,8,8,10,-5,-1,5,2,6],[-7,-6,1,1,4,6,6,-5,-5,4,2,-2,-2],[7,-6,-9,1,4,-5,-7,-8,-2,8,1,-2,-9],[-4,7,9,9,-9,10,6,-4,-1,-2,6,5,5],[1,1,-4,-2,1,7,9,-10,9,-3,9,-6,2],[8,7,-3,1,-8,-1,5,4,-3,1,-9,9,3],[-5,2,-10,7,2,-8,6,-7,8,10,-6,-4,6],[9,-7,-5,1,2,-8,3,-10,4,-6,-4,4,8],[-7,-9,10,-8,10,9,-3,-7,9,2,10,7,6],[2,-5,2,-7,-5,-8,-1,-8,-2,-1,-1,-8,10],[-8,5,8,6,10,-9,8,5,7,-4,8,6,-4],[10,10,9,-6,-6,2,2,-9,-2,-5,2,-2,-6],[4,-10,9,-10,9,-10,6,1,-7,3,-2,-4,-1],[-8,5,-5,-8,-7,4,-7,-9,-8,-3,4,-2,6],[1,2,6,-4,5,-10,-4,-1,4,-3,-5,7,-2],[7,-7,9,-3,-9,2,-2,5,-2,-6,-9,-3,3],[-5,-7,3,-2,-9,10,1,-2,7,2,5,2,8],[-4,-6,-10,-1,-10,1,7,-1,1,-10,-7,-7,8],[-4,5,-2,3,-10,-10,8,-5,10,-10,-3,-6,-3],[10,1,-4,-8,7,10,9,10,8,7,-10,7,9],[8,3,-8,3,-10,-4,-6,10,8,-5,-9,10,-8],[3,10,-5,9,10,-10,-9,-10,3,-4,1,4,-4],[-10,-9,5,-6,-5,-3,-1,-4,-8,5,5,-3,1],[-3,-1,-8,-9,1,-8,-9,10,-9,-7,-3,-7,-2],[-4,-3,8,-2,1,1,-6,4,-9,-6,6,-9,-2],[9,-1,-2,-5,-2,9,5,-3,-9,-7,2,9,5],[5,10,6,-7,-10,4,5,2,1,3,-2,-4,7],[-4,-5,-2,5,-10,-1,8,7,9,-7,4,-8,3],[-3,-10,-10,-9,-5,7,-2,1,-3,7,2,-10,8],[-8,-2,10,-5,-8,-7,1,-7,-2,-5,-4,-3,-6],[10,-5,-9,7,-1,9,-7,4,-3,6,3,-8,-2],[-5,-5,7,7,4,-4,-1,9,-2,8,-2,10,8],[-7,-2,-1,1,9,1,-1,-4,-7,-1,-7,-3,-10],[-6,3,4,4,-9,4,-1,10,-1,-7,8,-1,10],[-4,5,-10,-4,6,-4,-5,-5,3,-2,-6,-5,-7],[8,-4,8,-5,-1,3,-9,5,-1,-6,-9,-2,5],[-5,2,-5,-10,1,6,10,-3,3,5,-5,8,5],[-4,2,5,-10,-9,-7,4,6,6,-5,10,10,8],[4,-1,-5,3,4,5,5,9,-3,-4,2,7,-8],[7,-4,3,1,4,9,-5,5,7,2,-4,10,3],[7,-1,-7,-2,3,9,-1,2,-10,3,5,-5,-9],[-1,8,-10,2,-9,10,-1,7,7,-1,-8,-5,6],[2,-6,-4,-9,-9,-7,-10,1,6,-3,10,-10,10],[-3,10,5,-3,-4,-8,-7,-2,9,1,-2,-1,-1],[-6,3,-1,-10,-6,-7,-6,3,-4,10,-5,7,-8],[-4,-5,-2,-5,6,-1,-1,1,-5,-6,8,9,5],[-6,3,-5,-3,-9,3,9,-4,-6,-9,-2,4,3],[8,-10,9,7,-10,-6,-3,9,2,5,-10,2,10],[4,-2,7,-2,-4,5,-2,6,-9,4,6,5,4],[4,7,-8,1,-9,-9,-5,1,-4,6,-10,10,-10],[1,-10,3,1,-10,-10,-8,-9,-9,9,4,-2,7],[5,7,4,3,5,9,-3,-4,10,-1,10,-3,9],[-6,10,-4,-3,-2,-8,-10,-10,-8,8,7,7,-8],[9,10,3,-10,1,9,6,-10,6,-9,9,-1,-1],[-8,8,5,-9,7,1,6,3,6,9,-4,-6,-3],[-10,3,-5,-8,-8,10,10,-9,5,4,3,5,-4],[8,2,4,-6,-3,-9,-3,6,4,9,8,1,1],[-10,7,-7,-3,-8,3,5,4,7,-10,-1,10,8],[-5,7,-4,-4,2,-7,2,-3,9,1,3,5,2],[8,7,7,6,7,3,-4,-3,-2,-8,2,-5,5],[2,3,-5,5,8,1,7,7,-9,7,-4,9,-3],[9,7,-10,-3,2,-6,9,8,-10,-8,-5,8,1],[10,-3,-2,-5,-8,7,-9,-1,-5,-1,-10,9,9],[-7,7,-8,7,-2,-4,9,3,5,-4,-7,5,-5],[8,-5,10,-4,9,4,5,-6,-4,-3,10,6,-2],[-4,-10,4,-2,7,-2,-9,-4,10,8,10,-10,6],[1,-5,-5,-2,7,-5,8,1,4,4,2,9,9],[-1,-2,-10,-10,-8,3,2,-9,-8,-10,6,10,1],[-3,1,10,10,8,-7,-2,-5,-8,-4,5,-1,-3],[-6,8,-5,8,2,6,3,9,-4,6,5,-6,8],[-2,-6,-9,-10,-2,9,-8,9,10,-10,2,9,3],[4,2,-3,-5,9,-3,-3,3,4,-1,-9,-7,-10],[-5,8,3,-9,6,-9,-3,4,-9,-1,-7,6,-8],[-8,6,-3,-7,8,5,-2,1,1,-2,-10,-2,-5],[-5,-8,8,9,4,-2,5,10,9,-2,-3,-6,9],[-8,-8,3,-6,6,9,-5,-7,5,-8,3,-4,10],[9,-6,2,3,-7,-3,7,4,-5,10,-7,-8,-7],[2,8,-3,-8,5,-3,9,-5,2,4,-10,6,-4],[3,7,3,-5,3,-7,-7,10,3,9,-4,9,-6],[6,9,4,-2,-5,-2,3,8,-6,-4,-6,-6,2],[5,-7,-2,-4,4,4,1,-8,-10,8,-3,-3,-1],[-2,4,-10,-9,4,1,-4,-6,-9,-8,9,10,-3],[4,-9,-7,-5,-9,1,-1,9,1,-4,-2,3,2],[5,3,-4,-6,-3,6,-3,10,-10,9,10,-3,-8],[-9,-4,-6,2,8,6,1,-6,-5,9,-5,6,-10],[-5,-5,9,-7,-5,-3,2,-5,7,6,-10,-4,-8],[-9,4,-5,6,5,1,10,7,-5,7,7,-3,-7],[8,5,2,-2,-5,7,-4,7,-6,-5,2,-2,-9],[3,6,6,-1,9,5,10,-8,-1,1,10,-9,-10],[5,2,-3,-6,4,2,-5,1,-10,-9,-1,-1,-2],[-10,7,4,2,-6,8,5,-7,1,5,9,-4,4],[-3,-6,7,6,5,-8,5,-3,9,6,4,6,-9],[7,-7,9,-7,5,-2,-9,-2,-6,-2,-1,-9,-5],[-6,2,-9,-9,9,6,-4,1,-5,-4,9,3,1],[10,-3,-4,-9,-4,-5,-5,-4,2,4,-3,6,-6],[-7,4,-5,7,3,-6,-8,-9,7,1,6,9,-9],[-1,-10,-9,7,7,10,-9,7,-3,10,-10,-7,8],[4,-5,10,9,-4,8,-2,3,-1,6,10,3,-3],[-4,-5,6,-10,4,1,-1,-2,4,8,-7,-2,6],[-2,9,-5,-8,7,-2,8,-8,-1,-2,2,8,-7],[-8,6,8,-7,5,-4,-2,6,-10,4,-3,-1,-10],[5,4,1,-9,-9,6,6,6,2,-10,6,5,2],[-4,5,7,-10,-1,4,-7,-9,-9,-4,-6,4,7],[8,9,3,2,-5,-9,-9,-7,2,-5,9,-7,-10],[-1,9,-4,1,-8,7,4,8,-9,4,1,2,-9],[2,3,-1,6,-2,8,6,-8,3,-6,-5,-9,3],[-7,5,-5,5,9,-10,-5,-7,-8,6,-7,7,-3],[2,-3,1,-9,9,-5,2,8,1,6,6,-5,9],[-5,-7,1,8,2,4,-6,-7,-7,5,3,-9,-7],[3,9,-2,-8,-3,-8,-1,-2,4,-9,-1,2,-2],[-3,3,7,-10,6,3,2,-3,8,-1,-10,-10,-7],[-3,-6,-3,-5,-9,-10,1,2,2,-1,-4,-10,1],[9,-8,2,-5,-8,7,3,-8,-4,3,-4,-2,3],[-5,-9,2,10,6,3,10,10,-5,-3,9,1,-5],[-8,-1,3,3,-4,1,5,6,9,-9,3,-1,6],[-6,-4,1,10,-3,8,4,-1,6,2,-3,-7,-9],[6,-7,-2,9,-7,-7,4,7,-6,-6,6,2,-3],[9,7,10,-8,6,-1,-5,5,5,-10,3,-5,-2],[10,-1,10,5,-7,-1,-2,-6,-9,-3,-3,-6,-1],[10,6,9,7,-1,1,4,-10,5,-1,-7,4,-7],[-8,-9,-9,-9,2,-3,9,5,9,-9,2,1,7],[-6,-9,5,3,8,-4,9,4,-6,-5,4,8,-10],[-7,6,8,2,-4,-5,-2,10,-2,5,-10,-1,-10],[6,-8,2,7,9,1,-3,10,-1,2,2,10,-10],[-6,3,7,8,6,-3,8,-10,-3,4,-2,-6,8],[-10,5,9,2,9,-3,-7,7,-4,1,-5,-7,-6],[6,7,9,-2,-7,6,-5,3,4,-7,-9,7,4],[-2,1,-2,-1,-10,-6,7,-5,5,1,-8,-7,5],[5,-5,4,-2,7,-3,-2,-3,5,-2,-6,-8,4],[-2,-10,-8,-1,-8,10,1,3,-10,-6,3,-2,10],[3,-4,6,9,-3,3,-10,10,-10,-9,-4,9,-1],[-1,-9,-2,-9,-1,-2,-10,-9,-10,5,-9,2,9],[-9,8,-1,5,-8,-6,3,3,-10,-2,-10,-8,-2],[-10,-6,-10,7,7,7,-2,8,5,5,-9,-2,2],[3,7,-6,10,7,-9,10,-4,9,-3,4,-10,-5],[-4,8,-9,5,-8,4,-4,-10,7,10,-8,-9,-6],[6,-2,5,-7,1,5,5,-6,1,-2,-5,-4,10],[6,2,2,9,10,1,10,7,-5,-9,9,-5,5],[-10,6,1,-1,5,-1,-9,-10,-10,10,6,-8,-10],[-8,-10,4,-2,-1,-2,3,6,-4,7,-5,6,4],[3,-8,-1,-6,9,-2,-10,-3,-5,-2,2,-6,-1],[6,8,-1,2,-4,8,-3,-1,10,-5,-6,9,1],[-5,8,10,5,-4,1,-8,6,-6,-4,3,10,7],[10,3,5,10,4,-7,-10,-7,-6,5,-4,-10,-7],[2,-1,-1,-3,2,-2,3,-4,7,3,6,-1,-1],[1,-3,4,-6,-6,-8,3,9,4,-5,2,4,-8],[-5,3,-5,-7,5,-6,8,9,-1,6,10,-1,8],[-7,-1,7,3,1,-4,-6,2,9,-4,-8,1,-4],[-3,5,2,-8,-8,-8,4,-9,-2,9,-7,-5,-9],[5,-6,2,-7,5,-1,-2,-7,-10,-2,1,-5,9],[9,4,-7,-7,-9,-4,-7,4,1,7,-8,1,7],[5,2,-4,8,-10,-7,9,7,-2,4,4,-4,5],[9,4,-8,8,1,-1,-9,5,10,-4,7,1,4],[7,6,1,-6,1,-2,-3,2,3,7,-7,-1,-5],[-9,-10,-2,2,-8,5,-8,7,-7,4,-6,-1,6],[-1,-1,3,-3,-2,9,4,8,1,-8,-5,-3,-6],[-7,-4,-7,8,-3,7,-6,-10,-4,4,6,8,-8],[-2,-4,-9,-5,4,2,-9,6,9,-4,9,-7,-10],[10,10,-2,10,1,7,-4,8,-2,1,3,-10,-2],[7,-3,2,-6,5,5,4,-7,-1,-1,-9,10,-2],[9,-1,4,8,-6,3,5,2,3,5,8,-1,9],[-5,-9,1,1,-8,-10,4,-9,10,7,5,9,-2],[-9,7,4,-6,-10,-10,1,-8,4,-8,9,10,-9],[7,-6,4,-3,-3,2,-9,-8,-5,-7,-9,3,6],[5,-9,1,-2,-5,10,7,5,3,-4,-3,10,-10],[-10,6,6,-4,-6,10,-1,4,5,7,3,-3,2],[5,-5,3,-1,-1,-10,1,9,-4,10,-2,-9,6],[10,8,5,-6,-2,6,-5,8,2,-1,-5,-1,-3],[2,5,-2,7,-7,-7,5,-9,1,-9,-1,-10,-6],[-9,2,2,-2,3,-2,-5,-7,1,10,-4,-7,-1],[8,5,8,10,6,7,-1,-3,1,3,2,9,-7],[4,9,-4,-7,-10,-3,-7,6,-6,-2,-1,6,-2],[-1,10,-5,-2,10,-3,5,1,8,6,10,3,10],[9,-2,-4,-2,-9,-9,-5,-6,-5,2,8,4,5],[5,-7,4,1,-7,-6,-1,7,-7,10,-1,-4,-1],[-4,-8,8,-7,-10,-1,6,8,-8,-9,9,-9,9],[4,-4,10,9,-7,3,3,6,6,3,-7,3,8],[-4,-10,5,-8,2,-7,6,-9,-9,-2,-8,10,-2],[-4,5,-6,-7,1,4,-10,-7,-7,-2,-10,9,-7],[-2,-8,-6,-9,4,-1,6,2,-1,-6,1,1,-10],[-4,5,-7,10,1,-10,6,-10,3,-9,3,9,-8],[3,-4,10,-3,9,2,-5,-5,7,-9,8,-2,6],[7,-5,6,6,-2,-7,-3,-4,6,-10,-4,-2,-6],[4,-7,3,8,1,-9,-3,5,-5,6,3,-1,-3],[-2,8,5,-5,-4,6,-8,5,4,-8,8,7,-5],[4,-5,-10,3,-6,4,1,-2,10,-4,9,5,-8],[3,4,8,-3,-8,4,5,-10,-3,-6,7,-9,3],[10,-5,10,6,5,4,10,5,3,-6,-6,1,-8],[-10,-1,2,10,2,7,-3,-5,-2,-9,9,-6,5],[5,-6,6,7,6,9,-9,5,10,-10,-5,7,1],[9,2,1,-2,10,2,7,1,3,6,7,8,-10],[2,-8,-5,2,1,-9,-10,-2,8,-8,5,8,3],[-9,3,-3,-9,9,8,-5,3,-3,-3,-3,6,10],[7,5,5,1,5,4,5,-8,-5,5,5,10,6],[-10,9,4,-2,-5,4,7,-10,-3,-6,-1,4,-10],[-5,-8,6,-1,-10,10,-5,8,-3,-9,8,7,3],[-7,-3,7,-9,-8,6,1,-6,7,10,-3,4,3],[5,8,-9,6,-3,-1,-1,9,-10,-3,-5,-8,-10],[5,4,-6,1,7,-10,-3,8,-5,-5,-4,7,1],[-8,5,1,-1,-10,-2,-10,1,1,-3,2,-8,4],[-1,-9,-5,3,-6,1,-9,-4,-2,-9,-4,-8,1],[-5,-6,1,4,-2,-7,-10,-1,-10,-6,1,-9,-2],[3,8,-2,5,5,-7,-5,9,-6,-7,-4,7,-1],[7,-9,3,-10,9,5,2,-7,-1,2,6,-1,-4],[2,-6,-10,-3,1,-4,-6,-5,-5,2,-7,-6,-5],[6,-7,-4,6,2,-2,-6,2,5,10,-10,8,9],[-9,4,-9,-3,-5,-7,-4,6,5,-8,-1,-8,3],[-6,-2,-6,-1,-6,-3,9,5,-8,7,6,5,1],[-6,-6,7,-2,8,1,-10,-2,-7,10,8,-10,1],[7,9,-1,8,-6,7,5,5,7,-6,-8,-9,-2],[8,2,-7,5,-10,1,-2,-5,6,-6,-8,8,-1],[5,-7,-9,-9,4,1,-2,-6,8,-3,-8,-3,-1],[9,-4,-8,-10,-8,-7,9,4,1,-2,-10,-4,3],[1,-8,8,-2,8,3,-4,-9,9,4,-10,1,1],[-2,6,9,-1,10,6,4,-3,-6,-10,-9,2,6],[6,4,1,-4,-1,-4,2,4,9,4,6,10,2],[7,-1,-8,2,-6,-9,-10,5,-5,-2,-3,-6,5],[-6,8,-2,-3,-9,2,4,4,10,6,-10,10,-9],[-2,-1,-4,2,4,8,7,-8,-9,-8,-8,9,-4],[4,-10,9,7,-1,-7,-5,-4,-8,-8,-1,1,-2],[-10,2,7,-7,8,-10,-8,-5,3,5,1,-10,10],[-8,5,-9,-10,-8,-6,5,-1,-10,-8,-3,5,10],[-9,-6,4,-9,5,-3,-8,3,5,9,-5,-4,-4],[-3,5,6,6,5,10,-8,-2,2,-1,6,-1,2],[6,8,-5,10,6,7,9,-1,-6,4,9,9,-8],[-8,4,6,7,1,-7,-3,-6,-3,2,2,3,7],[-1,-6,5,-10,3,8,-10,-2,-7,-7,5,8,6],[-7,-7,2,5,8,1,9,-4,4,4,-10,-10,6],[9,-5,5,5,-10,-9,-7,5,5,-2,10,2,1],[-9,-8,-8,-10,-5,7,-4,-9,2,-9,5,-10,2],[2,-6,-3,4,1,-2,7,3,-9,2,1,5,-10],[4,7,2,8,-4,4,-6,-4,-3,6,-4,4,-3],[10,2,8,10,10,9,-1,-10,-3,-9,3,-7,-7],[-5,6,3,-8,4,3,-1,7,10,3,10,-6,-4],[-10,-9,-1,-7,4,1,-8,-6,-10,-3,-9,4,3],[-1,-2,8,-3,8,-3,10,-8,7,-7,-5,4,-5],[-1,6,-2,4,1,3,-1,9,-7,-1,-10,-9,5],[-6,-3,1,-2,9,5,6,-7,1,2,-4,-7,-2],[-5,-5,-4,-9,-6,3,9,-1,-5,-10,8,2,1],[6,1,8,6,10,6,1,10,-9,-3,-5,7,-3],[-7,2,-1,8,4,-1,9,4,-1,-7,-8,1,-7],[2,-2,-9,-1,8,9,5,-4,-8,10,-10,7,-3],[6,-6,10,8,-6,10,-10,-9,-6,2,5,-5,-2],[-5,4,5,9,6,-1,1,3,-5,2,2,2,-8],[-6,1,9,8,-1,-5,6,2,-6,-5,6,2,3],[6,9,-2,8,-2,7,-10,5,-3,-7,-10,-9,1],[-4,1,-8,5,-2,10,-10,7,-6,-8,-4,-4,5],[3,-7,-9,-9,10,-7,3,-2,9,9,9,-5,-6],[9,2,-4,-8,-1,-3,7,-8,-10,4,-5,-6,-9],[2,4,-4,10,9,-1,6,-3,-2,4,-5,-10,8],[3,2,1,-7,3,-9,9,6,4,2,1,-8,-6],[1,5,3,-3,2,-10,10,2,8,-7,1,-8,-9],[-9,-6,-1,10,6,3,-8,-5,4,4,7,9,-6],[-5,5,5,-10,-10,-8,6,4,7,-4,2,10,-6],[-8,10,3,-10,7,4,-6,8,-3,-2,-2,10,-1],[-4,8,7,4,2,3,8,9,9,6,-3,-2,7],[2,-1,-10,6,-6,-6,2,-10,3,-7,9,10,-3],[-6,6,10,1,-2,6,-10,1,-3,-7,-8,-2,-3],[-10,8,-5,-10,-8,-8,-10,9,-10,-10,-9,6,7],[-8,-8,10,3,-3,10,9,4,4,-10,3,6,-3],[-6,2,-2,10,1,-9,-6,3,8,4,9,-9,5],[-1,5,7,-2,3,-9,-3,5,-5,8,6,9,-9],[10,-9,10,-5,5,-6,-10,10,-4,-8,-7,-9,-10],[-1,7,-9,-8,1,10,4,-9,-10,-9,-6,5,1],[6,5,7,7,7,-2,-4,-4,-10,-10,7,5,2],[9,5,9,2,-1,1,-2,4,3,6,4,6,-4],[-8,8,-2,7,-1,-1,2,1,-2,10,-8,5,10],[1,-7,-8,-5,5,7,5,10,-10,-9,-4,5,-8],[8,-6,-5,4,-3,-7,3,6,-3,8,8,-6,9],[10,5,-5,-1,1,2,-8,-2,-5,-6,-4,3,-4],[10,-2,9,10,-9,-7,10,6,7,-8,10,1,6],[9,-7,-4,5,5,7,-10,-2,9,-6,3,1,-2],[7,-9,1,4,-2,-5,6,1,-5,2,-7,-9,-7],[8,-6,-9,6,-7,7,-4,-2,6,-1,3,-7,3],[-7,-10,-7,-10,-9,-7,8,-9,-5,-6,4,-5,8],[-8,5,2,6,-4,-8,-7,7,9,5,-2,3,-7],[9,-9,-2,-3,-10,8,-7,-8,-9,2,-8,3,3],[4,-3,-10,-5,-9,-7,3,-9,3,3,3,-6,-10],[-9,8,8,5,-6,-4,-5,-9,7,-10,-3,6,-4],[-2,5,-7,-6,-4,8,6,6,7,4,4,8,-10],[4,-8,5,1,3,4,-2,4,10,5,1,-5,-6],[8,2,-4,4,-5,2,-10,-3,-4,3,-4,-9,6],[1,-5,-2,-10,1,-1,5,-5,-1,4,9,8,6],[-4,-2,-5,4,9,-4,-10,-4,1,8,-10,3,4],[10,4,5,8,-6,10,4,-8,10,-3,-1,-6,10],[-8,8,5,-6,-3,-4,-6,-4,2,8,4,10,-4],[2,9,-6,5,9,-3,6,5,6,10,-10,8,2],[5,1,-2,9,-5,8,-10,-9,-3,-6,-4,-10,4],[9,-9,8,-5,-3,-2,-8,-7,10,-5,-10,-5,-9],[-1,-5,10,-9,-9,4,3,-2,-10,-5,-9,6,-5],[6,-5,9,3,-10,-2,-3,5,-4,5,-7,-6,-5],[7,-3,-10,-2,-2,-2,7,-10,-1,9,-8,-6,8],[-9,-6,-1,6,5,3,-10,8,-9,-3,5,2,2],[6,-5,1,-9,8,10,-6,-1,-2,-3,4,9,-3],[-3,-6,-8,-5,7,9,-3,-9,-1,5,5,5,-2],[-2,-6,3,3,-6,-4,-4,-9,6,-7,2,-10,-2],[-8,5,-3,1,3,1,-7,-6,10,-1,-10,10,2],[9,-10,-8,-7,-10,-1,2,-7,9,9,-3,3,7],[-3,-3,10,-8,3,1,-1,2,2,-8,-8,2,-2],[6,1,3,2,-8,7,5,5,2,6,10,10,6],[-4,-5,3,4,-7,-5,-2,-3,10,1,-3,1,-10],[7,8,-8,-10,-9,-8,-7,3,-6,-9,-5,9,4],[2,-3,-8,-2,2,9,5,-6,-4,-8,9,1,6],[-6,-4,9,8,6,-10,2,-8,-7,10,8,10,-8],[-1,-6,-7,-2,-7,-8,-2,-2,-5,-8,5,8,9],[-9,1,8,8,-8,10,-7,10,-3,10,-7,-10,-7],[-10,-10,10,-8,7,-2,-3,10,-10,-10,10,3,1],[-4,4,-3,6,-3,-3,9,8,4,2,5,-1,-4],[-10,-3,-6,-9,-6,-5,10,-1,1,-2,9,-8,-2],[-5,-10,5,6,1,3,-4,-6,3,9,8,2,-8],[-8,6,-1,-4,-9,-1,7,9,-3,10,4,-3,9],[-4,3,-4,10,2,10,-2,-9,6,-4,7,-7,-7],[2,3,-3,-4,1,-9,7,-2,-9,8,7,3,8],[-1,9,-4,-9,-4,-8,-9,6,7,1,-4,4,-10],[5,-4,-3,8,2,5,-2,6,-7,6,2,9,-3],[-6,5,7,9,-5,-6,-6,-6,2,10,-8,2,10],[-7,9,-2,-8,1,8,-7,-2,-5,-3,-7,-9,-4],[6,10,2,-7,-9,6,-9,-3,4,-10,-4,5,8],[-4,-1,-3,-4,4,-10,7,-3,7,9,-9,-1,-1],[5,-2,-10,-9,5,-9,-7,-5,8,-8,-4,-3,6],[-7,-10,-2,6,6,-2,-6,-9,8,-10,2,-4,6],[-5,10,-10,8,7,5,-6,9,5,7,-10,9,7],[-7,10,-6,4,-8,-4,4,-6,5,9,-10,-9,10],[1,1,-9,-8,2,5,1,-10,-10,4,-1,-8,3],[7,-4,-3,-4,-10,3,-1,-1,10,-2,6,-5,7],[-1,6,-4,8,-8,10,7,5,7,4,-6,1,7],[9,-8,-7,5,5,-8,5,5,-10,-5,-10,-4,-2],[3,8,1,-9,8,-9,3,2,8,7,-3,6,5],[10,-2,-10,6,-4,-9,-5,1,2,8,5,-1,9],[-1,-10,1,-6,2,10,5,-4,-9,3,-3,-3,-9],[6,1,4,2,-10,5,10,1,-7,3,3,10,-1],[-3,3,3,1,-7,-9,8,4,5,-3,3,5,1],[8,-5,4,5,9,-7,3,-5,4,2,-9,1,5],[1,-2,9,-6,10,2,9,3,-10,-1,1,-8,-3],[-1,-10,2,6,6,5,10,5,-3,3,-8,6,-8],[5,9,-7,-6,-7,-8,4,8,7,-9,2,-7,-1],[6,6,-4,3,3,-6,-5,-9,5,9,5,3,-10],[-7,10,2,3,1,9,3,-4,-10,1,3,3,3],[-8,3,1,-3,-9,-6,-2,-2,-3,-2,-1,7,2],[-9,-10,4,-9,7,8,-3,-6,-9,-8,-9,5,9],[4,7,-3,-10,9,4,2,9,1,8,1,-4,-10],[1,4,1,-5,3,-7,5,-8,5,8,1,4,-7],[-1,-5,5,6,7,9,-10,-1,3,4,-5,-1,-2],[2,-4,-2,-1,-5,4,-8,-1,-4,9,-7,-1,4],[-9,-9,-1,-7,-2,-9,-8,1,-8,-5,-8,-9,6],[9,-8,-5,2,-9,5,-6,-7,-1,-1,-8,-3,-7],[4,8,-5,-7,-10,3,-4,-4,10,-7,-7,3,1],[7,6,3,-2,-8,-7,-2,-7,10,-5,2,6,-4],[8,-1,3,-2,-1,-9,-7,-2,3,-3,6,2,10],[9,-7,-7,4,-5,5,6,-4,1,-1,8,-6,4],[6,5,4,-10,-1,-6,-6,-2,8,-8,-2,-4,3],[-8,-4,-1,10,4,2,-5,-4,7,-1,10,-8,4],[9,-4,-1,-1,5,-3,2,3,3,8,-10,-7,6],[2,8,-4,3,1,-8,-9,6,2,-9,-3,-2,4],[-6,4,-10,7,-4,7,9,-3,2,-2,4,-6,10],[9,-10,5,-4,9,-9,2,-7,3,8,-3,-8,9],[-10,6,6,-1,8,4,6,4,10,-9,6,3,7],[-6,-2,10,-2,3,2,6,-1,-2,4,2,-3,-10],[-2,4,-10,8,-5,-5,5,-9,-5,8,3,-5,-5],[10,-8,6,-3,3,1,5,-2,-5,10,5,-8,1],[5,8,-5,-6,9,4,4,-5,-1,-1,1,-9,1],[-8,10,-10,-7,3,-9,4,-4,-9,-10,-1,5,3],[9,8,-7,-9,-8,-10,-7,7,-5,-5,-3,-7,-9],[1,2,1,-5,3,7,-9,-1,2,-5,6,-9,-10],[5,5,-6,9,10,3,-3,9,8,-7,-8,-7,-5],[4,-3,-8,2,4,10,7,-5,7,-7,-10,-4,-2],[-5,7,3,5,6,6,-9,-5,2,-10,4,-7,-4],[4,3,2,8,-7,1,-8,-9,2,-3,-6,-10,-5],[4,5,-8,-5,6,6,-9,6,-7,6,9,4,6],[10,-6,2,7,-5,-8,-6,10,-10,-7,10,3,9],[-5,-5,-3,-10,-1,7,10,5,-4,4,-4,-4,3],[4,1,7,8,-6,-10,-2,-9,-3,2,-8,-8,4],[-9,3,-2,7,2,-9,7,-3,-4,-9,5,5,-7],[-6,7,9,8,-7,10,-6,-7,5,2,10,5,10],[-9,-9,-10,-5,5,-3,7,5,-6,-2,-6,7,-6],[-6,8,1,1,-6,-5,7,5,2,4,1,-8,2],[-9,2,10,4,-3,5,-5,6,10,-9,-7,-8,8],[-10,-2,10,5,-5,-1,-3,4,-2,-7,-10,-4,-5],[-9,2,2,-4,8,4,-8,-10,-9,-3,9,3,-4],[6,-9,-8,3,6,4,10,3,-7,4,-8,-10,-6],[-8,6,2,-9,10,1,-9,-9,-6,7,4,8,3],[2,7,-10,-9,-7,8,-3,-3,-2,-1,7,9,-5],[-10,-2,9,4,-2,-2,-3,-1,5,9,-8,2,3],[7,5,-6,4,-8,4,8,-10,-6,-9,6,-10,-4],[10,-10,-7,-5,-8,9,-3,-5,-3,-4,5,-6,8],[10,8,8,2,-1,4,3,-10,-4,-1,1,-3,-7],[-4,3,-6,10,7,-4,-6,9,-2,2,7,7,4],[-4,-1,-5,5,-7,-1,8,4,8,-8,2,1,4],[-9,-10,8,-7,-6,-6,-10,-3,-9,-8,5,-7,-3],[7,-2,-4,3,-1,7,-2,2,-3,10,-5,8,-5],[1,8,-10,10,5,10,-9,10,1,-8,-9,-7,-6],[9,-8,-7,-6,-5,-9,6,-10,-3,-1,4,5,7],[2,3,8,3,6,-5,4,-9,-4,8,-5,-2,4],[-8,-7,-2,-1,-8,-7,-7,1,-9,3,-10,5,2],[9,-6,-1,9,-1,6,6,-5,4,-9,-5,10,6],[-6,7,1,-3,6,-3,-9,-8,10,-10,6,-8,-9],[-3,2,10,-8,-7,3,-10,-1,6,1,8,7,-8],[-2,-9,-1,9,-2,3,-5,3,-10,9,-5,-5,10],[-8,9,-1,2,1,4,1,8,8,-4,-3,1,6],[-6,10,4,2,-4,6,5,-3,7,7,-6,1,3],[4,6,9,3,-10,9,-2,-7,3,8,-4,-8,2],[-5,5,7,-3,-3,6,4,-5,-10,-10,-7,-2,6],[10,7,1,-3,2,-8,-6,9,-9,10,8,10,10],[10,2,9,2,-4,-10,9,-8,6,10,-7,-10,2],[8,5,-1,9,-3,-7,-4,7,-7,-5,5,-10,9],[-3,-4,-7,7,8,9,1,-6,6,-9,-2,-1,-5],[10,-3,-5,-8,-9,1,8,-4,-9,-10,5,-4,3],[3,5,-2,5,8,10,-9,2,7,-3,1,-7,-8],[-9,7,8,-5,7,-10,1,-2,-3,-1,3,6,-10],[10,8,-10,-8,-8,-8,-1,-8,-9,10,-9,-4,-9],[10,-5,-4,8,10,-8,6,5,9,-2,7,-4,-5],[-2,-5,8,-6,-4,7,-2,-1,-5,6,-2,6,-2],[7,1,-10,3,-4,1,-5,2,-8,-8,5,-5,-3],[-8,10,3,-7,-9,9,-4,-4,-3,-1,-10,-9,7],[2,-7,-8,-6,-6,-8,-5,-9,1,-9,8,4,9]], dtype = "int8")#candidate|4513|(528, 13)|const|int8
bop_4514 = relay.greater_equal(call_4510.astype('bool'), const_4513.astype('bool')) # shape=(528, 13)
bop_4517 = relay.greater_equal(call_4511.astype('bool'), const_4513.astype('bool')) # shape=(528, 13)
output = relay.Tuple([bop_4514,])
output2 = relay.Tuple([bop_4517,])
func_4521 = relay.Function([], output)
mod['func_4521'] = func_4521
mod = relay.transform.InferType()(mod)
mutated_mod['func_4521'] = func_4521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4521_call = mutated_mod.get_global_var('func_4521')
call_4522 = func_4521_call()
output = call_4522
func_4523 = relay.Function([], output)
mutated_mod['func_4523'] = func_4523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1164_call = mod.get_global_var('func_1164')
func_1165_call = mutated_mod.get_global_var('func_1165')
call_4542 = func_1164_call()
call_4543 = func_1164_call()
output = relay.Tuple([call_4542,])
output2 = relay.Tuple([call_4543,])
func_4544 = relay.Function([], output)
mod['func_4544'] = func_4544
mod = relay.transform.InferType()(mod)
output = func_4544()
func_4545 = relay.Function([], output)
mutated_mod['func_4545'] = func_4545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2328_call = mod.get_global_var('func_2328')
func_2329_call = mutated_mod.get_global_var('func_2329')
call_4588 = relay.TupleGetItem(func_2328_call(), 2)
call_4589 = relay.TupleGetItem(func_2329_call(), 2)
func_2993_call = mod.get_global_var('func_2993')
func_2995_call = mutated_mod.get_global_var('func_2995')
call_4613 = func_2993_call()
call_4614 = func_2993_call()
uop_4615 = relay.sqrt(call_4588.astype('float64')) # shape=(528, 1)
uop_4617 = relay.sqrt(call_4589.astype('float64')) # shape=(528, 1)
func_3616_call = mod.get_global_var('func_3616')
func_3620_call = mutated_mod.get_global_var('func_3620')
const_4620 = relay.const([6,-3,5,6,8,-1,4,4,-4,-10,-8,10,4,-6,-6,8,-8,-2,-6,-2,-6,7,8,-9,10,1,-8,10,4,8,10,3,7,-2,6,7,-4,1,-6,4,-10,4,3,2,1,-9,-8,-10,8,7,-5,-3,9,-10,-4,2,9,-4,1,2,-7,-4,3,-9,-5,2,-3,10,-1,-10,7,1,-10,-10,10,-5,-5,2,-3,7,-9,2,6,-5,-4,-1,9,-9,-6,1,3,5,-7,3,9,-1,-1,-4,5,-5,6,-2,-10,5,-9,6,-6,-7,-9,4,2,-8,-6,-3,4,2,6,5,2,-5,-8,-1,1,7,10,-8,7,-5,-8,6,6,2,-9,-1,-8,-1,7,-1,2,8,1,4,2,3,-8,4,8,-10,-2,9,9,-6,-4,7,-7,7,1,-8,-1,-4,1,-4,3,-5,5,5,-3,-10,-8,-4,2,-6,3,5,-6,-2,5,5,10,-3,3,-10,-8,5,7,-2,-1,1,4,-9,-5,7,-8,9,2,2,-9,6,-3,5,2,-1,8,8,-10,-10,7,6,-10,3,7,9,-10,-5,-8,4,-10,3,-9,-9,8,-3,-7,-8,3,8,7,-8,-4,9,-3,-2,-10,-8,5,-7,7,8,10,-10,7,5,-7,2,-3,-3,-6,9,1,-4,-7,1,-2,9,-5,6,-8,10,1,-7,3,-3,7,4,1,6,8,3,6,-3,-10,-5,-10,-2,-6,-7,10,-9,-6,-7,-2,7,10,-1,10,9,5,-6,10,-5,-10,-7,-6,9,1,9,3,-3,-3,-1,-10,-5,-6,-9,-1,-5,9,-1,-10,5,8,-7,9,4,-6,-7,7,1,-2,-10,-5,4,-6,-8,-7,2,-6,-8,10,-9,9,5,7,-7,-8,-2,1,8,-10,8,9,5,-8,2,-5,4,-6,-7,-7,-2,5,-8,1,-6,10,10,-3,-9,-6,-8,-2,2,-1,3,-7,-3,-10,-9,-4,-1,8,-6,-4,1,-5,-10,1,-9,3,10,-6,10,-3,6,-5,-2,10,-3,2,-6,-1,6,-8,-4,-6,1,-9,-9,-2,-10,3,10,-9,-10,7,9,-10,-1,9,-9,2,-6,-3,-5,-9,-1,-6,-6,2,-7,-1,8,-1,-2,-4,3,3,1,4,10,-1,-4,2,2,-7,4,5,-1,-10,-7,8,-2,-1,6,7,7,-8,4,4,-3,-5,8,6,-8,-4,1,-9,2,4,-5,5,10,6,3,-8,-10,-1,4,-10,6,-7,8,9,-6,-10,-5,-7,-8,9,-1,-8,-1,-1,-6,5,-7,-8,10,4,10,9,9,-2,-6,-10,9,10,-7,-5,4,-5,-4,-3,-2,-10,-1,10,4,-8,-5,9,-4,-4,-2,6,-8,-6,-5,7,-7,2,8,9,5,4,4,4,6,1,-6,5,-9,6,-1,-1,-2,8,4,3,5,-1,-1,-10,-2,7,7,2,3,10,-3,-4,-6,4,-2,-1,-4,-5,-5,4,-6,-7,-10,-1,-9,7,-5,-4,5,-1,6,-3,4,5,-5,-9,9,5,7,4,-10,7,-4,-8,-10,6,-1,-6,9,4,-10,4,-3,1,-9,-5,6,6,-4,10,3,1,7,1,-9,-7,-10,-10,-3,2,-6,1,-10,3,-3,-1,1,2,-1,1,8,1,-2,-2,6,5,4,5,6,9,2,-6,3,-10,-9,-6,-10,8,2,5,5,-9,9,-2,-1,-4,4,-8,8,-3,1,-5,-6,5,4,-5,1,9,-7,4,-3,-3,-8,5,-10,-2,-6,4,-1,-2,-8,-3,1,8,4,-8,-10,-5,-3,-2,-7,-6,1,-8,8,7,-1,6,4,-9,-7,5,-7,6,1,5,-2,2,2,6,-4,-7,-5,6,-8,-6,-4,-2,1,1,6,1,-6,3,-5,-7,4,-3,-8,8,5,-8,-5,8,-8,2,-6,4,-6,-1,10,3,3,-2,-4,-4,4,-8,2,-9,-6,6,3,-5,9,-1,3,2,9,-4,4,-4,1,9,7,-6,6,6,-4,-8,6,-1,-5,-4,6,-9,-7,1,4,-3,-6,3,-1,-3,9,-7,5,5,-10,6,8,-8,-8,-5,9,-3,-5,8,5,-10,-7,1,-2,1,7,9,3,-10,-6,-5,-3,9,7,3,-1,8,9,-9,8,-4,-7,8,-10,-3,5,9,-6,-5,8,-5], dtype = "int8")#candidate|4620|(819,)|const|int8
var_4621 = relay.var("var_4621", dtype = "int16", shape = (624, 1))#candidate|4621|(624, 1)|var|int16
call_4619 = relay.TupleGetItem(func_3616_call(relay.reshape(const_4620.astype('int8'), [13, 9, 7]), relay.reshape(var_4621.astype('int16'), [624,]), ), 1)
call_4622 = relay.TupleGetItem(func_3620_call(relay.reshape(const_4620.astype('int8'), [13, 9, 7]), relay.reshape(var_4621.astype('int16'), [624,]), ), 1)
func_654_call = mod.get_global_var('func_654')
func_657_call = mutated_mod.get_global_var('func_657')
const_4630 = relay.const(6, dtype = "int8")#candidate|4630|()|const|int8
call_4629 = relay.TupleGetItem(func_654_call(relay.reshape(const_4630.astype('int8'), []), relay.reshape(call_4613.astype('int8'), [11, 12, 4]), ), 2)
call_4631 = relay.TupleGetItem(func_657_call(relay.reshape(const_4630.astype('int8'), []), relay.reshape(call_4613.astype('int8'), [11, 12, 4]), ), 2)
func_2528_call = mod.get_global_var('func_2528')
func_2533_call = mutated_mod.get_global_var('func_2533')
var_4637 = relay.var("var_4637", dtype = "float32", shape = (2535,))#candidate|4637|(2535,)|var|float32
var_4638 = relay.var("var_4638", dtype = "float64", shape = (10, 63))#candidate|4638|(10, 63)|var|float64
call_4636 = relay.TupleGetItem(func_2528_call(relay.reshape(var_4637.astype('float32'), [2535,]), relay.reshape(var_4638.astype('float64'), [70, 9]), relay.reshape(var_4637.astype('float64'), [2535,]), ), 3)
call_4639 = relay.TupleGetItem(func_2533_call(relay.reshape(var_4637.astype('float32'), [2535,]), relay.reshape(var_4638.astype('float64'), [70, 9]), relay.reshape(var_4637.astype('float64'), [2535,]), ), 3)
output = relay.Tuple([call_4613,uop_4615,call_4619,const_4620,var_4621,call_4629,const_4630,call_4636,var_4637,var_4638,])
output2 = relay.Tuple([call_4614,uop_4617,call_4622,const_4620,var_4621,call_4631,const_4630,call_4639,var_4637,var_4638,])
func_4640 = relay.Function([var_4621,var_4637,var_4638,], output)
mod['func_4640'] = func_4640
mod = relay.transform.InferType()(mod)
mutated_mod['func_4640'] = func_4640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4640_call = mutated_mod.get_global_var('func_4640')
var_4642 = relay.var("var_4642", dtype = "int16", shape = (624, 1))#candidate|4642|(624, 1)|var|int16
var_4643 = relay.var("var_4643", dtype = "float32", shape = (2535,))#candidate|4643|(2535,)|var|float32
var_4644 = relay.var("var_4644", dtype = "float64", shape = (10, 63))#candidate|4644|(10, 63)|var|float64
call_4641 = func_4640_call(var_4642,var_4643,var_4644,)
output = call_4641
func_4645 = relay.Function([var_4642,var_4643,var_4644,], output)
mutated_mod['func_4645'] = func_4645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_4709 = func_3352_call()
call_4710 = func_3352_call()
func_4521_call = mod.get_global_var('func_4521')
func_4523_call = mutated_mod.get_global_var('func_4523')
call_4711 = relay.TupleGetItem(func_4521_call(), 0)
call_4712 = relay.TupleGetItem(func_4523_call(), 0)
func_1233_call = mod.get_global_var('func_1233')
func_1234_call = mutated_mod.get_global_var('func_1234')
call_4718 = func_1233_call()
call_4719 = func_1233_call()
output = relay.Tuple([call_4709,call_4711,call_4718,])
output2 = relay.Tuple([call_4710,call_4712,call_4719,])
func_4721 = relay.Function([], output)
mod['func_4721'] = func_4721
mod = relay.transform.InferType()(mod)
mutated_mod['func_4721'] = func_4721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4721_call = mutated_mod.get_global_var('func_4721')
call_4722 = func_4721_call()
output = call_4722
func_4723 = relay.Function([], output)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4264_call = mod.get_global_var('func_4264')
func_4266_call = mutated_mod.get_global_var('func_4266')
call_4787 = func_4264_call()
call_4788 = func_4264_call()
output = call_4787
output2 = call_4788
func_4789 = relay.Function([], output)
mod['func_4789'] = func_4789
mod = relay.transform.InferType()(mod)
output = func_4789()
func_4790 = relay.Function([], output)
mutated_mod['func_4790'] = func_4790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3706_call = mod.get_global_var('func_3706')
func_3708_call = mutated_mod.get_global_var('func_3708')
call_4812 = relay.TupleGetItem(func_3706_call(), 0)
call_4813 = relay.TupleGetItem(func_3708_call(), 0)
output = call_4812
output2 = call_4813
func_4820 = relay.Function([], output)
mod['func_4820'] = func_4820
mod = relay.transform.InferType()(mod)
mutated_mod['func_4820'] = func_4820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4820_call = mutated_mod.get_global_var('func_4820')
call_4821 = func_4820_call()
output = call_4821
func_4822 = relay.Function([], output)
mutated_mod['func_4822'] = func_4822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1164_call = mod.get_global_var('func_1164')
func_1165_call = mutated_mod.get_global_var('func_1165')
call_4846 = func_1164_call()
call_4847 = func_1164_call()
func_3467_call = mod.get_global_var('func_3467')
func_3470_call = mutated_mod.get_global_var('func_3470')
var_4851 = relay.var("var_4851", dtype = "int8", shape = ())#candidate|4851|()|var|int8
const_4852 = relay.const([-5,6,8,-3,1,-7,-9,9,9,8,-1,-3,3,-5,-4,-2,7,-1,1,1,7,1,4,4,9,1,4,3,2,8,2,-7,8,-3,-3,1,4,-6,1,10,-1,1,5,-3,-4,4,-2,7,8,-9,4,-3,-3,7,-8,-7,9,4,-4,2,-9,5,9,1,2,10,-3,6,-1,-1,1,-10,6,6,-3,9,9,5,-6,7,8,5,2,9,-4,2,10,10,6,-7,8,-4,10,5,6,3,9,5,-9,5,-7,-1,-9,-3,8,-7,-6,1,8,1,8,-8,-1,-8,-9,4,-2,-3,7,-7,3,-9,-4,-4,-8,6,8,3,-1,8,4,6,-8,-6,-4,-7,-8,8,1,-2,-7,-5,6,-6,8,7,-7,-9,-1,-9,-9,-1,-5,7,-1,4,-1,6,-6,-2,-8,6,1,2,10,8,8,-6,-8,-10,6,-8,-3,-4,-9,-1,5,-2,-5,-10,-6,6,-10,10,7,-7,-3,2,1,5,2,7,-7,8,5,-9,-8,6,9,-6,-5,-3,-1,-6,-1,-4,-1,2,10,-2,-10,6,7,-6,8,-7,6,-1,3,9,2,-6,-2,1,-10,9,-5,10,6,2,-7,-5,7,9,-7,3,-10,10,-1,8,-7,3,-9,-6,10,-9,7,1,-3,-3,9,-8,6,2,3,1,6,-2,9,-2,-7,6,-6,-7,7,7,-5,4,-5,1,6,-7,-5,7,-8,1,-1,-1,-5,-4,-8,8,-6,-7,9,-8,-7,9,-4,6,-7,-1,-5,5,-3,-2,-10,6,-5,8,8,-10,2,9,-8,-10,-1,3,-7,5,7,-1,-10,-4,10,8,9,5,9,-7,-6,-2,-2,-2,-5,-7,6,9,6,10,7,-4,-8,-8,-2,2,4,4,10,4,-2,-8,-10,-4,-2,2,2,8,4,7,-10,3,-4,9,2,-1,-4,-3,-8,1,-1,1,-9,-3,2,-1,10,8,3,-2,-3,-1,2,1,9,1,-7,3,-9,10,-8,-8,5,6,3,4,1,-3,9,4,-10,-8,-7,-2,9,2,3,8,5,-9,-10,-6,-8,5,-7,-5,-3,-3,-4,-1,-8,-10,2,-2,-4,7,4,6,-2,-1,-7,5,9,-2,-2,-6,5,-1,8,4,-4,5,-4,-2,-9,7,-9,-9,10,-3,-4,3,7,-8,9,6,-3,-3,-1,5,-10,-9,5,-7,-9,7,9,5,-4,-2,5,8,6,-6,8,8,-4,-7,3,3,-6,5,10,3,3,9,-3,5,-8,-8,-2,2,-3,6,5,-8,-10,6,5,4,-5,3,9,7,10,-4,2,-8,-7,1,-4,2,-3,3,-10,-5,9,-2,7,6,7,-10,7,3,4,7,4,1,-8,5,-1,-2,2,1,-5,9,-8,-10,8,-1,7,2,7,-9,10,-2,8,-3,8,-10,-2,5,-7,-9,8,9,7,-9,7,-9,3,9,-5,-10,8,-6,-6,-4,-7,9,-2,3,4,-4,-7,7,4,1,-10,-10,8,3,-8,8,10,1,10,9,-3,4,-6,1,-8,-7,3,1,5,7,10,9,5,-2,-1,8,6,5,4,1,-8,2,-10,-3,4,-8,-7,4,4,-8,7,-10,-9,-6,-5,-5,-7,-6,-8,10,1,6,-7,-4,8,-8], dtype = "int16")#candidate|4852|(624,)|const|int16
call_4850 = relay.TupleGetItem(func_3467_call(relay.reshape(var_4851.astype('int8'), []), relay.reshape(const_4852.astype('int16'), [624,]), ), 6)
call_4853 = relay.TupleGetItem(func_3470_call(relay.reshape(var_4851.astype('int8'), []), relay.reshape(const_4852.astype('int16'), [624,]), ), 6)
func_1825_call = mod.get_global_var('func_1825')
func_1829_call = mutated_mod.get_global_var('func_1829')
const_4859 = relay.const([3.144638,2.438784,7.235314,5.698675,-4.871447,-0.355504,-5.368507,-8.053660,6.781555,-0.342666,-7.521195,-4.943565,1.845495,-2.972207,6.824422,-5.699586,-5.042459,8.857674,-4.397204,6.107480,-3.087219,-7.250153,1.688956,-7.555506,-7.623363,-4.869469,-9.916168,8.428975,4.380849,3.615513,-0.837625,2.126275,3.804433,-4.232765,8.533639,-5.409543,3.341343,5.360552,6.992230,3.163602,-6.191562,7.190389,3.376699,-2.285379,-5.187228,3.807761,9.189670,6.261372,5.452779,-3.867774,8.493808,-0.458280,1.721781,-6.550458,1.001305,-9.932082,8.106460,8.577945,3.777116,2.642446,3.721290,-7.573315,8.447602,7.890162,8.173312,3.077853,-6.474953,0.435651,0.292558,-9.785768,-5.468583,-9.231215,-7.204942,-5.333422,6.712236,-0.163711,-4.491405,7.612222,-7.861392,4.030446,4.020027,0.623145,-0.045209,5.675215,-8.071742,8.416598,8.353451,-2.648882,4.927385,1.359407,-5.670625,2.140523,-2.798560,-3.619348,6.848674,-6.500993,-3.043598,-5.884374,-7.479461,8.212937,6.652183,4.658385,-2.517218,7.856701,-4.940678,7.221327,-8.673036,-1.311028,3.509409,0.271703,-0.197191,1.915803,1.620281,5.369136,-8.727729,-1.095434,7.105070,-1.500699,7.683260,8.116021,-6.715764,-6.269387,2.760403,7.377923,6.179622,6.756856,-3.162854,4.699860,-1.695845,5.139140,2.350180,8.839151,-8.800815,-9.202520,3.568681,3.377882,-6.075427,-0.936698,-8.485777,5.061529,-2.666608,0.036751,3.434635,9.805544,-8.100038,-6.754419,-1.906556,-8.118054,4.439473,4.946544,1.661574,-0.571251,-7.679935,9.681032,-0.413485,5.442545,-3.849925,9.394462,9.444788,9.611382,-4.269670,3.590786,4.670283,8.797464,-5.391482,7.069790,5.693413,-5.871037,-0.627293,8.347399,-2.093565,-9.848881,6.143725,-1.353641,-0.120272,-1.687424,-5.471280,8.841218,-8.208864,-5.374436,2.391938,-6.712664,-2.902757,2.336157,-1.037987,7.125580,6.319532,2.159360,-1.731360,1.128834,-4.662390,4.119107,7.835447,-5.370614,6.280418,-4.767975,7.521060,3.830001,9.471962,-1.767493,2.889125,-4.185033,1.703602,-8.237943,-3.803991,-4.065751,4.513210,4.773803,1.092837,-9.561818,-9.040642,8.388990,4.187136,4.672181,8.015118,5.878316,-4.607345,8.287256,3.686066,0.584762,8.924904,-5.738835,2.183428,5.783218,-9.049337,6.891059,3.282605,-1.848102,1.909954,5.145114,7.891785,-0.926786,0.074262,-0.958002,6.744570,-2.234529,5.333842,9.167682,-2.421186,0.487686,1.779883,3.835649,-3.210281,1.674327,-7.927513,-1.617737,6.772464,9.214661,3.563316,-4.795362,2.584053,1.361420,6.050030,4.652106,-0.593340,-0.122757,8.652372,-9.528615,1.255128,6.327267,-3.856060,-6.234282,-7.486903,-5.114496,1.651290,-0.061452,2.911959,4.954817,6.529553,-6.955438,-5.246102,0.917242,4.546254,2.009799,5.213186,-5.697736,-3.810776,-3.074942,-9.556348,-8.099311,9.384256,-3.980120,9.010651,1.445647,-3.172583,-2.145827,4.112559,-7.400896,1.259488,4.069022,-7.162684,-3.487960,-2.073912,-3.537624,-2.369005,-5.435823,4.374899,-3.296850,7.709969,6.381066,-1.776534,-2.854767,3.433064,-6.318904,-9.240830,-5.362599,7.708923,0.338421,6.934405,-6.623589,8.164405,0.193028,9.827029,4.735544,8.750548,-6.044963,-6.584319,2.774934,4.155848,-7.439736,-7.828947,-5.439007,1.374514,9.419106,2.823960,-1.274012,6.845371,-7.398642,-4.736486,5.461319,-9.433527,2.833014,-6.196318,3.134547,-4.524785,1.660837,-3.253240,-8.948095,6.037149,-6.726146,0.861152,6.544445,-7.438242,0.345854,6.792564,-6.478465,-0.069871,-7.465579,5.403695,-0.036041,4.739268,-3.529280,6.826013,-6.609966,-3.957993,-0.680625,2.682338,-1.834128,2.637212,-5.337926,-4.344961,-1.376245,-8.566052,0.963854,-5.591504,5.050718,1.298650,6.900093,-9.841361,-8.357211,-6.883373,-7.829508,-4.207226,0.912601,-2.429963,9.787920,9.240057,5.967296,-7.533865,7.808533,-4.418119,3.231936,-4.100313,6.178650,-2.679773,6.204879,-4.179593,-5.804981,2.604805,-0.302533,-3.384690,-5.430817,2.830547,8.819143,4.756284,7.199871,-3.477578,3.623309,5.634458,6.125195,-0.925315,0.124133,3.700107,-5.274469,4.357299,-4.020324,-2.368392,6.768125,0.522026,2.877221,5.270856,-2.205234,2.734193,-2.217441,-9.878165,-1.177727,4.863713,5.730029,-9.427669,0.545914,-6.616773,0.811831,-3.696747,5.058460,5.842725,-2.116413,9.734406,-3.687132,8.786987,5.092140,8.376132,-4.335558,4.016258,6.051729,8.266481,-6.821532,-2.241243,-1.298405,-7.682107,-2.915888,8.613781,1.171848,-6.229410,9.567375,-1.048584,8.519769,1.169472,-8.754508,-3.792824,-8.376471,-1.941233,4.650879,-1.212985,-1.056365,9.788896,-6.624597,3.369057,7.833238,-6.482868,5.219562,-3.643728,-8.963271,2.701978,-8.787802,-1.975261,9.577314,0.062031,5.138467,8.722701,9.845497,7.228253,2.656744,7.599082,-9.243946,1.881981,-5.554446,-6.206981,3.598343,-5.447717,9.021494,-3.200919,6.504620,-9.048096,6.243312,-4.498630,-6.979933,4.944727,4.792862,0.802490,-0.187446,3.646837,-8.950855,0.046948,9.497054,6.123736,-9.627002,-3.164443,-2.670257,-4.074303,-0.760393,-3.003526,-9.955074,-4.863754,-1.770189,6.872106,-7.849292,1.233645,0.943758,9.841503,-2.044198,0.242561,-7.349842,2.670417,-9.046110,4.594285,-8.355598,-3.446907,4.475901,-2.423525,-7.926210,-0.539887,9.450757,1.866882,-6.546938,8.839455,2.974746,6.749051,-0.689652,-0.198329,-5.926825,9.651122,6.475415,-2.286290,-7.640236,-0.378187,-2.958244,-1.249507,9.659701,-2.135264,-9.483043,-2.991873,1.591762,5.619105,-4.594239,-7.157457,5.336445,-4.754844,8.612997,8.484930,4.311008,-6.480527,-2.287456,4.267940,-5.176756,3.821356,-9.081180,9.924773,2.854514,6.647583,-6.590308,0.989493,-0.281974,9.009304,-2.612987,6.252905,-6.110008,9.643961,-3.605260,-0.227567,5.366529,4.510942,-5.139552,6.277260,-7.062054,3.846323,-5.665517,-3.917854,-2.091215,7.206663,3.983318,5.024834,-6.923251,-1.707338,9.382284,-7.345507,5.639433,-3.779761,-6.075836,2.447898,1.077322,0.679536,9.674652,-6.483678,2.850820,-4.969608,-4.193996,9.179791,1.390573,-0.391021,-0.934391,2.144399,-2.589973,1.058972,3.897533,3.024684,-5.467825,-0.539815,9.891404,5.829108,-8.018069,0.725839,1.715787,-1.993841,-4.400281,-3.511250,1.029258,-4.120246,3.012185,-8.755977,3.248824,7.092778,-3.090558,2.249165,-6.919541,5.349753,3.787125,-6.981295,3.350330,4.148717,2.849356], dtype = "float64")#candidate|4859|(630,)|const|float64
call_4858 = relay.TupleGetItem(func_1825_call(relay.reshape(const_4859.astype('float64'), [630,]), relay.reshape(const_4852.astype('int16'), [624,]), ), 5)
call_4860 = relay.TupleGetItem(func_1829_call(relay.reshape(const_4859.astype('float64'), [630,]), relay.reshape(const_4852.astype('int16'), [624,]), ), 5)
func_2528_call = mod.get_global_var('func_2528')
func_2533_call = mutated_mod.get_global_var('func_2533')
const_4869 = relay.const([6.523459,8.354026,-3.279536,5.175810,-5.223378,-6.139057,6.803941,1.052347,5.532494,3.115299,9.130958,2.063085,-3.493490,-6.532018,4.783745,7.562280,-0.387200,-7.485051,-6.594858,-2.578181,-5.752655,-4.570594,3.403814,6.585415,2.612782,-2.978397,8.608495,6.466986,-7.081527,9.483402,-7.697979,-6.636948,5.966463,-9.240682,-3.231609,-7.321755,0.069935,-1.147599,4.784015,3.714929,-4.650445,4.322296,2.246321,-4.509235,5.085714,6.201600,-9.014275,-8.457220,-1.424929,-0.537289,0.960793,0.832993,6.255990,1.499740,2.161169,7.801928,-9.437427,-2.876385,3.135915,-5.225163,-7.784164,5.224630,3.699931,4.644125,-6.785792,3.917404,-2.763443,-7.848938,-8.152590,-6.163288,-1.660023,-5.441371,5.894466,-9.397205,6.137377,1.620777,-9.401314,-7.958530,-2.325014,3.822424,5.174071,-4.245160,3.415167,2.764949,-3.615890,-0.021544,-4.993903,-9.427665,6.971986,-3.655876,4.170642,-3.280691,-8.084002,3.155810,-3.772502,2.298563,1.627995,-4.106434,-8.943163,4.522970,6.625175,2.000556,-3.144237,0.405293,-3.203596,-2.632648,4.588845,0.542981,2.191496,-6.086469,4.691219,-9.982852,2.153919,-5.383267,-8.618394,4.319528,6.290698,9.850069,-4.258433,3.995060,4.507792,-3.819415,-2.824345,-2.571102,-8.118689,-9.597867,2.057785,5.586940,3.707817,-3.889129,1.364750,7.839032,1.852460,-7.541450,-9.825983,-6.455940,0.896566,-3.134045,5.391126,8.014564,-0.856334,4.308485,-4.612951,-8.074154,-9.548325,-5.932464,-8.736518,-3.141159,-2.277029,2.010092,-4.131053,-3.141438,-0.180012,-9.289401,-9.478460,-6.339529,4.061524,-5.909297,-4.881714,9.360625,4.856383,-6.920085,5.231418,0.268443,9.680515,-9.449895,3.071727,2.613393,-0.928217,9.066025,2.068992,5.518751,3.581593,7.965270,-5.216573,8.248518,-3.000434,-6.464449,-8.278681,8.356365,-9.732713,-3.536464,0.513366,-4.961397,3.389252,-8.382696,1.859982,0.697437,6.028162,-5.486338,1.517360,9.444639,0.154775,8.940109,-1.715133,4.125083,1.062647,-0.533771,5.319691,-6.690736,-9.256564,3.703712,-4.226610,-1.278744,9.033484,2.055482,-3.008137,-4.594647,-3.735712,-2.781825,9.838088,-5.952156,8.163473,6.034076,7.702103,8.377614,-8.104631,2.081060,9.848085,-1.272472,-1.296141,1.818262,-2.594147,-9.028654,1.207962,2.301716,-0.170519,0.166446,-9.174305,-6.989660,-3.612428,4.054886,-9.020663,8.341172,5.523441,6.688363,-6.720948,-2.685296,-4.655522,9.499404,6.246444,-0.107456,-1.638605,7.161914,-6.114207,-6.581981,7.910923,4.478994,-6.488467,6.512480,-6.205042,1.975432,6.720941,-8.899218,-1.620599,-2.007898,-6.082191,4.359671,-2.232301,-8.433853,-8.059708,-5.291230,-5.885966,-7.998347,-8.294299,-6.789433,-6.011508,2.894860,-0.026085,6.493575,-9.697921,-0.394148,0.598023,1.450301,5.793660,-0.536954,0.803701,9.762955,1.738005,-2.090995,-7.488868,-0.443377,2.859919,-3.400309,6.785405,-8.389169,7.586735,3.666513,4.574403,1.685752,-7.287185,-1.501807,-3.720204,0.184606,6.987777,7.303351,6.406330,-4.810079,-7.155546,-0.026490,7.681266,4.057469,2.366479,0.065489,9.300975,3.574456,-6.835065,6.507646,-2.379717,-3.191923,1.015197,5.907844,-4.800722,3.634893,-9.434349,-7.340454,-9.165587,2.119256,-5.966002,-3.929600,9.641744,6.182282,-3.710821,-4.175108,-6.842751,-9.253556,-7.546519,-3.214945,-9.817173,2.605449,8.026957,-6.273915,5.815775,9.708749,-3.937835,-9.978604,-4.603492,7.889240,-9.204988,1.213555,6.993065,-4.418350,4.544399,-9.230737,-9.890470,-7.543234,5.260450,-3.040378,-5.699880,4.292833,7.063628,-5.600647,1.479584,-1.081607,9.091598,-1.953258,-9.065621,2.923080,2.036810,6.129753,2.814317,0.958109,-4.108356,-7.016951,-8.614365,6.617580,2.915709,8.385700,7.709637,-7.559060,1.472346,9.739577,-5.652014,4.288026,-7.631699,8.392071,-0.230623,8.372256,-4.631852,-7.712597,9.962300,8.018298,3.948937,4.903165,-5.766897,-1.141982,6.865586,2.511905,-4.128387,9.573851,8.017245,-0.508742,-2.937562,-5.042490,4.653185,3.259981,-6.050803,9.540797,7.473381,5.433809,8.238322,8.796461,1.157834,-8.426485,9.915536,1.271147,-4.129545,-5.725145,1.849332,-4.293941,8.114733,7.899446,-1.649740,-5.217763,1.713143,0.251424,9.929898,1.986060,-9.164572,-0.380252,-7.741739,-2.880929,0.749393,8.424376,-7.114760,-7.605176,3.928846,1.730196,-2.946654,7.032289,1.082835,-9.425751,6.301183,-9.820407,5.117228,0.358735,-1.425382,9.039012,-0.941279,-5.523739,-6.862439,7.961530,-8.203746,9.467432,-7.933804,-0.457949,0.406181,-4.609602,1.355319,-8.223987,6.113511,-8.645338,-8.604113,0.268213,-0.967495,6.745155,-2.134932,-9.734443,4.642657,-5.132005,-8.685852,-9.281369,4.755061,-5.991733,3.485936,-0.160180,-6.692704,-9.937353,-2.594672,8.192877,7.812662,5.828421,1.801844,-5.130221,3.257596,-1.731868,6.653199,7.871923,8.651059,1.626526,3.352598,2.282513,-0.787011,-8.109521,-9.917621,1.861885,-3.707875,2.838072,-5.640155,-8.262012,-3.420492,1.980564,0.470490,6.375595,-6.614150,7.596990,-4.972721,3.061933,-9.237824,6.007115,-0.883165,-0.230139,1.416733,-7.914865,4.133910,0.474830,-2.301431,-1.944206,8.580562,-5.211892,-3.070154,4.738300,1.426201,-2.014468,-3.173627,-2.800497,-4.379166,5.938988,-8.728577,-5.598843,6.108377,-6.217781,-7.705157,4.018849,-8.777284,-0.745597,-5.205432,0.189202,-2.196091,2.106600,7.419060,5.290888,0.564854,3.564997,4.742180,7.160573,4.392278,-2.229436,-9.840691,5.081629,1.763024,-0.675942,-2.600335,7.468155,3.863316,8.005339,-1.635677,-8.090370,-0.206327,-3.006679,3.427369,-6.103697,4.369829,2.594758,-6.946914,-7.380261,-8.050704,9.736407,-1.828117,0.909233,-2.243638,-4.446424,-7.365942,-2.041238,-9.285050,-3.305952,-9.940076,-9.978857,0.223689,-9.242215,-5.380929,8.572761,2.921252,6.504069,-5.199080,0.893015,-0.743449,7.222404,-3.553448,6.309445,-7.264334,5.849159,-0.814023,-8.120627,4.331369,2.910347,5.959426,-3.579847,-1.373593,-0.529615,-3.792513,3.011415,8.309146,7.124066,-0.840795,-3.031352,-9.971291,8.728628,7.912056,-1.127214,-6.009829,1.418265,5.373561,-4.391476,3.611655,-0.940826,-2.523596,-8.919824,-4.692563,-7.649336,-2.417577,-8.425700,-0.093806,6.876315,7.940803,-0.806291,-3.356198,-7.240889,2.660677,0.015482,8.725661,-3.664273,9.491618,-5.380554,8.397128,-8.454486,7.347966,-1.511077,-2.637978,-5.496101,-2.168461,-7.429714,-5.596386,-2.737366,7.676471,-9.729851,3.981738,5.945531,-2.974726,-0.599728,-1.299923,1.922304,2.425722,6.594403,-2.073719,-4.089856,-2.726165,1.299704,6.866675,-9.309327,9.535947,9.738856,3.892562,8.528450,-3.304419,1.156557,-8.902601,0.228950,6.196433,3.713662,-9.023590,-4.751404,-1.101769,9.260535,2.289467,4.713327,-7.517144,3.332079,2.036980,9.771860,-3.119834,-6.537169,-7.502497,5.435596,-1.058155,4.592697,-6.532102,4.059019,2.289904,-8.448594,-9.341901,1.312867,-4.262158,-6.533681,2.187653,-7.622707,7.123364,-4.116601,-5.170694,0.168954,-8.597150,0.015690,-5.504283,-7.239588,5.086712,-9.865212,-2.897506,-7.946198,-6.200359,-5.190384,1.804876,1.387752,2.927959,-7.580543,0.206285,-3.965427,-1.700197,-8.311829,-6.624416,-0.799715,8.297795,8.615376,-0.472093,1.664723,-2.837133,-8.094479,-3.955297,-4.963600,0.833917,5.964426,-6.641865,-7.784770,5.320090,5.796352,9.004690,6.222513,-5.962146,-2.261358,-1.805440,5.181822,4.594415,-4.601829,-9.583327,3.972169,0.357555,-4.191669,-4.105535,-7.060682,-0.891992,4.331075,7.103894,-9.739506,6.879886,-2.142683,-2.467051,7.205750,2.533725,8.120072,-0.268813,3.483626,7.152484,-0.098553,8.725866,6.422818,-1.959427,7.059429,2.349405,-1.197463,3.909151,2.963663,-5.897944,6.099791,-3.397816,2.076725,-3.019710,8.876542,7.779840,6.592911,-8.605868,-0.049372,-4.944091,5.546388,3.048274,-2.552124,-0.375751,6.981918,-9.352896,8.085459,6.570964,-2.752414,1.560573,-1.425145,1.330265,2.652074,-1.499647,-7.160963,-9.476655,2.365859,8.091885,-2.268500,9.737551,0.966655,-4.260336,-4.963408,3.308748,4.711982,-6.634253,6.782586,-6.856662,-2.554706,-1.609387,3.134784,-3.343735,7.732590,-3.264666,0.052370,4.339544,-1.637716,6.775997,5.598827,3.543314,-4.774771,-1.361140,3.069780,-6.065962,-4.225486,-3.048050,1.046928,-5.714755,2.896480,-7.797805,-0.647152,2.654894,-4.681428,1.424079,4.455831,-8.319507,5.763423,-0.817231,4.033233,-1.544852,2.464003,2.461971,2.377995,2.222936,4.346422,3.436296,3.750038,-0.516013,-2.898332,-7.497534,-2.225473,3.965290,5.447799,-5.360515,-9.408927,-4.067204,5.911792,0.718354,9.075458,3.520338,-9.497519,-3.948507,7.599247,2.262162,7.342859,-5.488923,0.133147,8.070116,8.508442,8.558947,-0.190793,0.629759,-6.032140,-6.946688,-4.065728,-9.432994,-2.491940,-4.841913,6.259694,0.109831,1.421104,-3.092173,4.159131,-7.552588,0.500590,0.408290,6.952326,9.948555,9.074033,-5.119579,-1.456408,-5.660545,6.740884,-1.073203,7.645893,7.921594,9.366975,2.651787,0.050110,4.907337,6.051246,-1.717130,-7.414113,-1.786898,4.862147,6.482777,6.812781,8.306153,-4.598210,3.565276,4.984361,7.107088,-4.336211,-8.778578,-6.788606,-7.613998,-2.022349,-0.795647,5.662848,-6.998218,8.595464,-7.267143,7.281083,-4.763761,0.164626,0.209043,-1.206164,-5.242465,6.890091,6.699583,-2.175077,-7.991148,-9.250661,9.482677,1.799767,2.361611,7.604164,-4.094864,2.289606,3.427041,-2.158712,6.757546,8.380989,-3.659993,-3.001235,-6.791471,5.165486,9.696901,3.175781,4.944080,-1.265768,-9.169633,-0.688466,3.946435,5.200543,6.580484,4.565793,-8.351892,-7.082868,-6.028329,-4.909262,6.470096,8.428681,-5.964187,-2.287229,1.375601,-6.022117,-1.337872,-3.627529,-2.197495,-9.558669,-5.041428,-6.292217,-1.268680,3.615967,-6.477583,1.907743,8.579102,-0.634938,-2.624598,-5.677685,-5.058346,3.512656,1.554993,-0.937821,6.048690,9.559224,-4.737288,-1.762223,-4.259251,3.468599,-3.110052,4.916912,3.371211,6.194442,-5.698811,-7.137368,-8.277252,8.971928,3.397099,2.443530,7.106044,-9.172651,-3.323651,-5.075127,-7.936030,8.939011,3.474912,0.210367,9.867496,-6.507583,-7.351818,-4.236722,-9.359705,-3.028188,0.844962,-1.733023,9.557110,-8.230627,3.003535,-2.234237,9.555102,-7.310633,-1.544868,8.633819,-2.130418,7.981647,-1.457703,6.224394,-4.365763,5.787884,7.417721,-8.279848,-7.809904,0.166624,9.121945,-9.758954,2.229702,5.295418,-0.375586,3.994200,-6.145547,1.661271,-3.296309,3.831329,-2.027020,-2.123519,-9.070429,-1.280268,-4.350512,9.016835,-3.967863,-4.728870,-7.264157,4.933036,-4.583191,-1.937330,-2.985479,-1.579307,-1.619035,1.190094,-2.594312,2.198342,-3.856130,9.968858,1.834179,-7.721142,-1.039882,5.997815,0.068764,6.545409,-9.846985,-3.719487,1.823697,9.278581,4.803553,8.811623,2.005736,-0.304692,-0.364685,-1.633219,-7.223883,5.506183,4.578578,-4.854165,-4.531784,-8.187897,8.402705,4.889475,1.368628,-8.556959,6.903609,-4.831337,-8.067480,-0.126970,0.617726,-2.907678,5.176248,-8.976840,2.763843,5.003627,8.163039,-9.398587,4.077381,5.103837,-2.850120,6.918694,1.142274,-1.805893,-5.722089,4.534192,9.418106,-3.694870,8.085647,8.505407,4.201261,-8.501746,7.203732,4.307405,-1.928769,4.863441,-3.558113,-1.295024,0.963707,-3.676966,6.043296,6.923065,4.227911,-0.936731,-9.156494,4.082353,-9.711227,-6.866172,-6.235907,-7.749449,5.180523,-5.699757,-7.800594,2.906469,3.403123,-8.698922,0.859631,-4.828602,3.159501,-5.456327,-1.042585,2.805144,9.721359,-5.572067,5.006223,0.567503,2.676920,-8.776320,-4.555016,8.850106,2.215636,9.525427,4.119746,-6.387242,-8.519191,-3.752425,-6.828211,9.452563,-4.088926,-6.854007,9.401901,-5.653070,8.143893,-3.917855,-1.975162,9.172637,1.031928,4.084203,-6.144144,3.559268,-1.251075,-7.759439,3.904875,-2.988134,1.298270,5.101131,-3.413819,2.894036,9.718057,-6.554566,7.258688,0.444729,-9.475655,5.254272,-0.709667,2.151325,2.102722,-9.916221,2.323379,-6.620604,9.389844,1.301422,6.867930,3.955657,1.891168,-5.909933,1.457249,7.619519,-3.031484,7.380199,-4.732490,7.072724,-4.633943,-6.026357,6.086674,-2.041201,8.901370,-6.864071,2.804722,2.068843,5.444300,9.418979,9.021375,-7.015184,-3.987184,1.203881,-4.876643,-3.803074,-9.208851,3.586370,8.249695,-2.491697,1.209261,1.217863,-9.624517,1.249642,-1.273231,-6.608784,-3.229248,-5.155279,-6.381424,9.892181,-7.385827,4.550539,-6.329437,-0.179100,0.339487,-3.269767,-7.000658,4.541143,-7.913661,-0.732001,6.995028,1.037532,-9.912286,-9.481823,8.877163,8.483820,5.832572,-6.000381,9.167449,8.372217,5.310887,-7.975375,3.992889,-7.759232,-6.507710,4.501379,6.843857,9.689980,-1.584166,0.126499,8.651197,1.337645,8.140979,6.563817,9.394647,8.577203,-2.174116,-1.060432,8.850390,-4.952445,3.856710,-2.235044,-8.543570,-0.880426,9.270685,-0.451119,9.129951,-4.841296,8.789601,0.229228,-6.807016,5.053281,-7.430766,4.150207,-4.998224,-1.398193,3.295985,-0.695628,-6.226297,-6.591163,-8.748929,6.834073,-2.455957,2.035934,4.153615,-1.644786,7.863933,-2.975953,6.601233,-1.602226,6.543936,-8.477484,3.075661,-3.843326,8.065112,3.686052,1.719928,1.864767,-5.300017,5.436198,-6.006179,-2.794947,9.185877,5.701920,-3.754693,-3.048571,-5.911960,-3.318627,-3.141929,-7.283448,8.234149,4.798909,-1.943635,-9.784195,2.911590,-0.714663,-6.766834,-6.868595,7.355390,-8.732079,0.078517,-6.319717,0.861029,0.917204,9.106227,-5.262912,3.301626,-3.254675,-0.775072,6.666065,-0.305346,8.935945,-3.288503,0.594451,-2.383692,1.074787,-8.637441,0.663691,-5.656800,2.428551,-6.200495,-1.309519,-0.440399,1.422022,5.544410,-2.054545,-6.811864,-5.620396,1.789528,9.188878,-7.838576,0.758957,-5.247759,-8.094237,2.996676,-4.444905,0.866717,-3.443391,6.069397,8.540360,-9.462836,7.290576,3.052641,7.776471,5.138225,-1.488986,6.296858,-9.108381,6.063719,-2.788356,9.278352,-3.557843,8.900494,-1.782674,3.365034,9.292845,0.083304,-2.702171,0.323221,-5.626342,-4.735661,-9.179948,-1.863304,8.016172,0.458282,8.054073,2.275263,-1.638724,-9.877189,7.149613,-2.008920,2.777562,3.410128,-6.437022,7.111017,3.394112,-1.827785,2.407065,6.225340,-1.941627,-3.314765,1.285521,8.767096,-8.467623,-5.837223,5.418977,-1.090547,-1.000363,5.106992,-5.467576,9.061609,-4.084765,5.401307,9.203691,3.321574,-7.614082,3.547147,8.541632,6.271492,-5.614963,7.603326,-7.557817,-5.973063,-9.822809,9.352105,-1.677067,-1.173754,-7.214990,-9.601720,-2.502216,6.885482,6.362048,-3.927847,-0.931978,-5.378832,9.230633,-1.200554,0.905285,2.710368,-9.722000,0.620217,2.001892,-7.792558,3.586077,5.588739,-2.092774,-1.025162,4.113873,-4.380883,-7.793614,-9.230896,-5.548582,9.725689,9.002549,0.079661,-5.874570,-3.552019,3.045073,2.627500,6.531489,-6.493760,-6.103959,5.362524,-5.952387,5.533312,-5.502227,-0.776199,-4.708005,9.821615,-1.655938,-5.150749,5.737448,9.146188,9.605906,0.947504,1.721870,-9.485130,1.402272,-4.085993,5.736598,-4.143178,9.391720,-4.543600,6.562121,-8.595344,9.783185,-0.802083,6.674324,5.508453,-5.319866,-3.368808,-2.938090,4.936712,-1.047596,5.060369,4.187025,-3.313084,1.298679,9.500497,-2.893476,-9.245218,-4.780714,-0.201580,-4.329769,-8.250919,-1.048659,9.069035,9.339625,-8.202730,-2.707748,5.354777,-2.180035,-7.421588,-9.822582,-3.108496,9.262126,-7.137207,0.852308,-0.607276,-2.491406,-5.673996,3.716310,-8.112284,6.978189,-0.014198,-8.700718,8.775868,0.179373,-4.181967,7.490920,-5.999960,-8.353792,-8.699589,9.745142,4.251105,7.678338,7.483185,2.780451,6.858270,-7.721118,-9.453645,1.716347,9.388847,-9.578790,3.402486,-5.195905,-7.509861,-8.214582,-6.560411,3.287898,-6.996048,-1.807827,8.013619,9.806602,-9.853121,3.843615,-5.329880,-0.430176,0.405313,-3.284825,9.551885,0.524506,4.414856,-4.876892,5.829325,1.818325,0.280858,8.799972,-1.085138,5.980693,1.419518,3.524368,-0.032562,9.695538,-0.865467,-8.818633,3.692821,-7.213467,8.578224,-5.140054,-4.190974,-7.209505,5.897450,3.090838,-4.211287,-3.733249,1.112978,-4.571216,-4.117937,2.576145,8.001922,-3.854503,0.598176,2.083776,2.512656,-6.180590,2.386821,5.655459,-0.028476,-5.132959,-1.117168,-3.856070,7.435743,5.454464,9.618259,-7.432434,-7.020736,3.487752,2.724673,-7.837245,-1.532379,7.958866,-3.253538,7.113690,8.926709,1.069296,-2.157944,7.518909,-7.383811,7.279926,7.743588,-1.632049,-2.181481,-3.706099,-6.058275,2.738807,5.526509,2.677341,1.632348,-8.488685,-5.305194,-8.710876,-5.688564,-4.851210,-4.897881,-1.251725,-6.876032,8.178482,-0.646569,-6.191990,0.961940,6.534046,-1.427754,-3.470178,8.317373,-3.041707,-7.648396,2.989741,-0.950629,-0.108137,8.011495,1.145402,5.410779,1.531868,-8.092043,6.592715,9.483125,-2.044229,5.005336,9.107702,4.369602,-4.519722,4.896578,-3.726748,-6.039168,-0.314315,4.502537,6.313863,3.092602,-2.911102,-8.981838,1.017548,4.980677,-9.556968,-2.000946,9.157396,4.957498,8.159122,7.716505,7.747843,-1.372841,-4.269955,4.027573,7.304647,-0.221896,-8.485179,8.150806,-9.818339,6.556696,4.667539,-0.172619,0.019673,-2.198044,-2.276978,6.319749,2.633208,-5.101719,1.106706,1.684525,-3.821258,9.732633,2.056417,-3.547690,1.084821,-0.230527,9.146728,4.326056,-0.295451,4.199848,-3.075356,-7.468636,9.383157,6.753886,-0.192090,4.800129,-0.598756,7.077948,0.152154,0.299931,5.926217,3.448179,-9.599636,-3.730393,-8.182915,-5.270470,-5.759627,1.139007,9.835512,-5.819263,9.334393,-3.430757,-3.173625,7.846331,2.538452,-6.518113,-6.671036,0.870514,1.457814,-6.703998,6.328505,-8.381891,9.502933,3.276744,-9.096340,5.511527,6.723459,4.177315,5.699494,4.042353,4.840731,-9.740330,4.379083,-5.812623,9.929863,0.872255,8.895433,-1.856104,7.721027,5.411659,5.912396,9.523965,-8.083772,5.005793,-2.594606,-9.095615,-1.201426,8.731688,-9.822668,-0.658589,-9.160610,4.579797,6.760893,0.903364,2.771792,-0.853351,2.512316,-9.201716,-3.020162,6.544086,-6.711429,-0.062062,-5.710347,9.402573,-4.580811,-1.191127,4.359400,-4.832137,0.450555,4.201594,3.922895,-2.257799,0.824559,-4.492504,-5.099806,-2.428150,-5.784585,3.796549,1.868217,3.325349,5.319587,-2.734429,3.477322,3.599029,-0.962352,-8.694923,0.594376,-6.482922,3.933756,-1.637608,0.047198,-8.638758,-9.750619,-2.232251,-9.643073,9.065099,-7.892696,-6.264019,-5.350003,-1.531115,-3.707559,-9.672714,3.238820,7.024161,-2.891325,-1.190729,-5.708264,3.222111,2.592972,-8.787805,0.388670,3.214501,-4.316033,-0.407557,5.105403,5.723336,3.382948,1.019817,2.552051,8.916314,6.516608,7.342250,-6.841724,-0.213998,-5.925648,-8.001026,-9.774819,7.760107,8.803184,2.292737,6.186165,1.977532,8.355362,3.469639,7.608688,-7.612686,8.744351,-7.006260,-4.975600,9.248664,-6.199615,-4.254314,7.822771,3.122954,9.400744,7.456200,4.265287,9.229342,-9.384167,0.881499,6.400497,-7.151949,7.618912,8.626857,0.377429,3.523489,-1.021437,-2.324736,0.829288,-2.708784,-4.636450,8.974780,-9.335261,-3.636332,-2.306074,-8.595476,0.507214,-3.742061,-1.963060,-8.708721,-7.869128,7.079577,-3.866516,-4.511793,3.545148,-2.938570,-0.838848,9.971324,3.402478,1.331813,-4.049649,5.066801,-9.011085,-2.688268,2.946567,-3.832989,-4.558357,-9.069221,5.044634,6.644345,-5.211518,9.032255,4.270565,3.952334,-3.970016,-5.364186,3.152465,8.046088,5.188181,-4.575912,-8.523480,-2.793901,-3.224414,5.221591,5.170637,-1.192660,5.176608,6.713842,-5.318761,4.459160,0.617305,2.259855,6.777360,3.311252,2.311125,-2.258938,-5.160310,-9.623831,6.464590,3.800328,-2.631792,-9.333692,9.684985,5.014225,6.738549,-9.046951,-9.089403,0.392930,-4.922191,3.448702,-2.921650,-2.005803,-1.785736,3.364824,-3.611989,5.785494,-1.625207,-2.013281,3.542980,6.785873,-1.319621,8.884984,-9.984062,6.476961,9.993425,-4.417358,-2.857874,5.035303,8.709027,-8.789990,1.832884,3.301960,-3.441633,2.659871,8.538669,-3.229992,-4.725639,-3.462851,-0.329489,-3.251753,-2.893820,5.131118,3.167741,-3.215837,8.254506,-4.272791,-0.202288,-9.507011,-9.892684,-6.655321,-2.354964,2.643652,-9.572893,0.269400,9.291828,5.481414,-9.394103,-2.600993,4.437999,9.268314,-3.424714,0.092886,7.724214,0.795146,8.089922,1.183170,-2.633368,-3.470541,-0.516110,0.260276,3.781310,-9.365505,6.674725,9.474232,7.568278,2.460822,4.137348,-9.496235,-6.668795,-5.937360,5.490470,5.475875,-8.966658,-7.198456,-2.246205,4.849262,-2.181234,3.392571,-3.701203,-4.414565,2.768644,5.985611,-3.329318,1.380625,5.325069,-3.127030,7.951846,-8.621190,-9.682154,3.141510,-9.989650,-6.106586,-2.776887,-5.649661,4.313248,-5.502975,-3.600148,5.225530,1.632570,8.092314,-5.191208,4.178333,-5.126064,6.262516,-6.872586,6.227854,7.850126,-4.474741,8.337051,9.872222,1.571668,-3.742888,7.278696,6.778520,-4.682184,-1.248633,-2.470478,7.593948,2.368673,7.959649,4.767101,3.560397,0.918601,-7.743887,-1.552874,3.947522,5.760978,-9.114765,2.183291,6.736892,-4.445154,-2.451744,0.885709,4.502285,-5.066333,-3.024414,4.355742,9.521512,5.455116,-7.031608,5.812274,-9.463280,7.507680,1.630253,-0.462088,-3.025312,-4.071459,7.047959,-8.583460,4.558805,-0.789449,-1.317827,3.923472,-7.601085,1.154914,-0.278994,-0.022956,1.038376,8.863431,-4.156223,3.571358,7.967484,3.670155,4.953560,9.234940,-6.340897,9.706451,-9.295387,-4.457919,7.549371,1.860764,-2.334862,-5.089883,8.676283,7.965489,3.312632,-5.867613,-7.186661,-6.791701,-3.858091,-4.171426,3.798934,5.403716,-0.039681,-4.483592,-6.635202,-2.941482,8.567341,-6.300832,-8.121460,-1.251738,4.490030,-3.979429,-2.130526,8.262503,4.804244,5.631605,6.356916,-5.906519,1.292990,-6.711062,-6.046532,-4.538546,7.511112,-3.959495,-8.501830,-6.364542,0.628942,-3.712798,1.015519,-1.360049,2.927680,0.832832,8.622588,0.816158,-5.492031,-8.563141,-0.190344,-8.467219,8.653812,5.403534,9.120822,1.929626,2.067430,-8.717080,-0.310495,3.033774,-1.499331,-0.359223,-3.623314,-1.196019,2.825629,0.654854,-1.095262,-6.515168,-1.378708,9.570724,7.886692,-0.679725,-6.042452,0.673843,-9.858751,0.963147,3.216625,-8.425275,8.034905,-9.838541,3.735650,-7.801602,7.516255,5.379066,-3.478551,0.540952,-0.340034,-1.570383,-4.402580,8.124976,-6.851959,8.476163,-6.640005,9.133171,6.176141,9.877719,6.665105,-3.894454,-2.224792,-6.043002,-3.846429,-6.212947,-7.180139,-8.491367,-9.551786,1.126880,-0.342359,-7.988817,-2.089101,-8.257805,0.675528,-0.202789,2.422260,4.321851,-2.036322,-8.404989,3.255337,5.754053,-0.838176,-1.234181,7.568828,6.314947,-0.747736,8.008146,-5.653213,-8.209035,3.404078,-2.046992,0.849614,-4.685816,-2.298357,3.406464,9.890364,3.033548,-7.418860,-5.249031,4.745335,0.845390,3.717140,-6.064216,-0.740019,4.231480,0.557863,-0.003145,7.379050,-4.230924,1.405646,9.810259,7.386044,-0.140795,-9.168659,1.327184,5.701400,5.678235,8.129414,-8.311553,1.862077,9.712830,4.199265,2.973288,-0.994831,-0.037431,8.353395,-7.407953,-7.629810,-9.029599,5.445047,-7.179055,-3.530002,4.344853,7.357925,6.110055,8.214341,0.494736,-6.727248,5.120815,8.318075,8.101408,4.979190,9.155450,-8.287572,-3.777844,1.755504,-5.133293,5.566186,-9.080936,8.808599,7.455378,-4.855402,-9.524548,6.537540,-8.773754,3.297919,-2.588254,2.508063,7.951058,3.150906,-5.104788,-3.470215,4.436245,-8.682192,4.139660,6.272585,5.576764,1.637281,2.411561,6.063454,7.988527,6.677052,-1.284750,8.553796,-9.405794,6.372282,-9.468908,-9.110426,4.702132,5.036728,-1.493884,4.546392,-1.022959,1.637897,-9.191959,7.710405,-8.332188,3.025587,-4.142656,-7.029486,7.089793,3.711056,6.117722,4.856011,-8.323681,0.132793,-5.464740,-0.136851,-1.006633,-0.030738,5.527355,-2.229212,-3.038824,-7.376525,0.081236,1.069085,-4.321750,-9.849134,-9.587195,3.930552,-3.107311,-2.752581,6.990296,0.171387,-3.259275,-9.872089,-3.545815,5.094351,-1.280139,3.857164,-2.203489,0.772094,0.993582,3.633240,4.660533,-8.634924,7.791527,-0.984654,-1.903805,-1.762225,1.670149,-6.355092,-8.741268,-2.120584,9.370646,-1.195650,0.521978,-0.960746,2.366104,-7.496494,-7.567133,-4.172895,3.128906,1.008803,-0.580977,0.247402,-3.295905,7.483480,8.303900,-1.672861,4.851537,0.167026,-9.793644,2.733365,4.109357,-5.645635,3.328623,7.235336,-0.731240,-4.411820,0.965372,-3.343375,8.345364,-1.923945,-6.574573,3.506568,6.551810,-9.650594,-8.325094,5.896642,3.672718,-0.878744,-3.133046,-4.951263,-8.640759,4.808378,-1.716477,3.478040,-5.289554,-8.383305,-6.799785,-2.574496,-3.149545,4.548366,9.990668,-6.691125,0.781127,8.297562,5.135504,-5.838769,-3.315875,3.006734,2.773365,-5.051382,-1.472011,-5.279045,-9.035995,-6.615770,0.621839,9.358575,-0.622834,-9.141521,-2.831044,5.920101,3.460034,5.366007,4.112950,-6.492754,-3.913216,-0.733591,4.211755,3.641716,-7.909168,3.945197,-0.771553,-5.430730,-0.409718,-5.968143,-3.329953,-1.577071,4.427155,1.472630,-8.277914,1.672631,-4.996704,7.861553,6.388387,5.446255,-3.716059,1.716391,4.197257,9.963182,-3.443564,4.628778,0.755555,-6.677315,6.674805,-2.715514,4.968397,-2.634050,6.544000,-1.511397,1.268026,-2.616270,-2.142075,-3.947238,1.119188,5.448054,8.102157,-8.737060,8.033041,7.858408,-2.898586,-2.162789,7.949315,2.695642,3.656659,6.413697,9.116289,-4.321117,-5.117242,-7.905758,7.641518,4.784978,-4.607721,8.833405,2.957330,-3.330742,-3.520492,3.095761,-6.718146,1.767789,-6.617117,-9.562986], dtype = "float32")#candidate|4869|(2535,)|const|float32
call_4868 = relay.TupleGetItem(func_2528_call(relay.reshape(const_4869.astype('float32'), [2535,]), relay.reshape(const_4859.astype('float64'), [70, 9]), relay.reshape(const_4869.astype('float64'), [2535,]), ), 4)
call_4870 = relay.TupleGetItem(func_2533_call(relay.reshape(const_4869.astype('float32'), [2535,]), relay.reshape(const_4859.astype('float64'), [70, 9]), relay.reshape(const_4869.astype('float64'), [2535,]), ), 4)
bop_4873 = relay.right_shift(call_4846.astype('int64'), var_4851.astype('int64')) # shape=(11, 12, 4)
bop_4876 = relay.right_shift(call_4847.astype('int64'), var_4851.astype('int64')) # shape=(11, 12, 4)
func_4022_call = mod.get_global_var('func_4022')
func_4024_call = mutated_mod.get_global_var('func_4024')
call_4878 = func_4022_call()
call_4879 = func_4022_call()
func_4820_call = mod.get_global_var('func_4820')
func_4822_call = mutated_mod.get_global_var('func_4822')
call_4880 = func_4820_call()
call_4881 = func_4820_call()
bop_4903 = relay.floor_mod(const_4869.astype('float64'), call_4878.astype('float64')) # shape=(7, 6, 2535)
bop_4906 = relay.floor_mod(const_4869.astype('float64'), call_4879.astype('float64')) # shape=(7, 6, 2535)
output = relay.Tuple([call_4850,const_4852,call_4858,const_4859,call_4868,bop_4873,call_4880,bop_4903,])
output2 = relay.Tuple([call_4853,const_4852,call_4860,const_4859,call_4870,bop_4876,call_4881,bop_4906,])
func_4908 = relay.Function([var_4851,], output)
mod['func_4908'] = func_4908
mod = relay.transform.InferType()(mod)
var_4909 = relay.var("var_4909", dtype = "int8", shape = ())#candidate|4909|()|var|int8
output = func_4908(var_4909)
func_4910 = relay.Function([var_4909], output)
mutated_mod['func_4910'] = func_4910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2993_call = mod.get_global_var('func_2993')
func_2995_call = mutated_mod.get_global_var('func_2995')
call_4932 = func_2993_call()
call_4933 = func_2993_call()
func_4428_call = mod.get_global_var('func_4428')
func_4431_call = mutated_mod.get_global_var('func_4431')
var_4943 = relay.var("var_4943", dtype = "int16", shape = (624,))#candidate|4943|(624,)|var|int16
var_4944 = relay.var("var_4944", dtype = "float64", shape = (10, 63))#candidate|4944|(10, 63)|var|float64
call_4942 = relay.TupleGetItem(func_4428_call(relay.reshape(var_4943.astype('int16'), [2, 312]), relay.reshape(var_4944.astype('float64'), [5, 126]), ), 4)
call_4945 = relay.TupleGetItem(func_4431_call(relay.reshape(var_4943.astype('int16'), [2, 312]), relay.reshape(var_4944.astype('float64'), [5, 126]), ), 4)
var_4948 = relay.var("var_4948", dtype = "float64", shape = (5, 126))#candidate|4948|(5, 126)|var|float64
bop_4949 = relay.bitwise_and(call_4942.astype('uint64'), relay.reshape(var_4948.astype('uint64'), relay.shape_of(call_4942))) # shape=(5, 126)
bop_4952 = relay.bitwise_and(call_4945.astype('uint64'), relay.reshape(var_4948.astype('uint64'), relay.shape_of(call_4945))) # shape=(5, 126)
bop_4964 = relay.bitwise_xor(var_4948.astype('uint8'), relay.reshape(var_4944.astype('uint8'), relay.shape_of(var_4948))) # shape=(5, 126)
uop_4971 = relay.sqrt(bop_4964.astype('float64')) # shape=(5, 126)
bop_4975 = relay.minimum(var_4944.astype('int64'), relay.reshape(call_4942.astype('int64'), relay.shape_of(var_4944))) # shape=(10, 63)
bop_4978 = relay.minimum(var_4944.astype('int64'), relay.reshape(call_4945.astype('int64'), relay.shape_of(var_4944))) # shape=(10, 63)
uop_4986 = relay.rsqrt(uop_4971.astype('float32')) # shape=(5, 126)
output = relay.Tuple([call_4932,var_4943,bop_4949,bop_4975,uop_4986,])
output2 = relay.Tuple([call_4933,var_4943,bop_4952,bop_4978,uop_4986,])
func_4988 = relay.Function([var_4943,var_4944,var_4948,], output)
mod['func_4988'] = func_4988
mod = relay.transform.InferType()(mod)
var_4989 = relay.var("var_4989", dtype = "int16", shape = (624,))#candidate|4989|(624,)|var|int16
var_4990 = relay.var("var_4990", dtype = "float64", shape = (10, 63))#candidate|4990|(10, 63)|var|float64
var_4991 = relay.var("var_4991", dtype = "float64", shape = (5, 126))#candidate|4991|(5, 126)|var|float64
output = func_4988(var_4989,var_4990,var_4991,)
func_4992 = relay.Function([var_4989,var_4990,var_4991,], output)
mutated_mod['func_4992'] = func_4992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4254_call = mod.get_global_var('func_4254')
func_4255_call = mutated_mod.get_global_var('func_4255')
call_4997 = func_4254_call()
call_4998 = func_4254_call()
func_3731_call = mod.get_global_var('func_3731')
func_3733_call = mutated_mod.get_global_var('func_3733')
call_5026 = relay.TupleGetItem(func_3731_call(), 0)
call_5027 = relay.TupleGetItem(func_3733_call(), 0)
output = relay.Tuple([call_4997,call_5026,])
output2 = relay.Tuple([call_4998,call_5027,])
func_5028 = relay.Function([], output)
mod['func_5028'] = func_5028
mod = relay.transform.InferType()(mod)
output = func_5028()
func_5029 = relay.Function([], output)
mutated_mod['func_5029'] = func_5029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_5030 = relay.TupleGetItem(func_1115_call(), 0)
call_5031 = relay.TupleGetItem(func_1116_call(), 0)
uop_5036 = relay.cosh(call_5030.astype('float32')) # shape=(7, 6, 1)
uop_5038 = relay.cosh(call_5031.astype('float32')) # shape=(7, 6, 1)
bop_5041 = relay.equal(uop_5036.astype('bool'), relay.reshape(call_5030.astype('bool'), relay.shape_of(uop_5036))) # shape=(7, 6, 1)
bop_5044 = relay.equal(uop_5038.astype('bool'), relay.reshape(call_5031.astype('bool'), relay.shape_of(uop_5038))) # shape=(7, 6, 1)
output = relay.Tuple([bop_5041,])
output2 = relay.Tuple([bop_5044,])
func_5051 = relay.Function([], output)
mod['func_5051'] = func_5051
mod = relay.transform.InferType()(mod)
output = func_5051()
func_5052 = relay.Function([], output)
mutated_mod['func_5052'] = func_5052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1442_call = mod.get_global_var('func_1442')
func_1444_call = mutated_mod.get_global_var('func_1444')
call_5090 = relay.TupleGetItem(func_1442_call(), 1)
call_5091 = relay.TupleGetItem(func_1444_call(), 1)
uop_5101 = relay.exp(call_5090.astype('float64')) # shape=(13, 13, 15)
uop_5103 = relay.exp(call_5091.astype('float64')) # shape=(13, 13, 15)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_5112 = func_3352_call()
call_5113 = func_3352_call()
output = relay.Tuple([uop_5101,call_5112,])
output2 = relay.Tuple([uop_5103,call_5113,])
func_5114 = relay.Function([], output)
mod['func_5114'] = func_5114
mod = relay.transform.InferType()(mod)
mutated_mod['func_5114'] = func_5114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5114_call = mutated_mod.get_global_var('func_5114')
call_5115 = func_5114_call()
output = call_5115
func_5116 = relay.Function([], output)
mutated_mod['func_5116'] = func_5116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5179 = relay.var("var_5179", dtype = "float64", shape = (15, 3, 13))#candidate|5179|(15, 3, 13)|var|float64
uop_5180 = relay.acosh(var_5179.astype('float64')) # shape=(15, 3, 13)
output = uop_5180
output2 = uop_5180
func_5182 = relay.Function([var_5179,], output)
mod['func_5182'] = func_5182
mod = relay.transform.InferType()(mod)
var_5183 = relay.var("var_5183", dtype = "float64", shape = (15, 3, 13))#candidate|5183|(15, 3, 13)|var|float64
output = func_5182(var_5183)
func_5184 = relay.Function([var_5183], output)
mutated_mod['func_5184'] = func_5184
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5240 = relay.var("var_5240", dtype = "uint16", shape = (16, 10, 7))#candidate|5240|(16, 10, 7)|var|uint16
var_5241 = relay.var("var_5241", dtype = "uint16", shape = (16, 10, 7))#candidate|5241|(16, 10, 7)|var|uint16
bop_5242 = relay.equal(var_5240.astype('bool'), relay.reshape(var_5241.astype('bool'), relay.shape_of(var_5240))) # shape=(16, 10, 7)
output = bop_5242
output2 = bop_5242
func_5246 = relay.Function([var_5240,var_5241,], output)
mod['func_5246'] = func_5246
mod = relay.transform.InferType()(mod)
var_5247 = relay.var("var_5247", dtype = "uint16", shape = (16, 10, 7))#candidate|5247|(16, 10, 7)|var|uint16
var_5248 = relay.var("var_5248", dtype = "uint16", shape = (16, 10, 7))#candidate|5248|(16, 10, 7)|var|uint16
output = func_5246(var_5247,var_5248,)
func_5249 = relay.Function([var_5247,var_5248,], output)
mutated_mod['func_5249'] = func_5249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3706_call = mod.get_global_var('func_3706')
func_3708_call = mutated_mod.get_global_var('func_3708')
call_5276 = relay.TupleGetItem(func_3706_call(), 0)
call_5277 = relay.TupleGetItem(func_3708_call(), 0)
output = relay.Tuple([call_5276,])
output2 = relay.Tuple([call_5277,])
func_5287 = relay.Function([], output)
mod['func_5287'] = func_5287
mod = relay.transform.InferType()(mod)
mutated_mod['func_5287'] = func_5287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5287_call = mutated_mod.get_global_var('func_5287')
call_5288 = func_5287_call()
output = call_5288
func_5289 = relay.Function([], output)
mutated_mod['func_5289'] = func_5289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4820_call = mod.get_global_var('func_4820')
func_4822_call = mutated_mod.get_global_var('func_4822')
call_5333 = func_4820_call()
call_5334 = func_4820_call()
output = relay.Tuple([call_5333,])
output2 = relay.Tuple([call_5334,])
func_5335 = relay.Function([], output)
mod['func_5335'] = func_5335
mod = relay.transform.InferType()(mod)
mutated_mod['func_5335'] = func_5335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5335_call = mutated_mod.get_global_var('func_5335')
call_5336 = func_5335_call()
output = call_5336
func_5337 = relay.Function([], output)
mutated_mod['func_5337'] = func_5337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2603_call = mod.get_global_var('func_2603')
func_2604_call = mutated_mod.get_global_var('func_2604')
call_5379 = relay.TupleGetItem(func_2603_call(), 0)
call_5380 = relay.TupleGetItem(func_2604_call(), 0)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_5392 = relay.TupleGetItem(func_1197_call(), 0)
call_5393 = relay.TupleGetItem(func_1198_call(), 0)
func_4022_call = mod.get_global_var('func_4022')
func_4024_call = mutated_mod.get_global_var('func_4024')
call_5396 = func_4022_call()
call_5397 = func_4022_call()
bop_5398 = relay.divide(call_5396.astype('float32'), relay.reshape(call_5379.astype('float32'), relay.shape_of(call_5396))) # shape=(7, 6, 1)
bop_5401 = relay.divide(call_5397.astype('float32'), relay.reshape(call_5380.astype('float32'), relay.shape_of(call_5397))) # shape=(7, 6, 1)
output = relay.Tuple([call_5392,bop_5398,])
output2 = relay.Tuple([call_5393,bop_5401,])
func_5415 = relay.Function([], output)
mod['func_5415'] = func_5415
mod = relay.transform.InferType()(mod)
mutated_mod['func_5415'] = func_5415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5415_call = mutated_mod.get_global_var('func_5415')
call_5416 = func_5415_call()
output = call_5416
func_5417 = relay.Function([], output)
mutated_mod['func_5417'] = func_5417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4121_call = mod.get_global_var('func_4121')
func_4123_call = mutated_mod.get_global_var('func_4123')
call_5420 = relay.TupleGetItem(func_4121_call(), 1)
call_5421 = relay.TupleGetItem(func_4123_call(), 1)
output = relay.Tuple([call_5420,])
output2 = relay.Tuple([call_5421,])
func_5453 = relay.Function([], output)
mod['func_5453'] = func_5453
mod = relay.transform.InferType()(mod)
mutated_mod['func_5453'] = func_5453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5453_call = mutated_mod.get_global_var('func_5453')
call_5454 = func_5453_call()
output = call_5454
func_5455 = relay.Function([], output)
mutated_mod['func_5455'] = func_5455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4203_call = mod.get_global_var('func_4203')
func_4205_call = mutated_mod.get_global_var('func_4205')
call_5467 = func_4203_call()
call_5468 = func_4203_call()
var_5469 = relay.var("var_5469", dtype = "int32", shape = (528, 6))#candidate|5469|(528, 6)|var|int32
bop_5470 = relay.multiply(call_5467.astype('uint16'), var_5469.astype('uint16')) # shape=(528, 6)
bop_5473 = relay.multiply(call_5468.astype('uint16'), var_5469.astype('uint16')) # shape=(528, 6)
func_2300_call = mod.get_global_var('func_2300')
func_2304_call = mutated_mod.get_global_var('func_2304')
var_5478 = relay.var("var_5478", dtype = "uint8", shape = (288,))#candidate|5478|(288,)|var|uint8
call_5477 = relay.TupleGetItem(func_2300_call(relay.reshape(var_5478.astype('uint8'), [3, 6, 16]), relay.reshape(var_5478.astype('uint8'), [3, 6, 16]), relay.reshape(var_5478.astype('uint8'), [3, 6, 16]), ), 2)
call_5479 = relay.TupleGetItem(func_2304_call(relay.reshape(var_5478.astype('uint8'), [3, 6, 16]), relay.reshape(var_5478.astype('uint8'), [3, 6, 16]), relay.reshape(var_5478.astype('uint8'), [3, 6, 16]), ), 2)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_5480 = relay.TupleGetItem(func_864_call(), 0)
call_5481 = relay.TupleGetItem(func_865_call(), 0)
output = relay.Tuple([bop_5470,call_5477,var_5478,call_5480,])
output2 = relay.Tuple([bop_5473,call_5479,var_5478,call_5481,])
func_5485 = relay.Function([var_5469,var_5478,], output)
mod['func_5485'] = func_5485
mod = relay.transform.InferType()(mod)
mutated_mod['func_5485'] = func_5485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5485_call = mutated_mod.get_global_var('func_5485')
var_5487 = relay.var("var_5487", dtype = "int32", shape = (528, 6))#candidate|5487|(528, 6)|var|int32
var_5488 = relay.var("var_5488", dtype = "uint8", shape = (288,))#candidate|5488|(288,)|var|uint8
call_5486 = func_5485_call(var_5487,var_5488,)
output = call_5486
func_5489 = relay.Function([var_5487,var_5488,], output)
mutated_mod['func_5489'] = func_5489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5415_call = mod.get_global_var('func_5415')
func_5417_call = mutated_mod.get_global_var('func_5417')
call_5501 = relay.TupleGetItem(func_5415_call(), 0)
call_5502 = relay.TupleGetItem(func_5417_call(), 0)
output = call_5501
output2 = call_5502
func_5504 = relay.Function([], output)
mod['func_5504'] = func_5504
mod = relay.transform.InferType()(mod)
mutated_mod['func_5504'] = func_5504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5504_call = mutated_mod.get_global_var('func_5504')
call_5505 = func_5504_call()
output = call_5505
func_5506 = relay.Function([], output)
mutated_mod['func_5506'] = func_5506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5287_call = mod.get_global_var('func_5287')
func_5289_call = mutated_mod.get_global_var('func_5289')
call_5567 = relay.TupleGetItem(func_5287_call(), 0)
call_5568 = relay.TupleGetItem(func_5289_call(), 0)
var_5569 = relay.var("var_5569", dtype = "int32", shape = (528, 5))#candidate|5569|(528, 5)|var|int32
bop_5570 = relay.less_equal(call_5567.astype('bool'), var_5569.astype('bool')) # shape=(528, 5)
bop_5573 = relay.less_equal(call_5568.astype('bool'), var_5569.astype('bool')) # shape=(528, 5)
bop_5575 = relay.add(call_5567.astype('uint64'), var_5569.astype('uint64')) # shape=(528, 5)
bop_5578 = relay.add(call_5568.astype('uint64'), var_5569.astype('uint64')) # shape=(528, 5)
bop_5581 = relay.bitwise_xor(var_5569.astype('int64'), relay.reshape(bop_5570.astype('int64'), relay.shape_of(var_5569))) # shape=(528, 5)
bop_5584 = relay.bitwise_xor(var_5569.astype('int64'), relay.reshape(bop_5573.astype('int64'), relay.shape_of(var_5569))) # shape=(528, 5)
func_2163_call = mod.get_global_var('func_2163')
func_2165_call = mutated_mod.get_global_var('func_2165')
call_5592 = func_2163_call()
call_5593 = func_2163_call()
output = relay.Tuple([bop_5575,bop_5581,call_5592,])
output2 = relay.Tuple([bop_5578,bop_5584,call_5593,])
func_5594 = relay.Function([var_5569,], output)
mod['func_5594'] = func_5594
mod = relay.transform.InferType()(mod)
mutated_mod['func_5594'] = func_5594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5595 = relay.var("var_5595", dtype = "int32", shape = (528, 5))#candidate|5595|(528, 5)|var|int32
func_5594_call = mutated_mod.get_global_var('func_5594')
call_5596 = func_5594_call(var_5595)
output = call_5596
func_5597 = relay.Function([var_5595], output)
mutated_mod['func_5597'] = func_5597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3312_call = mod.get_global_var('func_3312')
func_3314_call = mutated_mod.get_global_var('func_3314')
call_5601 = relay.TupleGetItem(func_3312_call(), 0)
call_5602 = relay.TupleGetItem(func_3314_call(), 0)
output = call_5601
output2 = call_5602
func_5608 = relay.Function([], output)
mod['func_5608'] = func_5608
mod = relay.transform.InferType()(mod)
output = func_5608()
func_5609 = relay.Function([], output)
mutated_mod['func_5609'] = func_5609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4203_call = mod.get_global_var('func_4203')
func_4205_call = mutated_mod.get_global_var('func_4205')
call_5610 = func_4203_call()
call_5611 = func_4203_call()
output = relay.Tuple([call_5610,])
output2 = relay.Tuple([call_5611,])
func_5627 = relay.Function([], output)
mod['func_5627'] = func_5627
mod = relay.transform.InferType()(mod)
mutated_mod['func_5627'] = func_5627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5627_call = mutated_mod.get_global_var('func_5627')
call_5628 = func_5627_call()
output = call_5628
func_5629 = relay.Function([], output)
mutated_mod['func_5629'] = func_5629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1115_call = mod.get_global_var('func_1115')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_5641 = relay.TupleGetItem(func_1115_call(), 0)
call_5642 = relay.TupleGetItem(func_1116_call(), 0)
output = relay.Tuple([call_5641,])
output2 = relay.Tuple([call_5642,])
func_5643 = relay.Function([], output)
mod['func_5643'] = func_5643
mod = relay.transform.InferType()(mod)
mutated_mod['func_5643'] = func_5643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5643_call = mutated_mod.get_global_var('func_5643')
call_5644 = func_5643_call()
output = call_5644
func_5645 = relay.Function([], output)
mutated_mod['func_5645'] = func_5645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1664_call = mod.get_global_var('func_1664')
func_1666_call = mutated_mod.get_global_var('func_1666')
call_5682 = func_1664_call()
call_5683 = func_1664_call()
output = relay.Tuple([call_5682,])
output2 = relay.Tuple([call_5683,])
func_5703 = relay.Function([], output)
mod['func_5703'] = func_5703
mod = relay.transform.InferType()(mod)
mutated_mod['func_5703'] = func_5703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5703_call = mutated_mod.get_global_var('func_5703')
call_5704 = func_5703_call()
output = call_5704
func_5705 = relay.Function([], output)
mutated_mod['func_5705'] = func_5705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5287_call = mod.get_global_var('func_5287')
func_5289_call = mutated_mod.get_global_var('func_5289')
call_5736 = relay.TupleGetItem(func_5287_call(), 0)
call_5737 = relay.TupleGetItem(func_5289_call(), 0)
func_630_call = mod.get_global_var('func_630')
func_634_call = mutated_mod.get_global_var('func_634')
var_5741 = relay.var("var_5741", dtype = "float32", shape = (280,))#candidate|5741|(280,)|var|float32
var_5742 = relay.var("var_5742", dtype = "int16", shape = (624,))#candidate|5742|(624,)|var|int16
call_5740 = relay.TupleGetItem(func_630_call(relay.reshape(var_5741.astype('float32'), [5, 14, 4]), relay.reshape(var_5742.astype('int16'), [12, 13, 4]), ), 0)
call_5743 = relay.TupleGetItem(func_634_call(relay.reshape(var_5741.astype('float32'), [5, 14, 4]), relay.reshape(var_5742.astype('int16'), [12, 13, 4]), ), 0)
func_3539_call = mod.get_global_var('func_3539')
func_3542_call = mutated_mod.get_global_var('func_3542')
var_5745 = relay.var("var_5745", dtype = "uint32", shape = (672,))#candidate|5745|(672,)|var|uint32
call_5744 = relay.TupleGetItem(func_3539_call(relay.reshape(var_5745.astype('uint32'), [4, 14, 12])), 5)
call_5746 = relay.TupleGetItem(func_3542_call(relay.reshape(var_5745.astype('uint32'), [4, 14, 12])), 5)
output = relay.Tuple([call_5736,call_5740,var_5741,var_5742,call_5744,var_5745,])
output2 = relay.Tuple([call_5737,call_5743,var_5741,var_5742,call_5746,var_5745,])
func_5749 = relay.Function([var_5741,var_5742,var_5745,], output)
mod['func_5749'] = func_5749
mod = relay.transform.InferType()(mod)
var_5750 = relay.var("var_5750", dtype = "float32", shape = (280,))#candidate|5750|(280,)|var|float32
var_5751 = relay.var("var_5751", dtype = "int16", shape = (624,))#candidate|5751|(624,)|var|int16
var_5752 = relay.var("var_5752", dtype = "uint32", shape = (672,))#candidate|5752|(672,)|var|uint32
output = func_5749(var_5750,var_5751,var_5752,)
func_5753 = relay.Function([var_5750,var_5751,var_5752,], output)
mutated_mod['func_5753'] = func_5753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5415_call = mod.get_global_var('func_5415')
func_5417_call = mutated_mod.get_global_var('func_5417')
call_5771 = relay.TupleGetItem(func_5415_call(), 1)
call_5772 = relay.TupleGetItem(func_5417_call(), 1)
const_5778 = relay.const([[[-5.751602,-6.537833,-6.289367,-0.846852],[5.077777,6.009912,-8.689960,4.060716],[-4.273724,1.825463,6.951322,0.923903],[6.640415,-4.184217,-0.749901,-4.999893],[0.853309,9.501195,-9.113447,-8.400124],[-8.175995,-2.578791,4.603589,0.845505]],[[5.760632,7.952125,-0.754874,-5.632223],[-0.693472,-3.250199,-9.487920,0.294104],[4.918309,6.633116,-0.525257,1.582930],[9.182427,-9.022858,4.679575,1.953502],[-3.570978,9.240861,0.102715,0.332187],[-4.842018,-7.314208,-6.811838,3.694089]],[[-3.485553,8.775728,-8.216291,-6.649749],[9.380684,-5.404037,-8.126749,5.162695],[7.776002,2.918079,-9.276235,-7.230164],[-2.452122,6.774997,-5.789779,-6.045398],[8.786269,-0.061639,-7.658018,-8.894649],[1.987852,-4.106798,-3.386234,-6.228183]],[[5.855431,-2.873545,-1.832329,-6.281263],[-1.020972,-0.455914,-9.252031,7.937172],[-3.712127,-5.714718,-9.482492,-8.609859],[4.605976,0.032390,8.738244,9.800706],[-0.063075,-4.509439,-5.707408,9.256644],[0.606354,-9.996868,6.309700,0.189998]],[[3.072989,-4.997294,-5.615686,1.215266],[-2.148589,7.484535,-7.093108,-2.415133],[3.891643,-3.325152,7.281701,-6.494718],[5.513610,5.314530,-1.608823,-1.601912],[-9.713725,-7.046853,-4.970911,-2.933599],[-3.883669,-7.417580,0.539205,8.339507]],[[2.435061,-8.345078,-7.315170,4.126726],[5.098310,-9.983873,-1.137053,1.642639],[6.853435,5.124573,5.559375,-5.992752],[-5.560053,4.656991,4.089035,-4.544441],[-5.534693,-2.353101,7.339375,-7.879302],[-9.250325,-6.970243,3.421685,9.885320]],[[8.168987,-7.251750,-5.163225,3.515006],[4.535519,-0.914146,4.780745,-9.159025],[-7.588571,-8.390041,-1.088850,-2.820771],[9.272604,3.958354,7.070877,-2.204024],[-3.635449,1.348894,4.735258,7.843532],[4.776363,-2.599568,-4.946415,-4.008226]]], dtype = "float32")#candidate|5778|(7, 6, 4)|const|float32
bop_5779 = relay.equal(call_5771.astype('bool'), const_5778.astype('bool')) # shape=(7, 6, 4)
bop_5782 = relay.equal(call_5772.astype('bool'), const_5778.astype('bool')) # shape=(7, 6, 4)
func_5287_call = mod.get_global_var('func_5287')
func_5289_call = mutated_mod.get_global_var('func_5289')
call_5797 = relay.TupleGetItem(func_5287_call(), 0)
call_5798 = relay.TupleGetItem(func_5289_call(), 0)
uop_5802 = relay.cos(call_5797.astype('float64')) # shape=(528, 1)
uop_5804 = relay.cos(call_5798.astype('float64')) # shape=(528, 1)
func_1825_call = mod.get_global_var('func_1825')
func_1829_call = mutated_mod.get_global_var('func_1829')
var_5806 = relay.var("var_5806", dtype = "float64", shape = (630,))#candidate|5806|(630,)|var|float64
const_5807 = relay.const([-9,8,-7,-8,-9,8,9,7,9,-3,-4,-1,-8,3,9,8,4,2,5,6,4,1,-9,3,2,4,5,-10,-8,-3,-9,-5,-8,-2,10,-7,3,-10,-6,-4,-1,6,-2,10,-9,9,5,9,-4,6,-3,10,1,-10,-3,7,1,-3,-10,-4,-6,-5,10,6,-8,-8,5,7,-8,-5,1,8,-7,-4,-3,-4,-5,2,6,9,-8,5,7,-1,8,9,-10,-1,7,2,6,-9,-8,8,6,-5,6,-2,-1,1,9,-9,6,-3,-7,-3,4,6,2,3,-1,6,10,2,9,3,3,6,-3,-2,-8,3,-6,2,-3,10,5,1,4,-9,7,2,5,9,8,10,8,-6,2,-4,2,9,10,3,3,6,5,10,-5,-7,10,-1,-1,-3,-6,8,-3,-7,4,4,1,7,-7,5,-6,8,-2,-6,-5,-7,-8,-9,1,3,-6,-5,6,-5,1,-6,6,4,-1,10,1,-9,2,1,3,-1,8,10,-7,8,8,-6,-8,-2,-1,6,-10,5,2,7,8,8,3,-2,6,-10,-6,7,-7,4,1,-3,7,-5,2,6,-2,-7,-6,-9,1,-5,6,-2,10,2,-5,4,-3,-1,-3,-4,-5,1,-4,-2,-10,3,-8,10,8,-9,8,-7,2,-5,-6,1,-4,1,-5,-2,-7,-2,9,-2,7,-1,5,-8,-5,6,-6,1,1,5,-4,-2,3,7,-9,8,-2,-3,-9,8,5,-5,10,10,-9,-9,3,5,7,-5,-3,-10,-6,-6,5,-10,5,-3,3,-8,8,7,-9,5,-6,-10,-7,-8,7,-7,5,5,3,6,-9,10,2,-9,10,6,-6,7,-1,6,8,-2,-1,2,3,1,2,1,7,-6,-4,4,-3,3,5,-3,3,5,-10,-9,7,-7,1,5,-8,6,-5,1,-3,-1,-2,-1,-10,10,-5,7,8,1,3,-9,8,2,8,-1,-8,1,-7,-4,1,8,-2,8,-8,1,-8,2,-10,7,-8,10,1,5,-4,-8,4,2,1,-7,-10,4,-1,-4,-1,-10,1,6,-9,-3,-1,-9,7,2,-1,10,-9,1,-9,10,8,-2,10,-5,8,-4,-9,5,-4,3,-5,-7,5,6,-5,-7,-8,5,6,9,-8,-6,-5,10,-7,-5,7,-9,-9,10,3,8,8,-7,3,-10,-8,5,-7,-3,1,-9,9,3,-4,4,10,-7,5,-3,-2,9,-9,-5,1,-1,5,1,1,-4,6,-2,-3,-5,5,-9,2,8,2,8,-1,-6,-10,-4,10,5,9,-2,-8,-1,6,-1,5,8,3,1,-6,4,-3,-6,-8,10,-10,-8,-1,1,-6,-6,4,-10,-1,-4,-7,2,9,-4,-2,-4,9,1,2,7,-8,1,-6,-8,-2,-1,-1,1,-4,-8,-1,9,4,-10,-5,6,-8,3,8,1,6,-8,-9,-8,6,-7,8,-7,-9,-1,-3,-6,-2,7,4,9,-1,8,6,3,4,8,-8,-4,-3,-1,-2,1,8,5,7,-4,2,8,-8,9,1,-3,4,7,-4,6,-5,-1,7,7,-1,2,-2,1,-1,3,-8,2,4,9,-8,-6,-4,-8,-5,2,-7,-1,-5,1,3,-2,10,2,5,-4,8,6,6,-2,-2,-1,1,7], dtype = "int16")#candidate|5807|(624,)|const|int16
call_5805 = relay.TupleGetItem(func_1825_call(relay.reshape(var_5806.astype('float64'), [630,]), relay.reshape(const_5807.astype('int16'), [624,]), ), 5)
call_5808 = relay.TupleGetItem(func_1829_call(relay.reshape(var_5806.astype('float64'), [630,]), relay.reshape(const_5807.astype('int16'), [624,]), ), 5)
func_4375_call = mod.get_global_var('func_4375')
func_4378_call = mutated_mod.get_global_var('func_4378')
call_5813 = func_4375_call(relay.reshape(uop_5802.astype('int32'), [528, 1]))
call_5814 = func_4375_call(relay.reshape(uop_5802.astype('int32'), [528, 1]))
func_4640_call = mod.get_global_var('func_4640')
func_4645_call = mutated_mod.get_global_var('func_4645')
const_5823 = relay.const([-6.734596,-1.397645,-7.666699,-0.839947,0.274104,-4.692553,8.567408,-6.809256,8.507092,-7.823682,7.017427,9.153061,-0.915653,-9.718252,0.758126,1.871212,1.655920,-4.666585,-3.257524,2.577521,-1.112723,-5.988198,-7.561447,-3.250367,4.178705,-4.715719,2.029248,-9.669106,-9.379628,1.347855,-2.094117,2.450468,1.727552,-7.354535,2.774943,5.983941,6.451240,8.759489,-8.373316,-0.131951,-4.941650,-7.266913,-6.097384,-4.649991,7.394040,-6.495471,-5.811612,8.435606,5.148960,-7.997833,-5.932768,0.724527,1.472908,8.280170,-2.159730,-3.328943,-1.024397,7.057005,1.156832,8.973153,4.538471,4.592913,-0.137228,5.419261,-7.782232,-8.997940,-7.994321,-9.912193,-4.849612,0.527721,4.300807,-0.301655,0.264718,-5.341672,7.582331,2.428518,-7.742346,-6.608743,-8.902675,-2.284023,5.213965,4.780966,-8.693051,-4.039821,7.007669,-4.304836,1.470162,-0.052734,-9.900491,5.208839,-5.585190,-0.967994,0.384431,8.712926,1.412939,-6.155675,-7.947086,-4.237356,-9.659784,-8.092736,-9.078173,-2.099515,2.967906,-6.378044,-0.152612,7.138555,4.550135,3.568848,-0.718563,-6.395084,-9.210558,5.924575,-2.147118,-4.711237,-3.767573,-1.100556,4.825944,-0.094031,8.803865,-1.075174,-1.343226,-6.736076,2.001797,3.240390,9.599907,7.245500,-5.774910,-9.527576,-3.127800,4.072653,6.323591,-9.555357,9.444348,7.761179,4.532878,-2.528251,3.929600,9.940806,-9.529649,9.983794,-6.021551,3.722174,9.993096,8.236761,-5.328325,-7.720941,-4.877667,-3.613741,0.132267,-6.392044,5.313995,-4.751442,-4.869553,-7.238382,-7.666556,-0.447421,-3.799151,-8.548921,4.453994,-4.390715,-0.925440,-6.360849,5.426362,-6.580895,-6.932837,4.031021,7.366393,1.758386,-8.656629,-1.344203,2.178368,7.412040,3.684822,7.122931,-7.634512,-9.609679,-7.768205,3.303495,-5.217014,-6.830856,0.423667,-0.848947,1.660733,-6.743575,4.158202,9.999016,9.678727,2.655986,-9.485234,8.744112,-5.241580,9.660108,-9.098037,-0.438303,2.306850,-3.908441,-1.023068,0.781824,-0.136445,1.910339,4.089261,-0.532733,-3.618591,1.110592,-0.054437,1.007839,-7.241713,6.327247,1.464046,6.395459,-4.539487,2.187616,1.018370,-5.913192,-4.616230,4.485467,-9.286265,-1.211548,8.947920,2.437901,5.276021,-5.486909,-6.012161,-3.114255,8.699566,-9.239483,1.849659,5.198586,-9.105639,-6.157812,2.064252,-8.788984,3.360176,-8.022104,-4.718222,-7.620416,-0.039700,-3.415197,-6.531162,4.933719,-6.313850,0.860633,3.920789,-0.679334,1.708217,9.400747,2.603505,-7.083761,-7.470191,2.485623,5.949843,-6.755454,7.186861,-7.354642,-8.578195,7.388628,8.894415,-0.199409,4.563599,-8.862039,-2.104852,-7.637677,-0.196165,-3.380213,5.449107,9.639851,-2.916694,9.146717,-5.861214,5.511234,3.234127,-5.355690,-4.045805,4.734985,4.275943,-6.085566,5.710820,8.882177,4.530624,6.625380,-3.077636,6.450542,-1.528310,-7.934211,-3.780293,5.713981,-5.205614,-3.821585,4.902327,6.453708,-5.963164,-1.389218,-7.949664,3.859239,8.469486,-9.750865,2.258442,-1.621207,-5.263394,5.095820,8.588292,-4.175827,-8.459793,-6.166922,9.760519,-5.788645,3.296050,5.585643,1.366199,3.506757,7.196868,-4.767787,-3.425636,2.598067,4.825555,3.218353,3.051958,-5.735416,5.786805,1.632262,-0.434700,-9.621959,-2.344739,9.521609,-9.054814,3.342201,3.301961,-0.075519,-7.337682,-5.105687,-5.490299,-4.907981,-8.822904,6.834558,5.005825,-8.066034,8.111161,4.120910,-6.025135,5.024477,-4.675035,3.888349,-4.455822,8.590380,8.664864,-6.574950,1.370442,0.372507,4.168951,4.265499,-0.786410,5.165653,-4.972855,2.160699,2.034251,3.417470,9.755584,1.645871,1.491072,2.516315,7.950716,-5.101157,-4.914636,-6.164826,3.473736,2.708386,0.470909,6.803165,4.689651,-0.294738,9.900255,-9.761547,-4.841511,-4.260626,-6.878539,-3.293795,7.418474,0.604597,6.364167,1.674257,9.095654,-2.728871,2.731665,4.786179,-8.495168,-3.292119,5.632163,3.528381,-3.410931,0.976518,9.527371,-2.525209,6.294502,-5.257907,1.883636,3.534237,-4.972776,4.697480,5.443256,8.866837,8.915481,3.420581,-6.613019,-5.630828,-7.562108,-2.830477,-3.570853,-4.657155,-6.086386,-4.978511,-1.065453,-7.212720,3.719842,4.995776,-5.495387,-1.511208,-8.340369,8.860883,-9.318980,7.813295,6.692080,-7.202201,3.805278,5.086629,-9.681158,5.380700,9.350429,0.597821,-7.994876,6.656587,5.188746,-4.081802,2.225739,1.777426,6.397767,-1.632945,-8.177273,-3.262546,7.964316,0.422702,5.194437,5.039633,-1.424904,8.219008,5.777814,-9.698161,8.120123,-5.279652,-9.876553,-9.107127,-1.216062,-9.381160,-5.283791,-6.945963,6.385408,6.414931,2.142904,3.884649,0.616110,-6.784731,-2.680749,-5.030390,1.651741,-9.254016,-2.586943,2.268482,-3.473904,0.650558,8.565795,-5.287168,3.281860,9.908139,-4.349436,-1.790648,-5.386666,-7.959995,8.353296,-5.806255,4.164234,-6.004008,7.267550,2.191095,-3.850001,-1.444757,-6.584987,-9.731192,-9.499342,-0.587493,-3.140040,5.350661,5.011155,0.157951,-8.016211,3.616322,3.413671,1.059846,-1.873605,-6.702990,4.300425,-6.750467,5.701839,0.474756,-1.329236,3.170737,-5.689296,5.282251,-9.147216,8.215746,-3.321208,3.803612,-6.928040,5.096575,6.954020,5.954062,-7.851626,-3.242083,-8.896535,-1.830780,-2.261543,-5.317650,-7.842271,-0.001749,-3.399774,6.781604,9.463037,-7.827833,9.695793,-9.211818,0.410978,4.140391,5.718172,-7.767243,5.501488,-2.410481,-2.417486,-6.050395,7.726265,4.567321,-8.160453,-1.835821,0.317208,-7.484660,-1.515793,5.806663,-0.385583,-4.970791,1.074960,-1.212293,2.067436,-0.367590,1.223908,-9.083136,8.995994,-8.551668,-8.513465,6.992251,-7.468185,-5.319998,-9.431498,-4.876128,-2.416331,-7.718202,8.108277,-1.158635,-3.833960,-4.200521,5.496476,-8.987242,0.103418,5.282167,4.957516,8.813233,-8.411497,1.432190,-9.277999,6.862977,-8.971570,-2.185857,-4.057105,-0.620744,2.385989,-5.350158,6.301855,0.037738,-4.515712,-3.930802,-5.624135,0.647475,9.976004,0.023175,-5.827262,-5.918033,3.603852,8.540041,8.450917,-5.162640,-0.697392,4.713997,7.802238,-5.074207,3.014967,1.788476,3.130300,-2.341757,1.926937,-7.243974,1.611691,-7.265724,9.507909,-9.370358,6.839968,7.782155,-0.909397,3.062110,0.625309,9.201356,-5.896905,-8.936432,7.794020,-3.403732,6.187708,-3.284053,8.287808,7.137591,-0.077479,7.300517,-1.885747,-5.085398,-1.163814,-9.226384,7.689268,-7.357189,-7.568791,7.689053,-1.569844,8.858850,-8.321151,-1.945799,-4.973324,-7.555308,5.449810,8.902016,-3.648410,-6.691498,9.703187,0.513873,-3.932500,6.792744,-4.785345,-3.312588,-6.396377,-9.315705,-3.730524,0.251648,-4.022803,7.801501,4.693184,9.130754,-8.128052,-2.568094,-5.695200,4.930644,-5.168526,-0.048862,9.559295,7.795738,-9.235603,1.237226,-4.139005,7.760282,-0.546965,-5.654036,3.886392,-9.111760,-2.476594,-8.651687,-0.618491,8.834701,-2.458226,3.812601,2.973580,7.959086,7.028992,-0.134305,7.410324,-5.695116,-3.271085,-4.189743,1.413457,-0.284835,6.859257,-6.399799,-8.201835,-5.847401,3.473672,-2.524289,-0.039954,-0.301624,-5.011056,1.898899,8.747969,-3.906196,9.710869,5.159294,4.949900,-3.037340,-7.925422,-3.429000,-0.116801,1.956330,-7.650094,-8.676978,-6.402252,-3.832232,5.951290,-7.782196,-3.334150,3.531902,4.051795,-7.944782,-5.896872,-0.729084,4.609975,6.003369,2.943833,-3.218570,-4.461814,2.857154,7.801414,-9.170148,2.806147,2.073163,5.743157,5.761875,-8.516616,4.697937,-7.824209,7.471057,-8.358988,-1.487247,-8.238820,5.177500,5.563703,1.345697,0.279290,-6.849333,-5.125810,-4.971939,-9.678262,1.882545,8.755280,4.663907,-9.703568,0.625601,6.182618,-3.222938,-0.182095,-8.683548,-6.981247,9.827366,9.506105,7.863982,3.727949,9.561226,8.607866,-2.956117,9.437000,3.901587,1.464581,-1.007196,-9.316443,-7.381914,0.538572,-4.117837,-7.324202,5.833971,6.201696,8.110874,-9.260707,-3.572203,8.620021,-2.713511,-6.683287,-4.285917,-1.740643,-6.799487,-6.277544,-9.316205,-6.022630,4.498917,-6.478022,-0.784156,4.323503,-1.444148,2.488915,-4.068732,-2.739443,3.555354,-2.251875,-9.807223,2.499136,6.810970,2.206228,0.450509,-8.289752,-6.537089,1.730880,7.682126,-7.067474,-0.390335,-6.978751,9.151319,1.523335,-0.905155,-3.793791,-7.251529,7.273689,1.745196,9.566553,-9.636449,-1.438174,-1.095589,-4.573398,-1.547156,-8.038839,-1.486741,3.109456,6.411230,-2.266194,-0.668311,-3.907758,-7.926293,-1.525228,-1.976005,-2.121988,-4.119107,7.399075,-4.867002,-0.485705,-1.426598,4.931749,7.522148,-5.126430,6.511690,-6.514396,-1.608793,8.981360,8.601101,-6.285763,7.224252,-3.291440,8.777206,0.916700,2.466146,1.614303,-4.076261,-0.656770,6.084722,-4.794381,-5.173991,5.273953,2.498270,9.646710,-0.571529,-2.428324,6.894173,3.313004,-7.500878,-0.988474,-8.734371,3.810200,2.818852,0.356304,9.799072,6.232377,-6.691694,-6.197910,4.745448,-3.373183,7.587470,-1.366893,-5.947980,-0.336954,-8.430047,-5.692012,-1.664415,0.570276,-2.636636,-1.199510,-0.878115,2.780497,-9.111774,-7.302031,4.167120,-7.537027,3.872606,7.085929,-4.564467,-6.662917,0.611627,-2.088094,-7.529072,6.596125,-1.838413,-4.569810,5.929631,5.981318,8.729625,-3.984741,6.199397,-1.212518,4.645931,-1.012216,0.210756,-1.075914,1.038510,-9.677082,-3.081508,-8.540616,5.910615,0.559744,-4.498078,6.017048,-4.173712,7.770847,-7.570024,-9.632800,7.450823,1.016707,4.223179,5.756321,-4.822432,-2.827725,2.306996,5.020910,-1.022584,-5.249512,-9.767082,-8.039286,5.536518,-3.246969,8.948014,0.785769,1.117080,9.409887,-6.773643,6.292951,-6.891880,8.893691,6.368395,3.709927,1.876927,-3.851399,9.673814,-0.170980,-8.195013,-5.628795,2.700927,5.992615,-2.382713,2.098137,1.632359,-0.273778,-7.765111,-7.467113,-3.068166,9.521748,0.234385,9.241267,9.412951,5.263453,-0.216724,5.084573,4.621934,-1.608306,-1.703110,-3.369923,0.628400,4.768822,-1.695127,5.735322,1.210777,-4.288731,-5.366960,1.080867,4.182592,-0.179980,-5.018288,7.732897,-8.284120,-1.156312,9.636249,-2.261972,7.820048,-1.119002,2.587663,-3.715459,1.010058,5.682720,6.505693,8.455744,6.850470,-4.272393,0.785439,7.559772,-2.245567,-1.023547,-2.234573,-7.137039,0.140816,5.708548,-4.929750,9.503692,-5.953869,6.707351,-8.687334,-4.568172,-1.048190,2.407890,-4.604612,1.151597,-0.604383,-8.446982,0.232067,-9.829194,-7.202335,5.912428,-4.408788,-4.762887,-0.728869,-9.597862,-6.655848,-0.771287,9.787261,-1.228321,0.079866,-0.875502,-1.977476,-3.301792,3.182543,-7.341815,0.352284,-1.658937,-0.943630,-1.598140,3.408461,1.033372,-7.045287,-9.008807,-4.436956,0.550777,7.232315,3.690412,2.973075,4.847140,1.167150,-5.884171,2.828026,-8.875669,3.052510,-9.826949,4.780530,-6.957649,-2.631192,0.292807,7.590744,-9.740218,5.782118,-4.998890,2.466232,8.585845,7.964926,6.825008,2.108666,3.689264,7.228834,7.152831,8.354266,-2.965572,-8.018750,-5.333210,-9.881439,-3.281412,9.537305,-3.891574,-3.701918,1.942294,0.559229,9.445069,-1.756808,9.453101,-8.636496,-7.162892,-9.075582,1.434570,-0.835377,1.350678,-9.577875,-7.619001,-6.084124,1.027165,1.180539,1.839867,6.705560,3.255247,5.751561,3.744635,5.645270,2.096529,-8.864673,-3.257519,6.121671,-1.928570,-1.184893,3.809747,0.536323,6.379144,7.683446,-0.972758,6.495584,-7.077888,-7.476766,1.445657,5.921776,-0.171400,4.255613,-5.121208,-0.345486,5.195649,-2.584410,0.437770,6.678027,-2.901482,5.332059,3.418454,-0.643813,8.456212,-3.510039,-2.446883,-6.126971,2.014315,8.087534,-3.441920,-1.250943,-9.390278,-9.787554,1.731090,9.460819,-7.518023,-4.966426,8.240360,7.420617,8.412872,3.219989,0.857174,-9.815060,-2.676093,-9.590963,1.322059,-9.851013,3.394472,-2.496667,-4.399404,-7.885517,-6.720962,-9.678421,3.187751,7.040171,4.461919,-3.821746,-4.903390,-7.384404,9.561215,0.067690,8.623558,-2.808542,-8.931652,5.016200,-6.184656,2.953428,-2.899580,0.579358,7.305978,3.459326,6.427402,2.314391,-6.803669,-8.744101,-2.049358,2.990746,7.014882,4.440595,-7.442077,-5.919274,-5.452651,9.582109,-7.357530,8.011731,7.140822,-4.744414,-1.064753,-3.676300,3.704362,-8.935709,-8.247362,-1.941386,-3.299150,7.915672,-6.954263,6.106316,4.105786,-2.882672,0.272223,4.696122,-7.661748,-8.719850,5.330241,4.237334,8.631569,5.042696,6.089349,-2.706533,5.513765,-4.197059,5.631051,-2.655736,7.230881,-0.986322,-2.143291,1.478214,-4.653605,-7.844955,7.459854,-8.492256,4.920115,-4.871539,2.326053,-4.913693,9.366453,3.203179,4.552019,7.746351,-0.746575,8.648330,-3.268152,9.694047,-6.311532,-2.761156,9.935430,8.361706,-8.487010,-0.063073,-5.312448,-3.693154,8.664253,-2.432529,-9.442410,3.146256,-5.533444,2.601335,-5.937655,7.359333,-2.843206,-4.922623,-9.976081,1.724874,7.095820,0.909571,-8.683486,2.442308,8.893658,-5.713451,-7.186583,-1.741563,8.529677,6.311448,-6.402053,-4.010384,-7.886487,-1.017018,-8.545001,-0.197692,5.490459,5.852003,1.979832,-1.611610,7.033116,-5.004852,-4.862144,-0.627007,5.138641,5.888457,-8.973213,-9.900357,-4.733462,1.189579,-6.227612,0.011185,1.482078,-7.437792,6.175181,1.256805,7.146092,-7.631825,-7.956607,4.766091,-2.876287,9.800075,2.139967,-4.036962,2.813812,-1.150926,7.309071,7.674107,4.397585,0.520321,-1.286280,7.435117,2.928976,-7.561964,-6.042103,2.942338,-9.193602,4.332198,-4.512142,-2.365767,2.585855,-2.543488,-5.865327,-2.390058,6.939618,-3.005136,-9.425409,1.063537,-6.291098,-4.121492,-1.085866,0.579048,-0.871447,-7.514256,-3.828078,-9.878795,7.779421,-7.625571,0.346580,4.172589,5.548990,-1.674152,5.693030,5.342111,9.049673,-9.459710,1.964034,5.558294,-7.652418,-8.987044,-1.734533,1.443341,9.226755,6.513271,-1.785773,7.131057,-5.153693,0.023561,-8.427071,2.472709,-9.360066,0.859564,-5.964567,-4.813340,-8.988286,8.274814,4.783140,-2.737948,5.745928,9.471701,7.374451,1.474417,5.797226,6.404580,9.142510,7.425893,5.456004,6.769951,6.906482,-8.542783,-9.400604,-0.066089,-0.415021,4.899563,-7.222924,3.911449,1.973265,-0.377222,-8.909425,-5.121780,-5.785749,7.483311,-1.960892,2.059071,-2.856112,0.386547,-2.201814,0.986964,4.680191,-3.304207,8.049140,8.289922,-7.356878,6.676385,7.331216,-0.747674,-7.133405,5.215782,-3.477059,-5.849424,7.036490,7.538176,-0.324524,-7.965011,9.460219,5.937880,7.719124,-1.307275,-9.746957,-3.056429,4.568692,-8.558926,-3.180689,4.816150,-7.370197,-6.500873,5.959440,5.298843,-5.363660,1.752566,-5.472277,-4.618828,0.913377,4.553222,1.670028,-7.588147,-0.437029,-6.739767,-4.939730,7.370330,8.576328,-8.744712,-1.131788,-6.492250,-6.605599,-3.882552,3.318660,-8.124676,2.852271,-3.887940,9.485703,-0.933747,8.970136,-7.064495,-8.989415,7.902301,7.076906,-8.373782,3.979908,-7.145255,0.949761,0.910863,-6.079188,3.294814,2.994302,-7.349479,-9.117676,1.191022,6.655306,-7.326983,4.482505,2.833650,5.708513,-4.416430,5.073457,-4.219812,-2.365112,1.075716,8.040033,-7.681759,-6.558533,6.519728,9.814782,8.189294,1.182966,-9.534191,5.065359,0.422600,-8.401589,5.480438,8.036318,-9.816148,2.414899,-0.468138,-7.940360,-0.136763,1.341373,-9.628683,-9.453674,3.033240,0.007505,-8.092640,3.398234,4.230129,-3.063683,9.148935,9.165272,1.548741,4.546465,3.740656,-2.431809,7.687790,-2.053436,3.203949,7.914191,-4.937748,-7.543579,9.768502,-2.317926,9.799055,1.615601,-7.469266,-6.244530,-2.427415,4.182923,-3.410052,1.893963,1.135160,2.569625,-2.679912,1.748491,6.313481,6.776420,-3.511578,3.558919,-6.582998,-7.388498,9.100400,-5.975930,1.147735,-1.380829,-1.712949,5.689086,8.277398,-1.645358,7.542710,-1.798116,9.207105,0.335507,8.105477,-1.069971,9.357685,6.599195,2.094935,-6.496049,9.588804,-3.650572,-6.141870,-4.573329,-5.706327,4.793297,-4.488015,-5.562281,-5.363366,7.816826,1.323251,1.475296,1.331189,8.437503,5.201924,6.966747,-5.097090,-6.741015,9.939421,-6.332419,2.040379,7.078575,9.586016,9.761856,6.242320,-6.156237,-6.491672,8.312331,-5.346199,9.291812,1.024290,-2.511174,-4.447160,-6.063958,3.987626,-9.241749,2.948028,7.408097,7.273866,-9.254171,4.189448,9.127365,-8.263727,4.935070,-8.193743,-6.016626,4.411992,1.182116,6.116643,6.036428,2.487771,2.974341,0.371519,2.477466,-2.615868,8.426197,-2.672861,3.271563,-9.618928,6.237507,1.785435,-5.104365,3.051488,0.665960,6.171593,3.992889,-9.032819,1.337571,8.378200,-0.145712,-1.147436,-5.839478,9.545471,-4.794577,-2.907412,-5.771826,2.527534,1.229197,-7.843928,-7.992785,3.770935,-7.644502,-2.310566,-4.645613,0.565683,9.049310,-7.522538,-8.471397,-4.526981,9.884590,2.603073,-8.008655,-9.415252,5.901971,-1.112924,7.066684,7.725042,8.228829,8.602592,-6.511505,5.539683,9.972210,6.839446,1.858539,-3.659566,-1.023735,-5.062713,-7.792452,-5.894360,2.263279,2.701919,8.381626,1.785207,0.024794,-9.938791,2.651784,5.719532,6.724261,-1.285870,-9.257701,-5.325203,-6.486585,-9.478692,8.245815,-8.032727,3.636511,8.993694,9.085065,-9.928246,-9.317730,-2.961071,-8.249774,-3.599482,-2.125194,-0.795140,7.735542,9.443597,3.138714,-4.588641,0.181723,2.796788,8.503200,9.523348,3.787951,9.127711,-7.431331,6.633545,2.527259,-7.416663,5.641562,6.776719,3.979822,-4.795230,-9.741463,-5.869210,-2.475503,-6.792739,-4.489345,-0.487743,4.752486,8.518985,5.592737,-7.574066,-7.988696,-6.549604,6.296317,-2.796196,-7.850884,5.914106,-9.160671,-0.329617,-9.502469,-4.408910,-3.836971,-8.712792,-8.432301,9.350121,3.929321,-3.456547,3.745353,2.085064,-3.265066,6.738825,-8.145144,0.215912,-1.446274,2.724480,0.034047,-9.928146,-6.715929,3.142864,-0.317361,-0.682739,9.098150,-3.823564,6.815516,3.638652,3.524169,6.343294,-0.806898,-9.973100,-5.415639,7.534930,0.484575,-8.781276,-1.893642,-5.203044,-7.236906,-8.631299,-6.121662,-7.643488,-9.799194,1.033686,6.596276,-5.261464,-1.534626,-0.650039,-2.531512,-6.707367,0.958358,-5.765477,-8.299161,5.754256,3.348320,-2.708210,-5.737743,-7.787055,5.759731,-7.895861,-8.357160,-5.259457,-8.513514,6.003109,-6.226530,-6.105900,-5.614860,0.322708,-8.091411,-3.902123,0.985126,9.904841,0.451128,-7.358191,5.390470,9.607906,2.790027,-2.289753,9.423239,9.783104,7.931979,7.145345,-8.292849,7.836196,9.099301,-5.127699,-8.688848,-7.471546,3.588621,-5.014627,-3.039575,-5.015647,5.263052,7.075013,9.666031,-5.539272,-9.731443,-4.810000,0.244708,1.988278,7.306111,6.256567,7.111414,-9.318259,-0.851296,-9.663494,-1.111253,5.371063,7.710945,-5.404254,2.785676,-0.096925,8.838354,-0.912095,-7.568077,2.259630,7.159694,3.631329,5.914976,-9.828062,5.622750,-6.204281,9.461191,6.817264,-6.898788,5.517995,7.140543,1.135938,1.501721,4.346382,-8.702197,6.268579,4.062326,-8.296470,-4.813960,-9.235739,9.040099,-7.639001,-6.096721,-1.204827,2.766848,-8.732324,4.965163,5.112175,5.124563,-3.856794,-3.425257,-7.669063,-0.940479,-7.733039,9.663631,-5.919367,7.937469,8.859822,5.930137,-8.093198,-7.059161,7.392831,-8.290033,-0.879258,9.108211,5.892618,-9.683508,2.501434,7.912667,-2.034891,-8.019375,7.203503,5.008649,-3.256347,-9.923238,8.263029,8.740956,-4.343474,-1.481661,-3.289763,3.678901,6.203252,9.118901,6.626461,-4.958448,2.320647,-9.334396,-2.155415,3.654552,-1.612491,5.769948,-7.568571,-4.243173,-1.095254,0.113511,-0.830690,6.471487,9.728531,-2.166029,1.903918,-3.170508,-3.513120,0.618399,-5.699682,5.387590,3.997149,-3.215743,3.612781,-0.622726,4.044916,-5.155756,4.074161,7.837810,-0.667265,0.304138,-2.868866,-6.425061,-4.077204,9.865065,0.059939,-5.700309,0.367495,-8.529552,9.619959,4.152133,4.576525,6.235408,2.844896,9.891431,-2.797897,7.764171,-4.408691,6.094823,5.603346,8.071888,8.595337,9.893378,-4.224406,-1.689662,2.172786,6.909016,6.655491,3.908260,5.883663,4.539563,8.727328,4.934268,-4.982444,-7.575724,1.506786,-7.875821,5.582589,-0.107098,-5.816255,-2.447332,-6.020890,-3.535273,-2.751569,-6.025812,-2.068162,4.245459,-7.693085,4.324383,-2.205893,-9.880846,6.567801,-8.902040,0.575833,-4.393062,4.282524,6.589239,-2.561764,-5.539755,2.362215,9.468421,-9.913097,8.682217,7.465626,9.759389,-7.375403,3.822140,8.049906,4.188616,-3.043090,-6.796197,-2.829293,8.875655,9.370229,2.166581,-1.172905,-9.558284,8.553272,8.488883,-0.906634,-5.240413,6.760550,-7.193067,-9.480338,0.990973,9.496648,-8.366753,1.685196,8.487205,5.355646,7.282897,6.347378,-1.122835,7.617333,8.097892,6.819391,-2.606999,8.300294,0.530649,-2.252971,9.035449,-0.722442,4.475642,1.424239,-3.425922,9.865766,2.753856,5.900233,-2.221645,4.207425,-8.333836,0.548519,0.601720,8.161849,-0.164756,9.145036,2.475109,-3.267419,8.654619,9.587253,-7.661975,3.192797,0.111795,-6.653006,7.952321,4.014079,-1.348770,4.580547,-8.698193,-1.889763,-2.562862,-6.415820,6.931351,2.829693,-4.050249,-4.664844,7.118887,-8.747134,-1.405973,-8.986000,0.910132,4.066977,6.819758,3.914107,7.848848,-1.701665,-5.735357,2.931228,6.502821,-0.361844,-3.511139,2.963097,1.322663,-3.978035,-7.578502,6.549426,7.513405,3.769781,8.585401,-3.598032,-1.192069,9.037862,0.236129,-4.900229,3.622941,-0.099260,6.318673,7.697879,-5.062407,-6.460029,3.304009,-3.916888,-9.641310,7.705769,-1.456502,-8.631223,-9.457187,0.818388,-5.297958,6.027619,9.493108,2.778001,7.175205,5.737838,9.984984,-0.634644,1.843386,1.124742,-2.421842,-4.483732,-6.152018,2.324115,-1.018234,-4.453057,-5.983917,-9.897709,6.285089,-0.329024,-5.405872,-5.508651,0.772080,-2.701937,5.657732,-3.844092,-3.404094,4.387940,2.904206,-0.540173,3.576275,-3.517480,-7.453257,5.108853,6.359629,-1.497241,5.185674,6.695824,2.739079,-4.830421,6.534644,-2.670925,4.369826,-9.896323,-5.077497,-2.004683,2.278373,6.879111,3.488803,1.972636,-6.302580,-8.066709,3.603395,-2.342480,-5.189876,7.496553,9.672128,2.129885,6.869745,4.703494,-4.251863,-1.546198,-6.960906,1.567485,-7.022558,-2.190916,-1.744043,8.949399,-1.506279,-9.698329,-3.310941,-0.126130,6.502606,-1.581889,1.247982,-2.433563,8.326344,5.477218,-4.350382,2.423693,-6.179554,1.410400,-1.125652,-4.153664,-1.429689,5.373117,-4.879732,-3.363093,-8.860462,6.613966,-3.216560,2.308910,-9.052311,-4.926126,-6.134314,8.810999,7.422631,7.430210,5.591593,9.126290,2.883135,-1.252462,-4.090540,5.167154,8.145769,7.804632,5.604731,4.211134,5.856916,-2.129708,5.311650,-5.927129,2.173003,1.888521,3.169322,-5.094358,4.998340,4.420774,-6.673844,-3.362045,6.054836,9.051962,3.387897,-8.647653,-5.191457,-8.805209,-0.396125,4.111414,-4.633382,6.301455,9.200431,-9.903116,-2.844896,-8.116215,7.724462,4.539419,-3.119246,3.093979,5.969248,4.233617,-2.902316,-0.448612,-8.752958,-3.801682,-7.939192,8.404836,-3.539747,-4.638816,4.160256,4.806953,-4.521767,2.024864,1.865716,-0.747049,-6.487846,9.609236,0.621912,9.265998,1.129894,-3.081715,6.603785,0.216227,-5.508047,7.960486,-0.434168,-7.881647,8.627631,-8.343968,-7.792699,6.861650,-2.836349,6.859280,-3.984102,6.372319,7.701354,1.411023,6.899447,-0.706331,8.571546,5.131842,-1.157987,-6.211583,5.772672,-8.682346,0.778652,-6.909446,-2.825516,0.600088,8.675454,-1.567112,-6.868980,3.643667,-9.224544,0.556284,0.795925,-0.884056,-1.870549,0.565847,5.997304,0.383366,-6.511906,-7.184964,-6.528820,4.905522,-3.762853,-5.002004,-0.761614,6.830182,0.967899,-5.946724,1.976268,-3.787960,9.771056,-0.822117,5.335402,2.282667,1.399290,8.018106,1.019694,4.358964,-8.139467,-8.280233,-7.915368,-2.262836,3.246498,-4.587689,4.382591,-2.778043,2.253569,8.478301,1.580580,-8.011908,-3.241609,-3.423255,-3.163467,8.107627,8.442144,9.091610,6.683977,0.715186,-7.754718,-9.561204,-2.106338,-1.823546,0.189673,-6.263302,-1.372607,3.053531,-8.911438,-9.224434,-6.556049,-8.283987,-5.296416,3.132570,5.146005,-5.406595,-3.504538,0.993991,2.684292,-5.007135,2.653690,8.531632,8.118182,-7.374626,-4.353422,6.068304,-8.790595,-7.624793,4.287070,7.605415,-3.091246,4.392330,-1.578770,5.978323,-3.516920,-7.486699,1.834222,-0.125551,-0.680506,-2.445039,6.496911,4.386170,8.586598,-3.010059,9.984974,4.631345,3.801548,9.808666,2.800845,-4.298852,-1.447237,8.196621,-9.145192,9.253739,-0.691913,-1.571731,2.602418,-7.851476,0.986604,9.517502,-3.658252,0.715884,8.298058,3.506157,9.755329,7.351989,-1.709734,5.822092,-2.077779,0.603994,0.588193,-5.032991,-9.515996,6.176444,-2.084506,-2.060843,-5.152633,-5.631485,-8.815002,-8.630851,7.315751,-6.715867,6.430280,5.409804,-9.290952,-7.968385,-0.470100,-3.506689,8.529246,-2.457199,-5.279906,-4.197440,-1.896541,5.454338,-7.580742,0.172218,8.389983,3.583482,6.731198,-6.382712,-7.224399,4.253597,1.567514,7.805606,-2.254607,-4.835687,-7.377660,2.520443,-4.146703,-9.393933,-6.940041,-4.618947,5.184069,-7.585776,-0.973123,-8.964290,-1.449928,6.192866,5.658208,-2.476273,9.780717,-0.351727,-4.353744,-7.642200,-1.946059,5.594053,-8.095923,-4.245382,-8.635034,7.684972,1.474785,6.752874,5.461676,-8.536154,6.583602,-8.032802,7.911651,-1.490477,-8.302449,-6.950227,8.736176,-9.423688,-9.186166,4.773749,1.649341,0.808907,-1.591476,-2.416515,-3.063136,-3.027120,-4.427446,-6.560955,-1.333678,3.521869,3.688211,3.779177,3.179206,9.547407,8.284699,-9.158475,3.762323,8.654584,-3.265470,7.334347,-0.472924,-7.606085,8.599799,5.538573,-4.769551,-8.491195,-8.533696,-3.366177,6.301764,5.509631,2.139455,-9.358991,-5.714054], dtype = "float32")#candidate|5823|(2535,)|const|float32
call_5822 = relay.TupleGetItem(func_4640_call(relay.reshape(const_5807.astype('int16'), [624, 1]), relay.reshape(const_5823.astype('float32'), [2535,]), relay.reshape(var_5806.astype('float64'), [10, 63]), ), 9)
call_5824 = relay.TupleGetItem(func_4645_call(relay.reshape(const_5807.astype('int16'), [624, 1]), relay.reshape(const_5823.astype('float32'), [2535,]), relay.reshape(var_5806.astype('float64'), [10, 63]), ), 9)
bop_5833 = relay.floor_mod(uop_5802.astype('float64'), var_5806.astype('float64')) # shape=(528, 630)
bop_5836 = relay.floor_mod(uop_5804.astype('float64'), var_5806.astype('float64')) # shape=(528, 630)
uop_5839 = relay.log2(uop_5802.astype('float64')) # shape=(528, 1)
uop_5841 = relay.log2(uop_5804.astype('float64')) # shape=(528, 1)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_5849 = relay.TupleGetItem(func_1197_call(), 0)
call_5850 = relay.TupleGetItem(func_1198_call(), 0)
output = relay.Tuple([bop_5779,call_5805,const_5807,call_5813,call_5822,const_5823,bop_5833,uop_5839,call_5849,])
output2 = relay.Tuple([bop_5782,call_5808,const_5807,call_5814,call_5824,const_5823,bop_5836,uop_5841,call_5850,])
func_5851 = relay.Function([var_5806,], output)
mod['func_5851'] = func_5851
mod = relay.transform.InferType()(mod)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5852 = relay.var("var_5852", dtype = "float64", shape = (630,))#candidate|5852|(630,)|var|float64
func_5851_call = mutated_mod.get_global_var('func_5851')
call_5853 = func_5851_call(var_5852)
output = call_5853
func_5854 = relay.Function([var_5852], output)
mutated_mod['func_5854'] = func_5854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5923 = relay.var("var_5923", dtype = "float64", shape = (7, 13, 11))#candidate|5923|(7, 13, 11)|var|float64
uop_5924 = relay.log2(var_5923.astype('float64')) # shape=(7, 13, 11)
func_3137_call = mod.get_global_var('func_3137')
func_3138_call = mutated_mod.get_global_var('func_3138')
call_5928 = relay.TupleGetItem(func_3137_call(), 0)
call_5929 = relay.TupleGetItem(func_3138_call(), 0)
output = relay.Tuple([uop_5924,call_5928,])
output2 = relay.Tuple([uop_5924,call_5929,])
func_5933 = relay.Function([var_5923,], output)
mod['func_5933'] = func_5933
mod = relay.transform.InferType()(mod)
mutated_mod['func_5933'] = func_5933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5934 = relay.var("var_5934", dtype = "float64", shape = (7, 13, 11))#candidate|5934|(7, 13, 11)|var|float64
func_5933_call = mutated_mod.get_global_var('func_5933')
call_5935 = func_5933_call(var_5934)
output = call_5935
func_5936 = relay.Function([var_5934], output)
mutated_mod['func_5936'] = func_5936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5504_call = mod.get_global_var('func_5504')
func_5506_call = mutated_mod.get_global_var('func_5506')
call_5961 = func_5504_call()
call_5962 = func_5504_call()
output = relay.Tuple([call_5961,])
output2 = relay.Tuple([call_5962,])
func_5966 = relay.Function([], output)
mod['func_5966'] = func_5966
mod = relay.transform.InferType()(mod)
mutated_mod['func_5966'] = func_5966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5966_call = mutated_mod.get_global_var('func_5966')
call_5967 = func_5966_call()
output = call_5967
func_5968 = relay.Function([], output)
mutated_mod['func_5968'] = func_5968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5415_call = mod.get_global_var('func_5415')
func_5417_call = mutated_mod.get_global_var('func_5417')
call_5992 = relay.TupleGetItem(func_5415_call(), 0)
call_5993 = relay.TupleGetItem(func_5417_call(), 0)
output = relay.Tuple([call_5992,])
output2 = relay.Tuple([call_5993,])
func_6002 = relay.Function([], output)
mod['func_6002'] = func_6002
mod = relay.transform.InferType()(mod)
output = func_6002()
func_6003 = relay.Function([], output)
mutated_mod['func_6003'] = func_6003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_6023 = func_2890_call()
call_6024 = func_2890_call()
output = call_6023
output2 = call_6024
func_6036 = relay.Function([], output)
mod['func_6036'] = func_6036
mod = relay.transform.InferType()(mod)
mutated_mod['func_6036'] = func_6036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6036_call = mutated_mod.get_global_var('func_6036')
call_6037 = func_6036_call()
output = call_6037
func_6038 = relay.Function([], output)
mutated_mod['func_6038'] = func_6038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5703_call = mod.get_global_var('func_5703')
func_5705_call = mutated_mod.get_global_var('func_5705')
call_6066 = relay.TupleGetItem(func_5703_call(), 0)
call_6067 = relay.TupleGetItem(func_5705_call(), 0)
output = relay.Tuple([call_6066,])
output2 = relay.Tuple([call_6067,])
func_6101 = relay.Function([], output)
mod['func_6101'] = func_6101
mod = relay.transform.InferType()(mod)
mutated_mod['func_6101'] = func_6101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6101_call = mutated_mod.get_global_var('func_6101')
call_6102 = func_6101_call()
output = call_6102
func_6103 = relay.Function([], output)
mutated_mod['func_6103'] = func_6103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6110 = relay.var("var_6110", dtype = "float32", shape = (16, 7, 15))#candidate|6110|(16, 7, 15)|var|float32
uop_6111 = relay.cos(var_6110.astype('float32')) # shape=(16, 7, 15)
func_4254_call = mod.get_global_var('func_4254')
func_4255_call = mutated_mod.get_global_var('func_4255')
call_6119 = func_4254_call()
call_6120 = func_4254_call()
func_1994_call = mod.get_global_var('func_1994')
func_1996_call = mutated_mod.get_global_var('func_1996')
const_6125 = relay.const([-8,9,-1,8,6,-9,6,-8,-2,5,-3,10,6,8,-9,-5,10,-2,4,6,-7,6,1,-2,-2,10,5,-9,6,-5,2,2,5,-4,-6,-7,-3,8,9,-6,6,6,4,4,-3,-6,8,-7,-4,2,-1,-2,-5,10,-10,-7,-2,8,8,-7,3,-6,-1,-6,5,-6,-10,-1,-1,-9,7,7,-8,-5,-9,9,-6,-2,7,-4,7,-9,10,-2,-10,10,-8,5,4,-4,2,4,8,7,-4,-10,-10,-8,10,1,-2,7,10,5,2,8,5,-4,-7,-2,1,-4,2,1,-1,-10,-5,-2,-9,-10,6,-6,9,-6,8,-7,-8,10,-2,-2,5,-7,-8,-7,6,9,5,-3,-5,9,6,4,9,-6,7,6,-9,-4,2,8,-1,9,4,10,-2,-7,-7,2,5,8,5,5,9,-3,-1,8,-7,7,1,-3,6,-9,10,-10,-9,-6,4,-8,-1,1,-3,-5,8,-4,-9,9,-8,10,-4,-3,-9,-9,10,-6,-10,4,-8,6,3,2,-8,9,3,-3,2,-10,-5,-3,-6,-10,6,2,5,9,-7,-9,-1,-8,-10,1,-9,10,-10,10,4,6,4,-5,5,6,-4,-4,5,-1,-7,4,3,-9,-1,-1,-1,-4,-5,5,-2,10,7,-10,10,-7,4,-2,-5,10,-1,10,5,8,-4,8,5,-3,5,-7,7,-3,-3,-5,-7,-6,-5,-4,-2,-10,7,-4,9,-7,1,3,-5,-6,-3,-9,-10,-3,-1,5,9,-10,7,-9,9,3,9,7,-4,4,-8,10,-8,-2,7,-2,5,1,6,-8,-9,7,9,-3,9,-10,2,4,10,1,-3,2,-5,-10,6,-7,3,2,-8,-4,-4,-5,-2,-8,-4,10,4,-5,-8,1,5,8,10,9,-6,-6,-7,7,-9,-4,6,8,9,-8,-8,-10,4,8,-9,-3,-10,-5,9,6,9,-1,-5,2,2,-10,8,1,7,8,-6,1,2,-1,-8,-1,9,9,-8,-6,10,1,6,-9,-1,9,10,1,5,-2,-9,9,4,-9,-8,5,3,-7,-7,-3,3,-4,-3,-4,-5,1,-1,1,8,-10,-9,6,2,-4,-2,-5,-1,10,4,-2,2,4,-4,1,-8,-10,-9,-10,2,7,-1,8,3,-5,2,5,-1,-9,7,10,-4,-2,-9,-3,-8,-6,7,2,4,5,3,1,-3,2,4,-3,2,-3,-2,3,-9,1,-5,-3,8,-4,-2,-8,7,2,2,10,-3,-7,1,4,-1,5,-8,4,10,9,-2,4,-5,-3,-4,-2,-7,-3,-1,6,4,7,-2,7,8,4,1,1,6,4,6,8,-7,10,10,9,1,-5,8,7,-10,-5,-8,-8,10,-4,-9,2,3,-5,1,-8,-1,-7,7,-4,2,-7,-8,5,-8,-8,1,-5,3,-9,4,-7,10,-6,6,3,1,-10,-6,9,-4,-3,5,9,-9,-2,-6,10,1,-3,5,-6,-6,3,1,-8,-9,10,-10,-3,9,-2,2,-1,5,1,7,-6,4,-5,-1,2,3,-5,-2,1,-2,8,-4,-9,10,9,-9,-2,-6,2,1,7,-5,-8,9,-10,-4,-6,-7,7,7,7,-3,-3,-6,-6,6,-3,-8,-9,2,-9,-10,-3,2,-4,-8,-6,-10,9,3,-4,-9,-1,-8,3,2,6,-8,8,-1,-8,-3,-9,3,-8,-3,7,-7,-10,-1,-7,-6,-6,6,-2,-6,5,7,2,-3,-6,3,10,-2,-9,3,5,-10,4,4,-2,-10,-2,2,5,-6,-2,4,1,2,6,-7,-7,-1,3,-10,-6,4,5,3,3,-3,-8,-9,-1,-10,-8,-10,-4,-9,8,5,-8,-3,-7,5,8,7,4,-7,-8,-4,4,5,-8,-6,-2,2,10,-6,-4,6,-8,-7,10,-7,-1,-7,6,-2,6,1,-6,1,2,10,-8,-7,-1,7,10,-2,-5,-3,-10,-5,2,-6,3,-4,-5,-1,3,7,4,-7,-8,-3,-7,3,-3,6,8,-4,1,6,-2,-9,4,-1,10,3,7,10,-4,3,-5,5,-3,4,6,-10,-6,-7,4,1,8,-1,-7,10,8,-1,4,-4,-4,1,-10,-10,7,-9,5,-5,1,9,1,-1,3,-9,5,-4,-4,1,-3,8,-8,2,-4,-8,7,5,7,4,-6,-4,8,2,-2,-4,3,6,-9,-7,-9,2,-4,-3,-10,8,-2,1,-2,-10,3,1,7,9,10,-3,-3,-7,1,-8,9,-9,2,-2,2,-1,7,-2,9,-2,-7,8,-9,9,-4,-1,4,-5,1,-3,1,-7,-5,-3,-8,5,-10,-7,7,9,4,-8,1,7,3,4,-3,10,-9,4,10,5,2,10,-10,5,-8,-6,-6,-10,4,-1,-4,7,-6,1,10,-7,-9,-2,-4,7,-9,3,-6,2,-9,-9,6,6,-8,-9,4,1,-2,6,-1,10,-4,5,7,3,2,9,-9,3,4,4,-9,3,9,7,-2,7,-9,-7,-10,2,-2,2,-6,7,-7,9,-7,7,-2,3,1,-2,-2,7,-9,6,10,5,2,-5,6,-5,8,8,-4,6,2,-8,-6,6,3,-9,9,10,-7,-10,-9,-5,-7,-9,-3,-8,10,7,2,3,7,-10,-7,10,5,6,-7,1,3,6,-4,9,2,-1,-3,-10,8,9,-8,1,10,-7,8,8,-9,-5,1,-8,2,-5,-6,7,3,-1,-6,-4,8,1,1,-9,-6,-3,10,7,-3,-9,7,4,4,3,-8,6,8,3,-9,-10,-7,-1,6,-1,2,9,7,-1,9,-1,-1,-2,-6,-8,9,1,1,-3,2,6,-3,3,-10,-1,8,-5,-10,-6,6,-5,-2,-1,10,7,-7,6,-8,1,5,7,5,10,3,-6,-2,3,7,6,-7,1,-8,5,-8,-5,10,4,-8,-3,-4,1,9,-1,-10,-6,-2,1,4,5,6,-2,-4,2,-3,-2,-3,3,6,10,1,-3,1,-2,-3,6,8,4,6,-1,-2,-6,-5,6,-4,-9,2,-9,-7,-7,-9,8,1,-9,-9,-6,5,-5,-4,6,-9,5,7,4,7,4,4,-5,-5,4,7,6,-3,-4,6,-6,-5,8,-7,5,6,1,-3,-9,-1,4,-10,-9,3,-1,-1,6,8,-7,-6,8,-4,-6,-5,7,5,-1,-4,-9,4,-6,6,3,5,8,4,7,-7,7,5,8,-7,-6,-1,-8,4,-2,-7,4,-4,-5,-10,-6,-3,-1,-9,10,-7,-5,-1,3,-8,-6,9,6,6,-10,4,-5,1,7,4,3,4,-2,-10,10,2,-2,-10,2,2,4,8,-4,5,8,-1,-1,-9,-9,7,-9,-9,-10,1,-5,-4,10,-6,2,6,-1,8,-1,4,-8,-1,-2,9,-7,1,-5,1,-8,10,10,-9,4,-2,6,4,9,-10,4,-10,-2,-5,8,2,2,-6,-1,-3,4,-7,1,4,-7,-10,4,5,1,-10,-5,4,8,2,-5,-4,10,9,3,3,6,2,-3,5,-7,2,-9,1,-6,-9,-8,2,-2,-1,-4,8,10,-1,7,9,-1,7,-9,9,3,-8,9,-9,3,-10,6,9,8,-1,4,-2,-2,4,9,-9,-1,1,9,5,-2,10,-2,8,-9,-6,10,9,-7,5,8,8,1,1,3,-5,-2,-5,-6,-4,-1,-1,8,-4,4,-3,-3,4,-2,5,3,-10,-7,-9,7,1,4,10,-1,-9,4,-9,-2,-3,10,-2,10,-9,-9,3,2,6,3,9,4,10,7,7,2,8,7,-8,3,5,8,8,1,7,1,9,2,-3,9,-10,7,-5,-9,-3,-10,2,8,7,3,-5,-8,10,-4,-8,-3,5,8,8,1,-10,2,9,2,-9,-10,9,-9,-7,-4,-5,5,8,-10,-3,-8,3,4,9,-10,1,1,7,1,-2,-8,1,-8,1,7,-10,6,6,7,-6,-2,-6,-8,-2,6,-1,2,8,-3,8,2,7,-1,-9,-8,5,3,4,6,-10,1,-5,-3,3,-3,-8,-8,4,-7,8,-10,-5,8,-6,-7,-5,8,-1,6,-9,-6,-3,-9,4,1,-1,-6,-8,8,-9,10,1,-5,-1,8,-9,4,-9,-10,-10,6,4,10,8,-5,10,10,-5,6,7,5,-10,-9,-3,3,-2,5,-3,-5,2,8,7,-3,-5,8,7,-2,-4,8,-2,1,2,-9,2,5,-3,-5,-3,3,-9,1,-8,-3,-4,8,-3,-1,6,1,-3,1,9,8,-6,9,-6,1,3,-4,6,4,-4,6,2,-7,4,-5,-4,5,6,5,-4,5,4,-4,-5,2,1,9,-5,-2,-4,2,-10,10,-10,-9,5,10,5,-10,10,10,-1,-7,-3,7,-4,9,-7,1,6,-10,5,-10,3,1,-3,-5,7,-5,10,2,-3,9,10,5,-1,-6,-4,5,6,1,6,-4,-9,-5,-10,-5,8,3,6,-1,-3,-3,3,4,-5,-7,-10,-4,-1,-8,-8,4,-8,1,4,-1,10,4,2,-1,1,-8,10,-10,4,1,-10,7,3,2,-1,6,8,3,8,-7,-3,-1,-8,3,8,2,-3,8,7,5,4,9,1,-4,-7,7,-5,-4,-1,4,3,9,-7,1,-8,1,-8,-6,4,8,-10,-3,5,-9,-4,-6,-1,2,4,1,2,4,6,-8,7,-2,-1,3,2,-4,6,-3,7,-4,-1,-10,1,-4,1,7,-8,-6,-4,6,-2,-4,10,-7,5,7,10,-10,1,-8,-5,-4,-2,5,1,5,2,4,-5,1,4,-5,-7,-5,-10,-5,-6,10,-9,-5,6,6,7,2,-2,-3,2,1,6,10,-7,-1,-3,-10,-7,3,-6,1,-2,7,-7,2,-2,-9,-1,2,-3,10,7,-8,-8,8,-1,-7,-4,-7,-9,-10,-4,-9,9,2,6,8,5,-8,7,6,4,1,2,-1,-10,1,-10,-8,4,1,-5,5,-4,-2,-8,-9,6,4,-1,-8,-6,5,-1,-4,-5,7,5,10,7,-10,-2,1,10,-5,-10,2,-2,-1,1,10,-4,6,2,-7,-9,6,-6,9,-4,-9,-7,-2,7,4,1,-4,2,4,-5,1,-8,5,-7,1,1,6,8,-7,-1,5,-4,9,-8,-7,6,6,8,9,8,-7,-8,4,-10,5,3,-7,8,2,1,-10,9,2,-1,-1,8,7,10,6,-4,3,-8,4,-8,-5,-6,-7,-2,10,-9,2,8,5,-1,-10,-9,-2,-5,6,-3,-6,5,3,2,3,-6,-1,4,-2,7,2,7,7,-2,-7,4,-3,-7,-10,-10,4,-10,10,-1,1,-6,-5,6,-5,5,-3,-7,7,5,-5,-2,2,-4,-6,-5,-2,-9,-6,-9,5,-4,2,-7,5,8,-6,9,-10,10,-7,-2,-8,5,8,-4,7,-1,7,-8,9,-4,-6,-5,-5,2,-2,2,7,-3,-3,-8,-4,1,-7,6,7,-3,3,9,2,2,6,-3,3,-8,4,-9,4,-2,1,9,9,10,9,-2,3,-5,9,-3,-6,9,6,-8,9,5,9,-9,5,10,1,7,7,-2,-1,-9,8,5,-5,6,3,6,-5,-10,-4,-4,-4,8,4,8,-9,-10,-4,-10,-10,-4,10,-6,-3,-5,9,-4,2,-6,6,-10,2,9,-9,-6,-7,-3,-10,-2,-7,2,6,-9,-1,-3,-9,-1,6,-7,-1,3,3,5,-7,6,3,10,-7,-8,-3,5,-5,-5,8,-6,-4,9,7,3,-10,-7,-9,2,5,-4,10,-2,-8,8,8,-9,4,-2,-9,-6,5,1,10,10,3,4,7,-10,1,-5,3,5,-9,10,-3,-8,-8,10,2,3,-8,-9,-3,2,-9,4,8,-3,6,4,10,8,10,-7,-10,6,-7,4,5,5,10,10,-9,-4,6,6,9,3,-2,2,3,3,-6,-2,-1,-7,-6,-1,-9,2,3,1,-2,5,-5,7,6,9,-6,-3,6,10,-4,-7,-3,8,8,2,-4,-5,4,8,-3,2,-6,6,4,5,4,10,-2,-5,-8,10,2,2,7,-5,-6,10,1,-5,-10,4,-2,-1,-3,-5,-3,-4,8,10,7,-8,2,5,1,-10,-10,-7,9,7,6,6,4,-4,-5,2,10,4,-5,7,9,-9,2,-3,5,4,1,9,-9,10,7,-7,-1,1,10,-5,5,-1,-1,-9,-4,6,-2,-1,-9,-6,-2,-5,6,10,-4,-8,-1,8,-1,6,10,1,6,7,-10,4,-8,6,5,-1,-2,-7,-5,-3,-2,4,-3,-7,4,6,7,-7,-7,8,-2,8,-5,7,2,8,2,-7,6,4,6,-5,8,-9,-6,6,7,4,-10,3,4,5,5,9,-6,1,-2,6,-8,-6,3,4,7,1,10,1,-7,-8,-8,4,-1,-7,-3,3,-9,8,1,9,10,7,-6,-4,5,-7,-8,-9,8,-1,1,2,5,2,-2,5,-3,-3,-1,3,-8,10,-1,-4,9,10,1,1,-10,5,-6,-5,3,9,3,-1,-4,7,-4,-6,8,4,-6,9,-8,9,5,2,-1,1,4,-5,6,6,6,-2,10,8,-1,-3,9,2,5,1,4,10,-7,10,10,1,10,10,3,5,5,2,1,10,-7,-1,-5,3,-9,-3,-9,-5,-2,-10,-5,9,-4,-5,-7,10,-6,-7,6,-2,2,-4,-4,3,-5,10,-7,-1,-2,-3,-1,-10,-6,9,8,-8,1,-3,-2,10,9,-9,-1,-5,-9,9,-5,-1,10,4,-3,8,4,-8,8,-4,-2,-3,-5,5,1,6,-6,7,-6,4,3,5,3,-2,5,-10,-10,9,3,1,-9,8,-3,1,-5,-1,7,6,1,-3,-5,-3,-7,-10,6,4,8,1,8,3,7,2,1,-5,5,1,2,4,-6,-10,8,10,-8,9,4,-9,-5,-6,8,-1,1,10,-5,5,-1,-6,10,4,10,4,-5,-7,-4,9,8,3,-9,3,9,7,-2,8,-10,10,6,-6,-6,3,7,10,-9,5,9,-2,-7,-10,-4,2,3,-6,7,9,-6,-1,-4,8,-7,-1,-2,-7,-4,9,5,3,-5,-6,2,4,-10,1,-10,-7,-4,3,5,-7,7,8,9,-2,2,-7,-5,-2,-7,-1,2,4,-10,3,7,4,-8,-7,-8,1,9,4,-10,3,9,-6,3,8,9,9,-9,-1,7,-4,-9,5,-5,-5,7,-4,-1,-9,2,-8,-9,4,-9,-5,-3,3,5,1,9,5,-2,-4,9,7,-3,2,-1,-9,1,9,4,9,10,-9,6,4,-5,2,6,-5,6,10,-6,-8,-5,-3,8,8,2,6,-1,7,-1,-10,-8,-5,-4,2,3,7,8,7,-3,-2,2,2,-8,-9,-8,5,6,10,6,10,-1,-9,6,-3,-1,-4,4,-6,7,-3,-4,8,-10,-10,10,6,-4,8,-1,10,9,2,-2,-6,-4,3,-9,8,9,4,5,-1,-6,-2,2,-8,-6,4,9,-8,-1,10,1,-7,-5,10,-2,-2,1,-3,4,4,2,-9,-8,-5,-7,6,5,8,6,-2,10,5,8,4,1,-3,8,5,8,-4,9,2,-5,5,-10,-10,-3,-4,4,10,-8,10,6,1,-7,10,6,1,-2,-3,-5,5,-7,-6,6,8,-10,7,4,-1,-2,-7,5,-10,-6,1,5,7,2,-4,-1,10,9,-7,-7,3,1,10,10,3,2,-5,-8,8,8,-8,-4,-10,8,-5,-8,-6,8,5,5,-4,-1,-3,-5,-9,-5,-2,5,-2,-9,-10,3,8,-2,-1,-10,-4,-8,-10,-10,-6,5,-3,-7,-5,-2,-5,-1,-8,3,-9,-6,6,10,7,-6,-6,-10,-3,-4,3,-3,10,-1,-6,8,9,-10,6,-2,1,-7,-9,4,1,-2,3,-5,9,1,-10,3,-3,-6,-3,3,4,-1,-4,-9,-6,-1,6,3,-4,1,3,3,6,-4,-8,7,6,9,4,7,6,-8,-6,8,-5,-3,-2,4,-8,1,7,1,5,-3,5,10,10,6,10,7,2,6,10,3,2,5,-3,3,6,10,8,5,-9,7,4,7,-5,9,6,-5,-8,-6,-9,-1,-6,6,-1,5,3,-9,5,-2,-2,-8,-5,-5,-5,5,1,-9,-9,3,8,-9,-10,-10,6,-7,-3,5,8,-2,-2,-5,7,9,10,3,8,1,-10,-2,10,-7,4,2,3,-7,5,7,7,-5,8,5,9,5,-4,10,-8,-1,-10,-6,-9,9,6,-3,3,-10,-7,8,-8,9,-10,7,5,-2,-9,1,3,3,9,-2,5,3,4,9,-4,3,-5,-4,6,-9,-4,4,-4,7,-4,-6,-1,-10,10,-9,6,-10,2,-5,-10,5,7,-5,8,-4,3,1,9,-10,-1,-5,3,-9,-1,-3,-1,9,2,10,-6,-4,4,-4,7,2,-3,4,-4,10,9,10,-4,9,3,-9,4,7,-9,1,-4,-3,-3,2,-1,-5,-8,2,4,-1,3,-3,1,6,-10,5,1,-1,-4,2,-7,-10,3,-10,-5,3,9,8,-7,-2,-3,-1,5,-9,-6,8,9,2,-10,-9,3,5,-10,-4,5,-4,-4,-3,8,10,4,-9,4,6,-4,-8,-9,-1,-4,-5,-2,9,5,-3,-3,-7,10,1,9,-9,4,-10,-10,1,-5,-5,5,-2,-6,-3,9,8,-10,-5,-10,-2,2,7,-4,-6,-7,7,-4,4,4,-1,-1,-2,1,8,10,4,-3,-3,-3,7,3,4,2,9,9,-9,-10,9,-8,1,-8,-1,-9,-9,7,-4,7,8,-8,-7,7,-7,-7,-6,-7,7,3,-8,4,5,-1,-10,7,-10,-2,-3,-3,6,9,6,-1,3,1,-6,-9,4,10,-10,1,3,7,4,6,-9,-4,-3,10,-10,-7,5,1,-6,5,-9,6,-10,8,2,-4,1,7,-4,9,-9,-4,2,6,-6,4,5,-7,-2,9,-9,4,-2,3,2,-3,8,-5,-3,-10,2,-4,5,-4,-4,-10,7,-2,-7,-8,-7,-1,-8,-7,9,-2,3,-8,7,5,6,-6,-9,3,-1,8,1,5,6,-10,1,-6,8,-5,5,-8,-5,-3,3,4,-6,-4,-10,4,-10,10,10,8,-9,5,-2,6,-9,4,4,8,2,5,-10,9,7,3,-5,-5,1,10,-3,3,-5,4,6,-9,5,-10,7,6,9,3,-10,8,-10,-7,5,5,-8,9,-2,-2,-6,-1,-4,-9,6,-8,-2,-8,-5,5,4,9,-10,5,1,-6,-4,10,-2,4,4,-4,10,-1,4,6,8,1,-6,-8,8,1,-1,-3,-3,2,-8,-6,-8,-5,10,2,7,-6,2,9,9,3,5,4,-2,5,-5,-8,5,7,7,5,-5,-6,-6,8,-6,-5,6,9,10,-7,5,7,-1,9,-4,-1,-7,5,-3,-9,3,-2,-7,-6,-4,-1,-8,-3,3,-6,-8,7,5,1,4,-9,-7,-7,-1,-1,-3,6,-3,10,-10,-6,-5,-4,-4,8,-4,-6,-7,5,-5,3,-1,1,5,-3,-10,-3,-1,-5,1,-2,10,8,-4,-5,3,6,6,-9,1,-8,-10,-5,-10,-3,-4,8,6,1,-10,8,-4,-9,-4,-3,-10,-5,4,9,-8,2,1,6,-7,7,3,3,10,10,-10,-8,-6,1,10,-1,-4,2,5,3,7,3,5,-1,-8,10,6,8,-10,-1,9,-1,-6,-8,-5,5,3,3,-6,5,-5,-3,3,-10,-2,-5,2,-6,3,1,7,9,6,7,4,7,9,8,-5,6,1,10,9,4,-2,-9,1,-8,-8,10,-9,1,8,9,-10,-1,-8,6,5,-9,-7,5,-6,6,9,6,-2,5,8,3,1,-1,-3,6,9,6,-6,3,-3,8,4,10,-10,-7,-9,6,-4,-8,-6,-6,4,10,-2,-3,-3,-9,-4,-6,-3,5,-3,1,10,4,-6,10,10,-1,4,-9,5,-7,-6,5,5,-9,-3,-6,10,6,8,-7,5,-3,1,7,8,7,6,-3,-4,-7,-5,-9,-3,-2,-2,-1,4,-7,6,3,9,-9,-1,-3,-7,3,3,6,10,9,6,10,-4,6,-2,-5,6,3,-8,-6,7,4,5,8,-7,-7,6,2,-6,-1,5,9,-2,3,-9,5,-10,9,-9,1,3,9,-5,1,-9,-10,-10,10,-3,4,-3,9,-7,9,5,-2,-9,-10,-3,-8,5,7,-6,9,-9,1,-9,-7,1,2,7,-6,8,1,-9,4,-6,1,-7,3,-3,-9,-9,1,-2,5,1,-6,-9,8,7,-4,-4,-8,5,-8,8,-3,6,6,-6,-9,-4,6,3,3,-8,4,-4,-3,-4,9,2,10,5,8,-8,-10,4,-10,-2,9,-2,1,5,-4,9,-2,5,-1,-9,2,7,-2,8,2,-4,1,5,-1,10,-1,9,9,7,-2,10,4,8,2,7,-7,6,7,9,-2,-3,7,-8,6,8,-10,6,8,9,9,4,4,-3,9,-1,3,6,8,10,-7,-5,-7,-10,-4,-2,2,-8,-6,-9,5,8,6,1,7,-7,8,-3,1,-9,-4,-8,9,-5,1,1,-6,5,4,5,5,-8,-3,9,6,-1,-1,7,8,-6,-7,-4,-6,6,-5,1,-4,5,10,1,4,-4,-2,-8,4,7,8,8,-10,-4,-7,7,2,7,7,-7,2,9,-4,-6,10,-2,7,-2,6,4,-1,-3,4,-4,-9,-4,-4,-9,-2,9,-10,-10,-2,-4,10,-10,-8,3,-4,-2,8,6,-3,-2,-9,4,-1,6,9,-4,9,-8,-8,10,-10,4,2,-1,4,7,4,3,-8,-1,-1,5,-8,9,-6,7,-3,5,3,-8,9,2,-9,-1,6,-3,8,6,-3,-3,4,-4,-2,-2,-4,2,8,-7,9,-3,1,-1,-3,4,-4,6,6,6,-8,-1,-1,-8,-6,-3,2,-9,1,9,-9,-2,9,-2,8,10,-6,-2,3,5,4,6,3,8,-7,10,1,8,9,-6,-8,5,-9,-3,7,-4,6,-7,-5,-5,-4,-8,-8,-7,-8,6,-9,-2,-9,3,-2,7,6,9,8,4,2,9,10,-8,8,4,6,8,-8,-1,7,-10,-1,4,6,9,2,7,3,2,-1,3,-10,-5,3,3,-4,-2,-4,2,6,8,-1,-2,2,10,-10,-3,3,3,3,-5,-8,2,5,10,9,-3,-4,-9,-1,-10,-9,3,10,-9,1,10,2,9,-9,-3,8,-1,1,7,-6,-2,1,-10,-1,-1,-2,10,-6,3,10,4,-10,-8,-4,4,3,8,1,-2,6,5,-6,-1,-5,-8,10,1,-8,2,6,-3,-2,-3,-8,7,10,-1,6,1,-6,-6,-10,6,-8,9,4,2,-2,3,10,5,2,6,-7,3,5,-2,8,2,-8,-9,4,10,-6,7,5,-4,7,-6,9,10,9,-9,-9,3,4,10,3,6,-5,5,-5,6,1,8,3,3,7,-9,5,-2,3,-6,1,6,-5,5,-2,-3,5,2,-7,-10,-7,1,-10,-8,6,-9,-6,-5,8,4,-1,2,8,3,-8,-4,-9,-4,9,-2,-8,3,10,6,10,-7,-8,-8,-4,6,2,-5,-4,-2,3,-9,6,6,2,3,3,-2,2,9,-10,8,-4,5,-3,2,-2,8,7,-6,-5,10,3,-9,3,-1,-3,-7,1,5,-8,2,2,-1,-2,-7,-8,-5,10,-5,1,5,2,-9,3,-9,-4,2,2,4,-10,1,7,-8,9,9,-7,4,-6,6,-8,2,-7,8,8,3,3,6,1,7,5,-2,8,-6,8,6,9,9,-2,5,-9,8,4,1,5,-7,-2,7,-4,8,4,-7,-2,9,3,2,4,-3,-3,4,-4,10,-10,10,9,6,-2,8,-1,-5,-3,-6,8,-5,-8,9,-2,8,6,-7,-5,-8,-8,-10,3,5,6,-3,3,-5,1,-2,1,-6,-1,-1,8,3,6,-4,1,-7,1,1,-9,6,10,-2,2,-7,-3,-9,-8,8,8,-6,-3,7,-2,9,-7,-1,7,-8,-5,1,-5,-10,5,-8,-10,-3,7,9,10,-3,5,4,9,-10,-6,2,-1,4,-2,8,-9,7,3,-7,3,2,6,-9,-7,-9,2,-6,-8,1,-5,2,-2,-1,-2,-9,-10,3,8,-1,3,-10,5,-9,6,-1,-1,-4,9,-9,4,7,1,-10,-2,-6,2,1,1,10,-10,-8,-1,3,8,2,9,5,-9,-9,-5,7,10,-5,-10,8,-6,-2,-9,-1,-8,-8,-4,7,8,-6,2,2,-3,-2,-4,2,9,8,-10,6,2,5,8,9,1,-1,-9,4,4,5,-8,-7,-1,-4,6,9,3,3,-7,9,8,-10,7,-8,-9,8,-2,-4,-1,-5,8,4,9,7,2,3,-8,-8,6,5,-1,-5,-9,7,7,7,-6,-1,2,3,5,-5,-9,-7,1,2,-6,-6,-6,-5,2,2,-4,-5,10,10,3,8,10,-9,-1,4,8,10,-10,-6,-6,-2,-1,9,-6,9,-6,-1,4,9,3,-1,-1,2,8,6,8,6,-7,-3,6,10,8,-10,5,6,-1,6,1,-3,-8,5,-7,5,8,6,-7,5,10,-8,5,1,-2,-7,-9,-2,-1,2,7,-3,7,-8,6,2,1,10,-5,-1,2,-1,-10,7,-1,-3,-8,5,8,2,7,9,-3,3,2,4,-1,2,-8,-7,9,7,-8,3,-6,-7,8,-2,-5,-8,10,-10,6,4,-10,-5,1,-6,-6,5,5,-6,8,-5,-4,1,-6,-5,-4,10,-2,-2,-9,-3,1,-9,-10,3,-5,-2,-3,3,3,-6,10,10,1,4,4,6,-5,-4,-2,-2,5,-7,6,-2,1,5,-3,1,1,-5,5,10,8,7,-1,8,5,-8,7,-10,-7,-10,-4,-6,8,-9,5,-7,5,5,-4,-6,10,8,6,-8,6,5,10,-4,1,3,3,8,-3,6,8,6,7,-7,-3,8,-4,-9,2,-1,7,10,-4,-9,-3,-6,-8,1,6,10,3,-1,9,-9,3,6,6,7,-4,10,-3,10,-9,-9,-9,6,-7,10,7,8,3,-8,-10,10,-3,-3,7,10,-6,-10,-7,8,-3,1,10,-10,1,-2,4,5,4,-4,3,6,-4,-4,-5,5,3,-10,5,-7,-7,-9,3,-10,4,-8,9,-6,-2,-4,-7,7,-6,4,-8,-8,-2,-7,1,-3,-3,-1,7,-5,-10,-10,-7,8,5,-3,-2,9,9,8,5,-4,4,-9,5,-2,3,3,-8,-3,2,5,8,8,1,-7,9,3,9,4,7,2,-7,-10,-5,-7,9,-2,7,-6,10,-5,7,2,-3,3,-2,2,9,4,6,-4,7,-6,8,5,7,4,-1,1,3,-5,-8,-6,-2,-4,4,-7,-2,7,5,5,-3,6,-7,9,-3,-7,-5,2,3,-8,-2,8,-8,-3,9,4,8,8,-9,7,5,-6,7,8,2,7,-2,7,9,2,-9,-10,6,-4,6,10,-7,2,2,4,-7,-7,3,9,-5,2,7,1,-1,-2,-8,8,9,-9,-1,7,1,7,8,-10,6,7,3,9,-4,-10,-1,8,-10,1,2,-7,1,-9,-1,4,-10,-1,10,8,8,6,8,-1,3,-10,-1,-9,3,5,-6,9,1,-10,9,5,-8,9,5,6,6,-4,-3,1,-1,-9,-7,-5,-10,9,5,-9,5,10,-9,-9,-10,-4,-7,10,3,-9,10,9,10,-1,4,-9,7,-8,-6,5,-1,9,-4,-10,-8,7,2,8,-6,1,7,8,1,-4,4,-3,8,4,10,-9,2,6,2,10,-3,9,-2,7,2,10,-1,-10,2,-1,10,3,-3,-8,3,4,-10,7,9,-5,5,6,6,-7,10,3,5,3,-6,-5,-10,6,-2,-4,-9,2,4,-2,-2,1,4,-5,1,-8,-1,-6,2,3,-7,4,7,9,-2,4,-9,-9,10,-3,1,9,-6,5,1,1,6,-1,9,-2,3,6,-10,7,8,4,3,3,2,-5,-5,-8,-2,-2,3,2,2,7,3,-4,4,-10,3,6,1,-8,-10,7,-7,10,5,-5,-10,-8,4,1,2,-7,-7,2,-4,4,9,5,10,-8,-9,-9,5,1,-1,-9,6,-10,7,-10,-4,-5,6,9,-7,-1,1,-3,-9,-6,-7,-3,-1,7,-5,-10,-1,-2,-7,3,9,10,3,-4,8,-1,7,1,7,9,-4,10,6,-4,-2,-8,-8,9,-2,4,-7,8,-8,-3,6,6,-10,7,8,-10,-8,-9,7,-10,3,2,6,3,8,9,-7,-5,-3,3,-6,10,-1,2,9,10,5,-3,1,-7,3,2,2,4,-4,5,-2,-5,5,3,-1,-7,5,9,5,5,-5,7,6,5,10,1,-6,-7,8,-7,4,-7,-4,-5,4,9,8,-9,9,6,3,-3,6,9,1,2,10,6,-8,4,-2,-1,1,7,-1,1,-10,2,6,9,7,-3,-3,-2,-10,10,9,2,-3,-2,-10,10,-7,8,-6,-1,10,-10,10,1,8,2,7,9,-3,-6,-4,-6,1,-4,-1,-9,-8,-4,-3,-10,8,-10,8,-5,-10,5,-7,7,-3,4,8,6,2,-6,-5,-6,8,8,-5,6,-3,-1,2,-10,-1,-10,8,6,-6,-7,-7,-3,-10,1,-3,-5,8,9,-6,-4,3,-7,-9,-3,3,5,-6,5,9,-3,4,9,4,3,-6,6,-2,10,-5,-8,6,10,-4,-8,-2,-5,7,-10,1,8,10,-7,-8,-4,2,3,7,-10,8,-4,-6,-7,-5,3,-10,-5,6,3,-1,-9,10,10,7,6,7,6,-1,6,1,5,-10,-2,-2,-2,-3,-7,5,8,-9,-7,-6,-10,7,-4,5,8,10,2,4,-7,7,9,1,-3,-6,7,-3,-1,-2,9,-6,3,-6,8,-10,-8,-8,6,8,10,-2,-8,-1,-7,5,10,-2,5,-7,9,-9,2,-8,7,-2,2,3,8,8,-8,-1,2,1,-3,-2,6,1,-1,10,7,-6,-5,6,2,1,6,-8,7,-8,8,3,3,3,5,1,-5,-10,5,-6,-1,-9,-10,7,-6,8,-5,9,-8,-2,-8,-6,10,-5,-3,6,-9,1,3,7,-3,5,-7,-5,-9,-10,10,1,-2,-8,9,-7,8,8,-7,3,1,7,-2,-4,1,-7,-8,10,-7,4,-2,-6,10,4,-8,-9,-4,-8,-1,7,-4,3,-3,3,3,7,8,-8,7,8,-10,6,-5,10,7,-8,-10,-5,3,-4,-5,4,2,4,5,-7,-8,8,-7,9,-4,7,9,-8,7,-1,-10,-6,6,-4,-1,-5,-3,-4,1,-6,-2,10,4,4,-7,6,9,-10,1,5,4,-2,-6,1,10,4,-10,-3,-10,6,1,5,-3,4,-10,7,-10,-2,5,-6,1,-9,2,-5,-9,4,-4,-2,5,-4,-5,-8,2,-3,-1,4,-9,-3,4,-5,-3,-7,-7,6,2,-6,3,-4,-4,-1,-8,-9,7,7,-1,6,-3,-1,-9,4,-8,-10,6,3,-3,-7,9,-7,1,8,8,8,-7,2,7,-7,6,-4,-3,2,-1,-8,-6,-7,-1,-1,-8,-10,5,1,8,6,7,-8,-7,10,-1,10,-5,6,-3,5,-3,6,-9,-1,5,2,-7,4,-1,6,3,9,5,6,-10,1,5,1,-4,-2,-10,-3,-5,1,-1,7,-2,-4,2,7,10,-7,-5,1,-1,-8,-7,7,8,-9,-4,-3,-5,-5,6,10,10,-2,-4,-4,-4,-7,1,-5,10,8,-10,-2,1,-1,1,-4,7,-6,7,-7,2,3,5,-4,10,3,-4,-5,2,3,-5,4,3,4,-10,2,-4,5,1,-8,-3,2,-6,4,1,1,4,-8,7,-8,3,-1,3,10,-7,-6,7,-8,5,3,1,3,-1,-4,-5,5,10,-6,-4,-8,3,9,-2,-5,1,4,-1,-9,8,-1,6,10,4,3,-10,-6,5,-5,4,-7,-9,9,5,-2,-1,-5,-1,-7,1,-2,8,-6,-7,3,4,-8,-8,2,-7,8,9,7,10,-6,3,-2,10,-6,-10,8,-9,-4,5,2,-4,10,-6,5,10,-5,-3,-3,-6,10,10,-9,-4,5,10,-9,-8,10,-5,-7,8,9,-2,4,3,-5,10,9,-8,-3,-2,5,-1,-3,9,3,-4,9,-7,6,-7,-1,5,-2,6,1,10,-7,10,9,-10,7,7,1,-8,-3,6,-3,6,3,-1,-10,-2,-1,-5,-2,-3,10,-2,3,6,7,2,4,-3,9,-3,4,6,-8,6,-5,-8,10,-3,-1,10,4,6,-9,-7,3,-7,-5,-4,3,4,10,2,9,-2,-8,-8,2,8,-3,2,-5,6,-4,-5,-10,-5,-9,10,-6,-2,-3,-5,-4,-8,10,-4,-1,-8,-1,-1,4,-3,5,-4,-6,-5,5,-7,7,-8,7,3,-2,-2,6,8,-9,2,6,7,10,-4,2,-6,9,7,5,6,2,4,3,-5,-3,-6,-5,-3,-5,-2,8,-7,3,5,-3,-9,10,3,5,6,7,9,7,6,10,-10,-7,7,10,-10,-2,-7,2,6,8,-5,5,8,7,3,-4,-6,-7,-3,-5,-9,-1,9,-6,9,8,10,2,-5,-4,6,9,-10,-5,3,-5,-6,9,-10,-4,-1,-6,6,-9,-7,-7,-2,5,3,5,1,-10,-8,4,-4,-8,-1,-5,10,-7,-8,10,-1,2,-6,-1,8,-3,10,4,-8,-8,7,-7,9,6,8,-7,-2,4,5,4,-9,-8,6,3,-4,-4,-4,8,3,-1,9,-4,7,8,5,3,-2,-3,3,-4,-8,-8,7,8,-7,3,-6,-6,6,5,7,-7,9,7,5,10,10,-8,3,9,4,7,-10,5,6,-7,-7,4,-4,9,4,5,-9,-1,8,2,1,-1,2,-6,5,-5,-8,8,2,3,1,10,-10,2,-10,-9,-4,3,-8,6,4,4,10,4,-3,8,7,-4,10,7,10,2,-8,-2,5,8,7,1,-7,-9,-4,-2,4,9,10,5,-2,6,5,-4,5,-10,-7,-10,-6,3,-6,2,-3,-8,-7,-4,2,-8,-7,-5,-6,5,-6,8,-5,-5,-9,5,-9,4,-3,-4,-10,2,-5,-10,-4,4,1,3,6,9,6,-7,4,-9,-10,4,5,9,-2,1,-5,5,9,-2,-7,-10,2,8,-9,-4,1,-10,1,6,-10,9,-2,-1,-6,5,5,-6,5,4,-2,4,4,8,5,9,1,-1,4,-3,7,6,5,9,-8,3,-9,1,-3,9,5,5,5,8,-8,-2,8,4,-1,-3,-6,-7,3,8,-1,6,-2,3,-9,-1,-1,-1,-2,-2,10,2,-4,-8,-8,-5,-3,4,-3,5,5,8,-2,7,-4,6,6,9,-6,-7,5,-1,4,-4,-2,9,-8,5,6,3,-3,-7,7,-9,4,7,-9,-10,6,1,4,7,-9,-1,6,-6,-2,-10,-8,2,-8,-3,-9,-9,6,5,2,-1,8,-5,-5,5,-3,-6,5,-4,7,9,8,-1,10,4,9,2,-9,-2,-7,2,4,-10,6,-2,-1,8,-1,-6,6,4,9,-3,-10,-3,-1,-6,2,4,1,-10,-8,-4,9,1,-1,-1,10,9,8,-8,8,2,1,-8,1,-5,-8,8,-8,-3,8,1,7,-2,5,-1,-4,-3,-10,-7,10,-10,2,4,-10,1,10,-6,6,-1,7,-4,-9,-8,-9,-10,1,-5,-9,-3,7,-7,-7,-5,10,-4,2,-10,6,-7,-6,-3,-6,-8,-1,-4,-4,-7,-3,-4,10,1,-7,-10,8,-9,4,-9,-2,5,-7,-2,-9,10,1,4,3,3,4,-2,-3,-9,4,-9,-7,10,3,-5,-8,4,-10,-1,2,10,9,2,-4,9,9,4,4,1,5,10,10,5,10,2,9,-2,7,-10,-3,1,-9,-9,1,10,6,9,4,8,9,-8,4,-9,-3,4,-10,-9,9,1,10,6,-1,-3,-9,1,-3,-10,-8,-9,-2,7,7,-2,-4,6,4,9,7,2,-5,7,1,-6,-10,2,-10,-3,-4,5,6,1,5,9,4,-1,-2,8,10,4,2,10,-2,-1,6,4,1,-5,-7,-10,4,9,-2,1,2,-1,-1,6,-2,2,3,1,3,-2,-10,3,-6,10,-9,1,6,6,1,-3,-9,4,-10,7,10,-6,-2,4,1,-5,7,-4,5,2,-1,2,7,1,-10,-1,-8,3,-5,-5,3,7,-5,4,-8,-8,1,-9,6,6,-8,8,-5,3,8,-6,-9,2,3,-6,2,10,-5,-2,8,-9,-8,-2,8,4,-3,-8,5,-6,5,9,-5,-3,-9,3,4,6,7,-6,1,-2,10,7,-1,4,-5,5,6,-2,4,4,7,9,-6,-10,5,-1,3,2,1,2,-1,-7,9,-1,9,1,5,-2,7,8,-6,-8,-7,5,-6,-7,7,5,-7,7,4,-10,9,8,3,-7,4,-10,-6,2,-3,1,3,4,-4,4,10,-7,-7,5,2,1,-7,-1,-5,5,10,-5,-3,4,1,-7,5,10,-2,4,-8,2,-5,6,-5,-7,8,9,3,1,3,-7,-4,10,3,-2,8,-4,-6,-2,-1,6,-1,1,10,9,1,-2,2,-3,-6,6,10,7,-2,6,8,-3,1,-4,-7,4,9,-3,2,8,2,1,3,7,-7,-9,7,5,-7,8,-1,1,2,3,-1,-1,-2,-4,-2,-10,-4,-3,2,-10,6,2,2,-9,9,-8,10,5,4,9,-10,5,10,6,8,1,-4,3,-8,2,-2,-2,-2,6,-8,-9,4,6,-4,7,8,5,-3,-2,1,-10,4,7,3,-1,-8,1,6,7,-10,3,-2,-2,9,8,7,4,2,-9,-5,-5,-3,-7,6,1,8,-3,-2,-5,-10,10,-3,-3,8,-9,4,-7,2,10,-6,3,-4,-4,5,9,4,-5,6,1,9,8,-6,2,7,-8,-2,-8,-7,-7,6,8,-7,-7,10,-8,10,2,-9,5,-6,-2,2,-7,4,1,-9,-10,-3,-1,4,2,7,1,-8,-3,-7,-5,5,-10,-5,1,-4,-2,7,-8,5,7,3,8,-2,8,-6,-10,4,-3,3,-2,-4,-3,-8,-4,-10,4,8,-7,-3,-2,7,-1,4,-9,-8,5,7,-5,-9,-9,9,-6,-5,7,-7,6,-3,-6,-3,-3,10,-6,-5,2,-9,5,-4,7,4,-7,5,9,-2,-4,-4,9,4,-8,6,5,3,-5,2,6,8,-9,7,-2,6,8,-10,1,2,-2,-1,4,-6,-1,-1,-6,-10,-3,-4,-10,8,8,4,-3,-3,5,-4,10,-7,10,-9,8,-1,10,5,-6,7,4,-7,8,-6,4,1,1,6,-8,8,-6,-7,4,6,9,-8,-7,-2,5,-9,7,4,7,-7,-6,-1,4,1,-3,10,2,-7,-2,-3,6,-5,-3,-8,8,-7,2,7,7,-6,4,-2,-5,-5,-7,-2,-2,5,8,6,-1,-10,-1,3,-2,-8,-4,-5,1,-5,-8,-1,-6,6,10,-9,6,-7,6,-5,-8,7,7,-2,9,9,4,2,8,5,-1,-10,6,4,-7,10,-3,-7,8,1,7,-9,-9,5,8,-5,6,5,-5,2,7,-7,-1,-3,4,-6,-3,3,5,-9,-8,1,-10,-6,7,-6,9,7,8,9,-5,4,-10,-9,-7,-8,-1,-10,5,-7,-1,-7,4,2,-7,5,-6,9,8,-10,4,-1,-9,9,5,8,-7,-8,-10,-3,1,-8,-7,-2,-3,-1,2,-6,-2,-5,-1,5,-8,8,-5,-5,-1,1,10,-4,-6,1,-6,9,4,-7,6,2,6,2,-3,8,-1,-3,-2,3,-1,-8,-3,-6,-10,1,-4,-8,3,2,10,-9,8,-2,-6,-10,3,-5,-4,3,-6,10,7,2,9,-3,3,1,-1,-4,10,-7,4,9,-5,-4,9,10,-3,4,-6,2,-1,3,-6,3,2,8,2,-6,2,-5,-3,6,9,9,-1,5,3,-3,6,4,-6,6,2,2,-3,4,3,-3,4,-8,-2,-6,-2,6,7,-7,-2,8,4,-7,-8,-4,-5,-5,-8,5,-5,-7,-1,6,2,-8,6,-10,7,-9,10,-8,-10,-5,6,-8,-8,8,9,7,7,8,3,-8,-5,7,-2,-10,10,1,-3,4,6,-3,8,-8,5,-10,2,-3,7,-2,-7,-1,8,-10,1,-2,-8,3,5,2,-9,-2,-2,-8,5,6,-4,6,9,1,-1,-8,-10,-6,-6,6,-1,-6,3,10,6,7,-4,-10,-10,4,5,-2,-7,-1,7,6,-8,-10,6,7,7,2,7,-6,-4,-10,-4,-4,-1,2,4,5,-10,-1,5,8,1,5,1,-7,-2,4,9,5,-4,-9,4,-8,-1,1,-6,7,-9,7,4,7,-1,1,10,2,-2,-10,-7,1,9,1,10,-5,10,1,6,-9,-10,6,6,-1,1,7,4,-5,9,-10,-5,10,-9,-1,-10,1,-3,-9,9,7,3,-7,1,10,9,1,-9,1,-3,-4,-5,4,-5,4,4,1,5,-6,9,8,-8,-2,-9,6,5,8,6,-5,6,-3,3,10,2,-6,-10,9,-3,-8,3,-6,-3,-8,6,-7,5,3,-6,5,6,8,-6,-7,-1,-1,8,-3,-10,9,-6,-8,-8,8,5,1,7,-9,-10,1,-9,4,-10,8,1,7,6,8,-8,8,-2,-5,8,-1,8,8,2,7,-2,-1,-2,10,-4,2,5,-5,6,-3,2,5,-3,1,6,9,-5,-10,-9,-7,-7,6,8,8,-1,-10,-4,-7,7,-4,6,-2,-4,-9,1,7,-4,1,-4,6,9,-10,-3,1,5,-3,-9,-1,7,7,6,9,6,-2,10,-8,7,1,-5,10,-8,-10,-7,-1,10,4,1,-6,3,9,-7,2,7,4,8,3,-6,-2,-5,-9,10,-1,-7,7,-6,-3,7,8,1,-7,3,-4,4,-4,-8,2,-6,-8,-3,-3,5,-3,-3,6,3,4,3,7,-5,-6,1,2,2,-8,-7,5,1,4,-9,10,2,-7,4,-4,-4,4,8,-3,-8,-7,-6,-8,-8,-10,3,-10,8,1,3,2,6,3,4,6,8,8,4,8,-10,-1,-2,9,-10,9,8,1,7,-7,1,-2,7,-3,-8,4,-1,1,6,3,-2,9,6,-3,-5,4,6,-5,6,3,-10,1,2,5,2,5,-2,2,-6,9,-9,-5,8,7,9,9,-7,-1,10,6,-3,6,5,1,4,3,4,-8,10,-10,5,6,-8,8,2,2,5,3,5,-3,8,4,-4,6,-8,-2,-6,5,-7,3,-9,7,2,-5,-5,-8,4,5,-4,3,7,-5,8,-8,2,-2,-8,-4,8,9,-10,4,-9,-6,-10,-5,6,4,9,-9,-5,2,2,4,-9,-3,10,-5,-8,1,1,9,-7,1,4,9,-1,-3,-8,2,1,-8,-7,-9,-3,-5,8,4,-8,1,7,3,2,-2,4,10,1,6,9,5,6,8,5,-9,-9,6,2,-3,-7,5,-8,9,-10,-9,2,5,-5,2,-7,6,-3,9,4,-10,-6,4,-9,-5,-10,10,-10,10,9,7,4,1,6,5,-1,-10,-9,3,9,-8,2,-3,-6,10,-6,1,-10,9,4,3,8,-4,-8,-6,-5,-8,-4,-1,-7,-6,-8,4,1,2,-7,3,-10,4,-6,-7,-7,-9,-7,3,-3,-6,8,-9,-5,-8,-7,10,10,5,6,-8,-8,-8,-1,-10,10,5,8,-10,-4,5,-1,-9,3,-8,6,4,3,9,-2,8,5,-1,7,5,-2,-3,7,4,5,-1,-8,-3,6,6,-10,-10,-8,-7,-6,8,-5,1,-4,4,-8,8,-7,-8,-4,-10,1,-9,-1,-5,1,5,6,-7,-4,8,5,10,9,-4,-4,-7,-4,-3,-5,4,-2,1,8,8,1,5,-4,-8,5,-5,-8,-4,-1,1,-5,-1,5,-7,-9,6,1,-6,6,-7,7,10,4,-2,-10,10,-10,-2,-2,10,4,-3,-5,7,4,2,5,9,-3,4,-3,-9,-5,8,2,9,3,-8,-1,-10,6,-6,-4,-10,-5,-2,-1,9,-2,3,4,9,-4,-6,9,-9,9,-7,2,2,6,-8,-5,-2,6,10,-7,-7,-5,7,-10,10,-4,4,8,7,-2,-2,-2,3,-2,-7,-3,2,-7,1,-5,-9,-1,9,1,-3,9,-7,10], dtype = "int32")#candidate|6125|(8448,)|const|int32
call_6124 = relay.TupleGetItem(func_1994_call(relay.reshape(const_6125.astype('int32'), [528, 16])), 2)
call_6126 = relay.TupleGetItem(func_1996_call(relay.reshape(const_6125.astype('int32'), [528, 16])), 2)
output = relay.Tuple([uop_6111,call_6119,call_6124,const_6125,])
output2 = relay.Tuple([uop_6111,call_6120,call_6126,const_6125,])
func_6134 = relay.Function([var_6110,], output)
mod['func_6134'] = func_6134
mod = relay.transform.InferType()(mod)
var_6135 = relay.var("var_6135", dtype = "float32", shape = (16, 7, 15))#candidate|6135|(16, 7, 15)|var|float32
output = func_6134(var_6135)
func_6136 = relay.Function([var_6135], output)
mutated_mod['func_6136'] = func_6136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5335_call = mod.get_global_var('func_5335')
func_5337_call = mutated_mod.get_global_var('func_5337')
call_6146 = relay.TupleGetItem(func_5335_call(), 0)
call_6147 = relay.TupleGetItem(func_5337_call(), 0)
var_6154 = relay.var("var_6154", dtype = "int32", shape = (528, 4))#candidate|6154|(528, 4)|var|int32
bop_6155 = relay.equal(call_6146.astype('bool'), var_6154.astype('bool')) # shape=(528, 4)
bop_6158 = relay.equal(call_6147.astype('bool'), var_6154.astype('bool')) # shape=(528, 4)
uop_6166 = relay.cos(var_6154.astype('float64')) # shape=(528, 4)
output = relay.Tuple([bop_6155,uop_6166,])
output2 = relay.Tuple([bop_6158,uop_6166,])
F = relay.Function([var_6154,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6154,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_5122() -> (Tensor[(2, 9, 16), float64],) {
  %0 = @func_4720() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_821(%var_813: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), bool],) {
  %2 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  %3 = cast(%var_813, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%2, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %7 = not_equal(%5, %6) /* ty=Tensor[(2, 9, 16), bool] */;
  (%7,)
}

def @func_4327() -> (Tensor[(2, 9, 16), float32],) {
  %8 = @func_1760() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %9 = %8.0;
  (%9,)
}

def @func_1197(%var_1179: Tensor[(4, 16, 14), int64], %var_1180: Tensor[(4, 16, 14), int64]) -> (Tensor[(2, 9, 16), float32], Tensor[(4, 16, 14), int64]) {
  %10 = cast(%var_1180, dtype="bool") /* ty=Tensor[(4, 16, 14), bool] */;
  %11 = shape_of(%var_1179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%var_1179, dtype="bool") /* ty=Tensor[(4, 16, 14), bool] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %14 = greater_equal(%12, %13) /* ty=Tensor[(4, 16, 14), bool] */;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(4, 16, 14), float64] */;
  %16 = sqrt(%15) /* ty=Tensor[(4, 16, 14), float64] */;
  %17 = cast(%var_1180, dtype="int64") /* ty=Tensor[(4, 16, 14), int64] */;
  %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%16, dtype="int64") /* ty=Tensor[(4, 16, 14), int64] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %21 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  %22 = subtract(%19, %20) /* ty=Tensor[(4, 16, 14), int64] */;
  (%21, %22)
}

def @func_3710(%var_3705: Tensor[(539), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 11, 7), bool], Tensor[(539), float64]) {
  %23 = @func_1081() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %24 = cast(%var_3705, dtype="float64") /* ty=Tensor[(539), float64] */;
  %25 = reshape(%24, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float64] */;
  %26 = @func_3058(%25) /* ty=(Tensor[(7, 11, 7), bool], Tensor[(2, 9, 16), float32]) */;
  %27 = %23.0;
  %28 = %26.0;
  (%27, %28, %var_3705)
}

def @func_2946() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) {
  %29 = @func_1728() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %30 = @func_2030() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float32]) */;
  %31 = %29.0;
  %32 = %30.1;
  (%31, %32)
}

def @func_5323() -> (Tensor[(2, 9, 16), float64],) {
  %33 = @func_3239() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
  %34 = %33.1;
  (%34,)
}

def @func_6193(%var_6184: Tensor[(1365), float64]) -> Tensor[(1365), bool] {
  %35 = @func_510() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */;
  %36 = %35.2;
  %37 = cast(%var_6184, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(1), int32] */;
  %39 = cast(%36, dtype="bool") /* ty=Tensor[(1365), bool] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?), bool] */;
  greater(%39, %40) /* ty=Tensor[(1365), bool] */
}

def @func_5622(%var_5602: Tensor[(630), int16]) -> (Tensor[(2, 9, 16), float64], Tensor[(6, 3, 16), float64], Tensor[(630), int16]) {
  %41 = cast(%var_5602, dtype="int16") /* ty=Tensor[(630), int16] */;
  %42 = cast(%var_5602, dtype="int16") /* ty=Tensor[(630), int16] */;
  %43 = @func_1807() /* ty=Tensor[(2, 9, 16), float64] */;
  %44 = cast(%43, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %45 = reshape(%41, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), int16] */;
  %46 = reshape(%42, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), int16] */;
  %47 = reshape(%44, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %48 = @func_4443(%45, %46, %47) /* ty=(Tensor[(3, 15, 14), bool], Tensor[(6, 3, 16), float64], Tensor[(288, 1), float64]) */;
  %49 = %48.1;
  (%43, %49, %var_5602)
}

def @func_473() -> Tensor[(2, 9, 16), float32] {
  @func_429() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_4989() -> (Tensor[(6, 3, 16), float64], Tensor[(2, 9, 16), float32]) {
  %50 = @func_1760() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %51 = %50.0;
  %52 = cast(%51, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %53 = cosh(%52) /* ty=Tensor[(2, 9, 16), float32] */;
  %54 = cast(%53, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %55 = reshape(%54, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float64] */;
  %56 = cast(%53, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %57 = @func_2570(%55) /* ty=Tensor[(6, 3, 16), float64] */;
  %58 = cos(%56) /* ty=Tensor[(2, 9, 16), float32] */;
  (%57, %58)
}

def @func_2269(%var_2259: Tensor[(10, 3, 5), float32]) -> (Tensor[(10, 3, 5), float32], Tensor[(2, 9, 16), float64]) {
  %59 = cast(%var_2259, dtype="float32") /* ty=Tensor[(10, 3, 5), float32] */;
  %60 = @func_1346() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %61 = erf(%59) /* ty=Tensor[(10, 3, 5), float32] */;
  %62 = %60.0;
  (%61, %62)
}

def @func_429() -> Tensor[(2, 9, 16), float32] {
  %63 = @func_399() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %63.1
}

def @func_4677(%var_4650: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) {
  %64 = @func_429() /* ty=Tensor[(2, 9, 16), float32] */;
  %65 = cast(%64, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %66 = reshape(%65, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %67 = @func_2617(%66) /* ty=(Tensor[(120), uint64], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) */;
  %68 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  %69 = cast(%var_4650, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%68, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %73 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %74 = %67.2;
  %75 = logical_and(%71, %72) /* ty=Tensor[(2, 9, 16), bool] */;
  %76 = %73.1;
  (%64, %74, %75, %76)
}

def @func_3159() -> (Tensor[(2, 9, 16), float32],) {
  %77 = @func_3116() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %78 = %77.1;
  (%78,)
}

def @func_6762(%var_6683: Tensor[(6, 6, 9), float64], %var_6718: Tensor[(6, 6, 9), float64], %var_6756: Tensor[(1365), float64]) -> (Tensor[(2, 9, 16), float64], Tensor[(6, 6, 9), uint16], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), uint8], Tensor[(7, 6, 15), bool], bool, Tensor[(630), bool], Tensor[(1365), float64], Tensor[(1365), float64], Tensor[(7, 6, 15), bool]) {
  %79 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %80 = cast(%var_6683, dtype="float64") /* ty=Tensor[(6, 6, 9), float64] */;
  %81 = erf(%80) /* ty=Tensor[(6, 6, 9), float64] */;
  %82 = cast(%var_6718, dtype="uint16") /* ty=Tensor[(6, 6, 9), uint16] */;
  %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%81, dtype="uint16") /* ty=Tensor[(6, 6, 9), uint16] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %86 = @func_3254() /* ty=Tensor[(2, 9, 16), uint8] */;
  %87 = @func_1418() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %88 = %87.0;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %90 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%86, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %93 = @func_1941() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) */;
  %94 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %95 = cast(meta[relay.Constant][0] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %96 = reshape(%94, newshape=[]) /* ty=bool */;
  %97 = reshape(%95, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), bool] */;
  %98 = @func_38(%96, %97) /* ty=(Tensor[(7, 6, 15), bool],) */;
  %99 = cast(%var_6756, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %100 = reshape(%99, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %101 = @func_6454(%100) /* ty=(Tensor[(2, 9, 16), int8], Tensor[(1365), bool], Tensor[(1365), float64], Tensor[(2, 9, 16), float32]) */;
  %102 = cast(meta[relay.Constant][0] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %103 = reshape(%102, newshape=[630]) /* ty=Tensor[(630), bool] */;
  %104 = @func_5690(%103) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(7, 6, 15), bool], bool, Tensor[(630), bool]) */;
  %105 = %79.1;
  %106 = right_shift(%84, %85) /* ty=Tensor[(6, 6, 9), uint16] */;
  %107 = divide(%91, %92) /* ty=Tensor[(2, 9, 16), float64] */;
  %108 = %93.0;
  %109 = %98.0;
  %110 = %101.2;
  %111 = %104.1;
  (%105, %106, %107, %108, %109, True /* ty=bool */, meta[relay.Constant][0] /* ty=Tensor[(630), bool] */, %110, %var_6756, %111)
}

def @func_5457(%var_5412: Tensor[(2, 16, 6), float32]) -> (Tensor[(2, 9, 16), float64], Tensor[(2, 16, 6), bool]) {
  %112 = @func_5122() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %113 = cast(%var_5412, dtype="float32") /* ty=Tensor[(2, 16, 6), float32] */;
  %114 = log2(%113) /* ty=Tensor[(2, 16, 6), float32] */;
  %115 = cast(%var_5412, dtype="bool") /* ty=Tensor[(2, 16, 6), bool] */;
  %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(%114, dtype="bool") /* ty=Tensor[(2, 16, 6), bool] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %119 = %112.0;
  %120 = less(%117, %118) /* ty=Tensor[(2, 16, 6), bool] */;
  (%119, %120)
}

def @func_2328(%var_2316: Tensor[(1, 12, 10), uint8], %var_2317: Tensor[(10, 12, 10), uint8]) -> (Tensor[(10, 12, 10), bool], Tensor[(10, 12, 10), float32]) {
  %121 = cast(%var_2316, dtype="bool") /* ty=Tensor[(1, 12, 10), bool] */;
  %122 = cast(%var_2317, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
  %123 = cast(%var_2317, dtype="float32") /* ty=Tensor[(10, 12, 10), float32] */;
  %124 = not_equal(%121, %122) /* ty=Tensor[(10, 12, 10), bool] */;
  %125 = asin(%123) /* ty=Tensor[(10, 12, 10), float32] */;
  (%124, %125)
}

def @func_5690(%var_5682: Tensor[(630), bool]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 6, 15), bool], bool, Tensor[(630), bool]) {
  %126 = @func_4359() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %127 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %128 = cast(%var_5682, dtype="bool") /* ty=Tensor[(630), bool] */;
  %129 = reshape(%127, newshape=[]) /* ty=bool */;
  %130 = reshape(%128, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), bool] */;
  %131 = @func_38(%129, %130) /* ty=(Tensor[(7, 6, 15), bool],) */;
  %132 = %126.1;
  %133 = %131.0;
  (%132, %133, False /* ty=bool */, %var_5682)
}

def @func_5782() -> (Tensor[(2, 9, 16), float32],) {
  %134 = @func_399() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %135 = %134.1;
  (%135,)
}

def @func_6454(%var_6439: Tensor[(1365), float64]) -> (Tensor[(2, 9, 16), int8], Tensor[(1365), bool], Tensor[(1365), float64], Tensor[(2, 9, 16), float32]) {
  %136 = @func_2946() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) */;
  %137 = cast(%var_6439, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %138 = reshape(%137, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %139 = @func_701() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(280), float64]) */;
  %140 = %136.1;
  %141 = @func_6193(%138) /* ty=Tensor[(1365), bool] */;
  %142 = %139.0;
  (%140, %141, %var_6439, %142)
}

def @func_626() -> (Tensor[(2, 9, 16), float64],) {
  %143 = @func_510() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */;
  %144 = %143.0;
  (%144,)
}

def @func_399() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %145 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %146 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %147 = %145.2;
  %148 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  %149 = %146.0;
  (%147, %148, %149)
}

def @func_1887() -> (Tensor[(2, 9, 16), float32],) {
  %150 = @func_1464() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %151 = %150.2;
  (%151,)
}

def @func_3463(%var_3408: Tensor[(2, 16, 13), float64], %var_3424: Tensor[(1, 288), float32]) -> (Tensor[(2, 16, 13), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(1, 288), float32], Tensor[(2, 16, 13), float32]) {
  %152 = cast(%var_3408, dtype="float64") /* ty=Tensor[(2, 16, 13), float64] */;
  %153 = cast(%var_3424, dtype="float32") /* ty=Tensor[(1, 288), float32] */;
  %154 = reshape(%153, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %155 = @func_2828(%154) /* ty=(Tensor[(2, 9, 16), float32],) */;
  %156 = @func_3025() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) */;
  %157 = cast(%var_3424, dtype="float32") /* ty=Tensor[(1, 288), float32] */;
  %158 = cast(%var_3408, dtype="float64") /* ty=Tensor[(2, 16, 13), float64] */;
  %159 = asin(%158) /* ty=Tensor[(2, 16, 13), float64] */;
  %160 = cast(%159, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  %161 = log(%152) /* ty=Tensor[(2, 16, 13), float64] */;
  %162 = %155.0;
  %163 = %156.0;
  %164 = sinh(%157) /* ty=Tensor[(1, 288), float32] */;
  %165 = rsqrt(%160) /* ty=Tensor[(2, 16, 13), float32] */;
  (%161, %162, %163, %164, %165)
}

def @func_4359() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %166 = @func_1887() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %167 = @func_1919() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %168 = %166.0;
  %169 = %167.0;
  (%168, %169)
}

def @func_5227() -> Tensor[(2, 9, 16), float64] {
  %170 = @func_4290() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) */;
  %170.2
}

def @func_701() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(280), float64]) {
  %171 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %172 = cast(meta[relay.Constant][1] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %173 = reshape(%172, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float64] */;
  %174 = @func_555(%173) /* ty=(Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %175 = %171.1;
  %176 = %174.1;
  (%175, %176, meta[relay.Constant][1] /* ty=Tensor[(280), float64] */)
}

def @func_3239() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) {
  %177 = @func_1494() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %178 = %177.0;
  %179 = @func_1807() /* ty=Tensor[(2, 9, 16), float64] */;
  (%178, %179)
}

def @func_278() -> (Tensor[(2, 9, 16), float32],) {
  %180 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  (%180,)
}

def @func_3987() -> (Tensor[(2, 9, 16), float64],) {
  %181 = @func_1941() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) */;
  %182 = %181.1;
  (%182,)
}

def @func_6062(%var_6044: Tensor[(539, 1), float64]) -> (Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32], Tensor[(539, 1), float64], Tensor[(2, 9, 16), float32]) {
  %183 = @func_5479() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %184 = %183.1;
  %185 = @func_4290() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) */;
  %186 = %185.0;
  %187 = cast(%186, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %188 = shape_of(%184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%184, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %191 = cast(%var_6044, dtype="float64") /* ty=Tensor[(539, 1), float64] */;
  %192 = reshape(%191, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float64] */;
  %193 = @func_3058(%192) /* ty=(Tensor[(7, 11, 7), bool], Tensor[(2, 9, 16), float32]) */;
  %194 = greater_equal(%189, %190) /* ty=Tensor[(2, 9, 16), bool] */;
  %195 = %193.1;
  %196 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  (%194, %195, %var_6044, %196)
}

def @func_1807() -> Tensor[(2, 9, 16), float64] {
  %197 = @func_1236() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %197.0
}

def @func_6338() -> (Tensor[(2, 9, 16), float64], Tensor[(441), float64], Tensor[(2, 13, 11), bool], Tensor[(286), uint64], Tensor[(2, 10, 12), float32], Tensor[(539), float64], Tensor[(11, 49), float64]) {
  %198 = @func_5323() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %199 = cast(meta[relay.Constant][3] /* ty=Tensor[(286), uint64] */, dtype="uint64") /* ty=Tensor[(286), uint64] */;
  %200 = cast(meta[relay.Constant][3] /* ty=Tensor[(286), uint64] */, dtype="uint64") /* ty=Tensor[(286), uint64] */;
  %201 = reshape(%199, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint64] */;
  %202 = reshape(%200, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint64] */;
  %203 = cast(meta[relay.Constant][2] /* ty=Tensor[(441), float64] */, dtype="float64") /* ty=Tensor[(441), float64] */;
  %204 = reshape(%203, newshape=[7, 9, 7]) /* ty=Tensor[(7, 9, 7), float64] */;
  %205 = @func_2513(%204) /* ty=(Tensor[(7, 9, 7), float64], Tensor[(7, 9, 7), float32], Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %206 = %205.2;
  %207 = cast(%206, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
  %208 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 49), float64] */, dtype="float64") /* ty=Tensor[(11, 49), float64] */;
  %209 = reshape(%208, newshape=[539]) /* ty=Tensor[(539), float64] */;
  %210 = @func_5966(%209) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(7, 11, 7), bool], Tensor[(539), float64]) */;
  %211 = %198.0;
  %212 = @func_4411(%201, %202) /* ty=Tensor[(2, 13, 11), bool] */;
  %213 = atanh(%207) /* ty=Tensor[(2, 10, 12), float32] */;
  %214 = %210.2;
  (%211, meta[relay.Constant][2] /* ty=Tensor[(441), float64] */, %212, meta[relay.Constant][3] /* ty=Tensor[(286), uint64] */, %213, %214, meta[relay.Constant][4] /* ty=Tensor[(11, 49), float64] */)
}

def @func_1236() -> (Tensor[(2, 9, 16), float64],) {
  %215 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %216 = %215.1;
  (%216,)
}

def @func_441(%var_436: Tensor[(15, 7, 13), float64]) -> Tensor[(15, 7, 13), float64] {
  %217 = cast(%var_436, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  sigmoid(%217) /* ty=Tensor[(15, 7, 13), float64] */
}

def @func_1395() -> (Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32]) {
  %218 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  %219 = @func_1065() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) */;
  %220 = %219.0;
  %221 = cast(%220, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %222 = shape_of(%218, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%218, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %225 = @func_635() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %226 = bitwise_or(%223, %224) /* ty=Tensor[(2, 9, 16), uint8] */;
  %227 = %225.0;
  (%226, %227)
}

def @func_4497() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %228 = @func_1643() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
  %229 = @func_3332() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %230 = @func_1919() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %231 = @func_1494() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %232 = %228.3;
  %233 = %229.0;
  %234 = %230.0;
  %235 = %231.0;
  (%232, %233, %234, %235)
}

def @func_4183(%var_4171: Tensor[(630), bool]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(630), bool]) {
  %236 = @func_1643() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
  %237 = cast(%var_4171, dtype="bool") /* ty=Tensor[(630), bool] */;
  %238 = reshape(%237, newshape=[630, 1]) /* ty=Tensor[(630, 1), bool] */;
  %239 = @func_1596(%238) /* ty=(Tensor[(7, 6, 15), bool], Tensor[(630, 1), bool], Tensor[(2, 9, 16), bool]) */;
  %240 = %236.3;
  %241 = %239.2;
  (%240, %241, %var_4171)
}

def @func_2143() -> Tensor[(2, 9, 16), float32] {
  @func_227() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_5664() -> Tensor[(2, 9, 16), float32] {
  %242 = @func_1065() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) */;
  %242.2
}

def @func_6515(%var_6489: Tensor[(180), float64], %var_6511: Tensor[(630), bool]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 15, 6), float64], Tensor[(180), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), bool], Tensor[(630), bool]) {
  %243 = cast(%var_6489, dtype="float64") /* ty=Tensor[(180), float64] */;
  %244 = reshape(%243, newshape=[2, 15, 6]) /* ty=Tensor[(2, 15, 6), float64] */;
  %245 = @func_5479() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %246 = cast(%var_6511, dtype="bool") /* ty=Tensor[(630), bool] */;
  %247 = reshape(%246, newshape=[630, 1]) /* ty=Tensor[(630, 1), bool] */;
  %248 = @func_1596(%247) /* ty=(Tensor[(7, 6, 15), bool], Tensor[(630, 1), bool], Tensor[(2, 9, 16), bool]) */;
  %249 = @func_5892() /* ty=Tensor[(2, 9, 16), float32] */;
  %250 = @func_209(%244) /* ty=Tensor[(2, 15, 6), float64] */;
  %251 = %245.0;
  %252 = %248.2;
  (%249, %250, %var_6489, %251, %252, %var_6511)
}

def @func_1728() -> (Tensor[(2, 9, 16), float32],) {
  %253 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  (%253,)
}

def @func_2828(%var_2823: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), float32],) {
  %254 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %255 = %254.0;
  %256 = cast(%var_2823, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%255, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %260 = mod(%258, %259) /* ty=Tensor[(2, 9, 16), float32] */;
  (%260,)
}

def @func_2760() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %261 = @func_1065() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) */;
  %262 = @func_2143() /* ty=Tensor[(2, 9, 16), float32] */;
  %263 = %261.2;
  (%262, %263)
}

def @func_4443(%var_4427: Tensor[(3, 15, 14), int16], %var_4428: Tensor[(3, 15, 14), int16], %var_4438: Tensor[(288, 1), float64]) -> (Tensor[(3, 15, 14), bool], Tensor[(6, 3, 16), float64], Tensor[(288, 1), float64]) {
  %264 = cast(%var_4428, dtype="bool") /* ty=Tensor[(3, 15, 14), bool] */;
  %265 = shape_of(%var_4427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%var_4427, dtype="bool") /* ty=Tensor[(3, 15, 14), bool] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %268 = cast(%var_4438, dtype="float64") /* ty=Tensor[(288, 1), float64] */;
  %269 = reshape(%268, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float64] */;
  %270 = less_equal(%266, %267) /* ty=Tensor[(3, 15, 14), bool] */;
  %271 = @func_2570(%269) /* ty=Tensor[(6, 3, 16), float64] */;
  (%270, %271, %var_4438)
}

def @func_3025() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) {
  %272 = @func_2946() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) */;
  %273 = %272.0;
  %274 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %275 = %274.0;
  %276 = cast(%275, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %277 = shape_of(%273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%273, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %280 = @func_429() /* ty=Tensor[(2, 9, 16), float32] */;
  %281 = less_equal(%278, %279) /* ty=Tensor[(2, 9, 16), bool] */;
  (%280, %281)
}

def @func_5863(%var_5788: Tensor[(16, 9, 6), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(16, 9, 6), float32], Tensor[(16, 9, 6), float64]) {
  %282 = @func_2238() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %283 = cast(%var_5788, dtype="float64") /* ty=Tensor[(16, 9, 6), float64] */;
  %284 = sqrt(%283) /* ty=Tensor[(16, 9, 6), float64] */;
  %285 = cast(%284, dtype="float32") /* ty=Tensor[(16, 9, 6), float32] */;
  %286 = erf(%285) /* ty=Tensor[(16, 9, 6), float32] */;
  %287 = cast(%284, dtype="float32") /* ty=Tensor[(16, 9, 6), float32] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%286, dtype="float32") /* ty=Tensor[(16, 9, 6), float32] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %291 = cast(%286, dtype="float64") /* ty=Tensor[(16, 9, 6), float64] */;
  %292 = %282.0;
  %293 = maximum(%289, %290) /* ty=Tensor[(16, 9, 6), float32] */;
  %294 = cos(%291) /* ty=Tensor[(16, 9, 6), float64] */;
  (%292, %293, %294)
}

def @func_5266() -> (Tensor[(2, 9, 16), float32], Tensor[(10, 7, 4), float64], Tensor[(280), float64]) {
  %295 = cast(meta[relay.Constant][5] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %296 = reshape(%295, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float64] */;
  %297 = @func_555(%296) /* ty=(Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %298 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  %299 = %297.0;
  (%298, %299, meta[relay.Constant][5] /* ty=Tensor[(280), float64] */)
}

def @func_6156() -> (Tensor[(2, 9, 16), float64],) {
  %300 = @func_626() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %301 = %300.0;
  %302 = cast(%301, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %303 = tan(%302) /* ty=Tensor[(2, 9, 16), float64] */;
  (%303,)
}

def @func_6852(%var_6823: Tensor[(16, 10, 5), bool]) -> (Tensor[(16, 10, 5), bool], Tensor[(120), uint64], Tensor[(288), float32]) {
  %304 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 10, 1), bool] */, dtype="bool") /* ty=Tensor[(16, 10, 1), bool] */;
  %305 = cast(%var_6823, dtype="bool") /* ty=Tensor[(16, 10, 5), bool] */;
  %306 = cast(meta[relay.Constant][7] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %307 = reshape(%306, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %308 = @func_2617(%307) /* ty=(Tensor[(120), uint64], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) */;
  %309 = logical_and(%304, %305) /* ty=Tensor[(16, 10, 5), bool] */;
  %310 = %308.1;
  (%309, %310, meta[relay.Constant][7] /* ty=Tensor[(288), float32] */)
}

def @func_4806(%var_4792: Tensor[(2, 13, 10), float64], %var_4793: Tensor[(2, 13, 10), float64]) -> Tensor[(2, 13, 10), float64] {
  %311 = cast(%var_4793, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %312 = shape_of(%var_4792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%var_4792, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%313, %314) /* ty=Tensor[(2, 13, 10), float64] */
}

def @func_1760() -> (Tensor[(2, 9, 16), float32],) {
  %315 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %316 = %315.1;
  (%316,)
}

def @func_3775() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) {
  %317 = @func_2143() /* ty=Tensor[(2, 9, 16), float32] */;
  %318 = @func_1807() /* ty=Tensor[(2, 9, 16), float64] */;
  (%317, %318)
}

def @func_5936() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %319 = @func_2760() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %320 = @func_3116() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %321 = %319.1;
  %322 = %320.1;
  (%321, %322)
}

def @func_1643() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) {
  %323 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %324 = cast(meta[relay.Constant][8] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %325 = reshape(%324, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float64] */;
  %326 = @func_555(%325) /* ty=(Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %327 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %328 = @func_1236() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %329 = %323.0;
  %330 = %326.1;
  %331 = %327.1;
  %332 = %328.0;
  (%329, %330, meta[relay.Constant][8] /* ty=Tensor[(280), float64] */, %331, %332)
}

def @func_4898(%var_4875: Tensor[(5, 1, 5), float32], %var_4887: Tensor[(288), float32]) -> (Tensor[(5, 9, 5), float32], Tensor[(288), float32], Tensor[(2, 9, 16), float32]) {
  %333 = cast(%var_4875, dtype="float32") /* ty=Tensor[(5, 1, 5), float32] */;
  %334 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 9, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
  %335 = cast(%var_4887, dtype="float32") /* ty=Tensor[(288), float32] */;
  %336 = reshape(%335, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %337 = @func_2694(%336) /* ty=Tensor[(2, 9, 16), float64] */;
  %338 = cast(%337, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %339 = floor_mod(%333, %334) /* ty=Tensor[(5, 9, 5), float32] */;
  %340 = log2(%338) /* ty=Tensor[(2, 9, 16), float32] */;
  (%339, %var_4887, %340)
}

def @func_3525(%var_3484: Tensor[(7, 4, 2), int16], %var_3485: Tensor[(7, 4, 2), int16]) -> (Tensor[(7, 4, 2), int16], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %341 = cast(%var_3485, dtype="int16") /* ty=Tensor[(7, 4, 2), int16] */;
  %342 = shape_of(%var_3484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%var_3484, dtype="int16") /* ty=Tensor[(7, 4, 2), int16] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %345 = @func_2238() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %346 = @func_2238() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %347 = @func_1643() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
  %348 = bitwise_xor(%343, %344) /* ty=Tensor[(7, 4, 2), int16] */;
  %349 = %345.0;
  %350 = %346.0;
  %351 = %347.1;
  (%348, %349, %350, %351)
}

def @func_2003(%var_1977: Tensor[(2, 9, 16), uint8]) -> (Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(4, 16, 14), int64], Tensor[(896), int64]) {
  %352 = @func_1395() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32]) */;
  %353 = %352.0;
  %354 = cast(%var_1977, dtype="int8") /* ty=Tensor[(2, 9, 16), int8] */;
  %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%353, dtype="int8") /* ty=Tensor[(2, 9, 16), int8] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %358 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %359 = cast(meta[relay.Constant][10] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %360 = reshape(%359, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float64] */;
  %361 = @func_555(%360) /* ty=(Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %362 = cast(meta[relay.Constant][11] /* ty=Tensor[(896), int64] */, dtype="int64") /* ty=Tensor[(896), int64] */;
  %363 = cast(meta[relay.Constant][11] /* ty=Tensor[(896), int64] */, dtype="int64") /* ty=Tensor[(896), int64] */;
  %364 = reshape(%362, newshape=[4, 16, 14]) /* ty=Tensor[(4, 16, 14), int64] */;
  %365 = reshape(%363, newshape=[4, 16, 14]) /* ty=Tensor[(4, 16, 14), int64] */;
  %366 = @func_1197(%364, %365) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(4, 16, 14), int64]) */;
  %367 = maximum(%356, %357) /* ty=Tensor[(2, 9, 16), int8] */;
  %368 = %358.1;
  %369 = %361.1;
  %370 = %366.1;
  (%367, %368, %369, meta[relay.Constant][10] /* ty=Tensor[(280), float64] */, %370, meta[relay.Constant][11] /* ty=Tensor[(896), int64] */)
}

def @func_2416(%var_2392: Tensor[(120), uint64]) -> (Tensor[(2, 9, 16), float32], Tensor[(10, 4, 3), bool], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) {
  %371 = @func_1464() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %372 = cast(%var_2392, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %373 = cast(%var_2392, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %374 = reshape(%372, newshape=[10, 4, 3]) /* ty=Tensor[(10, 4, 3), uint64] */;
  %375 = reshape(%373, newshape=[10, 4, 3]) /* ty=Tensor[(10, 4, 3), uint64] */;
  %376 = @func_1148(%374, %375) /* ty=(Tensor[(10, 4, 3), bool], Tensor[(10, 4, 3), bool]) */;
  %377 = %371.3;
  %378 = cast(%377, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %379 = reshape(%378, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %380 = @func_821(%379) /* ty=(Tensor[(2, 9, 16), bool],) */;
  %381 = %376.1;
  %382 = %380.0;
  (%377, %381, %var_2392, %382)
}

def @func_3289() -> Tensor[(2, 9, 16), float32] {
  %383 = @func_1494() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %383.0
}

def @func_1081() -> (Tensor[(2, 9, 16), float32],) {
  %384 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %385 = %384.0;
  (%385,)
}

def @func_5408(%var_5367: Tensor[(7, 9, 1), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 9, ?), int16], Tensor[(7, 9, ?), uint16], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) {
  %386 = @func_2760() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %387 = cast(%var_5367, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %388 = atan(%387) /* ty=Tensor[(7, 9, 1), float64] */;
  %389 = cast(%388, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  %390 = sigmoid(%389) /* ty=Tensor[(7, 9, 1), float32] */;
  %391 = cast(%var_5367, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %392 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%388, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %395 = floor_mod(%393, %394) /* ty=Tensor[(7, 9, ?), float64] */;
  %396 = cast(%395, dtype="int16") /* ty=Tensor[(7, 9, ?), int16] */;
  %397 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%390, dtype="int16") /* ty=Tensor[(7, 9, 1), int16] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %400 = cast(%390, dtype="uint16") /* ty=Tensor[(7, 9, 1), uint16] */;
  %401 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%395, dtype="uint16") /* ty=Tensor[(7, 9, ?), uint16] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %404 = %386.1;
  %405 = cast(%404, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %406 = reshape(%405, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %407 = @func_4677(%406) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) */;
  %408 = @func_4497() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %409 = add(%398, %399) /* ty=Tensor[(7, 9, ?), int16] */;
  %410 = bitwise_and(%402, %403) /* ty=Tensor[(7, 9, ?), uint16] */;
  %411 = %407.1;
  %412 = %408.0;
  (%404, %409, %410, %411, %412)
}

def @func_2521() -> (Tensor[(2, 9, 16), float32],) {
  %413 = @func_1728() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %414 = %413.0;
  (%414,)
}

def @func_1065() -> (Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) {
  %415 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  %416 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 9, 16), float32] */, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %417 = shape_of(%415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%415, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %420 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 9, 16), float32] */, dtype="uint16") /* ty=Tensor[(2, 9, 16), uint16] */;
  %421 = shape_of(%415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(%415, dtype="uint16") /* ty=Tensor[(2, 9, 16), uint16] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %424 = cast(%415, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %425 = asin(%424) /* ty=Tensor[(2, 9, 16), float64] */;
  %426 = cast(%425, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %427 = left_shift(%418, %419) /* ty=Tensor[(2, 9, 16), uint8] */;
  %428 = bitwise_xor(%422, %423) /* ty=Tensor[(2, 9, 16), uint16] */;
  %429 = sinh(%426) /* ty=Tensor[(2, 9, 16), float32] */;
  (%427, %428, %429)
}

def @func_2449() -> Tensor[(1365), float64] {
  %430 = @func_510() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */;
  %431 = %430.2;
  %432 = cast(%431, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %433 = rsqrt(%432) /* ty=Tensor[(1365), float64] */;
  %434 = cast(%431, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(1), int32] */;
  %436 = cast(%433, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?), float64] */;
  power(%436, %437) /* ty=Tensor[(1365), float64] */
}

def @func_1941() -> (Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) {
  %438 = @func_1065() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) */;
  %439 = %438.0;
  %440 = @func_1807() /* ty=Tensor[(2, 9, 16), float64] */;
  (%439, %440)
}

def @func_5892() -> Tensor[(2, 9, 16), float32] {
  %441 = @func_2030() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float32]) */;
  %441.2
}

def @func_1494() -> (Tensor[(2, 9, 16), float32],) {
  %442 = @func_701() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(280), float64]) */;
  %443 = %442.1;
  (%443,)
}

def @func_2195() -> (Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), bool], Tensor[(288), float32], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) {
  %444 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
  %445 = cast(meta[relay.Constant][14] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %446 = reshape(%445, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %447 = @func_821(%446) /* ty=(Tensor[(2, 9, 16), bool],) */;
  %448 = cast(meta[relay.Constant][15] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %449 = reshape(%448, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %450 = tan(%444) /* ty=Tensor[(2, 10, 12), float32] */;
  %451 = %447.0;
  %452 = @func_441(%449) /* ty=Tensor[(15, 7, 13), float64] */;
  (%450, %451, meta[relay.Constant][14] /* ty=Tensor[(288), float32] */, %452, meta[relay.Constant][15] /* ty=Tensor[(1365), float64] */)
}

def @func_1919() -> (Tensor[(2, 9, 16), float32],) {
  %453 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %454 = %453.0;
  (%454,)
}

def @func_3075(%var_3068: Tensor[(12, 9, 6), uint64], %var_3069: Tensor[(12, 9, 6), uint64]) -> (Tensor[(12, 9, 6), uint64], Tensor[(2, 9, 16), float64]) {
  %455 = cast(%var_3069, dtype="uint64") /* ty=Tensor[(12, 9, 6), uint64] */;
  %456 = shape_of(%var_3068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%var_3068, dtype="uint64") /* ty=Tensor[(12, 9, 6), uint64] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %459 = @func_626() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %460 = maximum(%457, %458) /* ty=Tensor[(12, 9, 6), uint64] */;
  %461 = %459.0;
  (%460, %461)
}

def @func_2513(%var_2454: Tensor[(7, 9, 7), float64]) -> (Tensor[(7, 9, 7), float64], Tensor[(7, 9, 7), float32], Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %462 = cast(%var_2454, dtype="float64") /* ty=Tensor[(7, 9, 7), float64] */;
  %463 = cast(%var_2454, dtype="float64") /* ty=Tensor[(7, 9, 7), float64] */;
  %464 = erf(%463) /* ty=Tensor[(7, 9, 7), float64] */;
  %465 = cast(%464, dtype="float32") /* ty=Tensor[(7, 9, 7), float32] */;
  %466 = @func_2195() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), bool], Tensor[(288), float32], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */;
  %467 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %468 = @func_1941() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) */;
  %469 = @func_1324() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) */;
  %470 = @func_1760() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %471 = sqrt(%462) /* ty=Tensor[(7, 9, 7), float64] */;
  %472 = rsqrt(%465) /* ty=Tensor[(7, 9, 7), float32] */;
  %473 = %466.0;
  %474 = %467.0;
  %475 = %468.0;
  %476 = %469.1;
  %477 = %470.0;
  (%471, %472, %473, %474, %475, %476, %477)
}

def @func_928() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) {
  %478 = @func_429() /* ty=Tensor[(2, 9, 16), float32] */;
  %479 = cast(%478, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %480 = cast(%478, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %481 = sin(%480) /* ty=Tensor[(2, 9, 16), float64] */;
  %482 = cast(%481, dtype="uint32") /* ty=Tensor[(2, 9, 16), uint32] */;
  %483 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%478, dtype="uint32") /* ty=Tensor[(2, 9, 16), uint32] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %486 = bitwise_and(%484, %485) /* ty=Tensor[(2, 9, 16), uint32] */;
  %487 = cast(%481, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %488 = shape_of(%486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%486, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %491 = sigmoid(%479) /* ty=Tensor[(2, 9, 16), float64] */;
  %492 = multiply(%489, %490) /* ty=Tensor[(2, 9, 16), float64] */;
  (%491, %492)
}

def @func_1749(%var_1736: Tensor[(2, 9, 16), uint8]) -> Tensor[(2, 9, 16), float64] {
  %493 = @func_1395() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32]) */;
  %494 = %493.0;
  %495 = cast(%var_1736, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %496 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%494, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %499 = power(%497, %498) /* ty=Tensor[(2, 9, 16), float32] */;
  %500 = cast(%499, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  rsqrt(%500) /* ty=Tensor[(2, 9, 16), float64] */
}

def @func_376() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %501 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %502 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  %503 = %501.0;
  %504 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  (%502, %503, %504)
}

def @func_4411(%var_4401: Tensor[(2, 13, 11), uint64], %var_4402: Tensor[(2, 13, 11), uint64]) -> Tensor[(2, 13, 11), bool] {
  %505 = cast(%var_4402, dtype="bool") /* ty=Tensor[(2, 13, 11), bool] */;
  %506 = shape_of(%var_4401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %507 = cast(%var_4401, dtype="bool") /* ty=Tensor[(2, 13, 11), bool] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%507, %508) /* ty=Tensor[(2, 13, 11), bool] */
}

def @func_38(%var_28: bool, %var_29: Tensor[(7, 6, 15), bool]) -> (Tensor[(7, 6, 15), bool],) {
  %509 = cast(%var_28, dtype="bool") /* ty=bool */;
  %510 = cast(%var_29, dtype="bool") /* ty=Tensor[(7, 6, 15), bool] */;
  %511 = logical_or(%509, %510) /* ty=Tensor[(7, 6, 15), bool] */;
  (%511,)
}

def @func_863(%var_842: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) {
  %512 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %513 = %512.0;
  %514 = cast(%var_842, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%513, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %518 = cast(%513, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %519 = shape_of(%var_842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%var_842, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %522 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %523 = greater(%516, %517) /* ty=Tensor[(2, 9, 16), bool] */;
  %524 = equal(%520, %521) /* ty=Tensor[(2, 9, 16), bool] */;
  %525 = %522.0;
  (%523, %524, %525)
}

def @func_635() -> (Tensor[(2, 9, 16), float32],) {
  %526 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %527 = %526.0;
  (%527,)
}

def @func_1148(%var_1108: Tensor[(10, 4, 3), uint64], %var_1116: Tensor[(10, 4, 3), uint64]) -> (Tensor[(10, 4, 3), bool], Tensor[(10, 4, 3), bool]) {
  %528 = cast(%var_1108, dtype="bool") /* ty=Tensor[(10, 4, 3), bool] */;
  %529 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(10, 4, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 4, 3), uint64] */, dtype="bool") /* ty=Tensor[(10, 4, 3), bool] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %532 = cast(%var_1116, dtype="bool") /* ty=Tensor[(10, 4, 3), bool] */;
  %533 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(10, 4, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 4, 3), uint64] */, dtype="bool") /* ty=Tensor[(10, 4, 3), bool] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %536 = greater(%530, %531) /* ty=Tensor[(10, 4, 3), bool] */;
  %537 = greater_equal(%534, %535) /* ty=Tensor[(10, 4, 3), bool] */;
  (%536, %537)
}

def @func_581(%var_563: uint8, %var_570: Tensor[(2, 2, 6), uint8]) -> (Tensor[(2, 2, 1), uint8], Tensor[(2, 2, 6), uint8]) {
  %538 = cast(%var_563, dtype="uint8") /* ty=uint8 */;
  %539 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 2, 1), uint8] */, dtype="uint8") /* ty=Tensor[(2, 2, 1), uint8] */;
  %540 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 2, 1), uint8] */, dtype="uint8") /* ty=Tensor[(2, 2, 1), uint8] */;
  %541 = cast(%var_570, dtype="uint8") /* ty=Tensor[(2, 2, 6), uint8] */;
  %542 = logical_xor(%538, %539) /* ty=Tensor[(2, 2, 1), uint8] */;
  %543 = bitwise_xor(%540, %541) /* ty=Tensor[(2, 2, 6), uint8] */;
  (%542, %543)
}

def @func_2617(%var_2611: Tensor[(2, 9, 16), float32]) -> (Tensor[(120), uint64], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) {
  %544 = cast(meta[relay.Constant][18] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %545 = reshape(%544, newshape=[120]) /* ty=Tensor[(120), uint64] */;
  %546 = @func_2416(%545) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(10, 4, 3), bool], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) */;
  %547 = @func_1081() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %548 = %547.0;
  %549 = cast(%var_2611, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%548, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %553 = %546.2;
  %554 = logical_or(%551, %552) /* ty=Tensor[(2, 9, 16), bool] */;
  (%553, meta[relay.Constant][18] /* ty=Tensor[(120), uint64] */, %554)
}

def @func_3921() -> Tensor[(2, 9, 16), float32] {
  %555 = @func_399() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %555.1
}

def @func_5362() -> (Tensor[(2, 9, 16), float32],) {
  %556 = @func_2521() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %557 = %556.0;
  (%557,)
}

def @main(%var_6922: uint16, %var_6923: Tensor[(16, 12, 7), uint16]) -> (Tensor[(7, 6, 15), bool], Tensor[(630), bool], Tensor[(16, 12, 7), float32]) {
  %558 = cast(meta[relay.Constant][19] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %559 = reshape(%558, newshape=[630, 1]) /* ty=Tensor[(630, 1), bool] */;
  %560 = @func_1596(%559) /* ty=(Tensor[(7, 6, 15), bool], Tensor[(630, 1), bool], Tensor[(2, 9, 16), bool]) */;
  %561 = cast(%var_6922, dtype="bool") /* ty=bool */;
  %562 = cast(%var_6923, dtype="bool") /* ty=Tensor[(16, 12, 7), bool] */;
  %563 = less(%561, %562) /* ty=Tensor[(16, 12, 7), bool] */;
  %564 = cast(%var_6923, dtype="float32") /* ty=Tensor[(16, 12, 7), float32] */;
  %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%563, dtype="float32") /* ty=Tensor[(16, 12, 7), float32] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %568 = %560.0;
  %569 = divide(%566, %567) /* ty=Tensor[(16, 12, 7), float32] */;
  (%568, meta[relay.Constant][19] /* ty=Tensor[(630), bool] */, %569)
}

def @func_555(%var_528: Tensor[(10, 7, 4), float64]) -> (Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %570 = cast(%var_528, dtype="float64") /* ty=Tensor[(10, 7, 4), float64] */;
  %571 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %572 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %573 = acos(%570) /* ty=Tensor[(10, 7, 4), float64] */;
  %574 = %571.0;
  %575 = %572.0;
  (%573, %574, %575)
}

def @func_5966(%var_5963: Tensor[(539), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 11, 7), bool], Tensor[(539), float64]) {
  %576 = @func_4536() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %577 = cast(%var_5963, dtype="float64") /* ty=Tensor[(539), float64] */;
  %578 = reshape(%577, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float64] */;
  %579 = @func_3058(%578) /* ty=(Tensor[(7, 11, 7), bool], Tensor[(2, 9, 16), float32]) */;
  %580 = %576.0;
  %581 = %579.0;
  (%580, %581, %var_5963)
}

def @func_4290() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) {
  %582 = @func_399() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %583 = %582.1;
  %584 = cast(%583, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %585 = reshape(%584, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %586 = @func_2617(%585) /* ty=(Tensor[(120), uint64], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) */;
  %587 = @func_3116() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %588 = %586.2;
  %589 = %587.0;
  (%583, %588, %589)
}

def @func_3305() -> Tensor[(2, 9, 16), int8] {
  %590 = @func_2946() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) */;
  %590.1
}

def @func_3116() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) {
  %591 = @func_626() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %592 = %591.0;
  %593 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  (%592, %593)
}

def @func_4536() -> (Tensor[(2, 9, 16), float32],) {
  %594 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %595 = %594.0;
  (%595,)
}

def @func_4465() -> Tensor[(2, 9, 16), float64] {
  @func_1807() /* ty=Tensor[(2, 9, 16), float64] */
}

def @func_1418() -> (Tensor[(2, 9, 16), float32],) {
  %596 = @func_1346() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %597 = %596.1;
  (%597,)
}

def @func_227() -> Tensor[(2, 9, 16), float32] {
  %598 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 9, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %599 = asinh(%598) /* ty=Tensor[(2, 9, 16), float32] */;
  %600 = cast(%599, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  log10(%600) /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_1464() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %601 = @func_510() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */;
  %602 = @func_1236() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %603 = @func_1081() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %604 = %603.0;
  %605 = cast(%604, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %606 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %607 = %601.0;
  %608 = %602.0;
  %609 = log(%605) /* ty=Tensor[(2, 9, 16), float32] */;
  %610 = %606.0;
  (%607, %608, %609, %610)
}

def @func_1012() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %611 = @func_626() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %612 = %611.0;
  %613 = cast(%612, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %614 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %615 = erf(%613) /* ty=Tensor[(2, 9, 16), float32] */;
  %616 = %614.2;
  (%615, %616)
}

def @func_2570(%var_2563: Tensor[(6, 3, 16), float64]) -> Tensor[(6, 3, 16), float64] {
  %617 = cast(%var_2563, dtype="float64") /* ty=Tensor[(6, 3, 16), float64] */;
  sqrt(%617) /* ty=Tensor[(6, 3, 16), float64] */
}

def @func_2694(%var_2687: Tensor[(2, 9, 16), float32]) -> Tensor[(2, 9, 16), float64] {
  %618 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %619 = %618.1;
  %620 = cast(%var_2687, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %621 = shape_of(%619, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%619, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%622, %623) /* ty=Tensor[(2, 9, 16), float64] */
}

def @func_3332() -> (Tensor[(2, 9, 16), float32],) {
  %624 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %625 = %624.0;
  (%625,)
}

def @func_1346() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) {
  %626 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %627 = %626.1;
  %628 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  (%627, %628)
}

def @func_3404() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %629 = @func_1887() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %630 = @func_2521() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %631 = %629.0;
  %632 = %630.0;
  %633 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  (%631, %632, %633)
}

def @func_6621(%var_6612: Tensor[(441), float64], %var_6617: Tensor[(441), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(441), bool]) {
  %634 = @func_2946() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) */;
  %635 = @func_1065() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) */;
  %636 = cast(%var_6612, dtype="float64") /* ty=Tensor[(441), float64] */;
  %637 = reshape(%636, newshape=[7, 9, 7]) /* ty=Tensor[(7, 9, 7), float64] */;
  %638 = @func_2513(%637) /* ty=(Tensor[(7, 9, 7), float64], Tensor[(7, 9, 7), float32], Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %639 = cast(%var_6617, dtype="bool") /* ty=Tensor[(441), bool] */;
  %640 = shape_of(%var_6612, dtype="int32") /* ty=Tensor[(1), int32] */;
  %641 = cast(%var_6612, dtype="bool") /* ty=Tensor[(441), bool] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?), bool] */;
  %643 = %634.0;
  %644 = %635.0;
  %645 = %638.5;
  %646 = less_equal(%641, %642) /* ty=Tensor[(441), bool] */;
  (%643, %644, %645, %646)
}

def @func_2090(%var_2048: Tensor[(11, 10, 7), float32]) -> (Tensor[(11, 10, 7), float32], Tensor[(2, 9, 16), float32]) {
  %647 = cast(%var_2048, dtype="float32") /* ty=Tensor[(11, 10, 7), float32] */;
  %648 = erf(%647) /* ty=Tensor[(11, 10, 7), float32] */;
  %649 = cast(%648, dtype="float64") /* ty=Tensor[(11, 10, 7), float64] */;
  %650 = cos(%649) /* ty=Tensor[(11, 10, 7), float64] */;
  %651 = cast(%650, dtype="float32") /* ty=Tensor[(11, 10, 7), float32] */;
  %652 = @func_701() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(280), float64]) */;
  %653 = sin(%651) /* ty=Tensor[(11, 10, 7), float32] */;
  %654 = %652.1;
  (%653, %654)
}

def @func_2238() -> (Tensor[(2, 9, 16), float32],) {
  %655 = @func_1919() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %656 = %655.0;
  (%656,)
}

def @func_6254() -> (Tensor[(2, 9, 16), uint8],) {
  %657 = @func_3254() /* ty=Tensor[(2, 9, 16), uint8] */;
  %658 = @func_3856() /* ty=Tensor[(2, 9, 16), float32] */;
  %659 = cast(%658, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %660 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%657, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %663 = subtract(%661, %662) /* ty=Tensor[(2, 9, 16), uint8] */;
  (%663,)
}

def @func_2646() -> Tensor[(2, 9, 16), float32] {
  %664 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %664.1
}

def @func_6224(%var_6210: bool, %var_6211: Tensor[(1, 7, 16), bool]) -> Tensor[(1, 7, 16), bool] {
  %665 = cast(%var_6210, dtype="bool") /* ty=bool */;
  %666 = cast(%var_6211, dtype="bool") /* ty=Tensor[(1, 7, 16), bool] */;
  logical_or(%665, %666) /* ty=Tensor[(1, 7, 16), bool] */
}

def @func_4720() -> (Tensor[(2, 9, 16), float64],) {
  %667 = @func_3116() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %668 = %667.0;
  (%668,)
}

def @func_5659() -> (Tensor[(2, 9, 16), float32],) {
  %669 = @func_3159() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %670 = %669.0;
  (%670,)
}

def @func_2030() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float32]) {
  %671 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %672 = %671.0;
  %673 = cast(%672, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %674 = reshape(%673, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), uint8] */;
  %675 = @func_2003(%674) /* ty=(Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(4, 16, 14), int64], Tensor[(896), int64]) */;
  %676 = @func_1760() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %677 = %675.0;
  %678 = %676.0;
  (%672, %677, %678)
}

def @func_5189(%var_5180: Tensor[(15, 11, 2), float32], %var_5181: Tensor[(15, 11, 2), float32]) -> (Tensor[(15, 11, 2), float32], Tensor[(2, 9, 16), float32]) {
  %679 = cast(%var_5181, dtype="float32") /* ty=Tensor[(15, 11, 2), float32] */;
  %680 = shape_of(%var_5180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%var_5180, dtype="float32") /* ty=Tensor[(15, 11, 2), float32] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %683 = @func_1887() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %684 = mod(%681, %682) /* ty=Tensor[(15, 11, 2), float32] */;
  %685 = %683.0;
  (%684, %685)
}

def @func_510() -> (Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) {
  %686 = @func_429() /* ty=Tensor[(2, 9, 16), float32] */;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %688 = cast(meta[relay.Constant][21] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %689 = reshape(%688, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %690 = acosh(%687) /* ty=Tensor[(2, 9, 16), float64] */;
  %691 = @func_441(%689) /* ty=Tensor[(15, 7, 13), float64] */;
  (%690, %691, meta[relay.Constant][21] /* ty=Tensor[(1365), float64] */)
}

def @func_3254() -> Tensor[(2, 9, 16), uint8] {
  %692 = @func_1941() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) */;
  %692.0
}

def @func_6415(%var_6412: Tensor[(7, 4, 16), float64]) -> Tensor[(7, 4, 16), float64] {
  %693 = cast(%var_6412, dtype="float64") /* ty=Tensor[(7, 4, 16), float64] */;
  sigmoid(%693) /* ty=Tensor[(7, 4, 16), float64] */
}

def @func_5743(%var_5727: Tensor[(15, 14, 12), float64]) -> (Tensor[(15, 14, 12), float64], Tensor[(2, 9, 16), float64], Tensor[(15, 14, 12), float64]) {
  %694 = cast(6.74208f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %695 = cast(%var_5727, dtype="float64") /* ty=Tensor[(15, 14, 12), float64] */;
  %696 = @func_5122() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %697 = cast(%var_5727, dtype="float64") /* ty=Tensor[(15, 14, 12), float64] */;
  %698 = power(%694, %695) /* ty=Tensor[(15, 14, 12), float64] */;
  %699 = %696.0;
  %700 = log(%697) /* ty=Tensor[(15, 14, 12), float64] */;
  (%698, %699, %700)
}

def @func_6425() -> Tensor[(2, 9, 16), float32] {
  %701 = @func_4536() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %701.0
}

def @func_1583() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), int16]) {
  %702 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  %703 = cast(%702, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %704 = reshape(%703, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %705 = @func_863(%704) /* ty=(Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) */;
  %706 = cast(%702, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %707 = reshape(%706, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %708 = @func_821(%707) /* ty=(Tensor[(2, 9, 16), bool],) */;
  %709 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %710 = %709.1;
  %711 = cast(%710, dtype="int16") /* ty=Tensor[(2, 9, 16), int16] */;
  %712 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%702, dtype="int16") /* ty=Tensor[(2, 9, 16), int16] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %715 = %705.2;
  %716 = %708.0;
  %717 = logical_xor(%713, %714) /* ty=Tensor[(2, 9, 16), int16] */;
  (%715, %716, %717)
}

def @func_1324() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) {
  %718 = @func_635() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %719 = @func_429() /* ty=Tensor[(2, 9, 16), float32] */;
  %720 = cast(%719, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %721 = atanh(%720) /* ty=Tensor[(2, 9, 16), float32] */;
  %722 = cast(%721, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %723 = reshape(%722, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %724 = @func_863(%723) /* ty=(Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) */;
  %725 = %718.0;
  %726 = %724.0;
  (%725, %721, %726)
}

def @func_5164(%var_5156: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint16]) {
  %727 = @func_1919() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %728 = @func_1643() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
  %729 = %728.1;
  %730 = cast(%var_5156, dtype="uint16") /* ty=Tensor[(2, 9, 16), uint16] */;
  %731 = shape_of(%729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(%729, dtype="uint16") /* ty=Tensor[(2, 9, 16), uint16] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %734 = %727.0;
  %735 = add(%732, %733) /* ty=Tensor[(2, 9, 16), uint16] */;
  (%734, %735)
}

def @func_5479() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) {
  %736 = @func_3239() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
  %737 = @func_635() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %738 = %736.1;
  %739 = @func_1807() /* ty=Tensor[(2, 9, 16), float64] */;
  %740 = %737.0;
  (%738, %739, %740)
}

def @func_1596(%var_1590: Tensor[(630, 1), bool]) -> (Tensor[(7, 6, 15), bool], Tensor[(630, 1), bool], Tensor[(2, 9, 16), bool]) {
  %741 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %742 = cast(%var_1590, dtype="bool") /* ty=Tensor[(630, 1), bool] */;
  %743 = reshape(%741, newshape=[]) /* ty=bool */;
  %744 = reshape(%742, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), bool] */;
  %745 = @func_38(%743, %744) /* ty=(Tensor[(7, 6, 15), bool],) */;
  %746 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %747 = %746.0;
  %748 = cast(%747, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %749 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %750 = %745.0;
  %751 = less(%748, %749) /* ty=Tensor[(2, 9, 16), bool] */;
  (%750, %var_1590, %751)
}

def @func_209(%var_203: Tensor[(2, 15, 6), float64]) -> Tensor[(2, 15, 6), float64] {
  %752 = cast(%var_203, dtype="float64") /* ty=Tensor[(2, 15, 6), float64] */;
  %753 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(2, 15, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 15, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 15, 6), float64] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  maximum(%754, %755) /* ty=Tensor[(2, 15, 6), float64] */
}

def @func_3058(%var_3029: Tensor[(7, 11, 7), float64]) -> (Tensor[(7, 11, 7), bool], Tensor[(2, 9, 16), float32]) {
  %756 = cast(%var_3029, dtype="float64") /* ty=Tensor[(7, 11, 7), float64] */;
  %757 = atan(%756) /* ty=Tensor[(7, 11, 7), float64] */;
  %758 = cast(%757, dtype="float64") /* ty=Tensor[(7, 11, 7), float64] */;
  %759 = sin(%758) /* ty=Tensor[(7, 11, 7), float64] */;
  %760 = cast(%757, dtype="uint64") /* ty=Tensor[(7, 11, 7), uint64] */;
  %761 = shape_of(%759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%759, dtype="uint64") /* ty=Tensor[(7, 11, 7), uint64] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %764 = left_shift(%762, %763) /* ty=Tensor[(7, 11, 7), uint64] */;
  %765 = cast(%764, dtype="bool") /* ty=Tensor[(7, 11, 7), bool] */;
  %766 = shape_of(%757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%757, dtype="bool") /* ty=Tensor[(7, 11, 7), bool] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %769 = @func_1728() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %770 = greater_equal(%767, %768) /* ty=Tensor[(7, 11, 7), bool] */;
  %771 = %769.0;
  (%770, %771)
}

def @func_5528(%var_5519: Tensor[(14, 16, 1), float64]) -> (Tensor[(14, 16, ?), int16], Tensor[(2, 9, 16), float32]) {
  %772 = cast(%var_5519, dtype="float64") /* ty=Tensor[(14, 16, 1), float64] */;
  %773 = cosh(%772) /* ty=Tensor[(14, 16, 1), float64] */;
  %774 = cast(%var_5519, dtype="int16") /* ty=Tensor[(14, 16, 1), int16] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%773, dtype="int16") /* ty=Tensor[(14, 16, 1), int16] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %778 = @func_4290() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) */;
  %779 = bitwise_and(%776, %777) /* ty=Tensor[(14, 16, ?), int16] */;
  %780 = %778.0;
  (%779, %780)
}

def @func_3856() -> Tensor[(2, 9, 16), float32] {
  %781 = @func_635() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %781.0
}

def @func_6669() -> (Tensor[(2, 9, 16), float32],) {
  %782 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %783 = %782.1;
  (%783,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2003(%var_1977: Tensor[(2, 9, 16), uint8]) -> (Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(4, 16, 14), int64], Tensor[(896), int64]) {
  %0 = @func_1395() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32]) */;
  %1 = %0.0;
  %2 = cast(%var_1977, dtype="int8") /* ty=Tensor[(2, 9, 16), int8] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="int8") /* ty=Tensor[(2, 9, 16), int8] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %6 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %8 = reshape(%7, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float64] */;
  %9 = @func_555(%8) /* ty=(Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(896), int64] */, dtype="int64") /* ty=Tensor[(896), int64] */;
  %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(896), int64] */, dtype="int64") /* ty=Tensor[(896), int64] */;
  %12 = reshape(%10, newshape=[4, 16, 14]) /* ty=Tensor[(4, 16, 14), int64] */;
  %13 = reshape(%11, newshape=[4, 16, 14]) /* ty=Tensor[(4, 16, 14), int64] */;
  %14 = @func_1197(%12, %13) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(4, 16, 14), int64]) */;
  %15 = maximum(%4, %5) /* ty=Tensor[(2, 9, 16), int8] */;
  %16 = %6.1;
  %17 = %9.1;
  %18 = %14.1;
  (%15, %16, %17, meta[relay.Constant][0] /* ty=Tensor[(280), float64] */, %18, meta[relay.Constant][1] /* ty=Tensor[(896), int64] */)
}

def @func_6671() -> (Tensor[(2, 9, 16), float32],) {
  @func_6669() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_1151(%var_1149: Tensor[(10, 4, 3), uint64], %var_1150: Tensor[(10, 4, 3), uint64]) -> (Tensor[(10, 4, 3), bool], Tensor[(10, 4, 3), bool]) {
  %29 = fn (%var_1108: Tensor[(10, 4, 3), uint64], %var_1116: Tensor[(10, 4, 3), uint64]) -> (Tensor[(10, 4, 3), bool], Tensor[(10, 4, 3), bool]) {
    %19 = cast(%var_1108, dtype="bool") /* ty=Tensor[(10, 4, 3), bool] */;
    %20 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(10, 4, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %21 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 4, 3), uint64] */, dtype="bool") /* ty=Tensor[(10, 4, 3), bool] */;
    %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %23 = cast(%var_1116, dtype="bool") /* ty=Tensor[(10, 4, 3), bool] */;
    %24 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(10, 4, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 4, 3), uint64] */, dtype="bool") /* ty=Tensor[(10, 4, 3), bool] */;
    %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %27 = greater(%21, %22) /* ty=Tensor[(10, 4, 3), bool] */;
    %28 = greater_equal(%25, %26) /* ty=Tensor[(10, 4, 3), bool] */;
    (%27, %28)
  };
  %29(%var_1149, %var_1150) /* ty=(Tensor[(10, 4, 3), bool], Tensor[(10, 4, 3), bool]) */
}

def @func_1013() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %36 = fn () -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
    %30 = @func_626() /* ty=(Tensor[(2, 9, 16), float64],) */;
    %31 = %30.0;
    %32 = cast(%31, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
    %33 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
    %34 = erf(%32) /* ty=Tensor[(2, 9, 16), float32] */;
    %35 = %33.2;
    (%34, %35)
  };
  %36() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_3333() -> (Tensor[(2, 9, 16), float32],) {
  %39 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %37 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %38 = %37.0;
    (%38,)
  };
  %39() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_2030() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float32]) {
  %40 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %41 = %40.0;
  %42 = cast(%41, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %43 = reshape(%42, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), uint8] */;
  %44 = @func_2003(%43) /* ty=(Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(4, 16, 14), int64], Tensor[(896), int64]) */;
  %45 = @func_1760() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %46 = %44.0;
  %47 = %45.0;
  (%41, %46, %47)
}

def @func_3405() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %53 = fn () -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
    %48 = @func_1887() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %49 = @func_2521() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %50 = %48.0;
    %51 = %49.0;
    %52 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
    (%50, %51, %52)
  };
  %53() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_1761() -> (Tensor[(2, 9, 16), float32],) {
  %56 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %54 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
    %55 = %54.1;
    (%55,)
  };
  %56() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_3528(%var_3526: Tensor[(7, 4, 2), int16], %var_3527: Tensor[(7, 4, 2), int16]) -> (Tensor[(7, 4, 2), int16], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %68 = fn (%var_3484: Tensor[(7, 4, 2), int16], %var_3485: Tensor[(7, 4, 2), int16]) -> (Tensor[(7, 4, 2), int16], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
    %57 = cast(%var_3485, dtype="int16") /* ty=Tensor[(7, 4, 2), int16] */;
    %58 = shape_of(%var_3484, dtype="int32") /* ty=Tensor[(3), int32] */;
    %59 = cast(%var_3484, dtype="int16") /* ty=Tensor[(7, 4, 2), int16] */;
    %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %61 = @func_2238() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %62 = @func_2238() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %63 = @func_1643() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
    %64 = bitwise_xor(%59, %60) /* ty=Tensor[(7, 4, 2), int16] */;
    %65 = %61.0;
    %66 = %62.0;
    %67 = %63.1;
    (%64, %65, %66, %67)
  };
  %68(%var_3526, %var_3527) /* ty=(Tensor[(7, 4, 2), int16], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_5690(%var_5682: Tensor[(630), bool]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 6, 15), bool], bool, Tensor[(630), bool]) {
  %69 = @func_4359() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %70 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %71 = cast(%var_5682, dtype="bool") /* ty=Tensor[(630), bool] */;
  %72 = reshape(%70, newshape=[]) /* ty=bool */;
  %73 = reshape(%71, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), bool] */;
  %74 = @func_38(%72, %73) /* ty=(Tensor[(7, 6, 15), bool],) */;
  %75 = %69.1;
  %76 = %74.0;
  (%75, %76, False /* ty=bool */, %var_5682)
}

def @func_475() -> Tensor[(2, 9, 16), float32] {
  @func_473() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_42(%var_40: bool, %var_41: Tensor[(7, 6, 15), bool]) -> (Tensor[(7, 6, 15), bool],) {
  @func_38(%var_40, %var_41) /* ty=(Tensor[(7, 6, 15), bool],) */
}

def @func_2331(%var_2329: Tensor[(1, 12, 10), uint8], %var_2330: Tensor[(10, 12, 10), uint8]) -> (Tensor[(10, 12, 10), bool], Tensor[(10, 12, 10), float32]) {
  %82 = fn (%var_2316: Tensor[(1, 12, 10), uint8], %var_2317: Tensor[(10, 12, 10), uint8]) -> (Tensor[(10, 12, 10), bool], Tensor[(10, 12, 10), float32]) {
    %77 = cast(%var_2316, dtype="bool") /* ty=Tensor[(1, 12, 10), bool] */;
    %78 = cast(%var_2317, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
    %79 = cast(%var_2317, dtype="float32") /* ty=Tensor[(10, 12, 10), float32] */;
    %80 = not_equal(%77, %78) /* ty=Tensor[(10, 12, 10), bool] */;
    %81 = asin(%79) /* ty=Tensor[(10, 12, 10), float32] */;
    (%80, %81)
  };
  %82(%var_2329, %var_2330) /* ty=(Tensor[(10, 12, 10), bool], Tensor[(10, 12, 10), float32]) */
}

def @func_4448(%var_4445: Tensor[(3, 15, 14), int16], %var_4446: Tensor[(3, 15, 14), int16], %var_4447: Tensor[(288, 1), float64]) -> (Tensor[(3, 15, 14), bool], Tensor[(6, 3, 16), float64], Tensor[(288, 1), float64]) {
  @func_4443(%var_4445, %var_4446, %var_4447) /* ty=(Tensor[(3, 15, 14), bool], Tensor[(6, 3, 16), float64], Tensor[(288, 1), float64]) */
}

def @func_6625(%var_6623: Tensor[(441), float64], %var_6624: Tensor[(441), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(441), bool]) {
  @func_6621(%var_6623, %var_6624) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(441), bool]) */
}

def @func_702() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(280), float64]) {
  %89 = fn () -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(280), float64]) {
    %83 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
    %84 = cast(meta[relay.Constant][3] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %85 = reshape(%84, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float64] */;
    %86 = @func_555(%85) /* ty=(Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
    %87 = %83.1;
    %88 = %86.1;
    (%87, %88, meta[relay.Constant][3] /* ty=Tensor[(280), float64] */)
  };
  %89() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(280), float64]) */
}

def @func_2032() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float32]) {
  @func_2030() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float32]) */
}

def @func_229() -> Tensor[(2, 9, 16), float32] {
  @func_227() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_823(%var_822: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), bool],) {
  %96 = fn (%var_813: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), bool],) {
    %90 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
    %91 = cast(%var_813, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
    %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
    %93 = cast(%90, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
    %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %95 = not_equal(%93, %94) /* ty=Tensor[(2, 9, 16), bool] */;
    (%95,)
  };
  %96(%var_822) /* ty=(Tensor[(2, 9, 16), bool],) */
}

def @func_1809() -> Tensor[(2, 9, 16), float64] {
  @func_1807() /* ty=Tensor[(2, 9, 16), float64] */
}

def @func_3289() -> Tensor[(2, 9, 16), float32] {
  %97 = @func_1494() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %97.0
}

def @func_6418(%var_6416: Tensor[(7, 4, 16), float64]) -> Tensor[(7, 4, 16), float64] {
  @func_6415(%var_6416) /* ty=Tensor[(7, 4, 16), float64] */
}

def @func_5189(%var_5180: Tensor[(15, 11, 2), float32], %var_5181: Tensor[(15, 11, 2), float32]) -> (Tensor[(15, 11, 2), float32], Tensor[(2, 9, 16), float32]) {
  %98 = cast(%var_5181, dtype="float32") /* ty=Tensor[(15, 11, 2), float32] */;
  %99 = shape_of(%var_5180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%var_5180, dtype="float32") /* ty=Tensor[(15, 11, 2), float32] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %102 = @func_1887() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %103 = mod(%100, %101) /* ty=Tensor[(15, 11, 2), float32] */;
  %104 = %102.0;
  (%103, %104)
}

def @func_5660() -> (Tensor[(2, 9, 16), float32],) {
  %107 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %105 = @func_3159() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %106 = %105.0;
    (%106,)
  };
  %107() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_6762(%var_6683: Tensor[(6, 6, 9), float64], %var_6718: Tensor[(6, 6, 9), float64], %var_6756: Tensor[(1365), float64]) -> (Tensor[(2, 9, 16), float64], Tensor[(6, 6, 9), uint16], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), uint8], Tensor[(7, 6, 15), bool], bool, Tensor[(630), bool], Tensor[(1365), float64], Tensor[(1365), float64], Tensor[(7, 6, 15), bool]) {
  %108 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %109 = cast(%var_6683, dtype="float64") /* ty=Tensor[(6, 6, 9), float64] */;
  %110 = erf(%109) /* ty=Tensor[(6, 6, 9), float64] */;
  %111 = cast(%var_6718, dtype="uint16") /* ty=Tensor[(6, 6, 9), uint16] */;
  %112 = shape_of(%110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%110, dtype="uint16") /* ty=Tensor[(6, 6, 9), uint16] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %115 = @func_3254() /* ty=Tensor[(2, 9, 16), uint8] */;
  %116 = @func_1418() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %117 = %116.0;
  %118 = cast(%117, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %119 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%115, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %122 = @func_1941() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) */;
  %123 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %124 = cast(meta[relay.Constant][4] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %125 = reshape(%123, newshape=[]) /* ty=bool */;
  %126 = reshape(%124, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), bool] */;
  %127 = @func_38(%125, %126) /* ty=(Tensor[(7, 6, 15), bool],) */;
  %128 = cast(%var_6756, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %129 = reshape(%128, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
  %130 = @func_6454(%129) /* ty=(Tensor[(2, 9, 16), int8], Tensor[(1365), bool], Tensor[(1365), float64], Tensor[(2, 9, 16), float32]) */;
  %131 = cast(meta[relay.Constant][4] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %132 = reshape(%131, newshape=[630]) /* ty=Tensor[(630), bool] */;
  %133 = @func_5690(%132) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(7, 6, 15), bool], bool, Tensor[(630), bool]) */;
  %134 = %108.1;
  %135 = right_shift(%113, %114) /* ty=Tensor[(6, 6, 9), uint16] */;
  %136 = divide(%120, %121) /* ty=Tensor[(2, 9, 16), float64] */;
  %137 = %122.0;
  %138 = %127.0;
  %139 = %130.2;
  %140 = %133.1;
  (%134, %135, %136, %137, %138, True /* ty=bool */, meta[relay.Constant][4] /* ty=Tensor[(630), bool] */, %139, %var_6756, %140)
}

def @func_431() -> Tensor[(2, 9, 16), float32] {
  @func_429() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_473() -> Tensor[(2, 9, 16), float32] {
  @func_429() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_2196() -> (Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), bool], Tensor[(288), float32], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) {
  %150 = fn () -> (Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), bool], Tensor[(288), float32], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) {
    %141 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
    %142 = cast(meta[relay.Constant][6] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %143 = reshape(%142, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
    %144 = @func_821(%143) /* ty=(Tensor[(2, 9, 16), bool],) */;
    %145 = cast(meta[relay.Constant][7] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %146 = reshape(%145, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
    %147 = tan(%141) /* ty=Tensor[(2, 10, 12), float32] */;
    %148 = %144.0;
    %149 = @func_441(%146) /* ty=Tensor[(15, 7, 13), float64] */;
    (%147, %148, meta[relay.Constant][6] /* ty=Tensor[(288), float32] */, %149, meta[relay.Constant][7] /* ty=Tensor[(1365), float64] */)
  };
  %150() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), bool], Tensor[(288), float32], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */
}

def @func_4677(%var_4650: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) {
  %151 = @func_429() /* ty=Tensor[(2, 9, 16), float32] */;
  %152 = cast(%151, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %153 = reshape(%152, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %154 = @func_2617(%153) /* ty=(Tensor[(120), uint64], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) */;
  %155 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  %156 = cast(%var_4650, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %157 = shape_of(%155, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%155, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %160 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %161 = %154.2;
  %162 = logical_and(%158, %159) /* ty=Tensor[(2, 9, 16), bool] */;
  %163 = %160.1;
  (%151, %161, %162, %163)
}

def @func_3307() -> Tensor[(2, 9, 16), int8] {
  @func_3305() /* ty=Tensor[(2, 9, 16), int8] */
}

def @func_635() -> (Tensor[(2, 9, 16), float32],) {
  %164 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %165 = %164.0;
  (%165,)
}

def @func_6340() -> (Tensor[(2, 9, 16), float64], Tensor[(441), float64], Tensor[(2, 13, 11), bool], Tensor[(286), uint64], Tensor[(2, 10, 12), float32], Tensor[(539), float64], Tensor[(11, 49), float64]) {
  @func_6338() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(441), float64], Tensor[(2, 13, 11), bool], Tensor[(286), uint64], Tensor[(2, 10, 12), float32], Tensor[(539), float64], Tensor[(11, 49), float64]) */
}

def @func_1496() -> (Tensor[(2, 9, 16), float32],) {
  @func_1494() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_3075(%var_3068: Tensor[(12, 9, 6), uint64], %var_3069: Tensor[(12, 9, 6), uint64]) -> (Tensor[(12, 9, 6), uint64], Tensor[(2, 9, 16), float64]) {
  %166 = cast(%var_3069, dtype="uint64") /* ty=Tensor[(12, 9, 6), uint64] */;
  %167 = shape_of(%var_3068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%var_3068, dtype="uint64") /* ty=Tensor[(12, 9, 6), uint64] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %170 = @func_626() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %171 = maximum(%168, %169) /* ty=Tensor[(12, 9, 6), uint64] */;
  %172 = %170.0;
  (%171, %172)
}

def @func_6062(%var_6044: Tensor[(539, 1), float64]) -> (Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32], Tensor[(539, 1), float64], Tensor[(2, 9, 16), float32]) {
  %173 = @func_5479() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %174 = %173.1;
  %175 = @func_4290() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) */;
  %176 = %175.0;
  %177 = cast(%176, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %178 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%174, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %181 = cast(%var_6044, dtype="float64") /* ty=Tensor[(539, 1), float64] */;
  %182 = reshape(%181, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float64] */;
  %183 = @func_3058(%182) /* ty=(Tensor[(7, 11, 7), bool], Tensor[(2, 9, 16), float32]) */;
  %184 = greater_equal(%179, %180) /* ty=Tensor[(2, 9, 16), bool] */;
  %185 = %183.1;
  %186 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  (%184, %185, %var_6044, %186)
}

def @func_1943() -> (Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) {
  @func_1941() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) */
}

def @func_279() -> (Tensor[(2, 9, 16), float32],) {
  %188 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %187 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
    (%187,)
  };
  %188() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_3254() -> Tensor[(2, 9, 16), uint8] {
  %189 = @func_1941() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) */;
  %189.0
}

def @func_1466() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  @func_1464() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_3061(%var_3059: Tensor[(7, 11, 7), float64]) -> (Tensor[(7, 11, 7), bool], Tensor[(2, 9, 16), float32]) {
  @func_3058(%var_3059) /* ty=(Tensor[(7, 11, 7), bool], Tensor[(2, 9, 16), float32]) */
}

def @func_399() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %190 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %191 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %192 = %190.2;
  %193 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  %194 = %191.0;
  (%192, %193, %194)
}

def @func_5782() -> (Tensor[(2, 9, 16), float32],) {
  %195 = @func_399() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %196 = %195.1;
  (%196,)
}

def @func_3026() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) {
  %207 = fn () -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) {
    %197 = @func_2946() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) */;
    %198 = %197.0;
    %199 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
    %200 = %199.0;
    %201 = cast(%200, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
    %202 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
    %203 = cast(%198, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
    %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %205 = @func_429() /* ty=Tensor[(2, 9, 16), float32] */;
    %206 = less_equal(%203, %204) /* ty=Tensor[(2, 9, 16), bool] */;
    (%205, %206)
  };
  %207() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) */
}

def @func_2697(%var_2695: Tensor[(2, 9, 16), float32]) -> Tensor[(2, 9, 16), float64] {
  @func_2694(%var_2695) /* ty=Tensor[(2, 9, 16), float64] */
}

def @func_4186(%var_4184: Tensor[(630), bool]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(630), bool]) {
  @func_4183(%var_4184) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(630), bool]) */
}

def @func_3256() -> Tensor[(2, 9, 16), uint8] {
  @func_3254() /* ty=Tensor[(2, 9, 16), uint8] */
}

def @func_2419(%var_2417: Tensor[(120), uint64]) -> (Tensor[(2, 9, 16), float32], Tensor[(10, 4, 3), bool], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) {
  @func_2416(%var_2417) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(10, 4, 3), bool], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) */
}

def @func_5746(%var_5744: Tensor[(15, 14, 12), float64]) -> (Tensor[(15, 14, 12), float64], Tensor[(2, 9, 16), float64], Tensor[(15, 14, 12), float64]) {
  @func_5743(%var_5744) /* ty=(Tensor[(15, 14, 12), float64], Tensor[(2, 9, 16), float64], Tensor[(15, 14, 12), float64]) */
}

def @func_1324() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) {
  %208 = @func_635() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %209 = @func_429() /* ty=Tensor[(2, 9, 16), float32] */;
  %210 = cast(%209, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %211 = atanh(%210) /* ty=Tensor[(2, 9, 16), float32] */;
  %212 = cast(%211, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %213 = reshape(%212, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %214 = @func_863(%213) /* ty=(Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) */;
  %215 = %208.0;
  %216 = %214.0;
  (%215, %211, %216)
}

def @func_4415(%var_4413: Tensor[(2, 13, 11), uint64], %var_4414: Tensor[(2, 13, 11), uint64]) -> Tensor[(2, 13, 11), bool] {
  @func_4411(%var_4413, %var_4414) /* ty=Tensor[(2, 13, 11), bool] */
}

def @func_227() -> Tensor[(2, 9, 16), float32] {
  %217 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 9, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %218 = asinh(%217) /* ty=Tensor[(2, 9, 16), float32] */;
  %219 = cast(%218, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  log10(%219) /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_3987() -> (Tensor[(2, 9, 16), float64],) {
  %220 = @func_1941() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) */;
  %221 = %220.1;
  (%221,)
}

def @func_4680(%var_4678: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) {
  @func_4677(%var_4678) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) */
}

def @func_3923() -> Tensor[(2, 9, 16), float32] {
  @func_3921() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_5164(%var_5156: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint16]) {
  %222 = @func_1919() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %223 = @func_1643() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
  %224 = %223.1;
  %225 = cast(%var_5156, dtype="uint16") /* ty=Tensor[(2, 9, 16), uint16] */;
  %226 = shape_of(%224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%224, dtype="uint16") /* ty=Tensor[(2, 9, 16), uint16] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %229 = %222.0;
  %230 = add(%227, %228) /* ty=Tensor[(2, 9, 16), uint16] */;
  (%229, %230)
}

def @func_4537() -> (Tensor[(2, 9, 16), float32],) {
  %233 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %231 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %232 = %231.0;
    (%232,)
  };
  %233() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_1066() -> (Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) {
  %249 = fn () -> (Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) {
    %234 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
    %235 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 9, 16), float32] */, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
    %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
    %237 = cast(%234, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
    %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %239 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 9, 16), float32] */, dtype="uint16") /* ty=Tensor[(2, 9, 16), uint16] */;
    %240 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
    %241 = cast(%234, dtype="uint16") /* ty=Tensor[(2, 9, 16), uint16] */;
    %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %243 = cast(%234, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
    %244 = asin(%243) /* ty=Tensor[(2, 9, 16), float64] */;
    %245 = cast(%244, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
    %246 = left_shift(%237, %238) /* ty=Tensor[(2, 9, 16), uint8] */;
    %247 = bitwise_xor(%241, %242) /* ty=Tensor[(2, 9, 16), uint16] */;
    %248 = sinh(%245) /* ty=Tensor[(2, 9, 16), float32] */;
    (%246, %247, %248)
  };
  %249() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) */
}

def @func_4290() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) {
  %250 = @func_399() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %251 = %250.1;
  %252 = cast(%251, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %253 = reshape(%252, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %254 = @func_2617(%253) /* ty=(Tensor[(120), uint64], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) */;
  %255 = @func_3116() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %256 = %254.2;
  %257 = %255.0;
  (%251, %256, %257)
}

def @func_1598(%var_1597: Tensor[(630, 1), bool]) -> (Tensor[(7, 6, 15), bool], Tensor[(630, 1), bool], Tensor[(2, 9, 16), bool]) {
  %269 = fn (%var_1590: Tensor[(630, 1), bool]) -> (Tensor[(7, 6, 15), bool], Tensor[(630, 1), bool], Tensor[(2, 9, 16), bool]) {
    %258 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %259 = cast(%var_1590, dtype="bool") /* ty=Tensor[(630, 1), bool] */;
    %260 = reshape(%258, newshape=[]) /* ty=bool */;
    %261 = reshape(%259, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), bool] */;
    %262 = @func_38(%260, %261) /* ty=(Tensor[(7, 6, 15), bool],) */;
    %263 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
    %264 = %263.0;
    %265 = cast(%264, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
    %266 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %267 = %262.0;
    %268 = less(%265, %266) /* ty=Tensor[(2, 9, 16), bool] */;
    (%267, %var_1590, %268)
  };
  %269(%var_1597) /* ty=(Tensor[(7, 6, 15), bool], Tensor[(630, 1), bool], Tensor[(2, 9, 16), bool]) */
}

def @func_1238() -> (Tensor[(2, 9, 16), float64],) {
  @func_1236() /* ty=(Tensor[(2, 9, 16), float64],) */
}

def @func_5479() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) {
  %270 = @func_3239() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
  %271 = @func_635() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %272 = %270.1;
  %273 = @func_1807() /* ty=Tensor[(2, 9, 16), float64] */;
  %274 = %271.0;
  (%272, %273, %274)
}

def @func_2450() -> Tensor[(1365), float64] {
  %283 = fn () -> Tensor[(1365), float64] {
    %275 = @func_510() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */;
    %276 = %275.2;
    %277 = cast(%276, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %278 = rsqrt(%277) /* ty=Tensor[(1365), float64] */;
    %279 = cast(%276, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %280 = shape_of(%278, dtype="int32") /* ty=Tensor[(1), int32] */;
    %281 = cast(%278, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?), float64] */;
    power(%281, %282) /* ty=Tensor[(1365), float64] */
  };
  %283() /* ty=Tensor[(1365), float64] */
}

def @func_2946() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) {
  %284 = @func_1728() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %285 = @func_2030() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float32]) */;
  %286 = %284.0;
  %287 = %285.1;
  (%286, %287)
}

def @func_637() -> (Tensor[(2, 9, 16), float32],) {
  @func_635() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_1395() -> (Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32]) {
  %288 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  %289 = @func_1065() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) */;
  %290 = %289.0;
  %291 = cast(%290, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %292 = shape_of(%288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%288, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %295 = @func_635() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %296 = bitwise_or(%293, %294) /* ty=Tensor[(2, 9, 16), uint8] */;
  %297 = %295.0;
  (%296, %297)
}

def @func_4466() -> Tensor[(2, 9, 16), float64] {
  %298 = fn () -> Tensor[(2, 9, 16), float64] {
    @func_1807() /* ty=Tensor[(2, 9, 16), float64] */
  };
  %298() /* ty=Tensor[(2, 9, 16), float64] */
}

def @func_5693(%var_5691: Tensor[(630), bool]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 6, 15), bool], bool, Tensor[(630), bool]) {
  @func_5690(%var_5691) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(7, 6, 15), bool], bool, Tensor[(630), bool]) */
}

def @func_5664() -> Tensor[(2, 9, 16), float32] {
  %299 = @func_1065() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) */;
  %299.2
}

def @func_5363() -> (Tensor[(2, 9, 16), float32],) {
  %302 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %300 = @func_2521() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %301 = %300.0;
    (%301,)
  };
  %302() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_6519(%var_6517: Tensor[(180), float64], %var_6518: Tensor[(630), bool]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 15, 6), float64], Tensor[(180), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), bool], Tensor[(630), bool]) {
  @func_6515(%var_6517, %var_6518) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 15, 6), float64], Tensor[(180), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), bool], Tensor[(630), bool]) */
}

def @func_1419() -> (Tensor[(2, 9, 16), float32],) {
  %305 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %303 = @func_1346() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
    %304 = %303.1;
    (%304,)
  };
  %305() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_6195(%var_6194: Tensor[(1365), float64]) -> Tensor[(1365), bool] {
  %312 = fn (%var_6184: Tensor[(1365), float64]) -> Tensor[(1365), bool] {
    %306 = @func_510() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */;
    %307 = %306.2;
    %308 = cast(%var_6184, dtype="bool") /* ty=Tensor[(1365), bool] */;
    %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(1), int32] */;
    %310 = cast(%307, dtype="bool") /* ty=Tensor[(1365), bool] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?), bool] */;
    greater(%310, %311) /* ty=Tensor[(1365), bool] */
  };
  %312(%var_6194) /* ty=Tensor[(1365), bool] */
}

def @func_6065(%var_6063: Tensor[(539, 1), float64]) -> (Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32], Tensor[(539, 1), float64], Tensor[(2, 9, 16), float32]) {
  @func_6062(%var_6063) /* ty=(Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32], Tensor[(539, 1), float64], Tensor[(2, 9, 16), float32]) */
}

def @func_2694(%var_2687: Tensor[(2, 9, 16), float32]) -> Tensor[(2, 9, 16), float64] {
  %313 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %314 = %313.1;
  %315 = cast(%var_2687, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %316 = shape_of(%314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(%314, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%317, %318) /* ty=Tensor[(2, 9, 16), float64] */
}

def @func_4359() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %319 = @func_1887() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %320 = @func_1919() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %321 = %319.0;
  %322 = %320.0;
  (%321, %322)
}

def @func_3079(%var_3077: Tensor[(12, 9, 6), uint64], %var_3078: Tensor[(12, 9, 6), uint64]) -> (Tensor[(12, 9, 6), uint64], Tensor[(2, 9, 16), float64]) {
  @func_3075(%var_3077, %var_3078) /* ty=(Tensor[(12, 9, 6), uint64], Tensor[(2, 9, 16), float64]) */
}

def @func_863(%var_842: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) {
  %323 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %324 = %323.0;
  %325 = cast(%var_842, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %326 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%324, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %329 = cast(%324, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %330 = shape_of(%var_842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%var_842, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %333 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %334 = greater(%327, %328) /* ty=Tensor[(2, 9, 16), bool] */;
  %335 = equal(%331, %332) /* ty=Tensor[(2, 9, 16), bool] */;
  %336 = %333.0;
  (%334, %335, %336)
}

def @func_4411(%var_4401: Tensor[(2, 13, 11), uint64], %var_4402: Tensor[(2, 13, 11), uint64]) -> Tensor[(2, 13, 11), bool] {
  %337 = cast(%var_4402, dtype="bool") /* ty=Tensor[(2, 13, 11), bool] */;
  %338 = shape_of(%var_4401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%var_4401, dtype="bool") /* ty=Tensor[(2, 13, 11), bool] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%339, %340) /* ty=Tensor[(2, 13, 11), bool] */
}

def @func_3989() -> (Tensor[(2, 9, 16), float64],) {
  @func_3987() /* ty=(Tensor[(2, 9, 16), float64],) */
}

def @func_38(%var_28: bool, %var_29: Tensor[(7, 6, 15), bool]) -> (Tensor[(7, 6, 15), bool],) {
  %341 = cast(%var_28, dtype="bool") /* ty=bool */;
  %342 = cast(%var_29, dtype="bool") /* ty=Tensor[(7, 6, 15), bool] */;
  %343 = logical_or(%341, %342) /* ty=Tensor[(7, 6, 15), bool] */;
  (%343,)
}

def @func_2828(%var_2823: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), float32],) {
  %344 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %345 = %344.0;
  %346 = cast(%var_2823, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %347 = shape_of(%345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%345, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %350 = mod(%348, %349) /* ty=Tensor[(2, 9, 16), float32] */;
  (%350,)
}

def @func_2272(%var_2270: Tensor[(10, 3, 5), float32]) -> (Tensor[(10, 3, 5), float32], Tensor[(2, 9, 16), float64]) {
  @func_2269(%var_2270) /* ty=(Tensor[(10, 3, 5), float32], Tensor[(2, 9, 16), float64]) */
}

def @func_866(%var_864: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) {
  @func_863(%var_864) /* ty=(Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) */
}

def @func_4443(%var_4427: Tensor[(3, 15, 14), int16], %var_4428: Tensor[(3, 15, 14), int16], %var_4438: Tensor[(288, 1), float64]) -> (Tensor[(3, 15, 14), bool], Tensor[(6, 3, 16), float64], Tensor[(288, 1), float64]) {
  %351 = cast(%var_4428, dtype="bool") /* ty=Tensor[(3, 15, 14), bool] */;
  %352 = shape_of(%var_4427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%var_4427, dtype="bool") /* ty=Tensor[(3, 15, 14), bool] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %355 = cast(%var_4438, dtype="float64") /* ty=Tensor[(288, 1), float64] */;
  %356 = reshape(%355, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float64] */;
  %357 = less_equal(%353, %354) /* ty=Tensor[(3, 15, 14), bool] */;
  %358 = @func_2570(%356) /* ty=Tensor[(6, 3, 16), float64] */;
  (%357, %358, %var_4438)
}

def @func_510() -> (Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) {
  %359 = @func_429() /* ty=Tensor[(2, 9, 16), float32] */;
  %360 = cast(%359, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %361 = cast(meta[relay.Constant][10] /* ty=Tensor[(1365), float64] */, dtype="float64") /* ty=Tensor[(1365), float64] */;
  %362 = reshape(%361, newshape=[15, 7, 13]) /* ty=Tensor[(15, 7, 13), float64] */;
  %363 = acosh(%360) /* ty=Tensor[(2, 9, 16), float64] */;
  %364 = @func_441(%362) /* ty=Tensor[(15, 7, 13), float64] */;
  (%363, %364, meta[relay.Constant][10] /* ty=Tensor[(1365), float64] */)
}

def @func_5530(%var_5529: Tensor[(14, 16, 1), float64]) -> (Tensor[(14, 16, ?), int16], Tensor[(2, 9, 16), float32]) {
  %374 = fn (%var_5519: Tensor[(14, 16, 1), float64]) -> (Tensor[(14, 16, ?), int16], Tensor[(2, 9, 16), float32]) {
    %365 = cast(%var_5519, dtype="float64") /* ty=Tensor[(14, 16, 1), float64] */;
    %366 = cosh(%365) /* ty=Tensor[(14, 16, 1), float64] */;
    %367 = cast(%var_5519, dtype="int16") /* ty=Tensor[(14, 16, 1), int16] */;
    %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
    %369 = cast(%366, dtype="int16") /* ty=Tensor[(14, 16, 1), int16] */;
    %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %371 = @func_4290() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) */;
    %372 = bitwise_and(%369, %370) /* ty=Tensor[(14, 16, ?), int16] */;
    %373 = %371.0;
    (%372, %373)
  };
  %374(%var_5529) /* ty=(Tensor[(14, 16, ?), int16], Tensor[(2, 9, 16), float32]) */
}

def @func_2522() -> (Tensor[(2, 9, 16), float32],) {
  %377 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %375 = @func_1728() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %376 = %375.0;
    (%376,)
  };
  %377() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_5229() -> Tensor[(2, 9, 16), float64] {
  @func_5227() /* ty=Tensor[(2, 9, 16), float64] */
}

def @func_3240() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) {
  %381 = fn () -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) {
    %378 = @func_1494() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %379 = %378.0;
    %380 = @func_1807() /* ty=Tensor[(2, 9, 16), float64] */;
    (%379, %380)
  };
  %381() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */
}

def @func_3777() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) {
  @func_3775() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */
}

def @func_4991() -> (Tensor[(6, 3, 16), float64], Tensor[(2, 9, 16), float32]) {
  @func_4989() /* ty=(Tensor[(6, 3, 16), float64], Tensor[(2, 9, 16), float32]) */
}

def @func_5969(%var_5967: Tensor[(539), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 11, 7), bool], Tensor[(539), float64]) {
  @func_5966(%var_5967) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(7, 11, 7), bool], Tensor[(539), float64]) */
}

def @func_5625(%var_5623: Tensor[(630), int16]) -> (Tensor[(2, 9, 16), float64], Tensor[(6, 3, 16), float64], Tensor[(630), int16]) {
  @func_5622(%var_5623) /* ty=(Tensor[(2, 9, 16), float64], Tensor[(6, 3, 16), float64], Tensor[(630), int16]) */
}

def @func_1585() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), int16]) {
  @func_1583() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), int16]) */
}

def @func_1197(%var_1179: Tensor[(4, 16, 14), int64], %var_1180: Tensor[(4, 16, 14), int64]) -> (Tensor[(2, 9, 16), float32], Tensor[(4, 16, 14), int64]) {
  %382 = cast(%var_1180, dtype="bool") /* ty=Tensor[(4, 16, 14), bool] */;
  %383 = shape_of(%var_1179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%var_1179, dtype="bool") /* ty=Tensor[(4, 16, 14), bool] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %386 = greater_equal(%384, %385) /* ty=Tensor[(4, 16, 14), bool] */;
  %387 = cast(%386, dtype="float64") /* ty=Tensor[(4, 16, 14), float64] */;
  %388 = sqrt(%387) /* ty=Tensor[(4, 16, 14), float64] */;
  %389 = cast(%var_1180, dtype="int64") /* ty=Tensor[(4, 16, 14), int64] */;
  %390 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%388, dtype="int64") /* ty=Tensor[(4, 16, 14), int64] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %393 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  %394 = subtract(%391, %392) /* ty=Tensor[(4, 16, 14), int64] */;
  (%393, %394)
}

def @func_378() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_1201(%var_1199: Tensor[(4, 16, 14), int64], %var_1200: Tensor[(4, 16, 14), int64]) -> (Tensor[(2, 9, 16), float32], Tensor[(4, 16, 14), int64]) {
  @func_1197(%var_1199, %var_1200) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(4, 16, 14), int64]) */
}

def @func_1887() -> (Tensor[(2, 9, 16), float32],) {
  %395 = @func_1464() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %396 = %395.2;
  (%396,)
}

def @func_2515(%var_2514: Tensor[(7, 9, 7), float64]) -> (Tensor[(7, 9, 7), float64], Tensor[(7, 9, 7), float32], Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %413 = fn (%var_2454: Tensor[(7, 9, 7), float64]) -> (Tensor[(7, 9, 7), float64], Tensor[(7, 9, 7), float32], Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
    %397 = cast(%var_2454, dtype="float64") /* ty=Tensor[(7, 9, 7), float64] */;
    %398 = cast(%var_2454, dtype="float64") /* ty=Tensor[(7, 9, 7), float64] */;
    %399 = erf(%398) /* ty=Tensor[(7, 9, 7), float64] */;
    %400 = cast(%399, dtype="float32") /* ty=Tensor[(7, 9, 7), float32] */;
    %401 = @func_2195() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), bool], Tensor[(288), float32], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */;
    %402 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %403 = @func_1941() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) */;
    %404 = @func_1324() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) */;
    %405 = @func_1760() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %406 = sqrt(%397) /* ty=Tensor[(7, 9, 7), float64] */;
    %407 = rsqrt(%400) /* ty=Tensor[(7, 9, 7), float32] */;
    %408 = %401.0;
    %409 = %402.0;
    %410 = %403.0;
    %411 = %404.1;
    %412 = %405.0;
    (%406, %407, %408, %409, %410, %411, %412)
  };
  %413(%var_2514) /* ty=(Tensor[(7, 9, 7), float64], Tensor[(7, 9, 7), float32], Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_1397() -> (Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32]) {
  @func_1395() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32]) */
}

def @func_6256() -> (Tensor[(2, 9, 16), uint8],) {
  @func_6254() /* ty=(Tensor[(2, 9, 16), uint8],) */
}

def @func_4989() -> (Tensor[(6, 3, 16), float64], Tensor[(2, 9, 16), float32]) {
  %414 = @func_1760() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %415 = %414.0;
  %416 = cast(%415, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %417 = cosh(%416) /* ty=Tensor[(2, 9, 16), float32] */;
  %418 = cast(%417, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %419 = reshape(%418, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float64] */;
  %420 = cast(%417, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %421 = @func_2570(%419) /* ty=Tensor[(6, 3, 16), float64] */;
  %422 = cos(%420) /* ty=Tensor[(2, 9, 16), float32] */;
  (%421, %422)
}

def @func_444(%var_442: Tensor[(15, 7, 13), float64]) -> Tensor[(15, 7, 13), float64] {
  @func_441(%var_442) /* ty=Tensor[(15, 7, 13), float64] */
}

def @func_376() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %423 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %424 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  %425 = %423.0;
  %426 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
  (%424, %425, %426)
}

def @func_5622(%var_5602: Tensor[(630), int16]) -> (Tensor[(2, 9, 16), float64], Tensor[(6, 3, 16), float64], Tensor[(630), int16]) {
  %427 = cast(%var_5602, dtype="int16") /* ty=Tensor[(630), int16] */;
  %428 = cast(%var_5602, dtype="int16") /* ty=Tensor[(630), int16] */;
  %429 = @func_1807() /* ty=Tensor[(2, 9, 16), float64] */;
  %430 = cast(%429, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %431 = reshape(%427, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), int16] */;
  %432 = reshape(%428, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), int16] */;
  %433 = reshape(%430, newshape=[288, 1]) /* ty=Tensor[(288, 1), float64] */;
  %434 = @func_4443(%431, %432, %433) /* ty=(Tensor[(3, 15, 14), bool], Tensor[(6, 3, 16), float64], Tensor[(288, 1), float64]) */;
  %435 = %434.1;
  (%429, %435, %var_5602)
}

def @func_512() -> (Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) {
  @func_510() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */
}

def @func_3466(%var_3464: Tensor[(2, 16, 13), float64], %var_3465: Tensor[(1, 288), float32]) -> (Tensor[(2, 16, 13), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(1, 288), float32], Tensor[(2, 16, 13), float32]) {
  %450 = fn (%var_3408: Tensor[(2, 16, 13), float64], %var_3424: Tensor[(1, 288), float32]) -> (Tensor[(2, 16, 13), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(1, 288), float32], Tensor[(2, 16, 13), float32]) {
    %436 = cast(%var_3408, dtype="float64") /* ty=Tensor[(2, 16, 13), float64] */;
    %437 = cast(%var_3424, dtype="float32") /* ty=Tensor[(1, 288), float32] */;
    %438 = reshape(%437, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
    %439 = @func_2828(%438) /* ty=(Tensor[(2, 9, 16), float32],) */;
    %440 = @func_3025() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) */;
    %441 = cast(%var_3424, dtype="float32") /* ty=Tensor[(1, 288), float32] */;
    %442 = cast(%var_3408, dtype="float64") /* ty=Tensor[(2, 16, 13), float64] */;
    %443 = asin(%442) /* ty=Tensor[(2, 16, 13), float64] */;
    %444 = cast(%443, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
    %445 = log(%436) /* ty=Tensor[(2, 16, 13), float64] */;
    %446 = %439.0;
    %447 = %440.0;
    %448 = sinh(%441) /* ty=Tensor[(1, 288), float32] */;
    %449 = rsqrt(%444) /* ty=Tensor[(2, 16, 13), float32] */;
    (%445, %446, %447, %448, %449)
  };
  %450(%var_3464, %var_3465) /* ty=(Tensor[(2, 16, 13), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(1, 288), float32], Tensor[(2, 16, 13), float32]) */
}

def @func_5123() -> (Tensor[(2, 9, 16), float64],) {
  %453 = fn () -> (Tensor[(2, 9, 16), float64],) {
    %451 = @func_4720() /* ty=(Tensor[(2, 9, 16), float64],) */;
    %452 = %451.0;
    (%452,)
  };
  %453() /* ty=(Tensor[(2, 9, 16), float64],) */
}

def @func_1807() -> Tensor[(2, 9, 16), float64] {
  %454 = @func_1236() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %454.0
}

def @func_5743(%var_5727: Tensor[(15, 14, 12), float64]) -> (Tensor[(15, 14, 12), float64], Tensor[(2, 9, 16), float64], Tensor[(15, 14, 12), float64]) {
  %455 = cast(6.74208f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %456 = cast(%var_5727, dtype="float64") /* ty=Tensor[(15, 14, 12), float64] */;
  %457 = @func_5122() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %458 = cast(%var_5727, dtype="float64") /* ty=Tensor[(15, 14, 12), float64] */;
  %459 = power(%455, %456) /* ty=Tensor[(15, 14, 12), float64] */;
  %460 = %457.0;
  %461 = log(%458) /* ty=Tensor[(15, 14, 12), float64] */;
  (%459, %460, %461)
}

def @func_5481() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) {
  @func_5479() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */
}

def @func_3775() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) {
  %462 = @func_2143() /* ty=Tensor[(2, 9, 16), float32] */;
  %463 = @func_1807() /* ty=Tensor[(2, 9, 16), float64] */;
  (%462, %463)
}

def @func_1644() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) {
  %474 = fn () -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) {
    %464 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
    %465 = cast(meta[relay.Constant][11] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %466 = reshape(%465, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float64] */;
    %467 = @func_555(%466) /* ty=(Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
    %468 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
    %469 = @func_1236() /* ty=(Tensor[(2, 9, 16), float64],) */;
    %470 = %464.0;
    %471 = %467.1;
    %472 = %468.1;
    %473 = %469.0;
    (%470, %471, meta[relay.Constant][11] /* ty=Tensor[(280), float64] */, %472, %473)
  };
  %474() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */
}

def @func_5193(%var_5191: Tensor[(15, 11, 2), float32], %var_5192: Tensor[(15, 11, 2), float32]) -> (Tensor[(15, 11, 2), float32], Tensor[(2, 9, 16), float32]) {
  @func_5189(%var_5191, %var_5192) /* ty=(Tensor[(15, 11, 2), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_3058(%var_3029: Tensor[(7, 11, 7), float64]) -> (Tensor[(7, 11, 7), bool], Tensor[(2, 9, 16), float32]) {
  %475 = cast(%var_3029, dtype="float64") /* ty=Tensor[(7, 11, 7), float64] */;
  %476 = atan(%475) /* ty=Tensor[(7, 11, 7), float64] */;
  %477 = cast(%476, dtype="float64") /* ty=Tensor[(7, 11, 7), float64] */;
  %478 = sin(%477) /* ty=Tensor[(7, 11, 7), float64] */;
  %479 = cast(%476, dtype="uint64") /* ty=Tensor[(7, 11, 7), uint64] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%478, dtype="uint64") /* ty=Tensor[(7, 11, 7), uint64] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %483 = left_shift(%481, %482) /* ty=Tensor[(7, 11, 7), uint64] */;
  %484 = cast(%483, dtype="bool") /* ty=Tensor[(7, 11, 7), bool] */;
  %485 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%476, dtype="bool") /* ty=Tensor[(7, 11, 7), bool] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %488 = @func_1728() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %489 = greater_equal(%486, %487) /* ty=Tensor[(7, 11, 7), bool] */;
  %490 = %488.0;
  (%489, %490)
}

def @func_4898(%var_4875: Tensor[(5, 1, 5), float32], %var_4887: Tensor[(288), float32]) -> (Tensor[(5, 9, 5), float32], Tensor[(288), float32], Tensor[(2, 9, 16), float32]) {
  %491 = cast(%var_4875, dtype="float32") /* ty=Tensor[(5, 1, 5), float32] */;
  %492 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 9, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
  %493 = cast(%var_4887, dtype="float32") /* ty=Tensor[(288), float32] */;
  %494 = reshape(%493, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %495 = @func_2694(%494) /* ty=Tensor[(2, 9, 16), float64] */;
  %496 = cast(%495, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %497 = floor_mod(%491, %492) /* ty=Tensor[(5, 9, 5), float32] */;
  %498 = log2(%496) /* ty=Tensor[(2, 9, 16), float32] */;
  (%497, %var_4887, %498)
}

def @func_928() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) {
  %499 = @func_429() /* ty=Tensor[(2, 9, 16), float32] */;
  %500 = cast(%499, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %501 = cast(%499, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %502 = sin(%501) /* ty=Tensor[(2, 9, 16), float64] */;
  %503 = cast(%502, dtype="uint32") /* ty=Tensor[(2, 9, 16), uint32] */;
  %504 = shape_of(%499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%499, dtype="uint32") /* ty=Tensor[(2, 9, 16), uint32] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %507 = bitwise_and(%505, %506) /* ty=Tensor[(2, 9, 16), uint32] */;
  %508 = cast(%502, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%507, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %512 = sigmoid(%500) /* ty=Tensor[(2, 9, 16), float64] */;
  %513 = multiply(%510, %511) /* ty=Tensor[(2, 9, 16), float64] */;
  (%512, %513)
}

def @func_1326() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) {
  @func_1324() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool]) */
}

def @func_5784() -> (Tensor[(2, 9, 16), float32],) {
  @func_5782() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_5410(%var_5409: Tensor[(7, 9, 1), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 9, ?), int16], Tensor[(7, 9, ?), uint16], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) {
  %541 = fn (%var_5367: Tensor[(7, 9, 1), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 9, ?), int16], Tensor[(7, 9, ?), uint16], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) {
    %514 = @func_2760() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
    %515 = cast(%var_5367, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
    %516 = atan(%515) /* ty=Tensor[(7, 9, 1), float64] */;
    %517 = cast(%516, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
    %518 = sigmoid(%517) /* ty=Tensor[(7, 9, 1), float32] */;
    %519 = cast(%var_5367, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
    %520 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
    %521 = cast(%516, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
    %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %523 = floor_mod(%521, %522) /* ty=Tensor[(7, 9, ?), float64] */;
    %524 = cast(%523, dtype="int16") /* ty=Tensor[(7, 9, ?), int16] */;
    %525 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
    %526 = cast(%518, dtype="int16") /* ty=Tensor[(7, 9, 1), int16] */;
    %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %528 = cast(%518, dtype="uint16") /* ty=Tensor[(7, 9, 1), uint16] */;
    %529 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
    %530 = cast(%523, dtype="uint16") /* ty=Tensor[(7, 9, ?), uint16] */;
    %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %532 = %514.1;
    %533 = cast(%532, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
    %534 = reshape(%533, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
    %535 = @func_4677(%534) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) */;
    %536 = @func_4497() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
    %537 = add(%526, %527) /* ty=Tensor[(7, 9, ?), int16] */;
    %538 = bitwise_and(%530, %531) /* ty=Tensor[(7, 9, ?), uint16] */;
    %539 = %535.1;
    %540 = %536.0;
    (%532, %537, %538, %539, %540)
  };
  %541(%var_5409) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(7, 9, ?), int16], Tensor[(7, 9, ?), uint16], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) */
}

def @func_3305() -> Tensor[(2, 9, 16), int8] {
  %542 = @func_2946() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) */;
  %542.1
}

def @func_2269(%var_2259: Tensor[(10, 3, 5), float32]) -> (Tensor[(10, 3, 5), float32], Tensor[(2, 9, 16), float64]) {
  %543 = cast(%var_2259, dtype="float32") /* ty=Tensor[(10, 3, 5), float32] */;
  %544 = @func_1346() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %545 = erf(%543) /* ty=Tensor[(10, 3, 5), float32] */;
  %546 = %544.0;
  (%545, %546)
}

def @func_5460(%var_5458: Tensor[(2, 16, 6), float32]) -> (Tensor[(2, 9, 16), float64], Tensor[(2, 16, 6), bool]) {
  @func_5457(%var_5458) /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 16, 6), bool]) */
}

def @func_3921() -> Tensor[(2, 9, 16), float32] {
  %547 = @func_399() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %547.1
}

def @func_2144() -> Tensor[(2, 9, 16), float32] {
  %548 = fn () -> Tensor[(2, 9, 16), float32] {
    @func_227() /* ty=Tensor[(2, 9, 16), float32] */
  };
  %548() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_581(%var_563: uint8, %var_570: Tensor[(2, 2, 6), uint8]) -> (Tensor[(2, 2, 1), uint8], Tensor[(2, 2, 6), uint8]) {
  %549 = cast(%var_563, dtype="uint8") /* ty=uint8 */;
  %550 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 2, 1), uint8] */, dtype="uint8") /* ty=Tensor[(2, 2, 1), uint8] */;
  %551 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 2, 1), uint8] */, dtype="uint8") /* ty=Tensor[(2, 2, 1), uint8] */;
  %552 = cast(%var_570, dtype="uint8") /* ty=Tensor[(2, 2, 6), uint8] */;
  %553 = logical_xor(%549, %550) /* ty=Tensor[(2, 2, 1), uint8] */;
  %554 = bitwise_xor(%551, %552) /* ty=Tensor[(2, 2, 6), uint8] */;
  (%553, %554)
}

def @func_2831(%var_2829: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), float32],) {
  @func_2828(%var_2829) /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_4722() -> (Tensor[(2, 9, 16), float64],) {
  @func_4720() /* ty=(Tensor[(2, 9, 16), float64],) */
}

def @func_2416(%var_2392: Tensor[(120), uint64]) -> (Tensor[(2, 9, 16), float32], Tensor[(10, 4, 3), bool], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) {
  %555 = @func_1464() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %556 = cast(%var_2392, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %557 = cast(%var_2392, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %558 = reshape(%556, newshape=[10, 4, 3]) /* ty=Tensor[(10, 4, 3), uint64] */;
  %559 = reshape(%557, newshape=[10, 4, 3]) /* ty=Tensor[(10, 4, 3), uint64] */;
  %560 = @func_1148(%558, %559) /* ty=(Tensor[(10, 4, 3), bool], Tensor[(10, 4, 3), bool]) */;
  %561 = %555.3;
  %562 = cast(%561, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %563 = reshape(%562, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %564 = @func_821(%563) /* ty=(Tensor[(2, 9, 16), bool],) */;
  %565 = %560.1;
  %566 = %564.0;
  (%561, %565, %var_2392, %566)
}

def @func_4810(%var_4808: Tensor[(2, 13, 10), float64], %var_4809: Tensor[(2, 13, 10), float64]) -> Tensor[(2, 13, 10), float64] {
  @func_4806(%var_4808, %var_4809) /* ty=Tensor[(2, 13, 10), float64] */
}

def @func_5894() -> Tensor[(2, 9, 16), float32] {
  @func_5892() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_2620(%var_2618: Tensor[(2, 9, 16), float32]) -> (Tensor[(120), uint64], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) {
  @func_2617(%var_2618) /* ty=(Tensor[(120), uint64], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) */
}

def @func_1941() -> (Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float64]) {
  %567 = @func_1065() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) */;
  %568 = %567.0;
  %569 = @func_1807() /* ty=Tensor[(2, 9, 16), float64] */;
  (%568, %569)
}

def @func_4328() -> (Tensor[(2, 9, 16), float32],) {
  %572 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %570 = @func_1760() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %571 = %570.0;
    (%571,)
  };
  %572() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_4499() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  @func_4497() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_3291() -> Tensor[(2, 9, 16), float32] {
  @func_3289() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_4497() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %573 = @func_1643() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
  %574 = @func_3332() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %575 = @func_1919() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %576 = @func_1494() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %577 = %573.3;
  %578 = %574.0;
  %579 = %575.0;
  %580 = %576.0;
  (%577, %578, %579, %580)
}

def @func_401() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  @func_399() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_4720() -> (Tensor[(2, 9, 16), float64],) {
  %581 = @func_3116() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %582 = %581.0;
  (%582,)
}

def @func_3712(%var_3711: Tensor[(539), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 11, 7), bool], Tensor[(539), float64]) {
  %589 = fn (%var_3705: Tensor[(539), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 11, 7), bool], Tensor[(539), float64]) {
    %583 = @func_1081() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %584 = cast(%var_3705, dtype="float64") /* ty=Tensor[(539), float64] */;
    %585 = reshape(%584, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float64] */;
    %586 = @func_3058(%585) /* ty=(Tensor[(7, 11, 7), bool], Tensor[(2, 9, 16), float32]) */;
    %587 = %583.0;
    %588 = %586.0;
    (%587, %588, %var_3705)
  };
  %589(%var_3711) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(7, 11, 7), bool], Tensor[(539), float64]) */
}

def @func_6415(%var_6412: Tensor[(7, 4, 16), float64]) -> Tensor[(7, 4, 16), float64] {
  %590 = cast(%var_6412, dtype="float64") /* ty=Tensor[(7, 4, 16), float64] */;
  sigmoid(%590) /* ty=Tensor[(7, 4, 16), float64] */
}

def @func_5227() -> Tensor[(2, 9, 16), float64] {
  %591 = @func_4290() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) */;
  %591.2
}

def @func_3160() -> (Tensor[(2, 9, 16), float32],) {
  %594 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %592 = @func_3116() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
    %593 = %592.1;
    (%593,)
  };
  %594() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_3118() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) {
  @func_3116() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */
}

def @func_2239() -> (Tensor[(2, 9, 16), float32],) {
  %597 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %595 = @func_1919() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %596 = %595.0;
    (%596,)
  };
  %597() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_2948() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) {
  @func_2946() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) */
}

def @func_4292() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) {
  @func_4290() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float64]) */
}

def @main(%var_6922: uint16, %var_6923: Tensor[(16, 12, 7), uint16]) -> (Tensor[(7, 6, 15), bool], Tensor[(630), bool], Tensor[(16, 12, 7), float32]) {
  %598 = cast(meta[relay.Constant][14] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %599 = reshape(%598, newshape=[630, 1]) /* ty=Tensor[(630, 1), bool] */;
  %600 = @func_1598(%599) /* ty=(Tensor[(7, 6, 15), bool], Tensor[(630, 1), bool], Tensor[(2, 9, 16), bool]) */;
  %601 = cast(%var_6922, dtype="bool") /* ty=bool */;
  %602 = cast(%var_6923, dtype="bool") /* ty=Tensor[(16, 12, 7), bool] */;
  %603 = less(%601, %602) /* ty=Tensor[(16, 12, 7), bool] */;
  %604 = cast(%var_6923, dtype="float32") /* ty=Tensor[(16, 12, 7), float32] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="float32") /* ty=Tensor[(16, 12, 7), float32] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %608 = %600.0;
  %609 = divide(%606, %607) /* ty=Tensor[(16, 12, 7), float32] */;
  (%608, meta[relay.Constant][14] /* ty=Tensor[(630), bool] */, %609)
}

def @func_5938() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  @func_5936() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_627() -> (Tensor[(2, 9, 16), float64],) {
  %612 = fn () -> (Tensor[(2, 9, 16), float64],) {
    %610 = @func_510() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */;
    %611 = %610.0;
    (%611,)
  };
  %612() /* ty=(Tensor[(2, 9, 16), float64],) */
}

def @func_6338() -> (Tensor[(2, 9, 16), float64], Tensor[(441), float64], Tensor[(2, 13, 11), bool], Tensor[(286), uint64], Tensor[(2, 10, 12), float32], Tensor[(539), float64], Tensor[(11, 49), float64]) {
  %613 = @func_5323() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %614 = cast(meta[relay.Constant][16] /* ty=Tensor[(286), uint64] */, dtype="uint64") /* ty=Tensor[(286), uint64] */;
  %615 = cast(meta[relay.Constant][16] /* ty=Tensor[(286), uint64] */, dtype="uint64") /* ty=Tensor[(286), uint64] */;
  %616 = reshape(%614, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint64] */;
  %617 = reshape(%615, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), uint64] */;
  %618 = cast(meta[relay.Constant][15] /* ty=Tensor[(441), float64] */, dtype="float64") /* ty=Tensor[(441), float64] */;
  %619 = reshape(%618, newshape=[7, 9, 7]) /* ty=Tensor[(7, 9, 7), float64] */;
  %620 = @func_2513(%619) /* ty=(Tensor[(7, 9, 7), float64], Tensor[(7, 9, 7), float32], Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %621 = %620.2;
  %622 = cast(%621, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
  %623 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 49), float64] */, dtype="float64") /* ty=Tensor[(11, 49), float64] */;
  %624 = reshape(%623, newshape=[539]) /* ty=Tensor[(539), float64] */;
  %625 = @func_5966(%624) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(7, 11, 7), bool], Tensor[(539), float64]) */;
  %626 = %613.0;
  %627 = @func_4411(%616, %617) /* ty=Tensor[(2, 13, 11), bool] */;
  %628 = atanh(%622) /* ty=Tensor[(2, 10, 12), float32] */;
  %629 = %625.2;
  (%626, meta[relay.Constant][15] /* ty=Tensor[(441), float64] */, %627, meta[relay.Constant][16] /* ty=Tensor[(286), uint64] */, %628, %629, meta[relay.Constant][17] /* ty=Tensor[(11, 49), float64] */)
}

def @func_6767(%var_6764: Tensor[(6, 6, 9), float64], %var_6765: Tensor[(6, 6, 9), float64], %var_6766: Tensor[(1365), float64]) -> (Tensor[(2, 9, 16), float64], Tensor[(6, 6, 9), uint16], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), uint8], Tensor[(7, 6, 15), bool], bool, Tensor[(630), bool], Tensor[(1365), float64], Tensor[(1365), float64], Tensor[(7, 6, 15), bool]) {
  @func_6762(%var_6764, %var_6765, %var_6766) /* ty=(Tensor[(2, 9, 16), float64], Tensor[(6, 6, 9), uint16], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), uint8], Tensor[(7, 6, 15), bool], bool, Tensor[(630), bool], Tensor[(1365), float64], Tensor[(1365), float64], Tensor[(7, 6, 15), bool]) */
}

def @func_1083() -> (Tensor[(2, 9, 16), float32],) {
  @func_1081() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_1464() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %630 = @func_510() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(15, 7, 13), float64], Tensor[(1365), float64]) */;
  %631 = @func_1236() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %632 = @func_1081() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %633 = %632.0;
  %634 = cast(%633, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %635 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %636 = %630.0;
  %637 = %631.0;
  %638 = log(%634) /* ty=Tensor[(2, 9, 16), float32] */;
  %639 = %635.0;
  (%636, %637, %638, %639)
}

def @func_1729() -> (Tensor[(2, 9, 16), float32],) {
  %641 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %640 = @func_227() /* ty=Tensor[(2, 9, 16), float32] */;
    (%640,)
  };
  %641() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_5892() -> Tensor[(2, 9, 16), float32] {
  %642 = @func_2030() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float32]) */;
  %642.2
}

def @func_6621(%var_6612: Tensor[(441), float64], %var_6617: Tensor[(441), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(441), bool]) {
  %643 = @func_2946() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) */;
  %644 = @func_1065() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) */;
  %645 = cast(%var_6612, dtype="float64") /* ty=Tensor[(441), float64] */;
  %646 = reshape(%645, newshape=[7, 9, 7]) /* ty=Tensor[(7, 9, 7), float64] */;
  %647 = @func_2513(%646) /* ty=(Tensor[(7, 9, 7), float64], Tensor[(7, 9, 7), float32], Tensor[(2, 10, 12), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %648 = cast(%var_6617, dtype="bool") /* ty=Tensor[(441), bool] */;
  %649 = shape_of(%var_6612, dtype="int32") /* ty=Tensor[(1), int32] */;
  %650 = cast(%var_6612, dtype="bool") /* ty=Tensor[(441), bool] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?), bool] */;
  %652 = %643.0;
  %653 = %644.0;
  %654 = %647.5;
  %655 = less_equal(%650, %651) /* ty=Tensor[(441), bool] */;
  (%652, %653, %654, %655)
}

def @func_2092(%var_2091: Tensor[(11, 10, 7), float32]) -> (Tensor[(11, 10, 7), float32], Tensor[(2, 9, 16), float32]) {
  %664 = fn (%var_2048: Tensor[(11, 10, 7), float32]) -> (Tensor[(11, 10, 7), float32], Tensor[(2, 9, 16), float32]) {
    %656 = cast(%var_2048, dtype="float32") /* ty=Tensor[(11, 10, 7), float32] */;
    %657 = erf(%656) /* ty=Tensor[(11, 10, 7), float32] */;
    %658 = cast(%657, dtype="float64") /* ty=Tensor[(11, 10, 7), float64] */;
    %659 = cos(%658) /* ty=Tensor[(11, 10, 7), float64] */;
    %660 = cast(%659, dtype="float32") /* ty=Tensor[(11, 10, 7), float32] */;
    %661 = @func_701() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(280), float64]) */;
    %662 = sin(%660) /* ty=Tensor[(11, 10, 7), float32] */;
    %663 = %661.1;
    (%662, %663)
  };
  %664(%var_2091) /* ty=(Tensor[(11, 10, 7), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_585(%var_583: uint8, %var_584: Tensor[(2, 2, 6), uint8]) -> (Tensor[(2, 2, 1), uint8], Tensor[(2, 2, 6), uint8]) {
  @func_581(%var_583, %var_584) /* ty=(Tensor[(2, 2, 1), uint8], Tensor[(2, 2, 6), uint8]) */
}

def @func_4902(%var_4900: Tensor[(5, 1, 5), float32], %var_4901: Tensor[(288), float32]) -> (Tensor[(5, 9, 5), float32], Tensor[(288), float32], Tensor[(2, 9, 16), float32]) {
  @func_4898(%var_4900, %var_4901) /* ty=(Tensor[(5, 9, 5), float32], Tensor[(288), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_4806(%var_4792: Tensor[(2, 13, 10), float64], %var_4793: Tensor[(2, 13, 10), float64]) -> Tensor[(2, 13, 10), float64] {
  %665 = cast(%var_4793, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %666 = shape_of(%var_4792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%var_4792, dtype="float64") /* ty=Tensor[(2, 13, 10), float64] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%667, %668) /* ty=Tensor[(2, 13, 10), float64] */
}

def @func_6158() -> (Tensor[(2, 9, 16), float64],) {
  @func_6156() /* ty=(Tensor[(2, 9, 16), float64],) */
}

def @func_1236() -> (Tensor[(2, 9, 16), float64],) {
  %669 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
  %670 = %669.1;
  (%670,)
}

def @func_5457(%var_5412: Tensor[(2, 16, 6), float32]) -> (Tensor[(2, 9, 16), float64], Tensor[(2, 16, 6), bool]) {
  %671 = @func_5122() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %672 = cast(%var_5412, dtype="float32") /* ty=Tensor[(2, 16, 6), float32] */;
  %673 = log2(%672) /* ty=Tensor[(2, 16, 6), float32] */;
  %674 = cast(%var_5412, dtype="bool") /* ty=Tensor[(2, 16, 6), bool] */;
  %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%673, dtype="bool") /* ty=Tensor[(2, 16, 6), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %678 = %671.0;
  %679 = less(%676, %677) /* ty=Tensor[(2, 16, 6), bool] */;
  (%678, %679)
}

def @func_2646() -> Tensor[(2, 9, 16), float32] {
  %680 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %680.1
}

def @func_429() -> Tensor[(2, 9, 16), float32] {
  %681 = @func_399() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %681.1
}

def @func_5324() -> (Tensor[(2, 9, 16), float64],) {
  %684 = fn () -> (Tensor[(2, 9, 16), float64],) {
    %682 = @func_3239() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
    %683 = %682.1;
    (%683,)
  };
  %684() /* ty=(Tensor[(2, 9, 16), float64],) */
}

def @func_2572(%var_2571: Tensor[(6, 3, 16), float64]) -> Tensor[(6, 3, 16), float64] {
  %686 = fn (%var_2563: Tensor[(6, 3, 16), float64]) -> Tensor[(6, 3, 16), float64] {
    %685 = cast(%var_2563, dtype="float64") /* ty=Tensor[(6, 3, 16), float64] */;
    sqrt(%685) /* ty=Tensor[(6, 3, 16), float64] */
  };
  %686(%var_2571) /* ty=Tensor[(6, 3, 16), float64] */
}

def @func_5866(%var_5864: Tensor[(16, 9, 6), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(16, 9, 6), float32], Tensor[(16, 9, 6), float64]) {
  @func_5863(%var_5864) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(16, 9, 6), float32], Tensor[(16, 9, 6), float64]) */
}

def @func_1889() -> (Tensor[(2, 9, 16), float32],) {
  @func_1887() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_6254() -> (Tensor[(2, 9, 16), uint8],) {
  %687 = @func_3254() /* ty=Tensor[(2, 9, 16), uint8] */;
  %688 = @func_3856() /* ty=Tensor[(2, 9, 16), float32] */;
  %689 = cast(%688, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %690 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%687, dtype="uint8") /* ty=Tensor[(2, 9, 16), uint8] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %693 = subtract(%691, %692) /* ty=Tensor[(2, 9, 16), uint8] */;
  (%693,)
}

def @func_1920() -> (Tensor[(2, 9, 16), float32],) {
  %696 = fn () -> (Tensor[(2, 9, 16), float32],) {
    %694 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
    %695 = %694.0;
    (%695,)
  };
  %696() /* ty=(Tensor[(2, 9, 16), float32],) */
}

def @func_4183(%var_4171: Tensor[(630), bool]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(630), bool]) {
  %697 = @func_1643() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float64]) */;
  %698 = cast(%var_4171, dtype="bool") /* ty=Tensor[(630), bool] */;
  %699 = reshape(%698, newshape=[630, 1]) /* ty=Tensor[(630, 1), bool] */;
  %700 = @func_1596(%699) /* ty=(Tensor[(7, 6, 15), bool], Tensor[(630, 1), bool], Tensor[(2, 9, 16), bool]) */;
  %701 = %697.3;
  %702 = %700.2;
  (%701, %702, %var_4171)
}

def @func_5863(%var_5788: Tensor[(16, 9, 6), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(16, 9, 6), float32], Tensor[(16, 9, 6), float64]) {
  %703 = @func_2238() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %704 = cast(%var_5788, dtype="float64") /* ty=Tensor[(16, 9, 6), float64] */;
  %705 = sqrt(%704) /* ty=Tensor[(16, 9, 6), float64] */;
  %706 = cast(%705, dtype="float32") /* ty=Tensor[(16, 9, 6), float32] */;
  %707 = erf(%706) /* ty=Tensor[(16, 9, 6), float32] */;
  %708 = cast(%705, dtype="float32") /* ty=Tensor[(16, 9, 6), float32] */;
  %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%707, dtype="float32") /* ty=Tensor[(16, 9, 6), float32] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %712 = cast(%707, dtype="float64") /* ty=Tensor[(16, 9, 6), float64] */;
  %713 = %703.0;
  %714 = maximum(%710, %711) /* ty=Tensor[(16, 9, 6), float32] */;
  %715 = cos(%712) /* ty=Tensor[(16, 9, 6), float64] */;
  (%713, %714, %715)
}

def @func_5966(%var_5963: Tensor[(539), float64]) -> (Tensor[(2, 9, 16), float32], Tensor[(7, 11, 7), bool], Tensor[(539), float64]) {
  %716 = @func_4536() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %717 = cast(%var_5963, dtype="float64") /* ty=Tensor[(539), float64] */;
  %718 = reshape(%717, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float64] */;
  %719 = @func_3058(%718) /* ty=(Tensor[(7, 11, 7), bool], Tensor[(2, 9, 16), float32]) */;
  %720 = %716.0;
  %721 = %719.0;
  (%720, %721, %var_5963)
}

def @func_930() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) {
  @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */
}

def @func_441(%var_436: Tensor[(15, 7, 13), float64]) -> Tensor[(15, 7, 13), float64] {
  %722 = cast(%var_436, dtype="float64") /* ty=Tensor[(15, 7, 13), float64] */;
  sigmoid(%722) /* ty=Tensor[(15, 7, 13), float64] */
}

def @func_3858() -> Tensor[(2, 9, 16), float32] {
  @func_3856() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_6456(%var_6455: Tensor[(1365), float64]) -> (Tensor[(2, 9, 16), int8], Tensor[(1365), bool], Tensor[(1365), float64], Tensor[(2, 9, 16), float32]) {
  %730 = fn (%var_6439: Tensor[(1365), float64]) -> (Tensor[(2, 9, 16), int8], Tensor[(1365), bool], Tensor[(1365), float64], Tensor[(2, 9, 16), float32]) {
    %723 = @func_2946() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), int8]) */;
    %724 = cast(%var_6439, dtype="float64") /* ty=Tensor[(1365), float64] */;
    %725 = reshape(%724, newshape=[1365]) /* ty=Tensor[(1365), float64] */;
    %726 = @func_701() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(280), float64]) */;
    %727 = %723.1;
    %728 = @func_6193(%725) /* ty=Tensor[(1365), bool] */;
    %729 = %726.0;
    (%727, %728, %var_6439, %729)
  };
  %730(%var_6455) /* ty=(Tensor[(2, 9, 16), int8], Tensor[(1365), bool], Tensor[(1365), float64], Tensor[(2, 9, 16), float32]) */
}

def @func_1081() -> (Tensor[(2, 9, 16), float32],) {
  %731 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %732 = %731.0;
  (%732,)
}

def @func_1347() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) {
  %736 = fn () -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) {
    %733 = @func_928() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64]) */;
    %734 = %733.1;
    %735 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
    (%734, %735)
  };
  %736() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */
}

def @func_5936() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %737 = @func_2760() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %738 = @func_3116() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %739 = %737.1;
  %740 = %738.1;
  (%739, %740)
}

def @func_1494() -> (Tensor[(2, 9, 16), float32],) {
  %741 = @func_701() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(280), float64]) */;
  %742 = %741.1;
  (%742,)
}

def @func_5266() -> (Tensor[(2, 9, 16), float32], Tensor[(10, 7, 4), float64], Tensor[(280), float64]) {
  %743 = cast(meta[relay.Constant][18] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %744 = reshape(%743, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float64] */;
  %745 = @func_555(%744) /* ty=(Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %746 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  %747 = %745.0;
  (%746, %747, meta[relay.Constant][18] /* ty=Tensor[(280), float64] */)
}

def @func_557(%var_556: Tensor[(10, 7, 4), float64]) -> (Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %754 = fn (%var_528: Tensor[(10, 7, 4), float64]) -> (Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
    %748 = cast(%var_528, dtype="float64") /* ty=Tensor[(10, 7, 4), float64] */;
    %749 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %750 = @func_278() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %751 = acos(%748) /* ty=Tensor[(10, 7, 4), float64] */;
    %752 = %749.0;
    %753 = %750.0;
    (%751, %752, %753)
  };
  %754(%var_556) /* ty=(Tensor[(10, 7, 4), float64], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_6669() -> (Tensor[(2, 9, 16), float32],) {
  %755 = @func_1012() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %756 = %755.1;
  (%756,)
}

def @func_2760() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  %757 = @func_1065() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), uint16], Tensor[(2, 9, 16), float32]) */;
  %758 = @func_2143() /* ty=Tensor[(2, 9, 16), float32] */;
  %759 = %757.2;
  (%758, %759)
}

def @func_6515(%var_6489: Tensor[(180), float64], %var_6511: Tensor[(630), bool]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 15, 6), float64], Tensor[(180), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), bool], Tensor[(630), bool]) {
  %760 = cast(%var_6489, dtype="float64") /* ty=Tensor[(180), float64] */;
  %761 = reshape(%760, newshape=[2, 15, 6]) /* ty=Tensor[(2, 15, 6), float64] */;
  %762 = @func_5479() /* ty=(Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) */;
  %763 = cast(%var_6511, dtype="bool") /* ty=Tensor[(630), bool] */;
  %764 = reshape(%763, newshape=[630, 1]) /* ty=Tensor[(630, 1), bool] */;
  %765 = @func_1596(%764) /* ty=(Tensor[(7, 6, 15), bool], Tensor[(630, 1), bool], Tensor[(2, 9, 16), bool]) */;
  %766 = @func_5892() /* ty=Tensor[(2, 9, 16), float32] */;
  %767 = @func_209(%761) /* ty=Tensor[(2, 15, 6), float64] */;
  %768 = %762.0;
  %769 = %765.2;
  (%766, %767, %var_6489, %768, %769, %var_6511)
}

def @func_6156() -> (Tensor[(2, 9, 16), float64],) {
  %770 = @func_626() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %771 = %770.0;
  %772 = cast(%771, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %773 = tan(%772) /* ty=Tensor[(2, 9, 16), float64] */;
  (%773,)
}

def @func_6426() -> Tensor[(2, 9, 16), float32] {
  %775 = fn () -> Tensor[(2, 9, 16), float32] {
    %774 = @func_4536() /* ty=(Tensor[(2, 9, 16), float32],) */;
    %774.0
  };
  %775() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_211(%var_210: Tensor[(2, 15, 6), float64]) -> Tensor[(2, 15, 6), float64] {
  %780 = fn (%var_203: Tensor[(2, 15, 6), float64]) -> Tensor[(2, 15, 6), float64] {
    %776 = cast(%var_203, dtype="float64") /* ty=Tensor[(2, 15, 6), float64] */;
    %777 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(2, 15, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %778 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 15, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 15, 6), float64] */;
    %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    maximum(%778, %779) /* ty=Tensor[(2, 15, 6), float64] */
  };
  %780(%var_210) /* ty=Tensor[(2, 15, 6), float64] */
}

def @func_5268() -> (Tensor[(2, 9, 16), float32], Tensor[(10, 7, 4), float64], Tensor[(280), float64]) {
  @func_5266() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(10, 7, 4), float64], Tensor[(280), float64]) */
}

def @func_6854(%var_6853: Tensor[(16, 10, 5), bool]) -> (Tensor[(16, 10, 5), bool], Tensor[(120), uint64], Tensor[(288), float32]) {
  %788 = fn (%var_6823: Tensor[(16, 10, 5), bool]) -> (Tensor[(16, 10, 5), bool], Tensor[(120), uint64], Tensor[(288), float32]) {
    %781 = cast(meta[relay.Constant][20] /* ty=Tensor[(16, 10, 1), bool] */, dtype="bool") /* ty=Tensor[(16, 10, 1), bool] */;
    %782 = cast(%var_6823, dtype="bool") /* ty=Tensor[(16, 10, 5), bool] */;
    %783 = cast(meta[relay.Constant][21] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %784 = reshape(%783, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
    %785 = @func_2617(%784) /* ty=(Tensor[(120), uint64], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) */;
    %786 = logical_and(%781, %782) /* ty=Tensor[(16, 10, 5), bool] */;
    %787 = %785.1;
    (%786, %787, meta[relay.Constant][21] /* ty=Tensor[(288), float32] */)
  };
  %788(%var_6853) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(120), uint64], Tensor[(288), float32]) */
}

def @func_2762() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  @func_2760() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_2006(%var_2004: Tensor[(2, 9, 16), uint8]) -> (Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(4, 16, 14), int64], Tensor[(896), int64]) {
  @func_2003(%var_2004) /* ty=(Tensor[(2, 9, 16), int8], Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32], Tensor[(280), float64], Tensor[(4, 16, 14), int64], Tensor[(896), int64]) */
}

def @func_6227(%var_6225: bool, %var_6226: Tensor[(1, 7, 16), bool]) -> Tensor[(1, 7, 16), bool] {
  %791 = fn (%var_6210: bool, %var_6211: Tensor[(1, 7, 16), bool]) -> Tensor[(1, 7, 16), bool] {
    %789 = cast(%var_6210, dtype="bool") /* ty=bool */;
    %790 = cast(%var_6211, dtype="bool") /* ty=Tensor[(1, 7, 16), bool] */;
    logical_or(%789, %790) /* ty=Tensor[(1, 7, 16), bool] */
  };
  %791(%var_6225, %var_6226) /* ty=Tensor[(1, 7, 16), bool] */
}

def @func_3856() -> Tensor[(2, 9, 16), float32] {
  %792 = @func_635() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %792.0
}

def @func_1751(%var_1750: Tensor[(2, 9, 16), uint8]) -> Tensor[(2, 9, 16), float64] {
  %801 = fn (%var_1736: Tensor[(2, 9, 16), uint8]) -> Tensor[(2, 9, 16), float64] {
    %793 = @func_1395() /* ty=(Tensor[(2, 9, 16), uint8], Tensor[(2, 9, 16), float32]) */;
    %794 = %793.0;
    %795 = cast(%var_1736, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
    %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
    %797 = cast(%794, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
    %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %799 = power(%797, %798) /* ty=Tensor[(2, 9, 16), float32] */;
    %800 = cast(%799, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
    rsqrt(%800) /* ty=Tensor[(2, 9, 16), float64] */
  };
  %801(%var_1750) /* ty=Tensor[(2, 9, 16), float64] */
}

def @func_3116() -> (Tensor[(2, 9, 16), float64], Tensor[(2, 9, 16), float32]) {
  %802 = @func_626() /* ty=(Tensor[(2, 9, 16), float64],) */;
  %803 = %802.0;
  %804 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  (%803, %804)
}

def @func_5167(%var_5165: Tensor[(2, 9, 16), float32]) -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint16]) {
  @func_5164(%var_5165) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), uint16]) */
}

def @func_4361() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) {
  @func_4359() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */
}

def @func_2648() -> Tensor[(2, 9, 16), float32] {
  @func_2646() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_5666() -> Tensor[(2, 9, 16), float32] {
  @func_5664() /* ty=Tensor[(2, 9, 16), float32] */
}

def @func_1583() -> (Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), int16]) {
  %805 = @func_473() /* ty=Tensor[(2, 9, 16), float32] */;
  %806 = cast(%805, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %807 = reshape(%806, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %808 = @func_863(%807) /* ty=(Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), bool], Tensor[(2, 9, 16), float32]) */;
  %809 = cast(%805, dtype="float32") /* ty=Tensor[(2, 9, 16), float32] */;
  %810 = reshape(%809, newshape=[2, 9, 16]) /* ty=Tensor[(2, 9, 16), float32] */;
  %811 = @func_821(%810) /* ty=(Tensor[(2, 9, 16), bool],) */;
  %812 = @func_376() /* ty=(Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32], Tensor[(2, 9, 16), float32]) */;
  %813 = %812.1;
  %814 = cast(%813, dtype="int16") /* ty=Tensor[(2, 9, 16), int16] */;
  %815 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(%805, dtype="int16") /* ty=Tensor[(2, 9, 16), int16] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %818 = %808.2;
  %819 = %811.0;
  %820 = logical_xor(%816, %817) /* ty=Tensor[(2, 9, 16), int16] */;
  (%818, %819, %820)
}

def @func_2617(%var_2611: Tensor[(2, 9, 16), float32]) -> (Tensor[(120), uint64], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) {
  %821 = cast(meta[relay.Constant][22] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %822 = reshape(%821, newshape=[120]) /* ty=Tensor[(120), uint64] */;
  %823 = @func_2416(%822) /* ty=(Tensor[(2, 9, 16), float32], Tensor[(10, 4, 3), bool], Tensor[(120), uint64], Tensor[(2, 9, 16), bool]) */;
  %824 = @func_1081() /* ty=(Tensor[(2, 9, 16), float32],) */;
  %825 = %824.0;
  %826 = cast(%var_2611, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%825, dtype="bool") /* ty=Tensor[(2, 9, 16), bool] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %830 = %823.2;
  %831 = logical_or(%828, %829) /* ty=Tensor[(2, 9, 16), bool] */;
  (%830, meta[relay.Constant][22] /* ty=Tensor[(120), uint64] */, %831)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

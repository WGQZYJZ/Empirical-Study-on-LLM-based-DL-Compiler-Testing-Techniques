import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_165 = relay.var("var_165", dtype = "float32", shape = (13, 4, 14))#candidate|165|(13, 4, 14)|var|float32
const_166 = relay.const([[[-9.550003,-9.473269,-0.410592,-3.330336,-7.711278,7.406803,-8.329153,7.076908,2.667157,3.825032,8.320571,-8.555228,-7.641848,-9.798348],[-9.569365,2.626317,-5.685572,-6.843573,0.042819,4.757973,6.364758,0.156086,-0.249831,7.096673,-6.961043,0.712253,-7.429861,9.611945],[-0.407966,6.048987,5.613640,2.209654,-3.384097,9.656007,-0.049038,4.212605,3.863421,-9.538947,9.985058,6.270677,-8.643342,-9.816614],[-2.856162,8.066413,2.357511,-0.723107,-0.189541,-7.861560,5.046329,-5.440657,-9.065727,7.611427,-2.689953,7.083322,-3.275978,0.188476]],[[9.876686,9.777559,-0.110453,0.058662,2.051098,-0.516745,9.972832,8.076850,-0.833148,4.211690,7.973875,1.804946,-7.176361,-1.676887],[1.437923,7.469603,0.751799,8.523074,-6.089855,1.098175,-1.010077,8.750354,-4.633437,-4.307303,-5.512197,7.015734,-9.776859,3.336305],[-5.409246,5.680631,0.623252,-3.084131,5.229994,-7.374588,-1.687117,-0.033688,-2.406073,6.082134,-8.524345,7.951246,5.651152,-6.138518],[7.379352,-1.081299,4.501649,-9.090126,-7.564864,7.874007,-2.391265,0.327796,5.690812,3.151759,6.281640,-0.940141,-2.822302,-2.728872]],[[6.877946,3.765468,-8.341927,-0.347679,-0.683139,6.701424,9.182396,-4.188212,-1.291743,2.797060,9.760904,4.208342,4.953165,-6.220332],[-3.012373,3.853429,-2.469145,-0.620129,-4.049025,-9.834316,1.181227,9.726244,5.603187,-2.553836,-7.800553,8.557674,-0.813364,-0.681167],[0.170405,7.995772,-9.696962,4.195105,-3.516552,2.269075,-0.935205,4.355159,2.380935,-6.794849,-4.709896,6.528208,-9.039449,5.466281],[9.602400,-3.723311,-6.128599,-1.287142,-7.441265,1.571983,-3.560820,8.417461,7.143459,-9.010858,-2.499844,1.922845,-3.506154,6.585011]],[[4.600207,6.617737,-6.594174,7.859125,-3.648694,5.257975,8.342349,4.554040,-3.071238,-4.542305,5.254202,-2.238619,-2.593379,-1.753409],[-9.470744,2.929595,-0.691107,2.322007,6.350369,-9.760089,-0.446944,-2.331673,-6.304074,7.776546,1.119907,-0.376035,1.402654,-1.965820],[-5.715639,-5.904837,-8.530470,0.475763,-0.906381,0.238073,1.726092,1.817469,-2.849322,-7.329482,5.533711,6.010017,6.141728,6.401992],[-9.506094,-9.187852,3.811745,-3.401455,8.919815,-3.207667,-2.208867,5.345891,2.345610,2.524501,-7.847528,7.171454,-0.213562,-9.637524]],[[-6.381079,-5.383014,8.171663,-0.414746,1.233813,-5.368365,-9.230519,-9.194800,1.706895,-5.821146,2.299581,-9.614980,2.304606,2.339381],[-4.426301,-6.095273,-4.890139,9.905472,0.494103,-9.901030,-9.828493,8.951947,0.466867,4.070799,0.343820,-6.205783,-6.458120,6.036233],[-7.951547,7.072972,-1.978576,9.876796,-0.194537,9.132372,-7.961172,-5.277611,-3.847595,4.275950,0.854142,-1.451642,9.017644,8.646842],[9.421416,5.081147,-7.923135,-5.732691,-9.076126,7.173896,1.723871,0.127237,-6.634677,-0.961872,8.532233,-7.131204,5.014547,-7.845149]],[[0.759162,-2.444016,-5.484672,-6.164349,-1.824661,5.568196,2.383560,6.845269,1.534040,-3.237315,-7.650820,8.110910,6.694546,-3.694031],[-8.804772,4.279950,2.235105,0.818570,3.900979,-0.170118,-0.655429,6.947410,-1.543392,-1.540896,6.536889,6.240291,-1.456088,2.530064],[-2.537205,-1.333191,-7.181479,3.850159,0.696740,7.404860,-3.756515,-5.623866,-9.369426,-2.583015,-0.214081,-0.496476,-2.762950,4.436698],[-9.051414,-4.489952,-6.468529,-4.557227,-3.844806,-3.895962,-0.062713,-8.606424,9.766420,9.091226,-7.467855,-2.446630,7.855958,-6.444526]],[[-8.896812,-4.490358,7.144058,-9.096370,6.225309,-7.654417,-8.800824,2.398695,9.713335,2.185654,-4.902058,-5.219647,2.532402,6.867750],[6.754689,-7.637881,5.170729,4.359838,2.074305,-0.274587,-5.522126,-4.309208,-8.849603,8.895390,1.666659,-9.606763,2.379277,1.606103],[-6.794369,8.170734,-7.997439,6.329238,-7.601331,-3.092723,-4.647088,-8.446593,-5.430792,2.262412,-3.680468,-1.540229,-6.469806,0.031604],[7.894859,-6.382935,8.141497,4.949717,4.011094,2.672258,7.729554,6.173155,2.524352,-5.590124,-5.906987,-2.421885,-5.923255,-7.382241]],[[4.554967,1.482896,-3.800126,-7.623057,6.589205,-5.733014,9.844197,6.409360,0.705276,-5.415269,-5.303144,-7.787759,9.686905,-9.763713],[9.594565,-6.345285,-6.575157,3.036812,8.518855,9.597587,-5.994832,3.195556,7.021628,-8.637204,9.779311,2.411740,-5.440116,-7.429037],[-6.935882,9.482299,5.004847,4.040752,2.600907,3.433142,-1.452008,-8.313419,-1.009158,-1.071589,-5.204335,-1.689503,-5.614058,2.795834],[-9.638192,-0.724514,-2.712173,-2.283082,2.724272,-5.369335,0.420808,0.308278,-3.118036,-9.321878,2.540889,-5.276362,2.263208,2.483534]],[[8.505933,-0.364813,-3.002912,-1.825975,2.988566,-8.080189,-0.414065,6.688813,-6.666872,-7.547076,-8.880134,6.587687,5.222288,4.945360],[6.651407,-0.045735,-7.321431,-6.333502,5.483915,5.696322,6.703772,0.647813,-6.774748,6.904999,4.499558,8.950340,-8.301627,4.955287],[7.155743,3.911924,2.490482,8.702172,-7.138965,-4.051051,-7.653422,-9.015475,-2.540341,-2.779075,9.004383,0.806934,4.228965,-6.850732],[-6.069305,5.983653,0.010085,-1.472907,9.072417,-8.246606,7.997959,5.677841,-0.661000,7.942538,-8.619189,-3.300734,-8.246089,-5.926637]],[[-0.671032,9.818968,5.249288,-4.971902,5.644915,0.253827,-6.594793,5.718387,8.494849,-4.912535,-5.689859,-9.794608,8.948375,-7.758375],[-3.164557,3.554155,-5.610774,8.171089,6.362718,-3.011079,-0.606586,6.743598,8.860394,-2.229414,-0.121208,-3.293494,3.903283,0.333694],[7.340599,-4.413425,-8.281250,8.420375,-4.427163,-3.689742,-8.907513,8.963953,6.731154,-4.085541,2.302182,6.727575,1.404179,-7.329853],[-0.302384,3.904222,-7.741606,0.434879,6.731977,0.757678,-2.284889,7.093630,-5.643971,0.375332,-5.815809,-2.034065,1.987091,3.796462]],[[5.395355,9.169725,8.707066,-4.398632,-7.293799,-0.330282,-4.147679,6.711657,-6.616480,9.347851,8.191041,-6.435488,-1.740197,3.495321],[-1.967747,-8.087451,5.622540,9.817326,-7.390867,-4.704830,1.139476,-3.237883,-9.021311,-5.200901,0.577606,5.144449,4.014701,-6.190018],[-2.797077,5.296804,-0.321149,-4.825302,8.893175,-3.327030,8.432038,-1.064180,1.585379,-0.960617,-8.059400,-0.529844,4.510303,7.779523],[5.508680,-4.539656,2.002727,-3.741896,-3.483163,6.523585,-5.678035,6.098878,-3.642025,5.225955,1.565337,2.994578,-5.119588,5.470619]],[[7.223788,-4.066147,-4.089700,-6.708893,-8.999060,5.993079,-1.112918,-2.740251,-3.705396,-5.280041,1.004372,-9.115477,-0.742687,8.879997],[-3.271706,-2.324385,6.082988,-9.453977,1.677907,5.806967,-8.978007,-2.663414,-4.756211,3.632257,7.006976,4.950890,4.016976,0.613912],[-2.908868,7.747184,5.523711,-7.637069,-8.439349,-1.433459,-9.601185,-0.364895,-3.504732,8.652370,9.656338,3.491459,-1.038980,-1.558404],[-4.206798,7.522900,-0.194378,5.876886,-1.195714,-4.751081,6.156810,2.415881,-5.285987,-4.201550,-9.250352,5.689254,-7.373362,-8.599146]],[[-6.750626,0.059171,-7.239170,1.248416,0.158098,-3.864421,-9.908209,-2.012071,0.454052,4.999210,4.256426,-9.580978,8.602973,-2.759389],[-0.400238,1.252870,5.543214,-6.806655,0.731834,-9.982184,-6.463617,6.911806,7.797110,-1.846646,8.625308,-1.922386,8.909731,-2.197022],[3.029761,8.349265,-8.973617,-2.069732,2.436894,2.930020,-5.807386,7.121080,9.899494,9.212716,-2.433088,3.673915,-8.591587,3.753352],[2.383130,-7.858477,-9.524237,-6.304124,-3.815262,-5.406731,2.709987,8.968754,2.994678,5.584637,0.989803,2.920229,-4.153437,3.569325]]], dtype = "float32")#candidate|166|(13, 4, 14)|const|float32
bop_167 = relay.floor_mod(var_165.astype('float32'), relay.reshape(const_166.astype('float32'), relay.shape_of(var_165))) # shape=(13, 4, 14)
output = relay.Tuple([bop_167,])
output2 = relay.Tuple([bop_167,])
func_175 = relay.Function([var_165,], output)
mod['func_175'] = func_175
mod = relay.transform.InferType()(mod)
var_176 = relay.var("var_176", dtype = "float32", shape = (13, 4, 14))#candidate|176|(13, 4, 14)|var|float32
output = func_175(var_176)
func_177 = relay.Function([var_176], output)
mutated_mod['func_177'] = func_177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_261 = relay.var("var_261", dtype = "float64", shape = (1, 6, 13))#candidate|261|(1, 6, 13)|var|float64
uop_262 = relay.erf(var_261.astype('float64')) # shape=(1, 6, 13)
bop_267 = relay.bitwise_or(uop_262.astype('uint16'), relay.reshape(var_261.astype('uint16'), relay.shape_of(uop_262))) # shape=(1, 6, 13)
bop_274 = relay.greater(uop_262.astype('bool'), relay.reshape(bop_267.astype('bool'), relay.shape_of(uop_262))) # shape=(1, 6, 13)
uop_283 = relay.acosh(uop_262.astype('float64')) # shape=(1, 6, 13)
func_175_call = mod.get_global_var('func_175')
func_177_call = mutated_mod.get_global_var('func_177')
var_288 = relay.var("var_288", dtype = "float32", shape = (728,))#candidate|288|(728,)|var|float32
call_287 = relay.TupleGetItem(func_175_call(relay.reshape(var_288.astype('float32'), [13, 4, 14])), 0)
call_289 = relay.TupleGetItem(func_177_call(relay.reshape(var_288.astype('float32'), [13, 4, 14])), 0)
func_175_call = mod.get_global_var('func_175')
func_177_call = mutated_mod.get_global_var('func_177')
call_293 = relay.TupleGetItem(func_175_call(relay.reshape(var_288.astype('float32'), [13, 4, 14])), 0)
call_294 = relay.TupleGetItem(func_177_call(relay.reshape(var_288.astype('float32'), [13, 4, 14])), 0)
var_296 = relay.var("var_296", dtype = "float64", shape = (3, 6, 13))#candidate|296|(3, 6, 13)|var|float64
bop_297 = relay.less_equal(uop_283.astype('bool'), var_296.astype('bool')) # shape=(3, 6, 13)
func_175_call = mod.get_global_var('func_175')
func_177_call = mutated_mod.get_global_var('func_177')
call_305 = relay.TupleGetItem(func_175_call(relay.reshape(call_287.astype('float32'), [13, 4, 14])), 0)
call_306 = relay.TupleGetItem(func_177_call(relay.reshape(call_287.astype('float32'), [13, 4, 14])), 0)
output = relay.Tuple([bop_274,call_287,var_288,call_293,bop_297,call_305,])
output2 = relay.Tuple([bop_274,call_289,var_288,call_294,bop_297,call_306,])
func_311 = relay.Function([var_261,var_288,var_296,], output)
mod['func_311'] = func_311
mod = relay.transform.InferType()(mod)
var_312 = relay.var("var_312", dtype = "float64", shape = (1, 6, 13))#candidate|312|(1, 6, 13)|var|float64
var_313 = relay.var("var_313", dtype = "float32", shape = (728,))#candidate|313|(728,)|var|float32
var_314 = relay.var("var_314", dtype = "float64", shape = (3, 6, 13))#candidate|314|(3, 6, 13)|var|float64
output = func_311(var_312,var_313,var_314,)
func_315 = relay.Function([var_312,var_313,var_314,], output)
mutated_mod['func_315'] = func_315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_621 = relay.var("var_621", dtype = "float64", shape = (2, 11, 5))#candidate|621|(2, 11, 5)|var|float64
uop_622 = relay.erf(var_621.astype('float64')) # shape=(2, 11, 5)
bop_630 = relay.logical_and(uop_622.astype('bool'), relay.reshape(var_621.astype('bool'), relay.shape_of(uop_622))) # shape=(2, 11, 5)
uop_641 = relay.acos(uop_622.astype('float64')) # shape=(2, 11, 5)
bop_651 = relay.divide(uop_641.astype('float32'), relay.reshape(var_621.astype('float32'), relay.shape_of(uop_641))) # shape=(2, 11, 5)
uop_654 = relay.log(var_621.astype('float64')) # shape=(2, 11, 5)
output = relay.Tuple([bop_630,bop_651,uop_654,])
output2 = relay.Tuple([bop_630,bop_651,uop_654,])
func_661 = relay.Function([var_621,], output)
mod['func_661'] = func_661
mod = relay.transform.InferType()(mod)
var_662 = relay.var("var_662", dtype = "float64", shape = (2, 11, 5))#candidate|662|(2, 11, 5)|var|float64
output = func_661(var_662)
func_663 = relay.Function([var_662], output)
mutated_mod['func_663'] = func_663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1095 = relay.var("var_1095", dtype = "float32", shape = (5, 4, 15))#candidate|1095|(5, 4, 15)|var|float32
var_1096 = relay.var("var_1096", dtype = "float32", shape = (5, 4, 15))#candidate|1096|(5, 4, 15)|var|float32
bop_1097 = relay.power(var_1095.astype('float32'), relay.reshape(var_1096.astype('float32'), relay.shape_of(var_1095))) # shape=(5, 4, 15)
output = relay.Tuple([bop_1097,])
output2 = relay.Tuple([bop_1097,])
func_1100 = relay.Function([var_1095,var_1096,], output)
mod['func_1100'] = func_1100
mod = relay.transform.InferType()(mod)
var_1101 = relay.var("var_1101", dtype = "float32", shape = (5, 4, 15))#candidate|1101|(5, 4, 15)|var|float32
var_1102 = relay.var("var_1102", dtype = "float32", shape = (5, 4, 15))#candidate|1102|(5, 4, 15)|var|float32
output = func_1100(var_1101,var_1102,)
func_1103 = relay.Function([var_1101,var_1102,], output)
mutated_mod['func_1103'] = func_1103
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1135 = relay.const(-9.437235, dtype = "float32")#candidate|1135|()|const|float32
var_1136 = relay.var("var_1136", dtype = "float32", shape = (15, 8, 12))#candidate|1136|(15, 8, 12)|var|float32
bop_1137 = relay.floor_mod(const_1135.astype('float32'), var_1136.astype('float32')) # shape=(15, 8, 12)
uop_1161 = relay.acos(bop_1137.astype('float32')) # shape=(15, 8, 12)
output = uop_1161
output2 = uop_1161
func_1176 = relay.Function([var_1136,], output)
mod['func_1176'] = func_1176
mod = relay.transform.InferType()(mod)
var_1177 = relay.var("var_1177", dtype = "float32", shape = (15, 8, 12))#candidate|1177|(15, 8, 12)|var|float32
output = func_1176(var_1177)
func_1178 = relay.Function([var_1177], output)
mutated_mod['func_1178'] = func_1178
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1186 = relay.const([[[-4,-10,-9,5,-4,3,1,6,-9,7,10,4,-2],[2,7,-8,2,7,-9,-9,7,10,-9,-6,-1,-8],[4,7,-3,4,4,-1,7,10,-2,-10,-9,9,-9],[6,-5,-3,6,-4,6,-1,9,-9,-3,4,-5,6],[-5,2,9,3,2,-4,-5,1,8,4,-5,-4,9],[6,2,-8,7,10,7,4,1,-8,-8,-8,3,4],[2,-8,7,4,4,-6,-1,-8,2,-8,10,7,-6],[-4,8,7,-7,-2,-9,-4,10,5,-6,2,5,-1],[9,-4,-5,-4,-8,3,-9,2,1,2,-5,5,-2],[-9,10,-1,-8,-3,-3,5,9,-9,-1,6,-6,-7],[5,-10,10,3,9,-8,9,9,-8,5,10,-8,4],[7,2,1,-6,4,2,6,3,8,5,6,-2,1],[-9,-5,2,-5,5,-4,8,-7,-7,-2,8,4,7],[-5,5,1,6,6,-7,6,6,-3,10,-3,-4,7],[4,5,1,10,-9,-9,6,-7,-6,-5,3,-7,9],[-7,-6,6,8,-3,3,-5,6,-9,9,7,7,10]],[[-1,10,-6,2,-5,-3,-2,-2,-2,7,-2,10,10],[-9,-1,-6,3,-2,-5,2,-5,-1,-1,-1,-1,-1],[-3,-6,-10,10,3,4,2,-6,2,-4,-3,3,-9],[5,3,3,-6,-10,4,-8,8,5,-7,6,9,8],[7,3,6,-6,-5,6,9,-8,8,2,-9,5,-7],[7,10,-7,-7,-3,-10,3,-9,7,-4,3,-10,-7],[1,4,10,-6,-9,9,3,10,-2,-9,3,-1,10],[1,8,-10,10,8,7,2,7,3,-5,5,7,10],[-1,-9,6,4,7,-4,-10,-9,-8,-5,4,7,9],[9,-10,-6,-2,4,6,-10,4,2,-8,-10,-1,3],[3,3,6,9,-2,8,9,-10,2,8,5,9,-10],[-2,-4,-4,-9,-10,-10,-2,4,-6,4,10,5,-1],[9,-6,8,9,6,-10,4,-9,-9,-7,-1,-7,-9],[10,-6,-6,10,3,-1,4,8,2,6,-6,-2,-1],[8,-7,-5,-10,-9,-6,-8,1,-3,-7,-10,1,-10],[-2,-2,7,-1,6,3,-10,4,-3,7,2,-8,-1]],[[7,4,-10,2,-1,3,-3,-9,7,-9,5,3,-6],[4,-5,-10,-6,4,3,10,-2,8,-2,-4,-6,9],[-6,7,-9,-6,3,-1,-2,-7,-8,1,-9,-9,-5],[1,-7,5,3,7,-3,8,-9,-9,3,-8,-4,-5],[7,6,-7,3,5,9,-2,-4,9,2,-3,3,-6],[9,9,3,-7,7,-5,-10,-2,2,9,-10,-8,-8],[-3,6,-1,1,8,7,-4,1,-7,-2,4,-3,-10],[1,5,-8,10,2,-9,-1,-9,-2,3,4,4,10],[-2,1,8,-9,-9,3,-10,-1,8,-6,10,-1,3],[4,-3,-7,9,-6,-8,-10,-1,8,-10,2,3,-6],[-8,-8,2,8,8,10,-1,-6,3,-8,1,-8,5],[10,10,10,4,-8,-2,4,4,-9,2,6,3,2],[9,6,3,-3,3,10,-3,-6,9,-7,3,9,-3],[-3,-10,10,-6,-5,-2,2,4,-3,-4,-4,-8,-5],[-8,8,-9,8,7,-9,2,-4,4,2,-9,7,-3],[-6,3,-3,6,-2,4,4,-6,8,7,-4,9,-1]],[[2,-4,8,-7,-1,-1,4,2,3,-1,7,9,-1],[-6,-1,-9,-4,8,-2,4,5,-10,1,9,6,-3],[9,-8,4,-3,1,-8,4,1,-10,9,4,-6,-9],[-7,7,9,-1,-10,-3,2,2,10,-5,-2,-10,2],[-10,9,7,6,7,2,4,-4,5,-10,-9,5,-5],[-1,-9,9,5,-1,-3,8,4,-7,-4,-7,1,5],[10,-4,-6,10,-9,-7,8,-9,-6,-10,-7,-1,9],[7,7,-2,2,2,2,-5,4,7,1,10,1,10],[-6,-8,-10,7,-6,4,6,8,-9,-8,5,2,3],[3,-3,-3,-5,6,-5,1,-3,-1,-3,6,2,-5],[-1,-4,1,8,2,5,-2,1,5,1,8,-6,3],[-3,5,-3,-6,-1,-6,-5,10,-4,-10,-2,-10,4],[4,-9,1,3,1,-4,-5,-8,-6,1,-2,10,1],[-8,4,-9,3,7,-1,3,8,-2,2,6,-4,6],[4,-9,-8,8,-8,-2,6,-6,2,2,7,-5,-6],[9,-9,-6,-10,2,10,2,6,3,-5,-2,10,-9]],[[7,-6,-6,-3,-9,-10,1,-7,-1,-1,2,2,4],[-6,-7,9,-10,7,1,3,-6,-9,6,-10,-2,5],[-6,1,10,-4,4,-10,-10,10,-6,3,7,-1,-5],[-9,3,-3,2,8,-3,8,-6,2,7,9,-7,7],[2,9,10,-8,-4,3,7,10,6,7,-6,9,-3],[7,1,-5,4,4,-4,9,3,3,-3,-10,-1,-10],[8,-2,-8,-2,-5,-3,3,-4,-2,-4,-5,5,-2],[-7,-3,-1,8,1,-4,-6,2,-9,1,-1,-6,-5],[3,-1,6,9,-6,-10,6,2,-2,9,2,-8,-1],[3,5,-10,-10,5,-10,-7,7,-3,-7,-2,-3,-5],[-1,7,4,-3,10,9,-6,-7,-1,3,10,-2,10],[7,9,8,5,-3,-7,-7,-10,6,3,2,-8,3],[-10,-6,-2,-4,5,10,9,-2,-2,1,5,7,1],[-3,6,-6,2,-7,-4,-5,2,10,1,-10,-1,4],[-8,-8,-2,-7,-7,-5,4,-5,-2,7,8,-9,-1],[9,-10,2,5,9,8,-6,-1,-6,-4,3,-1,-1]],[[-2,-7,9,-7,-10,7,6,3,-5,1,-3,-1,7],[-2,-8,9,-5,-3,2,-1,8,8,-7,-9,1,8],[-8,10,7,-8,-6,5,1,4,-7,-6,7,8,-6],[-6,-7,-2,7,4,3,-9,7,2,9,1,-3,8],[4,5,2,-6,8,-8,9,7,2,-5,-7,6,3],[3,-8,-7,8,2,-5,-1,-8,6,-8,1,10,-10],[-1,4,-6,3,7,-4,-3,-4,-5,-9,-3,10,9],[-5,7,7,-10,5,7,9,7,-8,-2,-9,9,-1],[7,8,-5,7,8,4,-3,5,-5,4,8,4,-8],[8,-3,2,2,-5,4,-1,-4,-10,1,8,8,2],[8,7,-1,3,-5,3,6,-4,-2,1,-9,-4,4],[10,6,1,8,-9,-4,2,-7,7,-4,6,-8,-1],[-7,9,9,-7,-1,-10,-6,-7,-1,-10,-5,4,9],[-5,-6,-4,-5,6,2,10,2,2,9,8,2,8],[6,7,1,-10,10,10,7,-9,1,-10,-9,1,-4],[8,9,-3,8,-10,-6,8,6,-1,-5,-10,2,-9]],[[4,1,-1,6,-4,6,-1,-3,-9,-2,8,-8,8],[1,-9,4,-2,-5,-3,4,-10,-1,9,9,-4,2],[8,7,7,-7,6,-2,-6,3,8,9,10,-2,-4],[6,3,2,-10,-9,-4,-5,-8,3,6,3,3,-5],[-2,3,-9,5,-9,-5,-5,7,-9,-2,-1,-10,10],[4,-7,-6,5,4,8,-8,-8,7,-5,3,-7,2],[-1,-7,-8,-4,-10,-4,10,1,-1,9,1,-1,8],[-2,-10,-5,1,-9,4,3,-4,1,9,5,2,-9],[10,1,5,-3,10,-5,-9,-9,8,7,3,7,3],[-1,-8,9,-10,5,4,8,7,6,-8,9,6,-9],[7,10,1,-6,-10,4,5,-5,9,-6,7,-2,-4],[-2,-10,-1,10,-6,3,-8,7,4,1,-5,-3,7],[-1,-8,10,7,-2,7,-10,-2,7,5,-2,-7,8],[-5,1,2,9,-6,9,-10,-2,4,-2,-4,-6,2],[-9,3,1,8,-10,-5,-2,1,-6,4,-8,1,-5],[-6,3,-1,6,-10,1,-10,-2,-1,8,6,3,-2]],[[-10,-10,8,-8,-3,-5,-2,-10,7,-6,-7,-3,-1],[8,9,-2,7,-4,7,7,-10,2,9,6,4,-5],[1,7,-7,5,-9,4,10,-8,-9,-8,7,-2,-4],[4,-4,-10,-9,8,-1,1,-9,-3,-3,7,-8,-5],[-7,-1,7,10,6,-8,-6,-8,-9,-7,4,-9,-3],[-2,-1,5,-4,-10,4,6,-1,-5,-1,4,-2,8],[2,-6,4,-7,-5,-3,-1,-1,3,4,-2,-1,-2],[2,-7,-1,-10,6,-4,-8,-5,7,-4,-2,-8,10],[-5,-10,5,2,-2,3,-1,5,3,-2,4,6,-10],[2,-5,5,-3,-7,-8,-2,-4,-4,5,-10,-3,-9],[-2,3,-3,9,9,-8,-2,3,-5,-2,-10,-6,8],[-3,6,7,7,3,5,8,7,-8,-2,-1,-6,10],[1,-10,9,9,-7,5,-6,-6,10,7,-9,-6,-6],[1,-2,-7,-4,4,-2,9,1,5,-2,-8,-4,-2],[10,5,-7,-7,7,1,-2,-5,10,-8,-7,8,-4],[4,1,-1,3,8,-4,8,10,-5,8,1,-1,9]],[[-9,-9,-3,-1,10,9,1,5,4,-9,7,-9,3],[1,8,-3,-8,2,-9,10,-6,-5,6,-4,-5,9],[8,-5,9,-6,7,-3,-6,-8,7,-6,-7,-2,1],[7,3,-8,-3,4,10,-6,3,-3,4,6,9,4],[3,1,2,-1,-2,-7,-1,-7,-3,7,-2,-5,-2],[-6,2,-7,6,10,3,-4,-10,10,-2,-2,7,10],[-10,6,5,10,-5,-2,-4,2,4,10,9,-5,6],[5,-7,-5,-10,-8,6,-2,-5,-2,7,-6,-10,-4],[8,-9,7,8,-8,2,7,-3,-7,3,-9,1,-9],[-4,-5,9,10,-6,1,-2,10,-9,3,9,6,2],[-9,9,1,-8,-6,8,6,-2,1,-7,9,7,7],[1,-9,9,7,-5,-5,-3,-3,-6,6,-5,-1,7],[8,3,-9,9,7,-6,-9,-3,8,-5,8,8,-9],[-2,-5,2,10,-9,10,-6,7,3,3,-10,3,-1],[-9,6,4,-8,-4,2,-6,4,-8,-2,2,-1,-1],[-7,-8,-7,9,-5,-1,2,5,-1,5,-6,-8,8]],[[-6,-9,9,1,-8,6,-2,-10,4,-10,8,-10,1],[-3,-6,10,-9,-9,7,-8,10,2,-5,-7,-8,7],[-2,-6,3,-1,2,3,10,-10,3,4,5,7,10],[-8,3,-4,-2,-8,-10,8,-10,-3,-2,-9,-4,8],[1,-7,1,9,3,-1,-4,4,7,5,-10,8,-3],[6,-2,-5,2,-3,-9,1,6,9,-2,-5,2,6],[10,5,-3,-1,9,-7,9,-8,-2,10,-10,9,9],[-10,-4,6,-10,-7,4,-7,3,-6,4,1,-2,4],[-10,-3,-5,-4,7,2,1,-2,7,-9,-3,-3,10],[3,-4,3,1,7,-9,6,-10,-3,8,-7,-7,5],[5,9,1,9,-10,-1,10,-7,-8,-3,1,-1,-3],[6,-7,10,-1,7,-2,9,-1,-10,-8,-10,-2,-7],[10,4,6,-5,-2,-5,5,-5,10,-6,-4,-4,7],[-3,6,2,7,1,-5,-6,-1,-2,-5,-3,10,-8],[8,-9,5,-4,1,6,1,3,4,-4,2,-3,-2],[-4,4,1,5,6,1,2,5,1,-7,-1,4,8]]], dtype = "int64")#candidate|1186|(10, 16, 13)|const|int64
const_1187 = relay.const([[[10,7,-10,-8,-2,-10,-8,-4,-1,5,8,6,2],[-8,4,-4,-1,-10,-3,-5,-1,-7,-5,10,-7,5],[-4,9,1,-6,-3,1,1,-6,-2,-9,-5,4,5],[-5,6,8,-3,6,6,-10,2,2,3,-6,-8,-5],[-1,-2,-2,9,-7,8,5,5,-5,10,-4,-1,-10],[-9,-1,-1,5,9,10,-5,-4,-8,-6,10,-6,9],[3,-7,6,-3,-4,1,10,5,7,-7,-3,-2,8],[2,-2,-3,10,10,-8,5,9,-1,8,-9,8,-8],[2,1,3,3,-2,-2,10,10,-7,2,-3,-7,9],[-5,-3,-9,4,5,1,3,-6,-10,9,4,7,3],[9,10,-5,6,-10,3,6,3,5,3,-3,10,2],[-7,10,-8,2,-8,5,-7,10,10,7,3,9,5],[-10,-3,9,-3,2,7,-1,2,-8,2,-8,-3,-8],[-9,4,-1,9,9,6,6,-5,-3,-9,-4,-6,6],[-3,-9,7,9,3,10,-6,9,-2,9,1,4,8],[8,6,-8,-5,1,-6,-7,-10,1,5,7,9,5]],[[-9,10,8,-1,-4,-5,-9,-4,5,-6,-8,3,8],[-3,6,-5,-8,2,4,2,4,8,-4,-10,6,7],[10,-9,8,5,1,-8,-8,-7,-4,2,-8,3,3],[-10,7,4,7,-8,-5,-10,-7,-5,9,-5,1,-4],[8,-1,-1,1,-10,9,-8,4,-2,-10,-3,3,-9],[6,6,10,-7,8,-4,10,-3,1,6,7,-10,-8],[-5,6,9,-3,1,-10,4,8,6,2,-5,-5,10],[2,10,-4,2,7,1,-8,-3,1,-8,-5,-7,8],[-10,4,2,2,7,-6,-4,-10,-3,7,9,-5,-7],[1,-9,-7,-9,-1,-8,-4,-6,5,1,7,6,-4],[-2,-9,-3,-4,-9,-3,3,-1,8,-7,6,-6,-9],[-5,-7,-7,-7,-1,-7,3,7,6,2,10,-3,-4],[-10,7,5,2,10,4,-6,-8,-1,8,-10,7,-2],[-2,5,3,8,3,-2,7,4,9,-6,10,-1,5],[-1,-3,-9,-7,3,-8,-3,-6,5,9,5,-7,9],[10,8,-1,-6,-3,1,9,-1,7,-7,-1,6,-2]],[[-7,4,10,6,-7,-6,-3,-10,-6,-10,-8,-3,8],[9,-3,5,-4,6,10,10,8,4,3,-8,3,-10],[-3,-7,-6,-4,-9,-6,7,5,-3,7,-10,-7,-5],[2,2,-10,-4,5,3,-8,8,5,8,-3,6,-4],[-2,-7,-5,4,2,10,3,7,-7,-10,9,-10,-7],[7,6,-10,-2,5,10,5,-5,10,-2,-6,10,-4],[1,-5,1,-4,3,5,-2,5,10,-6,6,-3,-2],[9,-4,10,-1,6,7,8,5,-7,2,9,-3,6],[-10,2,-7,4,6,-9,-9,8,6,-5,-7,-7,8],[10,-10,3,-5,-4,7,-6,-1,9,-1,-5,-3,5],[5,-9,-10,6,-5,-2,5,-7,-1,3,-9,2,-1],[6,-7,6,-4,7,-5,-4,2,-5,1,7,-6,-5],[-7,4,4,-4,2,5,6,-10,4,3,1,3,9],[-5,2,-9,-9,-7,-4,5,10,10,3,4,3,5],[7,-5,10,3,-3,3,7,4,10,7,-3,-3,-8],[-6,-8,6,-3,-4,-2,8,-1,-7,10,2,-5,1]],[[10,4,3,-1,-5,8,10,2,9,9,-9,-10,10],[-3,3,-10,-8,-2,-6,-3,2,8,3,5,-8,-4],[3,-9,6,-7,-4,5,-3,2,-2,10,-6,7,6],[1,-8,-2,9,-3,1,-7,7,6,8,7,5,-5],[6,10,6,6,8,-5,1,-3,6,-9,9,2,5],[9,-9,-1,-6,6,6,-8,-2,-3,-2,7,-6,2],[-2,-5,6,-9,8,-1,-2,-8,1,-3,10,-7,-2],[-2,-1,-4,-9,-9,2,-1,7,5,-8,-10,-1,-3],[-10,-5,5,1,-2,-8,-5,-5,7,9,5,-5,-9],[4,-7,4,7,10,-7,-9,-9,7,8,-2,7,8],[5,6,6,7,5,1,-9,8,-5,4,-8,7,-4],[-10,10,4,1,3,-10,-3,10,-10,8,-6,7,-4],[-4,10,9,10,7,-9,5,-8,-10,1,6,10,1],[4,9,-4,10,-10,5,-10,-7,-1,-1,-9,-9,-3],[-4,-6,1,5,-7,-3,-5,5,7,2,-4,-8,1],[8,-8,2,3,8,-7,6,-4,-2,3,8,-5,-4]],[[3,-6,9,-2,-4,-10,-4,1,-3,-9,5,5,1],[8,2,-8,5,-9,9,-3,8,10,-4,-7,-7,4],[-10,-9,-2,10,2,1,4,-2,-1,-6,8,5,6],[-9,-8,6,-5,8,4,3,6,3,-4,-2,2,6],[-3,-2,-10,-3,-7,6,-2,1,-4,3,-8,9,3],[-7,-9,-5,-1,-3,-1,9,3,-1,-2,2,7,-4],[-4,-5,4,2,-4,-8,-7,5,-5,-7,2,3,10],[-7,-3,-2,-6,3,-10,5,-3,8,-4,-7,1,-7],[-4,6,8,-1,-8,9,1,-6,-9,6,4,4,-8],[6,7,-2,-4,4,-4,4,-9,6,8,-2,2,1],[-1,3,5,9,-1,-4,-3,-8,5,-9,-8,6,-8],[3,4,6,-6,-5,8,-7,-8,5,-1,-8,-6,3],[-3,-8,-7,1,-2,9,5,2,-9,-4,10,-6,-10],[-7,3,-10,9,7,6,9,6,7,1,5,-10,7],[-8,-3,9,-7,-2,-9,3,-8,6,9,7,-3,7],[8,-7,-7,10,-3,10,1,5,4,6,8,-1,-3]],[[-3,7,-4,-5,-2,6,-2,2,1,3,-3,-5,-9],[2,10,-8,-2,10,10,7,-10,5,-5,6,-8,1],[8,-10,-9,-6,-8,9,-7,-5,8,10,-8,4,10],[7,-10,9,4,-4,-4,1,7,3,1,-3,-4,9],[-8,5,-2,5,-1,-10,6,10,-8,-1,9,1,3],[-10,-6,7,1,-1,-4,-5,-1,-2,2,-6,-10,-5],[2,-10,-9,10,-9,-1,-10,-5,9,9,-8,-6,2],[-1,10,3,2,-8,4,-8,6,-7,-4,-1,4,-2],[1,-3,1,-7,-7,-6,2,10,2,10,1,-4,-10],[7,-3,6,-8,-8,2,3,-4,10,3,-3,-2,-2],[-2,6,-9,8,4,7,5,-5,3,-8,-9,6,-10],[6,5,3,-2,9,-3,-5,-3,3,2,-4,-7,3],[-1,-7,-9,3,1,-1,-6,-6,9,8,-8,7,6],[-6,-4,-9,9,5,9,1,-3,-4,-3,8,6,2],[-6,3,-2,6,-7,10,1,3,7,-1,-4,-1,-7],[-7,-6,6,-9,3,7,7,4,-9,7,4,-4,4]],[[10,-5,4,-2,2,-10,9,2,5,-2,-9,2,3],[-7,1,-4,-7,-1,-2,9,5,7,-7,1,-8,-8],[4,-2,8,-3,-3,3,8,8,9,8,-1,5,3],[9,-9,-10,-9,-9,4,-7,10,6,1,2,5,3],[4,-3,4,-10,-9,7,5,-4,-9,-7,-8,-1,-8],[1,10,9,-2,10,-4,-2,-1,10,4,-4,-4,3],[5,-5,6,6,1,-1,10,10,2,-9,-10,10,5],[-8,6,-5,7,3,7,1,-7,-3,-4,4,-5,-2],[4,-1,-5,-1,2,1,5,5,5,2,-10,2,-7],[1,-9,-7,4,-5,-6,-9,2,10,-6,-9,-2,-5],[-5,-6,3,-4,-10,-7,-10,-5,-9,-7,-6,8,3],[-7,10,7,8,8,1,-6,-5,-7,-7,1,7,-7],[-6,-9,4,-4,-7,-10,4,-8,1,8,-1,1,9],[6,-10,1,9,5,-3,10,9,4,-9,10,8,-6],[-3,9,-8,8,-7,6,-8,-1,-1,10,10,-5,8],[-1,-3,7,5,-8,8,-3,-6,3,1,6,5,-3]],[[-1,8,-6,-8,-7,5,-9,-6,-2,4,-9,3,-2],[-3,-6,-6,5,-8,2,-9,1,8,6,8,3,7],[10,-4,-8,1,-1,3,-10,8,9,8,1,1,-2],[-7,-5,-8,4,-9,-7,10,-9,8,6,-1,5,-6],[-9,-6,-7,5,9,7,5,8,8,2,3,-9,7],[-5,-1,-9,-9,9,-9,-10,-10,-4,4,-7,-9,2],[-10,-10,-10,9,5,2,-4,2,7,-4,8,2,-9],[4,7,-2,6,-3,-7,10,2,-8,2,2,9,-8],[5,8,-8,-3,-10,-1,-7,5,-9,-7,-6,7,-2],[-9,6,-9,7,6,4,10,4,-2,-8,-4,1,-9],[-4,-5,7,1,-9,-6,-10,2,2,7,5,-7,-6],[1,-2,-4,-7,5,3,7,6,8,8,9,-2,-5],[4,10,-3,-9,1,3,2,-2,-6,7,-4,10,-7],[-1,-3,-7,-8,-9,10,-10,-1,9,-1,-8,-7,10],[2,-3,-1,9,1,-3,3,-4,9,-3,4,-4,10],[5,7,-1,7,9,8,-2,-3,8,8,-10,5,-7]],[[-3,6,-3,3,8,10,-7,3,-6,-2,1,-9,-1],[6,-10,5,-2,-9,3,6,7,7,4,7,7,10],[-1,-9,-8,10,-5,-5,7,-3,-7,4,-4,8,-2],[-7,4,9,10,10,2,-6,-7,6,-7,6,8,8],[10,-10,-10,-1,6,-4,9,-4,3,8,3,4,10],[5,-10,10,10,-2,6,-7,-5,-1,-4,-7,-5,9],[-6,-9,4,6,7,-6,5,7,3,-6,-6,5,1],[9,5,-5,10,1,6,-10,3,-9,-3,-2,2,-5],[4,-8,-3,1,6,1,10,2,9,-10,-7,3,-5],[6,-4,8,2,4,-5,-3,1,-7,-6,-8,10,-7],[6,6,-6,1,-3,7,6,-1,6,-2,-10,9,-7],[-10,4,-3,-9,4,-9,-5,-5,-10,-4,2,4,7],[2,-9,5,-5,1,1,-6,5,-1,10,3,-9,-2],[6,-6,10,-1,8,-2,-6,2,3,2,3,-10,-1],[4,9,4,2,10,-9,-4,-10,-1,-9,4,1,2],[1,-1,-7,4,-1,-3,8,8,8,-6,10,3,-10]],[[-3,-2,7,9,6,2,-1,-8,-7,-10,8,9,-6],[-1,10,5,4,-10,-3,-8,-2,8,-3,-10,7,-7],[9,8,7,-4,3,-10,-9,8,7,10,6,7,-6],[-10,-8,-7,7,2,-7,10,-6,-8,1,6,4,1],[3,9,-4,2,8,-9,-7,8,5,-7,-8,-7,-3],[-9,6,4,6,9,-4,4,-2,-8,3,-6,-4,1],[-8,-3,1,5,-9,-9,4,-9,-8,-2,-5,3,6],[6,10,4,-8,-8,-8,-6,-4,6,-10,-8,-5,3],[1,-7,3,9,-3,-3,9,-9,2,5,-8,-6,5],[1,2,-1,-7,-10,-6,-6,-3,1,8,-10,-3,8],[8,-4,-6,7,8,-3,-8,7,-5,4,-2,9,-5],[2,-5,-1,-6,8,-9,-2,-2,-4,-1,6,-6,1],[5,1,8,-8,-6,6,6,-4,6,4,2,-2,-2],[8,-9,7,-8,6,2,6,4,9,-3,-7,-10,1],[-10,4,1,10,-10,6,5,-1,3,-4,9,-7,8],[-5,6,10,-9,9,-6,-10,8,-4,5,2,7,6]]], dtype = "int64")#candidate|1187|(10, 16, 13)|const|int64
bop_1188 = relay.bitwise_or(const_1186.astype('int64'), relay.reshape(const_1187.astype('int64'), relay.shape_of(const_1186))) # shape=(10, 16, 13)
output = relay.Tuple([bop_1188,])
output2 = relay.Tuple([bop_1188,])
func_1191 = relay.Function([], output)
mod['func_1191'] = func_1191
mod = relay.transform.InferType()(mod)
mutated_mod['func_1191'] = func_1191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mutated_mod.get_global_var('func_1191')
call_1192 = func_1191_call()
output = call_1192
func_1193 = relay.Function([], output)
mutated_mod['func_1193'] = func_1193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_1251 = relay.TupleGetItem(func_1191_call(), 0)
call_1252 = relay.TupleGetItem(func_1193_call(), 0)
func_311_call = mod.get_global_var('func_311')
func_315_call = mutated_mod.get_global_var('func_315')
const_1257 = relay.const([-1.217232,-6.660228,5.668379,3.622934,2.330525,5.414735,8.292892,-5.832941,2.817904,-1.926684,5.869787,6.120662,-4.720836,8.785001,9.548438,7.742890,-5.184530,7.402815,-0.935774,-3.547330,7.696184,4.324299,-9.030371,-4.337660,-7.745251,-9.236362,9.271356,0.546517,5.128751,3.859500,9.260995,1.041159,5.468836,5.458885,8.945097,2.351231,-4.998969,0.477185,2.247710,-9.888093,3.563002,3.630733,-2.247968,-7.809513,-7.648568,-3.604978,-9.698858,8.329910,-8.379497,-1.367134,-4.908575,-0.058449,-5.034370,4.356497,-6.409425,2.038066,-5.817194,-3.354037,-0.381548,4.258148,-2.771776,-3.215429,5.986358,-6.974604,0.050620,0.884020,0.474849,-1.907492,-8.431866,1.447296,7.452063,-9.205885,5.664024,-9.149316,5.524848,-8.926705,5.434034,-2.233050], dtype = "float64")#candidate|1257|(78,)|const|float64
var_1258 = relay.var("var_1258", dtype = "float32", shape = (728,))#candidate|1258|(728,)|var|float32
const_1259 = relay.const([-9.193606,3.570117,5.398355,1.937195,6.431258,9.171398,-5.359133,-5.478714,7.130041,6.320643,-3.088781,4.489052,1.216094,-5.402892,5.906507,6.164937,1.275841,-0.794996,4.501267,1.202454,5.315914,1.989876,-6.479836,9.677750,7.466590,-9.308597,1.699849,-1.797677,9.113279,2.393709,1.604933,-9.960869,9.386179,2.508697,-5.194461,-0.813988,3.968190,4.165370,6.210129,7.809599,-5.000615,-8.073613,2.615444,-8.792985,9.497675,-0.183992,-1.129585,1.084066,4.420055,-2.513702,4.969820,-4.738292,-9.155795,-2.432586,-8.839915,-8.871424,0.024096,-6.762066,-5.461868,-7.098761,3.474624,-9.006662,1.514906,2.888473,-6.126728,4.351435,-1.891595,3.668228,5.572508,7.957056,7.236332,-9.186161,-8.400816,-4.044462,6.176862,2.881764,6.612395,-3.468776,9.286067,5.370657,2.853757,-8.540324,-3.947774,5.676649,2.040166,-2.536362,-7.025877,-6.307799,0.651410,6.288680,8.637184,5.416554,-2.860140,7.848802,-0.494724,-0.776867,9.075032,2.118649,-5.455921,-2.594745,7.275280,-7.808022,5.315361,3.749478,6.941506,-7.370853,3.317879,3.123786,1.518492,6.978031,-3.556000,-2.113418,-4.402202,1.794512,-2.140776,2.911236,-6.291823,5.450341,-5.680807,9.844955,-7.185255,-5.698197,3.389857,0.421662,-5.414398,-5.419492,-8.452558,2.492935,7.845629,7.592434,-3.182185,3.275791,0.186236,-7.946994,3.506886,8.025732,3.870702,7.985497,-3.527376,-6.399545,-2.650206,5.397831,7.585034,9.202356,1.155131,-8.960950,2.632146,1.144321,-5.624033,-3.662210,2.440004,8.840207,1.812596,1.853135,-2.487201,8.241407,1.375657,6.656704,5.817951,5.133718,-0.131259,-0.392287,2.376167,-4.825873,0.458352,-6.608688,-8.230343,-7.225449,-9.470425,1.587993,7.304934,8.223141,5.737864,3.896766,-1.674962,-4.407160,-8.451131,-4.250871,-3.413746,5.910503,-7.669761,-9.190250,-2.158078,-2.471373,-3.601854,7.817549,-3.523852,-7.406738,0.313825,-5.237043,-6.481919,-1.376517,2.479111,3.044811,9.795188,-8.374831,-4.261881,0.987378,1.512006,9.459667,3.827363,0.152890,-1.001230,-5.455963,5.015685,2.583632,1.009246,-9.390649,-3.558632,-8.354140,-8.662874,8.078843,5.308817,1.808118,9.165232,-9.329777,0.346057,-3.225365,-2.159301,-6.743034,-7.836728,1.165009,3.723346,-5.624235,1.340798,-1.807052,1.592778,-8.449239,-8.392295,0.811669,7.634390,-2.115652,0.642326,-2.450909], dtype = "float64")#candidate|1259|(234,)|const|float64
call_1256 = relay.TupleGetItem(func_311_call(relay.reshape(const_1257.astype('float64'), [1, 6, 13]), relay.reshape(var_1258.astype('float32'), [728,]), relay.reshape(const_1259.astype('float64'), [3, 6, 13]), ), 1)
call_1260 = relay.TupleGetItem(func_315_call(relay.reshape(const_1257.astype('float64'), [1, 6, 13]), relay.reshape(var_1258.astype('float32'), [728,]), relay.reshape(const_1259.astype('float64'), [3, 6, 13]), ), 1)
func_661_call = mod.get_global_var('func_661')
func_663_call = mutated_mod.get_global_var('func_663')
const_1266 = relay.const([-2.320200,4.935756,-4.562974,-4.368173,-4.815998,0.254680,-9.337339,2.414577,-2.440707,8.701010,9.945954,-2.015468,5.742724,-5.692715,-4.245713,-5.711303,2.072688,6.630790,7.613471,-5.000675,-1.258194,-3.850695,5.179969,-8.685374,-6.908817,-4.232151,6.871068,-3.423658,-4.167305,9.778221,7.103138,-0.086576,7.593686,-1.408256,9.845030,-3.146125,6.777115,-7.358097,3.246948,-7.353168,-8.968502,8.079188,0.387783,7.388665,9.727204,2.765725,-0.371539,2.256703,5.841131,-8.258828,-3.406003,-6.346240,-9.283620,-5.533595,1.436143,8.108647,0.042709,1.019169,-0.433173,9.053914,6.642186,-1.774792,-9.967062,-0.515809,1.446655,-0.312687,3.125282,0.906472,8.044846,1.595691,6.623545,8.661980,-0.677947,6.919895,8.927552,-3.461229,4.064892,-1.882053,-6.119124,3.089468,5.070926,-2.631501,5.393969,-1.164883,9.261284,4.404858,-9.229558,-9.105740,-1.434225,6.138868,-7.167837,-2.764183,-4.188905,3.740657,3.831356,4.116388,-2.812863,-4.251227,3.003108,-4.443843,-4.289789,9.698308,-4.553919,9.809625,-7.447252,-7.997109,-8.493329,-7.920840,5.950237,-5.101842], dtype = "float64")#candidate|1266|(110,)|const|float64
call_1265 = relay.TupleGetItem(func_661_call(relay.reshape(const_1266.astype('float64'), [2, 11, 5])), 2)
call_1267 = relay.TupleGetItem(func_663_call(relay.reshape(const_1266.astype('float64'), [2, 11, 5])), 2)
output = relay.Tuple([call_1251,call_1256,const_1257,var_1258,const_1259,call_1265,const_1266,])
output2 = relay.Tuple([call_1252,call_1260,const_1257,var_1258,const_1259,call_1267,const_1266,])
func_1274 = relay.Function([var_1258,], output)
mod['func_1274'] = func_1274
mod = relay.transform.InferType()(mod)
var_1275 = relay.var("var_1275", dtype = "float32", shape = (728,))#candidate|1275|(728,)|var|float32
output = func_1274(var_1275)
func_1276 = relay.Function([var_1275], output)
mutated_mod['func_1276'] = func_1276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_1292 = relay.TupleGetItem(func_1191_call(), 0)
call_1293 = relay.TupleGetItem(func_1193_call(), 0)
output = call_1292
output2 = call_1293
func_1299 = relay.Function([], output)
mod['func_1299'] = func_1299
mod = relay.transform.InferType()(mod)
output = func_1299()
func_1300 = relay.Function([], output)
mutated_mod['func_1300'] = func_1300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1332 = relay.var("var_1332", dtype = "uint8", shape = (5, 13, 4))#candidate|1332|(5, 13, 4)|var|uint8
var_1333 = relay.var("var_1333", dtype = "uint8", shape = (5, 13, 4))#candidate|1333|(5, 13, 4)|var|uint8
bop_1334 = relay.left_shift(var_1332.astype('uint8'), relay.reshape(var_1333.astype('uint8'), relay.shape_of(var_1332))) # shape=(5, 13, 4)
bop_1343 = relay.minimum(bop_1334.astype('float64'), relay.reshape(var_1333.astype('float64'), relay.shape_of(bop_1334))) # shape=(5, 13, 4)
output = relay.Tuple([bop_1343,])
output2 = relay.Tuple([bop_1343,])
func_1349 = relay.Function([var_1332,var_1333,], output)
mod['func_1349'] = func_1349
mod = relay.transform.InferType()(mod)
mutated_mod['func_1349'] = func_1349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1349_call = mutated_mod.get_global_var('func_1349')
var_1351 = relay.var("var_1351", dtype = "uint8", shape = (5, 13, 4))#candidate|1351|(5, 13, 4)|var|uint8
var_1352 = relay.var("var_1352", dtype = "uint8", shape = (5, 13, 4))#candidate|1352|(5, 13, 4)|var|uint8
call_1350 = func_1349_call(var_1351,var_1352,)
output = call_1350
func_1353 = relay.Function([var_1351,var_1352,], output)
mutated_mod['func_1353'] = func_1353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1299_call = mod.get_global_var('func_1299')
func_1300_call = mutated_mod.get_global_var('func_1300')
call_1404 = func_1299_call()
call_1405 = func_1299_call()
output = call_1404
output2 = call_1405
func_1408 = relay.Function([], output)
mod['func_1408'] = func_1408
mod = relay.transform.InferType()(mod)
mutated_mod['func_1408'] = func_1408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1408_call = mutated_mod.get_global_var('func_1408')
call_1409 = func_1408_call()
output = call_1409
func_1410 = relay.Function([], output)
mutated_mod['func_1410'] = func_1410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_1419 = relay.TupleGetItem(func_1191_call(), 0)
call_1420 = relay.TupleGetItem(func_1193_call(), 0)
uop_1430 = relay.rsqrt(call_1419.astype('float32')) # shape=(10, 16, 13)
uop_1432 = relay.rsqrt(call_1420.astype('float32')) # shape=(10, 16, 13)
var_1434 = relay.var("var_1434", dtype = "int64", shape = (10, 16, 13))#candidate|1434|(10, 16, 13)|var|int64
bop_1435 = relay.left_shift(call_1419.astype('int32'), relay.reshape(var_1434.astype('int32'), relay.shape_of(call_1419))) # shape=(10, 16, 13)
bop_1438 = relay.left_shift(call_1420.astype('int32'), relay.reshape(var_1434.astype('int32'), relay.shape_of(call_1420))) # shape=(10, 16, 13)
output = relay.Tuple([uop_1430,bop_1435,])
output2 = relay.Tuple([uop_1432,bop_1438,])
func_1439 = relay.Function([var_1434,], output)
mod['func_1439'] = func_1439
mod = relay.transform.InferType()(mod)
mutated_mod['func_1439'] = func_1439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1440 = relay.var("var_1440", dtype = "int64", shape = (10, 16, 13))#candidate|1440|(10, 16, 13)|var|int64
func_1439_call = mutated_mod.get_global_var('func_1439')
call_1441 = func_1439_call(var_1440)
output = call_1441
func_1442 = relay.Function([var_1440], output)
mutated_mod['func_1442'] = func_1442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1408_call = mod.get_global_var('func_1408')
func_1410_call = mutated_mod.get_global_var('func_1410')
call_1454 = func_1408_call()
call_1455 = func_1408_call()
output = call_1454
output2 = call_1455
func_1469 = relay.Function([], output)
mod['func_1469'] = func_1469
mod = relay.transform.InferType()(mod)
mutated_mod['func_1469'] = func_1469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1469_call = mutated_mod.get_global_var('func_1469')
call_1470 = func_1469_call()
output = call_1470
func_1471 = relay.Function([], output)
mutated_mod['func_1471'] = func_1471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_1607 = relay.TupleGetItem(func_1191_call(), 0)
call_1608 = relay.TupleGetItem(func_1193_call(), 0)
uop_1625 = relay.cos(call_1607.astype('float32')) # shape=(10, 16, 13)
uop_1627 = relay.cos(call_1608.astype('float32')) # shape=(10, 16, 13)
uop_1638 = relay.tan(uop_1625.astype('float32')) # shape=(10, 16, 13)
uop_1640 = relay.tan(uop_1627.astype('float32')) # shape=(10, 16, 13)
output = uop_1638
output2 = uop_1640
func_1643 = relay.Function([], output)
mod['func_1643'] = func_1643
mod = relay.transform.InferType()(mod)
output = func_1643()
func_1644 = relay.Function([], output)
mutated_mod['func_1644'] = func_1644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1469_call = mod.get_global_var('func_1469')
func_1471_call = mutated_mod.get_global_var('func_1471')
call_1667 = func_1469_call()
call_1668 = func_1469_call()
const_1669 = relay.const([[[5,5,5,9,-8,-1,2,10,-1,-7,6,-7,-7],[3,-3,-7,-4,-6,-2,2,-1,4,9,1,10,6],[7,-3,2,-8,-4,5,-7,-5,-6,-9,-2,-10,9],[-10,9,-7,9,-1,-3,8,-5,-5,6,3,9,-8],[-7,1,-10,-6,-6,5,10,8,6,3,1,-6,-10],[-10,1,7,8,3,-10,9,2,3,10,7,9,9],[-10,8,6,-6,-8,6,-4,4,-9,-9,-6,5,8],[-4,-4,9,-2,3,-7,-4,5,-10,10,-10,-6,-10],[-5,-10,6,2,-9,-3,9,8,8,-10,-3,-9,-4],[-1,-10,-5,-3,10,1,1,-2,-2,2,-9,-1,1],[-9,6,-1,-4,-6,-8,3,10,9,-3,-8,1,4],[-10,1,10,4,-3,-3,-6,7,-1,1,4,5,-10],[-4,-2,-3,5,4,3,-3,4,3,-8,5,1,-3],[7,-6,-8,10,-1,2,6,-3,-7,7,-4,-1,-1],[2,-4,8,-2,8,5,9,2,3,-1,-9,7,-8],[-6,-5,-5,10,-1,-3,-5,2,1,-7,7,3,10]],[[-4,7,8,-1,2,-10,-9,3,4,3,7,9,6],[-7,4,10,2,10,-1,-3,-8,5,5,-9,5,7],[5,7,-4,2,-10,5,-10,-4,-5,5,-1,1,8],[7,2,-5,-3,-10,-7,-6,5,-10,8,7,10,-7],[2,-9,1,-4,-1,2,1,5,-6,-4,-4,-5,8],[-4,-6,9,2,-10,5,6,3,2,-1,4,7,8],[4,-4,7,-1,10,1,-10,-6,5,1,-1,-3,-1],[8,9,-1,-1,-7,2,9,10,7,3,6,-5,-5],[3,9,-7,2,-2,10,8,2,-5,-4,-3,8,-2],[3,3,-6,-7,10,9,-9,7,-6,7,6,1,7],[-9,-9,9,-2,9,9,-10,-10,-3,2,10,-4,8],[-7,10,-2,-8,1,2,-2,-1,4,9,10,5,-3],[-2,10,-7,-8,2,5,10,9,-1,-2,1,-2,2],[-4,6,9,-4,-7,-5,-9,4,7,2,-5,-7,7],[-2,2,-3,-8,4,6,-8,1,7,-10,-4,4,-5],[2,3,-1,8,-9,-10,7,-6,-3,5,10,6,4]],[[9,9,-6,-7,8,-6,-1,-7,-3,6,7,-6,7],[-6,-5,4,-10,-7,2,7,-2,-8,9,-6,10,-4],[5,-1,3,3,10,2,-10,8,5,-4,10,1,-7],[-4,1,4,-7,8,4,9,-9,-4,2,-3,-7,1],[2,7,-1,6,6,-9,7,-4,-9,3,-4,8,-8],[10,-1,3,4,-3,-10,8,1,10,3,6,-4,1],[-7,3,-2,-3,5,6,-5,-6,-8,-2,2,-6,5],[-8,-3,7,5,-9,3,10,7,7,5,-8,8,3],[-1,4,10,-3,10,-5,1,4,6,-4,-9,7,-6],[8,-5,3,-9,10,-8,4,-6,-5,-5,-5,-2,-5],[1,7,-9,1,-6,-9,-3,6,-5,-1,9,10,-2],[4,3,5,1,1,-8,3,-9,1,-5,-3,-5,-3],[-8,-8,-9,4,-2,-8,-2,-3,3,6,-2,4,-6],[-10,-1,7,8,-2,8,9,-9,-4,-7,-3,5,-2],[10,4,5,9,5,-7,-1,-9,9,10,-6,8,1],[4,5,-3,-4,-1,9,4,5,-8,-2,-7,9,-6]],[[-4,-8,10,-1,2,1,10,-4,3,-6,1,5,5],[4,-1,-8,-7,-2,-2,3,8,9,-8,-1,-1,9],[3,7,8,-1,-2,-6,7,7,10,1,-5,-5,3],[4,-3,8,-7,-3,4,3,-2,6,-6,9,2,3],[-10,10,6,-7,-9,4,-10,2,-4,-2,4,6,-1],[-6,-4,-10,-9,8,-6,-4,-10,2,9,5,-9,-10],[5,6,2,8,-3,2,1,-7,5,-4,10,-4,-2],[-2,8,-5,-7,-10,3,5,-8,-7,-7,8,6,6],[9,-4,-10,1,6,10,7,2,-10,7,4,-5,-8],[2,4,-9,7,-4,-10,3,-3,1,5,-3,10,10],[-3,4,9,-7,-3,8,2,5,8,-9,-2,-4,-4],[1,6,8,10,3,10,-2,6,3,3,9,-7,-4],[-9,-8,-3,6,2,-9,8,10,1,10,-4,-7,-10],[-8,-7,6,1,10,2,-5,4,7,-5,-9,-10,6],[-2,3,-1,9,-5,5,-8,2,-5,-4,-1,8,-9],[4,7,-5,5,1,9,6,-4,10,8,-1,8,-9]],[[-6,5,-5,5,9,9,8,-9,-9,-8,6,4,-1],[6,-10,-8,-1,4,-10,-7,10,4,-5,2,-10,8],[2,1,-5,-3,-1,3,-2,7,5,2,2,-3,8],[3,-10,5,1,3,10,-2,7,-2,-4,2,5,-7],[1,-3,7,-9,5,7,8,5,-8,-9,-4,-5,-10],[-10,-2,-9,6,1,8,-10,-4,10,-1,-9,3,5],[9,-8,6,3,4,8,-5,-5,1,-7,-6,-6,-3],[-7,3,4,1,-2,-9,-2,8,-4,3,8,-9,-8],[4,-2,-8,-1,-1,4,6,-7,-10,9,3,5,-5],[9,-9,-8,2,8,-7,3,-6,9,3,-9,7,3],[3,5,10,-1,2,2,9,5,10,5,-7,10,-8],[-4,-8,4,-4,9,-2,3,-10,-9,-4,7,4,-10],[4,-2,-8,9,3,7,-2,-9,9,-8,6,9,2],[2,6,9,-1,-4,7,-4,7,-8,-10,-3,1,-7],[9,-7,-2,8,-2,-9,10,-3,-9,9,-10,6,6],[-8,-1,3,3,-10,8,2,-7,-4,-4,-7,-4,10]],[[-5,-6,6,-5,-1,6,8,-8,5,8,-10,-2,7],[-9,6,-5,-8,2,-4,-10,7,10,3,2,7,4],[10,6,-5,-8,-6,4,5,7,-4,6,-6,-7,-4],[9,-10,-1,-8,10,3,6,3,3,-5,9,1,1],[10,6,-8,5,9,8,4,3,-8,-5,7,10,2],[3,3,-1,-3,-8,6,-9,-1,2,-5,-1,4,-3],[-7,4,10,-3,1,-9,4,5,3,3,-1,9,2],[8,-7,-8,3,4,-9,-8,2,7,7,4,-6,-3],[-5,-2,4,4,10,-8,4,-6,-10,7,6,-7,-6],[2,-1,-8,9,5,9,-9,-1,-1,10,2,-6,9],[1,-2,9,8,10,4,3,5,9,2,-10,9,-2],[9,9,1,-3,8,8,-10,9,8,-5,7,-6,6],[-2,7,5,6,-3,6,10,10,10,-6,5,-5,6],[4,9,-1,4,-8,5,3,-1,-6,2,8,-5,3],[6,-8,-7,6,2,-8,-7,-7,2,-2,10,-3,3],[6,-4,8,4,4,-10,-7,10,-1,6,1,8,1]],[[9,-2,-3,-10,5,1,-4,1,7,-6,-5,-8,-5],[-9,10,2,-3,-4,1,5,4,5,1,1,4,-7],[-6,-2,-3,3,10,-5,-10,-9,-4,4,10,-7,-5],[-1,10,8,2,-7,10,8,-7,-4,3,5,10,7],[-1,3,5,-3,-3,-10,-10,1,9,1,-4,3,8],[7,9,10,-8,-4,-10,-7,9,-9,4,-10,-3,9],[5,5,9,-3,-5,8,7,-8,8,-9,3,-5,-2],[-2,-5,-10,-2,-4,-6,9,2,-5,-9,6,-10,-6],[7,-2,8,3,4,4,10,-8,8,10,-7,9,-9],[5,1,2,5,-8,7,-8,5,-10,-1,1,-6,-9],[7,-8,2,4,5,3,2,-4,-1,2,4,10,10],[7,2,8,-2,6,2,-9,-7,-8,2,-10,6,-10],[5,8,-1,1,2,5,-10,10,-2,-8,1,-10,9],[7,-3,8,7,3,-2,1,6,8,8,7,-6,1],[-10,-10,2,-4,6,-2,7,-9,10,3,-8,3,8],[6,-4,1,9,-2,-1,-5,-10,8,-10,10,-8,7]],[[3,-2,9,-7,6,-6,-1,5,9,-9,-6,-10,-5],[-8,1,-1,-7,-9,4,1,8,-4,-10,-3,8,7],[8,-10,-6,-7,4,-5,-2,1,-2,5,-2,1,5],[-8,-5,-7,-2,7,3,-9,4,2,-10,-2,-3,-4],[-6,-4,6,-6,-9,-5,7,-3,6,9,-5,5,-2],[-10,6,2,7,-2,10,-8,-8,3,3,-8,-7,-10],[-8,10,4,6,1,1,-6,5,-1,-8,-3,6,5],[8,1,-6,3,-10,3,-6,-6,6,-9,9,-3,-1],[-7,4,-3,6,8,-6,8,-7,-3,-9,9,-2,-4],[10,-7,-6,2,-6,2,-10,4,3,-1,6,3,-5],[-9,-3,-8,-2,6,9,8,2,7,-10,9,6,-4],[-5,8,-3,7,-1,1,-9,-3,-6,4,-1,-3,4],[4,3,2,9,10,-6,8,-3,3,7,-10,7,2],[-7,-10,-6,-10,-4,-8,2,-3,-6,-8,-9,1,-8],[-8,7,4,-4,6,9,-10,2,-8,-6,3,-3,9],[1,-9,-2,-4,6,4,2,-1,-10,6,8,6,-6]],[[-6,-9,10,-4,9,-5,-5,-10,-2,-3,-3,-5,-4],[-2,9,-9,-4,9,-8,-2,-8,-9,7,-6,-10,-5],[9,-2,5,3,-4,8,-1,-4,1,-6,-3,6,4],[1,8,-9,-6,-1,-8,6,7,10,2,-8,9,3],[-1,-2,-10,1,8,6,2,8,2,-2,7,-8,5],[3,-2,-4,7,9,10,5,1,-6,1,-5,-6,-3],[-6,-4,-6,4,5,-10,5,-10,-1,-7,-8,-5,6],[1,6,7,-4,-4,-9,-8,-6,7,-10,-8,-1,3],[-9,8,8,-7,5,8,-8,10,9,-4,-8,8,-5],[1,1,-7,4,-6,-9,9,-1,-1,-7,8,9,-3],[-10,-9,5,-3,5,9,-7,4,-1,8,-7,-1,-10],[-2,-9,-9,6,-4,-7,-1,6,4,6,9,-8,-9],[8,3,7,8,-2,4,5,9,6,-6,2,8,-5],[-5,-6,10,-4,-3,-8,-8,-9,6,-2,-6,9,-3],[-10,-8,9,-10,8,10,-2,-5,-5,-9,-5,8,4],[-6,-6,3,-9,2,4,5,-1,4,-10,-4,-1,-1]],[[1,-2,3,-7,6,-4,-1,-2,-10,7,-2,7,-1],[10,5,6,1,1,7,-3,-10,-7,5,5,6,9],[2,-3,8,-5,-3,8,-1,7,1,-3,7,1,1],[7,8,7,-1,-3,2,-1,8,-10,-2,-9,5,5],[3,-3,-2,2,-6,9,9,-8,7,7,-1,-6,-2],[-6,-8,10,-7,-8,3,10,-2,9,-9,2,6,-1],[6,2,4,-6,10,-8,1,7,-9,-5,4,-10,-1],[-10,4,6,1,-8,7,-9,-10,-4,-4,-4,8,2],[5,4,8,5,-7,2,8,-3,1,-1,-1,-1,6],[6,7,5,-3,6,-4,3,-3,-7,4,7,4,-8],[3,-7,-7,10,-4,3,-3,-9,1,8,7,-4,-7],[-6,-9,5,-6,-10,9,6,-4,-9,10,-5,9,5],[-9,7,-2,-7,9,-2,8,9,-1,-1,4,5,9],[4,-1,2,-10,8,-3,-4,8,-9,-9,6,-3,-6],[-6,-10,-10,2,3,-3,-4,8,5,10,-9,2,7],[-7,-4,7,5,4,10,-9,2,10,3,1,-8,-5]]], dtype = "int64")#candidate|1669|(10, 16, 13)|const|int64
bop_1670 = relay.right_shift(call_1667.astype('uint32'), relay.reshape(const_1669.astype('uint32'), relay.shape_of(call_1667))) # shape=(10, 16, 13)
bop_1673 = relay.right_shift(call_1668.astype('uint32'), relay.reshape(const_1669.astype('uint32'), relay.shape_of(call_1668))) # shape=(10, 16, 13)
output = relay.Tuple([bop_1670,])
output2 = relay.Tuple([bop_1673,])
func_1677 = relay.Function([], output)
mod['func_1677'] = func_1677
mod = relay.transform.InferType()(mod)
output = func_1677()
func_1678 = relay.Function([], output)
mutated_mod['func_1678'] = func_1678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_1681 = func_1643_call()
call_1682 = func_1643_call()
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_1712 = relay.TupleGetItem(func_1191_call(), 0)
call_1713 = relay.TupleGetItem(func_1193_call(), 0)
func_661_call = mod.get_global_var('func_661')
func_663_call = mutated_mod.get_global_var('func_663')
const_1721 = relay.const([[-5.001205,-9.860455,-2.979507,1.012047,4.812686,-7.308936,-8.507200,8.927996,5.473597,2.980792],[-7.988709,-8.675319,5.829525,-4.237583,4.621448,9.066077,6.182971,-9.536110,-5.858515,-0.084192],[-8.423522,-8.880482,3.897178,1.489924,-6.736927,9.604642,4.781124,-3.293212,2.098955,4.833833],[4.647129,-1.368797,-5.001586,-0.843064,-9.282375,-0.592604,3.966820,-5.109044,9.226175,3.096631],[-3.617695,-9.904700,-0.737371,6.865751,8.877543,0.530712,6.539356,4.946232,-1.012688,-2.515401],[-3.486848,6.981154,0.296509,4.924601,6.885258,2.928353,3.360058,-2.710709,-7.680835,3.309830],[-8.220601,-3.129315,-5.427395,3.125526,6.490658,2.851161,3.828544,1.588508,-0.951107,3.591225],[0.730545,-6.334487,-4.636004,6.980866,-7.770867,-4.787505,4.798999,-4.277116,-9.279205,-6.874822],[3.744516,6.167952,4.655459,8.877853,9.763744,3.409607,6.965519,4.059460,-5.234234,-2.235098],[2.249277,9.438541,2.876423,-6.063921,-6.103829,3.096251,9.641440,-2.302912,0.714852,-6.555953],[-3.892886,-2.087575,3.905948,5.649462,-6.556836,-4.279055,-2.176235,-6.123810,4.800125,0.198425]], dtype = "float64")#candidate|1721|(11, 10)|const|float64
call_1720 = relay.TupleGetItem(func_661_call(relay.reshape(const_1721.astype('float64'), [2, 11, 5])), 0)
call_1722 = relay.TupleGetItem(func_663_call(relay.reshape(const_1721.astype('float64'), [2, 11, 5])), 0)
func_661_call = mod.get_global_var('func_661')
func_663_call = mutated_mod.get_global_var('func_663')
call_1733 = relay.TupleGetItem(func_661_call(relay.reshape(const_1721.astype('float64'), [2, 11, 5])), 2)
call_1734 = relay.TupleGetItem(func_663_call(relay.reshape(const_1721.astype('float64'), [2, 11, 5])), 2)
func_1408_call = mod.get_global_var('func_1408')
func_1410_call = mutated_mod.get_global_var('func_1410')
call_1736 = func_1408_call()
call_1737 = func_1408_call()
output = relay.Tuple([call_1681,call_1712,call_1720,const_1721,call_1733,call_1736,])
output2 = relay.Tuple([call_1682,call_1713,call_1722,const_1721,call_1734,call_1737,])
func_1745 = relay.Function([], output)
mod['func_1745'] = func_1745
mod = relay.transform.InferType()(mod)
output = func_1745()
func_1746 = relay.Function([], output)
mutated_mod['func_1746'] = func_1746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1299_call = mod.get_global_var('func_1299')
func_1300_call = mutated_mod.get_global_var('func_1300')
call_1769 = func_1299_call()
call_1770 = func_1299_call()
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_1780 = relay.TupleGetItem(func_1677_call(), 0)
call_1781 = relay.TupleGetItem(func_1678_call(), 0)
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_1784 = relay.TupleGetItem(func_1677_call(), 0)
call_1785 = relay.TupleGetItem(func_1678_call(), 0)
func_1176_call = mod.get_global_var('func_1176')
func_1178_call = mutated_mod.get_global_var('func_1178')
const_1792 = relay.const([[-0.330871,7.388231,2.765369,-4.446181,9.108677,-6.416396,6.820030,-2.326988,-7.051345,4.436277,6.696312,0.884837,0.976775,8.827450,3.547265,-4.543001,-0.180709,2.758062,7.035015,5.809236,-2.230131,-2.986923,1.518435,-7.764453,7.112015,-2.562219,-8.105962,-5.060536,7.542031,-1.685939,1.721932,-5.416872,-3.581018,7.700796,5.251925,2.019385,-6.980602,9.115113,-2.655650,9.184973,-9.581463,-9.626574,6.749651,-5.219252,5.266729,-2.735392,9.919396,-2.766111,-4.682971,-0.116982,-1.010231,4.579106,7.219256,2.348256,-4.465415,9.395099,-8.807464,0.961143,-7.942834,-8.675859,-2.558697,-0.425013,2.247618,-2.144643,-6.311439,-1.329768,-3.411238,-9.307539,-5.261529,9.256262,-2.016795,2.481774,7.173433,1.054686,-5.474753,0.686871,-9.797689,9.770681,-9.782268,6.651373,-0.046196,-7.536622,3.676066,-6.572988,-3.613274,-8.857647,-2.711703,4.757883,-5.531282,5.064427,6.844924,-9.147806,-3.206400,3.507520,2.670918,1.964452,-5.429458,-9.529177,-4.325661,-6.760208,-5.715217,-0.683666,-7.698445,-8.483057,-5.111021,-0.005180,-8.170277,7.216614,-6.106813,-8.175958,4.472930,3.525735,2.384950,9.416330,-6.550902,-5.217710,-6.849567,6.469443,-6.305663,0.564089,5.153238,-9.030137,-6.047064,-1.109034,7.416429,-9.327998,-4.483339,-9.890286,7.025338,-5.758935,2.889940,9.516774,8.314288,9.431469,-3.894242,-4.659594,-3.770106,-6.281140,-8.761362,2.301310,9.487797,-7.293582,8.374228,4.467330,-8.393164,-6.790002,-0.109457,8.217931,-9.644830,5.029187,5.816710,-6.310850,0.646862,3.234250,5.779011,4.180580,-6.309304,-5.076948,-6.533923,2.436804,1.957510,1.069505,7.414390,7.724454,0.833130,-0.510358,-2.084234,-0.511925,1.263055,7.005921,-3.284123,0.969638,-1.417229,-1.986579,2.204060,7.488515,8.185843,-6.922765,5.063527,-8.982681,3.815184,-6.534640,1.308259,4.162171,-3.686041,4.053264,3.599974,7.460514,-3.233193,-9.390596,6.138013,4.022017,-0.721584,0.099128,0.531215,-8.057092,7.887650,4.669996,1.285690,3.661058,2.777533,-7.609159,-0.523399,5.584113,7.566281,-7.512701,8.473428,3.098675,-7.623371,-9.368250,-7.441332,-6.163608,5.307644,-6.152905,-5.612449,-1.042027,-8.444261,-1.999281,-9.013430,-0.249706,2.801977,1.690356,-2.660364,2.504760,7.047190,-9.082005,-5.211601,0.877680,-9.811308,2.168811,-8.632158,2.443370,-1.390910,6.974792,0.995441,1.205148,-5.651282,6.941648,8.487368,6.528618,-7.112162,7.493693,-0.406867,-4.829467,-0.482748,9.196531,3.890789,-5.902495,-7.131346,4.060597,4.864408,9.777485,5.532863,-7.441420,4.587250,1.158871,3.945519,-7.097514,-0.614203,4.509222,-2.133398,1.721807,8.791601,-1.470616,9.978482,9.594478,-0.798394,-8.289894,5.940801,-8.931646,8.598733,4.953749,-0.947616,-5.277368,-3.539870,-4.602752,2.383475,1.417723,4.043170,-3.229107,5.864086,4.692150,-7.050893,9.917968,-3.366277,-9.701194,0.957688,-5.956475,-1.946599,-2.238866,-9.075449,6.048752,-8.610061,-9.791924,-8.315509,-3.315793,-3.222640,4.122849,-5.055991,4.766487,9.024341,-9.870223,0.566051,-4.440096,1.533185,-7.326324,5.261756,8.887395,-2.614689,5.026175,9.727711,-5.115468,0.939987,-9.334413,-5.954959,-9.771715,-0.273914,8.316531,-3.836582,2.491658,-6.609172,6.293899,2.909886,-9.521307,7.521228,3.641679,5.683297,-1.303620,9.112281,-0.098674,-2.871941,2.546272,7.092543,-9.073587,5.036303,-2.092017,-0.623979,7.766178,-7.453009,2.628002,-6.813303,-8.786781,3.460205,-8.168437,-6.524342,-2.764315,-4.308810,1.801638,-5.264011,0.422477,9.725318,-0.590393,8.649551,5.673226,0.951502,1.350016,8.898137,7.268910,1.277496,-1.514372,2.942391,-6.594877,-4.719129,3.366930,-5.459764,-5.562538,-8.902053,8.176287,0.665798,-9.465602,3.667307,-8.980889,6.738769,3.158173,8.400189,-6.138433,9.597155,-1.738206,-2.282128,-5.620366,-8.676530,-9.964365,6.796183,4.225526,9.658739,0.091919,2.965300,5.064761,-3.870826,9.974810,-0.669941,-1.542079,5.051221,-2.759768,-0.192623,-4.869538,2.646499,-0.768299,-3.021676,3.788877,3.766265,-7.548308,-3.721649,0.371414,7.646265,8.510737,2.255708,3.668569,-1.031551,-4.389734,-4.378951,-2.177945,-1.491313,8.895832,-6.486581,-4.213444,7.390400,-7.698567,-6.603328,-5.011439,1.739863,-2.359672,7.116721,5.644499,9.619203,0.164841,-0.195877,7.458246,-0.788054,0.721133,-3.976704,-0.325141,-2.938378,0.156160,-1.582852,-7.589440,1.753584,-2.540670,-6.744186,6.795014,-8.233986,-0.492597,-5.930931,9.088646,-9.147135,6.692313,-8.290561,-9.274415,-4.667613,8.615331,-8.463588,-8.449175,-9.988621,-3.624804,-4.205481,-5.900324,-4.497878,7.967489,5.706739,2.114992,2.885533,-6.319618,-5.930622,2.778528,-5.637185,-5.737463,-3.378319,2.900723,2.718209,-5.597572,4.297976,-9.453576,0.339807,-4.426959,-4.383962,-2.296664,-6.040550,0.659458,5.116678,9.939847,-5.862191,-3.699069,3.638472,9.053047,-5.121240,-1.468686,4.090622,4.516228,1.792977,6.351481,-3.165736,3.556128,-7.647383,5.452486,9.202560,6.445627,-6.940009,5.234513,2.527803,8.805135,-5.142507,2.343400,-2.450256,-7.013415,-4.661449,-5.169996,7.227288,8.157647,-6.914399,6.047088,-4.720881,7.041482,7.321189,-9.343050,-6.137290,-4.031458,5.921304,-0.908908,-2.285734,1.689456,-8.197137,1.740161,-5.375473,4.677964,-5.807597,-1.553368,1.595131,8.431127,-9.724179,-9.515119,5.384848,0.029104,-6.049028,2.960119,-0.549552,-9.345680,-3.962640,-5.359975,-6.386699,6.167342,8.404952,2.239686,-8.562610,3.264777,-3.070329,2.172312,-7.849048,4.093543,-3.516992,0.111418,1.559592,4.886066,-4.730339,-3.040957,6.988843,0.481233,-5.605313,7.530769,9.061619,7.878047,-9.935500,-8.549709,-9.116818,-8.866389,-3.934480,5.234862,5.859114,8.667070,0.037655,-3.914655,3.493505,4.930101,0.865945,-5.540285,0.169748,-0.365277,-5.538621,-5.943113,-6.718397,9.770777,-1.589562,7.996418,1.587942,2.213662,-6.182627,8.914666,6.864459,3.512915,-4.627748,-2.370832,-8.752805,1.957892,1.245816,1.511678,-6.032421,-6.226773,8.151085,-2.036760,-5.260745,2.683662,-9.112000,-5.984429,7.337335,-4.139817,-1.612678,3.614770,3.573667,3.065933,-0.282431,9.534744,-9.655830,-2.339149,0.871727,-4.410523,-0.426414,-5.167086,0.784712,3.860588,6.563696,-9.380208,-6.812720,-2.485759,-9.995612,-5.529641,-2.091065,-9.488107,2.218696,-9.029213,6.471835,-8.696864,1.542974,-8.543373,3.790127,7.686028,0.265929,-4.179878,-2.173890,-5.575969,7.482382,3.996523,-1.925155,-9.248091,-4.987118,-0.087892,6.754165,-4.627255,8.907377,0.898851,-7.164521,7.055076,-3.996785,9.979853,-7.098966,-9.414353,-8.262604,8.950378,8.757749,-7.683218,8.217419,5.635679,5.290553,7.106348,2.350579,3.735770,9.253444,8.223654,6.567710,-3.799797,-3.957224,8.381940,8.958642,2.022069,-8.298893,-7.906319,-9.620998,-1.653795,0.374833,8.032897,8.954080,-1.553748,6.691930,-9.065091,-3.402229,4.843845,7.666214,5.321390,0.183607,5.554991,-1.123437,0.717200,-1.829021,-5.292495,9.581205,-0.574231,5.469875,-4.108013,-4.902451,3.329421,1.665835,-5.417348,7.681353,8.466938,-8.127545,-3.647129,8.235418,-1.919531,1.888488,2.660032,-8.851524,0.448040,9.302482,-5.699910,8.185328,-1.173615,-0.973631,9.374303,5.334912,8.369147,-4.504254,-8.582464],[4.228407,7.400758,-8.624625,-7.716060,-5.015830,-4.490207,8.494166,5.231583,-9.685882,2.389943,-6.374947,-8.682723,-6.496670,-0.447304,8.279428,-5.040443,0.774483,2.288151,-9.372614,-0.045821,-7.544487,-1.023865,3.203831,-1.231253,-3.408532,5.599893,-9.747313,-8.821536,9.498426,8.767050,9.108868,1.256970,2.555403,-1.001218,-9.949983,-7.055638,3.158489,-8.796304,1.249077,-0.472798,4.332212,-1.440587,7.157185,-7.693844,9.519620,1.911981,1.140016,9.537827,-8.462812,-6.520271,-1.407125,4.228117,-0.338973,0.421516,-9.718569,4.607140,0.512846,6.066156,-0.389401,2.303742,-7.755136,-6.315636,9.224804,-5.652360,-8.516498,1.482774,-1.539863,-4.355130,-6.608541,-6.648256,-6.313308,-8.573645,9.219824,-7.950870,0.511548,-5.440431,0.197952,1.187740,-1.985468,-2.465470,2.012699,-1.749710,-0.533920,-9.651467,-7.634356,4.969245,-3.285894,-6.461126,7.756662,1.405632,-5.130694,-8.860875,-3.669544,-4.860597,-3.291918,2.663185,-6.482730,4.238886,7.655499,-8.879249,-9.396192,-4.765557,7.041316,-7.187694,9.970047,-1.097194,7.811789,4.569016,-8.657482,8.134141,-6.363144,-1.195996,-4.562294,3.691518,1.524794,1.623997,7.987446,-3.999885,-4.111997,-0.970111,-5.412655,2.535539,7.597835,-0.839781,-6.501603,-8.708492,-4.687884,-2.003185,-5.035899,-0.945737,4.650971,8.418007,6.935713,2.759398,3.261512,-9.610960,-9.419373,2.554245,-2.824077,-4.557825,4.928562,-5.642852,6.268205,-1.773008,-0.568092,-9.430666,-3.902368,7.347157,6.760821,8.452076,-7.525096,8.969095,0.981067,-5.588676,-3.941575,4.986365,-9.358328,0.661059,-0.687670,0.542637,9.479920,-2.859659,-1.943417,9.416833,-4.977501,-6.194186,-5.804057,-5.894051,-0.858347,-6.220467,2.835169,4.838021,3.034706,5.493322,-5.293912,-5.877372,-2.664815,-5.295813,-3.164447,6.757940,-8.954266,1.590357,1.256424,5.783796,4.278285,-2.712256,9.175087,-9.394006,-8.490385,-7.905868,-2.834261,-4.671611,1.918074,8.976794,5.462826,-4.376753,-7.536135,-2.008880,8.083171,-8.763789,6.915805,9.516757,-3.437511,9.308668,-1.204710,8.299604,5.324650,0.404505,-0.672410,-9.216917,9.241162,-1.521026,4.294033,1.569497,-0.683570,4.148376,-0.883657,-7.221616,-5.088018,-9.237316,4.561140,5.343166,8.989460,1.702766,-0.073180,3.800106,-0.878139,5.450184,9.011941,3.950456,-4.812654,4.856054,8.663524,1.619855,-0.291167,-6.165570,-8.005813,-8.784361,9.749117,1.587635,9.678816,7.842895,-4.198787,5.691861,-9.277097,9.415717,5.677513,1.009340,-9.230139,-1.542921,-3.965204,-3.221096,2.759161,4.788249,-6.002102,-6.066105,2.267530,-9.066662,-7.672092,6.731194,-0.759894,-0.180800,-0.913941,-0.442190,-8.186525,3.679051,-8.354531,9.368752,-2.574517,-5.019799,-3.122509,-6.399683,-9.072533,9.231946,6.799970,8.647278,-9.647474,9.855380,-0.260456,3.946563,9.833348,6.576442,3.909230,9.805837,7.128803,-9.422403,-5.366898,-3.718457,8.469555,2.466641,-7.373986,-4.779013,-1.933096,8.978657,-3.745102,-7.551202,7.123439,0.808870,-9.275356,-6.406431,-1.195661,0.748446,-4.817463,8.380929,-7.240581,-7.412236,-1.024206,2.381484,-5.140893,0.963514,8.507306,-0.808012,2.186422,3.768191,-5.985126,-9.473315,6.239223,9.126281,7.639825,6.738482,-2.756063,-0.485950,6.704000,9.857963,1.548202,-7.572449,-5.265803,9.334402,-5.220400,-7.267994,2.265741,4.110155,-2.086591,-5.469813,7.010914,2.462626,0.612641,-0.635924,2.081734,-3.478836,-4.421983,-1.228865,-5.908154,6.578592,-9.719712,8.681695,-7.548289,-3.302192,-2.619676,-3.969021,7.423676,7.405687,8.812606,0.117459,0.847666,3.084920,-4.322133,0.814744,-0.661146,3.739391,-4.529552,-4.776659,0.862623,0.426625,5.068100,0.852318,-9.740252,6.690851,4.265150,-2.100592,-6.400955,-1.759430,5.226043,4.507159,-0.788513,0.493273,-1.659179,9.008093,-7.055456,1.481236,-5.715366,-6.366625,9.759455,9.070406,-3.296119,7.865518,4.448981,0.882480,8.557410,-1.676783,6.534061,-0.671780,2.805932,8.643729,6.589115,2.682248,-5.033715,-8.950387,2.438700,-5.898688,7.090057,4.555714,9.962858,-7.165361,1.896308,0.739490,-7.092239,-2.372442,2.665002,2.704577,-7.193964,9.373631,4.612965,-2.846767,4.148769,-2.937173,7.332225,6.557213,5.471137,8.208768,3.656810,0.429708,0.660060,8.767653,-4.548141,7.449273,-1.778305,2.070405,-7.265183,-0.964880,-3.477174,-9.338630,-7.353987,-4.058061,1.842323,7.145326,-3.940254,-6.268252,-2.212831,8.785843,0.299359,-0.892850,6.438686,4.498505,8.085652,6.494855,-0.023522,8.028657,8.407903,-4.634205,-6.674333,0.284142,9.487635,-5.130170,-3.469581,-4.134858,-9.387440,9.466048,-4.269324,1.368804,-0.193584,9.036251,-4.627363,-5.204955,-7.524862,7.025039,-2.337988,-8.712250,-6.001284,0.813107,-7.368849,-5.121856,-9.372086,-4.224897,-6.614540,0.959881,-3.951861,-9.573392,4.689447,-6.245076,4.854332,-4.618440,0.284088,2.298385,5.239372,-9.688336,-9.168633,-8.429929,-9.021560,1.522954,-0.815649,4.514754,8.327481,-0.477143,-9.417288,4.905528,-2.562126,9.394581,-9.485364,8.077893,-0.730605,4.266592,9.308862,2.128830,-2.470890,-6.500439,8.665947,1.703104,5.113338,-5.941959,-8.404029,-6.833273,7.160694,-9.626472,-7.919822,-9.785387,5.721008,-1.080734,1.349755,-0.720578,-3.924238,6.261873,3.328945,8.669453,-0.017939,-0.711145,0.270198,9.657868,9.336549,-4.989289,6.260494,-0.941097,-5.513444,3.487263,-9.478988,7.617753,3.216458,3.178983,0.408913,7.077646,-3.477816,-0.584751,-6.497332,-7.481401,-1.579977,-5.156343,7.649063,-0.966391,6.251527,-4.345315,-2.512522,-3.113018,-9.398755,-6.593136,-6.812718,9.795809,1.902034,-6.056342,8.842420,4.791420,5.483040,3.659317,-2.197475,-4.966686,-5.387077,-9.143548,-1.354941,-3.318745,-4.485062,-8.172009,-6.440519,7.276388,-3.937457,-0.419939,-5.421357,6.070095,0.467297,0.551007,-7.109979,0.871846,-2.115442,0.913736,-2.041571,7.799177,-0.199184,-0.003728,4.828405,7.231957,9.375037,7.727021,1.089664,-4.687001,2.112311,5.128699,0.315848,-2.077487,-3.652412,6.251797,9.308337,6.615047,-1.217703,1.980291,5.050266,1.756410,-8.443686,-2.041712,8.696384,-9.278388,-8.054620,0.595038,-0.115608,9.938909,5.059499,8.884832,1.292729,9.015650,-0.990954,5.608244,7.446542,7.980205,7.748455,4.008424,-4.125730,-6.657813,1.072695,-9.057663,4.867461,-2.153344,-7.886408,-3.176407,-2.513647,-3.823701,-6.803008,-7.140928,-0.488366,1.958009,-2.199268,6.747085,-7.420001,9.494439,4.706652,6.304113,-6.600923,5.220766,9.590063,-8.857716,5.022008,4.302855,2.392597,6.189243,1.308594,1.594989,-4.405728,-5.343155,-8.004713,-6.802535,3.632562,5.801327,-5.658731,1.910504,-6.768306,7.581832,-9.540756,2.831406,5.544461,8.447350,8.253569,-5.438454,8.891794,-3.607173,-9.343807,6.025758,-5.904439,5.759525,-1.635325,-1.460798,6.019536,-7.073048,-9.008610,5.480044,5.762139,-5.622723,5.688432,-2.791152,2.972143,9.106274,3.338661,-6.712181,4.387009,-1.501659,-7.114737,-7.497506,7.879798,4.397505,-6.641229,3.768496,7.489539,-0.038279,-3.135218,-0.031318,5.887456,4.874756,-6.422218,-1.141676,-4.525673,3.334256,4.138702,-6.935573,9.916259,5.554728,-0.325053,4.442069,-7.845434,-0.423174,-2.280924,4.497197,-0.968774,-3.021955,-2.369008,-4.351585]], dtype = "float32")#candidate|1792|(2, 720)|const|float32
call_1791 = func_1176_call(relay.reshape(const_1792.astype('float32'), [15, 8, 12]))
call_1793 = func_1176_call(relay.reshape(const_1792.astype('float32'), [15, 8, 12]))
output = relay.Tuple([call_1769,call_1780,call_1784,call_1791,const_1792,])
output2 = relay.Tuple([call_1770,call_1781,call_1785,call_1793,const_1792,])
func_1816 = relay.Function([], output)
mod['func_1816'] = func_1816
mod = relay.transform.InferType()(mod)
mutated_mod['func_1816'] = func_1816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1816_call = mutated_mod.get_global_var('func_1816')
call_1817 = func_1816_call()
output = call_1817
func_1818 = relay.Function([], output)
mutated_mod['func_1818'] = func_1818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_1851 = func_1643_call()
call_1852 = func_1643_call()
func_1176_call = mod.get_global_var('func_1176')
func_1178_call = mutated_mod.get_global_var('func_1178')
var_1855 = relay.var("var_1855", dtype = "float32", shape = (60, 24))#candidate|1855|(60, 24)|var|float32
call_1854 = func_1176_call(relay.reshape(var_1855.astype('float32'), [15, 8, 12]))
call_1856 = func_1176_call(relay.reshape(var_1855.astype('float32'), [15, 8, 12]))
bop_1860 = relay.minimum(call_1854.astype('int32'), relay.reshape(var_1855.astype('int32'), relay.shape_of(call_1854))) # shape=(15, 8, 12)
bop_1863 = relay.minimum(call_1856.astype('int32'), relay.reshape(var_1855.astype('int32'), relay.shape_of(call_1856))) # shape=(15, 8, 12)
uop_1870 = relay.rsqrt(var_1855.astype('float32')) # shape=(60, 24)
output = relay.Tuple([call_1851,bop_1860,uop_1870,])
output2 = relay.Tuple([call_1852,bop_1863,uop_1870,])
func_1874 = relay.Function([var_1855,], output)
mod['func_1874'] = func_1874
mod = relay.transform.InferType()(mod)
var_1875 = relay.var("var_1875", dtype = "float32", shape = (60, 24))#candidate|1875|(60, 24)|var|float32
output = func_1874(var_1875)
func_1876 = relay.Function([var_1875], output)
mutated_mod['func_1876'] = func_1876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1469_call = mod.get_global_var('func_1469')
func_1471_call = mutated_mod.get_global_var('func_1471')
call_1911 = func_1469_call()
call_1912 = func_1469_call()
func_1816_call = mod.get_global_var('func_1816')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_1916 = relay.TupleGetItem(func_1816_call(), 4)
call_1917 = relay.TupleGetItem(func_1818_call(), 4)
output = relay.Tuple([call_1911,call_1916,])
output2 = relay.Tuple([call_1912,call_1917,])
func_1918 = relay.Function([], output)
mod['func_1918'] = func_1918
mod = relay.transform.InferType()(mod)
output = func_1918()
func_1919 = relay.Function([], output)
mutated_mod['func_1919'] = func_1919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_1928 = relay.TupleGetItem(func_1677_call(), 0)
call_1929 = relay.TupleGetItem(func_1678_call(), 0)
output = call_1928
output2 = call_1929
func_1937 = relay.Function([], output)
mod['func_1937'] = func_1937
mod = relay.transform.InferType()(mod)
mutated_mod['func_1937'] = func_1937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1937_call = mutated_mod.get_global_var('func_1937')
call_1938 = func_1937_call()
output = call_1938
func_1939 = relay.Function([], output)
mutated_mod['func_1939'] = func_1939
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1980 = relay.const([[[5,2,5,-7,4,-5,-1,-1,10,8],[-1,4,2,9,-9,5,-6,-6,-6,-6],[-8,-3,7,-7,-4,-2,4,6,-1,1],[3,6,1,-2,8,7,-10,-4,-6,8],[8,6,-4,-9,5,-9,-5,2,10,7],[4,1,-6,-5,-7,-4,-10,10,-3,1],[8,10,6,3,8,3,4,9,10,-4],[-4,-4,1,10,-3,-5,2,8,9,-5],[3,-10,1,-1,-3,10,3,4,9,9],[-7,-7,-10,-9,8,6,10,-2,-7,-4],[6,-10,7,5,7,10,-8,5,1,7]],[[-7,-5,-10,10,8,10,7,4,-3,1],[-3,-6,-9,-9,4,-2,-8,10,1,-7],[-5,6,-6,-5,9,1,-9,5,5,-8],[1,-1,-6,8,2,-10,-4,-6,-7,1],[1,10,-8,-9,10,-3,-9,1,-7,7],[-6,-4,-3,3,5,6,6,7,-4,9],[4,-6,-6,2,-5,3,-8,-4,-9,-1],[-2,10,4,4,-4,3,-4,-2,-5,4],[-5,-5,-3,-4,-7,9,-1,-9,-6,4],[-5,7,5,2,6,-3,-4,-4,7,-1],[10,-6,-7,-5,-2,-3,5,8,9,-1]],[[5,-6,4,6,-7,-8,7,9,2,8],[-2,-1,-9,8,-7,5,-4,-1,-2,-10],[3,7,3,-3,9,-7,10,-9,-4,-1],[5,-5,6,7,-2,-8,-4,-3,8,-2],[-7,9,6,8,-4,-3,4,7,-3,-9],[-1,7,1,-2,6,-7,2,10,-3,-10],[-9,5,-2,-5,-7,7,3,-3,6,5],[-1,6,-2,5,-7,4,7,-9,-4,-3],[1,10,6,8,1,5,-10,9,-7,7],[9,-10,-1,-7,-3,5,-2,8,10,-1],[9,-5,5,9,8,6,7,4,-2,2]],[[-1,1,-4,1,-3,7,8,-3,7,5],[-9,-3,-4,4,-9,-3,-5,-4,-1,5],[9,10,-3,8,-4,-7,3,-1,8,3],[4,-8,10,8,-8,9,-4,-5,-9,-8],[8,-10,-7,6,-6,3,-4,-9,-4,8],[-9,-9,6,-9,-9,-10,4,5,-10,-7],[1,6,-10,2,9,5,-8,10,-10,-9],[-10,7,-10,7,5,-6,-5,-2,5,-10],[3,-6,-2,5,7,-5,2,3,2,1],[4,-4,10,-6,7,1,1,-2,-4,-9],[8,2,-3,3,-4,5,-2,9,-4,-6]],[[10,2,7,-8,-1,-3,-8,3,9,9],[10,1,2,3,4,-6,9,8,3,6],[-3,-5,6,-4,-3,8,8,7,-9,5],[-2,-10,2,6,3,9,2,9,-3,-3],[-8,2,-2,6,-1,-7,-6,3,-4,-3],[-2,-5,8,2,-6,8,8,2,8,1],[10,4,4,4,-8,-5,9,7,-3,-9],[-6,5,-8,5,-4,9,4,-2,1,-6],[-10,1,2,-9,7,-4,-8,8,-5,-3],[-9,4,6,-6,1,7,-5,-1,8,-2],[9,-1,-6,-2,-4,-3,-7,-8,3,1]],[[-6,-5,9,-9,-7,6,-8,2,8,8],[-1,4,-8,-3,6,4,2,-6,5,-10],[8,-10,-4,2,-8,-1,1,-7,8,9],[1,8,3,4,9,10,-1,6,3,-7],[-10,10,-4,10,6,-5,-3,10,-9,3],[2,7,-6,-1,3,-9,-6,4,-5,-1],[-6,-10,1,6,-6,-2,-2,2,-4,-6],[10,-7,6,8,8,2,6,-2,2,1],[-6,-6,1,-8,-2,-1,-10,1,-10,9],[6,1,-5,-3,2,5,-6,-6,-3,-2],[-9,-7,1,-6,5,-10,-7,5,5,-9]]], dtype = "int32")#candidate|1980|(6, 11, 10)|const|int32
var_1981 = relay.var("var_1981", dtype = "int32", shape = (6, 11, 10))#candidate|1981|(6, 11, 10)|var|int32
bop_1982 = relay.greater(const_1980.astype('bool'), relay.reshape(var_1981.astype('bool'), relay.shape_of(const_1980))) # shape=(6, 11, 10)
output = relay.Tuple([bop_1982,])
output2 = relay.Tuple([bop_1982,])
func_1986 = relay.Function([var_1981,], output)
mod['func_1986'] = func_1986
mod = relay.transform.InferType()(mod)
var_1987 = relay.var("var_1987", dtype = "int32", shape = (6, 11, 10))#candidate|1987|(6, 11, 10)|var|int32
output = func_1986(var_1987)
func_1988 = relay.Function([var_1987], output)
mutated_mod['func_1988'] = func_1988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1469_call = mod.get_global_var('func_1469')
func_1471_call = mutated_mod.get_global_var('func_1471')
call_2010 = func_1469_call()
call_2011 = func_1469_call()
output = call_2010
output2 = call_2011
func_2052 = relay.Function([], output)
mod['func_2052'] = func_2052
mod = relay.transform.InferType()(mod)
output = func_2052()
func_2053 = relay.Function([], output)
mutated_mod['func_2053'] = func_2053
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2134 = relay.var("var_2134", dtype = "uint64", shape = (6, 8, 13))#candidate|2134|(6, 8, 13)|var|uint64
var_2135 = relay.var("var_2135", dtype = "uint64", shape = (6, 8, 13))#candidate|2135|(6, 8, 13)|var|uint64
bop_2136 = relay.logical_xor(var_2134.astype('uint64'), relay.reshape(var_2135.astype('uint64'), relay.shape_of(var_2134))) # shape=(6, 8, 13)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_2149 = func_1643_call()
call_2150 = func_1643_call()
const_2155 = relay.constdtype = "float32")#candidate|2155|(10, 16, 13)|const|float32
bop_2156 = relay.mod(call_2149.astype('float64'), relay.reshape(const_2155.astype('float64'), relay.shape_of(call_2149))) # shape=(10, 16, 13)
bop_2159 = relay.mod(call_2150.astype('float64'), relay.reshape(const_2155.astype('float64'), relay.shape_of(call_2150))) # shape=(10, 16, 13)
func_1745_call = mod.get_global_var('func_1745')
func_1746_call = mutated_mod.get_global_var('func_1746')
call_2163 = relay.TupleGetItem(func_1745_call(), 4)
call_2164 = relay.TupleGetItem(func_1746_call(), 4)
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_2168 = relay.TupleGetItem(func_1677_call(), 0)
call_2169 = relay.TupleGetItem(func_1678_call(), 0)
output = relay.Tuple([bop_2136,bop_2156,call_2163,call_2168,])
output2 = relay.Tuple([bop_2136,bop_2159,call_2164,call_2169,])
func_2170 = relay.Function([var_2134,var_2135,], output)
mod['func_2170'] = func_2170
mod = relay.transform.InferType()(mod)
mutated_mod['func_2170'] = func_2170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2170_call = mutated_mod.get_global_var('func_2170')
var_2172 = relay.var("var_2172", dtype = "uint64", shape = (6, 8, 13))#candidate|2172|(6, 8, 13)|var|uint64
var_2173 = relay.var("var_2173", dtype = "uint64", shape = (6, 8, 13))#candidate|2173|(6, 8, 13)|var|uint64
call_2171 = func_2170_call(var_2172,var_2173,)
output = call_2171
func_2174 = relay.Function([var_2172,var_2173,], output)
mutated_mod['func_2174'] = func_2174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_2283 = relay.TupleGetItem(func_1677_call(), 0)
call_2284 = relay.TupleGetItem(func_1678_call(), 0)
func_1100_call = mod.get_global_var('func_1100')
func_1103_call = mutated_mod.get_global_var('func_1103')
const_2364 = relay.const([3.100766,0.813830,-0.011191,-6.145755,-7.399172,4.147468,8.021555,3.797133,-3.401186,-7.495149,-1.774776,1.837903,-4.745738,4.125981,-6.466706,-6.120412,-0.963914,-2.161895,7.030939,-7.757418,-9.845947,5.326436,7.993439,7.510171,5.576731,-9.518592,8.446029,6.936298,5.920341,0.789054,8.339757,4.082062,1.775645,5.363892,0.016305,-8.522265,8.830888,8.851434,-6.714747,-7.467791,9.338983,2.108321,9.914180,-2.514572,0.821890,-9.989980,-4.027999,-6.903521,1.448326,-9.976724,5.605762,4.914584,-6.502480,2.407995,3.129551,1.097674,7.490520,1.759946,0.774961,1.354780,1.265180,2.095817,2.382023,-9.508252,4.939314,6.432386,8.951063,-3.003587,-1.349401,8.782862,9.387786,-3.836151,1.996942,3.494445,3.915870,-0.683764,0.951489,-8.747478,0.133376,0.500431,-6.250004,-2.822402,7.546679,1.516316,-1.926149,0.597945,7.239027,-0.513118,2.143992,1.052194,-2.468703,-9.024872,-7.403118,7.729338,9.007134,-0.983233,7.363762,6.434337,1.691588,-9.591979,4.668287,-3.977150,0.498109,-3.974962,-5.825798,-1.630106,1.834284,-9.802521,1.601724,4.081884,7.022774,-7.894377,-4.647862,1.211089,5.946469,-5.079344,-8.279515,8.741070,2.427252,-3.458497,-3.490147,5.602614,2.017461,8.215116,7.427940,9.803797,-7.498268,8.294498,-6.678819,0.419820,7.115968,-4.331135,-0.441496,8.003391,3.940760,1.406322,-9.116844,2.089232,0.715694,3.678049,-4.832534,0.571522,-8.700966,6.663000,2.924492,-3.721192,-9.890500,-5.366090,4.377459,3.788372,-5.351733,-9.423789,9.088657,-8.373487,-5.630127,0.875909,5.752874,0.856076,2.928544,-5.451243,7.989952,7.715097,4.835096,-3.441682,-8.798271,-8.045792,1.786258,7.441212,-2.200807,9.119115,2.544511,6.606956,2.158659,0.177748,-2.576440,3.190599,-1.944749,3.660747,4.699646,-4.562863,7.493637,-6.001735,6.363711,1.299073,8.340394,-0.776779,9.591541,8.242152,5.715159,-9.640150,-3.645955,3.400626,-6.421439,3.286115,7.635061,6.378663,-9.554738,1.617355,-6.547595,8.108067,6.012414,-0.263627,-8.411861,8.497089,-1.379278,2.082723,7.814213,-4.406933,7.520892,0.872825,7.813956,-7.975404,-0.217246,-7.871208,-0.769685,9.089723,0.268573,2.589615,4.975540,8.936931,-4.066025,6.162696,-3.074280,3.833293,9.802325,-7.677855,-2.542215,-9.074831,-5.042185,9.672619,-8.976958,-8.403666,-1.073604,9.971015,-8.908023,-2.305215,8.462842,-1.086594,9.272652,-8.504359,9.211513,4.030453,3.989971,-6.610141,-4.744197,-0.137719,-3.463089,4.965757,-7.581209,1.984672,0.476161,6.553826,0.368858,-0.399950,-1.508023,7.690809,5.967917,8.253875,-7.684776,-4.259650,9.606734,2.231166,8.116616,-8.979648,-6.472258,-9.100612,7.765961,-8.614924,-0.671851,8.921178,2.144252,-2.932098,-2.283170,4.711061,9.584762,9.429124,2.850116,7.584315,6.597077,-0.297877,5.558817,-2.672913,3.514546,6.031120,6.809904,-7.031433,2.804661,-6.971533,-5.589050,-3.028831,6.747296,-7.795503,-2.362413,-6.060970,2.873953,6.638628,9.348717,-2.067213,8.260236,-1.906364], dtype = "float32")#candidate|2364|(300,)|const|float32
call_2363 = relay.TupleGetItem(func_1100_call(relay.reshape(const_2364.astype('float32'), [5, 4, 15]), relay.reshape(const_2364.astype('float32'), [5, 4, 15]), ), 0)
call_2365 = relay.TupleGetItem(func_1103_call(relay.reshape(const_2364.astype('float32'), [5, 4, 15]), relay.reshape(const_2364.astype('float32'), [5, 4, 15]), ), 0)
output = relay.Tuple([call_2283,call_2363,const_2364,])
output2 = relay.Tuple([call_2284,call_2365,const_2364,])
func_2370 = relay.Function([], output)
mod['func_2370'] = func_2370
mod = relay.transform.InferType()(mod)
mutated_mod['func_2370'] = func_2370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2370_call = mutated_mod.get_global_var('func_2370')
call_2371 = func_2370_call()
output = call_2371
func_2372 = relay.Function([], output)
mutated_mod['func_2372'] = func_2372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_2391 = relay.TupleGetItem(func_1677_call(), 0)
call_2392 = relay.TupleGetItem(func_1678_call(), 0)
output = call_2391
output2 = call_2392
func_2394 = relay.Function([], output)
mod['func_2394'] = func_2394
mod = relay.transform.InferType()(mod)
mutated_mod['func_2394'] = func_2394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2394_call = mutated_mod.get_global_var('func_2394')
call_2395 = func_2394_call()
output = call_2395
func_2396 = relay.Function([], output)
mutated_mod['func_2396'] = func_2396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1937_call = mod.get_global_var('func_1937')
func_1939_call = mutated_mod.get_global_var('func_1939')
call_2407 = func_1937_call()
call_2408 = func_1937_call()
func_2370_call = mod.get_global_var('func_2370')
func_2372_call = mutated_mod.get_global_var('func_2372')
call_2415 = relay.TupleGetItem(func_2370_call(), 2)
call_2416 = relay.TupleGetItem(func_2372_call(), 2)
func_1469_call = mod.get_global_var('func_1469')
func_1471_call = mutated_mod.get_global_var('func_1471')
call_2418 = func_1469_call()
call_2419 = func_1469_call()
output = relay.Tuple([call_2407,call_2415,call_2418,])
output2 = relay.Tuple([call_2408,call_2416,call_2419,])
func_2424 = relay.Function([], output)
mod['func_2424'] = func_2424
mod = relay.transform.InferType()(mod)
mutated_mod['func_2424'] = func_2424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2424_call = mutated_mod.get_global_var('func_2424')
call_2425 = func_2424_call()
output = call_2425
func_2426 = relay.Function([], output)
mutated_mod['func_2426'] = func_2426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1299_call = mod.get_global_var('func_1299')
func_1300_call = mutated_mod.get_global_var('func_1300')
call_2431 = func_1299_call()
call_2432 = func_1299_call()
output = call_2431
output2 = call_2432
func_2449 = relay.Function([], output)
mod['func_2449'] = func_2449
mod = relay.transform.InferType()(mod)
output = func_2449()
func_2450 = relay.Function([], output)
mutated_mod['func_2450'] = func_2450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_2451 = relay.TupleGetItem(func_1677_call(), 0)
call_2452 = relay.TupleGetItem(func_1678_call(), 0)
func_2052_call = mod.get_global_var('func_2052')
func_2053_call = mutated_mod.get_global_var('func_2053')
call_2454 = func_2052_call()
call_2455 = func_2052_call()
bop_2472 = relay.greater(call_2451.astype('bool'), relay.reshape(call_2454.astype('bool'), relay.shape_of(call_2451))) # shape=(10, 16, 13)
bop_2475 = relay.greater(call_2452.astype('bool'), relay.reshape(call_2455.astype('bool'), relay.shape_of(call_2452))) # shape=(10, 16, 13)
func_1100_call = mod.get_global_var('func_1100')
func_1103_call = mutated_mod.get_global_var('func_1103')
var_2480 = relay.var("var_2480", dtype = "float32", shape = (300,))#candidate|2480|(300,)|var|float32
call_2479 = relay.TupleGetItem(func_1100_call(relay.reshape(var_2480.astype('float32'), [5, 4, 15]), relay.reshape(var_2480.astype('float32'), [5, 4, 15]), ), 0)
call_2481 = relay.TupleGetItem(func_1103_call(relay.reshape(var_2480.astype('float32'), [5, 4, 15]), relay.reshape(var_2480.astype('float32'), [5, 4, 15]), ), 0)
output = relay.Tuple([bop_2472,call_2479,var_2480,])
output2 = relay.Tuple([bop_2475,call_2481,var_2480,])
func_2495 = relay.Function([var_2480,], output)
mod['func_2495'] = func_2495
mod = relay.transform.InferType()(mod)
mutated_mod['func_2495'] = func_2495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2496 = relay.var("var_2496", dtype = "float32", shape = (300,))#candidate|2496|(300,)|var|float32
func_2495_call = mutated_mod.get_global_var('func_2495')
call_2497 = func_2495_call(var_2496)
output = call_2497
func_2498 = relay.Function([var_2496], output)
mutated_mod['func_2498'] = func_2498
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2559 = relay.const([[[5,-3,4,5,-4],[4,10,-5,8,-1],[10,-3,4,-9,6],[6,-9,6,-2,7],[-1,-9,9,-9,-8],[3,2,8,6,10],[5,-7,-6,8,-2],[-1,5,6,-6,3],[9,3,-4,5,8],[3,-1,8,3,-5]],[[-10,-10,8,3,2],[9,3,-3,3,-8],[5,-4,4,-6,-1],[-4,7,8,-1,-1],[-8,-6,-2,-8,9],[6,9,-10,6,-10],[5,8,9,9,-8],[4,-1,-6,9,10],[2,-10,7,-4,6],[-2,9,4,7,-7]],[[-6,-10,1,-1,-10],[6,6,2,6,8],[9,4,9,5,1],[-2,3,5,-8,4],[-7,1,-6,9,-9],[7,-7,6,-7,6],[7,7,10,3,8],[5,8,9,8,-10],[-4,-5,-8,-1,-5],[4,-4,1,-5,-9]],[[2,8,-1,7,-6],[-6,-4,3,3,-8],[2,-10,5,8,6],[2,-3,-1,1,4],[5,-8,-5,2,7],[-8,-1,5,10,7],[1,5,2,-10,3],[2,6,-8,3,8],[-1,-10,5,-10,7],[10,-5,-3,8,-3]],[[7,-9,-5,5,9],[7,2,-10,-1,1],[-8,-7,5,-1,3],[-5,7,-5,-1,10],[6,7,7,4,-10],[7,5,10,-5,-2],[-6,9,1,8,4],[3,7,7,-9,-1],[5,8,3,-9,-10],[-7,10,-10,9,4]],[[-5,-5,-6,6,3],[-6,-5,-8,2,-7],[10,9,-9,2,8],[-5,-4,-5,3,8],[1,4,-10,-6,-10],[5,6,-2,4,7],[10,4,4,-6,3],[3,-8,9,9,-10],[-8,-9,-8,3,4],[3,4,10,7,5]],[[10,3,4,5,7],[2,-10,-4,-3,2],[7,-1,-3,8,-7],[-1,10,-4,-7,-10],[6,-2,5,9,-2],[-3,-8,-1,7,4],[-2,-2,10,9,-7],[-2,2,-1,9,-5],[3,-2,-4,4,4],[-9,3,-1,9,8]],[[8,1,3,7,4],[-5,-1,7,-1,9],[9,2,-1,-6,-2],[6,-6,1,9,-3],[1,-9,6,8,-7],[3,-6,1,-7,-6],[3,2,-9,1,3],[2,-4,6,6,-9],[2,-2,-6,-6,2],[-3,-3,4,-10,-3]],[[-1,-8,-7,6,10],[-8,-7,3,-5,-6],[10,-2,4,7,3],[8,-7,10,3,-7],[3,-7,10,-4,8],[4,1,3,3,1],[9,1,-6,-10,-7],[1,-4,10,10,-9],[-6,-8,-8,-4,10],[7,5,-7,-9,9]]], dtype = "uint32")#candidate|2559|(9, 10, 5)|const|uint32
var_2560 = relay.var("var_2560", dtype = "uint32", shape = (9, 10, 5))#candidate|2560|(9, 10, 5)|var|uint32
bop_2561 = relay.minimum(const_2559.astype('uint32'), relay.reshape(var_2560.astype('uint32'), relay.shape_of(const_2559))) # shape=(9, 10, 5)
output = bop_2561
output2 = bop_2561
func_2585 = relay.Function([var_2560,], output)
mod['func_2585'] = func_2585
mod = relay.transform.InferType()(mod)
mutated_mod['func_2585'] = func_2585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2586 = relay.var("var_2586", dtype = "uint32", shape = (9, 10, 5))#candidate|2586|(9, 10, 5)|var|uint32
func_2585_call = mutated_mod.get_global_var('func_2585')
call_2587 = func_2585_call(var_2586)
output = call_2587
func_2588 = relay.Function([var_2586], output)
mutated_mod['func_2588'] = func_2588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1469_call = mod.get_global_var('func_1469')
func_1471_call = mutated_mod.get_global_var('func_1471')
call_2625 = func_1469_call()
call_2626 = func_1469_call()
output = call_2625
output2 = call_2626
func_2640 = relay.Function([], output)
mod['func_2640'] = func_2640
mod = relay.transform.InferType()(mod)
output = func_2640()
func_2641 = relay.Function([], output)
mutated_mod['func_2641'] = func_2641
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2646 = relay.var("var_2646", dtype = "float32", shape = (13, 5, 6))#candidate|2646|(13, 5, 6)|var|float32
uop_2647 = relay.asinh(var_2646.astype('float32')) # shape=(13, 5, 6)
output = uop_2647
output2 = uop_2647
func_2651 = relay.Function([var_2646,], output)
mod['func_2651'] = func_2651
mod = relay.transform.InferType()(mod)
var_2652 = relay.var("var_2652", dtype = "float32", shape = (13, 5, 6))#candidate|2652|(13, 5, 6)|var|float32
output = func_2651(var_2652)
func_2653 = relay.Function([var_2652], output)
mutated_mod['func_2653'] = func_2653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2424_call = mod.get_global_var('func_2424')
func_2426_call = mutated_mod.get_global_var('func_2426')
call_2679 = relay.TupleGetItem(func_2424_call(), 1)
call_2680 = relay.TupleGetItem(func_2426_call(), 1)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_2709 = relay.TupleGetItem(func_1191_call(), 0)
call_2710 = relay.TupleGetItem(func_1193_call(), 0)
func_1937_call = mod.get_global_var('func_1937')
func_1939_call = mutated_mod.get_global_var('func_1939')
call_2711 = func_1937_call()
call_2712 = func_1937_call()
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_2719 = relay.TupleGetItem(func_1191_call(), 0)
call_2720 = relay.TupleGetItem(func_1193_call(), 0)
output = relay.Tuple([call_2679,call_2709,call_2711,call_2719,])
output2 = relay.Tuple([call_2680,call_2710,call_2712,call_2720,])
func_2727 = relay.Function([], output)
mod['func_2727'] = func_2727
mod = relay.transform.InferType()(mod)
output = func_2727()
func_2728 = relay.Function([], output)
mutated_mod['func_2728'] = func_2728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_2757 = relay.TupleGetItem(func_1677_call(), 0)
call_2758 = relay.TupleGetItem(func_1678_call(), 0)
uop_2765 = relay.exp(call_2757.astype('float64')) # shape=(10, 16, 13)
uop_2767 = relay.exp(call_2758.astype('float64')) # shape=(10, 16, 13)
output = uop_2765
output2 = uop_2767
func_2776 = relay.Function([], output)
mod['func_2776'] = func_2776
mod = relay.transform.InferType()(mod)
mutated_mod['func_2776'] = func_2776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2776_call = mutated_mod.get_global_var('func_2776')
call_2777 = func_2776_call()
output = call_2777
func_2778 = relay.Function([], output)
mutated_mod['func_2778'] = func_2778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1816_call = mod.get_global_var('func_1816')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_2795 = relay.TupleGetItem(func_1816_call(), 1)
call_2796 = relay.TupleGetItem(func_1818_call(), 1)
const_2797 = relay.const([[[-1,-1,1,4,6,3,-9,-10,-6,-5,4,8,9],[10,6,-4,-10,1,-10,1,6,-1,-3,-2,-9,-10],[3,4,-3,-7,-4,-6,-5,-6,-2,2,-5,3,-3],[-8,1,7,5,5,-6,7,-5,-4,9,-5,1,9],[10,3,-8,-8,-9,1,8,4,-10,4,5,6,-10],[-5,10,-6,-9,-6,9,3,10,-4,4,10,10,-1],[-2,8,-10,4,10,-2,8,-3,-9,7,-2,8,2],[2,-2,4,10,9,-7,-1,2,4,-9,-8,-5,10],[9,-3,-5,-10,10,4,-8,-1,5,-3,-5,-6,-4],[-5,-1,-6,2,-9,8,6,5,-7,3,1,-10,-3],[-1,-1,5,-6,2,7,3,3,-7,-9,-8,-7,-4],[7,3,1,2,9,-8,4,-6,4,-10,1,5,-2],[-6,-2,-9,8,-10,6,-1,-9,-9,-10,7,4,-10],[-5,-7,-6,7,-5,8,8,4,-1,-8,-5,5,-10],[9,8,-1,4,1,10,9,-4,-3,-6,6,-2,-8],[-1,-2,3,-7,1,-5,5,-5,4,4,-1,-10,-2]],[[4,3,10,-5,7,2,-1,3,5,2,4,-4,-3],[5,-3,2,-10,-1,8,-3,-4,-8,-7,2,8,-4],[9,-3,4,-8,5,-4,4,7,1,-7,-4,-1,6],[3,-7,-8,-6,3,-9,6,-10,10,6,-5,7,4],[-7,-2,-10,10,-5,-6,-9,10,-9,-3,7,-2,-3],[3,-7,3,4,10,4,1,-10,10,-7,9,-7,4],[6,-10,-1,10,2,5,-1,-7,-6,-4,-7,-8,-5],[2,-7,-7,-2,-3,1,-4,-5,6,5,10,-6,-10],[7,7,4,5,8,6,10,-5,-1,2,8,-1,-5],[-4,5,4,-1,7,2,7,-3,-10,-2,-2,3,-8],[-5,-4,2,-3,-2,-3,10,10,-10,-2,10,6,6],[-5,-3,10,4,10,1,-4,-10,8,9,-10,5,-1],[-5,-8,-4,-9,-6,7,-10,7,-10,-6,10,-8,2],[-7,1,3,-7,-6,4,10,-4,-1,3,8,8,4],[8,6,-2,-8,-5,1,-5,-2,4,-10,-10,5,-6],[-9,-6,2,-6,3,-5,1,5,-9,10,-9,7,3]],[[8,-3,10,1,-6,10,-5,-10,-6,-8,2,1,-3],[6,-8,7,6,2,-3,-10,8,-1,-2,1,9,-9],[9,4,-10,1,-7,6,8,9,-3,-10,-8,-3,-1],[10,-6,-2,-1,-6,-7,9,-5,9,-2,-5,-9,7],[-8,-10,5,-9,-1,5,-9,10,-7,-2,-3,6,-1],[-2,7,-8,10,-2,-9,7,1,-1,4,-6,2,5],[-1,3,-1,-2,6,3,-9,-2,-5,-10,2,7,-3],[-1,9,10,-7,1,10,8,3,-4,6,3,-7,-10],[-4,-7,7,2,3,7,-9,-8,4,-6,7,1,8],[-9,-7,-5,3,10,9,-10,-7,2,5,-4,-6,-6],[-2,10,-3,6,7,2,5,-4,5,-9,-8,6,-1],[-4,1,-3,1,5,-2,5,-2,1,-1,2,-8,-8],[-9,2,7,8,10,-2,-5,-4,-8,8,7,5,-6],[-6,7,-1,-10,-8,-2,8,-8,-2,7,-3,4,5],[3,-9,-9,5,9,-2,-2,-8,7,-6,-6,1,2],[-10,-5,8,-7,1,4,-1,4,3,-4,-8,-9,-9]],[[1,-10,-3,-3,-7,10,-10,9,-7,-6,-4,4,-2],[-2,-7,5,10,-4,6,-3,8,7,2,-9,-6,7],[4,1,-6,-6,-1,-2,6,6,-1,7,10,-7,-1],[1,-3,-9,-2,4,3,-10,1,-7,-7,-1,10,10],[-3,2,3,-1,-4,5,3,3,-7,10,6,-5,10],[3,-5,2,10,-1,-9,-1,-7,10,-4,-5,9,-1],[5,-8,-3,9,-4,7,6,6,4,-10,-4,10,5],[-10,-3,9,-8,-4,-8,2,-3,3,-9,-7,-6,6],[9,-7,3,1,10,-5,7,-1,4,6,-4,-1,7],[8,6,5,-1,-4,-4,2,6,-4,1,-7,-1,-4],[-1,-8,4,-4,-9,8,3,-6,-8,1,-6,-5,10],[-3,5,4,4,-4,7,9,-7,7,10,7,2,9],[10,-6,-8,-1,-6,-8,-8,-9,10,-2,6,7,5],[-3,9,-4,8,1,-8,-2,9,5,2,-4,-1,-9],[8,-2,-9,9,-8,1,4,3,-4,8,-5,-1,-8],[-9,-1,-7,-4,1,3,3,2,7,-6,10,7,3]],[[1,-9,1,10,-6,-1,6,-8,-2,10,5,-2,10],[-2,7,9,1,9,-7,4,-7,-6,8,4,4,-6],[3,-1,7,2,-9,4,-10,-4,3,10,2,3,-1],[2,2,6,7,8,3,9,-2,3,-7,9,-4,2],[-7,8,1,-5,1,8,-3,9,10,-7,3,6,-9],[-10,6,-9,-6,-2,10,-1,9,6,-8,7,4,-10],[-7,7,-1,-7,8,9,6,4,-9,6,8,1,8],[6,3,9,2,4,-4,2,10,9,-3,1,-9,1],[10,3,-9,1,5,-9,-7,-2,-5,-2,-6,-10,-3],[-10,-9,-10,-2,-6,2,-2,-7,-3,8,-5,8,8],[8,2,9,6,6,7,-8,8,8,6,4,10,-5],[-5,-2,-6,10,-4,3,-9,7,-6,8,-7,-7,-2],[2,-1,6,-9,-8,9,-6,-1,6,-9,-5,-9,8],[-1,-1,-6,-4,-10,-2,9,6,9,2,3,9,10],[-5,-9,5,10,3,-8,2,9,7,-5,5,-4,-6],[-4,7,3,3,6,3,3,-3,-5,9,10,-2,-8]],[[3,-6,1,5,4,-9,-9,-2,-5,10,-7,3,-1],[-1,-10,-1,-3,1,7,-1,4,-5,-8,-7,3,9],[2,-6,-4,7,-8,-8,-5,6,-7,-2,-8,5,-5],[9,2,10,1,-7,4,1,-2,6,8,-1,8,7],[2,4,-4,7,-2,-10,-4,-9,2,-4,-9,-6,-10],[-3,10,-8,1,10,-6,1,-6,2,1,2,-9,2],[5,-6,-4,-7,8,7,-7,5,5,-3,9,5,-5],[5,-1,4,4,-5,1,-3,7,-6,-8,-10,-7,6],[-8,-7,-5,-1,-1,6,-6,-6,-1,6,10,2,5],[10,7,-9,6,2,-2,10,9,-1,-7,4,7,-7],[5,4,3,1,2,7,-10,7,-3,5,5,8,2],[-9,3,-5,-7,-8,5,-2,-3,-2,9,3,10,-5],[4,6,-5,-5,3,9,-1,10,-10,2,3,-6,-7],[6,9,-2,-5,10,-3,2,-7,6,2,5,-2,5],[4,10,2,-9,-9,3,7,-8,8,-8,3,-4,-4],[6,7,1,-5,-3,9,8,-10,2,4,-2,9,1]],[[6,6,-6,3,-4,-7,5,5,-1,-2,6,10,5],[6,2,8,3,-7,6,2,-6,10,8,-5,-10,10],[10,-8,4,1,-9,3,10,-1,-1,10,-2,9,8],[9,-1,-4,10,6,-7,-9,5,-8,-3,-3,4,2],[-4,7,4,-9,-6,-6,6,2,10,-10,7,-9,-9],[-7,-6,8,-9,-1,3,-10,5,-9,1,-4,5,5],[4,-2,-8,5,-7,5,7,1,-8,-1,8,-3,1],[9,3,-8,9,7,1,3,-4,4,-8,1,5,-8],[2,-1,1,1,-3,9,10,-9,-10,1,-5,-5,-1],[9,-10,10,-10,-7,8,-5,6,2,1,-9,6,-3],[4,-3,6,-10,1,-8,-10,2,-2,8,10,-8,-3],[-2,-6,1,-4,-6,8,-7,-5,-2,2,2,2,4],[1,-4,8,5,-10,-5,-1,-3,6,-10,6,7,-5],[-4,2,-10,1,-9,-8,4,-9,10,-1,-8,4,-9],[9,10,6,10,1,10,2,2,4,-9,4,-2,4],[-1,8,-3,-7,-1,-7,2,-1,-10,4,6,-8,8]],[[4,-9,1,-9,2,-4,-4,-4,5,9,-8,2,2],[9,-1,-2,-8,3,2,6,5,5,-6,2,-4,-1],[1,6,1,1,-2,-7,7,10,6,-3,10,2,-8],[-1,-5,-7,-6,-8,-8,-1,6,-3,-9,-10,10,6],[5,10,-4,6,-3,-6,3,8,-4,2,-6,-3,-7],[-10,8,1,-5,7,-1,-9,-3,5,-8,7,-3,-2],[-3,4,7,1,1,1,2,-7,10,-7,-10,10,5],[-10,8,7,-8,-3,6,-4,-7,-7,4,2,-10,8],[-9,-10,6,3,5,-5,-1,-9,4,6,-8,-10,6],[8,-9,8,3,-2,-1,2,5,8,-8,2,10,-5],[10,-3,-7,2,5,6,9,8,-5,7,-10,3,-4],[9,-3,-2,-10,-9,8,-5,-3,-3,-10,-4,3,-2],[-6,2,4,-4,6,9,-3,-2,-10,-3,7,5,1],[2,-3,-9,-3,-9,-2,3,-10,-3,3,-5,-2,7],[-6,-9,-4,-1,7,-5,10,-5,-8,-10,3,3,-9],[-10,-7,-2,-1,-10,-2,-1,-2,9,-2,-4,-5,9]],[[8,-5,-8,-9,3,-8,4,1,-10,7,1,-3,10],[-3,4,4,-2,10,-5,-7,-4,-5,2,6,-8,-3],[1,-2,-3,-8,7,-10,3,10,-3,-6,-1,-5,7],[-4,-6,-6,3,8,4,-5,-7,9,9,8,6,8],[7,8,-7,-10,9,10,5,10,-3,8,1,2,7],[-1,3,8,-5,5,1,6,1,-4,5,4,8,-10],[9,7,3,9,-9,8,-3,7,6,8,1,-4,5],[-6,1,-9,9,6,-6,-8,2,-9,8,-3,-1,-4],[10,-1,-7,7,3,8,-4,2,9,-4,-7,-10,-3],[3,-1,-6,-6,-7,4,-1,-3,-6,3,-8,-1,7],[-7,5,7,4,7,-2,-9,-6,-4,9,-3,-4,-5],[3,5,4,-7,4,8,-4,9,6,7,-2,-8,-8],[-4,-9,5,4,2,-3,-8,-4,6,1,-4,-5,10],[1,6,9,2,-10,-2,8,-2,-4,10,9,6,3],[-9,-10,-8,7,2,6,5,-2,10,-4,3,-5,4],[2,3,1,-6,1,3,5,-3,1,9,-7,-3,3]],[[9,-10,-1,-4,-8,6,-7,7,4,-7,-5,7,2],[-2,6,-3,-5,-7,-7,-1,-7,8,-6,4,-9,7],[7,-7,-7,-4,-8,8,-9,-10,-8,-1,9,-7,-6],[-3,9,-8,-3,5,-6,2,5,-7,-5,-3,7,-7],[7,9,6,8,-1,6,-3,-5,2,-5,7,5,9],[6,4,-10,1,4,-3,-7,-3,8,3,-7,1,2],[-5,2,5,-8,3,-9,9,-4,-10,-7,-1,8,-10],[-9,-8,9,-7,5,-8,2,3,8,7,-4,-10,-7],[-8,4,-2,7,3,-3,-8,4,-3,9,-10,-10,6],[3,7,-8,-6,10,-5,-8,-4,9,-1,-10,-9,-2],[6,5,8,-10,7,9,-10,1,-6,2,-10,-6,3],[-5,4,3,-1,-4,6,5,3,9,1,-9,-1,-10],[3,1,-3,2,6,-9,-4,8,-8,7,5,5,8],[-6,6,-9,4,-6,-8,6,4,3,-8,-9,-3,10],[-2,5,-10,8,-1,-6,9,-1,2,3,3,-5,-6],[-9,-1,-7,5,-5,-7,2,2,-2,-2,1,2,-2]]], dtype = "uint32")#candidate|2797|(10, 16, 13)|const|uint32
bop_2798 = relay.power(call_2795.astype('float32'), relay.reshape(const_2797.astype('float32'), relay.shape_of(call_2795))) # shape=(10, 16, 13)
bop_2801 = relay.power(call_2796.astype('float32'), relay.reshape(const_2797.astype('float32'), relay.shape_of(call_2796))) # shape=(10, 16, 13)
func_2640_call = mod.get_global_var('func_2640')
func_2641_call = mutated_mod.get_global_var('func_2641')
call_2819 = func_2640_call()
call_2820 = func_2640_call()
output = relay.Tuple([bop_2798,call_2819,])
output2 = relay.Tuple([bop_2801,call_2820,])
func_2825 = relay.Function([], output)
mod['func_2825'] = func_2825
mod = relay.transform.InferType()(mod)
output = func_2825()
func_2826 = relay.Function([], output)
mutated_mod['func_2826'] = func_2826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1408_call = mod.get_global_var('func_1408')
func_1410_call = mutated_mod.get_global_var('func_1410')
call_2836 = func_1408_call()
call_2837 = func_1408_call()
output = relay.Tuple([call_2836,])
output2 = relay.Tuple([call_2837,])
func_2870 = relay.Function([], output)
mod['func_2870'] = func_2870
mod = relay.transform.InferType()(mod)
mutated_mod['func_2870'] = func_2870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2870_call = mutated_mod.get_global_var('func_2870')
call_2871 = func_2870_call()
output = call_2871
func_2872 = relay.Function([], output)
mutated_mod['func_2872'] = func_2872
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2899 = relay.var("var_2899", dtype = "float64", shape = (6, 6, 4))#candidate|2899|(6, 6, 4)|var|float64
uop_2900 = relay.asinh(var_2899.astype('float64')) # shape=(6, 6, 4)
func_2825_call = mod.get_global_var('func_2825')
func_2826_call = mutated_mod.get_global_var('func_2826')
call_2903 = relay.TupleGetItem(func_2825_call(), 1)
call_2904 = relay.TupleGetItem(func_2826_call(), 1)
output = relay.Tuple([uop_2900,call_2903,])
output2 = relay.Tuple([uop_2900,call_2904,])
func_2905 = relay.Function([var_2899,], output)
mod['func_2905'] = func_2905
mod = relay.transform.InferType()(mod)
mutated_mod['func_2905'] = func_2905
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2906 = relay.var("var_2906", dtype = "float64", shape = (6, 6, 4))#candidate|2906|(6, 6, 4)|var|float64
func_2905_call = mutated_mod.get_global_var('func_2905')
call_2907 = func_2905_call(var_2906)
output = call_2907
func_2908 = relay.Function([var_2906], output)
mutated_mod['func_2908'] = func_2908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1937_call = mod.get_global_var('func_1937')
func_1939_call = mutated_mod.get_global_var('func_1939')
call_2928 = func_1937_call()
call_2929 = func_1937_call()
var_2931 = relay.var("var_2931", dtype = "uint32", shape = (10, 16, 13))#candidate|2931|(10, 16, 13)|var|uint32
bop_2932 = relay.floor_mod(call_2928.astype('float64'), relay.reshape(var_2931.astype('float64'), relay.shape_of(call_2928))) # shape=(10, 16, 13)
bop_2935 = relay.floor_mod(call_2929.astype('float64'), relay.reshape(var_2931.astype('float64'), relay.shape_of(call_2929))) # shape=(10, 16, 13)
func_1745_call = mod.get_global_var('func_1745')
func_1746_call = mutated_mod.get_global_var('func_1746')
call_2940 = relay.TupleGetItem(func_1745_call(), 4)
call_2941 = relay.TupleGetItem(func_1746_call(), 4)
func_2449_call = mod.get_global_var('func_2449')
func_2450_call = mutated_mod.get_global_var('func_2450')
call_2947 = func_2449_call()
call_2948 = func_2449_call()
output = relay.Tuple([bop_2932,call_2940,call_2947,])
output2 = relay.Tuple([bop_2935,call_2941,call_2948,])
func_2951 = relay.Function([var_2931,], output)
mod['func_2951'] = func_2951
mod = relay.transform.InferType()(mod)
var_2952 = relay.var("var_2952", dtype = "uint32", shape = (10, 16, 13))#candidate|2952|(10, 16, 13)|var|uint32
output = func_2951(var_2952)
func_2953 = relay.Function([var_2952], output)
mutated_mod['func_2953'] = func_2953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_3023 = relay.TupleGetItem(func_1191_call(), 0)
call_3024 = relay.TupleGetItem(func_1193_call(), 0)
output = relay.Tuple([call_3023,])
output2 = relay.Tuple([call_3024,])
func_3034 = relay.Function([], output)
mod['func_3034'] = func_3034
mod = relay.transform.InferType()(mod)
output = func_3034()
func_3035 = relay.Function([], output)
mutated_mod['func_3035'] = func_3035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_3041 = relay.TupleGetItem(func_3034_call(), 0)
call_3042 = relay.TupleGetItem(func_3035_call(), 0)
output = relay.Tuple([call_3041,])
output2 = relay.Tuple([call_3042,])
func_3050 = relay.Function([], output)
mod['func_3050'] = func_3050
mod = relay.transform.InferType()(mod)
mutated_mod['func_3050'] = func_3050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3050_call = mutated_mod.get_global_var('func_3050')
call_3051 = func_3050_call()
output = call_3051
func_3052 = relay.Function([], output)
mutated_mod['func_3052'] = func_3052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2052_call = mod.get_global_var('func_2052')
func_2053_call = mutated_mod.get_global_var('func_2053')
call_3055 = func_2052_call()
call_3056 = func_2052_call()
output = relay.Tuple([call_3055,])
output2 = relay.Tuple([call_3056,])
func_3071 = relay.Function([], output)
mod['func_3071'] = func_3071
mod = relay.transform.InferType()(mod)
output = func_3071()
func_3072 = relay.Function([], output)
mutated_mod['func_3072'] = func_3072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1918_call = mod.get_global_var('func_1918')
func_1919_call = mutated_mod.get_global_var('func_1919')
call_3085 = relay.TupleGetItem(func_1918_call(), 1)
call_3086 = relay.TupleGetItem(func_1919_call(), 1)
func_2394_call = mod.get_global_var('func_2394')
func_2396_call = mutated_mod.get_global_var('func_2396')
call_3105 = func_2394_call()
call_3106 = func_2394_call()
output = relay.Tuple([call_3085,call_3105,])
output2 = relay.Tuple([call_3086,call_3106,])
func_3115 = relay.Function([], output)
mod['func_3115'] = func_3115
mod = relay.transform.InferType()(mod)
output = func_3115()
func_3116 = relay.Function([], output)
mutated_mod['func_3116'] = func_3116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mod.get_global_var('func_3071')
func_3072_call = mutated_mod.get_global_var('func_3072')
call_3133 = relay.TupleGetItem(func_3071_call(), 0)
call_3134 = relay.TupleGetItem(func_3072_call(), 0)
func_1816_call = mod.get_global_var('func_1816')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_3139 = relay.TupleGetItem(func_1816_call(), 4)
call_3140 = relay.TupleGetItem(func_1818_call(), 4)
output = relay.Tuple([call_3133,call_3139,])
output2 = relay.Tuple([call_3134,call_3140,])
func_3145 = relay.Function([], output)
mod['func_3145'] = func_3145
mod = relay.transform.InferType()(mod)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3145_call = mutated_mod.get_global_var('func_3145')
call_3146 = func_3145_call()
output = call_3146
func_3147 = relay.Function([], output)
mutated_mod['func_3147'] = func_3147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1469_call = mod.get_global_var('func_1469')
func_1471_call = mutated_mod.get_global_var('func_1471')
call_3162 = func_1469_call()
call_3163 = func_1469_call()
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_3181 = func_1643_call()
call_3182 = func_1643_call()
output = relay.Tuple([call_3162,call_3181,])
output2 = relay.Tuple([call_3163,call_3182,])
func_3184 = relay.Function([], output)
mod['func_3184'] = func_3184
mod = relay.transform.InferType()(mod)
mutated_mod['func_3184'] = func_3184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3184_call = mutated_mod.get_global_var('func_3184')
call_3185 = func_3184_call()
output = call_3185
func_3186 = relay.Function([], output)
mutated_mod['func_3186'] = func_3186
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3200 = relay.var("var_3200", dtype = "float32", shape = (4, 1, 10))#candidate|3200|(4, 1, 10)|var|float32
uop_3201 = relay.log(var_3200.astype('float32')) # shape=(4, 1, 10)
func_2170_call = mod.get_global_var('func_2170')
func_2174_call = mutated_mod.get_global_var('func_2174')
const_3204 = relay.const([10,-8,4,-3,-6,3,-5,1,-6,-6,4,8,-2,-7,3,-2,7,-9,9,-6,-1,3,7,6,9,-2,9,-4,-2,-9,2,8,-3,-10,1,9,6,9,-8,-7,-8,-1,-10,-6,-5,-7,-10,6,-2,-8,-6,-6,-1,-8,-4,5,5,-7,-2,-9,-1,5,1,-5,-2,7,-9,2,10,8,-4,-5,10,6,-6,10,9,-9,7,-5,-6,-6,-7,-5,-8,-2,6,3,-9,10,4,-1,5,5,-3,-10,-3,5,7,-9,-3,-9,-6,4,3,-1,4,-10,-3,1,-5,6,-9,10,-1,3,7,10,6,1,10,6,5,2,-1,5,-6,-6,1,3,2,-3,-7,6,-9,-3,-8,-2,5,10,-7,-3,-3,-7,4,4,5,-7,-10,-8,-10,7,-1,1,-3,3,-4,-2,-3,3,1,3,5,-10,5,-4,-10,2,-10,-7,-2,10,7,4,4,-7,-5,1,-4,-6,9,-3,3,-10,6,5,-10,-7,8,6,1,7,8,7,-10,-9,7,8,7,2,-7,-5,-3,-3,4,-4,-5,-10,-10,-4,-9,9,-7,5,-5,9,-5,1,5,-10,-3,3,-5,10,-9,4,-7,6,-10,-8,-10,-10,-9,3,-5,4,-7,-6,7,6,10,6,4,1,-2,2,-6,-7,3,1,-4,6,2,-4,7,7,-1,-7,4,3,-9,-10,-7,-3,10,10,1,-5,-7,-3,8,-2,-2,6,-6,-4,3,-1,-2,3,-8,-5,-9,1,-1,8,4,-8,10,-4,2,3,-5,-6,-1,-10,1,8,-8,-6,5,8,-6,6,10,-6,10,-10,6,-2,6,-5,-7,-7,-6,-4,8,8,10,-2,6,5,-7,-2,10,1,-6,-2,-1,-10,3,6,7,5,-10,8,-5,3,-7,-9,9,-10,6,9,-3,2,2,7,-6,9,-9,3,9,8,-10,-2,6,-3,-7,8,1,6,-2,5,3,-3,10,-6,1,-6,2,-10,-3,1,-7,-8,2,4,-6,9,4,2,7,4,6,9,-7,8,-5,-9,-9,3,-10,-5,-7,-6,8,4,7,-3,7,1,-2,5,8,-10,-9,-8,9,5,-8,6,10,9,-9,8,-6,-1,10,6,7,4,-8,-7,4,2,5,-5,-1,2,-9,-5,1,-3,-9,8,-6,4,-5,-10,6,-10,-3,6,3,1,10,9,1,2,-3,-8,5,1,-2,8,5,9,-4,10,-6,-9,9,8,10,-2,2,-1,9,-6,5,10,-1,7,-7,3,10,-8,10,10,7,4,-9,8,-7,10,-8,3,1,-7,7,-10,3,-7,-5,6,9,3,5,8,8,5,2,9,7,2,7,-2,-9,5,8,-7,-1,6,6,7,6,1,-9,-1,-8,2,-4,-6,-3,-8,2,7,8,9,-1,-7,10,5,10,-10,9,-4,4,6,2,-8,9,-10,-1,10,-9,9,9,-1,-9,9,-10,-9,-2,-2,8,1,-5,4,-1,-8,-3,10,-8,-3,3,-5,5,-9,-10,3,1,7,6,4,8,-10,8,5,2,-4,-9,7,-4,3,9,4,-2,10,2,9,-5,-3,8,8,5,4,3,-10,-2,-3,-10,3,-9,4,-6,-1,10,3,-1,8,2,-2,7,-4,-2,8,-3,6,3,-3,-10,7], dtype = "uint64")#candidate|3204|(624,)|const|uint64
call_3203 = relay.TupleGetItem(func_2170_call(relay.reshape(const_3204.astype('uint64'), [6, 8, 13]), relay.reshape(const_3204.astype('uint64'), [6, 8, 13]), ), 3)
call_3205 = relay.TupleGetItem(func_2174_call(relay.reshape(const_3204.astype('uint64'), [6, 8, 13]), relay.reshape(const_3204.astype('uint64'), [6, 8, 13]), ), 3)
func_2495_call = mod.get_global_var('func_2495')
func_2498_call = mutated_mod.get_global_var('func_2498')
const_3208 = relay.const([1.031792,-4.031392,-7.545587,-8.885300,3.332719,1.906068,7.790609,-8.900685,-2.409891,0.106695,7.162773,5.194545,7.421785,6.737719,1.395501,-6.058133,-7.436149,-3.792427,7.065189,-0.196703,1.966006,-8.815370,-8.114488,-0.087653,-9.580087,4.744905,-9.256990,9.275772,-1.264863,-3.722067,-2.752293,-2.639642,0.199415,-9.370632,1.553613,-3.217812,-1.845385,6.310320,7.581178,1.945787,5.580833,-8.532686,1.766839,2.733715,-4.215392,4.445600,-6.500163,-0.245610,0.359291,-5.212978,4.985150,3.427928,-5.793071,0.419822,-4.104242,7.499385,1.957933,7.499055,8.044596,-7.239257,-1.110591,1.261247,8.536325,2.761758,-3.822355,2.796317,-7.164201,4.603440,8.999469,-8.372572,-9.570228,0.692583,5.057946,-0.758155,-3.004489,9.699713,8.039318,5.696670,-7.487851,5.861448,2.721850,-8.362227,6.491515,-3.970994,-4.701567,-4.594630,-2.478838,1.580635,-7.288874,0.456862,-9.678268,7.191506,0.559671,1.268995,8.686675,-1.131398,1.556094,-0.719547,-4.102901,-0.297243,-9.357275,7.738041,-9.191013,-1.935098,1.346294,0.639682,-2.013147,2.803807,-1.325083,2.000577,0.439561,-7.549444,2.336216,6.159417,0.676965,-2.290650,-2.332361,-5.948763,-3.616272,3.224881,-1.408415,-8.179462,7.561192,-8.319879,-3.537948,-7.685387,4.305564,-8.370037,8.307855,3.078734,1.081866,-3.583240,0.723836,2.272101,-3.364581,1.372233,7.504709,0.972038,9.946512,-9.487918,-4.751219,5.972960,3.717807,-9.190951,0.940555,0.939188,9.186749,-9.257048,0.088028,4.004808,-2.925882,-5.323050,-0.659247,4.714297,-0.016949,5.648493,-8.253306,-2.313932,-7.222388,-4.054264,-8.052853,5.604425,-7.338013,3.827841,0.229227,2.062453,5.067526,8.919675,4.049564,-2.943817,9.250950,-0.504192,-7.993349,6.239521,1.518978,7.064193,-7.233890,-2.117749,-7.747721,-5.095858,-2.377594,-7.351836,0.757557,2.490124,-9.058343,-4.878888,0.626316,0.450599,-0.918877,-4.431104,-7.384733,7.430138,-5.222051,0.377905,8.834609,-8.035021,3.798429,-7.990123,0.971292,-0.021437,1.500739,0.846723,2.127333,-1.249597,3.445610,-3.171112,-9.008757,-3.027110,9.055444,-9.399373,7.926375,-6.235119,5.805488,-7.315960,-0.918398,-8.484039,9.448747,-5.210193,-5.696249,-4.880320,6.035039,2.483270,5.595512,2.435234,-3.352069,0.331602,-3.696777,-1.261010,-2.020198,-8.490103,3.280172,-1.380313,-1.225419,-8.065369,-3.683703,7.828330,4.420369,9.732275,-9.281645,4.818641,-0.995585,1.389851,-0.767493,-5.571418,-5.588662,5.021759,2.211054,-9.712720,-2.800114,-0.995487,-7.282991,-9.478711,2.965303,-6.387949,-1.838338,-4.308449,-4.063755,-0.258728,5.041812,-2.441899,1.129834,-4.167606,1.530070,3.099963,6.902268,-6.702354,1.595881,8.871358,7.825597,-9.775109,3.549898,-6.737116,-8.577376,-4.992233,-2.945312,1.327751,-8.102787,-9.401200,6.884720,1.516103,-1.207417,-2.234808,-6.854117,-4.178558,3.860271,-6.702270,9.037875,-2.775685,5.920400,6.700730,5.439450,4.793686,-3.827745,-8.437748,4.160485,-5.977160,2.770195,0.770860,-6.985337,1.920204], dtype = "float32")#candidate|3208|(300,)|const|float32
call_3207 = relay.TupleGetItem(func_2495_call(relay.reshape(const_3208.astype('float32'), [300,])), 0)
call_3209 = relay.TupleGetItem(func_2498_call(relay.reshape(const_3208.astype('float32'), [300,])), 0)
output = relay.Tuple([uop_3201,call_3203,const_3204,call_3207,const_3208,])
output2 = relay.Tuple([uop_3201,call_3205,const_3204,call_3209,const_3208,])
func_3210 = relay.Function([var_3200,], output)
mod['func_3210'] = func_3210
mod = relay.transform.InferType()(mod)
var_3211 = relay.var("var_3211", dtype = "float32", shape = (4, 1, 10))#candidate|3211|(4, 1, 10)|var|float32
output = func_3210(var_3211)
func_3212 = relay.Function([var_3211], output)
mutated_mod['func_3212'] = func_3212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2052_call = mod.get_global_var('func_2052')
func_2053_call = mutated_mod.get_global_var('func_2053')
call_3300 = func_2052_call()
call_3301 = func_2052_call()
func_1408_call = mod.get_global_var('func_1408')
func_1410_call = mutated_mod.get_global_var('func_1410')
call_3305 = func_1408_call()
call_3306 = func_1408_call()
output = relay.Tuple([call_3300,call_3305,])
output2 = relay.Tuple([call_3301,call_3306,])
func_3323 = relay.Function([], output)
mod['func_3323'] = func_3323
mod = relay.transform.InferType()(mod)
output = func_3323()
func_3324 = relay.Function([], output)
mutated_mod['func_3324'] = func_3324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mod.get_global_var('func_3071')
func_3072_call = mutated_mod.get_global_var('func_3072')
call_3466 = relay.TupleGetItem(func_3071_call(), 0)
call_3467 = relay.TupleGetItem(func_3072_call(), 0)
output = call_3466
output2 = call_3467
func_3468 = relay.Function([], output)
mod['func_3468'] = func_3468
mod = relay.transform.InferType()(mod)
output = func_3468()
func_3469 = relay.Function([], output)
mutated_mod['func_3469'] = func_3469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2640_call = mod.get_global_var('func_2640')
func_2641_call = mutated_mod.get_global_var('func_2641')
call_3470 = func_2640_call()
call_3471 = func_2640_call()
func_311_call = mod.get_global_var('func_311')
func_315_call = mutated_mod.get_global_var('func_315')
const_3487 = relay.const([3.389507,-0.357022,2.196930,6.063908,3.126966,4.272382,-4.319865,-2.784608,-1.907482,-5.754221,0.597456,-6.856622,4.480331,-0.857581,-8.532639,-2.651754,3.594174,-4.034149,5.030513,5.204278,4.686502,3.767540,-9.646707,-9.960793,-1.532005,-8.256627,6.238731,-0.371235,-2.037142,-2.898295,-8.051642,-1.342415,0.988934,-7.376194,-3.887359,6.580698,-9.416944,2.301400,-6.169783,2.912015,-4.563549,5.404650,-0.899896,0.737435,-1.956263,1.632534,-0.248226,3.518458,7.058415,-3.206175,5.010655,7.231940,-6.227049,-4.360810,-2.755990,4.622428,-6.253828,1.063951,-1.647716,3.140584,-3.629188,-4.218840,-1.489538,-4.434004,6.570660,6.418476,5.347976,5.402065,5.396689,-3.966587,1.116939,-7.932838,-2.557362,8.542604,-0.307215,-1.008953,2.956789,-8.396586], dtype = "float64")#candidate|3487|(78,)|const|float64
var_3488 = relay.var("var_3488", dtype = "float32", shape = (728,))#candidate|3488|(728,)|var|float32
const_3489 = relay.const([0.781655,8.984367,9.166659,4.971357,1.631438,-4.251143,4.554023,8.537625,-8.623122,-9.632870,-7.657940,8.679187,0.410800,-2.019302,3.615408,8.711824,-6.192727,4.926371,1.426799,5.201817,3.943927,-4.524947,2.843435,-5.643454,0.693614,7.362180,9.969160,-8.429163,-0.698336,-0.249727,4.487435,-7.344557,-2.216600,-4.709484,-7.260830,-4.294076,0.780606,-4.742632,-4.033452,4.764115,8.497471,0.928259,3.445610,-3.314179,6.010622,-0.848583,-3.413338,-1.103894,-8.550371,-4.210415,-7.188955,-1.048782,-7.056516,-6.676089,-9.630113,-1.982174,1.806615,-2.694586,-7.585859,-3.980016,8.814524,-4.700250,8.692848,-3.036214,0.807844,4.975038,-0.176976,-4.191834,-3.627259,7.680764,-8.759891,8.487364,-7.857195,-8.794286,-7.208969,-7.926340,2.578153,7.999500,1.541572,3.313892,3.867299,3.557668,-1.167964,-5.421833,-0.549907,6.992726,5.335945,-9.795191,8.557737,-5.441273,9.339405,5.553500,-3.488858,-9.063288,6.926031,-1.084156,-1.704455,-0.969314,4.020741,5.913962,-5.946888,-4.172005,4.263722,6.301947,-4.973714,-4.197780,-6.607381,-7.174870,3.682845,8.109845,-0.731080,8.736899,5.006392,-6.194398,-4.536299,-3.405804,-8.802708,-9.769084,-9.303433,-3.846770,-7.642259,-0.738952,5.632223,8.954832,8.160704,9.087323,-6.113492,-0.947192,-1.326773,7.331539,0.902274,6.747391,-3.294773,2.097995,-6.106113,2.023002,6.029593,6.311424,4.635135,5.977267,5.688947,-8.922233,2.138648,2.546069,7.552948,-1.813287,9.026669,5.880790,4.541857,-1.763455,-3.346183,-6.581299,4.968965,-3.173860,-7.316945,-8.580051,-8.207770,-3.672349,7.049815,3.712537,-3.135173,8.518463,-3.765343,6.167400,-2.507242,6.417615,-8.171120,-4.892204,8.215242,-5.828503,-1.906176,-1.298703,1.378590,-1.243871,-4.828093,-7.301039,6.578945,-7.886614,-0.740403,0.724111,3.566238,7.219426,0.965734,-8.955515,9.785685,-5.140146,8.560484,-3.522666,8.419400,7.910491,9.671906,-0.644151,-7.415341,-1.470402,4.970353,8.740130,-8.017508,-6.845176,-7.111396,-1.211710,4.565801,8.821834,8.107037,1.104872,-9.308545,3.529760,-8.227434,-9.096380,-6.082343,8.917704,-7.362024,5.587234,-9.901962,-1.081957,-5.585065,-4.486315,-2.132528,-2.396586,6.639132,-8.892370,-2.589555,6.197629,-8.178444,6.201477,-2.508355,-1.796586,6.415863,4.039684,9.174046,-1.515000,1.557661,5.448585,-6.880884,0.749173], dtype = "float64")#candidate|3489|(234,)|const|float64
call_3486 = relay.TupleGetItem(func_311_call(relay.reshape(const_3487.astype('float64'), [1, 6, 13]), relay.reshape(var_3488.astype('float32'), [728,]), relay.reshape(const_3489.astype('float64'), [3, 6, 13]), ), 5)
call_3490 = relay.TupleGetItem(func_315_call(relay.reshape(const_3487.astype('float64'), [1, 6, 13]), relay.reshape(var_3488.astype('float32'), [728,]), relay.reshape(const_3489.astype('float64'), [3, 6, 13]), ), 5)
output = relay.Tuple([call_3470,call_3486,const_3487,var_3488,const_3489,])
output2 = relay.Tuple([call_3471,call_3490,const_3487,var_3488,const_3489,])
func_3501 = relay.Function([var_3488,], output)
mod['func_3501'] = func_3501
mod = relay.transform.InferType()(mod)
mutated_mod['func_3501'] = func_3501
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3502 = relay.var("var_3502", dtype = "float32", shape = (728,))#candidate|3502|(728,)|var|float32
func_3501_call = mutated_mod.get_global_var('func_3501')
call_3503 = func_3501_call(var_3502)
output = call_3503
func_3504 = relay.Function([var_3502], output)
mutated_mod['func_3504'] = func_3504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3323_call = mod.get_global_var('func_3323')
func_3324_call = mutated_mod.get_global_var('func_3324')
call_3512 = relay.TupleGetItem(func_3323_call(), 1)
call_3513 = relay.TupleGetItem(func_3324_call(), 1)
output = relay.Tuple([call_3512,])
output2 = relay.Tuple([call_3513,])
func_3515 = relay.Function([], output)
mod['func_3515'] = func_3515
mod = relay.transform.InferType()(mod)
output = func_3515()
func_3516 = relay.Function([], output)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2640_call = mod.get_global_var('func_2640')
func_2641_call = mutated_mod.get_global_var('func_2641')
call_3520 = func_2640_call()
call_3521 = func_2640_call()
var_3556 = relay.var("var_3556", dtype = "int64", shape = (10, 16, 13))#candidate|3556|(10, 16, 13)|var|int64
bop_3557 = relay.logical_or(call_3520.astype('bool'), relay.reshape(var_3556.astype('bool'), relay.shape_of(call_3520))) # shape=(10, 16, 13)
bop_3560 = relay.logical_or(call_3521.astype('bool'), relay.reshape(var_3556.astype('bool'), relay.shape_of(call_3521))) # shape=(10, 16, 13)
func_2640_call = mod.get_global_var('func_2640')
func_2641_call = mutated_mod.get_global_var('func_2641')
call_3561 = func_2640_call()
call_3562 = func_2640_call()
func_2951_call = mod.get_global_var('func_2951')
func_2953_call = mutated_mod.get_global_var('func_2953')
call_3565 = relay.TupleGetItem(func_2951_call(relay.reshape(call_3561.astype('uint32'), [10, 16, 13])), 1)
call_3566 = relay.TupleGetItem(func_2953_call(relay.reshape(call_3561.astype('uint32'), [10, 16, 13])), 1)
func_1439_call = mod.get_global_var('func_1439')
func_1442_call = mutated_mod.get_global_var('func_1442')
call_3583 = relay.TupleGetItem(func_1439_call(relay.reshape(call_3561.astype('int64'), [10, 16, 13])), 1)
call_3584 = relay.TupleGetItem(func_1442_call(relay.reshape(call_3561.astype('int64'), [10, 16, 13])), 1)
output = relay.Tuple([bop_3557,call_3561,call_3565,call_3583,])
output2 = relay.Tuple([bop_3560,call_3562,call_3566,call_3584,])
func_3585 = relay.Function([var_3556,], output)
mod['func_3585'] = func_3585
mod = relay.transform.InferType()(mod)
var_3586 = relay.var("var_3586", dtype = "int64", shape = (10, 16, 13))#candidate|3586|(10, 16, 13)|var|int64
output = func_3585(var_3586)
func_3587 = relay.Function([var_3586], output)
mutated_mod['func_3587'] = func_3587
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3601 = relay.const([[[-8.394747,2.552867,-3.438237,6.342219,9.892777,-1.941129,-2.635595,0.282521,5.911161,0.191496,4.575623,-4.979595],[-1.005667,-5.276178,7.272226,-3.109971,0.229189,-3.833401,4.950533,4.923230,4.368720,-0.626804,3.261816,2.882584],[-9.031012,-6.904644,-7.841364,-4.811035,-1.389659,9.768805,-2.711585,-6.769844,-5.418648,-2.490712,-4.054549,-1.018747],[8.367822,5.479461,-1.431250,3.062471,-0.222371,-2.399136,8.399377,3.589037,4.531650,6.061365,-4.278119,-7.867092],[-9.190674,-1.432043,-3.970102,-3.075374,5.145357,2.264090,-6.305801,-6.182334,-5.717344,3.574836,8.611911,1.616812],[-0.433472,1.196513,-2.949421,1.081447,-7.690438,-3.045569,-0.021301,-5.616685,-9.210919,8.918470,9.067062,9.675869],[0.226122,6.304010,1.898527,8.732722,6.732849,-1.797357,-2.425743,-9.993245,2.417823,-4.249566,7.663054,0.844234],[-8.011937,9.334407,-6.425706,5.475521,3.133842,6.449469,8.597824,-1.822290,9.121766,5.746832,-6.815525,-2.410830],[-6.640946,5.074413,1.650434,0.282407,-9.200120,3.212879,-7.561370,-0.878369,0.645740,-2.010103,-3.002250,2.711041]],[[-9.973898,-9.858092,-1.254222,-9.849048,9.549012,9.247893,3.753163,-3.064462,5.744358,-8.515996,-1.865414,1.284266],[-5.683349,-9.609536,1.038335,-1.248208,-3.828126,-6.908733,4.621514,8.578169,5.268513,-7.745151,-1.929038,-0.964758],[-6.889113,8.103091,0.162276,3.189229,-0.594742,-4.647352,5.577363,6.565067,5.701072,0.180835,1.251064,7.115338],[5.417794,8.478965,-5.040925,9.785114,-3.806410,6.541879,9.352921,-3.088631,2.623202,8.151941,8.320750,-5.942454],[6.088106,-1.678624,8.778253,1.991195,8.738649,-4.013853,-7.102012,-3.873873,-2.733970,-5.253402,-0.561351,2.115452],[8.542711,7.391717,-7.114935,-1.564335,8.084530,-6.901322,-5.200059,9.317036,-9.894603,-0.587221,1.119145,0.606586],[-4.691228,7.508370,-6.500321,-0.278577,-0.225619,1.206545,-6.963255,-8.187536,-4.022344,-2.132956,-9.185150,-2.984156],[4.471306,0.347574,4.681792,-4.801324,-0.769352,9.396055,-1.869344,-0.727004,2.085865,6.507166,6.159077,4.191547],[-2.127937,4.884698,7.679457,5.470821,-3.611015,1.101312,-2.004283,0.887449,4.231900,8.129992,4.556340,-4.653278]],[[3.247846,-5.582055,4.212141,-0.829554,8.111247,-1.646401,5.169369,9.145200,-5.600594,-3.157535,-7.819281,3.471685],[-3.733151,4.744995,2.792692,-8.188931,-7.030561,9.459632,-6.489067,8.622692,3.763805,-5.812527,-1.650114,-5.145026],[-7.627316,6.171162,8.612239,-3.087418,8.228485,9.137301,-7.372413,-0.752999,-2.639331,-4.510298,7.737910,-0.279123],[-2.183441,-4.438909,-3.407170,1.231620,2.781505,3.726410,-9.146306,-8.424190,2.278981,-1.978969,5.724279,-3.227875],[-7.564143,-0.955327,7.326804,7.197139,7.313366,-4.881551,-0.826749,-7.820228,-3.076342,-9.710615,3.632543,-5.093313],[-9.720001,-7.196161,1.881724,0.550234,-2.806167,-0.903894,-7.998183,9.246396,9.160215,3.464904,3.536859,0.015127],[9.987590,-0.548619,-6.080570,-9.644715,3.905295,-7.081189,8.194810,9.154370,3.385613,0.519521,8.230413,6.756749],[-0.640967,-8.258613,-4.195439,8.863065,-6.443212,-1.897106,0.271183,7.303536,-2.562808,6.380763,-1.309646,3.970831],[-1.446032,5.325223,7.087690,-3.618324,-6.396515,3.171710,-2.312640,-7.988231,2.587121,8.833195,8.016946,1.631855]],[[-1.870846,-8.698419,9.490172,-2.840860,-7.188799,3.461764,-5.947665,-3.969805,9.398548,3.785137,-8.936548,-1.541621],[0.791505,-3.415328,-9.702618,-6.932383,9.008263,7.009798,-3.882132,-8.357297,-2.968259,-3.457474,-3.949182,8.249006],[-9.512284,2.399682,-1.406424,-3.401074,-5.355615,1.236672,0.031722,6.685572,-2.812045,0.558271,0.856453,6.112359],[-6.527124,-3.316785,-0.216319,-5.350718,0.324573,-4.624325,0.561604,4.534209,5.296658,-6.983867,-4.993984,9.513735],[1.324188,1.502309,1.511469,-9.878333,-2.062279,-9.999416,-6.697341,8.623084,-6.957024,2.514135,2.681965,8.448774],[2.492135,0.364141,-2.284345,-3.772193,2.062063,-9.367892,1.658486,-1.597699,1.254331,-6.478965,3.827803,0.652394],[0.782414,8.355723,2.842318,-5.822993,0.821192,-8.623797,-9.866624,6.170404,-4.949506,-6.958001,-4.312654,2.398542],[7.229198,1.494074,-2.388325,3.062429,2.813312,-5.520353,7.701442,-1.697722,-9.195703,-0.652238,5.140591,-3.231531],[6.053132,4.787327,-7.126191,-1.065488,6.233713,-8.626222,-2.519525,5.645728,6.938290,3.094726,-1.823124,5.858541]],[[-8.410821,-8.721454,9.778716,-4.191970,8.100639,-6.542533,-7.303098,-4.866371,-7.569614,6.724840,-8.951582,-1.415366],[-2.707071,-0.479277,1.301858,1.373132,-3.637744,-4.026537,3.945255,-1.327597,-9.426573,-2.351836,1.914879,-3.470367],[6.398186,6.296288,3.488291,2.078019,7.902378,-5.549014,8.057161,-9.610772,7.961710,0.938514,1.985445,-8.963117],[-9.796051,1.305779,3.993020,7.829483,7.370833,-9.853832,7.615194,2.471712,5.146291,6.770548,1.624702,-5.717820],[-1.860999,6.414697,-1.831398,-2.090080,-3.265156,-5.335872,3.839680,4.708608,-0.365028,6.117635,6.046620,-3.093880],[2.256211,-8.386960,-3.439905,0.979898,-8.967109,-1.396509,-2.133746,-0.980383,-8.902510,-6.399245,-3.994263,9.079519],[4.991981,-9.629316,3.999226,-2.217802,1.127559,3.718967,4.995701,-9.009083,-1.050015,-9.899968,5.983857,7.997986],[-6.627030,-3.213499,1.157544,6.678175,-7.359215,-8.035592,3.726797,-7.302873,9.843728,-1.246917,1.914126,-1.193731],[3.201867,-8.307936,1.430381,3.346249,-8.733620,5.415397,1.748368,-7.368808,-4.952752,7.775060,2.661607,-6.341456]],[[9.920016,-3.780297,-0.804875,-7.795914,8.788480,-1.972237,0.811051,-1.273172,9.306997,3.388121,2.753072,5.290415],[-4.157205,6.123725,-7.801327,-0.003524,-9.156872,-0.378481,-7.468698,-0.343993,-5.299778,-6.795470,-6.226041,7.506184],[-4.328331,-2.106153,-8.692336,-3.993823,-7.720013,4.787155,0.477696,4.852828,-2.211635,-8.216582,-2.112878,-8.811273],[-8.431205,-0.713316,-8.695234,-7.818517,0.887375,-1.321461,-9.512920,-1.195906,-0.484078,-3.080310,-6.568337,1.576142],[7.296526,6.533478,-3.276372,-5.261320,-5.866013,-4.392057,-1.240744,-9.325063,0.458953,-6.117488,1.015041,8.894783],[-2.783056,3.540961,9.998453,0.376866,7.147047,-0.590013,-1.350422,-3.261828,-0.876881,8.883014,9.173714,-3.092233],[-4.551936,6.854275,1.187925,6.663645,-2.933988,-7.428545,0.607557,-9.759203,-2.681090,2.746313,-8.171034,-1.537075],[-7.412969,6.128138,9.539011,-7.969938,-3.895985,2.966101,-6.715717,2.814914,8.771714,-1.501490,0.160832,3.942636],[-1.508019,8.509449,-6.229085,9.893642,7.213135,6.908305,-9.347070,1.449865,0.413267,-6.641828,2.931727,-3.355721]],[[-9.646966,-2.380760,9.733177,6.500837,-5.275912,-1.873992,-6.030196,8.640261,3.150348,-7.996569,-3.697243,-6.446605],[-0.529188,-2.373367,6.316736,9.630986,5.946125,9.084044,3.593664,-6.357602,0.671691,3.510257,-8.397572,-8.995846],[7.230795,3.272391,-9.336286,8.264267,0.636017,-2.367878,-1.461050,-1.896724,7.336038,-9.327717,-2.918755,-7.595752],[-2.145806,-0.622579,-8.773681,-2.437679,9.004817,-1.286559,9.926255,4.256014,8.412103,4.089944,6.161894,0.067764],[-1.067724,1.669670,2.538944,-8.133616,2.867049,-8.648368,1.324538,4.254012,4.275889,-1.509017,4.094763,1.084130],[-5.747316,-5.094560,-9.231137,-0.205076,-7.429627,9.422934,-3.581059,7.368500,-6.939438,6.212667,-6.596075,3.741840],[-1.799682,-5.117565,1.827966,-2.328437,7.609888,0.710165,0.703860,-1.659505,3.146178,5.378605,7.561446,-2.622775],[-2.468625,-7.207155,-7.455613,-6.238959,6.603962,6.052877,-2.064241,-3.367356,-7.187786,1.631488,-0.077741,0.276847],[-4.450822,3.028768,1.061544,0.851955,3.864464,-8.371800,9.129664,3.369126,-4.010620,3.963645,-4.722423,-0.760163]],[[7.100972,-4.725473,1.914707,-8.770902,-8.140081,4.225402,0.512625,-2.940889,-7.675187,-9.014068,7.359057,9.592056],[-9.482810,2.550054,-6.995687,-4.548923,1.192225,9.193018,-5.074619,-2.479465,9.815779,7.266989,6.393921,-8.532211],[-7.542442,2.804353,-1.140384,5.972212,-5.086172,8.336692,-1.823019,-6.060419,3.975584,-4.665408,4.443808,-2.123016],[1.297340,4.241112,0.445217,-8.831871,9.045126,-7.547246,-4.626374,-8.860877,-7.764516,-0.648433,1.817273,-5.307883],[-1.612583,6.946737,-3.589465,2.597924,2.639146,-4.748651,-0.460833,-5.148549,-6.097111,0.357103,2.710329,2.012865],[4.054013,-7.929632,1.588356,3.571369,-8.270482,0.477228,6.927038,-0.822170,-3.117999,1.119008,7.124194,-0.559414],[-4.091505,7.021944,9.426725,0.324122,-1.737500,-4.116418,9.745766,7.125459,-6.871459,-3.570753,1.556495,-1.785898],[3.898163,-4.410153,3.880496,-4.521460,-7.149692,1.501450,1.915590,1.701421,7.680430,2.298767,5.652312,-9.152289],[8.770970,7.276470,4.632465,-5.868636,-0.247207,3.867948,7.656521,5.002844,9.667230,-2.758067,-6.764097,-5.262424]],[[1.518208,-7.464390,6.330322,-8.720388,6.108566,9.378813,3.958720,7.962453,5.972814,4.656466,-8.501085,-2.773892],[-5.150295,-6.318258,-5.008879,-4.757857,-0.375675,6.085905,3.906766,8.810508,5.503329,9.517211,-6.756084,-6.399255],[9.074623,0.616242,9.053259,-4.146656,-5.673427,-2.063720,7.631038,-1.610160,4.758410,1.977264,7.547734,9.853289],[-1.683633,8.131930,2.904199,-8.404721,7.814809,-1.902782,0.122423,-6.287506,-7.456341,7.474391,5.382640,6.960156],[0.168205,3.009218,8.856507,5.099208,8.801668,0.031433,5.615369,-5.170691,2.326516,6.516995,3.640143,-0.083489],[-5.925425,9.499220,5.935139,-2.618199,-9.708937,1.582258,-3.325348,1.604924,3.055182,-6.374437,-1.456083,1.262538],[3.276724,-8.767827,7.557401,-5.945409,-8.781464,7.213364,6.396480,-8.229716,-0.320610,4.565203,0.153095,-4.410494],[8.608182,9.695175,6.770337,1.880821,1.250247,6.452535,-8.881237,-8.067692,-8.563405,-0.160193,7.714068,9.139977],[-9.061439,-7.940971,6.102669,-6.522806,4.492149,-9.051813,5.687454,5.347634,0.395579,4.440118,7.208589,5.402698]],[[5.699547,7.103090,-4.110651,-0.873251,9.510631,-7.983808,-3.634348,-8.428643,-4.869096,-7.902211,-5.416290,-1.147477],[6.489162,-8.637942,4.019511,-0.736699,2.217026,3.877178,-5.632964,0.087189,-8.323396,-6.305314,-5.673326,-9.838544],[8.503135,-9.139143,8.719704,5.436859,-3.129159,0.834989,6.713602,4.986704,3.649840,9.549929,-7.931085,9.801239],[-6.764179,0.253552,-5.601793,-4.075642,9.679325,-7.503898,5.900731,5.570992,6.990152,-7.356552,-8.599763,0.913946],[-3.185727,8.762584,9.279336,-9.429070,-8.588681,8.694208,4.500624,-2.017747,-1.150256,9.382395,-7.941597,-3.345397],[5.298715,3.548013,-7.697050,7.604253,5.459923,7.940788,-8.817843,-5.411077,-2.062509,4.081688,7.506903,-0.274519],[-8.745979,-4.453946,-7.014251,-9.568190,7.982353,6.101938,1.678668,-6.527733,3.759376,1.150207,0.615283,-9.238189],[3.404018,-4.352319,2.602518,1.900961,-3.660094,-7.529096,-5.229624,3.830568,-9.432749,4.585046,8.456294,-0.470489],[9.752660,-2.758934,-6.931577,-1.260613,6.613790,-3.635908,3.041403,-0.292282,3.978095,-5.751000,-9.940790,1.983644]],[[-0.588516,-9.653829,8.120508,-4.979680,-5.707754,1.787704,3.025564,6.862614,-3.796486,8.273921,5.171793,-8.297749],[3.282925,-3.389786,-3.259964,-0.543299,-0.114358,-1.273943,-0.215576,-4.597321,-8.012473,2.837755,-0.619932,-5.017360],[-0.009061,-1.127710,6.941712,1.013043,-0.896141,-8.447071,8.013380,6.637210,3.754102,1.568629,8.198179,5.534038],[-4.504193,7.703132,6.960327,3.734468,-2.964150,6.305035,-0.149000,-1.124859,-6.422817,6.337149,0.621366,7.563627],[4.801711,-8.723694,-2.668967,-5.876583,-3.262834,3.794324,2.224773,-7.173975,7.716972,0.037166,-6.615972,-3.933479],[0.844336,-2.941145,-6.920135,9.260252,3.534920,-6.513564,2.992072,-7.415730,3.199764,8.540720,-5.904627,-6.854123],[0.567764,-5.732957,1.234174,-1.249270,-6.502963,2.706045,-4.876615,-9.140453,6.131484,-5.171276,3.279223,-4.730232],[-8.553549,0.675894,8.727880,-4.682915,-6.489839,-7.000106,4.597863,-2.040849,-5.127348,6.078769,-0.624742,-5.662905],[-8.617941,9.799342,2.063226,-3.747198,8.492223,-2.095270,6.200388,-7.975145,4.056617,8.080771,7.468424,7.635976]],[[-8.554005,0.750758,-1.653477,-1.150152,-6.220322,8.519382,5.093788,0.298287,9.085533,-3.795373,3.735281,-5.720444],[4.748584,3.643099,8.737727,-0.114769,1.871532,3.806200,8.960818,8.057879,3.806324,4.928682,-5.272043,0.691061],[4.646967,6.055881,-6.272216,2.642170,0.069135,2.373606,4.746672,-7.620288,2.466761,2.226007,0.024895,-1.607114],[8.687162,-7.183859,-7.565918,4.966678,4.947468,-0.192421,6.923027,1.810393,9.360151,5.367585,8.645835,7.885125],[5.771164,2.657214,3.782493,5.079255,-8.053540,3.540056,-1.048777,-7.070032,8.152081,2.171998,-6.189322,8.170953],[8.639373,7.836792,2.338172,5.790563,2.353280,9.058941,-5.521731,9.597130,-7.110964,-1.296753,4.144875,-0.158784],[3.312254,7.164683,6.251344,6.918140,-8.405184,4.727073,-8.410598,-8.820296,8.646661,-5.368071,0.414555,-7.953961],[-1.061469,-3.573838,3.180895,-6.805441,-1.392636,7.202386,4.402094,5.820596,7.153364,7.464322,2.562526,5.932315],[3.743113,8.439571,4.630796,7.660411,-8.616480,1.580155,-5.319715,-7.606748,-6.122791,-5.780254,2.535935,0.523788]],[[-3.346712,-4.393484,-8.564165,7.602301,5.797515,-0.216476,-1.112666,3.239260,8.298865,3.992506,-3.845948,2.797203],[8.038476,-8.258308,3.956161,5.307581,-7.886552,5.877897,2.320332,3.767590,7.713073,8.108262,7.202636,-5.079659],[7.288864,-6.452425,-4.805704,-7.056673,-3.509298,-1.905421,-4.171019,5.188338,3.531630,-6.797825,5.025493,6.737575],[9.211413,3.956946,1.506061,-2.603340,1.320031,2.335695,-1.346744,6.545696,-6.597730,-8.926872,2.313020,-9.154680],[-2.722837,8.978101,-7.665227,1.754706,2.209048,-9.714006,-0.307006,3.613488,5.137232,0.330309,5.666317,-3.913562],[-0.723401,-0.633327,5.606667,-0.870693,1.033262,0.154459,8.003881,-9.926942,9.464653,0.955439,9.861025,3.985596],[9.035170,-5.728977,2.151202,0.295544,1.113432,5.741197,-8.966186,-5.791519,0.610873,3.348440,-6.208752,8.328377],[-5.330103,-4.044887,-7.410943,-2.574943,-3.078573,-3.765051,-2.598239,-5.571013,5.653727,-7.628337,8.543079,-4.142390],[-2.402165,0.042596,1.329234,4.553921,-2.285073,0.305337,5.680073,-9.994747,-0.096838,-7.199152,-4.860461,-1.652355]],[[-3.884891,3.363047,3.551067,0.723565,5.000011,9.816286,9.493956,-7.307333,-7.604298,-3.706199,-6.905771,8.154877],[3.374144,6.933290,-6.898364,-9.707919,-9.671870,8.562705,4.236915,9.211329,4.217175,8.450049,6.348063,-1.425972],[3.969642,-9.134464,-7.369415,-4.039191,1.124747,7.061086,7.336473,-0.526877,-0.496957,6.323322,-4.557068,-5.027331],[9.833744,8.776011,-9.734132,-3.803784,-9.618382,5.589477,8.898371,2.171300,4.990339,-7.463126,-1.318380,-6.364864],[-0.313327,-6.164252,-2.471966,0.360372,-5.056134,2.814209,-4.002199,-9.235468,-5.887197,2.099100,2.765419,-3.776414],[-3.597949,4.222208,3.051556,7.615444,1.349026,5.639898,-4.462152,-4.653014,6.896628,7.078454,5.894240,-8.574000],[9.018409,2.993529,-8.910346,4.123811,8.569758,4.289414,-0.199214,-1.883142,-3.343990,-0.964999,-9.534557,7.068138],[-5.178608,-2.867359,-0.402721,0.557723,-8.452084,-2.995780,-0.802193,9.022641,-5.142574,-9.493890,5.419433,9.558791],[-3.442215,4.525507,-8.106021,-1.956911,6.043903,-6.284065,-9.130311,-0.834876,4.319635,2.204598,-0.592227,2.211202]],[[-1.373033,-9.990515,-7.786269,3.165560,8.151215,-7.317204,-6.821983,-3.924183,2.380261,6.885299,-0.108882,-2.456519],[1.983273,9.378918,0.041162,-4.469402,-5.204834,7.141367,-1.508936,-1.991607,5.664569,4.779551,9.362517,-2.432466],[1.011772,-9.863737,0.592321,1.742747,9.687944,-3.969657,9.280231,-8.358862,4.732436,-3.975138,-1.079230,0.019772],[6.521997,8.074493,-9.049348,6.764924,-6.826080,4.694170,3.858642,-5.470382,2.561452,3.048847,7.784885,9.380639],[4.846337,3.633555,-1.748926,-2.433990,0.634219,-3.771109,3.610647,4.851486,-4.268801,9.757836,3.880219,-8.409831],[-9.299732,4.640521,5.895260,4.263671,7.423704,-2.735884,1.123743,0.385357,0.753580,0.062027,-4.511861,-8.875931],[7.884483,-2.759162,2.417801,-2.117611,-4.439970,5.848171,-7.526751,-1.835145,1.313290,8.566576,0.419499,-3.649187],[-0.906856,3.304611,-5.617324,3.868832,9.044645,3.406854,-8.661595,8.073289,5.551821,-2.823106,9.130711,2.936819],[-4.608757,7.552243,-6.466245,-7.662976,1.214262,8.001982,6.986275,-8.184074,-4.340659,2.846995,8.463011,4.231541]]], dtype = "float64")#candidate|3601|(15, 9, 12)|const|float64
const_3602 = relay.constdtype = "float64")#candidate|3602|(15, 9, 12)|const|float64
bop_3603 = relay.power(const_3601.astype('float64'), relay.reshape(const_3602.astype('float64'), relay.shape_of(const_3601))) # shape=(15, 9, 12)
func_1100_call = mod.get_global_var('func_1100')
func_1103_call = mutated_mod.get_global_var('func_1103')
var_3612 = relay.var("var_3612", dtype = "float32", shape = (300,))#candidate|3612|(300,)|var|float32
call_3611 = relay.TupleGetItem(func_1100_call(relay.reshape(var_3612.astype('float32'), [5, 4, 15]), relay.reshape(var_3612.astype('float32'), [5, 4, 15]), ), 0)
call_3613 = relay.TupleGetItem(func_1103_call(relay.reshape(var_3612.astype('float32'), [5, 4, 15]), relay.reshape(var_3612.astype('float32'), [5, 4, 15]), ), 0)
func_2951_call = mod.get_global_var('func_2951')
func_2953_call = mutated_mod.get_global_var('func_2953')
const_3616 = relay.const([-8,-3,8,8,2,2,7,-2,4,-7,6,-3,5,-8,5,-1,4,1,1,2,9,3,-2,8,-10,-1,6,5,10,-6,-9,-10,-1,7,-10,-7,2,7,-4,-10,-10,3,8,7,9,5,-10,-3,3,1,8,2,-8,6,4,6,-10,9,-7,6,-10,4,-5,9,6,1,9,-5,-2,9,-8,1,-6,-6,7,-8,2,-8,-10,4,8,1,-9,-6,-9,9,2,5,-10,-2,10,7,2,8,-2,-10,-8,-10,9,-9,1,-6,-8,2,10,7,3,-4,9,9,-6,4,1,-10,9,9,-7,-4,5,-3,1,-5,-5,-1,2,-6,2,10,-5,6,-2,-6,1,4,-10,-1,8,-7,-6,7,-2,-4,-4,-10,9,-5,-2,-9,-2,8,-9,-3,8,2,-8,-2,6,5,-4,-1,10,1,-6,4,3,-8,-5,-1,-10,-7,-4,1,4,-9,10,1,-5,-3,-5,7,-2,-2,7,-8,-6,5,3,-9,-1,-7,-8,4,-3,4,-5,7,7,2,1,-1,6,-7,10,-8,-4,-6,3,8,5,5,-5,7,2,-8,-1,1,4,6,6,7,-7,4,10,-8,-6,-7,7,-4,3,-3,-10,-2,2,8,-10,-10,7,8,6,4,-1,2,7,9,8,4,6,-10,-2,10,3,-10,4,10,6,-3,-7,8,-10,3,1,-6,3,-7,4,10,7,-2,10,10,-5,6,9,7,-1,7,-10,-8,9,-2,5,4,4,3,-5,-1,-8,-6,10,-4,6,4,-4,-2,2,-8,8,8,-8,-7,4,5,4,6,-5,-7,-4,10,7,-5,-8,3,4,7,2,5,1,-5,1,10,-6,8,10,-9,10,6,-6,-3,2,-4,-3,8,1,10,9,-10,7,-4,-8,5,-9,-5,10,7,7,4,-2,-5,-8,-7,-4,-1,-4,7,-7,1,3,-1,3,5,-1,3,3,-8,-2,-9,9,7,-2,7,-9,7,4,5,6,-9,-8,2,-2,-4,3,-3,3,8,-6,-7,3,9,2,5,3,-6,-8,-4,-9,5,2,-6,7,10,-1,2,-1,-3,4,-10,4,10,4,-4,-2,7,-8,7,-1,1,-4,-7,-4,5,-10,5,-2,-10,8,-1,3,-2,-3,6,-6,5,2,4,-4,-1,5,-10,10,-3,-4,-7,-4,-7,10,10,-2,7,-9,-7,-1,9,6,-2,1,-7,2,1,-4,5,-2,9,2,-8,-6,-5,-5,2,-8,-2,-2,2,-2,1,1,-2,-3,-7,-9,-7,9,-4,10,10,10,5,-8,7,-1,-9,-8,-3,4,-7,6,1,-8,2,9,-6,-1,-3,9,10,-10,-2,2,9,-7,10,-2,9,-6,-10,2,-5,8,-5,-8,8,-5,-8,6,-2,6,6,-5,-10,7,-3,7,-5,6,3,-4,5,1,-6,-5,-2,10,-8,7,3,9,5,6,10,-8,9,2,-3,9,2,6,4,-3,3,4,4,-6,7,6,7,8,10,-1,-5,-10,4,-8,-4,-5,-1,-6,10,1,-3,5,-5,-7,-7,7,9,-6,3,-5,6,-7,9,-1,3,-8,-3,8,10,-2,-4,-6,6,7,-7,-10,2,-2,-9,2,9,2,-5,-9,-6,9,-1,4,-6,-1,-5,9,-8,-10,6,-1,-4,-6,-3,-1,7,2,4,7,9,4,-9,-3,4,4,-7,-6,7,-9,8,-1,9,-4,9,2,9,2,-9,-3,-10,2,1,10,9,-8,9,-1,-3,9,6,8,7,3,6,-8,2,-6,9,1,-7,-4,-8,-5,2,3,-5,-3,-2,8,-10,-6,6,5,10,-3,5,-5,4,4,-4,-4,-7,-3,1,8,-8,6,-8,9,-9,7,2,8,2,4,10,-4,4,7,9,-9,-2,2,5,8,-8,9,6,7,-1,1,10,-8,5,2,-3,-4,3,4,9,-4,-4,-6,10,8,8,-3,-9,5,-8,-1,-5,7,10,7,-3,8,-6,10,10,7,9,6,-1,-1,7,2,-4,-1,-10,6,1,-3,-8,1,10,8,8,-5,-5,7,-8,-4,-8,1,-3,-3,10,-1,8,-8,2,10,-2,-8,-3,10,4,8,-9,1,-5,-8,2,-5,3,-1,-1,-6,7,-1,9,-4,5,8,-10,-8,5,9,-7,-10,-2,-7,3,6,-7,10,6,10,5,-7,-9,9,-3,1,-7,-4,5,1,-5,8,4,10,6,-3,-10,-6,-7,2,5,2,6,10,7,9,-8,6,9,-2,-9,-5,-7,-9,8,-4,7,-5,-10,-4,6,-1,-4,-4,6,-5,-3,8,-3,-4,-8,-2,-2,10,3,3,9,2,2,6,4,-4,4,-6,-9,-6,9,-6,8,-7,1,-10,3,-6,8,4,3,-8,2,-6,6,-9,-3,-10,-2,1,6,-4,3,-5,-9,-4,6,3,-10,10,10,-3,-6,-3,-9,-10,8,-5,3,6,8,6,6,4,8,-1,3,3,-8,-10,3,-3,3,5,-7,-9,3,-9,-5,-2,-6,1,-9,-3,-1,6,-2,-6,-7,2,-2,-9,6,-1,-2,4,-7,1,1,5,-6,7,-1,2,6,2,-5,-10,-10,2,5,9,-4,10,-4,-7,-9,6,-9,-8,4,-2,2,2,4,-3,3,-3,-4,-10,1,9,-4,-9,-7,10,8,2,4,3,9,9,2,7,-8,-4,-6,8,-10,-7,-6,8,-6,6,-4,10,-7,-5,2,4,-1,-8,3,-9,2,10,2,4,8,-10,10,-8,-10,5,7,1,-2,-6,-6,8,2,8,5,4,1,-8,7,-6,-10,-8,-4,6,-9,-9,-9,4,6,-7,-1,4,6,-1,-9,9,-1,6,-9,1,5,4,-8,5,-8,5,-5,1,3,4,10,1,2,7,8,-1,10,6,2,2,-6,-1,-7,2,-6,-2,-10,10,-10,5,-6,2,-2,2,2,5,-10,-10,-1,-9,-1,-5,-3,4,3,3,6,5,-4,1,2,5,-4,-1,9,2,-10,-10,-2,-6,6,6,5,-9,10,-4,-5,6,-5,-4,8,4,-3,-1,-9,-1,8,-6,-9,-1,-4,-1,5,-10,-6,-7,-10,-10,-5,7,-2,8,6,-3,8,3,-1,3,-4,6,-7,4,-4,-10,7,-3,-10,9,7,-10,-5,9,9,-2,6,3,-1,-3,-1,-3,4,7,9,9,-7,-2,-4,-10,4,-6,-10,-6,-5,-7,3,7,6,-9,-2,-10,7,-5,3,-4,7,-9,-10,-9,3,-5,6,4,-8,6,3,-2,5,1,-3,7,8,9,1,7,6,10,6,5,-9,5,-6,-2,4,-3,2,-9,5,10,-9,-10,9,-10,-8,-8,-5,-8,-1,6,-6,6,-8,-8,-6,9,-5,2,-2,8,7,-8,-2,5,-9,-3,-1,-2,-6,2,-1,5,3,-2,10,-7,-8,9,-1,5,7,-4,-7,-7,-1,2,1,7,-7,-1,9,-3,-2,8,9,3,1,6,4,-10,-4,6,-2,-1,4,-9,1,1,-6,-9,2,5,-9,-1,6,-9,-6,8,-10,8,-3,8,-8,-1,9,1,2,-7,7,-8,-1,-5,-2,4,4,-7,-10,-2,7,5,5,-7,4,-10,4,-5,-4,2,3,-9,10,3,4,-10,-1,7,3,-3,-10,7,2,8,2,4,-6,2,1,-7,1,8,-2,-7,10,1,4,5,2,2,3,-9,8,-6,7,8,9,-9,10,8,-6,4,-9,-6,4,6,3,-6,-9,4,4,-3,7,-7,-7,-8,6,-5,-3,-7,-8,-4,-10,-3,-3,-4,-8,-3,8,1,5,-2,-1,5,7,-1,-6,-9,-5,5,9,6,-6,-2,7,4,3,2,-3,10,-10,9,3,-2,10,6,-7,-9,-1,1,-4,-1,-1,3,-9,-7,3,5,-4,6,-4,-3,5,6,-3,-6,-2,-6,-10,-8,-1,10,-3,-1,3,10,10,-10,7,2,5,-9,-7,-1,-3,7,-7,9,1,-4,-7,-4,10,-3,4,-7,5,7,2,-8,10,-10,-2,5,-8,10,5,-2,9,-2,-1,1,8,8,7,-6,3,4,-6,1,-9,-9,8,-1,-7,10,-3,-3,-1,2,1,7,-5,-1,9,7,6,4,9,1,-10,3,-3,6,-1,4,-6,6,-1,2,-1,-9,7,1,1,-10,-2,-6,-1,-3,-1,-4,7,8,-9,7,1,8,-9,4,10,3,-8,9,9,4,8,-7,-10,-4,-5,-10,8,6,7,-9,5,1,9,5,-3,-10,-6,7,-1,-4,3,-5,-4,-8,1,9,9,9,1,8,2,-6,-6,-4,-7,5,2,1,-1,8,6,7,-9,-5,-2,-8,-2,5,-9,-5,7,6,-10,-9,6,2,-7,9,-5,8,-7,4,-1,7,7,-6,-2,8,-7,-2,4,-7,2,9,-10,5,-3,9,9,6,8,2,4,3,-9,-6,-10,6,-1,-9,1,-2,-4,-2,5,-9,-10,4,-3,5,3,-6,4,-2,8,10,5,6,1,10,-6,10,2,-7,-10,-8,4,3,-8,5,-8,5,-6,-3,-9,-2,4,10,-5,-10,9,-7,1,-3,7,-3,2,8,-1,5,-6,6,9,5,-4,9,2,-6,-8,-2,-8,1,4,-8,-10,6,9,5,7,2,-4,5,-8,1,-2,4,1,-10,3,-2,2,-9,10,-9,-4,8,-3,-6,-8,1,-1,9,-8,-8,8,6,-8,1,8,6,-10,-10,9,-7,2,-6,1,-4,8,-2,4,8,-2,1,-8,2,1,-2,7,-9,5,9,-5,-7,-6,1,8,1,8,-1,-9,4,-4,-4,6,-9,3,9,2,-2,6,10,1,-5,5,5,9,-4,6,6,-3,4,-5,-3,10,7,9,1,1,8,4,-8,3,-7,-3,-10,10,-2,9,-1,-3,7,8,-1,-6,2,2,-4,-5,-5,-6,5,-1,10,-4,-10,-1,-6,-7,-5,8,4,1,-7,8,5,7,9,-8,-9,-10,-9,6,-10,-4,7,-4,2,-6,4,-10,-6,-10,6,-6,10,4,8,7,-2,-3,-3,-9,-4,3,-8,6,2,1,-6,3,-4,7,6,10,-7,10,-9,6,-3,-1,3,-5,5,-3,2,9,2,7,-10,-9,-9,-8,7,4,-6,-8,-4,4,-8,2,-4,7,-7,-5,3,-5,-4,-1,-8,8,9,2,1,-5,-4,1,8,-3,6,1,3,-10,-8,7,-5,7,-3,7,5,-2,-1,-7,5,-1,10,-8,7,-2,-8,-10,-8,-7,7,4,10,-3,1,7,1,-6,-1,6,2,-2,8,5,8,-6,8,7,8,-8,-1,4,4,-3,-4,-2,6,9,5,-10,8,7,8,5,-5,4,7,-8,-9,3,-7,-10,-8,-8,4,5,6,9,10,-7,-6,-1,-10,-1,9,10,10,10,2,-2,-6,8,3,-3,1,7,2,10,6,-8,-7,2,10,-9,8,9,-10,-5,6,3,-1,-7,-8,-4,8,1,10,-5,3,-5,5,8,-2,-8,2,-8,-2,5,-1,6], dtype = "uint32")#candidate|3616|(2080,)|const|uint32
call_3615 = relay.TupleGetItem(func_2951_call(relay.reshape(const_3616.astype('uint32'), [10, 16, 13])), 2)
call_3617 = relay.TupleGetItem(func_2953_call(relay.reshape(const_3616.astype('uint32'), [10, 16, 13])), 2)
output = relay.Tuple([bop_3603,call_3611,var_3612,call_3615,const_3616,])
output2 = relay.Tuple([bop_3603,call_3613,var_3612,call_3617,const_3616,])
func_3619 = relay.Function([var_3612,], output)
mod['func_3619'] = func_3619
mod = relay.transform.InferType()(mod)
mutated_mod['func_3619'] = func_3619
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3620 = relay.var("var_3620", dtype = "float32", shape = (300,))#candidate|3620|(300,)|var|float32
func_3619_call = mutated_mod.get_global_var('func_3619')
call_3621 = func_3619_call(var_3620)
output = call_3621
func_3622 = relay.Function([var_3620], output)
mutated_mod['func_3622'] = func_3622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3687 = relay.var("var_3687", dtype = "float32", shape = (8, 15, 6))#candidate|3687|(8, 15, 6)|var|float32
uop_3688 = relay.log2(var_3687.astype('float32')) # shape=(8, 15, 6)
func_2424_call = mod.get_global_var('func_2424')
func_2426_call = mutated_mod.get_global_var('func_2426')
call_3694 = relay.TupleGetItem(func_2424_call(), 1)
call_3695 = relay.TupleGetItem(func_2426_call(), 1)
output = relay.Tuple([uop_3688,call_3694,])
output2 = relay.Tuple([uop_3688,call_3695,])
func_3699 = relay.Function([var_3687,], output)
mod['func_3699'] = func_3699
mod = relay.transform.InferType()(mod)
mutated_mod['func_3699'] = func_3699
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3700 = relay.var("var_3700", dtype = "float32", shape = (8, 15, 6))#candidate|3700|(8, 15, 6)|var|float32
func_3699_call = mutated_mod.get_global_var('func_3699')
call_3701 = func_3699_call(var_3700)
output = call_3701
func_3702 = relay.Function([var_3700], output)
mutated_mod['func_3702'] = func_3702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1299_call = mod.get_global_var('func_1299')
func_1300_call = mutated_mod.get_global_var('func_1300')
call_3725 = func_1299_call()
call_3726 = func_1299_call()
func_2727_call = mod.get_global_var('func_2727')
func_2728_call = mutated_mod.get_global_var('func_2728')
call_3729 = relay.TupleGetItem(func_2727_call(), 2)
call_3730 = relay.TupleGetItem(func_2728_call(), 2)
output = relay.Tuple([call_3725,call_3729,])
output2 = relay.Tuple([call_3726,call_3730,])
func_3785 = relay.Function([], output)
mod['func_3785'] = func_3785
mod = relay.transform.InferType()(mod)
mutated_mod['func_3785'] = func_3785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3785_call = mutated_mod.get_global_var('func_3785')
call_3786 = func_3785_call()
output = call_3786
func_3787 = relay.Function([], output)
mutated_mod['func_3787'] = func_3787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2870_call = mod.get_global_var('func_2870')
func_2872_call = mutated_mod.get_global_var('func_2872')
call_3798 = relay.TupleGetItem(func_2870_call(), 0)
call_3799 = relay.TupleGetItem(func_2872_call(), 0)
uop_3817 = relay.cosh(call_3798.astype('float64')) # shape=(10, 16, 13)
uop_3819 = relay.cosh(call_3799.astype('float64')) # shape=(10, 16, 13)
output = uop_3817
output2 = uop_3819
func_3842 = relay.Function([], output)
mod['func_3842'] = func_3842
mod = relay.transform.InferType()(mod)
output = func_3842()
func_3843 = relay.Function([], output)
mutated_mod['func_3843'] = func_3843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3857 = relay.var("var_3857", dtype = "float32", shape = (8, 13, 8))#candidate|3857|(8, 13, 8)|var|float32
uop_3858 = relay.log10(var_3857.astype('float32')) # shape=(8, 13, 8)
uop_3861 = relay.sigmoid(uop_3858.astype('float64')) # shape=(8, 13, 8)
output = relay.Tuple([uop_3861,])
output2 = relay.Tuple([uop_3861,])
func_3872 = relay.Function([var_3857,], output)
mod['func_3872'] = func_3872
mod = relay.transform.InferType()(mod)
mutated_mod['func_3872'] = func_3872
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3873 = relay.var("var_3873", dtype = "float32", shape = (8, 13, 8))#candidate|3873|(8, 13, 8)|var|float32
func_3872_call = mutated_mod.get_global_var('func_3872')
call_3874 = func_3872_call(var_3873)
output = call_3874
func_3875 = relay.Function([var_3873], output)
mutated_mod['func_3875'] = func_3875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_3880 = relay.TupleGetItem(func_1191_call(), 0)
call_3881 = relay.TupleGetItem(func_1193_call(), 0)
func_2495_call = mod.get_global_var('func_2495')
func_2498_call = mutated_mod.get_global_var('func_2498')
var_3905 = relay.var("var_3905", dtype = "float32", shape = (300,))#candidate|3905|(300,)|var|float32
call_3904 = relay.TupleGetItem(func_2495_call(relay.reshape(var_3905.astype('float32'), [300,])), 2)
call_3906 = relay.TupleGetItem(func_2498_call(relay.reshape(var_3905.astype('float32'), [300,])), 2)
output = relay.Tuple([call_3880,call_3904,var_3905,])
output2 = relay.Tuple([call_3881,call_3906,var_3905,])
func_3908 = relay.Function([var_3905,], output)
mod['func_3908'] = func_3908
mod = relay.transform.InferType()(mod)
var_3909 = relay.var("var_3909", dtype = "float32", shape = (300,))#candidate|3909|(300,)|var|float32
output = func_3908(var_3909)
func_3910 = relay.Function([var_3909], output)
mutated_mod['func_3910'] = func_3910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1816_call = mod.get_global_var('func_1816')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_3944 = relay.TupleGetItem(func_1816_call(), 1)
call_3945 = relay.TupleGetItem(func_1818_call(), 1)
output = relay.Tuple([call_3944,])
output2 = relay.Tuple([call_3945,])
func_3954 = relay.Function([], output)
mod['func_3954'] = func_3954
mod = relay.transform.InferType()(mod)
mutated_mod['func_3954'] = func_3954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3954_call = mutated_mod.get_global_var('func_3954')
call_3955 = func_3954_call()
output = call_3955
func_3956 = relay.Function([], output)
mutated_mod['func_3956'] = func_3956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3954_call = mod.get_global_var('func_3954')
func_3956_call = mutated_mod.get_global_var('func_3956')
call_3970 = relay.TupleGetItem(func_3954_call(), 0)
call_3971 = relay.TupleGetItem(func_3956_call(), 0)
output = call_3970
output2 = call_3971
func_4000 = relay.Function([], output)
mod['func_4000'] = func_4000
mod = relay.transform.InferType()(mod)
mutated_mod['func_4000'] = func_4000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4000_call = mutated_mod.get_global_var('func_4000')
call_4001 = func_4000_call()
output = call_4001
func_4002 = relay.Function([], output)
mutated_mod['func_4002'] = func_4002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2052_call = mod.get_global_var('func_2052')
func_2053_call = mutated_mod.get_global_var('func_2053')
call_4097 = func_2052_call()
call_4098 = func_2052_call()
func_1349_call = mod.get_global_var('func_1349')
func_1353_call = mutated_mod.get_global_var('func_1353')
var_4104 = relay.var("var_4104", dtype = "uint8", shape = (260,))#candidate|4104|(260,)|var|uint8
call_4103 = relay.TupleGetItem(func_1349_call(relay.reshape(var_4104.astype('uint8'), [5, 13, 4]), relay.reshape(var_4104.astype('uint8'), [5, 13, 4]), ), 0)
call_4105 = relay.TupleGetItem(func_1353_call(relay.reshape(var_4104.astype('uint8'), [5, 13, 4]), relay.reshape(var_4104.astype('uint8'), [5, 13, 4]), ), 0)
func_2052_call = mod.get_global_var('func_2052')
func_2053_call = mutated_mod.get_global_var('func_2053')
call_4106 = func_2052_call()
call_4107 = func_2052_call()
output = relay.Tuple([call_4097,call_4103,var_4104,call_4106,])
output2 = relay.Tuple([call_4098,call_4105,var_4104,call_4107,])
func_4111 = relay.Function([var_4104,], output)
mod['func_4111'] = func_4111
mod = relay.transform.InferType()(mod)
mutated_mod['func_4111'] = func_4111
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4112 = relay.var("var_4112", dtype = "uint8", shape = (260,))#candidate|4112|(260,)|var|uint8
func_4111_call = mutated_mod.get_global_var('func_4111')
call_4113 = func_4111_call(var_4112)
output = call_4113
func_4114 = relay.Function([var_4112], output)
mutated_mod['func_4114'] = func_4114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2370_call = mod.get_global_var('func_2370')
func_2372_call = mutated_mod.get_global_var('func_2372')
call_4130 = relay.TupleGetItem(func_2370_call(), 1)
call_4131 = relay.TupleGetItem(func_2372_call(), 1)
output = relay.Tuple([call_4130,])
output2 = relay.Tuple([call_4131,])
func_4134 = relay.Function([], output)
mod['func_4134'] = func_4134
mod = relay.transform.InferType()(mod)
mutated_mod['func_4134'] = func_4134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4134_call = mutated_mod.get_global_var('func_4134')
call_4135 = func_4134_call()
output = call_4135
func_4136 = relay.Function([], output)
mutated_mod['func_4136'] = func_4136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_4147 = relay.TupleGetItem(func_1191_call(), 0)
call_4148 = relay.TupleGetItem(func_1193_call(), 0)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_4166 = relay.TupleGetItem(func_1191_call(), 0)
call_4167 = relay.TupleGetItem(func_1193_call(), 0)
func_3501_call = mod.get_global_var('func_3501')
func_3504_call = mutated_mod.get_global_var('func_3504')
const_4174 = relay.const([-1.492051,-2.950183,4.138892,1.800454,-7.677023,-5.587554,6.526916,9.293967,-5.262372,-3.248886,6.177947,-4.799749,2.088189,8.937722,-0.599836,-8.694579,3.312650,-3.396715,-9.753233,-5.993257,-9.310906,7.003888,5.313968,6.793735,-2.940002,3.736188,6.916389,7.558608,5.619385,4.886316,-8.516631,4.753392,0.370024,-2.487400,1.790947,-4.041738,0.765398,-7.983576,7.142822,4.240379,6.972566,8.627780,-9.654384,-5.997293,0.311680,-7.367211,5.668199,-0.543802,0.453677,-7.840686,3.586645,-4.191824,-1.214995,7.965941,2.408461,9.151939,8.721476,2.577173,-7.191044,6.827118,-2.166730,2.659603,7.337912,-8.613124,-3.299545,-5.117594,5.325408,-4.139948,0.563272,9.323484,-8.926177,0.047394,-4.837494,-9.400161,-8.371460,-2.941178,7.468655,-8.891665,0.858475,6.298969,-5.326815,8.492624,-4.799649,1.381551,8.517186,-0.169181,-4.368199,1.508959,7.437227,8.961183,-0.670966,-9.977316,9.832585,-0.601158,5.348332,-2.739199,9.491550,5.785010,8.836172,5.077287,-2.656517,0.704501,-7.314705,1.274611,-8.084215,6.737998,-1.085814,-4.325801,0.172874,5.722487,-5.979166,-6.562348,4.630898,6.281632,-2.624512,-4.656409,4.902059,6.053277,-5.375748,8.053727,4.519026,2.790686,-9.957484,3.906862,5.563797,-9.174956,-9.924836,0.097876,-2.974915,7.655340,-4.309646,0.841794,8.830128,2.033691,7.262176,-4.881129,3.448371,1.627273,0.772476,9.378361,2.746325,-9.497902,-8.836033,3.303391,-8.396782,-6.278753,-4.727991,-0.878379,-6.678846,-1.124602,-1.058825,2.225893,-7.279014,4.517231,2.338219,-1.901228,-8.634273,4.567799,3.942004,-5.931814,1.283470,-5.591486,-4.858906,6.810656,-3.154257,6.480986,-9.477794,-8.396095,5.216383,-4.561365,2.661430,9.059673,9.040511,-4.485857,4.281020,-1.683663,2.132226,0.428231,-3.555855,2.416821,-3.611398,8.875033,9.693466,4.389033,-9.751463,5.799306,5.932999,1.916415,9.449589,0.703555,-5.588534,7.090096,-7.782925,-9.928720,3.529865,5.755020,-4.138213,-9.087657,-5.418520,-1.213312,3.722619,-6.793908,-5.626177,8.034837,-3.656413,-8.849665,6.085461,-3.247678,-0.694052,-0.751447,-3.336899,8.319107,-3.958554,-4.557883,-0.855961,9.355921,5.471977,-4.289238,-8.717093,2.343333,-3.750157,2.792267,-2.746768,2.449672,-3.794531,-8.040882,5.819153,4.450838,-6.061194,-1.544426,-7.699483,-7.718620,-5.377448,8.323631,5.706255,3.728575,3.096958,1.938731,-2.252629,-1.531518,-9.281623,-3.475288,9.108516,2.699796,9.667995,-4.923356,-1.409492,8.263233,3.218276,6.624282,-8.434884,-2.699017,3.061962,5.176073,-0.225528,6.102994,-9.749706,-8.593102,3.044024,8.461805,7.470517,3.873933,5.150176,-8.295711,7.486306,8.449029,-3.429525,8.093942,1.659634,-0.552787,4.417057,-9.515952,6.187427,3.440976,-7.682860,0.441096,-3.162182,6.541844,-2.902788,-8.645357,9.295016,5.573851,9.978983,-0.863111,0.043895,-3.588228,-1.112172,-9.382868,9.490426,-5.683771,0.158030,3.979978,-9.154200,4.239914,5.894920,5.613867,1.408505,-4.027634,3.671674,3.578797,2.434267,1.202246,-8.143018,2.629587,1.197998,3.217177,-0.136311,-3.252195,-5.788379,4.443102,8.628732,-3.668627,9.423525,0.312509,8.770148,2.579944,-5.808302,-3.617907,-2.760279,-4.134124,-4.422498,-8.318926,3.427261,3.356373,-8.850006,7.891947,9.370620,-0.895101,-2.873669,-3.813865,-0.490465,5.929314,-3.906739,9.759803,3.937046,9.313990,-4.029556,-6.196260,-0.979399,3.196821,-8.621640,2.276560,-3.387594,-5.805416,6.661888,6.113987,-4.610273,6.230656,-6.310386,-8.157099,-5.210204,6.109833,0.575131,-6.584500,-8.537234,2.029751,-0.933651,-7.664173,-5.618019,-6.336070,1.909126,-6.697570,-1.107637,1.051242,-9.289881,-9.416888,5.509673,2.883475,-6.919096,-3.284744,0.200206,5.851944,-0.592448,0.896353,2.201657,7.559162,9.836498,-5.349987,5.001613,-1.003435,2.145594,-8.730941,1.189393,-3.952150,-8.199264,-9.624141,-7.755405,1.759302,2.975993,7.924134,-7.740230,-9.469440,-7.534581,1.956992,-8.733693,-5.750447,3.435754,-9.045893,-9.213368,-6.450994,7.320286,3.452157,-0.593367,5.595043,2.870851,-8.575290,8.865107,5.601630,-3.307038,8.083208,-5.278147,-7.703169,-6.386681,-7.724748,8.998267,3.421822,3.487588,-1.880054,-8.003298,-3.867201,1.802958,5.849118,6.407558,-5.417947,-4.334785,-4.996873,9.054071,-0.233367,3.041391,3.468012,0.171559,0.520671,7.253393,-9.560972,2.045450,6.310652,-9.673391,3.147598,0.941681,7.099388,6.459252,-1.975986,-9.917731,5.135694,-4.588938,6.521560,4.620933,-3.813781,-3.611965,-6.475208,7.883667,-9.941376,6.698683,1.671854,-5.513889,-1.508888,-8.574420,-0.691762,0.171065,-9.638966,-7.486739,6.525330,0.629267,-7.645519,-1.653238,7.431206,-6.572167,7.098271,-0.975695,-7.771557,4.882276,-4.306796,-9.797456,5.969338,-1.380587,2.323424,1.024671,4.124272,-2.761751,-3.522526,-2.958228,5.500691,-3.734413,-0.911615,7.836902,3.270813,1.697182,0.611342,-1.692475,6.309470,-8.257936,-4.399349,8.466515,-3.872757,5.209122,5.027579,1.256998,8.746863,1.292820,-4.497709,-4.737121,-9.249092,2.527119,7.057618,-1.671839,1.027599,6.171486,-6.388833,6.786199,4.577942,8.456149,-3.731535,0.974472,-7.501201,-4.269250,5.417553,-4.421605,-1.542194,7.642844,-1.399162,5.873038,0.460292,0.371308,6.158949,-9.045874,7.112111,4.507952,-1.494494,0.168154,-8.581312,9.912994,4.687981,1.097170,-2.557777,7.047295,-1.850423,-3.670162,-2.384698,4.576535,-4.106310,-2.502808,5.965897,0.217114,-4.298961,3.701542,-3.500971,-3.588481,-3.447663,-4.739075,8.107990,1.115363,-6.164917,3.912007,1.229084,-2.502614,-5.393483,-9.965943,7.033091,-8.621624,-8.400070,-1.460281,-8.524216,-0.263020,-0.401543,7.726249,4.436446,1.151474,-4.893277,-5.280669,9.455733,3.293612,9.881353,5.118159,-9.074619,-9.404871,0.093712,0.103020,6.675366,7.380222,-1.443530,0.847988,3.700853,0.581274,6.009542,-4.443670,7.913670,8.917747,1.650834,5.842812,-2.208412,-2.325960,-1.902304,1.657963,-5.230202,4.672568,-1.940148,-1.843524,6.072677,1.896420,6.270955,1.023852,-3.565025,2.646674,6.425966,9.204561,-1.216600,-4.698148,3.105198,-3.834371,-8.042060,6.785216,3.152368,-5.564312,6.443331,1.866612,8.378648,4.896813,1.927733,2.577607,5.254031,-9.934749,2.184117,-3.840054,4.942268,-8.679789,-5.146867,-7.252521,1.298881,-0.766846,-1.173138,2.637888,-7.278832,8.939501,3.167705,4.995306,0.019483,-3.916994,-3.584498,-9.282242,4.619604,3.693995,-8.425463,7.939069,-9.997142,-4.221738,-8.859927,9.133443,2.758747,-1.708360,4.528705,9.512799,-1.571273,5.339106,5.728097,-8.803856,-3.019500,-7.873241,0.470456,-4.274097,-3.145030,-3.824094,-5.533922,7.768804,3.900244,-9.948461,3.665294,6.734266,5.988861,-9.179289,-6.731094,-1.502294,-3.410260,4.907611,-2.518282,-5.590975,7.320403,9.761348,-1.383947,2.117578,8.011011,-9.867973,9.414630,-2.456819,5.857492,5.448253,7.748700,-4.832180,5.573785,8.444469,-6.062158,-4.303244,-9.233184,6.662947,-3.959629,-1.682305,1.821970,2.327337,2.250883,6.207877,-4.778893,-6.168098,-6.887212,-7.269779,9.473051,-8.068363,6.928356,9.374241,-2.686458,-2.580427,5.242580,-4.508510,4.980332,3.370611,8.839959,9.008483,-5.410278,1.695330,8.903659,-3.218826,3.411873,-7.055745,5.409209,8.210821,-5.305315,-2.010632,-5.702939,-7.942241,-3.447744], dtype = "float32")#candidate|4174|(728,)|const|float32
call_4173 = relay.TupleGetItem(func_3501_call(relay.reshape(const_4174.astype('float32'), [728,])), 0)
call_4175 = relay.TupleGetItem(func_3504_call(relay.reshape(const_4174.astype('float32'), [728,])), 0)
func_2170_call = mod.get_global_var('func_2170')
func_2174_call = mutated_mod.get_global_var('func_2174')
const_4196 = relay.const([-8,-5,-4,6,-9,9,-9,-6,-7,10,-2,-5,-4,3,5,9,-7,-6,5,10,-8,9,-4,-10,1,-10,-2,3,4,-1,6,-2,4,5,-2,3,-3,-9,-9,-9,8,1,-2,5,10,7,-6,10,-9,-7,-1,-10,3,3,-8,-2,2,8,8,2,-9,-6,9,5,3,6,-2,-8,8,7,-4,2,-2,9,-6,-10,1,-2,-1,6,-8,-6,1,-5,3,-4,-3,-2,9,-9,-2,9,-2,-4,7,5,-2,-6,-4,3,7,4,-6,-6,-8,9,3,-5,-1,6,-9,-3,-1,-6,-2,-2,-8,10,5,-10,-3,4,1,9,-8,-9,-7,10,3,-2,-6,-5,-3,2,-3,10,5,1,5,7,-8,-10,9,2,-5,9,1,10,9,1,-4,9,8,5,-2,5,-1,5,-7,3,3,5,-6,-7,5,-6,-2,-10,4,2,-8,-8,-5,10,-1,-2,-3,-8,2,-3,-5,7,5,-8,3,-7,-10,-1,-9,5,-3,4,-5,-6,-10,-5,-9,4,10,-3,5,-5,6,-10,-6,-6,-5,5,-5,-9,10,-1,6,1,9,-8,-3,-9,-8,5,-5,1,3,10,-8,4,4,-5,1,6,-1,4,7,4,-4,9,1,-9,-7,6,-9,3,8,-4,5,10,-6,1,-10,1,5,-5,-10,-5,-5,-4,3,-8,5,-9,1,8,6,3,6,1,-3,-2,-1,2,9,-10,3,-3,-9,-3,-4,8,-2,-7,6,-4,6,-2,6,-5,-3,-7,-3,7,7,-2,2,-2,-2,5,-8,-7,-8,3,4,-8,3,3,8,-7,1,7,-1,8,-7,-9,5,-1,-4,6,2,-7,9,-2,4,-3,1,8,6,-5,-2,-10,-2,-9,-3,6,-9,2,-7,-7,8,-3,10,10,9,1,-2,10,1,-10,-6,-2,1,3,10,6,9,-8,-5,5,4,7,6,-9,9,-1,-6,-10,-9,-5,-4,-9,-4,-2,-5,-3,4,6,7,6,5,-1,-2,-9,3,-10,-7,-1,-5,-8,-1,-9,10,4,-1,5,10,8,-6,-3,-1,7,-3,8,1,-8,8,-5,3,10,-2,9,-1,-1,3,8,-8,-3,3,-9,-9,5,4,-10,3,-10,-4,-4,5,-2,1,2,4,10,-7,10,-4,7,-8,5,-4,-6,-6,-3,-8,-9,4,-8,-7,4,7,-1,-2,1,3,1,2,8,-10,9,6,6,-9,6,5,1,-5,-5,1,7,1,-3,-7,-1,4,4,-7,-9,7,6,7,-5,10,-1,5,4,8,-1,10,2,3,5,-6,-10,-2,-4,2,3,-9,-2,2,2,-5,5,-6,-1,-10,-1,-1,-9,7,-1,-3,2,7,-8,-4,-9,3,6,10,10,-6,-6,6,-9,1,4,4,-7,4,2,-4,-6,-4,10,-10,3,3,-4,-9,2,2,-3,3,-1,-5,-4,-7,-8,3,-6,10,10,1,2,4,9,3,-6,3,-3,4,7,-8,-2,-5,-3,-8,-8,-6,10,-8,7,2,-8,-3,-1,-10,6,-5,8,-7,-5,-3,-5,-5,8,5,-5,-1,1,-3,2,-1,1,9,6,-10,10,-3,-2,-1,4,-8,-2,-1,6,5,9,-6,-4,10,8,10,-3,6,-5,-8,4,7,8,9,4,-9,2,3,-8], dtype = "uint64")#candidate|4196|(624,)|const|uint64
call_4195 = relay.TupleGetItem(func_2170_call(relay.reshape(const_4196.astype('uint64'), [6, 8, 13]), relay.reshape(const_4196.astype('uint64'), [6, 8, 13]), ), 1)
call_4197 = relay.TupleGetItem(func_2174_call(relay.reshape(const_4196.astype('uint64'), [6, 8, 13]), relay.reshape(const_4196.astype('uint64'), [6, 8, 13]), ), 1)
uop_4215 = relay.asinh(call_4195.astype('float64')) # shape=(10, 16, 13)
uop_4217 = relay.asinh(call_4197.astype('float64')) # shape=(10, 16, 13)
func_311_call = mod.get_global_var('func_311')
func_315_call = mutated_mod.get_global_var('func_315')
const_4219 = relay.const([-4.931399,4.702393,0.589547,3.426155,-7.511798,2.102353,-2.982751,1.658662,1.679509,9.734034,3.083381,8.728893,0.741346,-5.784538,1.014852,-1.516902,2.053663,-0.183399,-0.236045,-2.861575,-0.164190,-5.206036,-7.470085,1.701438,3.656367,-2.874368,5.572905,-6.052786,7.350692,-6.941604,9.980053,-7.704508,-3.195903,0.543379,-9.322163,8.358231,8.979021,0.413462,1.590406,1.338280,1.302726,0.047691,7.453291,-0.224957,-2.023002,-0.549907,6.087953,1.355605,9.606627,-8.252056,-1.127705,-5.394801,6.908809,-0.889787,7.935085,6.102475,6.846001,0.838697,2.339532,8.267838,-5.062672,2.115641,-6.821926,-2.956446,6.890052,5.876400,-7.796051,-2.372060,-8.021715,0.211925,-3.235990,-4.224530,7.674637,9.632738,3.064553,1.573077,-9.866594,1.423616], dtype = "float64")#candidate|4219|(78,)|const|float64
var_4220 = relay.var("var_4220", dtype = "float64", shape = (234,))#candidate|4220|(234,)|var|float64
call_4218 = relay.TupleGetItem(func_311_call(relay.reshape(const_4219.astype('float64'), [1, 6, 13]), relay.reshape(const_4174.astype('float32'), [728,]), relay.reshape(var_4220.astype('float64'), [3, 6, 13]), ), 4)
call_4221 = relay.TupleGetItem(func_315_call(relay.reshape(const_4219.astype('float64'), [1, 6, 13]), relay.reshape(const_4174.astype('float32'), [728,]), relay.reshape(var_4220.astype('float64'), [3, 6, 13]), ), 4)
func_3908_call = mod.get_global_var('func_3908')
func_3910_call = mutated_mod.get_global_var('func_3910')
const_4230 = relay.const([-9.849681,1.609090,8.313467,1.189495,-5.249795,6.707398,8.393318,2.961203,-6.570352,4.582477,-6.200662,2.191053,4.213146,-8.742883,-2.809587,9.712970,-5.109547,-7.718200,-3.413999,0.296921,9.311721,-9.726090,-3.287700,-4.189848,3.631119,-8.568507,-5.312263,-7.449575,-0.590024,-7.739649,-0.927649,-2.119554,-1.967773,-3.399873,-1.628366,3.570159,-4.819397,-3.317617,-3.291905,9.708344,4.455415,3.453593,8.544966,0.912920,-8.508034,3.438328,-1.031042,4.076235,-6.727489,8.582303,-2.341504,-4.725809,5.588548,3.838048,-7.179670,5.728545,-9.057352,5.441093,-0.856744,-9.972993,-4.739169,3.490901,9.445923,-7.068082,-3.339717,-1.498891,-3.074029,-3.715102,-5.674999,4.691130,-5.526914,-2.336651,8.647292,6.619473,-6.282020,-4.014022,1.380833,2.273130,3.352600,-5.648105,-0.478173,-5.134869,0.782196,-9.111298,-1.866961,-4.667699,-8.478425,-5.110707,-0.347809,9.841933,8.828484,-4.410359,0.172050,4.452423,3.216563,-0.816931,-4.825836,-7.445016,7.052751,9.796819,4.518003,6.749573,-5.087596,5.733661,4.958371,-2.308721,2.463868,9.965925,-8.035190,2.197140,-2.099097,5.188418,-5.392356,-0.431004,-5.059159,3.549597,-7.872669,5.819894,-3.324764,9.404901,8.907881,-2.152969,-4.203333,9.868313,-0.241264,-6.137488,1.962581,-5.656110,-5.930076,5.363527,-1.195706,-3.641599,8.844714,-7.385670,-7.688095,7.025152,2.006635,-8.120456,5.043764,-8.896017,-2.886255,-5.283874,4.698059,8.473230,-4.796794,-8.039282,-5.610219,3.390329,5.326691,3.422966,2.382397,3.696194,6.661491,2.819836,-8.381751,-4.763208,-2.286206,-0.430677,6.894833,4.785381,-2.546937,7.681596,-0.340689,2.509415,-0.206521,-8.214479,5.231066,-7.285406,8.456299,-6.445549,1.231816,6.023883,5.478093,3.683562,5.310890,-9.244337,1.638655,-4.341628,-6.024303,0.893963,6.461073,8.750761,2.780762,5.835613,4.786806,-0.926790,-9.817644,-7.555321,0.888960,8.302072,6.601739,9.666629,8.912843,-0.065205,0.222902,-8.806956,5.744365,4.462311,9.781278,-4.435111,-8.628264,6.094861,-7.651428,4.606925,-9.507237,-8.649425,-3.721817,-2.612719,-3.830573,-9.727038,-0.654159,-9.653043,-0.665261,-6.741498,-3.710413,-4.192588,-0.791397,5.184342,2.584367,-5.651872,8.066244,4.725658,-5.193214,4.272086,6.180684,-5.143803,-4.976037,7.379507,0.780719,-8.885678,-7.348533,-5.180476,1.716084,6.292456,-5.679919,-1.931495,3.248332,-9.390761,1.895363,-8.512200,5.574054,-6.853663,7.407979,-4.083488,8.229264,-9.494393,6.454498,-1.821491,-8.042941,6.598057,-5.672946,5.769037,-6.331046,2.127334,1.128581,-1.841503,0.007043,8.325948,-8.166655,2.507795,-6.647306,-3.376114,-4.642816,-6.211550,-3.830395,-7.996057,6.952345,-8.432917,9.349375,5.108190,7.166889,3.810906,-0.409785,1.072806,-4.356356,9.510153,-9.478673,-2.953648,-4.851958,-4.789578,-3.602495,6.747590,-0.116809,5.674437,-5.501216,-5.687036,-5.297943,-3.112869,-3.673837,-4.532059,-6.231345,-7.787970,7.024287,7.706316,7.953172,-5.779598,-1.483695,-4.253209,-9.748400,-2.781791], dtype = "float32")#candidate|4230|(300,)|const|float32
call_4229 = relay.TupleGetItem(func_3908_call(relay.reshape(const_4230.astype('float32'), [300,])), 1)
call_4231 = relay.TupleGetItem(func_3910_call(relay.reshape(const_4230.astype('float32'), [300,])), 1)
bop_4234 = relay.left_shift(var_4220.astype('int64'), relay.reshape(call_4218.astype('int64'), relay.shape_of(var_4220))) # shape=(234,)
bop_4237 = relay.left_shift(var_4220.astype('int64'), relay.reshape(call_4221.astype('int64'), relay.shape_of(var_4220))) # shape=(234,)
uop_4243 = relay.acosh(call_4166.astype('float32')) # shape=(10, 16, 13)
uop_4245 = relay.acosh(call_4167.astype('float32')) # shape=(10, 16, 13)
func_1918_call = mod.get_global_var('func_1918')
func_1919_call = mutated_mod.get_global_var('func_1919')
call_4260 = relay.TupleGetItem(func_1918_call(), 1)
call_4261 = relay.TupleGetItem(func_1919_call(), 1)
func_3785_call = mod.get_global_var('func_3785')
func_3787_call = mutated_mod.get_global_var('func_3787')
call_4292 = relay.TupleGetItem(func_3785_call(), 1)
call_4293 = relay.TupleGetItem(func_3787_call(), 1)
output = relay.Tuple([call_4147,call_4173,const_4174,const_4196,uop_4215,const_4219,call_4229,const_4230,bop_4234,uop_4243,call_4260,call_4292,])
output2 = relay.Tuple([call_4148,call_4175,const_4174,const_4196,uop_4217,const_4219,call_4231,const_4230,bop_4237,uop_4245,call_4261,call_4293,])
func_4298 = relay.Function([var_4220,], output)
mod['func_4298'] = func_4298
mod = relay.transform.InferType()(mod)
mutated_mod['func_4298'] = func_4298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4299 = relay.var("var_4299", dtype = "float64", shape = (234,))#candidate|4299|(234,)|var|float64
func_4298_call = mutated_mod.get_global_var('func_4298')
call_4300 = func_4298_call(var_4299)
output = call_4300
func_4301 = relay.Function([var_4299], output)
mutated_mod['func_4301'] = func_4301
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4323 = relay.var("var_4323", dtype = "uint64", shape = (9, 12, 8))#candidate|4323|(9, 12, 8)|var|uint64
var_4324 = relay.var("var_4324", dtype = "uint64", shape = (9, 12, 8))#candidate|4324|(9, 12, 8)|var|uint64
bop_4325 = relay.minimum(var_4323.astype('uint64'), relay.reshape(var_4324.astype('uint64'), relay.shape_of(var_4323))) # shape=(9, 12, 8)
output = bop_4325
output2 = bop_4325
func_4328 = relay.Function([var_4323,var_4324,], output)
mod['func_4328'] = func_4328
mod = relay.transform.InferType()(mod)
mutated_mod['func_4328'] = func_4328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mutated_mod.get_global_var('func_4328')
var_4330 = relay.var("var_4330", dtype = "uint64", shape = (9, 12, 8))#candidate|4330|(9, 12, 8)|var|uint64
var_4331 = relay.var("var_4331", dtype = "uint64", shape = (9, 12, 8))#candidate|4331|(9, 12, 8)|var|uint64
call_4329 = func_4328_call(var_4330,var_4331,)
output = call_4329
func_4332 = relay.Function([var_4330,var_4331,], output)
mutated_mod['func_4332'] = func_4332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1469_call = mod.get_global_var('func_1469')
func_1471_call = mutated_mod.get_global_var('func_1471')
call_4334 = func_1469_call()
call_4335 = func_1469_call()
output = call_4334
output2 = call_4335
func_4340 = relay.Function([], output)
mod['func_4340'] = func_4340
mod = relay.transform.InferType()(mod)
output = func_4340()
func_4341 = relay.Function([], output)
mutated_mod['func_4341'] = func_4341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2825_call = mod.get_global_var('func_2825')
func_2826_call = mutated_mod.get_global_var('func_2826')
call_4451 = relay.TupleGetItem(func_2825_call(), 0)
call_4452 = relay.TupleGetItem(func_2826_call(), 0)
output = call_4451
output2 = call_4452
func_4453 = relay.Function([], output)
mod['func_4453'] = func_4453
mod = relay.transform.InferType()(mod)
output = func_4453()
func_4454 = relay.Function([], output)
mutated_mod['func_4454'] = func_4454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mod.get_global_var('func_1745')
func_1746_call = mutated_mod.get_global_var('func_1746')
call_4473 = relay.TupleGetItem(func_1745_call(), 0)
call_4474 = relay.TupleGetItem(func_1746_call(), 0)
output = relay.Tuple([call_4473,])
output2 = relay.Tuple([call_4474,])
func_4478 = relay.Function([], output)
mod['func_4478'] = func_4478
mod = relay.transform.InferType()(mod)
output = func_4478()
func_4479 = relay.Function([], output)
mutated_mod['func_4479'] = func_4479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3145_call = mod.get_global_var('func_3145')
func_3147_call = mutated_mod.get_global_var('func_3147')
call_4532 = relay.TupleGetItem(func_3145_call(), 0)
call_4533 = relay.TupleGetItem(func_3147_call(), 0)
output = call_4532
output2 = call_4533
func_4534 = relay.Function([], output)
mod['func_4534'] = func_4534
mod = relay.transform.InferType()(mod)
mutated_mod['func_4534'] = func_4534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4534_call = mutated_mod.get_global_var('func_4534')
call_4535 = func_4534_call()
output = call_4535
func_4536 = relay.Function([], output)
mutated_mod['func_4536'] = func_4536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4534_call = mod.get_global_var('func_4534')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_4545 = func_4534_call()
call_4546 = func_4534_call()
output = call_4545
output2 = call_4546
func_4549 = relay.Function([], output)
mod['func_4549'] = func_4549
mod = relay.transform.InferType()(mod)
output = func_4549()
func_4550 = relay.Function([], output)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2394_call = mod.get_global_var('func_2394')
func_2396_call = mutated_mod.get_global_var('func_2396')
call_4596 = func_2394_call()
call_4597 = func_2394_call()
output = call_4596
output2 = call_4597
func_4607 = relay.Function([], output)
mod['func_4607'] = func_4607
mod = relay.transform.InferType()(mod)
output = func_4607()
func_4608 = relay.Function([], output)
mutated_mod['func_4608'] = func_4608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mod.get_global_var('func_1745')
func_1746_call = mutated_mod.get_global_var('func_1746')
call_4619 = relay.TupleGetItem(func_1745_call(), 1)
call_4620 = relay.TupleGetItem(func_1746_call(), 1)
output = call_4619
output2 = call_4620
func_4650 = relay.Function([], output)
mod['func_4650'] = func_4650
mod = relay.transform.InferType()(mod)
mutated_mod['func_4650'] = func_4650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4650_call = mutated_mod.get_global_var('func_4650')
call_4651 = func_4650_call()
output = call_4651
func_4652 = relay.Function([], output)
mutated_mod['func_4652'] = func_4652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4650_call = mod.get_global_var('func_4650')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_4660 = func_4650_call()
call_4661 = func_4650_call()
var_4662 = relay.var("var_4662", dtype = "int64", shape = (10, 16, 13))#candidate|4662|(10, 16, 13)|var|int64
bop_4663 = relay.multiply(call_4660.astype('int16'), relay.reshape(var_4662.astype('int16'), relay.shape_of(call_4660))) # shape=(10, 16, 13)
bop_4666 = relay.multiply(call_4661.astype('int16'), relay.reshape(var_4662.astype('int16'), relay.shape_of(call_4661))) # shape=(10, 16, 13)
output = relay.Tuple([bop_4663,])
output2 = relay.Tuple([bop_4666,])
func_4667 = relay.Function([var_4662,], output)
mod['func_4667'] = func_4667
mod = relay.transform.InferType()(mod)
mutated_mod['func_4667'] = func_4667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4668 = relay.var("var_4668", dtype = "int64", shape = (10, 16, 13))#candidate|4668|(10, 16, 13)|var|int64
func_4667_call = mutated_mod.get_global_var('func_4667')
call_4669 = func_4667_call(var_4668)
output = call_4669
func_4670 = relay.Function([var_4668], output)
mutated_mod['func_4670'] = func_4670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4675 = relay.var("var_4675", dtype = "uint16", shape = (3, 2, 13))#candidate|4675|(3, 2, 13)|var|uint16
var_4676 = relay.var("var_4676", dtype = "uint16", shape = (3, 2, 13))#candidate|4676|(3, 2, 13)|var|uint16
bop_4677 = relay.right_shift(var_4675.astype('uint16'), relay.reshape(var_4676.astype('uint16'), relay.shape_of(var_4675))) # shape=(3, 2, 13)
func_2651_call = mod.get_global_var('func_2651')
func_2653_call = mutated_mod.get_global_var('func_2653')
const_4686 = relay.const([1.525460,-3.933512,0.605725,-6.115809,-5.415206,7.889284,-7.267600,-9.467416,-7.561688,8.565498,8.901505,-1.370862,-4.684229,-1.520315,-6.209757,6.488473,9.265102,0.877669,-0.289823,-9.989303,2.145922,7.723762,-7.885090,7.663356,-2.852716,8.025566,-0.314506,9.765580,-6.763506,-2.500312,7.771346,-1.566308,0.257273,6.871301,-5.957696,0.380152,6.849138,0.417272,-9.674498,9.474155,4.578208,-5.093383,-9.781856,9.657732,-6.351995,-4.638686,3.822651,-4.322335,-8.750228,1.452709,9.318359,-0.806887,5.921596,-8.409738,1.474941,-3.705980,-2.583538,-1.716914,-7.345462,-0.365518,2.163308,-0.058727,0.154707,-5.810498,0.718660,-8.321739,-7.262022,9.433490,8.245034,9.749515,9.816237,1.711088,-5.485718,5.486933,9.833094,6.493147,-8.801864,-1.662564,5.524128,7.490714,-8.144188,7.749009,-8.840795,-3.490302,6.582920,-7.631357,5.718975,-7.930603,3.865151,8.206570,9.382569,-1.634783,-2.490639,-2.990721,8.553729,-8.365478,9.487277,-7.620426,4.405385,8.411771,-4.826826,5.711320,-7.500019,1.678731,1.665867,-8.957295,-9.959075,-6.660113,3.564517,-2.312703,-2.192421,-1.982660,-2.277340,-3.938509,7.297598,-8.771844,7.585620,-8.725222,-2.975146,-7.768487,-8.855988,-2.823476,4.009864,0.795131,5.451570,9.023688,2.171231,-4.941863,-4.139375,0.700994,-8.964158,7.056599,4.424361,9.030311,1.669898,-7.675000,7.631343,-4.542327,0.560063,6.573904,8.651704,8.264719,8.371307,9.441106,-3.645393,7.524818,-7.899596,-0.709815,-2.673537,5.509741,7.977998,8.577720,6.117055,9.535251,-9.388100,7.583584,7.580615,-6.822445,-9.775067,-9.234279,-4.408588,-2.614057,-2.150259,-0.599635,-7.423631,4.400891,8.350034,-3.468276,-0.639188,-8.391997,8.212511,6.097557,-3.288701,9.896548,3.434358,0.684517,1.003132,-4.416412,-0.699458,6.541123,4.498254,7.536151,4.588514,4.490912,0.144607,-2.164753,7.086127,-3.047673,5.734392,2.313799,2.778236,-2.171940,-5.793242,5.048040,-9.996215,9.089699,6.166975,-5.906528,5.857940,-5.598749,1.885883,1.991753,-9.400587,-6.712542,5.441154,-1.780497,-7.534278,0.534249,-6.859799,-0.270019,6.980919,-1.610060,-1.576516,-5.126641,-2.237685,-7.178393,4.957551,-4.625751,4.174439,-5.633667,-2.739440,-9.815192,2.794710,7.219077,-5.767147,-1.549748,-0.018456,-5.981639,-6.631557,-2.735709,0.419309,-5.925239,-1.743572,2.325621,-0.750186,-0.180205,-0.146288,4.850096,-3.354850,6.200129,-2.120979,5.253136,-4.497017,2.039039,-2.496427,0.330016,5.924873,-2.063244,7.123403,8.163107,6.725290,-6.703058,-8.481308,-3.939298,4.097513,6.641565,5.048878,-3.598368,-8.987178,-4.912184,4.604417,9.815697,-7.269526,-1.747959,2.403977,2.809197,4.799183,-5.554905,3.238324,-9.135632,1.664606,6.185864,-0.292610,-8.105822,2.212099,7.797915,5.921704,7.267479,8.102399,6.372590,-9.044366,8.956059,-7.910620,4.595822,-9.902680,-6.534964,-5.340778,5.781503,8.172088,0.334156,-4.341373,5.247171,8.853548,9.670769,-6.160027,2.880342,4.015527,-9.244928,6.125942,-5.175531,-7.553081,2.484200,-6.301069,7.839748,-5.382935,-4.027649,-6.618991,-7.245992,0.437595,-0.126245,-6.482439,-4.621889,-6.817839,-1.073222,-4.704043,-3.132422,0.811533,5.166890,-5.500501,-4.687209,-4.644717,7.676759,-3.262262,-5.557714,-3.009816,-2.450575,6.626897,-7.050856,0.117703,6.457097,4.972168,-3.762059,2.213551,-8.751921,8.281691,-9.675088,-6.840300,-2.500145,-5.114181,-1.652648,6.372009,8.975191,6.232688,-2.177815,-4.403165,-9.835763,3.639263,4.360293,9.872927,-8.940304,-2.209277,-1.901164,4.957672,6.195001,9.894226,-7.112591,-5.465437,7.350855,0.564536,1.341002,5.760285,-5.012668,-5.681070,5.286824,0.752102,-7.840125,6.275766,-3.137810,6.389527,-4.277483,0.196365,1.242055,-3.290692,1.188153,4.832938,-6.038115,2.831011,6.225916,-8.716784,4.407918,9.359308,6.900684,-5.403906,2.144974,4.330387,-0.297277,-9.263119,7.983070,0.476350,-9.789968], dtype = "float32")#candidate|4686|(390,)|const|float32
call_4685 = func_2651_call(relay.reshape(const_4686.astype('float32'), [13, 5, 6]))
call_4687 = func_2651_call(relay.reshape(const_4686.astype('float32'), [13, 5, 6]))
output = relay.Tuple([bop_4677,call_4685,const_4686,])
output2 = relay.Tuple([bop_4677,call_4687,const_4686,])
func_4688 = relay.Function([var_4675,var_4676,], output)
mod['func_4688'] = func_4688
mod = relay.transform.InferType()(mod)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4688_call = mutated_mod.get_global_var('func_4688')
var_4690 = relay.var("var_4690", dtype = "uint16", shape = (3, 2, 13))#candidate|4690|(3, 2, 13)|var|uint16
var_4691 = relay.var("var_4691", dtype = "uint16", shape = (3, 2, 13))#candidate|4691|(3, 2, 13)|var|uint16
call_4689 = func_4688_call(var_4690,var_4691,)
output = call_4689
func_4692 = relay.Function([var_4690,var_4691,], output)
mutated_mod['func_4692'] = func_4692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2640_call = mod.get_global_var('func_2640')
func_2641_call = mutated_mod.get_global_var('func_2641')
call_4752 = func_2640_call()
call_4753 = func_2640_call()
output = call_4752
output2 = call_4753
func_4769 = relay.Function([], output)
mod['func_4769'] = func_4769
mod = relay.transform.InferType()(mod)
mutated_mod['func_4769'] = func_4769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4769_call = mutated_mod.get_global_var('func_4769')
call_4770 = func_4769_call()
output = call_4770
func_4771 = relay.Function([], output)
mutated_mod['func_4771'] = func_4771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4769_call = mod.get_global_var('func_4769')
func_4771_call = mutated_mod.get_global_var('func_4771')
call_4779 = func_4769_call()
call_4780 = func_4769_call()
func_2640_call = mod.get_global_var('func_2640')
func_2641_call = mutated_mod.get_global_var('func_2641')
call_4790 = func_2640_call()
call_4791 = func_2640_call()
func_311_call = mod.get_global_var('func_311')
func_315_call = mutated_mod.get_global_var('func_315')
const_4793 = relay.const([5.689951,7.415641,1.475701,-5.033882,6.031721,5.976712,5.005492,7.334245,-5.400538,2.612682,-9.936858,1.946148,-8.466087,0.561718,-8.943383,1.282673,-5.571517,-0.969004,-8.031941,0.885414,-4.892947,-2.746309,3.058513,0.338132,-6.381651,3.387963,-6.723843,-9.746262,2.038414,-0.078579,9.983611,2.014390,-6.049576,7.205567,6.421361,-9.875171,7.398899,1.243919,8.943169,-2.798778,8.260328,-7.294570,-0.199879,8.178936,9.716963,0.539782,5.386570,-2.253077,-0.419289,-4.209916,-9.991849,2.910264,6.101201,-8.555366,-3.902073,-1.032544,6.511005,6.130241,5.958013,8.787281,-9.644393,5.164703,-7.001335,-3.224296,1.445586,-9.931394,8.019225,8.234533,-1.874184,0.149629,3.589234,-0.784875,0.288036,-5.288409,-6.279713,9.632886,1.911767,-6.614997], dtype = "float64")#candidate|4793|(78,)|const|float64
var_4794 = relay.var("var_4794", dtype = "float32", shape = (728,))#candidate|4794|(728,)|var|float32
const_4795 = relay.const([4.346157,6.085346,-5.680663,-3.706674,0.126160,-4.115783,-8.881358,8.023923,7.307295,1.282155,-3.020529,-1.507168,-8.252260,-3.526845,9.073960,0.775094,3.881715,-0.816358,6.459362,4.403241,1.547189,9.231611,-5.098854,7.670420,5.598597,-5.321562,-0.332161,-5.179411,-7.130751,9.255943,-6.859605,-0.464298,2.784689,-7.536696,3.755095,0.786637,1.605387,-0.600004,-3.168520,1.947393,-7.067222,6.418139,-8.633448,-4.691213,-2.259511,-9.316489,-0.261041,-7.196766,5.593600,-7.187285,-5.482231,-5.978665,1.286094,-4.601284,-1.208642,4.752570,7.842047,1.915699,0.116976,-4.935626,7.788365,-8.178607,6.970076,-4.834802,1.288414,5.648810,-1.392418,-2.295646,-1.884826,5.539012,-1.659824,-9.455275,3.220285,-3.114762,2.921726,3.458738,5.270518,-7.267285,-1.637955,-2.179686,9.197255,-8.584420,1.263714,0.872019,9.109029,-7.349621,-2.162004,6.714094,-2.269697,-0.488997,1.681847,6.641579,8.490411,0.897935,-3.593311,-1.323879,-5.978723,5.656793,0.063809,5.395630,-7.164305,-7.800759,-0.102693,-3.192004,3.758423,-7.531005,-5.297541,-7.670493,3.016660,-9.067106,7.360702,-5.930494,8.540271,0.906282,-3.850373,5.471642,-6.170211,0.428987,2.611307,7.071677,-2.899306,0.498435,4.750503,6.401862,-3.973821,-2.207114,-2.075138,2.897891,5.568219,-0.317476,0.618153,-3.283296,1.094141,7.657056,9.805092,-9.723959,-1.743072,4.143823,8.621975,5.992197,-8.853585,0.148017,-6.306590,-8.694550,9.462061,0.683957,-0.587579,-0.093176,-5.138116,-3.934960,-1.197657,6.413072,3.658479,9.261332,6.958143,-9.719097,-5.569575,-5.160202,-4.302976,-5.732684,3.448710,-0.630235,6.895147,-0.753432,-6.926693,-3.375471,2.631128,-5.044795,-5.191802,1.909670,-4.353381,2.782191,4.105559,1.495272,-2.325328,7.244430,7.432756,1.513631,-4.384838,-0.432875,-6.680262,1.863102,9.253797,-7.164052,4.864323,0.869983,1.554335,7.645116,4.622707,-4.950007,-2.715794,4.491050,-0.900206,9.909992,-8.676703,4.708212,-6.795041,-3.907604,-3.617348,2.577865,-8.806844,7.197895,1.176424,-5.617409,2.441345,-2.840954,-4.801628,-9.033478,-2.893501,1.018241,5.745309,6.124167,-9.011850,0.998970,8.302603,-3.786420,-8.864873,1.315965,-3.300639,-6.943418,2.304559,-3.031135,-5.624869,-0.066590,-8.390745,-8.358344,-0.984172,2.045767,5.957500,-6.289096,3.846288,9.276358,-5.704285,2.005862], dtype = "float64")#candidate|4795|(234,)|const|float64
call_4792 = relay.TupleGetItem(func_311_call(relay.reshape(const_4793.astype('float64'), [1, 6, 13]), relay.reshape(var_4794.astype('float32'), [728,]), relay.reshape(const_4795.astype('float64'), [3, 6, 13]), ), 4)
call_4796 = relay.TupleGetItem(func_315_call(relay.reshape(const_4793.astype('float64'), [1, 6, 13]), relay.reshape(var_4794.astype('float32'), [728,]), relay.reshape(const_4795.astype('float64'), [3, 6, 13]), ), 4)
func_1439_call = mod.get_global_var('func_1439')
func_1442_call = mutated_mod.get_global_var('func_1442')
call_4797 = relay.TupleGetItem(func_1439_call(relay.reshape(call_4790.astype('int64'), [10, 16, 13])), 1)
call_4798 = relay.TupleGetItem(func_1442_call(relay.reshape(call_4790.astype('int64'), [10, 16, 13])), 1)
bop_4821 = relay.maximum(const_4795.astype('uint64'), relay.reshape(call_4792.astype('uint64'), relay.shape_of(const_4795))) # shape=(234,)
bop_4824 = relay.maximum(const_4795.astype('uint64'), relay.reshape(call_4796.astype('uint64'), relay.shape_of(const_4795))) # shape=(234,)
func_1745_call = mod.get_global_var('func_1745')
func_1746_call = mutated_mod.get_global_var('func_1746')
call_4827 = relay.TupleGetItem(func_1745_call(), 2)
call_4828 = relay.TupleGetItem(func_1746_call(), 2)
func_1176_call = mod.get_global_var('func_1176')
func_1178_call = mutated_mod.get_global_var('func_1178')
var_4867 = relay.var("var_4867", dtype = "float32", shape = (1440,))#candidate|4867|(1440,)|var|float32
call_4866 = func_1176_call(relay.reshape(var_4867.astype('float32'), [15, 8, 12]))
call_4868 = func_1176_call(relay.reshape(var_4867.astype('float32'), [15, 8, 12]))
func_4478_call = mod.get_global_var('func_4478')
func_4479_call = mutated_mod.get_global_var('func_4479')
call_4871 = relay.TupleGetItem(func_4478_call(), 0)
call_4872 = relay.TupleGetItem(func_4479_call(), 0)
func_4549_call = mod.get_global_var('func_4549')
func_4550_call = mutated_mod.get_global_var('func_4550')
call_4878 = func_4549_call()
call_4879 = func_4549_call()
output = relay.Tuple([call_4779,call_4790,const_4793,var_4794,call_4797,bop_4821,call_4827,call_4866,var_4867,call_4871,call_4878,])
output2 = relay.Tuple([call_4780,call_4791,const_4793,var_4794,call_4798,bop_4824,call_4828,call_4868,var_4867,call_4872,call_4879,])
func_4881 = relay.Function([var_4794,var_4867,], output)
mod['func_4881'] = func_4881
mod = relay.transform.InferType()(mod)
mutated_mod['func_4881'] = func_4881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4881_call = mutated_mod.get_global_var('func_4881')
var_4883 = relay.var("var_4883", dtype = "float32", shape = (728,))#candidate|4883|(728,)|var|float32
var_4884 = relay.var("var_4884", dtype = "float32", shape = (1440,))#candidate|4884|(1440,)|var|float32
call_4882 = func_4881_call(var_4883,var_4884,)
output = call_4882
func_4885 = relay.Function([var_4883,var_4884,], output)
mutated_mod['func_4885'] = func_4885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4650_call = mod.get_global_var('func_4650')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_4936 = func_4650_call()
call_4937 = func_4650_call()
func_4111_call = mod.get_global_var('func_4111')
func_4114_call = mutated_mod.get_global_var('func_4114')
var_4942 = relay.var("var_4942", dtype = "uint8", shape = (260,))#candidate|4942|(260,)|var|uint8
call_4941 = relay.TupleGetItem(func_4111_call(relay.reshape(var_4942.astype('uint8'), [260,])), 1)
call_4943 = relay.TupleGetItem(func_4114_call(relay.reshape(var_4942.astype('uint8'), [260,])), 1)
output = relay.Tuple([call_4936,call_4941,var_4942,])
output2 = relay.Tuple([call_4937,call_4943,var_4942,])
func_4945 = relay.Function([var_4942,], output)
mod['func_4945'] = func_4945
mod = relay.transform.InferType()(mod)
mutated_mod['func_4945'] = func_4945
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4946 = relay.var("var_4946", dtype = "uint8", shape = (260,))#candidate|4946|(260,)|var|uint8
func_4945_call = mutated_mod.get_global_var('func_4945')
call_4947 = func_4945_call(var_4946)
output = call_4947
func_4948 = relay.Function([var_4946], output)
mutated_mod['func_4948'] = func_4948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4650_call = mod.get_global_var('func_4650')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_4958 = func_4650_call()
call_4959 = func_4650_call()
output = relay.Tuple([call_4958,])
output2 = relay.Tuple([call_4959,])
func_4962 = relay.Function([], output)
mod['func_4962'] = func_4962
mod = relay.transform.InferType()(mod)
mutated_mod['func_4962'] = func_4962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4962_call = mutated_mod.get_global_var('func_4962')
call_4963 = func_4962_call()
output = call_4963
func_4964 = relay.Function([], output)
mutated_mod['func_4964'] = func_4964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3050_call = mod.get_global_var('func_3050')
func_3052_call = mutated_mod.get_global_var('func_3052')
call_4995 = relay.TupleGetItem(func_3050_call(), 0)
call_4996 = relay.TupleGetItem(func_3052_call(), 0)
output = relay.Tuple([call_4995,])
output2 = relay.Tuple([call_4996,])
func_5009 = relay.Function([], output)
mod['func_5009'] = func_5009
mod = relay.transform.InferType()(mod)
mutated_mod['func_5009'] = func_5009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5009_call = mutated_mod.get_global_var('func_5009')
call_5010 = func_5009_call()
output = call_5010
func_5011 = relay.Function([], output)
mutated_mod['func_5011'] = func_5011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2394_call = mod.get_global_var('func_2394')
func_2396_call = mutated_mod.get_global_var('func_2396')
call_5014 = func_2394_call()
call_5015 = func_2394_call()
func_2370_call = mod.get_global_var('func_2370')
func_2372_call = mutated_mod.get_global_var('func_2372')
call_5058 = relay.TupleGetItem(func_2370_call(), 0)
call_5059 = relay.TupleGetItem(func_2372_call(), 0)
output = relay.Tuple([call_5014,call_5058,])
output2 = relay.Tuple([call_5015,call_5059,])
func_5088 = relay.Function([], output)
mod['func_5088'] = func_5088
mod = relay.transform.InferType()(mod)
mutated_mod['func_5088'] = func_5088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5088_call = mutated_mod.get_global_var('func_5088')
call_5089 = func_5088_call()
output = call_5089
func_5090 = relay.Function([], output)
mutated_mod['func_5090'] = func_5090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2424_call = mod.get_global_var('func_2424')
func_2426_call = mutated_mod.get_global_var('func_2426')
call_5138 = relay.TupleGetItem(func_2424_call(), 0)
call_5139 = relay.TupleGetItem(func_2426_call(), 0)
output = call_5138
output2 = call_5139
func_5141 = relay.Function([], output)
mod['func_5141'] = func_5141
mod = relay.transform.InferType()(mod)
mutated_mod['func_5141'] = func_5141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5141_call = mutated_mod.get_global_var('func_5141')
call_5142 = func_5141_call()
output = call_5142
func_5143 = relay.Function([], output)
mutated_mod['func_5143'] = func_5143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2394_call = mod.get_global_var('func_2394')
func_2396_call = mutated_mod.get_global_var('func_2396')
call_5182 = func_2394_call()
call_5183 = func_2394_call()
output = relay.Tuple([call_5182,])
output2 = relay.Tuple([call_5183,])
func_5186 = relay.Function([], output)
mod['func_5186'] = func_5186
mod = relay.transform.InferType()(mod)
output = func_5186()
func_5187 = relay.Function([], output)
mutated_mod['func_5187'] = func_5187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mod.get_global_var('func_3071')
func_3072_call = mutated_mod.get_global_var('func_3072')
call_5198 = relay.TupleGetItem(func_3071_call(), 0)
call_5199 = relay.TupleGetItem(func_3072_call(), 0)
output = call_5198
output2 = call_5199
func_5203 = relay.Function([], output)
mod['func_5203'] = func_5203
mod = relay.transform.InferType()(mod)
output = func_5203()
func_5204 = relay.Function([], output)
mutated_mod['func_5204'] = func_5204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_5300 = func_1643_call()
call_5301 = func_1643_call()
output = relay.Tuple([call_5300,])
output2 = relay.Tuple([call_5301,])
func_5312 = relay.Function([], output)
mod['func_5312'] = func_5312
mod = relay.transform.InferType()(mod)
output = func_5312()
func_5313 = relay.Function([], output)
mutated_mod['func_5313'] = func_5313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5141_call = mod.get_global_var('func_5141')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_5428 = func_5141_call()
call_5429 = func_5141_call()
output = call_5428
output2 = call_5429
func_5470 = relay.Function([], output)
mod['func_5470'] = func_5470
mod = relay.transform.InferType()(mod)
mutated_mod['func_5470'] = func_5470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5470_call = mutated_mod.get_global_var('func_5470')
call_5471 = func_5470_call()
output = call_5471
func_5472 = relay.Function([], output)
mutated_mod['func_5472'] = func_5472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5088_call = mod.get_global_var('func_5088')
func_5090_call = mutated_mod.get_global_var('func_5090')
call_5475 = relay.TupleGetItem(func_5088_call(), 0)
call_5476 = relay.TupleGetItem(func_5090_call(), 0)
output = relay.Tuple([call_5475,])
output2 = relay.Tuple([call_5476,])
func_5497 = relay.Function([], output)
mod['func_5497'] = func_5497
mod = relay.transform.InferType()(mod)
mutated_mod['func_5497'] = func_5497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5497_call = mutated_mod.get_global_var('func_5497')
call_5498 = func_5497_call()
output = call_5498
func_5499 = relay.Function([], output)
mutated_mod['func_5499'] = func_5499
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5703 = relay.const([[[7.809473,5.829786,-7.051095,9.084182,0.130090,3.938058,-2.757697,9.638198,9.972320,-3.367805,6.517556,8.721249,-1.269099,-7.285374,9.420606]],[[8.677288,-5.422278,-7.416134,-3.479521,-6.951526,-0.245219,-7.630994,-4.054711,6.994245,7.657980,0.931618,-6.332048,-6.992734,2.634128,-2.068057]],[[-8.002728,-5.511473,5.404567,1.168475,-7.545604,9.559336,8.808047,0.785911,5.847802,-9.608509,-6.870823,4.353415,-7.267354,-6.591938,-5.939664]],[[-4.894827,-5.016252,-3.190524,8.012662,1.914387,1.432807,-1.034888,-9.655255,-0.376454,-9.779549,-7.185541,-9.420954,9.717430,9.568345,9.641882]],[[4.289551,-0.099206,-8.831890,1.673280,-8.686067,3.339620,7.530780,8.298388,-8.831873,4.840426,-7.891598,7.208198,-2.834394,5.573829,-9.757717]],[[9.532332,-3.852359,3.637201,-4.428218,-4.699062,2.207070,2.186021,0.173676,-3.991163,-7.177882,6.345830,4.479784,-7.107709,7.744098,6.398853]],[[-7.721935,1.355222,-7.472714,1.368356,2.062968,-0.206607,1.704564,6.536936,-4.407890,-2.203012,-9.953419,2.653102,7.378919,5.326868,9.731395]],[[-9.930022,7.755591,-5.222871,8.571674,6.222064,0.162202,7.175020,8.148384,8.447319,5.837694,-5.164761,6.936396,6.308368,2.259577,-6.596540]],[[-9.552120,-2.464267,-7.173283,3.618810,-7.979572,8.279758,-9.385399,4.785306,1.527246,1.951227,-3.695522,-5.669922,7.796555,-2.403269,-9.305374]],[[1.473873,-3.696487,8.781746,-3.807430,-5.847018,7.174979,-3.687989,-4.341517,9.916567,5.851456,-6.902301,-4.499809,5.789562,9.323180,3.309573]],[[-9.764009,-1.184793,-0.065905,-6.079301,-8.963032,-8.135644,-3.148116,-8.402799,-2.151008,-9.304745,-9.179241,0.188264,-5.195253,0.302334,0.601672]],[[9.014585,0.349010,-2.231040,1.219014,7.972363,2.250035,6.027228,-4.742836,-4.097265,3.847601,-7.517197,-2.294060,9.051798,2.562010,-4.514782]],[[5.309285,-2.026461,5.293065,-5.749251,6.459876,-3.873792,7.765006,-6.913301,7.165995,-8.822322,-1.775026,0.793509,6.735734,8.446992,4.788992]],[[5.408874,2.511318,7.074973,-6.736835,-4.040968,2.986441,-6.229938,-2.271717,7.510419,5.815791,4.353991,-2.660615,-1.438032,5.123003,-5.875641]],[[3.418076,8.915039,-1.258865,6.962952,-1.811411,-1.967326,1.787893,2.929668,-6.318938,5.234038,-7.514742,2.372781,4.951104,-6.473124,8.208365]],[[4.799718,-3.615092,1.955681,-0.721758,2.705200,-5.246752,-0.342269,-8.080050,-2.528814,-9.126374,7.890569,-1.028097,-3.323796,-2.314233,-3.375429]]], dtype = "float32")#candidate|5703|(16, 1, 15)|const|float32
uop_5704 = relay.sinh(const_5703.astype('float32')) # shape=(16, 1, 15)
output = relay.Tuple([uop_5704,])
output2 = relay.Tuple([uop_5704,])
func_5706 = relay.Function([], output)
mod['func_5706'] = func_5706
mod = relay.transform.InferType()(mod)
output = func_5706()
func_5707 = relay.Function([], output)
mutated_mod['func_5707'] = func_5707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4134_call = mod.get_global_var('func_4134')
func_4136_call = mutated_mod.get_global_var('func_4136')
call_5757 = relay.TupleGetItem(func_4134_call(), 0)
call_5758 = relay.TupleGetItem(func_4136_call(), 0)
uop_5767 = relay.tan(call_5757.astype('float64')) # shape=(5, 4, 15)
uop_5769 = relay.tan(call_5758.astype('float64')) # shape=(5, 4, 15)
output = relay.Tuple([uop_5767,])
output2 = relay.Tuple([uop_5769,])
func_5773 = relay.Function([], output)
mod['func_5773'] = func_5773
mod = relay.transform.InferType()(mod)
output = func_5773()
func_5774 = relay.Function([], output)
mutated_mod['func_5774'] = func_5774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5186_call = mod.get_global_var('func_5186')
func_5187_call = mutated_mod.get_global_var('func_5187')
call_5810 = relay.TupleGetItem(func_5186_call(), 0)
call_5811 = relay.TupleGetItem(func_5187_call(), 0)
output = relay.Tuple([call_5810,])
output2 = relay.Tuple([call_5811,])
func_5816 = relay.Function([], output)
mod['func_5816'] = func_5816
mod = relay.transform.InferType()(mod)
mutated_mod['func_5816'] = func_5816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5816_call = mutated_mod.get_global_var('func_5816')
call_5817 = func_5816_call()
output = call_5817
func_5818 = relay.Function([], output)
mutated_mod['func_5818'] = func_5818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_5847 = relay.TupleGetItem(func_3034_call(), 0)
call_5848 = relay.TupleGetItem(func_3035_call(), 0)
func_3501_call = mod.get_global_var('func_3501')
func_3504_call = mutated_mod.get_global_var('func_3504')
var_5850 = relay.var("var_5850", dtype = "float32", shape = (728, 1))#candidate|5850|(728, 1)|var|float32
call_5849 = relay.TupleGetItem(func_3501_call(relay.reshape(var_5850.astype('float32'), [728,])), 0)
call_5851 = relay.TupleGetItem(func_3504_call(relay.reshape(var_5850.astype('float32'), [728,])), 0)
func_3842_call = mod.get_global_var('func_3842')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_5862 = func_3842_call()
call_5863 = func_3842_call()
const_5868 = relay.const([[1.855258,-9.068549,-2.205174,4.950897,4.763873,4.724569,-2.242858],[-2.740607,3.523818,1.571115,1.138383,9.678107,1.367182,-1.149868],[-3.702469,-5.685724,4.848369,7.770076,-2.095733,-5.580103,3.270039],[1.370011,5.453392,0.267907,5.583628,-1.263459,7.296818,1.002065],[3.996219,0.886363,2.257364,6.123353,-9.362364,-5.606636,0.581726],[-6.455023,-5.874225,-4.136932,-8.536887,4.924100,-2.406285,-7.324950],[1.859519,6.848468,3.831717,7.448454,-9.790170,-2.527132,1.457871],[5.301199,1.297341,4.992706,5.573874,8.862269,6.004203,-0.005322],[-4.866415,3.866569,-7.320816,-3.462544,-8.779573,-7.665409,-2.282535],[8.338145,7.386978,-9.869080,2.419997,-3.554085,4.136120,-3.610332],[-8.907217,2.997587,9.879166,6.703667,2.323865,7.502466,2.291181],[-4.642356,-3.203923,5.446208,7.926205,-4.115785,0.153329,6.070319],[-9.082751,-8.088024,-4.465978,8.408178,-2.618548,4.074838,-0.774441],[8.886994,-6.641373,0.070325,-9.099594,-1.444929,-2.475932,-2.162962],[-9.243628,6.921862,7.857738,3.138110,9.060417,6.382938,3.083937],[8.386547,2.960938,8.676595,-7.275859,8.539495,4.586062,-2.560303],[-0.169103,-5.578065,0.391559,-2.243201,8.886426,-4.258001,-4.713471],[-6.056376,8.571277,-2.515414,3.362389,-7.869986,-3.827484,-2.301040],[-6.215908,-7.225957,1.440760,5.789898,-5.888571,2.298407,4.297524],[-5.923671,3.859020,-1.778700,-5.021883,5.081771,-1.171694,1.003718],[9.504107,9.955004,6.310089,6.586843,-7.425653,5.068541,-7.558161],[-3.196353,-1.247670,4.257656,7.645894,-9.526250,-0.573067,9.405280],[-4.985076,-8.288369,-4.203324,9.577375,8.189958,-8.653613,8.472639],[-2.040994,-1.911503,0.324841,9.166841,-1.966593,-7.954512,-0.523352],[6.398591,-1.055340,-6.661101,1.135098,-0.972377,-2.639479,0.355779],[0.989673,-8.521388,-1.744091,-2.888626,-5.985303,3.529744,-7.181464],[1.305238,-5.369369,2.602148,-7.717904,3.978403,-5.185633,-5.823207],[7.039788,-7.016523,-5.939689,-9.891865,8.734401,2.317500,-6.176210],[1.976391,-2.760273,0.707702,6.174060,6.559019,7.954326,8.109040],[-9.675680,-3.954571,-5.172037,-8.818515,-0.996054,2.477803,1.588556],[2.531266,7.550195,4.730768,3.901591,3.424797,2.241274,2.209591],[3.657092,-6.899506,-1.172183,-0.470072,1.364507,-8.759286,4.653790],[-5.651715,-1.185872,9.679174,-9.151007,8.791855,9.363238,-0.563161],[-4.980789,2.553805,-5.503888,2.616134,5.525708,4.179684,0.017760],[-9.253427,-6.641632,4.393909,-8.969024,-9.112001,0.628748,-9.509807],[-5.639837,6.533747,-5.054072,4.501193,6.845466,-3.942990,-8.511684],[2.569776,7.102466,-9.220912,-9.039928,-6.145534,-1.812526,8.358913],[-4.758757,4.346618,-9.249777,7.002256,8.980186,-0.717032,-8.667405],[2.036740,-1.860695,-4.854253,-5.234981,1.071491,-6.651038,9.664120],[6.430876,1.975366,8.459359,-3.885274,2.231653,-6.469355,-2.866592],[7.205583,3.418493,1.319205,-2.160521,0.821203,4.320321,8.070368],[-2.458806,-7.233463,-9.495646,-4.995426,-3.992692,8.172066,-9.445111],[5.202806,-0.698481,0.367914,7.785540,-5.830248,-9.059581,6.905255],[-7.894142,-8.082251,5.326262,-2.060579,-7.442762,1.912423,-1.575279],[-4.504586,5.002418,4.218659,3.692057,2.948238,-6.602529,-9.998981],[-9.488160,-5.701120,-1.542878,7.019099,4.438425,2.222111,-0.969094],[5.780468,-4.472474,-8.061755,4.359995,3.819836,-5.708234,8.342011],[-4.596943,-3.200905,8.040300,-7.331495,7.835601,-1.136966,9.399281],[-3.066638,-7.027008,-1.712540,2.438174,-5.590161,0.080815,8.498362],[0.403284,-2.666533,-7.250094,-4.537945,4.891791,-7.276649,-7.400898],[6.163879,-2.889569,-1.373225,5.875693,6.089521,4.260527,9.599647],[-6.291106,-6.376511,-2.422184,7.752568,1.094336,-5.288986,-1.830439],[8.372119,7.051767,1.685621,-6.246598,4.426507,-7.060391,4.421306],[-3.956705,-9.011395,0.666466,-1.495867,9.880988,0.654186,6.437246],[2.614771,-2.674006,5.241488,-4.048683,4.711136,-6.973823,-7.432511],[-3.131160,-6.250241,1.581769,9.713236,7.182348,-9.387681,2.808324],[-1.781691,8.587276,7.351577,-8.039124,-4.033343,9.340047,-7.555882],[-9.317397,-6.210818,-5.137043,4.453726,-3.089264,-7.074181,8.742766],[-5.867616,-1.135319,0.477871,6.714538,6.009303,9.905579,-9.293313],[-7.753708,-7.882656,9.784903,5.212080,9.801472,2.949101,5.227728],[-3.432678,-8.709558,6.477590,6.229601,1.855358,0.111261,-9.530067],[-9.992044,3.559362,0.699436,0.372019,1.736760,-1.860629,8.517383],[-5.117054,-2.220973,1.228164,2.291682,9.209291,-4.673892,6.322373],[-8.906246,-6.868372,-9.679064,7.941943,-4.571798,4.767398,8.994709],[-9.164070,7.616048,0.225618,8.593848,1.130683,2.366956,6.135811],[9.485007,-2.198691,6.785906,-3.056382,-4.239674,6.837664,-6.109493],[-3.602989,8.460156,-6.422360,3.492809,-7.833711,5.748324,-4.671375],[-6.875946,-1.139567,-0.314524,4.067337,7.254274,-9.574262,5.887334],[-1.932387,-9.833272,2.398411,-2.251030,-2.706869,3.957157,-4.979656],[-9.447821,-9.049156,8.553064,-9.939797,9.269568,7.545227,8.376010],[-5.881015,0.563413,-3.115720,-3.894198,1.808194,-1.276966,-3.716475],[-6.679719,-0.049100,1.537581,-4.737405,6.260458,9.963563,-9.107406],[6.829848,-8.357526,1.882003,8.409991,6.248214,7.070488,-2.711138],[-3.874121,-3.300313,7.758773,-4.500651,8.708118,8.011213,7.281987],[2.894848,0.494490,-2.994721,-5.101054,-8.860145,0.512128,5.376306],[-3.297470,-5.431783,7.979772,-6.408054,1.530375,7.769625,4.255346],[7.542827,3.699217,-0.528679,-1.410004,-6.662113,-5.153188,-8.827524],[-9.083699,0.132191,5.233556,-7.790769,-0.930203,5.162490,5.723479],[-5.895461,-2.997541,2.269177,-1.893221,-8.443817,-1.463489,0.969327],[0.489462,4.112297,-9.077744,7.356828,-9.879134,-5.628443,-8.373948],[3.219731,-2.759760,-1.132034,2.883646,2.934544,0.998268,-9.412940],[-6.929727,5.324109,7.269893,-8.459068,0.485393,1.066304,1.904659],[-4.503126,-6.260235,8.456857,6.824431,8.154720,9.011734,-5.543216],[-4.135194,3.649414,-7.157189,5.755393,1.370383,3.420553,3.447832],[-5.706447,-1.197212,-1.803753,-9.823992,-8.638314,3.807663,8.518915],[-2.990812,8.141648,-9.622706,4.537207,0.267944,8.953980,-4.469421],[2.860736,4.132605,-2.372247,-9.518500,-3.454412,-6.576539,-4.188308],[-9.335203,7.195415,5.855586,-7.785436,3.221175,1.356316,-4.529384],[5.424196,4.282920,-1.433298,-2.678827,8.923604,3.039297,-1.269112],[-6.220457,5.664552,-5.921101,7.894042,2.903731,1.400744,1.376794],[-8.210233,4.495068,1.035825,-0.861096,-5.292017,-0.721743,-2.451805],[1.140519,-9.305862,8.171439,5.976027,-6.910884,-4.018956,-9.668882],[-9.810983,-5.279746,9.055109,-5.272466,-0.232930,-7.134172,7.205999],[-1.056560,-2.352268,-0.187241,0.917475,-0.214486,3.272454,4.736037],[-8.120186,-8.484675,-4.176740,1.555861,-8.671251,-0.185596,6.949762],[8.675799,6.695522,-2.691892,-6.978596,-0.222795,-8.740123,-4.313493],[6.894329,7.920393,7.315568,-3.583207,-2.269433,9.056745,9.974358],[-2.610698,-7.471419,-1.754253,9.826309,4.095621,2.369647,-4.522421],[-4.019565,-9.464123,-0.682561,3.888250,5.559751,3.029443,-5.372621],[-9.904669,-6.671567,-0.109854,4.842339,0.446242,2.741370,-2.199780],[-9.504853,-4.211591,8.498584,4.478098,0.312306,8.917926,-2.277223],[-4.885434,7.233885,7.938558,4.942724,-6.817366,-7.242435,-1.688887],[-1.432384,-2.155502,6.374602,8.459303,6.690213,-0.268671,9.119124],[3.541184,0.068457,-5.116420,1.734418,-4.542333,4.312928,0.344250],[-2.033937,9.291907,-8.772036,-6.522258,2.101004,-9.642906,-3.217571],[0.456776,-7.675401,3.857165,-9.558881,-9.849055,5.824155,0.001147],[2.388429,-3.085713,-4.312613,-1.185008,-2.837074,-4.186641,-1.215533],[-3.245665,6.662491,-0.836455,3.972010,5.953541,-6.046612,9.887624],[4.165608,-6.536765,2.802932,-3.724986,6.206916,-1.994559,7.346599],[3.870460,3.340817,-0.480363,7.572370,-0.656854,3.510744,-9.237697],[1.569204,5.048165,-0.224882,3.416957,5.500557,0.669927,-2.215915],[-6.259624,-9.945244,7.996656,3.404826,0.246189,-2.940904,7.287150],[3.450318,8.060849,5.885667,4.672953,4.243095,4.437863,4.166047],[7.125518,-4.768857,2.227560,1.568663,-5.350802,0.747707,7.217471],[1.741424,0.624745,-4.445937,8.107040,5.875291,-2.971957,4.276843],[5.010824,-8.243261,-6.519755,-6.077978,-2.143103,-7.836203,8.884806],[-4.658471,-9.083754,6.477763,-9.199916,-4.132650,-1.958194,1.314817],[-6.757912,-3.448109,9.169874,-3.721661,-9.852249,3.879165,-5.900303],[0.757212,5.403620,-6.876168,-3.622674,3.760462,-7.451574,-7.537656],[-1.638794,5.635577,9.695382,-7.522874,-3.577083,-7.406277,-9.475682],[6.690509,-8.000908,-3.620458,-7.520836,9.063875,-8.062031,-0.403344],[-3.927412,3.526169,-1.401422,-3.492902,9.077861,-3.342994,1.750279],[-0.687278,-6.001482,5.754669,-1.370921,8.596610,-7.131089,1.675431],[9.748044,7.098133,2.671082,-0.939687,3.242094,1.593187,-4.527215],[8.680844,-1.765652,2.759139,0.714869,8.564028,-0.515952,4.656520],[8.756136,0.972349,-8.594273,4.263900,-6.262333,2.082241,-7.171922],[-4.011626,-3.490829,-3.821119,1.203316,9.357095,-7.417867,-5.669282],[6.875630,-9.775949,4.972520,-5.188846,-4.512125,7.246416,1.488093],[2.244936,9.255609,-9.090103,8.287583,-6.505906,-6.521316,2.014972],[1.409906,1.364561,4.483635,7.582406,-0.248651,-6.285429,5.196985],[8.315000,-4.637064,-4.814833,-0.436571,0.801903,-5.409757,-7.586896],[-2.987009,2.523047,5.161954,-7.325910,-2.202630,6.104071,8.850202],[-3.364330,6.911662,-8.409373,-6.155823,9.405206,7.399687,-5.492390],[5.689226,4.738055,-6.962633,5.340998,4.260595,7.014199,3.576372],[-1.305909,-6.737014,-7.247286,-8.774913,-8.690166,9.882454,1.891542],[-5.649448,-6.588444,-9.934132,4.633032,7.145648,4.506974,9.151393],[-0.782875,0.400677,0.428432,1.364807,-8.442596,-9.744465,-4.307147],[-8.831823,4.264688,5.158159,-5.366180,1.099308,5.779102,-5.093209],[2.065530,2.923629,3.665503,1.002545,-5.157806,-0.421012,-4.184765],[4.566241,-1.176085,1.452100,0.858818,-0.522611,-0.390374,8.567230],[-0.583053,-4.871008,0.108398,4.826003,0.702922,-0.859587,-0.119527],[-7.363930,4.079178,9.891607,5.825278,7.352084,-3.164717,0.874386],[5.304252,-3.783852,-7.301226,-0.269018,-7.432888,-3.890705,-2.888868],[7.674770,6.348695,3.345196,-1.595685,1.418729,1.597803,-1.954218],[-6.502465,6.830759,-4.870803,2.552561,-7.532638,6.032932,5.998075],[-1.289277,-1.892097,-4.859544,2.691943,-4.871160,4.609369,-1.912196],[1.774119,-3.465701,-3.897005,8.658409,7.307430,2.588721,-4.702388],[-7.206186,8.514725,7.037306,-0.426885,8.301696,-7.196185,1.680164],[4.265341,-6.511951,-2.487477,-6.425207,-5.878027,-8.761214,-6.182085],[-4.316366,-4.687355,7.594594,8.845999,1.887948,-0.138048,-8.102987],[-7.644683,-3.321772,8.148475,-9.207729,6.645169,-4.587992,5.153803],[6.598140,-3.681271,-9.181965,-9.159550,-7.752021,1.827586,-5.140904],[9.318335,-7.832468,-1.774677,0.888108,6.361889,-4.895578,0.168427],[7.982909,5.758802,-2.687179,-6.789807,-1.258432,-4.648630,-8.987206],[-9.060200,-4.262482,2.543477,4.699685,6.230663,9.415513,4.056488],[-7.411224,-1.185525,5.014563,-9.601241,-9.332527,-1.073758,-6.085768],[8.053349,-1.435187,2.152555,9.775920,0.790021,-6.826044,-0.844529],[-7.087595,8.101794,-4.851755,-1.052066,1.185557,6.442103,5.484245],[-8.367179,8.421249,-9.605675,2.910055,-5.635196,5.759216,-8.339918],[-2.146400,0.074490,-4.980511,5.058634,5.155105,-7.206691,7.237599],[-4.102612,3.887586,-0.835491,-5.142993,7.027873,-2.018381,5.640701],[4.445011,7.346269,-8.865424,-5.664432,-2.436439,6.664789,5.753819],[-6.913478,8.148608,3.388792,-0.940972,9.171821,1.676532,-8.489269],[-5.614537,9.216077,8.112579,-2.581026,1.394670,-9.682951,-1.430038],[8.509224,7.346585,-5.783593,-2.564489,-5.212403,6.945650,-7.673516],[-8.882520,-6.980973,-7.959135,-0.652464,7.408081,8.010949,-5.005068],[-2.180619,2.158924,-8.176718,2.914198,3.039115,0.940022,-0.096895],[-7.741073,5.708313,-5.603728,0.905727,5.648329,-2.958013,-3.472155],[6.823846,-1.806157,-9.282570,-6.301454,-4.526528,2.070654,8.813923],[2.087183,-7.219884,-4.425531,-3.035062,4.726412,7.477802,-4.168215],[0.281139,2.973357,6.590534,-2.372498,4.331773,-0.350914,4.806371],[-4.736643,-5.771161,-9.503604,6.014637,-1.525148,8.916219,6.725351],[-4.579682,2.902286,1.281608,4.141492,-7.938847,-0.339329,-1.900947],[4.062360,-4.461426,-2.276931,-5.193643,5.885392,-4.906544,0.080128],[-6.987240,-4.456995,-6.074525,-4.894503,1.623366,-6.909469,-0.384942],[7.357794,-7.544664,-7.101146,-6.286162,8.741930,6.787316,-1.458522],[6.056837,-9.037984,8.577824,-3.766501,-1.800939,2.286992,-2.887409],[9.497538,-0.517449,3.805675,8.904504,6.172058,0.444469,-5.928096],[-8.574733,-3.040384,5.761873,4.438559,5.336970,-2.451888,-5.814353],[8.201121,-0.541648,7.208877,-2.120234,1.609862,-5.766139,8.220289],[2.954331,7.069148,0.078916,0.421920,-6.142967,3.969738,2.987141],[4.144205,4.894518,-1.283929,0.498618,-3.564241,8.661078,8.590253],[-4.612328,0.315705,1.900783,7.141025,-1.389360,0.295795,7.651702],[-1.722408,-5.501222,9.528875,2.090222,5.874553,7.945737,-7.553922],[7.697645,3.323495,-1.845283,-3.871467,8.376791,-4.355280,-2.358329],[-2.051563,-1.434479,-0.223244,-9.910432,-3.021247,-9.004971,-0.385990],[1.296695,-3.110696,-6.661010,8.076111,-1.956570,-6.512012,0.094530],[4.381553,-1.207893,-3.696842,-3.268277,-9.927531,-3.686445,-8.604394],[-9.516587,-5.332324,6.488212,9.837066,-9.606846,7.262449,-9.855639],[-6.571794,-9.086203,3.604286,7.413815,-5.680883,6.178207,-2.841113],[5.112734,-0.546189,4.669305,-2.900239,7.700473,8.181844,-7.518548],[-2.742489,-2.844062,-1.565316,-1.492425,-7.520464,6.166870,5.757529],[3.742567,-6.555307,0.544065,-3.142191,-1.233584,6.787897,-6.092599],[1.534939,0.986498,1.521213,9.758422,9.611995,-0.982849,3.846164],[-7.511813,-0.446447,1.656226,-2.792628,3.386079,6.576004,6.010033],[2.208923,1.488117,-9.677528,-1.330374,6.991100,-4.220617,3.187226],[-3.417215,-7.569930,2.900384,-2.808512,-2.964198,3.567764,4.644890],[4.945687,-0.798884,5.017965,1.993935,-0.561891,1.717555,8.858100],[-8.419594,-7.668888,-3.918128,3.009158,8.982148,-3.623135,3.456715],[2.817275,-8.317373,9.836969,3.686651,4.706632,1.066608,-9.440544],[5.537169,-6.903728,-5.332685,-9.301220,3.831863,0.632971,2.733126],[-4.740684,5.931026,4.618493,-1.835652,-3.799668,8.149046,1.485663],[-0.852184,-1.723195,7.721977,4.528913,7.492908,-8.375629,-6.094658],[-5.366602,7.252896,-6.516014,-9.359020,5.172045,-9.382189,9.485347],[9.021914,-5.942815,-4.916847,0.244319,1.221136,-3.201197,-2.276944],[-4.405914,-2.927472,-9.467361,9.305136,-7.837739,-4.064022,8.252455],[-7.008369,7.180386,3.725332,7.602820,-2.440187,6.237833,1.916750],[-3.365856,4.747989,-4.215934,0.580217,1.035285,7.008781,0.909406],[7.444380,1.210919,9.759638,6.376742,-8.545796,-8.668179,7.249214],[2.446217,1.529704,-2.754052,-1.654961,-8.433088,2.856088,-6.883924],[-1.442881,8.901207,-9.974796,3.996845,1.806498,-0.192076,1.236021],[-9.544381,2.547601,8.963415,0.256189,9.021905,7.166034,-5.266599],[5.219531,9.154240,-7.856679,-5.255507,6.667120,-1.491940,-4.158135],[4.835668,2.374027,1.272689,8.203911,-3.516816,-2.957383,-5.752609],[7.320754,1.489342,4.786669,-8.044847,2.098678,2.901956,-7.080771],[3.410889,-5.486291,-6.962594,-7.988505,-6.832969,4.368945,-4.814820],[-0.222317,9.502631,3.298197,9.363798,4.297236,-2.996270,-9.713382],[-3.330646,4.296934,3.060356,-5.464054,-1.160987,4.472016,-8.545063],[1.252838,8.362798,4.602125,5.523162,2.123827,1.635715,8.772507],[2.236430,0.587974,-0.307104,3.553025,5.481263,-1.225190,-2.321600],[-0.011496,-3.213553,6.609220,-4.125102,-1.511302,-4.405612,-6.289798],[-6.222349,9.863701,3.221250,7.730489,-8.987665,5.460706,-2.978404],[2.601961,-2.109590,1.204996,8.722265,-8.706243,4.788482,4.799089],[-4.252658,-4.684922,2.876342,-8.455149,-3.764004,6.317299,-8.908191],[-1.187884,-8.807920,3.667007,-8.409421,5.870089,2.991737,9.439555],[-8.998299,-8.726653,-7.902603,3.270380,6.246516,-7.974487,-6.278829],[-1.072752,-3.627518,0.882311,-6.866029,5.149320,-0.238554,-7.687993],[-3.932666,-9.370604,-9.336900,6.481662,0.799661,4.348189,-4.892929],[2.022130,1.720054,0.014069,-3.551357,-0.848405,4.440310,1.235455],[-5.697951,-9.930568,8.002352,2.590003,1.986544,-0.454406,7.636517],[9.657676,4.303701,-5.481471,-2.744668,5.864345,2.948582,0.286981],[2.131343,-6.063345,-2.357419,9.820374,8.182147,-2.360410,5.983112],[-1.500252,-0.168367,2.448618,-1.456076,-7.029691,5.905469,9.331620],[3.525559,-3.894199,-2.426784,-7.886439,3.733413,-4.344247,-9.247948],[7.149253,-6.130816,-4.308353,-6.414815,-4.088396,-4.352569,0.770490],[-1.338460,-2.759834,-2.953745,8.263809,9.851631,0.387862,2.546637],[6.877981,-7.622156,2.449605,-1.145556,4.313769,5.648982,4.912126],[-8.280476,-6.288777,-7.637727,-4.606961,4.087916,4.692843,2.105938],[3.402336,-4.220977,-0.712477,1.333727,7.781563,-6.803626,-5.989759],[1.359135,1.452414,3.286383,-6.249927,-5.686456,-4.756742,-6.928402],[-7.383954,-8.134052,-9.662989,-4.692201,-3.905429,1.399786,-8.725351],[-6.993679,4.024023,-8.832580,-0.640538,-1.463431,4.772754,0.080978],[-5.276725,1.583139,-8.783580,-0.760645,2.569923,2.370829,6.623779],[9.959901,-4.390978,-3.460422,5.808683,-8.067127,-1.026031,4.423768],[5.882929,3.789029,-6.831042,-7.311952,1.640475,-4.232905,-4.982936],[-0.519084,-8.471724,7.447056,7.447185,-9.924981,-6.626529,-4.232549],[-4.053927,2.064438,5.206140,6.462016,2.252406,-5.328668,3.902550],[6.198344,-4.394613,6.391446,-8.116182,-2.763450,-6.803901,-9.476306],[1.655475,-2.720447,-6.478240,-4.810506,-4.432613,-4.630833,5.476921],[-5.860541,5.163194,-8.449607,9.901313,-3.249467,-8.623890,-7.833419],[9.974318,-9.318338,5.961804,-1.236786,-0.972110,4.772165,8.031915],[-6.249007,-8.465919,4.455902,7.593680,-6.430075,4.964488,-4.884017],[6.917422,-7.250802,1.688483,9.555809,4.861185,7.066846,-3.232322],[3.960845,-1.064041,4.354091,-6.374883,-9.962947,-0.789281,8.145066],[6.699351,-6.310456,-8.409633,1.012015,1.248819,-5.443115,0.135733],[-4.003390,6.794823,5.258899,3.763080,-3.008618,7.509670,0.723917],[5.240471,4.663117,-3.627597,4.293486,-0.812819,3.058411,-2.687786],[2.281660,5.448709,6.252245,3.450672,-5.992703,1.579383,-2.346269],[3.869686,2.918015,-9.595510,0.762682,-0.033403,7.517102,4.494008],[-3.181753,8.242381,5.273169,9.071760,8.279625,5.846747,9.905815],[-9.412142,3.075659,-7.887653,2.368029,7.473617,6.372605,0.677785],[9.368212,6.508545,-7.808628,7.720093,1.857429,6.938681,6.041980],[-8.329106,8.968725,-9.936040,-0.110538,6.953472,-1.215010,-4.782584],[-6.626655,-2.630789,2.498639,1.966725,-6.980338,2.375401,2.499490],[-3.204797,-8.210906,-3.092326,-1.857246,-4.997299,6.405342,-1.349391],[9.390554,9.515262,-0.240205,0.532401,-8.352509,-6.077196,6.270908],[-5.078163,-9.591985,1.506062,-2.778045,-2.433659,-7.415531,7.889154],[3.775793,0.973573,5.079109,-9.010162,3.381206,2.267305,0.382466],[-2.857817,8.642074,8.099513,-0.703370,-1.118478,-5.552081,1.870432],[-7.375753,-4.317438,-2.777738,-2.829138,9.103421,8.439040,-9.364767],[-1.415441,-7.454500,-1.697817,9.550649,4.576967,-8.760215,-5.131631],[1.741810,3.893306,3.420834,1.034051,-1.973894,6.294185,-7.357050],[-1.833031,4.778687,-1.981607,4.776211,4.728725,2.441116,-6.256592],[7.274220,-0.926243,-6.039286,-3.901715,-5.962092,3.893493,4.444116],[-0.611286,-9.745516,-5.661519,6.366437,2.591100,9.761510,5.080255],[-4.262509,-2.200550,9.284783,-6.697963,-1.097057,5.711934,-3.305010],[5.883817,2.545320,7.930444,-5.394330,6.151775,5.950690,1.546083],[3.710013,1.250553,-4.178266,7.361877,-9.977031,-9.302306,-5.298675],[1.783210,-6.695861,-9.864905,-4.062685,6.809361,2.956515,-1.633368],[-5.082753,8.000938,4.249947,5.141348,-5.493754,2.612035,-5.328834],[-9.083182,3.800707,3.834945,-0.201037,1.311935,7.736265,-8.159467],[8.190413,7.960369,-2.721956,6.916768,2.560327,1.754565,-7.871708],[3.249872,-6.270517,8.461733,7.323939,-1.697504,9.323105,1.128578],[-0.603860,3.958919,-4.745944,7.650335,-0.009023,-2.350438,6.425760],[7.781438,-9.712471,-9.956261,-3.518452,-0.236755,-3.052780,-2.420361],[-2.855637,5.356374,1.540001,-0.908429,5.679800,-0.842073,2.780727],[-9.064461,-9.457374,-9.975845,-7.590743,-7.559714,-2.287057,-9.311726],[7.836232,-2.887175,-6.476710,-6.090221,3.979881,-1.293871,2.952061],[-1.261392,0.917594,1.783349,-0.773453,6.631327,6.582394,-9.976843],[-5.886995,-7.726751,8.316386,-4.107528,-1.058073,6.766994,0.729099],[6.300694,-6.615362,3.110466,-5.698725,8.892069,-2.393234,3.696833],[-6.523014,-5.905017,-4.950673,-3.960255,0.717796,-6.890351,-8.694507],[0.756273,8.333453,-8.737619,-5.530585,1.725264,-7.121732,-7.365947],[4.985689,-6.562943,3.019006,6.133940,-5.938671,1.555791,-1.524747],[8.073834,4.692875,-7.294063,0.542843,-1.962762,4.981544,-2.971981],[-6.004180,-3.467107,-0.664141,-7.118697,7.950982,-3.016805,9.349986],[-2.838936,0.957572,-5.188547,-1.971447,5.431200,9.138679,-4.802339],[8.844093,9.800200,5.626613,-3.064116,-0.805558,0.989608,-5.224933],[7.967967,5.250666,1.125052,-7.608519,9.516320,-8.384477,-3.998256],[-6.026420,-2.081893,-3.839832,9.254710,-5.485483,8.698054,-4.554372],[-5.597068,-8.434366,4.652659,9.239273,-6.592407,-3.401704,6.796686],[-2.396669,2.700954,-1.481732,3.396474,2.550826,-7.427052,-9.956426],[-0.297618,-1.022595,6.350331,4.194012,-5.951956,1.280014,-9.125207],[-0.799138,-8.525890,6.449949,3.856337,-6.613240,-3.803674,7.533037],[0.357226,6.392128,0.782305,-1.807310,-1.362064,4.783594,1.259562],[-9.519101,-2.097728,5.479818,9.407199,-3.163247,-3.126962,7.237957],[-0.749461,9.372028,-9.548761,-1.016475,-8.436620,-4.411926,-8.967203],[0.696871,-1.795776,3.282944,-4.385004,-4.030452,6.185411,-7.260797],[3.995630,5.314524,-5.687537,1.388372,9.938275,-0.787557,-6.651754],[-5.453660,-3.487756,-0.136192,5.681904,-1.694709,-3.514948,-6.919007],[2.548134,1.584304,-7.599766,6.574665,1.112117,-6.199698,-7.155045],[-4.875403,8.725455,0.144948,-0.803223,7.694913,3.152737,6.529753],[-9.249913,1.775899,-3.329616,-1.658812,1.927716,-8.187256,-1.536026],[4.650076,9.140488,8.211175,5.346574,9.869092,1.405639,6.631606],[-1.529204,-7.125894,-6.191272,-5.434645,4.439282,-8.306675,-1.227134],[3.670444,0.485220,6.435164,4.839334,2.582592,2.590120,-6.942766],[9.989627,3.716510,6.307592,-0.555537,-4.049743,-6.586706,9.532001],[-3.241713,7.211503,-2.651196,1.699553,-9.086567,4.428168,5.214967],[-9.674273,4.858501,3.839404,0.484037,-6.819278,9.060830,-6.175761],[-1.314122,-9.020452,-6.181472,3.886402,-2.162549,-8.724134,9.343658],[-3.031533,0.085339,-5.584342,0.952953,8.527803,-4.777023,-5.342511],[-0.489945,-5.489997,4.881665,-3.654396,-0.772878,-7.881728,-9.426759],[9.293306,-7.451115,-8.008287,-1.167467,-6.810518,-6.166414,-9.974046],[-9.450567,-7.426753,-1.184576,1.427822,6.830710,9.835341,3.287307],[-2.855668,-0.281969,1.233404,-3.389936,-0.717556,3.803718,-2.116111],[5.121536,-5.657792,1.060960,-2.321220,4.805118,0.437410,4.934937],[8.397399,2.300238,-0.130831,2.784613,-9.062268,0.312055,0.341217],[-2.301007,3.134102,-9.075119,5.232317,-9.949540,8.149418,2.661655],[2.941657,8.198729,-9.051943,-7.544221,4.619122,-1.139481,0.263866],[-7.435920,-7.569082,-3.407874,-6.466237,-9.917471,4.360665,-9.817261],[-5.808112,3.726517,-8.238651,-1.751306,2.486044,-1.906514,2.010693],[2.727183,-1.757690,4.160318,-3.090574,-5.386432,-6.631214,-6.318551],[-8.295850,8.858759,-0.693734,-7.210789,5.820054,9.388079,5.604700],[8.952230,1.791310,-7.472708,5.805368,-2.795200,7.204640,-2.177265],[8.425871,9.680885,6.660122,7.425032,-9.074223,0.213385,-4.300339],[-2.016909,-8.793542,-0.815360,-9.241404,1.619616,-9.014866,2.084027],[2.853796,-6.815816,-2.409194,-9.392392,-8.792816,-8.323811,9.753280],[-4.086817,-6.551706,5.514930,4.828046,-1.325889,-7.392477,9.747003],[-9.468935,1.508960,-8.417018,-3.604257,0.671828,2.985436,-7.956325],[-4.822875,0.693732,-7.310512,-9.474356,-8.934031,0.981530,9.291590],[-9.243640,3.050304,-4.742289,-9.754471,-7.371598,9.601327,4.857544],[2.845789,-4.548291,2.547720,-0.837838,-6.281714,-3.131364,-6.852788],[1.067847,4.336190,-4.442283,-0.720329,0.563439,-1.233990,-8.238636],[-3.460395,-3.949755,9.881577,0.467772,-9.691416,-6.445686,-7.285885],[7.173913,3.687620,6.011051,-3.005373,4.972013,-9.215285,-3.858527],[-9.216837,-6.950581,-8.867966,-5.514264,-6.669788,6.156518,9.423069],[7.937197,-8.108381,2.178901,9.138493,-7.796284,-4.713104,8.267236],[9.278044,5.724296,-3.376915,-4.297906,-8.425746,-5.854760,-1.167276],[1.798537,-0.814797,-8.344086,5.010752,-6.116654,-0.295454,6.075384],[-4.651960,6.385943,-4.826896,2.796358,-1.364278,4.315754,-9.526080],[8.712951,1.367477,-1.490154,5.680592,-6.958445,-7.314997,-0.518449],[-0.728588,-0.339728,-9.296061,-1.003653,-2.433786,4.519460,7.251799],[-2.187162,-8.181878,-1.315130,-6.743531,7.687795,4.343337,0.247975],[-6.690816,-8.472833,9.648439,8.533078,-6.890504,-3.595642,6.847525],[-1.723988,-8.653284,-3.046029,-6.970328,4.484634,-4.706903,4.173808],[-4.144742,9.892323,-4.394298,5.591064,-9.132805,5.077665,-0.358269],[-5.998224,5.567484,-1.568650,3.768851,-2.832909,-9.745792,-9.943410],[8.265708,-8.740914,-2.055419,-0.680037,-3.632205,-5.551525,5.606045],[4.435334,1.595990,3.192759,-6.594932,6.478853,7.149615,-0.467899],[7.700502,-4.673191,-2.310493,-3.829668,-3.145958,2.564064,0.689554],[-9.843019,6.193618,-9.720127,9.056917,4.332177,-8.231867,2.890363],[-6.328247,6.176132,-0.132885,-8.507310,-9.816723,-2.878931,-7.320108],[8.699128,3.782473,-3.139004,-3.576141,-3.095434,-0.585718,8.712988],[-1.332888,-1.860109,-9.347125,-0.083364,8.895194,2.154368,4.950810],[6.953023,7.692731,5.475180,-2.723630,2.492999,4.700419,-3.753935],[6.642102,-2.375610,-8.034275,9.493349,-2.859542,6.459299,-5.397496],[3.929715,-6.383246,0.831366,-1.428625,7.381194,-2.661440,1.112260],[-6.332524,-1.314757,7.023560,3.433374,9.626227,5.273180,-7.492673],[-6.079194,7.375282,-5.749778,-9.862305,-6.929504,5.672290,4.292336],[-4.521026,3.163384,-1.680918,5.886299,-4.546656,5.088853,6.016662],[7.672702,4.235565,-4.948047,2.982573,8.478494,9.305176,-9.635598],[1.810296,-9.683825,-2.193002,-1.597819,6.106292,6.092648,-8.386875],[-0.319466,9.616622,7.466309,3.335044,5.567934,-9.804916,-4.533065],[-2.690800,-9.358676,-1.357969,-2.402351,-9.062054,2.468343,-4.936005],[7.981815,7.975650,-3.764972,6.950886,3.348638,8.717172,-4.995889],[1.314977,6.741561,2.164655,0.860211,5.794404,8.564587,-5.605822],[3.486514,7.478417,1.544733,-0.035759,9.350454,1.567241,-5.517435],[8.086498,7.044504,4.525729,1.549800,-2.967946,-5.086243,-5.740711],[-5.103411,-1.229716,0.064121,-6.193206,-5.986307,-4.048820,8.123180],[9.367669,-4.648087,-5.307656,0.787071,8.955254,-2.736029,-4.159093],[6.249954,-4.939752,2.433515,4.614633,-9.581826,-5.399805,3.508829],[-6.108851,-9.887838,-7.333339,7.990460,-8.237880,6.994407,2.929751],[-6.098272,-1.114340,-7.936149,7.526395,-1.969537,-6.189845,-1.233173],[0.474652,1.709638,-9.844320,7.119019,-1.590172,1.367209,-6.856728],[-3.799940,5.167296,8.226986,-8.668375,-4.569099,0.298823,6.348298],[-2.144342,-9.899376,0.153250,3.481946,-4.877741,-1.893196,3.896842],[7.004411,-5.139931,0.805576,-1.595220,-4.406688,-5.166106,-4.683895],[8.456948,6.611465,-0.219421,6.073365,3.642343,2.036821,-8.832960],[6.721009,-1.542657,6.227072,-8.053698,-9.042670,3.693045,-6.808824],[0.540632,6.295059,-3.006155,-7.077347,8.960069,-3.206166,7.851626],[-4.569766,9.931434,7.131026,-9.342873,1.579141,-1.044643,-8.565943],[-2.311633,0.871247,1.133455,-6.506110,-3.910526,-4.166658,-0.287252],[-1.910891,5.998577,3.793739,-2.179003,-0.589351,2.458313,-4.925321],[6.221686,2.419161,0.887588,4.944567,-0.513191,-3.608253,1.857093],[-2.942177,6.782183,5.457972,3.843929,9.213996,2.943882,-1.249367],[3.468756,-8.466613,2.516691,-9.366392,5.566374,-2.447314,3.045207],[-6.288482,1.380147,3.889117,4.961215,8.604892,4.357354,8.159988],[-7.920141,-7.063168,-5.297559,-0.813274,-0.378661,-2.746065,3.426942],[5.472067,2.958381,1.987602,-0.230398,5.513402,9.094615,-4.321056],[5.700085,7.464638,-6.337125,-6.021343,9.727879,-0.740768,2.932248],[5.584445,6.576308,-1.759897,-5.617766,-7.679078,-5.427828,-1.440190],[-6.289446,-8.288045,-2.551730,-0.337726,4.660609,4.604550,6.590518],[2.856968,-8.734143,5.245069,3.913840,-7.933883,4.033125,1.038615],[-4.466077,2.652647,-4.392471,1.799436,-2.781600,4.276578,-7.135200],[-0.467179,3.474916,-4.844326,-3.667422,9.025212,0.803377,8.859009],[-6.882872,-1.000222,-0.598415,-2.218555,-7.273982,-4.402212,6.392318],[-7.213555,-9.453983,8.494230,-0.549361,-8.175262,-5.550961,7.311878],[0.845427,-9.312575,4.738315,2.342648,4.528443,-0.482585,2.525051],[-1.350509,5.519610,-7.059525,5.701122,0.972112,9.676876,-3.279626],[1.613955,-8.434531,-5.739546,3.824063,2.920756,1.791483,-7.475166],[-8.433885,-7.034412,-4.952109,-3.661451,-9.400065,-7.511351,1.049294],[9.962878,8.889159,0.108949,8.356714,9.681411,1.789800,9.424138],[7.802135,7.018262,7.579149,-3.215479,5.677327,-5.601941,-3.830642],[2.044989,4.498501,6.818727,9.536935,-9.907887,-7.036459,8.617704],[-9.682732,-7.617130,-0.238626,-1.409677,-1.319393,4.807432,3.647742],[2.625036,2.869666,4.918652,0.693993,5.107846,-2.211133,2.468262],[2.008365,-5.584457,-4.862396,3.441043,-9.128278,-7.897706,-9.691960],[-3.799951,-6.268727,6.031952,-2.238430,-9.789275,8.982571,8.608803],[5.048749,-1.335691,8.580225,-2.823055,-7.050173,0.926694,5.384356],[8.371074,5.882643,4.475086,2.457998,0.411717,-1.224385,4.525974],[-6.369203,7.893244,5.339762,-1.751827,-6.163651,-7.175472,7.599930],[-8.337189,-6.504966,-6.927230,0.370771,2.998865,2.298679,1.263388],[-2.128531,6.101020,9.290468,-5.246874,2.838597,7.051817,3.989964],[-4.996289,5.940392,-3.478099,-1.181941,-8.010258,-5.728153,-8.070728],[-0.190728,3.706193,-0.094288,5.607328,9.018673,-9.744721,8.515044],[5.383573,-1.489321,6.551588,-0.913706,8.503708,-9.806021,-9.377846],[5.892727,-0.571909,-8.724423,-1.099444,8.552413,-5.814914,3.617197],[7.517384,1.746204,8.641711,-1.164282,5.801124,-4.874069,2.064922],[-4.956340,-2.598854,-7.299180,-9.603993,-9.280955,1.871091,-3.889169],[2.026908,-7.832247,-4.168951,1.402038,4.207972,-4.499576,-3.660278],[1.795309,-1.333679,1.393779,2.415597,7.642289,9.454620,-0.102118],[7.501989,-4.639494,-2.093513,2.548931,-7.540839,8.093038,-3.774435],[2.019043,-4.399409,-5.320048,-3.948757,7.892863,4.164980,9.555236],[6.506796,7.736043,6.652749,5.216370,8.807634,-3.112749,2.981431],[3.479083,-1.021158,-5.029800,-3.543002,7.265892,-1.619025,-2.668981],[7.164030,-0.942517,-2.992619,-1.674918,-9.269535,0.336010,-1.478419],[3.944858,6.039105,-2.401733,6.881955,2.910608,3.516299,3.817831],[8.625651,-5.032324,2.715106,1.592878,-2.209640,6.528835,8.796271],[-6.245429,0.232852,8.374486,6.855259,-6.964068,-7.452762,-3.303082],[-5.761884,-3.166692,6.985119,-6.893118,0.972603,-7.733835,2.641311],[-8.375735,4.983493,5.684027,5.044195,7.869385,-1.836316,0.133047],[9.758949,-7.593378,8.575686,-1.389886,2.780057,-3.758855,-4.263765],[1.401070,-9.967743,8.015314,-7.072897,-0.074805,3.914763,-0.951439],[6.944527,5.704242,5.061875,-9.769245,-8.072760,-0.372370,-5.855902],[-4.080164,6.354761,-0.158292,-8.540026,2.232034,-6.231522,-5.169621],[-3.644143,7.877444,-8.761256,-4.746400,8.579593,6.146536,5.336910],[0.396532,-3.282746,3.023718,6.858371,2.016560,1.844574,8.549311],[6.194662,3.357833,-3.221900,8.085281,9.787498,2.162629,1.478639],[-5.394049,-4.730600,-6.989044,-6.597295,-4.914234,0.166536,9.063829],[2.262764,4.750312,-2.567196,-4.676785,0.828211,3.924764,5.107007],[8.594596,5.767700,-2.221498,-8.924667,-5.859341,-6.250288,-1.226471],[1.427523,-2.426636,-1.070876,9.423090,-6.496228,-5.944771,0.530245],[5.089004,-9.384617,9.583394,-1.340461,0.545850,-5.920470,0.224660],[-1.791670,1.060053,2.482843,-2.931532,3.897940,-9.618229,9.988416],[4.944685,4.197206,-0.354181,-5.324999,4.112066,8.195298,6.360238],[4.960057,-5.387669,-8.802564,1.602274,7.723826,-3.626615,0.904626],[-2.078932,9.708516,4.550916,-1.841377,-1.503535,-3.243216,-3.130038],[-1.800860,3.381325,-6.563257,7.961362,5.055000,9.659471,5.848661],[8.021405,-2.605491,8.874787,-9.094583,-6.697029,-2.781040,5.517867],[2.307500,-1.195439,9.469758,9.869406,8.318225,-5.829894,3.987905],[1.236043,5.463113,1.276580,4.411104,4.229512,6.686094,-8.303768],[-3.286071,-7.202424,4.211025,5.312668,3.235081,3.792563,-0.544249],[0.392226,1.678468,-9.081345,-8.732866,-5.770154,-4.476019,5.234610],[-6.781221,-8.432671,6.454101,-5.792731,4.741631,3.083321,-9.930251],[-5.273067,-4.873646,-8.551143,-8.172946,0.369825,-4.915679,-0.827236],[1.877443,-4.014223,-3.078902,9.920004,-1.226406,-7.693198,7.071567],[-3.826447,-3.140425,-4.825143,-9.776878,-6.672039,4.148102,2.198382],[-4.775575,1.311240,2.614641,0.401032,-2.120625,5.020963,-4.209687],[-9.039938,3.430140,4.029314,0.048718,0.701230,-8.523468,6.098202],[9.946250,9.473911,-2.494827,4.333891,-7.022849,3.714648,7.912234],[0.211703,4.359136,-7.178854,-5.961199,-8.227533,5.753766,-4.023689],[-6.313994,-8.627588,-7.399884,7.561438,-4.381658,7.809710,7.501230],[8.449895,8.260201,-0.611581,-0.888638,-1.261232,-8.674756,2.583292],[-5.741397,2.188074,6.591020,-1.212169,3.879645,-1.824116,-4.554519],[-4.768442,6.585316,0.211406,4.630123,2.799417,-3.277660,-0.688187],[-8.698465,-2.560158,2.066936,4.265561,0.161710,0.646870,0.236663],[-1.960675,1.843295,9.746040,-2.076222,0.020081,-3.302036,-1.399539],[-6.817683,4.776685,-4.650034,4.541432,7.352315,-8.214335,-5.854103],[3.527556,7.862856,-8.974653,6.344652,0.676900,-5.312503,2.135789],[5.741213,1.964338,-2.858680,2.252486,-6.951897,8.644223,4.543431],[4.922769,0.379975,-8.792412,-0.091655,8.615170,-5.338415,-8.528733],[9.615571,-1.446761,1.892984,6.952426,-5.998479,-4.285838,6.679728],[6.779992,0.283461,0.267330,0.041421,0.485263,-1.053967,1.509550],[-4.934047,9.657649,0.540639,-4.820050,7.198927,5.085481,-0.891586],[-7.778029,9.706541,6.161591,-5.455184,1.342464,-0.394108,-1.245513],[0.333830,9.395151,8.875295,4.561658,-0.211297,2.562439,6.534495],[-7.494016,-6.380231,-6.657490,-3.497190,-2.802645,-2.677384,-0.769734],[-1.444226,4.924055,0.483715,9.836453,1.673713,4.908039,3.396413],[7.262930,8.732384,-0.835857,-3.357331,5.640522,-6.600798,-4.179175],[5.850170,6.889730,3.685311,9.681076,-4.885085,3.591163,-1.725187],[5.389216,6.551794,-9.759484,-9.853012,-2.854049,8.955726,4.941722],[3.326482,-4.342754,4.066918,-2.589065,-7.603204,5.513877,2.922032],[-8.146248,4.142483,8.603440,-1.720702,-0.808299,-1.340978,-9.397531],[-8.529331,-1.333634,8.025154,7.180720,-2.336037,3.394291,2.215209],[3.380429,6.616548,-4.996935,-3.925042,8.105159,-6.611528,7.063380],[-1.894864,-0.149004,-1.404502,-4.382108,-2.481286,-2.641992,1.205602],[7.692911,-8.554680,3.185947,8.554543,-2.932661,4.639073,-8.095869],[2.633605,6.020698,4.385592,0.663547,-1.287067,1.037913,5.756477],[1.160970,0.218210,1.559558,-5.251229,7.783510,6.456854,8.151402],[3.641495,-6.802550,3.105044,-2.953794,7.765938,-6.290085,5.510779],[-4.987178,8.387803,-1.552460,6.691202,-3.895172,-8.445002,2.157730],[-0.903277,4.008109,-1.588765,-7.745285,3.487267,0.661358,-9.653948],[-9.134687,7.456056,-2.010071,-0.313219,-0.231586,5.977840,7.017080],[-2.440469,1.345551,3.532341,8.940766,-9.763868,-8.120890,-2.698781],[-9.011379,3.175376,9.513743,-5.266422,-1.411365,-0.204483,-1.131008],[6.753623,5.050412,-5.333212,-6.414060,9.325875,7.358991,-5.957076],[2.771692,4.165001,0.788923,-7.546311,-7.324207,5.926486,-0.893352],[3.754324,1.246586,-5.995726,-0.112062,4.303900,6.614398,-5.739739],[-0.860394,-6.030953,-9.515012,3.768284,-3.717842,-5.002509,-3.418810],[4.602131,2.725440,1.040752,-4.597643,6.428885,-7.938472,8.437631],[-8.379383,0.588727,-0.608082,-4.369565,1.449983,8.672039,-0.187813],[-5.613090,2.383840,1.853671,-2.007567,1.425554,-8.482030,-8.840862],[0.228196,-2.621112,2.235085,-4.258312,1.350249,-8.531239,-1.795154],[2.467689,8.618745,-1.639019,0.991681,3.564853,-9.552774,-5.767175],[-5.502955,-5.376698,3.695258,0.337950,-7.218295,-2.362727,-2.259825],[-2.259364,-7.353767,0.897812,-1.400144,-6.501638,7.758336,3.310259],[-5.190336,5.058265,-7.806208,-7.644883,-5.182746,2.538322,0.644597],[2.208559,-8.110640,1.601477,9.409256,1.763713,-3.053609,1.541284],[5.729261,0.976059,0.315673,-5.805878,-4.266592,1.033180,-0.503349],[1.521248,-3.438578,-1.140495,0.462983,-9.689531,-9.590093,-3.837213],[6.781065,7.375450,-6.418975,8.602521,4.348328,-2.941937,-6.390451],[-6.005338,-0.845331,4.250475,-1.366881,1.789036,4.384049,-2.327684],[2.168005,-0.900035,1.436414,-6.386798,-7.748853,5.113157,8.962263],[-8.162635,4.420204,4.152679,-5.455455,-7.869161,-6.758218,-1.452117],[4.227333,2.438840,4.713181,-9.855649,0.600021,1.284429,-6.604268],[7.680399,-2.433182,7.730235,5.198871,9.929589,7.836731,-3.699333],[5.520360,0.772253,-0.187953,-2.380095,-6.543258,-8.664417,7.864450],[-3.300601,-7.336925,6.104520,2.667273,-9.631971,4.901913,-1.835846],[6.117132,-7.011115,-0.720585,-9.422326,3.843844,-5.552644,7.065341],[1.062311,-5.707655,-2.610770,-0.838359,1.171430,-2.272572,-0.279379],[0.323486,2.192848,8.668960,-4.742174,8.921318,-5.360924,9.987118],[4.803190,3.091008,1.592151,-2.131863,-9.889352,0.134862,-1.535518],[4.380384,-3.033462,1.498614,-9.816601,7.717002,-2.268203,1.613412],[4.517107,-8.906371,8.409386,-7.310347,4.257289,-3.035244,8.156235],[-1.894597,5.220028,-7.252032,-1.292208,5.305148,-2.822182,6.163901],[-8.465510,-9.547813,2.439793,-2.724818,-1.398299,2.732943,0.948779],[-2.033415,-9.165165,-0.262624,-8.506781,8.505114,-0.224731,0.322808],[5.874965,-8.507499,9.633712,-3.540820,2.609759,3.498146,2.608875],[9.406440,-4.411367,0.516346,-0.165456,5.752463,-4.921050,-7.965559],[0.685331,6.448124,-7.401499,-2.051602,-0.604381,3.693710,9.454839],[-3.668710,3.939310,6.444531,4.950358,-0.498449,-4.075902,-8.714658],[-0.292243,-7.080956,2.899282,8.160498,2.863203,2.320627,-3.035653],[1.352262,-6.097051,-6.280705,0.232631,6.078355,-6.275017,0.455314],[1.374928,8.411585,-3.431875,-7.655780,9.084635,1.713673,0.271677],[1.666408,5.542976,-0.305375,-9.559572,-8.773113,-7.539949,-5.913048],[5.873458,-8.513988,5.013255,8.512931,3.606205,4.012925,9.096375],[8.901794,-0.055810,-0.547479,8.607319,8.853430,8.235062,6.801767],[2.619390,-9.449512,6.708304,-6.748513,-5.224264,-2.612757,6.747033],[-5.839561,9.817043,7.746818,-8.872417,4.938760,-2.692302,4.608551],[-0.658565,-6.401888,-8.368336,4.696984,1.387348,6.567261,3.087278],[5.115186,4.488627,6.036957,5.191259,-7.657541,-9.887674,3.796025],[-3.986352,-6.896509,0.159281,7.932537,8.200518,-8.989980,-6.482230],[-7.544251,3.933951,-0.468306,2.011112,9.695839,-3.400019,1.351620],[-8.339766,-6.991981,0.759317,8.076678,7.951314,7.019321,7.770577],[3.659825,5.945163,0.509224,3.193366,4.494557,2.646775,4.098432],[3.664757,-2.613985,6.615891,-9.223390,9.505345,3.385843,-5.684972],[1.291937,-2.192053,5.561525,-2.067837,7.526967,-1.634919,2.175809],[9.345002,-2.261621,6.120110,-1.230164,6.478549,2.514554,6.048333],[3.211769,8.032910,9.771720,5.185087,6.626250,-4.564780,7.230651],[-3.278690,-9.368013,4.129768,-7.105524,-2.061725,6.185632,0.361752],[-8.241270,5.907117,7.267630,6.176399,0.625326,6.635723,-2.954064],[8.418338,7.892102,-4.777404,8.319234,-9.475810,-5.835854,4.343804],[-1.770495,4.249944,5.536242,-8.849571,1.968212,5.369671,-9.392114],[-0.409709,-4.955616,-5.714504,0.484248,-5.977645,-0.362371,-4.955567],[0.999618,-3.537930,-9.297023,-8.352572,-8.229088,-8.892250,-8.447134],[-8.885761,8.805925,-0.637656,-4.435977,9.144997,2.848321,1.297904],[-0.832641,7.436355,0.518708,5.126993,5.196350,1.073273,-6.839153],[0.630468,3.348513,6.964928,-1.732929,3.852879,-3.510758,-0.978868],[-5.737191,4.890809,5.655317,-4.987947,-7.354221,8.582540,1.467950],[3.935575,-9.665060,1.825791,5.664684,-1.502857,-9.874048,-8.886963],[-6.742528,-4.010482,-8.027642,0.842660,-3.575426,-4.217836,0.575570],[-2.893102,-8.407228,-6.474566,5.199674,1.941503,-9.178142,-5.075331],[1.013610,3.454016,-8.837601,-5.720162,8.920015,-6.376546,4.781193],[-2.891537,-3.850634,7.452470,1.086598,-0.453137,5.113732,2.790605],[6.811972,-0.242727,-8.111878,7.605889,-9.483145,-3.512639,2.790839],[8.333210,9.390778,-2.347683,8.907428,4.233897,1.266601,1.409820],[0.208887,1.108974,-4.815143,6.792873,2.281731,1.900840,-5.512061],[-9.460036,4.997503,-6.341014,3.265907,-1.211949,-6.072715,4.176705],[0.787428,2.083728,3.377038,-8.989503,-9.055787,0.027555,-4.572513],[4.307904,-6.417115,-6.266545,-8.948755,-5.128414,7.067509,-5.926062],[-9.758537,-9.713546,-1.577489,-5.314269,-6.328933,2.866125,-4.556710],[-2.745414,-0.095864,0.843298,8.061973,-5.525818,-9.442451,-8.889100],[5.341844,-1.526904,-0.373765,-2.758924,-2.940179,3.474573,8.939920],[2.054070,0.401391,-3.809818,-5.933441,-3.759573,1.692972,2.074652],[4.938372,-0.715331,-7.895599,8.626791,0.804178,7.701046,-3.298403],[-7.950965,1.067937,-6.534691,0.587975,-2.879616,-6.641237,-5.927134],[5.883798,-7.552501,9.522218,-6.838159,2.510663,-7.512862,2.588081],[-2.156835,-3.465544,2.485530,-5.548568,-6.121204,-7.587534,3.927862],[0.654225,-9.652358,9.867733,-9.063031,7.475354,-2.792680,-9.022578],[6.956123,-4.489286,1.613953,-7.356818,1.653714,-7.760245,4.518647],[-4.849333,-6.081686,-8.683493,9.597931,9.954982,-3.294571,-6.353669],[4.596686,9.947163,-6.902447,-7.413255,6.080080,-3.851246,0.266913],[-2.684183,7.349121,-5.703915,5.648813,-7.710498,-5.725622,-1.604556],[7.519025,-7.450539,4.828731,1.513103,6.107451,1.535145,9.973528],[3.567985,8.831413,2.225017,7.694397,-0.278573,-9.194647,2.728184],[-5.252541,8.999121,-0.840848,-0.710553,1.957245,0.302639,1.866774],[9.566504,-9.549711,8.175546,5.283678,-1.466717,-8.963162,5.130016],[3.638734,-4.897866,-1.704050,9.911011,7.305301,-7.274975,-6.030416],[5.578215,-3.017198,-9.521585,-5.776473,-9.234165,-7.515711,-6.290762],[0.224456,4.897791,-7.865445,-9.224033,4.427604,7.647509,9.525937],[6.186979,2.750471,8.798190,-0.019057,-1.016172,-5.687735,-0.463407],[4.426367,3.227649,-4.588430,0.468533,-4.629892,4.609201,-5.579161],[-7.748530,-5.195514,0.269443,0.664390,7.967063,-6.185087,-6.426982],[5.471160,8.522364,5.316550,5.896166,2.284225,-7.452290,9.269260],[2.810090,-7.263439,0.407347,3.112829,-8.327057,-1.362121,-1.709607],[8.734230,4.870977,8.171993,5.448510,0.845399,-7.442650,3.534098],[2.960886,-1.921601,-5.318784,-0.746790,3.453289,-4.454002,-3.490623],[-3.491607,1.613503,8.196285,-1.889047,8.297687,8.622248,-2.218963],[2.046158,-4.010825,-3.583113,7.845501,8.139078,3.473564,-8.164538],[-3.986234,-7.147364,8.098709,-3.887512,-4.332079,-7.175985,-8.530474],[-5.104278,0.637189,3.079648,-4.807874,0.440971,-7.283092,-6.153288],[2.319208,-2.246755,0.392280,-7.308033,-6.475182,-1.009058,6.964428],[6.532881,-5.592824,4.823687,5.675115,-9.426564,-2.004210,-6.580942],[-1.874819,-6.061313,0.455110,-0.004321,9.177056,7.446070,9.040242],[-7.326406,-4.316976,9.631030,-2.395058,3.398241,4.308843,7.986214],[7.546741,-6.165508,-9.628259,6.601550,0.277512,3.296825,7.507242],[2.984166,-9.052007,4.446729,6.237367,3.747084,4.318893,7.454133],[-9.382748,4.783808,-3.979692,-7.510188,-0.664979,-1.867109,7.862012],[0.658064,4.059977,8.203548,-8.938757,-8.988275,7.868720,8.946572],[-5.858427,0.107080,-8.360808,-8.806668,2.253405,0.453914,3.570482],[1.044833,1.192408,8.748706,5.928824,-3.437310,4.816759,0.292563],[7.877191,-4.822132,-8.114072,-4.350785,-5.822276,5.659400,2.449922],[1.438469,3.918891,4.608694,8.332345,8.616321,-3.764058,9.910527],[-4.883057,-1.158488,5.968918,-1.738565,7.406475,-2.140518,1.302596],[0.133140,4.584092,6.284588,6.635825,7.873329,2.000772,-9.529454],[2.146788,-3.164412,-2.886064,4.169125,0.269772,8.780254,-0.282350],[-5.745223,-8.577637,2.914633,-2.241626,-4.891930,3.981787,9.499678],[-0.860251,-5.702598,7.179490,6.310231,-4.102155,7.511886,-0.722884],[-1.002969,5.672573,4.953611,-8.929853,5.509177,6.394321,-8.871526],[1.984164,-5.907803,4.214110,2.605592,8.068920,7.256714,9.947648],[9.167579,7.697264,0.223073,-2.902982,-0.610727,3.209111,1.653227],[8.970278,9.823715,7.325094,-3.608191,6.902200,2.062569,1.900901],[-9.473878,-7.438064,-2.061997,8.427401,-5.146396,-9.315569,-7.885214],[-3.778864,4.031802,2.217036,-0.349117,-3.687495,-1.741678,2.503964],[-7.711081,-8.838012,8.624091,-7.312161,-1.348787,4.396353,1.252231],[-5.701525,7.175413,1.741421,-6.948249,-7.882588,-1.782415,-1.105742],[-0.230189,-1.270020,-2.903926,4.215093,3.314847,9.704654,4.905164],[-7.506946,7.811557,-8.048835,0.964603,9.564750,-8.715917,9.755250],[-8.262942,5.986891,8.802812,8.495532,-7.758678,1.682120,-2.178288],[-4.979129,-7.828139,-1.431580,0.691527,-6.157508,-9.332531,-2.633988],[4.164774,3.043629,8.643909,-0.017552,8.197354,-4.117628,-6.109867],[4.597460,9.451161,-5.025964,1.552915,7.003067,0.374815,2.674307],[0.869416,9.790191,9.056880,-2.404315,2.749385,8.653552,-8.711831],[6.569964,-5.517131,7.473633,-0.614146,7.634836,-7.094346,-7.021341],[-8.366857,0.040896,5.708926,9.920361,-1.008187,-1.195710,-5.310087],[-4.791360,6.411464,-7.848550,-4.682902,5.056435,7.820674,-4.753590],[9.826339,-2.373312,3.390873,1.803363,-7.703113,0.236377,-2.385595],[-9.564444,-1.941880,5.981361,-8.341550,0.332655,9.575507,7.832702],[1.404810,-7.944676,-8.221752,-7.354489,6.924768,9.967261,-2.934220],[-1.627671,-6.313850,-7.426396,2.272461,-1.873452,0.997282,-8.574642],[1.071517,5.309907,-1.905192,5.100773,-4.871673,-6.348200,-7.775860],[0.064189,-1.876941,9.170838,1.112632,3.126358,-9.830835,-0.432530],[4.785447,-9.449328,3.393084,0.332681,-2.649357,-8.185509,8.946598],[-8.144566,-0.578536,-6.022420,1.169822,7.766185,2.899503,3.242975],[7.981036,1.942024,-1.830734,5.047021,-3.980023,2.355398,0.890833],[5.155547,-4.335235,-7.956408,-1.523379,-8.500803,6.574836,-5.970301],[-3.551374,-8.458217,7.361778,7.515722,0.316935,4.372732,1.330438],[-9.813136,2.163609,8.107324,8.462290,-3.613088,0.034874,2.677217],[0.321443,5.597230,6.314690,7.464426,-3.659476,3.156437,7.976692],[9.029409,5.490563,1.349534,6.092329,3.339469,0.687961,-4.655936],[-4.806721,2.865271,8.256709,0.791623,-8.098998,-4.243947,2.723482],[-5.777359,-5.251202,-5.120305,-2.064004,-7.195580,-0.615363,-8.534414],[-1.560517,-5.582400,5.525292,-9.093388,2.857622,3.326512,-0.264344],[-1.166093,4.716886,-3.497892,-3.699113,-2.223986,-1.458900,-7.786025],[-8.958406,-2.398813,-9.424946,8.068237,-6.498743,-8.403625,6.554782],[3.768568,7.547216,-4.368397,0.616901,4.160808,8.203027,-4.379216],[-7.502121,-1.974849,9.781123,8.584552,-2.967099,5.712709,-8.682291],[-6.642855,-3.957376,6.875334,4.818338,-6.458267,-3.897732,-1.890607],[2.916853,-4.077249,7.434588,-6.267463,8.662617,-4.897102,-6.451210],[6.121980,-2.567846,0.977187,0.091926,-5.985516,-2.984593,0.188048],[-6.979383,-8.542954,-7.048772,-0.999556,4.919136,2.320522,-6.104263],[-2.621270,4.812562,-9.718325,5.332924,-1.516030,-9.040486,0.641020],[-1.742181,-4.364123,-4.080684,-4.101458,0.843122,2.993726,-8.015773],[8.648500,-2.723902,1.764558,7.248230,9.891720,0.741491,-3.137966],[0.378113,-5.360538,-6.120377,-4.597600,4.642624,-0.114251,8.167124],[-5.048337,-8.462316,8.295598,0.347156,-7.295244,-4.675993,-1.206046],[-0.485858,5.237582,-5.146073,5.803453,-4.714046,-4.516504,-8.433438],[-0.587168,-0.844542,9.879976,4.466733,3.367340,-5.531446,7.617159],[-2.680380,-7.533229,-5.126567,-8.375082,-4.329802,-6.442468,0.027557],[-7.305217,7.665509,-2.123458,6.910529,-9.594068,-8.594443,-5.423673],[7.106481,1.447557,6.998044,-7.325621,5.226349,-2.236566,-3.101470],[4.638645,2.834383,-1.034956,-8.731795,-1.817656,-9.885431,-6.285448],[1.126092,9.191418,6.791140,-5.683174,4.265222,-7.692053,3.736967],[-1.765430,0.693866,0.196499,5.004281,6.302000,-0.735525,-8.493822],[-5.378621,6.802176,9.106914,4.587875,8.737504,3.972793,-2.878503],[-9.709680,-1.172954,-8.205135,-6.135978,1.741342,9.477856,9.897514],[-4.910844,-8.165110,0.863823,-1.899504,9.564575,5.631327,0.594531],[7.022324,-2.921936,0.487389,-8.440017,5.913464,-3.903477,-4.033472],[7.521056,7.780093,7.463826,8.866119,-3.824209,4.257957,1.141046],[-9.663836,9.997736,-4.736894,8.716316,5.789102,7.021501,-6.069854],[9.682295,8.050619,5.875492,-2.810720,7.419060,9.303389,-8.338244],[0.289241,6.753478,-7.934164,2.540732,-6.183310,6.049114,-7.045657],[-0.911313,-1.517983,5.227563,6.513647,-2.511408,-7.171155,7.934626],[5.556406,-9.029969,4.524407,9.247444,5.303375,-0.969520,9.807253],[6.037727,3.584022,4.813651,3.957024,0.902518,0.956993,-4.442580],[7.486370,2.458843,1.868510,1.487501,2.102667,5.489561,0.848378],[-6.435024,8.749198,-8.021817,-7.305503,-0.193276,1.910089,-1.285591],[4.015503,-7.593756,-8.802938,-5.714354,7.460845,-2.702556,-1.550482],[7.200801,1.681211,-5.338960,3.760658,4.913454,-6.299789,8.194920],[-8.142809,-2.885592,5.027272,-5.174312,-0.804141,3.640066,7.946698],[-7.516617,6.739574,5.329441,-4.474317,0.050448,8.649634,4.438046],[-7.312565,0.535854,-0.694482,2.703509,-3.741860,6.671543,-4.452655],[-4.900238,-1.393610,4.952809,9.846222,-0.214471,-0.044959,3.855718],[7.925090,-6.736161,-9.353621,-3.061928,2.279714,-8.856924,2.595764],[9.539031,-9.178182,6.941333,-9.862313,9.403627,-8.294235,3.372763],[1.887552,-0.758749,4.353390,9.048259,-3.129349,-9.289579,0.656634],[4.294317,-5.407565,-3.672611,-8.098808,6.182996,-3.241600,-0.188753],[0.584090,5.226505,4.448833,6.131686,-9.884518,-7.744062,-7.924419],[2.930984,9.747474,-6.891136,0.988748,-4.704671,8.352806,-5.207611],[-4.784414,-4.462319,6.351470,7.365230,1.148587,0.304402,0.224068],[-7.689393,5.234077,1.464672,-2.008600,-9.982123,-4.143102,1.894184],[2.175569,3.470155,5.228972,8.016549,5.768616,9.994824,7.769619],[6.694251,-8.138505,-0.877862,4.648455,-4.642449,3.917467,7.978274],[1.135639,5.785187,-5.658478,6.619306,-2.289986,-9.665114,3.162621],[-5.422720,0.558708,6.259885,9.267588,8.853378,9.407528,-0.319472],[-6.233055,-8.355051,3.153487,-2.423670,-4.824252,2.440128,-0.532443],[-5.656716,5.426439,-8.767279,-4.009543,-5.554541,4.028973,-0.594987],[9.126532,-1.263919,-1.804670,9.942020,-4.678685,-8.403458,1.141610],[-9.337586,8.226556,0.980713,7.419919,6.694683,8.489466,-3.568083],[9.723471,7.148579,7.349719,3.356250,-7.522826,2.298110,-2.418303],[5.988904,4.805959,-5.709886,7.950492,7.128376,8.242181,-1.423444],[-4.720818,-9.124488,-1.006372,-1.397230,7.583043,3.135431,1.361905],[-7.571739,-2.805551,7.055490,3.855922,7.679248,-3.607902,-1.986948],[9.677606,-1.659261,9.346730,-4.667426,9.019501,8.073115,-0.819129],[-5.466455,-2.931246,8.142012,8.923601,-2.585239,-9.976859,2.587002],[9.056866,7.791781,-6.287380,-6.396330,-9.817951,9.253495,-0.096851],[-4.554595,-3.737909,-9.584590,5.968392,1.497853,-2.336900,-2.051975],[8.792420,6.194880,3.720391,-9.647547,0.206027,3.670911,5.596695]], dtype = "float32")#candidate|5868|(728, 7)|const|float32
bop_5869 = relay.less(var_5850.astype('bool'), const_5868.astype('bool')) # shape=(728, 7)
func_4769_call = mod.get_global_var('func_4769')
func_4771_call = mutated_mod.get_global_var('func_4771')
call_5886 = func_4769_call()
call_5887 = func_4769_call()
output = relay.Tuple([call_5847,call_5849,call_5862,bop_5869,call_5886,])
output2 = relay.Tuple([call_5848,call_5851,call_5863,bop_5869,call_5887,])
func_5893 = relay.Function([var_5850,], output)
mod['func_5893'] = func_5893
mod = relay.transform.InferType()(mod)
var_5894 = relay.var("var_5894", dtype = "float32", shape = (728, 1))#candidate|5894|(728, 1)|var|float32
output = func_5893(var_5894)
func_5895 = relay.Function([var_5894], output)
mutated_mod['func_5895'] = func_5895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3115_call = mod.get_global_var('func_3115')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_5899 = relay.TupleGetItem(func_3115_call(), 1)
call_5900 = relay.TupleGetItem(func_3116_call(), 1)
func_5706_call = mod.get_global_var('func_5706')
func_5707_call = mutated_mod.get_global_var('func_5707')
call_5914 = relay.TupleGetItem(func_5706_call(), 0)
call_5915 = relay.TupleGetItem(func_5707_call(), 0)
var_5934 = relay.var("var_5934", dtype = "float32", shape = (16, 1, 15))#candidate|5934|(16, 1, 15)|var|float32
bop_5935 = relay.maximum(call_5914.astype('float64'), relay.reshape(var_5934.astype('float64'), relay.shape_of(call_5914))) # shape=(16, 1, 15)
bop_5938 = relay.maximum(call_5915.astype('float64'), relay.reshape(var_5934.astype('float64'), relay.shape_of(call_5915))) # shape=(16, 1, 15)
output = relay.Tuple([call_5899,bop_5935,])
output2 = relay.Tuple([call_5900,bop_5938,])
func_5940 = relay.Function([var_5934,], output)
mod['func_5940'] = func_5940
mod = relay.transform.InferType()(mod)
mutated_mod['func_5940'] = func_5940
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5941 = relay.var("var_5941", dtype = "float32", shape = (16, 1, 15))#candidate|5941|(16, 1, 15)|var|float32
func_5940_call = mutated_mod.get_global_var('func_5940')
call_5942 = func_5940_call(var_5941)
output = call_5942
func_5943 = relay.Function([var_5941], output)
mutated_mod['func_5943'] = func_5943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2052_call = mod.get_global_var('func_2052')
func_2053_call = mutated_mod.get_global_var('func_2053')
call_6014 = func_2052_call()
call_6015 = func_2052_call()
output = call_6014
output2 = call_6015
func_6021 = relay.Function([], output)
mod['func_6021'] = func_6021
mod = relay.transform.InferType()(mod)
mutated_mod['func_6021'] = func_6021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6021_call = mutated_mod.get_global_var('func_6021')
call_6022 = func_6021_call()
output = call_6022
func_6023 = relay.Function([], output)
mutated_mod['func_6023'] = func_6023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3468_call = mod.get_global_var('func_3468')
func_3469_call = mutated_mod.get_global_var('func_3469')
call_6031 = func_3468_call()
call_6032 = func_3468_call()
output = relay.Tuple([call_6031,])
output2 = relay.Tuple([call_6032,])
func_6036 = relay.Function([], output)
mod['func_6036'] = func_6036
mod = relay.transform.InferType()(mod)
output = func_6036()
func_6037 = relay.Function([], output)
mutated_mod['func_6037'] = func_6037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3785_call = mod.get_global_var('func_3785')
func_3787_call = mutated_mod.get_global_var('func_3787')
call_6076 = relay.TupleGetItem(func_3785_call(), 1)
call_6077 = relay.TupleGetItem(func_3787_call(), 1)
func_4650_call = mod.get_global_var('func_4650')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_6078 = func_4650_call()
call_6079 = func_4650_call()
output = relay.Tuple([call_6076,call_6078,])
output2 = relay.Tuple([call_6077,call_6079,])
func_6091 = relay.Function([], output)
mod['func_6091'] = func_6091
mod = relay.transform.InferType()(mod)
output = func_6091()
func_6092 = relay.Function([], output)
mutated_mod['func_6092'] = func_6092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1937_call = mod.get_global_var('func_1937')
func_1939_call = mutated_mod.get_global_var('func_1939')
call_6093 = func_1937_call()
call_6094 = func_1937_call()
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_6097 = relay.TupleGetItem(func_1677_call(), 0)
call_6098 = relay.TupleGetItem(func_1678_call(), 0)
output = relay.Tuple([call_6093,call_6097,])
output2 = relay.Tuple([call_6094,call_6098,])
func_6104 = relay.Function([], output)
mod['func_6104'] = func_6104
mod = relay.transform.InferType()(mod)
output = func_6104()
func_6105 = relay.Function([], output)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6116 = relay.const([[[-0.922032,7.333816,0.784733,6.085140,5.678009,-9.293304,5.474784,-3.999860],[-6.804509,5.431299,1.256403,8.538380,-1.552011,-6.396946,-1.461840,1.615398],[-3.724421,-5.967992,2.840381,-6.122474,-8.727696,7.232794,-4.777682,-7.661814],[-9.269167,-1.474676,5.722448,6.158262,-2.609316,7.328826,8.023888,-1.787818],[3.092931,0.554754,-8.413546,5.447423,-6.570124,-3.243587,-8.013055,-3.626611],[-6.602155,3.595642,-0.030954,-6.106054,-2.343493,2.311090,-1.031771,3.985549],[-3.411651,8.761426,-0.925346,1.762022,4.138471,9.186637,-4.985967,-0.868171],[-8.961468,8.373106,-0.170552,-9.209583,8.832983,-3.857352,4.487388,1.622105],[6.910430,-0.022918,8.850683,-9.836803,3.026740,0.070063,7.170570,3.334745],[8.058969,-3.829707,-8.654534,-2.797714,-2.778752,6.236964,-7.737698,-9.905558],[6.808532,-2.662919,-7.332882,5.952914,-4.389143,-9.277564,0.318176,-6.662996],[-8.333020,-6.447094,5.026075,-2.271562,-8.722129,9.555960,-8.883831,-7.917646],[-7.065592,-6.980259,3.688850,-6.776822,-3.365645,-2.822534,-9.854168,-0.417558]],[[4.880003,5.993880,4.426767,0.901861,-1.569814,7.101146,-8.223288,-0.501223],[-9.488341,2.227427,9.660833,3.051673,-3.480760,2.987144,-2.838163,0.129977],[-9.453902,-9.249536,-2.444390,6.353779,-6.123581,8.572293,-0.559022,1.796999],[2.738877,0.220227,6.156902,-8.557554,-9.159684,-7.984630,-3.683823,-7.290664],[0.274612,-0.187420,-3.776428,-3.270280,-4.888772,0.961846,2.734460,4.117914],[-5.878275,9.920902,-0.730910,9.088544,3.842490,5.593436,-8.794820,6.384252],[7.978869,7.843783,7.061390,-9.219874,-1.269320,9.284132,0.032758,-3.248379],[7.692752,6.052311,5.204042,-3.557174,-8.897993,-2.838897,3.766799,-6.164238],[-9.071437,6.770668,6.519414,0.625911,2.947531,-2.800077,-1.073277,-3.017470],[-6.699064,3.302616,1.749917,4.101236,2.486693,-3.913497,1.452490,1.227880],[-8.253332,0.604703,1.339759,0.436892,9.196188,2.813456,-7.707430,0.743700],[3.691919,5.355102,-4.177699,-7.356416,-8.112404,2.544252,-7.006717,0.006799],[4.995879,-0.092136,-6.199331,1.284964,0.852646,6.207458,2.975421,8.692672]],[[5.845527,7.675096,4.397254,3.188301,-0.796739,7.480378,-3.437353,6.190411],[2.423315,-8.894494,-9.355239,-9.105587,-4.588544,6.809739,-6.828658,-9.633589],[3.195600,-9.031918,7.773662,9.204843,-5.375023,-0.458917,1.349946,-8.782308],[-0.892388,-6.380114,-3.286650,-7.413130,-8.055892,-7.064267,-1.523246,-7.270699],[-9.521872,-0.183665,7.623421,4.874781,-0.769609,-6.109569,-2.167463,5.663198],[4.872809,4.680376,-9.219005,-3.690847,9.332139,1.678993,5.103859,-3.827796],[-9.688026,4.747237,-2.700720,0.889978,1.996617,-5.904051,-9.217593,-5.244028],[-8.825153,-1.094144,2.180095,6.807655,5.586101,9.977015,1.136193,8.606896],[-2.429861,2.139941,0.432223,-8.229248,-8.095996,-8.033293,-0.771640,-6.251040],[-5.237919,7.330207,5.240491,2.209967,0.079924,9.325970,-7.771196,2.474501],[3.315275,0.330995,0.302023,9.358727,-8.584613,2.076926,-2.414672,8.669173],[-4.079452,0.999663,-1.159038,-0.186598,2.904881,-7.996109,-8.704549,-7.306783],[-1.633957,4.613941,9.186092,3.342267,-3.751617,-2.673899,-1.205080,-7.083100]]], dtype = "float64")#candidate|6116|(3, 13, 8)|const|float64
uop_6117 = relay.asin(const_6116.astype('float64')) # shape=(3, 13, 8)
output = relay.Tuple([uop_6117,])
output2 = relay.Tuple([uop_6117,])
func_6119 = relay.Function([], output)
mod['func_6119'] = func_6119
mod = relay.transform.InferType()(mod)
mutated_mod['func_6119'] = func_6119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6119_call = mutated_mod.get_global_var('func_6119')
call_6120 = func_6119_call()
output = call_6120
func_6121 = relay.Function([], output)
mutated_mod['func_6121'] = func_6121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3115_call = mod.get_global_var('func_3115')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_6155 = relay.TupleGetItem(func_3115_call(), 0)
call_6156 = relay.TupleGetItem(func_3116_call(), 0)
const_6157 = relay.const([[7.802984,-7.770844,-9.760782,-9.556564,5.058830,-3.543472,2.119830,-3.885234,9.201657,-7.753583,-0.138452,0.723764,8.881825,-6.525743,-1.946795,2.610312,-3.170513,8.011379,3.115318,1.336576,-3.026885,-9.001938,-7.221349,5.482179,7.068973,1.172095,0.893603,-5.442330,-1.887260,-7.370903,-3.543799,-5.673628,-3.010072,7.114854,-5.094670,-9.103801,-0.229497,-2.907639,0.795512,-4.344599,0.009468,-8.683525,-5.346855,0.713364,-8.025864,-0.116931,-6.252815,6.438761,-4.812807,-0.255283,4.149792,-7.167389,-8.402040,8.380791,-7.839465,-9.771647,7.756457,-2.213644,7.881911,-7.790010,-7.907649,-2.244943,-0.898002,2.877470,-3.410681,7.170386,-6.670639,8.974853,-0.909614,-8.877543,1.000875,8.845360,8.969378,-6.577679,2.545495,-9.211627,2.646662,-8.165555,2.349599,6.962482,-6.313697,7.845972,-1.670305,9.860538,7.210577,1.478890,-9.666980,-6.431770,-7.248754,-1.163424,3.661978,7.873475,1.295741,-0.911384,4.044929,-4.726005,-4.167579,-4.091434,-4.727758,-2.874418,3.609989,-4.552627,-3.338073,-7.333097,-2.646568,-0.621591,1.722200,-9.560175,-0.951035,1.725024,-1.467716,1.372002,-1.981170,8.760090,3.353368,-3.384439,5.285089,-4.991014,8.462492,1.296997,2.504859,-8.884401,3.695012,7.093745,7.747051,-5.719827,-0.358126,3.345094,3.037786,3.645799,-3.160060,-3.169238,5.293105,4.460161,4.375782,-3.594360,-0.668444,8.774317,3.109924,0.340645,-8.685017,5.658127,6.798508,1.036033,6.163055,5.744073,-8.712014,-2.828991,-2.481473,4.838984,-3.344399,-4.377090,-1.167699,-5.737753,-2.528413,-2.395419,3.007479,8.064280,-8.313349,-4.297035,-1.261075,0.366389,4.042223,-5.119060,7.921684,8.938246,9.523928,1.159674,9.841404,8.900439,6.851689,-1.597881,2.701962,-4.831737,-8.979786,-6.333392,-2.927491,-3.262213,4.175064,-8.340324,-6.781840,-1.842892,8.628721,2.649554,7.936029,1.754381,-6.363283,-8.843292,0.834814,-7.762497,7.714123,-1.985942,-5.545401,0.394989,9.897184,4.563032,9.755994,7.670015,1.784912,3.818766,-2.531191,6.675798,5.589141,-9.555549,-7.834109,-5.041865,2.811663,-3.502329,4.770593,7.604887,2.839497,-5.463298,-6.354984,2.905661,-0.796870,4.650868,3.711873,-2.995663,-7.380789,-4.244357,5.353167,-5.423337,6.433468,-4.429373,-8.774619,-6.619376,-1.132284,-1.139133,-1.250749,-4.314348,-3.446332,4.277580,4.374002,-2.404284,1.821942,-8.696694,-2.540647,5.765497,3.719532,-9.874707,-0.137537,0.299088,-2.574110,0.358564,-9.911092,0.556143,6.478458,-0.612776,-7.542607,-3.878485,9.423831,-5.689083,8.998783,-8.118981,-1.519187,-0.149298,1.949183,9.878954,1.263053,-7.070022,2.571325,1.410999,8.232328,0.898313,-9.032149,2.687293,-6.115690,8.763183,1.439026,6.871531,0.709057,-8.596067,5.979306,-4.915591,2.751188,-4.947972,-4.589133,9.300725,-5.711535,-0.819807,1.554841,-5.792035,7.210182,6.657856,4.567695,-1.065000,6.156400,3.001190,4.838387,7.621256,6.856651,8.901817,4.478952,2.462213,4.769676,1.536539,0.429623,-0.195261,4.894260,8.838786,-9.396073,1.462089,7.160829,7.601589,-7.390011,2.064730,-8.823250,-9.616644,4.442468,1.227315,2.855456,3.697140,2.193609,3.515295,-6.504476,6.418007,2.301711,-8.740984,-7.018386,1.899465,-8.802254,-5.442565,5.764977,6.560820,-8.688235,9.332388,1.211348,-3.653243,-0.292132,1.610205,-3.083358,-7.187934,-3.779300,-7.797732,-2.903849,4.516925,-2.869795,2.841127,-8.911988,9.306521,-7.676128,-2.035496,0.959483,-8.354419,2.166225,-3.850763,-6.482594,8.317319,4.144103,6.870549,2.439619,7.091725,-5.335544,1.172289,9.696028,9.963296,3.751187,2.668837,-9.834668,-9.343492,3.594251,-2.711754,6.131696,-0.182625,9.044273,-1.098305,1.066662,9.843816,7.919407,-8.197451,2.321122,-7.168044,-7.938857,3.397600,3.128641,-8.307941,8.300725,-1.757350,-6.105029,9.844689,6.034293,-2.535982,3.567946,-5.902613,-2.948133,9.134716,3.262619,-3.303531,1.087217,-7.423397,0.181337,-0.420949,6.284687,-9.471700,3.224013,-0.133687,9.050860,1.879067,-3.681524,2.489188,9.851286,-0.912855,-4.266648,-4.574448,-0.647727,-3.933248,9.827854,-1.795601,-8.303082,-7.158543,1.741878,-2.192975,5.733519,8.973865,0.082145,-0.643227,-9.434500,8.946501,0.819937,-0.436851,0.620943,8.880956,1.386773,0.618728,-0.901224,-0.415494,-6.029097,0.775131,-5.151311,5.307138,1.178353,-7.652061,-5.594658,5.970383,7.841262,-4.597554,-2.153786,0.403213,1.973450,3.597529,-9.210139,7.450502,-1.724155,-4.382027,-9.494400,3.454231,3.419807,5.761671,2.301217,4.476955,-3.829292,5.370239,-3.585815,4.074164,-3.219049,8.565592,-7.030115,4.191984,5.025743,0.729101,-3.300706,-8.016850,3.047492,2.597876,-0.623122,2.857354,-3.046295,2.186609,-5.330570,3.379887,-3.708667,7.661393,3.904159,5.130082,2.860631,-5.630655,0.644328,3.679037,-4.355957,-3.565906,-8.757033,-1.156863,-9.977087,4.782027,-9.667336,6.958457,6.057509,2.046218,-1.457212,-2.751463,6.765252,6.578745,5.551316,7.186190,8.283015,-0.457215,-2.762969,6.215837,-5.418734,1.314068,4.187386,0.499203,8.618356,5.155009,-5.791579,9.730118,1.360917,-9.082099,-5.030816,-9.225093,6.176903,8.709479,5.362450,6.626330,0.470583,-6.568433,4.631537,7.641883,-3.323120,-8.539450,-3.730941,3.023056,-3.594524,-6.840789,2.328614,7.978646,1.379203,-0.975238,9.166808,8.422572,-0.399769,0.151287,2.675879,5.641310,2.922686,-3.911406,5.356382,5.073648,-3.828372,-9.323830,4.262846,-4.531969,-0.691617,2.238964,-3.815845,-2.237081,1.444497,1.045429,2.495999,-9.032398,-6.785396,-5.390577,-0.894703,-6.958005,-3.421380,0.490201,-7.222303,-2.702347,-4.532602,-1.534442,-5.419969,-9.075643,-9.770625,9.352263,-0.303377,-7.601543,-8.159451,-3.779229,3.116000,4.947150,-8.301562,8.478158,2.837371,6.671042,1.454097,-7.253750,7.524089,5.506839,-4.167307,6.348470,2.718629,-5.189003,-0.910677,-4.931951,4.287839,9.628589,-8.575137,-6.214851,7.515271,-9.239415,1.496365,-9.557632,4.665661,-0.914240,-5.717016,-2.941230,0.345520,-7.726689,7.263490,4.762640,-3.707591,-7.399524,7.069064,-2.354364,8.773273,-9.724000,-0.117242,4.355712,-7.276409,4.148116,5.795664,-9.063168,-9.706504,-9.134767,-9.918530,-3.346736,2.667081,6.762368,0.422260,0.395586,-5.658979,3.685922,-0.613884,-2.437392,-8.691588,-9.758712,0.022738,1.862615,6.263722,-2.904330,5.133146,-2.616695,7.426629,-2.081303,-0.477428,7.155317,9.510902,9.596058,8.790686,-5.408503,3.553327,5.746531,-0.214657,0.957403,0.513834,5.040183,-9.009008,7.847506,6.086460,2.631611,3.093060,4.323375,2.731274,-3.625020,-4.061932,0.587148,1.526505,7.864227,6.291403,7.991858,-0.772023,8.464642,5.773270,-5.219724,-6.522274,-8.747797,7.844423,-3.313054,-9.084226,3.771336,-1.774933,-5.367575,-6.334509,1.631456,-9.082861,-0.559032,9.155735,-7.904322,-7.033026,9.694855,-9.469468,-9.474503,4.340021,-3.900432,9.201645,9.437582,-3.129162,-1.905028,7.636454,-3.252270,-0.561541,-8.591866,6.797827,-2.781895,3.063889,-0.896739,2.374719,5.427269,-9.355020,-5.026157,-1.698193,3.213823,-3.540172,5.923370,7.779361,0.695054,-9.520535,2.363333,-5.938942,2.199360,1.480238,6.650936,-2.862326,-3.093403,4.053541,-0.459615,-0.227022,-5.051515,8.166641,-2.887577],[-4.403985,5.909012,1.121019,-2.025754,-5.652154,6.447923,6.306974,1.636830,-4.574197,-9.776709,-8.200582,1.323284,-9.293425,7.402812,8.592217,-9.545214,-8.447667,-3.896479,-0.398380,2.230740,-7.541658,1.845108,-1.950183,9.329225,-5.729319,-9.623821,-1.810866,7.967581,6.869866,2.089698,-4.086745,-6.695086,8.812084,-2.300025,6.713505,-3.766291,-0.217229,-6.317461,-8.160386,0.778452,1.604788,-4.459350,3.477198,6.970910,-2.956753,5.568333,-1.153456,1.644862,-4.132964,-6.662781,-0.909986,9.853872,-8.662967,3.049861,5.630596,6.380555,-0.731807,7.202203,2.847508,-7.896567,5.091735,-6.856255,-9.943137,9.402826,1.782905,-8.298559,-3.146880,-2.683152,9.041013,-5.511266,6.878523,-0.368426,1.845739,6.057797,-0.991921,-9.797209,-6.088362,3.021606,8.540875,0.150063,-2.652978,-0.079771,-3.723139,1.396548,-7.973495,-0.789317,8.717565,6.709832,-6.085062,7.977896,-4.059303,-5.969405,-5.132064,6.150255,-4.376902,-5.681287,5.789151,-0.602883,-9.651940,3.030621,8.921094,-9.644671,-3.718441,2.431595,-8.960368,8.490695,-7.914873,5.135239,-1.646502,-5.969310,-6.187796,7.217060,3.809813,7.166382,-5.356233,-0.868121,-8.337914,-2.689973,-5.398714,-3.178922,1.869345,-7.809296,8.531484,-4.805630,-3.218501,1.181344,-6.977854,-9.034835,-4.327445,7.175735,6.847748,-9.163830,-5.692218,-5.390656,-5.680843,5.863157,8.546412,5.879871,-5.130268,-5.652291,8.734910,7.863437,-6.774166,8.211777,1.951087,2.658870,9.095718,-3.085114,0.781553,-3.878801,9.599840,4.045414,3.565081,-9.227780,-2.588793,9.191006,-0.187063,5.692657,-0.049099,0.975028,1.751456,-5.928021,-7.035574,-5.378459,-5.323198,5.920744,1.168085,-4.555081,9.645253,-7.218438,8.350814,8.315013,-1.923925,-0.412245,-2.114315,-2.669105,2.692760,-2.864895,2.517241,6.497167,5.963131,-8.632402,8.915154,-8.006433,3.127932,-3.109946,-3.892814,-7.825136,4.658415,9.050385,-0.615710,8.443835,0.666345,5.084230,1.629631,-1.347282,2.023727,3.937454,2.905572,3.456249,-7.834207,9.982782,-2.121128,0.311350,-0.232493,0.992474,-0.829652,-0.615844,-0.264135,-6.321497,-0.820727,-7.296763,5.506005,-4.198699,2.814246,8.136121,-8.013816,-5.805447,-3.320037,-4.633899,6.536100,1.421636,-4.576834,0.589368,6.357910,-3.919375,-3.690580,3.779396,-7.184359,-1.849562,-2.006109,2.758079,-1.694074,2.353856,7.169350,6.420577,2.304022,-3.560230,1.516516,-7.822046,-9.827419,-4.250482,6.192407,-8.513428,-4.732010,-8.532296,2.494275,1.539761,6.014131,-5.541466,-1.257029,5.339066,0.500670,2.894655,3.087708,6.388340,6.922531,-8.788490,-9.257213,-5.740704,4.328963,4.377140,4.856854,-3.678729,4.099579,1.109590,8.946074,9.184725,9.772696,2.677456,-7.528506,-0.716961,-6.904821,-3.287966,7.906858,9.342836,9.133343,2.171801,5.286899,-2.312794,0.771383,-5.380637,-9.426106,3.321571,3.681992,0.046701,0.220501,7.638990,-5.404314,-2.342392,-1.931731,2.429761,-8.810045,-1.370962,-7.786451,-9.751795,2.351891,-0.225707,-9.246321,8.754733,-0.750163,0.537648,-0.613126,-4.418580,7.566439,-4.800185,-8.203982,1.727429,3.525774,2.356692,-2.008526,4.765140,-9.577454,-9.682386,1.232291,-7.408589,-1.245126,3.236542,-4.293029,2.360013,6.553234,-3.740132,8.365799,-3.017486,2.016114,4.459207,-7.519089,9.652209,-8.534763,2.674010,5.527511,-1.399205,-5.623406,-3.851087,8.467847,-3.270184,-5.091395,-3.583794,-5.143024,-2.614997,-3.536761,-9.894799,-8.325992,-6.718365,7.967172,-1.511775,2.194276,-1.461917,-2.221821,1.901346,-1.994088,-0.635292,-1.090221,1.190504,-5.427511,-8.891568,1.873747,0.563406,4.407656,-7.428410,9.652306,7.644435,2.066137,-2.041149,9.939132,3.467541,3.394200,-4.952252,3.924593,4.617785,2.307294,-7.037487,-1.192655,-2.883158,2.589281,-6.583473,5.527109,-9.438444,8.340758,-8.169653,-5.891850,-4.058566,-7.430140,3.100282,-7.075029,3.212409,-1.609024,-7.974419,2.402289,-2.754485,-1.918899,4.120909,5.393072,-3.192063,4.539885,7.623514,0.346410,7.723869,-1.448552,5.094280,6.762680,-3.560067,-2.091467,-5.244795,5.542410,5.031213,5.555088,2.964530,-5.606663,0.379794,-4.745626,4.232689,7.421726,7.347783,2.989397,-6.557616,2.489142,-0.101142,-2.531725,1.818108,-7.441561,1.848035,-6.321699,-1.643785,-4.342974,-5.791567,-8.159640,-1.939877,-3.170620,6.776832,-5.777974,8.092633,-0.351936,-7.412815,-5.951126,-8.883058,-2.134397,6.210477,-9.668595,1.366009,0.072776,6.997378,5.047333,1.452868,-0.258297,3.306492,5.731546,-0.766969,-5.190868,-2.932516,1.720327,4.349415,-0.179780,-1.951089,-1.675326,2.396704,8.967292,1.085336,6.471461,-2.806550,0.281149,-7.374653,-0.876819,-5.250550,8.822337,-2.955513,9.645695,-9.550937,-1.854186,-0.942628,-4.162581,-0.372255,3.492428,-2.541930,7.803190,-7.796054,-5.830064,5.689379,0.169895,-6.334088,-1.992277,9.708201,-9.999971,4.680459,-9.097226,-7.319039,9.463524,-1.081723,-8.348137,8.750563,-6.242393,6.028658,4.878052,3.280780,-6.647241,6.650148,-5.921398,1.554993,0.697180,6.841784,-4.458489,-1.597895,8.137405,-9.230038,-1.348314,0.272968,1.710632,9.634330,2.953647,-5.298253,-4.974228,-9.569066,-4.834833,-9.072089,-1.210345,-3.651079,5.299557,-6.329726,8.285710,-1.198134,5.001839,-1.948611,-3.867546,1.299063,1.734466,-2.031990,2.758706,-0.239383,-0.675857,1.054655,6.600459,6.146129,0.766453,5.902004,0.518839,-6.395244,2.436030,0.042461,-7.724502,3.173413,-6.844619,-8.318076,-4.178877,-2.849882,7.499333,8.890504,6.363861,4.558166,-2.019298,8.285380,-3.789451,-8.380990,9.124169,-4.247671,-9.518368,2.296940,6.759700,3.216741,-5.231924,-9.055231,6.863707,-3.508841,-1.588107,5.904806,-6.602226,-8.699487,-7.228606,-1.070689,8.249130,-4.830241,-3.267223,-8.086332,4.609831,5.731809,9.803145,2.898960,0.885720,9.334200,0.742457,7.654359,-6.388387,-1.525872,-7.269579,-1.486810,1.186030,-0.094056,-8.510158,6.954645,-6.402621,8.941914,-4.060895,-4.459589,6.548798,-3.139956,5.129810,-7.502596,9.860499,-4.827915,-8.595317,3.055022,2.747661,4.411541,9.481384,0.191021,-6.306285,8.929269,6.008606,-4.881992,-5.752317,5.709468,-2.553311,9.214620,0.488341,-2.283027,-3.527125,4.198502,8.334062,6.777455,-4.781202,-0.787077,4.647879,8.699937,6.238148,4.640557,-6.668967,5.516873,5.924804,7.565189,9.584701,-9.753545,0.386126,7.477547,-4.100520,2.855312,-0.961118,4.361936,-9.064235,-5.234006,2.013280,8.282596,1.984651,-5.228426,7.753262,9.981649,1.514246,-2.122927,7.175731,6.819886,-8.339976,-0.331101,-4.047651,-6.332128,9.058754,6.116289,9.122704,-5.348199,1.934162,3.792625,-9.691201,3.198889,-5.874476,0.056115,-3.750082,5.105993,5.618721,4.591252,-1.116015,-8.578959,-8.824984,-4.970191,-5.249011,-3.516130,4.548669,-8.473211,-5.918909,-8.016634,9.289864,8.790132,-7.454141,-7.301069,-7.903883,-8.782832,-3.158057,-7.215662,-4.107063,-5.138584,-2.950915,-5.343054,-2.140232,1.769482,5.452153,6.225938,9.217824,-5.016998,0.240353,-7.745503,-2.317043,-0.744725,3.213685,3.440901,9.047750,7.030400,9.746922,-1.982172,-6.131485,-5.054895,4.327045,5.915240,-0.964683,-8.323829,-0.816671,-3.833422,8.600619,3.898842,5.760208,-0.880777,-0.436134,-1.616914,-4.593282,1.693921]], dtype = "float32")#candidate|6157|(2, 720)|const|float32
bop_6158 = relay.floor_mod(call_6155.astype('float64'), relay.reshape(const_6157.astype('float64'), relay.shape_of(call_6155))) # shape=(2, 720)
bop_6161 = relay.floor_mod(call_6156.astype('float64'), relay.reshape(const_6157.astype('float64'), relay.shape_of(call_6156))) # shape=(2, 720)
output = bop_6158
output2 = bop_6161
func_6167 = relay.Function([], output)
mod['func_6167'] = func_6167
mod = relay.transform.InferType()(mod)
mutated_mod['func_6167'] = func_6167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6167_call = mutated_mod.get_global_var('func_6167')
call_6168 = func_6167_call()
output = call_6168
func_6169 = relay.Function([], output)
mutated_mod['func_6169'] = func_6169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6188 = relay.var("var_6188", dtype = "float32", shape = (3, 14, 4))#candidate|6188|(3, 14, 4)|var|float32
var_6189 = relay.var("var_6189", dtype = "float32", shape = (3, 14, 4))#candidate|6189|(3, 14, 4)|var|float32
bop_6190 = relay.floor_mod(var_6188.astype('float32'), relay.reshape(var_6189.astype('float32'), relay.shape_of(var_6188))) # shape=(3, 14, 4)
output = relay.Tuple([bop_6190,])
output2 = relay.Tuple([bop_6190,])
func_6207 = relay.Function([var_6188,var_6189,], output)
mod['func_6207'] = func_6207
mod = relay.transform.InferType()(mod)
var_6208 = relay.var("var_6208", dtype = "float32", shape = (3, 14, 4))#candidate|6208|(3, 14, 4)|var|float32
var_6209 = relay.var("var_6209", dtype = "float32", shape = (3, 14, 4))#candidate|6209|(3, 14, 4)|var|float32
output = func_6207(var_6208,var_6209,)
func_6210 = relay.Function([var_6208,var_6209,], output)
mutated_mod['func_6210'] = func_6210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4478_call = mod.get_global_var('func_4478')
func_4479_call = mutated_mod.get_global_var('func_4479')
call_6427 = relay.TupleGetItem(func_4478_call(), 0)
call_6428 = relay.TupleGetItem(func_4479_call(), 0)
func_3785_call = mod.get_global_var('func_3785')
func_3787_call = mutated_mod.get_global_var('func_3787')
call_6438 = relay.TupleGetItem(func_3785_call(), 0)
call_6439 = relay.TupleGetItem(func_3787_call(), 0)
func_2394_call = mod.get_global_var('func_2394')
func_2396_call = mutated_mod.get_global_var('func_2396')
call_6448 = func_2394_call()
call_6449 = func_2394_call()
output = relay.Tuple([call_6427,call_6438,call_6448,])
output2 = relay.Tuple([call_6428,call_6439,call_6449,])
func_6451 = relay.Function([], output)
mod['func_6451'] = func_6451
mod = relay.transform.InferType()(mod)
mutated_mod['func_6451'] = func_6451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6451_call = mutated_mod.get_global_var('func_6451')
call_6452 = func_6451_call()
output = call_6452
func_6453 = relay.Function([], output)
mutated_mod['func_6453'] = func_6453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_6472 = relay.TupleGetItem(func_3034_call(), 0)
call_6473 = relay.TupleGetItem(func_3035_call(), 0)
uop_6480 = relay.log(call_6472.astype('float64')) # shape=(10, 16, 13)
uop_6482 = relay.log(call_6473.astype('float64')) # shape=(10, 16, 13)
uop_6487 = relay.log10(uop_6480.astype('float64')) # shape=(10, 16, 13)
uop_6489 = relay.log10(uop_6482.astype('float64')) # shape=(10, 16, 13)
output = relay.Tuple([uop_6487,])
output2 = relay.Tuple([uop_6489,])
func_6490 = relay.Function([], output)
mod['func_6490'] = func_6490
mod = relay.transform.InferType()(mod)
mutated_mod['func_6490'] = func_6490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6490_call = mutated_mod.get_global_var('func_6490')
call_6491 = func_6490_call()
output = call_6491
func_6492 = relay.Function([], output)
mutated_mod['func_6492'] = func_6492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6490_call = mod.get_global_var('func_6490')
func_6492_call = mutated_mod.get_global_var('func_6492')
call_6546 = relay.TupleGetItem(func_6490_call(), 0)
call_6547 = relay.TupleGetItem(func_6492_call(), 0)
output = relay.Tuple([call_6546,])
output2 = relay.Tuple([call_6547,])
func_6548 = relay.Function([], output)
mod['func_6548'] = func_6548
mod = relay.transform.InferType()(mod)
output = func_6548()
func_6549 = relay.Function([], output)
mutated_mod['func_6549'] = func_6549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3842_call = mod.get_global_var('func_3842')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_6708 = func_3842_call()
call_6709 = func_3842_call()
func_2394_call = mod.get_global_var('func_2394')
func_2396_call = mutated_mod.get_global_var('func_2396')
call_6724 = func_2394_call()
call_6725 = func_2394_call()
output = relay.Tuple([call_6708,call_6724,])
output2 = relay.Tuple([call_6709,call_6725,])
func_6731 = relay.Function([], output)
mod['func_6731'] = func_6731
mod = relay.transform.InferType()(mod)
mutated_mod['func_6731'] = func_6731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6731_call = mutated_mod.get_global_var('func_6731')
call_6732 = func_6731_call()
output = call_6732
func_6733 = relay.Function([], output)
mutated_mod['func_6733'] = func_6733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4000_call = mod.get_global_var('func_4000')
func_4002_call = mutated_mod.get_global_var('func_4002')
call_6741 = func_4000_call()
call_6742 = func_4000_call()
output = call_6741
output2 = call_6742
func_6789 = relay.Function([], output)
mod['func_6789'] = func_6789
mod = relay.transform.InferType()(mod)
mutated_mod['func_6789'] = func_6789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6789_call = mutated_mod.get_global_var('func_6789')
call_6790 = func_6789_call()
output = call_6790
func_6791 = relay.Function([], output)
mutated_mod['func_6791'] = func_6791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6804 = relay.var("var_6804", dtype = "float64", shape = (10, 10, 4))#candidate|6804|(10, 10, 4)|var|float64
uop_6805 = relay.tan(var_6804.astype('float64')) # shape=(10, 10, 4)
func_1937_call = mod.get_global_var('func_1937')
func_1939_call = mutated_mod.get_global_var('func_1939')
call_6809 = func_1937_call()
call_6810 = func_1937_call()
bop_6824 = relay.greater_equal(uop_6805.astype('bool'), relay.reshape(var_6804.astype('bool'), relay.shape_of(uop_6805))) # shape=(10, 10, 4)
func_3872_call = mod.get_global_var('func_3872')
func_3875_call = mutated_mod.get_global_var('func_3875')
var_6839 = relay.var("var_6839", dtype = "float32", shape = (832,))#candidate|6839|(832,)|var|float32
call_6838 = relay.TupleGetItem(func_3872_call(relay.reshape(var_6839.astype('float32'), [8, 13, 8])), 0)
call_6840 = relay.TupleGetItem(func_3875_call(relay.reshape(var_6839.astype('float32'), [8, 13, 8])), 0)
output = relay.Tuple([call_6809,bop_6824,call_6838,var_6839,])
output2 = relay.Tuple([call_6810,bop_6824,call_6840,var_6839,])
func_6848 = relay.Function([var_6804,var_6839,], output)
mod['func_6848'] = func_6848
mod = relay.transform.InferType()(mod)
mutated_mod['func_6848'] = func_6848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6848_call = mutated_mod.get_global_var('func_6848')
var_6850 = relay.var("var_6850", dtype = "float64", shape = (10, 10, 4))#candidate|6850|(10, 10, 4)|var|float64
var_6851 = relay.var("var_6851", dtype = "float32", shape = (832,))#candidate|6851|(832,)|var|float32
call_6849 = func_6848_call(var_6850,var_6851,)
output = call_6849
func_6852 = relay.Function([var_6850,var_6851,], output)
mutated_mod['func_6852'] = func_6852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1937_call = mod.get_global_var('func_1937')
func_1939_call = mutated_mod.get_global_var('func_1939')
call_6963 = func_1937_call()
call_6964 = func_1937_call()
func_3619_call = mod.get_global_var('func_3619')
func_3622_call = mutated_mod.get_global_var('func_3622')
const_7000 = relay.const([[4.879004,4.127507,-0.720109,5.493050,7.937475,-7.890934,2.846278,3.429665,-8.156884,3.203584,7.163286,-6.685839,7.959146,-1.053495,1.706225,-7.571883,5.507118,7.493771,-1.947839,-9.447673,1.877647,4.185239,5.351468,-5.579279,-6.360538,-2.683058,-2.570742,9.989793,0.764694,8.043703,9.584288,4.459286,-4.246672,-4.466530,5.920643,-1.884659,8.349711,2.850198,1.473310,3.717140,8.440428,0.506944,-3.785859,2.236669,-7.116463,-5.773572,9.909123,-6.662777,-5.013372,-0.510887,1.448372,-8.418678,-1.845470,2.235653,5.412847,4.714603,2.773750,-0.104894,4.792182,4.367559,3.997926,-2.785327,8.226347,-0.737361,2.132300,2.883383,4.341867,-9.916821,7.326351,4.159980,-0.026792,4.838593,-0.586109,5.891779,-5.938052,3.123532,-2.777184,-7.253391,2.062814,5.419347,2.546668,6.053371,-2.169654,0.247977,-5.857914,3.569922,9.499432,-3.849633,-3.477782,-5.203696,-4.124517,-8.684112,1.495791,-9.325275,6.475993,5.327532,-4.570987,-4.453851,-8.239825,-7.484501,-4.201443,3.034195,-3.307899,8.199812,1.816648,5.854437,-7.738028,-9.036163,-3.231233,-1.301941,-7.134196,4.028143,-3.105571,-4.455707,6.670257,8.619649,-9.895677,0.329730,-9.370460,5.820498,-2.584795,5.998363,0.755579,-4.286137,-3.697410,8.647102,4.965972,7.306937,-7.410951,-0.696868,-8.583673,-0.527549,0.711592,-7.487064,-4.583192,9.941802,-6.602072,0.025937,8.605093,-7.672152,-0.193741,-2.624812,-9.985008,-2.157828,2.963399,-2.025718,-8.061727,-5.847524,-0.970187,-9.071665,0.449274,-0.942779,-8.807933,3.416964,1.141319,-9.112193,9.901468,9.782342,-0.770427,7.222818,6.684021,-0.102129,-7.158863,3.766794,7.650883,6.660901,3.468019,-0.208594,-7.676990,4.537498,0.007449,5.496817,6.954151,-8.661731,-5.748901,8.897854,0.652904,-0.979045,7.304889,5.955432,7.856843,2.169745,-1.576686,-1.441928,9.519425,-9.490089,7.640799,5.901476,1.747963,6.529948,8.753777,0.079438,-6.982149,-3.990177,4.177689,-5.573717,3.773130,4.982223,2.145339,-6.216518,-5.678143,-0.667053,-5.726692,-6.577172,9.033786,-2.555288,-1.028632,-6.970363,1.865959,-8.747002,-1.179892,4.031692,-1.985634,7.196209,-6.104814,-6.853974,-8.734441,3.098761,8.806390,-9.458459,1.262619,8.208623,-4.847233,-6.803539,7.781569,-8.202626,4.857212,6.449808,1.632807,1.352410,-3.830176,-8.453408,-6.860719,8.590217,3.920667,4.469580,-0.619347,-8.950356,-3.260880,-7.138132,-0.175852,4.958769,-0.915939,0.315086,1.175548,-5.764892,3.355870,-0.319531,-9.106113,4.944452,-0.213956,-5.954702,2.599910,1.881098,0.536797,2.842698,1.462299,2.672389,2.285509,1.821496,4.793047,-6.751201,-5.399346,6.525735,6.462254,-9.878064,5.351114,-1.560811,8.258684,-0.782253,-1.223295,-5.102165,-6.080614,3.432253,9.614202,-1.675935,-1.170150,1.958966,4.689827,5.792617,2.648985,-9.490503,-3.941174,9.342486,7.855432,-7.231200,-4.791001,2.895667,-6.680191,-7.364247,9.756619,4.344574,-0.586500,-8.822307,2.773105,-6.129763,5.183769,4.768393,5.314616,9.990775]], dtype = "float32")#candidate|7000|(1, 300)|const|float32
call_6999 = relay.TupleGetItem(func_3619_call(relay.reshape(const_7000.astype('float32'), [300,])), 3)
call_7001 = relay.TupleGetItem(func_3622_call(relay.reshape(const_7000.astype('float32'), [300,])), 3)
var_7011 = relay.var("var_7011", dtype = "float32", shape = (14, 300))#candidate|7011|(14, 300)|var|float32
bop_7012 = relay.floor_divide(const_7000.astype('float32'), var_7011.astype('float32')) # shape=(14, 300)
func_3071_call = mod.get_global_var('func_3071')
func_3072_call = mutated_mod.get_global_var('func_3072')
call_7017 = relay.TupleGetItem(func_3071_call(), 0)
call_7018 = relay.TupleGetItem(func_3072_call(), 0)
output = relay.Tuple([call_6963,call_6999,bop_7012,call_7017,])
output2 = relay.Tuple([call_6964,call_7001,bop_7012,call_7018,])
func_7025 = relay.Function([var_7011,], output)
mod['func_7025'] = func_7025
mod = relay.transform.InferType()(mod)
var_7026 = relay.var("var_7026", dtype = "float32", shape = (14, 300))#candidate|7026|(14, 300)|var|float32
output = func_7025(var_7026)
func_7027 = relay.Function([var_7026], output)
mutated_mod['func_7027'] = func_7027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3954_call = mod.get_global_var('func_3954')
func_3956_call = mutated_mod.get_global_var('func_3956')
call_7122 = relay.TupleGetItem(func_3954_call(), 0)
call_7123 = relay.TupleGetItem(func_3956_call(), 0)
output = call_7122
output2 = call_7123
func_7141 = relay.Function([], output)
mod['func_7141'] = func_7141
mod = relay.transform.InferType()(mod)
output = func_7141()
func_7142 = relay.Function([], output)
mutated_mod['func_7142'] = func_7142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2449_call = mod.get_global_var('func_2449')
func_2450_call = mutated_mod.get_global_var('func_2450')
call_7191 = func_2449_call()
call_7192 = func_2449_call()
output = call_7191
output2 = call_7192
func_7208 = relay.Function([], output)
mod['func_7208'] = func_7208
mod = relay.transform.InferType()(mod)
output = func_7208()
func_7209 = relay.Function([], output)
mutated_mod['func_7209'] = func_7209
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7240 = relay.const([[[4.171813,-0.959534,-4.222344,-8.126669,8.838041,-8.452967,9.150301,-3.275978,4.886508,-5.162213,8.101381,-3.270920,-1.393506,-5.343417,-6.677465,9.312853],[1.779774,9.491834,-6.058688,-3.035254,-1.581853,-7.352770,-7.848015,4.980603,3.387979,8.852068,7.913477,6.516465,9.627694,-0.630482,4.212228,5.896522],[-5.463315,-2.134582,-6.285552,-3.140124,7.214168,-6.054691,4.382323,1.607090,-0.147408,5.792027,-1.418160,1.802698,-8.852931,-5.781446,5.837415,7.894882],[-2.277794,6.276360,-8.018523,8.590447,-6.343134,-7.861981,-9.649168,-4.730183,-0.016575,-4.281689,-0.548501,-4.740508,7.547853,-8.729839,-5.441760,-3.833396],[3.223949,3.800932,4.393039,1.540075,2.599996,6.792346,-0.828019,-0.201091,7.709908,7.939404,-1.783458,6.021381,-2.235347,-6.848639,1.076280,-2.534681],[-1.514727,-3.698515,-5.170651,8.951389,0.042730,4.718010,0.649401,4.132318,-7.496658,-0.117228,-8.627911,8.262154,-3.697418,-7.993964,-9.400396,-6.570216]],[[-1.280571,1.253338,3.950339,-9.901337,6.515218,-4.862679,1.535736,-6.301829,-7.166549,-1.514364,-5.659523,-5.440650,-4.918832,-5.084907,3.679846,0.836777],[4.961861,-9.180315,-0.716496,-3.856237,3.467169,-4.441613,-2.476827,-7.379869,9.738917,4.373199,-6.476948,-1.933632,-2.071911,-0.870169,-4.936277,-3.090689],[-6.271989,-8.994625,2.644704,-8.664177,5.360353,-6.290984,6.655383,-3.298632,8.353790,-6.150508,0.829644,-7.755494,1.178970,3.882669,2.954469,-4.567666],[3.113012,-4.547685,0.396589,4.866127,9.217043,-8.739071,-9.638665,4.870328,-3.785241,-6.464886,0.188363,-7.642402,0.601594,-4.620131,4.843337,-0.858776],[9.791065,9.013973,1.087508,8.090536,-8.707348,-0.486197,-0.201514,3.291637,3.906320,7.825866,-6.492043,-9.759768,6.928333,-1.117553,0.348324,5.958708],[1.576643,9.280338,9.121547,2.510716,-2.762081,6.202035,-1.761584,6.748276,-6.710503,-0.207504,-0.553943,-8.207744,5.316756,-4.155737,2.328431,7.406153]]], dtype = "float32")#candidate|7240|(2, 6, 16)|const|float32
uop_7241 = relay.cos(const_7240.astype('float32')) # shape=(2, 6, 16)
func_2424_call = mod.get_global_var('func_2424')
func_2426_call = mutated_mod.get_global_var('func_2426')
call_7255 = relay.TupleGetItem(func_2424_call(), 1)
call_7256 = relay.TupleGetItem(func_2426_call(), 1)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_7278 = relay.TupleGetItem(func_1191_call(), 0)
call_7279 = relay.TupleGetItem(func_1193_call(), 0)
func_4478_call = mod.get_global_var('func_4478')
func_4479_call = mutated_mod.get_global_var('func_4479')
call_7288 = relay.TupleGetItem(func_4478_call(), 0)
call_7289 = relay.TupleGetItem(func_4479_call(), 0)
func_1469_call = mod.get_global_var('func_1469')
func_1471_call = mutated_mod.get_global_var('func_1471')
call_7291 = func_1469_call()
call_7292 = func_1469_call()
func_4453_call = mod.get_global_var('func_4453')
func_4454_call = mutated_mod.get_global_var('func_4454')
call_7301 = func_4453_call()
call_7302 = func_4453_call()
uop_7308 = relay.atan(uop_7241.astype('float32')) # shape=(2, 6, 16)
func_6731_call = mod.get_global_var('func_6731')
func_6733_call = mutated_mod.get_global_var('func_6733')
call_7310 = relay.TupleGetItem(func_6731_call(), 0)
call_7311 = relay.TupleGetItem(func_6733_call(), 0)
output = relay.Tuple([call_7255,call_7278,call_7288,call_7291,call_7301,uop_7308,call_7310,])
output2 = relay.Tuple([call_7256,call_7279,call_7289,call_7292,call_7302,uop_7308,call_7311,])
func_7316 = relay.Function([], output)
mod['func_7316'] = func_7316
mod = relay.transform.InferType()(mod)
mutated_mod['func_7316'] = func_7316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7316_call = mutated_mod.get_global_var('func_7316')
call_7317 = func_7316_call()
output = call_7317
func_7318 = relay.Function([], output)
mutated_mod['func_7318'] = func_7318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6451_call = mod.get_global_var('func_6451')
func_6453_call = mutated_mod.get_global_var('func_6453')
call_7501 = relay.TupleGetItem(func_6451_call(), 0)
call_7502 = relay.TupleGetItem(func_6453_call(), 0)
output = relay.Tuple([call_7501,])
output2 = relay.Tuple([call_7502,])
func_7509 = relay.Function([], output)
mod['func_7509'] = func_7509
mod = relay.transform.InferType()(mod)
output = func_7509()
func_7510 = relay.Function([], output)
mutated_mod['func_7510'] = func_7510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5141_call = mod.get_global_var('func_5141')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_7584 = func_5141_call()
call_7585 = func_5141_call()
func_1469_call = mod.get_global_var('func_1469')
func_1471_call = mutated_mod.get_global_var('func_1471')
call_7590 = func_1469_call()
call_7591 = func_1469_call()
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_7594 = relay.TupleGetItem(func_3515_call(), 0)
call_7595 = relay.TupleGetItem(func_3516_call(), 0)
output = relay.Tuple([call_7584,call_7590,call_7594,])
output2 = relay.Tuple([call_7585,call_7591,call_7595,])
func_7596 = relay.Function([], output)
mod['func_7596'] = func_7596
mod = relay.transform.InferType()(mod)
mutated_mod['func_7596'] = func_7596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7596_call = mutated_mod.get_global_var('func_7596')
call_7597 = func_7596_call()
output = call_7597
func_7598 = relay.Function([], output)
mutated_mod['func_7598'] = func_7598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2394_call = mod.get_global_var('func_2394')
func_2396_call = mutated_mod.get_global_var('func_2396')
call_7613 = func_2394_call()
call_7614 = func_2394_call()
func_2727_call = mod.get_global_var('func_2727')
func_2728_call = mutated_mod.get_global_var('func_2728')
call_7663 = relay.TupleGetItem(func_2727_call(), 3)
call_7664 = relay.TupleGetItem(func_2728_call(), 3)
func_6548_call = mod.get_global_var('func_6548')
func_6549_call = mutated_mod.get_global_var('func_6549')
call_7676 = relay.TupleGetItem(func_6548_call(), 0)
call_7677 = relay.TupleGetItem(func_6549_call(), 0)
func_4000_call = mod.get_global_var('func_4000')
func_4002_call = mutated_mod.get_global_var('func_4002')
call_7688 = func_4000_call()
call_7689 = func_4000_call()
func_1100_call = mod.get_global_var('func_1100')
func_1103_call = mutated_mod.get_global_var('func_1103')
var_7703 = relay.var("var_7703", dtype = "float32", shape = (300,))#candidate|7703|(300,)|var|float32
call_7702 = relay.TupleGetItem(func_1100_call(relay.reshape(var_7703.astype('float32'), [5, 4, 15]), relay.reshape(var_7703.astype('float32'), [5, 4, 15]), ), 0)
call_7704 = relay.TupleGetItem(func_1103_call(relay.reshape(var_7703.astype('float32'), [5, 4, 15]), relay.reshape(var_7703.astype('float32'), [5, 4, 15]), ), 0)
output = relay.Tuple([call_7613,call_7663,call_7676,call_7688,call_7702,var_7703,])
output2 = relay.Tuple([call_7614,call_7664,call_7677,call_7689,call_7704,var_7703,])
func_7706 = relay.Function([var_7703,], output)
mod['func_7706'] = func_7706
mod = relay.transform.InferType()(mod)
mutated_mod['func_7706'] = func_7706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7707 = relay.var("var_7707", dtype = "float32", shape = (300,))#candidate|7707|(300,)|var|float32
func_7706_call = mutated_mod.get_global_var('func_7706')
call_7708 = func_7706_call(var_7707)
output = call_7708
func_7709 = relay.Function([var_7707], output)
mutated_mod['func_7709'] = func_7709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3468_call = mod.get_global_var('func_3468')
func_3469_call = mutated_mod.get_global_var('func_3469')
call_7732 = func_3468_call()
call_7733 = func_3468_call()
func_1408_call = mod.get_global_var('func_1408')
func_1410_call = mutated_mod.get_global_var('func_1410')
call_7745 = func_1408_call()
call_7746 = func_1408_call()
output = relay.Tuple([call_7732,call_7745,])
output2 = relay.Tuple([call_7733,call_7746,])
func_7757 = relay.Function([], output)
mod['func_7757'] = func_7757
mod = relay.transform.InferType()(mod)
mutated_mod['func_7757'] = func_7757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7757_call = mutated_mod.get_global_var('func_7757')
call_7758 = func_7757_call()
output = call_7758
func_7759 = relay.Function([], output)
mutated_mod['func_7759'] = func_7759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3050_call = mod.get_global_var('func_3050')
func_3052_call = mutated_mod.get_global_var('func_3052')
call_7776 = relay.TupleGetItem(func_3050_call(), 0)
call_7777 = relay.TupleGetItem(func_3052_call(), 0)
func_3050_call = mod.get_global_var('func_3050')
func_3052_call = mutated_mod.get_global_var('func_3052')
call_7779 = relay.TupleGetItem(func_3050_call(), 0)
call_7780 = relay.TupleGetItem(func_3052_call(), 0)
output = relay.Tuple([call_7776,call_7779,])
output2 = relay.Tuple([call_7777,call_7780,])
func_7792 = relay.Function([], output)
mod['func_7792'] = func_7792
mod = relay.transform.InferType()(mod)
output = func_7792()
func_7793 = relay.Function([], output)
mutated_mod['func_7793'] = func_7793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5141_call = mod.get_global_var('func_5141')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_7825 = func_5141_call()
call_7826 = func_5141_call()
func_7757_call = mod.get_global_var('func_7757')
func_7759_call = mutated_mod.get_global_var('func_7759')
call_7854 = relay.TupleGetItem(func_7757_call(), 0)
call_7855 = relay.TupleGetItem(func_7759_call(), 0)
output = relay.Tuple([call_7825,call_7854,])
output2 = relay.Tuple([call_7826,call_7855,])
func_7869 = relay.Function([], output)
mod['func_7869'] = func_7869
mod = relay.transform.InferType()(mod)
output = func_7869()
func_7870 = relay.Function([], output)
mutated_mod['func_7870'] = func_7870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2776_call = mod.get_global_var('func_2776')
func_2778_call = mutated_mod.get_global_var('func_2778')
call_7942 = func_2776_call()
call_7943 = func_2776_call()
output = call_7942
output2 = call_7943
func_7953 = relay.Function([], output)
mod['func_7953'] = func_7953
mod = relay.transform.InferType()(mod)
mutated_mod['func_7953'] = func_7953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7953_call = mutated_mod.get_global_var('func_7953')
call_7954 = func_7953_call()
output = call_7954
func_7955 = relay.Function([], output)
mutated_mod['func_7955'] = func_7955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4769_call = mod.get_global_var('func_4769')
func_4771_call = mutated_mod.get_global_var('func_4771')
call_7970 = func_4769_call()
call_7971 = func_4769_call()
output = call_7970
output2 = call_7971
func_7978 = relay.Function([], output)
mod['func_7978'] = func_7978
mod = relay.transform.InferType()(mod)
output = func_7978()
func_7979 = relay.Function([], output)
mutated_mod['func_7979'] = func_7979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6789_call = mod.get_global_var('func_6789')
func_6791_call = mutated_mod.get_global_var('func_6791')
call_8026 = func_6789_call()
call_8027 = func_6789_call()
func_1816_call = mod.get_global_var('func_1816')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_8037 = relay.TupleGetItem(func_1816_call(), 2)
call_8038 = relay.TupleGetItem(func_1818_call(), 2)
output = relay.Tuple([call_8026,call_8037,])
output2 = relay.Tuple([call_8027,call_8038,])
func_8044 = relay.Function([], output)
mod['func_8044'] = func_8044
mod = relay.transform.InferType()(mod)
mutated_mod['func_8044'] = func_8044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8044_call = mutated_mod.get_global_var('func_8044')
call_8045 = func_8044_call()
output = call_8045
func_8046 = relay.Function([], output)
mutated_mod['func_8046'] = func_8046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2370_call = mod.get_global_var('func_2370')
func_2372_call = mutated_mod.get_global_var('func_2372')
call_8058 = relay.TupleGetItem(func_2370_call(), 2)
call_8059 = relay.TupleGetItem(func_2372_call(), 2)
func_5088_call = mod.get_global_var('func_5088')
func_5090_call = mutated_mod.get_global_var('func_5090')
call_8066 = relay.TupleGetItem(func_5088_call(), 0)
call_8067 = relay.TupleGetItem(func_5090_call(), 0)
output = relay.Tuple([call_8058,call_8066,])
output2 = relay.Tuple([call_8059,call_8067,])
func_8068 = relay.Function([], output)
mod['func_8068'] = func_8068
mod = relay.transform.InferType()(mod)
output = func_8068()
func_8069 = relay.Function([], output)
mutated_mod['func_8069'] = func_8069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7869_call = mod.get_global_var('func_7869')
func_7870_call = mutated_mod.get_global_var('func_7870')
call_8091 = relay.TupleGetItem(func_7869_call(), 1)
call_8092 = relay.TupleGetItem(func_7870_call(), 1)
output = relay.Tuple([call_8091,])
output2 = relay.Tuple([call_8092,])
func_8126 = relay.Function([], output)
mod['func_8126'] = func_8126
mod = relay.transform.InferType()(mod)
mutated_mod['func_8126'] = func_8126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8126_call = mutated_mod.get_global_var('func_8126')
call_8127 = func_8126_call()
output = call_8127
func_8128 = relay.Function([], output)
mutated_mod['func_8128'] = func_8128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4769_call = mod.get_global_var('func_4769')
func_4771_call = mutated_mod.get_global_var('func_4771')
call_8142 = func_4769_call()
call_8143 = func_4769_call()
func_1874_call = mod.get_global_var('func_1874')
func_1876_call = mutated_mod.get_global_var('func_1876')
const_8163 = relay.const([1.101188,-8.620617,3.024188,9.063647,8.479460,9.779588,6.263393,-3.462329,-2.284151,-5.081956,-0.226562,4.605896,-1.432136,0.170311,-7.506514,-1.342619,-5.069785,9.149890,-4.977533,9.046820,-3.410115,6.955566,7.866004,5.125681,-3.502013,3.232756,-9.931925,8.636192,-0.102141,-1.462721,4.781869,-5.039520,1.024232,2.707908,5.611586,7.327315,9.025688,0.440608,-5.078576,-5.230922,-5.618111,4.241042,-9.535913,-5.007604,-0.639099,-2.258287,6.678185,6.551421,-5.590403,0.853770,-9.914513,0.486289,9.866546,-0.109507,8.096163,3.208313,-4.848980,-2.535711,2.536343,2.568052,4.390595,2.022436,-3.513454,2.870295,8.659844,-1.007476,4.284595,6.232301,2.789352,6.651151,-3.601211,-2.120639,8.166612,1.169891,6.137911,-0.101714,-0.121156,-9.659123,4.825670,-6.494328,-2.808315,-0.283918,-8.242959,-9.937349,7.185659,7.390700,-7.985080,-0.215869,-7.724100,-3.823449,-5.286206,8.783806,-5.486944,0.483257,4.782719,-0.348277,8.414830,-0.556681,-8.134364,7.183671,-7.354677,1.453567,-5.108633,-3.092619,-5.459021,4.315060,-5.063649,5.112932,-0.430831,-6.612235,-3.677128,7.503582,6.881068,-3.790873,-7.728791,0.203320,-5.800872,-3.522551,-9.736140,4.100268,9.711711,1.476921,5.616562,5.698715,1.990029,-5.367075,-6.647517,3.513538,6.823440,-2.976077,8.443921,-0.040867,-9.419715,1.122482,5.958087,0.189214,6.299874,-5.575731,-7.200980,-8.594474,0.951106,1.532520,-6.674786,5.051107,-5.174850,8.517546,3.686512,5.101995,-6.320291,-5.714593,-1.880007,8.426487,-9.500299,-8.886340,1.977697,5.814367,3.348393,-7.683991,1.988984,7.599409,0.989619,-8.038005,-3.642023,1.090324,-3.315641,2.320709,0.397729,-1.831048,-1.603257,-8.747044,0.496152,0.408130,1.521232,-7.299933,8.366597,-2.147288,-5.423564,-9.424236,7.892395,-7.122836,3.309704,-1.725910,-7.238515,6.084161,2.603495,-1.166276,1.490079,-5.827733,5.670414,5.154387,-6.387573,-3.720512,-0.330025,-1.373033,-4.606994,8.751770,-7.758058,-9.351209,-9.126485,1.511564,-7.361334,-3.698555,2.176889,-8.618310,2.157662,-7.938301,5.732581,4.627598,5.201918,8.421466,-6.070039,6.343113,-5.775958,4.284933,5.806376,0.939016,-5.329770,3.151576,-3.793991,-4.386673,-9.889062,4.085512,1.927681,0.641661,-7.443915,-3.699315,-4.609285,5.403710,-1.680276,6.088018,-2.573512,8.884320,0.871054,-6.186565,-4.757390,2.249907,5.926739,-0.758626,3.778191,4.622432,3.118016,-2.005148,-3.058147,-0.125419,-0.709433,-5.335367,-4.363154,0.770149,9.504986,4.902657,6.247117,-1.426853,-3.432517,4.047949,-5.362153,6.539723,6.715336,8.517868,-7.648733,-7.351521,-4.152771,6.982157,-7.081061,-1.006104,-6.187901,2.074178,-5.786707,4.616566,-0.231471,8.887859,4.005982,-5.460908,-2.750971,-5.427520,-1.570478,-4.467935,-1.331799,0.482183,-9.935688,-7.370125,-3.053002,-5.476559,5.611406,1.628829,3.259675,-5.979088,1.447782,8.171266,3.645323,-8.212407,-0.093132,-7.987707,-9.696751,9.511577,1.493823,-3.122698,5.610425,-7.927352,-8.762582,-1.372932,-9.660906,-0.966823,-2.252146,-7.132685,-0.126858,6.426769,0.708856,6.361359,4.321921,-2.543628,-3.504941,-9.818852,-5.493601,-8.946007,-9.728425,-9.552194,7.242110,6.188583,-6.168657,1.475700,-1.986926,3.685451,-2.577909,-4.494865,0.745766,-2.136159,7.393740,0.036215,-1.304838,-9.144760,-4.539183,8.308025,1.139133,9.031948,-0.492304,-0.811993,4.260981,-3.548728,-6.723081,-5.867551,-8.237470,1.539986,0.491119,9.890370,-1.478487,0.178735,-3.830429,5.923300,6.843131,0.809947,1.173992,-9.684912,4.003181,9.571510,8.621208,8.852348,-0.580125,5.191468,5.633002,6.887753,-2.447705,-3.553384,-5.564671,7.728114,0.030141,8.320870,-9.769774,3.467777,6.645060,-4.277203,-8.411980,-8.376528,-1.135943,5.210512,-5.927092,-1.266598,0.218842,9.921270,-7.882286,4.582855,7.380325,-9.455247,-7.541533,8.308405,-6.542434,1.143777,4.988697,-0.469250,6.207480,4.785544,-4.468823,7.710105,-9.009017,1.361779,7.974554,-1.016512,-3.310904,-6.038256,3.743694,-2.299097,3.885643,-1.606523,8.688988,9.406047,-4.398738,-3.733486,-1.187615,-1.530681,-0.726375,2.514878,-2.261071,-3.544898,-9.755983,-2.699068,-7.413039,-8.714560,-3.471363,-7.568799,5.401177,-6.143959,-1.436507,-6.720093,-0.625713,3.882018,4.874939,-8.544393,4.138260,-4.903381,-0.920678,5.814669,5.673651,-3.007806,-7.787415,1.247249,-7.596682,-4.887821,-4.425847,7.230053,0.783898,8.635687,9.241627,7.066056,-9.045097,2.168616,-0.544701,8.246676,-0.764166,0.356656,-7.608128,-2.871807,-9.761128,7.032069,2.739861,-3.381588,5.172430,3.172776,9.016010,6.575620,-3.322243,-7.491777,7.179344,-1.659250,-1.298969,5.612079,-4.468884,5.200786,-2.256679,0.776223,-6.325236,-0.753723,3.510079,-8.089174,-5.683720,-8.011661,-9.716247,8.202558,-9.908631,2.041235,8.792171,2.211002,-1.798592,8.038100,4.129699,4.674796,-0.156099,-3.362127,0.236204,-0.514287,-7.968323,8.307243,-5.440828,2.259989,-3.690544,4.860369,0.436072,-0.832756,8.733214,-0.441903,-5.887047,-3.825593,3.936039,3.783718,-9.791785,0.181108,-3.701978,7.630826,4.341063,-4.650448,-3.104387,-1.134250,-3.821686,8.056750,-9.895381,5.318995,6.527257,7.880178,-4.659293,-6.318143,-6.063288,0.475408,-0.979408,1.940684,7.882082,8.094709,3.782297,3.668915,-0.516468,-9.276612,-6.291967,-3.916858,1.833945,9.683462,-5.504948,-3.307102,5.958819,9.000766,9.567563,4.701816,-3.338100,-5.201759,-7.456601,-0.871919,-6.347571,7.335804,-0.223506,9.624691,4.649254,3.945922,-9.946789,6.095098,7.685888,1.832416,0.209025,-1.224021,3.901827,-0.540985,-6.021134,8.673978,9.290755,-8.487063,-2.081727,4.097408,-2.035340,8.722818,4.118351,-6.894730,6.974276,3.057112,-9.393828,2.794305,-2.517801,-0.879699,-3.286686,5.400103,-3.128820,9.709270,8.916779,1.722907,4.813287,-0.936132,7.097863,3.050582,-6.914600,5.156233,-6.841833,8.869896,-5.318144,-3.841314,4.316612,-0.986946,4.661445,-6.518078,8.453815,-6.821075,-5.331572,3.667710,1.575570,-0.753170,5.507463,-9.953067,-1.643827,-2.564539,5.510387,6.626449,-0.387518,0.355463,4.385105,4.769711,2.330660,6.896323,-4.789707,2.992420,-6.767272,-5.353193,6.951246,1.407531,-5.816157,3.901847,-4.375411,-7.903964,-9.990113,-7.716018,3.600127,-0.658983,5.948594,-3.150045,-2.858118,7.400063,1.999979,-4.858696,7.710672,0.030112,5.912665,6.253407,9.729279,0.518562,8.052203,-2.220686,0.551057,8.441919,-3.482570,-4.288003,5.978302,4.625907,1.624329,-8.449521,-0.043301,-6.137404,-9.071386,4.911377,9.557421,8.087450,1.459244,6.653395,6.204121,2.575908,-0.515255,-7.225837,-4.200103,4.854081,-4.022380,-2.694402,0.982312,-9.412717,-7.318040,4.955180,-9.180724,5.268070,-2.210798,-8.561780,1.028144,-5.492426,-9.877908,-7.437561,-6.499604,-0.586240,7.618433,6.185648,-6.772710,-2.337030,-4.845235,-5.085934,-6.967027,-8.766347,2.936201,-8.075985,-3.046841,-0.854437,-4.026559,4.854038,-4.877885,1.293214,-6.464333,-2.685574,-2.887977,-5.289243,0.031865,-3.081764,-7.877152,-1.898695,4.216089,-8.826628,4.965116,-2.960958,9.899183,5.884335,-3.578043,4.068482,9.786977,6.353772,-3.660854,-7.344915,-0.937777,-1.391837,4.588757,-3.309007,2.623108,9.554056,-9.415074,-3.342243,9.927904,5.878580,-5.501808,0.700595,7.783021,-9.737637,-0.276029,3.537743,7.885354,2.034969,-0.796258,5.331714,-0.641011,8.522976,1.527147,0.949550,9.987146,-9.825239,1.367615,0.287222,-5.508242,1.817046,3.555902,2.036128,-7.461940,2.363824,0.375363,-0.307694,1.664341,-4.538012,-2.987934,-6.808845,-2.245399,9.461740,-5.178789,-6.434413,-2.687972,4.042135,-8.512961,-4.937659,0.891932,-4.471693,8.975139,-2.194954,-2.848806,1.868231,-3.979260,-7.902635,-5.940883,2.686914,-2.379060,1.146077,8.648660,-3.965891,5.856752,-4.213997,9.129246,1.322504,3.643226,3.740653,-9.366805,-0.265301,-6.607542,-8.900284,2.191332,9.654333,6.971948,-3.250576,1.123633,6.930563,-3.000469,9.757939,-5.359343,-5.836734,3.840978,6.550137,-4.207748,-6.254701,-3.587630,9.819806,-6.808476,6.318787,0.455313,-4.454565,3.883653,0.144525,6.018490,7.023043,-4.793608,-3.648437,2.141462,1.819143,3.884746,8.827205,-9.271325,0.562448,2.740689,3.666941,3.754552,-2.317331,6.198309,-7.831652,-1.545497,-6.054146,0.916560,-3.273348,-2.349052,-1.710640,-1.818471,5.559707,-7.276018,3.060384,5.664094,-1.098684,1.626825,8.797567,-1.270169,1.310456,6.430914,7.663943,-4.322809,-5.343016,-5.781237,3.915794,-9.734057,8.349331,9.625170,-7.926039,3.796613,5.415147,5.203288,3.646630,-0.607151,4.412643,-9.428159,-9.876291,-1.756623,0.985952,3.209747,1.286330,5.797168,-6.605505,-0.523174,-9.492448,2.529019,-7.375020,-0.320154,2.192791,-2.840670,1.035283,6.930619,-5.414528,-1.550404,-1.460658,-1.636305,9.380634,6.467454,-1.103949,-8.471873,3.696643,2.481141,0.164817,-3.744046,-7.649935,4.800422,7.244673,-2.755979,-4.525115,-5.887826,-2.627845,7.158805,-7.734326,-1.782045,-7.979354,8.702722,-0.103289,8.195301,9.923794,-5.107333,-6.607512,9.304395,3.758887,2.668285,-5.614559,-9.902823,-6.625340,-0.385080,-4.301396,-3.623873,2.768765,3.870255,-9.380169,3.858738,-5.886913,9.747166,9.712754,-1.463161,-1.947836,2.691903,6.414960,-7.816032,9.404173,4.696597,3.794299,-2.919973,8.604520,-7.770414,-6.791706,3.240423,-0.616466,0.740600,2.566120,-0.911479,-6.457997,-9.869607,7.284653,1.746385,6.301733,7.551377,-3.582055,-3.260588,9.442594,0.173114,-8.603286,-7.284235,-6.370046,4.943313,1.951901,5.535053,0.833871,-1.095925,-9.565932,6.953938,-0.865663,-3.604866,-7.997875,-6.073851,-0.329777,7.479047,9.141469,4.136016,1.130885,3.246829,-5.837228,-8.781305,4.239723,-3.697564,1.878002,9.306924,-5.423542,-7.385698,-9.031047,-1.740441,9.046292,-0.473868,4.583473,-8.983869,-9.924895,-7.872399,-3.341336,-0.978343,3.187019,-6.512576,-9.195968,-4.954821,3.987133,3.080487,0.470686,-6.029430,4.049711,4.674021,-3.055477,3.212493,-9.689933,4.739279,5.619882,-8.254434,9.645159,0.105591,-0.361793,-0.765169,-4.949573,-1.189688,-8.191892,-1.481483,3.116781,-6.485055,8.099820,-8.994920,1.626509,5.777136,7.108694,1.782857,-9.890095,-2.723011,-7.708364,-7.846016,-8.269898,4.140358,-2.392515,-3.661468,2.873147,9.798076,-3.892322,-7.748693,-1.229732,-0.999772,2.870123,-0.485171,-6.393404,5.584271,9.607164,-3.202473,-3.142077,-5.807027,1.995984,-4.516342,-6.753186,-2.171872,0.139346,-7.853520,-7.620758,6.667521,1.434828,2.443414,-5.417923,-5.262313,-6.885773,4.329290,-3.763482,2.356059,-3.341296,2.700148,-7.185434,0.552936,-2.107877,4.817332,9.250950,5.455921,-1.715136,-9.326198,5.096064,-1.283024,2.442214,-8.403755,-8.304983,-8.639285,2.777160,7.660919,6.983900,8.315667,-9.722727,-5.635198,5.112999,-7.332770,-2.089333,-9.877431,-2.840773,7.745656,-8.219265,4.029430,-9.241020,6.474687,1.254175,1.695916,2.653469,0.667561,2.373796,0.857900,5.847200,-2.828036,9.387231,5.601478,8.061682,8.345916,-7.274416,-2.934754,-6.469293,-8.634820,-3.522473,-2.336150,-1.022746,-9.768193,2.405392,-6.512243,0.765528,-7.775488,4.110607,-7.308009,3.264143,-9.600789,2.972820,-2.319515,-6.525377,0.932720,-0.702652,-5.036643,8.630795,-3.373235,6.348281,0.675174,5.594579,5.814424,4.583180,9.831483,1.849432,-8.944841,6.040155,0.163750,8.866038,-5.694292,-2.627071,-4.607607,3.278768,5.389436,7.188801,-3.053508,-1.410242,7.389562,0.759834,-9.298041,-2.351974,6.922361,6.422353,6.232446,-9.373452,-5.649667,7.959384,-5.702860,1.202136,9.645777,7.858800,5.818317,2.025182,7.691027,-1.391266,2.209756,9.074316,-6.734872,5.472970,2.742629,1.488067,7.158498,8.073587,-7.548644,0.604202,6.312417,5.222937,-0.748837,-0.368241,2.375163,-1.560112,0.776431,-7.568246,-6.471163,-0.221997,1.338168,-0.537633,-6.203633,-7.268352,-4.982868,-7.102817,-7.513772,6.914835,-7.267931,1.285242,-0.991734,-1.993325,6.879376,4.677923,7.169210,0.031602,8.206617,6.384298,6.590878,-3.548697,1.445172,-4.030681,-6.803711,-5.206406,6.187524,3.333053,9.173444,8.215638,-5.754541,6.480363,-4.087845,-4.083387,-9.440479,0.914391,4.277048,5.161578,-7.304325,3.495496,3.111639,7.689902,6.602668,-1.272990,8.870228,2.871782,-3.000870,0.615579,3.813171,3.640303,7.698561,-1.164935,-5.132166,3.104416,9.996506,-7.383229,-6.360236,9.280808,-0.915654,0.437878,1.536871,2.628915,9.900952,1.925522,-8.018208,-0.150194,4.516247,-6.435836,-3.732524,8.254191,-5.299468,9.396762,9.525314,-6.700723,-3.371111,6.683140,-3.112058,-4.424709,5.576967,0.914300,-7.171742,0.356478,-7.897891,3.584431,5.673946,-8.296171,-8.399668,2.597291,-4.542351,1.103389,5.184887,-0.073675,9.506908,8.950503,-1.594270,-3.796481,-1.504907,0.567378,-0.177524,2.543670,4.799885,8.743276,9.148966,5.559344,9.300970,2.173867,-5.798165,-1.105497,-2.994739,-4.507821,-3.380374,4.294405,9.562748,7.080284,4.706724,9.968260,-6.567801,3.909509,3.445113,5.540490,3.781968,2.159016,7.642707,-6.372035,9.282939,-7.748748,3.426078,-4.843890,-8.064383,-2.333513,3.211308,-5.337318,2.733317,6.667620,4.251969,7.506504,2.585476,-2.856797,-1.478029,-8.809354,9.128586,-4.717882,-3.032372,4.096973,-7.637155,3.468342,-6.244283,-7.348222,4.981860,-9.633163,-8.360925,1.740987,2.499467,-0.537989,-9.827789,6.088144,-2.643406,7.976614,6.321095,9.049446,-2.019035,6.474280,4.630612,-0.497011,6.966589,4.282447,-3.419780,-0.194173,-8.869201,-1.501329,0.352674,-2.525108,7.250810,0.282068,9.109229,-9.727206,5.506484,-0.517718,5.735385,6.366666,1.319546,6.681612,8.839031,0.022766,-2.918420,8.907487,-6.806219,0.022278,7.882787,-7.289064,-4.633437,-2.666160,-6.286193,-4.830853,-5.010365,-2.870705,-1.965778,9.191897,6.685145,1.236400,-3.043857,-7.536483,-4.896015,-6.933019,-6.109837,-2.761515,-0.312815,-2.099421,8.536327,-4.422887,-4.088204,-4.183487,-9.244968,-9.191718,-0.699388,-2.707991,-4.239670,1.507476,-0.155523,-8.960934,-2.378232,4.133554,-8.802380,5.892959,-9.550780,4.593971,7.650790,5.711512,9.323056,2.392209,3.917485,0.813591,-8.136921,4.000247,-0.398265,9.678752,-1.305199,8.141061,-1.434239,9.037672,1.143710,2.484250,-5.367226,-9.260442,4.124735,5.891357,4.610102,-3.069503,-2.273451,0.774506,-1.217067,9.643785,9.556088,5.843036,-6.004636,6.392970,3.094494,-5.156032,2.029764,3.007703,-0.632326,-8.126982,1.520351,-6.822444,-0.330456,5.903358], dtype = "float32")#candidate|8163|(1440,)|const|float32
call_8162 = relay.TupleGetItem(func_1874_call(relay.reshape(const_8163.astype('float32'), [60, 24])), 0)
call_8164 = relay.TupleGetItem(func_1876_call(relay.reshape(const_8163.astype('float32'), [60, 24])), 0)
output = relay.Tuple([call_8142,call_8162,const_8163,])
output2 = relay.Tuple([call_8143,call_8164,const_8163,])
func_8166 = relay.Function([], output)
mod['func_8166'] = func_8166
mod = relay.transform.InferType()(mod)
mutated_mod['func_8166'] = func_8166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8166_call = mutated_mod.get_global_var('func_8166')
call_8167 = func_8166_call()
output = call_8167
func_8168 = relay.Function([], output)
mutated_mod['func_8168'] = func_8168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5773_call = mod.get_global_var('func_5773')
func_5774_call = mutated_mod.get_global_var('func_5774')
call_8184 = relay.TupleGetItem(func_5773_call(), 0)
call_8185 = relay.TupleGetItem(func_5774_call(), 0)
output = relay.Tuple([call_8184,])
output2 = relay.Tuple([call_8185,])
func_8197 = relay.Function([], output)
mod['func_8197'] = func_8197
mod = relay.transform.InferType()(mod)
output = func_8197()
func_8198 = relay.Function([], output)
mutated_mod['func_8198'] = func_8198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7596_call = mod.get_global_var('func_7596')
func_7598_call = mutated_mod.get_global_var('func_7598')
call_8286 = relay.TupleGetItem(func_7596_call(), 1)
call_8287 = relay.TupleGetItem(func_7598_call(), 1)
func_3954_call = mod.get_global_var('func_3954')
func_3956_call = mutated_mod.get_global_var('func_3956')
call_8304 = relay.TupleGetItem(func_3954_call(), 0)
call_8305 = relay.TupleGetItem(func_3956_call(), 0)
output = relay.Tuple([call_8286,call_8304,])
output2 = relay.Tuple([call_8287,call_8305,])
func_8309 = relay.Function([], output)
mod['func_8309'] = func_8309
mod = relay.transform.InferType()(mod)
output = func_8309()
func_8310 = relay.Function([], output)
mutated_mod['func_8310'] = func_8310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mod.get_global_var('func_1745')
func_1746_call = mutated_mod.get_global_var('func_1746')
call_8338 = relay.TupleGetItem(func_1745_call(), 4)
call_8339 = relay.TupleGetItem(func_1746_call(), 4)
output = call_8338
output2 = call_8339
func_8340 = relay.Function([], output)
mod['func_8340'] = func_8340
mod = relay.transform.InferType()(mod)
output = func_8340()
func_8341 = relay.Function([], output)
mutated_mod['func_8341'] = func_8341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4650_call = mod.get_global_var('func_4650')
func_4652_call = mutated_mod.get_global_var('func_4652')
call_8360 = func_4650_call()
call_8361 = func_4650_call()
output = relay.Tuple([call_8360,])
output2 = relay.Tuple([call_8361,])
func_8375 = relay.Function([], output)
mod['func_8375'] = func_8375
mod = relay.transform.InferType()(mod)
output = func_8375()
func_8376 = relay.Function([], output)
mutated_mod['func_8376'] = func_8376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2776_call = mod.get_global_var('func_2776')
func_2778_call = mutated_mod.get_global_var('func_2778')
call_8424 = func_2776_call()
call_8425 = func_2776_call()
func_3323_call = mod.get_global_var('func_3323')
func_3324_call = mutated_mod.get_global_var('func_3324')
call_8430 = relay.TupleGetItem(func_3323_call(), 0)
call_8431 = relay.TupleGetItem(func_3324_call(), 0)
var_8451 = relay.var("var_8451", dtype = "int64", shape = (10, 16, 13))#candidate|8451|(10, 16, 13)|var|int64
bop_8452 = relay.divide(call_8430.astype('float64'), relay.reshape(var_8451.astype('float64'), relay.shape_of(call_8430))) # shape=(10, 16, 13)
bop_8455 = relay.divide(call_8431.astype('float64'), relay.reshape(var_8451.astype('float64'), relay.shape_of(call_8431))) # shape=(10, 16, 13)
output = relay.Tuple([call_8424,bop_8452,])
output2 = relay.Tuple([call_8425,bop_8455,])
func_8470 = relay.Function([var_8451,], output)
mod['func_8470'] = func_8470
mod = relay.transform.InferType()(mod)
var_8471 = relay.var("var_8471", dtype = "int64", shape = (10, 16, 13))#candidate|8471|(10, 16, 13)|var|int64
output = func_8470(var_8471)
func_8472 = relay.Function([var_8471], output)
mutated_mod['func_8472'] = func_8472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6036_call = mod.get_global_var('func_6036')
func_6037_call = mutated_mod.get_global_var('func_6037')
call_8503 = relay.TupleGetItem(func_6036_call(), 0)
call_8504 = relay.TupleGetItem(func_6037_call(), 0)
output = relay.Tuple([call_8503,])
output2 = relay.Tuple([call_8504,])
func_8505 = relay.Function([], output)
mod['func_8505'] = func_8505
mod = relay.transform.InferType()(mod)
mutated_mod['func_8505'] = func_8505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8505_call = mutated_mod.get_global_var('func_8505')
call_8506 = func_8505_call()
output = call_8506
func_8507 = relay.Function([], output)
mutated_mod['func_8507'] = func_8507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6119_call = mod.get_global_var('func_6119')
func_6121_call = mutated_mod.get_global_var('func_6121')
call_8515 = relay.TupleGetItem(func_6119_call(), 0)
call_8516 = relay.TupleGetItem(func_6121_call(), 0)
output = call_8515
output2 = call_8516
func_8531 = relay.Function([], output)
mod['func_8531'] = func_8531
mod = relay.transform.InferType()(mod)
output = func_8531()
func_8532 = relay.Function([], output)
mutated_mod['func_8532'] = func_8532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5141_call = mod.get_global_var('func_5141')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_8533 = func_5141_call()
call_8534 = func_5141_call()
func_6167_call = mod.get_global_var('func_6167')
func_6169_call = mutated_mod.get_global_var('func_6169')
call_8545 = func_6167_call()
call_8546 = func_6167_call()
uop_8550 = relay.log2(call_8545.astype('float32')) # shape=(2, 720)
uop_8552 = relay.log2(call_8546.astype('float32')) # shape=(2, 720)
output = relay.Tuple([call_8533,uop_8550,])
output2 = relay.Tuple([call_8534,uop_8552,])
func_8554 = relay.Function([], output)
mod['func_8554'] = func_8554
mod = relay.transform.InferType()(mod)
output = func_8554()
func_8555 = relay.Function([], output)
mutated_mod['func_8555'] = func_8555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_8598 = relay.TupleGetItem(func_1191_call(), 0)
call_8599 = relay.TupleGetItem(func_1193_call(), 0)
output = call_8598
output2 = call_8599
func_8604 = relay.Function([], output)
mod['func_8604'] = func_8604
mod = relay.transform.InferType()(mod)
output = func_8604()
func_8605 = relay.Function([], output)
mutated_mod['func_8605'] = func_8605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8645 = relay.var("var_8645", dtype = "float32", shape = (1, 11, 8))#candidate|8645|(1, 11, 8)|var|float32
uop_8646 = relay.erf(var_8645.astype('float32')) # shape=(1, 11, 8)
func_6490_call = mod.get_global_var('func_6490')
func_6492_call = mutated_mod.get_global_var('func_6492')
call_8650 = relay.TupleGetItem(func_6490_call(), 0)
call_8651 = relay.TupleGetItem(func_6492_call(), 0)
output = relay.Tuple([uop_8646,call_8650,])
output2 = relay.Tuple([uop_8646,call_8651,])
func_8676 = relay.Function([var_8645,], output)
mod['func_8676'] = func_8676
mod = relay.transform.InferType()(mod)
mutated_mod['func_8676'] = func_8676
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8677 = relay.var("var_8677", dtype = "float32", shape = (1, 11, 8))#candidate|8677|(1, 11, 8)|var|float32
func_8676_call = mutated_mod.get_global_var('func_8676')
call_8678 = func_8676_call(var_8677)
output = call_8678
func_8679 = relay.Function([var_8677], output)
mutated_mod['func_8679'] = func_8679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mod.get_global_var('func_3071')
func_3072_call = mutated_mod.get_global_var('func_3072')
call_8695 = relay.TupleGetItem(func_3071_call(), 0)
call_8696 = relay.TupleGetItem(func_3072_call(), 0)
output = relay.Tuple([call_8695,])
output2 = relay.Tuple([call_8696,])
func_8705 = relay.Function([], output)
mod['func_8705'] = func_8705
mod = relay.transform.InferType()(mod)
mutated_mod['func_8705'] = func_8705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8705_call = mutated_mod.get_global_var('func_8705')
call_8706 = func_8705_call()
output = call_8706
func_8707 = relay.Function([], output)
mutated_mod['func_8707'] = func_8707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8531_call = mod.get_global_var('func_8531')
func_8532_call = mutated_mod.get_global_var('func_8532')
call_8708 = func_8531_call()
call_8709 = func_8531_call()
output = call_8708
output2 = call_8709
func_8724 = relay.Function([], output)
mod['func_8724'] = func_8724
mod = relay.transform.InferType()(mod)
output = func_8724()
func_8725 = relay.Function([], output)
mutated_mod['func_8725'] = func_8725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6789_call = mod.get_global_var('func_6789')
func_6791_call = mutated_mod.get_global_var('func_6791')
call_8736 = func_6789_call()
call_8737 = func_6789_call()
func_8531_call = mod.get_global_var('func_8531')
func_8532_call = mutated_mod.get_global_var('func_8532')
call_8776 = func_8531_call()
call_8777 = func_8531_call()
uop_8779 = relay.tan(call_8776.astype('float64')) # shape=(3, 13, 8)
uop_8781 = relay.tan(call_8777.astype('float64')) # shape=(3, 13, 8)
output = relay.Tuple([call_8736,uop_8779,])
output2 = relay.Tuple([call_8737,uop_8781,])
func_8785 = relay.Function([], output)
mod['func_8785'] = func_8785
mod = relay.transform.InferType()(mod)
mutated_mod['func_8785'] = func_8785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8785_call = mutated_mod.get_global_var('func_8785')
call_8786 = func_8785_call()
output = call_8786
func_8787 = relay.Function([], output)
mutated_mod['func_8787'] = func_8787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8340_call = mod.get_global_var('func_8340')
func_8341_call = mutated_mod.get_global_var('func_8341')
call_8802 = func_8340_call()
call_8803 = func_8340_call()
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_8804 = relay.TupleGetItem(func_1677_call(), 0)
call_8805 = relay.TupleGetItem(func_1678_call(), 0)
output = relay.Tuple([call_8802,call_8804,])
output2 = relay.Tuple([call_8803,call_8805,])
func_8810 = relay.Function([], output)
mod['func_8810'] = func_8810
mod = relay.transform.InferType()(mod)
mutated_mod['func_8810'] = func_8810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8810_call = mutated_mod.get_global_var('func_8810')
call_8811 = func_8810_call()
output = call_8811
func_8812 = relay.Function([], output)
mutated_mod['func_8812'] = func_8812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_8813 = relay.TupleGetItem(func_3515_call(), 0)
call_8814 = relay.TupleGetItem(func_3516_call(), 0)
output = relay.Tuple([call_8813,])
output2 = relay.Tuple([call_8814,])
func_8822 = relay.Function([], output)
mod['func_8822'] = func_8822
mod = relay.transform.InferType()(mod)
output = func_8822()
func_8823 = relay.Function([], output)
mutated_mod['func_8823'] = func_8823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7978_call = mod.get_global_var('func_7978')
func_7979_call = mutated_mod.get_global_var('func_7979')
call_8859 = func_7978_call()
call_8860 = func_7978_call()
output = relay.Tuple([call_8859,])
output2 = relay.Tuple([call_8860,])
func_8868 = relay.Function([], output)
mod['func_8868'] = func_8868
mod = relay.transform.InferType()(mod)
mutated_mod['func_8868'] = func_8868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8868_call = mutated_mod.get_global_var('func_8868')
call_8869 = func_8868_call()
output = call_8869
func_8870 = relay.Function([], output)
mutated_mod['func_8870'] = func_8870
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8898 = relay.var("var_8898", dtype = "int32", shape = (12, 4, 4))#candidate|8898|(12, 4, 4)|var|int32
var_8899 = relay.var("var_8899", dtype = "int32", shape = (12, 4, 4))#candidate|8899|(12, 4, 4)|var|int32
bop_8900 = relay.not_equal(var_8898.astype('bool'), relay.reshape(var_8899.astype('bool'), relay.shape_of(var_8898))) # shape=(12, 4, 4)
func_4134_call = mod.get_global_var('func_4134')
func_4136_call = mutated_mod.get_global_var('func_4136')
call_8903 = relay.TupleGetItem(func_4134_call(), 0)
call_8904 = relay.TupleGetItem(func_4136_call(), 0)
var_8916 = relay.var("var_8916", dtype = "int32", shape = (12, 4, 4))#candidate|8916|(12, 4, 4)|var|int32
bop_8917 = relay.maximum(var_8899.astype('int16'), relay.reshape(var_8916.astype('int16'), relay.shape_of(var_8899))) # shape=(12, 4, 4)
func_5940_call = mod.get_global_var('func_5940')
func_5943_call = mutated_mod.get_global_var('func_5943')
var_8927 = relay.var("var_8927", dtype = "float32", shape = (240,))#candidate|8927|(240,)|var|float32
call_8926 = relay.TupleGetItem(func_5940_call(relay.reshape(var_8927.astype('float32'), [16, 1, 15])), 0)
call_8928 = relay.TupleGetItem(func_5943_call(relay.reshape(var_8927.astype('float32'), [16, 1, 15])), 0)
output = relay.Tuple([bop_8900,call_8903,bop_8917,call_8926,var_8927,])
output2 = relay.Tuple([bop_8900,call_8904,bop_8917,call_8928,var_8927,])
func_8940 = relay.Function([var_8898,var_8899,var_8916,var_8927,], output)
mod['func_8940'] = func_8940
mod = relay.transform.InferType()(mod)
var_8941 = relay.var("var_8941", dtype = "int32", shape = (12, 4, 4))#candidate|8941|(12, 4, 4)|var|int32
var_8942 = relay.var("var_8942", dtype = "int32", shape = (12, 4, 4))#candidate|8942|(12, 4, 4)|var|int32
var_8943 = relay.var("var_8943", dtype = "int32", shape = (12, 4, 4))#candidate|8943|(12, 4, 4)|var|int32
var_8944 = relay.var("var_8944", dtype = "float32", shape = (240,))#candidate|8944|(240,)|var|float32
output = func_8940(var_8941,var_8942,var_8943,var_8944,)
func_8945 = relay.Function([var_8941,var_8942,var_8943,var_8944,], output)
mutated_mod['func_8945'] = func_8945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8531_call = mod.get_global_var('func_8531')
func_8532_call = mutated_mod.get_global_var('func_8532')
call_8985 = func_8531_call()
call_8986 = func_8531_call()
output = relay.Tuple([call_8985,])
output2 = relay.Tuple([call_8986,])
func_9007 = relay.Function([], output)
mod['func_9007'] = func_9007
mod = relay.transform.InferType()(mod)
output = func_9007()
func_9008 = relay.Function([], output)
mutated_mod['func_9008'] = func_9008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4453_call = mod.get_global_var('func_4453')
func_4454_call = mutated_mod.get_global_var('func_4454')
call_9074 = func_4453_call()
call_9075 = func_4453_call()
output = relay.Tuple([call_9074,])
output2 = relay.Tuple([call_9075,])
func_9085 = relay.Function([], output)
mod['func_9085'] = func_9085
mod = relay.transform.InferType()(mod)
mutated_mod['func_9085'] = func_9085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9085_call = mutated_mod.get_global_var('func_9085')
call_9086 = func_9085_call()
output = call_9086
func_9087 = relay.Function([], output)
mutated_mod['func_9087'] = func_9087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5470_call = mod.get_global_var('func_5470')
func_5472_call = mutated_mod.get_global_var('func_5472')
call_9161 = func_5470_call()
call_9162 = func_5470_call()
func_3184_call = mod.get_global_var('func_3184')
func_3186_call = mutated_mod.get_global_var('func_3186')
call_9167 = relay.TupleGetItem(func_3184_call(), 0)
call_9168 = relay.TupleGetItem(func_3186_call(), 0)
func_8375_call = mod.get_global_var('func_8375')
func_8376_call = mutated_mod.get_global_var('func_8376')
call_9177 = relay.TupleGetItem(func_8375_call(), 0)
call_9178 = relay.TupleGetItem(func_8376_call(), 0)
output = relay.Tuple([call_9161,call_9167,call_9177,])
output2 = relay.Tuple([call_9162,call_9168,call_9178,])
func_9195 = relay.Function([], output)
mod['func_9195'] = func_9195
mod = relay.transform.InferType()(mod)
mutated_mod['func_9195'] = func_9195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9195_call = mutated_mod.get_global_var('func_9195')
call_9196 = func_9195_call()
output = call_9196
func_9197 = relay.Function([], output)
mutated_mod['func_9197'] = func_9197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2776_call = mod.get_global_var('func_2776')
func_2778_call = mutated_mod.get_global_var('func_2778')
call_9235 = func_2776_call()
call_9236 = func_2776_call()
func_3785_call = mod.get_global_var('func_3785')
func_3787_call = mutated_mod.get_global_var('func_3787')
call_9246 = relay.TupleGetItem(func_3785_call(), 0)
call_9247 = relay.TupleGetItem(func_3787_call(), 0)
func_7596_call = mod.get_global_var('func_7596')
func_7598_call = mutated_mod.get_global_var('func_7598')
call_9252 = relay.TupleGetItem(func_7596_call(), 0)
call_9253 = relay.TupleGetItem(func_7598_call(), 0)
func_8531_call = mod.get_global_var('func_8531')
func_8532_call = mutated_mod.get_global_var('func_8532')
call_9266 = func_8531_call()
call_9267 = func_8531_call()
output = relay.Tuple([call_9235,call_9246,call_9252,call_9266,])
output2 = relay.Tuple([call_9236,call_9247,call_9253,call_9267,])
func_9272 = relay.Function([], output)
mod['func_9272'] = func_9272
mod = relay.transform.InferType()(mod)
mutated_mod['func_9272'] = func_9272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9272_call = mutated_mod.get_global_var('func_9272')
call_9273 = func_9272_call()
output = call_9273
func_9274 = relay.Function([], output)
mutated_mod['func_9274'] = func_9274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9300 = relay.var("var_9300", dtype = "float32", shape = (9, 14, 8))#candidate|9300|(9, 14, 8)|var|float32
uop_9301 = relay.sinh(var_9300.astype('float32')) # shape=(9, 14, 8)
bop_9303 = relay.less(var_9300.astype('bool'), relay.reshape(uop_9301.astype('bool'), relay.shape_of(var_9300))) # shape=(9, 14, 8)
func_2640_call = mod.get_global_var('func_2640')
func_2641_call = mutated_mod.get_global_var('func_2641')
call_9313 = func_2640_call()
call_9314 = func_2640_call()
var_9315 = relay.var("var_9315", dtype = "bool", shape = (9, 14, 8))#candidate|9315|(9, 14, 8)|var|bool
bop_9316 = relay.minimum(bop_9303.astype('uint32'), relay.reshape(var_9315.astype('uint32'), relay.shape_of(bop_9303))) # shape=(9, 14, 8)
output = relay.Tuple([call_9313,bop_9316,])
output2 = relay.Tuple([call_9314,bop_9316,])
func_9326 = relay.Function([var_9300,var_9315,], output)
mod['func_9326'] = func_9326
mod = relay.transform.InferType()(mod)
var_9327 = relay.var("var_9327", dtype = "float32", shape = (9, 14, 8))#candidate|9327|(9, 14, 8)|var|float32
var_9328 = relay.var("var_9328", dtype = "bool", shape = (9, 14, 8))#candidate|9328|(9, 14, 8)|var|bool
output = func_9326(var_9327,var_9328,)
func_9329 = relay.Function([var_9327,var_9328,], output)
mutated_mod['func_9329'] = func_9329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1745_call = mod.get_global_var('func_1745')
func_1746_call = mutated_mod.get_global_var('func_1746')
call_9378 = relay.TupleGetItem(func_1745_call(), 2)
call_9379 = relay.TupleGetItem(func_1746_call(), 2)
func_2370_call = mod.get_global_var('func_2370')
func_2372_call = mutated_mod.get_global_var('func_2372')
call_9380 = relay.TupleGetItem(func_2370_call(), 2)
call_9381 = relay.TupleGetItem(func_2372_call(), 2)
func_3585_call = mod.get_global_var('func_3585')
func_3587_call = mutated_mod.get_global_var('func_3587')
var_9383 = relay.var("var_9383", dtype = "int64", shape = (2080,))#candidate|9383|(2080,)|var|int64
call_9382 = relay.TupleGetItem(func_3585_call(relay.reshape(var_9383.astype('int64'), [10, 16, 13])), 1)
call_9384 = relay.TupleGetItem(func_3587_call(relay.reshape(var_9383.astype('int64'), [10, 16, 13])), 1)
func_4667_call = mod.get_global_var('func_4667')
func_4670_call = mutated_mod.get_global_var('func_4670')
call_9391 = relay.TupleGetItem(func_4667_call(relay.reshape(call_9382.astype('int64'), [10, 16, 13])), 0)
call_9392 = relay.TupleGetItem(func_4670_call(relay.reshape(call_9382.astype('int64'), [10, 16, 13])), 0)
func_8785_call = mod.get_global_var('func_8785')
func_8787_call = mutated_mod.get_global_var('func_8787')
call_9393 = relay.TupleGetItem(func_8785_call(), 0)
call_9394 = relay.TupleGetItem(func_8787_call(), 0)
output = relay.Tuple([call_9378,call_9380,call_9382,var_9383,call_9391,call_9393,])
output2 = relay.Tuple([call_9379,call_9381,call_9384,var_9383,call_9392,call_9394,])
func_9400 = relay.Function([var_9383,], output)
mod['func_9400'] = func_9400
mod = relay.transform.InferType()(mod)
var_9401 = relay.var("var_9401", dtype = "int64", shape = (2080,))#candidate|9401|(2080,)|var|int64
output = func_9400(var_9401)
func_9402 = relay.Function([var_9401], output)
mutated_mod['func_9402'] = func_9402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9498 = relay.var("var_9498", dtype = "float64", shape = (2, 12, 2))#candidate|9498|(2, 12, 2)|var|float64
const_9499 = relay.const([[[-4.312405,7.215697],[-3.791606,7.222859],[4.019156,-3.017203],[-6.121979,8.690512],[-9.361915,-8.294300],[1.124403,0.722350],[-6.645146,3.537291],[8.040662,-9.998877],[3.831728,-7.779362],[-2.576732,1.427073],[4.782588,2.527282],[3.233230,3.871487]],[[2.030172,-4.564015],[-7.120552,4.827115],[8.782243,-5.541492],[4.831664,-7.057260],[3.978077,8.803189],[5.198828,5.366867],[-0.066330,-8.669263],[-7.375730,-4.713984],[8.429587,-1.428557],[-9.985354,6.201196],[-2.913238,9.720579],[-5.879166,-7.976651]]], dtype = "float64")#candidate|9499|(2, 12, 2)|const|float64
bop_9500 = relay.floor_mod(var_9498.astype('float64'), relay.reshape(const_9499.astype('float64'), relay.shape_of(var_9498))) # shape=(2, 12, 2)
func_4000_call = mod.get_global_var('func_4000')
func_4002_call = mutated_mod.get_global_var('func_4002')
call_9503 = func_4000_call()
call_9504 = func_4000_call()
func_1408_call = mod.get_global_var('func_1408')
func_1410_call = mutated_mod.get_global_var('func_1410')
call_9515 = func_1408_call()
call_9516 = func_1408_call()
uop_9525 = relay.atan(const_9499.astype('float32')) # shape=(2, 12, 2)
bop_9527 = relay.power(uop_9525.astype('float32'), relay.reshape(var_9498.astype('float32'), relay.shape_of(uop_9525))) # shape=(2, 12, 2)
bop_9530 = relay.left_shift(bop_9527.astype('uint32'), relay.reshape(uop_9525.astype('uint32'), relay.shape_of(bop_9527))) # shape=(2, 12, 2)
bop_9533 = relay.not_equal(bop_9530.astype('bool'), relay.reshape(bop_9527.astype('bool'), relay.shape_of(bop_9530))) # shape=(2, 12, 2)
func_7953_call = mod.get_global_var('func_7953')
func_7955_call = mutated_mod.get_global_var('func_7955')
call_9541 = func_7953_call()
call_9542 = func_7953_call()
bop_9543 = relay.greater(bop_9500.astype('bool'), relay.reshape(bop_9530.astype('bool'), relay.shape_of(bop_9500))) # shape=(2, 12, 2)
func_5816_call = mod.get_global_var('func_5816')
func_5818_call = mutated_mod.get_global_var('func_5818')
call_9552 = relay.TupleGetItem(func_5816_call(), 0)
call_9553 = relay.TupleGetItem(func_5818_call(), 0)
uop_9566 = relay.erf(uop_9525.astype('float32')) # shape=(2, 12, 2)
var_9568 = relay.var("var_9568", dtype = "float32", shape = (2, 12, 2))#candidate|9568|(2, 12, 2)|var|float32
bop_9569 = relay.maximum(uop_9525.astype('int8'), relay.reshape(var_9568.astype('int8'), relay.shape_of(uop_9525))) # shape=(2, 12, 2)
output = relay.Tuple([call_9503,call_9515,bop_9533,call_9541,bop_9543,call_9552,uop_9566,bop_9569,])
output2 = relay.Tuple([call_9504,call_9516,bop_9533,call_9542,bop_9543,call_9553,uop_9566,bop_9569,])
func_9592 = relay.Function([var_9498,var_9568,], output)
mod['func_9592'] = func_9592
mod = relay.transform.InferType()(mod)
var_9593 = relay.var("var_9593", dtype = "float64", shape = (2, 12, 2))#candidate|9593|(2, 12, 2)|var|float64
var_9594 = relay.var("var_9594", dtype = "float32", shape = (2, 12, 2))#candidate|9594|(2, 12, 2)|var|float32
output = func_9592(var_9593,var_9594,)
func_9595 = relay.Function([var_9593,var_9594,], output)
mutated_mod['func_9595'] = func_9595
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9626 = relay.var("var_9626", dtype = "float32", shape = (3, 11, 7))#candidate|9626|(3, 11, 7)|var|float32
var_9627 = relay.var("var_9627", dtype = "float32", shape = (3, 11, 7))#candidate|9627|(3, 11, 7)|var|float32
bop_9628 = relay.mod(var_9626.astype('float32'), relay.reshape(var_9627.astype('float32'), relay.shape_of(var_9626))) # shape=(3, 11, 7)
output = relay.Tuple([bop_9628,])
output2 = relay.Tuple([bop_9628,])
func_9632 = relay.Function([var_9626,var_9627,], output)
mod['func_9632'] = func_9632
mod = relay.transform.InferType()(mod)
var_9633 = relay.var("var_9633", dtype = "float32", shape = (3, 11, 7))#candidate|9633|(3, 11, 7)|var|float32
var_9634 = relay.var("var_9634", dtype = "float32", shape = (3, 11, 7))#candidate|9634|(3, 11, 7)|var|float32
output = func_9632(var_9633,var_9634,)
func_9635 = relay.Function([var_9633,var_9634,], output)
mutated_mod['func_9635'] = func_9635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5186_call = mod.get_global_var('func_5186')
func_5187_call = mutated_mod.get_global_var('func_5187')
call_9703 = relay.TupleGetItem(func_5186_call(), 0)
call_9704 = relay.TupleGetItem(func_5187_call(), 0)
output = relay.Tuple([call_9703,])
output2 = relay.Tuple([call_9704,])
func_9707 = relay.Function([], output)
mod['func_9707'] = func_9707
mod = relay.transform.InferType()(mod)
mutated_mod['func_9707'] = func_9707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9707_call = mutated_mod.get_global_var('func_9707')
call_9708 = func_9707_call()
output = call_9708
func_9709 = relay.Function([], output)
mutated_mod['func_9709'] = func_9709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9195_call = mod.get_global_var('func_9195')
func_9197_call = mutated_mod.get_global_var('func_9197')
call_9712 = relay.TupleGetItem(func_9195_call(), 2)
call_9713 = relay.TupleGetItem(func_9197_call(), 2)
output = relay.Tuple([call_9712,])
output2 = relay.Tuple([call_9713,])
func_9756 = relay.Function([], output)
mod['func_9756'] = func_9756
mod = relay.transform.InferType()(mod)
output = func_9756()
func_9757 = relay.Function([], output)
mutated_mod['func_9757'] = func_9757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9785 = relay.var("var_9785", dtype = "int32", shape = (5, 16, 16))#candidate|9785|(5, 16, 16)|var|int32
var_9786 = relay.var("var_9786", dtype = "int32", shape = (5, 16, 16))#candidate|9786|(5, 16, 16)|var|int32
bop_9787 = relay.add(var_9785.astype('int32'), relay.reshape(var_9786.astype('int32'), relay.shape_of(var_9785))) # shape=(5, 16, 16)
output = bop_9787
output2 = bop_9787
func_9811 = relay.Function([var_9785,var_9786,], output)
mod['func_9811'] = func_9811
mod = relay.transform.InferType()(mod)
mutated_mod['func_9811'] = func_9811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9811_call = mutated_mod.get_global_var('func_9811')
var_9813 = relay.var("var_9813", dtype = "int32", shape = (5, 16, 16))#candidate|9813|(5, 16, 16)|var|int32
var_9814 = relay.var("var_9814", dtype = "int32", shape = (5, 16, 16))#candidate|9814|(5, 16, 16)|var|int32
call_9812 = func_9811_call(var_9813,var_9814,)
output = call_9812
func_9815 = relay.Function([var_9813,var_9814,], output)
mutated_mod['func_9815'] = func_9815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9859 = relay.var("var_9859", dtype = "bool", shape = (15, 7, 7))#candidate|9859|(15, 7, 7)|var|bool
const_9860 = relay.const([[[False,False,True,False,False,False,False],[False,True,False,True,False,True,False],[False,True,False,False,False,True,True],[False,False,False,False,False,False,True],[False,False,True,False,False,False,True],[False,False,True,True,False,True,False],[False,False,False,False,True,False,False]],[[False,False,False,False,False,False,False],[False,False,True,True,False,True,True],[True,True,False,True,False,True,False],[False,False,True,False,True,True,True],[False,False,True,False,False,True,False],[False,True,True,True,False,False,False],[False,True,True,True,True,False,True]],[[True,True,True,True,False,False,True],[True,False,False,True,False,False,False],[False,True,False,False,True,True,True],[True,False,True,True,True,True,True],[False,True,False,True,False,True,False],[False,False,False,True,False,False,True],[False,False,True,False,False,True,False]],[[True,True,False,False,True,True,True],[False,False,False,True,True,False,False],[False,False,True,False,False,True,False],[False,True,True,False,False,False,False],[False,True,False,True,False,False,True],[True,False,False,False,False,True,True],[False,True,True,False,True,False,False]],[[True,True,False,True,True,True,True],[True,True,True,True,True,False,False],[True,False,True,True,False,True,True],[True,False,False,True,False,True,True],[True,False,True,True,True,False,False],[False,True,False,True,True,True,False],[False,True,False,True,False,True,False]],[[False,True,True,True,True,True,False],[True,True,True,True,True,True,False],[False,True,False,True,False,False,False],[True,False,True,True,True,True,True],[True,True,True,False,False,True,True],[True,False,False,True,True,True,False],[False,False,False,True,True,False,False]],[[False,True,False,True,True,True,True],[False,True,False,False,False,True,False],[False,False,True,True,True,True,False],[False,True,False,True,True,False,False],[True,True,False,True,False,False,False],[True,False,True,True,True,True,True],[True,True,True,True,True,True,False]],[[False,False,True,True,True,True,False],[True,False,False,False,True,False,True],[True,False,True,False,False,True,True],[True,False,True,False,True,False,True],[True,True,False,True,False,True,False],[True,False,False,False,False,False,False],[True,False,True,False,True,True,False]],[[True,False,False,True,False,True,True],[False,True,True,True,True,True,False],[True,False,True,False,False,True,True],[True,False,True,False,False,True,True],[True,False,True,True,False,True,False],[False,False,True,False,False,False,True],[True,True,False,False,True,True,False]],[[False,False,True,True,False,True,True],[True,False,False,False,False,False,True],[False,True,True,False,False,True,True],[False,True,False,True,True,False,True],[False,True,True,False,False,True,True],[False,False,True,True,False,True,False],[False,True,True,False,True,True,False]],[[True,False,True,True,True,False,False],[False,False,True,True,False,False,True],[False,True,True,False,True,False,False],[True,True,False,True,True,True,True],[False,False,False,True,False,True,False],[False,True,False,False,False,True,True],[False,True,True,False,True,False,False]],[[False,False,False,False,True,False,True],[False,False,True,False,False,True,True],[True,False,True,True,False,True,True],[False,False,True,False,False,False,False],[True,False,False,True,False,True,True],[True,True,True,False,True,False,False],[False,True,False,True,True,True,False]],[[True,True,True,True,True,False,True],[True,False,True,False,False,False,False],[False,True,True,False,False,False,False],[False,False,False,False,True,False,True],[True,False,True,False,True,False,False],[False,True,True,False,True,True,False],[False,True,False,False,False,False,False]],[[False,False,False,False,True,True,False],[False,True,True,True,True,False,False],[False,True,False,True,False,True,True],[True,False,True,True,True,False,False],[True,False,False,False,False,True,False],[True,False,True,False,True,False,True],[True,True,True,True,False,True,False]],[[False,True,True,True,True,True,True],[True,True,True,False,True,True,False],[True,False,True,True,False,False,True],[False,False,False,True,True,False,False],[True,True,True,True,False,False,True],[False,True,False,True,False,True,True],[True,False,False,True,True,True,False]]], dtype = "bool")#candidate|9860|(15, 7, 7)|const|bool
bop_9861 = relay.logical_or(var_9859.astype('bool'), relay.reshape(const_9860.astype('bool'), relay.shape_of(var_9859))) # shape=(15, 7, 7)
func_7953_call = mod.get_global_var('func_7953')
func_7955_call = mutated_mod.get_global_var('func_7955')
call_9872 = func_7953_call()
call_9873 = func_7953_call()
bop_9875 = relay.mod(var_9859.astype('float32'), relay.reshape(const_9860.astype('float32'), relay.shape_of(var_9859))) # shape=(15, 7, 7)
func_8531_call = mod.get_global_var('func_8531')
func_8532_call = mutated_mod.get_global_var('func_8532')
call_9889 = func_8531_call()
call_9890 = func_8531_call()
output = relay.Tuple([bop_9861,call_9872,bop_9875,call_9889,])
output2 = relay.Tuple([bop_9861,call_9873,bop_9875,call_9890,])
func_9894 = relay.Function([var_9859,], output)
mod['func_9894'] = func_9894
mod = relay.transform.InferType()(mod)
mutated_mod['func_9894'] = func_9894
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9895 = relay.var("var_9895", dtype = "bool", shape = (15, 7, 7))#candidate|9895|(15, 7, 7)|var|bool
func_9894_call = mutated_mod.get_global_var('func_9894')
call_9896 = func_9894_call(var_9895)
output = call_9896
func_9897 = relay.Function([var_9895], output)
mutated_mod['func_9897'] = func_9897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3145_call = mod.get_global_var('func_3145')
func_3147_call = mutated_mod.get_global_var('func_3147')
call_10014 = relay.TupleGetItem(func_3145_call(), 1)
call_10015 = relay.TupleGetItem(func_3147_call(), 1)
uop_10017 = relay.log(call_10014.astype('float64')) # shape=(2, 720)
uop_10019 = relay.log(call_10015.astype('float64')) # shape=(2, 720)
func_3071_call = mod.get_global_var('func_3071')
func_3072_call = mutated_mod.get_global_var('func_3072')
call_10022 = relay.TupleGetItem(func_3071_call(), 0)
call_10023 = relay.TupleGetItem(func_3072_call(), 0)
bop_10025 = relay.maximum(uop_10017.astype('uint8'), relay.reshape(call_10014.astype('uint8'), relay.shape_of(uop_10017))) # shape=(2, 720)
bop_10028 = relay.maximum(uop_10019.astype('uint8'), relay.reshape(call_10015.astype('uint8'), relay.shape_of(uop_10019))) # shape=(2, 720)
output = relay.Tuple([call_10022,bop_10025,])
output2 = relay.Tuple([call_10023,bop_10028,])
func_10036 = relay.Function([], output)
mod['func_10036'] = func_10036
mod = relay.transform.InferType()(mod)
output = func_10036()
func_10037 = relay.Function([], output)
mutated_mod['func_10037'] = func_10037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3184_call = mod.get_global_var('func_3184')
func_3186_call = mutated_mod.get_global_var('func_3186')
call_10073 = relay.TupleGetItem(func_3184_call(), 1)
call_10074 = relay.TupleGetItem(func_3186_call(), 1)
func_6848_call = mod.get_global_var('func_6848')
func_6852_call = mutated_mod.get_global_var('func_6852')
var_10084 = relay.var("var_10084", dtype = "float64", shape = (400,))#candidate|10084|(400,)|var|float64
var_10085 = relay.var("var_10085", dtype = "float32", shape = (832,))#candidate|10085|(832,)|var|float32
call_10083 = relay.TupleGetItem(func_6848_call(relay.reshape(var_10084.astype('float64'), [10, 10, 4]), relay.reshape(var_10085.astype('float32'), [832,]), ), 2)
call_10086 = relay.TupleGetItem(func_6852_call(relay.reshape(var_10084.astype('float64'), [10, 10, 4]), relay.reshape(var_10085.astype('float32'), [832,]), ), 2)
output = relay.Tuple([call_10073,call_10083,var_10084,var_10085,])
output2 = relay.Tuple([call_10074,call_10086,var_10084,var_10085,])
func_10089 = relay.Function([var_10084,var_10085,], output)
mod['func_10089'] = func_10089
mod = relay.transform.InferType()(mod)
var_10090 = relay.var("var_10090", dtype = "float64", shape = (400,))#candidate|10090|(400,)|var|float64
var_10091 = relay.var("var_10091", dtype = "float32", shape = (832,))#candidate|10091|(832,)|var|float32
output = func_10089(var_10090,var_10091,)
func_10092 = relay.Function([var_10090,var_10091,], output)
mutated_mod['func_10092'] = func_10092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8554_call = mod.get_global_var('func_8554')
func_8555_call = mutated_mod.get_global_var('func_8555')
call_10099 = relay.TupleGetItem(func_8554_call(), 1)
call_10100 = relay.TupleGetItem(func_8555_call(), 1)
func_9195_call = mod.get_global_var('func_9195')
func_9197_call = mutated_mod.get_global_var('func_9197')
call_10104 = relay.TupleGetItem(func_9195_call(), 1)
call_10105 = relay.TupleGetItem(func_9197_call(), 1)
func_2870_call = mod.get_global_var('func_2870')
func_2872_call = mutated_mod.get_global_var('func_2872')
call_10107 = relay.TupleGetItem(func_2870_call(), 0)
call_10108 = relay.TupleGetItem(func_2872_call(), 0)
output = relay.Tuple([call_10099,call_10104,call_10107,])
output2 = relay.Tuple([call_10100,call_10105,call_10108,])
func_10139 = relay.Function([], output)
mod['func_10139'] = func_10139
mod = relay.transform.InferType()(mod)
output = func_10139()
func_10140 = relay.Function([], output)
mutated_mod['func_10140'] = func_10140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7208_call = mod.get_global_var('func_7208')
func_7209_call = mutated_mod.get_global_var('func_7209')
call_10179 = func_7208_call()
call_10180 = func_7208_call()
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
const_10219 = relay.const([[-5,-4,7,8,-9,-9],[4,-4,-7,1,-6,4],[7,7,-3,-10,9,3],[9,-1,2,-9,-7,-1],[-1,-2,-5,-4,-8,-4],[5,1,-8,-10,-8,7],[1,6,6,2,-2,-6],[-3,-9,-5,-3,-7,-4],[1,-3,-7,10,-4,-5],[4,10,6,-2,10,9],[4,-6,8,-7,-6,-1],[1,-10,-10,7,-4,9],[-5,-8,-4,-10,1,-1],[-6,2,-9,4,8,6],[10,-1,2,-6,-5,-2],[1,7,-8,5,-5,3],[-1,5,-2,7,-4,-10],[-10,-3,-9,4,-9,-6],[-9,8,-9,9,9,-9],[-7,-6,-5,-7,-1,2],[7,1,-8,2,9,1],[-10,-8,-6,-3,3,4],[-4,-5,-3,-6,-4,8],[-8,-9,-10,-5,-3,-1],[-9,-2,4,2,-10,6],[5,-6,10,3,4,-5],[4,-7,4,-6,2,9],[5,-5,-8,8,2,-4],[-8,2,-9,-8,-10,8],[3,-9,3,3,9,2],[-1,-1,-4,9,2,-8],[10,-3,-1,6,-6,-10],[-3,6,-3,9,9,-8],[5,-5,-9,-7,8,-1],[3,-2,-2,-8,5,7],[2,-1,6,-4,-5,9],[1,-4,7,10,3,-1],[-6,10,-4,-9,-2,7],[-10,-10,-9,2,4,1],[-3,5,4,-1,-4,-2],[-7,-5,5,-7,-1,3],[-6,10,-1,5,-3,-10],[-4,-7,-1,7,4,-6],[-3,4,-2,4,2,-9],[-8,-6,3,-7,-6,-7],[7,-2,-7,-10,3,-4],[2,2,5,-6,-6,-3],[-6,-7,-9,9,10,7],[-2,-8,2,2,4,-8],[5,-2,-4,-9,-7,5],[1,-2,-7,-8,7,-6],[10,4,9,-4,4,5],[-3,10,-9,8,9,10],[-10,-5,-4,7,-8,-7],[3,-1,-9,6,-1,2],[3,9,-1,-10,-7,9],[7,-5,-8,-1,-6,-9],[1,7,-2,-1,10,-7],[-10,1,1,9,7,-2],[-8,6,-5,9,10,7],[6,7,7,6,-10,-5],[8,-10,7,9,-4,9],[10,7,-5,-2,-2,6],[2,9,10,4,5,2],[5,-7,-6,10,4,6],[4,10,-6,7,6,-7],[-7,4,-4,-6,-8,9],[9,2,9,-3,-7,-10],[9,8,-3,-4,7,-4],[4,1,3,6,1,5],[7,4,-3,4,2,-7],[-10,-7,9,-9,1,5],[-9,-6,-10,-10,-1,10],[9,-3,-7,-7,-1,7],[6,-3,5,3,-10,6],[-1,6,3,7,-9,4],[-3,6,-5,-6,-8,-10],[-6,8,-1,7,-3,6],[-8,-7,-3,4,1,-2],[2,7,-6,2,9,9],[8,-4,8,6,-2,2],[5,-3,-9,-5,2,2],[1,1,5,10,7,-4],[-3,-10,5,-4,1,1],[4,-10,7,6,5,-8],[1,-6,1,1,10,10],[-5,-10,-4,6,-6,-6],[-8,3,-2,-6,8,-9],[-1,4,4,-1,-8,5],[1,-10,8,9,8,9],[-10,5,8,8,8,1],[6,3,2,-6,9,-7],[3,5,8,3,1,-8],[4,6,-8,4,-10,7],[-4,4,-10,2,-9,-7],[1,4,10,10,-8,3],[-5,7,3,9,9,-1],[-4,-4,-8,-9,1,-10],[5,-4,-8,8,-6,-1],[1,8,-3,8,-2,2],[3,10,5,4,1,3],[-7,-5,6,-3,7,-6],[10,10,8,3,-3,5],[4,6,-9,5,9,-10],[5,3,-7,-10,5,-1],[4,-4,7,-3,-1,6],[-9,8,8,-3,5,3],[-5,1,7,-2,-5,5],[8,-5,-10,-10,2,5],[10,-3,3,9,2,-7]], dtype = "int32")#candidate|10219|(110, 6)|const|int32
call_10218 = relay.TupleGetItem(func_1986_call(relay.reshape(const_10219.astype('int32'), [6, 11, 10])), 0)
call_10220 = relay.TupleGetItem(func_1988_call(relay.reshape(const_10219.astype('int32'), [6, 11, 10])), 0)
func_2394_call = mod.get_global_var('func_2394')
func_2396_call = mutated_mod.get_global_var('func_2396')
call_10223 = func_2394_call()
call_10224 = func_2394_call()
func_1349_call = mod.get_global_var('func_1349')
func_1353_call = mutated_mod.get_global_var('func_1353')
var_10241 = relay.var("var_10241", dtype = "uint8", shape = (260,))#candidate|10241|(260,)|var|uint8
call_10240 = relay.TupleGetItem(func_1349_call(relay.reshape(var_10241.astype('uint8'), [5, 13, 4]), relay.reshape(var_10241.astype('uint8'), [5, 13, 4]), ), 0)
call_10242 = relay.TupleGetItem(func_1353_call(relay.reshape(var_10241.astype('uint8'), [5, 13, 4]), relay.reshape(var_10241.astype('uint8'), [5, 13, 4]), ), 0)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_10243 = relay.TupleGetItem(func_1191_call(), 0)
call_10244 = relay.TupleGetItem(func_1193_call(), 0)
bop_10250 = relay.bitwise_and(call_10240.astype('int8'), relay.reshape(var_10241.astype('int8'), relay.shape_of(call_10240))) # shape=(5, 13, 4)
bop_10253 = relay.bitwise_and(call_10242.astype('int8'), relay.reshape(var_10241.astype('int8'), relay.shape_of(call_10242))) # shape=(5, 13, 4)
output = relay.Tuple([call_10179,call_10218,const_10219,call_10223,call_10243,bop_10250,])
output2 = relay.Tuple([call_10180,call_10220,const_10219,call_10224,call_10244,bop_10253,])
func_10275 = relay.Function([var_10241,], output)
mod['func_10275'] = func_10275
mod = relay.transform.InferType()(mod)
mutated_mod['func_10275'] = func_10275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10276 = relay.var("var_10276", dtype = "uint8", shape = (260,))#candidate|10276|(260,)|var|uint8
func_10275_call = mutated_mod.get_global_var('func_10275')
call_10277 = func_10275_call(var_10276)
output = call_10277
func_10278 = relay.Function([var_10276], output)
mutated_mod['func_10278'] = func_10278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5009_call = mod.get_global_var('func_5009')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_10327 = relay.TupleGetItem(func_5009_call(), 0)
call_10328 = relay.TupleGetItem(func_5011_call(), 0)
func_1816_call = mod.get_global_var('func_1816')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_10340 = relay.TupleGetItem(func_1816_call(), 2)
call_10341 = relay.TupleGetItem(func_1818_call(), 2)
output = relay.Tuple([call_10327,call_10340,])
output2 = relay.Tuple([call_10328,call_10341,])
func_10349 = relay.Function([], output)
mod['func_10349'] = func_10349
mod = relay.transform.InferType()(mod)
output = func_10349()
func_10350 = relay.Function([], output)
mutated_mod['func_10350'] = func_10350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8068_call = mod.get_global_var('func_8068')
func_8069_call = mutated_mod.get_global_var('func_8069')
call_10395 = relay.TupleGetItem(func_8068_call(), 0)
call_10396 = relay.TupleGetItem(func_8069_call(), 0)
output = call_10395
output2 = call_10396
func_10405 = relay.Function([], output)
mod['func_10405'] = func_10405
mod = relay.transform.InferType()(mod)
output = func_10405()
func_10406 = relay.Function([], output)
mutated_mod['func_10406'] = func_10406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3184_call = mod.get_global_var('func_3184')
func_3186_call = mutated_mod.get_global_var('func_3186')
call_10420 = relay.TupleGetItem(func_3184_call(), 1)
call_10421 = relay.TupleGetItem(func_3186_call(), 1)
func_10036_call = mod.get_global_var('func_10036')
func_10037_call = mutated_mod.get_global_var('func_10037')
call_10430 = relay.TupleGetItem(func_10036_call(), 0)
call_10431 = relay.TupleGetItem(func_10037_call(), 0)
output = relay.Tuple([call_10420,call_10430,])
output2 = relay.Tuple([call_10421,call_10431,])
func_10436 = relay.Function([], output)
mod['func_10436'] = func_10436
mod = relay.transform.InferType()(mod)
mutated_mod['func_10436'] = func_10436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10436_call = mutated_mod.get_global_var('func_10436')
call_10437 = func_10436_call()
output = call_10437
func_10438 = relay.Function([], output)
mutated_mod['func_10438'] = func_10438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_10548 = relay.TupleGetItem(func_3034_call(), 0)
call_10549 = relay.TupleGetItem(func_3035_call(), 0)
func_7208_call = mod.get_global_var('func_7208')
func_7209_call = mutated_mod.get_global_var('func_7209')
call_10551 = func_7208_call()
call_10552 = func_7208_call()
output = relay.Tuple([call_10548,call_10551,])
output2 = relay.Tuple([call_10549,call_10552,])
func_10555 = relay.Function([], output)
mod['func_10555'] = func_10555
mod = relay.transform.InferType()(mod)
output = func_10555()
func_10556 = relay.Function([], output)
mutated_mod['func_10556'] = func_10556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4478_call = mod.get_global_var('func_4478')
func_4479_call = mutated_mod.get_global_var('func_4479')
call_10567 = relay.TupleGetItem(func_4478_call(), 0)
call_10568 = relay.TupleGetItem(func_4479_call(), 0)
output = call_10567
output2 = call_10568
func_10576 = relay.Function([], output)
mod['func_10576'] = func_10576
mod = relay.transform.InferType()(mod)
mutated_mod['func_10576'] = func_10576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10576_call = mutated_mod.get_global_var('func_10576')
call_10577 = func_10576_call()
output = call_10577
func_10578 = relay.Function([], output)
mutated_mod['func_10578'] = func_10578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1918_call = mod.get_global_var('func_1918')
func_1919_call = mutated_mod.get_global_var('func_1919')
call_10701 = relay.TupleGetItem(func_1918_call(), 1)
call_10702 = relay.TupleGetItem(func_1919_call(), 1)
output = relay.Tuple([call_10701,])
output2 = relay.Tuple([call_10702,])
func_10705 = relay.Function([], output)
mod['func_10705'] = func_10705
mod = relay.transform.InferType()(mod)
output = func_10705()
func_10706 = relay.Function([], output)
mutated_mod['func_10706'] = func_10706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1937_call = mod.get_global_var('func_1937')
func_1939_call = mutated_mod.get_global_var('func_1939')
call_10729 = func_1937_call()
call_10730 = func_1937_call()
func_2394_call = mod.get_global_var('func_2394')
func_2396_call = mutated_mod.get_global_var('func_2396')
call_10737 = func_2394_call()
call_10738 = func_2394_call()
func_6036_call = mod.get_global_var('func_6036')
func_6037_call = mutated_mod.get_global_var('func_6037')
call_10743 = relay.TupleGetItem(func_6036_call(), 0)
call_10744 = relay.TupleGetItem(func_6037_call(), 0)
output = relay.Tuple([call_10729,call_10737,call_10743,])
output2 = relay.Tuple([call_10730,call_10738,call_10744,])
func_10755 = relay.Function([], output)
mod['func_10755'] = func_10755
mod = relay.transform.InferType()(mod)
mutated_mod['func_10755'] = func_10755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10755_call = mutated_mod.get_global_var('func_10755')
call_10756 = func_10755_call()
output = call_10756
func_10757 = relay.Function([], output)
mutated_mod['func_10757'] = func_10757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10770 = relay.var("var_10770", dtype = "int16", shape = (8, 4, 5))#candidate|10770|(8, 4, 5)|var|int16
var_10771 = relay.var("var_10771", dtype = "int16", shape = (8, 4, 5))#candidate|10771|(8, 4, 5)|var|int16
bop_10772 = relay.less_equal(var_10770.astype('bool'), relay.reshape(var_10771.astype('bool'), relay.shape_of(var_10770))) # shape=(8, 4, 5)
output = bop_10772
output2 = bop_10772
func_10778 = relay.Function([var_10770,var_10771,], output)
mod['func_10778'] = func_10778
mod = relay.transform.InferType()(mod)
var_10779 = relay.var("var_10779", dtype = "int16", shape = (8, 4, 5))#candidate|10779|(8, 4, 5)|var|int16
var_10780 = relay.var("var_10780", dtype = "int16", shape = (8, 4, 5))#candidate|10780|(8, 4, 5)|var|int16
output = func_10778(var_10779,var_10780,)
func_10781 = relay.Function([var_10779,var_10780,], output)
mutated_mod['func_10781'] = func_10781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4478_call = mod.get_global_var('func_4478')
func_4479_call = mutated_mod.get_global_var('func_4479')
call_10807 = relay.TupleGetItem(func_4478_call(), 0)
call_10808 = relay.TupleGetItem(func_4479_call(), 0)
output = relay.Tuple([call_10807,])
output2 = relay.Tuple([call_10808,])
func_10822 = relay.Function([], output)
mod['func_10822'] = func_10822
mod = relay.transform.InferType()(mod)
mutated_mod['func_10822'] = func_10822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10822_call = mutated_mod.get_global_var('func_10822')
call_10823 = func_10822_call()
output = call_10823
func_10824 = relay.Function([], output)
mutated_mod['func_10824'] = func_10824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_10825 = relay.TupleGetItem(func_1191_call(), 0)
call_10826 = relay.TupleGetItem(func_1193_call(), 0)
output = call_10825
output2 = call_10826
func_10853 = relay.Function([], output)
mod['func_10853'] = func_10853
mod = relay.transform.InferType()(mod)
output = func_10853()
func_10854 = relay.Function([], output)
mutated_mod['func_10854'] = func_10854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6021_call = mod.get_global_var('func_6021')
func_6023_call = mutated_mod.get_global_var('func_6023')
call_10940 = func_6021_call()
call_10941 = func_6021_call()
output = call_10940
output2 = call_10941
func_10947 = relay.Function([], output)
mod['func_10947'] = func_10947
mod = relay.transform.InferType()(mod)
output = func_10947()
func_10948 = relay.Function([], output)
mutated_mod['func_10948'] = func_10948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_10970 = relay.TupleGetItem(func_3034_call(), 0)
call_10971 = relay.TupleGetItem(func_3035_call(), 0)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_10975 = relay.TupleGetItem(func_3034_call(), 0)
call_10976 = relay.TupleGetItem(func_3035_call(), 0)
func_1274_call = mod.get_global_var('func_1274')
func_1276_call = mutated_mod.get_global_var('func_1276')
const_10984 = relay.const([2.463163,0.241750,-4.239494,-4.445560,-7.322695,-5.563501,9.418665,0.958481,-8.886276,5.044456,-5.561540,-4.737918,-4.784442,-5.564590,9.621707,8.408269,1.065235,-2.465677,3.936296,5.533292,7.944928,-8.252731,7.510944,6.927472,-4.323981,9.785094,-1.355387,-0.301960,-9.315375,-6.173397,2.561023,9.408450,-2.497646,-8.593297,-5.841770,-0.759961,9.746412,-2.708483,-1.821024,-1.435673,-6.927839,2.492140,7.406460,4.068174,-5.347281,-2.565353,-6.862724,-9.150574,4.024547,-2.195060,-0.837949,-4.552493,9.762266,-4.134908,-2.606913,2.754008,0.584616,0.509739,-3.252755,-1.710357,-3.621929,-8.613458,-5.208335,0.192383,3.264989,-6.926149,-8.819228,4.954338,9.660302,3.765480,-8.905527,4.797785,8.055526,1.153326,4.998412,-3.876952,-6.358982,-0.295617,2.648019,-7.777963,1.684909,8.589360,1.479820,-1.738148,-3.184033,-3.159487,-1.384248,-2.316758,-6.547478,1.705820,-5.487692,0.405367,9.759249,2.176751,-0.286506,3.509246,-7.052724,7.208487,-2.824290,9.138524,-0.038630,5.888134,6.287344,-8.181822,1.269620,7.584968,-6.513694,-2.177737,3.227968,-5.206049,-1.808272,7.993570,-6.539332,-0.229311,-0.711270,-6.215436,-9.079022,6.953498,7.311320,6.636704,-0.655508,-2.641613,-6.037784,-4.552255,9.541831,1.179553,-7.315398,-3.413924,8.310447,9.442892,-6.216972,-6.341306,-9.339302,-7.045384,-3.398413,-3.590804,9.604199,6.881198,-0.850550,3.631970,-1.418203,9.346812,5.114697,-1.321555,-5.153556,3.238600,4.385215,1.703540,0.674049,7.904837,-4.199811,-2.519860,2.876418,2.427925,7.559238,9.908797,5.856016,2.767256,-4.587813,5.866110,1.462327,-2.715510,7.943031,-5.700699,2.026303,-9.186462,-2.809079,4.449040,-6.304891,5.720575,6.704166,4.353590,3.861122,-8.627685,-0.862630,-7.877050,-6.274898,-5.042423,8.822226,-3.065109,9.747957,-2.986265,-5.074004,3.133483,-6.397060,-4.646411,9.940717,-2.294327,-5.144912,-0.668054,-6.466191,8.947968,8.026317,-7.893230,-7.192439,-5.966759,6.765334,2.117001,-4.854716,-5.334816,9.831710,7.450045,0.225824,6.332240,-1.821628,-0.137981,7.191976,8.371897,-9.668705,4.532861,-6.134176,-0.154986,-7.799019,3.712530,-5.323486,4.756445,4.487289,-9.167434,-8.633095,-3.019675,8.354007,6.326051,-8.577224,-7.426963,5.110591,-8.069320,1.077330,3.978611,-3.450052,-0.454246,8.541233,1.229762,-6.500464,1.784462,3.325489,4.680294,-6.593218,0.066576,1.796570,3.901900,0.353594,3.074416,-8.980684,-7.121490,6.781785,0.064540,-4.156327,7.907910,-2.512425,8.514240,2.119178,1.446306,-5.264873,-6.566276,-7.252589,-0.699981,0.632663,-7.680797,-1.381104,1.504175,1.199966,-3.281330,5.598639,1.940944,-8.746611,2.557606,6.109562,-5.874233,-2.070574,-2.737633,-2.536962,-2.334114,-9.726658,-8.856176,-5.021870,-1.201321,-3.933128,2.906786,8.376866,-7.542737,-7.097912,3.544995,-2.600752,8.838743,-0.045452,2.276319,-9.062322,7.490332,-6.655325,3.835009,0.267281,-5.984043,4.504097,9.366854,-1.193953,-0.379826,4.594998,0.632536,2.473769,-0.826654,-3.719954,6.095942,-2.049575,2.246844,-4.839771,5.702027,-3.532701,5.848397,5.372921,-9.687591,-3.126933,-3.636724,-9.625377,8.449324,-2.684374,-0.189676,1.275920,0.983493,-1.859162,-6.819021,-9.198972,-9.626594,-7.101687,-6.330211,-0.032201,9.720645,7.846024,-8.699966,7.382884,-2.442791,-2.926027,-4.562323,-6.219781,0.544974,-9.000016,2.429834,7.152151,-0.470259,3.088996,2.698792,6.903820,1.085511,3.513525,6.073735,6.138158,-3.396939,-2.582094,-6.967255,7.652435,8.469757,1.785248,-9.267593,-4.996466,-3.719629,2.703890,2.989984,1.663301,5.647265,-3.559970,0.466051,-4.313060,0.983148,1.339160,6.467470,5.553516,-0.430127,9.330916,3.863001,8.631745,-2.321841,-5.982015,-8.577699,-4.026371,-0.979792,-2.988489,-8.484543,0.328792,4.089498,2.129070,8.200545,8.478093,-9.814111,-7.491224,-4.773750,2.030858,-4.686997,-3.654064,8.871151,4.494206,9.719182,-0.255145,-7.649594,-8.867448,-2.314840,3.662737,-5.320135,9.863202,2.698234,2.347740,-4.975342,-5.976803,-5.643647,5.022521,0.783430,0.853987,-6.203010,5.185613,8.545968,-5.943391,0.165164,-5.031165,-7.550389,-0.053879,4.214359,1.178705,1.270194,3.379297,-3.985211,2.378630,0.028900,-5.780625,-6.991673,-1.173094,0.808646,4.180006,-6.387117,7.611327,-1.279173,7.713298,4.656891,3.229727,-6.826442,-6.694015,5.833062,2.874985,-9.661120,-6.792057,2.110324,-3.032879,0.563933,2.368164,3.123889,-5.748715,1.364911,-4.320405,-9.860511,6.167574,-1.578380,5.296202,8.945778,-8.797724,-8.465442,4.097816,2.069091,5.972713,6.418137,8.982718,3.224216,-4.694000,7.499079,3.693481,-7.704384,-9.835330,-3.823931,-1.320045,-4.545930,8.420399,3.545642,-1.444178,-6.615987,2.548737,4.092971,8.565215,-9.674820,9.721216,-8.047095,9.760977,3.896627,3.835102,5.606297,8.451393,-0.772434,1.497424,7.784750,-3.670575,7.286980,-2.241585,-0.172835,0.559645,5.917892,-3.637417,9.215211,0.183559,-5.692853,-1.645819,-6.718570,9.055468,-5.839338,1.160569,8.427844,1.277790,5.397425,2.645360,7.355078,0.411471,4.530057,-2.564153,1.875783,1.857674,-7.278756,-1.081099,5.408761,8.473964,-8.341293,-5.241504,7.674712,-9.666813,4.461122,-1.507358,-6.398372,3.339901,-7.457626,-0.498974,6.023886,1.997935,7.780597,5.703480,4.390291,-9.279369,5.468455,3.652240,-4.792949,2.156550,6.803538,7.814853,8.259113,7.365453,-2.324132,-6.973523,3.460979,-2.258301,1.434502,-8.648485,-1.197261,-7.562994,9.423247,-2.113451,4.096319,1.034388,-1.201264,-8.470070,8.080123,7.734223,5.882176,-0.877428,3.686334,8.106040,-3.447222,5.320209,-5.476639,-3.817625,-0.841461,5.444913,-9.473856,-7.983719,5.117401,5.620224,9.108729,5.217662,-4.361248,5.625732,-1.109453,-8.047170,-6.738192,2.225202,0.447070,-5.418590,6.494883,0.100597,-2.980194,-4.454962,-2.139303,0.692100,-0.389307,-2.194861,-8.779017,-4.616861,-2.019232,0.929013,-4.333852,4.043572,-4.587177,1.752209,7.267760,9.515760,3.267219,-6.137015,6.147300,1.438600,-6.117750,-9.151108,9.218591,2.342447,9.321623,3.421719,0.029202,3.166988,-7.937443,9.235322,3.552861,-9.360687,-6.129064,-2.093409,-4.375282,3.453117,2.787272,4.829567,-7.686423,-0.598708,0.720419,-8.974845,-1.275445,-0.566644,-2.298509,6.493190,-0.705687,-5.991244,-9.294280,6.720303,-1.632912,7.674201,-1.089687,7.527074,2.896273,2.832354,6.281992,9.384313,6.984738,-8.860592,-4.104608,-3.241510,8.526900,1.194951,0.693966,-2.760498,-5.543863,-6.022617,-7.399119,4.440760,8.445331,-2.273115,-8.198677,9.445307,3.197141,-9.272734,8.523197,6.681188,8.297363,-7.285180,5.337295,6.380267,-8.471029,-9.488690,5.253631,-3.410913,-7.165276,0.667558,-0.520847,1.549636,-1.202512,4.342944,-9.755112,0.012944,-0.699948,-4.490582,-7.976259,2.734933,6.196120,-8.246793,5.556235,-7.661693,9.490571,0.956187,-4.383876,-3.323115,-4.517696,-2.581472,-1.983646,-6.006640,8.887235,-2.662364,-4.834698,-9.677138,1.135213,-5.660895,8.877936,3.949097,-2.298879,-8.383315,8.177202,-5.823366,8.584560,-8.583587,-6.861051,-1.669492,4.043511,9.556221,-6.161448,-4.064404,-3.338192,-4.542305,6.054655,9.937475,-8.453535,-3.758734,-4.698273,2.426522,8.740930,1.545301,6.192022,2.069404,-3.359503,-8.025652,-5.118830,-8.769722,-5.549369,-2.072292,-5.839016], dtype = "float32")#candidate|10984|(728,)|const|float32
call_10983 = relay.TupleGetItem(func_1274_call(relay.reshape(const_10984.astype('float32'), [728,])), 0)
call_10985 = relay.TupleGetItem(func_1276_call(relay.reshape(const_10984.astype('float32'), [728,])), 0)
output = relay.Tuple([call_10970,call_10975,call_10983,const_10984,])
output2 = relay.Tuple([call_10971,call_10976,call_10985,const_10984,])
func_10986 = relay.Function([], output)
mod['func_10986'] = func_10986
mod = relay.transform.InferType()(mod)
mutated_mod['func_10986'] = func_10986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10986_call = mutated_mod.get_global_var('func_10986')
call_10987 = func_10986_call()
output = call_10987
func_10988 = relay.Function([], output)
mutated_mod['func_10988'] = func_10988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8166_call = mod.get_global_var('func_8166')
func_8168_call = mutated_mod.get_global_var('func_8168')
call_11004 = relay.TupleGetItem(func_8166_call(), 2)
call_11005 = relay.TupleGetItem(func_8168_call(), 2)
var_11006 = relay.var("var_11006", dtype = "float32", shape = (1440,))#candidate|11006|(1440,)|var|float32
bop_11007 = relay.minimum(call_11004.astype('uint64'), relay.reshape(var_11006.astype('uint64'), relay.shape_of(call_11004))) # shape=(1440,)
bop_11010 = relay.minimum(call_11005.astype('uint64'), relay.reshape(var_11006.astype('uint64'), relay.shape_of(call_11005))) # shape=(1440,)
func_9326_call = mod.get_global_var('func_9326')
func_9329_call = mutated_mod.get_global_var('func_9329')
var_11012 = relay.var("var_11012", dtype = "float32", shape = (1008,))#candidate|11012|(1008,)|var|float32
call_11011 = relay.TupleGetItem(func_9326_call(relay.reshape(var_11012.astype('float32'), [9, 14, 8]), relay.reshape(var_11012.astype('bool'), [9, 14, 8]), ), 1)
call_11013 = relay.TupleGetItem(func_9329_call(relay.reshape(var_11012.astype('float32'), [9, 14, 8]), relay.reshape(var_11012.astype('bool'), [9, 14, 8]), ), 1)
output = relay.Tuple([bop_11007,call_11011,var_11012,])
output2 = relay.Tuple([bop_11010,call_11013,var_11012,])
func_11021 = relay.Function([var_11006,var_11012,], output)
mod['func_11021'] = func_11021
mod = relay.transform.InferType()(mod)
var_11022 = relay.var("var_11022", dtype = "float32", shape = (1440,))#candidate|11022|(1440,)|var|float32
var_11023 = relay.var("var_11023", dtype = "float32", shape = (1008,))#candidate|11023|(1008,)|var|float32
output = func_11021(var_11022,var_11023,)
func_11024 = relay.Function([var_11022,var_11023,], output)
mutated_mod['func_11024'] = func_11024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6731_call = mod.get_global_var('func_6731')
func_6733_call = mutated_mod.get_global_var('func_6733')
call_11056 = relay.TupleGetItem(func_6731_call(), 0)
call_11057 = relay.TupleGetItem(func_6733_call(), 0)
output = relay.Tuple([call_11056,])
output2 = relay.Tuple([call_11057,])
func_11067 = relay.Function([], output)
mod['func_11067'] = func_11067
mod = relay.transform.InferType()(mod)
output = func_11067()
func_11068 = relay.Function([], output)
mutated_mod['func_11068'] = func_11068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_11216 = relay.TupleGetItem(func_1191_call(), 0)
call_11217 = relay.TupleGetItem(func_1193_call(), 0)
output = relay.Tuple([call_11216,])
output2 = relay.Tuple([call_11217,])
func_11218 = relay.Function([], output)
mod['func_11218'] = func_11218
mod = relay.transform.InferType()(mod)
output = func_11218()
func_11219 = relay.Function([], output)
mutated_mod['func_11219'] = func_11219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6119_call = mod.get_global_var('func_6119')
func_6121_call = mutated_mod.get_global_var('func_6121')
call_11273 = relay.TupleGetItem(func_6119_call(), 0)
call_11274 = relay.TupleGetItem(func_6121_call(), 0)
output = call_11273
output2 = call_11274
func_11287 = relay.Function([], output)
mod['func_11287'] = func_11287
mod = relay.transform.InferType()(mod)
mutated_mod['func_11287'] = func_11287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11287_call = mutated_mod.get_global_var('func_11287')
call_11288 = func_11287_call()
output = call_11288
func_11289 = relay.Function([], output)
mutated_mod['func_11289'] = func_11289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11298 = relay.var("var_11298", dtype = "float64", shape = (11, 15, 11))#candidate|11298|(11, 15, 11)|var|float64
uop_11299 = relay.log2(var_11298.astype('float64')) # shape=(11, 15, 11)
func_4478_call = mod.get_global_var('func_4478')
func_4479_call = mutated_mod.get_global_var('func_4479')
call_11305 = relay.TupleGetItem(func_4478_call(), 0)
call_11306 = relay.TupleGetItem(func_4479_call(), 0)
output = relay.Tuple([uop_11299,call_11305,])
output2 = relay.Tuple([uop_11299,call_11306,])
func_11311 = relay.Function([var_11298,], output)
mod['func_11311'] = func_11311
mod = relay.transform.InferType()(mod)
mutated_mod['func_11311'] = func_11311
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11312 = relay.var("var_11312", dtype = "float64", shape = (11, 15, 11))#candidate|11312|(11, 15, 11)|var|float64
func_11311_call = mutated_mod.get_global_var('func_11311')
call_11313 = func_11311_call(var_11312)
output = call_11313
func_11314 = relay.Function([var_11312], output)
mutated_mod['func_11314'] = func_11314
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11333 = relay.var("var_11333", dtype = "float32", shape = (15, 10, 11))#candidate|11333|(15, 10, 11)|var|float32
uop_11334 = relay.atanh(var_11333.astype('float32')) # shape=(15, 10, 11)
func_1745_call = mod.get_global_var('func_1745')
func_1746_call = mutated_mod.get_global_var('func_1746')
call_11341 = relay.TupleGetItem(func_1745_call(), 1)
call_11342 = relay.TupleGetItem(func_1746_call(), 1)
func_8531_call = mod.get_global_var('func_8531')
func_8532_call = mutated_mod.get_global_var('func_8532')
call_11345 = func_8531_call()
call_11346 = func_8531_call()
output = relay.Tuple([uop_11334,call_11341,call_11345,])
output2 = relay.Tuple([uop_11334,call_11342,call_11346,])
func_11359 = relay.Function([var_11333,], output)
mod['func_11359'] = func_11359
mod = relay.transform.InferType()(mod)
var_11360 = relay.var("var_11360", dtype = "float32", shape = (15, 10, 11))#candidate|11360|(15, 10, 11)|var|float32
output = func_11359(var_11360)
func_11361 = relay.Function([var_11360], output)
mutated_mod['func_11361'] = func_11361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7792_call = mod.get_global_var('func_7792')
func_7793_call = mutated_mod.get_global_var('func_7793')
call_11375 = relay.TupleGetItem(func_7792_call(), 0)
call_11376 = relay.TupleGetItem(func_7793_call(), 0)
func_3908_call = mod.get_global_var('func_3908')
func_3910_call = mutated_mod.get_global_var('func_3910')
var_11387 = relay.var("var_11387", dtype = "float32", shape = (300,))#candidate|11387|(300,)|var|float32
call_11386 = relay.TupleGetItem(func_3908_call(relay.reshape(var_11387.astype('float32'), [300,])), 2)
call_11388 = relay.TupleGetItem(func_3910_call(relay.reshape(var_11387.astype('float32'), [300,])), 2)
func_1918_call = mod.get_global_var('func_1918')
func_1919_call = mutated_mod.get_global_var('func_1919')
call_11440 = relay.TupleGetItem(func_1918_call(), 1)
call_11441 = relay.TupleGetItem(func_1919_call(), 1)
uop_11446 = relay.sin(call_11440.astype('float64')) # shape=(2, 720)
uop_11448 = relay.sin(call_11441.astype('float64')) # shape=(2, 720)
func_4607_call = mod.get_global_var('func_4607')
func_4608_call = mutated_mod.get_global_var('func_4608')
call_11451 = func_4607_call()
call_11452 = func_4607_call()
func_1299_call = mod.get_global_var('func_1299')
func_1300_call = mutated_mod.get_global_var('func_1300')
call_11457 = func_1299_call()
call_11458 = func_1299_call()
uop_11463 = relay.asinh(uop_11446.astype('float64')) # shape=(2, 720)
uop_11465 = relay.asinh(uop_11448.astype('float64')) # shape=(2, 720)
func_6548_call = mod.get_global_var('func_6548')
func_6549_call = mutated_mod.get_global_var('func_6549')
call_11466 = relay.TupleGetItem(func_6548_call(), 0)
call_11467 = relay.TupleGetItem(func_6549_call(), 0)
output = relay.Tuple([call_11375,call_11386,var_11387,call_11451,call_11457,uop_11463,call_11466,])
output2 = relay.Tuple([call_11376,call_11388,var_11387,call_11452,call_11458,uop_11465,call_11467,])
func_11483 = relay.Function([var_11387,], output)
mod['func_11483'] = func_11483
mod = relay.transform.InferType()(mod)
var_11484 = relay.var("var_11484", dtype = "float32", shape = (300,))#candidate|11484|(300,)|var|float32
output = func_11483(var_11484)
func_11485 = relay.Function([var_11484], output)
mutated_mod['func_11485'] = func_11485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4000_call = mod.get_global_var('func_4000')
func_4002_call = mutated_mod.get_global_var('func_4002')
call_11493 = func_4000_call()
call_11494 = func_4000_call()
output = call_11493
output2 = call_11494
func_11522 = relay.Function([], output)
mod['func_11522'] = func_11522
mod = relay.transform.InferType()(mod)
mutated_mod['func_11522'] = func_11522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11522_call = mutated_mod.get_global_var('func_11522')
call_11523 = func_11522_call()
output = call_11523
func_11524 = relay.Function([], output)
mutated_mod['func_11524'] = func_11524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2727_call = mod.get_global_var('func_2727')
func_2728_call = mutated_mod.get_global_var('func_2728')
call_11553 = relay.TupleGetItem(func_2727_call(), 0)
call_11554 = relay.TupleGetItem(func_2728_call(), 0)
func_8604_call = mod.get_global_var('func_8604')
func_8605_call = mutated_mod.get_global_var('func_8605')
call_11562 = func_8604_call()
call_11563 = func_8604_call()
output = relay.Tuple([call_11553,call_11562,])
output2 = relay.Tuple([call_11554,call_11563,])
func_11577 = relay.Function([], output)
mod['func_11577'] = func_11577
mod = relay.transform.InferType()(mod)
output = func_11577()
func_11578 = relay.Function([], output)
mutated_mod['func_11578'] = func_11578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6021_call = mod.get_global_var('func_6021')
func_6023_call = mutated_mod.get_global_var('func_6023')
call_11601 = func_6021_call()
call_11602 = func_6021_call()
output = relay.Tuple([call_11601,])
output2 = relay.Tuple([call_11602,])
func_11603 = relay.Function([], output)
mod['func_11603'] = func_11603
mod = relay.transform.InferType()(mod)
mutated_mod['func_11603'] = func_11603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11603_call = mutated_mod.get_global_var('func_11603')
call_11604 = func_11603_call()
output = call_11604
func_11605 = relay.Function([], output)
mutated_mod['func_11605'] = func_11605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4607_call = mod.get_global_var('func_4607')
func_4608_call = mutated_mod.get_global_var('func_4608')
call_11623 = func_4607_call()
call_11624 = func_4607_call()
output = relay.Tuple([call_11623,])
output2 = relay.Tuple([call_11624,])
func_11625 = relay.Function([], output)
mod['func_11625'] = func_11625
mod = relay.transform.InferType()(mod)
output = func_11625()
func_11626 = relay.Function([], output)
mutated_mod['func_11626'] = func_11626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3323_call = mod.get_global_var('func_3323')
func_3324_call = mutated_mod.get_global_var('func_3324')
call_11655 = relay.TupleGetItem(func_3323_call(), 0)
call_11656 = relay.TupleGetItem(func_3324_call(), 0)
func_4328_call = mod.get_global_var('func_4328')
func_4332_call = mutated_mod.get_global_var('func_4332')
var_11674 = relay.var("var_11674", dtype = "uint64", shape = (864,))#candidate|11674|(864,)|var|uint64
call_11673 = func_4328_call(relay.reshape(var_11674.astype('uint64'), [9, 12, 8]), relay.reshape(var_11674.astype('uint64'), [9, 12, 8]), )
call_11675 = func_4328_call(relay.reshape(var_11674.astype('uint64'), [9, 12, 8]), relay.reshape(var_11674.astype('uint64'), [9, 12, 8]), )
func_3872_call = mod.get_global_var('func_3872')
func_3875_call = mutated_mod.get_global_var('func_3875')
var_11684 = relay.var("var_11684", dtype = "float32", shape = (832,))#candidate|11684|(832,)|var|float32
call_11683 = relay.TupleGetItem(func_3872_call(relay.reshape(var_11684.astype('float32'), [8, 13, 8])), 0)
call_11685 = relay.TupleGetItem(func_3875_call(relay.reshape(var_11684.astype('float32'), [8, 13, 8])), 0)
output = relay.Tuple([call_11655,call_11673,var_11674,call_11683,var_11684,])
output2 = relay.Tuple([call_11656,call_11675,var_11674,call_11685,var_11684,])
func_11686 = relay.Function([var_11674,var_11684,], output)
mod['func_11686'] = func_11686
mod = relay.transform.InferType()(mod)
var_11687 = relay.var("var_11687", dtype = "uint64", shape = (864,))#candidate|11687|(864,)|var|uint64
var_11688 = relay.var("var_11688", dtype = "float32", shape = (832,))#candidate|11688|(832,)|var|float32
output = func_11686(var_11687,var_11688,)
func_11689 = relay.Function([var_11687,var_11688,], output)
mutated_mod['func_11689'] = func_11689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2370_call = mod.get_global_var('func_2370')
func_2372_call = mutated_mod.get_global_var('func_2372')
call_11714 = relay.TupleGetItem(func_2370_call(), 1)
call_11715 = relay.TupleGetItem(func_2372_call(), 1)
func_5470_call = mod.get_global_var('func_5470')
func_5472_call = mutated_mod.get_global_var('func_5472')
call_11716 = func_5470_call()
call_11717 = func_5470_call()
func_8470_call = mod.get_global_var('func_8470')
func_8472_call = mutated_mod.get_global_var('func_8472')
call_11728 = relay.TupleGetItem(func_8470_call(relay.reshape(call_11716.astype('int64'), [10, 16, 13])), 1)
call_11729 = relay.TupleGetItem(func_8472_call(relay.reshape(call_11716.astype('int64'), [10, 16, 13])), 1)
output = relay.Tuple([call_11714,call_11716,call_11728,])
output2 = relay.Tuple([call_11715,call_11717,call_11729,])
func_11732 = relay.Function([], output)
mod['func_11732'] = func_11732
mod = relay.transform.InferType()(mod)
mutated_mod['func_11732'] = func_11732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11732_call = mutated_mod.get_global_var('func_11732')
call_11733 = func_11732_call()
output = call_11733
func_11734 = relay.Function([], output)
mutated_mod['func_11734'] = func_11734
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11783 = relay.var("var_11783", dtype = "uint64", shape = (5, 1, 11))#candidate|11783|(5, 1, 11)|var|uint64
var_11784 = relay.var("var_11784", dtype = "uint64", shape = (5, 6, 11))#candidate|11784|(5, 6, 11)|var|uint64
bop_11785 = relay.logical_xor(var_11783.astype('uint64'), var_11784.astype('uint64')) # shape=(5, 6, 11)
bop_11793 = relay.subtract(bop_11785.astype('int64'), var_11783.astype('int64')) # shape=(5, 6, 11)
func_5141_call = mod.get_global_var('func_5141')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_11796 = func_5141_call()
call_11797 = func_5141_call()
func_1176_call = mod.get_global_var('func_1176')
func_1178_call = mutated_mod.get_global_var('func_1178')
var_11800 = relay.var("var_11800", dtype = "float32", shape = (1440,))#candidate|11800|(1440,)|var|float32
call_11799 = func_1176_call(relay.reshape(var_11800.astype('float32'), [15, 8, 12]))
call_11801 = func_1176_call(relay.reshape(var_11800.astype('float32'), [15, 8, 12]))
uop_11803 = relay.log(var_11783.astype('float64')) # shape=(5, 1, 11)
func_1937_call = mod.get_global_var('func_1937')
func_1939_call = mutated_mod.get_global_var('func_1939')
call_11805 = func_1937_call()
call_11806 = func_1937_call()
output = relay.Tuple([bop_11793,call_11796,call_11799,var_11800,uop_11803,call_11805,])
output2 = relay.Tuple([bop_11793,call_11797,call_11801,var_11800,uop_11803,call_11806,])
func_11812 = relay.Function([var_11783,var_11784,var_11800,], output)
mod['func_11812'] = func_11812
mod = relay.transform.InferType()(mod)
mutated_mod['func_11812'] = func_11812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11812_call = mutated_mod.get_global_var('func_11812')
var_11814 = relay.var("var_11814", dtype = "uint64", shape = (5, 1, 11))#candidate|11814|(5, 1, 11)|var|uint64
var_11815 = relay.var("var_11815", dtype = "uint64", shape = (5, 6, 11))#candidate|11815|(5, 6, 11)|var|uint64
var_11816 = relay.var("var_11816", dtype = "float32", shape = (1440,))#candidate|11816|(1440,)|var|float32
call_11813 = func_11812_call(var_11814,var_11815,var_11816,)
output = call_11813
func_11817 = relay.Function([var_11814,var_11815,var_11816,], output)
mutated_mod['func_11817'] = func_11817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6731_call = mod.get_global_var('func_6731')
func_6733_call = mutated_mod.get_global_var('func_6733')
call_11822 = relay.TupleGetItem(func_6731_call(), 1)
call_11823 = relay.TupleGetItem(func_6733_call(), 1)
output = relay.Tuple([call_11822,])
output2 = relay.Tuple([call_11823,])
func_11835 = relay.Function([], output)
mod['func_11835'] = func_11835
mod = relay.transform.InferType()(mod)
output = func_11835()
func_11836 = relay.Function([], output)
mutated_mod['func_11836'] = func_11836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1918_call = mod.get_global_var('func_1918')
func_1919_call = mutated_mod.get_global_var('func_1919')
call_11870 = relay.TupleGetItem(func_1918_call(), 1)
call_11871 = relay.TupleGetItem(func_1919_call(), 1)
func_10555_call = mod.get_global_var('func_10555')
func_10556_call = mutated_mod.get_global_var('func_10556')
call_11903 = relay.TupleGetItem(func_10555_call(), 0)
call_11904 = relay.TupleGetItem(func_10556_call(), 0)
output = relay.Tuple([call_11870,call_11903,])
output2 = relay.Tuple([call_11871,call_11904,])
func_11910 = relay.Function([], output)
mod['func_11910'] = func_11910
mod = relay.transform.InferType()(mod)
mutated_mod['func_11910'] = func_11910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11910_call = mutated_mod.get_global_var('func_11910')
call_11911 = func_11910_call()
output = call_11911
func_11912 = relay.Function([], output)
mutated_mod['func_11912'] = func_11912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3323_call = mod.get_global_var('func_3323')
func_3324_call = mutated_mod.get_global_var('func_3324')
call_11931 = relay.TupleGetItem(func_3323_call(), 1)
call_11932 = relay.TupleGetItem(func_3324_call(), 1)
output = relay.Tuple([call_11931,])
output2 = relay.Tuple([call_11932,])
func_11946 = relay.Function([], output)
mod['func_11946'] = func_11946
mod = relay.transform.InferType()(mod)
output = func_11946()
func_11947 = relay.Function([], output)
mutated_mod['func_11947'] = func_11947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8309_call = mod.get_global_var('func_8309')
func_8310_call = mutated_mod.get_global_var('func_8310')
call_11984 = relay.TupleGetItem(func_8309_call(), 0)
call_11985 = relay.TupleGetItem(func_8310_call(), 0)
func_11218_call = mod.get_global_var('func_11218')
func_11219_call = mutated_mod.get_global_var('func_11219')
call_11986 = relay.TupleGetItem(func_11218_call(), 0)
call_11987 = relay.TupleGetItem(func_11219_call(), 0)
func_11835_call = mod.get_global_var('func_11835')
func_11836_call = mutated_mod.get_global_var('func_11836')
call_11993 = relay.TupleGetItem(func_11835_call(), 0)
call_11994 = relay.TupleGetItem(func_11836_call(), 0)
output = relay.Tuple([call_11984,call_11986,call_11993,])
output2 = relay.Tuple([call_11985,call_11987,call_11994,])
func_11995 = relay.Function([], output)
mod['func_11995'] = func_11995
mod = relay.transform.InferType()(mod)
output = func_11995()
func_11996 = relay.Function([], output)
mutated_mod['func_11996'] = func_11996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3115_call = mod.get_global_var('func_3115')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_12011 = relay.TupleGetItem(func_3115_call(), 1)
call_12012 = relay.TupleGetItem(func_3116_call(), 1)
output = call_12011
output2 = call_12012
func_12018 = relay.Function([], output)
mod['func_12018'] = func_12018
mod = relay.transform.InferType()(mod)
mutated_mod['func_12018'] = func_12018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12018_call = mutated_mod.get_global_var('func_12018')
call_12019 = func_12018_call()
output = call_12019
func_12020 = relay.Function([], output)
mutated_mod['func_12020'] = func_12020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1816_call = mod.get_global_var('func_1816')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_12027 = relay.TupleGetItem(func_1816_call(), 1)
call_12028 = relay.TupleGetItem(func_1818_call(), 1)
output = relay.Tuple([call_12027,])
output2 = relay.Tuple([call_12028,])
func_12033 = relay.Function([], output)
mod['func_12033'] = func_12033
mod = relay.transform.InferType()(mod)
output = func_12033()
func_12034 = relay.Function([], output)
mutated_mod['func_12034'] = func_12034
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12038 = relay.const([[[True,True,True,False,False,True,True,False,True,False,False,True,True,False],[False,True,True,True,True,True,False,False,True,False,False,False,True,True],[True,False,True,False,True,False,False,True,False,True,False,True,True,False],[True,True,True,True,False,False,False,True,True,False,True,False,False,False],[True,False,True,False,False,False,True,False,True,True,True,True,True,True],[False,False,False,True,True,True,False,False,True,False,True,True,True,True],[True,True,True,False,True,False,True,False,False,False,False,True,True,True],[False,False,True,True,True,True,False,False,False,True,False,True,True,False],[False,False,True,False,False,False,False,True,False,True,True,False,True,True],[False,True,True,False,True,False,True,False,True,False,True,True,True,True],[False,False,True,True,True,False,True,True,False,True,False,False,True,False],[True,False,True,True,True,False,True,True,False,True,True,True,True,False]],[[False,False,False,True,False,True,False,True,False,True,False,False,False,True],[True,True,True,False,False,False,True,True,True,False,False,True,True,False],[True,False,False,True,False,False,False,True,False,False,False,False,True,True],[False,False,False,True,True,True,True,True,True,False,True,False,True,True],[False,False,True,True,True,False,False,True,False,True,False,False,True,True],[False,True,False,True,True,False,False,False,True,False,False,False,False,True],[True,True,False,True,False,False,False,True,False,False,False,False,True,True],[True,True,False,True,False,False,False,True,False,True,True,True,True,True],[True,True,False,False,True,True,True,True,True,True,False,True,False,False],[True,True,True,False,False,True,False,False,True,False,True,True,True,True],[False,False,False,False,False,True,False,True,False,False,False,True,True,False],[False,True,False,True,True,False,False,True,True,False,False,True,False,True]],[[False,False,False,True,False,True,True,False,False,True,True,False,True,True],[True,True,True,True,False,False,False,True,False,False,True,True,False,True],[False,True,False,True,True,True,False,True,False,True,False,False,False,True],[False,False,True,True,True,False,False,True,False,False,True,False,True,False],[False,True,True,False,False,True,True,True,False,True,True,False,False,True],[False,True,False,False,True,True,True,False,False,True,True,False,False,False],[True,True,False,True,False,True,True,True,True,True,False,True,False,True],[False,True,False,False,False,True,True,True,False,False,True,False,False,False],[True,False,True,False,True,True,True,True,True,False,False,False,True,True],[True,False,False,True,True,True,False,True,False,True,False,False,True,True],[True,True,True,False,True,False,False,False,False,True,False,True,True,False],[True,True,True,False,True,False,False,False,True,False,True,True,True,True]],[[True,False,False,False,False,True,False,True,False,False,False,False,True,False],[True,True,False,False,False,False,False,True,False,False,True,True,False,False],[False,True,True,True,False,True,False,False,False,False,True,False,True,True],[False,False,True,True,True,False,True,True,False,False,False,False,False,True],[True,True,True,True,False,False,False,False,True,False,False,False,True,False],[False,False,True,True,False,True,False,False,True,False,True,True,False,False],[True,False,True,False,True,True,True,False,True,True,False,True,False,True],[True,True,True,True,True,False,False,True,True,True,True,False,True,True],[True,True,True,False,True,False,False,True,True,True,True,True,True,True],[False,True,False,True,False,True,False,True,False,True,False,True,False,False],[False,True,True,True,False,False,False,True,False,False,False,False,False,True],[True,True,True,True,False,True,False,False,True,False,True,True,True,True]],[[False,True,True,False,False,False,False,False,False,False,False,True,False,False],[True,False,False,False,True,True,True,True,False,True,True,True,True,False],[False,True,False,True,False,True,True,True,False,True,True,False,True,True],[True,False,False,False,False,False,False,False,True,True,True,True,False,True],[True,False,True,True,True,True,False,True,True,False,False,True,True,False],[True,True,True,True,True,True,True,True,True,False,True,False,True,True],[False,False,False,True,False,True,False,True,True,True,False,False,True,True],[True,False,True,False,True,False,True,False,False,True,False,True,True,True],[False,False,False,False,False,False,True,False,False,True,True,True,False,False],[True,True,True,False,False,False,False,True,False,False,False,False,True,False],[False,False,True,False,False,False,False,True,False,True,True,False,False,True],[True,True,True,False,False,False,False,False,False,True,False,False,True,False]]], dtype = "bool")#candidate|12038|(5, 12, 14)|const|bool
var_12039 = relay.var("var_12039", dtype = "bool", shape = (5, 12, 14))#candidate|12039|(5, 12, 14)|var|bool
bop_12040 = relay.logical_or(const_12038.astype('bool'), relay.reshape(var_12039.astype('bool'), relay.shape_of(const_12038))) # shape=(5, 12, 14)
func_3050_call = mod.get_global_var('func_3050')
func_3052_call = mutated_mod.get_global_var('func_3052')
call_12047 = relay.TupleGetItem(func_3050_call(), 0)
call_12048 = relay.TupleGetItem(func_3052_call(), 0)
func_11812_call = mod.get_global_var('func_11812')
func_11817_call = mutated_mod.get_global_var('func_11817')
const_12052 = relay.const([[-2,-6,5,3,-9,10,2,6,-10,1,-1,-6,10,-7,10,2,2,-3,7,10,6,-6,1,-8,-3,8,7,7,8,10,5,-1,4,-3,-1,9,-4,-8,8,-5,4,3,7,-9,-3,-4,5,-5,-9,-9,1,8,4,-10,3]], dtype = "uint64")#candidate|12052|(1, 55)|const|uint64
const_12053 = relay.const([7,10,-5,-9,-2,-9,8,5,2,8,6,1,-3,10,4,-2,-9,-5,3,-3,8,-1,5,4,2,3,7,7,4,-5,-1,9,1,-2,-9,1,-8,2,8,3,5,9,-1,-1,4,-5,-4,4,-10,4,-3,5,-7,5,4,-9,-5,2,-3,-2,2,1,-2,3,-3,-1,2,-8,-6,6,2,-10,4,-4,6,5,5,-4,-2,1,6,10,2,8,-2,8,2,2,10,4,-3,-4,6,7,6,1,-2,1,10,1,-6,5,-9,-5,-2,6,1,-4,-9,4,9,-9,-8,-4,-10,2,6,-5,4,-5,-10,-4,3,7,-8,-7,-6,-7,-7,-5,-8,2,-4,-10,-8,7,-5,8,-8,10,-5,3,3,8,-1,-6,9,4,8,4,-8,-3,-3,-1,-7,-6,-5,-6,9,10,-8,-10,8,-10,7,-10,6,-7,6,7,6,8,2,-2,9,-10,8,-3,5,3,-9,4,8,-2,9,2,5,-7,-5,10,8,-2,-2,-5,10,7,-2,-5,-4,9,-10,-7,2,-4,2,10,3,-10,-6,-2,-4,-8,-3,1,1,1,2,8,3,-8,7,-6,-9,-7,-1,3,-9,-6,-5,-10,-6,10,10,-9,-2,-9,-6,-1,-1,-1,-9,-10,7,-1,-10,9,-3,-3,8,7,10,1,10,2,-10,4,1,-8,-7,-1,1,4,-10,8,-2,10,-10,9,-2,-1,-5,-4,6,-5,10,-3,-7,-6,5,-2,10,8,-2,-9,-9,-9,-5,1,4,6,3,6,8,6,9,-10,-10,8,-7,-8,-9,-1,9,-6,9,6,3,3,-7,5,-6,2,5,-10,7,9,5,10,1,7,-10,-3,9,4,-2,2,8,-6,4,-7], dtype = "uint64")#candidate|12053|(330,)|const|uint64
const_12054 = relay.const([-5.507828,0.362348,7.342818,-2.820357,-5.472721,1.686826,-4.105396,-6.373159,0.170950,3.113389,5.778762,5.491693,1.874760,5.883302,0.837361,-4.128322,-8.007254,-4.108090,-8.762795,3.907084,1.823304,0.048678,1.286793,-8.285850,-0.988072,-7.925029,-1.863333,0.428913,0.129826,-8.404923,0.632605,6.693715,1.344709,-0.051088,-9.555152,-1.941424,-4.718346,0.975907,1.984144,3.182646,-2.815330,0.551947,3.704686,-3.681577,-6.926832,-7.232799,3.207529,3.177145,4.330955,-3.659026,1.576638,8.872448,-4.619986,1.185829,-3.170585,-4.537574,4.131202,6.700249,-4.266280,1.047993,3.066731,-9.991129,7.401935,3.980306,7.559176,-5.038025,-0.595519,2.496356,3.124053,-0.351807,8.373061,-6.498819,-6.307817,9.783126,7.106849,6.092269,-8.736845,0.352124,8.870675,3.190093,2.428698,1.059493,6.232446,-7.450753,-6.715572,8.564181,2.069928,-1.241876,8.680158,-5.494806,-7.957619,7.239769,-1.877248,0.376878,1.981416,-2.860502,-9.448919,-5.763653,-8.158556,-6.134786,9.716650,-2.154168,0.301040,6.731408,3.095650,4.969983,7.222425,-4.867010,-5.062240,-4.227760,-4.528035,-5.765374,-9.962162,0.808248,1.424414,6.440250,0.444855,-7.483834,-6.818915,6.650216,6.976167,-8.233857,-5.598446,-5.809597,-1.388896,-2.253652,-2.315882,3.060147,-0.731104,6.988819,1.224096,-8.697829,7.359393,1.907079,-2.790916,2.134153,-1.159925,1.510756,-9.960973,4.910142,-7.690013,-4.061817,-2.084569,8.898779,-2.053801,-6.227370,-2.371488,-2.293952,3.506864,5.293961,-1.825748,-7.313619,-8.355349,8.343421,4.754422,7.398487,3.637317,-0.426837,-1.269326,-5.990276,0.471442,-6.643004,6.575025,6.959850,-5.250320,0.948780,5.713962,3.399117,1.138458,-0.560798,4.389587,-2.239866,4.121973,-6.539539,-6.206815,-9.902690,-1.485638,4.748940,4.041260,-8.230207,-1.003417,2.060043,3.899780,6.594328,3.629358,-2.395229,-6.700424,9.274514,5.090009,4.804088,-7.615783,1.103775,-2.852263,0.534552,0.733602,3.339450,3.806210,1.367756,-1.779166,5.231154,1.018160,-7.294349,-9.687833,5.085237,-7.652339,6.999475,3.263124,1.299041,-1.653126,6.091345,-8.320317,7.066309,8.384274,1.272965,4.360062,-6.267718,-4.422884,-4.411824,-6.972734,-4.526917,-6.101206,-7.911530,1.247341,5.663673,-3.967480,5.785585,-1.346424,-7.795428,-6.465266,3.026484,-5.520101,-3.100997,-3.090279,9.688111,-4.820549,2.455449,7.547648,-5.881645,5.081327,-6.688668,5.887273,8.029995,-9.289519,7.043039,2.174697,1.696389,-2.503317,-0.061246,-4.371277,-9.385479,9.139649,-3.118997,0.946000,8.475064,-5.812678,-8.520263,-6.586799,3.853856,5.058363,3.799902,0.603610,-8.354499,-1.229474,4.927476,-5.027248,0.084501,0.847729,-5.537119,1.952720,-4.891742,-8.153969,9.367458,-1.415897,2.098379,0.087136,-4.492036,8.136004,6.912938,2.472079,3.729334,-0.360988,6.120937,-4.302662,-5.197384,-7.892180,3.286274,5.367957,2.941721,-9.196503,6.029352,2.254243,-1.410063,-1.215583,-7.957033,-5.502798,1.752042,-4.521423,0.941084,-5.369004,-2.705884,-9.846368,4.907982,-5.554618,9.707735,-7.929620,1.075749,-5.048179,-7.196188,1.862179,-2.609971,-1.512910,-3.459956,-6.086446,2.377322,5.460169,6.674292,-4.005888,9.527283,7.154989,3.692707,0.562806,3.063255,-1.031925,-1.997069,-5.412914,-5.947898,-1.797722,-0.267555,-1.438486,5.162060,5.861711,4.909558,-2.285709,9.785282,5.020378,1.484011,2.727785,-0.671163,-4.621356,1.556819,5.715717,-0.117636,-5.157899,-7.538097,-5.090734,-4.901242,2.658148,0.469118,-9.624712,1.070432,9.660980,-9.047083,-4.839639,8.796417,8.684701,7.083336,-2.034560,-9.916739,-0.412323,8.655031,-3.462049,8.385765,1.121820,6.668285,1.614379,5.509556,9.098938,3.580725,-6.787942,6.392055,1.925107,-0.868627,-1.626573,-5.634542,7.171721,5.794258,5.010077,0.125115,-9.293758,-9.268549,-3.602169,-2.965413,4.350590,4.865300,-3.252541,7.323288,8.092662,2.929358,-3.552111,1.887656,7.356880,3.518004,6.445986,6.158563,-8.242439,5.349107,9.763216,-3.278467,5.718523,-4.580606,-2.012495,2.565623,3.490360,3.974852,-8.295044,-9.775769,-6.405424,-3.787299,-7.003282,4.238300,5.189197,8.227738,-4.740949,2.251144,3.595252,-2.992386,6.118537,-0.541366,-4.789190,-2.610350,-8.936451,6.730814,-6.196106,-3.767121,1.792082,6.274039,-0.384295,-8.980822,8.533270,-4.303879,5.678996,-8.979228,-0.727318,-6.803108,1.120336,6.282069,0.774477,-3.001349,-9.734355,-2.440725,-3.028667,-0.083231,6.746247,9.202151,-1.380402,3.395537,-5.685443,-5.361202,-4.670753,-4.384992,8.218317,0.210163,-3.526626,-8.884993,-2.491308,-0.555109,1.225328,2.151381,8.029473,1.653848,-8.513554,-0.395568,-0.657502,7.982271,6.197290,-8.949594,5.018808,9.126610,5.841438,-9.022135,-7.554136,-8.370210,6.590361,-3.256307,2.984651,-0.135005,6.047530,-7.559867,4.747364,-4.680972,7.764935,5.978046,0.045060,-1.240092,1.208126,-3.569320,-9.517848,1.085042,5.079578,-4.728710,5.879677,-8.627159,3.851548,-2.852724,1.357300,8.852311,-9.759646,8.454663,8.219276,-6.802951,9.988505,1.210412,-2.994222,7.937305,-6.302000,-3.219177,6.733499,-3.880786,6.385236,2.516030,-3.822796,-7.269312,-6.141198,-4.770725,0.208599,-1.335487,3.626881,-4.576098,-1.841215,4.393613,-2.778072,-9.338138,3.128987,-5.232099,5.226761,0.926513,6.472239,-5.772343,4.828692,9.324179,-1.945910,7.080270,8.115282,1.739277,-3.772218,9.004570,-9.687839,-8.073198,-0.327640,-4.817154,-8.749744,5.833650,9.645158,4.848950,-6.217195,-4.511603,-9.382787,3.927178,2.545398,6.355204,5.603518,-9.989996,-4.431329,7.199829,-1.956879,7.485508,1.682061,-7.171270,-5.635707,-9.800674,-1.310381,3.191011,-5.580420,6.755538,5.766638,6.990167,8.153818,-0.302522,-6.060069,-2.559926,-6.402448,-5.479248,4.878703,-4.477047,-5.314136,-7.407783,4.508615,-7.049990,-9.691880,-0.514558,-6.625891,1.632841,7.366590,-7.770248,2.719563,-2.173900,-9.081122,-4.028736,0.532062,6.423823,3.211733,3.506130,-4.961639,-2.891204,4.441620,-9.745227,2.154559,5.952369,-2.944307,-8.548603,-6.684129,3.425463,8.616010,-9.276731,-0.565520,9.019745,-1.636216,0.300922,-5.599711,8.477070,-6.129673,8.131978,3.462237,-5.344978,-9.655244,-4.513629,-9.279117,5.763045,9.951337,-3.951534,-6.799812,1.881860,-1.285141,3.742194,-6.876221,-7.543225,-1.806785,-1.979118,-4.170307,4.366545,-9.477251,-5.287178,0.523909,-3.400465,5.204993,4.015455,-7.498741,-7.261174,3.985859,5.019908,9.655939,-0.462930,-8.272192,1.622349,5.479573,5.933539,-1.600650,-3.944186,-0.004502,-6.917059,-6.242046,8.649958,-6.282448,2.343980,9.590537,-7.868720,6.102108,-4.213634,7.511719,-4.909552,8.623408,-0.962147,3.444754,7.789684,-9.680200,-2.491752,0.360538,9.411860,2.286965,5.229390,-4.355198,5.392624,-7.111875,8.875240,-9.140226,5.830216,9.840548,5.432075,-3.379175,-6.587663,6.501289,1.611676,-6.929772,-2.662057,-5.380988,-6.430209,5.109786,-7.973708,-1.272951,-7.461828,9.514159,-2.930223,4.309813,-8.283262,-3.720646,-7.618988,6.341277,1.282113,6.391371,3.970019,5.661794,-2.199150,-9.622637,0.855056,-3.634088,8.178325,7.686562,-0.188314,5.650111,-8.763341,-3.474624,7.281635,3.154637,5.513787,5.230794,-2.090803,0.629261,4.010123,0.886551,-6.837125,-8.051779,4.277230,5.663619,3.788939,-1.080272,-3.002559,-9.062372,-4.502912,-8.104320,-7.629566,1.201389,9.866816,9.667988,-5.571747,9.311801,-3.873945,-5.260971,9.423070,-5.843976,-2.506891,-0.652564,5.041633,6.676684,-5.092918,4.648874,9.314260,0.762368,5.981595,7.050447,7.330559,-5.024208,4.851640,-3.045174,-0.456667,7.888559,4.323407,-2.290825,-5.058833,1.054094,2.195910,-2.166451,1.863156,2.106209,-8.010051,-9.777307,1.223149,-0.389822,3.703738,8.202227,3.284266,-0.250129,8.042936,6.901849,-4.188688,-0.386015,5.844541,-8.900872,4.411061,-2.055320,9.756013,1.238387,3.662838,6.931322,-6.841219,6.045019,1.291133,4.147563,-3.796152,-1.110072,3.003808,-3.711519,2.318587,4.856907,4.646074,0.575389,-9.759960,0.377000,-1.643655,-9.384728,-3.084121,-1.460861,7.211955,-7.419724,-4.709930,3.758199,5.854577,-2.460087,-6.809805,7.668694,3.539808,-0.750828,-4.384425,-4.428883,-8.931357,2.969038,-6.717812,-4.548004,3.802496,1.817330,-4.854936,6.304123,-7.503894,-2.921892,9.832098,-6.182982,-8.931414,-2.370915,8.421147,8.095744,7.406839,-4.509233,-6.081712,-5.700666,7.150617,6.261824,-8.895352,6.125682,0.434278,3.170935,-5.229210,6.359382,0.837213,9.251996,-8.130698,-5.486320,0.415969,1.205388,-1.582897,-4.685636,8.309257,0.780477,-3.826001,5.491074,-2.836093,7.593958,-2.571249,-5.619568,-6.834366,-9.950256,-6.341135,9.048006,4.149231,-8.008666,-8.482247,4.586601,-8.634783,6.354052,-5.671008,-3.977772,6.954442,9.427261,7.468322,6.787771,1.790134,-7.379131,1.337286,0.021981,2.445048,-9.318768,-9.295284,4.457745,-8.214882,-7.349750,0.423440,9.440347,-6.371939,8.824584,-5.642710,3.392953,-2.594247,-0.388175,6.345749,6.871267,4.028090,-8.750186,8.109263,-2.294619,-0.611316,-6.890125,-9.134047,4.016141,-3.557073,-9.109680,6.313122,-4.686018,6.523865,7.518049,7.100929,5.927183,-1.436376,-8.193140,-4.712093,8.150960,5.875866,-2.966612,-9.215680,-0.700476,-6.257244,9.416466,1.170340,-1.487603,-0.256923,6.607497,-0.306734,-8.133526,3.008246,-6.382061,-2.174737,-3.736217,-1.968694,0.212575,-6.902424,7.098643,-6.209767,1.171360,0.341841,-7.837181,2.083943,9.841098,4.678791,5.991360,-0.220232,-4.985103,5.307968,2.630355,6.220970,-1.839879,-2.656988,0.457939,2.402939,-0.129345,-0.463603,-7.898712,1.329865,3.045249,-3.805121,7.515152,-1.797675,9.686915,-8.866468,7.815552,8.862169,-3.458530,-8.167288,-3.988983,-2.489859,-3.009477,9.798360,-3.264853,-8.322368,2.711169,-8.078360,5.257203,-9.193939,1.584498,1.982633,6.261709,-9.933740,9.580051,7.704229,-5.161764,-8.381967,-1.827626,-6.175632,-2.570407,-4.124376,1.811362,-3.629636,7.712961,8.325548,-6.650075,-8.252800,9.357044,9.818423,1.022604,-1.819288,-9.694675,-7.162116,-7.599540,7.902097,8.431539,4.219414,0.436050,4.699753,-4.650964,6.050137,-0.678340,-6.995970,-0.628753,-4.049128,-8.883668,-3.680951,8.400296,8.441734,3.716352,4.392324,-1.963758,9.219608,-7.367536,8.923145,5.710261,4.922366,-4.850610,4.224546,5.406050,-7.253383,-7.397737,-5.899849,5.337593,4.256298,5.920325,7.036023,6.722558,2.554149,0.911583,6.202759,5.904118,-1.879064,-1.771183,-5.515093,4.324967,-3.047473,0.094976,-8.613062,-9.603594,7.383515,-8.319679,-7.406753,3.770853,1.194131,-9.039487,5.715911,-2.255245,5.576224,6.801323,-6.067715,-7.528300,-1.100679,-9.210206,-9.539998,0.535657,-9.949278,-4.856599,3.348254,-0.438064,-9.343849,6.375641,-4.861269,-8.635847,4.148285,9.860051,-4.148749,-5.652773,-4.083618,1.533431,5.390524,-6.463497,-9.326903,-5.860546,0.680409,2.277203,6.664373,9.374061,-9.149602,0.919350,-0.134871,3.122922,-6.668708,4.051986,-9.481374,3.643580,8.135839,1.269566,-2.251559,-8.108922,-7.660583,-3.762208,-5.517800,6.249650,2.936011,-9.325866,-0.906277,-5.577362,5.792308,7.271733,6.234143,-6.556576,-4.728450,-0.376007,9.847094,-8.871234,-8.104092,-2.088590,8.240251,2.901417,-7.260102,-8.167973,-3.658092,-3.327901,-8.536349,4.290019,-0.625984,3.570053,-8.744772,-7.583516,-6.332196,6.539437,7.710699,2.470557,-6.783802,9.032063,2.240942,5.858624,-5.558319,1.924657,7.847678,-4.504519,-6.302969,-5.793781,-5.444531,6.332484,-5.906144,8.975292,-3.021767,-0.078025,-0.464180,0.880688,1.973608,5.072105,-0.337258,-2.120416,1.594745,-7.862748,-4.521382,-2.910366,6.092518,2.965046,8.428741,1.023261,-3.014877,-4.276422,5.873227,-5.094488,-7.904592,-1.849050,-0.971276,-9.948822,-5.512090,-6.808858,6.215450,9.179314,-6.973354,-4.512115,3.506992,8.447559,8.237335,-8.141599,2.864504,4.718862,-6.875173,6.072284,2.198966,1.780370,-2.278813,-3.930599,-5.309318,-7.980583,7.184469,-4.992413,-9.677513,-3.591274,0.200085,-7.178488,6.865690,-7.605731,1.451524,-3.831191,0.546554,-5.969217,2.050878,-5.745128,-1.464646,-2.989806,5.234025,9.325159,-7.965994,-9.710142,-5.111148,0.138832,-1.994834,-9.784761,7.303917,-5.708035,-3.472063,-1.219786,-4.972134,1.461792,6.515110,-9.373810,2.241885,-4.199946,0.848972,0.564433,5.342133,7.935986,5.268974,5.694187,-4.546633,6.704118,8.045872,1.013470,-5.398427,-3.071836,-0.199998,0.660348,-6.161019,-7.846423,-1.663936,-4.805374,-0.026556,4.787713,6.793937,-6.165273,6.271587,-8.675263,6.212164,-6.873251,-9.745612,0.649467,6.686211,-4.948953,-0.842237,1.428129,0.224401,-3.234787,6.436687,1.945662,-2.305672,-4.092505,1.366814,-5.191675,-1.095217,8.907320,-6.326766,-5.813079,8.432001,7.496259,3.390719,-3.188669,-8.730877,-9.112628,-5.849255,-9.343170,8.439420,-2.669443,5.261922,0.327143,2.580318,8.419119,3.587370,2.331325,-8.725957,-4.466477,5.914180,-3.643015,4.352010,8.740867,-0.483461,-2.132151,8.727440,8.106637,-5.761515,-6.812439,6.943153,4.629735,6.183458,5.786244,1.221421,5.845470,-6.459840,0.858530,-0.231426,8.952007,-7.465383,-4.990381,2.886404,3.037015,-2.588806,0.866676,0.361222,-7.002128,-0.425469,-0.556318,2.958050,-9.801813,-5.292916,8.557709,1.698583,1.758180,4.371480,5.721418,0.274478,-2.418243,-2.653169,4.395656,-9.126341,1.062964,9.480423,-4.013795,2.787855,-9.808560,-7.725324,4.173943,6.856728,-5.974303,-1.342384,3.052211,-3.427012,-6.449550,0.324156,-6.891409,5.167197,-7.728602,6.512863,-9.377721,-3.841558,-8.714547,-4.196876,-3.373633,1.644795,-1.156131,-4.750356,8.080291,4.545067,8.844117,-6.009113,-3.043889,2.902274,-6.017438,-2.595134,-3.393829,-6.038208,5.955063,-7.695057,-1.606183,-1.580924,8.706885,-9.390295,6.568337,-6.267014,-7.456024,-2.623289,0.010461,-6.292945,5.043178,-1.963873,9.149392,-2.567160,1.831482,-0.996366,-7.545873,3.134493,8.884553,9.410546,3.054294,5.174895,-7.502418,1.195928,-2.645862,2.554768,-4.224999,8.315638,-8.264615,-2.099017,-6.983344,3.109832,-2.824120,-0.701177,-1.168465,-1.952250,-1.076777,-2.351664,-2.095746,-4.873237,1.677610,-7.482607,6.467760,4.550335,8.058508,4.353656,-0.323769,4.164353,8.875766,-1.418973,5.310939,-4.807569,-5.781799,-5.764979,-3.320419,6.295068,-2.976157,8.216896,7.155377,-9.717292,-1.251559,-5.744709,-8.467421,2.692934,-7.876584,-9.346116,0.513166,2.487155,7.097697,-7.120629,-4.015243,7.930596,7.711571,-1.500943,5.513568,6.475210], dtype = "float32")#candidate|12054|(1440,)|const|float32
call_12051 = relay.TupleGetItem(func_11812_call(relay.reshape(const_12052.astype('uint64'), [5, 1, 11]), relay.reshape(const_12053.astype('uint64'), [5, 6, 11]), relay.reshape(const_12054.astype('float32'), [1440,]), ), 0)
call_12055 = relay.TupleGetItem(func_11817_call(relay.reshape(const_12052.astype('uint64'), [5, 1, 11]), relay.reshape(const_12053.astype('uint64'), [5, 6, 11]), relay.reshape(const_12054.astype('float32'), [1440,]), ), 0)
func_10089_call = mod.get_global_var('func_10089')
func_10092_call = mutated_mod.get_global_var('func_10092')
const_12057 = relay.const([2.073859,-1.906972,-7.574611,-2.069455,1.427564,5.316662,-4.216844,7.608321,2.716277,0.347073,-9.434286,2.250965,-8.203216,4.161136,-5.662810,0.189447,9.608894,-5.949620,2.106505,-3.085896,3.467498,7.552306,-8.231697,-1.698326,7.656800,-6.685406,2.762397,-1.595840,0.961072,7.616594,-2.064127,9.288991,-0.017160,-2.914113,8.798356,-1.615401,-6.656359,-2.419312,-5.330076,-0.550456,-3.503925,-5.690844,-4.481019,9.865484,-3.168622,6.350023,-5.854267,-2.127590,-7.934112,-4.365618,6.316604,-3.767800,9.457034,-4.853985,7.520633,1.391680,0.525936,-7.470009,3.745476,7.864439,-9.674168,-3.426935,-6.635366,-5.309573,9.389687,-9.469212,6.784461,-0.281933,6.447315,0.678908,-4.285492,-0.307255,-0.629220,6.408675,-4.808632,9.008947,-4.728693,5.406002,-1.001723,6.962841,2.353646,-3.680677,2.084448,8.524799,1.878095,8.825424,2.474912,1.443034,-8.462171,2.777409,-3.557144,-6.849109,6.702683,9.361417,6.753621,4.473020,-7.529866,0.953104,5.176294,-9.140900,7.460188,-7.276135,3.723287,-4.988014,-0.768424,-8.751242,-5.544034,7.289439,8.610491,8.880684,-5.084133,4.282965,-7.685256,-6.635530,1.808766,-7.116934,-4.831091,1.652091,6.064317,-0.349424,-3.075806,-7.877982,8.851633,-8.321744,-4.208112,8.634073,-9.056929,7.432982,8.633907,-5.783460,-4.212810,-8.099976,0.966020,-5.075701,6.970824,3.490922,5.576658,6.183984,9.442641,7.598928,7.149191,-4.580217,0.041860,8.682286,9.330017,8.205112,-4.470379,9.126119,-0.806354,-0.727567,-4.505183,5.839056,4.267282,-1.708507,-4.402207,-9.827814,-0.327420,1.780044,-1.151679,-7.046486,0.749462,2.561937,3.405982,3.534795,-6.490931,-3.360098,6.993975,9.367507,-5.402159,-1.987848,4.120917,-3.248271,7.168910,-9.945251,-4.897241,-0.445744,-2.222614,-1.617883,-0.921256,6.674018,4.005248,8.423459,4.855584,-1.571986,-7.897490,-7.312431,4.984184,4.970850,7.382233,6.147284,-7.763468,7.942713,2.791244,3.205323,3.996494,0.033110,-8.951905,-9.147234,6.784496,9.156165,5.705622,4.773622,-7.830998,7.406640,-4.505094,-4.656900,-2.592120,-5.164019,5.355503,9.740371,-2.777817,4.366626,0.946046,2.075910,-1.141420,-5.759676,-8.968989,7.960762,-5.775198,-0.791974,3.448996,-4.448767,-5.382620,1.764057,-7.939122,0.338837,1.604971,5.142919,-0.350829,2.659340,2.263670,-4.663240,-3.500700,-1.060612,-2.216981,9.850064,3.469954,-1.127649,-0.827219,7.090410,-7.481256,-3.602723,-1.444726,1.169180,-4.255424,6.396837,-1.067632,0.742739,8.330334,-4.717175,2.566770,4.234747,0.830216,-3.076654,-8.925013,-5.568622,-8.562406,-9.317514,-2.250768,6.772578,4.524347,-9.836290,-1.347983,-2.495703,5.053913,-4.813587,-1.337627,-3.104606,9.203338,-2.910625,-8.121579,-1.509120,5.602167,5.833362,-8.294663,-9.954174,-2.204674,-3.340185,-2.182405,-5.060247,5.360520,-1.254027,1.338683,8.140759,-0.886531,-9.361658,-7.252041,6.421207,3.920409,2.088190,-7.133542,8.039659,-8.747506,9.248052,-1.581574,-1.305097,-1.057652,-3.152443,8.525301,-5.798186,9.877582,2.801389,-3.812595,0.494997,0.888620,1.684125,-8.153102,-2.553093,-8.763661,7.323902,-2.161383,-8.429074,6.572297,-7.253302,-5.564971,-8.767917,2.389538,7.524471,-1.313332,3.948310,5.591392,5.361309,-7.969529,-8.831535,-0.324961,0.832813,-8.949926,3.418162,-7.210515,-3.002891,0.772410,-3.935647,-2.955118,-3.108902,-7.431720,2.746687,-1.643517,9.521573,-1.731274,-4.654938,-0.217975,9.345523,8.446297,-7.428299,-8.686669,2.713543,7.182170,-5.609653,3.003612,-7.974480,6.155913,-1.362155,0.888379,-9.960980,7.078511,-8.683102,-4.566418,-1.760790,-8.835084,-9.829864,-0.195622,-3.412227,5.850791,2.403158,4.947012,6.904270,1.620253,6.683425,9.629040,1.582184,-7.051154,-2.560114,7.831181,-3.377549,9.637489,5.042116,-7.059997,3.101649,-7.382747,1.281134,9.943868,-7.916018,-3.526850,5.635531,0.874030,-2.648212,-5.089519,0.176399,-1.969319,1.177934,-8.843248,1.880263,4.027397,-5.154437,3.712965,7.345926,-2.199617,-5.062626,9.693924,3.172779], dtype = "float64")#candidate|12057|(400,)|const|float64
var_12058 = relay.var("var_12058", dtype = "float32", shape = (208, 4))#candidate|12058|(208, 4)|var|float32
call_12056 = relay.TupleGetItem(func_10089_call(relay.reshape(const_12057.astype('float64'), [400,]), relay.reshape(var_12058.astype('float32'), [832,]), ), 2)
call_12059 = relay.TupleGetItem(func_10092_call(relay.reshape(const_12057.astype('float64'), [400,]), relay.reshape(var_12058.astype('float32'), [832,]), ), 2)
func_5940_call = mod.get_global_var('func_5940')
func_5943_call = mutated_mod.get_global_var('func_5943')
const_12070 = relay.const([-5.057892,-1.368067,-3.628100,-4.754492,-7.633436,-5.950680,-4.994261,-4.064586,1.286608,-3.180134,2.324728,-3.164256,-6.757670,-4.686519,1.192784,-7.855190,-5.045238,-6.031602,-0.655634,-9.363360,-3.612397,-0.135357,-3.028911,1.015897,-1.683494,-5.777176,2.057761,8.905338,-1.480839,9.279073,7.950494,6.683956,-6.456242,-7.819123,-9.815421,-1.126895,2.184619,3.766583,9.135901,-6.309356,4.729912,2.904580,6.287012,-0.416414,-9.010413,-6.973654,5.611669,-3.864441,2.243937,9.193106,6.025347,-7.517689,-1.764234,-7.520389,3.522225,9.556005,4.177701,1.471470,-1.262160,8.383140,7.756143,-3.610750,0.839432,-0.593600,-5.629149,9.206678,7.122740,-8.182816,2.574450,-0.797268,8.436712,8.383743,-7.316297,-0.600510,-1.501846,-4.798993,5.720910,6.849992,9.030709,0.951509,4.444975,0.748014,-7.994863,-8.862392,-3.238544,-2.950885,-9.171837,-3.714597,-6.640761,0.344297,-8.289249,-4.819920,5.002799,0.116204,-4.301865,-9.736441,9.852315,-5.692599,7.631611,5.345787,4.772033,-3.380192,-8.378446,8.853813,0.679017,0.515725,-9.321236,6.950152,6.274464,-3.030837,0.447638,4.032886,-4.519381,-8.893601,-2.303392,6.994376,-0.761500,-0.393012,-4.783389,6.571003,-9.463694,-9.253984,5.799120,-1.691879,-9.087602,-6.072269,6.299920,-1.554368,6.051414,-4.405766,-1.927922,-9.044704,0.259285,3.178840,-3.415085,4.760122,-0.922494,1.455073,5.579780,-2.519319,-7.588131,8.885593,3.572089,4.013904,-7.982065,-0.008977,4.793178,3.227561,7.614196,-2.301818,-8.094773,3.091700,2.754028,-1.270918,-0.887757,-0.902407,8.513923,5.754634,0.988235,3.990847,-9.674863,9.123346,-4.930242,-7.519568,8.786462,9.743077,-7.075657,-1.597392,6.091395,-2.382190,-4.686585,-6.114583,-5.088029,-5.291708,-8.801965,5.525280,6.471530,-7.898100,-8.935454,-6.198959,-2.721138,3.233574,-1.412213,-0.677278,-5.602954,5.246856,-9.950692,-5.606805,3.551502,-9.312623,-2.365916,-3.779417,-7.315894,-3.147127,7.109485,0.510506,-4.517192,-3.178650,-1.768931,4.822302,0.584686,1.920173,-9.978094,-8.227983,-4.127900,-1.809009,8.728959,7.736504,4.166151,-8.168458,-8.565499,-9.162262,-9.622055,8.853616,-0.968149,9.036008,5.866327,3.032239,-4.915876,-6.815463,-8.601462,1.510808,7.084929,-9.159133,-6.277966,-9.820814,-6.782091,-1.723251,8.296989,3.826055,-9.437077,-7.355293,-9.092336,9.819366,9.280250,6.852105,-4.252429,4.059160,8.187436,7.551211], dtype = "float32")#candidate|12070|(240,)|const|float32
call_12069 = relay.TupleGetItem(func_5940_call(relay.reshape(const_12070.astype('float32'), [16, 1, 15])), 0)
call_12071 = relay.TupleGetItem(func_5943_call(relay.reshape(const_12070.astype('float32'), [16, 1, 15])), 0)
output = relay.Tuple([bop_12040,call_12047,call_12051,const_12052,const_12053,const_12054,call_12056,const_12057,var_12058,call_12069,const_12070,])
output2 = relay.Tuple([bop_12040,call_12048,call_12055,const_12052,const_12053,const_12054,call_12059,const_12057,var_12058,call_12071,const_12070,])
func_12079 = relay.Function([var_12039,var_12058,], output)
mod['func_12079'] = func_12079
mod = relay.transform.InferType()(mod)
var_12080 = relay.var("var_12080", dtype = "bool", shape = (5, 12, 14))#candidate|12080|(5, 12, 14)|var|bool
var_12081 = relay.var("var_12081", dtype = "float32", shape = (208, 4))#candidate|12081|(208, 4)|var|float32
output = func_12079(var_12080,var_12081,)
func_12082 = relay.Function([var_12080,var_12081,], output)
mutated_mod['func_12082'] = func_12082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7596_call = mod.get_global_var('func_7596')
func_7598_call = mutated_mod.get_global_var('func_7598')
call_12137 = relay.TupleGetItem(func_7596_call(), 0)
call_12138 = relay.TupleGetItem(func_7598_call(), 0)
output = relay.Tuple([call_12137,])
output2 = relay.Tuple([call_12138,])
func_12143 = relay.Function([], output)
mod['func_12143'] = func_12143
mod = relay.transform.InferType()(mod)
mutated_mod['func_12143'] = func_12143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12143_call = mutated_mod.get_global_var('func_12143')
call_12144 = func_12143_call()
output = call_12144
func_12145 = relay.Function([], output)
mutated_mod['func_12145'] = func_12145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4962_call = mod.get_global_var('func_4962')
func_4964_call = mutated_mod.get_global_var('func_4964')
call_12188 = relay.TupleGetItem(func_4962_call(), 0)
call_12189 = relay.TupleGetItem(func_4964_call(), 0)
func_9400_call = mod.get_global_var('func_9400')
func_9402_call = mutated_mod.get_global_var('func_9402')
call_12204 = relay.TupleGetItem(func_9400_call(relay.reshape(call_12188.astype('int64'), [2080,])), 3)
call_12205 = relay.TupleGetItem(func_9402_call(relay.reshape(call_12188.astype('int64'), [2080,])), 3)
output = relay.Tuple([call_12188,call_12204,])
output2 = relay.Tuple([call_12189,call_12205,])
func_12215 = relay.Function([], output)
mod['func_12215'] = func_12215
mod = relay.transform.InferType()(mod)
output = func_12215()
func_12216 = relay.Function([], output)
mutated_mod['func_12216'] = func_12216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4607_call = mod.get_global_var('func_4607')
func_4608_call = mutated_mod.get_global_var('func_4608')
call_12264 = func_4607_call()
call_12265 = func_4607_call()
output = relay.Tuple([call_12264,])
output2 = relay.Tuple([call_12265,])
func_12293 = relay.Function([], output)
mod['func_12293'] = func_12293
mod = relay.transform.InferType()(mod)
mutated_mod['func_12293'] = func_12293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12293_call = mutated_mod.get_global_var('func_12293')
call_12294 = func_12293_call()
output = call_12294
func_12295 = relay.Function([], output)
mutated_mod['func_12295'] = func_12295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3323_call = mod.get_global_var('func_3323')
func_3324_call = mutated_mod.get_global_var('func_3324')
call_12339 = relay.TupleGetItem(func_3323_call(), 1)
call_12340 = relay.TupleGetItem(func_3324_call(), 1)
func_9400_call = mod.get_global_var('func_9400')
func_9402_call = mutated_mod.get_global_var('func_9402')
call_12353 = relay.TupleGetItem(func_9400_call(relay.reshape(call_12339.astype('int64'), [2080,])), 4)
call_12354 = relay.TupleGetItem(func_9402_call(relay.reshape(call_12339.astype('int64'), [2080,])), 4)
output = relay.Tuple([call_12339,call_12353,])
output2 = relay.Tuple([call_12340,call_12354,])
func_12372 = relay.Function([], output)
mod['func_12372'] = func_12372
mod = relay.transform.InferType()(mod)
mutated_mod['func_12372'] = func_12372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12372_call = mutated_mod.get_global_var('func_12372')
call_12373 = func_12372_call()
output = call_12373
func_12374 = relay.Function([], output)
mutated_mod['func_12374'] = func_12374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10986_call = mod.get_global_var('func_10986')
func_10988_call = mutated_mod.get_global_var('func_10988')
call_12380 = relay.TupleGetItem(func_10986_call(), 0)
call_12381 = relay.TupleGetItem(func_10988_call(), 0)
func_1918_call = mod.get_global_var('func_1918')
func_1919_call = mutated_mod.get_global_var('func_1919')
call_12383 = relay.TupleGetItem(func_1918_call(), 1)
call_12384 = relay.TupleGetItem(func_1919_call(), 1)
func_2870_call = mod.get_global_var('func_2870')
func_2872_call = mutated_mod.get_global_var('func_2872')
call_12393 = relay.TupleGetItem(func_2870_call(), 0)
call_12394 = relay.TupleGetItem(func_2872_call(), 0)
output = relay.Tuple([call_12380,call_12383,call_12393,])
output2 = relay.Tuple([call_12381,call_12384,call_12394,])
func_12397 = relay.Function([], output)
mod['func_12397'] = func_12397
mod = relay.transform.InferType()(mod)
mutated_mod['func_12397'] = func_12397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12397_call = mutated_mod.get_global_var('func_12397')
call_12398 = func_12397_call()
output = call_12398
func_12399 = relay.Function([], output)
mutated_mod['func_12399'] = func_12399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6036_call = mod.get_global_var('func_6036')
func_6037_call = mutated_mod.get_global_var('func_6037')
call_12420 = relay.TupleGetItem(func_6036_call(), 0)
call_12421 = relay.TupleGetItem(func_6037_call(), 0)
output = relay.Tuple([call_12420,])
output2 = relay.Tuple([call_12421,])
func_12437 = relay.Function([], output)
mod['func_12437'] = func_12437
mod = relay.transform.InferType()(mod)
mutated_mod['func_12437'] = func_12437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12437_call = mutated_mod.get_global_var('func_12437')
call_12438 = func_12437_call()
output = call_12438
func_12439 = relay.Function([], output)
mutated_mod['func_12439'] = func_12439
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12476 = relay.const(-4, dtype = "uint16")#candidate|12476|()|const|uint16
var_12477 = relay.var("var_12477", dtype = "uint16", shape = (8, 15, 5))#candidate|12477|(8, 15, 5)|var|uint16
bop_12478 = relay.right_shift(const_12476.astype('uint16'), var_12477.astype('uint16')) # shape=(8, 15, 5)
func_5009_call = mod.get_global_var('func_5009')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_12485 = relay.TupleGetItem(func_5009_call(), 0)
call_12486 = relay.TupleGetItem(func_5011_call(), 0)
output = relay.Tuple([bop_12478,call_12485,])
output2 = relay.Tuple([bop_12478,call_12486,])
func_12490 = relay.Function([var_12477,], output)
mod['func_12490'] = func_12490
mod = relay.transform.InferType()(mod)
mutated_mod['func_12490'] = func_12490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12491 = relay.var("var_12491", dtype = "uint16", shape = (8, 15, 5))#candidate|12491|(8, 15, 5)|var|uint16
func_12490_call = mutated_mod.get_global_var('func_12490')
call_12492 = func_12490_call(var_12491)
output = call_12492
func_12493 = relay.Function([var_12491], output)
mutated_mod['func_12493'] = func_12493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5312_call = mod.get_global_var('func_5312')
func_5313_call = mutated_mod.get_global_var('func_5313')
call_12536 = relay.TupleGetItem(func_5312_call(), 0)
call_12537 = relay.TupleGetItem(func_5313_call(), 0)
func_11910_call = mod.get_global_var('func_11910')
func_11912_call = mutated_mod.get_global_var('func_11912')
call_12544 = relay.TupleGetItem(func_11910_call(), 0)
call_12545 = relay.TupleGetItem(func_11912_call(), 0)
func_12293_call = mod.get_global_var('func_12293')
func_12295_call = mutated_mod.get_global_var('func_12295')
call_12556 = relay.TupleGetItem(func_12293_call(), 0)
call_12557 = relay.TupleGetItem(func_12295_call(), 0)
func_11686_call = mod.get_global_var('func_11686')
func_11689_call = mutated_mod.get_global_var('func_11689')
var_12571 = relay.var("var_12571", dtype = "uint64", shape = (864,))#candidate|12571|(864,)|var|uint64
var_12572 = relay.var("var_12572", dtype = "float32", shape = (832,))#candidate|12572|(832,)|var|float32
call_12570 = relay.TupleGetItem(func_11686_call(relay.reshape(var_12571.astype('uint64'), [864,]), relay.reshape(var_12572.astype('float32'), [832,]), ), 3)
call_12573 = relay.TupleGetItem(func_11689_call(relay.reshape(var_12571.astype('uint64'), [864,]), relay.reshape(var_12572.astype('float32'), [832,]), ), 3)
var_12575 = relay.var("var_12575", dtype = "uint64", shape = (864,))#candidate|12575|(864,)|var|uint64
bop_12576 = relay.floor_mod(var_12571.astype('float32'), relay.reshape(var_12575.astype('float32'), relay.shape_of(var_12571))) # shape=(864,)
uop_12581 = relay.tan(var_12571.astype('float32')) # shape=(864,)
func_3908_call = mod.get_global_var('func_3908')
func_3910_call = mutated_mod.get_global_var('func_3910')
var_12588 = relay.var("var_12588", dtype = "float32", shape = (300,))#candidate|12588|(300,)|var|float32
call_12587 = relay.TupleGetItem(func_3908_call(relay.reshape(var_12588.astype('float32'), [300,])), 1)
call_12589 = relay.TupleGetItem(func_3910_call(relay.reshape(var_12588.astype('float32'), [300,])), 1)
bop_12599 = relay.equal(var_12575.astype('bool'), relay.reshape(uop_12581.astype('bool'), relay.shape_of(var_12575))) # shape=(864,)
output = relay.Tuple([call_12536,call_12544,call_12556,call_12570,var_12572,bop_12576,call_12587,var_12588,bop_12599,])
output2 = relay.Tuple([call_12537,call_12545,call_12557,call_12573,var_12572,bop_12576,call_12589,var_12588,bop_12599,])
F = relay.Function([var_12571,var_12572,var_12575,var_12588,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12571,var_12572,var_12575,var_12588,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

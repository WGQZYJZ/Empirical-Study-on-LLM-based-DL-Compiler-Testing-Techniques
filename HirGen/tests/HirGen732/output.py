import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_145 = relay.const([[[-10,-1,1,6,7,6,-5,4,-6,7,1,8],[7,6,-9,-8,-1,-9,8,-8,7,2,-6,4],[-1,9,-10,6,5,9,-4,4,-7,2,8,-4],[-5,-7,-1,5,5,-6,9,2,5,9,-8,7],[-5,3,-8,-2,-3,5,1,8,2,-9,-5,6],[-2,-9,7,8,-4,9,9,-6,8,6,1,-5],[7,5,-9,-10,-5,3,-5,-6,-1,-3,-4,-3],[-10,4,-3,6,7,2,2,6,2,-1,-10,8],[-2,4,-9,10,5,3,-5,8,10,-7,-3,-2],[-2,-4,10,6,2,-7,6,-2,-3,9,-4,1]],[[10,-6,3,-7,-3,-1,-2,6,-8,5,-2,5],[2,5,-2,9,8,-4,-5,10,-2,2,8,8],[-3,-8,-1,-2,8,8,8,1,-3,7,-7,-8],[5,-5,-8,-9,-9,7,1,-3,-9,-8,-6,-10],[-7,9,-5,-5,6,5,6,-8,2,-2,-5,1],[-6,10,1,3,9,2,-10,4,8,4,3,8],[5,8,5,-5,-10,4,-5,1,-10,7,1,-8],[3,2,3,-3,2,-10,3,-7,-8,-6,8,6],[10,8,7,2,-9,7,-6,2,-4,-4,-8,3],[2,1,-7,-9,-2,-2,-4,-2,9,-5,-2,3]],[[-9,-4,-8,5,6,-1,4,-4,7,-9,8,-6],[-1,-4,-9,-8,3,-7,8,-2,-1,9,-3,4],[-7,-2,4,-6,8,5,-8,-8,-6,-4,9,9],[9,5,-9,3,-2,4,3,-1,9,-10,1,-8],[5,3,9,5,-10,-1,1,-6,1,1,8,-8],[-9,6,8,-9,7,10,2,4,-8,-10,3,4],[-5,-1,-6,-2,9,5,1,4,-3,-3,-10,8],[6,-4,5,-4,-2,5,-3,-1,6,-4,7,6],[2,7,-8,7,3,2,9,8,2,9,2,-10],[5,7,1,6,-3,-5,-5,7,-4,-6,7,-4]],[[9,4,5,-10,-9,-6,10,-6,-4,6,-3,-9],[-3,10,9,9,-9,-9,-7,7,-6,8,7,-1],[-5,10,1,5,-2,-4,-10,9,3,6,-7,-8],[9,10,-10,-5,-9,2,-2,-4,1,7,8,-3],[-4,-3,-5,5,-6,10,-8,-10,-7,7,-1,-6],[-8,8,-9,-8,-1,3,1,1,-4,5,3,-9],[10,-2,6,5,-10,-9,-3,1,8,-1,-3,8],[3,-9,9,-9,-1,-3,-8,10,-3,-5,8,2],[2,-6,-8,-2,8,-7,9,-9,6,9,2,2],[-2,2,4,5,9,-1,-8,10,-4,6,-5,-6]],[[-6,-7,-6,-2,9,-6,7,-1,5,-5,-6,-10],[4,-6,10,1,6,-4,10,-9,-1,-4,-8,-7],[6,7,-9,-4,2,1,1,6,2,8,-8,-1],[-3,7,9,-6,6,-8,-10,-7,4,4,1,-3],[-10,7,9,6,2,-5,5,-9,-5,-5,1,9],[1,-1,3,-7,4,-2,-3,-4,2,-7,1,8],[-3,4,7,1,9,2,5,-7,-3,-1,7,-1],[-7,6,6,-7,-8,-5,6,-5,-8,-7,6,4],[-2,6,-2,-10,9,10,-1,6,-8,6,-9,-9],[8,1,-9,-5,-8,2,-2,-1,-10,6,-8,3]],[[-3,1,2,8,7,5,-2,9,-3,-4,-7,6],[5,-9,4,2,10,9,5,-1,-7,-2,-9,3],[-4,-5,-1,8,-2,-1,-6,-6,-8,8,6,-8],[8,-4,-1,-8,-3,5,3,9,10,-6,7,-5],[-8,-6,4,7,-2,-8,-9,7,1,-5,-7,2],[8,-4,-1,-8,1,5,-10,7,5,-6,-4,-6],[6,1,-8,9,-2,-1,-1,4,-4,7,-1,-5],[-4,3,-3,4,2,3,8,-8,-8,-5,-9,-2],[6,-7,6,3,3,9,-7,-7,8,-1,-5,-9],[7,1,3,-8,-5,-5,-7,2,-6,-7,-5,2]],[[-6,2,-1,4,6,-3,-1,7,-8,-6,5,-4],[-8,-4,7,6,10,-7,-2,-8,-10,-7,-3,-6],[1,7,-9,-6,4,-2,9,-4,-8,7,-2,8],[7,-3,-4,-3,-3,2,1,-1,-10,-4,2,6],[-9,-10,10,-4,-7,-7,-8,-7,-1,4,-7,-7],[-9,5,-10,-1,-8,1,1,4,4,9,6,-2],[-5,10,-1,-10,-9,10,-8,10,2,-5,-9,-2],[-2,5,-9,4,-1,-5,-3,-3,-9,-2,5,-6],[-5,1,10,5,4,-10,4,6,-8,10,-7,-4],[9,7,7,-1,2,4,-5,4,10,-4,-7,4]],[[3,-7,-8,-9,4,-10,-7,5,5,3,-10,-1],[10,7,-8,-3,4,1,8,8,6,-4,1,4],[1,-7,-4,-3,4,4,-8,2,6,5,-3,-7],[-3,2,10,-9,3,4,-4,6,7,-1,6,9],[7,5,7,9,-2,-3,6,7,-7,1,-8,-9],[-6,1,4,-5,4,-2,-1,-10,-1,9,-4,-1],[7,-10,6,1,-2,5,2,8,7,4,9,4],[6,9,2,-9,-1,-6,-10,10,-9,9,-2,-5],[5,10,-5,5,-10,1,6,2,1,-4,-9,3],[9,9,-9,10,-8,-7,5,-4,8,-8,5,2]],[[2,-7,2,8,3,3,-4,5,5,4,-4,6],[6,-6,6,9,6,8,9,9,3,-6,-7,8],[-3,-2,5,-10,-4,3,6,9,-1,2,-2,2],[3,2,-6,-1,-7,7,1,-2,-6,6,-1,6],[3,-10,10,-10,-9,-4,7,6,-6,-5,-2,3],[-5,2,5,6,7,-3,-7,2,9,2,9,9],[5,-4,4,7,-8,3,-8,-1,4,-3,-7,8],[-1,2,-2,-7,9,-2,-3,-10,7,-4,10,-1],[9,5,1,2,6,1,-6,-3,-4,-8,5,5],[9,8,-7,6,-4,-4,6,6,1,-2,-10,4]],[[1,8,-7,-9,-4,-8,7,-9,-6,-6,8,-6],[3,-7,-2,-6,2,10,-9,-8,7,6,-1,-3],[-5,-1,4,1,3,10,-9,-10,-10,-10,9,-4],[5,8,-2,-5,3,1,1,-3,-9,2,1,9],[-10,2,9,6,3,-4,-7,5,4,7,7,-2],[5,4,-5,7,4,-7,-5,-10,8,-5,-2,-7],[6,2,2,-10,9,4,1,-1,3,9,-2,-6],[3,-7,2,9,-6,1,-6,-6,9,1,3,6],[-2,2,5,4,9,-3,5,-1,7,-10,5,10],[-8,-5,-4,7,-9,8,8,4,-5,-2,-10,-3]],[[5,10,9,-7,2,10,-4,-10,7,-6,3,-4],[-6,-1,9,3,-5,-3,4,5,-1,-4,1,7],[3,3,-3,6,-3,-6,-1,4,4,2,9,-8],[2,9,-5,1,2,-5,1,4,8,-4,-3,-5],[-10,-6,6,-3,-5,2,-9,-9,-7,5,6,1],[1,3,6,10,-6,-6,4,1,-2,-9,-7,1],[3,-1,-5,-4,-8,2,-6,-1,-1,-7,8,4],[2,-2,-4,-5,7,9,-8,10,-2,3,5,2],[-5,-2,-8,5,-2,1,8,-4,-1,8,-7,-9],[-1,9,-8,-3,-2,6,-1,-2,-5,-10,8,-9]],[[6,10,8,-4,-2,6,-6,3,-5,-9,-7,1],[1,-5,5,10,1,-7,-1,-7,-4,5,3,-7],[6,-5,7,4,-7,-9,-5,6,-8,5,5,-2],[-5,8,-4,6,-3,2,-7,7,7,6,2,-6],[-6,10,2,-10,-1,-5,-5,5,-2,-5,-5,-2],[-8,-4,2,-3,-2,-10,6,-1,10,2,-9,-3],[-5,-9,-3,-3,-1,1,7,-4,8,-3,-5,1],[-2,-1,1,-3,2,-7,5,6,-6,-1,-3,-2],[-10,7,-9,1,3,-4,3,5,9,10,3,-10],[-5,2,4,8,6,9,6,-7,-9,-7,8,8]],[[3,1,-4,-5,-2,6,8,9,-1,-9,8,6],[-1,-2,5,8,7,-4,-2,9,-5,-9,-1,8],[9,-9,-5,6,9,7,-7,-2,4,-7,-4,-8],[3,1,-8,-8,-8,5,3,1,9,-8,1,-1],[7,-3,4,1,1,-1,-10,-5,5,4,-1,-2],[1,5,1,8,1,10,-3,3,2,2,-3,2],[8,10,1,8,-3,7,-8,-3,-8,-6,-5,-6],[5,10,-6,-9,-10,-2,10,-4,-4,8,-8,2],[-5,7,-9,6,-1,-3,-9,-1,-9,10,4,2],[-7,-1,3,-8,-6,-10,-8,-1,3,7,-8,10]],[[3,9,-6,-9,-3,-7,-6,7,-10,8,-5,8],[-5,-1,5,-10,-3,-8,-2,-1,7,-3,3,-6],[-9,2,5,4,-6,3,-6,10,4,8,4,2],[7,6,-5,2,9,10,5,4,-8,-5,-3,-6],[2,2,-5,-1,10,-2,-10,-3,-10,4,8,9],[6,2,8,6,-4,-9,-5,-1,6,3,2,6],[10,9,8,4,1,-3,6,10,10,-8,10,1],[5,-5,-10,8,2,8,5,-6,-9,-7,10,2],[-9,-6,-10,-6,-3,-1,-1,-2,6,3,-3,-10],[-9,5,6,-1,8,3,-8,-4,-9,3,5,5]],[[7,-7,-8,-1,3,8,5,-4,9,-2,10,6],[-4,1,6,3,3,-4,-6,-8,2,8,-5,2],[-4,1,-2,-3,-7,6,-10,7,-8,4,5,-2],[-8,-4,-7,-7,1,-6,4,-9,-6,4,-5,-1],[1,6,-9,-3,-1,2,-5,10,6,1,7,-2],[-5,1,7,-3,-1,-4,-9,9,-6,-9,-9,-7],[7,4,-7,7,3,4,-9,-10,-7,-3,5,-6],[3,4,-6,-5,-10,-5,5,1,-9,10,3,10],[-6,6,-7,2,2,1,6,1,7,3,9,10],[2,-7,1,6,-2,-9,-7,-8,9,-8,-5,3]]], dtype = "uint8")#candidate|145|(15, 10, 12)|const|uint8
var_146 = relay.var("var_146", dtype = "uint8", shape = (15, 10, 12))#candidate|146|(15, 10, 12)|var|uint8
bop_147 = relay.greater(const_145.astype('bool'), relay.reshape(var_146.astype('bool'), relay.shape_of(const_145))) # shape=(15, 10, 12)
uop_153 = relay.asin(bop_147.astype('float64')) # shape=(15, 10, 12)
bop_159 = relay.minimum(var_146.astype('float32'), relay.reshape(uop_153.astype('float32'), relay.shape_of(var_146))) # shape=(15, 10, 12)
output = bop_159
output2 = bop_159
func_176 = relay.Function([var_146,], output)
mod['func_176'] = func_176
mod = relay.transform.InferType()(mod)
mutated_mod['func_176'] = func_176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_177 = relay.var("var_177", dtype = "uint8", shape = (15, 10, 12))#candidate|177|(15, 10, 12)|var|uint8
func_176_call = mutated_mod.get_global_var('func_176')
call_178 = func_176_call(var_177)
output = call_178
func_179 = relay.Function([var_177], output)
mutated_mod['func_179'] = func_179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_399 = relay.var("var_399", dtype = "float64", shape = (16, 7, 14))#candidate|399|(16, 7, 14)|var|float64
uop_400 = relay.sinh(var_399.astype('float64')) # shape=(16, 7, 14)
func_176_call = mod.get_global_var('func_176')
func_179_call = mutated_mod.get_global_var('func_179')
var_431 = relay.var("var_431", dtype = "uint8", shape = (1800,))#candidate|431|(1800,)|var|uint8
call_430 = func_176_call(relay.reshape(var_431.astype('uint8'), [15, 10, 12]))
call_432 = func_176_call(relay.reshape(var_431.astype('uint8'), [15, 10, 12]))
var_433 = relay.var("var_433", dtype = "float32", shape = (15, 10, 12))#candidate|433|(15, 10, 12)|var|float32
bop_434 = relay.subtract(call_430.astype('int32'), relay.reshape(var_433.astype('int32'), relay.shape_of(call_430))) # shape=(15, 10, 12)
bop_437 = relay.subtract(call_432.astype('int32'), relay.reshape(var_433.astype('int32'), relay.shape_of(call_432))) # shape=(15, 10, 12)
output = relay.Tuple([uop_400,var_431,bop_434,])
output2 = relay.Tuple([uop_400,var_431,bop_437,])
func_440 = relay.Function([var_399,var_431,var_433,], output)
mod['func_440'] = func_440
mod = relay.transform.InferType()(mod)
var_441 = relay.var("var_441", dtype = "float64", shape = (16, 7, 14))#candidate|441|(16, 7, 14)|var|float64
var_442 = relay.var("var_442", dtype = "uint8", shape = (1800,))#candidate|442|(1800,)|var|uint8
var_443 = relay.var("var_443", dtype = "float32", shape = (15, 10, 12))#candidate|443|(15, 10, 12)|var|float32
output = func_440(var_441,var_442,var_443,)
func_444 = relay.Function([var_441,var_442,var_443,], output)
mutated_mod['func_444'] = func_444
mutated_mod = relay.transform.InferType()(mutated_mod)
const_878 = relay.const([[[3,6,-3,-9,8,-2],[-7,9,-5,4,5,-9],[6,6,3,9,7,2],[-8,10,-9,9,9,7],[-8,1,4,2,7,2],[-3,8,8,-9,10,-2],[-4,-7,10,-6,-5,-4],[9,1,-6,-8,5,1],[5,-10,1,-6,-7,-9],[-6,-5,-2,-2,-7,-6],[7,3,9,7,-4,-9]],[[-3,2,-7,-4,4,4],[8,-6,8,-7,-8,-8],[2,9,4,-1,-2,-4],[-3,-1,-8,2,8,9],[4,10,-4,-8,-4,4],[-6,5,-9,-6,7,-9],[2,-1,1,-6,-5,6],[-7,-8,3,10,-9,7],[6,-10,3,-10,-1,7],[10,-9,-4,-4,1,-1],[-4,-4,-8,2,-6,-6]],[[2,-8,-6,6,-10,9],[-4,-4,-7,-1,-8,5],[-8,1,-1,-5,-3,-5],[9,5,10,5,8,-9],[6,5,5,-1,9,6],[-9,1,7,-10,-1,6],[-10,-5,10,-3,-6,-10],[8,-3,-3,5,4,-3],[5,-5,-10,-10,-4,1],[1,-10,-10,-7,2,-5],[10,5,9,-3,3,3]],[[-1,-6,-9,8,-10,-8],[-7,-9,4,-3,8,-8],[-8,-1,9,6,8,6],[10,-9,2,-1,2,-9],[-5,-3,-10,2,-2,-1],[-9,-4,1,-6,3,3],[3,-6,5,-3,8,5],[-9,-8,-10,-3,-5,7],[4,-1,9,4,-8,-10],[8,3,-1,3,-5,-8],[-9,-3,-7,-2,-4,-10]],[[7,-6,6,5,-9,-9],[-7,10,-3,-7,1,-9],[-10,9,-4,-6,5,-7],[10,-5,2,-1,8,3],[2,-6,-9,1,-5,-3],[3,3,3,-1,2,4],[-1,3,8,1,-5,3],[1,3,-8,7,8,-7],[8,6,5,-3,6,-4],[-3,4,-1,4,-3,-7],[3,-10,4,2,7,-1]],[[9,-9,-4,-9,9,7],[-10,-3,5,-4,6,9],[-3,-1,8,-5,7,-2],[-6,-8,-4,-6,-3,7],[-8,8,7,3,10,-4],[-7,-5,-10,7,-8,2],[9,6,4,-4,6,-6],[9,5,-3,-8,-8,5],[2,6,7,3,6,10],[5,-4,-5,-4,-2,-4],[9,-5,8,5,-2,-3]]], dtype = "int8")#candidate|878|(6, 11, 6)|const|int8
var_879 = relay.var("var_879", dtype = "int8", shape = (6, 11, 6))#candidate|879|(6, 11, 6)|var|int8
bop_880 = relay.less(const_878.astype('bool'), relay.reshape(var_879.astype('bool'), relay.shape_of(const_878))) # shape=(6, 11, 6)
output = bop_880
output2 = bop_880
func_884 = relay.Function([var_879,], output)
mod['func_884'] = func_884
mod = relay.transform.InferType()(mod)
mutated_mod['func_884'] = func_884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_885 = relay.var("var_885", dtype = "int8", shape = (6, 11, 6))#candidate|885|(6, 11, 6)|var|int8
func_884_call = mutated_mod.get_global_var('func_884')
call_886 = func_884_call(var_885)
output = call_886
func_887 = relay.Function([var_885], output)
mutated_mod['func_887'] = func_887
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1618 = relay.var("var_1618", dtype = "float32", shape = (15, 8, 8))#candidate|1618|(15, 8, 8)|var|float32
var_1619 = relay.var("var_1619", dtype = "float32", shape = (15, 8, 8))#candidate|1619|(15, 8, 8)|var|float32
bop_1620 = relay.equal(var_1618.astype('bool'), relay.reshape(var_1619.astype('bool'), relay.shape_of(var_1618))) # shape=(15, 8, 8)
output = bop_1620
output2 = bop_1620
func_1624 = relay.Function([var_1618,var_1619,], output)
mod['func_1624'] = func_1624
mod = relay.transform.InferType()(mod)
mutated_mod['func_1624'] = func_1624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1624_call = mutated_mod.get_global_var('func_1624')
var_1626 = relay.var("var_1626", dtype = "float32", shape = (15, 8, 8))#candidate|1626|(15, 8, 8)|var|float32
var_1627 = relay.var("var_1627", dtype = "float32", shape = (15, 8, 8))#candidate|1627|(15, 8, 8)|var|float32
call_1625 = func_1624_call(var_1626,var_1627,)
output = call_1625
func_1628 = relay.Function([var_1626,var_1627,], output)
mutated_mod['func_1628'] = func_1628
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1730 = relay.var("var_1730", dtype = "float32", shape = (1, 15, 1))#candidate|1730|(1, 15, 1)|var|float32
uop_1731 = relay.sigmoid(var_1730.astype('float32')) # shape=(1, 15, 1)
output = relay.Tuple([uop_1731,])
output2 = relay.Tuple([uop_1731,])
func_1754 = relay.Function([var_1730,], output)
mod['func_1754'] = func_1754
mod = relay.transform.InferType()(mod)
mutated_mod['func_1754'] = func_1754
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1755 = relay.var("var_1755", dtype = "float32", shape = (1, 15, 1))#candidate|1755|(1, 15, 1)|var|float32
func_1754_call = mutated_mod.get_global_var('func_1754')
call_1756 = func_1754_call(var_1755)
output = call_1756
func_1757 = relay.Function([var_1755], output)
mutated_mod['func_1757'] = func_1757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1786 = relay.var("var_1786", dtype = "float64", shape = (14, 11, 6))#candidate|1786|(14, 11, 6)|var|float64
const_1787 = relay.const([[[-0.286202,-4.006361,-9.009283,-8.149755,6.147007,-9.732000],[1.835843,-1.406422,-0.461788,4.667685,6.605787,7.885391],[8.048664,2.039306,-6.444727,8.622127,-9.201610,-4.310384],[-6.731402,8.059277,-6.826471,1.642415,6.690233,-0.954863],[0.473670,-1.978983,8.922116,-2.805203,8.659287,9.665920],[-3.796572,5.921908,-0.783755,4.397110,-2.191761,7.917497],[-4.341697,-5.043726,-5.187815,0.177758,8.823476,6.979175],[9.956743,6.747907,3.277883,8.581922,9.571495,6.607397],[-2.702903,-5.788546,0.505016,1.346080,1.045525,7.748726],[8.677524,9.638306,-8.084999,0.523025,-0.064303,4.663334],[-7.846369,4.076021,3.174247,8.904624,9.843061,-5.754123]],[[6.539164,-5.689944,-0.829776,5.647750,-8.157575,-6.287819],[1.884282,9.451529,-8.197997,0.274217,5.418536,5.932455],[2.373070,-2.123969,-6.557587,7.692734,1.871685,-4.835337],[2.361140,7.563826,8.296412,0.492639,3.210831,-5.032578],[7.440305,-9.034954,1.864979,5.346063,4.669489,2.391192],[-1.073282,9.567305,6.152615,8.521997,7.943467,-2.449669],[-7.332652,1.847175,-9.702344,-8.624117,-9.373211,-5.893438],[-2.452702,-2.221230,-0.835573,7.425945,9.653025,-0.014122],[2.383107,8.789405,-5.093212,1.895703,6.597877,-0.672510],[-2.893714,8.458773,-3.708776,-2.388014,4.158075,-5.274880],[4.705817,7.426070,-4.558115,9.949017,7.209295,2.596432]],[[-6.810614,7.036914,9.809946,-3.907153,-0.526948,-7.585483],[5.480395,8.922702,-9.288951,-6.909741,9.587932,-7.240343],[6.978342,4.011136,-1.406871,-0.128836,8.118390,4.382405],[-4.661620,2.992419,8.058130,7.613576,-5.471031,-0.403046],[-8.807092,-8.003710,-0.536519,5.067189,-1.521823,-7.813700],[5.063976,-5.657599,-0.095536,-0.938465,7.787955,3.157825],[2.704247,1.801870,3.225597,-8.078436,5.093359,-0.911826],[4.093708,1.368363,-9.741488,3.672361,6.805981,1.772569],[6.423354,-0.543288,5.796824,6.080860,-2.499198,-8.286841],[-0.841842,4.005960,-5.467863,4.141865,6.659659,2.867102],[8.067389,-4.763240,-1.526051,-6.078972,4.350151,-2.566517]],[[9.628781,5.612698,9.593954,5.815985,1.636651,5.961464],[-6.437975,9.565756,4.802989,-7.276033,0.126062,4.200623],[-9.026442,2.806571,-3.515049,-4.197156,-6.130698,1.360261],[4.377782,2.173521,9.191793,-8.162705,-5.874087,-6.996079],[4.603623,-6.315773,8.972172,-1.015083,6.886155,5.299483],[-3.817854,7.824037,2.973559,-3.386785,-3.038286,0.190299],[-6.785294,8.166446,-8.479790,-7.051971,-4.605918,-4.566350],[0.050561,1.217560,8.766509,-3.254251,-4.612689,-7.792516],[4.341228,7.698863,-1.548121,6.483927,-0.980930,8.648283],[-1.317436,-7.608924,-1.071492,-2.535734,-7.270569,6.391914],[-5.085062,3.036792,8.542220,4.426319,-5.609899,-4.120591]],[[3.462801,3.465662,2.395365,-6.234730,-5.777202,-4.475750],[-0.461717,-8.519752,7.183251,-8.267506,-7.704384,-9.220518],[2.138668,-5.082592,-7.790040,-4.223937,-7.694873,-5.052660],[6.537978,-9.653824,5.526626,-3.505581,3.285287,-4.335063],[-2.229947,2.278668,-1.254250,2.879422,8.011159,3.597758],[-7.674870,1.981087,5.422700,-6.266762,9.230974,6.674833],[-3.552482,-8.429526,-5.116489,-6.032820,1.998639,8.997406],[1.791865,9.557082,-7.137848,7.197512,-1.947059,-1.140129],[-8.402623,-7.418117,4.390979,-1.492116,-3.901595,3.831816],[-6.130343,8.802655,5.895090,7.560538,7.742498,1.496582],[-8.626070,5.790629,-0.931070,-1.124937,-2.565415,-6.875482]],[[-2.333513,9.093748,9.117172,-4.062217,-9.044878,8.259218],[-5.379704,6.902356,1.734943,-6.094645,3.437438,-1.001746],[9.374386,-8.949333,-0.256282,4.057857,6.400494,7.049912],[7.379846,-7.952164,2.940679,-7.393749,6.408622,-0.504770],[-7.079815,-9.845993,-8.547956,3.969243,3.198737,6.266462],[-0.708817,1.607046,-2.637199,-8.838261,-8.060780,6.826065],[-0.679221,3.625950,1.101459,-4.113137,-7.036135,9.513552],[-3.636436,-0.899435,-7.108037,0.940151,-9.760354,5.847543],[9.522079,2.435686,-6.785673,3.188815,-1.116943,-5.899301],[-8.212366,1.601887,3.418322,4.070718,-3.547280,-7.135829],[-5.386342,1.899585,-0.087825,0.414415,1.338439,5.828539]],[[8.489960,-9.699502,3.246591,-6.233404,-2.338772,5.915016],[-2.959059,3.293385,-1.983372,-6.581899,4.821303,-4.165436],[-4.462097,4.385115,-3.860412,9.055494,9.841771,6.244138],[6.644239,2.190734,5.377032,6.923768,6.268685,-9.610529],[-7.634218,-7.919865,4.871912,4.203640,-9.415239,6.064871],[6.319821,9.731787,-2.162573,-2.787989,-5.603339,5.358275],[-2.705744,1.370186,5.156250,2.827039,-7.723464,5.769163],[-7.855133,8.174797,8.976938,7.989005,-0.734000,-5.658029],[5.676643,-7.664783,-8.354894,-7.886042,-1.687624,-6.783780],[2.471952,-2.822129,-3.404176,2.374846,-6.984705,4.112964],[1.043117,9.337955,5.420759,8.929858,-0.211740,-4.676630]],[[5.804933,2.644193,7.644109,-3.520525,1.773576,-4.558546],[-9.762772,0.117991,9.631644,8.927513,1.988524,-7.771592],[-5.788049,-0.602968,9.770903,3.385555,7.573524,-7.843824],[-9.710081,2.383441,6.336903,2.974760,-6.456381,6.430126],[-9.093004,-3.532346,7.421840,-9.782080,-3.225806,-4.252680],[-3.170457,2.903995,-8.129685,-8.741539,-6.474436,-0.885041],[0.088139,3.006021,-0.296331,0.042841,8.148534,2.943476],[-3.069698,-9.454731,-5.446882,-8.841192,-4.987758,-9.071597],[-5.209886,-3.237960,-9.755586,-1.615649,-6.531611,1.868163],[-5.729006,7.713984,1.767685,-2.363795,0.231248,-5.954787],[4.582114,-0.051149,-4.583213,-4.966151,4.348292,4.391329]],[[-7.562433,4.744144,-0.942271,7.839117,-7.508687,-8.489194],[5.121476,1.365220,-5.606759,-4.179199,7.145833,5.048990],[7.818749,-4.779947,-5.289205,5.252765,3.144913,-4.317329],[9.221800,4.868671,-3.427017,2.250108,-1.488908,-9.168179],[3.338899,3.649961,5.955097,-5.927158,-7.797367,5.342475],[0.231664,1.613874,-6.884034,-2.451687,-9.595715,0.541792],[0.050453,-5.612352,1.116748,-2.174830,-2.722647,8.314670],[6.475015,-7.269128,-7.892402,-3.807600,-8.421279,3.768470],[8.205661,2.525418,2.584332,1.831858,5.404750,-3.339203],[-1.759129,3.983040,-0.230608,1.527777,0.874337,-1.714757],[8.467646,9.178883,-4.513340,-3.688923,-3.247641,7.986765]],[[-1.741693,-4.751228,5.812458,2.021060,-2.648539,-3.489043],[4.999102,-5.056568,6.262040,5.817062,1.601059,0.574954],[8.875621,-2.760062,0.148598,0.987619,-6.031246,0.524347],[-2.199230,4.886862,-3.021565,-1.360037,0.363373,-0.604365],[5.639789,-4.714423,-1.449476,-1.157607,7.082605,0.433356],[2.031894,0.545370,-4.071755,5.802281,3.173179,3.631158],[-5.795194,1.537348,-4.598654,-0.131962,7.329935,3.937580],[-9.114133,5.923598,-5.979960,-9.798920,6.104160,1.368798],[7.328177,6.444974,2.408299,-2.187714,-6.898661,-9.125664],[0.043828,-2.063689,1.951066,-4.029649,5.272694,6.178558],[-1.323298,0.548347,2.392620,2.369544,7.266155,2.696046]],[[-3.899992,-8.179846,-6.361027,1.242147,-8.176395,-3.203113],[7.757520,6.152189,5.705394,-1.227064,9.759712,9.236943],[-2.917033,5.387138,2.344057,2.002197,-3.220440,-4.194916],[-9.347615,-2.812491,9.488059,-4.439236,7.494626,-7.705345],[-4.942915,-8.684980,-2.288027,4.095310,-2.194605,7.413175],[3.232384,0.909820,-5.051563,-0.436878,-2.693876,7.321479],[-1.839496,-1.444814,-3.386633,-4.470227,-6.058930,-4.141057],[-4.591966,9.834431,-1.018582,5.912303,6.121113,6.035621],[-2.959894,-7.050475,-1.452128,9.312635,9.764635,-7.062454],[-8.465884,9.742125,7.026923,2.134908,5.028488,-9.243427],[2.767913,5.397945,9.705862,3.952318,3.742393,-5.391563]],[[0.127329,-3.241234,2.824460,-9.136570,8.393539,-4.601726],[4.038338,-0.017308,5.573573,-2.735171,-8.136819,1.847294],[-4.337043,-7.382008,0.966461,6.352058,-1.763067,3.536116],[-4.091554,9.381943,5.594852,-8.866177,5.738268,3.020304],[-4.753457,-3.673016,-4.947453,-9.120252,-3.581573,-5.426911],[6.201384,-8.524601,4.056069,6.477853,-2.612016,5.022148],[5.988844,-1.632295,-9.576130,5.849718,-5.414108,-7.738407],[7.538979,5.516951,5.620123,4.256633,-5.036894,-8.298713],[-1.843974,6.606765,-1.842373,-2.559536,4.495897,-4.161192],[5.713165,-2.574859,7.437015,-9.215486,4.568195,-8.039946],[4.671552,8.564687,-4.376442,0.165760,9.176985,3.270142]],[[5.871686,3.435933,-5.276418,-3.378807,4.700303,3.430351],[3.367940,-2.176511,-0.837702,3.781114,-6.430997,0.043014],[-5.872824,6.025268,4.959791,8.632643,4.153792,0.218814],[4.487335,8.710238,-2.856689,1.452996,-9.769227,-6.936568],[9.333512,-1.378647,-1.242227,-1.795655,-5.034607,0.062456],[-7.012548,-9.467566,9.724116,2.615777,4.020974,-8.705173],[-1.906155,-4.735769,7.990603,8.347527,-0.286462,-5.709792],[0.912421,-5.569497,6.030919,9.700285,-2.018641,6.274358],[-0.872044,-2.326301,6.380536,8.151077,0.188880,-7.767433],[7.111430,7.466807,1.227284,-6.547543,-2.199156,-8.643811],[-0.863312,4.697825,6.693298,3.897870,5.260967,9.823667]],[[-3.983578,-5.266285,-7.834388,-1.219182,-9.354270,-4.661137],[8.425926,-6.079154,5.212445,8.192572,7.026725,-0.196721],[1.007067,-5.305731,-5.157187,6.039280,-5.431357,-5.103851],[-3.180988,-1.590884,-9.482968,-3.032970,-4.354655,1.653774],[3.249143,0.310625,9.040058,2.143500,0.194655,5.039702],[-7.408447,-5.091387,0.930597,1.527736,9.696994,-2.638054],[-8.169801,-7.138320,-6.937693,-1.052780,-8.625854,-2.765663],[-0.358668,5.180100,8.995095,8.064117,2.837806,-1.483137],[-8.863161,3.463548,-6.685073,9.895318,-0.794978,6.822265],[4.684644,8.000343,9.792787,6.108070,2.739329,-2.812327],[0.890958,-6.967749,1.056472,7.394559,1.955094,-2.959606]]], dtype = "float64")#candidate|1787|(14, 11, 6)|const|float64
bop_1788 = relay.mod(var_1786.astype('float64'), relay.reshape(const_1787.astype('float64'), relay.shape_of(var_1786))) # shape=(14, 11, 6)
output = relay.Tuple([bop_1788,])
output2 = relay.Tuple([bop_1788,])
func_1802 = relay.Function([var_1786,], output)
mod['func_1802'] = func_1802
mod = relay.transform.InferType()(mod)
var_1803 = relay.var("var_1803", dtype = "float64", shape = (14, 11, 6))#candidate|1803|(14, 11, 6)|var|float64
output = func_1802(var_1803)
func_1804 = relay.Function([var_1803], output)
mutated_mod['func_1804'] = func_1804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1919 = relay.var("var_1919", dtype = "float64", shape = (1, 2, 3))#candidate|1919|(1, 2, 3)|var|float64
uop_1920 = relay.log2(var_1919.astype('float64')) # shape=(1, 2, 3)
output = relay.Tuple([uop_1920,])
output2 = relay.Tuple([uop_1920,])
func_1929 = relay.Function([var_1919,], output)
mod['func_1929'] = func_1929
mod = relay.transform.InferType()(mod)
mutated_mod['func_1929'] = func_1929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1930 = relay.var("var_1930", dtype = "float64", shape = (1, 2, 3))#candidate|1930|(1, 2, 3)|var|float64
func_1929_call = mutated_mod.get_global_var('func_1929')
call_1931 = func_1929_call(var_1930)
output = call_1931
func_1932 = relay.Function([var_1930], output)
mutated_mod['func_1932'] = func_1932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2111 = relay.var("var_2111", dtype = "float32", shape = (9, 15, 7))#candidate|2111|(9, 15, 7)|var|float32
uop_2112 = relay.asinh(var_2111.astype('float32')) # shape=(9, 15, 7)
func_884_call = mod.get_global_var('func_884')
func_887_call = mutated_mod.get_global_var('func_887')
const_2115 = relay.const([3,-8,-1,-4,-4,8,-8,3,3,2,5,7,-4,-5,-10,-8,10,5,-1,-4,-10,2,-3,1,-5,5,4,3,-5,-9,-1,-7,5,10,-2,4,9,1,3,7,-6,-7,6,-10,-8,-3,8,-10,3,10,6,-1,-9,6,6,-9,6,3,-6,3,4,3,-6,-4,4,-6,9,5,10,2,-7,-8,-7,-4,-6,6,-3,-1,-1,9,10,-6,-5,-6,4,-10,-9,3,1,-8,6,-8,-1,9,-5,-7,-8,-3,6,7,-7,3,5,-1,-5,5,1,2,4,5,-2,4,7,-2,-7,5,7,-10,-3,-1,10,-2,1,4,-5,-3,-3,-8,4,-5,10,7,-7,-10,-7,-1,-8,7,-4,5,2,-6,-6,-5,-6,-3,8,4,6,8,-6,2,9,-5,2,4,-9,9,7,-8,-2,-7,-1,-10,6,10,-4,-6,-2,7,3,8,-2,-9,-10,-9,-10,-7,-1,9,2,9,-4,10,-8,-1,-8,2,7,8,8,2,-6,-10,3,-4,1,-2,8,10,-10,-6,-2,-8,-10,6,4,8,4,-8,-7,3,-6,2,8,-10,3,-7,-4,3,1,-2,5,6,-7,-8,9,-4,-10,-10,6,-9,6,3,-8,2,6,-4,-3,2,-7,6,-4,10,5,-4,-10,2,-8,-5,-3,-8,2,-10,2,-5,-2,4,1,2,4,9,-1,-9,7,-7,-3,-7,-7,-10,-9,-10,7,-1,-8,6,-10,-5,7,-2,-9,5,4,-7,-1,3,-3,2,-7,-10,-7,8,-3,-10,8,-5,3,-9,3,9,2,-5,5,6,-2,8,5,5,-8,10,-9,2,-6,10,-6,3,-10,-6,-8,8,1,7,3,-5,9,8,-2,-1,-1,10,-9,-7,3,-8,6,-1,2,-4,-2,-6,6,-2,-6,1,-1,7,3,-10,9,-9,4,3,-8,2,8,2,4,6,-4,-7,5,-8,8,-7,6,4,-6,7,-4,5,-7,-7,10,8,10,2,7,-6,-5,-4,10,2,-4,9,6,-1,-10,3,-2,3,-4,9,-4,10,9,2], dtype = "int8")#candidate|2115|(396,)|const|int8
call_2114 = func_884_call(relay.reshape(const_2115.astype('int8'), [6, 11, 6]))
call_2116 = func_884_call(relay.reshape(const_2115.astype('int8'), [6, 11, 6]))
output = relay.Tuple([uop_2112,call_2114,const_2115,])
output2 = relay.Tuple([uop_2112,call_2116,const_2115,])
func_2131 = relay.Function([var_2111,], output)
mod['func_2131'] = func_2131
mod = relay.transform.InferType()(mod)
mutated_mod['func_2131'] = func_2131
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2132 = relay.var("var_2132", dtype = "float32", shape = (9, 15, 7))#candidate|2132|(9, 15, 7)|var|float32
func_2131_call = mutated_mod.get_global_var('func_2131')
call_2133 = func_2131_call(var_2132)
output = call_2133
func_2134 = relay.Function([var_2132], output)
mutated_mod['func_2134'] = func_2134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2136 = relay.var("var_2136", dtype = "float32", shape = ())#candidate|2136|()|var|float32
var_2137 = relay.var("var_2137", dtype = "float32", shape = (11, 12, 4))#candidate|2137|(11, 12, 4)|var|float32
bop_2138 = relay.divide(var_2136.astype('float32'), var_2137.astype('float32')) # shape=(11, 12, 4)
func_440_call = mod.get_global_var('func_440')
func_444_call = mutated_mod.get_global_var('func_444')
var_2144 = relay.var("var_2144", dtype = "float64", shape = (1568,))#candidate|2144|(1568,)|var|float64
const_2145 = relay.const([8,-6,9,-1,10,-3,-3,9,5,-4,-2,-1,1,-9,-5,-8,4,-8,-4,9,4,-10,-9,1,-1,-5,1,1,-3,-9,-5,-1,-1,-5,7,6,-5,8,-9,6,-4,-5,8,9,8,-10,-4,-3,10,-9,3,-10,-6,-10,7,-5,10,-6,-7,2,4,10,2,5,3,-1,-1,-3,-9,-2,-1,-7,-8,-9,-9,-10,-10,-1,4,-6,-9,-1,8,-7,-9,3,-5,-8,7,-6,8,-9,4,3,-5,-5,6,5,2,-10,9,10,8,-7,-7,1,-8,-4,-2,2,-7,-4,-5,-6,-10,-7,-2,5,6,2,4,9,-6,6,-1,5,-3,1,-7,4,-5,-8,-9,6,-6,1,4,4,2,-5,-6,10,-9,-9,10,-6,6,2,9,-5,6,7,-3,-7,-8,-7,-5,6,-10,10,8,-4,10,-2,-2,5,2,-8,-2,-9,9,7,-2,8,7,3,4,2,5,-4,-10,7,-3,-6,-1,-5,8,4,4,6,-8,7,-8,7,-2,4,-1,5,-7,-1,3,-7,-8,4,3,-3,9,-4,-8,4,-3,3,9,-10,-6,-5,6,3,4,-8,-7,7,-3,-5,-1,3,7,-10,4,5,8,1,3,-10,9,-4,-10,-2,-2,-6,-8,-9,-4,3,8,8,-1,1,-10,1,-8,-8,7,-1,-1,-4,-5,5,-1,-7,-8,6,-3,3,10,5,-10,6,6,-6,6,5,-10,-1,9,-3,-5,6,8,3,5,7,2,-1,-5,-5,-7,-10,-3,2,-1,8,-4,5,-4,-1,6,-4,-5,9,4,-1,-8,-7,-4,-10,-2,2,-5,-9,5,7,9,-2,-6,6,-8,-10,8,5,6,8,6,-5,10,9,3,-9,-9,1,-3,-5,4,7,-3,-5,-10,9,6,6,-8,-1,2,7,10,-7,5,-6,-9,2,-5,-3,3,-10,7,-4,2,-8,-5,8,-3,10,6,8,9,9,10,-9,-7,-1,-7,-9,-10,5,-2,-3,-7,4,1,1,3,-1,4,-5,9,5,-8,-6,9,-6,-4,5,-3,5,2,-1,-7,-7,4,-4,-5,10,-1,-4,10,3,-10,-5,9,5,9,-6,10,-7,-5,-9,10,-8,8,3,-3,-3,-7,5,10,7,8,6,-9,2,6,6,3,-8,5,10,-8,-10,1,2,5,-3,-5,1,-1,-7,6,-2,-7,-3,-2,2,-8,-8,10,-2,-9,10,-3,-9,-5,1,10,-4,6,3,2,9,-10,1,-6,8,8,-1,-10,5,-7,-1,-2,7,-2,-7,6,4,-2,7,-8,3,-5,-8,5,4,-2,10,-8,3,5,-4,-5,-8,-3,-4,2,-8,-4,-5,2,10,2,9,6,10,1,4,-4,2,9,-8,-3,-1,-3,-3,-4,8,-4,-8,8,-4,3,4,2,5,-9,-2,9,9,-10,6,7,1,-10,6,10,6,9,3,5,-3,-10,7,10,1,10,3,-1,1,-7,9,8,-1,5,-10,-1,-5,8,10,9,8,-9,7,7,-1,-6,2,-8,-2,-6,-1,3,-7,9,-1,-9,6,-9,-7,-10,1,-1,-9,-7,-1,-1,-1,10,7,5,6,6,1,-4,2,-9,9,9,8,-10,8,-3,8,-6,5,-3,-3,-4,6,3,3,4,-1,-1,-6,9,-2,2,-10,-5,10,-5,-8,-7,6,-4,-1,10,-1,2,1,3,6,3,4,8,-9,8,1,-4,5,-5,-6,10,-5,5,4,1,-3,-7,-4,2,-9,3,-6,-6,-6,-9,3,2,-2,5,-4,9,1,-6,-10,-2,-9,-6,1,7,-2,-2,8,4,-8,9,5,1,1,-5,-6,-9,-2,-9,8,2,4,6,5,-5,8,7,1,9,5,-4,-9,-5,1,-3,2,10,9,-2,-3,9,1,5,6,-6,8,-2,-5,7,3,-7,-7,-2,3,1,1,7,8,3,-6,6,1,2,-7,3,10,4,7,4,-10,-5,-8,10,-6,1,4,-5,-7,10,-5,3,-3,5,-3,-9,7,-3,-6,-1,7,-4,1,-5,-6,2,8,-9,4,-10,-4,-9,2,-5,4,3,-10,-4,6,-7,4,8,-7,-2,2,8,-2,-8,-1,-5,1,-8,-2,-9,-2,5,-10,-10,1,-9,-6,10,4,-2,-4,-9,4,-5,-2,7,5,-1,-6,-3,3,-9,-7,-8,-8,7,7,7,5,-8,-8,-2,8,7,4,-10,-2,-9,9,-1,6,-8,-7,-6,9,-1,8,10,-7,-1,-9,-2,-9,1,8,4,-1,9,-9,10,9,-7,-7,5,7,6,5,6,-1,-2,8,-3,8,9,-6,-7,2,-2,-2,2,-2,-5,8,-1,-8,-8,-8,-7,4,4,-5,-7,-5,-6,7,-6,6,-6,-3,-5,-1,-9,-5,-5,-4,-1,2,-8,6,-7,1,9,-5,6,-3,10,6,-3,6,10,-1,-9,-6,3,10,-4,-3,10,10,-5,7,-7,3,-1,-1,10,-1,-6,-7,-8,9,10,5,-8,-6,-7,8,-5,5,-3,9,8,-2,7,-3,6,9,4,6,10,-6,-4,-3,7,-4,-6,-4,3,9,5,6,-4,9,-2,1,-8,9,1,-2,-1,9,-1,2,-8,5,4,9,8,-7,5,-2,-3,9,-4,4,-1,-3,-7,6,7,-1,5,-9,9,5,4,-9,10,-2,-10,10,-1,-4,9,4,-3,4,-6,-5,1,-9,7,1,-9,-2,9,-2,6,-9,-8,-8,9,-1,7,9,5,-10,-7,10,3,-7,-3,-5,5,-1,-4,-5,10,-7,3,-4,4,-1,-4,9,2,-2,-4,-3,8,1,-4,6,-2,1,-8,4,-9,-5,5,-2,7,-3,10,10,-9,-1,-7,6,-1,7,-6,-1,7,7,9,10,-3,9,-8,-3,-9,-1,-3,-10,-8,6,-9,8,-5,7,-6,10,-9,-5,7,5,4,4,4,4,10,-5,-8,-4,-10,5,-7,7,3,4,-10,5,6,-3,-3,4,8,-6,-4,7,9,-10,-6,-4,-7,-6,7,4,3,4,6,-3,7,9,8,-5,-8,5,10,-3,-8,-7,-2,-6,8,-1,8,-9,1,-6,3,-8,-4,5,4,2,-8,-7,-10,5,5,-4,-10,-9,10,2,7,-6,-6,-7,-10,-2,-10,9,4,-1,10,3,8,-2,7,4,7,7,1,-2,6,9,5,-9,-2,5,6,1,-9,-2,1,2,-6,-9,-4,-9,-9,8,6,10,-8,9,4,-5,5,9,5,-3,-10,-7,-7,7,-5,-7,-2,9,3,-1,-10,-10,-6,-10,-2,-2,-7,-9,5,8,10,-1,4,10,7,-4,10,1,-7,-6,4,-3,7,3,7,2,-9,-10,10,-10,-3,-4,-8,-10,-6,4,-6,-10,9,5,-7,1,-9,-8,-3,7,-1,-1,-8,6,9,5,-6,-8,-8,-9,1,10,-3,8,5,3,8,6,5,1,1,7,9,-2,-10,4,5,9,4,-5,5,-8,-2,-1,6,10,8,-7,-5,-7,-2,-6,7,-6,-5,4,8,6,-6,-6,-1,-2,-6,-7,1,-7,5,1,-9,6,7,7,-2,5,4,-10,10,3,4,8,-5,8,6,-3,4,2,-1,-7,4,9,-5,-2,-3,-2,6,-2,-5,-1,10,8,5,-5,9,-7,4,-10,7,8,6,6,-10,-2,-9,-5,-7,2,5,10,9,-8,5,6,9,-1,3,-8,8,-7,-3,5,-9,3,4,7,-1,10,4,-8,-9,-9,-8,5,-5,2,-7,7,4,10,-3,3,4,2,1,-1,8,-3,5,2,-2,-9,1,-7,-7,-3,5,-6,1,-7,7,3,7,4,5,5,2,10,-3,-6,-5,-3,-5,1,9,8,-7,-3,-8,10,5,-3,-1,-10,-2,-5,5,9,-8,-8,10,5,9,-4,7,10,-9,-10,-8,5,7,8,7,-4,8,2,-7,3,-6,-3,-1,6,-8,10,-7,7,-2,-5,-10,4,10,4,-4,5,6,-3,-3,-6,-5,8,-1,5,-7,2,9,7,-3,-9,2,7,4,-6,8,7,-10,3,-7,5,-9,5,-5,7,5,-7,4,4,3,-4,-2,4,5,3,6,-9,-5,2,7,9,7,-7,-1,8,1,-5,-4,-6,6,2,7,8,-6,-1,-10,-4,-6,10,2,-1,2,7,-7,-3,-2,7,-6,1,-3,-4,-3,-2,9,-8,9,-5,7,7,7,-7,4,-2,8,2,-6,-8,5,1,3,-5,9,3,6,-10,-9,3,2,6,9,-5,6,-7,5,-5,7,1,1,-2,6,-9,-8,10,10,-3,-6,5,2,-5,9,-5,1,2,10,1,5,-2,-4,4,8,6,-6,8,-2,4,2,-10,5,-6,-4,-10,-7,-2,5,-9,-3,-1,-6,6,-3,-1,-10,-7,-1,-10,10,-5,-6,-7,5,6,-1,-7,-7,4,5,-4,-6,-2,3,-3,-5,7,-7,2,2,-10,-6,-9,9,-2,9,-1,-4,2,-6,10,3,-1,-6,2,1,-3,8,10,5,2,-8,1,-6,1,7,-3,1,-3,-7,4,-7,-6,9,2,10,2,-9,-1,-5,6,4,-4,-3,9,-4,-1,10,-5,7,-6,3,4,10,-4,-8,7,-2,-6,-8,7,7,-4,-7,-9,6,1,3,1,3,-8,-8,4,4,6,-2,-7,-3,8,-9,4,2,7,3,1,-3,-10,2,10,-1,-1,9,3,-8,-2,10,2,-3,9,5,3,-9,-9,-6,-10,-5,-3,-8,6,9,-2,-4,-3,3,3,2,-8,-1,-3,-7,-8], dtype = "uint8")#candidate|2145|(1800,)|const|uint8
call_2143 = relay.TupleGetItem(func_440_call(relay.reshape(var_2144.astype('float64'), [16, 7, 14]), relay.reshape(const_2145.astype('uint8'), [1800,]), relay.reshape(const_2145.astype('float32'), [15, 10, 12]), ), 0)
call_2146 = relay.TupleGetItem(func_444_call(relay.reshape(var_2144.astype('float64'), [16, 7, 14]), relay.reshape(const_2145.astype('uint8'), [1800,]), relay.reshape(const_2145.astype('float32'), [15, 10, 12]), ), 0)
func_1929_call = mod.get_global_var('func_1929')
func_1932_call = mutated_mod.get_global_var('func_1932')
var_2171 = relay.var("var_2171", dtype = "float64", shape = (6,))#candidate|2171|(6,)|var|float64
call_2170 = relay.TupleGetItem(func_1929_call(relay.reshape(var_2171.astype('float64'), [1, 2, 3])), 0)
call_2172 = relay.TupleGetItem(func_1932_call(relay.reshape(var_2171.astype('float64'), [1, 2, 3])), 0)
func_1624_call = mod.get_global_var('func_1624')
func_1628_call = mutated_mod.get_global_var('func_1628')
const_2216 = relay.const([1.795418,-5.720297,2.705992,-3.799643,3.854677,8.743119,-4.837581,-7.661758,-5.073306,-2.364637,-2.889671,8.567950,-8.666355,-5.679098,-4.495307,0.011124,3.542123,-8.027385,9.908444,8.523791,-8.363127,-8.478516,9.256207,-8.320189,3.187750,6.337161,1.467393,-1.281937,-2.730208,0.117208,-7.824836,9.569214,-2.480895,-7.202852,-2.462879,-9.895978,-2.762761,-9.692786,-7.917561,-5.304626,0.823197,8.617984,-7.506061,-7.058991,4.524001,7.784702,3.346788,3.475261,-7.668036,5.161573,9.049659,-7.138538,-9.884609,-3.944428,8.121042,1.927502,-0.397506,-3.227010,-7.357520,8.892237,-0.891219,-0.722205,5.635555,-6.590463,2.138215,1.888228,2.941997,4.770451,-5.566472,-1.271349,-9.484096,-2.756067,3.927953,6.741161,-5.484438,2.128296,3.464478,-8.102467,8.604649,4.859295,-0.117533,0.934658,-3.051857,5.753835,-2.652578,-0.613494,6.373342,3.768062,1.442906,5.378822,-2.820146,4.150277,-0.469280,-6.371933,-7.704768,-7.678988,-3.561350,-5.601683,-2.981205,3.544324,-6.842644,0.739746,9.481911,-4.334853,7.644541,-7.071676,-1.896750,-9.612670,7.743912,-5.876046,-9.570193,-9.937188,-1.931035,4.327916,-2.771163,-4.997961,-4.496401,6.638224,-9.378628,4.190380,8.623508,2.187930,0.948788,-5.209549,6.574769,-2.721363,9.675532,-6.570058,9.277558,5.667912,7.353453,-7.743567,8.117521,9.708382,7.707241,-8.629634,-6.086132,-4.502159,4.353085,-9.590945,9.036864,-0.356605,0.806861,7.759512,-1.776760,-7.973028,-3.118204,9.191889,-6.484056,7.779861,8.068677,-1.407065,-5.244090,0.546752,8.220461,-6.633011,-8.993342,-0.294866,0.184252,8.121245,-6.620064,5.286633,-2.012099,-3.517451,5.868251,9.972077,3.295294,-8.098595,-5.957119,2.001120,4.381853,5.723027,-1.611381,2.214964,4.540098,7.831145,4.954695,-2.450872,-8.165043,-1.541468,-0.530625,-4.352277,-3.614752,8.506721,0.790641,-3.953751,-2.002091,-1.592915,0.055274,8.341575,-4.602255,-8.986215,7.306266,-3.473434,-7.512053,-0.981213,-4.725140,-5.994985,7.298704,0.091309,5.027628,-3.987806,6.044400,-4.780657,-3.152282,2.314229,8.988189,-4.387406,-1.195560,-6.054192,-1.881446,-2.490505,9.023538,2.157038,-4.726971,8.650252,-1.831035,-7.381369,8.516076,7.368136,-9.225576,-5.481112,-2.658503,-1.672452,6.474379,4.486624,4.849166,-3.131344,4.759991,-8.406432,1.708661,7.478972,3.147406,5.255341,-9.452581,-3.051532,-0.689761,-0.850334,-3.142964,1.650753,0.929012,2.634670,-5.904563,-4.220056,2.632448,-1.154636,-8.626975,-9.074550,5.877476,-1.255509,-0.098194,-0.517830,-0.500115,-0.090717,5.331222,-1.335917,-6.997797,-1.856805,-7.171422,-5.992036,0.263505,-7.007111,-2.283170,1.008301,-6.722510,-4.025320,-4.780193,8.915716,1.442893,0.047785,-3.163126,-5.297915,1.774507,5.830861,2.929714,1.399040,-9.305677,-6.255532,2.645768,-1.102044,-9.840886,-1.771053,2.612130,9.745652,0.844200,-3.942037,-6.529105,2.957825,8.207869,0.028305,-0.839898,0.876640,-2.511765,-7.110164,0.040459,-1.910079,8.529257,-3.773907,-6.674331,8.750980,7.799624,8.385672,-7.720738,8.558021,-6.187728,-0.003454,-6.439851,6.562838,-7.683101,-3.068376,9.634698,4.799963,6.039793,7.410534,9.793607,-7.822191,-1.591414,-3.500383,-6.980706,-5.195734,0.193437,3.867943,-9.318505,-9.516954,-3.094903,-4.448338,2.937609,-2.509562,-2.060975,4.138535,1.327452,-6.824730,8.885856,-8.511327,-2.402091,-2.462885,-0.725646,6.028080,1.060453,6.748761,-1.853976,5.965988,2.128189,5.264470,1.354869,6.468596,-9.361674,5.341643,-5.603316,0.758578,-6.181213,-6.071285,4.946490,-7.905299,-0.273313,9.959873,2.890687,-8.056646,-8.555727,-1.230010,-3.387335,-0.746583,3.032858,0.642186,-5.507033,6.329576,-4.558014,2.908586,4.068878,-1.911882,0.686502,5.841216,-9.974970,3.473428,4.379225,5.738321,3.215830,-5.706390,6.524526,-4.638069,-7.045341,-4.112309,-5.072484,-1.773686,7.597509,4.158852,-4.178002,-5.938265,-7.916296,-0.985178,1.625253,-5.668755,0.470354,-6.243247,-0.820482,-4.383249,-4.952617,7.945205,-2.985540,-0.836903,8.840704,-0.235007,-2.531744,-9.563134,-3.812209,-8.058024,-8.365951,-4.551003,4.978297,-6.844886,-3.194405,-9.838894,-2.275695,7.866007,-3.815156,-6.488653,9.466119,5.221964,3.937283,-8.400368,-1.811173,-1.785416,9.617615,2.577047,9.974749,-6.463305,-8.628740,-2.168103,4.299111,-7.824250,5.454026,2.156126,8.489310,3.819061,-4.048905,1.299619,-6.988574,-2.679921,-0.210982,5.148950,1.207837,1.284326,-7.829738,-1.504568,7.614866,7.638023,-3.382466,6.124914,-3.087139,-2.082873,5.356184,1.763724,5.965690,4.312613,5.712373,5.229258,3.982476,3.673115,-6.642960,9.293475,-6.923396,3.597543,1.185890,-0.248889,7.117621,-3.000857,-6.472682,-7.828883,8.636021,-2.372215,-9.953034,-5.374366,-8.126974,-5.981643,6.789612,9.081945,-4.661995,-0.629784,6.457059,9.974988,-4.597047,9.623243,-9.620861,-5.143531,-9.370197,-3.904472,8.870398,-1.532618,-1.312636,-2.018117,-1.180833,2.346471,-9.492748,-1.107116,6.176373,-7.747015,3.254985,-4.448956,-7.715435,-1.765681,8.706416,4.167316,8.973880,9.371030,-7.973089,1.365512,5.906862,-5.666632,2.721917,4.925061,-9.548480,-5.467484,-5.980639,8.143533,3.896191,5.636626,5.959616,8.950793,-3.316234,-5.673459,4.298524,8.816714,8.786734,-9.212938,-3.038685,0.332642,-5.201830,-8.271174,-5.343591,3.730588,4.703415,8.435094,1.616639,7.018479,7.927085,2.041543,-7.795659,6.384561,-7.446753,-3.647326,1.373160,8.457882,2.007112,-8.627654,-2.372157,2.873486,-8.012154,-1.708622,-5.897555,7.674579,4.781198,-3.338856,3.821679,5.351184,5.454559,-6.834085,7.053553,-7.724448,-9.780208,7.406918,-5.228204,-6.307334,7.588531,4.346636,1.819519,3.158145,7.917544,-6.696163,8.513776,-2.844700,2.125016,9.313576,-3.665927,4.954070,9.789176,9.355211,5.494322,-9.388968,-8.853476,-2.502635,6.549385,9.273135,5.968955,7.719097,4.012265,-2.439908,7.867311,-4.306666,4.481724,-5.811805,-2.398924,4.691667,8.134504,-8.158569,2.367288,1.467189,-6.349205,1.344110,-1.815771,-2.972408,-2.681045,-6.094755,-1.319048,2.551155,-9.621786,-1.412757,-0.407819,9.456293,-8.999503,9.748404,-1.484523,-0.148682,2.189885,5.474888,-3.534232,-6.964925,-1.542800,-1.593214,9.258622,-2.053296,3.568095,-3.760468,-5.111451,-7.889694,5.751869,-3.021478,-0.646532,-8.103925,-2.893364,-1.659023,5.873649,5.426464,6.513200,-8.895604,-7.609480,3.006458,-9.125586,3.203060,9.491057,3.583451,2.466363,-7.118173,-1.405814,-8.754702,-5.003494,5.855115,0.727209,8.030745,2.588241,0.587341,0.826630,4.455577,-4.027098,-8.213474,-9.777409,-0.424454,-4.907315,-8.696928,4.228786,0.294775,9.738686,7.157268,-4.076401,3.122099,-7.453499,7.369734,8.085330,2.815849,1.488718,7.672374,1.974321,5.349640,0.383641,-5.866010,-7.640009,-4.914441,8.843349,-3.704630,5.560983,9.455032,-4.168897,6.151004,2.054658,8.067010,-9.058382,3.957218,-8.801766,2.677482,-0.022995,-9.541843,-3.353265,-7.156063,-2.483716,7.584667,-9.782822,-5.999920,8.876286,0.185058,-7.406544,9.860838,2.752867,7.156688,3.381582,0.698067,-0.637263,3.017586,8.457429,-0.747162,-2.283743,8.180802,-0.758424,-0.012885,1.587656,9.010131,-5.580353,-3.353698,0.507310,-4.399003,4.173427,-2.579333,6.325531,-9.030983,7.807744,1.591666,-9.910255,-2.492001,-4.421915,-6.927164,-4.589775,1.509473,-8.997056,1.059558,6.097101,-8.772841,6.042197,9.903235,-5.332498,6.298461,-8.046267,-0.999925,4.355355,-8.995190,0.632439,7.512378,-7.815180,-2.544932,3.335164,-2.406947,8.023015,1.449142,7.689843,-9.799095,-9.055325,0.574373,-4.667668,9.331871,-6.760289,6.319436,-2.394430,-8.499591,4.880747,1.648372,-5.599225,-0.648800,-6.083311,-7.765938,-8.880292,-0.935253,3.225787,1.568856,9.068243,1.261414,-7.942959,5.457534,-0.539824,0.304436,-0.236343,-1.465924,-6.951894,7.335016,-9.755093,-6.898791,-8.065169,6.757740,-3.095544,0.755519,0.362109,-3.619137,8.420423,-4.090841,0.755270,4.573171,-9.706180,-8.793459,-5.495386,8.275884,1.976505,4.972388,-2.633562,1.051380,-7.932266,-1.218654,-6.179056,0.141553,-5.024097,2.974988,-1.387700,-5.377550,-8.472066,3.494033,-3.269062,1.261235,4.660940,9.606669,6.804212,-6.541685,4.708269,3.056179,9.271928,9.654477,-5.073429,8.894285,1.359330,4.048304,-0.829755,9.253818,0.431732,6.298878,0.600751,2.461301,9.430394,-7.912629,-6.321830,-4.405871,0.615382,-1.806426,-2.433424,-7.120631,3.036661,2.929435,-6.812677,-8.283266,0.188801,-8.949048,-8.828826,9.386271,-1.188951,-4.092452,5.878893,-9.781931,-0.803761,-5.886013,9.291096,-1.117057,-5.750775,-3.536268,-7.281866,5.528778,-3.053125,0.417288,5.866174,5.848322,-1.689472,-0.792846,-1.304806,-2.169102,3.313308,-8.388663,3.408682,3.634611,-2.515525,3.331050,-2.833888,6.494658,-1.306109,3.833105,1.123795,4.672817,-0.063355,-7.685208,2.173086,1.612622,0.048223,0.225091,9.844193,7.451051,-2.973765,-9.215764,8.272508,-8.226604,-9.824978,4.729108,-1.658605,-0.845423,-6.343509,9.165346,2.244316,7.003526,-0.763047,-7.801597,9.061511,-3.656979,-5.018498,2.955185,-2.217302,5.908196,6.131353,-0.265284,-5.996574,7.362368,8.465159,-8.695716,4.481448,-0.948948,-8.730894,9.923875,-1.615927,0.026954,9.026282,-8.137849,-9.491657,-4.484130,-1.989479,0.818397,6.382213,5.373546,-9.256712,-8.090380,9.458051,8.831074,6.009304,-2.237959,-0.519944,-5.836642,-6.577491,9.338356,-9.519397,-6.545656,2.025071,5.735877,-2.181781,5.274962,-2.964423,3.055794,-0.303819,0.845780,9.506769,5.243481,-4.499288,5.717530,-6.605189,2.074849,8.857797,6.663222,-2.820460,0.769300,-2.674391,9.138264,-9.493383,-2.048654], dtype = "float32")#candidate|2216|(960,)|const|float32
call_2215 = func_1624_call(relay.reshape(const_2216.astype('float32'), [15, 8, 8]), relay.reshape(const_2216.astype('float32'), [15, 8, 8]), )
call_2217 = func_1624_call(relay.reshape(const_2216.astype('float32'), [15, 8, 8]), relay.reshape(const_2216.astype('float32'), [15, 8, 8]), )
output = relay.Tuple([bop_2138,call_2143,var_2144,const_2145,call_2170,var_2171,call_2215,const_2216,])
output2 = relay.Tuple([bop_2138,call_2146,var_2144,const_2145,call_2172,var_2171,call_2217,const_2216,])
func_2228 = relay.Function([var_2136,var_2137,var_2144,var_2171,], output)
mod['func_2228'] = func_2228
mod = relay.transform.InferType()(mod)
mutated_mod['func_2228'] = func_2228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2228_call = mutated_mod.get_global_var('func_2228')
var_2230 = relay.var("var_2230", dtype = "float32", shape = ())#candidate|2230|()|var|float32
var_2231 = relay.var("var_2231", dtype = "float32", shape = (11, 12, 4))#candidate|2231|(11, 12, 4)|var|float32
var_2232 = relay.var("var_2232", dtype = "float64", shape = (1568,))#candidate|2232|(1568,)|var|float64
var_2233 = relay.var("var_2233", dtype = "float64", shape = (6,))#candidate|2233|(6,)|var|float64
call_2229 = func_2228_call(var_2230,var_2231,var_2232,var_2233,)
output = call_2229
func_2234 = relay.Function([var_2230,var_2231,var_2232,var_2233,], output)
mutated_mod['func_2234'] = func_2234
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2455 = relay.var("var_2455", dtype = "float64", shape = (3, 7, 7))#candidate|2455|(3, 7, 7)|var|float64
uop_2456 = relay.acos(var_2455.astype('float64')) # shape=(3, 7, 7)
output = relay.Tuple([uop_2456,])
output2 = relay.Tuple([uop_2456,])
func_2458 = relay.Function([var_2455,], output)
mod['func_2458'] = func_2458
mod = relay.transform.InferType()(mod)
var_2459 = relay.var("var_2459", dtype = "float64", shape = (3, 7, 7))#candidate|2459|(3, 7, 7)|var|float64
output = func_2458(var_2459)
func_2460 = relay.Function([var_2459], output)
mutated_mod['func_2460'] = func_2460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2649 = relay.var("var_2649", dtype = "int64", shape = ())#candidate|2649|()|var|int64
var_2650 = relay.var("var_2650", dtype = "int64", shape = (1, 16, 10))#candidate|2650|(1, 16, 10)|var|int64
bop_2651 = relay.minimum(var_2649.astype('int64'), var_2650.astype('int64')) # shape=(1, 16, 10)
func_1754_call = mod.get_global_var('func_1754')
func_1757_call = mutated_mod.get_global_var('func_1757')
var_2664 = relay.var("var_2664", dtype = "float32", shape = (15,))#candidate|2664|(15,)|var|float32
call_2663 = relay.TupleGetItem(func_1754_call(relay.reshape(var_2664.astype('float32'), [1, 15, 1])), 0)
call_2665 = relay.TupleGetItem(func_1757_call(relay.reshape(var_2664.astype('float32'), [1, 15, 1])), 0)
func_1624_call = mod.get_global_var('func_1624')
func_1628_call = mutated_mod.get_global_var('func_1628')
var_2667 = relay.var("var_2667", dtype = "float32", shape = (960,))#candidate|2667|(960,)|var|float32
call_2666 = func_1624_call(relay.reshape(var_2667.astype('float32'), [15, 8, 8]), relay.reshape(var_2667.astype('float32'), [15, 8, 8]), )
call_2668 = func_1624_call(relay.reshape(var_2667.astype('float32'), [15, 8, 8]), relay.reshape(var_2667.astype('float32'), [15, 8, 8]), )
func_2131_call = mod.get_global_var('func_2131')
func_2134_call = mutated_mod.get_global_var('func_2134')
var_2682 = relay.var("var_2682", dtype = "float32", shape = (945,))#candidate|2682|(945,)|var|float32
call_2681 = relay.TupleGetItem(func_2131_call(relay.reshape(var_2682.astype('float32'), [9, 15, 7])), 0)
call_2683 = relay.TupleGetItem(func_2134_call(relay.reshape(var_2682.astype('float32'), [9, 15, 7])), 0)
uop_2684 = relay.sinh(var_2682.astype('float32')) # shape=(945,)
func_1624_call = mod.get_global_var('func_1624')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_2690 = func_1624_call(relay.reshape(var_2667.astype('float32'), [15, 8, 8]), relay.reshape(var_2667.astype('float32'), [15, 8, 8]), )
call_2691 = func_1624_call(relay.reshape(var_2667.astype('float32'), [15, 8, 8]), relay.reshape(var_2667.astype('float32'), [15, 8, 8]), )
output = relay.Tuple([bop_2651,call_2663,var_2664,call_2666,var_2667,call_2681,uop_2684,call_2690,])
output2 = relay.Tuple([bop_2651,call_2665,var_2664,call_2668,var_2667,call_2683,uop_2684,call_2691,])
func_2696 = relay.Function([var_2649,var_2650,var_2664,var_2667,var_2682,], output)
mod['func_2696'] = func_2696
mod = relay.transform.InferType()(mod)
mutated_mod['func_2696'] = func_2696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2696_call = mutated_mod.get_global_var('func_2696')
var_2698 = relay.var("var_2698", dtype = "int64", shape = ())#candidate|2698|()|var|int64
var_2699 = relay.var("var_2699", dtype = "int64", shape = (1, 16, 10))#candidate|2699|(1, 16, 10)|var|int64
var_2700 = relay.var("var_2700", dtype = "float32", shape = (15,))#candidate|2700|(15,)|var|float32
var_2701 = relay.var("var_2701", dtype = "float32", shape = (960,))#candidate|2701|(960,)|var|float32
var_2702 = relay.var("var_2702", dtype = "float32", shape = (945,))#candidate|2702|(945,)|var|float32
call_2697 = func_2696_call(var_2698,var_2699,var_2700,var_2701,var_2702,)
output = call_2697
func_2703 = relay.Function([var_2698,var_2699,var_2700,var_2701,var_2702,], output)
mutated_mod['func_2703'] = func_2703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3511 = relay.var("var_3511", dtype = "float64", shape = (14, 8, 3))#candidate|3511|(14, 8, 3)|var|float64
uop_3512 = relay.sinh(var_3511.astype('float64')) # shape=(14, 8, 3)
bop_3530 = relay.logical_and(uop_3512.astype('bool'), relay.reshape(var_3511.astype('bool'), relay.shape_of(uop_3512))) # shape=(14, 8, 3)
output = bop_3530
output2 = bop_3530
func_3535 = relay.Function([var_3511,], output)
mod['func_3535'] = func_3535
mod = relay.transform.InferType()(mod)
var_3536 = relay.var("var_3536", dtype = "float64", shape = (14, 8, 3))#candidate|3536|(14, 8, 3)|var|float64
output = func_3535(var_3536)
func_3537 = relay.Function([var_3536], output)
mutated_mod['func_3537'] = func_3537
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3820 = relay.var("var_3820", dtype = "float64", shape = (16, 14, 9))#candidate|3820|(16, 14, 9)|var|float64
uop_3821 = relay.acosh(var_3820.astype('float64')) # shape=(16, 14, 9)
output = uop_3821
output2 = uop_3821
func_3824 = relay.Function([var_3820,], output)
mod['func_3824'] = func_3824
mod = relay.transform.InferType()(mod)
var_3825 = relay.var("var_3825", dtype = "float64", shape = (16, 14, 9))#candidate|3825|(16, 14, 9)|var|float64
output = func_3824(var_3825)
func_3826 = relay.Function([var_3825], output)
mutated_mod['func_3826'] = func_3826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3976 = relay.var("var_3976", dtype = "bool", shape = (16, 8, 6))#candidate|3976|(16, 8, 6)|var|bool
var_3977 = relay.var("var_3977", dtype = "bool", shape = (16, 8, 6))#candidate|3977|(16, 8, 6)|var|bool
bop_3978 = relay.logical_and(var_3976.astype('bool'), relay.reshape(var_3977.astype('bool'), relay.shape_of(var_3976))) # shape=(16, 8, 6)
uop_4010 = relay.log(bop_3978.astype('float64')) # shape=(16, 8, 6)
output = relay.Tuple([uop_4010,])
output2 = relay.Tuple([uop_4010,])
func_4013 = relay.Function([var_3976,var_3977,], output)
mod['func_4013'] = func_4013
mod = relay.transform.InferType()(mod)
var_4014 = relay.var("var_4014", dtype = "bool", shape = (16, 8, 6))#candidate|4014|(16, 8, 6)|var|bool
var_4015 = relay.var("var_4015", dtype = "bool", shape = (16, 8, 6))#candidate|4015|(16, 8, 6)|var|bool
output = func_4013(var_4014,var_4015,)
func_4016 = relay.Function([var_4014,var_4015,], output)
mutated_mod['func_4016'] = func_4016
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4447 = relay.var("var_4447", dtype = "float32", shape = (6, 3, 1))#candidate|4447|(6, 3, 1)|var|float32
uop_4448 = relay.log10(var_4447.astype('float32')) # shape=(6, 3, 1)
output = relay.Tuple([uop_4448,])
output2 = relay.Tuple([uop_4448,])
func_4452 = relay.Function([var_4447,], output)
mod['func_4452'] = func_4452
mod = relay.transform.InferType()(mod)
mutated_mod['func_4452'] = func_4452
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4453 = relay.var("var_4453", dtype = "float32", shape = (6, 3, 1))#candidate|4453|(6, 3, 1)|var|float32
func_4452_call = mutated_mod.get_global_var('func_4452')
call_4454 = func_4452_call(var_4453)
output = call_4454
func_4455 = relay.Function([var_4453], output)
mutated_mod['func_4455'] = func_4455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4540 = relay.var("var_4540", dtype = "float32", shape = (3, 15, 2))#candidate|4540|(3, 15, 2)|var|float32
uop_4541 = relay.tan(var_4540.astype('float32')) # shape=(3, 15, 2)
output = uop_4541
output2 = uop_4541
func_4562 = relay.Function([var_4540,], output)
mod['func_4562'] = func_4562
mod = relay.transform.InferType()(mod)
mutated_mod['func_4562'] = func_4562
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4563 = relay.var("var_4563", dtype = "float32", shape = (3, 15, 2))#candidate|4563|(3, 15, 2)|var|float32
func_4562_call = mutated_mod.get_global_var('func_4562')
call_4564 = func_4562_call(var_4563)
output = call_4564
func_4565 = relay.Function([var_4563], output)
mutated_mod['func_4565'] = func_4565
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4601 = relay.var("var_4601", dtype = "float32", shape = (15, 5, 1))#candidate|4601|(15, 5, 1)|var|float32
uop_4602 = relay.cosh(var_4601.astype('float32')) # shape=(15, 5, 1)
func_4562_call = mod.get_global_var('func_4562')
func_4565_call = mutated_mod.get_global_var('func_4565')
var_4607 = relay.var("var_4607", dtype = "float32", shape = (90, 1))#candidate|4607|(90, 1)|var|float32
call_4606 = func_4562_call(relay.reshape(var_4607.astype('float32'), [3, 15, 2]))
call_4608 = func_4562_call(relay.reshape(var_4607.astype('float32'), [3, 15, 2]))
output = relay.Tuple([uop_4602,call_4606,var_4607,])
output2 = relay.Tuple([uop_4602,call_4608,var_4607,])
func_4609 = relay.Function([var_4601,var_4607,], output)
mod['func_4609'] = func_4609
mod = relay.transform.InferType()(mod)
mutated_mod['func_4609'] = func_4609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4609_call = mutated_mod.get_global_var('func_4609')
var_4611 = relay.var("var_4611", dtype = "float32", shape = (15, 5, 1))#candidate|4611|(15, 5, 1)|var|float32
var_4612 = relay.var("var_4612", dtype = "float32", shape = (90, 1))#candidate|4612|(90, 1)|var|float32
call_4610 = func_4609_call(var_4611,var_4612,)
output = call_4610
func_4613 = relay.Function([var_4611,var_4612,], output)
mutated_mod['func_4613'] = func_4613
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4818 = relay.const([[[-1.597328,-9.814425,9.542853,-5.511087,-2.019141,-4.849134,3.450451,5.965846,7.036243,-7.489684],[-7.412291,-3.607142,1.141946,-6.776917,-5.517634,-2.272348,-7.274617,4.034571,-8.625932,0.511053],[3.983404,-2.855539,7.993178,1.709346,-7.788752,8.768799,-9.738175,-1.032134,-7.079136,-2.881784],[9.350681,6.980049,1.466562,2.737523,-8.544508,-7.002250,0.618519,-1.164675,-6.599004,0.097618],[-6.740546,-3.553378,-1.977119,-8.724494,4.128763,4.033947,6.044477,-3.127821,3.219731,-2.184548],[-5.744158,-1.251933,-2.435387,2.198539,-7.404234,9.119870,7.141200,1.077554,4.924066,-8.916841],[-3.482158,9.124097,7.140065,2.057805,5.047216,-8.185545,-4.510269,5.054855,-3.242942,-2.180655],[6.788471,5.741356,9.125351,-0.135962,-1.774285,5.980824,-1.195501,-5.972882,-6.174917,8.474322],[-3.348912,-7.904435,-0.864374,5.952101,-7.280420,5.389763,2.809934,-6.502533,3.600891,7.334321],[7.746195,0.044747,9.626870,9.503115,3.650868,-4.183693,0.896024,-8.118218,-2.722529,-9.044927],[6.844681,2.613209,-7.862669,7.467848,-1.987497,4.212001,1.445342,-8.980573,-9.116349,8.880708],[-8.106297,9.585844,-6.442453,6.894616,9.393088,7.948882,5.858817,-6.211078,-3.771194,2.428630]],[[-3.508047,-2.171596,0.357048,6.588998,7.086651,8.651927,-9.348358,5.731307,7.494881,9.116772],[-6.400115,0.932839,7.659399,6.567361,-6.158779,6.660224,3.531290,-1.364827,-5.706916,-9.169646],[-1.087249,2.512826,1.600019,3.282940,8.406798,1.917418,1.779871,2.078310,-9.800379,-4.030310],[7.528829,-9.869379,-8.269563,-5.776570,-2.588450,-1.009481,-6.020188,5.480164,-1.947389,-8.727447],[4.353162,6.907022,9.638584,-0.929107,2.440894,-6.205209,-2.114339,9.952844,3.373254,1.412221],[-8.646946,3.288656,3.275933,-8.596099,9.314586,9.741604,1.286929,-0.745197,9.108426,-5.139068],[7.706597,6.959006,3.365406,-1.738619,-5.277008,-0.781961,6.855888,-8.147551,-0.917354,-8.433797],[1.059181,0.906134,-9.652230,7.065723,-7.462651,-6.452525,-5.985712,3.955522,-4.015001,6.468456],[8.516389,-5.766374,5.615006,5.776453,7.714719,0.926243,9.617080,1.586671,-4.828077,3.293729],[4.559956,4.841748,9.587967,7.608426,-2.606977,4.138425,6.645202,9.703471,-0.867568,-6.474815],[-3.478032,-8.279004,-7.967995,-0.171801,8.669073,6.638582,7.681659,-7.855798,1.379457,9.308034],[-1.180631,1.780043,-0.683905,-6.357123,8.388948,-3.300501,8.858631,0.054274,0.500814,-0.913177]],[[9.648084,6.765915,-8.635277,-6.201354,0.267892,-8.522502,-0.516618,6.754651,-8.085040,5.361480],[2.403336,7.788653,-2.807163,-7.948960,-2.934363,-3.077131,3.885629,0.601916,-7.825637,8.865412],[2.964727,4.030611,-8.120374,-0.175925,0.279884,-5.374066,0.096508,2.227996,6.809552,1.027876],[-5.582375,7.411253,5.470186,-5.542905,-1.825092,-4.345151,0.455487,1.601392,-2.130343,-0.764948],[7.856508,-5.263758,-2.903875,3.614029,-9.277697,-9.414984,-7.038834,-5.942632,-5.606117,7.442661],[-2.364002,-4.611753,-3.028975,4.604253,7.260797,-0.876795,8.537481,0.893481,-2.873555,1.886486],[-3.623674,3.635522,6.453476,-2.333079,-7.143103,0.978425,0.628499,-5.111154,0.815913,4.844842],[7.920902,-7.765959,-2.975125,0.583398,-0.775751,6.963142,-7.312286,1.036435,-7.262380,1.425945],[-1.358451,-8.657088,-8.540633,8.382098,-6.731796,-3.324625,-0.304785,-4.097243,-4.587916,7.624570],[-8.121338,6.493501,2.361188,3.291708,7.597769,4.041489,7.697037,4.091971,-4.564993,5.442790],[8.925991,3.633155,-5.256250,5.318381,5.695445,2.258191,7.753592,-1.136671,-6.035480,0.705774],[-8.875198,9.144309,-7.475133,4.048612,4.925914,6.034178,-2.430307,-3.951302,7.055011,0.439708]],[[-5.953701,-4.988647,-4.804989,-8.471869,-9.202409,-6.078258,-7.790055,-5.000236,-8.908105,-1.527801],[3.214725,8.182961,-1.400300,-8.986477,7.065664,-7.203729,3.783995,8.271584,5.091500,-4.225914],[7.100828,-8.388419,-7.355499,-9.823350,-8.793759,-8.646938,4.503908,6.434965,4.463834,9.356952],[7.219244,-7.511321,-4.089993,-2.055312,8.132714,-5.140505,6.200152,4.657609,7.473729,1.836670],[-8.183744,4.028917,6.406443,4.964980,2.142560,0.532886,-9.236911,2.220877,6.214969,-8.470089],[-4.511535,-0.250114,9.774947,3.459862,4.896783,-5.235950,-4.732381,7.479284,-4.591731,-3.149255],[0.363668,-1.107254,2.029157,0.354510,-7.314664,3.914477,-9.034119,-5.643281,8.673112,-8.551070],[-4.451452,-0.179640,5.360291,-9.250898,-3.663109,3.460157,-3.437874,2.008944,3.625480,9.729608],[-1.250129,-6.232393,-9.068197,-3.476601,-2.421800,-8.680159,3.751997,1.313142,7.538950,-3.917528],[-2.627487,8.250081,-9.930753,-7.699189,2.519625,9.396256,-9.994094,-4.422291,-6.625326,8.732454],[-1.105012,-6.919413,-3.656306,-7.490957,2.466095,-9.952580,-7.775493,6.680295,-5.749277,-0.549747],[1.593308,-7.776947,5.695707,-6.604196,7.322313,-0.019655,8.943415,-0.960028,-0.850606,6.107051]],[[8.239066,7.940625,-5.818677,-9.590378,-6.994052,-2.146592,-0.313013,7.713443,-6.322758,-1.809848],[5.868077,6.089400,9.824233,2.898332,-9.376213,8.895166,-1.109936,7.398835,4.303788,0.322645],[-0.720613,5.978833,-7.876434,-9.273102,-3.501929,3.936003,4.814494,5.964086,-1.285504,-7.125890],[1.192826,-2.937197,-6.507081,-3.203020,-5.712497,8.170026,-4.958217,1.313337,2.602606,5.707489],[-7.401273,-0.145696,7.424310,-3.688804,-6.471504,-4.974108,8.992625,4.242746,-5.199000,4.475838],[8.351893,0.458435,-3.419905,9.462129,-4.696598,5.273158,6.014845,-3.373211,4.115610,-0.570485],[2.709530,-3.717006,0.248281,-5.897182,2.181939,-2.293814,-7.025179,-9.859773,6.873069,-7.452856],[-5.451977,-0.537827,4.484377,-4.118320,-4.266420,-2.946354,9.536594,-0.818414,-1.703151,-1.659151],[-9.419184,8.675907,-6.977933,1.802463,5.660035,4.303777,-8.648776,5.109904,-2.517118,-2.181532],[-6.974320,-7.414816,8.785545,-4.704572,5.222258,-4.349511,-6.997704,-8.635033,3.641299,-9.340929],[-8.468806,2.667860,1.882954,-1.611429,-0.065529,-8.052454,-2.843200,3.063250,9.905174,4.418651],[-8.523926,3.014851,9.782144,-1.149498,4.746867,1.509215,-5.395105,-2.531921,2.345369,-1.619211]],[[-5.712365,-4.135969,4.413288,-9.434143,-8.581837,-9.773869,7.650495,1.721486,4.763084,-3.359077],[-1.660534,-7.872674,-8.109847,-8.202030,-7.816259,7.883714,-3.092548,8.517792,5.439544,-6.872347],[0.574919,4.895773,-0.891584,-5.489970,-8.167237,0.390174,-0.137265,6.581133,-2.122737,0.502632],[-4.906928,6.982883,-6.911566,6.332686,1.890336,2.831833,-1.886237,0.432822,0.503864,-3.023788],[-7.756834,-6.343514,-1.999976,6.774935,-3.192535,5.949375,-7.644402,7.084807,6.090346,-9.432070],[-7.155369,6.714232,-5.225521,-6.163994,-7.994842,7.484579,-2.205772,-8.779815,-7.403383,2.828701],[-7.229816,0.159874,-6.694967,4.269457,0.947085,-9.447165,-8.220841,-9.530087,-5.241426,-5.179803],[-8.383130,-4.586817,-4.048407,9.222086,-0.325528,7.045997,7.833864,1.704739,5.235548,7.164437],[8.843895,-1.325256,3.495384,-7.499862,2.646432,0.926929,5.497210,-0.628942,-4.694011,-0.141517],[2.161073,0.099259,-9.697260,-5.308266,9.474892,8.095212,6.538124,-0.138735,-5.441232,-5.493965],[-9.001249,3.466089,7.516956,0.422450,2.265639,3.354139,7.557060,3.884005,8.937587,8.161146],[8.178627,2.590317,-4.608535,-6.136616,3.363088,9.321500,-9.267103,1.944390,-4.599856,9.620641]],[[-7.036677,-1.261333,7.419376,4.031634,4.205517,5.837707,0.468620,4.965219,3.525990,9.349591],[8.580506,-1.459496,0.288484,3.208439,-8.399873,-9.049283,2.773165,-0.789116,-0.636692,-8.038163],[-0.177805,9.595848,-6.035507,1.416211,-3.773211,-1.237425,1.670356,8.568634,-6.801147,2.703108],[9.116889,7.937117,-8.022981,9.997863,-1.817488,0.650755,8.592872,-5.864325,6.875347,5.215830],[-9.666973,6.548536,-7.105255,3.245373,-3.282833,0.797919,-0.147552,-2.434251,-1.879843,8.429789],[3.844698,3.278366,1.507755,1.670874,-1.433632,-5.567278,-0.205348,-7.482070,-5.401825,-0.119649],[-2.647381,-3.432381,-4.844618,-7.376353,-3.531464,5.664016,-3.392972,6.653723,5.965033,-9.065675],[4.148598,-7.873708,2.016021,2.092234,-4.587042,-2.985745,6.348988,5.225133,9.107647,3.127023],[-9.801314,-5.212282,7.760996,-5.425385,-7.611539,-4.169400,-6.228267,2.616975,-4.991411,8.684413],[-0.970321,9.562826,3.742517,-9.590347,-6.145198,-3.062832,-9.264727,6.814365,-5.413113,-7.478479],[0.032110,0.298053,-8.081227,5.856410,0.615971,4.571851,-0.207152,2.767423,-0.410762,-7.292282],[6.840770,8.910575,7.863083,-5.785450,-2.099781,-7.194094,5.849203,9.037765,6.397041,-9.785117]],[[-8.718966,-8.216964,3.973293,-9.739523,5.281590,-6.684350,6.538505,6.090677,9.170228,8.925506],[-3.474274,4.012538,6.547278,5.798121,8.066437,1.878751,-4.017767,-8.185381,4.403518,6.481794],[9.896305,-1.007504,0.276858,-7.417762,0.540323,-5.523519,0.031755,0.707554,6.503103,4.133587],[5.214599,-4.454228,4.222185,7.654775,7.469354,4.443548,-2.265492,0.879153,6.408555,-7.397477],[0.977596,2.628347,-9.073615,6.826263,0.179940,-0.530119,0.783943,-7.236192,4.588713,-4.059503],[-3.561485,-1.220524,6.938936,-7.118452,9.170787,2.986818,-5.308884,1.770556,9.386400,-7.733636],[-4.879269,4.916684,4.153586,-9.414639,9.001413,2.021337,-4.852122,3.864875,6.097077,5.869530],[-5.983168,-7.829475,6.072395,-1.596772,-2.482770,0.698404,0.966955,4.549172,5.939501,-7.610740],[-0.844325,-7.530929,2.013198,-8.800802,-1.153533,2.730882,-0.884838,3.119585,9.844913,-3.009985],[-1.928172,-2.698105,0.513389,-4.029498,6.088534,1.335692,-4.699750,1.104002,4.827029,-2.322362],[9.898615,2.499973,0.548629,0.529337,-3.730200,2.088265,1.693987,-3.996540,9.175638,2.244365],[1.514504,-7.174001,5.997404,6.269841,0.392211,-7.981318,9.730201,-4.218375,-4.865019,-1.382376]],[[4.825218,1.621289,5.700378,1.249761,-8.475620,-5.683160,-2.890785,3.216128,-2.014107,-1.739892],[-4.060454,-0.880565,-4.854706,4.347223,-8.342943,9.095619,3.326927,-4.142215,4.843970,9.869274],[9.606946,6.237534,-4.653917,3.688856,-1.713196,-0.737415,-9.939236,-3.743751,6.130219,6.302857],[0.885580,7.959045,0.780635,-9.269065,-6.867140,-6.571575,5.394538,1.243517,-2.023218,-5.393687],[-5.091310,7.455055,0.127226,-0.833818,4.227065,-0.944330,-4.977432,8.040564,4.185402,-6.350044],[2.075173,4.236873,2.202890,-4.965595,4.155493,-7.942911,3.400781,-2.400094,3.137242,6.790908],[-9.357077,-9.425501,-2.468253,-8.353194,0.864173,8.143270,7.072470,2.362767,5.705835,-6.750682],[-1.822155,-7.090678,3.227905,-1.677543,6.216129,3.281996,3.538268,2.982395,-5.011777,6.500176],[-5.471977,-3.300294,-2.873799,-1.722546,-5.248066,-0.468488,9.666459,-5.825526,-8.870263,-0.506228],[3.184661,9.181140,7.425353,-0.324287,7.802519,5.412722,-1.154584,8.630929,6.362430,-2.031812],[8.043478,-6.118115,0.016322,7.815446,8.515852,-9.364381,2.150508,6.735964,-0.584554,-8.331771],[4.808962,9.406118,-9.003593,-2.636906,3.811192,1.055190,-8.965977,5.706894,-2.748153,0.978407]]], dtype = "float32")#candidate|4818|(9, 12, 10)|const|float32
var_4819 = relay.var("var_4819", dtype = "float32", shape = (9, 12, 10))#candidate|4819|(9, 12, 10)|var|float32
bop_4820 = relay.mod(const_4818.astype('float32'), relay.reshape(var_4819.astype('float32'), relay.shape_of(const_4818))) # shape=(9, 12, 10)
output = bop_4820
output2 = bop_4820
func_4828 = relay.Function([var_4819,], output)
mod['func_4828'] = func_4828
mod = relay.transform.InferType()(mod)
mutated_mod['func_4828'] = func_4828
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4829 = relay.var("var_4829", dtype = "float32", shape = (9, 12, 10))#candidate|4829|(9, 12, 10)|var|float32
func_4828_call = mutated_mod.get_global_var('func_4828')
call_4830 = func_4828_call(var_4829)
output = call_4830
func_4831 = relay.Function([var_4829], output)
mutated_mod['func_4831'] = func_4831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4953 = relay.var("var_4953", dtype = "int32", shape = ())#candidate|4953|()|var|int32
var_4954 = relay.var("var_4954", dtype = "int32", shape = (2, 4, 3))#candidate|4954|(2, 4, 3)|var|int32
bop_4955 = relay.equal(var_4953.astype('bool'), var_4954.astype('bool')) # shape=(2, 4, 3)
output = bop_4955
output2 = bop_4955
func_4958 = relay.Function([var_4953,var_4954,], output)
mod['func_4958'] = func_4958
mod = relay.transform.InferType()(mod)
mutated_mod['func_4958'] = func_4958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4958_call = mutated_mod.get_global_var('func_4958')
var_4960 = relay.var("var_4960", dtype = "int32", shape = ())#candidate|4960|()|var|int32
var_4961 = relay.var("var_4961", dtype = "int32", shape = (2, 4, 3))#candidate|4961|(2, 4, 3)|var|int32
call_4959 = func_4958_call(var_4960,var_4961,)
output = call_4959
func_4962 = relay.Function([var_4960,var_4961,], output)
mutated_mod['func_4962'] = func_4962
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5101 = relay.const([[[6,-10,-1,-10]],[[8,5,-1,-3]],[[4,-3,2,5]],[[1,-8,-8,10]],[[-8,6,-1,-4]],[[-2,-8,9,-10]],[[-5,-9,6,3]]], dtype = "int64")#candidate|5101|(7, 1, 4)|const|int64
var_5102 = relay.var("var_5102", dtype = "int64", shape = (7, 2, 4))#candidate|5102|(7, 2, 4)|var|int64
bop_5103 = relay.greater_equal(const_5101.astype('bool'), var_5102.astype('bool')) # shape=(7, 2, 4)
func_176_call = mod.get_global_var('func_176')
func_179_call = mutated_mod.get_global_var('func_179')
const_5113 = relay.const([[-8,-8],[-10,-10],[1,3],[-5,-9],[-7,9],[-3,2],[5,-5],[-9,-10],[1,-3],[-2,-3],[-2,1],[9,-8],[-1,2],[1,-9],[3,1],[-8,-1],[9,-10],[-9,-6],[-9,-8],[-8,-7],[-1,-4],[-10,-1],[8,6],[-2,-5],[-3,4],[7,-2],[-6,5],[7,3],[-10,2],[-10,4],[6,-6],[-7,1],[-7,9],[-4,10],[-3,4],[-6,10],[5,-5],[-7,-5],[-7,3],[-3,3],[9,1],[4,3],[-8,-7],[-7,-10],[1,9],[4,-2],[6,-4],[-10,-8],[8,-2],[3,-10],[-4,5],[6,-2],[-1,-6],[7,-6],[3,-2],[9,-2],[9,1],[-9,3],[10,3],[-1,4],[7,7],[-1,-7],[-4,-9],[-8,10],[-5,1],[4,5],[2,-1],[-4,7],[8,-5],[8,3],[-2,-3],[-3,10],[-7,-10],[-5,-6],[-5,-3],[5,-2],[5,-2],[-1,3],[9,-4],[2,-10],[4,-10],[7,9],[-7,2],[-2,7],[-2,-8],[-5,-6],[6,7],[-3,7],[-7,10],[4,-7],[-10,5],[3,-7],[2,-10],[6,-3],[6,-2],[-9,10],[-5,1],[8,2],[-4,1],[-10,4],[6,9],[10,6],[-2,-6],[-7,-6],[-7,-6],[2,4],[-7,-7],[5,-7],[3,-3],[-7,-8],[-9,-9],[-1,3],[-3,-2],[6,-3],[2,10],[-1,-8],[-2,-7],[2,-8],[-2,-1],[4,-2],[10,-2],[-1,-1],[-6,8],[-7,-2],[-9,-10],[8,4],[-6,4],[9,-9],[-9,5],[-9,-1],[-7,-2],[7,-3],[-5,-7],[-10,-3],[-8,-10],[-1,5],[-1,10],[-9,5],[-9,-10],[1,3],[8,-8],[-5,-9],[-8,-1],[8,-10],[8,-9],[10,5],[-2,-6],[-10,-10],[-10,-9],[1,-9],[6,9],[6,3],[1,3],[9,-9],[-4,-4],[5,-7],[2,10],[-3,-4],[7,-3],[5,8],[-1,5],[10,-10],[10,-3],[8,10],[5,5],[8,-8],[-5,9],[10,-3],[-10,-8],[-4,-7],[2,9],[-9,4],[-8,-5],[-10,-3],[-8,4],[2,7],[-6,2],[-5,4],[8,-1],[-2,-2],[-6,7],[4,1],[-4,7],[2,8],[1,10],[7,-7],[-9,4],[5,-2],[-5,-7],[10,-10],[-4,-2],[3,8],[10,-1],[-4,-3],[-9,6],[3,5],[8,-8],[1,-5],[-4,-5],[7,-10],[3,-3],[2,-2],[3,4],[-6,5],[-2,-2],[-2,10],[-6,-3],[-8,9],[6,10],[9,10],[-10,9],[5,9],[8,10],[8,6],[-5,-6],[-1,6],[-10,7],[8,3],[-2,-5],[-8,-4],[-8,6],[6,-10],[10,6],[5,-1],[8,-6],[3,-8],[2,4],[8,6],[-4,-1],[-6,-1],[-1,10],[-1,-2],[-6,9],[8,8],[1,-9],[2,4],[-10,8],[8,-4],[8,-6],[4,-10],[-6,10],[6,-5],[-2,3],[-2,1],[4,9],[1,-2],[7,8],[7,10],[8,-9],[-9,-9],[-9,-4],[1,-4],[-5,8],[6,4],[9,-3],[-1,2],[-6,-2],[-3,8],[5,-4],[7,3],[1,-9],[3,-10],[-7,-1],[-7,-8],[1,-10],[2,10],[-9,-6],[-2,-2],[2,10],[5,10],[-5,8],[3,7],[-7,2],[-6,-7],[-5,-3],[3,10],[7,1],[-1,1],[1,8],[-7,-9],[3,-6],[-2,-3],[-7,5],[-2,-5],[6,10],[-6,-3],[-2,2],[7,8],[3,-8],[6,-3],[8,4],[3,-10],[5,6],[10,-10],[-2,6],[4,-9],[7,-3],[9,-7],[-3,8],[2,5],[-5,-1],[-2,-1],[-3,-4],[-10,-3],[10,-1],[1,-7],[-1,-10],[-10,-10],[-8,4],[-2,-4],[2,4],[-3,-1],[5,4],[-10,-10],[-4,5],[9,-1],[-8,9],[-9,-7],[-3,5],[9,8],[5,-2],[1,-7],[-4,10],[-10,10],[-7,-8],[-2,-7],[7,10],[7,-10],[8,-9],[-5,5],[-1,-3],[-6,-6],[4,9],[-10,-10],[10,3],[-7,-2],[-6,-5],[9,10],[-5,-10],[-6,5],[-10,-5],[-5,-7],[6,-4],[4,8],[-9,1],[-5,8],[4,4],[-4,-1],[5,7],[4,9],[-6,2],[1,10],[-5,7],[-3,-1],[-1,-8],[-3,-1],[6,10],[-2,9],[4,-5],[-1,4],[-7,-5],[6,-9],[10,3],[-8,-2],[10,6],[3,-9],[-7,1],[-1,-6],[-5,-1],[7,-9],[-7,10],[7,-2],[6,-1],[3,5],[4,8],[2,-6],[-4,-10],[-6,10],[1,1],[-4,7],[2,8],[-5,5],[-10,5],[-6,-6],[7,-5],[-5,8],[-7,-4],[-3,10],[8,-9],[10,2],[-9,-1],[-7,7],[-5,7],[-7,5],[-6,-4],[1,-2],[-1,-10],[7,2],[-1,2],[10,-2],[-2,-4],[-5,-5],[-10,-10],[5,10],[3,9],[-3,7],[-4,2],[8,10],[4,-3],[4,2],[8,-5],[-3,1],[4,-7],[2,1],[-5,-1],[-6,7],[4,-2],[9,-2],[-7,-2],[-1,-8],[2,4],[-1,10],[-7,-1],[2,6],[5,6],[-4,-10],[5,-1],[4,3],[-5,10],[1,4],[-10,4],[10,-2],[10,8],[6,6],[2,8],[-9,2],[8,-1],[-3,-9],[-7,-7],[-3,-3],[-6,-6],[3,-2],[9,10],[10,1],[-5,7],[7,-3],[8,-3],[-10,5],[-9,8],[3,6],[-1,2],[-10,9],[7,-3],[3,1],[5,-6],[2,1],[-2,-3],[1,9],[-4,3],[-5,-9],[-2,7],[10,1],[-1,2],[-8,-5],[4,-7],[5,-6],[8,5],[6,6],[-8,-5],[2,-6],[3,-8],[-1,-3],[-9,9],[-8,-7],[6,2],[5,10],[-2,2],[1,6],[-5,6],[7,2],[-10,2],[-10,4],[10,-8],[1,-8],[4,-6],[-9,-2],[-7,2],[-8,2],[9,-3],[4,5],[-1,-8],[-4,7],[8,7],[-8,-4],[7,-10],[4,10],[5,-2],[-1,2],[-1,-6],[7,-5],[9,-2],[8,3],[-4,8],[-5,1],[4,-1],[-2,6],[-1,10],[-8,-3],[-4,-3],[3,-8],[8,-6],[6,5],[3,-6],[-6,10],[-7,-7],[3,1],[7,2],[9,-10],[7,2],[-7,7],[10,7],[-4,-7],[-5,-5],[6,-8],[9,4],[9,8],[2,-3],[-4,9],[2,2],[-2,8],[-5,8],[10,-4],[-7,8],[6,3],[-6,7],[7,-6],[3,-6],[8,4],[8,5],[-1,6],[9,3],[-1,-5],[5,7],[-9,2],[10,9],[-1,-1],[9,4],[5,8],[-3,1],[-9,1],[8,7],[-2,9],[6,-9],[-5,5],[-6,-3],[-8,-5],[4,-7],[2,-1],[7,-8],[-9,-10],[-7,10],[-1,5],[4,10],[-3,-3],[3,-3],[9,5],[-4,-4],[10,-5],[-4,10],[-2,5],[-6,-7],[10,-7],[-1,7],[-4,5],[-5,-8],[2,-3],[-8,4],[-1,5],[-3,-8],[2,5],[-6,3],[-5,6],[7,5],[7,10],[5,7],[-4,-5],[5,-10],[-9,-2],[9,4],[4,-4],[-4,-4],[10,-6],[7,-3],[6,-8],[3,7],[4,6],[-5,-9],[-10,3],[5,7],[-1,-10],[-8,9],[-1,4],[4,-6],[1,6],[-4,-8],[-2,-2],[-6,2],[-2,6],[-7,2],[2,4],[9,6],[5,7],[-9,-8],[6,7],[7,-9],[-4,-8],[10,3],[-8,-9],[8,-9],[9,4],[3,-8],[2,-10],[7,-9],[-6,3],[1,-9],[-2,7],[4,-3],[-4,-1],[-1,-5],[-6,-3],[8,-3],[-10,-4],[4,-9],[-4,6],[-2,2],[-10,-4],[-4,3],[8,3],[5,-2],[-4,-6],[-10,5],[-1,3],[-2,1],[8,2],[-6,1],[8,-8],[10,9],[-6,4],[-10,-1],[10,4],[9,-5],[-3,-8],[-9,-1],[-3,-1],[10,-8],[-5,-4],[1,-3],[9,4],[-7,6],[3,8],[-5,10],[-9,4],[1,6],[4,8],[-5,-8],[-2,-4],[-1,-8],[-8,-8],[-5,-2],[1,2],[8,5],[-9,-9],[8,1],[-10,-9],[-7,5],[1,-8],[-4,-9],[-6,5],[2,-8],[-7,-5],[4,2],[-3,3],[6,-7],[1,-5],[8,10],[-6,10],[6,-9],[6,-5],[2,-2],[-8,6],[5,5],[9,-1],[-4,2],[5,-10],[-3,4],[-6,8],[6,-4],[-7,2],[-4,-7],[5,-3],[-8,-8],[9,4],[8,-1],[-8,-2],[-1,1],[-7,-1],[8,-7],[8,3],[-4,-1],[-1,-7],[4,5],[7,6],[-6,-9],[2,5],[9,-4],[-1,-3],[7,10],[-8,9],[6,-3],[1,-2],[-10,9],[2,3],[-7,8],[-5,-5],[-6,2],[-5,-7],[-5,4],[4,5],[1,-8],[-10,-4],[-8,-7],[7,5],[8,-9],[-8,-1],[-9,-1],[5,8],[7,-8],[-5,-6],[-7,7],[-2,7],[-10,2],[-3,1],[10,-6],[7,10],[8,-3],[-8,-9],[9,-9],[8,2],[2,-6],[-8,6],[2,-2],[4,2],[-8,8],[-3,3],[10,-4],[9,8],[1,6],[-4,7],[6,2],[-1,-3],[-9,-7],[7,4],[-5,8],[4,5],[10,5],[8,10],[3,-4],[-4,5],[10,-6],[3,6],[8,-2],[-2,10],[-2,7],[-8,4],[7,-6],[-4,6],[5,3],[-2,8],[5,-2],[10,-8],[-8,-2],[10,-8],[3,9],[6,-3],[5,-1],[-5,7],[-10,4],[3,-2],[-6,1],[-10,4],[4,-3],[9,3],[2,-1],[4,4],[8,-6],[1,-6],[-2,-7],[-6,8],[-6,-2],[4,9],[3,10],[1,-3],[-5,2],[7,-7],[6,1],[-6,-4],[7,7],[5,-7],[9,6],[-5,-9],[-6,-8],[-10,1],[-6,-8],[1,-5],[9,-2],[-8,-1],[-10,5],[5,-6],[6,5],[-9,-1],[-1,7],[2,2],[4,6],[-7,-10],[-3,2],[10,9],[4,-3],[-10,-7],[-5,3],[-8,9],[-3,7],[1,6],[-2,-1],[10,10],[4,6],[8,-5],[10,2],[-6,-4],[-7,6],[-8,-3],[-5,-5],[-4,7],[-8,4],[-8,3],[-10,8],[8,-3],[-4,-5],[5,5],[2,-3],[6,-6],[4,-4],[-2,2],[4,6],[-3,8],[-1,-2],[-5,-4],[-10,5],[8,-4],[-5,7],[-7,-7],[-1,4],[-5,-5],[-7,3],[-5,-9],[6,3],[-7,-10],[-7,-10],[-8,-5],[2,-4],[2,-5],[6,1],[5,-8],[-7,-8],[-10,-7],[-5,-9],[-5,-1],[4,6],[-3,-4],[-7,2],[-8,6],[1,-10],[-2,8],[-5,10],[1,-7],[-7,10],[-1,10],[-3,1],[-3,7],[-1,-7],[-5,10],[-1,-9],[4,-7],[6,10],[4,-7],[-4,-10],[-5,3],[5,1],[-4,-9],[-3,-7],[-4,-7]], dtype = "uint8")#candidate|5113|(900, 2)|const|uint8
call_5112 = func_176_call(relay.reshape(const_5113.astype('uint8'), [15, 10, 12]))
call_5114 = func_176_call(relay.reshape(const_5113.astype('uint8'), [15, 10, 12]))
func_1624_call = mod.get_global_var('func_1624')
func_1628_call = mutated_mod.get_global_var('func_1628')
const_5131 = relay.const([[3.439089,-3.564112,-9.297644,-6.697171,-9.281099,-6.045820,-0.414633,5.617235,-7.876723,-6.022283,2.984475,-4.539352,6.693590,-2.058945,-6.223727,3.627957,3.992751,6.237608,9.246296,5.228877,1.940541,-6.706769,0.936671,-3.468589,-8.535123,5.559178,7.596049,-3.883456,2.568643,1.321671,2.980475,7.149375,-0.766551,-7.873395,7.858139,5.337552,3.682998,-9.035233,5.540478,-2.941697,1.594080,4.376406,9.335865,2.962187,-9.923780,-8.155032,-0.773037,-8.318590],[5.096144,-2.363259,1.183773,9.599200,-2.075890,8.638377,-8.877506,4.692553,6.602645,-7.412351,-0.075049,-3.270720,-5.603656,-2.232610,-7.553826,6.790738,1.023012,-1.741599,-0.638620,6.771662,1.476239,-0.995384,-9.625552,-5.599620,0.450319,9.033308,-3.177565,-3.839606,-9.011644,3.530398,-9.541580,-1.696958,1.886959,-3.673644,-5.505085,-7.210958,-6.019615,9.629418,-1.281268,-3.001261,7.783960,7.167625,6.590303,-8.073210,-7.059119,6.569322,6.551029,-0.212323],[-1.493511,-6.680961,-4.275587,8.333852,1.762823,6.851012,-7.764848,3.308983,3.603504,9.881814,6.289301,3.970119,-2.791566,-2.932072,-3.369803,-9.791023,5.079405,-8.972171,0.207201,-6.486153,-3.057494,-8.663678,7.395957,-9.293001,-1.966791,-2.667243,-3.256275,6.979658,-4.319072,-2.286583,-7.947089,3.670778,0.259796,3.250791,7.127002,4.095869,3.363587,-8.892033,-4.826927,-0.744142,8.976395,-7.198456,-3.463922,-6.982984,3.021495,2.410404,4.416690,7.561255],[-6.193172,9.975287,-2.531968,-7.410916,-8.491098,-6.733613,6.420233,7.755821,6.967180,-5.644708,1.627574,-0.263885,3.462944,-8.761460,3.121276,9.462222,-2.997179,4.682560,-2.418613,-0.023470,7.913748,9.899419,1.194668,8.788355,-1.569777,-1.307022,-9.322935,-8.309235,0.226188,-7.709428,-1.197260,-5.416066,-2.302769,8.119161,0.249464,9.407659,-8.250769,-9.227302,1.298678,2.862254,4.573199,2.524159,-0.865041,-8.734257,-5.759306,-8.203515,-2.040348,2.873806],[4.748726,9.652840,-1.489659,4.164691,2.171134,2.811367,1.765303,-2.824191,-8.763869,-8.027985,3.102176,-3.970692,5.280322,-7.226699,-6.045148,-6.857107,-2.837013,-9.458948,-3.026361,-6.175890,2.214136,-8.652918,-0.425331,-5.128607,-8.363175,2.637422,6.296136,2.912541,3.519575,-0.647962,9.978181,9.664266,0.259170,-8.646406,3.547884,1.848523,-5.137441,7.921623,6.546669,-5.461167,-8.403910,5.551240,0.808733,-0.796281,4.567058,-8.752505,3.197128,-4.714598],[-1.616098,-5.067112,4.629189,-5.483006,6.488903,-6.602568,5.224571,-7.575430,1.826468,8.688116,-0.511465,1.831352,1.215306,-1.400072,2.987309,7.188263,3.545558,9.138656,9.627144,4.787278,5.741763,2.336268,-6.584585,-3.862038,-0.596466,-6.358789,7.953078,-7.398856,-4.433184,5.730411,3.741477,8.708833,-2.741918,-2.678607,-2.088217,-2.191785,7.229053,9.753697,0.651800,3.745485,9.102174,-5.090347,4.496095,4.244801,9.677799,8.085113,2.293347,9.406732],[6.695921,-5.255365,5.976094,8.462683,-8.142519,-7.650563,-7.126375,2.419962,-4.478779,-4.098446,-6.997614,5.167498,-5.940583,6.256750,8.755407,1.278998,-6.375812,-9.174396,-4.011176,-0.066828,-0.787514,-6.881727,0.366585,6.864748,8.960856,4.274277,6.314641,1.269966,-7.081276,-2.655417,-4.129780,-0.639974,5.605484,-4.396777,5.374922,-6.540681,-5.477448,-6.514751,9.110306,0.276066,-7.913375,-4.806850,9.490224,9.555486,-1.115510,4.813302,-6.543250,1.493720],[-2.087970,2.716357,2.165174,-4.522489,9.039119,0.120380,-2.842533,4.854688,4.197382,-0.777597,-0.302571,-9.396012,3.861125,7.269530,-1.423253,1.981554,-5.328143,-3.919627,5.009771,3.937239,2.450112,4.352095,3.603819,-2.912765,-3.965643,3.214537,1.568583,-3.506276,7.720145,-0.729178,-1.581385,1.130654,-0.616027,-9.013549,-5.246613,-2.328602,-9.956134,9.474033,8.727530,0.563815,-9.279304,-4.706679,-7.959691,9.085824,-3.582726,9.936052,0.269489,8.333183],[-4.337474,7.424358,-9.463161,3.555602,1.075122,-6.866409,-2.323417,6.937521,3.123506,-5.918757,-3.501918,7.624162,8.370059,5.925884,1.134283,1.221669,2.753853,-8.350785,-2.108733,-7.033268,-7.451734,-8.945131,-6.992284,-6.521766,1.384607,-5.300165,-0.716432,-4.714602,-8.100947,-3.909545,1.368925,-5.964005,1.939928,-5.790200,-8.652610,7.634372,4.486767,4.939183,7.905471,4.681320,9.125832,-6.577985,-5.320838,2.276461,0.475785,-1.272411,3.553978,4.521727],[-9.318219,8.313034,-0.448366,2.569338,-7.177674,-4.336557,-6.483433,2.902993,3.085323,6.407585,-0.126901,-0.950909,4.047317,-5.459791,8.241566,3.621352,4.790605,-0.298147,3.430111,-7.849700,4.473472,-0.042001,-7.800934,0.247690,2.117993,5.137734,8.991907,8.823240,2.703053,-0.315996,3.553799,-0.531707,-6.782476,4.132814,-2.750096,7.662149,-0.464751,-4.825993,8.485939,-6.992636,-6.092234,2.677867,1.405598,-5.507793,-8.541576,-7.447425,-6.954767,2.227232],[1.926421,6.902044,-3.780438,2.612214,-1.957030,7.387772,1.602790,-2.067260,-1.734595,-1.964573,5.043619,-8.183924,5.972745,1.570113,8.444708,-4.399931,4.602878,-6.133852,-7.240323,-7.949300,3.132296,1.544540,8.588148,2.736569,3.135392,-0.742288,-7.069762,-4.319825,2.788766,-8.458720,-7.216291,8.055439,-5.737966,6.707933,-3.184095,1.774756,-3.562422,-2.406853,-1.699027,5.159473,8.980037,-7.220477,-0.769459,2.084964,8.472021,-9.297112,-7.736614,6.993554],[6.441828,-9.344870,5.835103,-4.631798,-6.564816,2.245870,-6.070038,-9.053267,-2.492933,9.718218,7.834795,-9.041210,-1.898492,6.890171,1.043655,9.047082,6.206526,-4.909067,9.918151,-2.581246,1.414743,9.222935,-9.089107,-8.622804,-2.696516,5.250375,-8.570194,-7.841582,-5.487854,-1.910656,5.106630,9.174461,2.278774,4.326206,-4.962390,-1.056626,8.142221,3.007342,9.111368,7.035226,7.902541,9.603006,-1.495029,9.803473,0.282290,-8.706223,0.896972,-1.586805],[7.690067,-9.225265,8.373523,-0.168244,-9.799041,3.651665,0.985606,1.949143,9.418073,-3.265660,2.285421,2.659732,5.533126,4.468586,1.901585,6.567780,2.283376,-6.509905,-1.367636,4.599398,-8.293544,-1.254819,8.978970,-6.009259,4.949268,2.874151,-5.891849,6.269785,-9.040081,2.619350,-5.002822,2.975320,-7.969574,8.538685,-1.966739,1.431338,0.162634,-2.034040,7.937301,0.106414,0.901905,4.652759,0.199042,-5.118026,5.856584,7.792569,-2.632153,3.529285],[-2.834202,-9.684541,-1.506303,7.958499,4.850948,-7.471692,2.404811,3.287256,-7.901172,-5.157077,-4.827753,-1.801714,-3.180364,3.648107,-1.966485,6.287229,7.225647,5.389765,7.548552,4.380453,-6.882097,-0.313873,-0.855430,-4.753366,-3.030590,-1.520561,4.601377,0.373950,6.261545,0.526662,2.843018,-9.047126,-2.059913,-8.149655,3.124914,-7.907284,-0.243951,8.151958,8.128329,1.705727,-7.928355,-4.263583,-0.600518,-5.468524,-6.585869,0.418411,-6.536684,5.488733],[9.342519,4.228443,9.706365,-4.830296,-4.101412,-2.734827,-7.759901,0.279460,-4.165747,-8.580644,9.361742,-5.526955,-5.701267,-5.002934,9.112251,7.636000,9.864732,8.465989,8.768762,-5.243885,3.823038,2.184630,7.966401,7.223992,-3.390202,-6.916688,-7.778378,3.730342,7.066201,1.875994,8.645264,7.814029,2.600802,-3.769409,7.456288,-4.138365,2.374189,-3.399675,8.346320,-5.321909,1.870710,2.346331,3.584694,4.577822,-6.861532,-9.991751,6.878856,1.746859],[-3.357496,5.237338,-9.996413,1.903734,3.394650,-2.055959,0.556865,-0.489220,-4.366996,-8.517205,1.977546,-4.615762,-0.936918,8.256314,-9.399302,0.120930,-7.339953,-5.182876,-5.489568,1.838914,3.583195,-8.294709,-8.827791,-5.925358,3.203457,1.880074,-5.790205,-9.793386,-6.780265,-6.714814,-0.219209,2.295898,4.512186,-4.364867,2.970941,3.324112,3.442769,4.013722,4.825391,-9.453288,-9.603075,6.596010,9.385971,-8.767374,6.510316,1.456492,-3.376089,4.656935],[-7.101131,9.194196,0.346361,9.384285,7.868240,-2.422455,-8.673588,5.703115,-2.107152,9.326781,-1.546688,4.099747,-0.852676,-4.310457,-7.214947,-1.513065,8.694935,-0.564970,5.091321,6.047486,4.909827,4.799736,1.331560,-9.992263,2.961199,0.262983,5.582710,4.564390,6.243250,-3.914804,3.288697,1.894277,4.279752,8.559676,2.201244,6.479935,9.239574,-9.475903,5.873311,-5.815142,-2.755398,-6.859964,6.729121,9.705790,2.574030,-6.000972,3.877333,0.447277],[9.499833,6.496057,-4.737375,4.691024,2.574993,-8.756246,8.699068,7.054653,-9.020315,2.990152,1.833763,8.870405,7.484902,-4.716334,7.032347,8.939915,-1.017581,3.384663,8.795642,-4.897270,-0.151967,4.769824,-4.238803,2.371777,-1.857491,-7.997904,1.162871,3.378400,7.581236,5.817769,5.376002,3.285783,6.356744,-4.309312,-2.158565,3.055035,2.383618,-0.860935,6.272898,8.301562,-8.322940,-5.947814,4.154472,-5.416249,4.776605,6.345874,-3.639448,-3.644916],[1.550252,-6.002209,-1.944258,-2.009716,-2.152553,7.729308,-2.756209,-5.988510,-0.083550,-6.142926,-0.937919,-9.504354,7.436783,-9.094664,-7.698570,2.684908,-2.197013,3.873034,-5.317404,-5.010463,-7.626216,-6.852504,-5.044167,-6.367045,5.227962,-8.207639,5.159699,2.209946,-7.974250,9.511000,2.717608,-1.010007,-9.857770,-5.457041,9.268582,-8.915677,-9.530862,-1.041723,5.048675,2.942662,-7.075866,-5.461857,-3.924457,-7.746884,8.343797,3.161666,-5.366289,-5.118127],[-5.611944,3.817489,-2.611353,6.796530,2.912089,0.854772,-8.485645,5.991181,7.836622,4.722260,-1.887806,-6.100901,8.905608,-0.189929,-2.107578,-7.748422,3.430076,-4.959197,1.799858,-1.143390,-6.824430,8.467947,-6.439359,8.536435,-9.650620,9.686850,-5.631538,0.406067,8.317171,8.393696,-1.930756,-8.633336,-0.713895,4.979986,2.371814,-8.823349,-4.859817,-3.419889,-7.334192,-7.742783,-3.069444,9.911718,4.690963,-1.610227,-2.354136,-9.325015,-0.873967,-5.826300]], dtype = "float32")#candidate|5131|(20, 48)|const|float32
call_5130 = func_1624_call(relay.reshape(const_5131.astype('float32'), [15, 8, 8]), relay.reshape(const_5131.astype('float32'), [15, 8, 8]), )
call_5132 = func_1624_call(relay.reshape(const_5131.astype('float32'), [15, 8, 8]), relay.reshape(const_5131.astype('float32'), [15, 8, 8]), )
func_1802_call = mod.get_global_var('func_1802')
func_1804_call = mutated_mod.get_global_var('func_1804')
var_5136 = relay.var("var_5136", dtype = "float64", shape = (924,))#candidate|5136|(924,)|var|float64
call_5135 = relay.TupleGetItem(func_1802_call(relay.reshape(var_5136.astype('float64'), [14, 11, 6])), 0)
call_5137 = relay.TupleGetItem(func_1804_call(relay.reshape(var_5136.astype('float64'), [14, 11, 6])), 0)
bop_5157 = relay.greater_equal(call_5130.astype('bool'), relay.reshape(const_5131.astype('bool'), relay.shape_of(call_5130))) # shape=(15, 8, 8)
bop_5160 = relay.greater_equal(call_5132.astype('bool'), relay.reshape(const_5131.astype('bool'), relay.shape_of(call_5132))) # shape=(15, 8, 8)
uop_5184 = relay.sigmoid(const_5131.astype('float64')) # shape=(20, 48)
bop_5187 = relay.logical_and(uop_5184.astype('bool'), relay.reshape(bop_5157.astype('bool'), relay.shape_of(uop_5184))) # shape=(20, 48)
bop_5190 = relay.logical_and(uop_5184.astype('bool'), relay.reshape(bop_5160.astype('bool'), relay.shape_of(uop_5184))) # shape=(20, 48)
func_4013_call = mod.get_global_var('func_4013')
func_4016_call = mutated_mod.get_global_var('func_4016')
const_5200 = relay.const([True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,True], dtype = "bool")#candidate|5200|(768,)|const|bool
call_5199 = relay.TupleGetItem(func_4013_call(relay.reshape(const_5200.astype('bool'), [16, 8, 6]), relay.reshape(const_5200.astype('bool'), [16, 8, 6]), ), 0)
call_5201 = relay.TupleGetItem(func_4016_call(relay.reshape(const_5200.astype('bool'), [16, 8, 6]), relay.reshape(const_5200.astype('bool'), [16, 8, 6]), ), 0)
uop_5202 = relay.sinh(bop_5187.astype('float64')) # shape=(20, 48)
uop_5204 = relay.sinh(bop_5190.astype('float64')) # shape=(20, 48)
func_1624_call = mod.get_global_var('func_1624')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_5206 = func_1624_call(relay.reshape(bop_5187.astype('float32'), [15, 8, 8]), relay.reshape(bop_5157.astype('float32'), [15, 8, 8]), )
call_5207 = func_1624_call(relay.reshape(bop_5187.astype('float32'), [15, 8, 8]), relay.reshape(bop_5157.astype('float32'), [15, 8, 8]), )
output = relay.Tuple([bop_5103,call_5112,const_5113,call_5135,var_5136,call_5199,const_5200,uop_5202,call_5206,])
output2 = relay.Tuple([bop_5103,call_5114,const_5113,call_5137,var_5136,call_5201,const_5200,uop_5204,call_5207,])
func_5208 = relay.Function([var_5102,var_5136,], output)
mod['func_5208'] = func_5208
mod = relay.transform.InferType()(mod)
mutated_mod['func_5208'] = func_5208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5208_call = mutated_mod.get_global_var('func_5208')
var_5210 = relay.var("var_5210", dtype = "int64", shape = (7, 2, 4))#candidate|5210|(7, 2, 4)|var|int64
var_5211 = relay.var("var_5211", dtype = "float64", shape = (924,))#candidate|5211|(924,)|var|float64
call_5209 = func_5208_call(var_5210,var_5211,)
output = call_5209
func_5212 = relay.Function([var_5210,var_5211,], output)
mutated_mod['func_5212'] = func_5212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5335 = relay.var("var_5335", dtype = "float32", shape = (2, 13, 3))#candidate|5335|(2, 13, 3)|var|float32
uop_5336 = relay.asinh(var_5335.astype('float32')) # shape=(2, 13, 3)
output = uop_5336
output2 = uop_5336
func_5343 = relay.Function([var_5335,], output)
mod['func_5343'] = func_5343
mod = relay.transform.InferType()(mod)
var_5344 = relay.var("var_5344", dtype = "float32", shape = (2, 13, 3))#candidate|5344|(2, 13, 3)|var|float32
output = func_5343(var_5344)
func_5345 = relay.Function([var_5344], output)
mutated_mod['func_5345'] = func_5345
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5371 = relay.var("var_5371", dtype = "float32", shape = (8, 14, 4))#candidate|5371|(8, 14, 4)|var|float32
uop_5372 = relay.log2(var_5371.astype('float32')) # shape=(8, 14, 4)
output = relay.Tuple([uop_5372,])
output2 = relay.Tuple([uop_5372,])
func_5376 = relay.Function([var_5371,], output)
mod['func_5376'] = func_5376
mod = relay.transform.InferType()(mod)
var_5377 = relay.var("var_5377", dtype = "float32", shape = (8, 14, 4))#candidate|5377|(8, 14, 4)|var|float32
output = func_5376(var_5377)
func_5378 = relay.Function([var_5377], output)
mutated_mod['func_5378'] = func_5378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5392 = relay.var("var_5392", dtype = "int64", shape = (1, 15, 4))#candidate|5392|(1, 15, 4)|var|int64
var_5393 = relay.var("var_5393", dtype = "int64", shape = (4, 15, 4))#candidate|5393|(4, 15, 4)|var|int64
bop_5394 = relay.minimum(var_5392.astype('int64'), var_5393.astype('int64')) # shape=(4, 15, 4)
func_1802_call = mod.get_global_var('func_1802')
func_1804_call = mutated_mod.get_global_var('func_1804')
var_5415 = relay.var("var_5415", dtype = "float64", shape = (924,))#candidate|5415|(924,)|var|float64
call_5414 = relay.TupleGetItem(func_1802_call(relay.reshape(var_5415.astype('float64'), [14, 11, 6])), 0)
call_5416 = relay.TupleGetItem(func_1804_call(relay.reshape(var_5415.astype('float64'), [14, 11, 6])), 0)
func_4013_call = mod.get_global_var('func_4013')
func_4016_call = mutated_mod.get_global_var('func_4016')
const_5426 = relay.const([[True,True,True,False],[True,True,True,False],[True,False,False,False],[True,False,False,True],[True,True,True,True],[False,True,False,False],[False,False,True,False],[False,True,False,False],[False,True,False,True],[False,False,False,True],[False,False,False,True],[False,False,True,True],[True,False,False,False],[True,False,False,True],[False,True,False,True],[False,False,True,True],[True,True,False,True],[True,False,False,False],[False,False,True,False],[True,False,True,False],[False,True,False,True],[False,False,True,False],[False,True,True,False],[True,False,True,False],[False,False,True,True],[False,True,True,True],[False,True,True,True],[True,True,True,False],[False,False,True,False],[False,False,True,False],[True,False,True,False],[True,False,False,True],[False,True,False,True],[True,False,False,True],[True,True,False,False],[False,True,False,True],[True,False,True,False],[False,False,False,False],[True,True,False,False],[False,True,True,False],[False,True,True,True],[True,True,False,False],[True,False,True,True],[False,True,False,True],[True,False,True,False],[False,False,False,True],[True,False,True,True],[True,False,False,False],[False,True,True,True],[True,False,False,False],[False,True,True,False],[False,False,False,False],[False,True,False,False],[True,False,False,True],[False,True,False,False],[False,False,False,False],[False,True,True,True],[True,True,True,False],[False,False,False,True],[False,False,True,False],[False,True,True,True],[True,True,False,True],[False,True,True,False],[True,True,False,True],[True,False,False,False],[True,True,False,False],[False,True,True,False],[True,False,True,True],[True,False,True,False],[True,True,True,True],[False,True,False,False],[False,False,True,True],[False,False,False,False],[True,False,False,True],[True,True,False,True],[True,True,False,False],[True,True,False,False],[True,True,True,True],[False,True,True,True],[False,True,False,False],[True,False,False,False],[True,False,False,False],[True,False,True,False],[True,False,False,False],[True,False,False,False],[False,True,False,False],[True,True,True,True],[False,False,True,True],[False,False,False,True],[False,False,False,False],[False,True,False,True],[True,True,True,True],[True,True,True,True],[False,True,False,True],[True,True,False,True],[True,False,True,False],[False,True,True,False],[True,True,False,True],[True,True,False,False],[False,True,True,True],[False,True,True,False],[False,True,False,True],[False,False,True,False],[False,False,False,False],[True,True,True,False],[True,True,True,False],[False,True,False,False],[False,False,False,False],[True,True,False,True],[False,False,True,False],[True,False,False,True],[False,False,False,True],[False,True,True,True],[False,False,True,True],[True,True,True,True],[True,True,True,False],[False,True,False,False],[False,True,True,True],[True,True,False,True],[False,False,False,False],[True,True,True,False],[True,False,True,False],[True,False,True,True],[False,False,True,False],[True,True,True,True],[False,False,False,True],[True,True,False,True],[True,False,True,True],[True,False,True,False],[False,False,False,False],[False,True,True,False],[True,False,True,True],[False,False,False,False],[False,True,False,True],[False,False,True,True],[True,False,False,False],[True,True,True,True],[True,True,True,False],[True,False,False,False],[True,True,True,True],[True,False,True,True],[True,True,True,True],[False,False,False,True],[False,True,True,True],[False,False,True,False],[False,False,False,True],[True,False,True,False],[False,True,True,True],[True,False,True,False],[False,False,True,False],[False,True,True,False],[False,False,False,True],[True,True,True,True],[True,True,False,False],[True,True,False,True],[False,True,True,True],[False,False,True,False],[False,False,False,False],[False,True,False,False],[True,False,True,False],[True,False,True,True],[True,True,True,True],[True,False,False,True],[True,True,True,True],[True,False,True,True],[True,True,True,True],[False,False,True,False],[False,True,False,False],[True,False,True,True],[True,False,False,False],[False,False,False,False],[False,True,True,True],[True,True,True,False],[False,False,True,True],[False,True,True,True],[False,True,True,True],[True,False,False,True],[False,False,True,True],[True,True,True,True],[False,False,False,False],[True,True,False,False],[False,False,True,False],[True,False,True,True],[True,False,False,True],[False,True,False,True],[True,True,False,False],[True,True,True,True],[True,False,True,True],[True,False,True,True],[False,False,False,True],[False,True,False,True],[False,False,False,False]], dtype = "bool")#candidate|5426|(192, 4)|const|bool
call_5425 = relay.TupleGetItem(func_4013_call(relay.reshape(const_5426.astype('bool'), [16, 8, 6]), relay.reshape(const_5426.astype('bool'), [16, 8, 6]), ), 0)
call_5427 = relay.TupleGetItem(func_4016_call(relay.reshape(const_5426.astype('bool'), [16, 8, 6]), relay.reshape(const_5426.astype('bool'), [16, 8, 6]), ), 0)
output = relay.Tuple([bop_5394,call_5414,var_5415,call_5425,const_5426,])
output2 = relay.Tuple([bop_5394,call_5416,var_5415,call_5427,const_5426,])
func_5433 = relay.Function([var_5392,var_5393,var_5415,], output)
mod['func_5433'] = func_5433
mod = relay.transform.InferType()(mod)
var_5434 = relay.var("var_5434", dtype = "int64", shape = (1, 15, 4))#candidate|5434|(1, 15, 4)|var|int64
var_5435 = relay.var("var_5435", dtype = "int64", shape = (4, 15, 4))#candidate|5435|(4, 15, 4)|var|int64
var_5436 = relay.var("var_5436", dtype = "float64", shape = (924,))#candidate|5436|(924,)|var|float64
output = func_5433(var_5434,var_5435,var_5436,)
func_5437 = relay.Function([var_5434,var_5435,var_5436,], output)
mutated_mod['func_5437'] = func_5437
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5491 = relay.const([[[6.641389,7.275545,-0.160957,8.620309,-7.832767,-4.095735,-1.934896,-9.231539,6.384634,7.164517,2.189608],[-9.349742,-7.412389,8.758564,-5.997636,-2.632353,-0.020143,9.191580,6.066506,9.608996,8.354088,5.883142],[-1.956255,-9.359343,-9.440795,-6.549236,-6.695815,-0.977568,-5.737362,-7.646306,9.073226,7.432934,-0.652336],[-1.991671,8.553900,-7.498209,6.112607,-4.185717,8.654013,9.196095,-5.322130,4.430545,-7.269907,6.851462],[9.423821,1.638327,-8.020088,5.114263,-7.223380,2.175535,1.042404,-0.107419,2.277129,-4.887248,-4.099805],[2.679179,9.042627,5.676311,-6.348126,-6.564565,-1.740889,-3.408639,-0.448722,-8.804511,3.715702,-2.506365],[5.372705,6.343771,5.660598,7.406012,5.456503,-0.370358,9.720212,-4.872269,-8.734031,-2.848432,2.744624]],[[-5.489965,-0.118059,-9.661141,-8.764081,-3.156042,2.806993,-3.182983,1.216029,-7.539381,-3.141497,4.867027],[-3.958934,-6.151923,-7.769557,-7.697984,6.719710,-1.258260,1.092752,-5.632018,5.652315,9.936596,-9.198529],[-0.002344,5.130458,8.004093,7.128253,8.289691,-6.934505,7.021305,-6.424423,-9.977124,-8.869365,2.443809],[5.164425,8.544745,-3.823487,-1.692727,-7.575897,-4.846678,4.525039,-4.792555,-2.586161,8.258013,1.285005],[-7.656694,-5.711016,7.118187,9.806408,-2.611325,-1.012547,7.796756,-9.024496,-3.403917,-4.261920,-1.442488],[-8.168230,1.770950,-7.523599,4.737519,1.277847,-9.479564,1.496472,-4.769131,-1.066686,8.008743,-2.081209],[-2.213305,-7.717439,8.170934,5.069736,7.071252,-6.457084,5.948922,4.176224,-0.487548,-5.802618,-9.857564]],[[6.295125,-4.172813,1.164500,-8.405012,-4.304299,-5.303434,3.460545,-9.696529,3.503090,-9.087499,-5.588580],[-0.353270,7.246268,-0.467453,2.255515,4.977053,0.892790,4.621743,8.399587,-1.964899,-7.464694,1.684973],[-0.257304,-2.570644,7.855375,-3.298646,-5.348972,0.170889,4.882643,5.402358,-4.037934,6.039595,-0.454403],[-4.111666,0.114483,-3.330847,0.379437,7.761194,8.997233,4.974312,4.075757,-5.978028,-9.939508,9.250897],[9.248312,5.825656,9.657182,2.657513,1.914829,6.747036,-4.195767,-4.500934,4.524741,2.927458,3.253262],[0.959877,-6.584573,2.255359,6.654542,7.110338,4.763253,-4.675417,4.669860,7.825172,3.575417,5.994285],[-2.996952,2.961902,-3.390417,-3.465761,6.284796,-6.172611,4.016163,6.377480,-0.139526,8.917718,3.831444]],[[-9.024904,5.758706,1.185104,-9.105560,-9.849071,-0.261321,6.353111,-4.992798,-3.483975,6.888417,-0.558588],[-0.751280,-8.346728,-4.215107,4.623672,0.620829,-3.651977,2.570548,-9.073050,6.265845,-5.176220,-9.353727],[-2.374351,5.446050,2.861925,3.274183,1.321955,0.813483,-8.487239,4.932286,1.109463,5.549071,4.279114],[0.670101,-9.280786,-7.647503,-8.704007,-4.045604,7.360848,3.890810,8.131256,-6.138693,9.307694,-4.229835],[7.205289,8.620951,-8.085798,2.830345,1.262643,3.381293,1.980373,-4.346076,3.480597,-5.386882,-9.789486],[8.019368,-9.086228,-0.490061,1.037588,9.025540,-6.936881,9.717290,4.316184,-7.824622,1.557469,-0.043262],[6.587161,-5.226441,-9.399225,9.466739,-3.023404,-9.609006,7.557016,-2.457676,3.623972,9.275623,-4.205340]],[[-0.075377,8.303984,-8.399546,6.407115,1.952443,5.811662,8.439408,-6.573308,-5.002853,9.977387,9.168295],[4.964791,3.542625,2.075066,-5.525911,0.440573,3.692025,4.657737,0.752270,3.452106,8.097072,-2.000244],[-6.175721,-5.801710,3.287385,2.934011,-8.151612,5.681395,9.886741,-7.089833,-7.066370,-1.458192,3.531817],[-3.918734,-3.420279,0.233134,-9.504647,-7.264870,4.795268,-1.018069,-2.860586,4.556987,-1.614371,-1.401808],[-2.661992,-3.254134,-8.830592,-8.451907,-9.130810,-5.444004,-5.909812,7.444058,1.362569,0.537340,-8.115382],[-6.109427,7.270785,8.434630,-3.952368,2.439781,-4.006372,2.768680,6.996810,-6.764575,-4.823205,-2.669384],[3.296247,-6.820575,-1.527975,2.021833,8.015506,4.864979,4.385062,-3.418381,8.267166,-0.703254,2.195045]],[[-1.478378,-8.706955,6.236953,-3.544019,6.270290,4.318981,-6.937250,-8.978554,-7.889740,5.199583,-2.858730],[-1.724781,-5.578774,4.512220,1.237379,5.408083,9.864309,7.594805,-2.193077,-3.704350,9.418419,6.726978],[6.668985,3.115142,7.410197,-7.956631,7.554042,2.171880,-3.102770,5.885014,4.948977,1.886207,-0.764098],[1.988303,-7.461906,-9.801814,8.521343,-7.551826,8.655263,-6.440184,-6.054290,9.797289,4.464557,-0.116998],[1.740098,-6.839002,-0.477419,1.453980,-8.802652,0.534153,-7.688832,-5.024315,-2.152798,1.867226,-6.846224],[-3.204840,-5.876219,-8.150422,-8.579588,9.979053,-1.177251,6.588972,5.702987,0.131607,0.380169,9.406736],[3.456784,-9.028346,-6.098611,1.304513,9.142055,2.764726,3.167638,-8.525807,-2.514511,2.671989,3.935676]],[[7.567535,2.506734,-7.133428,-2.785633,5.021962,8.936617,2.674354,7.595192,-2.699237,-1.928501,-7.629817],[9.118006,-2.176105,-4.830362,5.493351,-4.377197,-5.108509,3.105924,-9.929237,-7.029742,1.084952,8.698521],[3.126151,-3.042743,-8.338200,-9.632303,-8.422380,5.754080,5.768969,5.272783,1.252301,-6.051565,5.503314],[-7.162712,8.272328,1.787637,-2.567002,2.411393,8.402129,7.955966,-6.723852,-0.087167,3.712204,6.814594],[8.365570,2.829505,-5.016948,1.579574,-0.465210,-5.256640,-3.064708,-0.830833,-0.406540,0.651670,9.244710],[7.443802,-7.653159,0.456341,5.171935,-9.506662,3.480032,9.720405,9.041320,7.711657,-1.749658,6.532677],[-8.911720,1.548305,5.362782,-3.922029,9.596793,2.953130,-4.155756,-2.241446,2.147414,-0.852263,-6.168732]],[[8.844821,-4.960302,1.423688,-4.044140,-3.898920,4.504730,7.271245,-9.799572,4.122599,-8.931589,9.186023],[3.154085,-8.383979,-5.802923,2.681722,0.458730,6.584298,-4.117949,-5.539633,8.671451,0.406655,2.586301],[-7.339619,-4.511349,7.912100,-1.432106,8.481915,-6.181585,-8.835515,1.759423,-1.735956,-9.983123,-2.626855],[-9.906082,4.315640,3.951358,-2.230279,-3.123998,-9.093154,7.179103,3.805869,-7.161321,8.657405,-1.851096],[-6.314528,-6.459733,-9.380155,-2.330507,6.973619,-5.598595,-9.560280,2.029146,-9.327792,8.512322,-9.500537],[-4.691331,-6.746199,2.471378,-8.969130,-4.779556,9.213530,9.477751,4.499764,-4.266549,-8.165833,-2.781884],[6.383579,-8.415337,0.682317,-6.986043,-4.183996,4.508667,-4.598061,-2.003458,-2.767666,9.498620,9.319767]],[[-9.465266,-3.795841,7.155352,3.248928,7.253060,1.285408,-6.972436,-6.657807,0.178012,8.129148,5.158490],[0.022801,-5.624227,-4.982356,2.686013,-3.601358,5.334042,-5.232052,-0.506527,-9.504412,-4.532170,4.828916],[-7.357379,-6.130573,-6.704362,-8.905288,3.042700,0.266829,1.123537,9.807517,-5.764847,-2.514857,-1.126784],[-2.393563,-5.407868,-0.347379,6.311114,2.366942,2.451984,6.867342,-6.998250,-6.598745,2.511273,2.484139],[2.194830,9.817586,6.598157,0.736097,-5.879976,-5.896867,-2.054821,-3.212443,-9.506353,6.497382,7.463779],[1.016214,-1.802388,5.544078,4.908751,7.712103,2.210324,-3.210206,-6.631195,-8.805555,-0.794247,-7.177952],[6.913462,-8.155361,-2.681061,-7.314099,-2.870968,8.746419,1.497220,-9.872182,-5.747415,8.973123,-6.786091]]], dtype = "float64")#candidate|5491|(9, 7, 11)|const|float64
uop_5492 = relay.log10(const_5491.astype('float64')) # shape=(9, 7, 11)
output = relay.Tuple([uop_5492,])
output2 = relay.Tuple([uop_5492,])
func_5502 = relay.Function([], output)
mod['func_5502'] = func_5502
mod = relay.transform.InferType()(mod)
output = func_5502()
func_5503 = relay.Function([], output)
mutated_mod['func_5503'] = func_5503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5502_call = mod.get_global_var('func_5502')
func_5503_call = mutated_mod.get_global_var('func_5503')
call_5552 = relay.TupleGetItem(func_5502_call(), 0)
call_5553 = relay.TupleGetItem(func_5503_call(), 0)
var_5569 = relay.var("var_5569", dtype = "float64", shape = (9, 7, 11))#candidate|5569|(9, 7, 11)|var|float64
bop_5570 = relay.add(call_5552.astype('int16'), relay.reshape(var_5569.astype('int16'), relay.shape_of(call_5552))) # shape=(9, 7, 11)
bop_5573 = relay.add(call_5553.astype('int16'), relay.reshape(var_5569.astype('int16'), relay.shape_of(call_5553))) # shape=(9, 7, 11)
output = relay.Tuple([bop_5570,])
output2 = relay.Tuple([bop_5573,])
func_5589 = relay.Function([var_5569,], output)
mod['func_5589'] = func_5589
mod = relay.transform.InferType()(mod)
var_5590 = relay.var("var_5590", dtype = "float64", shape = (9, 7, 11))#candidate|5590|(9, 7, 11)|var|float64
output = func_5589(var_5590)
func_5591 = relay.Function([var_5590], output)
mutated_mod['func_5591'] = func_5591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5502_call = mod.get_global_var('func_5502')
func_5503_call = mutated_mod.get_global_var('func_5503')
call_5625 = relay.TupleGetItem(func_5502_call(), 0)
call_5626 = relay.TupleGetItem(func_5503_call(), 0)
func_1754_call = mod.get_global_var('func_1754')
func_1757_call = mutated_mod.get_global_var('func_1757')
var_5640 = relay.var("var_5640", dtype = "float32", shape = (15,))#candidate|5640|(15,)|var|float32
call_5639 = relay.TupleGetItem(func_1754_call(relay.reshape(var_5640.astype('float32'), [1, 15, 1])), 0)
call_5641 = relay.TupleGetItem(func_1757_call(relay.reshape(var_5640.astype('float32'), [1, 15, 1])), 0)
output = relay.Tuple([call_5625,call_5639,var_5640,])
output2 = relay.Tuple([call_5626,call_5641,var_5640,])
func_5657 = relay.Function([var_5640,], output)
mod['func_5657'] = func_5657
mod = relay.transform.InferType()(mod)
var_5658 = relay.var("var_5658", dtype = "float32", shape = (15,))#candidate|5658|(15,)|var|float32
output = func_5657(var_5658)
func_5659 = relay.Function([var_5658], output)
mutated_mod['func_5659'] = func_5659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5502_call = mod.get_global_var('func_5502')
func_5503_call = mutated_mod.get_global_var('func_5503')
call_5666 = relay.TupleGetItem(func_5502_call(), 0)
call_5667 = relay.TupleGetItem(func_5503_call(), 0)
func_3535_call = mod.get_global_var('func_3535')
func_3537_call = mutated_mod.get_global_var('func_3537')
const_5670 = relay.const([-9.461537,7.362680,-2.445645,-8.478836,-0.862480,-8.233764,-4.001196,3.695733,-8.548786,6.379260,-3.766802,3.092968,2.056199,2.201240,-3.182857,-4.569034,4.179100,-5.383784,-3.975201,-7.390833,9.744239,0.032589,2.503669,6.563783,-9.651078,-9.003866,0.375228,-0.606448,1.215686,9.980674,5.533084,4.162072,6.224344,-1.514153,-1.436512,-3.377357,5.043107,0.910807,7.924942,-4.846966,6.296397,-3.356482,-1.981946,-5.356706,-4.464630,-2.806429,9.470609,2.797549,3.570181,-7.897518,-9.651659,9.918684,3.974742,-5.811632,-5.649369,-4.539620,-6.477613,-2.451916,2.098471,-3.801078,-8.872393,4.914774,-1.686332,-0.824590,-8.947639,7.525914,-2.599791,-8.473228,-9.662200,-6.970897,2.257913,-6.336311,3.084095,7.540030,0.166861,1.644750,-2.205133,4.418477,9.847453,-8.216185,2.248284,-9.608694,-9.897730,9.164971,4.106442,0.950305,-3.496855,-6.474641,-1.843491,-2.673153,-9.521286,1.008372,9.367433,2.454608,9.014208,-3.320661,-8.932555,-9.923638,-6.168211,6.928637,8.079665,-1.648248,-5.865790,1.409182,-7.399018,9.990414,7.811979,0.880569,9.440593,0.111565,-8.570404,6.253774,-5.575243,-8.081594,8.026270,6.748305,-2.175755,-9.119069,-7.677173,-3.239163,-3.069362,6.590001,-2.927181,-6.674887,-8.377786,-0.943735,4.878819,3.160449,2.270262,-0.566826,7.013484,4.151379,-9.466006,-5.089330,-7.420700,7.705667,-0.832398,-4.382372,-8.195481,0.711655,9.395196,5.588313,2.321460,-8.407852,-2.044179,-6.298591,-7.910056,-1.725901,9.711118,-0.489093,1.565960,-2.197289,-1.882850,-5.303859,8.435692,5.552398,-6.713681,-0.124315,0.800957,-5.381002,5.486011,3.018885,6.415509,-4.721096,0.207102,-7.868012,1.390042,-9.145862,8.566184,-6.598866,-7.007279,8.313178,-7.780091,1.860579,4.506019,-2.699213,-0.268566,-6.721312,6.332041,-9.586570,8.731787,9.344317,-1.226998,2.423401,-2.649488,-5.425254,7.287037,2.622996,5.384335,-8.923743,1.842282,-1.462060,-8.274189,5.050799,5.723622,-4.016754,-6.582709,1.808094,-1.538129,-6.949345,-5.138933,7.906727,2.045228,-8.798935,8.615943,7.161648,6.109667,-4.740307,-3.030700,7.283251,-4.662069,2.103644,0.144098,1.000124,1.346629,-8.679110,-2.603623,2.222112,3.860146,4.384405,-2.105616,5.920290,-7.895119,-2.550263,9.304247,-5.106391,6.352756,-9.690007,2.554356,-2.817076,2.889642,-7.244723,5.846732,3.194936,0.168081,9.195212,0.758040,4.497009,2.081696,6.156167,4.625051,-4.499141,1.335795,1.326999,-0.502381,4.295525,2.123449,9.380486,4.874393,5.768936,0.547949,1.682637,7.449164,-8.744906,-4.090101,9.400122,-5.464096,-0.504891,-6.864343,-7.918083,-8.436697,-2.736646,7.484525,-3.755202,6.179858,-9.309325,-5.831075,7.251158,-9.418241,-0.389579,0.018443,3.101219,4.867640,9.282220,0.984159,-0.015906,6.220968,7.409434,1.577641,-7.843474,1.778299,9.109485,-1.835074,8.355257,2.699515,8.899641,7.288013,-2.522118,-6.364730,-8.578109,4.135755,0.107863,-0.346795,7.018309,-6.295344,-8.670845,-6.609249,-7.694650,-0.579063,-0.456744,2.729738,5.334915,-3.213059,-4.670680,9.379212,-0.976824,9.853894,-4.500533,1.454527,7.708288,1.018016,9.616478,-7.645324,-1.871068,-6.989622,-5.825131,-5.555100,-9.223464,5.939053,8.299116,-4.929362,4.183584,-6.091833,1.931013,6.515653,4.305536,-9.567301,4.740337,-2.862645,1.597135,-3.513199,3.794492,0.200347,9.033048,-9.314625,-3.529106], dtype = "float64")#candidate|5670|(336,)|const|float64
call_5669 = func_3535_call(relay.reshape(const_5670.astype('float64'), [14, 8, 3]))
call_5671 = func_3535_call(relay.reshape(const_5670.astype('float64'), [14, 8, 3]))
output = relay.Tuple([call_5666,call_5669,const_5670,])
output2 = relay.Tuple([call_5667,call_5671,const_5670,])
func_5675 = relay.Function([], output)
mod['func_5675'] = func_5675
mod = relay.transform.InferType()(mod)
mutated_mod['func_5675'] = func_5675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mutated_mod.get_global_var('func_5675')
call_5676 = func_5675_call()
output = call_5676
func_5677 = relay.Function([], output)
mutated_mod['func_5677'] = func_5677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5502_call = mod.get_global_var('func_5502')
func_5503_call = mutated_mod.get_global_var('func_5503')
call_5709 = relay.TupleGetItem(func_5502_call(), 0)
call_5710 = relay.TupleGetItem(func_5503_call(), 0)
func_884_call = mod.get_global_var('func_884')
func_887_call = mutated_mod.get_global_var('func_887')
const_5716 = relay.const([-10,5,8,-8,3,7,-9,-2,6,7,-5,-1,5,1,-3,-1,7,-8,-8,-8,-6,10,3,8,4,-1,-10,10,-8,-9,-3,-7,8,5,-2,6,-7,-5,6,2,-9,-9,-7,8,3,-10,8,5,1,-2,5,2,4,-4,1,10,-1,10,-9,-5,6,9,1,9,-5,6,1,-4,5,3,4,-5,4,4,4,8,-3,3,10,-7,-5,7,-10,10,8,1,-7,-8,-10,6,2,-3,8,8,-9,7,7,-1,4,2,3,6,10,2,-8,3,2,-6,1,10,-8,-6,-10,4,6,-8,1,-2,-1,8,-3,-9,8,-7,9,9,-4,-6,9,2,6,-6,-5,-8,3,6,-9,-2,2,6,-7,-1,-9,7,7,-5,1,-1,-10,-3,-7,8,5,4,9,1,4,-7,8,-3,3,-9,-9,-1,9,1,-4,-1,9,10,-5,2,-10,-4,-4,5,-5,2,-3,3,8,8,-3,4,-6,9,-3,3,-1,4,-4,-3,-1,2,-7,-8,1,8,8,-5,4,8,-5,1,-7,-1,3,-9,6,-2,10,-7,-7,2,-7,-2,1,8,-10,-9,-5,-10,-4,-5,-2,-3,-7,3,9,1,-4,-7,-4,8,6,-3,-10,1,1,4,5,8,-2,-7,-6,-5,1,5,6,1,3,-3,6,4,-10,-3,-8,8,-1,8,-3,-10,-4,-2,-8,-2,-7,-1,9,-10,-6,5,-3,-3,-7,-2,4,7,-4,-8,-3,3,-3,1,-2,2,-4,-3,7,-9,-4,7,2,-6,4,-1,2,7,10,9,8,3,8,9,1,2,-1,-3,-4,3,3,-6,-10,4,10,-4,-5,-2,-3,10,1,9,-10,6,3,1,3,-5,-10,-3,-2,-1,-3,2,6,-10,-4,10,1,-8,-3,-2,-8,-7,6,1,8,7,-6,9,-2,10,6,-10,4,-3,10,-3,-2,9,2,-8,-9,-4,-3,-7,-2,1,-7,-6,10,7,-7,-10,-3,-9,-8,-9,-1,4,-6,10,-9,5,-3,-6,2,-5,-6,-2,-6,5,-7,1,-7,-5], dtype = "int8")#candidate|5716|(396,)|const|int8
call_5715 = func_884_call(relay.reshape(const_5716.astype('int8'), [6, 11, 6]))
call_5717 = func_884_call(relay.reshape(const_5716.astype('int8'), [6, 11, 6]))
output = relay.Tuple([call_5709,call_5715,const_5716,])
output2 = relay.Tuple([call_5710,call_5717,const_5716,])
func_5718 = relay.Function([], output)
mod['func_5718'] = func_5718
mod = relay.transform.InferType()(mod)
output = func_5718()
func_5719 = relay.Function([], output)
mutated_mod['func_5719'] = func_5719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5502_call = mod.get_global_var('func_5502')
func_5503_call = mutated_mod.get_global_var('func_5503')
call_5786 = relay.TupleGetItem(func_5502_call(), 0)
call_5787 = relay.TupleGetItem(func_5503_call(), 0)
func_5718_call = mod.get_global_var('func_5718')
func_5719_call = mutated_mod.get_global_var('func_5719')
call_5795 = relay.TupleGetItem(func_5718_call(), 0)
call_5796 = relay.TupleGetItem(func_5719_call(), 0)
func_2228_call = mod.get_global_var('func_2228')
func_2234_call = mutated_mod.get_global_var('func_2234')
const_5811 = relay.const(-0.499441, dtype = "float32")#candidate|5811|()|const|float32
const_5812 = relay.const([7.933391,-5.598149,1.952809,-5.397811,5.856393,6.831625,7.421529,2.052686,6.025503,3.130603,-8.870934,2.878680,-6.900438,0.120822,7.657175,3.986848,0.161116,7.429941,-1.278558,-1.074789,-7.575424,9.449049,-5.938605,-0.245398,-9.365217,-8.820588,6.658845,-6.359296,9.895075,4.847293,4.461221,-0.925400,-6.942721,6.676860,6.848449,-6.199230,1.380393,5.661981,-0.835821,-4.640005,2.261410,-0.608885,-4.094393,-2.421390,-9.438113,-8.218522,9.369335,-1.527013,-1.051062,-9.487682,-1.400883,-0.197403,-3.868944,7.099815,8.550582,3.830840,-7.056281,1.321959,3.767482,0.589126,8.079361,6.430607,-7.422372,-5.272788,7.138144,-0.535979,0.737946,-3.771037,-0.215806,1.662035,8.038644,2.140822,-2.781324,-5.761838,-3.204233,7.450731,-3.435350,-9.650084,0.184063,0.359295,8.965220,-0.793187,-6.696444,1.154496,-7.372027,-1.065781,8.844634,3.917268,-7.999832,6.481355,9.992150,-6.983794,3.194002,-5.128534,4.461852,-3.851705,1.616155,-7.723048,5.393745,8.441437,-4.022475,2.993259,4.593156,1.290217,-3.921121,-4.814689,2.468879,8.435009,-6.492649,8.366213,-3.474791,-1.023736,-0.604929,0.397591,-6.436212,4.739400,9.726468,6.766184,-4.829373,-0.747861,9.404776,-5.989608,-8.775301,-8.301112,-6.225990,-2.347877,9.417756,-6.795142,0.080178,5.841337,-4.752882,-7.408337,1.454233,-5.095705,-4.271055,-8.317979,-8.216806,8.992148,7.865046,1.384815,7.386001,-2.390057,-8.281670,7.651003,-5.768221,-4.881635,0.027732,-9.576039,-7.580256,-9.680357,-1.986251,-6.069267,-4.731940,2.494762,2.983011,7.816951,-9.519202,4.108222,-8.293654,0.133797,2.159738,-5.078717,-0.850323,5.285262,3.227761,-9.553191,0.045692,-8.495960,-4.062439,4.472785,-5.340775,-1.517281,-4.951010,-0.257667,-3.019868,9.219695,1.814293,9.301936,3.629832,-3.038783,-7.464563,-8.969543,8.950342,0.682473,-8.160285,-7.539994,0.920133,2.002109,-1.602113,6.581797,9.580380,1.229093,-4.810215,0.087692,5.458184,-9.247001,-9.617848,9.187283,-8.011388,0.477534,5.931169,6.921390,-7.526561,-2.038356,-2.225790,-3.340754,1.124946,-1.854983,-7.138062,1.746810,7.413585,6.797160,-5.022351,-4.800642,-6.433233,6.541987,0.204214,-7.164203,6.046445,-6.452730,-0.928097,-7.016950,-9.294207,7.891257,-0.134405,3.990623,6.529199,4.360715,5.228838,-5.116752,3.937280,-4.871179,-8.245287,-6.463010,4.200568,-5.363609,5.274917,0.210824,4.894742,-8.352752,5.954166,-8.294617,6.353076,-3.781088,6.822041,-0.319580,-0.788725,6.400403,5.568760,5.891214,-0.266680,1.801339,-8.084219,-0.848070,7.552859,2.715854,-3.379233,2.531571,7.353081,-2.311762,-9.646334,8.627139,9.222556,-1.970215,-4.842680,-2.535649,1.343361,4.424020,-4.589750,0.637611,-7.339622,5.166448,-4.511360,-2.888686,-9.737359,-2.537919,6.284458,-9.440823,-4.811587,-5.908070,-3.185238,-9.322268,-1.243531,8.540590,3.783454,-6.086876,5.585045,-9.924652,7.305291,0.230050,7.792583,-0.287388,6.905605,-0.147771,2.474596,-3.339498,5.197735,4.807938,-2.513428,-8.166058,-9.302025,-0.822151,-4.635848,1.026956,6.990960,-2.586706,8.029879,-8.836525,3.574653,-9.551185,0.259058,-5.101017,7.317679,-3.204321,-3.288368,0.648746,0.417669,-1.831238,-9.420284,0.529042,-8.996812,3.489183,1.370359,-1.112010,-5.089316,8.262701,6.600308,-4.965188,-8.928781,3.230039,3.654018,0.015520,-7.573711,8.884547,1.071065,-8.461856,-4.246530,8.605914,0.413801,-6.044155,1.423927,4.849358,1.478167,1.439879,-6.050467,-6.701309,-1.975414,4.977933,5.174015,0.289204,4.641777,-7.830146,1.203289,1.348497,2.265237,-5.791156,-4.800147,0.772843,6.315484,2.492044,0.573465,-8.359096,7.945105,-3.199055,-1.645960,0.740644,-3.152803,6.111364,-5.693723,-4.279204,-2.771965,-8.237800,8.412635,-1.790406,-7.935672,-8.155253,6.025677,0.561479,-1.966114,8.410644,-5.748668,0.851295,-9.124571,-8.480858,7.448741,-1.259874,-3.205185,-9.181113,-8.022242,-9.335287,-1.482238,1.856975,1.655069,-9.372336,-8.867948,-9.127621,1.957409,8.211858,-3.242745,-1.732168,4.163390,2.382978,5.271485,9.101044,-0.353785,-9.586207,-1.687961,-7.421287,8.925342,-0.757182,-5.219511,-8.981832,-8.315136,9.948728,0.830664,-9.900060,-9.780629,-7.156279,-1.175015,-5.876117,-7.283290,9.896843,-5.412743,-0.594342,8.313786,0.423701,-3.852787,4.335432,-5.689356,5.681264,-3.168631,-8.625257,-9.705651,-0.742334,-9.941710,9.650295,4.502382,8.154258,5.709236,3.820417,-5.619994,-6.402646,-4.629132,4.044609,8.344931,5.280069,7.161540,-8.346341,-9.128835,-2.890646,3.621305,1.440292,-3.285119,-7.833119,1.988315,-4.343608,4.380716,-0.528473,-7.060825,-2.529773,-9.649213,9.529812,2.536259,2.548392,-5.569370,-9.048176,-0.720742,7.159439,-2.450905,-4.695104,4.357078,-1.085744,6.419647,4.374762,-6.648439,9.698595,9.468910,-8.004126,8.278687,-9.154429,3.676266,1.777272,2.625804,0.505037,4.376252,8.175822,-3.744552,8.664769,-7.702600,-9.243955,-4.013821,0.888663,-5.523544,-8.651346,-1.491259,-5.931450,0.400710,1.554917,-0.486397,-2.437762,-7.962641,-1.821780,7.810949,-4.682981,-9.688761,8.818009,7.550648,-8.046864,-6.911217,1.586349,-3.483327,6.677280,1.987002,-4.179971,0.437086,8.669356,-6.266150,-0.169111,3.859821,4.589916,7.509901,-0.682939,2.530562,5.651419,9.945434,-0.355443,-6.946821,6.513773], dtype = "float32")#candidate|5812|(528,)|const|float32
var_5813 = relay.var("var_5813", dtype = "float64", shape = (1568,))#candidate|5813|(1568,)|var|float64
const_5814 = relay.const([-5.064258,6.785696,5.961591,-7.511181,7.669889,2.758891], dtype = "float64")#candidate|5814|(6,)|const|float64
call_5810 = relay.TupleGetItem(func_2228_call(relay.reshape(const_5811.astype('float32'), []), relay.reshape(const_5812.astype('float32'), [11, 12, 4]), relay.reshape(var_5813.astype('float64'), [1568,]), relay.reshape(const_5814.astype('float64'), [6,]), ), 1)
call_5815 = relay.TupleGetItem(func_2234_call(relay.reshape(const_5811.astype('float32'), []), relay.reshape(const_5812.astype('float32'), [11, 12, 4]), relay.reshape(var_5813.astype('float64'), [1568,]), relay.reshape(const_5814.astype('float64'), [6,]), ), 1)
output = relay.Tuple([call_5786,call_5795,call_5810,const_5811,const_5812,var_5813,const_5814,])
output2 = relay.Tuple([call_5787,call_5796,call_5815,const_5811,const_5812,var_5813,const_5814,])
func_5818 = relay.Function([var_5813,], output)
mod['func_5818'] = func_5818
mod = relay.transform.InferType()(mod)
var_5819 = relay.var("var_5819", dtype = "float64", shape = (1568,))#candidate|5819|(1568,)|var|float64
output = func_5818(var_5819)
func_5820 = relay.Function([var_5819], output)
mutated_mod['func_5820'] = func_5820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_5839 = relay.TupleGetItem(func_5675_call(), 1)
call_5840 = relay.TupleGetItem(func_5677_call(), 1)
output = call_5839
output2 = call_5840
func_5843 = relay.Function([], output)
mod['func_5843'] = func_5843
mod = relay.transform.InferType()(mod)
mutated_mod['func_5843'] = func_5843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mutated_mod.get_global_var('func_5843')
call_5844 = func_5843_call()
output = call_5844
func_5845 = relay.Function([], output)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5933 = relay.var("var_5933", dtype = "float32", shape = (7, 4, 8))#candidate|5933|(7, 4, 8)|var|float32
uop_5934 = relay.erf(var_5933.astype('float32')) # shape=(7, 4, 8)
func_5657_call = mod.get_global_var('func_5657')
func_5659_call = mutated_mod.get_global_var('func_5659')
var_5950 = relay.var("var_5950", dtype = "float32", shape = (15,))#candidate|5950|(15,)|var|float32
call_5949 = relay.TupleGetItem(func_5657_call(relay.reshape(var_5950.astype('float32'), [15,])), 2)
call_5951 = relay.TupleGetItem(func_5659_call(relay.reshape(var_5950.astype('float32'), [15,])), 2)
output = relay.Tuple([uop_5934,call_5949,var_5950,])
output2 = relay.Tuple([uop_5934,call_5951,var_5950,])
func_5959 = relay.Function([var_5933,var_5950,], output)
mod['func_5959'] = func_5959
mod = relay.transform.InferType()(mod)
var_5960 = relay.var("var_5960", dtype = "float32", shape = (7, 4, 8))#candidate|5960|(7, 4, 8)|var|float32
var_5961 = relay.var("var_5961", dtype = "float32", shape = (15,))#candidate|5961|(15,)|var|float32
output = func_5959(var_5960,var_5961,)
func_5962 = relay.Function([var_5960,var_5961,], output)
mutated_mod['func_5962'] = func_5962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_5973 = relay.TupleGetItem(func_5675_call(), 1)
call_5974 = relay.TupleGetItem(func_5677_call(), 1)
func_5818_call = mod.get_global_var('func_5818')
func_5820_call = mutated_mod.get_global_var('func_5820')
var_5977 = relay.var("var_5977", dtype = "float64", shape = (8, 196))#candidate|5977|(8, 196)|var|float64
call_5976 = relay.TupleGetItem(func_5818_call(relay.reshape(var_5977.astype('float64'), [1568,])), 0)
call_5978 = relay.TupleGetItem(func_5820_call(relay.reshape(var_5977.astype('float64'), [1568,])), 0)
output = relay.Tuple([call_5973,call_5976,var_5977,])
output2 = relay.Tuple([call_5974,call_5978,var_5977,])
func_5984 = relay.Function([var_5977,], output)
mod['func_5984'] = func_5984
mod = relay.transform.InferType()(mod)
mutated_mod['func_5984'] = func_5984
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5985 = relay.var("var_5985", dtype = "float64", shape = (8, 196))#candidate|5985|(8, 196)|var|float64
func_5984_call = mutated_mod.get_global_var('func_5984')
call_5986 = func_5984_call(var_5985)
output = call_5986
func_5987 = relay.Function([var_5985], output)
mutated_mod['func_5987'] = func_5987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_6013 = relay.TupleGetItem(func_5675_call(), 0)
call_6014 = relay.TupleGetItem(func_5677_call(), 0)
output = call_6013
output2 = call_6014
func_6020 = relay.Function([], output)
mod['func_6020'] = func_6020
mod = relay.transform.InferType()(mod)
mutated_mod['func_6020'] = func_6020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6020_call = mutated_mod.get_global_var('func_6020')
call_6021 = func_6020_call()
output = call_6021
func_6022 = relay.Function([], output)
mutated_mod['func_6022'] = func_6022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6020_call = mod.get_global_var('func_6020')
func_6022_call = mutated_mod.get_global_var('func_6022')
call_6049 = func_6020_call()
call_6050 = func_6020_call()
output = call_6049
output2 = call_6050
func_6055 = relay.Function([], output)
mod['func_6055'] = func_6055
mod = relay.transform.InferType()(mod)
output = func_6055()
func_6056 = relay.Function([], output)
mutated_mod['func_6056'] = func_6056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5718_call = mod.get_global_var('func_5718')
func_5719_call = mutated_mod.get_global_var('func_5719')
call_6067 = relay.TupleGetItem(func_5718_call(), 0)
call_6068 = relay.TupleGetItem(func_5719_call(), 0)
output = relay.Tuple([call_6067,])
output2 = relay.Tuple([call_6068,])
func_6073 = relay.Function([], output)
mod['func_6073'] = func_6073
mod = relay.transform.InferType()(mod)
output = func_6073()
func_6074 = relay.Function([], output)
mutated_mod['func_6074'] = func_6074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5502_call = mod.get_global_var('func_5502')
func_5503_call = mutated_mod.get_global_var('func_5503')
call_6084 = relay.TupleGetItem(func_5502_call(), 0)
call_6085 = relay.TupleGetItem(func_5503_call(), 0)
uop_6093 = relay.tan(call_6084.astype('float32')) # shape=(9, 7, 11)
uop_6095 = relay.tan(call_6085.astype('float32')) # shape=(9, 7, 11)
output = uop_6093
output2 = uop_6095
func_6098 = relay.Function([], output)
mod['func_6098'] = func_6098
mod = relay.transform.InferType()(mod)
output = func_6098()
func_6099 = relay.Function([], output)
mutated_mod['func_6099'] = func_6099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6055_call = mod.get_global_var('func_6055')
func_6056_call = mutated_mod.get_global_var('func_6056')
call_6141 = func_6055_call()
call_6142 = func_6055_call()
output = relay.Tuple([call_6141,])
output2 = relay.Tuple([call_6142,])
func_6145 = relay.Function([], output)
mod['func_6145'] = func_6145
mod = relay.transform.InferType()(mod)
output = func_6145()
func_6146 = relay.Function([], output)
mutated_mod['func_6146'] = func_6146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_6156 = func_5843_call()
call_6157 = func_5843_call()
func_2228_call = mod.get_global_var('func_2228')
func_2234_call = mutated_mod.get_global_var('func_2234')
const_6173 = relay.const(-0.170092, dtype = "float32")#candidate|6173|()|const|float32
const_6174 = relay.const([5.966458,7.193188,1.536953,1.891140,3.027138,2.558343,-0.332453,-8.606026,-3.212462,4.030649,9.619383,-1.261257,-4.368933,-2.018677,0.407975,9.652085,-4.250150,-1.665242,3.423775,-5.626822,-9.771827,-9.660530,-4.548818,9.140137,-2.445009,4.705857,2.948540,-7.959840,-2.786770,8.033779,-5.968377,-8.356962,5.338368,1.525326,-0.156779,5.445736,6.376173,-9.429230,-9.643689,-8.021011,-5.647237,0.847301,0.924250,9.241543,-8.546492,8.168822,0.036458,-1.934650,-2.592490,-3.983079,0.560013,7.496724,7.274091,-8.266193,4.287650,-6.240165,-8.449715,0.509507,-2.191152,3.451425,-4.741380,8.891372,-7.693336,-7.770785,5.597931,5.600727,7.664860,0.889025,-0.442024,-3.225461,9.179254,-1.685383,-9.611301,2.471899,-4.225255,-1.473497,-9.944884,4.095851,5.454839,3.480207,-6.824843,6.815730,-8.050073,-4.201987,-1.375693,-1.186717,-3.527846,0.152382,4.463142,6.701572,5.838679,-4.127774,3.449888,-9.340750,0.046271,-0.069670,-1.992311,4.165940,-8.597251,-4.259305,5.097645,-5.759852,4.951866,-7.782034,4.646085,-8.534460,9.257700,-7.824100,-1.167647,7.911490,-2.495401,5.521948,1.378865,4.131459,3.386557,-4.103589,1.755559,-1.162338,-9.503388,5.810966,-6.606567,-4.372079,-5.132205,-9.061515,8.304969,-1.569846,7.464520,1.420281,8.524014,1.527981,-3.213598,6.760712,-9.867102,-3.949767,-0.974618,-9.039658,7.939223,0.697067,7.334916,5.455025,1.185236,2.013758,3.317750,-1.506641,6.728830,0.592396,2.658129,2.987899,-3.297203,7.651270,1.773757,1.223439,-7.404897,-3.532838,6.458268,7.191423,-0.864621,2.073718,5.259931,-2.995220,8.400432,-6.937256,-0.140418,1.470000,2.179067,8.075896,-5.660910,0.929343,0.516297,6.309642,4.563416,-1.378599,7.731328,-3.487688,3.271154,5.654465,-5.575165,0.500084,-0.661254,-7.274018,5.479521,-7.100721,-0.021884,5.526095,-1.427232,-8.190719,1.161053,0.609136,1.086276,7.342649,-3.013972,5.612725,-3.187551,3.600633,2.580150,-5.386406,9.517936,4.821351,-0.690185,-3.925845,6.778651,5.123957,0.687628,1.929808,-9.516562,0.044991,5.245269,9.539472,4.726434,-1.834453,-8.029279,-0.684281,-6.502436,-0.457640,-6.467474,7.355209,1.081348,-7.128443,8.663156,0.143104,-6.183410,-1.035745,-0.517293,1.179636,-9.491364,-1.492734,-1.983371,-2.957688,-3.022170,1.826360,6.721517,-1.030139,5.986013,0.374737,-8.811925,-9.316954,3.680289,7.458216,9.748508,-9.376062,-1.549158,-9.541691,5.439884,4.781299,6.863010,-3.292587,6.548366,-0.391053,6.776940,7.990065,-7.366081,-8.818960,-0.066163,9.826149,-7.795300,9.113910,7.021595,5.699842,7.983761,-1.637004,7.218175,5.533417,-1.486081,-9.835631,-4.872733,6.333184,7.315866,-6.270858,2.085134,6.283071,5.718098,6.097774,1.844642,3.111202,8.416020,4.434355,-9.904209,-0.386460,-8.668093,-9.994986,-1.714746,-0.134028,4.629515,-1.456000,-5.958656,-7.266485,-6.885640,-8.295151,-7.515236,-7.157482,-9.239533,5.734660,7.134467,5.408172,-0.486610,-6.040332,5.238781,-0.596637,2.228464,-7.458961,4.564029,-2.534829,-0.734904,6.499505,-4.022282,-4.357463,4.468555,-7.469783,8.759636,0.469970,2.289710,6.001425,-6.433842,-7.564335,-5.475960,9.259155,6.666214,0.462177,4.691537,0.567826,0.800419,-8.218465,4.612420,7.750102,-4.002119,-3.382807,-0.105411,-0.283677,7.320357,-6.241596,0.145701,4.634859,2.105054,-7.460546,0.148893,4.181758,-9.323848,-3.440722,-4.169803,-1.668857,-4.606759,-8.051383,-2.935245,1.051075,1.597938,4.224144,2.003531,-8.491408,-2.955448,3.342068,-1.348173,-7.979947,-6.384395,-4.590787,-9.680809,4.364681,3.093541,4.335378,0.765580,0.338322,-9.090895,7.466527,-9.706780,1.439471,1.740200,-6.451955,2.917388,-4.011655,5.322579,-1.453720,2.531288,-9.754154,2.809203,5.022443,-8.140560,-5.652870,4.647175,1.135205,0.313857,-6.058439,6.438850,-2.181324,7.566970,2.015757,6.396643,-5.234820,7.776310,6.438447,-5.993169,7.786875,7.781635,-0.859218,-5.174991,-9.786276,-0.772399,-5.759784,-1.151193,-4.131935,2.587973,-5.946297,9.308892,0.691384,-4.383140,1.611441,4.067120,7.640038,-2.625532,-2.554776,4.652015,-2.258639,6.499014,-0.845535,3.076236,-5.560755,-1.246202,3.724249,8.935226,-1.494727,4.064559,7.732277,4.315520,-5.967568,-7.628144,-4.378730,8.912403,5.182963,6.412092,-8.656758,-2.452207,5.658727,-0.057646,-4.886134,0.486279,9.832499,-3.407118,-6.526424,4.396852,-4.404294,6.665778,-2.704542,7.983026,3.040840,1.526048,-8.043286,-9.262712,-6.346917,-2.166093,9.097796,9.011888,4.941131,0.304493,0.110478,-2.780844,-5.455492,-7.778044,-8.693325,-2.417768,-7.345953,-6.087588,7.388526,-3.844212,5.163586,-1.265061,2.453987,7.314381,4.666281,-0.399282,4.082686,-5.947578,-9.221230,-8.953288,3.537519,-7.876955,-0.386170,-8.887214,-7.108382,7.253305,7.610048,-6.268473,-7.878286,4.825491,-2.672022,-7.120109,-7.649631,3.649600,-1.139147,-3.920705,-2.054680,8.555982,7.207872,-0.138389,5.253262,9.640666,6.155240,3.952788,0.889563,3.605724,-0.060276,8.787505,6.455947,3.892463,6.473059,9.104986,-1.260826,-2.284704,-8.530835,8.693201,6.621767,-0.244204,-9.779792,-3.564423,2.596073,4.793333,9.456138,-2.329745,0.956882,-9.628657,2.385728,-0.913191,5.750998,3.149650,7.953688,3.208321,4.618026,2.537421,5.555518,3.776695,-6.312923], dtype = "float32")#candidate|6174|(528,)|const|float32
var_6175 = relay.var("var_6175", dtype = "float64", shape = (1568,))#candidate|6175|(1568,)|var|float64
var_6176 = relay.var("var_6176", dtype = "float64", shape = (6,))#candidate|6176|(6,)|var|float64
call_6172 = relay.TupleGetItem(func_2228_call(relay.reshape(const_6173.astype('float32'), []), relay.reshape(const_6174.astype('float32'), [11, 12, 4]), relay.reshape(var_6175.astype('float64'), [1568,]), relay.reshape(var_6176.astype('float64'), [6,]), ), 6)
call_6177 = relay.TupleGetItem(func_2234_call(relay.reshape(const_6173.astype('float32'), []), relay.reshape(const_6174.astype('float32'), [11, 12, 4]), relay.reshape(var_6175.astype('float64'), [1568,]), relay.reshape(var_6176.astype('float64'), [6,]), ), 6)
func_5818_call = mod.get_global_var('func_5818')
func_5820_call = mutated_mod.get_global_var('func_5820')
call_6186 = relay.TupleGetItem(func_5818_call(relay.reshape(var_6175.astype('float64'), [1568,])), 1)
call_6187 = relay.TupleGetItem(func_5820_call(relay.reshape(var_6175.astype('float64'), [1568,])), 1)
output = relay.Tuple([call_6156,call_6172,const_6173,const_6174,var_6175,var_6176,call_6186,])
output2 = relay.Tuple([call_6157,call_6177,const_6173,const_6174,var_6175,var_6176,call_6187,])
func_6193 = relay.Function([var_6175,var_6176,], output)
mod['func_6193'] = func_6193
mod = relay.transform.InferType()(mod)
mutated_mod['func_6193'] = func_6193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6193_call = mutated_mod.get_global_var('func_6193')
var_6195 = relay.var("var_6195", dtype = "float64", shape = (1568,))#candidate|6195|(1568,)|var|float64
var_6196 = relay.var("var_6196", dtype = "float64", shape = (6,))#candidate|6196|(6,)|var|float64
call_6194 = func_6193_call(var_6195,var_6196,)
output = call_6194
func_6197 = relay.Function([var_6195,var_6196,], output)
mutated_mod['func_6197'] = func_6197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_6249 = func_5843_call()
call_6250 = func_5843_call()
func_5433_call = mod.get_global_var('func_5433')
func_5437_call = mutated_mod.get_global_var('func_5437')
const_6258 = relay.const([4,5,9,8,-8,-2,1,-4,1,8,-5,5,9,8,-9,9,9,1,4,9,4,-4,1,-9,-5,10,-10,-6,8,2,-10,-3,7,-6,3,-4,1,3,7,4,9,-4,10,-1,-5,-6,-4,-4,10,5,-9,2,10,-10,7,10,8,8,-7,6], dtype = "int64")#candidate|6258|(60,)|const|int64
var_6259 = relay.var("var_6259", dtype = "int64", shape = (240,))#candidate|6259|(240,)|var|int64
const_6260 = relay.const([-3.687842,-4.977457,-6.541403,-9.908231,-8.030665,-6.286025,-8.988691,9.642255,5.173451,9.612716,2.852303,-2.255895,3.583787,-6.416487,0.459906,-8.202164,5.893546,-7.082842,-5.746415,-7.455092,1.077045,-2.888983,-7.692551,5.646588,7.285094,-7.168090,-2.045368,-2.058264,-9.319579,-1.956460,-8.569774,-1.241488,5.837891,5.939669,3.547523,-2.142781,-2.346191,-9.792456,-9.577712,-2.706605,-6.695800,9.430858,5.849520,6.247083,-6.503123,5.418159,-9.847016,-2.387789,8.464003,0.259844,0.960547,7.914350,-1.000250,7.235676,2.523288,0.285174,-8.754184,-8.078335,-8.162541,5.714881,4.644351,-3.035370,-2.236041,2.847233,-6.777518,-6.570608,5.532431,-0.667121,9.257963,-3.317444,0.247522,3.070299,-3.606954,-5.344993,9.112432,-6.863349,-3.747572,-8.789939,1.626862,-2.195581,-6.406548,-1.717856,-9.874993,-3.772989,-3.723008,0.512081,-2.588891,9.330171,-3.500622,5.363614,1.585329,8.840026,-1.369604,9.655241,9.431483,-1.247677,-9.419082,4.094624,8.371063,7.598959,7.615543,7.724570,2.491569,-3.874188,-7.452394,4.565687,9.359479,-9.645369,-3.864420,-4.115454,5.403111,2.067227,9.013063,3.815765,-3.561416,-0.942037,0.231008,6.826812,-9.306064,-9.189631,-8.321749,-3.239753,-4.014697,7.358165,-8.052633,7.747546,-3.330450,-0.035810,6.349223,-6.680722,-8.134363,2.064949,8.926363,-5.585950,7.981779,-3.098088,-0.834331,4.976019,2.274517,8.112764,-2.803733,-8.921566,1.021508,-2.569246,-4.675732,9.997506,3.753875,-3.745028,1.642304,-5.792451,2.317498,-3.579838,-3.912236,7.686937,5.748243,4.915424,3.432840,-9.358348,-2.705258,4.910252,-5.333873,1.600471,-1.814635,-2.909928,-7.174872,-8.985131,4.151824,8.028750,-5.372003,-4.396302,3.765745,-8.782909,1.368796,-7.699803,3.274008,-8.826778,-3.004428,-8.306900,6.772996,-8.076606,7.551888,7.661905,-1.255489,-2.240625,0.533026,-0.195322,7.687201,9.612801,2.320467,-1.666937,-2.912982,-9.789711,5.168055,7.383516,8.995736,-7.809584,-9.511873,-9.929025,6.525356,7.842746,0.317209,7.111279,-0.652824,9.023311,-2.014482,0.252739,-3.339976,7.969608,-3.291538,-7.237379,7.307607,-7.774927,-1.490503,-4.739086,-3.729121,8.075863,8.692812,-1.441918,8.149371,1.263794,9.230540,-2.703300,4.195790,2.958460,-2.041709,4.128323,8.929118,7.924260,-4.332778,2.274131,-3.271080,-4.120655,6.190796,0.409899,-8.269905,9.444863,6.213817,4.678232,3.672007,-9.446262,-0.644961,8.842703,-9.549269,-8.180831,-1.770010,2.499559,-4.295611,-9.328967,-3.919522,-7.534553,5.349607,-4.220916,-2.874719,6.803372,1.415438,7.792680,8.176272,9.155139,-2.615070,2.367773,1.334650,7.090266,-5.243328,1.509800,0.944777,-4.264632,2.076185,-9.479639,-3.870978,-0.735212,2.884716,-0.525311,-4.622201,-7.318519,9.034174,-9.324512,-2.985836,-5.335513,4.623870,6.282110,1.180736,7.465321,7.656375,-7.558255,3.119538,5.426509,7.815714,-9.458081,3.297883,-7.693029,-9.873521,9.899186,-2.105683,2.801779,8.608358,-8.426783,-3.598873,-2.821895,4.951504,-9.338827,3.844366,-0.400143,6.995415,-2.569577,0.840922,7.680671,0.284390,3.503300,-2.980219,-9.300939,2.324753,-3.665810,-7.776291,3.926590,-9.507301,1.777565,2.734523,-8.055357,-5.108995,9.308568,6.520597,6.320069,8.618088,-4.335553,2.981383,-1.795621,7.019096,2.487964,9.716695,-7.713845,-9.717280,6.349977,7.819932,-3.431975,-5.986973,5.755820,-1.937079,9.455308,3.502873,7.935258,-4.295255,-3.440803,-5.226877,8.137726,-8.947490,3.253808,1.985139,6.866571,-2.750994,-9.191677,8.703315,-9.901869,-5.316055,-7.877727,7.027842,9.534617,9.266948,-9.932366,2.887998,9.254832,9.945667,-2.720167,4.421504,1.440616,4.693253,-0.379359,7.124413,-8.949039,-3.106730,-4.521443,-1.300523,0.674524,0.788334,8.947058,-6.372527,-7.320907,-2.568964,-1.245202,-2.450111,7.048558,-4.142116,9.808649,7.245089,3.592978,-9.579472,4.494496,4.841447,-0.158714,-5.891269,4.424444,-6.646241,-6.295831,-1.480264,-7.999874,-6.367462,-6.284169,0.971170,2.052351,8.500434,1.676722,-6.478522,-1.358072,4.459713,-1.594188,0.242477,-0.126533,2.247051,-5.277748,-1.536167,1.776226,-4.043406,9.534251,3.981825,-3.218265,4.508413,-5.296931,5.153089,-5.521090,3.451432,-7.249231,-1.613395,-5.252226,-3.577875,-0.554224,8.290157,1.484856,2.213663,8.278394,9.837396,-2.749988,4.187553,-7.050497,1.826110,-6.721404,1.942614,4.468969,8.119888,-5.323877,-8.223770,-4.004778,-8.416666,-2.585547,-1.338126,-9.550906,1.397171,1.274713,1.587757,6.264032,-1.488636,3.970005,8.211505,1.728093,-1.974233,-1.019229,-6.540695,-5.502649,-5.194786,4.796784,-4.319940,2.292791,-5.848198,1.502545,-2.997531,-8.878169,-0.744422,7.810443,7.048393,-0.672110,-1.736371,-7.985544,-5.851659,2.000850,7.969199,0.853748,-5.787924,-7.397193,1.505515,-2.868562,-9.438119,-9.387697,-4.270772,-3.864405,0.606362,7.734339,9.529452,-1.428686,-4.411409,4.087949,-3.054620,4.554428,6.714356,5.024308,7.622520,-7.827525,0.114170,-0.818922,-8.861798,0.320141,-1.096079,1.962289,-4.015149,2.796077,5.234301,6.863027,6.907506,-3.275172,-3.598949,-4.315732,2.963549,9.295844,0.887872,-6.337177,8.453194,1.323567,-3.291042,3.320456,5.892741,9.334271,1.982981,-9.292980,-9.161851,2.390978,5.315600,-3.637180,3.798790,4.280241,-6.308866,-4.693570,9.321830,1.635329,2.063177,-4.575211,9.476490,7.754600,-5.234023,3.160936,9.191422,6.423348,-8.604988,0.365006,-3.618654,8.005157,1.616207,-5.157890,8.105320,-9.531151,-3.720209,7.493342,2.802300,7.371313,3.438448,-5.409303,8.071921,9.400113,2.925166,1.432422,1.291449,-9.201330,0.842752,6.448803,-4.741948,1.588529,-4.005830,-0.200387,0.964602,-1.194046,8.171603,5.300925,-7.545523,-8.349115,-0.267111,4.869336,-6.382023,-2.301616,-8.942230,8.515252,4.358124,-8.894267,7.170815,5.895370,-3.832337,6.182404,-5.799927,-1.436946,1.924435,4.808952,1.342874,7.755756,-3.217759,4.871374,1.447044,-4.862633,2.262483,3.732521,2.294944,3.069969,-0.377303,2.272242,-2.186544,8.881915,0.137117,3.119859,-5.908028,-5.452749,-5.344840,3.686253,-4.406261,-0.240277,-7.177818,3.437077,2.122733,8.613825,4.481164,-9.779014,2.608894,-5.581763,-5.531648,1.038001,-7.233398,-8.903692,8.012473,0.244522,2.649534,9.715678,1.303606,8.034872,3.064599,-2.417207,-3.804260,-5.000064,-4.001466,-5.284943,-4.695125,2.412303,3.604037,9.180141,-6.239066,6.708537,0.303126,4.487639,1.590551,7.336283,-8.237255,4.924279,-1.816449,-7.489449,-6.463908,-9.020154,-8.004707,-1.757049,9.616578,-6.326199,-0.464785,8.906120,-8.162818,-4.443447,2.494942,-2.623088,2.027913,-6.963815,-8.953854,-4.470251,3.735214,0.890701,3.310684,-7.653152,-2.421169,-9.127681,-6.618769,-6.398168,-1.476875,-2.953669,-1.857598,4.926672,-0.936740,3.892308,-7.702602,-5.297932,-3.437772,9.905018,8.119256,-3.126514,-6.537700,-1.249247,-1.433001,5.643128,2.390089,2.992504,5.613478,0.408128,-6.462790,-4.333329,-4.748408,4.438071,-8.890464,-6.419415,-9.174781,9.978853,1.573540,0.809104,-1.625512,5.213719,-6.390841,7.153532,4.451602,0.535815,-2.547821,5.081570,-2.540305,8.792042,1.571954,-8.278033,9.922159,0.007880,3.058069,-3.778440,6.388316,8.575926,-5.251631,0.262979,1.282058,-2.505127,-0.894778,4.110820,-9.179992,-7.407488,-0.494870,7.626509,-4.799268,5.993269,9.084130,-7.566531,7.683254,-2.755388,-1.265015,5.720950,-7.679774,6.107040,1.585931,-2.385367,-0.987019,-9.612155,9.588990,-8.177725,-0.771626,-7.209714,2.262771,-3.054030,-8.338886,7.604427,3.154797,6.728681,-6.835777,-7.117544,6.161037,0.334181,1.475592,-0.182839,0.267778,8.408686,-6.269234,3.083298,-9.268385,-4.466937,-0.010683,5.418613,1.703097,0.335690,-1.322826,1.519432,-1.856842,5.609163,-3.720880,2.144531,-0.686115,5.716574,-2.791106,-5.681341,5.200543,6.748964,-7.302385,9.722389,3.060471,7.186088,-8.784236,0.592224,1.558086,0.937986,3.437173,3.013382,3.022020,-7.650973,9.266597,-9.867746,-7.858121,-2.978624,-3.024674,-8.485937,9.059075,3.205180,-4.107994,-5.206104,4.636291,-7.663481,-9.486251,-3.034439,-1.200447,1.747976,-1.862362,-5.458389,-5.505788,7.733260,-8.949440,-8.521951,-4.267360,-9.483244,3.721301,-7.925789,-1.360165,0.107773,0.953070,-9.714522,-7.569500,7.330366,6.055447,8.238326,2.284236,-9.434705,-6.915589,2.157032,9.215982,-8.725736,-3.717045,2.259517,6.161312,-1.096599,4.598956,-1.805351,-9.989269,-3.007140,-7.207176,4.188634,-6.844744,3.492329,5.152148,7.651691,-3.863797,0.461120,3.693709,5.417496,6.954187,0.993693,-4.916743,-7.052659,2.713901,-7.824689,6.823454,8.416551,-6.975857,-7.009148,3.589326,-3.755388,5.757004,1.488935,-7.434643,3.362119,-1.712988,-7.841687,4.694073,3.584033,3.247381,-2.341995,-3.134538,5.206830,-4.639871,-4.303608,9.668744,-9.735457,-9.193204,8.227843,-8.689515,-0.335654,5.498802,-4.401621,0.409604,-4.429369,6.846133,2.939976,-8.731550,-7.967228,8.780242,3.800622,3.040241,7.976139,6.020910,1.880530,-0.991102,-8.564536,-5.529991,-4.114757,-0.859399,4.502280,1.616666,5.768831,8.676625,-1.927573,-7.151227,5.231517,4.286697,8.985186,-9.930453,7.601650,-1.356906,-0.667058,-3.766394,3.599429,2.272146,-8.296460,0.575059,2.297904,-4.006861,0.299929,0.225087,-2.007478], dtype = "float64")#candidate|6260|(924,)|const|float64
call_6257 = relay.TupleGetItem(func_5433_call(relay.reshape(const_6258.astype('int64'), [1, 15, 4]), relay.reshape(var_6259.astype('int64'), [4, 15, 4]), relay.reshape(const_6260.astype('float64'), [924,]), ), 3)
call_6261 = relay.TupleGetItem(func_5437_call(relay.reshape(const_6258.astype('int64'), [1, 15, 4]), relay.reshape(var_6259.astype('int64'), [4, 15, 4]), relay.reshape(const_6260.astype('float64'), [924,]), ), 3)
output = relay.Tuple([call_6249,call_6257,const_6258,var_6259,const_6260,])
output2 = relay.Tuple([call_6250,call_6261,const_6258,var_6259,const_6260,])
func_6294 = relay.Function([var_6259,], output)
mod['func_6294'] = func_6294
mod = relay.transform.InferType()(mod)
var_6295 = relay.var("var_6295", dtype = "int64", shape = (240,))#candidate|6295|(240,)|var|int64
output = func_6294(var_6295)
func_6296 = relay.Function([var_6295], output)
mutated_mod['func_6296'] = func_6296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mod.get_global_var('func_6073')
func_6074_call = mutated_mod.get_global_var('func_6074')
call_6334 = relay.TupleGetItem(func_6073_call(), 0)
call_6335 = relay.TupleGetItem(func_6074_call(), 0)
func_6193_call = mod.get_global_var('func_6193')
func_6197_call = mutated_mod.get_global_var('func_6197')
const_6338 = relay.const([[-1.596799],[9.348815],[0.087897],[-3.010243],[8.413229],[-5.946177],[-3.454174],[-3.583990],[-7.777021],[0.801850],[-9.440208],[9.165806],[8.506629],[9.790524],[-7.635538],[-4.459497],[-7.637308],[3.884736],[3.488015],[-1.271054],[-0.128747],[7.681106],[9.857274],[5.198479],[-1.436591],[4.142648],[-3.535069],[-1.957935],[4.265001],[1.521830],[2.912678],[4.684084],[3.636126],[3.866398],[-9.186865],[-3.758308],[-3.777439],[3.162528],[9.571193],[1.546513],[3.323092],[7.033005],[-1.125572],[6.218355],[5.060740],[8.223739],[4.162853],[-7.526745],[8.941592],[1.573227],[-4.472820],[-8.795611],[4.116646],[-1.858873],[-1.171510],[-9.117237],[-1.506312],[0.976029],[5.744196],[2.081069],[5.892834],[4.603468],[5.321840],[2.293664],[-4.895587],[-1.083218],[-4.264187],[4.764592],[-1.317192],[4.032127],[-5.830034],[-8.052488],[8.707740],[7.363005],[-9.507282],[4.557028],[8.569423],[-0.951753],[2.741868],[6.665023],[-1.836937],[-1.554934],[-7.763553],[-4.997663],[7.001719],[2.469200],[2.420659],[8.900844],[1.436511],[2.067172],[6.925498],[9.418704],[-2.339278],[2.271679],[1.527980],[2.448682],[-5.772623],[8.861354],[6.992247],[4.491507],[4.406999],[-9.478799],[-8.197135],[8.618716],[-7.347748],[2.698632],[4.578038],[-8.252767],[2.130717],[0.612092],[-4.834766],[-1.029387],[-7.837698],[2.423472],[-2.809695],[8.462966],[3.019322],[-8.432304],[5.321325],[4.799063],[5.251663],[2.785086],[1.880744],[-6.075752],[0.403908],[-9.278721],[-5.598831],[-2.989158],[-8.984625],[-4.510772],[-6.654886],[-2.076266],[-4.856196],[7.736180],[-6.993134],[9.461765],[6.745689],[-7.073954],[2.812011],[1.317947],[8.824800],[-5.531332],[0.117524],[-7.523668],[2.341491],[-0.811545],[-1.610936],[7.231328],[5.630098],[-9.440340],[-1.954542],[6.674282],[-7.904042],[-0.412736],[-7.621246],[-1.437034],[7.953540],[6.390081],[9.850390],[-6.718743],[4.740557],[-7.610199],[0.761398],[-0.654288],[-0.941894],[-9.467423],[-0.056209],[5.190933],[-2.210692],[-7.980571],[5.599111],[-6.687175],[-6.284146],[6.947187],[8.909187],[-6.164497],[-5.437593],[1.457818],[-1.292568],[3.316546],[-8.186517],[2.816437],[7.395669],[-1.987532],[2.667332],[7.836095],[4.638300],[0.426866],[7.892090],[-1.410730],[5.242436],[8.111097],[5.692216],[3.505976],[-6.881903],[2.627394],[5.913865],[-4.360081],[4.351038],[-2.883776],[1.683443],[1.912307],[5.994156],[-5.507129],[-7.042636],[5.766906],[8.819193],[7.046503],[1.536600],[4.873699],[5.165483],[6.531258],[0.967520],[-0.493466],[-4.584523],[5.470928],[-5.389213],[-3.793934],[-2.488717],[-2.621240],[8.189217],[-5.265837],[1.282058],[-8.489049],[-4.314242],[-4.798701],[-1.695624],[-8.135096],[9.979265],[-6.244054],[1.985609],[-1.911052],[-1.738902],[3.923696],[8.512917],[5.117684],[-4.397031],[-8.278567],[-6.796604],[-5.692752],[-2.690093],[-5.251147],[-4.122632],[-8.615145],[4.192954],[1.117806],[0.927801],[-6.520164],[9.713427],[-0.353246],[-4.347864],[5.967479],[3.344879],[-7.948614],[-0.446274],[-8.724678],[5.190163],[6.156904],[-5.817741],[-9.310409],[-9.235682],[-9.779565],[6.129826],[-4.575709],[9.299490],[6.420594],[-4.050016],[-9.195553],[-2.410394],[8.091701],[8.208562],[2.618259],[5.365153],[9.903980],[1.473264],[8.215757],[0.160318],[5.722931],[1.029383],[7.238338],[-9.574468],[-8.647324],[-8.761330],[-1.154817],[3.974604],[9.195494],[4.146158],[8.682675],[-5.368455],[-4.567675],[-6.497948],[5.869512],[-6.191548],[-4.039730],[-3.520691],[-6.397502],[5.530596],[-5.093786],[9.196084],[-6.864635],[-5.222574],[2.435645],[9.419855],[-0.285912],[8.338707],[9.785322],[2.396863],[-0.459116],[0.511700],[6.371655],[-9.791888],[-1.216415],[-6.345851],[8.244058],[2.278615],[-9.066765],[-6.451354],[3.478930],[-3.843483],[0.856758],[1.295514],[-6.830139],[9.010804],[-7.400858],[2.909821],[6.858047],[0.739134],[4.393856],[-6.449654],[6.075530],[9.376646],[0.790917],[7.460447],[4.611828],[9.754791],[-0.200927],[3.645653],[4.625240],[0.267318],[9.639193],[8.178421],[-8.829933],[-8.209745],[-1.623352],[5.700103],[-6.453712],[4.875015],[-3.386050],[-8.836517],[-5.612815],[-9.466125],[-5.846444],[0.995386],[-7.660366],[5.924749],[-2.166954],[-7.612149],[7.821587],[-8.682590],[0.298782],[7.149155],[-5.612628],[-9.392726],[-7.368737],[-7.765328],[-3.187079],[6.272177],[-0.124981],[-0.587602],[6.825149],[-5.516231],[-0.143118],[-9.543297],[9.380239],[8.615523],[-9.569926],[-1.849089],[9.208863],[0.976335],[-5.450294],[-8.941388],[-3.523457],[1.408375],[0.774107],[-9.147209],[-8.107767],[-0.285352],[3.391189],[-2.039401],[0.177271],[-0.178160],[3.922487],[4.438047],[6.782626],[-5.237654],[-4.617700],[-2.186495],[-1.563194],[-9.526813],[9.351103],[-7.851371],[1.534685],[-7.997040],[1.480221],[-7.712610],[-1.060804],[9.677349],[5.315813],[-6.079282],[5.299506],[-6.625242],[9.978123],[1.545978],[2.692348],[0.025367],[-3.523725],[-5.077552],[-3.646766],[-3.145127],[3.008534],[1.818597],[6.635834],[3.838909],[1.892879],[5.609656],[-0.452956],[-5.617870],[-9.777980],[8.570361],[2.207874],[-0.912051],[-4.911386],[-5.711783],[4.190879],[7.686455],[9.610884],[-5.833279],[6.216200],[6.769662],[8.127734],[2.419139],[8.496840],[-6.747999],[5.512501],[1.295158],[-5.654363],[-9.803935],[-2.659499],[-9.568556],[-1.912590],[-9.187060],[-3.228435],[-9.052992],[1.621038],[-3.634415],[9.562708],[-6.992289],[5.438148],[-6.701810],[8.373079],[-3.202887],[-7.065243],[-0.554194],[2.255430],[-2.294654],[-9.604065],[7.093640],[-0.184282],[-6.799545],[0.269258],[-2.310340],[9.738000],[3.375355],[5.169440],[4.735216],[2.593866],[8.399203],[2.592289],[-9.752122],[-5.641099],[-1.994048],[-6.500107],[0.277986],[1.762549],[-7.884212],[-4.499285],[6.699616],[6.398264],[-0.036172],[1.610718],[5.407642],[6.301114],[-2.896875],[8.997909],[7.069035],[7.612914],[-5.298319],[4.162843],[-5.809739],[-7.095293],[-9.489457],[-0.597993],[-4.452745],[-6.687172],[-1.727884],[-7.078181],[5.267330],[-3.406776],[-1.395411],[-7.573672],[2.863863],[3.959788],[8.716590],[7.207386],[-8.747021],[-6.559316],[-8.798768],[-6.135892],[1.982878],[-3.548034],[-2.436385],[4.126175],[-8.833429],[9.473016],[4.681908],[9.609258],[-2.827196],[2.414513],[5.193913],[0.172026],[-0.951800],[-0.222162],[-4.444506],[7.194354],[-2.942223],[-9.409713],[-9.885533],[-2.594564],[3.759341],[-3.929395],[0.617031],[-2.056372],[-1.519286],[-3.350214],[-0.041688],[0.514280],[2.780901],[-8.862169],[1.378582],[9.212344],[2.554626],[-6.462448],[-0.110516],[-7.855000],[6.178969],[-7.510587],[-3.187508],[-9.524126],[-5.137975],[8.286266],[-3.399381],[1.462801],[-5.874850],[-2.160452],[7.002815],[7.021958],[3.606586],[8.950197],[-3.556502],[8.568996],[-7.970836],[7.573421],[-4.819174],[3.715293],[-7.963367],[-7.044641],[-4.182722],[-9.914371],[2.357037],[-7.315745],[1.046589],[1.433130],[6.304953],[-1.637437],[-4.026330],[1.941465],[9.087645],[-6.613527],[-8.650610],[1.866715],[-2.322486],[-1.409325],[0.389750],[0.263537],[9.778786],[-1.062830],[-1.509335],[0.041423],[-9.295799],[1.858946],[0.781976],[7.061423],[8.911509],[2.721219],[9.873829],[-5.986519],[-7.917875],[-9.293148],[-9.022855],[-9.552568],[7.269782],[-0.696843],[-6.145683],[-6.615150],[9.731811],[5.469746],[-0.132052],[2.464845],[-7.715289],[-0.008088],[6.352426],[6.639203],[6.134125],[-1.084368],[-5.916263],[8.707997],[5.055015],[1.780714],[2.577274],[-1.933217],[1.020762],[9.760565],[-3.304382],[-5.517968],[0.176915],[-2.953443],[3.478809],[-3.827032],[-3.425869],[-7.518521],[9.145510],[-4.731844],[5.860039],[-1.535614],[8.671895],[1.804094],[0.274347],[5.078100],[-1.014064],[-2.541942],[-1.736129],[-8.786191],[4.983412],[-8.144785],[7.747697],[-6.550693],[-1.085971],[0.025973],[-9.229823],[-7.750948],[-9.666351],[-3.032833],[-0.950139],[6.480963],[9.623807],[6.041331],[6.500261],[-0.568108],[-7.467562],[-1.334123],[7.509953],[8.346293],[1.740944],[-6.539514],[-2.006006],[-1.077962],[-0.971349],[-4.192482],[-0.715571],[3.591951],[-8.169783],[9.348180],[9.294712],[-7.426143],[-6.637060],[4.341949],[8.871432],[1.932114],[-1.831073],[-3.246265],[-2.520852],[0.519753],[7.113799],[8.824217],[-0.109506],[-0.529453],[6.076000],[-5.311612],[4.038416],[9.616040],[8.059008],[2.723844],[4.296071],[8.229371],[-5.157838],[-4.202671],[-9.960323],[-7.265896],[-9.219064],[1.041251],[-9.715247],[1.301104],[9.620242],[-7.457183],[-0.612993],[-8.508924],[9.417624],[-2.159190],[-6.173458],[-2.446157],[7.348108],[3.614429],[-4.709453],[9.805728],[-7.370259],[4.796522],[-0.655214],[-8.934516],[-2.723923],[-2.880323],[-0.772237],[-5.262633],[3.439586],[-8.966407],[5.902365],[-2.125097],[-0.701477],[-4.828052],[4.685718],[3.219057],[3.393939],[2.912835],[2.496618],[6.629252],[-6.711923],[-3.739596],[8.097010],[-5.293076],[3.401420],[-5.381397],[9.899213],[0.235524],[8.404665],[1.095976],[3.507243],[-5.130814],[8.173616],[9.734455],[0.614636],[9.887467],[-8.218635],[0.923855],[-8.171801],[-8.269940],[-9.454728],[-8.421482],[-5.917793],[4.660385],[-8.547865],[-1.558223],[4.673450],[-4.387867],[-3.630879],[4.210741],[-2.536784],[-7.511536],[-7.611393],[-0.753392],[4.929738],[-4.408747],[-3.926294],[-7.059618],[-0.684192],[-4.019426],[-7.523155],[7.286155],[6.456235],[-4.156943],[4.381736],[2.418114],[-7.240725],[-4.894777],[4.544440],[-3.964434],[-6.999278],[2.865507],[5.689404],[7.823504],[4.570641],[-9.614883],[-5.630896],[-7.607009],[5.037895],[-3.458169],[-5.771146],[8.309138],[9.423223],[-1.007953],[-7.568384],[8.795515],[8.005207],[4.066832],[-8.229974],[7.576647],[-6.215692],[6.092536],[2.536184],[-8.922044],[3.651579],[3.992420],[7.408346],[-7.171484],[-7.961714],[3.006369],[3.453173],[8.734911],[8.842805],[-7.255715],[9.274169],[-5.155135],[8.585107],[2.153783],[5.165535],[-1.868602],[-4.905172],[-1.020504],[-8.322943],[-4.092711],[0.300320],[0.461316],[-7.337132],[-7.676362],[-2.863772],[-7.404821],[-7.228094],[1.055635],[-6.537376],[-5.906760],[9.282294],[-5.189935],[-6.306650],[3.890088],[-9.894307],[8.250770],[4.272841],[-7.179056],[-5.945318],[-8.809097],[3.461384],[-2.742360],[2.284167],[-0.601821],[-5.933688],[6.099203],[4.424471],[1.643916],[-0.161312],[-8.806508],[-0.639588],[7.041254],[-0.677213],[-4.260669],[-9.882204],[6.258972],[1.259205],[1.524502],[-9.489435],[-2.384799],[-4.906559],[-7.294327],[-8.183033],[2.289819],[-7.825503],[9.959672],[8.977640],[-2.161598],[-4.807668],[-0.414666],[4.083682],[9.096100],[-8.355367],[7.697553],[-9.734933],[3.995091],[8.463868],[-4.953615],[-9.439530],[4.868841],[9.027351],[2.140157],[6.486091],[-2.929965],[-1.449073],[-6.119286],[3.277417],[-5.295882],[-6.045389],[-6.995484],[-0.451648],[3.419863],[1.765000],[8.848503],[8.682039],[-3.439624],[6.246773],[3.503652],[7.258941],[-7.117664],[9.388681],[-7.119826],[-9.763730],[-2.431688],[-4.121075],[4.463388],[-5.856627],[8.553214],[-6.884766],[4.940656],[3.611483],[-0.013040],[-5.666806],[3.857149],[-6.106928],[8.925824],[-8.345268],[-0.416465],[6.962408],[1.864299],[3.515934],[-0.292514],[1.565457],[0.241884],[-4.989989],[6.057866],[-8.217832],[-1.182042],[4.158925],[-5.557389],[6.293901],[1.059201],[4.159050],[8.761238],[-3.924055],[8.865856],[9.501758],[-9.416322],[0.581501],[5.127398],[-8.966303],[8.892630],[-1.750175],[1.340353],[1.023474],[8.471867],[-9.693630],[-3.316876],[-5.711867],[-7.930125],[-8.644894],[-8.578655],[2.952314],[-3.331774],[-9.089064],[-7.508125],[-5.418698],[0.207780],[9.969754],[-6.978210],[3.470781],[8.708792],[7.837665],[5.474671],[8.213481],[-7.313024],[4.138991],[-6.473515],[8.408192],[0.992021],[-3.607468],[2.216674],[6.338389],[3.764994],[1.808989],[9.269305],[-5.309521],[-0.013608],[-7.088987],[3.680426],[8.189511],[5.123028],[0.506573],[7.898867],[-0.788365],[-2.798871],[-5.272976],[8.572407],[7.989534],[-6.017365],[0.593410],[9.467844],[8.915398],[7.208536],[4.120255],[5.598519],[-0.834409],[-4.151509],[-6.195573],[1.605737],[-1.424385],[0.367233],[3.841723],[7.000249],[-3.759385],[0.098224],[4.894013],[4.840453],[0.286783],[7.038530],[9.962316],[9.823628],[4.674929],[6.444370],[-1.723646],[3.977751],[9.096751],[3.503314],[0.265897],[9.900750],[4.175446],[5.905716],[2.764265],[6.487356],[0.298936],[9.702163],[2.753176],[0.401482],[-5.307056],[2.531147],[3.717740],[-3.375600],[3.944515],[4.155994],[-4.790652],[-0.528289],[1.626762],[-1.333307],[-0.293196],[6.108162],[-6.791281],[5.634578],[-3.966215],[2.019307],[7.131716],[8.159960],[7.454911],[3.074444],[9.093636],[5.706285],[5.026593],[8.109599],[-7.045174],[3.349086],[5.798288],[-3.942815],[-7.533048],[-4.577165],[-6.604383],[3.176163],[-1.256193],[-8.207448],[-5.447082],[-0.350491],[-2.941000],[1.064655],[-0.649555],[5.681068],[2.835978],[7.306955],[2.720573],[-3.019037],[4.570475],[-3.713640],[-3.510691],[-5.302195],[-3.632620],[-6.751891],[-4.764053],[0.610633],[8.473970],[8.925291],[1.999329],[-1.245235],[4.880816],[-2.435485],[4.635555],[-2.506591],[9.622207],[6.597282],[4.317420],[-9.999860],[-4.621045],[-4.827696],[2.650657],[-8.402814],[2.911273],[-0.806243],[-1.737348],[5.862771],[3.144258],[-3.054589],[-3.509552],[8.614621],[-2.682872],[-3.129776],[-3.947557],[2.778806],[2.987956],[-3.687493],[7.611382],[8.190722],[-6.885648],[-9.089708],[-6.506950],[-5.261376],[7.444087],[0.944465],[-4.431810],[5.519976],[2.477678],[-7.245536],[-2.202263],[-5.935084],[0.912866],[-9.754980],[3.774401],[5.526605],[-9.168990],[-4.846452],[6.837682],[-6.710236],[-4.459293],[2.118132],[-6.415282],[0.961656],[-1.821126],[-7.573650],[2.464647],[-3.069075],[0.074486],[-7.239957],[2.332441],[-4.471778],[3.232969],[-3.923074],[2.671912],[4.330468],[-3.559240],[-5.608354],[9.625579],[-7.769022],[4.230832],[-9.004413],[-5.105097],[-2.345476],[6.428359],[-4.193731],[-9.454314],[-4.487185],[-3.447048],[3.663866],[4.607743],[5.457887],[3.503405],[3.100479],[5.430255],[-0.085001],[-9.156154],[1.828024],[0.805281],[-7.223135],[-2.679153],[7.261098],[8.051453],[-0.982056],[8.052113],[3.543100],[-3.475874],[-1.420902],[4.212923],[-2.083111],[-0.719467],[8.153799],[4.892041],[7.812751],[-7.589477],[-0.522472],[-4.509631],[-2.013745],[9.122811],[0.154552],[-3.813830],[-8.699520],[1.263061],[-2.345958],[-8.973043],[5.890591],[1.020955],[5.853694],[-5.031466],[4.721876],[-9.799982],[0.975424],[-0.564719],[-6.215821],[2.415426],[-8.887737],[-3.525069],[-9.431024],[9.685137],[-4.290337],[-5.026427],[-1.843182],[7.663513],[-3.057849],[-4.740510],[-2.444650],[6.528422],[-5.488870],[6.128909],[-0.874669],[-4.852996],[-4.297038],[3.402498],[2.259412],[0.701777],[-1.187942],[1.964790],[4.003952],[-5.798364],[-8.440728],[-6.395355],[7.684061],[3.983303],[6.188743],[-6.508651],[7.476750],[-2.736228],[8.254276],[-3.705948],[-7.334355],[9.447248],[9.733675],[-1.969062],[1.185379],[7.576718],[4.518857],[-1.046623],[2.912265],[-8.130498],[7.757218],[-4.376473],[-4.427709],[-9.776243],[-1.091705],[-0.981718],[8.487093],[4.729452],[-5.626328],[9.408728],[-1.096161],[-9.201112],[-7.400264],[-1.968286],[-9.407408],[-0.014521],[7.806609],[-4.906655],[3.994476],[-7.985711],[5.688119],[4.748444],[-6.200145],[-6.924869],[-9.045169],[-8.876891],[-4.346739],[-6.106515],[1.800732],[-7.420576],[-3.498719],[2.698392],[-8.673788],[1.237336],[5.884280],[9.330805],[-1.120252],[6.746403],[-4.754192],[1.062171],[9.858232],[4.021227],[-5.023162],[0.330790],[6.010107],[1.348971],[-4.967327],[0.060417],[-7.232528],[9.737434],[-2.666392],[7.662633],[7.896322],[8.623522],[-5.907489],[-6.898119],[-1.331909],[4.029240],[6.013103],[5.883608],[-9.914313],[-4.996157],[0.253583],[5.589624],[-2.783599],[8.550882],[-2.542251],[4.061729],[7.319991],[1.700874],[-5.094030],[-9.006623],[4.826702],[3.779733],[-4.064336],[8.358634],[-4.771972],[0.398194],[-5.709091],[1.472037],[9.806227],[7.633570],[6.610147],[1.831938],[-9.613556],[-2.727244],[-3.403322],[6.276326],[-6.188793],[6.145967],[2.107094],[-0.770498],[-9.304707],[-4.094284],[-5.191088],[-3.043215],[-3.220168],[2.970256],[-2.548351],[6.211263],[5.818333],[4.317650],[-8.524427],[-0.541791],[-7.158574],[9.234613],[-1.792931],[0.278390],[5.350028],[4.458179],[4.798647],[-9.557462],[-8.425721],[-0.658608],[-7.881457],[5.448860],[7.752364],[-3.278986],[7.568959],[8.853604],[-7.242505],[-3.396909],[-3.592916],[3.092090],[5.909471],[6.255892],[-8.435133],[-3.064544],[-3.480084],[-3.466484],[-1.421276],[-1.897380],[-6.344427],[2.210734],[0.979948],[2.043030],[7.214262],[2.411009],[3.633923],[-0.847546],[6.746309],[-4.962670],[9.823990],[-3.336193],[8.371241],[-0.831747],[-8.664832],[5.283260],[9.698931],[5.082563],[3.855426],[-8.481088],[-4.399182],[-5.514305],[5.171205],[-7.934327],[7.524102],[-4.639452],[5.853644],[-8.755393],[7.971068],[5.249889],[7.035443],[6.679520],[2.372787],[-2.626926],[7.471904],[-9.369627],[-0.616570],[-3.217438],[0.263983],[-9.071464],[6.359984],[1.624165],[-8.320580],[5.437941],[-5.505160],[3.477793],[5.597635],[7.646769],[3.782642],[-8.634755],[-7.855759],[-6.685356],[1.913176],[-0.408720],[6.642007],[7.010898],[-5.251054],[-8.984396],[-8.216495],[-1.408443],[-5.576694],[6.494343],[-5.731111],[-4.268190],[-5.802014],[6.279451],[4.043372],[5.438196],[-2.163203],[7.509661],[-0.499951],[-4.829194],[0.572485],[9.634060],[-8.437200],[8.027430],[-3.843203],[-5.399136],[4.557075],[-8.173137],[1.589808],[-1.242142],[-4.715382],[-2.872882],[-4.876980],[-3.455294],[-5.005231],[3.218732],[1.411433],[-4.880074],[-9.569359],[-6.317894],[-6.156260],[-5.117503],[-9.051204],[5.379694],[-8.074843],[-6.072931],[6.029174],[2.269015],[7.239641],[-7.400020],[-4.255843],[6.601029],[8.086726],[2.123557],[3.208879],[-1.063158],[-9.416588],[7.155091],[4.224702],[9.804371],[8.727966],[-9.749461],[-0.434533],[-1.035704],[-8.179768],[4.797858],[-4.873687],[-3.568388],[-1.136585],[2.756603],[-8.393393],[8.291924],[-2.961270],[1.424349],[8.096949],[0.545687],[-7.996620],[5.664233],[0.649789],[-7.381061],[9.729057],[-7.065140],[6.890319],[5.891752],[-2.013803],[7.011928],[-1.189896],[-3.823050],[-5.583392],[-3.872808],[-6.933581],[-1.289526],[-6.889924],[1.097559],[3.552930],[5.195317],[7.359776],[-5.345889],[-3.563060],[2.489025],[-5.058128],[1.247724],[5.495870],[-0.697250],[3.115186],[-4.868432],[-9.255925],[8.004643],[-7.065173],[3.537159],[-9.218393],[-9.578405],[-7.748731],[-8.972997],[-7.950837]], dtype = "float64")#candidate|6338|(1568, 1)|const|float64
var_6339 = relay.var("var_6339", dtype = "float64", shape = (6,))#candidate|6339|(6,)|var|float64
call_6337 = relay.TupleGetItem(func_6193_call(relay.reshape(const_6338.astype('float64'), [1568,]), relay.reshape(var_6339.astype('float64'), [6,]), ), 4)
call_6340 = relay.TupleGetItem(func_6197_call(relay.reshape(const_6338.astype('float64'), [1568,]), relay.reshape(var_6339.astype('float64'), [6,]), ), 4)
func_176_call = mod.get_global_var('func_176')
func_179_call = mutated_mod.get_global_var('func_179')
var_6365 = relay.var("var_6365", dtype = "uint8", shape = (1800,))#candidate|6365|(1800,)|var|uint8
call_6364 = func_176_call(relay.reshape(var_6365.astype('uint8'), [15, 10, 12]))
call_6366 = func_176_call(relay.reshape(var_6365.astype('uint8'), [15, 10, 12]))
func_5433_call = mod.get_global_var('func_5433')
func_5437_call = mutated_mod.get_global_var('func_5437')
const_6368 = relay.const([3,8,3,4,-4,-4,2,5,-10,6,8,10,-2,1,7,5,7,-3,-5,-6,6,9,-6,7,-7,7,-6,9,5,-10,-8,-4,8,-7,-6,4,-7,-9,-9,-10,1,4,-6,3,-2,6,10,7,9,3,-1,9,-1,-2,9,9,-1,7,-5,-9], dtype = "int64")#candidate|6368|(60,)|const|int64
const_6369 = relay.const([[-6,7,7,7,-5,1,-4,6,10,3],[-9,9,-10,-7,-7,-8,-10,-8,-8,8],[-9,7,4,7,-1,3,-7,10,-3,6],[10,5,-8,6,10,-9,-4,10,8,-2],[-10,-2,9,-4,7,-4,-3,-6,4,9],[5,-10,-4,9,-10,4,-5,-8,-8,-7],[-2,3,-10,8,-10,-7,-7,-6,-1,-3],[-5,2,-3,4,-3,-8,10,10,-2,-5],[7,9,-2,5,1,6,-6,6,1,5],[-1,-8,-6,-2,-9,3,2,10,-1,7],[6,8,4,-3,3,6,1,-4,2,-7],[4,9,-4,-10,-5,-6,10,2,7,-6],[3,4,-8,5,6,-3,4,6,10,-4],[3,-5,-4,-9,-4,3,9,-5,10,8],[-4,6,-10,7,-10,-4,-10,10,-8,7],[3,3,-1,-8,-8,7,-7,9,9,7],[6,-4,2,2,-2,6,-1,7,5,3],[4,-5,-4,10,2,-3,-9,-5,-3,-5],[-6,-10,7,-10,-7,-8,-4,-3,9,2],[-1,8,-5,4,-9,-5,-7,-3,4,-9],[-6,-3,-9,-1,-10,-8,1,2,8,-4],[-3,4,-3,6,-10,-10,1,-1,10,7],[-6,-2,10,4,7,8,8,2,1,-1],[-3,9,6,4,-1,-9,-7,-5,4,8]], dtype = "int64")#candidate|6369|(24, 10)|const|int64
const_6370 = relay.const([[3.797914,-6.029478,-9.153010,3.782392,-5.308420,5.209959,3.097284,-7.666074,9.916799,-2.679036,-9.397245,3.427528,-0.645418,8.971480,5.571656,-4.382601,1.448164,-2.339371,2.511896,6.511768,6.405045,-9.438246,2.275946,-6.470559,-4.506498,4.152445,-8.493723,-1.992913,-3.858152,4.861024,-7.791628,-0.017783,-8.930291,-0.525993,-2.854250,-5.561597,-2.314881,-1.058752,4.445175,-7.228744,8.046583,-5.333210,-7.147068,-7.766028,-1.672622,-5.801817,-4.249009,7.184756,-9.692371,-5.537025,3.150323,-0.630887,7.675759,9.691626,5.046049,-0.236321,-9.116855,-5.729753,3.222567,6.927463,-5.872243,5.597308,-4.718476,-4.832889,-9.939885,0.824403],[1.540401,8.622284,-1.449290,8.626164,-2.916640,-2.665616,-7.117052,2.309456,-1.724444,-2.706738,8.950840,0.538505,-5.153675,-9.924813,-4.722601,-9.424478,7.894337,-1.380061,-6.474138,7.414380,-2.218390,5.479090,2.917114,-4.221855,0.151899,-9.586687,-1.321137,-4.155409,2.875619,1.457555,-8.789942,7.964734,5.722303,3.502312,4.383834,-4.074636,3.195695,6.206999,0.152455,-5.927342,-4.975527,2.552834,-2.717273,1.163313,-5.728437,2.392673,-2.291241,-8.392872,-7.847347,2.215169,-3.299428,4.145193,-2.194051,-8.405043,9.068666,-8.762855,-1.716210,-1.398966,-0.372820,-8.158721,2.277274,5.411029,2.454361,3.371948,-3.046491,1.289624],[4.242893,-9.520052,9.601972,1.429611,6.520535,-8.013258,1.223637,-8.671184,-5.263025,-3.395040,-0.168297,6.923991,4.007441,2.045974,-1.895386,-3.295021,-5.011455,4.792889,-0.487430,-5.066589,-4.812707,4.148848,3.615566,0.554476,-8.405366,8.238752,-3.748992,-6.993623,-1.037590,7.816305,2.689579,-9.378180,-4.530184,1.929791,-3.948802,-1.595860,9.466391,-1.281150,8.234974,-7.589264,2.927150,-5.147163,6.017311,7.335323,-1.818959,-6.523570,-7.293816,2.045322,-8.242057,5.685690,-0.875164,8.706644,6.025102,0.692100,-7.832853,1.925819,4.922975,2.834081,-7.231788,-3.044009,8.541385,-0.864885,4.112879,-3.262727,2.917571,-6.366009],[1.967746,3.134218,4.937351,1.473780,-2.729971,1.798946,-1.091859,-1.732483,2.684483,5.042279,8.450362,9.380522,-6.089280,-7.874366,4.642634,1.649689,1.928211,-8.018709,9.292626,-1.387694,-9.684584,-4.253963,-5.285800,1.869790,3.778411,-2.584890,1.769315,-8.314193,9.165800,2.901242,0.719161,1.904711,3.998770,-0.247459,5.622985,-1.061515,-7.127320,-9.566703,-2.548172,5.946569,-2.308691,-7.448991,3.550761,5.396850,-4.183897,0.945856,-1.531600,-1.866791,-6.878271,-0.826568,6.580279,6.428687,6.779414,-0.746037,-4.446678,-6.330789,7.113139,-2.523136,4.760725,2.906641,-4.426281,9.359032,2.415078,-8.463889,-3.412673,9.637286],[9.494840,-5.738197,-5.138658,-0.187316,-7.417674,3.638004,-7.569741,-8.676636,-3.943976,1.925942,-8.276018,7.330973,-0.123628,-6.917704,-0.371656,-4.085006,-9.517893,8.063612,0.290017,7.230762,-0.905985,6.014553,-6.463220,-8.834508,9.287144,2.137712,-4.382634,8.192698,-2.637075,-1.342391,0.452016,0.592511,0.484657,-7.352615,-3.326456,-4.673231,-5.646826,3.387649,4.584691,6.880288,9.752029,-8.881830,3.117968,-7.139792,5.405618,5.787583,4.736367,6.250378,7.570286,1.178928,4.324104,-3.722154,7.905508,3.191267,5.085724,7.724929,8.805270,-9.840520,4.962640,3.294728,7.521009,7.122287,2.530683,1.183100,-7.044121,-0.523919],[-2.028889,-8.913498,3.885327,-2.902814,-0.028360,2.938897,-0.869002,0.400581,6.970214,-4.735764,4.123574,0.581911,-5.834801,6.911016,-0.917674,9.294791,-5.738672,-4.115322,7.464178,-5.295427,2.239177,9.277169,2.123072,6.624854,2.227502,-3.196072,-8.686813,4.605671,-3.289351,3.003195,2.443208,-7.866132,-5.951159,5.607681,0.103444,-6.045748,3.015742,-7.992928,-7.505693,6.952602,-6.739986,-3.030735,-1.788894,7.454250,-0.550161,8.236359,2.216369,0.887184,-6.682016,1.058318,-4.007119,-7.463721,-4.771694,-1.169020,7.608792,-6.084103,7.106848,-5.395377,9.984952,7.147603,-3.076020,5.310883,-8.068909,-8.215223,6.437281,-3.200160],[0.520244,3.132469,-2.075370,-8.085154,-9.088225,4.186695,6.790385,0.588790,1.170851,-9.546686,5.736942,-1.702117,-3.779073,-2.742593,-6.787230,4.413808,-6.567150,7.042958,-2.969182,-9.267560,9.196319,9.744690,3.911361,4.767747,4.505418,-7.130724,3.070992,-9.178090,6.494698,8.715784,0.184882,9.682963,1.131985,-1.124595,-7.773912,-5.312355,-1.772966,-5.852356,-4.873310,4.286454,3.655913,-8.588590,-0.837807,-2.945988,-4.862584,5.825076,-2.866694,4.278674,-8.753103,-1.567193,-2.189606,-8.734518,-5.087997,-7.038681,-0.519935,-9.248995,5.321125,-7.509456,1.379396,-5.405687,-3.287637,2.152502,-5.200957,-9.197035,7.962765,-2.914122],[-7.862536,-6.810957,0.351227,8.165942,-4.860548,-0.774489,2.497131,6.687848,4.101021,-0.417575,-5.414631,5.398487,-0.364621,5.144297,-1.033056,9.206895,-3.523536,0.897793,-4.398663,6.910466,-0.829223,-2.385308,-1.710923,-4.093619,5.323212,9.433754,-2.460839,0.941590,-2.892948,-5.953097,-9.763973,7.301880,-9.257447,-6.764912,-3.886905,0.953087,0.543223,-9.613226,-4.912894,-9.976473,1.399956,1.956917,-6.420382,-6.998514,7.515391,9.098458,-7.347013,-3.743745,2.995519,4.070428,-4.654378,-9.135572,-1.615675,9.756857,1.119851,8.797392,4.428852,-9.225687,7.271591,-2.954241,-1.595023,-6.247031,8.991451,6.404272,4.848225,-6.278327],[9.592562,-1.846208,1.496441,-5.928025,5.042356,3.933498,-3.523917,-7.146195,-6.224236,-9.637326,-9.857207,8.274703,0.366118,-3.662127,5.589236,-8.347095,4.046588,-3.743423,-3.338716,9.770979,-7.698312,-1.857926,-1.237710,-0.739312,-6.850979,5.509181,2.883558,-2.889434,8.877036,-0.715992,6.550924,-6.904312,1.459096,3.838606,2.224998,0.382421,6.322975,4.343089,-8.715105,-9.227953,-9.832525,9.378581,-6.007746,6.691946,-9.846161,-8.503944,-2.068680,-6.173683,2.211448,-6.104742,-8.776738,0.327553,9.518048,4.920465,-6.313906,-9.005617,-3.052680,9.990769,9.023064,-0.248537,-9.412799,4.395926,1.489650,-1.461757,3.012246,-3.696819],[-5.840495,3.395070,-0.760734,2.656412,-7.985183,5.489657,8.665907,7.788787,2.362981,-7.681854,-1.827783,4.502444,3.892402,3.462521,-3.386869,-1.250272,1.241455,-1.503375,-1.209512,-7.634821,-5.499013,0.916560,-7.475562,-8.222286,0.605519,4.569818,4.735875,5.684048,-9.576260,3.078593,-7.546655,6.350517,-7.162895,3.077264,5.006644,6.091221,-8.811565,0.407737,-1.535780,-5.311625,-6.993587,2.722718,-9.982913,-4.252342,1.139652,2.077475,7.173162,3.883737,1.353604,8.125035,1.817168,-5.349591,4.898344,-9.049239,1.625185,5.567409,8.765511,8.039684,-8.819615,-7.033261,-9.711802,2.052000,0.586398,0.954094,-0.840063,9.602087],[2.761011,2.608836,-3.252621,-2.316992,-2.346864,5.076173,4.021246,-9.535088,3.426217,9.250080,-4.656083,8.697005,-1.951442,-4.490274,1.568762,-8.288254,8.068301,-7.847317,3.019953,-2.616063,-5.641528,9.196280,-2.297633,8.322082,8.403943,3.008269,-7.510096,5.843973,6.992129,0.255614,9.280870,-0.586910,8.314693,-9.758373,8.077001,-7.181954,2.100122,1.140034,9.120414,7.501857,-8.663580,8.199416,8.454525,0.256267,-3.444939,-3.142302,-3.187472,0.210793,4.248904,-4.021892,-2.796575,-4.763048,9.778831,4.575098,4.781648,2.054057,-7.290068,-7.692058,5.618221,-6.264996,-8.651728,4.826104,4.547947,-8.310246,6.672729,-0.322967],[5.070919,8.098949,-8.299886,-6.505191,9.535933,2.670981,-3.489858,9.654714,7.815680,2.153012,-3.592387,-1.697599,4.428473,-9.781160,-1.154755,-3.709163,-7.476288,-1.668346,9.468061,-9.431656,-8.478915,-8.370691,6.487560,-9.382526,6.669624,-1.332879,-6.717360,-9.460164,0.366691,-2.990583,0.073197,6.111246,-7.466953,-2.801923,-4.221943,-3.796713,9.392167,1.048629,3.761932,4.227724,-9.943899,-1.734688,3.278889,-7.109316,-6.522588,-8.473232,-8.038763,0.766679,4.089825,-3.769670,-1.164965,-6.965450,8.425213,-6.552462,5.777935,4.087248,9.454055,-0.768838,-6.608127,7.259803,-2.457785,-3.870614,8.194210,1.356937,-9.552677,3.066851],[4.388259,-1.718267,3.941030,2.546934,-9.795511,-1.291255,-1.708397,-8.353641,-7.995763,1.061395,3.128859,2.091770,0.071159,8.148067,-3.760550,-9.792436,-5.727448,-8.654081,8.458612,-1.242715,-3.475892,0.491998,-4.983617,-4.653925,2.620213,3.855408,8.759252,-6.634792,6.741362,-0.526003,-1.287844,2.638026,3.282752,-9.413309,7.112125,9.585268,-7.169403,3.304017,-4.080311,4.119630,8.451916,9.614668,6.712403,-9.221937,1.524797,-5.181294,9.008510,2.618307,0.465005,-7.372486,-0.847451,-2.821700,-2.995703,2.017211,9.494874,4.233903,4.696819,-9.509583,-7.346538,-5.665655,2.509792,3.747348,-7.333321,-4.151267,-8.615733,9.782974],[-4.805286,6.626991,0.616142,1.976456,3.933318,6.512814,9.787206,1.842366,-4.958746,-7.165557,-7.814436,8.486530,-0.454129,-5.726232,-7.992603,8.368130,-6.862427,6.428440,-3.400671,-1.567320,5.079043,-5.228290,4.912807,-1.081715,0.148688,-1.598892,-0.771989,0.661706,2.373622,-7.401226,2.877920,-0.814603,-7.096970,0.742859,-7.450671,8.695408,5.632148,1.242827,0.203804,0.387508,-1.010609,4.647302,6.672238,5.435452,-1.185198,-0.928804,0.934435,4.861492,-7.825490,-1.061054,2.521306,8.924048,-8.709840,2.764034,-0.128214,-2.805191,-4.432285,-9.924504,-2.433335,-6.326270,4.180466,-3.374919,3.040452,-8.802587,-6.191692,0.583746]], dtype = "float64")#candidate|6370|(14, 66)|const|float64
call_6367 = relay.TupleGetItem(func_5433_call(relay.reshape(const_6368.astype('int64'), [1, 15, 4]), relay.reshape(const_6369.astype('int64'), [4, 15, 4]), relay.reshape(const_6370.astype('float64'), [924,]), ), 4)
call_6371 = relay.TupleGetItem(func_5437_call(relay.reshape(const_6368.astype('int64'), [1, 15, 4]), relay.reshape(const_6369.astype('int64'), [4, 15, 4]), relay.reshape(const_6370.astype('float64'), [924,]), ), 4)
func_6055_call = mod.get_global_var('func_6055')
func_6056_call = mutated_mod.get_global_var('func_6056')
call_6372 = func_6055_call()
call_6373 = func_6055_call()
func_5433_call = mod.get_global_var('func_5433')
func_5437_call = mutated_mod.get_global_var('func_5437')
call_6376 = relay.TupleGetItem(func_5433_call(relay.reshape(const_6368.astype('int64'), [1, 15, 4]), relay.reshape(const_6369.astype('int64'), [4, 15, 4]), relay.reshape(const_6370.astype('float64'), [924,]), ), 0)
call_6377 = relay.TupleGetItem(func_5437_call(relay.reshape(const_6368.astype('int64'), [1, 15, 4]), relay.reshape(const_6369.astype('int64'), [4, 15, 4]), relay.reshape(const_6370.astype('float64'), [924,]), ), 0)
output = relay.Tuple([call_6334,call_6337,const_6338,var_6339,call_6364,var_6365,call_6367,const_6368,const_6369,const_6370,call_6372,call_6376,])
output2 = relay.Tuple([call_6335,call_6340,const_6338,var_6339,call_6366,var_6365,call_6371,const_6368,const_6369,const_6370,call_6373,call_6377,])
func_6379 = relay.Function([var_6339,var_6365,], output)
mod['func_6379'] = func_6379
mod = relay.transform.InferType()(mod)
mutated_mod['func_6379'] = func_6379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6379_call = mutated_mod.get_global_var('func_6379')
var_6381 = relay.var("var_6381", dtype = "float64", shape = (6,))#candidate|6381|(6,)|var|float64
var_6382 = relay.var("var_6382", dtype = "uint8", shape = (1800,))#candidate|6382|(1800,)|var|uint8
call_6380 = func_6379_call(var_6381,var_6382,)
output = call_6380
func_6383 = relay.Function([var_6381,var_6382,], output)
mutated_mod['func_6383'] = func_6383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6098_call = mod.get_global_var('func_6098')
func_6099_call = mutated_mod.get_global_var('func_6099')
call_6414 = func_6098_call()
call_6415 = func_6098_call()
func_4828_call = mod.get_global_var('func_4828')
func_4831_call = mutated_mod.get_global_var('func_4831')
const_6417 = relay.const([-9.653608,-6.424747,4.868873,-5.749357,2.084806,4.497280,9.704308,0.793592,4.593867,2.359434,-4.190097,8.256637,-6.398674,-5.550856,-3.092998,-1.687528,-4.488837,9.091427,8.914330,7.997558,9.378999,9.021384,-3.590030,9.001428,7.525287,1.829197,-5.801871,4.633480,-9.926836,6.701459,9.599912,3.133617,-0.334375,-8.097848,7.708271,-2.821471,-8.987985,5.013723,-0.729124,-8.257581,2.175292,0.451721,-0.834771,-8.087337,2.331820,-4.386193,0.332366,-6.901015,-3.129594,2.746402,1.157081,-8.903807,0.921675,-9.929499,-3.730745,9.609889,-9.871111,6.527396,5.952232,-8.581852,8.320286,-6.962831,-4.279357,9.816536,1.279344,-2.534926,-1.862574,-4.308160,-3.413376,-9.549272,-1.250847,-8.551516,-5.153613,4.431320,3.969160,-5.201825,-5.221854,5.856673,-7.730318,2.816287,0.845650,-3.900255,-0.005196,3.604617,6.885884,4.980970,8.452407,-1.449359,-4.974297,-9.857529,5.510602,-0.979384,0.020840,5.922669,-4.253637,2.408236,-5.547126,-5.142541,-0.378637,-6.863641,5.727605,7.448159,1.523551,-2.518173,-4.297819,-9.963889,-5.018516,1.304168,-6.942760,3.507730,-8.842860,5.607269,-8.284986,2.288733,7.538090,-8.827578,-0.407417,-8.009412,2.120963,2.380287,2.869464,-3.108841,-2.322068,2.796178,-0.510932,-2.970752,9.744092,0.891975,1.648384,-1.614095,-9.330345,9.817013,1.023119,6.170717,-0.573953,-9.831715,-0.554239,5.339778,-8.976450,4.484408,1.949738,4.815218,2.424321,-4.044089,-0.167494,-9.686930,7.402163,8.272799,3.062717,-5.751795,1.192776,3.629795,7.082069,-2.072907,7.925694,-4.146106,8.815743,0.450365,-5.795474,8.635280,-0.526153,-2.281974,8.365938,-0.354822,-7.065854,0.064051,6.361402,5.039368,3.955268,2.956335,7.503257,-7.164317,2.837698,-6.864905,1.519865,-1.378225,7.664508,-3.790978,-7.093493,9.204530,5.200600,-3.523398,6.836292,0.952581,-1.209708,4.574088,-7.198086,-0.377984,9.445601,4.648916,4.623240,-9.744418,-2.771214,4.355491,-0.004235,8.659506,3.905516,-0.864541,0.761594,-4.725768,-2.814695,-4.308969,9.848413,4.277801,1.116119,7.614833,-9.837007,7.443390,-6.653630,-5.701505,3.580979,-2.526264,8.998400,7.108513,-4.494476,-2.734479,5.061685,4.710291,-9.294171,1.055228,-2.998988,-7.049471,-5.834982,1.699737,-7.705081,3.296126,-4.178394,1.250878,0.439927,-2.462635,-2.892827,-0.201496,0.610012,-5.850878,-7.767075,8.865309,-3.982937,-9.488299,3.677733,-3.801679,6.745706,2.977740,7.620009,9.665609,9.037122,8.304753,1.975329,7.082300,9.900942,-2.631047,6.856276,-9.688126,6.083900,2.638376,0.391280,-8.132496,6.092585,-5.186161,-7.501757,5.050436,9.801954,4.245493,9.739814,-2.342823,-8.673049,-8.021374,-3.603457,-2.295655,1.594778,1.342897,5.534258,3.263254,5.012461,8.261757,-3.197827,-8.303562,5.355797,-8.176842,-8.791099,-6.373416,2.377097,7.811817,2.927429,6.201236,8.643100,6.853253,-0.656049,3.518044,-8.418197,-3.740599,-3.934050,7.984949,-8.754417,-6.513157,-5.610839,-9.137428,4.732975,7.272701,3.892967,-6.826564,6.228629,4.400986,-5.480046,-6.190248,7.300525,7.746814,0.076803,-2.022354,-1.008943,-7.905933,0.203982,-5.877045,-8.405780,6.180855,-3.652544,-1.503194,-8.467232,-4.126752,1.880288,4.993543,2.574007,-3.363566,6.630414,-1.430461,2.639714,-0.454840,8.076317,4.174201,6.639712,5.492526,-6.150884,9.216015,2.406304,-7.981740,-4.125226,-4.691364,-9.946006,-8.145512,1.589295,-9.446454,-0.475644,9.816474,0.827779,4.910232,5.127778,6.069807,6.676833,-5.360548,-8.294564,4.051491,3.266711,-3.664477,-9.187626,7.986288,9.581397,-3.309881,5.166039,-5.091047,-0.643998,1.558488,-5.167027,-0.663261,3.958400,6.191296,4.151085,8.689798,-8.882406,-4.991084,-1.537321,-4.025356,0.294168,1.945523,-6.172304,-5.637567,-4.623443,-3.206422,-8.828962,-4.413584,-9.036889,8.560388,-8.574854,-4.510077,-9.917205,7.721749,-2.261296,-7.135786,-8.014831,-8.527188,2.237572,2.719874,-1.389262,7.312866,-8.252730,5.282205,5.623401,-4.584519,3.531466,-3.631186,-3.787308,-5.577714,0.507149,-9.089824,7.977231,-8.538467,2.724813,-2.276455,8.230319,-4.327581,2.348037,-0.026992,-4.720535,-3.428324,6.875525,3.660628,-0.302421,5.915632,0.307144,8.415478,-2.362111,6.538494,8.290467,-5.389788,7.418268,3.119381,-5.574923,3.880705,-1.945876,-3.102808,-2.185155,2.679795,3.764464,-3.095765,6.175589,1.724188,2.748594,1.750038,-4.820640,-1.553549,3.765131,-2.820081,4.382438,-2.949863,4.976680,-6.170750,9.652600,-4.019470,-9.261259,4.675097,-5.669997,8.416409,0.991331,8.307436,-1.143088,-3.126023,2.125604,6.722537,-4.341364,-3.066407,-6.271151,-3.872315,9.147623,0.764712,8.687547,0.864879,7.002756,-2.593165,9.431543,5.660710,6.733196,4.438385,-9.099267,3.046594,5.776599,5.872371,-8.723396,7.920937,-4.311325,8.535491,0.924614,-6.423991,-4.588147,4.915722,-3.395589,8.003323,-9.388498,-0.971397,-8.067037,-5.201456,8.908351,5.065635,0.225424,5.346530,8.125921,5.138051,7.600779,-9.830668,-5.144835,-8.280783,-2.008650,-6.559557,-8.136478,9.198759,5.203816,-3.652529,2.524239,-9.004421,-0.003998,2.534655,2.708007,-9.481554,-7.776586,-2.671133,7.515740,6.126920,-4.733814,-6.992187,-3.751381,1.928450,4.352305,-0.399623,-2.046032,3.449511,5.055104,-1.581283,-2.640313,0.343132,9.711220,6.790117,-9.248906,-6.112738,5.608688,-3.611133,9.724405,4.309930,7.019982,7.444411,-0.739512,4.061658,3.157811,-4.923270,-5.541019,-6.139535,7.706160,-8.893954,-7.087446,2.942314,-8.395962,5.560658,7.487332,-6.686450,6.536515,-7.448004,4.209114,2.080270,-7.774709,-4.677034,9.084723,-0.060093,-2.914696,2.708436,-9.203126,-5.271327,-1.615483,-8.511406,-1.036161,-4.162206,-0.903397,-1.771842,-1.713896,6.946839,6.267548,-1.505239,-7.284224,-9.141212,4.927544,-4.124847,-7.308494,-7.624925,-5.945717,-9.421286,-1.848661,-0.674405,-7.531883,-4.698367,-1.438339,1.571870,1.406215,7.311511,-8.244758,-3.264198,6.721370,9.847219,-7.269301,-5.348196,-8.475348,4.640085,4.999661,-6.087537,-0.132301,1.264728,-1.442520,2.446046,-4.653331,4.082791,-4.897828,-1.937007,-9.883729,5.756039,-2.576219,-2.861583,-0.462148,1.641399,6.683005,6.766729,-3.018121,2.140951,8.213655,-6.299311,4.255584,2.488164,4.317477,6.951578,3.379514,-7.617489,-7.264327,1.660835,4.600228,-6.532094,-9.997343,-2.079047,-8.097241,0.225780,-1.453607,7.698309,9.261872,7.755174,8.035051,1.093679,4.568086,-2.461097,-1.437061,5.434433,-0.294354,-6.070339,9.322058,4.375821,-1.431713,-4.528511,-5.546945,-7.528272,-7.097178,-6.487122,-9.165253,-0.716409,-1.413652,5.938825,-4.108051,-6.609407,9.336919,1.389572,6.218690,-4.596365,1.410195,2.116693,4.001866,-9.222986,3.703557,3.387017,-2.847311,-2.976475,-1.811403,4.104130,-8.570450,4.161565,-3.513269,-2.428824,0.675649,-2.864607,9.441150,-7.872103,9.223500,-3.833723,3.528973,7.691563,-6.056266,-1.399573,0.326678,2.797733,9.445572,8.593943,-3.843793,-5.649267,0.737145,-3.980070,-2.079387,2.717876,1.688223,-9.119009,9.194025,-8.867130,1.960525,-1.000221,-1.555607,-0.194724,-8.753256,-6.013300,-8.457142,-7.738883,8.715880,-4.518752,7.550948,0.360693,-8.221171,8.887915,2.885311,3.973697,3.633693,-1.113725,3.000855,6.766336,-9.524263,-9.538526,-3.098579,-3.568184,-3.420236,8.695070,-5.060412,-3.986995,3.694984,-0.477867,-9.379405,5.410294,2.831486,1.295091,4.937559,-5.503243,-0.431006,-0.940577,4.594912,-6.062102,9.308400,6.339039,3.464779,-1.856460,-9.630282,8.863867,-2.890028,-7.596036,-7.399030,7.683377,-2.606726,-2.122512,-9.341256,-8.155215,2.459268,4.174043,-1.485303,8.529629,4.712247,-8.923910,-1.430281,-7.050748,0.822193,7.984840,-9.949800,0.186895,-6.068722,-2.096318,-9.546828,5.818079,9.117129,-7.593339,4.829005,0.097495,-0.550558,-1.245920,-5.482553,1.713474,8.034210,3.271687,8.016140,7.947284,-5.870342,2.750385,-0.101859,1.632885,2.972492,8.041776,9.101242,8.623038,1.274517,-8.184294,-9.293457,7.823157,-4.907915,-0.573426,9.778970,-9.956482,3.660798,-3.579018,-3.896808,0.524813,6.249937,-0.835623,-1.124644,-9.281711,-4.433188,8.325762,8.239716,-9.374439,6.534727,3.043651,-2.504432,0.679808,8.271415,5.793701,8.567999,-3.349964,-4.927980,0.731595,-4.293569,-8.855523,-6.227234,-6.019051,-3.861148,-5.845746,2.413241,-4.823819,0.713846,8.861401,9.183861,-8.163270,9.980143,9.627979,7.135110,-6.786135,2.862431,-7.217375,-8.792174,0.023136,-6.964605,8.981512,3.173632,7.118007,7.512996,-9.927927,-1.245709,8.544699,3.063098,2.061239,3.762167,-3.246467,-4.456296,-8.979819,4.172458,1.953827,3.114445,6.018694,-2.224862,9.875141,9.298057,-0.821419,-1.724785,-6.431639,-3.307250,6.756829,6.535837,-3.430873,-8.454699,4.793864,-2.818872,7.170020,6.299952,7.466488,-7.216070,4.245140,-0.676007,9.617395,1.258821,-4.076809,3.698555,4.384219,4.532311,-3.435167,-2.249252,-2.624023,-8.755047,4.272634,-0.261629,5.598940,4.717578,0.604253,-2.937633,7.853104,-1.890177,2.301838,9.261355,-7.508238,0.831228,-6.322836,-3.965172,-3.413917,9.206783,-8.603025,-5.153776,-6.203823,-9.831539,8.826191,-6.931551,-3.017251,-3.067327,-9.165688,-6.115036,7.938076,0.937563,-3.414586,-7.690894,-5.071678,-9.380860,0.877841,-5.196334,-7.088842,1.830909,1.131966,-5.423571,-8.446312,6.908771,-7.136665,-0.301235,7.746821,-0.441386,9.863066,4.100182,-2.797495,4.127590,-6.926171,0.970936,-3.325421,1.862966,-3.226421,-7.447738,-7.048306,6.133189,3.428849,-2.097082,5.518485,-7.005327,6.330797,-9.867732,0.147979,-1.319709,4.393138,8.854525,-9.715131,2.812808,-5.330716,-2.845019,3.896670,-4.539624,6.248744,-6.682732,5.295568,9.066453,-4.315962,-6.375189,0.431516,0.360737,-0.239528,7.390441,3.820384,6.045933,-8.462890,8.611395,6.747845,-7.565255,-7.282004,1.317927,-7.518411,2.558260,-3.370085,-0.523415,-5.827267,-6.031029,-7.618003,8.776354,-5.638791,-8.374683,-2.326458,-2.111736,4.625507,-8.184159,3.293812,4.291257,3.941707,-8.516106,-5.186979,8.470827,2.551863,8.488064,6.438708,5.908621,8.468336,-9.391571,5.244773,5.258453,-6.516400,5.892648,7.284636,8.499402,6.189901,-9.802207,-0.124442,-6.786214,7.849079,-3.308591,-3.563130,-3.144194,6.447685,-2.096708,6.353693,9.267631,9.093349,-3.186401,3.526279,0.861390,7.356380,-3.388388,-3.422133,1.947609,-6.825020,-9.505017,-0.886136,-5.948883,-1.735752,-5.003945,-7.303135,8.607058,-0.403712,-0.050530,2.599551,-8.510514,5.121435,-4.592562,0.885373,3.855161,5.645002,7.955841,-9.238245,5.197648,-6.894388,-3.791981,6.058098,-6.404568,7.631619,7.430996,5.642626,-3.772147,-7.075954,-5.966334,-5.582274,5.479721,6.363125,9.108895,-2.990427,-5.095906,5.745748,5.202826,-0.848086,-8.381454,-7.532350,-4.789092,-2.304007,-6.732876,-6.115106,-8.006986,-8.434750,-0.170979,-6.624086,6.832907,7.991552], dtype = "float32")#candidate|6417|(1080,)|const|float32
call_6416 = func_4828_call(relay.reshape(const_6417.astype('float32'), [9, 12, 10]))
call_6418 = func_4828_call(relay.reshape(const_6417.astype('float32'), [9, 12, 10]))
bop_6434 = relay.bitwise_or(call_6416.astype('uint8'), relay.reshape(const_6417.astype('uint8'), relay.shape_of(call_6416))) # shape=(9, 12, 10)
bop_6437 = relay.bitwise_or(call_6418.astype('uint8'), relay.reshape(const_6417.astype('uint8'), relay.shape_of(call_6418))) # shape=(9, 12, 10)
func_884_call = mod.get_global_var('func_884')
func_887_call = mutated_mod.get_global_var('func_887')
const_6443 = relay.const([6,1,-9,-4,1,-3,10,-10,7,-2,-7,-8,-8,4,-2,-7,8,-8,6,-7,-5,7,2,-10,9,1,-10,2,9,2,-2,-10,10,5,-7,-10,5,-8,7,9,10,1,-10,-8,9,-8,10,1,-5,-3,-1,7,-10,-4,-4,2,-2,4,6,-8,-1,-5,-6,10,-3,4,-5,1,-7,-2,-7,-3,-7,-10,10,-7,-8,-3,-9,6,5,7,2,-3,2,-7,10,-9,-10,10,-10,-2,-9,3,-7,9,10,10,-1,-10,-10,3,1,-7,-2,-3,-3,-1,8,-8,4,7,-3,-7,-1,9,-7,1,4,-1,6,9,6,10,5,-3,7,-4,-8,-5,9,10,4,-6,-1,5,10,7,-5,4,-6,8,6,4,-2,-2,-10,-6,6,-3,10,6,-5,8,9,9,-8,9,-8,7,-9,-10,3,-3,10,8,7,10,7,3,9,-1,8,10,-4,-5,-5,-2,-5,-9,-5,6,3,6,-3,7,-1,-10,10,-5,6,7,-7,2,-8,-8,2,-6,2,-6,-1,9,-1,8,-9,-6,-5,6,4,5,-3,-4,8,9,-2,-5,7,-2,4,-10,5,6,8,3,2,-5,-2,9,1,-10,-4,-5,-2,9,-8,-7,-4,-2,-6,6,2,4,-10,-6,4,3,2,1,4,-9,1,-5,10,-9,4,-8,-9,-2,7,10,-3,-1,3,-8,2,-1,-3,7,-6,10,4,-6,-2,1,-6,3,8,-2,-4,7,-8,-8,-7,-4,3,-2,-4,9,-9,-5,5,-4,-2,1,-9,-1,-9,9,5,-6,9,-7,-8,-9,1,4,4,7,4,-1,8,-1,-2,-10,4,-7,-6,6,-3,5,-2,7,4,-1,2,5,-3,-7,-7,-4,-3,-3,-7,6,-7,3,-7,5,-6,2,-6,10,-3,6,3,2,1,6,-8,8,-1,-5,3,2,4,-9,-2,10,5,-7,6,-4,-5,-4,3,8,-3,2,1,-7,-7,5,-5,-5,3,-1,-1,7,-7,9,-5,4,10,-5,-10,-5,-9,8,-5,6,-5,8,-2,-2,-8,-9], dtype = "int8")#candidate|6443|(396,)|const|int8
call_6442 = func_884_call(relay.reshape(const_6443.astype('int8'), [6, 11, 6]))
call_6444 = func_884_call(relay.reshape(const_6443.astype('int8'), [6, 11, 6]))
func_5376_call = mod.get_global_var('func_5376')
func_5378_call = mutated_mod.get_global_var('func_5378')
const_6448 = relay.const([-8.916937,-7.719309,1.395245,-2.737661,9.402970,-0.863535,-7.848957,8.573070,8.814729,-3.991793,-0.279588,4.795995,4.133279,4.375694,-8.831645,-1.869726,9.790405,5.402897,0.458672,-9.437516,-5.407605,-9.316124,-7.910724,1.295673,8.432986,-2.942976,-8.847804,-5.891078,-5.918578,-9.208852,-5.402262,-4.170618,3.941026,-7.022301,7.631558,-8.615218,2.947742,-4.574564,-7.532319,-4.083515,4.901461,1.517686,-8.921410,-4.627494,0.186934,6.451461,6.557085,-6.117174,7.994890,6.227717,7.899498,-5.543113,6.274624,-8.331203,-8.396411,1.747520,-7.008584,9.975689,-8.481569,8.362882,9.766132,9.857114,-1.585682,0.835046,-7.280212,-1.887501,-6.469689,2.811453,6.298959,1.140472,-6.352824,-5.641371,1.977108,8.943921,3.002725,-4.036436,7.195451,9.387136,5.633735,4.142797,-0.629599,0.631648,-2.157468,-5.552553,4.753038,4.022560,-1.103271,-4.305693,-0.367336,7.246814,-4.438998,-7.876597,9.175293,-3.956821,-0.491131,-5.838331,3.163633,-2.955780,-2.680626,-8.749622,-8.361635,5.938828,6.168752,8.970513,6.644556,1.396705,-2.073226,3.525998,0.467250,-4.908001,7.654051,-6.512981,-2.064295,-9.141072,4.177418,-6.929025,5.626051,-7.519524,3.275605,-1.866470,-0.005993,2.496998,3.831623,-4.377497,-0.488391,-6.805762,-8.529323,-5.965838,1.882127,5.330585,8.695655,8.003802,-0.226574,6.455013,2.026826,-8.434634,3.357265,-1.740384,6.327913,-3.475639,3.301108,8.527098,5.493410,-4.550824,6.356997,-9.857984,-8.170714,7.461425,4.752779,-3.571139,-4.508105,1.482110,-3.150664,-0.515045,-3.595468,4.894569,1.814162,9.458787,7.105312,-4.503969,-7.227429,9.554232,-9.593635,9.026885,-0.717692,-5.735093,-0.889271,-1.867798,0.215823,-9.520129,7.904175,1.172163,0.949693,-7.740483,-6.174809,9.384717,3.943926,1.501419,5.988888,0.130737,6.594821,-3.439520,3.007530,-8.607458,1.502139,1.256223,3.540920,9.142226,4.306443,6.438647,-4.287779,-5.619709,4.816025,7.226714,-9.973047,-6.693694,-1.701271,-1.062933,-4.467490,-7.415059,9.061218,-2.417263,-0.584731,4.413970,9.766490,-2.361764,1.270600,0.735025,-5.835248,2.038134,-0.120213,-9.447299,-8.621053,-8.058942,-2.098533,-8.647000,-8.363403,-8.000527,8.428493,5.108918,-9.118098,-9.441369,-3.936736,-5.195309,4.794853,-6.567958,-3.035157,-3.696314,3.389394,4.712945,-3.698750,5.428387,-2.915110,6.230255,-9.901601,6.468673,-9.159119,-2.880692,6.646320,-1.879357,0.131139,-3.973333,4.179122,-0.229392,-1.693063,-4.343999,-4.719432,0.332455,5.116380,-7.965218,4.698135,-2.444366,1.400069,9.271019,-9.334221,4.918490,-0.166473,2.850976,3.752454,-2.567429,6.336568,-5.929079,-1.736720,-7.075676,-5.662206,8.676584,-3.057224,-7.413352,8.973349,4.187469,8.213624,9.262730,-5.504943,2.187108,-9.635500,5.015560,9.653358,8.950986,-3.893413,1.345636,-7.356431,-4.183662,5.621105,5.866228,-0.079315,-9.400518,5.714737,7.424103,-3.322301,5.079528,-0.396055,-5.804344,-6.165290,-4.050664,2.142357,-0.196482,-6.283706,6.538749,1.507504,-4.953938,8.863610,9.452028,-0.949040,-1.381231,5.300938,-2.579023,5.284021,1.857540,-5.293058,-7.130796,-9.935738,-6.731003,5.323073,-8.782891,-8.117700,3.681615,3.162065,-3.065738,0.818861,-1.448311,7.725856,8.792241,0.865823,-8.475352,-0.600578,4.019684,2.298732,3.797497,1.050746,5.700545,0.709350,1.404003,6.989956,-5.648000,5.603143,-7.926920,5.956942,7.157412,-7.783674,1.708613,-1.997198,7.495239,-8.412526,-3.478789,-3.997587,1.266958,-1.657695,-1.973452,-6.225890,7.607741,7.029253,-2.812156,3.649564,7.774048,-5.451720,-9.283465,-0.460915,-5.429531,-9.638026,-9.134233,0.473739,-3.158911,3.113160,2.947932,-3.139114,4.608373,-6.131325,-8.335939,9.941383,-1.168908,-9.522208,-3.802202,-0.616820,6.441328,9.740338,-7.731870,8.506226,7.241030,7.509389,1.910591,5.788525,-7.132112,-8.644507,3.009052,-3.633938,4.830690,-0.537137,6.421516,5.281969,7.025026,1.548101,8.260039,5.618481,3.458126,8.432963,-8.070391,1.572117,4.594320,5.196609,8.128672,-6.272013,5.299982,-4.797320,7.297682,8.853374,-0.888188,-5.905458,-1.368489,-0.692227,4.601807,-9.681499,-7.525906,-4.009121,9.533687,-0.629176,7.598729,-9.408097,2.508147,-3.610869,-7.247057,-7.387574,-6.372779,-6.020380,-5.053504,-5.820336,-0.032317,0.261458,-3.141647,-9.371594,1.100085,-3.852952,1.899381,1.683548,8.757560,-0.605257,-7.805518,-4.029795,5.269458,6.487976,-7.230385,9.256945,-6.811336,2.976252,-2.947182,-2.900652,0.868125,2.834476,2.129027], dtype = "float32")#candidate|6448|(448,)|const|float32
call_6447 = relay.TupleGetItem(func_5376_call(relay.reshape(const_6448.astype('float32'), [8, 14, 4])), 0)
call_6449 = relay.TupleGetItem(func_5378_call(relay.reshape(const_6448.astype('float32'), [8, 14, 4])), 0)
output = relay.Tuple([call_6414,bop_6434,call_6442,const_6443,call_6447,const_6448,])
output2 = relay.Tuple([call_6415,bop_6437,call_6444,const_6443,call_6449,const_6448,])
func_6463 = relay.Function([], output)
mod['func_6463'] = func_6463
mod = relay.transform.InferType()(mod)
mutated_mod['func_6463'] = func_6463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6463_call = mutated_mod.get_global_var('func_6463')
call_6464 = func_6463_call()
output = call_6464
func_6465 = relay.Function([], output)
mutated_mod['func_6465'] = func_6465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5718_call = mod.get_global_var('func_5718')
func_5719_call = mutated_mod.get_global_var('func_5719')
call_6483 = relay.TupleGetItem(func_5718_call(), 2)
call_6484 = relay.TupleGetItem(func_5719_call(), 2)
func_6098_call = mod.get_global_var('func_6098')
func_6099_call = mutated_mod.get_global_var('func_6099')
call_6495 = func_6098_call()
call_6496 = func_6098_call()
output = relay.Tuple([call_6483,call_6495,])
output2 = relay.Tuple([call_6484,call_6496,])
func_6498 = relay.Function([], output)
mod['func_6498'] = func_6498
mod = relay.transform.InferType()(mod)
output = func_6498()
func_6499 = relay.Function([], output)
mutated_mod['func_6499'] = func_6499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6098_call = mod.get_global_var('func_6098')
func_6099_call = mutated_mod.get_global_var('func_6099')
call_6547 = func_6098_call()
call_6548 = func_6098_call()
func_1929_call = mod.get_global_var('func_1929')
func_1932_call = mutated_mod.get_global_var('func_1932')
var_6552 = relay.var("var_6552", dtype = "float64", shape = (6,))#candidate|6552|(6,)|var|float64
call_6551 = relay.TupleGetItem(func_1929_call(relay.reshape(var_6552.astype('float64'), [1, 2, 3])), 0)
call_6553 = relay.TupleGetItem(func_1932_call(relay.reshape(var_6552.astype('float64'), [1, 2, 3])), 0)
func_3535_call = mod.get_global_var('func_3535')
func_3537_call = mutated_mod.get_global_var('func_3537')
const_6568 = relay.const([[-1.702793,-2.774493],[2.611672,-0.958982],[-4.436305,-0.241869],[-8.756837,9.822407],[-6.215856,4.184262],[-3.058591,-3.573503],[0.020198,4.959030],[-5.212230,-2.986416],[-2.773297,1.890698],[-0.773541,-7.499455],[2.706743,-4.634356],[5.536236,3.267518],[-0.962666,-1.775522],[-3.523027,7.042970],[-2.658779,6.776970],[7.002436,8.899222],[-8.940051,1.065971],[-1.376260,-7.662803],[2.517397,2.428091],[-4.828961,-5.419373],[4.577372,0.985871],[8.993388,-4.573924],[0.241589,8.909496],[0.917021,-0.595927],[6.926086,-0.871808],[-2.080727,5.118154],[5.622094,-9.373618],[9.854528,-8.639629],[1.545003,-0.715511],[9.768271,-8.282807],[-9.430398,5.712309],[-6.865817,-5.070033],[8.082477,-2.783382],[6.261758,9.641068],[-7.501219,-5.364733],[-6.150569,1.071435],[4.108068,6.352827],[-8.382437,3.106678],[3.902097,-3.752208],[9.164040,6.248725],[8.557185,-2.002854],[8.353696,-6.914564],[3.702369,-5.936222],[7.783268,2.047960],[5.410783,3.306795],[-3.221514,4.211635],[5.992656,5.367817],[-4.684658,-9.818024],[-0.701908,-1.260001],[-8.672429,-4.069914],[9.698906,-3.729227],[-7.873907,5.728548],[-2.785051,1.126165],[-0.607731,-2.483998],[-5.914774,-4.712307],[-5.751016,-0.771072],[4.532449,-5.725827],[8.099381,3.008752],[9.027684,-4.709223],[6.028897,-7.114303],[-1.934764,-4.671037],[-5.223614,0.671500],[-2.105999,2.488311],[-7.206998,-1.332515],[-4.783122,1.262773],[7.425054,-8.025774],[-9.366992,-5.470675],[3.987241,8.756304],[-9.041367,-8.161126],[-3.827485,4.915417],[4.233479,7.325886],[-5.499128,0.968288],[2.464486,6.768054],[5.796207,3.203771],[-9.130042,7.237199],[-0.557262,9.581765],[-8.513471,1.963376],[9.170961,3.468545],[5.991745,-9.553150],[-9.290803,-2.997985],[5.372718,-9.902938],[-9.731940,-2.544345],[5.316764,-9.251812],[5.153276,-5.402880],[7.386900,-2.855307],[-0.314790,7.674420],[7.630891,-6.065259],[6.711083,8.474572],[-7.176845,7.930982],[5.387329,8.706508],[3.008628,6.077124],[1.017766,-5.001904],[8.712450,-2.060038],[-5.237700,-1.789869],[3.932142,-6.096008],[7.759530,1.657985],[8.103108,-0.043686],[1.122233,-8.377532],[4.772629,6.113329],[4.435563,3.453117],[-5.462524,1.875284],[0.762576,-4.831083],[-9.561181,5.899935],[-8.840512,5.321634],[7.378261,7.601895],[9.764643,7.881469],[8.650964,5.626902],[-2.829016,7.931537],[-3.491249,-0.180676],[-6.572639,6.585647],[9.038574,2.059901],[7.572509,6.726568],[-5.735098,0.653828],[-7.087719,2.410217],[2.497174,9.176526],[7.442949,9.633236],[4.518093,-4.999707],[-9.390774,-5.425472],[-2.273069,-7.951199],[-5.658835,4.608973],[-0.760140,-9.502809],[5.981671,-7.643635],[-3.078450,5.566513],[-7.995483,-4.868397],[-3.197893,-3.272395],[-9.381155,-1.958258],[-1.847854,-6.296208],[-8.361867,9.705561],[9.482602,-4.633268],[0.882578,6.575014],[-0.927444,-9.576900],[0.637498,-4.246600],[0.484596,7.346861],[7.627472,-4.083282],[-7.927877,-9.609102],[-9.213556,0.958222],[5.970551,2.212032],[-0.163763,-5.740028],[3.290551,6.392825],[0.397561,-7.908918],[-1.490369,-7.479814],[8.306005,8.796707],[-6.308357,-3.910507],[-1.406051,-1.674117],[6.590512,-9.480811],[-0.845666,-7.676515],[1.568476,6.760447],[1.976251,4.751365],[1.958372,6.927235],[6.052141,-2.858026],[-4.801442,-8.026030],[-0.103485,-9.091208],[-4.957723,2.949539],[-1.366436,-0.950377],[4.972657,-2.416326],[2.979258,2.599945],[-8.545075,3.594983],[9.410894,7.766353],[7.216959,-3.617508],[-7.190977,2.123352],[-4.439233,4.043081],[4.726288,-8.346907],[6.214364,6.849849],[5.613210,8.259845],[-4.458638,1.288082],[-2.258112,8.057290],[-5.701264,5.115013],[9.883763,-8.658452]], dtype = "float64")#candidate|6568|(168, 2)|const|float64
call_6567 = func_3535_call(relay.reshape(const_6568.astype('float64'), [14, 8, 3]))
call_6569 = func_3535_call(relay.reshape(const_6568.astype('float64'), [14, 8, 3]))
output = relay.Tuple([call_6547,call_6551,var_6552,call_6567,const_6568,])
output2 = relay.Tuple([call_6548,call_6553,var_6552,call_6569,const_6568,])
func_6570 = relay.Function([var_6552,], output)
mod['func_6570'] = func_6570
mod = relay.transform.InferType()(mod)
var_6571 = relay.var("var_6571", dtype = "float64", shape = (6,))#candidate|6571|(6,)|var|float64
output = func_6570(var_6571)
func_6572 = relay.Function([var_6571], output)
mutated_mod['func_6572'] = func_6572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6055_call = mod.get_global_var('func_6055')
func_6056_call = mutated_mod.get_global_var('func_6056')
call_6627 = func_6055_call()
call_6628 = func_6055_call()
output = relay.Tuple([call_6627,])
output2 = relay.Tuple([call_6628,])
func_6632 = relay.Function([], output)
mod['func_6632'] = func_6632
mod = relay.transform.InferType()(mod)
output = func_6632()
func_6633 = relay.Function([], output)
mutated_mod['func_6633'] = func_6633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6098_call = mod.get_global_var('func_6098')
func_6099_call = mutated_mod.get_global_var('func_6099')
call_6655 = func_6098_call()
call_6656 = func_6098_call()
func_884_call = mod.get_global_var('func_884')
func_887_call = mutated_mod.get_global_var('func_887')
const_6665 = relay.const([-9,-10,-7,-9,7,-7,2,9,-10,5,-7,-8,-9,-5,10,-3,-6,-4,-1,-9,8,7,8,2,-10,-10,7,-10,-7,-7,4,8,2,10,-4,4,-7,-3,-5,-4,2,-4,2,-5,6,9,-3,9,-10,9,-9,7,-3,2,-7,-5,-10,8,-10,4,7,7,2,-5,6,-6,8,1,-4,-1,9,10,4,5,4,-9,5,-1,1,-9,10,2,-1,-1,-5,-7,-8,-8,-6,-6,4,-1,3,-8,-8,1,-4,-7,-5,-1,-1,-9,-5,3,1,4,-9,4,7,-8,9,-2,-2,10,-7,10,-1,-1,7,10,7,3,10,-10,9,1,-7,3,-4,-9,-7,-3,9,5,-9,-1,-10,4,2,-9,10,-1,5,-8,-8,-1,7,3,7,-1,-4,3,-7,-6,-9,-3,4,-7,7,-7,-4,2,-10,5,-5,-4,-9,5,-1,8,-7,-2,5,10,-7,-9,-7,2,7,5,-4,-3,5,2,8,-10,10,-7,-1,7,6,-1,-10,-10,-2,1,5,10,1,-8,1,5,9,-6,-9,-10,-2,7,6,1,6,4,5,1,-6,-4,-8,10,-8,-10,3,3,-3,-7,2,4,9,7,-2,7,-1,8,-9,7,-9,6,8,-7,-2,7,2,9,-1,-5,-9,2,-3,-9,1,2,4,-9,-7,-3,-3,-2,4,-6,8,-8,6,-6,2,-3,-3,2,3,2,-10,-9,-5,-7,2,4,7,-8,-3,1,-2,-8,-7,4,2,2,-9,4,-3,5,-4,-7,10,-1,-10,8,-7,6,-5,-6,4,-8,10,-1,2,-8,4,9,-1,-8,-5,2,5,5,-8,-8,8,7,9,-1,-3,-1,-6,-2,-1,1,-9,7,3,-3,-3,-3,-8,-9,10,9,-2,-2,-9,9,-7,7,3,9,5,7,4,1,2,-8,-3,-10,5,5,-6,-7,3,10,-9,-2,-2,2,-8,-7,-4,-5,-10,-10,-6,-1,9,7,4,-8,6,-5,6,4,4,-4,-6,3,-5,3,10,-4,-3,-1,-6,-10,-8,1,-4,-7,8,-7,4,10], dtype = "int8")#candidate|6665|(396,)|const|int8
call_6664 = func_884_call(relay.reshape(const_6665.astype('int8'), [6, 11, 6]))
call_6666 = func_884_call(relay.reshape(const_6665.astype('int8'), [6, 11, 6]))
output = relay.Tuple([call_6655,call_6664,const_6665,])
output2 = relay.Tuple([call_6656,call_6666,const_6665,])
func_6689 = relay.Function([], output)
mod['func_6689'] = func_6689
mod = relay.transform.InferType()(mod)
mutated_mod['func_6689'] = func_6689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6689_call = mutated_mod.get_global_var('func_6689')
call_6690 = func_6689_call()
output = call_6690
func_6691 = relay.Function([], output)
mutated_mod['func_6691'] = func_6691
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6697 = relay.var("var_6697", dtype = "float64", shape = (8, 12, 10))#candidate|6697|(8, 12, 10)|var|float64
uop_6698 = relay.log10(var_6697.astype('float64')) # shape=(8, 12, 10)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_6701 = relay.TupleGetItem(func_5675_call(), 2)
call_6702 = relay.TupleGetItem(func_5677_call(), 2)
output = relay.Tuple([uop_6698,call_6701,])
output2 = relay.Tuple([uop_6698,call_6702,])
func_6703 = relay.Function([var_6697,], output)
mod['func_6703'] = func_6703
mod = relay.transform.InferType()(mod)
mutated_mod['func_6703'] = func_6703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6704 = relay.var("var_6704", dtype = "float64", shape = (8, 12, 10))#candidate|6704|(8, 12, 10)|var|float64
func_6703_call = mutated_mod.get_global_var('func_6703')
call_6705 = func_6703_call(var_6704)
output = call_6705
func_6706 = relay.Function([var_6704], output)
mutated_mod['func_6706'] = func_6706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_6721 = relay.TupleGetItem(func_5675_call(), 2)
call_6722 = relay.TupleGetItem(func_5677_call(), 2)
output = relay.Tuple([call_6721,])
output2 = relay.Tuple([call_6722,])
func_6725 = relay.Function([], output)
mod['func_6725'] = func_6725
mod = relay.transform.InferType()(mod)
mutated_mod['func_6725'] = func_6725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mutated_mod.get_global_var('func_6725')
call_6726 = func_6725_call()
output = call_6726
func_6727 = relay.Function([], output)
mutated_mod['func_6727'] = func_6727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6145_call = mod.get_global_var('func_6145')
func_6146_call = mutated_mod.get_global_var('func_6146')
call_6755 = relay.TupleGetItem(func_6145_call(), 0)
call_6756 = relay.TupleGetItem(func_6146_call(), 0)
output = relay.Tuple([call_6755,])
output2 = relay.Tuple([call_6756,])
func_6757 = relay.Function([], output)
mod['func_6757'] = func_6757
mod = relay.transform.InferType()(mod)
output = func_6757()
func_6758 = relay.Function([], output)
mutated_mod['func_6758'] = func_6758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6463_call = mod.get_global_var('func_6463')
func_6465_call = mutated_mod.get_global_var('func_6465')
call_6782 = relay.TupleGetItem(func_6463_call(), 4)
call_6783 = relay.TupleGetItem(func_6465_call(), 4)
output = call_6782
output2 = call_6783
func_6785 = relay.Function([], output)
mod['func_6785'] = func_6785
mod = relay.transform.InferType()(mod)
output = func_6785()
func_6786 = relay.Function([], output)
mutated_mod['func_6786'] = func_6786
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6829 = relay.const([[[3.710767,-0.900875,8.458119,-2.868344,0.996953,-6.668087,-0.184903,7.467748,9.670003],[-4.560337,-9.358293,1.407692,-0.602018,5.576885,-3.160466,5.230037,-4.779171,-6.856861],[-7.186708,3.168769,-7.053337,9.515672,-3.209002,3.628052,-4.971773,-2.705470,-6.575841],[7.311851,6.985492,-3.370019,4.153023,3.030505,-1.537488,-1.621497,2.742418,-0.076857],[6.435087,-8.002873,5.680516,2.716099,6.874123,-8.982656,-7.170539,-3.517535,9.749302],[3.443854,9.496088,-3.270658,-5.791892,-8.899367,1.802941,8.452814,-3.754294,-9.816944],[1.353315,-1.601041,-1.454604,5.049578,-6.556198,-2.953692,-6.453275,4.439201,-3.151204],[7.386455,-9.770072,-7.926270,1.069946,-3.813572,8.374977,3.859752,3.579875,7.929049],[-1.637111,-9.185302,2.302960,-0.290216,-7.404707,8.904826,-9.778273,-4.801079,-1.306522],[-1.304780,-1.418410,8.563656,4.985072,9.877780,-3.206224,-6.486650,7.721552,-2.128291],[7.087900,-9.654337,-9.993058,4.975612,6.780002,0.288372,-5.210939,7.201228,-0.202342],[7.633114,5.665037,-4.266647,2.190371,-2.231780,0.105983,6.145492,-8.413773,2.672553],[1.437200,3.143267,-7.901450,-4.897492,-9.648467,6.489287,1.027747,-4.954726,1.687640],[-5.707670,-4.949172,4.453489,1.534618,-8.404023,0.081663,-5.720447,-0.009914,2.752222],[-8.717378,-0.856616,2.075415,-6.102742,-9.908669,1.403465,0.737269,-3.190777,-2.974790]],[[-1.914652,1.388085,6.848112,-2.902569,4.188887,6.805779,8.554021,6.856319,-4.295078],[0.154514,7.031839,-0.809998,-8.909996,-8.208234,7.559784,-3.670467,7.942411,-9.708754],[-3.123885,-8.310801,-5.115284,-8.515579,-6.436759,9.124867,-1.801174,3.295879,-8.211472],[-3.980486,0.915844,4.189328,-6.045251,-2.462025,6.210090,-6.300799,5.109184,-7.019311],[6.201774,6.498963,-0.134926,-8.877604,-9.083888,-5.170824,2.808749,8.489440,0.807630],[1.117403,-9.651945,5.783496,9.662761,-4.125725,7.969769,-6.473668,5.345558,-9.710218],[-4.654765,1.221019,-0.300143,4.611892,-2.970971,-5.779443,9.736191,2.834847,-0.016952],[-9.170587,0.646858,-3.493417,1.508791,1.326168,5.884852,-6.843760,-7.314587,-1.368736],[9.463897,7.535688,-8.104662,9.378644,2.776214,0.833102,-4.142123,5.235585,-3.580966],[-7.206893,-9.965511,5.878844,8.581686,6.558919,0.861982,-7.080602,1.010129,-9.082167],[6.226473,-3.591726,8.622840,-8.315842,7.450280,7.305493,-2.950336,8.321965,5.336920],[-1.762752,-6.653575,-5.580696,3.253441,-4.989597,-8.589943,-6.559267,-0.323059,5.275203],[-6.622936,3.734664,0.499384,-9.153162,-9.389003,6.735151,-0.839840,-5.570396,6.892089],[-9.329053,5.055781,-0.500781,9.244704,-9.932247,9.085000,9.874992,1.537103,5.841509],[3.104649,-0.686027,9.338073,5.250189,1.641820,-9.189071,9.513063,1.978262,5.339858]],[[-1.020824,-6.870429,-2.280553,-3.572788,-7.990294,6.198392,8.354811,1.568642,-3.223380],[2.641262,-1.329400,-4.564317,6.515294,6.541176,-7.948759,-7.635820,6.472074,1.541341],[-3.115702,-7.762453,-8.935210,-8.807654,-7.817255,1.369026,-9.543162,7.773084,-4.998504],[4.612770,6.151404,-8.666745,4.868391,-7.073159,-2.226285,1.161286,-1.592041,3.142717],[1.399242,-7.996556,9.310647,-4.005867,-1.721686,-6.320257,3.867205,-6.207707,-3.549217],[9.849054,-3.690450,-2.681742,3.857377,9.988743,3.405543,-6.246025,7.269362,8.790247],[3.917462,-1.640995,7.551793,-6.418281,6.129323,7.831145,8.371718,0.680142,-4.542974],[-4.394945,2.475934,2.111194,-6.298575,7.806616,-5.736196,-4.975297,8.640500,6.850215],[7.682098,7.860087,6.112156,-5.470974,9.520801,-5.340437,-6.818590,-0.112776,-5.493729],[-4.744333,8.843062,-4.611780,-4.570901,5.359560,-7.808626,-6.818323,-5.929753,-8.308211],[-4.833933,9.196382,-5.809371,-3.890355,-8.874490,9.114110,-0.833067,-2.826758,7.479261],[-5.694505,4.586711,3.339760,-0.511001,-1.970334,-3.831640,-3.900117,1.697564,-2.714289],[7.458681,-8.185514,7.971199,9.372850,-6.723318,-0.838820,-8.267995,5.264139,-5.362689],[6.520453,5.021027,-5.492234,-7.828627,-0.935297,-1.624800,-6.551393,3.413626,0.684693],[-6.713118,0.322097,-5.066097,-3.384454,-2.525414,0.632020,7.519019,5.661305,-2.655263]],[[-5.485626,0.338071,-2.917574,1.619924,6.627560,-6.693271,-5.021259,0.944387,8.008999],[7.537277,9.419857,8.325108,-4.624290,8.309913,7.121737,4.013481,1.169375,2.387486],[-0.201613,-9.531810,0.357242,4.098111,3.144189,9.537601,-9.166646,-4.952786,-4.249426],[-0.291733,-4.987360,2.550939,3.709318,6.034617,5.989821,6.927994,-3.410907,9.674151],[-0.771326,9.334576,-3.483894,-1.500478,3.332538,-0.223201,-1.518652,-3.480937,-1.915792],[1.064289,3.592012,-9.795065,6.626857,-2.786386,2.237113,1.269231,-1.576565,5.571925],[-0.953797,-4.791565,2.044334,8.807189,8.331699,-9.842340,0.647693,-5.348940,2.224629],[5.892601,-7.085815,-9.200625,-2.860244,4.764984,-7.921267,0.416047,-9.869969,-3.439393],[-9.063646,4.161294,8.288234,8.208621,5.585072,8.125946,4.694872,7.076115,7.508561],[1.636169,-2.260451,-0.953580,-4.943008,6.146248,5.243866,-9.388915,7.757885,-3.381812],[0.493484,-3.856336,8.285661,7.050711,-9.490463,-6.576302,-6.091743,1.255901,-2.670767],[0.028804,8.168725,7.601462,-8.323942,-6.875965,0.797088,9.670366,8.416688,-2.451455],[6.244328,8.150359,-5.573892,1.319050,8.601009,1.800082,4.161601,-6.781469,2.402587],[3.785421,8.966547,-3.279072,-9.888460,-0.379161,6.339494,-5.264594,-2.349784,-6.837318],[2.777217,-3.050758,8.993795,-8.146371,-0.670125,3.883320,-8.105602,-6.850207,2.602184]],[[4.516907,-6.259963,1.876858,-9.472284,-1.606039,6.423746,4.128340,3.125237,2.902479],[-3.497027,2.962149,7.011132,-7.624434,7.222117,4.388363,1.655914,7.741498,-7.353781],[4.586404,-5.927307,-6.871435,6.700180,6.992295,3.635959,5.818869,-1.755807,-6.808219],[8.725596,-9.194661,2.449394,9.129874,-2.831517,-0.483790,5.469627,7.246630,-6.067268],[6.631050,1.658906,-4.698126,-2.132339,-7.403998,-3.546645,-4.981651,-2.926277,-5.382786],[-0.231846,-3.043875,-1.121421,-0.685413,1.900495,-9.844834,1.467282,4.232861,-7.996484],[1.065822,8.622286,5.269203,-4.656449,8.678642,-3.223397,6.198544,-4.982647,8.332247],[-6.447843,-2.280054,9.377407,0.870880,4.091335,-0.985455,-3.935749,-4.487834,0.061416],[4.559106,9.937754,-3.197114,7.926677,-4.578450,-0.191153,-7.602734,7.986068,-1.907873],[3.892931,7.614520,-8.703316,-8.529433,9.199046,-9.722402,9.372671,2.083777,-2.391735],[-4.816190,6.729808,2.352242,4.473875,-3.004272,6.624844,2.004655,8.424034,4.969850],[-9.644733,-1.030444,-0.470225,7.314521,8.944147,-4.706511,-6.300144,5.091290,3.872290],[6.920649,-0.916020,-6.696474,-8.081721,4.827683,-7.262373,9.138457,-0.294432,9.618826],[-4.839507,-9.860331,4.342084,-1.568687,-2.148985,0.778195,-2.886670,-5.995269,-1.298791],[-0.924482,-8.998311,-8.868577,-3.821284,-5.940890,-1.175010,4.854724,-4.727139,-3.009789]],[[-9.139571,3.847309,-4.530619,4.197917,-5.502194,5.994243,-7.795375,9.336299,3.546336],[8.242634,-7.075335,3.484067,0.836351,2.723835,-3.398992,1.250362,-0.936489,0.945420],[1.571951,-2.201641,-4.230339,6.361224,7.302152,-4.019052,-1.997105,2.389227,9.414534],[7.953914,8.786483,-9.053218,-8.447143,5.216749,-0.676411,3.936788,9.230394,8.355786],[-9.698885,-5.778500,-7.823071,-9.056321,-9.010720,9.685281,-7.576068,1.407504,6.302887],[-6.001190,7.949437,0.525782,-6.286416,-7.083887,-5.784620,-7.873261,-3.207577,-7.967518],[1.860031,1.916187,-0.797207,0.374907,-8.450344,9.538998,-8.261611,6.809512,5.893033],[9.901982,-4.865744,1.974390,-9.606802,7.726731,-4.254151,6.165176,-5.706687,3.027825],[4.459757,-5.169790,8.492140,7.400753,7.081215,-1.011867,3.743895,-5.671194,3.968555],[-3.872262,6.727606,-8.705647,-7.186199,2.032260,-0.079929,8.927838,0.065262,2.718804],[9.255921,-2.827405,-5.460754,0.836929,6.234672,8.304606,8.280981,-7.165811,7.602623],[-9.053058,-4.129960,-8.703103,7.853761,-1.285488,7.589860,2.245860,-6.813416,6.252872],[-6.755145,5.294730,1.376370,-0.762065,-1.710161,8.947759,6.643797,7.143931,-7.772542],[7.647177,-9.485570,-8.796790,6.833799,-0.595199,-9.487868,-0.650598,7.103586,-1.689565],[-5.749288,8.096216,4.781764,-4.832189,5.025881,-3.308751,-2.333667,3.141793,7.751306]],[[-8.099299,0.014512,-7.420793,7.081628,6.853211,-3.928251,6.511624,-2.970954,-1.814436],[7.756494,7.107162,-9.276856,-2.797534,3.351261,2.085385,-2.599018,8.903104,6.052340],[7.143584,0.037167,3.891834,-2.615338,-1.765349,3.117464,-4.266334,-9.549687,6.854461],[7.565035,1.768365,5.922337,8.472699,-4.286720,-8.752335,-5.324653,-2.727471,-4.987019],[-4.001152,-9.446135,2.927302,2.563526,2.090533,8.482121,-0.144428,-8.086863,4.071937],[2.604657,3.386186,-6.363107,8.604898,5.679277,-5.067694,9.560311,-5.381943,3.564017],[2.182176,7.173901,-0.334063,-8.959529,1.120498,-5.685266,-1.644572,4.577804,-1.652326],[9.298268,9.447580,0.303758,-7.388794,-7.252795,2.593172,1.664405,-4.623435,5.627774],[4.210523,3.765766,-4.384325,-7.806616,0.859723,9.789035,4.818764,7.948988,1.193846],[-7.489093,1.689374,9.977229,-3.617952,-4.729041,9.426418,-7.893452,5.384531,-1.888200],[2.455915,-7.835825,-4.208370,-2.741408,4.837258,-2.504731,1.211943,-6.478182,3.982371],[1.715563,-0.181647,-9.098077,3.666524,5.331341,1.068596,-8.854332,-4.366907,1.347783],[-4.054424,-0.544716,-9.960192,1.060416,4.113389,-6.617465,3.549898,-9.959278,6.399295],[5.659622,4.928312,6.779327,-7.006561,-2.625554,1.161881,-8.100642,0.357318,8.806442],[0.249364,3.271022,-1.412874,-2.599252,0.091634,-1.340988,0.005306,8.431209,-1.664797]],[[7.609550,6.748339,5.361041,-1.309418,-0.154339,-8.425859,0.031812,-9.306184,-0.978891],[-4.787532,-1.481133,0.413135,0.081788,9.070745,-1.502908,8.487002,-8.483906,2.290090],[9.181331,2.841554,7.981030,4.378301,-1.105176,-8.794800,2.296326,1.140184,-6.162664],[-7.084741,5.321062,2.554654,3.148775,-3.202835,6.760200,9.688720,0.801293,-7.226539],[-2.483328,2.101390,-7.095366,6.350151,-3.028682,6.767794,0.744712,-2.780384,9.702875],[-1.675324,0.352913,2.378269,-5.415420,9.121448,0.726604,1.008874,-7.533196,-9.791989],[-6.992302,-8.016548,-0.145053,7.311441,8.807259,6.131719,8.408413,9.515639,-2.489832],[3.186579,8.164486,-8.226241,6.305171,-3.681007,-7.541773,-4.203456,-3.777813,8.628461],[-3.192828,-4.272212,1.613288,4.844980,-7.148419,2.088615,4.583636,8.875813,4.787105],[5.456440,9.831587,-9.276136,3.241299,-0.052480,1.599952,-9.024503,1.521084,9.937789],[-3.663797,3.553365,9.966656,9.525536,-8.896628,9.800233,-5.344831,-8.410350,-2.232328],[9.868935,5.572733,4.271538,-1.366191,-3.408055,4.750015,-9.549804,-8.043876,-4.428289],[-1.471674,-4.808124,-2.048763,-3.056490,0.873104,6.116846,-7.888243,6.014327,-1.629010],[-7.477275,-6.870960,-1.377574,5.936276,-6.975880,9.210645,7.698316,-0.403975,-0.213285],[-9.767357,-6.425514,3.787387,8.707276,-6.384111,4.590617,-7.385681,7.610869,-5.732959]],[[-5.059214,-4.153381,-7.184928,3.602387,9.558540,8.808763,-8.945672,6.623041,9.971441],[-7.888087,-2.601618,3.157284,-1.633373,0.278297,1.626193,4.015477,8.506290,-3.055543],[1.282858,-0.844857,8.690330,-5.095739,4.944378,-0.924406,-5.623239,6.853322,-5.983437],[-5.401817,-0.317663,-8.435417,-9.987646,6.890954,-3.902185,9.626208,4.875602,-9.223295],[6.839049,0.182901,-6.693422,-5.136511,-0.553567,8.894285,-2.666257,7.859423,-3.649273],[-8.095026,-2.554496,-8.190945,9.938489,-9.207668,9.045519,-1.445365,-8.360573,0.834544],[0.448131,0.311049,-0.840534,-8.742939,3.914926,6.918012,-0.101179,-5.486598,-8.526782],[8.428094,-0.440944,-7.760981,-6.298469,-8.725810,-4.571568,-7.175581,3.633633,-3.153424],[-3.161266,3.946833,-1.061282,4.528059,-4.791599,9.829422,4.979228,1.542090,2.024623],[6.301956,-9.859484,-1.834019,-9.375343,-0.131144,-7.923596,2.866085,-4.280661,-3.817324],[1.171414,5.373134,2.926604,-8.994359,6.223372,-4.222863,-0.705777,-4.081852,-9.285460],[2.996450,8.525160,-0.777541,-5.231923,5.687017,-5.015335,-5.784720,2.149152,-5.956026],[-6.552938,7.819207,-1.738984,-4.118042,-4.803879,8.815992,4.694599,8.919484,-6.570586],[3.147597,1.177105,2.523721,-7.418275,3.784029,0.180945,9.475476,7.213217,2.220234],[-3.641477,-8.814605,3.944501,0.695823,-5.086759,4.559439,4.248513,-9.201841,4.138710]],[[-0.682190,6.245401,-4.405750,5.890396,-9.144082,-6.652990,-2.022975,-8.438197,9.010523],[-9.952629,-9.168681,1.614046,-1.481364,-1.486561,5.344162,-2.415150,-3.219122,-7.651624],[6.930187,-8.450159,-1.400340,4.435550,0.323686,8.187341,3.433679,-1.485968,-3.238600],[-9.081308,-7.984235,3.313752,-6.570660,8.996249,7.345108,3.425866,-0.232172,1.441686],[8.889873,4.714079,-4.388598,9.176505,9.391534,9.069902,-4.883276,-8.078254,9.533366],[-2.430981,4.959840,-1.215459,7.208022,3.592616,1.405679,-2.479886,-0.257779,4.453716],[-3.955305,-6.916198,-7.975756,-0.257891,8.975948,6.932174,-1.386252,2.390333,-7.464247],[6.039995,8.919529,3.909199,6.950995,5.130724,2.715727,-8.928585,-8.305452,4.580762],[-1.295873,4.089068,-8.190612,-4.134003,-2.513170,4.516875,1.754817,7.047353,0.699434],[6.278234,-0.882434,-7.604367,-5.133437,-1.186483,-3.492250,4.293194,6.474660,-1.411093],[-3.592602,-7.711550,-1.164188,2.732736,-8.558020,7.460670,7.267091,-7.422183,8.396984],[3.631304,3.504507,-6.348041,-2.607787,5.229595,-8.665766,1.829339,-3.209392,-1.981267],[0.134446,6.830021,-3.488525,-3.281086,2.283491,9.391762,5.013779,-1.264023,-3.325095],[-3.053964,7.256540,-6.564608,-9.453546,-5.949185,-5.311550,3.236898,-5.292876,7.297672],[6.582945,-1.620597,2.214902,-0.206176,-7.972639,3.772060,9.674945,7.850097,5.872670]],[[8.034574,-3.506916,2.084610,-7.338971,-0.740702,8.880552,5.340285,7.239250,6.500739],[3.015849,-5.895710,3.987986,6.823036,4.301103,8.608588,-7.823408,-8.757504,-3.416638],[1.725900,5.147370,5.404433,-2.547669,0.020249,-2.522616,-0.644101,-9.612023,7.250177],[-2.502587,2.425643,-3.340065,3.438407,8.858223,2.422233,8.553695,-7.154511,-3.091256],[4.389755,-2.707802,5.700761,2.042135,-0.845954,-5.779330,2.439225,-1.447639,-0.852932],[2.055224,-1.579272,-4.314907,-1.974106,-7.431429,-4.170690,-7.777067,0.127737,-2.653071],[3.968908,-9.518431,-6.384329,-5.643020,-9.563862,-7.687909,0.223513,-6.828029,-2.328130],[4.344188,-4.721634,6.571641,-2.118453,-5.042415,-8.276983,-4.476209,-1.323841,5.793548],[8.177070,3.423005,2.613181,1.763236,8.875388,-1.250036,-9.642890,9.676033,9.956602],[0.041716,-9.681726,-3.103467,-5.060967,6.364475,4.551443,7.859930,-5.180518,-8.293758],[-2.711783,-0.548960,8.023755,3.457263,-4.271490,-1.657003,0.516515,7.773917,1.779580],[-8.658917,5.469885,9.821006,2.928631,8.232794,3.193214,0.577241,7.652302,7.026111],[-1.489052,-4.966722,9.473572,-2.856447,-2.390823,3.166268,5.107540,-4.223038,3.004596],[-9.022788,-3.067662,-0.680029,6.209143,-9.148567,7.330177,-4.406397,-4.118182,-4.453651],[7.520573,7.929050,-8.695485,-9.119702,-9.999936,-6.203955,-5.967444,-5.993325,5.948894]],[[-2.824595,-4.176089,1.374120,-9.518939,3.704002,8.796835,7.036400,0.906494,-3.183013],[1.082045,2.596354,1.756729,3.892440,-0.143739,6.580585,-8.351785,6.095955,-1.374612],[-1.954501,-2.008853,3.799258,0.362108,-0.047308,1.339386,-9.340882,3.748608,2.468596],[-9.051146,-8.666988,-2.080889,-1.652021,4.646689,-7.806927,-0.016306,4.013758,-3.766169],[-5.009696,2.336065,-0.335423,-2.207442,0.759785,5.753767,-1.287289,6.989074,-5.023881],[-2.607411,-9.337305,-6.118783,6.641019,4.228943,2.419049,-2.125632,4.734262,9.354021],[-1.775970,-9.797240,8.020770,-1.938539,5.785866,3.985623,-9.638577,-0.095283,4.175136],[0.917656,-6.761904,8.051717,-2.456053,3.065897,0.494561,-8.948900,-7.456660,9.921445],[-0.434356,-6.870706,5.054980,8.225263,7.678408,-3.929205,0.367977,-6.225848,-3.181478],[1.296182,7.842011,-8.353237,7.114619,-3.278644,-0.217165,-6.527180,-8.851171,-2.056243],[-2.110686,4.056324,-2.257280,-8.572381,7.111772,4.154360,2.694866,-5.198519,2.608012],[7.788685,5.432459,8.572666,-2.409364,-1.899477,-6.744452,-5.399135,2.093683,-4.140784],[-9.672581,7.358314,5.736302,4.963007,1.181245,7.333675,1.341774,-0.618733,9.711717],[-0.371501,4.859471,-5.192492,6.837397,-4.948095,-6.611976,-4.146038,9.624755,-1.902710],[-9.673035,7.564661,5.180763,2.573459,-7.012571,-0.535978,8.575560,1.232874,6.377031]],[[-0.614563,-6.118406,7.711799,6.598011,7.818367,0.755435,-1.708115,-5.851725,-5.252076],[-7.310357,-6.070531,1.059210,-2.866412,6.215090,2.509338,9.551486,6.922708,-1.893113],[-7.747182,3.093904,-1.951198,9.158357,-9.395059,1.228129,-5.003710,-5.987624,-9.057910],[0.442419,-7.869560,-4.098540,5.941198,1.511764,7.952860,-8.117154,-8.047099,-1.540331],[-9.812857,3.288306,3.593831,5.354825,-4.437936,-0.752056,0.257927,-5.643059,-3.248538],[0.313375,-9.522196,-2.993505,-4.298346,-2.901217,-7.444710,-6.805868,-6.540799,-4.956706],[-4.685182,8.723063,7.946717,2.125913,9.157521,1.620679,-1.918234,-5.376723,2.125251],[-7.801252,9.238856,-6.106567,3.276439,-8.104266,-4.116540,7.543186,6.389085,-7.768750],[-1.980269,2.421040,8.903915,2.250295,-9.721576,-9.551344,1.501609,4.997133,4.301467],[-3.694732,-8.868804,0.823815,8.594042,1.715109,4.719633,-6.369082,9.775381,-4.532046],[-3.906329,-9.324695,4.489457,-4.283031,-6.771229,9.355740,-6.459200,-4.801249,-4.658926],[4.678910,8.524361,-7.231883,-6.221104,-6.611476,5.291597,-3.373085,8.282894,-8.107708],[-6.453138,5.575438,-1.398046,-5.840085,-2.381820,-8.045112,-4.024262,5.254932,-5.332305],[2.011230,-9.130293,7.756993,-0.528304,1.614248,-9.937732,-5.149576,-3.722994,6.760141],[-6.852745,0.366172,6.529889,2.660211,-2.905731,3.019479,9.100781,9.546547,-5.549343]],[[4.308723,3.408025,-4.700830,-3.942472,-4.365636,-0.347705,7.293759,5.485002,-9.382121],[-4.447929,6.136710,-0.918658,-4.103349,2.179393,5.582212,-3.002106,-4.866368,5.729591],[8.860675,6.986979,-1.479597,-5.359514,-1.747511,6.092325,-7.502531,-6.930423,-4.606188],[-8.602555,-2.251684,-9.953790,0.407780,-7.490007,-8.158351,8.373633,3.991396,2.438765],[-5.755865,-4.915750,-7.803624,0.402820,8.643219,-9.538587,-4.590546,-6.238806,-5.620831],[-2.621674,7.660098,9.333996,-7.880864,-9.395280,7.522255,-3.832414,3.563214,-4.242694],[-8.989661,-0.641451,0.180886,2.505004,5.200028,4.310005,-1.802474,1.235409,-8.040336],[-9.161428,2.724948,1.622698,-6.238118,5.210165,-1.821820,8.275950,1.358358,-5.543731],[-5.805727,7.722977,-5.439636,6.800484,-5.009568,-4.589728,6.573347,-7.863361,9.687464],[4.986495,4.958035,2.270882,-9.524715,-5.243098,-5.302196,9.547919,-3.811444,-8.478414],[3.494998,3.841656,5.827887,-0.948466,-1.413716,7.274506,-9.922935,-6.804741,3.790513],[9.446437,-2.308286,-9.816045,9.828464,-9.667619,-4.713253,-5.742025,-9.863372,6.847596],[8.252234,5.334290,-4.540021,-5.061827,7.518157,-3.161720,-8.144600,8.345168,1.342639],[-1.543448,8.891987,-1.974812,6.510252,9.455137,1.603584,2.905524,-1.898363,-3.583788],[-3.275651,-2.035975,6.964899,-8.455860,-8.016724,7.588205,3.970821,-8.189473,-6.787527]],[[-1.350538,7.795503,4.634916,9.836230,-0.863529,8.783274,-2.774893,6.984360,-1.320692],[-0.634695,-4.088801,-8.471304,-0.815363,4.311097,-7.998282,-2.648490,-3.041920,-3.244254],[-4.403629,-3.263910,0.759017,1.063160,9.408511,-2.893553,-1.965156,5.060177,-2.369995],[-9.127586,6.890695,1.493605,4.502189,6.030814,-8.402759,7.054360,8.285528,8.408387],[-1.997288,-9.816402,9.149635,2.365080,9.253645,-3.608943,-4.577584,4.308679,4.347746],[4.914753,-5.004233,-6.671448,-6.614164,3.581952,3.890752,-4.587443,6.679811,-6.912686],[-1.958366,-9.526513,-0.210898,0.740494,5.281425,-3.202214,0.878863,7.191361,-6.439894],[-9.908768,-5.222678,-3.280245,-3.164769,8.120190,-3.341503,-1.938349,0.640060,-7.347165],[-6.950187,-2.254241,-5.989560,-0.191736,-9.372554,6.316145,2.908153,0.361469,2.608686],[8.546608,-9.605046,-3.969564,-9.318682,4.208302,3.068101,0.387613,5.332231,-6.263466],[9.434197,-9.564938,-0.917442,-5.049943,3.494089,1.855331,-3.867128,0.477235,6.761494],[6.304163,-1.082209,4.963864,-3.526862,1.243272,-6.866806,-0.999122,-3.352847,7.405738],[-6.786898,-6.018656,8.901449,8.700658,9.464098,3.934405,-0.270418,-3.707670,2.808926],[-6.245342,2.754523,-6.133367,5.442826,4.184171,5.465330,6.317781,-7.504014,6.805258],[6.340239,5.805333,4.075002,-2.188726,5.959806,7.988365,-6.383290,9.261171,6.511153]],[[-3.307011,-4.214515,7.222382,-6.791044,4.729762,-3.498416,6.309420,1.123581,-1.780568],[0.176431,-0.948985,-3.386411,2.289491,-4.121616,-5.850266,-5.023005,-1.910864,-0.733632],[-1.085962,-0.540994,1.619292,0.111865,0.895630,-8.576546,5.681638,-4.765798,-2.751709],[7.047535,1.260614,-0.638846,-9.838498,-0.380199,0.518411,-2.329494,-9.639492,-7.970599],[4.731858,-0.910713,-2.938122,8.692218,-4.227004,-9.196658,-9.956190,-6.177156,2.313886],[8.640945,-7.757413,-1.199570,-1.502335,1.872936,-1.153357,-1.648517,3.941870,-3.830197],[8.505929,-7.480958,6.327041,9.180943,-4.356326,0.365390,-4.181882,9.394879,2.195347],[0.082307,-0.281252,-7.084346,-6.067852,3.089479,0.717023,5.542850,2.074417,-8.291942],[-4.953394,-4.086160,1.839339,-4.211830,-8.958721,-8.185045,-8.605716,9.642828,0.705109],[5.939756,-1.186011,0.850238,-1.401177,5.906306,-7.350369,-8.949129,4.163301,-5.996123],[-5.849480,-8.522163,-9.766875,-8.185512,-8.804478,-2.484024,2.790033,8.485376,-6.453322],[8.892034,-0.216461,-6.466652,-5.269155,7.721181,5.461669,6.545717,8.497041,-8.110026],[-9.942170,-1.279991,-9.171329,-3.083189,-9.432743,3.233614,9.424662,2.621124,2.002704],[-8.593950,-8.546824,5.323056,4.924995,6.895006,6.490015,0.366292,7.773978,-0.071054],[-7.658260,3.285571,9.817704,9.838249,-9.908587,-0.190648,-7.473466,7.894231,-7.957024]]], dtype = "float64")#candidate|6829|(16, 15, 9)|const|float64
uop_6830 = relay.exp(const_6829.astype('float64')) # shape=(16, 15, 9)
bop_6839 = relay.less(uop_6830.astype('bool'), relay.reshape(const_6829.astype('bool'), relay.shape_of(uop_6830))) # shape=(16, 15, 9)
output = relay.Tuple([bop_6839,])
output2 = relay.Tuple([bop_6839,])
func_6851 = relay.Function([], output)
mod['func_6851'] = func_6851
mod = relay.transform.InferType()(mod)
output = func_6851()
func_6852 = relay.Function([], output)
mutated_mod['func_6852'] = func_6852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_6855 = func_5843_call()
call_6856 = func_5843_call()
func_6757_call = mod.get_global_var('func_6757')
func_6758_call = mutated_mod.get_global_var('func_6758')
call_6882 = relay.TupleGetItem(func_6757_call(), 0)
call_6883 = relay.TupleGetItem(func_6758_call(), 0)
output = relay.Tuple([call_6855,call_6882,])
output2 = relay.Tuple([call_6856,call_6883,])
func_6888 = relay.Function([], output)
mod['func_6888'] = func_6888
mod = relay.transform.InferType()(mod)
output = func_6888()
func_6889 = relay.Function([], output)
mutated_mod['func_6889'] = func_6889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_6974 = func_5843_call()
call_6975 = func_5843_call()
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_6980 = relay.TupleGetItem(func_6725_call(), 0)
call_6981 = relay.TupleGetItem(func_6727_call(), 0)
func_4452_call = mod.get_global_var('func_4452')
func_4455_call = mutated_mod.get_global_var('func_4455')
const_6988 = relay.const([5.936052,5.274209,-8.390955,-6.518528,0.779914,3.534111,-5.876479,-8.136360,-5.032626,3.313343,-1.060986,9.651967,-1.906409,6.441521,2.319935,-1.445875,5.184413,1.675836], dtype = "float32")#candidate|6988|(18,)|const|float32
call_6987 = relay.TupleGetItem(func_4452_call(relay.reshape(const_6988.astype('float32'), [6, 3, 1])), 0)
call_6989 = relay.TupleGetItem(func_4455_call(relay.reshape(const_6988.astype('float32'), [6, 3, 1])), 0)
output = relay.Tuple([call_6974,call_6980,call_6987,const_6988,])
output2 = relay.Tuple([call_6975,call_6981,call_6989,const_6988,])
func_6992 = relay.Function([], output)
mod['func_6992'] = func_6992
mod = relay.transform.InferType()(mod)
output = func_6992()
func_6993 = relay.Function([], output)
mutated_mod['func_6993'] = func_6993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6851_call = mod.get_global_var('func_6851')
func_6852_call = mutated_mod.get_global_var('func_6852')
call_7034 = relay.TupleGetItem(func_6851_call(), 0)
call_7035 = relay.TupleGetItem(func_6852_call(), 0)
func_5376_call = mod.get_global_var('func_5376')
func_5378_call = mutated_mod.get_global_var('func_5378')
var_7048 = relay.var("var_7048", dtype = "float32", shape = (448,))#candidate|7048|(448,)|var|float32
call_7047 = relay.TupleGetItem(func_5376_call(relay.reshape(var_7048.astype('float32'), [8, 14, 4])), 0)
call_7049 = relay.TupleGetItem(func_5378_call(relay.reshape(var_7048.astype('float32'), [8, 14, 4])), 0)
output = relay.Tuple([call_7034,call_7047,var_7048,])
output2 = relay.Tuple([call_7035,call_7049,var_7048,])
func_7054 = relay.Function([var_7048,], output)
mod['func_7054'] = func_7054
mod = relay.transform.InferType()(mod)
var_7055 = relay.var("var_7055", dtype = "float32", shape = (448,))#candidate|7055|(448,)|var|float32
output = func_7054(var_7055)
func_7056 = relay.Function([var_7055], output)
mutated_mod['func_7056'] = func_7056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6145_call = mod.get_global_var('func_6145')
func_6146_call = mutated_mod.get_global_var('func_6146')
call_7189 = relay.TupleGetItem(func_6145_call(), 0)
call_7190 = relay.TupleGetItem(func_6146_call(), 0)
var_7195 = relay.var("var_7195", dtype = "float64", shape = (9, 7, 11))#candidate|7195|(9, 7, 11)|var|float64
bop_7196 = relay.logical_xor(call_7189.astype('int16'), relay.reshape(var_7195.astype('int16'), relay.shape_of(call_7189))) # shape=(9, 7, 11)
bop_7199 = relay.logical_xor(call_7190.astype('int16'), relay.reshape(var_7195.astype('int16'), relay.shape_of(call_7190))) # shape=(9, 7, 11)
output = bop_7196
output2 = bop_7199
func_7212 = relay.Function([var_7195,], output)
mod['func_7212'] = func_7212
mod = relay.transform.InferType()(mod)
var_7213 = relay.var("var_7213", dtype = "float64", shape = (9, 7, 11))#candidate|7213|(9, 7, 11)|var|float64
output = func_7212(var_7213)
func_7214 = relay.Function([var_7213], output)
mutated_mod['func_7214'] = func_7214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6498_call = mod.get_global_var('func_6498')
func_6499_call = mutated_mod.get_global_var('func_6499')
call_7260 = relay.TupleGetItem(func_6498_call(), 0)
call_7261 = relay.TupleGetItem(func_6499_call(), 0)
output = call_7260
output2 = call_7261
func_7264 = relay.Function([], output)
mod['func_7264'] = func_7264
mod = relay.transform.InferType()(mod)
output = func_7264()
func_7265 = relay.Function([], output)
mutated_mod['func_7265'] = func_7265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6020_call = mod.get_global_var('func_6020')
func_6022_call = mutated_mod.get_global_var('func_6022')
call_7291 = func_6020_call()
call_7292 = func_6020_call()
func_5343_call = mod.get_global_var('func_5343')
func_5345_call = mutated_mod.get_global_var('func_5345')
var_7298 = relay.var("var_7298", dtype = "float32", shape = (78, 1))#candidate|7298|(78, 1)|var|float32
call_7297 = func_5343_call(relay.reshape(var_7298.astype('float32'), [2, 13, 3]))
call_7299 = func_5343_call(relay.reshape(var_7298.astype('float32'), [2, 13, 3]))
func_5376_call = mod.get_global_var('func_5376')
func_5378_call = mutated_mod.get_global_var('func_5378')
var_7306 = relay.var("var_7306", dtype = "float32", shape = (448,))#candidate|7306|(448,)|var|float32
call_7305 = relay.TupleGetItem(func_5376_call(relay.reshape(var_7306.astype('float32'), [8, 14, 4])), 0)
call_7307 = relay.TupleGetItem(func_5378_call(relay.reshape(var_7306.astype('float32'), [8, 14, 4])), 0)
uop_7325 = relay.tan(var_7298.astype('float64')) # shape=(78, 1)
output = relay.Tuple([call_7291,call_7297,call_7305,var_7306,uop_7325,])
output2 = relay.Tuple([call_7292,call_7299,call_7307,var_7306,uop_7325,])
func_7338 = relay.Function([var_7298,var_7306,], output)
mod['func_7338'] = func_7338
mod = relay.transform.InferType()(mod)
var_7339 = relay.var("var_7339", dtype = "float32", shape = (78, 1))#candidate|7339|(78, 1)|var|float32
var_7340 = relay.var("var_7340", dtype = "float32", shape = (448,))#candidate|7340|(448,)|var|float32
output = func_7338(var_7339,var_7340,)
func_7341 = relay.Function([var_7339,var_7340,], output)
mutated_mod['func_7341'] = func_7341
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7433 = relay.const(-1, dtype = "uint16")#candidate|7433|()|const|uint16
var_7434 = relay.var("var_7434", dtype = "uint16", shape = (4, 13, 9))#candidate|7434|(4, 13, 9)|var|uint16
bop_7435 = relay.bitwise_or(const_7433.astype('uint16'), var_7434.astype('uint16')) # shape=(4, 13, 9)
uop_7457 = relay.acos(bop_7435.astype('float32')) # shape=(4, 13, 9)
func_6379_call = mod.get_global_var('func_6379')
func_6383_call = mutated_mod.get_global_var('func_6383')
var_7461 = relay.var("var_7461", dtype = "float64", shape = (3, 2))#candidate|7461|(3, 2)|var|float64
const_7462 = relay.const([9,3,-3,3,-2,9,-2,-8,5,-6,-8,-4,-7,-9,10,-4,-3,2,3,-1,-8,2,7,-8,-10,5,-5,4,-5,10,4,-6,-10,-4,4,7,-8,-3,-9,-9,5,8,3,5,-4,5,8,4,2,10,-7,-9,6,-2,-2,3,-3,1,-2,5,-9,3,-2,5,6,9,2,10,9,-10,-1,2,3,-1,10,-10,-8,6,9,3,7,-1,-9,5,-3,3,-8,-7,8,6,7,9,-9,3,-8,-5,8,4,-9,9,5,-5,7,-6,3,5,7,3,-8,-4,-3,-3,-9,2,7,-9,5,9,-5,9,8,5,-9,-3,-7,5,-10,-2,-7,-4,-8,-7,6,-5,1,-8,-9,6,3,6,8,9,2,-4,8,1,2,8,-6,-8,6,-7,1,4,-5,-4,-4,3,-6,4,7,-9,7,-5,-10,-1,-9,3,4,-3,-2,3,10,3,-3,10,-2,8,-6,-2,6,-3,2,4,-7,-6,-4,4,-7,1,-2,9,-2,5,10,4,-3,-2,7,4,2,3,-10,-1,-2,4,-5,-1,-10,5,-8,-7,-8,-7,-4,8,-10,2,-8,5,-7,-5,4,1,4,5,5,-2,-10,9,-9,-9,-10,9,6,-7,2,7,-9,9,4,-5,7,-5,8,8,3,-6,-8,10,-8,-9,8,-6,6,-10,1,-3,-7,-3,2,-2,-1,-9,-5,5,5,-4,1,10,7,-10,-9,7,3,1,-3,2,3,-3,10,2,1,8,3,-1,-2,-9,6,-7,5,-6,-8,2,-10,10,4,-7,5,9,5,-10,-1,-8,-6,5,2,10,10,3,-9,-3,-4,-10,-8,-1,-6,-2,4,5,-6,1,-4,7,-5,5,3,8,8,8,-4,-1,-2,7,-4,3,-3,-5,5,10,-2,3,4,-3,-7,10,-10,2,-3,-7,1,4,-4,2,3,-9,-8,-10,-4,-5,-4,2,6,-7,3,4,1,10,1,5,6,10,-6,6,-5,-1,-6,4,-9,10,2,7,-6,-1,1,-2,1,10,-2,7,9,-6,-3,8,-1,3,6,1,9,10,9,8,4,7,-6,1,4,-10,-10,-8,-9,-4,-1,7,-6,-9,-9,-5,4,-6,8,-6,9,-9,4,-7,6,-10,-8,-8,-5,3,3,6,-2,8,4,-2,9,9,9,-10,9,6,6,6,-1,5,7,-1,-6,10,-4,10,-6,-1,-6,3,-9,-5,-3,8,9,5,-7,-4,-9,10,7,-1,10,9,10,-1,1,8,6,5,9,3,10,8,4,-3,9,-5,5,-5,5,6,4,9,9,-7,-8,4,-10,5,10,4,-3,10,-2,-3,-5,-5,4,-10,10,3,10,5,-10,3,-10,3,5,-1,10,-3,4,3,4,1,1,-1,1,-10,-6,-5,1,10,-1,2,-7,-6,5,-9,3,2,-5,-4,8,-1,8,-1,-4,-4,3,6,-2,-1,2,-5,-1,8,9,4,7,-4,-9,-5,-9,8,4,2,-8,7,4,-4,1,10,-5,9,-10,-8,-9,2,1,-2,5,5,8,3,3,6,1,-4,-2,10,-8,-1,-1,-7,-2,-9,2,10,5,-1,-9,10,4,-8,-7,-8,-9,1,1,-4,6,2,7,-7,3,1,-6,-6,5,9,-4,-8,-8,-3,-7,-6,2,1,1,-4,-8,8,5,8,-10,3,-6,5,8,-6,6,-9,1,-10,2,7,-8,-5,1,-3,10,2,-5,-1,8,-1,9,-5,-2,3,10,3,6,-10,-1,7,9,7,-10,-6,-6,-3,8,7,2,3,9,9,-6,-4,2,-6,3,-4,4,9,8,6,9,-6,-3,-4,-5,-10,2,7,3,4,9,-9,7,-4,2,-8,5,-2,3,1,-9,-10,-2,4,10,-5,5,3,-4,6,9,4,10,-2,-4,-2,5,5,-8,-5,8,-9,-6,6,1,3,-7,-6,7,-9,-3,5,2,-5,10,9,2,10,2,5,7,5,-8,-1,1,7,1,-1,-1,-1,8,8,8,7,3,3,-1,8,-3,6,10,-7,-3,-4,-5,-5,7,-3,1,-6,4,-8,2,-6,-4,-9,6,-5,-4,-5,-8,-4,-4,-1,-8,1,8,9,-3,5,9,-4,-9,4,-10,4,9,-4,-8,-10,-3,10,-8,5,8,-3,-3,-2,5,-8,6,4,2,10,4,8,-9,-1,9,-2,-6,-4,1,-1,-3,-3,1,-6,-5,4,-8,-9,1,6,7,-7,-5,2,-6,-2,4,-9,3,1,-6,7,9,1,-7,-10,-6,-7,-9,-5,-4,7,2,-6,-3,-3,1,-3,8,-10,10,7,-8,-7,5,-3,10,-8,6,-5,10,10,-10,4,6,2,6,1,6,-3,1,10,8,2,-2,4,7,-5,-6,6,3,-7,-7,-2,-6,4,3,-9,-1,-4,9,7,2,4,1,10,-6,-2,5,8,1,1,5,6,10,-1,7,-7,-1,7,-1,-7,-3,-3,-5,10,-10,-1,-10,1,8,-10,-1,6,-8,-4,-1,9,10,-2,1,-2,-4,8,-1,-5,2,-5,-4,4,3,2,-9,-8,3,5,-2,4,1,10,-2,2,-2,-6,-8,-10,-8,-5,-5,9,2,9,10,-10,7,4,6,-3,3,-5,-10,3,9,-7,2,-10,10,8,5,3,-7,1,-5,2,-6,10,-3,-5,1,-7,-8,7,6,-9,5,-3,1,8,2,3,-10,-5,-5,5,2,1,7,-9,-5,-6,-2,-5,-4,-8,-4,6,5,-6,2,8,-3,8,-7,5,-7,2,-9,-2,-1,-3,3,-10,-1,-9,-8,-8,4,-1,3,4,-8,-9,5,-1,-2,-3,4,-3,10,9,-1,-8,-3,7,-6,5,-7,-10,6,1,8,4,9,-8,-1,6,-3,6,-3,1,-4,-1,1,-5,3,-6,2,-4,7,-10,8,-2,-10,7,3,-1,4,-10,-3,3,-9,-6,7,1,-1,-6,-7,-10,-7,8,-6,-9,-3,7,-1,2,7,2,10,-10,4,-2,4,-8,2,5,9,8,2,-7,-6,-7,-9,-9,-2,-3,-6,-9,-8,3,5,8,1,-3,1,-10,-9,2,-5,8,-9,-6,-6,5,-10,-6,8,6,-9,-6,8,-9,-10,6,9,5,-7,-3,3,-10,8,-7,-7,-8,3,7,10,10,-7,7,4,-4,-10,7,6,-6,1,-3,-6,7,6,1,-1,8,-9,4,5,-4,6,8,-9,8,-8,10,-3,5,10,7,-9,9,-8,-1,10,9,7,8,2,5,7,3,-2,-1,-4,-4,-3,-1,6,5,-7,2,10,9,-5,9,10,4,-10,-6,3,-7,5,-7,-10,-8,5,-1,1,-6,-4,10,8,-8,9,5,6,-8,2,3,-8,-6,-1,7,-7,-8,-9,-5,-2,-9,8,1,-8,6,-4,1,-10,-4,-6,-2,-5,3,9,-3,2,-2,-8,6,-1,7,9,-7,6,9,10,6,4,-9,9,3,-4,4,7,-7,10,4,-3,-10,2,-3,-3,-10,-8,9,3,-9,-9,8,-2,-6,10,-6,3,-1,5,9,-5,-4,-8,-10,-7,7,-3,3,1,-10,1,3,1,-9,8,-6,-7,-5,3,5,8,7,-6,-9,-10,-5,4,-5,1,-3,1,3,-10,-2,-8,5,8,7,4,10,-4,7,2,7,7,4,9,-8,8,6,-9,-1,-4,-1,-2,-4,-6,6,-2,-3,3,7,-7,-5,-4,-2,-1,-10,-1,5,1,-2,10,-7,3,3,9,9,4,-4,2,-3,-1,10,-5,-7,-4,-3,9,9,2,-9,10,9,-2,4,9,9,-2,1,-3,4,-9,2,-1,-1,10,3,8,6,3,7,1,3,4,1,-2,7,-5,1,-9,-8,2,1,-1,1,-8,7,4,-3,4,8,-2,-9,-3,3,-3,-10,-10,3,7,7,-2,-7,4,7,-5,-8,-9,1,7,3,-5,-3,4,-8,3,8,-10,4,-2,-6,5,3,-10,7,10,-7,4,10,9,-9,-3,-8,2,9,-2,-3,6,2,-10,-5,-10,5,-4,2,-5,6,9,-1,7,-7,4,3,-3,7,-5,-4,-7,-8,6,-6,2,8,-7,2,-2,2,-6,7,-1,5,-9,8,-9,-6,-6,-7,4,2,6,-5,3,-6,4,10,-10,-9,5,-4,6,1,-2,-2,4,8,-8,-10,-2,-1,10,2,-8,10,10,10,-3,10,9,-2,8,5,-6,-8,-3,-7,-10,-4,9,4,9,-7,-4,10,3,-6,-3,-8,8,-9,4,-4,2,5,-4,-3,2,5,-7,9,6,-10,8,10,-5,-7,-3,-7,10,8,-2,7,9,2,-5,-7,-8,-2,8,-6,-8,-3,-5,6,4,-9,5,10,8,-3,3,-3,-8,1,4,-6,-10,5,-1,1,7,10,8,5,2,-6,-7,-9,-6,8,8,4,4,5,10,-9,-8,8,-10,9,-10,-6,5,-1,-6,3,-6,-3,-6,-8,-4,3,7,-7,4,-9,-2,3,-2,10,-7,3,-10,6,7,-4,2,-5,1,-7,8,1,-3,-7,3,7,10,5,-8,-8,6,6,-1,8,2,7,3,10,-4,-5,6,-9,1,6,7,-4,8,-3,-10,-3,8,4,9,1,5,-2,-7,-5,7,8,9,-8,-2,8,-2,8,-10,-5,-8,-4,-4,2,-9,2,2,9,3,-10,8,1,-8,2,-1,9,-5,2,9,-3,-3,-4,8,-8,-1,-8,-8,-9,-5,-6,-9,-6,6,-6,-2,-1,7,-1,9,5,-10,10,-1,-4,-1,-3], dtype = "uint8")#candidate|7462|(1800,)|const|uint8
call_7460 = relay.TupleGetItem(func_6379_call(relay.reshape(var_7461.astype('float64'), [6,]), relay.reshape(const_7462.astype('uint8'), [1800,]), ), 5)
call_7463 = relay.TupleGetItem(func_6383_call(relay.reshape(var_7461.astype('float64'), [6,]), relay.reshape(const_7462.astype('uint8'), [1800,]), ), 5)
output = relay.Tuple([uop_7457,call_7460,var_7461,const_7462,])
output2 = relay.Tuple([uop_7457,call_7463,var_7461,const_7462,])
func_7465 = relay.Function([var_7434,var_7461,], output)
mod['func_7465'] = func_7465
mod = relay.transform.InferType()(mod)
var_7466 = relay.var("var_7466", dtype = "uint16", shape = (4, 13, 9))#candidate|7466|(4, 13, 9)|var|uint16
var_7467 = relay.var("var_7467", dtype = "float64", shape = (3, 2))#candidate|7467|(3, 2)|var|float64
output = func_7465(var_7466,var_7467,)
func_7468 = relay.Function([var_7466,var_7467,], output)
mutated_mod['func_7468'] = func_7468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6757_call = mod.get_global_var('func_6757')
func_6758_call = mutated_mod.get_global_var('func_6758')
call_7630 = relay.TupleGetItem(func_6757_call(), 0)
call_7631 = relay.TupleGetItem(func_6758_call(), 0)
const_7649 = relay.const([[[7.107156,-1.157977,-9.773300,-4.634782,4.404102,4.076997,1.342977,-2.178202,2.400843,2.982739,2.283092],[-4.378378,0.124355,-2.356838,2.276246,9.159460,-0.499185,5.224283,5.244203,-8.061757,2.325225,-4.853514],[7.917764,-1.292180,7.603671,4.115148,-3.178778,5.587679,-3.426922,7.581575,5.183882,-5.193495,-3.371258],[-3.338670,7.918466,3.132652,-7.722251,-0.068214,-3.985022,-2.558305,-8.032674,-0.162336,-0.981052,-4.364746],[-8.277594,-2.061977,-7.489807,8.369862,-4.077166,-8.791157,-0.733158,-9.327332,5.093303,-8.255325,7.793883],[3.330799,-3.632707,3.953846,9.994957,6.725802,9.235395,9.544064,-3.517205,5.911988,-7.874023,4.308681],[7.079624,9.034883,-4.708625,-2.653957,1.802347,0.070076,4.799853,-5.274755,0.039018,-8.849098,7.241309]],[[-8.292215,-6.623248,-1.987841,-9.258597,8.346576,1.344754,-7.563083,1.809487,4.474891,0.626696,-1.338752],[6.595807,7.756027,4.705894,-7.405759,-1.276368,-7.709026,-2.411759,3.991365,-9.885905,-5.264622,-0.859299],[2.282341,2.128852,-4.310622,-1.615534,4.715387,4.213794,-4.558279,7.159204,1.911067,3.771746,-2.076951],[-4.065215,-9.796416,0.663683,-9.908883,-4.763171,3.690514,-4.129228,-1.496724,-4.964746,4.234141,-4.701154],[-0.394295,-5.043668,2.170509,-7.947893,6.573827,-9.950971,1.194909,-6.651136,2.718036,-5.229625,-3.944474],[-7.198050,4.533924,-4.230751,-5.324165,-2.778292,-5.820864,-0.697141,-0.578130,-6.225069,9.560997,-9.750283],[-2.245731,-3.305856,6.252553,-2.621582,0.104261,-0.636503,2.801276,9.372741,5.139028,8.055047,-0.362452]],[[-5.326631,-9.402812,-5.445214,7.238735,-5.375558,4.524519,3.055440,9.301812,-4.565097,-3.440367,3.188778],[-8.479725,7.409976,-8.293158,8.979834,-9.109539,-6.140536,-2.370444,-5.515291,9.169657,0.318770,1.101593],[7.382419,-3.677746,1.208578,-4.010679,9.340459,-1.235013,-4.329574,5.423470,4.231298,4.045250,-0.208676],[0.997936,2.958283,5.133420,9.224026,7.374730,-4.184236,1.588453,-3.887663,-4.495414,-4.748868,-7.038884],[-6.438681,-6.286352,1.145880,2.782957,-0.647338,-0.966852,3.365328,-7.591103,-1.629839,4.602811,-0.732370],[4.027222,-2.726090,-6.720073,-6.205393,6.288028,-7.950043,-5.775552,-2.580534,2.416124,-5.632072,-7.569016],[8.211346,5.968046,9.323799,-0.527932,2.738570,-7.627391,-0.045659,-3.580987,-2.838226,3.717927,8.560097]],[[-2.740651,0.003255,-9.507782,-4.391218,4.330876,-7.547744,9.040459,9.468995,4.423968,8.451100,-1.295668],[-7.063348,-3.812653,-1.838949,0.818684,-9.024518,3.452860,7.425537,6.012953,9.173354,9.557974,8.487113],[3.424696,8.519784,2.923698,-0.090315,-5.417237,-3.459211,2.718501,-4.972831,4.336680,9.166839,-6.405748],[-5.617670,-7.865441,-8.000754,5.388645,-1.974077,-6.844336,0.986104,2.949048,0.447631,-2.804185,-2.434361],[-4.104908,-9.783100,6.990425,7.249735,-8.659648,-1.901694,3.897297,5.123636,-9.514815,0.510349,5.617910],[7.206314,-7.303293,-1.521786,-8.310268,7.779047,0.793447,-9.992505,3.475855,-4.806938,-2.518412,-5.590043],[0.465694,-2.187918,1.015517,-6.750691,0.771655,5.972147,-2.370272,-3.651501,0.625859,1.075713,-1.043394]],[[6.541262,5.436172,2.894985,-5.189227,1.388500,4.113702,-6.412095,7.063857,9.356395,-5.645749,7.705294],[-7.639130,6.439700,3.243358,-9.495891,7.907981,8.203520,3.520857,-0.698770,-4.242935,3.018928,2.110304],[-9.833143,-6.826789,0.955228,2.500370,9.946162,4.868465,7.572807,-5.526326,-7.900250,1.280372,-0.834696],[-9.505006,1.172970,8.563847,5.068525,-4.946475,8.448557,5.117886,6.998837,4.600330,3.216977,3.065025],[2.088824,-5.533974,4.635105,8.015751,2.534942,-3.119692,-2.208436,6.837829,3.282900,-2.633351,0.650698],[2.324716,-9.754762,1.872217,2.131227,-0.044728,-5.819745,-0.450711,-3.912951,-3.201845,-2.147292,-7.173583],[-6.275315,-6.217051,9.990638,-4.527514,-4.489081,8.897424,7.713553,-8.398426,-7.796577,6.699131,-1.809907]],[[-6.781590,-4.852090,-2.571341,-5.124881,5.212310,-0.354215,-2.359651,-6.194672,-0.162168,-5.837463,3.742151],[5.048859,5.525459,-7.192976,-6.490708,-3.572238,-3.952448,2.226308,5.696760,1.474077,-4.150063,-8.091739],[-2.740590,-7.394953,-8.251660,-9.977068,-2.332454,9.318429,1.227389,-2.102043,-9.228759,5.617716,9.363640],[4.270083,-0.288306,-8.896444,4.366302,4.996428,7.232722,-2.940678,-8.101156,-8.687434,-3.054889,-0.687307],[4.030624,-0.007090,-0.647839,-2.599422,-4.325597,-0.264464,2.761287,-4.043009,-4.592277,-8.581159,9.372393],[6.664267,0.500581,-2.490433,4.155151,-6.553449,8.021178,5.068801,-9.122198,-7.520857,2.332308,0.093137],[9.139722,9.948838,5.354748,9.303845,8.924175,-9.592839,-6.674985,-3.021772,-3.963466,8.694418,6.264348]],[[2.406514,-7.423674,1.983227,-6.550133,-2.269957,-9.848485,8.287195,6.214181,-7.096469,2.293807,-0.813438],[9.656027,-0.072784,7.927794,3.021219,-3.180206,-6.327774,-2.994741,-4.478768,-9.815252,-3.883938,2.759711],[-0.848635,0.036668,9.689871,8.284996,-1.700221,-0.389412,-0.235495,-9.449449,4.301395,-3.996740,-8.472712],[3.199425,-0.388585,5.695906,-9.769291,-8.882207,-5.250073,0.501981,5.220216,4.362901,8.441696,-2.303018],[2.333095,4.902598,1.468344,-7.079276,1.459636,-6.483627,8.659121,-9.389207,-8.014508,-1.896763,-3.545219],[-6.903621,-6.166433,-8.683909,-6.856645,-2.425431,7.323811,-9.888844,2.336951,-3.830880,-8.410077,-7.982680],[0.477996,1.616638,-7.023777,-9.068079,6.301023,-3.396521,-5.105687,0.968549,4.267920,-7.732257,9.575050]],[[8.151497,6.175297,1.611361,-3.321925,4.612384,1.926038,-1.006608,-8.228080,-0.300077,4.691751,9.084722],[6.303778,-5.035730,-9.719087,-6.953163,1.747133,6.412830,9.248565,-0.734028,-2.835979,9.480564,-1.478426],[2.812585,-4.493762,-9.751540,-2.628743,5.619655,-2.037854,-7.511075,-1.318226,8.693063,-1.974060,-3.929727],[6.348235,-1.592785,-7.616390,3.173492,7.360058,0.143801,8.588805,4.430508,-1.989738,3.344437,7.025509],[5.844136,-6.327233,2.325942,9.355197,2.041677,1.763369,2.130680,0.713936,-5.116380,3.102355,9.211604],[-6.451525,1.801696,6.448396,4.321150,-6.475294,2.076994,1.648991,-2.740842,-0.026275,-6.374588,0.673284],[-7.639062,-8.746111,1.786644,-3.023269,-8.711496,3.227567,0.350164,7.156212,2.271164,-4.983538,-0.255975]],[[-3.976208,-7.513142,-7.397113,-8.388718,-0.075571,9.825760,5.245587,5.406746,9.821287,-1.213809,1.803588],[9.744106,1.077516,-5.579505,9.270994,0.368057,8.623124,5.290908,-2.325674,0.865188,-0.966828,-1.529282],[7.514973,2.512360,3.686953,-2.190909,-2.434730,8.719586,-5.737331,1.654308,6.785508,6.945509,-1.405700],[-0.424935,-4.151707,-0.432640,-7.796823,0.293022,-2.065440,-5.048083,-0.159026,-5.927379,7.075767,-7.913556],[2.514389,4.450457,3.521822,-8.876039,6.749384,-2.906876,-6.231612,-2.554731,9.150129,1.682119,1.477177],[-8.944901,-8.629753,-4.360213,-5.828216,0.657149,-2.691664,-6.863230,-0.260483,2.099828,-1.749335,2.059254],[-3.331442,6.209789,1.239479,4.185425,0.613671,5.258516,-4.488708,2.867918,-7.268654,9.639138,6.352711]]], dtype = "float64")#candidate|7649|(9, 7, 11)|const|float64
bop_7650 = relay.bitwise_and(call_7630.astype('int8'), relay.reshape(const_7649.astype('int8'), relay.shape_of(call_7630))) # shape=(9, 7, 11)
bop_7653 = relay.bitwise_and(call_7631.astype('int8'), relay.reshape(const_7649.astype('int8'), relay.shape_of(call_7631))) # shape=(9, 7, 11)
func_1754_call = mod.get_global_var('func_1754')
func_1757_call = mutated_mod.get_global_var('func_1757')
var_7657 = relay.var("var_7657", dtype = "float32", shape = (5, 3))#candidate|7657|(5, 3)|var|float32
call_7656 = relay.TupleGetItem(func_1754_call(relay.reshape(var_7657.astype('float32'), [1, 15, 1])), 0)
call_7658 = relay.TupleGetItem(func_1757_call(relay.reshape(var_7657.astype('float32'), [1, 15, 1])), 0)
output = relay.Tuple([bop_7650,call_7656,var_7657,])
output2 = relay.Tuple([bop_7653,call_7658,var_7657,])
func_7664 = relay.Function([var_7657,], output)
mod['func_7664'] = func_7664
mod = relay.transform.InferType()(mod)
var_7665 = relay.var("var_7665", dtype = "float32", shape = (5, 3))#candidate|7665|(5, 3)|var|float32
output = func_7664(var_7665)
func_7666 = relay.Function([var_7665], output)
mutated_mod['func_7666'] = func_7666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6785_call = mod.get_global_var('func_6785')
func_6786_call = mutated_mod.get_global_var('func_6786')
call_7727 = func_6785_call()
call_7728 = func_6785_call()
func_6379_call = mod.get_global_var('func_6379')
func_6383_call = mutated_mod.get_global_var('func_6383')
var_7730 = relay.var("var_7730", dtype = "float64", shape = (6,))#candidate|7730|(6,)|var|float64
var_7731 = relay.var("var_7731", dtype = "uint8", shape = (900, 2))#candidate|7731|(900, 2)|var|uint8
call_7729 = relay.TupleGetItem(func_6379_call(relay.reshape(var_7730.astype('float64'), [6,]), relay.reshape(var_7731.astype('uint8'), [1800,]), ), 5)
call_7732 = relay.TupleGetItem(func_6383_call(relay.reshape(var_7730.astype('float64'), [6,]), relay.reshape(var_7731.astype('uint8'), [1800,]), ), 5)
func_1802_call = mod.get_global_var('func_1802')
func_1804_call = mutated_mod.get_global_var('func_1804')
var_7743 = relay.var("var_7743", dtype = "float64", shape = (154, 6))#candidate|7743|(154, 6)|var|float64
call_7742 = relay.TupleGetItem(func_1802_call(relay.reshape(var_7743.astype('float64'), [14, 11, 6])), 0)
call_7744 = relay.TupleGetItem(func_1804_call(relay.reshape(var_7743.astype('float64'), [14, 11, 6])), 0)
func_6632_call = mod.get_global_var('func_6632')
func_6633_call = mutated_mod.get_global_var('func_6633')
call_7750 = relay.TupleGetItem(func_6632_call(), 0)
call_7751 = relay.TupleGetItem(func_6633_call(), 0)
output = relay.Tuple([call_7727,call_7729,var_7730,var_7731,call_7742,var_7743,call_7750,])
output2 = relay.Tuple([call_7728,call_7732,var_7730,var_7731,call_7744,var_7743,call_7751,])
func_7758 = relay.Function([var_7730,var_7731,var_7743,], output)
mod['func_7758'] = func_7758
mod = relay.transform.InferType()(mod)
var_7759 = relay.var("var_7759", dtype = "float64", shape = (6,))#candidate|7759|(6,)|var|float64
var_7760 = relay.var("var_7760", dtype = "uint8", shape = (900, 2))#candidate|7760|(900, 2)|var|uint8
var_7761 = relay.var("var_7761", dtype = "float64", shape = (154, 6))#candidate|7761|(154, 6)|var|float64
output = func_7758(var_7759,var_7760,var_7761,)
func_7762 = relay.Function([var_7759,var_7760,var_7761,], output)
mutated_mod['func_7762'] = func_7762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_7769 = func_5843_call()
call_7770 = func_5843_call()
var_7778 = relay.var("var_7778", dtype = "bool", shape = (14, 8, 3))#candidate|7778|(14, 8, 3)|var|bool
bop_7779 = relay.greater(call_7769.astype('bool'), relay.reshape(var_7778.astype('bool'), relay.shape_of(call_7769))) # shape=(14, 8, 3)
bop_7782 = relay.greater(call_7770.astype('bool'), relay.reshape(var_7778.astype('bool'), relay.shape_of(call_7770))) # shape=(14, 8, 3)
func_6379_call = mod.get_global_var('func_6379')
func_6383_call = mutated_mod.get_global_var('func_6383')
var_7791 = relay.var("var_7791", dtype = "float64", shape = (6,))#candidate|7791|(6,)|var|float64
const_7792 = relay.const([-6,4,3,3,5,-10,2,10,8,4,1,8,9,-6,1,-7,8,-1,9,2,-4,4,6,3,6,-7,-5,2,-7,8,8,6,-9,10,9,-3,4,8,-5,-4,-8,7,8,-9,8,4,7,3,-5,5,4,-6,7,-10,6,-3,-7,-10,-10,1,-8,-3,2,-2,-10,10,5,6,-1,4,10,-2,8,1,2,-5,6,-7,3,-5,6,-10,-5,-5,-1,-4,8,8,-9,-3,1,-1,-5,7,-10,2,-10,-9,9,1,-4,-2,2,-8,1,10,-9,-10,1,-4,-10,9,1,6,5,-1,-4,-1,5,7,-5,9,-10,-10,-8,4,-1,9,4,-1,5,-5,-6,-7,-10,-8,-1,-8,-10,4,3,6,-2,3,2,-2,-7,-10,-7,-6,1,-1,5,-5,-10,-10,6,4,-3,-3,-2,-4,6,-1,-10,2,-3,4,-6,2,8,8,10,-4,-10,9,-6,2,8,-4,2,-10,1,-4,4,1,-8,8,3,-2,-10,7,-4,7,4,-10,7,3,5,5,1,-3,-6,-8,2,-2,-3,-8,7,8,-7,10,-10,4,-8,5,6,2,-9,-9,-2,-5,9,1,1,9,-10,3,-2,7,7,-1,8,-3,6,9,-2,-3,8,-8,5,-8,-6,9,8,-8,-6,8,-4,2,-2,10,-3,-6,8,1,-3,2,-10,7,-5,-4,6,6,10,4,8,7,-8,4,7,1,4,9,-2,-1,3,-7,-7,3,-10,-9,-2,2,9,5,-3,8,-2,1,-7,-3,10,-3,5,-4,2,5,-10,-3,-3,7,-9,-3,-5,-4,-9,-3,9,5,2,8,1,-10,-8,-1,5,7,6,4,-4,-4,-7,1,-4,7,4,-2,9,-7,8,10,-10,7,8,-7,-10,-7,-7,3,5,-9,-5,7,6,-3,-3,-8,-1,-9,6,3,-7,3,9,7,-5,-6,-9,6,-6,-10,3,2,-2,-5,6,-4,-8,-9,2,4,4,8,10,9,-3,7,-8,2,-1,-6,-4,-2,-7,3,8,-5,-5,6,-8,-3,5,-9,-10,-2,-9,-2,9,7,-6,5,6,-4,4,-10,6,-5,5,3,6,-8,4,-8,-5,-10,3,-5,-5,4,1,-4,-7,-8,-3,-8,8,2,6,-6,-4,2,-2,-10,5,6,6,-3,-9,3,-1,10,7,-1,3,5,-4,7,-3,-2,-9,-6,-10,-5,-7,-10,-9,8,-2,2,8,3,4,7,4,-8,10,7,-3,9,-1,10,9,8,9,-7,5,9,1,-9,-9,-8,-2,-9,7,7,-6,6,7,7,3,-2,-5,10,-1,10,7,-9,5,6,-7,-8,1,6,-9,5,8,-10,10,-8,-8,-3,8,-6,3,5,-8,-10,-8,-9,1,10,-1,4,-8,-4,-3,-3,-2,-6,-4,2,-7,-3,3,3,-5,-5,1,8,2,-10,-3,-9,-4,10,9,2,-6,-10,-6,-3,6,-5,-7,-8,9,5,-1,-6,1,-2,8,4,-8,1,7,-3,1,-10,3,7,-6,-3,-9,1,-5,-10,-9,-4,-1,1,8,1,-3,6,-8,9,7,10,-1,6,6,-6,4,-3,5,-3,1,-10,4,2,1,6,3,2,9,-9,-7,3,7,4,-2,-4,-10,9,2,-6,3,1,-9,10,-2,-4,-4,-10,-3,-2,3,9,-2,-9,-8,-7,6,6,10,5,3,-3,-4,-7,-9,-3,-4,-6,-1,-1,10,9,-8,3,-1,2,-8,2,-7,-1,7,-9,-6,-9,1,-7,10,9,1,5,-2,7,-1,-2,-7,5,8,-6,10,-3,-7,-2,-6,-4,6,-10,-8,8,3,10,-4,-5,10,7,9,10,10,-3,-4,-3,10,-9,-10,8,9,-5,-4,7,2,-3,-6,4,-7,-10,6,1,7,-4,9,10,1,-2,4,10,-5,-6,8,-5,-9,-5,-8,-2,-8,-2,10,6,-5,-8,-10,-6,3,-6,-4,-5,-5,9,-9,-8,7,6,2,-1,-2,8,9,-7,-10,3,-3,6,-9,3,3,-4,3,-8,-2,2,7,-8,-7,-9,9,10,8,-1,-8,4,-8,-2,8,6,8,-6,9,1,10,-3,-2,2,-9,-9,-9,-8,1,6,1,-1,-9,6,-10,5,9,-10,3,2,-7,6,-6,-1,-6,8,10,-6,6,-8,-9,8,-3,8,10,-7,-1,-3,1,3,2,3,-1,-2,1,3,4,-9,-8,6,-4,-9,8,-1,-7,-6,-6,-2,10,-3,-5,-2,-6,10,5,-5,9,-6,-5,5,1,-2,2,5,-7,2,5,-3,-2,-8,-8,-8,9,3,-2,8,4,2,2,-6,8,-3,10,5,-8,1,-7,3,6,10,8,1,5,-6,5,-10,-9,-7,10,3,4,-5,6,7,-6,9,-4,-8,6,-8,5,5,10,3,1,-7,1,-9,10,8,-2,1,-7,-5,-2,-5,8,3,9,7,3,8,3,-10,1,8,2,9,8,-4,6,7,9,-1,5,10,-1,-1,-6,-7,8,-2,7,-2,5,5,-7,-7,-4,5,-8,9,-3,-4,-1,8,8,-2,1,-10,-1,-10,-9,5,5,5,4,3,-4,8,9,7,-6,-4,4,-5,-3,3,2,-7,7,2,-6,1,-3,-5,7,-4,2,9,-6,-3,9,-2,4,-10,1,-2,-7,7,4,-6,6,3,8,4,-8,2,2,10,3,-5,-2,-1,10,10,-2,4,-6,5,-2,-9,-7,8,5,5,8,2,7,-10,3,-2,8,-10,4,10,6,4,10,-3,2,5,-10,-3,-2,5,-4,-10,-2,9,-8,9,8,-7,9,-5,10,2,-9,-8,-7,6,-9,-6,-9,-6,-3,10,2,10,-7,-4,-7,8,3,-6,-8,-4,3,9,-6,-6,4,8,3,-9,5,1,2,-7,-5,7,-9,10,2,1,-6,5,-5,6,-3,10,8,1,9,5,2,7,3,-3,-7,-3,3,3,-2,-6,5,4,-5,3,2,-8,-10,-6,-4,-7,5,-6,-7,6,9,6,-6,-7,-5,7,-10,4,1,4,10,6,1,-4,10,-10,10,3,6,8,-2,-1,-1,-4,-4,8,10,-9,-4,3,-3,-3,1,-2,7,10,-7,4,5,-10,6,3,2,9,7,1,5,6,1,-2,-7,2,3,-4,5,7,4,9,4,-1,10,-2,6,-10,5,7,-6,8,4,10,-7,-3,7,-6,-8,3,-9,-2,2,-1,-5,10,7,3,-9,-3,9,9,5,-10,-4,-10,7,-7,-5,-7,1,2,-5,-1,9,3,7,-6,1,5,9,8,1,-9,8,-5,-5,-6,5,5,9,-1,-3,-1,5,10,5,-3,3,-1,10,-9,6,-5,3,2,-1,-10,-2,-1,-9,4,-8,8,-1,-4,6,7,-9,10,4,3,5,-2,-6,-7,-3,-7,-9,2,-4,2,10,-10,2,8,-2,-5,-8,-7,1,9,6,-3,-1,-5,-1,-6,4,9,-6,6,-10,6,-8,-2,8,3,9,6,-2,6,-6,4,8,10,2,3,-6,2,3,-5,7,-2,-3,-6,-9,-10,-7,-9,-10,1,6,4,5,8,-1,-9,-10,-5,-1,-9,5,7,4,9,6,5,-5,4,6,10,-6,4,-9,-2,-1,-1,10,10,-8,9,-10,6,5,7,-3,-7,-3,-6,1,5,8,-8,-5,-6,9,7,-4,-7,2,-10,-9,1,-9,8,-4,4,8,4,-2,8,-8,1,5,-10,-1,1,9,-4,8,10,5,-8,8,6,-2,1,7,-1,1,-1,-2,-2,4,-9,10,-6,3,-5,6,1,6,-6,-6,-9,-8,9,3,-9,7,-1,7,-1,-1,-3,10,3,-8,10,7,10,10,-5,1,1,-4,-7,10,-3,-4,8,-2,9,3,3,1,-7,-5,5,8,5,6,5,10,7,-6,-8,-9,8,8,-1,-7,9,3,-7,8,5,4,10,-9,7,-5,4,4,3,5,3,4,-5,6,10,-6,9,-4,-3,7,8,5,-5,4,-2,-4,1,7,-7,-8,6,-1,-3,6,-9,5,5,9,-10,-8,4,-7,1,10,6,6,-3,7,-5,-3,-5,10,-2,-2,2,7,3,10,8,4,2,-6,-9,3,5,6,6,-10,7,-1,3,4,1,-9,-7,-5,-3,4,-5,5,4,-9,-9,9,2,-4,7,8,5,-1,10,-1,-8,-4,3,4,-3,8,-4,8,8,-1,-4,-6,-8,-1,-4,3,7,-6,9,8,3,-5,-4,4,-7,-6,6,9,-9,-4,1,5,-7,8,3,7,3,-4,5,6,3,-2,-8,-6,-1,9,10,-2,7,2,-8,-5,-2,-6,8,-10,8,1,5,2,-10,10,7,6,3,-5,8,10,10,9,-1,-9,3,6,9,-5,-1,8,6,3,1,-10,1,-9,9,-8,-4,-1,1,6,5,9,-6,-5,9,4,7,9,4,-8,-3,-5,-7,6,4,-6,-5,7,1,6,10,-10,-3,-7,-4,-2,-3,-5,-1,-8,5,6,-8,1,-4,9,-6,5,7,-6,8,7,-5,2,3,3,-4,8,-3,-3,-6,3,9,-1,9,-7,-7,8,9,10,-2,2,5,9,-10,4,-5,8,-4,-2,8,10,6,-9,-10,6,5,7,9,7,8,-5,-10,-7,-4,7,-8,1,-7,-8,-1,-8,-2,8,2,-1,7,-3,9,-1,-1,-6,7,5,-8,-2,7,7,6,-3,1,9,9,6,6,-4,-6,-9,8,1,-7,8,5,-5,3,9,3,-3,-4,4,-6], dtype = "uint8")#candidate|7792|(1800,)|const|uint8
call_7790 = relay.TupleGetItem(func_6379_call(relay.reshape(var_7791.astype('float64'), [6,]), relay.reshape(const_7792.astype('uint8'), [1800,]), ), 1)
call_7793 = relay.TupleGetItem(func_6383_call(relay.reshape(var_7791.astype('float64'), [6,]), relay.reshape(const_7792.astype('uint8'), [1800,]), ), 1)
output = relay.Tuple([bop_7779,call_7790,var_7791,const_7792,])
output2 = relay.Tuple([bop_7782,call_7793,var_7791,const_7792,])
func_7798 = relay.Function([var_7778,var_7791,], output)
mod['func_7798'] = func_7798
mod = relay.transform.InferType()(mod)
mutated_mod['func_7798'] = func_7798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7798_call = mutated_mod.get_global_var('func_7798')
var_7800 = relay.var("var_7800", dtype = "bool", shape = (14, 8, 3))#candidate|7800|(14, 8, 3)|var|bool
var_7801 = relay.var("var_7801", dtype = "float64", shape = (6,))#candidate|7801|(6,)|var|float64
call_7799 = func_7798_call(var_7800,var_7801,)
output = call_7799
func_7802 = relay.Function([var_7800,var_7801,], output)
mutated_mod['func_7802'] = func_7802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_7914 = relay.TupleGetItem(func_5675_call(), 0)
call_7915 = relay.TupleGetItem(func_5677_call(), 0)
output = call_7914
output2 = call_7915
func_7919 = relay.Function([], output)
mod['func_7919'] = func_7919
mod = relay.transform.InferType()(mod)
output = func_7919()
func_7920 = relay.Function([], output)
mutated_mod['func_7920'] = func_7920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6098_call = mod.get_global_var('func_6098')
func_6099_call = mutated_mod.get_global_var('func_6099')
call_7921 = func_6098_call()
call_7922 = func_6098_call()
func_6851_call = mod.get_global_var('func_6851')
func_6852_call = mutated_mod.get_global_var('func_6852')
call_7927 = relay.TupleGetItem(func_6851_call(), 0)
call_7928 = relay.TupleGetItem(func_6852_call(), 0)
func_7758_call = mod.get_global_var('func_7758')
func_7762_call = mutated_mod.get_global_var('func_7762')
const_7930 = relay.const([-7.590464,1.676112,9.667340,-3.354642,-7.597605,7.197533], dtype = "float64")#candidate|7930|(6,)|const|float64
const_7931 = relay.const([-2,6,-9,-7,-2,7,2,-8,3,-6,-4,4,-10,-8,-10,4,2,-1,5,-2,-2,-1,-1,1,-4,5,-4,3,-6,8,-2,8,-4,-6,9,-6,-7,9,3,1,7,-7,-9,-4,-1,-10,7,-8,-7,8,2,-8,8,-8,5,2,7,4,-8,-10,-1,2,6,-8,4,-8,-9,-7,4,-10,7,3,-9,-10,3,8,8,-3,9,7,7,-2,-4,3,-6,-6,-5,9,-6,-3,-8,-5,10,-5,1,-4,9,-5,7,-8,-1,8,-3,-1,5,-10,-8,3,4,9,-10,-4,-1,10,8,-2,4,6,6,-8,5,4,-4,-1,5,-4,5,1,-8,5,-3,-5,-7,-6,-10,4,2,-9,4,-5,-10,-3,-10,2,-7,3,3,9,-3,-5,-9,10,-6,10,-9,-1,5,-7,-8,2,-5,7,5,10,-1,2,-3,-1,-1,10,-5,2,-3,-2,7,8,9,2,3,3,-8,-4,-5,-9,-6,-8,-10,-1,-9,-5,5,6,1,9,9,-10,4,7,8,8,9,-5,8,1,8,-2,1,8,-6,-8,8,-4,-1,-4,1,3,9,8,-5,-5,-4,6,4,9,-3,-9,-4,-3,-7,6,-10,7,-8,-9,5,7,-10,7,9,6,-3,-10,9,4,10,-4,-8,2,-8,-10,-4,2,-10,-7,-5,10,1,4,5,6,5,-8,4,10,2,5,-7,-9,8,-9,-1,10,10,2,10,-3,-1,-8,4,7,8,-1,10,5,7,2,2,10,4,7,3,8,2,8,-6,1,6,-10,-3,-8,-6,10,2,9,-3,1,8,-9,7,-10,10,-6,5,-7,-10,1,-5,5,-3,5,-3,-2,-6,-5,8,-6,7,7,10,2,-8,8,-6,-1,7,6,2,5,1,-3,-5,7,4,6,7,4,3,-9,4,1,-7,3,5,1,8,-4,4,-5,-5,-2,8,-8,-9,1,8,-9,9,6,10,9,-3,2,-4,8,5,4,8,-6,8,4,-9,2,-5,-3,8,-4,7,-8,3,2,6,3,7,-2,-9,2,-9,8,-5,-10,3,5,10,-2,-9,-10,2,2,-3,6,-1,9,-3,6,8,-2,-10,2,10,10,10,-8,-5,4,5,9,-6,-7,-7,-8,9,-7,-9,-6,3,-2,-9,-7,-9,2,1,-1,4,-8,3,8,-8,-10,4,-7,5,3,-8,-6,-1,4,-2,9,-4,-6,4,8,9,-10,5,1,5,-2,4,3,-8,7,1,-3,4,-2,3,4,-10,-6,-2,-5,-3,-1,6,-4,10,-4,1,5,-9,8,9,-6,4,7,3,4,-10,-4,-10,3,-4,-10,4,-2,4,-5,-10,5,-4,-2,4,-2,-1,-3,7,-9,-2,-7,6,-1,9,-7,-6,-5,-3,-7,2,-1,6,-2,-1,5,3,10,-3,-2,-7,-1,1,7,-4,-3,4,7,-10,-6,-3,-4,4,6,5,10,-8,8,9,-3,10,7,-2,5,-7,-2,-1,-5,-10,-4,8,8,-5,5,-2,6,6,5,2,-1,2,-9,10,9,4,7,-7,10,-3,-7,5,8,-1,-9,-4,1,-4,10,4,-3,3,10,5,4,-3,5,-6,-9,-8,9,-1,-10,1,-10,-9,1,5,6,1,9,10,-4,-9,-5,-3,10,5,2,2,-2,7,5,-7,1,10,2,6,-8,8,3,-8,-7,5,-10,1,9,5,9,4,10,2,6,7,-6,-9,-10,1,1,-9,4,5,8,-7,2,9,-7,-3,2,7,8,-6,-3,8,-7,-7,6,6,1,-5,7,6,-8,7,2,-7,-9,1,-9,8,-5,-7,-4,-9,6,-8,7,-7,5,-4,-7,7,3,8,6,-8,-10,4,-9,8,6,-10,-2,-7,-10,-1,-1,1,-6,-5,-6,3,-9,-9,-9,-6,5,-5,3,-3,2,-8,-4,-6,1,-1,4,4,-1,4,9,3,7,2,-2,3,-3,-7,-3,7,4,-2,2,-4,8,-2,-1,3,-5,-8,-2,-2,-3,9,-4,1,-6,8,8,2,-1,10,-1,8,8,6,-8,-2,-9,-8,-9,1,-9,-3,1,2,2,-2,5,-3,-7,-2,7,-5,-8,7,1,3,9,6,3,-9,-9,2,-2,-10,3,-3,7,5,10,-3,4,-10,3,-10,-5,-5,-2,2,-1,-1,4,5,2,9,5,-5,-9,1,-5,2,2,4,-4,5,9,-4,-2,4,-10,-5,6,-4,-7,7,-8,1,6,-3,4,-10,6,3,2,1,2,-8,8,-3,9,-6,-1,-6,-4,1,-8,8,4,1,3,-9,8,5,-1,2,2,-8,6,-2,-4,-8,-4,6,10,-6,-9,-9,-2,2,5,-3,1,10,5,8,4,2,2,6,5,-6,6,-1,2,-2,-7,-5,-6,8,8,-3,-3,10,2,9,7,2,-3,-2,8,3,8,-6,3,-6,-1,3,3,-1,-9,-4,8,-2,1,-5,5,-2,3,7,-3,9,3,8,-5,-5,-1,-5,-5,7,8,-4,-9,-7,-6,10,-1,-3,-1,2,-2,-2,-6,-10,-1,-6,9,5,-6,-10,-9,2,-9,4,-8,6,5,-2,5,1,-1,9,9,-7,8,-9,-10,-9,-8,9,-1,-7,-2,-7,-3,5,7,3,5,3,9,-2,-7,-8,-4,-2,-3,-3,-9,2,-1,7,10,-8,-10,-10,-4,-10,3,-7,-6,-4,-9,-3,-7,4,3,-10,1,-8,8,2,10,5,9,-10,1,1,1,2,-1,8,6,-7,-5,-8,4,-6,-1,6,3,4,-10,-5,10,-8,4,9,5,8,2,2,-5,10,9,7,-2,7,-7,2,2,10,-8,-7,-6,5,-1,6,7,-4,-10,8,2,-3,-10,6,-4,7,9,7,6,-3,-8,3,-5,-2,9,-8,-7,-2,7,-6,-8,5,6,-1,1,-9,5,2,10,4,6,-2,2,-10,4,9,1,-7,5,7,-6,-5,-8,-10,3,-10,5,-1,-6,7,9,1,-2,-4,8,3,10,4,6,-10,5,9,-2,8,-3,9,1,-9,10,-9,9,-2,-9,10,-10,8,10,7,8,-1,10,-3,10,3,-9,10,-4,8,-1,-3,-9,-8,8,3,1,-9,4,4,-3,-5,1,2,-10,-3,1,1,4,-10,-5,10,-7,-10,8,6,-3,6,8,1,10,-8,9,10,-9,8,3,3,-7,-10,7,8,7,-5,-4,3,-2,5,-2,-7,-3,-6,-4,-6,-2,-6,10,-10,-10,2,-5,9,7,1,7,10,-4,8,-7,-7,-1,-9,-6,8,6,-1,-6,-8,-2,-2,-6,3,-3,8,-7,1,7,-9,-1,-1,10,9,10,-10,-8,-5,7,6,1,1,8,-6,-4,-10,-5,-5,2,-10,3,7,2,-8,2,-10,10,8,5,-5,-10,-5,7,-9,-2,-1,1,-6,2,4,10,6,7,-7,10,9,-10,-7,4,4,-5,1,-5,-8,5,-2,8,-4,-1,-5,-5,-3,1,-2,3,1,2,-3,10,-5,-5,-9,-2,8,-4,-4,-9,5,-4,5,2,-7,-7,-1,-4,-4,-3,6,6,9,-8,2,-2,7,6,5,-7,2,5,-3,-2,-9,-1,-10,-8,-8,4,4,-9,-1,-3,2,-9,6,-10,2,-7,6,-6,7,-5,-10,5,4,5,8,2,-9,-4,4,5,7,6,2,-10,-8,3,6,2,-3,-5,-6,-3,-7,-2,-3,6,-1,-5,-4,1,2,2,6,-9,-2,2,-3,-4,3,3,5,10,-2,8,-10,10,4,1,5,-9,-4,4,7,8,-8,-8,10,8,2,8,4,5,9,8,-8,8,9,1,-3,-7,-2,3,-2,-4,4,8,1,8,1,-1,-4,-3,2,-8,-5,-6,-2,6,10,10,-3,4,4,-1,7,-6,-10,3,-2,-9,-7,-1,3,-5,-1,-7,-5,-6,2,-4,1,1,8,5,6,-9,8,4,-1,-6,-5,-5,-5,-9,-2,7,4,7,1,-4,-8,2,4,9,4,-6,-10,9,-3,4,3,9,9,-7,-9,-7,-5,3,4,5,-9,9,3,5,-8,3,10,7,9,-10,-9,5,6,3,10,-2,-8,-8,-10,-7,2,10,-2,-1,-4,-9,-8,7,2,5,-8,5,-7,7,8,8,3,-3,-6,8,-3,-3,3,6,7,-1,8,1,9,-5,-1,6,-2,9,-3,-9,5,-7,9,-6,-7,-3,3,2,-9,6,1,-4,-2,2,3,2,-3,-6,4,-1,9,6,8,-3,-7,9,-2,3,-9,9,-6,9,2,2,-9,7,-8,1,2,-5,4,7,8,-2,-2,-10,-4,8,6,1,4,5,-4,-8,-2,-3,6,2,7,2,7,-10,10,-4,-9,-2,-7,-2,7,5,-2,6,10,5,-4,-9,-10,-9,-8,-7,-1,9,-7,-9,3,-4,4,-7,9,-2,-9,-3,1,-9,6,7,6,7,8,-10,2,8,-3,10,6,-7,4,-4,-4,5,9,-9,-9,8,2,10,1,2,4,-10,-4,5,-6,3,4,-2,-2,-7,7,8,-5,-5,-8,-4,7,-5,10,-8,-1,-8,1,-5,9,3,9,-7,-10,1,-9,2,-9,-8,-7,7,7,2,-3,10,10,8,-3,-4,-7,-4,-1,4,-3,9,7,9,-1,-4,7,6,5,7,-1,4,-7,6,-5,8,-1,10,-4,5,-10,-8,1,4,-10,-6,3,10,-8,-6,7,3,-2,9,3,-9,-1,2,3,-1,-1,5,-7,-2,1,10,-3,-9,7,10,10,-7], dtype = "uint8")#candidate|7931|(1800,)|const|uint8
var_7932 = relay.var("var_7932", dtype = "float64", shape = (924,))#candidate|7932|(924,)|var|float64
call_7929 = relay.TupleGetItem(func_7758_call(relay.reshape(const_7930.astype('float64'), [6,]), relay.reshape(const_7931.astype('uint8'), [900, 2]), relay.reshape(var_7932.astype('float64'), [154, 6]), ), 0)
call_7933 = relay.TupleGetItem(func_7762_call(relay.reshape(const_7930.astype('float64'), [6,]), relay.reshape(const_7931.astype('uint8'), [900, 2]), relay.reshape(var_7932.astype('float64'), [154, 6]), ), 0)
output = relay.Tuple([call_7921,call_7927,call_7929,const_7930,const_7931,var_7932,])
output2 = relay.Tuple([call_7922,call_7928,call_7933,const_7930,const_7931,var_7932,])
func_7935 = relay.Function([var_7932,], output)
mod['func_7935'] = func_7935
mod = relay.transform.InferType()(mod)
var_7936 = relay.var("var_7936", dtype = "float64", shape = (924,))#candidate|7936|(924,)|var|float64
output = func_7935(var_7936)
func_7937 = relay.Function([var_7936], output)
mutated_mod['func_7937'] = func_7937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6992_call = mod.get_global_var('func_6992')
func_6993_call = mutated_mod.get_global_var('func_6993')
call_8086 = relay.TupleGetItem(func_6992_call(), 2)
call_8087 = relay.TupleGetItem(func_6993_call(), 2)
output = call_8086
output2 = call_8087
func_8095 = relay.Function([], output)
mod['func_8095'] = func_8095
mod = relay.transform.InferType()(mod)
output = func_8095()
func_8096 = relay.Function([], output)
mutated_mod['func_8096'] = func_8096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6757_call = mod.get_global_var('func_6757')
func_6758_call = mutated_mod.get_global_var('func_6758')
call_8133 = relay.TupleGetItem(func_6757_call(), 0)
call_8134 = relay.TupleGetItem(func_6758_call(), 0)
func_8095_call = mod.get_global_var('func_8095')
func_8096_call = mutated_mod.get_global_var('func_8096')
call_8137 = func_8095_call()
call_8138 = func_8095_call()
output = relay.Tuple([call_8133,call_8137,])
output2 = relay.Tuple([call_8134,call_8138,])
func_8159 = relay.Function([], output)
mod['func_8159'] = func_8159
mod = relay.transform.InferType()(mod)
output = func_8159()
func_8160 = relay.Function([], output)
mutated_mod['func_8160'] = func_8160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6851_call = mod.get_global_var('func_6851')
func_6852_call = mutated_mod.get_global_var('func_6852')
call_8208 = relay.TupleGetItem(func_6851_call(), 0)
call_8209 = relay.TupleGetItem(func_6852_call(), 0)
output = call_8208
output2 = call_8209
func_8210 = relay.Function([], output)
mod['func_8210'] = func_8210
mod = relay.transform.InferType()(mod)
output = func_8210()
func_8211 = relay.Function([], output)
mutated_mod['func_8211'] = func_8211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6689_call = mod.get_global_var('func_6689')
func_6691_call = mutated_mod.get_global_var('func_6691')
call_8214 = relay.TupleGetItem(func_6689_call(), 2)
call_8215 = relay.TupleGetItem(func_6691_call(), 2)
output = call_8214
output2 = call_8215
func_8220 = relay.Function([], output)
mod['func_8220'] = func_8220
mod = relay.transform.InferType()(mod)
output = func_8220()
func_8221 = relay.Function([], output)
mutated_mod['func_8221'] = func_8221
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8222 = relay.var("var_8222", dtype = "int64", shape = (6, 5, 14))#candidate|8222|(6, 5, 14)|var|int64
var_8223 = relay.var("var_8223", dtype = "int64", shape = (6, 5, 14))#candidate|8223|(6, 5, 14)|var|int64
bop_8224 = relay.multiply(var_8222.astype('int64'), relay.reshape(var_8223.astype('int64'), relay.shape_of(var_8222))) # shape=(6, 5, 14)
uop_8231 = relay.acos(bop_8224.astype('float64')) # shape=(6, 5, 14)
func_5984_call = mod.get_global_var('func_5984')
func_5987_call = mutated_mod.get_global_var('func_5987')
const_8234 = relay.const([1.740819,4.761182,5.029359,9.734583,1.195180,9.327080,-9.139554,4.433497,-1.426147,-7.799798,-8.816032,8.702895,-6.084058,1.216562,-2.665347,-1.334753,-4.970463,-7.543276,9.620554,1.770061,8.303568,-9.183162,8.715178,-2.150778,-8.169900,3.697886,7.047664,-0.101799,-2.024130,5.051901,-8.623995,-7.280026,3.085735,-1.298758,-2.037816,-0.165123,-9.672469,-4.750512,-5.216634,2.225946,8.590321,0.464385,-5.741364,4.219319,-4.639176,9.069181,-6.351268,8.923548,8.143844,-3.305541,6.115967,8.904887,4.572308,-7.173164,-4.614216,9.410856,-6.303102,-0.638657,-5.032468,4.883551,6.224888,3.473130,-5.315229,5.504336,4.385434,-4.273972,-0.890702,-6.897643,1.147238,8.518011,6.988037,3.382857,-8.978328,-8.228604,7.605625,0.978965,-6.800089,-3.268697,7.286773,-2.038398,-7.716051,8.870433,-6.974225,-6.435265,-7.567220,7.825711,-7.008128,6.193781,3.523734,0.228546,1.994928,3.401425,-7.046857,9.701177,2.912668,-7.151646,-1.176279,5.566475,1.620082,-8.170143,0.038755,2.537720,-9.793822,-8.364689,-3.313955,0.609232,-4.693627,-4.256322,-7.554559,-3.405597,0.873429,8.041744,4.706132,2.479657,2.827880,-6.460634,2.191322,-8.465076,9.571049,6.499846,1.498831,4.019255,7.714651,-3.603717,1.779065,-0.516166,1.302142,-7.741846,-9.651931,5.508505,7.583810,-2.050768,-9.301039,8.325559,-0.466940,4.625300,5.504634,6.382067,-7.419855,-2.282261,2.559284,5.681000,1.107001,4.919705,1.121278,2.023295,-5.140003,8.877226,-2.082205,-7.100214,-3.672880,-4.550241,4.201700,-8.638755,6.294623,4.826070,6.845310,6.318352,1.003572,-8.881479,-6.558967,2.278920,-8.951227,6.755976,6.932555,0.945600,5.928737,2.219806,0.808301,5.266460,8.810831,8.667826,4.193395,0.894150,5.595163,9.935416,2.760987,7.550408,3.259980,-7.606711,-7.938485,-2.574316,-9.128783,-3.651625,-3.228560,-2.334685,1.116159,-9.939125,9.741853,6.192639,-8.592562,-0.832447,4.243607,5.145427,-7.399404,-4.281897,0.315995,-5.884171,-2.178190,0.539893,-4.469495,-1.697075,-7.152999,-7.881057,-2.591683,-6.831509,-4.547989,-3.873346,-6.989145,6.348881,-8.353556,-5.487434,-9.985703,8.115084,5.879365,4.454728,-2.304042,8.404942,9.915555,-1.652111,0.582745,-8.306524,7.581113,-9.383376,-2.335628,-9.901678,4.522347,-2.363351,-5.649183,-4.193314,-2.788223,2.397488,-9.648781,5.374871,6.647791,9.824011,9.211681,-1.825126,0.444601,-0.170500,-7.084933,-2.987660,5.421125,-2.579887,-5.443904,-1.231605,-3.854057,3.789641,-0.156832,-0.626336,2.335739,1.692331,1.662384,8.953268,-8.622700,-8.476347,5.988788,-2.989107,1.952889,-8.858644,6.229647,8.270326,-0.037959,-1.868630,9.503963,-7.503623,3.743988,6.418794,-6.034280,8.765081,0.568930,4.074474,-8.144434,5.469271,-5.979979,4.644481,-3.672251,-5.436851,4.793044,-9.155067,1.060766,8.877776,-1.713709,-2.964284,-2.966865,8.418237,5.769034,-0.215286,-6.097014,-4.494146,6.597236,-3.338710,-5.966968,-2.761417,-4.683060,-7.287198,-4.445395,-0.140394,1.038196,0.218810,-9.427646,5.527725,4.005923,0.615820,1.826866,3.126938,0.827479,6.769883,-6.873903,0.708097,-4.986247,-6.189432,-6.669038,3.877870,1.081259,0.998891,1.386408,-9.497002,-4.864134,-3.578607,8.100177,-9.121712,0.221431,-0.171917,0.196951,-5.773655,3.399834,-9.390209,5.741673,8.977603,-5.935673,-8.963271,9.926255,7.347212,-4.123567,-7.793126,7.017643,-9.929714,-2.152228,-5.901597,3.351445,2.025520,2.391865,-0.483339,4.122706,-4.514882,-1.593750,0.207787,7.350888,8.006164,-5.597353,4.077360,-1.460912,-3.694915,-5.434426,-6.840454,-7.688274,-5.938737,-6.977762,-8.054569,3.391395,5.913416,-8.972147,4.077167,5.288267,7.707657,-1.829801,5.869580,7.780329,7.269016,-0.605775,7.129103,0.499583,0.106703,-8.826177,5.466740,-7.601009,3.438028,9.237007,-0.960119,0.364558,-8.747031,-6.190081,-6.421679,-6.721820,6.622032,0.664610,6.901965,-9.693121,-7.188560,-9.312920,-2.787124,6.253157,5.172484,6.801276,5.087896,-5.422012,-4.098520,-7.229944,-4.144698,0.862000,9.228339,-9.318875,0.850854,9.424342,5.444992,-6.847429,-0.424856,3.902480,-4.244841,4.552726,6.696829,-3.821292,-7.694718,-9.054204,8.765267,-5.651293,-4.678842,0.677013,-7.393219,-6.021383,-9.527007,2.394948,-1.493147,1.093629,5.263166,-5.688806,-4.201767,0.977858,5.772484,3.844660,1.912078,-4.616816,-1.808353,5.230416,-6.534588,-3.912732,-7.698739,-6.394676,-6.451667,-4.220237,-7.543866,-4.105820,2.222008,-3.483482,2.078489,1.960189,5.650914,-1.073623,7.801749,-5.218745,0.527409,-1.521151,8.175856,-5.840423,-1.233576,7.709815,-1.147236,9.163935,2.229160,-5.395624,8.069886,6.078947,7.338496,-0.806682,-8.944896,4.905979,8.812519,5.874682,-1.694430,-1.233054,-2.917041,1.647500,0.485107,-0.468729,-5.696487,1.161164,-3.663659,2.683480,3.675405,-5.835580,-8.038962,5.173207,-7.939765,-5.932705,2.148653,7.847228,5.877213,-0.464624,-0.946242,8.708426,3.297496,-4.118204,-6.831047,-3.259249,-3.833954,0.377932,-7.793917,-8.573580,9.582265,3.909157,-8.959187,4.208472,1.546025,-5.891535,-8.928697,4.826307,8.748700,-5.326330,9.285052,9.079518,0.547608,-9.665291,8.977531,-7.610772,-5.502938,0.417838,1.306593,-2.411776,-6.725689,-6.729661,-7.272825,1.869971,4.272401,3.006465,-4.332637,-7.292936,8.645259,6.496289,-3.007569,-7.215955,0.791300,9.473060,-0.915517,3.609824,-4.272999,1.216630,7.657044,-7.035072,-2.268411,0.099300,-8.335567,8.042718,8.556032,5.803422,-8.488593,-5.531541,5.254030,-8.668231,5.937603,2.711932,3.061862,-2.683976,7.507145,-2.971131,4.131163,-0.006887,6.902325,8.712081,-7.187762,-0.239433,-1.275188,-3.416676,-9.841076,5.730549,-9.320829,-5.980124,-6.116404,9.047687,2.522328,6.378698,0.939340,1.074254,3.797052,6.993434,6.816674,0.468115,-2.210273,2.903592,-8.033217,-6.922459,8.295995,4.733313,-3.078239,3.390316,-4.456009,-5.259194,-2.360126,-8.341259,-3.420964,4.846376,-8.922397,-1.205548,-0.996841,2.520016,-0.139462,-8.880340,-8.027516,1.101196,-7.980634,1.230286,-8.955599,-6.133734,5.990454,-8.310686,8.608438,4.833882,-3.733313,-4.533852,7.451220,-0.731450,-1.199516,-0.766042,-4.128730,6.776581,-1.763773,0.003544,-7.247972,-8.377562,-7.399681,3.499666,-7.596641,1.171492,-2.021026,-8.420585,-1.710357,-7.798056,1.739633,2.706390,-7.311458,-2.372737,4.655432,1.206579,0.590805,9.015782,9.174243,6.579193,3.308313,-2.241282,5.348989,-8.099311,2.007567,-4.737324,2.419148,-4.944338,-6.783613,-8.100477,-1.816861,0.756238,7.141211,-4.271925,6.320468,9.477267,-0.269151,4.730560,-3.780980,5.725673,-2.177629,-0.374502,-7.324578,2.599733,3.948705,-1.386720,-2.612445,4.556540,6.539811,-6.525789,-2.258564,0.940397,7.020783,-7.911034,-5.797806,-3.322131,4.427491,-6.230756,5.271374,-2.540304,-1.539080,3.533639,-9.975733,-3.386752,-1.959026,-1.597277,-9.237683,8.579359,-0.257275,4.631502,-7.042312,5.918361,-3.922960,7.590464,-4.365161,-8.416044,-6.182432,6.244870,9.764997,-0.104124,-2.201295,-5.879808,1.763818,-7.319015,4.051284,-1.174908,7.571152,9.832047,-3.127479,-4.262071,-3.887221,8.878258,-9.066873,8.206503,-9.034459,2.935328,-5.619662,-3.366586,1.557870,-9.220545,-4.935072,-3.472737,-5.709261,-3.086172,-5.319330,0.700952,9.078935,-1.884660,4.557729,9.890115,8.862150,-5.135341,-8.609331,6.453076,-3.115020,-6.339845,2.085335,-7.894316,-7.724341,-5.952843,4.849605,4.699012,-2.750730,-4.255733,7.476800,6.036916,-0.430936,4.892756,-1.769258,8.869889,-4.990367,-1.853564,-3.138390,4.889842,8.174143,-2.054960,-9.695410,0.923220,4.178961,-9.423612,-6.491930,1.392016,-5.633625,4.517102,-4.809768,4.136839,1.674863,-2.285857,-1.996180,-8.957514,2.525932,4.951814,9.299745,-1.270041,-8.744404,7.830823,-8.106684,-0.310367,2.536159,-0.152159,-4.412185,-5.988029,0.449451,2.516491,9.488735,8.903587,-1.846315,-5.490920,6.013779,-6.200655,5.100368,-9.400022,2.119271,-3.500268,0.409447,-1.182263,-1.506162,1.328551,6.779707,-7.163032,-3.817458,8.508412,-0.844771,-7.957240,-3.155317,0.579899,0.224449,4.962979,-8.891598,5.023429,-3.589682,9.614286,2.521421,-6.797396,-9.126095,0.531010,-4.248386,9.493722,-7.989233,8.255405,6.781826,-7.253518,-4.091876,7.837133,-8.879283,-8.434498,-6.316490,5.160140,-3.158455,-5.724804,-4.026854,-0.911092,-8.192281,1.229543,0.402418,6.085341,-4.737698,6.278158,5.666822,4.195994,-2.543995,8.376508,-5.777789,-9.523926,-5.004964,0.771287,-8.448085,-6.640897,0.704030,5.963796,-0.503000,3.029027,-4.287567,5.316665,8.649174,8.933709,7.833692,-7.448569,-7.901411,-3.257577,3.188050,4.607882,6.935484,-4.317293,-5.753782,-6.986937,-1.739305,3.353030,-9.340165,4.154644,7.635547,0.532602,9.055545,-2.261560,-0.328041,-6.439929,-7.117868,2.595625,7.488963,5.245971,9.861323,-2.057051,1.851463,1.337440,8.500782,-2.675857,7.284102,8.050829,0.644956,-0.208032,-8.838653,-6.433579,2.276924,9.785791,0.128675,-5.558660,-5.573769,9.223942,-9.209298,5.655754,2.367585,-5.789865,-9.555912,1.601556,-4.085962,7.966751,-0.221170,1.568578,-4.523039,3.071557,9.111709,-3.652857,-8.276268,-3.692221,-0.703689,-1.820044,3.636186,2.050100,-7.264364,7.170102,-1.714449,-3.480586,-2.843534,-7.115015,-7.505200,1.893238,6.785568,5.683395,1.675233,-6.921085,9.947396,4.364560,-2.790835,-5.981620,2.912479,7.206944,7.517770,-6.465646,8.468504,-7.285615,-4.077041,-2.511547,9.204866,-2.748345,7.086822,2.391303,2.399910,8.414167,8.167603,9.784879,0.888093,-4.136147,-9.982004,1.647309,-7.788984,1.436940,8.851189,-7.053408,0.327769,4.205721,-4.376677,2.357238,1.634614,3.097654,7.589890,7.431620,4.074524,3.611051,-2.030622,0.956782,-5.822121,-6.088815,-1.541737,-3.822842,6.241562,-7.143655,-5.482020,1.928835,-7.317185,-9.773656,0.026465,1.303088,-4.932206,-5.869442,3.009902,0.002983,-2.912724,4.405356,-3.012742,-0.897280,4.861851,2.244335,9.855478,0.014990,3.349928,5.456841,1.392454,5.582715,9.594478,-6.471574,-4.791891,-2.480291,0.908486,2.391900,0.653757,8.214384,2.110625,4.199439,-4.083476,-2.910946,-3.927728,-8.434693,-0.937203,3.791231,-7.459346,-1.840674,0.664014,1.632149,-5.035579,7.327993,1.973512,-1.422477,3.711894,0.080475,-0.869048,-9.841355,1.913592,-3.612602,-8.236530,8.610131,-3.087197,0.403784,-5.284452,-3.679462,-3.135238,-8.499689,7.955421,-6.712947,-7.093248,-2.305705,4.171441,-6.871388,6.656873,8.967288,-2.496895,-5.853209,-3.298744,4.717111,8.905157,-6.009592,2.714931,5.780793,0.201025,5.828186,3.101507,5.457517,-4.957555,1.171349,-9.481780,-0.721952,1.447079,5.425896,-8.301155,-2.971351,4.524662,2.061656,4.983152,8.962991,-8.782701,8.988361,-0.017802,6.740973,-6.530662,-3.864129,2.643325,3.102451,-1.910223,-9.775597,1.462320,-9.847328,5.065826,3.443161,-4.991737,-6.434318,-7.693334,-9.085690,-6.033182,9.602184,-8.168953,6.582244,-4.035653,-8.272117,-6.620872,-9.605585,9.225014,-0.518128,-2.668405,4.257059,-4.813764,-6.321885,1.704364,6.062329,-6.404041,-3.918256,-7.616501,-9.076186,2.676492,2.446188,3.883281,3.539117,-3.391556,-8.283291,-7.721394,8.804083,2.278547,1.498752,-2.278490,-8.691004,6.502474,3.537484,-6.717468,7.407766,-7.885841,9.419710,-0.597626,-9.310870,-7.828893,8.704689,2.028220,3.591300,-0.541494,3.454119,3.049115,9.007292,5.099317,7.122537,-0.926779,5.479019,8.701604,3.458559,7.080662,0.038166,-2.526457,-4.604773,3.584345,-8.035074,-0.648601,6.737620,8.892586,8.973325,0.797712,-3.039064,2.928661,6.697204,9.613064,-5.989170,-0.512369,-0.868764,-6.887826,-5.302816,0.926016,-4.714810,9.693073,2.567497,-5.730082,8.759868,4.533022,-4.189742,5.396171,-8.334547,-9.012954,8.640497,-8.753058,2.891703,7.618854,-9.858641,-8.122409,-5.572112,-2.641177,-3.953584,-0.916664,0.559900,4.062234,-5.270653,3.539093,8.976921,8.880761,-4.627441,0.528790,2.370654,-1.578060,1.788099,-0.841549,-2.558167,8.182081,9.705819,-8.714282,-3.496781,-5.667024,-3.125906,1.483702,8.448604,-2.238277,-6.875210,2.362227,-0.905354,9.261124,-8.535134,-2.853076,6.358016,4.384680,4.291054,7.970056,-7.351079,9.738049,3.442049,-1.410373,0.660635,-1.574147,-0.415108,1.058974,0.625521,-7.525333,-2.252603,-4.133725,7.397759,0.585130,1.450625,-0.890244,-1.428820,-9.464747,-4.918725,9.951463,-8.169633,3.984669,9.056040,4.384320,9.831309,8.893784,-9.243548,1.657949,9.849467,8.141454,5.216865,-5.591659,0.874517,7.103961,-5.316452,0.151687,5.283427,4.349753,-8.161201,9.948785,4.102473,8.730365,2.938224,0.006260,9.998530,1.433308,-2.636821,3.992217,7.729507,5.343194,1.326998,-5.493946,6.908081,4.858207,-3.870724,7.316071,4.292273,-3.447311,-9.568922,-0.571419,-7.710329,-4.314834,9.828603,-1.193733,7.972062,-1.157864,-9.889190,3.747117,1.106441,8.273970,9.489401,8.035253,-3.755491,6.705577,6.972451,-3.636569,-5.063933,-7.620023,-9.999419,-1.878977,-5.799266,-0.690484,6.524454,-4.281000,8.261658,-7.396378,-5.295948,2.192833,8.548719,8.117175,-7.409082,-4.483443,4.988260,8.861761,0.152463,0.830738,-6.288652,6.497505,0.320494,-0.246593,3.572300,7.674710,-3.568813,-4.898668,-1.222042,-0.437380,-4.141229,0.896500,7.135122,2.943472,-7.065438,-9.869097,0.342270,-2.316935,4.169985,2.064465,2.628038,4.937182,1.867175,-3.419097,0.763649,9.586222,8.290513,2.365502,8.707833,-3.943857,2.926280,-9.187135,-4.329364,9.556626,-4.151500,-5.624419,-0.669033,1.496630,-5.172283,1.795536,3.083085,2.039292,4.848821,6.247456,7.739787,-8.293914,2.683162,4.781410,6.577770,9.006152,7.977202,6.417327,7.862586,-4.167815,-8.695738,-3.886359,-6.278951,6.776529,-5.886117,-6.461485,-3.143190,3.065196,8.918837,0.102299,7.287617,-2.917119,-4.990023,-3.646157,7.282641,5.142272,-4.321357,5.777400,9.858418,-2.162625,8.227028,-0.184183,8.205078,0.501634,-6.217132,3.075975,-8.619586,7.267729,-5.465163,-2.538671,-1.994502,8.213524,7.167352,6.480371,2.677203,3.727666,-0.087094,-3.626913,8.259887,-0.669853,-3.144995,1.097599,-9.184329,-7.149684,2.738297,-5.590904,-3.001571,-7.044223,-8.845277,9.169561,-4.581123,-3.657533,-4.283499,-7.786608,7.452625,5.188470,7.627838,-5.313295,5.596644,-6.004099,7.222238,-0.698498,-4.828505,-1.046854,-9.967878,6.466036,-3.772465,1.861449,-5.555977,-5.083952,6.861517,-0.521894,-3.697832,-7.177539,2.490042,-8.727491,2.734900,-0.179016,-8.635085,-2.080240,-9.889777,8.803408,9.895250,0.074215,-9.720550,6.476080,-7.311166,-2.144683,-3.355526,-9.695085,7.674103,1.201922,-0.829778,4.893449,-3.645199,3.772684,2.317030,8.021505,-6.593240,-4.593523,-0.112154,-1.026198,5.501566,1.894048,8.049179,3.126628,3.423655,3.557290,2.018991,-5.435223,-9.661908,-6.486143,-5.560993,-7.586951,9.760844,7.672156,3.465022,-4.778252,5.388642,-9.118353,4.995371,5.732081,-2.378018,-8.402807,1.331885,7.978388,1.970667,1.791890,3.003768,-7.246841,7.515046,-3.457239,6.039011,5.446136,1.555427,8.463070,-3.332916,0.127827,1.950097,-1.326496,-7.277852,-4.179452,0.734284,8.263781,5.798618,8.427373,3.688200,9.577538,-4.317762,6.280029,9.864750,5.362743,-9.378403,-5.148442,-1.708774,-9.889041,0.805785,-8.843654,1.739226,5.916414,2.379002,8.935100,0.576156,0.142816,6.839203,6.547984,7.882246,-3.284831,3.304795,6.098689,2.934102,-9.696704,-1.378293,-0.134812,-4.413148,5.957527,-2.472744,-8.431537,4.833183,-1.407698,4.821922,9.442421,-4.609947,-5.401449,5.729383,0.716628,0.715625,6.792398,4.032933,9.272029,7.089883,6.994654,8.435053,0.351191,-0.630327,-4.994566,3.149619,-3.764908,4.942989,1.248331,5.821986,-8.993345,-3.376211,-7.730889,5.856940,6.501711,-6.833644,-6.214436], dtype = "float64")#candidate|8234|(1568,)|const|float64
call_8233 = relay.TupleGetItem(func_5984_call(relay.reshape(const_8234.astype('float64'), [8, 196])), 1)
call_8235 = relay.TupleGetItem(func_5987_call(relay.reshape(const_8234.astype('float64'), [8, 196])), 1)
uop_8258 = relay.tan(var_8222.astype('float32')) # shape=(6, 5, 14)
func_7935_call = mod.get_global_var('func_7935')
func_7937_call = mutated_mod.get_global_var('func_7937')
var_8264 = relay.var("var_8264", dtype = "float64", shape = (924,))#candidate|8264|(924,)|var|float64
call_8263 = relay.TupleGetItem(func_7935_call(relay.reshape(var_8264.astype('float64'), [924,])), 3)
call_8265 = relay.TupleGetItem(func_7937_call(relay.reshape(var_8264.astype('float64'), [924,])), 3)
output = relay.Tuple([uop_8231,call_8233,const_8234,uop_8258,call_8263,var_8264,])
output2 = relay.Tuple([uop_8231,call_8235,const_8234,uop_8258,call_8265,var_8264,])
func_8271 = relay.Function([var_8222,var_8223,var_8264,], output)
mod['func_8271'] = func_8271
mod = relay.transform.InferType()(mod)
mutated_mod['func_8271'] = func_8271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8271_call = mutated_mod.get_global_var('func_8271')
var_8273 = relay.var("var_8273", dtype = "int64", shape = (6, 5, 14))#candidate|8273|(6, 5, 14)|var|int64
var_8274 = relay.var("var_8274", dtype = "int64", shape = (6, 5, 14))#candidate|8274|(6, 5, 14)|var|int64
var_8275 = relay.var("var_8275", dtype = "float64", shape = (924,))#candidate|8275|(924,)|var|float64
call_8272 = func_8271_call(var_8273,var_8274,var_8275,)
output = call_8272
func_8276 = relay.Function([var_8273,var_8274,var_8275,], output)
mutated_mod['func_8276'] = func_8276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6145_call = mod.get_global_var('func_6145')
func_6146_call = mutated_mod.get_global_var('func_6146')
call_8316 = relay.TupleGetItem(func_6145_call(), 0)
call_8317 = relay.TupleGetItem(func_6146_call(), 0)
output = call_8316
output2 = call_8317
func_8325 = relay.Function([], output)
mod['func_8325'] = func_8325
mod = relay.transform.InferType()(mod)
mutated_mod['func_8325'] = func_8325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8325_call = mutated_mod.get_global_var('func_8325')
call_8326 = func_8325_call()
output = call_8326
func_8327 = relay.Function([], output)
mutated_mod['func_8327'] = func_8327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8325_call = mod.get_global_var('func_8325')
func_8327_call = mutated_mod.get_global_var('func_8327')
call_8499 = func_8325_call()
call_8500 = func_8325_call()
output = relay.Tuple([call_8499,])
output2 = relay.Tuple([call_8500,])
func_8522 = relay.Function([], output)
mod['func_8522'] = func_8522
mod = relay.transform.InferType()(mod)
mutated_mod['func_8522'] = func_8522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8522_call = mutated_mod.get_global_var('func_8522')
call_8523 = func_8522_call()
output = call_8523
func_8524 = relay.Function([], output)
mutated_mod['func_8524'] = func_8524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7264_call = mod.get_global_var('func_7264')
func_7265_call = mutated_mod.get_global_var('func_7265')
call_8622 = func_7264_call()
call_8623 = func_7264_call()
output = call_8622
output2 = call_8623
func_8624 = relay.Function([], output)
mod['func_8624'] = func_8624
mod = relay.transform.InferType()(mod)
output = func_8624()
func_8625 = relay.Function([], output)
mutated_mod['func_8625'] = func_8625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6851_call = mod.get_global_var('func_6851')
func_6852_call = mutated_mod.get_global_var('func_6852')
call_8640 = relay.TupleGetItem(func_6851_call(), 0)
call_8641 = relay.TupleGetItem(func_6852_call(), 0)
func_7935_call = mod.get_global_var('func_7935')
func_7937_call = mutated_mod.get_global_var('func_7937')
const_8651 = relay.const([[-8.411923,1.511403,3.114001,7.403081,8.666426,-1.224280],[2.988686,8.952622,7.123116,5.247884,-5.894589,-3.192463],[0.283627,5.238813,3.528521,-3.378880,-2.873394,-0.035685],[-7.432030,-2.866372,-1.881947,-1.118193,-3.588485,-1.948632],[8.699559,-9.267748,-9.428576,-6.670189,-7.342667,4.570824],[0.754374,-1.440580,5.191964,6.230063,-1.799874,-3.095666],[-2.439727,-4.631189,-8.808102,-7.298859,-9.798796,5.831785],[-0.094635,-9.941620,1.273670,-8.846350,-5.281418,-2.917736],[-1.273126,0.010052,1.018902,5.628380,-6.139945,4.590330],[-9.137072,-0.008156,-6.532607,2.063570,0.002755,-9.050177],[6.982628,-4.126180,0.684961,-3.000373,-8.603097,-6.005415],[4.785773,-2.300538,5.042190,-9.566723,5.053233,2.093847],[-9.897713,-0.033383,-0.506501,-3.560372,-4.437895,4.723307],[3.293332,6.551810,0.035846,-4.043083,1.758819,-8.039793],[-7.762393,-9.871336,4.811422,4.334471,4.773548,-0.268468],[-4.803517,8.893075,1.404407,-0.397178,-1.236315,-8.956077],[0.504345,-8.651765,5.909043,-0.738162,4.476421,-6.277753],[-4.172272,-1.245030,4.946606,4.553472,3.353006,-7.419322],[-5.439100,-1.968631,-6.326437,-3.166782,3.023149,-3.477427],[-5.183515,-3.640663,-6.716673,-3.066876,-7.694096,-8.667390],[7.518234,-2.319042,-0.190784,4.839696,9.516059,-9.531621],[7.039662,-4.549492,2.471319,0.596970,4.169692,-8.299120],[-3.792998,-7.427141,7.462661,4.357486,-9.524106,-6.671496],[-1.276007,5.473677,4.638678,-8.744225,9.502734,4.195589],[2.438797,-6.992081,-2.327457,-9.258802,5.151761,6.925352],[8.072364,-1.083920,-2.465890,7.867102,-7.766451,4.276948],[-8.435397,-2.663814,-1.511668,-5.038265,9.466024,-7.490168],[0.106641,-0.309892,4.143486,-3.609037,-1.852305,-8.496053],[6.855420,-5.078363,4.246238,6.705582,4.171167,7.939912],[9.962418,3.058344,-3.682888,-1.731049,3.701129,-6.204999],[-6.664024,9.700469,8.203875,-8.649452,2.943960,1.133269],[-0.102606,-1.857224,-8.197923,2.436717,-1.177216,-8.195975],[-4.928003,-5.944415,-8.212890,-8.463068,4.825742,2.402024],[4.269612,8.917476,-8.886186,9.989943,2.433730,-8.809528],[2.144835,7.701814,2.454075,-9.370801,-4.622787,4.429424],[-1.263692,-0.968428,4.025493,-0.442335,0.440450,-9.118117],[-4.675352,-1.151003,5.285957,-1.352417,-9.310792,-0.436712],[8.902258,3.535789,-8.686458,-2.394196,-3.517204,-5.113299],[8.219705,-6.319720,6.087572,-3.709344,0.416823,9.776288],[-1.510494,4.574050,-8.337558,-0.765596,3.135895,3.043674],[-4.705780,-6.208355,-6.501848,-1.330240,6.434154,-4.800351],[6.661617,3.039817,8.797918,-1.050183,-9.916591,-0.141423],[6.945957,-0.804620,-0.455315,-1.750184,-0.113334,2.919104],[-0.567367,-6.790612,5.049188,-0.928739,5.437569,4.206504],[-0.148967,-6.984701,2.863436,6.002820,0.247883,2.012239],[-4.489834,-0.228614,-5.116775,7.475907,-9.596637,6.821873],[7.681086,-2.582806,4.119259,2.946756,4.932453,-8.645403],[3.041298,-2.688397,3.187895,-7.806700,9.094234,-0.679498],[9.991081,-6.124104,7.179711,6.692029,3.603746,-5.422100],[7.971246,5.038429,7.997056,9.852462,2.649527,-9.719602],[-3.314120,-1.547664,4.942610,6.390174,3.668736,-0.376635],[8.587886,4.397771,-9.813948,2.278487,8.863873,-5.268648],[-2.933455,7.593850,2.147669,7.744817,6.541035,-7.348798],[-9.099758,0.568433,9.413962,8.194366,0.434780,-2.831029],[-0.594003,2.791779,-7.453890,-7.427706,4.008766,-8.091445],[1.813858,-5.962116,-6.142143,-1.154877,2.659097,-7.893822],[9.141715,1.911983,-2.601632,-9.677174,-1.727844,-2.468263],[-6.006747,0.056358,8.160599,-9.478506,8.218673,1.354936],[7.889756,6.427527,9.690826,-4.364608,0.840836,9.216612],[4.029987,-6.531911,7.713972,-6.922788,3.315424,0.478254],[5.700437,-2.288982,1.007220,-1.132525,2.948178,8.549782],[1.742549,4.116707,4.455345,-7.113819,7.701478,-5.392497],[-9.099349,-1.004466,3.369407,-2.766372,1.106333,0.131454],[-0.398040,-3.509291,8.048880,-3.578792,6.679372,1.000071],[-2.275007,3.723033,-3.125560,-6.690002,-0.079891,6.182317],[-8.686612,-7.201903,-6.115052,-6.988418,-6.830449,-7.218073],[-6.905370,-1.729268,-4.778408,4.210261,-8.369439,-4.891458],[-2.170296,8.768283,0.351640,-5.623337,-9.598010,-7.265955],[2.453722,4.611400,5.831383,7.924600,-7.431553,3.094162],[-5.276044,9.541084,4.464951,1.782239,-2.933819,-7.988477],[7.816284,1.789578,1.542035,-2.427724,3.829109,-9.678839],[0.967771,-1.040999,-3.781334,5.909100,-9.989617,5.297301],[-4.684307,-3.317211,8.357715,5.277505,2.564148,-3.183981],[-3.871812,4.740209,-7.215011,-1.980085,-8.124931,4.308316],[-8.815799,9.769558,6.501666,-3.008582,7.336070,-0.390152],[8.259368,-1.092123,-1.027941,8.014941,9.501786,-7.456440],[1.320183,-8.395928,-0.316778,-6.876998,-8.168328,7.193919],[-9.367390,1.743709,-4.003116,-2.868451,8.340298,4.782762],[2.696266,-2.868950,7.706879,-0.796658,4.523767,-4.393695],[-5.502613,-5.961639,-5.008393,-6.507785,2.693953,2.364657],[2.627488,0.191320,-3.259451,-5.028514,-7.521718,-0.248123],[-6.125521,-8.832588,1.363837,2.882053,0.546724,-9.605039],[4.228941,-6.473049,5.515745,6.578810,9.126180,5.470888],[1.880616,2.478071,2.656838,7.739327,-9.394845,7.555729],[0.876947,2.151018,0.033649,-0.083520,-0.111171,4.106300],[-3.839153,-3.296860,-9.721377,6.035559,6.478876,8.326870],[9.668171,-2.684318,-4.246008,0.836709,-0.529872,-7.364416],[9.486456,1.955592,9.105738,4.852149,8.858538,9.856883],[3.736016,2.444757,0.302102,4.143345,2.809944,-8.135404],[-8.603341,9.359647,-8.939769,-9.519230,4.392253,4.465080],[-7.175702,-8.515352,-1.320216,8.288668,6.335417,-4.331841],[5.415129,2.328118,-1.839264,-2.672461,9.476888,8.808353],[4.557060,6.876419,2.580882,9.045072,0.880425,4.075293],[0.893787,-2.648217,4.347587,9.435887,-7.692198,-9.834392],[-0.977294,6.296407,-4.373195,5.882640,-5.542884,-9.873995],[2.066754,-3.449774,-0.567291,-3.514591,-9.366938,-1.072945],[-3.301709,7.849596,-3.326795,7.143857,-1.267861,-4.733627],[6.584304,9.887893,2.365995,-5.629488,6.599599,0.728477],[-2.755186,-2.488831,-9.908554,9.816739,-4.110839,-8.542812],[-2.824703,-5.226599,-6.707934,9.394724,-8.109782,-3.180836],[4.035861,9.351098,1.595119,-2.255145,-1.250247,-6.362386],[7.238022,9.902663,-1.800215,-5.457403,2.320322,-1.132637],[0.255579,-8.279677,-3.863026,9.400153,9.319012,-7.939286],[-5.634421,-8.020351,0.476997,6.029629,-6.878071,0.254458],[-8.065791,8.566850,-8.329262,-1.579676,-9.843815,9.445798],[9.288444,-8.130928,0.959810,0.248623,9.440333,8.064072],[-5.402645,4.120227,7.452736,-3.443849,-8.864000,-5.988527],[1.543207,-1.338566,3.074673,-3.467810,6.940827,3.597917],[3.024898,-5.611504,-8.693594,-0.377845,-3.831145,-4.332740],[-9.672860,-0.525336,-4.191791,8.297352,2.084535,4.547035],[1.323600,0.585946,-4.856287,-2.007944,4.903203,-7.754212],[-2.481623,-3.553488,-6.496210,-8.892544,5.359233,2.317199],[7.827430,8.874518,3.812044,6.782927,-7.753775,8.780114],[5.415105,5.618542,-2.757907,8.110480,-2.502957,8.342181],[-0.054929,2.906134,-3.111460,9.818244,9.749082,-1.629041],[-2.504691,9.142282,-4.635066,6.663609,-1.757692,-9.198658],[6.682977,3.181672,-8.960254,-4.679145,8.344268,-0.078457],[9.279648,3.628279,0.720414,4.946121,-3.528153,-8.472298],[4.273162,-5.648107,-7.227050,-9.464754,-1.591991,9.556110],[-3.144883,3.407024,6.322311,-0.892826,-5.106250,7.413522],[3.080406,9.201505,-7.395512,6.429870,5.190117,5.206284],[-0.241758,9.605238,-8.011231,8.609637,1.470522,-2.593327],[2.225412,4.174436,-8.041810,2.963154,4.946635,8.773417],[-3.184782,5.591179,9.369152,-5.233005,-7.416014,-4.789106],[-8.349695,4.465607,9.710270,3.068664,-3.554395,-4.436987],[2.882091,5.018561,-3.266652,-2.365785,0.832377,-5.646317],[2.313190,-7.320944,1.858955,-5.284090,6.882033,2.921911],[3.120340,3.835384,8.711478,-8.358931,6.455592,5.945505],[6.593156,-9.812420,5.976461,9.650425,5.451961,-3.141159],[-1.543845,5.029352,-4.782234,-1.878267,4.076769,-2.915113],[4.772422,6.824455,-3.122499,-3.282474,3.361525,-6.787120],[-8.249509,2.245948,8.764572,-8.314884,-5.082608,6.246923],[-6.089415,-4.408952,1.541170,-4.480288,5.592556,2.973814],[-8.008354,4.163241,0.045811,-6.829905,1.619142,1.329369],[8.782337,0.244468,4.490024,-1.310220,-7.053745,9.980626],[6.869783,1.624124,-2.813109,-0.979294,-5.606927,-6.261064],[7.602879,1.052702,-7.942135,-1.241622,-9.968099,4.084974],[-4.257289,6.643430,-5.635528,8.874780,-7.221278,-8.009400],[0.850865,9.302497,7.260852,0.540004,-3.992808,1.940484],[-8.325610,-4.938094,9.540035,-4.496446,-1.609324,5.092460],[8.724487,-9.475554,6.183700,-3.134841,-7.092484,-3.241845],[6.825798,-5.778724,9.107815,-8.720615,6.356823,-1.143554],[-6.701801,8.790002,6.656933,4.859890,0.444244,-9.608847],[-5.191179,4.967453,9.328271,-3.315177,-4.814349,-6.430273],[2.302870,6.995787,-5.168605,2.641787,-2.796788,5.769548],[9.102516,-0.231813,-6.618725,4.013845,2.877801,0.994822],[3.305700,8.900018,1.100203,2.222881,-6.986243,8.611323],[-5.671119,8.806587,3.338022,-5.435339,4.765633,2.819534],[-5.567623,0.774339,-1.978260,-2.845352,-2.619756,7.288054],[8.070776,-3.034474,5.741622,-7.269652,5.436974,-3.295396],[-5.946469,8.725958,-7.524891,-8.359221,-1.275158,-8.293461],[-1.877216,-8.309498,6.360224,-4.586538,-0.287479,-7.743713],[7.818565,5.630696,4.550334,4.490687,7.205516,2.263891],[-0.439067,-8.534702,2.071986,8.218384,9.694137,6.470786]], dtype = "float64")#candidate|8651|(154, 6)|const|float64
call_8650 = relay.TupleGetItem(func_7935_call(relay.reshape(const_8651.astype('float64'), [924,])), 3)
call_8652 = relay.TupleGetItem(func_7937_call(relay.reshape(const_8651.astype('float64'), [924,])), 3)
func_7264_call = mod.get_global_var('func_7264')
func_7265_call = mutated_mod.get_global_var('func_7265')
call_8653 = func_7264_call()
call_8654 = func_7264_call()
func_7465_call = mod.get_global_var('func_7465')
func_7468_call = mutated_mod.get_global_var('func_7468')
var_8656 = relay.var("var_8656", dtype = "uint16", shape = (3, 156))#candidate|8656|(3, 156)|var|uint16
call_8655 = relay.TupleGetItem(func_7465_call(relay.reshape(var_8656.astype('uint16'), [4, 13, 9]), relay.reshape(call_8650.astype('float64'), [3, 2]), ), 0)
call_8657 = relay.TupleGetItem(func_7468_call(relay.reshape(var_8656.astype('uint16'), [4, 13, 9]), relay.reshape(call_8650.astype('float64'), [3, 2]), ), 0)
bop_8667 = relay.multiply(call_8650.astype('float64'), const_8651.astype('float64')) # shape=(154, 6)
bop_8670 = relay.multiply(call_8652.astype('float64'), const_8651.astype('float64')) # shape=(154, 6)
output = relay.Tuple([call_8640,call_8653,call_8655,var_8656,bop_8667,])
output2 = relay.Tuple([call_8641,call_8654,call_8657,var_8656,bop_8670,])
func_8674 = relay.Function([var_8656,], output)
mod['func_8674'] = func_8674
mod = relay.transform.InferType()(mod)
mutated_mod['func_8674'] = func_8674
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8675 = relay.var("var_8675", dtype = "uint16", shape = (3, 156))#candidate|8675|(3, 156)|var|uint16
func_8674_call = mutated_mod.get_global_var('func_8674')
call_8676 = func_8674_call(var_8675)
output = call_8676
func_8677 = relay.Function([var_8675], output)
mutated_mod['func_8677'] = func_8677
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8679 = relay.const(-1, dtype = "uint16")#candidate|8679|()|const|uint16
var_8680 = relay.var("var_8680", dtype = "uint16", shape = (7, 14, 8))#candidate|8680|(7, 14, 8)|var|uint16
bop_8681 = relay.right_shift(const_8679.astype('uint16'), var_8680.astype('uint16')) # shape=(7, 14, 8)
func_2228_call = mod.get_global_var('func_2228')
func_2234_call = mutated_mod.get_global_var('func_2234')
var_8685 = relay.var("var_8685", dtype = "float32", shape = (528,))#candidate|8685|(528,)|var|float32
var_8686 = relay.var("var_8686", dtype = "float64", shape = (1568,))#candidate|8686|(1568,)|var|float64
var_8687 = relay.var("var_8687", dtype = "float64", shape = (1, 6))#candidate|8687|(1, 6)|var|float64
call_8684 = relay.TupleGetItem(func_2228_call(relay.reshape(const_8679.astype('float32'), []), relay.reshape(var_8685.astype('float32'), [11, 12, 4]), relay.reshape(var_8686.astype('float64'), [1568,]), relay.reshape(var_8687.astype('float64'), [6,]), ), 2)
call_8688 = relay.TupleGetItem(func_2234_call(relay.reshape(const_8679.astype('float32'), []), relay.reshape(var_8685.astype('float32'), [11, 12, 4]), relay.reshape(var_8686.astype('float64'), [1568,]), relay.reshape(var_8687.astype('float64'), [6,]), ), 2)
func_1929_call = mod.get_global_var('func_1929')
func_1932_call = mutated_mod.get_global_var('func_1932')
call_8697 = relay.TupleGetItem(func_1929_call(relay.reshape(var_8687.astype('float64'), [1, 2, 3])), 0)
call_8698 = relay.TupleGetItem(func_1932_call(relay.reshape(var_8687.astype('float64'), [1, 2, 3])), 0)
output = relay.Tuple([bop_8681,call_8684,var_8685,var_8686,var_8687,call_8697,])
output2 = relay.Tuple([bop_8681,call_8688,var_8685,var_8686,var_8687,call_8698,])
func_8704 = relay.Function([var_8680,var_8685,var_8686,var_8687,], output)
mod['func_8704'] = func_8704
mod = relay.transform.InferType()(mod)
var_8705 = relay.var("var_8705", dtype = "uint16", shape = (7, 14, 8))#candidate|8705|(7, 14, 8)|var|uint16
var_8706 = relay.var("var_8706", dtype = "float32", shape = (528,))#candidate|8706|(528,)|var|float32
var_8707 = relay.var("var_8707", dtype = "float64", shape = (1568,))#candidate|8707|(1568,)|var|float64
var_8708 = relay.var("var_8708", dtype = "float64", shape = (1, 6))#candidate|8708|(1, 6)|var|float64
output = func_8704(var_8705,var_8706,var_8707,var_8708,)
func_8709 = relay.Function([var_8705,var_8706,var_8707,var_8708,], output)
mutated_mod['func_8709'] = func_8709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6145_call = mod.get_global_var('func_6145')
func_6146_call = mutated_mod.get_global_var('func_6146')
call_8774 = relay.TupleGetItem(func_6145_call(), 0)
call_8775 = relay.TupleGetItem(func_6146_call(), 0)
func_5984_call = mod.get_global_var('func_5984')
func_5987_call = mutated_mod.get_global_var('func_5987')
var_8784 = relay.var("var_8784", dtype = "float64", shape = (56, 28))#candidate|8784|(56, 28)|var|float64
call_8783 = relay.TupleGetItem(func_5984_call(relay.reshape(var_8784.astype('float64'), [8, 196])), 2)
call_8785 = relay.TupleGetItem(func_5987_call(relay.reshape(var_8784.astype('float64'), [8, 196])), 2)
bop_8786 = relay.divide(call_8783.astype('float32'), relay.reshape(var_8784.astype('float32'), relay.shape_of(call_8783))) # shape=(8, 196)
bop_8789 = relay.divide(call_8785.astype('float32'), relay.reshape(var_8784.astype('float32'), relay.shape_of(call_8785))) # shape=(8, 196)
output = relay.Tuple([call_8774,bop_8786,])
output2 = relay.Tuple([call_8775,bop_8789,])
func_8790 = relay.Function([var_8784,], output)
mod['func_8790'] = func_8790
mod = relay.transform.InferType()(mod)
mutated_mod['func_8790'] = func_8790
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8791 = relay.var("var_8791", dtype = "float64", shape = (56, 28))#candidate|8791|(56, 28)|var|float64
func_8790_call = mutated_mod.get_global_var('func_8790')
call_8792 = func_8790_call(var_8791)
output = call_8792
func_8793 = relay.Function([var_8791], output)
mutated_mod['func_8793'] = func_8793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mod.get_global_var('func_6073')
func_6074_call = mutated_mod.get_global_var('func_6074')
call_8865 = relay.TupleGetItem(func_6073_call(), 0)
call_8866 = relay.TupleGetItem(func_6074_call(), 0)
output = relay.Tuple([call_8865,])
output2 = relay.Tuple([call_8866,])
func_8877 = relay.Function([], output)
mod['func_8877'] = func_8877
mod = relay.transform.InferType()(mod)
output = func_8877()
func_8878 = relay.Function([], output)
mutated_mod['func_8878'] = func_8878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_8909 = relay.TupleGetItem(func_6725_call(), 0)
call_8910 = relay.TupleGetItem(func_6727_call(), 0)
output = call_8909
output2 = call_8910
func_8940 = relay.Function([], output)
mod['func_8940'] = func_8940
mod = relay.transform.InferType()(mod)
mutated_mod['func_8940'] = func_8940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8940_call = mutated_mod.get_global_var('func_8940')
call_8941 = func_8940_call()
output = call_8941
func_8942 = relay.Function([], output)
mutated_mod['func_8942'] = func_8942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6055_call = mod.get_global_var('func_6055')
func_6056_call = mutated_mod.get_global_var('func_6056')
call_8956 = func_6055_call()
call_8957 = func_6055_call()
output = call_8956
output2 = call_8957
func_8970 = relay.Function([], output)
mod['func_8970'] = func_8970
mod = relay.transform.InferType()(mod)
mutated_mod['func_8970'] = func_8970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8970_call = mutated_mod.get_global_var('func_8970')
call_8971 = func_8970_call()
output = call_8971
func_8972 = relay.Function([], output)
mutated_mod['func_8972'] = func_8972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6992_call = mod.get_global_var('func_6992')
func_6993_call = mutated_mod.get_global_var('func_6993')
call_8984 = relay.TupleGetItem(func_6992_call(), 0)
call_8985 = relay.TupleGetItem(func_6993_call(), 0)
output = relay.Tuple([call_8984,])
output2 = relay.Tuple([call_8985,])
func_8993 = relay.Function([], output)
mod['func_8993'] = func_8993
mod = relay.transform.InferType()(mod)
output = func_8993()
func_8994 = relay.Function([], output)
mutated_mod['func_8994'] = func_8994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_8995 = relay.TupleGetItem(func_5675_call(), 0)
call_8996 = relay.TupleGetItem(func_5677_call(), 0)
output = call_8995
output2 = call_8996
func_8998 = relay.Function([], output)
mod['func_8998'] = func_8998
mod = relay.transform.InferType()(mod)
output = func_8998()
func_8999 = relay.Function([], output)
mutated_mod['func_8999'] = func_8999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6757_call = mod.get_global_var('func_6757')
func_6758_call = mutated_mod.get_global_var('func_6758')
call_9059 = relay.TupleGetItem(func_6757_call(), 0)
call_9060 = relay.TupleGetItem(func_6758_call(), 0)
output = relay.Tuple([call_9059,])
output2 = relay.Tuple([call_9060,])
func_9061 = relay.Function([], output)
mod['func_9061'] = func_9061
mod = relay.transform.InferType()(mod)
mutated_mod['func_9061'] = func_9061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9061_call = mutated_mod.get_global_var('func_9061')
call_9062 = func_9061_call()
output = call_9062
func_9063 = relay.Function([], output)
mutated_mod['func_9063'] = func_9063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8522_call = mod.get_global_var('func_8522')
func_8524_call = mutated_mod.get_global_var('func_8524')
call_9124 = relay.TupleGetItem(func_8522_call(), 0)
call_9125 = relay.TupleGetItem(func_8524_call(), 0)
output = relay.Tuple([call_9124,])
output2 = relay.Tuple([call_9125,])
func_9141 = relay.Function([], output)
mod['func_9141'] = func_9141
mod = relay.transform.InferType()(mod)
mutated_mod['func_9141'] = func_9141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9141_call = mutated_mod.get_global_var('func_9141')
call_9142 = func_9141_call()
output = call_9142
func_9143 = relay.Function([], output)
mutated_mod['func_9143'] = func_9143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8522_call = mod.get_global_var('func_8522')
func_8524_call = mutated_mod.get_global_var('func_8524')
call_9152 = relay.TupleGetItem(func_8522_call(), 0)
call_9153 = relay.TupleGetItem(func_8524_call(), 0)
output = relay.Tuple([call_9152,])
output2 = relay.Tuple([call_9153,])
func_9163 = relay.Function([], output)
mod['func_9163'] = func_9163
mod = relay.transform.InferType()(mod)
output = func_9163()
func_9164 = relay.Function([], output)
mutated_mod['func_9164'] = func_9164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6757_call = mod.get_global_var('func_6757')
func_6758_call = mutated_mod.get_global_var('func_6758')
call_9178 = relay.TupleGetItem(func_6757_call(), 0)
call_9179 = relay.TupleGetItem(func_6758_call(), 0)
func_6992_call = mod.get_global_var('func_6992')
func_6993_call = mutated_mod.get_global_var('func_6993')
call_9187 = relay.TupleGetItem(func_6992_call(), 2)
call_9188 = relay.TupleGetItem(func_6993_call(), 2)
func_4452_call = mod.get_global_var('func_4452')
func_4455_call = mutated_mod.get_global_var('func_4455')
call_9196 = relay.TupleGetItem(func_4452_call(relay.reshape(call_9187.astype('float32'), [6, 3, 1])), 0)
call_9197 = relay.TupleGetItem(func_4455_call(relay.reshape(call_9187.astype('float32'), [6, 3, 1])), 0)
output = relay.Tuple([call_9178,call_9187,call_9196,])
output2 = relay.Tuple([call_9179,call_9188,call_9197,])
func_9204 = relay.Function([], output)
mod['func_9204'] = func_9204
mod = relay.transform.InferType()(mod)
output = func_9204()
func_9205 = relay.Function([], output)
mutated_mod['func_9205'] = func_9205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_9206 = relay.TupleGetItem(func_6725_call(), 0)
call_9207 = relay.TupleGetItem(func_6727_call(), 0)
output = call_9206
output2 = call_9207
func_9208 = relay.Function([], output)
mod['func_9208'] = func_9208
mod = relay.transform.InferType()(mod)
output = func_9208()
func_9209 = relay.Function([], output)
mutated_mod['func_9209'] = func_9209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6851_call = mod.get_global_var('func_6851')
func_6852_call = mutated_mod.get_global_var('func_6852')
call_9223 = relay.TupleGetItem(func_6851_call(), 0)
call_9224 = relay.TupleGetItem(func_6852_call(), 0)
uop_9259 = relay.acos(call_9223.astype('float32')) # shape=(16, 15, 9)
uop_9261 = relay.acos(call_9224.astype('float32')) # shape=(16, 15, 9)
uop_9262 = relay.tan(uop_9259.astype('float32')) # shape=(16, 15, 9)
uop_9264 = relay.tan(uop_9261.astype('float32')) # shape=(16, 15, 9)
output = uop_9262
output2 = uop_9264
func_9280 = relay.Function([], output)
mod['func_9280'] = func_9280
mod = relay.transform.InferType()(mod)
mutated_mod['func_9280'] = func_9280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9280_call = mutated_mod.get_global_var('func_9280')
call_9281 = func_9280_call()
output = call_9281
func_9282 = relay.Function([], output)
mutated_mod['func_9282'] = func_9282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6098_call = mod.get_global_var('func_6098')
func_6099_call = mutated_mod.get_global_var('func_6099')
call_9315 = func_6098_call()
call_9316 = func_6098_call()
output = call_9315
output2 = call_9316
func_9319 = relay.Function([], output)
mod['func_9319'] = func_9319
mod = relay.transform.InferType()(mod)
mutated_mod['func_9319'] = func_9319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9319_call = mutated_mod.get_global_var('func_9319')
call_9320 = func_9319_call()
output = call_9320
func_9321 = relay.Function([], output)
mutated_mod['func_9321'] = func_9321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8993_call = mod.get_global_var('func_8993')
func_8994_call = mutated_mod.get_global_var('func_8994')
call_9336 = relay.TupleGetItem(func_8993_call(), 0)
call_9337 = relay.TupleGetItem(func_8994_call(), 0)
func_4609_call = mod.get_global_var('func_4609')
func_4613_call = mutated_mod.get_global_var('func_4613')
const_9339 = relay.const([0.942028,5.421668,5.466753,5.024201,1.042989,-9.212717,-5.425076,9.762954,7.017356,6.347754,-0.731900,4.600647,-1.208753,-9.816636,-9.387334,8.083103,-9.772682,-1.802606,2.917877,9.667700,3.452947,3.990831,6.887783,-1.380686,-1.829346,8.961304,1.258299,4.102536,8.730543,2.015129,-7.279316,4.622925,6.309288,-8.790209,-9.240911,9.264586,5.124154,7.538812,4.379129,-1.515620,4.981094,-0.277708,-2.135636,-8.556430,2.031388,-1.580847,4.023883,1.691867,6.816542,8.323066,5.268897,-3.090484,0.167247,0.768044,6.675329,9.154381,-8.317796,2.989902,0.033305,-3.317124,5.231046,-5.889906,-9.196964,6.847474,5.004629,2.744900,-0.237302,-4.724224,0.446183,-8.106249,1.104751,-5.499243,-6.906993,-5.410060,6.160297], dtype = "float32")#candidate|9339|(75,)|const|float32
var_9340 = relay.var("var_9340", dtype = "float32", shape = (90,))#candidate|9340|(90,)|var|float32
call_9338 = relay.TupleGetItem(func_4609_call(relay.reshape(const_9339.astype('float32'), [15, 5, 1]), relay.reshape(var_9340.astype('float32'), [90, 1]), ), 1)
call_9341 = relay.TupleGetItem(func_4613_call(relay.reshape(const_9339.astype('float32'), [15, 5, 1]), relay.reshape(var_9340.astype('float32'), [90, 1]), ), 1)
func_6703_call = mod.get_global_var('func_6703')
func_6706_call = mutated_mod.get_global_var('func_6706')
var_9346 = relay.var("var_9346", dtype = "float64", shape = (960,))#candidate|9346|(960,)|var|float64
call_9345 = relay.TupleGetItem(func_6703_call(relay.reshape(var_9346.astype('float64'), [8, 12, 10])), 0)
call_9347 = relay.TupleGetItem(func_6706_call(relay.reshape(var_9346.astype('float64'), [8, 12, 10])), 0)
output = relay.Tuple([call_9336,call_9338,const_9339,var_9340,call_9345,var_9346,])
output2 = relay.Tuple([call_9337,call_9341,const_9339,var_9340,call_9347,var_9346,])
func_9366 = relay.Function([var_9340,var_9346,], output)
mod['func_9366'] = func_9366
mod = relay.transform.InferType()(mod)
var_9367 = relay.var("var_9367", dtype = "float32", shape = (90,))#candidate|9367|(90,)|var|float32
var_9368 = relay.var("var_9368", dtype = "float64", shape = (960,))#candidate|9368|(960,)|var|float64
output = func_9366(var_9367,var_9368,)
func_9369 = relay.Function([var_9367,var_9368,], output)
mutated_mod['func_9369'] = func_9369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6498_call = mod.get_global_var('func_6498')
func_6499_call = mutated_mod.get_global_var('func_6499')
call_9405 = relay.TupleGetItem(func_6498_call(), 1)
call_9406 = relay.TupleGetItem(func_6499_call(), 1)
output = call_9405
output2 = call_9406
func_9415 = relay.Function([], output)
mod['func_9415'] = func_9415
mod = relay.transform.InferType()(mod)
output = func_9415()
func_9416 = relay.Function([], output)
mutated_mod['func_9416'] = func_9416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9319_call = mod.get_global_var('func_9319')
func_9321_call = mutated_mod.get_global_var('func_9321')
call_9442 = func_9319_call()
call_9443 = func_9319_call()
const_9444 = relay.const([[[6.133640,-1.458092,2.585708,-9.821364,8.801460,1.858184,2.101274,-6.962536,-2.814548,-0.698928,1.005744],[0.132667,-4.643377,0.406656,-4.274623,-0.390071,-1.181168,-8.420550,5.317280,5.358975,2.234433,1.963234],[1.985923,-5.860179,-2.927952,7.438843,-8.625448,-2.985040,2.425634,0.977240,-1.957532,3.311074,4.123815],[-1.038227,-1.201599,7.410094,-8.026562,-2.368375,-7.913232,1.614994,9.654450,9.538164,-1.388769,-4.851352],[1.032126,1.075612,5.702823,-6.905848,-6.318915,-9.459514,-2.534817,9.514371,-6.858907,8.780317,-3.298719],[3.992256,1.159914,-8.421941,-5.870318,4.660901,-3.319477,5.125211,7.290767,-7.833071,-3.532875,-3.451524],[7.845705,-4.595255,-3.492179,-6.994022,-5.321051,-2.094672,-0.133012,7.749289,-1.382122,-8.851768,8.416481]],[[-1.750137,5.161708,5.540904,6.845687,0.639180,3.866318,-3.300868,9.063275,-2.176420,-8.557243,0.048860],[0.269087,6.319406,-7.355794,1.926887,1.218355,-7.833066,-5.441977,1.265880,-3.539578,-2.741858,-3.955244],[1.303027,-0.791739,1.371121,-2.074785,9.089149,-4.592452,1.922946,0.443812,-8.398921,2.198348,6.489435],[-8.827225,8.819629,7.635670,-0.067724,3.237462,3.205506,-4.966281,-0.187015,-9.062814,-4.356277,7.235541],[1.243343,-2.458075,6.692870,-0.785947,-9.367488,5.107986,5.343521,8.429890,-6.235509,6.434248,-3.359232],[5.795721,2.565852,4.846917,-0.086390,6.046928,0.086305,9.943217,5.820308,2.464520,1.949601,-8.604233],[-6.040682,-5.882313,-0.422917,-3.545055,0.952219,2.078015,0.760431,6.221495,5.475096,1.996574,-8.849399]],[[-2.540512,0.655251,0.316408,-9.774978,8.187670,-7.452556,-8.939069,-3.737904,8.369434,-2.707205,-7.092744],[6.633197,1.270333,-2.399500,8.067441,4.626115,4.680834,-4.909449,6.936111,-9.203283,3.030866,1.066095],[7.477101,-4.811220,3.114270,0.543254,9.052872,4.124921,-8.830985,3.100100,0.920937,4.980580,3.012027],[5.354729,-1.671180,-1.113211,-0.205450,4.032153,4.673728,8.940331,-5.582251,-7.199887,0.387088,-8.241051],[3.875409,-6.790267,3.696547,8.345596,6.105626,9.171275,-2.617745,9.918126,8.363767,-8.470259,-0.376313],[-5.749170,5.805270,-2.781797,-6.883376,-6.644205,3.838554,-8.498352,-3.036634,8.712290,5.184251,4.974975],[-2.838597,-7.724374,-9.791696,-9.684809,-5.365872,2.819329,1.513554,5.889803,7.890227,-2.786726,-1.674640]],[[9.411067,-1.372862,-4.531962,5.264893,-6.340535,-6.627945,-2.123134,2.001077,0.390258,9.551509,2.452655],[7.447740,-9.032377,-4.670217,9.968679,-8.842031,5.100724,6.543207,-5.192180,-6.316881,5.648744,9.311568],[8.291765,-3.878710,1.201586,0.843857,4.428961,0.030166,3.624278,-9.799157,-7.240467,1.561207,6.093883],[6.195129,-4.796061,-8.831491,-4.725893,9.110745,1.043790,-7.263180,8.031916,2.218977,-2.838732,-7.991007],[1.334197,-5.666631,3.843822,4.809425,2.975561,-4.460168,-7.826335,8.000910,8.520717,-6.505722,-7.098864],[9.118695,4.472706,-7.444766,4.523082,5.212574,5.791812,-6.587719,-2.968472,-1.893173,-1.427551,6.025288],[9.361527,0.733880,7.171703,8.186070,-9.458029,3.734025,-0.237731,-3.969903,-3.606100,-8.410777,5.960016]],[[3.373210,-2.044400,3.073748,-0.531337,-9.589601,4.518245,-7.557037,2.742556,4.083169,-8.840269,8.705764],[-5.845740,-5.671057,-3.596465,7.280712,9.496717,0.329536,-9.299925,-6.410623,8.291400,-5.266555,-4.008040],[9.200132,8.283403,-7.548853,8.459730,-2.842589,6.619603,-2.544306,6.326709,1.491263,-1.090575,-1.800436],[-9.723250,-7.228498,6.552549,-5.615787,8.387696,-5.831675,-1.267532,7.375072,-5.083669,-9.081233,-4.257526],[8.554061,-7.071213,9.015504,4.092957,5.377841,-8.693751,5.724690,-6.662807,-3.943225,1.181685,-0.764631],[3.744315,8.879309,9.211898,3.091076,3.118824,0.128141,9.521690,-0.872230,6.678242,-6.719724,7.911288],[1.282904,-7.511282,-1.730351,-9.381976,3.768619,-6.616827,-9.739164,-2.408387,9.592277,-9.131450,8.292319]],[[5.764209,9.830224,1.296053,1.854257,9.982044,9.822462,-2.184493,-4.801255,-9.646892,-2.972160,-8.172895],[4.204963,-9.833490,-3.823619,1.634747,-8.165804,-4.811492,4.053740,-4.159291,-5.155272,-3.013309,8.678364],[8.213352,9.763384,8.730505,-8.379876,-3.455520,9.138865,2.613915,-3.972005,4.785072,4.217307,-5.302391],[-3.609837,4.771073,-8.182837,-6.197918,-7.954622,0.186540,6.369703,9.914792,4.608169,1.547894,-7.099513],[-6.796456,-1.646925,-5.616314,8.764333,-8.077024,9.044995,4.118556,9.288061,1.435426,4.770887,-9.333148],[8.198254,2.389461,9.799369,8.756988,1.977173,-6.732437,-9.802378,7.633967,1.794119,6.907216,-2.687801],[0.671414,-5.358534,8.628565,1.574551,-9.299607,-9.218392,7.266581,1.529775,9.631064,8.917172,-8.226326]],[[-9.873852,7.349984,5.665999,-9.278595,2.126040,-1.994541,-9.933086,-4.183486,0.878681,9.983951,-3.659401],[8.563147,1.165420,-2.298137,9.007592,-0.722803,-1.533991,7.333256,-9.386773,7.398567,6.890658,2.158429],[-1.686917,-1.167393,5.503641,2.555128,-2.419419,2.420478,8.564951,-0.626402,-2.956661,6.707833,8.621674],[-6.390816,-2.280522,9.959773,1.367676,-4.663789,-2.732280,6.729003,-9.778754,8.327301,-6.294967,-0.075519],[-4.217463,-6.035155,-5.267943,-0.476266,-7.593141,6.718575,-5.797739,4.233519,-7.703967,4.302438,-2.401170],[-5.558852,3.733471,1.079984,-6.723719,-2.754766,0.092852,5.388668,-0.571507,1.252391,-5.888665,9.541700],[3.780373,0.672818,-3.150014,6.111565,5.291577,9.250560,6.975984,-5.261148,7.093080,6.812697,0.037577]],[[-4.590665,-2.178947,3.966092,-9.640536,3.119719,3.041470,4.718414,-4.064595,-9.632831,-5.117924,-4.642822],[-8.200227,2.121069,6.786181,-8.300292,4.983888,-9.492132,-8.046707,6.810976,1.518622,8.246696,7.566790],[-5.090039,1.696134,9.748314,5.418853,6.422661,5.771400,2.755283,7.543535,0.370957,-1.391598,-7.816759],[7.441347,7.489352,4.230310,3.352855,-4.154172,-2.727901,-5.190843,1.427148,7.131906,-4.467387,-4.975586],[-8.231079,1.064325,-5.722444,9.428063,4.369234,-3.247488,9.798234,9.326468,-8.299013,5.759717,8.125674],[8.522312,5.421206,7.029360,7.596711,6.833971,-4.422305,2.820810,-5.666241,8.050558,-7.236984,-5.183136],[3.797324,-1.606117,9.657940,-3.045413,-8.206634,-3.670218,9.189422,9.096366,4.936168,-5.743260,0.639326]],[[-9.830924,-8.693093,9.720556,-7.221417,8.310646,6.401562,8.089342,3.158348,9.853051,4.527326,9.475919],[-5.182557,2.156724,3.027677,4.608446,-6.838647,-0.303958,9.210835,3.214770,5.414852,-5.596564,-9.802704],[-6.137002,1.115581,5.118478,7.654081,3.023335,0.662075,0.089656,-7.577687,-2.918558,-0.807638,-6.669838],[-6.390992,5.924896,-4.928785,7.319970,-1.509027,-6.559913,7.371249,-5.191979,-5.294963,-2.602524,3.203827],[-8.090927,-1.259182,-4.484084,7.558193,8.587896,-4.270359,9.135433,-4.907879,0.154690,-8.058488,-2.434145],[-7.950504,-0.639436,0.517140,-7.977838,-4.084106,-3.818182,2.379222,-4.276795,2.769498,9.746236,-0.590057],[-3.221094,0.967628,2.491908,9.849372,9.504545,1.331762,-3.519158,0.192600,2.889051,2.875247,-1.102566]]], dtype = "float32")#candidate|9444|(9, 7, 11)|const|float32
bop_9445 = relay.multiply(call_9442.astype('int64'), relay.reshape(const_9444.astype('int64'), relay.shape_of(call_9442))) # shape=(9, 7, 11)
bop_9448 = relay.multiply(call_9443.astype('int64'), relay.reshape(const_9444.astype('int64'), relay.shape_of(call_9443))) # shape=(9, 7, 11)
func_9415_call = mod.get_global_var('func_9415')
func_9416_call = mutated_mod.get_global_var('func_9416')
call_9449 = func_9415_call()
call_9450 = func_9415_call()
func_6463_call = mod.get_global_var('func_6463')
func_6465_call = mutated_mod.get_global_var('func_6465')
call_9453 = relay.TupleGetItem(func_6463_call(), 4)
call_9454 = relay.TupleGetItem(func_6465_call(), 4)
uop_9456 = relay.rsqrt(call_9449.astype('float64')) # shape=(9, 7, 11)
uop_9458 = relay.rsqrt(call_9450.astype('float64')) # shape=(9, 7, 11)
func_2696_call = mod.get_global_var('func_2696')
func_2703_call = mutated_mod.get_global_var('func_2703')
var_9463 = relay.var("var_9463", dtype = "int64", shape = ())#candidate|9463|()|var|int64
var_9464 = relay.var("var_9464", dtype = "int64", shape = (160,))#candidate|9464|(160,)|var|int64
const_9465 = relay.const([1.605401,7.099323,-1.311099,-0.160620,2.860865,-3.954540,-9.286451,3.395063,0.259672,-0.536433,9.941809,-0.407954,1.149660,1.622236,-5.675838], dtype = "float32")#candidate|9465|(15,)|const|float32
const_9466 = relay.const([0.305676,8.650413,9.333020,0.884871,7.303836,-8.828944,-5.369414,3.652636,-1.650315,7.453820,2.708100,-9.287798,8.384004,-7.185473,2.555926,-9.036087,4.150609,-5.328455,-7.788770,-7.489853,7.772096,-0.121767,-1.121580,-9.003216,-3.368833,-4.644752,0.918694,-4.396598,4.169004,4.908860,-5.397792,9.043324,3.756555,-6.708553,4.730956,-1.216928,-6.277002,-4.339368,-9.214414,4.916675,-0.921397,-9.436501,3.217634,8.176787,6.798561,7.093056,-9.217472,2.970616,-2.088774,1.063994,-6.363511,-2.841024,-2.686964,-4.642019,-4.347850,5.533060,7.054740,-6.687918,5.467461,0.124856,-8.117420,-7.493628,3.857267,0.155331,-8.006050,-8.481712,-0.008263,3.954823,7.302958,9.236110,7.188757,1.021272,9.904977,6.670397,7.342393,2.699927,6.351652,-7.110273,-9.152167,-1.522190,-0.722245,9.004733,-5.011533,0.419427,-9.701552,8.340276,2.445459,-9.223190,-2.356968,9.198134,-9.037789,6.558537,8.196750,6.083500,0.762939,-9.084179,-3.760011,-3.887407,-2.906238,-7.436045,2.122242,-7.318308,-2.252090,3.519915,4.869762,-3.039315,1.118537,0.774743,6.270278,-1.774095,1.135529,-5.542811,5.602847,-6.961225,-8.092646,-8.747180,-4.734013,1.897159,-8.199553,6.131231,1.679425,3.237566,6.471409,6.564998,7.717539,-7.934609,-8.343646,-6.236264,8.450856,2.740574,-0.703687,8.879552,3.982094,3.765323,0.294833,3.382150,4.519286,-5.568193,2.812950,8.545586,0.189329,9.559456,8.107479,1.383051,-2.836985,-8.196157,0.822724,0.398311,-1.954753,-9.317522,9.829978,7.248694,-3.545997,-7.552654,6.105405,4.470182,5.765738,3.814136,-0.207065,2.629981,8.017244,3.078987,-8.961553,9.457827,-5.380088,-5.418808,7.985220,-3.439392,6.300015,-0.114026,-0.119578,-0.379130,-7.454533,-2.750072,-9.442207,-3.975368,-1.374329,-4.672503,-3.373463,8.904525,5.210621,0.927526,5.131962,9.118860,-8.179023,-4.973010,8.492528,-4.617836,-7.049967,-0.597038,-1.433212,-4.363365,5.245373,7.761441,7.374248,-3.161783,4.245590,3.332847,2.351269,6.708715,-0.781070,-1.717647,-1.081307,-7.202185,-8.879939,-2.070676,5.776586,1.828449,3.531735,-9.510859,2.671458,-1.067248,-5.681893,-4.900951,-3.121765,1.648285,4.142599,-5.434298,-2.027789,-2.782327,5.655996,-6.888384,6.358085,9.478495,-9.670779,8.762175,-6.781893,-6.131158,-2.049329,-5.022606,6.244287,5.066541,-6.257135,-0.166351,-5.320610,1.198268,9.341810,-6.390412,2.257500,-4.602931,-0.070858,1.259193,4.239576,4.034220,-5.322493,-3.846685,-6.317807,-4.567308,8.795727,9.041068,1.634702,9.013899,-0.859744,-6.983242,-4.024135,-2.315155,-7.555650,8.424876,9.166048,8.880824,8.655628,1.945687,-7.360745,-7.264514,5.122780,6.267835,-6.851807,0.700344,9.390202,-3.746652,-6.397796,-4.461363,-0.446552,-2.105684,-2.032760,-7.436762,1.547476,7.402960,3.650725,5.156764,-8.361337,-3.218405,-6.512226,4.704021,7.475484,4.981584,-7.890477,-4.180972,0.144057,7.748337,4.373790,9.745578,8.471356,-3.077059,-9.998793,7.007940,-5.724925,9.698195,-5.206377,-8.628899,-8.364062,6.428901,2.664692,-8.833644,4.288052,7.654655,0.823953,3.490576,1.810865,0.521494,-2.348447,-4.110314,-9.354924,6.395583,4.832588,-6.720132,0.387023,-6.080696,-8.117222,0.280176,-2.904827,-2.913709,-9.271260,1.420191,1.849220,3.513896,2.384325,-2.213193,-3.184068,-1.153973,-0.430143,5.697804,6.903750,-4.707546,-0.834065,2.622591,-2.063644,-3.526300,6.220522,9.507309,3.270397,-7.470372,-2.131390,-3.911356,-5.961729,-3.611388,-5.967128,-2.039196,-4.133165,9.613018,8.796442,3.248294,-7.661017,-8.842793,6.218704,-4.204154,-3.415917,-5.070699,8.559274,7.517790,6.306641,-6.645431,-1.276852,6.019234,-2.743592,4.707941,1.771948,0.494267,3.356849,-3.420905,4.721126,7.562471,8.397304,4.702476,-0.937415,1.654209,-9.074836,2.303024,-1.496506,0.119359,2.420102,-7.831863,-4.520948,-0.340961,6.662484,-7.244810,7.852577,3.556676,5.530409,-2.150130,7.479214,-5.541934,3.893627,-8.084944,-1.171946,-5.859988,8.551131,4.640537,1.504987,0.830103,-1.527658,5.870536,0.467989,-1.105594,6.327184,-7.620598,-0.774808,4.659825,9.529869,-5.697456,5.602545,0.768088,8.989746,-2.688319,3.393552,-0.059807,-5.062051,2.360284,-5.469842,-2.866418,-2.816840,-6.059436,5.014302,5.599745,-5.705263,4.713102,-0.939095,-3.301612,1.890121,-1.165538,-9.108887,-2.060965,4.062667,-9.369955,0.952314,7.872130,2.459160,7.823892,3.120638,4.583200,-4.460344,-3.534072,-3.480029,-5.483860,8.966925,-7.710299,7.866290,-3.941469,-4.512749,-5.884075,-0.549357,-9.009545,-0.291740,-5.226147,-1.429697,6.092392,-3.830361,2.139197,-2.506331,-8.831016,3.017200,2.878143,8.146837,6.818742,-6.068340,-6.556125,6.316627,-7.803151,-4.773708,-7.056757,0.060768,9.215333,8.798102,-9.538348,-4.112386,4.540053,1.517773,6.791585,4.908848,-1.904959,-8.142311,-4.857764,1.999156,0.008127,7.576038,-1.529128,5.855423,7.323649,5.581754,-0.293563,-7.111685,1.855071,-0.126331,5.629846,6.027148,0.701791,-4.488909,0.268965,3.928610,5.455986,-1.662267,6.525129,4.447950,-5.182757,-5.528803,-9.227448,4.115687,-1.204786,-3.780814,0.816538,4.881365,-5.570917,-8.422551,-5.996363,-5.834331,-4.320136,8.635589,5.746994,-4.912912,9.402930,-0.462085,-3.291688,8.853868,-7.452118,-8.518469,6.171107,-3.781045,8.018631,-1.676523,-0.008901,0.870411,8.169564,-9.188113,4.040505,1.934448,0.236561,-8.705161,8.901300,-4.197133,-1.863768,2.535452,2.453644,5.700230,-3.300377,-8.575035,-9.409300,1.615908,-7.233183,-3.166341,0.359365,6.527328,-3.457567,-3.057697,0.938920,7.408324,9.073839,-4.224083,-9.694463,4.184831,0.073942,-9.353664,5.457818,5.357520,3.576932,3.880629,2.098203,-2.226644,-4.494135,9.470149,2.603776,2.105955,4.234759,9.912289,6.852744,-6.549193,-0.236355,9.483730,1.053362,-5.295815,-7.270040,0.758338,-5.186620,6.708885,-2.642378,-5.968382,4.035690,-3.112803,9.056861,3.059658,-4.223181,6.713937,-1.365210,-6.537726,-3.796524,-5.152069,-0.221197,-1.968482,8.179018,2.656140,0.087904,-8.718920,-2.388156,4.490466,-8.022403,-4.095269,8.700907,-7.431959,-2.849770,1.581105,5.087107,-3.500599,5.589654,-5.659168,-2.022559,-5.558321,6.544826,6.532315,9.016930,-0.811653,4.592725,-2.835082,-4.981818,-5.463218,2.548027,8.112615,8.871121,-4.417834,0.717216,-1.712899,-6.160604,1.658803,2.612476,2.722822,9.177498,-8.540848,0.594605,1.679394,4.820310,-8.543980,1.481038,1.186166,1.884566,1.358812,-3.366196,7.057213,-3.543803,4.076710,4.712529,-6.095340,-9.552069,7.959577,4.871503,4.114738,-7.339274,3.775044,-3.524095,-3.136287,-8.449684,-2.982939,3.565663,-2.593513,-3.769387,5.779135,-3.240519,-9.400127,4.303270,-8.084676,0.335303,4.999112,-0.581024,2.327513,-7.972730,-2.188829,-1.320972,9.761926,-0.702623,3.166576,6.194320,-6.529378,8.569476,-7.842808,-2.664664,0.995428,6.847469,5.588218,-2.118146,-4.517091,9.389392,2.047384,3.660724,3.963707,-9.432470,-6.814577,-9.816617,-7.225243,8.730105,-7.648769,9.634930,3.357799,-3.946330,-8.559228,-6.812610,7.861993,-1.208730,0.771909,-4.710740,4.492684,9.939351,-3.238123,9.734837,8.094408,-1.480272,-7.092412,-2.020221,-2.387441,5.798954,7.052741,6.969164,9.951830,0.831029,4.126207,4.091079,3.843653,-7.925586,-2.891537,-2.170172,-0.891159,6.236349,-3.456634,3.980180,8.421700,-6.651921,-0.239278,3.119104,1.392777,-0.857319,-6.043915,8.800974,-4.699003,-8.528030,2.703236,3.829469,0.924402,7.870440,-3.846589,-0.462808,8.017730,-5.291391,-1.584807,7.586810,-5.535385,-0.916134,2.080546,-3.528303,8.947860,4.659110,1.971711,-7.139933,4.332661,9.576117,-5.821744,8.710265,-4.643800,1.141862,-5.381427,-3.917386,-4.133081,2.064765,-7.930021,-6.777347,-6.542409,9.222159,-3.094113,-6.549208,7.114464,9.071170,5.666241,8.672440,-0.811264,-5.408276,9.446388,2.895619,8.023787,3.961826,2.525411,9.394287,8.531065,4.149716,0.772168,-9.188484,5.693287,-5.024002,-1.534065,-4.761490,0.021850,7.544021,6.291350,-4.392501,-0.106852,0.664233,9.088710,5.595065,5.651677,-7.432013,6.397705,7.751809,-5.247861,1.465307,5.297968,9.663144,4.682172,7.112059,-8.433259,5.685530,9.387542,-9.712366,-2.538112,-1.146002,-6.815003,-8.737761,7.507441,8.806453,3.398724,-3.160649,-3.085098,9.492977,7.913983,1.068802,3.799888,-1.148309,4.650070,7.026452,-1.833328,2.942317,4.887818,-9.196710,5.001677,-9.011736,1.018969,4.271444,0.086691,8.864453,5.372724,-4.795652,6.681343,7.432302,9.564482,-6.524654,-9.774533,-6.813359,8.916826,-9.469913,-0.154574,-3.393731,-8.499852,-4.836462,-6.494988,-0.914977,-1.554710,-1.074833,5.088645,-5.705735,0.570299,-3.898116,-1.167389,2.382885,-4.241583,-8.507613,-1.712078,-4.273094,-2.507246,-6.900094,-0.679245,-2.754176,1.545982,-4.876512,-9.024812,1.941860,-1.311588,-0.706207,1.806303,-6.248318,0.762933,-2.196802,2.770714,-5.368910,5.215289,4.459150,2.297647,-8.706295,-2.716626,1.703111,4.134456,-4.964446,0.286707,-7.307307,-4.787726,-8.660227,0.745017,-5.984840,1.744042,-1.772099,7.033689,-3.314551,3.560740,-7.490554,0.017512,1.114452,-5.166089,-3.692187,-4.678351,-3.350526,-2.546770,-6.046592,-0.314969,-8.278691,-7.942900,-2.078864,-2.805706,-0.461457,-8.333060,-8.366555,1.650770,-5.658874,2.202610,4.430045,-8.519652,0.815267,-6.731984,-7.269474,-3.351785,-8.801897,-0.833653,-9.895978,1.137721,-8.796057,4.607191,4.483043,-5.067494,6.190484,0.720348,8.635347,-4.799605,-0.784683,6.548705,2.073266,6.775619,-4.236546,3.829209,6.986981,8.923926,-2.573616,-9.090306,2.143493,8.104877,-7.170391,8.959356,-3.720292,-9.402417,-7.564494], dtype = "float32")#candidate|9466|(960,)|const|float32
var_9467 = relay.var("var_9467", dtype = "float32", shape = (945,))#candidate|9467|(945,)|var|float32
call_9462 = relay.TupleGetItem(func_2696_call(relay.reshape(var_9463.astype('int64'), []), relay.reshape(var_9464.astype('int64'), [1, 16, 10]), relay.reshape(const_9465.astype('float32'), [15,]), relay.reshape(const_9466.astype('float32'), [960,]), relay.reshape(var_9467.astype('float32'), [945,]), ), 4)
call_9468 = relay.TupleGetItem(func_2703_call(relay.reshape(var_9463.astype('int64'), []), relay.reshape(var_9464.astype('int64'), [1, 16, 10]), relay.reshape(const_9465.astype('float32'), [15,]), relay.reshape(const_9466.astype('float32'), [960,]), relay.reshape(var_9467.astype('float32'), [945,]), ), 4)
output = relay.Tuple([bop_9445,call_9453,uop_9456,call_9462,var_9463,var_9464,const_9465,const_9466,var_9467,])
output2 = relay.Tuple([bop_9448,call_9454,uop_9458,call_9468,var_9463,var_9464,const_9465,const_9466,var_9467,])
func_9477 = relay.Function([var_9463,var_9464,var_9467,], output)
mod['func_9477'] = func_9477
mod = relay.transform.InferType()(mod)
mutated_mod['func_9477'] = func_9477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9477_call = mutated_mod.get_global_var('func_9477')
var_9479 = relay.var("var_9479", dtype = "int64", shape = ())#candidate|9479|()|var|int64
var_9480 = relay.var("var_9480", dtype = "int64", shape = (160,))#candidate|9480|(160,)|var|int64
var_9481 = relay.var("var_9481", dtype = "float32", shape = (945,))#candidate|9481|(945,)|var|float32
call_9478 = func_9477_call(var_9479,var_9480,var_9481,)
output = call_9478
func_9482 = relay.Function([var_9479,var_9480,var_9481,], output)
mutated_mod['func_9482'] = func_9482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9415_call = mod.get_global_var('func_9415')
func_9416_call = mutated_mod.get_global_var('func_9416')
call_9502 = func_9415_call()
call_9503 = func_9415_call()
func_9141_call = mod.get_global_var('func_9141')
func_9143_call = mutated_mod.get_global_var('func_9143')
call_9523 = relay.TupleGetItem(func_9141_call(), 0)
call_9524 = relay.TupleGetItem(func_9143_call(), 0)
output = relay.Tuple([call_9502,call_9523,])
output2 = relay.Tuple([call_9503,call_9524,])
func_9526 = relay.Function([], output)
mod['func_9526'] = func_9526
mod = relay.transform.InferType()(mod)
output = func_9526()
func_9527 = relay.Function([], output)
mutated_mod['func_9527'] = func_9527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6689_call = mod.get_global_var('func_6689')
func_6691_call = mutated_mod.get_global_var('func_6691')
call_9543 = relay.TupleGetItem(func_6689_call(), 1)
call_9544 = relay.TupleGetItem(func_6691_call(), 1)
output = relay.Tuple([call_9543,])
output2 = relay.Tuple([call_9544,])
func_9545 = relay.Function([], output)
mod['func_9545'] = func_9545
mod = relay.transform.InferType()(mod)
mutated_mod['func_9545'] = func_9545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9545_call = mutated_mod.get_global_var('func_9545')
call_9546 = func_9545_call()
output = call_9546
func_9547 = relay.Function([], output)
mutated_mod['func_9547'] = func_9547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6098_call = mod.get_global_var('func_6098')
func_6099_call = mutated_mod.get_global_var('func_6099')
call_9548 = func_6098_call()
call_9549 = func_6098_call()
func_9061_call = mod.get_global_var('func_9061')
func_9063_call = mutated_mod.get_global_var('func_9063')
call_9561 = relay.TupleGetItem(func_9061_call(), 0)
call_9562 = relay.TupleGetItem(func_9063_call(), 0)
output = relay.Tuple([call_9548,call_9561,])
output2 = relay.Tuple([call_9549,call_9562,])
func_9584 = relay.Function([], output)
mod['func_9584'] = func_9584
mod = relay.transform.InferType()(mod)
mutated_mod['func_9584'] = func_9584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9584_call = mutated_mod.get_global_var('func_9584')
call_9585 = func_9584_call()
output = call_9585
func_9586 = relay.Function([], output)
mutated_mod['func_9586'] = func_9586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8159_call = mod.get_global_var('func_8159')
func_8160_call = mutated_mod.get_global_var('func_8160')
call_9593 = relay.TupleGetItem(func_8159_call(), 0)
call_9594 = relay.TupleGetItem(func_8160_call(), 0)
uop_9604 = relay.exp(call_9593.astype('float64')) # shape=(9, 7, 11)
uop_9606 = relay.exp(call_9594.astype('float64')) # shape=(9, 7, 11)
func_8271_call = mod.get_global_var('func_8271')
func_8276_call = mutated_mod.get_global_var('func_8276')
var_9613 = relay.var("var_9613", dtype = "int64", shape = (420,))#candidate|9613|(420,)|var|int64
const_9614 = relay.const([0.591408,0.589155,3.284332,7.546519,-7.763204,-0.408455,-9.559076,1.686706,-6.903958,6.320286,-0.041256,1.159274,-6.124869,-8.490383,-6.335832,8.781314,0.161715,-6.538183,-7.540022,9.262991,-5.748693,0.613510,-3.198402,0.636870,-3.648501,1.518643,-5.792613,-7.965190,5.140068,-3.477079,-2.188366,-3.670770,7.508747,-6.449469,-6.118457,-3.920211,-4.286142,3.843843,-7.368571,0.138064,2.096244,6.679407,7.148101,-1.601841,-2.905869,-8.913271,-0.246114,-1.896203,7.965851,-6.990729,-3.982655,-1.022646,-4.865782,7.362105,-6.567837,4.137727,-3.162187,6.985104,-2.437602,-3.794063,0.125767,5.376465,4.944051,7.515299,0.548997,-9.377368,-7.310871,-8.385021,-4.945265,5.673349,-6.178751,7.468807,3.082911,-8.606659,-4.735141,-3.385287,3.305679,-2.032218,2.515266,5.904439,8.651479,1.992546,-3.874020,-8.350060,8.877984,-4.918997,-6.712997,-3.138065,-3.075957,7.461541,-1.809759,-8.320574,9.631081,-5.392601,-5.155580,6.293511,-9.272626,9.629600,-7.282411,3.477189,8.265466,5.731756,1.874192,2.115373,-1.957955,1.142535,-7.103699,-1.336023,-3.475009,9.072214,-2.794806,-8.108957,3.426573,-9.643687,4.719641,1.953290,5.182626,-9.573430,0.484120,-9.282590,-6.614206,-1.351168,-5.591128,-7.412259,3.918218,9.511317,6.557878,-5.150750,-7.931734,-6.087638,8.539600,-3.233762,5.703022,9.190095,3.667130,-8.403947,1.977017,-6.673791,-1.309052,-9.460707,-7.986171,0.564443,0.342592,-1.827641,-1.960345,2.388820,4.766109,-4.461349,-8.682814,3.537563,-9.464339,5.283018,-0.651906,8.643669,7.539371,-6.168875,0.377843,5.782527,-2.483878,-1.438584,-9.052455,-1.888486,-8.887558,-5.406090,-9.587495,-2.977090,-1.715979,4.945756,5.957459,2.873418,-4.091798,1.340772,2.061578,3.650999,-4.152813,7.966310,5.653940,-3.527750,-7.183082,3.862400,-0.450907,8.260992,9.279426,9.957193,6.793251,4.481014,2.868650,-5.970605,3.848986,-0.848745,4.311230,3.308056,7.584245,-4.452440,-7.040071,-4.024636,7.618261,4.284008,-2.316946,-7.479602,9.471024,-7.884210,-1.212515,-4.950065,-6.469213,0.833356,-9.166440,-2.610852,9.504731,4.828871,-8.255967,-5.985524,-9.161251,6.178993,3.490117,-9.162023,1.183182,7.310603,3.598114,-3.355248,-0.805717,-5.265344,-8.996893,-3.870421,0.307234,8.974569,1.283465,-1.414144,-9.351958,1.289206,5.528406,-6.117866,-2.574664,-4.152312,5.245268,5.444346,-5.698790,-1.346967,-8.205752,-5.077933,1.174648,-1.236627,-7.139241,-6.649023,-4.320231,-7.208648,4.062814,-1.836770,-3.391703,-7.003360,2.552422,1.004515,1.349016,-7.263908,-8.204980,8.329170,3.518134,-5.932628,-7.318743,-4.657369,-8.469072,-1.143915,4.235149,5.852025,5.110509,-2.470295,0.060193,0.499667,3.627165,1.886838,-1.786333,8.596585,-4.217599,0.280489,-7.422689,0.793824,-1.930524,8.342141,-2.656320,9.208092,-7.976025,3.396436,3.177937,-4.802273,-2.708248,-7.529460,-5.868911,-3.997848,-8.434512,-6.204553,8.016173,6.187408,9.681320,-6.901142,-4.491614,-7.003386,6.451208,-9.749856,-9.412877,2.442934,-9.087648,3.800163,-4.413328,5.248143,-3.806189,0.125538,0.390475,6.318395,6.688353,9.432038,-2.669721,-1.588891,7.927682,-1.811817,4.047567,-8.321609,-8.090141,9.361268,-3.970856,3.096898,-2.829715,-1.700059,8.096710,-6.992333,0.640106,-7.860892,5.399555,2.879296,-7.974895,-7.764675,-6.545414,0.407247,2.179077,3.355480,-8.895540,-5.980137,7.132384,-9.962376,-5.470746,-2.381369,-6.373300,4.664184,6.964264,-8.322326,1.649046,-6.946561,-6.991960,-0.412323,-9.592986,9.050423,-8.438395,7.706559,-5.352561,-3.694701,-6.361966,4.090839,-9.538424,0.209517,5.833620,7.819217,-4.927966,-9.537989,9.499343,-0.901107,-1.212412,-0.468310,6.645942,1.135604,-4.577709,0.971699,-9.885630,8.347063,3.122849,-7.377744,8.659308,4.340817,1.902506,-1.738199,-1.519265,-1.363160,-3.532042,8.855570,-9.526179,5.746225,2.444093,-4.325906,8.313132,-0.885410,-6.273365,-5.320649,-2.175093,5.689692,8.389686,-3.091559,9.630140,5.097229,-4.355016,2.214137,5.636428,4.933019,7.698718,-8.735994,1.664725,-9.157248,9.434539,2.827698,-5.679942,-9.569218,-4.028750,-4.227075,2.402552,6.038134,-6.518384,2.452378,-6.315914,-1.577930,-2.981222,-1.408275,4.772476,4.982434,0.932253,-9.109356,2.418075,-3.831700,-7.829121,0.033386,-0.788304,0.812993,-5.966562,-4.384196,0.573980,-4.129386,8.564416,0.772549,3.883610,8.596686,-8.301867,4.502502,-5.061371,2.420426,-0.060123,8.924943,-3.113011,9.162595,6.841993,1.020148,3.081609,-7.336163,-8.744166,6.277540,-5.621920,7.460363,4.677210,-4.658914,-3.050595,-2.819714,7.351168,1.978043,-3.821565,-4.300633,-7.977750,-7.110776,6.167911,-1.875758,-2.202016,-0.294181,-6.621971,4.822537,-9.868168,-7.244810,-1.490592,9.003172,-5.086631,9.846323,7.139338,-6.202431,4.226034,1.668550,1.598520,-2.427723,-1.282815,-4.879353,-9.858051,-4.945240,0.698205,7.794950,3.756058,2.875849,3.038828,-4.393474,-5.902181,-6.090757,1.694602,1.499345,5.805387,-7.295557,-6.609902,8.070289,1.423785,0.301289,-8.503231,-0.370840,7.717552,7.831197,-0.513406,8.678187,-0.517056,-2.081065,-1.068412,-4.231453,8.415598,8.755309,5.807243,1.139789,-8.350832,5.878793,0.520554,-8.312204,-5.898997,-7.599433,4.059617,9.691151,4.017425,2.547690,7.192282,-4.829234,-2.042095,-4.296543,-3.549568,-9.835926,-9.145881,6.374651,5.471309,-8.590896,6.774737,-8.106392,9.742459,-2.297024,6.016599,-2.564958,3.051125,-8.455967,-8.321644,9.448151,-3.492903,5.282009,8.692911,-3.261804,-8.879629,-3.521516,1.549947,-5.334315,7.239370,-0.379528,-9.929360,4.333493,0.653588,3.318304,5.164655,-2.653956,5.693139,-0.381816,-0.490623,0.640287,-3.832726,-0.998365,6.531419,-5.533865,1.141467,7.174770,1.818142,7.194351,-3.904857,-7.211999,6.717074,2.217322,-4.545976,1.883750,5.422793,1.729760,8.565987,2.403112,-5.997294,3.825179,-6.419714,2.517526,9.411943,-9.552753,0.026183,5.274988,5.767133,5.890572,7.684747,-7.378253,-0.054700,-9.381185,3.739913,-6.373498,6.038816,0.409402,-8.605365,7.068245,4.110807,-7.209789,-1.034696,3.709643,-8.055694,8.307512,-3.992768,-1.101710,9.259521,-8.447117,3.674216,-8.316467,-0.448470,-9.744407,-1.760343,-1.850820,-7.553697,-9.680737,3.015475,-4.289721,5.072901,8.188873,-8.431118,-4.337400,-4.443161,-2.231007,3.198401,-1.521136,4.720167,-5.351866,-3.400189,9.966758,2.418484,9.302480,-7.546717,5.860471,2.346434,9.466797,-1.943112,5.968125,-9.886995,-6.960839,-2.256139,7.555231,-3.688553,4.898832,-7.025114,9.214114,-8.860127,-8.827761,-3.026165,-7.787811,-5.521075,0.104215,8.657404,8.025611,7.693405,4.741294,-2.050074,0.848352,3.032842,8.173545,3.957960,7.973243,1.171507,-2.470565,8.348745,1.950653,-5.000646,4.321890,4.108447,4.174405,-6.628945,-7.476934,4.160223,1.347369,-6.307483,7.461326,3.793930,-2.265782,-2.799328,5.802058,2.111497,-4.673973,5.992340,-4.998560,-6.446879,0.348264,-0.792347,-2.704326,1.886813,-2.181030,-8.299697,-9.327081,0.692265,6.743722,2.488832,3.683562,8.711570,2.694747,8.889806,-0.962256,1.573200,5.794756,3.922199,-3.103915,8.386742,5.802757,-1.652089,-5.567523,-9.527602,3.105088,-2.610234,-1.346017,-7.803436,-3.781026,4.213726,-8.015743,7.539882,3.078980,7.670199,2.992840,-7.253829,-4.262328,-3.291950,-5.924932,-0.344709,7.182061,6.732597,6.249052,1.887633,9.812242,-8.211247,2.709418,4.399925,-2.698668,-4.756563,-8.846455,-8.159999,8.057506,6.647949,5.955616,-9.916258,-7.866871,9.731843,2.993181,9.208361,3.843115,-0.155383,9.620292,0.645445,-6.021205,-9.059964,3.293505,-5.277852,4.835596,-5.139973,8.002028,3.302671,-0.192948,3.388906,0.679084,1.920419,-8.014245,-5.277190,7.905444,-8.036011,6.586184,-5.000052,5.599994,-0.983935,-7.631941,-9.360802,2.157472,7.895132,-5.703028,4.469505,-9.630281,-7.016178,3.551504,-4.418447,1.419462,-2.780456,7.088420,4.653361,2.275573,-4.498826,-7.938320,-3.070028,-2.287757,-6.919210,-9.648585,3.723010,-6.622686,-9.982083,-3.227973,-5.464570,8.619013,-6.769704,-2.225475,2.050209,5.203495,4.350122,-0.935101,1.624530,-8.427998,2.989900,-2.436461,8.984250,2.151771,-0.834884,-1.184301,6.366053,2.248324,3.877181,5.508854,-0.914875,-4.214439,-0.492361,9.506887,5.363873,4.772037,-9.665150,4.905941,-0.526545,0.995398,-2.174683,-8.311712,4.718371,-8.025308,9.506181,-4.221690,-9.695317,3.896751,6.588165,3.099571,-9.339151,-7.875564,-8.684977,-9.002046,-0.600036,7.535201,-9.984754,-9.606665,2.450887,-2.773572,-1.850829,-7.676802,0.101820,8.321951,-8.125550,3.053806,-6.105205,-1.415127,-1.924228,0.476888,-8.242250,8.672958,-6.896008,2.498617,-2.079144,-7.498443,-7.486144,-1.337292,1.695564,-0.619274,-0.990717,-8.080643,0.565928,9.979999,-9.115947,-9.418449,1.754137,7.310367,5.969335,6.272792,-3.963844,-2.207158,7.985826,-7.319885,7.330363,-1.656522,-8.514532,-1.342854,0.458116,9.736532,-3.240675,7.261534,-3.024125,-9.734937,7.305428,8.375515,4.108992,-2.465827,-7.959468,4.964066,8.711588,0.822612,3.381984,-0.009204,2.686436,-5.544461,7.872207,5.087535,-5.811474,-1.916932,-2.972912,7.786611,5.746334,-6.326169,-9.519883,9.911372,7.600567,7.963020,-7.195210,-5.879765,-9.410018,-4.859908,-6.599858,7.561151,1.216056,-8.383662], dtype = "float64")#candidate|9614|(924,)|const|float64
call_9612 = relay.TupleGetItem(func_8271_call(relay.reshape(var_9613.astype('int64'), [6, 5, 14]), relay.reshape(var_9613.astype('int64'), [6, 5, 14]), relay.reshape(const_9614.astype('float64'), [924,]), ), 5)
call_9615 = relay.TupleGetItem(func_8276_call(relay.reshape(var_9613.astype('int64'), [6, 5, 14]), relay.reshape(var_9613.astype('int64'), [6, 5, 14]), relay.reshape(const_9614.astype('float64'), [924,]), ), 5)
output = relay.Tuple([uop_9604,call_9612,var_9613,const_9614,])
output2 = relay.Tuple([uop_9606,call_9615,var_9613,const_9614,])
func_9619 = relay.Function([var_9613,], output)
mod['func_9619'] = func_9619
mod = relay.transform.InferType()(mod)
var_9620 = relay.var("var_9620", dtype = "int64", shape = (420,))#candidate|9620|(420,)|var|int64
output = func_9619(var_9620)
func_9621 = relay.Function([var_9620], output)
mutated_mod['func_9621'] = func_9621
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9630 = relay.var("var_9630", dtype = "float64", shape = (12, 5, 16))#candidate|9630|(12, 5, 16)|var|float64
uop_9631 = relay.asin(var_9630.astype('float64')) # shape=(12, 5, 16)
func_8220_call = mod.get_global_var('func_8220')
func_8221_call = mutated_mod.get_global_var('func_8221')
call_9634 = func_8220_call()
call_9635 = func_8220_call()
output = relay.Tuple([uop_9631,call_9634,])
output2 = relay.Tuple([uop_9631,call_9635,])
func_9638 = relay.Function([var_9630,], output)
mod['func_9638'] = func_9638
mod = relay.transform.InferType()(mod)
mutated_mod['func_9638'] = func_9638
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9639 = relay.var("var_9639", dtype = "float64", shape = (12, 5, 16))#candidate|9639|(12, 5, 16)|var|float64
func_9638_call = mutated_mod.get_global_var('func_9638')
call_9640 = func_9638_call(var_9639)
output = call_9640
func_9641 = relay.Function([var_9639], output)
mutated_mod['func_9641'] = func_9641
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9650 = relay.var("var_9650", dtype = "float64", shape = (6, 9, 7))#candidate|9650|(6, 9, 7)|var|float64
uop_9651 = relay.cosh(var_9650.astype('float64')) # shape=(6, 9, 7)
func_8998_call = mod.get_global_var('func_8998')
func_8999_call = mutated_mod.get_global_var('func_8999')
call_9653 = func_8998_call()
call_9654 = func_8998_call()
output = relay.Tuple([uop_9651,call_9653,])
output2 = relay.Tuple([uop_9651,call_9654,])
func_9656 = relay.Function([var_9650,], output)
mod['func_9656'] = func_9656
mod = relay.transform.InferType()(mod)
mutated_mod['func_9656'] = func_9656
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9657 = relay.var("var_9657", dtype = "float64", shape = (6, 9, 7))#candidate|9657|(6, 9, 7)|var|float64
func_9656_call = mutated_mod.get_global_var('func_9656')
call_9658 = func_9656_call(var_9657)
output = call_9658
func_9659 = relay.Function([var_9657], output)
mutated_mod['func_9659'] = func_9659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8877_call = mod.get_global_var('func_8877')
func_8878_call = mutated_mod.get_global_var('func_8878')
call_9707 = relay.TupleGetItem(func_8877_call(), 0)
call_9708 = relay.TupleGetItem(func_8878_call(), 0)
var_9730 = relay.var("var_9730", dtype = "float64", shape = (9, 7, 11))#candidate|9730|(9, 7, 11)|var|float64
bop_9731 = relay.mod(call_9707.astype('float64'), relay.reshape(var_9730.astype('float64'), relay.shape_of(call_9707))) # shape=(9, 7, 11)
bop_9734 = relay.mod(call_9708.astype('float64'), relay.reshape(var_9730.astype('float64'), relay.shape_of(call_9708))) # shape=(9, 7, 11)
func_8095_call = mod.get_global_var('func_8095')
func_8096_call = mutated_mod.get_global_var('func_8096')
call_9738 = func_8095_call()
call_9739 = func_8095_call()
bop_9746 = relay.bitwise_or(bop_9731.astype('int32'), relay.reshape(call_9707.astype('int32'), relay.shape_of(bop_9731))) # shape=(9, 7, 11)
bop_9749 = relay.bitwise_or(bop_9734.astype('int32'), relay.reshape(call_9708.astype('int32'), relay.shape_of(bop_9734))) # shape=(9, 7, 11)
func_5343_call = mod.get_global_var('func_5343')
func_5345_call = mutated_mod.get_global_var('func_5345')
var_9759 = relay.var("var_9759", dtype = "float32", shape = (78,))#candidate|9759|(78,)|var|float32
call_9758 = func_5343_call(relay.reshape(var_9759.astype('float32'), [2, 13, 3]))
call_9760 = func_5343_call(relay.reshape(var_9759.astype('float32'), [2, 13, 3]))
func_4013_call = mod.get_global_var('func_4013')
func_4016_call = mutated_mod.get_global_var('func_4016')
const_9762 = relay.const([True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,True], dtype = "bool")#candidate|9762|(768,)|const|bool
call_9761 = relay.TupleGetItem(func_4013_call(relay.reshape(const_9762.astype('bool'), [16, 8, 6]), relay.reshape(const_9762.astype('bool'), [16, 8, 6]), ), 0)
call_9763 = relay.TupleGetItem(func_4016_call(relay.reshape(const_9762.astype('bool'), [16, 8, 6]), relay.reshape(const_9762.astype('bool'), [16, 8, 6]), ), 0)
output = relay.Tuple([call_9738,bop_9746,call_9758,var_9759,call_9761,const_9762,])
output2 = relay.Tuple([call_9739,bop_9749,call_9760,var_9759,call_9763,const_9762,])
func_9770 = relay.Function([var_9730,var_9759,], output)
mod['func_9770'] = func_9770
mod = relay.transform.InferType()(mod)
mutated_mod['func_9770'] = func_9770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9770_call = mutated_mod.get_global_var('func_9770')
var_9772 = relay.var("var_9772", dtype = "float64", shape = (9, 7, 11))#candidate|9772|(9, 7, 11)|var|float64
var_9773 = relay.var("var_9773", dtype = "float32", shape = (78,))#candidate|9773|(78,)|var|float32
call_9771 = func_9770_call(var_9772,var_9773,)
output = call_9771
func_9774 = relay.Function([var_9772,var_9773,], output)
mutated_mod['func_9774'] = func_9774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9208_call = mod.get_global_var('func_9208')
func_9209_call = mutated_mod.get_global_var('func_9209')
call_9778 = func_9208_call()
call_9779 = func_9208_call()
func_5502_call = mod.get_global_var('func_5502')
func_5503_call = mutated_mod.get_global_var('func_5503')
call_9784 = relay.TupleGetItem(func_5502_call(), 0)
call_9785 = relay.TupleGetItem(func_5503_call(), 0)
output = relay.Tuple([call_9778,call_9784,])
output2 = relay.Tuple([call_9779,call_9785,])
func_9799 = relay.Function([], output)
mod['func_9799'] = func_9799
mod = relay.transform.InferType()(mod)
output = func_9799()
func_9800 = relay.Function([], output)
mutated_mod['func_9800'] = func_9800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6785_call = mod.get_global_var('func_6785')
func_6786_call = mutated_mod.get_global_var('func_6786')
call_9827 = func_6785_call()
call_9828 = func_6785_call()
output = relay.Tuple([call_9827,])
output2 = relay.Tuple([call_9828,])
func_9831 = relay.Function([], output)
mod['func_9831'] = func_9831
mod = relay.transform.InferType()(mod)
output = func_9831()
func_9832 = relay.Function([], output)
mutated_mod['func_9832'] = func_9832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8325_call = mod.get_global_var('func_8325')
func_8327_call = mutated_mod.get_global_var('func_8327')
call_9838 = func_8325_call()
call_9839 = func_8325_call()
output = call_9838
output2 = call_9839
func_9849 = relay.Function([], output)
mod['func_9849'] = func_9849
mod = relay.transform.InferType()(mod)
output = func_9849()
func_9850 = relay.Function([], output)
mutated_mod['func_9850'] = func_9850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mod.get_global_var('func_6073')
func_6074_call = mutated_mod.get_global_var('func_6074')
call_10008 = relay.TupleGetItem(func_6073_call(), 0)
call_10009 = relay.TupleGetItem(func_6074_call(), 0)
func_6055_call = mod.get_global_var('func_6055')
func_6056_call = mutated_mod.get_global_var('func_6056')
call_10012 = func_6055_call()
call_10013 = func_6055_call()
uop_10018 = relay.atanh(call_10008.astype('float32')) # shape=(9, 7, 11)
uop_10020 = relay.atanh(call_10009.astype('float32')) # shape=(9, 7, 11)
func_9526_call = mod.get_global_var('func_9526')
func_9527_call = mutated_mod.get_global_var('func_9527')
call_10021 = relay.TupleGetItem(func_9526_call(), 1)
call_10022 = relay.TupleGetItem(func_9527_call(), 1)
output = relay.Tuple([call_10012,uop_10018,call_10021,])
output2 = relay.Tuple([call_10013,uop_10020,call_10022,])
func_10027 = relay.Function([], output)
mod['func_10027'] = func_10027
mod = relay.transform.InferType()(mod)
output = func_10027()
func_10028 = relay.Function([], output)
mutated_mod['func_10028'] = func_10028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8993_call = mod.get_global_var('func_8993')
func_8994_call = mutated_mod.get_global_var('func_8994')
call_10067 = relay.TupleGetItem(func_8993_call(), 0)
call_10068 = relay.TupleGetItem(func_8994_call(), 0)
output = relay.Tuple([call_10067,])
output2 = relay.Tuple([call_10068,])
func_10074 = relay.Function([], output)
mod['func_10074'] = func_10074
mod = relay.transform.InferType()(mod)
mutated_mod['func_10074'] = func_10074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10074_call = mutated_mod.get_global_var('func_10074')
call_10075 = func_10074_call()
output = call_10075
func_10076 = relay.Function([], output)
mutated_mod['func_10076'] = func_10076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10027_call = mod.get_global_var('func_10027')
func_10028_call = mutated_mod.get_global_var('func_10028')
call_10100 = relay.TupleGetItem(func_10027_call(), 0)
call_10101 = relay.TupleGetItem(func_10028_call(), 0)
func_6757_call = mod.get_global_var('func_6757')
func_6758_call = mutated_mod.get_global_var('func_6758')
call_10116 = relay.TupleGetItem(func_6757_call(), 0)
call_10117 = relay.TupleGetItem(func_6758_call(), 0)
uop_10118 = relay.acos(call_10116.astype('float32')) # shape=(9, 7, 11)
uop_10120 = relay.acos(call_10117.astype('float32')) # shape=(9, 7, 11)
output = relay.Tuple([call_10100,uop_10118,])
output2 = relay.Tuple([call_10101,uop_10120,])
func_10154 = relay.Function([], output)
mod['func_10154'] = func_10154
mod = relay.transform.InferType()(mod)
mutated_mod['func_10154'] = func_10154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10154_call = mutated_mod.get_global_var('func_10154')
call_10155 = func_10154_call()
output = call_10155
func_10156 = relay.Function([], output)
mutated_mod['func_10156'] = func_10156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8159_call = mod.get_global_var('func_8159')
func_8160_call = mutated_mod.get_global_var('func_8160')
call_10163 = relay.TupleGetItem(func_8159_call(), 1)
call_10164 = relay.TupleGetItem(func_8160_call(), 1)
func_9366_call = mod.get_global_var('func_9366')
func_9369_call = mutated_mod.get_global_var('func_9369')
var_10166 = relay.var("var_10166", dtype = "float32", shape = (3, 30))#candidate|10166|(3, 30)|var|float32
var_10167 = relay.var("var_10167", dtype = "float64", shape = (2, 480))#candidate|10167|(2, 480)|var|float64
call_10165 = relay.TupleGetItem(func_9366_call(relay.reshape(var_10166.astype('float32'), [90,]), relay.reshape(var_10167.astype('float64'), [960,]), ), 2)
call_10168 = relay.TupleGetItem(func_9369_call(relay.reshape(var_10166.astype('float32'), [90,]), relay.reshape(var_10167.astype('float64'), [960,]), ), 2)
uop_10170 = relay.atan(call_10163.astype('float32')) # shape=(6, 3, 1)
uop_10172 = relay.atan(call_10164.astype('float32')) # shape=(6, 3, 1)
uop_10181 = relay.asin(uop_10170.astype('float32')) # shape=(6, 3, 1)
uop_10183 = relay.asin(uop_10172.astype('float32')) # shape=(6, 3, 1)
bop_10188 = relay.not_equal(uop_10181.astype('bool'), call_10165.astype('bool')) # shape=(6, 3, 75)
bop_10191 = relay.not_equal(uop_10183.astype('bool'), call_10168.astype('bool')) # shape=(6, 3, 75)
output = relay.Tuple([var_10166,var_10167,bop_10188,])
output2 = relay.Tuple([var_10166,var_10167,bop_10191,])
func_10196 = relay.Function([var_10166,var_10167,], output)
mod['func_10196'] = func_10196
mod = relay.transform.InferType()(mod)
var_10197 = relay.var("var_10197", dtype = "float32", shape = (3, 30))#candidate|10197|(3, 30)|var|float32
var_10198 = relay.var("var_10198", dtype = "float64", shape = (2, 480))#candidate|10198|(2, 480)|var|float64
output = func_10196(var_10197,var_10198,)
func_10199 = relay.Function([var_10197,var_10198,], output)
mutated_mod['func_10199'] = func_10199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8522_call = mod.get_global_var('func_8522')
func_8524_call = mutated_mod.get_global_var('func_8524')
call_10211 = relay.TupleGetItem(func_8522_call(), 0)
call_10212 = relay.TupleGetItem(func_8524_call(), 0)
func_6055_call = mod.get_global_var('func_6055')
func_6056_call = mutated_mod.get_global_var('func_6056')
call_10213 = func_6055_call()
call_10214 = func_6055_call()
output = relay.Tuple([call_10211,call_10213,])
output2 = relay.Tuple([call_10212,call_10214,])
func_10234 = relay.Function([], output)
mod['func_10234'] = func_10234
mod = relay.transform.InferType()(mod)
output = func_10234()
func_10235 = relay.Function([], output)
mutated_mod['func_10235'] = func_10235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10291 = relay.var("var_10291", dtype = "uint32", shape = (11, 9, 6))#candidate|10291|(11, 9, 6)|var|uint32
var_10292 = relay.var("var_10292", dtype = "uint32", shape = (11, 9, 6))#candidate|10292|(11, 9, 6)|var|uint32
bop_10293 = relay.left_shift(var_10291.astype('uint32'), relay.reshape(var_10292.astype('uint32'), relay.shape_of(var_10291))) # shape=(11, 9, 6)
func_8970_call = mod.get_global_var('func_8970')
func_8972_call = mutated_mod.get_global_var('func_8972')
call_10308 = func_8970_call()
call_10309 = func_8970_call()
func_7935_call = mod.get_global_var('func_7935')
func_7937_call = mutated_mod.get_global_var('func_7937')
var_10317 = relay.var("var_10317", dtype = "float64", shape = (462, 2))#candidate|10317|(462, 2)|var|float64
call_10316 = relay.TupleGetItem(func_7935_call(relay.reshape(var_10317.astype('float64'), [924,])), 0)
call_10318 = relay.TupleGetItem(func_7937_call(relay.reshape(var_10317.astype('float64'), [924,])), 0)
func_9208_call = mod.get_global_var('func_9208')
func_9209_call = mutated_mod.get_global_var('func_9209')
call_10319 = func_9208_call()
call_10320 = func_9208_call()
uop_10322 = relay.acos(var_10317.astype('float64')) # shape=(462, 2)
func_176_call = mod.get_global_var('func_176')
func_179_call = mutated_mod.get_global_var('func_179')
var_10325 = relay.var("var_10325", dtype = "uint8", shape = (1800,))#candidate|10325|(1800,)|var|uint8
call_10324 = func_176_call(relay.reshape(var_10325.astype('uint8'), [15, 10, 12]))
call_10326 = func_176_call(relay.reshape(var_10325.astype('uint8'), [15, 10, 12]))
output = relay.Tuple([bop_10293,call_10308,call_10316,call_10319,uop_10322,call_10324,var_10325,])
output2 = relay.Tuple([bop_10293,call_10309,call_10318,call_10320,uop_10322,call_10326,var_10325,])
func_10332 = relay.Function([var_10291,var_10292,var_10317,var_10325,], output)
mod['func_10332'] = func_10332
mod = relay.transform.InferType()(mod)
var_10333 = relay.var("var_10333", dtype = "uint32", shape = (11, 9, 6))#candidate|10333|(11, 9, 6)|var|uint32
var_10334 = relay.var("var_10334", dtype = "uint32", shape = (11, 9, 6))#candidate|10334|(11, 9, 6)|var|uint32
var_10335 = relay.var("var_10335", dtype = "float64", shape = (462, 2))#candidate|10335|(462, 2)|var|float64
var_10336 = relay.var("var_10336", dtype = "uint8", shape = (1800,))#candidate|10336|(1800,)|var|uint8
output = func_10332(var_10333,var_10334,var_10335,var_10336,)
func_10337 = relay.Function([var_10333,var_10334,var_10335,var_10336,], output)
mutated_mod['func_10337'] = func_10337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10234_call = mod.get_global_var('func_10234')
func_10235_call = mutated_mod.get_global_var('func_10235')
call_10404 = relay.TupleGetItem(func_10234_call(), 1)
call_10405 = relay.TupleGetItem(func_10235_call(), 1)
func_8704_call = mod.get_global_var('func_8704')
func_8709_call = mutated_mod.get_global_var('func_8709')
const_10417 = relay.const([[3,-1,2,1,6,-4,-9,-3,-10,10,-6,-1,-9,6],[3,7,-3,-10,-6,-10,-6,-1,5,7,-6,-7,6,-9],[-8,-4,4,-6,2,4,8,10,-8,8,-4,-1,4,5],[5,-8,-9,-6,6,2,2,3,9,6,4,-3,1,-3],[3,8,1,4,8,3,-4,1,-10,-7,-8,6,-9,4],[-4,-6,4,8,-1,5,10,3,-4,1,-9,-3,-1,2],[-10,1,-5,5,-2,7,3,3,2,9,-10,-10,-9,9],[3,-2,-10,-9,2,4,-4,7,5,-3,6,2,2,-9],[6,3,-9,-4,-7,-4,8,-3,1,2,-10,10,6,-3],[8,1,10,-5,8,10,4,-6,-3,5,-9,-7,-1,-4],[-3,-9,-9,-4,4,-9,-1,-10,4,7,5,1,-8,-2],[7,10,-6,-8,-9,5,-4,-6,3,9,-9,5,8,-7],[-4,7,-8,-1,6,-9,-4,6,9,10,-7,-9,5,10],[2,2,-10,-7,-6,3,10,6,-4,-9,-6,5,9,-10],[2,10,9,9,-10,8,-7,-9,2,-10,-10,9,9,9],[-2,4,1,5,3,1,-2,-1,-9,3,-8,8,-1,5],[-5,-10,5,10,-6,-6,-10,-4,6,-9,-8,6,7,-5],[1,10,6,2,2,7,-8,8,-2,10,10,2,-4,-3],[2,-1,9,10,3,-7,5,-4,-9,-1,-7,-8,10,4],[-10,-7,6,-9,1,-10,-5,-1,5,3,10,-6,7,-1],[-7,1,3,-2,-7,-5,4,5,4,-10,-3,-4,1,7],[3,-4,-4,-10,4,7,-4,-10,-8,8,2,3,-2,-6],[7,8,-3,2,7,6,3,3,-6,8,9,-7,3,-8],[-9,8,10,-9,10,2,-3,-1,4,8,6,-5,1,9],[6,-10,4,2,-6,8,-4,5,3,-6,9,-6,-9,3],[-4,3,-2,4,1,-1,-7,-4,1,8,9,-10,7,5],[-8,-5,1,-2,-9,8,-2,-10,9,-2,5,-6,-6,-3],[6,-1,8,-9,-2,-1,-7,4,9,-2,7,-1,-6,9],[3,6,-1,4,-3,-8,3,-7,-10,4,6,-10,-10,7],[7,-7,-7,-10,10,-8,8,-7,5,5,-6,9,-5,-4],[9,2,-5,-8,1,-3,-3,-1,6,4,-1,-1,6,-8],[-10,-7,-2,-6,-9,3,2,1,8,-6,10,-8,-7,-10],[10,5,8,8,2,-9,8,-10,-8,6,3,-10,2,-3],[-8,3,1,-7,-1,-1,1,-5,-3,-1,-4,-9,-1,-1],[9,-3,7,7,5,8,-1,10,-10,2,9,-6,-2,-1],[6,-7,6,-3,7,2,4,-9,-1,-6,5,-8,-3,9],[-1,-8,2,1,-5,-4,4,6,8,-4,6,3,10,-6],[-6,-6,-7,4,-10,-1,1,9,3,-7,9,-1,-1,-6],[8,4,9,2,4,7,-3,1,4,-3,-5,8,-2,-1],[-7,-6,1,8,-9,9,-6,-1,5,-7,4,-5,-10,5],[4,-7,-4,-6,2,-8,4,-6,4,-1,1,-7,8,4],[-7,-2,-6,3,-1,-7,-3,-5,2,7,-1,2,-6,7],[-3,6,1,-4,-6,-8,-8,-3,10,9,-9,6,5,-2],[-9,9,-1,5,-2,10,9,-8,-5,-9,-6,8,5,7],[-4,-2,-9,8,-5,-1,-3,6,1,9,4,-2,6,-10],[-4,10,-8,-2,3,-5,2,-7,1,6,-9,9,-3,-6],[2,8,2,5,-10,7,8,2,-1,6,-4,3,7,7],[-4,-7,-8,2,2,-2,-6,-6,10,-4,-8,-3,3,4],[-10,10,-3,-10,-1,-2,2,5,-10,2,-10,-3,9,1],[-1,-3,-7,5,-1,4,1,-7,10,3,-5,-2,-3,5],[10,-5,-10,-10,-3,-10,1,-8,-10,5,7,1,-1,8],[7,-8,-7,8,5,-8,-2,-5,-2,3,-6,-1,-6,-6],[5,-3,-7,-1,-7,-6,6,3,4,-1,10,8,4,-10],[2,-7,2,-1,-2,5,-3,4,-7,-7,4,7,4,10],[5,-8,8,3,-7,10,1,3,-8,-3,-1,-6,-10,8],[8,-4,10,9,-9,-7,-9,10,-4,-3,-7,9,-9,-4]], dtype = "uint16")#candidate|10417|(56, 14)|const|uint16
var_10418 = relay.var("var_10418", dtype = "float32", shape = (528,))#candidate|10418|(528,)|var|float32
const_10419 = relay.const([-4.543964,-2.203500,6.896859,5.617453,-1.281781,6.169436,7.419715,6.487513,-5.514473,1.630144,-2.388296,-6.526805,-7.910678,0.134618,-8.761050,-5.979546,-6.867652,2.197659,3.096428,-8.584135,-3.132001,6.868228,-0.212244,-2.696062,1.890089,7.089638,9.213225,-8.034706,6.285325,8.467044,-9.748309,-4.286568,-7.346243,-0.259736,-5.015872,-0.668103,2.298515,-0.227302,-0.867101,-1.332722,-3.473876,6.303528,-7.569523,-0.840745,3.634815,0.516716,3.915497,-8.543775,2.966770,1.745151,3.211601,-1.764574,0.528359,-1.229236,0.283902,5.818826,-9.858942,-8.541751,-6.848080,-2.419400,-5.560068,-1.051905,-1.987681,-1.654672,3.793040,4.400477,0.221449,8.368172,5.497910,-1.472285,2.778134,-0.228442,-3.083120,-5.718991,1.677931,-8.314891,-1.516485,5.255010,8.776290,7.916550,0.686929,2.877665,-0.094393,-3.002343,-9.112579,6.584803,-4.929565,8.015595,-8.614322,-2.839021,-4.002960,2.266202,9.392243,1.305271,-2.767373,6.718267,-1.662724,-8.482562,-6.500372,-5.490241,9.567794,-3.536108,0.962449,-8.093602,9.103692,-5.146906,0.416520,-2.480102,-1.520575,8.483245,-1.114959,5.589031,7.370844,-9.128501,-0.557164,-3.910235,-7.434621,9.783013,-1.068751,3.103972,-7.723635,-6.359074,6.542685,-2.504045,-6.692977,5.546982,3.376000,5.752811,-2.582050,-8.243003,-5.110424,4.187027,1.970279,4.074647,-2.032613,5.935274,-8.771690,8.783111,-8.270292,6.500465,8.762208,-6.683181,7.447340,-6.591981,2.151959,-8.611101,5.451108,-2.583564,2.706867,1.193259,-1.441172,-8.262670,-4.247063,-6.409586,-3.655842,1.441074,-1.936871,-5.177457,-9.863973,-0.935153,7.936916,8.250245,-6.169282,4.018231,1.892042,5.586724,6.492884,-0.676684,1.568695,-4.711865,8.251666,-6.468004,7.160251,9.817717,3.651455,8.181124,7.735252,1.797429,-4.343448,1.086625,2.307928,6.934234,-5.206025,-6.017343,4.400621,0.378426,1.867791,-9.796147,-0.304043,-2.507056,8.143033,-0.589977,-9.423010,-7.360811,-2.396884,1.055033,0.615539,-3.623208,-8.082235,7.369137,-2.483165,-6.377746,-6.161543,-3.506231,6.616535,-2.333419,2.695754,5.755914,2.188317,-9.106146,7.290321,6.403109,6.555912,-0.871579,7.938650,1.959834,2.706621,7.797690,-5.825154,-6.381039,-8.758086,5.130140,-8.692148,2.256673,-7.293075,6.963040,7.817936,-9.111448,3.246933,9.836480,5.971040,-2.020086,-2.811036,-1.893404,1.096054,-2.667105,-9.316273,9.399814,-3.442779,-8.897167,8.748651,-2.420592,-9.799164,5.100221,-5.068989,-8.894288,8.405382,-2.342970,-7.008005,-4.329228,9.429937,9.883654,-6.022249,-1.638749,-0.184228,-9.566005,7.106308,-0.319751,5.926512,8.977679,-3.470307,1.345080,-7.825036,-4.962801,4.583419,-4.149573,2.871573,-3.132113,0.463585,8.572528,1.300557,7.362928,-5.249444,-7.609453,7.211292,1.663501,-6.402349,4.417678,-0.876116,1.595411,-6.081876,6.839515,-6.618380,-5.686786,-8.112709,0.760770,2.147690,-7.432065,-4.897753,5.179103,-8.854154,-8.522364,-8.887846,8.044740,2.798230,-6.775010,8.009237,7.651448,3.978692,7.511470,2.376898,1.395008,7.661895,7.910033,-0.255730,6.673087,4.668446,9.068635,7.300347,0.410283,-9.818345,-5.662657,5.216180,9.807243,9.010289,-9.123817,9.740717,4.600592,-9.675855,-2.784368,-3.747637,5.849938,1.873846,4.729680,-0.712213,8.032741,-1.600022,-1.673580,-1.634032,-8.243286,-4.127334,-0.150999,-1.725757,-8.334423,-3.282876,7.575137,-4.522731,7.583068,-2.779024,-2.471439,0.247780,9.491614,6.122377,7.165676,6.704654,-8.022161,-2.065881,4.935313,-9.569745,4.824250,-2.893671,6.199014,-5.848026,5.112763,5.553147,4.338607,2.435982,-2.610728,-0.130078,-1.760963,3.160573,9.084037,-3.605248,-2.862768,-2.650546,8.790669,5.176124,8.541930,4.855764,-5.140672,-5.299735,1.613381,-6.139155,-3.677022,8.622671,-4.726673,8.854237,7.142987,-6.500527,0.631791,1.070178,7.281833,0.185120,-8.674185,8.613828,-2.717149,-2.067487,-7.362803,6.892577,1.552230,3.763160,-4.397103,8.164147,-1.563874,3.393852,-5.329519,1.264795,5.162660,-2.314666,1.047126,-9.188990,9.750506,-9.190473,5.710162,5.077983,-0.154717,-0.009494,9.779605,-8.246238,2.220133,8.349270,7.142416,-6.323494,-9.459121,-5.592064,-3.048889,6.673109,-1.023660,2.997680,3.536866,-0.458508,-3.697078,-8.317133,5.526473,6.246679,1.569511,-7.612477,8.997400,9.661304,-1.111504,-7.159640,3.352242,-1.424511,2.391940,9.338219,-3.909558,-0.883090,9.969332,9.158908,-9.283900,7.022305,0.597515,-8.427624,-0.039503,-9.919002,5.237064,-8.628972,-3.961982,-7.469986,-6.919548,1.915429,-9.541075,2.225489,-2.487926,-9.193509,-7.431711,-7.664404,1.259371,-0.134166,0.532123,-4.795006,1.193121,4.306937,-7.906572,4.749644,7.700665,4.900871,2.301488,5.426342,5.413103,-3.130962,-5.502734,-1.444176,1.186891,6.006382,6.219204,1.699309,-9.180283,5.456941,8.852072,-2.102957,9.247126,-2.470844,-1.098010,-9.735553,4.153639,0.326457,-9.558598,5.307737,2.553270,-3.630573,9.189851,1.828401,-8.504426,-0.185105,-2.295555,-5.727527,-3.537364,-3.894161,6.346254,3.956004,7.880985,-9.965110,-6.513395,1.691813,-1.164152,-7.376813,7.326554,-3.666572,-1.492307,1.874870,1.800359,-4.733570,-5.814843,-7.605369,-4.728335,-0.741590,5.204099,8.793164,9.398477,3.431808,-3.153360,9.617548,6.969267,3.710900,-5.351384,-4.000089,-9.452309,7.022635,1.677308,-5.281306,9.782725,2.710783,4.399322,-1.614755,1.668512,9.575817,-7.021874,-4.096816,-5.288119,3.022708,-9.401078,-0.292401,3.021436,-6.501272,8.983286,-3.587961,9.312306,5.260364,-2.864102,6.595008,7.087547,5.873647,1.336617,-7.763766,3.428804,-0.567544,2.908284,-6.159396,2.777576,-0.166355,-5.243126,6.548796,-5.080460,-4.986825,4.640269,8.129915,-6.173910,-9.835389,-9.684848,8.845093,-7.866567,7.303313,-2.735136,-5.782338,-3.217577,1.618126,5.007241,1.059774,6.732757,-3.889326,2.425733,-3.951257,-6.057299,-0.517512,7.868828,-0.553769,8.411758,0.280016,-3.193899,2.505082,-6.241560,4.587417,-7.458400,-6.860239,-7.451064,-9.671466,-8.433244,-5.949119,9.863219,9.958665,-5.216688,-2.979778,3.528734,-6.980169,-3.982387,5.749832,-9.197411,-8.909059,2.044583,-5.549932,-1.357971,3.519597,4.939017,8.119057,-9.482260,2.346813,7.611720,8.993158,-2.956300,-7.680384,8.306056,2.099559,-9.802777,-4.477061,-1.691037,0.734781,8.426274,8.023027,-9.739222,5.252846,3.782140,-9.839627,4.662593,-6.234341,3.313191,-2.642855,-9.417200,-3.008377,5.661880,-7.777375,8.712987,-8.754253,-0.316541,-2.102849,6.640106,-9.311824,-9.372707,6.160524,-8.258875,7.709720,-2.256485,-3.958241,-3.656825,2.782895,-4.345357,9.808734,0.693703,-4.874827,-6.203950,1.513909,2.534761,-2.746459,-2.867198,6.884679,2.367803,-8.570566,-7.932752,-9.995487,9.718193,-6.743219,5.249573,1.149290,-4.028387,5.299277,-4.704798,-7.426859,-5.793295,-8.354187,-6.887196,2.210856,-7.220866,4.221690,-2.537042,6.197589,7.901177,4.352179,-2.600384,2.616111,6.848197,8.204808,9.893527,6.990616,-2.379300,-4.470749,6.462212,0.990045,0.157420,-4.069931,-5.117513,3.518481,7.360500,4.971426,-1.401195,-9.370575,2.163894,7.731574,7.733027,-9.463343,-7.303485,-0.214383,-6.665769,-1.498496,-8.231820,2.736563,-0.077415,-9.291437,-6.260061,6.379011,3.795275,-9.095195,0.095845,8.250154,-7.747045,8.636961,4.264951,-3.445079,9.033495,6.186891,6.158262,-8.825532,-2.035202,1.772327,-7.708713,0.230830,7.568445,-9.252743,7.921956,6.113011,0.679022,8.783210,9.890750,-3.772686,-8.119982,-4.624571,0.344290,7.068394,-4.714664,-2.666491,-3.711552,-6.218236,7.432485,-8.769744,-7.884306,-1.677071,-9.184922,-2.060452,2.445110,-9.240761,0.338988,2.582347,-5.089928,-3.102653,3.571657,3.216775,-2.086690,6.058827,9.924009,-8.551780,-9.875902,6.187578,-5.348939,-2.751185,4.736883,9.554627,2.832401,3.475602,-4.545838,-1.439702,-3.020386,8.555715,5.357701,-4.081160,-4.222863,2.031378,2.409695,-2.599862,-7.425250,3.594294,8.023914,-8.215697,6.019685,-7.613521,1.146993,2.737651,7.338325,-9.975169,-9.264537,3.978845,-6.352260,3.368762,5.051557,2.301372,-9.855962,0.417612,-7.294844,-9.455400,5.374256,7.716004,-3.174749,-5.277104,5.704621,-6.615410,7.959472,-3.729872,-6.059810,2.120795,9.225032,-1.983131,3.734559,-3.434315,7.603133,2.760548,5.189081,-5.515837,-7.190213,8.294957,3.921387,4.883990,5.750567,-9.231533,5.664163,-0.180311,8.699458,-4.996539,-7.248413,-2.822245,5.494030,7.727455,-3.387495,-5.128904,-7.789252,-6.095100,-7.812948,5.508502,6.665364,3.216706,7.347862,-6.553588,-4.003635,-8.119850,4.162636,4.839209,-3.961076,4.523525,-7.900606,9.496092,-8.845115,-8.598135,3.987629,-5.562808,-0.047146,2.740152,5.880627,-2.176973,-1.884531,9.964248,6.467256,2.266237,5.047694,-9.926478,-4.877640,-9.644305,8.096321,4.404897,-7.573478,0.720770,-5.764270,9.505624,-6.761802,1.117181,-0.307835,-6.475875,9.411507,2.985966,9.441728,-4.816136,-6.552263,-1.309106,-0.012435,-6.419959,7.788426,3.266988,6.411929,-2.644544,-4.504562,-0.100999,-4.403733,-8.212397,-9.676214,-6.771621,0.662843,-6.375920,8.366981,4.767731,-7.243417,6.833259,7.932007,0.011098,5.497459,2.884124,-7.806847,-8.688273,-7.907455,-0.076014,-0.931904,-7.047732,-4.704752,3.659627,4.635664,2.060550,1.580867,-5.697760,8.323908,3.763745,8.793821,-5.470353,-5.974683,-9.464267,5.555479,-1.125339,9.002428,8.804393,7.195597,8.001365,9.924183,-0.345986,9.526411,0.873345,1.536716,7.282406,6.075685,-7.879728,-8.676328,6.834032,9.158304,-8.318762,-2.539660,-9.478307,-1.033370,0.752972,-9.261042,-7.164780,-1.953544,-1.263081,-0.024147,-6.799302,6.301366,-9.792341,1.869873,5.340991,3.221100,3.824260,8.743289,1.370283,2.380232,0.201101,-2.805724,-9.740604,-2.911075,-8.969807,-8.319199,-8.107737,1.024018,-2.863162,-8.435872,-2.791117,9.808356,-0.896897,3.559657,-3.293497,-8.540328,6.284817,-3.322988,0.218813,-1.405493,2.590207,-9.932633,0.668755,-4.074390,-0.627296,7.147482,-4.866037,-1.179934,-9.497049,-1.183972,-3.978962,-3.667115,-7.066043,5.938596,3.824943,8.307017,9.002242,1.467848,-6.543299,-6.011107,-7.749396,5.040444,-3.612315,9.976568,0.721944,6.719948,-7.958084,2.341336,-7.026611,-6.697843,1.124800,0.827639,3.262580,3.778710,-5.027673,-4.419906,2.289688,-2.986262,9.217816,-9.341965,6.555253,2.079638,-5.026872,-6.705181,1.845211,-5.202905,6.866191,3.054721,-1.401216,-8.791715,-9.913783,-2.716560,-2.122843,9.664880,-0.738483,-7.826058,-2.871996,-9.502012,7.236675,3.698639,2.420900,2.108149,8.535122,-9.506625,0.990507,6.397065,5.890528,3.606986,-0.553562,-7.706765,1.466188,-4.176320,-4.392851,-8.304692,-8.516868,-4.506274,7.167296,-0.283307,7.975701,6.561249,9.529357,-9.507119,-6.711385,-0.236268,9.020854,3.457992,6.529542,-0.799077,-9.767562,7.400791,-8.394405,8.545817,0.923573,4.236310,-8.306069,2.009953,9.348467,-5.890173,-4.938732,-7.785918,7.006061,-7.781526,4.385285,-7.760557,5.060860,-9.412623,-9.831468,3.538685,2.726855,-8.017354,6.111868,1.752012,6.553122,-8.710400,-4.530925,8.131126,7.178250,5.440219,-0.387707,-6.007475,2.633025,-7.193518,-3.427670,-2.115366,-2.715393,9.544263,-0.022270,-8.635872,5.424754,6.288691,4.896187,0.164066,-2.184796,8.705966,9.391684,-0.730296,1.782715,-6.459593,5.185736,5.312398,9.839454,8.903603,-4.838485,4.970930,4.884258,2.849016,-5.678824,2.390408,9.783823,8.856224,-7.900665,-0.839528,-0.014454,-3.537453,7.573885,6.429856,-9.203257,-5.148036,-5.841762,-1.020458,3.455010,-0.284292,6.162275,-3.129242,2.040961,4.946384,-3.231214,1.115795,-0.349531,-4.487844,9.838213,-1.894460,-1.932682,-7.337676,-4.536742,-1.080679,3.047133,9.108242,-4.534870,2.550815,-3.367713,-0.680265,-3.331266,0.623460,4.565613,-3.667319,-3.350603,-4.966622,-7.195054,9.835939,-5.189248,-4.881440,2.702716,-9.742309,8.817847,9.465039,-6.360344,-3.823990,0.687400,3.515006,0.768705,3.643635,-4.758035,2.300130,5.541939,4.893667,-3.429492,9.882809,-5.723302,-2.745197,5.910338,1.122978,1.117349,5.122047,8.541537,5.729836,-8.248187,-2.580286,-0.739407,9.964197,8.471720,4.317497,-5.366811,5.206409,-8.673915,3.205346,7.439546,9.648782,-9.455431,6.759220,8.430423,5.884993,2.024340,-6.161582,2.664780,1.075811,8.897750,-0.295932,2.392327,-1.363321,5.232459,-3.996112,-4.444681,1.869157,-6.474709,-5.149420,4.705175,4.297041,-5.194123,1.161945,-5.098514,-8.572189,6.917647,3.317792,-3.548603,4.562888,2.671879,-0.068276,9.384350,3.349006,-8.084199,-7.000106,2.108633,-5.680664,0.475457,4.059962,2.763375,4.876971,-2.812835,5.548434,-2.377373,9.030772,-3.971573,3.885004,4.674969,0.534070,5.564517,-3.427151,-6.405586,-0.093188,-9.624614,7.317224,3.681945,-8.526267,4.594445,-2.373710,-3.556229,-1.787149,5.757004,3.049825,-4.184096,-3.800721,-7.207424,-8.616394,8.027996,-3.798088,-6.688074,6.574152,6.096981,3.116602,-2.021339,-4.056059,4.580607,8.319992,0.158449,-6.370977,-6.270454,1.475292,4.202768,5.305565,-1.603221,-6.481392,4.960270,-9.791530,0.160801,0.491415,6.143007,5.501252,-7.667102,0.239425,7.137709,0.164395,-5.931155,-5.841968,-6.569961,-4.987049,6.578846,7.407285,0.624694,5.335134,-5.205717,-6.441573,2.854734,-8.878777,-1.169492,9.160904,4.956110,6.418298,0.279633,7.493076,5.759184,-3.258719,-1.429181,9.138830,4.865121,7.301382,-0.198132,3.610660,2.926885,9.822226,5.679973,4.430357,-2.743385,-0.635429,-5.011668,5.448935,1.768383,-1.204077,-0.606366,4.819054,7.479391,7.863031,-2.282846,8.200169,-6.820647,-9.826327,5.350457,9.794917,-3.047892,0.746420,6.643390,5.617172,-9.678931,1.316072,0.198331,-1.273730,1.617465,-8.576759,-1.131372,1.909772,1.090178,-2.623680,8.343538,-0.497367,1.804169,-9.261961,-8.050399,4.279842,2.579216,0.157846,-2.998258,1.965055,2.281409,1.416215,2.192359,9.527530,-9.852295,1.908627,4.307586,-1.765546,7.956475,0.156702,-0.774825,-0.023710,1.530971,-4.447176,5.168312,5.158432,-3.563176,-6.088198,3.585082,-7.563196,2.910235,8.105711,4.557013,9.004166,-4.435092,-6.717052,-7.740645,2.789447,3.306186,8.529689,0.170044,9.826473,2.608538,-3.081136,1.137749,2.248272,-3.179861,4.864328,-2.285710,7.121585,-5.560200,0.476155,-7.985404,-2.368357,-3.594630,3.651820,7.154430,6.273205,-0.508267,2.687646,-4.649543,4.259624,-1.943931,-1.317430,2.050657,1.644255,-6.726806,-2.715581,9.941651,-0.689430,-8.863087,-7.672806,-8.932489,3.950897,3.338338,6.899588,6.344204,-1.346773,6.286078,-2.305651,-4.649515,-8.465112,-0.165514,-0.655452,-5.249041,9.505090,-1.230811,-2.423863,-1.472351,3.836256,-2.648161,3.734820,8.993767,5.740295,6.379429,-4.170764,-1.670505,-8.413783,3.494842,-5.932546,3.117965,9.655026,4.801214,-7.006084,0.451426,8.877824,-5.862903,1.097551,8.557331,2.455442,-6.716699,-8.170110,-5.757639,5.652051,9.366351,2.363641,0.857198,-5.367463,-9.771125,-9.537465,4.693267,-3.894909,5.224561,1.408973,-8.887262,0.823463,-9.297669,9.662729,-0.502324,3.669461,2.058035,-4.136279,0.535423,7.626897,7.917734,0.484109,-2.144102,9.661821,4.604344,-9.067733,0.738907,-2.258720,4.275627,-1.612528,-1.151525,-7.176338,0.828201,-0.737734,8.678610,-3.275096,-9.927000,2.239930,8.918477,-9.224979,-8.089756,8.456543,-6.544530,8.738603,7.917797,5.109531,8.897323,5.214060,-4.815566,7.275205,-9.713635,-0.188446,0.835166,9.654981,-0.901003,2.243313,-2.290177,-7.561423,-4.881821,-9.145794,-8.382024,0.593274,1.580918,-1.012957,2.091897,-2.613044,6.006447,-0.750492,-1.450469,-8.565090,5.524804,0.740258,-8.958849,-6.028882,-7.892590,-7.044590,-4.964525,-2.988045,8.749178,9.928580,8.537442,-4.282906,-1.748282,5.522839,-0.162906,-5.954670], dtype = "float64")#candidate|10419|(1568,)|const|float64
var_10420 = relay.var("var_10420", dtype = "float64", shape = (6,))#candidate|10420|(6,)|var|float64
call_10416 = relay.TupleGetItem(func_8704_call(relay.reshape(const_10417.astype('uint16'), [7, 14, 8]), relay.reshape(var_10418.astype('float32'), [528,]), relay.reshape(const_10419.astype('float64'), [1568,]), relay.reshape(var_10420.astype('float64'), [1, 6]), ), 3)
call_10421 = relay.TupleGetItem(func_8709_call(relay.reshape(const_10417.astype('uint16'), [7, 14, 8]), relay.reshape(var_10418.astype('float32'), [528,]), relay.reshape(const_10419.astype('float64'), [1568,]), relay.reshape(var_10420.astype('float64'), [1, 6]), ), 3)
uop_10425 = relay.asinh(call_10416.astype('float64')) # shape=(1568,)
uop_10427 = relay.asinh(call_10421.astype('float64')) # shape=(1568,)
func_4609_call = mod.get_global_var('func_4609')
func_4613_call = mutated_mod.get_global_var('func_4613')
var_10431 = relay.var("var_10431", dtype = "float32", shape = (75,))#candidate|10431|(75,)|var|float32
var_10432 = relay.var("var_10432", dtype = "float32", shape = (90, 1))#candidate|10432|(90, 1)|var|float32
call_10430 = relay.TupleGetItem(func_4609_call(relay.reshape(var_10431.astype('float32'), [15, 5, 1]), relay.reshape(var_10432.astype('float32'), [90, 1]), ), 2)
call_10433 = relay.TupleGetItem(func_4613_call(relay.reshape(var_10431.astype('float32'), [15, 5, 1]), relay.reshape(var_10432.astype('float32'), [90, 1]), ), 2)
bop_10445 = relay.right_shift(call_10430.astype('int16'), const_10419.astype('int16')) # shape=(90, 1568)
bop_10448 = relay.right_shift(call_10433.astype('int16'), const_10419.astype('int16')) # shape=(90, 1568)
func_6992_call = mod.get_global_var('func_6992')
func_6993_call = mutated_mod.get_global_var('func_6993')
call_10449 = relay.TupleGetItem(func_6992_call(), 2)
call_10450 = relay.TupleGetItem(func_6993_call(), 2)
func_7935_call = mod.get_global_var('func_7935')
func_7937_call = mutated_mod.get_global_var('func_7937')
var_10470 = relay.var("var_10470", dtype = "float64", shape = (924,))#candidate|10470|(924,)|var|float64
call_10469 = relay.TupleGetItem(func_7935_call(relay.reshape(var_10470.astype('float64'), [924,])), 3)
call_10471 = relay.TupleGetItem(func_7937_call(relay.reshape(var_10470.astype('float64'), [924,])), 3)
func_5376_call = mod.get_global_var('func_5376')
func_5378_call = mutated_mod.get_global_var('func_5378')
var_10490 = relay.var("var_10490", dtype = "float32", shape = (8, 56))#candidate|10490|(8, 56)|var|float32
call_10489 = relay.TupleGetItem(func_5376_call(relay.reshape(var_10490.astype('float32'), [8, 14, 4])), 0)
call_10491 = relay.TupleGetItem(func_5378_call(relay.reshape(var_10490.astype('float32'), [8, 14, 4])), 0)
bop_10494 = relay.logical_and(uop_10425.astype('bool'), bop_10445.astype('bool')) # shape=(90, 1568)
bop_10497 = relay.logical_and(uop_10427.astype('bool'), bop_10448.astype('bool')) # shape=(90, 1568)
func_5818_call = mod.get_global_var('func_5818')
func_5820_call = mutated_mod.get_global_var('func_5820')
call_10511 = relay.TupleGetItem(func_5818_call(relay.reshape(call_10416.astype('float64'), [1568,])), 2)
call_10512 = relay.TupleGetItem(func_5820_call(relay.reshape(call_10416.astype('float64'), [1568,])), 2)
uop_10523 = relay.sqrt(bop_10494.astype('float64')) # shape=(90, 1568)
uop_10525 = relay.sqrt(bop_10497.astype('float64')) # shape=(90, 1568)
uop_10532 = relay.asinh(uop_10523.astype('float64')) # shape=(90, 1568)
uop_10534 = relay.asinh(uop_10525.astype('float64')) # shape=(90, 1568)
func_5984_call = mod.get_global_var('func_5984')
func_5987_call = mutated_mod.get_global_var('func_5987')
call_10538 = relay.TupleGetItem(func_5984_call(relay.reshape(uop_10425.astype('float64'), [8, 196])), 0)
call_10539 = relay.TupleGetItem(func_5987_call(relay.reshape(uop_10425.astype('float64'), [8, 196])), 0)
func_5343_call = mod.get_global_var('func_5343')
func_5345_call = mutated_mod.get_global_var('func_5345')
const_10541 = relay.const([-8.642158,2.537253,1.269401,8.066009,-6.893552,-7.047844,-3.705382,7.912426,4.884010,9.039514,2.020166,-0.060929,-5.438159,-5.599473,6.087488,-0.674535,5.044147,-3.670156,-1.247442,5.001755,-0.757023,6.708509,-9.481317,-0.288462,-1.073353,-1.985894,-2.144389,-7.707884,-2.235317,-2.998934,-4.026927,6.991754,2.247051,-7.758294,8.394973,-1.737622,4.166448,-4.213963,-7.552055,-5.968331,8.075256,-3.473548,8.347710,-1.790104,-6.996897,2.121554,-6.394156,-5.107547,-1.079450,2.441007,-0.783672,4.718198,6.761651,4.010443,-9.127613,-6.868309,-5.299061,0.527032,-9.186588,5.263154,-5.875597,6.854536,-2.914435,-8.233120,-7.215322,-1.070634,0.252721,8.803054,-0.512616,-9.092681,-6.802102,-7.675264,-8.333091,-7.550234,4.760892,4.997734,-5.971887,-0.897109], dtype = "float32")#candidate|10541|(78,)|const|float32
call_10540 = func_5343_call(relay.reshape(const_10541.astype('float32'), [2, 13, 3]))
call_10542 = func_5343_call(relay.reshape(const_10541.astype('float32'), [2, 13, 3]))
bop_10553 = relay.floor_divide(uop_10523.astype('float32'), relay.reshape(uop_10532.astype('float32'), relay.shape_of(uop_10523))) # shape=(90, 1568)
bop_10556 = relay.floor_divide(uop_10525.astype('float32'), relay.reshape(uop_10534.astype('float32'), relay.shape_of(uop_10525))) # shape=(90, 1568)
uop_10561 = relay.erf(uop_10532.astype('float64')) # shape=(90, 1568)
uop_10563 = relay.erf(uop_10534.astype('float64')) # shape=(90, 1568)
uop_10566 = relay.cosh(bop_10494.astype('float32')) # shape=(90, 1568)
uop_10568 = relay.cosh(bop_10497.astype('float32')) # shape=(90, 1568)
uop_10572 = relay.sinh(uop_10561.astype('float64')) # shape=(90, 1568)
uop_10574 = relay.sinh(uop_10563.astype('float64')) # shape=(90, 1568)
func_9656_call = mod.get_global_var('func_9656')
func_9659_call = mutated_mod.get_global_var('func_9659')
var_10579 = relay.var("var_10579", dtype = "float64", shape = (378,))#candidate|10579|(378,)|var|float64
call_10578 = relay.TupleGetItem(func_9656_call(relay.reshape(var_10579.astype('float64'), [6, 9, 7])), 1)
call_10580 = relay.TupleGetItem(func_9659_call(relay.reshape(var_10579.astype('float64'), [6, 9, 7])), 1)
func_2696_call = mod.get_global_var('func_2696')
func_2703_call = mutated_mod.get_global_var('func_2703')
var_10589 = relay.var("var_10589", dtype = "int64", shape = ())#candidate|10589|()|var|int64
var_10590 = relay.var("var_10590", dtype = "int64", shape = (160,))#candidate|10590|(160,)|var|int64
const_10591 = relay.const([-8.396387,-8.869593,0.056987,3.247473,-5.641478,-4.235066,-8.913864,9.902033,0.227278,3.560036,-7.339820,1.542159,-2.152911,-0.415465,-1.762400], dtype = "float32")#candidate|10591|(15,)|const|float32
const_10592 = relay.const([[7.722101,2.756450],[3.429827,-5.871896],[4.346571,0.157319],[8.970429,-0.545272],[-1.326474,-4.731005],[-6.465758,-5.612912],[5.830892,-8.776867],[2.915502,5.623766],[-1.181855,0.265798],[-5.162241,9.127488],[9.972050,1.671059],[4.826535,5.818654],[7.650943,-1.811055],[-5.831873,-6.497795],[-0.544070,8.890438],[3.483443,-1.515905],[-8.251663,4.280444],[9.481645,-9.847515],[-8.860212,3.584692],[7.897518,7.466888],[4.760278,-5.062176],[0.256016,4.959522],[3.551850,4.103820],[8.664047,-2.587956],[1.478311,4.541058],[-3.153178,-4.388533],[8.046164,-0.575919],[-6.338016,8.933710],[4.127091,7.457266],[-2.956457,-4.046496],[-2.183325,-0.442055],[3.707699,0.452452],[5.601478,-7.489567],[-0.976513,-4.686196],[-1.780300,-1.272011],[-6.275044,-8.754433],[3.624096,-7.812490],[-8.632947,-4.112226],[7.537516,1.643592],[6.896861,0.558770],[2.443335,0.400436],[-2.166900,0.079472],[-3.736933,6.982472],[4.753209,9.970187],[-9.524008,-5.982408],[-6.237379,5.954624],[-4.029411,4.181257],[3.438920,-7.993603],[-5.741657,-4.476607],[4.289910,6.377428],[5.040225,-7.889463],[8.747226,9.169272],[-4.290739,-3.675794],[-4.406009,-4.368052],[-9.903596,5.914227],[-0.066165,-9.768863],[5.959523,-8.829000],[-0.692025,-1.080572],[-2.361360,-3.207385],[-7.624871,1.045491],[-0.746091,-6.685190],[4.766794,9.661238],[-9.318877,5.832787],[-1.409409,2.806676],[-4.387120,-9.154630],[7.915522,-5.909337],[2.877098,7.637881],[3.737524,-8.647421],[2.775116,-3.314039],[5.917901,-7.894313],[-1.276555,6.884795],[-5.406426,-0.584305],[-4.706929,2.474186],[-2.088821,7.604417],[6.090071,9.565524],[-4.839044,-6.944061],[-9.756408,-9.189887],[-7.818732,5.113637],[1.619396,0.099441],[5.891736,-1.573522],[-7.231504,-1.617898],[-8.012699,-9.776361],[-0.421369,-3.402071],[-4.797309,-8.833390],[7.021829,-3.328463],[-1.428815,9.870320],[-7.844303,8.213798],[-8.034081,8.228306],[9.520717,1.489668],[-0.945285,3.775415],[-3.604195,8.822799],[-4.882705,7.101434],[-5.928969,8.611416],[-6.020606,-9.318917],[3.535962,-7.170501],[-2.950568,-0.561548],[7.275089,9.816512],[-3.801047,7.985382],[-5.422172,0.442951],[-4.742573,-7.494778],[-5.534313,2.812378],[-7.050540,-0.171505],[9.137256,-9.074571],[-9.321047,-1.932665],[-9.937792,6.446316],[-4.379402,6.397217],[5.034207,-8.866646],[-1.914900,1.933782],[-3.091489,1.019312],[-0.111267,4.302810],[-5.214039,9.646264],[-0.060810,3.235428],[2.924680,3.697777],[6.481251,-1.669606],[8.741225,-5.980086],[-1.236739,6.862525],[9.631822,4.499725],[-0.363854,6.314203],[-2.987261,2.843570],[-4.981234,-2.916181],[-8.336098,-9.535025],[-3.564799,-3.056676],[0.493821,3.682816],[-6.973235,-5.552617],[0.112332,-3.823713],[-1.582350,7.438998],[-1.592164,-8.355907],[0.166243,9.640093],[-8.680263,1.333743],[-1.228253,6.605786],[-2.951900,7.399456],[6.956865,-9.458183],[-7.383708,-6.333935],[5.215665,2.126016],[-8.999534,-8.346545],[-8.584459,1.188209],[3.973553,-5.431942],[1.964207,0.097777],[-6.318049,-6.952410],[7.705893,7.132519],[9.056936,-3.112326],[0.343920,7.917551],[5.519993,9.589489],[1.665054,1.317029],[1.682501,-4.633317],[8.902133,-0.112610],[5.895282,7.192882],[-1.675550,-1.974710],[-8.703880,-2.926636],[-7.903884,2.925303],[6.699052,-7.434352],[-2.178112,-4.252762],[7.936867,-3.220921],[-6.279018,-7.155542],[7.817194,-8.581441],[-4.345217,-9.403088],[-1.049546,-4.644917],[-9.370403,-6.957393],[-3.366769,-4.177743],[-2.002679,-5.419392],[2.077028,-6.085388],[-2.019555,1.400656],[-0.028204,6.403720],[-8.409356,4.286813],[-5.717478,-1.101430],[-1.190270,-6.412996],[3.412566,8.430443],[3.710934,3.681831],[-8.304481,5.196223],[-4.390441,-6.227059],[-0.351389,-8.408794],[2.178642,2.092071],[3.250836,-1.117556],[0.449329,8.706726],[6.009215,-2.721838],[-2.734238,-1.040965],[-1.610565,6.132908],[-7.397305,8.376674],[6.668784,-3.583672],[-5.028790,-4.937030],[1.001721,7.189300],[-1.675856,1.638420],[1.267744,-7.605913],[6.312754,-1.635114],[-3.664491,-3.098543],[4.545102,-1.653810],[4.409387,-9.954626],[-3.166813,-3.355979],[1.150744,-4.133918],[-3.122764,-7.130588],[-1.542644,2.415876],[8.642844,3.990844],[-9.705444,-3.304931],[8.045459,-2.517806],[5.985451,-1.723563],[-5.769202,6.244483],[-7.525412,0.537839],[4.066357,-7.869968],[-4.911306,1.950943],[4.116684,-6.643194],[8.455664,-0.124499],[4.810992,2.463457],[8.278442,-1.732050],[-2.391259,4.569737],[-7.364653,5.557931],[-6.654028,7.723325],[-6.413590,-3.951751],[6.748028,4.469694],[-3.091611,1.450065],[-3.451287,-8.518681],[2.145609,1.853704],[6.094758,-2.029221],[0.379472,4.964992],[-2.494105,1.209636],[-6.133311,-7.247087],[-8.220673,-4.162365],[9.078580,-8.910092],[-7.777074,2.923945],[1.291161,-9.703595],[-9.583807,-9.341162],[-9.778229,0.059934],[-8.608720,1.783940],[7.246103,-2.380046],[9.575824,-6.963581],[6.094953,6.585113],[4.625198,1.784687],[8.794878,2.571449],[-4.324743,-7.737884],[-6.641920,9.622726],[-6.750165,7.418192],[4.698652,1.064125],[-4.453765,4.213302],[-8.844018,1.807179],[-3.873186,-1.578241],[-1.777216,7.787258],[-8.532783,-0.830300],[8.555387,2.998011],[-7.514430,9.459902],[2.527059,9.410707],[-1.539680,8.213126],[4.708117,0.484875],[8.929395,3.769560],[4.006067,-8.381665],[-9.733345,-0.819363],[2.583068,9.159468],[-4.923686,0.321086],[4.242967,2.535437],[8.787287,-0.922738],[-7.736110,-8.244811],[-4.498587,9.913325],[-5.405987,6.642468],[-7.343727,5.135828],[6.250614,-4.719808],[5.425825,2.083162],[-2.423550,9.086830],[3.669976,-0.091803],[4.270375,0.527689],[-3.491726,3.398753],[8.190046,-1.391289],[7.274997,8.849028],[-3.624462,-0.617757],[3.382603,0.869112],[9.918737,9.715736],[-6.209941,-7.277915],[8.348421,7.723122],[-3.802697,-8.026930],[9.365265,-3.606522],[-5.483470,-2.265420],[1.733884,3.714922],[-1.937364,-0.924742],[3.114599,8.783699],[9.891154,6.957408],[9.770825,-5.681639],[6.297637,1.252035],[2.261223,9.478263],[8.688652,3.562984],[4.318646,7.837150],[7.722888,7.558113],[-6.361598,-5.707777],[-6.205486,-2.737889],[0.922242,6.526861],[9.699679,2.125643],[-0.489036,7.725126],[-6.325094,-2.405184],[7.305817,-2.750271],[7.812516,5.687104],[-4.123545,9.284004],[6.775346,-3.540177],[4.712149,0.583829],[6.951340,3.481347],[-1.073107,2.956697],[1.079531,-4.224162],[-7.833653,1.762478],[-3.851985,6.719022],[6.106885,7.621286],[-7.929001,0.170119],[3.783425,-1.996547],[4.332882,4.451805],[-9.858179,8.655404],[-8.465895,-3.972832],[-9.283454,1.255599],[-8.618805,1.235159],[1.157468,-6.550999],[-8.821202,5.532202],[6.236616,-3.293671],[-0.092319,-9.359926],[2.610106,-6.375134],[5.426202,-4.185487],[1.270422,-5.939985],[-1.420139,5.911409],[-5.356098,4.251304],[9.344504,-2.106001],[-3.384722,4.042111],[-5.127312,-4.319934],[5.716073,-9.124005],[1.068795,-8.654898],[-6.194115,8.634346],[-9.238008,-8.178389],[-0.342493,-8.305719],[6.271995,-6.311566],[8.327201,-7.034126],[5.203924,7.870721],[8.040437,7.106182],[-8.765206,1.069868],[-3.235298,9.543311],[1.754473,0.670762],[2.691788,2.462206],[4.023305,6.427164],[-7.555491,-8.793055],[-6.424498,-5.875129],[6.141921,-5.161920],[-9.349808,-6.464533],[-0.896614,4.015565],[-8.554502,-3.891085],[-6.380820,-1.685258],[3.864641,7.835485],[2.936494,-6.240031],[1.200658,9.255859],[-2.546906,5.529891],[-2.252348,-1.213529],[0.338169,-6.374911],[-6.761569,-2.620599],[0.848466,-0.955384],[-5.893068,-6.657129],[-8.617326,2.816903],[7.680749,-1.657129],[-5.481330,-5.521554],[-0.496385,-9.031769],[1.518128,5.921070],[9.732583,-2.308032],[-2.332774,9.227882],[-9.676465,-5.815812],[-7.269178,8.255369],[-6.935806,-1.438038],[8.920487,4.756888],[6.443066,0.173473],[2.428579,-4.244569],[-4.459998,5.380481],[-9.576773,2.852165],[-7.491689,7.036087],[9.888687,-5.250616],[-5.753431,0.869675],[-9.255573,2.342500],[-1.971071,-6.150146],[0.196987,-2.486416],[9.413130,-5.257371],[-6.398427,1.242957],[2.353715,-7.635594],[5.028273,5.928834],[5.013743,2.619033],[6.871113,1.249308],[3.526682,4.397379],[-2.096421,5.721629],[6.462546,9.212725],[9.168345,-9.947873],[9.310055,-3.471524],[-0.055569,1.684561],[-7.336649,0.619926],[0.692034,8.759363],[-5.289609,-3.990001],[-0.575616,-6.596447],[3.624613,9.213036],[-6.166237,-2.093893],[-1.473317,-6.532883],[-3.306538,-7.222383],[-7.467191,-2.059059],[-8.773120,7.713293],[7.268312,-1.128677],[0.193181,8.617584],[-5.426459,1.097112],[1.822452,2.605820],[-6.383702,-7.017576],[3.528541,5.205829],[-2.842817,0.614424],[4.144389,2.979125],[-8.723124,-1.115191],[-7.041710,9.483473],[7.938205,-6.632494],[-5.740433,-7.209914],[7.977131,4.466214],[-0.027767,1.417554],[-7.235128,3.958815],[0.795390,-2.702266],[-6.147643,1.802236],[4.780514,-5.636617],[8.628607,6.920591],[-3.114415,5.567124],[-3.420746,-6.067889],[0.474475,5.704135],[-7.612660,-2.238779],[2.498103,-9.908509],[0.134050,-6.219736],[-5.905757,6.982780],[0.809938,0.416183],[5.172612,-7.479962],[2.479801,-4.937452],[-4.874527,-2.342638],[-1.481842,-6.290153],[-6.810325,-0.232558],[-5.293305,-9.043907],[4.704885,-9.549980],[-0.977774,-9.778237],[-0.085706,0.117054],[5.179236,9.848203],[0.836704,-2.058707],[-1.143920,9.800350],[1.636820,-3.341268],[-0.912318,-2.241287],[4.716979,0.925688],[-5.669667,5.315793],[-2.184004,-5.353668],[-0.336850,2.321238],[-0.755327,2.374645],[-0.088966,9.128635],[-6.197751,7.476175],[-2.762312,-6.688993],[-7.609651,9.529585],[5.450801,-5.811532],[8.815607,1.265461],[-6.011239,9.353117],[0.908425,2.272471],[6.510414,0.772321],[-9.851318,-5.127099],[8.135827,-9.546488],[-3.874758,-6.999845],[-2.046299,0.523676],[-2.284802,0.440004],[2.037463,5.412582],[-0.917798,-5.119383],[9.978563,4.807377],[-2.714821,-1.342249],[6.107922,-8.313057],[-2.962651,9.533655],[7.635929,-6.848314],[-4.319092,-7.950444],[-8.697754,-9.751028],[-0.258374,-2.492311],[-7.971424,6.664458],[9.442039,-2.791384],[4.265090,5.646272],[-3.714612,-6.180606],[6.165263,3.409843],[2.550412,-3.390751],[1.516627,-7.640599],[6.331709,5.846486],[-7.793509,9.677258],[-9.290196,-3.806121],[-9.631470,7.167152],[2.658255,-9.476204],[-1.125684,-1.899536],[6.352334,9.162279],[3.465478,-5.715789],[-7.730171,-8.674988],[-9.065626,-4.749939],[-4.343405,-6.213744],[-5.794371,6.760941],[-7.871966,3.065591],[9.545760,-7.478063],[-6.874580,7.381319],[7.353034,-7.466080]], dtype = "float32")#candidate|10592|(480, 2)|const|float32
const_10593 = relay.const([[-6.053743,-7.706706,1.745533,-5.672899,-6.156677,-6.779475,1.547507,4.272401,-8.833945,7.446433,5.012217,7.224136,-8.058086,-8.573399,8.710972,3.839671,5.531399,-0.926463,5.467605,0.460635,7.239089,5.904002,0.292598,-4.954681,-7.924704,0.107620,-4.101421,9.362508,8.319318,-3.917703,4.248743,-3.000166,7.838393,0.373714,4.283108,-9.042074,0.574752,8.462638,-6.761886,-5.913389,2.290303,-0.288692,2.484861,-6.103883,8.188164,9.597449,0.062752,-5.953348,-0.232838,2.268891,-2.132336,3.186232,0.628010,1.170316,-4.862574,-8.545562,3.684727,-0.109847,-0.668358,-8.408949,4.566547,-4.048667,9.959002,0.638544,0.658003,-4.420838,-2.973581,2.654613,-6.829656,2.087385,-4.406374,4.105535,-3.967875,-1.040308,-3.452304,-1.844933,-4.732166,-8.383682,9.727551,-5.491344,-0.648716,4.506506,-4.785846,-6.928209,5.399333,5.768723,2.842179,5.804166,-4.429810,5.154097,-9.708276,-1.660426,-7.520079,6.879101,-8.500357,-8.362571,-5.587224,0.096662,-4.855483,1.971628,8.358409,-3.017489,1.726776,-8.447020,8.426160,0.442549,-7.298667,6.017638,-0.819190,-0.412688,-1.039055,-5.608214,-8.049240,8.535607,1.010703,-7.657423,9.958256,-3.759730,6.783345,9.641534,-0.270526,-6.559286,-5.054513,2.595151,-9.436813,-0.406013,9.713371,0.770518,-4.515288,-0.302757,-4.251037,1.488415,8.680133,-8.767556,-5.417376,-2.306807,-8.889779,5.195075,-6.984483,-6.839335,1.720286,0.684327,2.790817,-9.557641,6.158934,7.038693,-4.352801,4.801490,-5.214178,-6.926895,2.858498,1.986699,8.933859,4.580722,-5.470589,4.598903,-4.574599,-2.274749,4.263115,9.256763,8.739793,-1.428436,1.291829,-1.789139,-7.843214,7.353052,5.678109,6.532162,3.515340,-3.652264,-7.706357,9.225121,-1.062077,-6.946534,7.635417,-0.624697,9.552126,-9.177012,-3.712739,-4.888994,2.288286,2.353575,8.092600,6.174462,7.625658,-2.760617,8.698154,-1.304114,8.977501],[-7.314801,-8.262500,7.348567,6.852378,9.217825,-8.814999,-4.607299,9.647986,-2.223884,4.136527,1.643268,1.131603,-6.383170,-3.815183,-4.571694,-3.974123,-3.129669,0.045075,-2.531003,7.037653,4.944665,5.357545,3.406328,5.731246,8.125507,8.243458,0.441696,-4.258056,-0.566112,-0.768685,-0.429157,2.906590,0.408135,3.098048,0.664138,6.553170,-8.623387,3.960349,6.305149,-8.057168,4.381976,-8.952702,-9.825523,-1.753037,8.293003,-0.502353,1.850620,-0.844070,-8.206807,-1.413878,-9.890774,-9.658925,2.164322,-2.103249,-8.249438,8.412668,-0.533172,-8.369810,5.106877,8.282804,9.993818,-7.653320,4.617824,-6.997720,-3.492476,-8.432922,-4.010495,-3.976221,-7.045814,6.092041,6.992428,-5.611713,-6.914120,-1.060893,6.861951,-8.339772,2.919136,-2.377464,8.257230,0.860603,3.571107,-3.577123,-9.837943,4.997474,0.817276,-1.653497,-5.871608,-8.272520,8.993582,-1.689608,0.207408,-0.531377,9.483620,4.928666,3.323276,3.955393,-8.936805,-8.673097,-1.491100,9.032753,-1.040973,-8.043964,-2.053501,3.683102,9.115479,5.351502,-0.382530,-8.207561,-8.563637,-9.164005,-2.584554,-3.963618,2.981834,9.114344,2.192335,1.681937,-0.535741,-3.806299,2.255492,5.462017,9.379773,1.214316,-8.375935,7.650199,9.975165,-0.543283,1.501757,0.246625,2.294045,-7.122495,1.148518,8.715641,1.289858,7.320805,0.252996,-9.186728,9.509148,3.063380,8.503274,-0.652197,-5.666795,-1.539346,6.121390,4.697684,-2.928868,8.666473,1.756965,-8.980901,-2.294467,5.573078,-6.247626,-1.717284,8.021591,1.597943,6.490225,-5.723594,-8.345276,5.530355,-7.329457,-9.076966,7.406984,-8.824280,-4.742392,4.884534,-0.276514,3.790332,-7.103893,-3.011175,4.525009,-2.199822,5.846456,-9.863291,5.166111,-2.670930,-9.968246,4.016273,-9.447136,4.838617,-3.327490,-1.964321,5.610214,8.244138,3.071784,-4.136703,9.564948,2.653514,5.273815,-9.621915,-5.221419],[-0.883333,7.041170,-4.283859,8.374043,3.033573,-4.240906,8.186357,0.294141,-8.247602,-6.468836,2.222285,6.678742,5.357541,-8.612786,-4.972765,-6.684582,-8.237222,-0.918812,1.160660,-3.073118,2.244872,-0.108388,-0.001198,6.693202,3.631153,0.722123,9.166729,7.026107,7.691773,-0.415779,-9.855794,-2.552169,-4.671945,0.137439,7.429180,-6.504088,4.281445,1.134727,-2.545182,-0.541609,-8.498123,-4.594541,-5.949079,-7.991150,-8.416967,0.652946,5.416763,0.911893,-7.321966,-4.015602,-0.434482,-0.301651,0.223845,3.757963,-2.056262,4.864028,-7.031646,-7.760947,-8.274528,-6.817526,8.905147,0.034298,-8.724520,8.349441,-3.811177,-4.895403,-1.941383,-3.968869,-2.344293,-2.070372,0.702079,3.907865,2.314188,-4.775881,7.645019,-8.520914,5.673214,2.890998,-7.775140,-9.793704,-4.639187,3.942555,-8.546922,4.788693,-2.518403,3.097219,1.230200,0.444098,8.135335,-5.821968,-3.972455,6.405879,4.412942,6.391966,0.808915,-5.879658,-3.369824,6.241365,5.623707,7.964995,-3.747490,7.912724,-9.283106,-0.801582,-6.874018,-7.526360,-2.151670,-0.645463,-8.996665,8.725205,-0.563841,-5.465593,-5.490983,5.154126,-9.318397,5.536266,2.963515,-1.501065,8.046699,9.081726,-2.338211,-2.364454,-5.611219,-6.331361,7.396075,-8.191580,3.812763,-7.927521,-4.292835,3.374934,0.549544,6.107690,3.538921,-7.225562,2.470202,-5.750183,8.935842,-9.275978,-4.832943,-2.302846,-6.760337,5.777560,7.668481,4.243366,0.675699,-1.611881,6.396340,1.620846,-6.450037,4.555893,-3.021758,8.327272,8.976213,9.446308,-8.357717,5.760724,-2.434810,-5.374558,-5.061775,-6.696130,-4.985765,-1.687706,-1.460910,-7.622627,2.947666,-1.812273,8.211881,9.477475,3.132054,-2.484599,0.875188,2.550091,-3.781307,3.286979,6.360332,-1.777789,1.936894,-7.650231,3.193240,-2.386306,-0.771239,-0.478084,-8.039225,-7.350525,-9.226661,0.248332,-6.522822,5.046600,-8.011215],[-3.396012,-3.366601,2.187746,0.152434,-0.418763,-3.105649,-2.931002,9.084141,-9.219351,-1.803597,-1.322962,-2.279689,-6.109062,-2.438858,1.162876,7.248816,-3.630731,7.346391,5.156994,6.526692,8.603739,-7.784046,3.600320,-2.077264,5.765348,-5.087016,6.950996,2.300620,-8.542737,4.741705,-0.520719,6.188318,2.784357,-8.605038,4.323315,-3.724353,8.349547,-7.937903,-5.296792,-7.303573,-7.202195,9.719329,4.741398,1.176848,-2.034979,-7.974809,6.079587,-3.263148,-6.033668,1.705161,-8.743174,-9.304627,-5.042432,-6.140813,8.958308,-8.498309,-8.140451,7.981384,-5.117150,9.504869,3.800198,4.831852,2.703390,3.224710,-3.800448,2.815830,-1.205560,-2.157108,8.602530,-9.132421,-3.782065,-6.752327,-3.515070,-0.943257,-1.088524,-6.236734,7.065622,0.349491,9.476164,-2.193344,2.596948,-7.200841,5.385715,3.906566,-6.287331,8.470405,-2.755985,9.291388,1.289372,-6.108781,2.659501,-6.856119,-5.924738,6.710833,-1.401830,-9.516842,6.386976,-3.283440,3.156582,3.267102,0.116379,-1.280893,-7.745673,-9.453466,-4.341657,-3.030490,9.326105,-4.287774,-1.031900,7.777452,-7.557349,-4.151756,3.947095,-4.313622,-6.542907,-0.702241,0.502467,-3.222163,-2.783971,6.841882,3.492509,-6.372995,-9.206303,-7.907649,-0.740015,-4.715037,8.112360,-5.427861,2.375616,-6.679762,8.578985,7.169492,1.794964,-9.826067,-0.894006,-0.646453,9.833669,4.831295,-1.673439,-4.319431,0.911432,0.549975,-7.699967,8.511391,-3.981348,6.675287,-0.127668,-5.761688,-2.975115,1.076124,9.158797,-4.334809,-7.346039,-4.210629,-9.668447,6.281908,3.345782,-9.241735,4.500751,7.911324,3.787096,6.344928,2.973859,-5.826182,-3.640962,9.861520,0.628120,2.300031,4.659073,-1.938594,-8.124085,1.829117,-3.944198,1.483146,-0.034226,-3.378335,-2.836129,9.166821,2.887311,5.008848,-3.835363,4.333202,8.248726,2.043203,9.421771,-1.092760,-6.005104,5.898345,3.299829],[-4.753215,-3.657216,-4.387337,-2.061641,-1.344233,0.787212,5.110557,-9.148806,5.770889,7.586303,-0.082071,1.089672,1.631272,0.466312,-5.822742,6.555237,-8.487326,9.170448,-3.882054,-6.396034,-8.005789,4.544521,4.893575,-9.821765,0.420729,-3.978032,-9.994779,-4.266909,8.250036,3.150205,-3.615461,-0.411603,-9.557924,7.052880,3.099239,4.122446,3.978771,4.048336,5.111988,-7.027618,-4.461366,-6.155093,-6.797513,-3.912710,-2.968973,7.986115,-4.763174,6.698603,-3.522413,-3.643493,0.655754,2.418877,-2.466109,3.037400,-0.614225,-3.840435,-2.084613,-2.460514,8.887206,-0.366358,-3.578222,-0.224880,2.264433,6.017913,2.989860,8.236383,2.843048,5.818878,-6.370966,8.010610,-3.289088,7.992175,6.576447,6.002755,-6.846558,-6.878291,-9.928258,5.523550,3.474218,7.222977,-9.364516,0.123692,6.090806,9.640720,6.410137,-2.605204,-8.789105,5.626136,4.819560,-2.855488,-7.952139,-4.448335,-3.203731,8.443544,-9.807374,-5.418213,3.022508,5.752406,-8.711170,-2.088725,6.434048,-4.603271,-3.454812,1.761980,-0.301809,0.773462,8.239374,4.890842,-4.884355,3.896332,3.529779,2.399326,6.272703,9.833985,-4.146488,0.197212,3.181411,8.507311,3.415434,6.280456,8.641741,0.982302,4.003765,-6.216879,6.459469,-8.544496,1.061565,4.138278,-7.346569,-5.998938,7.119956,4.635836,1.010604,-3.144644,5.808046,9.115355,9.600403,1.815647,0.814454,-1.959449,8.478731,-8.857894,-4.590077,7.084527,-4.119261,5.878708,-2.253766,-0.788834,-4.178046,-3.814312,7.072637,-4.314135,-6.775494,3.170898,8.075069,-8.524496,-1.081974,7.295147,7.196635,-6.259989,-6.202093,5.900022,-9.081517,1.787723,-7.253268,-6.025711,8.306272,-4.600097,1.564621,0.660602,4.006033,2.621783,-4.075825,0.662351,-4.144029,-2.093637,5.611675,1.362699,2.562963,-6.312809,-1.966594,8.600580,0.548377,-3.582204,2.587684,7.333837,1.477696,3.505042,4.215576]], dtype = "float32")#candidate|10593|(5, 189)|const|float32
call_10588 = relay.TupleGetItem(func_2696_call(relay.reshape(var_10589.astype('int64'), []), relay.reshape(var_10590.astype('int64'), [1, 16, 10]), relay.reshape(const_10591.astype('float32'), [15,]), relay.reshape(const_10592.astype('float32'), [960,]), relay.reshape(const_10593.astype('float32'), [945,]), ), 7)
call_10594 = relay.TupleGetItem(func_2703_call(relay.reshape(var_10589.astype('int64'), []), relay.reshape(var_10590.astype('int64'), [1, 16, 10]), relay.reshape(const_10591.astype('float32'), [15,]), relay.reshape(const_10592.astype('float32'), [960,]), relay.reshape(const_10593.astype('float32'), [945,]), ), 7)
bop_10598 = relay.minimum(uop_10572.astype('uint32'), relay.reshape(bop_10553.astype('uint32'), relay.shape_of(uop_10572))) # shape=(90, 1568)
bop_10601 = relay.minimum(uop_10574.astype('uint32'), relay.reshape(bop_10556.astype('uint32'), relay.shape_of(uop_10574))) # shape=(90, 1568)
output = relay.Tuple([call_10404,const_10417,var_10418,var_10420,var_10431,var_10432,call_10449,call_10469,var_10470,call_10489,var_10490,call_10511,call_10538,call_10540,const_10541,uop_10566,call_10578,var_10579,call_10588,var_10589,var_10590,const_10591,const_10592,const_10593,bop_10598,])
output2 = relay.Tuple([call_10405,const_10417,var_10418,var_10420,var_10431,var_10432,call_10450,call_10471,var_10470,call_10491,var_10490,call_10512,call_10539,call_10542,const_10541,uop_10568,call_10580,var_10579,call_10594,var_10589,var_10590,const_10591,const_10592,const_10593,bop_10601,])
func_10602 = relay.Function([var_10418,var_10420,var_10431,var_10432,var_10470,var_10490,var_10579,var_10589,var_10590,], output)
mod['func_10602'] = func_10602
mod = relay.transform.InferType()(mod)
var_10603 = relay.var("var_10603", dtype = "float32", shape = (528,))#candidate|10603|(528,)|var|float32
var_10604 = relay.var("var_10604", dtype = "float64", shape = (6,))#candidate|10604|(6,)|var|float64
var_10605 = relay.var("var_10605", dtype = "float32", shape = (75,))#candidate|10605|(75,)|var|float32
var_10606 = relay.var("var_10606", dtype = "float32", shape = (90, 1))#candidate|10606|(90, 1)|var|float32
var_10607 = relay.var("var_10607", dtype = "float64", shape = (924,))#candidate|10607|(924,)|var|float64
var_10608 = relay.var("var_10608", dtype = "float32", shape = (8, 56))#candidate|10608|(8, 56)|var|float32
var_10609 = relay.var("var_10609", dtype = "float64", shape = (378,))#candidate|10609|(378,)|var|float64
var_10610 = relay.var("var_10610", dtype = "int64", shape = ())#candidate|10610|()|var|int64
var_10611 = relay.var("var_10611", dtype = "int64", shape = (160,))#candidate|10611|(160,)|var|int64
output = func_10602(var_10603,var_10604,var_10605,var_10606,var_10607,var_10608,var_10609,var_10610,var_10611,)
func_10612 = relay.Function([var_10603,var_10604,var_10605,var_10606,var_10607,var_10608,var_10609,var_10610,var_10611,], output)
mutated_mod['func_10612'] = func_10612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9799_call = mod.get_global_var('func_9799')
func_9800_call = mutated_mod.get_global_var('func_9800')
call_10650 = relay.TupleGetItem(func_9799_call(), 0)
call_10651 = relay.TupleGetItem(func_9800_call(), 0)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_10653 = relay.TupleGetItem(func_5675_call(), 0)
call_10654 = relay.TupleGetItem(func_5677_call(), 0)
output = relay.Tuple([call_10650,call_10653,])
output2 = relay.Tuple([call_10651,call_10654,])
func_10676 = relay.Function([], output)
mod['func_10676'] = func_10676
mod = relay.transform.InferType()(mod)
mutated_mod['func_10676'] = func_10676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10676_call = mutated_mod.get_global_var('func_10676')
call_10677 = func_10676_call()
output = call_10677
func_10678 = relay.Function([], output)
mutated_mod['func_10678'] = func_10678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8159_call = mod.get_global_var('func_8159')
func_8160_call = mutated_mod.get_global_var('func_8160')
call_10705 = relay.TupleGetItem(func_8159_call(), 1)
call_10706 = relay.TupleGetItem(func_8160_call(), 1)
func_9656_call = mod.get_global_var('func_9656')
func_9659_call = mutated_mod.get_global_var('func_9659')
var_10714 = relay.var("var_10714", dtype = "float64", shape = (378,))#candidate|10714|(378,)|var|float64
call_10713 = relay.TupleGetItem(func_9656_call(relay.reshape(var_10714.astype('float64'), [6, 9, 7])), 1)
call_10715 = relay.TupleGetItem(func_9659_call(relay.reshape(var_10714.astype('float64'), [6, 9, 7])), 1)
func_5376_call = mod.get_global_var('func_5376')
func_5378_call = mutated_mod.get_global_var('func_5378')
var_10728 = relay.var("var_10728", dtype = "float32", shape = (2, 224))#candidate|10728|(2, 224)|var|float32
call_10727 = relay.TupleGetItem(func_5376_call(relay.reshape(var_10728.astype('float32'), [8, 14, 4])), 0)
call_10729 = relay.TupleGetItem(func_5378_call(relay.reshape(var_10728.astype('float32'), [8, 14, 4])), 0)
func_10332_call = mod.get_global_var('func_10332')
func_10337_call = mutated_mod.get_global_var('func_10337')
var_10739 = relay.var("var_10739", dtype = "uint32", shape = (594,))#candidate|10739|(594,)|var|uint32
var_10740 = relay.var("var_10740", dtype = "float64", shape = (924,))#candidate|10740|(924,)|var|float64
var_10741 = relay.var("var_10741", dtype = "uint8", shape = (3, 600))#candidate|10741|(3, 600)|var|uint8
call_10738 = relay.TupleGetItem(func_10332_call(relay.reshape(var_10739.astype('uint32'), [11, 9, 6]), relay.reshape(var_10739.astype('uint32'), [11, 9, 6]), relay.reshape(var_10740.astype('float64'), [462, 2]), relay.reshape(var_10741.astype('uint8'), [1800,]), ), 2)
call_10742 = relay.TupleGetItem(func_10337_call(relay.reshape(var_10739.astype('uint32'), [11, 9, 6]), relay.reshape(var_10739.astype('uint32'), [11, 9, 6]), relay.reshape(var_10740.astype('float64'), [462, 2]), relay.reshape(var_10741.astype('uint8'), [1800,]), ), 2)
output = relay.Tuple([call_10705,call_10713,var_10714,call_10727,var_10728,call_10738,var_10739,var_10740,var_10741,])
output2 = relay.Tuple([call_10706,call_10715,var_10714,call_10729,var_10728,call_10742,var_10739,var_10740,var_10741,])
func_10749 = relay.Function([var_10714,var_10728,var_10739,var_10740,var_10741,], output)
mod['func_10749'] = func_10749
mod = relay.transform.InferType()(mod)
var_10750 = relay.var("var_10750", dtype = "float64", shape = (378,))#candidate|10750|(378,)|var|float64
var_10751 = relay.var("var_10751", dtype = "float32", shape = (2, 224))#candidate|10751|(2, 224)|var|float32
var_10752 = relay.var("var_10752", dtype = "uint32", shape = (594,))#candidate|10752|(594,)|var|uint32
var_10753 = relay.var("var_10753", dtype = "float64", shape = (924,))#candidate|10753|(924,)|var|float64
var_10754 = relay.var("var_10754", dtype = "uint8", shape = (3, 600))#candidate|10754|(3, 600)|var|uint8
output = func_10749(var_10750,var_10751,var_10752,var_10753,var_10754,)
func_10755 = relay.Function([var_10750,var_10751,var_10752,var_10753,var_10754,], output)
mutated_mod['func_10755'] = func_10755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9799_call = mod.get_global_var('func_9799')
func_9800_call = mutated_mod.get_global_var('func_9800')
call_10833 = relay.TupleGetItem(func_9799_call(), 0)
call_10834 = relay.TupleGetItem(func_9800_call(), 0)
output = call_10833
output2 = call_10834
func_10838 = relay.Function([], output)
mod['func_10838'] = func_10838
mod = relay.transform.InferType()(mod)
output = func_10838()
func_10839 = relay.Function([], output)
mutated_mod['func_10839'] = func_10839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8159_call = mod.get_global_var('func_8159')
func_8160_call = mutated_mod.get_global_var('func_8160')
call_10910 = relay.TupleGetItem(func_8159_call(), 0)
call_10911 = relay.TupleGetItem(func_8160_call(), 0)
func_7338_call = mod.get_global_var('func_7338')
func_7341_call = mutated_mod.get_global_var('func_7341')
const_10922 = relay.const([-5.235062,-1.645956,-5.404343,-5.959569,-0.691551,-8.827998,-9.494829,2.402548,-4.632711,7.687536,6.914739,-6.412109,-6.639876,4.088991,3.224996,5.217538,9.824450,8.450002,-9.599453,3.834765,-0.323146,9.979761,-6.409561,3.267406,9.866360,2.638207,8.739802,-3.802028,-6.777738,-2.040830,-4.723452,5.438128,6.044153,5.991404,-5.414111,3.658574,-5.262384,8.573382,0.580344,9.506228,-3.822833,4.397434,8.226318,5.950091,5.551392,1.136669,7.865441,7.732358,0.749392,0.262515,8.047373,4.881676,1.328593,-0.270672,9.196171,2.072448,6.487473,-6.851534,-6.719569,-9.306792,7.235833,6.070841,-5.277617,4.030475,-9.691711,2.688530,1.259290,2.379837,-4.772056,8.008083,-2.819785,4.341456,1.578918,-5.499865,7.724615,1.054123,-2.857194,-1.984315], dtype = "float32")#candidate|10922|(78,)|const|float32
var_10923 = relay.var("var_10923", dtype = "float32", shape = (112, 4))#candidate|10923|(112, 4)|var|float32
call_10921 = relay.TupleGetItem(func_7338_call(relay.reshape(const_10922.astype('float32'), [78, 1]), relay.reshape(var_10923.astype('float32'), [448,]), ), 3)
call_10924 = relay.TupleGetItem(func_7341_call(relay.reshape(const_10922.astype('float32'), [78, 1]), relay.reshape(var_10923.astype('float32'), [448,]), ), 3)
output = relay.Tuple([call_10910,call_10921,const_10922,var_10923,])
output2 = relay.Tuple([call_10911,call_10924,const_10922,var_10923,])
func_10929 = relay.Function([var_10923,], output)
mod['func_10929'] = func_10929
mod = relay.transform.InferType()(mod)
mutated_mod['func_10929'] = func_10929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10930 = relay.var("var_10930", dtype = "float32", shape = (112, 4))#candidate|10930|(112, 4)|var|float32
func_10929_call = mutated_mod.get_global_var('func_10929')
call_10931 = func_10929_call(var_10930)
output = call_10931
func_10932 = relay.Function([var_10930], output)
mutated_mod['func_10932'] = func_10932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6463_call = mod.get_global_var('func_6463')
func_6465_call = mutated_mod.get_global_var('func_6465')
call_10998 = relay.TupleGetItem(func_6463_call(), 1)
call_10999 = relay.TupleGetItem(func_6465_call(), 1)
func_10154_call = mod.get_global_var('func_10154')
func_10156_call = mutated_mod.get_global_var('func_10156')
call_11020 = relay.TupleGetItem(func_10154_call(), 0)
call_11021 = relay.TupleGetItem(func_10156_call(), 0)
func_6073_call = mod.get_global_var('func_6073')
func_6074_call = mutated_mod.get_global_var('func_6074')
call_11022 = relay.TupleGetItem(func_6073_call(), 0)
call_11023 = relay.TupleGetItem(func_6074_call(), 0)
output = relay.Tuple([call_10998,call_11020,call_11022,])
output2 = relay.Tuple([call_10999,call_11021,call_11023,])
func_11026 = relay.Function([], output)
mod['func_11026'] = func_11026
mod = relay.transform.InferType()(mod)
mutated_mod['func_11026'] = func_11026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11026_call = mutated_mod.get_global_var('func_11026')
call_11027 = func_11026_call()
output = call_11027
func_11028 = relay.Function([], output)
mutated_mod['func_11028'] = func_11028
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11029 = relay.const([[[4.845789,-7.674692,9.810673,-6.548010,-7.347956,9.185235,-4.280705,-1.911949,-0.950023,-9.137315,-4.177653,-2.524486,6.971824,-9.962364,2.567889,-7.561331],[-2.402466,6.580369,3.463041,-8.670158,2.696214,-9.101933,9.505747,-2.440449,4.477625,8.856591,0.359663,4.690836,1.547872,-6.865189,-6.412219,0.523279],[-3.584870,-8.887487,-1.795224,3.854648,-3.322881,3.934428,-0.879028,-4.765890,-7.376204,3.992360,3.174300,8.875253,-4.924161,1.576832,-1.123524,9.836603],[3.138982,-8.837866,3.052802,5.017425,6.479205,6.072311,-5.142007,-6.530562,-4.400817,1.642751,-6.942110,-2.907875,-2.216155,5.719231,-2.201599,5.668654],[-9.052277,9.685557,7.374697,-3.775090,-4.744715,-0.422953,7.025568,5.019328,-4.762087,8.840517,8.422906,-5.322252,1.461716,5.908295,-8.949375,5.546516],[-9.581305,-5.543118,5.771182,5.034357,4.461904,7.759366,-9.990879,-7.032910,5.627030,1.242082,6.913036,-0.251760,-1.740001,-4.793398,4.174413,2.244517],[-1.582876,2.900815,-3.479704,1.644109,9.137327,-7.429182,-2.689057,-9.604483,-9.264168,-1.530552,1.378318,-8.701706,-5.878090,5.963635,-3.185348,-3.317440],[-5.705804,4.625723,-9.166201,-8.290774,4.302891,1.038712,5.858943,4.219254,3.342224,2.060383,-6.504885,-0.022352,-4.490861,-7.042969,6.034456,-2.292653]],[[4.775550,-4.266211,-8.100519,4.551961,-2.426158,3.843366,-2.580233,8.552177,9.604707,4.240544,8.422492,-5.861443,3.243248,-8.171774,5.646363,-8.797554],[-3.520839,-1.981261,-7.615936,-0.063152,-7.077455,-6.572880,-3.322944,0.758513,0.652011,-1.657352,-7.951238,-1.852920,1.617735,-4.769913,6.035467,9.692387],[-0.452388,3.783753,1.913887,0.345315,4.867144,8.033088,5.969396,0.397911,3.065475,5.631958,6.615490,2.313534,6.626184,7.609121,-1.119226,-7.818491],[3.318396,6.154768,-2.947753,-7.277712,9.939782,6.113014,-7.578100,0.631299,-7.063681,-3.333604,-6.648144,6.628645,6.957099,5.965906,9.608546,-8.463718],[5.237956,-4.205029,-4.109559,6.757023,-8.397891,7.857298,-6.669068,-7.416550,8.641040,-7.224004,-2.279596,4.683591,-2.856185,8.658068,0.508527,-8.734338],[-3.602383,-5.700221,-4.443182,-2.924255,-8.730223,6.803539,-2.278146,-8.732749,-0.245195,9.700501,-1.754062,3.075858,6.008279,-5.753076,-9.202915,0.073087],[0.950674,-8.581849,-6.437021,-9.168549,-5.993205,6.039319,3.656849,-2.915650,-5.626275,-0.433176,2.793848,6.079166,9.487165,7.863696,1.978631,-2.289878],[-7.808001,-4.055546,0.956130,8.656329,-6.116814,-9.024307,-6.947648,-7.712038,-0.326914,6.737643,-7.930633,1.213385,7.473953,1.713449,8.783138,5.748144]],[[-5.626195,-8.383410,9.940899,0.185680,-1.453359,7.466680,6.503401,9.180331,5.512719,8.955915,-1.546315,7.207990,7.880362,-3.799214,-7.491226,-5.583854],[9.754527,-1.201073,-5.376114,-9.529986,6.386052,-3.370112,9.409571,-1.052178,-6.095844,-3.474482,-4.884702,-6.043103,3.397665,5.578298,7.100071,-4.770202],[-8.706597,6.552996,1.250028,-4.263929,2.143889,5.441257,-5.915325,4.282436,2.878979,3.135580,0.685523,3.807330,-3.201632,-0.574852,-9.950815,-5.723372],[6.913524,3.068193,-7.123115,9.684315,-9.774660,-3.524345,2.653964,-5.650055,-5.375388,-0.234025,1.693884,-3.615626,-8.838225,7.092771,4.116337,-5.457441],[2.610734,4.142317,8.136341,-7.740494,3.081539,-8.361007,-2.950144,1.899123,5.338580,4.098439,5.446292,-1.863358,-6.164591,-1.694600,-6.263548,8.137239],[5.770113,3.184941,3.286044,-2.778951,-0.011360,9.897535,4.672761,0.109550,9.499059,-7.836886,-7.356372,-9.684744,-8.016607,9.224452,0.090924,2.128944],[7.114624,2.775619,-0.141320,-8.504712,8.510571,2.700957,-7.858201,0.701363,1.282799,5.148582,-7.969369,3.377035,-8.016383,9.599953,2.156221,-5.250939],[4.783373,4.544699,-6.706234,8.938524,-9.112090,-4.830298,3.433060,-4.191799,2.153708,9.591171,6.405926,9.039011,6.637596,-4.386382,2.234589,9.563551]],[[-3.496900,-3.614259,-5.916122,-5.904032,-4.812871,-0.642850,-6.107955,0.260926,-5.215949,-8.702671,1.393803,9.106165,-1.445925,6.440197,4.790708,7.485009],[0.627525,-3.875141,3.693216,-2.991977,1.269958,8.623671,2.383859,-4.827055,4.987468,-7.576160,-2.344718,3.824610,5.303235,-8.095240,-9.009118,-9.387929],[6.868425,1.895934,-1.664240,-6.704641,-9.290249,7.471707,-4.027174,3.540903,-5.573233,-3.686514,-5.181215,-7.236728,-1.624291,-2.914753,-1.961419,8.780803],[5.758519,-0.234825,-6.375561,2.082153,-7.300605,7.757501,-8.603957,0.649002,-2.845314,6.133972,9.966671,-9.001044,-1.780402,-1.855865,6.904612,-5.081571],[7.872439,-3.873525,-2.307291,-6.258594,7.063428,4.000980,3.267246,-7.958811,8.597111,-3.170427,9.730799,-5.703915,5.131847,-9.961135,-8.222738,9.301908],[0.437010,-1.118697,9.546992,6.495713,-9.442592,3.319266,3.107879,2.774747,7.950778,0.561647,-8.198989,8.357424,9.902192,-8.067291,-5.324074,5.595918],[-1.627086,8.698542,-6.150861,-5.098018,-9.160242,-0.267626,4.295443,-1.362198,8.957292,-9.368198,8.416074,6.334348,5.921927,4.903955,7.119778,-6.491650],[-3.858597,-7.535745,-0.678879,7.198361,-0.618812,-2.830820,9.805998,-9.302342,-0.131908,-0.027313,-1.765068,-8.795365,5.281207,-2.620126,-5.816234,-7.523316]],[[-3.977512,-3.357894,8.322550,1.850555,5.871190,-3.937883,-1.818081,-9.264018,0.146506,7.110835,-1.994191,8.981726,5.875176,4.142839,-8.381874,-1.698595],[-4.356073,7.963815,-1.435249,8.512444,-5.619067,-5.342958,-4.496697,-8.091713,9.432497,-7.524643,9.875176,8.419572,9.026676,2.584678,0.001824,-2.955197],[-4.895323,3.822244,4.851143,-8.798686,-7.595714,-2.509893,7.078513,-1.146569,-1.314582,6.696649,7.061953,-2.189887,8.436737,-8.691923,2.005607,-1.017132],[6.316602,-1.284203,-0.288905,-1.136786,3.977824,5.099126,9.956500,7.033665,-9.160665,-4.983006,-8.282660,-7.986840,-4.792735,-2.217102,-8.307170,0.820080],[-3.226486,-9.784882,-7.337669,-4.282243,9.732192,6.778067,3.948828,6.469586,4.684784,7.362918,-8.018045,1.607952,4.834588,1.338038,-3.135704,0.362863],[-0.401346,1.541157,-8.027064,7.513400,1.759190,5.274716,6.499632,7.470558,-0.240664,-2.479422,-0.046896,2.681249,2.248604,8.596446,1.190761,2.134094],[-8.358644,-3.151726,-8.826541,1.687442,-3.252431,-2.382040,4.381455,-8.757155,8.946957,-4.141447,-8.367958,6.663136,-4.281974,9.456730,2.144622,-3.888144],[5.998637,-3.814461,-8.134808,-3.765848,-2.190534,-4.590472,-0.228398,9.922788,-3.777503,6.550081,0.112922,-4.168636,-2.914773,1.179564,-3.248380,8.380895]],[[1.081541,8.747457,7.440049,-5.554558,6.627816,3.662776,-8.345896,4.242336,3.372584,9.027482,0.652920,-5.092454,-2.186058,6.643062,0.391818,-7.629577],[-7.019408,-6.870608,3.759555,-4.849013,-6.251799,-1.868650,-0.907632,5.399460,0.907165,2.598845,-3.778288,-5.694394,0.878030,-6.203231,-7.729392,8.596729],[-8.915926,8.764006,6.420658,-1.676318,3.098027,-5.230205,-6.752890,9.917281,-6.897921,-1.410561,6.014055,0.923389,-4.760314,4.860697,0.434160,-6.574028],[9.367500,3.193983,0.166078,-4.740264,4.224358,-5.983273,-4.976077,1.571730,-6.369340,4.055550,-7.125833,7.042686,-8.312225,8.765555,2.493304,-8.420073],[9.058673,9.611502,3.948982,-0.682165,-0.410154,9.756613,-6.942788,-4.599470,-3.115494,-8.218980,-4.577011,-2.200658,3.823057,-6.355000,8.999792,1.643464],[6.041533,8.411729,-0.921364,0.974808,-6.446129,0.563183,5.849202,-5.266834,4.125735,-6.459786,-3.351666,6.892501,-8.434630,-0.980045,-0.010187,3.949042],[5.674616,-8.085456,-4.013846,-9.607155,-9.297323,6.099441,1.131990,-8.447673,2.488521,8.424418,4.349735,4.381331,-4.825811,7.238371,0.871419,-4.474254],[0.318931,-3.128114,-4.949797,-7.088956,-2.238192,-7.161922,4.469194,-1.845043,1.773296,-9.751032,-1.866130,5.447656,-8.860637,6.773832,2.555081,-4.020015]],[[8.727866,-9.326918,7.009491,-9.381229,-4.160030,-3.977162,4.204623,-8.152381,-8.282345,3.461591,-3.136604,5.015106,5.367138,-6.356830,1.107738,4.321852],[5.322191,-4.228099,6.209065,-3.956170,-6.480176,1.539959,-6.783631,-5.568722,7.607237,0.729673,-5.264091,-2.151882,-5.008521,-1.879704,3.455565,-9.311557],[2.571667,5.462907,4.879889,1.400693,-5.994770,-3.260127,-4.094118,2.900902,-7.958082,-1.397767,-9.978908,1.268806,4.548056,-6.170611,1.562060,-2.146699],[5.141312,2.250255,3.398966,-1.981895,-8.838886,-9.501718,-2.934397,-8.986859,9.220880,3.341733,3.482621,-2.280187,0.482212,3.048262,6.582744,3.440682],[2.864303,6.263580,2.887457,7.103421,-7.450266,9.589813,0.419269,-3.089663,-7.389944,-8.392236,-6.840190,-9.214690,1.427743,-0.789423,6.055037,-9.030756],[7.910685,-3.296863,4.777506,-7.378530,4.729296,-1.102023,9.729948,0.777151,6.761976,3.496902,-6.314378,1.977044,1.013875,-1.672001,8.574976,2.517324],[6.955041,-8.830662,1.006601,-9.494374,-2.744168,-7.922222,6.985629,8.072600,1.751635,-0.908543,-5.961278,-6.284909,-2.060356,8.110431,1.496736,-9.004031],[-1.592385,5.484652,9.865234,-2.444816,5.973825,1.661721,0.457534,7.674464,0.199848,-3.098713,3.219594,1.777200,-1.639790,7.930874,9.551201,-7.166314]],[[-4.815560,-8.091290,3.751253,6.082819,2.748410,-3.816031,4.397115,5.300031,1.560789,3.520959,-0.905158,-9.526874,8.110267,-0.758198,5.651871,-4.564867],[2.532952,6.685941,9.337803,4.591086,5.952648,2.671061,3.279529,6.613146,8.363279,8.187130,1.683553,-1.555128,9.067668,-9.793825,1.454107,3.241453],[8.375722,9.138197,4.555684,9.094887,-6.926764,-7.212671,9.039594,0.067995,-3.215057,5.802893,-4.416535,-1.042613,-0.329748,2.145891,6.005242,-8.234947],[8.339523,5.801310,-2.669426,-3.609875,-5.013998,-4.435936,-3.013523,-1.064143,-2.264904,7.994584,3.536404,2.506044,-1.727934,7.159612,4.613839,-8.145752],[8.763024,4.512690,-0.282436,9.984930,-0.443761,-5.149049,6.216123,9.299103,-2.716565,-8.776605,-7.712462,-5.706428,-3.056634,-9.078522,2.129041,4.975959],[6.510126,9.313699,-9.219896,-7.707205,-7.569392,6.982150,2.301884,-8.623052,2.189371,1.492426,-9.549624,-0.638029,5.880621,-5.463874,3.168069,4.225241],[-9.530984,-7.727257,3.713655,-0.082359,-1.110211,8.317410,-5.805418,3.289779,0.856395,-2.320292,-4.149582,-7.478376,2.299064,5.615275,-5.624464,3.120748],[3.581239,0.909140,-4.570183,-0.794585,-4.111929,-8.385794,4.816084,-8.037006,-0.036015,-9.445338,-8.229410,-7.826770,7.171494,-9.791113,7.091326,0.074148]],[[-1.579442,3.468758,-6.903531,5.696559,-5.269679,7.277535,4.219572,-9.092939,-9.222007,3.712293,5.967583,1.054843,2.831929,0.834039,5.581357,3.705017],[5.017766,4.062391,-3.330101,-0.924540,-9.456618,3.042416,-1.756084,-1.045443,-6.261020,1.200791,3.096279,3.350338,-9.054592,9.848391,7.114909,5.467196],[-9.317821,-5.898486,4.842513,7.579297,-4.112458,-5.325015,-5.068750,-8.815181,-0.957742,-3.047610,-9.029483,-7.754203,-0.830192,-6.087338,-2.348737,7.940327],[-0.742312,0.424763,-8.582734,-9.844439,6.938646,1.842356,8.796697,3.649981,4.317395,9.928538,7.924232,3.092547,-7.523760,1.715820,8.884980,7.780553],[-3.209376,-3.112695,6.702742,0.862934,6.094219,-7.051997,-6.643579,-4.694815,6.789287,7.232406,1.975726,5.378389,1.751627,-3.121797,3.774941,-9.156246],[-0.216756,-7.848209,4.980297,2.373637,0.599478,8.457867,0.352533,6.191177,-4.859696,6.009862,4.506737,6.229401,6.198979,-1.650293,4.681293,-1.468887],[6.773431,9.768530,-6.536662,2.463395,-4.778482,-2.982457,-0.064912,-0.338813,-3.960964,-6.455618,-6.002007,-3.538666,5.096236,-8.845049,-8.358508,-8.785527],[-6.286578,-3.915438,-1.245693,-1.704881,4.510088,-2.236874,-3.881523,-6.051541,-3.909020,5.178247,-0.621135,-2.719895,-1.832201,-6.071544,4.371304,-6.723811]],[[-9.580124,3.045493,-1.590339,3.174891,-3.621958,0.910094,-2.194345,5.721119,-2.959273,-8.176892,8.743376,-8.169362,5.108219,-4.281838,3.362347,-0.874681],[7.748301,2.817981,2.545668,6.697622,-0.699053,8.010860,-5.290655,-6.818116,5.929298,3.648782,5.974520,-8.385617,-0.094609,-5.759952,3.739935,8.552827],[-5.978466,-2.556310,1.588731,1.694776,-9.740887,7.864114,4.590172,3.412943,-0.806071,8.666587,-5.479653,-9.171043,-5.845582,-6.267811,-4.296381,1.497084],[-3.523474,-2.405357,0.237530,-5.394204,-7.267116,6.197519,8.978762,-0.177782,7.191559,5.749939,4.229390,2.338264,-5.744705,1.821863,3.160276,3.354016],[-8.556908,-9.795975,6.852187,0.864933,-9.430990,-7.331142,2.780538,8.567972,-9.794974,-1.969072,-8.952351,-3.914032,-4.871935,9.086736,-7.924812,5.143218],[8.310767,-1.277725,-4.893177,-2.533391,-9.750431,-5.772997,-9.875918,4.633497,5.592362,-5.051013,1.989617,-7.846576,7.459303,0.541943,8.166581,-1.353172],[-2.071953,2.473858,7.027697,6.270324,-4.213392,6.904667,6.257563,-5.234910,9.141262,9.587541,3.854853,-3.131936,1.281188,-5.935343,-7.460589,2.090852],[7.186575,-2.821992,9.563267,1.078035,7.865944,-5.511324,9.042440,1.636627,3.378091,7.689747,6.904488,8.019970,5.329111,9.299830,9.505217,0.487303]],[[2.835420,6.109046,9.951862,4.912678,0.852982,-6.749752,-9.598596,0.206386,-3.398218,-1.026189,-1.953792,-1.272352,0.986697,-4.177030,8.732122,4.110681],[6.161104,3.878726,6.717146,1.849550,-6.304843,0.152074,-2.955351,-3.965596,6.067547,-8.117956,8.633490,-1.662669,-1.565781,4.462793,-3.490801,-3.006499],[4.120353,-4.466944,-5.860230,8.519729,7.749779,2.067474,-3.282489,-6.423534,-0.353841,9.659070,-5.378756,-5.419267,-6.590994,-7.192012,9.477519,-9.112319],[-0.011040,5.982921,9.711170,8.408492,-2.707972,-9.866180,-6.652730,-7.408214,2.676542,-1.139833,5.795532,-9.125634,-8.749997,-6.246840,2.415475,-8.525869],[-7.581871,0.858844,3.250586,-8.326751,6.780724,-4.873627,-1.149777,3.711372,-7.115401,6.654369,-8.884050,-0.142991,-4.642697,-2.638315,7.102321,7.984237],[6.506009,4.450587,0.087367,-8.834950,-5.650528,-2.692876,4.183919,-2.190806,-7.334052,-2.641968,0.637468,8.627760,5.294874,-2.393897,5.766396,-6.538575],[-7.152681,7.051356,-7.431684,-1.980747,-9.202993,0.735659,-9.546723,9.265288,3.370450,-3.969126,-5.010364,-4.044308,5.356631,2.735033,-5.701153,9.007925],[3.415326,-1.582123,-8.659992,7.110590,4.839384,8.457140,-1.321293,-6.481310,-5.908459,9.770495,4.953836,-7.797467,-7.378445,8.038804,-1.189784,5.120265]]], dtype = "float64")#candidate|11029|(11, 8, 16)|const|float64
uop_11030 = relay.tan(const_11029.astype('float64')) # shape=(11, 8, 16)
uop_11035 = relay.exp(uop_11030.astype('float64')) # shape=(11, 8, 16)
func_4013_call = mod.get_global_var('func_4013')
func_4016_call = mutated_mod.get_global_var('func_4016')
const_11049 = relay.const([True,False,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False], dtype = "bool")#candidate|11049|(768,)|const|bool
call_11048 = relay.TupleGetItem(func_4013_call(relay.reshape(const_11049.astype('bool'), [16, 8, 6]), relay.reshape(const_11049.astype('bool'), [16, 8, 6]), ), 0)
call_11050 = relay.TupleGetItem(func_4016_call(relay.reshape(const_11049.astype('bool'), [16, 8, 6]), relay.reshape(const_11049.astype('bool'), [16, 8, 6]), ), 0)
output = relay.Tuple([uop_11035,call_11048,const_11049,])
output2 = relay.Tuple([uop_11035,call_11050,const_11049,])
func_11060 = relay.Function([], output)
mod['func_11060'] = func_11060
mod = relay.transform.InferType()(mod)
mutated_mod['func_11060'] = func_11060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11060_call = mutated_mod.get_global_var('func_11060')
call_11061 = func_11060_call()
output = call_11061
func_11062 = relay.Function([], output)
mutated_mod['func_11062'] = func_11062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10234_call = mod.get_global_var('func_10234')
func_10235_call = mutated_mod.get_global_var('func_10235')
call_11063 = relay.TupleGetItem(func_10234_call(), 0)
call_11064 = relay.TupleGetItem(func_10235_call(), 0)
output = relay.Tuple([call_11063,])
output2 = relay.Tuple([call_11064,])
func_11070 = relay.Function([], output)
mod['func_11070'] = func_11070
mod = relay.transform.InferType()(mod)
mutated_mod['func_11070'] = func_11070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11070_call = mutated_mod.get_global_var('func_11070')
call_11071 = func_11070_call()
output = call_11071
func_11072 = relay.Function([], output)
mutated_mod['func_11072'] = func_11072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8159_call = mod.get_global_var('func_8159')
func_8160_call = mutated_mod.get_global_var('func_8160')
call_11084 = relay.TupleGetItem(func_8159_call(), 0)
call_11085 = relay.TupleGetItem(func_8160_call(), 0)
func_6703_call = mod.get_global_var('func_6703')
func_6706_call = mutated_mod.get_global_var('func_6706')
const_11092 = relay.const([[1.085447,-4.058502,-2.798927,-4.970820,7.397305,-5.593482,-2.598892,-8.537042,-5.252540,-3.233442,-8.753707,-9.123234,-2.065979,7.567427,6.642339,-6.555779,3.298402,6.953351,-5.287496,-9.859703,2.714849,0.497427,9.243828,-5.812949,8.850776,-7.010873,7.137046,4.567899,-6.622255,-0.944729,3.870586,-2.194688,2.619095,-9.456017,5.180041,3.836801,-0.546366,-2.902318,-2.729411,0.853344,-0.172839,-1.187636,-1.845044,1.944259,-2.651020,-5.501033,-0.106514,-5.741435,-5.865341,4.084455,-6.498830,-3.042871,5.155531,-3.223974,1.227088,8.945645,2.672271,5.005726,-2.065676,-7.209702,-0.351685,-4.893621,2.527435,-1.902337,-2.065691,0.126100,9.534922,9.054553,-3.179191,-3.095238,6.443990,5.899242,1.536792,-0.980387,4.148611,0.497253,-2.862238,-7.246727,-9.049788,1.787059,-8.900882,0.479891,6.485390,-8.567866,-2.703134,0.851637,6.780462,-3.886787,-7.018834,-2.597924,2.754897,8.815230,6.414759,9.779501,0.079965,-9.629406],[2.779330,3.412789,-2.389017,6.079621,-5.090920,-9.571175,0.763218,1.829789,-8.060813,-3.394693,5.827628,8.275391,9.402572,-8.953592,1.647653,7.235864,5.241347,3.455884,-9.325242,-6.674564,-4.415978,-4.269725,-3.243795,1.758695,3.904775,-1.024202,5.732632,-3.336552,3.951267,9.429294,9.545756,0.189703,9.201181,5.852716,3.097470,7.161997,-7.277180,-2.005021,3.684132,0.602181,4.458921,8.852680,5.275011,6.960486,-0.773169,-2.374613,7.853170,-3.208736,-1.588217,1.669042,-6.934414,6.546684,-5.392108,9.629324,9.896017,6.219407,-4.688523,-6.837953,-4.630092,-2.660319,-3.012423,-9.783377,4.001466,0.579059,-8.645824,2.454357,9.918777,-7.356885,-6.322920,1.649651,-9.689317,-4.448558,9.908277,1.510653,4.416494,-6.502896,-8.226553,6.532154,-8.311085,2.471660,3.945089,9.009284,-3.516240,5.757914,5.784068,-3.879606,8.618204,-7.477090,1.730423,-2.918216,-4.009983,7.832915,2.102360,-3.101384,7.045983,8.449300],[-8.386406,6.184220,-0.916489,-0.798898,9.335581,4.916560,5.119416,2.156563,7.076280,4.139720,-2.319203,-8.507485,-7.567983,5.387980,9.339964,-3.408554,8.049798,-3.022989,-5.688282,0.248209,4.942679,-2.980716,5.315306,-0.768384,5.591380,-5.413961,-8.081143,-6.632932,0.435672,-0.003332,-2.507253,-1.476441,-4.026514,6.305707,5.485591,-3.436845,1.530987,-2.906134,-6.637044,-2.869325,-5.809130,6.431086,2.815502,1.303259,-3.861170,7.895521,4.334342,-7.068947,-0.343999,-1.678618,4.073484,5.239548,-2.241335,7.511822,-0.161996,-5.654281,-5.397139,2.275232,0.665318,-1.605044,-4.437105,-3.667231,9.850176,7.255440,-3.038682,-3.237484,-6.275134,3.587802,8.209429,8.615371,-5.032769,-2.551558,4.062340,-5.356804,7.997679,-3.260765,2.266396,9.129277,-3.478158,-0.562389,-7.761037,-0.087213,-4.284707,0.936772,-3.371164,0.853474,7.706116,3.367731,0.764671,6.551368,-8.186492,-8.756481,2.106170,-1.720828,-3.265144,-6.577844],[8.167441,2.781140,-2.220698,4.129257,2.497824,0.915665,5.174630,-6.664577,7.542317,5.835216,7.331294,3.543304,8.187176,-4.521318,-0.804616,-0.946654,8.988492,-3.901624,6.827419,-4.945864,-4.239405,0.895779,-3.038182,0.372885,1.370662,8.256951,-1.286474,2.553675,6.363687,-4.896058,1.742153,6.450427,-1.861897,-6.613556,-7.860296,3.470438,1.634451,-5.892455,-9.388212,5.662792,-0.654659,-8.757051,0.563980,-2.585859,-1.981423,-5.908831,0.347029,-3.743978,8.261569,7.471330,-4.802356,4.287902,8.884703,5.076146,1.574011,-6.731797,-0.841128,-3.710127,-8.943037,-2.619648,0.061590,-5.091915,-4.116574,7.483283,-7.662668,4.771600,9.170373,-9.358965,-6.594183,-9.235062,-0.985745,2.327444,6.258455,-6.164211,-4.093428,-3.800167,2.894181,1.871975,-3.603508,-5.825460,6.689438,7.915219,-3.971818,-3.185627,5.969476,-5.098206,5.073987,-2.117077,0.867918,-8.414367,6.530510,-3.121762,-4.343194,3.020979,-4.828950,8.699940],[9.143665,-7.426526,-8.121010,1.001714,0.096216,0.263653,7.239834,0.176278,-5.783084,0.432259,0.941644,-7.285840,2.278467,-1.186019,0.799616,6.791045,-1.574006,-8.520959,-6.057262,-8.100915,8.860144,-8.758276,-9.742619,-5.880373,-6.211881,-0.436543,6.119619,7.154111,-2.716557,-3.495049,8.260411,7.274134,8.101847,-6.072481,3.425724,1.257874,-3.365518,9.279534,0.721139,2.687112,1.848956,2.283160,-4.443339,3.413036,-9.814868,1.092519,-6.105631,3.362999,-6.337081,0.286063,9.106839,9.282119,5.542476,-0.224388,-0.214655,-1.216285,2.796159,-3.561078,-8.923059,4.010968,5.753771,-7.773171,0.356342,0.768303,0.073598,2.871040,2.349926,-8.863000,0.133971,2.474078,-5.619723,-3.122082,-3.607726,8.533438,-5.650369,7.351204,5.897738,8.088044,-3.252497,5.601636,-2.810012,-2.189103,3.785544,-9.723678,8.867724,-9.831964,3.011062,5.691063,7.433122,-9.426911,4.427266,3.473646,8.522173,2.507285,7.415814,7.340507],[9.196446,2.000497,-4.525432,-4.493166,2.551521,7.837938,6.478009,-2.459765,0.089966,-2.328176,0.277612,-1.790637,8.093947,-9.832453,-2.933264,-4.797261,0.047190,-2.268511,9.305326,0.956917,9.863120,3.270195,0.493497,5.939722,-0.847957,-0.607993,5.337331,-9.809152,-6.757280,1.507749,-5.156476,7.613116,1.176720,0.074663,-7.173551,2.374716,2.965588,-6.584697,5.209670,4.584347,2.200323,0.317730,-7.556849,5.975156,-8.375324,3.320822,-6.288061,-4.048141,-0.367065,-7.487178,-2.416256,-0.310245,-2.415587,-0.210800,-8.552429,1.430590,5.825699,-4.431538,-5.849737,9.246210,-3.140563,2.808035,6.525406,-6.560507,3.460458,-5.186480,6.654404,5.711867,0.196631,7.734959,-3.573842,3.862182,0.238682,9.134815,-8.075745,-2.606968,-3.681045,6.572721,6.216649,6.209765,8.073097,-4.039956,4.184238,-9.998406,6.347829,-3.711564,5.897521,-0.778091,-7.435436,-0.999253,-4.488939,6.012822,8.841757,-3.390543,5.402737,9.962765],[6.030052,2.430289,-2.834831,3.468676,2.138306,1.412407,0.874361,9.229769,3.772293,-8.815481,-7.422228,-7.088537,5.329980,-0.177609,5.532051,6.545330,5.922323,5.718960,-0.836342,6.689382,-8.906594,-6.297009,-6.814357,9.980645,-6.167654,4.664403,-6.527645,-3.812761,-3.851502,-5.828939,-2.627620,-3.369823,-2.942298,6.647642,-9.624860,-3.229098,7.819991,9.414736,-9.182383,-1.536801,-4.954262,2.998576,1.036765,-7.329409,-7.540448,1.995072,-5.992760,-7.712277,7.576719,-8.892519,-3.489064,6.330400,8.011902,-3.370434,6.654896,-3.502148,-6.040225,-9.666541,3.038137,-2.737003,5.605075,1.864870,6.329978,-3.577324,3.957629,6.151461,4.543040,-9.740209,8.909284,-0.717296,0.250060,-4.603505,-2.406522,4.482873,-1.020019,2.148735,-6.315000,1.346753,-1.112987,-8.226783,-9.288460,-2.947338,-0.252592,9.893842,2.736765,3.237322,-4.096419,-9.512369,-0.864124,1.103812,7.887580,9.823164,8.743482,-5.231715,-2.005343,7.368943],[-8.732429,5.318292,-0.374277,-3.272720,-1.802078,-3.662099,7.954748,-0.034382,7.361057,-8.322084,-8.376837,-5.698935,9.687898,-0.895055,1.615187,-1.894199,9.383653,0.288192,-4.643034,2.674128,8.594841,-3.175716,-7.122540,-5.031193,-4.341603,8.400907,-9.686408,-1.731743,-3.024471,-6.155510,-5.136661,0.123246,-9.940953,-5.987261,-5.018466,1.283892,6.983029,-1.406731,-1.726246,3.057775,-0.484058,-5.113316,-5.677387,-1.776131,7.028090,1.033915,8.056184,9.230380,7.881775,6.850821,5.167831,8.726984,-1.717023,-9.264594,-5.417817,4.793788,-4.978700,-4.664774,-5.040648,7.919424,5.697107,0.318810,5.441923,-2.411634,-1.910728,-6.717976,-1.153469,0.043456,-0.198380,-4.936619,7.282283,3.750679,4.780125,5.030479,-5.528822,4.657169,5.656922,-0.851506,0.431072,6.011710,-5.814393,8.699863,9.598075,5.087099,-2.195434,-5.812361,9.670847,-6.558350,1.967113,-6.896283,-9.597566,1.138561,7.973075,7.788377,-8.953273,-7.967291],[-0.249114,-0.611027,-3.642884,7.372213,9.840508,4.729930,1.875823,5.679541,7.946275,-2.124928,1.721429,1.139076,-4.450767,7.604590,4.627260,5.183473,6.122749,9.166729,-2.246928,-7.356882,-2.904544,-3.799389,7.134509,4.307807,-7.852749,7.056027,7.158924,-9.733700,1.535301,0.260152,3.590589,-2.659193,-3.599194,5.382462,6.540213,-4.163183,7.604193,4.496190,-1.259095,5.937809,7.954188,-9.651193,7.332393,-6.915522,-6.136719,3.080434,-6.447324,-2.628316,5.231139,7.980909,6.781307,-0.487782,5.740594,-3.398099,-4.154938,-1.731092,-0.968448,2.651834,6.597134,-5.217753,7.924489,4.705949,0.279745,-8.002146,3.148437,0.369110,5.299542,1.424828,-6.919841,-4.971511,6.069966,-2.025329,1.473470,2.420698,9.883485,-0.256137,6.641307,-1.234449,5.081811,9.039248,6.566179,2.690708,0.078342,9.789768,-1.879564,-6.030500,-8.613053,1.517001,-1.824430,-3.628601,-6.923596,-5.665100,-6.951209,7.411598,2.644611,7.021402],[0.839676,9.028691,7.241517,-1.537392,-1.294132,-2.184244,0.585786,-1.767694,-6.167733,2.181326,5.042662,2.330558,1.602173,9.710438,2.740898,0.821542,-9.646105,1.929481,6.512044,0.982776,9.720726,-7.578165,-9.128750,-6.828592,5.813230,6.557913,-2.279049,-5.000023,3.477338,-1.340229,-5.613836,-1.231145,7.482519,9.533542,1.132388,-6.478522,-4.524727,-4.879310,-5.375002,0.810508,-3.625190,-1.007481,5.741039,-0.158099,4.962660,-3.273079,-3.019682,-6.245750,-7.713226,-6.391403,-7.533933,-5.805475,9.965873,7.858652,-0.178107,6.477222,-5.787055,5.257314,1.467043,-9.378598,-3.512485,-3.596522,4.014317,-0.593361,-0.492097,-3.009187,-7.244911,0.237353,2.585555,6.890235,-5.992575,-2.799789,-9.177884,-0.737761,-3.294245,-2.815420,0.985147,1.551619,6.326358,1.976620,8.476590,5.347377,-5.974598,7.006289,1.944764,0.358475,-2.619750,-5.787431,1.318348,-1.506087,-2.931991,0.867798,7.077927,-4.657156,-6.580105,0.149135]], dtype = "float64")#candidate|11092|(10, 96)|const|float64
call_11091 = relay.TupleGetItem(func_6703_call(relay.reshape(const_11092.astype('float64'), [8, 12, 10])), 0)
call_11093 = relay.TupleGetItem(func_6706_call(relay.reshape(const_11092.astype('float64'), [8, 12, 10])), 0)
func_2696_call = mod.get_global_var('func_2696')
func_2703_call = mutated_mod.get_global_var('func_2703')
const_11100 = relay.const(7, dtype = "int64")#candidate|11100|()|const|int64
var_11101 = relay.var("var_11101", dtype = "int64", shape = (160,))#candidate|11101|(160,)|var|int64
var_11102 = relay.var("var_11102", dtype = "float32", shape = (15,))#candidate|11102|(15,)|var|float32
var_11103 = relay.var("var_11103", dtype = "float32", shape = (945,))#candidate|11103|(945,)|var|float32
call_11099 = relay.TupleGetItem(func_2696_call(relay.reshape(const_11100.astype('int64'), []), relay.reshape(var_11101.astype('int64'), [1, 16, 10]), relay.reshape(var_11102.astype('float32'), [15,]), relay.reshape(call_11091.astype('float32'), [960,]), relay.reshape(var_11103.astype('float32'), [945,]), ), 5)
call_11104 = relay.TupleGetItem(func_2703_call(relay.reshape(const_11100.astype('int64'), []), relay.reshape(var_11101.astype('int64'), [1, 16, 10]), relay.reshape(var_11102.astype('float32'), [15,]), relay.reshape(call_11091.astype('float32'), [960,]), relay.reshape(var_11103.astype('float32'), [945,]), ), 5)
func_4013_call = mod.get_global_var('func_4013')
func_4016_call = mutated_mod.get_global_var('func_4016')
var_11106 = relay.var("var_11106", dtype = "bool", shape = (768,))#candidate|11106|(768,)|var|bool
call_11105 = relay.TupleGetItem(func_4013_call(relay.reshape(var_11106.astype('bool'), [16, 8, 6]), relay.reshape(var_11106.astype('bool'), [16, 8, 6]), ), 0)
call_11107 = relay.TupleGetItem(func_4016_call(relay.reshape(var_11106.astype('bool'), [16, 8, 6]), relay.reshape(var_11106.astype('bool'), [16, 8, 6]), ), 0)
var_11113 = relay.var("var_11113", dtype = "float64", shape = (10, 96))#candidate|11113|(10, 96)|var|float64
bop_11114 = relay.greater(const_11092.astype('bool'), relay.reshape(var_11113.astype('bool'), relay.shape_of(const_11092))) # shape=(10, 96)
func_9849_call = mod.get_global_var('func_9849')
func_9850_call = mutated_mod.get_global_var('func_9850')
call_11117 = func_9849_call()
call_11118 = func_9849_call()
output = relay.Tuple([call_11084,call_11091,call_11099,const_11100,var_11101,var_11102,var_11103,call_11105,var_11106,bop_11114,call_11117,])
output2 = relay.Tuple([call_11085,call_11093,call_11104,const_11100,var_11101,var_11102,var_11103,call_11107,var_11106,bop_11114,call_11118,])
func_11124 = relay.Function([var_11101,var_11102,var_11103,var_11106,var_11113,], output)
mod['func_11124'] = func_11124
mod = relay.transform.InferType()(mod)
mutated_mod['func_11124'] = func_11124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11124_call = mutated_mod.get_global_var('func_11124')
var_11126 = relay.var("var_11126", dtype = "int64", shape = (160,))#candidate|11126|(160,)|var|int64
var_11127 = relay.var("var_11127", dtype = "float32", shape = (15,))#candidate|11127|(15,)|var|float32
var_11128 = relay.var("var_11128", dtype = "float32", shape = (945,))#candidate|11128|(945,)|var|float32
var_11129 = relay.var("var_11129", dtype = "bool", shape = (768,))#candidate|11129|(768,)|var|bool
var_11130 = relay.var("var_11130", dtype = "float64", shape = (10, 96))#candidate|11130|(10, 96)|var|float64
call_11125 = func_11124_call(var_11126,var_11127,var_11128,var_11129,var_11130,)
output = call_11125
func_11131 = relay.Function([var_11126,var_11127,var_11128,var_11129,var_11130,], output)
mutated_mod['func_11131'] = func_11131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9584_call = mod.get_global_var('func_9584')
func_9586_call = mutated_mod.get_global_var('func_9586')
call_11160 = relay.TupleGetItem(func_9584_call(), 1)
call_11161 = relay.TupleGetItem(func_9586_call(), 1)
output = relay.Tuple([call_11160,])
output2 = relay.Tuple([call_11161,])
func_11173 = relay.Function([], output)
mod['func_11173'] = func_11173
mod = relay.transform.InferType()(mod)
output = func_11173()
func_11174 = relay.Function([], output)
mutated_mod['func_11174'] = func_11174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9280_call = mod.get_global_var('func_9280')
func_9282_call = mutated_mod.get_global_var('func_9282')
call_11185 = func_9280_call()
call_11186 = func_9280_call()
uop_11205 = relay.asinh(call_11185.astype('float32')) # shape=(16, 15, 9)
uop_11207 = relay.asinh(call_11186.astype('float32')) # shape=(16, 15, 9)
output = uop_11205
output2 = uop_11207
func_11221 = relay.Function([], output)
mod['func_11221'] = func_11221
mod = relay.transform.InferType()(mod)
output = func_11221()
func_11222 = relay.Function([], output)
mutated_mod['func_11222'] = func_11222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6992_call = mod.get_global_var('func_6992')
func_6993_call = mutated_mod.get_global_var('func_6993')
call_11323 = relay.TupleGetItem(func_6992_call(), 2)
call_11324 = relay.TupleGetItem(func_6993_call(), 2)
func_4609_call = mod.get_global_var('func_4609')
func_4613_call = mutated_mod.get_global_var('func_4613')
var_11327 = relay.var("var_11327", dtype = "float32", shape = (75,))#candidate|11327|(75,)|var|float32
const_11328 = relay.const([-0.876976,9.652203,-3.154140,2.341454,-7.937963,-7.883760,-3.821221,3.487896,4.112641,-9.022304,7.426325,0.631995,9.375303,-8.872642,-9.781775,5.678615,8.238534,1.842211,-8.977622,-9.576515,-6.941100,-9.634768,-2.667571,-8.415646,2.403423,-9.971909,-1.679940,-8.795140,-3.836411,5.043749,-7.572483,3.861998,9.945268,0.141245,-5.405148,9.161679,9.846070,9.769563,5.408339,3.581421,-8.408294,7.771761,3.720363,5.463274,-1.027689,3.660216,7.717855,5.639942,8.206374,-9.634865,-6.745902,-5.057209,-1.317736,8.881914,-8.313912,-2.900158,0.379309,1.385910,4.261451,-8.492813,4.912552,-7.279196,-4.753240,-0.543658,0.646215,2.263715,-5.692972,3.524867,7.050526,-1.849977,5.534560,7.680761,-8.384008,0.026496,4.854617,7.954700,5.338728,2.984562,7.522622,-8.408513,0.138862,-5.395640,2.614891,-6.573708,8.899179,-0.551179,9.853169,1.514241,8.161383,4.157111], dtype = "float32")#candidate|11328|(90,)|const|float32
call_11326 = relay.TupleGetItem(func_4609_call(relay.reshape(var_11327.astype('float32'), [15, 5, 1]), relay.reshape(const_11328.astype('float32'), [90, 1]), ), 2)
call_11329 = relay.TupleGetItem(func_4613_call(relay.reshape(var_11327.astype('float32'), [15, 5, 1]), relay.reshape(const_11328.astype('float32'), [90, 1]), ), 2)
output = relay.Tuple([call_11323,call_11326,var_11327,const_11328,])
output2 = relay.Tuple([call_11324,call_11329,var_11327,const_11328,])
func_11348 = relay.Function([var_11327,], output)
mod['func_11348'] = func_11348
mod = relay.transform.InferType()(mod)
var_11349 = relay.var("var_11349", dtype = "float32", shape = (75,))#candidate|11349|(75,)|var|float32
output = func_11348(var_11349)
func_11350 = relay.Function([var_11349], output)
mutated_mod['func_11350'] = func_11350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9163_call = mod.get_global_var('func_9163')
func_9164_call = mutated_mod.get_global_var('func_9164')
call_11355 = relay.TupleGetItem(func_9163_call(), 0)
call_11356 = relay.TupleGetItem(func_9164_call(), 0)
output = relay.Tuple([call_11355,])
output2 = relay.Tuple([call_11356,])
func_11357 = relay.Function([], output)
mod['func_11357'] = func_11357
mod = relay.transform.InferType()(mod)
mutated_mod['func_11357'] = func_11357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11357_call = mutated_mod.get_global_var('func_11357')
call_11358 = func_11357_call()
output = call_11358
func_11359 = relay.Function([], output)
mutated_mod['func_11359'] = func_11359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mod.get_global_var('func_6073')
func_6074_call = mutated_mod.get_global_var('func_6074')
call_11374 = relay.TupleGetItem(func_6073_call(), 0)
call_11375 = relay.TupleGetItem(func_6074_call(), 0)
func_5502_call = mod.get_global_var('func_5502')
func_5503_call = mutated_mod.get_global_var('func_5503')
call_11378 = relay.TupleGetItem(func_5502_call(), 0)
call_11379 = relay.TupleGetItem(func_5503_call(), 0)
output = relay.Tuple([call_11374,call_11378,])
output2 = relay.Tuple([call_11375,call_11379,])
func_11381 = relay.Function([], output)
mod['func_11381'] = func_11381
mod = relay.transform.InferType()(mod)
output = func_11381()
func_11382 = relay.Function([], output)
mutated_mod['func_11382'] = func_11382
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11393 = relay.var("var_11393", dtype = "float64", shape = (5, 9, 6))#candidate|11393|(5, 9, 6)|var|float64
uop_11394 = relay.asinh(var_11393.astype('float64')) # shape=(5, 9, 6)
var_11397 = relay.var("var_11397", dtype = "float64", shape = (5, 9, 6))#candidate|11397|(5, 9, 6)|var|float64
bop_11398 = relay.add(var_11393.astype('int16'), relay.reshape(var_11397.astype('int16'), relay.shape_of(var_11393))) # shape=(5, 9, 6)
func_6703_call = mod.get_global_var('func_6703')
func_6706_call = mutated_mod.get_global_var('func_6706')
const_11420 = relay.const([[-3.479507,-6.802670,-0.279201,-3.142516],[1.673424,-9.050578,-0.596710,6.930562],[-5.429136,-3.946150,-0.572328,-8.293432],[2.398143,-5.406897,-5.681234,6.562096],[6.626701,-2.440293,-2.541226,6.386724],[3.235132,-1.818820,8.994576,1.721186],[-8.158225,-8.566872,-9.499300,-6.586043],[-9.144171,8.295791,0.753947,-2.511495],[-3.582221,-8.260766,1.648594,1.984191],[6.269391,-8.158261,6.840910,-0.251673],[4.413920,9.545525,4.811218,6.504953],[-2.100471,1.300924,0.191830,-1.906238],[-3.336349,2.501400,-8.136123,-1.839676],[-0.442081,-5.920094,-6.400209,9.027432],[-4.232649,-2.928262,5.449876,1.906679],[-3.226949,6.256987,-9.971923,-1.922694],[-4.162269,9.432828,-3.884058,-7.498147],[-1.827188,-5.070411,4.837914,1.676251],[-8.673478,-0.656730,9.732622,9.319768],[-1.245607,-7.328540,-5.049301,9.609821],[-8.298721,-3.270003,3.147459,2.345577],[9.390718,-0.556523,8.771853,-6.253959],[4.501577,5.628102,7.222507,6.698366],[5.386497,-8.801439,-6.518834,-3.526526],[-5.361018,2.300021,5.534050,-0.742182],[-6.820459,-4.415846,-7.099497,-6.041934],[5.487208,-1.072289,-2.166466,-7.141130],[7.361236,-5.752436,-4.583345,-8.005703],[4.650039,-9.463002,-0.928558,7.385082],[-1.970261,8.996457,3.834755,-4.064917],[7.090223,0.479293,-1.492832,-1.617511],[-1.147841,3.163788,2.300717,-9.007563],[1.528972,-3.887317,1.070996,5.432705],[2.014940,-7.585861,-2.658689,8.440824],[5.190875,8.761932,-9.827222,-0.193620],[-5.485257,0.094093,3.678136,-2.530646],[9.338003,2.599153,6.338408,-9.026135],[2.151083,0.891976,4.012917,0.285635],[3.769811,7.288240,-8.041005,-9.275041],[2.390268,1.231589,4.845157,-1.557687],[-1.726990,9.948303,-7.416729,-7.695804],[-9.177034,7.864168,-5.477062,4.078775],[3.997338,7.888561,-0.100149,4.477821],[8.273350,-5.067664,-7.724777,4.102415],[-7.886727,-5.344516,-8.071383,-9.764914],[-3.470939,0.092753,0.074748,-7.120815],[1.994049,-9.757620,-4.425474,3.810921],[-4.354098,-8.521378,-1.129302,2.826518],[5.316533,2.484024,-7.931287,-0.951826],[3.669110,1.761684,-9.107396,-4.816932],[1.914528,4.671743,-3.498934,-0.264919],[3.481880,8.113862,-2.519747,-1.369343],[4.147299,-1.229078,-8.392716,-3.332317],[-2.982264,-1.608873,-3.566140,-1.630499],[1.259859,3.606112,-4.701120,5.894402],[-5.369352,-2.511326,4.532654,-2.931764],[-6.646087,0.026029,-2.010589,9.221917],[0.349375,5.965545,-6.234714,-7.534313],[-4.701384,6.870427,6.401664,-8.049513],[3.592274,-9.441157,6.290236,9.205753],[7.624877,-9.109066,1.127072,-2.764760],[7.745302,-6.578854,2.729029,-5.884873],[-1.750242,6.325867,-6.563154,7.795691],[-4.899113,-7.922438,6.528477,1.751198],[-9.778461,-3.232736,2.885441,1.641111],[-5.278077,-9.618217,-1.345779,6.790755],[-4.079065,-6.010309,-0.636991,9.569668],[2.198971,5.836036,5.599487,-6.316697],[-5.482894,4.847512,7.279349,6.526319],[-7.416565,-1.869143,-7.436946,8.952429],[-3.134701,0.269707,-0.086518,0.545842],[-6.593361,-7.881417,0.144072,-4.976021],[2.431175,-5.017217,-0.483316,-5.246692],[9.784395,9.913523,5.785266,1.190742],[-6.581447,-9.161900,3.891677,-4.311329],[-2.385749,8.994899,2.407289,-1.233062],[-2.571029,-7.091448,-5.665867,0.759242],[9.063770,5.297479,-3.979726,-3.063467],[4.918508,8.621443,-7.023914,-2.750306],[-8.496083,-6.110746,1.031906,-2.522846],[2.257032,-2.626684,8.444222,-6.210074],[-6.388327,6.472492,-1.439500,0.317161],[8.182833,-3.552174,4.186414,-2.980564],[-2.475527,3.708104,0.210571,4.020234],[-2.159479,-8.956514,-9.905858,-1.214479],[-0.371139,6.342761,2.590028,-3.185304],[1.278281,-4.837150,-8.481561,-4.856263],[-2.390083,-1.010372,4.308892,-4.946663],[-9.646520,9.548349,0.350837,1.964119],[-0.515790,-3.362014,-1.060703,-9.176867],[3.604877,-1.457033,8.492255,0.911129],[-4.398974,-2.475249,5.432155,-5.274073],[2.756812,-3.129841,8.624658,2.779761],[-2.629006,-7.801370,-4.560540,-4.464046],[1.643856,4.045893,5.368834,-9.948594],[6.248529,0.706966,-2.894677,-9.709014],[-4.315579,-3.083746,-2.727211,4.289430],[-3.453354,9.977383,-4.706390,-6.090605],[-4.280434,-7.953218,-9.758651,-0.156694],[7.213714,1.675614,2.992989,-0.911188],[-7.177093,7.919931,-8.497000,-0.625793],[-6.719670,2.546728,0.244654,1.724024],[-4.173809,-7.825648,-5.238269,-6.104094],[-2.267459,4.059655,0.159697,1.486017],[4.691632,-8.294494,6.149628,-1.466227],[2.176127,-2.385582,2.304131,-1.740699],[-7.759101,4.366797,3.808604,-0.623925],[6.359396,3.492303,4.493021,-1.616997],[-8.768337,-9.066241,2.342763,9.133177],[4.416087,-1.791631,4.426032,-3.647619],[1.371824,8.773037,1.897394,-8.559316],[2.127539,6.223263,0.696695,7.905639],[-8.254864,6.597030,-9.272814,-4.742831],[0.298960,6.665694,-9.651231,-0.664069],[0.448349,-5.570090,0.180268,9.907067],[5.543712,-7.722563,-7.107120,-7.611465],[0.800711,6.034977,-8.747049,2.125962],[-6.981633,8.359263,-0.229175,-0.876014],[6.715579,-9.660755,0.902416,9.362865],[-6.426809,1.781172,-6.002553,-1.990328],[-5.049659,4.363500,3.576279,-7.324531],[8.354170,-3.451866,3.608659,2.465665],[-7.627855,4.971819,2.213468,-9.103667],[-9.911130,0.334383,8.082187,0.497669],[6.521829,-2.499475,3.639186,-3.150221],[-4.869331,6.916682,5.302463,-5.451828],[-4.648207,7.275614,4.036974,-5.797659],[-8.783587,-3.391383,1.772972,0.100637],[-4.970455,6.473414,-7.598957,8.282832],[2.176674,-2.821430,2.570497,-1.150100],[-5.975909,-4.020768,5.971727,-5.326216],[-4.442121,5.123812,-5.529453,-6.723008],[-0.052822,-2.680578,2.054798,-3.626442],[-5.088711,1.511051,4.751064,-8.154386],[9.340179,2.331404,3.583306,-6.620497],[-5.212678,5.937252,-6.473368,-6.422496],[6.610006,5.664646,-9.307831,9.965376],[-4.792879,-9.432251,-2.816972,-9.255488],[2.144237,-1.751842,2.826325,-3.021852],[-0.541298,-8.755055,2.894684,-7.453932],[5.792279,5.489287,7.888004,6.654312],[5.189630,8.984728,-5.054966,-9.869868],[-5.436066,-8.596320,9.370284,9.626098],[-1.297527,3.407959,-9.234623,-6.295263],[0.319285,9.631053,1.433532,5.867056],[7.873945,-1.520876,-9.116582,6.639773],[-0.399478,-0.556578,7.191194,6.134455],[9.953085,2.777261,-9.283459,1.358482],[-9.521471,-5.150657,3.877674,-6.053301],[7.291303,-3.614815,5.618117,-4.147322],[9.939047,-5.763405,-4.080736,-4.158456],[-4.573798,-6.339994,-9.636460,-9.651319],[-8.376526,-9.897061,-0.129575,-3.704226],[7.527723,9.592478,6.732127,-6.041933],[-1.610124,3.502636,8.542943,-0.372315],[2.279006,-7.009782,0.780102,-9.486102],[-0.278868,1.061288,-1.765500,-4.786060],[1.993265,-0.234737,3.866925,0.616940],[8.969724,-5.100620,5.472691,-4.429934],[8.083875,-0.448722,-5.352534,3.143522],[9.400291,2.109177,-6.318126,4.167060],[-9.629227,-7.690613,8.922251,5.592214],[-6.099306,9.444742,5.479299,2.231430],[-1.746496,7.070791,-8.639682,0.649743],[1.265058,6.898632,-0.671153,3.373456],[3.039231,-1.865797,-8.771562,9.921236],[-1.591165,-5.192535,7.855378,-8.856640],[6.666617,-6.500129,-3.536938,7.306650],[-2.945092,-1.484436,4.560795,8.265297],[5.681375,1.858214,-2.076885,6.039990],[9.007826,-5.168913,3.916385,4.234233],[-3.516816,-4.993075,3.714495,-5.972045],[1.898717,0.750619,1.362507,6.297110],[-7.373122,-4.116609,2.683546,6.643461],[9.769014,6.434434,3.643355,1.385888],[-0.755124,-4.379638,8.000723,-9.807968],[6.293261,8.473674,-4.739132,-1.132091],[-1.771329,5.309798,-4.191930,-6.283458],[-7.104678,-6.420772,-8.555701,8.575800],[9.960222,2.044406,7.053081,2.659326],[7.297334,0.842593,7.567842,-5.731741],[-2.657381,-2.635936,0.555391,-0.333269],[-7.991460,6.562521,-2.998250,-4.293997],[-3.697345,-8.472253,2.082362,5.625814],[-1.889742,-6.157690,-9.535145,4.172009],[7.958609,6.098052,2.385240,-9.640867],[-2.076240,-9.172315,6.400112,-2.087790],[-1.634690,5.004126,0.506640,-6.812393],[2.214948,4.431182,-2.508282,-4.221221],[-9.585255,-2.332734,4.137140,-0.371001],[-6.126877,-5.283743,6.171337,5.864789],[3.106203,1.479739,0.875407,-9.250823],[-3.786687,-3.963802,4.462322,-9.625403],[-8.927800,6.773736,-8.073274,8.015306],[-7.329287,-3.217126,4.242763,-2.559154],[-1.371122,8.556110,2.666015,-2.709475],[0.948061,-2.595060,5.827000,5.070339],[8.519201,7.031977,-0.262212,-9.933923],[-4.157164,-7.892823,2.509800,-4.245206],[-4.228605,2.407843,2.244798,7.585863],[9.224026,1.536863,1.800384,-3.921185],[0.302471,-4.201708,8.426046,8.326406],[5.119577,8.108518,-6.556041,-9.427058],[7.296434,-7.308732,6.668128,5.283265],[-0.316918,8.742475,3.480899,-8.801756],[7.668837,-8.059672,-0.593065,-7.146607],[1.564561,-6.456027,0.392997,-7.811546],[-0.323344,7.510542,2.646859,-5.018990],[-5.942666,9.330486,-5.916466,-3.281461],[-0.471018,-9.947637,-0.482425,-8.408060],[-2.992588,9.124606,1.812076,-6.841828],[2.385343,7.791290,-0.659412,-6.902079],[0.518849,2.241805,5.284528,7.555013],[-3.494944,-6.800195,-2.423423,8.723209],[8.093023,-3.976010,-8.074086,8.266728],[-8.131852,-3.798004,-6.753228,7.007978],[-2.457365,5.309184,0.472058,3.200935],[-1.366493,-0.850187,-7.484636,3.439027],[6.761566,-3.994519,-8.899576,1.131005],[-0.904364,-5.338559,-9.411702,-1.953831],[-4.583098,-9.025006,-7.415624,9.148816],[-1.405741,2.429975,1.560586,-6.629024],[-4.449814,8.373526,-7.176119,-2.970980],[-8.699150,-9.689449,-5.719286,-1.353041],[-0.024494,-2.402537,-4.251565,-6.140211],[-8.647564,-1.574103,-0.699669,-8.831745],[3.237708,-2.399613,-0.336837,0.678860],[2.204416,8.928563,-2.663875,-6.854763],[-9.160112,-5.622194,-9.154846,6.988545],[-2.081826,5.875452,8.355542,-0.100344],[0.122068,-4.817235,5.245672,-0.913711],[4.501690,-9.944289,8.648287,0.975637],[-9.898923,4.537973,-3.874581,3.897471],[-3.201959,5.194853,-3.173544,-1.254302],[-3.406824,7.113632,-5.959457,-0.062525],[4.317239,-8.217833,4.753648,-6.637447],[2.975807,2.171955,9.535820,-5.353345],[2.597184,1.747931,4.960827,6.369161],[-4.964431,4.449537,-5.910091,5.351740],[4.972273,5.288725,2.500545,-7.768828]], dtype = "float64")#candidate|11420|(240, 4)|const|float64
call_11419 = relay.TupleGetItem(func_6703_call(relay.reshape(const_11420.astype('float64'), [8, 12, 10])), 0)
call_11421 = relay.TupleGetItem(func_6706_call(relay.reshape(const_11420.astype('float64'), [8, 12, 10])), 0)
output = relay.Tuple([uop_11394,bop_11398,call_11419,const_11420,])
output2 = relay.Tuple([uop_11394,bop_11398,call_11421,const_11420,])
func_11423 = relay.Function([var_11393,var_11397,], output)
mod['func_11423'] = func_11423
mod = relay.transform.InferType()(mod)
mutated_mod['func_11423'] = func_11423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11423_call = mutated_mod.get_global_var('func_11423')
var_11425 = relay.var("var_11425", dtype = "float64", shape = (5, 9, 6))#candidate|11425|(5, 9, 6)|var|float64
var_11426 = relay.var("var_11426", dtype = "float64", shape = (5, 9, 6))#candidate|11426|(5, 9, 6)|var|float64
call_11424 = func_11423_call(var_11425,var_11426,)
output = call_11424
func_11427 = relay.Function([var_11425,var_11426,], output)
mutated_mod['func_11427'] = func_11427
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11490 = relay.var("var_11490", dtype = "uint32", shape = (16, 5, 15))#candidate|11490|(16, 5, 15)|var|uint32
var_11491 = relay.var("var_11491", dtype = "uint32", shape = (16, 5, 15))#candidate|11491|(16, 5, 15)|var|uint32
bop_11492 = relay.minimum(var_11490.astype('uint32'), relay.reshape(var_11491.astype('uint32'), relay.shape_of(var_11490))) # shape=(16, 5, 15)
output = bop_11492
output2 = bop_11492
func_11495 = relay.Function([var_11490,var_11491,], output)
mod['func_11495'] = func_11495
mod = relay.transform.InferType()(mod)
mutated_mod['func_11495'] = func_11495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11495_call = mutated_mod.get_global_var('func_11495')
var_11497 = relay.var("var_11497", dtype = "uint32", shape = (16, 5, 15))#candidate|11497|(16, 5, 15)|var|uint32
var_11498 = relay.var("var_11498", dtype = "uint32", shape = (16, 5, 15))#candidate|11498|(16, 5, 15)|var|uint32
call_11496 = func_11495_call(var_11497,var_11498,)
output = call_11496
func_11499 = relay.Function([var_11497,var_11498,], output)
mutated_mod['func_11499'] = func_11499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10676_call = mod.get_global_var('func_10676')
func_10678_call = mutated_mod.get_global_var('func_10678')
call_11723 = relay.TupleGetItem(func_10676_call(), 1)
call_11724 = relay.TupleGetItem(func_10678_call(), 1)
uop_11735 = relay.cos(call_11723.astype('float64')) # shape=(9, 7, 11)
uop_11737 = relay.cos(call_11724.astype('float64')) # shape=(9, 7, 11)
output = uop_11735
output2 = uop_11737
func_11758 = relay.Function([], output)
mod['func_11758'] = func_11758
mod = relay.transform.InferType()(mod)
mutated_mod['func_11758'] = func_11758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11758_call = mutated_mod.get_global_var('func_11758')
call_11759 = func_11758_call()
output = call_11759
func_11760 = relay.Function([], output)
mutated_mod['func_11760'] = func_11760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6632_call = mod.get_global_var('func_6632')
func_6633_call = mutated_mod.get_global_var('func_6633')
call_11793 = relay.TupleGetItem(func_6632_call(), 0)
call_11794 = relay.TupleGetItem(func_6633_call(), 0)
func_10749_call = mod.get_global_var('func_10749')
func_10755_call = mutated_mod.get_global_var('func_10755')
const_11809 = relay.const([-0.218610,-1.548508,3.424213,8.622706,6.653798,2.008700,0.088737,-8.547992,-7.133894,6.045572,6.827171,-0.358330,1.466862,2.037993,-4.330738,7.767506,0.448216,-4.439248,-1.601557,-7.930374,-9.244567,1.717497,-5.747806,-6.491182,6.327582,4.026811,7.791621,3.859564,-7.049908,8.997438,8.630463,2.371915,1.323081,5.843208,1.219879,4.396839,2.307415,-0.876777,7.385736,-8.577291,-5.673596,7.686967,-1.540767,-2.347492,3.483054,4.102987,6.076572,-9.133546,4.802870,-4.591481,1.828778,-9.280014,9.339537,5.997319,3.781053,3.981755,6.660879,1.536742,1.667983,-1.783853,-4.790132,5.513696,9.081719,-6.428702,8.113458,2.854670,-5.806917,5.723065,-1.830057,-4.190171,1.485126,-2.881819,7.507924,-8.383720,9.356910,4.860869,-0.345282,0.532699,-8.930556,-8.601412,1.695880,4.843667,0.515529,3.571223,5.669297,8.733323,9.820904,1.593332,-5.504156,-6.473239,-4.416296,2.949342,-7.057741,-4.335300,-3.817556,4.479985,7.456539,0.008806,5.182433,-3.311144,1.408368,7.712325,9.273437,2.133757,-7.056992,-9.479152,1.399638,-0.156518,-0.344606,7.878780,5.957497,-5.944162,4.051815,-4.629277,-7.357422,4.012719,-5.214878,4.912879,9.411613,5.630631,-1.172294,-1.478176,1.386779,9.801581,-6.524993,-5.787420,0.825344,-4.708460,1.641182,-9.225280,7.623573,6.545746,-6.768943,-6.674648,4.386954,-5.349483,1.152932,1.314516,5.874035,-5.322935,5.269912,6.316068,-0.899832,7.035449,-5.225543,7.423013,6.777627,-9.786694,4.828077,0.602889,-2.241660,-6.143124,0.520451,7.038485,7.264938,-8.013555,-7.275574,4.608847,5.315054,-4.033014,-8.754476,6.800776,-0.837192,-6.831991,-0.261815,-9.826941,4.130592,-5.710545,5.027433,6.341952,-8.546188,2.602112,4.921871,7.303988,-8.342660,4.394796,9.930268,-0.457092,-1.103705,-2.906560,5.665868,6.367286,3.497330,4.879288,7.512208,1.104394,-9.273611,9.494331,-5.654446,-7.526164,-0.955341,0.697137,-2.381938,-9.277348,-8.853492,-7.360253,1.215234,-5.244795,6.939066,9.011458,-4.765905,-8.273726,-1.512369,8.897167,-1.888927,6.254684,5.928725,4.682806,-8.808134,-6.194363,-9.646395,-6.202710,-6.131514,-5.906725,-1.950138,0.016807,8.593166,6.937388,2.254242,-7.355747,-9.951134,-7.257022,-8.202087,-7.135880,8.530524,-7.237794,1.652338,-4.357581,2.955027,8.024374,-5.167833,3.106354,9.228076,3.836418,8.983603,-3.957124,9.631961,3.090761,-5.574502,1.396074,-9.267184,0.292296,-3.927628,9.217013,5.960460,-2.475441,8.676627,5.749612,-0.687378,8.500032,-3.329956,-9.829594,5.892587,0.472594,4.394256,3.775890,-2.541764,4.548875,-0.779077,3.315594,1.049836,-0.241521,5.763400,9.166509,-5.150843,4.087822,7.791964,4.424965,9.497857,-4.940333,3.213908,-1.794232,3.863191,-4.569908,-7.169188,4.146127,6.173300,5.048047,0.838175,9.863979,4.543295,-9.752317,-0.294373,6.163124,-1.003461,-1.472401,-3.481679,-5.423284,-1.266219,8.792111,-1.321366,-1.255866,-6.081884,-6.698150,0.457364,-1.735356,-7.268908,5.808059,-1.384907,-2.371321,-6.537778,-6.592612,0.350056,-0.749988,8.045199,-1.377425,-7.401972,-1.337030,-3.677379,-0.930008,-2.804177,7.612822,7.669266,4.229369,3.079307,1.557146,-4.601285,-5.303563,-6.870884,9.278163,5.923801,9.711611,-1.131728,-4.710471,-4.356150,-5.463458,1.249884,1.259626,-1.141496,-3.321409,-4.471322,-9.949236,0.676190,-7.062478,6.366579,-3.329035,0.960663,4.768876,4.864625,6.743669,-2.645655,-0.364276,9.376786,2.159429,-3.692819,7.126394,5.253147,1.726333,1.545341,-1.211323,3.370063,3.386289,-3.006804,-1.748299,-7.048262,8.489618,-3.450282,1.450975,9.508497,0.039030,-4.033519,-5.298699,-9.382261,3.424150,5.702224,6.220279,-1.720337,1.831800,3.465835,-5.782574,9.187370,-6.100251,9.513392,3.567822,-1.376619,-1.261934,-8.715963,-0.709721], dtype = "float64")#candidate|11809|(378,)|const|float64
var_11810 = relay.var("var_11810", dtype = "float32", shape = (56, 8))#candidate|11810|(56, 8)|var|float32
var_11811 = relay.var("var_11811", dtype = "uint32", shape = (594,))#candidate|11811|(594,)|var|uint32
var_11812 = relay.var("var_11812", dtype = "float64", shape = (924,))#candidate|11812|(924,)|var|float64
const_11813 = relay.const([[-9,1,-5,9,-8,-4,-3,6,1,-6,5,7,-8,-1,-10,8,-10,-3,3,9,-6,-2,1,6,4,-4,-3,-2,-7,9,-6,7,5,-2,-1,-2,5,-5,-4,8,-2,-6,5,-5,1,-8,-1,4,4,-6,7,9,4,8,-4,5,-9,2,-6,-6,2,-5,-10,3,-5,8,-9,-5,2,10,-2,-1,-3,-6,-1,8,-8,-8,-4,-4,-10,-2,-9,1,-2,7,-5,6,-5,-8,7,-10,1,-7,7,-3,-4,-5,1,6,8,-9,4,-2,10,-5,-8,-3,-3,5,2,8,-2,-10,-2,8,10,2,1,-4,3,-9,4,-1,4,6,5,-3,10,2,10,9,-5,7,-4,8,-8,-8,9,-9,7,-1,3,9,-9,-3,-1,2,-5,4,8,5,-9,10,4,2,-9,4,-9,5,-6,-9,-3,4,10,7,2,-5,7,-2,7,2,1,7,-3,-9,3,7,-1,-5,-1,-8,-6,-7,-8,-6,4,-2,6,-4,4,-7,3,4,-6,-4,3,1,5,-4,4,-10,10,3,1,-4,-1,3,-6,8,8,-9,6,-10,-6,3,-6,10,7,1,-1,5,9,-5,-5,-7,7,-3,5,-3,10,3,-1,2,-8,-5,10,-10,6,-4,-10,-3,6,-9,9,-2,-10,-5,-9,6,-9,-6,-1,-8,4,7,2,5,5,-8,8,5,4,8,6,1,-6,-4,5,-3,3,-5,1,-2,-5,-3,10,-10,8,8,-1,9,5,-4,5,-9,9,-3,5,-9,6,3,9,-8,1,-1,4,10,5,-10,-1,-9,5,3,7,-2,5,9,-9,3,5,-10,5,-8,4,-1,9,7,5,-3,3,5,1,4,-3,9,10,-4,-9,-7,2,-10,-1,-4,9,9,3,2,10,-3,2,8,1,-10,8,-5,-7,-1,2,-3,1,4,5,-9,3,-7,-3,-10,-9,-7,8,-7,-9,-1,2,-3,-5,-10,-5,7,-10,-5,-9,9,5,-7,10,-8,-2,1,7,10,2,-4,6,5,4,-3,4,3,10,4,3,10,-3,1,6,1,9,3,5,-3,9,-3,10,2,-3,-1,-8,-2,-3,-10,2,4,-9,9,8,-4,-10,10,1,9,10,-2,4,-1,7,-5,-5,2,-10,9,-5,-3,-9,4,-4,-6,6,3,4,-6,-7,1,1,-5,4,-7,6,3,-2,5,-3,-10,-1,-6,9,7,2,8,-1,2,-9,-6,8,10,10,6,8,-10,-1,5,10,-5,-10,-6,8,-10,-7,-1,10,5,-7,-3,6,-8,-2,8,5,-4,8,9,8,-4,8,9,7,5,-4,-10,4,1,1,9,7,-4,-5,-3,-2,9,-2,-5,-4,-2,-3,-1,2,-2,-3,2,6,5,9,-6,4,-9,6,5,8,-8,-4,7,-3,1,-2,8,-9,1,2,8,-5,-4,3,-8,-9,-4,-9,8,-10,10,4,-1,-2,10,10,-1,5,5,-7,2,1,-10,5,-2,1,-8,-9,-7,-1,-4,6,-7,3,2,-5,7,-8,-8,-6,-9,-2,1,6,-4,-8,-8,-6,-7,7,2,-4,1,7,-7,8,10,-5,-5,1,-7],[-10,3,-2,-8,10,4,-8,-7,2,7,-2,-4,-10,-7,8,9,-1,-3,-3,-5,-10,6,-1,2,7,-5,-10,7,6,2,9,2,-4,-6,-8,1,-7,-6,1,2,-1,8,-6,1,10,5,-7,-3,4,9,10,9,-8,-6,3,9,-6,5,-4,3,-2,-7,-5,-9,2,8,9,-9,-2,-7,6,-1,3,-4,4,4,6,-4,-4,10,2,-9,-5,9,-5,4,-2,-4,1,-5,3,-1,-3,-10,8,4,-7,-3,1,-2,10,-8,1,7,-9,-8,-2,-3,-4,1,-2,3,5,-2,10,3,-1,10,4,-5,10,9,-2,4,-5,7,-9,7,-6,2,-4,-6,9,-7,5,-8,-7,6,9,-5,-6,-10,-3,-1,-5,-7,-10,-3,10,2,4,-10,-6,10,8,-10,10,-1,6,-3,7,-1,4,-5,-6,10,8,-10,-8,-2,8,3,1,-2,-8,-9,5,-1,5,-5,-5,-2,-7,-9,-5,-3,2,-4,2,9,8,-6,-1,-6,-4,-9,6,-2,-6,-9,-2,7,-10,7,4,5,-6,-9,-7,5,-3,-10,6,1,-5,-4,-5,-10,-1,-9,3,-8,-5,7,-1,-5,7,-3,-9,6,7,2,-2,-6,-1,7,-1,4,2,-1,-6,-7,-4,-7,-7,9,-4,7,-5,-8,-10,-2,-7,-10,-10,2,-7,-8,-1,4,-7,-3,5,-8,3,-9,-8,-7,-9,-6,7,-6,8,7,-8,-5,-5,-7,-8,-3,8,5,4,3,-8,4,-6,2,-4,-1,-10,-9,-7,-5,1,6,-1,9,3,-9,-10,6,3,10,-5,-2,-1,9,-7,-5,-4,2,-3,1,3,-7,-4,9,-1,9,-3,-10,-1,-4,-5,1,-3,-7,3,4,-9,-9,4,-2,-10,-10,9,-9,8,1,6,5,4,-6,9,5,1,-10,-3,-1,-1,-7,-10,3,2,3,5,-7,-7,7,5,3,5,2,-4,-4,1,-9,10,8,7,1,-9,-2,3,4,1,-3,-9,-6,-5,9,-2,8,-10,5,8,-9,6,5,3,7,-7,10,-5,-2,-7,-8,-9,2,-3,-9,4,-1,-1,10,-8,-8,7,-4,4,-5,-6,9,-1,7,5,6,3,-10,6,8,6,10,4,10,-9,-7,9,-10,-5,6,-10,1,-2,10,2,-3,-6,6,6,-5,10,-7,10,-3,4,-6,4,10,10,-5,9,-3,-10,4,2,10,-3,-4,4,-7,9,-3,-5,-10,-4,-7,2,10,6,7,-5,-3,3,1,-5,6,-6,-6,3,-5,-8,9,-2,-1,3,8,4,-6,9,2,8,7,-8,-4,-6,5,-1,5,3,2,5,-2,1,3,7,-3,5,10,2,2,3,3,2,-5,-5,1,-9,8,2,2,-9,4,-5,-9,8,-5,1,-3,8,-9,7,3,-2,-9,-2,-4,6,-7,2,-7,7,9,10,2,2,-10,-1,6,-4,10,6,9,1,2,-3,-4,-1,-8,-7,-10,4,-9,-5,-10,1,-8,-5,-8,4,4,9,8,2,-2,8,9,3,9,-4,10,-1,4,-5,4,2,-7,-5,4,10,-8,9,-2,-5,2,-10,-7,-1,6],[-1,5,10,8,-4,-5,-8,7,-10,4,10,7,8,-10,2,5,8,-1,-2,4,-1,4,-1,1,-8,7,10,-7,-5,-9,2,-10,-4,7,-10,-3,9,2,-6,9,5,1,9,4,-4,-1,-7,-5,4,8,-4,-6,-6,-2,1,-6,9,-2,9,2,-10,-8,-4,9,-6,1,-6,2,5,-4,-7,-3,-2,-5,-2,2,8,9,6,1,3,-1,-10,10,-1,2,-7,-4,-1,-7,4,4,-1,7,3,9,-1,-6,7,6,10,-6,4,-3,-9,-9,2,-8,-8,-8,10,-8,10,-1,8,5,-7,7,10,-8,2,3,-3,-5,-3,-4,4,5,-4,1,6,-3,6,8,-10,7,6,-4,-1,1,-5,1,7,-1,4,4,-9,-5,-7,-3,9,-8,9,3,-2,8,-9,5,4,-6,2,-8,-9,6,-6,-10,8,-2,-10,9,-9,-9,5,-4,-4,9,10,-6,2,4,10,7,-4,7,3,-5,-4,-3,-10,1,-7,9,10,8,-7,4,-6,7,7,3,-1,-4,-5,-5,-6,-1,9,-2,-5,-10,3,-2,-4,-1,3,3,-2,-9,6,4,-2,-4,-4,9,9,2,5,2,-10,-10,-7,-7,10,8,3,7,-6,6,7,9,-7,9,2,-3,6,-7,8,4,3,-3,3,-2,1,10,5,8,-8,-6,-10,-7,4,-1,-10,-10,4,-9,-3,7,9,6,7,-8,10,-5,4,-9,6,1,-3,-10,4,6,-10,-3,-2,-5,-2,-4,-8,3,3,-2,-1,8,2,1,-7,3,-3,8,-7,6,7,-2,-1,9,-6,-4,4,1,7,-1,-10,-4,5,8,-5,1,-4,-7,7,-8,8,2,-1,-7,-4,7,-7,4,-2,-3,-9,-9,9,-6,3,-1,-6,-1,5,-7,8,-10,-2,-6,1,1,6,-10,5,1,-2,7,5,-4,5,9,5,8,-8,-2,-4,6,3,2,6,4,-4,-7,-8,-9,-2,8,-10,5,-9,-4,1,2,9,-10,5,-4,-6,10,-2,8,-9,-3,3,6,6,6,3,-1,-9,-7,8,7,-2,7,8,-2,-4,-8,5,-8,8,-10,1,1,-4,-8,2,6,2,10,1,-9,-4,-1,-4,10,4,-1,1,8,-2,10,2,8,9,6,-7,-4,-5,-10,3,-9,3,-3,5,2,8,1,-7,-5,-6,-6,-9,4,5,-1,7,7,-3,4,2,5,-7,-9,5,1,-9,2,1,-10,-1,7,2,-8,2,2,10,-3,4,-1,8,-8,-3,2,8,10,-4,1,-1,-10,-3,-7,10,9,-4,10,-6,-10,3,-3,-6,2,10,-4,2,-3,8,5,-2,1,7,-9,-4,-10,-10,7,7,-4,3,-7,-5,10,-4,1,-1,3,6,9,-10,-6,-3,6,2,-7,1,-2,8,-10,-8,8,5,-7,5,2,6,-8,1,-3,8,-8,5,5,-1,-6,6,-8,7,-4,3,10,4,-2,-3,-7,-4,2,-6,-3,-10,6,4,6,1,-4,8,6,1,8,-1,-9,-2,4,-5,-5,-7,2,-8,3,-10,6,10,-9,-9,6,-4,7,-5,-3,10,-5,2,-10]], dtype = "uint8")#candidate|11813|(3, 600)|const|uint8
call_11808 = relay.TupleGetItem(func_10749_call(relay.reshape(const_11809.astype('float64'), [378,]), relay.reshape(var_11810.astype('float32'), [2, 224]), relay.reshape(var_11811.astype('uint32'), [594,]), relay.reshape(var_11812.astype('float64'), [924,]), relay.reshape(const_11813.astype('uint8'), [3, 600]), ), 1)
call_11814 = relay.TupleGetItem(func_10755_call(relay.reshape(const_11809.astype('float64'), [378,]), relay.reshape(var_11810.astype('float32'), [2, 224]), relay.reshape(var_11811.astype('uint32'), [594,]), relay.reshape(var_11812.astype('float64'), [924,]), relay.reshape(const_11813.astype('uint8'), [3, 600]), ), 1)
func_9208_call = mod.get_global_var('func_9208')
func_9209_call = mutated_mod.get_global_var('func_9209')
call_11857 = func_9208_call()
call_11858 = func_9208_call()
output = relay.Tuple([call_11793,call_11808,const_11809,var_11810,var_11811,var_11812,const_11813,call_11857,])
output2 = relay.Tuple([call_11794,call_11814,const_11809,var_11810,var_11811,var_11812,const_11813,call_11858,])
func_11889 = relay.Function([var_11810,var_11811,var_11812,], output)
mod['func_11889'] = func_11889
mod = relay.transform.InferType()(mod)
mutated_mod['func_11889'] = func_11889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11889_call = mutated_mod.get_global_var('func_11889')
var_11891 = relay.var("var_11891", dtype = "float32", shape = (56, 8))#candidate|11891|(56, 8)|var|float32
var_11892 = relay.var("var_11892", dtype = "uint32", shape = (594,))#candidate|11892|(594,)|var|uint32
var_11893 = relay.var("var_11893", dtype = "float64", shape = (924,))#candidate|11893|(924,)|var|float64
call_11890 = func_11889_call(var_11891,var_11892,var_11893,)
output = call_11890
func_11894 = relay.Function([var_11891,var_11892,var_11893,], output)
mutated_mod['func_11894'] = func_11894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9584_call = mod.get_global_var('func_9584')
func_9586_call = mutated_mod.get_global_var('func_9586')
call_11931 = relay.TupleGetItem(func_9584_call(), 1)
call_11932 = relay.TupleGetItem(func_9586_call(), 1)
output = call_11931
output2 = call_11932
func_11953 = relay.Function([], output)
mod['func_11953'] = func_11953
mod = relay.transform.InferType()(mod)
mutated_mod['func_11953'] = func_11953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11953_call = mutated_mod.get_global_var('func_11953')
call_11954 = func_11953_call()
output = call_11954
func_11955 = relay.Function([], output)
mutated_mod['func_11955'] = func_11955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6463_call = mod.get_global_var('func_6463')
func_6465_call = mutated_mod.get_global_var('func_6465')
call_12010 = relay.TupleGetItem(func_6463_call(), 0)
call_12011 = relay.TupleGetItem(func_6465_call(), 0)
func_3535_call = mod.get_global_var('func_3535')
func_3537_call = mutated_mod.get_global_var('func_3537')
var_12019 = relay.var("var_12019", dtype = "float64", shape = (336,))#candidate|12019|(336,)|var|float64
call_12018 = func_3535_call(relay.reshape(var_12019.astype('float64'), [14, 8, 3]))
call_12020 = func_3535_call(relay.reshape(var_12019.astype('float64'), [14, 8, 3]))
output = relay.Tuple([call_12010,call_12018,var_12019,])
output2 = relay.Tuple([call_12011,call_12020,var_12019,])
func_12023 = relay.Function([var_12019,], output)
mod['func_12023'] = func_12023
mod = relay.transform.InferType()(mod)
var_12024 = relay.var("var_12024", dtype = "float64", shape = (336,))#candidate|12024|(336,)|var|float64
output = func_12023(var_12024)
func_12025 = relay.Function([var_12024], output)
mutated_mod['func_12025'] = func_12025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10676_call = mod.get_global_var('func_10676')
func_10678_call = mutated_mod.get_global_var('func_10678')
call_12052 = relay.TupleGetItem(func_10676_call(), 0)
call_12053 = relay.TupleGetItem(func_10678_call(), 0)
output = call_12052
output2 = call_12053
func_12054 = relay.Function([], output)
mod['func_12054'] = func_12054
mod = relay.transform.InferType()(mod)
output = func_12054()
func_12055 = relay.Function([], output)
mutated_mod['func_12055'] = func_12055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11221_call = mod.get_global_var('func_11221')
func_11222_call = mutated_mod.get_global_var('func_11222')
call_12065 = func_11221_call()
call_12066 = func_11221_call()
func_8095_call = mod.get_global_var('func_8095')
func_8096_call = mutated_mod.get_global_var('func_8096')
call_12071 = func_8095_call()
call_12072 = func_8095_call()
func_9584_call = mod.get_global_var('func_9584')
func_9586_call = mutated_mod.get_global_var('func_9586')
call_12076 = relay.TupleGetItem(func_9584_call(), 1)
call_12077 = relay.TupleGetItem(func_9586_call(), 1)
func_6020_call = mod.get_global_var('func_6020')
func_6022_call = mutated_mod.get_global_var('func_6022')
call_12087 = func_6020_call()
call_12088 = func_6020_call()
var_12092 = relay.var("var_12092", dtype = "float32", shape = (16, 15, 9))#candidate|12092|(16, 15, 9)|var|float32
bop_12093 = relay.maximum(call_12065.astype('int64'), relay.reshape(var_12092.astype('int64'), relay.shape_of(call_12065))) # shape=(16, 15, 9)
bop_12096 = relay.maximum(call_12066.astype('int64'), relay.reshape(var_12092.astype('int64'), relay.shape_of(call_12066))) # shape=(16, 15, 9)
func_11495_call = mod.get_global_var('func_11495')
func_11499_call = mutated_mod.get_global_var('func_11499')
var_12100 = relay.var("var_12100", dtype = "uint32", shape = (1, 1200))#candidate|12100|(1, 1200)|var|uint32
call_12099 = func_11495_call(relay.reshape(var_12100.astype('uint32'), [16, 5, 15]), relay.reshape(var_12100.astype('uint32'), [16, 5, 15]), )
call_12101 = func_11495_call(relay.reshape(var_12100.astype('uint32'), [16, 5, 15]), relay.reshape(var_12100.astype('uint32'), [16, 5, 15]), )
func_6703_call = mod.get_global_var('func_6703')
func_6706_call = mutated_mod.get_global_var('func_6706')
var_12107 = relay.var("var_12107", dtype = "float64", shape = (960,))#candidate|12107|(960,)|var|float64
call_12106 = relay.TupleGetItem(func_6703_call(relay.reshape(var_12107.astype('float64'), [8, 12, 10])), 1)
call_12108 = relay.TupleGetItem(func_6706_call(relay.reshape(var_12107.astype('float64'), [8, 12, 10])), 1)
output = relay.Tuple([call_12071,call_12076,call_12087,bop_12093,call_12099,var_12100,call_12106,var_12107,])
output2 = relay.Tuple([call_12072,call_12077,call_12088,bop_12096,call_12101,var_12100,call_12108,var_12107,])
func_12109 = relay.Function([var_12092,var_12100,var_12107,], output)
mod['func_12109'] = func_12109
mod = relay.transform.InferType()(mod)
var_12110 = relay.var("var_12110", dtype = "float32", shape = (16, 15, 9))#candidate|12110|(16, 15, 9)|var|float32
var_12111 = relay.var("var_12111", dtype = "uint32", shape = (1, 1200))#candidate|12111|(1, 1200)|var|uint32
var_12112 = relay.var("var_12112", dtype = "float64", shape = (960,))#candidate|12112|(960,)|var|float64
output = func_12109(var_12110,var_12111,var_12112,)
func_12113 = relay.Function([var_12110,var_12111,var_12112,], output)
mutated_mod['func_12113'] = func_12113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6888_call = mod.get_global_var('func_6888')
func_6889_call = mutated_mod.get_global_var('func_6889')
call_12139 = relay.TupleGetItem(func_6888_call(), 0)
call_12140 = relay.TupleGetItem(func_6889_call(), 0)
func_5502_call = mod.get_global_var('func_5502')
func_5503_call = mutated_mod.get_global_var('func_5503')
call_12141 = relay.TupleGetItem(func_5502_call(), 0)
call_12142 = relay.TupleGetItem(func_5503_call(), 0)
output = relay.Tuple([call_12139,call_12141,])
output2 = relay.Tuple([call_12140,call_12142,])
func_12148 = relay.Function([], output)
mod['func_12148'] = func_12148
mod = relay.transform.InferType()(mod)
mutated_mod['func_12148'] = func_12148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12148_call = mutated_mod.get_global_var('func_12148')
call_12149 = func_12148_call()
output = call_12149
func_12150 = relay.Function([], output)
mutated_mod['func_12150'] = func_12150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6020_call = mod.get_global_var('func_6020')
func_6022_call = mutated_mod.get_global_var('func_6022')
call_12176 = func_6020_call()
call_12177 = func_6020_call()
output = relay.Tuple([call_12176,])
output2 = relay.Tuple([call_12177,])
func_12207 = relay.Function([], output)
mod['func_12207'] = func_12207
mod = relay.transform.InferType()(mod)
mutated_mod['func_12207'] = func_12207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12207_call = mutated_mod.get_global_var('func_12207')
call_12208 = func_12207_call()
output = call_12208
func_12209 = relay.Function([], output)
mutated_mod['func_12209'] = func_12209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6689_call = mod.get_global_var('func_6689')
func_6691_call = mutated_mod.get_global_var('func_6691')
call_12316 = relay.TupleGetItem(func_6689_call(), 2)
call_12317 = relay.TupleGetItem(func_6691_call(), 2)
func_6193_call = mod.get_global_var('func_6193')
func_6197_call = mutated_mod.get_global_var('func_6197')
const_12326 = relay.const([0.257521,-7.679447,6.440485,3.709318,7.654705,-6.439398,0.031522,-7.669423,0.124208,0.257856,-0.061996,-8.244849,-0.685256,9.774411,-0.880985,4.142775,-2.790907,3.040672,-9.394473,3.448206,-9.014091,6.368099,-1.722689,7.139393,-4.991540,8.026924,8.530099,-3.363808,0.667993,-6.726407,-1.946170,3.520450,2.211937,-6.945324,-4.475851,-5.240364,8.512721,-3.119366,3.844496,9.093623,-1.848234,-9.469315,5.425638,-4.399642,-2.575689,-2.232041,-1.028568,-8.326210,5.382363,4.365807,-0.170181,-7.617195,8.016372,9.931762,-5.649604,8.014913,5.587003,1.926198,-4.283697,5.807214,-6.134110,6.401237,-0.128602,-1.954373,0.035304,5.424208,2.414095,1.815580,-8.887224,3.146767,-7.100980,8.079233,-4.717449,-7.829229,-1.265699,-5.816635,9.063365,-6.966118,1.861165,3.261894,-8.900105,-0.708108,6.754271,4.613926,-5.240537,-5.346626,5.823530,-8.842222,-4.279934,-6.800667,4.473727,6.451792,-5.381484,-6.193273,5.375987,-7.816041,-6.210974,0.173808,4.889163,9.018103,-8.716910,-1.968345,5.407267,3.466555,3.509304,8.367545,-3.598607,4.382568,-4.901905,-3.852053,-7.940215,3.899117,0.431904,-6.573538,6.039357,-7.991797,3.814910,6.926809,-7.205078,1.761961,-1.428571,-2.355333,9.213188,-3.384672,4.605131,1.771593,7.762817,-6.204448,-2.594534,8.778359,-6.495295,6.352757,-4.614074,-5.110284,8.485046,-4.766937,-5.003230,2.290516,9.662012,7.666542,-8.410672,-7.532482,-2.027969,3.752413,0.226595,-1.599899,-1.509201,2.349400,0.373959,2.085059,0.015667,-7.876569,-9.593592,-6.830033,0.929482,-4.972889,-0.791453,-0.470076,4.376635,3.972372,-8.438011,-6.440829,9.851892,-3.511374,-5.480804,-8.510171,0.238525,5.889934,-8.434189,6.023681,-3.034058,8.161414,-2.503142,7.693096,6.921383,-4.459699,-8.003366,0.854958,5.041358,-2.174702,8.433782,2.648331,-1.709707,3.390512,-2.510159,-8.719525,-5.899131,-0.095092,7.079334,4.798782,-5.326640,6.558494,-4.087089,4.009333,-1.256032,0.816292,-6.415537,-2.528495,-4.637201,5.108982,9.151931,6.811679,3.168732,-1.102827,7.640640,-8.529266,-5.958490,-3.462141,-0.903552,-6.410202,-0.608095,-6.214194,-0.694221,5.726311,-2.463539,-6.104970,-9.563614,-9.838828,4.550553,4.862482,-1.118557,-4.241935,1.010292,1.307645,-8.001974,-6.638423,-5.527045,6.209940,5.131983,2.026666,0.838031,4.922635,7.410670,-2.751479,1.966843,2.241718,2.502312,-0.368320,-7.964969,-9.262847,6.061795,9.864046,5.001206,-0.430684,2.863691,3.091638,5.501622,8.212857,-0.707049,6.356063,0.833497,9.935151,3.430102,9.706785,4.249736,-6.546763,-2.989320,-9.344195,9.810208,-9.314702,-7.106321,3.559301,3.964017,-0.938894,-1.763744,0.187915,-8.603482,-7.331770,-7.701824,-3.357059,5.318468,-6.220116,-4.009529,-7.996115,7.692461,3.265227,-4.896408,-3.549486,9.402800,9.837521,-8.320334,8.743701,2.665423,-7.888231,5.456148,8.504494,-7.631693,-2.617175,6.729970,-2.177648,8.265951,-6.481077,-3.265559,2.521925,-3.447966,-2.083471,5.224099,4.811694,2.695692,-3.996780,-9.084613,-9.411772,6.104000,-8.356490,3.461224,-4.996582,-1.213255,-0.144635,3.193306,-7.741961,-7.859595,-6.884922,-5.285603,-8.023518,-5.418505,-4.468855,-3.228933,6.150609,6.690146,-8.407992,-5.723103,1.257719,-5.462172,5.545002,-8.208589,6.105370,-8.961065,-2.326050,0.515385,4.925705,-9.496490,6.340073,-1.768537,-4.972434,-8.680777,-2.883584,8.549261,2.366984,4.017622,7.753590,-6.137198,-0.586325,0.514820,9.495821,2.543481,-7.012580,-8.236273,-2.594793,-5.945663,-4.100494,-9.369072,3.253380,-9.062790,4.680040,8.166967,8.744785,5.974387,1.616119,4.263381,2.220116,7.570211,-7.753355,5.684791,-2.740671,9.785981,-3.646898,0.367157,-0.827850,-7.203063,7.632237,-5.260817,6.114075,-8.012727,-0.762652,3.705459,-1.165205,5.291583,-4.693750,0.368445,-9.816094,6.514785,-9.157063,-5.631746,2.596068,-8.928241,2.788460,5.966362,-6.868824,8.971456,0.918546,7.888383,3.411149,-4.861003,2.589565,-5.686282,3.893283,6.011550,-5.265034,-9.912643,-3.817507,-2.756135,6.690959,4.964175,4.175840,8.355173,9.343643,-4.136556,4.752325,7.188808,-6.570797,0.932981,3.348782,-2.855636,-9.464353,1.164454,4.110797,-1.718350,-1.180638,6.767813,-2.377901,-8.672462,2.990542,-3.180632,-8.746056,3.660698,7.440369,-6.100972,0.469443,-5.458508,1.576483,3.540338,5.540721,1.248359,3.808556,8.597999,0.466330,9.226113,-5.641949,-1.720175,5.924986,-9.105918,-7.831951,-3.131302,9.178284,2.477546,-5.273678,9.991660,6.111783,5.437027,3.929964,-8.331867,4.113168,7.723424,-0.136822,-2.864490,-6.945515,-9.324929,7.810881,-5.926610,-9.928671,7.875250,-7.418349,-1.668473,8.362807,-1.014976,9.944822,-5.602115,6.794179,-6.338251,0.615016,6.628098,1.229073,-3.585611,-2.341049,4.619066,-6.054827,-8.125857,-3.198660,-5.851582,-1.673000,-8.254925,-0.607687,-4.972424,6.661928,4.662635,1.100542,-0.329154,-9.601570,5.089697,4.935018,4.806408,2.801765,2.575460,2.107380,-9.363377,-7.016434,3.837442,4.463192,-7.711251,-5.299369,5.218672,9.172763,1.078104,-5.489601,-9.684205,9.106561,1.550075,9.000916,-5.687461,9.450678,8.172310,-5.444211,-2.816611,-1.393454,-3.975021,-7.853713,4.300427,2.931326,9.214702,9.339874,6.826756,-8.657567,-9.614957,7.105811,-5.574313,5.594314,1.734617,-7.565644,3.218566,-5.769714,0.326967,1.407685,-9.823742,8.056902,-8.401495,-3.754150,-8.517056,-5.738882,-0.465572,4.900998,-6.540418,-7.189359,-3.385247,7.999578,-2.745911,6.748349,-7.164704,-6.729969,5.036448,2.872568,-8.321014,-6.380543,-9.691545,2.029291,-8.302334,2.759756,3.748529,-6.001189,-8.939868,9.164987,-2.587446,-1.572535,4.590772,3.755663,3.544509,-7.474687,-0.601310,-0.323615,-3.069762,-9.355596,-4.683811,8.373486,3.352746,-4.960081,-3.873519,-2.199663,-6.476469,4.226585,3.338322,1.750817,9.090664,6.339312,-8.170763,-4.916576,7.344321,6.492195,-0.529354,-8.388664,1.665660,5.880510,-5.541163,-7.054494,7.486726,6.846479,-7.135919,2.320514,-8.946080,-3.162821,-9.533937,7.993158,7.816257,3.792030,-2.518586,7.925057,-6.046170,2.825702,6.672849,-9.329480,1.585501,3.753078,-5.763949,-5.181973,4.193189,7.759668,0.178151,-0.951493,7.386299,5.098939,9.727900,6.241153,5.325201,-9.424973,-6.026954,6.105510,-5.106378,-5.347424,4.517638,-9.176158,1.969632,-3.977642,-3.274336,3.339460,5.421736,5.799603,8.764302,-4.887402,6.969710,6.964790,1.669447,-9.920803,-1.978845,-2.276878,4.011477,-3.655362,-2.144019,6.263901,2.998616,5.838941,1.353908,5.412228,0.376586,-4.870497,1.987750,4.091301,-8.039566,-3.393052,-7.192533,8.517194,1.209937,-4.621963,-3.916180,0.836947,-1.984947,-7.437494,0.903370,-3.499448,-7.214967,-2.905035,6.121679,-0.330976,4.082901,-4.923088,-8.629434,8.686721,3.051517,1.051539,9.070248,-0.067135,0.931809,-6.852940,-6.384613,-0.248433,8.143745,-4.779679,-9.281963,-1.586587,-8.880989,9.061561,-2.463818,-5.098058,-6.801616,-5.219326,-3.883793,0.448634,4.921970,8.339088,-2.593615,-9.497650,-1.176167,-2.452420,-0.569015,-0.120665,9.786847,0.526957,-4.872651,-7.194594,5.550199,-8.405245,2.263923,-6.509276,7.841581,-2.154560,5.291762,8.330685,-2.693322,-0.792590,0.290690,8.465103,-0.659870,-2.319396,-3.887088,2.796518,3.793731,-8.493245,5.229080,-6.469423,-1.382269,-5.834021,8.561869,4.834641,-9.680081,-9.217685,-7.133386,-1.905646,-7.599126,0.704586,9.730542,9.672391,-4.763856,0.154329,-6.838882,0.873500,5.763650,-6.805666,2.231201,-5.280200,8.741103,4.823567,-6.554569,-5.221272,7.251672,9.246458,-7.396692,3.966835,-0.063179,-1.735538,-8.217423,5.510982,1.321760,2.926856,8.195921,-1.551773,-7.588184,-5.184899,-4.351114,-3.342402,-0.857800,-2.250978,-6.560336,-5.041100,6.054308,3.707501,-3.157136,1.041332,-6.451426,-4.827505,-0.601243,-8.470172,8.220374,4.362199,4.475294,6.884911,4.132190,-5.139087,5.173588,5.881754,1.695633,0.312400,4.365354,7.160432,0.633789,-6.527440,9.917400,-5.326619,7.250476,-4.319056,6.096876,8.333391,5.953500,-6.162220,-2.078991,6.967257,-4.324505,1.131083,6.026574,5.157102,-2.460798,-4.681577,-8.350438,-1.532421,-3.862030,-2.534178,-5.534204,6.599989,2.698558,6.196181,4.290853,6.922171,9.808590,5.273690,-6.664951,1.986548,-5.256153,-6.720888,-6.935437,1.757543,4.340138,6.588806,1.630242,1.081938,-3.564272,-2.260610,-8.041325,-4.674588,-6.203835,-5.115127,-1.468792,2.534753,-0.289842,-8.353415,4.772437,5.208062,3.523057,-8.204704,5.768909,-0.807896,-5.025433,8.557078,-2.403168,-5.670018,-4.536528,4.633900,-7.824678,2.461079,-7.969864,-3.004656,4.664446,-6.546936,-8.447000,8.163516,4.307334,0.052156,-4.166601,-0.796030,-3.370216,9.883263,1.842584,-7.832153,-2.905633,-6.044507,2.984747,-1.677606,7.108859,1.102222,8.230869,2.217880,-6.852116,9.626096,-1.282734,-2.295410,-8.771545,5.814047,-7.272697,-2.142691,5.475417,-0.597348,5.115170,-9.470490,0.411842,-8.394859,-6.473840,3.240531,-1.541443,-5.669813,-5.745387,-1.803196,-0.602110,6.807914,6.397480,9.378096,-8.060865,2.411343,-6.395269,-3.866968,0.179730,4.662077,8.114578,4.577259,3.929257,-8.044683,-7.072348,-8.641792,-0.698357,1.839617,2.918027,-8.524192,-6.049583,9.836812,8.443107,2.555391,-5.338508,7.002810,7.812362,-8.302463,-4.663745,7.281669,3.727857,6.075092,1.952907,3.275811,-5.974372,-3.232429,8.976244,3.900022,-0.798762,9.305811,5.686053,-9.595053,2.228472,6.413048,2.237917,-7.831083,9.413288,-6.897663,7.534072,5.334793,8.184633,-1.373062,-4.557377,-4.575796,-8.219458,2.655992,-9.378272,2.332029,-4.083316,1.924084,8.813109,-0.109832,3.051291,7.660702,-0.847723,-0.585693,-3.670350,-5.145297,9.515348,4.744340,6.092912,1.959396,-6.302709,6.585725,-9.228911,-6.491436,6.052946,-7.549460,7.882090,4.851458,-5.483612,-1.382393,-9.040044,3.709074,5.575867,-2.229471,-2.095621,-4.880358,-4.630803,7.349245,-7.413703,-9.269110,7.227706,-7.108731,-7.309503,-6.072796,-9.668357,0.601746,-5.969333,-1.149886,-0.746118,-3.494667,-6.636841,1.471780,-3.712696,9.452568,2.640836,-8.425053,-4.970764,5.890340,-6.833788,-1.288011,-4.637302,-4.066710,-7.979170,-4.229375,7.888765,2.929842,7.023785,-9.718677,-6.666648,-4.482477,5.134067,-6.252543,-1.838746,-3.412898,9.709106,5.625398,-6.700128,-8.173883,-5.000460,1.851555,8.650357,8.866834,-7.485250,5.542184,-7.366204,-6.245261,-9.819221,8.228433,-9.184895,-4.127736,-4.588438,-5.354672,1.764149,-5.601128,5.415565,7.707791,-1.457598,-7.171244,-3.099457,9.188428,7.104939,-4.531213,-6.787826,-6.150962,5.589778,3.947738,-2.384147,-0.780167,-2.543003,9.921264,4.765841,4.844024,-6.879439,-0.139299,9.118943,0.938464,2.261790,-4.351595,9.459101,-4.239780,6.164318,0.159999,4.369781,6.875100,-8.590632,-2.737611,5.628680,8.309943,8.814852,-3.136452,-9.538021,6.656559,4.591768,6.856488,2.597641,8.672492,4.371970,-0.265344,6.824915,2.041116,3.378487,5.462661,9.167310,-3.007264,-7.981311,3.323292,-3.262190,-4.646017,-2.198852,-7.380523,3.764230,5.335102,-0.425185,-7.768665,3.081569,9.209291,0.858875,-7.034732,-8.136118,6.866057,5.851578,4.837575,5.175768,-3.116081,9.441969,1.629686,-1.628001,-9.868897,7.444404,-4.714713,-5.509739,8.078832,-8.275289,-3.127285,-9.229777,6.237803,-1.898298,8.852719,-8.262589,1.619740,-3.282241,4.910202,2.871634,-5.738739,-7.084643,-3.669690,-8.066823,-3.560051,6.551887,7.134237,-1.622231,9.279395,1.244943,-8.094550,-1.548028,-7.208453,3.174989,-8.690416,1.168201,5.630599,2.349043,-0.602395,5.869129,5.968238,7.284023,-1.505370,8.371597,-7.809221,-0.908868,3.358664,-4.922094,2.087650,8.626453,7.167663,-7.898135,-4.903182,-7.360066,-1.334077,9.770670,-5.222414,-2.746589,-6.950838,-9.136212,0.258154,1.527615,-2.956297,-6.758110,1.523373,3.707555,-6.210120,0.404210,7.011127,8.305906,7.318218,0.939707,5.938173,-2.952391,-9.579510,-5.975021,0.353502,-2.736773,3.873772,-4.690166,-1.550271,9.503921,1.265174,9.336639,-2.180856,-1.720505,3.047245,6.369096,-2.067334,-0.458035,4.204835,-3.957894,-7.321237,-1.923036,2.360082,3.204277,-3.850353,-3.377853,5.005182,-8.200917,-1.545999,-3.085497,3.205809,-4.102919,7.756081,-9.361110,7.084509,-3.493724,8.667227,5.211618,6.613992,-8.633496,-7.444330,2.131638,-0.731329,0.245969,2.790168,-0.542526,-2.055649,-5.726302,5.735672,-9.134177,8.792211,-0.686891,1.298052,3.145593,-1.457130,-1.226449,-3.896077,1.689347,8.083768,7.967979,-4.335414,3.626735,-2.681297,-5.795516,-6.168133,-7.631570,4.147469,-7.195236,-1.706315,1.465083,3.055218,8.119317,-0.867793,-9.292024,-3.631623,-8.649329,1.264273,7.996990,3.896869,8.706818,-6.402305,8.364866,2.693207,-4.522845,5.530157,-8.218074,6.093871,-7.098010,-9.271392,9.602059,-9.088485,4.466234,-2.070154,1.429296,4.698993,4.235255,-6.350276,6.076876,5.112957,3.090593,-1.167772,0.508624,-9.675745,8.703957,5.460013,6.549786,-0.023012,1.841946,6.280771,-5.872092,-0.115779,-5.027428,-5.552941,-1.606328,6.420305,-8.103807,1.419249,8.952733,3.672530,6.734186,6.060444,-7.810180,7.795259,-8.548104,-3.149486,0.430296,4.159375,4.132428,-6.031171,6.638133,7.707806,7.503696,6.254354,-1.053263,8.521630,8.927725,-8.635369,-3.139159,-9.526753,-0.046971,0.181821,0.170196,1.595162,-3.706649,-3.548550,4.497371,1.757322,-9.531254,3.898554,8.264663,-8.388925,-3.345127,-2.014079,3.664015,8.744036,2.809668,8.309411,7.556450,2.622077,-6.785563,0.888105,3.477719,-8.283723,-3.479489,7.289029,-0.053843,-5.923411,-4.989722,8.023874,5.363883,-9.238590,5.394962,0.291378,-5.828483,-4.096814,-8.542436,7.369887,-8.509123,-1.901383,3.017734,-7.664923,8.752070,-3.458929,2.727267,3.407504,1.595768,2.688500,-6.477609,1.349705,7.363429,5.353839,-8.936100,-8.365369,3.951360,2.042462,-8.865817,-1.638795,-5.171792,5.254481,6.580591,4.155587,-2.293926,0.024719,4.879312,-3.696069,5.371325,5.479643,-5.775070,-2.042278,-1.492388,-3.731550,-0.724920,-7.713975,-6.597690,-2.268754,3.634477,-1.244177,6.950573,-3.354397,-1.966858,1.881811,-3.782109,5.327034,-6.515520,-0.235907,9.722603,9.319981,-3.981730,0.575416,-7.555214,-7.595344,3.679773,3.121455,-0.437117,2.230001,-6.014274,-6.945012,5.877977,7.752085,-8.261076,-0.228162,4.684127,9.054070,-5.607807,-3.953189,-1.019349,-1.097361,2.125839,-6.995172,6.497037,-9.780551,1.785812,-8.216243,3.118996,-7.679319,-3.313110,3.328650,4.415188,3.305773,6.582277,-7.736941,-1.946466,0.693376,-3.564292,2.130057,-1.210871,-5.900062,3.415666,-1.056203,-9.636275,-9.173668,-3.903760,-8.216117,-2.142903,3.179850,5.771750,6.704483,-3.696816,3.096259,7.680370,-3.560073,6.709361,2.672597,7.234445,0.910096,-4.745260,-9.014303,7.721835,-8.111670,-8.115019,-4.619075,8.680128,9.637270,-3.514369,3.333313,-9.339495,5.796853,-0.428300,-4.231044,2.479519,9.132528,4.143208,-3.137929,6.895517,-7.571303,-5.585221,0.258697,-4.701966,3.095068,-4.397359,-2.181761,-0.179635,-1.230408,-9.518121,-8.081503,-4.937515,-6.647267,-6.610215,-7.805554,4.123994,1.343995,3.081085,-3.948055,-4.620994,4.538303,-2.434036,3.772365,4.192253,3.182152,-7.767790,9.550353,2.651271,-6.270369,-9.683380,9.648541,5.519213,4.736582,-1.068085,-2.264355,6.483149,9.750235,-8.153125,-9.210300,-5.799640,6.667574,-2.666535,3.527894,-7.846932,6.051306,-2.901242,8.297776,9.342495,8.065578,-7.090119,-6.850085,7.102158,2.389537,-2.876656,9.703366,5.008215,7.343252,-0.137147,7.640892,-5.287315,3.289214,-4.425027,-0.221605,-4.852858,1.495352,-4.750150,-1.432055,9.717807,1.050158,-4.891269,-2.147214,0.652779,4.499854,-6.166512,2.963684,4.753614,2.019949,8.267823,1.362939,6.578748,-6.406098], dtype = "float64")#candidate|12326|(1568,)|const|float64
const_12327 = relay.const([-3.962551,-3.027645,-8.879574,-4.826152,2.623769,7.125463], dtype = "float64")#candidate|12327|(6,)|const|float64
call_12325 = relay.TupleGetItem(func_6193_call(relay.reshape(const_12326.astype('float64'), [1568,]), relay.reshape(const_12327.astype('float64'), [6,]), ), 1)
call_12328 = relay.TupleGetItem(func_6197_call(relay.reshape(const_12326.astype('float64'), [1568,]), relay.reshape(const_12327.astype('float64'), [6,]), ), 1)
func_6757_call = mod.get_global_var('func_6757')
func_6758_call = mutated_mod.get_global_var('func_6758')
call_12375 = relay.TupleGetItem(func_6757_call(), 0)
call_12376 = relay.TupleGetItem(func_6758_call(), 0)
output = relay.Tuple([call_12316,call_12325,const_12326,const_12327,call_12375,])
output2 = relay.Tuple([call_12317,call_12328,const_12326,const_12327,call_12376,])
func_12377 = relay.Function([], output)
mod['func_12377'] = func_12377
mod = relay.transform.InferType()(mod)
output = func_12377()
func_12378 = relay.Function([], output)
mutated_mod['func_12378'] = func_12378
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12417 = relay.const([[[-6,-8,7,7,4,9,-7,6,-6,8,2,3],[-6,5,-10,1,-10,-3,7,-2,-4,-3,-7,4],[1,-9,9,-1,7,-3,6,3,5,3,-7,-2]],[[-6,-3,-7,10,-10,-3,1,6,-7,-4,-2,-9],[4,10,-6,2,9,-7,-6,-4,-6,-7,-10,-4],[1,10,-7,-2,-2,4,-5,10,-6,2,-3,-10]],[[3,7,-2,10,1,9,-2,10,-5,10,1,-8],[6,-8,-4,2,-6,3,-8,-3,5,-6,5,1],[-10,-4,10,9,9,6,8,3,5,-3,-10,-3]],[[-8,-4,-6,-5,-7,-9,-8,-4,10,2,-10,-3],[2,-9,2,-9,-2,5,7,6,10,2,6,7],[-6,3,8,10,-3,2,4,8,-4,3,5,-7]],[[5,-7,5,-8,-4,8,10,-2,8,6,5,7],[-9,5,10,-10,-3,-9,-10,-1,1,-6,7,1],[2,-7,-3,10,-5,-5,9,3,4,-2,8,-1]],[[-1,7,7,-3,-5,-9,5,10,4,-6,-5,-7],[-10,5,10,-6,-5,9,10,2,-10,-6,10,-6],[3,9,2,9,5,-9,-2,-8,-7,10,8,-3]]], dtype = "uint64")#candidate|12417|(6, 3, 12)|const|uint64
var_12418 = relay.var("var_12418", dtype = "uint64", shape = (6, 3, 12))#candidate|12418|(6, 3, 12)|var|uint64
bop_12419 = relay.maximum(const_12417.astype('uint64'), relay.reshape(var_12418.astype('uint64'), relay.shape_of(const_12417))) # shape=(6, 3, 12)
func_11495_call = mod.get_global_var('func_11495')
func_11499_call = mutated_mod.get_global_var('func_11499')
const_12424 = relay.const([9,2,-1,-4,3,-7,-4,7,2,-3,-4,-3,-5,2,10,8,9,7,-6,-4,6,2,-6,3,6,10,-1,1,-3,8,2,-3,5,-5,-1,-1,-10,9,4,1,-8,-2,-7,-6,5,4,-1,10,-6,-8,4,8,-6,10,-8,2,4,-6,-4,-1,-10,6,-1,7,1,-6,9,-9,-10,-5,-9,-6,-10,4,-7,-2,-10,-8,7,8,-5,5,8,-6,-2,-7,-7,-6,7,10,-4,3,-3,3,-10,-9,5,6,-9,-4,-3,-4,5,-7,9,-8,-2,-7,4,6,-10,7,-1,1,-5,-1,-7,1,6,-4,-5,-9,3,-1,-3,1,4,-3,10,4,-10,-6,-3,-8,-4,5,-5,6,8,7,6,7,7,-6,-5,-4,7,-1,-6,-9,-1,10,7,-6,-5,6,-4,-1,4,-7,10,-3,1,9,-1,8,5,10,3,-8,-10,8,-9,4,-10,2,2,7,7,3,-6,-2,6,-2,-7,-5,-5,2,6,9,6,-6,-5,4,-8,-4,7,-5,7,3,-8,-2,3,-8,7,-7,-7,3,-5,-7,-3,9,-6,-4,4,6,6,-6,1,10,-1,3,9,1,-1,8,9,6,4,8,-5,-9,-4,2,8,5,10,-7,-2,-4,9,10,1,-5,4,-2,-8,10,5,9,-3,-5,10,1,-2,-8,-8,1,4,6,-9,-7,-9,-1,8,-10,-2,-3,6,-8,-10,3,5,-9,2,-7,4,-8,-2,9,-8,-10,-5,7,-10,2,-1,9,-1,-7,4,3,-1,-2,1,2,2,2,-6,1,-3,-5,9,4,-2,2,8,-5,6,9,-9,-7,-2,8,-7,3,1,-6,-2,10,-3,2,-6,8,4,-9,8,-6,4,-8,3,1,-9,-4,-9,-5,-7,-2,3,4,9,2,9,8,2,-2,-9,-8,-2,-9,9,3,-10,10,7,3,-9,-3,-3,-10,1,1,-9,-10,3,3,-5,9,-3,1,5,6,-10,-10,2,-9,4,-2,-9,5,4,-6,-6,6,-6,-9,-2,-4,-6,7,-6,10,8,-4,-6,1,-7,-9,-5,-2,2,1,8,6,10,5,-4,6,9,-1,9,7,10,-10,-10,6,-4,6,10,10,-7,-6,2,-3,3,7,5,-9,7,9,-10,1,-2,9,-9,2,4,9,1,6,-3,6,-7,4,-4,3,-8,9,-1,1,-7,-8,-2,-8,8,-7,-9,10,5,1,-6,3,-1,3,-3,2,9,3,-6,6,-7,4,5,-3,7,-10,-10,-7,7,3,-6,2,-4,1,-5,3,-10,-9,10,-5,-6,7,10,-7,6,9,-4,9,3,7,7,-2,-6,1,-3,-2,-3,-4,-5,-10,-2,2,7,3,9,1,-1,-2,4,-4,2,-5,-7,8,4,2,6,-2,-3,-6,-7,10,-10,5,-10,2,-7,6,7,-5,-1,-9,-10,3,-5,8,6,10,-4,1,-5,5,9,5,7,-9,6,-9,-8,-10,9,-7,-9,10,-3,7,-3,2,-6,-10,-7,-3,-6,7,-5,8,-6,9,-3,9,2,-6,8,5,-2,-7,3,-10,-4,-6,6,3,9,7,2,8,2,7,1,-4,-8,-2,4,-1,-10,5,10,-10,-9,3,-5,-3,6,-6,3,-9,-2,-1,2,-3,10,-10,8,-1,9,6,6,10,9,-8,6,3,-6,-4,-6,-5,-9,-7,7,1,4,9,-9,4,4,10,9,2,8,6,-5,2,-5,10,-9,-7,8,-4,6,-5,-2,-2,2,6,10,-6,4,10,7,1,-10,-10,6,-5,6,3,-9,-8,-9,-1,-8,-5,-6,-2,-4,10,1,2,8,8,-1,1,-5,3,3,4,-2,6,5,-1,-10,5,-3,-9,-6,2,-7,9,1,-10,7,-10,5,7,1,-1,10,-2,-2,-3,-7,8,-9,-8,1,9,-1,9,2,-6,-5,-5,2,10,-8,2,10,-1,-9,1,6,9,6,3,-5,4,7,-7,-7,-1,-9,-2,5,10,-2,-3,1,-6,-10,-7,-2,-5,10,-8,-8,-4,3,8,9,1,10,-10,6,8,-8,10,-7,9,-8,4,7,5,-6,-10,-2,6,7,-3,-5,10,7,3,7,-1,10,-1,5,-9,-10,6,1,3,2,-2,6,-10,4,-9,7,7,7,-8,-5,-3,-7,-6,5,-8,-5,1,2,6,-7,10,7,5,9,-6,10,1,10,-8,7,1,-4,-3,6,-6,-6,-8,8,-9,-7,-3,-6,-6,2,-3,-10,10,9,-2,-5,-9,-9,-6,-10,-3,-9,6,1,-4,-6,1,-3,9,2,-6,-4,-8,2,1,8,-1,-2,-4,10,5,7,3,-7,-2,8,8,5,-6,-1,-10,-10,-7,9,5,-9,7,-8,-6,3,-4,7,2,7,8,-2,6,-1,-6,4,2,-6,9,-9,9,-2,2,4,-9,1,-8,8,-7,-8,-1,-6,6,-2,-6,-10,3,-7,-1,-7,1,-10,1,6,8,2,-6,2,4,7,-5,6,-10,2,-3,2,9,6,1,-9,-6,8,-3,4,-6,-7,1,-10,-6,10,1,5,5,1,3,-5,-3,1,-3,5,-7,2,-6,8,-3,1,-10,8,-8,-1,9,10,-9,1,-5,3,7,-1,-8,-4,7,8,2,5,3,2,4,-7,2,-6,4,-2,-7,-5,2,-7,-5,-8,-9,8,1,-7,6,7,-1,7,-6,-8,2,9,3,4,-1,4,7,5,5,-4,-5,9,8,1,4,7,3,1,4,-3,-8,-6,-10,-7,-2,-6,-4,2,10,3,5,4,-8,3,8,6,2,5,2,8,2,10,8,5,-7,6,10,9,2,-9,-9,-10,-6,4,-6,-3,-6,-2,5,4,6,4,-7,4,-7,2,8,9,-7,-4,-5,9,2,-6,9,-8,8,-10,7,6,7,-1,10,-8,3,9,-9,-1,-2,-7,-7,-5,-9,9,1,9,3,-4,10,-1,-6,-2,1,-5,8,-3,10,-9,-4,-6,-6,-4,7,-4,-2,9,-5,2,-4,-8,-2,7,-6,-1,-7,-7,4,-3,-3,-5,2,-2,6,-3,-2,3,10,6,-10,-8,3,-1,-1,7,3,-9,-7,2,-7,-4,-5,-3,-10,-3,-7,7,-10,-7,5,5,6,-1,-4,-8,9,2,-10,-9,5,1,4,-1,6,-3,4,9,1,4,-4,-8,6], dtype = "uint32")#candidate|12424|(1200,)|const|uint32
call_12423 = func_11495_call(relay.reshape(const_12424.astype('uint32'), [16, 5, 15]), relay.reshape(const_12424.astype('uint32'), [16, 5, 15]), )
call_12425 = func_11495_call(relay.reshape(const_12424.astype('uint32'), [16, 5, 15]), relay.reshape(const_12424.astype('uint32'), [16, 5, 15]), )
output = relay.Tuple([bop_12419,call_12423,const_12424,])
output2 = relay.Tuple([bop_12419,call_12425,const_12424,])
func_12440 = relay.Function([var_12418,], output)
mod['func_12440'] = func_12440
mod = relay.transform.InferType()(mod)
var_12441 = relay.var("var_12441", dtype = "uint64", shape = (6, 3, 12))#candidate|12441|(6, 3, 12)|var|uint64
output = func_12440(var_12441)
func_12442 = relay.Function([var_12441], output)
mutated_mod['func_12442'] = func_12442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10838_call = mod.get_global_var('func_10838')
func_10839_call = mutated_mod.get_global_var('func_10839')
call_12463 = func_10838_call()
call_12464 = func_10838_call()
func_8790_call = mod.get_global_var('func_8790')
func_8793_call = mutated_mod.get_global_var('func_8793')
const_12504 = relay.const([5.425763,1.907053,0.387345,-0.788645,-7.953900,-0.203093,4.116939,-8.232275,-6.928145,0.088290,4.051725,-6.366317,2.850187,4.786610,-1.930354,-7.038247,8.153811,5.730623,9.070741,6.865537,-8.330033,7.562251,-1.066096,5.503130,3.225580,6.169824,-5.287115,3.128497,-1.234135,-0.499278,2.763274,-8.845399,9.179813,3.573044,8.273543,-0.928365,-4.475584,-0.347065,-7.865586,6.680042,-0.123983,-7.710791,-4.603051,6.001859,-8.965640,-2.856689,-8.541961,7.784119,-6.117500,-4.664925,3.233930,3.874529,-9.980010,-3.390183,-3.531185,-2.048556,0.108895,8.119113,-4.322354,-4.399758,-8.893901,-1.940814,3.716485,-2.572454,-2.312304,4.247601,-4.579701,-9.912032,-7.179963,8.640783,-5.105625,-3.679129,-2.203277,-8.586957,-7.924577,5.827083,7.946002,5.024834,4.957987,-7.663069,7.384640,-9.483193,-0.345164,-3.324204,1.371932,8.600954,-0.072251,7.013178,2.957565,8.299944,-3.662247,5.495228,8.568644,-6.581587,-1.407404,-3.819164,8.641704,5.414052,0.311725,-1.202142,0.783837,0.237700,1.949411,-9.987714,-5.858933,-8.570794,0.747860,-7.552749,7.409014,9.155883,2.782576,4.785347,-1.994110,-2.467796,-1.381633,5.224432,2.823919,8.636856,8.063700,6.194949,-4.238040,6.493632,3.443166,-2.291071,-5.381955,4.897453,5.158075,-2.522101,3.304491,-8.355192,-8.894355,-5.212564,-9.742263,-0.947769,3.450013,4.171425,-3.650463,9.727224,-3.790974,-2.854346,-3.356879,-1.702429,-8.266424,0.240269,1.483465,5.455602,0.435174,2.543627,-0.724390,-0.592575,-2.436110,2.111290,-2.070099,-9.923968,-9.049265,7.910310,-1.332956,-7.999896,5.638822,1.539542,8.873786,-3.350618,-7.212066,-7.430060,3.617750,-6.238719,-6.218693,-7.391643,0.830271,2.392810,0.500642,-0.159853,-8.098616,-0.783442,-5.593550,1.507317,0.607583,4.452301,9.894109,-2.578072,-9.912872,-0.806646,-4.286309,1.389811,-6.897763,5.516836,5.734304,7.170299,-5.415419,0.658028,6.655470,5.319852,-2.109111,-2.614809,-2.034477,8.191009,-3.140752,-4.589345,-4.025093,-3.283916,-5.133066,9.070365,5.364352,-9.435519,-0.455025,-1.536511,-7.314362,-0.429861,-2.302784,-3.862436,8.961992,3.831548,-8.729831,-0.428525,4.225173,4.379621,-5.344420,-1.474424,0.968987,-3.917960,-2.202689,-4.621304,-8.391909,-0.521533,8.567746,5.158068,-7.861308,-1.817596,-5.019041,4.680028,4.162328,-6.540706,5.648508,3.723776,7.096800,1.635432,6.634914,-3.690031,-4.981228,-6.068952,6.010760,0.251223,4.129601,-6.406147,-8.668857,6.172231,-3.192862,-8.711390,-4.724458,2.802007,4.230456,-7.102986,-4.704714,-4.387444,0.882472,-7.866626,-6.066987,-3.969032,-9.087972,-6.221449,-9.878267,-6.210909,7.626861,4.151518,2.440232,8.037436,3.509152,4.985159,-0.747701,-4.446935,-0.315985,-1.152651,-3.125205,-9.384099,-3.747031,-0.106298,5.417382,6.448504,0.397961,-5.703323,0.549028,7.374391,7.979477,-5.795941,-0.645670,5.733314,-7.789917,9.904766,-1.158306,8.817633,-0.007402,-3.375559,-4.017682,-0.685774,-0.558412,-0.324167,-9.329567,-4.218488,-1.351283,2.453381,4.885651,-3.966727,4.740129,8.178283,4.076916,-7.200574,-5.578912,8.281343,-8.095411,-3.081057,1.933464,7.294974,-2.201030,4.598328,-6.579658,4.294075,-3.823650,3.420017,8.245464,0.173608,0.181853,3.869919,-3.026312,4.963962,-3.946250,9.349612,-8.405480,-5.556429,-2.754261,-5.874804,-0.264926,4.245185,5.871467,-8.070599,7.358919,2.939714,1.786644,-7.929062,-5.719697,8.346004,9.210334,-7.400519,4.741146,-4.617675,-4.616966,-6.709274,-0.249662,6.064419,7.682766,-1.424807,-4.941892,6.034341,-0.127783,6.731274,5.421940,-9.756386,-3.724287,2.551777,5.584579,3.171601,-8.374533,-9.465167,2.754829,-6.598073,-9.519216,7.034760,-5.399515,-0.624134,-7.438604,0.865222,-6.750252,-3.038585,-8.845793,-3.867033,0.104608,-7.977006,-8.562803,-8.844509,-0.620081,-5.042562,-0.376030,8.178437,-1.291761,4.428634,-9.218542,1.034344,-5.600892,0.935703,6.937698,-3.557964,6.405090,-5.933695,-0.628562,-0.104157,8.924210,0.616342,-6.942528,-6.725879,-8.816185,-6.477583,1.656361,-6.546283,5.009898,-4.057264,0.476074,-7.879705,8.769457,-0.089470,2.452838,7.125990,8.415256,-8.378370,0.141915,4.808034,5.027947,-6.892435,3.990407,-2.555374,-0.209572,7.926319,-5.792534,1.284482,-8.768341,1.686613,-5.164966,-8.904193,5.740500,4.570095,1.876201,-5.230912,-1.739716,2.224937,4.733167,5.693092,9.773207,-1.187137,-6.856416,5.162094,2.543019,-8.052312,0.766338,-4.476996,-4.414916,-1.831586,-8.184568,-0.484864,6.614387,-4.058710,8.257295,8.349575,-5.153177,-7.947946,1.696076,3.853126,-8.198191,-9.284938,-7.005699,-6.529062,-1.734695,-3.960100,-9.343274,-4.972906,4.359198,-5.970997,-6.227410,6.847317,7.042574,4.949828,1.637977,-4.277593,-5.407156,-1.662447,6.648133,6.390824,1.524410,-9.167889,-6.817419,4.176384,4.704472,2.375058,8.257009,-7.097541,-2.215156,7.067789,-1.233847,-7.604281,-1.873953,8.805329,0.418609,-6.117056,-0.828294,-4.210641,4.449780,-9.854269,-8.688381,-4.987484,-3.039042,-6.626624,-6.669080,7.823106,4.030368,4.450498,-8.086351,0.889391,-9.957908,-8.470436,-6.293513,7.466223,-1.407916,-5.451088,9.130783,6.067284,3.793623,5.387383,7.933393,-1.301083,-7.743237,7.587732,-2.781490,-8.817875,-7.061076,-7.522125,-5.358381,-3.961819,3.132884,6.467688,1.831941,9.128466,-9.334938,-4.216712,0.938098,4.983322,-9.189049,-1.035256,1.486481,0.905355,9.572713,7.842642,-7.766638,-6.984066,-3.675510,-4.250387,-2.615361,6.495884,-6.094961,5.270713,-5.685671,4.568440,0.986588,-0.716781,6.231057,-0.238680,7.790624,-6.491470,2.929180,8.561242,-2.491994,2.540412,1.174188,2.522751,-1.970265,2.181443,0.436910,4.143418,-1.868226,-2.410358,-6.736011,-7.750528,-5.805840,0.427232,-7.025243,0.954282,-5.526138,1.813665,8.203010,-7.314312,6.041967,7.531795,-5.846122,0.127186,-9.441506,-9.184036,-7.986048,-0.012129,8.030139,-9.985858,-9.432972,-2.031320,-8.376449,2.667236,0.548789,6.874900,9.962522,9.379185,-5.297718,1.873902,-1.371688,6.778512,-3.807948,8.128071,3.602732,6.010846,-1.836441,-9.877483,-0.758196,-8.950572,0.115417,-0.190979,-3.420954,9.274515,0.649466,9.425004,-0.992966,-6.481119,-7.853085,7.898903,-5.132901,-5.575670,-3.226716,9.785579,-0.095019,-5.338310,-3.415314,-5.258818,0.957159,9.378154,-6.946974,-5.705836,6.267338,-6.864993,4.302522,4.646436,-5.843369,-1.089996,-3.547101,3.429751,0.727512,5.902624,7.148188,7.922063,4.149781,3.030854,4.540648,-1.300348,-6.446479,9.019907,-5.365974,0.625720,-5.143259,-5.558375,-4.116369,9.275875,6.499032,4.189313,-2.047641,6.266535,6.180288,-6.196549,2.299369,8.429480,0.297041,6.923587,7.122117,-5.420012,-6.210803,-1.150003,9.170261,-4.957196,-5.858377,1.171169,-5.589090,-2.349475,4.376462,2.681545,-8.925084,-4.412511,1.629468,8.098918,7.691505,-0.861366,-6.783334,-0.838203,-9.938174,0.313527,-5.791310,9.388257,0.235509,-2.608544,-2.317169,6.774839,-0.505846,-3.033362,2.650535,-7.308251,-8.892053,-1.567029,9.059305,-2.734403,-8.359378,2.553204,-7.148981,2.515610,-1.899496,-0.413773,2.606118,3.142836,5.606090,5.849566,-7.136528,7.517417,-8.492802,2.675992,-1.355109,5.994872,9.861710,0.090486,-7.129004,-4.400054,-9.945246,7.477137,-5.642280,2.940218,5.879541,5.081628,-2.306778,-7.784737,-5.412072,0.659757,0.066520,2.269558,1.114682,-6.566253,-9.410612,-9.995812,9.212375,-2.220420,1.762570,7.807847,2.588790,-4.855995,-6.296751,-6.812530,-9.857518,7.285351,8.636360,5.758907,-9.539599,-7.660799,-6.791661,0.904744,-8.079216,5.618014,-2.473783,-3.206637,5.848908,0.493783,2.200439,5.447033,2.828899,3.883428,4.657495,6.678721,-0.578647,-9.636046,2.130435,-5.401554,-5.551938,3.520549,1.078302,-1.245678,-4.721251,-2.556501,7.560107,0.107218,-7.740998,0.010798,7.073115,5.871247,-9.265927,-5.636863,-8.480214,-0.893120,1.659156,9.477625,1.355198,7.926949,3.438044,-7.730923,1.685176,-0.659432,-5.077771,-9.685866,-0.110526,-1.650010,7.345776,-7.953390,9.432028,-0.347106,-6.189306,4.593015,1.744890,3.036908,-2.804796,-6.248477,-4.453933,-3.676753,-4.731493,-2.846223,-4.975290,-6.428444,-7.261138,6.891039,3.130948,-5.141175,3.055017,0.533093,-3.200935,-5.949492,-5.943766,6.674806,9.775861,-7.657109,-6.704204,-6.777890,0.883396,-2.878088,-3.162794,6.330200,-9.705393,4.928786,-2.776296,-5.345737,-6.467659,4.585395,7.791366,2.036016,-0.119824,2.437906,-3.322306,-8.167884,-3.357838,8.049738,-9.831431,-7.532798,-1.062519,5.341040,-9.435521,-4.646826,-4.392750,-6.521199,-3.043937,-1.686062,2.120581,7.388029,9.532339,5.324647,-0.414579,-9.778592,7.617036,5.039394,3.282799,-4.710237,6.110939,-7.519609,9.386377,0.380315,-7.680778,-2.746581,7.021851,7.647083,6.516278,-5.765637,-0.274270,4.552863,6.923906,5.306872,4.932951,0.119572,-6.995930,-4.139620,-4.321048,5.726240,8.722443,-9.315835,6.188706,5.986365,-0.112093,8.603532,5.623559,-6.995107,0.834119,5.452948,-9.745377,4.850392,-7.063792,-7.118106,-8.416383,6.560254,3.331658,-7.185347,4.782183,-2.690862,-7.697084,-3.467288,-3.995014,-3.845908,8.089540,-8.469831,-2.275650,-7.533154,4.758301,5.583364,6.618787,1.355961,-1.646925,4.131421,9.874714,2.562178,5.576828,1.462985,7.254344,-8.136809,5.357136,-0.046708,-4.113907,-5.718518,2.416984,9.752741,-9.528135,2.061011,4.587630,7.423533,-0.180685,-5.737286,-8.937376,7.732432,2.987144,-7.275847,-2.935630,6.367810,-5.281692,-0.342997,9.518639,-8.678609,-8.559722,5.881054,-1.851647,4.802201,8.357131,1.031784,1.984942,8.976199,-4.453052,-1.744120,-6.015596,7.863868,3.465673,-3.230190,-9.282107,5.418017,3.150466,-0.589976,2.829176,-5.061480,3.405101,-1.716445,1.675580,8.569926,-8.632573,-5.253818,0.045497,6.492450,-3.615089,-7.873975,-1.607865,0.112422,-3.559098,7.257026,6.268439,-5.313640,7.772419,-4.306377,7.875224,-3.754509,8.294891,-7.366161,0.230394,5.791689,-5.616915,-3.609080,4.337020,-9.381041,6.368650,2.758088,2.801831,7.845323,6.066691,4.805083,9.755989,-8.820152,5.768647,-6.033143,-0.048290,-4.665132,5.666315,4.613821,-9.868081,-3.356223,3.658074,2.326062,8.749766,-2.183691,-8.380772,5.755616,5.544323,-8.648406,9.288711,5.517657,-2.897624,-9.013041,-3.624615,4.434794,9.909171,-8.288017,3.396221,8.839412,-3.952522,4.926043,-9.472094,2.665046,-7.149483,-8.161790,-7.526150,0.485071,4.770297,-2.714080,3.176802,-1.754921,6.533901,-7.351793,-4.162035,3.890413,8.123147,9.196309,-7.604529,8.728937,-2.970050,-6.932645,-4.990947,-9.955056,4.797136,8.464606,-5.598368,0.925641,9.815314,-1.008170,7.913181,-4.451296,9.446505,-8.505853,-9.696701,-6.618594,3.212428,4.182256,1.628006,6.469626,-3.069773,0.860609,3.419372,-4.690644,-0.728806,-2.435087,0.332396,-5.341683,5.415290,-5.961164,7.547897,-4.138341,4.789569,-2.312750,1.350165,0.944583,-7.544385,-7.225997,3.130258,-9.290203,-1.032856,7.629370,-8.139328,-5.462133,8.393949,4.263797,3.733508,8.669056,-6.460033,0.062772,-2.721592,3.731752,-1.391823,-4.031374,4.020780,5.216968,0.240788,3.911686,8.810627,8.837046,-1.998962,1.360874,4.163239,-6.356057,-9.429457,1.395390,-7.750170,5.422121,9.195661,-1.953197,9.279874,-1.019608,-4.768444,-7.356128,6.782313,-7.926126,-9.506549,2.111118,1.184623,6.764230,-5.237422,-6.238744,-1.200620,4.331191,6.321180,-7.629401,5.480762,0.884038,-7.121412,1.545980,-0.135240,5.492855,4.145932,-6.595394,-3.136676,-8.080815,-9.447770,7.856630,2.681729,-7.493901,-6.300225,9.077416,6.192339,7.228017,-5.525855,0.719090,5.451305,3.581992,-2.497668,5.287783,-1.006892,6.257896,-8.985759,5.793455,0.549877,-3.371214,-6.745790,3.924584,-5.189973,3.103133,-7.466439,8.546370,8.921715,-1.065294,-2.442789,-4.622535,-4.058202,-6.610611,-0.433351,-4.533686,8.192067,6.168331,-6.542063,-9.943016,0.980828,6.674232,-8.103509,1.994898,5.031770,7.892474,6.460821,-7.186039,5.388932,-0.752475,-2.089694,2.209623,9.376417,0.275742,-8.773205,0.482436,5.609631,0.284701,1.104116,7.274560,-3.694249,8.247316,-9.094823,4.402644,-9.720683,3.127447,-5.685311,-5.434181,0.165728,2.709024,9.517035,-0.404850,4.029736,0.001439,-9.476379,-9.164175,7.927108,5.827735,2.066430,-8.775523,-2.461297,6.376294,-7.820330,5.497833,6.418513,4.441690,2.509344,-9.974062,3.059600,7.366005,-9.803408,2.146848,4.462806,-9.686793,2.924826,-3.124230,-5.575541,8.340343,-7.898336,9.369088,4.053594,-5.303308,-1.089576,-2.237541,-4.603037,6.120197,8.045698,4.777034,7.363054,0.438232,-5.109524,6.676746,0.534936,1.443901,0.292731,-2.433327,-4.013761,2.935070,3.630761,-3.758216,8.097156,-6.688738,-5.026801,-2.198331,5.004532,6.916710,0.047521,9.098943,5.134760,-7.582601,3.453901,1.036253,-2.527431,-0.038459,-0.864250,4.852329,-0.765688,-3.670939,6.951947,5.255462,6.374018,-1.561932,4.516683,4.611870,2.000244,6.146147,-1.097011,-1.225484,1.072177,-8.939241,0.315325,7.010558,-6.714716,1.629456,-5.557352,-1.923222,3.844721,9.422721,-9.366828,1.045700,-9.141321,-1.885206,4.276135,6.194110,4.924087,4.607079,-3.039062,3.057598,-9.562990,-9.068821,9.395899,-4.884361,-7.672450,3.116532,7.523743,-5.570907,1.473714,-9.393924,5.663271,8.788203,-0.885971,2.830340,4.310605,9.242195,0.295817,7.920303,-7.108131,9.417428,2.057388,-8.973433,7.520635,-7.343602,7.370607,-3.298026,1.008717,-0.342743,-3.477074,-7.498927,-9.204425,1.115790,0.011584,-3.749004,9.333426,-6.184155,-3.918341,0.512422,3.428423,-4.469465,-5.538969,4.526387,-1.917609,9.722312,-8.904664,-9.982645,9.641361,-4.093323,-9.917184,8.601979,8.587383,-0.134977,-6.153979,1.514972,-7.276439,-5.700645,-8.872525,-7.976707,0.699662,6.108167,0.406632,-0.928185,-7.267949,7.491034,3.447698,-8.580842,2.568631,-0.918233,-2.404850,7.794132,1.351096,8.591269,-9.564921,-9.482017,-4.909583,3.929409,-8.847238,-7.592359,-2.137913,8.886248,-9.110794,-2.595933,4.084353,4.941925,4.662265,-7.267303,2.204435,-8.679246,8.452176,0.652514,2.328088,4.045777,5.561541,-0.965624,4.285459,0.325750,0.257539,1.967844,2.598856,-0.900653,-4.736473,4.574189,-2.948991,1.468097,9.617828,1.962022,9.977442,-0.783764,3.497625,-2.240840,-2.028535,-4.356936,-0.764980,-9.841905,8.326636,-3.890188,7.727970,5.011192,0.036053,8.741592,4.568260,0.674528,1.403506,7.220816,-0.425395,-9.974691,-5.049204,-1.341447,-7.128045,-4.548119,9.471235,4.232948,-7.160004,1.359696,2.677835,-4.850649,0.096494,3.404474,7.874954,0.507508,2.556262,0.327668,8.486336,-6.161834,-0.359146,4.106502,3.464423,8.896629,6.777745,0.641336,0.423352,6.203550,-4.191857,-0.819576,-0.680160,8.335327,5.949709,9.056006,4.765148,-5.143130,-9.413680,4.624280,2.568609,5.115257,8.262916,5.708839,7.170770,-8.010982,-9.116221,5.783042,-4.752124,-0.047726,2.578632,-1.372316,7.028273,0.360212,-0.511777,1.792618,4.954879,-9.964505,5.755760,2.927606,1.124346,-9.645789,-7.943555,-1.619937,3.523975,-0.403204,-1.258989,6.210497,-7.421141,7.573153,8.624299,-6.889803,4.925297,-8.154240,-5.285701,7.078202,4.073837,4.939325,-0.914873,-5.463126,-9.944788,-2.816421,-4.439848,-4.756410,-6.645437,6.913055,-9.235910,-0.790334,5.605117,4.107508,5.841028,4.797250,-9.314629,-6.330729,-1.089814,-8.432550,-4.157994,1.328111,-9.006387,0.430598,9.438712,4.586366,-1.105529,8.013427,-2.378892,2.964207,-1.998106,-7.430606,-6.470927,6.395349,1.870546,7.338702,-0.468133,-7.566082,5.385578,-4.475855,6.968892,-0.525881,7.127027,5.435795,-9.615226,8.611819,0.827064,-0.851493,0.154287,-9.281081,2.574740,-6.297974,-2.170967,9.520654,-9.154950,-6.655142,4.765676,9.298637,-3.976978,-8.440810,3.603398,8.716652], dtype = "float64")#candidate|12504|(1568,)|const|float64
call_12503 = relay.TupleGetItem(func_8790_call(relay.reshape(const_12504.astype('float64'), [56, 28])), 0)
call_12505 = relay.TupleGetItem(func_8793_call(relay.reshape(const_12504.astype('float64'), [56, 28])), 0)
var_12514 = relay.var("var_12514", dtype = "float64", shape = (9, 7, 11))#candidate|12514|(9, 7, 11)|var|float64
bop_12515 = relay.bitwise_xor(call_12503.astype('int16'), relay.reshape(var_12514.astype('int16'), relay.shape_of(call_12503))) # shape=(9, 7, 11)
bop_12518 = relay.bitwise_xor(call_12505.astype('int16'), relay.reshape(var_12514.astype('int16'), relay.shape_of(call_12505))) # shape=(9, 7, 11)
output = relay.Tuple([call_12463,const_12504,bop_12515,])
output2 = relay.Tuple([call_12464,const_12504,bop_12518,])
func_12519 = relay.Function([var_12514,], output)
mod['func_12519'] = func_12519
mod = relay.transform.InferType()(mod)
mutated_mod['func_12519'] = func_12519
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12520 = relay.var("var_12520", dtype = "float64", shape = (9, 7, 11))#candidate|12520|(9, 7, 11)|var|float64
func_12519_call = mutated_mod.get_global_var('func_12519')
call_12521 = func_12519_call(var_12520)
output = call_12521
func_12522 = relay.Function([var_12520], output)
mutated_mod['func_12522'] = func_12522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12566 = relay.var("var_12566", dtype = "float64", shape = (14, 7, 11))#candidate|12566|(14, 7, 11)|var|float64
uop_12567 = relay.asin(var_12566.astype('float64')) # shape=(14, 7, 11)
func_8877_call = mod.get_global_var('func_8877')
func_8878_call = mutated_mod.get_global_var('func_8878')
call_12574 = relay.TupleGetItem(func_8877_call(), 0)
call_12575 = relay.TupleGetItem(func_8878_call(), 0)
func_176_call = mod.get_global_var('func_176')
func_179_call = mutated_mod.get_global_var('func_179')
const_12582 = relay.const([-4,6,-2,1,1,10,-2,-10,-8,2,7,3,2,-8,10,-4,-4,6,-7,-4,10,10,9,-10,-2,6,-2,7,-10,-4,-10,-7,-9,2,9,-4,2,-3,-4,9,5,-5,4,-8,-1,-7,1,7,4,-5,5,-3,3,-9,-9,5,6,1,-4,-6,-1,7,-4,3,-4,-2,10,-8,-1,2,-5,-4,-6,3,-3,-6,10,8,8,6,2,10,3,-4,5,6,2,-3,4,8,-4,4,10,10,5,-9,-3,-10,-9,3,-2,-3,1,-3,-1,4,7,-9,-2,-4,-4,6,4,-4,-4,-6,-9,1,5,7,-6,3,-9,-2,-1,7,-1,-3,-3,-9,-7,3,4,-6,-9,8,1,3,-4,-10,1,-2,-4,-1,-3,2,-7,-6,1,1,2,-7,1,-5,-5,1,6,-2,8,5,-4,-1,-4,-2,-8,6,4,-5,3,1,-6,-6,4,1,1,-3,-7,-6,1,5,-2,-9,4,3,-5,9,-5,-4,-5,10,2,-1,-10,-9,6,10,7,-8,7,-2,4,-4,6,-9,-4,7,2,7,6,3,-2,-3,6,1,3,-6,5,-7,7,-10,-4,-8,-6,10,-1,-7,8,3,1,9,-7,10,-6,-1,-10,-5,1,-3,-8,-8,-6,3,4,1,-8,-9,5,7,4,-6,2,-1,5,-9,-4,4,-3,-5,-3,-2,7,7,1,-5,5,-1,3,1,3,4,8,-9,-7,8,1,10,-3,9,-3,7,8,-5,10,-10,6,2,4,-5,-8,-8,2,8,-4,-7,3,-5,4,1,-7,-8,-7,-7,4,9,-4,4,4,1,-10,5,6,4,3,5,8,-3,6,3,3,-5,-8,2,8,10,-6,1,6,-4,-3,-8,-4,6,-2,-1,3,-1,2,3,-9,-10,-9,-6,10,-5,-9,-4,6,5,10,-5,2,4,-1,6,1,6,-10,-8,-4,-3,-7,-8,-6,-1,8,9,-3,-4,9,6,-7,-1,-7,-9,-1,-6,9,1,6,4,-9,-2,6,-7,-7,7,7,2,9,7,-4,-10,4,10,5,-3,-9,-9,2,-1,2,4,-8,-5,10,8,-2,8,-2,-7,-4,-3,9,9,-9,2,-8,1,7,-2,-8,2,1,-8,-2,-9,-9,-1,-4,10,9,-7,10,-3,-3,-3,-7,3,-7,-10,9,-5,-2,7,-5,1,8,-10,-7,-5,-10,-3,3,7,-8,7,6,4,-6,-6,-7,-6,-7,5,-9,-4,7,10,-3,10,-3,7,-10,-7,-3,9,2,-6,2,-2,-2,-2,4,-10,8,-8,-8,-10,9,5,2,3,9,-4,-3,-2,3,-1,-5,-3,1,-3,8,7,3,-9,-6,-1,-4,-6,1,9,1,10,2,-8,-5,-4,-4,-10,5,-4,-4,7,-1,-6,-10,-6,-8,6,10,-5,-5,-9,1,8,9,-8,10,-2,8,-3,4,9,8,1,9,2,-8,3,-10,-7,4,3,-1,-4,4,7,-9,-1,-2,-2,2,-5,6,-10,-10,7,-2,-7,-7,2,-10,-1,-5,-3,-7,-8,-2,-9,-4,7,8,7,4,5,-8,-5,5,-5,-10,-9,-7,8,-1,-8,-8,8,-10,-7,2,-8,-8,9,10,-6,-4,9,-4,-1,-8,2,7,-1,7,-1,-10,9,1,3,-2,4,-4,9,2,4,2,-5,6,-6,-7,-1,-8,-7,10,2,9,-10,-1,-2,3,-4,-2,6,8,-2,-10,2,-5,1,-8,-7,-1,1,-8,-4,1,-7,-8,2,6,-8,6,6,-8,-9,10,-5,-5,-2,3,5,5,-8,5,-8,3,7,6,3,2,2,7,2,6,-6,-1,3,-5,8,1,2,2,7,5,-3,3,-9,-3,-4,-7,9,1,6,3,5,10,9,-7,1,8,8,-1,2,8,-4,6,2,5,5,-4,3,-8,-7,1,-8,3,-8,1,-8,-8,5,-6,-3,-7,-9,9,-4,-4,-3,-10,-2,6,-7,2,7,10,5,-9,6,-7,6,7,-4,-2,6,9,-4,7,-4,-9,-10,5,4,4,-1,-7,6,6,4,8,-1,-7,-3,-8,-5,2,-3,-1,-10,-9,5,-7,-9,-4,2,-3,10,-7,4,2,10,7,8,4,-4,-10,-8,-3,-9,-10,-8,3,2,-10,5,6,-5,-1,-2,4,8,6,-10,-3,-5,-1,5,-8,6,-3,-2,-6,-3,-2,2,10,10,3,4,-9,8,-1,-6,2,-9,-2,-4,-9,-5,-2,7,-4,10,4,-3,5,3,-8,5,10,3,-6,-8,5,-6,-10,-3,-9,-4,-8,-6,-10,-9,7,-8,-9,-8,-9,-9,-2,3,7,6,6,-9,-7,-7,5,7,9,10,6,2,4,10,-6,8,7,-9,4,-9,-4,-9,-4,2,2,1,8,1,-3,-8,4,-2,9,-5,-1,5,-5,-6,-1,-2,8,10,7,10,2,8,-3,8,4,-7,2,-10,-6,-5,5,-1,1,1,-1,-7,-8,-1,-5,-6,-2,4,7,-10,2,-10,-3,2,-10,-3,5,-8,-4,5,-7,10,6,-3,10,5,-1,1,-8,9,7,1,-1,-4,-7,4,-1,-5,-10,1,-4,-4,-1,-8,-9,9,8,-7,-10,-1,1,2,2,1,8,2,8,6,10,-10,-10,6,-8,6,-3,4,-4,5,6,10,10,5,-9,-9,6,9,-6,-5,-7,2,-9,3,5,-3,-6,4,-6,-3,-3,-5,2,8,-10,-4,-3,8,-5,7,-1,-10,3,4,-6,-6,1,-9,-7,3,-9,6,-3,5,-7,7,-3,6,2,5,9,8,-3,5,3,9,4,5,-4,-5,-3,9,-1,9,-5,3,6,-3,8,10,5,5,-9,-7,3,1,6,1,5,1,6,3,7,2,-4,-9,4,-10,-6,-5,9,-4,-8,-10,-5,-4,-7,7,-4,9,1,-9,-4,1,4,-9,-4,7,6,-6,2,-5,8,3,1,10,-4,9,5,-9,6,3,-9,-3,-2,9,10,3,6,-7,-1,-8,-5,-4,9,-1,-1,6,-7,-6,-9,-4,-9,-6,-6,3,-2,-4,-10,-7,-2,-5,-5,3,-1,2,4,-8,3,-9,6,6,-2,5,9,-2,-10,-3,1,6,5,-1,-4,-3,4,-7,5,-8,-6,-1,-5,-9,4,-10,8,-9,4,3,1,-8,-9,5,10,10,-6,-4,-6,4,7,-6,-9,-9,5,4,7,10,7,-9,-7,-7,-2,4,6,-1,-3,7,10,-7,-7,2,3,9,5,8,-10,7,-8,1,10,-6,-7,-6,-8,-5,-6,-6,-6,8,4,5,3,-6,-4,4,1,10,-2,6,-1,-4,5,-7,-6,4,3,5,-3,6,10,-3,1,-8,2,-2,6,-2,-7,-3,4,-4,-7,2,10,7,-9,2,4,2,5,-8,1,1,9,-10,9,1,-2,6,-2,-3,-1,-10,4,-10,-7,9,10,-5,-2,-3,8,7,-8,2,-5,-2,10,3,5,3,4,9,2,3,10,4,-2,10,5,-2,6,7,8,-2,-3,-5,8,1,10,3,9,-10,10,1,-3,-8,-8,7,-4,7,5,-4,-5,-3,8,7,-3,10,-8,-1,-5,9,3,-7,6,-6,-7,-6,-7,7,2,5,-2,9,6,-10,8,-4,7,1,9,-8,2,-9,2,-6,-2,2,-8,4,10,6,-5,-2,-4,-10,10,7,2,1,-4,8,10,1,-10,1,-3,9,-7,-2,4,2,-10,8,-7,-3,5,-10,-1,4,-8,-1,-4,-8,-3,-2,2,3,-4,-3,-7,5,-8,-1,-8,10,10,6,2,-4,6,-2,-1,10,5,10,2,5,10,10,-1,-5,-2,6,7,-10,10,-1,6,-8,-7,-2,4,8,5,4,-6,8,10,-3,8,9,-5,6,-4,-2,-3,-9,-4,-10,4,-5,-3,-10,9,-9,5,2,8,1,4,-10,-10,3,5,2,-9,2,10,-6,-5,3,-3,-10,-4,-1,-6,7,-2,-9,6,-8,8,9,-2,-6,-10,-9,-5,1,3,10,-7,-5,-7,-7,6,8,-5,-2,1,-8,-7,1,-7,3,-8,-9,-2,-3,-9,-4,6,-10,8,-2,10,-10,-6,-10,5,2,10,8,6,-3,-2,3,-8,10,3,-4,1,-1,-5,9,6,-3,5,-10,-3,-7,7,-4,10,-2,-8,-7,10,-8,-1,-7,10,-5,1,5,6,10,1,2,-2,6,1,-10,5,8,-5,-3,4,10,-3,1,7,7,-9,-9,1,10,-1,5,-8,-2,-7,-2,4,6,8,-9,9,3,2,9,-9,7,9,8,4,-4,6,10,9,7,3,2,-1,10,-9,9,7,-2,8,8,3,-3,-8,-10,10,4,-5,-7,-1,2,-5,-2,6,3,-5,8,-10,8,5,-7,-5,-10,7,-7,-4,10,9,-6,-5,1,-7,-9,-1,7,5,4,-4,10,-2,10,7,7,-2,-1,9,9,2,-5,7,2,7,-3,10,2,2,10,-4,5,10,-2,-1,-7,3,7,-5,3,7,-4,-1,1,-10,3,7,-9,8,-8,-4,-4,-6,-8,-2,-4,9,7,4,-1,8,10,6,2,1,-4,4,6,9,-2,7,1,2,3,-8,4,-2,3,4,-3,7,1,-5,1,3,6,-9,-3,9,-9,-2,-4,7,-2,5,5,-5,3,-5,6,8,-7,3,10,-8,10,1,-6,-3,9,-6,-2,-3,10,9,-6,-10,-4,5,-4,4,-4,-7,-5,-9,-10,9,5,-7,1,-3,-3,-2,-3,-2,1,-10,-10,3,7,10,-8,-9,2], dtype = "uint8")#candidate|12582|(1800,)|const|uint8
call_12581 = func_176_call(relay.reshape(const_12582.astype('uint8'), [15, 10, 12]))
call_12583 = func_176_call(relay.reshape(const_12582.astype('uint8'), [15, 10, 12]))
output = relay.Tuple([uop_12567,call_12574,call_12581,const_12582,])
output2 = relay.Tuple([uop_12567,call_12575,call_12583,const_12582,])
func_12590 = relay.Function([var_12566,], output)
mod['func_12590'] = func_12590
mod = relay.transform.InferType()(mod)
mutated_mod['func_12590'] = func_12590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12591 = relay.var("var_12591", dtype = "float64", shape = (14, 7, 11))#candidate|12591|(14, 7, 11)|var|float64
func_12590_call = mutated_mod.get_global_var('func_12590')
call_12592 = func_12590_call(var_12591)
output = call_12592
func_12593 = relay.Function([var_12591], output)
mutated_mod['func_12593'] = func_12593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10234_call = mod.get_global_var('func_10234')
func_10235_call = mutated_mod.get_global_var('func_10235')
call_12615 = relay.TupleGetItem(func_10234_call(), 0)
call_12616 = relay.TupleGetItem(func_10235_call(), 0)
func_12148_call = mod.get_global_var('func_12148')
func_12150_call = mutated_mod.get_global_var('func_12150')
call_12627 = relay.TupleGetItem(func_12148_call(), 1)
call_12628 = relay.TupleGetItem(func_12150_call(), 1)
func_6992_call = mod.get_global_var('func_6992')
func_6993_call = mutated_mod.get_global_var('func_6993')
call_12638 = relay.TupleGetItem(func_6992_call(), 0)
call_12639 = relay.TupleGetItem(func_6993_call(), 0)
output = relay.Tuple([call_12615,call_12627,call_12638,])
output2 = relay.Tuple([call_12616,call_12628,call_12639,])
func_12663 = relay.Function([], output)
mod['func_12663'] = func_12663
mod = relay.transform.InferType()(mod)
mutated_mod['func_12663'] = func_12663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12663_call = mutated_mod.get_global_var('func_12663')
call_12664 = func_12663_call()
output = call_12664
func_12665 = relay.Function([], output)
mutated_mod['func_12665'] = func_12665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_12862 = relay.TupleGetItem(func_6725_call(), 0)
call_12863 = relay.TupleGetItem(func_6727_call(), 0)
func_6851_call = mod.get_global_var('func_6851')
func_6852_call = mutated_mod.get_global_var('func_6852')
call_12880 = relay.TupleGetItem(func_6851_call(), 0)
call_12881 = relay.TupleGetItem(func_6852_call(), 0)
func_9280_call = mod.get_global_var('func_9280')
func_9282_call = mutated_mod.get_global_var('func_9282')
call_12909 = func_9280_call()
call_12910 = func_9280_call()
output = relay.Tuple([call_12862,call_12880,call_12909,])
output2 = relay.Tuple([call_12863,call_12881,call_12910,])
func_12911 = relay.Function([], output)
mod['func_12911'] = func_12911
mod = relay.transform.InferType()(mod)
output = func_12911()
func_12912 = relay.Function([], output)
mutated_mod['func_12912'] = func_12912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6632_call = mod.get_global_var('func_6632')
func_6633_call = mutated_mod.get_global_var('func_6633')
call_12915 = relay.TupleGetItem(func_6632_call(), 0)
call_12916 = relay.TupleGetItem(func_6633_call(), 0)
output = relay.Tuple([call_12915,])
output2 = relay.Tuple([call_12916,])
func_12963 = relay.Function([], output)
mod['func_12963'] = func_12963
mod = relay.transform.InferType()(mod)
mutated_mod['func_12963'] = func_12963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12963_call = mutated_mod.get_global_var('func_12963')
call_12964 = func_12963_call()
output = call_12964
func_12965 = relay.Function([], output)
mutated_mod['func_12965'] = func_12965
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12966 = relay.const([[[True,True,True,True,True,True,False,False,False,True,True,True,True,True],[False,True,False,False,True,True,False,False,False,True,False,False,True,False],[False,False,False,False,True,True,True,False,False,True,False,True,False,True]],[[False,True,True,False,False,True,False,False,True,False,False,True,False,True],[False,True,True,False,True,False,False,False,True,True,False,False,False,True],[True,False,False,True,False,True,True,False,True,True,False,False,True,True]],[[True,True,False,True,False,True,False,True,True,False,True,True,False,False],[True,False,True,False,True,True,True,True,True,False,True,False,True,False],[False,False,True,True,False,True,True,False,False,True,False,False,True,True]],[[True,True,True,False,False,False,False,True,False,True,False,True,True,True],[True,False,True,True,False,False,False,False,True,True,True,False,False,True],[False,False,False,True,True,False,True,True,False,True,False,False,False,False]],[[True,True,False,False,True,True,True,True,False,False,False,True,True,True],[True,False,False,True,False,False,False,True,False,True,True,True,False,True],[True,False,False,True,True,False,True,False,True,True,False,True,True,False]]], dtype = "bool")#candidate|12966|(5, 3, 14)|const|bool
var_12967 = relay.var("var_12967", dtype = "bool", shape = (5, 3, 14))#candidate|12967|(5, 3, 14)|var|bool
bop_12968 = relay.logical_or(const_12966.astype('bool'), relay.reshape(var_12967.astype('bool'), relay.shape_of(const_12966))) # shape=(5, 3, 14)
func_7212_call = mod.get_global_var('func_7212')
func_7214_call = mutated_mod.get_global_var('func_7214')
const_12984 = relay.const([[-0.464416,-6.220784,8.875471],[6.184485,-6.471636,-8.231392],[-9.714631,-7.500110,7.477295],[6.342601,5.318009,4.637266],[3.712824,-9.117197,0.154105],[2.137589,-2.762240,2.543314],[-1.504489,6.660753,-3.122337],[7.425828,-8.398656,5.856225],[-6.814125,2.108128,3.499881],[8.861948,2.977300,3.920929],[-0.530714,-7.060127,-4.121716],[-6.697927,-9.015131,0.611759],[-4.895578,3.716177,-8.716826],[-7.262218,-7.858902,-4.332582],[-5.862058,-8.764677,-7.755152],[-2.027620,-4.734809,8.819122],[-8.543330,5.412152,1.498275],[-4.487865,3.719423,-2.219641],[-0.559268,-3.642633,-5.417040],[-2.850681,1.878537,2.382388],[-8.661561,-8.691639,-8.354055],[3.653916,8.214293,-9.534618],[4.322755,-2.757019,-0.013439],[3.715970,1.615396,3.516427],[-2.914985,8.630519,-1.974846],[0.064816,-6.586015,1.865342],[-2.032706,-2.438878,9.449718],[-6.488248,6.362112,-9.842957],[-9.842894,-5.887552,7.647518],[9.509712,9.239605,3.305953],[7.715568,8.697605,-2.560191],[2.824957,1.807353,7.246569],[-4.657530,-2.119878,-5.289277],[5.969865,-9.257089,5.213515],[-2.785011,0.937623,5.975069],[6.201481,-8.956613,-9.614680],[-9.244728,0.043428,7.154305],[-2.488352,-2.122971,9.740203],[6.298774,7.510753,-4.689350],[-9.983358,-5.952335,2.502894],[-0.517335,-0.996754,5.682204],[-3.093282,-2.827614,7.520992],[-6.277569,8.782912,-2.855945],[3.167225,-7.819415,9.007963],[7.666013,6.625276,-3.408539],[8.992671,4.687081,7.704993],[3.550361,-6.020580,3.412444],[6.733491,-8.566121,-5.254184],[-0.290324,-4.753534,2.371163],[2.981186,5.256703,-4.150960],[4.078361,3.597142,3.333583],[1.879837,-5.432244,1.044807],[-1.545783,8.847947,3.903392],[7.096364,4.671894,-0.992572],[-5.497978,-5.192691,-7.558544],[0.171359,-0.190167,9.976768],[1.739517,-5.567029,-2.649186],[3.993936,3.591623,3.744753],[-7.765002,-9.360867,5.520972],[-5.987391,-1.414776,8.654125],[3.968108,4.908575,7.336857],[-6.572785,9.822014,-8.903428],[-2.943625,-6.437241,-4.432006],[-4.746218,9.470513,5.564158],[-2.029437,-8.724366,-3.657522],[5.490731,-2.939479,3.094926],[7.769250,-2.725290,1.683968],[6.793142,-2.117836,1.479264],[5.808425,3.226057,-8.570051],[4.143413,0.857506,1.336815],[-2.555695,5.078625,0.458583],[-2.641297,-4.216638,-7.058750],[-3.269244,8.221037,9.139487],[5.301404,4.811131,0.220538],[4.092555,-3.973171,-3.816947],[-2.871326,-2.144851,6.112853],[6.396948,2.375379,-1.630526],[0.158310,4.200460,9.563076],[1.256794,3.907661,-6.629034],[-2.025721,-4.027204,-2.266050],[-5.604781,3.915016,-2.195300],[0.983356,-6.890422,-5.247604],[-4.410460,3.507610,-9.465329],[-0.331622,-0.783436,-0.531641],[7.961282,-0.559633,5.267404],[-6.815634,-4.351283,4.100638],[2.887929,-5.185352,3.150266],[-2.642293,-7.559628,5.191208],[4.341229,-9.767178,7.002055],[-7.532212,6.134470,-0.648633],[5.964991,-3.019248,-1.038356],[-2.203003,-6.804811,-6.142702],[8.336025,4.197594,-7.637148],[9.276592,3.051482,1.943735],[-5.854737,5.222775,6.013331],[6.483726,-2.917872,-4.164013],[0.158404,-7.143689,5.000275],[9.944279,-3.139207,-6.430358],[8.696444,-3.575234,7.566380],[4.613252,2.850833,7.350705],[3.445239,6.593968,-7.397416],[-4.108100,-8.865542,-2.080713],[9.088122,0.278118,-1.354692],[6.981786,5.951721,-6.906639],[9.758630,-0.461850,-9.568413],[9.450440,-0.060024,-1.433494],[-1.796216,-1.998398,1.927918],[-2.835069,-5.001352,-8.505281],[4.084648,-0.247948,8.087586],[3.889949,9.532543,0.974579],[5.856273,0.435130,0.598572],[7.135550,-3.077483,0.035143],[-0.455300,3.006679,2.126948],[9.813275,9.704001,3.808051],[3.709306,3.667869,-7.885597],[-3.247661,-9.910316,-6.464644],[7.184919,7.223664,8.496469],[-2.296465,2.185708,3.486490],[9.252506,0.161180,-0.930825],[-3.466962,-5.630671,-0.915826],[-3.235564,-5.139214,-4.458199],[6.563522,-3.655711,-6.211351],[3.672228,7.763357,-1.827478],[0.425147,-1.092366,-3.560320],[1.527527,-4.621774,-8.954114],[-1.141459,4.405607,8.779753],[9.003187,-4.921358,-9.201218],[-6.793066,9.051332,-6.444143],[-6.990089,9.493429,-0.089691],[3.894612,-5.814949,9.856118],[9.869594,-1.758066,0.470275],[-2.072259,-6.345625,-3.811878],[4.147116,-2.721841,8.295692],[-0.863354,-1.954960,-7.550599],[0.222590,-9.504038,8.979059],[6.272858,5.657775,0.333229],[9.776807,-8.854210,-2.069197],[-8.468200,1.250464,-4.130003],[5.031465,-8.607025,0.644214],[0.137607,-7.714491,-7.965307],[1.816448,-5.077558,7.582753],[0.516281,-0.207195,-9.309577],[9.081012,-6.996556,0.135211],[3.557616,-5.151596,-1.242282],[-3.107809,-9.567807,9.659537],[-1.697197,-6.596825,-5.055970],[-8.427121,7.055691,6.073536],[-2.267536,-1.002093,0.419687],[7.804707,6.409494,-2.603554],[8.862308,2.749212,7.773518],[4.508743,4.844890,4.927435],[3.750830,-5.451897,-1.832298],[0.547703,-2.023960,5.048461],[6.494804,-0.081420,-0.300757],[9.628920,9.423477,-5.936500],[0.984759,-3.603423,2.993236],[-4.829265,4.066053,0.586175],[-2.408579,-8.262983,5.080055],[-2.253435,7.560525,6.957197],[4.392426,8.899638,7.895360],[-4.781575,7.231271,0.797840],[-4.327522,-2.651889,-8.602317],[0.894344,-2.901975,0.774859],[1.553458,-9.632586,-0.533096],[1.136341,-2.958228,-2.249406],[-8.673420,2.796722,8.051587],[-9.505722,-1.090101,-8.806245],[4.219443,-4.233241,5.403610],[9.895971,1.307490,6.631569],[4.379958,-6.940054,-5.782227],[8.368924,6.151331,-9.961364],[9.267834,-8.869316,1.923019],[5.638275,-8.815335,-3.528735],[2.975124,-0.194394,-3.831250],[4.263657,-8.089806,4.668565],[-6.344677,0.526124,0.752887],[7.516699,6.570907,4.787800],[-3.971967,7.853936,-8.703768],[-0.707903,8.362791,-5.542263],[4.456702,8.628896,2.647599],[-5.487695,3.874303,6.243270],[5.376416,2.779606,-7.306726],[-5.244480,0.915104,0.632567],[7.374753,-1.456680,7.569034],[-4.679862,-8.506322,-4.737517],[2.732988,6.632885,5.824108],[4.045214,0.384797,6.168825],[3.043350,-6.309985,9.582127],[-3.671393,-4.965189,2.599620],[-2.067846,-4.288564,5.756211],[-6.073214,9.415696,1.521589],[9.386870,2.411446,6.242573],[-2.033475,-1.563196,-8.289504],[2.573461,1.550081,4.917498],[2.590415,-0.712108,-7.067867],[-2.648170,-7.354456,-5.385407],[-9.770732,3.411994,7.003748],[-2.104284,9.392263,-1.924705],[-3.125315,6.879468,1.300535],[-3.066507,-6.076952,-6.340110],[-8.480326,4.117653,-3.597605],[-7.527070,4.400423,2.435826],[1.024306,1.189544,-0.239715],[-8.123539,8.903390,-2.151615],[-2.350094,4.373026,-0.394056],[1.791376,-5.233105,7.868305],[-1.814004,-5.769611,9.793371],[-1.543552,5.474924,-0.159075],[-1.883451,6.165185,-9.809401],[-7.883671,-9.443510,2.611339],[-3.806266,-2.704215,4.658663],[5.449599,1.941182,-3.371042],[0.632989,3.427488,-9.854766],[1.288397,-4.093565,-7.287939],[-9.861545,0.564156,-8.692556],[4.365719,4.504111,3.342765],[-7.446853,4.576077,-2.117771],[-4.963559,-9.473207,3.198888],[7.929723,6.156002,1.576872],[-6.516076,7.942091,-5.549429],[-0.219648,-7.454224,3.088432],[3.052055,-5.517467,-5.821798],[-7.991514,5.570806,-1.812815],[4.212279,6.853426,-3.679007],[-6.342439,-4.348414,-6.464027],[2.070889,0.907577,4.704583],[5.080581,-3.305327,4.777227],[9.515554,6.937206,-8.976695],[6.901718,-3.226570,8.022974],[5.644128,2.990622,9.162047],[-2.521829,4.659924,-2.527229]], dtype = "float64")#candidate|12984|(231, 3)|const|float64
call_12983 = func_7212_call(relay.reshape(const_12984.astype('float64'), [9, 7, 11]))
call_12985 = func_7212_call(relay.reshape(const_12984.astype('float64'), [9, 7, 11]))
output = relay.Tuple([bop_12968,call_12983,const_12984,])
output2 = relay.Tuple([bop_12968,call_12985,const_12984,])
func_12986 = relay.Function([var_12967,], output)
mod['func_12986'] = func_12986
mod = relay.transform.InferType()(mod)
mutated_mod['func_12986'] = func_12986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12987 = relay.var("var_12987", dtype = "bool", shape = (5, 3, 14))#candidate|12987|(5, 3, 14)|var|bool
func_12986_call = mutated_mod.get_global_var('func_12986')
call_12988 = func_12986_call(var_12987)
output = call_12988
func_12989 = relay.Function([var_12987], output)
mutated_mod['func_12989'] = func_12989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8940_call = mod.get_global_var('func_8940')
func_8942_call = mutated_mod.get_global_var('func_8942')
call_13025 = func_8940_call()
call_13026 = func_8940_call()
func_8095_call = mod.get_global_var('func_8095')
func_8096_call = mutated_mod.get_global_var('func_8096')
call_13027 = func_8095_call()
call_13028 = func_8095_call()
output = relay.Tuple([call_13025,call_13027,])
output2 = relay.Tuple([call_13026,call_13028,])
func_13034 = relay.Function([], output)
mod['func_13034'] = func_13034
mod = relay.transform.InferType()(mod)
mutated_mod['func_13034'] = func_13034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13034_call = mutated_mod.get_global_var('func_13034')
call_13035 = func_13034_call()
output = call_13035
func_13036 = relay.Function([], output)
mutated_mod['func_13036'] = func_13036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7264_call = mod.get_global_var('func_7264')
func_7265_call = mutated_mod.get_global_var('func_7265')
call_13093 = func_7264_call()
call_13094 = func_7264_call()
output = relay.Tuple([call_13093,])
output2 = relay.Tuple([call_13094,])
func_13099 = relay.Function([], output)
mod['func_13099'] = func_13099
mod = relay.transform.InferType()(mod)
mutated_mod['func_13099'] = func_13099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13099_call = mutated_mod.get_global_var('func_13099')
call_13100 = func_13099_call()
output = call_13100
func_13101 = relay.Function([], output)
mutated_mod['func_13101'] = func_13101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11221_call = mod.get_global_var('func_11221')
func_11222_call = mutated_mod.get_global_var('func_11222')
call_13133 = func_11221_call()
call_13134 = func_11221_call()
output = call_13133
output2 = call_13134
func_13138 = relay.Function([], output)
mod['func_13138'] = func_13138
mod = relay.transform.InferType()(mod)
mutated_mod['func_13138'] = func_13138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13138_call = mutated_mod.get_global_var('func_13138')
call_13139 = func_13138_call()
output = call_13139
func_13140 = relay.Function([], output)
mutated_mod['func_13140'] = func_13140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10234_call = mod.get_global_var('func_10234')
func_10235_call = mutated_mod.get_global_var('func_10235')
call_13141 = relay.TupleGetItem(func_10234_call(), 0)
call_13142 = relay.TupleGetItem(func_10235_call(), 0)
func_7798_call = mod.get_global_var('func_7798')
func_7802_call = mutated_mod.get_global_var('func_7802')
var_13145 = relay.var("var_13145", dtype = "bool", shape = (336,))#candidate|13145|(336,)|var|bool
const_13146 = relay.const([-7.913614,-8.200302,4.473695,-8.810441,7.715522,-3.415777], dtype = "float64")#candidate|13146|(6,)|const|float64
call_13144 = relay.TupleGetItem(func_7798_call(relay.reshape(var_13145.astype('bool'), [14, 8, 3]), relay.reshape(const_13146.astype('float64'), [6,]), ), 1)
call_13147 = relay.TupleGetItem(func_7802_call(relay.reshape(var_13145.astype('bool'), [14, 8, 3]), relay.reshape(const_13146.astype('float64'), [6,]), ), 1)
func_8704_call = mod.get_global_var('func_8704')
func_8709_call = mutated_mod.get_global_var('func_8709')
const_13151 = relay.const([[-7,-8,-4,-4,3,-8,9,7,7,-9,-8,-3,7,-1,-7,-6,9,-1,-1,5,-2,10,-2,-5,7,-8,-8,-3,6,-6,8,-9,-6,-3,5,2,-10,-1,9,1,-2,3,9,-7,-2,10,-4,9,9,-8,-10,4,-3,4,10,2,-4,4,-10,10,3,-4,-1,9,-6,4,9,8,10,-8,9,2,4,9,-6,-8,1,8,-6,1,7,-8,3,10,7,-6,9,-2,-6,7,-1,1,-8,3,-9,5,-10,-2],[-8,8,10,4,4,2,-6,-1,5,-9,4,-6,6,7,-2,-9,-1,8,3,-3,-7,-6,-6,-9,1,-4,10,8,-1,4,-3,-6,1,8,-5,2,7,-2,-7,2,9,-2,5,-8,4,2,6,4,1,3,4,-5,-3,4,7,7,1,8,-9,4,8,-3,-3,4,-8,7,2,2,10,7,-1,5,4,-2,2,8,-4,-6,7,-1,7,-8,-2,6,8,9,-8,3,-2,8,-3,-5,9,-5,1,3,8,1],[-4,3,-2,1,-9,-3,1,2,-10,-2,8,7,-7,-1,2,6,9,-5,-10,-1,1,9,-7,-6,9,8,-7,-1,5,-9,4,-2,3,-5,4,-3,4,-8,4,-10,2,-10,-4,5,-3,-6,-10,-3,6,7,6,6,3,-10,8,9,9,10,2,-1,-10,3,5,-4,-4,10,10,-7,-8,9,9,5,-7,1,2,4,1,1,-3,-7,-5,-6,-1,-9,4,-6,-8,-10,7,4,-7,1,-8,-6,-9,-2,9,1],[-3,-10,10,9,-6,3,-2,3,7,-7,-8,10,5,-2,-7,4,-3,6,-10,-3,6,2,-3,9,-8,-7,-1,-4,8,-1,-8,7,-1,7,10,2,6,-5,-8,8,-3,2,3,-8,-1,6,-6,-1,7,-2,7,-4,5,-1,4,-9,-8,10,-9,2,9,-9,10,4,9,-4,-8,-1,-8,8,-6,10,9,5,10,10,-5,6,1,3,-6,8,7,-8,4,10,4,3,-2,3,-6,-3,4,-6,-9,-4,-10,-6],[-4,6,2,-5,8,2,-6,3,-10,1,-6,-8,8,8,6,6,10,-5,8,9,-10,5,5,-6,-4,8,7,-3,-10,4,-4,-4,-2,5,3,-5,4,-6,8,4,2,10,-8,4,-1,-3,-9,-9,8,-3,9,-3,-8,2,3,-7,-7,-4,-9,4,7,7,4,8,-2,-4,-9,-6,6,-2,-5,3,6,-1,-6,-7,10,-10,9,-6,-1,4,7,-6,9,1,-10,7,4,1,3,-4,1,7,1,3,-6,-1],[-6,-4,-8,-8,-1,-4,-5,6,4,-10,1,-7,3,-6,6,1,-6,-6,2,-3,-2,-8,2,6,-2,-1,8,-9,7,-9,3,-4,5,-3,7,-7,-3,-10,1,-10,-4,7,-8,-2,-4,-7,-1,7,-4,-2,-8,-4,6,-7,9,9,10,-5,6,5,-8,-6,5,4,6,4,5,-5,9,-9,9,4,-5,8,-8,-9,5,-7,1,-4,9,10,-4,-6,-9,3,-2,7,-8,7,10,-2,3,7,-3,10,-9,-6],[7,7,-7,-6,-7,-6,-10,1,-1,6,4,-8,4,-9,-2,5,-8,-7,-5,4,6,9,3,5,-4,-7,-4,-5,5,-3,-8,-6,3,1,-4,1,5,5,9,1,5,-2,-3,9,-9,-4,-3,3,-4,7,9,8,-8,-9,7,2,8,-10,1,6,4,-8,10,6,-6,-2,10,7,4,-9,-8,4,-7,6,6,9,-1,10,8,5,-8,9,8,-8,-3,-7,7,6,8,3,3,-7,-9,-8,-10,1,4,7],[-5,6,1,-9,-5,-4,7,8,-7,6,9,-3,9,-8,-5,4,-10,-7,4,-7,3,1,-9,1,3,4,-1,2,2,-2,-6,8,-7,-5,3,9,5,5,10,-2,3,-6,2,4,-9,-2,7,9,4,-6,-7,-4,-6,6,5,10,1,-2,-5,10,7,6,-3,7,-10,6,-7,-8,9,10,2,-4,7,8,4,-3,-2,-2,-6,2,-1,3,-1,4,5,-6,5,9,-5,3,5,-10,-7,-1,3,-10,4,-6]], dtype = "uint16")#candidate|13151|(8, 98)|const|uint16
var_13152 = relay.var("var_13152", dtype = "float32", shape = (2, 264))#candidate|13152|(2, 264)|var|float32
call_13150 = relay.TupleGetItem(func_8704_call(relay.reshape(const_13151.astype('uint16'), [7, 14, 8]), relay.reshape(var_13152.astype('float32'), [528,]), relay.reshape(call_13144.astype('float64'), [1568,]), relay.reshape(const_13146.astype('float64'), [1, 6]), ), 3)
call_13153 = relay.TupleGetItem(func_8709_call(relay.reshape(const_13151.astype('uint16'), [7, 14, 8]), relay.reshape(var_13152.astype('float32'), [528,]), relay.reshape(call_13144.astype('float64'), [1568,]), relay.reshape(const_13146.astype('float64'), [1, 6]), ), 3)
output = relay.Tuple([call_13141,call_13144,var_13145,const_13146,call_13150,const_13151,var_13152,])
output2 = relay.Tuple([call_13142,call_13147,var_13145,const_13146,call_13153,const_13151,var_13152,])
func_13154 = relay.Function([var_13145,var_13152,], output)
mod['func_13154'] = func_13154
mod = relay.transform.InferType()(mod)
mutated_mod['func_13154'] = func_13154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13154_call = mutated_mod.get_global_var('func_13154')
var_13156 = relay.var("var_13156", dtype = "bool", shape = (336,))#candidate|13156|(336,)|var|bool
var_13157 = relay.var("var_13157", dtype = "float32", shape = (2, 264))#candidate|13157|(2, 264)|var|float32
call_13155 = func_13154_call(var_13156,var_13157,)
output = call_13155
func_13158 = relay.Function([var_13156,var_13157,], output)
mutated_mod['func_13158'] = func_13158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10074_call = mod.get_global_var('func_10074')
func_10076_call = mutated_mod.get_global_var('func_10076')
call_13225 = relay.TupleGetItem(func_10074_call(), 0)
call_13226 = relay.TupleGetItem(func_10076_call(), 0)
func_12519_call = mod.get_global_var('func_12519')
func_12522_call = mutated_mod.get_global_var('func_12522')
const_13229 = relay.const([-9.213150,3.671167,-9.001562,-1.864716,1.753896,-4.625005,2.759363,-8.497601,9.835994,-5.361219,3.921955,6.736214,2.132397,4.949467,6.490552,-6.704399,-6.112686,-2.747119,-3.316505,2.454681,-9.315662,4.013263,-9.698430,-9.494992,0.956671,7.119918,8.904324,-0.810733,-7.025045,-2.705141,5.774678,6.819140,-0.942943,-4.686980,7.096142,-8.694301,6.294557,9.471186,-2.603337,-8.785868,-2.101836,-3.302792,-5.257631,-6.820239,-0.888470,6.821525,0.470899,-3.402448,-9.155570,1.202319,-5.918620,6.151588,0.476602,-9.891975,1.451239,3.904863,-1.613541,2.036408,-0.243747,7.876994,-3.335080,-7.993780,-2.552800,3.744525,-7.310881,-0.461919,3.605980,-6.233995,-8.227562,-1.883420,0.048333,8.242657,0.390454,7.395962,4.578030,-4.657839,7.981528,4.918013,7.697858,-0.866018,0.426441,6.714391,-3.561533,9.626142,-6.417938,-5.104426,-2.231454,6.192591,0.132137,7.086622,6.972859,-6.289119,0.022323,-0.450797,6.687290,-4.843402,8.777119,1.129295,2.341600,-0.578900,-3.281978,-1.293023,6.378236,-5.569825,-4.642297,9.800668,5.825993,-5.100269,9.694447,-0.726304,1.615240,-9.968905,-9.463650,-4.386916,-5.918121,0.431290,-5.450532,7.317202,1.428506,-2.635058,-2.621357,0.755219,5.041855,-8.123906,7.311091,5.854300,8.601448,8.524598,3.648862,6.484018,4.319448,-7.676577,-6.724074,2.894896,2.154024,7.015679,7.341338,-6.874854,-3.320941,0.926749,0.663489,-6.482041,-8.598594,-4.442355,-7.526319,-5.913902,-2.789101,8.585660,-1.137679,-1.518816,-1.588993,1.427224,-9.387130,-5.123929,-5.847583,-0.970818,5.109066,-5.722123,3.660408,2.891565,9.466221,7.876362,1.253185,-5.758940,5.916305,8.832516,9.099681,7.141841,-8.938683,-8.627320,5.779994,-4.544822,-1.112804,3.246404,4.171161,0.371819,-2.671403,-8.724835,2.602933,0.216986,6.691407,-7.145827,-3.868246,6.725952,4.599893,3.219142,-5.413769,8.018250,3.670003,-3.397230,-5.353950,1.183613,-5.672656,-2.753847,-1.419024,-7.389441,-9.717428,-7.692666,-2.622638,-1.378656,-5.511474,2.203813,3.755339,0.276335,3.369761,-1.849955,4.492869,-9.096886,2.750768,2.978366,-0.468470,-1.122613,-6.406873,0.243202,-7.458603,-8.336537,-9.696756,6.978706,7.724475,-6.273410,1.136492,-3.107502,-0.516775,-5.393719,3.400427,3.158178,-7.041121,-7.348212,2.007653,6.433743,9.197864,-4.778555,1.256489,-0.870807,-9.988872,1.301742,9.997970,-2.841457,-4.443781,5.362429,-8.547278,-0.270664,-2.094165,4.376808,-5.140432,5.383374,-0.748846,3.065778,-0.027366,-1.628968,-2.224594,-2.393686,3.593297,2.785801,6.815341,7.706775,-9.336307,-5.039590,1.698234,-1.257007,2.645799,2.826458,0.607998,2.495989,-3.124589,-1.402048,-4.372279,-7.436445,6.777178,5.779624,0.159881,-2.528217,-1.478099,-8.655755,-3.461289,-7.127255,7.566142,0.852387,-0.686597,-0.215019,9.751524,-9.890748,4.863441,1.827851,-9.966840,8.977004,-3.741668,1.214336,2.020402,-5.226662,-4.943759,7.294911,-7.982113,-1.072043,6.207579,-7.678972,7.588141,-6.067747,5.032579,3.899781,5.967216,4.062993,-5.934415,-4.725750,9.026901,0.417634,7.545869,9.296071,-3.021557,8.324687,-4.009722,-2.724550,-7.243701,-3.402702,-8.173641,5.212244,-0.843580,9.760052,-2.165309,-1.778911,-4.197539,4.257245,-1.525418,-3.321877,8.703632,7.919023,4.077256,7.679463,-5.392984,9.889143,-6.992882,-0.856870,-3.487276,4.332478,-7.509666,-8.608781,-2.997960,-3.192605,-6.681311,9.435309,-2.491534,4.175021,-7.878761,8.112526,-4.387902,2.256050,-9.505924,0.601562,-1.304629,1.250488,8.247326,8.489883,2.825027,-0.540679,-9.734867,4.513271,-6.680916,-8.219535,-2.776199,-5.457492,5.257215,1.362371,8.095623,-7.743774,0.110026,-2.997372,9.041142,-4.840664,-2.630795,-1.335650,-4.323429,1.378262,-7.575757,7.524997,-8.548909,5.868250,-2.221401,8.739672,5.354146,1.807473,5.202515,2.309023,7.639539,6.646353,2.709580,2.846663,-6.072454,-5.799324,-7.757781,7.311681,7.923374,-9.610603,2.179372,-9.252510,7.620902,4.683422,3.570289,4.430452,9.311208,-6.350631,-7.802573,-0.320073,5.036920,7.788993,3.719405,-0.686659,8.928878,-2.640130,-1.876697,-9.270854,-8.420592,-0.870437,-0.629750,-0.525716,-1.923822,-5.468826,-0.415003,3.239832,-6.158355,-2.901412,4.861548,-2.078461,6.409584,9.700143,4.072035,-2.206711,-7.483401,-7.579657,-2.164102,-4.861404,8.568903,-0.001373,7.082851,9.169597,-2.818883,6.291420,-8.879563,3.468905,-4.192535,2.908044,-8.334021,8.584014,-2.203838,8.150467,9.721025,-3.594096,6.561046,-8.543367,-2.380864,-5.082584,2.249578,3.994037,8.829621,-7.990219,4.299237,-0.450475,2.266586,-7.891103,3.625158,-2.323482,3.709288,1.858027,7.562094,-0.068296,-1.828706,4.949793,-5.337708,9.335525,8.594327,-6.825337,-3.997529,-0.070850,-1.024532,0.435269,-5.833857,-4.459892,-1.010771,-4.935409,-7.886260,-0.900720,2.948512,-0.586524,-2.764888,-9.334780,4.286527,-9.556859,7.702369,5.844699,-8.550041,9.083174,3.652940,-1.949216,2.184734,5.159363,3.500611,-9.626268,7.659031,1.999085,8.238288,3.895682,-6.778361,-9.010978,-8.067667,4.804089,-9.244255,-2.818692,9.930949,-2.693496,5.881662,-9.859542,7.770673,-2.100645,3.422259,-9.504732,2.345992,-9.908242,9.105301,9.711460,-9.541093,-4.947487,4.345282,-2.589326,-1.501763,6.015748,1.238291,-9.872230,5.972370,4.429127,-6.498985,1.593916,-1.818174,4.815238,-0.184773,8.841597,-6.704239,0.195835,-2.475362,-7.266558,-2.103769,5.400562,3.270277,-2.695317,-1.973512,9.731384,0.684350,-0.358270,-8.385821,-6.976017,-6.450647,-2.914079,1.893537,-0.604781,2.958655,-6.558870,-2.640887,7.388320,-6.211516,-8.934627,-8.638982,8.336941,-7.649983,0.601957,-2.834747,0.369010,7.441155,3.939559,-2.326434,8.044983,-7.204926,4.946542,9.185178,-1.114454,1.986444,-8.958465,-9.361587,1.100291,6.545872,-2.805881,-2.037832,-0.901526,3.857186,8.731110,8.382004,1.066335,-0.042487,-7.887470,-5.538221,2.856269,-8.033396,6.423947,-4.411200,0.613835,5.665977,0.835864,-5.464507,5.812325,3.394923,5.476708,4.058205,-6.336099,1.271808,0.801490,6.609230,0.363181,-9.454301,-0.690336,-7.168251,-9.011013,8.760004,7.003995,4.759537,3.414903,0.008466,8.614740,-9.962514,9.124450,4.732354,9.272653,2.171157,-2.671203,3.672167,-7.952843,-2.857687,2.422704,-1.373914,3.396915,2.832118,-4.460038,3.837573,-0.217354,2.414769,-1.401960,-8.783472,1.349816,-7.628366,-8.615189,8.914618,5.866691,9.893987,8.625889,-8.972830,-7.771344,-5.520060,-1.143649,-9.671518,0.986382,-7.699043,-0.941456,8.680432,3.484949,1.308661,1.738399,-0.594063,1.956256,0.130284,-7.793516,1.579917,8.014772,6.489996,-7.865647,-6.700826,-1.107014,0.838125,-7.520072,-0.144809,-8.461106,2.643126,-4.025990,0.001484,7.474975,7.230147,-5.196203,-5.296662,-1.549621,1.587589,-1.930010,-9.170061,5.816777,1.366524,-7.382556,6.811732,-7.288507,-7.054503,-2.200070,-6.473678,-5.653457,6.174166,-3.978653,-1.728120,-8.257725,4.201139,-0.578403,1.355896], dtype = "float64")#candidate|13229|(693,)|const|float64
call_13228 = relay.TupleGetItem(func_12519_call(relay.reshape(const_13229.astype('float64'), [9, 7, 11])), 2)
call_13230 = relay.TupleGetItem(func_12522_call(relay.reshape(const_13229.astype('float64'), [9, 7, 11])), 2)
func_8674_call = mod.get_global_var('func_8674')
func_8677_call = mutated_mod.get_global_var('func_8677')
var_13245 = relay.var("var_13245", dtype = "uint16", shape = (468,))#candidate|13245|(468,)|var|uint16
call_13244 = relay.TupleGetItem(func_8674_call(relay.reshape(var_13245.astype('uint16'), [3, 156])), 0)
call_13246 = relay.TupleGetItem(func_8677_call(relay.reshape(var_13245.astype('uint16'), [3, 156])), 0)
func_3824_call = mod.get_global_var('func_3824')
func_3826_call = mutated_mod.get_global_var('func_3826')
var_13280 = relay.var("var_13280", dtype = "float64", shape = (2016,))#candidate|13280|(2016,)|var|float64
call_13279 = func_3824_call(relay.reshape(var_13280.astype('float64'), [16, 14, 9]))
call_13281 = func_3824_call(relay.reshape(var_13280.astype('float64'), [16, 14, 9]))
func_12986_call = mod.get_global_var('func_12986')
func_12989_call = mutated_mod.get_global_var('func_12989')
var_13287 = relay.var("var_13287", dtype = "bool", shape = (210,))#candidate|13287|(210,)|var|bool
call_13286 = relay.TupleGetItem(func_12986_call(relay.reshape(var_13287.astype('bool'), [5, 3, 14])), 2)
call_13288 = relay.TupleGetItem(func_12989_call(relay.reshape(var_13287.astype('bool'), [5, 3, 14])), 2)
output = relay.Tuple([call_13225,call_13228,const_13229,call_13244,var_13245,call_13279,var_13280,call_13286,var_13287,])
output2 = relay.Tuple([call_13226,call_13230,const_13229,call_13246,var_13245,call_13281,var_13280,call_13288,var_13287,])
func_13302 = relay.Function([var_13245,var_13280,var_13287,], output)
mod['func_13302'] = func_13302
mod = relay.transform.InferType()(mod)
mutated_mod['func_13302'] = func_13302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13302_call = mutated_mod.get_global_var('func_13302')
var_13304 = relay.var("var_13304", dtype = "uint16", shape = (468,))#candidate|13304|(468,)|var|uint16
var_13305 = relay.var("var_13305", dtype = "float64", shape = (2016,))#candidate|13305|(2016,)|var|float64
var_13306 = relay.var("var_13306", dtype = "bool", shape = (210,))#candidate|13306|(210,)|var|bool
call_13303 = func_13302_call(var_13304,var_13305,var_13306,)
output = call_13303
func_13307 = relay.Function([var_13304,var_13305,var_13306,], output)
mutated_mod['func_13307'] = func_13307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13099_call = mod.get_global_var('func_13099')
func_13101_call = mutated_mod.get_global_var('func_13101')
call_13355 = relay.TupleGetItem(func_13099_call(), 0)
call_13356 = relay.TupleGetItem(func_13101_call(), 0)
func_6570_call = mod.get_global_var('func_6570')
func_6572_call = mutated_mod.get_global_var('func_6572')
const_13381 = relay.const([-1.019280,6.251509,-1.738831,-9.511510,3.116185,-5.837802], dtype = "float64")#candidate|13381|(6,)|const|float64
call_13380 = relay.TupleGetItem(func_6570_call(relay.reshape(const_13381.astype('float64'), [6,])), 0)
call_13382 = relay.TupleGetItem(func_6572_call(relay.reshape(const_13381.astype('float64'), [6,])), 0)
output = relay.Tuple([call_13355,call_13380,const_13381,])
output2 = relay.Tuple([call_13356,call_13382,const_13381,])
func_13385 = relay.Function([], output)
mod['func_13385'] = func_13385
mod = relay.transform.InferType()(mod)
mutated_mod['func_13385'] = func_13385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13385_call = mutated_mod.get_global_var('func_13385')
call_13386 = func_13385_call()
output = call_13386
func_13387 = relay.Function([], output)
mutated_mod['func_13387'] = func_13387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11953_call = mod.get_global_var('func_11953')
func_11955_call = mutated_mod.get_global_var('func_11955')
call_13426 = func_11953_call()
call_13427 = func_11953_call()
func_7798_call = mod.get_global_var('func_7798')
func_7802_call = mutated_mod.get_global_var('func_7802')
const_13434 = relay.const([True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False], dtype = "bool")#candidate|13434|(336,)|const|bool
const_13435 = relay.const([-2.872075,-9.050591,-1.865100,-4.271768,2.993983,2.362146], dtype = "float64")#candidate|13435|(6,)|const|float64
call_13433 = relay.TupleGetItem(func_7798_call(relay.reshape(const_13434.astype('bool'), [14, 8, 3]), relay.reshape(const_13435.astype('float64'), [6,]), ), 2)
call_13436 = relay.TupleGetItem(func_7802_call(relay.reshape(const_13434.astype('bool'), [14, 8, 3]), relay.reshape(const_13435.astype('float64'), [6,]), ), 2)
output = relay.Tuple([call_13426,call_13433,const_13434,const_13435,])
output2 = relay.Tuple([call_13427,call_13436,const_13434,const_13435,])
func_13445 = relay.Function([], output)
mod['func_13445'] = func_13445
mod = relay.transform.InferType()(mod)
output = func_13445()
func_13446 = relay.Function([], output)
mutated_mod['func_13446'] = func_13446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5718_call = mod.get_global_var('func_5718')
func_5719_call = mutated_mod.get_global_var('func_5719')
call_13447 = relay.TupleGetItem(func_5718_call(), 2)
call_13448 = relay.TupleGetItem(func_5719_call(), 2)
output = call_13447
output2 = call_13448
func_13453 = relay.Function([], output)
mod['func_13453'] = func_13453
mod = relay.transform.InferType()(mod)
mutated_mod['func_13453'] = func_13453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13453_call = mutated_mod.get_global_var('func_13453')
call_13454 = func_13453_call()
output = call_13454
func_13455 = relay.Function([], output)
mutated_mod['func_13455'] = func_13455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8624_call = mod.get_global_var('func_8624')
func_8625_call = mutated_mod.get_global_var('func_8625')
call_13516 = func_8624_call()
call_13517 = func_8624_call()
output = call_13516
output2 = call_13517
func_13536 = relay.Function([], output)
mod['func_13536'] = func_13536
mod = relay.transform.InferType()(mod)
mutated_mod['func_13536'] = func_13536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13536_call = mutated_mod.get_global_var('func_13536')
call_13537 = func_13536_call()
output = call_13537
func_13538 = relay.Function([], output)
mutated_mod['func_13538'] = func_13538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11060_call = mod.get_global_var('func_11060')
func_11062_call = mutated_mod.get_global_var('func_11062')
call_13672 = relay.TupleGetItem(func_11060_call(), 0)
call_13673 = relay.TupleGetItem(func_11062_call(), 0)
output = relay.Tuple([call_13672,])
output2 = relay.Tuple([call_13673,])
func_13679 = relay.Function([], output)
mod['func_13679'] = func_13679
mod = relay.transform.InferType()(mod)
output = func_13679()
func_13680 = relay.Function([], output)
mutated_mod['func_13680'] = func_13680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9526_call = mod.get_global_var('func_9526')
func_9527_call = mutated_mod.get_global_var('func_9527')
call_13699 = relay.TupleGetItem(func_9526_call(), 0)
call_13700 = relay.TupleGetItem(func_9527_call(), 0)
uop_13704 = relay.erf(call_13699.astype('float32')) # shape=(9, 7, 11)
uop_13706 = relay.erf(call_13700.astype('float32')) # shape=(9, 7, 11)
func_13385_call = mod.get_global_var('func_13385')
func_13387_call = mutated_mod.get_global_var('func_13387')
call_13707 = relay.TupleGetItem(func_13385_call(), 2)
call_13708 = relay.TupleGetItem(func_13387_call(), 2)
output = relay.Tuple([uop_13704,call_13707,])
output2 = relay.Tuple([uop_13706,call_13708,])
func_13714 = relay.Function([], output)
mod['func_13714'] = func_13714
mod = relay.transform.InferType()(mod)
mutated_mod['func_13714'] = func_13714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13714_call = mutated_mod.get_global_var('func_13714')
call_13715 = func_13714_call()
output = call_13715
func_13716 = relay.Function([], output)
mutated_mod['func_13716'] = func_13716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13536_call = mod.get_global_var('func_13536')
func_13538_call = mutated_mod.get_global_var('func_13538')
call_13726 = func_13536_call()
call_13727 = func_13536_call()
func_5589_call = mod.get_global_var('func_5589')
func_5591_call = mutated_mod.get_global_var('func_5591')
var_13729 = relay.var("var_13729", dtype = "float64", shape = (7, 99))#candidate|13729|(7, 99)|var|float64
call_13728 = relay.TupleGetItem(func_5589_call(relay.reshape(var_13729.astype('float64'), [9, 7, 11])), 0)
call_13730 = relay.TupleGetItem(func_5591_call(relay.reshape(var_13729.astype('float64'), [9, 7, 11])), 0)
func_6851_call = mod.get_global_var('func_6851')
func_6852_call = mutated_mod.get_global_var('func_6852')
call_13732 = relay.TupleGetItem(func_6851_call(), 0)
call_13733 = relay.TupleGetItem(func_6852_call(), 0)
func_5343_call = mod.get_global_var('func_5343')
func_5345_call = mutated_mod.get_global_var('func_5345')
var_13745 = relay.var("var_13745", dtype = "float32", shape = (78, 1))#candidate|13745|(78, 1)|var|float32
call_13744 = func_5343_call(relay.reshape(var_13745.astype('float32'), [2, 13, 3]))
call_13746 = func_5343_call(relay.reshape(var_13745.astype('float32'), [2, 13, 3]))
bop_13758 = relay.less_equal(var_13729.astype('bool'), relay.reshape(call_13728.astype('bool'), relay.shape_of(var_13729))) # shape=(7, 99)
bop_13761 = relay.less_equal(var_13729.astype('bool'), relay.reshape(call_13730.astype('bool'), relay.shape_of(var_13729))) # shape=(7, 99)
output = relay.Tuple([call_13726,call_13732,call_13744,var_13745,bop_13758,])
output2 = relay.Tuple([call_13727,call_13733,call_13746,var_13745,bop_13761,])
func_13767 = relay.Function([var_13729,var_13745,], output)
mod['func_13767'] = func_13767
mod = relay.transform.InferType()(mod)
mutated_mod['func_13767'] = func_13767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13767_call = mutated_mod.get_global_var('func_13767')
var_13769 = relay.var("var_13769", dtype = "float64", shape = (7, 99))#candidate|13769|(7, 99)|var|float64
var_13770 = relay.var("var_13770", dtype = "float32", shape = (78, 1))#candidate|13770|(78, 1)|var|float32
call_13768 = func_13767_call(var_13769,var_13770,)
output = call_13768
func_13771 = relay.Function([var_13769,var_13770,], output)
mutated_mod['func_13771'] = func_13771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13714_call = mod.get_global_var('func_13714')
func_13716_call = mutated_mod.get_global_var('func_13716')
call_13814 = relay.TupleGetItem(func_13714_call(), 0)
call_13815 = relay.TupleGetItem(func_13716_call(), 0)
output = call_13814
output2 = call_13815
func_13840 = relay.Function([], output)
mod['func_13840'] = func_13840
mod = relay.transform.InferType()(mod)
output = func_13840()
func_13841 = relay.Function([], output)
mutated_mod['func_13841'] = func_13841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12663_call = mod.get_global_var('func_12663')
func_12665_call = mutated_mod.get_global_var('func_12665')
call_13847 = relay.TupleGetItem(func_12663_call(), 1)
call_13848 = relay.TupleGetItem(func_12665_call(), 1)
func_5589_call = mod.get_global_var('func_5589')
func_5591_call = mutated_mod.get_global_var('func_5591')
call_13857 = relay.TupleGetItem(func_5589_call(relay.reshape(call_13847.astype('float64'), [9, 7, 11])), 0)
call_13858 = relay.TupleGetItem(func_5591_call(relay.reshape(call_13847.astype('float64'), [9, 7, 11])), 0)
output = relay.Tuple([call_13847,call_13857,])
output2 = relay.Tuple([call_13848,call_13858,])
func_13862 = relay.Function([], output)
mod['func_13862'] = func_13862
mod = relay.transform.InferType()(mod)
mutated_mod['func_13862'] = func_13862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13862_call = mutated_mod.get_global_var('func_13862')
call_13863 = func_13862_call()
output = call_13863
func_13864 = relay.Function([], output)
mutated_mod['func_13864'] = func_13864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10154_call = mod.get_global_var('func_10154')
func_10156_call = mutated_mod.get_global_var('func_10156')
call_13871 = relay.TupleGetItem(func_10154_call(), 1)
call_13872 = relay.TupleGetItem(func_10156_call(), 1)
func_9545_call = mod.get_global_var('func_9545')
func_9547_call = mutated_mod.get_global_var('func_9547')
call_13885 = relay.TupleGetItem(func_9545_call(), 0)
call_13886 = relay.TupleGetItem(func_9547_call(), 0)
output = relay.Tuple([call_13871,call_13885,])
output2 = relay.Tuple([call_13872,call_13886,])
func_13899 = relay.Function([], output)
mod['func_13899'] = func_13899
mod = relay.transform.InferType()(mod)
mutated_mod['func_13899'] = func_13899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13899_call = mutated_mod.get_global_var('func_13899')
call_13900 = func_13899_call()
output = call_13900
func_13901 = relay.Function([], output)
mutated_mod['func_13901'] = func_13901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6992_call = mod.get_global_var('func_6992')
func_6993_call = mutated_mod.get_global_var('func_6993')
call_13915 = relay.TupleGetItem(func_6992_call(), 0)
call_13916 = relay.TupleGetItem(func_6993_call(), 0)
func_13714_call = mod.get_global_var('func_13714')
func_13716_call = mutated_mod.get_global_var('func_13716')
call_13918 = relay.TupleGetItem(func_13714_call(), 0)
call_13919 = relay.TupleGetItem(func_13716_call(), 0)
var_13929 = relay.var("var_13929", dtype = "bool", shape = (14, 8, 3))#candidate|13929|(14, 8, 3)|var|bool
bop_13930 = relay.mod(call_13915.astype('float32'), relay.reshape(var_13929.astype('float32'), relay.shape_of(call_13915))) # shape=(14, 8, 3)
bop_13933 = relay.mod(call_13916.astype('float32'), relay.reshape(var_13929.astype('float32'), relay.shape_of(call_13916))) # shape=(14, 8, 3)
func_6570_call = mod.get_global_var('func_6570')
func_6572_call = mutated_mod.get_global_var('func_6572')
var_13945 = relay.var("var_13945", dtype = "float64", shape = (6, 1))#candidate|13945|(6, 1)|var|float64
call_13944 = relay.TupleGetItem(func_6570_call(relay.reshape(var_13945.astype('float64'), [6,])), 0)
call_13946 = relay.TupleGetItem(func_6572_call(relay.reshape(var_13945.astype('float64'), [6,])), 0)
bop_13984 = relay.minimum(var_13929.astype('uint32'), relay.reshape(call_13915.astype('uint32'), relay.shape_of(var_13929))) # shape=(14, 8, 3)
bop_13987 = relay.minimum(var_13929.astype('uint32'), relay.reshape(call_13916.astype('uint32'), relay.shape_of(var_13929))) # shape=(14, 8, 3)
output = relay.Tuple([call_13918,bop_13930,call_13944,var_13945,bop_13984,])
output2 = relay.Tuple([call_13919,bop_13933,call_13946,var_13945,bop_13987,])
func_13988 = relay.Function([var_13929,var_13945,], output)
mod['func_13988'] = func_13988
mod = relay.transform.InferType()(mod)
var_13989 = relay.var("var_13989", dtype = "bool", shape = (14, 8, 3))#candidate|13989|(14, 8, 3)|var|bool
var_13990 = relay.var("var_13990", dtype = "float64", shape = (6, 1))#candidate|13990|(6, 1)|var|float64
output = func_13988(var_13989,var_13990,)
func_13991 = relay.Function([var_13989,var_13990,], output)
mutated_mod['func_13991'] = func_13991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6689_call = mod.get_global_var('func_6689')
func_6691_call = mutated_mod.get_global_var('func_6691')
call_14023 = relay.TupleGetItem(func_6689_call(), 2)
call_14024 = relay.TupleGetItem(func_6691_call(), 2)
output = relay.Tuple([call_14023,])
output2 = relay.Tuple([call_14024,])
func_14027 = relay.Function([], output)
mod['func_14027'] = func_14027
mod = relay.transform.InferType()(mod)
output = func_14027()
func_14028 = relay.Function([], output)
mutated_mod['func_14028'] = func_14028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6498_call = mod.get_global_var('func_6498')
func_6499_call = mutated_mod.get_global_var('func_6499')
call_14029 = relay.TupleGetItem(func_6498_call(), 1)
call_14030 = relay.TupleGetItem(func_6499_call(), 1)
output = relay.Tuple([call_14029,])
output2 = relay.Tuple([call_14030,])
func_14036 = relay.Function([], output)
mod['func_14036'] = func_14036
mod = relay.transform.InferType()(mod)
mutated_mod['func_14036'] = func_14036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14036_call = mutated_mod.get_global_var('func_14036')
call_14037 = func_14036_call()
output = call_14037
func_14038 = relay.Function([], output)
mutated_mod['func_14038'] = func_14038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_14104 = relay.TupleGetItem(func_6725_call(), 0)
call_14105 = relay.TupleGetItem(func_6727_call(), 0)
func_9638_call = mod.get_global_var('func_9638')
func_9641_call = mutated_mod.get_global_var('func_9641')
const_14139 = relay.const([-7.227967,4.921904,9.056395,-9.523692,-6.192420,6.772446,-8.365503,-0.623016,-3.780095,-4.435280,-5.812476,-0.773274,3.623813,5.485996,-8.490802,-1.960949,-4.897600,2.688625,4.455550,-3.737191,-5.483488,-3.864510,5.522684,-8.644339,8.282188,-3.017787,0.459809,5.559271,-2.298062,3.322143,-3.331717,-3.564622,8.320160,1.902091,9.343303,-5.024975,3.038728,-5.663205,4.464128,-8.628472,1.854570,-5.401642,0.696772,6.774968,-5.419274,3.606427,-8.621870,-7.916961,3.204229,0.737898,6.819045,-5.255648,-7.115716,-7.291182,-8.468159,-2.376176,8.790963,-9.896958,8.080572,-0.564435,-6.113250,-8.848589,6.489189,-1.920117,-1.590041,7.288825,2.903756,-9.651052,5.541087,6.116893,-0.995855,6.173810,-9.734202,-7.021633,-6.448856,6.497388,-6.690024,3.323642,-7.116155,6.846577,0.794651,9.038942,-3.545446,1.630879,-3.528573,2.097759,-7.948379,-9.763164,-4.493345,-4.544244,8.382772,6.264157,-0.613341,-4.878852,-3.039314,6.387494,-0.741715,-0.794193,7.356237,-8.576774,-9.437156,-4.503928,6.640768,9.263514,5.845190,-8.185726,-3.902797,7.299861,-2.661687,4.528857,9.123018,3.254003,4.964210,-3.049735,8.050532,-2.894633,6.849420,-0.911649,1.124274,-5.571424,-3.708149,-4.302228,9.223827,1.029104,7.476051,-9.370938,1.728051,-6.323393,-6.859899,7.882223,-5.977782,1.419622,-9.142779,-5.978921,-1.516410,4.291070,9.687578,5.267613,0.277598,-4.569622,3.911322,4.924423,-8.969600,-1.123397,-7.460517,-7.026408,0.835610,-7.837898,-2.550282,-8.822897,-7.938385,1.248840,3.282628,-1.196752,0.106341,8.367684,4.719125,9.979410,-3.786915,-9.241028,-5.678054,8.598269,6.932368,9.654283,-8.421600,-6.850640,4.480166,-7.003419,-5.756189,5.520124,-4.761304,-3.256421,7.041824,4.947251,5.361333,8.026908,4.724979,-6.400407,-8.170410,-0.119482,5.225576,3.407729,-0.984586,5.765194,-3.302137,-9.298161,1.071092,2.106018,-7.653846,-5.334828,-2.139126,0.526630,1.437930,-5.878966,-2.514237,-4.649420,4.441978,-4.305057,-6.638117,-8.276669,1.427061,8.407696,-2.316143,6.248811,7.428210,-2.424018,7.183046,4.024451,8.586244,4.595351,-8.344480,6.179705,7.377289,5.129742,3.090183,2.568980,-7.674841,3.526277,5.922713,-6.739508,7.376481,-5.605979,-2.210361,1.004753,-4.762759,9.659499,-7.610767,-9.503561,0.300866,0.043212,-1.820558,7.407185,8.885225,9.764100,0.344973,-0.351106,-8.784844,-1.797526,-7.914281,7.544607,-4.150950,-5.234927,3.452939,-7.947156,-9.300673,-8.052309,-7.576974,-3.585772,-8.292962,-8.237809,6.154302,-7.175644,-4.260600,-2.358577,-7.693363,1.847522,9.773933,-4.286653,-2.250606,9.591723,-0.972861,4.278549,9.926649,6.388774,6.730858,2.305625,-5.729771,2.644832,-0.506918,1.842041,4.935624,2.999840,-7.792793,5.529380,7.219508,-4.674498,-4.216807,-3.525505,9.987845,-3.840655,-8.834968,2.739563,2.379062,4.262022,-8.424139,0.798947,0.057109,-6.980530,-9.752443,-6.135737,-4.365577,6.869495,4.234371,-3.001755,3.731767,3.922814,5.916168,-9.070832,6.932567,-9.561106,1.097480,8.614762,9.473856,-5.386691,-1.720484,4.993698,5.448966,2.569912,-8.581834,2.547265,-8.525457,9.465686,6.336684,7.051524,5.233516,4.292227,7.352776,6.166941,-5.361609,-3.366872,2.898400,-9.053576,-6.563534,9.869985,2.132968,8.421657,8.802976,4.098573,-2.194458,-6.376782,4.364568,-4.315714,-4.198260,9.465618,-1.847627,4.504047,0.087556,-1.761802,-6.186717,-4.877334,4.677166,7.926472,4.764408,4.453265,9.907149,3.222839,7.101934,0.727353,-9.601159,8.009576,-4.505331,-7.362802,-2.951683,-4.148426,-3.417905,-3.892558,-9.270828,-5.836933,8.703847,8.284674,0.318978,4.526551,3.727130,7.858088,7.560596,-0.793262,3.448467,9.633196,1.653822,-8.332587,-0.015375,0.649435,7.527249,-3.240099,-5.517817,3.349177,9.779366,-5.155826,-2.391732,-5.346285,-9.917548,8.680427,8.011159,1.130696,-4.842119,-3.912138,1.248240,3.846124,8.410433,9.460343,-4.772310,-9.150833,6.692451,-0.108753,-0.586831,4.852553,1.631167,-0.548228,9.829470,1.967913,-7.279800,-3.163185,-2.352276,-3.756836,-2.637078,9.622206,-5.012222,-9.440116,-9.338667,0.338773,0.562126,-0.865644,-8.670620,8.911101,-3.520150,0.150157,-3.859230,-0.547247,-3.826908,-0.262690,-4.943268,1.407056,8.960372,-4.262476,-2.909275,-7.389980,-9.784670,-4.991790,-6.315623,-7.194524,-9.118304,6.446277,-2.368448,6.656343,-3.664161,4.928098,8.905044,7.316802,-6.229138,9.035451,-1.402858,-8.297364,-5.467424,6.898188,-8.371099,0.281576,8.375886,3.073978,4.682445,-8.854368,-4.807514,-5.434918,-8.127893,5.429117,-5.726514,2.626658,-6.822887,8.454892,-3.563231,7.501802,9.537177,-2.686445,4.586434,-8.607558,-0.816845,-8.877181,-2.472342,6.746950,4.964461,5.938580,4.178065,-3.655516,-3.452421,-9.421571,-2.074948,7.736809,-6.775324,-9.229443,9.490242,-8.221036,-5.126755,-9.231238,-2.229042,3.398027,-1.279603,0.886662,-0.318146,-7.130264,3.602516,6.404366,-4.243721,6.208513,-2.633161,2.119584,-0.253607,-7.529837,-2.415862,4.733775,-2.369344,-8.020373,6.882107,-8.332019,4.578631,-9.947225,9.683439,-3.413311,-6.275524,-8.056191,-3.699752,-3.365486,-5.112003,3.883442,-4.851114,9.691730,2.361403,0.901397,2.695424,-7.076166,-0.701272,5.520884,4.503343,-5.688964,-2.740890,-1.026595,-5.944542,8.972077,0.829638,5.779978,-5.909346,-5.409279,9.941318,-6.635221,7.627190,6.172719,-4.685150,0.465711,1.989625,3.057643,3.648226,-3.480155,6.479865,-6.806856,-0.175433,-8.609370,-4.203611,-3.791469,-1.747889,-1.026295,-7.859375,-7.884120,-8.179370,-7.144731,4.831343,1.497444,7.141003,-3.500213,-6.125290,-6.274819,-1.634397,0.954377,9.869397,-1.377384,-5.290713,-8.183548,5.983094,1.864533,-6.594625,0.857503,-7.035032,-0.236270,-8.426929,-8.299174,9.115896,8.943488,1.191011,-8.885454,-3.598851,-7.258783,8.882983,5.521896,7.045933,2.157684,-1.277976,1.870394,8.677592,0.771210,-1.757870,-7.158977,-3.844438,-6.714131,-0.912645,-4.158437,2.567086,-2.667848,1.057024,6.394922,-8.576029,7.999140,6.587156,9.280133,-4.664012,-5.635572,-0.362647,6.346527,-4.855015,-2.651910,-7.060468,-9.874334,-5.778094,1.761179,-4.489795,-7.964802,5.282200,-2.113430,0.486854,7.065190,-9.777574,-5.743851,1.258060,6.446613,0.054749,-2.279599,-2.318094,-0.615946,7.577474,7.472392,-0.213947,8.088367,6.004931,9.535921,7.448193,-1.864215,-9.496189,7.793477,-0.084935,-0.657679,-0.814013,-0.357011,5.130097,8.104420,-2.245745,-5.824698,8.050074,-6.007619,5.509412,4.747436,-8.923819,-9.216042,-9.950666,-8.338435,-1.690630,0.136677,-7.084978,-4.029650,-4.176781,-8.271865,-6.034775,5.831812,-8.814121,-4.489454,8.205056,0.820499,2.382185,5.590645,0.636614,2.496885,-6.876244,-1.130003,-5.331418,-9.035976,1.500643,8.694349,4.288643,0.122675,-3.795603,-2.105078,6.102826,6.542389,3.170456,-2.905195,7.436301,2.657409,-1.440107,-2.279587,-1.960066,6.348576,8.016737,9.630646,-4.988249,6.058174,-1.072642,-6.203581,3.721193,-2.459004,-4.389557,6.458632,-0.789812,9.415533,-0.977021,6.911895,-6.974388,-5.580218,7.689277,4.070012,-9.676478,-3.621046,-6.994081,-9.355002,6.528214,-0.927598,-4.514313,0.349755,-9.033797,3.884534,-1.731186,5.534624,-1.724916,-1.349594,9.446653,6.898109,-6.399899,-8.382081,-0.820182,-5.595445,-6.095027,-5.340363,-9.016044,0.208376,-9.742848,-0.485673,-6.563733,-2.640834,9.676567,-7.339899,-7.604223,7.368645,-1.597970,0.895880,-9.984610,-9.323959,-8.742253,9.652239,-1.781041,-4.158252,-8.358686,0.457161,-0.566779,1.500629,-1.973209,9.957196,9.233324,-7.692362,-8.421616,-4.412511,6.377122,9.190295,8.834355,0.885799,-0.414672,9.654885,-9.441991,0.892925,-5.626272,-8.079813,-8.405477,3.126387,-5.191379,5.049183,9.925409,-5.376410,-3.482596,-9.866446,-0.350701,6.715123,7.911729,4.914009,2.311991,6.029552,4.515822,6.726680,1.176929,0.775044,-0.170375,-5.212497,9.283089,-0.075238,2.180638,0.718271,-4.957706,-2.575843,7.106572,1.488127,-1.141586,-8.766808,5.158740,7.998732,-5.512939,-7.465075,-9.071764,-4.929457,3.392410,0.482269,-4.026884,4.125620,-3.530244,-7.983562,0.589480,-6.398879,-9.960246,-8.503782,-8.444396,-3.369028,-4.225909,6.718752,-1.943772,-1.709772,2.526627,-4.609834,4.463854,-9.450762,2.244416,4.074962,7.662368,-2.736268,3.356612,1.067584,-1.056152,-9.797434,-3.073912,5.783815,-3.219835,2.759007,-6.439828,6.765011,2.566411,8.831963,-5.790765,6.614184,-7.568500,-5.395915,-0.908628,-2.568587,1.489648,-3.546998,-3.898425,-4.107794,1.370067,-5.612598,9.712715,7.041548,-5.987089,5.159006,-5.671455,-4.565214,-8.164825,-7.182563,-4.787069,-9.928622,5.895761,4.121718,-5.003830,-2.656645,2.763507,0.103985,-2.203985,7.496380,4.592791,-4.482048,-9.248516,3.453676,3.755479,3.187775,-1.373542,2.021307,-7.260700,3.765258,1.055343,3.632507,7.034539,3.124234,6.431762,-6.093967,-2.639945,-0.262347,5.577227,3.588838,2.871956,-9.126428,-9.698377,-1.617909,-1.389685,-7.776379,2.235330,9.921708,-9.244727,4.673028,8.860918,3.364698,-8.255024,-2.636712,2.434254,-0.871171,8.604740,-8.464186,-5.018175,-0.485527,-7.451132,-2.033144,-5.324083,-4.571497,6.261767,3.845284,4.276611,-4.991445,-5.911249,8.644604,-9.658910,6.860152,-3.082031,-3.950973,-5.863718,-5.724942,8.854584,-7.917359,-2.642543,-5.074291,-8.095486,-1.370081,-5.099065,9.007670,-3.260322,-5.341450,-2.669672,-6.267217,1.096252,-4.038387,8.208090,0.741755,6.964455,5.089356,-3.934162,2.095703,1.434800,7.005050,-1.358069,-8.877869,2.106626,-7.955407,-3.733756,2.224643,4.129736,9.746860,-2.216172,7.059678,1.891477,8.619157,-5.502042,-6.155971,-7.138067,-0.435756], dtype = "float64")#candidate|14139|(960,)|const|float64
call_14138 = relay.TupleGetItem(func_9638_call(relay.reshape(const_14139.astype('float64'), [12, 5, 16])), 0)
call_14140 = relay.TupleGetItem(func_9641_call(relay.reshape(const_14139.astype('float64'), [12, 5, 16])), 0)
output = relay.Tuple([call_14104,call_14138,const_14139,])
output2 = relay.Tuple([call_14105,call_14140,const_14139,])
func_14148 = relay.Function([], output)
mod['func_14148'] = func_14148
mod = relay.transform.InferType()(mod)
mutated_mod['func_14148'] = func_14148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14148_call = mutated_mod.get_global_var('func_14148')
call_14149 = func_14148_call()
output = call_14149
func_14150 = relay.Function([], output)
mutated_mod['func_14150'] = func_14150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11221_call = mod.get_global_var('func_11221')
func_11222_call = mutated_mod.get_global_var('func_11222')
call_14210 = func_11221_call()
call_14211 = func_11221_call()
output = call_14210
output2 = call_14211
func_14212 = relay.Function([], output)
mod['func_14212'] = func_14212
mod = relay.transform.InferType()(mod)
output = func_14212()
func_14213 = relay.Function([], output)
mutated_mod['func_14213'] = func_14213
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14271 = relay.var("var_14271", dtype = "bool", shape = (6, 3, 6))#candidate|14271|(6, 3, 6)|var|bool
var_14272 = relay.var("var_14272", dtype = "bool", shape = (6, 3, 6))#candidate|14272|(6, 3, 6)|var|bool
bop_14273 = relay.logical_or(var_14271.astype('bool'), relay.reshape(var_14272.astype('bool'), relay.shape_of(var_14271))) # shape=(6, 3, 6)
output = relay.Tuple([bop_14273,])
output2 = relay.Tuple([bop_14273,])
func_14279 = relay.Function([var_14271,var_14272,], output)
mod['func_14279'] = func_14279
mod = relay.transform.InferType()(mod)
var_14280 = relay.var("var_14280", dtype = "bool", shape = (6, 3, 6))#candidate|14280|(6, 3, 6)|var|bool
var_14281 = relay.var("var_14281", dtype = "bool", shape = (6, 3, 6))#candidate|14281|(6, 3, 6)|var|bool
output = func_14279(var_14280,var_14281,)
func_14282 = relay.Function([var_14280,var_14281,], output)
mutated_mod['func_14282'] = func_14282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6055_call = mod.get_global_var('func_6055')
func_6056_call = mutated_mod.get_global_var('func_6056')
call_14313 = func_6055_call()
call_14314 = func_6055_call()
output = relay.Tuple([call_14313,])
output2 = relay.Tuple([call_14314,])
func_14315 = relay.Function([], output)
mod['func_14315'] = func_14315
mod = relay.transform.InferType()(mod)
output = func_14315()
func_14316 = relay.Function([], output)
mutated_mod['func_14316'] = func_14316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mod.get_global_var('func_6725')
func_6727_call = mutated_mod.get_global_var('func_6727')
call_14333 = relay.TupleGetItem(func_6725_call(), 0)
call_14334 = relay.TupleGetItem(func_6727_call(), 0)
output = relay.Tuple([call_14333,])
output2 = relay.Tuple([call_14334,])
func_14344 = relay.Function([], output)
mod['func_14344'] = func_14344
mod = relay.transform.InferType()(mod)
mutated_mod['func_14344'] = func_14344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14344_call = mutated_mod.get_global_var('func_14344')
call_14345 = func_14344_call()
output = call_14345
func_14346 = relay.Function([], output)
mutated_mod['func_14346'] = func_14346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11070_call = mod.get_global_var('func_11070')
func_11072_call = mutated_mod.get_global_var('func_11072')
call_14390 = relay.TupleGetItem(func_11070_call(), 0)
call_14391 = relay.TupleGetItem(func_11072_call(), 0)
func_8940_call = mod.get_global_var('func_8940')
func_8942_call = mutated_mod.get_global_var('func_8942')
call_14405 = func_8940_call()
call_14406 = func_8940_call()
output = relay.Tuple([call_14390,call_14405,])
output2 = relay.Tuple([call_14391,call_14406,])
func_14410 = relay.Function([], output)
mod['func_14410'] = func_14410
mod = relay.transform.InferType()(mod)
output = func_14410()
func_14411 = relay.Function([], output)
mutated_mod['func_14411'] = func_14411
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14453 = relay.const([[[True,False,True,False,True,True,True,False,False,False,False,True,False,False,True,True],[False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True],[False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,False]],[[False,False,False,True,True,True,True,True,True,False,False,False,False,True,True,True],[True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False],[True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,True]],[[False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,False],[True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,False],[False,True,False,False,False,True,True,False,True,True,True,True,False,True,True,True]],[[False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,True],[False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True],[False,True,True,False,True,False,False,False,True,True,False,True,False,True,False,True]]], dtype = "bool")#candidate|14453|(4, 3, 16)|const|bool
var_14454 = relay.var("var_14454", dtype = "bool", shape = (4, 3, 16))#candidate|14454|(4, 3, 16)|var|bool
bop_14455 = relay.logical_and(const_14453.astype('bool'), relay.reshape(var_14454.astype('bool'), relay.shape_of(const_14453))) # shape=(4, 3, 16)
output = bop_14455
output2 = bop_14455
func_14478 = relay.Function([var_14454,], output)
mod['func_14478'] = func_14478
mod = relay.transform.InferType()(mod)
mutated_mod['func_14478'] = func_14478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14479 = relay.var("var_14479", dtype = "bool", shape = (4, 3, 16))#candidate|14479|(4, 3, 16)|var|bool
func_14478_call = mutated_mod.get_global_var('func_14478')
call_14480 = func_14478_call(var_14479)
output = call_14480
func_14481 = relay.Function([var_14479], output)
mutated_mod['func_14481'] = func_14481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13840_call = mod.get_global_var('func_13840')
func_13841_call = mutated_mod.get_global_var('func_13841')
call_14531 = func_13840_call()
call_14532 = func_13840_call()
func_13767_call = mod.get_global_var('func_13767')
func_13771_call = mutated_mod.get_global_var('func_13771')
var_14551 = relay.var("var_14551", dtype = "float32", shape = (78,))#candidate|14551|(78,)|var|float32
call_14550 = relay.TupleGetItem(func_13767_call(relay.reshape(call_14531.astype('float64'), [7, 99]), relay.reshape(var_14551.astype('float32'), [78, 1]), ), 4)
call_14552 = relay.TupleGetItem(func_13771_call(relay.reshape(call_14531.astype('float64'), [7, 99]), relay.reshape(var_14551.astype('float32'), [78, 1]), ), 4)
uop_14557 = relay.atanh(call_14550.astype('float32')) # shape=(7, 99)
uop_14559 = relay.atanh(call_14552.astype('float32')) # shape=(7, 99)
uop_14566 = relay.acos(var_14551.astype('float32')) # shape=(78,)
output = relay.Tuple([call_14531,uop_14557,uop_14566,])
output2 = relay.Tuple([call_14532,uop_14559,uop_14566,])
F = relay.Function([var_14551,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_14551,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_8790(%var_8784: Tensor[(56, 28), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(8, 196), float32]) {
  %0 = @func_6145() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %1 = cast(%var_8784, dtype="float64") /* ty=Tensor[(56, 28), float64] */;
  %2 = reshape(%1, newshape=[8, 196]) /* ty=Tensor[(8, 196), float64] */;
  %3 = @func_5984(%2) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64], Tensor[(8, 196), float64]) */;
  %4 = %3.2;
  %5 = cast(%var_8784, dtype="float32") /* ty=Tensor[(56, 28), float32] */;
  %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(2), int32] */;
  %7 = cast(%4, dtype="float32") /* ty=Tensor[(8, 196), float32] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %9 = %0.0;
  %10 = divide(%7, %8) /* ty=Tensor[(8, 196), float32] */;
  (%9, %10)
}

def @func_884(%var_879: Tensor[(6, 11, 6), int8]) -> Tensor[(6, 11, 6), bool] {
  %11 = cast(%var_879, dtype="bool") /* ty=Tensor[(6, 11, 6), bool] */;
  %12 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(6, 11, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 11, 6), int8] */, dtype="bool") /* ty=Tensor[(6, 11, 6), bool] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%13, %14) /* ty=Tensor[(6, 11, 6), bool] */
}

def @func_13899() -> (Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool]) {
  %15 = @func_10154() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32]) */;
  %16 = @func_9545() /* ty=(Tensor[(6, 11, 6), bool],) */;
  %17 = %15.1;
  %18 = %16.0;
  (%17, %18)
}

def @func_5376(%var_5371: Tensor[(8, 14, 4), float32]) -> (Tensor[(8, 14, 4), float32],) {
  %19 = cast(%var_5371, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
  %20 = log2(%19) /* ty=Tensor[(8, 14, 4), float32] */;
  (%20,)
}

def @func_9849() -> Tensor[(9, 7, 11), float64] {
  @func_8325() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_13453() -> Tensor[(396), int8] {
  %21 = @func_5718() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %21.2
}

def @func_8210() -> Tensor[(16, 15, 9), bool] {
  %22 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
  %22.0
}

def @func_6073() -> (Tensor[(9, 7, 11), float64],) {
  %23 = @func_5718() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %24 = %23.0;
  (%24,)
}

def @func_10676() -> (Tensor[(336), float64], Tensor[(9, 7, 11), float64]) {
  %25 = @func_9799() /* ty=(Tensor[(336), float64], Tensor[(9, 7, 11), float64]) */;
  %26 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %27 = %25.0;
  %28 = %26.0;
  (%27, %28)
}

def @func_11348(%var_11327: Tensor[(75), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(90, 1), float32], Tensor[(75), float32], Tensor[(90), float32]) {
  %29 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
  %30 = cast(%var_11327, dtype="float32") /* ty=Tensor[(75), float32] */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %32 = reshape(%30, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), float32] */;
  %33 = reshape(%31, newshape=[90, 1]) /* ty=Tensor[(90, 1), float32] */;
  %34 = @func_4609(%32, %33) /* ty=(Tensor[(15, 5, 1), float32], Tensor[(3, 15, 2), float32], Tensor[(90, 1), float32]) */;
  %35 = %29.2;
  %36 = %34.2;
  (%35, %36, %var_11327, meta[relay.Constant][1] /* ty=Tensor[(90), float32] */)
}

def @func_7798(%var_7778: Tensor[(14, 8, 3), bool], %var_7791: Tensor[(6), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(1800), uint8]) {
  %37 = @func_5843() /* ty=Tensor[(14, 8, 3), bool] */;
  %38 = cast(%var_7778, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %39 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%37, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %42 = cast(%var_7791, dtype="float64") /* ty=Tensor[(6), float64] */;
  %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(1800), uint8] */, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %44 = reshape(%42, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %45 = reshape(%43, newshape=[1800]) /* ty=Tensor[(1800), uint8] */;
  %46 = @func_6379(%44, %45) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(1568, 1), float64], Tensor[(6), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8], Tensor[(192, 4), bool], Tensor[(60), int64], Tensor[(24, 10), int64], Tensor[(14, 66), float64], Tensor[(9, 7, 11), float64], Tensor[(4, 15, 4), int64]) */;
  %47 = greater(%40, %41) /* ty=Tensor[(14, 8, 3), bool] */;
  %48 = %46.1;
  (%47, %48, %var_7791, meta[relay.Constant][2] /* ty=Tensor[(1800), uint8] */)
}

def @func_13302(%var_13245: Tensor[(468), uint16], %var_13280: Tensor[(2016), float64], %var_13287: Tensor[(210), bool]) -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), int16], Tensor[(693), float64], Tensor[(16, 15, 9), bool], Tensor[(468), uint16], Tensor[(16, 14, 9), float64], Tensor[(2016), float64], Tensor[(231, 3), float64], Tensor[(210), bool]) {
  %49 = @func_10074() /* ty=(Tensor[(14, 8, 3), bool],) */;
  %50 = cast(meta[relay.Constant][3] /* ty=Tensor[(693), float64] */, dtype="float64") /* ty=Tensor[(693), float64] */;
  %51 = reshape(%50, newshape=[9, 7, 11]) /* ty=Tensor[(9, 7, 11), float64] */;
  %52 = @func_12519(%51) /* ty=(Tensor[(336), float64], Tensor[(1568), float64], Tensor[(9, 7, 11), int16]) */;
  %53 = cast(%var_13245, dtype="uint16") /* ty=Tensor[(468), uint16] */;
  %54 = reshape(%53, newshape=[3, 156]) /* ty=Tensor[(3, 156), uint16] */;
  %55 = @func_8674(%54) /* ty=(Tensor[(16, 15, 9), bool], Tensor[(396), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), uint16], Tensor[(154, 6), float64]) */;
  %56 = cast(%var_13280, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %57 = reshape(%56, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %58 = cast(%var_13287, dtype="bool") /* ty=Tensor[(210), bool] */;
  %59 = reshape(%58, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), bool] */;
  %60 = @func_12986(%59) /* ty=(Tensor[(5, 3, 14), bool], Tensor[(9, 7, 11), int16], Tensor[(231, 3), float64]) */;
  %61 = %49.0;
  %62 = %52.2;
  %63 = %55.0;
  %64 = @func_3824(%57) /* ty=Tensor[(16, 14, 9), float64] */;
  %65 = %60.2;
  (%61, %62, meta[relay.Constant][3] /* ty=Tensor[(693), float64] */, %63, %var_13245, %64, %var_13280, %65, %var_13287)
}

def @func_8220() -> Tensor[(396), int8] {
  %66 = @func_6689() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %66.2
}

def @func_5657(%var_5640: Tensor[(15), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(1, 15, 1), float32], Tensor[(15), float32]) {
  %67 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %68 = cast(%var_5640, dtype="float32") /* ty=Tensor[(15), float32] */;
  %69 = reshape(%68, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float32] */;
  %70 = @func_1754(%69) /* ty=(Tensor[(1, 15, 1), float32],) */;
  %71 = %67.0;
  %72 = %70.0;
  (%71, %72, %var_5640)
}

def @func_13840() -> Tensor[(9, 7, 11), float32] {
  %73 = @func_13714() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6), float64]) */;
  %73.0
}

def @func_14410() -> (Tensor[(9, 7, 11), float64], Tensor[(336), float64]) {
  %74 = @func_11070() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %75 = %74.0;
  %76 = @func_8940() /* ty=Tensor[(336), float64] */;
  (%75, %76)
}

def @func_7264() -> Tensor[(396), int8] {
  %77 = @func_6498() /* ty=(Tensor[(396), int8], Tensor[(9, 7, 11), float32]) */;
  %77.0
}

def @func_11889(%var_11810: Tensor[(56, 8), float32], %var_11811: Tensor[(594), uint32], %var_11812: Tensor[(924), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(56, 8), float32], Tensor[(594), uint32], Tensor[(924), float64], Tensor[(3, 600), uint8], Tensor[(336), float64]) {
  %78 = @func_6632() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %79 = cast(meta[relay.Constant][4] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %80 = cast(%var_11810, dtype="float32") /* ty=Tensor[(56, 8), float32] */;
  %81 = cast(%var_11811, dtype="uint32") /* ty=Tensor[(594), uint32] */;
  %82 = cast(%var_11812, dtype="float64") /* ty=Tensor[(924), float64] */;
  %83 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 600), uint8] */, dtype="uint8") /* ty=Tensor[(3, 600), uint8] */;
  %84 = reshape(%79, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %85 = reshape(%80, newshape=[2, 224]) /* ty=Tensor[(2, 224), float32] */;
  %86 = reshape(%81, newshape=[594]) /* ty=Tensor[(594), uint32] */;
  %87 = reshape(%82, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %88 = reshape(%83, newshape=[3, 600]) /* ty=Tensor[(3, 600), uint8] */;
  %89 = @func_10749(%84, %85, %86, %87, %88) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(8, 14, 4), float32], Tensor[(2, 224), float32], Tensor[(9, 7, 11), float32], Tensor[(594), uint32], Tensor[(924), float64], Tensor[(3, 600), uint8]) */;
  %90 = %78.0;
  %91 = %89.1;
  %92 = @func_9208() /* ty=Tensor[(336), float64] */;
  (%90, %91, meta[relay.Constant][4] /* ty=Tensor[(378), float64] */, %var_11810, %var_11811, %var_11812, meta[relay.Constant][5] /* ty=Tensor[(3, 600), uint8] */, %92)
}

def @func_14344() -> (Tensor[(336), float64],) {
  %93 = @func_6725() /* ty=(Tensor[(336), float64],) */;
  %94 = %93.0;
  (%94,)
}

def @func_9770(%var_9730: Tensor[(9, 7, 11), float64], %var_9759: Tensor[(78), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), int32], Tensor[(2, 13, 3), float32], Tensor[(78), float32], Tensor[(16, 8, 6), float64], Tensor[(768), bool]) {
  %95 = @func_8877() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %96 = %95.0;
  %97 = cast(%var_9730, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %98 = shape_of(%96, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%96, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %101 = mod(%99, %100) /* ty=Tensor[(9, 7, 11), float64] */;
  %102 = cast(%96, dtype="int32") /* ty=Tensor[(9, 7, 11), int32] */;
  %103 = shape_of(%101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %104 = cast(%101, dtype="int32") /* ty=Tensor[(9, 7, 11), int32] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %106 = cast(%var_9759, dtype="float32") /* ty=Tensor[(78), float32] */;
  %107 = reshape(%106, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float32] */;
  %108 = cast(meta[relay.Constant][6] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %109 = cast(meta[relay.Constant][6] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %110 = reshape(%108, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %111 = reshape(%109, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %112 = @func_4013(%110, %111) /* ty=(Tensor[(16, 8, 6), float64],) */;
  %113 = @func_8095() /* ty=Tensor[(6, 3, 1), float32] */;
  %114 = bitwise_or(%104, %105) /* ty=Tensor[(9, 7, 11), int32] */;
  %115 = @func_5343(%107) /* ty=Tensor[(2, 13, 3), float32] */;
  %116 = %112.0;
  (%113, %114, %115, %var_9759, %116, meta[relay.Constant][6] /* ty=Tensor[(768), bool] */)
}

def @func_6055() -> Tensor[(9, 7, 11), float64] {
  @func_6020() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_10234() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) {
  %117 = @func_8522() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %118 = %117.0;
  %119 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
  (%118, %119)
}

def @func_5818(%var_5813: Tensor[(1568), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 7, 14), float64], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64]) {
  %120 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %121 = @func_5718() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %122 = cast(-0.499441f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %123 = cast(meta[relay.Constant][7] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %124 = cast(%var_5813, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %125 = cast(meta[relay.Constant][8] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %126 = reshape(%122, newshape=[]) /* ty=float32 */;
  %127 = reshape(%123, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %128 = reshape(%124, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %129 = reshape(%125, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %130 = @func_2228(%126, %127, %128, %129) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(16, 7, 14), float64], Tensor[(1568), float64], Tensor[(1800), uint8], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(15, 8, 8), bool], Tensor[(960), float32]) */;
  %131 = %120.0;
  %132 = %121.0;
  %133 = %130.1;
  (%131, %132, %133, -0.499441f /* ty=float32 */, meta[relay.Constant][7] /* ty=Tensor[(528), float32] */, %var_5813, meta[relay.Constant][8] /* ty=Tensor[(6), float64] */)
}

def @func_6570(%var_6552: Tensor[(6), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 8, 3), bool], Tensor[(168, 2), float64]) {
  %134 = cast(%var_6552, dtype="float64") /* ty=Tensor[(6), float64] */;
  %135 = reshape(%134, newshape=[1, 2, 3]) /* ty=Tensor[(1, 2, 3), float64] */;
  %136 = @func_1929(%135) /* ty=(Tensor[(1, 2, 3), float64],) */;
  %137 = cast(meta[relay.Constant][9] /* ty=Tensor[(168, 2), float64] */, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %138 = reshape(%137, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %139 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
  %140 = %136.0;
  %141 = @func_3535(%138) /* ty=Tensor[(14, 8, 3), bool] */;
  (%139, %140, %var_6552, %141, meta[relay.Constant][9] /* ty=Tensor[(168, 2), float64] */)
}

def @func_440(%var_399: Tensor[(16, 7, 14), float64], %var_431: Tensor[(1800), uint8], %var_433: Tensor[(15, 10, 12), float32]) -> (Tensor[(16, 7, 14), float64], Tensor[(1800), uint8], Tensor[(15, 10, 12), int32]) {
  %142 = cast(%var_399, dtype="float64") /* ty=Tensor[(16, 7, 14), float64] */;
  %143 = cast(%var_431, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %144 = reshape(%143, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), uint8] */;
  %145 = @func_176(%144) /* ty=Tensor[(15, 10, 12), float32] */;
  %146 = cast(%var_433, dtype="int32") /* ty=Tensor[(15, 10, 12), int32] */;
  %147 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%145, dtype="int32") /* ty=Tensor[(15, 10, 12), int32] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %150 = sinh(%142) /* ty=Tensor[(16, 7, 14), float64] */;
  %151 = subtract(%148, %149) /* ty=Tensor[(15, 10, 12), int32] */;
  (%150, %var_431, %151)
}

def @func_6689() -> (Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) {
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(396), int8] */, dtype="int8") /* ty=Tensor[(396), int8] */;
  %153 = reshape(%152, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int8] */;
  %154 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
  %155 = @func_884(%153) /* ty=Tensor[(6, 11, 6), bool] */;
  (%154, %155, meta[relay.Constant][10] /* ty=Tensor[(396), int8] */)
}

def @func_12054() -> Tensor[(336), float64] {
  %156 = @func_10676() /* ty=(Tensor[(336), float64], Tensor[(9, 7, 11), float64]) */;
  %156.0
}

def @func_12023(%var_12019: Tensor[(336), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) {
  %157 = @func_6463() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) */;
  %158 = cast(%var_12019, dtype="float64") /* ty=Tensor[(336), float64] */;
  %159 = reshape(%158, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %160 = %157.0;
  %161 = @func_3535(%159) /* ty=Tensor[(14, 8, 3), bool] */;
  (%160, %161, %var_12019)
}

def @func_10838() -> Tensor[(336), float64] {
  %162 = @func_9799() /* ty=(Tensor[(336), float64], Tensor[(9, 7, 11), float64]) */;
  %162.0
}

def @func_10154() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32]) {
  %163 = @func_10027() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
  %164 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %165 = %164.0;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
  %167 = %163.0;
  %168 = acos(%166) /* ty=Tensor[(9, 7, 11), float32] */;
  (%167, %168)
}

def @func_9656(%var_9650: Tensor[(6, 9, 7), float64]) -> (Tensor[(6, 9, 7), float64], Tensor[(9, 7, 11), float64]) {
  %169 = cast(%var_9650, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %170 = cosh(%169) /* ty=Tensor[(6, 9, 7), float64] */;
  %171 = @func_8998() /* ty=Tensor[(9, 7, 11), float64] */;
  (%170, %171)
}

def @func_7465(%var_7434: Tensor[(4, 13, 9), uint16], %var_7461: Tensor[(3, 2), float64]) -> (Tensor[(4, 13, 9), float32], Tensor[(1800), uint8], Tensor[(3, 2), float64], Tensor[(1800), uint8]) {
  %172 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %173 = cast(%var_7434, dtype="uint16") /* ty=Tensor[(4, 13, 9), uint16] */;
  %174 = bitwise_or(%172, %173) /* ty=Tensor[(4, 13, 9), uint16] */;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(4, 13, 9), float32] */;
  %176 = cast(%var_7461, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %177 = cast(meta[relay.Constant][12] /* ty=Tensor[(1800), uint8] */, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %178 = reshape(%176, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %179 = reshape(%177, newshape=[1800]) /* ty=Tensor[(1800), uint8] */;
  %180 = @func_6379(%178, %179) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(1568, 1), float64], Tensor[(6), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8], Tensor[(192, 4), bool], Tensor[(60), int64], Tensor[(24, 10), int64], Tensor[(14, 66), float64], Tensor[(9, 7, 11), float64], Tensor[(4, 15, 4), int64]) */;
  %181 = acos(%175) /* ty=Tensor[(4, 13, 9), float32] */;
  %182 = %180.5;
  (%181, %182, %var_7461, meta[relay.Constant][12] /* ty=Tensor[(1800), uint8] */)
}

def @func_12663() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool]) {
  %183 = @func_10234() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) */;
  %184 = @func_12148() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) */;
  %185 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
  %186 = %183.0;
  %187 = %184.1;
  %188 = %185.0;
  (%186, %187, %188)
}

def @func_9163() -> (Tensor[(9, 7, 11), float64],) {
  %189 = @func_8522() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %190 = %189.0;
  (%190,)
}

def @func_13034() -> (Tensor[(336), float64], Tensor[(6, 3, 1), float32]) {
  %191 = @func_8940() /* ty=Tensor[(336), float64] */;
  %192 = @func_8095() /* ty=Tensor[(6, 3, 1), float32] */;
  (%191, %192)
}

def @func_9415() -> Tensor[(9, 7, 11), float32] {
  %193 = @func_6498() /* ty=(Tensor[(396), int8], Tensor[(9, 7, 11), float32]) */;
  %193.1
}

def @func_7664(%var_7657: Tensor[(5, 3), float32]) -> (Tensor[(9, 7, 11), int8], Tensor[(1, 15, 1), float32], Tensor[(5, 3), float32]) {
  %194 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %195 = %194.0;
  %196 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 7, 11), float64] */, dtype="int8") /* ty=Tensor[(9, 7, 11), int8] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%195, dtype="int8") /* ty=Tensor[(9, 7, 11), int8] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %200 = cast(%var_7657, dtype="float32") /* ty=Tensor[(5, 3), float32] */;
  %201 = reshape(%200, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float32] */;
  %202 = @func_1754(%201) /* ty=(Tensor[(1, 15, 1), float32],) */;
  %203 = bitwise_and(%198, %199) /* ty=Tensor[(9, 7, 11), int8] */;
  %204 = %202.0;
  (%203, %204, %var_7657)
}

def @func_8674(%var_8656: Tensor[(3, 156), uint16]) -> (Tensor[(16, 15, 9), bool], Tensor[(396), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), uint16], Tensor[(154, 6), float64]) {
  %205 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
  %206 = cast(%var_8656, dtype="uint16") /* ty=Tensor[(3, 156), uint16] */;
  %207 = cast(meta[relay.Constant][14] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %208 = reshape(%207, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %209 = @func_7935(%208) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) */;
  %210 = %209.3;
  %211 = cast(%210, dtype="float64") /* ty=Tensor[(6), float64] */;
  %212 = reshape(%206, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), uint16] */;
  %213 = reshape(%211, newshape=[3, 2]) /* ty=Tensor[(3, 2), float64] */;
  %214 = @func_7465(%212, %213) /* ty=(Tensor[(4, 13, 9), float32], Tensor[(1800), uint8], Tensor[(3, 2), float64], Tensor[(1800), uint8]) */;
  %215 = cast(%210, dtype="float64") /* ty=Tensor[(6), float64] */;
  %216 = cast(meta[relay.Constant][14] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %217 = %205.0;
  %218 = @func_7264() /* ty=Tensor[(396), int8] */;
  %219 = %214.0;
  %220 = multiply(%215, %216) /* ty=Tensor[(154, 6), float64] */;
  (%217, %218, %219, %var_8656, %220)
}

def @func_12148() -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) {
  %221 = @func_6888() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) */;
  %222 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %223 = %221.0;
  %224 = %222.0;
  (%223, %224)
}

def @func_5843() -> Tensor[(14, 8, 3), bool] {
  %225 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %225.1
}

def @func_9619(%var_9613: Tensor[(420), int64]) -> (Tensor[(9, 7, 11), float64], Tensor[(924), float64], Tensor[(420), int64], Tensor[(924), float64]) {
  %226 = @func_8159() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) */;
  %227 = %226.0;
  %228 = cast(%227, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %229 = cast(%var_9613, dtype="int64") /* ty=Tensor[(420), int64] */;
  %230 = cast(%var_9613, dtype="int64") /* ty=Tensor[(420), int64] */;
  %231 = cast(meta[relay.Constant][15] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %232 = reshape(%229, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), int64] */;
  %233 = reshape(%230, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), int64] */;
  %234 = reshape(%231, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %235 = @func_8271(%232, %233, %234) /* ty=(Tensor[(6, 5, 14), float64], Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(6, 5, 14), float32], Tensor[(6), float64], Tensor[(924), float64]) */;
  %236 = exp(%228) /* ty=Tensor[(9, 7, 11), float64] */;
  %237 = %235.5;
  (%236, %237, %var_9613, meta[relay.Constant][15] /* ty=Tensor[(924), float64] */)
}

def @func_7054(%var_7048: Tensor[(448), float32]) -> (Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) {
  %238 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
  %239 = cast(%var_7048, dtype="float32") /* ty=Tensor[(448), float32] */;
  %240 = reshape(%239, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %241 = @func_5376(%240) /* ty=(Tensor[(8, 14, 4), float32],) */;
  %242 = %238.0;
  %243 = %241.0;
  (%242, %243, %var_7048)
}

def @func_5959(%var_5933: Tensor[(7, 4, 8), float32], %var_5950: Tensor[(15), float32]) -> (Tensor[(7, 4, 8), float32], Tensor[(15), float32], Tensor[(15), float32]) {
  %244 = cast(%var_5933, dtype="float32") /* ty=Tensor[(7, 4, 8), float32] */;
  %245 = cast(%var_5950, dtype="float32") /* ty=Tensor[(15), float32] */;
  %246 = reshape(%245, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %247 = @func_5657(%246) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(1, 15, 1), float32], Tensor[(15), float32]) */;
  %248 = erf(%244) /* ty=Tensor[(7, 4, 8), float32] */;
  %249 = %247.2;
  (%248, %249, %var_5950)
}

def @func_9799() -> (Tensor[(336), float64], Tensor[(9, 7, 11), float64]) {
  %250 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %251 = @func_9208() /* ty=Tensor[(336), float64] */;
  %252 = %250.0;
  (%251, %252)
}

def @func_8522() -> (Tensor[(9, 7, 11), float64],) {
  %253 = @func_8325() /* ty=Tensor[(9, 7, 11), float64] */;
  (%253,)
}

def @func_10749(%var_10714: Tensor[(378), float64], %var_10728: Tensor[(2, 224), float32], %var_10739: Tensor[(594), uint32], %var_10740: Tensor[(924), float64], %var_10741: Tensor[(3, 600), uint8]) -> (Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(8, 14, 4), float32], Tensor[(2, 224), float32], Tensor[(9, 7, 11), float32], Tensor[(594), uint32], Tensor[(924), float64], Tensor[(3, 600), uint8]) {
  %254 = @func_8159() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) */;
  %255 = cast(%var_10714, dtype="float64") /* ty=Tensor[(378), float64] */;
  %256 = reshape(%255, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float64] */;
  %257 = @func_9656(%256) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(9, 7, 11), float64]) */;
  %258 = cast(%var_10728, dtype="float32") /* ty=Tensor[(2, 224), float32] */;
  %259 = reshape(%258, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %260 = @func_5376(%259) /* ty=(Tensor[(8, 14, 4), float32],) */;
  %261 = cast(%var_10739, dtype="uint32") /* ty=Tensor[(594), uint32] */;
  %262 = cast(%var_10739, dtype="uint32") /* ty=Tensor[(594), uint32] */;
  %263 = cast(%var_10740, dtype="float64") /* ty=Tensor[(924), float64] */;
  %264 = cast(%var_10741, dtype="uint8") /* ty=Tensor[(3, 600), uint8] */;
  %265 = reshape(%261, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), uint32] */;
  %266 = reshape(%262, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), uint32] */;
  %267 = reshape(%263, newshape=[462, 2]) /* ty=Tensor[(462, 2), float64] */;
  %268 = reshape(%264, newshape=[1800]) /* ty=Tensor[(1800), uint8] */;
  %269 = @func_10332(%265, %266, %267, %268) /* ty=(Tensor[(11, 9, 6), uint32], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(336), float64], Tensor[(462, 2), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8]) */;
  %270 = %254.1;
  %271 = %257.1;
  %272 = %260.0;
  %273 = %269.2;
  (%270, %271, %var_10714, %272, %var_10728, %273, %var_10739, %var_10740, %var_10741)
}

def @func_12986(%var_12967: Tensor[(5, 3, 14), bool]) -> (Tensor[(5, 3, 14), bool], Tensor[(9, 7, 11), int16], Tensor[(231, 3), float64]) {
  %274 = cast(%var_12967, dtype="bool") /* ty=Tensor[(5, 3, 14), bool] */;
  %275 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(5, 3, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 3, 14), bool] */, dtype="bool") /* ty=Tensor[(5, 3, 14), bool] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %278 = cast(meta[relay.Constant][17] /* ty=Tensor[(231, 3), float64] */, dtype="float64") /* ty=Tensor[(231, 3), float64] */;
  %279 = reshape(%278, newshape=[9, 7, 11]) /* ty=Tensor[(9, 7, 11), float64] */;
  %280 = logical_or(%276, %277) /* ty=Tensor[(5, 3, 14), bool] */;
  %281 = @func_7212(%279) /* ty=Tensor[(9, 7, 11), int16] */;
  (%280, %281, meta[relay.Constant][17] /* ty=Tensor[(231, 3), float64] */)
}

def @func_6193(%var_6175: Tensor[(1568), float64], %var_6176: Tensor[(6), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(15, 8, 8), bool], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) {
  %282 = cast(-0.170092f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %283 = cast(meta[relay.Constant][18] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %284 = cast(%var_6175, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %285 = cast(%var_6176, dtype="float64") /* ty=Tensor[(6), float64] */;
  %286 = reshape(%282, newshape=[]) /* ty=float32 */;
  %287 = reshape(%283, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %288 = reshape(%284, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %289 = reshape(%285, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %290 = @func_2228(%286, %287, %288, %289) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(16, 7, 14), float64], Tensor[(1568), float64], Tensor[(1800), uint8], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(15, 8, 8), bool], Tensor[(960), float32]) */;
  %291 = cast(%var_6175, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %292 = reshape(%291, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %293 = @func_5818(%292) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 7, 14), float64], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64]) */;
  %294 = @func_5843() /* ty=Tensor[(14, 8, 3), bool] */;
  %295 = %290.6;
  %296 = %293.1;
  (%294, %295, -0.170092f /* ty=float32 */, meta[relay.Constant][18] /* ty=Tensor[(528), float32] */, %var_6175, %var_6176, %296)
}

def @func_8998() -> Tensor[(9, 7, 11), float64] {
  %297 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %297.0
}

def @func_13988(%var_13929: Tensor[(14, 8, 3), bool], %var_13945: Tensor[(6, 1), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(14, 8, 3), float32], Tensor[(9, 7, 11), float32], Tensor[(6, 1), float64], Tensor[(14, 8, 3), uint32]) {
  %298 = @func_13714() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6), float64]) */;
  %299 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
  %300 = %299.0;
  %301 = cast(%var_13929, dtype="float32") /* ty=Tensor[(14, 8, 3), float32] */;
  %302 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(%300, dtype="float32") /* ty=Tensor[(14, 8, 3), float32] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %305 = cast(%var_13945, dtype="float64") /* ty=Tensor[(6, 1), float64] */;
  %306 = reshape(%305, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %307 = @func_6570(%306) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 8, 3), bool], Tensor[(168, 2), float64]) */;
  %308 = cast(%300, dtype="uint32") /* ty=Tensor[(14, 8, 3), uint32] */;
  %309 = shape_of(%var_13929, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%var_13929, dtype="uint32") /* ty=Tensor[(14, 8, 3), uint32] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %312 = %298.0;
  %313 = mod(%303, %304) /* ty=Tensor[(14, 8, 3), float32] */;
  %314 = %307.0;
  %315 = minimum(%310, %311) /* ty=Tensor[(14, 8, 3), uint32] */;
  (%312, %313, %314, %var_13945, %315)
}

def @func_6785() -> Tensor[(8, 14, 4), float32] {
  %316 = @func_6463() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) */;
  %316.4
}

def @func_1624(%var_1618: Tensor[(15, 8, 8), float32], %var_1619: Tensor[(15, 8, 8), float32]) -> Tensor[(15, 8, 8), bool] {
  %317 = cast(%var_1619, dtype="bool") /* ty=Tensor[(15, 8, 8), bool] */;
  %318 = shape_of(%var_1618, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%var_1618, dtype="bool") /* ty=Tensor[(15, 8, 8), bool] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%319, %320) /* ty=Tensor[(15, 8, 8), bool] */
}

def @func_9208() -> Tensor[(336), float64] {
  %321 = @func_6725() /* ty=(Tensor[(336), float64],) */;
  %321.0
}

def @func_11381() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) {
  %322 = @func_6073() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %323 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %324 = %322.0;
  %325 = %323.0;
  (%324, %325)
}

def @func_6725() -> (Tensor[(336), float64],) {
  %326 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %327 = %326.2;
  (%327,)
}

def @func_12590(%var_12566: Tensor[(14, 7, 11), float64]) -> (Tensor[(14, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8]) {
  %328 = cast(%var_12566, dtype="float64") /* ty=Tensor[(14, 7, 11), float64] */;
  %329 = @func_8877() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %330 = cast(meta[relay.Constant][19] /* ty=Tensor[(1800), uint8] */, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %331 = reshape(%330, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), uint8] */;
  %332 = asin(%328) /* ty=Tensor[(14, 7, 11), float64] */;
  %333 = %329.0;
  %334 = @func_176(%331) /* ty=Tensor[(15, 10, 12), float32] */;
  (%332, %333, %334, meta[relay.Constant][19] /* ty=Tensor[(1800), uint8] */)
}

def @func_13679() -> (Tensor[(11, 8, 16), float64],) {
  %335 = @func_11060() /* ty=(Tensor[(11, 8, 16), float64], Tensor[(16, 8, 6), float64], Tensor[(768), bool]) */;
  %336 = %335.0;
  (%336,)
}

def @func_14279(%var_14271: Tensor[(6, 3, 6), bool], %var_14272: Tensor[(6, 3, 6), bool]) -> (Tensor[(6, 3, 6), bool],) {
  %337 = cast(%var_14272, dtype="bool") /* ty=Tensor[(6, 3, 6), bool] */;
  %338 = shape_of(%var_14271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%var_14271, dtype="bool") /* ty=Tensor[(6, 3, 6), bool] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %341 = logical_or(%339, %340) /* ty=Tensor[(6, 3, 6), bool] */;
  (%341,)
}

def @func_3535(%var_3511: Tensor[(14, 8, 3), float64]) -> Tensor[(14, 8, 3), bool] {
  %342 = cast(%var_3511, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
  %343 = sinh(%342) /* ty=Tensor[(14, 8, 3), float64] */;
  %344 = cast(%var_3511, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %345 = shape_of(%343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%343, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%346, %347) /* ty=Tensor[(14, 8, 3), bool] */
}

def @func_13099() -> (Tensor[(396), int8],) {
  %348 = @func_7264() /* ty=Tensor[(396), int8] */;
  (%348,)
}

def @func_12207() -> (Tensor[(9, 7, 11), float64],) {
  %349 = @func_6020() /* ty=Tensor[(9, 7, 11), float64] */;
  (%349,)
}

def @func_13862() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), int16]) {
  %350 = @func_12663() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool]) */;
  %351 = %350.1;
  %352 = cast(%351, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %353 = reshape(%352, newshape=[9, 7, 11]) /* ty=Tensor[(9, 7, 11), float64] */;
  %354 = @func_5589(%353) /* ty=(Tensor[(9, 7, 11), int16],) */;
  %355 = %354.0;
  (%351, %355)
}

def @func_4452(%var_4447: Tensor[(6, 3, 1), float32]) -> (Tensor[(6, 3, 1), float32],) {
  %356 = cast(%var_4447, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
  %357 = log10(%356) /* ty=Tensor[(6, 3, 1), float32] */;
  (%357,)
}

def @func_10332(%var_10291: Tensor[(11, 9, 6), uint32], %var_10292: Tensor[(11, 9, 6), uint32], %var_10317: Tensor[(462, 2), float64], %var_10325: Tensor[(1800), uint8]) -> (Tensor[(11, 9, 6), uint32], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(336), float64], Tensor[(462, 2), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8]) {
  %358 = cast(%var_10292, dtype="uint32") /* ty=Tensor[(11, 9, 6), uint32] */;
  %359 = shape_of(%var_10291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%var_10291, dtype="uint32") /* ty=Tensor[(11, 9, 6), uint32] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %362 = cast(%var_10317, dtype="float64") /* ty=Tensor[(462, 2), float64] */;
  %363 = reshape(%362, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %364 = @func_7935(%363) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) */;
  %365 = cast(%var_10317, dtype="float64") /* ty=Tensor[(462, 2), float64] */;
  %366 = cast(%var_10325, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %367 = reshape(%366, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), uint8] */;
  %368 = left_shift(%360, %361) /* ty=Tensor[(11, 9, 6), uint32] */;
  %369 = @func_8970() /* ty=Tensor[(9, 7, 11), float64] */;
  %370 = %364.0;
  %371 = @func_9208() /* ty=Tensor[(336), float64] */;
  %372 = acos(%365) /* ty=Tensor[(462, 2), float64] */;
  %373 = @func_176(%367) /* ty=Tensor[(15, 10, 12), float32] */;
  (%368, %369, %370, %371, %372, %373, %var_10325)
}

def @func_6020() -> Tensor[(9, 7, 11), float64] {
  %374 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %374.0
}

def @func_4562(%var_4540: Tensor[(3, 15, 2), float32]) -> Tensor[(3, 15, 2), float32] {
  %375 = cast(%var_4540, dtype="float32") /* ty=Tensor[(3, 15, 2), float32] */;
  tan(%375) /* ty=Tensor[(3, 15, 2), float32] */
}

def @func_13714() -> (Tensor[(9, 7, 11), float32], Tensor[(6), float64]) {
  %376 = @func_9526() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
  %377 = %376.0;
  %378 = cast(%377, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
  %379 = @func_13385() /* ty=(Tensor[(396), int8], Tensor[(9, 7, 11), float32], Tensor[(6), float64]) */;
  %380 = erf(%378) /* ty=Tensor[(9, 7, 11), float32] */;
  %381 = %379.2;
  (%380, %381)
}

def @func_13138() -> Tensor[(16, 15, 9), float32] {
  @func_11221() /* ty=Tensor[(16, 15, 9), float32] */
}

def @func_4828(%var_4819: Tensor[(9, 12, 10), float32]) -> Tensor[(9, 12, 10), float32] {
  %382 = cast(%var_4819, dtype="float32") /* ty=Tensor[(9, 12, 10), float32] */;
  %383 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(9, 12, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 12, 10), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 10), float32] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%384, %385) /* ty=Tensor[(9, 12, 10), float32] */
}

def @func_11495(%var_11490: Tensor[(16, 5, 15), uint32], %var_11491: Tensor[(16, 5, 15), uint32]) -> Tensor[(16, 5, 15), uint32] {
  %386 = cast(%var_11491, dtype="uint32") /* ty=Tensor[(16, 5, 15), uint32] */;
  %387 = shape_of(%var_11490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%var_11490, dtype="uint32") /* ty=Tensor[(16, 5, 15), uint32] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  minimum(%388, %389) /* ty=Tensor[(16, 5, 15), uint32] */
}

def @func_6851() -> (Tensor[(16, 15, 9), bool],) {
  %390 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 9), float64] */;
  %391 = exp(%390) /* ty=Tensor[(16, 15, 9), float64] */;
  %392 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 15, 9), float64] */, dtype="bool") /* ty=Tensor[(16, 15, 9), bool] */;
  %393 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
  %394 = cast(%391, dtype="bool") /* ty=Tensor[(16, 15, 9), bool] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %396 = less(%394, %395) /* ty=Tensor[(16, 15, 9), bool] */;
  (%396,)
}

def @func_8877() -> (Tensor[(9, 7, 11), float64],) {
  %397 = @func_6073() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %398 = %397.0;
  (%398,)
}

def @func_8970() -> Tensor[(9, 7, 11), float64] {
  @func_6055() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_7758(%var_7730: Tensor[(6), float64], %var_7731: Tensor[(900, 2), uint8], %var_7743: Tensor[(154, 6), float64]) -> (Tensor[(8, 14, 4), float32], Tensor[(1800), uint8], Tensor[(6), float64], Tensor[(900, 2), uint8], Tensor[(14, 11, 6), float64], Tensor[(154, 6), float64], Tensor[(9, 7, 11), float64]) {
  %399 = cast(%var_7730, dtype="float64") /* ty=Tensor[(6), float64] */;
  %400 = cast(%var_7731, dtype="uint8") /* ty=Tensor[(900, 2), uint8] */;
  %401 = reshape(%399, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %402 = reshape(%400, newshape=[1800]) /* ty=Tensor[(1800), uint8] */;
  %403 = @func_6379(%401, %402) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(1568, 1), float64], Tensor[(6), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8], Tensor[(192, 4), bool], Tensor[(60), int64], Tensor[(24, 10), int64], Tensor[(14, 66), float64], Tensor[(9, 7, 11), float64], Tensor[(4, 15, 4), int64]) */;
  %404 = cast(%var_7743, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %405 = reshape(%404, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %406 = @func_1802(%405) /* ty=(Tensor[(14, 11, 6), float64],) */;
  %407 = @func_6632() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %408 = @func_6785() /* ty=Tensor[(8, 14, 4), float32] */;
  %409 = %403.5;
  %410 = %406.0;
  %411 = %407.0;
  (%408, %409, %var_7730, %var_7731, %410, %var_7743, %411)
}

def @func_10196(%var_10166: Tensor[(3, 30), float32], %var_10167: Tensor[(2, 480), float64]) -> (Tensor[(3, 30), float32], Tensor[(2, 480), float64], Tensor[(6, 3, 75), bool]) {
  %412 = @func_8159() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) */;
  %413 = %412.1;
  %414 = cast(%413, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
  %415 = atan(%414) /* ty=Tensor[(6, 3, 1), float32] */;
  %416 = cast(%415, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
  %417 = asin(%416) /* ty=Tensor[(6, 3, 1), float32] */;
  %418 = cast(%var_10166, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
  %419 = cast(%var_10167, dtype="float64") /* ty=Tensor[(2, 480), float64] */;
  %420 = reshape(%418, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %421 = reshape(%419, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %422 = @func_9366(%420, %421) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(3, 15, 2), float32], Tensor[(75), float32], Tensor[(90), float32], Tensor[(8, 12, 10), float64], Tensor[(960), float64]) */;
  %423 = %422.2;
  %424 = cast(%417, dtype="bool") /* ty=Tensor[(6, 3, 1), bool] */;
  %425 = cast(%423, dtype="bool") /* ty=Tensor[(75), bool] */;
  %426 = not_equal(%424, %425) /* ty=Tensor[(6, 3, 75), bool] */;
  (%var_10166, %var_10167, %426)
}

def @func_9638(%var_9630: Tensor[(12, 5, 16), float64]) -> (Tensor[(12, 5, 16), float64], Tensor[(396), int8]) {
  %427 = cast(%var_9630, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
  %428 = asin(%427) /* ty=Tensor[(12, 5, 16), float64] */;
  %429 = @func_8220() /* ty=Tensor[(396), int8] */;
  (%428, %429)
}

def @func_8159() -> (Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) {
  %430 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %431 = %430.0;
  %432 = @func_8095() /* ty=Tensor[(6, 3, 1), float32] */;
  (%431, %432)
}

def @func_2228(%var_2136: float32, %var_2137: Tensor[(11, 12, 4), float32], %var_2144: Tensor[(1568), float64], %var_2171: Tensor[(6), float64]) -> (Tensor[(11, 12, 4), float32], Tensor[(16, 7, 14), float64], Tensor[(1568), float64], Tensor[(1800), uint8], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(15, 8, 8), bool], Tensor[(960), float32]) {
  %433 = cast(%var_2136, dtype="float32") /* ty=float32 */;
  %434 = cast(%var_2137, dtype="float32") /* ty=Tensor[(11, 12, 4), float32] */;
  %435 = cast(%var_2144, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %436 = cast(meta[relay.Constant][22] /* ty=Tensor[(1800), uint8] */, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %437 = cast(meta[relay.Constant][22] /* ty=Tensor[(1800), uint8] */, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %438 = reshape(%435, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), float64] */;
  %439 = reshape(%436, newshape=[1800]) /* ty=Tensor[(1800), uint8] */;
  %440 = reshape(%437, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), float32] */;
  %441 = @func_440(%438, %439, %440) /* ty=(Tensor[(16, 7, 14), float64], Tensor[(1800), uint8], Tensor[(15, 10, 12), int32]) */;
  %442 = cast(%var_2171, dtype="float64") /* ty=Tensor[(6), float64] */;
  %443 = reshape(%442, newshape=[1, 2, 3]) /* ty=Tensor[(1, 2, 3), float64] */;
  %444 = @func_1929(%443) /* ty=(Tensor[(1, 2, 3), float64],) */;
  %445 = cast(meta[relay.Constant][23] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %446 = cast(meta[relay.Constant][23] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %447 = reshape(%445, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %448 = reshape(%446, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %449 = divide(%433, %434) /* ty=Tensor[(11, 12, 4), float32] */;
  %450 = %441.0;
  %451 = %444.0;
  %452 = @func_1624(%447, %448) /* ty=Tensor[(15, 8, 8), bool] */;
  (%449, %450, %var_2144, meta[relay.Constant][22] /* ty=Tensor[(1800), uint8] */, %451, %var_2171, %452, meta[relay.Constant][23] /* ty=Tensor[(960), float32] */)
}

def @func_8704(%var_8680: Tensor[(7, 14, 8), uint16], %var_8685: Tensor[(528), float32], %var_8686: Tensor[(1568), float64], %var_8687: Tensor[(1, 6), float64]) -> (Tensor[(7, 14, 8), uint16], Tensor[(1568), float64], Tensor[(528), float32], Tensor[(1568), float64], Tensor[(1, 6), float64], Tensor[(1, 2, 3), float64]) {
  %453 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %454 = cast(%var_8680, dtype="uint16") /* ty=Tensor[(7, 14, 8), uint16] */;
  %455 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
  %456 = cast(%var_8685, dtype="float32") /* ty=Tensor[(528), float32] */;
  %457 = cast(%var_8686, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %458 = cast(%var_8687, dtype="float64") /* ty=Tensor[(1, 6), float64] */;
  %459 = reshape(%455, newshape=[]) /* ty=float32 */;
  %460 = reshape(%456, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %461 = reshape(%457, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %462 = reshape(%458, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %463 = @func_2228(%459, %460, %461, %462) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(16, 7, 14), float64], Tensor[(1568), float64], Tensor[(1800), uint8], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(15, 8, 8), bool], Tensor[(960), float32]) */;
  %464 = cast(%var_8687, dtype="float64") /* ty=Tensor[(1, 6), float64] */;
  %465 = reshape(%464, newshape=[1, 2, 3]) /* ty=Tensor[(1, 2, 3), float64] */;
  %466 = @func_1929(%465) /* ty=(Tensor[(1, 2, 3), float64],) */;
  %467 = right_shift(%453, %454) /* ty=Tensor[(7, 14, 8), uint16] */;
  %468 = %463.2;
  %469 = %466.0;
  (%467, %468, %var_8685, %var_8686, %var_8687, %469)
}

def @func_11953() -> Tensor[(9, 7, 11), float64] {
  %470 = @func_9584() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
  %470.1
}

def @func_10602(%var_10418: Tensor[(528), float32], %var_10420: Tensor[(6), float64], %var_10431: Tensor[(75), float32], %var_10432: Tensor[(90, 1), float32], %var_10470: Tensor[(924), float64], %var_10490: Tensor[(8, 56), float32], %var_10579: Tensor[(378), float64], %var_10589: int64, %var_10590: Tensor[(160), int64]) -> (Tensor[(9, 7, 11), float64], Tensor[(56, 14), uint16], Tensor[(528), float32], Tensor[(6), float64], Tensor[(75), float32], Tensor[(90, 1), float32], Tensor[(6, 3, 1), float32], Tensor[(6), float64], Tensor[(924), float64], Tensor[(8, 14, 4), float32], Tensor[(8, 56), float32], Tensor[(16, 7, 14), float64], Tensor[(14, 8, 3), bool], Tensor[(2, 13, 3), float32], Tensor[(78), float32], Tensor[(90, 1568), float32], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(15, 8, 8), bool], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(480, 2), float32], Tensor[(5, 189), float32], Tensor[(90, 1568), uint32]) {
  %471 = @func_10234() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) */;
  %472 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
  %473 = cast(%var_10470, dtype="float64") /* ty=Tensor[(924), float64] */;
  %474 = reshape(%473, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %475 = @func_7935(%474) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) */;
  %476 = cast(%var_10490, dtype="float32") /* ty=Tensor[(8, 56), float32] */;
  %477 = reshape(%476, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %478 = @func_5376(%477) /* ty=(Tensor[(8, 14, 4), float32],) */;
  %479 = cast(meta[relay.Constant][25] /* ty=Tensor[(56, 14), uint16] */, dtype="uint16") /* ty=Tensor[(56, 14), uint16] */;
  %480 = cast(%var_10418, dtype="float32") /* ty=Tensor[(528), float32] */;
  %481 = cast(meta[relay.Constant][26] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %482 = cast(%var_10420, dtype="float64") /* ty=Tensor[(6), float64] */;
  %483 = reshape(%479, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), uint16] */;
  %484 = reshape(%480, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %485 = reshape(%481, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %486 = reshape(%482, newshape=[1, 6]) /* ty=Tensor[(1, 6), float64] */;
  %487 = @func_8704(%483, %484, %485, %486) /* ty=(Tensor[(7, 14, 8), uint16], Tensor[(1568), float64], Tensor[(528), float32], Tensor[(1568), float64], Tensor[(1, 6), float64], Tensor[(1, 2, 3), float64]) */;
  %488 = %487.3;
  %489 = cast(%488, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %490 = reshape(%489, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %491 = @func_5818(%490) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 7, 14), float64], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64]) */;
  %492 = cast(%488, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %493 = asinh(%492) /* ty=Tensor[(1568), float64] */;
  %494 = cast(%493, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %495 = reshape(%494, newshape=[8, 196]) /* ty=Tensor[(8, 196), float64] */;
  %496 = @func_5984(%495) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64], Tensor[(8, 196), float64]) */;
  %497 = cast(meta[relay.Constant][27] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %498 = reshape(%497, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float32] */;
  %499 = cast(%var_10431, dtype="float32") /* ty=Tensor[(75), float32] */;
  %500 = cast(%var_10432, dtype="float32") /* ty=Tensor[(90, 1), float32] */;
  %501 = reshape(%499, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), float32] */;
  %502 = reshape(%500, newshape=[90, 1]) /* ty=Tensor[(90, 1), float32] */;
  %503 = @func_4609(%501, %502) /* ty=(Tensor[(15, 5, 1), float32], Tensor[(3, 15, 2), float32], Tensor[(90, 1), float32]) */;
  %504 = %503.2;
  %505 = cast(%504, dtype="int16") /* ty=Tensor[(90, 1), int16] */;
  %506 = cast(meta[relay.Constant][26] /* ty=Tensor[(1568), float64] */, dtype="int16") /* ty=Tensor[(1568), int16] */;
  %507 = right_shift(%505, %506) /* ty=Tensor[(90, 1568), int16] */;
  %508 = cast(%493, dtype="bool") /* ty=Tensor[(1568), bool] */;
  %509 = cast(%507, dtype="bool") /* ty=Tensor[(90, 1568), bool] */;
  %510 = logical_and(%508, %509) /* ty=Tensor[(90, 1568), bool] */;
  %511 = cast(%510, dtype="float32") /* ty=Tensor[(90, 1568), float32] */;
  %512 = cast(%var_10579, dtype="float64") /* ty=Tensor[(378), float64] */;
  %513 = reshape(%512, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float64] */;
  %514 = @func_9656(%513) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(9, 7, 11), float64]) */;
  %515 = cast(%var_10589, dtype="int64") /* ty=int64 */;
  %516 = cast(%var_10590, dtype="int64") /* ty=Tensor[(160), int64] */;
  %517 = cast(meta[relay.Constant][28] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %518 = cast(meta[relay.Constant][29] /* ty=Tensor[(480, 2), float32] */, dtype="float32") /* ty=Tensor[(480, 2), float32] */;
  %519 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 189), float32] */, dtype="float32") /* ty=Tensor[(5, 189), float32] */;
  %520 = reshape(%515, newshape=[]) /* ty=int64 */;
  %521 = reshape(%516, newshape=[1, 16, 10]) /* ty=Tensor[(1, 16, 10), int64] */;
  %522 = reshape(%517, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %523 = reshape(%518, newshape=[960]) /* ty=Tensor[(960), float32] */;
  %524 = reshape(%519, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %525 = @func_2696(%520, %521, %522, %523, %524) /* ty=(Tensor[(1, 16, 10), int64], Tensor[(1, 15, 1), float32], Tensor[(15), float32], Tensor[(15, 8, 8), bool], Tensor[(960), float32], Tensor[(9, 15, 7), float32], Tensor[(945), float32], Tensor[(15, 8, 8), bool]) */;
  %526 = cast(%510, dtype="float64") /* ty=Tensor[(90, 1568), float64] */;
  %527 = sqrt(%526) /* ty=Tensor[(90, 1568), float64] */;
  %528 = cast(%527, dtype="float64") /* ty=Tensor[(90, 1568), float64] */;
  %529 = asinh(%528) /* ty=Tensor[(90, 1568), float64] */;
  %530 = cast(%529, dtype="float64") /* ty=Tensor[(90, 1568), float64] */;
  %531 = erf(%530) /* ty=Tensor[(90, 1568), float64] */;
  %532 = cast(%531, dtype="float64") /* ty=Tensor[(90, 1568), float64] */;
  %533 = sinh(%532) /* ty=Tensor[(90, 1568), float64] */;
  %534 = cast(%529, dtype="float32") /* ty=Tensor[(90, 1568), float32] */;
  %535 = shape_of(%527, dtype="int32") /* ty=Tensor[(2), int32] */;
  %536 = cast(%527, dtype="float32") /* ty=Tensor[(90, 1568), float32] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %538 = floor_divide(%536, %537) /* ty=Tensor[(90, 1568), float32] */;
  %539 = cast(%538, dtype="uint32") /* ty=Tensor[(90, 1568), uint32] */;
  %540 = shape_of(%533, dtype="int32") /* ty=Tensor[(2), int32] */;
  %541 = cast(%533, dtype="uint32") /* ty=Tensor[(90, 1568), uint32] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %543 = %471.1;
  %544 = %472.2;
  %545 = %475.3;
  %546 = %478.0;
  %547 = %491.2;
  %548 = %496.0;
  %549 = @func_5343(%498) /* ty=Tensor[(2, 13, 3), float32] */;
  %550 = cosh(%511) /* ty=Tensor[(90, 1568), float32] */;
  %551 = %514.1;
  %552 = %525.7;
  %553 = minimum(%541, %542) /* ty=Tensor[(90, 1568), uint32] */;
  (%543, meta[relay.Constant][25] /* ty=Tensor[(56, 14), uint16] */, %var_10418, %var_10420, %var_10431, %var_10432, %544, %545, %var_10470, %546, %var_10490, %547, %548, %549, meta[relay.Constant][27] /* ty=Tensor[(78), float32] */, %550, %551, %var_10579, %552, %var_10589, %var_10590, meta[relay.Constant][28] /* ty=Tensor[(15), float32] */, meta[relay.Constant][29] /* ty=Tensor[(480, 2), float32] */, meta[relay.Constant][30] /* ty=Tensor[(5, 189), float32] */, %553)
}

def @func_10929(%var_10923: Tensor[(112, 4), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(448), float32], Tensor[(78), float32], Tensor[(112, 4), float32]) {
  %554 = @func_8159() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) */;
  %555 = cast(meta[relay.Constant][31] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %556 = cast(%var_10923, dtype="float32") /* ty=Tensor[(112, 4), float32] */;
  %557 = reshape(%555, newshape=[78, 1]) /* ty=Tensor[(78, 1), float32] */;
  %558 = reshape(%556, newshape=[448]) /* ty=Tensor[(448), float32] */;
  %559 = @func_7338(%557, %558) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(2, 13, 3), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(78, 1), float64]) */;
  %560 = %554.0;
  %561 = %559.3;
  (%560, %561, meta[relay.Constant][31] /* ty=Tensor[(78), float32] */, %var_10923)
}

def @func_6379(%var_6339: Tensor[(6), float64], %var_6365: Tensor[(1800), uint8]) -> (Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(1568, 1), float64], Tensor[(6), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8], Tensor[(192, 4), bool], Tensor[(60), int64], Tensor[(24, 10), int64], Tensor[(14, 66), float64], Tensor[(9, 7, 11), float64], Tensor[(4, 15, 4), int64]) {
  %562 = @func_6073() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %563 = cast(meta[relay.Constant][32] /* ty=Tensor[(1568, 1), float64] */, dtype="float64") /* ty=Tensor[(1568, 1), float64] */;
  %564 = cast(%var_6339, dtype="float64") /* ty=Tensor[(6), float64] */;
  %565 = reshape(%563, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %566 = reshape(%564, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %567 = @func_6193(%565, %566) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(15, 8, 8), bool], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) */;
  %568 = cast(%var_6365, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %569 = reshape(%568, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), uint8] */;
  %570 = cast(meta[relay.Constant][33] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %571 = cast(meta[relay.Constant][34] /* ty=Tensor[(24, 10), int64] */, dtype="int64") /* ty=Tensor[(24, 10), int64] */;
  %572 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 66), float64] */, dtype="float64") /* ty=Tensor[(14, 66), float64] */;
  %573 = reshape(%570, newshape=[1, 15, 4]) /* ty=Tensor[(1, 15, 4), int64] */;
  %574 = reshape(%571, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), int64] */;
  %575 = reshape(%572, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %576 = @func_5433(%573, %574, %575) /* ty=(Tensor[(4, 15, 4), int64], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(192, 4), bool]) */;
  %577 = cast(meta[relay.Constant][33] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %578 = cast(meta[relay.Constant][34] /* ty=Tensor[(24, 10), int64] */, dtype="int64") /* ty=Tensor[(24, 10), int64] */;
  %579 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 66), float64] */, dtype="float64") /* ty=Tensor[(14, 66), float64] */;
  %580 = reshape(%577, newshape=[1, 15, 4]) /* ty=Tensor[(1, 15, 4), int64] */;
  %581 = reshape(%578, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), int64] */;
  %582 = reshape(%579, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %583 = @func_5433(%580, %581, %582) /* ty=(Tensor[(4, 15, 4), int64], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(192, 4), bool]) */;
  %584 = %562.0;
  %585 = %567.4;
  %586 = @func_176(%569) /* ty=Tensor[(15, 10, 12), float32] */;
  %587 = %576.4;
  %588 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
  %589 = %583.0;
  (%584, %585, meta[relay.Constant][32] /* ty=Tensor[(1568, 1), float64] */, %var_6339, %586, %var_6365, %587, meta[relay.Constant][33] /* ty=Tensor[(60), int64] */, meta[relay.Constant][34] /* ty=Tensor[(24, 10), int64] */, meta[relay.Constant][35] /* ty=Tensor[(14, 66), float64] */, %588, %589)
}

def @func_7919() -> Tensor[(9, 7, 11), float64] {
  %590 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %590.0
}

def @func_14027() -> (Tensor[(396), int8],) {
  %591 = @func_6689() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %592 = %591.2;
  (%592,)
}

def @func_9061() -> (Tensor[(9, 7, 11), float64],) {
  %593 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %594 = %593.0;
  (%594,)
}

def @func_14212() -> Tensor[(16, 15, 9), float32] {
  @func_11221() /* ty=Tensor[(16, 15, 9), float32] */
}

def @func_2131(%var_2111: Tensor[(9, 15, 7), float32]) -> (Tensor[(9, 15, 7), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) {
  %595 = cast(%var_2111, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
  %596 = cast(meta[relay.Constant][36] /* ty=Tensor[(396), int8] */, dtype="int8") /* ty=Tensor[(396), int8] */;
  %597 = reshape(%596, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int8] */;
  %598 = asinh(%595) /* ty=Tensor[(9, 15, 7), float32] */;
  %599 = @func_884(%597) /* ty=Tensor[(6, 11, 6), bool] */;
  (%598, %599, meta[relay.Constant][36] /* ty=Tensor[(396), int8] */)
}

def @func_13767(%var_13729: Tensor[(7, 99), float64], %var_13745: Tensor[(78, 1), float32]) -> (Tensor[(396), int8], Tensor[(16, 15, 9), bool], Tensor[(2, 13, 3), float32], Tensor[(78, 1), float32], Tensor[(7, 99), bool]) {
  %600 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
  %601 = cast(%var_13745, dtype="float32") /* ty=Tensor[(78, 1), float32] */;
  %602 = reshape(%601, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float32] */;
  %603 = cast(%var_13729, dtype="float64") /* ty=Tensor[(7, 99), float64] */;
  %604 = reshape(%603, newshape=[9, 7, 11]) /* ty=Tensor[(9, 7, 11), float64] */;
  %605 = @func_5589(%604) /* ty=(Tensor[(9, 7, 11), int16],) */;
  %606 = %605.0;
  %607 = cast(%606, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
  %608 = shape_of(%var_13729, dtype="int32") /* ty=Tensor[(2), int32] */;
  %609 = cast(%var_13729, dtype="bool") /* ty=Tensor[(7, 99), bool] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %611 = @func_13536() /* ty=Tensor[(396), int8] */;
  %612 = %600.0;
  %613 = @func_5343(%602) /* ty=Tensor[(2, 13, 3), float32] */;
  %614 = less_equal(%609, %610) /* ty=Tensor[(7, 99), bool] */;
  (%611, %612, %613, %var_13745, %614)
}

def @func_5343(%var_5335: Tensor[(2, 13, 3), float32]) -> Tensor[(2, 13, 3), float32] {
  %615 = cast(%var_5335, dtype="float32") /* ty=Tensor[(2, 13, 3), float32] */;
  asinh(%615) /* ty=Tensor[(2, 13, 3), float32] */
}

def @func_6294(%var_6259: Tensor[(240), int64]) -> (Tensor[(14, 8, 3), bool], Tensor[(16, 8, 6), float64], Tensor[(60), int64], Tensor[(240), int64], Tensor[(924), float64]) {
  %616 = cast(meta[relay.Constant][37] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %617 = cast(%var_6259, dtype="int64") /* ty=Tensor[(240), int64] */;
  %618 = cast(meta[relay.Constant][38] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %619 = reshape(%616, newshape=[1, 15, 4]) /* ty=Tensor[(1, 15, 4), int64] */;
  %620 = reshape(%617, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), int64] */;
  %621 = reshape(%618, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %622 = @func_5433(%619, %620, %621) /* ty=(Tensor[(4, 15, 4), int64], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(192, 4), bool]) */;
  %623 = @func_5843() /* ty=Tensor[(14, 8, 3), bool] */;
  %624 = %622.3;
  (%623, %624, meta[relay.Constant][37] /* ty=Tensor[(60), int64] */, %var_6259, meta[relay.Constant][38] /* ty=Tensor[(924), float64] */)
}

def @func_1929(%var_1919: Tensor[(1, 2, 3), float64]) -> (Tensor[(1, 2, 3), float64],) {
  %625 = cast(%var_1919, dtype="float64") /* ty=Tensor[(1, 2, 3), float64] */;
  %626 = log2(%625) /* ty=Tensor[(1, 2, 3), float64] */;
  (%626,)
}

def @func_5208(%var_5102: Tensor[(7, 2, 4), int64], %var_5136: Tensor[(924), float64]) -> (Tensor[(7, 2, 4), bool], Tensor[(15, 10, 12), float32], Tensor[(900, 2), uint8], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(768), bool], Tensor[(20, 48), float64], Tensor[(15, 8, 8), bool]) {
  %627 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 1, 4), int64] */, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
  %628 = cast(%var_5102, dtype="bool") /* ty=Tensor[(7, 2, 4), bool] */;
  %629 = cast(meta[relay.Constant][40] /* ty=Tensor[(900, 2), uint8] */, dtype="uint8") /* ty=Tensor[(900, 2), uint8] */;
  %630 = reshape(%629, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), uint8] */;
  %631 = cast(%var_5136, dtype="float64") /* ty=Tensor[(924), float64] */;
  %632 = reshape(%631, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %633 = @func_1802(%632) /* ty=(Tensor[(14, 11, 6), float64],) */;
  %634 = cast(meta[relay.Constant][41] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %635 = cast(meta[relay.Constant][41] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %636 = reshape(%634, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %637 = reshape(%635, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %638 = @func_4013(%636, %637) /* ty=(Tensor[(16, 8, 6), float64],) */;
  %639 = cast(meta[relay.Constant][42] /* ty=Tensor[(20, 48), float32] */, dtype="float64") /* ty=Tensor[(20, 48), float64] */;
  %640 = sigmoid(%639) /* ty=Tensor[(20, 48), float64] */;
  %641 = cast(meta[relay.Constant][42] /* ty=Tensor[(20, 48), float32] */, dtype="float32") /* ty=Tensor[(20, 48), float32] */;
  %642 = cast(meta[relay.Constant][42] /* ty=Tensor[(20, 48), float32] */, dtype="float32") /* ty=Tensor[(20, 48), float32] */;
  %643 = reshape(%641, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %644 = reshape(%642, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %645 = @func_1624(%643, %644) /* ty=Tensor[(15, 8, 8), bool] */;
  %646 = cast(meta[relay.Constant][42] /* ty=Tensor[(20, 48), float32] */, dtype="bool") /* ty=Tensor[(20, 48), bool] */;
  %647 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%645, dtype="bool") /* ty=Tensor[(15, 8, 8), bool] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %650 = greater_equal(%648, %649) /* ty=Tensor[(15, 8, 8), bool] */;
  %651 = cast(%650, dtype="bool") /* ty=Tensor[(15, 8, 8), bool] */;
  %652 = shape_of(%640, dtype="int32") /* ty=Tensor[(2), int32] */;
  %653 = cast(%640, dtype="bool") /* ty=Tensor[(20, 48), bool] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %655 = logical_and(%653, %654) /* ty=Tensor[(20, 48), bool] */;
  %656 = cast(%655, dtype="float64") /* ty=Tensor[(20, 48), float64] */;
  %657 = cast(%655, dtype="float32") /* ty=Tensor[(20, 48), float32] */;
  %658 = cast(%650, dtype="float32") /* ty=Tensor[(15, 8, 8), float32] */;
  %659 = reshape(%657, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %660 = reshape(%658, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %661 = greater_equal(%627, %628) /* ty=Tensor[(7, 2, 4), bool] */;
  %662 = @func_176(%630) /* ty=Tensor[(15, 10, 12), float32] */;
  %663 = %633.0;
  %664 = %638.0;
  %665 = sinh(%656) /* ty=Tensor[(20, 48), float64] */;
  %666 = @func_1624(%659, %660) /* ty=Tensor[(15, 8, 8), bool] */;
  (%661, %662, meta[relay.Constant][40] /* ty=Tensor[(900, 2), uint8] */, %663, %var_5136, %664, meta[relay.Constant][41] /* ty=Tensor[(768), bool] */, %665, %666)
}

def @func_11357() -> (Tensor[(9, 7, 11), float64],) {
  %667 = @func_9163() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %668 = %667.0;
  (%668,)
}

def @func_9526() -> (Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) {
  %669 = @func_9141() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %670 = @func_9415() /* ty=Tensor[(9, 7, 11), float32] */;
  %671 = %669.0;
  (%670, %671)
}

def @func_8271(%var_8222: Tensor[(6, 5, 14), int64], %var_8223: Tensor[(6, 5, 14), int64], %var_8264: Tensor[(924), float64]) -> (Tensor[(6, 5, 14), float64], Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(6, 5, 14), float32], Tensor[(6), float64], Tensor[(924), float64]) {
  %672 = cast(%var_8223, dtype="int64") /* ty=Tensor[(6, 5, 14), int64] */;
  %673 = shape_of(%var_8222, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%var_8222, dtype="int64") /* ty=Tensor[(6, 5, 14), int64] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %676 = multiply(%674, %675) /* ty=Tensor[(6, 5, 14), int64] */;
  %677 = cast(%676, dtype="float64") /* ty=Tensor[(6, 5, 14), float64] */;
  %678 = cast(meta[relay.Constant][43] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %679 = reshape(%678, newshape=[8, 196]) /* ty=Tensor[(8, 196), float64] */;
  %680 = @func_5984(%679) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64], Tensor[(8, 196), float64]) */;
  %681 = cast(%var_8222, dtype="float32") /* ty=Tensor[(6, 5, 14), float32] */;
  %682 = cast(%var_8264, dtype="float64") /* ty=Tensor[(924), float64] */;
  %683 = reshape(%682, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %684 = @func_7935(%683) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) */;
  %685 = acos(%677) /* ty=Tensor[(6, 5, 14), float64] */;
  %686 = %680.1;
  %687 = tan(%681) /* ty=Tensor[(6, 5, 14), float32] */;
  %688 = %684.3;
  (%685, %686, meta[relay.Constant][43] /* ty=Tensor[(1568), float64] */, %687, %688, %var_8264)
}

def @func_13536() -> Tensor[(396), int8] {
  @func_8624() /* ty=Tensor[(396), int8] */
}

def @func_12109(%var_12092: Tensor[(16, 15, 9), float32], %var_12100: Tensor[(1, 1200), uint32], %var_12107: Tensor[(960), float64]) -> (Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 15, 9), int64], Tensor[(16, 5, 15), uint32], Tensor[(1, 1200), uint32], Tensor[(336), float64], Tensor[(960), float64]) {
  %689 = @func_9584() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
  %690 = @func_11221() /* ty=Tensor[(16, 15, 9), float32] */;
  %691 = cast(%var_12092, dtype="int64") /* ty=Tensor[(16, 15, 9), int64] */;
  %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%690, dtype="int64") /* ty=Tensor[(16, 15, 9), int64] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %695 = cast(%var_12100, dtype="uint32") /* ty=Tensor[(1, 1200), uint32] */;
  %696 = cast(%var_12100, dtype="uint32") /* ty=Tensor[(1, 1200), uint32] */;
  %697 = reshape(%695, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), uint32] */;
  %698 = reshape(%696, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), uint32] */;
  %699 = cast(%var_12107, dtype="float64") /* ty=Tensor[(960), float64] */;
  %700 = reshape(%699, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %701 = @func_6703(%700) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(336), float64]) */;
  %702 = @func_8095() /* ty=Tensor[(6, 3, 1), float32] */;
  %703 = %689.1;
  %704 = @func_6020() /* ty=Tensor[(9, 7, 11), float64] */;
  %705 = maximum(%693, %694) /* ty=Tensor[(16, 15, 9), int64] */;
  %706 = @func_11495(%697, %698) /* ty=Tensor[(16, 5, 15), uint32] */;
  %707 = %701.1;
  (%702, %703, %704, %705, %706, %var_12100, %707, %var_12107)
}

def @func_6632() -> (Tensor[(9, 7, 11), float64],) {
  %708 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
  (%708,)
}

def @func_4013(%var_3976: Tensor[(16, 8, 6), bool], %var_3977: Tensor[(16, 8, 6), bool]) -> (Tensor[(16, 8, 6), float64],) {
  %709 = cast(%var_3977, dtype="bool") /* ty=Tensor[(16, 8, 6), bool] */;
  %710 = shape_of(%var_3976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%var_3976, dtype="bool") /* ty=Tensor[(16, 8, 6), bool] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %713 = logical_and(%711, %712) /* ty=Tensor[(16, 8, 6), bool] */;
  %714 = cast(%713, dtype="float64") /* ty=Tensor[(16, 8, 6), float64] */;
  %715 = log(%714) /* ty=Tensor[(16, 8, 6), float64] */;
  (%715,)
}

def @func_9584() -> (Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) {
  %716 = @func_9061() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %717 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
  %718 = %716.0;
  (%717, %718)
}

def @func_5675() -> (Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) {
  %719 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %720 = cast(meta[relay.Constant][44] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %721 = reshape(%720, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %722 = %719.0;
  %723 = @func_3535(%721) /* ty=Tensor[(14, 8, 3), bool] */;
  (%722, %723, meta[relay.Constant][44] /* ty=Tensor[(336), float64] */)
}

def @func_8624() -> Tensor[(396), int8] {
  @func_7264() /* ty=Tensor[(396), int8] */
}

def @func_11070() -> (Tensor[(9, 7, 11), float64],) {
  %724 = @func_10234() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) */;
  %725 = %724.0;
  (%725,)
}

def @func_9319() -> Tensor[(9, 7, 11), float32] {
  @func_6098() /* ty=Tensor[(9, 7, 11), float32] */
}

def @func_1754(%var_1730: Tensor[(1, 15, 1), float32]) -> (Tensor[(1, 15, 1), float32],) {
  %726 = cast(%var_1730, dtype="float32") /* ty=Tensor[(1, 15, 1), float32] */;
  %727 = sigmoid(%726) /* ty=Tensor[(1, 15, 1), float32] */;
  (%727,)
}

def @func_6098() -> Tensor[(9, 7, 11), float32] {
  %728 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %729 = %728.0;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
  tan(%730) /* ty=Tensor[(9, 7, 11), float32] */
}

def @func_6888() -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) {
  %731 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %732 = @func_5843() /* ty=Tensor[(14, 8, 3), bool] */;
  %733 = %731.0;
  (%732, %733)
}

def @func_12440(%var_12418: Tensor[(6, 3, 12), uint64]) -> (Tensor[(6, 3, 12), uint64], Tensor[(16, 5, 15), uint32], Tensor[(1200), uint32]) {
  %734 = cast(%var_12418, dtype="uint64") /* ty=Tensor[(6, 3, 12), uint64] */;
  %735 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(6, 3, 12), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %736 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 3, 12), uint64] */, dtype="uint64") /* ty=Tensor[(6, 3, 12), uint64] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %738 = cast(meta[relay.Constant][46] /* ty=Tensor[(1200), uint32] */, dtype="uint32") /* ty=Tensor[(1200), uint32] */;
  %739 = cast(meta[relay.Constant][46] /* ty=Tensor[(1200), uint32] */, dtype="uint32") /* ty=Tensor[(1200), uint32] */;
  %740 = reshape(%738, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), uint32] */;
  %741 = reshape(%739, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), uint32] */;
  %742 = maximum(%736, %737) /* ty=Tensor[(6, 3, 12), uint64] */;
  %743 = @func_11495(%740, %741) /* ty=Tensor[(16, 5, 15), uint32] */;
  (%742, %743, meta[relay.Constant][46] /* ty=Tensor[(1200), uint32] */)
}

def @func_4958(%var_4953: int32, %var_4954: Tensor[(2, 4, 3), int32]) -> Tensor[(2, 4, 3), bool] {
  %744 = cast(%var_4953, dtype="bool") /* ty=bool */;
  %745 = cast(%var_4954, dtype="bool") /* ty=Tensor[(2, 4, 3), bool] */;
  equal(%744, %745) /* ty=Tensor[(2, 4, 3), bool] */
}

def @func_10074() -> (Tensor[(14, 8, 3), bool],) {
  %746 = @func_8993() /* ty=(Tensor[(14, 8, 3), bool],) */;
  %747 = %746.0;
  (%747,)
}

def @func_11173() -> (Tensor[(9, 7, 11), float64],) {
  %748 = @func_9584() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
  %749 = %748.1;
  (%749,)
}

def @func_12911() -> (Tensor[(336), float64], Tensor[(16, 15, 9), bool], Tensor[(16, 15, 9), float32]) {
  %750 = @func_6725() /* ty=(Tensor[(336), float64],) */;
  %751 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
  %752 = %750.0;
  %753 = %751.0;
  %754 = @func_9280() /* ty=Tensor[(16, 15, 9), float32] */;
  (%752, %753, %754)
}

def @func_9477(%var_9463: int64, %var_9464: Tensor[(160), int64], %var_9467: Tensor[(945), float32]) -> (Tensor[(9, 7, 11), int64], Tensor[(8, 14, 4), float32], Tensor[(9, 7, 11), float64], Tensor[(960), float32], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(960), float32], Tensor[(945), float32]) {
  %755 = @func_9319() /* ty=Tensor[(9, 7, 11), float32] */;
  %756 = cast(meta[relay.Constant][47] /* ty=Tensor[(9, 7, 11), float32] */, dtype="int64") /* ty=Tensor[(9, 7, 11), int64] */;
  %757 = shape_of(%755, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%755, dtype="int64") /* ty=Tensor[(9, 7, 11), int64] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %760 = @func_6463() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) */;
  %761 = @func_9415() /* ty=Tensor[(9, 7, 11), float32] */;
  %762 = cast(%761, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %763 = cast(%var_9463, dtype="int64") /* ty=int64 */;
  %764 = cast(%var_9464, dtype="int64") /* ty=Tensor[(160), int64] */;
  %765 = cast(meta[relay.Constant][48] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %766 = cast(meta[relay.Constant][49] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %767 = cast(%var_9467, dtype="float32") /* ty=Tensor[(945), float32] */;
  %768 = reshape(%763, newshape=[]) /* ty=int64 */;
  %769 = reshape(%764, newshape=[1, 16, 10]) /* ty=Tensor[(1, 16, 10), int64] */;
  %770 = reshape(%765, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %771 = reshape(%766, newshape=[960]) /* ty=Tensor[(960), float32] */;
  %772 = reshape(%767, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %773 = @func_2696(%768, %769, %770, %771, %772) /* ty=(Tensor[(1, 16, 10), int64], Tensor[(1, 15, 1), float32], Tensor[(15), float32], Tensor[(15, 8, 8), bool], Tensor[(960), float32], Tensor[(9, 15, 7), float32], Tensor[(945), float32], Tensor[(15, 8, 8), bool]) */;
  %774 = multiply(%758, %759) /* ty=Tensor[(9, 7, 11), int64] */;
  %775 = %760.4;
  %776 = rsqrt(%762) /* ty=Tensor[(9, 7, 11), float64] */;
  %777 = %773.4;
  (%774, %775, %776, %777, %var_9463, %var_9464, meta[relay.Constant][48] /* ty=Tensor[(15), float32] */, meta[relay.Constant][49] /* ty=Tensor[(960), float32] */, %var_9467)
}

def @func_1802(%var_1786: Tensor[(14, 11, 6), float64]) -> (Tensor[(14, 11, 6), float64],) {
  %778 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 11, 6), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
  %779 = shape_of(%var_1786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %780 = cast(%var_1786, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
  %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %782 = mod(%780, %781) /* ty=Tensor[(14, 11, 6), float64] */;
  (%782,)
}

def @func_9141() -> (Tensor[(9, 7, 11), float64],) {
  %783 = @func_8522() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %784 = %783.0;
  (%784,)
}

def @func_9831() -> (Tensor[(8, 14, 4), float32],) {
  %785 = @func_6785() /* ty=Tensor[(8, 14, 4), float32] */;
  (%785,)
}

def @func_6757() -> (Tensor[(9, 7, 11), float64],) {
  %786 = @func_6145() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %787 = %786.0;
  (%787,)
}

def @func_14478(%var_14454: Tensor[(4, 3, 16), bool]) -> Tensor[(4, 3, 16), bool] {
  %788 = cast(%var_14454, dtype="bool") /* ty=Tensor[(4, 3, 16), bool] */;
  %789 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(4, 3, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %790 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 3, 16), bool] */, dtype="bool") /* ty=Tensor[(4, 3, 16), bool] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%790, %791) /* ty=Tensor[(4, 3, 16), bool] */
}

def @func_11026() -> (Tensor[(9, 12, 10), uint8], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) {
  %792 = @func_6463() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) */;
  %793 = @func_10154() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32]) */;
  %794 = @func_6073() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %795 = %792.1;
  %796 = %793.0;
  %797 = %794.0;
  (%795, %796, %797)
}

def @func_7935(%var_7932: Tensor[(924), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) {
  %798 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
  %799 = cast(meta[relay.Constant][52] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %800 = cast(meta[relay.Constant][53] /* ty=Tensor[(1800), uint8] */, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %801 = cast(%var_7932, dtype="float64") /* ty=Tensor[(924), float64] */;
  %802 = reshape(%799, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %803 = reshape(%800, newshape=[900, 2]) /* ty=Tensor[(900, 2), uint8] */;
  %804 = reshape(%801, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %805 = @func_7758(%802, %803, %804) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(1800), uint8], Tensor[(6), float64], Tensor[(900, 2), uint8], Tensor[(14, 11, 6), float64], Tensor[(154, 6), float64], Tensor[(9, 7, 11), float64]) */;
  %806 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
  %807 = %798.0;
  %808 = %805.0;
  (%806, %807, %808, meta[relay.Constant][52] /* ty=Tensor[(6), float64] */, meta[relay.Constant][53] /* ty=Tensor[(1800), uint8] */, %var_7932)
}

def @func_6145() -> (Tensor[(9, 7, 11), float64],) {
  %809 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
  (%809,)
}

def @func_11758() -> Tensor[(9, 7, 11), float64] {
  %810 = @func_10676() /* ty=(Tensor[(336), float64], Tensor[(9, 7, 11), float64]) */;
  %811 = %810.1;
  %812 = cast(%811, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  cos(%812) /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_2696(%var_2649: int64, %var_2650: Tensor[(1, 16, 10), int64], %var_2664: Tensor[(15), float32], %var_2667: Tensor[(960), float32], %var_2682: Tensor[(945), float32]) -> (Tensor[(1, 16, 10), int64], Tensor[(1, 15, 1), float32], Tensor[(15), float32], Tensor[(15, 8, 8), bool], Tensor[(960), float32], Tensor[(9, 15, 7), float32], Tensor[(945), float32], Tensor[(15, 8, 8), bool]) {
  %813 = cast(%var_2649, dtype="int64") /* ty=int64 */;
  %814 = cast(%var_2650, dtype="int64") /* ty=Tensor[(1, 16, 10), int64] */;
  %815 = cast(%var_2664, dtype="float32") /* ty=Tensor[(15), float32] */;
  %816 = reshape(%815, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float32] */;
  %817 = @func_1754(%816) /* ty=(Tensor[(1, 15, 1), float32],) */;
  %818 = cast(%var_2667, dtype="float32") /* ty=Tensor[(960), float32] */;
  %819 = cast(%var_2667, dtype="float32") /* ty=Tensor[(960), float32] */;
  %820 = reshape(%818, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %821 = reshape(%819, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %822 = cast(%var_2682, dtype="float32") /* ty=Tensor[(945), float32] */;
  %823 = reshape(%822, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %824 = @func_2131(%823) /* ty=(Tensor[(9, 15, 7), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %825 = cast(%var_2682, dtype="float32") /* ty=Tensor[(945), float32] */;
  %826 = cast(%var_2667, dtype="float32") /* ty=Tensor[(960), float32] */;
  %827 = cast(%var_2667, dtype="float32") /* ty=Tensor[(960), float32] */;
  %828 = reshape(%826, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %829 = reshape(%827, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %830 = minimum(%813, %814) /* ty=Tensor[(1, 16, 10), int64] */;
  %831 = %817.0;
  %832 = @func_1624(%820, %821) /* ty=Tensor[(15, 8, 8), bool] */;
  %833 = %824.0;
  %834 = sinh(%825) /* ty=Tensor[(945), float32] */;
  %835 = @func_1624(%828, %829) /* ty=Tensor[(15, 8, 8), bool] */;
  (%830, %831, %var_2664, %832, %var_2667, %833, %834, %835)
}

def @func_4609(%var_4601: Tensor[(15, 5, 1), float32], %var_4607: Tensor[(90, 1), float32]) -> (Tensor[(15, 5, 1), float32], Tensor[(3, 15, 2), float32], Tensor[(90, 1), float32]) {
  %836 = cast(%var_4601, dtype="float32") /* ty=Tensor[(15, 5, 1), float32] */;
  %837 = cast(%var_4607, dtype="float32") /* ty=Tensor[(90, 1), float32] */;
  %838 = reshape(%837, newshape=[3, 15, 2]) /* ty=Tensor[(3, 15, 2), float32] */;
  %839 = cosh(%836) /* ty=Tensor[(15, 5, 1), float32] */;
  %840 = @func_4562(%838) /* ty=Tensor[(3, 15, 2), float32] */;
  (%839, %840, %var_4607)
}

def @func_2458(%var_2455: Tensor[(3, 7, 7), float64]) -> (Tensor[(3, 7, 7), float64],) {
  %841 = cast(%var_2455, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
  %842 = acos(%841) /* ty=Tensor[(3, 7, 7), float64] */;
  (%842,)
}

def @func_7338(%var_7298: Tensor[(78, 1), float32], %var_7306: Tensor[(448), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(2, 13, 3), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(78, 1), float64]) {
  %843 = cast(%var_7298, dtype="float32") /* ty=Tensor[(78, 1), float32] */;
  %844 = reshape(%843, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float32] */;
  %845 = cast(%var_7306, dtype="float32") /* ty=Tensor[(448), float32] */;
  %846 = reshape(%845, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %847 = @func_5376(%846) /* ty=(Tensor[(8, 14, 4), float32],) */;
  %848 = cast(%var_7298, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
  %849 = @func_6020() /* ty=Tensor[(9, 7, 11), float64] */;
  %850 = @func_5343(%844) /* ty=Tensor[(2, 13, 3), float32] */;
  %851 = %847.0;
  %852 = tan(%848) /* ty=Tensor[(78, 1), float64] */;
  (%849, %850, %851, %var_7306, %852)
}

def @func_9204() -> (Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32], Tensor[(6, 3, 1), float32]) {
  %853 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %854 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
  %855 = %854.2;
  %856 = cast(%855, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
  %857 = reshape(%856, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %858 = @func_4452(%857) /* ty=(Tensor[(6, 3, 1), float32],) */;
  %859 = %853.0;
  %860 = %858.0;
  (%859, %855, %860)
}

def @func_13154(%var_13145: Tensor[(336), bool], %var_13152: Tensor[(2, 264), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(336), bool], Tensor[(6), float64], Tensor[(1568), float64], Tensor[(8, 98), uint16], Tensor[(2, 264), float32]) {
  %861 = @func_10234() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) */;
  %862 = cast(%var_13145, dtype="bool") /* ty=Tensor[(336), bool] */;
  %863 = cast(meta[relay.Constant][54] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %864 = reshape(%862, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), bool] */;
  %865 = reshape(%863, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %866 = @func_7798(%864, %865) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(1800), uint8]) */;
  %867 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 98), uint16] */, dtype="uint16") /* ty=Tensor[(8, 98), uint16] */;
  %868 = cast(%var_13152, dtype="float32") /* ty=Tensor[(2, 264), float32] */;
  %869 = %866.1;
  %870 = cast(%869, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %871 = cast(meta[relay.Constant][54] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %872 = reshape(%867, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), uint16] */;
  %873 = reshape(%868, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %874 = reshape(%870, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %875 = reshape(%871, newshape=[1, 6]) /* ty=Tensor[(1, 6), float64] */;
  %876 = @func_8704(%872, %873, %874, %875) /* ty=(Tensor[(7, 14, 8), uint16], Tensor[(1568), float64], Tensor[(528), float32], Tensor[(1568), float64], Tensor[(1, 6), float64], Tensor[(1, 2, 3), float64]) */;
  %877 = %861.0;
  %878 = %876.3;
  (%877, %869, %var_13145, meta[relay.Constant][54] /* ty=Tensor[(6), float64] */, %878, meta[relay.Constant][55] /* ty=Tensor[(8, 98), uint16] */, %var_13152)
}

def @func_10027() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) {
  %879 = @func_6073() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %880 = %879.0;
  %881 = cast(%880, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
  %882 = @func_9526() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
  %883 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
  %884 = atanh(%881) /* ty=Tensor[(9, 7, 11), float32] */;
  %885 = %882.1;
  (%883, %884, %885)
}

def @func_8325() -> Tensor[(9, 7, 11), float64] {
  %886 = @func_6145() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %886.0
}

def @func_11423(%var_11393: Tensor[(5, 9, 6), float64], %var_11397: Tensor[(5, 9, 6), float64]) -> (Tensor[(5, 9, 6), float64], Tensor[(5, 9, 6), int16], Tensor[(8, 12, 10), float64], Tensor[(240, 4), float64]) {
  %887 = cast(%var_11393, dtype="float64") /* ty=Tensor[(5, 9, 6), float64] */;
  %888 = cast(%var_11397, dtype="int16") /* ty=Tensor[(5, 9, 6), int16] */;
  %889 = shape_of(%var_11393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %890 = cast(%var_11393, dtype="int16") /* ty=Tensor[(5, 9, 6), int16] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %892 = cast(meta[relay.Constant][56] /* ty=Tensor[(240, 4), float64] */, dtype="float64") /* ty=Tensor[(240, 4), float64] */;
  %893 = reshape(%892, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %894 = @func_6703(%893) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(336), float64]) */;
  %895 = asinh(%887) /* ty=Tensor[(5, 9, 6), float64] */;
  %896 = add(%890, %891) /* ty=Tensor[(5, 9, 6), int16] */;
  %897 = %894.0;
  (%895, %896, %897, meta[relay.Constant][56] /* ty=Tensor[(240, 4), float64] */)
}

def @func_11221() -> Tensor[(16, 15, 9), float32] {
  %898 = @func_9280() /* ty=Tensor[(16, 15, 9), float32] */;
  %899 = cast(%898, dtype="float32") /* ty=Tensor[(16, 15, 9), float32] */;
  asinh(%899) /* ty=Tensor[(16, 15, 9), float32] */
}

def @func_8095() -> Tensor[(6, 3, 1), float32] {
  %900 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
  %900.2
}

def @func_5433(%var_5392: Tensor[(1, 15, 4), int64], %var_5393: Tensor[(4, 15, 4), int64], %var_5415: Tensor[(924), float64]) -> (Tensor[(4, 15, 4), int64], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(192, 4), bool]) {
  %901 = cast(%var_5392, dtype="int64") /* ty=Tensor[(1, 15, 4), int64] */;
  %902 = cast(%var_5393, dtype="int64") /* ty=Tensor[(4, 15, 4), int64] */;
  %903 = cast(%var_5415, dtype="float64") /* ty=Tensor[(924), float64] */;
  %904 = reshape(%903, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %905 = @func_1802(%904) /* ty=(Tensor[(14, 11, 6), float64],) */;
  %906 = cast(meta[relay.Constant][57] /* ty=Tensor[(192, 4), bool] */, dtype="bool") /* ty=Tensor[(192, 4), bool] */;
  %907 = cast(meta[relay.Constant][57] /* ty=Tensor[(192, 4), bool] */, dtype="bool") /* ty=Tensor[(192, 4), bool] */;
  %908 = reshape(%906, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %909 = reshape(%907, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %910 = @func_4013(%908, %909) /* ty=(Tensor[(16, 8, 6), float64],) */;
  %911 = minimum(%901, %902) /* ty=Tensor[(4, 15, 4), int64] */;
  %912 = %905.0;
  %913 = %910.0;
  (%911, %912, %var_5415, %913, meta[relay.Constant][57] /* ty=Tensor[(192, 4), bool] */)
}

def @func_7212(%var_7195: Tensor[(9, 7, 11), float64]) -> Tensor[(9, 7, 11), int16] {
  %914 = @func_6145() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %915 = %914.0;
  %916 = cast(%var_7195, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
  %917 = shape_of(%915, dtype="int32") /* ty=Tensor[(3), int32] */;
  %918 = cast(%915, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%918, %919) /* ty=Tensor[(9, 7, 11), int16] */
}

def @func_14148() -> (Tensor[(336), float64], Tensor[(12, 5, 16), float64], Tensor[(960), float64]) {
  %920 = @func_6725() /* ty=(Tensor[(336), float64],) */;
  %921 = cast(meta[relay.Constant][58] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %922 = reshape(%921, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), float64] */;
  %923 = @func_9638(%922) /* ty=(Tensor[(12, 5, 16), float64], Tensor[(396), int8]) */;
  %924 = %920.0;
  %925 = %923.0;
  (%924, %925, meta[relay.Constant][58] /* ty=Tensor[(960), float64] */)
}

def @func_14315() -> (Tensor[(9, 7, 11), float64],) {
  %926 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
  (%926,)
}

def @func_6703(%var_6697: Tensor[(8, 12, 10), float64]) -> (Tensor[(8, 12, 10), float64], Tensor[(336), float64]) {
  %927 = cast(%var_6697, dtype="float64") /* ty=Tensor[(8, 12, 10), float64] */;
  %928 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %929 = log10(%927) /* ty=Tensor[(8, 12, 10), float64] */;
  %930 = %928.2;
  (%929, %930)
}

def @func_5502() -> (Tensor[(9, 7, 11), float64],) {
  %931 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 7, 11), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %932 = log10(%931) /* ty=Tensor[(9, 7, 11), float64] */;
  (%932,)
}

def @func_12963() -> (Tensor[(9, 7, 11), float64],) {
  %933 = @func_6632() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %934 = %933.0;
  (%934,)
}

def @func_6498() -> (Tensor[(396), int8], Tensor[(9, 7, 11), float32]) {
  %935 = @func_5718() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %936 = %935.2;
  %937 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
  (%936, %937)
}

def @func_14036() -> (Tensor[(9, 7, 11), float32],) {
  %938 = @func_6498() /* ty=(Tensor[(396), int8], Tensor[(9, 7, 11), float32]) */;
  %939 = %938.1;
  (%939,)
}

def @func_6463() -> (Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) {
  %940 = cast(meta[relay.Constant][60] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %941 = reshape(%940, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %942 = @func_4828(%941) /* ty=Tensor[(9, 12, 10), float32] */;
  %943 = cast(meta[relay.Constant][60] /* ty=Tensor[(1080), float32] */, dtype="uint8") /* ty=Tensor[(1080), uint8] */;
  %944 = shape_of(%942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %945 = cast(%942, dtype="uint8") /* ty=Tensor[(9, 12, 10), uint8] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %947 = cast(meta[relay.Constant][61] /* ty=Tensor[(396), int8] */, dtype="int8") /* ty=Tensor[(396), int8] */;
  %948 = reshape(%947, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int8] */;
  %949 = cast(meta[relay.Constant][62] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %950 = reshape(%949, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %951 = @func_5376(%950) /* ty=(Tensor[(8, 14, 4), float32],) */;
  %952 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
  %953 = bitwise_or(%945, %946) /* ty=Tensor[(9, 12, 10), uint8] */;
  %954 = @func_884(%948) /* ty=Tensor[(6, 11, 6), bool] */;
  %955 = %951.0;
  (%952, %953, %954, meta[relay.Constant][61] /* ty=Tensor[(396), int8] */, %955, meta[relay.Constant][62] /* ty=Tensor[(448), float32] */)
}

def @func_5984(%var_5977: Tensor[(8, 196), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64], Tensor[(8, 196), float64]) {
  %956 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %957 = cast(%var_5977, dtype="float64") /* ty=Tensor[(8, 196), float64] */;
  %958 = reshape(%957, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %959 = @func_5818(%958) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 7, 14), float64], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64]) */;
  %960 = %956.1;
  %961 = %959.0;
  (%960, %961, %var_5977)
}

def @func_3824(%var_3820: Tensor[(16, 14, 9), float64]) -> Tensor[(16, 14, 9), float64] {
  %962 = cast(%var_3820, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
  acosh(%962) /* ty=Tensor[(16, 14, 9), float64] */
}

def @func_12519(%var_12514: Tensor[(9, 7, 11), float64]) -> (Tensor[(336), float64], Tensor[(1568), float64], Tensor[(9, 7, 11), int16]) {
  %963 = cast(meta[relay.Constant][63] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %964 = reshape(%963, newshape=[56, 28]) /* ty=Tensor[(56, 28), float64] */;
  %965 = @func_8790(%964) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(8, 196), float32]) */;
  %966 = %965.0;
  %967 = cast(%var_12514, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
  %968 = shape_of(%966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(%966, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %971 = @func_10838() /* ty=Tensor[(336), float64] */;
  %972 = bitwise_xor(%969, %970) /* ty=Tensor[(9, 7, 11), int16] */;
  (%971, meta[relay.Constant][63] /* ty=Tensor[(1568), float64] */, %972)
}

def @func_11124(%var_11101: Tensor[(160), int64], %var_11102: Tensor[(15), float32], %var_11103: Tensor[(945), float32], %var_11106: Tensor[(768), bool], %var_11113: Tensor[(10, 96), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(8, 12, 10), float64], Tensor[(9, 15, 7), float32], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(945), float32], Tensor[(16, 8, 6), float64], Tensor[(768), bool], Tensor[(10, 96), bool], Tensor[(9, 7, 11), float64]) {
  %973 = @func_8159() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) */;
  %974 = cast(meta[relay.Constant][64] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %975 = reshape(%974, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %976 = @func_6703(%975) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(336), float64]) */;
  %977 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %978 = cast(%var_11101, dtype="int64") /* ty=Tensor[(160), int64] */;
  %979 = cast(%var_11102, dtype="float32") /* ty=Tensor[(15), float32] */;
  %980 = %976.0;
  %981 = cast(%980, dtype="float32") /* ty=Tensor[(8, 12, 10), float32] */;
  %982 = cast(%var_11103, dtype="float32") /* ty=Tensor[(945), float32] */;
  %983 = reshape(%977, newshape=[]) /* ty=int64 */;
  %984 = reshape(%978, newshape=[1, 16, 10]) /* ty=Tensor[(1, 16, 10), int64] */;
  %985 = reshape(%979, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %986 = reshape(%981, newshape=[960]) /* ty=Tensor[(960), float32] */;
  %987 = reshape(%982, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %988 = @func_2696(%983, %984, %985, %986, %987) /* ty=(Tensor[(1, 16, 10), int64], Tensor[(1, 15, 1), float32], Tensor[(15), float32], Tensor[(15, 8, 8), bool], Tensor[(960), float32], Tensor[(9, 15, 7), float32], Tensor[(945), float32], Tensor[(15, 8, 8), bool]) */;
  %989 = cast(%var_11106, dtype="bool") /* ty=Tensor[(768), bool] */;
  %990 = cast(%var_11106, dtype="bool") /* ty=Tensor[(768), bool] */;
  %991 = reshape(%989, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %992 = reshape(%990, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %993 = @func_4013(%991, %992) /* ty=(Tensor[(16, 8, 6), float64],) */;
  %994 = cast(%var_11113, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %995 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(10, 96), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %996 = cast(meta[relay.Constant][64] /* ty=Tensor[(10, 96), float64] */, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %998 = %973.0;
  %999 = %988.5;
  %1000 = %993.0;
  %1001 = greater(%996, %997) /* ty=Tensor[(10, 96), bool] */;
  %1002 = @func_9849() /* ty=Tensor[(9, 7, 11), float64] */;
  (%998, %980, %999, 7 /* ty=int64 */, %var_11101, %var_11102, %var_11103, %1000, %var_11106, %1001, %1002)
}

def @func_8993() -> (Tensor[(14, 8, 3), bool],) {
  %1003 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
  %1004 = %1003.0;
  (%1004,)
}

def @func_13385() -> (Tensor[(396), int8], Tensor[(9, 7, 11), float32], Tensor[(6), float64]) {
  %1005 = @func_13099() /* ty=(Tensor[(396), int8],) */;
  %1006 = cast(meta[relay.Constant][65] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %1007 = reshape(%1006, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %1008 = @func_6570(%1007) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 8, 3), bool], Tensor[(168, 2), float64]) */;
  %1009 = %1005.0;
  %1010 = %1008.0;
  (%1009, %1010, meta[relay.Constant][65] /* ty=Tensor[(6), float64] */)
}

def @func_11060() -> (Tensor[(11, 8, 16), float64], Tensor[(16, 8, 6), float64], Tensor[(768), bool]) {
  %1011 = cast(meta[relay.Constant][66] /* ty=Tensor[(11, 8, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 8, 16), float64] */;
  %1012 = tan(%1011) /* ty=Tensor[(11, 8, 16), float64] */;
  %1013 = cast(%1012, dtype="float64") /* ty=Tensor[(11, 8, 16), float64] */;
  %1014 = cast(meta[relay.Constant][67] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %1015 = cast(meta[relay.Constant][67] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %1016 = reshape(%1014, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %1017 = reshape(%1015, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %1018 = @func_4013(%1016, %1017) /* ty=(Tensor[(16, 8, 6), float64],) */;
  %1019 = exp(%1013) /* ty=Tensor[(11, 8, 16), float64] */;
  %1020 = %1018.0;
  (%1019, %1020, meta[relay.Constant][67] /* ty=Tensor[(768), bool] */)
}

def @func_12377() -> (Tensor[(396), int8], Tensor[(15, 8, 8), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) {
  %1021 = @func_6689() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %1022 = cast(meta[relay.Constant][68] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1023 = cast(meta[relay.Constant][69] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %1024 = reshape(%1022, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %1025 = reshape(%1023, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %1026 = @func_6193(%1024, %1025) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(15, 8, 8), bool], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) */;
  %1027 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %1028 = %1021.2;
  %1029 = %1026.1;
  %1030 = %1027.0;
  (%1028, %1029, meta[relay.Constant][68] /* ty=Tensor[(1568), float64] */, meta[relay.Constant][69] /* ty=Tensor[(6), float64] */, %1030)
}

def @func_9545() -> (Tensor[(6, 11, 6), bool],) {
  %1031 = @func_6689() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %1032 = %1031.1;
  (%1032,)
}

def @func_9366(%var_9340: Tensor[(90), float32], %var_9346: Tensor[(960), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(3, 15, 2), float32], Tensor[(75), float32], Tensor[(90), float32], Tensor[(8, 12, 10), float64], Tensor[(960), float64]) {
  %1033 = @func_8993() /* ty=(Tensor[(14, 8, 3), bool],) */;
  %1034 = cast(meta[relay.Constant][70] /* ty=Tensor[(75), float32] */, dtype="float32") /* ty=Tensor[(75), float32] */;
  %1035 = cast(%var_9340, dtype="float32") /* ty=Tensor[(90), float32] */;
  %1036 = reshape(%1034, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), float32] */;
  %1037 = reshape(%1035, newshape=[90, 1]) /* ty=Tensor[(90, 1), float32] */;
  %1038 = @func_4609(%1036, %1037) /* ty=(Tensor[(15, 5, 1), float32], Tensor[(3, 15, 2), float32], Tensor[(90, 1), float32]) */;
  %1039 = cast(%var_9346, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1040 = reshape(%1039, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %1041 = @func_6703(%1040) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(336), float64]) */;
  %1042 = %1033.0;
  %1043 = %1038.1;
  %1044 = %1041.0;
  (%1042, %1043, meta[relay.Constant][70] /* ty=Tensor[(75), float32] */, %var_9340, %1044, %var_9346)
}

def @func_5718() -> (Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) {
  %1045 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %1046 = cast(meta[relay.Constant][71] /* ty=Tensor[(396), int8] */, dtype="int8") /* ty=Tensor[(396), int8] */;
  %1047 = reshape(%1046, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int8] */;
  %1048 = %1045.0;
  %1049 = @func_884(%1047) /* ty=Tensor[(6, 11, 6), bool] */;
  (%1048, %1049, meta[relay.Constant][71] /* ty=Tensor[(396), int8] */)
}

def @func_9280() -> Tensor[(16, 15, 9), float32] {
  %1050 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
  %1051 = %1050.0;
  %1052 = cast(%1051, dtype="float32") /* ty=Tensor[(16, 15, 9), float32] */;
  %1053 = acos(%1052) /* ty=Tensor[(16, 15, 9), float32] */;
  %1054 = cast(%1053, dtype="float32") /* ty=Tensor[(16, 15, 9), float32] */;
  tan(%1054) /* ty=Tensor[(16, 15, 9), float32] */
}

def @func_5589(%var_5569: Tensor[(9, 7, 11), float64]) -> (Tensor[(9, 7, 11), int16],) {
  %1055 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %1056 = %1055.0;
  %1057 = cast(%var_5569, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
  %1058 = shape_of(%1056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1059 = cast(%1056, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
  %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1061 = add(%1059, %1060) /* ty=Tensor[(9, 7, 11), int16] */;
  (%1061,)
}

def @func_176(%var_146: Tensor[(15, 10, 12), uint8]) -> Tensor[(15, 10, 12), float32] {
  %1062 = cast(%var_146, dtype="bool") /* ty=Tensor[(15, 10, 12), bool] */;
  %1063 = shape_of(meta[relay.Constant][72] /* ty=Tensor[(15, 10, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1064 = cast(meta[relay.Constant][72] /* ty=Tensor[(15, 10, 12), uint8] */, dtype="bool") /* ty=Tensor[(15, 10, 12), bool] */;
  %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1066 = greater(%1064, %1065) /* ty=Tensor[(15, 10, 12), bool] */;
  %1067 = cast(%1066, dtype="float64") /* ty=Tensor[(15, 10, 12), float64] */;
  %1068 = asin(%1067) /* ty=Tensor[(15, 10, 12), float64] */;
  %1069 = cast(%1068, dtype="float32") /* ty=Tensor[(15, 10, 12), float32] */;
  %1070 = shape_of(%var_146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1071 = cast(%var_146, dtype="float32") /* ty=Tensor[(15, 10, 12), float32] */;
  %1072 = dyn.reshape(%1069, %1070, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  minimum(%1071, %1072) /* ty=Tensor[(15, 10, 12), float32] */
}

def @func_8940() -> Tensor[(336), float64] {
  %1073 = @func_6725() /* ty=(Tensor[(336), float64],) */;
  %1073.0
}

def @func_6992() -> (Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) {
  %1074 = @func_6725() /* ty=(Tensor[(336), float64],) */;
  %1075 = cast(meta[relay.Constant][73] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1076 = reshape(%1075, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %1077 = @func_4452(%1076) /* ty=(Tensor[(6, 3, 1), float32],) */;
  %1078 = @func_5843() /* ty=Tensor[(14, 8, 3), bool] */;
  %1079 = %1074.0;
  %1080 = %1077.0;
  (%1078, %1079, %1080, meta[relay.Constant][73] /* ty=Tensor[(18), float32] */)
}

def @func_13445() -> (Tensor[(9, 7, 11), float64], Tensor[(6), float64], Tensor[(336), bool], Tensor[(6), float64]) {
  %1081 = cast(meta[relay.Constant][74] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %1082 = cast(meta[relay.Constant][75] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %1083 = reshape(%1081, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), bool] */;
  %1084 = reshape(%1082, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %1085 = @func_7798(%1083, %1084) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(1800), uint8]) */;
  %1086 = @func_11953() /* ty=Tensor[(9, 7, 11), float64] */;
  %1087 = %1085.2;
  (%1086, %1087, meta[relay.Constant][74] /* ty=Tensor[(336), bool] */, meta[relay.Constant][75] /* ty=Tensor[(6), float64] */)
}

def @main(%var_14551: Tensor[(78), float32]) -> (Tensor[(9, 7, 11), float32], Tensor[(7, 99), float32], Tensor[(78), float32]) {
  %1088 = @func_13840() /* ty=Tensor[(9, 7, 11), float32] */;
  %1089 = cast(%1088, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %1090 = cast(%var_14551, dtype="float32") /* ty=Tensor[(78), float32] */;
  %1091 = reshape(%1089, newshape=[7, 99]) /* ty=Tensor[(7, 99), float64] */;
  %1092 = reshape(%1090, newshape=[78, 1]) /* ty=Tensor[(78, 1), float32] */;
  %1093 = @func_13767(%1091, %1092) /* ty=(Tensor[(396), int8], Tensor[(16, 15, 9), bool], Tensor[(2, 13, 3), float32], Tensor[(78, 1), float32], Tensor[(7, 99), bool]) */;
  %1094 = %1093.4;
  %1095 = cast(%1094, dtype="float32") /* ty=Tensor[(7, 99), float32] */;
  %1096 = cast(%var_14551, dtype="float32") /* ty=Tensor[(78), float32] */;
  %1097 = atanh(%1095) /* ty=Tensor[(7, 99), float32] */;
  %1098 = acos(%1096) /* ty=Tensor[(78), float32] */;
  (%1088, %1097, %1098)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11760() -> Tensor[(9, 7, 11), float64] {
  @func_11758() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_9416() -> Tensor[(9, 7, 11), float32] {
  %1 = fn () -> Tensor[(9, 7, 11), float32] {
    %0 = @func_6498() /* ty=(Tensor[(396), int8], Tensor[(9, 7, 11), float32]) */;
    %0.1
  };
  %1() /* ty=Tensor[(9, 7, 11), float32] */
}

def @func_11953() -> Tensor[(9, 7, 11), float64] {
  %2 = @func_9584() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
  %2.1
}

def @func_10028() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) {
  %10 = fn () -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) {
    %3 = @func_6073() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %4 = %3.0;
    %5 = cast(%4, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
    %6 = @func_9526() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
    %7 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
    %8 = atanh(%5) /* ty=Tensor[(9, 7, 11), float32] */;
    %9 = %6.1;
    (%7, %8, %9)
  };
  %10() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */
}

def @func_10199(%var_10197: Tensor[(3, 30), float32], %var_10198: Tensor[(2, 480), float64]) -> (Tensor[(3, 30), float32], Tensor[(2, 480), float64], Tensor[(6, 3, 75), bool]) {
  %26 = fn (%var_10166: Tensor[(3, 30), float32], %var_10167: Tensor[(2, 480), float64]) -> (Tensor[(3, 30), float32], Tensor[(2, 480), float64], Tensor[(6, 3, 75), bool]) {
    %11 = @func_8159() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) */;
    %12 = %11.1;
    %13 = cast(%12, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
    %14 = atan(%13) /* ty=Tensor[(6, 3, 1), float32] */;
    %15 = cast(%14, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
    %16 = asin(%15) /* ty=Tensor[(6, 3, 1), float32] */;
    %17 = cast(%var_10166, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
    %18 = cast(%var_10167, dtype="float64") /* ty=Tensor[(2, 480), float64] */;
    %19 = reshape(%17, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %20 = reshape(%18, newshape=[960]) /* ty=Tensor[(960), float64] */;
    %21 = @func_9366(%19, %20) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(3, 15, 2), float32], Tensor[(75), float32], Tensor[(90), float32], Tensor[(8, 12, 10), float64], Tensor[(960), float64]) */;
    %22 = %21.2;
    %23 = cast(%16, dtype="bool") /* ty=Tensor[(6, 3, 1), bool] */;
    %24 = cast(%22, dtype="bool") /* ty=Tensor[(75), bool] */;
    %25 = not_equal(%23, %24) /* ty=Tensor[(6, 3, 75), bool] */;
    (%var_10166, %var_10167, %25)
  };
  %26(%var_10197, %var_10198) /* ty=(Tensor[(3, 30), float32], Tensor[(2, 480), float64], Tensor[(6, 3, 75), bool]) */
}

def @func_7920() -> Tensor[(9, 7, 11), float64] {
  %28 = fn () -> Tensor[(9, 7, 11), float64] {
    %27 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
    %27.0
  };
  %28() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_13538() -> Tensor[(396), int8] {
  @func_13536() /* ty=Tensor[(396), int8] */
}

def @func_6296(%var_6295: Tensor[(240), int64]) -> (Tensor[(14, 8, 3), bool], Tensor[(16, 8, 6), float64], Tensor[(60), int64], Tensor[(240), int64], Tensor[(924), float64]) {
  %38 = fn (%var_6259: Tensor[(240), int64]) -> (Tensor[(14, 8, 3), bool], Tensor[(16, 8, 6), float64], Tensor[(60), int64], Tensor[(240), int64], Tensor[(924), float64]) {
    %29 = cast(meta[relay.Constant][0] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %30 = cast(%var_6259, dtype="int64") /* ty=Tensor[(240), int64] */;
    %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %32 = reshape(%29, newshape=[1, 15, 4]) /* ty=Tensor[(1, 15, 4), int64] */;
    %33 = reshape(%30, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), int64] */;
    %34 = reshape(%31, newshape=[924]) /* ty=Tensor[(924), float64] */;
    %35 = @func_5433(%32, %33, %34) /* ty=(Tensor[(4, 15, 4), int64], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(192, 4), bool]) */;
    %36 = @func_5843() /* ty=Tensor[(14, 8, 3), bool] */;
    %37 = %35.3;
    (%36, %37, meta[relay.Constant][0] /* ty=Tensor[(60), int64] */, %var_6259, meta[relay.Constant][1] /* ty=Tensor[(924), float64] */)
  };
  %38(%var_6295) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(16, 8, 6), float64], Tensor[(60), int64], Tensor[(240), int64], Tensor[(924), float64]) */
}

def @func_6993() -> (Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) {
  %46 = fn () -> (Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) {
    %39 = @func_6725() /* ty=(Tensor[(336), float64],) */;
    %40 = cast(meta[relay.Constant][2] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
    %41 = reshape(%40, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
    %42 = @func_4452(%41) /* ty=(Tensor[(6, 3, 1), float32],) */;
    %43 = @func_5843() /* ty=Tensor[(14, 8, 3), bool] */;
    %44 = %39.0;
    %45 = %42.0;
    (%43, %44, %45, meta[relay.Constant][2] /* ty=Tensor[(18), float32] */)
  };
  %46() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */
}

def @func_7468(%var_7466: Tensor[(4, 13, 9), uint16], %var_7467: Tensor[(3, 2), float64]) -> (Tensor[(4, 13, 9), float32], Tensor[(1800), uint8], Tensor[(3, 2), float64], Tensor[(1800), uint8]) {
  %58 = fn (%var_7434: Tensor[(4, 13, 9), uint16], %var_7461: Tensor[(3, 2), float64]) -> (Tensor[(4, 13, 9), float32], Tensor[(1800), uint8], Tensor[(3, 2), float64], Tensor[(1800), uint8]) {
    %47 = cast(meta[relay.Constant][3] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %48 = cast(%var_7434, dtype="uint16") /* ty=Tensor[(4, 13, 9), uint16] */;
    %49 = bitwise_or(%47, %48) /* ty=Tensor[(4, 13, 9), uint16] */;
    %50 = cast(%49, dtype="float32") /* ty=Tensor[(4, 13, 9), float32] */;
    %51 = cast(%var_7461, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
    %52 = cast(meta[relay.Constant][4] /* ty=Tensor[(1800), uint8] */, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
    %53 = reshape(%51, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %54 = reshape(%52, newshape=[1800]) /* ty=Tensor[(1800), uint8] */;
    %55 = @func_6379(%53, %54) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(1568, 1), float64], Tensor[(6), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8], Tensor[(192, 4), bool], Tensor[(60), int64], Tensor[(24, 10), int64], Tensor[(14, 66), float64], Tensor[(9, 7, 11), float64], Tensor[(4, 15, 4), int64]) */;
    %56 = acos(%50) /* ty=Tensor[(4, 13, 9), float32] */;
    %57 = %55.5;
    (%56, %57, %var_7461, meta[relay.Constant][4] /* ty=Tensor[(1800), uint8] */)
  };
  %58(%var_7466, %var_7467) /* ty=(Tensor[(4, 13, 9), float32], Tensor[(1800), uint8], Tensor[(3, 2), float64], Tensor[(1800), uint8]) */
}

def @func_11423(%var_11393: Tensor[(5, 9, 6), float64], %var_11397: Tensor[(5, 9, 6), float64]) -> (Tensor[(5, 9, 6), float64], Tensor[(5, 9, 6), int16], Tensor[(8, 12, 10), float64], Tensor[(240, 4), float64]) {
  %59 = cast(%var_11393, dtype="float64") /* ty=Tensor[(5, 9, 6), float64] */;
  %60 = cast(%var_11397, dtype="int16") /* ty=Tensor[(5, 9, 6), int16] */;
  %61 = shape_of(%var_11393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%var_11393, dtype="int16") /* ty=Tensor[(5, 9, 6), int16] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %64 = cast(meta[relay.Constant][5] /* ty=Tensor[(240, 4), float64] */, dtype="float64") /* ty=Tensor[(240, 4), float64] */;
  %65 = reshape(%64, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %66 = @func_6703(%65) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(336), float64]) */;
  %67 = asinh(%59) /* ty=Tensor[(5, 9, 6), float64] */;
  %68 = add(%62, %63) /* ty=Tensor[(5, 9, 6), int16] */;
  %69 = %66.0;
  (%67, %68, %69, meta[relay.Constant][5] /* ty=Tensor[(240, 4), float64] */)
}

def @func_9143() -> (Tensor[(9, 7, 11), float64],) {
  @func_9141() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_13158(%var_13156: Tensor[(336), bool], %var_13157: Tensor[(2, 264), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(336), bool], Tensor[(6), float64], Tensor[(1568), float64], Tensor[(8, 98), uint16], Tensor[(2, 264), float32]) {
  @func_13154(%var_13156, %var_13157) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(336), bool], Tensor[(6), float64], Tensor[(1568), float64], Tensor[(8, 98), uint16], Tensor[(2, 264), float32]) */
}

def @func_12986(%var_12967: Tensor[(5, 3, 14), bool]) -> (Tensor[(5, 3, 14), bool], Tensor[(9, 7, 11), int16], Tensor[(231, 3), float64]) {
  %70 = cast(%var_12967, dtype="bool") /* ty=Tensor[(5, 3, 14), bool] */;
  %71 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(5, 3, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 3, 14), bool] */, dtype="bool") /* ty=Tensor[(5, 3, 14), bool] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %74 = cast(meta[relay.Constant][7] /* ty=Tensor[(231, 3), float64] */, dtype="float64") /* ty=Tensor[(231, 3), float64] */;
  %75 = reshape(%74, newshape=[9, 7, 11]) /* ty=Tensor[(9, 7, 11), float64] */;
  %76 = logical_or(%72, %73) /* ty=Tensor[(5, 3, 14), bool] */;
  %77 = @func_7212(%75) /* ty=Tensor[(9, 7, 11), int16] */;
  (%76, %77, meta[relay.Constant][7] /* ty=Tensor[(231, 3), float64] */)
}

def @func_13862() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), int16]) {
  %78 = @func_12663() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool]) */;
  %79 = %78.1;
  %80 = cast(%79, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %81 = reshape(%80, newshape=[9, 7, 11]) /* ty=Tensor[(9, 7, 11), float64] */;
  %82 = @func_5589(%81) /* ty=(Tensor[(9, 7, 11), int16],) */;
  %83 = %82.0;
  (%79, %83)
}

def @func_887(%var_885: Tensor[(6, 11, 6), int8]) -> Tensor[(6, 11, 6), bool] {
  @func_884(%var_885) /* ty=Tensor[(6, 11, 6), bool] */
}

def @func_4609(%var_4601: Tensor[(15, 5, 1), float32], %var_4607: Tensor[(90, 1), float32]) -> (Tensor[(15, 5, 1), float32], Tensor[(3, 15, 2), float32], Tensor[(90, 1), float32]) {
  %84 = cast(%var_4601, dtype="float32") /* ty=Tensor[(15, 5, 1), float32] */;
  %85 = cast(%var_4607, dtype="float32") /* ty=Tensor[(90, 1), float32] */;
  %86 = reshape(%85, newshape=[3, 15, 2]) /* ty=Tensor[(3, 15, 2), float32] */;
  %87 = cosh(%84) /* ty=Tensor[(15, 5, 1), float32] */;
  %88 = @func_4562(%86) /* ty=Tensor[(3, 15, 2), float32] */;
  (%87, %88, %var_4607)
}

def @func_11350(%var_11349: Tensor[(75), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(90, 1), float32], Tensor[(75), float32], Tensor[(90), float32]) {
  %97 = fn (%var_11327: Tensor[(75), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(90, 1), float32], Tensor[(75), float32], Tensor[(90), float32]) {
    %89 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
    %90 = cast(%var_11327, dtype="float32") /* ty=Tensor[(75), float32] */;
    %91 = cast(meta[relay.Constant][8] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %92 = reshape(%90, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), float32] */;
    %93 = reshape(%91, newshape=[90, 1]) /* ty=Tensor[(90, 1), float32] */;
    %94 = @func_4609(%92, %93) /* ty=(Tensor[(15, 5, 1), float32], Tensor[(3, 15, 2), float32], Tensor[(90, 1), float32]) */;
    %95 = %89.2;
    %96 = %94.2;
    (%95, %96, %var_11327, meta[relay.Constant][8] /* ty=Tensor[(90), float32] */)
  };
  %97(%var_11349) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(90, 1), float32], Tensor[(75), float32], Tensor[(90), float32]) */
}

def @func_9164() -> (Tensor[(9, 7, 11), float64],) {
  %100 = fn () -> (Tensor[(9, 7, 11), float64],) {
    %98 = @func_8522() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %99 = %98.0;
    (%99,)
  };
  %100() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_12209() -> (Tensor[(9, 7, 11), float64],) {
  @func_12207() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_10074() -> (Tensor[(14, 8, 3), bool],) {
  %101 = @func_8993() /* ty=(Tensor[(14, 8, 3), bool],) */;
  %102 = %101.0;
  (%102,)
}

def @func_10235() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) {
  %106 = fn () -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) {
    %103 = @func_8522() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %104 = %103.0;
    %105 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
    (%104, %105)
  };
  %106() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) */
}

def @func_12912() -> (Tensor[(336), float64], Tensor[(16, 15, 9), bool], Tensor[(16, 15, 9), float32]) {
  %112 = fn () -> (Tensor[(336), float64], Tensor[(16, 15, 9), bool], Tensor[(16, 15, 9), float32]) {
    %107 = @func_6725() /* ty=(Tensor[(336), float64],) */;
    %108 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
    %109 = %107.0;
    %110 = %108.0;
    %111 = @func_9280() /* ty=Tensor[(16, 15, 9), float32] */;
    (%109, %110, %111)
  };
  %112() /* ty=(Tensor[(336), float64], Tensor[(16, 15, 9), bool], Tensor[(16, 15, 9), float32]) */
}

def @func_10612(%var_10603: Tensor[(528), float32], %var_10604: Tensor[(6), float64], %var_10605: Tensor[(75), float32], %var_10606: Tensor[(90, 1), float32], %var_10607: Tensor[(924), float64], %var_10608: Tensor[(8, 56), float32], %var_10609: Tensor[(378), float64], %var_10610: int64, %var_10611: Tensor[(160), int64]) -> (Tensor[(9, 7, 11), float64], Tensor[(56, 14), uint16], Tensor[(528), float32], Tensor[(6), float64], Tensor[(75), float32], Tensor[(90, 1), float32], Tensor[(6, 3, 1), float32], Tensor[(6), float64], Tensor[(924), float64], Tensor[(8, 14, 4), float32], Tensor[(8, 56), float32], Tensor[(16, 7, 14), float64], Tensor[(14, 8, 3), bool], Tensor[(2, 13, 3), float32], Tensor[(78), float32], Tensor[(90, 1568), float32], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(15, 8, 8), bool], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(480, 2), float32], Tensor[(5, 189), float32], Tensor[(90, 1568), uint32]) {
  %196 = fn (%var_10418: Tensor[(528), float32], %var_10420: Tensor[(6), float64], %var_10431: Tensor[(75), float32], %var_10432: Tensor[(90, 1), float32], %var_10470: Tensor[(924), float64], %var_10490: Tensor[(8, 56), float32], %var_10579: Tensor[(378), float64], %var_10589: int64, %var_10590: Tensor[(160), int64]) -> (Tensor[(9, 7, 11), float64], Tensor[(56, 14), uint16], Tensor[(528), float32], Tensor[(6), float64], Tensor[(75), float32], Tensor[(90, 1), float32], Tensor[(6, 3, 1), float32], Tensor[(6), float64], Tensor[(924), float64], Tensor[(8, 14, 4), float32], Tensor[(8, 56), float32], Tensor[(16, 7, 14), float64], Tensor[(14, 8, 3), bool], Tensor[(2, 13, 3), float32], Tensor[(78), float32], Tensor[(90, 1568), float32], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(15, 8, 8), bool], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(480, 2), float32], Tensor[(5, 189), float32], Tensor[(90, 1568), uint32]) {
    %113 = @func_10234() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) */;
    %114 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
    %115 = cast(%var_10470, dtype="float64") /* ty=Tensor[(924), float64] */;
    %116 = reshape(%115, newshape=[924]) /* ty=Tensor[(924), float64] */;
    %117 = @func_7935(%116) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) */;
    %118 = cast(%var_10490, dtype="float32") /* ty=Tensor[(8, 56), float32] */;
    %119 = reshape(%118, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
    %120 = @func_5376(%119) /* ty=(Tensor[(8, 14, 4), float32],) */;
    %121 = cast(meta[relay.Constant][9] /* ty=Tensor[(56, 14), uint16] */, dtype="uint16") /* ty=Tensor[(56, 14), uint16] */;
    %122 = cast(%var_10418, dtype="float32") /* ty=Tensor[(528), float32] */;
    %123 = cast(meta[relay.Constant][10] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %124 = cast(%var_10420, dtype="float64") /* ty=Tensor[(6), float64] */;
    %125 = reshape(%121, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), uint16] */;
    %126 = reshape(%122, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %127 = reshape(%123, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
    %128 = reshape(%124, newshape=[1, 6]) /* ty=Tensor[(1, 6), float64] */;
    %129 = @func_8704(%125, %126, %127, %128) /* ty=(Tensor[(7, 14, 8), uint16], Tensor[(1568), float64], Tensor[(528), float32], Tensor[(1568), float64], Tensor[(1, 6), float64], Tensor[(1, 2, 3), float64]) */;
    %130 = %129.3;
    %131 = cast(%130, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %132 = reshape(%131, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
    %133 = @func_5818(%132) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 7, 14), float64], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64]) */;
    %134 = cast(%130, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %135 = asinh(%134) /* ty=Tensor[(1568), float64] */;
    %136 = cast(%135, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %137 = reshape(%136, newshape=[8, 196]) /* ty=Tensor[(8, 196), float64] */;
    %138 = @func_5984(%137) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64], Tensor[(8, 196), float64]) */;
    %139 = cast(meta[relay.Constant][11] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
    %140 = reshape(%139, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float32] */;
    %141 = cast(%var_10431, dtype="float32") /* ty=Tensor[(75), float32] */;
    %142 = cast(%var_10432, dtype="float32") /* ty=Tensor[(90, 1), float32] */;
    %143 = reshape(%141, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), float32] */;
    %144 = reshape(%142, newshape=[90, 1]) /* ty=Tensor[(90, 1), float32] */;
    %145 = @func_4609(%143, %144) /* ty=(Tensor[(15, 5, 1), float32], Tensor[(3, 15, 2), float32], Tensor[(90, 1), float32]) */;
    %146 = %145.2;
    %147 = cast(%146, dtype="int16") /* ty=Tensor[(90, 1), int16] */;
    %148 = cast(meta[relay.Constant][10] /* ty=Tensor[(1568), float64] */, dtype="int16") /* ty=Tensor[(1568), int16] */;
    %149 = right_shift(%147, %148) /* ty=Tensor[(90, 1568), int16] */;
    %150 = cast(%135, dtype="bool") /* ty=Tensor[(1568), bool] */;
    %151 = cast(%149, dtype="bool") /* ty=Tensor[(90, 1568), bool] */;
    %152 = logical_and(%150, %151) /* ty=Tensor[(90, 1568), bool] */;
    %153 = cast(%152, dtype="float32") /* ty=Tensor[(90, 1568), float32] */;
    %154 = cast(%var_10579, dtype="float64") /* ty=Tensor[(378), float64] */;
    %155 = reshape(%154, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float64] */;
    %156 = @func_9656(%155) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(9, 7, 11), float64]) */;
    %157 = cast(%var_10589, dtype="int64") /* ty=int64 */;
    %158 = cast(%var_10590, dtype="int64") /* ty=Tensor[(160), int64] */;
    %159 = cast(meta[relay.Constant][12] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
    %160 = cast(meta[relay.Constant][13] /* ty=Tensor[(480, 2), float32] */, dtype="float32") /* ty=Tensor[(480, 2), float32] */;
    %161 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 189), float32] */, dtype="float32") /* ty=Tensor[(5, 189), float32] */;
    %162 = reshape(%157, newshape=[]) /* ty=int64 */;
    %163 = reshape(%158, newshape=[1, 16, 10]) /* ty=Tensor[(1, 16, 10), int64] */;
    %164 = reshape(%159, newshape=[15]) /* ty=Tensor[(15), float32] */;
    %165 = reshape(%160, newshape=[960]) /* ty=Tensor[(960), float32] */;
    %166 = reshape(%161, newshape=[945]) /* ty=Tensor[(945), float32] */;
    %167 = @func_2696(%162, %163, %164, %165, %166) /* ty=(Tensor[(1, 16, 10), int64], Tensor[(1, 15, 1), float32], Tensor[(15), float32], Tensor[(15, 8, 8), bool], Tensor[(960), float32], Tensor[(9, 15, 7), float32], Tensor[(945), float32], Tensor[(15, 8, 8), bool]) */;
    %168 = cast(%152, dtype="float64") /* ty=Tensor[(90, 1568), float64] */;
    %169 = sqrt(%168) /* ty=Tensor[(90, 1568), float64] */;
    %170 = cast(%169, dtype="float64") /* ty=Tensor[(90, 1568), float64] */;
    %171 = asinh(%170) /* ty=Tensor[(90, 1568), float64] */;
    %172 = cast(%171, dtype="float64") /* ty=Tensor[(90, 1568), float64] */;
    %173 = erf(%172) /* ty=Tensor[(90, 1568), float64] */;
    %174 = cast(%173, dtype="float64") /* ty=Tensor[(90, 1568), float64] */;
    %175 = sinh(%174) /* ty=Tensor[(90, 1568), float64] */;
    %176 = cast(%171, dtype="float32") /* ty=Tensor[(90, 1568), float32] */;
    %177 = shape_of(%169, dtype="int32") /* ty=Tensor[(2), int32] */;
    %178 = cast(%169, dtype="float32") /* ty=Tensor[(90, 1568), float32] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %180 = floor_divide(%178, %179) /* ty=Tensor[(90, 1568), float32] */;
    %181 = cast(%180, dtype="uint32") /* ty=Tensor[(90, 1568), uint32] */;
    %182 = shape_of(%175, dtype="int32") /* ty=Tensor[(2), int32] */;
    %183 = cast(%175, dtype="uint32") /* ty=Tensor[(90, 1568), uint32] */;
    %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %185 = %113.1;
    %186 = %114.2;
    %187 = %117.3;
    %188 = %120.0;
    %189 = %133.2;
    %190 = %138.0;
    %191 = @func_5343(%140) /* ty=Tensor[(2, 13, 3), float32] */;
    %192 = cosh(%153) /* ty=Tensor[(90, 1568), float32] */;
    %193 = %156.1;
    %194 = %167.7;
    %195 = minimum(%183, %184) /* ty=Tensor[(90, 1568), uint32] */;
    (%185, meta[relay.Constant][9] /* ty=Tensor[(56, 14), uint16] */, %var_10418, %var_10420, %var_10431, %var_10432, %186, %187, %var_10470, %188, %var_10490, %189, %190, %191, meta[relay.Constant][11] /* ty=Tensor[(78), float32] */, %192, %193, %var_10579, %194, %var_10589, %var_10590, meta[relay.Constant][12] /* ty=Tensor[(15), float32] */, meta[relay.Constant][13] /* ty=Tensor[(480, 2), float32] */, meta[relay.Constant][14] /* ty=Tensor[(5, 189), float32] */, %195)
  };
  %196(%var_10603, %var_10604, %var_10605, %var_10606, %var_10607, %var_10608, %var_10609, %var_10610, %var_10611) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(56, 14), uint16], Tensor[(528), float32], Tensor[(6), float64], Tensor[(75), float32], Tensor[(90, 1), float32], Tensor[(6, 3, 1), float32], Tensor[(6), float64], Tensor[(924), float64], Tensor[(8, 14, 4), float32], Tensor[(8, 56), float32], Tensor[(16, 7, 14), float64], Tensor[(14, 8, 3), bool], Tensor[(2, 13, 3), float32], Tensor[(78), float32], Tensor[(90, 1568), float32], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(15, 8, 8), bool], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(480, 2), float32], Tensor[(5, 189), float32], Tensor[(90, 1568), uint32]) */
}

def @func_11359() -> (Tensor[(9, 7, 11), float64],) {
  @func_11357() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_4962(%var_4960: int32, %var_4961: Tensor[(2, 4, 3), int32]) -> Tensor[(2, 4, 3), bool] {
  @func_4958(%var_4960, %var_4961) /* ty=Tensor[(2, 4, 3), bool] */
}

def @func_5503() -> (Tensor[(9, 7, 11), float64],) {
  %199 = fn () -> (Tensor[(9, 7, 11), float64],) {
    %197 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 7, 11), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
    %198 = log10(%197) /* ty=Tensor[(9, 7, 11), float64] */;
    (%198,)
  };
  %199() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_9800() -> (Tensor[(336), float64], Tensor[(9, 7, 11), float64]) {
  %203 = fn () -> (Tensor[(336), float64], Tensor[(9, 7, 11), float64]) {
    %200 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %201 = @func_9208() /* ty=Tensor[(336), float64] */;
    %202 = %200.0;
    (%201, %202)
  };
  %203() /* ty=(Tensor[(336), float64], Tensor[(9, 7, 11), float64]) */
}

def @func_6689() -> (Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) {
  %204 = cast(meta[relay.Constant][16] /* ty=Tensor[(396), int8] */, dtype="int8") /* ty=Tensor[(396), int8] */;
  %205 = reshape(%204, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int8] */;
  %206 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
  %207 = @func_884(%205) /* ty=Tensor[(6, 11, 6), bool] */;
  (%206, %207, meta[relay.Constant][16] /* ty=Tensor[(396), int8] */)
}

def @func_5962(%var_5960: Tensor[(7, 4, 8), float32], %var_5961: Tensor[(15), float32]) -> (Tensor[(7, 4, 8), float32], Tensor[(15), float32], Tensor[(15), float32]) {
  %214 = fn (%var_5933: Tensor[(7, 4, 8), float32], %var_5950: Tensor[(15), float32]) -> (Tensor[(7, 4, 8), float32], Tensor[(15), float32], Tensor[(15), float32]) {
    %208 = cast(%var_5933, dtype="float32") /* ty=Tensor[(7, 4, 8), float32] */;
    %209 = cast(%var_5950, dtype="float32") /* ty=Tensor[(15), float32] */;
    %210 = reshape(%209, newshape=[15]) /* ty=Tensor[(15), float32] */;
    %211 = @func_5657(%210) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(1, 15, 1), float32], Tensor[(15), float32]) */;
    %212 = erf(%208) /* ty=Tensor[(7, 4, 8), float32] */;
    %213 = %211.2;
    (%212, %213, %var_5950)
  };
  %214(%var_5960, %var_5961) /* ty=(Tensor[(7, 4, 8), float32], Tensor[(15), float32], Tensor[(15), float32]) */
}

def @func_12055() -> Tensor[(336), float64] {
  %216 = fn () -> Tensor[(336), float64] {
    %215 = @func_10676() /* ty=(Tensor[(336), float64], Tensor[(9, 7, 11), float64]) */;
    %215.0
  };
  %216() /* ty=Tensor[(336), float64] */
}

def @func_9584() -> (Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) {
  %217 = @func_9061() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %218 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
  %219 = %217.0;
  (%218, %219)
}

def @func_8625() -> Tensor[(396), int8] {
  %220 = fn () -> Tensor[(396), int8] {
    @func_7264() /* ty=Tensor[(396), int8] */
  };
  %220() /* ty=Tensor[(396), int8] */
}

def @func_4562(%var_4540: Tensor[(3, 15, 2), float32]) -> Tensor[(3, 15, 2), float32] {
  %221 = cast(%var_4540, dtype="float32") /* ty=Tensor[(3, 15, 2), float32] */;
  tan(%221) /* ty=Tensor[(3, 15, 2), float32] */
}

def @func_9063() -> (Tensor[(9, 7, 11), float64],) {
  @func_9061() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_1754(%var_1730: Tensor[(1, 15, 1), float32]) -> (Tensor[(1, 15, 1), float32],) {
  %222 = cast(%var_1730, dtype="float32") /* ty=Tensor[(1, 15, 1), float32] */;
  %223 = sigmoid(%222) /* ty=Tensor[(1, 15, 1), float32] */;
  (%223,)
}

def @func_2703(%var_2698: int64, %var_2699: Tensor[(1, 16, 10), int64], %var_2700: Tensor[(15), float32], %var_2701: Tensor[(960), float32], %var_2702: Tensor[(945), float32]) -> (Tensor[(1, 16, 10), int64], Tensor[(1, 15, 1), float32], Tensor[(15), float32], Tensor[(15, 8, 8), bool], Tensor[(960), float32], Tensor[(9, 15, 7), float32], Tensor[(945), float32], Tensor[(15, 8, 8), bool]) {
  @func_2696(%var_2698, %var_2699, %var_2700, %var_2701, %var_2702) /* ty=(Tensor[(1, 16, 10), int64], Tensor[(1, 15, 1), float32], Tensor[(15), float32], Tensor[(15, 8, 8), bool], Tensor[(960), float32], Tensor[(9, 15, 7), float32], Tensor[(945), float32], Tensor[(15, 8, 8), bool]) */
}

def @func_8878() -> (Tensor[(9, 7, 11), float64],) {
  %226 = fn () -> (Tensor[(9, 7, 11), float64],) {
    %224 = @func_6073() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %225 = %224.0;
    (%225,)
  };
  %226() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_13899() -> (Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool]) {
  %227 = @func_10154() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32]) */;
  %228 = @func_9545() /* ty=(Tensor[(6, 11, 6), bool],) */;
  %229 = %227.1;
  %230 = %228.0;
  (%229, %230)
}

def @func_5208(%var_5102: Tensor[(7, 2, 4), int64], %var_5136: Tensor[(924), float64]) -> (Tensor[(7, 2, 4), bool], Tensor[(15, 10, 12), float32], Tensor[(900, 2), uint8], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(768), bool], Tensor[(20, 48), float64], Tensor[(15, 8, 8), bool]) {
  %231 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 1, 4), int64] */, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
  %232 = cast(%var_5102, dtype="bool") /* ty=Tensor[(7, 2, 4), bool] */;
  %233 = cast(meta[relay.Constant][18] /* ty=Tensor[(900, 2), uint8] */, dtype="uint8") /* ty=Tensor[(900, 2), uint8] */;
  %234 = reshape(%233, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), uint8] */;
  %235 = cast(%var_5136, dtype="float64") /* ty=Tensor[(924), float64] */;
  %236 = reshape(%235, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %237 = @func_1802(%236) /* ty=(Tensor[(14, 11, 6), float64],) */;
  %238 = cast(meta[relay.Constant][19] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %239 = cast(meta[relay.Constant][19] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %240 = reshape(%238, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %241 = reshape(%239, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %242 = @func_4013(%240, %241) /* ty=(Tensor[(16, 8, 6), float64],) */;
  %243 = cast(meta[relay.Constant][20] /* ty=Tensor[(20, 48), float32] */, dtype="float64") /* ty=Tensor[(20, 48), float64] */;
  %244 = sigmoid(%243) /* ty=Tensor[(20, 48), float64] */;
  %245 = cast(meta[relay.Constant][20] /* ty=Tensor[(20, 48), float32] */, dtype="float32") /* ty=Tensor[(20, 48), float32] */;
  %246 = cast(meta[relay.Constant][20] /* ty=Tensor[(20, 48), float32] */, dtype="float32") /* ty=Tensor[(20, 48), float32] */;
  %247 = reshape(%245, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %248 = reshape(%246, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %249 = @func_1624(%247, %248) /* ty=Tensor[(15, 8, 8), bool] */;
  %250 = cast(meta[relay.Constant][20] /* ty=Tensor[(20, 48), float32] */, dtype="bool") /* ty=Tensor[(20, 48), bool] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="bool") /* ty=Tensor[(15, 8, 8), bool] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %254 = greater_equal(%252, %253) /* ty=Tensor[(15, 8, 8), bool] */;
  %255 = cast(%254, dtype="bool") /* ty=Tensor[(15, 8, 8), bool] */;
  %256 = shape_of(%244, dtype="int32") /* ty=Tensor[(2), int32] */;
  %257 = cast(%244, dtype="bool") /* ty=Tensor[(20, 48), bool] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %259 = logical_and(%257, %258) /* ty=Tensor[(20, 48), bool] */;
  %260 = cast(%259, dtype="float64") /* ty=Tensor[(20, 48), float64] */;
  %261 = cast(%259, dtype="float32") /* ty=Tensor[(20, 48), float32] */;
  %262 = cast(%254, dtype="float32") /* ty=Tensor[(15, 8, 8), float32] */;
  %263 = reshape(%261, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %264 = reshape(%262, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %265 = greater_equal(%231, %232) /* ty=Tensor[(7, 2, 4), bool] */;
  %266 = @func_176(%234) /* ty=Tensor[(15, 10, 12), float32] */;
  %267 = %237.0;
  %268 = %242.0;
  %269 = sinh(%260) /* ty=Tensor[(20, 48), float64] */;
  %270 = @func_1624(%263, %264) /* ty=Tensor[(15, 8, 8), bool] */;
  (%265, %266, meta[relay.Constant][18] /* ty=Tensor[(900, 2), uint8] */, %267, %var_5136, %268, meta[relay.Constant][19] /* ty=Tensor[(768), bool] */, %269, %270)
}

def @func_7937(%var_7936: Tensor[(924), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) {
  %282 = fn (%var_7932: Tensor[(924), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) {
    %271 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
    %272 = cast(meta[relay.Constant][21] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
    %273 = cast(meta[relay.Constant][22] /* ty=Tensor[(1800), uint8] */, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
    %274 = cast(%var_7932, dtype="float64") /* ty=Tensor[(924), float64] */;
    %275 = reshape(%272, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %276 = reshape(%273, newshape=[900, 2]) /* ty=Tensor[(900, 2), uint8] */;
    %277 = reshape(%274, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
    %278 = @func_7758(%275, %276, %277) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(1800), uint8], Tensor[(6), float64], Tensor[(900, 2), uint8], Tensor[(14, 11, 6), float64], Tensor[(154, 6), float64], Tensor[(9, 7, 11), float64]) */;
    %279 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
    %280 = %271.0;
    %281 = %278.0;
    (%279, %280, %281, meta[relay.Constant][21] /* ty=Tensor[(6), float64] */, meta[relay.Constant][22] /* ty=Tensor[(1800), uint8] */, %var_7932)
  };
  %282(%var_7936) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) */
}

def @func_5984(%var_5977: Tensor[(8, 196), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64], Tensor[(8, 196), float64]) {
  %283 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %284 = cast(%var_5977, dtype="float64") /* ty=Tensor[(8, 196), float64] */;
  %285 = reshape(%284, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %286 = @func_5818(%285) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 7, 14), float64], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64]) */;
  %287 = %283.1;
  %288 = %286.0;
  (%287, %288, %var_5977)
}

def @func_9638(%var_9630: Tensor[(12, 5, 16), float64]) -> (Tensor[(12, 5, 16), float64], Tensor[(396), int8]) {
  %289 = cast(%var_9630, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
  %290 = asin(%289) /* ty=Tensor[(12, 5, 16), float64] */;
  %291 = @func_8220() /* ty=Tensor[(396), int8] */;
  (%290, %291)
}

def @func_12663() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool]) {
  %292 = @func_10234() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) */;
  %293 = @func_12148() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) */;
  %294 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
  %295 = %292.0;
  %296 = %293.1;
  %297 = %294.0;
  (%295, %296, %297)
}

def @func_8160() -> (Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) {
  %301 = fn () -> (Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) {
    %298 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %299 = %298.0;
    %300 = @func_8095() /* ty=Tensor[(6, 3, 1), float32] */;
    (%299, %300)
  };
  %301() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) */
}

def @func_12150() -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) {
  @func_12148() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) */
}

def @func_6020() -> Tensor[(9, 7, 11), float64] {
  %302 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %302.0
}

def @func_11955() -> Tensor[(9, 7, 11), float64] {
  @func_11953() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_11072() -> (Tensor[(9, 7, 11), float64],) {
  @func_11070() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_13138() -> Tensor[(16, 15, 9), float32] {
  @func_11221() /* ty=Tensor[(16, 15, 9), float32] */
}

def @func_10154() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32]) {
  %303 = @func_10027() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
  %304 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %305 = %304.0;
  %306 = cast(%305, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
  %307 = %303.0;
  %308 = acos(%306) /* ty=Tensor[(9, 7, 11), float32] */;
  (%307, %308)
}

def @func_13302(%var_13245: Tensor[(468), uint16], %var_13280: Tensor[(2016), float64], %var_13287: Tensor[(210), bool]) -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), int16], Tensor[(693), float64], Tensor[(16, 15, 9), bool], Tensor[(468), uint16], Tensor[(16, 14, 9), float64], Tensor[(2016), float64], Tensor[(231, 3), float64], Tensor[(210), bool]) {
  %309 = @func_10074() /* ty=(Tensor[(14, 8, 3), bool],) */;
  %310 = cast(meta[relay.Constant][23] /* ty=Tensor[(693), float64] */, dtype="float64") /* ty=Tensor[(693), float64] */;
  %311 = reshape(%310, newshape=[9, 7, 11]) /* ty=Tensor[(9, 7, 11), float64] */;
  %312 = @func_12519(%311) /* ty=(Tensor[(336), float64], Tensor[(1568), float64], Tensor[(9, 7, 11), int16]) */;
  %313 = cast(%var_13245, dtype="uint16") /* ty=Tensor[(468), uint16] */;
  %314 = reshape(%313, newshape=[3, 156]) /* ty=Tensor[(3, 156), uint16] */;
  %315 = @func_8674(%314) /* ty=(Tensor[(16, 15, 9), bool], Tensor[(396), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), uint16], Tensor[(154, 6), float64]) */;
  %316 = cast(%var_13280, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %317 = reshape(%316, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %318 = cast(%var_13287, dtype="bool") /* ty=Tensor[(210), bool] */;
  %319 = reshape(%318, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), bool] */;
  %320 = @func_12986(%319) /* ty=(Tensor[(5, 3, 14), bool], Tensor[(9, 7, 11), int16], Tensor[(231, 3), float64]) */;
  %321 = %309.0;
  %322 = %312.2;
  %323 = %315.0;
  %324 = @func_3824(%317) /* ty=Tensor[(16, 14, 9), float64] */;
  %325 = %320.2;
  (%321, %322, meta[relay.Constant][23] /* ty=Tensor[(693), float64] */, %323, %var_13245, %324, %var_13280, %325, %var_13287)
}

def @func_4016(%var_4014: Tensor[(16, 8, 6), bool], %var_4015: Tensor[(16, 8, 6), bool]) -> (Tensor[(16, 8, 6), float64],) {
  %333 = fn (%var_3976: Tensor[(16, 8, 6), bool], %var_3977: Tensor[(16, 8, 6), bool]) -> (Tensor[(16, 8, 6), float64],) {
    %326 = cast(%var_3977, dtype="bool") /* ty=Tensor[(16, 8, 6), bool] */;
    %327 = shape_of(%var_3976, dtype="int32") /* ty=Tensor[(3), int32] */;
    %328 = cast(%var_3976, dtype="bool") /* ty=Tensor[(16, 8, 6), bool] */;
    %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %330 = logical_and(%328, %329) /* ty=Tensor[(16, 8, 6), bool] */;
    %331 = cast(%330, dtype="float64") /* ty=Tensor[(16, 8, 6), float64] */;
    %332 = log(%331) /* ty=Tensor[(16, 8, 6), float64] */;
    (%332,)
  };
  %333(%var_4014, %var_4015) /* ty=(Tensor[(16, 8, 6), float64],) */
}

def @func_5820(%var_5819: Tensor[(1568), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 7, 14), float64], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64]) {
  %348 = fn (%var_5813: Tensor[(1568), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 7, 14), float64], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64]) {
    %334 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %335 = @func_5718() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
    %336 = cast(-0.499441f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %337 = cast(meta[relay.Constant][24] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %338 = cast(%var_5813, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %339 = cast(meta[relay.Constant][25] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
    %340 = reshape(%336, newshape=[]) /* ty=float32 */;
    %341 = reshape(%337, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
    %342 = reshape(%338, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
    %343 = reshape(%339, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %344 = @func_2228(%340, %341, %342, %343) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(16, 7, 14), float64], Tensor[(1568), float64], Tensor[(1800), uint8], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(15, 8, 8), bool], Tensor[(960), float32]) */;
    %345 = %334.0;
    %346 = %335.0;
    %347 = %344.1;
    (%345, %346, %347, -0.499441f /* ty=float32 */, meta[relay.Constant][24] /* ty=Tensor[(528), float32] */, %var_5813, meta[relay.Constant][25] /* ty=Tensor[(6), float64] */)
  };
  %348(%var_5819) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 7, 14), float64], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64]) */
}

def @func_14282(%var_14280: Tensor[(6, 3, 6), bool], %var_14281: Tensor[(6, 3, 6), bool]) -> (Tensor[(6, 3, 6), bool],) {
  %354 = fn (%var_14271: Tensor[(6, 3, 6), bool], %var_14272: Tensor[(6, 3, 6), bool]) -> (Tensor[(6, 3, 6), bool],) {
    %349 = cast(%var_14272, dtype="bool") /* ty=Tensor[(6, 3, 6), bool] */;
    %350 = shape_of(%var_14271, dtype="int32") /* ty=Tensor[(3), int32] */;
    %351 = cast(%var_14271, dtype="bool") /* ty=Tensor[(6, 3, 6), bool] */;
    %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %353 = logical_or(%351, %352) /* ty=Tensor[(6, 3, 6), bool] */;
    (%353,)
  };
  %354(%var_14280, %var_14281) /* ty=(Tensor[(6, 3, 6), bool],) */
}

def @func_12442(%var_12441: Tensor[(6, 3, 12), uint64]) -> (Tensor[(6, 3, 12), uint64], Tensor[(16, 5, 15), uint32], Tensor[(1200), uint32]) {
  %365 = fn (%var_12418: Tensor[(6, 3, 12), uint64]) -> (Tensor[(6, 3, 12), uint64], Tensor[(16, 5, 15), uint32], Tensor[(1200), uint32]) {
    %355 = cast(%var_12418, dtype="uint64") /* ty=Tensor[(6, 3, 12), uint64] */;
    %356 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(6, 3, 12), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %357 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 3, 12), uint64] */, dtype="uint64") /* ty=Tensor[(6, 3, 12), uint64] */;
    %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %359 = cast(meta[relay.Constant][27] /* ty=Tensor[(1200), uint32] */, dtype="uint32") /* ty=Tensor[(1200), uint32] */;
    %360 = cast(meta[relay.Constant][27] /* ty=Tensor[(1200), uint32] */, dtype="uint32") /* ty=Tensor[(1200), uint32] */;
    %361 = reshape(%359, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), uint32] */;
    %362 = reshape(%360, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), uint32] */;
    %363 = maximum(%357, %358) /* ty=Tensor[(6, 3, 12), uint64] */;
    %364 = @func_11495(%361, %362) /* ty=Tensor[(16, 5, 15), uint32] */;
    (%363, %364, meta[relay.Constant][27] /* ty=Tensor[(1200), uint32] */)
  };
  %365(%var_12441) /* ty=(Tensor[(6, 3, 12), uint64], Tensor[(16, 5, 15), uint32], Tensor[(1200), uint32]) */
}

def @func_6463() -> (Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) {
  %366 = cast(meta[relay.Constant][28] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %367 = reshape(%366, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %368 = @func_4828(%367) /* ty=Tensor[(9, 12, 10), float32] */;
  %369 = cast(meta[relay.Constant][28] /* ty=Tensor[(1080), float32] */, dtype="uint8") /* ty=Tensor[(1080), uint8] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%368, dtype="uint8") /* ty=Tensor[(9, 12, 10), uint8] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %373 = cast(meta[relay.Constant][29] /* ty=Tensor[(396), int8] */, dtype="int8") /* ty=Tensor[(396), int8] */;
  %374 = reshape(%373, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int8] */;
  %375 = cast(meta[relay.Constant][30] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %376 = reshape(%375, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %377 = @func_5376(%376) /* ty=(Tensor[(8, 14, 4), float32],) */;
  %378 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
  %379 = bitwise_or(%371, %372) /* ty=Tensor[(9, 12, 10), uint8] */;
  %380 = @func_884(%374) /* ty=Tensor[(6, 11, 6), bool] */;
  %381 = %377.0;
  (%378, %379, %380, meta[relay.Constant][29] /* ty=Tensor[(396), int8] */, %381, meta[relay.Constant][30] /* ty=Tensor[(448), float32] */)
}

def @func_1628(%var_1626: Tensor[(15, 8, 8), float32], %var_1627: Tensor[(15, 8, 8), float32]) -> Tensor[(15, 8, 8), bool] {
  @func_1624(%var_1626, %var_1627) /* ty=Tensor[(15, 8, 8), bool] */
}

def @func_11026() -> (Tensor[(9, 12, 10), uint8], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) {
  %382 = @func_6463() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) */;
  %383 = @func_10154() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32]) */;
  %384 = @func_6073() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %385 = %382.1;
  %386 = %383.0;
  %387 = %384.0;
  (%385, %386, %387)
}

def @func_8522() -> (Tensor[(9, 7, 11), float64],) {
  %388 = @func_8325() /* ty=Tensor[(9, 7, 11), float64] */;
  (%388,)
}

def @func_14346() -> (Tensor[(336), float64],) {
  @func_14344() /* ty=(Tensor[(336), float64],) */
}

def @func_12963() -> (Tensor[(9, 7, 11), float64],) {
  %389 = @func_6632() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %390 = %389.0;
  (%390,)
}

def @func_9770(%var_9730: Tensor[(9, 7, 11), float64], %var_9759: Tensor[(78), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), int32], Tensor[(2, 13, 3), float32], Tensor[(78), float32], Tensor[(16, 8, 6), float64], Tensor[(768), bool]) {
  %391 = @func_8877() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %392 = %391.0;
  %393 = cast(%var_9730, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %394 = shape_of(%392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%392, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %397 = mod(%395, %396) /* ty=Tensor[(9, 7, 11), float64] */;
  %398 = cast(%392, dtype="int32") /* ty=Tensor[(9, 7, 11), int32] */;
  %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%397, dtype="int32") /* ty=Tensor[(9, 7, 11), int32] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %402 = cast(%var_9759, dtype="float32") /* ty=Tensor[(78), float32] */;
  %403 = reshape(%402, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float32] */;
  %404 = cast(meta[relay.Constant][31] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %405 = cast(meta[relay.Constant][31] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %406 = reshape(%404, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %407 = reshape(%405, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %408 = @func_4013(%406, %407) /* ty=(Tensor[(16, 8, 6), float64],) */;
  %409 = @func_8095() /* ty=Tensor[(6, 3, 1), float32] */;
  %410 = bitwise_or(%400, %401) /* ty=Tensor[(9, 7, 11), int32] */;
  %411 = @func_5343(%403) /* ty=Tensor[(2, 13, 3), float32] */;
  %412 = %408.0;
  (%409, %410, %411, %var_9759, %412, meta[relay.Constant][31] /* ty=Tensor[(768), bool] */)
}

def @func_7802(%var_7800: Tensor[(14, 8, 3), bool], %var_7801: Tensor[(6), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(1800), uint8]) {
  @func_7798(%var_7800, %var_7801) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(1800), uint8]) */
}

def @func_5212(%var_5210: Tensor[(7, 2, 4), int64], %var_5211: Tensor[(924), float64]) -> (Tensor[(7, 2, 4), bool], Tensor[(15, 10, 12), float32], Tensor[(900, 2), uint8], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(768), bool], Tensor[(20, 48), float64], Tensor[(15, 8, 8), bool]) {
  @func_5208(%var_5210, %var_5211) /* ty=(Tensor[(7, 2, 4), bool], Tensor[(15, 10, 12), float32], Tensor[(900, 2), uint8], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(768), bool], Tensor[(20, 48), float64], Tensor[(15, 8, 8), bool]) */
}

def @func_6197(%var_6195: Tensor[(1568), float64], %var_6196: Tensor[(6), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(15, 8, 8), bool], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) {
  @func_6193(%var_6195, %var_6196) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(15, 8, 8), bool], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) */
}

def @func_1804(%var_1803: Tensor[(14, 11, 6), float64]) -> (Tensor[(14, 11, 6), float64],) {
  %418 = fn (%var_1786: Tensor[(14, 11, 6), float64]) -> (Tensor[(14, 11, 6), float64],) {
    %413 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 11, 6), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
    %414 = shape_of(%var_1786, dtype="int32") /* ty=Tensor[(3), int32] */;
    %415 = cast(%var_1786, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
    %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %417 = mod(%415, %416) /* ty=Tensor[(14, 11, 6), float64] */;
    (%417,)
  };
  %418(%var_1803) /* ty=(Tensor[(14, 11, 6), float64],) */
}

def @func_6758() -> (Tensor[(9, 7, 11), float64],) {
  %421 = fn () -> (Tensor[(9, 7, 11), float64],) {
    %419 = @func_6145() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %420 = %419.0;
    (%420,)
  };
  %421() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_8999() -> Tensor[(9, 7, 11), float64] {
  %423 = fn () -> Tensor[(9, 7, 11), float64] {
    %422 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
    %422.0
  };
  %423() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_11758() -> Tensor[(9, 7, 11), float64] {
  %424 = @func_10676() /* ty=(Tensor[(336), float64], Tensor[(9, 7, 11), float64]) */;
  %425 = %424.1;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  cos(%426) /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_12113(%var_12110: Tensor[(16, 15, 9), float32], %var_12111: Tensor[(1, 1200), uint32], %var_12112: Tensor[(960), float64]) -> (Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 15, 9), int64], Tensor[(16, 5, 15), uint32], Tensor[(1, 1200), uint32], Tensor[(336), float64], Tensor[(960), float64]) {
  %446 = fn (%var_12092: Tensor[(16, 15, 9), float32], %var_12100: Tensor[(1, 1200), uint32], %var_12107: Tensor[(960), float64]) -> (Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 15, 9), int64], Tensor[(16, 5, 15), uint32], Tensor[(1, 1200), uint32], Tensor[(336), float64], Tensor[(960), float64]) {
    %427 = @func_9584() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
    %428 = @func_11221() /* ty=Tensor[(16, 15, 9), float32] */;
    %429 = cast(%var_12092, dtype="int64") /* ty=Tensor[(16, 15, 9), int64] */;
    %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
    %431 = cast(%428, dtype="int64") /* ty=Tensor[(16, 15, 9), int64] */;
    %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %433 = cast(%var_12100, dtype="uint32") /* ty=Tensor[(1, 1200), uint32] */;
    %434 = cast(%var_12100, dtype="uint32") /* ty=Tensor[(1, 1200), uint32] */;
    %435 = reshape(%433, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), uint32] */;
    %436 = reshape(%434, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), uint32] */;
    %437 = cast(%var_12107, dtype="float64") /* ty=Tensor[(960), float64] */;
    %438 = reshape(%437, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
    %439 = @func_6703(%438) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(336), float64]) */;
    %440 = @func_8095() /* ty=Tensor[(6, 3, 1), float32] */;
    %441 = %427.1;
    %442 = @func_6020() /* ty=Tensor[(9, 7, 11), float64] */;
    %443 = maximum(%431, %432) /* ty=Tensor[(16, 15, 9), int64] */;
    %444 = @func_11495(%435, %436) /* ty=Tensor[(16, 5, 15), uint32] */;
    %445 = %439.1;
    (%440, %441, %442, %443, %444, %var_12100, %445, %var_12107)
  };
  %446(%var_12110, %var_12111, %var_12112) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 15, 9), int64], Tensor[(16, 5, 15), uint32], Tensor[(1, 1200), uint32], Tensor[(336), float64], Tensor[(960), float64]) */
}

def @func_6193(%var_6175: Tensor[(1568), float64], %var_6176: Tensor[(6), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(15, 8, 8), bool], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) {
  %447 = cast(-0.170092f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %448 = cast(meta[relay.Constant][33] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %449 = cast(%var_6175, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %450 = cast(%var_6176, dtype="float64") /* ty=Tensor[(6), float64] */;
  %451 = reshape(%447, newshape=[]) /* ty=float32 */;
  %452 = reshape(%448, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %453 = reshape(%449, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %454 = reshape(%450, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %455 = @func_2228(%451, %452, %453, %454) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(16, 7, 14), float64], Tensor[(1568), float64], Tensor[(1800), uint8], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(15, 8, 8), bool], Tensor[(960), float32]) */;
  %456 = cast(%var_6175, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %457 = reshape(%456, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %458 = @func_5818(%457) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(16, 7, 14), float64], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64]) */;
  %459 = @func_5843() /* ty=Tensor[(14, 8, 3), bool] */;
  %460 = %455.6;
  %461 = %458.1;
  (%459, %460, -0.170092f /* ty=float32 */, meta[relay.Constant][33] /* ty=Tensor[(528), float32] */, %var_6175, %var_6176, %461)
}

def @func_12593(%var_12591: Tensor[(14, 7, 11), float64]) -> (Tensor[(14, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8]) {
  @func_12590(%var_12591) /* ty=(Tensor[(14, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8]) */
}

def @func_12378() -> (Tensor[(396), int8], Tensor[(15, 8, 8), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) {
  %472 = fn () -> (Tensor[(396), int8], Tensor[(15, 8, 8), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) {
    %462 = @func_6689() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
    %463 = cast(meta[relay.Constant][34] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %464 = cast(meta[relay.Constant][35] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
    %465 = reshape(%463, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
    %466 = reshape(%464, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %467 = @func_6193(%465, %466) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(15, 8, 8), bool], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) */;
    %468 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %469 = %462.2;
    %470 = %467.1;
    %471 = %468.0;
    (%469, %470, meta[relay.Constant][34] /* ty=Tensor[(1568), float64] */, meta[relay.Constant][35] /* ty=Tensor[(6), float64] */, %471)
  };
  %472() /* ty=(Tensor[(396), int8], Tensor[(15, 8, 8), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) */
}

def @func_9545() -> (Tensor[(6, 11, 6), bool],) {
  %473 = @func_6689() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %474 = %473.1;
  (%474,)
}

def @func_13453() -> Tensor[(396), int8] {
  %475 = @func_5718() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %475.2
}

def @func_14481(%var_14479: Tensor[(4, 3, 16), bool]) -> Tensor[(4, 3, 16), bool] {
  @func_14478(%var_14479) /* ty=Tensor[(4, 3, 16), bool] */
}

def @func_5845() -> Tensor[(14, 8, 3), bool] {
  @func_5843() /* ty=Tensor[(14, 8, 3), bool] */
}

def @func_13034() -> (Tensor[(336), float64], Tensor[(6, 3, 1), float32]) {
  %476 = @func_8940() /* ty=Tensor[(336), float64] */;
  %477 = @func_8095() /* ty=Tensor[(6, 3, 1), float32] */;
  (%476, %477)
}

def @func_10156() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32]) {
  @func_10154() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32]) */
}

def @func_2460(%var_2459: Tensor[(3, 7, 7), float64]) -> (Tensor[(3, 7, 7), float64],) {
  %480 = fn (%var_2455: Tensor[(3, 7, 7), float64]) -> (Tensor[(3, 7, 7), float64],) {
    %478 = cast(%var_2455, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
    %479 = acos(%478) /* ty=Tensor[(3, 7, 7), float64] */;
    (%479,)
  };
  %480(%var_2459) /* ty=(Tensor[(3, 7, 7), float64],) */
}

def @func_5843() -> Tensor[(14, 8, 3), bool] {
  %481 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %481.1
}

def @func_10076() -> (Tensor[(14, 8, 3), bool],) {
  @func_10074() /* ty=(Tensor[(14, 8, 3), bool],) */
}

def @func_9832() -> (Tensor[(8, 14, 4), float32],) {
  %483 = fn () -> (Tensor[(8, 14, 4), float32],) {
    %482 = @func_6785() /* ty=Tensor[(8, 14, 4), float32] */;
    (%482,)
  };
  %483() /* ty=(Tensor[(8, 14, 4), float32],) */
}

def @func_5659(%var_5658: Tensor[(15), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(1, 15, 1), float32], Tensor[(15), float32]) {
  %490 = fn (%var_5640: Tensor[(15), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(1, 15, 1), float32], Tensor[(15), float32]) {
    %484 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %485 = cast(%var_5640, dtype="float32") /* ty=Tensor[(15), float32] */;
    %486 = reshape(%485, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float32] */;
    %487 = @func_1754(%486) /* ty=(Tensor[(1, 15, 1), float32],) */;
    %488 = %484.0;
    %489 = %487.0;
    (%488, %489, %var_5640)
  };
  %490(%var_5658) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(1, 15, 1), float32], Tensor[(15), float32]) */
}

def @func_12590(%var_12566: Tensor[(14, 7, 11), float64]) -> (Tensor[(14, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8]) {
  %491 = cast(%var_12566, dtype="float64") /* ty=Tensor[(14, 7, 11), float64] */;
  %492 = @func_8877() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %493 = cast(meta[relay.Constant][36] /* ty=Tensor[(1800), uint8] */, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %494 = reshape(%493, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), uint8] */;
  %495 = asin(%491) /* ty=Tensor[(14, 7, 11), float64] */;
  %496 = %492.0;
  %497 = @func_176(%494) /* ty=Tensor[(15, 10, 12), float32] */;
  (%495, %496, %497, meta[relay.Constant][36] /* ty=Tensor[(1800), uint8] */)
}

def @func_6633() -> (Tensor[(9, 7, 11), float64],) {
  %499 = fn () -> (Tensor[(9, 7, 11), float64],) {
    %498 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
    (%498,)
  };
  %499() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_13716() -> (Tensor[(9, 7, 11), float32], Tensor[(6), float64]) {
  @func_13714() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6), float64]) */
}

def @func_13714() -> (Tensor[(9, 7, 11), float32], Tensor[(6), float64]) {
  %500 = @func_9526() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
  %501 = %500.0;
  %502 = cast(%501, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
  %503 = @func_13385() /* ty=(Tensor[(396), int8], Tensor[(9, 7, 11), float32], Tensor[(6), float64]) */;
  %504 = erf(%502) /* ty=Tensor[(9, 7, 11), float32] */;
  %505 = %503.2;
  (%504, %505)
}

def @func_14148() -> (Tensor[(336), float64], Tensor[(12, 5, 16), float64], Tensor[(960), float64]) {
  %506 = @func_6725() /* ty=(Tensor[(336), float64],) */;
  %507 = cast(meta[relay.Constant][37] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %508 = reshape(%507, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), float64] */;
  %509 = @func_9638(%508) /* ty=(Tensor[(12, 5, 16), float64], Tensor[(396), int8]) */;
  %510 = %506.0;
  %511 = %509.0;
  (%510, %511, meta[relay.Constant][37] /* ty=Tensor[(960), float64] */)
}

def @func_2134(%var_2132: Tensor[(9, 15, 7), float32]) -> (Tensor[(9, 15, 7), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) {
  @func_2131(%var_2132) /* ty=(Tensor[(9, 15, 7), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */
}

def @func_12965() -> (Tensor[(9, 7, 11), float64],) {
  @func_12963() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_6852() -> (Tensor[(16, 15, 9), bool],) {
  %519 = fn () -> (Tensor[(16, 15, 9), bool],) {
    %512 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 15, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 9), float64] */;
    %513 = exp(%512) /* ty=Tensor[(16, 15, 9), float64] */;
    %514 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 15, 9), float64] */, dtype="bool") /* ty=Tensor[(16, 15, 9), bool] */;
    %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(3), int32] */;
    %516 = cast(%513, dtype="bool") /* ty=Tensor[(16, 15, 9), bool] */;
    %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %518 = less(%516, %517) /* ty=Tensor[(16, 15, 9), bool] */;
    (%518,)
  };
  %519() /* ty=(Tensor[(16, 15, 9), bool],) */
}

def @func_11495(%var_11490: Tensor[(16, 5, 15), uint32], %var_11491: Tensor[(16, 5, 15), uint32]) -> Tensor[(16, 5, 15), uint32] {
  %520 = cast(%var_11491, dtype="uint32") /* ty=Tensor[(16, 5, 15), uint32] */;
  %521 = shape_of(%var_11490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%var_11490, dtype="uint32") /* ty=Tensor[(16, 5, 15), uint32] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  minimum(%522, %523) /* ty=Tensor[(16, 5, 15), uint32] */
}

def @func_1932(%var_1930: Tensor[(1, 2, 3), float64]) -> (Tensor[(1, 2, 3), float64],) {
  @func_1929(%var_1930) /* ty=(Tensor[(1, 2, 3), float64],) */
}

def @func_13901() -> (Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool]) {
  @func_13899() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool]) */
}

def @func_884(%var_879: Tensor[(6, 11, 6), int8]) -> Tensor[(6, 11, 6), bool] {
  %524 = cast(%var_879, dtype="bool") /* ty=Tensor[(6, 11, 6), bool] */;
  %525 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(6, 11, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 11, 6), int8] */, dtype="bool") /* ty=Tensor[(6, 11, 6), bool] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%526, %527) /* ty=Tensor[(6, 11, 6), bool] */
}

def @func_14036() -> (Tensor[(9, 7, 11), float32],) {
  %528 = @func_6498() /* ty=(Tensor[(396), int8], Tensor[(9, 7, 11), float32]) */;
  %529 = %528.1;
  (%529,)
}

def @func_8325() -> Tensor[(9, 7, 11), float64] {
  %530 = @func_6145() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %530.0
}

def @func_8793(%var_8791: Tensor[(56, 28), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(8, 196), float32]) {
  @func_8790(%var_8791) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(8, 196), float32]) */
}

def @func_11028() -> (Tensor[(9, 12, 10), uint8], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) {
  @func_11026() /* ty=(Tensor[(9, 12, 10), uint8], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) */
}

def @func_13864() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), int16]) {
  @func_13862() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), int16]) */
}

def @func_6099() -> Tensor[(9, 7, 11), float32] {
  %534 = fn () -> Tensor[(9, 7, 11), float32] {
    %531 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %532 = %531.0;
    %533 = cast(%532, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
    tan(%533) /* ty=Tensor[(9, 7, 11), float32] */
  };
  %534() /* ty=Tensor[(9, 7, 11), float32] */
}

def @func_6786() -> Tensor[(8, 14, 4), float32] {
  %536 = fn () -> Tensor[(8, 14, 4), float32] {
    %535 = @func_6463() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) */;
    %535.4
  };
  %536() /* ty=Tensor[(8, 14, 4), float32] */
}

def @func_11070() -> (Tensor[(9, 7, 11), float64],) {
  %537 = @func_10234() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) */;
  %538 = %537.0;
  (%538,)
}

def @func_8994() -> (Tensor[(14, 8, 3), bool],) {
  %541 = fn () -> (Tensor[(14, 8, 3), bool],) {
    %539 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
    %540 = %539.0;
    (%540,)
  };
  %541() /* ty=(Tensor[(14, 8, 3), bool],) */
}

def @func_13387() -> (Tensor[(396), int8], Tensor[(9, 7, 11), float32], Tensor[(6), float64]) {
  @func_13385() /* ty=(Tensor[(396), int8], Tensor[(9, 7, 11), float32], Tensor[(6), float64]) */
}

def @func_3826(%var_3825: Tensor[(16, 14, 9), float64]) -> Tensor[(16, 14, 9), float64] {
  %543 = fn (%var_3820: Tensor[(16, 14, 9), float64]) -> Tensor[(16, 14, 9), float64] {
    %542 = cast(%var_3820, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
    acosh(%542) /* ty=Tensor[(16, 14, 9), float64] */
  };
  %543(%var_3825) /* ty=Tensor[(16, 14, 9), float64] */
}

def @func_6146() -> (Tensor[(9, 7, 11), float64],) {
  %545 = fn () -> (Tensor[(9, 7, 11), float64],) {
    %544 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
    (%544,)
  };
  %545() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_5378(%var_5377: Tensor[(8, 14, 4), float32]) -> (Tensor[(8, 14, 4), float32],) {
  %548 = fn (%var_5371: Tensor[(8, 14, 4), float32]) -> (Tensor[(8, 14, 4), float32],) {
    %546 = cast(%var_5371, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
    %547 = log2(%546) /* ty=Tensor[(8, 14, 4), float32] */;
    (%547,)
  };
  %548(%var_5377) /* ty=(Tensor[(8, 14, 4), float32],) */
}

def @func_13991(%var_13989: Tensor[(14, 8, 3), bool], %var_13990: Tensor[(6, 1), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(14, 8, 3), float32], Tensor[(9, 7, 11), float32], Tensor[(6, 1), float64], Tensor[(14, 8, 3), uint32]) {
  %567 = fn (%var_13929: Tensor[(14, 8, 3), bool], %var_13945: Tensor[(6, 1), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(14, 8, 3), float32], Tensor[(9, 7, 11), float32], Tensor[(6, 1), float64], Tensor[(14, 8, 3), uint32]) {
    %549 = @func_13714() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6), float64]) */;
    %550 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
    %551 = %550.0;
    %552 = cast(%var_13929, dtype="float32") /* ty=Tensor[(14, 8, 3), float32] */;
    %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
    %554 = cast(%551, dtype="float32") /* ty=Tensor[(14, 8, 3), float32] */;
    %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %556 = cast(%var_13945, dtype="float64") /* ty=Tensor[(6, 1), float64] */;
    %557 = reshape(%556, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %558 = @func_6570(%557) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 8, 3), bool], Tensor[(168, 2), float64]) */;
    %559 = cast(%551, dtype="uint32") /* ty=Tensor[(14, 8, 3), uint32] */;
    %560 = shape_of(%var_13929, dtype="int32") /* ty=Tensor[(3), int32] */;
    %561 = cast(%var_13929, dtype="uint32") /* ty=Tensor[(14, 8, 3), uint32] */;
    %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %563 = %549.0;
    %564 = mod(%554, %555) /* ty=Tensor[(14, 8, 3), float32] */;
    %565 = %558.0;
    %566 = minimum(%561, %562) /* ty=Tensor[(14, 8, 3), uint32] */;
    (%563, %564, %565, %var_13945, %566)
  };
  %567(%var_13989, %var_13990) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(14, 8, 3), float32], Tensor[(9, 7, 11), float32], Tensor[(6, 1), float64], Tensor[(14, 8, 3), uint32]) */
}

def @func_11894(%var_11891: Tensor[(56, 8), float32], %var_11892: Tensor[(594), uint32], %var_11893: Tensor[(924), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(56, 8), float32], Tensor[(594), uint32], Tensor[(924), float64], Tensor[(3, 600), uint8], Tensor[(336), float64]) {
  @func_11889(%var_11891, %var_11892, %var_11893) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(56, 8), float32], Tensor[(594), uint32], Tensor[(924), float64], Tensor[(3, 600), uint8], Tensor[(336), float64]) */
}

def @func_13536() -> Tensor[(396), int8] {
  @func_8624() /* ty=Tensor[(396), int8] */
}

def @func_8221() -> Tensor[(396), int8] {
  %569 = fn () -> Tensor[(396), int8] {
    %568 = @func_6689() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
    %568.2
  };
  %569() /* ty=Tensor[(396), int8] */
}

def @func_9061() -> (Tensor[(9, 7, 11), float64],) {
  %570 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %571 = %570.0;
  (%571,)
}

def @func_9141() -> (Tensor[(9, 7, 11), float64],) {
  %572 = @func_8522() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %573 = %572.0;
  (%573,)
}

def @func_11357() -> (Tensor[(9, 7, 11), float64],) {
  %574 = @func_9163() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %575 = %574.0;
  (%575,)
}

def @func_6727() -> (Tensor[(336), float64],) {
  @func_6725() /* ty=(Tensor[(336), float64],) */
}

def @func_4828(%var_4819: Tensor[(9, 12, 10), float32]) -> Tensor[(9, 12, 10), float32] {
  %576 = cast(%var_4819, dtype="float32") /* ty=Tensor[(9, 12, 10), float32] */;
  %577 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(9, 12, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 12, 10), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 10), float32] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%578, %579) /* ty=Tensor[(9, 12, 10), float32] */
}

def @func_14150() -> (Tensor[(336), float64], Tensor[(12, 5, 16), float64], Tensor[(960), float64]) {
  @func_14148() /* ty=(Tensor[(336), float64], Tensor[(12, 5, 16), float64], Tensor[(960), float64]) */
}

def @func_4613(%var_4611: Tensor[(15, 5, 1), float32], %var_4612: Tensor[(90, 1), float32]) -> (Tensor[(15, 5, 1), float32], Tensor[(3, 15, 2), float32], Tensor[(90, 1), float32]) {
  @func_4609(%var_4611, %var_4612) /* ty=(Tensor[(15, 5, 1), float32], Tensor[(3, 15, 2), float32], Tensor[(90, 1), float32]) */
}

def @func_5437(%var_5434: Tensor[(1, 15, 4), int64], %var_5435: Tensor[(4, 15, 4), int64], %var_5436: Tensor[(924), float64]) -> (Tensor[(4, 15, 4), int64], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(192, 4), bool]) {
  %593 = fn (%var_5392: Tensor[(1, 15, 4), int64], %var_5393: Tensor[(4, 15, 4), int64], %var_5415: Tensor[(924), float64]) -> (Tensor[(4, 15, 4), int64], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(192, 4), bool]) {
    %580 = cast(%var_5392, dtype="int64") /* ty=Tensor[(1, 15, 4), int64] */;
    %581 = cast(%var_5393, dtype="int64") /* ty=Tensor[(4, 15, 4), int64] */;
    %582 = cast(%var_5415, dtype="float64") /* ty=Tensor[(924), float64] */;
    %583 = reshape(%582, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
    %584 = @func_1802(%583) /* ty=(Tensor[(14, 11, 6), float64],) */;
    %585 = cast(meta[relay.Constant][41] /* ty=Tensor[(192, 4), bool] */, dtype="bool") /* ty=Tensor[(192, 4), bool] */;
    %586 = cast(meta[relay.Constant][41] /* ty=Tensor[(192, 4), bool] */, dtype="bool") /* ty=Tensor[(192, 4), bool] */;
    %587 = reshape(%585, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
    %588 = reshape(%586, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
    %589 = @func_4013(%587, %588) /* ty=(Tensor[(16, 8, 6), float64],) */;
    %590 = minimum(%580, %581) /* ty=Tensor[(4, 15, 4), int64] */;
    %591 = %584.0;
    %592 = %589.0;
    (%590, %591, %var_5415, %592, meta[relay.Constant][41] /* ty=Tensor[(192, 4), bool] */)
  };
  %593(%var_5434, %var_5435, %var_5436) /* ty=(Tensor[(4, 15, 4), int64], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(192, 4), bool]) */
}

def @func_11427(%var_11425: Tensor[(5, 9, 6), float64], %var_11426: Tensor[(5, 9, 6), float64]) -> (Tensor[(5, 9, 6), float64], Tensor[(5, 9, 6), int16], Tensor[(8, 12, 10), float64], Tensor[(240, 4), float64]) {
  @func_11423(%var_11425, %var_11426) /* ty=(Tensor[(5, 9, 6), float64], Tensor[(5, 9, 6), int16], Tensor[(8, 12, 10), float64], Tensor[(240, 4), float64]) */
}

def @func_10337(%var_10333: Tensor[(11, 9, 6), uint32], %var_10334: Tensor[(11, 9, 6), uint32], %var_10335: Tensor[(462, 2), float64], %var_10336: Tensor[(1800), uint8]) -> (Tensor[(11, 9, 6), uint32], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(336), float64], Tensor[(462, 2), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8]) {
  %610 = fn (%var_10291: Tensor[(11, 9, 6), uint32], %var_10292: Tensor[(11, 9, 6), uint32], %var_10317: Tensor[(462, 2), float64], %var_10325: Tensor[(1800), uint8]) -> (Tensor[(11, 9, 6), uint32], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(336), float64], Tensor[(462, 2), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8]) {
    %594 = cast(%var_10292, dtype="uint32") /* ty=Tensor[(11, 9, 6), uint32] */;
    %595 = shape_of(%var_10291, dtype="int32") /* ty=Tensor[(3), int32] */;
    %596 = cast(%var_10291, dtype="uint32") /* ty=Tensor[(11, 9, 6), uint32] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %598 = cast(%var_10317, dtype="float64") /* ty=Tensor[(462, 2), float64] */;
    %599 = reshape(%598, newshape=[924]) /* ty=Tensor[(924), float64] */;
    %600 = @func_7935(%599) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) */;
    %601 = cast(%var_10317, dtype="float64") /* ty=Tensor[(462, 2), float64] */;
    %602 = cast(%var_10325, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
    %603 = reshape(%602, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), uint8] */;
    %604 = left_shift(%596, %597) /* ty=Tensor[(11, 9, 6), uint32] */;
    %605 = @func_8970() /* ty=Tensor[(9, 7, 11), float64] */;
    %606 = %600.0;
    %607 = @func_9208() /* ty=Tensor[(336), float64] */;
    %608 = acos(%601) /* ty=Tensor[(462, 2), float64] */;
    %609 = @func_176(%603) /* ty=Tensor[(15, 10, 12), float32] */;
    (%604, %605, %606, %607, %608, %609, %var_10325)
  };
  %610(%var_10333, %var_10334, %var_10335, %var_10336) /* ty=(Tensor[(11, 9, 6), uint32], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(336), float64], Tensor[(462, 2), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8]) */
}

def @func_11222() -> Tensor[(16, 15, 9), float32] {
  %613 = fn () -> Tensor[(16, 15, 9), float32] {
    %611 = @func_9280() /* ty=Tensor[(16, 15, 9), float32] */;
    %612 = cast(%611, dtype="float32") /* ty=Tensor[(16, 15, 9), float32] */;
    asinh(%612) /* ty=Tensor[(16, 15, 9), float32] */
  };
  %613() /* ty=Tensor[(16, 15, 9), float32] */
}

def @func_11889(%var_11810: Tensor[(56, 8), float32], %var_11811: Tensor[(594), uint32], %var_11812: Tensor[(924), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(56, 8), float32], Tensor[(594), uint32], Tensor[(924), float64], Tensor[(3, 600), uint8], Tensor[(336), float64]) {
  %614 = @func_6632() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %615 = cast(meta[relay.Constant][42] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %616 = cast(%var_11810, dtype="float32") /* ty=Tensor[(56, 8), float32] */;
  %617 = cast(%var_11811, dtype="uint32") /* ty=Tensor[(594), uint32] */;
  %618 = cast(%var_11812, dtype="float64") /* ty=Tensor[(924), float64] */;
  %619 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 600), uint8] */, dtype="uint8") /* ty=Tensor[(3, 600), uint8] */;
  %620 = reshape(%615, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %621 = reshape(%616, newshape=[2, 224]) /* ty=Tensor[(2, 224), float32] */;
  %622 = reshape(%617, newshape=[594]) /* ty=Tensor[(594), uint32] */;
  %623 = reshape(%618, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %624 = reshape(%619, newshape=[3, 600]) /* ty=Tensor[(3, 600), uint8] */;
  %625 = @func_10749(%620, %621, %622, %623, %624) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(8, 14, 4), float32], Tensor[(2, 224), float32], Tensor[(9, 7, 11), float32], Tensor[(594), uint32], Tensor[(924), float64], Tensor[(3, 600), uint8]) */;
  %626 = %614.0;
  %627 = %625.1;
  %628 = @func_9208() /* ty=Tensor[(336), float64] */;
  (%626, %627, meta[relay.Constant][42] /* ty=Tensor[(378), float64] */, %var_11810, %var_11811, %var_11812, meta[relay.Constant][43] /* ty=Tensor[(3, 600), uint8] */, %628)
}

def @func_14411() -> (Tensor[(9, 7, 11), float64], Tensor[(336), float64]) {
  %632 = fn () -> (Tensor[(9, 7, 11), float64], Tensor[(336), float64]) {
    %629 = @func_11070() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %630 = %629.0;
    %631 = @func_8940() /* ty=Tensor[(336), float64] */;
    (%630, %631)
  };
  %632() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(336), float64]) */
}

def @func_4831(%var_4829: Tensor[(9, 12, 10), float32]) -> Tensor[(9, 12, 10), float32] {
  @func_4828(%var_4829) /* ty=Tensor[(9, 12, 10), float32] */
}

def @func_9369(%var_9367: Tensor[(90), float32], %var_9368: Tensor[(960), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(3, 15, 2), float32], Tensor[(75), float32], Tensor[(90), float32], Tensor[(8, 12, 10), float64], Tensor[(960), float64]) {
  %645 = fn (%var_9340: Tensor[(90), float32], %var_9346: Tensor[(960), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(3, 15, 2), float32], Tensor[(75), float32], Tensor[(90), float32], Tensor[(8, 12, 10), float64], Tensor[(960), float64]) {
    %633 = @func_8993() /* ty=(Tensor[(14, 8, 3), bool],) */;
    %634 = cast(meta[relay.Constant][44] /* ty=Tensor[(75), float32] */, dtype="float32") /* ty=Tensor[(75), float32] */;
    %635 = cast(%var_9340, dtype="float32") /* ty=Tensor[(90), float32] */;
    %636 = reshape(%634, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), float32] */;
    %637 = reshape(%635, newshape=[90, 1]) /* ty=Tensor[(90, 1), float32] */;
    %638 = @func_4609(%636, %637) /* ty=(Tensor[(15, 5, 1), float32], Tensor[(3, 15, 2), float32], Tensor[(90, 1), float32]) */;
    %639 = cast(%var_9346, dtype="float64") /* ty=Tensor[(960), float64] */;
    %640 = reshape(%639, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
    %641 = @func_6703(%640) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(336), float64]) */;
    %642 = %633.0;
    %643 = %638.1;
    %644 = %641.0;
    (%642, %643, meta[relay.Constant][44] /* ty=Tensor[(75), float32] */, %var_9340, %644, %var_9346)
  };
  %645(%var_9367, %var_9368) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(3, 15, 2), float32], Tensor[(75), float32], Tensor[(90), float32], Tensor[(8, 12, 10), float64], Tensor[(960), float64]) */
}

def @func_13101() -> (Tensor[(396), int8],) {
  @func_13099() /* ty=(Tensor[(396), int8],) */
}

def @func_6465() -> (Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) {
  @func_6463() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) */
}

def @func_8327() -> Tensor[(9, 7, 11), float64] {
  @func_8325() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_12522(%var_12520: Tensor[(9, 7, 11), float64]) -> (Tensor[(336), float64], Tensor[(1568), float64], Tensor[(9, 7, 11), int16]) {
  @func_12519(%var_12520) /* ty=(Tensor[(336), float64], Tensor[(1568), float64], Tensor[(9, 7, 11), int16]) */
}

def @func_6074() -> (Tensor[(9, 7, 11), float64],) {
  %648 = fn () -> (Tensor[(9, 7, 11), float64],) {
    %646 = @func_5718() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
    %647 = %646.0;
    (%647,)
  };
  %648() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_9319() -> Tensor[(9, 7, 11), float32] {
  @func_6098() /* ty=Tensor[(9, 7, 11), float32] */
}

def @func_9850() -> Tensor[(9, 7, 11), float64] {
  %649 = fn () -> Tensor[(9, 7, 11), float64] {
    @func_8325() /* ty=Tensor[(9, 7, 11), float64] */
  };
  %649() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_9527() -> (Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) {
  %653 = fn () -> (Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) {
    %650 = @func_9141() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %651 = @func_9415() /* ty=Tensor[(9, 7, 11), float32] */;
    %652 = %650.0;
    (%651, %652)
  };
  %653() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */
}

def @func_12148() -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) {
  %654 = @func_6888() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) */;
  %655 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %656 = %654.0;
  %657 = %655.0;
  (%656, %657)
}

def @func_4958(%var_4953: int32, %var_4954: Tensor[(2, 4, 3), int32]) -> Tensor[(2, 4, 3), bool] {
  %658 = cast(%var_4953, dtype="bool") /* ty=bool */;
  %659 = cast(%var_4954, dtype="bool") /* ty=Tensor[(2, 4, 3), bool] */;
  equal(%658, %659) /* ty=Tensor[(2, 4, 3), bool] */
}

def @func_6022() -> Tensor[(9, 7, 11), float64] {
  @func_6020() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_8674(%var_8656: Tensor[(3, 156), uint16]) -> (Tensor[(16, 15, 9), bool], Tensor[(396), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), uint16], Tensor[(154, 6), float64]) {
  %660 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
  %661 = cast(%var_8656, dtype="uint16") /* ty=Tensor[(3, 156), uint16] */;
  %662 = cast(meta[relay.Constant][45] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %663 = reshape(%662, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %664 = @func_7935(%663) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) */;
  %665 = %664.3;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(6), float64] */;
  %667 = reshape(%661, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), uint16] */;
  %668 = reshape(%666, newshape=[3, 2]) /* ty=Tensor[(3, 2), float64] */;
  %669 = @func_7465(%667, %668) /* ty=(Tensor[(4, 13, 9), float32], Tensor[(1800), uint8], Tensor[(3, 2), float64], Tensor[(1800), uint8]) */;
  %670 = cast(%665, dtype="float64") /* ty=Tensor[(6), float64] */;
  %671 = cast(meta[relay.Constant][45] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %672 = %660.0;
  %673 = @func_7264() /* ty=Tensor[(396), int8] */;
  %674 = %669.0;
  %675 = multiply(%670, %671) /* ty=Tensor[(154, 6), float64] */;
  (%672, %673, %674, %var_8656, %675)
}

def @func_9477(%var_9463: int64, %var_9464: Tensor[(160), int64], %var_9467: Tensor[(945), float32]) -> (Tensor[(9, 7, 11), int64], Tensor[(8, 14, 4), float32], Tensor[(9, 7, 11), float64], Tensor[(960), float32], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(960), float32], Tensor[(945), float32]) {
  %676 = @func_9319() /* ty=Tensor[(9, 7, 11), float32] */;
  %677 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 7, 11), float32] */, dtype="int64") /* ty=Tensor[(9, 7, 11), int64] */;
  %678 = shape_of(%676, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%676, dtype="int64") /* ty=Tensor[(9, 7, 11), int64] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %681 = @func_6463() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) */;
  %682 = @func_9415() /* ty=Tensor[(9, 7, 11), float32] */;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %684 = cast(%var_9463, dtype="int64") /* ty=int64 */;
  %685 = cast(%var_9464, dtype="int64") /* ty=Tensor[(160), int64] */;
  %686 = cast(meta[relay.Constant][47] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %687 = cast(meta[relay.Constant][48] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %688 = cast(%var_9467, dtype="float32") /* ty=Tensor[(945), float32] */;
  %689 = reshape(%684, newshape=[]) /* ty=int64 */;
  %690 = reshape(%685, newshape=[1, 16, 10]) /* ty=Tensor[(1, 16, 10), int64] */;
  %691 = reshape(%686, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %692 = reshape(%687, newshape=[960]) /* ty=Tensor[(960), float32] */;
  %693 = reshape(%688, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %694 = @func_2696(%689, %690, %691, %692, %693) /* ty=(Tensor[(1, 16, 10), int64], Tensor[(1, 15, 1), float32], Tensor[(15), float32], Tensor[(15, 8, 8), bool], Tensor[(960), float32], Tensor[(9, 15, 7), float32], Tensor[(945), float32], Tensor[(15, 8, 8), bool]) */;
  %695 = multiply(%679, %680) /* ty=Tensor[(9, 7, 11), int64] */;
  %696 = %681.4;
  %697 = rsqrt(%683) /* ty=Tensor[(9, 7, 11), float64] */;
  %698 = %694.4;
  (%695, %696, %697, %698, %var_9463, %var_9464, meta[relay.Constant][47] /* ty=Tensor[(15), float32] */, meta[relay.Constant][48] /* ty=Tensor[(960), float32] */, %var_9467)
}

def @func_14478(%var_14454: Tensor[(4, 3, 16), bool]) -> Tensor[(4, 3, 16), bool] {
  %699 = cast(%var_14454, dtype="bool") /* ty=Tensor[(4, 3, 16), bool] */;
  %700 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(4, 3, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 3, 16), bool] */, dtype="bool") /* ty=Tensor[(4, 3, 16), bool] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%701, %702) /* ty=Tensor[(4, 3, 16), bool] */
}

def @func_9482(%var_9479: int64, %var_9480: Tensor[(160), int64], %var_9481: Tensor[(945), float32]) -> (Tensor[(9, 7, 11), int64], Tensor[(8, 14, 4), float32], Tensor[(9, 7, 11), float64], Tensor[(960), float32], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(960), float32], Tensor[(945), float32]) {
  @func_9477(%var_9479, %var_9480, %var_9481) /* ty=(Tensor[(9, 7, 11), int64], Tensor[(8, 14, 4), float32], Tensor[(9, 7, 11), float64], Tensor[(960), float32], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(960), float32], Tensor[(945), float32]) */
}

def @func_13455() -> Tensor[(396), int8] {
  @func_13453() /* ty=Tensor[(396), int8] */
}

def @func_7265() -> Tensor[(396), int8] {
  %704 = fn () -> Tensor[(396), int8] {
    %703 = @func_6498() /* ty=(Tensor[(396), int8], Tensor[(9, 7, 11), float32]) */;
    %703.0
  };
  %704() /* ty=Tensor[(396), int8] */
}

def @func_13307(%var_13304: Tensor[(468), uint16], %var_13305: Tensor[(2016), float64], %var_13306: Tensor[(210), bool]) -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), int16], Tensor[(693), float64], Tensor[(16, 15, 9), bool], Tensor[(468), uint16], Tensor[(16, 14, 9), float64], Tensor[(2016), float64], Tensor[(231, 3), float64], Tensor[(210), bool]) {
  @func_13302(%var_13304, %var_13305, %var_13306) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), int16], Tensor[(693), float64], Tensor[(16, 15, 9), bool], Tensor[(468), uint16], Tensor[(16, 14, 9), float64], Tensor[(2016), float64], Tensor[(231, 3), float64], Tensor[(210), bool]) */
}

def @func_8942() -> Tensor[(336), float64] {
  @func_8940() /* ty=Tensor[(336), float64] */
}

def @func_8211() -> Tensor[(16, 15, 9), bool] {
  %706 = fn () -> Tensor[(16, 15, 9), bool] {
    %705 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
    %705.0
  };
  %706() /* ty=Tensor[(16, 15, 9), bool] */
}

def @func_10839() -> Tensor[(336), float64] {
  %708 = fn () -> Tensor[(336), float64] {
    %707 = @func_9799() /* ty=(Tensor[(336), float64], Tensor[(9, 7, 11), float64]) */;
    %707.0
  };
  %708() /* ty=Tensor[(336), float64] */
}

def @func_9621(%var_9620: Tensor[(420), int64]) -> (Tensor[(9, 7, 11), float64], Tensor[(924), float64], Tensor[(420), int64], Tensor[(924), float64]) {
  %721 = fn (%var_9613: Tensor[(420), int64]) -> (Tensor[(9, 7, 11), float64], Tensor[(924), float64], Tensor[(420), int64], Tensor[(924), float64]) {
    %709 = @func_8159() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) */;
    %710 = %709.0;
    %711 = cast(%710, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
    %712 = cast(%var_9613, dtype="int64") /* ty=Tensor[(420), int64] */;
    %713 = cast(%var_9613, dtype="int64") /* ty=Tensor[(420), int64] */;
    %714 = cast(meta[relay.Constant][50] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %715 = reshape(%712, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), int64] */;
    %716 = reshape(%713, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), int64] */;
    %717 = reshape(%714, newshape=[924]) /* ty=Tensor[(924), float64] */;
    %718 = @func_8271(%715, %716, %717) /* ty=(Tensor[(6, 5, 14), float64], Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(6, 5, 14), float32], Tensor[(6), float64], Tensor[(924), float64]) */;
    %719 = exp(%711) /* ty=Tensor[(9, 7, 11), float64] */;
    %720 = %718.5;
    (%719, %720, %var_9613, meta[relay.Constant][50] /* ty=Tensor[(924), float64] */)
  };
  %721(%var_9620) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(924), float64], Tensor[(420), int64], Tensor[(924), float64]) */
}

def @func_8271(%var_8222: Tensor[(6, 5, 14), int64], %var_8223: Tensor[(6, 5, 14), int64], %var_8264: Tensor[(924), float64]) -> (Tensor[(6, 5, 14), float64], Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(6, 5, 14), float32], Tensor[(6), float64], Tensor[(924), float64]) {
  %722 = cast(%var_8223, dtype="int64") /* ty=Tensor[(6, 5, 14), int64] */;
  %723 = shape_of(%var_8222, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%var_8222, dtype="int64") /* ty=Tensor[(6, 5, 14), int64] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %726 = multiply(%724, %725) /* ty=Tensor[(6, 5, 14), int64] */;
  %727 = cast(%726, dtype="float64") /* ty=Tensor[(6, 5, 14), float64] */;
  %728 = cast(meta[relay.Constant][51] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %729 = reshape(%728, newshape=[8, 196]) /* ty=Tensor[(8, 196), float64] */;
  %730 = @func_5984(%729) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64], Tensor[(8, 196), float64]) */;
  %731 = cast(%var_8222, dtype="float32") /* ty=Tensor[(6, 5, 14), float32] */;
  %732 = cast(%var_8264, dtype="float64") /* ty=Tensor[(924), float64] */;
  %733 = reshape(%732, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %734 = @func_7935(%733) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(6), float64], Tensor[(1800), uint8], Tensor[(924), float64]) */;
  %735 = acos(%727) /* ty=Tensor[(6, 5, 14), float64] */;
  %736 = %730.1;
  %737 = tan(%731) /* ty=Tensor[(6, 5, 14), float32] */;
  %738 = %734.3;
  (%735, %736, meta[relay.Constant][51] /* ty=Tensor[(1568), float64] */, %737, %738, %var_8264)
}

def @func_1757(%var_1755: Tensor[(1, 15, 1), float32]) -> (Tensor[(1, 15, 1), float32],) {
  @func_1754(%var_1755) /* ty=(Tensor[(1, 15, 1), float32],) */
}

def @func_11174() -> (Tensor[(9, 7, 11), float64],) {
  %741 = fn () -> (Tensor[(9, 7, 11), float64],) {
    %739 = @func_9584() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */;
    %740 = %739.1;
    (%740,)
  };
  %741() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_14316() -> (Tensor[(9, 7, 11), float64],) {
  %743 = fn () -> (Tensor[(9, 7, 11), float64],) {
    %742 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
    (%742,)
  };
  %743() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_8972() -> Tensor[(9, 7, 11), float64] {
  @func_8970() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_9280() -> Tensor[(16, 15, 9), float32] {
  %744 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
  %745 = %744.0;
  %746 = cast(%745, dtype="float32") /* ty=Tensor[(16, 15, 9), float32] */;
  %747 = acos(%746) /* ty=Tensor[(16, 15, 9), float32] */;
  %748 = cast(%747, dtype="float32") /* ty=Tensor[(16, 15, 9), float32] */;
  tan(%748) /* ty=Tensor[(16, 15, 9), float32] */
}

def @func_11382() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) {
  %753 = fn () -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) {
    %749 = @func_6073() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %750 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %751 = %749.0;
    %752 = %750.0;
    (%751, %752)
  };
  %753() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) */
}

def @func_1929(%var_1919: Tensor[(1, 2, 3), float64]) -> (Tensor[(1, 2, 3), float64],) {
  %754 = cast(%var_1919, dtype="float64") /* ty=Tensor[(1, 2, 3), float64] */;
  %755 = log2(%754) /* ty=Tensor[(1, 2, 3), float64] */;
  (%755,)
}

def @func_4455(%var_4453: Tensor[(6, 3, 1), float32]) -> (Tensor[(6, 3, 1), float32],) {
  @func_4452(%var_4453) /* ty=(Tensor[(6, 3, 1), float32],) */
}

def @func_7666(%var_7665: Tensor[(5, 3), float32]) -> (Tensor[(9, 7, 11), int8], Tensor[(1, 15, 1), float32], Tensor[(5, 3), float32]) {
  %767 = fn (%var_7657: Tensor[(5, 3), float32]) -> (Tensor[(9, 7, 11), int8], Tensor[(1, 15, 1), float32], Tensor[(5, 3), float32]) {
    %756 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %757 = %756.0;
    %758 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 7, 11), float64] */, dtype="int8") /* ty=Tensor[(9, 7, 11), int8] */;
    %759 = shape_of(%757, dtype="int32") /* ty=Tensor[(3), int32] */;
    %760 = cast(%757, dtype="int8") /* ty=Tensor[(9, 7, 11), int8] */;
    %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %762 = cast(%var_7657, dtype="float32") /* ty=Tensor[(5, 3), float32] */;
    %763 = reshape(%762, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float32] */;
    %764 = @func_1754(%763) /* ty=(Tensor[(1, 15, 1), float32],) */;
    %765 = bitwise_and(%760, %761) /* ty=Tensor[(9, 7, 11), int8] */;
    %766 = %764.0;
    (%765, %766, %var_7657)
  };
  %767(%var_7665) /* ty=(Tensor[(9, 7, 11), int8], Tensor[(1, 15, 1), float32], Tensor[(5, 3), float32]) */
}

def @func_8970() -> Tensor[(9, 7, 11), float64] {
  @func_6055() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_9205() -> (Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32], Tensor[(6, 3, 1), float32]) {
  %776 = fn () -> (Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32], Tensor[(6, 3, 1), float32]) {
    %768 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %769 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
    %770 = %769.2;
    %771 = cast(%770, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
    %772 = reshape(%771, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
    %773 = @func_4452(%772) /* ty=(Tensor[(6, 3, 1), float32],) */;
    %774 = %768.0;
    %775 = %773.0;
    (%774, %770, %775)
  };
  %776() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32], Tensor[(6, 3, 1), float32]) */
}

def @func_4565(%var_4563: Tensor[(3, 15, 2), float32]) -> Tensor[(3, 15, 2), float32] {
  @func_4562(%var_4563) /* ty=Tensor[(3, 15, 2), float32] */
}

def @func_2234(%var_2230: float32, %var_2231: Tensor[(11, 12, 4), float32], %var_2232: Tensor[(1568), float64], %var_2233: Tensor[(6), float64]) -> (Tensor[(11, 12, 4), float32], Tensor[(16, 7, 14), float64], Tensor[(1568), float64], Tensor[(1800), uint8], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(15, 8, 8), bool], Tensor[(960), float32]) {
  @func_2228(%var_2230, %var_2231, %var_2232, %var_2233) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(16, 7, 14), float64], Tensor[(1568), float64], Tensor[(1800), uint8], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(15, 8, 8), bool], Tensor[(960), float32]) */
}

def @func_5675() -> (Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) {
  %777 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %778 = cast(meta[relay.Constant][53] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %779 = reshape(%778, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %780 = %777.0;
  %781 = @func_3535(%779) /* ty=Tensor[(14, 8, 3), bool] */;
  (%780, %781, meta[relay.Constant][53] /* ty=Tensor[(336), float64] */)
}

def @func_8709(%var_8705: Tensor[(7, 14, 8), uint16], %var_8706: Tensor[(528), float32], %var_8707: Tensor[(1568), float64], %var_8708: Tensor[(1, 6), float64]) -> (Tensor[(7, 14, 8), uint16], Tensor[(1568), float64], Tensor[(528), float32], Tensor[(1568), float64], Tensor[(1, 6), float64], Tensor[(1, 2, 3), float64]) {
  %799 = fn (%var_8680: Tensor[(7, 14, 8), uint16], %var_8685: Tensor[(528), float32], %var_8686: Tensor[(1568), float64], %var_8687: Tensor[(1, 6), float64]) -> (Tensor[(7, 14, 8), uint16], Tensor[(1568), float64], Tensor[(528), float32], Tensor[(1568), float64], Tensor[(1, 6), float64], Tensor[(1, 2, 3), float64]) {
    %782 = cast(meta[relay.Constant][54] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %783 = cast(%var_8680, dtype="uint16") /* ty=Tensor[(7, 14, 8), uint16] */;
    %784 = cast(meta[relay.Constant][54] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
    %785 = cast(%var_8685, dtype="float32") /* ty=Tensor[(528), float32] */;
    %786 = cast(%var_8686, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %787 = cast(%var_8687, dtype="float64") /* ty=Tensor[(1, 6), float64] */;
    %788 = reshape(%784, newshape=[]) /* ty=float32 */;
    %789 = reshape(%785, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
    %790 = reshape(%786, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
    %791 = reshape(%787, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %792 = @func_2228(%788, %789, %790, %791) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(16, 7, 14), float64], Tensor[(1568), float64], Tensor[(1800), uint8], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(15, 8, 8), bool], Tensor[(960), float32]) */;
    %793 = cast(%var_8687, dtype="float64") /* ty=Tensor[(1, 6), float64] */;
    %794 = reshape(%793, newshape=[1, 2, 3]) /* ty=Tensor[(1, 2, 3), float64] */;
    %795 = @func_1929(%794) /* ty=(Tensor[(1, 2, 3), float64],) */;
    %796 = right_shift(%782, %783) /* ty=Tensor[(7, 14, 8), uint16] */;
    %797 = %792.2;
    %798 = %795.0;
    (%796, %797, %var_8685, %var_8686, %var_8687, %798)
  };
  %799(%var_8705, %var_8706, %var_8707, %var_8708) /* ty=(Tensor[(7, 14, 8), uint16], Tensor[(1568), float64], Tensor[(528), float32], Tensor[(1568), float64], Tensor[(1, 6), float64], Tensor[(1, 2, 3), float64]) */
}

def @func_7762(%var_7759: Tensor[(6), float64], %var_7760: Tensor[(900, 2), uint8], %var_7761: Tensor[(154, 6), float64]) -> (Tensor[(8, 14, 4), float32], Tensor[(1800), uint8], Tensor[(6), float64], Tensor[(900, 2), uint8], Tensor[(14, 11, 6), float64], Tensor[(154, 6), float64], Tensor[(9, 7, 11), float64]) {
  %813 = fn (%var_7730: Tensor[(6), float64], %var_7731: Tensor[(900, 2), uint8], %var_7743: Tensor[(154, 6), float64]) -> (Tensor[(8, 14, 4), float32], Tensor[(1800), uint8], Tensor[(6), float64], Tensor[(900, 2), uint8], Tensor[(14, 11, 6), float64], Tensor[(154, 6), float64], Tensor[(9, 7, 11), float64]) {
    %800 = cast(%var_7730, dtype="float64") /* ty=Tensor[(6), float64] */;
    %801 = cast(%var_7731, dtype="uint8") /* ty=Tensor[(900, 2), uint8] */;
    %802 = reshape(%800, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %803 = reshape(%801, newshape=[1800]) /* ty=Tensor[(1800), uint8] */;
    %804 = @func_6379(%802, %803) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(1568, 1), float64], Tensor[(6), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8], Tensor[(192, 4), bool], Tensor[(60), int64], Tensor[(24, 10), int64], Tensor[(14, 66), float64], Tensor[(9, 7, 11), float64], Tensor[(4, 15, 4), int64]) */;
    %805 = cast(%var_7743, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
    %806 = reshape(%805, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
    %807 = @func_1802(%806) /* ty=(Tensor[(14, 11, 6), float64],) */;
    %808 = @func_6632() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %809 = @func_6785() /* ty=Tensor[(8, 14, 4), float32] */;
    %810 = %804.5;
    %811 = %807.0;
    %812 = %808.0;
    (%809, %810, %var_7730, %var_7731, %811, %var_7743, %812)
  };
  %813(%var_7759, %var_7760, %var_7761) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(1800), uint8], Tensor[(6), float64], Tensor[(900, 2), uint8], Tensor[(14, 11, 6), float64], Tensor[(154, 6), float64], Tensor[(9, 7, 11), float64]) */
}

def @func_9209() -> Tensor[(336), float64] {
  %815 = fn () -> Tensor[(336), float64] {
    %814 = @func_6725() /* ty=(Tensor[(336), float64],) */;
    %814.0
  };
  %815() /* ty=Tensor[(336), float64] */
}

def @func_6383(%var_6381: Tensor[(6), float64], %var_6382: Tensor[(1800), uint8]) -> (Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(1568, 1), float64], Tensor[(6), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8], Tensor[(192, 4), bool], Tensor[(60), int64], Tensor[(24, 10), int64], Tensor[(14, 66), float64], Tensor[(9, 7, 11), float64], Tensor[(4, 15, 4), int64]) {
  @func_6379(%var_6381, %var_6382) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(1568, 1), float64], Tensor[(6), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8], Tensor[(192, 4), bool], Tensor[(60), int64], Tensor[(24, 10), int64], Tensor[(14, 66), float64], Tensor[(9, 7, 11), float64], Tensor[(4, 15, 4), int64]) */
}

def @func_8940() -> Tensor[(336), float64] {
  %816 = @func_6725() /* ty=(Tensor[(336), float64],) */;
  %816.0
}

def @func_11060() -> (Tensor[(11, 8, 16), float64], Tensor[(16, 8, 6), float64], Tensor[(768), bool]) {
  %817 = cast(meta[relay.Constant][55] /* ty=Tensor[(11, 8, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 8, 16), float64] */;
  %818 = tan(%817) /* ty=Tensor[(11, 8, 16), float64] */;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(11, 8, 16), float64] */;
  %820 = cast(meta[relay.Constant][56] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %821 = cast(meta[relay.Constant][56] /* ty=Tensor[(768), bool] */, dtype="bool") /* ty=Tensor[(768), bool] */;
  %822 = reshape(%820, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %823 = reshape(%821, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %824 = @func_4013(%822, %823) /* ty=(Tensor[(16, 8, 6), float64],) */;
  %825 = exp(%819) /* ty=Tensor[(11, 8, 16), float64] */;
  %826 = %824.0;
  (%825, %826, meta[relay.Constant][56] /* ty=Tensor[(768), bool] */)
}

def @func_5591(%var_5590: Tensor[(9, 7, 11), float64]) -> (Tensor[(9, 7, 11), int16],) {
  %834 = fn (%var_5569: Tensor[(9, 7, 11), float64]) -> (Tensor[(9, 7, 11), int16],) {
    %827 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %828 = %827.0;
    %829 = cast(%var_5569, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
    %830 = shape_of(%828, dtype="int32") /* ty=Tensor[(3), int32] */;
    %831 = cast(%828, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
    %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %833 = add(%831, %832) /* ty=Tensor[(9, 7, 11), int16] */;
    (%833,)
  };
  %834(%var_5590) /* ty=(Tensor[(9, 7, 11), int16],) */
}

def @func_13140() -> Tensor[(16, 15, 9), float32] {
  @func_13138() /* ty=Tensor[(16, 15, 9), float32] */
}

def @func_13767(%var_13729: Tensor[(7, 99), float64], %var_13745: Tensor[(78, 1), float32]) -> (Tensor[(396), int8], Tensor[(16, 15, 9), bool], Tensor[(2, 13, 3), float32], Tensor[(78, 1), float32], Tensor[(7, 99), bool]) {
  %835 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
  %836 = cast(%var_13745, dtype="float32") /* ty=Tensor[(78, 1), float32] */;
  %837 = reshape(%836, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float32] */;
  %838 = cast(%var_13729, dtype="float64") /* ty=Tensor[(7, 99), float64] */;
  %839 = reshape(%838, newshape=[9, 7, 11]) /* ty=Tensor[(9, 7, 11), float64] */;
  %840 = @func_5589(%839) /* ty=(Tensor[(9, 7, 11), int16],) */;
  %841 = %840.0;
  %842 = cast(%841, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
  %843 = shape_of(%var_13729, dtype="int32") /* ty=Tensor[(2), int32] */;
  %844 = cast(%var_13729, dtype="bool") /* ty=Tensor[(7, 99), bool] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %846 = @func_13536() /* ty=Tensor[(396), int8] */;
  %847 = %835.0;
  %848 = @func_5343(%837) /* ty=Tensor[(2, 13, 3), float32] */;
  %849 = less_equal(%844, %845) /* ty=Tensor[(7, 99), bool] */;
  (%846, %847, %848, %var_13745, %849)
}

def @func_13154(%var_13145: Tensor[(336), bool], %var_13152: Tensor[(2, 264), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(336), bool], Tensor[(6), float64], Tensor[(1568), float64], Tensor[(8, 98), uint16], Tensor[(2, 264), float32]) {
  %850 = @func_10234() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64]) */;
  %851 = cast(%var_13145, dtype="bool") /* ty=Tensor[(336), bool] */;
  %852 = cast(meta[relay.Constant][57] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %853 = reshape(%851, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), bool] */;
  %854 = reshape(%852, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %855 = @func_7798(%853, %854) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(1800), uint8]) */;
  %856 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 98), uint16] */, dtype="uint16") /* ty=Tensor[(8, 98), uint16] */;
  %857 = cast(%var_13152, dtype="float32") /* ty=Tensor[(2, 264), float32] */;
  %858 = %855.1;
  %859 = cast(%858, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %860 = cast(meta[relay.Constant][57] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %861 = reshape(%856, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), uint16] */;
  %862 = reshape(%857, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %863 = reshape(%859, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %864 = reshape(%860, newshape=[1, 6]) /* ty=Tensor[(1, 6), float64] */;
  %865 = @func_8704(%861, %862, %863, %864) /* ty=(Tensor[(7, 14, 8), uint16], Tensor[(1568), float64], Tensor[(528), float32], Tensor[(1568), float64], Tensor[(1, 6), float64], Tensor[(1, 2, 3), float64]) */;
  %866 = %850.0;
  %867 = %865.3;
  (%866, %858, %var_13145, meta[relay.Constant][57] /* ty=Tensor[(6), float64] */, %867, meta[relay.Constant][58] /* ty=Tensor[(8, 98), uint16] */, %var_13152)
}

def @func_14344() -> (Tensor[(336), float64],) {
  %868 = @func_6725() /* ty=(Tensor[(336), float64],) */;
  %869 = %868.0;
  (%869,)
}

def @func_4452(%var_4447: Tensor[(6, 3, 1), float32]) -> (Tensor[(6, 3, 1), float32],) {
  %870 = cast(%var_4447, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
  %871 = log10(%870) /* ty=Tensor[(6, 3, 1), float32] */;
  (%871,)
}

def @func_10932(%var_10930: Tensor[(112, 4), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(448), float32], Tensor[(78), float32], Tensor[(112, 4), float32]) {
  @func_10929(%var_10930) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(448), float32], Tensor[(78), float32], Tensor[(112, 4), float32]) */
}

def @func_13680() -> (Tensor[(11, 8, 16), float64],) {
  %874 = fn () -> (Tensor[(11, 8, 16), float64],) {
    %872 = @func_11060() /* ty=(Tensor[(11, 8, 16), float64], Tensor[(16, 8, 6), float64], Tensor[(768), bool]) */;
    %873 = %872.0;
    (%873,)
  };
  %874() /* ty=(Tensor[(11, 8, 16), float64],) */
}

def @func_10678() -> (Tensor[(336), float64], Tensor[(9, 7, 11), float64]) {
  @func_10676() /* ty=(Tensor[(336), float64], Tensor[(9, 7, 11), float64]) */
}

def @func_2131(%var_2111: Tensor[(9, 15, 7), float32]) -> (Tensor[(9, 15, 7), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) {
  %875 = cast(%var_2111, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
  %876 = cast(meta[relay.Constant][59] /* ty=Tensor[(396), int8] */, dtype="int8") /* ty=Tensor[(396), int8] */;
  %877 = reshape(%876, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int8] */;
  %878 = asinh(%875) /* ty=Tensor[(9, 15, 7), float32] */;
  %879 = @func_884(%877) /* ty=Tensor[(6, 11, 6), bool] */;
  (%878, %879, meta[relay.Constant][59] /* ty=Tensor[(396), int8] */)
}

def @func_7056(%var_7055: Tensor[(448), float32]) -> (Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) {
  %886 = fn (%var_7048: Tensor[(448), float32]) -> (Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) {
    %880 = @func_6851() /* ty=(Tensor[(16, 15, 9), bool],) */;
    %881 = cast(%var_7048, dtype="float32") /* ty=Tensor[(448), float32] */;
    %882 = reshape(%881, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
    %883 = @func_5376(%882) /* ty=(Tensor[(8, 14, 4), float32],) */;
    %884 = %880.0;
    %885 = %883.0;
    (%884, %885, %var_7048)
  };
  %886(%var_7055) /* ty=(Tensor[(16, 15, 9), bool], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) */
}

def @func_13771(%var_13769: Tensor[(7, 99), float64], %var_13770: Tensor[(78, 1), float32]) -> (Tensor[(396), int8], Tensor[(16, 15, 9), bool], Tensor[(2, 13, 3), float32], Tensor[(78, 1), float32], Tensor[(7, 99), bool]) {
  @func_13767(%var_13769, %var_13770) /* ty=(Tensor[(396), int8], Tensor[(16, 15, 9), bool], Tensor[(2, 13, 3), float32], Tensor[(78, 1), float32], Tensor[(7, 99), bool]) */
}

def @func_5987(%var_5985: Tensor[(8, 196), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64], Tensor[(8, 196), float64]) {
  @func_5984(%var_5985) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64], Tensor[(8, 196), float64]) */
}

def @func_6499() -> (Tensor[(396), int8], Tensor[(9, 7, 11), float32]) {
  %890 = fn () -> (Tensor[(396), int8], Tensor[(9, 7, 11), float32]) {
    %887 = @func_5718() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
    %888 = %887.2;
    %889 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
    (%888, %889)
  };
  %890() /* ty=(Tensor[(396), int8], Tensor[(9, 7, 11), float32]) */
}

def @func_9282() -> Tensor[(16, 15, 9), float32] {
  @func_9280() /* ty=Tensor[(16, 15, 9), float32] */
}

def @func_13841() -> Tensor[(9, 7, 11), float32] {
  %892 = fn () -> Tensor[(9, 7, 11), float32] {
    %891 = @func_13714() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6), float64]) */;
    %891.0
  };
  %892() /* ty=Tensor[(9, 7, 11), float32] */
}

def @func_6889() -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) {
  %896 = fn () -> (Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) {
    %893 = @func_6757() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %894 = @func_5843() /* ty=Tensor[(14, 8, 3), bool] */;
    %895 = %893.0;
    (%894, %895)
  };
  %896() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64]) */
}

def @func_12519(%var_12514: Tensor[(9, 7, 11), float64]) -> (Tensor[(336), float64], Tensor[(1568), float64], Tensor[(9, 7, 11), int16]) {
  %897 = cast(meta[relay.Constant][60] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %898 = reshape(%897, newshape=[56, 28]) /* ty=Tensor[(56, 28), float64] */;
  %899 = @func_8790(%898) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(8, 196), float32]) */;
  %900 = %899.0;
  %901 = cast(%var_12514, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
  %902 = shape_of(%900, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%900, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %905 = @func_10838() /* ty=Tensor[(336), float64] */;
  %906 = bitwise_xor(%903, %904) /* ty=Tensor[(9, 7, 11), int16] */;
  (%905, meta[relay.Constant][60] /* ty=Tensor[(1568), float64] */, %906)
}

def @func_10929(%var_10923: Tensor[(112, 4), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(448), float32], Tensor[(78), float32], Tensor[(112, 4), float32]) {
  %907 = @func_8159() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) */;
  %908 = cast(meta[relay.Constant][61] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %909 = cast(%var_10923, dtype="float32") /* ty=Tensor[(112, 4), float32] */;
  %910 = reshape(%908, newshape=[78, 1]) /* ty=Tensor[(78, 1), float32] */;
  %911 = reshape(%909, newshape=[448]) /* ty=Tensor[(448), float32] */;
  %912 = @func_7338(%910, %911) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(2, 13, 3), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(78, 1), float64]) */;
  %913 = %907.0;
  %914 = %912.3;
  (%913, %914, meta[relay.Constant][61] /* ty=Tensor[(78), float32] */, %var_10923)
}

def @func_8524() -> (Tensor[(9, 7, 11), float64],) {
  @func_8522() /* ty=(Tensor[(9, 7, 11), float64],) */
}

def @func_13446() -> (Tensor[(9, 7, 11), float64], Tensor[(6), float64], Tensor[(336), bool], Tensor[(6), float64]) {
  %922 = fn () -> (Tensor[(9, 7, 11), float64], Tensor[(6), float64], Tensor[(336), bool], Tensor[(6), float64]) {
    %915 = cast(meta[relay.Constant][62] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
    %916 = cast(meta[relay.Constant][63] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
    %917 = reshape(%915, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), bool] */;
    %918 = reshape(%916, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %919 = @func_7798(%917, %918) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(1800), uint8]) */;
    %920 = @func_11953() /* ty=Tensor[(9, 7, 11), float64] */;
    %921 = %919.2;
    (%920, %921, meta[relay.Constant][62] /* ty=Tensor[(336), bool] */, meta[relay.Constant][63] /* ty=Tensor[(6), float64] */)
  };
  %922() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6), float64], Tensor[(336), bool], Tensor[(6), float64]) */
}

def @func_13099() -> (Tensor[(396), int8],) {
  %923 = @func_7264() /* ty=Tensor[(396), int8] */;
  (%923,)
}

def @func_14038() -> (Tensor[(9, 7, 11), float32],) {
  @func_14036() /* ty=(Tensor[(9, 7, 11), float32],) */
}

def @func_6725() -> (Tensor[(336), float64],) {
  %924 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %925 = %924.2;
  (%925,)
}

def @func_14213() -> Tensor[(16, 15, 9), float32] {
  %926 = fn () -> Tensor[(16, 15, 9), float32] {
    @func_11221() /* ty=Tensor[(16, 15, 9), float32] */
  };
  %926() /* ty=Tensor[(16, 15, 9), float32] */
}

def @func_12025(%var_12024: Tensor[(336), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) {
  %932 = fn (%var_12019: Tensor[(336), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) {
    %927 = @func_6463() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 12, 10), uint8], Tensor[(6, 11, 6), bool], Tensor[(396), int8], Tensor[(8, 14, 4), float32], Tensor[(448), float32]) */;
    %928 = cast(%var_12019, dtype="float64") /* ty=Tensor[(336), float64] */;
    %929 = reshape(%928, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
    %930 = %927.0;
    %931 = @func_3535(%929) /* ty=Tensor[(14, 8, 3), bool] */;
    (%930, %931, %var_12019)
  };
  %932(%var_12024) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */
}

def @func_2228(%var_2136: float32, %var_2137: Tensor[(11, 12, 4), float32], %var_2144: Tensor[(1568), float64], %var_2171: Tensor[(6), float64]) -> (Tensor[(11, 12, 4), float32], Tensor[(16, 7, 14), float64], Tensor[(1568), float64], Tensor[(1800), uint8], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(15, 8, 8), bool], Tensor[(960), float32]) {
  %933 = cast(%var_2136, dtype="float32") /* ty=float32 */;
  %934 = cast(%var_2137, dtype="float32") /* ty=Tensor[(11, 12, 4), float32] */;
  %935 = cast(%var_2144, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %936 = cast(meta[relay.Constant][64] /* ty=Tensor[(1800), uint8] */, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %937 = cast(meta[relay.Constant][64] /* ty=Tensor[(1800), uint8] */, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %938 = reshape(%935, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), float64] */;
  %939 = reshape(%936, newshape=[1800]) /* ty=Tensor[(1800), uint8] */;
  %940 = reshape(%937, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), float32] */;
  %941 = @func_440(%938, %939, %940) /* ty=(Tensor[(16, 7, 14), float64], Tensor[(1800), uint8], Tensor[(15, 10, 12), int32]) */;
  %942 = cast(%var_2171, dtype="float64") /* ty=Tensor[(6), float64] */;
  %943 = reshape(%942, newshape=[1, 2, 3]) /* ty=Tensor[(1, 2, 3), float64] */;
  %944 = @func_1929(%943) /* ty=(Tensor[(1, 2, 3), float64],) */;
  %945 = cast(meta[relay.Constant][65] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %946 = cast(meta[relay.Constant][65] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %947 = reshape(%945, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %948 = reshape(%946, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %949 = divide(%933, %934) /* ty=Tensor[(11, 12, 4), float32] */;
  %950 = %941.0;
  %951 = %944.0;
  %952 = @func_1624(%947, %948) /* ty=Tensor[(15, 8, 8), bool] */;
  (%949, %950, %var_2144, meta[relay.Constant][64] /* ty=Tensor[(1800), uint8] */, %951, %var_2171, %952, meta[relay.Constant][65] /* ty=Tensor[(960), float32] */)
}

def @func_6703(%var_6697: Tensor[(8, 12, 10), float64]) -> (Tensor[(8, 12, 10), float64], Tensor[(336), float64]) {
  %953 = cast(%var_6697, dtype="float64") /* ty=Tensor[(8, 12, 10), float64] */;
  %954 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %955 = log10(%953) /* ty=Tensor[(8, 12, 10), float64] */;
  %956 = %954.2;
  (%955, %956)
}

def @func_9547() -> (Tensor[(6, 11, 6), bool],) {
  @func_9545() /* ty=(Tensor[(6, 11, 6), bool],) */
}

def @func_7341(%var_7339: Tensor[(78, 1), float32], %var_7340: Tensor[(448), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(2, 13, 3), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(78, 1), float64]) {
  %967 = fn (%var_7298: Tensor[(78, 1), float32], %var_7306: Tensor[(448), float32]) -> (Tensor[(9, 7, 11), float64], Tensor[(2, 13, 3), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(78, 1), float64]) {
    %957 = cast(%var_7298, dtype="float32") /* ty=Tensor[(78, 1), float32] */;
    %958 = reshape(%957, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float32] */;
    %959 = cast(%var_7306, dtype="float32") /* ty=Tensor[(448), float32] */;
    %960 = reshape(%959, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
    %961 = @func_5376(%960) /* ty=(Tensor[(8, 14, 4), float32],) */;
    %962 = cast(%var_7298, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
    %963 = @func_6020() /* ty=Tensor[(9, 7, 11), float64] */;
    %964 = @func_5343(%958) /* ty=Tensor[(2, 13, 3), float32] */;
    %965 = %961.0;
    %966 = tan(%962) /* ty=Tensor[(78, 1), float64] */;
    (%963, %964, %965, %var_7306, %966)
  };
  %967(%var_7339, %var_7340) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(2, 13, 3), float32], Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(78, 1), float64]) */
}

def @func_6379(%var_6339: Tensor[(6), float64], %var_6365: Tensor[(1800), uint8]) -> (Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(1568, 1), float64], Tensor[(6), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8], Tensor[(192, 4), bool], Tensor[(60), int64], Tensor[(24, 10), int64], Tensor[(14, 66), float64], Tensor[(9, 7, 11), float64], Tensor[(4, 15, 4), int64]) {
  %968 = @func_6073() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %969 = cast(meta[relay.Constant][66] /* ty=Tensor[(1568, 1), float64] */, dtype="float64") /* ty=Tensor[(1568, 1), float64] */;
  %970 = cast(%var_6339, dtype="float64") /* ty=Tensor[(6), float64] */;
  %971 = reshape(%969, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %972 = reshape(%970, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %973 = @func_6193(%971, %972) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(15, 8, 8), bool], float32, Tensor[(528), float32], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(9, 7, 11), float64]) */;
  %974 = cast(%var_6365, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %975 = reshape(%974, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), uint8] */;
  %976 = cast(meta[relay.Constant][67] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %977 = cast(meta[relay.Constant][68] /* ty=Tensor[(24, 10), int64] */, dtype="int64") /* ty=Tensor[(24, 10), int64] */;
  %978 = cast(meta[relay.Constant][69] /* ty=Tensor[(14, 66), float64] */, dtype="float64") /* ty=Tensor[(14, 66), float64] */;
  %979 = reshape(%976, newshape=[1, 15, 4]) /* ty=Tensor[(1, 15, 4), int64] */;
  %980 = reshape(%977, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), int64] */;
  %981 = reshape(%978, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %982 = @func_5433(%979, %980, %981) /* ty=(Tensor[(4, 15, 4), int64], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(192, 4), bool]) */;
  %983 = cast(meta[relay.Constant][67] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %984 = cast(meta[relay.Constant][68] /* ty=Tensor[(24, 10), int64] */, dtype="int64") /* ty=Tensor[(24, 10), int64] */;
  %985 = cast(meta[relay.Constant][69] /* ty=Tensor[(14, 66), float64] */, dtype="float64") /* ty=Tensor[(14, 66), float64] */;
  %986 = reshape(%983, newshape=[1, 15, 4]) /* ty=Tensor[(1, 15, 4), int64] */;
  %987 = reshape(%984, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), int64] */;
  %988 = reshape(%985, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %989 = @func_5433(%986, %987, %988) /* ty=(Tensor[(4, 15, 4), int64], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(16, 8, 6), float64], Tensor[(192, 4), bool]) */;
  %990 = %968.0;
  %991 = %973.4;
  %992 = @func_176(%975) /* ty=Tensor[(15, 10, 12), float32] */;
  %993 = %982.4;
  %994 = @func_6055() /* ty=Tensor[(9, 7, 11), float64] */;
  %995 = %989.0;
  (%990, %991, meta[relay.Constant][66] /* ty=Tensor[(1568, 1), float64] */, %var_6339, %992, %var_6365, %993, meta[relay.Constant][67] /* ty=Tensor[(60), int64] */, meta[relay.Constant][68] /* ty=Tensor[(24, 10), int64] */, meta[relay.Constant][69] /* ty=Tensor[(14, 66), float64] */, %994, %995)
}

def @func_6572(%var_6571: Tensor[(6), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 8, 3), bool], Tensor[(168, 2), float64]) {
  %1004 = fn (%var_6552: Tensor[(6), float64]) -> (Tensor[(9, 7, 11), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 8, 3), bool], Tensor[(168, 2), float64]) {
    %996 = cast(%var_6552, dtype="float64") /* ty=Tensor[(6), float64] */;
    %997 = reshape(%996, newshape=[1, 2, 3]) /* ty=Tensor[(1, 2, 3), float64] */;
    %998 = @func_1929(%997) /* ty=(Tensor[(1, 2, 3), float64],) */;
    %999 = cast(meta[relay.Constant][70] /* ty=Tensor[(168, 2), float64] */, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
    %1000 = reshape(%999, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
    %1001 = @func_6098() /* ty=Tensor[(9, 7, 11), float32] */;
    %1002 = %998.0;
    %1003 = @func_3535(%1000) /* ty=Tensor[(14, 8, 3), bool] */;
    (%1001, %1002, %var_6552, %1003, meta[relay.Constant][70] /* ty=Tensor[(168, 2), float64] */)
  };
  %1004(%var_6571) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 8, 3), bool], Tensor[(168, 2), float64]) */
}

def @func_9641(%var_9639: Tensor[(12, 5, 16), float64]) -> (Tensor[(12, 5, 16), float64], Tensor[(396), int8]) {
  @func_9638(%var_9639) /* ty=(Tensor[(12, 5, 16), float64], Tensor[(396), int8]) */
}

def @func_13036() -> (Tensor[(336), float64], Tensor[(6, 3, 1), float32]) {
  @func_13034() /* ty=(Tensor[(336), float64], Tensor[(6, 3, 1), float32]) */
}

def @func_11131(%var_11126: Tensor[(160), int64], %var_11127: Tensor[(15), float32], %var_11128: Tensor[(945), float32], %var_11129: Tensor[(768), bool], %var_11130: Tensor[(10, 96), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(8, 12, 10), float64], Tensor[(9, 15, 7), float32], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(945), float32], Tensor[(16, 8, 6), float64], Tensor[(768), bool], Tensor[(10, 96), bool], Tensor[(9, 7, 11), float64]) {
  @func_11124(%var_11126, %var_11127, %var_11128, %var_11129, %var_11130) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(8, 12, 10), float64], Tensor[(9, 15, 7), float32], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(945), float32], Tensor[(16, 8, 6), float64], Tensor[(768), bool], Tensor[(10, 96), bool], Tensor[(9, 7, 11), float64]) */
}

def @func_5345(%var_5344: Tensor[(2, 13, 3), float32]) -> Tensor[(2, 13, 3), float32] {
  %1006 = fn (%var_5335: Tensor[(2, 13, 3), float32]) -> Tensor[(2, 13, 3), float32] {
    %1005 = cast(%var_5335, dtype="float32") /* ty=Tensor[(2, 13, 3), float32] */;
    asinh(%1005) /* ty=Tensor[(2, 13, 3), float32] */
  };
  %1006(%var_5344) /* ty=Tensor[(2, 13, 3), float32] */
}

def @func_3537(%var_3536: Tensor[(14, 8, 3), float64]) -> Tensor[(14, 8, 3), bool] {
  %1013 = fn (%var_3511: Tensor[(14, 8, 3), float64]) -> Tensor[(14, 8, 3), bool] {
    %1007 = cast(%var_3511, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
    %1008 = sinh(%1007) /* ty=Tensor[(14, 8, 3), float64] */;
    %1009 = cast(%var_3511, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
    %1010 = shape_of(%1008, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1011 = cast(%1008, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
    %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%1011, %1012) /* ty=Tensor[(14, 8, 3), bool] */
  };
  %1013(%var_3536) /* ty=Tensor[(14, 8, 3), bool] */
}

def @func_444(%var_441: Tensor[(16, 7, 14), float64], %var_442: Tensor[(1800), uint8], %var_443: Tensor[(15, 10, 12), float32]) -> (Tensor[(16, 7, 14), float64], Tensor[(1800), uint8], Tensor[(15, 10, 12), int32]) {
  %1024 = fn (%var_399: Tensor[(16, 7, 14), float64], %var_431: Tensor[(1800), uint8], %var_433: Tensor[(15, 10, 12), float32]) -> (Tensor[(16, 7, 14), float64], Tensor[(1800), uint8], Tensor[(15, 10, 12), int32]) {
    %1014 = cast(%var_399, dtype="float64") /* ty=Tensor[(16, 7, 14), float64] */;
    %1015 = cast(%var_431, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
    %1016 = reshape(%1015, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), uint8] */;
    %1017 = @func_176(%1016) /* ty=Tensor[(15, 10, 12), float32] */;
    %1018 = cast(%var_433, dtype="int32") /* ty=Tensor[(15, 10, 12), int32] */;
    %1019 = shape_of(%1017, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1020 = cast(%1017, dtype="int32") /* ty=Tensor[(15, 10, 12), int32] */;
    %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1022 = sinh(%1014) /* ty=Tensor[(16, 7, 14), float64] */;
    %1023 = subtract(%1020, %1021) /* ty=Tensor[(15, 10, 12), int32] */;
    (%1022, %var_431, %1023)
  };
  %1024(%var_441, %var_442, %var_443) /* ty=(Tensor[(16, 7, 14), float64], Tensor[(1800), uint8], Tensor[(15, 10, 12), int32]) */
}

def @func_6691() -> (Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) {
  @func_6689() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */
}

def @func_12989(%var_12987: Tensor[(5, 3, 14), bool]) -> (Tensor[(5, 3, 14), bool], Tensor[(9, 7, 11), int16], Tensor[(231, 3), float64]) {
  @func_12986(%var_12987) /* ty=(Tensor[(5, 3, 14), bool], Tensor[(9, 7, 11), int16], Tensor[(231, 3), float64]) */
}

def @func_9774(%var_9772: Tensor[(9, 7, 11), float64], %var_9773: Tensor[(78), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), int32], Tensor[(2, 13, 3), float32], Tensor[(78), float32], Tensor[(16, 8, 6), float64], Tensor[(768), bool]) {
  @func_9770(%var_9772, %var_9773) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), int32], Tensor[(2, 13, 3), float32], Tensor[(78), float32], Tensor[(16, 8, 6), float64], Tensor[(768), bool]) */
}

def @func_2696(%var_2649: int64, %var_2650: Tensor[(1, 16, 10), int64], %var_2664: Tensor[(15), float32], %var_2667: Tensor[(960), float32], %var_2682: Tensor[(945), float32]) -> (Tensor[(1, 16, 10), int64], Tensor[(1, 15, 1), float32], Tensor[(15), float32], Tensor[(15, 8, 8), bool], Tensor[(960), float32], Tensor[(9, 15, 7), float32], Tensor[(945), float32], Tensor[(15, 8, 8), bool]) {
  %1025 = cast(%var_2649, dtype="int64") /* ty=int64 */;
  %1026 = cast(%var_2650, dtype="int64") /* ty=Tensor[(1, 16, 10), int64] */;
  %1027 = cast(%var_2664, dtype="float32") /* ty=Tensor[(15), float32] */;
  %1028 = reshape(%1027, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float32] */;
  %1029 = @func_1754(%1028) /* ty=(Tensor[(1, 15, 1), float32],) */;
  %1030 = cast(%var_2667, dtype="float32") /* ty=Tensor[(960), float32] */;
  %1031 = cast(%var_2667, dtype="float32") /* ty=Tensor[(960), float32] */;
  %1032 = reshape(%1030, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %1033 = reshape(%1031, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %1034 = cast(%var_2682, dtype="float32") /* ty=Tensor[(945), float32] */;
  %1035 = reshape(%1034, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), float32] */;
  %1036 = @func_2131(%1035) /* ty=(Tensor[(9, 15, 7), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
  %1037 = cast(%var_2682, dtype="float32") /* ty=Tensor[(945), float32] */;
  %1038 = cast(%var_2667, dtype="float32") /* ty=Tensor[(960), float32] */;
  %1039 = cast(%var_2667, dtype="float32") /* ty=Tensor[(960), float32] */;
  %1040 = reshape(%1038, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %1041 = reshape(%1039, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float32] */;
  %1042 = minimum(%1025, %1026) /* ty=Tensor[(1, 16, 10), int64] */;
  %1043 = %1029.0;
  %1044 = @func_1624(%1032, %1033) /* ty=Tensor[(15, 8, 8), bool] */;
  %1045 = %1036.0;
  %1046 = sinh(%1037) /* ty=Tensor[(945), float32] */;
  %1047 = @func_1624(%1040, %1041) /* ty=Tensor[(15, 8, 8), bool] */;
  (%1042, %1043, %var_2664, %1044, %var_2667, %1045, %1046, %1047)
}

def @func_13385() -> (Tensor[(396), int8], Tensor[(9, 7, 11), float32], Tensor[(6), float64]) {
  %1048 = @func_13099() /* ty=(Tensor[(396), int8],) */;
  %1049 = cast(meta[relay.Constant][71] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %1050 = reshape(%1049, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %1051 = @func_6570(%1050) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 8, 3), bool], Tensor[(168, 2), float64]) */;
  %1052 = %1048.0;
  %1053 = %1051.0;
  (%1052, %1053, meta[relay.Constant][71] /* ty=Tensor[(6), float64] */)
}

def @func_9586() -> (Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) {
  @func_9584() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(9, 7, 11), float64]) */
}

def @func_1624(%var_1618: Tensor[(15, 8, 8), float32], %var_1619: Tensor[(15, 8, 8), float32]) -> Tensor[(15, 8, 8), bool] {
  %1054 = cast(%var_1619, dtype="bool") /* ty=Tensor[(15, 8, 8), bool] */;
  %1055 = shape_of(%var_1618, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1056 = cast(%var_1618, dtype="bool") /* ty=Tensor[(15, 8, 8), bool] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1056, %1057) /* ty=Tensor[(15, 8, 8), bool] */
}

def @func_12665() -> (Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool]) {
  @func_12663() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool]) */
}

def @func_10755(%var_10750: Tensor[(378), float64], %var_10751: Tensor[(2, 224), float32], %var_10752: Tensor[(594), uint32], %var_10753: Tensor[(924), float64], %var_10754: Tensor[(3, 600), uint8]) -> (Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(8, 14, 4), float32], Tensor[(2, 224), float32], Tensor[(9, 7, 11), float32], Tensor[(594), uint32], Tensor[(924), float64], Tensor[(3, 600), uint8]) {
  %1078 = fn (%var_10714: Tensor[(378), float64], %var_10728: Tensor[(2, 224), float32], %var_10739: Tensor[(594), uint32], %var_10740: Tensor[(924), float64], %var_10741: Tensor[(3, 600), uint8]) -> (Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(8, 14, 4), float32], Tensor[(2, 224), float32], Tensor[(9, 7, 11), float32], Tensor[(594), uint32], Tensor[(924), float64], Tensor[(3, 600), uint8]) {
    %1058 = @func_8159() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) */;
    %1059 = cast(%var_10714, dtype="float64") /* ty=Tensor[(378), float64] */;
    %1060 = reshape(%1059, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float64] */;
    %1061 = @func_9656(%1060) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(9, 7, 11), float64]) */;
    %1062 = cast(%var_10728, dtype="float32") /* ty=Tensor[(2, 224), float32] */;
    %1063 = reshape(%1062, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
    %1064 = @func_5376(%1063) /* ty=(Tensor[(8, 14, 4), float32],) */;
    %1065 = cast(%var_10739, dtype="uint32") /* ty=Tensor[(594), uint32] */;
    %1066 = cast(%var_10739, dtype="uint32") /* ty=Tensor[(594), uint32] */;
    %1067 = cast(%var_10740, dtype="float64") /* ty=Tensor[(924), float64] */;
    %1068 = cast(%var_10741, dtype="uint8") /* ty=Tensor[(3, 600), uint8] */;
    %1069 = reshape(%1065, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), uint32] */;
    %1070 = reshape(%1066, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), uint32] */;
    %1071 = reshape(%1067, newshape=[462, 2]) /* ty=Tensor[(462, 2), float64] */;
    %1072 = reshape(%1068, newshape=[1800]) /* ty=Tensor[(1800), uint8] */;
    %1073 = @func_10332(%1069, %1070, %1071, %1072) /* ty=(Tensor[(11, 9, 6), uint32], Tensor[(9, 7, 11), float64], Tensor[(9, 7, 11), float32], Tensor[(336), float64], Tensor[(462, 2), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8]) */;
    %1074 = %1058.1;
    %1075 = %1061.1;
    %1076 = %1064.0;
    %1077 = %1073.2;
    (%1074, %1075, %var_10714, %1076, %var_10728, %1077, %var_10739, %var_10740, %var_10741)
  };
  %1078(%var_10750, %var_10751, %var_10752, %var_10753, %var_10754) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(9, 7, 11), float64], Tensor[(378), float64], Tensor[(8, 14, 4), float32], Tensor[(2, 224), float32], Tensor[(9, 7, 11), float32], Tensor[(594), uint32], Tensor[(924), float64], Tensor[(3, 600), uint8]) */
}

def @func_10676() -> (Tensor[(336), float64], Tensor[(9, 7, 11), float64]) {
  %1079 = @func_9799() /* ty=(Tensor[(336), float64], Tensor[(9, 7, 11), float64]) */;
  %1080 = @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */;
  %1081 = %1079.0;
  %1082 = %1080.0;
  (%1081, %1082)
}

def @func_14028() -> (Tensor[(396), int8],) {
  %1085 = fn () -> (Tensor[(396), int8],) {
    %1083 = @func_6689() /* ty=(Tensor[(9, 7, 11), float32], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */;
    %1084 = %1083.2;
    (%1084,)
  };
  %1085() /* ty=(Tensor[(396), int8],) */
}

def @main(%var_14551: Tensor[(78), float32]) -> (Tensor[(9, 7, 11), float32], Tensor[(7, 99), float32], Tensor[(78), float32]) {
  %1086 = @func_13840() /* ty=Tensor[(9, 7, 11), float32] */;
  %1087 = cast(%1086, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %1088 = cast(%var_14551, dtype="float32") /* ty=Tensor[(78), float32] */;
  %1089 = reshape(%1087, newshape=[7, 99]) /* ty=Tensor[(7, 99), float64] */;
  %1090 = reshape(%1088, newshape=[78, 1]) /* ty=Tensor[(78, 1), float32] */;
  %1091 = @func_13771(%1089, %1090) /* ty=(Tensor[(396), int8], Tensor[(16, 15, 9), bool], Tensor[(2, 13, 3), float32], Tensor[(78, 1), float32], Tensor[(7, 99), bool]) */;
  %1092 = %1091.4;
  %1093 = cast(%1092, dtype="float32") /* ty=Tensor[(7, 99), float32] */;
  %1094 = cast(%var_14551, dtype="float32") /* ty=Tensor[(78), float32] */;
  %1095 = @func_13840() /* ty=Tensor[(9, 7, 11), float32] */;
  %1096 = atanh(%1093) /* ty=Tensor[(7, 99), float32] */;
  %1097 = acos(%1094) /* ty=Tensor[(78), float32] */;
  (%1095, %1096, %1097)
}

def @func_5719() -> (Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) {
  %1103 = fn () -> (Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) {
    %1098 = @func_5502() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %1099 = cast(meta[relay.Constant][72] /* ty=Tensor[(396), int8] */, dtype="int8") /* ty=Tensor[(396), int8] */;
    %1100 = reshape(%1099, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), int8] */;
    %1101 = %1098.0;
    %1102 = @func_884(%1100) /* ty=Tensor[(6, 11, 6), bool] */;
    (%1101, %1102, meta[relay.Constant][72] /* ty=Tensor[(396), int8] */)
  };
  %1103() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 11, 6), bool], Tensor[(396), int8]) */
}

def @func_11499(%var_11497: Tensor[(16, 5, 15), uint32], %var_11498: Tensor[(16, 5, 15), uint32]) -> Tensor[(16, 5, 15), uint32] {
  @func_11495(%var_11497, %var_11498) /* ty=Tensor[(16, 5, 15), uint32] */
}

def @func_6706(%var_6704: Tensor[(8, 12, 10), float64]) -> (Tensor[(8, 12, 10), float64], Tensor[(336), float64]) {
  @func_6703(%var_6704) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(336), float64]) */
}

def @func_8096() -> Tensor[(6, 3, 1), float32] {
  %1105 = fn () -> Tensor[(6, 3, 1), float32] {
    %1104 = @func_6992() /* ty=(Tensor[(14, 8, 3), bool], Tensor[(336), float64], Tensor[(6, 3, 1), float32], Tensor[(18), float32]) */;
    %1104.2
  };
  %1105() /* ty=Tensor[(6, 3, 1), float32] */
}

def @func_6056() -> Tensor[(9, 7, 11), float64] {
  %1106 = fn () -> Tensor[(9, 7, 11), float64] {
    @func_6020() /* ty=Tensor[(9, 7, 11), float64] */
  };
  %1106() /* ty=Tensor[(9, 7, 11), float64] */
}

def @func_11124(%var_11101: Tensor[(160), int64], %var_11102: Tensor[(15), float32], %var_11103: Tensor[(945), float32], %var_11106: Tensor[(768), bool], %var_11113: Tensor[(10, 96), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(8, 12, 10), float64], Tensor[(9, 15, 7), float32], int64, Tensor[(160), int64], Tensor[(15), float32], Tensor[(945), float32], Tensor[(16, 8, 6), float64], Tensor[(768), bool], Tensor[(10, 96), bool], Tensor[(9, 7, 11), float64]) {
  %1107 = @func_8159() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(6, 3, 1), float32]) */;
  %1108 = cast(meta[relay.Constant][73] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %1109 = reshape(%1108, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %1110 = @func_6703(%1109) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(336), float64]) */;
  %1111 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1112 = cast(%var_11101, dtype="int64") /* ty=Tensor[(160), int64] */;
  %1113 = cast(%var_11102, dtype="float32") /* ty=Tensor[(15), float32] */;
  %1114 = %1110.0;
  %1115 = cast(%1114, dtype="float32") /* ty=Tensor[(8, 12, 10), float32] */;
  %1116 = cast(%var_11103, dtype="float32") /* ty=Tensor[(945), float32] */;
  %1117 = reshape(%1111, newshape=[]) /* ty=int64 */;
  %1118 = reshape(%1112, newshape=[1, 16, 10]) /* ty=Tensor[(1, 16, 10), int64] */;
  %1119 = reshape(%1113, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %1120 = reshape(%1115, newshape=[960]) /* ty=Tensor[(960), float32] */;
  %1121 = reshape(%1116, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %1122 = @func_2696(%1117, %1118, %1119, %1120, %1121) /* ty=(Tensor[(1, 16, 10), int64], Tensor[(1, 15, 1), float32], Tensor[(15), float32], Tensor[(15, 8, 8), bool], Tensor[(960), float32], Tensor[(9, 15, 7), float32], Tensor[(945), float32], Tensor[(15, 8, 8), bool]) */;
  %1123 = cast(%var_11106, dtype="bool") /* ty=Tensor[(768), bool] */;
  %1124 = cast(%var_11106, dtype="bool") /* ty=Tensor[(768), bool] */;
  %1125 = reshape(%1123, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %1126 = reshape(%1124, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), bool] */;
  %1127 = @func_4013(%1125, %1126) /* ty=(Tensor[(16, 8, 6), float64],) */;
  %1128 = cast(%var_11113, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %1129 = shape_of(meta[relay.Constant][73] /* ty=Tensor[(10, 96), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1130 = cast(meta[relay.Constant][73] /* ty=Tensor[(10, 96), float64] */, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %1131 = dyn.reshape(%1128, %1129, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1132 = %1107.0;
  %1133 = %1122.5;
  %1134 = %1127.0;
  %1135 = greater(%1130, %1131) /* ty=Tensor[(10, 96), bool] */;
  %1136 = @func_9849() /* ty=Tensor[(9, 7, 11), float64] */;
  (%1132, %1114, %1133, 7 /* ty=int64 */, %var_11101, %var_11102, %var_11103, %1134, %var_11106, %1135, %1136)
}

def @func_176(%var_146: Tensor[(15, 10, 12), uint8]) -> Tensor[(15, 10, 12), float32] {
  %1137 = cast(%var_146, dtype="bool") /* ty=Tensor[(15, 10, 12), bool] */;
  %1138 = shape_of(meta[relay.Constant][74] /* ty=Tensor[(15, 10, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1139 = cast(meta[relay.Constant][74] /* ty=Tensor[(15, 10, 12), uint8] */, dtype="bool") /* ty=Tensor[(15, 10, 12), bool] */;
  %1140 = dyn.reshape(%1137, %1138, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1141 = greater(%1139, %1140) /* ty=Tensor[(15, 10, 12), bool] */;
  %1142 = cast(%1141, dtype="float64") /* ty=Tensor[(15, 10, 12), float64] */;
  %1143 = asin(%1142) /* ty=Tensor[(15, 10, 12), float64] */;
  %1144 = cast(%1143, dtype="float32") /* ty=Tensor[(15, 10, 12), float32] */;
  %1145 = shape_of(%var_146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1146 = cast(%var_146, dtype="float32") /* ty=Tensor[(15, 10, 12), float32] */;
  %1147 = dyn.reshape(%1144, %1145, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  minimum(%1146, %1147) /* ty=Tensor[(15, 10, 12), float32] */
}

def @func_9659(%var_9657: Tensor[(6, 9, 7), float64]) -> (Tensor[(6, 9, 7), float64], Tensor[(9, 7, 11), float64]) {
  @func_9656(%var_9657) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(9, 7, 11), float64]) */
}

def @func_179(%var_177: Tensor[(15, 10, 12), uint8]) -> Tensor[(15, 10, 12), float32] {
  @func_176(%var_177) /* ty=Tensor[(15, 10, 12), float32] */
}

def @func_7214(%var_7213: Tensor[(9, 7, 11), float64]) -> Tensor[(9, 7, 11), int16] {
  %1154 = fn (%var_7195: Tensor[(9, 7, 11), float64]) -> Tensor[(9, 7, 11), int16] {
    %1148 = @func_6145() /* ty=(Tensor[(9, 7, 11), float64],) */;
    %1149 = %1148.0;
    %1150 = cast(%var_7195, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
    %1151 = shape_of(%1149, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1152 = cast(%1149, dtype="int16") /* ty=Tensor[(9, 7, 11), int16] */;
    %1153 = dyn.reshape(%1150, %1151, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    logical_xor(%1152, %1153) /* ty=Tensor[(9, 7, 11), int16] */
  };
  %1154(%var_7213) /* ty=Tensor[(9, 7, 11), int16] */
}

def @func_8276(%var_8273: Tensor[(6, 5, 14), int64], %var_8274: Tensor[(6, 5, 14), int64], %var_8275: Tensor[(924), float64]) -> (Tensor[(6, 5, 14), float64], Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(6, 5, 14), float32], Tensor[(6), float64], Tensor[(924), float64]) {
  @func_8271(%var_8273, %var_8274, %var_8275) /* ty=(Tensor[(6, 5, 14), float64], Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(6, 5, 14), float32], Tensor[(6), float64], Tensor[(924), float64]) */
}

def @func_9321() -> Tensor[(9, 7, 11), float32] {
  @func_9319() /* ty=Tensor[(9, 7, 11), float32] */
}

def @func_5677() -> (Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) {
  @func_5675() /* ty=(Tensor[(9, 7, 11), float64], Tensor[(14, 8, 3), bool], Tensor[(336), float64]) */
}

def @func_12207() -> (Tensor[(9, 7, 11), float64],) {
  %1155 = @func_6020() /* ty=Tensor[(9, 7, 11), float64] */;
  (%1155,)
}

def @func_7798(%var_7778: Tensor[(14, 8, 3), bool], %var_7791: Tensor[(6), float64]) -> (Tensor[(14, 8, 3), bool], Tensor[(1568), float64], Tensor[(6), float64], Tensor[(1800), uint8]) {
  %1156 = @func_5843() /* ty=Tensor[(14, 8, 3), bool] */;
  %1157 = cast(%var_7778, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %1158 = shape_of(%1156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1159 = cast(%1156, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %1160 = dyn.reshape(%1157, %1158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1161 = cast(%var_7791, dtype="float64") /* ty=Tensor[(6), float64] */;
  %1162 = cast(meta[relay.Constant][75] /* ty=Tensor[(1800), uint8] */, dtype="uint8") /* ty=Tensor[(1800), uint8] */;
  %1163 = reshape(%1161, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %1164 = reshape(%1162, newshape=[1800]) /* ty=Tensor[(1800), uint8] */;
  %1165 = @func_6379(%1163, %1164) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(1568), float64], Tensor[(1568, 1), float64], Tensor[(6), float64], Tensor[(15, 10, 12), float32], Tensor[(1800), uint8], Tensor[(192, 4), bool], Tensor[(60), int64], Tensor[(24, 10), int64], Tensor[(14, 66), float64], Tensor[(9, 7, 11), float64], Tensor[(4, 15, 4), int64]) */;
  %1166 = greater(%1159, %1160) /* ty=Tensor[(14, 8, 3), bool] */;
  %1167 = %1165.1;
  (%1166, %1167, %var_7791, meta[relay.Constant][75] /* ty=Tensor[(1800), uint8] */)
}

def @func_8790(%var_8784: Tensor[(56, 28), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(8, 196), float32]) {
  %1168 = @func_6145() /* ty=(Tensor[(9, 7, 11), float64],) */;
  %1169 = cast(%var_8784, dtype="float64") /* ty=Tensor[(56, 28), float64] */;
  %1170 = reshape(%1169, newshape=[8, 196]) /* ty=Tensor[(8, 196), float64] */;
  %1171 = @func_5984(%1170) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(9, 7, 11), float64], Tensor[(8, 196), float64]) */;
  %1172 = %1171.2;
  %1173 = cast(%var_8784, dtype="float32") /* ty=Tensor[(56, 28), float32] */;
  %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1175 = cast(%1172, dtype="float32") /* ty=Tensor[(8, 196), float32] */;
  %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1177 = %1168.0;
  %1178 = divide(%1175, %1176) /* ty=Tensor[(8, 196), float32] */;
  (%1177, %1178)
}

def @func_8677(%var_8675: Tensor[(3, 156), uint16]) -> (Tensor[(16, 15, 9), bool], Tensor[(396), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), uint16], Tensor[(154, 6), float64]) {
  @func_8674(%var_8675) /* ty=(Tensor[(16, 15, 9), bool], Tensor[(396), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), uint16], Tensor[(154, 6), float64]) */
}

def @func_11062() -> (Tensor[(11, 8, 16), float64], Tensor[(16, 8, 6), float64], Tensor[(768), bool]) {
  @func_11060() /* ty=(Tensor[(11, 8, 16), float64], Tensor[(16, 8, 6), float64], Tensor[(768), bool]) */
}

def @func_9656(%var_9650: Tensor[(6, 9, 7), float64]) -> (Tensor[(6, 9, 7), float64], Tensor[(9, 7, 11), float64]) {
  %1179 = cast(%var_9650, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %1180 = cosh(%1179) /* ty=Tensor[(6, 9, 7), float64] */;
  %1181 = @func_8998() /* ty=Tensor[(9, 7, 11), float64] */;
  (%1180, %1181)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen732/build/output.py", line 3382, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:01:49] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


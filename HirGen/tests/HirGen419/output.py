import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_351 = relay.var("var_351", dtype = "float64", shape = (1, 10, 1))#candidate|351|(1, 10, 1)|var|float64
uop_352 = relay.log(var_351.astype('float64')) # shape=(1, 10, 1)
output = uop_352
output2 = uop_352
func_361 = relay.Function([var_351,], output)
mod['func_361'] = func_361
mod = relay.transform.InferType()(mod)
var_362 = relay.var("var_362", dtype = "float64", shape = (1, 10, 1))#candidate|362|(1, 10, 1)|var|float64
output = func_361(var_362)
func_363 = relay.Function([var_362], output)
mutated_mod['func_363'] = func_363
mutated_mod = relay.transform.InferType()(mutated_mod)
var_501 = relay.var("var_501", dtype = "int16", shape = (6, 15, 1))#candidate|501|(6, 15, 1)|var|int16
var_502 = relay.var("var_502", dtype = "int16", shape = (6, 15, 4))#candidate|502|(6, 15, 4)|var|int16
bop_503 = relay.bitwise_xor(var_501.astype('int16'), var_502.astype('int16')) # shape=(6, 15, 4)
func_361_call = mod.get_global_var('func_361')
func_363_call = mutated_mod.get_global_var('func_363')
var_510 = relay.var("var_510", dtype = "float64", shape = (5, 2))#candidate|510|(5, 2)|var|float64
call_509 = func_361_call(relay.reshape(var_510.astype('float64'), [1, 10, 1]))
call_511 = func_361_call(relay.reshape(var_510.astype('float64'), [1, 10, 1]))
output = relay.Tuple([bop_503,call_509,var_510,])
output2 = relay.Tuple([bop_503,call_511,var_510,])
func_515 = relay.Function([var_501,var_502,var_510,], output)
mod['func_515'] = func_515
mod = relay.transform.InferType()(mod)
mutated_mod['func_515'] = func_515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_515_call = mutated_mod.get_global_var('func_515')
var_517 = relay.var("var_517", dtype = "int16", shape = (6, 15, 1))#candidate|517|(6, 15, 1)|var|int16
var_518 = relay.var("var_518", dtype = "int16", shape = (6, 15, 4))#candidate|518|(6, 15, 4)|var|int16
var_519 = relay.var("var_519", dtype = "float64", shape = (5, 2))#candidate|519|(5, 2)|var|float64
call_516 = func_515_call(var_517,var_518,var_519,)
output = call_516
func_520 = relay.Function([var_517,var_518,var_519,], output)
mutated_mod['func_520'] = func_520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_535 = relay.var("var_535", dtype = "float32", shape = (2, 15, 11))#candidate|535|(2, 15, 11)|var|float32
var_536 = relay.var("var_536", dtype = "float32", shape = (2, 15, 11))#candidate|536|(2, 15, 11)|var|float32
bop_537 = relay.floor_divide(var_535.astype('float32'), relay.reshape(var_536.astype('float32'), relay.shape_of(var_535))) # shape=(2, 15, 11)
output = bop_537
output2 = bop_537
func_541 = relay.Function([var_535,var_536,], output)
mod['func_541'] = func_541
mod = relay.transform.InferType()(mod)
mutated_mod['func_541'] = func_541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_541_call = mutated_mod.get_global_var('func_541')
var_543 = relay.var("var_543", dtype = "float32", shape = (2, 15, 11))#candidate|543|(2, 15, 11)|var|float32
var_544 = relay.var("var_544", dtype = "float32", shape = (2, 15, 11))#candidate|544|(2, 15, 11)|var|float32
call_542 = func_541_call(var_543,var_544,)
output = call_542
func_545 = relay.Function([var_543,var_544,], output)
mutated_mod['func_545'] = func_545
mutated_mod = relay.transform.InferType()(mutated_mod)
const_968 = relay.const([[[True,False,True,False,True,True,True],[False,False,False,False,True,False,True],[False,False,False,True,True,False,False],[False,True,False,True,True,True,True],[False,True,True,True,False,False,True],[True,False,False,True,False,True,False],[True,True,True,True,True,True,True],[False,True,True,False,True,True,True],[False,True,False,True,False,False,False],[False,False,False,True,False,False,True],[False,True,True,True,False,False,True],[True,True,False,True,False,True,True],[True,True,True,False,False,True,True],[False,True,True,True,False,True,False]],[[False,False,True,True,True,False,False],[False,False,True,True,True,True,True],[False,True,False,True,False,True,True],[False,True,False,False,False,False,True],[False,True,False,True,True,True,False],[True,False,False,True,False,False,False],[False,True,True,False,False,False,True],[False,True,True,False,False,True,True],[True,True,False,True,True,False,False],[False,False,False,True,False,True,False],[False,True,True,False,False,False,False],[True,False,False,True,False,True,False],[False,False,True,True,False,True,True],[True,False,True,True,False,False,True]],[[False,True,True,False,False,False,True],[False,True,True,True,True,True,True],[True,False,True,False,True,False,True],[True,True,False,False,True,False,True],[True,False,False,True,True,False,False],[True,False,True,True,True,False,True],[True,False,False,False,False,True,False],[True,True,False,False,False,False,False],[False,False,False,True,False,False,True],[True,False,True,False,True,False,False],[False,False,True,True,False,True,False],[True,False,False,False,True,False,True],[True,True,True,True,True,True,True],[False,False,False,True,False,True,False]],[[True,True,False,False,True,True,True],[False,False,True,True,False,False,True],[True,False,False,False,True,False,False],[True,True,True,True,True,True,False],[False,False,False,True,True,False,True],[False,True,True,False,True,False,True],[True,False,True,False,True,True,True],[False,True,True,True,True,False,False],[False,True,True,False,True,True,False],[False,False,True,False,True,False,True],[True,True,False,False,True,True,True],[False,True,False,True,False,True,False],[True,True,True,False,False,False,False],[True,True,False,True,True,False,True]],[[True,False,False,False,True,True,False],[True,False,True,True,True,True,False],[False,False,True,True,True,False,True],[True,False,False,False,True,False,True],[True,False,True,False,True,True,False],[False,False,False,True,True,False,True],[False,True,True,False,False,False,False],[True,False,True,True,False,True,True],[False,False,True,True,False,False,True],[True,True,True,False,False,True,True],[True,True,False,True,True,False,False],[True,False,False,False,True,True,True],[True,True,True,True,True,False,False],[True,False,True,True,True,False,True]],[[True,False,False,False,True,True,False],[False,True,False,True,True,False,False],[False,True,True,False,False,False,True],[True,False,False,True,False,True,False],[False,False,True,True,False,True,False],[True,False,False,False,True,False,True],[True,False,True,True,True,True,True],[False,True,True,True,False,True,False],[False,False,False,False,False,True,False],[False,True,False,False,True,False,False],[True,False,True,False,False,True,True],[True,False,True,True,True,False,True],[True,True,True,False,True,False,False],[False,True,False,False,False,False,False]],[[False,False,False,True,False,False,True],[False,True,False,False,True,True,True],[False,True,False,False,False,False,False],[False,False,False,False,True,True,False],[False,True,True,False,False,True,True],[False,True,False,True,False,False,True],[True,False,False,False,True,True,False],[False,True,False,False,True,False,False],[False,True,False,False,True,True,False],[True,True,True,True,False,True,False],[True,False,True,False,False,False,False],[True,True,False,True,False,False,True],[True,True,True,True,False,False,False],[True,True,False,False,False,False,False]],[[True,True,False,False,True,False,False],[True,False,True,True,True,True,False],[True,False,False,False,True,True,True],[True,True,True,True,True,False,True],[True,False,True,False,True,False,False],[True,False,True,False,False,False,True],[True,True,False,False,True,False,False],[False,True,True,False,True,True,True],[False,True,False,True,True,False,False],[False,False,False,True,False,True,False],[False,True,True,True,True,True,True],[False,True,True,True,True,False,True],[False,True,False,False,False,False,True],[True,False,True,False,False,False,True]]], dtype = "bool")#candidate|968|(8, 14, 7)|const|bool
var_969 = relay.var("var_969", dtype = "bool", shape = (8, 14, 7))#candidate|969|(8, 14, 7)|var|bool
bop_970 = relay.logical_and(const_968.astype('bool'), relay.reshape(var_969.astype('bool'), relay.shape_of(const_968))) # shape=(8, 14, 7)
func_361_call = mod.get_global_var('func_361')
func_363_call = mutated_mod.get_global_var('func_363')
var_974 = relay.var("var_974", dtype = "float64", shape = (1, 10))#candidate|974|(1, 10)|var|float64
call_973 = func_361_call(relay.reshape(var_974.astype('float64'), [1, 10, 1]))
call_975 = func_361_call(relay.reshape(var_974.astype('float64'), [1, 10, 1]))
bop_988 = relay.multiply(call_973.astype('uint32'), relay.reshape(var_974.astype('uint32'), relay.shape_of(call_973))) # shape=(1, 10, 1)
bop_991 = relay.multiply(call_975.astype('uint32'), relay.reshape(var_974.astype('uint32'), relay.shape_of(call_975))) # shape=(1, 10, 1)
uop_992 = relay.atan(const_968.astype('float32')) # shape=(8, 14, 7)
func_541_call = mod.get_global_var('func_541')
func_545_call = mutated_mod.get_global_var('func_545')
const_1001 = relay.const([-3.291233,-5.687430,-9.809692,4.946761,-0.406708,0.935006,-8.521081,7.116575,-9.099531,4.531784,-1.116891,-5.878505,-7.610547,8.916241,-0.767396,-0.927534,-9.925473,1.478127,-4.433018,-5.378031,-1.536791,-6.017470,9.161615,6.625183,-9.288940,-5.389238,-4.769773,-2.364726,2.927376,-4.827966,6.934713,-5.189023,0.170672,7.530319,-6.073324,0.240975,9.162532,-0.294270,8.983827,-7.775815,-8.723700,3.967724,-6.500266,-7.930970,6.943632,8.240851,0.166845,8.275602,1.635714,-9.552911,-5.670279,-6.760448,5.009599,4.682107,-6.615070,-4.413369,-6.008497,2.072076,-5.945133,-1.088613,-5.793735,-0.472827,-2.540949,5.536534,-1.145296,4.450327,7.031493,7.143078,-4.661128,7.928385,-7.105951,-3.493428,5.287994,4.280380,1.395632,-2.943249,5.820019,2.691001,-1.583040,4.343957,3.615865,7.371415,-5.544647,0.038123,4.603721,1.911354,0.438471,6.324659,4.429016,-8.301467,-5.710664,6.170087,8.357773,7.389554,7.916767,2.281498,-4.170165,8.774430,6.250555,6.230890,6.401389,-4.508124,-1.366150,-6.952182,6.567625,-5.470152,0.682448,0.834649,4.358633,-5.027563,-5.845349,6.322727,-3.805239,4.978707,4.139801,5.417195,-9.416466,9.519919,8.613485,-7.780821,-5.534232,-7.200749,-5.358726,7.884845,9.205666,-6.221903,9.422332,-3.283995,-6.986833,1.927907,-6.376397,7.502118,-1.745042,-6.772270,-0.823307,-5.065063,7.456337,-2.298992,2.859053,5.184063,3.768737,-9.579072,9.249895,-8.139822,-6.277621,-2.122251,-2.282186,9.797009,-3.378124,-6.247752,4.204043,-9.585435,-2.984307,-9.646004,-8.429705,-5.161923,-0.530202,-4.472523,8.822805,0.644077,-9.079336,-7.481079,3.764436,5.736201,8.576843,-0.462463,8.934079,-3.328531,3.157720,6.946639,-7.075411,4.927582,-8.626387,1.327938,7.498930,1.105914,-3.818293,-8.636465,-4.476068,8.363207,-3.095386,-4.980443,-8.958207,6.483766,4.172113,1.573099,-3.378617,-6.594098,-9.405643,-2.398169,6.550589,5.484466,0.756881,7.026833,-4.612276,-3.795298,8.072886,-2.480753,9.762954,3.911844,-2.525587,-2.434727,-1.850592,1.356646,-0.607890,-4.003288,9.569976,0.382480,1.176428,-5.877468,-3.617861,-5.247971,3.282802,9.399183,-6.161101,-0.061709,-9.234952,6.813617,4.392976,8.118387,-5.033534,7.863241,-0.182443,9.584236,-4.113773,8.368962,-4.083835,-9.640188,-3.499761,-3.684489,-0.524019,4.675324,2.915650,8.703241,2.129360,7.621965,-1.437128,1.188829,1.735700,2.621293,0.242990,-7.256975,-7.881791,3.132151,2.273975,-9.835410,-0.433615,-0.736897,-0.419959,0.987490,-7.041844,-3.378275,3.744717,9.170830,-5.793170,-8.920450,1.363418,3.964935,3.121103,-2.554675,-3.598363,5.089221,-5.053399,-8.094300,4.278246,-2.654639,-4.344297,8.598801,9.088925,7.384105,7.242740,2.470640,-8.845349,-2.353387,3.574534,-4.870733,0.130981,4.858302,6.677253,6.212208,4.520009,4.291616,-4.590761,0.988925,5.203937,2.415429,4.326908,-2.523320,4.359123,1.607202,3.868081,-8.414008,0.323787,5.929540,2.764881,-5.779475,-3.435904,7.380338,-3.282141,-6.657661,9.730575,-8.182141,-1.154715,-4.301142,1.249090,7.819477,-4.780868,-3.288390,0.615357,-4.856850,-3.591159,8.964156,-8.255383,3.173030,5.857508,7.879039,5.876742,6.804663,-3.195935,2.743957,-8.763347,-5.961013,-8.371990,-5.431894,-7.946692,-5.855845,9.142531,-0.865714,-6.508863,-7.148800], dtype = "float32")#candidate|1001|(330,)|const|float32
call_1000 = func_541_call(relay.reshape(const_1001.astype('float32'), [2, 15, 11]), relay.reshape(const_1001.astype('float32'), [2, 15, 11]), )
call_1002 = func_541_call(relay.reshape(const_1001.astype('float32'), [2, 15, 11]), relay.reshape(const_1001.astype('float32'), [2, 15, 11]), )
func_541_call = mod.get_global_var('func_541')
func_545_call = mutated_mod.get_global_var('func_545')
call_1003 = func_541_call(relay.reshape(const_1001.astype('float32'), [2, 15, 11]), relay.reshape(call_1000.astype('float32'), [2, 15, 11]), )
call_1004 = func_541_call(relay.reshape(const_1001.astype('float32'), [2, 15, 11]), relay.reshape(call_1000.astype('float32'), [2, 15, 11]), )
output = relay.Tuple([bop_970,bop_988,uop_992,call_1000,const_1001,call_1003,])
output2 = relay.Tuple([bop_970,bop_991,uop_992,call_1002,const_1001,call_1004,])
func_1015 = relay.Function([var_969,var_974,], output)
mod['func_1015'] = func_1015
mod = relay.transform.InferType()(mod)
var_1016 = relay.var("var_1016", dtype = "bool", shape = (8, 14, 7))#candidate|1016|(8, 14, 7)|var|bool
var_1017 = relay.var("var_1017", dtype = "float64", shape = (1, 10))#candidate|1017|(1, 10)|var|float64
output = func_1015(var_1016,var_1017,)
func_1018 = relay.Function([var_1016,var_1017,], output)
mutated_mod['func_1018'] = func_1018
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1026 = relay.var("var_1026", dtype = "float64", shape = (1, 3, 10))#candidate|1026|(1, 3, 10)|var|float64
uop_1027 = relay.sinh(var_1026.astype('float64')) # shape=(1, 3, 10)
output = relay.Tuple([uop_1027,])
output2 = relay.Tuple([uop_1027,])
func_1032 = relay.Function([var_1026,], output)
mod['func_1032'] = func_1032
mod = relay.transform.InferType()(mod)
mutated_mod['func_1032'] = func_1032
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1033 = relay.var("var_1033", dtype = "float64", shape = (1, 3, 10))#candidate|1033|(1, 3, 10)|var|float64
func_1032_call = mutated_mod.get_global_var('func_1032')
call_1034 = func_1032_call(var_1033)
output = call_1034
func_1035 = relay.Function([var_1033], output)
mutated_mod['func_1035'] = func_1035
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1083 = relay.const(-9, dtype = "int64")#candidate|1083|()|const|int64
var_1084 = relay.var("var_1084", dtype = "int64", shape = (1, 1, 10))#candidate|1084|(1, 1, 10)|var|int64
bop_1085 = relay.greater(const_1083.astype('bool'), var_1084.astype('bool')) # shape=(1, 1, 10)
output = bop_1085
output2 = bop_1085
func_1096 = relay.Function([var_1084,], output)
mod['func_1096'] = func_1096
mod = relay.transform.InferType()(mod)
var_1097 = relay.var("var_1097", dtype = "int64", shape = (1, 1, 10))#candidate|1097|(1, 1, 10)|var|int64
output = func_1096(var_1097)
func_1098 = relay.Function([var_1097], output)
mutated_mod['func_1098'] = func_1098
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1137 = relay.var("var_1137", dtype = "float64", shape = (3, 7, 12))#candidate|1137|(3, 7, 12)|var|float64
var_1138 = relay.var("var_1138", dtype = "float64", shape = (3, 7, 12))#candidate|1138|(3, 7, 12)|var|float64
bop_1139 = relay.equal(var_1137.astype('bool'), relay.reshape(var_1138.astype('bool'), relay.shape_of(var_1137))) # shape=(3, 7, 12)
func_361_call = mod.get_global_var('func_361')
func_363_call = mutated_mod.get_global_var('func_363')
const_1148 = relay.const([[3.028389],[-4.526437],[-2.985649],[-6.243620],[-1.838492],[-8.366600],[7.109004],[-2.132162],[5.181660],[7.411579]], dtype = "float64")#candidate|1148|(10, 1)|const|float64
call_1147 = func_361_call(relay.reshape(const_1148.astype('float64'), [1, 10, 1]))
call_1149 = func_361_call(relay.reshape(const_1148.astype('float64'), [1, 10, 1]))
output = relay.Tuple([bop_1139,call_1147,const_1148,])
output2 = relay.Tuple([bop_1139,call_1149,const_1148,])
func_1154 = relay.Function([var_1137,var_1138,], output)
mod['func_1154'] = func_1154
mod = relay.transform.InferType()(mod)
var_1155 = relay.var("var_1155", dtype = "float64", shape = (3, 7, 12))#candidate|1155|(3, 7, 12)|var|float64
var_1156 = relay.var("var_1156", dtype = "float64", shape = (3, 7, 12))#candidate|1156|(3, 7, 12)|var|float64
output = func_1154(var_1155,var_1156,)
func_1157 = relay.Function([var_1155,var_1156,], output)
mutated_mod['func_1157'] = func_1157
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1181 = relay.const([[[3.480421,6.677837,-7.222449,5.511655,3.639745,-6.228830,4.789296,-8.789796,-8.813302,-2.751619,2.209842,-9.365893,-8.615572,-4.374903]],[[-1.097443,7.588618,2.173899,8.492222,-4.618075,4.347938,-0.161749,1.272024,-5.499038,-4.853258,-7.935871,9.744883,8.141795,-6.695053]],[[-2.054821,-5.613463,8.938119,-3.890969,2.669922,-3.327219,-2.844546,6.533856,7.949450,-2.100827,-2.418575,-4.498909,-1.316063,-1.388037]],[[5.099151,9.918340,-7.178413,-6.345076,6.879912,-4.330061,-4.523589,-5.679712,1.892268,-9.074502,-8.200483,-4.744221,7.900133,2.671975]],[[-8.732104,-6.912297,5.880143,6.960373,0.994823,1.121426,0.883303,3.515268,-7.539582,-2.752481,4.076488,-4.134298,-8.293516,-7.799219]],[[4.770877,5.649617,-3.082627,1.713607,7.472305,9.589312,-5.660767,0.562946,-6.603019,4.961100,6.460586,-0.092809,-9.856311,-9.870377]],[[0.679128,0.787317,8.400955,4.119113,-2.561854,0.145538,2.006998,-3.011519,1.159158,6.009303,5.225873,-4.073038,6.342721,1.593483]]], dtype = "float32")#candidate|1181|(7, 1, 14)|const|float32
var_1182 = relay.var("var_1182", dtype = "float32", shape = (7, 1, 14))#candidate|1182|(7, 1, 14)|var|float32
bop_1183 = relay.divide(const_1181.astype('float32'), relay.reshape(var_1182.astype('float32'), relay.shape_of(const_1181))) # shape=(7, 1, 14)
uop_1189 = relay.log2(bop_1183.astype('float32')) # shape=(7, 1, 14)
var_1191 = relay.var("var_1191", dtype = "float32", shape = (7, 11, 14))#candidate|1191|(7, 11, 14)|var|float32
bop_1192 = relay.logical_and(uop_1189.astype('bool'), var_1191.astype('bool')) # shape=(7, 11, 14)
output = relay.Tuple([bop_1192,])
output2 = relay.Tuple([bop_1192,])
func_1206 = relay.Function([var_1182,var_1191,], output)
mod['func_1206'] = func_1206
mod = relay.transform.InferType()(mod)
mutated_mod['func_1206'] = func_1206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1206_call = mutated_mod.get_global_var('func_1206')
var_1208 = relay.var("var_1208", dtype = "float32", shape = (7, 1, 14))#candidate|1208|(7, 1, 14)|var|float32
var_1209 = relay.var("var_1209", dtype = "float32", shape = (7, 11, 14))#candidate|1209|(7, 11, 14)|var|float32
call_1207 = func_1206_call(var_1208,var_1209,)
output = call_1207
func_1210 = relay.Function([var_1208,var_1209,], output)
mutated_mod['func_1210'] = func_1210
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1570 = relay.var("var_1570", dtype = "float64", shape = ())#candidate|1570|()|var|float64
var_1571 = relay.var("var_1571", dtype = "float64", shape = (6, 7, 1))#candidate|1571|(6, 7, 1)|var|float64
bop_1572 = relay.mod(var_1570.astype('float64'), var_1571.astype('float64')) # shape=(6, 7, 1)
func_1154_call = mod.get_global_var('func_1154')
func_1157_call = mutated_mod.get_global_var('func_1157')
const_1579 = relay.const([-3.522300,-3.352547,1.744286,2.602775,-8.811326,9.313934,-5.606933,5.225303,-6.365886,0.645680,9.290155,-2.552996,0.139271,1.955823,9.186303,-4.967387,0.909140,3.011868,-6.953092,5.517615,-1.127856,2.074017,-4.034529,5.822299,-5.596768,9.254008,1.638704,-1.775579,-2.994246,5.288424,-1.389364,1.296090,-7.000223,-2.099408,3.299643,3.295150,7.831746,-2.185181,3.429207,-5.969620,-5.338917,2.464535,4.877396,3.409086,8.875287,-4.680760,-0.022290,-0.370288,-3.445146,1.882924,-6.977522,1.810369,7.697691,7.924131,-3.366618,-5.570116,7.144505,-5.751814,8.707235,-4.247426,7.467285,3.008277,-2.877314,-6.575127,-4.847221,-3.277397,4.954512,-8.985927,2.942357,5.717465,8.708072,5.919541,-1.058832,-4.731971,9.688316,-1.918083,3.966680,-3.995448,6.694757,-5.804859,8.254410,-3.157127,-5.836744,3.725674,-7.239915,4.250455,9.699382,4.969380,6.729046,4.175209,-3.514791,6.719741,2.661796,-6.709743,-0.502812,5.784788,4.208837,-6.830283,-1.857387,-4.083442,3.157580,3.768336,-7.120240,-4.464615,-1.137644,-9.842344,6.778548,-6.826016,7.996947,-6.287988,3.303536,4.963389,0.644594,-4.821668,-5.428789,4.797506,7.722281,-4.652948,8.110286,6.322732,-4.893528,-7.502888,9.355322,0.381899,4.785142,-4.905507,8.853346,-3.633079,-8.056540,-3.369429,6.856897,-7.899938,-0.626507,-6.446501,7.241848,2.217706,6.936663,1.950322,-8.558836,2.750709,-6.513712,-9.624881,-5.644850,6.667923,-4.870314,2.136338,9.450930,-5.659556,-6.585863,3.699822,-5.374609,6.098498,-6.077743,-5.160735,1.488190,1.179487,3.721359,3.062031,-1.166438,-2.672597,0.407870,-2.564983,1.514737,-2.427518,7.269600,5.142685,5.090543,3.489157,-5.026710,-1.780341,9.506933,7.264972,-2.601157,-3.601638,7.786210,4.300858,-6.784561,6.775825,-9.179794,3.079720,3.849836,4.731564,-1.719075,7.992566,-9.982234,-6.784697,1.657820,-2.272882,2.172395,-0.335292,-7.418259,6.683514,3.667745,-9.627487,-1.996342,7.176622,4.723370,-7.842233,1.384664,-9.371034,-2.489144,6.269822,-0.693934,3.849637,6.585423,2.613754,8.390237,-4.820809,7.522165,-6.457399,8.553134,-3.642915,-9.750279,-0.353098,-6.671050,0.580702,1.435346,-6.471912,-8.842797,6.674426,6.766082,9.384727,3.054707,3.755577,8.007696,8.531899,3.877415,4.421196,-2.385246,9.782169,-2.004175,9.117121,6.833013,2.204843,3.030404,1.762410,4.243125,9.558383,5.841917,-0.117753,-0.741024,7.766793,2.206739,3.902484,-8.279646,-0.336323,8.716447,-8.684871,3.163439,0.496211,2.130709,2.229531], dtype = "float64")#candidate|1579|(252,)|const|float64
call_1578 = relay.TupleGetItem(func_1154_call(relay.reshape(const_1579.astype('float64'), [3, 7, 12]), relay.reshape(const_1579.astype('float64'), [3, 7, 12]), ), 1)
call_1580 = relay.TupleGetItem(func_1157_call(relay.reshape(const_1579.astype('float64'), [3, 7, 12]), relay.reshape(const_1579.astype('float64'), [3, 7, 12]), ), 1)
func_1206_call = mod.get_global_var('func_1206')
func_1210_call = mutated_mod.get_global_var('func_1210')
const_1584 = relay.const([[-1.479641],[-7.996828],[-7.259311],[-3.836054],[-5.977621],[6.977651],[8.014759],[8.434733],[-6.672405],[5.146661],[9.817848],[-8.463123],[3.471959],[1.582256],[2.068758],[5.783873],[-0.946838],[9.681228],[0.805281],[-6.895001],[7.311034],[6.256803],[-8.697944],[-8.852115],[-2.445773],[-7.060575],[0.412343],[1.331886],[-9.157145],[-7.246594],[-0.712868],[-2.601299],[1.543530],[4.914416],[7.857474],[1.281568],[8.545225],[-6.517894],[2.067154],[-3.716052],[-6.274225],[6.932272],[-4.778026],[9.808905],[0.115718],[-0.424839],[7.186383],[-1.961991],[-0.922636],[-8.936860],[-6.595104],[3.560996],[-0.667466],[5.228782],[-0.996469],[2.743704],[-8.472412],[-3.889613],[5.895070],[6.611569],[2.029487],[-5.209057],[-3.562611],[-4.114007],[-6.990723],[7.648137],[-5.966142],[-2.462909],[-2.509322],[-6.451543],[-2.397207],[6.947308],[-2.476380],[7.699832],[8.446848],[-1.401460],[-9.937744],[-7.383077],[-7.410163],[8.850353],[3.915404],[9.867167],[7.149015],[-0.943975],[4.364873],[-1.872822],[0.888535],[-3.127978],[8.248871],[0.458225],[-1.145839],[-8.847039],[4.099980],[-7.254737],[8.499774],[-3.296253],[-2.160445],[-5.294862]], dtype = "float32")#candidate|1584|(98, 1)|const|float32
var_1585 = relay.var("var_1585", dtype = "float32", shape = (1078,))#candidate|1585|(1078,)|var|float32
call_1583 = relay.TupleGetItem(func_1206_call(relay.reshape(const_1584.astype('float32'), [7, 1, 14]), relay.reshape(var_1585.astype('float32'), [7, 11, 14]), ), 0)
call_1586 = relay.TupleGetItem(func_1210_call(relay.reshape(const_1584.astype('float32'), [7, 1, 14]), relay.reshape(var_1585.astype('float32'), [7, 11, 14]), ), 0)
func_361_call = mod.get_global_var('func_361')
func_363_call = mutated_mod.get_global_var('func_363')
call_1588 = func_361_call(relay.reshape(call_1578.astype('float64'), [1, 10, 1]))
call_1589 = func_361_call(relay.reshape(call_1578.astype('float64'), [1, 10, 1]))
output = relay.Tuple([bop_1572,call_1578,const_1579,call_1583,const_1584,var_1585,call_1588,])
output2 = relay.Tuple([bop_1572,call_1580,const_1579,call_1586,const_1584,var_1585,call_1589,])
func_1595 = relay.Function([var_1570,var_1571,var_1585,], output)
mod['func_1595'] = func_1595
mod = relay.transform.InferType()(mod)
var_1596 = relay.var("var_1596", dtype = "float64", shape = ())#candidate|1596|()|var|float64
var_1597 = relay.var("var_1597", dtype = "float64", shape = (6, 7, 1))#candidate|1597|(6, 7, 1)|var|float64
var_1598 = relay.var("var_1598", dtype = "float32", shape = (1078,))#candidate|1598|(1078,)|var|float32
output = func_1595(var_1596,var_1597,var_1598,)
func_1599 = relay.Function([var_1596,var_1597,var_1598,], output)
mutated_mod['func_1599'] = func_1599
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1601 = relay.const([[[4.614626,6.386438,6.961579,0.634108,-3.281171,6.545956,-3.141422,0.065295,5.606100,-3.284751,7.740041],[2.755496,-0.116134,0.852564,-0.582110,4.429120,-7.156818,-6.950753,-5.023483,-3.816234,-3.780447,-4.929552],[7.430294,9.812076,9.061714,7.671885,-3.454297,-1.663073,1.510079,-8.068841,2.042564,-4.775337,5.688035],[7.291530,-1.449446,-3.803926,-2.763858,-8.180056,7.763821,-4.731912,3.206062,3.400822,-1.410334,8.762326],[-2.921021,0.253610,1.689435,9.374310,7.398276,-8.579543,-7.003432,-3.138894,3.395164,-0.634819,-2.426755],[-0.509439,6.862086,6.716035,5.626890,6.175279,-7.407797,0.978837,-7.549896,-2.488625,-2.919290,-4.527648],[-8.234266,1.630605,9.722896,-3.279890,-9.031231,1.465303,-7.018293,9.990805,9.766097,2.454608,-8.832435],[9.693456,-5.043071,-3.499341,3.374547,4.400813,4.265471,7.285093,0.157591,-4.689217,-8.198400,4.000338],[-1.174054,7.644757,2.048394,4.208376,4.462886,8.646414,1.668400,-8.049923,-1.216033,-1.304026,-2.666904],[-4.660951,7.578743,8.608905,-1.144544,-9.777847,-6.855613,7.055666,0.341185,4.375584,0.072466,-5.949421],[-2.921142,4.034257,-4.998919,-6.801273,-6.385655,-3.225645,4.119107,4.271343,-4.151842,-6.333427,5.445238],[4.011033,-9.417880,-1.201100,6.511283,-2.086107,2.303598,-7.468011,5.902958,4.402564,3.962810,5.479885],[4.129700,-9.409974,3.694992,-9.404534,-2.181071,5.898010,-2.237010,9.208825,-9.659306,1.952118,9.700225]],[[8.983449,-2.324045,-9.106330,6.395539,-0.927108,5.759686,-0.118053,7.104325,5.742679,-3.768499,4.311043],[-4.264133,-6.205541,-8.267084,4.117871,2.585432,4.830353,4.708280,5.595340,3.367205,6.133582,3.765943],[2.582045,2.922266,-2.917091,1.331827,-7.672425,-5.093016,-2.264253,7.823159,7.207938,3.957604,-8.726319],[-5.304165,3.058333,-3.359275,-8.147294,-1.244865,-4.304384,0.588381,-3.760856,-9.435111,-1.676364,4.909277],[-2.254789,-4.355678,-0.490745,-5.448762,-8.356870,-2.333069,-1.577150,0.232086,-9.440946,6.414323,2.512043],[-0.759889,1.249251,-3.616519,2.472925,7.316385,-7.938039,6.646080,2.283598,-2.829072,3.074206,7.104972],[3.248921,-1.440454,-5.337107,-7.896660,-4.084496,1.392660,-8.461868,-7.039445,-9.480076,7.125864,0.014862],[2.941134,-7.212519,4.229657,-2.781089,4.272701,6.548335,-9.760895,0.119133,1.124823,2.329500,-8.661339],[-1.901839,7.838162,-7.765772,-4.307932,-0.422453,-4.415820,8.488681,-1.500299,-5.227336,9.179669,7.784176],[8.349019,-0.353220,8.906394,-8.390305,4.620801,-3.929677,5.616565,5.004829,-3.915021,1.946439,-2.460113],[-6.920256,-8.152486,9.425460,-7.112841,3.490029,5.235865,-4.771456,9.386211,-2.718706,-4.712399,-0.268218],[3.925058,3.625785,9.567666,-6.299614,0.293227,-3.648585,8.012368,8.852711,-6.625813,-3.529110,-3.613330],[-1.678932,4.537402,6.456807,4.860374,7.238710,4.458298,4.372408,1.398492,9.360700,-4.094690,-8.061106]],[[4.457637,-4.366672,9.554403,9.582897,9.477697,2.405116,3.490288,-4.058000,-4.761983,5.332659,-3.256047],[-5.316751,7.451931,-8.004631,6.715908,5.818504,-9.602466,8.083950,-4.483367,-3.561147,-8.256765,-1.166339],[-5.884455,5.495094,-8.401577,-7.454794,0.166563,-6.000176,-5.737119,-5.874470,-2.541619,-7.269293,0.889104],[-8.635086,4.627570,-1.515307,-6.053764,0.373507,7.780551,-7.646558,4.323238,5.942616,5.710193,8.978197],[-2.196903,-9.894066,-2.168874,-5.495969,-6.852434,5.727975,9.294346,7.669339,3.078881,-7.896256,2.206726],[-0.689672,9.636746,7.358331,-4.014964,7.627965,6.218929,4.674558,-5.117420,5.449948,-3.656096,-8.976764],[-7.943495,1.672414,-0.905481,4.539936,-6.537692,6.103279,2.321017,3.083494,3.775364,-6.274848,-9.987962],[-9.835503,6.196322,4.037148,9.190031,6.830044,2.061727,4.257076,-6.524547,-8.836273,-3.310829,0.001054],[-0.664685,4.116105,9.219082,-6.379530,6.175891,-3.512155,2.546786,-0.755311,-1.501819,-6.654225,8.108663],[7.820235,-2.947932,-3.358827,0.612113,-0.713774,-5.143349,-5.307785,-5.335024,8.181643,9.505890,-8.384289],[2.000810,3.370432,4.622616,-6.304873,3.556042,-4.836167,5.661126,0.841479,-6.452507,-9.881279,3.225589],[-0.477266,-9.510500,-1.945852,-2.465197,-1.902853,5.728175,5.897342,8.605280,5.176482,2.474931,3.270482],[6.601907,-7.778448,-4.146797,-1.330769,7.789415,8.863621,5.093008,7.127185,9.267153,1.936014,-4.171215]],[[1.655332,-7.606972,-3.482875,-2.497334,-2.356875,-2.905510,-8.513659,-7.159117,2.302211,0.942410,0.064985],[-4.342059,-9.117546,-4.121469,-0.914860,-9.654890,-8.231782,8.875698,3.082854,-1.618667,6.989300,-7.334927],[-4.881103,-9.725732,-0.286955,-0.030641,-7.816618,-9.162381,-4.802075,3.553932,5.293778,-3.081894,-0.069502],[6.458539,-4.540905,-1.981334,-6.114827,2.877693,4.661538,-1.320540,3.226702,3.457946,7.143122,0.535731],[-4.906148,0.782115,-4.334127,8.480123,8.973560,-3.326130,9.917067,6.748493,1.861364,-1.316273,-7.455603],[-4.707703,4.625058,-3.157733,-3.685529,7.789338,-0.484031,-8.246179,-5.148737,5.365515,-1.209573,0.148474],[-4.631368,-2.453923,9.117739,-0.542350,8.100374,-3.076784,-7.635870,-3.027194,-3.212006,7.032540,-4.845558],[6.675345,-4.107725,-0.004065,6.403539,-2.517097,-7.778103,3.592629,1.241776,2.085059,7.171219,0.418698],[-4.372529,-1.342656,1.267763,9.358238,1.111021,6.751425,-3.898528,9.158217,0.715434,2.344398,-8.235835],[-0.615358,0.933788,-8.032000,2.188289,-3.830174,3.677418,-9.961160,2.078924,-4.151435,-8.006112,-7.090710],[9.661382,-0.536921,9.857724,-3.206225,2.199184,7.555309,6.475510,0.563976,3.633980,-6.991489,-5.113153],[-5.358106,0.606998,-3.384513,-4.984424,-5.552356,-6.754656,-7.895628,-3.555302,6.912803,9.079899,-2.379675],[6.852514,1.680204,-0.326208,3.040267,-1.724552,-3.396462,3.192308,-9.253996,1.998194,9.135585,1.039119]],[[1.177973,0.845532,9.786734,7.756795,4.056231,6.228486,5.586146,-0.335072,-8.507011,-3.133342,-4.908663],[-6.693707,0.566087,8.433184,5.817844,4.288153,8.023401,-1.686161,0.372629,-6.573389,-1.527169,-0.907679],[9.542064,-0.427162,3.589471,-6.121881,-7.511091,-6.605712,-5.501965,7.550629,6.760892,-7.751925,6.382545],[8.945519,-2.575111,2.980487,-0.536559,8.877705,-0.323898,7.274472,-0.536299,-9.816612,-5.243983,0.048053],[-2.475693,1.686055,2.364774,-8.671192,-1.784533,7.036384,-5.964416,7.280437,-4.905951,-8.453229,-9.981698],[1.698565,-1.209523,-4.084565,-4.477313,7.028633,-8.872041,-6.647263,7.518269,-6.369900,9.516791,-6.597735],[-7.063116,-5.091770,-7.135100,3.951299,-1.277483,-8.178681,-0.559021,-9.596280,-5.840248,-2.215245,-7.061887],[-2.426632,8.233476,1.097419,-0.476453,-8.707972,0.065537,-3.429710,-6.385567,-5.376023,-7.189077,0.569266],[4.351366,5.103238,1.853511,-9.667093,7.579076,8.964334,4.169581,9.545782,6.566581,-1.775766,-6.971483],[-4.936498,7.699613,8.464878,9.794075,-8.310916,-0.520126,-7.671545,7.769620,7.332794,7.986981,-5.737064],[0.766220,2.568899,0.951048,2.351931,-2.150451,-6.013731,9.908476,4.925065,-7.477792,9.880405,9.213012],[8.407538,1.580509,5.516774,9.834959,2.404913,4.553038,3.159145,4.936052,-8.385816,2.675258,5.874216],[7.007178,0.593670,-0.337279,-6.855750,5.935201,3.459295,5.947789,5.451955,-7.971080,2.746542,9.576977]],[[-7.352954,-8.004886,-1.352801,-6.497290,-8.328717,-3.213779,2.436364,-8.142924,8.252521,3.903010,-8.456052],[3.208590,-3.446941,0.379412,-3.017036,-7.817189,8.154017,2.110405,-4.669631,8.248105,4.985272,8.309420],[-9.317459,5.226058,3.424797,-0.861956,4.998831,4.353731,5.457196,7.946573,-0.290216,6.968047,-2.187361],[3.738085,-2.145786,8.736070,2.467153,-6.067920,1.936762,3.376274,5.247029,-9.392295,7.500176,-5.825643],[-3.398849,-1.114026,8.237887,-7.241845,7.997256,2.443250,-5.594180,5.492436,5.972909,-4.827544,0.415414],[6.739731,1.299484,4.272538,4.791770,-5.527804,-4.797582,-8.287473,-1.899345,8.019879,5.971585,5.381092],[-1.467779,5.628091,-8.364806,-8.345826,0.239396,-9.365874,2.222750,5.625233,2.842451,1.086272,1.516768],[-0.988140,-1.488367,3.387232,-6.379929,-5.899639,1.903679,-4.398849,8.922912,-3.263543,-1.680454,6.461548],[-0.155298,-9.687076,-1.563394,0.954786,-1.028416,0.739025,-7.898909,-4.333175,1.014836,7.086364,-5.232918],[1.233968,-9.400687,-5.017084,-8.154788,-0.283450,-7.031844,6.070824,-2.854546,-4.647014,-8.715876,-9.582417],[-2.615149,7.828954,4.456872,3.119678,-1.473561,6.459319,-9.184284,4.216178,7.885830,5.755037,-1.778690],[8.085802,-5.819112,3.308262,3.102942,4.950163,-2.979715,-4.409851,4.949043,9.690341,-4.566514,-2.391576],[-0.781016,7.324160,6.054807,-8.831699,2.020185,3.074418,8.571455,-7.554946,-3.401800,3.360716,-2.164032]],[[-1.016778,5.669160,3.665157,-1.052022,-7.754540,0.670764,-1.563134,-9.717382,1.351968,-0.718844,6.543641],[8.806933,7.117189,9.547758,5.245058,-2.622684,8.105259,3.783212,1.844941,-7.978358,1.724606,4.757478],[2.442797,-3.233448,-5.798336,2.602415,-3.105725,4.522793,-4.922746,-6.787190,5.731802,2.651853,-8.774886],[6.868383,-7.001615,4.681146,-7.736809,9.322107,7.525972,-3.492282,8.785831,2.367358,-3.134163,0.004998],[-9.243057,-0.489539,-1.076100,-4.809711,5.230545,-6.281125,-5.248615,0.210425,-2.243768,-8.310217,-2.694184],[9.984057,-2.141647,3.189358,-8.698056,9.274281,2.401881,-5.822156,3.680102,-6.713256,-2.076237,-2.457014],[4.468447,2.902012,-3.440181,3.588197,-4.680524,-5.894609,3.454316,-4.900022,-8.410044,-1.112015,3.520139],[4.493359,-3.474098,6.039123,-1.071844,6.497588,0.588908,-6.468112,-9.402384,-7.103023,-4.951782,7.357777],[6.345034,6.228982,2.973572,7.523276,-7.579959,6.565052,-4.243988,-2.047486,-4.823881,-9.433863,-5.845470],[1.948593,-8.686532,-6.479975,5.448085,2.776820,2.095794,-9.879681,-3.477855,1.769912,4.429833,8.556046],[-9.737126,-6.697136,5.659773,-5.182954,5.346296,-8.717147,-8.938618,8.760610,-1.829544,-2.441758,4.382991],[-5.928154,-4.235218,5.137730,-2.765461,4.488817,-7.265806,7.648304,3.052154,8.033702,-4.516711,-6.619835],[-8.361936,-0.491640,-5.047209,-7.614873,9.739924,-0.180798,8.710249,3.745589,-5.749184,-8.691172,1.263877]],[[2.346494,1.580937,5.126444,-7.392607,-6.623739,9.093937,-9.758987,1.100065,-6.072802,0.924116,-8.010919],[-2.699253,9.686911,7.327384,7.245898,9.840651,6.682376,6.083248,-4.931412,-5.033963,7.863173,7.853190],[-6.816281,-3.571545,-3.077076,0.376374,-6.801514,-6.915347,-1.952637,6.334951,-7.977628,-5.416454,-8.401356],[4.367641,-5.237494,1.292304,0.502779,2.844486,-9.505510,-0.762270,8.724483,3.857980,5.812294,9.705059],[9.872552,4.905929,-5.269573,3.054186,-8.513497,5.520537,1.330842,-3.813706,-7.198931,-1.352380,1.198743],[7.362698,-5.374165,2.421337,-9.179143,9.136000,9.747180,-9.913183,5.000393,-8.744144,-2.792105,-0.264956],[2.087287,-2.619702,-8.567153,-1.241224,-4.407578,-8.069253,-9.011008,-8.226033,7.136300,2.431034,7.368898],[-0.455723,7.183463,-9.218431,-1.143746,4.039328,0.643294,3.650005,-4.481215,9.805176,6.208324,2.047349],[7.816637,4.109473,-7.136585,-1.024970,-7.539848,-6.811610,2.824850,2.689403,5.539028,5.775332,-6.196824],[-4.750191,-4.830519,8.989264,1.324108,-4.931500,8.306868,6.568360,-6.845470,2.807166,-8.364495,-3.085800],[-9.236571,-3.290688,0.334630,-8.671080,-1.879516,-4.987316,-3.158232,5.263533,1.158131,9.602966,9.820196],[-3.318239,-9.956797,-8.743033,7.752209,-0.973806,-0.793317,6.837759,1.824912,0.319848,-4.629038,-6.620058],[-7.910279,-4.271289,8.759001,-1.295647,4.740756,-4.349344,-3.913778,-6.761794,-9.379729,1.581986,2.859894]],[[-3.968871,-5.092996,9.420030,3.978985,7.953953,8.684507,4.763745,3.121782,8.680598,-2.464952,-8.817702],[-8.209998,-3.025543,-0.478074,0.040592,-4.397502,-8.263269,4.710186,1.008506,5.820093,-6.008165,1.885486],[-9.848654,4.365480,6.180304,0.672876,-5.883383,-6.895578,-1.978965,-5.542291,7.932791,1.245785,5.356275],[0.771118,-5.849763,-7.897895,8.895090,-4.063924,-6.863725,0.219571,-1.936470,-6.764104,-2.825968,6.650203],[5.631720,-4.593652,7.478543,-2.192757,-6.729220,9.736039,-3.820064,-1.102685,0.179416,9.870558,-0.970489],[7.811328,-4.511341,-6.329364,1.575304,2.309835,1.241404,6.991381,-1.005866,-5.879866,5.910715,4.684241],[3.048537,7.683731,-5.097329,-7.010576,3.819410,7.106712,0.164939,-7.182036,-1.502980,7.991602,7.104210],[-1.169220,-6.442583,-2.948048,-0.223990,-9.335907,6.230754,0.242946,-2.542381,4.678557,8.800645,8.199691],[-0.283016,2.238357,-3.320378,-9.723237,5.400076,4.541000,7.912596,4.311986,8.025873,3.971859,3.675818],[-5.102862,8.920027,5.189247,6.245132,6.229123,-4.865656,-7.126768,-5.358621,-7.085053,7.872938,0.546340],[-9.444799,-9.803580,-0.740022,-9.324074,-5.642493,-1.835267,-1.058995,1.243006,-8.999097,8.677297,1.669507],[9.539146,1.272171,-2.565933,0.422046,3.201230,-3.106538,6.709495,-7.983252,4.243909,3.743221,-2.340795],[3.696188,1.078482,-7.740337,5.423923,-6.767876,6.939823,-4.064340,-4.472260,-2.979064,5.566813,8.630054]],[[7.167166,8.040455,4.634371,-1.413017,-3.997687,8.730370,-5.077411,0.218323,7.144086,-1.425898,4.407249],[-0.298624,3.567594,0.536895,-7.902078,5.409799,-9.398948,-6.125498,0.827088,1.633282,-5.866665,2.829932],[2.550328,-6.139887,-7.447024,4.578496,-2.324227,4.965661,-5.640703,-4.906440,-5.466736,5.474307,-7.446144],[-0.902930,-5.970263,-4.291778,-4.966617,9.788930,-1.973765,-0.155756,0.031941,-3.301203,-6.850861,1.773415],[-5.755891,9.101638,2.480382,-1.324595,-4.610173,-3.530224,-5.192721,7.029458,-3.574040,-3.664711,1.186207],[-6.893603,0.896269,-3.637549,-7.981205,-0.206111,4.850543,6.899620,-5.492620,1.841583,-8.641082,-9.080145],[-8.296147,8.332403,-8.489745,0.004685,6.584824,-9.488938,-7.766287,-4.358209,-2.924361,7.613900,-4.581515],[1.914005,-1.078573,6.203717,-5.980299,-5.205405,1.626085,5.869930,5.673815,2.431142,-4.889033,8.209208],[-4.753696,-1.713487,0.590058,3.068954,-3.898643,-4.671116,0.331949,-9.975622,3.470660,-8.709587,-6.927535],[1.971511,-9.884359,-2.650041,-5.107752,5.956845,6.593287,-3.224540,9.200361,-9.163701,-2.251626,4.396287],[-6.752151,7.200195,-7.017055,8.331402,3.581526,-5.671815,8.818948,9.070272,3.047602,0.564378,-7.287453],[5.251173,6.666784,2.926755,-9.268925,2.051453,-3.339315,1.852858,-6.136708,-0.337606,4.916668,5.225888],[6.097878,-7.195284,0.973557,-6.465367,8.169819,6.705756,2.314367,-0.900825,1.067303,0.178240,-9.028705]],[[-2.243137,9.196985,0.413257,-7.766983,7.526542,8.971787,-9.111842,4.165453,-2.306121,-8.447502,1.774716],[-4.205050,7.350744,9.923572,-2.388967,5.397475,-8.688320,7.032902,6.159825,-8.630553,6.135353,2.479267],[-3.657440,-1.946479,0.812909,0.278911,7.824582,2.642125,6.915596,0.927891,-8.228892,0.402460,4.011314],[-7.827997,-2.542577,6.332516,-8.900997,1.494285,-7.005343,5.049263,-1.726144,-2.891393,1.257105,-6.616845],[2.863760,-1.317700,8.436237,-8.026374,-8.741627,4.959717,-9.417493,-1.343125,6.532161,0.977638,-6.892149],[-2.622919,5.079915,-2.675608,-1.258164,-9.716378,-1.638987,7.748122,-6.991897,-3.296727,1.444492,2.290071],[-4.472351,-7.796600,7.655256,0.521946,0.335661,-7.645340,5.406824,4.875716,7.773210,3.113104,-7.997102],[5.475125,-6.404908,9.090635,-2.008453,3.416464,-5.144360,-7.045456,-9.136751,6.967877,5.611850,-8.153655],[-2.760918,-4.771375,1.751243,9.414298,7.032616,-5.566366,-2.827792,8.706566,-8.619426,-9.156825,-9.658050],[-0.026281,-6.083981,-5.393859,2.998627,-5.621950,-8.338304,-3.083775,-9.730464,4.786327,-4.585708,-8.641143],[1.882044,7.962005,-4.428024,3.230425,2.276641,3.740622,9.590235,5.794894,4.606482,1.879345,7.852958],[7.633776,9.894067,8.378242,9.385369,3.493853,8.021281,-1.500817,-9.619797,-1.683932,-9.762334,6.934195],[-4.721931,-9.619995,6.530712,3.037560,3.137162,-7.546759,-2.120612,2.916315,2.700769,-0.093462,6.183365]],[[4.899871,-1.868567,4.405144,2.980529,1.772233,-6.854014,0.383045,6.567362,-6.204129,-2.960991,3.546899],[-9.971363,-7.603211,1.699928,-8.920012,6.177024,-0.613675,2.481441,-8.719188,3.405092,-1.048537,-0.447398],[1.202206,3.304341,-1.417023,-0.571596,-2.106143,-4.376472,7.012483,6.650949,0.703887,6.587080,0.735539],[8.337927,8.394271,0.432005,-6.252398,-6.801396,5.781802,8.982884,3.233141,1.097170,-3.505660,-5.026679],[-4.666973,2.612635,-0.300126,5.612560,-9.154334,-6.419498,4.948488,5.127599,1.082873,5.270059,2.131650],[-1.455767,9.757533,-9.553681,-0.807067,3.525289,4.105818,-0.938205,1.807148,0.507309,-5.281781,4.149246],[7.397281,-2.771801,-6.423504,6.385557,-1.366648,-6.423402,8.481623,-1.063302,9.029051,-1.861518,-4.384429],[7.912299,2.345903,9.174797,-4.805180,4.032638,-4.435863,-5.905388,-9.404984,-1.442583,3.063366,-1.826313],[-6.278391,-9.968153,-6.455106,-4.252940,8.903406,-7.930042,-0.546398,7.218682,-5.113253,-8.023454,-0.123362],[-8.354174,-1.881119,7.771557,9.775933,-0.763514,-7.001911,-9.229918,-8.660259,-1.623339,-5.498958,-1.813668],[-4.915804,2.004669,-5.393531,7.920161,-9.846746,8.389791,3.046637,-1.258850,-3.396020,-3.921748,-9.005744],[4.962560,0.784986,-8.368408,-6.724862,-6.655462,-9.422817,-6.513390,7.124917,3.225367,8.690881,-2.959433],[-5.850094,4.565739,6.213470,6.690334,-6.937415,-9.151654,-9.757634,3.152652,0.105690,-9.495864,7.021553]],[[9.712222,-7.765091,-7.319661,5.201986,-3.634262,-2.891865,2.749365,1.990397,8.720192,4.138955,9.594756],[-0.982952,7.554814,-5.555278,-6.519483,-7.419860,-3.018160,-5.495247,-1.633131,1.858284,1.387954,-9.394565],[-4.765763,-9.812647,-8.021912,8.203257,9.704549,-6.009046,-8.470401,-2.216612,1.324419,-4.785408,-6.615010],[-8.694877,-7.811623,3.577307,9.005521,-3.725152,-3.210245,0.191647,2.642385,-7.169629,7.961994,1.854941],[-6.507009,-0.515830,-1.154161,4.580239,4.445981,6.662631,-4.067677,-9.875798,-0.784977,6.921214,6.959470],[6.904912,1.561988,2.276700,3.241163,-0.204665,8.076770,8.115688,7.880550,-4.188171,-2.521827,8.931100],[-8.552623,9.926049,-4.184983,2.107659,1.441891,-8.036040,6.715661,2.290353,-6.001316,-9.579821,-2.053992],[1.847335,-5.978262,6.766913,0.759999,1.269865,-5.027181,6.627833,9.535702,-3.988210,4.087791,-4.015809],[-2.458125,7.939700,2.278724,-1.585729,0.578892,-6.125264,0.474428,8.901653,-1.476885,8.898124,0.346177],[3.331227,1.666291,1.964164,6.117259,3.043463,-6.829791,-9.679346,-9.280669,0.905420,8.339052,-2.372258],[5.333772,7.141134,-9.224080,-6.535279,6.463746,2.491667,2.221420,-1.815236,-2.417031,7.157598,-3.137762],[-1.072636,-0.564219,8.068592,3.830977,0.530236,0.476461,-6.941020,3.720140,0.532050,0.449584,5.645928],[7.418740,7.712427,-9.105641,-0.460684,-3.726643,3.841850,8.851784,-6.516064,-2.255423,8.590107,3.236320]],[[-3.995359,1.792823,0.162679,-8.604681,0.797454,-3.861756,1.565814,9.110169,-3.126165,-4.542045,8.217695],[-0.077863,3.404719,9.306474,-5.225456,-6.728118,5.086389,-5.522456,-5.784247,5.539541,-9.581800,-7.643570],[-9.334048,-7.007439,-1.738851,5.801566,-7.026216,9.518204,-1.080025,-2.694655,2.378318,2.811168,-5.619775],[-2.926943,-3.091905,3.782724,2.411216,-8.301389,5.850746,-8.973692,-3.173204,1.380037,2.557501,-4.514642],[7.224326,-4.481999,0.429543,1.432282,9.372568,0.986605,-7.558806,9.021354,-6.054639,4.340389,-1.662238],[1.143345,6.968425,7.432987,-8.449829,9.572205,-5.835505,-5.965105,3.877548,-9.824068,0.301609,0.360215],[-1.238709,-6.513554,-9.409943,-4.022310,8.080300,8.425827,0.639153,-5.049726,-7.401645,8.317755,7.586125],[8.047055,-0.153636,-8.390176,9.236828,4.533662,-5.197446,-0.516345,7.689556,2.742325,6.963610,-9.989311],[0.847679,-7.111846,-7.694805,-2.819177,3.689265,-7.320017,1.767429,-5.337525,-1.444694,-5.390796,1.408653],[-9.096351,-9.498915,3.249751,-1.055643,-9.512246,-0.326153,-7.532657,-6.188640,2.890258,-7.836640,5.276443],[-1.488826,-9.045918,3.809642,6.739116,1.540891,-3.509766,9.205995,9.863937,1.158602,6.825931,-8.555281],[-7.945663,-5.467291,1.099889,5.851907,7.961115,-8.788462,0.006654,-2.431532,-7.153543,-9.272175,4.043118],[-2.107199,8.022068,-9.195417,-6.504476,-1.101486,-3.516939,-9.320820,2.183969,-9.684667,4.021800,-2.292915]]], dtype = "float64")#candidate|1601|(14, 13, 11)|const|float64
var_1602 = relay.var("var_1602", dtype = "float64", shape = (14, 13, 11))#candidate|1602|(14, 13, 11)|var|float64
bop_1603 = relay.floor_divide(const_1601.astype('float64'), relay.reshape(var_1602.astype('float64'), relay.shape_of(const_1601))) # shape=(14, 13, 11)
func_1206_call = mod.get_global_var('func_1206')
func_1210_call = mutated_mod.get_global_var('func_1210')
const_1607 = relay.const([0.264751,3.672109,4.874383,-6.499922,2.914302,8.497506,-5.842763,-1.616460,4.722450,-9.296371,8.448867,-3.444876,-7.746904,-0.002275,1.493318,-5.031821,3.390387,-8.779753,5.424212,-9.229322,5.204359,-6.192744,-9.107750,-0.475487,-1.856320,-4.394871,-5.265925,6.207575,-2.067262,0.450780,-3.097880,-4.413081,1.073610,-6.261520,-7.394140,5.230517,6.550747,5.984775,-2.304834,2.985266,-4.932763,-9.487053,6.053133,-6.172883,6.062025,7.011699,1.273822,-3.534193,-4.021404,9.842250,2.538438,-7.737854,-2.068366,5.932166,-3.441006,-4.473825,-1.939440,5.303448,-4.030570,-2.123666,1.491828,-0.523272,0.747459,0.979225,3.541756,-6.402309,8.855072,1.837050,2.413572,-6.124458,-7.573336,-6.565536,5.441447,-4.676851,6.427914,-0.382905,-7.159165,4.718751,1.747248,6.946608,0.054619,0.130315,0.385891,0.567167,6.682736,-8.272926,-6.899589,4.659538,-9.422200,5.714717,-0.341227,4.323298,-9.540457,-8.652629,7.944117,8.687691,-9.465885,-7.377945], dtype = "float32")#candidate|1607|(98,)|const|float32
const_1608 = relay.const([2.744236,-0.270458,0.291114,-0.835045,0.105673,-2.045195,1.989638,-2.467116,-8.964622,1.241692,7.517994,4.039311,2.707669,6.521016,8.103365,-0.054493,-1.156831,-7.706048,-7.517663,3.552748,-1.849816,0.191437,6.515400,-1.248197,-6.618215,-4.424306,-9.426945,4.549707,2.020598,-7.645996,-0.481497,5.536706,-2.756943,0.264056,-1.822214,-2.145195,-1.309048,-0.944059,-3.776880,8.712652,-9.327823,-7.820199,2.590997,8.467982,-4.137193,0.675455,-5.097791,7.531686,-4.614854,9.017033,4.044422,-1.000990,5.994750,-5.889125,6.594321,-2.685376,6.184825,-9.401945,3.186478,7.368665,0.231293,-0.739716,2.022167,-1.418443,-7.812647,7.438348,-2.979756,5.585499,-2.045639,7.676296,-0.422423,-1.478965,-1.690984,-7.347476,-0.227483,9.440114,3.826367,3.808865,7.122322,-4.735547,3.737299,5.395808,0.085633,7.235287,-2.116264,4.172804,-7.849984,-6.305626,-8.694529,-6.366153,-0.025432,5.813191,-6.457998,6.556667,-8.665226,8.831161,3.894930,9.109164,-2.332162,-7.103365,3.435506,6.665467,8.997064,-7.014610,-9.417507,-9.877946,-3.562681,-5.533600,-3.124697,-6.938758,-5.106982,-4.515660,4.501201,-7.893044,-1.863942,-6.838552,4.621369,-0.073923,-2.552181,-8.456158,5.017278,5.025305,-0.330922,-5.481639,6.698406,-2.597152,8.353427,5.934058,-9.798433,-1.893864,9.410136,2.606076,-2.233308,5.776325,-6.443239,5.950380,8.644540,-5.591342,6.065463,-2.529066,6.641759,-0.140204,-3.896037,9.574849,3.983588,9.185188,6.550246,9.779219,-8.639292,-2.104499,8.077700,1.043776,-4.689681,-3.856639,-6.190387,0.354400,8.207123,-3.276867,2.114133,7.757775,7.938635,6.593427,2.923483,-9.019358,-2.620708,-2.174577,9.912865,-6.235844,6.600780,5.766573,4.896058,-8.817514,-5.648332,-1.274185,-5.002138,-6.010415,2.444284,-1.165269,7.727945,-6.718881,3.029196,1.348239,-0.584237,7.081521,-4.620035,-6.877342,1.347783,4.700138,0.796255,5.961846,6.793417,-2.603864,-0.473336,3.964770,1.461838,2.937922,-4.459397,5.856391,-5.039550,4.006732,3.153857,-6.637590,-6.368960,-7.446303,-2.424675,1.749548,-6.040684,-2.811569,6.086100,-7.301631,2.091030,5.935560,-1.581272,0.284274,9.688364,8.984434,-8.605922,9.797715,3.098341,-8.272008,-7.966632,3.222790,2.410604,5.196556,6.741421,-9.162083,1.354227,8.955490,-3.259542,-3.614242,0.777410,5.273673,6.719987,-3.868515,-8.297213,-1.096323,-4.973125,4.782014,7.921324,-0.505342,-0.381778,-5.228016,3.405830,5.624660,-9.433008,8.368351,-3.171484,7.434915,-8.118764,-7.213783,-1.065351,5.639827,9.358578,7.520900,5.838980,6.242323,-9.817524,6.622288,4.709152,7.822508,-5.232798,5.553894,4.534012,-4.790810,-4.960910,3.485536,-5.955084,-0.068631,8.526372,-1.488368,0.636139,3.019637,6.180660,3.459053,2.462231,-4.335199,-3.863212,-0.585039,-7.752279,3.605828,-7.922484,-9.720848,1.672436,-9.620727,-6.866860,5.717704,-1.954817,8.601640,1.990969,4.166028,2.584232,-9.838686,4.197050,-1.119971,7.737616,7.718365,-3.931059,-6.103571,-1.932268,-5.187663,-6.581228,-8.822720,-5.803025,-3.041382,2.247587,8.430428,-6.177345,-5.223541,-4.626057,0.144545,-0.458509,1.554343,-1.045858,-5.464664,-4.937651,0.412132,-5.418320,-8.181611,7.719123,-1.596261,-0.757882,-7.814580,9.623369,-9.258057,4.396638,0.986152,-4.079474,-3.074120,1.377221,9.166031,7.978594,-4.672212,6.315615,1.334513,4.201845,0.288855,9.296083,-8.604899,-3.882560,-5.258648,9.714677,4.432869,2.042003,-4.424076,-7.426220,-3.514010,2.835718,2.715148,7.463376,6.961966,-0.809650,-7.568191,-3.363360,-4.250474,-7.945637,-1.481932,-4.575817,8.179203,3.081351,-1.313830,-9.899986,-3.019337,8.465647,-8.420100,-7.353677,-3.865207,-7.013913,-6.835637,1.077138,4.790429,3.393588,1.368166,5.692364,7.624384,6.456776,-7.431397,9.099674,8.183557,-4.501173,2.850113,2.610602,4.518798,0.019953,7.374889,-3.967981,-5.728803,-9.561216,7.015905,-8.086134,7.640019,2.855676,4.293979,-5.081586,2.885184,-9.471503,7.962637,-4.334257,5.770620,-8.470094,0.872088,2.376975,-5.050218,1.863437,5.746585,1.923673,0.129157,-2.366480,7.268700,0.378105,0.764864,6.036483,-6.412317,6.321899,1.371186,-2.534932,-6.257522,-5.764250,4.077770,1.434499,-3.260481,1.156201,1.260545,-8.925921,-3.277052,2.561922,-7.092917,-2.218029,1.773826,-1.812480,7.100978,3.853172,5.115026,6.265480,5.926828,2.805251,8.868466,-8.105219,8.051005,0.428898,-0.119049,5.582802,6.350536,4.461779,-4.527496,-8.731191,-1.276197,9.569175,1.316352,5.271938,1.065530,-9.575941,8.001695,7.601203,-7.176189,8.715978,-8.012390,4.277246,-3.809797,-8.198732,-2.388243,1.794214,-0.555441,-6.052353,8.102170,-8.907551,4.676337,7.475363,2.402448,8.348622,1.744692,7.498359,6.820942,3.584336,1.505965,-2.438048,-2.477967,9.513079,6.290497,3.913949,5.157250,9.555752,-9.336704,8.774058,-9.313375,9.877512,4.631195,1.934561,5.904407,2.653218,-7.426442,2.702974,7.070950,9.776614,-1.434991,0.119308,-6.388092,-4.092432,0.550970,1.982214,-1.452394,6.468289,6.486285,6.029318,8.370032,9.607217,-9.575398,9.769027,9.423571,-7.430765,0.838389,2.020048,2.356983,-1.890085,-5.670677,-3.356314,5.137968,-0.006892,-7.234942,7.226018,-5.545639,4.469780,7.624379,-5.372815,7.392591,8.852679,-3.267834,-3.708037,-8.144812,-2.146973,-6.569091,-6.224694,-8.585602,-0.839346,-5.932184,4.906439,2.909337,8.967809,3.447866,2.126798,4.257920,5.111542,-5.130598,5.275920,-6.247664,5.868483,-8.639355,-7.180493,-3.288884,1.040395,4.260912,-9.624706,5.404580,9.941876,6.304262,3.909758,9.737848,6.215933,-7.359681,5.437852,-6.393471,-6.691541,-9.207487,-7.280440,7.105338,6.030431,-5.132749,6.557861,5.728633,-5.644602,-5.255712,9.178416,-8.037784,8.883473,2.348510,6.460374,9.538018,-8.815868,0.021731,-9.960427,-8.566586,8.500654,8.968809,-7.354511,1.326416,-4.441204,-3.025531,-3.285537,-4.503398,-9.859600,-8.803510,6.599132,7.138894,6.857086,-1.213512,4.478125,7.267009,8.923858,-0.650617,5.783184,-0.312588,3.261816,-7.605145,2.703343,3.621602,-8.449908,-8.618842,6.095519,-1.871373,-5.270503,-4.023383,7.792514,-2.434463,7.296300,0.340471,-5.894351,-6.652762,-3.450085,7.502911,6.302184,1.075986,-0.830278,7.654896,7.581922,-5.022863,7.497544,-0.058847,-4.418290,3.956070,3.540412,8.307028,8.821920,0.058571,-1.054360,8.845398,9.974988,1.097249,-1.212763,2.733173,-4.916389,4.171317,-8.960407,8.075113,-3.021296,-1.598990,2.842620,-3.743533,7.402337,-7.327071,-3.659285,7.571269,2.583505,-8.487858,-8.871999,3.271764,0.058878,-1.658440,-1.456714,0.742483,-7.510914,-6.776358,3.088726,-3.284219,-4.342653,-4.567696,5.513646,-6.821048,-5.291318,-3.971002,-4.424155,-4.889734,3.210546,-2.325395,-6.711253,-3.943129,8.088422,-9.858544,3.512698,-2.027933,6.636761,0.945732,-2.114662,7.945071,-9.113518,7.991090,-6.885224,-1.055365,-6.885051,3.780687,-5.323634,-6.613828,6.538025,-2.065142,0.173460,-8.577063,8.565686,6.271580,-3.547814,3.834306,9.014477,5.829542,-8.882292,3.367400,-8.179567,3.935075,-7.592305,7.449025,-2.242358,0.360483,-0.130960,-3.990057,2.472059,0.473313,4.236434,-2.545097,-1.700566,-0.237753,2.127346,2.773234,-6.754877,1.953751,-9.305641,-1.984321,-4.329096,6.383103,-7.539158,9.408271,7.730196,9.853265,2.677206,4.111777,8.348466,-2.773570,4.985636,8.134865,-4.312716,8.942447,0.598225,9.674346,5.223911,-7.746646,-3.872915,5.330765,-5.702405,-5.597100,-6.622103,2.522383,7.074671,-4.085222,-8.783673,1.706492,-3.646078,7.888563,-0.946595,-8.683871,2.578455,9.104095,-7.462939,-8.699045,6.499612,-2.617375,-5.690778,-7.188031,9.171247,7.498592,-5.108887,-5.766613,1.534095,-4.941748,-1.923186,3.371729,4.231246,2.239952,3.382524,-1.496770,7.581886,-0.707414,7.443818,8.945033,3.306693,-6.619021,3.108137,9.564607,-9.701562,4.028581,-4.939348,4.915657,2.828670,9.921733,-9.572886,-8.316791,-9.227169,2.527984,6.178053,-6.072313,7.793535,-0.016010,2.868836,1.324375,8.164172,-1.958462,9.930365,4.228952,-4.522617,7.667117,-1.444338,-0.103804,-9.842004,-7.487497,3.365400,8.068284,4.558737,2.280599,6.303352,8.482093,1.957517,-7.061146,6.162034,-2.068152,-3.590369,-6.988393,6.625730,6.784269,-1.128194,2.126748,-2.751730,8.908021,-3.412149,-9.843383,0.071008,-7.753090,3.310545,-8.180633,-5.615318,-1.006780,-9.395016,4.281244,-5.093629,-3.767424,4.984959,-0.089273,-5.815940,9.133671,-3.266443,-9.906461,7.664410,2.942632,9.381935,1.722720,-4.745809,-7.609944,-2.541480,-7.247373,-4.758830,-8.847442,-6.228318,5.449488,-8.127150,4.395786,-9.803103,-6.713779,-2.522660,-4.943061,8.195902,3.213760,1.259215,4.521157,1.689433,-6.726807,-6.490617,3.357994,9.702887,7.375790,-0.501915,2.340931,-4.967786,-3.873198,5.329762,-4.705790,0.119022,-7.068905,0.360640,-5.453946,7.554612,-7.287981,5.512698,-2.157867,-3.659246,-9.974860,-4.484121,8.352477,-1.622645,7.487754,-7.187704,-0.720738,5.027169,-4.011483,-2.535238,5.395075,-4.458954,9.432234,-4.771691,-3.372401,4.527101,5.850004,-1.172461,-5.546625,-6.706876,-2.900033,6.006041,-2.011168,2.197383,2.913794,-3.570626,9.237187,-7.310448,-1.403655,-6.154572,8.636102,-4.954093,9.120387,6.006000,9.756724,1.503129,-0.735832,-0.278120,9.891995,-0.135840,-2.619841,-5.286791,2.701215,-1.231262,9.056402,-2.760896,4.364997,1.164370,-8.284802,-6.887067,-4.188984,9.664082,6.549872,-1.960942,-9.160453,8.069766,5.841142,-2.091165,6.083629,-4.286973,-4.402913,8.371559,4.401961,-4.988600,-6.831640,0.574534,1.503554,4.739296,1.145535,7.450147,-1.445334,-1.055466,-2.513483,-7.467242,1.565844,-9.995940,-9.055842,2.622405,-0.057768,0.124307,1.448785,-2.751017,5.667271,7.715404,6.000995,-3.985700,9.700353,3.254480,-3.975962,5.664393,-6.276145,7.331637,-3.935173,9.835635,-3.637691,5.190199,3.836436,-1.714020,9.112705,4.080344,8.274026,6.206405,-5.705929,-2.421186,-3.029774,8.275506,-3.610198,9.564861,3.392236,0.678089,7.405260,9.375834,-0.853793,-5.121653,9.331824,-1.589515,3.088395,-6.068347,-7.132164,-0.222032,-2.857020,-2.135765,-9.994362,4.388182,-4.464787,-8.177872,3.191312,-9.336433,2.910488,-6.460289,9.754082,1.430653,-4.644229,-2.942432,2.400028,8.062611,-2.966311,-3.472711,-0.582659,6.469703,-7.136629,-8.166405,2.247305,-9.111949,5.564215,-0.996290,4.360686,-2.926581,8.934564,4.595730,5.195198,-2.424788,-7.007406,1.821231,7.917376,3.448783,-2.899123,9.049728,-9.629365,-0.790001,-2.167170,-3.921991,9.254491,8.652487,-4.229288,7.049843,-0.744350,5.804995,-1.722093,2.897586,0.391121,6.456081,-8.592730,-3.908560,-3.180709,1.752109,9.770748,0.061066,-2.829897,2.033082,8.140050,-7.965613,-0.151253,-5.586541,-8.003917,-1.346205,-0.174005,9.272662,2.986825,5.222869,6.719397], dtype = "float32")#candidate|1608|(1078,)|const|float32
call_1606 = relay.TupleGetItem(func_1206_call(relay.reshape(const_1607.astype('float32'), [7, 1, 14]), relay.reshape(const_1608.astype('float32'), [7, 11, 14]), ), 0)
call_1609 = relay.TupleGetItem(func_1210_call(relay.reshape(const_1607.astype('float32'), [7, 1, 14]), relay.reshape(const_1608.astype('float32'), [7, 11, 14]), ), 0)
bop_1612 = relay.bitwise_or(call_1606.astype('int32'), relay.reshape(const_1608.astype('int32'), relay.shape_of(call_1606))) # shape=(7, 11, 14)
bop_1615 = relay.bitwise_or(call_1609.astype('int32'), relay.reshape(const_1608.astype('int32'), relay.shape_of(call_1609))) # shape=(7, 11, 14)
bop_1620 = relay.mod(const_1608.astype('float64'), relay.reshape(bop_1612.astype('float64'), relay.shape_of(const_1608))) # shape=(1078,)
bop_1623 = relay.mod(const_1608.astype('float64'), relay.reshape(bop_1615.astype('float64'), relay.shape_of(const_1608))) # shape=(1078,)
func_515_call = mod.get_global_var('func_515')
func_520_call = mutated_mod.get_global_var('func_520')
const_1641 = relay.const([7,8,-4,1,6,-5,-5,-1,8,2,-2,1,2,1,8,6,5,-1,5,-4,3,3,-8,2,2,5,-6,7,4,8,8,-7,7,2,1,4,7,3,-2,1,-8,5,5,-4,10,10,5,10,5,-4,8,-2,5,-10,2,-10,-10,-4,9,-5,-1,8,10,8,10,4,1,-4,-3,5,8,6,4,-4,-8,-3,-1,5,-9,-1,-8,-8,2,9,-6,3,-2,1,-6,1], dtype = "int16")#candidate|1641|(90,)|const|int16
const_1642 = relay.const([-3,7,10,-2,6,5,-10,7,4,-4,7,-3,3,7,-5,8,-1,-7,-2,1,10,-1,4,-2,3,-5,-3,3,10,-10,2,-5,4,3,5,-3,3,7,-3,-6,-4,-7,1,-5,-9,6,-4,6,4,-3,5,-4,-9,8,2,8,-6,5,4,6,6,9,-4,-7,4,9,-5,8,8,3,1,-7,6,-2,-3,-8,-4,-6,-9,9,2,-3,-5,-10,8,-10,-7,-5,1,5,-8,1,-1,-10,-2,4,-9,1,-1,-6,4,-9,4,-6,-3,-7,6,-3,-4,7,-4,-10,-1,8,3,2,-9,-10,7,6,-7,-1,10,9,-6,2,1,-4,4,-4,-3,6,-9,5,-10,-4,-3,-1,-8,8,9,4,1,-4,-10,-2,7,5,4,-2,2,-5,-10,9,-9,1,-5,9,3,-1,-2,-5,2,-2,1,-3,9,-9,4,-8,3,10,6,-3,1,-1,-6,-1,-8,7,9,4,7,7,-9,4,-6,-9,-4,-1,-6,-9,1,-5,2,-10,-1,9,10,-9,2,-3,8,9,6,-8,-2,-9,6,4,3,9,10,1,-5,-1,6,5,7,7,-4,8,-1,-9,-10,-4,-8,-8,-2,-8,-1,-4,-2,10,-3,-1,-1,2,-7,-8,-5,1,-9,2,7,-8,9,-5,1,10,-2,10,1,5,5,4,-10,-5,-1,-8,-7,9,8,-8,-7,10,9,-3,4,-8,-3,-10,7,-10,4,-9,6,-8,-1,-3,5,8,-5,-6,-8,7,9,4,5,-6,-4,10,4,6,6,-4,5,9,-4,1,1,1,7,8,9,-1,-1,-7,-10,-10,4,-9,9,-1,3,3,1,-4,1,-2,-5,5,5,1,-5,-4,-9,8,-1,9,2,-7,-7,-1,4,1,6,7,10,-9,-3,5,-7,9,3,-3,-1,-6,-3,7,10,-1,5,-8,-8,-9,-1,2,-7,-6], dtype = "int16")#candidate|1642|(360,)|const|int16
const_1643 = relay.const([[0.180451,3.854639,-0.398968,-0.714404,-1.881949,-2.641701,-2.478947,-7.080232,4.186445,-6.739875]], dtype = "float64")#candidate|1643|(1, 10)|const|float64
call_1640 = relay.TupleGetItem(func_515_call(relay.reshape(const_1641.astype('int16'), [6, 15, 1]), relay.reshape(const_1642.astype('int16'), [6, 15, 4]), relay.reshape(const_1643.astype('float64'), [5, 2]), ), 0)
call_1644 = relay.TupleGetItem(func_520_call(relay.reshape(const_1641.astype('int16'), [6, 15, 1]), relay.reshape(const_1642.astype('int16'), [6, 15, 4]), relay.reshape(const_1643.astype('float64'), [5, 2]), ), 0)
output = relay.Tuple([bop_1603,const_1607,bop_1620,call_1640,const_1641,const_1642,const_1643,])
output2 = relay.Tuple([bop_1603,const_1607,bop_1623,call_1644,const_1641,const_1642,const_1643,])
func_1670 = relay.Function([var_1602,], output)
mod['func_1670'] = func_1670
mod = relay.transform.InferType()(mod)
mutated_mod['func_1670'] = func_1670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1671 = relay.var("var_1671", dtype = "float64", shape = (14, 13, 11))#candidate|1671|(14, 13, 11)|var|float64
func_1670_call = mutated_mod.get_global_var('func_1670')
call_1672 = func_1670_call(var_1671)
output = call_1672
func_1673 = relay.Function([var_1671], output)
mutated_mod['func_1673'] = func_1673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1681 = relay.var("var_1681", dtype = "float32", shape = (10, 16, 2))#candidate|1681|(10, 16, 2)|var|float32
uop_1682 = relay.asin(var_1681.astype('float32')) # shape=(10, 16, 2)
func_1015_call = mod.get_global_var('func_1015')
func_1018_call = mutated_mod.get_global_var('func_1018')
var_1700 = relay.var("var_1700", dtype = "bool", shape = (784,))#candidate|1700|(784,)|var|bool
const_1701 = relay.const([-6.396355,3.233073,8.685727,-7.213684,-3.166419,6.690708,-1.019296,1.307838,7.109068,1.643405], dtype = "float64")#candidate|1701|(10,)|const|float64
call_1699 = relay.TupleGetItem(func_1015_call(relay.reshape(var_1700.astype('bool'), [8, 14, 7]), relay.reshape(const_1701.astype('float64'), [1, 10]), ), 0)
call_1702 = relay.TupleGetItem(func_1018_call(relay.reshape(var_1700.astype('bool'), [8, 14, 7]), relay.reshape(const_1701.astype('float64'), [1, 10]), ), 0)
func_1670_call = mod.get_global_var('func_1670')
func_1673_call = mutated_mod.get_global_var('func_1673')
var_1712 = relay.var("var_1712", dtype = "float64", shape = (2002,))#candidate|1712|(2002,)|var|float64
call_1711 = relay.TupleGetItem(func_1670_call(relay.reshape(var_1712.astype('float64'), [14, 13, 11])), 6)
call_1713 = relay.TupleGetItem(func_1673_call(relay.reshape(var_1712.astype('float64'), [14, 13, 11])), 6)
func_541_call = mod.get_global_var('func_541')
func_545_call = mutated_mod.get_global_var('func_545')
const_1732 = relay.const([[-8.648446,0.073044],[-5.868396,-1.593155],[4.318122,2.932270],[0.309931,1.242423],[4.601608,3.772634],[-3.912663,-5.209655],[2.874375,-2.261529],[1.566513,2.929632],[2.944966,1.754589],[8.850396,-0.238447],[4.765972,-1.799861],[3.270312,-3.701404],[4.459418,8.097478],[5.905246,1.191813],[1.092911,-3.560554],[7.567522,6.428957],[-2.271462,5.708110],[-8.259750,5.825749],[7.957645,-9.007817],[5.300284,8.847050],[6.946121,3.964746],[-9.310299,0.530080],[-8.860165,9.797537],[3.305894,-2.819916],[6.395974,-1.678782],[-7.224212,8.685089],[0.337868,-8.926637],[-4.015599,-2.436337],[1.098162,-0.852726],[-4.758536,7.726720],[5.980425,7.868974],[6.302990,-9.107361],[3.010498,6.111934],[-8.738741,8.986410],[-7.983128,4.930070],[-5.352137,-3.819298],[0.827992,2.834276],[-3.085088,-6.664785],[2.434035,8.698616],[-7.352479,3.369742],[-7.822491,1.825135],[5.309053,-0.344344],[-3.726665,-7.124965],[3.107461,-2.524094],[0.882370,6.784445],[9.933609,7.964276],[0.151486,2.505585],[8.389796,9.847031],[0.171423,-1.706050],[9.060603,7.821931],[-1.334035,-8.434524],[-8.976026,-0.973253],[6.010525,-1.273345],[-4.118061,6.685824],[-9.960129,7.379599],[-3.841757,9.834832],[1.598911,-1.280914],[-3.876679,-6.943272],[-5.516816,9.000040],[-1.922525,-0.304724],[6.720475,-4.302795],[4.816025,7.600607],[-6.721850,6.913324],[2.746632,1.245312],[-3.377996,4.436811],[7.554775,-4.775774],[7.248943,-3.657646],[0.773882,0.798861],[8.014143,-9.471850],[5.477138,-4.103242],[-0.630199,-7.503651],[-2.037955,-8.940098],[-1.728435,-6.417483],[-1.902672,6.424690],[-6.841203,3.957480],[-0.500295,-5.648546],[-1.709443,-6.459692],[-4.093024,8.601388],[-7.118167,-3.796050],[5.021165,-2.498145],[-1.733107,1.129677],[1.218407,-1.229742],[6.819093,6.853706],[-5.323514,1.308501],[9.786884,3.595670],[5.276789,-3.558143],[-6.260134,-0.287221],[-9.867203,1.712799],[1.354486,4.697462],[3.665669,-9.998866],[6.001235,2.494487],[2.564008,-3.594387],[-3.176317,-9.668856],[-3.999780,-0.306488],[8.644576,1.611735],[6.459253,0.424911],[9.660430,1.846220],[-0.596203,9.081330],[5.918990,-3.085922],[-5.720055,2.513405],[-7.889672,-9.970827],[4.559820,1.000563],[9.677803,-1.886084],[-3.366099,-5.438221],[-8.451449,-8.005012],[7.557341,-5.164464],[-9.997147,-5.652391],[8.934459,-4.093672],[7.014145,-9.041371],[9.960201,-7.709274],[-9.118140,0.365533],[-3.699922,5.299307],[3.259425,5.542804],[5.262670,3.297113],[-7.673281,-5.119786],[-8.675222,5.071761],[0.418957,-6.324411],[-6.764449,-9.959958],[2.726449,1.729964],[9.551506,-2.590509],[-2.022220,2.287761],[1.084995,-9.268117],[-4.126094,7.421307],[0.964761,7.537765],[-3.190908,2.165379],[-3.131808,-9.778952],[8.085842,5.507147],[-2.941731,8.011174],[7.584275,-9.126806],[2.071304,0.145138],[-5.205064,-9.270759],[0.629229,-1.292683],[7.388146,-9.367242],[5.929574,1.257374],[-7.037444,1.435130],[-2.576101,-4.971675],[-3.934106,-0.691493],[4.509536,5.927872],[-8.852591,4.330611],[1.865366,-8.825025],[8.305145,-7.848288],[4.828508,2.616244],[-4.150358,-3.192574],[1.548012,0.163362],[6.531894,1.729937],[1.954633,-1.187723],[9.149821,6.722277],[-4.245253,8.724411],[5.662493,-2.857894],[-0.475319,-5.408389],[4.209316,7.725111],[3.173644,-9.494985],[3.301626,6.533511],[-0.168997,-8.247569],[0.575443,3.254472],[9.560967,0.536309],[-0.258686,8.119307],[6.822893,-5.117288],[-4.260765,4.833965],[-6.778086,9.154019],[-8.382689,-7.858783],[-8.749823,-3.130500],[-9.234764,0.213303],[-1.347875,-5.852793],[7.384930,0.697345]], dtype = "float32")#candidate|1732|(165, 2)|const|float32
call_1731 = func_541_call(relay.reshape(const_1732.astype('float32'), [2, 15, 11]), relay.reshape(const_1732.astype('float32'), [2, 15, 11]), )
call_1733 = func_541_call(relay.reshape(const_1732.astype('float32'), [2, 15, 11]), relay.reshape(const_1732.astype('float32'), [2, 15, 11]), )
output = relay.Tuple([uop_1682,call_1699,var_1700,const_1701,call_1711,var_1712,call_1731,const_1732,])
output2 = relay.Tuple([uop_1682,call_1702,var_1700,const_1701,call_1713,var_1712,call_1733,const_1732,])
func_1743 = relay.Function([var_1681,var_1700,var_1712,], output)
mod['func_1743'] = func_1743
mod = relay.transform.InferType()(mod)
mutated_mod['func_1743'] = func_1743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1743_call = mutated_mod.get_global_var('func_1743')
var_1745 = relay.var("var_1745", dtype = "float32", shape = (10, 16, 2))#candidate|1745|(10, 16, 2)|var|float32
var_1746 = relay.var("var_1746", dtype = "bool", shape = (784,))#candidate|1746|(784,)|var|bool
var_1747 = relay.var("var_1747", dtype = "float64", shape = (2002,))#candidate|1747|(2002,)|var|float64
call_1744 = func_1743_call(var_1745,var_1746,var_1747,)
output = call_1744
func_1748 = relay.Function([var_1745,var_1746,var_1747,], output)
mutated_mod['func_1748'] = func_1748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1791 = relay.var("var_1791", dtype = "uint64", shape = ())#candidate|1791|()|var|uint64
var_1792 = relay.var("var_1792", dtype = "uint64", shape = (3, 5, 10))#candidate|1792|(3, 5, 10)|var|uint64
bop_1793 = relay.bitwise_and(var_1791.astype('uint64'), var_1792.astype('uint64')) # shape=(3, 5, 10)
output = bop_1793
output2 = bop_1793
func_1799 = relay.Function([var_1791,var_1792,], output)
mod['func_1799'] = func_1799
mod = relay.transform.InferType()(mod)
mutated_mod['func_1799'] = func_1799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1799_call = mutated_mod.get_global_var('func_1799')
var_1801 = relay.var("var_1801", dtype = "uint64", shape = ())#candidate|1801|()|var|uint64
var_1802 = relay.var("var_1802", dtype = "uint64", shape = (3, 5, 10))#candidate|1802|(3, 5, 10)|var|uint64
call_1800 = func_1799_call(var_1801,var_1802,)
output = call_1800
func_1803 = relay.Function([var_1801,var_1802,], output)
mutated_mod['func_1803'] = func_1803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1982 = relay.var("var_1982", dtype = "float32", shape = (1, 8))#candidate|1982|(1, 8)|var|float32
var_1983 = relay.var("var_1983", dtype = "float32", shape = (1, 8))#candidate|1983|(1, 8)|var|float32
bop_1984 = relay.power(var_1982.astype('float32'), relay.reshape(var_1983.astype('float32'), relay.shape_of(var_1982))) # shape=(1, 8)
func_1154_call = mod.get_global_var('func_1154')
func_1157_call = mutated_mod.get_global_var('func_1157')
var_1991 = relay.var("var_1991", dtype = "float64", shape = (252,))#candidate|1991|(252,)|var|float64
call_1990 = relay.TupleGetItem(func_1154_call(relay.reshape(var_1991.astype('float64'), [3, 7, 12]), relay.reshape(var_1991.astype('float64'), [3, 7, 12]), ), 2)
call_1992 = relay.TupleGetItem(func_1157_call(relay.reshape(var_1991.astype('float64'), [3, 7, 12]), relay.reshape(var_1991.astype('float64'), [3, 7, 12]), ), 2)
bop_2002 = relay.right_shift(var_1991.astype('uint64'), call_1990.astype('uint64')) # shape=(10, 252)
bop_2005 = relay.right_shift(var_1991.astype('uint64'), call_1992.astype('uint64')) # shape=(10, 252)
func_1743_call = mod.get_global_var('func_1743')
func_1748_call = mutated_mod.get_global_var('func_1748')
var_2008 = relay.var("var_2008", dtype = "float32", shape = (320,))#candidate|2008|(320,)|var|float32
var_2009 = relay.var("var_2009", dtype = "bool", shape = (784, 1))#candidate|2009|(784, 1)|var|bool
const_2010 = relay.const([4.121480,-8.632097,3.194456,-7.337454,-2.972413,-6.651575,3.148509,2.167061,1.091435,-7.894956,3.400214,-0.192513,6.162334,-4.495560,4.374166,7.086058,3.189108,-0.166246,-7.010563,6.267133,-6.900142,-4.225690,3.797917,-6.295130,2.245619,6.235417,7.178520,-0.404921,7.164310,5.744861,-5.642496,-1.050468,-2.168588,-0.802761,4.286334,9.278420,1.170190,3.052307,8.956169,8.880065,-6.711458,1.103289,-1.812259,8.426179,6.111153,-8.330813,6.998835,3.857602,3.228189,-0.046539,7.655102,3.399707,6.198704,-9.996093,-3.748427,9.822305,-9.902147,-4.852835,-5.303098,4.655806,-5.831803,6.509243,-8.974035,-4.139284,4.208888,-9.727349,-1.029359,4.229279,-0.614564,0.430608,-8.207863,-7.314125,6.057016,8.036444,-9.501366,1.030160,8.411415,-7.511313,2.658853,6.722307,-8.923117,-5.488053,6.386087,-3.632375,8.461098,-9.195767,5.628158,-2.926610,2.286847,-4.250283,-8.798189,0.770208,7.370999,5.025004,-2.057865,1.066266,-0.957289,3.292932,8.342442,-1.338300,1.640597,-7.281788,3.076713,-9.246959,2.260449,-5.372933,-8.614237,3.302894,0.506524,5.855777,5.715414,-4.620624,-8.907413,-3.688453,-6.388344,-3.172735,2.461184,-5.085650,5.449978,-4.856654,6.329861,3.347821,-1.003355,2.846870,1.830443,8.665816,2.910706,3.462050,1.017601,-0.947573,-3.025937,-7.919691,4.284017,-3.769676,5.518221,9.230523,1.169467,-7.752674,5.720055,6.057252,-8.289572,-6.409015,0.825679,0.891817,0.832390,-7.129293,-1.002450,2.685233,7.472530,3.010806,-8.823154,8.657400,4.420672,2.204955,-6.200884,2.502024,3.887699,-0.306690,6.601932,-7.775732,1.162233,-8.388991,3.402653,-4.154806,5.075354,0.987524,-0.228770,9.880688,-4.005523,5.353145,-5.184698,-5.733500,-7.643310,-7.529398,-8.537824,-7.218701,2.144668,-4.389291,-3.037846,4.116556,-4.180460,-1.754325,1.477843,-7.294443,-1.782509,-8.280732,-0.371316,8.697716,-7.710883,0.785929,-3.084192,-6.932065,-1.022026,-8.832481,7.088964,3.505221,-8.531075,6.054132,2.338704,5.375996,3.999474,-7.289738,-5.313985,-5.075881,7.656468,-2.254728,2.425813,1.505291,2.372841,-4.125656,0.752931,-6.936289,7.204045,-4.836433,0.397836,8.240313,3.277050,-0.196900,3.114542,-2.289133,-4.819272,-5.173656,-1.041430,-3.439959,4.965196,-6.452714,-5.313986,-2.153322,-2.919185,-5.121730,-1.271575,-9.208420,-4.040420,-7.288921,7.757736,-2.041073,1.193735,6.984839,0.833182,6.549681,5.008182,4.902516,-6.820198,7.744313,-9.527209,-5.413045,3.162339,7.573324,6.403891,7.787290,-3.746213,4.569826,-2.604570,1.619016,-2.270312,-6.617306,5.638807,4.825807,3.388012,-9.315733,-9.056673,5.054074,-4.023248,9.100387,-5.018846,-6.354058,9.513397,-1.529434,5.294460,6.746800,-7.093132,7.503163,9.449099,8.568017,3.701696,9.027114,-5.975007,-3.015500,9.249256,-6.676189,-4.828457,-9.988626,-9.427030,-4.330275,3.572468,1.373277,2.912627,7.813613,7.314779,-7.505853,-7.089589,8.814881,-8.452401,2.204962,7.123876,6.272559,8.722452,8.730162,-3.394007,1.893644,1.677800,6.108812,9.462522,-3.229159,0.803792,2.872241,-6.252035,-2.940503,-6.106097,-2.336933,1.635867,-8.499403,9.324512,4.367182,6.448307,5.231606,5.252491,0.897506,4.313440,-9.614862,-0.723027,4.810698,-5.985859,2.518476,6.487524,-5.667566,9.310281,6.811814,8.695153,-6.975223,7.994667,9.990814,-8.397408,3.542074,-3.010124,-3.717757,-9.279908,8.060351,1.421158,3.384611,-4.375114,-0.317723,-3.120738,6.509061,-8.543066,-1.336590,5.911423,-4.919052,0.931404,-0.342535,2.537079,-8.947065,-2.132235,-8.286987,7.429313,-4.030831,-4.152542,9.997840,6.525661,-9.135522,3.717464,5.501949,-8.357760,-3.174686,-1.490979,-5.741411,-0.317380,1.311009,-4.649579,-6.529015,4.475060,-1.923378,6.184741,8.566291,-7.184361,-5.251137,-9.129485,-5.239600,-9.133752,-7.174068,5.416969,-3.199674,-4.908530,-5.835921,-0.836023,-9.793065,-2.035158,4.509898,-7.870038,-5.085561,-5.603291,-1.746739,-6.489636,8.087255,-2.465070,7.501174,-8.813034,1.886591,5.150685,-3.671950,-8.574431,-0.940647,8.306247,1.128020,-6.246727,-0.071907,-7.491737,5.901473,9.614371,2.282045,8.027717,-8.906190,0.408753,-3.537495,7.677503,-8.394241,6.820586,-7.609852,-0.097453,-0.387126,7.923447,3.140682,-1.057711,9.020427,3.871007,7.738353,9.217578,3.437385,0.958795,-6.408289,-9.505015,-9.429578,1.878503,-1.363835,-8.945920,-6.376230,4.950329,-4.818452,-5.710109,0.581968,-5.602890,-5.926880,-8.466713,-3.876376,9.416347,7.058367,5.256735,5.823862,-1.793241,-6.885422,0.452990,2.310317,-5.177491,-3.720738,2.663958,4.632595,-3.544852,1.729329,4.669689,-6.574628,-4.353765,-5.579158,1.801915,-5.419889,4.218107,7.533107,6.820481,0.656797,-5.657815,7.872139,3.271762,4.719323,-9.255517,2.864479,7.347403,9.080991,2.851885,9.380660,0.445844,-8.978705,0.784943,4.596624,-7.033138,-9.768659,-9.989307,-8.318317,-5.960549,3.852685,2.830122,-5.590931,-3.771437,-0.796308,8.816495,7.682468,-2.100749,4.102123,1.022373,-7.449387,5.210213,-1.206527,-5.804332,-5.866631,-2.083826,-8.969690,-9.429795,-9.601078,-2.728874,-5.607601,9.910622,-1.561304,7.573204,0.917844,4.019418,3.199867,-3.760297,-1.757205,-3.356446,-7.591757,1.533514,-9.203742,6.141737,-3.011344,-8.881157,-2.682670,-5.580037,9.096534,-9.344235,-9.586420,-8.755675,5.054787,3.713680,-8.414242,-3.339003,8.238830,9.773609,1.023221,-0.762710,-4.664900,-5.257072,-3.627946,5.719677,-0.021518,-7.694139,9.991422,-5.791658,-7.951449,3.206910,-0.148649,2.082278,6.013703,0.594960,3.175451,-7.436389,-8.851296,-3.219362,-9.168126,-8.939180,-7.457586,8.496363,-0.971376,-0.992787,-5.338609,6.008023,0.266021,-9.735961,0.998799,6.256845,9.408491,-5.670222,-9.674268,0.569445,-8.358859,1.711452,-0.659421,8.472744,7.694137,0.004960,2.182103,-8.773684,3.417503,3.050117,-7.448267,-8.124407,-0.948409,-1.910554,6.034106,6.973009,0.047366,-4.530753,-4.527736,-9.881131,8.401611,9.353521,-5.782186,1.971433,-6.774916,-5.878461,7.638883,-2.992578,8.804466,-4.665436,-4.898651,4.559056,8.146602,-9.886897,2.316152,6.421577,-1.100801,8.983322,-6.915614,7.007525,1.354062,5.142572,-8.550576,-0.586149,-6.019214,-4.263940,2.626894,9.378285,-0.804140,-0.976974,-7.526216,-7.075934,-0.986932,-3.764414,0.403185,5.386426,5.765744,7.515420,-2.096741,-0.177057,8.008249,-0.124178,-1.551193,6.963263,8.551039,-1.959826,7.616711,-7.358168,-2.547249,-9.175314,-0.283458,-5.079284,-6.272372,5.354170,1.439988,-6.176105,4.674218,3.457222,-5.949693,-8.344602,-2.464735,8.664545,7.730816,6.749178,-1.608853,6.122461,8.113925,9.470526,-4.173489,0.376435,-1.970680,-7.387030,-3.209863,6.622516,-1.305288,-3.762728,-6.322328,-2.687773,8.489174,2.363445,7.866026,5.945018,-8.116260,-3.948391,2.143691,-5.857088,6.742277,4.488606,4.361799,-2.908071,-6.253950,-7.696582,6.086405,2.618323,8.279172,-8.005331,4.474657,3.733879,-3.207832,-2.120818,2.711894,2.827943,8.366947,-0.623502,4.638795,-8.658526,9.572846,-8.243883,3.756764,-4.479810,-2.438869,5.913637,-4.131705,2.093342,5.695491,-9.006695,7.986234,5.196690,9.134579,1.536434,1.657218,-9.139156,-1.571771,0.619063,-9.531678,-1.239990,-2.112938,9.182999,3.713212,-2.053240,-1.966995,3.943204,-2.950199,0.993250,6.734585,8.729517,-8.419684,2.946420,-6.176049,1.346381,-0.972309,-9.639697,5.947596,8.404394,-1.728635,7.797968,3.237754,-3.471009,-6.002920,9.556537,-0.533639,-4.259865,-9.027919,-3.921406,-0.462916,-3.224115,3.619093,7.068767,-7.919725,6.167546,-7.806944,7.484512,-9.703063,-7.295116,2.423131,-2.626388,-4.049399,0.479320,-4.394486,1.418402,1.457569,-8.614234,-0.191391,4.349798,-1.080946,-0.494461,-8.491553,-8.390360,0.869172,4.494368,-6.012386,3.317777,-0.515189,-2.283253,-1.050173,5.701233,0.676222,-4.788054,1.216515,-5.402676,1.095659,7.730270,-7.140844,-1.314836,-2.194163,7.649596,3.915414,6.536203,5.225265,-1.584179,8.009506,5.444045,9.582966,3.048039,4.395923,5.794986,-0.554563,-7.676889,-0.519407,-2.745465,-2.117649,-4.853463,-1.019297,8.215123,7.088697,5.541422,8.539007,8.767261,9.838412,-8.569088,-0.617658,2.353366,-4.002543,7.440741,-8.190008,2.502678,3.709463,-6.172690,3.236354,5.148752,2.084090,8.279101,3.736822,-2.407534,8.794119,-2.455964,-4.428188,-1.106964,8.440017,9.115600,-8.339129,6.577411,-1.771104,3.516725,4.161950,-3.419264,-6.839489,-4.559401,-5.192145,-2.964056,3.013945,9.663922,-3.161197,-1.675401,-3.291429,8.680500,-8.233516,-2.808097,-3.716430,-8.128266,5.743881,-0.662664,-4.564985,4.353856,6.462804,3.458643,-4.386603,-8.127596,-7.592575,8.113211,4.830437,6.229118,8.907706,-8.134531,-3.154700,5.309437,-1.791351,0.269619,-4.271689,5.904811,-6.811012,-4.605246,-9.506624,0.047375,0.258859,5.129493,1.541647,-9.865090,-8.087834,-6.353919,6.454971,-1.402552,8.537608,9.220548,7.619761,-0.464403,5.085639,-2.438409,6.548151,-4.540068,-6.835283,9.343238,0.002157,-8.736192,3.584310,-2.003940,1.394146,-4.510770,-0.321500,-9.605985,-9.317292,5.654231,-1.016203,0.453651,9.248948,-3.718412,7.091523,5.026354,-8.244603,8.697078,-8.843155,-6.953494,-8.846559,-2.008966,-2.960476,-0.458632,8.928544,-8.447707,-7.745188,-7.841434,-2.715527,1.763798,-2.785748,-4.873924,0.558557,-3.745235,5.229784,2.678813,2.480620,-3.054008,-8.655255,3.727198,-1.502295,6.805160,9.446897,-0.446821,3.512915,-1.063469,-7.725681,-1.946651,-6.516083,5.947271,0.404387,9.122073,-6.161162,7.639537,5.878646,1.879155,-3.074581,-3.516194,-3.594056,5.626679,-1.954923,2.617862,-7.184635,-1.936955,3.321106,-8.495700,-9.212679,5.531809,8.139980,-8.701192,6.716510,-3.327143,-5.819837,-3.623231,5.053463,-9.550252,2.202019,-5.236939,9.680081,-8.554599,-0.384961,-6.463815,-3.200716,-4.707717,-2.925613,-6.158313,-6.090954,2.872681,3.574899,6.113972,-2.432086,3.489899,8.280366,9.893557,-0.114291,5.369483,3.434875,-6.478404,-7.542936,2.579308,9.567667,-4.690924,5.861390,-5.717136,0.908032,6.953781,-9.377984,5.305027,4.612076,-2.092070,-7.123494,-9.056119,1.301516,-9.236487,2.260812,-5.973560,9.573752,-7.670624,0.791211,-6.264709,-4.057101,-4.058521,-2.582024,9.703101,-9.004615,6.848156,6.286673,-1.324227,-0.244990,-2.298639,0.458652,-5.347899,-6.008300,5.443178,-4.295948,-4.985439,9.241933,0.800482,5.262985,0.912978,-0.107611,-3.231950,3.670463,0.615256,0.703004,9.560960,-8.535498,-5.825522,6.185723,-5.384969,4.392874,-9.171018,2.602902,-4.296844,-0.897060,2.712212,-6.670173,8.710474,-3.480329,-3.709080,-4.811293,-2.301138,9.962288,4.555755,-8.239054,-3.065527,1.342796,2.592204,-8.763518,5.890136,1.531379,-2.067774,-9.844305,0.470123,-8.015884,5.797523,-1.821702,5.888998,-6.400505,-6.896213,7.153630,-3.229034,6.106489,8.460511,5.660093,9.782605,5.984142,-4.363550,2.609842,2.011986,7.363602,-5.888844,-6.934896,-6.340945,2.003337,-6.575708,1.000677,4.158502,-1.775514,4.441372,1.081415,-0.673171,-2.357659,-7.284969,9.515351,2.626820,-4.319891,-5.504035,2.328316,9.747651,0.946851,7.249910,-5.745651,0.986531,-5.951247,-3.033877,6.824590,-6.542116,-1.619095,8.621161,-3.972571,-4.433473,6.118448,-3.247019,8.051924,9.349670,1.392716,-3.537690,4.408754,-2.823272,-3.739032,6.521262,1.095782,7.418831,-4.374256,8.400579,4.730977,-9.191237,-8.883690,8.261172,-4.929656,-6.963764,-9.746095,-9.066121,0.259177,1.720709,5.376582,7.508332,-1.423530,-7.062343,-9.102809,-3.886352,-3.031303,-6.175310,2.250721,-3.673318,-5.812052,9.788567,1.780917,-6.035239,-8.692506,-0.278086,-5.947792,-6.448479,-4.709552,9.927850,5.537504,-7.903446,-8.227687,-6.284568,6.864291,-4.863074,-5.621735,-8.562701,2.725293,-5.278333,-9.398445,4.247704,-4.902009,5.272237,1.335881,6.169964,-3.278719,-2.518243,-1.223185,-4.809985,6.977566,3.105600,-5.748193,-8.959232,-0.215837,4.476461,7.318101,5.366410,7.379623,7.920785,-5.908777,3.446205,-8.692050,0.511550,-0.862126,-9.314616,-0.796179,2.394941,1.148304,-3.542077,-9.921187,-2.387941,5.935129,-2.122853,3.244919,4.459233,-4.309374,-1.009697,-2.581773,-8.634314,-4.017985,-7.477173,-2.963972,1.211918,3.100806,-7.277114,-2.782180,-4.416994,-1.552941,-9.570582,-4.896298,2.955186,-2.594775,6.001880,-9.006158,4.603223,6.711384,1.484981,-4.694344,4.427174,9.581822,4.564221,2.935985,5.242941,-3.766820,0.867977,1.363114,-7.468857,-0.009859,-4.170178,5.402461,9.477486,4.576891,-6.199961,-7.747622,-9.299361,8.699456,7.668613,7.863866,9.052600,-8.303867,-4.074697,1.187604,7.974866,-4.650347,-7.049319,4.343282,-3.498005,2.361114,-0.720004,7.000001,1.312846,7.438220,3.836531,5.403334,-4.708242,6.394745,6.677631,4.162366,-3.674963,-4.245983,7.604906,7.018090,-0.392098,0.166546,-9.418189,1.378769,4.631283,-7.100720,8.505613,2.565142,0.910261,-8.638483,-8.115478,2.630351,-6.578229,9.864899,0.116674,8.680837,1.605200,5.419945,5.497245,0.889597,4.832292,6.231198,1.104470,-8.130894,1.963802,3.801473,7.036898,3.619522,-1.480638,7.765032,8.372354,-9.988065,0.193172,-3.751430,-0.392462,-7.628634,7.350803,8.498329,-8.090290,8.706447,-1.815310,9.510680,8.496422,4.660867,-2.544057,8.750521,-0.055340,-6.148927,6.093819,-2.417004,3.728257,4.018346,5.029146,3.072156,3.018061,5.767220,-9.013677,4.154756,0.846694,4.837012,4.141535,4.072803,-1.459096,-4.254674,-3.071096,-2.097172,0.229693,-9.077445,-4.618375,-6.853575,-0.106240,9.943734,4.161150,-1.639067,-7.039191,-4.763168,2.455369,5.858518,2.290663,6.646377,-8.924558,8.001209,-0.170689,-6.913553,-4.519063,-5.486983,6.417066,5.950800,-6.774763,6.718200,2.704596,-2.675209,-3.948033,7.387775,3.943100,1.234128,-7.398705,5.253853,6.753680,4.814739,8.372473,-9.145300,4.161800,2.494953,-9.508992,-6.448318,-2.878836,-0.017360,-3.074598,-3.251553,-2.237061,-6.515627,1.563352,5.972035,2.221577,-7.615873,-4.979089,6.150164,-1.925494,2.374993,-2.287849,-6.334036,9.951759,4.908827,-9.728697,6.014332,0.737836,3.156189,-1.752722,7.287744,9.472538,-5.893214,0.492660,-4.729144,-1.060790,-4.961729,9.233917,4.628532,5.482568,0.159522,-2.528325,-2.643452,-3.921546,-0.820369,9.797596,-6.361615,3.848757,-2.908310,8.542925,-8.104629,2.827078,-6.790305,-5.356439,4.113657,-2.207549,6.820012,6.424466,-7.805506,-8.722794,-5.732665,5.808822,-8.302620,9.567415,1.925667,4.578834,-3.132263,-7.454827,-9.341614,-6.616846,-5.071663,-5.031228,-7.330373,3.648038,6.900626,9.944646,2.274434,-9.532361,-3.035289,3.394971,-6.511318,7.897880,4.773245,2.481312,-8.556476,9.151499,-4.848594,1.627134,3.651303,-8.234489,-4.728997,8.800249,-9.688717,9.971912,8.474210,-7.983807,-0.813504,3.759552,0.288364,0.017248,-5.527144,-4.103280,-5.596854,3.319664,-6.049715,-3.322533,-7.402271,0.103228,1.441713,7.811791,7.834992,2.116166,8.913657,3.348997,5.345678,8.842892,4.973555,0.782740,5.348475,9.638694,-7.538300,-2.431567,3.886347,4.250716,-9.811313,-6.615171,-0.202289,6.805744,-9.503518,-6.306897,7.019549,8.866462,0.752925,-0.637982,-9.875250,-8.419977,8.007049,2.095429,-9.671047,-1.163098,1.818484,-9.412182,-8.041003,4.487676,-2.690426,-2.840768,3.482976,-5.238678,-3.278272,2.664273,9.543864,5.030085,-1.060147,4.813438,4.518259,-4.261758,-6.263271,-9.176080,-0.555003,3.416854,0.751634,0.964398,-1.423095,8.116448,-2.846582,5.551980,7.340064,8.582508,4.680973,-6.545124,-2.211618,4.269514,-6.158113,1.114217,3.977471,1.134600,-2.148562,-5.115292,0.561505,-7.078234,-6.266651,1.151129,-0.399343,-0.272214,1.562045,2.021368,5.130755,9.185738,-2.724675,-6.743404,7.701550,5.343864,-2.621450,-8.856286,1.724104,-9.519581,-8.169621,1.023468,-8.180340,-2.688121,1.185022,3.457178,-4.493603,-8.276366,4.572322,3.703825,-8.037487,-1.877423,-3.105934,-0.081407,7.436567,6.822388,-4.658115,3.059228,-4.957807,1.831732,2.820416,-4.922794,4.917334,-1.954048,-8.489921,7.982679,-1.841222,8.844254,1.785492,2.779913,-5.359649,-6.318173,2.495695,6.521866,-0.378981,0.039878,8.838203,3.533628,-5.374162,3.200043,0.934832,-9.596620,0.371784,-7.806992,7.663744,3.120194,5.602016,0.583670,5.657957,-9.259487,9.085879,1.518361,-3.067032,6.842656,5.300061,1.854162,8.742561,-5.282200,9.606455,7.853953,-6.274942,3.879585,7.481735,4.106436,8.811046,-2.163802,6.211674,-1.093001,-5.982111,8.831130,-0.212435,3.317115,-8.462794,-0.064805,-0.791595,-6.405722,7.502651,-3.401864,-8.165519,4.648295,-1.706319,-5.780181,-1.589711,6.805604,-1.460161,-1.710630,8.816877,7.018072,1.909591,5.922655,7.127465,3.790276,9.845587,5.605481,0.125895,-6.982950,-6.158598,1.284970,7.118668,-8.011074,3.383853,-4.292186,-8.798008,-1.106990,-8.717925,8.647876,-3.480261,-6.952440,6.287345,0.092928,-0.179218,-7.257345,5.046886,2.929711,-2.468678,-1.256819,-7.591495,-8.578151,-6.450336,5.229937,-6.479602,9.203644,5.172086,6.279170,2.433171,3.207330,-4.392710,2.973520,1.567455,-7.132218,-1.930451,-0.194825,5.313720,3.884298,5.232542,-2.275496,0.274792,-0.100708,8.357162,6.628249,9.772618,3.139026,-0.003484,4.596434,8.307593,1.362904,-2.294687,1.327020,-9.354177,-7.286439,8.631311,-7.007279,-4.503875,2.664572,-2.132710,-4.077464,3.507304,8.933813,-9.147636,7.694529,-9.745141,2.873475,-7.587188,-6.301667,8.043721,0.936724,-0.009026,-8.285204,-6.351402,-7.526558,-5.747433,-1.613465,-1.496613,-6.769189,-4.764448,7.374173,-3.336069,-5.127998,3.501006,-8.243605,9.497359,7.813809,5.270422,-1.109636,6.883613,-9.276792,5.947863,7.776949,-5.265114,5.387522,6.247882,8.462913,2.031169,1.916416,-1.825552,-7.739181,5.535513,9.005317,0.605539,-0.910868,4.000430,-3.780123,-3.474237,-9.354353,9.872129,1.417405,-4.956185,2.595072,-4.294787,-4.129567,-9.606596,-3.510489,-9.925214,-6.849500,3.372819,-5.706192,5.171124,-0.956261,-3.622971,-0.446218,-2.425516,8.729327,-1.522453,-3.564263,6.876903,4.526782,0.334795,1.654959,-2.940673,1.684436,-3.323880,-3.429266,3.639071,4.758310,5.171939,9.668381,-1.422712,7.859952,8.517237,7.754007,-2.920048,-0.059232,3.505019,-0.923793,4.844271,7.013458,3.201002,8.720788,-7.993055,4.297120,-3.879784,8.163043,0.821480,9.156586,6.975822,6.492153,-1.057605,6.293626,3.289687,8.848716,-0.410562,-3.220268,-8.750402,-5.772308,2.150360,-5.903292,-6.669031,-6.158866,-0.074223,4.892533,-9.602331,-9.834921,-1.232051,-3.864708,7.831737,6.591837,9.570318,9.924706,8.252126,-9.689945,8.925028,2.449629,4.501375,9.088577,8.242605,6.700028,3.977853,-7.974534,3.930232,1.081348,-8.691170,-5.887879,1.284193,0.496033,2.574167,4.325125,0.184852,0.656884,-6.814142,-8.441281,5.204925,4.865176,3.942066,-6.265524,3.055137,7.981599,-1.057550,9.306621,-3.604193,2.543317,-7.811679,-3.807791,1.240977,-6.284328,0.742914,6.085270,-6.393272,3.034607,2.308477,4.350958,-3.834935,-6.943879,-1.192447,-3.754063,7.463291,1.959539,-1.860156,4.012616,3.150478,7.516685,-8.425396,1.054077,8.170696,0.632040,-1.743394,6.969813,7.606422,-4.041640,5.979097,-0.166135,-8.587057,1.716890,-3.810799,-6.323033,-2.431376,-2.372921,-2.623015,-0.728711,-3.611007,-4.900915,-2.665025,4.385035,-7.853455,8.626085,-5.026590,-0.114666,2.638831,5.255303,-2.367792,9.590257,4.296667,6.090802,8.300801,-3.507528,5.810853,3.785786,-1.855565,-3.869137,-2.177920,4.345155,1.391209,3.742430,4.547939,-4.562871,-0.176533,-6.626091,8.626066,0.791530,2.830130,9.909770,4.114771,-1.801598,9.406462,-1.833084,9.433674,6.358722,6.354744,4.567843,4.483875,-2.414140,-3.301987,-8.424564,-3.577958,-9.264728,7.618707,9.496373,-4.293547,-1.724935,-5.778852,8.025974,-2.161080,-6.211405,2.724849,-3.721358,-9.040702,-6.708351,-4.151082,-0.394311,9.662307,-6.260353,-3.754804,6.607619,-6.643717,1.098328,-6.159585,-5.436118,1.541469,-8.002745,-5.193451,9.084571,2.315746,2.087609,-3.518733,-4.739818,5.447868,-7.735109,-3.669371,-9.547835,-6.769130,8.498300,3.047397,5.967648,9.592945,1.497204,5.423673], dtype = "float64")#candidate|2010|(2002,)|const|float64
call_2007 = relay.TupleGetItem(func_1743_call(relay.reshape(var_2008.astype('float32'), [10, 16, 2]), relay.reshape(var_2009.astype('bool'), [784,]), relay.reshape(const_2010.astype('float64'), [2002,]), ), 3)
call_2011 = relay.TupleGetItem(func_1748_call(relay.reshape(var_2008.astype('float32'), [10, 16, 2]), relay.reshape(var_2009.astype('bool'), [784,]), relay.reshape(const_2010.astype('float64'), [2002,]), ), 3)
uop_2016 = relay.log10(var_1991.astype('float32')) # shape=(252,)
uop_2019 = relay.log(const_2010.astype('float32')) # shape=(2002,)
func_1799_call = mod.get_global_var('func_1799')
func_1803_call = mutated_mod.get_global_var('func_1803')
const_2026 = relay.const(2, dtype = "uint64")#candidate|2026|()|const|uint64
var_2027 = relay.var("var_2027", dtype = "uint64", shape = (150,))#candidate|2027|(150,)|var|uint64
call_2025 = func_1799_call(relay.reshape(const_2026.astype('uint64'), []), relay.reshape(var_2027.astype('uint64'), [3, 5, 10]), )
call_2028 = func_1799_call(relay.reshape(const_2026.astype('uint64'), []), relay.reshape(var_2027.astype('uint64'), [3, 5, 10]), )
func_1670_call = mod.get_global_var('func_1670')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_2031 = relay.TupleGetItem(func_1670_call(relay.reshape(uop_2019.astype('float64'), [14, 13, 11])), 1)
call_2032 = relay.TupleGetItem(func_1673_call(relay.reshape(uop_2019.astype('float64'), [14, 13, 11])), 1)
func_541_call = mod.get_global_var('func_541')
func_545_call = mutated_mod.get_global_var('func_545')
var_2034 = relay.var("var_2034", dtype = "float32", shape = (330,))#candidate|2034|(330,)|var|float32
call_2033 = func_541_call(relay.reshape(var_2034.astype('float32'), [2, 15, 11]), relay.reshape(var_2034.astype('float32'), [2, 15, 11]), )
call_2035 = func_541_call(relay.reshape(var_2034.astype('float32'), [2, 15, 11]), relay.reshape(var_2034.astype('float32'), [2, 15, 11]), )
func_1670_call = mod.get_global_var('func_1670')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_2038 = relay.TupleGetItem(func_1670_call(relay.reshape(const_2010.astype('float64'), [14, 13, 11])), 5)
call_2039 = relay.TupleGetItem(func_1673_call(relay.reshape(const_2010.astype('float64'), [14, 13, 11])), 5)
func_1206_call = mod.get_global_var('func_1206')
func_1210_call = mutated_mod.get_global_var('func_1210')
var_2042 = relay.var("var_2042", dtype = "float32", shape = (1078,))#candidate|2042|(1078,)|var|float32
call_2041 = relay.TupleGetItem(func_1206_call(relay.reshape(call_2031.astype('float32'), [7, 1, 14]), relay.reshape(var_2042.astype('float32'), [7, 11, 14]), ), 0)
call_2043 = relay.TupleGetItem(func_1210_call(relay.reshape(call_2031.astype('float32'), [7, 1, 14]), relay.reshape(var_2042.astype('float32'), [7, 11, 14]), ), 0)
bop_2047 = relay.power(uop_2016.astype('float32'), bop_2002.astype('float32')) # shape=(10, 252)
bop_2050 = relay.power(uop_2016.astype('float32'), bop_2005.astype('float32')) # shape=(10, 252)
bop_2059 = relay.divide(var_1991.astype('float32'), var_2009.astype('float32')) # shape=(784, 252)
bop_2066 = relay.logical_and(uop_2019.astype('bool'), relay.reshape(const_2010.astype('bool'), relay.shape_of(uop_2019))) # shape=(2002,)
func_1154_call = mod.get_global_var('func_1154')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_2070 = relay.TupleGetItem(func_1154_call(relay.reshape(uop_2016.astype('float64'), [3, 7, 12]), relay.reshape(var_1991.astype('float64'), [3, 7, 12]), ), 1)
call_2071 = relay.TupleGetItem(func_1157_call(relay.reshape(uop_2016.astype('float64'), [3, 7, 12]), relay.reshape(var_1991.astype('float64'), [3, 7, 12]), ), 1)
bop_2078 = relay.mod(call_2033.astype('float64'), const_2026.astype('float64')) # shape=(2, 15, 11)
bop_2081 = relay.mod(call_2035.astype('float64'), const_2026.astype('float64')) # shape=(2, 15, 11)
bop_2082 = relay.bitwise_and(bop_2047.astype('uint64'), uop_2016.astype('uint64')) # shape=(10, 252)
bop_2085 = relay.bitwise_and(bop_2050.astype('uint64'), uop_2016.astype('uint64')) # shape=(10, 252)
output = relay.Tuple([bop_1984,call_2007,var_2008,call_2025,var_2027,call_2031,var_2034,call_2038,call_2041,var_2042,bop_2059,bop_2066,call_2070,bop_2078,bop_2082,])
output2 = relay.Tuple([bop_1984,call_2011,var_2008,call_2028,var_2027,call_2032,var_2034,call_2039,call_2043,var_2042,bop_2059,bop_2066,call_2071,bop_2081,bop_2085,])
func_2087 = relay.Function([var_1982,var_1983,var_1991,var_2008,var_2009,var_2027,var_2034,var_2042,], output)
mod['func_2087'] = func_2087
mod = relay.transform.InferType()(mod)
var_2088 = relay.var("var_2088", dtype = "float32", shape = (1, 8))#candidate|2088|(1, 8)|var|float32
var_2089 = relay.var("var_2089", dtype = "float32", shape = (1, 8))#candidate|2089|(1, 8)|var|float32
var_2090 = relay.var("var_2090", dtype = "float64", shape = (252,))#candidate|2090|(252,)|var|float64
var_2091 = relay.var("var_2091", dtype = "float32", shape = (320,))#candidate|2091|(320,)|var|float32
var_2092 = relay.var("var_2092", dtype = "bool", shape = (784, 1))#candidate|2092|(784, 1)|var|bool
var_2093 = relay.var("var_2093", dtype = "uint64", shape = (150,))#candidate|2093|(150,)|var|uint64
var_2094 = relay.var("var_2094", dtype = "float32", shape = (330,))#candidate|2094|(330,)|var|float32
var_2095 = relay.var("var_2095", dtype = "float32", shape = (1078,))#candidate|2095|(1078,)|var|float32
output = func_2087(var_2088,var_2089,var_2090,var_2091,var_2092,var_2093,var_2094,var_2095,)
func_2096 = relay.Function([var_2088,var_2089,var_2090,var_2091,var_2092,var_2093,var_2094,var_2095,], output)
mutated_mod['func_2096'] = func_2096
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2118 = relay.var("var_2118", dtype = "float64", shape = (1, 1, 8))#candidate|2118|(1, 1, 8)|var|float64
uop_2119 = relay.atan(var_2118.astype('float64')) # shape=(1, 1, 8)
output = uop_2119
output2 = uop_2119
func_2132 = relay.Function([var_2118,], output)
mod['func_2132'] = func_2132
mod = relay.transform.InferType()(mod)
var_2133 = relay.var("var_2133", dtype = "float64", shape = (1, 1, 8))#candidate|2133|(1, 1, 8)|var|float64
output = func_2132(var_2133)
func_2134 = relay.Function([var_2133], output)
mutated_mod['func_2134'] = func_2134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2274 = relay.var("var_2274", dtype = "float64", shape = (8, 14, 16))#candidate|2274|(8, 14, 16)|var|float64
uop_2275 = relay.asinh(var_2274.astype('float64')) # shape=(8, 14, 16)
uop_2284 = relay.acos(uop_2275.astype('float64')) # shape=(8, 14, 16)
bop_2289 = relay.logical_or(uop_2284.astype('bool'), relay.reshape(var_2274.astype('bool'), relay.shape_of(uop_2284))) # shape=(8, 14, 16)
output = bop_2289
output2 = bop_2289
func_2293 = relay.Function([var_2274,], output)
mod['func_2293'] = func_2293
mod = relay.transform.InferType()(mod)
var_2294 = relay.var("var_2294", dtype = "float64", shape = (8, 14, 16))#candidate|2294|(8, 14, 16)|var|float64
output = func_2293(var_2294)
func_2295 = relay.Function([var_2294], output)
mutated_mod['func_2295'] = func_2295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2736 = relay.var("var_2736", dtype = "bool", shape = (7, 4, 8))#candidate|2736|(7, 4, 8)|var|bool
var_2737 = relay.var("var_2737", dtype = "bool", shape = (7, 4, 8))#candidate|2737|(7, 4, 8)|var|bool
bop_2738 = relay.logical_or(var_2736.astype('bool'), relay.reshape(var_2737.astype('bool'), relay.shape_of(var_2736))) # shape=(7, 4, 8)
bop_2747 = relay.floor_mod(var_2736.astype('float32'), relay.reshape(bop_2738.astype('float32'), relay.shape_of(var_2736))) # shape=(7, 4, 8)
func_1015_call = mod.get_global_var('func_1015')
func_1018_call = mutated_mod.get_global_var('func_1018')
const_2756 = relay.const([False,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,False,True,True], dtype = "bool")#candidate|2756|(784,)|const|bool
const_2757 = relay.const([[-3.034156,1.551971,4.368082,-8.420991,9.157140,-5.656756,7.564620,7.030581,3.037309,3.137588]], dtype = "float64")#candidate|2757|(1, 10)|const|float64
call_2755 = relay.TupleGetItem(func_1015_call(relay.reshape(const_2756.astype('bool'), [8, 14, 7]), relay.reshape(const_2757.astype('float64'), [1, 10]), ), 5)
call_2758 = relay.TupleGetItem(func_1018_call(relay.reshape(const_2756.astype('bool'), [8, 14, 7]), relay.reshape(const_2757.astype('float64'), [1, 10]), ), 5)
func_1032_call = mod.get_global_var('func_1032')
func_1035_call = mutated_mod.get_global_var('func_1035')
var_2767 = relay.var("var_2767", dtype = "float64", shape = (30,))#candidate|2767|(30,)|var|float64
call_2766 = relay.TupleGetItem(func_1032_call(relay.reshape(var_2767.astype('float64'), [1, 3, 10])), 0)
call_2768 = relay.TupleGetItem(func_1035_call(relay.reshape(var_2767.astype('float64'), [1, 3, 10])), 0)
output = relay.Tuple([bop_2747,call_2755,const_2756,const_2757,call_2766,var_2767,])
output2 = relay.Tuple([bop_2747,call_2758,const_2756,const_2757,call_2768,var_2767,])
func_2776 = relay.Function([var_2736,var_2737,var_2767,], output)
mod['func_2776'] = func_2776
mod = relay.transform.InferType()(mod)
var_2777 = relay.var("var_2777", dtype = "bool", shape = (7, 4, 8))#candidate|2777|(7, 4, 8)|var|bool
var_2778 = relay.var("var_2778", dtype = "bool", shape = (7, 4, 8))#candidate|2778|(7, 4, 8)|var|bool
var_2779 = relay.var("var_2779", dtype = "float64", shape = (30,))#candidate|2779|(30,)|var|float64
output = func_2776(var_2777,var_2778,var_2779,)
func_2780 = relay.Function([var_2777,var_2778,var_2779,], output)
mutated_mod['func_2780'] = func_2780
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2965 = relay.var("var_2965", dtype = "int32", shape = (13, 9, 15))#candidate|2965|(13, 9, 15)|var|int32
var_2966 = relay.var("var_2966", dtype = "int32", shape = (13, 9, 15))#candidate|2966|(13, 9, 15)|var|int32
bop_2967 = relay.logical_xor(var_2965.astype('int32'), relay.reshape(var_2966.astype('int32'), relay.shape_of(var_2965))) # shape=(13, 9, 15)
func_1595_call = mod.get_global_var('func_1595')
func_1599_call = mutated_mod.get_global_var('func_1599')
var_2978 = relay.var("var_2978", dtype = "float64", shape = ())#candidate|2978|()|var|float64
const_2979 = relay.const([9.911262,7.380096,4.832722,7.199706,0.161139,-2.499663,5.446911,5.593779,-4.612417,-0.883688,3.453328,-8.135732,-7.877176,-4.116005,7.428011,-1.199835,-8.429107,5.321941,4.772242,-2.947845,9.659956,2.458619,6.046813,1.199108,-8.581599,3.042985,2.895700,8.649963,2.133331,7.240428,-5.425993,2.573055,1.176983,-5.633734,-3.371443,4.113428,-9.022875,-8.130241,3.128676,9.019847,8.757040,7.897722], dtype = "float64")#candidate|2979|(42,)|const|float64
var_2980 = relay.var("var_2980", dtype = "float32", shape = (539, 2))#candidate|2980|(539, 2)|var|float32
call_2977 = relay.TupleGetItem(func_1595_call(relay.reshape(var_2978.astype('float64'), []), relay.reshape(const_2979.astype('float64'), [6, 7, 1]), relay.reshape(var_2980.astype('float32'), [1078,]), ), 1)
call_2981 = relay.TupleGetItem(func_1599_call(relay.reshape(var_2978.astype('float64'), []), relay.reshape(const_2979.astype('float64'), [6, 7, 1]), relay.reshape(var_2980.astype('float32'), [1078,]), ), 1)
func_1032_call = mod.get_global_var('func_1032')
func_1035_call = mutated_mod.get_global_var('func_1035')
const_2993 = relay.const([-1.658185,-9.110226,-2.731747,-7.028490,4.898158,-2.414870,-7.588384,6.124177,9.579982,4.945250,1.316961,0.533144,7.315385,6.599071,7.834744,5.847338,-8.664709,-6.173445,-2.049355,-5.151881,-6.246429,9.041979,6.963900,6.411769,-2.790698,2.298333,9.358303,2.318455,-9.967032,2.138739], dtype = "float64")#candidate|2993|(30,)|const|float64
call_2992 = relay.TupleGetItem(func_1032_call(relay.reshape(const_2993.astype('float64'), [1, 3, 10])), 0)
call_2994 = relay.TupleGetItem(func_1035_call(relay.reshape(const_2993.astype('float64'), [1, 3, 10])), 0)
func_1154_call = mod.get_global_var('func_1154')
func_1157_call = mutated_mod.get_global_var('func_1157')
const_3000 = relay.const([1.136652,6.075285,7.239297,-2.333288,3.599678,3.833611,-8.693578,2.314291,-9.207391,9.733842,2.047694,8.685072,2.821700,9.629861,-0.975917,8.439854,3.701143,-8.445951,6.627204,-1.978039,-1.048377,-4.999379,-5.170807,-8.738949,0.196807,-7.050191,6.106319,-6.816549,9.380763,7.296436,2.971897,-6.562843,-1.555489,8.262190,0.401816,-5.655667,9.943891,-0.963429,-9.154383,9.391783,-5.352439,-7.005977,7.087211,-9.770346,6.409930,-9.139726,-8.284397,9.214277,8.770043,8.384920,-3.796135,-9.277513,-0.394305,9.993457,-3.693308,8.188165,-0.229834,-0.980639,-3.836767,5.556341,7.682039,-5.287796,-8.195004,-7.345267,7.332051,-3.547129,0.909576,4.444772,7.949412,-6.966200,0.342056,8.972421,9.192014,-3.321058,-2.175788,7.302273,1.544511,-4.052468,7.531436,-7.491826,-0.624399,1.451779,4.925687,9.692468,7.100404,-5.241269,0.817824,6.096525,-0.917403,-8.049210,0.309164,-2.632231,-8.467901,-2.685504,8.691001,-7.519785,3.389246,6.443642,-3.478163,4.127143,-1.665947,7.554657,6.489365,-8.774919,-0.838755,4.930208,2.647623,-6.024930,-7.522642,5.313429,7.570523,2.415694,5.598210,-2.324249,4.446777,-8.016309,2.932866,-8.924706,-5.879709,-7.231052,8.208240,-2.213200,9.373784,-4.726927,7.614915,3.145738,0.974859,3.174747,6.016880,3.543109,1.284889,-4.315822,5.872983,-2.506818,-6.542386,-4.496548,-0.386415,-0.632464,8.763645,9.277970,-5.717545,-0.802562,1.913562,2.905361,9.255912,4.204770,-0.274178,3.360507,-8.497530,4.602916,4.834769,8.432679,-8.927710,6.352801,-3.403219,-3.365422,-8.568261,2.309714,-7.487581,-6.916384,9.671094,-7.910620,-0.767674,2.078507,7.460704,4.689746,-2.279476,-3.549381,-1.131720,-7.544036,-6.928373,3.295615,7.611633,-4.979677,6.923240,0.538176,3.053036,-1.750781,-0.593251,-4.895894,-9.134984,-0.056011,-7.121121,0.594264,-7.002052,-9.338511,-7.388676,6.344192,-2.607060,2.581545,4.347592,-9.514854,5.352185,-6.872019,-9.593680,2.594306,-1.706566,7.569715,5.388789,7.475598,-2.589930,-5.399556,6.783543,8.488855,-4.963403,-4.485133,0.686318,-8.243456,2.467299,-0.964708,5.727541,8.054237,8.412277,8.799095,0.663202,6.328840,-1.393489,7.840676,0.064119,0.259615,6.541214,6.942311,-0.737406,9.809646,-6.445849,7.348131,-7.105999,0.535575,3.913672,-2.771852,3.634750,-4.378754,1.134076,-7.153375,-0.197097,-1.629677,3.401671,4.947308,8.704612,9.489733,-2.617595,-7.083441,3.655728,4.622134,-8.975106,-1.123629,3.876123,4.200260,-2.784024,8.517539,9.338849,-8.383755], dtype = "float64")#candidate|3000|(252,)|const|float64
call_2999 = relay.TupleGetItem(func_1154_call(relay.reshape(const_3000.astype('float64'), [3, 7, 12]), relay.reshape(const_3000.astype('float64'), [3, 7, 12]), ), 0)
call_3001 = relay.TupleGetItem(func_1157_call(relay.reshape(const_3000.astype('float64'), [3, 7, 12]), relay.reshape(const_3000.astype('float64'), [3, 7, 12]), ), 0)
bop_3004 = relay.left_shift(const_3000.astype('int32'), call_2977.astype('int32')) # shape=(1, 10, 252)
bop_3007 = relay.left_shift(const_3000.astype('int32'), call_2981.astype('int32')) # shape=(1, 10, 252)
output = relay.Tuple([bop_2967,var_2978,const_2979,var_2980,call_2992,const_2993,call_2999,bop_3004,])
output2 = relay.Tuple([bop_2967,var_2978,const_2979,var_2980,call_2994,const_2993,call_3001,bop_3007,])
func_3011 = relay.Function([var_2965,var_2966,var_2978,var_2980,], output)
mod['func_3011'] = func_3011
mod = relay.transform.InferType()(mod)
mutated_mod['func_3011'] = func_3011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3011_call = mutated_mod.get_global_var('func_3011')
var_3013 = relay.var("var_3013", dtype = "int32", shape = (13, 9, 15))#candidate|3013|(13, 9, 15)|var|int32
var_3014 = relay.var("var_3014", dtype = "int32", shape = (13, 9, 15))#candidate|3014|(13, 9, 15)|var|int32
var_3015 = relay.var("var_3015", dtype = "float64", shape = ())#candidate|3015|()|var|float64
var_3016 = relay.var("var_3016", dtype = "float32", shape = (539, 2))#candidate|3016|(539, 2)|var|float32
call_3012 = func_3011_call(var_3013,var_3014,var_3015,var_3016,)
output = call_3012
func_3017 = relay.Function([var_3013,var_3014,var_3015,var_3016,], output)
mutated_mod['func_3017'] = func_3017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3056 = relay.var("var_3056", dtype = "float64", shape = (6, 11, 7))#candidate|3056|(6, 11, 7)|var|float64
const_3057 = relay.const([[[2.284158,7.979441,-7.028275,-2.284090,5.897260,3.334110,7.867880],[9.485179,-0.570728,8.763926,6.541938,7.720452,-4.849901,4.120764],[-4.246329,5.363381,0.892938,-1.485805,3.324474,9.868250,-9.017353],[-8.475038,1.743312,-2.369602,-8.928479,-2.825848,6.255739,-1.725659],[-6.964414,-3.244907,3.928598,-8.634789,-4.074806,-7.016918,0.320895],[2.019094,-9.752542,8.772312,8.746380,3.450811,-8.931789,5.932721],[-6.520047,5.311705,1.190244,7.370339,-1.669411,-7.089115,-8.679275],[-3.702417,-5.859440,4.226048,3.951785,-0.742128,-3.109275,3.490077],[6.482375,-0.599481,-0.845403,-2.953120,4.940215,-2.631903,8.479990],[3.799327,5.167095,7.402575,2.056961,-8.869102,-6.502775,9.385749],[8.610009,9.490677,-8.266007,-9.210393,7.630272,-1.186861,-9.537535]],[[-5.764944,4.630201,2.527496,4.371833,5.921855,6.833834,-1.620564],[-2.688346,-7.279381,-8.785638,9.053286,5.905494,7.749425,-4.198024],[9.799243,7.942284,1.021772,7.528589,6.370797,2.904605,3.269831],[3.936220,-4.797357,-4.814315,4.770220,-7.319895,4.557001,-2.650188],[8.611253,-9.931732,4.793087,-4.764552,3.778796,8.693777,1.263095],[9.246114,4.546245,-7.301140,-4.494940,-5.333181,4.874659,-7.849405],[-4.481776,3.444058,-1.246702,-5.399968,3.613141,-3.902152,5.649261],[-6.414169,-8.469976,9.268813,-8.868840,-7.526224,-8.799938,-4.076393],[2.601031,-5.021566,9.523227,2.074910,-9.182093,5.957483,3.310485],[-7.390881,0.896026,0.382591,-2.770716,2.504849,-7.411197,3.704536],[-3.748393,-8.501051,2.755113,5.952648,-0.279963,-3.467671,-2.854603]],[[2.967633,7.698227,-7.933921,-6.738050,-7.583403,5.839449,8.692695],[5.860084,-6.474214,-1.948400,-6.213296,-9.931965,-8.803010,-6.960311],[0.968991,-6.484830,-5.013828,-3.196536,-8.252390,-9.381840,9.168139],[-5.557027,0.823626,7.565549,8.365644,-8.174887,2.365934,4.076558],[-9.819892,-8.089409,-6.079816,-1.100355,-9.221047,-5.368241,4.560031],[-5.302606,-2.297497,0.826873,-4.866259,7.304646,-0.246108,5.373213],[-1.856452,1.841966,2.019949,-3.365186,-8.915569,-3.603959,5.215418],[6.324312,-0.622611,3.668481,-7.900292,-1.999826,-6.031082,-8.634278],[-0.145259,-7.335538,-7.968935,5.483967,-8.201784,2.334384,-0.686446],[9.055102,-2.189943,-5.123132,-8.289824,8.603045,-6.447712,-7.723684],[-7.174270,7.926622,-7.579327,7.118701,7.630189,-4.492855,9.761597]],[[-1.317737,-7.659417,2.913493,-5.423177,2.323665,-4.852053,9.792819],[-4.223799,2.103739,-3.519616,6.214477,-5.154646,7.843028,1.659920],[1.122528,7.770085,-8.314088,-8.840946,4.297615,5.854334,1.178223],[1.867601,-5.688219,-6.496408,-5.433187,-4.833389,-3.261419,0.695312],[-2.741330,0.903046,3.357958,2.457776,-2.034778,7.353691,-9.957113],[-6.758321,-6.497617,-1.174669,-3.661563,-8.512755,2.842577,-2.210146],[-3.615446,3.958995,3.970048,-1.928067,-3.259249,-1.763844,2.038346],[-6.696784,4.755250,-1.218230,-4.763392,-6.437916,6.406139,-2.048112],[-1.235109,-2.152360,-1.044111,7.815022,1.472708,-1.399613,-2.649198],[-4.464228,-3.314663,1.547131,-4.629594,-7.055522,0.097035,4.181958],[8.195122,2.962810,-7.533238,-3.058680,-5.764444,-3.284509,-9.911378]],[[7.697436,-8.415662,-4.023948,-2.124418,-4.372239,8.062485,7.258044],[1.340139,-0.764383,-5.233196,-5.818343,9.632309,6.483228,6.833510],[6.411334,-5.851058,-3.633456,7.867927,-7.629484,-5.111709,-1.246403],[3.076244,-0.900213,-4.761912,2.153855,0.381494,6.460727,0.785429],[-3.736828,8.274259,-1.048647,-7.152574,-8.407471,7.800017,5.979058],[3.050289,-5.332359,5.459628,7.735511,5.436734,9.763854,2.517209],[2.959901,2.076983,1.756767,-3.623615,4.155386,-0.483654,-9.631316],[-3.149695,0.836383,0.027830,-3.773913,1.784015,-2.310007,-9.917591],[9.241971,-5.346153,-9.082121,-2.938486,-6.253262,6.782282,5.668108],[5.693397,-1.568178,4.708372,5.000569,0.395535,2.431152,-3.873037],[0.192014,6.470615,-9.902875,2.833956,-3.802690,-5.909680,-6.287498]],[[-3.021155,2.953209,6.405104,1.053952,1.781205,4.635861,-1.363783],[0.601090,-8.633358,6.515432,7.803653,-0.599657,3.926061,-4.356439],[1.391447,0.981038,-2.835140,-9.018918,-5.626352,-1.882536,-9.547088],[-2.068983,4.726818,2.991246,-4.957457,4.388499,-5.973848,7.227867],[-2.205802,1.877458,-3.969016,5.195206,0.087006,3.369237,2.797148],[-3.216154,6.765056,-8.206155,-5.849286,4.673832,6.805147,8.777462],[-0.208813,3.610674,-0.850385,-7.440300,1.969961,-7.090643,7.759095],[2.624411,9.033930,5.154758,-4.717531,4.921974,4.030209,-6.176416],[-1.333987,5.102503,-0.448149,4.109093,4.743649,6.243940,-9.438630],[-7.999351,0.771611,-9.572750,6.458534,-7.344752,-8.159959,-9.203968],[-2.362187,-5.883969,-2.867085,5.213066,-0.313499,-6.379849,-3.194903]]], dtype = "float64")#candidate|3057|(6, 11, 7)|const|float64
bop_3058 = relay.maximum(var_3056.astype('float64'), relay.reshape(const_3057.astype('float64'), relay.shape_of(var_3056))) # shape=(6, 11, 7)
uop_3062 = relay.atanh(var_3056.astype('float32')) # shape=(6, 11, 7)
func_361_call = mod.get_global_var('func_361')
func_363_call = mutated_mod.get_global_var('func_363')
const_3065 = relay.const([[-6.626642],[2.129940],[4.283666],[-6.907061],[4.807768],[-1.209302],[2.113521],[-9.009034],[4.134713],[-3.581861]], dtype = "float64")#candidate|3065|(10, 1)|const|float64
call_3064 = func_361_call(relay.reshape(const_3065.astype('float64'), [1, 10, 1]))
call_3066 = func_361_call(relay.reshape(const_3065.astype('float64'), [1, 10, 1]))
output = relay.Tuple([bop_3058,uop_3062,call_3064,const_3065,])
output2 = relay.Tuple([bop_3058,uop_3062,call_3066,const_3065,])
func_3069 = relay.Function([var_3056,], output)
mod['func_3069'] = func_3069
mod = relay.transform.InferType()(mod)
var_3070 = relay.var("var_3070", dtype = "float64", shape = (6, 11, 7))#candidate|3070|(6, 11, 7)|var|float64
output = func_3069(var_3070)
func_3071 = relay.Function([var_3070], output)
mutated_mod['func_3071'] = func_3071
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3208 = relay.const([[[3.936112,7.151258,-7.029722,-2.077879,6.255438,8.872326,-0.261821,-8.480331,-3.960508,-7.940646,-9.629077,-0.575947,4.684461,7.756572,1.926233],[4.624053,5.437351,7.123398,-2.370868,6.776680,-7.665308,-7.684088,7.165141,0.291365,1.421754,5.081644,-5.768638,6.143376,8.375192,-8.698296],[3.397445,3.685421,-6.754778,-9.593380,3.509289,-4.857195,3.767076,-1.391678,2.164330,-9.204792,5.787933,7.956718,5.890091,7.855451,1.720100],[-8.710747,7.473024,4.801445,-3.425160,-0.160721,-8.685660,0.016056,-6.323160,-0.986734,6.522690,-1.267731,-3.837347,-1.210364,-2.176929,-6.734419],[-9.317748,-8.072879,4.483117,0.719357,-2.908771,4.111149,8.117889,-4.161136,-7.577526,3.499476,7.551138,2.786540,0.432836,3.892977,4.143393],[-5.001661,-5.148343,-9.979601,-7.493084,6.080649,9.672213,0.085223,8.666068,-6.086101,-7.273850,3.381916,6.635810,7.275128,9.890343,-8.469581],[2.132142,-7.803184,-9.095376,5.393687,-3.833788,8.512753,7.633207,-8.669410,-1.738898,-7.620730,4.984653,-7.276286,-1.322425,7.615165,-8.107640],[7.513995,-4.511521,-2.410894,-2.725458,-6.138800,-4.842766,-6.116004,-1.730659,9.163991,-4.252592,-7.548798,2.271543,-6.679938,-7.150056,3.160802],[-2.414068,-1.740421,-3.091259,5.527603,-5.682462,-4.130523,3.361764,-0.565546,1.862452,-5.575059,-6.153656,6.547311,9.315562,6.164775,-3.552397],[-2.495551,2.166244,2.065629,0.205582,-0.612961,-7.523311,7.185894,-1.812768,-2.927932,4.931603,6.465633,0.183904,3.901735,-8.105226,-0.939890],[-5.450595,0.715974,-8.814209,2.059653,9.275918,7.980667,-7.906283,6.657307,8.008268,6.519876,-5.514707,-5.128544,0.659100,-1.854354,-9.646407]],[[-0.965677,-1.066192,4.928054,8.342209,-7.370960,-7.716477,-5.062567,-7.592670,4.680933,3.754196,-2.091349,8.865152,8.638714,1.544551,0.242801],[2.156799,-7.338560,0.798585,-3.827250,-8.217095,-8.929726,-6.525981,-4.001729,-7.094624,-7.215503,-2.322911,-3.862576,7.317523,-8.019945,6.192106],[5.248405,-1.600501,-2.856988,0.073913,-4.320023,-1.021176,-5.684406,9.991633,1.463370,7.190009,-4.543639,0.572015,3.762211,-6.567396,5.638224],[4.261047,-6.306877,-6.640801,-3.008738,1.807802,2.643753,4.468855,7.367967,-2.418439,-9.346441,-0.549649,9.930394,3.520825,2.248441,4.537718],[-1.433351,1.795885,-6.362700,0.516339,6.449528,6.751064,-7.437625,-7.582456,3.654209,4.235405,-2.635096,-0.831048,9.739057,5.406806,-3.057405],[9.758171,6.118771,1.002521,-9.156010,-6.137399,-3.121806,-9.555659,-2.823444,-8.741340,-7.223144,-1.380356,0.211636,-8.701409,-8.377925,9.887417],[-9.577922,1.168269,2.501976,9.285499,-7.147762,0.429316,8.324945,0.078408,6.440344,-6.718419,8.824802,-0.610574,4.943514,4.779760,-2.362268],[-2.280613,0.221097,3.935780,7.114898,-4.178663,-8.307408,-1.880410,-0.876926,-6.044136,0.543444,9.119500,7.121042,8.297920,-7.201660,-9.393836],[-1.953831,-7.325184,3.210933,-7.656385,-6.027861,-8.003651,2.983329,6.622965,-2.499787,9.830347,-6.700376,0.492639,-1.056887,-3.505371,7.994075],[-6.981226,-5.173177,-4.452455,-5.776144,-7.765238,1.436325,3.493532,2.830131,-3.217617,-7.606038,4.485092,-5.772447,-4.145532,0.120707,-5.405619],[-0.398784,-9.177532,2.752991,-2.371134,-0.519315,-3.149077,9.462569,-5.009331,-5.207031,-1.166884,-5.722337,7.967461,-8.105094,9.200166,2.940394]],[[1.779046,-7.980970,-6.568300,-4.788214,2.487792,0.213706,-7.976612,-5.938988,7.243116,-3.644641,1.861353,7.793605,2.892061,5.527967,1.848350],[-2.693842,-3.302075,8.463509,-7.954493,0.219054,-1.294797,-5.680871,1.249976,1.280074,3.955178,-2.611569,-4.443958,-3.018799,-3.496578,-6.250752],[-9.347482,-5.531740,-4.615990,6.728885,3.402337,-1.037075,8.843287,-9.658638,8.464344,6.303882,0.309544,-3.492293,5.558025,-6.327557,-5.571415],[2.436282,1.876024,4.152931,7.664699,7.899081,5.915137,-7.905790,-9.960400,9.042630,-4.323750,-6.939299,-7.262283,8.688600,6.369670,2.455328],[7.149299,-5.619026,-1.007784,-9.242671,-5.221198,-7.496104,5.191762,-2.533413,-5.618104,-5.960393,-1.641405,-3.191111,3.329835,-7.020258,8.863875],[-6.486813,9.412593,-9.425899,-7.526905,9.823876,-2.400412,-9.421762,7.194153,6.325278,-4.637254,-0.616893,-8.850538,2.788771,2.456229,9.415060],[-3.018831,1.912657,-2.522459,7.483090,-1.033336,-7.333683,3.341500,-8.255741,4.450894,-3.298034,9.129180,0.194883,2.848621,4.270411,-2.243388],[-2.934621,-0.975208,-9.863781,5.487894,1.779116,8.031972,-5.032926,-4.772798,0.155721,-9.238127,1.496221,-6.674438,5.902106,-0.604845,-5.759528],[5.132196,5.686249,-7.126006,5.568725,5.251620,4.052605,-9.009796,7.137284,2.955585,-2.908031,-8.978365,6.568173,-3.897082,1.172748,-5.301085],[-4.932241,-4.121665,2.357299,6.174505,-5.632933,-6.728273,8.535114,0.684422,8.159102,7.002098,-2.059687,-6.898466,2.515061,-0.548214,3.374853],[-5.000437,7.821185,4.409329,-5.478204,1.688208,3.347212,-2.338155,-6.683864,-5.239688,-4.731899,0.029369,4.622821,8.389626,6.964468,9.790221]],[[-7.316430,-3.578881,-4.681179,-0.914342,-4.379585,3.062288,8.436623,4.936568,5.669782,-0.389122,7.474204,-4.459239,2.971735,4.476922,-4.336476],[3.398434,5.564863,-1.967283,2.376763,-4.350465,-0.056415,5.097054,0.147880,6.453848,-7.012705,1.591392,9.362970,9.989752,7.403997,8.229563],[5.132219,-7.528687,-9.982213,8.946373,2.326849,-5.806490,3.486872,-4.986306,-1.038893,-4.967444,1.697670,-3.145983,0.067709,5.589396,2.142835],[-7.315787,9.726555,3.300959,5.343444,9.412295,-7.469794,-2.899600,3.509462,-8.715868,-7.973833,0.020972,-2.968858,4.291931,4.167313,-5.394525],[6.278537,8.056791,7.072625,4.323729,4.645615,-4.227068,-5.701845,-5.335693,5.143890,1.907462,4.027594,7.537721,-8.055535,7.456338,5.350555],[-4.489251,5.771125,6.997671,-8.233535,0.923243,9.206311,7.837995,0.607601,1.324317,8.066571,-6.604729,1.987701,-8.779711,-5.713499,1.182724],[-6.879259,1.533040,-2.020317,-9.546549,0.117031,-8.437517,0.085999,-1.509490,2.239033,1.096049,-0.848690,9.710979,4.351652,7.462024,-5.320329],[7.265151,7.523883,-0.015923,4.227731,-9.009446,-8.771674,5.147905,0.203029,-1.010394,-4.523250,5.468733,-9.934776,-9.551513,-9.492926,0.092499],[6.120336,6.609712,1.000419,-5.410856,8.889593,1.158409,4.263302,7.810577,-2.703001,-8.462664,-6.836823,6.221187,-6.127871,-3.198044,-7.967698],[8.626360,1.054762,-1.567898,-8.054956,0.686920,2.643801,-3.614362,-7.751870,5.716797,9.393957,4.324753,6.985626,-5.740084,-4.740706,0.722330],[1.523798,-4.697330,1.948920,8.939351,9.498344,3.081518,-6.508526,-4.857867,-6.098403,8.934489,9.092296,0.297954,-2.929481,-8.173431,-3.278317]],[[3.988568,6.292321,-3.738374,-0.188621,-3.397167,9.902482,-0.434667,6.904478,-1.273912,7.577240,-6.362857,-3.468526,9.655343,6.182683,4.284674],[7.351520,1.393831,8.308325,-2.910136,-1.309349,9.368289,-3.780470,5.837175,-1.404636,1.222698,3.258787,-9.768683,1.429829,-4.416912,-8.931938],[4.671381,-2.172062,-8.230281,-7.325759,0.167816,2.110547,-2.366424,1.103051,-1.589061,3.161826,8.030025,4.944544,-4.140845,0.155144,9.893911],[9.710385,-1.418045,-4.676913,5.888734,6.329854,4.368988,1.351926,-8.962061,6.883066,1.238225,3.545058,9.868771,-5.216551,6.716042,3.984563],[4.069750,9.628589,-0.187079,-0.138916,4.209629,5.527768,2.666766,-2.822794,9.181269,-7.969875,8.745631,1.761006,-5.037208,-0.312224,6.125152],[-4.313540,-5.944353,-7.079136,6.214685,-9.555384,-6.610598,1.861958,8.660088,-5.609364,9.719079,8.107737,-3.918562,-5.459483,-0.778678,-8.564461],[-0.666844,0.438633,4.765029,0.819593,-7.304959,3.871602,8.737785,-1.662530,-0.155084,3.094445,5.221287,-6.447456,7.076120,-7.208041,-4.237239],[-6.497010,-1.283334,4.467386,1.338333,-7.626119,5.928009,1.821384,1.343547,3.583482,-8.544542,4.261120,9.646604,8.282062,-7.070370,-8.690032],[-3.546624,0.255175,-4.975629,-8.830247,-6.251080,-9.216406,-0.995549,-6.661519,8.145023,-8.743175,9.270892,-4.608216,7.390793,2.128875,3.478108],[-5.671518,-2.803369,-6.275015,1.436557,9.994650,-6.516115,0.089249,7.550521,-5.424312,5.736026,-3.573536,-3.521699,3.857126,-9.837718,-7.872352],[-6.376489,2.535456,-8.996929,-8.283518,0.298425,6.389561,0.974289,-9.074339,9.059814,4.504370,1.823838,3.513985,-1.954188,-1.638133,0.205218]],[[2.579280,2.699514,7.761992,-7.926292,0.769393,9.374481,2.493273,2.097406,7.588183,-9.303148,5.024326,-8.225520,-8.734014,2.936025,0.317970],[3.754998,9.996313,7.552930,-4.936018,-6.794274,3.093334,8.593747,-1.197388,4.118853,3.318840,-7.643327,7.228158,4.677620,-7.514525,-9.031616],[3.346535,-4.177050,7.644164,3.891983,6.445590,0.186529,7.909377,-2.248716,-7.497081,4.820428,8.373127,-6.272027,-8.698099,-0.906312,8.584170],[-6.305469,-9.817801,0.639606,2.653129,-3.952747,-6.586987,7.851068,-6.115016,7.512775,9.222033,-8.283647,-3.521057,-9.074606,-9.728980,4.365885],[7.190910,-0.401025,-9.965148,6.233711,7.532242,3.644311,-9.788555,9.079218,-3.440100,5.241937,-5.137044,-3.653035,-1.986696,3.056764,-6.579327],[-0.568652,2.807770,0.032239,-7.822123,7.712751,-8.057194,0.344480,8.840501,0.867948,9.278808,-8.012126,-2.595345,1.142063,4.955899,5.952078],[9.649202,5.194649,7.414513,8.914895,-0.920514,7.466554,2.563973,7.674764,4.880408,-8.685959,3.680416,-6.371830,8.422312,-4.220432,8.664696],[-1.216571,-1.072177,2.466946,8.044774,6.961316,5.247719,-2.555650,-4.633023,6.331182,9.055014,-0.150460,-7.374616,-5.223722,-9.601311,-2.472387],[2.227194,6.906566,8.517585,9.753936,6.443855,-4.545023,7.329652,5.786883,-5.206132,7.474007,-6.569235,-0.950151,1.003105,-6.883905,5.679065],[8.427761,-5.309155,-9.407636,8.731152,-3.791542,6.697202,4.193780,3.067338,-4.311944,7.245836,7.845835,3.780229,2.239629,9.663821,9.607239],[-6.328854,4.948738,4.425279,-6.829712,8.902965,7.360886,0.371542,6.008229,3.685022,-9.215560,4.733393,-6.362565,6.717802,5.618621,2.087434]],[[-6.592493,6.516342,-5.875383,0.503850,0.216006,2.399172,2.574435,4.864634,-2.979182,-8.035142,-1.808668,-8.634614,7.406947,-8.895351,-4.495254],[2.521009,9.222619,-4.367839,9.036372,7.955224,-9.270182,6.096338,4.408179,-3.711898,1.108866,8.932743,3.050948,-4.993843,4.967140,5.178153],[-6.259985,-4.259435,-8.130319,-9.643611,1.667507,-7.505228,-3.686795,2.182620,2.095740,2.892229,0.665142,-6.584728,6.802107,4.135436,8.791946],[-4.853303,2.105787,7.454539,-9.847807,4.602338,9.207613,6.636649,3.866465,-7.910163,3.653978,3.954850,-2.697545,4.372408,-3.051731,-8.440412],[5.885631,3.949710,-2.773671,-6.730590,-4.414714,-2.784867,-4.512753,-0.563892,-1.366070,-6.139024,-2.700661,-6.080785,0.368848,-9.427306,-6.367028],[8.616667,-1.931418,-8.866352,3.617458,2.434027,-9.637845,-5.894482,1.470631,-1.494668,7.393591,7.454438,-9.263724,-0.490332,7.981595,7.995268],[5.608259,-5.131551,-2.347522,-0.807933,7.077794,0.899514,8.383065,-1.298981,-5.730401,8.385805,9.255677,-6.291465,-7.721435,5.671900,5.502060],[-4.484911,7.272392,-8.094457,9.769304,-9.725942,-1.016705,7.366414,8.670742,6.222547,-4.478737,4.972011,4.002915,-5.752492,-3.315642,-9.595899],[-3.016043,-2.223929,4.463902,7.469370,-9.744355,6.396533,-1.336147,-8.591373,2.541130,6.607098,-1.124041,4.859510,-5.127718,-1.111025,-5.576374],[2.383884,6.140117,-7.350498,-2.404746,8.882783,2.671614,-9.040170,8.474876,6.145950,-2.979457,5.306115,8.269582,-6.922867,-4.908747,-7.398892],[4.808334,3.524431,-2.028415,1.810831,-0.054192,0.098200,-3.437271,1.171346,-6.571301,-1.386935,1.144307,-0.966515,-5.685537,9.943024,1.050683]],[[3.989093,1.494273,8.185276,5.421424,-5.844750,4.042878,6.050701,8.442360,-1.832042,-3.835323,-6.743111,-5.361429,-1.397924,-8.698919,8.197329],[-0.850552,-9.581934,8.655751,8.141546,2.793431,-4.679079,2.283466,-0.551541,-1.161368,-1.665218,0.093223,8.351436,8.554186,-1.587282,3.174521],[6.248948,1.192145,1.236693,8.865044,6.957497,-1.725863,-3.142043,8.633077,9.169921,9.391291,-9.380001,-7.192554,-9.777895,-5.981595,9.136114],[-6.822482,9.996026,1.357600,-9.100238,2.071407,2.753351,-4.411679,3.471246,-1.572621,5.913203,-8.067787,-4.952141,2.704663,9.937663,7.825053],[7.988898,3.593064,4.767392,4.836095,-1.713506,7.819927,6.181119,0.704998,-3.658697,5.917720,2.748172,2.750100,-0.608616,-4.676388,-2.755819],[3.861529,0.084570,-5.258553,0.950043,-0.975335,-7.681518,5.021170,4.538135,-4.312977,-8.367738,-5.508158,-3.980952,4.849420,-7.257402,-8.422858],[0.718033,8.667776,-7.985439,-5.129365,7.037494,1.804539,-2.300280,7.169722,5.555045,7.170767,6.097667,4.897303,-5.720059,1.098245,-9.094660],[8.542863,2.975430,-9.725547,2.739479,0.033682,-9.007263,-1.262308,4.084432,-5.465334,-1.764349,-6.043441,3.075931,8.460572,-0.812591,1.941982],[-8.980850,-7.097364,5.314559,0.015197,4.408288,2.961957,-5.658972,9.850361,-0.250086,-8.074180,3.260898,-4.776020,1.190221,-9.506096,-6.638707],[-6.189344,9.537097,-8.223429,-6.631315,6.096952,-1.645441,3.620728,-6.541255,-1.378329,-9.404558,7.384469,0.046889,4.588351,2.431875,-4.179130],[2.827567,-5.269201,-4.662116,3.224880,6.659939,-6.204656,9.626259,-9.370967,-0.750271,-0.711621,9.650582,5.825968,-4.228135,7.296809,-3.877896]],[[4.044070,7.027472,-4.325455,4.882129,-4.696762,-8.305760,-3.795534,-7.636245,-8.075336,-6.648379,9.627789,-5.391953,-7.064064,1.342997,4.059083],[-0.153337,8.997921,-2.365150,9.245357,1.558879,-5.475074,-4.895849,-2.343664,7.408201,-0.083534,4.766972,-9.792933,-9.542044,-3.955248,-3.663659],[8.006214,4.005019,-5.867972,5.803758,4.860340,1.492159,-0.683171,-7.893830,-0.299029,4.955925,8.840179,0.053371,6.661897,4.714137,8.231893],[5.631072,-5.365788,-2.002837,-5.607800,-7.610332,-7.307181,-5.131495,0.948382,6.713386,-4.803323,-4.716506,-3.049257,5.287127,5.454641,3.214239],[2.979027,-7.587181,6.879375,-8.624560,-7.345437,3.591016,2.005100,8.267437,2.033133,-4.797855,-8.139180,6.795746,-3.644354,-5.573703,8.077483],[8.743113,-3.443139,-8.230757,-5.102326,2.478227,4.753690,8.656181,-9.318584,-1.980428,-7.135397,-9.267555,7.022583,4.055333,-3.036579,-5.086552],[8.483284,-9.052859,6.059316,-9.918215,-6.900654,-3.739844,-1.739317,-4.540382,-5.023144,-7.201394,1.119582,2.635453,7.885372,2.317766,-5.133021],[6.351687,4.900983,2.061505,9.041554,-3.522955,-3.376616,6.094461,-3.802485,6.726523,-8.973510,9.527985,-4.137021,5.550419,3.547619,-2.819948],[-0.695697,-8.054003,4.511987,-8.305674,4.390791,-6.183859,1.986291,-2.010712,9.622303,-0.483573,-7.533569,-2.790249,3.153207,-4.079355,-1.272309],[-6.364932,-3.251696,-6.966031,3.252300,-6.327559,9.544780,-7.620544,5.815364,-4.850670,-7.642829,-0.040833,1.229573,-4.746498,-5.691907,4.550649],[9.743703,3.400657,-8.428106,0.301735,-5.428651,-9.605657,8.522733,-4.404128,-0.423827,3.597581,-4.902591,7.928446,-4.653489,-6.830132,-4.155649]]], dtype = "float64")#candidate|3208|(9, 11, 15)|const|float64
var_3209 = relay.var("var_3209", dtype = "float64", shape = (9, 11, 15))#candidate|3209|(9, 11, 15)|var|float64
bop_3210 = relay.power(const_3208.astype('float64'), relay.reshape(var_3209.astype('float64'), relay.shape_of(const_3208))) # shape=(9, 11, 15)
output = relay.Tuple([bop_3210,])
output2 = relay.Tuple([bop_3210,])
func_3214 = relay.Function([var_3209,], output)
mod['func_3214'] = func_3214
mod = relay.transform.InferType()(mod)
var_3215 = relay.var("var_3215", dtype = "float64", shape = (9, 11, 15))#candidate|3215|(9, 11, 15)|var|float64
output = func_3214(var_3215)
func_3216 = relay.Function([var_3215], output)
mutated_mod['func_3216'] = func_3216
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3230 = relay.const([[[0.990598,-9.085595,8.516345,8.809697,-5.137634],[3.274307,-5.953718,-6.556096,-9.084811,8.829072],[-3.779809,-3.526783,-0.081113,1.510086,-7.340671],[5.718996,-3.931982,8.192564,-1.489926,-0.407872],[-3.428907,-5.927318,7.892170,-9.361470,3.409645],[-2.853446,-5.439388,8.471587,3.182699,-8.621766],[-5.758377,1.446549,2.918013,-0.040346,9.069912],[9.905874,-9.526110,-3.063080,-1.790676,-1.523617]],[[-5.212616,-5.829235,9.303323,-7.486177,-9.297645],[2.062590,-5.307000,8.657167,9.445400,5.701352],[-2.972352,-1.438645,-9.480509,7.531984,-6.808611],[-8.852225,-2.938676,2.309556,2.775793,-2.573249],[-0.525051,-3.465960,-3.711670,9.255555,0.661889],[-5.537375,1.819481,-2.004927,-2.262142,-8.036508],[4.937547,8.143801,5.678045,-4.341186,-0.865218],[7.884897,-5.194006,1.684539,3.281864,-0.748802]],[[7.774397,6.978836,-4.923130,-4.183370,9.003810],[6.992900,-7.413631,-0.457034,4.850381,-4.401743],[3.000739,-8.406073,2.311137,-0.253700,-1.937028],[5.160129,6.649231,-3.501681,-4.927249,-8.454736],[-8.338225,9.302904,9.790523,-8.577162,-1.752026],[-1.173135,-6.145489,1.256851,3.455407,9.778519],[-4.525837,3.726942,5.476982,3.889892,0.071936],[5.416010,5.163243,-0.244780,-9.939949,7.908272]],[[8.814990,-7.054663,4.662050,3.868581,1.620862],[-2.281761,8.220822,9.726981,-7.175752,-4.074628],[3.604143,4.108925,-2.991863,2.393107,-6.554437],[8.888736,-9.126189,-6.077823,8.018899,-5.812657],[-6.359193,2.772340,0.183646,-3.815663,2.882368],[1.688139,-8.308737,-1.064989,-9.428216,0.169106],[-2.393612,-6.100614,-9.373899,-1.975254,-9.595899],[-7.080229,-1.255185,-4.352291,-1.670487,7.554536]],[[7.272598,-1.886982,1.104472,9.983937,-4.984363],[-6.774719,9.285968,-3.929739,1.766287,-3.611583],[8.634219,-1.130831,-0.453910,3.291405,4.307592],[-7.044478,1.568213,-8.275300,4.323735,-1.216613],[-7.767488,4.498215,3.463419,7.920350,-3.843814],[-5.112709,-1.724152,5.947176,7.105454,-1.195673],[4.778247,-5.682103,3.166688,2.733177,-3.892508],[7.751423,7.548028,-8.280051,-6.708751,9.319343]],[[3.983225,-0.964817,7.057000,-3.099015,8.327183],[7.273411,-6.481443,9.380791,5.266978,-6.300913],[2.860661,-8.233048,-5.506356,9.386877,6.659387],[-3.082031,4.733765,-1.269539,-7.596494,3.888273],[4.835949,7.836302,-8.679342,-0.142555,6.877721],[0.044880,-9.588872,2.867548,9.243994,7.284634],[-5.307982,6.950825,-2.523989,-4.570930,1.787111],[-9.638672,-0.964272,-0.677878,9.370480,-4.461141]],[[2.711963,1.973263,-3.545581,7.097478,3.415138],[-4.074323,-5.828272,0.223057,6.936201,3.631829],[-8.729712,-3.640915,3.799607,6.828663,9.022494],[-5.310004,-5.855023,-3.093005,-4.388697,-8.167557],[-3.974113,3.446213,-2.052312,3.511118,-9.626725],[-3.276166,1.321706,-9.493874,9.524488,4.245619],[8.472323,-4.496387,5.443815,-7.988431,-3.351837],[6.592133,5.541907,8.625421,-1.905551,-9.548629]],[[5.212807,6.440234,8.302428,-6.816612,5.943326],[0.130911,9.991624,-5.110378,-3.463430,-4.032891],[8.905739,4.647281,0.383512,5.052088,7.063537],[-7.033967,-4.520108,2.474405,2.756556,6.291386],[7.477760,-6.224032,-3.070592,8.054445,7.658334],[8.475618,-4.908068,-3.511796,9.503662,6.435917],[3.077731,5.642822,0.371595,3.555735,-1.014885],[1.131050,5.443004,-1.369142,9.993692,-8.579653]],[[-4.876399,4.204422,-1.176189,-9.556818,6.174472],[-9.250857,6.605910,4.400209,9.190067,-2.044209],[0.654257,8.726473,9.439266,-8.380161,-4.074877],[7.129141,-8.089005,8.424765,-8.614183,-7.413110],[0.435676,-1.824829,-0.809273,9.638059,-2.602980],[-0.338169,8.521552,-7.229755,7.984269,2.862225],[8.392676,-8.525258,-2.478876,-6.198647,3.340357],[-1.769771,-3.139622,-4.206829,-4.101598,-3.398859]],[[3.292011,-8.878453,-1.413635,9.386577,1.983112],[7.472677,1.995981,-3.054935,1.022994,7.609339],[2.235471,5.846119,-6.602638,8.577787,2.203381],[-0.143304,-7.917921,-6.106406,2.047814,-4.014348],[-4.393986,-7.485885,-5.321029,5.351545,4.582307],[-6.879104,0.867996,-1.114941,2.723127,-5.366554],[3.819107,0.717547,-8.515214,5.168244,5.164040],[-5.164270,0.703044,-3.078566,-4.430818,-5.589577]],[[-3.738338,-2.270012,-6.066220,8.962959,-0.035063],[6.390080,-4.649791,8.444503,-7.391357,4.615172],[8.237879,7.700615,-5.932483,-3.276084,-5.009949],[-0.918273,6.981004,-0.457193,-7.394146,-7.998700],[8.277491,-5.607741,-5.135450,-1.052306,-0.691766],[5.473497,-6.542400,5.434958,-0.555428,3.128136],[-1.736588,8.210662,-8.689494,8.599330,5.475879],[-5.695516,1.495898,3.175715,-6.781143,-0.085431]],[[9.551503,-6.044179,8.862983,-8.545882,4.353370],[-6.190550,6.706416,-6.790262,7.236807,-4.350979],[2.418708,3.166117,-0.168466,-8.518358,4.554628],[8.266953,-3.707949,-6.925223,0.518087,8.847577],[-1.344414,-8.191244,4.934141,7.966060,6.473717],[-4.609901,-3.340458,6.410890,-6.633291,-3.800886],[9.446898,-0.993545,7.043599,9.796063,8.809164],[-2.775716,-4.012682,7.543679,1.501731,-6.569971]],[[3.822462,0.934137,-1.563664,-9.256883,-7.500068],[-7.612934,-4.672061,-8.596638,8.587158,7.543461],[-2.438589,-3.703984,-8.968579,3.428683,4.367873],[-2.646677,-0.464991,-5.319373,6.663092,9.312205],[1.119202,2.010783,-9.382827,-9.939463,7.409494],[-9.030177,9.285822,-0.970576,-4.605427,1.726991],[6.361758,-3.131034,6.270795,-5.018672,1.077850],[-6.267279,-0.033053,8.387973,7.191897,-5.632825]]], dtype = "float64")#candidate|3230|(13, 8, 5)|const|float64
const_3231 = relay.const([[[7.592874,-3.998678,-1.357955,1.183963,-2.086289],[-6.982574,-2.320493,4.216744,-6.991219,-0.750715],[-8.315432,-9.102215,6.896964,3.951627,-4.943856],[-9.022286,5.204241,8.053553,5.725106,3.741989],[7.727003,9.988372,6.562252,-1.056921,5.950543],[-9.468371,1.634189,2.599308,6.156596,8.304138],[4.557122,2.853412,-5.683230,6.480025,2.936641],[7.155405,-9.986946,-3.695152,9.454969,4.614270]],[[5.999692,-8.626203,-2.493082,2.800754,-3.911038],[9.046557,-1.811046,-2.364200,0.077203,-5.590703],[-4.382542,1.335378,-7.869875,-4.095315,-1.392268],[8.828573,-3.031098,5.610540,4.748726,-1.774976],[5.996151,-5.238006,-1.610289,-9.499472,-5.608495],[-6.472513,-4.633556,7.742056,4.932287,-3.861554],[7.958316,6.604634,-7.289875,-0.640620,9.306371],[7.728602,-1.377704,-3.407545,8.356135,-7.219683]],[[6.982233,-2.921394,-7.107752,8.073223,-6.132263],[5.962230,4.409112,4.913705,4.641287,9.516384],[-6.678824,6.433213,-5.174609,4.670102,-4.836947],[6.030779,-2.651605,8.224031,8.881916,-2.474742],[1.920977,8.096673,-0.044678,-8.842365,-2.428165],[-9.602025,-4.034728,4.027562,2.186596,-7.411385],[-1.041410,2.727035,-6.771200,8.986068,4.256923],[1.394930,-3.290667,9.428661,3.177540,-1.995487]],[[-1.873273,-7.527001,7.927093,0.280796,-1.880138],[-9.586486,-5.886720,4.396913,0.909735,-5.949122],[-6.466886,4.625557,7.808166,4.201027,-1.191144],[-7.341931,-6.222146,4.175926,7.811536,-5.210095],[5.208458,-0.735436,-6.676394,-5.025587,8.106297],[8.233230,-0.502488,-3.061109,0.767038,-9.035525],[6.429511,-2.616296,3.855413,4.571012,5.865456],[-6.024807,9.842995,-2.622017,-6.255693,3.626798]],[[6.151637,4.414977,4.915730,5.617237,7.437961],[-5.310737,6.177210,-4.027039,-0.355500,0.033788],[4.799754,-6.398370,-9.831786,-1.823006,7.749909],[-4.740308,-6.658805,-5.211289,2.861967,9.521074],[8.954340,-9.484872,-8.853339,7.636888,-6.234847],[-4.318576,-0.908476,-6.355461,9.115092,3.672507],[-4.878369,-2.225750,2.371975,-7.537552,-3.144574],[3.512877,9.209308,-9.484048,-0.260528,1.707383]],[[-3.978881,-9.109496,-8.520086,-5.681518,-0.861682],[8.594360,5.605755,8.919883,-9.976434,-0.492602],[0.482844,0.717235,6.541367,1.075291,0.256584],[-6.302518,-3.877615,3.851925,-3.884727,8.138455],[8.396217,5.505576,-9.551593,-5.616670,3.213006],[0.232783,-5.206621,9.516523,2.751902,-6.008847],[4.387576,-0.923961,0.571353,1.277414,4.778902],[-1.350517,7.878797,-2.233022,9.086466,-4.049989]],[[4.204301,3.373220,-4.827191,6.758423,1.728115],[8.404948,-7.356407,0.367737,4.506490,1.217771],[5.728053,5.342441,-0.345615,-2.039451,-7.084732],[-3.961821,-5.481381,-1.224684,-0.121008,-4.214009],[1.213095,4.043448,-1.024120,8.987142,7.776967],[-7.274720,5.601325,2.369219,4.309795,0.701754],[-4.070666,3.032325,0.672420,-0.273531,0.897901],[-3.192792,-1.965566,0.994398,-3.049027,-7.270431]],[[9.978545,-9.779022,-1.190518,-1.236572,9.697873],[-5.188391,0.884984,-3.940991,7.329818,8.850585],[-4.277437,1.404751,9.815842,0.065591,6.607124],[4.131125,-4.247178,7.615598,6.429492,1.246054],[0.505536,-7.692717,2.462776,-3.039557,9.191746],[-2.089404,0.577851,-6.869473,-0.918566,-2.047390],[4.446785,-5.646789,2.897305,8.542520,-0.609100],[7.655530,-7.790709,-3.583646,-2.613936,-8.638760]],[[-5.652530,0.827696,-8.111221,-4.672434,4.244252],[-0.328713,-7.330100,0.725264,2.518876,-6.848550],[5.099903,8.309973,-9.315148,2.824912,-2.591790],[-0.940161,-4.431753,-1.110155,-2.747172,6.653483],[5.443864,-9.426967,0.328215,3.551219,-7.182481],[-8.940308,4.125396,1.784617,2.834547,6.611184],[-3.884986,6.120271,3.666479,2.877475,-8.952075],[-5.148236,2.099589,-8.254152,-0.573512,1.091066]],[[8.582388,-4.748239,5.379782,-0.918393,-8.721330],[7.561183,-7.508752,-2.992331,-6.982765,7.056766],[-9.271780,4.883725,-2.983990,-1.284633,7.000892],[-0.743421,6.124125,-2.580133,-9.963617,-9.033642],[-6.836393,-9.051343,-6.736066,-3.161932,-5.378823],[4.897664,2.340963,-3.733195,-0.272219,-1.867922],[-2.780541,8.821381,9.576884,9.359457,-9.731064],[6.148615,3.878602,4.939194,-0.178739,-6.289465]],[[4.995137,3.296124,-7.694648,1.213746,8.365062],[0.065683,-9.892358,0.038087,-8.479973,6.616129],[-3.463151,0.338266,-5.308418,5.063943,-6.733735],[-6.927869,-3.842373,1.951187,4.351020,3.670848],[-6.785781,3.599900,5.968014,1.447323,6.251347],[4.183505,6.648578,1.291437,5.959731,-1.455315],[-2.652791,-9.605653,-4.900825,-4.848670,-2.030447],[-6.676272,-5.838198,0.184936,4.808911,8.936007]],[[3.487227,-2.605794,9.608668,0.230397,7.842400],[-3.952585,-6.896864,-2.238241,-2.556588,-0.264284],[-0.786034,-8.953216,-2.542136,9.636642,-1.869060],[-4.311423,7.166649,-2.350028,-3.298893,0.069300],[8.865035,-2.681869,-8.623974,-7.508295,1.507466],[0.460731,-2.177822,-7.038548,2.091852,-7.870065],[-2.799055,-7.627298,9.660932,-9.541913,-6.591209],[9.931065,5.263294,8.068224,-5.508830,5.838780]],[[-3.561797,-1.435329,-1.023264,-3.024751,-8.441775],[3.296631,7.801009,-3.682188,-2.838033,4.294996],[-4.655409,-1.887699,-0.662826,-7.260105,4.430005],[-3.775344,-0.777279,-6.924054,1.561758,4.783222],[9.578840,-6.006203,-7.796447,-3.923900,2.176974],[3.341258,-7.506595,9.834302,9.708866,-6.855080],[9.879657,-4.438053,5.492371,-6.938636,1.125856],[-4.279540,-0.431151,-8.483508,8.076136,1.542061]]], dtype = "float64")#candidate|3231|(13, 8, 5)|const|float64
bop_3232 = relay.divide(const_3230.astype('float64'), relay.reshape(const_3231.astype('float64'), relay.shape_of(const_3230))) # shape=(13, 8, 5)
output = relay.Tuple([bop_3232,])
output2 = relay.Tuple([bop_3232,])
func_3246 = relay.Function([], output)
mod['func_3246'] = func_3246
mod = relay.transform.InferType()(mod)
output = func_3246()
func_3247 = relay.Function([], output)
mutated_mod['func_3247'] = func_3247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3246_call = mod.get_global_var('func_3246')
func_3247_call = mutated_mod.get_global_var('func_3247')
call_3261 = relay.TupleGetItem(func_3246_call(), 0)
call_3262 = relay.TupleGetItem(func_3247_call(), 0)
func_2087_call = mod.get_global_var('func_2087')
func_2096_call = mutated_mod.get_global_var('func_2096')
const_3288 = relay.const([-2.818554,-0.714254,8.360979,-1.747480,-1.118970,-5.088067,-7.870815,-9.357709], dtype = "float32")#candidate|3288|(8,)|const|float32
var_3289 = relay.var("var_3289", dtype = "float64", shape = (1, 252))#candidate|3289|(1, 252)|var|float64
var_3290 = relay.var("var_3290", dtype = "float32", shape = (320,))#candidate|3290|(320,)|var|float32
var_3291 = relay.var("var_3291", dtype = "bool", shape = (784,))#candidate|3291|(784,)|var|bool
var_3292 = relay.var("var_3292", dtype = "uint64", shape = (150,))#candidate|3292|(150,)|var|uint64
var_3293 = relay.var("var_3293", dtype = "float32", shape = (330,))#candidate|3293|(330,)|var|float32
const_3294 = relay.const([-7.077859,6.435122,8.244250,-9.676782,5.085172,-4.623297,-9.637015,4.653537,-0.245925,-4.427581,5.183913,-8.142305,5.553324,-5.004905,1.283031,-7.133186,4.274481,-7.767824,4.155087,6.458601,-7.129968,-6.628982,2.631725,9.053245,-2.973997,-9.156730,6.339520,-6.355336,6.967129,5.743404,-7.646191,-8.120112,-4.030219,-0.529098,8.405428,-9.860442,3.134117,-0.031133,4.482533,-8.445758,2.835002,2.461864,1.283841,7.607134,-7.655268,-3.510871,-5.857628,8.743738,3.325710,6.289135,6.609815,-6.078784,-9.873108,5.903034,7.949080,-6.999407,1.457610,2.992606,1.955002,7.797840,-0.195148,-0.324004,-4.111074,4.644229,4.854734,-0.338333,-8.821067,-8.393493,9.028869,-9.736315,4.777746,-0.594086,-9.830886,-9.192245,-1.763559,-8.449589,8.561358,-4.274575,-9.279372,2.887308,-8.090945,-6.057454,-5.481576,4.647464,-3.144327,-6.385610,-5.447512,-3.482322,4.959348,-5.408664,-3.802590,-1.110898,9.449846,5.829186,-6.660976,-0.506198,-6.524838,2.476699,3.288353,5.466173,1.811311,2.802498,-6.565335,-7.201604,-2.344067,0.236777,8.000617,-8.829379,-2.089289,-1.775565,-5.074275,9.814210,8.662565,-3.256272,-5.788120,4.381895,3.471641,1.785344,-0.802195,3.594962,0.149182,-2.096558,-9.875275,3.405624,-8.728808,9.275264,-0.745425,-0.750484,-3.446546,-6.248973,-5.432012,-4.491589,2.205950,8.965803,8.878716,-0.061857,3.820535,-3.280528,-7.206906,9.708250,8.579452,8.987744,2.746622,-9.142209,-6.675089,-4.400709,-5.542445,9.485538,3.050235,6.720983,6.597438,5.092299,-1.765768,9.128664,3.450743,-1.848245,3.053212,8.703355,8.710179,-7.711366,-5.056079,-6.261872,5.765515,-6.924548,-5.880676,-7.357573,-6.231027,-1.565242,6.975692,3.431075,-7.766269,1.315015,0.223423,4.376004,-9.930637,9.372831,-6.030634,2.660204,5.785776,-2.747931,-2.831891,0.078046,-3.844311,0.035379,9.408505,5.627851,-5.378078,-9.714290,2.005342,-4.083408,2.017776,-7.761203,8.262173,-6.637657,-7.810909,-9.897100,8.571289,6.116284,-0.980485,8.227032,5.954575,1.553145,0.434991,6.104127,4.305907,4.889071,7.666036,0.379356,8.351746,7.447334,-0.749272,-3.229191,-8.097869,-7.432333,3.691427,-4.138483,-8.273906,-4.855708,2.869741,-3.730994,-0.602254,-5.738908,9.277625,-9.147951,4.785396,-3.460115,-8.885694,0.732197,-8.590010,8.253538,3.976113,-7.978203,2.265695,7.357740,0.548786,-2.512774,9.477933,1.145629,-1.267377,-0.257732,-6.127641,5.459419,7.146833,9.008578,-1.946548,4.629931,-5.657480,9.766098,0.134538,2.606800,-6.378294,-5.318335,-2.179649,8.500729,8.388574,-3.486942,-6.615133,-2.928096,-9.864744,-2.194993,-9.327147,-4.888922,8.890762,7.186902,-8.106221,0.823500,-5.928964,7.750699,-4.556200,1.371082,-8.773948,3.499394,9.475419,-0.047093,0.237451,2.309653,7.459867,-9.789458,4.066816,6.111805,-3.801370,6.918041,-4.863467,4.409826,6.626716,-8.344714,-2.070291,-1.021227,-4.494413,3.833662,7.056493,5.781842,-0.462606,-5.399356,5.085061,-3.232326,-6.061521,-9.568761,-5.485928,6.462331,-6.940140,1.071108,0.540225,2.243957,-3.625952,9.414978,1.127186,-7.800227,5.373235,6.804973,-5.424198,-3.742180,8.866961,8.911842,4.415859,7.173641,4.325319,-0.409022,7.368652,-3.873684,6.273905,6.645770,-2.543150,-0.273444,-3.140637,4.468055,3.829161,-3.935481,-4.045734,-1.197254,-1.682948,-7.248241,-2.821119,6.425587,-6.952665,-4.588902,3.130403,-9.424103,4.552586,0.626225,-9.944625,2.659153,6.132320,4.792719,9.540904,0.979080,9.009707,5.500022,-0.583725,1.177428,-2.061091,-6.916894,-7.092264,-0.343623,-2.058860,6.139615,-0.077669,-4.713431,-5.506016,2.117438,-5.168985,-1.683344,-3.476234,0.601153,-5.590258,9.976728,-5.766756,-3.989297,-0.517813,4.591353,6.116897,-7.555871,4.595147,4.070760,-0.273046,7.609288,8.449303,-6.283107,-8.698310,-1.725354,7.113890,5.399973,-1.247803,-0.909090,-3.801045,7.796647,-6.566118,6.687541,-0.960734,-8.941021,-6.056514,0.660758,4.450831,6.342151,-8.773813,-9.462546,-6.941350,9.018081,3.606261,7.780508,8.144477,2.058167,-9.057531,1.992489,7.270368,3.103913,-7.848117,2.275416,3.959429,1.820370,5.860193,0.992843,7.101051,-9.715188,-0.618971,9.029572,-0.792790,9.591041,1.669820,5.019889,-8.419576,-1.936084,-2.979776,-4.005607,8.464918,2.113411,6.957147,-3.780126,1.322914,-5.816222,-1.127034,-8.288412,-0.483925,-3.891334,-0.766963,6.445852,-6.749784,1.632822,2.312267,-9.698001,4.492809,2.708017,-6.134897,-1.781782,-7.827952,6.275235,-7.879037,2.413337,-8.264603,-8.230218,-0.797860,1.441626,-1.389325,0.669477,3.379980,-6.727173,9.980867,0.163579,7.536869,4.753105,-5.099256,-8.970817,-3.668951,-8.515700,6.526783,-2.986735,-3.520109,4.881744,-4.413832,-5.025345,-7.973513,5.211447,6.090274,-7.839321,-9.353731,-7.181274,-1.186564,1.518851,7.394455,4.850957,-2.216062,-9.407964,-2.497739,9.170007,-8.230788,-5.182653,-7.029593,-3.535022,-4.652889,-2.088018,-5.647787,-5.230293,-9.445446,-2.645464,0.771346,-1.415076,1.200692,-3.004252,-0.042523,-4.455242,3.672073,-4.377355,-1.798836,9.987684,6.700898,4.023837,0.524577,-1.268394,4.412061,3.985533,7.610954,3.509804,-9.951386,-5.914564,2.904641,0.396938,0.457804,2.619760,-1.976825,-9.917445,-4.080939,4.065701,1.574918,4.688684,-2.587063,5.006342,0.893378,-5.523803,-9.172656,-8.148116,-4.420215,5.475697,4.461874,4.458926,7.516631,5.760931,-0.877149,0.517820,7.696247,-3.210601,8.436852,6.483199,-4.053938,-1.801702,-6.061298,6.825709,-3.221604,-5.204977,1.626113,4.802615,7.915145,-8.450666,-2.073785,-3.366459,9.989884,3.078672,-4.234513,6.029820,0.445943,-0.542131,-3.335437,-1.123014,-2.704024,6.574353,-7.278501,-9.094073,8.324129,3.972109,4.529318,1.789543,3.868397,6.887259,6.861665,-7.296879,2.972132,-7.270567,-9.148733,-1.531772,3.585633,-4.531351,5.359623,-2.705081,-9.019627,-4.867679,4.693158,-3.350076,-7.386093,-0.208470,-7.900237,-3.445814,0.424597,4.826727,0.477932,-5.320224,7.311983,5.840948,-0.913011,-4.427735,5.167862,-2.476550,-7.882728,3.545801,-5.064268,4.996319,3.083936,-8.963540,-7.908767,-9.152684,-6.739998,7.119717,-4.048050,-1.177737,-2.050216,4.714481,0.061313,-1.808237,-7.051751,-1.371585,6.614297,7.065642,-0.098189,-2.777484,6.186415,-6.915703,8.970898,-8.635096,-9.759574,-3.700651,4.519612,2.428443,9.554784,-1.023063,7.886532,1.871258,-0.967566,6.342441,-4.428632,-7.026782,5.536903,3.519775,-8.765204,-0.188986,-0.350654,6.484884,-3.106230,-1.122266,-0.078325,4.316210,-0.401182,-8.813216,9.347677,3.002453,7.906114,7.304415,-9.772972,-5.390457,-5.631180,-2.571105,9.936379,-6.438568,-7.667806,-4.309021,-4.143512,-4.299667,-3.436867,3.026385,0.138522,8.788172,-3.355916,1.724469,-3.127633,3.155460,-1.340021,7.572885,3.639957,6.452361,4.887637,-7.638153,8.109429,-3.002676,-5.445315,4.330721,-8.815537,-7.220421,1.632513,0.165238,2.122338,9.226278,-2.082290,-9.098156,-7.266369,9.413597,0.224242,7.447614,2.181468,-7.481651,-0.056936,0.783191,-5.697320,4.919100,2.156023,7.809400,-2.260401,-6.400370,-1.613337,-5.569300,-2.842552,-0.733675,-4.102759,-6.779274,5.550419,0.029480,-9.006666,-7.685493,-5.755978,-6.648403,-2.886328,9.106880,-8.151795,-9.410307,-5.023874,-4.475971,-4.622070,-1.578407,-4.463831,-0.562836,0.894166,3.169980,-6.230699,-3.058232,-6.540547,-1.741113,3.322875,0.904735,8.255608,-3.878137,-0.868243,-9.357666,4.109122,0.232545,8.155940,2.984918,0.551894,-5.886259,-9.785544,5.870253,-3.569547,4.313181,3.231288,8.168851,-4.058079,-8.953462,-5.193468,-1.824488,6.982140,-5.763913,1.537474,8.595430,-8.883340,9.921551,-6.159670,6.351518,-6.657234,-5.273037,6.989484,1.048171,2.950875,8.581794,-8.825649,3.120638,4.036684,4.250197,2.599142,-9.622486,-8.937738,-3.473007,-1.739899,0.869925,0.304162,-7.824025,-2.856623,-6.740083,4.785136,8.789024,0.685064,8.746226,-7.447688,-5.864025,5.171251,-5.505922,-4.799237,-4.107459,-4.759362,3.239747,-4.211681,9.333774,3.121400,-6.800886,9.511388,1.958111,1.321109,0.471013,1.968725,2.079007,-6.587932,-8.526995,2.311741,4.100855,6.005698,1.897333,-4.930339,-4.502970,-1.650296,-0.990926,-0.540336,3.564021,-7.755747,-9.932387,-4.180379,-9.405331,4.741570,3.927497,-4.359863,-4.126574,0.349957,3.340970,-8.624153,-0.132377,-5.775617,-1.332693,-5.674600,-8.659171,4.321294,-0.637400,8.740729,-1.448212,4.345734,6.120062,5.367834,9.416204,5.562819,-1.313982,-4.089260,-8.273588,-0.651498,-1.113385,-8.168668,2.878941,4.480306,0.384493,9.916114,6.474339,6.976159,-0.470102,-7.254372,-3.455719,-7.792315,-6.377779,3.052793,7.355553,0.083086,-9.275683,1.695988,0.859582,6.871327,6.808908,6.828277,8.182346,3.548647,4.201247,-4.984384,6.967227,-3.913346,2.287782,-1.320012,2.094079,-8.488532,-6.079095,-6.184867,-9.675376,-5.948892,-2.443489,-9.056908,4.834315,8.352298,-1.990088,-2.388907,-2.095597,1.826465,-6.672221,-9.762408,3.437762,5.875835,-4.384115,-3.957916,6.236022,-2.359935,-6.842705,8.064307,-3.143684,-8.060122,-3.575030,-4.582608,7.044800,8.826958,-5.436086,-6.469145,-4.161975,3.890264,3.305809,-9.320692,-1.853160,-4.228849,4.586493,-4.414785,-7.307960,-1.369276,1.663929,2.563319,-7.892346,-8.829528,-8.113260,6.970288,-5.368353,-7.672128,-4.814900,-1.170273,1.350505,8.972036,9.624173,4.128543,-7.423936,-5.465940,-3.468589,-8.049365,-0.165757,2.413217,5.414787,-7.077823,0.766085,4.955054,3.532854,3.202255,-5.409404,6.151959,-6.581267,2.380478,0.636915,0.194518,4.346806,-1.949256,-7.110668,9.869022,-7.783487,-5.978705,-0.456626,8.836320,3.771503,-6.494849,5.168245,7.453893,-3.639438,-5.558813,0.921107,-5.590811,-1.494629,-4.633717,-4.977368,-1.801273,3.701720,7.155611,9.094925,1.259331,2.744243,-1.068189,-0.504505,-6.487282,2.617336,-3.897240,-1.978552,1.803220,6.720214,-3.703911,4.670088,3.329547,1.850286,-2.984358,9.862453,1.841191,-3.933543,-3.277794,-7.535324,8.066838,4.589376,-0.794119,-1.500527,-6.033212,0.756519,-0.451934,-8.885053,-4.416330,-9.945357,-4.232605,-2.107193,-9.039999,0.815255,1.056797,3.651572,5.304382,-6.712617,5.290875,-0.543132,0.857762,-8.300615,-5.659039,5.564399,-5.424811,-9.073162,7.855792,-3.813630,7.235319,-0.190299,0.045106,6.700860,1.498145,-7.317336,8.770554,-0.257796,2.011457,-2.011567,9.837573,-3.143894,1.267898,-2.312236,7.833245,-1.515219,1.057718,-8.710190,-8.781705,2.387725,4.800794,-4.834285,-7.123270,1.477306,2.394772,-8.774514,0.538781,-2.005483,5.914864,-4.964895,-9.970654,4.684027,6.978658,-6.555792,5.119622,1.099699,-0.637478,4.440071,0.690714,-2.397678,-9.491038,4.828659,0.269775,-1.021842,2.735197,3.855091,4.197657,8.257023,-5.575766,9.989628,5.526320,0.987472,-8.524067,7.070565,8.938537,1.006556,-1.157209,-9.232982], dtype = "float32")#candidate|3294|(1078,)|const|float32
call_3287 = relay.TupleGetItem(func_2087_call(relay.reshape(const_3288.astype('float32'), [1, 8]), relay.reshape(const_3288.astype('float32'), [1, 8]), relay.reshape(var_3289.astype('float64'), [252,]), relay.reshape(var_3290.astype('float32'), [320,]), relay.reshape(var_3291.astype('bool'), [784, 1]), relay.reshape(var_3292.astype('uint64'), [150,]), relay.reshape(var_3293.astype('float32'), [330,]), relay.reshape(const_3294.astype('float32'), [1078,]), ), 5)
call_3295 = relay.TupleGetItem(func_2096_call(relay.reshape(const_3288.astype('float32'), [1, 8]), relay.reshape(const_3288.astype('float32'), [1, 8]), relay.reshape(var_3289.astype('float64'), [252,]), relay.reshape(var_3290.astype('float32'), [320,]), relay.reshape(var_3291.astype('bool'), [784, 1]), relay.reshape(var_3292.astype('uint64'), [150,]), relay.reshape(var_3293.astype('float32'), [330,]), relay.reshape(const_3294.astype('float32'), [1078,]), ), 5)
func_361_call = mod.get_global_var('func_361')
func_363_call = mutated_mod.get_global_var('func_363')
var_3299 = relay.var("var_3299", dtype = "float64", shape = (5, 2))#candidate|3299|(5, 2)|var|float64
call_3298 = func_361_call(relay.reshape(var_3299.astype('float64'), [1, 10, 1]))
call_3300 = func_361_call(relay.reshape(var_3299.astype('float64'), [1, 10, 1]))
var_3335 = relay.var("var_3335", dtype = "float64", shape = (13, 8, 5))#candidate|3335|(13, 8, 5)|var|float64
bop_3336 = relay.floor_mod(call_3261.astype('float32'), relay.reshape(var_3335.astype('float32'), relay.shape_of(call_3261))) # shape=(13, 8, 5)
bop_3339 = relay.floor_mod(call_3262.astype('float32'), relay.reshape(var_3335.astype('float32'), relay.shape_of(call_3262))) # shape=(13, 8, 5)
func_1032_call = mod.get_global_var('func_1032')
func_1035_call = mutated_mod.get_global_var('func_1035')
const_3341 = relay.const([0.574865,1.041171,-2.631371,0.678930,-2.552397,9.600015,3.197142,-8.583229,0.236213,5.959777,-3.513081,6.723969,-3.091486,5.075759,2.726335,8.944278,8.521353,-6.922731,-7.024867,5.707810,9.489920,-7.935343,9.980812,2.769799,2.308434,-9.149874,-0.168273,8.897756,-5.811039,-1.943693], dtype = "float64")#candidate|3341|(30,)|const|float64
call_3340 = relay.TupleGetItem(func_1032_call(relay.reshape(const_3341.astype('float64'), [1, 3, 10])), 0)
call_3342 = relay.TupleGetItem(func_1035_call(relay.reshape(const_3341.astype('float64'), [1, 3, 10])), 0)
bop_3348 = relay.greater(const_3294.astype('bool'), call_3298.astype('bool')) # shape=(1, 10, 1078)
bop_3351 = relay.greater(const_3294.astype('bool'), call_3300.astype('bool')) # shape=(1, 10, 1078)
func_1670_call = mod.get_global_var('func_1670')
func_1673_call = mutated_mod.get_global_var('func_1673')
var_3353 = relay.var("var_3353", dtype = "float64", shape = (2002,))#candidate|3353|(2002,)|var|float64
call_3352 = relay.TupleGetItem(func_1670_call(relay.reshape(var_3353.astype('float64'), [14, 13, 11])), 5)
call_3354 = relay.TupleGetItem(func_1673_call(relay.reshape(var_3353.astype('float64'), [14, 13, 11])), 5)
output = relay.Tuple([call_3287,const_3288,var_3289,var_3290,var_3291,var_3292,var_3293,var_3299,bop_3336,call_3340,const_3341,bop_3348,call_3352,var_3353,])
output2 = relay.Tuple([call_3295,const_3288,var_3289,var_3290,var_3291,var_3292,var_3293,var_3299,bop_3339,call_3342,const_3341,bop_3351,call_3354,var_3353,])
func_3355 = relay.Function([var_3289,var_3290,var_3291,var_3292,var_3293,var_3299,var_3335,var_3353,], output)
mod['func_3355'] = func_3355
mod = relay.transform.InferType()(mod)
var_3356 = relay.var("var_3356", dtype = "float64", shape = (1, 252))#candidate|3356|(1, 252)|var|float64
var_3357 = relay.var("var_3357", dtype = "float32", shape = (320,))#candidate|3357|(320,)|var|float32
var_3358 = relay.var("var_3358", dtype = "bool", shape = (784,))#candidate|3358|(784,)|var|bool
var_3359 = relay.var("var_3359", dtype = "uint64", shape = (150,))#candidate|3359|(150,)|var|uint64
var_3360 = relay.var("var_3360", dtype = "float32", shape = (330,))#candidate|3360|(330,)|var|float32
var_3361 = relay.var("var_3361", dtype = "float64", shape = (5, 2))#candidate|3361|(5, 2)|var|float64
var_3362 = relay.var("var_3362", dtype = "float64", shape = (13, 8, 5))#candidate|3362|(13, 8, 5)|var|float64
var_3363 = relay.var("var_3363", dtype = "float64", shape = (2002,))#candidate|3363|(2002,)|var|float64
output = func_3355(var_3356,var_3357,var_3358,var_3359,var_3360,var_3361,var_3362,var_3363,)
func_3364 = relay.Function([var_3356,var_3357,var_3358,var_3359,var_3360,var_3361,var_3362,var_3363,], output)
mutated_mod['func_3364'] = func_3364
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3379 = relay.var("var_3379", dtype = "float64", shape = (16, 6, 12))#candidate|3379|(16, 6, 12)|var|float64
var_3380 = relay.var("var_3380", dtype = "float64", shape = (16, 6, 12))#candidate|3380|(16, 6, 12)|var|float64
bop_3381 = relay.floor_divide(var_3379.astype('float64'), relay.reshape(var_3380.astype('float64'), relay.shape_of(var_3379))) # shape=(16, 6, 12)
output = relay.Tuple([bop_3381,])
output2 = relay.Tuple([bop_3381,])
func_3394 = relay.Function([var_3379,var_3380,], output)
mod['func_3394'] = func_3394
mod = relay.transform.InferType()(mod)
mutated_mod['func_3394'] = func_3394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3394_call = mutated_mod.get_global_var('func_3394')
var_3396 = relay.var("var_3396", dtype = "float64", shape = (16, 6, 12))#candidate|3396|(16, 6, 12)|var|float64
var_3397 = relay.var("var_3397", dtype = "float64", shape = (16, 6, 12))#candidate|3397|(16, 6, 12)|var|float64
call_3395 = func_3394_call(var_3396,var_3397,)
output = call_3395
func_3398 = relay.Function([var_3396,var_3397,], output)
mutated_mod['func_3398'] = func_3398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3246_call = mod.get_global_var('func_3246')
func_3247_call = mutated_mod.get_global_var('func_3247')
call_3406 = relay.TupleGetItem(func_3246_call(), 0)
call_3407 = relay.TupleGetItem(func_3247_call(), 0)
func_1595_call = mod.get_global_var('func_1595')
func_1599_call = mutated_mod.get_global_var('func_1599')
const_3410 = relay.const(-3.935946, dtype = "float64")#candidate|3410|()|const|float64
const_3411 = relay.const([-1.294668,-5.521066,2.088480,8.112074,5.794353,-9.112514,1.974282,-8.764554,5.531824,5.037334,9.617874,6.510819,-3.051329,1.820200,-3.034193,0.308170,6.916566,1.756770,-1.427988,-4.354405,-1.059918,-4.984224,-8.227715,-5.721682,9.924120,-8.282766,-3.139555,7.520152,7.240252,6.804550,-1.269182,-0.819810,-3.513846,-6.673857,-5.717668,7.112865,2.228904,-2.952247,-5.060124,3.444103,-7.258996,-6.802302], dtype = "float64")#candidate|3411|(42,)|const|float64
const_3412 = relay.const([-4.890208,-9.325833,1.357901,-0.149291,3.551338,1.246505,2.004687,-0.590663,-0.634033,-3.297668,0.503138,-3.205560,4.508398,3.083640,0.675819,2.753400,1.378966,-3.073910,2.281948,-3.975764,9.299997,-5.755521,-5.036614,8.615984,-3.889121,3.190424,1.511655,2.193197,9.221760,6.684936,-3.836297,-7.357348,1.411547,-5.826082,-5.265162,8.027771,-5.293655,-1.590716,-2.530409,3.816776,-7.728133,6.496780,2.720312,-8.499349,7.979806,8.978307,5.148009,8.117935,-0.279999,8.731989,-3.108343,-8.104442,-4.063210,-4.145644,-8.627433,8.573177,-4.769817,-1.922002,-7.228748,-5.274010,-5.444742,4.264555,-6.553402,-2.990418,-0.324808,2.551480,-9.328882,-0.582413,-5.335364,-0.328939,-8.603088,3.782060,-9.196209,-6.152834,2.297666,-7.404427,-4.470944,5.057617,-4.708427,1.800170,2.090854,6.336360,-7.100450,-4.468417,-0.681197,0.756147,8.829232,-1.645796,-0.931566,-0.945029,7.329707,-5.707720,-2.691757,-4.291819,6.418214,5.481901,-5.760665,2.639727,-7.139007,-4.164838,-8.897931,-1.797060,-1.680301,5.432315,5.394266,-0.135543,-4.335241,2.757642,-6.771055,3.784901,0.275235,-6.065195,2.263292,4.587652,-9.160049,9.807437,3.459354,-4.765508,-2.604450,4.797717,7.536883,-8.890677,-8.336718,-7.674463,-9.865678,-0.244691,-3.523171,6.827070,-3.320588,-8.510734,-3.451757,1.991580,7.828428,-2.828876,6.557019,0.417237,1.714005,-0.260415,2.376540,9.488126,-7.168360,-2.047892,-0.399214,1.758093,-2.053934,4.422313,2.248950,-4.264832,-6.184339,-8.413400,-7.218965,-0.568288,9.244152,8.891458,4.308399,-9.553290,6.528476,3.376937,5.610478,-8.619080,-4.737252,-2.267336,9.233560,-8.253439,2.961047,2.567026,-9.263866,-7.375939,2.268943,4.730738,-1.703568,-0.248885,-7.285749,7.272008,-0.745021,1.499844,-7.753277,-2.105571,-8.361811,5.868048,0.111725,-7.703389,3.113438,-7.500724,-6.177696,4.530995,6.124833,-7.641286,6.916003,7.818552,-4.507414,-3.765718,5.387450,-4.846042,1.131179,7.375410,-6.844967,2.228008,-4.186999,-7.405452,2.347167,3.634410,-1.559501,-5.566881,-4.551754,7.136149,-0.282365,7.718054,8.931534,3.169883,4.303570,3.968643,-8.663799,3.729411,-0.640698,-1.881296,-5.056543,6.335002,7.199255,-3.218259,9.765882,-0.754376,-4.122155,0.114250,1.640350,-1.115068,-9.121391,9.330313,-5.738131,0.975565,-1.884825,-3.780105,-4.915247,3.448708,7.132267,3.472212,-8.808908,-9.133454,5.845023,-3.766056,2.190640,0.404213,-6.252708,-5.169754,-1.670427,-0.884312,5.393413,0.172434,-9.200964,-6.083084,-9.757445,-1.179386,9.435584,2.386599,7.122674,-3.224029,2.435274,-4.981897,-4.358708,-2.609278,-7.800147,9.775240,-4.831622,1.612577,-2.290211,-6.896452,2.706662,3.049931,-8.394483,3.234042,-0.362712,-9.848036,-4.392844,7.822807,2.357811,4.047351,-4.841784,-6.190740,1.368756,2.002936,5.150797,-8.550372,1.155917,4.773187,5.993546,0.711689,-3.791461,2.026501,-2.213660,9.793380,-3.170818,8.247189,-3.043497,2.442706,-7.051108,1.127501,2.018598,-2.565256,2.795495,-0.447197,4.057906,-3.427101,2.177337,-8.851873,-8.568297,2.445376,-9.215912,-3.549438,-8.270356,-8.684380,-5.261106,-1.574251,7.516821,-8.355444,1.301262,6.296866,-7.760286,-6.711896,2.803076,6.399661,7.531912,1.246728,-8.683941,-0.123435,2.754582,2.615457,-3.984534,8.313699,-8.855606,-1.881807,-3.847813,-2.484318,1.543070,-0.746832,3.065610,-2.324992,6.919707,-9.403746,5.653610,-0.381571,0.730406,8.162755,-7.050653,-3.369605,-1.582196,-3.114611,-7.641732,-3.183790,5.963082,5.477298,-3.984709,4.666967,9.744797,8.105912,-3.900959,1.590085,5.515973,8.009244,-2.792935,5.101056,-1.380967,2.369331,-9.458571,-6.648294,4.945456,0.697478,-0.471082,5.290012,-2.879910,-4.011692,-3.647825,1.086260,-6.354258,3.239950,-9.318581,-0.878480,-8.067558,8.268207,1.140804,6.572227,0.902257,-7.026389,0.466275,8.003405,8.769311,1.786275,-9.808996,9.542917,3.693567,7.108797,7.031915,7.534501,4.846376,3.379291,-0.821118,0.157290,6.781573,0.302432,7.805084,-7.286529,5.136317,9.721377,-2.992860,-2.108577,4.091746,2.332582,0.454313,6.256139,-1.148150,6.149528,7.397913,-8.973740,3.971572,7.787434,4.557919,6.956744,7.489479,-3.433498,3.089320,-2.099869,-1.745851,-7.816372,-2.856117,-2.159965,-6.895169,4.158824,9.527678,-1.945597,-7.995580,0.538701,9.416621,-0.790419,1.163523,0.364764,8.628047,-1.818546,9.736825,-3.089559,-5.916045,-8.608478,-7.909278,-5.661793,-6.839426,-0.050814,-0.534541,-7.264901,-4.659282,9.037744,8.143959,9.126038,-9.134693,-5.816464,-3.314641,7.847033,2.967815,8.495846,0.205678,9.817852,-1.693479,-8.802190,-1.306824,-9.945090,1.298338,-2.311840,-4.196872,-9.347997,7.251314,2.422895,4.413570,-1.032398,-8.078685,-8.726261,1.180183,3.412417,-8.131512,5.235750,-7.838287,8.117171,2.514246,-9.192769,2.460327,-1.548963,9.049329,-2.496430,-1.004172,-8.163331,-9.370304,-0.792933,-1.419283,7.213552,-4.926073,0.044787,6.180611,-4.545621,9.540040,-7.441291,4.732157,2.846452,-1.172768,7.380807,8.973211,-5.572133,4.327345,5.491080,-9.252407,-0.904154,7.532709,-7.626814,-1.570385,8.828881,8.388238,4.834336,-5.112368,-0.937834,-2.635600,2.964922,7.801067,-8.036311,0.119051,-5.352846,-2.391530,-1.511059,4.991282,-1.168103,1.399032,6.253608,-6.345575,-5.656866,1.164298,0.050704,-8.014932,7.453643,-9.807289,-1.901064,-7.703899,-6.950310,1.223806,-3.671048,9.255136,9.558208,0.927571,7.804875,0.495991,-2.342949,-9.725467,-4.227828,5.781388,-9.291158,4.803130,3.444216,-8.493023,8.560985,-1.517992,-7.451091,-9.354247,-1.142922,-3.068610,4.541077,4.046300,-0.637962,-5.354976,8.701027,9.200294,0.517267,-4.661382,-1.689225,-6.053636,9.898339,2.640326,-1.424818,0.445501,6.692767,3.099394,1.794113,7.332056,-2.047784,-4.116988,5.051882,-6.273847,5.286879,0.461964,0.804283,5.143332,-2.945019,-6.367435,-7.043593,9.616992,8.439107,0.923706,-9.570581,-6.996558,-7.004621,-4.738134,-5.331603,-3.248094,0.252545,9.706613,-1.682178,6.733350,-3.083523,8.319073,9.663190,-7.192710,8.061323,3.137675,-7.049713,5.955187,5.738754,-4.401575,-5.079310,8.216758,-5.660939,-7.461677,9.893278,2.749618,6.895951,-5.647995,-1.278683,3.327850,-3.793739,1.778958,-3.267866,9.271636,-1.289904,-4.196913,9.102550,-4.384632,-5.884000,-8.230920,2.900642,3.633632,-3.960856,2.002327,9.104026,3.485083,-4.749121,-7.032796,0.491084,-4.334203,-9.785331,-8.873861,-1.294842,0.633602,5.894929,-5.617928,-4.931794,2.143829,5.541856,2.908073,1.130169,8.290002,6.726135,-3.058928,9.939584,-2.592026,2.073938,5.170580,3.695356,8.652647,-3.855539,7.940717,7.343096,-9.467844,-1.936742,4.118117,-3.782908,6.753631,1.726065,-3.684337,-2.010702,-8.915155,2.214705,1.823797,-3.083992,3.647345,-7.698807,1.835698,7.787044,-6.537708,4.736899,6.183719,-7.637434,3.142870,-0.032234,9.910690,-0.195080,1.844267,5.430650,9.126098,3.426334,0.505534,6.522075,1.732556,-3.921168,-0.738306,-1.376507,9.245361,-2.891596,-1.771552,-2.405792,9.883135,6.787851,-6.485012,1.122880,-3.325478,-1.871883,-6.022087,8.678021,-7.594703,-0.365299,3.378440,-9.776368,1.673642,-5.921302,6.443512,9.186541,5.929751,8.734081,-1.897807,7.631759,2.081493,-2.068218,-4.021376,-8.403103,9.162160,0.455905,9.332646,0.742570,3.446107,-6.506956,-5.242341,8.268865,-0.137772,6.126220,-1.723158,5.897504,-3.226900,3.688526,2.302637,1.717086,-1.178161,-0.846689,-8.942099,0.168843,8.842844,-3.461770,8.633810,6.779900,6.184902,-9.346392,-3.183676,4.236352,6.879251,5.705764,-3.536574,4.036809,8.006186,-7.570446,1.192797,2.891123,7.993478,-6.341310,-4.239610,-1.533565,-8.064661,9.369398,0.198677,2.017965,2.184020,0.966640,0.767861,7.433552,-2.254580,-6.615723,3.422376,-9.190678,-1.929733,1.839007,4.441532,-4.426856,7.512948,-0.329613,-5.462553,5.635211,-9.309780,-6.251720,-0.636960,-6.526916,3.932262,-2.595052,7.340639,-9.843852,-6.635521,-1.359309,8.882058,1.651873,-7.489880,6.999477,-2.196986,-3.832845,-3.247458,-9.436074,-5.090968,4.746336,-1.979663,-1.061773,4.148748,1.143348,9.529427,0.627804,-8.250835,1.052784,-9.260296,8.582041,7.889226,4.697305,-8.499662,-4.124201,-4.759216,9.485808,-8.068282,-8.625193,-0.259275,8.431883,0.167435,-3.412288,1.194227,-9.273109,8.369632,-3.252231,-8.628969,-5.392613,-0.304394,2.226782,-6.031931,4.999042,1.960106,-8.650587,1.187319,7.733839,-3.937582,-6.440944,5.919379,4.205808,-3.587212,0.119809,8.876803,-5.423532,1.503131,4.275571,-5.956579,-8.806222,-1.993776,0.857428,-7.769166,8.826923,-3.184483,-8.501276,-4.669824,-0.267510,-5.062951,3.995301,5.153827,0.093741,-7.841802,3.526528,8.165211,-9.370137,-6.751515,3.594952,-9.506587,-6.467698,-1.270196,-3.631441,-4.453823,0.675436,-7.850942,9.923047,-2.000446,-9.279475,0.073386,6.219689,2.601487,-2.324696,1.059743,-9.293262,-7.755668,5.522696,-5.041177,-6.600488,-3.118534,5.899393,-1.887152,6.835668,4.613224,4.025726,4.193241,6.800154,-1.817019,-9.176137,8.647325,7.259185,9.671721,-6.903086,-1.351428,8.027022,-9.318448,-9.272255,6.537448,-2.133586,9.198555,3.794846,-2.603154,-0.361737,-5.169379,4.815236,9.114187,-0.703837,3.655160,-1.325268,9.151409,-0.493933,-5.936016,-7.563099,-1.845239,-9.300230,7.377133,-8.924601,-8.679123,-1.139456,-5.324668,-3.353885,1.323526,-0.295710,9.691297,-2.159012,-2.387016,3.650962,7.064099,-3.053228,-1.260666,-8.431277,-6.028247,8.823635,9.241766,-1.705999,4.162149,9.137586,1.675362,4.687814,2.630337,4.118370,5.893849,-6.416323,-2.694822,-8.827280,-4.269041,-6.441978,-3.439615,5.270822,-5.207165,8.367029,7.612936,-7.207017,-1.518223,3.640539,1.008786,-3.747952,7.762441,-0.932963,1.619340,-7.398490,4.023535,0.359170,8.935429,5.905909,-9.880319,1.065908,5.693546,-8.910096,-9.337315,3.396329,-2.280837,-1.725397,5.649342,7.450451,1.448007,-4.643313,9.459992,-5.243907,-1.243879,-8.907786,-7.521194,-2.342109,2.773763,-4.866322,5.972532,9.488039,0.941171,3.717558,-7.842026,6.717143,0.631947,-5.824201,1.922575,6.829601,-4.138172,-5.268705,9.871775,8.523884,6.248896,-0.208260,6.765626,-8.723257,5.726413,0.010025,3.199873,-5.814037,-9.730429,4.745694,7.328485,-3.943759,-9.998746,5.603688,3.575672,-9.162794,-1.615975,5.446740,-7.644201,-4.820926,-0.001851,-7.114053,-1.679317,-0.367689,3.890650,0.939865,-9.335147,6.263179,-8.762205,-2.717504,7.291260,4.209443,-7.347013,7.340941,-8.205024,-9.813861,-4.734493,-4.492843,7.198696,1.310332,-4.416711,-9.917714,-0.918095,8.454566,-2.127991,3.452949,-9.914974,3.762168,2.688895,-1.487502,-5.193699,-9.481676,4.129993,7.039249,5.125568,0.656028,9.593730,-2.781394,3.164298,2.955946,-6.007284,0.551761,9.528798,2.066963,-5.639543,-2.896509,-5.519735,3.992579], dtype = "float32")#candidate|3412|(1078,)|const|float32
call_3409 = relay.TupleGetItem(func_1595_call(relay.reshape(const_3410.astype('float64'), []), relay.reshape(const_3411.astype('float64'), [6, 7, 1]), relay.reshape(const_3412.astype('float32'), [1078,]), ), 3)
call_3413 = relay.TupleGetItem(func_1599_call(relay.reshape(const_3410.astype('float64'), []), relay.reshape(const_3411.astype('float64'), [6, 7, 1]), relay.reshape(const_3412.astype('float32'), [1078,]), ), 3)
uop_3421 = relay.sinh(call_3409.astype('float64')) # shape=(7, 11, 14)
uop_3423 = relay.sinh(call_3413.astype('float64')) # shape=(7, 11, 14)
output = relay.Tuple([call_3406,const_3410,const_3411,const_3412,uop_3421,])
output2 = relay.Tuple([call_3407,const_3410,const_3411,const_3412,uop_3423,])
func_3425 = relay.Function([], output)
mod['func_3425'] = func_3425
mod = relay.transform.InferType()(mod)
output = func_3425()
func_3426 = relay.Function([], output)
mutated_mod['func_3426'] = func_3426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3425_call = mod.get_global_var('func_3425')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_3438 = relay.TupleGetItem(func_3425_call(), 0)
call_3439 = relay.TupleGetItem(func_3426_call(), 0)
output = relay.Tuple([call_3438,])
output2 = relay.Tuple([call_3439,])
func_3442 = relay.Function([], output)
mod['func_3442'] = func_3442
mod = relay.transform.InferType()(mod)
mutated_mod['func_3442'] = func_3442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mutated_mod.get_global_var('func_3442')
call_3443 = func_3442_call()
output = call_3443
func_3444 = relay.Function([], output)
mutated_mod['func_3444'] = func_3444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3425_call = mod.get_global_var('func_3425')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_3524 = relay.TupleGetItem(func_3425_call(), 1)
call_3525 = relay.TupleGetItem(func_3426_call(), 1)
output = relay.Tuple([call_3524,])
output2 = relay.Tuple([call_3525,])
func_3536 = relay.Function([], output)
mod['func_3536'] = func_3536
mod = relay.transform.InferType()(mod)
output = func_3536()
func_3537 = relay.Function([], output)
mutated_mod['func_3537'] = func_3537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3536_call = mod.get_global_var('func_3536')
func_3537_call = mutated_mod.get_global_var('func_3537')
call_3560 = relay.TupleGetItem(func_3536_call(), 0)
call_3561 = relay.TupleGetItem(func_3537_call(), 0)
func_3011_call = mod.get_global_var('func_3011')
func_3017_call = mutated_mod.get_global_var('func_3017')
const_3592 = relay.const([-8,2,1,-10,-3,7,5,-4,-4,-7,-9,7,10,-6,-7,-9,-10,-10,1,1,2,-3,-3,-9,-7,5,-5,9,-10,-6,-6,5,6,-6,-5,10,-8,-4,9,7,-2,-1,-5,-6,-5,-4,-7,-8,4,9,-2,7,-3,2,6,9,-4,-7,-3,5,-5,-1,-10,5,-3,-3,5,-7,-3,-2,2,7,4,-6,4,4,-10,4,-2,-4,-5,-1,7,1,-9,-8,-4,7,-6,-4,-2,-2,3,-2,4,1,-3,10,-10,-9,-3,10,-10,7,9,8,10,-8,5,2,-6,-7,-7,8,-7,6,3,-9,-4,1,-8,7,-9,2,4,3,7,10,8,-1,4,7,5,2,-2,5,2,-7,8,6,3,4,1,4,-2,4,-6,7,7,-3,2,9,1,-8,-3,-2,6,-8,2,4,-9,-3,-9,6,-10,7,8,-10,1,-7,2,3,-7,-5,-3,6,7,-6,-10,6,-3,3,-8,10,1,-6,-9,3,7,7,-6,1,4,4,2,-3,-5,-6,-9,4,4,-3,6,8,-3,-5,-10,4,6,8,-8,-2,-9,-5,5,-8,-9,1,-8,-1,6,2,2,1,-4,5,2,-6,-6,-1,2,1,4,-7,10,7,-3,3,-5,-1,-5,-4,4,10,-2,-4,-4,-8,-6,3,4,-6,-9,2,3,-6,2,7,-9,-9,-10,7,-7,-2,-9,-2,5,10,7,9,-5,-10,4,-2,-4,3,-1,8,5,-2,-7,9,-2,-7,9,1,-10,9,-8,-4,-2,-6,1,-3,-6,-3,1,4,-9,2,-6,1,4,9,-1,-6,-3,-5,8,1,5,6,5,9,2,1,-6,5,2,-4,8,7,-4,-6,-2,-8,-10,-3,8,-9,5,10,2,-3,-1,9,-9,-1,-9,-9,3,-8,-6,7,2,4,-4,1,2,-10,3,2,-6,-6,1,5,-5,-6,3,4,-7,-5,3,-9,-9,9,10,5,6,8,9,1,6,4,9,7,4,-9,9,3,-6,-10,-4,2,-6,-7,-6,8,6,-3,8,10,-3,1,6,-10,6,1,-4,-2,-3,-5,7,-3,5,-7,8,-7,8,-1,-5,1,10,3,-4,6,4,-8,-7,2,-9,-7,8,-5,3,1,8,1,-3,-4,9,-6,-1,4,7,2,-6,-2,2,-1,5,4,5,3,-10,-4,-5,2,7,8,1,-10,8,1,9,-6,3,10,-7,-5,8,-6,4,-2,1,4,9,-10,8,-6,5,-3,-4,-8,6,8,5,-8,1,9,-2,-5,-1,-6,8,5,-6,2,1,-10,5,2,1,8,-2,5,2,-4,7,-1,4,8,6,9,-2,-6,-9,7,-8,4,-4,5,9,10,-9,-10,-8,-10,-10,4,10,-9,8,-10,2,10,5,3,-5,9,-5,7,-7,10,8,1,5,8,7,4,4,-7,-9,10,-5,-8,-7,-8,3,-2,-3,10,5,3,-8,3,-9,10,3,2,8,-2,4,-1,-7,2,8,-10,-2,4,10,-1,-8,-6,10,10,-7,-4,2,2,10,9,-5,-10,-2,4,-4,10,3,-4,6,-10,-6,-8,2,10,-1,2,8,3,-8,3,-2,-3,-10,10,1,-1,-8,7,-6,-4,6,4,-7,5,6,7,-10,4,5,6,-8,5,5,-8,9,-1,-5,8,-2,7,-2,5,-5,3,-7,-6,-9,2,2,-6,-9,5,-2,8,-7,-3,1,4,8,-6,8,1,4,1,3,-7,4,10,5,1,5,3,-1,4,4,-6,3,-2,-5,2,-10,-2,-1,2,2,-9,5,-5,-1,-8,8,-1,-5,9,-6,8,2,-2,-4,-2,-8,-3,5,1,-6,4,5,6,-8,10,8,2,7,6,10,8,-8,-3,9,-10,-5,9,-10,1,-10,2,8,9,-9,7,-2,7,5,3,-4,-9,9,-10,-2,7,-2,3,6,-5,6,4,6,8,-1,-5,5,-7,-1,3,10,7,-2,3,-2,-3,-2,-8,8,2,-6,8,1,6,-4,5,-1,-7,-3,-1,1,-5,10,-3,-7,10,2,-7,-5,4,3,3,-6,-9,5,5,-3,-10,4,-1,-6,6,-1,10,-9,-5,-8,8,-1,4,-10,-1,-1,-6,-2,-8,10,-6,-9,6,5,-2,-10,-8,9,6,-10,2,5,6,7,-8,10,-7,-4,-8,-4,1,-1,6,10,-1,10,2,3,5,-4,6,-8,-4,6,1,-2,-8,3,7,8,4,3,-5,5,-6,-2,-4,5,-5,10,3,-10,7,6,5,-1,-4,-4,-1,-9,-10,7,-5,2,3,6,7,6,-7,7,-8,10,3,1,5,-10,2,8,10,-5,-5,-9,-7,4,9,6,2,-1,2,-10,1,3,-5,-1,3,8,-9,8,-5,-1,-8,2,-5,-6,5,5,3,-1,8,-5,-8,-9,-3,-4,-3,-3,-2,-10,9,5,1,-10,-5,-5,3,-6,-7,9,-3,-6,-7,-7,5,-7,5,-6,9,3,9,9,-1,2,-1,8,5,2,5,3,9,2,-2,-4,-8,-9,8,6,2,-7,-10,-6,-9,9,8,-3,3,-4,-6,10,-5,9,-6,3,7,-10,3,2,-6,5,6,-4,-3,-6,7,3,6,7,10,-9,-10,-4,8,-6,-8,10,-10,4,3,4,-7,-1,-2,-4,-8,1,-5,2,10,8,10,-3,4,-6,9,-4,1,-9,6,7,-8,4,1,7,-4,3,-6,-2,6,-5,10,-1,-7,-3,-4,8,9,7,8,5,-10,-3,7,-7,7,-9,-1,7,-1,-4,-1,10,6,1,-1,5,-5,10,-8,-6,-8,2,-7,9,9,4,-6,1,-2,-6,-9,6,1,-7,-2,-6,9,-10,-6,4,-2,7,-5,-10,5,9,8,9,1,10,8,-4,3,3,10,-5,8,-10,4,-7,7,2,-1,-9,-6,6,7,3,3,-9,5,-7,8,5,9,-1,-10,-4,-4,5,-3,4,-10,-10,-2,6,-3,-8,2,6,-7,-8,10,10,-8,-3,-6,9,-1,1,-7,1,-1,4,-4,3,-7,-10,6,2,5,-4,-10,8,-3,-7,5,-2,-6,-10,-9,2,5,-3,-10,-6,8,-5,-3,4,-2,-6,-6,3,-7,2,5,1,4,2,1,-10,-10,-9,-7,-10,-1,-6,-7,1,-2,-1,5,-9,-8,-6,1,-7,-10,-5,-1,-8,1,1,4,5,3,5,10,10,4,-6,-9,-7,1,-7,-7,5,10,-10,-8,-10,-1,-2,8,-10,5,9,-10,6,-10,-4,-10,5,-6,6,-9,8,3,2,9,4,-9,1,-1,3,-2,8,-7,-3,7,-9,-6,-8,-5,8,4,2,-7,5,2,9,4,-5,10,5,7,-6,9,2,6,-1,-4,-6,-8,10,10,1,9,-6,-5,-8,3,3,-10,7,7,-6,1,-3,-2,6,-4,-5,-6,-4,10,-1,-10,6,-1,3,10,-8,-9,9,-4,5,-5,-3,-1,-10,-2,5,-9,-9,-3,10,-10,-4,9,-2,8,3,10,-4,2,2,-9,4,-8,-8,-5,-4,-9,6,10,1,7,-3,9,-6,3,6,8,8,5,7,-6,-5,-9,-3,8,1,9,2,1,-10,7,4,8,-1,10,2,-1,3,7,1,1,3,-5,-9,-3,1,-4,5,-9,-4,-4,-6,-5,-7,6,-10,-1,8,-7,2,-5,10,-10,-3,9,7,-8,-10,-6,5,-6,-1,-9,-3,-6,-8,2,10,3,10,-5,-7,1,-3,-6,-9,7,-9,6,5,-1,-3,-1,4,10,-7,-10,-5,-4,8,-1,4,6,4,-9,6,-2,-10,3,6,-7,-8,9,-8,6,-5,-4,4,-4,3,-9,-1,1,-3,-7,-8,4,-9,-3,-6,-2,5,9,5,-10,-5,1,-10,-1,-7,-4,3,2,8,1,-4,4,1,1,-7,6,1,-1,-8,-4,1,9,-5,-7,8,-9,-3,4,-8,-1,5,8,5,-7,-2,-9,10,-6,-10,-9,3,1,-3,-1,9,6,9,9,3,-6,-6,7,-2,-10,8,-1,7,8,-6,-1,-10,8,-2,3,5,-2,6,-9,-4,1,8,4,5,-9,2,-7,-8,-2,-3,8,4,-9,9,9,6,-9,5,4,-7,4,-3,-2,5,1,-8,-6,-9,5,4,3,-7,6,8,-3,-1,4,7,4,1,1,-4,-6,-3,-3,6,-7,-8,6,-1,1,-5,7,-5,3,8,-7,-1,7,5,-1,4,5,-8,-10,-9,2,-9,7,2,2,-4,-2,4,-10,-9,-2,-6,-7,-10,-5,1,5,8,6,2,10,8,2,3,-1,-1,-5,1,-3,-10,-10,-6,5,-6,4,8,5,-5,-8,-9,9,1,8,8,3,-10,1,9,-9,-8,3,4,1,-5,10,-7,3,-4,2,-2,10,-7,7,-8,10,-7,1,3,3,-1,1,3,-8,4,-7,-4,-10,9,-6,4,-4,-9,6,-6,-9,3,7,-3,-1,6,5,6,-10,3,-3,-1,1,1,-1,6,6,-7,3,9,-7,3,-6,7,3,3,10,4,-4,-7,-2,5,2,2,-4,-1,-9,-4,3,-10,-3,6,-6,5,5,-7,6,-6,5,-6,-10,-3,5,-3,-1,7,-7,9,3,-3,5,5,1,-2,9,9,-8,8,10,-2,-6,4], dtype = "int32")#candidate|3592|(1755,)|const|int32
const_3593 = relay.const([2.757138,9.020271,2.129683,-0.749317,-0.274465,8.062127,-2.768331,-5.508159,1.530160,5.419611,1.214961,-7.596135,7.508824,-6.484097,-1.865707,-1.879606,0.779136,9.034605,-3.446056,-1.379867,2.414565,4.910026,7.693227,2.737646,-5.192599,-4.147427,1.911597,6.693765,-1.007532,3.174271,-3.344249,1.364370,9.150195,-8.509486,-7.609779,-6.364489,-8.928412,9.233265,-0.926323,5.382543,0.187143,-4.360882,-7.793714,3.391578,4.104674,7.810093,-0.603161,4.514497,6.510633,-2.080266,-8.416064,-9.632975,-4.955408,-0.218823,-0.526274,-1.409908,-7.862644,-9.327976,-4.171681,8.667594,-8.073595,9.224143,8.697866,-1.981680,-9.298263,-9.166463,-7.814514,2.314568,-9.089362,5.186000,5.829714,-5.372662,-0.366734,-6.373584,-9.791502,5.364810,-6.185464,-8.939342,9.918595,3.368800,0.428515,0.186137,-9.238491,-6.504676,-1.105574,0.710057,5.547292,6.298816,-7.988908,-8.072066,-1.975376,9.158337,-7.183958,-0.883759,-3.645841,0.053520,-2.601272,0.869605,-4.209525,9.662641,3.611297,-6.829468,7.337831,4.806256,-8.949439,-9.690626,3.590729,3.834448,3.101175,9.697623,3.519811,0.645005,1.012085,-5.028575,9.565083,9.938196,-7.947438,6.170412,1.036249,3.616690,9.378967,-2.015415,0.721144,-1.689877,-4.708845,0.753381,9.800239,1.768334,2.109438,-4.259326,8.052356,-4.148730,9.992555,5.434173,-2.834355,-8.184999,3.757809,-8.378998,9.018246,2.296731,-4.661475,0.127334,-7.691174,8.600679,3.475990,-4.293228,1.527256,-1.651278,-4.628440,4.248952,9.653569,-7.766850,3.600355,9.641205,-9.372306,-3.847009,2.842841,-7.208960,-1.513646,-3.745329,8.661382,-5.160044,7.877140,0.083962,3.681201,-3.870487,7.808096,5.414000,0.329441,6.938658,9.900070,-4.689122,0.346636,-7.459986,-7.297866,3.496660,6.693764,-2.703592,4.459841,9.986998,6.576255,0.018125,-5.990463,7.376911,3.548578,0.784080,-6.892426,-1.027756,-2.274743,1.260813,4.532128,-8.397423,-1.414776,9.251980,5.225385,-2.414709,-8.125086,5.416644,-5.713671,-8.143295,9.257530,4.294501,1.091843,9.853455,-6.394491,6.411046,-6.102327,4.438741,-5.111135,-9.978272,8.308271,-9.828850,-0.204271,-1.613292,-0.324783,-0.527233,9.523205,2.080305,3.913314,-3.190644,9.024677,4.502351,-8.867088,4.261901,1.077317,-2.995890,-3.423531,-0.470157,-3.109388,-8.263208,9.582545,-2.378243,-9.501017,-7.726048,-8.080558,6.160435,-5.925477,2.854365,4.255584,8.496307,-4.981113,1.188503,7.720011,5.623277,4.551639,-7.715500,9.073970,2.060888,1.773058,5.230141,-1.453193,3.148228,-4.664306,9.902645,6.354356,-3.064991,-4.152916,8.773942,-1.111218,2.311127,-1.379306,-6.316529,-9.683253,7.895929,2.876992,-4.188326,0.943615,-5.064886,-9.721997,-8.847010,8.042713,-6.123944,-3.037239,0.971843,-2.290844,-5.799318,-3.228462,-5.766245,-2.833572,-4.016294,8.039191,-8.085680,4.713530,-8.314367,-4.143121,2.300081,2.692589,-8.318717,6.214533,-0.897032,-4.125808,-4.429912,-7.149660,-2.379217,-2.427743,-7.070515,9.192599,3.030788,-4.683083,-3.913578,-7.573778,-4.410244,7.311016,5.771686,-2.704033,9.155340,9.847449,8.040822,-5.773572,-5.371549,6.023123,-0.990031,9.658750,6.862749,7.309188,5.464512,4.415179,-9.927497,-7.566001,-1.337713,4.593160,0.372564,5.980028,-8.560908,-5.961725,7.031047,-5.327327,-3.196039,1.606309,3.707937,-5.479046,-6.486534,-2.194052,-8.612087,-7.876557,3.869007,-0.897556,-4.019077,7.762369,-9.304355,-3.843763,7.886787,1.794092,-5.475590,9.605818,-5.906069,-5.938860,-0.676197,1.933956,3.037276,2.504906,6.814034,-5.223231,4.837734,9.619526,9.884358,7.552590,-6.139508,5.082753,2.272310,-3.220258,-2.581274,-0.108385,1.454584,6.178892,-9.138646,2.400258,9.768075,6.462023,8.805761,-7.385611,-7.875153,-5.497344,-5.465479,-0.349369,-2.994337,3.594695,2.949896,4.191546,8.048945,-9.181036,7.754221,-6.803028,2.087931,-3.761281,-9.911375,9.469664,-9.229605,3.499593,1.576481,3.203809,-8.457978,-4.415033,-2.545405,-7.293139,8.596933,8.094804,-5.863132,7.764835,-9.952356,-2.299573,-9.641905,1.802600,7.069726,3.886048,-5.068596,1.563421,-1.841835,0.108465,5.481444,-1.190638,-4.124883,-5.965179,8.086112,-1.115603,5.842191,-7.118872,-0.161158,-6.204661,-3.164364,4.072669,-5.348822,9.291177,-9.203099,-8.701133,-6.537184,-5.343589,-6.142069,4.424237,-3.040044,4.591753,5.400296,2.594237,-4.536831,3.336826,-9.343397,5.208857,5.964498,4.019239,2.270767,-6.831274,-6.105138,-9.872674,5.980687,6.015014,2.829509,9.058238,-0.757909,6.574087,-3.270011,-7.653223,1.225438,-9.448655,-1.785929,-7.536606,1.785502,-6.746087,-5.830918,-5.449691,-6.671941,9.957556,4.362728,-1.708052,-8.926734,-8.240023,9.617103,1.316857,-4.687536,9.153425,0.523879,8.506016,-6.601678,-4.819604,-6.791739,-2.611052,-7.458868,1.919726,-8.482766,-5.622445,5.896575,-8.281688,5.028295,5.113526,1.054032,-5.296514,-9.262488,9.040508,5.203213,2.194014,-2.374324,9.474728,-3.113625,-6.898412,-7.264550,9.222360,7.307981,-8.426522,7.030588,0.588158,7.262600,9.839387,9.437599,-0.270535,-4.312582,-5.524530,-4.013170,-5.721448,-4.905853,7.596061,2.971327,-1.068229,-1.527920,9.995964,-3.744189,-2.454547,-3.730186,-8.297954,-6.118187,6.888238,-6.579221,-5.990323,2.123019,4.231823,2.451449,-5.840327,9.061271,-4.317393,-8.751134,4.758374,-7.444030,-5.160171,0.100072,-8.093475,7.079241,6.636538,8.314936,-2.440378,-7.150953,3.551416,5.215980,-2.352128,-9.513616,-7.102702,-3.354506,-1.922785,-1.359827,7.973831,9.825740,6.558422,5.326959,-9.855079,-4.788946,7.404055,7.355891,7.679212,6.927171,5.305275,-2.487917,-7.425542,-7.630705,8.214173,0.261189,-9.642342,-4.312746,7.321209,-0.601150,-1.132259,9.522700,7.628068,-8.257356,8.167183,-2.557163,-3.919251,-7.493121,9.690944,3.929302,7.272556,-9.197009,2.700111,-1.770732,-5.102564,-1.266574,8.580277,3.961200,-9.260402,7.021136,9.245933,6.390412,-7.518321,-6.250451,-8.724374,-4.271323,-3.180784,2.830545,6.405145,-9.520459,9.453024,5.449610,-0.971062,1.023547,-4.725287,-7.659571,7.178749,8.613736,-0.884300,7.153120,7.161028,-0.221341,-7.252176,5.927735,4.061754,-6.394781,2.451986,-1.829358,-9.324604,-4.294578,-0.558500,-5.754124,-8.565353,-1.063900,9.210462,0.357191,3.968723,-9.696600,-8.185549,-3.015058,0.092962,-9.772443,-5.578518,5.476769,-1.087253,7.882795,-1.416140,-8.893297,-7.354100,5.737467,2.940254,-3.370277,3.233639,-0.951196,2.016162,0.471368,6.303002,3.526794,-1.290035,-1.224447,-6.501132,-4.699972,9.208417,-4.737398,3.554457,1.618645,-5.165743,3.349035,-6.803592,7.058755,-0.010972,4.624275,-0.599441,6.456627,5.552698,-5.739416,-2.622218,-4.399352,0.366192,1.305028,3.787413,4.708942,-4.386687,7.306145,5.525978,-5.046320,0.015758,8.643834,-0.340262,4.336876,4.498976,-1.815147,-0.975344,5.896506,6.656293,-0.312401,-1.755138,-8.129695,-7.100247,0.842278,0.227488,-7.928896,8.930343,-9.414122,-8.621915,3.644271,0.536104,2.019255,4.293469,-3.246219,1.781482,2.915558,-5.043749,4.996388,9.685052,-3.142168,-4.841574,7.554179,6.627816,-6.510307,5.704056,5.451789,3.379393,-7.845390,4.876439,2.558095,1.353389,-6.838753,-4.683404,2.746266,0.792776,-5.610131,-5.492985,7.958114,-9.173372,3.370846,-9.355748,-5.264393,-6.194174,-6.561688,4.719320,-9.646526,-5.898119,2.392537,-3.947642,-0.735431,-6.701030,-1.654163,-1.478453,-2.851402,1.786253,3.939493,-7.539190,2.472666,-8.233800,9.254232,0.849988,8.997357,-6.305729,-5.672545,9.958686,-0.467352,-4.694483,-4.052089,0.539520,7.619294,-8.475658,-8.507349,-7.568304,5.961955,1.424233,9.533254,3.376052,-6.800218,5.723210,-9.830669,5.152796,-3.493264,4.165231,-9.786089,-7.197182,5.119852,-5.548881,6.045557,3.049037,-6.062457,1.705495,1.555362,-2.833655,1.411121,2.645664,-2.254632,-0.566042,-2.950750,7.353344,-2.335004,-2.463896,-8.809950,4.979621,7.463472,8.127423,3.430259,4.650364,4.668032,-1.776576,2.269809,-5.383722,-1.223231,6.692677,2.524180,-2.904984,-4.904142,8.929440,1.694074,-0.909766,-6.346996,-8.519712,0.249364,-7.514150,8.881978,7.021205,-6.081671,-6.518752,-0.422620,6.635203,-3.237731,-0.797555,-1.500438,-3.106945,-9.707917,8.256700,-5.821701,0.162149,8.022419,-1.159531,-6.244024,-8.915377,9.883595,-3.589484,-0.072675,0.451010,9.182374,3.432448,-1.035260,4.002264,-2.348068,6.296596,6.200359,-6.163002,-7.489890,0.611326,-3.298598,-4.377582,2.599043,-3.270955,-2.732008,-8.933130,5.335906,-6.031577,7.765918,-4.632143,-7.730291,-7.631582,-9.015199,-9.835366,5.156845,-5.292801,5.058122,-0.582549,6.358720,-9.123668,-8.884381,3.822758,-4.449422,5.869893,9.302180,-5.269404,8.638008,3.498937,0.252951,9.585398,-9.736994,1.283864,-1.477326,-9.532586,-6.052760,9.055355,9.832920,-2.139845,-8.235437,-0.087159,2.208972,8.159928,4.735024,6.430515,8.860680,-7.636601,-3.438510,7.336341,2.265946,-3.213213,4.725746,-6.940885,-7.795942,-6.032059,5.213923,-8.107344,6.591090,3.468283,8.707392,-6.563197,7.275613,-4.472207,-1.894633,-1.634930,4.467871,7.005102,5.106168,6.291607,-0.771602,-8.242549,-1.084032,-8.612947,8.054452,5.452002,-4.241855,8.154958,-1.019072,9.494433,7.047729,-3.736392,-2.713440,1.255239,6.810827,1.136794,1.971913,2.441338,9.394108,8.496416,-3.921319,7.723202,-8.317773,-9.614070,-9.831168,4.413329,-2.384022,-3.534833,8.282173,-3.405863,-6.967377,-2.983665,6.259151,-1.954807,-4.558948,5.805370,-9.766194,8.087374,1.370563,6.102268,-3.130135,-1.219034,-6.676003,6.612754,-2.000562,-4.146207,-1.943366,-8.241140,4.845581,-9.873637,3.313536,-1.244794,-8.409223,-4.014463,1.022405,4.658199,7.662944,-9.913516,-2.564100,0.773635,3.388332,7.618277,8.255878,-9.478766,-6.436232,-4.497561,-9.028139,3.205858,-4.827375,3.954334,3.276319,8.147289,-0.332641,-3.198802,-0.357995,3.124748,-3.731052,7.509374,9.713494,-3.002822,-9.476055,9.959698,8.813900,0.161092,-3.091005,4.994535,1.459689,-8.658061,8.242681,-5.716771,7.985278,4.532848,-3.071281,4.202093,-0.354803,-9.146892,-4.261175,-6.031744,-5.062990,5.789973,-6.315882,9.477468,-8.281141,4.384882,-6.924811,9.161106,7.146288,0.448810,5.203009,7.705784,-5.566201,-8.214747,7.889375,-9.367872,-9.974126,8.180442,4.570501,-4.136049,-8.018449,1.525295,5.776747,-9.373465,0.700160,-6.555002,-7.183786,2.753275,5.237185,3.438044,-0.523880,9.115335,-1.001479,4.492152,0.773242,3.669281,7.599858,-2.583468,3.339486,8.852199,9.683137,8.196139,-8.008319,-2.091430,-6.449674,-3.313271,-4.502802,6.463546,-0.508020,-1.800204,-3.162417,-4.971839,-5.597886,-7.627094,1.300878,-1.857440,4.667251,9.527125,-3.456964,-6.884920,7.286559,3.654089,-8.969365,-8.190763,2.146678,-8.364473,-9.487138,1.968261,4.730558,-0.011048,-7.939406,1.576444,-7.557481,6.422534,3.945175], dtype = "float32")#candidate|3593|(1078,)|const|float32
call_3591 = relay.TupleGetItem(func_3011_call(relay.reshape(const_3592.astype('int32'), [13, 9, 15]), relay.reshape(const_3592.astype('int32'), [13, 9, 15]), relay.reshape(call_3560.astype('float64'), []), relay.reshape(const_3593.astype('float32'), [539, 2]), ), 1)
call_3594 = relay.TupleGetItem(func_3017_call(relay.reshape(const_3592.astype('int32'), [13, 9, 15]), relay.reshape(const_3592.astype('int32'), [13, 9, 15]), relay.reshape(call_3560.astype('float64'), []), relay.reshape(const_3593.astype('float32'), [539, 2]), ), 1)
func_1015_call = mod.get_global_var('func_1015')
func_1018_call = mutated_mod.get_global_var('func_1018')
const_3596 = relay.const([[True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,True,True],[True,True,False,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True],[False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False],[False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False],[False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,False],[True,False,False,True,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True],[True,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,True],[False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False]], dtype = "bool")#candidate|3596|(8, 98)|const|bool
var_3597 = relay.var("var_3597", dtype = "float64", shape = (10,))#candidate|3597|(10,)|var|float64
call_3595 = relay.TupleGetItem(func_1015_call(relay.reshape(const_3596.astype('bool'), [8, 14, 7]), relay.reshape(var_3597.astype('float64'), [1, 10]), ), 1)
call_3598 = relay.TupleGetItem(func_1018_call(relay.reshape(const_3596.astype('bool'), [8, 14, 7]), relay.reshape(var_3597.astype('float64'), [1, 10]), ), 1)
bop_3599 = relay.less_equal(const_3592.astype('bool'), call_3560.astype('bool')) # shape=(1755,)
bop_3602 = relay.less_equal(const_3592.astype('bool'), call_3561.astype('bool')) # shape=(1755,)
output = relay.Tuple([call_3591,const_3593,call_3595,const_3596,var_3597,bop_3599,])
output2 = relay.Tuple([call_3594,const_3593,call_3598,const_3596,var_3597,bop_3602,])
func_3612 = relay.Function([var_3597,], output)
mod['func_3612'] = func_3612
mod = relay.transform.InferType()(mod)
var_3613 = relay.var("var_3613", dtype = "float64", shape = (10,))#candidate|3613|(10,)|var|float64
output = func_3612(var_3613)
func_3614 = relay.Function([var_3613], output)
mutated_mod['func_3614'] = func_3614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3536_call = mod.get_global_var('func_3536')
func_3537_call = mutated_mod.get_global_var('func_3537')
call_3640 = relay.TupleGetItem(func_3536_call(), 0)
call_3641 = relay.TupleGetItem(func_3537_call(), 0)
func_2293_call = mod.get_global_var('func_2293')
func_2295_call = mutated_mod.get_global_var('func_2295')
var_3649 = relay.var("var_3649", dtype = "float64", shape = (64, 28))#candidate|3649|(64, 28)|var|float64
call_3648 = func_2293_call(relay.reshape(var_3649.astype('float64'), [8, 14, 16]))
call_3650 = func_2293_call(relay.reshape(var_3649.astype('float64'), [8, 14, 16]))
func_3425_call = mod.get_global_var('func_3425')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_3651 = relay.TupleGetItem(func_3425_call(), 3)
call_3652 = relay.TupleGetItem(func_3426_call(), 3)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
call_3653 = relay.TupleGetItem(func_3442_call(), 0)
call_3654 = relay.TupleGetItem(func_3444_call(), 0)
output = relay.Tuple([call_3640,call_3648,var_3649,call_3651,call_3653,])
output2 = relay.Tuple([call_3641,call_3650,var_3649,call_3652,call_3654,])
func_3657 = relay.Function([var_3649,], output)
mod['func_3657'] = func_3657
mod = relay.transform.InferType()(mod)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3658 = relay.var("var_3658", dtype = "float64", shape = (64, 28))#candidate|3658|(64, 28)|var|float64
func_3657_call = mutated_mod.get_global_var('func_3657')
call_3659 = func_3657_call(var_3658)
output = call_3659
func_3660 = relay.Function([var_3658], output)
mutated_mod['func_3660'] = func_3660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3425_call = mod.get_global_var('func_3425')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_3678 = relay.TupleGetItem(func_3425_call(), 1)
call_3679 = relay.TupleGetItem(func_3426_call(), 1)
output = relay.Tuple([call_3678,])
output2 = relay.Tuple([call_3679,])
func_3691 = relay.Function([], output)
mod['func_3691'] = func_3691
mod = relay.transform.InferType()(mod)
mutated_mod['func_3691'] = func_3691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3691_call = mutated_mod.get_global_var('func_3691')
call_3692 = func_3691_call()
output = call_3692
func_3693 = relay.Function([], output)
mutated_mod['func_3693'] = func_3693
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3873 = relay.const([[[4,-6,10,-7,-8,4,-7,4],[2,-9,2,8,-7,-10,3,-6],[-6,9,4,6,-9,9,-5,-1],[3,-6,10,-1,-3,6,9,-2],[6,10,-9,1,7,5,-3,9],[-6,10,-10,-5,-2,-8,-4,-5],[-2,-10,1,9,3,2,-10,-3],[7,-2,-4,10,7,8,-10,2],[10,-3,7,-3,-7,6,7,4]],[[3,-2,3,5,-10,1,-10,4],[-9,2,-10,-4,-9,2,10,-9],[2,-1,3,-4,3,-5,-2,-2],[5,-7,-7,1,3,-4,-9,-7],[-4,7,8,-2,-9,-3,-7,4],[-7,6,1,-3,-1,9,-10,3],[7,-3,1,6,-4,3,-4,-5],[7,8,-9,4,8,1,2,-1],[-6,-5,-2,9,2,9,-10,-8]],[[6,-4,-6,6,-4,9,-3,-6],[-5,-5,4,4,7,-1,-8,3],[4,8,8,2,-2,-9,-3,1],[-7,-6,-2,8,-4,6,9,-5],[-7,-5,-8,8,-9,-5,3,2],[-2,-3,-9,-4,10,-4,-1,4],[-5,-2,5,2,-6,-8,-5,-9],[1,3,-2,4,9,3,-8,-8],[5,7,-2,7,8,-9,6,-9]],[[-9,-8,9,3,1,-10,4,-3],[9,-10,-8,1,2,8,9,6],[8,-8,-5,7,-8,6,-4,-2],[8,-6,-9,-2,-8,-1,-8,4],[3,4,-5,-6,9,-7,-1,-8],[1,7,2,2,-10,6,2,-5],[-1,2,4,-1,10,-6,6,-1],[-9,-6,-8,8,3,-7,5,9],[2,4,-1,-9,-4,3,-10,-5]],[[-3,-7,-1,-10,-10,-1,-10,2],[6,-8,-2,8,-1,-6,-5,9],[3,-8,2,3,6,8,6,8],[6,7,-4,-6,5,-5,2,-8],[-9,-1,6,-2,10,8,7,-8],[-3,-5,-1,1,10,8,-9,8],[5,-8,5,-3,9,-1,-9,-3],[3,1,-6,9,8,9,4,-9],[9,9,-9,-1,6,-7,10,-9]],[[-6,4,-3,-2,-10,10,10,-4],[7,5,8,4,-9,-10,1,-9],[-2,-2,7,5,5,-5,7,6],[-3,-1,8,-8,8,-5,9,-5],[8,-5,-1,6,8,-1,-1,8],[-9,-6,4,-5,3,-1,-3,-5],[-6,-7,3,-5,5,3,-4,-9],[-1,1,10,-10,-5,7,-9,-10],[-5,4,-10,-8,-4,10,-3,2]]], dtype = "int64")#candidate|3873|(6, 9, 8)|const|int64
const_3874 = relay.const([[[2,-6,-2,-4,-8,2,-1,-9],[1,-10,6,3,5,-1,-2,3],[-10,-2,9,5,-8,-3,-3,7],[-10,-2,-1,6,4,2,-6,1],[-4,-8,-8,4,10,-6,10,9],[-10,-10,-6,8,-6,8,-7,-9],[2,6,8,10,7,-1,9,9],[-10,2,-5,-10,3,2,8,3],[-7,-4,10,5,9,-4,-7,-10]],[[2,-7,-2,-8,6,9,1,6],[2,7,1,7,9,8,4,6],[-10,3,-9,-9,2,1,-9,-1],[4,-2,9,4,-1,-7,10,3],[6,2,-8,2,-10,-3,-7,-1],[-4,7,4,-3,-6,2,-4,8],[10,5,2,9,-8,2,-9,-8],[7,6,7,-6,2,2,2,5],[-9,-1,-8,4,5,3,8,6]],[[-5,7,-4,8,1,-3,8,-7],[10,10,10,-6,-8,8,-8,-3],[7,-6,5,8,-2,8,-10,-8],[3,-8,2,8,3,-7,-10,-2],[2,-9,-2,2,-1,5,-5,2],[1,-3,-6,-2,-8,-9,-1,7],[-1,-10,-7,-6,-3,10,1,8],[-3,-4,1,-9,-5,7,-9,9],[3,2,4,-6,8,6,7,-3]],[[2,-3,-3,2,-1,6,-3,2],[8,6,4,10,-8,-5,-10,-9],[-8,-5,-7,3,-6,-9,-5,5],[-7,-5,2,4,2,9,10,4],[10,-10,-6,4,1,-3,4,-10],[-8,1,10,4,-5,-4,10,-2],[7,9,7,7,7,-6,7,-2],[-3,-9,-8,-7,-3,-7,-10,5],[-3,3,6,-7,2,-3,-1,6]],[[-8,1,7,9,2,4,5,9],[2,7,6,2,-9,-6,2,6],[-8,-7,6,6,-2,-10,-10,4],[-5,-3,-4,8,1,-4,10,2],[9,-5,-5,-5,-1,-3,-7,4],[-7,2,1,-3,-6,5,8,-3],[9,4,-1,3,5,5,-3,4],[8,-9,8,1,-8,-1,6,-3],[-4,-10,-7,6,-9,4,2,1]],[[-7,-8,2,-10,-8,7,7,-2],[9,7,-7,8,6,7,3,7],[-8,-7,-6,1,10,-9,-9,1],[5,6,10,7,9,3,1,3],[7,-8,-9,-7,8,-7,9,7],[-3,-5,8,-9,5,8,-2,-3],[-1,1,1,-10,-8,-6,-4,-10],[-7,-1,8,-3,-2,6,1,4],[-2,3,-5,-2,9,-9,-4,-1]]], dtype = "int64")#candidate|3874|(6, 9, 8)|const|int64
bop_3875 = relay.bitwise_and(const_3873.astype('int64'), relay.reshape(const_3874.astype('int64'), relay.shape_of(const_3873))) # shape=(6, 9, 8)
output = relay.Tuple([bop_3875,])
output2 = relay.Tuple([bop_3875,])
func_3887 = relay.Function([], output)
mod['func_3887'] = func_3887
mod = relay.transform.InferType()(mod)
mutated_mod['func_3887'] = func_3887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3887_call = mutated_mod.get_global_var('func_3887')
call_3888 = func_3887_call()
output = call_3888
func_3889 = relay.Function([], output)
mutated_mod['func_3889'] = func_3889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3536_call = mod.get_global_var('func_3536')
func_3537_call = mutated_mod.get_global_var('func_3537')
call_3904 = relay.TupleGetItem(func_3536_call(), 0)
call_3905 = relay.TupleGetItem(func_3537_call(), 0)
func_1015_call = mod.get_global_var('func_1015')
func_1018_call = mutated_mod.get_global_var('func_1018')
var_3910 = relay.var("var_3910", dtype = "bool", shape = (784,))#candidate|3910|(784,)|var|bool
const_3911 = relay.const([-0.190235,4.357471,-0.075746,-8.644516,-8.651254,-9.505064,1.684425,5.646240,5.075326,-2.820360], dtype = "float64")#candidate|3911|(10,)|const|float64
call_3909 = relay.TupleGetItem(func_1015_call(relay.reshape(var_3910.astype('bool'), [8, 14, 7]), relay.reshape(const_3911.astype('float64'), [1, 10]), ), 2)
call_3912 = relay.TupleGetItem(func_1018_call(relay.reshape(var_3910.astype('bool'), [8, 14, 7]), relay.reshape(const_3911.astype('float64'), [1, 10]), ), 2)
func_515_call = mod.get_global_var('func_515')
func_520_call = mutated_mod.get_global_var('func_520')
var_3924 = relay.var("var_3924", dtype = "int16", shape = (90,))#candidate|3924|(90,)|var|int16
var_3925 = relay.var("var_3925", dtype = "int16", shape = (12, 30))#candidate|3925|(12, 30)|var|int16
call_3923 = relay.TupleGetItem(func_515_call(relay.reshape(var_3924.astype('int16'), [6, 15, 1]), relay.reshape(var_3925.astype('int16'), [6, 15, 4]), relay.reshape(const_3911.astype('float64'), [5, 2]), ), 0)
call_3926 = relay.TupleGetItem(func_520_call(relay.reshape(var_3924.astype('int16'), [6, 15, 1]), relay.reshape(var_3925.astype('int16'), [6, 15, 4]), relay.reshape(const_3911.astype('float64'), [5, 2]), ), 0)
output = relay.Tuple([call_3904,call_3909,var_3910,const_3911,call_3923,var_3924,var_3925,])
output2 = relay.Tuple([call_3905,call_3912,var_3910,const_3911,call_3926,var_3924,var_3925,])
func_3933 = relay.Function([var_3910,var_3924,var_3925,], output)
mod['func_3933'] = func_3933
mod = relay.transform.InferType()(mod)
mutated_mod['func_3933'] = func_3933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3933_call = mutated_mod.get_global_var('func_3933')
var_3935 = relay.var("var_3935", dtype = "bool", shape = (784,))#candidate|3935|(784,)|var|bool
var_3936 = relay.var("var_3936", dtype = "int16", shape = (90,))#candidate|3936|(90,)|var|int16
var_3937 = relay.var("var_3937", dtype = "int16", shape = (12, 30))#candidate|3937|(12, 30)|var|int16
call_3934 = func_3933_call(var_3935,var_3936,var_3937,)
output = call_3934
func_3938 = relay.Function([var_3935,var_3936,var_3937,], output)
mutated_mod['func_3938'] = func_3938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
call_3978 = relay.TupleGetItem(func_3442_call(), 0)
call_3979 = relay.TupleGetItem(func_3444_call(), 0)
var_3980 = relay.var("var_3980", dtype = "float64", shape = (13, 8, 5))#candidate|3980|(13, 8, 5)|var|float64
bop_3981 = relay.logical_and(call_3978.astype('bool'), relay.reshape(var_3980.astype('bool'), relay.shape_of(call_3978))) # shape=(13, 8, 5)
bop_3984 = relay.logical_and(call_3979.astype('bool'), relay.reshape(var_3980.astype('bool'), relay.shape_of(call_3979))) # shape=(13, 8, 5)
bop_3998 = relay.greater(call_3978.astype('bool'), relay.reshape(bop_3981.astype('bool'), relay.shape_of(call_3978))) # shape=(13, 8, 5)
bop_4001 = relay.greater(call_3979.astype('bool'), relay.reshape(bop_3984.astype('bool'), relay.shape_of(call_3979))) # shape=(13, 8, 5)
output = relay.Tuple([bop_3998,])
output2 = relay.Tuple([bop_4001,])
func_4011 = relay.Function([var_3980,], output)
mod['func_4011'] = func_4011
mod = relay.transform.InferType()(mod)
var_4012 = relay.var("var_4012", dtype = "float64", shape = (13, 8, 5))#candidate|4012|(13, 8, 5)|var|float64
output = func_4011(var_4012)
func_4013 = relay.Function([var_4012], output)
mutated_mod['func_4013'] = func_4013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3246_call = mod.get_global_var('func_3246')
func_3247_call = mutated_mod.get_global_var('func_3247')
call_4039 = relay.TupleGetItem(func_3246_call(), 0)
call_4040 = relay.TupleGetItem(func_3247_call(), 0)
output = call_4039
output2 = call_4040
func_4042 = relay.Function([], output)
mod['func_4042'] = func_4042
mod = relay.transform.InferType()(mod)
mutated_mod['func_4042'] = func_4042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4042_call = mutated_mod.get_global_var('func_4042')
call_4043 = func_4042_call()
output = call_4043
func_4044 = relay.Function([], output)
mutated_mod['func_4044'] = func_4044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3691_call = mod.get_global_var('func_3691')
func_3693_call = mutated_mod.get_global_var('func_3693')
call_4064 = relay.TupleGetItem(func_3691_call(), 0)
call_4065 = relay.TupleGetItem(func_3693_call(), 0)
func_3214_call = mod.get_global_var('func_3214')
func_3216_call = mutated_mod.get_global_var('func_3216')
const_4071 = relay.const([-9.897511,8.903341,-0.404310,3.873081,9.316514,-2.244060,-7.679292,0.305495,-5.320974,-5.926970,4.222234,2.943263,-7.122347,9.573905,5.218324,2.693484,8.173158,-4.477288,1.511586,7.785834,5.137715,8.859800,2.680619,-7.789898,8.997570,-6.003722,-4.572826,0.247399,-0.152178,-6.544056,7.045004,7.145749,-1.455432,-1.847172,8.389573,-0.599065,-0.067505,2.673161,-0.418542,3.655320,-3.168961,-4.998563,3.637021,0.756029,-8.828475,5.437952,4.378880,0.901336,-8.183067,-2.838106,7.994794,3.122703,-4.311493,-6.433385,-2.700491,-4.105590,3.548527,6.004807,5.325615,1.240199,-2.575630,2.553282,4.604287,4.386110,2.402368,-1.939200,-0.521329,-4.536643,-4.404101,-7.070093,-0.538888,6.589699,6.303306,-4.020648,-1.101278,5.320085,-9.429213,-3.080990,3.746611,0.241095,0.091253,9.700697,5.988686,-6.118113,-3.949261,-5.320843,-1.927363,4.297051,-5.236654,-3.968755,3.541023,6.596805,-1.425541,9.336327,3.567281,-2.778917,-2.828846,5.761910,5.004087,8.329467,-9.429941,-9.334825,-1.728293,-0.417798,6.682198,8.454314,-9.750375,-6.780582,-5.884073,-3.741398,3.906545,6.770876,3.061635,8.595337,-3.522866,-1.577362,4.957776,1.119537,-1.628038,-6.555948,-1.693981,-7.896254,1.079017,-8.485643,7.497126,7.683302,3.952120,-3.666112,5.711222,-0.584680,6.145312,-6.537295,8.703375,-0.552103,-0.383734,-5.943762,-8.146068,3.377228,5.519311,3.375739,2.906860,0.710661,0.290602,4.393900,-0.859486,7.731436,-9.265298,-3.316717,7.417013,-4.654181,8.789997,1.824484,1.587100,5.002142,-8.746481,3.229805,-2.544822,-2.081170,8.252362,-7.993079,2.821071,4.531713,-8.669299,-1.374891,-3.496849,6.997603,3.004014,6.419359,3.719193,4.450597,7.299400,3.188260,-4.742810,-0.809044,3.754452,4.373650,-9.742391,6.896002,-5.639864,-3.932544,-0.318289,-8.058796,-4.937282,-8.531975,8.653790,9.112572,1.835389,-4.475326,5.158641,9.913255,2.348527,1.408443,5.076737,-5.372669,-9.261203,-7.036775,-9.418515,-4.007903,-9.103684,0.364786,5.875441,-4.209916,3.144535,-1.671181,4.648444,-5.189509,-7.575076,-2.716678,-7.938468,2.255844,-0.694374,8.898107,-6.783599,1.436653,-9.762183,-3.239910,-2.810798,-7.361436,2.522638,-7.601059,-0.013175,-9.211312,-1.460645,-5.378695,7.610860,-8.779820,4.083807,4.876335,3.024868,-8.836312,9.356519,5.032901,-8.746486,1.869640,-8.082919,-8.500805,-0.198967,3.360036,-3.781582,1.853898,9.946213,3.112656,6.837102,3.287972,0.603039,2.236465,-8.963023,-8.182219,-9.698223,2.802994,8.253907,-6.807806,-8.259970,4.445670,2.877094,-0.263578,-3.373938,-1.601662,-3.841443,-2.282749,6.805583,-7.725490,5.124718,-3.330216,5.796631,-5.339206,-3.713125,-2.100188,5.433538,7.450961,4.814276,6.846490,0.364685,8.386127,9.279105,0.277179,5.074652,4.005065,1.756847,5.981190,8.626422,6.943890,-7.545884,-8.076207,5.141023,-4.714024,3.429500,-1.584621,1.698214,7.686038,-3.031656,-2.679280,-6.907491,-6.203776,6.655731,-5.540215,1.889922,-5.471142,-5.491333,8.771289,-5.270855,-6.724942,-3.652846,-7.796075,-1.954776,-2.757349,9.199397,1.839780,-2.334750,5.664284,2.462061,-0.916776,0.465406,-3.917022,2.760788,-7.500979,6.357347,-6.654833,8.569866,-8.874195,-6.326322,-3.100893,2.991020,5.726549,3.918527,7.844370,4.834029,-2.547861,3.306581,-2.091155,-5.442939,-7.194393,9.152257,2.941467,-8.668952,-9.678520,0.232080,-2.201071,-0.384042,-5.101502,-8.672565,-5.803421,-3.854811,-2.091951,8.959574,-7.885662,7.632548,-8.841487,5.441417,-7.764869,7.129883,-7.497703,6.337812,8.551298,4.389775,-4.245923,4.996331,2.077393,4.318753,5.714161,-8.288141,-1.925035,8.464499,-1.506055,7.313709,-8.312545,9.488921,1.110243,8.133062,5.463175,-2.978063,-4.306633,-6.175645,5.017904,3.400855,4.342053,5.126500,-3.448146,-6.977680,6.205714,7.004838,-3.092815,8.762681,1.822551,-5.541438,8.134181,-5.851058,-7.652119,0.585102,-6.276293,2.372616,-9.522919,-7.215544,6.971839,3.451186,-5.482059,-8.821778,3.289563,-0.291496,-5.700576,0.079740,0.708721,8.217366,4.640671,-4.964917,5.782915,2.627897,-7.674164,-3.592952,-3.143811,-9.115355,-5.567738,2.688797,-8.459011,3.077082,-3.861677,-9.183467,-8.286840,1.310683,-0.958175,-0.199661,4.797391,1.575802,9.151942,7.708026,2.647065,-5.926011,-3.729021,-7.419858,2.456294,0.922271,-8.533414,8.302585,8.407726,-3.403419,-2.209265,-5.012216,-9.599864,8.698002,2.712500,8.971772,2.050831,1.565235,2.824374,-2.912544,6.935196,-4.555959,-0.649027,-2.075845,5.479003,5.869048,4.072010,7.277005,-6.823712,3.711594,-9.333868,-4.531998,-0.342987,3.481934,1.430022,-0.848772,-0.465861,4.476904,3.845639,-0.211980,-5.828828,-2.011087,7.640254,-9.403348,5.509873,-4.026450,-3.976090,8.701028,-8.707949,4.526822,-7.833419,-0.106940,-1.915944,3.766325,6.037702,-5.063170,-6.475834,-3.209031,6.783798,2.827415,-6.782920,-9.134521,-5.777567,-4.771499,-6.918437,8.931389,5.182799,9.388755,8.827503,8.876478,7.837702,-0.346786,6.549960,4.489039,8.283398,0.637747,-5.188994,6.382582,5.375889,4.743243,9.018034,-8.200752,-6.164423,-2.734456,3.244565,0.771548,-1.702357,-4.092049,-3.615073,-3.093235,-4.167299,4.002526,4.349433,5.388545,-2.279987,-4.091871,6.893372,9.455446,6.592842,9.200272,1.328609,9.764347,3.343630,8.656652,6.199450,2.896071,0.567365,5.948305,2.588012,5.709981,1.549936,6.102696,6.277412,5.419030,5.400498,9.332830,1.285580,-0.417747,-9.010600,-7.346751,4.976755,3.011806,-2.051532,9.603089,7.310324,-1.257214,-5.261626,-7.806169,-6.649870,-4.065403,-4.803930,-5.842736,-9.041449,-9.374567,5.064579,8.183065,0.081471,4.574136,5.969909,8.505084,-7.157573,4.882508,-5.862093,-4.576387,6.101076,-1.637657,-6.820822,2.525603,1.459623,1.134333,-6.519085,3.279774,9.832495,-6.274037,4.051280,1.289869,8.097936,-2.548643,-8.878882,-0.181824,-5.482869,-4.307866,5.554169,9.009521,0.249663,3.877026,2.653505,2.557802,-4.682208,1.811848,-6.195748,9.430305,-8.244640,8.766563,-8.104894,-3.008451,-9.073017,6.851256,4.827680,-6.638147,2.568677,-1.829597,-2.179541,1.850078,0.318883,-6.208140,6.048527,7.063922,4.610061,6.434522,-2.320336,-5.389200,-0.346284,2.552706,7.095349,-3.266402,9.375052,9.723410,5.575115,-1.409026,-9.124493,-2.501333,-8.212398,6.622046,-8.005347,7.112153,-9.227687,0.028912,3.950953,-1.007035,-6.684138,8.455523,-7.618392,2.509076,7.613804,-2.265955,-6.672550,-1.673624,1.538257,-9.334542,-3.671809,-5.441982,-9.993721,1.920397,-4.586978,-7.772526,-8.179098,0.773657,-6.117799,-8.734303,-8.444697,0.149023,6.846489,-3.700111,9.963371,-3.263597,-3.330276,8.885074,-8.926282,2.036108,-0.519493,8.466269,7.279931,5.278307,4.196296,-2.297949,7.992839,-5.502151,1.260211,3.736575,-1.335212,-7.832648,-9.101033,4.818188,-5.133929,-2.795163,-7.009434,5.484984,-0.583545,3.731237,3.161545,3.033658,-0.022167,0.715931,-0.137248,-2.862492,3.445515,-5.442423,-7.658931,-8.450751,-1.900857,-2.097236,6.115862,-6.404716,-4.143194,0.204659,7.505477,-4.172007,4.797817,6.046662,-8.266068,-9.981003,-4.436821,-4.939238,-6.197441,3.931925,5.479318,0.744198,-0.376237,-7.812135,3.493183,-3.206447,-9.973089,-6.021798,-7.737387,-5.488775,-3.808130,-8.453838,1.842627,9.148421,-9.001364,-9.275707,-4.927884,-3.609370,1.903925,-8.641230,-3.627436,-2.792997,2.378334,-8.659152,-2.687304,1.058244,7.053156,-0.726342,-0.570150,-2.410621,-3.358963,-8.114276,-7.453577,5.452920,5.113695,6.666126,-7.685172,-4.811417,-3.320198,-4.718929,5.803837,9.104407,9.859871,4.707613,-0.287002,-4.548174,-3.551324,7.492009,5.986818,9.423894,-2.562210,4.114289,-4.286555,1.278215,-1.562320,8.533147,9.726918,6.962208,-9.273143,-4.089380,-5.575697,-3.326715,9.438926,-1.059747,-6.982619,9.260412,-5.617110,-2.317046,-5.887677,7.697334,0.454377,9.088555,-7.714599,9.721528,4.054302,6.414007,6.438212,8.478832,4.314988,1.645190,1.959812,4.891246,5.260864,-2.917372,4.502784,4.142644,-3.831349,5.303047,4.895817,-4.125851,-3.923992,-2.939191,9.831664,-5.700214,1.417987,-4.882492,-9.014811,-4.593996,1.593769,6.377139,5.100712,4.681491,7.181392,-6.202490,-9.528662,-9.698836,-4.277875,-2.358002,-4.480227,-0.237431,-1.099172,-9.302361,-0.443876,9.078458,1.608338,-4.081189,3.759515,-0.350913,-5.682001,0.822661,8.635451,1.123324,-2.436507,8.240865,-7.734759,0.115564,8.783053,8.042736,-6.513294,2.107281,-4.334284,-2.464369,-4.158702,-8.967124,8.010407,9.138903,3.907258,-9.622307,-7.205013,-3.813911,-5.160811,8.650539,1.782634,0.636646,5.733332,7.781451,0.460403,4.450963,3.743344,-9.267963,5.168211,2.524653,8.644560,2.684073,-5.974294,-4.693702,1.101213,-9.235561,9.505537,-5.345408,-5.458081,-2.599470,-4.430765,5.660078,1.097552,-9.122246,7.188497,-7.967672,-0.889005,-9.876116,0.076710,7.988546,0.697598,-4.077503,3.095672,2.395223,-1.426266,1.390100,-2.212128,-9.541003,0.632537,-7.781953,4.350052,1.895280,-7.062050,-1.701390,-1.427967,-2.193895,6.409961,-8.095690,-1.781639,-1.760638,5.351741,9.942434,1.473569,-8.343094,-6.818467,7.155764,7.386816,9.628452,2.418474,2.765609,8.886922,9.382781,-7.257637,-5.982572,9.854210,-9.559628,-0.483991,-9.284494,2.416994,-3.541415,-9.899312,6.825968,-5.792828,0.585321,-7.434287,-2.322647,6.330282,-1.387262,0.119961,-5.148403,-7.527961,-7.737498,-0.923691,-9.564394,2.917228,7.787698,-3.732995,2.840004,-8.160821,-5.978553,1.186660,-1.012787,-8.877662,5.582405,8.492328,1.338573,-2.892502,8.504352,-0.237034,-2.792916,-6.730204,0.132862,2.111358,-8.326176,-9.724343,-3.723448,8.417426,-9.116014,-3.494001,6.257194,7.997742,1.213624,-0.977666,-7.328961,-8.569820,-9.681162,-5.486478,5.977656,-0.685280,8.941494,7.329853,5.223523,4.994355,-3.218475,1.337815,8.170097,-9.119611,-0.737182,1.986405,-9.783754,4.678060,5.650244,-7.937751,1.356604,-4.945092,3.856659,3.866061,-5.537693,-2.062916,-9.397634,-9.430908,-3.168606,-0.845248,-7.567247,3.941328,8.883188,9.284043,7.226451,1.260803,1.278727,1.246820,0.426029,4.503315,2.184709,3.853828,6.609948,-3.178901,-2.304734,-3.726105,-4.534567,2.459375,-3.939689,-6.015876,2.779173,5.681102,8.360729,4.550878,0.420010,-2.866915,7.260172,-0.308456,-9.086249,-7.236429,3.484440,0.853644,8.834769,2.959724,1.131531,2.897354,2.280949,8.014264,6.069737,-0.867414,6.977701,-8.649691,-0.592605,6.569196,7.731830,2.739756,-8.924173,-8.652639,-2.450008,-9.475927,-5.019597,-4.575151,-8.566592,-6.520847,-7.479162,-6.928247,-2.012552,-7.335010,0.399131,6.691844,-7.914938,6.046656,1.163208,-8.110091,2.551805,0.015817,-4.628630,4.680989,-9.673809,-5.799702,-4.220053,-5.179409,6.166540,2.141162,0.636783,9.390544,-6.072078,-8.402577,3.511796,5.350777,9.862356,-0.353186,-9.449355,-7.474050,9.843964,8.677010,4.598909,-9.396148,9.568275,5.467902,-8.787058,-8.663887,5.598630,-0.916255,7.717250,1.171528,2.544276,-3.765164,-8.687499,-8.690869,4.739523,5.683625,1.463991,-4.739669,-5.914354,9.795765,-2.849292,2.570583,7.896792,-5.883802,6.311217,0.286548,7.487938,-4.203216,6.596845,-5.116499,-4.316798,1.648323,1.809057,-1.084764,-9.307861,7.132936,4.074698,-8.400577,-3.862568,1.387666,2.809304,-6.705300,-5.505842,-7.290763,0.183012,9.443573,-6.518090,-3.870109,-8.983638,0.754144,-0.505634,7.367010,2.047430,-1.185071,5.055343,5.362389,0.825312,2.614897,-7.407015,2.377525,-4.375028,-8.479848,3.821065,2.822337,9.530892,-0.500895,2.764200,-7.343189,-5.000002,-8.347346,-6.179915,-7.000195,-5.726887,-3.117351,2.781314,-9.471117,-3.648806,-2.424450,7.522435,4.662359,3.230463,1.276674,1.992887,2.752994,-1.122844,4.856740,-6.426878,-5.364600,-5.016910,6.441620,-4.410891,7.078339,-4.507579,0.932131,4.513735,3.801910,-4.720101,0.821213,-3.491117,4.266166,7.469539,4.495414,-5.990946,-2.439771,-4.699419,-5.617138,7.050244,5.565809,-2.543010,-2.492930,9.671031,-1.142333,-9.133624,-4.402386,-4.873274,8.836648,-7.791018,3.496604,9.579967,1.548549,-1.356806,-4.863466,-9.406796,8.028126,-4.621065,-0.494077,5.777544,-5.979768,9.996153,-0.938159,-0.047706,6.809624,1.092311,-6.954334,-0.485134,-2.948032,6.028644,-2.583849,1.020261,-3.633554,0.636432,0.327898,1.732498,-3.397848,-5.189089,5.712827,6.574754,-3.294705,2.406318,8.701949,-9.427141,-2.514243,-2.568533,4.952746,4.398857,-1.237278,2.981765,0.968075,7.235190,3.681485,9.738042,-1.486946,9.572520,3.795754,8.427486,-3.072624,-3.833761,-5.782819,8.674954,-3.310623,7.313947,-8.025512,7.241794,-5.257652,8.627366,-5.324151,-3.113856,5.778535,4.758608,-3.546935,0.569220,7.948329,-5.333377,7.718023,5.717951,-4.343589,-0.957955,1.689908,-7.101644,-0.823483,7.828379,-0.018711,4.687634,6.784529,-7.251674,-2.172002,-4.985740,-5.835602,3.569228,1.837995,3.176396,1.257263,-4.231401,4.495708,-3.967294,-8.727002,3.115137,9.035109,2.475757,9.505057,0.942242,0.807641,2.715175,-9.695874,2.425848,-9.105114,4.509038,-6.688925,-8.688218,-9.477152,0.743789,8.455604,-1.259431,-4.162597,8.463824,9.547181,7.724274,8.057914,-2.333297,4.776792,1.916117,7.202913,0.055428,-4.392613,4.981838,4.829926,7.036052,2.617603,2.471525,4.326988,-3.057695,3.885918,-0.174198,-9.849141,-2.119379,-5.565595,8.019515,-9.649645,-5.805791,5.247020,-3.575527,-2.055957,4.887030,5.478051,0.278753,3.747751,3.714815,5.105578,2.722530,6.186045,8.226925,7.434708,2.385301,-1.961000,-1.185145,7.944198,-0.668461,5.253565,-9.443951,-3.335522,2.021817,7.649623,5.421198,-0.359571,-6.968113,-6.676147,-2.696987,5.604893,-4.645724,5.241899,6.765151,2.586094,-5.390548,6.348693,7.997979,2.267934,2.751489,4.741173,0.766190,-0.901303,6.697360,-7.928155,-7.413478,6.510906,9.584218,-5.346959,-2.632422,-0.832044,-6.209097,4.153520,7.392791,-0.141260,7.805782,3.366755,-7.637078,-8.616399,6.850214,9.128523,-2.941929,-9.268419,1.264624,-9.121574,-2.823498,-8.014350,-4.126300,-0.359825,-4.202448,1.399158,-2.932070,3.588174,-3.897486,9.340084,-8.209171,5.013515,9.213491,-6.425944,-7.750886,-8.286213,6.676500,1.474445,-3.038350,0.393619,9.238403,-0.952741,-7.281452,-8.207227,-9.941655,-9.678229,-4.643958,3.865431,1.376714,-0.365359,5.633120,-0.804989,9.635256,-7.450223,9.466521,7.793002,-2.623416,-0.763409,2.694959,4.730363,-6.523913,-2.146385,-9.618113,0.406919,3.037089,6.771862,-2.419754,8.518536,-8.313345,-6.495304,8.428701,-0.862669,1.225018,-6.246255,9.406920,-3.177630,9.097395,-0.476607,7.163236,6.534309,7.125676,7.372685,-3.911772,9.072185,-8.992291,-5.053604,7.989001,-6.946907,-8.041467,4.765711,-5.709976,2.066349,-9.518217,6.347478,3.745027,-4.753550,-9.382677,5.185221,-8.207390,1.087534,-7.687119,5.256425,-7.665976,-1.298053,-1.204886,-7.231736,-9.147518,6.896055,7.576259,-3.334100,5.349819], dtype = "float64")#candidate|4071|(1485,)|const|float64
call_4070 = relay.TupleGetItem(func_3214_call(relay.reshape(const_4071.astype('float64'), [9, 11, 15])), 0)
call_4072 = relay.TupleGetItem(func_3216_call(relay.reshape(const_4071.astype('float64'), [9, 11, 15])), 0)
const_4095 = relay.const([[[7.799805],[0.795866],[-7.816248],[1.549010],[-9.081748],[4.881698],[-3.123238],[9.985747],[1.287448],[3.139654],[1.578822],[1.558783]],[[-7.703564],[-3.338784],[5.493205],[-4.131901],[-4.167278],[-1.241256],[9.870158],[-8.759478],[3.926755],[-9.495087],[9.893655],[-0.041686]],[[-2.587266],[-0.538128],[1.319633],[-6.448836],[3.237616],[-2.504905],[-1.761823],[7.744001],[-2.845618],[8.362782],[-2.291661],[-4.962500]],[[6.958334],[2.116104],[-7.648107],[-3.104845],[1.280655],[-6.214605],[-9.010757],[-5.160627],[8.072059],[-0.352004],[-6.557389],[1.222024]],[[0.455284],[-5.610870],[-5.004038],[1.779512],[-8.946443],[-3.785997],[-8.985066],[3.291664],[-1.590314],[3.866198],[-0.589019],[-1.244263]]], dtype = "float64")#candidate|4095|(5, 12, 1)|const|float64
bop_4096 = relay.bitwise_and(call_4064.astype('uint8'), const_4095.astype('uint8')) # shape=(5, 12, 1)
bop_4099 = relay.bitwise_and(call_4065.astype('uint8'), const_4095.astype('uint8')) # shape=(5, 12, 1)
output = relay.Tuple([call_4070,const_4071,bop_4096,])
output2 = relay.Tuple([call_4072,const_4071,bop_4099,])
func_4130 = relay.Function([], output)
mod['func_4130'] = func_4130
mod = relay.transform.InferType()(mod)
output = func_4130()
func_4131 = relay.Function([], output)
mutated_mod['func_4131'] = func_4131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3536_call = mod.get_global_var('func_3536')
func_3537_call = mutated_mod.get_global_var('func_3537')
call_4146 = relay.TupleGetItem(func_3536_call(), 0)
call_4147 = relay.TupleGetItem(func_3537_call(), 0)
output = call_4146
output2 = call_4147
func_4151 = relay.Function([], output)
mod['func_4151'] = func_4151
mod = relay.transform.InferType()(mod)
mutated_mod['func_4151'] = func_4151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mutated_mod.get_global_var('func_4151')
call_4152 = func_4151_call()
output = call_4152
func_4153 = relay.Function([], output)
mutated_mod['func_4153'] = func_4153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3536_call = mod.get_global_var('func_3536')
func_3537_call = mutated_mod.get_global_var('func_3537')
call_4174 = relay.TupleGetItem(func_3536_call(), 0)
call_4175 = relay.TupleGetItem(func_3537_call(), 0)
output = relay.Tuple([call_4174,])
output2 = relay.Tuple([call_4175,])
func_4191 = relay.Function([], output)
mod['func_4191'] = func_4191
mod = relay.transform.InferType()(mod)
output = func_4191()
func_4192 = relay.Function([], output)
mutated_mod['func_4192'] = func_4192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mod.get_global_var('func_4151')
func_4153_call = mutated_mod.get_global_var('func_4153')
call_4294 = func_4151_call()
call_4295 = func_4151_call()
var_4307 = relay.var("var_4307", dtype = "float64", shape = (1, 12, 8))#candidate|4307|(1, 12, 8)|var|float64
bop_4308 = relay.logical_or(call_4294.astype('bool'), var_4307.astype('bool')) # shape=(1, 12, 8)
bop_4311 = relay.logical_or(call_4295.astype('bool'), var_4307.astype('bool')) # shape=(1, 12, 8)
func_3657_call = mod.get_global_var('func_3657')
func_3660_call = mutated_mod.get_global_var('func_3660')
var_4322 = relay.var("var_4322", dtype = "float64", shape = (1792,))#candidate|4322|(1792,)|var|float64
call_4321 = relay.TupleGetItem(func_3657_call(relay.reshape(var_4322.astype('float64'), [64, 28])), 2)
call_4323 = relay.TupleGetItem(func_3660_call(relay.reshape(var_4322.astype('float64'), [64, 28])), 2)
output = relay.Tuple([bop_4308,call_4321,var_4322,])
output2 = relay.Tuple([bop_4311,call_4323,var_4322,])
func_4335 = relay.Function([var_4307,var_4322,], output)
mod['func_4335'] = func_4335
mod = relay.transform.InferType()(mod)
var_4336 = relay.var("var_4336", dtype = "float64", shape = (1, 12, 8))#candidate|4336|(1, 12, 8)|var|float64
var_4337 = relay.var("var_4337", dtype = "float64", shape = (1792,))#candidate|4337|(1792,)|var|float64
output = func_4335(var_4336,var_4337,)
func_4338 = relay.Function([var_4336,var_4337,], output)
mutated_mod['func_4338'] = func_4338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4130_call = mod.get_global_var('func_4130')
func_4131_call = mutated_mod.get_global_var('func_4131')
call_4344 = relay.TupleGetItem(func_4130_call(), 2)
call_4345 = relay.TupleGetItem(func_4131_call(), 2)
func_3246_call = mod.get_global_var('func_3246')
func_3247_call = mutated_mod.get_global_var('func_3247')
call_4352 = relay.TupleGetItem(func_3246_call(), 0)
call_4353 = relay.TupleGetItem(func_3247_call(), 0)
func_3069_call = mod.get_global_var('func_3069')
func_3071_call = mutated_mod.get_global_var('func_3071')
var_4364 = relay.var("var_4364", dtype = "float64", shape = (462,))#candidate|4364|(462,)|var|float64
call_4363 = relay.TupleGetItem(func_3069_call(relay.reshape(var_4364.astype('float64'), [6, 11, 7])), 3)
call_4365 = relay.TupleGetItem(func_3071_call(relay.reshape(var_4364.astype('float64'), [6, 11, 7])), 3)
func_4335_call = mod.get_global_var('func_4335')
func_4338_call = mutated_mod.get_global_var('func_4338')
const_4372 = relay.const([-6.049819,4.250949,-3.126605,8.356454,-9.197048,-1.976164,-3.964131,-3.790194,5.304998,3.695330,8.028471,-6.896322,2.966293,-1.853013,-8.401944,-6.888682,-7.543216,-2.060405,0.028741,-7.023882,3.405605,5.994999,8.097074,-4.608562,-9.444500,-9.093986,-2.868543,-3.582318,-3.339857,-1.108098,-2.551066,-1.182432,-2.491493,-0.990955,-9.560367,-8.713188,7.806401,1.048064,6.166375,0.974183,-2.964284,5.737418,-2.010684,-8.355357,7.445799,8.149598,5.980760,-3.015943,-9.142654,-6.183317,0.952035,-4.631079,-2.660588,0.469222,4.684073,-4.785694,6.210546,6.934078,0.682340,-8.316188,-3.621595,-1.297940,1.198485,-7.212005,0.586951,-0.298501,6.120884,1.830307,3.600021,8.598580,4.258983,-0.937269,2.653186,-7.654673,7.373911,5.451568,-8.463214,-9.520045,6.483326,-9.226080,8.763629,8.385074,1.788598,-2.958034,-5.365122,-6.817601,3.276107,-7.307661,-5.455044,1.566826,6.087902,0.262702,8.442109,-6.659630,-9.462484,2.771470], dtype = "float64")#candidate|4372|(96,)|const|float64
const_4373 = relay.const([[0.665693,-3.297942,-3.923416,-2.746870,9.841561,-8.874499,7.681361,4.196787,7.632315,-2.734455,0.385018,-4.950478,-1.980824,-3.635315,8.499421,7.929993,3.425247,-1.653801,-0.308132,-6.827207,1.781577,-6.180812,-6.880557,8.317982,-3.265246,7.820232,6.503488,1.444262,-2.483843,-3.424500,-7.429992,-1.190634,-1.912829,5.674546,-6.393418,-8.725139,-4.119767,-4.216914,-4.751826,5.434561,9.666192,3.959772,-5.736694,-0.717944,-2.778435,-5.446531,-3.352486,-5.840754,6.456653,6.070297,3.735233,9.064332,8.153340,-1.107966,-0.074113,-1.282678,1.274957,-5.467063,-7.073184,-7.256580,5.021859,4.184792,0.050249,-7.924258,-9.754929,-8.893619,4.139407,5.258582,7.788842,3.789470,0.130205,2.948374,1.462803,8.528921,-6.594642,-7.909502,-3.725711,-7.073697,2.817600,1.759439,-5.313461,7.702502,6.686121,-7.272422,-9.698707,-8.057591,-8.699704,-6.398792,5.195681,1.619529,1.980760,-2.085884,-4.525146,-1.034838,4.140831,1.971388,7.444936,-1.155160,9.436316,-4.675597,-7.650322,-5.992358,-9.786813,-2.237009,-2.703322,-6.244426,1.443286,8.548997,0.300916,9.239446,0.439129,-4.169942,2.350807,-4.852674,-1.917341,-9.701551,1.877479,1.324445,-1.175983,-5.097868,4.617304,-4.499541,1.935519,-6.576036,6.479407,1.818511,-9.587107,-5.831498,-8.933087,6.053056,1.933938,5.412331,-2.686564,-3.591539,-6.271157,9.677789,3.833826,-6.429243,5.606561,3.242273,-1.505018,-6.257661,7.850675,-0.065107,4.441413,-6.594029,-9.273965,9.674344,-3.048529,8.421913,-3.840544,-1.985702,-1.684384,-5.857112,-5.301331,1.812800,9.556275,9.408910,-7.529263,-7.654225,0.207964,-0.941723,9.229604,-9.291906,4.118020,-4.868299,-5.773264,-6.742531,-8.054322,7.603173,-9.742795,6.677816,-5.701666,-9.770986,3.263673,-6.441294,7.062565,-4.491144,-4.957053,-9.844674,-1.237273,-6.789930,-3.504378,6.586129,0.604612,7.953513,5.312751,5.008296,3.017623,-6.001163,2.884914,-7.311322,5.147422,9.085528,0.668622,-4.549347,-8.266695,2.127779,9.577490,7.482292,1.495913,-8.862443,-5.357359,-2.555786,-4.864676,-0.302013,3.723720,-4.180695,7.657601,-9.612990,-4.421055,-7.772228,6.491343,3.872640,-8.903292,-1.415667,5.381070,7.300307,-7.089532,5.740147,-2.832822,-0.610348,-8.382892,1.763899],[-5.373920,1.903079,-2.999132,-3.486166,6.561273,-0.607842,-4.616077,3.812701,7.515497,1.540607,-6.043139,-1.681838,-9.148691,-3.930030,-3.117247,-0.565648,2.246893,3.584117,3.745371,-2.740223,5.709636,8.896261,9.760125,0.020935,2.893417,-6.916648,5.480518,-2.998533,-1.012071,6.466958,-8.040724,4.790780,6.800493,7.843143,-7.556766,4.990175,-3.592567,-8.735792,8.532037,6.435187,-6.678548,-4.350635,-6.832402,-4.168077,6.627463,1.206888,1.929145,7.446488,0.676415,-3.720319,-7.305016,8.369108,-2.780472,-8.433882,3.886670,-8.592589,-8.050179,-4.290850,7.977284,7.984676,-8.746540,8.362691,1.123026,-6.707183,4.899542,2.023863,-8.772029,9.485732,-5.230856,-7.766280,4.094074,2.194920,1.991655,-4.344019,-0.214748,3.094774,4.797939,4.125432,3.607694,7.128570,-3.936288,7.643868,-6.356868,1.193050,-2.225905,-4.014921,-1.290849,8.616995,5.946205,-2.692419,7.228970,-7.430171,-2.230743,-3.443406,1.159108,3.242806,-0.583358,-4.424846,0.731375,7.541271,0.750895,9.945820,7.620228,7.169179,-7.093459,6.903738,4.293936,-1.691497,5.482459,-7.132514,3.618988,-9.039120,-4.358292,-5.205930,-7.881529,7.368056,9.563585,5.756277,-4.916139,-7.851188,-2.761758,-8.661074,7.013501,-6.812284,3.617326,-8.452964,-8.553980,-0.730247,1.873569,-9.197653,-8.500952,-2.560046,-1.227882,6.383792,-5.242785,6.721008,8.367476,6.900269,9.140985,8.518703,-2.473007,4.102301,-5.734006,3.739016,-5.595253,4.340095,9.597732,-2.784815,8.535976,-1.574781,6.664213,-5.536877,-6.111737,-6.312315,1.744006,-9.330854,7.420182,-7.038633,-7.844442,4.595346,2.691879,2.206674,-4.027084,-4.495899,5.758127,-9.903597,7.504495,6.832462,-1.371594,4.961148,5.976965,6.170986,8.186852,-9.825151,2.104198,-1.470642,-5.297709,8.817279,9.597516,-9.405786,1.160446,-4.284942,-3.038827,-5.750199,3.966672,-1.893369,9.739486,7.292914,-0.747483,-2.929264,8.456623,-2.779892,6.251254,9.515349,-7.060004,0.569373,-4.044914,-8.661915,-5.827479,4.465286,-8.986298,-0.879496,6.364875,-9.289047,-8.388457,1.799018,6.454645,0.259442,5.490546,7.197237,7.065655,1.102728,-1.185956,-7.257870,-2.417923,-5.564865,8.440873,1.506624,-4.275223,-7.072120,-8.511463,7.614318,-5.174937,-6.612927],[4.793214,0.024254,4.810676,-2.002422,-9.121364,-3.028284,-4.600534,4.162789,2.384909,-6.701051,-9.848858,-5.335749,-8.916797,-2.693271,9.361175,-0.043577,-6.802489,7.858517,7.513034,-2.338157,-8.834226,-8.012875,0.786154,-9.340578,-8.460255,8.012448,-2.038297,-1.727450,9.902784,0.929247,8.289870,0.909388,1.891243,5.613015,-1.774834,-4.498394,-9.507262,5.579968,-4.999008,9.534337,-9.589492,0.694072,-7.477154,9.775595,-1.174605,-6.097904,-8.557483,4.778916,-8.216350,-3.049208,-9.777362,3.179730,-1.095491,1.699901,1.192400,9.114381,4.473591,-8.531110,-9.625263,8.941367,-2.568217,2.661711,4.863935,-7.740815,8.885278,-4.211855,7.242280,8.124221,-6.238767,-3.946192,8.368026,5.296780,-3.702341,-0.818581,1.105323,9.930986,-8.581976,-6.119306,5.423707,1.255453,-3.794121,3.528365,-8.862569,8.710429,8.381985,-9.010767,6.127577,4.524709,1.240123,4.060757,2.784480,-8.278311,8.277273,2.730640,8.156877,3.795069,-3.874027,4.427635,4.139437,4.390937,-8.275273,5.679883,5.509993,7.491401,6.952354,5.570281,0.397686,-5.383553,-3.794096,5.688719,-9.398084,6.510415,9.010560,7.326110,1.793537,4.517826,-7.568851,-2.737822,7.170338,-1.981687,-5.856712,8.143073,8.973214,-5.422069,5.810291,8.679774,-7.374580,-6.995454,8.220512,1.085208,-2.736690,-0.646316,6.892100,-1.732715,-8.095779,9.118129,-3.937602,-6.359115,-5.527989,-3.097617,6.764740,-1.908862,-5.023622,4.670337,-6.350422,7.965889,-3.575652,-7.805536,-3.220438,-3.491997,1.148504,7.202052,6.054134,-3.267845,-6.276591,4.842407,-7.772569,4.952004,5.265362,4.396914,0.739055,-3.814125,-0.347637,-2.675509,-0.091977,-7.495431,-4.782106,3.581809,0.146100,-7.250964,-3.534911,5.336365,3.792989,-8.856289,-0.095222,-9.993571,-9.803109,9.157122,5.459605,6.881516,-2.827821,-8.359602,0.789381,-9.172541,2.510434,-9.703584,6.620701,-4.791036,-5.042446,3.365532,-5.067541,9.986821,-8.197817,-1.873449,-4.658799,2.138951,7.331400,3.782243,-7.770599,6.930825,-0.325388,5.198488,-9.822207,-9.877814,-4.768892,2.611688,-4.650246,5.674238,8.883570,-3.458017,2.436200,-9.395033,1.150307,2.326220,-5.165226,5.708104,-6.107087,-8.774406,6.403018,-8.689764,-9.841457,-5.958845,-6.816530,2.541792],[4.909354,8.084397,-0.520360,1.305273,9.997765,0.929368,-7.001877,0.704206,4.648809,7.688511,-2.788018,3.576808,0.715648,9.817197,9.872376,0.633944,4.653329,-4.736739,-8.058068,8.799765,-2.849912,5.951203,-1.354612,-5.937114,-0.359326,-4.816033,9.362648,6.629605,8.542003,-7.043782,-4.074223,-6.848985,-5.099828,8.399548,-3.421851,-6.368202,2.413422,4.245122,-1.439924,3.367031,8.496081,-0.415990,6.124513,3.504978,-0.396105,-6.919520,9.908932,-2.307389,7.835588,7.209562,6.827929,-5.440831,2.930538,-1.145354,5.807713,7.186402,6.093327,3.740581,8.061914,9.563471,-1.896215,-1.789543,-4.289921,6.168578,-1.493502,-5.959842,0.972679,-4.211838,-6.469446,-9.885131,7.487570,4.320501,3.368960,4.414754,9.083776,2.982387,-1.213363,-6.235561,-5.744260,-1.318694,-9.464237,-5.523596,-2.024891,-2.898325,6.619857,-7.002456,-1.170934,0.541919,0.107835,7.085661,-4.921350,-7.322678,-6.165128,4.241538,8.828975,-5.547810,-0.195982,3.030215,9.612160,-3.778163,-3.472739,7.297528,-8.037825,8.384954,-9.076140,-8.370043,8.700689,3.253252,1.044529,-1.854045,7.977777,-8.328405,-0.443340,-6.359362,-9.340530,-1.577293,3.723637,4.760622,3.694823,3.310530,8.492766,-6.596707,2.691924,5.552757,-7.705647,9.849982,-0.719541,-8.598641,0.580409,-7.051453,5.319401,-3.256976,7.802014,-2.127963,-6.125710,-8.081464,2.337756,-6.489020,-2.479223,-8.762812,-4.635079,-8.930486,8.805174,1.472259,5.127856,-0.559601,-7.304135,-9.644868,0.845789,-1.179809,-5.981265,6.065710,2.068093,-9.830229,4.406707,8.786093,-6.462890,-8.812058,-2.341076,-6.563943,-7.963029,-9.816634,-2.446617,-7.626796,8.562198,9.521756,5.861161,9.134131,4.153378,-9.109161,-1.362475,-6.555804,-8.831941,3.992587,-2.473800,-3.823482,-9.118444,2.074720,6.779803,-4.897444,6.125778,9.816270,1.948005,5.916750,-4.077575,4.642186,1.808812,-4.762259,8.671771,-9.919461,6.209058,-1.058593,8.570203,-2.485942,2.870782,3.544664,1.254812,6.905555,-2.393121,0.573570,-8.614411,1.303544,-6.759490,7.586646,4.419118,2.792947,5.314069,0.124138,3.267828,0.218315,-3.822781,1.890021,0.914593,-4.234605,-0.823057,4.392043,4.922868,-7.734893,-7.476240,2.862794,-5.302372,-5.383603,-6.769176,-3.659745],[-5.255056,-6.440643,1.111629,-1.900462,-0.111312,-5.383350,-1.857491,0.829455,-6.464835,4.132727,-6.170280,5.210898,5.088800,-6.895444,9.313314,5.237985,-2.455619,-5.120689,-6.769421,0.018988,-3.880120,2.024181,0.996997,-1.968806,-7.504144,-1.674859,-0.610635,5.106223,9.392403,3.028785,3.648972,-4.130198,-8.208711,0.254338,4.226452,7.063759,-8.414294,-5.818468,5.892212,7.177191,-1.708789,-3.031191,4.233670,-5.204346,1.351458,5.226024,1.080089,7.379124,6.447092,-8.785748,9.399844,-0.485555,-4.717390,8.927242,4.699736,6.291126,-4.959960,-4.310053,-1.211294,-6.967245,-4.686248,-0.844326,-3.414201,9.702882,-8.700173,-3.009534,9.662183,9.941819,-2.218723,7.164157,3.602553,0.700403,2.811108,-9.513131,5.940021,2.043013,-4.328883,4.499747,0.159390,-7.914355,-5.201145,0.714926,6.589062,8.088720,4.243924,4.285043,2.382462,-7.134427,-1.627601,-7.008420,-6.610037,7.651717,6.996121,9.230780,9.722834,-6.315843,-3.210960,7.252935,-9.927432,9.275601,-3.586858,9.233040,-8.073084,-1.615935,-4.140306,-7.806499,-1.038923,2.577143,-0.293600,5.320357,6.365527,6.518710,4.116132,3.859477,8.423902,-5.832163,-9.412018,6.587544,1.058524,3.835990,9.496069,-3.247304,-3.218483,9.511289,-0.834557,-6.859753,4.944570,-5.634366,1.513992,-6.163495,-2.013883,-8.558697,-7.070709,2.527411,5.775379,9.388601,-4.239553,-2.153203,-6.793698,3.643969,-7.902947,-7.068877,1.139348,6.390808,-1.510788,5.993431,-5.042922,7.992151,-4.632168,-0.555643,-6.357956,-8.158156,-8.656746,5.786352,-6.478819,4.455057,-6.693883,-6.741995,-7.382360,-3.436613,-8.377650,-9.189389,4.171145,6.602035,-4.644589,4.960669,-3.146668,-5.259323,7.120751,6.051061,-0.640534,-9.593183,-9.875763,0.588261,-3.682456,8.690221,9.400458,0.677206,-4.441379,-5.843818,0.997937,4.113396,9.485322,-0.850659,0.984661,8.814853,-0.121082,-2.349707,-1.575505,-6.705072,-3.310598,0.237587,9.719059,-6.477329,-2.685597,-9.406765,5.893108,9.338947,3.568520,5.430740,4.364232,7.885179,-2.405716,-2.582900,1.258142,-3.885868,-1.434732,3.691671,-1.727689,2.812464,5.813469,-3.352352,2.430556,7.476810,1.755322,6.217183,0.567976,3.757396,8.188535,7.770157,-1.453964,-3.860540,7.394798,-9.487377],[0.621071,-7.905305,1.708982,8.618786,-4.374838,-9.694348,6.084358,-6.346750,-6.349838,8.740008,4.607637,-7.303047,-8.594232,2.701049,-5.858133,8.186698,4.294337,-7.545991,8.948121,-6.565775,3.624306,0.412373,-9.842212,0.827930,4.099781,-2.367120,7.124275,-7.105228,2.169185,-7.312970,7.259915,-6.384877,5.795587,-4.478502,-3.945427,4.114102,5.317002,6.515577,-5.922921,-8.385539,8.443615,2.291468,5.793590,-2.836764,5.169006,-5.720464,-9.094486,2.772719,-8.460420,-4.955064,-1.861183,-9.814299,5.366880,-6.799012,-4.992729,7.529316,3.667122,6.083609,7.331410,-0.885291,-5.647264,8.772419,1.151383,-9.298951,-0.869275,-8.614519,-4.085182,-9.686874,-9.285436,-1.497979,9.885587,-8.801549,-0.863201,1.773438,7.592259,-8.986937,3.660568,0.344192,-4.960953,-2.243841,-8.635959,-3.631838,5.053689,-6.448622,0.957089,-2.494681,8.640697,8.613242,-5.342516,9.725044,-7.782102,6.217493,9.212624,-5.536246,9.597883,2.481829,-4.745167,-0.229420,-2.400775,7.514867,2.137777,1.994808,0.350286,-4.025448,2.016547,3.532098,5.132073,8.212722,2.792165,4.719671,-0.296292,7.559864,-1.755487,-4.669566,-5.860661,-5.475512,-4.966111,-2.608872,-4.321412,4.850743,-3.709566,-1.253401,-8.591180,6.141973,0.429799,-2.123594,8.466788,-6.259121,7.898432,-3.157149,4.932685,-0.131785,-9.964450,3.329662,2.872636,3.313803,3.178427,-1.615876,5.954944,-7.562056,-7.637232,5.383578,-0.510498,6.990137,-1.024211,4.857013,-9.662384,5.888839,0.030685,5.012472,-6.309366,-0.233108,-6.835082,0.994535,-8.488804,5.385869,-2.564913,-2.374862,-2.518995,-8.452287,-3.910945,-6.564406,7.909665,7.189343,-6.059349,-3.566229,6.475849,8.539414,7.417830,-7.724197,-1.659503,-4.660622,-8.975419,6.785673,-8.698089,7.300282,8.099535,4.499504,-3.205025,3.424234,0.359536,5.659979,9.517489,0.329770,1.016495,-5.051746,0.882326,-6.511813,-4.112189,-7.503397,6.659837,0.567243,-1.578455,-8.809697,2.888282,8.928018,1.472293,-1.685676,1.219439,7.977210,5.750431,-9.357821,-3.797659,-9.270860,-3.939917,2.752927,-6.785177,2.599545,0.679552,5.124182,3.153919,7.782357,8.691245,9.307567,0.170794,3.828639,5.639881,5.998843,-1.688984,-2.416088,3.121566,6.796631,-0.114523,-4.283044],[-8.111486,-2.389039,-2.492371,-3.434025,2.004833,1.089961,-7.536995,7.270869,-1.001316,6.559748,-2.259694,-4.396466,9.595928,-5.683281,-1.646348,4.667750,-0.868960,-3.041872,2.361390,6.516010,8.083868,-4.785302,2.082213,9.577296,-7.029886,8.858709,-0.137228,-3.587968,3.096155,6.335224,2.608590,-1.868843,-1.791849,2.732096,4.085981,7.565107,3.065153,-4.113471,4.363378,-9.470553,-5.430797,4.226423,1.374795,-7.347244,-7.719525,-6.512459,-6.381284,3.132078,-7.581441,-2.503702,6.208519,-5.143312,8.480440,-3.462087,-3.856769,7.054422,-5.908539,7.152983,-0.498832,-6.821490,5.720695,6.554520,5.160156,-4.749870,0.950728,2.741273,-9.668100,0.872370,-4.576909,4.444717,-1.699015,1.165761,3.842887,4.473110,-6.310645,-3.040593,-6.957718,9.028021,-4.938267,2.076319,-4.003102,5.271664,-1.594860,4.453754,-7.169516,2.085467,3.575368,3.854770,4.602094,-4.053608,-0.894609,0.692477,-8.439712,-6.347947,8.061052,-5.897901,-3.685148,-7.569535,-4.542233,3.901033,-9.969142,-7.615071,8.428023,-0.231386,-4.014921,-5.150589,6.137926,7.162216,-7.863341,0.497038,-9.318148,3.854145,8.988962,8.789210,2.114614,-6.948011,-7.673004,5.784196,-3.350720,-5.363091,3.945141,0.653131,5.778065,-6.191320,-8.768567,7.229928,-4.588640,6.876281,-9.397126,0.820660,5.596001,-5.768695,-4.923174,8.443634,9.074379,6.428717,-2.239121,-1.428965,-2.654598,8.516292,-8.241391,4.899196,3.902734,-7.346384,0.735107,-8.506657,1.683765,-2.600508,-8.656876,-1.631001,-1.295195,-1.911738,-2.004693,-5.594040,-1.434292,7.265804,-1.906860,5.351703,7.391785,7.221999,4.093493,4.899907,-1.954488,9.887534,3.029545,0.019159,8.738555,-8.311125,-5.301045,-3.679538,-4.123697,8.201791,-8.269447,-1.722191,-3.638692,6.683803,1.301701,-8.038042,-7.228368,0.529293,7.004357,4.366822,-6.839592,-7.591968,-7.554452,7.478111,-7.529948,6.195398,8.391968,-8.878351,-2.094548,-1.891645,-3.169456,1.420707,-2.137873,-6.754706,8.897881,-5.961676,1.457072,-8.882369,-5.893360,-2.764323,-8.651679,5.426830,4.436239,6.550819,0.294452,-8.234009,-6.706199,4.957536,-0.572527,-7.729222,8.921578,9.342303,6.393362,0.548662,-7.796977,-9.629358,7.214295,-1.201142,4.947811,-2.554685,6.748687,-1.365484],[7.492320,-4.574287,1.997188,4.542360,-2.348318,4.997228,0.801555,4.470290,-6.169574,-7.570183,8.055705,1.300077,3.085961,-5.606039,-3.951334,-6.668972,-2.990774,8.177614,-6.616782,-1.613266,3.897035,-1.423606,-0.129838,-4.756682,-4.226942,8.446076,-2.749055,-3.707015,-4.663600,-5.940623,-5.893021,-9.963701,-5.705143,-3.881120,8.386083,2.932614,9.809122,1.860324,3.985668,-4.980249,-4.710186,7.592915,-2.025963,-6.733172,-0.013754,0.374155,-4.259016,4.432419,0.766983,8.939421,8.539253,-3.683544,-5.618458,-8.325448,1.939169,2.958142,-5.965630,-0.907450,3.546234,-6.412118,-3.863277,-7.940810,3.449056,7.667653,1.357753,3.469683,3.959802,1.591798,6.332449,2.222195,6.954533,9.385078,0.117204,-7.841938,-2.605777,9.865991,6.817171,4.364325,1.173406,6.585998,8.772731,6.792240,-2.406227,8.989141,5.465553,8.590949,7.106959,-3.633428,-9.787567,6.866610,6.371662,6.329942,-0.533606,-0.744241,6.222708,3.300937,-2.598961,7.889437,4.819820,2.060959,5.744575,0.499885,7.657087,-6.209894,5.177473,-4.650161,-9.763835,6.547521,4.610482,-6.757439,6.253089,8.936421,8.699296,6.809006,3.133126,1.001951,8.792620,-3.628076,-9.663772,-0.281696,-4.984955,4.618909,2.122019,-2.970984,-9.726355,9.079952,-1.139172,5.672447,-1.227508,-8.347783,0.192743,-9.866046,1.224250,7.893175,6.967989,2.080568,2.760842,-1.812678,1.984513,1.268211,-9.268768,3.187332,9.848984,-0.595069,8.291926,-8.114539,-9.603760,2.770648,0.404932,3.109159,2.019916,-8.192498,6.400979,2.726389,6.583217,-9.142202,1.915043,-2.727695,9.265850,-7.310708,-4.480419,4.162543,-3.331678,-4.822620,-9.261918,-2.340359,-1.832949,-0.464479,-9.713502,-8.859375,-3.151675,3.496687,-4.551380,-2.913588,-1.572342,4.979705,7.361224,3.214501,9.038477,3.230647,2.725970,4.076237,0.429559,-1.650205,7.263551,2.633373,4.952678,-4.230619,6.814278,4.163462,6.970948,-4.501030,-2.664523,-8.803262,4.174740,1.610692,-2.960784,-6.729598,-6.069410,3.077913,0.692881,9.961730,1.667155,-5.205785,-6.173406,-1.865176,-8.792905,1.978419,-5.364411,3.796206,4.885202,-6.261349,0.844302,9.995712,2.795555,-9.316506,-4.408942,-2.762791,9.047319,-4.767450,-2.268545,2.520562,8.818266,5.692786]], dtype = "float64")#candidate|4373|(8, 224)|const|float64
call_4371 = relay.TupleGetItem(func_4335_call(relay.reshape(const_4372.astype('float64'), [1, 12, 8]), relay.reshape(const_4373.astype('float64'), [1792,]), ), 2)
call_4374 = relay.TupleGetItem(func_4338_call(relay.reshape(const_4372.astype('float64'), [1, 12, 8]), relay.reshape(const_4373.astype('float64'), [1792,]), ), 2)
var_4378 = relay.var("var_4378", dtype = "float64", shape = (8, 224))#candidate|4378|(8, 224)|var|float64
bop_4379 = relay.less_equal(const_4373.astype('bool'), relay.reshape(var_4378.astype('bool'), relay.shape_of(const_4373))) # shape=(8, 224)
bop_4385 = relay.logical_xor(call_4363.astype('int64'), const_4372.astype('int64')) # shape=(10, 96)
bop_4388 = relay.logical_xor(call_4365.astype('int64'), const_4372.astype('int64')) # shape=(10, 96)
output = relay.Tuple([call_4344,call_4352,var_4364,call_4371,bop_4379,bop_4385,])
output2 = relay.Tuple([call_4345,call_4353,var_4364,call_4374,bop_4379,bop_4388,])
func_4391 = relay.Function([var_4364,var_4378,], output)
mod['func_4391'] = func_4391
mod = relay.transform.InferType()(mod)
var_4392 = relay.var("var_4392", dtype = "float64", shape = (462,))#candidate|4392|(462,)|var|float64
var_4393 = relay.var("var_4393", dtype = "float64", shape = (8, 224))#candidate|4393|(8, 224)|var|float64
output = func_4391(var_4392,var_4393,)
func_4394 = relay.Function([var_4392,var_4393,], output)
mutated_mod['func_4394'] = func_4394
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4412 = relay.const(1.375082, dtype = "float64")#candidate|4412|()|const|float64
var_4413 = relay.var("var_4413", dtype = "float64", shape = (8, 15, 9))#candidate|4413|(8, 15, 9)|var|float64
bop_4414 = relay.floor_mod(const_4412.astype('float64'), var_4413.astype('float64')) # shape=(8, 15, 9)
func_1799_call = mod.get_global_var('func_1799')
func_1803_call = mutated_mod.get_global_var('func_1803')
var_4418 = relay.var("var_4418", dtype = "uint64", shape = (1, 150))#candidate|4418|(1, 150)|var|uint64
call_4417 = func_1799_call(relay.reshape(const_4412.astype('uint64'), []), relay.reshape(var_4418.astype('uint64'), [3, 5, 10]), )
call_4419 = func_1799_call(relay.reshape(const_4412.astype('uint64'), []), relay.reshape(var_4418.astype('uint64'), [3, 5, 10]), )
var_4424 = relay.var("var_4424", dtype = "uint64", shape = (3, 150))#candidate|4424|(3, 150)|var|uint64
bop_4425 = relay.logical_xor(var_4418.astype('uint64'), var_4424.astype('uint64')) # shape=(3, 150)
func_4151_call = mod.get_global_var('func_4151')
func_4153_call = mutated_mod.get_global_var('func_4153')
call_4438 = func_4151_call()
call_4439 = func_4151_call()
uop_4441 = relay.sinh(call_4417.astype('float64')) # shape=(3, 5, 10)
uop_4443 = relay.sinh(call_4419.astype('float64')) # shape=(3, 5, 10)
func_4042_call = mod.get_global_var('func_4042')
func_4044_call = mutated_mod.get_global_var('func_4044')
call_4446 = func_4042_call()
call_4447 = func_4042_call()
bop_4448 = relay.multiply(bop_4425.astype('int8'), var_4418.astype('int8')) # shape=(3, 150)
func_4191_call = mod.get_global_var('func_4191')
func_4192_call = mutated_mod.get_global_var('func_4192')
call_4457 = relay.TupleGetItem(func_4191_call(), 0)
call_4458 = relay.TupleGetItem(func_4192_call(), 0)
bop_4464 = relay.floor_mod(uop_4441.astype('float32'), const_4412.astype('float32')) # shape=(3, 5, 10)
bop_4467 = relay.floor_mod(uop_4443.astype('float32'), const_4412.astype('float32')) # shape=(3, 5, 10)
func_3887_call = mod.get_global_var('func_3887')
func_3889_call = mutated_mod.get_global_var('func_3889')
call_4472 = relay.TupleGetItem(func_3887_call(), 0)
call_4473 = relay.TupleGetItem(func_3889_call(), 0)
func_541_call = mod.get_global_var('func_541')
func_545_call = mutated_mod.get_global_var('func_545')
const_4479 = relay.const([[0.931887,-1.709671,3.904146,7.422096,-7.510885,7.894921,6.854677,8.948003,-6.687264,9.439079,-5.153758,2.135468,6.626192,-3.539025,-3.670690,-0.815516,-2.712830,4.929171,3.496570,7.822456,2.761552,3.504527,-5.286560,-5.122270,-3.540764,2.659867,-6.657900,7.798793,8.152124,1.330342,7.834743,9.740070,7.118773,-3.411819,-1.399986,-9.315355,-2.523524,-3.953933,9.684258,4.872582,3.136393,-3.537107,5.341058,5.858818,5.133011,-9.653688,-7.937421,-2.978874,-8.211585,-6.165722,-0.027271,7.908889,-0.576467,-7.030197,-6.481136,-8.163105,-4.861793,9.491371,-6.946391,0.488752,-6.935930,5.565402,1.335154,-8.159484,-8.061609,-9.206966],[3.942123,7.946051,-7.410735,7.775399,2.838427,-1.013830,-1.892992,4.823134,-5.325900,4.847339,-9.004854,1.616859,-0.039564,-4.365087,9.278080,-0.976243,-7.162728,-8.987756,4.602520,4.364991,8.153912,-8.402806,-6.958759,0.274915,-7.663478,5.002443,0.519014,7.616508,-5.065788,-4.649615,-9.385823,-8.112683,-6.498049,4.456313,4.719737,-1.236136,-0.827860,-1.436256,-8.457028,3.533706,-0.353223,7.863338,-9.864524,-5.626329,-5.142523,-8.420363,5.666188,7.575621,0.396250,5.767459,-3.895366,-7.575941,-4.074846,5.570106,-4.324528,-9.260590,2.605863,-2.854769,-0.368726,-7.182688,8.566579,1.131171,1.695746,-3.462168,-0.275685,6.204948],[5.960299,5.315529,3.673520,-9.410002,-2.006839,-9.111313,-8.988212,1.857234,0.038627,-2.115500,-5.086836,2.033789,-9.623654,-4.813519,2.362582,9.778429,5.406153,0.016344,1.799302,-4.295297,-3.365335,2.304915,3.775813,7.102619,-6.285810,2.336861,3.255966,4.199137,-6.949127,-1.462177,2.556065,-0.426838,0.174712,6.897058,0.303286,-1.832760,6.248497,4.715666,-0.633067,9.405062,-1.411401,3.311070,-6.081608,1.002391,-1.148818,-6.814779,-0.937783,6.871052,-8.066804,-1.159953,-0.745202,7.424787,6.785569,6.670493,7.162291,-0.339037,4.879569,-9.355082,-7.792541,8.462615,2.922960,5.506865,-0.906968,8.368864,4.271180,9.665806],[-6.709426,2.703016,7.083098,1.770550,-8.132249,-3.566692,9.882948,7.165209,-2.151716,8.894677,-8.632231,3.686803,7.795272,-0.569510,0.620315,-6.803440,-8.253872,3.250368,-2.499000,6.145314,-6.532907,9.302219,-9.410014,-7.196545,4.680616,-3.315754,-0.863662,-7.381485,1.541660,-5.850116,-2.987931,-6.100502,5.083023,-1.211945,1.228563,-2.672997,7.383033,5.561958,-7.903537,4.603867,6.691361,6.980496,6.948954,2.337535,-4.248011,3.192279,3.819106,-6.001793,8.940701,-1.262449,-5.104948,6.779975,-4.431629,4.891036,-7.798862,-1.139230,-8.568749,3.755209,-5.287862,-3.594565,-6.433987,4.027178,-4.810581,-3.438292,4.105261,-5.028210],[8.924790,0.737360,-4.979831,-4.638298,4.910239,1.252843,7.123922,-8.162866,3.049539,-4.614287,-3.467690,0.621225,5.728308,5.616410,3.602051,-3.133887,9.528277,-9.078966,-9.948156,-9.012534,-4.761518,-0.907429,-0.912676,4.437165,9.205894,0.798470,7.540225,-6.409780,1.260827,2.757536,4.202961,9.120293,-9.754917,7.701732,0.310658,-6.545629,1.178409,8.517399,1.440400,2.444175,-5.143829,5.238857,-6.014060,9.400534,5.939627,-4.760984,-3.412271,6.928832,1.214369,-0.680342,-6.475465,-3.180780,0.929903,2.159716,-6.252065,7.574456,9.684683,1.120861,1.703400,1.918774,7.997558,8.569518,-9.150984,-7.157646,8.741168,-1.397476]], dtype = "float32")#candidate|4479|(5, 66)|const|float32
call_4478 = func_541_call(relay.reshape(const_4479.astype('float32'), [2, 15, 11]), relay.reshape(const_4479.astype('float32'), [2, 15, 11]), )
call_4480 = func_541_call(relay.reshape(const_4479.astype('float32'), [2, 15, 11]), relay.reshape(const_4479.astype('float32'), [2, 15, 11]), )
uop_4503 = relay.sqrt(uop_4441.astype('float32')) # shape=(3, 5, 10)
uop_4505 = relay.sqrt(uop_4443.astype('float32')) # shape=(3, 5, 10)
bop_4509 = relay.not_equal(uop_4503.astype('bool'), relay.reshape(var_4418.astype('bool'), relay.shape_of(uop_4503))) # shape=(3, 5, 10)
bop_4512 = relay.not_equal(uop_4505.astype('bool'), relay.reshape(var_4418.astype('bool'), relay.shape_of(uop_4505))) # shape=(3, 5, 10)
output = relay.Tuple([bop_4414,call_4438,call_4446,bop_4448,call_4457,bop_4464,call_4472,call_4478,const_4479,bop_4509,])
output2 = relay.Tuple([bop_4414,call_4439,call_4447,bop_4448,call_4458,bop_4467,call_4473,call_4480,const_4479,bop_4512,])
func_4520 = relay.Function([var_4413,var_4418,var_4424,], output)
mod['func_4520'] = func_4520
mod = relay.transform.InferType()(mod)
var_4521 = relay.var("var_4521", dtype = "float64", shape = (8, 15, 9))#candidate|4521|(8, 15, 9)|var|float64
var_4522 = relay.var("var_4522", dtype = "uint64", shape = (1, 150))#candidate|4522|(1, 150)|var|uint64
var_4523 = relay.var("var_4523", dtype = "uint64", shape = (3, 150))#candidate|4523|(3, 150)|var|uint64
output = func_4520(var_4521,var_4522,var_4523,)
func_4524 = relay.Function([var_4521,var_4522,var_4523,], output)
mutated_mod['func_4524'] = func_4524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mod.get_global_var('func_4151')
func_4153_call = mutated_mod.get_global_var('func_4153')
call_4548 = func_4151_call()
call_4549 = func_4151_call()
output = call_4548
output2 = call_4549
func_4552 = relay.Function([], output)
mod['func_4552'] = func_4552
mod = relay.transform.InferType()(mod)
mutated_mod['func_4552'] = func_4552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4552_call = mutated_mod.get_global_var('func_4552')
call_4553 = func_4552_call()
output = call_4553
func_4554 = relay.Function([], output)
mutated_mod['func_4554'] = func_4554
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4570 = relay.const([[[-1],[-4],[-9],[-10],[1],[-2],[-4],[4],[2]],[[7],[7],[-2],[-5],[-1],[8],[7],[-4],[-10]],[[3],[10],[10],[10],[8],[-4],[-6],[-4],[8]],[[7],[8],[-10],[-1],[6],[6],[-10],[8],[3]],[[-2],[3],[-9],[-10],[-7],[9],[2],[-9],[-1]],[[7],[-6],[9],[2],[10],[-9],[-7],[-8],[-3]],[[-7],[-3],[7],[2],[-5],[10],[-1],[-7],[-3]],[[-8],[-6],[-5],[3],[-8],[-4],[9],[3],[-8]],[[3],[10],[4],[-3],[-10],[-10],[9],[-7],[8]],[[1],[-6],[4],[7],[-3],[-5],[-1],[-2],[6]]], dtype = "int8")#candidate|4570|(10, 9, 1)|const|int8
const_4571 = relay.const([[[1,-2,-8,-10,-5,9,-10,5],[4,7,-2,-8,-1,-5,-8,-8],[4,1,10,-7,10,3,10,1],[-1,3,1,8,6,10,-2,-7],[8,-8,-1,-5,10,10,5,-8],[-10,-10,6,4,1,8,-4,-2],[2,1,5,-4,-4,-7,-6,5],[-7,8,3,7,-7,9,-9,2],[-1,3,-8,2,-1,-1,7,-2]],[[3,10,-1,-1,-2,-2,3,10],[-8,1,2,-8,-4,10,4,-8],[10,-4,4,1,-8,-5,-6,7],[2,10,1,8,4,9,-8,9],[-4,2,10,2,-6,-1,3,-8],[5,-10,-5,-6,-4,1,1,-3],[2,-2,9,-4,-2,9,4,2],[-5,-10,1,-1,10,-1,9,5],[-7,8,3,-1,9,-10,-7,-4]],[[7,7,9,-6,-10,-9,1,2],[3,4,-4,-10,-4,5,5,8],[-3,-1,-2,1,-4,-1,-4,-4],[7,-2,-2,-1,5,2,5,-3],[6,3,2,10,-2,-2,-7,5],[2,-2,-4,-3,-1,8,-6,6],[-4,7,-3,-4,1,-3,-2,-10],[-10,1,7,10,10,4,8,5],[1,9,-3,8,9,-10,-10,5]],[[5,3,-1,-2,10,8,-7,9],[7,1,9,3,1,-8,6,-10],[-1,-4,5,-5,3,-2,-6,-8],[8,-4,7,6,-1,-8,8,-1],[-2,-3,-3,3,-2,4,-5,-1],[-2,-2,4,-8,10,3,5,-9],[1,7,8,7,4,-8,-8,3],[-5,10,3,-6,3,3,3,8],[-3,7,-4,3,-10,8,-1,-5]],[[-6,-8,2,-3,3,-4,9,-4],[6,6,-6,7,-2,-1,5,-3],[-2,9,-5,2,8,8,-9,-10],[4,4,-6,5,5,3,5,-1],[7,4,4,-3,1,2,4,4],[9,-7,8,-3,1,2,-3,4],[5,-3,-1,3,-10,3,-6,-1],[6,10,-3,8,2,-9,-3,7],[10,-10,8,4,-10,-1,5,-3]],[[-1,6,7,-9,3,4,-10,5],[2,-10,9,-6,2,-5,-1,-7],[-1,-8,6,9,-5,5,-3,5],[8,-6,9,5,-9,-8,1,3],[-10,-2,8,6,-4,1,5,-5],[-1,-9,-2,4,9,4,-7,3],[7,6,7,-1,4,2,-7,-10],[9,1,-6,-7,-6,4,-7,3],[-4,-1,8,4,3,-1,5,1]],[[3,-9,4,5,-4,-3,7,5],[4,2,8,-6,-4,-5,10,-4],[5,-1,7,1,6,2,-2,5],[-3,-8,3,-5,-10,-5,-4,3],[-10,2,-2,-1,-9,-2,-10,-6],[3,5,9,10,-8,-2,-4,6],[1,1,3,6,5,-2,6,-7],[6,-3,-9,6,10,4,5,5],[-7,3,-10,-1,-6,9,3,-1]],[[5,-3,8,4,1,1,-7,4],[-5,-6,-6,2,-10,-6,-5,3],[2,4,7,-8,-3,4,7,6],[7,-9,-8,8,9,2,-2,4],[3,4,4,-10,-10,9,-4,-9],[6,5,8,2,9,1,-1,3],[-1,-5,8,-3,10,6,-6,7],[5,-4,7,-10,1,6,-6,-7],[-6,3,-10,2,8,-5,7,6]],[[4,-4,-5,-5,-6,10,2,1],[4,9,2,-5,3,7,-2,9],[3,6,10,6,-4,9,8,3],[-8,5,6,-2,-7,-9,10,-6],[-3,-2,-6,10,7,-8,-1,-6],[-5,-9,-10,-10,-8,8,6,2],[6,4,-2,-6,2,-5,-4,4],[-1,-10,1,-8,10,-10,9,8],[8,9,-4,1,8,-1,-7,2]],[[7,9,-4,9,-4,-2,3,-10],[10,2,-4,-2,-9,5,-9,7],[10,3,4,2,3,3,-2,6],[2,-7,-9,7,1,7,10,5],[-2,8,10,-6,-1,-8,1,6],[10,-8,-10,10,-6,3,-10,7],[-7,-8,2,10,2,-8,-10,6],[6,10,8,9,-6,1,-1,10],[5,4,3,-1,-2,7,1,-3]]], dtype = "int8")#candidate|4571|(10, 9, 8)|const|int8
bop_4572 = relay.minimum(const_4570.astype('int8'), const_4571.astype('int8')) # shape=(10, 9, 8)
func_3069_call = mod.get_global_var('func_3069')
func_3071_call = mutated_mod.get_global_var('func_3071')
var_4583 = relay.var("var_4583", dtype = "float64", shape = (462, 1))#candidate|4583|(462, 1)|var|float64
call_4582 = relay.TupleGetItem(func_3069_call(relay.reshape(var_4583.astype('float64'), [6, 11, 7])), 2)
call_4584 = relay.TupleGetItem(func_3071_call(relay.reshape(var_4583.astype('float64'), [6, 11, 7])), 2)
output = relay.Tuple([bop_4572,call_4582,var_4583,])
output2 = relay.Tuple([bop_4572,call_4584,var_4583,])
func_4616 = relay.Function([var_4583,], output)
mod['func_4616'] = func_4616
mod = relay.transform.InferType()(mod)
var_4617 = relay.var("var_4617", dtype = "float64", shape = (462, 1))#candidate|4617|(462, 1)|var|float64
output = func_4616(var_4617)
func_4618 = relay.Function([var_4617], output)
mutated_mod['func_4618'] = func_4618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3246_call = mod.get_global_var('func_3246')
func_3247_call = mutated_mod.get_global_var('func_3247')
call_4622 = relay.TupleGetItem(func_3246_call(), 0)
call_4623 = relay.TupleGetItem(func_3247_call(), 0)
output = relay.Tuple([call_4622,])
output2 = relay.Tuple([call_4623,])
func_4624 = relay.Function([], output)
mod['func_4624'] = func_4624
mod = relay.transform.InferType()(mod)
output = func_4624()
func_4625 = relay.Function([], output)
mutated_mod['func_4625'] = func_4625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
call_4803 = relay.TupleGetItem(func_3442_call(), 0)
call_4804 = relay.TupleGetItem(func_3444_call(), 0)
output = call_4803
output2 = call_4804
func_4807 = relay.Function([], output)
mod['func_4807'] = func_4807
mod = relay.transform.InferType()(mod)
mutated_mod['func_4807'] = func_4807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4807_call = mutated_mod.get_global_var('func_4807')
call_4808 = func_4807_call()
output = call_4808
func_4809 = relay.Function([], output)
mutated_mod['func_4809'] = func_4809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3425_call = mod.get_global_var('func_3425')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_4818 = relay.TupleGetItem(func_3425_call(), 0)
call_4819 = relay.TupleGetItem(func_3426_call(), 0)
func_3394_call = mod.get_global_var('func_3394')
func_3398_call = mutated_mod.get_global_var('func_3398')
const_4824 = relay.const([[-7.161729,9.614511,-0.548003,8.999169,2.568745,2.365613,-9.878899,-9.239133,6.207536,-4.369428,-2.697490,5.110837,-2.748666,-5.900035,-6.479879,-4.662346,-8.468125,3.834040,9.411344,-8.091245,-6.934455,-3.741875,-6.321962,-8.471142],[7.429825,-6.742462,3.968831,7.782063,-1.557250,-6.614109,6.265700,-6.004979,-5.203151,-7.955647,-2.052983,-8.501664,-9.459116,-9.859250,6.614062,4.759381,8.169528,-5.767318,8.690076,-9.304880,-5.446863,-5.508612,8.099568,0.522759],[-1.468166,5.027788,3.190039,-9.736523,-1.354081,-3.567620,6.470881,3.999760,-7.597362,2.562950,5.463405,1.011082,-6.379444,9.280190,-7.415313,6.488568,-4.402908,-5.015377,-2.824629,-9.491283,2.461903,3.576260,-0.937673,3.490584],[-3.255549,-8.925009,-5.872522,4.873114,-6.523804,-6.464634,-1.339389,7.107436,6.917895,-2.840007,-4.396562,-9.929037,0.845785,-4.699379,-8.081501,-1.049399,-9.665241,7.248714,0.298521,3.203438,2.704046,-6.297698,4.092543,8.329171],[5.099335,5.006859,-8.975143,6.450529,9.176755,3.052708,8.179627,-7.030160,-7.416672,-9.644049,8.721397,7.580227,-4.408007,-2.841066,-8.086882,-9.260082,9.358446,3.264670,5.401971,8.839387,7.462308,1.111777,4.314962,-8.417851],[2.501118,0.170865,0.747456,9.292975,-9.985970,5.053810,6.317594,5.556600,3.807539,-3.790327,7.906343,7.533726,-2.644857,-8.077556,6.537942,-0.600758,6.963167,4.021197,-1.479992,-6.808135,-0.480753,0.670003,8.778252,-4.817056],[-0.441123,-8.935079,-6.449737,-0.200405,-3.616006,-4.840777,3.266025,-0.413979,-7.513088,1.101635,-3.551694,-7.957898,-6.133733,4.123556,-3.311733,-9.392171,-1.913890,-6.075377,5.412500,-0.471279,6.217313,4.841106,2.119477,-2.222394],[3.723678,-6.644280,7.103624,-0.779134,7.292744,-8.213427,0.692354,-2.209754,8.885297,-3.045667,3.573670,-5.381022,-1.337391,2.348394,6.636480,3.413086,-5.831629,-1.897130,-2.850079,1.608021,-8.902770,3.012554,-0.727673,-9.922342],[2.134689,-3.010275,2.831762,9.992190,-1.831971,2.120250,-5.221618,-1.956391,-9.713145,6.205374,2.904433,-1.092292,-2.851726,2.644758,5.256517,-0.903137,3.117152,3.770100,4.033682,-1.398214,-7.597896,5.897617,-9.335318,3.543196],[-3.680462,-4.192123,1.417991,-7.304027,-6.250599,-3.852046,3.361487,-5.100940,-2.139455,4.108408,6.977773,2.834664,3.183806,-9.012768,0.622649,-7.681671,-4.584858,2.665753,-5.358259,0.435606,-0.822065,-0.048702,-0.186058,-3.704624],[1.952008,-8.458269,5.252603,-4.576684,-0.721122,-6.975938,-8.842565,-8.395524,8.540703,-7.286722,9.915058,7.061055,9.365857,0.785267,-0.803908,-2.648833,8.783039,-1.595263,5.788933,1.166990,-1.197961,7.213986,-0.670873,6.318851],[5.495699,2.478087,-0.846497,-6.247063,0.121834,7.473489,2.492547,5.373862,3.077634,2.356819,-5.255658,-8.125131,0.933234,3.077835,0.857168,2.562646,-4.637150,5.457104,6.908780,-6.295098,7.534144,4.322433,-2.001066,2.020393],[-6.008735,-3.802981,2.021459,3.236523,-9.047819,4.917018,-4.289364,-7.458170,5.589743,2.927888,-9.968786,7.514133,3.816055,-4.752384,5.389070,4.536596,2.410912,-2.982003,0.052933,9.394842,-3.851465,4.290839,9.439236,1.154404],[-3.422500,-7.046928,4.219917,-4.455429,-8.458029,-9.145651,8.163862,9.583482,4.848152,7.530218,-8.986983,-0.645238,1.691981,8.407401,8.266457,-3.640115,1.548109,-3.904991,-7.289429,2.958570,-2.510153,0.451737,-9.631493,-7.302583],[-6.644076,-1.430541,-7.391074,-6.846098,-3.934414,-1.003726,-5.003495,5.406302,0.034293,-9.743244,0.618241,-0.286948,5.915791,7.396696,4.286099,2.685588,3.237729,-0.982572,-9.874378,-5.355676,-6.750407,9.392148,7.444027,-7.609295],[-2.172485,-4.547345,-5.508510,7.733741,-4.087258,9.950653,-4.400005,-2.763710,-1.079214,6.984455,8.833788,-8.023849,1.422044,-7.920841,-2.681340,2.761424,-6.430390,-7.046913,0.685818,-0.806981,-5.689591,9.845360,7.165208,0.278034],[-5.319396,-6.557998,-3.902025,3.750739,-2.006386,-8.038905,-2.110053,-4.933011,2.420988,5.919353,-4.541779,1.866180,-9.215546,-1.615875,-2.808523,1.660284,-3.291160,-2.469763,-2.104048,-6.528309,2.134327,-6.224353,5.741055,-2.732077],[0.660363,2.546807,-2.864939,8.985736,3.292745,-4.676521,9.098567,-3.763384,0.142932,-7.953556,-3.899684,8.823364,1.359518,0.434996,-3.344898,4.858233,1.097377,4.474015,5.649015,-2.477464,-9.190014,-9.753240,8.082336,-0.478889],[1.549709,-2.038797,0.553359,-1.596366,0.359947,3.674123,2.318821,-5.537884,7.895565,-7.059115,-3.238057,9.801075,2.359561,-2.248379,-7.570154,-3.362214,7.588432,0.567014,-3.881768,2.712268,0.547794,6.190342,8.609601,-9.932549],[7.290039,-3.361319,6.392212,0.831157,5.314203,5.856691,-5.486389,-6.610959,9.190330,-6.262041,5.286043,3.499152,8.369946,8.834003,-9.641165,9.385840,0.553085,5.647911,-9.599976,8.145878,-2.591518,8.510480,-2.262997,-0.468791],[-6.235478,1.187817,-6.154077,-0.344248,2.229853,3.743715,8.940156,-8.250729,-9.835972,-3.096811,-6.222178,-8.316374,-6.300638,8.443729,5.308228,-2.361935,-0.602208,8.539979,6.952474,-2.014563,-1.671730,-6.801146,2.475588,-1.911321],[8.819301,-4.463600,-4.245966,-4.222664,-0.452661,-9.152728,-0.213133,5.606570,-7.632413,1.731593,0.949753,7.590097,1.057832,7.383112,-5.904866,-3.871989,-0.032257,9.354805,-9.861440,-3.213216,8.226009,-6.571561,2.715191,-8.487170],[7.424812,9.243174,-3.859614,-4.670789,9.758257,-3.722715,0.651728,6.855701,9.456767,-0.919943,-3.836662,-5.074919,4.664658,4.039895,9.502907,2.582635,-1.475484,8.231761,8.585638,-0.268435,8.432890,-7.830759,-7.871920,0.576707],[-4.912400,0.355278,-5.958757,-7.072538,-7.938448,-4.014078,4.817103,-8.048379,9.717206,-6.456045,7.285397,9.505750,9.652379,6.452111,4.474401,1.458612,8.300493,-0.274231,1.951562,5.578269,1.178249,5.969090,0.552255,-7.314306],[3.397875,7.103055,0.785659,0.124223,-5.931435,-2.364584,7.565051,4.311446,-7.453315,-0.186834,-7.159543,-7.832039,-9.735107,9.346679,4.787181,-6.589061,-0.073363,-9.954049,-0.689978,0.423807,-2.250111,-5.759785,8.423429,-7.557472],[7.139785,4.719554,6.306549,7.926732,3.242284,9.653440,-3.851484,0.777798,-2.951000,4.513603,-1.641600,9.824567,-5.486234,-4.927439,-0.402640,-8.667561,-0.092765,8.791512,2.786364,4.919162,9.540807,9.339984,-7.784751,2.903641],[-4.262457,8.266459,9.874202,-5.254472,-1.790207,5.090971,3.463257,-6.288268,-0.747101,7.525324,1.164781,-0.966952,-6.529030,-5.314371,3.321538,7.932795,-3.656899,-6.351547,0.057674,-8.819144,2.496744,-4.058626,3.516913,-4.003846],[2.495756,3.399254,-1.538689,8.492508,0.399793,3.722650,3.311997,4.693914,5.322438,2.472416,-7.072417,-3.953085,-4.269423,-6.290193,-9.560367,3.310026,6.524856,-0.630103,-4.812448,-9.642212,5.503981,-5.953561,-4.935097,6.176697],[9.987227,-7.187445,-2.322938,-2.312330,-6.357094,-9.141413,2.164793,-2.765779,-8.153267,8.632554,-9.283171,-8.341142,3.142560,8.127408,-8.142264,-5.623675,7.301795,5.881723,0.057758,-4.778691,6.228133,-0.103201,-0.485869,1.222473],[1.044573,-1.268238,-7.518878,-9.943916,3.256580,9.076902,-1.396262,-6.921151,-5.632475,1.492087,2.732888,5.981180,-3.899117,8.257511,-3.867597,5.743997,0.830215,-1.405093,-0.257308,-5.673275,-2.492726,-6.525725,7.162606,-1.768983],[-7.333116,2.406423,-7.516469,-3.096599,8.857407,9.251371,-7.089566,1.204758,-8.495810,8.478440,-0.787002,8.302840,0.435701,4.433376,-6.987053,9.792037,1.216141,-5.521863,2.278385,-0.896545,-4.206223,6.021368,-0.908073,7.898825],[-0.702908,-4.774424,-9.632931,3.394385,4.097163,-1.126714,-6.914255,-4.983664,-8.288491,5.444068,-2.536922,-8.342294,-0.051284,2.913481,9.747020,0.954573,-0.578062,-4.798311,4.780855,-3.257346,0.189245,-6.282422,-2.776296,7.995768],[8.089790,3.840976,3.970481,8.202138,1.167440,-7.058372,3.199391,-0.913620,2.441331,-8.867452,-0.995978,8.916151,6.619812,0.743067,5.838812,-2.404556,-2.317765,-3.902621,-2.243826,9.221413,-5.353856,-4.617692,4.980132,4.172971],[0.152948,-9.614341,0.686846,5.666356,6.849964,-9.540708,-3.892888,-3.826069,-5.011746,-9.458919,-2.781124,-6.102649,6.685073,-9.028112,5.967646,-2.035653,3.516665,-6.156573,-6.201068,2.219213,0.758148,-9.760410,-1.349753,-0.708194],[9.657874,2.141827,-7.250600,5.963519,-0.449980,-2.337288,8.402082,3.030544,8.665514,3.075183,2.256486,-0.677929,3.274237,-1.326125,6.075157,-2.358298,6.107906,-4.456926,-4.511494,-0.753093,3.494832,-7.760774,5.448519,1.640395],[-6.155338,-0.739001,0.314501,-1.931141,-0.204241,-9.689101,7.159920,-4.182890,0.367375,-2.847985,-6.189324,-9.527736,0.215601,3.716605,-5.788222,-4.776509,8.161263,5.094926,6.541821,9.284588,-1.460754,1.928404,6.318945,4.705391],[-3.873779,-4.798026,-5.004636,-6.444761,3.430277,-1.702952,-8.266166,-4.170705,6.379849,-4.284708,1.443773,-4.002555,7.778009,0.775737,-3.456533,8.302157,-0.916400,6.465659,0.345703,7.790097,4.499882,-9.959298,-5.300902,-7.098769],[-0.073400,-7.110157,-7.528326,-7.814394,-9.788245,-7.172115,-8.773558,0.174586,0.608847,9.577612,-7.795478,-8.144014,-8.652920,3.364026,7.135819,-3.425273,-3.203842,-0.828595,-3.272967,-4.442537,-7.817065,3.037356,9.714307,-7.254926],[8.000615,5.655388,-6.207251,-6.206660,-9.585833,7.837970,0.145063,-6.272786,-5.008664,-8.087491,0.391061,8.013642,-9.246516,-4.818129,2.660026,-1.441379,-6.712232,-6.065552,2.523265,3.836214,-0.682025,-3.128718,-0.998031,6.615822],[1.352121,2.604281,-1.271778,-8.280549,7.230211,-3.092353,0.548473,-6.551855,-0.502909,-4.555554,8.385592,-8.457939,-8.248326,7.535434,1.773840,4.009807,-5.596793,2.200507,6.349305,4.152448,-3.485848,2.662944,5.826181,8.616593],[-5.145306,1.761642,9.878083,8.448831,-3.873003,-0.173167,2.015135,-1.075123,5.487799,5.246171,-4.697491,5.797711,-0.706272,-8.213987,-8.332522,-0.785414,-9.315003,-4.596859,2.277591,6.019356,-9.333444,6.079761,-5.686915,-2.883072],[1.757696,-1.102949,-1.687067,-7.330578,7.798529,-6.751788,-7.908240,-2.954733,6.014997,-9.201818,2.048943,-8.096576,7.033944,2.768640,-1.777695,0.947570,1.232263,4.674162,-7.763045,5.005471,-0.076726,8.039556,-3.343363,2.959881],[7.100228,-6.858416,-2.077965,-1.429331,-6.764464,1.896473,3.993127,-3.313345,-6.232693,1.465242,7.498680,-3.368067,-2.652231,-2.130779,-2.629948,-1.811867,2.210721,-4.245097,-8.572066,6.347725,-9.240081,5.845810,-9.329931,1.080589],[3.107158,1.422894,6.806003,-3.826877,7.148441,-2.945922,7.814914,2.619023,0.404529,-6.634272,1.451357,-5.379454,-4.540073,7.543522,1.684252,5.815006,4.640229,3.716012,3.011822,3.609939,-9.345844,-2.580619,-1.634144,-5.220113],[0.944996,5.299004,-7.175058,-0.002163,6.631899,8.584924,-6.786929,2.118756,9.677884,-1.209140,6.163273,-6.106093,8.537523,7.121468,-3.398642,3.878710,-3.157234,-4.284641,-6.647029,5.487063,5.980292,-3.089700,4.621862,1.973992],[-0.488437,0.313964,0.512211,8.768853,-0.545473,3.770844,-4.198284,-8.243944,2.215443,-9.794022,-8.827607,-2.935131,-2.507436,9.817582,-2.367668,2.765226,8.760694,-8.530189,-6.408342,4.355577,-9.672720,8.865845,-7.267365,3.442671],[6.538236,0.277259,1.575009,1.449750,7.148364,-8.347214,0.959681,-9.128198,-2.739576,-8.398311,8.923176,-0.697529,-0.746975,-6.941329,3.215640,-2.861913,8.072303,-1.506882,0.970957,9.641804,5.446985,1.525880,9.387292,6.002050],[-2.689469,-4.809017,6.404612,-2.857391,-6.568101,-1.561157,-5.802116,-9.794782,0.514028,9.757861,-3.991637,5.012352,-7.062345,2.915057,-9.948189,3.765209,-5.714320,-4.941636,-8.571968,1.193525,-8.533562,4.637658,-2.091198,-8.523712]], dtype = "float64")#candidate|4824|(48, 24)|const|float64
call_4823 = relay.TupleGetItem(func_3394_call(relay.reshape(const_4824.astype('float64'), [16, 6, 12]), relay.reshape(const_4824.astype('float64'), [16, 6, 12]), ), 0)
call_4825 = relay.TupleGetItem(func_3398_call(relay.reshape(const_4824.astype('float64'), [16, 6, 12]), relay.reshape(const_4824.astype('float64'), [16, 6, 12]), ), 0)
output = relay.Tuple([call_4818,call_4823,const_4824,])
output2 = relay.Tuple([call_4819,call_4825,const_4824,])
func_4836 = relay.Function([], output)
mod['func_4836'] = func_4836
mod = relay.transform.InferType()(mod)
output = func_4836()
func_4837 = relay.Function([], output)
mutated_mod['func_4837'] = func_4837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4552_call = mod.get_global_var('func_4552')
func_4554_call = mutated_mod.get_global_var('func_4554')
call_4895 = func_4552_call()
call_4896 = func_4552_call()
func_4624_call = mod.get_global_var('func_4624')
func_4625_call = mutated_mod.get_global_var('func_4625')
call_4899 = relay.TupleGetItem(func_4624_call(), 0)
call_4900 = relay.TupleGetItem(func_4625_call(), 0)
output = relay.Tuple([call_4895,call_4899,])
output2 = relay.Tuple([call_4896,call_4900,])
func_4905 = relay.Function([], output)
mod['func_4905'] = func_4905
mod = relay.transform.InferType()(mod)
output = func_4905()
func_4906 = relay.Function([], output)
mutated_mod['func_4906'] = func_4906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4624_call = mod.get_global_var('func_4624')
func_4625_call = mutated_mod.get_global_var('func_4625')
call_4961 = relay.TupleGetItem(func_4624_call(), 0)
call_4962 = relay.TupleGetItem(func_4625_call(), 0)
output = call_4961
output2 = call_4962
func_4964 = relay.Function([], output)
mod['func_4964'] = func_4964
mod = relay.transform.InferType()(mod)
mutated_mod['func_4964'] = func_4964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4964_call = mutated_mod.get_global_var('func_4964')
call_4965 = func_4964_call()
output = call_4965
func_4966 = relay.Function([], output)
mutated_mod['func_4966'] = func_4966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4964_call = mod.get_global_var('func_4964')
func_4966_call = mutated_mod.get_global_var('func_4966')
call_4967 = func_4964_call()
call_4968 = func_4964_call()
const_4977 = relay.const([[[6.520961,-5.757316,-5.289619,-5.579045,3.417583],[3.218883,-7.083051,3.852167,6.254258,9.404591],[-8.659957,0.794311,2.091377,3.620880,-1.772427],[-8.952316,2.551608,-9.362512,4.619878,-8.493298],[-8.302788,-6.459871,4.673512,-5.267934,1.674550],[-7.182176,-0.124622,-8.529116,7.736632,4.912085],[-8.622581,4.052944,3.555739,-2.196871,-3.982445],[0.048057,-5.367771,4.346712,4.585240,4.647752]],[[2.108032,-0.538379,0.421641,7.200060,-3.728518],[5.115603,-9.969201,-3.395240,-3.511440,6.833220],[6.255362,8.765637,-4.510594,-3.061845,-4.227368],[8.558636,8.662295,0.224971,-0.475799,8.425567],[1.281111,1.501225,2.856428,1.784799,-7.389740],[1.142991,5.076680,-3.587041,2.017657,1.608036],[-7.065486,-2.407290,-4.803421,-8.611705,-0.585002],[-6.691544,-6.006695,-1.006001,1.500372,8.302148]],[[-8.415030,-8.761418,9.646521,3.410337,4.685575],[-1.125693,7.119582,1.372763,-2.074019,-2.533325],[1.793719,2.315890,6.325015,0.762073,1.800906],[-8.745240,6.678672,-6.102428,3.468927,-3.260313],[-0.254469,-0.951275,5.529339,-6.369847,-3.576221],[-8.367652,3.147844,8.930967,4.720665,8.978738],[-0.593160,-3.646280,-9.142179,-9.172430,3.515600],[-9.677123,-1.272094,0.986821,-3.178086,5.905727]],[[6.494899,-1.927746,8.403153,4.545138,8.928873],[-3.440201,-7.884254,7.021931,8.117148,3.984966],[-0.419742,-0.526181,-0.922906,-3.775074,3.786604],[7.674360,-7.689271,1.280524,-2.352836,-1.630495],[-0.733722,5.215821,-3.646648,6.375067,-8.608039],[-7.624676,4.282734,6.388901,-8.294778,-2.072762],[-5.383298,-2.600102,-9.502825,-6.941015,-8.503021],[-1.890687,7.472696,-2.635969,-9.633620,4.253094]],[[-1.623128,-4.384316,8.809773,7.413295,1.201835],[8.920954,-0.456631,-8.385622,-2.378371,0.109697],[-6.177149,0.668421,1.480578,0.728960,7.117575],[-6.191595,-5.405048,9.441963,9.735361,7.096318],[7.985760,-6.674177,3.067024,-8.217662,6.930265],[-0.663050,9.165751,-7.297494,5.928950,-1.920915],[-8.909851,-0.967913,2.181133,-7.670880,4.632355],[-6.621258,5.685526,-8.194808,6.987618,-1.079410]],[[-4.042742,-7.295481,-5.599074,-1.334929,-8.787817],[-9.118053,0.354475,2.093501,3.093005,4.764798],[-9.001029,8.970944,-4.748580,-9.326632,-8.680112],[3.220821,7.695093,-9.891288,-9.340063,-2.683947],[6.747245,6.322250,9.881756,-8.235394,5.866165],[2.489247,0.592323,3.167689,-9.800328,4.458383],[-7.306119,3.521004,8.536048,9.440050,-9.364470],[-7.474916,-6.975473,9.284923,3.363771,-3.362727]],[[8.578928,-0.829061,-5.083614,7.744630,6.412210],[8.459187,3.637101,5.499958,-8.861912,-9.856823],[-3.365769,6.598486,-9.824170,2.579770,-4.919937],[-2.236956,2.784884,-1.191117,-8.105207,7.235141],[-7.976991,6.276692,8.464371,-3.188461,4.863948],[6.127852,-6.951861,9.423427,2.845066,-3.182118],[-9.756617,7.773905,3.203809,-8.161092,4.402291],[4.337385,-6.889987,9.583690,4.959846,-0.223856]],[[-0.405830,5.203112,-2.436992,-3.790338,5.824306],[0.498915,3.899276,0.476105,-4.535243,3.205725],[8.119004,0.284869,7.694538,-3.572836,8.894832],[-4.832684,-9.931575,-8.793158,-8.921554,-8.150694],[8.082719,7.152856,-0.279258,1.354513,-2.668196],[0.943968,4.487422,-2.503338,9.587527,9.853853],[8.210874,7.805629,7.955165,-4.070487,-8.082458],[7.044219,-9.456905,-7.828608,-7.195030,0.587447]],[[-3.252450,-6.801746,2.509706,5.495150,4.192032],[8.750264,-0.347751,-8.584547,-4.033539,6.608244],[5.116772,-0.355149,5.500336,8.562830,-8.944270],[0.663934,9.049396,-5.039344,-6.677035,0.330582],[4.469944,-0.846139,1.898839,6.123962,7.192947],[-4.060668,-6.298351,-6.998946,-3.383909,9.919794],[-5.654874,2.481730,-5.777343,-0.982857,0.301083],[6.502809,0.219304,-9.283061,-0.546006,-5.046773]],[[-6.219847,8.141155,-0.490834,6.884165,4.741963],[0.831632,5.688983,7.663181,9.896966,-3.906552],[8.448488,8.163173,7.046388,-9.541833,0.084810],[8.005108,1.753996,-6.399387,-8.684880,-5.476430],[-9.589941,0.790614,8.387049,-6.432917,-7.189298],[8.510501,-8.667170,-6.294040,6.121419,3.694100],[-8.795482,-4.293359,4.546019,4.877664,-2.364382],[7.320320,3.329599,-1.760495,9.639122,1.893909]],[[5.249934,-6.960061,8.556291,3.046970,1.690175],[-0.245182,4.404124,0.373415,0.870272,-7.481287],[5.324289,8.722094,-6.257048,0.554508,-7.184764],[-4.135025,2.829944,0.080169,7.892670,6.368559],[5.648750,-2.726067,0.041603,-7.929338,-8.793551],[-4.881586,-8.024727,1.969173,-0.139529,2.869958],[9.607933,-9.071439,-6.646259,-0.799177,5.427470],[-2.065427,4.234953,5.765538,-7.654005,9.217827]],[[2.858453,-4.963947,6.769914,-2.994258,-6.166797],[-2.372747,5.005703,6.866502,-1.527730,-5.953039],[8.202779,1.134956,4.216877,9.269746,-8.772396],[8.231454,8.832354,4.604467,0.900447,-4.749954],[9.601257,6.804864,8.514461,-3.915013,-5.979428],[8.050050,1.328592,-9.313145,-0.246970,7.552589],[3.465506,-0.699232,-8.574893,5.529381,9.986117],[-3.776230,0.394839,-5.097624,-0.887399,-2.231798]],[[0.032865,-0.236851,-9.181847,1.957459,4.911167],[0.792816,3.127803,0.019432,-8.541470,4.826826],[-2.745214,-6.492541,-0.791728,-4.817809,-6.917138],[2.544239,1.813350,-0.896505,3.330534,-5.177190],[-1.806970,1.757096,1.176876,-1.162770,3.678484],[8.434490,7.416542,9.895430,-9.521330,-9.190799],[0.453672,-8.380873,6.381081,-3.627139,7.928826],[7.122775,9.369313,5.337007,8.990873,-3.385130]]], dtype = "float64")#candidate|4977|(13, 8, 5)|const|float64
bop_4978 = relay.not_equal(call_4967.astype('bool'), relay.reshape(const_4977.astype('bool'), relay.shape_of(call_4967))) # shape=(13, 8, 5)
bop_4981 = relay.not_equal(call_4968.astype('bool'), relay.reshape(const_4977.astype('bool'), relay.shape_of(call_4968))) # shape=(13, 8, 5)
func_1670_call = mod.get_global_var('func_1670')
func_1673_call = mutated_mod.get_global_var('func_1673')
var_4987 = relay.var("var_4987", dtype = "float64", shape = (2002, 1))#candidate|4987|(2002, 1)|var|float64
call_4986 = relay.TupleGetItem(func_1670_call(relay.reshape(var_4987.astype('float64'), [14, 13, 11])), 3)
call_4988 = relay.TupleGetItem(func_1673_call(relay.reshape(var_4987.astype('float64'), [14, 13, 11])), 3)
output = relay.Tuple([bop_4978,call_4986,var_4987,])
output2 = relay.Tuple([bop_4981,call_4988,var_4987,])
func_5001 = relay.Function([var_4987,], output)
mod['func_5001'] = func_5001
mod = relay.transform.InferType()(mod)
mutated_mod['func_5001'] = func_5001
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5002 = relay.var("var_5002", dtype = "float64", shape = (2002, 1))#candidate|5002|(2002, 1)|var|float64
func_5001_call = mutated_mod.get_global_var('func_5001')
call_5003 = func_5001_call(var_5002)
output = call_5003
func_5004 = relay.Function([var_5002], output)
mutated_mod['func_5004'] = func_5004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
call_5032 = relay.TupleGetItem(func_3442_call(), 0)
call_5033 = relay.TupleGetItem(func_3444_call(), 0)
const_5040 = relay.const([[[-2.142749,8.208669,-2.800325,8.240096,8.896122],[4.546208,-1.511137,3.664623,4.124130,8.365677],[8.255110,-3.450934,-3.311422,4.237261,1.609530],[-0.457809,-6.858915,-3.616428,-2.018471,-2.114288],[9.519695,0.988895,1.599328,8.446764,-5.817710],[8.540715,1.108323,-1.492649,6.447071,-6.643614],[-7.208194,-5.838908,4.865642,3.590955,0.769464],[9.275935,-4.331463,-9.086718,9.723930,-4.733256]],[[-5.920604,1.280407,4.085770,-2.190679,8.466837],[0.304180,2.537303,8.795514,6.213052,-2.952218],[-5.469361,2.783684,6.805181,-9.154783,9.910789],[-3.701935,-8.146047,-6.904236,-8.118963,1.898137],[3.180526,0.679384,-6.734954,5.294840,-1.860483],[-0.605496,3.002027,6.867674,9.321836,3.049443],[-5.577085,7.679249,0.469430,0.538193,-5.994629],[-0.527113,8.886768,-4.632785,-6.930481,2.902758]],[[2.975532,0.402575,-0.055252,9.411999,-6.802680],[-8.754232,8.039896,-6.861320,9.379351,-1.762857],[-4.428272,-0.509094,-5.011896,7.777044,-4.752142],[6.904234,7.693090,7.557369,0.400640,4.424192],[8.416361,7.149432,4.783091,-8.649953,4.780475],[-4.814441,2.434170,5.566321,7.440316,-4.520217],[-4.282957,-3.287523,-2.218587,7.854571,-7.668642],[2.624100,-5.233226,-0.133801,-8.090017,8.929159]],[[3.708328,7.904634,-2.038389,1.558604,-8.390929],[3.373347,1.261645,-9.319728,0.148096,-0.182298],[-5.608649,-0.868972,-3.909075,1.289276,2.594128],[-8.557798,-8.610300,2.942472,-4.379668,0.404913],[-3.339420,4.594040,-8.779236,1.763133,0.607546],[9.124406,9.178425,7.508003,4.572630,9.103295],[7.954430,3.108842,6.593902,-8.159401,0.105138],[-4.888783,-2.579804,-9.770393,4.902355,6.947881]],[[4.985819,4.518922,-2.503170,-0.119129,6.767823],[-8.236183,2.596157,-7.517540,-6.661351,-4.461804],[-3.177476,6.869392,0.979829,1.016132,1.209021],[8.682411,-1.637798,7.816787,5.465552,-8.662096],[6.779167,6.765621,-3.186136,-6.250257,-3.408607],[5.718070,7.492346,-2.838472,-6.181160,-6.265319],[-0.520303,-4.198863,-4.244719,9.061835,5.969125],[-0.200116,-1.544622,5.000605,8.249931,3.047325]],[[-9.964285,0.596174,8.238330,-7.441707,1.338495],[4.593016,8.260267,-0.651466,9.733481,6.627367],[2.749039,-1.360788,-0.831232,1.896492,0.629814],[6.817012,0.371988,8.543527,-3.186295,-3.778538],[-0.016469,1.595887,0.866998,5.532270,3.928765],[0.271647,-1.147463,-8.454787,7.937341,7.216503],[-5.951118,-5.553600,9.272717,-4.583659,-2.995541],[9.783749,-2.369784,-2.043761,1.295940,7.040036]],[[-4.150965,9.233331,-3.006963,3.535960,5.427786],[-4.132614,-9.980483,4.615299,-7.330476,7.855620],[-8.877997,-6.798530,-6.442605,-6.060834,-1.296984],[-7.731982,-5.144963,-9.619275,-1.887669,-6.305303],[-4.573690,3.184735,-1.458372,-2.349418,5.931405],[8.649319,-3.693159,-7.277370,-6.513334,-9.608101],[-1.698785,4.935988,0.483042,2.786817,-3.944557],[3.302472,-5.580115,2.491119,-4.943550,-8.986200]],[[4.151350,6.805585,7.832703,-1.098537,9.057212],[-9.150047,-2.783979,-3.161660,5.362318,7.201898],[-2.423815,-4.724147,4.152278,6.963729,7.018863],[2.039447,8.783798,1.644836,7.631192,-5.462994],[-9.120663,-1.999650,-1.001094,-9.729467,1.198887],[5.312620,1.593694,-1.508137,0.416178,-5.303011],[2.430942,-0.228573,-5.663909,9.121804,2.401117],[-2.349226,2.295008,-4.201098,-3.485680,2.496773]],[[-0.059968,5.240476,9.772554,3.590715,1.267890],[0.902322,7.360629,8.259053,2.897054,8.070711],[-6.957728,7.571795,3.946356,5.614509,-4.562151],[3.052123,-4.432826,-7.051849,-7.390790,-4.472162],[8.578560,4.954065,6.716674,2.199056,1.318429],[-6.492505,-9.444700,9.219863,1.542974,6.399043],[-7.326648,0.995213,9.573910,-9.645878,9.142262],[3.922366,-0.346693,8.662258,9.415030,1.692362]],[[-8.769126,-4.802212,3.966356,-8.288580,6.655622],[-3.230183,-6.124998,-8.942010,-7.931145,7.488467],[7.932218,-0.329240,7.848472,-8.722083,-9.658667],[-8.263919,9.954013,-5.099269,-5.231512,7.918098],[-5.752953,9.390673,6.634370,9.476582,-7.248446],[0.463941,1.189570,-0.467571,-1.087546,-1.704300],[-8.561771,6.837081,1.776316,-9.932751,-2.205354],[4.202919,9.572090,5.981270,-0.738076,-0.450459]],[[6.355813,7.903671,-3.953687,-1.558281,-0.132511],[4.601426,2.676532,-0.711216,-6.540965,-9.811123],[-7.490557,-5.418467,0.306377,8.714476,-9.951550],[-0.115041,3.736674,-6.953315,2.141532,-7.162241],[4.301912,-5.663752,-1.384769,-3.991776,1.991020],[9.471293,-0.087635,-0.956135,6.769552,-4.804610],[5.531776,-1.703980,-7.043868,-2.400807,5.265232],[5.022678,3.746530,5.042854,-6.873754,-7.328178]],[[-4.459917,2.875292,0.209638,-3.563522,7.902803],[-1.930094,-7.976763,-4.193957,-1.949498,-5.032785],[8.294564,-5.888807,-3.911727,1.922042,2.453030],[-0.153089,3.941917,3.027698,2.133424,-1.186937],[-5.777015,-0.906993,3.420543,4.334501,0.879007],[8.375553,1.377596,0.203076,0.094923,-8.405294],[4.945035,-5.431604,-6.156246,3.966540,-2.819695],[6.013517,4.161393,7.872467,-0.527417,-9.739396]],[[-3.845479,-0.884894,3.530848,1.574815,-0.617369],[-2.994636,6.323974,2.114006,-5.965011,9.768915],[-9.183615,9.213575,-4.036043,-7.562603,2.133862],[2.818124,-4.023400,3.777185,3.691261,-0.536193],[-2.279870,9.481551,7.759391,3.107376,-2.725946],[-3.394960,2.153031,-2.444859,-2.964840,-3.679693],[8.826583,-1.278089,-1.137665,1.365528,-2.180874],[5.865438,-4.242803,-6.062897,2.788865,9.275314]]], dtype = "float64")#candidate|5040|(13, 8, 5)|const|float64
bop_5041 = relay.bitwise_xor(call_5032.astype('int64'), relay.reshape(const_5040.astype('int64'), relay.shape_of(call_5032))) # shape=(13, 8, 5)
bop_5044 = relay.bitwise_xor(call_5033.astype('int64'), relay.reshape(const_5040.astype('int64'), relay.shape_of(call_5033))) # shape=(13, 8, 5)
output = bop_5041
output2 = bop_5044
func_5068 = relay.Function([], output)
mod['func_5068'] = func_5068
mod = relay.transform.InferType()(mod)
mutated_mod['func_5068'] = func_5068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5068_call = mutated_mod.get_global_var('func_5068')
call_5069 = func_5068_call()
output = call_5069
func_5070 = relay.Function([], output)
mutated_mod['func_5070'] = func_5070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4905_call = mod.get_global_var('func_4905')
func_4906_call = mutated_mod.get_global_var('func_4906')
call_5096 = relay.TupleGetItem(func_4905_call(), 0)
call_5097 = relay.TupleGetItem(func_4906_call(), 0)
func_4335_call = mod.get_global_var('func_4335')
func_4338_call = mutated_mod.get_global_var('func_4338')
const_5107 = relay.const([[9.215244,-5.944092,-1.940245,-9.102459,8.994502,-2.444182,5.198080,-1.424281,-4.307953,0.873860,-3.049459,8.366042,-3.493451,-9.094144,3.871946,2.404013,-5.799784,5.454665,6.927985,-9.773443,-9.784421,6.515584,2.771023,-5.393625,-9.671572,-1.681330,3.917006,-7.915739,7.855391,3.699335,-4.703069,4.781328,-0.686650,8.741328,-1.050885,6.327263,-9.362388,3.297726,-5.658611,9.716998,0.363208,8.086878,8.626310,-9.344731,9.306039,-4.598485,0.014686,-3.059627],[-3.422868,1.900156,9.535078,4.718073,1.763978,9.694035,-3.224693,-0.119069,-3.269243,-4.328493,7.246891,-7.745232,-3.103993,6.786646,-7.368256,-6.153074,3.490376,-6.025735,-1.691260,8.327394,-7.326803,6.755135,2.413185,-1.288516,-6.686033,-2.112477,5.989565,-3.951469,8.188664,9.589228,7.433827,-5.608682,1.415907,8.655697,-8.779424,7.379652,4.955223,4.458427,3.574493,-5.984624,-5.299574,6.245913,-8.072482,-4.774125,3.645774,7.262743,6.201118,-6.269498]], dtype = "float64")#candidate|5107|(2, 48)|const|float64
var_5108 = relay.var("var_5108", dtype = "float64", shape = (448, 4))#candidate|5108|(448, 4)|var|float64
call_5106 = relay.TupleGetItem(func_4335_call(relay.reshape(const_5107.astype('float64'), [1, 12, 8]), relay.reshape(var_5108.astype('float64'), [1792,]), ), 0)
call_5109 = relay.TupleGetItem(func_4338_call(relay.reshape(const_5107.astype('float64'), [1, 12, 8]), relay.reshape(var_5108.astype('float64'), [1792,]), ), 0)
func_3536_call = mod.get_global_var('func_3536')
func_3537_call = mutated_mod.get_global_var('func_3537')
call_5111 = relay.TupleGetItem(func_3536_call(), 0)
call_5112 = relay.TupleGetItem(func_3537_call(), 0)
bop_5113 = relay.less(call_5111.astype('bool'), call_5106.astype('bool')) # shape=(1, 12, 8)
bop_5116 = relay.less(call_5112.astype('bool'), call_5109.astype('bool')) # shape=(1, 12, 8)
func_3214_call = mod.get_global_var('func_3214')
func_3216_call = mutated_mod.get_global_var('func_3216')
var_5122 = relay.var("var_5122", dtype = "float64", shape = (1485,))#candidate|5122|(1485,)|var|float64
call_5121 = relay.TupleGetItem(func_3214_call(relay.reshape(var_5122.astype('float64'), [9, 11, 15])), 0)
call_5123 = relay.TupleGetItem(func_3216_call(relay.reshape(var_5122.astype('float64'), [9, 11, 15])), 0)
output = relay.Tuple([call_5096,const_5107,var_5108,bop_5113,call_5121,var_5122,])
output2 = relay.Tuple([call_5097,const_5107,var_5108,bop_5116,call_5123,var_5122,])
func_5127 = relay.Function([var_5108,var_5122,], output)
mod['func_5127'] = func_5127
mod = relay.transform.InferType()(mod)
mutated_mod['func_5127'] = func_5127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5127_call = mutated_mod.get_global_var('func_5127')
var_5129 = relay.var("var_5129", dtype = "float64", shape = (448, 4))#candidate|5129|(448, 4)|var|float64
var_5130 = relay.var("var_5130", dtype = "float64", shape = (1485,))#candidate|5130|(1485,)|var|float64
call_5128 = func_5127_call(var_5129,var_5130,)
output = call_5128
func_5131 = relay.Function([var_5129,var_5130,], output)
mutated_mod['func_5131'] = func_5131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mod.get_global_var('func_4836')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_5180 = relay.TupleGetItem(func_4836_call(), 1)
call_5181 = relay.TupleGetItem(func_4837_call(), 1)
uop_5182 = relay.sigmoid(call_5180.astype('float64')) # shape=(16, 6, 12)
uop_5184 = relay.sigmoid(call_5181.astype('float64')) # shape=(16, 6, 12)
output = uop_5182
output2 = uop_5184
func_5185 = relay.Function([], output)
mod['func_5185'] = func_5185
mod = relay.transform.InferType()(mod)
output = func_5185()
func_5186 = relay.Function([], output)
mutated_mod['func_5186'] = func_5186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4191_call = mod.get_global_var('func_4191')
func_4192_call = mutated_mod.get_global_var('func_4192')
call_5199 = relay.TupleGetItem(func_4191_call(), 0)
call_5200 = relay.TupleGetItem(func_4192_call(), 0)
var_5216 = relay.var("var_5216", dtype = "float64", shape = (12, 7, 8))#candidate|5216|(12, 7, 8)|var|float64
bop_5217 = relay.logical_xor(call_5199.astype('int32'), var_5216.astype('int32')) # shape=(12, 7, 8)
bop_5220 = relay.logical_xor(call_5200.astype('int32'), var_5216.astype('int32')) # shape=(12, 7, 8)
output = bop_5217
output2 = bop_5220
func_5221 = relay.Function([var_5216,], output)
mod['func_5221'] = func_5221
mod = relay.transform.InferType()(mod)
mutated_mod['func_5221'] = func_5221
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5222 = relay.var("var_5222", dtype = "float64", shape = (12, 7, 8))#candidate|5222|(12, 7, 8)|var|float64
func_5221_call = mutated_mod.get_global_var('func_5221')
call_5223 = func_5221_call(var_5222)
output = call_5223
func_5224 = relay.Function([var_5222], output)
mutated_mod['func_5224'] = func_5224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4905_call = mod.get_global_var('func_4905')
func_4906_call = mutated_mod.get_global_var('func_4906')
call_5237 = relay.TupleGetItem(func_4905_call(), 1)
call_5238 = relay.TupleGetItem(func_4906_call(), 1)
func_2087_call = mod.get_global_var('func_2087')
func_2096_call = mutated_mod.get_global_var('func_2096')
const_5240 = relay.const([[-7.116648,2.984767,5.182669,-5.335630,-7.043018,6.713012,-7.967421,-9.827422]], dtype = "float32")#candidate|5240|(1, 8)|const|float32
const_5241 = relay.const([-2.585666,0.572127,6.976681,6.728879,6.255162,0.697964,-0.628779,-5.984330,3.119825,0.804251,5.889006,-8.641767,-3.447956,-3.720923,2.540676,-3.360448,1.785069,4.929054,5.571464,-9.807632,-2.712446,4.436816,-9.965837,-4.460011,-7.195614,-2.120655,1.755756,-2.760942,-6.796459,6.476465,0.004071,2.810231,2.894550,-5.358601,-9.192324,-2.132894,-1.012999,4.850447,7.676817,-7.972199,-5.174820,5.487072,8.860173,4.725749,-3.964557,0.005556,-7.069072,7.259958,-6.844540,-2.986506,-7.156674,9.735850,1.782513,3.033533,-4.543839,-2.559555,8.855922,-1.563036,9.932393,-5.937443,-1.434212,-1.528802,8.343168,6.564538,1.698044,-9.877610,-5.237417,-7.362198,-5.968018,-7.921842,5.902161,2.871005,-7.844399,-5.392216,7.722455,7.952715,-7.231459,-3.393747,7.579216,7.327156,-8.739773,-5.722718,-0.824751,-1.580763,1.139719,4.815593,9.704043,3.217698,0.183041,-7.451340,-5.774294,-8.102325,1.568393,-0.945475,-1.744669,8.420598,6.718951,5.221191,-7.634333,9.934127,-6.847179,-4.173870,7.643561,9.554200,6.246242,-4.464258,-6.985762,5.980981,6.739697,-6.214696,1.608528,-3.815235,-7.485272,-3.832409,0.964776,-8.054836,8.710979,-7.281806,-7.620397,7.385189,3.908420,2.641061,-2.089842,9.321128,5.985362,-5.851518,3.078130,0.971938,-3.765466,-0.438719,9.061911,-6.897633,6.592189,-2.761676,-4.845809,-3.048171,9.228650,1.324005,-7.609633,2.073372,7.063520,-4.136764,7.338281,-5.183948,-7.926152,2.243622,4.874175,-9.162539,-3.975727,-0.598837,-3.389017,-5.418104,-7.563998,0.836510,-2.434341,-6.477670,-1.596284,-1.465474,2.091507,-3.298385,3.993645,2.639260,3.659839,-4.710098,-1.444021,-4.126403,5.127030,-9.201891,5.042669,-5.681365,8.498356,2.778616,7.733800,1.413094,-0.923631,-8.839426,9.453873,-1.980732,1.756577,2.009870,3.409299,-7.281565,-3.760350,-7.733536,0.042488,-5.144479,-8.149879,-1.044834,4.759774,-2.210437,2.076603,-4.313511,-2.423569,6.495795,9.307634,-4.928128,3.336348,0.670744,3.495314,6.470682,-2.055260,9.056707,5.769718,-0.167739,9.225799,-8.240420,-8.925369,-7.126391,6.214041,-7.032957,-6.222093,1.283410,-9.575240,8.604905,-1.261216,-5.618226,-6.785536,3.720647,4.771792,2.734037,-1.969763,-1.916541,-9.968431,-4.027737,-9.639157,-3.857776,5.871031,-1.217452,-1.320435,7.650935,-4.104095,0.916171,-3.930968,-9.491259,-5.595304,-4.202766,5.414579,5.710798,5.927226,3.085780,2.454799,-9.425497,4.939790,-3.937241,7.600904,0.887627,0.907673,-1.664416,2.193063,8.944806,-2.128188,4.452235], dtype = "float64")#candidate|5241|(252,)|const|float64
var_5242 = relay.var("var_5242", dtype = "float32", shape = (320,))#candidate|5242|(320,)|var|float32
var_5243 = relay.var("var_5243", dtype = "bool", shape = (784,))#candidate|5243|(784,)|var|bool
var_5244 = relay.var("var_5244", dtype = "uint64", shape = (150, 1))#candidate|5244|(150, 1)|var|uint64
const_5245 = relay.const([9.929398,4.913277,9.054495,-2.634851,5.642687,0.940726,2.751813,9.413838,9.031480,4.994922,3.499153,0.955379,-1.047505,-0.554183,6.074171,-8.214640,-6.963959,-0.899688,-1.076897,8.967117,-2.881478,-8.483080,-5.517263,-6.002594,5.902824,6.912376,-7.667594,-0.871019,-1.025694,-8.785236,-1.902171,-5.355443,7.558643,-8.703932,5.203236,1.077500,-9.560699,6.793846,5.163708,3.893900,-1.298248,-1.961816,5.461880,8.662325,2.296759,8.602601,-0.259106,4.342127,-5.140082,2.117218,8.029698,6.841395,1.572229,-6.889629,1.608001,1.395583,3.715938,-2.238272,8.754733,-3.460727,7.570369,-4.973969,2.719443,4.725516,6.359504,7.470042,7.373384,6.845733,-9.233379,-1.985793,1.652055,4.063808,2.405606,2.736754,9.804206,1.235626,7.420660,-8.579986,2.867925,-6.250197,-7.888388,6.780786,0.650111,-6.144471,2.618717,4.874717,4.379409,0.202953,-4.174685,3.971054,-2.766062,-8.892101,-3.894644,-0.775493,1.903547,-8.975568,-5.456138,0.666005,-0.410358,7.970374,-7.323175,-4.143350,9.033781,-4.642165,-0.790544,1.786175,6.731613,-5.382299,-9.666308,2.044799,-0.335873,-6.047597,-7.061543,-1.172226,4.182681,-9.110223,-7.866843,4.444255,-6.931873,9.351268,3.769452,7.205537,-4.338819,-7.656902,-3.593735,-6.164006,-8.055980,8.511696,5.862944,5.468734,-2.789462,-8.618669,8.944724,-2.968246,-5.004136,-0.731988,9.047773,-0.089495,-7.563117,-7.892901,-3.762121,1.788824,3.364268,1.238580,-5.885375,-9.438543,-9.765748,6.033902,-8.429309,4.055196,9.450228,7.817853,1.747002,-7.175765,-6.688319,-7.508402,-4.123743,3.060389,1.894481,-9.177924,-9.315526,-1.389302,3.363793,-4.637586,5.799510,-7.898714,4.129091,8.998891,8.251021,-0.604768,3.260147,0.727338,-8.501057,6.368639,4.092867,3.917959,-3.925816,1.421958,8.564176,-4.861417,6.214934,5.259421,-2.251432,-6.157677,7.482804,5.738214,3.459474,-7.633408,-2.067376,1.228638,9.536561,6.358457,-1.999071,6.720182,-1.141407,6.362452,6.215691,-0.522768,1.001348,4.864585,-0.626116,2.593326,2.444660,1.689695,-8.096892,-7.125823,-3.757867,3.199701,-7.428175,-2.083878,-7.075153,-9.992850,8.464604,6.416927,8.605193,3.441190,-8.496859,-6.553035,-3.875564,5.764411,-9.515627,-4.032824,8.843619,-1.835772,-8.944671,-4.326692,-0.981545,-3.136054,0.968460,-2.021202,1.832416,-1.442829,4.113497,8.514430,6.841137,-8.470912,-9.653952,-0.177535,-5.740046,7.182885,9.378746,-4.217889,8.752843,6.717412,-0.861584,0.910769,1.712322,6.859747,-7.207693,-9.908480,1.537516,-7.774113,0.171945,2.613876,6.599404,5.721102,-6.876524,-8.112391,-0.031604,5.862773,2.873403,-3.120725,-0.962291,4.950193,3.307171,-2.990411,-1.695984,-7.431091,5.112851,-9.665727,6.173125,-6.853850,5.892402,9.111307,-6.234338,-7.706109,0.952107,8.515151,5.697400,8.794872,-0.904058,3.531107,-4.106145,6.751430,-6.553965,-3.011574,4.250828,8.063755,5.035999,-4.666446,9.758680,7.711191,-4.401058,1.512703,-3.340216,-8.785357,-5.457539,4.222882,7.391803,5.075694,-9.859653,0.669311,-0.008852,-1.380637,6.925444,2.051035,-4.488888,-8.870863,4.720750,-0.835604,-7.587903,0.317891,-4.424024,0.913123,2.666050,8.327325,-7.436168,1.921039,-6.831235,-5.690658,-8.431347,-2.033165,-9.930098,4.700261,-9.754265,0.155810,-3.715695,-9.977584,-0.448786,1.901439], dtype = "float32")#candidate|5245|(330,)|const|float32
var_5246 = relay.var("var_5246", dtype = "float32", shape = (1078,))#candidate|5246|(1078,)|var|float32
call_5239 = relay.TupleGetItem(func_2087_call(relay.reshape(const_5240.astype('float32'), [1, 8]), relay.reshape(const_5240.astype('float32'), [1, 8]), relay.reshape(const_5241.astype('float64'), [252,]), relay.reshape(var_5242.astype('float32'), [320,]), relay.reshape(var_5243.astype('bool'), [784, 1]), relay.reshape(var_5244.astype('uint64'), [150,]), relay.reshape(const_5245.astype('float32'), [330,]), relay.reshape(var_5246.astype('float32'), [1078,]), ), 3)
call_5247 = relay.TupleGetItem(func_2096_call(relay.reshape(const_5240.astype('float32'), [1, 8]), relay.reshape(const_5240.astype('float32'), [1, 8]), relay.reshape(const_5241.astype('float64'), [252,]), relay.reshape(var_5242.astype('float32'), [320,]), relay.reshape(var_5243.astype('bool'), [784, 1]), relay.reshape(var_5244.astype('uint64'), [150,]), relay.reshape(const_5245.astype('float32'), [330,]), relay.reshape(var_5246.astype('float32'), [1078,]), ), 3)
func_4964_call = mod.get_global_var('func_4964')
func_4966_call = mutated_mod.get_global_var('func_4966')
call_5260 = func_4964_call()
call_5261 = func_4964_call()
output = relay.Tuple([call_5237,call_5239,const_5240,const_5241,var_5242,var_5243,var_5244,const_5245,var_5246,call_5260,])
output2 = relay.Tuple([call_5238,call_5247,const_5240,const_5241,var_5242,var_5243,var_5244,const_5245,var_5246,call_5261,])
func_5262 = relay.Function([var_5242,var_5243,var_5244,var_5246,], output)
mod['func_5262'] = func_5262
mod = relay.transform.InferType()(mod)
var_5263 = relay.var("var_5263", dtype = "float32", shape = (320,))#candidate|5263|(320,)|var|float32
var_5264 = relay.var("var_5264", dtype = "bool", shape = (784,))#candidate|5264|(784,)|var|bool
var_5265 = relay.var("var_5265", dtype = "uint64", shape = (150, 1))#candidate|5265|(150, 1)|var|uint64
var_5266 = relay.var("var_5266", dtype = "float32", shape = (1078,))#candidate|5266|(1078,)|var|float32
output = func_5262(var_5263,var_5264,var_5265,var_5266,)
func_5267 = relay.Function([var_5263,var_5264,var_5265,var_5266,], output)
mutated_mod['func_5267'] = func_5267
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5297 = relay.var("var_5297", dtype = "uint8", shape = ())#candidate|5297|()|var|uint8
var_5298 = relay.var("var_5298", dtype = "uint8", shape = (16, 1, 1))#candidate|5298|(16, 1, 1)|var|uint8
bop_5299 = relay.minimum(var_5297.astype('uint8'), var_5298.astype('uint8')) # shape=(16, 1, 1)
uop_5312 = relay.asin(var_5298.astype('float64')) # shape=(16, 1, 1)
func_4151_call = mod.get_global_var('func_4151')
func_4153_call = mutated_mod.get_global_var('func_4153')
call_5315 = func_4151_call()
call_5316 = func_4151_call()
output = relay.Tuple([bop_5299,uop_5312,call_5315,])
output2 = relay.Tuple([bop_5299,uop_5312,call_5316,])
func_5318 = relay.Function([var_5297,var_5298,], output)
mod['func_5318'] = func_5318
mod = relay.transform.InferType()(mod)
var_5319 = relay.var("var_5319", dtype = "uint8", shape = ())#candidate|5319|()|var|uint8
var_5320 = relay.var("var_5320", dtype = "uint8", shape = (16, 1, 1))#candidate|5320|(16, 1, 1)|var|uint8
output = func_5318(var_5319,var_5320,)
func_5321 = relay.Function([var_5319,var_5320,], output)
mutated_mod['func_5321'] = func_5321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4807_call = mod.get_global_var('func_4807')
func_4809_call = mutated_mod.get_global_var('func_4809')
call_5326 = func_4807_call()
call_5327 = func_4807_call()
output = relay.Tuple([call_5326,])
output2 = relay.Tuple([call_5327,])
func_5341 = relay.Function([], output)
mod['func_5341'] = func_5341
mod = relay.transform.InferType()(mod)
output = func_5341()
func_5342 = relay.Function([], output)
mutated_mod['func_5342'] = func_5342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
call_5372 = relay.TupleGetItem(func_3442_call(), 0)
call_5373 = relay.TupleGetItem(func_3444_call(), 0)
func_2293_call = mod.get_global_var('func_2293')
func_2295_call = mutated_mod.get_global_var('func_2295')
const_5401 = relay.const([[0.628876,-8.217685,9.223737,4.079285,1.466770,6.461716,-3.083442,-5.791029,3.344438,9.771695,6.825383,3.417712,-7.480815,-0.426277,-7.572002,9.991605,8.996195,-1.612423,-6.857341,1.998710,-1.113359,-2.985836,-6.194094,-1.887087,8.727877,-6.417694,-6.860048,-2.690671],[-4.790992,3.941438,1.017657,-5.495910,-7.556415,5.558224,-9.838361,-8.855068,6.659020,-7.208388,9.189934,8.167915,-2.266344,-3.324283,-3.470864,6.750295,0.146366,9.325585,2.612912,-5.675095,-3.873895,-9.028709,-2.652268,7.333459,-4.545611,4.183552,-8.469864,-1.583698],[-4.170529,9.332178,-7.480238,8.837720,7.754077,-8.432279,-7.434964,-7.777048,-1.803127,-3.995156,2.768323,-5.656930,9.346725,-1.384225,-4.737199,-7.425595,9.320850,8.697063,9.442565,3.594518,9.376534,1.334211,-6.501808,-2.937465,9.705745,1.000969,-1.224163,-8.257997],[-9.842938,5.168032,3.726045,2.223695,7.002885,-8.242471,-9.416619,9.196276,4.530231,2.551509,-8.960744,-4.790416,-3.279603,0.280278,9.821039,-2.151110,-9.559801,6.696144,-2.884211,-1.104581,5.081956,-5.549329,-1.244329,-6.670874,-4.342462,-6.364669,3.004069,-4.348395],[-5.445662,1.493466,2.887584,2.379807,1.300489,-3.454274,-4.511648,-4.516719,5.731229,7.929098,-8.722630,-0.337335,5.550628,-6.754119,5.191417,0.406762,-2.991449,-4.050911,-7.742411,6.883247,-9.348556,3.299951,-1.717601,-7.597782,-6.887089,8.735777,3.257521,-5.235069],[-6.125846,-7.631289,7.562073,-6.462122,-8.706468,-0.265016,-4.570106,-6.783323,5.424568,6.900179,8.870517,7.482781,9.094741,3.944447,-8.882730,-5.875547,-2.719715,3.317780,-8.415004,6.149092,-1.104389,2.238342,4.672094,6.371976,-0.431932,-7.065774,-0.346178,4.631389],[-9.525993,1.612818,-2.380310,-9.131113,-0.269283,4.434161,0.156760,1.623744,-5.667855,-2.419650,-8.062811,-9.074708,5.550375,1.182265,-8.825958,3.601485,2.459417,-8.920296,-0.781059,-6.251186,-6.325389,2.465099,-4.369131,1.182724,-6.376848,-4.390839,8.054264,5.913217],[9.473612,-1.754596,9.892118,-5.533091,-2.093874,2.254343,9.695304,5.104815,2.885472,7.120545,6.924938,-7.686997,3.571166,7.909210,4.615076,4.119311,4.691009,-8.970298,2.863037,3.179582,6.343305,6.773844,-8.981723,-9.775327,5.525046,2.219047,-4.454076,-8.434354],[-8.667870,-4.732243,-9.613291,-7.117490,-8.448145,5.001797,6.881302,2.941941,2.206332,-3.603484,-7.578525,7.277533,-0.900885,-0.365863,-4.931252,-5.659791,-6.356394,-2.254697,-2.349757,-4.849002,8.886614,1.819750,-5.967587,-7.275014,0.612879,5.284360,6.136474,0.959686],[4.440666,5.469907,4.210541,-4.623573,-2.284099,-0.911984,7.407929,3.362907,-0.110566,-1.786451,-7.919343,-7.823239,8.619498,6.434849,-1.887978,-4.622762,-1.693397,8.792891,-8.908716,-8.119152,-8.574405,3.281274,4.064655,8.271901,3.416504,6.407516,-6.349897,3.699300],[6.558823,-2.140398,-9.380819,-5.709702,-7.959914,-3.891373,8.780401,-2.563144,1.722548,-6.017845,-0.280616,7.799146,7.760933,2.713493,-3.071618,1.762753,6.020451,-9.983813,-6.969434,8.260613,-9.752089,4.972013,-7.756806,-5.265648,-5.142221,-6.876351,-8.388938,-2.975768],[-6.165445,4.407997,8.232578,1.886370,-6.742233,-3.393168,-4.382539,-4.784828,2.460173,-1.585281,2.037439,2.169602,8.144750,-4.346085,7.830036,9.824449,3.102900,1.116704,3.675175,8.828162,-8.237123,7.488960,4.923404,2.544606,0.221592,-7.640549,-5.330122,-7.060105],[-9.333719,2.653129,-8.532454,6.250192,6.420897,-8.995596,3.462836,1.931858,6.395777,-8.973786,-8.465920,4.077605,-4.137232,-9.617331,8.448104,-5.759219,8.059921,-8.580615,1.908371,9.723802,-5.016578,5.516405,-4.193702,6.428801,5.489167,-3.331389,7.551215,-4.584919],[-6.001024,2.768671,4.653805,5.526806,6.666143,-4.072557,4.943552,-2.557037,7.334822,-6.857814,-6.206393,4.695512,5.340836,1.122697,2.617422,-8.795995,-4.208723,-2.072429,-2.058775,-5.135559,1.987500,-7.148052,3.781272,-1.741281,-1.426939,-8.122265,-9.372040,0.719183],[6.230818,-8.057962,-1.307515,-9.617528,-3.452917,-5.720102,-4.126984,6.830994,-9.178818,1.242001,-1.757276,-8.246199,-6.962130,3.886641,7.833864,-1.656594,8.590187,6.650465,-8.516106,-2.639178,-8.070886,6.839787,9.730079,-4.481333,-1.244828,6.810121,9.321178,7.905322],[-2.800645,-9.718654,8.848799,9.338963,-4.425910,-5.346047,-6.683484,1.304443,-2.496131,-9.613795,1.707915,2.345815,-9.609903,-4.927861,-9.531585,8.625143,-6.736028,-7.164145,-5.781727,-5.498398,4.031923,6.992231,7.582041,-4.919291,0.812907,-0.440693,-1.350189,-7.048252],[-1.990073,-2.922246,9.593250,-8.933137,-6.647451,9.394998,-1.094520,6.988060,8.588109,5.754455,7.805729,-7.541761,-1.626215,-4.713441,-2.826802,5.493165,8.627571,6.959985,9.214537,3.930237,4.823297,7.774983,-8.235530,8.353241,0.238850,8.436185,-5.706560,-0.869780],[-3.168753,3.592509,5.529680,7.931136,8.859035,4.121942,-3.248005,-3.090342,-8.672837,3.002508,-3.757337,-1.132687,-1.832664,-0.693829,1.132515,5.249372,9.793171,-1.588941,-6.224124,-0.725767,-0.354145,-4.365533,-0.375059,-2.383361,-8.147237,4.370986,-8.253017,9.511162],[8.790871,-3.883293,-8.373433,-1.633498,-0.972213,-5.963521,7.329955,-7.527542,9.639827,-2.888341,7.787088,-3.645995,8.087724,-8.411172,2.946786,-4.568590,-7.754479,2.605940,-0.297446,-0.131633,-4.420910,9.672699,2.466807,6.821838,0.182476,-5.276766,8.617609,-7.009958],[9.684532,-1.879734,-2.955478,6.390629,3.890771,0.885554,3.484489,4.415575,4.119459,3.812906,-1.555048,2.530280,-8.607695,6.119473,-2.469129,-4.848417,-4.542314,-9.294487,6.518314,5.112895,-3.540976,9.698267,1.466251,0.788031,9.610901,5.734563,3.584894,5.578546],[9.250650,8.318552,0.969189,7.036798,0.508148,-6.562892,4.176510,5.573979,5.731821,3.139224,1.338920,5.673240,4.692122,6.502345,6.556698,9.442887,7.825127,-1.279745,-0.015111,-3.597050,0.287851,2.877318,6.582298,-0.707725,3.415587,9.207144,-9.816921,3.553528],[9.042125,-7.453288,-9.825115,2.625587,1.873900,-3.774289,1.912124,8.022436,3.123301,-7.873952,3.364779,4.987917,-9.132258,-6.462458,0.382150,2.906750,-4.054167,3.215196,2.668705,-0.147515,-3.715095,-9.662690,7.083869,-1.203158,-1.794392,3.465129,2.497275,-7.318602],[2.770596,-6.640774,4.388188,-9.542979,-5.060513,-3.451212,-6.760995,-1.244059,1.920382,2.896998,-0.566769,8.896502,-4.373760,-1.992848,-2.949533,4.214865,4.746300,-5.796503,9.607406,-9.132401,0.314816,0.439077,2.155270,-7.879213,3.575306,-1.536308,-2.070177,-7.469684],[-5.990991,-3.280181,-2.887732,0.794303,-8.350007,-3.053193,-4.844932,7.909770,0.811695,5.303116,-9.100021,0.130582,6.316802,0.654853,1.990641,-1.420946,-3.411087,-5.088029,3.504337,5.723171,-7.026310,7.433053,-3.149454,-3.996716,-3.857654,6.641434,5.927871,-3.036010],[-5.286318,-8.330495,0.936783,7.504429,-8.470695,-2.379220,1.454064,3.719013,0.570599,-7.511454,0.411988,3.497195,6.072214,-1.609201,3.956606,5.945293,-0.987462,-9.625845,4.971130,4.718029,5.943734,8.072208,6.929565,-0.044646,3.008232,9.702855,1.610312,-2.054227],[4.228829,-8.191432,4.370362,-6.125069,9.430266,-5.849728,-2.119877,-3.518447,2.632829,4.465733,-8.077563,-0.109506,-5.388080,-7.458413,-6.853304,-1.109523,3.662271,1.416661,8.918405,-3.492425,-7.306740,2.645305,0.462743,-6.937171,4.126708,2.002071,-0.997174,9.875488],[0.516732,-2.141152,9.729305,0.218298,6.691318,4.753041,-0.146122,-8.375651,-8.509665,-9.181293,4.593281,3.313956,-8.273506,0.901721,-2.959716,4.952544,-1.868528,3.380689,6.111890,3.878077,4.932956,1.566227,-7.930658,-3.653667,1.089552,-5.605647,-4.369465,5.912686],[9.574704,5.918110,2.732350,8.605515,-9.111102,9.526708,-6.131535,8.146726,-9.287205,6.780110,-1.845834,3.491486,-0.474186,-6.192115,1.913876,5.703244,-9.227340,-2.961295,-0.758502,-1.042697,4.510234,-0.247216,-1.916255,9.889217,-6.193494,6.215035,2.223628,-4.158894],[7.268851,-2.086881,-9.765387,5.006782,-3.205047,-7.344563,3.879482,9.065934,9.569368,-3.198224,0.628356,-8.269211,2.441833,-7.106449,-7.508222,-3.874882,-2.248934,9.368031,0.782180,6.234790,-9.494816,-7.722136,-9.932532,-0.433077,8.957760,9.702091,0.103963,-0.789215],[-6.400281,4.254549,1.876567,-0.338560,-7.951535,-2.732685,-1.557075,0.240858,8.120435,-7.715713,5.385106,6.887923,-2.449710,-5.672342,-1.850595,-6.834996,4.666384,-3.710530,5.444244,-0.564934,-2.136109,8.711274,9.868874,8.309695,-2.310897,-7.745903,8.220299,-2.439160],[4.632267,2.876224,3.599525,-2.574288,7.177866,4.589786,5.253320,-5.733835,-2.670444,-8.462311,-8.489656,9.188659,9.254040,-4.288452,9.897051,-8.280505,1.228295,1.733235,8.203334,-4.115832,-7.018440,-6.148234,2.649720,4.934774,-6.191288,0.840796,7.706798,-5.830605],[5.081504,8.190312,1.850735,6.794077,1.942357,-6.661802,-1.744379,0.754701,-8.554852,-3.204341,-5.619283,-6.464038,7.512255,3.983780,-7.921528,2.832987,5.253149,-0.665200,1.684108,4.624647,-2.257869,0.343520,-9.683237,6.730362,-3.325293,0.640079,6.962336,-5.122312],[3.781832,-5.778282,3.318598,2.223824,-0.505841,0.053881,8.672512,4.633496,-8.724818,-1.795513,8.614862,-5.966299,8.408017,1.707984,5.842944,7.361259,1.300096,-0.719501,-0.704036,3.127846,9.297724,-3.504531,-6.067115,6.239001,-1.041228,5.353500,4.152270,-5.157499],[5.286668,-2.312839,2.063575,-4.307096,2.294784,4.203578,-5.145502,-1.569411,4.737024,0.718299,-1.184149,2.445265,-3.848537,0.566891,-1.978852,3.369633,6.440869,-7.373857,3.657838,3.643881,1.704892,-7.711292,-0.078679,0.009569,5.686308,7.052491,8.256565,0.345518],[0.498227,-9.243215,-3.831108,-0.413867,6.671616,-2.829600,1.119857,9.824791,-8.287014,-1.433525,-0.718078,-7.606045,-0.945591,-7.955340,-6.067053,-3.274161,-9.455368,9.851207,-5.862011,-6.361926,-0.615946,-1.250168,-7.395203,-9.661114,-0.483368,2.399217,3.251109,-2.147954],[1.530020,0.618800,-5.158668,-2.217869,-7.931310,3.144858,5.535905,-7.189757,-0.741790,7.051307,-1.596505,3.689279,-9.238441,-2.319283,4.242338,-6.114565,8.172814,-2.532534,4.921092,-9.492978,8.423100,-5.792323,3.741420,-0.374395,7.823868,-2.030888,-2.951809,-5.323100],[6.163611,-3.001780,-8.382608,4.534480,-4.668754,9.443071,-3.831656,-8.341563,-3.513449,-6.320805,5.700140,0.190939,-5.066368,0.595033,-9.522380,-5.587143,-6.466729,-3.624576,5.749386,-2.443496,1.567921,9.456952,3.701154,9.515982,-6.438502,5.618392,1.627912,-5.501586],[-6.780079,-4.058175,-8.530484,-3.708615,7.278989,9.230903,8.785066,-7.060192,5.699417,-5.740955,5.254934,-9.200750,-2.071267,-5.602912,2.107010,7.932544,-8.095398,-2.439285,-3.323781,7.627941,3.772056,-0.544896,-8.344956,2.055605,-4.251143,-5.244980,-7.095312,5.244824],[-9.515096,-1.745060,8.524626,5.450206,2.253269,-5.068545,6.742935,9.676682,-0.160293,1.180750,-0.836746,-1.024035,-8.577073,1.465378,-3.109164,6.004797,-5.154410,-1.639439,-8.271553,0.687046,5.922567,5.629215,8.260475,4.222309,9.118758,-8.986887,6.577571,-5.405827],[5.428070,-4.854614,0.021484,-0.588665,8.398790,2.242877,-3.389314,1.829440,-5.024751,-1.958212,5.100801,9.052449,-9.537337,9.966875,-0.648168,-0.358792,5.829738,6.210856,-0.995537,-2.199682,-9.984722,4.715337,-6.562143,-9.278771,-1.675533,-6.240766,-3.832704,-1.990689],[2.525606,3.062414,9.947495,1.422264,-7.608269,2.022641,-7.815725,4.606679,7.524638,6.167391,3.629577,-0.155206,6.182606,-5.459416,-4.474861,-4.991187,-6.137030,-0.253873,3.771566,-3.927373,-0.880721,4.922742,0.459816,-4.223341,1.302149,-4.902674,7.754426,-9.712140],[5.213229,4.297391,0.769066,0.307907,0.064745,-9.765927,5.549754,-9.883891,-9.128437,-5.965527,-6.519524,0.956097,-1.818262,0.206083,-7.153741,-5.912110,-3.859732,-3.507863,-6.149701,5.941861,4.829440,-8.944590,-0.992305,-1.108155,-8.434587,-0.885206,0.562043,3.970174],[6.171953,-1.838204,-2.043258,2.090752,-1.686384,6.768614,9.871250,-0.184345,-4.352105,3.354491,9.691431,7.240850,-7.542098,0.641507,1.798452,1.515059,7.419705,3.602414,5.420041,-3.532046,-7.570567,-4.200842,-0.744106,-9.043432,4.689176,4.354558,9.075598,3.950040],[-6.140158,-6.400352,8.248724,-6.876004,7.890417,-0.149286,-1.114939,-6.246188,-3.692888,-6.046999,7.109118,9.025627,-2.464843,2.064092,-6.476052,1.187008,3.175925,-9.657232,0.301708,4.792854,-6.261666,4.171486,-3.592906,2.515780,-7.400482,1.821171,-8.872959,8.328971],[2.384657,7.013567,5.165928,-3.760256,-3.573714,9.614517,7.198609,-4.412207,-3.973976,-2.018166,7.388316,-4.235605,3.841520,4.702240,-9.140524,-0.801373,6.908063,1.789528,-6.701001,-7.910693,6.887695,8.734289,-2.338125,-5.632555,2.295857,-5.875048,2.320159,5.118561],[-8.400482,-2.087492,1.276599,0.150681,-7.600643,7.969606,-1.685607,6.489270,6.536413,4.544285,-7.495965,-0.669678,-2.161181,-3.934291,7.217509,6.344339,-1.183586,0.446074,-2.585054,7.434983,0.780808,-1.118724,-0.722546,7.472841,-0.427163,0.540279,2.326337,-9.839447],[-5.003943,5.050485,-4.602497,-2.434615,-0.495063,-5.421407,-3.619092,-0.431031,-8.585651,8.601201,-7.982882,-2.941487,9.748072,-6.143558,-2.658108,7.696210,8.026562,-9.952133,6.955464,2.597301,-9.127135,-9.489690,2.648637,7.362098,3.058043,-9.228917,9.366430,-0.781568],[-3.546247,0.216677,-3.175849,-1.997097,8.078378,0.829472,4.428328,8.618009,1.620645,-0.395431,-5.220702,-0.540477,-9.852637,8.647925,-5.841672,7.810405,-6.013400,2.702571,5.933467,1.277456,-5.833402,0.488132,6.885696,-2.608501,-7.344210,8.465923,-7.809082,3.364632],[-4.777313,-9.875926,-3.750795,7.786966,5.030311,1.926761,-7.412602,0.055039,-3.816794,-9.822216,2.702393,-1.178609,1.611303,-9.817541,4.939024,3.970368,2.740684,-0.329002,1.947680,-3.080890,-8.557755,3.562465,-1.015306,-8.962810,7.628181,-6.740607,0.451781,-8.952949],[-5.804365,-5.723329,-6.711552,4.521441,1.745761,-3.060169,-3.921156,7.984567,-5.399654,2.627179,-6.160493,1.811837,3.496825,-4.874588,-8.090002,9.862601,-3.101237,7.894041,7.620397,-0.063656,-7.749664,8.750732,3.173118,-6.728933,7.598966,4.317973,7.075131,7.136540],[-7.624064,4.655312,4.438597,-6.958180,-6.282098,-9.244526,-9.394499,-9.514913,5.722992,1.696991,9.945139,0.336158,-5.037454,-5.222115,5.467507,-4.332237,8.171959,0.701046,-2.738791,-3.995763,6.792505,3.593102,1.420989,-3.506872,8.252906,-5.750632,8.109734,-2.525660],[-6.385634,2.375454,-5.344367,6.619351,0.243056,-1.674608,-1.312216,-2.857299,-1.812447,-2.936364,-6.550700,-5.297866,-1.393893,-9.924755,-7.586440,7.315053,1.696017,7.117977,-8.000353,2.443029,3.755415,-1.796285,6.107888,5.147473,-7.002967,5.165847,-4.626816,-6.290749],[-8.698563,7.534223,4.562278,1.994278,2.913166,3.493067,-0.321808,-7.551399,-5.554586,5.127144,0.050331,6.585584,-2.973482,-1.888277,3.464670,-4.191321,0.110561,-2.884452,-0.783059,6.140582,-2.881826,-9.721200,-6.265391,-1.069819,4.885947,-1.038144,-1.300167,-1.233242],[-4.308539,-9.715111,0.741596,-4.707658,-1.550633,-3.702692,-9.574953,-7.153252,-6.044232,9.322968,2.832387,0.699812,-9.492464,-4.323790,-3.219658,6.340844,4.961174,-3.824174,-7.946357,-8.187038,8.013885,-5.241257,-1.000713,0.716039,1.731123,5.639805,-4.885516,4.400179],[-6.835033,-7.280351,-1.230571,-3.130882,6.303218,-3.861295,2.685487,-0.577029,3.054310,-0.615504,7.693531,-6.659726,9.736752,-2.224103,3.640274,-1.408851,2.327852,-9.219487,-7.252921,8.207775,3.741716,-7.240466,-6.887370,7.684433,6.657698,-6.549015,0.347227,4.003857],[-1.316413,8.137405,6.457471,-2.952959,-3.033289,-8.473664,3.193618,-4.537070,4.850444,5.125553,1.665689,-5.496469,-2.202188,1.595192,4.781340,-3.076907,-9.490755,1.104742,4.940220,-2.111290,-3.596942,8.447768,8.840849,-9.056239,-5.957343,-9.315302,0.547984,-0.291087],[4.617021,8.114933,-1.803581,2.006171,5.318063,-6.064263,-6.924269,-9.715086,1.847576,-6.730647,4.635740,3.104846,-4.744911,7.445912,-9.471268,9.676848,-8.875016,5.764700,9.710251,9.392552,5.520032,2.404474,7.822614,6.124311,4.628597,8.634358,-8.600129,-8.334142],[-2.974251,-4.932434,8.047409,4.923583,2.184156,-9.274017,4.573422,3.907389,3.464039,-4.264087,1.454164,7.557520,2.257786,9.665987,-8.203789,-5.106453,-8.806979,3.557300,-5.810667,4.019254,2.800643,-4.319431,3.065572,-1.604206,7.089949,7.986444,-4.353638,1.305195],[5.860985,7.151803,8.156423,6.642092,2.156864,8.054077,1.809697,1.110419,2.541575,0.401159,5.622527,2.525495,-8.892640,4.912584,-3.810306,-9.301560,-0.990750,6.835222,9.861556,2.435829,4.575036,-2.431755,0.273604,-4.220374,-8.036577,5.320010,0.020401,-3.187347],[-3.741609,-5.403260,-5.597930,-4.480700,-5.906981,-4.713578,-3.779657,-2.531616,4.811239,-1.391102,-1.297973,1.795762,-3.347324,4.419357,9.956076,2.641411,0.096631,-8.771841,-7.445738,-9.106546,-7.015511,-6.628545,-7.346208,1.640123,-3.011269,-0.838508,-4.459077,0.458805],[5.495364,-9.652685,-7.627170,-8.646131,3.082411,6.492788,5.063026,-7.537352,8.447219,2.013326,-8.905381,5.788640,-2.670425,4.033935,1.105308,-5.722181,2.956632,8.998617,-7.673366,-1.790418,1.023449,-0.733228,8.264559,-1.313739,2.331565,0.205464,-9.735102,-8.784035],[-6.607507,0.010982,-6.610700,-8.145286,-2.772922,9.994297,3.228179,-0.574524,-9.940500,-3.290913,-6.606473,-5.275550,-4.395151,1.604063,-3.385769,7.994864,9.969674,-6.217190,-9.615641,-3.182923,-3.928195,-9.786539,4.515541,-2.102018,2.399887,6.822492,-8.481795,2.458037],[7.364160,5.099084,4.398775,8.357479,-9.909511,-1.955391,-7.730927,7.787886,0.195091,3.211367,2.814935,-5.717967,-7.765666,-1.989561,1.836660,6.594677,-9.558558,-6.598071,2.283581,-1.817493,3.859326,2.682702,5.696889,-7.323042,-6.775552,3.147536,-4.790706,-2.160754],[-6.454164,6.853927,-5.141157,-0.454752,6.311560,-9.775305,-7.943416,-8.761335,-9.746910,-2.974513,9.240650,-1.872066,-0.085009,3.811437,2.015550,8.108053,-5.684677,2.198488,6.741129,2.169032,-5.213006,7.285949,-9.491664,-2.388470,1.743383,9.040003,7.475026,-0.096165]], dtype = "float64")#candidate|5401|(64, 28)|const|float64
call_5400 = func_2293_call(relay.reshape(const_5401.astype('float64'), [8, 14, 16]))
call_5402 = func_2293_call(relay.reshape(const_5401.astype('float64'), [8, 14, 16]))
var_5408 = relay.var("var_5408", dtype = "float64", shape = (64, 28))#candidate|5408|(64, 28)|var|float64
bop_5409 = relay.minimum(const_5401.astype('int64'), relay.reshape(var_5408.astype('int64'), relay.shape_of(const_5401))) # shape=(64, 28)
uop_5412 = relay.cosh(bop_5409.astype('float64')) # shape=(64, 28)
uop_5414 = relay.sinh(const_5401.astype('float64')) # shape=(64, 28)
func_3536_call = mod.get_global_var('func_3536')
func_3537_call = mutated_mod.get_global_var('func_3537')
call_5431 = relay.TupleGetItem(func_3536_call(), 0)
call_5432 = relay.TupleGetItem(func_3537_call(), 0)
bop_5436 = relay.power(uop_5412.astype('float32'), relay.reshape(uop_5414.astype('float32'), relay.shape_of(uop_5412))) # shape=(64, 28)
bop_5441 = relay.greater(uop_5414.astype('bool'), relay.reshape(bop_5409.astype('bool'), relay.shape_of(uop_5414))) # shape=(64, 28)
uop_5448 = relay.sin(bop_5409.astype('float32')) # shape=(64, 28)
output = relay.Tuple([call_5372,call_5400,call_5431,bop_5436,bop_5441,uop_5448,])
output2 = relay.Tuple([call_5373,call_5402,call_5432,bop_5436,bop_5441,uop_5448,])
func_5453 = relay.Function([var_5408,], output)
mod['func_5453'] = func_5453
mod = relay.transform.InferType()(mod)
var_5454 = relay.var("var_5454", dtype = "float64", shape = (64, 28))#candidate|5454|(64, 28)|var|float64
output = func_5453(var_5454)
func_5455 = relay.Function([var_5454], output)
mutated_mod['func_5455'] = func_5455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4552_call = mod.get_global_var('func_4552')
func_4554_call = mutated_mod.get_global_var('func_4554')
call_5489 = func_4552_call()
call_5490 = func_4552_call()
output = relay.Tuple([call_5489,])
output2 = relay.Tuple([call_5490,])
func_5491 = relay.Function([], output)
mod['func_5491'] = func_5491
mod = relay.transform.InferType()(mod)
mutated_mod['func_5491'] = func_5491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5491_call = mutated_mod.get_global_var('func_5491')
call_5492 = func_5491_call()
output = call_5492
func_5493 = relay.Function([], output)
mutated_mod['func_5493'] = func_5493
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5524 = relay.var("var_5524", dtype = "int8", shape = (15, 12, 3))#candidate|5524|(15, 12, 3)|var|int8
var_5525 = relay.var("var_5525", dtype = "int8", shape = (15, 12, 3))#candidate|5525|(15, 12, 3)|var|int8
bop_5526 = relay.left_shift(var_5524.astype('int8'), relay.reshape(var_5525.astype('int8'), relay.shape_of(var_5524))) # shape=(15, 12, 3)
func_5001_call = mod.get_global_var('func_5001')
func_5004_call = mutated_mod.get_global_var('func_5004')
var_5537 = relay.var("var_5537", dtype = "float64", shape = (2002,))#candidate|5537|(2002,)|var|float64
call_5536 = relay.TupleGetItem(func_5001_call(relay.reshape(var_5537.astype('float64'), [2002, 1])), 2)
call_5538 = relay.TupleGetItem(func_5004_call(relay.reshape(var_5537.astype('float64'), [2002, 1])), 2)
output = relay.Tuple([bop_5526,call_5536,var_5537,])
output2 = relay.Tuple([bop_5526,call_5538,var_5537,])
func_5542 = relay.Function([var_5524,var_5525,var_5537,], output)
mod['func_5542'] = func_5542
mod = relay.transform.InferType()(mod)
var_5543 = relay.var("var_5543", dtype = "int8", shape = (15, 12, 3))#candidate|5543|(15, 12, 3)|var|int8
var_5544 = relay.var("var_5544", dtype = "int8", shape = (15, 12, 3))#candidate|5544|(15, 12, 3)|var|int8
var_5545 = relay.var("var_5545", dtype = "float64", shape = (2002,))#candidate|5545|(2002,)|var|float64
output = func_5542(var_5543,var_5544,var_5545,)
func_5546 = relay.Function([var_5543,var_5544,var_5545,], output)
mutated_mod['func_5546'] = func_5546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4552_call = mod.get_global_var('func_4552')
func_4554_call = mutated_mod.get_global_var('func_4554')
call_5590 = func_4552_call()
call_5591 = func_4552_call()
func_1670_call = mod.get_global_var('func_1670')
func_1673_call = mutated_mod.get_global_var('func_1673')
var_5599 = relay.var("var_5599", dtype = "float64", shape = (143, 14))#candidate|5599|(143, 14)|var|float64
call_5598 = relay.TupleGetItem(func_1670_call(relay.reshape(var_5599.astype('float64'), [14, 13, 11])), 1)
call_5600 = relay.TupleGetItem(func_1673_call(relay.reshape(var_5599.astype('float64'), [14, 13, 11])), 1)
func_3011_call = mod.get_global_var('func_3011')
func_3017_call = mutated_mod.get_global_var('func_3017')
var_5606 = relay.var("var_5606", dtype = "int32", shape = (1755,))#candidate|5606|(1755,)|var|int32
var_5607 = relay.var("var_5607", dtype = "float32", shape = (1078,))#candidate|5607|(1078,)|var|float32
call_5605 = relay.TupleGetItem(func_3011_call(relay.reshape(var_5606.astype('int32'), [13, 9, 15]), relay.reshape(var_5606.astype('int32'), [13, 9, 15]), relay.reshape(call_5590.astype('float64'), []), relay.reshape(var_5607.astype('float32'), [539, 2]), ), 6)
call_5608 = relay.TupleGetItem(func_3017_call(relay.reshape(var_5606.astype('int32'), [13, 9, 15]), relay.reshape(var_5606.astype('int32'), [13, 9, 15]), relay.reshape(call_5590.astype('float64'), []), relay.reshape(var_5607.astype('float32'), [539, 2]), ), 6)
func_4624_call = mod.get_global_var('func_4624')
func_4625_call = mutated_mod.get_global_var('func_4625')
call_5615 = relay.TupleGetItem(func_4624_call(), 0)
call_5616 = relay.TupleGetItem(func_4625_call(), 0)
output = relay.Tuple([call_5590,call_5598,var_5599,call_5605,var_5606,var_5607,call_5615,])
output2 = relay.Tuple([call_5591,call_5600,var_5599,call_5608,var_5606,var_5607,call_5616,])
func_5621 = relay.Function([var_5599,var_5606,var_5607,], output)
mod['func_5621'] = func_5621
mod = relay.transform.InferType()(mod)
var_5622 = relay.var("var_5622", dtype = "float64", shape = (143, 14))#candidate|5622|(143, 14)|var|float64
var_5623 = relay.var("var_5623", dtype = "int32", shape = (1755,))#candidate|5623|(1755,)|var|int32
var_5624 = relay.var("var_5624", dtype = "float32", shape = (1078,))#candidate|5624|(1078,)|var|float32
output = func_5621(var_5622,var_5623,var_5624,)
func_5625 = relay.Function([var_5622,var_5623,var_5624,], output)
mutated_mod['func_5625'] = func_5625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3691_call = mod.get_global_var('func_3691')
func_3693_call = mutated_mod.get_global_var('func_3693')
call_5658 = relay.TupleGetItem(func_3691_call(), 0)
call_5659 = relay.TupleGetItem(func_3693_call(), 0)
output = call_5658
output2 = call_5659
func_5664 = relay.Function([], output)
mod['func_5664'] = func_5664
mod = relay.transform.InferType()(mod)
mutated_mod['func_5664'] = func_5664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5664_call = mutated_mod.get_global_var('func_5664')
call_5665 = func_5664_call()
output = call_5665
func_5666 = relay.Function([], output)
mutated_mod['func_5666'] = func_5666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5697 = relay.var("var_5697", dtype = "float32", shape = (2, 12, 16))#candidate|5697|(2, 12, 16)|var|float32
uop_5698 = relay.sqrt(var_5697.astype('float32')) # shape=(2, 12, 16)
func_5068_call = mod.get_global_var('func_5068')
func_5070_call = mutated_mod.get_global_var('func_5070')
call_5702 = func_5068_call()
call_5703 = func_5068_call()
output = relay.Tuple([uop_5698,call_5702,])
output2 = relay.Tuple([uop_5698,call_5703,])
func_5714 = relay.Function([var_5697,], output)
mod['func_5714'] = func_5714
mod = relay.transform.InferType()(mod)
var_5715 = relay.var("var_5715", dtype = "float32", shape = (2, 12, 16))#candidate|5715|(2, 12, 16)|var|float32
output = func_5714(var_5715)
func_5716 = relay.Function([var_5715], output)
mutated_mod['func_5716'] = func_5716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3691_call = mod.get_global_var('func_3691')
func_3693_call = mutated_mod.get_global_var('func_3693')
call_5739 = relay.TupleGetItem(func_3691_call(), 0)
call_5740 = relay.TupleGetItem(func_3693_call(), 0)
output = call_5739
output2 = call_5740
func_5765 = relay.Function([], output)
mod['func_5765'] = func_5765
mod = relay.transform.InferType()(mod)
output = func_5765()
func_5766 = relay.Function([], output)
mutated_mod['func_5766'] = func_5766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5491_call = mod.get_global_var('func_5491')
func_5493_call = mutated_mod.get_global_var('func_5493')
call_5857 = relay.TupleGetItem(func_5491_call(), 0)
call_5858 = relay.TupleGetItem(func_5493_call(), 0)
output = call_5857
output2 = call_5858
func_5887 = relay.Function([], output)
mod['func_5887'] = func_5887
mod = relay.transform.InferType()(mod)
mutated_mod['func_5887'] = func_5887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mutated_mod.get_global_var('func_5887')
call_5888 = func_5887_call()
output = call_5888
func_5889 = relay.Function([], output)
mutated_mod['func_5889'] = func_5889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5068_call = mod.get_global_var('func_5068')
func_5070_call = mutated_mod.get_global_var('func_5070')
call_5890 = func_5068_call()
call_5891 = func_5068_call()
func_1595_call = mod.get_global_var('func_1595')
func_1599_call = mutated_mod.get_global_var('func_1599')
var_5899 = relay.var("var_5899", dtype = "float64", shape = ())#candidate|5899|()|var|float64
var_5900 = relay.var("var_5900", dtype = "float64", shape = (42,))#candidate|5900|(42,)|var|float64
const_5901 = relay.const([-4.149481,8.304299,5.947550,-2.312363,5.985497,4.542198,-8.967476,6.171609,-8.762027,-6.468259,-9.160100,-1.932029,-9.670920,6.845884,-6.403557,8.236231,5.754384,-1.118249,3.035570,0.282490,-6.570365,9.144226,-5.045301,-0.669052,6.537649,7.516297,-3.288254,0.258513,2.330967,-1.212560,9.752217,3.643822,8.453930,7.538190,-3.842533,0.887901,4.336830,-4.248119,-6.271134,-5.793351,6.220581,5.429443,4.825356,-7.476941,4.074334,-6.856017,1.658137,1.852414,5.150599,0.114696,3.541077,-8.245895,0.512698,-3.950270,-1.188655,-9.577262,0.549485,0.470074,-1.421466,3.314983,-9.823211,-8.618398,1.825101,-0.654754,-7.631802,7.451640,0.293534,-4.145720,-7.042105,-0.900748,2.292632,-0.471691,-5.745942,6.408946,4.986171,-4.914071,7.919793,1.908008,3.674075,4.835727,-6.658638,7.213947,8.707714,-5.014482,9.967816,-7.969118,3.553382,2.375655,-3.299000,-6.893556,2.062947,4.596976,3.379989,-5.272320,6.868937,-1.026466,-8.555172,5.364820,8.258589,7.584085,-9.175648,3.404408,-5.986213,5.679125,-7.251339,-2.069841,-5.703213,-6.862505,7.849359,-3.057616,-2.018053,-5.176714,3.542869,-0.596003,3.255189,0.397571,1.911529,-8.586781,4.348587,-8.833459,8.307780,8.284867,0.321122,-0.270127,-5.750105,2.579681,5.097190,5.224627,8.725983,-7.626282,5.332999,-0.435610,-4.968557,-0.991516,-8.567422,5.487638,-5.286626,5.283624,-8.771855,-3.731809,8.543206,-9.379696,4.875657,7.288121,3.428012,5.994441,5.053189,-4.065846,-0.869343,3.727562,7.868704,6.362952,2.447276,1.397986,-9.921887,2.105864,9.930736,-4.176518,2.987538,7.494298,3.827725,-9.589973,-1.599703,0.051356,2.291633,1.541226,1.120072,-4.323548,-3.356812,0.618467,7.520474,-5.324844,-0.774720,8.079876,-9.356116,-6.588773,-6.104468,-8.453918,7.768737,6.597397,-9.631675,-8.233189,0.410115,-0.863991,-8.531516,-2.371350,-4.496736,5.237027,-5.430349,1.269863,5.449916,-6.805803,-8.175550,8.751580,-2.107510,-1.066325,0.835963,1.446030,-4.010428,-7.128584,4.112032,-3.629282,6.106045,-4.845521,0.461196,-6.171901,3.926017,-3.328281,3.975755,-0.523929,-5.024017,-7.036130,6.477712,3.230365,-8.718088,-4.360961,-7.992275,5.082747,-5.017306,7.846909,6.416325,3.763455,6.004987,-7.384267,5.547960,-4.745505,-3.061707,3.889433,-4.418471,3.450112,9.767568,-8.954762,-5.354540,2.352208,6.290542,-5.801426,6.267583,-6.980555,9.268523,7.603806,7.139058,6.016542,5.763208,0.921066,9.895031,-5.188769,-8.015840,-5.695551,-4.359186,-3.777008,7.923556,1.144567,-6.530598,6.723652,-5.510930,-0.326253,-9.160027,5.291827,-7.612408,-0.705899,0.839226,-9.445478,4.065782,7.595787,4.262277,-2.827965,-1.818339,7.062939,4.478648,1.753651,9.513035,4.982394,4.179828,7.367858,2.310422,2.625323,-9.017203,-8.033239,-5.648317,-7.810946,0.278269,-9.162284,-4.762107,-0.004326,-2.080603,1.272311,1.593359,-5.573570,-9.204835,0.188222,5.512634,-1.957795,-1.141300,0.157765,-9.761039,-3.032382,-9.711041,-3.061219,-4.727784,-8.819336,-5.620103,8.673974,-9.436011,-9.340358,9.892719,-7.154340,-2.823531,6.630880,-6.983741,7.730922,-9.767950,-2.594239,1.298298,1.344087,-7.923993,-2.088583,5.162648,-3.132434,0.184651,-6.058473,-7.373736,8.609162,-0.995499,-7.814325,-8.500189,4.919798,6.707219,9.028093,-0.953086,6.375412,0.631702,2.512130,8.737290,-4.354686,-8.928667,6.639796,-2.124904,9.759419,3.196728,1.695213,-7.426504,-6.253357,-1.720745,-4.050111,-8.856156,1.097724,3.176409,4.635857,7.295099,-9.075753,-4.912068,-3.303490,-7.770643,6.462774,5.289171,7.253363,-2.767445,-3.679528,-7.197619,9.769787,-0.823325,-1.968396,-9.632630,-1.418672,0.667786,2.775297,-4.913280,-2.938475,-1.595618,0.082497,-4.375869,3.717128,-6.907249,-0.945883,-8.892689,-0.349021,-0.970283,-9.301969,-6.828273,-1.216926,5.080995,5.248365,-1.168949,5.129464,-8.518086,-5.054395,0.789411,4.464363,4.252510,-7.106925,5.279029,-2.315101,3.908847,-5.223820,7.176813,-1.299713,1.857351,3.154333,4.928790,-7.238341,2.211184,4.588452,-9.886925,-4.393061,-0.881463,9.611763,4.724826,4.378286,-7.894525,-2.211058,8.749069,6.956924,1.670151,-6.313649,1.070201,-1.006555,9.511273,0.464004,-7.900263,-5.121144,2.995909,-7.476464,5.014997,0.331146,-8.306958,-2.390265,-2.636249,-3.766345,-6.122306,6.850178,9.343199,-3.580386,5.235407,-9.835011,7.094382,-8.838886,-2.414719,-6.945932,-1.960778,7.247140,4.615604,-3.427429,3.063083,9.001081,9.397341,4.471457,-3.700785,-8.459072,-6.096532,9.289692,8.875248,-8.902529,9.815083,6.792203,-6.147092,-6.973786,-1.421950,-4.398369,2.062803,7.453769,-2.752387,7.456061,-8.852375,-1.373486,-7.497048,8.790349,8.900553,4.146309,-2.871905,-1.712254,1.022968,-5.465621,-4.099286,-7.427289,3.274647,-5.275761,-3.128839,-3.138636,8.052332,6.039787,4.206018,1.789765,-5.187138,3.593119,-4.420460,-7.068071,-4.757177,5.192557,8.938686,-8.968095,-5.103352,-1.621601,-6.982613,6.264851,2.399019,2.622192,8.427109,3.782865,0.030503,-4.251066,-8.183475,7.939201,-4.519406,0.450528,-8.376813,-8.894922,8.822267,-8.520065,6.425786,4.923169,-7.728880,0.595056,-3.560211,-6.458017,1.260142,6.297877,8.659003,-8.056943,9.544296,1.215627,8.716770,-7.428011,-5.689315,-9.516337,8.143090,-9.392741,-2.388183,9.929947,-5.127652,-8.236789,2.971429,8.700317,0.612110,-7.887197,-5.220549,-0.596769,8.789767,-7.580317,6.182255,3.338453,-0.826825,1.440212,-2.826133,7.577958,-3.501459,-6.994999,7.206449,-9.307320,-3.056093,-3.237415,-8.494665,-0.996152,0.254309,9.401984,-4.505689,6.358057,-2.711251,3.348035,-3.266590,4.227834,7.856485,-5.499707,2.065078,8.301153,8.550956,-4.073920,-9.502336,9.401835,3.668955,8.792442,9.650327,7.321586,7.196258,-9.628388,9.727140,-6.991763,-8.356489,-7.941582,6.537383,4.247816,2.033015,-8.448628,-6.373588,9.277653,-0.190895,9.983614,-6.297599,1.389521,-3.822314,5.771682,2.654858,-7.416126,-5.874280,2.400494,-5.736647,-9.061314,8.173449,5.576195,-7.183716,6.056065,9.458391,-3.451482,0.334121,3.859070,-0.112679,-1.736018,-4.439482,0.674807,2.970875,-3.326546,9.660753,9.574107,6.116760,-1.260065,1.420311,-9.623293,5.862049,-3.320411,-0.561351,-0.720694,-4.103041,-9.951748,2.774731,3.547751,7.455107,-1.514152,-8.683012,8.023572,-9.122540,9.343789,7.414069,6.479037,5.045589,-6.340877,1.636041,-3.448536,1.436551,6.593832,-7.292309,4.564851,-2.140790,-3.593519,6.620486,2.460530,9.693023,7.620619,-0.382540,0.422381,1.042399,-4.957377,-1.032802,-6.238888,7.747688,-3.987775,7.557028,8.814532,2.099767,-0.420370,1.504380,6.674796,3.706497,-2.117602,7.704070,1.094597,3.161688,4.272960,-4.508138,5.954336,4.393056,8.788491,1.617017,8.622689,-9.082851,4.395144,4.396884,-9.118050,6.962563,-1.102724,0.288387,9.559708,0.947147,-9.856452,9.571392,-4.411391,-1.137641,0.671653,-9.262901,-7.621997,-0.625990,0.383350,-0.481168,-4.461224,-0.316876,-8.937751,-6.754631,-8.264902,5.239292,9.800751,-7.148067,6.978631,9.993385,-1.602354,6.258294,-7.912354,-5.616070,2.358237,-4.380795,-2.422323,8.895705,-9.550743,4.290497,7.288685,0.966209,7.099681,-6.172166,-1.847724,3.350091,-4.503222,-3.911805,-2.931916,-2.309224,7.341481,-1.438155,8.375963,6.993048,0.238454,-0.466924,3.541593,-2.086826,4.473822,2.818878,-0.513551,-4.410958,-3.615578,-9.089735,4.030055,-5.740479,2.383167,-1.952909,-0.998519,-3.781953,-7.052281,5.575212,-7.756444,-5.806224,-9.794217,-9.728272,-5.896587,7.813070,9.896581,-1.519426,-6.153811,9.406260,1.189493,-1.482772,4.798154,8.923730,2.631526,9.740693,-6.205279,4.486227,-2.417403,-8.679191,-7.580675,3.238765,2.212155,-6.211233,-3.574116,8.174396,-4.449561,-4.153842,-3.943949,0.695298,-9.265555,9.348461,8.943776,9.568192,-4.250734,-3.509958,-6.012940,-6.593427,2.462304,2.251805,6.707234,5.255453,5.170839,4.659093,-1.349754,9.783107,-2.321114,3.686906,-0.794189,2.048483,-2.079836,1.929475,2.279801,-5.818283,3.907519,-1.770039,-9.811357,-2.224493,7.180364,3.757557,-0.954465,-7.825670,-0.658075,-1.121172,6.424525,0.411760,-1.751811,-0.059372,3.395722,-8.552585,-2.924338,1.327884,3.246300,-6.051060,9.833812,-6.114480,6.823711,-8.543139,-3.243704,-7.385250,-3.533505,-9.214556,-6.480833,-3.614627,5.193449,-0.609408,-8.942933,2.544017,9.151722,-0.257934,5.944064,6.248325,-3.233798,-9.060247,-0.342065,-8.298210,6.676321,9.416143,6.580203,1.923025,7.569940,-1.444101,3.141219,3.058217,-8.527112,9.041972,-2.122762,-4.444037,7.949042,4.132637,5.937992,-4.528430,-2.452809,-3.774789,-1.881232,7.534632,-1.239270,4.677325,5.392195,-5.377483,-1.867591,9.135476,-3.956206,6.622832,9.991331,-8.707802,-5.863023,6.148244,-8.199264,-9.174139,4.277289,-8.725946,-4.762994,5.962750,-6.642046,0.933965,5.318894,7.261756,-0.164072,7.348498,-3.714102,-6.108644,3.721796,8.492550,1.825279,-0.230909,1.552827,-5.038445,-6.439319,3.832556,-1.927453,1.370509,-4.875689,9.405012,-4.065687,-3.478844,-9.131656,0.572722,-3.310508,-5.371773,5.214723,-2.233106,3.790922,-1.613258,-9.457640,6.425715,-4.581051,-3.303114,1.589853,5.610036,0.174720,-7.697760,-5.940452,2.429922,4.269008,-2.607426,-8.835510,3.922960,-0.314978,0.393833,-3.871465,2.033174,2.797693,1.620344,2.459298,-3.472013,-4.021097,1.014277,6.311777,4.364071,-9.587742,4.985760,-9.083697,-9.275076,-6.686534,1.917694,-0.253767,3.854640,-2.688023,1.828008,9.817055,-4.453519,-2.099521,-5.363638,-1.587421,-3.478567,6.851969,2.604488,3.480501,-6.071690,3.367757,-8.500839,-0.444832,-2.205545,-4.073861,7.722283,5.576885,3.594959,0.654642,0.719528,8.341236,-9.321803,4.465819,-1.966977,2.051480,-4.444210,-5.847269,7.315871,-7.354901,8.825596,3.297049,-3.242457,3.787499,-0.611234,8.774516,-8.816733,-6.818387,-0.176542,1.473382,-1.990808,8.045420,4.464485,8.559135,6.459744,-7.856016,-9.245086,0.564671,5.919476,-7.183909,6.718662,7.103945,-2.848176,-4.150603,-1.852093,2.710198,-1.079953,5.165803,-8.611108,-0.137919,2.623927,-8.921999,-6.702773,-4.271857,-1.788253,-1.691828,9.605399,-6.156013,7.719153,-5.882662,-0.088942,-5.377077,-4.166183,-6.819763,-5.845543,-9.587658,-4.059482,5.575771,-7.112470,-8.035018,-2.930387,-8.433793,-6.972551,3.957770,1.838437,1.095713,8.216138,4.456075,-5.102748,-5.875054,-9.452639,-7.381006,2.287552,-8.667232,2.508483,3.003733,4.312670,8.942596,-0.956545,0.881906,-8.300071,7.855646,-4.545720,-9.544019,-8.489795,4.841576,8.333260,8.954281,0.861791,1.354338,-5.209401,-4.830101,-5.208559,-2.263801,-1.098294,7.223868,-9.128244,-1.327256,3.712606,9.517764,8.577649,-1.723997,-8.577486,9.585081,0.319899,2.316162,0.681362,6.829313,5.599277,-6.625877,0.385018,5.006274,-2.891055,-3.779121,-1.582435,-8.229077], dtype = "float32")#candidate|5901|(1078,)|const|float32
call_5898 = relay.TupleGetItem(func_1595_call(relay.reshape(var_5899.astype('float64'), []), relay.reshape(var_5900.astype('float64'), [6, 7, 1]), relay.reshape(const_5901.astype('float32'), [1078,]), ), 2)
call_5902 = relay.TupleGetItem(func_1599_call(relay.reshape(var_5899.astype('float64'), []), relay.reshape(var_5900.astype('float64'), [6, 7, 1]), relay.reshape(const_5901.astype('float32'), [1078,]), ), 2)
var_5903 = relay.var("var_5903", dtype = "int64", shape = (13, 8, 5))#candidate|5903|(13, 8, 5)|var|int64
bop_5904 = relay.power(call_5890.astype('float32'), relay.reshape(var_5903.astype('float32'), relay.shape_of(call_5890))) # shape=(13, 8, 5)
bop_5907 = relay.power(call_5891.astype('float32'), relay.reshape(var_5903.astype('float32'), relay.shape_of(call_5891))) # shape=(13, 8, 5)
bop_5916 = relay.less_equal(bop_5904.astype('bool'), relay.reshape(var_5903.astype('bool'), relay.shape_of(bop_5904))) # shape=(13, 8, 5)
bop_5919 = relay.less_equal(bop_5907.astype('bool'), relay.reshape(var_5903.astype('bool'), relay.shape_of(bop_5907))) # shape=(13, 8, 5)
uop_5928 = relay.atanh(bop_5904.astype('float32')) # shape=(13, 8, 5)
uop_5930 = relay.atanh(bop_5907.astype('float32')) # shape=(13, 8, 5)
output = relay.Tuple([call_5898,var_5899,var_5900,const_5901,bop_5916,uop_5928,])
output2 = relay.Tuple([call_5902,var_5899,var_5900,const_5901,bop_5919,uop_5930,])
func_5937 = relay.Function([var_5899,var_5900,var_5903,], output)
mod['func_5937'] = func_5937
mod = relay.transform.InferType()(mod)
var_5938 = relay.var("var_5938", dtype = "float64", shape = ())#candidate|5938|()|var|float64
var_5939 = relay.var("var_5939", dtype = "float64", shape = (42,))#candidate|5939|(42,)|var|float64
var_5940 = relay.var("var_5940", dtype = "int64", shape = (13, 8, 5))#candidate|5940|(13, 8, 5)|var|int64
output = func_5937(var_5938,var_5939,var_5940,)
func_5941 = relay.Function([var_5938,var_5939,var_5940,], output)
mutated_mod['func_5941'] = func_5941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5341_call = mod.get_global_var('func_5341')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_6001 = relay.TupleGetItem(func_5341_call(), 0)
call_6002 = relay.TupleGetItem(func_5342_call(), 0)
output = call_6001
output2 = call_6002
func_6015 = relay.Function([], output)
mod['func_6015'] = func_6015
mod = relay.transform.InferType()(mod)
output = func_6015()
func_6016 = relay.Function([], output)
mutated_mod['func_6016'] = func_6016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
call_6107 = relay.TupleGetItem(func_3442_call(), 0)
call_6108 = relay.TupleGetItem(func_3444_call(), 0)
output = relay.Tuple([call_6107,])
output2 = relay.Tuple([call_6108,])
func_6109 = relay.Function([], output)
mod['func_6109'] = func_6109
mod = relay.transform.InferType()(mod)
mutated_mod['func_6109'] = func_6109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6109_call = mutated_mod.get_global_var('func_6109')
call_6110 = func_6109_call()
output = call_6110
func_6111 = relay.Function([], output)
mutated_mod['func_6111'] = func_6111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5341_call = mod.get_global_var('func_5341')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_6142 = relay.TupleGetItem(func_5341_call(), 0)
call_6143 = relay.TupleGetItem(func_5342_call(), 0)
func_4011_call = mod.get_global_var('func_4011')
func_4013_call = mutated_mod.get_global_var('func_4013')
call_6158 = relay.TupleGetItem(func_4011_call(relay.reshape(call_6142.astype('float64'), [13, 8, 5])), 0)
call_6159 = relay.TupleGetItem(func_4013_call(relay.reshape(call_6142.astype('float64'), [13, 8, 5])), 0)
func_1096_call = mod.get_global_var('func_1096')
func_1098_call = mutated_mod.get_global_var('func_1098')
const_6170 = relay.const([6,-6,7,8,3,9,-10,-10,-5,-6], dtype = "int64")#candidate|6170|(10,)|const|int64
call_6169 = func_1096_call(relay.reshape(const_6170.astype('int64'), [1, 1, 10]))
call_6171 = func_1096_call(relay.reshape(const_6170.astype('int64'), [1, 1, 10]))
func_5318_call = mod.get_global_var('func_5318')
func_5321_call = mutated_mod.get_global_var('func_5321')
const_6177 = relay.const(9, dtype = "uint8")#candidate|6177|()|const|uint8
const_6178 = relay.const([-10,9,-10,7,-2,4,6,-9,-3,-7,-6,10,-9,8,-8,5], dtype = "uint8")#candidate|6178|(16,)|const|uint8
call_6176 = relay.TupleGetItem(func_5318_call(relay.reshape(const_6177.astype('uint8'), []), relay.reshape(const_6178.astype('uint8'), [16, 1, 1]), ), 1)
call_6179 = relay.TupleGetItem(func_5321_call(relay.reshape(const_6177.astype('uint8'), []), relay.reshape(const_6178.astype('uint8'), [16, 1, 1]), ), 1)
func_4011_call = mod.get_global_var('func_4011')
func_4013_call = mutated_mod.get_global_var('func_4013')
call_6183 = relay.TupleGetItem(func_4011_call(relay.reshape(call_6158.astype('float64'), [13, 8, 5])), 0)
call_6184 = relay.TupleGetItem(func_4013_call(relay.reshape(call_6158.astype('float64'), [13, 8, 5])), 0)
func_5001_call = mod.get_global_var('func_5001')
func_5004_call = mutated_mod.get_global_var('func_5004')
var_6197 = relay.var("var_6197", dtype = "float64", shape = (2002,))#candidate|6197|(2002,)|var|float64
call_6196 = relay.TupleGetItem(func_5001_call(relay.reshape(var_6197.astype('float64'), [2002, 1])), 0)
call_6198 = relay.TupleGetItem(func_5004_call(relay.reshape(var_6197.astype('float64'), [2002, 1])), 0)
output = relay.Tuple([call_6142,call_6158,call_6169,const_6170,call_6176,const_6177,const_6178,call_6183,call_6196,var_6197,])
output2 = relay.Tuple([call_6143,call_6159,call_6171,const_6170,call_6179,const_6177,const_6178,call_6184,call_6198,var_6197,])
func_6201 = relay.Function([var_6197,], output)
mod['func_6201'] = func_6201
mod = relay.transform.InferType()(mod)
mutated_mod['func_6201'] = func_6201
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6202 = relay.var("var_6202", dtype = "float64", shape = (2002,))#candidate|6202|(2002,)|var|float64
func_6201_call = mutated_mod.get_global_var('func_6201')
call_6203 = func_6201_call(var_6202)
output = call_6203
func_6204 = relay.Function([var_6202], output)
mutated_mod['func_6204'] = func_6204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mod.get_global_var('func_4836')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_6238 = relay.TupleGetItem(func_4836_call(), 2)
call_6239 = relay.TupleGetItem(func_4837_call(), 2)
func_3612_call = mod.get_global_var('func_3612')
func_3614_call = mutated_mod.get_global_var('func_3614')
var_6245 = relay.var("var_6245", dtype = "float64", shape = (1, 10))#candidate|6245|(1, 10)|var|float64
call_6244 = relay.TupleGetItem(func_3612_call(relay.reshape(var_6245.astype('float64'), [10,])), 0)
call_6246 = relay.TupleGetItem(func_3614_call(relay.reshape(var_6245.astype('float64'), [10,])), 0)
func_4807_call = mod.get_global_var('func_4807')
func_4809_call = mutated_mod.get_global_var('func_4809')
call_6251 = func_4807_call()
call_6252 = func_4807_call()
var_6255 = relay.var("var_6255", dtype = "float64", shape = (48, 24))#candidate|6255|(48, 24)|var|float64
bop_6256 = relay.add(call_6238.astype('int32'), relay.reshape(var_6255.astype('int32'), relay.shape_of(call_6238))) # shape=(48, 24)
bop_6259 = relay.add(call_6239.astype('int32'), relay.reshape(var_6255.astype('int32'), relay.shape_of(call_6239))) # shape=(48, 24)
output = relay.Tuple([call_6244,var_6245,call_6251,bop_6256,])
output2 = relay.Tuple([call_6246,var_6245,call_6252,bop_6259,])
func_6266 = relay.Function([var_6245,var_6255,], output)
mod['func_6266'] = func_6266
mod = relay.transform.InferType()(mod)
var_6267 = relay.var("var_6267", dtype = "float64", shape = (1, 10))#candidate|6267|(1, 10)|var|float64
var_6268 = relay.var("var_6268", dtype = "float64", shape = (48, 24))#candidate|6268|(48, 24)|var|float64
output = func_6266(var_6267,var_6268,)
func_6269 = relay.Function([var_6267,var_6268,], output)
mutated_mod['func_6269'] = func_6269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5765_call = mod.get_global_var('func_5765')
func_5766_call = mutated_mod.get_global_var('func_5766')
call_6314 = func_5765_call()
call_6315 = func_5765_call()
output = relay.Tuple([call_6314,])
output2 = relay.Tuple([call_6315,])
func_6319 = relay.Function([], output)
mod['func_6319'] = func_6319
mod = relay.transform.InferType()(mod)
mutated_mod['func_6319'] = func_6319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6319_call = mutated_mod.get_global_var('func_6319')
call_6320 = func_6319_call()
output = call_6320
func_6321 = relay.Function([], output)
mutated_mod['func_6321'] = func_6321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3246_call = mod.get_global_var('func_3246')
func_3247_call = mutated_mod.get_global_var('func_3247')
call_6327 = relay.TupleGetItem(func_3246_call(), 0)
call_6328 = relay.TupleGetItem(func_3247_call(), 0)
output = call_6327
output2 = call_6328
func_6357 = relay.Function([], output)
mod['func_6357'] = func_6357
mod = relay.transform.InferType()(mod)
output = func_6357()
func_6358 = relay.Function([], output)
mutated_mod['func_6358'] = func_6358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4624_call = mod.get_global_var('func_4624')
func_4625_call = mutated_mod.get_global_var('func_4625')
call_6426 = relay.TupleGetItem(func_4624_call(), 0)
call_6427 = relay.TupleGetItem(func_4625_call(), 0)
output = relay.Tuple([call_6426,])
output2 = relay.Tuple([call_6427,])
func_6437 = relay.Function([], output)
mod['func_6437'] = func_6437
mod = relay.transform.InferType()(mod)
output = func_6437()
func_6438 = relay.Function([], output)
mutated_mod['func_6438'] = func_6438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3691_call = mod.get_global_var('func_3691')
func_3693_call = mutated_mod.get_global_var('func_3693')
call_6457 = relay.TupleGetItem(func_3691_call(), 0)
call_6458 = relay.TupleGetItem(func_3693_call(), 0)
func_2087_call = mod.get_global_var('func_2087')
func_2096_call = mutated_mod.get_global_var('func_2096')
var_6469 = relay.var("var_6469", dtype = "float32", shape = (4, 2))#candidate|6469|(4, 2)|var|float32
var_6470 = relay.var("var_6470", dtype = "float64", shape = (252,))#candidate|6470|(252,)|var|float64
const_6471 = relay.const([-7.054337,-1.909645,-0.540418,9.779756,-8.980014,-4.456660,7.427208,-1.021102,1.995480,5.027555,7.365456,4.357189,0.415352,-5.443345,9.100920,1.394841,3.110525,9.869869,-2.204597,3.362576,-8.455591,5.888601,-7.838317,1.397264,-6.406489,-7.629395,-8.068745,-9.612677,-4.319672,-7.902772,-5.689225,-6.067290,9.218937,6.372672,-7.513220,8.883466,5.901717,-4.287923,-3.960092,5.413598,6.099307,-6.020125,8.081917,6.355245,5.320944,8.026748,8.518802,-2.660355,3.544191,6.987134,-3.121729,2.256641,5.488290,3.039807,6.634206,9.395436,5.548021,1.604450,-4.713153,-1.863064,-2.669991,2.488727,5.493361,4.909802,-0.211729,4.354119,9.561764,-1.706640,-8.302475,-5.917700,-6.124012,-0.828094,4.130133,0.663359,4.678052,3.891539,6.052746,2.739955,-5.591930,-3.719697,5.711189,5.069408,-5.691615,-5.939526,-2.467975,-9.116009,-4.632883,-0.322561,-5.825102,9.637200,7.339362,-7.825984,8.240922,-0.260133,-5.979513,-5.297956,-8.308102,-7.161747,8.694550,7.346997,8.971232,1.355811,0.754303,5.663320,2.429701,3.624784,2.951260,0.944175,5.851045,6.666863,-5.263156,-2.629248,1.446475,7.104042,2.484701,-0.506948,2.081406,-6.952667,9.247817,-8.697611,-6.772900,-4.326261,3.112351,-6.598388,4.773445,-1.682178,-6.205040,-1.109612,3.465348,-9.571481,-7.017161,4.323930,-1.821652,-2.694876,0.697928,-7.990775,-1.008039,-4.293695,7.688463,0.925625,-7.899766,-4.308536,-4.161225,-9.066240,0.616809,-6.418349,-5.239295,5.426468,3.143968,-4.726709,-0.124386,-8.966724,2.820237,8.962068,9.225318,1.758060,-9.522974,-7.759400,-4.127510,9.590490,-1.782723,-2.604692,8.455013,4.216628,9.941677,-0.268408,5.157823,3.393229,5.762314,7.460728,0.339280,-5.898469,-1.297227,-7.659375,0.030256,-2.074284,1.868907,-4.294807,-3.763777,1.455306,-5.842132,-2.295306,-1.554911,-9.275722,-2.349010,-2.451186,9.214262,9.280248,-3.614659,-3.917439,8.154769,6.018048,9.440992,-9.510354,8.073811,-1.685364,9.021067,4.946754,-6.694822,6.967522,1.393445,-2.671380,-6.028433,2.123941,0.785374,-4.710976,-1.829595,7.200013,-6.829271,-5.072464,0.067187,4.002823,2.292644,-5.248324,-3.766434,-5.746738,5.850714,-6.716658,-3.716797,-6.473532,-8.571344,7.867312,-1.435218,-8.867391,-4.747952,1.376740,7.413314,-6.545080,8.221482,-5.862808,-2.250601,-8.811840,2.677030,8.607757,-2.322613,9.666922,-9.969767,2.905725,9.697840,1.181139,-7.501803,7.828924,2.440076,-3.300832,-0.324912,8.844055,1.328999,1.361191,-1.920496,0.868766,-8.656399,0.781668,5.247971,-2.675290,8.489337,-6.214621,-9.078843,5.243833,8.785152,-0.806060,0.074998,-9.861257,2.579718,3.873904,-3.695536,-8.017758,-5.886408,6.883691,0.420659,-3.975877,-5.632959,-5.523626,9.132086,-5.879505,-4.240193,-8.312499,-6.781291,-8.424173,-8.089166,-5.581968,-6.611005,-1.950061,-6.047900,-1.240921,5.903872,-8.369721,4.800121,-9.297150,3.444195,8.957291,5.851139,9.655818,-9.671384,-8.504775,1.961014,5.641213,9.331512,-4.827999,-9.093649,1.300273,-7.235393,2.848489,1.280533,-8.063010,-8.093715,-0.809959,1.022586,-3.403869,0.674609,6.180919,8.431811,9.163601,-2.422974,-8.688499,-1.661332,-2.670077,-9.592283,8.867505,2.891054,-3.243303], dtype = "float32")#candidate|6471|(320,)|const|float32
const_6472 = relay.const([True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True], dtype = "bool")#candidate|6472|(784,)|const|bool
var_6473 = relay.var("var_6473", dtype = "uint64", shape = (25, 6))#candidate|6473|(25, 6)|var|uint64
const_6474 = relay.const([[-1.374817,-9.582982,-7.999186,-1.200228,-0.235810,-1.664948,-2.343256,-4.413227,6.354459,-7.803478,-8.834149,-0.903640,-8.454684,-6.960219,-0.681340,-6.048012,3.805871,-1.011065,8.214815,-6.395502,6.153414,-4.756339,2.489804,-0.885217,3.657471,-0.601861,-2.856501,2.613883,-6.189517,9.336904,-8.105821,1.961280,4.417225,-5.998385,-6.556746,-8.039920,4.515357,-6.314947,9.841624,1.679422,0.464285,-3.878934,8.100268,8.643498,-1.429008,-4.563548,-1.945618,-2.974171,7.171216,-9.573806,7.625153,2.727010,7.374958,0.061287,4.591919,2.111103,-1.228353,-3.003129,-5.877531,-1.239648,-9.541961,7.661542,-9.891489,-9.139544,-4.551263,-4.541738],[-8.535658,5.137273,8.986370,-8.829215,0.965074,9.554402,-9.859433,4.943609,3.157898,9.574901,-3.012890,-3.246111,-3.880502,-7.821273,-7.988684,1.713825,5.880047,-3.855277,7.597482,1.976936,9.592326,0.939770,-4.992995,-6.874113,-0.904575,2.882036,-4.147277,8.101454,0.491026,-4.434813,-9.537502,-4.045202,-9.787244,-2.116138,8.030872,-4.758850,8.641076,-7.027796,3.585726,1.367612,-8.394999,-5.583005,7.406848,-1.938376,-7.571120,-6.868995,-7.517134,-6.710296,1.206872,-7.690385,-0.089020,2.294184,-4.365309,8.663693,-2.877848,4.108410,7.289923,-4.961800,-2.015099,1.061869,2.021033,9.333484,-1.672969,-2.403096,0.845996,4.595878],[8.710708,8.463639,-3.091867,0.550105,2.442215,-7.886655,5.385825,5.856367,1.685545,-9.514404,-5.197015,-7.312983,8.143836,1.945695,3.193835,-5.780915,3.878655,0.781194,-1.877430,4.770512,7.387050,-4.169764,-2.606767,-2.820283,9.202324,-1.194245,3.975139,-7.683773,5.625897,3.268320,-0.010916,0.909177,1.139701,-6.074280,-5.050371,4.136083,0.891118,-7.166816,-7.198843,9.944736,5.164138,6.180233,-0.011054,0.374404,2.927170,-4.887050,-2.176740,-1.082585,-5.417928,8.735759,-1.076839,2.848841,-5.627083,5.334722,-2.361407,-2.992083,-5.227977,-9.302932,-4.640382,-7.131090,-7.830292,9.353485,-5.872885,-5.820176,-1.073039,9.021490],[2.791194,-8.907429,-8.069184,-0.363429,-2.805437,-5.937340,-5.124468,0.452179,-4.202847,3.366902,1.847051,6.732623,-3.483744,-6.822886,2.188335,5.533840,-3.637776,6.445331,5.830491,-4.011607,-0.621696,-1.148271,3.422340,9.903183,7.562363,6.213457,-1.949076,-7.496471,-9.484310,7.681030,6.037480,-1.628752,7.540098,-5.434000,5.094056,-4.615748,-4.395254,5.243904,7.376988,6.660406,1.515177,3.530931,-5.172713,-8.233705,-2.833660,-6.293717,-3.742756,-7.689030,-2.960222,-0.270920,4.091383,-7.079063,9.162965,2.545059,-0.424153,2.562234,6.358497,4.024788,-4.396157,7.714619,-9.160937,-7.732584,-8.577929,-7.063320,-1.025393,6.548034],[7.494504,8.801588,6.930644,7.525397,2.198915,1.532639,4.918734,-9.450076,-9.286101,0.441340,-1.357525,9.580870,-5.877003,3.652131,-2.785771,-4.650252,-3.634384,-4.854777,-8.942386,-8.605864,-3.070926,8.341751,-7.650508,6.086177,4.808084,9.764360,1.475688,-0.944247,-5.006043,-9.274765,-4.161168,6.640233,-5.990119,-9.649472,9.952973,-6.605730,-0.585529,-4.909859,-1.613788,6.725499,-8.773583,7.365981,0.317476,9.975357,2.530687,-8.317861,-9.050842,4.076816,2.003670,9.817191,-7.823382,-7.934931,4.758995,5.779593,4.810125,6.486673,-8.430390,8.887143,6.150914,8.082110,-6.013064,-3.513164,8.132570,9.391144,-0.199203,-4.545000]], dtype = "float32")#candidate|6474|(5, 66)|const|float32
var_6475 = relay.var("var_6475", dtype = "float32", shape = (1078,))#candidate|6475|(1078,)|var|float32
call_6468 = relay.TupleGetItem(func_2087_call(relay.reshape(var_6469.astype('float32'), [1, 8]), relay.reshape(var_6469.astype('float32'), [1, 8]), relay.reshape(var_6470.astype('float64'), [252,]), relay.reshape(const_6471.astype('float32'), [320,]), relay.reshape(const_6472.astype('bool'), [784, 1]), relay.reshape(var_6473.astype('uint64'), [150,]), relay.reshape(const_6474.astype('float32'), [330,]), relay.reshape(var_6475.astype('float32'), [1078,]), ), 3)
call_6476 = relay.TupleGetItem(func_2096_call(relay.reshape(var_6469.astype('float32'), [1, 8]), relay.reshape(var_6469.astype('float32'), [1, 8]), relay.reshape(var_6470.astype('float64'), [252,]), relay.reshape(const_6471.astype('float32'), [320,]), relay.reshape(const_6472.astype('bool'), [784, 1]), relay.reshape(var_6473.astype('uint64'), [150,]), relay.reshape(const_6474.astype('float32'), [330,]), relay.reshape(var_6475.astype('float32'), [1078,]), ), 3)
func_3069_call = mod.get_global_var('func_3069')
func_3071_call = mutated_mod.get_global_var('func_3071')
var_6479 = relay.var("var_6479", dtype = "float64", shape = (462,))#candidate|6479|(462,)|var|float64
call_6478 = relay.TupleGetItem(func_3069_call(relay.reshape(var_6479.astype('float64'), [6, 11, 7])), 1)
call_6480 = relay.TupleGetItem(func_3071_call(relay.reshape(var_6479.astype('float64'), [6, 11, 7])), 1)
uop_6483 = relay.log2(const_6474.astype('float32')) # shape=(5, 66)
func_5937_call = mod.get_global_var('func_5937')
func_5941_call = mutated_mod.get_global_var('func_5941')
const_6489 = relay.const([8.395016,-4.654843,-6.602542,-1.586610,6.373468,7.477964,2.769681,7.953467,4.378109,8.082150,-8.497089,-8.448877,7.028227,-5.760255,0.255055,1.810649,-9.913925,6.038922,3.994028,-2.103333,8.697752,4.718654,5.516393,7.926773,4.888944,7.456158,-5.995772,3.622558,-4.509000,-6.514779,-2.132675,2.442602,2.526370,1.714412,-4.663316,-2.090375,5.923053,4.424327,-3.527389,-4.877964,1.375531,4.749317], dtype = "float64")#candidate|6489|(42,)|const|float64
const_6490 = relay.const([[-3],[5],[-2],[-2],[-8],[-10],[3],[8],[-2],[-9],[-7],[2],[9],[8],[9],[-2],[4],[8],[6],[-6],[-6],[9],[-4],[1],[5],[-6],[9],[6],[4],[-2],[3],[-7],[3],[6],[-7],[4],[-1],[-3],[10],[-10],[5],[9],[5],[-2],[9],[-2],[-9],[-1],[6],[2],[2],[-7],[6],[9],[-7],[3],[8],[-6],[7],[-4],[1],[9],[6],[-4],[9],[-4],[-9],[7],[4],[-3],[6],[2],[8],[-9],[-5],[1],[8],[8],[2],[-4],[8],[-6],[-10],[6],[9],[-4],[-5],[-1],[4],[8],[-2],[7],[-1],[-5],[9],[-5],[-9],[5],[2],[-5],[1],[7],[6],[9],[-1],[-1],[-5],[4],[5],[8],[9],[10],[4],[9],[-7],[8],[4],[5],[5],[-9],[-8],[9],[9],[9],[5],[8],[9],[-1],[-5],[9],[-5],[-1],[-4],[8],[-8],[-6],[-7],[2],[-2],[-10],[8],[-10],[5],[-10],[-4],[-2],[7],[7],[-10],[1],[-3],[-8],[5],[6],[1],[-2],[-1],[-6],[6],[7],[-8],[-10],[-4],[6],[-3],[6],[7],[-4],[-4],[-8],[6],[5],[-6],[4],[-10],[3],[-1],[3],[-9],[1],[-10],[-8],[1],[-7],[-4],[-1],[9],[-8],[7],[-7],[4],[-5],[1],[2],[8],[4],[10],[-5],[3],[5],[9],[8],[10],[-10],[-7],[-5],[7],[5],[7],[9],[-1],[-3],[4],[10],[-10],[-7],[-1],[-4],[8],[-1],[3],[5],[4],[-9],[5],[6],[3],[-7],[-7],[-8],[-3],[5],[-9],[-6],[-5],[3],[3],[-9],[6],[-7],[9],[9],[7],[3],[-4],[-1],[6],[-3],[-5],[4],[-8],[-9],[5],[-7],[7],[5],[9],[8],[-3],[-10],[-1],[-6],[-6],[-4],[9],[-2],[-6],[-5],[8],[-5],[-6],[-1],[-6],[3],[-1],[6],[5],[-9],[-10],[4],[2],[8],[9],[-3],[7],[-4],[-8],[-10],[-5],[4],[7],[9],[4],[2],[2],[5],[6],[-4],[-9],[3],[-4],[-9],[-3],[9],[-3],[5],[-4],[1],[-2],[-4],[-3],[-10],[4],[-3],[2],[-9],[3],[1],[8],[-4],[-4],[10],[-3],[8],[3],[2],[2],[-4],[-8],[1],[3],[8],[-7],[-9],[-8],[5],[-2],[-10],[5],[-2],[1],[-6],[-8],[1],[-9],[9],[2],[7],[-6],[-4],[1],[-8],[4],[10],[7],[10],[6],[1],[6],[1],[4],[-7],[-9],[6],[1],[2],[9],[5],[-8],[-3],[-4],[3],[8],[-7],[7],[2],[-10],[-6],[3],[4],[1],[-6],[-6],[4],[-5],[-10],[-1],[-1],[8],[5],[-6],[7],[-8],[-4],[-6],[-5],[-2],[9],[-1],[3],[1],[6],[-8],[-1],[5],[-4],[-5],[-8],[7],[-1],[8],[-1],[-6],[-10],[3],[-4],[-7],[-6],[-7],[1],[-3],[6],[7],[8],[-8],[8],[7],[-8],[-2],[-4],[2],[-1],[8],[3],[-4],[-1],[3],[-4],[3],[-6],[-3],[9],[-4],[4],[7],[-2],[6],[9],[-1],[-9],[-1],[4],[10],[-4],[-10],[-4],[-3],[-4],[9],[-6],[6],[7],[-3],[3],[-1],[1],[-5],[-5],[2],[7],[-8],[-6],[5],[-1],[-10],[3],[4],[5],[6],[-3],[4],[-8],[8],[-5],[-3],[-4],[-5],[-3],[2],[7],[10],[7],[7],[3],[-2],[10],[-2],[-7],[4],[-3],[-4],[7],[9],[2],[-3],[-5],[-6],[-8],[4],[6],[-8],[2],[-7],[-2],[-10],[-7],[2],[-4],[3],[4]], dtype = "int64")#candidate|6490|(520, 1)|const|int64
call_6488 = relay.TupleGetItem(func_5937_call(relay.reshape(call_6457.astype('float64'), []), relay.reshape(const_6489.astype('float64'), [42,]), relay.reshape(const_6490.astype('int64'), [13, 8, 5]), ), 4)
call_6491 = relay.TupleGetItem(func_5941_call(relay.reshape(call_6457.astype('float64'), []), relay.reshape(const_6489.astype('float64'), [42,]), relay.reshape(const_6490.astype('int64'), [13, 8, 5]), ), 4)
output = relay.Tuple([call_6457,call_6468,var_6469,var_6470,const_6471,const_6472,var_6473,var_6475,call_6478,var_6479,uop_6483,call_6488,const_6489,const_6490,])
output2 = relay.Tuple([call_6458,call_6476,var_6469,var_6470,const_6471,const_6472,var_6473,var_6475,call_6480,var_6479,uop_6483,call_6491,const_6489,const_6490,])
func_6502 = relay.Function([var_6469,var_6470,var_6473,var_6475,var_6479,], output)
mod['func_6502'] = func_6502
mod = relay.transform.InferType()(mod)
mutated_mod['func_6502'] = func_6502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6502_call = mutated_mod.get_global_var('func_6502')
var_6504 = relay.var("var_6504", dtype = "float32", shape = (4, 2))#candidate|6504|(4, 2)|var|float32
var_6505 = relay.var("var_6505", dtype = "float64", shape = (252,))#candidate|6505|(252,)|var|float64
var_6506 = relay.var("var_6506", dtype = "uint64", shape = (25, 6))#candidate|6506|(25, 6)|var|uint64
var_6507 = relay.var("var_6507", dtype = "float32", shape = (1078,))#candidate|6507|(1078,)|var|float32
var_6508 = relay.var("var_6508", dtype = "float64", shape = (462,))#candidate|6508|(462,)|var|float64
call_6503 = func_6502_call(var_6504,var_6505,var_6506,var_6507,var_6508,)
output = call_6503
func_6509 = relay.Function([var_6504,var_6505,var_6506,var_6507,var_6508,], output)
mutated_mod['func_6509'] = func_6509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4042_call = mod.get_global_var('func_4042')
func_4044_call = mutated_mod.get_global_var('func_4044')
call_6552 = func_4042_call()
call_6553 = func_4042_call()
func_5001_call = mod.get_global_var('func_5001')
func_5004_call = mutated_mod.get_global_var('func_5004')
const_6555 = relay.const([-3.727346,9.716550,5.065534,3.752153,-2.277806,-6.496543,-2.536891,-3.016333,1.505395,8.104447,-0.613940,-3.990390,-9.934610,4.440643,9.496765,-4.696547,0.740934,2.115062,-2.239753,-6.137970,4.738779,-3.578361,-9.127070,6.083028,9.658021,-2.207700,-2.075007,-9.239838,7.764143,-1.660418,9.878316,-6.206528,-8.289602,0.148956,7.034461,9.339666,1.134209,-2.386618,-9.321491,0.807389,-1.660787,-5.887295,-9.186048,1.597212,-9.882619,7.229100,-7.039533,-0.824205,9.141545,0.639276,2.612851,-9.543414,-9.667524,-7.174760,-3.749082,-4.633528,-5.936365,4.018661,-3.198928,-3.213454,-9.500149,-1.251371,-2.376494,8.513697,-5.390797,-5.341641,5.993722,-8.569926,5.548843,0.961819,-2.717447,-7.156214,-0.986844,-4.969754,-2.175953,4.770629,-8.556768,0.257349,-3.194054,-6.650198,0.521067,4.007180,2.735889,4.221761,-6.827773,-0.629108,-3.097660,7.701909,-2.149482,8.804702,4.838286,1.587382,-9.850745,-8.129373,0.263789,-3.416994,6.044231,-7.486254,7.986293,6.350790,-7.028878,4.355756,-0.041964,7.395947,-5.522853,5.122500,6.413821,6.778145,0.490748,-7.362248,-5.219550,5.486495,-2.821460,8.746739,8.872772,-9.169918,-9.293381,0.601183,-8.156013,-5.856957,4.613838,-3.307113,-7.616882,9.492667,5.409023,3.614319,-3.900365,9.660631,-9.656316,-7.052863,6.658853,1.467571,-7.725704,-2.973031,5.885072,0.309897,-5.956886,5.137723,9.010687,-0.676067,-5.466866,2.658568,8.894720,-2.621835,1.724504,2.188676,2.297777,-2.352840,6.854021,-3.922176,5.761404,-1.736882,-7.220960,1.810029,-6.044873,-1.146858,7.201271,6.009915,1.669577,-9.087005,-9.864733,3.097201,-6.938278,-8.129368,6.771308,-5.200910,-9.793914,-6.300637,-1.420008,3.038418,-0.670548,5.281134,6.692596,-1.413459,-3.869739,2.086122,-6.854354,-2.391826,-5.668031,5.518639,-4.046136,0.214679,-6.343643,2.281639,6.145532,6.559574,-7.939479,5.501612,9.853135,-6.386211,-7.010334,-1.412815,5.754063,9.986812,9.351661,7.329622,-8.483234,5.325070,-5.124572,8.012607,8.903917,7.187329,2.100329,0.750036,-6.448344,1.615030,1.635141,-4.425541,-1.058614,-2.698053,-1.245016,6.794473,-1.317784,4.417276,5.752340,-8.093572,9.055066,0.860804,-3.981970,2.330022,-9.779970,0.293608,-1.529181,-1.205940,3.902548,7.373620,-0.592038,-2.477483,4.006677,-0.491745,-8.619067,7.102688,-9.267678,6.635620,5.783692,-3.050069,3.094676,5.046609,9.521753,-7.715336,-4.730850,-7.447416,8.980841,-1.101407,-1.578340,3.169531,4.662298,-1.705961,1.573222,8.111443,-5.551608,2.928233,9.534191,5.625413,-8.348798,-2.704299,9.650803,-0.431002,8.916729,7.567298,0.304978,9.170803,6.707926,-4.570754,4.563047,3.824431,1.228167,1.548596,1.335360,7.729508,-9.330214,9.017161,-5.196001,-5.851296,-6.007760,0.983688,8.036378,-1.689108,-8.557025,8.946708,-6.538983,1.652827,8.246213,5.721451,-0.683902,5.916024,-1.905137,-9.660134,-1.535502,-0.080300,0.137081,-1.983801,-3.452942,7.677905,2.162711,-0.826348,-2.409086,-6.265231,-3.207654,-8.353168,-8.166801,-8.317456,-6.797355,-2.144144,1.127219,2.680932,-8.018047,8.245418,4.943072,-9.990569,-0.410844,-2.033958,-8.152873,-8.892390,-8.279297,0.777731,-8.299891,5.309563,7.433398,5.685338,7.043615,8.887782,-4.067847,-2.068265,7.263541,4.725037,-2.010867,-1.103972,-8.560113,4.725627,-0.279524,3.139025,-8.729147,9.987884,-8.079315,6.593977,-3.574488,-1.542945,4.577028,-8.067613,2.971063,-6.353447,2.818224,-1.374039,-6.166641,8.352720,9.886442,3.524878,2.480246,2.740439,-0.730361,4.512431,0.581850,1.989548,3.273910,3.303859,8.149287,-3.523802,9.567548,-8.765718,-8.280525,-0.740568,6.458610,-9.362234,-1.933469,-3.945409,-6.308173,3.517250,8.138553,-6.518299,-8.986299,0.377995,-1.512613,4.645804,3.617505,8.705188,7.843689,2.151844,7.391874,8.907732,2.998804,-4.827818,-4.973137,8.865532,8.837054,-1.315149,7.944964,1.726628,7.817037,2.637558,1.330895,-7.365201,-4.976037,2.209991,4.839684,-3.755090,-2.913822,-3.395620,-8.259397,4.025918,-9.126592,-7.011742,4.951434,2.564845,-3.396665,6.886898,3.590443,-4.422645,8.567894,8.623384,-0.393452,7.815678,8.685626,9.366787,8.844507,7.471000,-7.361102,-3.812841,3.476519,-2.057435,-8.629940,4.600539,-2.313883,-3.449100,8.321186,-6.506414,7.827868,3.223768,-2.355558,-2.525364,4.167773,1.465634,4.522196,7.369376,0.146413,-6.067634,-5.914197,8.928304,2.284089,-7.076791,3.917641,4.723634,1.974399,9.930727,7.454655,7.475634,6.725361,0.344909,-1.642549,-3.429517,-9.120915,-8.145514,-2.843946,2.553402,3.493795,3.765683,6.441616,3.115296,8.357447,-9.233022,-0.376521,3.548234,-3.345929,8.078259,1.641626,-5.533905,-8.736165,-3.241719,-2.074009,5.130824,-9.646683,-0.278669,2.595743,-9.998191,2.966591,3.021486,-9.133243,7.367014,5.163901,-3.074950,-5.149576,0.213761,8.355711,-8.689394,8.689827,9.546475,-7.669265,2.812570,9.580767,-2.572894,-8.034672,-6.008903,-0.742618,2.204361,-0.332564,-1.977766,-4.330564,-2.812717,-2.749201,2.422036,-1.359483,6.258857,2.680889,-4.827466,-4.964494,4.794660,-6.650602,7.052192,3.918483,4.599910,-3.412721,8.181493,5.881193,-4.653586,-3.095796,8.187584,-8.495826,9.630118,-0.055491,-6.605558,-2.949112,4.743274,-2.071808,8.118376,-9.044404,0.211507,-1.281083,8.637229,-2.459779,7.784480,-5.909509,9.382208,4.130321,-3.714951,-1.924439,-0.444138,-7.686052,-1.640285,7.371275,-1.194144,-0.496554,-4.823111,-3.298071,-2.194722,-5.526564,0.964220,-8.670579,8.714206,1.434573,2.491928,1.274834,-5.066467,-1.273082,-5.442330,-3.161321,8.745542,-0.805189,-5.979073,0.949779,-8.604940,-9.392924,-4.222432,-0.083954,2.218811,3.116150,-5.202553,-4.683138,-7.252040,7.885225,-1.285552,-8.213609,-0.180129,-1.732118,1.396207,1.572266,2.125423,-7.497945,-4.924251,3.937304,-1.307073,4.290518,8.625693,-2.327106,-9.109448,-8.322000,5.614805,-3.057093,-0.559295,-6.872111,-0.244470,7.790320,-9.388660,-9.329199,-3.815577,-3.962042,-9.853746,6.990345,7.093073,-1.323177,8.948009,2.479928,6.965854,-0.462412,-4.506418,2.116475,-8.066285,-5.295971,-3.530152,-1.946201,-5.827122,-7.470493,-5.276084,4.918239,4.139684,4.869984,-7.354980,7.225948,-2.325522,6.606335,3.757534,2.710819,8.451444,-0.175490,-3.652282,1.270223,5.161043,-3.674410,5.114493,7.440477,5.033066,-9.071495,0.108167,6.205979,2.414950,-9.918177,2.427602,2.520270,8.960573,0.808086,-4.594030,8.592425,-5.075762,1.382843,7.795263,-7.802488,6.797847,-0.419754,-9.423676,-2.128926,4.721443,-0.275379,-3.610178,8.831226,2.915140,-1.491788,4.712779,7.353524,5.229389,-6.887942,-1.693276,3.997899,2.493003,-0.617575,5.037398,8.768988,-5.358726,8.697936,5.308600,-8.170810,6.194922,-0.623167,-3.970658,-6.247162,-9.957772,-7.168577,9.065088,-6.958333,-0.656906,1.785435,6.523599,-5.234558,-2.718878,2.655501,-3.730197,9.112080,-7.823333,5.312370,1.131342,-7.483148,-9.110685,-8.460429,-2.392458,-4.559333,-0.464272,-9.343808,-7.317415,6.691769,-9.953295,5.438744,-9.931339,5.736610,-0.656418,-3.025462,-7.936657,-5.679887,1.201001,3.625446,5.474740,-2.343153,5.827397,-2.821109,5.748029,-4.649974,-4.127949,3.368106,-1.058122,0.850610,8.589964,5.746343,-1.458442,-3.231785,-0.861585,5.653213,9.311774,6.892014,-2.025253,-5.496554,1.783235,4.302693,-3.776185,3.608594,4.535196,-1.006676,-6.735933,6.909307,8.981656,-7.703817,3.181233,6.254285,-0.626379,5.228454,-3.635970,-5.872477,-8.439092,6.202302,-4.251428,-7.767432,2.495557,-2.829372,-0.232546,-7.077094,0.322512,0.570102,-1.034473,4.631816,-6.943561,0.531410,3.632124,-2.565180,-2.604881,-0.334547,-7.960750,-2.448631,5.788742,7.210526,-1.972118,1.816260,6.350631,-1.345514,-6.920573,-0.027675,-1.615369,9.676528,3.519674,-9.905945,-2.511574,5.723967,0.188562,-1.330488,-5.360012,-5.404161,-2.208573,9.635459,-2.260595,4.229953,9.751209,4.518795,-4.581655,6.575595,7.067487,3.763703,9.250099,-2.608062,-8.841146,0.315729,5.208517,-9.304234,-5.282050,4.038162,0.288899,2.890703,-9.050458,7.350173,6.850756,-0.878361,-3.711938,-0.845819,-2.326152,-3.864766,-3.826298,-7.924490,1.821125,7.391078,-6.077237,-7.190300,9.036265,-7.654996,3.522096,-3.052561,6.611302,4.013636,-7.678160,4.067131,-0.744090,-3.817952,3.406538,-7.917835,5.710967,-2.936379,-9.577493,3.884675,-9.241518,2.532167,3.291138,4.394820,3.546795,-7.744245,-5.400727,-6.660278,8.441173,8.103649,7.336700,7.866761,5.042695,-0.264521,6.904865,-3.926472,-8.519354,6.917256,6.306242,-0.343916,9.083044,0.718202,-5.622766,-1.299308,-2.121875,-1.556498,-5.998993,-4.729451,-1.461124,4.557257,-4.296529,6.039435,-0.364423,8.224974,4.214623,-8.729798,-2.395390,5.098512,1.873036,1.800204,1.750728,-7.020478,6.481197,-3.218186,5.746563,3.503535,8.571216,-9.495889,3.733787,5.259140,3.515569,2.395249,9.364347,-7.179756,9.183178,-4.663912,-4.488647,-8.853136,7.076379,7.899398,-1.728313,0.374603,5.713753,7.846208,7.384769,-5.998784,-7.021222,-6.200799,-2.458472,1.822356,-5.506630,-8.436903,-1.222877,9.090723,5.950362,-4.726180,8.109416,6.000756,-2.822367,-8.260187,-5.183297,-3.370745,-7.976686,-0.087095,-0.474351,-7.421821,-7.476308,0.038962,6.028178,-8.315914,4.116548,6.368461,-5.949006,3.740906,5.853822,-0.160874,-9.490961,6.218792,-0.991856,0.591827,4.511314,0.338424,2.982874,-4.687275,1.069003,1.742502,8.777783,-3.586179,-9.298049,-4.240560,2.471574,9.471338,-9.401827,-4.494248,-4.725742,5.337187,-0.474544,5.517479,1.593904,-7.990151,4.343683,6.843962,-7.881621,-2.935452,3.192379,6.012076,-0.796991,4.727347,6.823384,2.726488,2.177343,7.339188,0.066305,5.398870,-0.898100,-7.099526,-4.153105,-3.133514,9.015904,1.629397,-5.140309,4.351376,7.825779,8.374810,-8.772314,-0.876675,1.651257,3.976313,5.703676,1.994416,5.995218,2.314775,1.799272,-4.818274,-9.334105,5.828783,-0.109940,2.329354,6.870100,-4.548916,3.788243,-2.060935,-7.600239,-1.048207,-5.790381,5.349528,7.909396,1.431222,5.104063,2.362545,8.419055,-7.198172,9.073250,0.218321,-3.767076,-2.249083,8.401665,-8.524381,7.260515,8.819921,-3.486525,6.489965,2.762643,-5.957112,-8.741355,-5.539911,-5.578717,-6.410023,3.973209,1.260914,2.806994,6.375454,-8.290581,8.843063,-5.397652,6.425521,0.811242,-4.453711,-3.109376,0.821215,-0.791905,-9.671265,-4.693057,-7.533285,7.915940,2.628571,-1.231419,7.685958,-7.905300,-4.513367,6.312467,8.724179,-1.501822,2.802382,-4.243061,7.559716,-6.788462,-2.595667,-5.261914,-2.824304,-2.255022,6.731392,6.326761,9.320336,5.992073,-8.115598,3.311293,8.630510,-5.614850,-9.412970,-3.276747,1.954177,-5.059832,5.984113,3.959075,-3.455462,-9.002408,-6.426237,-3.424618,5.081089,2.789362,-4.138686,-3.157498,-5.587158,-3.669485,8.443858,-8.042174,6.191742,-6.358385,-4.204162,9.522792,0.319706,-9.521991,6.099366,1.629870,-6.034190,-2.158551,-6.011028,-3.295856,4.175627,7.719900,6.222636,-8.094596,-4.936654,-2.809422,-2.125000,3.084417,0.822127,9.123278,-0.932809,3.460650,0.299399,3.525538,-9.133556,-5.260564,-7.137494,6.284880,2.274398,4.494943,-7.127064,-5.742550,5.061944,9.310950,6.363199,8.034005,0.988095,-1.140990,-1.640169,-7.054826,-6.807013,3.691557,9.945056,-7.802697,-8.505169,-9.471140,7.039115,4.552495,1.724467,2.121937,4.189381,-9.402907,-5.122460,9.759048,8.939058,9.042312,-5.648292,-0.368768,9.128681,-4.664998,-1.561773,7.894292,-9.708855,-8.652216,1.196872,-8.102872,-7.061747,0.895354,-4.740614,-0.270589,9.422830,6.588451,-7.850075,0.752885,-3.668913,8.063035,-4.582044,2.764241,9.157837,-0.712674,4.313657,1.004994,-0.770920,-5.511856,5.256171,-4.325823,1.330897,-7.647937,0.216276,2.487058,7.816797,8.003866,8.088618,-0.318904,-5.032386,3.662802,-2.096421,-3.869958,-8.949178,2.572800,8.504144,-4.605449,9.095907,-3.528513,-5.737404,-2.049659,-0.646855,4.480441,-5.669041,-2.345755,1.890423,7.801512,-4.125439,-0.535258,-2.931555,-9.290072,9.365113,-1.575945,7.492834,7.631659,5.961567,6.563677,9.319947,4.917136,1.613492,7.946595,-3.713953,-4.726507,-7.309610,3.631822,-2.916322,-7.671321,-6.333243,-7.792061,4.214725,9.406029,1.786700,-1.225324,1.917886,3.316631,0.755858,3.896520,2.288160,-8.453734,-5.539514,-1.254224,1.352032,-2.999100,-5.818173,7.710163,7.813278,-6.055324,9.070465,2.956044,-5.132565,9.522683,9.178644,9.780694,-2.497442,-3.384998,5.528750,0.281936,5.970068,-3.272517,-8.858169,2.570173,-0.234007,0.653190,-4.655822,3.330600,9.511549,-8.018639,2.650634,4.875417,4.893047,7.863284,-3.340597,2.538287,-3.285131,6.492641,4.149818,-6.662416,-2.159682,-1.663305,9.180618,-5.905221,-7.269892,5.508722,-0.085876,-8.209697,0.895151,9.484189,-9.672973,7.798118,-0.410729,-0.934193,-1.405378,-6.733961,-1.875853,4.499510,-5.107720,-6.407105,6.480271,-1.209285,-2.508173,0.421982,-5.222439,6.374041,-7.843388,-9.365766,-0.058308,-6.863237,9.544852,3.551368,5.669519,6.320757,-7.929161,5.336051,-8.602735,-0.050409,-5.121619,-8.370245,-3.721844,5.961932,-0.570072,6.502437,-6.078180,5.928768,-2.835037,5.960320,-2.088213,8.500964,-1.994491,-1.106850,7.061020,0.792458,-7.458118,-9.052804,-9.700006,8.269375,8.552715,2.076477,1.821708,-9.828500,2.666021,2.858047,-5.394978,3.978807,2.504854,8.726691,-1.844798,-5.308485,-1.652666,1.246826,3.469842,-2.087099,6.466681,-0.131708,-5.608834,1.602134,9.237480,5.197102,7.102189,-8.932618,-6.971338,8.358851,2.836675,-8.860403,8.796911,-6.896268,-6.827288,4.266568,-4.354723,-8.567291,-5.168056,-0.284123,6.413380,-8.196224,-0.361614,5.270883,-4.637099,2.878101,8.649524,-3.982079,3.349736,1.671003,3.069806,-2.529512,-7.118056,-1.151243,-3.852364,-1.281287,9.931226,-0.525775,-6.198768,-1.921425,4.044499,-4.509701,5.557492,9.176062,6.491170,7.917742,2.784575,-3.599938,-1.092972,2.776022,7.527072,-2.695955,-8.533841,9.496105,4.755846,8.860892,5.747728,9.748837,-6.050411,-0.164736,2.866876,-5.242393,2.599534,-1.018005,-7.192602,-1.596810,-2.863158,-6.673427,8.523342,6.879660,0.058594,2.109806,-6.243714,-7.390137,3.581901,-0.890787,-1.844959,-7.668657,1.483715,1.739071,-0.972014,6.927321,8.556384,9.021356,9.142201,1.256129,2.376135,-3.442046,7.827310,4.140920,0.704220,1.358658,-2.150109,9.964469,-0.238075,4.081014,-4.079411,7.582845,-4.348097,-2.648639,3.413960,3.291682,9.712828,-0.245955,-1.228590,6.698428,9.328494,4.306164,-8.416921,5.024405,2.282413,7.435418,-1.202999,7.280928,4.261609,-8.886652,5.380395,-9.429039,1.429456,6.545240,-3.850056,8.273102,9.257706,9.525656,4.269323,4.170417,-0.441532,-3.149865,1.867148,6.607404,-6.986284,-8.606242,8.985113,-7.490785,2.843918,-1.154053,-3.149122,-5.940116,-4.643182,-7.865677,-2.029876,1.261539,-4.408410,8.278862,8.916368,7.512346,8.636886,-4.552648,-4.682060,6.017528,-0.583767,6.350605,-7.121588,3.826000,4.853097,-8.573423,3.784401,-3.663500,-8.426147,0.530931,9.249058,2.231434,-8.715120,4.389361,-7.633938,6.676468,5.945924,7.553437,-4.528390,-2.365482,-5.836323,9.894969,-8.179357,-2.227730,-0.808693,1.134577,-4.988745,-2.044788,-4.589164,9.716021,-1.992245,8.322801,6.560449,2.373593,5.832603,1.871664,4.186695,0.177012,0.558796,-7.457336,-4.868592,9.155091,-6.806403,6.016774,1.833049,2.161421,7.480491,5.680154,2.100503,-4.062618,1.856352,3.046775,6.372229,-4.706424,-0.688022,-5.845454,-3.803374,6.995016,7.917600,9.868045,4.853536,-6.191072,-8.884811,7.166205,2.426904,-1.062430,3.640185,0.083534,3.903305,5.213502,-8.574260,-0.015200,7.680002,0.044486,-2.116718,-3.482970,7.053400,9.653037,-3.847979,7.553124,-1.656670,-8.844042,2.395565,-2.949268,-4.788824,-9.494656,3.877930,6.717516,-0.711044,2.017844,-7.520495,-0.618587,0.858903,0.546575,-9.071684,8.273151,-8.137180,4.789666,3.507010,-1.695107,0.359357,-9.456909,3.416054,-7.624828,-8.768515,7.956291,5.707366,-8.317767,2.553462,-2.185886,-3.892759,-9.769327,-9.751529,5.311876,-5.099780,5.194219,-6.171597,-5.007965,3.212994,-8.077051,5.677044,-6.213137,9.874413,7.605914,-9.590951,5.080781,3.745818,-7.761685,6.636430,3.164806,7.423149,2.979551,-0.385265,-7.130996,-7.452902,0.084846,-3.367121,-4.768275,-5.124066,-3.483962,-9.308143,0.500717,4.657536,0.586003,7.427355,-9.107451,3.003088,9.207827,-3.640747,7.943795,-0.929984,-3.132002,6.551737,-2.996901,-5.341849,-2.805089,-4.817841,-1.416844,3.285301,-5.833176,-9.687447,-4.052662,1.985966,4.994474,2.106605,-4.885530,5.826412,-9.601712,-5.714433,-0.654266,3.693189,9.496810,-4.270438,4.632577,2.504419,3.512480,7.775118,9.606226,4.932756,-1.278907,3.311381,-0.023799,7.849680,1.495929,5.409300,-5.985650,8.288576,9.943457,4.736416,1.649513,-9.100182,-6.428861,-9.214381,-4.154167,-5.504548,-4.205239,-2.880882,-3.690129,9.846237,3.321070,4.985493,8.429867,7.413970,-2.639923,-1.096856,5.281156,-9.318515,-3.487227,5.960045,-3.157007,3.855929,8.447876,7.952838,7.815926,-9.743310,-5.779834,-1.963865,-0.621953,-1.475514,-3.945474,-4.275007,8.021585,4.576941,-4.998442,4.047578,-7.096194,8.423241,-1.591543,4.320426,-9.457962,-1.799025,9.187190,-2.655638,-8.409731,-0.127924,4.006809,-8.818336,-3.918532,-0.818978,-4.825129,2.164369,-8.481997,-4.789252,-4.145369,-8.216970,3.962475,6.009495,0.966376,-0.580205,-6.589637,-6.013526,-0.926290,-7.693480,-0.570256,7.582119,-3.383926,2.694776,5.215144,1.308732,1.153634,-5.316849,-9.277892,4.131402,-2.870520,7.431455,5.405399,-6.133094,-1.862613,-8.350211,-4.077510,9.887556,-3.246635,4.660858,7.314009,7.287510,8.300542,5.891810,4.613535,6.814548,4.425273,-3.609904,0.996589,-6.473747,-8.896446,-1.885302,-1.587987,9.977273,1.542961,-4.279104,-5.709186,4.362629,-7.720937,9.375125,-8.460082,1.179625,-5.847474,-0.606399,-1.058722,0.361791,0.031276,9.853647,-3.760484,-6.088739,-6.074767,-9.695065,7.801372,-9.022010,-9.511702,9.753590,-7.511443,-8.939197,8.724674,-0.646711,9.958937,-2.082594,-9.067493,-7.021690,-5.660358,-1.979571,-3.538184,0.891825,-5.605736,8.756755,-8.151454,6.557565,9.666097,2.150642,-0.534677,-5.991434,1.890347,-7.708514,4.419322,-7.840580,-4.205324,-0.835530,5.984064,-6.902569,7.438146,6.851431,-2.873958,-3.327942,-4.381495,-8.804151,-2.656081,2.837503,1.779428,0.966833,-5.026087,3.708674,-8.159062,5.915788,0.573151,1.232725,2.931447,-4.475548,-6.560221,2.925014,-8.172242,0.309881,4.439837,0.383227,4.351430,6.741246,-4.062508,-0.634673,-5.813815,0.942150,9.390679,-9.585487,5.522007,-7.362768,9.337637,-0.483791,-5.519826,-6.440950,-0.422879,-1.327252,-5.930630,-7.541740,-4.429452,0.954320,-3.955670,7.381113,-1.026970,9.483186,-8.573627,6.884486,3.488109,-5.000120,8.384684,7.267365,-8.886011,8.254912,8.985706,7.603260,-4.532307,-2.202396,1.915942,-0.476405,0.576008,0.827696,-6.730329,-1.586028,7.728737,8.640367,1.886119,-2.327975,-1.324734,8.770113,5.550406,-7.527498,7.313967,8.917965,-0.438114,-3.880179,8.209428,4.843180,-0.166888,4.933941,-6.793905,7.722812,-8.808833,7.809378,8.013111,-4.289075,-9.638557,0.282184,-1.151221,-8.255052,-7.486426,-2.658680,0.963186,1.284213,9.142925,6.662719,0.430927,-4.607507,-6.429915,4.922639,-0.555108,5.573846,-1.990613,-4.268861,8.005179,1.696930,-1.160072,7.016135,3.651095,8.876689,3.149286,3.555746,4.352886,-0.121521,8.377121,-2.523112,-6.982133,-0.559995,-4.323838,4.397640,-4.232024,3.628297,-3.432732,-2.117531,-2.530764,2.960742,-3.270116,-7.284080,-6.134296,9.547670,-1.138748,5.251274,8.970738,9.345648,-8.629758,3.222407,8.145604,0.671592,4.413963,-2.449666,-2.460191,-7.661374,-5.760437,-4.293985,0.085418,-0.183191,4.771430,-4.579172,-7.435458,-1.235591,-3.343871,7.768620,7.692860,-3.584577,-9.839359,-9.233267,-6.055296,5.556703,8.958347,3.421406,6.486567,1.197640,7.613741,-0.949451,7.488229,-5.867629,-0.582120,-0.145838,1.964034,5.463776,4.067266,-2.680845,-9.715464,-0.821650,7.138729,-7.966823,6.313843], dtype = "float64")#candidate|6555|(2002,)|const|float64
call_6554 = relay.TupleGetItem(func_5001_call(relay.reshape(const_6555.astype('float64'), [2002, 1])), 2)
call_6556 = relay.TupleGetItem(func_5004_call(relay.reshape(const_6555.astype('float64'), [2002, 1])), 2)
func_3933_call = mod.get_global_var('func_3933')
func_3938_call = mutated_mod.get_global_var('func_3938')
var_6564 = relay.var("var_6564", dtype = "bool", shape = (784,))#candidate|6564|(784,)|var|bool
const_6565 = relay.const([[-6,4,4,-1,-2,2,-5,7,-7,-9,7,-10,2,-7,-3,-5,-9,10,8,2,8,-5,4,2,-2,-6,4,10,-3,-10],[-6,-7,3,-10,9,-10,3,9,-9,1,-3,-2,4,-4,9,-3,-8,-1,8,-3,-1,-3,10,6,-6,-3,-3,-7,-9,3],[-6,2,-7,-6,-4,3,5,4,1,-5,8,-5,2,-9,4,8,8,-3,-5,-1,1,6,1,1,1,-10,-3,1,8,8]], dtype = "int16")#candidate|6565|(3, 30)|const|int16
var_6566 = relay.var("var_6566", dtype = "int16", shape = (360, 1))#candidate|6566|(360, 1)|var|int16
call_6563 = relay.TupleGetItem(func_3933_call(relay.reshape(var_6564.astype('bool'), [784,]), relay.reshape(const_6565.astype('int16'), [90,]), relay.reshape(var_6566.astype('int16'), [12, 30]), ), 1)
call_6567 = relay.TupleGetItem(func_3938_call(relay.reshape(var_6564.astype('bool'), [784,]), relay.reshape(const_6565.astype('int16'), [90,]), relay.reshape(var_6566.astype('int16'), [12, 30]), ), 1)
const_6577 = relay.const([[3,5],[3,-1],[-10,-2],[9,-10],[-10,-2],[-7,8],[8,-8],[-5,10],[8,-5],[5,-4],[9,1],[-10,1],[-9,6],[-9,7],[10,-6],[8,3],[3,9],[-6,-2],[-10,4],[-4,-1],[7,-1],[2,4],[3,-7],[5,-1],[9,-6],[-4,1],[1,-6],[-8,10],[-2,2],[8,6],[-7,4],[-4,-2],[-6,8],[-9,6],[4,-7],[-6,-10],[9,-4],[9,10],[-4,9],[1,9],[-2,-7],[-5,2],[-2,-4],[9,9],[-5,5],[-5,-1],[9,-5],[1,-8],[-2,-5],[6,6],[8,8],[-5,5],[2,-5],[5,5],[4,-6],[5,-10],[-7,-4],[2,-2],[-2,-10],[-9,-7],[5,9],[-8,3],[6,8],[3,10],[3,-4],[-6,7],[-9,4],[-10,-3],[3,-4],[-8,-2],[6,10],[8,-9],[4,5],[-4,-9],[-9,-2],[-4,-3],[-7,-7],[-4,1],[-8,1],[-1,-8],[6,6],[-6,-2],[7,-4],[-1,9],[4,2],[6,-9],[-4,-2],[-3,-1],[-4,8],[1,-4],[7,3],[-3,-5],[10,-6],[-3,-1],[-7,4],[-3,-8],[2,-6],[-9,-5],[-8,-4],[1,-9],[-9,7],[2,-8],[1,1],[-9,-1],[-9,5],[-9,4],[-1,8],[10,-2],[2,8],[5,7],[2,-2],[-6,-1],[3,-3],[-8,-8],[7,-10],[-1,3],[-2,-1],[9,-5],[-3,1],[3,4],[-7,6],[6,-6],[-8,-10],[-9,-4],[4,-9],[1,-5],[2,-6],[7,9],[-9,-1],[9,-7],[-4,-7],[10,3],[7,10],[-6,4],[10,-3],[2,-2],[6,-7],[3,-1],[-3,-9],[10,-8],[3,-6],[-2,9],[4,2],[3,-8],[-9,6],[-1,6],[-7,-6],[6,5],[1,-10],[-6,6],[10,-8],[1,-6],[1,10],[-2,5],[-1,8],[4,-1],[-9,-9],[-2,6],[2,-9],[-8,-3],[8,2],[-2,-9],[9,-4],[-3,7],[8,8],[10,3],[6,6],[6,4],[5,-2],[-4,-3],[8,-5],[2,4],[9,-9],[-4,4],[2,-5],[-9,2],[8,4],[5,-4],[-5,-6],[4,-7],[2,5],[-8,-7],[6,1],[-2,3],[7,1],[-5,4],[7,-6],[-10,5],[1,-7],[8,3],[5,-1],[-7,8],[-2,-3],[-7,6],[9,-4],[-7,8],[-10,10],[8,-1],[-7,3],[-9,-7],[1,9],[-9,1],[-8,-4],[5,-4],[-8,2],[-8,-2],[-9,9],[5,10],[-6,-1],[3,2],[6,-6],[-1,-7],[-7,-6],[5,-9],[10,-2],[-4,10],[-9,-4],[4,4],[5,2],[-4,-4],[1,7],[-5,-8],[-4,1],[-3,7],[-5,-6],[8,-10],[2,8],[2,-9],[9,6],[-2,-10],[-7,4],[3,3],[2,-6],[9,-5],[7,-1],[5,-9],[7,8],[-2,-6],[1,-10],[-3,2],[-2,8],[-4,6],[-6,8],[8,6],[5,-5],[-4,9],[-2,2],[3,1],[-4,-9],[-1,10],[4,1],[-7,5],[2,-10],[-10,-4],[9,-8],[-9,8],[-7,2],[5,-9],[9,-1],[6,-10],[-8,5],[-1,-2],[2,-1],[-10,-4],[7,7],[7,-1],[6,5],[-7,-8],[-7,-5],[-1,-9],[7,-6],[10,-4],[-6,-8],[-8,9],[8,4],[9,2],[-7,4],[-2,-1],[-2,5],[-6,8],[-1,7],[3,3],[-2,-9],[-3,6],[-10,7],[3,2],[-6,-7],[8,-8],[-10,-10],[3,-6],[-4,-7],[-8,8],[3,-9],[-7,4],[-9,-8],[4,8],[9,9],[-5,8],[-10,6],[-7,-7],[2,-9],[-6,-2],[3,2],[4,-3],[9,-6],[7,-2],[8,-8],[-4,5],[10,5],[-8,2],[7,-1],[5,-5],[-8,-7],[-6,5],[-10,-6],[7,-2],[-9,4],[6,-1],[2,-3],[7,-1],[8,3],[8,-7],[-10,-3],[-8,3],[-4,5],[3,-2],[-9,3],[-4,3],[2,-5],[4,9],[6,-9],[8,10],[-9,1],[-2,-10],[-9,-6],[-7,4],[-5,-10],[-2,-2],[-10,3],[-5,10],[-9,-7],[-4,-1],[-9,-4],[6,-6],[9,-9],[-6,9],[4,-5],[-6,-2],[-6,7],[7,4],[5,-4],[8,-1],[7,-5],[-10,8],[6,-2],[8,9],[-6,-5],[4,-1],[-9,-9],[7,1]], dtype = "int16")#candidate|6577|(360, 2)|const|int16
bop_6578 = relay.divide(var_6566.astype('float32'), const_6577.astype('float32')) # shape=(360, 2)
func_4807_call = mod.get_global_var('func_4807')
func_4809_call = mutated_mod.get_global_var('func_4809')
call_6588 = func_4807_call()
call_6589 = func_4807_call()
output = relay.Tuple([call_6552,call_6554,const_6555,call_6563,var_6564,const_6565,bop_6578,call_6588,])
output2 = relay.Tuple([call_6553,call_6556,const_6555,call_6567,var_6564,const_6565,bop_6578,call_6589,])
func_6596 = relay.Function([var_6564,var_6566,], output)
mod['func_6596'] = func_6596
mod = relay.transform.InferType()(mod)
var_6597 = relay.var("var_6597", dtype = "bool", shape = (784,))#candidate|6597|(784,)|var|bool
var_6598 = relay.var("var_6598", dtype = "int16", shape = (360, 1))#candidate|6598|(360, 1)|var|int16
output = func_6596(var_6597,var_6598,)
func_6599 = relay.Function([var_6597,var_6598,], output)
mutated_mod['func_6599'] = func_6599
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6625 = relay.var("var_6625", dtype = "float64", shape = (8, 8, 8))#candidate|6625|(8, 8, 8)|var|float64
uop_6626 = relay.tan(var_6625.astype('float64')) # shape=(8, 8, 8)
output = uop_6626
output2 = uop_6626
func_6635 = relay.Function([var_6625,], output)
mod['func_6635'] = func_6635
mod = relay.transform.InferType()(mod)
mutated_mod['func_6635'] = func_6635
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6636 = relay.var("var_6636", dtype = "float64", shape = (8, 8, 8))#candidate|6636|(8, 8, 8)|var|float64
func_6635_call = mutated_mod.get_global_var('func_6635')
call_6637 = func_6635_call(var_6636)
output = call_6637
func_6638 = relay.Function([var_6636], output)
mutated_mod['func_6638'] = func_6638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6015_call = mod.get_global_var('func_6015')
func_6016_call = mutated_mod.get_global_var('func_6016')
call_6661 = func_6015_call()
call_6662 = func_6015_call()
func_6437_call = mod.get_global_var('func_6437')
func_6438_call = mutated_mod.get_global_var('func_6438')
call_6678 = relay.TupleGetItem(func_6437_call(), 0)
call_6679 = relay.TupleGetItem(func_6438_call(), 0)
func_1670_call = mod.get_global_var('func_1670')
func_1673_call = mutated_mod.get_global_var('func_1673')
var_6683 = relay.var("var_6683", dtype = "float64", shape = (2002,))#candidate|6683|(2002,)|var|float64
call_6682 = relay.TupleGetItem(func_1670_call(relay.reshape(var_6683.astype('float64'), [14, 13, 11])), 3)
call_6684 = relay.TupleGetItem(func_1673_call(relay.reshape(var_6683.astype('float64'), [14, 13, 11])), 3)
func_5621_call = mod.get_global_var('func_5621')
func_5625_call = mutated_mod.get_global_var('func_5625')
const_6696 = relay.const([-9,-5,10,-3,-7,3,7,1,-1,9,3,1,-5,5,-5,4,-9,-2,-10,-5,-6,-3,2,-5,9,5,6,-8,-1,6,9,-1,-8,9,-1,-7,1,-2,-3,7,10,6,8,-8,-8,6,-4,-6,-3,10,-7,1,-8,10,9,-5,-9,-7,-4,-7,-9,2,3,6,10,10,-5,-7,5,6,7,4,-4,-5,6,-3,-9,6,10,8,10,-1,-10,-9,6,-10,9,-8,-7,-3,7,5,8,7,-3,-2,-4,7,-1,-10,4,-9,8,-7,-2,-5,6,-4,1,-4,6,-9,-1,6,-5,-9,8,3,7,8,-10,-8,-5,1,-4,2,3,2,-8,-3,7,-9,2,-1,-1,8,-4,-8,-9,-4,-3,4,-6,7,-7,6,-4,8,-6,-5,-10,2,1,2,10,6,-2,1,-7,1,-1,-7,-1,-1,6,8,2,9,-2,5,6,-5,-2,-6,5,4,-6,10,-9,-6,8,-10,-6,6,-9,7,-2,6,9,6,1,1,-2,5,-4,4,-7,-4,3,-10,-1,-2,1,9,-9,-5,5,-8,-5,-8,-5,2,-9,6,6,-8,5,2,-5,-8,-5,7,-7,7,-9,2,9,10,2,-10,4,-5,-8,-6,7,-9,5,4,-2,-5,-8,-5,-10,-3,-10,3,2,4,-5,3,2,-6,-8,10,-1,-1,1,6,-10,6,-3,-6,6,-3,10,-5,-7,-1,1,-7,6,3,-3,-9,-9,4,3,-9,10,10,-9,4,5,-3,9,-1,7,2,-5,2,5,8,-8,7,-8,-9,9,4,-9,10,-8,-2,-5,4,5,-3,-4,10,-5,-1,3,1,1,8,2,-7,9,5,4,-3,5,-1,7,2,-8,9,1,7,-5,4,-3,10,-2,7,4,7,7,10,-9,8,-5,1,6,2,3,1,-8,-9,5,8,-7,9,-3,8,3,-9,2,6,8,-9,5,6,-10,8,10,-5,1,10,4,5,-5,-8,4,7,4,-10,8,4,10,3,8,-8,-3,2,-6,7,-1,10,-2,5,5,-7,-5,10,3,-7,3,-9,-4,6,-9,-3,9,-6,-2,-7,8,1,4,-1,7,9,1,-8,10,7,4,-10,5,4,-6,-6,4,10,-9,7,6,7,4,4,-7,3,-1,6,10,-3,2,3,-7,4,-1,-1,6,8,-3,-4,-5,4,4,4,-2,10,-8,-10,3,10,-6,3,-9,4,7,-4,8,10,2,4,3,-9,-5,4,4,4,-5,4,1,-7,7,-1,-3,-7,-5,10,4,-6,8,-1,-4,-2,3,4,-3,10,-6,5,2,-6,-2,2,6,9,10,4,-4,-6,2,8,-4,-5,1,-2,3,-7,-4,3,1,-2,1,-6,4,-9,-1,-2,-9,-5,-9,1,-5,-7,1,1,-3,2,10,-8,-9,9,-7,-7,7,7,1,8,-8,8,-8,-1,1,6,1,-6,-2,-2,-5,5,3,8,2,1,-4,1,-6,-2,4,-8,1,-5,6,-1,-6,-5,-10,10,-10,4,-10,3,-5,-2,-10,-6,-2,-3,6,-3,2,-1,8,6,4,1,5,9,8,9,-2,10,-5,6,9,-6,-5,7,8,-3,-3,4,8,-8,-7,-8,-3,4,-1,9,-10,-3,10,10,3,-10,-8,4,10,-6,-10,-7,-1,9,3,-4,-3,-8,6,2,-1,-6,9,-7,-4,7,5,5,6,10,3,2,2,10,-8,-7,-5,10,-5,-4,-1,-2,-6,4,2,1,9,-1,1,-9,4,-10,9,4,8,-4,10,5,3,-7,-5,-10,10,-5,5,-2,10,-9,-3,-4,2,1,-3,7,8,-1,-2,7,-4,-5,-6,7,2,-4,8,7,5,-1,4,4,-4,3,8,8,-2,-1,1,-4,-2,9,6,2,-1,2,1,-7,3,-10,10,4,-10,-2,-3,-5,7,-6,9,-6,1,8,-6,-6,5,-1,-4,10,-10,-7,1,9,-8,-10,-3,9,-6,5,-4,-2,-6,5,-8,6,-7,2,-6,5,5,5,2,1,3,-2,8,-7,7,-4,8,4,2,-5,-6,-6,-4,9,7,5,-6,8,-9,8,-6,10,4,-9,-9,-7,-5,-5,6,-6,-4,2,10,-5,4,4,8,3,-9,8,-1,4,-10,6,5,-10,4,10,-3,-2,8,6,-1,6,5,9,-1,-1,-4,-8,8,-7,-9,6,-1,8,4,5,-4,7,-7,5,-3,-8,1,5,3,2,6,3,-4,-7,4,6,-5,7,-3,-9,-9,3,-2,-1,-8,-6,-1,-6,-9,-5,-4,-10,8,-2,-8,-7,-7,-8,9,-3,-10,-5,-9,6,-1,10,-6,8,-6,4,9,-2,2,-5,-7,9,-7,-8,3,-4,-9,-4,3,-8,10,2,1,-6,-3,-5,-9,-8,7,3,-4,-6,9,7,-2,8,6,3,-5,-2,10,-9,-2,-5,6,2,-3,4,-8,4,5,4,-4,-1,-8,9,10,8,6,-4,-1,2,-3,-6,7,-5,-1,-6,-7,-6,-9,4,-3,-3,8,-1,2,-5,-2,-9,2,-3,-2,10,7,-8,-2,-6,-7,-6,-6,5,2,4,2,3,7,7,-7,3,-6,8,3,5,-5,-4,7,1,-9,1,8,3,10,-9,10,10,-10,4,-2,-3,9,10,-7,3,-3,7,-10,1,4,-6,-9,-10,5,-4,4,-6,7,9,4,-1,-8,-10,-3,-8,-10,-9,1,10,5,2,3,10,-3,-5,-3,-6,7,9,9,-4,2,-8,5,8,3,-9,8,-8,10,-8,2,-4,-9,8,2,7,-9,8,4,-4,-6,7,4,-6,9,-7,-7,-1,-6,6,-2,6,9,-5,-10,2,-2,3,-6,-10,5,7,8,10,-6,-6,1,-8,-5,-3,-2,4,-6,9,6,-9,7,-4,-4,1,-5,8,8,-6,9,-10,6,6,-9,-6,-6,-9,-2,10,-9,6,7,-10,8,-9,-5,9,-1,5,-1,8,-7,10,9,-3,-10,-4,3,-3,-2,-9,9,10,4,-1,-6,2,-3,-1,2,-5,-5,9,-5,-8,-5,5,6,4,-9,-6,-4,-8,-1,-1,7,5,-5,7,-7,6,-5,-7,-6,-2,6,2,6,-6,1,2,-3,9,9,7,-2,-9,-6,7,-7,-9,-8,-2,-2,-3,-8,-2,-10,-9,8,9,9,-8,-4,8,-5,6,-7,8,-9,-6,-6,7,9,8,-2,-9,5,-7,-2,2,-2,-3,-7,10,-3,-4,-5,8,-7,-3,-3,9,10,9,-8,3,9,1,-8,5,-7,4,-10,-10,-9,3,5,-2,-7,-9,3,-7,10,2,8,9,4,9,-6,-10,-2,-8,6,-6,-2,10,-8,10,4,4,-9,7,-8,9,7,-10,-2,-10,10,-3,-10,10,1,-4,1,-7,4,-6,-2,8,-2,-10,9,-7,5,-1,-5,1,-10,1,4,4,3,10,-4,-7,-7,5,7,4,1,7,6,-2,-2,10,10,-3,5,-8,-2,-9,2,-2,5,-2,-1,10,6,6,4,5,-1,9,-2,6,2,10,7,-6,9,-9,-7,-10,3,-3,1,3,6,7,-10,1,-6,7,-4,6,-1,4,3,10,-9,3,1,-1,9,-5,8,-1,7,-8,1,4,10,-9,-5,9,4,-3,1,1,3,8,-2,-6,9,1,1,-3,7,-3,4,6,5,4,5,-7,5,-10,6,-7,-3,8,-4,-4,-6,-3,1,10,-9,4,-4,-2,6,-6,-9,9,9,-5,-10,-6,-6,-7,-8,-2,3,-1,-7,-4,5,5,-10,6,-4,6,10,10,-3,-2,4,-8,-10,-4,9,1,-9,-10,3,-2,-8,10,-2,-5,-7,-4,1,-10,10,-9,3,7,-6,-2,-4,5,1,-4,-6,-8,6,-4,5,-9,7,3,9,3,-6,4,7,6,7,-3,-6,5,-2,-8,-2,-1,4,10,-6,9,-6,-6,6,-1,1,-5,-4,1,-9,4,-6,8,-10,5,1,-10,9,-10,-7,8,-4,4,-3,-5,-4,2,3,-1,-10,1,-8,-8,8,-4,8,2,4,1,3,-10,2,-8,-5,8,-3,7,-1,-10,5,-3,-5,7,2,-9,-4,1,-2,-1,-8,-2,-9,4,-8,-6,-8,5,3,-5,10,10,-4,9,10,2,-10,-6,-5,-6,5,-5,-10,-10,-2,6,8,7,-6,7,8,-3,6,-7,2,-6,-5,1,1,8,6,-9,-1,8,5,-3,-7,-1,-8,3,-2,-6,-10,-4,-10,-8,8,3,-4,-7,8,-1,-8,5,-9,-5,-9,-7,2,2,4,10,-7,-3,6,9,-2,9,1,6,-6,10,-6,4,10,9,8,-8,-6,6,-1,-8,-7,2,4,-9,-3,-6,8,6,-10,2,8,-2,10,-6,5,5,2,-10,-7,7,-10,8,6,5,-3,-3,8,-3,3,1,-3,10,4,-4,-10,3,-5,-9,-7,9,3,10,7,-2,-3,10,9,-3,-1,4,-7,5,-7,5,9,5,5,-3,-9,5,-6,-9,-5,8,1,-1,-8,-2,-9,1,2,9,-1,10,-5,-9,-9,8,3,4,-9,-2,-1,3,1,9,-10,-1,-1,1,5,1,-10,-10,6,-7,-8,1,3,-1,-8,10,-1,10,-1,9,1,-3,-10,6,-6,-10,-1,-6,-5,-1,-9,10,1,3,-1], dtype = "int32")#candidate|6696|(1755,)|const|int32
const_6697 = relay.const([-6.467736,1.907509,-8.843656,-5.952783,0.703103,5.631663,-6.291018,-0.233055,-4.022608,-4.402019,3.330216,5.537677,9.624568,-3.556840,-7.693058,8.400609,-7.319802,-0.430521,-2.601058,-6.336421,7.180715,7.235014,7.158642,3.745495,-0.275729,8.222009,8.072702,-0.531064,-7.711997,9.986700,-8.488826,-9.920369,9.161496,2.230042,3.819162,8.540164,-2.637782,-9.638460,2.072680,8.628824,5.829964,2.867724,2.950690,-0.770017,9.370074,-1.185619,-8.317035,-6.496276,4.035897,-5.333027,5.243562,2.127980,-1.216165,3.782318,5.452643,1.670870,-8.056411,3.317629,-5.779303,1.126232,9.276730,5.155251,-9.375062,-1.046981,-2.648082,-1.784523,-5.862858,0.060628,-3.933232,-8.312924,8.606762,-7.327811,9.516148,-7.934116,6.623253,1.435372,2.142194,1.343501,-2.286147,-4.638027,-8.853034,-6.339521,-0.133209,1.485639,8.029407,0.197573,-5.117436,-8.072063,3.944634,1.533758,-8.695987,-9.764602,-7.015482,-6.033570,5.656556,6.390341,7.313720,-1.045753,3.172559,-7.230341,-9.511285,4.928260,-2.539830,-1.192555,-2.627258,-8.328929,-0.883717,4.201611,-0.503950,5.558252,-3.738817,2.618702,-1.989355,2.651148,-8.887754,-0.387790,6.781017,0.284932,4.742122,-7.610820,3.584396,2.329999,0.826390,-7.703308,-1.856539,2.523871,-8.792072,-4.586343,-8.471862,-7.453733,-5.863183,7.497653,5.070504,7.962164,-5.188741,-3.237272,-6.460591,5.080885,-5.899480,-4.160113,1.352860,2.606752,-4.082423,2.112210,-1.195613,7.433545,-9.477676,-9.416855,9.046628,5.761588,5.808222,-5.215372,1.603193,2.583932,0.570857,-7.645100,8.587002,2.311335,3.588331,5.111329,-0.537182,-5.939171,7.430508,-1.092294,-0.098641,5.265868,-2.319787,-9.041928,0.594823,2.129184,0.534977,-0.921087,-2.726303,-1.565515,-3.401980,7.813664,7.412356,7.741644,-4.662774,9.928546,4.500448,5.745502,-3.363473,0.262923,9.438866,1.633887,-4.862128,-3.213319,3.187850,1.367586,-8.659134,-9.546466,-3.985242,-4.863995,-0.975266,-6.011503,-0.834460,2.888586,6.353538,5.138909,9.848338,6.572470,-7.562510,-4.444021,-4.504032,0.251607,-9.080395,-4.716152,3.690098,-6.975995,2.146111,-2.484126,-9.552080,-5.678831,-3.648220,-2.859660,-0.005454,-8.956380,2.253439,-1.738580,-2.554978,-5.864713,-7.243550,5.708736,-0.283958,9.256875,-0.410316,1.412834,1.354703,-3.029273,8.319750,5.268093,-5.070011,-5.371399,0.319960,-8.567893,-4.460114,-9.737673,9.795778,8.646327,3.243646,9.232059,-6.274332,-9.780846,7.593242,1.233154,-4.926017,-0.777619,-0.605548,-8.265446,-8.229687,1.133156,-9.623128,0.232508,-2.773375,6.839154,0.163823,5.733007,8.802951,7.488584,3.513179,-3.483441,4.377416,-5.643182,1.349330,9.977658,0.525356,5.169559,6.327934,-6.271010,7.738267,8.839882,-1.923048,-1.609359,6.409409,-2.305481,-5.277697,-4.248497,-2.705237,-3.605499,5.901069,6.424788,-0.289737,-7.799786,1.810635,0.337151,-6.792967,5.794365,-3.833723,9.429129,8.948837,-1.953664,-9.649637,4.642141,4.946567,-5.132857,-6.698598,-8.542939,-8.762738,-7.469792,0.267535,-3.591870,-9.333189,-6.910263,8.503760,-5.650536,-0.419549,5.986063,2.721170,3.699052,-1.210775,-2.934319,9.871822,6.905383,5.215777,7.573642,-1.625269,5.061064,1.814177,3.929348,9.854736,4.181834,-8.771767,-0.670365,8.034535,-2.379464,8.261893,-8.079733,5.178051,2.848655,7.389397,5.275703,-4.928613,6.350194,6.531020,6.364253,-9.635891,-8.699681,2.292079,5.611913,-1.560240,-7.226146,-5.181282,-5.916937,-0.038378,-6.683732,-1.530009,6.346326,-4.156825,-0.403626,9.141685,-3.453259,-8.647040,-8.408537,4.126813,-9.396520,-6.500324,-6.885502,-4.671488,-6.702983,-4.012324,-9.999341,5.105626,4.412163,-7.534248,6.503606,0.708514,-1.818388,-6.071310,6.158213,-0.827846,0.787885,-7.797922,9.586243,-2.381689,-6.821907,-9.148954,5.762305,-4.790845,-9.190787,-5.841790,2.766498,5.901284,5.712749,-4.737889,-3.511192,-8.231847,3.740402,0.321219,5.037158,9.162606,-7.548742,3.750614,1.463866,-4.082571,-4.380451,3.616148,8.314326,5.175181,-0.799672,2.837877,-8.697677,-9.358489,0.383520,-8.065531,1.787076,-2.877906,-2.048534,7.555287,4.004767,0.492751,-8.114461,0.190484,8.334933,-6.063000,2.975645,-3.859875,0.295693,6.742062,-8.849217,-2.240577,4.011138,8.287666,-9.631278,0.525881,6.484935,2.579183,9.641342,3.589502,-3.786741,-9.226222,9.058882,6.387859,0.930116,0.680122,1.808214,1.506712,-2.995676,-9.986594,1.420045,6.562004,-0.085615,-4.768119,5.536650,-7.464762,0.793211,3.490763,-9.902016,-1.593381,-0.539242,2.305247,1.261995,-2.539480,-7.997936,-3.408875,4.344335,-2.743558,-9.387876,7.645193,-5.392840,1.822285,2.843945,-9.121355,-0.735030,6.150487,7.298294,-7.671085,-1.546061,-6.194080,1.207412,-2.791882,-2.059635,-5.700713,-3.845188,0.356088,5.111638,-0.361718,1.229663,-5.947640,3.930723,-1.782642,0.232242,5.288485,-9.987504,-5.739662,-8.901983,-5.120924,0.244051,-3.446488,-5.290699,-1.230010,-1.383091,-8.606401,7.856796,3.601973,9.252169,5.898895,-3.962213,-6.981222,8.775623,-0.065596,9.590713,-5.107577,4.619332,-7.951358,-7.993905,-4.476728,-1.303590,7.276832,2.348670,-6.110154,-1.319824,8.013034,8.565231,5.402469,-3.887068,-8.173458,-6.427988,-0.045712,8.427497,-7.274995,7.849819,3.485398,4.475872,-1.845871,7.480307,1.932264,-4.808589,0.206060,-0.805771,-6.756555,-0.378593,0.800949,-0.440640,2.994914,-7.924349,3.136886,-0.532811,4.466024,5.247188,-3.167068,9.627284,9.461315,3.240646,5.391258,3.066314,-1.959937,-3.570620,9.733744,-8.004384,8.312906,-8.460805,-9.593239,5.731956,-5.265136,8.615151,8.278062,4.721385,0.362338,9.709772,-0.841443,-0.069838,3.900758,-7.755716,6.346076,5.272668,-7.309839,-8.078947,-2.794338,-7.174317,-4.330497,7.295240,-9.617004,-7.487057,5.562096,-1.590740,9.422241,2.816967,-0.302031,4.624076,-8.965746,-9.807657,-2.350584,5.296869,-4.084710,7.966800,-3.356852,-1.334503,8.239507,-0.306281,0.090360,1.165665,9.506514,8.270735,-6.014160,-4.953973,9.447469,9.632722,2.872222,-9.600037,9.914704,-5.072141,-5.341123,-1.333051,-2.352220,5.435518,-8.810636,-3.607652,5.242902,8.335559,-6.104042,-2.189623,-2.119115,1.756909,-0.468728,1.246437,5.175213,9.278830,-3.074347,-7.733335,-1.829891,-2.479276,-6.751982,7.775531,-7.829358,8.749897,-2.595579,-9.004997,-3.984508,-1.665481,3.549808,-7.246094,4.521004,1.717114,4.653284,-4.767831,3.294856,-3.038453,0.899244,0.167560,-8.736885,-2.688881,-3.286321,6.304208,-0.228700,2.819884,4.351689,1.162555,-6.797176,5.006603,-3.510123,4.282791,-7.523183,2.951585,1.035531,-2.318172,7.175326,-0.698894,2.214682,-4.259924,6.131846,-0.813857,5.868847,-9.848309,-7.225650,-8.347859,7.261844,-3.756578,4.629572,-6.241069,-0.059019,4.767168,9.116965,7.690628,6.739641,0.178063,3.858037,-8.774486,7.307892,-6.630860,-1.251538,-4.347173,0.210886,7.397679,-6.440156,6.261716,-2.428476,-5.346007,4.864367,8.578192,-8.623451,4.052885,-7.276671,-3.877605,-9.621565,4.395799,0.951455,3.348025,-3.052413,-0.923582,-0.514592,6.565345,-0.212856,-8.984096,8.480606,-5.237897,-6.973631,6.570937,8.567725,-6.228565,2.408181,-6.547369,1.689432,3.784807,0.517698,-4.124958,4.993437,-9.086493,-0.747403,0.851995,-2.521947,3.568683,-1.343828,3.275324,-3.605915,2.946823,0.252983,1.821167,0.606214,-2.904082,-5.342105,-5.177431,-0.385821,9.123090,-9.086268,-7.957739,-5.652951,8.474333,6.036652,4.113730,9.879041,6.410086,-9.893576,0.215832,0.161503,-4.162005,0.096180,6.624735,-9.946729,-3.411531,-9.501871,4.896962,-1.446964,3.309812,-3.889885,5.501707,3.727106,-1.553542,8.671070,-9.259806,-2.145408,-8.311244,2.440361,5.297360,-7.796782,-9.458256,8.646301,-7.699996,1.272887,7.699730,-8.355105,5.725676,1.179597,1.870537,0.108179,4.350327,5.915301,8.436659,3.301998,-4.151543,-5.102449,-2.805356,-2.913175,1.842091,-2.984887,9.017884,-7.625193,8.653140,4.432499,-9.172613,-5.096053,-7.727797,-4.705912,-2.694745,-7.021809,5.726382,-2.181176,-4.377835,-1.663639,-2.415020,-2.264537,7.011777,-5.627772,-8.975061,-3.092152,-5.434861,-9.274780,-5.496900,4.298104,0.113551,8.936917,-4.663319,-1.449721,-9.164079,3.812638,-8.382030,9.180278,-9.613409,-4.452360,6.987138,8.618452,8.160398,-5.380588,-2.008577,-2.169822,4.076162,9.719195,5.113306,1.963351,-4.504528,-1.064511,-0.513694,6.978412,7.855809,-7.397855,-0.310100,1.335553,2.363967,2.713423,4.917645,1.561808,5.893719,-0.947886,7.857192,-5.359443,-3.182048,-1.706478,-5.840074,2.647687,8.271120,-1.538730,-4.403783,4.504891,1.158473,8.464533,-5.327046,-6.006318,1.778567,8.189625,-2.725348,6.503835,-4.225189,0.399824,7.268549,7.073440,-1.786701,-2.714438,8.969624,7.228930,-4.166702,0.388160,5.354928,-4.723193,-9.177313,2.455370,3.159262,-4.702661,-9.758984,0.861381,-8.286002,-7.546769,-3.970599,1.052644,-7.270253,6.333741,-2.167842,-5.577816,-4.366621,-6.631629,-9.035849,7.166161,-7.570497,5.923638,0.263920,-4.407090,3.467043,6.857113,9.951762,0.892711,6.404883,-9.897937,2.104869,4.393753,7.851743,7.197332,-6.031054,-4.132709,-8.464257,5.621059,-6.378740,4.017865,5.949942,0.768419,-6.664705,-1.577197,6.123518,1.209900,5.676699,-5.385886,-9.234556,-3.894749,-7.689873,-4.816945,9.589647,0.667075,0.984166,1.979174,1.671602,-1.978151,-3.518838,8.178634,2.248908,-2.273010,0.418684,-3.230571,-4.762906,-4.794830,6.730120,2.861482,3.141745,-1.653794,-9.478028,7.800774,-7.047749,8.109096,-2.803676,2.736319,6.539798,6.809551,-7.119434,-1.640504,-0.155876,-9.250905,9.851181,-0.805892,-3.561983,-3.429291,1.847600,-8.589556,2.554106,-4.873063,-1.506481,5.186759,9.622828,-6.658852,-7.352593,5.160239,-1.047767,-9.982046,9.401863,-1.543265,5.522318,-8.346332,-8.217968,4.083276,-1.801398,9.431975,6.420278,-8.963610,0.277357,-2.011195,-1.719387,5.750265,4.734004,-4.611876,-6.631312,-8.022407,4.603099,-4.699644,2.936238,6.308198,6.286517,-4.873061,-7.883510,-2.415451,-3.663411,0.255014,-4.255380,1.469191,5.870398,-8.937896,-2.583248,5.439041,-7.516246,5.394559,7.839809,0.561634,9.020677,7.336050,3.479743,-1.214949,7.030182,-7.899751,-0.160573,9.535304,8.311678,6.641130,3.156275,-2.548058,4.135906,5.581838,-9.245514,1.011962,5.797659,5.634535,-2.589828,-9.639704,-2.321235,3.335352,-9.960242,-7.608503,1.964320,0.832029,-7.267444,-1.282102,8.203102,5.790949,-1.311456,5.798746,0.502060,-4.511122,-2.328668,6.781372,3.809741,8.921310,-1.375928,-7.747887,-2.358044,-3.528269,6.221838,-7.963370,-3.763719,-4.054409,-6.606153,-6.661915,2.916877,-7.236677,7.623770,-3.565621,-8.273437,-3.198252,1.905747,-9.369417,-9.389089,-5.238606,8.274677,-6.102971,-1.945926,5.322443,0.076821,4.274084,-9.446745,-5.542521,6.390284,7.995319,5.787692,-7.473736,-7.961815], dtype = "float32")#candidate|6697|(1078,)|const|float32
call_6695 = relay.TupleGetItem(func_5621_call(relay.reshape(var_6683.astype('float64'), [143, 14]), relay.reshape(const_6696.astype('int32'), [1755,]), relay.reshape(const_6697.astype('float32'), [1078,]), ), 4)
call_6698 = relay.TupleGetItem(func_5625_call(relay.reshape(var_6683.astype('float64'), [143, 14]), relay.reshape(const_6696.astype('int32'), [1755,]), relay.reshape(const_6697.astype('float32'), [1078,]), ), 4)
output = relay.Tuple([call_6661,call_6678,call_6682,var_6683,call_6695,const_6696,const_6697,])
output2 = relay.Tuple([call_6662,call_6679,call_6684,var_6683,call_6698,const_6696,const_6697,])
func_6702 = relay.Function([var_6683,], output)
mod['func_6702'] = func_6702
mod = relay.transform.InferType()(mod)
mutated_mod['func_6702'] = func_6702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6703 = relay.var("var_6703", dtype = "float64", shape = (2002,))#candidate|6703|(2002,)|var|float64
func_6702_call = mutated_mod.get_global_var('func_6702')
call_6704 = func_6702_call(var_6703)
output = call_6704
func_6705 = relay.Function([var_6703], output)
mutated_mod['func_6705'] = func_6705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mod.get_global_var('func_5887')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_6737 = func_5887_call()
call_6738 = func_5887_call()
output = relay.Tuple([call_6737,])
output2 = relay.Tuple([call_6738,])
func_6755 = relay.Function([], output)
mod['func_6755'] = func_6755
mod = relay.transform.InferType()(mod)
output = func_6755()
func_6756 = relay.Function([], output)
mutated_mod['func_6756'] = func_6756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3536_call = mod.get_global_var('func_3536')
func_3537_call = mutated_mod.get_global_var('func_3537')
call_6804 = relay.TupleGetItem(func_3536_call(), 0)
call_6805 = relay.TupleGetItem(func_3537_call(), 0)
output = relay.Tuple([call_6804,])
output2 = relay.Tuple([call_6805,])
func_6811 = relay.Function([], output)
mod['func_6811'] = func_6811
mod = relay.transform.InferType()(mod)
output = func_6811()
func_6812 = relay.Function([], output)
mutated_mod['func_6812'] = func_6812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6319_call = mod.get_global_var('func_6319')
func_6321_call = mutated_mod.get_global_var('func_6321')
call_6836 = relay.TupleGetItem(func_6319_call(), 0)
call_6837 = relay.TupleGetItem(func_6321_call(), 0)
output = call_6836
output2 = call_6837
func_6839 = relay.Function([], output)
mod['func_6839'] = func_6839
mod = relay.transform.InferType()(mod)
mutated_mod['func_6839'] = func_6839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6839_call = mutated_mod.get_global_var('func_6839')
call_6840 = func_6839_call()
output = call_6840
func_6841 = relay.Function([], output)
mutated_mod['func_6841'] = func_6841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6866 = relay.var("var_6866", dtype = "int32", shape = ())#candidate|6866|()|var|int32
var_6867 = relay.var("var_6867", dtype = "int32", shape = (12, 16, 16))#candidate|6867|(12, 16, 16)|var|int32
bop_6868 = relay.maximum(var_6866.astype('int32'), var_6867.astype('int32')) # shape=(12, 16, 16)
output = bop_6868
output2 = bop_6868
func_6873 = relay.Function([var_6866,var_6867,], output)
mod['func_6873'] = func_6873
mod = relay.transform.InferType()(mod)
var_6874 = relay.var("var_6874", dtype = "int32", shape = ())#candidate|6874|()|var|int32
var_6875 = relay.var("var_6875", dtype = "int32", shape = (12, 16, 16))#candidate|6875|(12, 16, 16)|var|int32
output = func_6873(var_6874,var_6875,)
func_6876 = relay.Function([var_6874,var_6875,], output)
mutated_mod['func_6876'] = func_6876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5491_call = mod.get_global_var('func_5491')
func_5493_call = mutated_mod.get_global_var('func_5493')
call_6890 = relay.TupleGetItem(func_5491_call(), 0)
call_6891 = relay.TupleGetItem(func_5493_call(), 0)
func_5185_call = mod.get_global_var('func_5185')
func_5186_call = mutated_mod.get_global_var('func_5186')
call_6894 = func_5185_call()
call_6895 = func_5185_call()
output = relay.Tuple([call_6890,call_6894,])
output2 = relay.Tuple([call_6891,call_6895,])
func_6910 = relay.Function([], output)
mod['func_6910'] = func_6910
mod = relay.transform.InferType()(mod)
mutated_mod['func_6910'] = func_6910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6910_call = mutated_mod.get_global_var('func_6910')
call_6911 = func_6910_call()
output = call_6911
func_6912 = relay.Function([], output)
mutated_mod['func_6912'] = func_6912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6839_call = mod.get_global_var('func_6839')
func_6841_call = mutated_mod.get_global_var('func_6841')
call_6954 = func_6839_call()
call_6955 = func_6839_call()
output = relay.Tuple([call_6954,])
output2 = relay.Tuple([call_6955,])
func_6969 = relay.Function([], output)
mod['func_6969'] = func_6969
mod = relay.transform.InferType()(mod)
output = func_6969()
func_6970 = relay.Function([], output)
mutated_mod['func_6970'] = func_6970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6984 = relay.var("var_6984", dtype = "float32", shape = (9, 13, 10))#candidate|6984|(9, 13, 10)|var|float32
var_6985 = relay.var("var_6985", dtype = "float32", shape = (9, 13, 10))#candidate|6985|(9, 13, 10)|var|float32
bop_6986 = relay.power(var_6984.astype('float32'), relay.reshape(var_6985.astype('float32'), relay.shape_of(var_6984))) # shape=(9, 13, 10)
output = bop_6986
output2 = bop_6986
func_6991 = relay.Function([var_6984,var_6985,], output)
mod['func_6991'] = func_6991
mod = relay.transform.InferType()(mod)
mutated_mod['func_6991'] = func_6991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6991_call = mutated_mod.get_global_var('func_6991')
var_6993 = relay.var("var_6993", dtype = "float32", shape = (9, 13, 10))#candidate|6993|(9, 13, 10)|var|float32
var_6994 = relay.var("var_6994", dtype = "float32", shape = (9, 13, 10))#candidate|6994|(9, 13, 10)|var|float32
call_6992 = func_6991_call(var_6993,var_6994,)
output = call_6992
func_6995 = relay.Function([var_6993,var_6994,], output)
mutated_mod['func_6995'] = func_6995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6969_call = mod.get_global_var('func_6969')
func_6970_call = mutated_mod.get_global_var('func_6970')
call_7019 = relay.TupleGetItem(func_6969_call(), 0)
call_7020 = relay.TupleGetItem(func_6970_call(), 0)
output = call_7019
output2 = call_7020
func_7048 = relay.Function([], output)
mod['func_7048'] = func_7048
mod = relay.transform.InferType()(mod)
mutated_mod['func_7048'] = func_7048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7048_call = mutated_mod.get_global_var('func_7048')
call_7049 = func_7048_call()
output = call_7049
func_7050 = relay.Function([], output)
mutated_mod['func_7050'] = func_7050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3425_call = mod.get_global_var('func_3425')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_7089 = relay.TupleGetItem(func_3425_call(), 4)
call_7090 = relay.TupleGetItem(func_3426_call(), 4)
func_4905_call = mod.get_global_var('func_4905')
func_4906_call = mutated_mod.get_global_var('func_4906')
call_7096 = relay.TupleGetItem(func_4905_call(), 0)
call_7097 = relay.TupleGetItem(func_4906_call(), 0)
output = relay.Tuple([call_7089,call_7096,])
output2 = relay.Tuple([call_7090,call_7097,])
func_7098 = relay.Function([], output)
mod['func_7098'] = func_7098
mod = relay.transform.InferType()(mod)
output = func_7098()
func_7099 = relay.Function([], output)
mutated_mod['func_7099'] = func_7099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6437_call = mod.get_global_var('func_6437')
func_6438_call = mutated_mod.get_global_var('func_6438')
call_7114 = relay.TupleGetItem(func_6437_call(), 0)
call_7115 = relay.TupleGetItem(func_6438_call(), 0)
func_5664_call = mod.get_global_var('func_5664')
func_5666_call = mutated_mod.get_global_var('func_5666')
call_7126 = func_5664_call()
call_7127 = func_5664_call()
bop_7128 = relay.floor_divide(call_7114.astype('float32'), call_7126.astype('float32')) # shape=(13, 8, 5)
bop_7131 = relay.floor_divide(call_7115.astype('float32'), call_7127.astype('float32')) # shape=(13, 8, 5)
output = bop_7128
output2 = bop_7131
func_7135 = relay.Function([], output)
mod['func_7135'] = func_7135
mod = relay.transform.InferType()(mod)
mutated_mod['func_7135'] = func_7135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7135_call = mutated_mod.get_global_var('func_7135')
call_7136 = func_7135_call()
output = call_7136
func_7137 = relay.Function([], output)
mutated_mod['func_7137'] = func_7137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4552_call = mod.get_global_var('func_4552')
func_4554_call = mutated_mod.get_global_var('func_4554')
call_7138 = func_4552_call()
call_7139 = func_4552_call()
output = relay.Tuple([call_7138,])
output2 = relay.Tuple([call_7139,])
func_7148 = relay.Function([], output)
mod['func_7148'] = func_7148
mod = relay.transform.InferType()(mod)
mutated_mod['func_7148'] = func_7148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7148_call = mutated_mod.get_global_var('func_7148')
call_7149 = func_7148_call()
output = call_7149
func_7150 = relay.Function([], output)
mutated_mod['func_7150'] = func_7150
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7168 = relay.var("var_7168", dtype = "float64", shape = (10, 1, 15))#candidate|7168|(10, 1, 15)|var|float64
const_7169 = relay.const([[[-7.369938,-9.233191,2.537555,-7.355328,6.403965,3.361138,-0.159851,-1.711657,6.873480,-8.289270,3.897552,-8.294410,-8.850703,-2.388041,0.189030]],[[5.560262,-0.968170,-1.394651,9.154009,-7.214562,0.804492,9.574978,0.967569,1.735523,-9.657292,-5.841739,2.825793,-6.972159,-8.962487,9.439816]],[[7.192910,5.391261,-2.760289,0.221089,-1.221314,5.542524,7.370556,3.922806,-3.839100,6.425693,-9.866977,-3.135330,4.561845,-5.006987,-4.335825]],[[8.455088,-6.089734,1.506913,-5.553567,6.061549,-7.005482,-6.550961,8.523042,3.018696,-5.404893,-9.890788,-8.726962,6.104790,-3.711741,2.576685]],[[5.009835,-6.816371,0.534932,0.227443,-1.670150,-1.093119,6.702129,-1.916942,-7.563680,-5.169784,0.125337,-6.986830,-4.223034,7.097239,6.277193]],[[7.192483,1.988288,-8.618882,3.145124,5.126999,-9.770336,-2.252781,-9.726208,-7.606425,-7.914438,-1.469871,-8.826292,-9.857155,-9.040259,1.769774]],[[-9.713043,-1.426957,-6.595045,7.806407,-8.627326,2.868930,-4.815089,-1.637594,-4.279529,-4.768828,-8.905744,-7.643853,9.015864,0.922298,-0.008252]],[[9.264601,0.347418,0.732025,-5.477440,1.485495,7.110663,-2.824002,-5.562680,-8.961395,7.391202,-1.078762,0.625879,-7.389798,7.828093,-9.471553]],[[-6.315847,-8.695987,-0.781321,4.141019,-7.337497,9.114914,2.042130,-0.027672,9.863456,4.911458,0.147506,-1.943490,-6.254383,8.498286,-7.028883]],[[-6.395076,2.873141,-5.893427,-4.093416,-2.643332,-1.826911,-2.026429,4.038266,5.835058,2.631215,-2.234721,-9.311706,-3.093050,7.262043,-8.525475]]], dtype = "float64")#candidate|7169|(10, 1, 15)|const|float64
bop_7170 = relay.mod(var_7168.astype('float64'), relay.reshape(const_7169.astype('float64'), relay.shape_of(var_7168))) # shape=(10, 1, 15)
output = bop_7170
output2 = bop_7170
func_7179 = relay.Function([var_7168,], output)
mod['func_7179'] = func_7179
mod = relay.transform.InferType()(mod)
var_7180 = relay.var("var_7180", dtype = "float64", shape = (10, 1, 15))#candidate|7180|(10, 1, 15)|var|float64
output = func_7179(var_7180)
func_7181 = relay.Function([var_7180], output)
mutated_mod['func_7181'] = func_7181
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7207 = relay.var("var_7207", dtype = "bool", shape = (16, 12, 13))#candidate|7207|(16, 12, 13)|var|bool
var_7208 = relay.var("var_7208", dtype = "bool", shape = (16, 12, 13))#candidate|7208|(16, 12, 13)|var|bool
bop_7209 = relay.logical_and(var_7207.astype('bool'), relay.reshape(var_7208.astype('bool'), relay.shape_of(var_7207))) # shape=(16, 12, 13)
func_3011_call = mod.get_global_var('func_3011')
func_3017_call = mutated_mod.get_global_var('func_3017')
const_7218 = relay.const([6,7,4,-7,-6,6,6,-5,-4,3,-2,-1,-2,10,-4,7,-9,-4,-8,1,9,5,-7,-2,1,-6,4,8,8,9,-1,10,1,-2,8,-3,3,2,-8,-2,10,2,7,-1,1,5,-6,-9,2,6,-7,6,-6,-9,-3,-5,-8,8,-6,10,-8,-9,-1,-3,-2,-2,-7,6,-7,10,-5,-4,2,10,-10,7,-5,-4,7,-9,6,5,-10,-1,-7,8,5,-6,-5,-7,7,4,-2,-6,6,5,7,-9,10,-7,-10,10,-8,-4,-3,7,-7,-9,9,-8,-3,9,3,-8,-6,10,9,-3,6,-7,10,-8,4,8,5,8,-8,-7,-3,-4,9,6,3,4,-9,-10,-8,10,8,-5,5,-2,-10,-4,7,3,1,5,-1,7,3,-2,8,2,1,10,9,-1,-4,-2,-2,-6,-6,-8,1,10,-5,-4,6,8,1,5,1,-9,-10,5,-7,4,-1,2,-10,-5,-5,-5,-2,8,2,-5,9,9,6,1,4,-7,-10,8,-1,4,-1,-9,-5,-8,2,9,7,3,3,-7,9,-1,-4,10,3,3,4,-8,-1,-3,2,-4,-3,4,-3,10,-6,-1,-1,10,-5,-9,5,8,-6,8,-7,6,-1,4,1,6,-9,2,9,6,-4,-5,-2,4,-3,3,7,10,10,-4,1,2,10,-10,3,3,2,-6,-10,-10,7,5,-5,-3,-10,-9,8,9,-5,-7,8,6,9,-2,-4,-3,10,-4,2,1,6,-1,3,-4,-2,7,-2,-7,4,-1,-6,9,4,-10,-3,-8,-2,5,2,4,-2,-1,-1,-9,-10,5,-7,-9,-10,-9,1,-3,-8,-10,10,2,2,-8,2,10,-8,-5,9,-7,-4,-1,-4,9,3,-2,-1,4,-8,6,10,1,1,6,-1,-7,9,-1,2,-5,-7,-9,1,-2,8,8,-6,-9,-8,-6,-7,-5,1,-9,4,-8,-1,9,-2,1,-1,-7,10,3,-10,7,2,-2,-6,7,-5,2,4,7,2,-4,-7,-9,9,-2,-3,-6,3,-1,1,10,5,-1,1,4,6,-6,1,7,-1,10,-2,-10,-4,-1,-1,10,-2,4,1,-7,-6,-7,10,10,4,5,6,-8,-8,-5,1,4,10,-7,6,7,8,-10,9,2,-9,9,6,-8,-10,5,10,-7,7,-1,-9,-4,2,9,-5,-5,10,2,5,10,2,-7,5,3,9,5,-4,-6,5,8,-8,6,8,4,5,9,1,10,-9,6,-10,-5,-1,1,-10,-8,3,-8,2,-6,-8,-6,2,-3,-2,-8,-3,5,8,10,6,-6,-1,-1,6,2,4,-3,4,7,6,-8,-2,2,8,8,9,-4,8,-3,-5,-10,-3,-7,-8,4,-2,4,-3,2,8,7,3,8,-9,10,8,-4,3,-7,-6,7,-3,-9,-7,10,-2,1,-10,-1,-3,-2,-10,-1,8,4,-1,9,3,-10,1,-4,-9,-10,-7,10,1,1,8,2,10,-9,8,4,-10,-2,4,-5,4,-4,8,10,-5,9,-3,-1,-9,-5,-2,10,3,4,1,-2,7,-7,1,-2,-10,-2,-4,-5,7,3,9,1,9,-1,5,7,-1,-4,-2,7,-1,-5,3,-9,-10,-10,-8,-10,6,-7,-7,2,-9,-8,-7,2,-5,-3,7,-1,-6,5,-1,1,8,-10,-2,-1,-1,3,6,-3,2,-1,10,5,2,10,-5,-3,-10,-8,-5,5,-9,-3,-4,4,-4,5,7,-8,10,-4,-8,9,-10,-2,7,-5,6,9,-4,-5,2,-2,10,7,7,-8,-8,3,-6,-7,2,1,-9,5,-5,-4,10,5,-4,-3,-6,8,-8,6,-5,8,4,-5,-10,-8,3,-4,-6,5,5,-2,9,-7,-10,10,7,-5,7,-5,10,-4,5,-6,-8,10,-8,-4,-2,-3,-7,8,-1,6,2,-5,-7,5,-6,3,-1,7,7,6,4,2,2,-5,2,9,5,6,2,1,10,1,-7,1,-10,3,-8,-7,-4,1,6,-10,5,-2,-5,4,9,7,4,1,-8,-9,-9,5,1,-9,-8,-9,-5,10,5,5,9,-9,-3,6,7,6,-6,-9,-8,5,9,1,-6,-4,-4,5,3,8,-6,-7,-2,9,3,4,-8,7,4,3,-8,-2,-8,-8,1,-8,2,2,-8,1,-8,-3,7,-8,-10,2,-10,2,9,10,8,1,-5,4,-1,-5,4,-9,-9,-2,6,9,-6,5,-3,-7,4,10,10,-3,1,-2,-7,5,-6,5,1,-9,6,-2,8,1,9,3,5,10,3,2,3,-6,-4,-2,-6,2,6,1,5,-7,-3,-4,6,6,-6,-1,-4,9,-9,-3,-5,-7,8,4,-7,-8,1,1,-7,-9,3,-3,7,7,6,-1,4,1,-3,5,-8,-2,-8,6,-10,-8,5,2,-7,9,10,4,5,5,-10,2,5,7,-9,-9,-8,-3,-10,6,-5,-9,-5,8,8,-2,6,-8,-9,6,-8,8,2,10,6,9,10,-6,-3,-7,-10,3,2,-8,-4,1,-7,-9,-8,-3,2,-6,2,-9,8,9,-6,3,2,1,6,-10,-10,-4,-8,3,-10,4,2,-8,1,8,10,7,5,-9,-9,3,-10,8,-5,7,1,-9,7,5,7,-7,-9,8,-4,4,-8,3,-4,-5,3,4,3,10,1,10,-1,4,3,5,-2,1,5,-9,6,-10,6,-2,9,9,-7,9,-9,-9,8,-2,-2,10,8,6,1,-10,2,-6,-5,-1,5,2,5,-8,7,1,2,5,-1,3,-7,-9,-6,9,1,4,10,-1,9,-7,-9,4,-10,-3,-1,2,-9,8,7,9,-7,-5,-8,1,-8,-4,7,-8,8,-7,-8,-9,-4,-4,-4,3,5,8,6,3,-8,-9,-4,3,10,10,-2,7,-6,9,6,-1,9,6,-9,-7,5,-5,7,-8,-7,-7,7,-5,4,3,5,1,-3,9,-6,-2,-6,-10,2,-2,-6,8,-2,8,-10,-6,-5,10,5,-10,8,2,9,-9,-9,10,9,-1,-4,8,10,-8,2,10,7,-10,4,-3,3,-3,-4,-10,-4,5,-1,-9,-9,-5,5,10,-7,-1,10,5,-5,-8,5,3,2,-5,-2,-4,-3,4,6,4,-2,-6,8,-8,4,-3,7,-8,7,-9,-10,-10,4,5,-7,3,3,-2,3,-5,7,7,7,2,-9,-2,6,3,7,-9,-8,-2,4,-3,5,5,7,7,-7,7,9,-4,3,-6,9,3,-10,8,8,-10,-1,-6,-6,4,1,9,3,7,-3,6,-10,9,5,-3,-9,7,-9,10,-5,1,6,-8,-5,6,-1,2,-3,-1,-8,-9,-9,-7,-1,-4,-1,-4,4,7,8,7,-8,-1,8,7,-8,5,5,6,8,2,-2,8,8,-5,-3,-6,-1,-1,-8,-7,7,6,3,-7,1,-4,-8,10,2,-4,8,-5,6,-10,-4,-3,-10,-2,2,-5,3,-5,-4,8,-10,10,-2,-9,-10,-5,7,-5,8,9,1,10,-5,-4,9,4,4,-7,8,-7,4,-3,9,-7,9,8,2,-5,-4,-6,1,-4,4,1,9,2,-9,6,7,6,9,-8,-3,-10,10,-10,5,-7,-7,-5,-8,2,2,-5,3,-4,7,-5,-3,-7,-8,5,3,6,-2,-8,6,6,-10,-6,4,5,-2,-10,-3,1,4,-9,-9,8,-6,10,8,3,-8,-9,8,4,4,8,-2,1,4,4,-6,3,-1,-7,10,5,8,-10,9,8,-7,3,5,5,3,-3,2,-3,10,1,10,7,1,-4,-1,-6,-1,6,-10,-3,10,5,1,-6,8,2,3,-5,7,5,-4,-4,9,-8,3,-3,7,-9,-6,3,2,1,3,10,-7,-7,5,3,3,4,-3,3,4,2,8,-3,9,4,2,-3,8,-8,-3,-8,2,-6,-8,9,-2,-2,-6,-9,-1,-10,-8,3,-5,10,4,6,-9,-3,3,8,2,-6,-7,7,1,-2,-10,-4,6,5,-3,5,5,-10,9,6,2,-4,-10,-6,6,-9,-2,3,6,-7,-9,2,2,4,3,-5,-1,-3,-7,1,6,-2,-2,8,1,8,8,5,5,-1,7,-3,-6,1,-7,9,-2,-4,3,2,-7,-3,-2,5,6,-6,-6,5,-7,-5,1,-8,2,7,5,-9,-10,7,3,-9,-10,5,-4,-7,-9,5,-6,-2,6,6,-1,-2,-9,4,3,-10,8,10,-6,-3,9,4,1,-6,7,8,6,10,-1,7,8,6,5,-8,-4,5,-8,-1,-6,6,8,3,6,-9,-8,10,6,-9,-3,-3,7,2,-8,4,9,-9,-6,1,6,6,8,7,3,4,-5,2,-4,9,7,-8,-5,-1,1,-2,4,10,-5,6,7,3,7,-5,-10,-7,-8,-1,-3,-4,6,3,4,-2,2,-5,7,10,3,-9,10,10,-2,-10,5,1,-8,3,-8,10,-2,7,-3,5,2,1,-9,-1,1,-8,-5,-10,-1,-4,-8,9,9,9,-4,-10,-8,10,1,10,3,8,5,1,-1,-7,9,-6,5,-4,8,7,6,-5,1,9,-3,1,7,6,-7,4,2,-8,-5,-5,-8,-1,4,-1,3,-10,-1,4,5,5,-4,9,8], dtype = "int32")#candidate|7218|(1755,)|const|int32
const_7219 = relay.const(-3.263411, dtype = "float64")#candidate|7219|()|const|float64
const_7220 = relay.const([[-7.077683,-3.536712],[-6.860562,0.299393],[3.219604,5.557602],[-6.941591,3.317268],[2.197490,5.887906],[-4.898728,6.471614],[-7.735205,-2.372255],[0.353115,-0.376382],[-6.570439,0.217022],[-7.420373,-3.804451],[-3.790340,5.828030],[-7.678680,-9.511801],[8.766586,-7.679650],[-2.975226,-7.406168],[-0.856266,0.986769],[-9.910471,5.508055],[9.199476,-7.669870],[4.738824,7.049360],[-8.410139,-1.781105],[1.940799,-7.531673],[-6.710415,3.577893],[9.108937,6.900809],[-5.770543,5.361306],[6.418759,8.008894],[-8.357300,-2.594403],[-6.516817,8.564975],[-5.213087,-7.956084],[-8.438916,-8.469831],[6.349940,0.790489],[9.279716,-7.884528],[-1.618369,5.698031],[-2.081323,-4.586921],[-8.018487,-6.733474],[-5.954740,4.325570],[6.796481,-6.914838],[-2.191888,-8.515550],[-6.600237,-1.819826],[-3.008631,8.164764],[4.269824,-2.358633],[-8.158904,-5.278606],[-0.421312,0.817947],[-3.389659,0.175210],[-3.206218,-1.136277],[6.266009,-1.225533],[-9.604660,2.659915],[3.098587,8.737538],[3.347736,-2.217127],[-1.385326,-3.300669],[4.230422,1.087112],[-7.651070,1.040321],[2.933617,-8.066108],[-2.977254,-6.282960],[4.018749,-7.451159],[0.414787,5.727844],[3.585754,-6.507978],[-0.216564,-9.254434],[-7.530902,-5.339064],[7.576602,-0.419652],[5.554143,3.548241],[6.320679,-7.447189],[0.230362,-2.985666],[2.092188,-1.719138],[6.072730,-8.075927],[2.882509,-3.391681],[0.438289,5.081575],[-2.271879,6.815378],[-6.882441,-9.013934],[-7.872235,-7.765727],[5.123733,-9.280492],[6.224328,1.232768],[5.328407,-2.304351],[7.265817,8.804711],[3.955291,6.234312],[-2.895833,4.728254],[1.043857,-3.820602],[0.344437,5.722222],[9.957964,2.573261],[-0.549681,-2.275923],[-6.156497,3.224425],[3.874167,-6.142031],[2.286147,-5.651319],[-2.126655,-8.917474],[5.728461,-3.743902],[1.465453,2.109524],[9.201185,9.860806],[-1.758475,-5.548990],[2.414540,-1.792664],[-4.516822,4.558753],[-8.528205,3.912046],[-4.478714,-0.077506],[-0.774982,-6.144074],[-6.975818,1.383852],[-0.433519,-7.966280],[-2.802284,0.382558],[-9.360872,-8.522024],[4.841946,-9.362276],[2.345081,-1.852191],[6.886648,-6.010989],[2.089187,3.471723],[-6.348949,-2.728882],[-9.145685,8.210820],[8.840776,-1.591699],[-8.626680,-0.573101],[-6.630056,6.334716],[-5.689148,9.137193],[-5.413937,2.257132],[-7.265444,-6.097264],[8.112464,8.927896],[4.691057,-1.545300],[-3.433324,-6.800205],[6.837436,-1.866564],[2.999132,-3.931797],[9.783356,9.623556],[6.213897,-1.612174],[5.067921,-6.873356],[2.379068,-4.385513],[5.928316,7.022836],[0.492503,-0.255510],[-5.706775,4.569471],[7.124115,0.539782],[9.386673,-6.518703],[3.928581,4.394804],[6.096705,-3.058189],[8.847807,3.116961],[4.929488,-7.210820],[-0.094705,-6.374666],[1.253717,-1.553564],[1.382177,-9.497544],[-7.121879,2.685003],[6.748898,4.314331],[-2.212650,4.172416],[-3.659394,-0.301632],[1.892737,9.019787],[-0.336571,-8.371090],[2.080054,-4.519797],[-3.960991,6.706184],[7.929364,-5.589230],[8.676272,-9.591531],[0.286651,-1.706149],[-4.439733,-5.782628],[6.502941,-4.030799],[4.557796,-0.795215],[3.672704,7.602150],[6.417576,1.672427],[6.203434,7.244508],[3.321827,-1.002421],[6.869788,-7.358929],[-9.589259,1.299542],[-8.894908,8.038868],[-0.984691,-4.396998],[-7.877861,4.252283],[6.702875,-5.297141],[-7.706382,2.747791],[0.506355,5.636615],[-6.086837,4.014782],[-4.901499,9.335830],[-8.048396,-7.162899],[-9.529094,-5.026203],[-1.883737,-7.895678],[-4.880502,-7.612928],[-6.508779,-9.866028],[4.504263,-8.054366],[-2.556759,-8.633734],[-3.417798,2.043517],[-7.647181,4.365126],[1.134634,3.456689],[9.498839,8.431645],[8.368985,-9.493718],[7.363869,8.912993],[-9.302113,4.029009],[8.465213,9.225579],[6.873891,-9.219499],[-6.267524,-0.464830],[-8.198934,2.193688],[5.000208,4.888706],[-4.118199,-0.555051],[3.905937,8.282642],[5.668790,-1.793315],[-8.907148,-3.635301],[-8.670091,-5.631913],[-8.936333,-8.474499],[-7.935936,-8.866209],[-2.326383,-5.129783],[9.864120,8.425974],[8.118957,2.468115],[7.645541,2.700286],[7.142537,5.399965],[5.343399,9.720288],[-7.635196,-1.705993],[8.910801,-1.092213],[-8.985204,9.138366],[2.135680,-6.296965],[2.545497,9.968931],[0.885645,-2.805280],[-9.948994,4.348204],[5.148094,3.677640],[-0.092371,0.390600],[-7.245884,-4.231585],[-7.029021,-9.280710],[-6.544342,-5.427835],[-3.953769,-8.543093],[1.859974,8.232275],[-6.528663,2.953447],[8.985125,6.040283],[-9.214408,2.859540],[-0.533443,3.942948],[1.473260,-3.618235],[8.721038,1.567340],[-4.147743,5.831899],[2.129439,3.745310],[2.268713,2.314650],[4.332762,2.467590],[8.323165,-5.862001],[-2.036798,5.985140],[2.009398,4.385352],[-8.834054,0.779420],[-6.536737,-0.911955],[6.971702,5.275721],[-0.829157,4.198915],[3.869296,8.266873],[1.797667,-2.172026],[-3.358777,-1.848240],[5.531047,-5.908500],[-2.224396,-4.313176],[-7.359458,-0.876525],[-9.172440,0.087589],[7.018277,-8.897016],[8.547240,4.469779],[0.701944,-6.485128],[5.096264,0.431296],[-8.050073,1.291466],[9.970523,4.853767],[-5.550084,0.402136],[9.006100,-4.540074],[7.986753,7.943836],[-7.587179,-4.497352],[-1.596423,6.311655],[9.455074,-6.633474],[-5.024847,-3.988095],[1.319480,-8.443645],[-7.453574,-7.905670],[-6.417097,-5.186119],[8.077685,-5.335313],[-8.782002,2.546234],[9.184898,4.659449],[3.508443,-4.077985],[7.862220,-5.240397],[-0.292364,-6.160896],[-1.928283,-4.212672],[1.895225,7.458142],[-8.656181,9.067667],[-6.475914,9.589117],[4.311315,-7.388089],[-8.449789,2.634715],[1.438657,-9.818156],[-1.119691,-1.978527],[3.359946,7.991764],[8.811815,4.053495],[-0.757015,0.037176],[6.236598,-1.274456],[6.728416,5.311714],[5.011152,8.846155],[-8.992238,-9.993147],[-9.852936,-3.040539],[3.500374,5.529558],[-7.094367,-8.774200],[4.416694,4.480518],[-2.943589,4.407078],[-5.473324,5.163641],[0.280264,-6.866647],[-5.410660,-2.749053],[-3.183727,-9.596897],[-0.493153,-3.627290],[-2.709477,1.541198],[-5.616458,-4.098275],[-4.581671,-0.986957],[-9.508368,-0.224511],[-2.264580,-3.496164],[5.090797,-1.599708],[8.382417,9.951341],[-3.014905,-6.954210],[-4.114950,-0.826824],[-9.822639,9.722238],[-6.796524,4.719310],[4.273088,6.140103],[-2.181582,-8.743693],[-1.484887,5.410702],[1.371593,-1.939878],[8.458106,-3.209414],[-7.381942,-2.114823],[9.005537,-6.991486],[-2.734069,4.284842],[0.673947,1.194898],[-3.726848,-7.094235],[-8.506373,-6.651780],[-4.227307,6.631293],[4.265028,-2.014349],[-4.252159,-4.202332],[-6.427843,-2.468410],[-9.486638,8.784747],[-6.332201,6.901797],[-8.804725,2.454361],[-7.466725,2.391560],[-8.918834,-5.122899],[-1.446560,-4.637181],[8.805841,3.178629],[2.119256,-2.628804],[6.969595,1.923102],[4.425631,-4.072591],[-4.827144,-2.246116],[0.468575,-7.805316],[3.513364,0.162736],[4.612793,-6.974760],[-5.599603,-8.413495],[5.081213,7.520880],[-9.307778,-2.231171],[3.866776,-2.293289],[8.289831,-5.199244],[-2.195565,-3.803169],[4.315071,3.067243],[8.597193,-7.375643],[6.155926,6.811025],[1.686288,8.606827],[-3.555533,9.290551],[-9.587341,4.368674],[5.767063,-1.898728],[-6.357049,3.380547],[-7.841478,-1.911359],[-1.425241,2.853666],[-7.240288,9.209489],[2.703482,5.221369],[-8.274976,-8.919348],[-0.570114,-7.345062],[2.883738,6.445631],[-9.367045,-5.089506],[-1.524165,-7.421168],[4.183916,-3.424305],[2.787303,2.207736],[0.613159,-5.761134],[-2.073257,-1.935715],[-6.014226,-8.086869],[-7.315895,-4.701150],[-5.708161,8.665122],[0.167576,2.914827],[-9.144512,-4.047107],[4.031093,-7.704262],[5.722638,4.029545],[4.771937,-1.692242],[-3.401771,-1.146561],[0.479565,1.384282],[5.055433,-7.651049],[9.006190,0.397392],[4.408607,3.600425],[9.484156,8.146116],[-6.185278,-7.000158],[7.551583,1.310571],[3.631995,-1.028103],[-2.102840,-9.064264],[-0.765703,5.416567],[4.356692,9.025227],[-3.587898,4.913413],[9.698724,-4.748143],[9.506210,6.553547],[-7.008643,0.696234],[-1.148085,-0.825056],[3.643862,-0.209626],[7.010214,7.421280],[-4.289670,9.886967],[4.040897,0.875069],[-6.554105,-2.048846],[-6.694586,-5.863022],[9.496029,8.800805],[8.590073,-1.842548],[-0.440680,-1.375750],[-4.673278,-9.331526],[7.723092,-2.003772],[3.654955,7.524437],[7.568622,3.057642],[3.966165,-2.030769],[4.528578,5.654220],[0.948541,-8.979423],[-5.522438,9.192958],[-5.270774,-7.664765],[-5.917931,3.850936],[-7.036135,3.076731],[-1.668702,7.303756],[-5.072763,-4.615840],[9.555629,-8.774590],[-0.480529,5.020948],[5.158359,8.538138],[-7.506012,9.712967],[-4.716239,-8.393730],[5.954896,0.126246],[4.508058,-5.612642],[-5.725820,7.825798],[-5.923118,1.020500],[-8.476929,4.452606],[8.808042,-1.215702],[-8.299340,-8.369905],[-1.361546,4.582686],[-6.395677,0.675451],[-3.159553,0.065275],[2.345819,-5.243005],[-6.938345,-5.898754],[-0.153401,5.123719],[-7.356675,-5.730912],[6.398314,-3.105847],[9.473753,-5.772033],[-2.348062,2.591248],[4.111507,2.025940],[-6.722838,-7.934229],[3.961100,0.987629],[-2.829458,-1.980297],[-5.503056,-1.706203],[0.606594,9.469625],[-3.591914,2.595566],[-6.378799,7.209012],[8.942120,-7.206698],[8.907028,6.502136],[0.763178,-2.874676],[9.609567,-8.597986],[7.385054,6.452756],[9.033425,-4.470547],[-7.300628,-4.536811],[-5.618419,-4.177288],[1.869175,9.170992],[3.055477,2.923436],[-8.824280,9.909019],[-2.135511,8.467001],[-7.512136,3.712522],[-4.394734,9.747082],[3.680288,1.544914],[-0.890900,3.171641],[-6.108361,-4.006147],[9.918504,-0.777463],[4.688948,5.255545],[6.966701,-7.728715],[-8.334779,-4.644309],[7.609043,7.453056],[3.658925,-0.772030],[2.671511,9.043682],[6.127698,6.794467],[-7.546333,-2.741734],[3.688758,2.820679],[-0.015001,-7.812811],[6.382561,1.504079],[9.447571,9.502931],[8.769437,-8.170405],[-4.222552,-0.969650],[1.495267,-6.223119],[3.286171,5.931891],[6.346904,-8.145156],[-8.585439,-8.612954],[7.676580,-5.544420],[-2.438097,0.925461],[-5.259465,-3.783332],[-2.607632,-3.522831],[1.776428,7.422153],[3.455834,4.711484],[5.864365,-8.527282],[4.188202,-4.615470],[1.066862,4.938181],[-0.562882,8.269570],[-7.188322,0.589078],[2.510209,-2.276441],[7.885828,1.434043],[-8.264223,7.254382],[-9.391632,-7.612149],[-5.219184,-0.229935],[2.405357,7.806788],[9.748547,-4.956903],[7.881640,-9.481573],[2.316295,1.324515],[-2.710893,4.725714],[8.885435,-0.940162],[0.776026,0.774268],[5.617808,4.755660],[7.351841,2.414396],[0.481664,-8.972600],[6.149520,7.535098],[7.799835,4.435347],[-0.820801,5.268270],[8.663826,8.778979],[-0.715138,-6.578688],[1.070281,-6.935242],[6.660024,6.418606],[-4.038146,8.318338],[-9.123147,-2.893622],[1.423988,5.705389],[2.813056,3.828827],[-5.532303,8.776313],[-9.661727,9.300399],[6.758547,-4.993412],[4.713769,4.578459],[-5.958905,1.377720],[-0.295364,-2.676484],[-4.859994,6.185735],[-5.447977,-8.836219],[3.026825,6.575940],[-7.678614,7.031565],[3.667215,-4.087571],[0.439483,-6.190170],[-2.871406,-6.671210],[5.109120,-5.939275],[-1.691260,1.554981],[-5.787730,-5.293835],[0.290212,6.581238],[-3.132824,6.789326],[8.886996,-6.947762],[-7.620592,-6.740927],[-7.801684,7.488211],[5.957023,4.479215],[4.276361,5.321257],[0.928318,7.122761],[5.832043,-0.192117],[-7.885878,0.818694],[6.344467,-1.392970],[-1.503856,-0.293735],[-6.037168,1.376501],[0.812646,6.492048],[2.769284,-8.632223],[-0.343509,-1.511402],[8.784147,8.624413],[-4.744057,0.327314],[-4.212733,2.270994],[-3.366378,-3.917205],[2.602784,-7.299471],[-9.457686,1.099330],[-8.149141,-1.339931],[-6.651130,7.504841],[4.275246,5.558512],[1.071825,4.186691],[-2.479305,6.269902],[-5.968349,4.498353],[8.271410,-5.505988],[-9.860706,7.598389],[-4.104268,1.941384],[-5.191870,-1.412698],[-7.792251,-7.978949]], dtype = "float32")#candidate|7220|(539, 2)|const|float32
call_7217 = relay.TupleGetItem(func_3011_call(relay.reshape(const_7218.astype('int32'), [13, 9, 15]), relay.reshape(const_7218.astype('int32'), [13, 9, 15]), relay.reshape(const_7219.astype('float64'), []), relay.reshape(const_7220.astype('float32'), [539, 2]), ), 6)
call_7221 = relay.TupleGetItem(func_3017_call(relay.reshape(const_7218.astype('int32'), [13, 9, 15]), relay.reshape(const_7218.astype('int32'), [13, 9, 15]), relay.reshape(const_7219.astype('float64'), []), relay.reshape(const_7220.astype('float32'), [539, 2]), ), 6)
const_7223 = relay.const([[-9.758580,-5.164609],[-0.398952,-6.083140],[-6.221778,-7.829794],[-0.808320,-1.693581],[-3.598653,-4.646450],[-3.353770,3.284417],[1.909808,4.380847],[-1.925765,-8.606219],[-9.509474,1.222434],[0.721459,3.119129],[-1.864667,6.345005],[7.865356,-2.056233],[1.297015,2.733885],[-0.298496,-6.359130],[8.797006,7.337848],[-4.789987,5.567560],[-3.228580,0.283365],[-3.428315,5.127841],[4.010831,7.112781],[9.021392,-4.273364],[9.623338,-3.601152],[-9.550227,3.862916],[-6.593470,-5.696687],[-1.144346,-6.733509],[-5.837246,-7.437198],[-1.688125,-6.508926],[5.128211,-6.354264],[3.060062,5.592449],[-4.236208,-7.534406],[-6.768961,4.466364],[-9.488287,7.625747],[7.871867,2.590364],[-5.372850,-8.443892],[-8.621306,-5.440840],[6.479616,-1.799897],[3.789575,4.544933],[2.075310,-5.743650],[7.497604,2.384640],[1.150905,1.623939],[-8.470755,6.350595],[-2.109785,8.885626],[-9.572751,-1.519766],[5.201663,-5.434027],[-8.562079,-6.350827],[-5.295780,6.248284],[-2.258396,8.764644],[-8.524572,-8.320608],[-1.309980,1.292114],[-0.624722,0.116181],[-2.372817,-5.825390],[-3.034370,-9.401455],[-0.879020,-2.151140],[9.360563,-9.321988],[-3.517189,-7.247541],[-3.218427,8.683345],[-3.114501,-2.640728],[-6.680773,2.206106],[5.339184,-9.817804],[-6.082781,6.533960],[9.843675,9.334951],[1.187857,0.294539],[-2.812038,-3.570658],[-1.680962,5.521946],[-9.460505,1.674136],[8.317725,0.565835],[-4.525523,-8.165499],[-1.067198,2.096190],[9.333959,8.058199],[5.376313,0.876643],[-2.124313,-0.206099],[4.071562,8.830145],[6.397891,-6.006552],[8.826726,-7.814927],[1.913334,-0.229867],[-1.500604,-0.287562],[1.291775,-9.871265],[-0.862249,-4.950036],[-0.176494,3.721969],[-8.921983,5.106175],[-8.776053,-9.053004],[-6.433336,6.233674],[8.562607,9.767804],[-7.729256,5.567296],[3.754037,-8.485515],[4.853087,-3.616988],[2.070581,-8.880261],[-0.826308,-2.138272],[6.922838,-5.523419],[3.045163,-1.630121],[-7.295017,-6.216617],[0.794954,-9.334998],[3.571635,-3.807989],[6.603636,-7.366099],[-0.459902,-4.511260],[7.895246,8.738438],[0.032229,-9.684423],[-7.572902,9.229835],[-1.533590,2.339390],[1.501511,3.822739],[-7.036289,-9.053795],[-6.630633,-4.096010],[2.126117,-2.830375],[4.798086,1.560845],[7.832778,3.838738],[-0.495929,-4.454423],[-5.093742,-2.808000],[8.464707,5.129307],[6.752465,1.960550],[-7.946962,7.598316],[-3.352858,-1.472982],[9.677934,-7.306072],[0.884532,-0.519775],[-6.120989,3.966462],[-0.692565,3.967022],[0.187543,1.849524],[-3.748343,-9.474494],[1.847942,-7.142193],[6.993723,7.224645],[-0.077571,-3.209361],[-1.882079,-1.172494],[1.420833,1.525023],[6.669582,-4.795078],[7.972861,-6.568374],[-4.766406,0.015553],[-2.636389,-1.629646],[-9.486888,-7.359304],[5.546410,9.852700],[-9.171408,8.612111],[1.970631,7.366898],[7.143651,6.017813],[-6.402805,-9.566752],[-2.056674,-0.156929],[2.687252,1.479283],[-0.425958,-4.361561],[-3.537252,5.263581],[9.484030,-5.910707],[-2.580545,-4.287073],[5.276516,-2.124958],[9.798260,8.619310],[-8.132872,-9.030835],[-9.912003,-9.764701],[5.311974,-4.595334],[-9.304275,-1.357409],[-0.711765,-1.274151],[7.077797,-6.339144],[-6.023299,-9.101621],[3.721130,8.968419],[8.331342,7.647377],[7.417518,-8.107345],[2.149548,-7.760036],[0.640053,6.934563],[-8.093373,-5.437437],[-2.084623,-1.284731],[7.574759,-7.878571],[-6.952301,6.668372],[4.157343,6.518343],[-3.805891,-7.637234],[1.168641,0.958215],[8.631957,-6.760827],[-1.295429,4.092986],[-0.821097,0.151228],[-5.122202,-5.332341],[0.029609,-8.029974],[9.003794,-1.362785],[-8.850838,6.783577],[7.833017,-3.476561],[0.812320,-5.558178],[1.972344,6.729332],[-8.658619,5.233941],[-2.795428,8.587942],[3.216171,0.016670],[-0.984566,-7.390858],[-8.309388,-6.619321],[-3.177582,-6.456853],[0.997776,7.598998],[5.152853,-9.315652],[0.165218,-2.083159],[-6.205231,-0.406702],[-9.878521,-4.053335],[7.482806,8.751763],[-0.373327,0.698855],[-4.891422,-5.580641],[9.312799,-7.450926],[-3.314745,-4.622998],[-9.213070,-4.383022],[-3.993785,5.828269],[-8.969493,4.530873],[-7.197814,2.150771],[-2.772301,-0.283291],[-9.777209,5.483284],[-1.023124,-4.294155],[-1.081353,5.770196],[-7.444914,0.713878],[-9.532216,6.728180],[-6.727843,-4.260886],[8.011188,0.031968],[-8.481533,-2.807964],[2.259930,-3.441575],[2.348056,-1.523726],[0.708370,-1.807090],[2.289646,8.685579],[-6.909370,-4.331650],[0.464810,-5.661466],[-6.737805,2.566991],[9.387430,-5.733262],[5.906546,-5.449075],[3.982035,-7.569678],[-3.979481,-1.940294],[6.634242,8.449213],[-1.032900,-7.203080],[-2.419207,-9.332391],[7.109941,-7.477321],[4.100321,1.576421],[1.450307,4.225968],[-9.601352,-3.174578],[9.245683,6.515307],[-2.332566,-1.397626],[-9.621740,-2.645010],[5.161250,-7.083980],[-8.070831,0.335429],[5.132347,-7.407345],[8.278536,1.929817],[-1.220642,-7.293084],[9.508739,-7.642168],[5.157342,-5.519348],[2.947806,-5.770823],[-7.433388,3.110580],[3.562848,-0.516216],[8.380224,-8.428578],[3.952186,0.028498],[4.429437,7.651057],[4.084834,-1.002967],[-0.076506,-1.714055],[1.761650,9.118585],[9.807941,2.521456],[9.595298,0.836250],[-7.772636,0.186167],[-5.093376,0.376781],[4.583425,-4.184152],[-9.016502,3.284677],[6.697745,3.486655],[-0.148246,-4.937657],[4.961536,1.110538],[-8.896704,-9.713625],[-8.764896,-1.144455],[-4.872384,-9.693725],[-4.145889,-5.841981],[7.514656,7.750057],[0.533714,0.912938],[9.685441,-2.326860],[7.158569,-4.238835],[-5.923450,7.275942],[-3.586258,8.664588],[5.025883,-4.568104],[-7.515129,2.559189],[-8.972462,0.279885],[9.821126,-0.021983],[-6.521901,7.867829],[-4.319800,7.096903],[-9.278672,0.896701],[-3.062471,2.670621],[-0.902580,4.354654],[-5.562639,-6.570452],[-4.393883,0.234013],[-3.093020,-2.774194],[-6.321875,9.435479],[5.795911,2.423934],[3.474682,6.846629],[-8.361035,2.126890],[-4.819643,8.312823],[1.100496,-8.290992],[8.063059,6.503788],[2.400972,1.621564],[-4.917644,-2.237850],[4.478964,5.082025],[-7.543554,4.668794],[-8.786895,3.973345],[1.210611,5.894894],[-1.534341,-9.066881],[6.646970,4.228825],[-1.390880,-3.724627],[6.541341,-1.013758],[3.788476,0.870916],[-2.760995,-5.630651],[-3.843289,-3.837950],[-4.804633,-5.456794],[3.677320,8.347914],[9.107113,4.712731],[4.402952,-4.588312],[-5.905208,0.605895],[-3.203799,9.782987],[2.279551,6.530513],[9.605228,-6.069149],[-8.906540,-8.205183],[7.699262,-0.705208],[-5.425657,-6.034005],[-9.307673,9.963921],[-3.100633,-2.757892],[4.555860,4.750725],[8.385048,-8.267836],[-6.407182,-2.584734],[-1.207161,-7.062367],[-3.484705,-4.418272],[-5.334685,-0.164499],[8.045532,4.078362],[2.890934,-2.581235],[2.747104,9.978486],[1.496389,2.380033],[-6.141144,-6.473424],[-2.169014,1.432821],[9.231646,-9.828148],[-9.462133,-7.956500],[-6.179554,0.159850],[9.804794,-2.135234],[-5.200515,9.025431],[-0.244682,4.113090],[7.016243,7.883653],[7.283885,-4.291089],[-3.630424,-1.182833],[-8.535753,-2.103867],[3.807177,-6.685370],[5.064048,2.948467],[-3.941439,7.007015],[-5.313155,-8.680674],[-2.277668,4.191831],[-3.675384,9.557046],[-0.243391,6.148582],[-9.490422,4.462130],[-1.269077,0.798326],[9.219225,4.823399],[0.460768,-1.210382],[6.191626,7.747993],[-8.430529,0.032264],[7.513523,1.873596],[9.097197,-3.112937],[-8.388907,3.704678],[7.121371,-7.932761],[9.822484,-6.583596],[2.978883,-2.846399],[2.828665,-0.781437],[4.894237,-1.258832],[-4.925967,-3.507432],[2.697322,-6.269126],[5.510366,-8.547151],[-8.377883,2.595445],[-5.476692,-0.483390],[-1.760680,-2.105494],[8.952211,5.064746],[1.086061,5.954156],[8.273840,3.510173],[-4.506236,-7.333611],[7.772337,-0.689912],[2.196265,0.160247],[6.495344,1.394309],[1.286475,-0.070086],[8.732213,6.953446],[6.292818,-1.429974],[-8.390327,8.330721],[7.059188,-5.146640],[-4.967279,-7.694649],[-0.820149,5.802670],[-7.035323,4.902494],[8.854397,-0.604158],[4.150146,4.345360],[-1.659626,3.699436],[6.076806,5.731887],[-2.844972,4.956332],[-8.440225,7.442117],[5.396221,-4.824239],[0.766186,3.034572],[9.677360,4.319822],[5.533190,-2.723203],[4.450699,6.292135],[-6.575385,1.792922],[-8.451700,-0.008803],[7.085733,-3.639099],[-0.510803,-9.165785],[-8.757576,-2.370564],[1.841857,1.003093],[-7.669627,-3.219916],[7.541612,-6.088640],[-0.891530,3.724053],[-2.940854,8.683378],[8.169347,1.927994],[-4.992007,7.730331],[6.027752,0.663495],[-4.399008,-6.269404],[-8.015539,-1.163200],[-6.441011,8.233743],[-2.027134,9.809434],[-2.130304,-2.829180],[-3.498186,-8.502452],[1.311775,-7.122441],[5.501994,7.904417],[-9.653422,1.322580],[-3.472131,-4.789111],[-6.050176,3.854412],[-3.437962,-1.398414],[8.708004,-0.059176],[-3.542840,9.535899],[2.269598,-9.837166],[8.024284,-8.753511],[0.747804,-2.816908],[8.915135,-6.135950],[-6.614350,-6.739534],[4.361341,-3.069143],[-0.033110,-7.664665],[8.076507,-6.183695],[0.393397,5.246195],[9.901694,-4.353014],[8.011659,-6.249580],[-7.379605,4.813050],[3.269086,6.918403],[-3.392528,3.529022],[8.567918,5.864031],[7.035368,0.776084],[-8.206946,6.557410],[-0.653494,7.008578],[-1.931811,-8.192058],[-6.254990,-2.586087],[3.175735,-9.839244],[7.515940,-4.485795],[-3.691452,1.777510],[-4.083349,-7.012837],[8.706178,-8.154619],[-5.150350,-2.253864],[9.856437,6.144234],[-3.747072,1.473380],[4.461450,6.674340],[-8.654281,8.739279],[1.170131,-8.222285],[0.973459,-9.194713],[7.593728,-1.536968],[-6.773539,-7.922347],[2.920751,-4.753096],[8.449696,-0.955172],[6.633225,4.500951],[4.888984,-4.626852],[7.927838,-6.307005],[-3.215106,-2.496090],[1.749616,7.383590],[4.532472,-5.232919],[5.521205,-1.110828],[-7.603353,5.923798],[-8.194409,6.906267],[-9.017838,-9.229792],[9.262653,-7.245703],[7.610034,3.398470],[-1.089527,5.652179],[-4.062607,-1.762796],[-9.390410,8.242409],[3.619984,-4.882358],[0.320378,-9.424773],[-2.524983,-3.373377],[2.964114,0.165531],[4.467138,-1.911775],[9.836950,2.508486],[5.447299,4.589886],[-3.217920,-4.609856],[4.224365,1.411468],[4.461461,-6.444764],[-9.800019,2.117640],[-1.763588,-4.012604],[8.655422,8.640228],[-0.974610,-3.785408],[-7.027722,0.012619],[-8.558009,7.449876],[7.215262,7.938488],[-1.560243,-5.669071],[-9.040020,-0.687280],[-4.345559,-8.140421],[6.723644,-8.232579],[-4.110547,1.700685],[-0.726126,1.216635],[0.034002,-0.032954],[7.408024,4.131468],[-2.802352,-0.424854],[2.842315,6.113082],[0.546546,2.319452],[7.833800,5.997204],[-7.713955,-9.912795],[2.454931,-3.438093],[-5.393871,2.437281],[-5.163831,0.072989],[-8.442439,8.827142],[8.767867,8.756502],[-3.164529,4.989929],[-9.518585,3.539905],[-6.346202,4.396791],[1.554793,-4.825658],[1.936336,9.500376],[-7.790094,-8.044336],[-1.730698,-8.062571],[-6.911857,-5.883438],[-4.638663,-2.453088],[-6.221929,9.258874],[7.904641,4.878253],[-8.577750,0.883656],[8.061088,9.528052],[4.765681,7.802024],[2.753563,5.528510],[9.341307,-5.274558],[-8.272593,3.560401],[-9.347397,6.552647],[9.475103,-6.528083],[-1.122004,0.431697],[-7.882185,2.775984],[-3.986346,2.750698],[-7.127151,0.632317],[5.516818,5.880761],[-8.605465,-0.770040],[6.753371,0.673483],[-9.239270,4.147549],[7.660313,6.354724],[8.647902,2.500470],[6.299478,-3.843670],[-2.589537,5.672015],[8.088441,7.158585],[7.736060,3.523394],[6.363187,-2.658583],[-6.562541,-3.000754],[-2.024731,-4.724628],[-3.988725,-7.757998],[-5.934577,3.239299],[-4.646267,-1.974124],[6.011538,-7.399810],[-5.741463,9.042439],[-9.272590,6.807953],[4.643681,-0.441381],[0.438184,-8.924512],[-6.604976,3.921772],[0.234157,2.074655],[-7.857599,0.147301],[4.956111,-1.099261],[3.113632,9.220769],[0.524825,8.511107],[-9.602285,1.057071],[-5.309505,7.693507],[-9.610528,4.642355]], dtype = "float32")#candidate|7223|(539, 2)|const|float32
bop_7224 = relay.left_shift(const_7220.astype('uint16'), relay.reshape(const_7223.astype('uint16'), relay.shape_of(const_7220))) # shape=(539, 2)
output = relay.Tuple([bop_7209,call_7217,const_7218,const_7219,bop_7224,])
output2 = relay.Tuple([bop_7209,call_7221,const_7218,const_7219,bop_7224,])
func_7235 = relay.Function([var_7207,var_7208,], output)
mod['func_7235'] = func_7235
mod = relay.transform.InferType()(mod)
mutated_mod['func_7235'] = func_7235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7235_call = mutated_mod.get_global_var('func_7235')
var_7237 = relay.var("var_7237", dtype = "bool", shape = (16, 12, 13))#candidate|7237|(16, 12, 13)|var|bool
var_7238 = relay.var("var_7238", dtype = "bool", shape = (16, 12, 13))#candidate|7238|(16, 12, 13)|var|bool
call_7236 = func_7235_call(var_7237,var_7238,)
output = call_7236
func_7239 = relay.Function([var_7237,var_7238,], output)
mutated_mod['func_7239'] = func_7239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4042_call = mod.get_global_var('func_4042')
func_4044_call = mutated_mod.get_global_var('func_4044')
call_7250 = func_4042_call()
call_7251 = func_4042_call()
uop_7254 = relay.log2(call_7250.astype('float32')) # shape=(13, 8, 5)
uop_7256 = relay.log2(call_7251.astype('float32')) # shape=(13, 8, 5)
output = relay.Tuple([uop_7254,])
output2 = relay.Tuple([uop_7256,])
func_7263 = relay.Function([], output)
mod['func_7263'] = func_7263
mod = relay.transform.InferType()(mod)
mutated_mod['func_7263'] = func_7263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7263_call = mutated_mod.get_global_var('func_7263')
call_7264 = func_7263_call()
output = call_7264
func_7265 = relay.Function([], output)
mutated_mod['func_7265'] = func_7265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4807_call = mod.get_global_var('func_4807')
func_4809_call = mutated_mod.get_global_var('func_4809')
call_7396 = func_4807_call()
call_7397 = func_4807_call()
output = call_7396
output2 = call_7397
func_7400 = relay.Function([], output)
mod['func_7400'] = func_7400
mod = relay.transform.InferType()(mod)
output = func_7400()
func_7401 = relay.Function([], output)
mutated_mod['func_7401'] = func_7401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7402 = relay.var("var_7402", dtype = "float64", shape = (7, 6, 5))#candidate|7402|(7, 6, 5)|var|float64
uop_7403 = relay.asinh(var_7402.astype('float64')) # shape=(7, 6, 5)
func_4130_call = mod.get_global_var('func_4130')
func_4131_call = mutated_mod.get_global_var('func_4131')
call_7414 = relay.TupleGetItem(func_4130_call(), 1)
call_7415 = relay.TupleGetItem(func_4131_call(), 1)
func_1015_call = mod.get_global_var('func_1015')
func_1018_call = mutated_mod.get_global_var('func_1018')
var_7417 = relay.var("var_7417", dtype = "bool", shape = (784, 1))#candidate|7417|(784, 1)|var|bool
var_7418 = relay.var("var_7418", dtype = "float64", shape = (10,))#candidate|7418|(10,)|var|float64
call_7416 = relay.TupleGetItem(func_1015_call(relay.reshape(var_7417.astype('bool'), [8, 14, 7]), relay.reshape(var_7418.astype('float64'), [1, 10]), ), 5)
call_7419 = relay.TupleGetItem(func_1018_call(relay.reshape(var_7417.astype('bool'), [8, 14, 7]), relay.reshape(var_7418.astype('float64'), [1, 10]), ), 5)
func_4964_call = mod.get_global_var('func_4964')
func_4966_call = mutated_mod.get_global_var('func_4966')
call_7442 = func_4964_call()
call_7443 = func_4964_call()
output = relay.Tuple([uop_7403,call_7414,call_7416,var_7417,var_7418,call_7442,])
output2 = relay.Tuple([uop_7403,call_7415,call_7419,var_7417,var_7418,call_7443,])
func_7454 = relay.Function([var_7402,var_7417,var_7418,], output)
mod['func_7454'] = func_7454
mod = relay.transform.InferType()(mod)
var_7455 = relay.var("var_7455", dtype = "float64", shape = (7, 6, 5))#candidate|7455|(7, 6, 5)|var|float64
var_7456 = relay.var("var_7456", dtype = "bool", shape = (784, 1))#candidate|7456|(784, 1)|var|bool
var_7457 = relay.var("var_7457", dtype = "float64", shape = (10,))#candidate|7457|(10,)|var|float64
output = func_7454(var_7455,var_7456,var_7457,)
func_7458 = relay.Function([var_7455,var_7456,var_7457,], output)
mutated_mod['func_7458'] = func_7458
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7460 = relay.const(10, dtype = "int16")#candidate|7460|()|const|int16
const_7461 = relay.const([[[-7],[10],[6],[1],[1],[-4],[2],[8]],[[8],[-4],[-9],[8],[-3],[-3],[7],[9]],[[-6],[-9],[6],[4],[2],[2],[1],[-9]],[[-6],[-7],[-5],[9],[3],[3],[1],[5]],[[-2],[10],[6],[5],[3],[3],[-7],[-4]],[[5],[-8],[-10],[8],[-8],[-5],[-4],[6]],[[7],[-4],[-1],[1],[6],[9],[6],[6]],[[7],[-2],[10],[10],[3],[-7],[-6],[-3]],[[-1],[3],[5],[6],[-10],[5],[-8],[-7]],[[-5],[-2],[1],[5],[5],[-10],[-4],[-1]],[[-1],[-7],[-10],[10],[-9],[6],[-5],[4]],[[4],[-7],[6],[-6],[3],[-2],[-1],[4]],[[-9],[10],[5],[9],[-4],[3],[10],[3]],[[1],[-6],[1],[10],[9],[1],[-4],[4]],[[5],[5],[4],[5],[-9],[-1],[-6],[-2]],[[2],[6],[3],[7],[7],[-4],[2],[-6]]], dtype = "int16")#candidate|7461|(16, 8, 1)|const|int16
bop_7462 = relay.bitwise_and(const_7460.astype('int16'), const_7461.astype('int16')) # shape=(16, 8, 1)
output = bop_7462
output2 = bop_7462
func_7466 = relay.Function([], output)
mod['func_7466'] = func_7466
mod = relay.transform.InferType()(mod)
mutated_mod['func_7466'] = func_7466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7466_call = mutated_mod.get_global_var('func_7466')
call_7467 = func_7466_call()
output = call_7467
func_7468 = relay.Function([], output)
mutated_mod['func_7468'] = func_7468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mod.get_global_var('func_5887')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_7482 = func_5887_call()
call_7483 = func_5887_call()
func_3214_call = mod.get_global_var('func_3214')
func_3216_call = mutated_mod.get_global_var('func_3216')
var_7510 = relay.var("var_7510", dtype = "float64", shape = (1485,))#candidate|7510|(1485,)|var|float64
call_7509 = relay.TupleGetItem(func_3214_call(relay.reshape(var_7510.astype('float64'), [9, 11, 15])), 0)
call_7511 = relay.TupleGetItem(func_3216_call(relay.reshape(var_7510.astype('float64'), [9, 11, 15])), 0)
func_3691_call = mod.get_global_var('func_3691')
func_3693_call = mutated_mod.get_global_var('func_3693')
call_7529 = relay.TupleGetItem(func_3691_call(), 0)
call_7530 = relay.TupleGetItem(func_3693_call(), 0)
func_7466_call = mod.get_global_var('func_7466')
func_7468_call = mutated_mod.get_global_var('func_7468')
call_7532 = func_7466_call()
call_7533 = func_7466_call()
uop_7535 = relay.sinh(call_7532.astype('float64')) # shape=(16, 8, 1)
uop_7537 = relay.sinh(call_7533.astype('float64')) # shape=(16, 8, 1)
func_5262_call = mod.get_global_var('func_5262')
func_5267_call = mutated_mod.get_global_var('func_5267')
var_7542 = relay.var("var_7542", dtype = "float32", shape = (320,))#candidate|7542|(320,)|var|float32
const_7543 = relay.const([False,False,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,True,True,False,True], dtype = "bool")#candidate|7543|(784,)|const|bool
const_7544 = relay.const([7,4,7,1,-1,5,-6,-5,-3,2,-10,-3,-10,-9,3,9,7,-2,-5,-4,-7,6,2,-4,8,1,2,2,-4,-9,3,9,-1,-2,-7,3,-5,-7,-2,-4,-9,-8,-10,3,1,10,-9,-4,3,7,2,4,-2,-4,4,-7,-4,3,5,-5,7,-4,6,9,4,9,-7,-3,4,3,7,10,-3,5,-9,8,-8,4,-10,3,-6,-2,-5,-10,-4,6,3,3,9,7,10,3,10,4,-8,-4,1,-7,-10,-7,2,-6,-9,2,-6,-5,-4,6,4,4,9,8,3,-8,4,9,-7,4,3,6,-5,-8,9,-5,-6,-7,-6,-4,-10,-5,-8,-4,-9,-2,4,-4,1,10,-9,-5,3,-9,6,-9,6,3,-10,8,5,2], dtype = "uint64")#candidate|7544|(150,)|const|uint64
var_7545 = relay.var("var_7545", dtype = "float32", shape = (1078,))#candidate|7545|(1078,)|var|float32
call_7541 = relay.TupleGetItem(func_5262_call(relay.reshape(var_7542.astype('float32'), [320,]), relay.reshape(const_7543.astype('bool'), [784,]), relay.reshape(const_7544.astype('uint64'), [150, 1]), relay.reshape(var_7545.astype('float32'), [1078,]), ), 5)
call_7546 = relay.TupleGetItem(func_5267_call(relay.reshape(var_7542.astype('float32'), [320,]), relay.reshape(const_7543.astype('bool'), [784,]), relay.reshape(const_7544.astype('uint64'), [150, 1]), relay.reshape(var_7545.astype('float32'), [1078,]), ), 5)
bop_7551 = relay.subtract(uop_7535.astype('uint8'), call_7529.astype('uint8')) # shape=(16, 8, 1)
bop_7554 = relay.subtract(uop_7537.astype('uint8'), call_7530.astype('uint8')) # shape=(16, 8, 1)
output = relay.Tuple([call_7482,call_7509,var_7510,call_7541,var_7542,const_7543,const_7544,var_7545,bop_7551,])
output2 = relay.Tuple([call_7483,call_7511,var_7510,call_7546,var_7542,const_7543,const_7544,var_7545,bop_7554,])
func_7561 = relay.Function([var_7510,var_7542,var_7545,], output)
mod['func_7561'] = func_7561
mod = relay.transform.InferType()(mod)
mutated_mod['func_7561'] = func_7561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7561_call = mutated_mod.get_global_var('func_7561')
var_7563 = relay.var("var_7563", dtype = "float64", shape = (1485,))#candidate|7563|(1485,)|var|float64
var_7564 = relay.var("var_7564", dtype = "float32", shape = (320,))#candidate|7564|(320,)|var|float32
var_7565 = relay.var("var_7565", dtype = "float32", shape = (1078,))#candidate|7565|(1078,)|var|float32
call_7562 = func_7561_call(var_7563,var_7564,var_7565,)
output = call_7562
func_7566 = relay.Function([var_7563,var_7564,var_7565,], output)
mutated_mod['func_7566'] = func_7566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5765_call = mod.get_global_var('func_5765')
func_5766_call = mutated_mod.get_global_var('func_5766')
call_7573 = func_5765_call()
call_7574 = func_5765_call()
output = call_7573
output2 = call_7574
func_7578 = relay.Function([], output)
mod['func_7578'] = func_7578
mod = relay.transform.InferType()(mod)
mutated_mod['func_7578'] = func_7578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7578_call = mutated_mod.get_global_var('func_7578')
call_7579 = func_7578_call()
output = call_7579
func_7580 = relay.Function([], output)
mutated_mod['func_7580'] = func_7580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5185_call = mod.get_global_var('func_5185')
func_5186_call = mutated_mod.get_global_var('func_5186')
call_7603 = func_5185_call()
call_7604 = func_5185_call()
uop_7628 = relay.asinh(call_7603.astype('float64')) # shape=(16, 6, 12)
uop_7630 = relay.asinh(call_7604.astype('float64')) # shape=(16, 6, 12)
uop_7640 = relay.sin(uop_7628.astype('float64')) # shape=(16, 6, 12)
uop_7642 = relay.sin(uop_7630.astype('float64')) # shape=(16, 6, 12)
func_7148_call = mod.get_global_var('func_7148')
func_7150_call = mutated_mod.get_global_var('func_7150')
call_7648 = relay.TupleGetItem(func_7148_call(), 0)
call_7649 = relay.TupleGetItem(func_7150_call(), 0)
output = relay.Tuple([uop_7640,call_7648,])
output2 = relay.Tuple([uop_7642,call_7649,])
func_7660 = relay.Function([], output)
mod['func_7660'] = func_7660
mod = relay.transform.InferType()(mod)
output = func_7660()
func_7661 = relay.Function([], output)
mutated_mod['func_7661'] = func_7661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mod.get_global_var('func_5887')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_7664 = func_5887_call()
call_7665 = func_5887_call()
func_1743_call = mod.get_global_var('func_1743')
func_1748_call = mutated_mod.get_global_var('func_1748')
var_7676 = relay.var("var_7676", dtype = "float32", shape = (320, 1))#candidate|7676|(320, 1)|var|float32
const_7677 = relay.const([True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,False,False,False,True,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False], dtype = "bool")#candidate|7677|(784,)|const|bool
const_7678 = relay.const([[-3.026685],[-4.261870],[5.524819],[-9.810523],[-5.628096],[7.253716],[-1.454293],[2.717414],[-1.329981],[1.049115],[9.243113],[-4.978279],[-5.009742],[-8.648860],[3.342908],[-5.516281],[-7.314689],[6.791471],[-8.372463],[8.837696],[8.714766],[6.065334],[2.591829],[-3.583492],[6.111554],[2.069289],[9.745030],[-3.945572],[-9.874422],[-9.092128],[-3.300950],[3.024721],[-5.849097],[3.107496],[-3.971776],[4.581061],[8.745150],[4.443713],[1.187646],[-4.013183],[-3.088977],[8.246003],[9.858716],[1.864354],[-9.416834],[0.151748],[-6.485603],[-8.375578],[-5.442289],[0.085676],[-3.673056],[-8.862065],[-5.043993],[-9.055344],[1.141490],[-8.551338],[0.981773],[7.976365],[2.969599],[-9.238969],[9.423712],[9.048922],[-8.793097],[-5.400084],[3.147529],[-0.506637],[-5.175118],[5.362663],[-1.857060],[-6.316546],[-2.972797],[4.273623],[-5.210876],[-6.716988],[1.714554],[7.458179],[-3.683110],[0.199072],[-7.713474],[4.175252],[4.727555],[-4.746972],[-4.433206],[-3.764700],[3.932443],[-3.559938],[-0.924690],[7.769330],[6.208400],[-9.603411],[-2.402096],[0.352901],[-2.930168],[-2.410680],[-7.255613],[-5.692784],[9.502441],[4.945996],[-9.192495],[-8.299872],[-3.178482],[9.063141],[3.304165],[8.923603],[-5.777097],[7.520968],[3.184366],[-6.520731],[2.822520],[3.323293],[-9.803484],[-6.737976],[-8.925606],[-1.289091],[4.486370],[-5.874292],[2.198060],[-9.281554],[2.580878],[8.039770],[-2.488165],[-0.146933],[5.778411],[6.374711],[1.476150],[-8.989855],[2.933690],[3.893275],[-5.179471],[-9.848810],[5.894416],[4.557000],[7.177583],[9.044065],[5.839880],[-3.979894],[8.215257],[-0.985016],[8.593648],[-3.134158],[-2.132240],[5.767703],[5.798168],[8.132817],[-1.326215],[1.869279],[-7.878834],[-6.883487],[2.258827],[-8.474398],[8.826030],[-8.753887],[-6.233421],[6.170414],[-6.272534],[-6.823152],[5.415718],[-9.372280],[5.813897],[-2.203560],[-9.463696],[5.055441],[3.997383],[-8.466578],[1.117174],[3.191451],[8.472385],[6.071967],[-8.467151],[-5.313412],[-9.002586],[9.694214],[-6.027318],[-4.550189],[1.944463],[1.876850],[2.817352],[1.087303],[-3.640461],[5.629431],[-6.738405],[-5.906514],[-3.183037],[9.858484],[6.954587],[7.166301],[8.785424],[0.699239],[7.010369],[7.777585],[-2.558436],[-4.256736],[9.371258],[-2.020033],[5.644380],[2.447092],[1.435087],[0.823632],[3.600829],[-3.541516],[-8.634557],[9.362759],[2.585460],[3.794109],[-5.949531],[4.051271],[0.614308],[-3.972639],[7.523827],[5.033895],[-8.943858],[9.408990],[-9.363259],[0.071438],[3.519195],[-6.692105],[-2.619475],[7.805874],[-3.135213],[-4.176254],[6.095423],[-0.944893],[2.509287],[7.234666],[1.544604],[0.341306],[8.604926],[9.950903],[8.473505],[-2.403954],[1.194764],[6.983274],[-3.204834],[3.762066],[0.564020],[5.836011],[8.764192],[-6.526828],[1.560382],[-1.479291],[-9.107899],[-9.213667],[-7.682391],[0.961475],[6.048487],[-7.297657],[7.634950],[-0.186421],[2.690748],[-6.299323],[0.451818],[6.137282],[9.866952],[0.334235],[-6.629379],[-7.907613],[7.736058],[-8.192629],[-0.080906],[5.115421],[2.945521],[-6.819844],[8.218468],[-5.623526],[-7.817502],[-0.240597],[1.352218],[8.711113],[9.823721],[5.236733],[-5.166294],[-4.544355],[-3.846473],[3.347260],[-0.864911],[-5.012641],[-1.922665],[-3.718311],[1.267886],[-0.257250],[-3.835995],[9.379946],[3.413955],[-5.378309],[3.176689],[-7.166998],[5.853844],[0.748849],[3.487214],[9.908184],[-4.758264],[-7.546154],[-5.799346],[-0.527729],[8.887379],[-8.449870],[9.305000],[2.970310],[-6.137821],[8.049426],[6.523227],[6.983594],[-2.390914],[4.616727],[6.038609],[-1.697312],[-2.180669],[-0.417132],[7.228674],[5.183222],[-6.091388],[-9.920652],[7.089171],[-7.452674],[-5.303685],[-8.767080],[8.938173],[-2.262579],[-5.301562],[7.182800],[-5.703089],[5.825269],[-2.060730],[-7.066165],[7.111550],[6.955316],[7.947068],[0.129052],[4.027557],[-1.115805],[-6.092868],[-6.999158],[-7.708157],[9.933989],[-1.915723],[-3.631130],[-3.013559],[6.761974],[4.502613],[4.904881],[1.780925],[-5.131946],[-7.785260],[-9.867710],[0.982713],[2.910846],[7.383122],[4.623884],[5.419961],[-5.142863],[-9.250505],[-0.761602],[4.866704],[6.789798],[9.884687],[1.757229],[1.472094],[3.719974],[1.263805],[-9.124986],[-1.893290],[-5.138580],[2.580006],[8.553546],[1.172756],[-2.894078],[-4.399188],[-5.318420],[-1.623784],[9.855857],[-9.670373],[4.730049],[-2.662502],[-5.995597],[-5.056946],[8.234056],[-5.475964],[-0.280757],[2.366679],[-2.157068],[1.596631],[-5.207942],[-4.289600],[3.547488],[1.871363],[-8.381119],[8.117006],[1.869476],[9.694863],[-2.865334],[-7.647928],[-0.598357],[9.269922],[-4.870592],[3.126479],[2.108265],[2.848493],[-8.659244],[9.663416],[3.883328],[-0.897544],[-5.295985],[5.106376],[-3.101105],[1.082442],[-4.531145],[-2.479778],[5.293171],[6.786991],[-2.179550],[-5.011720],[6.130180],[-4.561364],[7.295038],[-5.286210],[-3.222356],[4.787790],[-7.786223],[-8.156183],[4.250394],[7.987727],[-4.062794],[-4.386438],[-1.049303],[3.674859],[-4.813559],[-0.868680],[-7.688640],[-2.073763],[-5.882829],[-5.985245],[0.663541],[-3.725345],[-8.681301],[-1.329214],[-0.534097],[6.399375],[6.259847],[-3.041836],[5.762723],[7.223699],[-5.790825],[6.975434],[-4.962306],[-8.074486],[-8.508059],[7.251236],[-2.192188],[-5.057439],[-9.930907],[-2.393942],[-0.326569],[9.330783],[-6.595306],[6.729865],[-1.861511],[6.118230],[0.538158],[4.623386],[-4.529494],[-4.818521],[-9.451027],[3.837496],[4.157799],[0.976649],[-0.653507],[0.723217],[1.086248],[4.152684],[-3.082703],[9.019421],[1.848410],[3.588191],[0.705637],[-9.272258],[7.781934],[8.064946],[-5.932676],[-6.327580],[-2.095049],[0.440490],[-9.940629],[9.773757],[-9.572979],[4.613395],[-1.049396],[8.122064],[9.054105],[-5.027167],[1.447820],[4.530312],[2.580207],[-3.110873],[5.139827],[-0.472651],[-8.315716],[-6.950897],[-1.554436],[-6.363128],[-8.956439],[1.608130],[-8.113849],[-3.119385],[-3.697520],[-2.380400],[0.807365],[-0.289771],[-9.413796],[-3.875897],[3.847890],[2.302292],[7.337086],[-3.840905],[-6.031090],[-3.585143],[-0.109663],[7.048635],[-0.749702],[4.003296],[-1.159691],[-0.567364],[8.787307],[-8.171284],[7.048834],[8.326602],[3.011075],[-4.556888],[-9.628937],[-0.691538],[9.806512],[-0.459883],[2.124033],[-8.742333],[7.863926],[-8.594462],[1.100871],[-5.144495],[4.997571],[1.592882],[4.593425],[2.932374],[2.337660],[2.331404],[9.279012],[-3.242457],[-3.768422],[-7.754077],[-6.739193],[4.906069],[-1.548731],[9.437164],[-7.448205],[-6.677790],[7.125582],[-9.625043],[-5.526259],[8.792382],[2.414152],[-2.997006],[4.589941],[2.381023],[6.993328],[3.890454],[-2.401487],[9.655812],[-1.951325],[0.311954],[-7.196509],[-8.480331],[3.093247],[7.357015],[-4.553095],[3.605416],[8.226007],[-3.121276],[4.449698],[6.282988],[-5.876866],[-1.003702],[1.150711],[2.855326],[9.805080],[4.353595],[0.610809],[3.859270],[-6.388166],[-1.521392],[7.266633],[8.937252],[7.899627],[4.124033],[0.765106],[9.878316],[1.416673],[1.038131],[-4.537163],[-9.185925],[8.725865],[2.089421],[5.200187],[8.275975],[4.307196],[4.147828],[7.911291],[-4.009285],[-8.811802],[9.965807],[-6.865030],[3.422313],[3.953620],[-5.382851],[-1.529314],[3.409143],[-6.374981],[-3.198122],[7.311327],[-2.286153],[3.740402],[2.008646],[-9.526066],[-1.011384],[-2.573259],[-1.245868],[-6.859021],[-6.405823],[-1.084280],[1.355264],[-5.948238],[-4.863138],[-3.920205],[-4.320936],[-6.487592],[-5.531566],[-2.946370],[2.520857],[9.258250],[-9.899804],[7.683126],[-4.950239],[-5.772667],[4.795438],[-1.305361],[0.101959],[5.492474],[5.116111],[-0.012335],[9.912072],[-6.190594],[5.315245],[-6.358386],[1.835976],[-0.433238],[1.413472],[6.827901],[8.630941],[-6.535774],[-9.408216],[-1.239550],[6.540196],[-7.103364],[5.881452],[5.241075],[9.045789],[-7.771130],[-9.851292],[8.597472],[1.602978],[2.584738],[-0.648809],[-0.510669],[1.131018],[-5.439276],[4.928375],[6.457068],[7.883517],[-0.826581],[3.127849],[3.230247],[6.660833],[3.759570],[-2.783793],[-9.825216],[-1.519299],[-5.624798],[-2.172658],[-7.569863],[-0.719776],[5.508174],[1.633152],[-7.826226],[-1.102379],[6.390454],[-0.944626],[8.834710],[0.818602],[-3.914180],[3.559509],[7.592264],[-2.190680],[-7.900835],[-1.930285],[-4.902080],[-4.277049],[8.150987],[3.515427],[-7.747699],[-4.157077],[6.034547],[-5.916672],[-6.451580],[6.508692],[-0.065716],[1.927794],[-2.852906],[2.879625],[-7.257882],[5.317213],[-0.569876],[6.578530],[-6.709133],[-0.594794],[-6.713680],[-7.580864],[8.526249],[-7.722566],[-1.718434],[-4.805344],[2.273458],[-6.628930],[-4.822187],[-7.640016],[-3.286282],[2.411967],[5.728819],[-3.403043],[9.400681],[-1.679346],[7.015851],[5.118480],[-3.880521],[-2.032095],[5.795749],[0.922076],[1.782147],[-7.303498],[6.301235],[-7.709500],[7.878794],[9.031334],[-6.404106],[-9.656855],[-8.398002],[-3.409435],[8.418696],[-9.909747],[2.203077],[3.730286],[-0.953286],[5.144716],[-1.221164],[9.900252],[9.728505],[2.803546],[2.181706],[5.836342],[-9.462423],[-6.157318],[9.878114],[-7.510490],[-5.962888],[-7.133508],[-3.098626],[7.281282],[-3.380469],[-3.167669],[-1.304893],[-2.979074],[7.903374],[-3.201772],[-3.261114],[6.718061],[1.967041],[4.416289],[-4.950023],[-7.681813],[8.438360],[-6.987624],[-9.665046],[-0.353791],[3.188363],[9.455182],[-2.589610],[2.780821],[-2.185173],[-2.113463],[4.102899],[7.832734],[3.867769],[9.812909],[5.629902],[3.448374],[-2.961761],[-8.753841],[0.666593],[8.724477],[7.959498],[-3.144153],[7.825773],[6.662828],[-6.817041],[-3.660528],[0.634390],[-5.868508],[8.295004],[-4.292482],[3.175877],[0.786467],[-8.159712],[-7.668395],[-4.873919],[-4.610227],[3.499230],[1.387789],[-4.449015],[-1.490787],[-6.688188],[-3.925697],[-6.904278],[1.376507],[4.056063],[-1.225076],[1.698505],[-5.473828],[2.774922],[2.693767],[4.087234],[3.786055],[-1.410992],[7.658227],[-3.232180],[6.422522],[-5.067728],[-5.520468],[1.711752],[-0.838234],[-7.754610],[5.947076],[-9.980971],[0.786461],[9.671028],[3.583422],[-9.759544],[0.332753],[3.483784],[2.259256],[-9.158576],[2.774316],[-8.071657],[8.055315],[7.677471],[-5.011268],[2.501352],[4.771647],[-3.880678],[5.976254],[1.286238],[-2.693477],[-9.418775],[-3.370564],[-3.844635],[1.484813],[2.953139],[8.947587],[-9.061363],[9.143622],[6.151080],[5.007656],[3.240661],[-8.266488],[2.990259],[8.586597],[6.157962],[-8.893298],[8.208409],[1.595393],[-1.581050],[-9.721279],[0.571493],[-5.439879],[6.587411],[2.517022],[8.115875],[7.576414],[3.748072],[-3.643884],[3.010280],[8.142239],[5.187087],[-3.533076],[7.046304],[-4.503323],[-4.079035],[1.406042],[7.790255],[-9.336327],[8.194125],[8.281095],[-7.718169],[5.360698],[-2.776362],[7.878248],[-8.549522],[-0.049972],[-5.775080],[-5.513674],[8.840105],[-6.644193],[-0.420820],[2.227890],[9.546270],[-0.728076],[-5.446823],[5.592417],[-7.241233],[-9.187473],[7.980963],[-1.637406],[3.768924],[2.490567],[-5.471902],[9.082110],[1.931301],[7.820408],[2.344208],[3.591976],[-1.963185],[1.780086],[5.334979],[-7.742763],[3.248092],[-8.491367],[-5.854690],[-8.665519],[-7.863960],[1.474424],[-9.741527],[-2.961989],[-6.710219],[6.708518],[-9.254265],[-1.514300],[-5.811966],[6.554508],[2.489947],[4.177923],[1.700178],[9.910858],[-6.478616],[1.458711],[3.012319],[6.242136],[2.197915],[7.412480],[-8.448510],[0.195372],[9.730643],[4.762906],[5.087157],[1.513213],[-8.276572],[4.733421],[8.629147],[6.312639],[4.798144],[-5.109446],[-1.963909],[-4.577461],[1.594100],[2.093319],[-0.964778],[-4.261478],[4.924045],[6.545803],[8.153374],[1.449325],[1.238092],[8.909266],[3.984171],[-3.132196],[6.488451],[8.296376],[5.102320],[0.678155],[-4.398955],[-0.736717],[8.146834],[-0.845074],[-0.074658],[4.884658],[0.604439],[-0.182701],[1.296301],[6.577755],[-8.821981],[4.620909],[-3.098508],[3.732166],[-2.684147],[-8.120161],[-4.165906],[2.439957],[4.287210],[-3.474986],[1.250919],[1.544750],[-1.074822],[2.880231],[7.241557],[-5.541643],[4.918379],[1.039014],[-8.795133],[3.911921],[6.018835],[1.523633],[-4.226677],[9.763834],[2.308409],[7.670895],[7.529489],[8.299666],[-6.423978],[-3.951763],[8.460661],[-1.548941],[-7.629624],[-5.360599],[-6.337384],[-3.400398],[9.847727],[8.713155],[-7.057797],[8.567299],[-6.397155],[3.669749],[-4.038551],[2.158487],[3.481688],[-5.399773],[-4.871565],[4.209566],[5.341995],[-3.649437],[4.405329],[4.423263],[-2.189902],[-7.366849],[-2.051076],[-6.553382],[4.997060],[-5.656248],[-9.418850],[-9.290589],[7.157433],[-6.463816],[5.533688],[7.532372],[6.493943],[7.769648],[-5.760709],[9.762632],[3.990688],[2.662817],[-9.068992],[2.432130],[0.089932],[3.350416],[0.534498],[-2.296303],[-6.170198],[8.381523],[-2.435906],[-6.757983],[-7.816871],[8.680114],[5.277158],[6.419039],[-3.494583],[-5.787447],[7.872761],[-9.352308],[6.602624],[-3.566178],[-1.521305],[-5.374465],[-9.382476],[-3.886448],[-2.053149],[-1.541393],[-8.329443],[0.551484],[7.060998],[4.267352],[3.442557],[-0.408406],[5.884829],[-0.063987],[-5.195811],[1.240428],[1.136245],[5.952074],[4.732342],[-5.975860],[0.563167],[-3.079228],[-2.086042],[9.462190],[6.175284],[-5.423586],[-2.561469],[8.712390],[2.264163],[-3.991228],[-0.486519],[-5.558593],[3.393659],[6.900107],[-1.626497],[-2.834178],[2.401402],[3.921824],[-2.025346],[9.906792],[8.053839],[9.563923],[-6.895705],[8.373558],[-3.044194],[3.143222],[-3.007083],[-0.184905],[2.726155],[-4.958831],[2.528976],[4.518513],[-4.759354],[9.715631],[2.741081],[-6.625099],[-6.875079],[-4.188013],[-0.952748],[-8.502005],[-8.650023],[7.974855],[-0.503199],[-8.366255],[-6.993609],[4.477715],[-2.283041],[-1.187035],[7.334740],[5.182681],[-9.643096],[-5.589315],[8.020781],[7.428715],[-5.440805],[-4.125856],[9.806130],[7.101118],[9.620819],[2.974322],[5.492561],[-8.681178],[-6.956974],[-7.037920],[-7.745447],[-1.162237],[3.662161],[6.129828],[-5.004030],[-3.915738],[-9.857009],[4.298970],[-4.460466],[8.944087],[-7.796159],[7.432731],[4.872572],[2.205316],[-3.829414],[-7.758573],[-5.122943],[8.851588],[9.815462],[-6.404263],[6.898716],[-0.069624],[-5.017477],[0.019038],[6.232911],[-5.806639],[-1.178251],[6.405061],[9.690911],[4.652052],[-9.830002],[-7.943223],[-8.497900],[-6.086042],[-1.370720],[0.958474],[4.681555],[-0.359937],[2.713261],[-1.804442],[-3.904347],[4.597105],[9.030796],[1.012551],[6.959141],[-6.978891],[-2.307403],[-4.402188],[5.007088],[-3.022777],[-5.822604],[9.503949],[5.812919],[8.825398],[-7.685568],[4.048336],[-6.269630],[8.836981],[2.051802],[8.821183],[6.537963],[-5.936210],[-2.535728],[-0.411564],[6.063187],[-6.997150],[8.781213],[7.465423],[4.508697],[8.685059],[8.829595],[-8.566830],[5.476396],[5.270333],[-7.841318],[-8.384181],[-9.596208],[1.921341],[0.300704],[-4.872860],[-9.821474],[-6.556599],[1.099348],[3.684382],[-8.622024],[-6.979225],[2.946726],[-2.974373],[-3.769807],[-5.799635],[-5.459865],[-8.586026],[0.340736],[4.441420],[5.163560],[-8.932737],[-7.337716],[0.765567],[-9.619957],[-0.129681],[-1.243438],[-4.010250],[-3.571196],[-6.528955],[-6.312100],[0.225904],[2.686905],[-9.674455],[-3.794760],[-1.216748],[3.741684],[8.404883],[5.490952],[7.740164],[3.316267],[7.747651],[-7.584302],[-2.079693],[-9.888605],[4.169059],[2.612653],[5.080037],[-0.480832],[5.543805],[9.122690],[5.666736],[-4.293644],[7.745106],[9.673759],[-0.841139],[-3.097640],[-1.597201],[8.047450],[5.943798],[-1.105184],[9.657062],[-1.421307],[-0.843998],[-6.442568],[5.376434],[9.958879],[-4.470791],[5.451906],[-3.742774],[7.371739],[-4.245182],[-0.522986],[-0.398165],[7.702677],[4.767859],[5.249503],[3.078625],[0.727794],[-4.404977],[9.923928],[9.405438],[-1.702289],[1.491402],[8.062431],[6.421803],[-2.521826],[3.906467],[-0.602860],[-9.642128],[3.211793],[4.054897],[-7.903802],[-0.839406],[0.893228],[8.063344],[-7.970744],[2.888612],[0.964599],[9.333811],[-3.094815],[5.092865],[-7.799293],[1.981407],[-6.052652],[-1.195813],[9.319673],[-8.948453],[-2.052380],[0.098930],[-3.611102],[-9.178917],[-4.223039],[6.255854],[-3.702840],[-1.959931],[9.154557],[3.159829],[-8.315206],[6.588456],[0.724812],[1.088958],[0.633791],[-2.100304],[-3.627824],[4.937966],[3.014399],[-9.865464],[-8.679151],[3.834996],[-5.204812],[2.324919],[7.889254],[7.275883],[-7.514817],[-8.878494],[-7.990433],[-4.708355],[-7.412613],[1.783970],[6.739892],[9.770885],[-5.797923],[-5.134954],[0.659480],[-1.333601],[6.995084],[-9.158372],[-5.391107],[9.159270],[-8.736902],[-3.705366],[0.978802],[-9.231216],[-1.604806],[-1.537431],[9.670603],[-7.054085],[6.895872],[-6.587757],[-1.424607],[-0.946668],[-9.868798],[-1.472713],[-2.690298],[4.816538],[2.909926],[0.618508],[6.276832],[-3.548985],[4.891255],[6.331959],[-4.916898],[5.217562],[-9.759977],[5.713028],[-4.160331],[-1.399754],[-2.397159],[0.437640],[-3.501224],[9.390332],[9.835298],[-6.481531],[-4.514020],[-1.837824],[-1.853745],[-0.708306],[0.611181],[-9.703516],[5.593262],[-2.806536],[-5.907057],[3.473966],[1.316743],[7.844427],[8.078424],[7.654877],[-8.366923],[5.596716],[3.196979],[-4.572464],[1.063033],[-5.168404],[-1.656473],[-6.648133],[-8.521812],[3.670850],[-1.494470],[1.948017],[-1.015213],[8.226011],[9.409503],[-4.225879],[5.119089],[5.606722],[7.170438],[-6.314294],[-3.312414],[7.420310],[8.681465],[7.778012],[-7.193244],[-9.337993],[2.352198],[-3.919137],[7.947542],[5.800866],[-9.307188],[-4.116099],[-2.833884],[-9.400712],[8.412247],[-9.700223],[-5.371997],[3.460685],[-1.771182],[7.654568],[0.736010],[3.537429],[-4.825181],[-2.091017],[5.794166],[-8.910182],[6.281016],[0.186535],[-5.076188],[2.437010],[-9.960093],[-8.092744],[2.759667],[2.505843],[-2.379800],[-2.701253],[-1.945856],[-7.339652],[8.362857],[-8.306242],[-9.881430],[6.744626],[7.938059],[3.127947],[-9.610850],[-3.738287],[2.255544],[9.650625],[-1.660176],[-7.597346],[-5.269261],[-0.246977],[-5.136174],[5.913880],[-1.369795],[-3.014216],[-4.433474],[-0.414022],[2.648456],[-8.551018],[9.976434],[-0.928119],[1.338204],[9.340288],[-8.415779],[-8.409195],[4.878067],[-4.995847],[2.077893],[3.856159],[4.102174],[-9.592003],[5.081408],[-9.191125],[9.250595],[6.200140],[6.450426],[3.110561],[4.654366],[-8.095104],[-3.467666],[-5.521793],[5.580114],[8.834220],[-2.560165],[-1.963042],[-4.757071],[-6.592233],[-4.738144],[-9.683531],[5.753346],[-0.613123],[-7.851864],[1.148648],[-3.573312],[7.045677],[-1.593427],[-4.644508],[-3.407440],[-3.173641],[9.092762],[2.135080],[0.710106],[8.051298],[-6.079311],[2.675312],[2.584495],[-0.135064],[3.270129],[-6.518412],[5.005209],[-4.001342],[6.576290],[4.200200],[-1.144196],[4.777617],[9.136196],[-5.399268],[-3.299272],[-3.593017],[9.568998],[-0.094000],[2.011138],[-4.588770],[-6.920536],[-9.766085],[2.249603],[9.629940],[-6.910162],[-7.147802],[-1.390871],[-4.858624],[-9.507279],[-0.147530],[-8.482965],[1.231578],[9.978684],[3.890490],[-7.882239],[6.082504],[-8.460259],[-8.001116],[8.660775],[-2.420518],[8.681415],[-3.269507],[-1.412707],[1.160962],[5.332169],[5.290645],[-7.628475],[-2.639749],[-9.303124],[-2.533248],[5.030439],[2.431808],[4.381959],[6.651121],[1.087433],[-1.813074],[7.514160],[-6.450296],[8.563987],[-1.668943],[-0.302634],[9.780801],[0.791626],[-0.794155],[2.585011],[-4.851425],[-7.100002],[-0.656809],[-0.548059],[-2.239766],[4.910516],[-6.113546],[-9.393429],[8.386298],[-3.137723],[-1.736406],[3.552888],[7.655588],[1.228032],[2.830335],[-2.452863],[-7.970044],[9.193970],[-3.103885],[-7.185103],[-8.371058],[-4.276220],[-0.191896],[7.539916],[-4.284887],[-9.311123],[-2.863346],[-2.179138],[-3.814803],[6.155856],[-0.132895],[3.165698],[8.499462],[1.713585],[-0.083273],[-1.690179],[-1.196233],[7.287097],[0.592175],[-9.707920],[-8.863468],[0.077504],[-4.165112],[-6.522969],[3.651629],[-0.759768],[5.952544],[-3.388200],[2.479540],[8.676622],[-5.074551],[-9.721344],[-8.181009],[2.492054],[-9.195556],[6.050494],[-9.777768],[-9.200426],[1.344379],[7.648937],[-6.611704],[-9.149642],[-4.355158],[-9.876861],[7.949821],[8.970591],[-8.091964],[-6.157661],[-3.713583],[-6.021891],[6.138451],[2.678842],[-4.596935],[-9.945134],[8.256768],[1.586230],[-4.079561],[8.921519],[-9.694143],[-2.028099],[7.411987],[6.495806],[1.926029],[-4.285121],[-1.949793],[-3.563505],[9.813893],[9.470732],[9.002793],[3.209572],[-1.974999],[2.541523],[-5.262638],[2.545115],[-6.523414],[-1.281894],[1.560834],[2.877572],[0.471052],[-2.486287],[3.482929],[3.726336],[4.396980],[-1.027777],[1.137306],[9.308161],[-1.602266],[-7.253619],[0.636490],[-8.235823],[0.316401],[-2.078624],[-4.143470],[2.371752],[2.465357],[7.977401],[-7.231938],[6.947587],[-6.545446],[4.812528],[6.157449],[0.063857],[4.543874],[0.570951],[7.009595],[-2.978988],[-7.749794],[2.125076],[2.910685],[1.042707],[0.559479],[9.034116],[7.535772],[9.153531],[-0.491854],[5.169359],[6.163270],[-0.867283],[-0.214261],[7.232743],[5.037081],[-9.533589],[-4.718765],[-7.880109],[-8.689046],[4.961268],[0.972072],[-6.953915],[1.933851],[-8.933190],[-6.656734],[-5.150229],[-8.112459],[-9.545311],[-6.950377],[-3.073765],[7.356699],[0.406566],[-4.519146],[3.343856],[3.024429],[-1.552601],[4.139283],[-3.745638],[-1.743007],[5.611672],[-2.489600],[-4.811356],[-6.709029],[-8.801454],[9.903821],[-8.877082],[6.429857],[-5.986685],[6.976647],[6.075615],[-6.041229],[5.991442],[-5.007014],[4.641377],[-3.679228],[1.943791],[-4.237255],[6.561087],[-3.605026],[5.847932],[-4.524947],[-4.342165],[2.396176],[-2.020323],[1.279127],[-7.535782],[8.715542],[5.147112],[0.909198],[4.654078],[5.763253],[-7.904900],[-7.577228],[-2.322557],[2.263463],[-4.334246],[4.206735],[-7.198324],[-6.528540],[-8.369622],[-0.615623],[7.687459],[-1.155681],[7.912834],[3.518275],[-8.265552],[6.778425],[-2.455527],[-8.865238],[-1.685150],[-9.353312],[-1.073203],[8.765120],[5.341136],[8.547651],[9.983791],[-6.452074],[6.345861],[-6.923678],[-5.452705],[7.475524],[-2.537195],[3.751270],[0.249773],[-3.750440],[-9.790337],[-9.622669],[-9.468170],[3.800240],[1.565193],[3.690133],[-6.366955],[-4.519596],[4.121674],[-4.649689],[-2.244048],[-0.572834],[-9.931804],[-2.826375],[8.148034],[0.168007],[9.633874],[-1.499623],[1.336647],[1.272350],[-1.231221],[-9.534617],[-0.089555],[8.582835],[5.557724],[6.785409],[2.633863],[-8.432668],[-6.721888],[6.623685],[9.544718],[4.830745],[1.993459],[0.653195],[9.412972],[7.127704],[9.224942],[-1.883047],[-3.306228],[2.057702],[0.094762],[-1.792610],[-3.863966],[-7.797935],[9.692555],[5.794989],[-6.826720],[3.981083],[-2.125541],[-5.849553],[-6.149489],[-7.891679],[7.567457],[0.275523],[-6.957251],[2.384799],[-5.884567],[-5.371782],[1.992421],[8.008005],[5.063076],[9.963324],[3.628443],[6.506212],[6.648044],[0.304460],[4.221153],[-5.187511],[-4.517479],[7.714642],[-4.334739],[-3.469571],[-6.211335],[-9.163922],[5.742568],[-2.946598],[-1.147641],[-0.928996],[-7.754106],[6.528816],[9.220751],[1.088749],[-4.651020],[-6.401247],[-2.738884],[6.504814],[-0.865960],[4.413955],[8.928254],[-0.388581],[8.121641],[0.178380],[7.951929],[0.821200],[7.622658],[7.986789],[9.954563],[0.294715],[-1.946046],[-6.316046],[0.324862],[-3.809253],[3.526335],[-3.293355],[9.008349],[0.123005],[4.714468],[-2.389588],[-1.115180],[2.691800],[-7.257817],[-2.846324],[0.782428],[-2.396681],[8.866034],[-0.064285],[-1.421120],[5.523952],[-2.946577],[-6.187477],[-2.714086],[-9.267448],[-5.148340],[-1.833821],[-6.277904],[-8.855949],[4.325121],[-9.678754],[0.059846],[-5.218640],[7.234432],[0.646648],[5.617222]], dtype = "float64")#candidate|7678|(2002, 1)|const|float64
call_7675 = relay.TupleGetItem(func_1743_call(relay.reshape(var_7676.astype('float32'), [10, 16, 2]), relay.reshape(const_7677.astype('bool'), [784,]), relay.reshape(const_7678.astype('float64'), [2002,]), ), 7)
call_7679 = relay.TupleGetItem(func_1748_call(relay.reshape(var_7676.astype('float32'), [10, 16, 2]), relay.reshape(const_7677.astype('bool'), [784,]), relay.reshape(const_7678.astype('float64'), [2002,]), ), 7)
uop_7690 = relay.tan(var_7676.astype('float64')) # shape=(320, 1)
output = relay.Tuple([call_7664,call_7675,const_7677,const_7678,uop_7690,])
output2 = relay.Tuple([call_7665,call_7679,const_7677,const_7678,uop_7690,])
func_7693 = relay.Function([var_7676,], output)
mod['func_7693'] = func_7693
mod = relay.transform.InferType()(mod)
var_7694 = relay.var("var_7694", dtype = "float32", shape = (320, 1))#candidate|7694|(320, 1)|var|float32
output = func_7693(var_7694)
func_7695 = relay.Function([var_7694], output)
mutated_mod['func_7695'] = func_7695
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7730 = relay.const([[[-3.346663,-7.399362,-6.743579,-0.916482,-4.224638,-1.053818,2.989793,-6.488732],[-6.483290,-9.166888,7.266809,-8.887447,-2.190656,9.113478,7.338013,-0.040078],[-1.727186,-9.188764,3.587308,-4.868790,8.479036,5.756592,5.619924,-7.821890],[7.285466,-6.636243,9.905245,-7.356891,-6.960846,9.994208,7.465598,0.341408],[-2.551039,-4.064257,9.020104,2.190577,8.470480,2.519505,-0.533775,-6.436494],[9.584810,4.664515,3.204274,-9.535192,9.113807,4.480057,-0.014897,7.868728],[4.181165,-9.067988,-0.212910,6.666979,-3.382980,-7.627719,-8.071910,-8.541338],[-2.397481,-1.619265,-6.387585,5.743116,-4.565614,-2.023858,-1.740975,-7.476168],[9.085275,-5.639862,-5.392494,1.425948,-2.362080,-0.967856,5.469285,-5.027848]],[[-0.751025,1.242884,-5.893383,-0.888312,-2.054698,8.563647,-7.001837,-7.040372],[-0.256576,-5.641174,-7.101496,9.081652,4.475533,9.232637,-2.051415,-3.880856],[-2.065818,0.348096,8.672382,-7.728961,-3.518376,-6.331830,6.267295,-7.327562],[6.609567,-5.377114,5.181690,-3.307391,3.404156,1.951090,-4.919840,-1.631146],[9.258405,6.136520,-9.458949,-3.111165,2.354133,6.677597,6.667594,-6.374098],[-1.839310,-5.240718,-1.279771,2.661303,-3.107609,9.895826,-0.375695,-2.700561],[-1.785975,-4.590283,8.828367,5.186312,8.551981,1.787475,3.533645,9.700373],[-9.492221,5.787061,2.556967,9.119051,4.342713,-4.882214,-6.743041,9.311020],[-9.746495,7.678109,2.384810,-4.214044,-2.191310,1.109543,3.324415,0.535047]],[[7.017272,-4.525006,3.638152,-9.283737,-5.017347,9.098420,4.365180,5.146425],[-0.901798,8.990114,-2.897294,0.919491,9.156580,-0.166418,9.626210,9.635963],[-0.248222,1.471648,9.327320,-3.189814,-1.664130,-9.322994,-7.258647,8.684914],[7.064874,-4.524647,-5.371597,-8.390113,7.379486,-9.430436,-1.768041,8.109189],[7.190654,9.209015,-6.750366,8.426318,5.009731,5.544856,7.782979,-8.045262],[7.804903,-9.277290,-6.042396,-9.812072,7.959240,2.536229,-0.521440,-3.901381],[3.756785,-7.958341,5.951208,7.467513,1.788733,6.702561,5.347494,1.657010],[-4.734657,9.263920,-9.503639,-4.052916,-1.707437,-8.501634,-5.847311,7.040613],[-3.234565,-4.557421,2.459791,-9.756628,-6.122768,8.703692,7.750821,-8.392550]],[[9.885269,8.538173,9.430673,6.964523,4.195116,-5.189937,9.167121,8.506577],[3.753218,2.202856,6.073482,-3.940508,6.916273,-2.304680,-3.883353,2.064121],[-5.720641,-5.714837,-4.083471,5.026487,0.381374,-0.606650,0.387992,-6.759573],[5.924666,9.922545,0.629351,-2.616749,-3.049241,7.213255,0.262157,-1.117005],[2.023233,-3.545315,-7.459021,2.741487,2.178836,-6.538323,-3.947245,-7.821020],[2.826144,-9.844093,9.518690,4.629889,5.300927,-2.232460,9.063167,-4.050963],[5.260617,7.083653,0.355014,0.592797,-6.436206,4.963438,-3.173447,-4.820190],[-4.726228,-7.457844,8.538434,3.502171,9.744451,1.999824,-0.481744,8.457134],[-7.600294,5.135865,-9.846823,1.750718,8.392985,6.967858,-9.894125,9.766068]],[[-9.107305,-5.617516,4.438771,1.719438,6.584416,-8.044230,-6.256774,-8.592276],[-1.643546,-7.789569,-1.667545,7.728220,2.959264,-1.736353,-1.882925,-7.337350],[6.470541,-2.546618,-7.853050,9.388976,-3.115290,0.745956,-5.417217,-4.325860],[7.173576,2.904559,-1.148612,4.332403,7.453394,5.675749,1.090919,-6.499262],[-1.299207,-4.852763,-7.945622,-1.640606,4.167625,-5.957733,4.623171,-3.462251],[4.748893,0.954826,-4.470071,2.583522,-7.304256,2.296633,-8.229843,-8.087760],[-6.242288,2.373701,8.354944,4.806808,9.758355,-0.569484,-2.886001,-2.075238],[-5.024907,6.950216,-1.597453,-6.121775,4.048358,1.736776,6.265249,-8.472201],[-2.905195,5.448003,-0.921800,-7.295872,-1.670364,-5.912633,5.158411,-7.449452]],[[-9.736654,-1.890010,5.589400,9.849383,-6.044740,-9.987539,0.124373,4.158557],[1.985375,9.500355,8.161661,8.638279,-5.723604,8.369365,-9.086191,7.366754],[8.291927,-8.711087,-0.640575,-3.445537,-5.097902,-0.789232,9.136625,2.540288],[-0.517378,-3.983330,-6.215914,7.401276,-7.612715,-2.992246,7.271257,5.183669],[9.862804,1.792749,-5.078026,-3.233846,-8.389158,-4.908023,-6.781502,-6.601935],[-1.340483,-8.362235,7.259269,4.978121,-9.631027,-3.413611,3.768664,4.490771],[9.790750,-1.568032,-1.260739,-4.891235,6.565368,-0.161873,-8.467844,4.966196],[-4.444041,0.217933,9.665811,9.860017,-5.813683,0.300255,2.467836,-3.096890],[8.644247,-0.270189,6.808244,8.146174,6.764041,-1.397287,-0.699805,-1.876040]],[[-8.537967,-8.661094,-4.029238,1.184391,-4.500365,-1.823815,1.113179,-1.257602],[0.197547,-7.067983,-7.620184,-2.775035,-3.337721,2.011932,-0.162026,4.506499],[-2.382677,-0.746895,1.175973,4.540592,4.170106,0.023905,1.387561,9.837242],[1.914100,6.408492,8.858839,6.719165,6.837287,7.308250,5.069023,-0.920359],[-0.061838,-2.070210,-5.585320,4.608677,-7.942684,2.938627,8.965145,-5.011680],[-9.293975,-9.735737,3.136178,0.232422,-4.816711,-8.249149,6.080614,7.833939],[-7.454126,3.268655,-6.087429,-3.178799,-3.074141,-3.742807,-2.152162,-5.075107],[-1.102005,8.124403,-7.425488,-8.658221,5.692379,-8.894730,1.289261,-5.277499],[-6.716118,0.848840,6.864338,5.410914,4.740492,1.352679,-8.536868,-9.173433]],[[-1.414918,6.572266,6.086044,5.461316,-6.731539,2.613170,-8.790526,0.057561],[-3.305659,1.165579,-6.101394,0.888859,-5.313227,-3.425730,-6.113728,9.594361],[-5.635520,6.686570,1.372973,-9.913822,4.953439,5.497171,9.546374,-2.277643],[5.581712,0.591681,-2.668754,5.525690,4.929664,8.175694,4.533149,-7.265233],[2.177739,9.779705,5.703119,4.383551,4.788258,-1.913585,5.321296,-3.931905],[-3.494034,9.826675,-8.049652,2.587995,-5.905402,3.924961,5.809531,8.488256],[-2.020035,4.016972,-7.459156,-7.834215,-4.561054,-6.040385,0.476796,-5.782984],[2.183712,-3.936515,5.371517,0.822506,-6.607824,9.617382,5.353533,2.350121],[0.812892,8.244398,4.643081,5.236825,-4.494250,2.456000,3.355567,9.933126]],[[0.972361,-7.278360,5.457759,-9.257479,9.088987,6.826262,-0.227548,-5.890750],[-8.496027,1.837466,8.517230,9.802778,3.565996,7.565387,-8.456885,0.116942],[-6.055791,-0.322521,5.367391,1.665426,-0.331932,9.958290,7.197615,-8.086156],[8.506835,1.778666,1.021585,-2.190648,-5.021816,6.975395,-1.537959,-5.203724],[-4.876316,-7.501613,-2.624959,-6.871931,8.998654,3.811363,3.027712,-1.747538],[-8.566309,7.448712,-5.608084,-0.023466,0.052714,8.285773,-7.182230,-7.636673],[1.086497,-8.826099,9.103824,-2.490235,1.668514,1.389230,-7.500773,0.160700],[-2.111803,-9.386844,5.985232,7.473141,-7.674846,-0.363810,-5.356219,1.200452],[-6.790724,0.112503,3.561161,-5.558813,-6.597452,2.446147,5.820864,4.839611]],[[-7.346119,-5.284018,-8.092989,-8.881162,-6.644815,2.150186,-0.172401,-5.062554],[-7.532499,-1.849459,-0.653611,-5.477080,-9.609175,2.034510,2.776615,2.843704],[-0.777926,8.742813,6.526965,4.953387,-0.431682,3.817634,0.765911,9.086741],[1.058028,2.755921,-9.676954,-2.852429,-5.018518,-8.810795,-7.894729,9.950131],[1.512913,0.232743,-0.492122,5.590438,2.319842,4.126172,-5.260408,8.003764],[-8.280542,0.250936,-0.491829,-5.763416,5.457057,-6.585194,-5.439580,-4.857498],[-3.889037,5.563546,-1.759435,-5.334839,7.306666,3.528464,-4.376562,8.494677],[5.315922,-3.875594,7.270203,-7.198638,5.030546,-3.944066,-5.048572,-9.859013],[7.090086,-9.571665,-9.450351,7.728319,-1.263341,9.119142,8.998682,-1.025810]],[[-5.199449,8.595822,2.868558,-0.684173,-1.347477,-9.237679,-4.697161,-4.050300],[-4.995852,3.564342,5.706310,-3.465401,4.857042,-4.501268,8.519725,-4.131993],[3.782983,3.436318,1.222761,-6.092715,-6.421156,3.470059,9.009801,-0.019996],[-0.417689,-5.393247,2.679022,3.439962,-1.009078,1.758479,-6.917603,8.929356],[9.920961,-7.593951,3.775299,8.849531,-0.133543,-2.326844,-6.615201,5.695394],[-8.082864,-9.818269,7.782494,5.083704,3.157434,5.066222,-7.159477,-0.594245],[2.844455,-0.869120,0.776410,-1.548478,-4.649518,3.438004,-9.980343,2.012434],[-3.591894,-0.287525,-4.486660,3.025015,-4.186922,2.845259,-7.510837,0.502586],[1.736454,-3.273310,2.317100,-3.034057,0.863847,-4.368681,-9.221068,-2.154946]],[[4.074155,-8.490682,-9.705580,6.690448,-1.929017,4.733976,-5.514375,-3.615379],[8.299996,-4.487734,-2.919493,-5.767447,-8.514926,7.576475,4.365184,6.219431],[-8.355618,-0.627928,-1.419540,0.428063,-1.846110,1.495901,4.739085,-3.021541],[-5.567867,3.606026,4.506829,-0.224724,-5.377579,6.794884,1.838461,-7.037539],[-6.287827,1.916722,4.354603,-4.282038,8.888154,-0.709296,0.651157,4.768908],[-1.896806,-8.950724,0.591335,8.577986,-5.846685,0.160873,-5.621632,1.353691],[-0.104919,0.466789,-3.963614,5.655181,5.136960,-8.222407,3.291388,-2.343985],[2.776989,0.682083,9.633319,-8.337959,8.248523,9.344185,-9.245134,1.482345],[0.428823,-4.900646,-0.445787,-2.324896,2.941078,-4.048243,-4.645316,-3.312232]]], dtype = "float32")#candidate|7730|(12, 9, 8)|const|float32
var_7731 = relay.var("var_7731", dtype = "float32", shape = (12, 9, 8))#candidate|7731|(12, 9, 8)|var|float32
bop_7732 = relay.floor_mod(const_7730.astype('float32'), relay.reshape(var_7731.astype('float32'), relay.shape_of(const_7730))) # shape=(12, 9, 8)
func_6839_call = mod.get_global_var('func_6839')
func_6841_call = mutated_mod.get_global_var('func_6841')
call_7739 = func_6839_call()
call_7740 = func_6839_call()
func_4552_call = mod.get_global_var('func_4552')
func_4554_call = mutated_mod.get_global_var('func_4554')
call_7741 = func_4552_call()
call_7742 = func_4552_call()
output = relay.Tuple([bop_7732,call_7739,call_7741,])
output2 = relay.Tuple([bop_7732,call_7740,call_7742,])
func_7743 = relay.Function([var_7731,], output)
mod['func_7743'] = func_7743
mod = relay.transform.InferType()(mod)
mutated_mod['func_7743'] = func_7743
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7744 = relay.var("var_7744", dtype = "float32", shape = (12, 9, 8))#candidate|7744|(12, 9, 8)|var|float32
func_7743_call = mutated_mod.get_global_var('func_7743')
call_7745 = func_7743_call(var_7744)
output = call_7745
func_7746 = relay.Function([var_7744], output)
mutated_mod['func_7746'] = func_7746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6839_call = mod.get_global_var('func_6839')
func_6841_call = mutated_mod.get_global_var('func_6841')
call_7849 = func_6839_call()
call_7850 = func_6839_call()
output = call_7849
output2 = call_7850
func_7860 = relay.Function([], output)
mod['func_7860'] = func_7860
mod = relay.transform.InferType()(mod)
mutated_mod['func_7860'] = func_7860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7860_call = mutated_mod.get_global_var('func_7860')
call_7861 = func_7860_call()
output = call_7861
func_7862 = relay.Function([], output)
mutated_mod['func_7862'] = func_7862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4552_call = mod.get_global_var('func_4552')
func_4554_call = mutated_mod.get_global_var('func_4554')
call_7865 = func_4552_call()
call_7866 = func_4552_call()
func_5001_call = mod.get_global_var('func_5001')
func_5004_call = mutated_mod.get_global_var('func_5004')
const_7873 = relay.const([-8.135640,9.732947,-0.425156,-2.225618,2.721884,9.784724,8.876217,-7.130354,1.702315,1.352038,3.018918,-7.015983,-3.158618,-8.083767,5.553039,-6.635927,5.713734,3.252757,-4.608670,3.735009,-0.453415,-9.274369,-6.306242,9.607841,6.510796,9.453027,9.498706,-9.162676,-9.171663,3.780890,-1.607284,-9.039695,4.722386,8.655685,5.755031,3.690363,3.127828,3.844209,-3.989670,-8.260857,-9.814121,-9.423443,2.009531,4.327795,3.852544,3.766832,-3.631262,5.722623,-4.608170,6.734745,5.352041,6.151398,1.181879,-8.119135,-4.517568,7.903255,6.333231,-3.122506,-2.456054,-4.499392,-6.364679,9.719631,7.959085,-9.039466,-1.594692,-7.817358,-0.113826,-3.857138,-3.257972,7.970010,9.723017,3.926913,-7.117572,-9.744518,-7.167309,0.002696,-2.588381,8.106471,5.200181,4.227213,-7.868029,-9.659719,-8.099728,-8.407665,7.469825,0.890287,-5.150635,5.941826,-7.879241,2.166403,7.709907,3.258466,-4.803798,3.495533,-3.254092,0.549258,-9.595598,5.781403,-3.781198,-0.570787,9.712372,1.939024,-2.558889,-4.875932,-6.132229,5.897635,-7.359565,1.982973,-3.559508,5.396656,-6.122548,6.013588,-0.926736,3.158109,-9.469506,-6.415405,0.375456,8.763374,7.806341,-1.372021,7.925079,2.755990,-2.487191,-9.445968,9.636787,2.006127,-3.270965,3.232246,7.301223,-6.761727,-0.072570,7.575283,-6.230168,0.222422,-0.855031,7.813511,-4.227973,-4.589828,7.615975,9.946420,-9.459648,-3.009742,9.641238,9.612546,-5.232530,-8.974025,-5.949046,-1.666301,-9.759626,-3.164644,4.736348,-2.053633,-0.439653,-4.983417,-5.901839,8.208292,-5.076366,5.117038,0.540489,-0.931790,-8.907215,-0.470420,-7.323897,9.420781,-5.851615,-9.306487,1.698291,6.205884,9.256231,-9.800610,4.488691,-1.136003,5.531225,6.479105,-3.646701,3.541981,-1.143556,8.252869,-8.243126,1.789584,1.999813,6.504671,7.327316,-8.336945,-8.220635,-3.758179,-0.708554,-4.731611,-0.026578,-6.263245,0.893805,-2.383711,6.960485,5.680262,-2.876418,7.451611,-0.701721,3.982441,8.606558,-0.027964,-2.846693,-8.807205,2.050808,-8.144006,-8.311208,-4.917058,-5.923562,-1.445208,-8.962904,-1.524076,-2.355670,-2.803287,-7.814059,-2.839451,-6.533889,1.491235,4.634515,4.461437,-5.323705,0.351571,1.213946,5.079940,-1.376181,6.710363,4.864473,5.618656,5.187200,-5.878518,3.995741,-0.928696,4.363678,-8.969360,9.533447,7.882137,-3.550282,-1.092778,-6.941935,9.078061,5.576923,9.376022,-9.009353,7.653660,4.610437,1.952577,-4.328898,-2.203617,-2.827620,9.111387,-3.935209,4.911346,1.338157,-9.144443,2.235469,-8.482378,9.275551,2.896257,-1.745218,5.425320,-0.266170,7.655916,-4.226304,-3.568718,-9.481138,-1.412090,-5.019580,7.197528,-3.659537,9.031971,-9.971332,-4.215727,-9.015289,9.204152,-0.427713,-5.541666,-5.240044,-0.402328,5.471771,3.310089,-0.428301,-5.350635,7.609324,-4.065195,-9.058757,-5.487723,0.312480,-1.447941,-3.518253,-4.249826,-3.522012,-1.909598,-3.431341,-9.100458,9.291736,-9.958507,4.850666,3.009374,-5.443663,-8.682918,8.847889,4.748494,-9.179039,-0.913126,-6.036508,9.598854,5.289555,9.594893,-1.350719,0.688116,3.033160,7.510454,7.177890,2.317393,-8.365533,-1.043521,-5.997102,-8.787251,9.983168,-0.653212,-9.698016,-5.373515,2.359099,9.243467,6.647173,3.040905,-3.328823,-7.499737,5.761753,-4.341055,6.401918,-5.086936,-4.866350,-3.991044,9.503527,6.651948,2.220077,-6.599354,8.501672,-7.057564,-1.058773,9.024050,9.957197,-0.479221,-8.900692,-8.391477,1.989624,3.481817,-7.926762,7.354202,-8.463702,7.149991,2.430629,-8.247227,0.592566,1.662447,0.349151,1.565205,-1.622158,5.913898,-9.472629,9.471932,-7.227452,9.295211,-7.821331,0.055114,-0.765261,-2.778114,-8.297411,-1.457502,-5.986859,9.469612,9.201206,-4.507020,9.589648,-8.226103,8.821560,8.774774,-3.156137,-6.161554,-9.998089,-6.037478,-3.616807,-9.868868,1.062688,4.098286,-7.158396,6.051742,1.628612,-4.056847,-3.039711,-9.531015,-1.040587,0.333340,-5.001393,4.851609,3.387876,6.496355,2.721329,-4.128537,5.688853,-3.016301,4.097314,8.460519,1.413440,1.659557,-4.944971,1.483179,7.389086,2.109963,4.805834,-0.931241,-2.220518,-9.159705,2.888560,4.321885,-6.691043,6.992293,8.482310,-8.111388,-3.162246,-8.405599,4.055236,5.325728,3.248133,2.764332,4.003105,0.779686,3.521057,8.994599,8.397442,4.928326,-4.780073,5.820692,2.529061,-5.471461,2.220303,-4.146176,8.209321,2.467918,7.244399,0.855759,7.231199,-0.800563,-4.894621,6.571479,-4.573389,-9.440190,1.770919,1.336270,2.122914,-0.030805,-3.909959,-0.504514,-0.822276,-6.230965,-6.223607,1.816048,8.272884,-1.774086,6.203521,9.442152,2.814605,4.900307,3.630051,1.256404,-9.900088,1.857952,4.697635,-6.342901,3.709295,7.090751,-4.850705,2.120531,-2.588887,-0.751734,-7.844372,-8.692682,0.741548,-0.223745,-8.941509,9.531976,-8.263109,6.692010,-4.264749,1.110986,4.653391,9.371973,5.629040,1.364160,2.274111,-2.600526,8.729587,8.708777,-4.501274,3.574220,5.766840,5.567332,2.474680,1.483026,4.039957,3.348066,4.335148,-6.442045,-3.554564,3.903775,7.383825,6.939247,-3.782529,4.912016,-6.028524,9.656416,-2.916396,5.905615,3.384714,9.048213,-1.158438,7.960226,-3.397748,-7.908401,4.603040,-2.004624,0.844377,5.698054,-8.380037,-2.121101,0.914389,-8.012388,3.717231,1.464132,2.311371,7.986721,-7.969647,1.465751,-2.768443,4.978816,1.265168,3.996324,9.869447,-8.698738,0.105169,-8.271242,-8.115660,-5.757914,6.469452,9.519118,1.372867,-0.147246,5.757320,-1.493441,7.181953,-0.813147,9.959305,-9.840698,-2.566116,-0.740407,1.500107,5.811699,8.868757,4.066597,1.635488,5.126388,0.189405,-1.633415,-4.366659,7.001064,-0.951084,-2.375951,7.622443,-1.068650,-5.503401,2.371893,-0.699180,1.057553,3.251518,-6.653625,1.152828,9.740806,4.221837,-3.911013,-4.542838,9.959495,0.032435,-7.358533,-2.166457,-1.033064,7.401908,9.616456,-9.749406,8.703023,6.993980,7.253827,-1.531920,-1.756376,-3.985800,1.601523,-8.956406,-0.966075,-1.923637,-9.111581,0.575248,4.914244,-6.433362,-3.874873,-2.691242,-3.510251,1.922084,-0.416755,-4.254683,1.336098,9.041145,9.331338,-2.436576,3.106667,-3.948544,6.829506,1.427039,-1.037253,3.692789,-1.612128,0.866000,-7.917874,-9.109396,-2.110658,1.548472,-2.660426,-3.818325,-4.075288,6.335799,0.532856,9.710302,3.006472,-0.742843,-5.166680,5.638513,4.824509,-6.177517,1.721131,-8.102553,0.634427,-8.057105,1.197535,-3.264863,4.947286,4.006268,2.685099,5.325692,4.404561,0.174677,-5.422773,1.449333,9.271936,6.970389,-3.707736,-6.055008,8.374554,6.272559,2.409635,-4.173833,9.731386,1.268324,-5.848560,-0.780180,-5.789107,5.414992,-8.193306,-1.145404,-6.189473,-7.054808,-1.251712,5.356809,0.972121,-0.411747,-9.607560,9.653479,-3.665218,-9.875748,-3.580435,4.433756,-4.562694,5.187291,8.130949,-6.090689,4.720485,-5.203004,4.407834,9.263098,8.040316,1.283520,-6.022942,1.978736,-9.318416,5.371942,-2.151025,5.002364,0.467730,7.527195,1.800239,9.845748,5.753913,-9.972228,5.958503,7.426160,3.081550,-3.696789,-9.587234,-1.562147,6.331583,9.635659,-5.044191,7.213411,7.978541,-1.548473,-8.344183,8.060693,-2.891351,0.082510,8.951829,-8.080643,1.385034,-2.947020,-6.216736,-3.549329,-6.980988,-2.919228,0.848808,-6.112010,-0.192607,8.821328,-6.730158,-2.034636,-8.133734,-9.628066,2.493776,-1.384688,0.261234,-2.351474,5.711419,-5.744051,-1.474162,7.347806,-5.231220,-8.508347,-7.944233,6.004451,-8.175076,0.387460,5.435363,-8.292000,-5.231399,-1.589651,1.338515,-1.319715,7.411621,-7.203224,2.037052,3.142042,6.021412,-2.278193,2.913202,9.270620,-9.646056,-0.018401,-5.551693,-9.533661,0.145857,1.148117,5.496969,-0.759386,-0.641876,-2.629377,-4.151452,2.847133,0.506203,7.211276,2.650347,-6.212743,-8.933906,-3.190121,7.618139,5.763244,9.360639,6.761969,-3.817074,8.319823,-7.637476,-0.466038,-5.114957,-2.643233,-6.703065,-6.666558,-8.731520,1.404076,-4.091877,-9.878003,-9.522466,-0.514110,-7.318894,-4.666502,4.378925,0.399548,8.249016,-0.099609,1.411675,8.802459,7.871225,3.734488,-1.125212,-2.281710,-7.979309,-9.124174,-3.884188,-8.477749,-7.333523,-4.280922,1.737109,6.664760,7.471134,-5.429694,-1.506626,-7.455235,0.003318,-0.639065,-8.283629,-8.267839,6.806004,4.217340,-9.418455,-3.852500,-9.248113,-9.887876,-9.035790,-2.217636,-2.496990,-5.479560,-3.217720,-3.748423,-2.701238,7.300066,6.955464,-6.103985,-4.238694,-1.360776,5.584720,6.594662,2.487449,3.409329,1.583429,-8.998090,-9.772788,9.842780,0.132186,5.341903,-3.870013,5.150150,-6.623308,-2.531876,8.202263,6.807904,9.251438,6.354511,0.339858,-8.254458,-2.571471,-3.746336,8.744393,-8.934148,3.814248,-5.419198,-5.853222,4.542593,8.963547,-1.968115,-5.368905,-2.601662,-7.050956,3.999356,-4.247674,5.957736,-4.415147,-3.112635,5.925979,-5.471378,-9.319923,-5.100524,-5.600175,3.174345,3.699501,1.257414,-1.796364,3.685194,4.486126,-4.557798,-6.929709,-8.467056,2.581231,-5.519599,5.089366,5.501448,4.036488,8.612047,4.021296,-2.845689,-6.864875,-0.252288,1.613916,5.159849,-5.955252,-6.853975,8.304641,6.142066,0.514165,2.408698,1.903180,-6.174418,-4.101973,-4.332938,1.671842,-8.585201,-9.733833,-7.439671,-3.381188,-4.030457,0.225666,9.277289,-0.827312,7.497826,-9.529246,-5.006710,9.898367,1.977878,-6.547065,6.568978,-4.598437,2.002885,-6.792417,-5.627363,-6.856194,-0.280778,8.011450,-2.378528,-9.146696,-5.080651,1.806990,-8.550521,7.858582,-0.566075,-9.967925,3.271491,-5.937613,1.217233,-8.607572,8.774159,4.686585,-8.321957,-7.822134,-2.840018,-6.720687,5.121218,4.642781,-2.315645,6.520186,9.347050,-7.020816,-0.645463,5.901893,-6.626690,3.217790,-1.050383,8.016791,-7.800776,-2.004240,-4.754204,9.106607,-9.762383,-9.651601,0.395927,3.194510,2.362447,-4.704735,-1.365758,8.416878,6.488967,0.890051,8.470099,9.537114,-5.860545,-4.113134,-1.339399,-1.531986,4.339998,-2.803366,1.534566,1.021719,8.079375,-7.367018,3.228739,-9.008525,7.250336,9.437345,-8.847205,-8.844085,-8.902974,-2.041999,-3.840535,7.274367,2.605240,-9.979223,5.134460,1.209464,0.686912,5.514542,5.050937,-0.831904,2.275200,-7.877341,-3.796758,-2.601969,7.097824,5.438572,5.873115,1.741862,-6.586592,5.429484,2.973131,4.629981,8.439972,-6.181100,-2.370710,7.847396,-9.898417,-9.071475,-2.746897,7.280699,5.096851,3.177591,1.495071,4.445777,-0.788278,6.593741,0.837320,4.451514,7.422453,1.472085,-0.845629,9.438206,-5.058515,8.298511,-8.289327,0.029203,9.623843,3.740915,0.204134,0.452906,4.684884,-0.655186,4.120695,8.578475,0.959227,-0.590702,0.693068,-9.620384,5.460094,-0.795622,-5.736037,1.008248,-9.424489,-6.092115,8.095150,-2.963969,-4.769496,5.262510,-4.749029,8.453198,-6.091990,0.813421,4.540980,5.091593,6.988286,0.222333,0.068538,5.683773,0.776510,-5.443471,4.048312,4.903149,7.318750,3.279040,-3.756424,7.442364,1.485379,-5.116199,-0.066296,9.211981,-5.594916,8.297058,-8.848961,4.027683,-3.603268,-9.776171,-7.275004,1.041781,1.314610,6.905931,1.690887,-9.227421,4.831392,-3.816539,-9.817549,2.697636,-9.035541,4.667100,-6.604157,-1.485204,-6.320578,-4.871301,-4.985060,-8.673035,7.417246,9.023343,-0.325608,9.826028,2.610867,3.014627,6.385440,-8.874007,6.967668,-6.256815,-4.705941,-2.490901,-2.896797,-0.373750,-0.389885,-1.314542,-0.479762,7.165922,9.739455,2.316819,-3.440603,-4.028480,7.291582,3.312209,-7.278597,-9.610308,-4.252785,0.685921,-0.853276,4.642775,-4.829594,-0.980479,-7.548133,8.917355,-9.996555,-1.971889,6.449936,-3.461587,9.018358,5.760667,-5.541737,-9.150894,-5.754254,7.374628,0.571077,-2.838761,-4.317262,4.032076,-5.331721,-0.319685,2.168956,7.376327,1.462252,7.364601,9.357620,2.911677,7.332604,-7.185625,3.014415,-8.317748,-5.327250,2.362168,7.258786,8.862770,0.956756,-4.664660,-6.963060,-5.615094,8.786596,-9.795899,-9.602472,-3.358942,-8.871487,-9.579991,-1.291994,-9.965555,5.217632,8.716156,-6.134126,-6.116535,-8.569091,-9.120670,-9.574036,6.563832,3.638515,-9.811772,1.391855,2.185955,9.614404,2.573990,-4.417925,-0.545414,0.018177,-8.229045,3.436142,-2.175193,5.912299,-5.602500,4.923383,3.837857,-1.197298,-6.572827,1.649150,3.633331,1.413771,-4.431581,-5.636781,8.285601,8.893318,-3.698670,-2.644483,-0.198929,3.196340,9.755409,-8.987885,4.102134,-6.987856,-6.411460,7.955911,-5.318821,2.169972,-8.767203,-3.040972,9.428369,3.090559,-5.139359,-8.333147,3.350878,2.168154,-1.319398,-1.353231,-5.672774,-7.781992,-3.563387,-8.504666,-0.443226,9.982223,-8.027741,2.397792,2.029198,2.109530,-6.610467,1.437589,1.506720,0.328761,-8.642203,-6.263895,-4.601709,-4.066834,-3.752485,-9.620995,-4.200170,-8.239560,1.219959,-0.102956,-6.714489,-5.172986,-3.795728,9.888068,-8.682589,3.879011,-5.374745,-3.305696,-7.432170,3.005113,1.993225,-6.735297,1.942785,-8.003930,-6.912782,-2.407276,-5.980489,0.036134,-6.725806,7.456014,2.474371,9.913725,-7.782184,1.114714,-0.198849,1.851238,-4.955365,6.817071,-4.333813,-9.557828,9.060378,-6.118495,8.831422,-8.073269,-0.471474,-8.129715,-2.213667,6.824203,4.288695,-8.725226,3.819557,-8.787470,6.120605,3.900564,0.118496,-0.793844,-1.408067,7.481909,-0.109978,9.951878,4.986756,9.748021,-7.953743,-8.177558,4.233954,7.549119,-1.876447,-4.254952,-3.935216,-0.556202,2.584470,-4.850866,6.802379,9.405603,1.917130,-9.976105,-0.228582,-3.066782,-8.700657,0.098292,9.910194,-8.241989,-8.884554,3.355976,-3.845306,-0.661962,-1.445175,-0.880214,-4.594927,-6.157609,-5.233475,-6.328798,-8.911596,0.344867,6.333624,-2.629946,-1.457102,1.859831,0.583451,6.021497,-1.980689,7.741833,-6.870213,-0.092793,4.937204,-9.829818,6.897359,-0.433451,7.059174,-4.932885,-7.078991,-4.976600,1.031862,6.840876,-6.804665,-7.005897,5.420993,-3.454189,3.161250,-9.270369,4.629548,5.916579,-3.483755,-2.608586,6.685265,-4.405829,4.252727,-2.489492,-3.666033,4.889271,-9.528456,3.612082,1.992300,0.654318,-6.320995,6.786442,-6.183824,-8.075801,-9.285219,2.135662,7.419187,-3.711319,-2.863277,2.923391,-1.743813,4.352242,3.695781,-4.265642,-8.506128,5.612261,-8.567319,-9.089473,7.063289,3.627018,8.507216,-1.464212,-9.237034,3.310533,6.717166,-9.095465,6.010903,9.783106,-9.874302,8.009355,7.697913,-9.078330,0.773863,1.575844,3.056543,0.765351,8.530185,-7.793590,-2.024778,-0.847324,-4.019711,7.455896,-6.740489,-6.562137,9.500349,-9.125575,9.685249,-8.787533,0.013906,6.430782,-5.473232,-0.191881,-6.477354,6.764287,-7.750724,0.516268,-6.975644,4.628556,8.441693,-5.143319,3.547544,6.416984,9.488372,-8.440985,6.951598,2.568134,-6.785908,1.295541,-3.796553,5.595531,-6.695530,-3.932454,3.672792,-0.460751,1.294848,4.589855,3.433437,5.109267,-9.188065,6.878108,-9.632789,1.530683,-9.997961,6.442586,-0.412247,-5.600436,3.201929,4.672665,-8.704023,3.553019,-9.729613,-7.909751,-8.193545,-6.437574,0.965643,-9.700769,7.442505,-3.397597,3.516263,-4.524694,-2.686236,-5.943179,0.773821,6.964098,0.204692,-5.478100,7.446453,5.439772,-0.510017,7.871293,-8.987518,7.244065,3.766501,7.151402,-7.956710,-6.773631,-8.171306,-2.176223,4.690011,2.784175,2.505053,-0.893413,0.279015,-5.167541,-4.144775,8.420486,0.772762,-5.639601,6.395000,9.748337,0.185189,-1.017462,4.727480,-3.112756,-5.159003,8.114030,8.723564,8.097688,-6.058379,-9.943851,4.405681,4.656442,5.139417,5.565166,4.855549,-9.032673,6.835285,4.887431,5.457291,3.807588,8.771902,1.351499,-6.781742,7.894123,-7.833373,8.743575,-0.859097,0.959613,-5.397001,-2.612023,8.465225,5.617436,4.178983,6.409550,-5.288430,9.964280,-6.019279,-9.279663,7.649654,9.698592,9.972414,1.975569,6.540337,2.425812,8.370928,1.588685,-7.061573,9.920587,5.559253,5.317808,7.584947,-2.263967,4.625308,1.520160,-4.550943,4.542208,0.614714,0.511793,5.980543,9.538007,-6.742961,8.966593,6.159179,9.365547,-7.470786,-4.476388,4.279995,0.167508,0.792709,3.635370,9.235902,9.790644,8.989050,9.152812,-4.538123,0.996602,5.296894,2.205457,-9.587352,-4.905402,4.206694,-7.053793,6.078254,-2.662049,-7.946788,-0.444252,-9.525441,6.875020,5.545374,-1.370402,2.299711,-6.057255,-4.806593,0.023159,-6.546166,3.638434,-6.488972,-2.604395,4.448226,-9.800637,-7.111867,3.169382,-7.792578,-0.269967,3.873592,7.768282,4.449366,-9.838400,-3.138664,-1.283158,2.309195,-5.704755,4.863651,3.259252,3.261028,9.977977,-8.024484,-4.768985,5.570640,-3.350256,8.639324,9.822691,-8.893888,9.016819,8.592411,0.396787,0.384692,-3.167985,5.159463,-0.536059,7.660641,-0.757494,-5.723030,-0.780085,-9.727913,7.719680,3.304532,-0.478827,-7.233617,-8.295311,6.537945,-8.984192,7.070319,1.759178,-0.405226,-7.683556,9.731453,7.100745,2.563626,7.569439,4.624429,-5.328362,2.484774,-1.893495,-5.823082,7.687084,-3.123707,-8.419576,-7.984446,-9.662010,5.383041,-6.532655,-1.178821,4.530835,-6.223173,5.530685,3.260823,-1.436764,-5.080077,-4.758999,5.109105,-3.104261,4.977941,8.842699,-2.573019,-3.652095,-8.068185,3.025513,-7.056006,6.847563,4.471997,-9.576480,-7.591942,-0.962474,2.011024,9.695288,-0.690278,8.499074,-2.298559,-6.514300,-6.324135,8.616136,2.797408,8.019884,0.020357,-0.311340,5.725236,3.281015,7.889598,-4.143108,-6.848180,7.692482,9.568422,-6.472470,-3.743691,5.829535,7.204800,7.074905,6.926316,-4.567781,6.008314,9.324266,-3.728285,-8.198501,-3.587805,-9.948110,-8.362730,-2.659462,-1.515660,-2.371673,7.616556,-2.034095,-8.829573,1.318692,-7.373876,-3.484293,9.813682,5.130873,-7.685044,5.528794,-2.698278,6.543570,-7.679511,0.018802,-6.666509,3.129665,6.192652,-4.139662,4.690974,7.273784,6.170818,-0.872605,2.544295,-9.684669,5.998607,8.562955,-6.618886,2.076382,-1.246558,4.373099,-8.655901,-9.675000,-2.895036,5.313199,-9.662327,-5.599554,-5.824984,-8.475431,-0.267345,7.070846,2.971693,5.271843,9.932529,-0.368926,7.693754,-2.334763,-3.980730,8.403722,1.095759,-8.929132,3.962128,4.796132,7.518168,-3.588651,8.631557,-4.702564,-8.082724,-3.320271,-4.213360,7.520708,-6.655592,2.665443,-6.271192,-8.767914,1.738784,8.889894,1.758079,-5.984830,2.705863,-7.718599,-2.738661,3.169984,-1.147389,-0.296124,-9.254429,9.135404,1.091512,8.099528,5.440405,0.319238,-4.308322,-1.619261,0.225403,6.625856,8.346953,7.296675,-6.889957,-3.650825,-5.130608,6.237033,-1.329318,-0.507410,0.799114,2.562447,8.752271,0.176084,2.035999,6.075536,-6.013978,6.721538,-5.000055,7.467188,7.148688,7.973654,-0.015745,-8.289377,0.184290,-7.431253,-6.648931,-4.998557,-7.529787,-3.078750,7.583374,-2.174399,-8.661678,1.326756,5.543780,3.847768,-9.690974,-0.357842,6.457826,5.137813,1.112548,9.313406,7.704068,3.931741,6.245162,9.545551,7.526949,-2.401340,-5.789866,-5.046751,-5.394996,-1.405254,0.515640,3.654514,-8.001510,5.779245,-9.165867,6.244697,-7.486271,6.894428,-6.745050,-1.770066,-5.467354,3.611101,-7.647426,-2.231641,5.823436,8.583159,-0.418572,4.465275,8.329951,-1.005186,9.012432,7.219859,9.407000,7.604943,-4.312975,3.433009,-2.032791,8.527068,5.053010,3.631534,-4.746315,1.416564,4.890837,1.634231,1.232278,-4.914150,-5.811261,1.183621,-1.940521,9.220469,-5.885728,-8.806954,-7.878512,-9.941557,8.384437,-2.809210,-5.300236,-1.926205,6.989028,7.813017,-5.239088,3.166208,4.207560,-1.979607,-7.355734,-0.050163,-0.791793,4.182114,-5.678258,-4.322195,-1.119448,-5.261184,-4.542582,-0.071776,-3.126250,0.903904,-7.617827,5.971422,8.684943,9.289250,-0.295055,-2.342451,-5.753998,6.353897,5.692385,6.819206,-0.589607,4.642709,-1.072854,-6.947716,5.052148,7.834484,5.945922,3.525229,-5.889965,-8.797385,8.671302,-0.049562,-4.176879,-0.271208,9.434289,4.892516,6.870144,7.556509,7.205405,7.158712,1.525765,-6.370284,7.454008,1.714463,-9.758607,-8.813792,-1.409715,-6.032115,-9.732341,6.364548,-7.966709,-6.911278,7.358072,5.777436,5.493846,5.152654,-9.629986,0.160655,4.264536,6.434165,-5.835210,1.296658,-4.521142,-2.571548,1.000196,7.887666,-7.506081], dtype = "float64")#candidate|7873|(2002,)|const|float64
call_7872 = relay.TupleGetItem(func_5001_call(relay.reshape(const_7873.astype('float64'), [2002, 1])), 2)
call_7874 = relay.TupleGetItem(func_5004_call(relay.reshape(const_7873.astype('float64'), [2002, 1])), 2)
func_4616_call = mod.get_global_var('func_4616')
func_4618_call = mutated_mod.get_global_var('func_4618')
const_7880 = relay.const([4.211068,-8.951219,9.035698,-1.307371,9.669458,8.056310,-6.001977,7.334050,-2.048045,-2.320928,-1.617852,-6.171375,-9.327057,2.073405,7.507867,-3.599480,7.235046,-6.554422,-5.127386,-6.859680,-1.159323,2.686041,-0.824565,2.930309,4.366468,-1.204755,-8.755563,-0.915985,-9.724636,-6.433611,-0.985314,-3.718453,-3.745352,9.930168,1.656998,-4.507082,8.457157,9.152030,-7.109403,-7.275519,-3.365799,-1.641283,-6.038723,-9.832113,-4.865542,-7.608895,0.522391,-5.951203,4.048304,-7.833543,4.371918,-1.790805,2.848053,-9.196998,-7.026789,4.514305,5.091267,-2.700979,-1.214572,-4.250966,8.597323,-5.599220,2.741730,-6.494112,-0.849654,-8.769816,-8.962653,-9.504918,-7.336490,5.768943,-2.051136,0.454149,-2.920312,4.751163,-0.499173,8.064990,-4.626682,5.706531,-4.689029,4.201736,-2.453820,-8.905635,-3.917072,-1.803993,5.344445,-3.554046,-8.870167,-5.895656,4.515382,-3.015629,9.498311,3.898887,5.665038,-2.902142,5.096099,-5.432005,6.572908,-4.226198,7.535329,-1.179720,-2.206828,-0.045021,-3.676211,-1.768932,-3.501422,-3.304014,-6.097981,-3.863839,-2.303433,-9.708830,-9.368775,7.150749,5.797853,4.310422,3.046828,-1.876530,-1.747108,-0.453488,4.773777,-3.070975,4.617378,3.469206,7.069473,4.032930,-6.041887,6.605444,-7.625410,-8.003942,-3.638309,8.021687,8.394044,1.800754,-3.112609,7.511678,-9.843500,-7.344602,-4.967879,-8.043000,7.471973,6.050462,1.953303,-9.455825,1.111629,8.548967,-2.772793,3.663584,-4.599828,-9.385891,9.583691,-5.766602,5.548819,7.364692,6.431819,9.207984,-0.133651,-7.632953,7.822480,5.949656,-5.831669,-2.042292,5.946544,-5.144132,9.073708,9.985003,-0.312202,-2.151560,-4.202637,6.363465,3.736399,-4.025953,3.887591,1.277545,7.695203,-2.156476,-3.831584,-4.771737,-5.023044,3.060417,9.717450,-0.931466,6.175128,-3.846225,3.333561,2.220096,-4.491349,-4.958548,-4.467992,8.159431,-8.405663,3.773550,-8.737950,4.295657,4.498558,-6.724952,5.727823,-4.952642,-3.392214,-2.877281,7.445578,-9.506874,3.748369,1.961741,4.904066,4.305372,-9.731597,-3.438617,-1.101664,-9.712597,-5.154952,1.805276,3.029153,-5.397573,-5.361323,2.741392,-7.218448,7.941158,-2.994196,-2.476374,7.036348,-0.202548,-2.301493,9.598617,-0.777047,-5.909847,-3.904708,-1.344749,-4.460899,3.402490,0.487430,-1.660198,9.742084,4.347137,-9.341655,6.192718,9.472508,-6.856779,-9.169641,-8.956474,1.910808,9.272461,-1.408142,0.129230,0.969760,1.336995,-5.265239,-2.512651,-2.592993,3.949106,7.365978,-8.759177,-8.648332,4.807372,-5.261810,7.729526,-4.727654,-0.998085,-1.879722,9.058014,-0.177423,-1.103703,-2.224618,-7.410071,-3.090808,-8.382273,-8.534104,-3.332110,9.278487,4.271770,-1.085293,5.709014,-6.736561,1.112642,0.494752,-3.831543,-5.715437,-5.236975,3.277543,0.811650,1.664480,-3.228395,-9.314086,-8.434716,-1.915636,-3.763409,3.480450,3.401313,2.977058,-8.546020,-9.595499,-4.600166,-5.566781,3.001515,-8.702149,5.876536,-8.580447,8.673473,8.145082,-7.087490,-0.114176,-6.183787,-7.263699,1.927225,-5.123159,3.454392,-1.730030,6.172353,-7.428116,-4.148013,8.892930,-7.544209,2.417923,4.715283,-1.672691,-7.617435,-5.937037,-0.641117,1.466405,-3.628277,1.007829,-5.654415,4.475719,-4.673591,-6.841926,-1.329805,7.139096,-6.675217,7.435081,9.497071,1.781028,-2.993690,-6.925063,2.373384,-1.664626,1.772168,7.364946,1.873092,-3.387956,-6.187671,-5.773626,-5.323155,-0.699461,3.836113,-1.389491,5.832330,-4.530825,6.808774,-2.933112,-2.786384,-1.608193,-2.265990,0.320962,7.870662,-1.217977,7.371719,-4.475412,-9.552001,-1.262565,-0.185490,-5.202045,-9.532750,5.141522,3.649723,-3.229014,-4.521212,0.321181,-0.336151,-0.550511,-4.774801,-4.153807,-9.804918,-6.424500,2.820094,-1.007943,2.566675,9.500494,9.469945,-8.411417,-8.502902,3.968534,9.289123,6.049058,1.096486,1.037460,-8.086370,3.492767,3.580199,6.812952,-0.276872,-6.588495,-6.384726,-4.101330,3.860528,-9.151454,1.473590,-7.196647,3.981840,7.786641,-3.355332,-6.635268,-9.884214,5.195067,1.291039,-0.540421,-3.752272,-7.692520,-2.750088,-3.347964,8.065463,7.753301,-7.029531,3.570964,3.041534,2.663642,-3.472864,9.202116,5.143637,-0.038317,6.207964,3.409044,8.497262,6.008538,-0.493788,9.221210,-4.389516,-1.294020,1.954646,-0.778159,-2.425382,-2.859782,-0.689485,7.883554,-8.623172,-6.362515,-5.995820,2.343083,5.553512,6.591012,-4.416621,7.928216,5.115077,-8.305867,-1.051357,-2.229838,-8.492347,0.656230,-6.217266,-9.685429,-1.317304,-1.030402,-6.761429,-0.252630,-3.408120,5.167366,9.268182,-9.299021,5.478918,5.140312,9.368156,-4.275444,-2.788489,-4.622141,5.706181], dtype = "float64")#candidate|7880|(462,)|const|float64
call_7879 = relay.TupleGetItem(func_4616_call(relay.reshape(const_7880.astype('float64'), [462, 1])), 0)
call_7881 = relay.TupleGetItem(func_4618_call(relay.reshape(const_7880.astype('float64'), [462, 1])), 0)
func_4335_call = mod.get_global_var('func_4335')
func_4338_call = mutated_mod.get_global_var('func_4338')
const_7890 = relay.const([[8.591190,8.463735,7.955161,1.296624,-7.440498,4.384191,-0.487537,-2.903660,5.853148,-3.089417,1.794567,0.164609],[8.450302,8.430818,9.698832,-5.255678,-7.619018,-7.178043,1.155319,3.791732,3.269829,5.679545,6.117178,-1.089772],[1.185883,-2.865944,5.306607,0.812465,-7.922667,-9.264672,-7.756416,-3.254658,-5.199431,-7.752743,-9.331223,2.453435],[-7.807780,3.411368,-8.007158,9.917077,3.323545,1.802859,0.956603,9.426711,6.664009,6.293562,0.608221,-8.769516],[7.646143,6.305112,-9.923428,5.605403,7.705908,8.667536,-5.185743,-4.410150,-0.704521,0.895947,-5.430966,5.846462],[-7.536516,4.900327,-8.239177,-1.034107,-0.881698,-0.383664,-4.588452,-5.269055,-3.918210,-4.554407,-3.591556,-1.039652],[-2.424040,-3.893406,8.705986,-6.581856,-9.835343,8.881655,7.134372,-8.776463,5.890998,7.870685,-9.731718,6.469885],[7.030999,-6.995928,-4.098553,-9.565959,-7.600306,-2.185167,-8.218396,9.865284,-9.952889,8.442884,-8.339430,-7.650658]], dtype = "float64")#candidate|7890|(8, 12)|const|float64
var_7891 = relay.var("var_7891", dtype = "float64", shape = (64, 28))#candidate|7891|(64, 28)|var|float64
call_7889 = relay.TupleGetItem(func_4335_call(relay.reshape(const_7890.astype('float64'), [1, 12, 8]), relay.reshape(var_7891.astype('float64'), [1792,]), ), 2)
call_7892 = relay.TupleGetItem(func_4338_call(relay.reshape(const_7890.astype('float64'), [1, 12, 8]), relay.reshape(var_7891.astype('float64'), [1792,]), ), 2)
output = relay.Tuple([call_7865,call_7872,const_7873,call_7879,const_7880,call_7889,const_7890,var_7891,])
output2 = relay.Tuple([call_7866,call_7874,const_7873,call_7881,const_7880,call_7892,const_7890,var_7891,])
func_7911 = relay.Function([var_7891,], output)
mod['func_7911'] = func_7911
mod = relay.transform.InferType()(mod)
mutated_mod['func_7911'] = func_7911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7912 = relay.var("var_7912", dtype = "float64", shape = (64, 28))#candidate|7912|(64, 28)|var|float64
func_7911_call = mutated_mod.get_global_var('func_7911')
call_7913 = func_7911_call(var_7912)
output = call_7913
func_7914 = relay.Function([var_7912], output)
mutated_mod['func_7914'] = func_7914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5341_call = mod.get_global_var('func_5341')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_7925 = relay.TupleGetItem(func_5341_call(), 0)
call_7926 = relay.TupleGetItem(func_5342_call(), 0)
func_4191_call = mod.get_global_var('func_4191')
func_4192_call = mutated_mod.get_global_var('func_4192')
call_7938 = relay.TupleGetItem(func_4191_call(), 0)
call_7939 = relay.TupleGetItem(func_4192_call(), 0)
output = relay.Tuple([call_7925,call_7938,])
output2 = relay.Tuple([call_7926,call_7939,])
func_7954 = relay.Function([], output)
mod['func_7954'] = func_7954
mod = relay.transform.InferType()(mod)
output = func_7954()
func_7955 = relay.Function([], output)
mutated_mod['func_7955'] = func_7955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5887_call = mod.get_global_var('func_5887')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_7970 = func_5887_call()
call_7971 = func_5887_call()
func_3425_call = mod.get_global_var('func_3425')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_7977 = relay.TupleGetItem(func_3425_call(), 4)
call_7978 = relay.TupleGetItem(func_3426_call(), 4)
output = relay.Tuple([call_7970,call_7977,])
output2 = relay.Tuple([call_7971,call_7978,])
func_7982 = relay.Function([], output)
mod['func_7982'] = func_7982
mod = relay.transform.InferType()(mod)
output = func_7982()
func_7983 = relay.Function([], output)
mutated_mod['func_7983'] = func_7983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3425_call = mod.get_global_var('func_3425')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_8012 = relay.TupleGetItem(func_3425_call(), 1)
call_8013 = relay.TupleGetItem(func_3426_call(), 1)
output = call_8012
output2 = call_8013
func_8041 = relay.Function([], output)
mod['func_8041'] = func_8041
mod = relay.transform.InferType()(mod)
mutated_mod['func_8041'] = func_8041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8041_call = mutated_mod.get_global_var('func_8041')
call_8042 = func_8041_call()
output = call_8042
func_8043 = relay.Function([], output)
mutated_mod['func_8043'] = func_8043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7048_call = mod.get_global_var('func_7048')
func_7050_call = mutated_mod.get_global_var('func_7050')
call_8072 = func_7048_call()
call_8073 = func_7048_call()
output = relay.Tuple([call_8072,])
output2 = relay.Tuple([call_8073,])
func_8076 = relay.Function([], output)
mod['func_8076'] = func_8076
mod = relay.transform.InferType()(mod)
mutated_mod['func_8076'] = func_8076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8076_call = mutated_mod.get_global_var('func_8076')
call_8077 = func_8076_call()
output = call_8077
func_8078 = relay.Function([], output)
mutated_mod['func_8078'] = func_8078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7860_call = mod.get_global_var('func_7860')
func_7862_call = mutated_mod.get_global_var('func_7862')
call_8103 = func_7860_call()
call_8104 = func_7860_call()
output = relay.Tuple([call_8103,])
output2 = relay.Tuple([call_8104,])
func_8132 = relay.Function([], output)
mod['func_8132'] = func_8132
mod = relay.transform.InferType()(mod)
mutated_mod['func_8132'] = func_8132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8132_call = mutated_mod.get_global_var('func_8132')
call_8133 = func_8132_call()
output = call_8133
func_8134 = relay.Function([], output)
mutated_mod['func_8134'] = func_8134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6437_call = mod.get_global_var('func_6437')
func_6438_call = mutated_mod.get_global_var('func_6438')
call_8263 = relay.TupleGetItem(func_6437_call(), 0)
call_8264 = relay.TupleGetItem(func_6438_call(), 0)
func_7561_call = mod.get_global_var('func_7561')
func_7566_call = mutated_mod.get_global_var('func_7566')
const_8296 = relay.const([-0.794247,0.416078,-5.659777,6.472040,-4.237099,-7.512272,-9.762404,-5.676902,9.148624,-4.693452,-0.547360,-3.402628,-0.957292,4.713487,6.453464,5.776792,-4.362635,4.601911,9.803223,-0.755975,-8.869419,1.442418,9.088806,9.930504,9.061929,-7.388786,-8.331541,-4.810183,4.025424,7.625994,-0.852796,-3.179997,1.167938,6.983312,2.703864,9.925018,-6.785151,-4.849568,-2.596275,-6.714053,5.105103,7.235062,-9.508087,7.495968,8.705826,-1.805504,7.705540,1.073549,1.475717,0.552670,-7.491784,-2.096167,0.630701,-8.952807,-1.571318,-9.362941,1.162013,7.910701,8.026948,7.606912,6.639699,-0.791895,-3.367531,-2.830933,-5.345742,-5.665411,-8.339025,3.611926,2.232921,1.238040,-0.647495,-7.238520,0.584802,7.669796,-0.633296,9.488847,5.236562,-4.403279,1.573524,8.537505,6.628093,-7.477595,-4.850435,3.229613,8.239081,3.509861,-7.979919,1.202602,7.876296,-2.402924,4.477071,-4.281736,8.180654,7.723808,8.591007,-7.231891,-5.712465,-7.818526,-0.199619,5.765459,-4.032444,-3.041362,-1.218020,-5.318636,-4.461005,4.050942,-9.685917,-2.083437,-5.508472,2.721021,-0.270434,-5.389062,-3.371732,3.286862,6.353394,3.351872,3.356018,-1.573990,0.852348,-2.446640,-5.885100,-8.770004,0.973892,-3.314648,-2.303226,0.110757,-8.864113,0.621286,-3.619924,2.340043,7.929133,6.547655,-0.745546,-8.926327,-7.585569,-0.844784,-5.999378,5.962093,5.054190,-6.850289,2.695832,6.834435,8.404484,7.645165,7.475526,0.121679,4.158700,-0.649106,3.509908,0.558293,4.612486,-1.401944,-9.770512,3.189932,7.875452,7.414394,0.975264,-8.707839,-7.315441,-5.935837,0.927889,-2.187832,-9.785074,-0.418755,-7.369121,4.860299,2.864717,7.695891,6.076230,-3.818871,-8.653458,-0.079268,-3.348818,5.710515,-5.892912,-2.197173,5.602106,-6.265551,1.393595,7.354589,-9.692165,0.951326,-8.617201,-9.306153,2.621555,5.330389,-2.017630,0.683193,-5.869430,0.868164,-9.867435,-3.277869,5.116853,5.581161,-2.183817,-1.484003,7.625147,-8.264587,-8.777301,-1.108012,7.883683,-8.377304,2.280283,-7.950824,-8.470135,-6.345226,-9.907787,-6.822437,2.081588,-5.973606,5.235969,-2.428493,3.679982,-6.927695,5.159310,2.161575,-4.640474,5.898829,-6.866069,-0.018705,6.650720,6.341582,5.557576,0.699204,-5.552126,-1.662726,-2.078503,-2.205375,-8.944273,-0.805346,2.011374,-5.675127,7.168485,4.586277,-4.010416,-1.889580,-7.924116,0.916528,7.531845,-7.932772,-9.293204,7.332443,-2.171219,-4.530932,3.481177,-2.449464,0.699734,-4.051223,-0.404422,-3.533330,7.092880,7.719044,-6.873644,-2.229106,8.262597,2.357482,9.037908,9.202680,2.141987,-3.542603,-4.986208,9.586856,-5.630047,-7.566057,-7.972584,6.128324,4.362667,4.544806,2.644954,8.772398,7.843598,-5.056940,-5.363994,-7.128190,-5.758118,-6.989221,2.104946,-9.901976,0.783374,8.318487,3.961808,-3.464255,1.516486,-6.549538,0.370976,6.510042,7.105546,2.441096,7.247285,5.324118,8.454923,-7.783042,9.345194,-6.523245,3.219981,-3.517491,-7.433908,3.507484,5.693242,-8.092627,-9.802134,3.147076,6.387223,4.735951,-4.577669,-9.045405,-1.422557,-6.445634,4.936381,-0.914701,-9.172139,0.350924,0.373677,-7.129055,5.264810,9.579208,0.019268,9.106677,-7.650636,4.971530,5.959947,-4.261653,7.415513,6.865489,7.712005,1.375278,9.966270,-0.665559,-6.618024,3.288400,1.244083,4.297074,0.686867,6.195292,7.048623,-2.654575,5.142723,-7.831632,9.144426,8.892723,0.372908,8.544444,-9.951972,-7.042004,-5.377225,-7.447546,-8.485274,-7.157987,-5.508748,6.532633,0.454508,-7.435508,-4.480661,7.738287,-0.911457,-3.889442,7.240651,-9.066030,9.515834,-6.394061,-3.600738,8.166986,-1.031299,-2.026736,-8.145490,-3.112201,4.753920,-2.865485,6.607409,-6.160739,-4.209818,-2.274612,-4.290565,0.614916,1.200376,4.710030,-9.866697,-2.143573,9.898714,1.796530,6.788178,0.633528,-0.462455,-8.811170,5.029295,-7.966536,-5.351119,9.048570,5.559236,-7.451134,7.712109,0.692461,2.947897,-5.350782,-7.587787,-8.406963,-6.563033,1.235159,1.443413,-1.507698,-0.641325,-3.356910,7.375585,5.500452,3.257493,3.244701,5.039421,-9.127905,4.479533,2.149684,5.660023,9.869121,5.164313,-2.252959,-8.793441,8.536168,5.454147,5.555136,-1.302764,-9.833895,9.296523,-5.066210,-0.987454,6.314169,0.022193,9.111860,-6.263222,-0.183227,7.925928,-3.256453,-8.003193,-1.300430,5.164562,-3.204951,-7.426955,7.687502,7.482727,8.905526,7.019945,7.360464,2.775321,9.513020,2.168327,-7.622612,-3.630759,-5.029484,-9.876280,0.909776,8.981773,2.622610,-2.663127,0.137712,-8.359571,9.273770,4.564222,4.400151,6.242209,-2.594205,-8.118939,-9.348344,7.032461,7.194607,2.655479,9.622275,7.400281,1.334337,-8.116905,1.264131,4.873948,-9.348858,1.248954,0.994494,-2.026824,2.645820,-3.622066,6.719646,-0.633164,-5.728200,4.415530,-0.042746,-9.878198,-1.246520,-4.339561,-1.936115,-9.957525,-1.344162,-5.526878,9.983652,6.126537,6.537160,-6.386538,1.588528,-1.471201,-1.565513,-1.346759,-9.109210,-9.280648,0.618420,-1.130730,-7.032617,-9.612607,-3.006807,7.581681,3.398378,-4.072292,-1.715884,9.575460,9.921925,6.359477,-1.670714,7.872534,9.774757,8.690200,-4.611239,-3.884694,5.449708,-9.435098,5.411390,2.967351,-8.199765,5.824460,-7.032170,4.074395,-9.592505,4.119340,-4.055116,4.040453,1.754572,-5.793434,-4.779479,-2.571292,6.644993,7.832907,-0.089359,0.156934,-3.366568,-8.715707,6.358239,7.768652,-6.420451,-9.139022,3.403174,-9.832771,3.075875,-3.566242,6.893081,4.985157,1.823906,6.616573,4.135980,1.890595,-4.363157,-0.788451,7.584119,4.361655,-4.427035,-6.604369,-4.824227,-3.057737,9.750139,9.166539,-8.801892,2.199883,-0.628513,9.674752,7.313614,6.050907,-9.018276,1.503583,0.962711,-4.618874,4.168933,4.934642,1.868378,6.540423,3.987445,-1.076245,1.890017,5.804590,-4.573798,0.984387,2.425598,6.293167,-2.712396,6.828125,-3.877718,0.556306,-5.270693,4.571529,2.775479,-1.160142,7.201143,-1.873126,-7.241808,-8.012780,-9.525665,-0.039048,4.900517,-7.975170,8.873248,4.035791,3.249535,0.923381,-5.555386,4.186387,1.194537,-4.670638,-9.167808,8.659733,-3.031130,-3.535732,7.893862,9.872591,-3.367492,-4.273118,5.751924,7.100045,-3.843564,2.326733,5.236059,-9.341219,-4.013815,-2.480013,9.351535,-6.543075,0.949217,0.214040,1.105685,5.372234,-3.139708,3.140840,-9.598015,-7.830614,7.127635,8.580876,-6.911844,2.331285,-8.034471,-2.581423,8.591878,7.994118,0.386905,4.512762,6.208592,-6.555422,-6.335737,-5.990529,1.366638,-7.022264,-6.998584,5.027349,3.782300,1.650752,-8.470700,-0.481776,-1.781762,4.565559,-3.205733,1.544258,8.012613,6.326240,1.809066,-4.704146,-6.622305,-5.348971,-1.765350,1.569366,-0.326337,2.855257,-0.665516,9.871968,-5.312262,-0.617485,3.170430,-3.466475,-9.570192,7.036096,8.382366,-5.664722,-1.301493,-9.022900,-5.727339,-1.115997,5.710658,-7.048020,9.853197,-6.699339,-0.548208,-9.277337,-6.739650,-9.903395,-1.094136,3.257929,-2.583105,6.354570,-4.734339,8.763494,-8.300555,1.435056,-3.405371,1.689870,6.384950,5.188618,8.055168,-3.383843,-2.936479,-9.119745,-0.578379,7.681226,9.728732,8.408805,-2.291417,-6.676648,-0.159440,-1.050289,5.575991,7.231611,-5.193404,-1.533322,-0.242971,8.948916,-6.272879,-6.735953,7.332853,9.011514,-9.794831,-3.519952,4.391593,8.599342,7.873246,-4.627938,-6.743961,8.727685,-3.476987,-0.934817,-0.119329,-0.790570,9.007521,6.072095,-2.970385,9.280696,2.725632,0.591689,-0.227448,4.732258,4.567744,8.966685,8.004903,-0.924066,-4.746584,-7.999878,-6.388556,5.358328,6.903612,8.112521,9.020968,0.126398,-7.394685,-0.764200,8.494987,-8.721582,3.376836,-0.465390,1.458316,6.274632,8.798865,-2.563859,-0.312410,3.103989,7.249073,2.034343,3.107957,6.578007,4.918230,9.891752,2.038787,4.736035,5.285182,5.365986,-8.078646,-7.603632,5.156790,-4.796123,5.409413,7.199764,-0.361413,7.412600,6.910120,6.078746,-2.530165,-2.419232,3.726263,0.571476,2.151936,7.768175,2.977527,-3.824580,-6.973109,-1.572332,-8.635552,-6.656339,-9.801978,5.571273,3.640132,-0.002836,0.034447,1.431323,4.717278,1.111632,-3.209239,-7.978949,-1.935830,-0.586429,3.768711,-3.063766,-8.924289,-8.516654,3.131104,8.576923,7.783783,-1.996721,-8.418855,2.534526,-1.530387,-2.693197,9.602782,-8.186699,7.544535,-7.858735,0.958816,7.024150,-4.568491,-8.797164,3.798918,-5.294588,-3.105563,2.509999,-1.050403,-7.982453,8.857463,6.345049,9.182064,-6.835666,-3.781522,-3.018049,-9.726350,-9.212433,2.393484,-1.200374,-0.399324,7.418330,6.322408,2.800875,4.004421,9.053401,-1.955705,4.327381,-9.015590,8.774695,1.977912,8.133316,7.415615,-3.980831,-9.475069,5.738788,7.235927,7.057224,8.348382,-8.258526,-7.216732,2.496060,2.974885,2.546252,-6.445010,-9.859904,-6.305479,0.805341,4.916341,-6.350703,-5.619191,-7.771289,3.102662,9.148129,-3.545627,1.143999,0.781384,-5.622813,-0.986190,-4.196094,-5.489240,-4.784130,-2.924735,-7.186259,0.987973,-3.425001,-2.089504,1.033075,-4.254868,-2.838341,-3.026420,-8.054779,-7.845616,-0.609317,-3.698777,9.292798,-7.236845,3.251551,-0.131587,-5.658876,-1.900933,6.840779,-2.642226,-4.554019,0.426825,1.177219,3.843145,5.998254,-7.377286,-9.780775,5.034655,1.995487,1.267988,-6.149787,-4.960204,2.807626,1.673472,3.258733,9.664448,7.100893,-4.914391,-7.566187,-5.287825,9.630423,-0.870191,3.979125,-6.860166,7.827084,4.002316,0.967031,-9.166908,-4.761840,3.874031,2.133894,-5.906060,-1.892659,-1.864667,-6.500761,-0.615008,5.239303,4.634521,-6.922467,-4.512234,5.753318,-7.275722,7.203521,3.158986,-2.957125,-1.190235,4.870484,-0.394430,4.229444,-0.270460,4.272313,-5.153662,7.156333,5.605856,8.328100,7.525174,7.124956,7.030639,8.383278,5.003129,7.975861,0.564312,-8.310615,-6.988385,-3.086762,1.925972,-2.403259,9.042429,4.235744,8.500005,-1.490301,9.043371,-4.036831,-7.037800,6.329891,-6.997791,0.155211,2.051845,5.566001,-7.449573,-3.884721,-9.187152,9.790879,2.872827,-5.511277,9.085364,2.318762,2.360606,6.717891,4.462224,7.495005,9.708983,-0.098645,-2.572014,5.103918,4.674439,-7.085137,-8.794779,6.204878,-3.775795,-8.434568,-0.370777,-2.477318,-1.337624,-8.755521,-5.243409,3.639211,-0.724058,-0.908619,8.860789,8.177657,3.095595,-2.628262,6.914517,7.679140,-6.368177,8.002326,-3.409544,-4.214648,1.162281,-1.951715,-2.051350,-1.637443,1.357059,7.362788,-0.947553,-6.439238,-5.960556,9.116080,-8.410784,0.399099,-7.051134,-9.371330,-9.133107,8.222203,9.108936,1.082831,2.728297,-6.844184,-5.402601,-8.531173,3.251011,-5.464128,8.322985,8.358970,9.792298,-8.353480,-3.558588,-0.152138,9.408214,-1.283649,8.978637,-4.985530,2.423771,-5.162296,-9.055361,-2.837864,6.587063,9.220691,-2.728957,-9.219206,4.919491,-8.947100,2.013276,-5.251940,-6.092099,7.687620,-7.399077,9.693827,5.698139,6.766052,-5.305226,1.925956,5.509723,-1.156506,1.123779,0.916718,-7.322701,-8.285854,-0.944970,-6.123326,-8.099425,-2.089183,-0.986077,-5.762078,9.152896,8.865728,-8.543549,8.559126,-7.723690,2.927920,5.524400,-5.730843,-0.585543,9.864864,-5.943542,-6.744181,-7.981207,0.234608,-3.886869,-2.885355,-2.408498,2.905068,-7.632684,-5.109898,-0.833968,-4.990503,-2.525867,7.583275,-2.195039,0.191213,6.612615,0.473818,-4.086651,-8.996696,-8.759934,0.077080,-4.823232,2.006231,8.173831,1.875135,-8.466284,6.426951,0.566248,6.500890,-4.658441,-4.163763,-9.743061,7.955080,-6.394392,6.289342,-9.310855,4.700768,9.140716,0.450710,-4.799182,9.986685,-3.962202,6.326927,1.138534,7.808583,6.835334,9.505850,8.910243,6.716499,-6.020077,2.806320,6.922060,-8.637593,7.548334,5.583420,-0.426350,-8.207975,-6.148688,-9.551264,6.414759,9.634854,5.376805,-5.707772,9.882285,4.314006,1.953163,-7.627451,8.721993,4.931887,-6.046708,7.129177,7.125753,0.189801,9.004187,-4.325873,-4.520623,-3.824272,-5.069912,-8.915373,-2.832667,-6.474186,-5.975573,-6.106625,0.734955,6.926734,-2.863110,-3.779733,-5.793372,5.900246,-5.674989,-0.307310,0.566164,-0.205610,-1.290196,3.601590,-2.058591,-6.462832,-0.555880,0.421105,-7.142067,0.867735,1.479842,0.339726,-2.722135,0.323374,-2.788605,6.510218,-5.405446,9.864798,-6.665581,7.564083,-8.946278,-7.458212,-6.605333,-9.760010,-7.547788,-0.664558,-0.713731,3.919750,-6.284993,3.724003,3.229624,5.632923,-4.391197,-4.746350,2.575134,-5.671411,2.162164,7.471655,-4.202426,-8.129799,9.228074,-3.054651,-0.036548,-1.151333,-4.623643,7.784414,-3.129444,-3.634119,-7.227190,-1.450496,-0.496354,3.054061,6.601041,-5.731748,5.123154,-1.823389,6.938499,-7.803052,-9.197882,-1.022006,-1.185862,-0.677523,-4.750419,4.126450,1.934371,8.204315,-2.607339,2.470493,0.655057,3.051286,6.674831,3.338274,-3.965461,-3.936996,2.089111,-3.619254,1.494335,-1.443482,5.672725,-4.151830,1.003386,-2.110188,-0.120797,2.953790,9.552988,-7.939702,-0.626881,9.152125,7.469783,-0.650066,7.779570,-7.818386,6.440905,-9.729645,9.507477,-3.068460,-4.095630,-5.838980,-7.544006,-4.850706,4.274804,-4.215316,8.417683,-9.100056,-9.814513,7.784153,2.776032,-0.167735,-4.535159,7.830063,0.175647,3.246768,3.062008,-9.552129,0.953063,0.508051,-3.524321,1.123010,-8.083357,-7.135925,-7.859888,-1.038091,-0.894896,-0.853917,7.221843,-7.600670,7.602920,6.237899,1.991052,4.911630,-9.038914,7.261798,-1.546180,-8.285862,5.066808,7.181465,-1.681846,1.947076,-3.510593,-3.050188,-5.378369,-7.406415,-4.544054,-4.377416,-9.174808,-3.272230,-6.271461,6.506448,-6.112059,7.336829,-5.809343,0.950395,-5.211992,3.953396,4.991803,8.557838,-8.654309,4.856707,9.829066,1.067352,7.601510,-8.549241,5.613271,5.096298,-2.667886,6.745863,6.966525,4.422609,-6.763154,8.497398,-4.081603,5.805266,-7.680039,7.547081,-8.947322,4.997211,0.687276,8.754274,7.816826,-6.978602,-5.076106,5.169133,9.432785,3.589024,8.276010,5.072892,4.913858,9.124291,9.505516,0.653429,2.378583,-4.877976,0.415136,2.227662,-3.670102,-9.331066,-2.661817,-0.200538,-3.439308,7.544015,-7.894371,-8.725859,3.328673,-6.822504,-7.277537,-9.755704,-8.253712,-5.756160,-6.694049,7.506745,-8.653558,7.006113,8.350309,-0.660977,-7.902846,8.282612,-0.136824,-2.980150,8.232284,-1.570279,8.666532,8.801609,9.850786,0.810295,-8.261993,-3.981202,-4.888877,1.651203,-9.817936,9.755269,6.910002,3.134299,-3.668474,6.832815,-5.614561,-4.747875,-8.661542,-4.934982,2.380290,3.160236,-1.620976,-4.343061,-6.603617,-8.870899,3.399698,9.391773,-6.746342,-6.952380,-4.696327,0.144469,-2.503670,-9.812877,9.577550,-9.683811,-2.050661,-7.120067,-4.463564,2.946104,-0.274508,7.986763,-3.191399,-8.075661,1.259698,8.757152,-4.726032,7.590947,-3.347810,4.572046,-5.786474,0.744950,-1.942250,9.222033,-0.431672,8.307809,-9.196407,7.613563,5.171650,4.735448,-6.962457,-6.463081,7.304750,2.646484,-6.006346,-5.436799,5.340236,5.093533], dtype = "float64")#candidate|8296|(1485,)|const|float64
const_8297 = relay.const([[1.607523,-0.648103,6.725571,-7.514433],[-2.538405,9.319940,-1.999452,-8.704804],[4.608360,-5.692862,2.982260,8.948881],[2.918268,0.524737,-2.160100,7.589611],[-3.943969,-0.693225,7.625309,7.346907],[-9.527798,2.160081,3.977784,-9.576585],[-6.954705,-3.285121,-1.702164,-9.352436],[0.029691,0.316385,1.623934,0.109230],[-6.367682,8.075432,-0.009937,-9.069014],[-1.445915,0.046545,6.115375,-1.833797],[3.270446,-7.899784,-8.767095,7.518893],[-3.902830,8.225768,-3.584931,-6.667748],[8.382444,-4.906552,-8.283817,-5.237621],[-3.973803,-5.475880,8.185019,2.588939],[-7.571107,6.392109,3.296557,-7.750651],[5.785328,4.307068,-7.782319,4.954387],[-9.239204,5.427632,-2.368234,3.237379],[-7.808390,-9.589724,-7.902085,-8.719966],[2.566080,9.615822,-7.216307,0.859089],[9.883646,4.900720,-8.172327,6.371586],[6.108521,6.037045,-6.481797,-1.549554],[-0.464517,5.265568,8.230789,0.870311],[3.784778,1.142446,-5.846442,5.227263],[4.834579,5.354748,9.084303,-9.282407],[-6.722499,-8.493677,-4.454976,1.760717],[-6.338784,4.608088,-5.560104,-9.379627],[5.098289,1.262385,-3.079628,-6.073788],[-7.426820,4.828828,-2.031566,-3.648114],[3.531884,-6.416199,1.987112,0.333029],[-2.009530,7.756271,4.571974,-7.664694],[7.847800,3.243105,-2.840943,-9.451505],[8.223135,2.214552,3.406538,-6.594615],[-5.781386,9.335653,-1.516263,9.896299],[8.706149,0.400195,2.850677,-0.103381],[-4.394648,-4.947082,9.468473,2.325055],[4.178979,-4.744120,-2.099158,6.680680],[7.371430,-7.105949,4.679273,-2.094434],[6.545547,-3.651844,5.560802,9.889055],[-3.039815,4.739769,-1.319087,-9.407191],[6.298620,8.957722,-8.451295,-9.771846],[6.283651,0.840195,6.259503,3.341248],[-6.934590,3.024435,-8.216003,7.748240],[-2.283443,-5.567134,1.306654,-5.509783],[-3.294990,-8.258547,9.197682,-4.236176],[6.905625,7.223799,-0.552140,6.226339],[-6.802630,-6.654359,-9.799511,9.526417],[-9.366983,8.255751,5.088028,-5.253182],[7.804431,-6.815364,-7.969119,4.005629],[-8.506751,-2.203505,-9.470324,8.704588],[-2.127726,1.687449,2.419724,4.990803],[6.736340,3.216872,6.692502,-7.353505],[-2.536858,2.052529,7.027433,0.167283],[0.370834,-9.243667,6.294297,3.103912],[-7.004460,-5.776181,2.419287,8.626762],[8.224212,0.587547,2.676778,3.445620],[-8.917615,-4.999335,-8.169590,-2.341073],[7.132215,0.216377,-7.871822,-7.658988],[9.158441,2.548495,-2.745649,5.057576],[9.465629,-7.680247,-5.374735,2.006999],[-7.471959,5.092919,0.235715,2.108460],[-3.751176,1.264000,3.869439,9.872359],[3.323639,6.858838,-7.430878,9.951702],[-6.585121,-6.107949,3.367712,3.928775],[0.449783,-3.175573,-6.912649,2.935344],[-0.189382,-8.180849,-1.776071,6.364722],[-1.246751,1.915907,4.481031,-1.719001],[7.352914,6.979399,-1.977712,-2.633534],[0.501106,-1.867881,-8.684245,-9.598201],[4.616641,-2.355507,3.306362,2.777676],[9.045610,-8.047062,3.425831,-7.870056],[8.467922,9.548663,-1.537650,8.827349],[1.322252,-6.695156,5.282358,-3.110973],[1.472065,-6.025221,-1.497594,-0.894918],[-4.970060,3.690831,9.204364,-0.235719],[7.418634,1.155440,-2.991255,9.691180],[-0.615153,5.139163,-7.504511,-6.626773],[9.396044,-7.929489,-3.521570,9.418520],[4.933186,-1.930141,-8.984993,3.054398],[7.349295,7.425142,9.177148,8.609422],[-7.180712,0.512459,-3.644203,-9.334407]], dtype = "float32")#candidate|8297|(80, 4)|const|float32
var_8298 = relay.var("var_8298", dtype = "float32", shape = (1078,))#candidate|8298|(1078,)|var|float32
call_8295 = relay.TupleGetItem(func_7561_call(relay.reshape(const_8296.astype('float64'), [1485,]), relay.reshape(const_8297.astype('float32'), [320,]), relay.reshape(var_8298.astype('float32'), [1078,]), ), 7)
call_8299 = relay.TupleGetItem(func_7566_call(relay.reshape(const_8296.astype('float64'), [1485,]), relay.reshape(const_8297.astype('float32'), [320,]), relay.reshape(var_8298.astype('float32'), [1078,]), ), 7)
output = relay.Tuple([call_8263,call_8295,const_8296,const_8297,var_8298,])
output2 = relay.Tuple([call_8264,call_8299,const_8296,const_8297,var_8298,])
func_8300 = relay.Function([var_8298,], output)
mod['func_8300'] = func_8300
mod = relay.transform.InferType()(mod)
var_8301 = relay.var("var_8301", dtype = "float32", shape = (1078,))#candidate|8301|(1078,)|var|float32
output = func_8300(var_8301)
func_8302 = relay.Function([var_8301], output)
mutated_mod['func_8302'] = func_8302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7954_call = mod.get_global_var('func_7954')
func_7955_call = mutated_mod.get_global_var('func_7955')
call_8319 = relay.TupleGetItem(func_7954_call(), 1)
call_8320 = relay.TupleGetItem(func_7955_call(), 1)
output = relay.Tuple([call_8319,])
output2 = relay.Tuple([call_8320,])
func_8335 = relay.Function([], output)
mod['func_8335'] = func_8335
mod = relay.transform.InferType()(mod)
mutated_mod['func_8335'] = func_8335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8335_call = mutated_mod.get_global_var('func_8335')
call_8336 = func_8335_call()
output = call_8336
func_8337 = relay.Function([], output)
mutated_mod['func_8337'] = func_8337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6437_call = mod.get_global_var('func_6437')
func_6438_call = mutated_mod.get_global_var('func_6438')
call_8352 = relay.TupleGetItem(func_6437_call(), 0)
call_8353 = relay.TupleGetItem(func_6438_call(), 0)
func_7982_call = mod.get_global_var('func_7982')
func_7983_call = mutated_mod.get_global_var('func_7983')
call_8358 = relay.TupleGetItem(func_7982_call(), 1)
call_8359 = relay.TupleGetItem(func_7983_call(), 1)
func_6015_call = mod.get_global_var('func_6015')
func_6016_call = mutated_mod.get_global_var('func_6016')
call_8361 = func_6015_call()
call_8362 = func_6015_call()
output = relay.Tuple([call_8352,call_8358,call_8361,])
output2 = relay.Tuple([call_8353,call_8359,call_8362,])
func_8369 = relay.Function([], output)
mod['func_8369'] = func_8369
mod = relay.transform.InferType()(mod)
output = func_8369()
func_8370 = relay.Function([], output)
mutated_mod['func_8370'] = func_8370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7148_call = mod.get_global_var('func_7148')
func_7150_call = mutated_mod.get_global_var('func_7150')
call_8461 = relay.TupleGetItem(func_7148_call(), 0)
call_8462 = relay.TupleGetItem(func_7150_call(), 0)
output = relay.Tuple([call_8461,])
output2 = relay.Tuple([call_8462,])
func_8471 = relay.Function([], output)
mod['func_8471'] = func_8471
mod = relay.transform.InferType()(mod)
mutated_mod['func_8471'] = func_8471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8471_call = mutated_mod.get_global_var('func_8471')
call_8472 = func_8471_call()
output = call_8472
func_8473 = relay.Function([], output)
mutated_mod['func_8473'] = func_8473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7400_call = mod.get_global_var('func_7400')
func_7401_call = mutated_mod.get_global_var('func_7401')
call_8493 = func_7400_call()
call_8494 = func_7400_call()
func_3536_call = mod.get_global_var('func_3536')
func_3537_call = mutated_mod.get_global_var('func_3537')
call_8498 = relay.TupleGetItem(func_3536_call(), 0)
call_8499 = relay.TupleGetItem(func_3537_call(), 0)
output = relay.Tuple([call_8493,call_8498,])
output2 = relay.Tuple([call_8494,call_8499,])
func_8501 = relay.Function([], output)
mod['func_8501'] = func_8501
mod = relay.transform.InferType()(mod)
output = func_8501()
func_8502 = relay.Function([], output)
mutated_mod['func_8502'] = func_8502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5491_call = mod.get_global_var('func_5491')
func_5493_call = mutated_mod.get_global_var('func_5493')
call_8517 = relay.TupleGetItem(func_5491_call(), 0)
call_8518 = relay.TupleGetItem(func_5493_call(), 0)
func_5765_call = mod.get_global_var('func_5765')
func_5766_call = mutated_mod.get_global_var('func_5766')
call_8519 = func_5765_call()
call_8520 = func_5765_call()
func_541_call = mod.get_global_var('func_541')
func_545_call = mutated_mod.get_global_var('func_545')
const_8524 = relay.const([5.605724,6.915035,-1.856472,-2.757395,6.994795,8.569009,-0.748722,-5.141570,-4.075088,9.846585,6.097804,3.522595,-3.813266,0.720171,7.938349,6.220287,-6.933463,-8.583512,-3.212317,7.522090,-6.754687,-3.359119,0.850053,6.932966,3.417295,5.948403,-1.234343,-0.703960,-1.516724,-3.334353,0.574316,0.148224,-2.953866,2.067807,-1.367230,-4.321481,0.676116,7.577817,9.527288,-3.324477,-7.471005,-2.583821,1.644314,5.328099,-6.268246,2.122784,2.455975,4.597666,-0.651023,-4.270984,5.737914,1.668022,9.881025,-7.037946,6.712426,9.221703,-8.862034,-2.960506,-9.023303,-0.589580,8.023949,-7.065814,-4.921597,-8.434715,-8.722068,9.209869,9.627593,-9.917787,7.331495,-5.319329,-9.195897,-6.588312,0.558620,-8.726376,-0.284760,-1.483251,-4.618413,-7.759826,-1.085765,6.828701,2.166560,8.884163,8.360520,9.846689,-7.960305,2.073689,0.313353,8.467434,-7.070068,-9.503475,-4.408062,-8.758518,-4.711533,4.053509,7.186790,5.834607,7.692707,8.094772,5.878396,-8.669220,-2.922689,-7.046229,7.943887,-1.823868,5.426470,9.852509,8.426962,-9.713791,-9.584550,5.920214,-7.782820,0.006333,8.864052,-7.597488,2.215554,-5.687631,-7.716188,-9.300923,-3.015695,7.327738,5.491322,-9.865577,-1.723193,-8.480503,-8.993967,-4.905520,3.112782,2.020977,-6.564570,7.626471,-0.117703,-9.992441,-6.086510,-4.812928,5.088877,-2.223772,-5.233372,-9.915357,6.396931,-0.547858,-1.102233,-2.777149,-2.965771,-2.844197,6.939893,-5.252569,4.511229,-5.438915,8.549888,-1.802907,-8.273425,-5.962973,3.426837,9.897476,3.475321,6.149580,-6.431483,1.750900,6.749136,2.724938,8.632649,-6.813074,-7.330276,-7.473823,1.145878,9.577917,1.610586,6.253078,-5.092781,4.070262,-6.103419,2.739611,-0.199582,2.853953,-8.626436,-1.158040,-8.788860,-2.446449,6.201587,1.064285,5.350827,-4.792680,-1.440500,-2.326577,-6.770959,-8.618765,-5.454019,9.897021,3.423348,-3.533403,-8.207873,8.420718,4.346474,5.319859,2.255997,1.115252,6.691542,4.507712,0.563535,-1.053940,-0.716561,-7.468204,-5.431283,5.635448,-1.998734,1.525066,5.362407,-0.332301,-9.039221,4.404054,-8.542400,2.146849,7.479270,9.200699,-1.288736,-9.636118,-0.376528,4.514102,4.413894,-0.240069,-0.911299,-5.234692,2.961958,-5.699064,-5.316588,4.272282,-9.325191,3.834045,5.153160,3.269622,-9.246457,-0.803815,-1.232470,-1.412029,7.687332,-1.472699,-4.280784,0.628691,4.595913,-3.136178,3.515925,-4.916159,-3.656968,4.616962,-5.042924,3.853087,5.680218,0.080564,3.460108,4.066130,0.334581,-8.660202,-8.510702,8.158512,8.259904,2.708464,2.306729,-7.670697,0.244837,1.371695,-2.298274,3.746196,5.023702,-6.962915,-4.095081,9.420233,0.047254,7.713902,8.392038,4.557905,-9.727461,6.434267,-9.931020,5.738814,-5.408611,1.580822,5.949230,-5.318036,8.219712,3.667654,-6.252043,9.921245,-4.493921,2.337214,9.704804,-7.692017,6.895759,8.091644,-8.306462,-2.779802,-0.127865,6.445283,-4.488321,-6.568829,-3.211084,6.544141,-2.954351,-7.053998,3.679491,-1.271011,-4.362320,4.948624,-5.592777,4.876769,0.369864,3.172746,0.147622,-2.067180,-4.490550,-0.460271,-4.184578,6.396763,-3.310301,-4.961315,5.719591,4.776197,5.585850,-6.045429,0.602433,-9.918933,6.242651,-5.792192,2.528208,-7.312545,9.423611,-4.971551,-7.208029,-8.343837,-6.036961,-8.563329], dtype = "float32")#candidate|8524|(330,)|const|float32
call_8523 = func_541_call(relay.reshape(const_8524.astype('float32'), [2, 15, 11]), relay.reshape(const_8524.astype('float32'), [2, 15, 11]), )
call_8525 = func_541_call(relay.reshape(const_8524.astype('float32'), [2, 15, 11]), relay.reshape(const_8524.astype('float32'), [2, 15, 11]), )
output = relay.Tuple([call_8517,call_8519,call_8523,const_8524,])
output2 = relay.Tuple([call_8518,call_8520,call_8525,const_8524,])
func_8526 = relay.Function([], output)
mod['func_8526'] = func_8526
mod = relay.transform.InferType()(mod)
output = func_8526()
func_8527 = relay.Function([], output)
mutated_mod['func_8527'] = func_8527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3691_call = mod.get_global_var('func_3691')
func_3693_call = mutated_mod.get_global_var('func_3693')
call_8560 = relay.TupleGetItem(func_3691_call(), 0)
call_8561 = relay.TupleGetItem(func_3693_call(), 0)
output = relay.Tuple([call_8560,])
output2 = relay.Tuple([call_8561,])
func_8566 = relay.Function([], output)
mod['func_8566'] = func_8566
mod = relay.transform.InferType()(mod)
output = func_8566()
func_8567 = relay.Function([], output)
mutated_mod['func_8567'] = func_8567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4191_call = mod.get_global_var('func_4191')
func_4192_call = mutated_mod.get_global_var('func_4192')
call_8581 = relay.TupleGetItem(func_4191_call(), 0)
call_8582 = relay.TupleGetItem(func_4192_call(), 0)
func_515_call = mod.get_global_var('func_515')
func_520_call = mutated_mod.get_global_var('func_520')
const_8584 = relay.const([2,-4,-3,-9,-9,-1,10,8,-7,-8,9,-1,6,-8,-5,-7,-4,-4,-7,7,-5,-10,-6,-1,-3,1,-4,7,-10,-1,5,2,8,-10,10,-1,-4,10,-9,4,9,6,-10,3,9,4,1,-7,3,-4,-5,-8,5,-10,10,-8,9,-4,10,-8,-3,-3,10,5,-7,8,3,-10,7,-3,-2,-8,9,-2,3,-8,-2,-3,10,8,9,7,4,-2,-7,-8,10,-2,9,-7], dtype = "int16")#candidate|8584|(90,)|const|int16
const_8585 = relay.const([[7,-3,5,7,3,-9,6,-9,6,5,6,8,-1,-1,9,4,-1,6,-1,9,-6,-2,8,1,9,-10,7,8,-3,1,-6,7,-4,-7,-5,-8,-7,-7,2,-1,-3,5,-8,-8,-1,2,-5,-9,1,3,2,-9,4,8,-4,-6,-9,-7,-3,10,5,5,1,1,10,6,-7,-5,-10,8,9,1,4,-6,4,-3,8,-10,-2,8,7,5,10,-7,-10,-6,-9,-8,-4,2,-10,6,-4,4,-9,9,-8,-4,-2,-1,-7,3,2,3,-8,4,1,-6,8,3,4,-7,-4,-1,5,-1,6,10,-7,-6,9,3,-1,7,8,-9,1,5,1,4,-5,-8,-8,1,-1,-10,-6,-10,-3,6,-8,4,-5,5,-4,-9,3,-1,6,-8,-8,7,3,-1,-6,-8,4,-2,-2,4,-7,6,-10,10,-1,-3,9,1,9,8,8,8,7,-10,10,-6,7,-4,9,3],[6,-8,-5,-7,-10,-10,1,2,-9,-1,-8,-3,-7,4,-4,-7,-4,-5,4,3,-9,4,-10,-1,1,-7,7,6,10,-1,8,7,2,10,4,-4,6,-2,-6,-7,-5,8,6,-5,5,-3,7,-4,1,-7,-9,7,-8,-4,-4,-1,-5,10,-4,-8,-4,-1,-10,-9,9,6,-8,-3,-4,1,8,-6,3,-4,10,6,-4,2,-2,-5,-9,-8,5,-3,10,4,8,-9,-5,-7,-7,-8,10,5,3,4,4,-8,7,6,5,-3,2,-3,-7,2,7,-4,-2,-10,2,8,8,-3,-5,-10,10,5,-7,1,-1,7,4,5,-4,-2,9,-10,-4,-1,3,1,-5,7,5,8,-10,-5,8,-2,-7,9,-2,2,-4,-9,4,-2,8,-3,-5,10,5,10,5,8,-4,-7,-5,-6,-4,6,5,-9,5,-6,2,-6,1,-2,5,8,6,10,6,10,9,10,-6,-8]], dtype = "int16")#candidate|8585|(2, 180)|const|int16
var_8586 = relay.var("var_8586", dtype = "float64", shape = (10,))#candidate|8586|(10,)|var|float64
call_8583 = relay.TupleGetItem(func_515_call(relay.reshape(const_8584.astype('int16'), [6, 15, 1]), relay.reshape(const_8585.astype('int16'), [6, 15, 4]), relay.reshape(var_8586.astype('float64'), [5, 2]), ), 0)
call_8587 = relay.TupleGetItem(func_520_call(relay.reshape(const_8584.astype('int16'), [6, 15, 1]), relay.reshape(const_8585.astype('int16'), [6, 15, 4]), relay.reshape(var_8586.astype('float64'), [5, 2]), ), 0)
func_5714_call = mod.get_global_var('func_5714')
func_5716_call = mutated_mod.get_global_var('func_5716')
var_8606 = relay.var("var_8606", dtype = "float32", shape = (2, 192))#candidate|8606|(2, 192)|var|float32
call_8605 = relay.TupleGetItem(func_5714_call(relay.reshape(var_8606.astype('float32'), [2, 12, 16])), 0)
call_8607 = relay.TupleGetItem(func_5716_call(relay.reshape(var_8606.astype('float32'), [2, 12, 16])), 0)
output = relay.Tuple([call_8581,call_8583,const_8584,const_8585,var_8586,call_8605,var_8606,])
output2 = relay.Tuple([call_8582,call_8587,const_8584,const_8585,var_8586,call_8607,var_8606,])
func_8608 = relay.Function([var_8586,var_8606,], output)
mod['func_8608'] = func_8608
mod = relay.transform.InferType()(mod)
var_8609 = relay.var("var_8609", dtype = "float64", shape = (10,))#candidate|8609|(10,)|var|float64
var_8610 = relay.var("var_8610", dtype = "float32", shape = (2, 192))#candidate|8610|(2, 192)|var|float32
output = func_8608(var_8609,var_8610,)
func_8611 = relay.Function([var_8609,var_8610,], output)
mutated_mod['func_8611'] = func_8611
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8673 = relay.var("var_8673", dtype = "int32", shape = (11, 3, 12))#candidate|8673|(11, 3, 12)|var|int32
var_8674 = relay.var("var_8674", dtype = "int32", shape = (11, 3, 12))#candidate|8674|(11, 3, 12)|var|int32
bop_8675 = relay.bitwise_or(var_8673.astype('int32'), relay.reshape(var_8674.astype('int32'), relay.shape_of(var_8673))) # shape=(11, 3, 12)
bop_8688 = relay.left_shift(bop_8675.astype('uint8'), relay.reshape(var_8674.astype('uint8'), relay.shape_of(bop_8675))) # shape=(11, 3, 12)
uop_8703 = relay.log2(var_8673.astype('float32')) # shape=(11, 3, 12)
func_5937_call = mod.get_global_var('func_5937')
func_5941_call = mutated_mod.get_global_var('func_5941')
var_8732 = relay.var("var_8732", dtype = "float64", shape = ())#candidate|8732|()|var|float64
var_8733 = relay.var("var_8733", dtype = "float64", shape = (42,))#candidate|8733|(42,)|var|float64
const_8734 = relay.const([[5,9,10,-6,7,-5,10,-5,10,-6,5,-2,-8,7,-2,-7,-10,-4,8,7,4,6,10,2,9,8,9,4,8,5,6,-4,8,-7,10,2,7,-7,-9,10,6,3,8,3,9,-6,9,1,10,2,1,-3,1,-7,10,8,5,-1,1,1,-1,-4,6,6,5,-5,3,7,9,-6,-9,-5,8,-7,10,-10,4,-3,-1,-4,8,-5,7,-9,-3,-5,1,-9,6,9,-6,10,3,8,-2,-2,-4,-3,6,9,-9,4,-4,9,10,7,9,6,9,-7,10,3,-4,-5,8,-2,8,-7,10,4,5,8,9,7,-1,10,4,7,10,10,8,7,9,-8,-1,3,-4,-2,-6,-2,5,-2,7,-9,-1,-7,5,5,-7,5,5,-5,-8,1,-6,-2,-7,10,-4,-1,1,4,-1,10,-1,-7,10,3,-7,-1,-9,5,-9,-10,-5,-8,6,-4,10,-6,-8,5,-2,-5,5,3,-1,10,3,-1,-10,9,-10,4,7,-8,10,3,6,-3,4,-6,6,4,-7,-10,-5,-2,1,2,-5,-1,6,7,1,-4,7,1,6,-3,-2,10,3,2,-10,-2,-7,-10,-6,-4,6,-4,-7,-4,-2,-6,3,4,1,-10,10,-6,2,9,-10,6,10,8,-7,-10,1,-5,-5,-10,3,-5,-9,-10,-6,2,-2,1,10,-9,4,-6,-9,-1,8,-9,1,-5,-7,-3,4,9,4,9,-1,-9,-10,-2,-5,-3,6,5,-8,-8,-7,-7,8,6,10,-4,-6,8,1,4,4,-1,9,-8,8,1,-10,-6,-8,8,10,9,-8,-1,-8,5,2,4,3,10,9,9,-2,8,9,-8,-2,4,-5,-1,2,8,-3,7,4,7,9,-5,-3,2,10,3,-8,-2,-4,9,8,-9,-10,6,4,-7,1,7,-6,-6,-1,-6,5,-6,-2,4,2,2,-8,4,-4,-6,-7,-9,-1,7,5,1,-3,1,-1,7,8,3,-6,9,-10,-4,-7,-9,-1,2,-10,-10,-1,-10,7,6,-7,-1,-8,2,7,-4,-3,5,-9,-2,10,-4,2,-3,-3,4,8,2,6,-3,-4,-7,1,-10,9,-1,-3,-1,-1,6,3,-4,5,-6,-2,6,-5,-10,7,9,4,-6,-7,4,1,-3,-9,-5,3,-7,-10,10,6,-4,-1,-8,4,-2,10,10,3,8,-2,-6,4,-9,-4,10,10,4,8,6,5,5,-3,1,-10,-10,1,7,-9,10,7,5,7,-1,-1,-8,-5,4,-10,6,3,4,1,-9,-10,-6,-2,-4,-2,3,2,-2,8,6,2,-10,9,-8,5,-3,-10,-2,1,1,-3,-7,-10,3,-6,6,3,2,9,-2,-9,9]], dtype = "int64")#candidate|8734|(1, 520)|const|int64
call_8731 = relay.TupleGetItem(func_5937_call(relay.reshape(var_8732.astype('float64'), []), relay.reshape(var_8733.astype('float64'), [42,]), relay.reshape(const_8734.astype('int64'), [13, 8, 5]), ), 3)
call_8735 = relay.TupleGetItem(func_5941_call(relay.reshape(var_8732.astype('float64'), []), relay.reshape(var_8733.astype('float64'), [42,]), relay.reshape(const_8734.astype('int64'), [13, 8, 5]), ), 3)
output = relay.Tuple([bop_8688,uop_8703,call_8731,var_8732,var_8733,const_8734,])
output2 = relay.Tuple([bop_8688,uop_8703,call_8735,var_8732,var_8733,const_8734,])
func_8746 = relay.Function([var_8673,var_8674,var_8732,var_8733,], output)
mod['func_8746'] = func_8746
mod = relay.transform.InferType()(mod)
var_8747 = relay.var("var_8747", dtype = "int32", shape = (11, 3, 12))#candidate|8747|(11, 3, 12)|var|int32
var_8748 = relay.var("var_8748", dtype = "int32", shape = (11, 3, 12))#candidate|8748|(11, 3, 12)|var|int32
var_8749 = relay.var("var_8749", dtype = "float64", shape = ())#candidate|8749|()|var|float64
var_8750 = relay.var("var_8750", dtype = "float64", shape = (42,))#candidate|8750|(42,)|var|float64
output = func_8746(var_8747,var_8748,var_8749,var_8750,)
func_8751 = relay.Function([var_8747,var_8748,var_8749,var_8750,], output)
mutated_mod['func_8751'] = func_8751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6319_call = mod.get_global_var('func_6319')
func_6321_call = mutated_mod.get_global_var('func_6321')
call_8760 = relay.TupleGetItem(func_6319_call(), 0)
call_8761 = relay.TupleGetItem(func_6321_call(), 0)
output = call_8760
output2 = call_8761
func_8767 = relay.Function([], output)
mod['func_8767'] = func_8767
mod = relay.transform.InferType()(mod)
mutated_mod['func_8767'] = func_8767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8767_call = mutated_mod.get_global_var('func_8767')
call_8768 = func_8767_call()
output = call_8768
func_8769 = relay.Function([], output)
mutated_mod['func_8769'] = func_8769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5765_call = mod.get_global_var('func_5765')
func_5766_call = mutated_mod.get_global_var('func_5766')
call_8789 = func_5765_call()
call_8790 = func_5765_call()
func_1743_call = mod.get_global_var('func_1743')
func_1748_call = mutated_mod.get_global_var('func_1748')
const_8792 = relay.const([-5.155038,4.060758,-2.137217,3.671175,1.428590,-3.170702,4.878412,-2.774923,6.537092,-3.331027,8.971871,6.871235,6.913049,-9.088189,-2.330266,-4.591244,2.833008,7.417083,2.799828,-6.431408,4.978775,9.233422,6.124162,-4.673158,8.814706,-1.795135,-2.117689,-5.059487,-8.755219,-4.805370,-0.637902,8.041108,0.305045,5.643424,8.551646,2.569644,-2.389281,2.595836,-3.663465,8.903539,8.356549,4.958200,9.303929,4.922680,-9.076106,-8.987214,-3.773205,-4.972038,-7.233058,-0.939824,-5.310949,8.554620,-2.153048,-7.363816,-5.174417,4.892544,4.907720,6.370199,-6.444170,-3.154600,-7.535433,3.865704,9.440664,-6.971605,3.051918,9.009524,-0.591561,7.543725,-1.097189,-9.208864,2.944721,-9.326872,-7.480800,8.521631,-1.337378,5.105920,-1.358507,-0.777549,-4.309285,-9.336319,7.122853,4.999659,-7.571133,9.217128,-7.885509,9.584973,2.007149,0.908586,9.001012,-1.206000,-3.857468,-6.896332,-2.162204,-0.783535,-1.873214,-1.592598,7.740724,3.924558,-0.806555,-9.205457,-7.455709,-0.930614,8.005113,3.283543,-4.810224,-2.927663,9.473961,-5.833915,3.269538,2.049900,7.128474,-4.052648,6.855032,-3.060247,-6.695072,1.304980,-3.149694,-1.989931,7.445029,-9.975216,9.628166,-0.066674,5.338442,-5.629574,-2.705657,-7.666932,5.367353,-9.831604,8.701184,0.521870,7.054532,-3.968204,-7.379042,5.646127,6.019075,-4.078574,-5.100899,1.634161,6.809421,9.375885,9.896020,7.704838,-7.403678,-0.794448,-6.980154,6.491230,-6.765460,1.440719,-9.528222,-7.713466,-8.636469,-2.453234,9.855409,-7.830318,2.592864,-7.213588,-4.984760,9.931879,6.548901,-6.792982,6.126137,3.278380,6.190379,3.828478,2.947085,0.693564,-1.263558,4.344195,-5.149562,-0.133037,6.077970,-3.968633,-3.412891,-6.281485,4.062755,9.917259,-7.565137,-7.107068,1.502611,7.132542,3.881946,-3.882449,-3.100472,-1.880981,1.259524,-8.565659,8.757766,-1.132061,-0.268989,-5.721687,7.564175,1.796864,-0.668773,-8.599520,8.994419,1.503122,-1.187959,-4.176609,1.576405,5.500332,6.571794,9.577764,6.392734,-6.517795,-0.582401,5.350533,-1.513333,2.741085,9.873864,-5.233097,9.255933,6.190735,8.400365,-5.425284,-4.900140,8.825449,6.273029,6.453649,1.656529,-0.512572,-4.195380,5.388835,-9.632679,0.368014,-2.296019,-4.337844,1.250126,-8.577143,2.745439,0.179555,-0.550729,8.030829,4.290819,-7.036031,-9.994450,-9.868763,7.282692,7.374757,-3.502861,6.964262,-7.022422,-6.117317,4.836048,-0.274608,1.358002,3.385228,2.499432,5.773956,1.432222,4.609820,1.707212,-5.439753,0.699444,-8.460341,-6.805195,9.798525,-3.164582,0.847597,-5.772524,-1.446564,8.087685,8.390161,0.518309,-5.605482,8.508468,-3.145555,2.072083,6.443552,1.789149,9.610295,5.786382,-8.120669,-2.427740,6.216118,-2.067839,8.610039,3.350872,-7.197470,1.920082,5.501128,-3.537588,2.174251,-7.676245,-5.962923,6.347231,-5.620827,-9.646637,-3.392258,-9.233773,6.607279,0.938845,-4.592401,-4.235501,6.822341,9.640405,-8.197419,9.311583,-2.334513,-5.426694,4.832568,-5.184486,-4.476550,-5.005828,3.198431,-8.188314,4.555945,2.023985,2.231494,-3.080607,-3.173854,7.758098,2.111182,-2.978011,1.890525,5.232707,-9.441182,-8.517562,-0.915313,2.130132,5.682346], dtype = "float32")#candidate|8792|(320,)|const|float32
const_8793 = relay.const([True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True], dtype = "bool")#candidate|8793|(784,)|const|bool
var_8794 = relay.var("var_8794", dtype = "float64", shape = (2002,))#candidate|8794|(2002,)|var|float64
call_8791 = relay.TupleGetItem(func_1743_call(relay.reshape(const_8792.astype('float32'), [10, 16, 2]), relay.reshape(const_8793.astype('bool'), [784,]), relay.reshape(var_8794.astype('float64'), [2002,]), ), 3)
call_8795 = relay.TupleGetItem(func_1748_call(relay.reshape(const_8792.astype('float32'), [10, 16, 2]), relay.reshape(const_8793.astype('bool'), [784,]), relay.reshape(var_8794.astype('float64'), [2002,]), ), 3)
output = relay.Tuple([call_8789,call_8791,const_8792,const_8793,var_8794,])
output2 = relay.Tuple([call_8790,call_8795,const_8792,const_8793,var_8794,])
func_8796 = relay.Function([var_8794,], output)
mod['func_8796'] = func_8796
mod = relay.transform.InferType()(mod)
mutated_mod['func_8796'] = func_8796
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8797 = relay.var("var_8797", dtype = "float64", shape = (2002,))#candidate|8797|(2002,)|var|float64
func_8796_call = mutated_mod.get_global_var('func_8796')
call_8798 = func_8796_call(var_8797)
output = call_8798
func_8799 = relay.Function([var_8797], output)
mutated_mod['func_8799'] = func_8799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8335_call = mod.get_global_var('func_8335')
func_8337_call = mutated_mod.get_global_var('func_8337')
call_8891 = relay.TupleGetItem(func_8335_call(), 0)
call_8892 = relay.TupleGetItem(func_8337_call(), 0)
output = relay.Tuple([call_8891,])
output2 = relay.Tuple([call_8892,])
func_8895 = relay.Function([], output)
mod['func_8895'] = func_8895
mod = relay.transform.InferType()(mod)
mutated_mod['func_8895'] = func_8895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8895_call = mutated_mod.get_global_var('func_8895')
call_8896 = func_8895_call()
output = call_8896
func_8897 = relay.Function([], output)
mutated_mod['func_8897'] = func_8897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8526_call = mod.get_global_var('func_8526')
func_8527_call = mutated_mod.get_global_var('func_8527')
call_8956 = relay.TupleGetItem(func_8526_call(), 3)
call_8957 = relay.TupleGetItem(func_8527_call(), 3)
output = relay.Tuple([call_8956,])
output2 = relay.Tuple([call_8957,])
func_8958 = relay.Function([], output)
mod['func_8958'] = func_8958
mod = relay.transform.InferType()(mod)
output = func_8958()
func_8959 = relay.Function([], output)
mutated_mod['func_8959'] = func_8959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8471_call = mod.get_global_var('func_8471')
func_8473_call = mutated_mod.get_global_var('func_8473')
call_9065 = relay.TupleGetItem(func_8471_call(), 0)
call_9066 = relay.TupleGetItem(func_8473_call(), 0)
func_8132_call = mod.get_global_var('func_8132')
func_8134_call = mutated_mod.get_global_var('func_8134')
call_9072 = relay.TupleGetItem(func_8132_call(), 0)
call_9073 = relay.TupleGetItem(func_8134_call(), 0)
func_4836_call = mod.get_global_var('func_4836')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_9078 = relay.TupleGetItem(func_4836_call(), 2)
call_9079 = relay.TupleGetItem(func_4837_call(), 2)
uop_9082 = relay.sin(call_9078.astype('float64')) # shape=(48, 24)
uop_9084 = relay.sin(call_9079.astype('float64')) # shape=(48, 24)
output = relay.Tuple([call_9065,call_9072,uop_9082,])
output2 = relay.Tuple([call_9066,call_9073,uop_9084,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

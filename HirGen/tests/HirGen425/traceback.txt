==========mod==========
#[version = "0.0.5"]
def @func_7179() -> (Tensor[(7, 6, 1), float64], Tensor[(13, 15, 16), float32]) {
  %0 = @func_1964() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) */;
  %1 = %0.1;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %3 = @func_6697() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(144), float64], Tensor[(144), float64], Tensor[(13, 15, 16), bool]) */;
  %4 = acosh(%2) /* ty=Tensor[(7, 6, 1), float64] */;
  %5 = %3.0;
  (%4, %5)
}

def @func_5347(%var_5337: Tensor[(10, 96), float64]) -> (Tensor[(10, 96), uint32], Tensor[(6, 3, 12), uint64], Tensor[(216), uint16]) {
  %6 = @func_4391() /* ty=(Tensor[(10, 96), float64],) */;
  %7 = %6.0;
  %8 = cast(%var_5337, dtype="uint32") /* ty=Tensor[(10, 96), uint32] */;
  %9 = shape_of(%7, dtype="int32") /* ty=Tensor[(2), int32] */;
  %10 = cast(%7, dtype="uint32") /* ty=Tensor[(10, 96), uint32] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(216), uint16] */, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(216), uint16] */, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %14 = reshape(%12, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
  %15 = reshape(%13, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
  %16 = @func_3309(%14, %15) /* ty=(Tensor[(6, 3, 12), uint16], Tensor[(6, 3, 12), uint64]) */;
  %17 = minimum(%10, %11) /* ty=Tensor[(10, 96), uint32] */;
  %18 = %16.1;
  (%17, %18, meta[relay.Constant][0] /* ty=Tensor[(216), uint16] */)
}

def @func_1739(%var_1707: Tensor[(13, 15, 16), float32]) -> (Tensor[(13, 15, 16), float64], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(7, 12, 4), float64], Tensor[(13, 15, 16), float64]) {
  %19 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %20 = %19.1;
  %21 = cast(%var_1707, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%20, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %26 = reshape(%25, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %27 = @func_1636(%26) /* ty=Tensor[(7, 12, 4), float64] */;
  %28 = cast(%27, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %29 = reshape(%28, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %30 = cast(%20, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %31 = maximum(%23, %24) /* ty=Tensor[(13, 15, 16), float64] */;
  %32 = @func_1636(%29) /* ty=Tensor[(7, 12, 4), float64] */;
  %33 = acos(%30) /* ty=Tensor[(13, 15, 16), float64] */;
  (%31, %27, meta[relay.Constant][1] /* ty=Tensor[(336), float64] */, %32, %33)
}

def @func_8648(%var_8635: Tensor[(12, 9, 1), bool], %var_8642: Tensor[(96), uint16], %var_8643: Tensor[(1248), uint16]) -> (Tensor[(12, 9, 1), bool], Tensor[(16, 13, 6), bool], Tensor[(96), uint16], Tensor[(1248), uint16]) {
  %34 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %35 = cast(%var_8635, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %36 = cast(%var_8642, dtype="uint16") /* ty=Tensor[(96), uint16] */;
  %37 = cast(%var_8643, dtype="uint16") /* ty=Tensor[(1248), uint16] */;
  %38 = cast(%var_8643, dtype="uint16") /* ty=Tensor[(1248), uint16] */;
  %39 = reshape(%36, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint16] */;
  %40 = reshape(%37, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), uint16] */;
  %41 = reshape(%38, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), uint16] */;
  %42 = @func_7296(%39, %40, %41) /* ty=(Tensor[(16, 13, 6), bool], Tensor[(16, 13, 6), float32]) */;
  %43 = logical_and(%34, %35) /* ty=Tensor[(12, 9, 1), bool] */;
  %44 = %42.0;
  (%43, %44, %var_8642, %var_8643)
}

def @func_8488() -> (Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64]) {
  %45 = @func_6375() /* ty=(Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float64]) */;
  %46 = @func_3853() /* ty=Tensor[(10, 96), float64] */;
  %47 = %45.1;
  (%46, %47)
}

def @func_8366() -> Tensor[(10, 96), float64] {
  @func_6007() /* ty=Tensor[(10, 96), float64] */
}

def @func_8054(%var_7965: float64, %var_7966: Tensor[(3, 10, 3), float64], %var_7978: Tensor[(110), int64], %var_7989: Tensor[(10, 96), float64], %var_8041: Tensor[(3, 10, 3), bool]) -> (Tensor[(110), int64], Tensor[(110), int64], Tensor[(65, 7), uint64], Tensor[(65, 7), uint16], Tensor[(10, 96), uint8], Tensor[(3, 10, 3), bool], Tensor[(7, 4, 9), float64]) {
  %48 = cast(%var_7978, dtype="int64") /* ty=Tensor[(110), int64] */;
  %49 = reshape(%48, newshape=[110]) /* ty=Tensor[(110), int64] */;
  %50 = @func_6200(%49) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64], Tensor[(5, 2, 11), float64], int64, Tensor[(110), int64]) */;
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(65, 7), uint16] */, dtype="uint16") /* ty=Tensor[(65, 7), uint16] */;
  %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(65, 7), uint16] */, dtype="int32") /* ty=Tensor[(65, 7), int32] */;
  %53 = reshape(%51, newshape=[65, 7]) /* ty=Tensor[(65, 7), uint16] */;
  %54 = reshape(%52, newshape=[65, 7]) /* ty=Tensor[(65, 7), int32] */;
  %55 = @func_6553(%53, %54) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(15, 11, 8), int16], Tensor[(1320), float32], Tensor[(65, 7), uint64]) */;
  %56 = @func_5182() /* ty=Tensor[(10, 96), float64] */;
  %57 = cast(%var_7989, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %58 = shape_of(%56, dtype="int32") /* ty=Tensor[(2), int32] */;
  %59 = cast(%56, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %61 = logical_or(%59, %60) /* ty=Tensor[(10, 96), bool] */;
  %62 = cast(%var_7978, dtype="int64") /* ty=Tensor[(110), int64] */;
  %63 = reshape(%62, newshape=[110]) /* ty=Tensor[(110), int64] */;
  %64 = @func_6200(%63) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64], Tensor[(5, 2, 11), float64], int64, Tensor[(110), int64]) */;
  %65 = %64.3;
  %66 = cast(%61, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %67 = cast(%65, dtype="bool") /* ty=bool */;
  %68 = not_equal(%66, %67) /* ty=Tensor[(10, 96), bool] */;
  %69 = cast(%var_7965, dtype="uint8") /* ty=uint8 */;
  %70 = cast(%68, dtype="uint8") /* ty=Tensor[(10, 96), uint8] */;
  %71 = cast(%var_7965, dtype="bool") /* ty=bool */;
  %72 = cast(%var_7966, dtype="bool") /* ty=Tensor[(3, 10, 3), bool] */;
  %73 = less_equal(%71, %72) /* ty=Tensor[(3, 10, 3), bool] */;
  %74 = cast(%var_8041, dtype="bool") /* ty=Tensor[(3, 10, 3), bool] */;
  %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%73, dtype="bool") /* ty=Tensor[(3, 10, 3), bool] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %78 = @func_3498() /* ty=(Tensor[(455), uint16], Tensor[(7, 4, 9), float64]) */;
  %79 = %50.4;
  %80 = %55.3;
  %81 = bitwise_or(%69, %70) /* ty=Tensor[(10, 96), uint8] */;
  %82 = not_equal(%76, %77) /* ty=Tensor[(3, 10, 3), bool] */;
  %83 = %78.1;
  (%79, %var_7978, %80, meta[relay.Constant][2] /* ty=Tensor[(65, 7), uint16] */, %81, %82, %83)
}

def @func_8188(%var_8171: Tensor[(960), float64]) -> (Tensor[(7, 4, 9), float64], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(960), float64]) {
  %84 = @func_7635() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %85 = @func_4135() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %86 = cast(%var_8171, dtype="float64") /* ty=Tensor[(960), float64] */;
  %87 = reshape(%86, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %88 = @func_3738(%87) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(10, 16, 6), float64], Tensor[(960), float64]) */;
  %89 = %84.0;
  %90 = %85.0;
  %91 = %88.0;
  (%89, %90, %91, %var_8171)
}

def @func_1654() -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) {
  %92 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %93 = %92.0;
  %94 = cast(%93, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %95 = reshape(%94, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
  %96 = @func_1526(%95) /* ty=(Tensor[(13, 15, 16), float64],) */;
  %97 = %96.0;
  (%93, %97)
}

def @func_4564(%var_4562: Tensor[(960), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(960), float64], Tensor[(960), float64]) {
  %98 = @func_2859() /* ty=Tensor[(13, 15, 16), bool] */;
  %99 = cast(%98, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %100 = cast(%var_4562, dtype="float64") /* ty=Tensor[(960), float64] */;
  %101 = cast(%98, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %102 = reshape(%99, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), bool] */;
  %103 = reshape(%100, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %104 = reshape(%101, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
  %105 = @func_3804(%102, %103, %104) /* ty=(Tensor[(13, 15, 16), int8], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(13, 15, 16), uint64], Tensor[(13, 15, 16), float32], Tensor[(135), int16], Tensor[(168), float32], Tensor[(135), int16]) */;
  %106 = %105.2;
  (%98, %106, %var_4562)
}

def @func_2533(%var_2526: Tensor[(2, 72), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(135), int16], Tensor[(2, 72), float64], Tensor[(1485), float32], Tensor[(455), uint16]) {
  %107 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %108 = cast(meta[relay.Constant][3] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
  %109 = cast(%var_2526, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %110 = cast(meta[relay.Constant][4] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %111 = cast(meta[relay.Constant][5] /* ty=Tensor[(455), uint16] */, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %112 = reshape(%108, newshape=[9, 5, 3]) /* ty=Tensor[(9, 5, 3), int16] */;
  %113 = reshape(%109, newshape=[1, 144]) /* ty=Tensor[(1, 144), float64] */;
  %114 = reshape(%110, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %115 = reshape(%111, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %116 = @func_1862(%112, %113, %114, %115) /* ty=(Tensor[(9, 5, 3), bool], Tensor[(1, 144), float64], Tensor[(1485), uint16], Tensor[(7, 6, 1), float32], Tensor[(455), uint16], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32]) */;
  %117 = %107.0;
  %118 = %116.3;
  (%117, %118, meta[relay.Constant][3] /* ty=Tensor[(135), int16] */, %var_2526, meta[relay.Constant][4] /* ty=Tensor[(1485), float32] */, meta[relay.Constant][5] /* ty=Tensor[(455), uint16] */)
}

def @func_8335() -> (Tensor[(13, 15, 16), float64], Tensor[(6, 3, 12), float64], Tensor[(120, 8), float64], Tensor[(455), uint16], Tensor[(144), float64]) {
  %119 = @func_5101() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %120 = %119.0;
  %121 = cast(%120, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %122 = cast(meta[relay.Constant][6] /* ty=Tensor[(120, 8), float64] */, dtype="float64") /* ty=Tensor[(120, 8), float64] */;
  %123 = reshape(%122, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %124 = @func_3634(%123) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(12, 18), uint16], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(6, 3, 12), float64]) */;
  %125 = cast(meta[relay.Constant][7] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %126 = reshape(%125, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %127 = @func_2609(%126) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(144), float64]) */;
  %128 = asinh(%121) /* ty=Tensor[(13, 15, 16), float64] */;
  %129 = %124.4;
  %130 = %127.1;
  (%128, %129, meta[relay.Constant][6] /* ty=Tensor[(120, 8), float64] */, %130, meta[relay.Constant][7] /* ty=Tensor[(144), float64] */)
}

def @func_2287(%var_2275: Tensor[(14, 13, 1), float32]) -> Tensor[(14, 13, 1), float64] {
  %131 = cast(%var_2275, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %132 = sigmoid(%131) /* ty=Tensor[(14, 13, 1), float32] */;
  %133 = cast(%132, dtype="float64") /* ty=Tensor[(14, 13, 1), float64] */;
  exp(%133) /* ty=Tensor[(14, 13, 1), float64] */
}

def @func_5388() -> (Tensor[(13, 15, 16), bool], Tensor[(10, 96), int32], Tensor[(10, 96), float64]) {
  %134 = @func_3655() /* ty=Tensor[(10, 96), float64] */;
  %135 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 96), float64] */, dtype="int32") /* ty=Tensor[(10, 96), int32] */;
  %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(2), int32] */;
  %137 = cast(%134, dtype="int32") /* ty=Tensor[(10, 96), int32] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %139 = @func_4506() /* ty=(Tensor[(10, 96), float64],) */;
  %140 = @func_2859() /* ty=Tensor[(13, 15, 16), bool] */;
  %141 = bitwise_and(%137, %138) /* ty=Tensor[(10, 96), int32] */;
  %142 = %139.0;
  (%140, %141, %142)
}

def @func_4609() -> (Tensor[(13, 15, 16), float32],) {
  %143 = @func_2894() /* ty=Tensor[(13, 15, 16), float32] */;
  (%143,)
}

def @func_7635() -> (Tensor[(7, 4, 9), float64],) {
  %144 = @func_3987() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %145 = %144.0;
  (%145,)
}

def @func_1964() -> (Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) {
  %146 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %147 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 455), uint16] */, dtype="uint16") /* ty=Tensor[(1, 455), uint16] */;
  %148 = reshape(%147, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %149 = @func_502(%148) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %150 = %146.0;
  %151 = %149.0;
  (%150, %151, meta[relay.Constant][9] /* ty=Tensor[(1, 455), uint16] */)
}

def @func_3738(%var_3718: Tensor[(960), float64]) -> (Tensor[(13, 15, 16), float32], Tensor[(10, 16, 6), float64], Tensor[(960), float64]) {
  %152 = cast(%var_3718, dtype="float64") /* ty=Tensor[(960), float64] */;
  %153 = reshape(%152, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %154 = @func_3634(%153) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(12, 18), uint16], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(6, 3, 12), float64]) */;
  %155 = @func_2894() /* ty=Tensor[(13, 15, 16), float32] */;
  %156 = %154.2;
  (%155, %156, %var_3718)
}

def @func_6007() -> Tensor[(10, 96), float64] {
  @func_5182() /* ty=Tensor[(10, 96), float64] */
}

def @func_4772(%var_4759: int64, %var_4760: Tensor[(5, 2, 11), int64]) -> (Tensor[(5, 2, 11), float64],) {
  %157 = cast(%var_4759, dtype="bool") /* ty=bool */;
  %158 = cast(%var_4760, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %159 = equal(%157, %158) /* ty=Tensor[(5, 2, 11), bool] */;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(5, 2, 11), float64] */;
  %161 = sinh(%160) /* ty=Tensor[(5, 2, 11), float64] */;
  (%161,)
}

def @func_1471() -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) {
  %162 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 15, 16), uint64] */, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %163 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(13, 15, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 15, 16), uint64] */, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %166 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 15, 16), uint64] */, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %167 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 15, 16), uint64] */, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %168 = less(%164, %165) /* ty=Tensor[(13, 15, 16), bool] */;
  %169 = asin(%166) /* ty=Tensor[(13, 15, 16), float32] */;
  %170 = rsqrt(%167) /* ty=Tensor[(13, 15, 16), float64] */;
  (%168, %169, %170)
}

def @func_8457() -> (Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) {
  %171 = @func_7753() /* ty=(Tensor[(216), uint16], Tensor[(216), uint16], Tensor[(13, 15, 16), float32]) */;
  %172 = %171.2;
  %173 = @func_3853() /* ty=Tensor[(10, 96), float64] */;
  (%172, %173)
}

def @func_4354(%var_4352: Tensor[(144), float64]) -> (Tensor[(10, 96), float64], Tensor[(11, 15, 9), int64], Tensor[(144), float64]) {
  %174 = cast(%var_4352, dtype="float64") /* ty=Tensor[(144), float64] */;
  %175 = reshape(%174, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %176 = @func_1268(%175) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) */;
  %177 = @func_3420() /* ty=Tensor[(10, 96), float64] */;
  %178 = %176.1;
  (%177, %178, %var_4352)
}

def @func_2568(%var_2559: Tensor[(1, 182), float32]) -> (Tensor[(10, 96), float64], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(14, 13, 1), float64], Tensor[(1, 182), float32]) {
  %179 = cast(meta[relay.Constant][12] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %180 = reshape(%179, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %181 = cast(%var_2559, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %182 = reshape(%181, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
  %183 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
  %184 = @func_1636(%180) /* ty=Tensor[(7, 12, 4), float64] */;
  %185 = @func_2287(%182) /* ty=Tensor[(14, 13, 1), float64] */;
  (%183, %184, meta[relay.Constant][12] /* ty=Tensor[(336), float64] */, %185, %var_2559)
}

def @func_3420() -> Tensor[(10, 96), float64] {
  %186 = @func_2381() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) */;
  %186.3
}

def @func_3853() -> Tensor[(10, 96), float64] {
  @func_3420() /* ty=Tensor[(10, 96), float64] */
}

def @func_6553(%var_6505: Tensor[(65, 7), uint16], %var_6536: Tensor[(65, 7), int32]) -> (Tensor[(13, 15, 16), float32], Tensor[(15, 11, 8), int16], Tensor[(1320), float32], Tensor[(65, 7), uint64]) {
  %187 = @func_2959() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %188 = cast(meta[relay.Constant][13] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %189 = cast(%var_6505, dtype="uint16") /* ty=Tensor[(65, 7), uint16] */;
  %190 = cast(meta[relay.Constant][13] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %191 = reshape(%188, newshape=[15, 11, 8]) /* ty=Tensor[(15, 11, 8), float32] */;
  %192 = reshape(%189, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %193 = reshape(%190, newshape=[15, 11, 8]) /* ty=Tensor[(15, 11, 8), float32] */;
  %194 = @func_5445(%191, %192, %193) /* ty=(Tensor[(5, 7, 3), bool], Tensor[(455), uint16], Tensor[(15, 11, 8), int16]) */;
  %195 = cast(meta[relay.Constant][14] /* ty=Tensor[(65, 7), uint16] */, dtype="int32") /* ty=Tensor[(65, 7), int32] */;
  %196 = shape_of(%var_6505, dtype="int32") /* ty=Tensor[(2), int32] */;
  %197 = cast(%var_6505, dtype="int32") /* ty=Tensor[(65, 7), int32] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %199 = logical_xor(%197, %198) /* ty=Tensor[(65, 7), int32] */;
  %200 = cast(%var_6536, dtype="bool") /* ty=Tensor[(65, 7), bool] */;
  %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(2), int32] */;
  %202 = cast(%199, dtype="bool") /* ty=Tensor[(65, 7), bool] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %204 = less_equal(%202, %203) /* ty=Tensor[(65, 7), bool] */;
  %205 = cast(meta[relay.Constant][14] /* ty=Tensor[(65, 7), uint16] */, dtype="uint64") /* ty=Tensor[(65, 7), uint64] */;
  %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(2), int32] */;
  %207 = cast(%204, dtype="uint64") /* ty=Tensor[(65, 7), uint64] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %209 = %187.0;
  %210 = %194.2;
  %211 = right_shift(%207, %208) /* ty=Tensor[(65, 7), uint64] */;
  (%209, %210, meta[relay.Constant][13] /* ty=Tensor[(1320), float32] */, %211)
}

def @func_2222() -> Tensor[(13, 15, 16), float32] {
  %212 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %212.1
}

def @func_2859() -> Tensor[(13, 15, 16), bool] {
  %213 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %213.0
}

def @func_4456(%var_4425: Tensor[(1, 880), float64], %var_4444: Tensor[(10, 96), float64]) -> (Tensor[(455), uint16], Tensor[(144), float64], Tensor[(5, 16, 11), bool], Tensor[(10, 96), uint8]) {
  %214 = cast(meta[relay.Constant][15] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %215 = reshape(%214, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %216 = @func_2609(%215) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(144), float64]) */;
  %217 = cast(%var_4425, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
  %218 = cast(%var_4425, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
  %219 = reshape(%217, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
  %220 = reshape(%218, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
  %221 = @func_3916(%219, %220) /* ty=Tensor[(5, 16, 11), float64] */;
  %222 = cast(%var_4425, dtype="bool") /* ty=Tensor[(1, 880), bool] */;
  %223 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%221, dtype="bool") /* ty=Tensor[(5, 16, 11), bool] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %226 = @func_3420() /* ty=Tensor[(10, 96), float64] */;
  %227 = cast(%var_4444, dtype="uint8") /* ty=Tensor[(10, 96), uint8] */;
  %228 = shape_of(%226, dtype="int32") /* ty=Tensor[(2), int32] */;
  %229 = cast(%226, dtype="uint8") /* ty=Tensor[(10, 96), uint8] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %231 = %216.1;
  %232 = greater_equal(%224, %225) /* ty=Tensor[(5, 16, 11), bool] */;
  %233 = maximum(%229, %230) /* ty=Tensor[(10, 96), uint8] */;
  (%231, meta[relay.Constant][15] /* ty=Tensor[(144), float64] */, %232, %233)
}

def @func_57(%var_22: uint8) -> Tensor[(5, 7, 3), bool] {
  %234 = cast(%var_22, dtype="bool") /* ty=bool */;
  %235 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 7, 3), uint8] */, dtype="bool") /* ty=Tensor[(5, 7, 3), bool] */;
  greater(%234, %235) /* ty=Tensor[(5, 7, 3), bool] */
}

def @func_2315(%var_2294: Tensor[(16, 4, 5), int64], %var_2295: Tensor[(16, 4, 5), int64], %var_2308: Tensor[(455), uint16]) -> (Tensor[(16, 4, 5), int64], Tensor[(455), uint16], Tensor[(455), uint16]) {
  %236 = cast(%var_2295, dtype="int64") /* ty=Tensor[(16, 4, 5), int64] */;
  %237 = shape_of(%var_2294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%var_2294, dtype="int64") /* ty=Tensor[(16, 4, 5), int64] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %240 = cast(%var_2308, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %241 = reshape(%240, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %242 = @func_502(%241) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %243 = bitwise_or(%238, %239) /* ty=Tensor[(16, 4, 5), int64] */;
  %244 = %242.2;
  (%243, %244, %var_2308)
}

def @func_4086(%var_4081: Tensor[(10, 96), float64]) -> Tensor[(10, 96), float64] {
  %245 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
  %246 = cast(%var_4081, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(2), int32] */;
  %248 = cast(%245, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  power(%248, %249) /* ty=Tensor[(10, 96), float64] */
}

def @func_6406() -> (Tensor[(10, 96), float64],) {
  %250 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
  %251 = %250.0;
  %252 = cast(%251, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %253 = log10(%252) /* ty=Tensor[(10, 96), float64] */;
  (%253,)
}

def @func_4278(%var_4274: Tensor[(216), uint16]) -> (Tensor[(10, 96), float64], Tensor[(6, 3, 12), uint64], Tensor[(216), uint16]) {
  %254 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
  %255 = cast(%var_4274, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %256 = cast(%var_4274, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %257 = reshape(%255, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
  %258 = reshape(%256, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
  %259 = @func_3309(%257, %258) /* ty=(Tensor[(6, 3, 12), uint16], Tensor[(6, 3, 12), uint64]) */;
  %260 = %254.0;
  %261 = %259.1;
  (%260, %261, %var_4274)
}

def @func_3498() -> (Tensor[(455), uint16], Tensor[(7, 4, 9), float64]) {
  %262 = @func_2381() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) */;
  %263 = @func_3172() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %264 = %262.2;
  %265 = %263.0;
  (%264, %265)
}

def @func_3269() -> (Tensor[(13, 15, 16), bool], uint8, Tensor[(144), float64], Tensor[(3120), bool], Tensor[(6), float64]) {
  %266 = cast(meta[relay.Constant][17] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %267 = reshape(%266, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %268 = @func_1268(%267) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) */;
  %269 = cast(meta[relay.Constant][18] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %270 = @func_2859() /* ty=Tensor[(13, 15, 16), bool] */;
  %271 = cast(%270, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %272 = reshape(%269, newshape=[6, 1]) /* ty=Tensor[(6, 1), float64] */;
  %273 = reshape(%271, newshape=[3120]) /* ty=Tensor[(3120), bool] */;
  %274 = @func_2782(%272, %273) /* ty=(Tensor[(6, 1), bool], Tensor[(3120), bool], Tensor[(7, 6, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(455), uint32]) */;
  %275 = %268.3;
  %276 = %274.1;
  (%270, %275, meta[relay.Constant][17] /* ty=Tensor[(144), float64] */, %276, meta[relay.Constant][18] /* ty=Tensor[(6), float64] */)
}

def @func_2959() -> (Tensor[(13, 15, 16), float32],) {
  %277 = @func_2222() /* ty=Tensor[(13, 15, 16), float32] */;
  (%277,)
}

def @func_2782(%var_2741: Tensor[(6, 1), float64], %var_2749: Tensor[(3120), bool]) -> (Tensor[(6, 1), bool], Tensor[(3120), bool], Tensor[(7, 6, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(455), uint32]) {
  %278 = cast(1.38321f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %279 = cast(%var_2741, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
  %280 = cast(%var_2749, dtype="bool") /* ty=Tensor[(3120), bool] */;
  %281 = cast(meta[relay.Constant][19] /* ty=Tensor[(455), uint16] */, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %282 = reshape(%280, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), bool] */;
  %283 = reshape(%281, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %284 = @func_2142(%282, %283) /* ty=(Tensor[(13, 15, 16), float64], Tensor[(455), uint16], Tensor[(455), uint16]) */;
  %285 = %284.1;
  %286 = cast(%285, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %287 = reshape(%286, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %288 = @func_502(%287) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %289 = cast(meta[relay.Constant][20] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %290 = reshape(%289, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %291 = cast(%285, dtype="uint32") /* ty=Tensor[(455), uint32] */;
  %292 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(455), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %293 = cast(meta[relay.Constant][19] /* ty=Tensor[(455), uint16] */, dtype="uint32") /* ty=Tensor[(455), uint32] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %295 = less_equal(%278, %279) /* ty=Tensor[(6, 1), bool] */;
  %296 = %288.0;
  %297 = @func_1636(%290) /* ty=Tensor[(7, 12, 4), float64] */;
  %298 = right_shift(%293, %294) /* ty=Tensor[(455), uint32] */;
  (%295, %var_2749, %296, %297, meta[relay.Constant][20] /* ty=Tensor[(336), float64] */, %298)
}

def @func_4135() -> (Tensor[(13, 15, 16), bool],) {
  %299 = @func_1964() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) */;
  %300 = %299.0;
  (%300,)
}

def @func_5543(%var_5535: Tensor[(7, 4, 9), float64]) -> (Tensor[(7, 4, 9), float32],) {
  %301 = @func_3987() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %302 = %301.0;
  %303 = cast(%302, dtype="float64") /* ty=Tensor[(7, 4, 9), float64] */;
  %304 = atanh(%303) /* ty=Tensor[(7, 4, 9), float64] */;
  %305 = cast(%var_5535, dtype="float32") /* ty=Tensor[(7, 4, 9), float32] */;
  %306 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%304, dtype="float32") /* ty=Tensor[(7, 4, 9), float32] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %309 = power(%307, %308) /* ty=Tensor[(7, 4, 9), float32] */;
  (%309,)
}

def @func_4514() -> (Tensor[(13, 15, 16), bool],) {
  %310 = @func_4135() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %311 = %310.0;
  (%311,)
}

def @func_5620() -> (Tensor[(13, 15, 16), bool],) {
  %312 = @func_4135() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %313 = %312.0;
  (%313,)
}

def @func_1695() -> (Tensor[(13, 15, 16), bool],) {
  %314 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %315 = %314.0;
  (%315,)
}

def @func_5047(%var_5019: Tensor[(182), float32]) -> (Tensor[(14, 13, 1), float64], Tensor[(182), float32], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), bool]) {
  %316 = cast(%var_5019, dtype="float32") /* ty=Tensor[(182), float32] */;
  %317 = reshape(%316, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
  %318 = @func_2222() /* ty=Tensor[(13, 15, 16), float32] */;
  %319 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 15, 16), float32] */, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%318, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %323 = @func_4884() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %324 = @func_2287(%317) /* ty=Tensor[(14, 13, 1), float64] */;
  %325 = greater_equal(%321, %322) /* ty=Tensor[(13, 15, 16), bool] */;
  %326 = %323.0;
  (%324, %var_5019, %325, %326)
}

def @func_6481() -> (Tensor[(13, 15, 16), float32],) {
  %327 = @func_3643() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %328 = %327.0;
  (%328,)
}

def @func_4391() -> (Tensor[(10, 96), float64],) {
  %329 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
  %330 = %329.0;
  (%330,)
}

def @main(%var_8675: Tensor[(455), uint16], %var_8684: Tensor[(6), float64]) -> (Tensor[(13, 15, 16), float32], Tensor[(2, 660), float32], Tensor[(455), uint32], Tensor[(6), float64], Tensor[(7, 6, 1), float64]) {
  %331 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %332 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 660), float32] */, dtype="float32") /* ty=Tensor[(2, 660), float32] */;
  %333 = cast(%var_8675, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %334 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 660), float32] */, dtype="float32") /* ty=Tensor[(2, 660), float32] */;
  %335 = reshape(%332, newshape=[15, 11, 8]) /* ty=Tensor[(15, 11, 8), float32] */;
  %336 = reshape(%333, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %337 = reshape(%334, newshape=[15, 11, 8]) /* ty=Tensor[(15, 11, 8), float32] */;
  %338 = @func_5445(%335, %336, %337) /* ty=(Tensor[(5, 7, 3), bool], Tensor[(455), uint16], Tensor[(15, 11, 8), int16]) */;
  %339 = %338.1;
  %340 = cast(%var_8675, dtype="uint32") /* ty=Tensor[(455), uint32] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(1), int32] */;
  %342 = cast(%339, dtype="uint32") /* ty=Tensor[(455), uint32] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %344 = cast(%var_8684, dtype="float64") /* ty=Tensor[(6), float64] */;
  %345 = %331.0;
  %346 = cast(%345, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %347 = reshape(%344, newshape=[6, 1]) /* ty=Tensor[(6, 1), float64] */;
  %348 = reshape(%346, newshape=[3120]) /* ty=Tensor[(3120), bool] */;
  %349 = @func_2782(%347, %348) /* ty=(Tensor[(6, 1), bool], Tensor[(3120), bool], Tensor[(7, 6, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(455), uint32]) */;
  %350 = %349.2;
  %351 = cast(%350, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %352 = bitwise_and(%342, %343) /* ty=Tensor[(455), uint32] */;
  %353 = erf(%351) /* ty=Tensor[(7, 6, 1), float64] */;
  (%345, meta[relay.Constant][22] /* ty=Tensor[(2, 660), float32] */, %352, %var_8684, %353)
}

def @func_2381() -> (Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) {
  %354 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %355 = cast(meta[relay.Constant][23] /* ty=Tensor[(455), uint16] */, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %356 = reshape(%355, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %357 = @func_502(%356) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %358 = cast(meta[relay.Constant][24] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %359 = reshape(%358, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float64] */;
  %360 = @func_1932(%359) /* ty=Tensor[(10, 16, 6), float64] */;
  %361 = cast(%360, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
  %362 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(10, 96), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %363 = cast(meta[relay.Constant][24] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %365 = %354.0;
  %366 = %357.2;
  %367 = floor_mod(%363, %364) /* ty=Tensor[(10, 96), float64] */;
  (%365, %366, meta[relay.Constant][23] /* ty=Tensor[(455), uint16] */, %367)
}

def @func_5445(%var_5399: Tensor[(15, 11, 8), float32], %var_5404: Tensor[(455), uint16], %var_5430: Tensor[(15, 11, 8), float32]) -> (Tensor[(5, 7, 3), bool], Tensor[(455), uint16], Tensor[(15, 11, 8), int16]) {
  %368 = cast(%var_5404, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %369 = reshape(%368, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), uint16] */;
  %370 = @func_235(%369) /* ty=(Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) */;
  %371 = cast(%var_5399, dtype="float32") /* ty=Tensor[(15, 11, 8), float32] */;
  %372 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(15, 11, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 11, 8), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 8), float32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %375 = divide(%373, %374) /* ty=Tensor[(15, 11, 8), float32] */;
  %376 = cast(%375, dtype="float32") /* ty=Tensor[(15, 11, 8), float32] */;
  %377 = log10(%376) /* ty=Tensor[(15, 11, 8), float32] */;
  %378 = cast(%var_5430, dtype="int16") /* ty=Tensor[(15, 11, 8), int16] */;
  %379 = shape_of(%377, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%377, dtype="int16") /* ty=Tensor[(15, 11, 8), int16] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %382 = %370.6;
  %383 = left_shift(%380, %381) /* ty=Tensor[(15, 11, 8), int16] */;
  (%382, %var_5404, %383)
}

def @func_4033() -> (Tensor[(13, 15, 16), bool],) {
  %384 = @func_2859() /* ty=Tensor[(13, 15, 16), bool] */;
  (%384,)
}

def @func_5101() -> (Tensor[(13, 15, 16), float32],) {
  %385 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %386 = %385.0;
  (%386,)
}

def @func_3172() -> (Tensor[(7, 4, 9), float64],) {
  %387 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 4, 9), float64] */, dtype="float64") /* ty=Tensor[(7, 4, 9), float64] */;
  %388 = asin(%387) /* ty=Tensor[(7, 4, 9), float64] */;
  (%388,)
}

def @func_4215(%var_4196: Tensor[(10, 96), float64], %var_4205: Tensor[(1485), float32], %var_4211: Tensor[(3120), float64]) -> (Tensor[(10, 96), float32], Tensor[(144), float64], Tensor[(1485), float32], Tensor[(13, 15, 16), float64], Tensor[(3120), float64]) {
  %389 = @func_3655() /* ty=Tensor[(10, 96), float64] */;
  %390 = cast(%var_4196, dtype="float32") /* ty=Tensor[(10, 96), float32] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(2), int32] */;
  %392 = cast(%389, dtype="float32") /* ty=Tensor[(10, 96), float32] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %394 = cast(%var_4205, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %395 = reshape(%394, newshape=[165, 9]) /* ty=Tensor[(165, 9), float32] */;
  %396 = @func_3695(%395) /* ty=(Tensor[(7, 4, 9), float64], Tensor[(455), uint16], Tensor[(135, 1), int16], Tensor[(144), float64], Tensor[(165, 9), float32], Tensor[(455), uint16]) */;
  %397 = cast(%var_4211, dtype="float64") /* ty=Tensor[(3120), float64] */;
  %398 = reshape(%397, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
  %399 = @func_1526(%398) /* ty=(Tensor[(13, 15, 16), float64],) */;
  %400 = mod(%392, %393) /* ty=Tensor[(10, 96), float32] */;
  %401 = %396.3;
  %402 = %399.0;
  (%400, %401, %var_4205, %402, %var_4211)
}

def @func_2260(%var_2256: Tensor[(455), uint16]) -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), uint8], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) {
  %403 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %404 = %403.0;
  %405 = cast(%404, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %406 = reshape(%405, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
  %407 = @func_1597(%406) /* ty=(Tensor[(13, 15, 16), float64], Tensor[(13, 15, 16), uint8]) */;
  %408 = cast(%var_2256, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %409 = reshape(%408, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), uint16] */;
  %410 = @func_235(%409) /* ty=(Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) */;
  %411 = %407.1;
  %412 = %410.2;
  (%404, %411, %412, %var_2256)
}

def @func_4831(%var_4804: Tensor[(6, 14, 10), uint8], %var_4823: uint8) -> (Tensor[(6, 14, 10), bool], Tensor[(11, 15, 9), bool], Tensor[(1485), float32], uint8) {
  %413 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 14, 10), uint8] */, dtype="uint8") /* ty=Tensor[(6, 14, 10), uint8] */;
  %414 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(6, 14, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 14, 10), uint8] */, dtype="uint8") /* ty=Tensor[(6, 14, 10), uint8] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %417 = minimum(%415, %416) /* ty=Tensor[(6, 14, 10), uint8] */;
  %418 = cast(%var_4804, dtype="bool") /* ty=Tensor[(6, 14, 10), bool] */;
  %419 = shape_of(%417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%417, dtype="bool") /* ty=Tensor[(6, 14, 10), bool] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %422 = cast(meta[relay.Constant][29] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %423 = cast(%var_4823, dtype="uint8") /* ty=uint8 */;
  %424 = reshape(%422, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %425 = reshape(%423, newshape=[]) /* ty=uint8 */;
  %426 = @func_3145(%424, %425) /* ty=(Tensor[(10, 96), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float32], Tensor[(11, 15, 9), bool], Tensor[(1485), float32], uint8) */;
  %427 = less(%420, %421) /* ty=Tensor[(6, 14, 10), bool] */;
  %428 = %426.3;
  (%427, %428, meta[relay.Constant][29] /* ty=Tensor[(1485), float32] */, %var_4823)
}

def @func_2142(%var_2117: Tensor[(13, 15, 16), bool], %var_2140: Tensor[(455), uint16]) -> (Tensor[(13, 15, 16), float64], Tensor[(455), uint16], Tensor[(455), uint16]) {
  %429 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %430 = %429.0;
  %431 = cast(%430, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %432 = acosh(%431) /* ty=Tensor[(13, 15, 16), float32] */;
  %433 = cast(%var_2117, dtype="int8") /* ty=Tensor[(13, 15, 16), int8] */;
  %434 = shape_of(%430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%430, dtype="int8") /* ty=Tensor[(13, 15, 16), int8] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %437 = multiply(%435, %436) /* ty=Tensor[(13, 15, 16), int8] */;
  %438 = cast(%437, dtype="int32") /* ty=Tensor[(13, 15, 16), int32] */;
  %439 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%432, dtype="int32") /* ty=Tensor[(13, 15, 16), int32] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %442 = minimum(%440, %441) /* ty=Tensor[(13, 15, 16), int32] */;
  %443 = cast(%442, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %444 = cast(%var_2140, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %445 = reshape(%444, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %446 = @func_502(%445) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %447 = sinh(%443) /* ty=Tensor[(13, 15, 16), float64] */;
  %448 = %446.2;
  (%447, %448, %var_2140)
}

def @func_7522() -> (Tensor[(13, 15, 16), bool],) {
  %449 = @func_3269() /* ty=(Tensor[(13, 15, 16), bool], uint8, Tensor[(144), float64], Tensor[(3120), bool], Tensor[(6), float64]) */;
  %450 = %449.0;
  (%450,)
}

def @func_7753() -> (Tensor[(216), uint16], Tensor[(216), uint16], Tensor[(13, 15, 16), float32]) {
  %451 = cast(meta[relay.Constant][30] /* ty=Tensor[(216), uint16] */, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %452 = reshape(%451, newshape=[216]) /* ty=Tensor[(216), uint16] */;
  %453 = @func_4278(%452) /* ty=(Tensor[(10, 96), float64], Tensor[(6, 3, 12), uint64], Tensor[(216), uint16]) */;
  %454 = @func_3269() /* ty=(Tensor[(13, 15, 16), bool], uint8, Tensor[(144), float64], Tensor[(3120), bool], Tensor[(6), float64]) */;
  %455 = %454.0;
  %456 = cast(%455, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %457 = %453.2;
  %458 = exp(%456) /* ty=Tensor[(13, 15, 16), float32] */;
  (%457, meta[relay.Constant][30] /* ty=Tensor[(216), uint16] */, %458)
}

def @func_2894() -> Tensor[(13, 15, 16), float32] {
  %459 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %459.0
}

def @func_1268(%var_1207: Tensor[(6, 2, 12), float64]) -> (Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) {
  %460 = cast(%var_1207, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
  %461 = cast(meta[relay.Constant][31] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %462 = cast(meta[relay.Constant][32] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %463 = reshape(%461, newshape=[11, 15, 9]) /* ty=Tensor[(11, 15, 9), float32] */;
  %464 = reshape(%462, newshape=[]) /* ty=uint8 */;
  %465 = @func_1079(%463, %464) /* ty=(Tensor[(11, 15, 9), bool], Tensor[(455), uint16], Tensor[(65, 7), uint16], Tensor[(5, 7, 3), bool], Tensor[(11, 15, 9), int64]) */;
  %466 = cast(%var_1207, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
  %467 = acosh(%466) /* ty=Tensor[(6, 2, 12), float64] */;
  %468 = cast(%var_1207, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
  %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%467, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %472 = tan(%460) /* ty=Tensor[(6, 2, 12), float64] */;
  %473 = %465.4;
  %474 = power(%470, %471) /* ty=Tensor[(6, 2, 12), float64] */;
  (%472, %473, meta[relay.Constant][31] /* ty=Tensor[(1485), float32] */, meta[relay.Constant][32] /* ty=uint8 */, %474)
}

def @func_6936() -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) {
  %475 = @func_3643() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %476 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %477 = %475.0;
  %478 = %476.0;
  (%477, %478)
}

def @func_1526(%var_1517: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), float64],) {
  %479 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %480 = %479.2;
  %481 = cast(%var_1517, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %482 = shape_of(%480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%480, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %485 = floor_divide(%483, %484) /* ty=Tensor[(13, 15, 16), float64] */;
  (%485,)
}

def @func_4991() -> (Tensor[(13, 15, 16), bool],) {
  %486 = @func_4884() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %487 = %486.0;
  (%487,)
}

def @func_1079(%var_1012: Tensor[(11, 15, 9), float32], %var_1063: uint8) -> (Tensor[(11, 15, 9), bool], Tensor[(455), uint16], Tensor[(65, 7), uint16], Tensor[(5, 7, 3), bool], Tensor[(11, 15, 9), int64]) {
  %488 = cast(%var_1012, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
  %489 = tan(%488) /* ty=Tensor[(11, 15, 9), float32] */;
  %490 = cast(%489, dtype="float64") /* ty=Tensor[(11, 15, 9), float64] */;
  %491 = log2(%490) /* ty=Tensor[(11, 15, 9), float64] */;
  %492 = cast(%489, dtype="bool") /* ty=Tensor[(11, 15, 9), bool] */;
  %493 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%491, dtype="bool") /* ty=Tensor[(11, 15, 9), bool] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %496 = cast(meta[relay.Constant][33] /* ty=Tensor[(65, 7), uint16] */, dtype="uint16") /* ty=Tensor[(65, 7), uint16] */;
  %497 = reshape(%496, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %498 = @func_502(%497) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %499 = cast(%var_1063, dtype="uint8") /* ty=uint8 */;
  %500 = reshape(%499, newshape=[]) /* ty=uint8 */;
  %501 = cast(%489, dtype="uint8") /* ty=Tensor[(11, 15, 9), uint8] */;
  %502 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%491, dtype="uint8") /* ty=Tensor[(11, 15, 9), uint8] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %505 = maximum(%503, %504) /* ty=Tensor[(11, 15, 9), uint8] */;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
  %507 = asinh(%506) /* ty=Tensor[(11, 15, 9), float32] */;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(11, 15, 9), float64] */;
  %509 = sigmoid(%508) /* ty=Tensor[(11, 15, 9), float64] */;
  %510 = cast(%509, dtype="int64") /* ty=Tensor[(11, 15, 9), int64] */;
  %511 = cast(%var_1063, dtype="int64") /* ty=int64 */;
  %512 = greater(%494, %495) /* ty=Tensor[(11, 15, 9), bool] */;
  %513 = %498.2;
  %514 = @func_57(%500) /* ty=Tensor[(5, 7, 3), bool] */;
  %515 = multiply(%510, %511) /* ty=Tensor[(11, 15, 9), int64] */;
  (%512, %513, meta[relay.Constant][33] /* ty=Tensor[(65, 7), uint16] */, %514, %515)
}

def @func_3885() -> (Tensor[(10, 96), float64],) {
  %516 = @func_3655() /* ty=Tensor[(10, 96), float64] */;
  (%516,)
}

def @func_2487() -> Tensor[(10, 96), float64] {
  %517 = @func_2381() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) */;
  %517.3
}

def @func_2609(%var_2606: Tensor[(144), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(144), float64]) {
  %518 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %519 = cast(%var_2606, dtype="float64") /* ty=Tensor[(144), float64] */;
  %520 = reshape(%519, newshape=[2, 72]) /* ty=Tensor[(2, 72), float64] */;
  %521 = @func_2533(%520) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(135), int16], Tensor[(2, 72), float64], Tensor[(1485), float32], Tensor[(455), uint16]) */;
  %522 = %518.0;
  %523 = %521.5;
  (%522, %523, %var_2606)
}

def @func_4072() -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) {
  %524 = @func_3643() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %525 = @func_4033() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %526 = %525.0;
  %527 = cast(%526, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %528 = cos(%527) /* ty=Tensor[(13, 15, 16), float32] */;
  %529 = cast(%528, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %530 = %524.0;
  %531 = log(%529) /* ty=Tensor[(13, 15, 16), float32] */;
  (%530, %531)
}

def @func_7723(%var_7716: Tensor[(144), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(1485), float32], Tensor[(144), float64]) {
  %532 = @func_4884() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %533 = cast(%var_7716, dtype="float64") /* ty=Tensor[(144), float64] */;
  %534 = reshape(%533, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %535 = @func_1268(%534) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) */;
  %536 = %532.0;
  %537 = %535.2;
  (%536, %537, %var_7716)
}

def @func_6375() -> (Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float64]) {
  %538 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
  %539 = %538.0;
  %540 = cast(%539, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %541 = reshape(%540, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float64] */;
  %542 = @func_4135() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %543 = @func_1932(%541) /* ty=Tensor[(10, 16, 6), float64] */;
  %544 = %542.0;
  %545 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
  (%539, %543, %544, %545)
}

def @func_6751(%var_6721: Tensor[(144), float64]) -> (Tensor[(10, 96), float64], Tensor[(13, 15, 16), float32], Tensor[(2, 72), float64], Tensor[(144), float64], Tensor[(10, 16, 6), float64]) {
  %546 = @func_6481() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %547 = cast(%var_6721, dtype="float64") /* ty=Tensor[(144), float64] */;
  %548 = reshape(%547, newshape=[2, 72]) /* ty=Tensor[(2, 72), float64] */;
  %549 = @func_2533(%548) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(135), int16], Tensor[(2, 72), float64], Tensor[(1485), float32], Tensor[(455), uint16]) */;
  %550 = %546.0;
  %551 = cast(%550, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %552 = @func_3853() /* ty=Tensor[(10, 96), float64] */;
  %553 = cast(%552, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %554 = cast(%550, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %555 = reshape(%551, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), bool] */;
  %556 = reshape(%553, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %557 = reshape(%554, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
  %558 = @func_3804(%555, %556, %557) /* ty=(Tensor[(13, 15, 16), int8], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(13, 15, 16), uint64], Tensor[(13, 15, 16), float32], Tensor[(135), int16], Tensor[(168), float32], Tensor[(135), int16]) */;
  %559 = %549.3;
  %560 = %558.1;
  (%552, %550, %559, %var_6721, %560)
}

def @func_3695(%var_3688: Tensor[(165, 9), float32]) -> (Tensor[(7, 4, 9), float64], Tensor[(455), uint16], Tensor[(135, 1), int16], Tensor[(144), float64], Tensor[(165, 9), float32], Tensor[(455), uint16]) {
  %561 = @func_3172() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %562 = cast(meta[relay.Constant][34] /* ty=Tensor[(135, 1), int16] */, dtype="int16") /* ty=Tensor[(135, 1), int16] */;
  %563 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %564 = cast(%var_3688, dtype="float32") /* ty=Tensor[(165, 9), float32] */;
  %565 = cast(meta[relay.Constant][36] /* ty=Tensor[(455), uint16] */, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %566 = reshape(%562, newshape=[9, 5, 3]) /* ty=Tensor[(9, 5, 3), int16] */;
  %567 = reshape(%563, newshape=[1, 144]) /* ty=Tensor[(1, 144), float64] */;
  %568 = reshape(%564, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %569 = reshape(%565, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %570 = @func_1862(%566, %567, %568, %569) /* ty=(Tensor[(9, 5, 3), bool], Tensor[(1, 144), float64], Tensor[(1485), uint16], Tensor[(7, 6, 1), float32], Tensor[(455), uint16], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32]) */;
  %571 = %561.0;
  %572 = %570.4;
  (%571, %572, meta[relay.Constant][34] /* ty=Tensor[(135, 1), int16] */, meta[relay.Constant][35] /* ty=Tensor[(144), float64] */, %var_3688, meta[relay.Constant][36] /* ty=Tensor[(455), uint16] */)
}

def @func_4928() -> (Tensor[(7, 4, 9), float64],) {
  %573 = @func_3987() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %574 = %573.0;
  (%574,)
}

def @func_3309(%var_3278: Tensor[(6, 3, 12), uint16], %var_3279: Tensor[(6, 3, 12), uint16]) -> (Tensor[(6, 3, 12), uint16], Tensor[(6, 3, 12), uint64]) {
  %575 = cast(%var_3279, dtype="uint16") /* ty=Tensor[(6, 3, 12), uint16] */;
  %576 = shape_of(%var_3278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%var_3278, dtype="uint16") /* ty=Tensor[(6, 3, 12), uint16] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %579 = cast(%var_3279, dtype="uint64") /* ty=Tensor[(6, 3, 12), uint64] */;
  %580 = shape_of(%var_3278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%var_3278, dtype="uint64") /* ty=Tensor[(6, 3, 12), uint64] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %583 = right_shift(%577, %578) /* ty=Tensor[(6, 3, 12), uint16] */;
  %584 = left_shift(%581, %582) /* ty=Tensor[(6, 3, 12), uint64] */;
  (%583, %584)
}

def @func_7838() -> (Tensor[(13, 15, 16), float32], Tensor[(5, 7, 3), bool], Tensor[(1, 455), uint16]) {
  %585 = @func_4072() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) */;
  %586 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 455), uint16] */, dtype="uint16") /* ty=Tensor[(1, 455), uint16] */;
  %587 = reshape(%586, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), uint16] */;
  %588 = @func_235(%587) /* ty=(Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) */;
  %589 = %585.0;
  %590 = %588.5;
  (%589, %590, meta[relay.Constant][37] /* ty=Tensor[(1, 455), uint16] */)
}

def @func_7296(%var_7281: Tensor[(16, 1, 6), uint16], %var_7282: Tensor[(16, 13, 6), uint16], %var_7290: Tensor[(16, 13, 6), uint16]) -> (Tensor[(16, 13, 6), bool], Tensor[(16, 13, 6), float32]) {
  %591 = cast(%var_7290, dtype="bool") /* ty=Tensor[(16, 13, 6), bool] */;
  %592 = shape_of(%var_7282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%var_7282, dtype="bool") /* ty=Tensor[(16, 13, 6), bool] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %595 = cast(%var_7281, dtype="uint16") /* ty=Tensor[(16, 1, 6), uint16] */;
  %596 = cast(%var_7282, dtype="uint16") /* ty=Tensor[(16, 13, 6), uint16] */;
  %597 = maximum(%595, %596) /* ty=Tensor[(16, 13, 6), uint16] */;
  %598 = cast(%597, dtype="float32") /* ty=Tensor[(16, 13, 6), float32] */;
  %599 = equal(%593, %594) /* ty=Tensor[(16, 13, 6), bool] */;
  %600 = log(%598) /* ty=Tensor[(16, 13, 6), float32] */;
  (%599, %600)
}

def @func_1597(%var_1592: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), float64], Tensor[(13, 15, 16), uint8]) {
  %601 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %602 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %603 = %602.2;
  %604 = cast(%var_1592, dtype="uint8") /* ty=Tensor[(13, 15, 16), uint8] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="uint8") /* ty=Tensor[(13, 15, 16), uint8] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %608 = %601.2;
  %609 = bitwise_or(%606, %607) /* ty=Tensor[(13, 15, 16), uint8] */;
  (%608, %609)
}

def @func_3804(%var_3767: Tensor[(13, 15, 16), bool], %var_3783: Tensor[(960), float64], %var_3785: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), int8], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(13, 15, 16), uint64], Tensor[(13, 15, 16), float32], Tensor[(135), int16], Tensor[(168), float32], Tensor[(135), int16]) {
  %610 = @func_1964() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) */;
  %611 = %610.0;
  %612 = cast(%var_3767, dtype="int8") /* ty=Tensor[(13, 15, 16), int8] */;
  %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%611, dtype="int8") /* ty=Tensor[(13, 15, 16), int8] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %616 = cast(%var_3783, dtype="float64") /* ty=Tensor[(960), float64] */;
  %617 = reshape(%616, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %618 = @func_3738(%617) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(10, 16, 6), float64], Tensor[(960), float64]) */;
  %619 = @func_3212() /* ty=Tensor[(13, 15, 16), bool] */;
  %620 = cast(%619, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %621 = log2(%620) /* ty=Tensor[(13, 15, 16), float64] */;
  %622 = cast(%var_3785, dtype="uint64") /* ty=Tensor[(13, 15, 16), uint64] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="uint64") /* ty=Tensor[(13, 15, 16), uint64] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %626 = cast(%621, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %627 = cast(meta[relay.Constant][38] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %628 = cast(meta[relay.Constant][39] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
  %629 = reshape(%627, newshape=[1, 12, 14]) /* ty=Tensor[(1, 12, 14), float32] */;
  %630 = reshape(%628, newshape=[135]) /* ty=Tensor[(135), int16] */;
  %631 = @func_2832(%629, %630) /* ty=(Tensor[(1, 12, 14), float32], Tensor[(13, 15, 16), float64], Tensor[(2, 12, 14), float32], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32], Tensor[(135), int16], Tensor[(144), float64], Tensor[(1485), float32], Tensor[(455, 1), float32]) */;
  %632 = bitwise_and(%614, %615) /* ty=Tensor[(13, 15, 16), int8] */;
  %633 = %618.1;
  %634 = logical_xor(%624, %625) /* ty=Tensor[(13, 15, 16), uint64] */;
  %635 = sigmoid(%626) /* ty=Tensor[(13, 15, 16), float32] */;
  %636 = %631.5;
  (%632, %633, %var_3783, %634, %635, %636, meta[relay.Constant][38] /* ty=Tensor[(168), float32] */, meta[relay.Constant][39] /* ty=Tensor[(135), int16] */)
}

def @func_1862(%var_1817: Tensor[(9, 5, 3), int16], %var_1826: Tensor[(1, 144), float64], %var_1828: Tensor[(1485), float32], %var_1845: Tensor[(455), uint16]) -> (Tensor[(9, 5, 3), bool], Tensor[(1, 144), float64], Tensor[(1485), uint16], Tensor[(7, 6, 1), float32], Tensor[(455), uint16], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32]) {
  %637 = cast(%var_1817, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
  %638 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(9, 5, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 5, 3), int16] */, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = cast(%var_1826, dtype="float64") /* ty=Tensor[(1, 144), float64] */;
  %642 = reshape(%641, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %643 = @func_1268(%642) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) */;
  %644 = %643.2;
  %645 = cast(%var_1828, dtype="uint16") /* ty=Tensor[(1485), uint16] */;
  %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(1), int32] */;
  %647 = cast(%644, dtype="uint16") /* ty=Tensor[(1485), uint16] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %649 = cast(%var_1845, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %650 = reshape(%649, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %651 = @func_502(%650) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %652 = cast(%var_1845, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %653 = reshape(%652, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), uint16] */;
  %654 = @func_235(%653) /* ty=(Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) */;
  %655 = cast(%var_1817, dtype="float32") /* ty=Tensor[(9, 5, 3), float32] */;
  %656 = equal(%639, %640) /* ty=Tensor[(9, 5, 3), bool] */;
  %657 = bitwise_or(%647, %648) /* ty=Tensor[(1485), uint16] */;
  %658 = %651.0;
  %659 = %654.5;
  %660 = cosh(%655) /* ty=Tensor[(9, 5, 3), float32] */;
  (%656, %var_1826, %657, %658, %var_1845, %659, %660)
}

def @func_7557() -> (Tensor[(13, 15, 16), bool],) {
  %661 = @func_6860() /* ty=Tensor[(13, 15, 16), bool] */;
  (%661,)
}

def @func_3145(%var_3114: Tensor[(1485), float32], %var_3115: uint8) -> (Tensor[(10, 96), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float32], Tensor[(11, 15, 9), bool], Tensor[(1485), float32], uint8) {
  %662 = @func_1964() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) */;
  %663 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
  %664 = cast(%663, dtype="float32") /* ty=Tensor[(10, 96), float32] */;
  %665 = cast(%var_3114, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %666 = cast(%var_3115, dtype="uint8") /* ty=uint8 */;
  %667 = reshape(%665, newshape=[11, 15, 9]) /* ty=Tensor[(11, 15, 9), float32] */;
  %668 = reshape(%666, newshape=[]) /* ty=uint8 */;
  %669 = @func_1079(%667, %668) /* ty=(Tensor[(11, 15, 9), bool], Tensor[(455), uint16], Tensor[(65, 7), uint16], Tensor[(5, 7, 3), bool], Tensor[(11, 15, 9), int64]) */;
  %670 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
  %671 = %662.0;
  %672 = acosh(%664) /* ty=Tensor[(10, 96), float32] */;
  %673 = %669.0;
  (%670, %671, %672, %673, %var_3114, %var_3115)
}

def @func_3634(%var_3624: Tensor[(960), float64]) -> (Tensor[(13, 15, 16), float32], Tensor[(12, 18), uint16], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(6, 3, 12), float64]) {
  %674 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %675 = %674.0;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %677 = cast(%var_3624, dtype="float64") /* ty=Tensor[(960), float64] */;
  %678 = reshape(%677, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float64] */;
  %679 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 18), uint16] */, dtype="uint16") /* ty=Tensor[(12, 18), uint16] */;
  %680 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 18), uint16] */, dtype="uint16") /* ty=Tensor[(12, 18), uint16] */;
  %681 = reshape(%679, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
  %682 = reshape(%680, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
  %683 = @func_3309(%681, %682) /* ty=(Tensor[(6, 3, 12), uint16], Tensor[(6, 3, 12), uint64]) */;
  %684 = %683.1;
  %685 = cast(%684, dtype="float64") /* ty=Tensor[(6, 3, 12), float64] */;
  %686 = log10(%676) /* ty=Tensor[(13, 15, 16), float32] */;
  %687 = @func_1932(%678) /* ty=Tensor[(10, 16, 6), float64] */;
  %688 = asinh(%685) /* ty=Tensor[(6, 3, 12), float64] */;
  (%686, meta[relay.Constant][41] /* ty=Tensor[(12, 18), uint16] */, %687, %var_3624, %688)
}

def @func_6255() -> (Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) {
  %689 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %690 = %689.0;
  %691 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
  (%690, %691)
}

def @func_502(%var_500: Tensor[(455), uint16]) -> (Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) {
  %692 = cast(meta[relay.Constant][42] /* ty=Tensor[(7, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 1), float32] */;
  %693 = cast(%var_500, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %694 = reshape(%693, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), uint16] */;
  %695 = @func_235(%694) /* ty=(Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) */;
  %696 = acos(%692) /* ty=Tensor[(7, 6, 1), float32] */;
  %697 = %695.7;
  (%696, %697, %var_500)
}

def @func_4688(%var_4676: Tensor[(13, 15, 16), float32]) -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) {
  %698 = @func_4072() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) */;
  %699 = %698.1;
  %700 = cast(%var_4676, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%699, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %704 = cast(%699, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %705 = reshape(%704, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
  %706 = @func_1526(%705) /* ty=(Tensor[(13, 15, 16), float64],) */;
  %707 = equal(%702, %703) /* ty=Tensor[(13, 15, 16), bool] */;
  %708 = %706.0;
  (%707, %708)
}

def @func_2832(%var_2797: Tensor[(1, 12, 14), float32], %var_2824: Tensor[(135), int16]) -> (Tensor[(1, 12, 14), float32], Tensor[(13, 15, 16), float64], Tensor[(2, 12, 14), float32], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32], Tensor[(135), int16], Tensor[(144), float64], Tensor[(1485), float32], Tensor[(455, 1), float32]) {
  %709 = cast(%var_2797, dtype="float32") /* ty=Tensor[(1, 12, 14), float32] */;
  %710 = @func_1654() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) */;
  %711 = cast(%var_2797, dtype="float32") /* ty=Tensor[(1, 12, 14), float32] */;
  %712 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 14), float32] */;
  %713 = cast(meta[relay.Constant][44] /* ty=Tensor[(455, 1), uint16] */, dtype="uint16") /* ty=Tensor[(455, 1), uint16] */;
  %714 = reshape(%713, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %715 = @func_502(%714) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %716 = cast(%var_2824, dtype="int16") /* ty=Tensor[(135), int16] */;
  %717 = cast(meta[relay.Constant][45] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %718 = cast(meta[relay.Constant][46] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %719 = cast(meta[relay.Constant][44] /* ty=Tensor[(455, 1), uint16] */, dtype="uint16") /* ty=Tensor[(455, 1), uint16] */;
  %720 = reshape(%716, newshape=[9, 5, 3]) /* ty=Tensor[(9, 5, 3), int16] */;
  %721 = reshape(%717, newshape=[1, 144]) /* ty=Tensor[(1, 144), float64] */;
  %722 = reshape(%718, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %723 = reshape(%719, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %724 = @func_1862(%720, %721, %722, %723) /* ty=(Tensor[(9, 5, 3), bool], Tensor[(1, 144), float64], Tensor[(1485), uint16], Tensor[(7, 6, 1), float32], Tensor[(455), uint16], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32]) */;
  %725 = cast(meta[relay.Constant][44] /* ty=Tensor[(455, 1), uint16] */, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
  %726 = asinh(%725) /* ty=Tensor[(455, 1), float32] */;
  %727 = cast(%726, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
  %728 = log2(%709) /* ty=Tensor[(1, 12, 14), float32] */;
  %729 = %710.1;
  %730 = floor_mod(%711, %712) /* ty=Tensor[(2, 12, 14), float32] */;
  %731 = %715.1;
  %732 = %724.6;
  %733 = exp(%727) /* ty=Tensor[(455, 1), float32] */;
  (%728, %729, %730, %731, %732, %var_2824, meta[relay.Constant][45] /* ty=Tensor[(144), float64] */, meta[relay.Constant][46] /* ty=Tensor[(1485), float32] */, %733)
}

def @func_7395() -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64], Tensor[(13, 11, 13), float64]) {
  %734 = @func_4072() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) */;
  %735 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
  %736 = @func_3971() /* ty=(Tensor[(13, 11, 13), float64], Tensor[(10, 96), float64]) */;
  %737 = %734.0;
  %738 = @func_2894() /* ty=Tensor[(13, 15, 16), float32] */;
  %739 = %735.0;
  %740 = %736.0;
  (%737, %738, %739, %740)
}

def @func_7484(%var_7450: Tensor[(144), float64]) -> (Tensor[(13, 15, 16), float32], Tensor[(144), float64], Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) {
  %741 = @func_2959() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %742 = cast(%var_7450, dtype="float64") /* ty=Tensor[(144), float64] */;
  %743 = reshape(%742, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %744 = @func_6751(%743) /* ty=(Tensor[(10, 96), float64], Tensor[(13, 15, 16), float32], Tensor[(2, 72), float64], Tensor[(144), float64], Tensor[(10, 16, 6), float64]) */;
  %745 = %744.0;
  %746 = cast(%745, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %747 = reshape(%746, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %748 = @func_3634(%747) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(12, 18), uint16], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(6, 3, 12), float64]) */;
  %749 = cast(%745, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %750 = %741.0;
  %751 = %748.0;
  %752 = acos(%749) /* ty=Tensor[(10, 96), float64] */;
  (%750, %var_7450, %751, %752)
}

def @func_3212() -> Tensor[(13, 15, 16), bool] {
  %753 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %753.0
}

def @func_4884() -> (Tensor[(13, 15, 16), bool],) {
  %754 = @func_1654() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) */;
  %755 = %754.0;
  (%755,)
}

def @func_3655() -> Tensor[(10, 96), float64] {
  @func_3569() /* ty=Tensor[(10, 96), float64] */
}

def @func_5898() -> (Tensor[(10, 96), float64], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) {
  %756 = @func_2859() /* ty=Tensor[(13, 15, 16), bool] */;
  %757 = cast(%756, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %758 = reshape(%757, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float32] */;
  %759 = @func_1739(%758) /* ty=(Tensor[(13, 15, 16), float64], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(7, 12, 4), float64], Tensor[(13, 15, 16), float64]) */;
  %760 = @func_3569() /* ty=Tensor[(10, 96), float64] */;
  %761 = %759.4;
  (%760, %756, %761)
}

def @func_1636(%var_1627: Tensor[(7, 12, 4), float64]) -> Tensor[(7, 12, 4), float64] {
  %762 = cast(%var_1627, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  log2(%762) /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_235(%var_172: Tensor[(5, 7, 13), uint16]) -> (Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) {
  %763 = cast(meta[relay.Constant][47] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %764 = cast(%var_172, dtype="uint16") /* ty=Tensor[(5, 7, 13), uint16] */;
  %765 = cast(meta[relay.Constant][47] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %766 = reshape(%765, newshape=[]) /* ty=uint8 */;
  %767 = cast(meta[relay.Constant][47] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %768 = reshape(%767, newshape=[]) /* ty=uint8 */;
  %769 = cast(%var_172, dtype="float64") /* ty=Tensor[(5, 7, 13), float64] */;
  %770 = cast(meta[relay.Constant][47] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %771 = reshape(%770, newshape=[]) /* ty=uint8 */;
  %772 = cast(meta[relay.Constant][47] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %773 = reshape(%772, newshape=[]) /* ty=uint8 */;
  %774 = cast(meta[relay.Constant][47] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %775 = reshape(%774, newshape=[]) /* ty=uint8 */;
  %776 = cast(meta[relay.Constant][47] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %777 = reshape(%776, newshape=[]) /* ty=uint8 */;
  %778 = subtract(%763, %764) /* ty=Tensor[(5, 7, 13), uint16] */;
  %779 = @func_57(%766) /* ty=Tensor[(5, 7, 3), bool] */;
  %780 = @func_57(%768) /* ty=Tensor[(5, 7, 3), bool] */;
  %781 = acosh(%769) /* ty=Tensor[(5, 7, 13), float64] */;
  %782 = @func_57(%771) /* ty=Tensor[(5, 7, 3), bool] */;
  %783 = @func_57(%773) /* ty=Tensor[(5, 7, 3), bool] */;
  %784 = @func_57(%775) /* ty=Tensor[(5, 7, 3), bool] */;
  %785 = @func_57(%777) /* ty=Tensor[(5, 7, 3), bool] */;
  (%778, %779, %780, %781, %782, %783, %784, %785)
}

def @func_5731(%var_5708: Tensor[(10, 96), float64]) -> (Tensor[(10, 96), float64],) {
  %786 = @func_3569() /* ty=Tensor[(10, 96), float64] */;
  %787 = cast(%var_5708, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(2), int32] */;
  %789 = cast(%786, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %791 = equal(%789, %790) /* ty=Tensor[(10, 96), bool] */;
  %792 = cast(%791, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %793 = tan(%792) /* ty=Tensor[(10, 96), float64] */;
  (%793,)
}

def @func_2432(%var_2425: Tensor[(13, 15, 16), bool]) -> Tensor[(13, 15, 16), float64] {
  %794 = @func_1654() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) */;
  %795 = %794.0;
  %796 = cast(%var_2425, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%795, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  add(%798, %799) /* ty=Tensor[(13, 15, 16), float64] */
}

def @func_5182() -> Tensor[(10, 96), float64] {
  @func_3655() /* ty=Tensor[(10, 96), float64] */
}

def @func_8581() -> (Tensor[(7, 4, 9), float64], Tensor[(13, 15, 16), float32], Tensor[(7, 4, 9), float64], Tensor[(10, 96), float64], Tensor[(13, 15, 16), float32]) {
  %800 = @func_7635() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %801 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %802 = @func_3172() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %803 = @func_7242() /* ty=(Tensor[(10, 96), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64]) */;
  %804 = @func_6936() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) */;
  %805 = %800.0;
  %806 = %801.1;
  %807 = %802.0;
  %808 = %803.0;
  %809 = %804.1;
  (%805, %806, %807, %808, %809)
}

def @func_7784(%var_7782: Tensor[(252), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(7, 4, 9), float32], Tensor[(252), float64]) {
  %810 = @func_4135() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %811 = cast(%var_7782, dtype="float64") /* ty=Tensor[(252), float64] */;
  %812 = reshape(%811, newshape=[7, 4, 9]) /* ty=Tensor[(7, 4, 9), float64] */;
  %813 = @func_5543(%812) /* ty=(Tensor[(7, 4, 9), float32],) */;
  %814 = %810.0;
  %815 = %813.0;
  (%814, %815, %var_7782)
}

def @func_7242() -> (Tensor[(10, 96), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64]) {
  %816 = cast(meta[relay.Constant][48] /* ty=Tensor[(880), float64] */, dtype="float64") /* ty=Tensor[(880), float64] */;
  %817 = cast(meta[relay.Constant][48] /* ty=Tensor[(880), float64] */, dtype="float64") /* ty=Tensor[(880), float64] */;
  %818 = reshape(%816, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
  %819 = reshape(%817, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
  %820 = @func_3569() /* ty=Tensor[(10, 96), float64] */;
  %821 = @func_3916(%818, %819) /* ty=Tensor[(5, 16, 11), float64] */;
  (%820, %821, meta[relay.Constant][48] /* ty=Tensor[(880), float64] */)
}

def @func_6200(%var_6198: Tensor[(110), int64]) -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64], Tensor[(5, 2, 11), float64], int64, Tensor[(110), int64]) {
  %822 = @func_5620() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %823 = %822.0;
  %824 = cast(%823, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %825 = reshape(%824, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
  %826 = @func_1526(%825) /* ty=(Tensor[(13, 15, 16), float64],) */;
  %827 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %828 = cast(%var_6198, dtype="int64") /* ty=Tensor[(110), int64] */;
  %829 = reshape(%827, newshape=[]) /* ty=int64 */;
  %830 = reshape(%828, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int64] */;
  %831 = @func_4772(%829, %830) /* ty=(Tensor[(5, 2, 11), float64],) */;
  %832 = %826.0;
  %833 = %831.0;
  (%823, %832, %833, -6 /* ty=int64 */, %var_6198)
}

def @func_7920(%var_7912: Tensor[(10, 96), float64]) -> Tensor[(10, 96), int32] {
  %834 = @func_2381() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) */;
  %835 = %834.3;
  %836 = cast(%var_7912, dtype="int32") /* ty=Tensor[(10, 96), int32] */;
  %837 = shape_of(%835, dtype="int32") /* ty=Tensor[(2), int32] */;
  %838 = cast(%835, dtype="int32") /* ty=Tensor[(10, 96), int32] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  subtract(%838, %839) /* ty=Tensor[(10, 96), int32] */
}

def @func_3987() -> (Tensor[(7, 4, 9), float64],) {
  %840 = @func_3498() /* ty=(Tensor[(455), uint16], Tensor[(7, 4, 9), float64]) */;
  %841 = %840.1;
  (%841,)
}

def @func_3916(%var_3909: Tensor[(5, 16, 11), float64], %var_3910: Tensor[(5, 16, 11), float64]) -> Tensor[(5, 16, 11), float64] {
  %842 = cast(%var_3910, dtype="float64") /* ty=Tensor[(5, 16, 11), float64] */;
  %843 = shape_of(%var_3909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%var_3909, dtype="float64") /* ty=Tensor[(5, 16, 11), float64] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%844, %845) /* ty=Tensor[(5, 16, 11), float64] */
}

def @func_6605() -> (Tensor[(13, 15, 16), float32],) {
  %846 = @func_6255() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) */;
  %847 = %846.0;
  (%847,)
}

def @func_4506() -> (Tensor[(10, 96), float64],) {
  %848 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
  (%848,)
}

def @func_7946() -> Tensor[(13, 15, 16), float64] {
  %849 = @func_2894() /* ty=Tensor[(13, 15, 16), float32] */;
  %850 = cast(%849, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  erf(%850) /* ty=Tensor[(13, 15, 16), float64] */
}

def @func_3971() -> (Tensor[(13, 11, 13), float64], Tensor[(10, 96), float64]) {
  %851 = cast(meta[relay.Constant][49] /* ty=Tensor[(13, 11, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
  %852 = sqrt(%851) /* ty=Tensor[(13, 11, 13), float64] */;
  %853 = @func_3853() /* ty=Tensor[(10, 96), float64] */;
  (%852, %853)
}

def @func_6860() -> Tensor[(13, 15, 16), bool] {
  %854 = @func_4991() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %854.0
}

def @func_7599() -> (Tensor[(13, 15, 16), bool], Tensor[(10, 16, 6), float64]) {
  %855 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %856 = @func_6375() /* ty=(Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float64]) */;
  %857 = %856.1;
  %858 = cast(%857, dtype="float32") /* ty=Tensor[(10, 16, 6), float32] */;
  %859 = log2(%858) /* ty=Tensor[(10, 16, 6), float32] */;
  %860 = cast(%859, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
  %861 = %855.0;
  %862 = cos(%860) /* ty=Tensor[(10, 16, 6), float64] */;
  (%861, %862)
}

def @func_8087(%var_8074: Tensor[(7, 4, 9), float64]) -> (Tensor[(7, 4, 9), float32], Tensor[(7, 4, 9), float64]) {
  %863 = @func_7635() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %864 = %863.0;
  %865 = cast(%var_8074, dtype="float32") /* ty=Tensor[(7, 4, 9), float32] */;
  %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%864, dtype="float32") /* ty=Tensor[(7, 4, 9), float32] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %869 = @func_3498() /* ty=(Tensor[(455), uint16], Tensor[(7, 4, 9), float64]) */;
  %870 = divide(%867, %868) /* ty=Tensor[(7, 4, 9), float32] */;
  %871 = %869.1;
  (%870, %871)
}

def @func_3569() -> Tensor[(10, 96), float64] {
  @func_2487() /* ty=Tensor[(10, 96), float64] */
}

def @func_2476() -> (Tensor[(13, 15, 16), float32],) {
  %872 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %873 = %872.1;
  (%873,)
}

def @func_3842(%var_3826: uint32, %var_3827: Tensor[(5, 1, 13), uint32]) -> (Tensor[(5, 1, 13), uint32], Tensor[(13, 15, 16), float32]) {
  %874 = cast(%var_3826, dtype="uint32") /* ty=uint32 */;
  %875 = cast(%var_3827, dtype="uint32") /* ty=Tensor[(5, 1, 13), uint32] */;
  %876 = @func_2959() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %877 = left_shift(%874, %875) /* ty=Tensor[(5, 1, 13), uint32] */;
  %878 = %876.0;
  (%877, %878)
}

def @func_8215() -> (Tensor[(10, 96), float64],) {
  %879 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
  %880 = %879.0;
  (%880,)
}

def @func_4489() -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), bool]) {
  %881 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %882 = @func_2222() /* ty=Tensor[(13, 15, 16), float32] */;
  %883 = %881.0;
  (%882, %883)
}

def @func_1932(%var_1893: Tensor[(10, 16, 6), float64]) -> Tensor[(10, 16, 6), float64] {
  %884 = cast(%var_1893, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
  %885 = sinh(%884) /* ty=Tensor[(10, 16, 6), float64] */;
  %886 = cast(%885, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
  sigmoid(%886) /* ty=Tensor[(10, 16, 6), float64] */
}

def @func_6697() -> (Tensor[(13, 15, 16), float32], Tensor[(144), float64], Tensor[(144), float64], Tensor[(13, 15, 16), bool]) {
  %887 = @func_5101() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %888 = cast(meta[relay.Constant][50] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %889 = reshape(%888, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %890 = @func_2609(%889) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(144), float64]) */;
  %891 = @func_1654() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) */;
  %892 = %887.0;
  %893 = %890.2;
  %894 = %891.0;
  (%892, %893, meta[relay.Constant][50] /* ty=Tensor[(144), float64] */, %894)
}

def @func_3643() -> (Tensor[(13, 15, 16), float32],) {
  %895 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %896 = %895.0;
  (%896,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3172() -> (Tensor[(7, 4, 9), float64],) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 4, 9), float64] */, dtype="float64") /* ty=Tensor[(7, 4, 9), float64] */;
  %1 = asin(%0) /* ty=Tensor[(7, 4, 9), float64] */;
  (%1,)
}

def @func_3656() -> Tensor[(10, 96), float64] {
  %2 = fn () -> Tensor[(10, 96), float64] {
    @func_3569() /* ty=Tensor[(10, 96), float64] */
  };
  %2() /* ty=Tensor[(10, 96), float64] */
}

def @func_6256() -> (Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) {
  %6 = fn () -> (Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) {
    %3 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
    %4 = %3.0;
    %5 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
    (%4, %5)
  };
  %6() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) */
}

def @func_1600(%var_1598: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), float64], Tensor[(13, 15, 16), uint8]) {
  @func_1597(%var_1598) /* ty=(Tensor[(13, 15, 16), float64], Tensor[(13, 15, 16), uint8]) */
}

def @func_3270() -> (Tensor[(13, 15, 16), bool], uint8, Tensor[(144), float64], Tensor[(3120), bool], Tensor[(6), float64]) {
  %18 = fn () -> (Tensor[(13, 15, 16), bool], uint8, Tensor[(144), float64], Tensor[(3120), bool], Tensor[(6), float64]) {
    %7 = cast(meta[relay.Constant][1] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %8 = reshape(%7, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
    %9 = @func_1268(%8) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) */;
    %10 = cast(meta[relay.Constant][2] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
    %11 = @func_2859() /* ty=Tensor[(13, 15, 16), bool] */;
    %12 = cast(%11, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
    %13 = reshape(%10, newshape=[6, 1]) /* ty=Tensor[(6, 1), float64] */;
    %14 = reshape(%12, newshape=[3120]) /* ty=Tensor[(3120), bool] */;
    %15 = @func_2782(%13, %14) /* ty=(Tensor[(6, 1), bool], Tensor[(3120), bool], Tensor[(7, 6, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(455), uint32]) */;
    %16 = %9.3;
    %17 = %15.1;
    (%11, %16, meta[relay.Constant][1] /* ty=Tensor[(144), float64] */, %17, meta[relay.Constant][2] /* ty=Tensor[(6), float64] */)
  };
  %18() /* ty=(Tensor[(13, 15, 16), bool], uint8, Tensor[(144), float64], Tensor[(3120), bool], Tensor[(6), float64]) */
}

def @func_4688(%var_4676: Tensor[(13, 15, 16), float32]) -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) {
  %19 = @func_4072() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) */;
  %20 = %19.1;
  %21 = cast(%var_4676, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%20, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %25 = cast(%20, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %26 = reshape(%25, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
  %27 = @func_1526(%26) /* ty=(Tensor[(13, 15, 16), float64],) */;
  %28 = equal(%23, %24) /* ty=Tensor[(13, 15, 16), bool] */;
  %29 = %27.0;
  (%28, %29)
}

def @func_7179() -> (Tensor[(7, 6, 1), float64], Tensor[(13, 15, 16), float32]) {
  %30 = @func_1964() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) */;
  %31 = %30.1;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %33 = @func_6697() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(144), float64], Tensor[(144), float64], Tensor[(13, 15, 16), bool]) */;
  %34 = acosh(%32) /* ty=Tensor[(7, 6, 1), float64] */;
  %35 = %33.0;
  (%34, %35)
}

def @func_3916(%var_3909: Tensor[(5, 16, 11), float64], %var_3910: Tensor[(5, 16, 11), float64]) -> Tensor[(5, 16, 11), float64] {
  %36 = cast(%var_3910, dtype="float64") /* ty=Tensor[(5, 16, 11), float64] */;
  %37 = shape_of(%var_3909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%var_3909, dtype="float64") /* ty=Tensor[(5, 16, 11), float64] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%38, %39) /* ty=Tensor[(5, 16, 11), float64] */
}

def @func_2435(%var_2433: Tensor[(13, 15, 16), bool]) -> Tensor[(13, 15, 16), float64] {
  @func_2432(%var_2433) /* ty=Tensor[(13, 15, 16), float64] */
}

def @func_2533(%var_2526: Tensor[(2, 72), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(135), int16], Tensor[(2, 72), float64], Tensor[(1485), float32], Tensor[(455), uint16]) {
  %40 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %41 = cast(meta[relay.Constant][3] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
  %42 = cast(%var_2526, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %43 = cast(meta[relay.Constant][4] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %44 = cast(meta[relay.Constant][5] /* ty=Tensor[(455), uint16] */, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %45 = reshape(%41, newshape=[9, 5, 3]) /* ty=Tensor[(9, 5, 3), int16] */;
  %46 = reshape(%42, newshape=[1, 144]) /* ty=Tensor[(1, 144), float64] */;
  %47 = reshape(%43, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
  %48 = reshape(%44, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %49 = @func_1862(%45, %46, %47, %48) /* ty=(Tensor[(9, 5, 3), bool], Tensor[(1, 144), float64], Tensor[(1485), uint16], Tensor[(7, 6, 1), float32], Tensor[(455), uint16], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32]) */;
  %50 = %40.0;
  %51 = %49.3;
  (%50, %51, meta[relay.Constant][3] /* ty=Tensor[(135), int16] */, %var_2526, meta[relay.Constant][4] /* ty=Tensor[(1485), float32] */, meta[relay.Constant][5] /* ty=Tensor[(455), uint16] */)
}

def @func_4073() -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) {
  %60 = fn () -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) {
    %52 = @func_3643() /* ty=(Tensor[(13, 15, 16), float32],) */;
    %53 = @func_4033() /* ty=(Tensor[(13, 15, 16), bool],) */;
    %54 = %53.0;
    %55 = cast(%54, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
    %56 = cos(%55) /* ty=Tensor[(13, 15, 16), float32] */;
    %57 = cast(%56, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
    %58 = %52.0;
    %59 = log(%57) /* ty=Tensor[(13, 15, 16), float32] */;
    (%58, %59)
  };
  %60() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) */
}

def @func_3972() -> (Tensor[(13, 11, 13), float64], Tensor[(10, 96), float64]) {
  %64 = fn () -> (Tensor[(13, 11, 13), float64], Tensor[(10, 96), float64]) {
    %61 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 11, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
    %62 = sqrt(%61) /* ty=Tensor[(13, 11, 13), float64] */;
    %63 = @func_3853() /* ty=Tensor[(10, 96), float64] */;
    (%62, %63)
  };
  %64() /* ty=(Tensor[(13, 11, 13), float64], Tensor[(10, 96), float64]) */
}

def @func_1638(%var_1637: Tensor[(7, 12, 4), float64]) -> Tensor[(7, 12, 4), float64] {
  %66 = fn (%var_1627: Tensor[(7, 12, 4), float64]) -> Tensor[(7, 12, 4), float64] {
    %65 = cast(%var_1627, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
    log2(%65) /* ty=Tensor[(7, 12, 4), float64] */
  };
  %66(%var_1637) /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_1083(%var_1081: Tensor[(11, 15, 9), float32], %var_1082: uint8) -> (Tensor[(11, 15, 9), bool], Tensor[(455), uint16], Tensor[(65, 7), uint16], Tensor[(5, 7, 3), bool], Tensor[(11, 15, 9), int64]) {
  @func_1079(%var_1081, %var_1082) /* ty=(Tensor[(11, 15, 9), bool], Tensor[(455), uint16], Tensor[(65, 7), uint16], Tensor[(5, 7, 3), bool], Tensor[(11, 15, 9), int64]) */
}

def @func_3987() -> (Tensor[(7, 4, 9), float64],) {
  %67 = @func_3498() /* ty=(Tensor[(455), uint16], Tensor[(7, 4, 9), float64]) */;
  %68 = %67.1;
  (%68,)
}

def @func_6556(%var_6554: Tensor[(65, 7), uint16], %var_6555: Tensor[(65, 7), int32]) -> (Tensor[(13, 15, 16), float32], Tensor[(15, 11, 8), int16], Tensor[(1320), float32], Tensor[(65, 7), uint64]) {
  %94 = fn (%var_6505: Tensor[(65, 7), uint16], %var_6536: Tensor[(65, 7), int32]) -> (Tensor[(13, 15, 16), float32], Tensor[(15, 11, 8), int16], Tensor[(1320), float32], Tensor[(65, 7), uint64]) {
    %69 = @func_2959() /* ty=(Tensor[(13, 15, 16), float32],) */;
    %70 = cast(meta[relay.Constant][7] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %71 = cast(%var_6505, dtype="uint16") /* ty=Tensor[(65, 7), uint16] */;
    %72 = cast(meta[relay.Constant][7] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %73 = reshape(%70, newshape=[15, 11, 8]) /* ty=Tensor[(15, 11, 8), float32] */;
    %74 = reshape(%71, newshape=[455]) /* ty=Tensor[(455), uint16] */;
    %75 = reshape(%72, newshape=[15, 11, 8]) /* ty=Tensor[(15, 11, 8), float32] */;
    %76 = @func_5445(%73, %74, %75) /* ty=(Tensor[(5, 7, 3), bool], Tensor[(455), uint16], Tensor[(15, 11, 8), int16]) */;
    %77 = cast(meta[relay.Constant][8] /* ty=Tensor[(65, 7), uint16] */, dtype="int32") /* ty=Tensor[(65, 7), int32] */;
    %78 = shape_of(%var_6505, dtype="int32") /* ty=Tensor[(2), int32] */;
    %79 = cast(%var_6505, dtype="int32") /* ty=Tensor[(65, 7), int32] */;
    %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %81 = logical_xor(%79, %80) /* ty=Tensor[(65, 7), int32] */;
    %82 = cast(%var_6536, dtype="bool") /* ty=Tensor[(65, 7), bool] */;
    %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(2), int32] */;
    %84 = cast(%81, dtype="bool") /* ty=Tensor[(65, 7), bool] */;
    %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %86 = less_equal(%84, %85) /* ty=Tensor[(65, 7), bool] */;
    %87 = cast(meta[relay.Constant][8] /* ty=Tensor[(65, 7), uint16] */, dtype="uint64") /* ty=Tensor[(65, 7), uint64] */;
    %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(2), int32] */;
    %89 = cast(%86, dtype="uint64") /* ty=Tensor[(65, 7), uint64] */;
    %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %91 = %69.0;
    %92 = %76.2;
    %93 = right_shift(%89, %90) /* ty=Tensor[(65, 7), uint64] */;
    (%91, %92, meta[relay.Constant][7] /* ty=Tensor[(1320), float32] */, %93)
  };
  %94(%var_6554, %var_6555) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(15, 11, 8), int16], Tensor[(1320), float32], Tensor[(65, 7), uint64]) */
}

def @func_4135() -> (Tensor[(13, 15, 16), bool],) {
  %95 = @func_1964() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) */;
  %96 = %95.0;
  (%96,)
}

def @func_8191(%var_8189: Tensor[(960), float64]) -> (Tensor[(7, 4, 9), float64], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(960), float64]) {
  @func_8188(%var_8189) /* ty=(Tensor[(7, 4, 9), float64], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(960), float64]) */
}

def @func_6200(%var_6198: Tensor[(110), int64]) -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64], Tensor[(5, 2, 11), float64], int64, Tensor[(110), int64]) {
  %97 = @func_5620() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %98 = %97.0;
  %99 = cast(%98, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %100 = reshape(%99, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
  %101 = @func_1526(%100) /* ty=(Tensor[(13, 15, 16), float64],) */;
  %102 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %103 = cast(%var_6198, dtype="int64") /* ty=Tensor[(110), int64] */;
  %104 = reshape(%102, newshape=[]) /* ty=int64 */;
  %105 = reshape(%103, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int64] */;
  %106 = @func_4772(%104, %105) /* ty=(Tensor[(5, 2, 11), float64],) */;
  %107 = %101.0;
  %108 = %106.0;
  (%98, %107, %108, -6 /* ty=int64 */, %var_6198)
}

def @func_6377() -> (Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float64]) {
  @func_6375() /* ty=(Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float64]) */
}

def @func_4392() -> (Tensor[(10, 96), float64],) {
  %111 = fn () -> (Tensor[(10, 96), float64],) {
    %109 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
    %110 = %109.0;
    (%110,)
  };
  %111() /* ty=(Tensor[(10, 96), float64],) */
}

def @func_5622() -> (Tensor[(13, 15, 16), bool],) {
  @func_5620() /* ty=(Tensor[(13, 15, 16), bool],) */
}

def @func_6936() -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) {
  %112 = @func_3643() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %113 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %114 = %112.0;
  %115 = %113.0;
  (%114, %115)
}

def @func_3636(%var_3635: Tensor[(960), float64]) -> (Tensor[(13, 15, 16), float32], Tensor[(12, 18), uint16], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(6, 3, 12), float64]) {
  %131 = fn (%var_3624: Tensor[(960), float64]) -> (Tensor[(13, 15, 16), float32], Tensor[(12, 18), uint16], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(6, 3, 12), float64]) {
    %116 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
    %117 = %116.0;
    %118 = cast(%117, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
    %119 = cast(%var_3624, dtype="float64") /* ty=Tensor[(960), float64] */;
    %120 = reshape(%119, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float64] */;
    %121 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 18), uint16] */, dtype="uint16") /* ty=Tensor[(12, 18), uint16] */;
    %122 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 18), uint16] */, dtype="uint16") /* ty=Tensor[(12, 18), uint16] */;
    %123 = reshape(%121, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
    %124 = reshape(%122, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
    %125 = @func_3309(%123, %124) /* ty=(Tensor[(6, 3, 12), uint16], Tensor[(6, 3, 12), uint64]) */;
    %126 = %125.1;
    %127 = cast(%126, dtype="float64") /* ty=Tensor[(6, 3, 12), float64] */;
    %128 = log10(%118) /* ty=Tensor[(13, 15, 16), float32] */;
    %129 = @func_1932(%120) /* ty=Tensor[(10, 16, 6), float64] */;
    %130 = asinh(%127) /* ty=Tensor[(6, 3, 12), float64] */;
    (%128, meta[relay.Constant][9] /* ty=Tensor[(12, 18), uint16] */, %129, %var_3624, %130)
  };
  %131(%var_3635) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(12, 18), uint16], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(6, 3, 12), float64]) */
}

def @func_3920(%var_3918: Tensor[(5, 16, 11), float64], %var_3919: Tensor[(5, 16, 11), float64]) -> Tensor[(5, 16, 11), float64] {
  @func_3916(%var_3918, %var_3919) /* ty=Tensor[(5, 16, 11), float64] */
}

def @func_2320(%var_2317: Tensor[(16, 4, 5), int64], %var_2318: Tensor[(16, 4, 5), int64], %var_2319: Tensor[(455), uint16]) -> (Tensor[(16, 4, 5), int64], Tensor[(455), uint16], Tensor[(455), uint16]) {
  @func_2315(%var_2317, %var_2318, %var_2319) /* ty=(Tensor[(16, 4, 5), int64], Tensor[(455), uint16], Tensor[(455), uint16]) */
}

def @func_3887() -> (Tensor[(10, 96), float64],) {
  @func_3885() /* ty=(Tensor[(10, 96), float64],) */
}

def @func_7755() -> (Tensor[(216), uint16], Tensor[(216), uint16], Tensor[(13, 15, 16), float32]) {
  @func_7753() /* ty=(Tensor[(216), uint16], Tensor[(216), uint16], Tensor[(13, 15, 16), float32]) */
}

def @func_1867(%var_1863: Tensor[(9, 5, 3), int16], %var_1864: Tensor[(1, 144), float64], %var_1865: Tensor[(1485), float32], %var_1866: Tensor[(455), uint16]) -> (Tensor[(9, 5, 3), bool], Tensor[(1, 144), float64], Tensor[(1485), uint16], Tensor[(7, 6, 1), float32], Tensor[(455), uint16], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32]) {
  %156 = fn (%var_1817: Tensor[(9, 5, 3), int16], %var_1826: Tensor[(1, 144), float64], %var_1828: Tensor[(1485), float32], %var_1845: Tensor[(455), uint16]) -> (Tensor[(9, 5, 3), bool], Tensor[(1, 144), float64], Tensor[(1485), uint16], Tensor[(7, 6, 1), float32], Tensor[(455), uint16], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32]) {
    %132 = cast(%var_1817, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
    %133 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(9, 5, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %134 = cast(meta[relay.Constant][10] /* ty=Tensor[(9, 5, 3), int16] */, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
    %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %136 = cast(%var_1826, dtype="float64") /* ty=Tensor[(1, 144), float64] */;
    %137 = reshape(%136, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
    %138 = @func_1268(%137) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) */;
    %139 = %138.2;
    %140 = cast(%var_1828, dtype="uint16") /* ty=Tensor[(1485), uint16] */;
    %141 = shape_of(%139, dtype="int32") /* ty=Tensor[(1), int32] */;
    %142 = cast(%139, dtype="uint16") /* ty=Tensor[(1485), uint16] */;
    %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %144 = cast(%var_1845, dtype="uint16") /* ty=Tensor[(455), uint16] */;
    %145 = reshape(%144, newshape=[455]) /* ty=Tensor[(455), uint16] */;
    %146 = @func_502(%145) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
    %147 = cast(%var_1845, dtype="uint16") /* ty=Tensor[(455), uint16] */;
    %148 = reshape(%147, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), uint16] */;
    %149 = @func_235(%148) /* ty=(Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) */;
    %150 = cast(%var_1817, dtype="float32") /* ty=Tensor[(9, 5, 3), float32] */;
    %151 = equal(%134, %135) /* ty=Tensor[(9, 5, 3), bool] */;
    %152 = bitwise_or(%142, %143) /* ty=Tensor[(1485), uint16] */;
    %153 = %146.0;
    %154 = %149.5;
    %155 = cosh(%150) /* ty=Tensor[(9, 5, 3), float32] */;
    (%151, %var_1826, %152, %153, %var_1845, %154, %155)
  };
  %156(%var_1863, %var_1864, %var_1865, %var_1866) /* ty=(Tensor[(9, 5, 3), bool], Tensor[(1, 144), float64], Tensor[(1485), uint16], Tensor[(7, 6, 1), float32], Tensor[(455), uint16], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32]) */
}

def @func_5050(%var_5048: Tensor[(182), float32]) -> (Tensor[(14, 13, 1), float64], Tensor[(182), float32], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), bool]) {
  @func_5047(%var_5048) /* ty=(Tensor[(14, 13, 1), float64], Tensor[(182), float32], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), bool]) */
}

def @func_1695() -> (Tensor[(13, 15, 16), bool],) {
  %157 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %158 = %157.0;
  (%158,)
}

def @func_3422() -> Tensor[(10, 96), float64] {
  @func_3420() /* ty=Tensor[(10, 96), float64] */
}

def @func_7840() -> (Tensor[(13, 15, 16), float32], Tensor[(5, 7, 3), bool], Tensor[(1, 455), uint16]) {
  @func_7838() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(5, 7, 3), bool], Tensor[(1, 455), uint16]) */
}

def @func_8215() -> (Tensor[(10, 96), float64],) {
  %159 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
  %160 = %159.0;
  (%160,)
}

def @func_3571() -> Tensor[(10, 96), float64] {
  @func_3569() /* ty=Tensor[(10, 96), float64] */
}

def @func_57(%var_22: uint8) -> Tensor[(5, 7, 3), bool] {
  %161 = cast(%var_22, dtype="bool") /* ty=bool */;
  %162 = cast(meta[relay.Constant][11] /* ty=Tensor[(5, 7, 3), uint8] */, dtype="bool") /* ty=Tensor[(5, 7, 3), bool] */;
  greater(%161, %162) /* ty=Tensor[(5, 7, 3), bool] */
}

def @func_4088(%var_4087: Tensor[(10, 96), float64]) -> Tensor[(10, 96), float64] {
  %168 = fn (%var_4081: Tensor[(10, 96), float64]) -> Tensor[(10, 96), float64] {
    %163 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
    %164 = cast(%var_4081, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
    %165 = shape_of(%163, dtype="int32") /* ty=Tensor[(2), int32] */;
    %166 = cast(%163, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
    %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    power(%166, %167) /* ty=Tensor[(10, 96), float64] */
  };
  %168(%var_4087) /* ty=Tensor[(10, 96), float64] */
}

def @func_4459(%var_4457: Tensor[(1, 880), float64], %var_4458: Tensor[(10, 96), float64]) -> (Tensor[(455), uint16], Tensor[(144), float64], Tensor[(5, 16, 11), bool], Tensor[(10, 96), uint8]) {
  %189 = fn (%var_4425: Tensor[(1, 880), float64], %var_4444: Tensor[(10, 96), float64]) -> (Tensor[(455), uint16], Tensor[(144), float64], Tensor[(5, 16, 11), bool], Tensor[(10, 96), uint8]) {
    %169 = cast(meta[relay.Constant][12] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %170 = reshape(%169, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %171 = @func_2609(%170) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(144), float64]) */;
    %172 = cast(%var_4425, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
    %173 = cast(%var_4425, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
    %174 = reshape(%172, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
    %175 = reshape(%173, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
    %176 = @func_3916(%174, %175) /* ty=Tensor[(5, 16, 11), float64] */;
    %177 = cast(%var_4425, dtype="bool") /* ty=Tensor[(1, 880), bool] */;
    %178 = shape_of(%176, dtype="int32") /* ty=Tensor[(3), int32] */;
    %179 = cast(%176, dtype="bool") /* ty=Tensor[(5, 16, 11), bool] */;
    %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %181 = @func_3420() /* ty=Tensor[(10, 96), float64] */;
    %182 = cast(%var_4444, dtype="uint8") /* ty=Tensor[(10, 96), uint8] */;
    %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(2), int32] */;
    %184 = cast(%181, dtype="uint8") /* ty=Tensor[(10, 96), uint8] */;
    %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %186 = %171.1;
    %187 = greater_equal(%179, %180) /* ty=Tensor[(5, 16, 11), bool] */;
    %188 = maximum(%184, %185) /* ty=Tensor[(10, 96), uint8] */;
    (%186, meta[relay.Constant][12] /* ty=Tensor[(144), float64] */, %187, %188)
  };
  %189(%var_4457, %var_4458) /* ty=(Tensor[(455), uint16], Tensor[(144), float64], Tensor[(5, 16, 11), bool], Tensor[(10, 96), uint8]) */
}

def @func_7948() -> Tensor[(13, 15, 16), float64] {
  @func_7946() /* ty=Tensor[(13, 15, 16), float64] */
}

def @func_5389() -> (Tensor[(13, 15, 16), bool], Tensor[(10, 96), int32], Tensor[(10, 96), float64]) {
  %199 = fn () -> (Tensor[(13, 15, 16), bool], Tensor[(10, 96), int32], Tensor[(10, 96), float64]) {
    %190 = @func_3655() /* ty=Tensor[(10, 96), float64] */;
    %191 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 96), float64] */, dtype="int32") /* ty=Tensor[(10, 96), int32] */;
    %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(2), int32] */;
    %193 = cast(%190, dtype="int32") /* ty=Tensor[(10, 96), int32] */;
    %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %195 = @func_4506() /* ty=(Tensor[(10, 96), float64],) */;
    %196 = @func_2859() /* ty=Tensor[(13, 15, 16), bool] */;
    %197 = bitwise_and(%193, %194) /* ty=Tensor[(10, 96), int32] */;
    %198 = %195.0;
    (%196, %197, %198)
  };
  %199() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(10, 96), int32], Tensor[(10, 96), float64]) */
}

def @func_8188(%var_8171: Tensor[(960), float64]) -> (Tensor[(7, 4, 9), float64], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(960), float64]) {
  %200 = @func_7635() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %201 = @func_4135() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %202 = cast(%var_8171, dtype="float64") /* ty=Tensor[(960), float64] */;
  %203 = reshape(%202, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %204 = @func_3738(%203) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(10, 16, 6), float64], Tensor[(960), float64]) */;
  %205 = %200.0;
  %206 = %201.0;
  %207 = %204.0;
  (%205, %206, %207, %var_8171)
}

def @func_2894() -> Tensor[(13, 15, 16), float32] {
  %208 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %208.0
}

def @func_3313(%var_3311: Tensor[(6, 3, 12), uint16], %var_3312: Tensor[(6, 3, 12), uint16]) -> (Tensor[(6, 3, 12), uint16], Tensor[(6, 3, 12), uint64]) {
  @func_3309(%var_3311, %var_3312) /* ty=(Tensor[(6, 3, 12), uint16], Tensor[(6, 3, 12), uint64]) */
}

def @func_4356(%var_4355: Tensor[(144), float64]) -> (Tensor[(10, 96), float64], Tensor[(11, 15, 9), int64], Tensor[(144), float64]) {
  %214 = fn (%var_4352: Tensor[(144), float64]) -> (Tensor[(10, 96), float64], Tensor[(11, 15, 9), int64], Tensor[(144), float64]) {
    %209 = cast(%var_4352, dtype="float64") /* ty=Tensor[(144), float64] */;
    %210 = reshape(%209, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
    %211 = @func_1268(%210) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) */;
    %212 = @func_3420() /* ty=Tensor[(10, 96), float64] */;
    %213 = %211.1;
    (%212, %213, %var_4352)
  };
  %214(%var_4355) /* ty=(Tensor[(10, 96), float64], Tensor[(11, 15, 9), int64], Tensor[(144), float64]) */
}

def @func_2382() -> (Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) {
  %229 = fn () -> (Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) {
    %215 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
    %216 = cast(meta[relay.Constant][14] /* ty=Tensor[(455), uint16] */, dtype="uint16") /* ty=Tensor[(455), uint16] */;
    %217 = reshape(%216, newshape=[455]) /* ty=Tensor[(455), uint16] */;
    %218 = @func_502(%217) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
    %219 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
    %220 = reshape(%219, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float64] */;
    %221 = @func_1932(%220) /* ty=Tensor[(10, 16, 6), float64] */;
    %222 = cast(%221, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
    %223 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(10, 96), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %224 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
    %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %226 = %215.0;
    %227 = %218.2;
    %228 = floor_mod(%224, %225) /* ty=Tensor[(10, 96), float64] */;
    (%226, %227, meta[relay.Constant][14] /* ty=Tensor[(455), uint16] */, %228)
  };
  %229() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) */
}

def @func_6938() -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) {
  @func_6936() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) */
}

def @func_4490() -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), bool]) {
  %233 = fn () -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), bool]) {
    %230 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
    %231 = @func_2222() /* ty=Tensor[(13, 15, 16), float32] */;
    %232 = %230.0;
    (%231, %232)
  };
  %233() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), bool]) */
}

def @func_2536(%var_2534: Tensor[(2, 72), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(135), int16], Tensor[(2, 72), float64], Tensor[(1485), float32], Tensor[(455), uint16]) {
  @func_2533(%var_2534) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(135), int16], Tensor[(2, 72), float64], Tensor[(1485), float32], Tensor[(455), uint16]) */
}

def @func_2476() -> (Tensor[(13, 15, 16), float32],) {
  %234 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %235 = %234.1;
  (%235,)
}

def @func_3989() -> (Tensor[(7, 4, 9), float64],) {
  @func_3987() /* ty=(Tensor[(7, 4, 9), float64],) */
}

def @func_2786(%var_2784: Tensor[(6, 1), float64], %var_2785: Tensor[(3120), bool]) -> (Tensor[(6, 1), bool], Tensor[(3120), bool], Tensor[(7, 6, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(455), uint32]) {
  @func_2782(%var_2784, %var_2785) /* ty=(Tensor[(6, 1), bool], Tensor[(3120), bool], Tensor[(7, 6, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(455), uint32]) */
}

def @func_4507() -> (Tensor[(10, 96), float64],) {
  %237 = fn () -> (Tensor[(10, 96), float64],) {
    %236 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
    (%236,)
  };
  %237() /* ty=(Tensor[(10, 96), float64],) */
}

def @func_7296(%var_7281: Tensor[(16, 1, 6), uint16], %var_7282: Tensor[(16, 13, 6), uint16], %var_7290: Tensor[(16, 13, 6), uint16]) -> (Tensor[(16, 13, 6), bool], Tensor[(16, 13, 6), float32]) {
  %238 = cast(%var_7290, dtype="bool") /* ty=Tensor[(16, 13, 6), bool] */;
  %239 = shape_of(%var_7282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%var_7282, dtype="bool") /* ty=Tensor[(16, 13, 6), bool] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %242 = cast(%var_7281, dtype="uint16") /* ty=Tensor[(16, 1, 6), uint16] */;
  %243 = cast(%var_7282, dtype="uint16") /* ty=Tensor[(16, 13, 6), uint16] */;
  %244 = maximum(%242, %243) /* ty=Tensor[(16, 13, 6), uint16] */;
  %245 = cast(%244, dtype="float32") /* ty=Tensor[(16, 13, 6), float32] */;
  %246 = equal(%240, %241) /* ty=Tensor[(16, 13, 6), bool] */;
  %247 = log(%245) /* ty=Tensor[(16, 13, 6), float32] */;
  (%246, %247)
}

def @func_5349(%var_5348: Tensor[(10, 96), float64]) -> (Tensor[(10, 96), uint32], Tensor[(6, 3, 12), uint64], Tensor[(216), uint16]) {
  %261 = fn (%var_5337: Tensor[(10, 96), float64]) -> (Tensor[(10, 96), uint32], Tensor[(6, 3, 12), uint64], Tensor[(216), uint16]) {
    %248 = @func_4391() /* ty=(Tensor[(10, 96), float64],) */;
    %249 = %248.0;
    %250 = cast(%var_5337, dtype="uint32") /* ty=Tensor[(10, 96), uint32] */;
    %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(2), int32] */;
    %252 = cast(%249, dtype="uint32") /* ty=Tensor[(10, 96), uint32] */;
    %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %254 = cast(meta[relay.Constant][16] /* ty=Tensor[(216), uint16] */, dtype="uint16") /* ty=Tensor[(216), uint16] */;
    %255 = cast(meta[relay.Constant][16] /* ty=Tensor[(216), uint16] */, dtype="uint16") /* ty=Tensor[(216), uint16] */;
    %256 = reshape(%254, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
    %257 = reshape(%255, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
    %258 = @func_3309(%256, %257) /* ty=(Tensor[(6, 3, 12), uint16], Tensor[(6, 3, 12), uint64]) */;
    %259 = minimum(%252, %253) /* ty=Tensor[(10, 96), uint32] */;
    %260 = %258.1;
    (%259, %260, meta[relay.Constant][16] /* ty=Tensor[(216), uint16] */)
  };
  %261(%var_5348) /* ty=(Tensor[(10, 96), uint32], Tensor[(6, 3, 12), uint64], Tensor[(216), uint16]) */
}

def @func_4281(%var_4279: Tensor[(216), uint16]) -> (Tensor[(10, 96), float64], Tensor[(6, 3, 12), uint64], Tensor[(216), uint16]) {
  @func_4278(%var_4279) /* ty=(Tensor[(10, 96), float64], Tensor[(6, 3, 12), uint64], Tensor[(216), uint16]) */
}

def @func_2835(%var_2833: Tensor[(1, 12, 14), float32], %var_2834: Tensor[(135), int16]) -> (Tensor[(1, 12, 14), float32], Tensor[(13, 15, 16), float64], Tensor[(2, 12, 14), float32], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32], Tensor[(135), int16], Tensor[(144), float64], Tensor[(1485), float32], Tensor[(455, 1), float32]) {
  %287 = fn (%var_2797: Tensor[(1, 12, 14), float32], %var_2824: Tensor[(135), int16]) -> (Tensor[(1, 12, 14), float32], Tensor[(13, 15, 16), float64], Tensor[(2, 12, 14), float32], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32], Tensor[(135), int16], Tensor[(144), float64], Tensor[(1485), float32], Tensor[(455, 1), float32]) {
    %262 = cast(%var_2797, dtype="float32") /* ty=Tensor[(1, 12, 14), float32] */;
    %263 = @func_1654() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) */;
    %264 = cast(%var_2797, dtype="float32") /* ty=Tensor[(1, 12, 14), float32] */;
    %265 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 14), float32] */;
    %266 = cast(meta[relay.Constant][18] /* ty=Tensor[(455, 1), uint16] */, dtype="uint16") /* ty=Tensor[(455, 1), uint16] */;
    %267 = reshape(%266, newshape=[455]) /* ty=Tensor[(455), uint16] */;
    %268 = @func_502(%267) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
    %269 = cast(%var_2824, dtype="int16") /* ty=Tensor[(135), int16] */;
    %270 = cast(meta[relay.Constant][19] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %271 = cast(meta[relay.Constant][20] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
    %272 = cast(meta[relay.Constant][18] /* ty=Tensor[(455, 1), uint16] */, dtype="uint16") /* ty=Tensor[(455, 1), uint16] */;
    %273 = reshape(%269, newshape=[9, 5, 3]) /* ty=Tensor[(9, 5, 3), int16] */;
    %274 = reshape(%270, newshape=[1, 144]) /* ty=Tensor[(1, 144), float64] */;
    %275 = reshape(%271, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
    %276 = reshape(%272, newshape=[455]) /* ty=Tensor[(455), uint16] */;
    %277 = @func_1862(%273, %274, %275, %276) /* ty=(Tensor[(9, 5, 3), bool], Tensor[(1, 144), float64], Tensor[(1485), uint16], Tensor[(7, 6, 1), float32], Tensor[(455), uint16], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32]) */;
    %278 = cast(meta[relay.Constant][18] /* ty=Tensor[(455, 1), uint16] */, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
    %279 = asinh(%278) /* ty=Tensor[(455, 1), float32] */;
    %280 = cast(%279, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
    %281 = log2(%262) /* ty=Tensor[(1, 12, 14), float32] */;
    %282 = %263.1;
    %283 = floor_mod(%264, %265) /* ty=Tensor[(2, 12, 14), float32] */;
    %284 = %268.1;
    %285 = %277.6;
    %286 = exp(%280) /* ty=Tensor[(455, 1), float32] */;
    (%281, %282, %283, %284, %285, %var_2824, meta[relay.Constant][19] /* ty=Tensor[(144), float64] */, meta[relay.Constant][20] /* ty=Tensor[(1485), float32] */, %286)
  };
  %287(%var_2833, %var_2834) /* ty=(Tensor[(1, 12, 14), float32], Tensor[(13, 15, 16), float64], Tensor[(2, 12, 14), float32], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32], Tensor[(135), int16], Tensor[(144), float64], Tensor[(1485), float32], Tensor[(455, 1), float32]) */
}

def @func_2262(%var_2261: Tensor[(455), uint16]) -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), uint8], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) {
  %298 = fn (%var_2256: Tensor[(455), uint16]) -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), uint8], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) {
    %288 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
    %289 = %288.0;
    %290 = cast(%289, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
    %291 = reshape(%290, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
    %292 = @func_1597(%291) /* ty=(Tensor[(13, 15, 16), float64], Tensor[(13, 15, 16), uint8]) */;
    %293 = cast(%var_2256, dtype="uint16") /* ty=Tensor[(455), uint16] */;
    %294 = reshape(%293, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), uint16] */;
    %295 = @func_235(%294) /* ty=(Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) */;
    %296 = %292.1;
    %297 = %295.2;
    (%289, %296, %297, %var_2256)
  };
  %298(%var_2261) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), uint8], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */
}

def @func_4884() -> (Tensor[(13, 15, 16), bool],) {
  %299 = @func_1654() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) */;
  %300 = %299.0;
  (%300,)
}

def @func_7637() -> (Tensor[(7, 4, 9), float64],) {
  @func_7635() /* ty=(Tensor[(7, 4, 9), float64],) */
}

def @func_8217() -> (Tensor[(10, 96), float64],) {
  @func_8215() /* ty=(Tensor[(10, 96), float64],) */
}

def @func_7923(%var_7921: Tensor[(10, 96), float64]) -> Tensor[(10, 96), int32] {
  @func_7920(%var_7921) /* ty=Tensor[(10, 96), int32] */
}

def @func_2571(%var_2569: Tensor[(1, 182), float32]) -> (Tensor[(10, 96), float64], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(14, 13, 1), float64], Tensor[(1, 182), float32]) {
  @func_2568(%var_2569) /* ty=(Tensor[(10, 96), float64], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(14, 13, 1), float64], Tensor[(1, 182), float32]) */
}

def @func_6008() -> Tensor[(10, 96), float64] {
  %301 = fn () -> Tensor[(10, 96), float64] {
    @func_5182() /* ty=Tensor[(10, 96), float64] */
  };
  %301() /* ty=Tensor[(10, 96), float64] */
}

def @func_5546(%var_5544: Tensor[(7, 4, 9), float64]) -> (Tensor[(7, 4, 9), float32],) {
  @func_5543(%var_5544) /* ty=(Tensor[(7, 4, 9), float32],) */
}

def @func_8458() -> (Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) {
  %305 = fn () -> (Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) {
    %302 = @func_7753() /* ty=(Tensor[(216), uint16], Tensor[(216), uint16], Tensor[(13, 15, 16), float32]) */;
    %303 = %302.2;
    %304 = @func_3853() /* ty=Tensor[(10, 96), float64] */;
    (%303, %304)
  };
  %305() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) */
}

def @func_6407() -> (Tensor[(10, 96), float64],) {
  %310 = fn () -> (Tensor[(10, 96), float64],) {
    %306 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
    %307 = %306.0;
    %308 = cast(%307, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
    %309 = log10(%308) /* ty=Tensor[(10, 96), float64] */;
    (%309,)
  };
  %310() /* ty=(Tensor[(10, 96), float64],) */
}

def @func_1741(%var_1740: Tensor[(13, 15, 16), float32]) -> (Tensor[(13, 15, 16), float64], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(7, 12, 4), float64], Tensor[(13, 15, 16), float64]) {
  %326 = fn (%var_1707: Tensor[(13, 15, 16), float32]) -> (Tensor[(13, 15, 16), float64], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(7, 12, 4), float64], Tensor[(13, 15, 16), float64]) {
    %311 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
    %312 = %311.1;
    %313 = cast(%var_1707, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
    %314 = shape_of(%312, dtype="int32") /* ty=Tensor[(3), int32] */;
    %315 = cast(%312, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
    %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %317 = cast(meta[relay.Constant][21] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %318 = reshape(%317, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
    %319 = @func_1636(%318) /* ty=Tensor[(7, 12, 4), float64] */;
    %320 = cast(%319, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
    %321 = reshape(%320, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
    %322 = cast(%312, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
    %323 = maximum(%315, %316) /* ty=Tensor[(13, 15, 16), float64] */;
    %324 = @func_1636(%321) /* ty=Tensor[(7, 12, 4), float64] */;
    %325 = acos(%322) /* ty=Tensor[(13, 15, 16), float64] */;
    (%323, %319, meta[relay.Constant][21] /* ty=Tensor[(336), float64] */, %324, %325)
  };
  %326(%var_1740) /* ty=(Tensor[(13, 15, 16), float64], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(7, 12, 4), float64], Tensor[(13, 15, 16), float64]) */
}

def @func_5620() -> (Tensor[(13, 15, 16), bool],) {
  %327 = @func_4135() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %328 = %327.0;
  (%328,)
}

def @func_5445(%var_5399: Tensor[(15, 11, 8), float32], %var_5404: Tensor[(455), uint16], %var_5430: Tensor[(15, 11, 8), float32]) -> (Tensor[(5, 7, 3), bool], Tensor[(455), uint16], Tensor[(15, 11, 8), int16]) {
  %329 = cast(%var_5404, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %330 = reshape(%329, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), uint16] */;
  %331 = @func_235(%330) /* ty=(Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) */;
  %332 = cast(%var_5399, dtype="float32") /* ty=Tensor[(15, 11, 8), float32] */;
  %333 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(15, 11, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 11, 8), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 8), float32] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %336 = divide(%334, %335) /* ty=Tensor[(15, 11, 8), float32] */;
  %337 = cast(%336, dtype="float32") /* ty=Tensor[(15, 11, 8), float32] */;
  %338 = log10(%337) /* ty=Tensor[(15, 11, 8), float32] */;
  %339 = cast(%var_5430, dtype="int16") /* ty=Tensor[(15, 11, 8), int16] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%338, dtype="int16") /* ty=Tensor[(15, 11, 8), int16] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %343 = %331.6;
  %344 = left_shift(%341, %342) /* ty=Tensor[(15, 11, 8), int16] */;
  (%343, %var_5404, %344)
}

def @func_7484(%var_7450: Tensor[(144), float64]) -> (Tensor[(13, 15, 16), float32], Tensor[(144), float64], Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) {
  %345 = @func_2959() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %346 = cast(%var_7450, dtype="float64") /* ty=Tensor[(144), float64] */;
  %347 = reshape(%346, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %348 = @func_6751(%347) /* ty=(Tensor[(10, 96), float64], Tensor[(13, 15, 16), float32], Tensor[(2, 72), float64], Tensor[(144), float64], Tensor[(10, 16, 6), float64]) */;
  %349 = %348.0;
  %350 = cast(%349, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %351 = reshape(%350, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %352 = @func_3634(%351) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(12, 18), uint16], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(6, 3, 12), float64]) */;
  %353 = cast(%349, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %354 = %345.0;
  %355 = %352.0;
  %356 = acos(%353) /* ty=Tensor[(10, 96), float64] */;
  (%354, %var_7450, %355, %356)
}

def @func_3740(%var_3739: Tensor[(960), float64]) -> (Tensor[(13, 15, 16), float32], Tensor[(10, 16, 6), float64], Tensor[(960), float64]) {
  %362 = fn (%var_3718: Tensor[(960), float64]) -> (Tensor[(13, 15, 16), float32], Tensor[(10, 16, 6), float64], Tensor[(960), float64]) {
    %357 = cast(%var_3718, dtype="float64") /* ty=Tensor[(960), float64] */;
    %358 = reshape(%357, newshape=[960]) /* ty=Tensor[(960), float64] */;
    %359 = @func_3634(%358) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(12, 18), uint16], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(6, 3, 12), float64]) */;
    %360 = @func_2894() /* ty=Tensor[(13, 15, 16), float32] */;
    %361 = %359.2;
    (%360, %361, %var_3718)
  };
  %362(%var_3739) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(10, 16, 6), float64], Tensor[(960), float64]) */
}

def @func_7786(%var_7785: Tensor[(252), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(7, 4, 9), float32], Tensor[(252), float64]) {
  %369 = fn (%var_7782: Tensor[(252), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(7, 4, 9), float32], Tensor[(252), float64]) {
    %363 = @func_4135() /* ty=(Tensor[(13, 15, 16), bool],) */;
    %364 = cast(%var_7782, dtype="float64") /* ty=Tensor[(252), float64] */;
    %365 = reshape(%364, newshape=[7, 4, 9]) /* ty=Tensor[(7, 4, 9), float64] */;
    %366 = @func_5543(%365) /* ty=(Tensor[(7, 4, 9), float32],) */;
    %367 = %363.0;
    %368 = %366.0;
    (%367, %368, %var_7782)
  };
  %369(%var_7785) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 4, 9), float32], Tensor[(252), float64]) */
}

def @func_8054(%var_7965: float64, %var_7966: Tensor[(3, 10, 3), float64], %var_7978: Tensor[(110), int64], %var_7989: Tensor[(10, 96), float64], %var_8041: Tensor[(3, 10, 3), bool]) -> (Tensor[(110), int64], Tensor[(110), int64], Tensor[(65, 7), uint64], Tensor[(65, 7), uint16], Tensor[(10, 96), uint8], Tensor[(3, 10, 3), bool], Tensor[(7, 4, 9), float64]) {
  %370 = cast(%var_7978, dtype="int64") /* ty=Tensor[(110), int64] */;
  %371 = reshape(%370, newshape=[110]) /* ty=Tensor[(110), int64] */;
  %372 = @func_6200(%371) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64], Tensor[(5, 2, 11), float64], int64, Tensor[(110), int64]) */;
  %373 = cast(meta[relay.Constant][23] /* ty=Tensor[(65, 7), uint16] */, dtype="uint16") /* ty=Tensor[(65, 7), uint16] */;
  %374 = cast(meta[relay.Constant][23] /* ty=Tensor[(65, 7), uint16] */, dtype="int32") /* ty=Tensor[(65, 7), int32] */;
  %375 = reshape(%373, newshape=[65, 7]) /* ty=Tensor[(65, 7), uint16] */;
  %376 = reshape(%374, newshape=[65, 7]) /* ty=Tensor[(65, 7), int32] */;
  %377 = @func_6553(%375, %376) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(15, 11, 8), int16], Tensor[(1320), float32], Tensor[(65, 7), uint64]) */;
  %378 = @func_5182() /* ty=Tensor[(10, 96), float64] */;
  %379 = cast(%var_7989, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %380 = shape_of(%378, dtype="int32") /* ty=Tensor[(2), int32] */;
  %381 = cast(%378, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %383 = logical_or(%381, %382) /* ty=Tensor[(10, 96), bool] */;
  %384 = cast(%var_7978, dtype="int64") /* ty=Tensor[(110), int64] */;
  %385 = reshape(%384, newshape=[110]) /* ty=Tensor[(110), int64] */;
  %386 = @func_6200(%385) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64], Tensor[(5, 2, 11), float64], int64, Tensor[(110), int64]) */;
  %387 = %386.3;
  %388 = cast(%383, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %389 = cast(%387, dtype="bool") /* ty=bool */;
  %390 = not_equal(%388, %389) /* ty=Tensor[(10, 96), bool] */;
  %391 = cast(%var_7965, dtype="uint8") /* ty=uint8 */;
  %392 = cast(%390, dtype="uint8") /* ty=Tensor[(10, 96), uint8] */;
  %393 = cast(%var_7965, dtype="bool") /* ty=bool */;
  %394 = cast(%var_7966, dtype="bool") /* ty=Tensor[(3, 10, 3), bool] */;
  %395 = less_equal(%393, %394) /* ty=Tensor[(3, 10, 3), bool] */;
  %396 = cast(%var_8041, dtype="bool") /* ty=Tensor[(3, 10, 3), bool] */;
  %397 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%395, dtype="bool") /* ty=Tensor[(3, 10, 3), bool] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %400 = @func_3498() /* ty=(Tensor[(455), uint16], Tensor[(7, 4, 9), float64]) */;
  %401 = %372.4;
  %402 = %377.3;
  %403 = bitwise_or(%391, %392) /* ty=Tensor[(10, 96), uint8] */;
  %404 = not_equal(%398, %399) /* ty=Tensor[(3, 10, 3), bool] */;
  %405 = %400.1;
  (%401, %var_7978, %402, meta[relay.Constant][23] /* ty=Tensor[(65, 7), uint16] */, %403, %404, %405)
}

def @func_3213() -> Tensor[(13, 15, 16), bool] {
  %407 = fn () -> Tensor[(13, 15, 16), bool] {
    %406 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
    %406.0
  };
  %407() /* ty=Tensor[(13, 15, 16), bool] */
}

def @func_3697(%var_3696: Tensor[(165, 9), float32]) -> (Tensor[(7, 4, 9), float64], Tensor[(455), uint16], Tensor[(135, 1), int16], Tensor[(144), float64], Tensor[(165, 9), float32], Tensor[(455), uint16]) {
  %420 = fn (%var_3688: Tensor[(165, 9), float32]) -> (Tensor[(7, 4, 9), float64], Tensor[(455), uint16], Tensor[(135, 1), int16], Tensor[(144), float64], Tensor[(165, 9), float32], Tensor[(455), uint16]) {
    %408 = @func_3172() /* ty=(Tensor[(7, 4, 9), float64],) */;
    %409 = cast(meta[relay.Constant][24] /* ty=Tensor[(135, 1), int16] */, dtype="int16") /* ty=Tensor[(135, 1), int16] */;
    %410 = cast(meta[relay.Constant][25] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %411 = cast(%var_3688, dtype="float32") /* ty=Tensor[(165, 9), float32] */;
    %412 = cast(meta[relay.Constant][26] /* ty=Tensor[(455), uint16] */, dtype="uint16") /* ty=Tensor[(455), uint16] */;
    %413 = reshape(%409, newshape=[9, 5, 3]) /* ty=Tensor[(9, 5, 3), int16] */;
    %414 = reshape(%410, newshape=[1, 144]) /* ty=Tensor[(1, 144), float64] */;
    %415 = reshape(%411, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
    %416 = reshape(%412, newshape=[455]) /* ty=Tensor[(455), uint16] */;
    %417 = @func_1862(%413, %414, %415, %416) /* ty=(Tensor[(9, 5, 3), bool], Tensor[(1, 144), float64], Tensor[(1485), uint16], Tensor[(7, 6, 1), float32], Tensor[(455), uint16], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32]) */;
    %418 = %408.0;
    %419 = %417.4;
    (%418, %419, meta[relay.Constant][24] /* ty=Tensor[(135, 1), int16] */, meta[relay.Constant][25] /* ty=Tensor[(144), float64] */, %var_3688, meta[relay.Constant][26] /* ty=Tensor[(455), uint16] */)
  };
  %420(%var_3696) /* ty=(Tensor[(7, 4, 9), float64], Tensor[(455), uint16], Tensor[(135, 1), int16], Tensor[(144), float64], Tensor[(165, 9), float32], Tensor[(455), uint16]) */
}

def @func_7723(%var_7716: Tensor[(144), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(1485), float32], Tensor[(144), float64]) {
  %421 = @func_4884() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %422 = cast(%var_7716, dtype="float64") /* ty=Tensor[(144), float64] */;
  %423 = reshape(%422, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %424 = @func_1268(%423) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) */;
  %425 = %421.0;
  %426 = %424.2;
  (%425, %426, %var_7716)
}

def @func_1526(%var_1517: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), float64],) {
  %427 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %428 = %427.2;
  %429 = cast(%var_1517, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %433 = floor_divide(%431, %432) /* ty=Tensor[(13, 15, 16), float64] */;
  (%433,)
}

def @func_3569() -> Tensor[(10, 96), float64] {
  @func_2487() /* ty=Tensor[(10, 96), float64] */
}

def @func_7726(%var_7724: Tensor[(144), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(1485), float32], Tensor[(144), float64]) {
  @func_7723(%var_7724) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(1485), float32], Tensor[(144), float64]) */
}

def @func_6203(%var_6201: Tensor[(110), int64]) -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64], Tensor[(5, 2, 11), float64], int64, Tensor[(110), int64]) {
  @func_6200(%var_6201) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64], Tensor[(5, 2, 11), float64], int64, Tensor[(110), int64]) */
}

def @main(%var_8675: Tensor[(455), uint16], %var_8684: Tensor[(6), float64]) -> (Tensor[(13, 15, 16), float32], Tensor[(2, 660), float32], Tensor[(455), uint32], Tensor[(6), float64], Tensor[(7, 6, 1), float64]) {
  %434 = @func_2478() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %435 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 660), float32] */, dtype="float32") /* ty=Tensor[(2, 660), float32] */;
  %436 = cast(%var_8675, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %437 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 660), float32] */, dtype="float32") /* ty=Tensor[(2, 660), float32] */;
  %438 = reshape(%435, newshape=[15, 11, 8]) /* ty=Tensor[(15, 11, 8), float32] */;
  %439 = reshape(%436, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %440 = reshape(%437, newshape=[15, 11, 8]) /* ty=Tensor[(15, 11, 8), float32] */;
  %441 = @func_5450(%438, %439, %440) /* ty=(Tensor[(5, 7, 3), bool], Tensor[(455), uint16], Tensor[(15, 11, 8), int16]) */;
  %442 = %441.1;
  %443 = cast(%var_8675, dtype="uint32") /* ty=Tensor[(455), uint32] */;
  %444 = shape_of(%442, dtype="int32") /* ty=Tensor[(1), int32] */;
  %445 = cast(%442, dtype="uint32") /* ty=Tensor[(455), uint32] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %447 = cast(%var_8684, dtype="float64") /* ty=Tensor[(6), float64] */;
  %448 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %449 = %448.0;
  %450 = cast(%449, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %451 = reshape(%447, newshape=[6, 1]) /* ty=Tensor[(6, 1), float64] */;
  %452 = reshape(%450, newshape=[3120]) /* ty=Tensor[(3120), bool] */;
  %453 = @func_2786(%451, %452) /* ty=(Tensor[(6, 1), bool], Tensor[(3120), bool], Tensor[(7, 6, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(455), uint32]) */;
  %454 = %453.2;
  %455 = cast(%454, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %456 = %434.0;
  %457 = bitwise_and(%445, %446) /* ty=Tensor[(455), uint32] */;
  %458 = erf(%455) /* ty=Tensor[(7, 6, 1), float64] */;
  (%456, meta[relay.Constant][27] /* ty=Tensor[(2, 660), float32] */, %457, %var_8684, %458)
}

def @func_3885() -> (Tensor[(10, 96), float64],) {
  %459 = @func_3655() /* ty=Tensor[(10, 96), float64] */;
  (%459,)
}

def @func_3309(%var_3278: Tensor[(6, 3, 12), uint16], %var_3279: Tensor[(6, 3, 12), uint16]) -> (Tensor[(6, 3, 12), uint16], Tensor[(6, 3, 12), uint64]) {
  %460 = cast(%var_3279, dtype="uint16") /* ty=Tensor[(6, 3, 12), uint16] */;
  %461 = shape_of(%var_3278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%var_3278, dtype="uint16") /* ty=Tensor[(6, 3, 12), uint16] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %464 = cast(%var_3279, dtype="uint64") /* ty=Tensor[(6, 3, 12), uint64] */;
  %465 = shape_of(%var_3278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%var_3278, dtype="uint64") /* ty=Tensor[(6, 3, 12), uint64] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %468 = right_shift(%462, %463) /* ty=Tensor[(6, 3, 12), uint16] */;
  %469 = left_shift(%466, %467) /* ty=Tensor[(6, 3, 12), uint64] */;
  (%468, %469)
}

def @func_4034() -> (Tensor[(13, 15, 16), bool],) {
  %471 = fn () -> (Tensor[(13, 15, 16), bool],) {
    %470 = @func_2859() /* ty=Tensor[(13, 15, 16), bool] */;
    (%470,)
  };
  %471() /* ty=(Tensor[(13, 15, 16), bool],) */
}

def @func_5103() -> (Tensor[(13, 15, 16), float32],) {
  @func_5101() /* ty=(Tensor[(13, 15, 16), float32],) */
}

def @func_3644() -> (Tensor[(13, 15, 16), float32],) {
  %474 = fn () -> (Tensor[(13, 15, 16), float32],) {
    %472 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
    %473 = %472.0;
    (%473,)
  };
  %474() /* ty=(Tensor[(13, 15, 16), float32],) */
}

def @func_1655() -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) {
  %481 = fn () -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) {
    %475 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
    %476 = %475.0;
    %477 = cast(%476, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
    %478 = reshape(%477, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
    %479 = @func_1526(%478) /* ty=(Tensor[(13, 15, 16), float64],) */;
    %480 = %479.0;
    (%476, %480)
  };
  %481() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) */
}

def @func_7601() -> (Tensor[(13, 15, 16), bool], Tensor[(10, 16, 6), float64]) {
  @func_7599() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(10, 16, 6), float64]) */
}

def @func_7920(%var_7912: Tensor[(10, 96), float64]) -> Tensor[(10, 96), int32] {
  %482 = @func_2381() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) */;
  %483 = %482.3;
  %484 = cast(%var_7912, dtype="int32") /* ty=Tensor[(10, 96), int32] */;
  %485 = shape_of(%483, dtype="int32") /* ty=Tensor[(2), int32] */;
  %486 = cast(%483, dtype="int32") /* ty=Tensor[(10, 96), int32] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  subtract(%486, %487) /* ty=Tensor[(10, 96), int32] */
}

def @func_502(%var_500: Tensor[(455), uint16]) -> (Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) {
  %488 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 1), float32] */;
  %489 = cast(%var_500, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %490 = reshape(%489, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), uint16] */;
  %491 = @func_235(%490) /* ty=(Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) */;
  %492 = acos(%488) /* ty=Tensor[(7, 6, 1), float32] */;
  %493 = %491.7;
  (%492, %493, %var_500)
}

def @func_2223() -> Tensor[(13, 15, 16), float32] {
  %495 = fn () -> Tensor[(13, 15, 16), float32] {
    %494 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
    %494.1
  };
  %495() /* ty=Tensor[(13, 15, 16), float32] */
}

def @func_2959() -> (Tensor[(13, 15, 16), float32],) {
  %496 = @func_2222() /* ty=Tensor[(13, 15, 16), float32] */;
  (%496,)
}

def @func_1597(%var_1592: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), float64], Tensor[(13, 15, 16), uint8]) {
  %497 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %498 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
  %499 = %498.2;
  %500 = cast(%var_1592, dtype="uint8") /* ty=Tensor[(13, 15, 16), uint8] */;
  %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%499, dtype="uint8") /* ty=Tensor[(13, 15, 16), uint8] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %504 = %497.2;
  %505 = bitwise_or(%502, %503) /* ty=Tensor[(13, 15, 16), uint8] */;
  (%504, %505)
}

def @func_5899() -> (Tensor[(10, 96), float64], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) {
  %512 = fn () -> (Tensor[(10, 96), float64], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) {
    %506 = @func_2859() /* ty=Tensor[(13, 15, 16), bool] */;
    %507 = cast(%506, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
    %508 = reshape(%507, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float32] */;
    %509 = @func_1739(%508) /* ty=(Tensor[(13, 15, 16), float64], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(7, 12, 4), float64], Tensor[(13, 15, 16), float64]) */;
    %510 = @func_3569() /* ty=Tensor[(10, 96), float64] */;
    %511 = %509.4;
    (%510, %506, %511)
  };
  %512() /* ty=(Tensor[(10, 96), float64], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) */
}

def @func_7243() -> (Tensor[(10, 96), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64]) {
  %519 = fn () -> (Tensor[(10, 96), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64]) {
    %513 = cast(meta[relay.Constant][29] /* ty=Tensor[(880), float64] */, dtype="float64") /* ty=Tensor[(880), float64] */;
    %514 = cast(meta[relay.Constant][29] /* ty=Tensor[(880), float64] */, dtype="float64") /* ty=Tensor[(880), float64] */;
    %515 = reshape(%513, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
    %516 = reshape(%514, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
    %517 = @func_3569() /* ty=Tensor[(10, 96), float64] */;
    %518 = @func_3916(%515, %516) /* ty=Tensor[(5, 16, 11), float64] */;
    (%517, %518, meta[relay.Constant][29] /* ty=Tensor[(880), float64] */)
  };
  %519() /* ty=(Tensor[(10, 96), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64]) */
}

def @func_505(%var_503: Tensor[(455), uint16]) -> (Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) {
  @func_502(%var_503) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */
}

def @func_1473() -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) {
  @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */
}

def @func_6482() -> (Tensor[(13, 15, 16), float32],) {
  %522 = fn () -> (Tensor[(13, 15, 16), float32],) {
    %520 = @func_3643() /* ty=(Tensor[(13, 15, 16), float32],) */;
    %521 = %520.0;
    (%521,)
  };
  %522() /* ty=(Tensor[(13, 15, 16), float32],) */
}

def @func_1966() -> (Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) {
  @func_1964() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) */
}

def @func_4993() -> (Tensor[(13, 15, 16), bool],) {
  @func_4991() /* ty=(Tensor[(13, 15, 16), bool],) */
}

def @func_2478() -> (Tensor[(13, 15, 16), float32],) {
  @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */
}

def @func_2488() -> Tensor[(10, 96), float64] {
  %524 = fn () -> Tensor[(10, 96), float64] {
    %523 = @func_2381() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) */;
    %523.3
  };
  %524() /* ty=Tensor[(10, 96), float64] */
}

def @func_60(%var_58: uint8) -> Tensor[(5, 7, 3), bool] {
  @func_57(%var_58) /* ty=Tensor[(5, 7, 3), bool] */
}

def @func_1471() -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) {
  %525 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 15, 16), uint64] */, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %526 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(13, 15, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 15, 16), uint64] */, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %529 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 15, 16), uint64] */, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %530 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 15, 16), uint64] */, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %531 = less(%527, %528) /* ty=Tensor[(13, 15, 16), bool] */;
  %532 = asin(%529) /* ty=Tensor[(13, 15, 16), float32] */;
  %533 = rsqrt(%530) /* ty=Tensor[(13, 15, 16), float64] */;
  (%531, %532, %533)
}

def @func_4515() -> (Tensor[(13, 15, 16), bool],) {
  %536 = fn () -> (Tensor[(13, 15, 16), bool],) {
    %534 = @func_4135() /* ty=(Tensor[(13, 15, 16), bool],) */;
    %535 = %534.0;
    (%535,)
  };
  %536() /* ty=(Tensor[(13, 15, 16), bool],) */
}

def @func_7558() -> (Tensor[(13, 15, 16), bool],) {
  %538 = fn () -> (Tensor[(13, 15, 16), bool],) {
    %537 = @func_6860() /* ty=Tensor[(13, 15, 16), bool] */;
    (%537,)
  };
  %538() /* ty=(Tensor[(13, 15, 16), bool],) */
}

def @func_2290(%var_2288: Tensor[(14, 13, 1), float32]) -> Tensor[(14, 13, 1), float64] {
  @func_2287(%var_2288) /* ty=Tensor[(14, 13, 1), float64] */
}

def @func_4610() -> (Tensor[(13, 15, 16), float32],) {
  %540 = fn () -> (Tensor[(13, 15, 16), float32],) {
    %539 = @func_2894() /* ty=Tensor[(13, 15, 16), float32] */;
    (%539,)
  };
  %540() /* ty=(Tensor[(13, 15, 16), float32],) */
}

def @func_5450(%var_5447: Tensor[(15, 11, 8), float32], %var_5448: Tensor[(455), uint16], %var_5449: Tensor[(15, 11, 8), float32]) -> (Tensor[(5, 7, 3), bool], Tensor[(455), uint16], Tensor[(15, 11, 8), int16]) {
  @func_5445(%var_5447, %var_5448, %var_5449) /* ty=(Tensor[(5, 7, 3), bool], Tensor[(455), uint16], Tensor[(15, 11, 8), int16]) */
}

def @func_3149(%var_3147: Tensor[(1485), float32], %var_3148: uint8) -> (Tensor[(10, 96), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float32], Tensor[(11, 15, 9), bool], Tensor[(1485), float32], uint8) {
  @func_3145(%var_3147, %var_3148) /* ty=(Tensor[(10, 96), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float32], Tensor[(11, 15, 9), bool], Tensor[(1485), float32], uint8) */
}

def @func_1079(%var_1012: Tensor[(11, 15, 9), float32], %var_1063: uint8) -> (Tensor[(11, 15, 9), bool], Tensor[(455), uint16], Tensor[(65, 7), uint16], Tensor[(5, 7, 3), bool], Tensor[(11, 15, 9), int64]) {
  %541 = cast(%var_1012, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
  %542 = tan(%541) /* ty=Tensor[(11, 15, 9), float32] */;
  %543 = cast(%542, dtype="float64") /* ty=Tensor[(11, 15, 9), float64] */;
  %544 = log2(%543) /* ty=Tensor[(11, 15, 9), float64] */;
  %545 = cast(%542, dtype="bool") /* ty=Tensor[(11, 15, 9), bool] */;
  %546 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%544, dtype="bool") /* ty=Tensor[(11, 15, 9), bool] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %549 = cast(meta[relay.Constant][32] /* ty=Tensor[(65, 7), uint16] */, dtype="uint16") /* ty=Tensor[(65, 7), uint16] */;
  %550 = reshape(%549, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %551 = @func_502(%550) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %552 = cast(%var_1063, dtype="uint8") /* ty=uint8 */;
  %553 = reshape(%552, newshape=[]) /* ty=uint8 */;
  %554 = cast(%542, dtype="uint8") /* ty=Tensor[(11, 15, 9), uint8] */;
  %555 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%544, dtype="uint8") /* ty=Tensor[(11, 15, 9), uint8] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %558 = maximum(%556, %557) /* ty=Tensor[(11, 15, 9), uint8] */;
  %559 = cast(%558, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
  %560 = asinh(%559) /* ty=Tensor[(11, 15, 9), float32] */;
  %561 = cast(%560, dtype="float64") /* ty=Tensor[(11, 15, 9), float64] */;
  %562 = sigmoid(%561) /* ty=Tensor[(11, 15, 9), float64] */;
  %563 = cast(%562, dtype="int64") /* ty=Tensor[(11, 15, 9), int64] */;
  %564 = cast(%var_1063, dtype="int64") /* ty=int64 */;
  %565 = greater(%547, %548) /* ty=Tensor[(11, 15, 9), bool] */;
  %566 = %551.2;
  %567 = @func_57(%553) /* ty=Tensor[(5, 7, 3), bool] */;
  %568 = multiply(%563, %564) /* ty=Tensor[(11, 15, 9), int64] */;
  (%565, %566, meta[relay.Constant][32] /* ty=Tensor[(65, 7), uint16] */, %567, %568)
}

def @func_4137() -> (Tensor[(13, 15, 16), bool],) {
  @func_4135() /* ty=(Tensor[(13, 15, 16), bool],) */
}

def @func_5734(%var_5732: Tensor[(10, 96), float64]) -> (Tensor[(10, 96), float64],) {
  @func_5731(%var_5732) /* ty=(Tensor[(10, 96), float64],) */
}

def @func_5731(%var_5708: Tensor[(10, 96), float64]) -> (Tensor[(10, 96), float64],) {
  %569 = @func_3569() /* ty=Tensor[(10, 96), float64] */;
  %570 = cast(%var_5708, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(2), int32] */;
  %572 = cast(%569, dtype="bool") /* ty=Tensor[(10, 96), bool] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %574 = equal(%572, %573) /* ty=Tensor[(10, 96), bool] */;
  %575 = cast(%574, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %576 = tan(%575) /* ty=Tensor[(10, 96), float64] */;
  (%576,)
}

def @func_3499() -> (Tensor[(455), uint16], Tensor[(7, 4, 9), float64]) {
  %581 = fn () -> (Tensor[(455), uint16], Tensor[(7, 4, 9), float64]) {
    %577 = @func_2381() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) */;
    %578 = @func_3172() /* ty=(Tensor[(7, 4, 9), float64],) */;
    %579 = %577.2;
    %580 = %578.0;
    (%579, %580)
  };
  %581() /* ty=(Tensor[(455), uint16], Tensor[(7, 4, 9), float64]) */
}

def @func_2142(%var_2117: Tensor[(13, 15, 16), bool], %var_2140: Tensor[(455), uint16]) -> (Tensor[(13, 15, 16), float64], Tensor[(455), uint16], Tensor[(455), uint16]) {
  %582 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %583 = %582.0;
  %584 = cast(%583, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %585 = acosh(%584) /* ty=Tensor[(13, 15, 16), float32] */;
  %586 = cast(%var_2117, dtype="int8") /* ty=Tensor[(13, 15, 16), int8] */;
  %587 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %588 = cast(%583, dtype="int8") /* ty=Tensor[(13, 15, 16), int8] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %590 = multiply(%588, %589) /* ty=Tensor[(13, 15, 16), int8] */;
  %591 = cast(%590, dtype="int32") /* ty=Tensor[(13, 15, 16), int32] */;
  %592 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%585, dtype="int32") /* ty=Tensor[(13, 15, 16), int32] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %595 = minimum(%593, %594) /* ty=Tensor[(13, 15, 16), int32] */;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %597 = cast(%var_2140, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %598 = reshape(%597, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %599 = @func_502(%598) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %600 = sinh(%596) /* ty=Tensor[(13, 15, 16), float64] */;
  %601 = %599.2;
  (%600, %601, %var_2140)
}

def @func_4930() -> (Tensor[(7, 4, 9), float64],) {
  @func_4928() /* ty=(Tensor[(7, 4, 9), float64],) */
}

def @func_7522() -> (Tensor[(13, 15, 16), bool],) {
  %602 = @func_3269() /* ty=(Tensor[(13, 15, 16), bool], uint8, Tensor[(144), float64], Tensor[(3120), bool], Tensor[(6), float64]) */;
  %603 = %602.0;
  (%603,)
}

def @func_238(%var_236: Tensor[(5, 7, 13), uint16]) -> (Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) {
  @func_235(%var_236) /* ty=(Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) */
}

def @func_3174() -> (Tensor[(7, 4, 9), float64],) {
  @func_3172() /* ty=(Tensor[(7, 4, 9), float64],) */
}

def @func_4775(%var_4773: int64, %var_4774: Tensor[(5, 2, 11), int64]) -> (Tensor[(5, 2, 11), float64],) {
  %609 = fn (%var_4759: int64, %var_4760: Tensor[(5, 2, 11), int64]) -> (Tensor[(5, 2, 11), float64],) {
    %604 = cast(%var_4759, dtype="bool") /* ty=bool */;
    %605 = cast(%var_4760, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
    %606 = equal(%604, %605) /* ty=Tensor[(5, 2, 11), bool] */;
    %607 = cast(%606, dtype="float64") /* ty=Tensor[(5, 2, 11), float64] */;
    %608 = sinh(%607) /* ty=Tensor[(5, 2, 11), float64] */;
    (%608,)
  };
  %609(%var_4773, %var_4774) /* ty=(Tensor[(5, 2, 11), float64],) */
}

def @func_7524() -> (Tensor[(13, 15, 16), bool],) {
  @func_7522() /* ty=(Tensor[(13, 15, 16), bool],) */
}

def @func_2146(%var_2144: Tensor[(13, 15, 16), bool], %var_2145: Tensor[(455), uint16]) -> (Tensor[(13, 15, 16), float64], Tensor[(455), uint16], Tensor[(455), uint16]) {
  @func_2142(%var_2144, %var_2145) /* ty=(Tensor[(13, 15, 16), float64], Tensor[(455), uint16], Tensor[(455), uint16]) */
}

def @func_4691(%var_4689: Tensor[(13, 15, 16), float32]) -> (Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) {
  @func_4688(%var_4689) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) */
}

def @func_8335() -> (Tensor[(13, 15, 16), float64], Tensor[(6, 3, 12), float64], Tensor[(120, 8), float64], Tensor[(455), uint16], Tensor[(144), float64]) {
  %610 = @func_5101() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %611 = %610.0;
  %612 = cast(%611, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %613 = cast(meta[relay.Constant][33] /* ty=Tensor[(120, 8), float64] */, dtype="float64") /* ty=Tensor[(120, 8), float64] */;
  %614 = reshape(%613, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %615 = @func_3634(%614) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(12, 18), uint16], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(6, 3, 12), float64]) */;
  %616 = cast(meta[relay.Constant][34] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %617 = reshape(%616, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %618 = @func_2609(%617) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(144), float64]) */;
  %619 = asinh(%612) /* ty=Tensor[(13, 15, 16), float64] */;
  %620 = %615.4;
  %621 = %618.1;
  (%619, %620, meta[relay.Constant][33] /* ty=Tensor[(120, 8), float64] */, %621, meta[relay.Constant][34] /* ty=Tensor[(144), float64] */)
}

def @func_2568(%var_2559: Tensor[(1, 182), float32]) -> (Tensor[(10, 96), float64], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(14, 13, 1), float64], Tensor[(1, 182), float32]) {
  %622 = cast(meta[relay.Constant][35] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %623 = reshape(%622, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %624 = cast(%var_2559, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %625 = reshape(%624, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
  %626 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
  %627 = @func_1636(%623) /* ty=Tensor[(7, 12, 4), float64] */;
  %628 = @func_2287(%625) /* ty=Tensor[(14, 13, 1), float64] */;
  (%626, %627, meta[relay.Constant][35] /* ty=Tensor[(336), float64] */, %628, %var_2559)
}

def @func_4566(%var_4565: Tensor[(960), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(960), float64], Tensor[(960), float64]) {
  %638 = fn (%var_4562: Tensor[(960), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(960), float64], Tensor[(960), float64]) {
    %629 = @func_2859() /* ty=Tensor[(13, 15, 16), bool] */;
    %630 = cast(%629, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
    %631 = cast(%var_4562, dtype="float64") /* ty=Tensor[(960), float64] */;
    %632 = cast(%629, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
    %633 = reshape(%630, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), bool] */;
    %634 = reshape(%631, newshape=[960]) /* ty=Tensor[(960), float64] */;
    %635 = reshape(%632, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
    %636 = @func_3804(%633, %634, %635) /* ty=(Tensor[(13, 15, 16), int8], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(13, 15, 16), uint64], Tensor[(13, 15, 16), float32], Tensor[(135), int16], Tensor[(168), float32], Tensor[(135), int16]) */;
    %637 = %636.2;
    (%629, %637, %var_4562)
  };
  %638(%var_4565) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_2287(%var_2275: Tensor[(14, 13, 1), float32]) -> Tensor[(14, 13, 1), float64] {
  %639 = cast(%var_2275, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %640 = sigmoid(%639) /* ty=Tensor[(14, 13, 1), float32] */;
  %641 = cast(%640, dtype="float64") /* ty=Tensor[(14, 13, 1), float64] */;
  exp(%641) /* ty=Tensor[(14, 13, 1), float64] */
}

def @func_3145(%var_3114: Tensor[(1485), float32], %var_3115: uint8) -> (Tensor[(10, 96), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float32], Tensor[(11, 15, 9), bool], Tensor[(1485), float32], uint8) {
  %642 = @func_1964() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) */;
  %643 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
  %644 = cast(%643, dtype="float32") /* ty=Tensor[(10, 96), float32] */;
  %645 = cast(%var_3114, dtype="float32") /* ty=Tensor[(1485), float32] */;
  %646 = cast(%var_3115, dtype="uint8") /* ty=uint8 */;
  %647 = reshape(%645, newshape=[11, 15, 9]) /* ty=Tensor[(11, 15, 9), float32] */;
  %648 = reshape(%646, newshape=[]) /* ty=uint8 */;
  %649 = @func_1079(%647, %648) /* ty=(Tensor[(11, 15, 9), bool], Tensor[(455), uint16], Tensor[(65, 7), uint16], Tensor[(5, 7, 3), bool], Tensor[(11, 15, 9), int64]) */;
  %650 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
  %651 = %642.0;
  %652 = acosh(%644) /* ty=Tensor[(10, 96), float32] */;
  %653 = %649.0;
  (%650, %651, %652, %653, %var_3114, %var_3115)
}

def @func_2782(%var_2741: Tensor[(6, 1), float64], %var_2749: Tensor[(3120), bool]) -> (Tensor[(6, 1), bool], Tensor[(3120), bool], Tensor[(7, 6, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(336), float64], Tensor[(455), uint32]) {
  %654 = cast(1.38321f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %655 = cast(%var_2741, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
  %656 = cast(%var_2749, dtype="bool") /* ty=Tensor[(3120), bool] */;
  %657 = cast(meta[relay.Constant][36] /* ty=Tensor[(455), uint16] */, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %658 = reshape(%656, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), bool] */;
  %659 = reshape(%657, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %660 = @func_2142(%658, %659) /* ty=(Tensor[(13, 15, 16), float64], Tensor[(455), uint16], Tensor[(455), uint16]) */;
  %661 = %660.1;
  %662 = cast(%661, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %663 = reshape(%662, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %664 = @func_502(%663) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %665 = cast(meta[relay.Constant][37] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %666 = reshape(%665, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %667 = cast(%661, dtype="uint32") /* ty=Tensor[(455), uint32] */;
  %668 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(455), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %669 = cast(meta[relay.Constant][36] /* ty=Tensor[(455), uint16] */, dtype="uint32") /* ty=Tensor[(455), uint32] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %671 = less_equal(%654, %655) /* ty=Tensor[(6, 1), bool] */;
  %672 = %664.0;
  %673 = @func_1636(%666) /* ty=Tensor[(7, 12, 4), float64] */;
  %674 = right_shift(%669, %670) /* ty=Tensor[(455), uint32] */;
  (%671, %var_2749, %672, %673, meta[relay.Constant][37] /* ty=Tensor[(336), float64] */, %674)
}

def @func_3845(%var_3843: uint32, %var_3844: Tensor[(5, 1, 13), uint32]) -> (Tensor[(5, 1, 13), uint32], Tensor[(13, 15, 16), float32]) {
  %680 = fn (%var_3826: uint32, %var_3827: Tensor[(5, 1, 13), uint32]) -> (Tensor[(5, 1, 13), uint32], Tensor[(13, 15, 16), float32]) {
    %675 = cast(%var_3826, dtype="uint32") /* ty=uint32 */;
    %676 = cast(%var_3827, dtype="uint32") /* ty=Tensor[(5, 1, 13), uint32] */;
    %677 = @func_2959() /* ty=(Tensor[(13, 15, 16), float32],) */;
    %678 = left_shift(%675, %676) /* ty=Tensor[(5, 1, 13), uint32] */;
    %679 = %677.0;
    (%678, %679)
  };
  %680(%var_3843, %var_3844) /* ty=(Tensor[(5, 1, 13), uint32], Tensor[(13, 15, 16), float32]) */
}

def @func_1697() -> (Tensor[(13, 15, 16), bool],) {
  @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */
}

def @func_8367() -> Tensor[(10, 96), float64] {
  %681 = fn () -> Tensor[(10, 96), float64] {
    @func_6007() /* ty=Tensor[(10, 96), float64] */
  };
  %681() /* ty=Tensor[(10, 96), float64] */
}

def @func_8653(%var_8650: Tensor[(12, 9, 1), bool], %var_8651: Tensor[(96), uint16], %var_8652: Tensor[(1248), uint16]) -> (Tensor[(12, 9, 1), bool], Tensor[(16, 13, 6), bool], Tensor[(96), uint16], Tensor[(1248), uint16]) {
  @func_8648(%var_8650, %var_8651, %var_8652) /* ty=(Tensor[(12, 9, 1), bool], Tensor[(16, 13, 6), bool], Tensor[(96), uint16], Tensor[(1248), uint16]) */
}

def @func_7946() -> Tensor[(13, 15, 16), float64] {
  %682 = @func_2894() /* ty=Tensor[(13, 15, 16), float32] */;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  erf(%683) /* ty=Tensor[(13, 15, 16), float64] */
}

def @func_4928() -> (Tensor[(7, 4, 9), float64],) {
  %684 = @func_3987() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %685 = %684.0;
  (%685,)
}

def @func_7599() -> (Tensor[(13, 15, 16), bool], Tensor[(10, 16, 6), float64]) {
  %686 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %687 = @func_6375() /* ty=(Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float64]) */;
  %688 = %687.1;
  %689 = cast(%688, dtype="float32") /* ty=Tensor[(10, 16, 6), float32] */;
  %690 = log2(%689) /* ty=Tensor[(10, 16, 6), float32] */;
  %691 = cast(%690, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
  %692 = %686.0;
  %693 = cos(%691) /* ty=Tensor[(10, 16, 6), float64] */;
  (%692, %693)
}

def @func_4278(%var_4274: Tensor[(216), uint16]) -> (Tensor[(10, 96), float64], Tensor[(6, 3, 12), uint64], Tensor[(216), uint16]) {
  %694 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
  %695 = cast(%var_4274, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %696 = cast(%var_4274, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %697 = reshape(%695, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
  %698 = reshape(%696, newshape=[6, 3, 12]) /* ty=Tensor[(6, 3, 12), uint16] */;
  %699 = @func_3309(%697, %698) /* ty=(Tensor[(6, 3, 12), uint16], Tensor[(6, 3, 12), uint64]) */;
  %700 = %694.0;
  %701 = %699.1;
  (%700, %701, %var_4274)
}

def @func_2315(%var_2294: Tensor[(16, 4, 5), int64], %var_2295: Tensor[(16, 4, 5), int64], %var_2308: Tensor[(455), uint16]) -> (Tensor[(16, 4, 5), int64], Tensor[(455), uint16], Tensor[(455), uint16]) {
  %702 = cast(%var_2295, dtype="int64") /* ty=Tensor[(16, 4, 5), int64] */;
  %703 = shape_of(%var_2294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%var_2294, dtype="int64") /* ty=Tensor[(16, 4, 5), int64] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %706 = cast(%var_2308, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %707 = reshape(%706, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %708 = @func_502(%707) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %709 = bitwise_or(%704, %705) /* ty=Tensor[(16, 4, 5), int64] */;
  %710 = %708.2;
  (%709, %710, %var_2308)
}

def @func_5101() -> (Tensor[(13, 15, 16), float32],) {
  %711 = @func_2476() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %712 = %711.0;
  (%712,)
}

def @func_1964() -> (Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) {
  %713 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %714 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 455), uint16] */, dtype="uint16") /* ty=Tensor[(1, 455), uint16] */;
  %715 = reshape(%714, newshape=[455]) /* ty=Tensor[(455), uint16] */;
  %716 = @func_502(%715) /* ty=(Tensor[(7, 6, 1), float32], Tensor[(5, 7, 3), bool], Tensor[(455), uint16]) */;
  %717 = %713.0;
  %718 = %716.0;
  (%717, %718, meta[relay.Constant][38] /* ty=Tensor[(1, 455), uint16] */)
}

def @func_7181() -> (Tensor[(7, 6, 1), float64], Tensor[(13, 15, 16), float32]) {
  @func_7179() /* ty=(Tensor[(7, 6, 1), float64], Tensor[(13, 15, 16), float32]) */
}

def @func_4834(%var_4832: Tensor[(6, 14, 10), uint8], %var_4833: uint8) -> (Tensor[(6, 14, 10), bool], Tensor[(11, 15, 9), bool], Tensor[(1485), float32], uint8) {
  %735 = fn (%var_4804: Tensor[(6, 14, 10), uint8], %var_4823: uint8) -> (Tensor[(6, 14, 10), bool], Tensor[(11, 15, 9), bool], Tensor[(1485), float32], uint8) {
    %719 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 14, 10), uint8] */, dtype="uint8") /* ty=Tensor[(6, 14, 10), uint8] */;
    %720 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(6, 14, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %721 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 14, 10), uint8] */, dtype="uint8") /* ty=Tensor[(6, 14, 10), uint8] */;
    %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %723 = minimum(%721, %722) /* ty=Tensor[(6, 14, 10), uint8] */;
    %724 = cast(%var_4804, dtype="bool") /* ty=Tensor[(6, 14, 10), bool] */;
    %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
    %726 = cast(%723, dtype="bool") /* ty=Tensor[(6, 14, 10), bool] */;
    %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %728 = cast(meta[relay.Constant][41] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
    %729 = cast(%var_4823, dtype="uint8") /* ty=uint8 */;
    %730 = reshape(%728, newshape=[1485]) /* ty=Tensor[(1485), float32] */;
    %731 = reshape(%729, newshape=[]) /* ty=uint8 */;
    %732 = @func_3145(%730, %731) /* ty=(Tensor[(10, 96), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float32], Tensor[(11, 15, 9), bool], Tensor[(1485), float32], uint8) */;
    %733 = less(%726, %727) /* ty=Tensor[(6, 14, 10), bool] */;
    %734 = %732.3;
    (%733, %734, meta[relay.Constant][41] /* ty=Tensor[(1485), float32] */, %var_4823)
  };
  %735(%var_4832, %var_4833) /* ty=(Tensor[(6, 14, 10), bool], Tensor[(11, 15, 9), bool], Tensor[(1485), float32], uint8) */
}

def @func_8489() -> (Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64]) {
  %739 = fn () -> (Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64]) {
    %736 = @func_6375() /* ty=(Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float64]) */;
    %737 = @func_3853() /* ty=Tensor[(10, 96), float64] */;
    %738 = %736.1;
    (%737, %738)
  };
  %739() /* ty=(Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64]) */
}

def @func_7753() -> (Tensor[(216), uint16], Tensor[(216), uint16], Tensor[(13, 15, 16), float32]) {
  %740 = cast(meta[relay.Constant][42] /* ty=Tensor[(216), uint16] */, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %741 = reshape(%740, newshape=[216]) /* ty=Tensor[(216), uint16] */;
  %742 = @func_4278(%741) /* ty=(Tensor[(10, 96), float64], Tensor[(6, 3, 12), uint64], Tensor[(216), uint16]) */;
  %743 = @func_3269() /* ty=(Tensor[(13, 15, 16), bool], uint8, Tensor[(144), float64], Tensor[(3120), bool], Tensor[(6), float64]) */;
  %744 = %743.0;
  %745 = cast(%744, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %746 = %742.2;
  %747 = exp(%745) /* ty=Tensor[(13, 15, 16), float32] */;
  (%746, meta[relay.Constant][42] /* ty=Tensor[(216), uint16] */, %747)
}

def @func_1529(%var_1527: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), float64],) {
  @func_1526(%var_1527) /* ty=(Tensor[(13, 15, 16), float64],) */
}

def @func_8337() -> (Tensor[(13, 15, 16), float64], Tensor[(6, 3, 12), float64], Tensor[(120, 8), float64], Tensor[(455), uint16], Tensor[(144), float64]) {
  @func_8335() /* ty=(Tensor[(13, 15, 16), float64], Tensor[(6, 3, 12), float64], Tensor[(120, 8), float64], Tensor[(455), uint16], Tensor[(144), float64]) */
}

def @func_6861() -> Tensor[(13, 15, 16), bool] {
  %749 = fn () -> Tensor[(13, 15, 16), bool] {
    %748 = @func_4991() /* ty=(Tensor[(13, 15, 16), bool],) */;
    %748.0
  };
  %749() /* ty=Tensor[(13, 15, 16), bool] */
}

def @func_5183() -> Tensor[(10, 96), float64] {
  %750 = fn () -> Tensor[(10, 96), float64] {
    @func_3655() /* ty=Tensor[(10, 96), float64] */
  };
  %750() /* ty=Tensor[(10, 96), float64] */
}

def @func_2432(%var_2425: Tensor[(13, 15, 16), bool]) -> Tensor[(13, 15, 16), float64] {
  %751 = @func_1654() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) */;
  %752 = %751.0;
  %753 = cast(%var_2425, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %754 = shape_of(%752, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%752, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  add(%755, %756) /* ty=Tensor[(13, 15, 16), float64] */
}

def @func_6754(%var_6752: Tensor[(144), float64]) -> (Tensor[(10, 96), float64], Tensor[(13, 15, 16), float32], Tensor[(2, 72), float64], Tensor[(144), float64], Tensor[(10, 16, 6), float64]) {
  @func_6751(%var_6752) /* ty=(Tensor[(10, 96), float64], Tensor[(13, 15, 16), float32], Tensor[(2, 72), float64], Tensor[(144), float64], Tensor[(10, 16, 6), float64]) */
}

def @func_7487(%var_7485: Tensor[(144), float64]) -> (Tensor[(13, 15, 16), float32], Tensor[(144), float64], Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) {
  @func_7484(%var_7485) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(144), float64], Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) */
}

def @func_8648(%var_8635: Tensor[(12, 9, 1), bool], %var_8642: Tensor[(96), uint16], %var_8643: Tensor[(1248), uint16]) -> (Tensor[(12, 9, 1), bool], Tensor[(16, 13, 6), bool], Tensor[(96), uint16], Tensor[(1248), uint16]) {
  %757 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %758 = cast(%var_8635, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %759 = cast(%var_8642, dtype="uint16") /* ty=Tensor[(96), uint16] */;
  %760 = cast(%var_8643, dtype="uint16") /* ty=Tensor[(1248), uint16] */;
  %761 = cast(%var_8643, dtype="uint16") /* ty=Tensor[(1248), uint16] */;
  %762 = reshape(%759, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint16] */;
  %763 = reshape(%760, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), uint16] */;
  %764 = reshape(%761, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), uint16] */;
  %765 = @func_7296(%762, %763, %764) /* ty=(Tensor[(16, 13, 6), bool], Tensor[(16, 13, 6), float32]) */;
  %766 = logical_and(%757, %758) /* ty=Tensor[(12, 9, 1), bool] */;
  %767 = %765.0;
  (%766, %767, %var_8642, %var_8643)
}

def @func_5543(%var_5535: Tensor[(7, 4, 9), float64]) -> (Tensor[(7, 4, 9), float32],) {
  %768 = @func_3987() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %769 = %768.0;
  %770 = cast(%769, dtype="float64") /* ty=Tensor[(7, 4, 9), float64] */;
  %771 = atanh(%770) /* ty=Tensor[(7, 4, 9), float64] */;
  %772 = cast(%var_5535, dtype="float32") /* ty=Tensor[(7, 4, 9), float32] */;
  %773 = shape_of(%771, dtype="int32") /* ty=Tensor[(3), int32] */;
  %774 = cast(%771, dtype="float32") /* ty=Tensor[(7, 4, 9), float32] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %776 = power(%774, %775) /* ty=Tensor[(7, 4, 9), float32] */;
  (%776,)
}

def @func_6751(%var_6721: Tensor[(144), float64]) -> (Tensor[(10, 96), float64], Tensor[(13, 15, 16), float32], Tensor[(2, 72), float64], Tensor[(144), float64], Tensor[(10, 16, 6), float64]) {
  %777 = @func_6481() /* ty=(Tensor[(13, 15, 16), float32],) */;
  %778 = cast(%var_6721, dtype="float64") /* ty=Tensor[(144), float64] */;
  %779 = reshape(%778, newshape=[2, 72]) /* ty=Tensor[(2, 72), float64] */;
  %780 = @func_2533(%779) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(135), int16], Tensor[(2, 72), float64], Tensor[(1485), float32], Tensor[(455), uint16]) */;
  %781 = %777.0;
  %782 = cast(%781, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %783 = @func_3853() /* ty=Tensor[(10, 96), float64] */;
  %784 = cast(%783, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %785 = cast(%781, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
  %786 = reshape(%782, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), bool] */;
  %787 = reshape(%784, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %788 = reshape(%785, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
  %789 = @func_3804(%786, %787, %788) /* ty=(Tensor[(13, 15, 16), int8], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(13, 15, 16), uint64], Tensor[(13, 15, 16), float32], Tensor[(135), int16], Tensor[(168), float32], Tensor[(135), int16]) */;
  %790 = %780.3;
  %791 = %789.1;
  (%783, %781, %790, %var_6721, %791)
}

def @func_4991() -> (Tensor[(13, 15, 16), bool],) {
  %792 = @func_4884() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %793 = %792.0;
  (%793,)
}

def @func_3808(%var_3805: Tensor[(13, 15, 16), bool], %var_3806: Tensor[(960), float64], %var_3807: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), int8], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(13, 15, 16), uint64], Tensor[(13, 15, 16), float32], Tensor[(135), int16], Tensor[(168), float32], Tensor[(135), int16]) {
  %821 = fn (%var_3767: Tensor[(13, 15, 16), bool], %var_3783: Tensor[(960), float64], %var_3785: Tensor[(13, 15, 16), float64]) -> (Tensor[(13, 15, 16), int8], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(13, 15, 16), uint64], Tensor[(13, 15, 16), float32], Tensor[(135), int16], Tensor[(168), float32], Tensor[(135), int16]) {
    %794 = @func_1964() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(1, 455), uint16]) */;
    %795 = %794.0;
    %796 = cast(%var_3767, dtype="int8") /* ty=Tensor[(13, 15, 16), int8] */;
    %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
    %798 = cast(%795, dtype="int8") /* ty=Tensor[(13, 15, 16), int8] */;
    %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %800 = cast(%var_3783, dtype="float64") /* ty=Tensor[(960), float64] */;
    %801 = reshape(%800, newshape=[960]) /* ty=Tensor[(960), float64] */;
    %802 = @func_3738(%801) /* ty=(Tensor[(13, 15, 16), float32], Tensor[(10, 16, 6), float64], Tensor[(960), float64]) */;
    %803 = @func_3212() /* ty=Tensor[(13, 15, 16), bool] */;
    %804 = cast(%803, dtype="float64") /* ty=Tensor[(13, 15, 16), float64] */;
    %805 = log2(%804) /* ty=Tensor[(13, 15, 16), float64] */;
    %806 = cast(%var_3785, dtype="uint64") /* ty=Tensor[(13, 15, 16), uint64] */;
    %807 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
    %808 = cast(%805, dtype="uint64") /* ty=Tensor[(13, 15, 16), uint64] */;
    %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %810 = cast(%805, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
    %811 = cast(meta[relay.Constant][43] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %812 = cast(meta[relay.Constant][44] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
    %813 = reshape(%811, newshape=[1, 12, 14]) /* ty=Tensor[(1, 12, 14), float32] */;
    %814 = reshape(%812, newshape=[135]) /* ty=Tensor[(135), int16] */;
    %815 = @func_2832(%813, %814) /* ty=(Tensor[(1, 12, 14), float32], Tensor[(13, 15, 16), float64], Tensor[(2, 12, 14), float32], Tensor[(5, 7, 3), bool], Tensor[(9, 5, 3), float32], Tensor[(135), int16], Tensor[(144), float64], Tensor[(1485), float32], Tensor[(455, 1), float32]) */;
    %816 = bitwise_and(%798, %799) /* ty=Tensor[(13, 15, 16), int8] */;
    %817 = %802.1;
    %818 = logical_xor(%808, %809) /* ty=Tensor[(13, 15, 16), uint64] */;
    %819 = sigmoid(%810) /* ty=Tensor[(13, 15, 16), float32] */;
    %820 = %815.5;
    (%816, %817, %var_3783, %818, %819, %820, meta[relay.Constant][43] /* ty=Tensor[(168), float32] */, meta[relay.Constant][44] /* ty=Tensor[(135), int16] */)
  };
  %821(%var_3805, %var_3806, %var_3807) /* ty=(Tensor[(13, 15, 16), int8], Tensor[(10, 16, 6), float64], Tensor[(960), float64], Tensor[(13, 15, 16), uint64], Tensor[(13, 15, 16), float32], Tensor[(135), int16], Tensor[(168), float32], Tensor[(135), int16]) */
}

def @func_7397() -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64], Tensor[(13, 11, 13), float64]) {
  @func_7395() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64], Tensor[(13, 11, 13), float64]) */
}

def @func_7301(%var_7298: Tensor[(16, 1, 6), uint16], %var_7299: Tensor[(16, 13, 6), uint16], %var_7300: Tensor[(16, 13, 6), uint16]) -> (Tensor[(16, 13, 6), bool], Tensor[(16, 13, 6), float32]) {
  @func_7296(%var_7298, %var_7299, %var_7300) /* ty=(Tensor[(16, 13, 6), bool], Tensor[(16, 13, 6), float32]) */
}

def @func_2860() -> Tensor[(13, 15, 16), bool] {
  %823 = fn () -> Tensor[(13, 15, 16), bool] {
    %822 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
    %822.0
  };
  %823() /* ty=Tensor[(13, 15, 16), bool] */
}

def @func_2611(%var_2610: Tensor[(144), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(144), float64]) {
  %830 = fn (%var_2606: Tensor[(144), float64]) -> (Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(144), float64]) {
    %824 = @func_1695() /* ty=(Tensor[(13, 15, 16), bool],) */;
    %825 = cast(%var_2606, dtype="float64") /* ty=Tensor[(144), float64] */;
    %826 = reshape(%825, newshape=[2, 72]) /* ty=Tensor[(2, 72), float64] */;
    %827 = @func_2533(%826) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(7, 6, 1), float32], Tensor[(135), int16], Tensor[(2, 72), float64], Tensor[(1485), float32], Tensor[(455), uint16]) */;
    %828 = %824.0;
    %829 = %827.5;
    (%828, %829, %var_2606)
  };
  %830(%var_2610) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(144), float64]) */
}

def @func_6606() -> (Tensor[(13, 15, 16), float32],) {
  %833 = fn () -> (Tensor[(13, 15, 16), float32],) {
    %831 = @func_6255() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64]) */;
    %832 = %831.0;
    (%832,)
  };
  %833() /* ty=(Tensor[(13, 15, 16), float32],) */
}

def @func_235(%var_172: Tensor[(5, 7, 13), uint16]) -> (Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) {
  %834 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %835 = cast(%var_172, dtype="uint16") /* ty=Tensor[(5, 7, 13), uint16] */;
  %836 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %837 = reshape(%836, newshape=[]) /* ty=uint8 */;
  %838 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %839 = reshape(%838, newshape=[]) /* ty=uint8 */;
  %840 = cast(%var_172, dtype="float64") /* ty=Tensor[(5, 7, 13), float64] */;
  %841 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %842 = reshape(%841, newshape=[]) /* ty=uint8 */;
  %843 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %844 = reshape(%843, newshape=[]) /* ty=uint8 */;
  %845 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %846 = reshape(%845, newshape=[]) /* ty=uint8 */;
  %847 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint8") /* ty=uint8 */;
  %848 = reshape(%847, newshape=[]) /* ty=uint8 */;
  %849 = subtract(%834, %835) /* ty=Tensor[(5, 7, 13), uint16] */;
  %850 = @func_57(%837) /* ty=Tensor[(5, 7, 3), bool] */;
  %851 = @func_57(%839) /* ty=Tensor[(5, 7, 3), bool] */;
  %852 = acosh(%840) /* ty=Tensor[(5, 7, 13), float64] */;
  %853 = @func_57(%842) /* ty=Tensor[(5, 7, 3), bool] */;
  %854 = @func_57(%844) /* ty=Tensor[(5, 7, 3), bool] */;
  %855 = @func_57(%846) /* ty=Tensor[(5, 7, 3), bool] */;
  %856 = @func_57(%848) /* ty=Tensor[(5, 7, 3), bool] */;
  (%849, %850, %851, %852, %853, %854, %855, %856)
}

def @func_7395() -> (Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32], Tensor[(10, 96), float64], Tensor[(13, 11, 13), float64]) {
  %857 = @func_4072() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) */;
  %858 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
  %859 = @func_3971() /* ty=(Tensor[(13, 11, 13), float64], Tensor[(10, 96), float64]) */;
  %860 = %857.0;
  %861 = @func_2894() /* ty=Tensor[(13, 15, 16), float32] */;
  %862 = %858.0;
  %863 = %859.0;
  (%860, %861, %862, %863)
}

def @func_6698() -> (Tensor[(13, 15, 16), float32], Tensor[(144), float64], Tensor[(144), float64], Tensor[(13, 15, 16), bool]) {
  %872 = fn () -> (Tensor[(13, 15, 16), float32], Tensor[(144), float64], Tensor[(144), float64], Tensor[(13, 15, 16), bool]) {
    %864 = @func_5101() /* ty=(Tensor[(13, 15, 16), float32],) */;
    %865 = cast(meta[relay.Constant][46] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %866 = reshape(%865, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %867 = @func_2609(%866) /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(144), float64]) */;
    %868 = @func_1654() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float64]) */;
    %869 = %864.0;
    %870 = %867.2;
    %871 = %868.0;
    (%869, %870, meta[relay.Constant][46] /* ty=Tensor[(144), float64] */, %871)
  };
  %872() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(144), float64], Tensor[(144), float64], Tensor[(13, 15, 16), bool]) */
}

def @func_2961() -> (Tensor[(13, 15, 16), float32],) {
  @func_2959() /* ty=(Tensor[(13, 15, 16), float32],) */
}

def @func_5047(%var_5019: Tensor[(182), float32]) -> (Tensor[(14, 13, 1), float64], Tensor[(182), float32], Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), bool]) {
  %873 = cast(%var_5019, dtype="float32") /* ty=Tensor[(182), float32] */;
  %874 = reshape(%873, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
  %875 = @func_2222() /* ty=Tensor[(13, 15, 16), float32] */;
  %876 = cast(meta[relay.Constant][47] /* ty=Tensor[(13, 15, 16), float32] */, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %877 = shape_of(%875, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(%875, dtype="bool") /* ty=Tensor[(13, 15, 16), bool] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %880 = @func_4884() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %881 = @func_2287(%874) /* ty=Tensor[(14, 13, 1), float64] */;
  %882 = greater_equal(%878, %879) /* ty=Tensor[(13, 15, 16), bool] */;
  %883 = %880.0;
  (%881, %var_5019, %882, %883)
}

def @func_4886() -> (Tensor[(13, 15, 16), bool],) {
  @func_4884() /* ty=(Tensor[(13, 15, 16), bool],) */
}

def @func_7635() -> (Tensor[(7, 4, 9), float64],) {
  %884 = @func_3987() /* ty=(Tensor[(7, 4, 9), float64],) */;
  %885 = %884.0;
  (%885,)
}

def @func_8089(%var_8088: Tensor[(7, 4, 9), float64]) -> (Tensor[(7, 4, 9), float32], Tensor[(7, 4, 9), float64]) {
  %895 = fn (%var_8074: Tensor[(7, 4, 9), float64]) -> (Tensor[(7, 4, 9), float32], Tensor[(7, 4, 9), float64]) {
    %886 = @func_7635() /* ty=(Tensor[(7, 4, 9), float64],) */;
    %887 = %886.0;
    %888 = cast(%var_8074, dtype="float32") /* ty=Tensor[(7, 4, 9), float32] */;
    %889 = shape_of(%887, dtype="int32") /* ty=Tensor[(3), int32] */;
    %890 = cast(%887, dtype="float32") /* ty=Tensor[(7, 4, 9), float32] */;
    %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %892 = @func_3498() /* ty=(Tensor[(455), uint16], Tensor[(7, 4, 9), float64]) */;
    %893 = divide(%890, %891) /* ty=Tensor[(7, 4, 9), float32] */;
    %894 = %892.1;
    (%893, %894)
  };
  %895(%var_8088) /* ty=(Tensor[(7, 4, 9), float32], Tensor[(7, 4, 9), float64]) */
}

def @func_3420() -> Tensor[(10, 96), float64] {
  %896 = @func_2381() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(455), uint16], Tensor[(455), uint16], Tensor[(10, 96), float64]) */;
  %896.3
}

def @func_8061(%var_8056: float64, %var_8057: Tensor[(3, 10, 3), float64], %var_8058: Tensor[(110), int64], %var_8059: Tensor[(10, 96), float64], %var_8060: Tensor[(3, 10, 3), bool]) -> (Tensor[(110), int64], Tensor[(110), int64], Tensor[(65, 7), uint64], Tensor[(65, 7), uint16], Tensor[(10, 96), uint8], Tensor[(3, 10, 3), bool], Tensor[(7, 4, 9), float64]) {
  @func_8054(%var_8056, %var_8057, %var_8058, %var_8059, %var_8060) /* ty=(Tensor[(110), int64], Tensor[(110), int64], Tensor[(65, 7), uint64], Tensor[(65, 7), uint16], Tensor[(10, 96), uint8], Tensor[(3, 10, 3), bool], Tensor[(7, 4, 9), float64]) */
}

def @func_1270(%var_1269: Tensor[(6, 2, 12), float64]) -> (Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) {
  %912 = fn (%var_1207: Tensor[(6, 2, 12), float64]) -> (Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) {
    %897 = cast(%var_1207, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
    %898 = cast(meta[relay.Constant][48] /* ty=Tensor[(1485), float32] */, dtype="float32") /* ty=Tensor[(1485), float32] */;
    %899 = cast(meta[relay.Constant][49] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %900 = reshape(%898, newshape=[11, 15, 9]) /* ty=Tensor[(11, 15, 9), float32] */;
    %901 = reshape(%899, newshape=[]) /* ty=uint8 */;
    %902 = @func_1079(%900, %901) /* ty=(Tensor[(11, 15, 9), bool], Tensor[(455), uint16], Tensor[(65, 7), uint16], Tensor[(5, 7, 3), bool], Tensor[(11, 15, 9), int64]) */;
    %903 = cast(%var_1207, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
    %904 = acosh(%903) /* ty=Tensor[(6, 2, 12), float64] */;
    %905 = cast(%var_1207, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
    %906 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
    %907 = cast(%904, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
    %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %909 = tan(%897) /* ty=Tensor[(6, 2, 12), float64] */;
    %910 = %902.4;
    %911 = power(%907, %908) /* ty=Tensor[(6, 2, 12), float64] */;
    (%909, %910, meta[relay.Constant][48] /* ty=Tensor[(1485), float32] */, meta[relay.Constant][49] /* ty=uint8 */, %911)
  };
  %912(%var_1269) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(11, 15, 9), int64], Tensor[(1485), float32], uint8, Tensor[(6, 2, 12), float64]) */
}

def @func_8582() -> (Tensor[(7, 4, 9), float64], Tensor[(13, 15, 16), float32], Tensor[(7, 4, 9), float64], Tensor[(10, 96), float64], Tensor[(13, 15, 16), float32]) {
  %923 = fn () -> (Tensor[(7, 4, 9), float64], Tensor[(13, 15, 16), float32], Tensor[(7, 4, 9), float64], Tensor[(10, 96), float64], Tensor[(13, 15, 16), float32]) {
    %913 = @func_7635() /* ty=(Tensor[(7, 4, 9), float64],) */;
    %914 = @func_1471() /* ty=(Tensor[(13, 15, 16), bool], Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float64]) */;
    %915 = @func_3172() /* ty=(Tensor[(7, 4, 9), float64],) */;
    %916 = @func_7242() /* ty=(Tensor[(10, 96), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64]) */;
    %917 = @func_6936() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) */;
    %918 = %913.0;
    %919 = %914.1;
    %920 = %915.0;
    %921 = %916.0;
    %922 = %917.1;
    (%918, %919, %920, %921, %922)
  };
  %923() /* ty=(Tensor[(7, 4, 9), float64], Tensor[(13, 15, 16), float32], Tensor[(7, 4, 9), float64], Tensor[(10, 96), float64], Tensor[(13, 15, 16), float32]) */
}

def @func_1934(%var_1933: Tensor[(10, 16, 6), float64]) -> Tensor[(10, 16, 6), float64] {
  %927 = fn (%var_1893: Tensor[(10, 16, 6), float64]) -> Tensor[(10, 16, 6), float64] {
    %924 = cast(%var_1893, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
    %925 = sinh(%924) /* ty=Tensor[(10, 16, 6), float64] */;
    %926 = cast(%925, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
    sigmoid(%926) /* ty=Tensor[(10, 16, 6), float64] */
  };
  %927(%var_1933) /* ty=Tensor[(10, 16, 6), float64] */
}

def @func_6375() -> (Tensor[(10, 96), float64], Tensor[(10, 16, 6), float64], Tensor[(13, 15, 16), bool], Tensor[(10, 96), float64]) {
  %928 = @func_3885() /* ty=(Tensor[(10, 96), float64],) */;
  %929 = %928.0;
  %930 = cast(%929, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %931 = reshape(%930, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float64] */;
  %932 = @func_4135() /* ty=(Tensor[(13, 15, 16), bool],) */;
  %933 = @func_1932(%931) /* ty=Tensor[(10, 16, 6), float64] */;
  %934 = %932.0;
  %935 = @func_2487() /* ty=Tensor[(10, 96), float64] */;
  (%929, %933, %934, %935)
}

def @func_7838() -> (Tensor[(13, 15, 16), float32], Tensor[(5, 7, 3), bool], Tensor[(1, 455), uint16]) {
  %936 = @func_4072() /* ty=(Tensor[(13, 15, 16), float32], Tensor[(13, 15, 16), float32]) */;
  %937 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 455), uint16] */, dtype="uint16") /* ty=Tensor[(1, 455), uint16] */;
  %938 = reshape(%937, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), uint16] */;
  %939 = @func_235(%938) /* ty=(Tensor[(5, 7, 13), uint16], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 13), float64], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool], Tensor[(5, 7, 3), bool]) */;
  %940 = %936.0;
  %941 = %939.5;
  (%940, %941, meta[relay.Constant][50] /* ty=Tensor[(1, 455), uint16] */)
}

def @func_4219(%var_4216: Tensor[(10, 96), float64], %var_4217: Tensor[(1485), float32], %var_4218: Tensor[(3120), float64]) -> (Tensor[(10, 96), float32], Tensor[(144), float64], Tensor[(1485), float32], Tensor[(13, 15, 16), float64], Tensor[(3120), float64]) {
  %956 = fn (%var_4196: Tensor[(10, 96), float64], %var_4205: Tensor[(1485), float32], %var_4211: Tensor[(3120), float64]) -> (Tensor[(10, 96), float32], Tensor[(144), float64], Tensor[(1485), float32], Tensor[(13, 15, 16), float64], Tensor[(3120), float64]) {
    %942 = @func_3655() /* ty=Tensor[(10, 96), float64] */;
    %943 = cast(%var_4196, dtype="float32") /* ty=Tensor[(10, 96), float32] */;
    %944 = shape_of(%942, dtype="int32") /* ty=Tensor[(2), int32] */;
    %945 = cast(%942, dtype="float32") /* ty=Tensor[(10, 96), float32] */;
    %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %947 = cast(%var_4205, dtype="float32") /* ty=Tensor[(1485), float32] */;
    %948 = reshape(%947, newshape=[165, 9]) /* ty=Tensor[(165, 9), float32] */;
    %949 = @func_3695(%948) /* ty=(Tensor[(7, 4, 9), float64], Tensor[(455), uint16], Tensor[(135, 1), int16], Tensor[(144), float64], Tensor[(165, 9), float32], Tensor[(455), uint16]) */;
    %950 = cast(%var_4211, dtype="float64") /* ty=Tensor[(3120), float64] */;
    %951 = reshape(%950, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float64] */;
    %952 = @func_1526(%951) /* ty=(Tensor[(13, 15, 16), float64],) */;
    %953 = mod(%945, %946) /* ty=Tensor[(10, 96), float32] */;
    %954 = %949.3;
    %955 = %952.0;
    (%953, %954, %var_4205, %955, %var_4211)
  };
  %956(%var_4216, %var_4217, %var_4218) /* ty=(Tensor[(10, 96), float32], Tensor[(144), float64], Tensor[(1485), float32], Tensor[(13, 15, 16), float64], Tensor[(3120), float64]) */
}

def @func_2896() -> Tensor[(13, 15, 16), float32] {
  @func_2894() /* ty=Tensor[(13, 15, 16), float32] */
}

def @func_3854() -> Tensor[(10, 96), float64] {
  %957 = fn () -> Tensor[(10, 96), float64] {
    @func_3420() /* ty=Tensor[(10, 96), float64] */
  };
  %957() /* ty=Tensor[(10, 96), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

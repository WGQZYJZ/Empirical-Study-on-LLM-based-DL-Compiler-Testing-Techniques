import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_22 = relay.var("var_22", dtype = "uint8", shape = ())#candidate|22|()|var|uint8
const_23 = relay.const([[[-2,-4,8],[-5,-1,-3],[-5,3,2],[-10,-2,7],[-8,-2,3],[-9,-2,-7],[2,5,1]],[[4,-5,-5],[-6,-2,-2],[4,-10,-9],[6,7,10],[-8,8,-6],[1,4,-8],[3,-6,4]],[[-5,-7,5],[-9,5,8],[-10,2,10],[-6,7,-9],[2,10,-8],[-5,-5,10],[-2,10,5]],[[-5,-6,4],[4,-9,1],[-9,-3,-1],[5,5,-10],[-1,-2,-2],[-1,-1,-5],[-3,6,-1]],[[3,1,6],[6,-10,3],[-6,4,7],[6,-2,-5],[1,-5,3],[3,3,1],[-8,5,7]]], dtype = "uint8")#candidate|23|(5, 7, 3)|const|uint8
bop_24 = relay.greater(var_22.astype('bool'), const_23.astype('bool')) # shape=(5, 7, 3)
output = bop_24
output2 = bop_24
func_57 = relay.Function([var_22,], output)
mod['func_57'] = func_57
mod = relay.transform.InferType()(mod)
mutated_mod['func_57'] = func_57
mutated_mod = relay.transform.InferType()(mutated_mod)
var_58 = relay.var("var_58", dtype = "uint8", shape = ())#candidate|58|()|var|uint8
func_57_call = mutated_mod.get_global_var('func_57')
call_59 = func_57_call(var_58)
output = call_59
func_60 = relay.Function([var_58], output)
mutated_mod['func_60'] = func_60
mutated_mod = relay.transform.InferType()(mutated_mod)
const_171 = relay.const(6, dtype = "uint16")#candidate|171|()|const|uint16
var_172 = relay.var("var_172", dtype = "uint16", shape = (5, 7, 13))#candidate|172|(5, 7, 13)|var|uint16
bop_173 = relay.subtract(const_171.astype('uint16'), var_172.astype('uint16')) # shape=(5, 7, 13)
func_57_call = mod.get_global_var('func_57')
func_60_call = mutated_mod.get_global_var('func_60')
call_180 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
call_181 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
func_57_call = mod.get_global_var('func_57')
func_60_call = mutated_mod.get_global_var('func_60')
call_190 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
call_191 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
uop_193 = relay.acosh(var_172.astype('float64')) # shape=(5, 7, 13)
func_57_call = mod.get_global_var('func_57')
func_60_call = mutated_mod.get_global_var('func_60')
call_205 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
call_206 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
func_57_call = mod.get_global_var('func_57')
func_60_call = mutated_mod.get_global_var('func_60')
call_211 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
call_212 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
func_57_call = mod.get_global_var('func_57')
func_60_call = mutated_mod.get_global_var('func_60')
call_224 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
call_225 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
func_57_call = mod.get_global_var('func_57')
func_60_call = mutated_mod.get_global_var('func_60')
call_229 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
call_230 = func_57_call(relay.reshape(const_171.astype('uint8'), []))
output = relay.Tuple([bop_173,call_180,call_190,uop_193,call_205,call_211,call_224,call_229,])
output2 = relay.Tuple([bop_173,call_181,call_191,uop_193,call_206,call_212,call_225,call_230,])
func_235 = relay.Function([var_172,], output)
mod['func_235'] = func_235
mod = relay.transform.InferType()(mod)
mutated_mod['func_235'] = func_235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_236 = relay.var("var_236", dtype = "uint16", shape = (5, 7, 13))#candidate|236|(5, 7, 13)|var|uint16
func_235_call = mutated_mod.get_global_var('func_235')
call_237 = func_235_call(var_236)
output = call_237
func_238 = relay.Function([var_236], output)
mutated_mod['func_238'] = func_238
mutated_mod = relay.transform.InferType()(mutated_mod)
const_482 = relay.const([[[6.469053],[-2.597193],[-1.036922],[9.002162],[-4.076488],[-5.644915]],[[3.444533],[2.824776],[-9.518343],[-5.309530],[4.576100],[8.472225]],[[2.487673],[-8.491645],[4.301212],[-6.238993],[-7.981473],[5.571336]],[[-6.038664],[3.649725],[-2.850814],[1.647234],[-3.091429],[-5.466320]],[[-8.234295],[8.487787],[-5.090896],[8.506515],[-3.109805],[-3.705731]],[[6.088973],[-8.078599],[5.857162],[-9.739451],[-9.550990],[-9.805065]],[[-6.058772],[5.603726],[2.164873],[2.062133],[-9.292939],[4.766244]]], dtype = "float32")#candidate|482|(7, 6, 1)|const|float32
uop_483 = relay.acos(const_482.astype('float32')) # shape=(7, 6, 1)
func_235_call = mod.get_global_var('func_235')
func_238_call = mutated_mod.get_global_var('func_238')
var_500 = relay.var("var_500", dtype = "uint16", shape = (455,))#candidate|500|(455,)|var|uint16
call_499 = relay.TupleGetItem(func_235_call(relay.reshape(var_500.astype('uint16'), [5, 7, 13])), 7)
call_501 = relay.TupleGetItem(func_238_call(relay.reshape(var_500.astype('uint16'), [5, 7, 13])), 7)
output = relay.Tuple([uop_483,call_499,var_500,])
output2 = relay.Tuple([uop_483,call_501,var_500,])
func_502 = relay.Function([var_500,], output)
mod['func_502'] = func_502
mod = relay.transform.InferType()(mod)
mutated_mod['func_502'] = func_502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_503 = relay.var("var_503", dtype = "uint16", shape = (455,))#candidate|503|(455,)|var|uint16
func_502_call = mutated_mod.get_global_var('func_502')
call_504 = func_502_call(var_503)
output = call_504
func_505 = relay.Function([var_503], output)
mutated_mod['func_505'] = func_505
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1012 = relay.var("var_1012", dtype = "float32", shape = (11, 15, 9))#candidate|1012|(11, 15, 9)|var|float32
uop_1013 = relay.tan(var_1012.astype('float32')) # shape=(11, 15, 9)
uop_1017 = relay.log2(uop_1013.astype('float64')) # shape=(11, 15, 9)
bop_1022 = relay.greater(uop_1017.astype('bool'), relay.reshape(uop_1013.astype('bool'), relay.shape_of(uop_1017))) # shape=(11, 15, 9)
bop_1035 = relay.maximum(uop_1017.astype('uint8'), relay.reshape(uop_1013.astype('uint8'), relay.shape_of(uop_1017))) # shape=(11, 15, 9)
func_502_call = mod.get_global_var('func_502')
func_505_call = mutated_mod.get_global_var('func_505')
const_1047 = relay.const([[8,-9,7,1,1,-10,2],[-10,8,1,7,4,-3,-3],[-2,2,-6,-10,-8,-4,-7],[-8,4,-3,-1,-6,-6,-6],[-7,-1,-7,-8,3,3,-9],[2,5,6,-8,-2,5,-7],[-10,-2,-1,7,-6,-10,-5],[2,-4,-1,-4,6,7,-1],[8,7,-1,9,2,2,3],[8,-7,-3,5,-7,10,-1],[3,-3,-1,1,9,-8,7],[2,-1,9,9,6,3,-2],[-9,4,-8,7,9,-1,-7],[1,8,4,-4,-7,5,8],[9,3,-5,-3,5,-10,7],[3,2,-10,9,-10,-6,-7],[-2,-1,5,10,10,-10,-1],[-1,4,2,10,-6,5,6],[-3,-6,-8,-6,8,10,9],[-7,2,9,-2,4,5,2],[6,-5,1,-5,-6,-1,-9],[4,-4,-8,-7,-4,10,-2],[8,4,4,-4,-9,-5,4],[-9,8,10,-4,-10,-5,-1],[-2,7,7,-5,-1,5,2],[4,7,-8,7,-8,-6,4],[-3,-8,8,-7,9,7,5],[-9,-3,2,6,-4,9,6],[10,-9,-6,8,-2,-2,-10],[-10,-10,-1,-4,2,4,5],[-8,1,2,1,-6,-6,5],[-9,5,-10,-10,10,6,4],[-10,5,1,-7,5,2,10],[-10,-6,-2,2,-9,-2,6],[3,-10,-8,-4,-1,1,3],[-7,-3,-8,8,3,-9,-2],[-3,1,-6,-10,5,3,-7],[10,-10,-10,4,6,-7,1],[1,-9,2,10,-8,-4,6],[-7,-4,4,-3,-8,4,10],[5,7,7,-10,-3,-8,-3],[-6,-10,4,1,7,-2,-5],[-1,8,-8,-1,1,5,2],[-7,-6,5,-7,9,7,-3],[2,-9,-3,-8,2,-8,-3],[-6,-6,1,5,7,5,9],[-9,4,10,-4,-10,8,4],[-2,-8,-1,1,-6,7,6],[9,-7,8,10,5,-5,-8],[7,-8,8,-9,-4,-10,7],[-6,-1,-8,1,-2,-8,-7],[-1,7,-9,-9,2,-6,10],[-7,-5,-10,7,-7,-8,1],[7,8,-3,8,-9,-8,6],[-9,2,-3,-10,5,3,-6],[-4,-6,3,9,-8,-9,-5],[-9,-1,-9,-4,-9,-9,10],[10,-4,2,-5,3,-2,-10],[-9,-8,-8,-5,-1,3,-5],[-8,-4,-10,-5,8,9,4],[2,2,3,-10,-8,-9,-5],[-1,-3,-5,9,5,10,-4],[5,-2,-5,10,6,-8,4],[5,8,-10,-7,1,-4,10],[2,-5,-5,5,1,8,3]], dtype = "uint16")#candidate|1047|(65, 7)|const|uint16
call_1046 = relay.TupleGetItem(func_502_call(relay.reshape(const_1047.astype('uint16'), [455,])), 2)
call_1048 = relay.TupleGetItem(func_505_call(relay.reshape(const_1047.astype('uint16'), [455,])), 2)
uop_1055 = relay.asinh(bop_1035.astype('float32')) # shape=(11, 15, 9)
func_57_call = mod.get_global_var('func_57')
func_60_call = mutated_mod.get_global_var('func_60')
var_1063 = relay.var("var_1063", dtype = "uint8", shape = ())#candidate|1063|()|var|uint8
call_1062 = func_57_call(relay.reshape(var_1063.astype('uint8'), []))
call_1064 = func_57_call(relay.reshape(var_1063.astype('uint8'), []))
uop_1068 = relay.sigmoid(uop_1055.astype('float64')) # shape=(11, 15, 9)
bop_1074 = relay.multiply(uop_1068.astype('int64'), var_1063.astype('int64')) # shape=(11, 15, 9)
output = relay.Tuple([bop_1022,call_1046,const_1047,call_1062,bop_1074,])
output2 = relay.Tuple([bop_1022,call_1048,const_1047,call_1064,bop_1074,])
func_1079 = relay.Function([var_1012,var_1063,], output)
mod['func_1079'] = func_1079
mod = relay.transform.InferType()(mod)
mutated_mod['func_1079'] = func_1079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1079_call = mutated_mod.get_global_var('func_1079')
var_1081 = relay.var("var_1081", dtype = "float32", shape = (11, 15, 9))#candidate|1081|(11, 15, 9)|var|float32
var_1082 = relay.var("var_1082", dtype = "uint8", shape = ())#candidate|1082|()|var|uint8
call_1080 = func_1079_call(var_1081,var_1082,)
output = call_1080
func_1083 = relay.Function([var_1081,var_1082,], output)
mutated_mod['func_1083'] = func_1083
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1207 = relay.var("var_1207", dtype = "float64", shape = (6, 2, 12))#candidate|1207|(6, 2, 12)|var|float64
uop_1208 = relay.tan(var_1207.astype('float64')) # shape=(6, 2, 12)
uop_1218 = relay.acosh(var_1207.astype('float64')) # shape=(6, 2, 12)
func_1079_call = mod.get_global_var('func_1079')
func_1083_call = mutated_mod.get_global_var('func_1083')
const_1233 = relay.const([4.823575,-1.715212,-2.635479,0.315407,1.337328,-3.489489,9.957335,9.829494,2.727704,1.202942,7.290627,4.774259,-6.720965,-0.114639,-8.232660,-9.334629,7.525199,-5.969861,3.787967,-8.979134,-7.527274,1.703080,2.641431,-2.253223,-0.841507,-3.067527,2.661618,-0.001832,-3.263522,0.640344,-8.988987,-6.317758,-8.149625,5.480887,0.350901,-3.487979,-1.732234,3.682856,2.843211,-5.326846,4.133656,5.150067,8.905304,-1.630638,-1.445627,-0.565464,3.950036,8.498992,-0.308183,-1.737732,-0.910955,9.204627,-9.832997,2.381979,-3.182046,4.740998,-3.989717,-4.784092,-6.148396,-9.076338,4.053084,1.477475,0.276939,-6.951885,-7.401839,6.828181,-4.172761,7.097938,6.038630,-7.092848,5.524799,4.334588,-4.755484,3.618646,9.048614,5.921535,-0.318619,8.417665,0.998519,6.821837,-8.200678,9.080479,6.358350,9.997593,9.546497,-1.269756,-4.905169,-9.888136,-4.091416,8.493015,0.277048,-6.766036,-9.766016,-0.270824,8.033731,4.902654,-3.109346,-0.643783,6.016921,4.785126,6.367185,9.847963,7.728573,-3.204599,9.964489,6.868085,5.648556,9.442708,-3.772358,3.385957,4.847468,7.914003,7.472089,-9.901491,-6.006819,1.221109,7.784192,0.552411,7.718900,-2.941725,5.274190,3.329640,3.667415,-0.896377,-9.820635,-0.668099,-9.107840,-6.624507,3.953011,8.915370,-7.088720,-6.337039,5.398012,-4.134439,5.574245,-6.292727,0.596345,3.832877,-0.140301,-4.730780,-3.868739,-0.085756,-3.412379,-1.638342,6.917138,3.974391,8.075554,-8.577939,1.607954,7.967177,2.729823,-0.052728,4.407206,-1.223778,3.166892,5.621552,7.738962,2.201976,-4.600337,7.600719,2.435286,2.184566,-2.295126,8.380959,-3.906650,3.203127,-3.765881,-1.239048,8.612704,9.077174,9.701032,-6.761169,2.604531,1.341709,-3.672012,7.968959,8.011693,-1.651783,-5.810829,-7.766875,-0.252289,1.634835,8.417002,-9.121809,-5.089751,6.377750,-7.043878,-8.154185,2.267002,0.508438,-7.405992,0.449235,2.623353,-9.761659,-4.836752,5.484606,-7.370217,8.915804,-0.770109,-1.937597,-9.460487,3.488878,-2.260262,-1.625887,9.903020,2.533080,-0.374668,6.077413,-8.396413,-2.055768,-4.806581,7.528020,-3.680889,-7.493529,-9.352262,9.601394,9.621585,-6.131015,-5.446091,5.755114,-1.424163,7.641943,-3.421291,6.121016,-0.795176,2.464951,0.424070,1.454889,3.190636,-5.092106,2.626807,-4.374696,-4.460033,-9.142468,0.910955,-6.046741,-1.952991,4.862416,6.247205,6.666200,-5.766383,-2.910691,3.808816,5.675030,-8.036503,-0.763745,8.150959,-7.668205,6.286565,-8.819534,-2.187659,5.224329,-6.276891,1.387951,6.817597,-4.199341,1.730748,3.334633,-9.329281,-8.873225,-7.299364,-9.207216,9.901113,-7.573766,2.498422,-3.260959,2.583083,-6.557938,-4.469532,8.075337,-6.558688,1.585694,6.590937,-1.120077,2.784251,-9.622402,-5.623293,8.706961,2.183751,-9.916938,-9.762304,-0.291945,-4.893653,1.320260,7.616208,-0.292369,-8.161870,7.005171,-2.942924,-6.208826,-3.019066,-3.697822,3.764812,0.820541,7.536083,-4.972774,-7.311457,1.446179,6.002353,1.016441,-9.473925,0.647583,5.920130,-7.081460,-6.623369,7.913602,5.873009,7.277057,1.705543,4.691594,0.128751,-6.004794,-1.491637,-1.239261,-9.966536,-6.981237,-6.815376,-5.620088,2.148255,1.931666,8.554691,-5.757250,-5.009521,5.613687,-1.628920,-1.364785,-7.315853,9.855455,7.166583,4.833431,2.148490,-5.672242,1.740976,0.273813,0.179994,-6.468985,6.548298,6.513043,9.472922,4.047517,0.992755,6.817796,-6.065484,-5.925105,-8.506360,-9.590870,-9.055211,0.818426,3.836706,-0.926306,-2.728196,0.316503,4.722566,4.646813,1.778334,7.942862,6.076484,3.053029,2.020569,7.708676,6.079282,-8.293392,-3.659443,7.096864,-2.879789,-7.137968,-4.143164,5.871583,-8.358142,-4.079294,2.284648,-2.918573,-9.307848,5.213477,1.567870,-9.132321,-2.923539,-8.483319,-8.005759,-3.628046,5.428299,6.210476,-5.742961,-7.074198,-7.837793,-7.560596,-5.765284,-2.447603,-5.487781,-4.057509,-1.150838,-1.433982,1.895113,9.505175,-8.507603,3.609142,-4.664959,-0.542556,9.157532,1.962079,1.677821,4.121879,-3.560788,2.025159,7.726277,-8.310535,-3.467734,-6.209459,-8.284728,5.806299,5.056566,-5.960953,-2.889658,-8.628565,2.275621,1.460472,-9.124692,-0.262691,-0.415730,3.505009,-4.572925,6.161571,7.995964,-0.339905,9.587998,-2.310417,-8.608041,-2.980465,5.295370,-1.485885,-2.999775,-0.228019,4.574622,8.946706,-5.705770,5.699134,-2.282815,9.606313,7.516076,9.707271,1.603520,6.493554,6.369761,-6.421293,8.199867,6.344552,-4.233547,-3.799511,1.661113,6.833029,-2.912851,-6.654620,6.990308,-9.044966,6.885103,2.475068,-8.533301,6.473565,-4.831405,-4.973554,-3.779741,6.598838,4.348362,-6.561778,2.379464,-3.914832,7.732175,3.654076,-4.064994,6.764464,0.258207,9.824156,7.689193,9.757334,-2.602692,2.555412,-4.788319,-4.709546,-3.897041,-7.861354,-1.276947,-9.100196,0.008959,2.122862,2.210564,1.689160,8.194393,-0.184682,1.432509,6.898729,-8.908309,9.312116,2.222304,-3.033504,-0.294434,-0.811741,-8.456199,-3.297469,-6.397234,5.994395,-7.690843,-5.785097,1.437378,8.693424,4.535787,6.931702,9.811765,-9.204964,-8.441364,1.625222,7.118624,8.355280,-0.616793,0.836090,1.279014,-4.115006,1.815115,-2.050714,-5.491311,-4.389056,-4.954427,1.912795,-4.332235,-5.126197,-7.017536,3.307870,2.377261,1.499377,1.833185,-4.573502,-3.070857,-9.034673,-6.701322,-0.095777,-7.689708,-1.089168,-6.297420,8.809399,8.902306,2.304749,2.569060,3.108357,-3.979262,-4.745355,2.358889,-5.228645,3.875082,3.315120,7.986651,-3.641581,-5.531129,-5.098349,-7.183541,8.036513,-3.204061,-9.630720,-6.955004,-2.801293,-6.452570,-1.403350,-9.638163,4.396144,6.644203,2.877076,1.829877,2.009192,-2.210935,-2.384782,0.062982,-3.913331,5.770588,5.037801,-8.704672,-6.798230,-4.672433,-1.861304,9.500575,-0.425843,-8.604191,-6.440465,-8.232065,-6.255415,9.183555,9.586046,-3.380601,-2.965741,-9.547083,7.984474,-7.920652,-8.990541,-3.867468,1.466476,-1.138112,8.756848,9.265454,-4.055830,5.370035,-7.420505,-4.401468,5.936116,5.898873,-0.882214,4.690412,-3.860386,2.901548,-7.487712,4.299036,0.547939,1.068912,-3.336468,-9.154344,-0.305515,5.188050,0.036312,5.386139,9.650321,-9.321555,-9.912655,6.881470,3.874639,9.784781,3.363739,6.214355,5.313091,1.785299,5.348299,-6.133374,7.407972,-2.186039,6.903319,8.030244,-5.768624,-2.366859,6.205628,0.753875,-2.732481,-9.666715,2.626476,7.829877,-4.510077,7.832388,-9.852338,-0.483518,8.368267,-4.355269,-6.015920,3.075097,-3.956037,0.944241,-4.588025,-0.376022,-9.919477,-9.869229,6.961427,-7.684660,-9.468307,4.201754,5.138142,-9.888682,9.618042,-3.417621,-4.998174,-0.738826,5.750541,-8.787537,4.496047,3.958842,5.748639,4.211791,3.277125,-5.522508,9.461087,-9.277435,7.238768,-6.218048,-2.298701,-2.471861,-4.244574,9.671547,7.164033,7.677632,-2.753407,-4.577834,-2.259839,-8.743334,8.876311,7.792615,8.884001,5.452939,-7.574931,8.236026,-0.032668,3.280760,-8.112637,2.732141,-9.962867,-5.028407,1.283118,-3.256398,6.730057,1.804090,-9.898502,2.130173,-1.528684,-9.438924,-1.184758,4.030321,-6.130143,-4.913572,7.446109,-4.871238,-9.960107,8.268423,3.687083,-6.634197,-9.614973,8.382916,-8.397038,-1.877278,0.388288,-3.512563,-5.160261,2.156255,-0.123513,-3.097518,5.579696,-6.350346,1.207431,8.933825,6.445243,6.561402,0.693197,-4.220123,-8.155578,-9.642067,-5.524885,7.767910,4.419542,4.880487,-0.885827,7.320209,-3.871846,-3.916313,0.607054,-0.788731,1.176380,3.072597,-1.821229,-5.995601,-5.116107,-1.615519,4.367828,-3.120026,-0.586466,4.770010,8.061972,-6.606440,-5.511110,3.960709,-8.026626,-0.592510,-4.646044,-4.184788,-1.749668,2.405861,-6.426832,0.871054,5.151149,-8.814448,7.795924,8.181210,-9.545707,-3.710373,-4.448862,4.599643,8.847961,-9.402646,3.451455,-5.200756,0.287329,-6.928565,9.783261,-2.022253,0.296030,5.411038,-3.416180,2.578087,-6.131624,7.951002,-3.837106,-8.115688,-9.851272,5.220223,2.281648,9.545221,2.036973,-7.768909,8.027505,9.282280,0.404150,4.092125,3.230714,7.584423,-7.045019,-6.093770,9.114598,-2.372903,5.513948,9.496961,9.970697,-4.237324,-0.544822,-2.224714,5.860575,2.166838,-6.008398,-7.841589,1.665803,9.913968,-4.301866,-2.397957,-5.328142,1.289232,-6.753621,3.998826,-2.877895,-6.673874,-5.470837,-8.596850,7.339730,4.070399,7.505496,6.544497,8.537665,-8.022611,9.384296,4.778588,-6.632340,7.335833,1.546769,-5.495950,-6.331504,-0.908015,4.272217,-2.014155,-6.750524,-7.503360,8.164690,8.369965,2.278456,-6.274130,-0.971006,-2.517572,8.954084,-7.322371,-2.478203,-0.190946,1.629474,-9.156316,1.788314,0.427662,-1.270621,6.235515,-1.399483,-2.121782,3.487580,-7.987504,-9.529451,-5.177261,-7.390837,-5.118824,2.199261,-1.933076,3.097804,-0.911354,0.717814,1.264076,4.910929,-3.076081,5.886034,6.159022,7.038624,-3.139313,0.318991,9.144210,1.600150,-0.992076,-5.037126,-6.551011,2.676182,2.046502,-0.758783,-9.019603,8.502719,4.944814,8.311905,0.229917,-6.334073,-6.416289,-2.609584,-4.258966,5.017768,2.031508,6.845021,-0.692138,-0.543190,9.950211,-7.486057,-8.273170,-0.638440,-8.940038,8.037789,9.098891,8.293379,6.841403,1.595750,-4.336772,-6.365178,7.848201,2.011763,3.888023,5.707673,-7.197112,-9.540718,4.532339,6.342936,7.606863,-7.541957,-9.536150,-2.810729,2.403231,4.695009,0.525204,8.428797,5.155499,-2.048422,-4.246087,-3.946158,1.141238,-4.246272,5.703500,-6.692123,-4.123543,6.402379,-5.574747,-5.488863,-7.779341,7.143615,9.069283,-8.682261,9.929160,7.924928,-3.601233,6.822027,4.839145,-5.354031,5.228182,5.171841,8.603499,-9.585715,-7.383657,-4.680116,0.912433,-9.401193,-2.547219,5.994246,4.172587,-6.747707,-8.196005,2.514755,0.907586,0.807125,-6.299477,-1.238291,3.840427,-0.045303,4.475604,-4.455749,-2.467904,0.552334,7.465858,2.258552,-8.755538,-4.737667,3.070556,-1.499851,-2.487341,2.805243,-8.689049,-5.327453,-3.703346,2.342028,0.448568,-4.650303,6.961816,1.050209,0.159055,4.630104,-0.467468,-1.338089,-4.999877,-0.670905,-0.884826,0.702256,5.984981,7.836152,-9.636635,9.125613,-9.339561,-8.807925,8.022608,4.098482,-4.634367,-3.586102,-6.057065,-8.747255,5.120696,8.536378,-5.629509,-1.447695,7.775627,6.434038,4.317737,3.113018,7.669272,9.926529,6.053536,3.827938,1.183077,-9.614860,-2.349535,-9.090073,6.473103,-0.837278,8.646890,0.730641,-8.826177,-8.276354,5.399541,0.092202,2.080170,-6.900681,0.946651,-5.317880,1.936837,7.044604,6.914665,-2.891288,3.577684,-1.175330,0.930809,1.541080,1.584948,2.691185,-6.594845,6.963337,5.363850,-3.482431,8.758936,-0.529921,-2.168917,-7.957017,7.569858,-9.617204,9.605995,8.816939,1.767729,-2.879372,5.704481,3.671239,2.630572,8.171399,-9.379343,8.511399,8.495691,0.806254,6.484625,3.455182,-7.537584,-8.437282,9.510132,-1.462778,-4.010426,7.196147,6.211542,6.169937,6.571666,0.778271,9.879453,4.228576,-3.605472,-4.939618,-5.392193,6.714756,5.371447,8.836737,3.319427,3.878995,-2.929572,3.397605,-7.107626,-2.436541,-9.239031,6.622137,2.917762,-3.283558,5.859409,6.820396,-1.296128,-3.027465,-1.634684,-3.463399,-4.996852,-4.786346,-7.274348,-1.372297,-3.867754,-6.881935,-9.904496,-6.378398,-2.544242,-7.214130,3.502638,-8.440786,-3.050079,-3.008314,-2.108009,-9.429811,-7.848707,9.889551,6.917639,6.073154,1.096440,-1.256497,-9.467304,7.671557,6.937696,-1.978607,4.113030,-7.617885,-9.171142,7.615875,-8.827217,5.556747,-9.739783,1.744402,-5.209394,7.727403,3.901863,7.464928,7.744418,-9.872462,-7.790594,5.875091,4.071347,0.159034,-0.655138,-7.903860,3.432133,-6.041237,6.220840,1.078811,-7.128540,3.809147,-9.455343,5.299219,4.296493,-0.649771,3.268581,8.893486,8.964426,-7.803409,0.319271,-5.693681,-1.454912,-0.472628,5.594288,6.446652,9.843668,8.095412,5.040067,3.459137,-4.540414,9.059701,6.517971,5.145749,1.671472,7.113916,-7.418414,5.767726,-9.159701,-0.881620,2.213413,2.104661,-2.117199,-4.372364,-5.310106,-2.114332,9.440868,-4.685468,6.493538,-3.763340,0.747363,1.240003,6.707175,-6.382730,2.655638,6.952756,-6.355362,3.501513,8.456265,-5.428850,8.975638,6.732361,-5.569797,4.342942,3.937002,6.244750,9.900780,-6.594253,7.911645,-0.033713,-6.133455,-8.028219,5.414483,5.793473,6.915618,-5.074549,1.080705,-6.863916,9.314044,2.474901,8.905730,6.318577,5.582154,1.821770,-6.930469,5.187819,-1.054184,5.452854,8.444594,-1.511639,-9.313935,0.271642,-4.867812,-8.735356,-5.089686,-2.118590,-4.812256,-1.707004,-6.549649,-5.943545,-8.656716,5.405967,5.314221,-2.904186,8.342439,-8.695516,0.184364,8.752650,1.001906,5.427108,7.808441,0.487769,3.399004,-0.559693,1.739098,-6.710011,-1.917405,-5.265947,-0.454854,9.816931,-9.683777,3.512423,4.312785,9.799388,-2.412974,-2.813428,9.430391,3.877730,-2.138157,-6.842543,8.215027,7.897785,-1.132479,3.576548,-8.668053,-2.671136,-4.479453,-1.033615,5.263706,-9.114230,-2.337799,3.193594,-9.847419,-3.112307,-7.686398,2.586377,7.471823,-6.414810,-4.919306,-0.427006,-4.722149,6.423224,-2.202514,-5.635863,-7.565649,-8.491165,-0.364015,-8.621220,-9.647123,9.346491,3.745301,-5.563178,3.958917,-8.761656,3.238429,-3.729997,6.707723,-5.453147,9.611384,2.605814,-0.129545,-3.127160,-0.547179,7.724700,5.147235,6.445166,2.138680,9.746556,-1.782213,0.735571,-8.218301,8.845355,0.288853,5.123959,5.882517,-0.319754,-8.227704,-1.822060,8.814351,-1.389547,-0.113597,2.996612,4.790682,-2.743021,-7.796933,5.773289,3.305512,0.604972,0.267865,3.984957,2.309876,-2.073647,-1.429228,-1.532254,-5.527854,-8.182299,1.736874,4.012514,-0.568444,-4.850079,1.069278,8.989715,1.482229,8.435780,3.340417,5.248093,0.027474,2.713775,-2.503347,5.517104,-1.960658,3.715768,-9.527323,-5.900864,-9.170415,1.142361,1.247979,-7.114999,1.618586,8.266274,-1.966547,-9.050894,-5.813723,9.929000,5.460684,9.854365,-3.755373,1.206728,1.755979,2.862747,2.105143,7.536985,5.500328,8.976336,-6.540004,7.991538,2.543052,-3.691839,0.474173,-6.001486,-9.317210,-0.284953,-6.978821,9.693277,-3.001161,1.596915,-0.945991,-2.973584,-7.804914,-2.288358,-6.683684,7.894803,0.447237,5.667984,6.498171,-7.507052,2.748761,-3.065778,-7.148305,-8.982701,-5.181366,-3.405980,-5.221412,-9.748587,-7.632276,8.135668,-3.872828,-9.343953,-3.613559,7.668514,6.662089,-5.011977,-2.030465,-0.470881,-6.284820,8.599772,-3.700292,7.655815,-6.193755,4.376520,2.044526,4.287478,9.402578,9.832341,4.140416,2.943568,-5.218937,-8.580793,-7.127014,-1.818679,3.751008,7.499954,6.740443,-0.342408,-0.473527,3.288338,6.064581,-3.783890,-2.816682,-9.343621,-9.690592,0.660499,9.411791,3.733319,-4.850336,7.394898,-1.933189,-0.974939,6.741248,1.307056,-1.561132,0.800208,-2.124480,9.730675,-8.882159,-7.747829,5.846645,3.798702,5.746646,2.778692,-9.681354,0.464628,5.019310], dtype = "float32")#candidate|1233|(1485,)|const|float32
const_1234 = relay.const(7, dtype = "uint8")#candidate|1234|()|const|uint8
call_1232 = relay.TupleGetItem(func_1079_call(relay.reshape(const_1233.astype('float32'), [11, 15, 9]), relay.reshape(const_1234.astype('uint8'), []), ), 4)
call_1235 = relay.TupleGetItem(func_1083_call(relay.reshape(const_1233.astype('float32'), [11, 15, 9]), relay.reshape(const_1234.astype('uint8'), []), ), 4)
bop_1240 = relay.power(uop_1218.astype('float64'), relay.reshape(var_1207.astype('float64'), relay.shape_of(uop_1218))) # shape=(6, 2, 12)
output = relay.Tuple([uop_1208,call_1232,const_1233,const_1234,bop_1240,])
output2 = relay.Tuple([uop_1208,call_1235,const_1233,const_1234,bop_1240,])
func_1268 = relay.Function([var_1207,], output)
mod['func_1268'] = func_1268
mod = relay.transform.InferType()(mod)
var_1269 = relay.var("var_1269", dtype = "float64", shape = (6, 2, 12))#candidate|1269|(6, 2, 12)|var|float64
output = func_1268(var_1269)
func_1270 = relay.Function([var_1269], output)
mutated_mod['func_1270'] = func_1270
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1438 = relay.const([[[8,-2,-7,-7,-6,-7,3,5,-3,-4,5,-2,-7,4,4,5],[-6,-10,-5,9,-7,10,-4,-2,3,-6,3,9,-4,9,9,-10],[3,7,9,3,-4,8,10,-7,-7,1,-2,-3,5,4,5,8],[-8,-8,-3,-2,4,5,9,8,8,7,2,-8,-9,-1,-10,4],[6,-2,-3,-5,4,4,5,-1,-1,-3,-8,10,-3,4,1,-1],[2,-5,-10,5,-2,7,-8,8,-9,-2,2,-6,10,10,10,8],[7,-6,-6,10,7,-5,8,-4,-6,3,6,-5,-9,-10,10,-8],[3,-3,4,-9,3,-6,7,9,6,-3,1,-3,-7,-1,2,6],[-3,6,-4,-8,9,9,4,1,-10,-4,-4,-3,-9,10,4,-7],[-4,-4,-8,-5,-8,2,10,4,10,1,5,7,-8,5,2,9],[-5,-4,7,1,-4,9,-8,6,-1,4,-2,-9,-9,-10,-6,-6],[-2,-5,4,6,9,-5,-10,-5,-9,8,1,10,10,8,1,-7],[8,3,8,-1,-9,-3,7,-10,8,-6,5,-6,9,1,2,4],[1,-2,-9,5,-9,-6,8,-1,-6,-7,6,-6,-9,-5,-6,-1],[-8,-6,-5,-4,-1,9,8,10,-10,5,-10,10,-9,-8,-6,1]],[[-1,-1,-10,-1,7,4,3,-1,1,-8,8,-10,-5,-1,-9,-4],[-1,-9,2,-6,1,6,6,-6,5,7,1,10,10,-6,-6,-9],[7,-10,9,8,7,-3,-1,-9,-4,10,6,1,3,-4,2,-8],[3,-6,5,2,7,-5,6,-3,-2,6,-4,3,8,6,5,9],[-3,10,-8,-10,-10,1,8,-8,10,-8,5,-2,1,3,4,-3],[6,7,-8,8,1,-5,5,9,1,10,1,9,1,-9,1,-4],[-5,-10,9,2,7,-10,3,10,9,8,-3,1,8,-1,-1,-7],[-7,1,6,5,-3,8,4,-9,-1,2,-5,-7,4,1,4,-6],[-6,-6,-2,-6,8,8,5,5,-4,7,4,2,4,5,-3,1],[-8,2,10,3,-1,9,8,-1,3,-4,3,-4,1,-7,8,4],[4,4,-1,1,-9,9,4,-2,7,3,3,-9,5,-9,-3,-9],[-6,-3,1,2,-4,-7,-10,-7,-6,8,-8,-4,-4,-7,3,-6],[-2,-7,-4,-5,9,-9,3,-7,-6,10,2,6,6,-3,-3,9],[1,-8,-4,-5,7,1,10,10,-3,-8,2,-2,-1,-7,-5,10],[2,-1,3,9,-10,9,-10,-3,-7,9,9,10,-6,6,5,7]],[[6,-6,-2,8,-9,1,5,-4,7,6,7,-7,6,4,9,-1],[-9,-3,-5,-4,-9,-4,9,1,-3,5,4,3,-5,-1,10,9],[-10,10,-5,-10,9,3,3,-7,2,6,-2,-5,-8,1,-10,-9],[3,8,4,-4,-3,3,10,2,-2,7,-9,-2,1,-7,4,-3],[-5,-4,-8,-4,-7,7,-8,1,-7,-3,1,3,9,-2,6,-9],[-6,-2,3,-7,4,10,-3,2,-9,4,10,-3,7,-3,1,-6],[7,5,-1,-2,8,-6,3,1,-3,-4,-4,4,-2,-6,9,4],[-9,5,1,6,-7,10,-10,-4,8,8,4,-7,8,-3,-7,-2],[6,-6,-5,8,-7,-4,1,-2,7,-3,3,-9,-3,-10,9,-7],[-1,4,7,10,10,1,-1,10,-2,-8,3,5,-2,-6,-7,8],[8,-4,1,7,7,5,-10,7,-8,-4,-4,8,-4,-7,-9,-10],[6,-10,-7,10,-6,3,10,5,-5,-10,9,-5,2,5,8,8],[9,-10,-4,2,5,-5,3,2,10,9,8,4,7,-1,5,8],[7,2,-8,3,-8,-8,-8,-1,2,10,3,10,-3,4,2,2],[9,3,8,5,-2,-7,3,1,-7,5,-4,9,-8,5,-6,-1]],[[1,-6,-10,5,4,-4,-1,2,3,9,2,5,2,2,-7,4],[-7,-8,-9,-10,-6,-10,7,-6,-1,10,-2,5,-4,-1,2,-10],[-6,-7,-3,10,9,-6,-3,-9,-7,8,-5,-3,-10,10,2,2],[-10,4,5,-3,-3,-1,3,-1,-10,-2,-1,-3,-1,-4,5,-2],[-6,10,-10,6,-4,-2,-8,9,-3,2,-8,-7,-10,-4,9,-1],[4,-6,4,2,8,7,8,-5,-9,-4,-2,7,-2,-6,-9,-3],[6,-9,-1,10,-4,5,-3,2,-7,-10,-7,-2,10,-7,-5,-1],[-2,-3,1,4,8,-7,10,-6,6,-8,3,-10,-8,-1,1,-3],[-4,8,10,9,9,-3,-5,-10,5,2,7,-2,-10,7,-4,-2],[9,-4,-2,-10,-8,2,2,-4,9,4,9,3,8,9,-2,-2],[3,-3,8,-5,-6,2,10,-4,4,-7,3,-10,-1,5,-2,-8],[3,-7,5,-9,-1,-9,-1,-2,-1,7,10,-5,8,6,-8,-4],[-6,-2,-5,1,4,-8,1,9,8,5,5,1,-3,5,5,-10],[10,-1,-5,-2,-2,-5,10,-4,1,-8,-3,-2,-8,-6,6,-4],[-10,-3,9,7,6,4,-7,2,-10,-6,1,-9,-7,-2,1,-1]],[[-4,9,10,3,-7,9,7,-3,4,-2,-1,4,4,-5,5,-9],[10,10,-3,5,-2,-5,8,10,1,-8,2,2,-9,2,-3,-3],[-6,-3,8,8,-2,2,3,3,3,8,-5,-1,9,10,-4,-5],[6,9,3,5,-4,-7,-9,3,-4,-5,-3,-5,10,4,-6,4],[6,7,5,-7,9,6,-6,9,-9,-1,1,-5,-9,4,-8,1],[-4,-7,10,-7,-10,6,3,-10,-10,-5,6,1,-8,3,3,-4],[-10,-7,-5,-1,9,-2,3,-5,10,-5,1,-2,-10,7,-8,-4],[1,3,8,-10,-1,9,4,-10,-5,3,-10,-5,1,-6,2,-1],[1,-1,-8,-8,-5,5,-3,6,-10,2,-5,10,8,8,8,-4],[-5,-10,6,-4,-4,-10,3,-5,-6,-3,-3,-10,-1,-10,10,-7],[-1,-8,4,-9,10,-7,7,8,-8,-6,-5,1,-7,-4,7,1],[-10,-6,-2,7,4,9,-8,5,-9,7,7,4,9,10,1,7],[-4,-10,-7,10,-2,3,5,4,-10,2,8,-1,3,-6,-5,-8],[3,-5,4,4,-4,6,4,7,-2,1,-4,9,-6,-4,6,-1],[-1,-1,-4,10,1,-9,-5,-1,7,7,6,1,-10,4,6,-7]],[[4,1,-3,5,-9,1,3,1,3,1,5,-3,6,1,5,-8],[-7,4,-2,-6,-3,4,-8,-6,-4,-2,9,-2,-5,9,-2,-8],[6,9,-10,8,3,-1,-9,-3,6,-2,3,1,10,9,-5,-8],[-8,10,1,3,-3,4,1,-5,-5,1,-4,9,10,-3,-4,9],[-10,-9,-8,5,-7,3,10,-3,8,4,-6,-5,10,3,-9,-3],[-1,9,5,3,7,-9,8,2,8,8,-9,-2,1,3,8,-10],[-10,-10,-5,6,1,-8,9,-6,6,-1,-9,3,8,1,-2,7],[-9,7,-2,-7,10,3,-5,-6,-3,3,-2,3,4,8,-4,-8],[-1,-9,9,5,1,-1,-7,7,-6,3,9,-7,-9,-1,-9,-5],[5,3,-2,-5,8,-1,-5,-8,-1,8,-8,-4,-2,-1,-3,3],[-2,6,-7,-1,9,4,10,-4,3,-10,-8,10,-9,-3,7,2],[2,-7,9,6,10,3,-1,1,-10,7,-5,-10,-9,-9,-6,-8],[-9,7,-3,-9,2,2,-8,9,6,-5,-4,7,5,10,7,10],[-4,-7,10,9,7,-5,-4,10,-10,-1,8,-8,6,-4,9,-10],[-1,-2,-4,-2,2,-3,-2,6,-7,-8,7,-8,5,7,-6,-9]],[[-5,-7,-1,9,6,2,4,-2,7,6,8,-8,-7,-9,3,1],[10,-8,-7,-6,8,1,-8,-2,4,10,5,-5,4,-7,-3,-4],[8,-3,8,8,-9,-7,-3,-3,-9,9,2,8,7,10,6,2],[-5,-9,-8,8,-7,6,6,-8,-2,-10,-10,-8,-4,8,6,3],[5,-6,-10,-10,-9,-6,-6,9,1,2,-8,10,-1,-1,8,-10],[-8,8,9,5,-6,3,5,-2,1,-8,4,-8,-8,-4,5,-1],[-8,-8,-9,-7,4,-7,-9,-5,-2,-9,5,-5,-6,-9,-3,-1],[1,10,-4,5,4,-9,2,5,-9,2,10,8,6,-7,10,-8],[1,9,4,5,5,-10,10,-2,-8,4,2,5,9,-5,-2,-10],[-2,10,4,-1,-1,-9,-6,1,-5,-3,-7,3,10,9,-2,7],[-1,-9,4,5,2,-8,4,4,4,-4,-6,1,8,2,-10,-5],[7,5,5,9,-5,-8,6,-6,-9,-5,1,5,-7,-1,-5,7],[10,3,3,3,-9,-9,-2,9,-7,-10,-2,10,-9,8,5,8],[-9,-3,3,2,-8,10,6,-3,4,5,-6,7,4,-3,-1,8],[-10,-2,-8,8,5,-8,-7,-6,-4,-1,6,10,-1,10,-2,2]],[[9,8,8,5,-3,-6,4,5,3,-10,2,-8,3,-7,-8,8],[2,-7,1,4,5,-6,2,-6,-7,-5,-8,-4,-2,-5,-9,-8],[-10,-1,-6,-7,-5,-9,4,1,4,2,8,3,6,-10,3,-4],[-2,-4,-10,-9,-3,1,6,1,-9,-1,7,-6,-4,-8,6,-9],[-8,9,1,-2,-8,2,-6,-3,-5,3,2,7,-8,2,8,2],[-2,4,9,-8,1,-1,4,-4,-2,-3,6,10,-4,8,2,7],[-1,9,-7,8,-10,8,7,-5,9,-3,7,-1,-6,2,-10,-3],[-10,-2,-3,8,3,9,6,-9,9,1,5,-8,10,-10,1,-3],[10,-9,-10,-6,10,1,9,-2,3,-6,-7,1,6,-10,-7,-7],[10,7,10,-3,1,8,-5,10,-6,-8,3,-10,1,6,-3,-2],[-7,-3,6,-1,1,7,-2,3,5,2,-1,7,-4,-9,-5,2],[-1,1,2,-4,-1,-8,-10,-4,-2,-7,1,-4,-8,-4,5,-5],[4,4,9,-8,9,-5,8,-7,8,-7,7,-5,-6,8,-4,6],[10,-3,-7,9,-10,-8,6,1,9,-2,-9,3,-6,7,-5,-10],[-2,-2,-6,7,-5,-4,-8,4,5,8,-5,-1,2,-2,10,2]],[[5,-1,4,8,-2,-2,-9,10,6,-10,-8,1,9,-7,-5,3],[10,2,-3,-7,3,5,-8,8,2,-5,10,-8,-1,-8,-3,-6],[-6,-1,9,1,-7,-3,-1,9,10,-4,3,-7,-9,1,-7,-7],[7,1,-3,-7,-9,5,3,3,-9,-4,-9,9,8,-9,10,8],[-3,-5,-1,7,5,10,-6,-3,-2,-9,8,10,-9,10,7,7],[9,4,-4,-10,3,-9,4,3,-9,-8,10,2,7,7,2,-3],[5,8,10,-8,-7,9,-9,9,5,-4,5,4,-9,-7,-6,1],[8,3,-7,-1,8,-8,-4,-6,4,6,7,1,-5,-9,9,-4],[-9,-6,-8,3,-7,-4,9,2,3,5,7,7,6,-3,-6,-3],[4,1,6,-9,-6,6,4,-1,5,8,-1,4,-1,-2,5,-9],[-7,-2,-6,-8,3,-10,-3,5,-6,-1,-8,-6,-3,-5,6,-9],[6,-5,-2,7,-10,-6,7,-2,4,1,8,10,-6,10,-1,-4],[-10,-1,6,10,4,-1,-7,5,-6,-1,4,4,8,-3,-2,-8],[-7,-7,-9,-7,4,4,-10,-3,7,-1,-7,2,-10,6,1,-6],[-5,1,1,4,7,9,9,4,-5,-7,-1,-10,4,-4,-10,-5]],[[-5,-8,6,4,-2,-1,-4,-8,-1,3,-6,4,9,-6,8,3],[-10,2,4,9,2,8,-6,-6,5,-8,4,-10,-10,1,2,5],[-6,-7,-4,8,-8,-1,5,9,9,-1,-3,-6,-1,-3,5,-4],[5,-3,10,5,8,-2,3,4,-1,7,-8,-7,1,2,9,7],[1,-3,1,-1,-3,-5,4,-10,-6,1,7,-5,-9,4,-4,2],[-1,8,-2,-3,2,3,7,1,8,7,9,6,10,-5,-3,2],[3,-7,9,-2,-8,-6,-8,-8,8,-6,9,6,3,4,10,3],[-5,10,2,6,-9,-7,-1,5,-2,8,-4,1,-8,5,-10,-1],[9,-3,-5,3,3,-3,6,-8,1,-2,-10,10,9,-6,-4,-5],[8,3,7,7,7,8,10,-4,2,5,8,-2,1,-7,4,-7],[10,-8,-10,-10,-7,-10,2,9,9,-6,9,5,5,-6,-4,3],[-7,-2,8,-3,8,-3,7,-6,5,-5,-9,4,-4,5,5,3],[-1,-8,7,-5,7,7,1,2,5,-8,-2,10,-5,4,-3,4],[2,-2,-5,3,-4,-8,6,-10,-9,-5,3,5,-10,-1,-7,-6],[9,7,-4,8,3,-4,-5,-9,-3,3,4,7,8,7,-3,4]],[[3,-7,-2,-7,-8,5,5,6,-10,7,9,-8,-10,-4,-9,4],[-2,1,6,10,-8,7,-8,-5,-6,-4,6,3,10,10,8,3],[7,-5,-1,6,9,-7,8,9,4,-8,7,8,-1,-7,4,-10],[-6,-1,9,8,-3,-4,7,-7,-7,3,10,-3,10,1,-2,3],[7,4,-5,3,7,1,3,7,6,-7,-1,-7,-10,5,3,-1],[3,-8,8,-8,-1,3,10,-5,9,-1,10,-3,8,4,7,-2],[1,-1,-1,7,8,5,9,-4,-2,1,3,-6,-4,-2,8,-1],[4,-9,9,-7,4,-6,-4,1,5,9,6,1,-8,10,9,-4],[-1,7,6,8,-6,5,5,5,8,10,-3,-5,-5,6,4,6],[2,-7,7,-10,-2,-4,-1,-8,7,4,-10,1,-3,9,7,-5],[1,9,1,-5,-6,-3,8,-7,-1,4,-9,-7,10,-2,-1,7],[-2,2,-8,8,5,-3,3,7,1,5,6,2,6,-2,4,-3],[-6,8,1,9,7,1,2,-2,-1,2,-7,-3,10,-3,7,-9],[-10,-8,-4,1,9,-1,-1,-3,-10,-10,-1,3,8,-6,-2,9],[-5,-7,6,-10,9,7,4,10,6,2,-3,-9,-3,-8,-1,8]],[[-6,4,-2,-8,-8,9,-4,8,1,7,9,4,10,-6,9,-6],[-9,-6,9,-2,-8,10,3,3,-2,-5,6,-10,3,5,9,8],[4,-1,-9,-9,-7,10,9,-4,-6,9,-10,8,6,-7,7,-5],[1,-3,2,-9,10,-8,5,-9,1,-2,-8,6,4,-1,9,1],[5,-2,5,-7,-1,4,-7,6,1,-2,-8,5,2,-2,-5,4],[-6,-6,-6,-6,7,2,2,-5,3,4,-8,3,8,-4,10,-10],[2,7,-10,-6,2,-5,3,-9,-9,-10,-3,-6,10,-3,-8,7],[10,10,9,-9,4,-7,-3,-5,-1,-9,6,7,-5,-6,-5,5],[-9,7,2,2,9,-3,8,-9,1,-5,-3,-4,-5,5,5,5],[-4,-3,10,2,-7,-4,-3,5,-10,2,7,6,-8,1,-9,-9],[-1,-9,10,-10,6,-3,6,-2,10,-2,10,6,6,-1,-8,-8],[-5,-9,8,-3,5,3,3,10,9,-8,-9,-9,6,2,2,-2],[-8,-3,10,3,1,-9,-3,-6,2,-3,2,7,-4,9,-8,-7],[2,3,6,-1,3,-1,-8,9,5,-2,8,3,6,-9,5,-9],[6,2,9,8,1,6,-8,-1,1,-8,-3,-10,-4,-3,7,-7]],[[7,4,1,6,1,3,-9,2,10,-10,2,-1,-10,-7,-10,7],[-4,-1,-3,6,1,5,6,1,-9,10,-10,2,-7,7,3,-5],[5,1,5,3,-1,-5,8,-4,6,10,4,5,3,9,6,-5],[1,8,-7,9,9,-4,9,-4,9,10,10,-5,7,-8,-7,3],[-1,4,-4,-4,9,10,6,-3,-9,-6,-10,1,4,-10,2,-1],[-6,1,-9,3,-4,6,-6,-5,-3,4,-4,3,-4,-1,8,-1],[8,-6,-8,-7,-9,-4,-3,10,10,1,10,-1,9,-3,5,-3],[6,2,-6,8,-3,2,1,-3,-7,4,8,-4,-9,-4,-8,9],[-6,-2,1,8,4,9,-2,-6,-9,-8,6,-4,6,-7,-6,-10],[7,-5,-2,2,2,1,6,-3,-6,1,-3,-6,6,-5,10,-7],[7,-9,4,7,5,-10,-3,-7,5,10,-7,-9,10,7,1,-10],[3,-9,1,3,-2,-8,-5,4,4,-10,-2,4,-4,3,3,4],[-3,5,9,-9,-2,-7,-3,-8,7,-8,8,-1,10,-8,7,1],[4,-3,7,-5,-10,-5,-3,2,1,-9,9,-1,-3,-4,-10,-2],[4,-9,-9,7,5,4,4,-6,-3,6,-4,-3,-6,9,3,-2]]], dtype = "uint64")#candidate|1438|(13, 15, 16)|const|uint64
const_1439 = relay.const([[[3,-5,3,10,-3,8,-5,-2,-9,-3,10,3,-9,1,-3,7],[-4,-2,10,-2,-1,1,-5,7,9,8,3,-7,-2,-4,5,3],[-6,8,-9,1,3,7,6,-9,-6,-6,10,3,10,-9,9,-6],[-8,-2,-5,6,6,5,9,-9,-2,-8,-6,6,-8,-3,-8,-5],[3,3,2,-5,7,2,-3,3,-4,10,3,8,-1,-10,9,-7],[-5,-10,2,-7,5,-4,-8,6,9,-4,1,6,2,-3,3,3],[2,5,9,2,-1,4,5,-3,-5,-9,-8,10,-2,3,5,-1],[7,3,-10,-2,3,-2,6,-7,2,-9,2,2,-4,-7,-1,8],[-8,6,7,-1,-1,-9,8,-10,-3,-1,-8,-6,8,-1,-4,8],[1,-10,-9,-9,3,9,-5,2,-8,2,5,-6,3,-3,8,9],[-5,-8,-3,7,4,-9,-7,-6,3,-8,-5,-3,-2,5,10,-9],[-6,-1,3,-5,6,-5,-3,5,-8,6,7,-2,-8,1,3,-4],[9,8,-3,-9,4,-1,9,-5,-9,2,2,7,3,7,9,6],[7,10,-6,-1,6,-9,8,-2,5,-4,-10,-7,10,10,7,9],[-2,6,-9,8,8,2,1,4,-10,3,1,4,3,-5,1,-6]],[[3,3,-6,-1,10,10,-7,-9,5,8,3,-1,5,-9,-8,-1],[5,-4,9,-7,7,2,4,-3,-7,-6,3,7,1,-4,8,-1],[3,6,-1,3,-2,3,8,8,-9,4,-2,-9,6,6,-1,1],[-2,-6,-1,10,5,1,3,9,-6,3,-5,-2,8,-8,-5,-4],[7,-2,10,2,-7,-9,4,4,2,-7,2,1,-1,10,10,-5],[-6,3,-8,1,2,8,9,-8,-9,-1,8,10,3,-5,6,7],[-4,-7,-7,-8,10,7,-5,-2,1,5,5,7,7,-10,2,4],[8,-6,4,6,-9,-5,9,1,1,9,3,-6,10,5,3,-5],[3,-10,7,-10,2,-1,5,10,7,-5,-9,-3,7,10,7,5],[-9,6,-2,2,-4,-4,4,6,-7,-4,-10,-7,4,10,-5,1],[1,-9,6,8,6,-8,10,-6,4,3,-8,2,-8,-3,-9,-6],[-4,7,10,-1,-7,-9,-4,6,-6,2,9,-3,-10,1,-5,-2],[-4,8,-4,10,-9,-10,5,-10,5,2,8,3,6,-7,-1,-7],[-8,8,-5,5,9,-6,1,5,8,2,-5,-1,-8,-9,7,-5],[4,-9,4,-2,9,-7,-1,-8,10,-4,4,-3,4,-3,-1,-8]],[[-2,1,-10,8,10,-4,8,2,10,2,-1,-8,10,-6,10,3],[10,7,-8,3,-2,10,9,-9,-8,-4,-7,-2,2,7,3,-3],[5,-4,8,-10,-4,-2,4,1,4,9,-6,10,10,-1,9,-5],[-5,-9,8,-3,2,7,-9,-6,-4,6,-9,-9,6,-1,3,1],[-6,-10,10,9,9,7,-4,2,-1,9,7,-6,-9,9,-4,-1],[1,-7,3,4,-1,1,-6,-5,-9,7,-4,10,2,7,-2,-8],[-10,-5,-2,6,-1,-1,7,-6,-10,-4,-7,-10,-4,7,-5,-8],[-2,9,-3,9,9,-1,-6,3,-9,2,3,-5,9,4,6,1],[6,-6,-3,1,5,-10,-8,-8,-2,-10,-2,-2,6,-7,10,4],[7,3,5,4,5,-10,7,-9,-8,-3,-6,3,3,-8,-9,-8],[-2,-8,4,-6,8,-3,6,5,3,-6,7,4,-1,-4,5,-9],[-3,-4,3,-8,-8,7,5,7,3,8,5,1,-4,-6,-5,8],[4,-4,3,-7,3,6,7,7,-9,2,-8,-9,8,-5,-2,10],[6,2,-8,-4,-2,-10,-4,-1,-3,-6,-5,-7,-2,-5,-5,10],[-1,-5,-1,9,-7,-4,-5,3,-9,-10,6,9,-10,-2,-1,8]],[[-5,8,-2,-1,7,2,-2,1,6,8,-9,-9,1,-3,6,-4],[-6,8,1,-9,-5,-10,7,-8,3,8,3,10,-1,-4,-6,-7],[-1,10,-4,-10,-1,-6,2,-5,2,-6,1,6,-10,-6,-1,9],[-9,7,10,-4,10,1,-6,8,8,-2,1,-8,2,-7,10,-6],[7,-4,-3,-9,-8,4,5,-1,-5,1,-1,-6,4,6,1,2],[-7,6,5,-2,6,-7,7,3,1,9,2,6,1,9,-6,-2],[7,5,-3,-5,1,9,9,2,-5,-1,8,-10,-1,-1,-2,-2],[-10,3,1,2,9,4,5,-6,-8,-5,6,5,6,6,8,-7],[4,2,7,9,-9,-1,-8,-3,8,3,5,3,6,9,7,2],[7,7,10,-9,-9,-3,1,-3,6,-3,4,4,5,-3,1,-6],[-9,-4,8,-10,-8,-4,-9,-8,-1,-5,6,6,-3,6,4,4],[-4,4,4,9,-7,10,7,10,-8,-4,4,-8,1,-1,-5,-10],[-5,-10,-10,-10,-1,-4,8,-8,-1,-1,-4,-4,-4,-10,1,-7],[-6,-5,8,-5,8,7,5,2,-8,3,-5,-7,-1,5,10,-6],[3,-5,7,-9,-9,-10,-2,4,-9,-1,3,1,-8,-6,2,-5]],[[5,5,-9,-8,-9,-7,-5,10,-6,-8,3,-3,-10,1,4,7],[5,-1,4,-5,10,-5,-2,8,-10,-9,8,3,-2,9,10,5],[-8,2,-8,7,10,10,1,-10,-4,3,2,9,-2,-9,-4,10],[1,-4,-2,6,6,-5,-5,9,5,-1,-10,8,9,-4,2,-5],[-7,-1,-3,-2,4,-8,-2,8,9,-2,-2,-10,-10,3,8,4],[-10,-6,-3,-4,4,5,10,-1,5,-9,6,7,4,7,-10,9],[7,3,-4,10,-10,3,-10,-3,10,1,1,-1,8,9,10,-7],[5,-8,8,6,4,-10,-6,1,-2,3,2,2,-3,-9,-1,9],[-6,-7,-6,2,6,4,4,-9,10,4,7,2,-7,4,-7,5],[1,-10,7,-9,-6,5,10,8,8,-10,6,-7,-2,10,-6,-3],[-7,6,-4,6,-9,10,7,-9,-10,1,2,-8,1,-4,-2,-1],[-9,-2,-1,-5,-9,10,-4,2,10,1,-1,8,6,-6,8,-5],[6,2,-6,-10,3,-3,-10,3,6,2,3,-9,2,5,-5,-9],[-8,2,9,8,-1,10,-6,1,-7,9,-3,-6,4,-6,-2,3],[5,3,-7,-5,2,2,-10,-9,-6,-6,-7,-5,-8,3,6,-9]],[[1,-5,4,9,-7,3,-1,-6,-1,7,9,-10,-3,-6,-8,9],[8,8,-4,-8,-5,10,-3,5,9,1,-6,-2,1,7,2,9],[-8,1,-3,4,-8,-5,9,5,4,3,-5,6,-2,7,8,5],[2,-9,3,-2,8,-1,9,-4,-10,-10,3,-2,10,-10,-3,6],[8,-10,-9,-1,-2,-3,-8,2,3,4,-10,10,6,-8,-4,8],[-8,-5,3,-3,10,-7,-2,-8,-3,-10,1,-2,-1,-9,3,-10],[-6,-1,1,-5,1,-1,1,7,-4,-6,8,-3,8,-5,-9,-5],[10,-3,1,3,-10,-4,-4,6,7,-4,-1,3,10,2,5,-4],[3,-7,7,-6,-4,1,-1,-5,-10,5,-7,1,-8,-7,-2,7],[2,2,2,8,8,4,-6,-10,-10,-8,-3,4,-1,4,4,9],[-3,-5,10,-3,-5,-10,5,-7,-4,2,3,-1,-7,-10,-6,6],[1,-6,-9,9,-5,-4,8,-7,-6,4,-5,6,7,2,6,-5],[-3,5,-10,-3,3,7,-9,-8,3,8,4,-9,-1,-6,-3,3],[-2,8,-3,8,8,-9,-10,-6,6,1,10,-3,-3,8,-8,1],[-9,3,-10,10,-6,9,-8,1,8,6,-3,9,-5,-1,-5,-6]],[[-1,-6,10,1,5,-4,-4,6,10,-10,-10,1,3,2,-6,2],[-5,-10,-4,-1,-8,3,3,-6,1,7,4,-9,-2,6,-7,-5],[7,-7,6,-2,-6,-8,6,1,-9,-1,6,1,8,6,-8,-10],[-6,-7,-7,-7,-6,2,-9,9,1,3,7,3,-3,-3,-2,5],[-9,10,-3,-9,-4,-3,3,-4,-2,-10,-3,6,-4,7,1,-3],[6,10,-2,10,-9,-10,-5,-7,-1,5,1,-10,-2,2,8,-6],[1,-4,5,1,-7,8,-5,-8,-3,-10,4,-3,6,-10,3,9],[-3,8,-8,-4,10,-8,9,3,7,-8,5,7,-7,6,-2,5],[-9,-3,-2,4,9,8,6,-9,7,3,-9,3,-7,5,3,7],[2,9,-7,7,4,5,1,2,3,9,-8,-5,9,-6,-9,4],[-3,7,-7,9,4,-1,7,-2,-1,-2,1,-7,7,-5,-6,-10],[-4,-2,-3,-2,2,9,-7,2,10,-10,-1,-5,10,-5,-1,-7],[3,-5,8,-1,-1,2,3,-5,-9,-6,-1,9,3,8,-10,-8],[-4,-9,-2,-5,-3,8,-4,-9,-9,-1,7,2,3,-3,-6,-8],[-6,5,7,1,-8,8,-6,-4,3,5,-5,-10,-8,-3,-6,7]],[[8,-1,1,-7,-1,-2,1,1,-9,-3,-7,5,8,2,-1,-7],[8,-3,8,-1,-4,-7,6,6,8,2,-4,1,-6,-5,9,-7],[-8,9,2,-8,-10,1,4,-1,-7,-6,-1,3,7,8,10,6],[-6,3,-2,4,5,-7,-3,1,-3,-2,-3,6,3,-9,-7,-10],[-7,-1,-5,10,10,-10,8,-4,-8,7,-1,3,-7,6,5,-7],[8,-3,4,-4,-3,-9,6,3,-8,-5,-3,3,-1,4,-7,-10],[10,10,7,10,6,10,-1,-8,-3,-9,3,6,3,2,10,4],[3,6,8,9,-5,8,2,-4,8,3,7,5,-9,9,9,1],[-9,-4,-3,3,-4,4,6,2,3,-5,-5,10,7,5,-7,8],[7,3,6,10,6,9,1,-5,-7,5,-3,7,-6,-6,3,9],[7,-10,7,-5,3,4,-5,10,-1,5,-2,4,7,9,7,9],[-9,8,-8,-10,9,5,-4,10,-10,9,-9,7,4,-5,-5,6],[-3,1,-9,2,-4,-6,2,4,-10,1,6,5,-8,-3,-7,9],[3,-3,1,-4,2,5,-3,5,4,3,6,1,8,-6,-1,5],[5,8,-5,2,10,1,-6,9,2,9,-9,9,4,-2,-10,-9]],[[-9,10,-9,1,-10,7,9,-8,-9,7,9,7,5,8,-10,-10],[-6,-3,1,-4,-4,-8,8,-4,-3,5,8,3,3,9,-8,2],[-7,9,-9,-10,-6,6,2,-1,10,7,1,-3,1,10,1,5],[9,8,9,-10,4,-10,-5,-3,10,7,8,-6,2,-2,7,8],[1,3,4,8,-9,-6,3,1,7,-3,-6,8,4,-10,5,-9],[6,10,-3,-7,1,7,3,5,6,7,-10,1,-2,7,8,8],[5,-3,-8,-1,8,-3,5,-2,-8,2,-3,2,-3,7,-4,-7],[-4,-1,3,-1,1,-1,-4,7,2,-1,-4,4,-3,-9,5,10],[-6,-2,-3,1,9,-10,7,-6,-9,-7,2,-8,-10,4,5,-5],[-2,-2,-3,9,-9,6,6,-6,-1,-8,4,-7,-5,2,-2,-2],[5,9,9,10,7,-5,-8,-10,3,1,5,4,9,-1,4,-5],[-7,8,4,-7,6,6,2,4,-3,3,-2,-8,-4,2,-2,6],[3,9,-4,8,6,-3,-1,4,-1,-10,5,-4,6,-4,2,8],[-5,-3,-3,10,-7,6,9,10,6,-3,-9,-7,-2,5,-4,-7],[10,-10,3,2,3,7,-7,-4,-8,-3,5,-4,-2,10,2,7]],[[-9,6,-8,-1,-8,7,-5,8,9,2,1,2,7,-3,1,-4],[10,-2,10,-1,2,-2,10,-10,-1,-4,10,-10,-10,-5,-5,-1],[1,-5,-7,-7,-6,-5,1,5,10,8,7,-5,3,8,-1,4],[2,-2,6,9,-10,-8,10,7,-3,7,5,7,-6,-9,-1,8],[2,4,9,10,8,4,-1,7,8,-4,-10,4,-3,2,5,9],[1,-5,-9,-2,5,6,-9,-10,10,1,-2,-5,-5,10,10,7],[-5,2,9,2,3,10,2,10,-3,-10,-5,1,-6,2,-2,-7],[-1,-2,4,6,1,-9,7,3,-10,6,-1,-7,-8,1,8,-9],[-7,-3,5,10,7,-9,1,-4,-6,-8,7,-4,-6,5,4,-7],[4,-6,1,-5,7,3,-5,-1,-5,-1,-8,-7,1,10,-5,10],[9,8,-2,-6,-6,-7,6,-3,-8,-5,-1,-1,-4,10,10,-1],[-8,6,-4,8,-3,-1,6,-10,-10,1,7,4,4,3,5,-4],[-6,4,-7,10,-9,7,-6,-10,-1,-8,4,10,-7,6,10,7],[-2,-6,3,-7,6,10,2,-8,2,1,-7,7,-7,-6,-3,-3],[-3,-2,-2,1,-4,9,10,10,1,-9,4,2,9,8,-10,6]],[[9,-10,-8,10,9,-9,7,4,-3,-6,-8,-8,-6,-8,-7,-10],[2,-9,8,-4,7,9,-5,1,5,-4,-6,10,1,10,2,-6],[9,-5,-3,5,2,-5,6,-2,-3,-4,1,5,-3,1,5,8],[-1,1,1,5,10,10,-5,-7,-1,1,4,-3,1,10,1,9],[2,9,8,9,-5,-3,1,3,10,5,10,-1,-2,-8,-1,-9],[9,-8,-2,-6,-6,-9,9,-1,6,3,6,8,6,-2,-4,-2],[9,-1,-9,-7,-6,-3,6,3,2,7,-9,7,-2,-4,10,-1],[-10,-9,1,-5,2,-3,-6,10,2,7,4,-9,-2,5,3,-10],[-10,1,7,-10,5,-7,10,10,-5,-5,10,-7,1,4,-10,6],[-7,3,4,-1,9,-2,5,2,9,-3,5,1,2,9,-2,-1],[-3,-3,10,-6,1,-9,-9,10,-10,5,3,-1,-1,-6,-7,-4],[-3,-7,-10,-3,10,9,5,-7,2,-10,8,-1,-6,-6,6,-5],[-4,4,-7,4,1,7,5,-10,-8,4,-4,6,2,4,1,-6],[2,-8,-7,6,-10,-3,-9,-3,-5,-2,4,2,-2,-3,-4,10],[9,4,-2,5,5,4,2,8,6,8,-2,5,7,-8,7,8]],[[6,5,4,8,7,-1,3,6,-3,-7,-7,8,-10,-6,4,6],[-5,10,8,-9,1,-6,1,-4,-8,-7,5,10,4,6,-7,-2],[3,4,-7,8,2,4,6,8,-9,1,-2,1,7,8,8,-8],[9,4,-6,-5,6,4,7,8,-6,-2,-9,8,8,2,3,9],[-6,7,-5,2,4,-5,-7,7,-1,-4,1,8,6,-7,2,1],[1,9,2,1,-7,-7,9,-8,2,-3,-3,-4,3,-2,-1,2],[-2,-10,-2,10,-7,-2,10,7,3,7,-2,-7,-4,1,-1,-7],[-6,7,10,-7,-2,-3,2,-6,-1,1,2,2,6,-1,-6,9],[-7,-2,-4,4,-2,10,-9,7,9,-7,7,-9,3,-9,8,1],[-6,2,3,-10,5,9,8,5,-7,8,-4,-6,-5,-5,4,-10],[-10,4,8,-10,-4,6,6,-7,8,6,2,-6,-6,-2,7,-5],[-4,-2,-1,-7,3,8,9,-4,-1,-8,2,-2,6,-1,7,2],[4,-6,-8,3,8,-1,-7,1,-7,2,4,-8,-9,-3,-6,10],[1,-7,10,-8,-9,3,-8,-3,3,2,1,-8,-10,9,-6,-6],[-4,3,10,10,4,7,-8,-7,-8,-10,1,-1,9,-5,-6,1]],[[3,-4,7,4,9,-5,2,10,1,10,10,-2,-1,3,9,9],[-7,-7,-9,8,-2,5,-5,7,6,9,-9,2,-10,-7,-6,1],[9,8,10,-6,-8,-8,5,-10,-5,7,-10,3,-4,10,-9,5],[-10,-8,10,-3,-4,-3,8,-1,4,6,7,-5,4,-10,6,-2],[10,-5,5,-1,10,-1,-9,9,10,-7,-7,-7,8,3,-5,-10],[-7,7,4,-5,2,-3,8,-4,9,5,-6,6,-10,-5,6,-9],[-10,-6,-4,9,7,-9,-5,-3,-6,2,-1,-3,-7,-5,6,7],[8,-2,-4,-10,-6,8,-2,8,1,10,-8,4,-5,-8,3,-9],[-9,-5,6,8,2,3,-10,4,1,-5,8,4,-8,-4,-10,-2],[-8,5,-2,-5,-10,-10,1,2,-5,3,-6,-7,-3,-5,-4,3],[-4,7,3,10,-2,4,2,7,2,-3,9,3,10,5,5,-7],[8,6,-6,5,-9,-5,-2,10,-4,-2,-2,-3,5,6,5,10],[7,-5,4,-5,6,4,2,-3,9,-9,2,-5,1,-6,7,2],[-4,9,6,1,-3,1,2,-4,-1,2,-9,10,-8,-8,4,9],[6,8,-3,5,7,-3,-10,-8,2,-4,-8,-10,-1,-3,8,-5]]], dtype = "uint64")#candidate|1439|(13, 15, 16)|const|uint64
bop_1440 = relay.less(const_1438.astype('bool'), relay.reshape(const_1439.astype('bool'), relay.shape_of(const_1438))) # shape=(13, 15, 16)
uop_1445 = relay.asin(const_1439.astype('float32')) # shape=(13, 15, 16)
uop_1454 = relay.rsqrt(const_1439.astype('float64')) # shape=(13, 15, 16)
output = relay.Tuple([bop_1440,uop_1445,uop_1454,])
output2 = relay.Tuple([bop_1440,uop_1445,uop_1454,])
func_1471 = relay.Function([], output)
mod['func_1471'] = func_1471
mod = relay.transform.InferType()(mod)
mutated_mod['func_1471'] = func_1471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mutated_mod.get_global_var('func_1471')
call_1472 = func_1471_call()
output = call_1472
func_1473 = relay.Function([], output)
mutated_mod['func_1473'] = func_1473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_1515 = relay.TupleGetItem(func_1471_call(), 2)
call_1516 = relay.TupleGetItem(func_1473_call(), 2)
var_1517 = relay.var("var_1517", dtype = "float64", shape = (13, 15, 16))#candidate|1517|(13, 15, 16)|var|float64
bop_1518 = relay.floor_divide(call_1515.astype('float64'), relay.reshape(var_1517.astype('float64'), relay.shape_of(call_1515))) # shape=(13, 15, 16)
bop_1521 = relay.floor_divide(call_1516.astype('float64'), relay.reshape(var_1517.astype('float64'), relay.shape_of(call_1516))) # shape=(13, 15, 16)
output = relay.Tuple([bop_1518,])
output2 = relay.Tuple([bop_1521,])
func_1526 = relay.Function([var_1517,], output)
mod['func_1526'] = func_1526
mod = relay.transform.InferType()(mod)
mutated_mod['func_1526'] = func_1526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1527 = relay.var("var_1527", dtype = "float64", shape = (13, 15, 16))#candidate|1527|(13, 15, 16)|var|float64
func_1526_call = mutated_mod.get_global_var('func_1526')
call_1528 = func_1526_call(var_1527)
output = call_1528
func_1529 = relay.Function([var_1527], output)
mutated_mod['func_1529'] = func_1529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_1556 = relay.TupleGetItem(func_1471_call(), 2)
call_1557 = relay.TupleGetItem(func_1473_call(), 2)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_1587 = relay.TupleGetItem(func_1471_call(), 2)
call_1588 = relay.TupleGetItem(func_1473_call(), 2)
var_1592 = relay.var("var_1592", dtype = "float64", shape = (13, 15, 16))#candidate|1592|(13, 15, 16)|var|float64
bop_1593 = relay.bitwise_or(call_1556.astype('uint8'), relay.reshape(var_1592.astype('uint8'), relay.shape_of(call_1556))) # shape=(13, 15, 16)
bop_1596 = relay.bitwise_or(call_1557.astype('uint8'), relay.reshape(var_1592.astype('uint8'), relay.shape_of(call_1557))) # shape=(13, 15, 16)
output = relay.Tuple([call_1587,bop_1593,])
output2 = relay.Tuple([call_1588,bop_1596,])
func_1597 = relay.Function([var_1592,], output)
mod['func_1597'] = func_1597
mod = relay.transform.InferType()(mod)
mutated_mod['func_1597'] = func_1597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1598 = relay.var("var_1598", dtype = "float64", shape = (13, 15, 16))#candidate|1598|(13, 15, 16)|var|float64
func_1597_call = mutated_mod.get_global_var('func_1597')
call_1599 = func_1597_call(var_1598)
output = call_1599
func_1600 = relay.Function([var_1598], output)
mutated_mod['func_1600'] = func_1600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1627 = relay.var("var_1627", dtype = "float64", shape = (7, 12, 4))#candidate|1627|(7, 12, 4)|var|float64
uop_1628 = relay.log2(var_1627.astype('float64')) # shape=(7, 12, 4)
output = uop_1628
output2 = uop_1628
func_1636 = relay.Function([var_1627,], output)
mod['func_1636'] = func_1636
mod = relay.transform.InferType()(mod)
var_1637 = relay.var("var_1637", dtype = "float64", shape = (7, 12, 4))#candidate|1637|(7, 12, 4)|var|float64
output = func_1636(var_1637)
func_1638 = relay.Function([var_1637], output)
mutated_mod['func_1638'] = func_1638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_1647 = relay.TupleGetItem(func_1471_call(), 0)
call_1648 = relay.TupleGetItem(func_1473_call(), 0)
func_1526_call = mod.get_global_var('func_1526')
func_1529_call = mutated_mod.get_global_var('func_1529')
call_1651 = relay.TupleGetItem(func_1526_call(relay.reshape(call_1647.astype('float64'), [13, 15, 16])), 0)
call_1652 = relay.TupleGetItem(func_1529_call(relay.reshape(call_1647.astype('float64'), [13, 15, 16])), 0)
output = relay.Tuple([call_1647,call_1651,])
output2 = relay.Tuple([call_1648,call_1652,])
func_1654 = relay.Function([], output)
mod['func_1654'] = func_1654
mod = relay.transform.InferType()(mod)
output = func_1654()
func_1655 = relay.Function([], output)
mutated_mod['func_1655'] = func_1655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_1692 = relay.TupleGetItem(func_1471_call(), 0)
call_1693 = relay.TupleGetItem(func_1473_call(), 0)
output = relay.Tuple([call_1692,])
output2 = relay.Tuple([call_1693,])
func_1695 = relay.Function([], output)
mod['func_1695'] = func_1695
mod = relay.transform.InferType()(mod)
mutated_mod['func_1695'] = func_1695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mutated_mod.get_global_var('func_1695')
call_1696 = func_1695_call()
output = call_1696
func_1697 = relay.Function([], output)
mutated_mod['func_1697'] = func_1697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_1702 = relay.TupleGetItem(func_1471_call(), 1)
call_1703 = relay.TupleGetItem(func_1473_call(), 1)
var_1707 = relay.var("var_1707", dtype = "float32", shape = (13, 15, 16))#candidate|1707|(13, 15, 16)|var|float32
bop_1708 = relay.maximum(call_1702.astype('float64'), relay.reshape(var_1707.astype('float64'), relay.shape_of(call_1702))) # shape=(13, 15, 16)
bop_1711 = relay.maximum(call_1703.astype('float64'), relay.reshape(var_1707.astype('float64'), relay.shape_of(call_1703))) # shape=(13, 15, 16)
func_1636_call = mod.get_global_var('func_1636')
func_1638_call = mutated_mod.get_global_var('func_1638')
const_1715 = relay.const([0.533528,5.767425,1.015338,-2.591322,-1.274247,2.557364,7.646382,-1.884619,-2.526195,6.988274,-5.736307,-9.862834,5.344293,0.850692,-8.052280,5.972918,-6.400628,-7.133964,2.319345,-8.271053,4.306833,-1.394557,-0.731231,5.791061,-8.958920,-5.028221,2.749336,5.997609,-8.931602,-7.748419,-5.296678,4.317733,-7.337423,6.860744,-6.902604,-0.653752,8.905233,-6.464125,3.731555,-4.242944,-4.572504,-7.960410,5.433959,1.772247,2.756461,-1.531827,4.966828,-7.770551,1.806110,2.602746,-0.392283,0.120779,-4.728394,2.242288,7.558966,2.166492,-7.112302,-8.960554,-3.105757,-3.065260,1.060696,6.866162,-6.890455,-4.068308,9.750814,2.430845,3.816479,-8.746304,-4.081903,1.290182,9.076761,2.608993,2.186993,-1.152615,8.548957,8.740690,0.959811,8.186237,-8.162226,-9.062850,-7.363935,2.861443,-2.616615,6.187480,7.717021,7.421892,-6.568155,2.198787,-7.000296,1.947528,-8.187339,-8.665698,5.868497,5.740671,7.487606,-7.509779,9.425643,-3.114088,2.928092,-0.966760,-8.077865,0.684106,-8.885037,-0.315693,-2.382524,9.981718,-3.596030,4.607083,5.120661,-3.319942,-0.015556,-1.532297,-6.347041,8.361139,0.290781,0.870626,4.361213,-2.688849,2.116049,-4.674634,-4.274033,-2.807095,0.576600,-4.583849,-0.543237,-0.757775,3.516329,-3.115660,8.301380,0.662747,3.765037,-8.912736,-3.208995,-7.499395,-3.951760,6.674359,-7.286631,1.429317,0.147526,9.689737,-8.120986,-0.253575,-5.453444,-3.983132,9.391387,-1.558514,-2.075088,8.962390,2.014634,-7.576817,7.703480,-1.669845,3.602605,2.593524,-1.239978,-9.862134,-6.087407,-0.354636,6.525565,-6.593813,8.773418,7.409382,-6.643835,-7.943369,-2.799073,9.252977,-7.944645,-0.173173,5.187804,5.076626,-7.708280,5.356207,-1.755027,0.575947,-6.138385,-7.295676,6.878727,4.599265,2.889033,7.203051,-9.400553,8.626219,3.422189,-6.605807,2.749972,-4.325713,3.219160,6.195203,4.906682,7.250260,-1.875564,3.787620,2.026537,4.864589,-1.220443,-7.837609,3.976260,-7.667745,3.513868,-6.833430,-6.055886,-8.838654,-7.202408,9.744725,1.345451,3.022587,5.056220,0.743321,5.018163,0.667267,8.303669,-0.077867,5.512172,9.444110,8.054958,8.742208,-4.373729,2.542541,9.939588,7.877830,3.052508,0.611009,9.740787,5.556761,2.433297,5.822118,-8.051087,-9.238670,-8.155945,1.240346,6.533798,2.780973,-3.747060,-4.613374,3.495222,-3.197557,-6.209368,3.431767,-3.796964,-5.539129,1.233303,1.260429,4.874986,4.915896,4.892420,0.831035,-2.934776,5.657827,3.309453,-6.099402,1.378023,5.070982,-7.432825,2.761182,1.385809,3.080801,8.298398,-4.484143,-9.266776,-2.408505,-2.608749,-6.126668,-9.972225,-2.369702,7.165898,3.821813,4.705666,-1.985850,4.441043,1.447257,6.692978,-0.071755,3.113642,1.081510,-3.627560,9.913083,6.945108,1.059211,0.208013,4.083651,9.697793,4.772842,1.443761,-3.931870,-2.883122,6.908563,-4.330096,-4.987688,-7.140537,0.394033,-8.947800,-3.257672,-1.129687,9.480210,2.545582,-5.664961,2.527685,7.886142,2.207473,-8.691489,5.746511,8.074883,5.242915,8.768758,8.843541,-6.457937,-2.524985,5.777237,0.161274,-0.080690,3.737789,6.231597,8.849932,9.353427,-1.631945,-4.230740,5.996874,-9.624123,9.855583,9.606781,-9.518052,-9.039484,-3.649483,-0.337344,3.476127,-0.419938,4.285491,0.124448,-7.357299,-6.844231,-2.348460,5.311921,-8.550283,-2.395196,9.694469,7.290520], dtype = "float64")#candidate|1715|(336,)|const|float64
call_1714 = func_1636_call(relay.reshape(const_1715.astype('float64'), [7, 12, 4]))
call_1716 = func_1636_call(relay.reshape(const_1715.astype('float64'), [7, 12, 4]))
func_1636_call = mod.get_global_var('func_1636')
func_1638_call = mutated_mod.get_global_var('func_1638')
call_1727 = func_1636_call(relay.reshape(call_1714.astype('float64'), [7, 12, 4]))
call_1728 = func_1636_call(relay.reshape(call_1714.astype('float64'), [7, 12, 4]))
uop_1729 = relay.acos(call_1702.astype('float64')) # shape=(13, 15, 16)
uop_1731 = relay.acos(call_1703.astype('float64')) # shape=(13, 15, 16)
output = relay.Tuple([bop_1708,call_1714,const_1715,call_1727,uop_1729,])
output2 = relay.Tuple([bop_1711,call_1716,const_1715,call_1728,uop_1731,])
func_1739 = relay.Function([var_1707,], output)
mod['func_1739'] = func_1739
mod = relay.transform.InferType()(mod)
var_1740 = relay.var("var_1740", dtype = "float32", shape = (13, 15, 16))#candidate|1740|(13, 15, 16)|var|float32
output = func_1739(var_1740)
func_1741 = relay.Function([var_1740], output)
mutated_mod['func_1741'] = func_1741
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1816 = relay.const([[[6,9,5],[-3,-4,-9],[-6,-2,5],[-4,-8,-3],[7,7,9]],[[4,-3,1],[2,7,9],[-1,-6,-9],[-6,3,10],[-10,-8,-4]],[[10,-4,2],[1,1,2],[-3,-6,5],[-1,8,5],[-2,4,-2]],[[6,-8,-3],[6,-6,1],[9,-8,-4],[-10,-4,-8],[6,-3,-9]],[[1,-5,6],[1,3,10],[-7,9,-6],[10,7,-6],[-4,7,5]],[[2,-3,-8],[6,-2,-9],[2,-3,-3],[3,5,-7],[9,5,9]],[[-5,-7,8],[7,5,5],[-4,-9,-8],[-8,-6,-5],[5,-4,-1]],[[10,4,2],[1,9,1],[-1,1,-1],[-4,1,3],[-3,-9,9]],[[-2,6,6],[-1,9,2],[-4,-2,3],[-3,6,7],[10,-10,-10]]], dtype = "int16")#candidate|1816|(9, 5, 3)|const|int16
var_1817 = relay.var("var_1817", dtype = "int16", shape = (9, 5, 3))#candidate|1817|(9, 5, 3)|var|int16
bop_1818 = relay.equal(const_1816.astype('bool'), relay.reshape(var_1817.astype('bool'), relay.shape_of(const_1816))) # shape=(9, 5, 3)
func_1268_call = mod.get_global_var('func_1268')
func_1270_call = mutated_mod.get_global_var('func_1270')
var_1826 = relay.var("var_1826", dtype = "float64", shape = (1, 144))#candidate|1826|(1, 144)|var|float64
call_1825 = relay.TupleGetItem(func_1268_call(relay.reshape(var_1826.astype('float64'), [6, 2, 12])), 2)
call_1827 = relay.TupleGetItem(func_1270_call(relay.reshape(var_1826.astype('float64'), [6, 2, 12])), 2)
var_1828 = relay.var("var_1828", dtype = "float32", shape = (1485,))#candidate|1828|(1485,)|var|float32
bop_1829 = relay.bitwise_or(call_1825.astype('uint16'), relay.reshape(var_1828.astype('uint16'), relay.shape_of(call_1825))) # shape=(1485,)
bop_1832 = relay.bitwise_or(call_1827.astype('uint16'), relay.reshape(var_1828.astype('uint16'), relay.shape_of(call_1827))) # shape=(1485,)
func_502_call = mod.get_global_var('func_502')
func_505_call = mutated_mod.get_global_var('func_505')
var_1845 = relay.var("var_1845", dtype = "uint16", shape = (455,))#candidate|1845|(455,)|var|uint16
call_1844 = relay.TupleGetItem(func_502_call(relay.reshape(var_1845.astype('uint16'), [455,])), 0)
call_1846 = relay.TupleGetItem(func_505_call(relay.reshape(var_1845.astype('uint16'), [455,])), 0)
func_235_call = mod.get_global_var('func_235')
func_238_call = mutated_mod.get_global_var('func_238')
call_1847 = relay.TupleGetItem(func_235_call(relay.reshape(var_1845.astype('uint16'), [5, 7, 13])), 5)
call_1848 = relay.TupleGetItem(func_238_call(relay.reshape(var_1845.astype('uint16'), [5, 7, 13])), 5)
uop_1857 = relay.cosh(var_1817.astype('float32')) # shape=(9, 5, 3)
output = relay.Tuple([bop_1818,var_1826,bop_1829,call_1844,var_1845,call_1847,uop_1857,])
output2 = relay.Tuple([bop_1818,var_1826,bop_1832,call_1846,var_1845,call_1848,uop_1857,])
func_1862 = relay.Function([var_1817,var_1826,var_1828,var_1845,], output)
mod['func_1862'] = func_1862
mod = relay.transform.InferType()(mod)
var_1863 = relay.var("var_1863", dtype = "int16", shape = (9, 5, 3))#candidate|1863|(9, 5, 3)|var|int16
var_1864 = relay.var("var_1864", dtype = "float64", shape = (1, 144))#candidate|1864|(1, 144)|var|float64
var_1865 = relay.var("var_1865", dtype = "float32", shape = (1485,))#candidate|1865|(1485,)|var|float32
var_1866 = relay.var("var_1866", dtype = "uint16", shape = (455,))#candidate|1866|(455,)|var|uint16
output = func_1862(var_1863,var_1864,var_1865,var_1866,)
func_1867 = relay.Function([var_1863,var_1864,var_1865,var_1866,], output)
mutated_mod['func_1867'] = func_1867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1893 = relay.var("var_1893", dtype = "float64", shape = (10, 16, 6))#candidate|1893|(10, 16, 6)|var|float64
uop_1894 = relay.sinh(var_1893.astype('float64')) # shape=(10, 16, 6)
uop_1897 = relay.sigmoid(uop_1894.astype('float64')) # shape=(10, 16, 6)
output = uop_1897
output2 = uop_1897
func_1932 = relay.Function([var_1893,], output)
mod['func_1932'] = func_1932
mod = relay.transform.InferType()(mod)
var_1933 = relay.var("var_1933", dtype = "float64", shape = (10, 16, 6))#candidate|1933|(10, 16, 6)|var|float64
output = func_1932(var_1933)
func_1934 = relay.Function([var_1933], output)
mutated_mod['func_1934'] = func_1934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_1955 = relay.TupleGetItem(func_1695_call(), 0)
call_1956 = relay.TupleGetItem(func_1697_call(), 0)
func_502_call = mod.get_global_var('func_502')
func_505_call = mutated_mod.get_global_var('func_505')
const_1962 = relay.const([[4,-2,-3,1,-6,-4,-9,10,7,4,-3,-2,-7,8,4,-2,4,-9,8,10,1,7,-2,-1,6,5,-8,-4,-6,9,-6,6,-6,8,5,10,-3,-3,1,6,-9,-1,-7,-2,-9,1,-3,-5,4,-2,3,-2,-8,9,-2,9,5,-8,4,5,2,-9,7,-3,7,-7,-7,5,7,-5,1,10,-3,-2,10,-10,-5,9,-3,10,-10,-10,-9,4,-3,5,-4,-1,5,6,1,10,-7,8,5,-1,7,4,10,-2,-1,-6,3,-4,1,4,7,9,-6,5,-5,6,10,9,-10,-3,-9,-7,-6,-1,-10,10,2,1,-8,-9,3,-6,5,-4,-4,7,-4,8,-5,9,-5,-3,10,-6,10,-1,1,7,1,-3,8,10,6,4,-8,-7,3,1,3,10,-1,6,8,-7,5,-6,2,7,-6,9,3,7,7,-9,-3,4,2,5,-3,9,-4,3,10,4,-2,-10,-1,2,2,8,10,9,-10,-2,-9,-3,3,-7,-7,-1,-5,5,-7,-4,6,-4,2,10,10,-6,-10,-9,6,-10,-8,3,3,7,-3,-10,-3,-7,10,8,9,8,-7,-4,3,-8,-6,-4,9,10,-4,-2,3,-3,-9,2,7,9,6,-8,9,2,7,4,-7,7,-3,10,8,-10,4,-5,3,-8,-7,-10,10,-2,7,-2,-10,-8,8,10,1,3,3,8,-1,-5,-1,-5,-6,-2,2,-9,-5,-5,5,8,-5,-1,10,4,-6,-2,-3,-1,-5,-2,-7,9,-10,-2,2,-8,1,-7,9,-2,10,3,2,-2,7,6,-7,-5,-1,-1,-8,-2,-8,-2,10,-3,10,4,10,-9,-2,-8,-1,-5,1,-7,-4,-8,8,9,-5,-10,8,7,10,2,2,-10,-6,-5,-8,4,1,-4,3,9,-8,5,3,-4,9,-4,10,5,-8,1,-5,9,10,-7,9,-2,-4,-4,6,-1,-4,7,-10,9,5,5,-6,5,10,-8,-9,7,-5,2,9,-8,10,-8,-2,-8,7,-8,-8,7,-7,8,-3,-9,7,2,7,-8,9,-7,3,7,-1,-10,-8,-8,2,-10,2,-5,-3,5,-1,6,9,1,1,9,-3,-2,8,9,-7,-8,10,-9,2,-2,-7,3,4,-7,1,8,8,8,-9,7,6,6,-9,-9,-7,4,-1,-1,2,-1,-5,-9,-8,-9,6,4,1]], dtype = "uint16")#candidate|1962|(1, 455)|const|uint16
call_1961 = relay.TupleGetItem(func_502_call(relay.reshape(const_1962.astype('uint16'), [455,])), 0)
call_1963 = relay.TupleGetItem(func_505_call(relay.reshape(const_1962.astype('uint16'), [455,])), 0)
output = relay.Tuple([call_1955,call_1961,const_1962,])
output2 = relay.Tuple([call_1956,call_1963,const_1962,])
func_1964 = relay.Function([], output)
mod['func_1964'] = func_1964
mod = relay.transform.InferType()(mod)
mutated_mod['func_1964'] = func_1964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1964_call = mutated_mod.get_global_var('func_1964')
call_1965 = func_1964_call()
output = call_1965
func_1966 = relay.Function([], output)
mutated_mod['func_1966'] = func_1966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_2100 = relay.TupleGetItem(func_1695_call(), 0)
call_2101 = relay.TupleGetItem(func_1697_call(), 0)
var_2117 = relay.var("var_2117", dtype = "bool", shape = (13, 15, 16))#candidate|2117|(13, 15, 16)|var|bool
bop_2118 = relay.multiply(call_2100.astype('int8'), relay.reshape(var_2117.astype('int8'), relay.shape_of(call_2100))) # shape=(13, 15, 16)
bop_2121 = relay.multiply(call_2101.astype('int8'), relay.reshape(var_2117.astype('int8'), relay.shape_of(call_2101))) # shape=(13, 15, 16)
uop_2126 = relay.acosh(call_2100.astype('float32')) # shape=(13, 15, 16)
uop_2128 = relay.acosh(call_2101.astype('float32')) # shape=(13, 15, 16)
bop_2129 = relay.minimum(uop_2126.astype('int32'), relay.reshape(bop_2118.astype('int32'), relay.shape_of(uop_2126))) # shape=(13, 15, 16)
bop_2132 = relay.minimum(uop_2128.astype('int32'), relay.reshape(bop_2121.astype('int32'), relay.shape_of(uop_2128))) # shape=(13, 15, 16)
uop_2136 = relay.sinh(bop_2129.astype('float64')) # shape=(13, 15, 16)
uop_2138 = relay.sinh(bop_2132.astype('float64')) # shape=(13, 15, 16)
func_502_call = mod.get_global_var('func_502')
func_505_call = mutated_mod.get_global_var('func_505')
var_2140 = relay.var("var_2140", dtype = "uint16", shape = (455,))#candidate|2140|(455,)|var|uint16
call_2139 = relay.TupleGetItem(func_502_call(relay.reshape(var_2140.astype('uint16'), [455,])), 2)
call_2141 = relay.TupleGetItem(func_505_call(relay.reshape(var_2140.astype('uint16'), [455,])), 2)
output = relay.Tuple([uop_2136,call_2139,var_2140,])
output2 = relay.Tuple([uop_2138,call_2141,var_2140,])
func_2142 = relay.Function([var_2117,var_2140,], output)
mod['func_2142'] = func_2142
mod = relay.transform.InferType()(mod)
mutated_mod['func_2142'] = func_2142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2142_call = mutated_mod.get_global_var('func_2142')
var_2144 = relay.var("var_2144", dtype = "bool", shape = (13, 15, 16))#candidate|2144|(13, 15, 16)|var|bool
var_2145 = relay.var("var_2145", dtype = "uint16", shape = (455,))#candidate|2145|(455,)|var|uint16
call_2143 = func_2142_call(var_2144,var_2145,)
output = call_2143
func_2146 = relay.Function([var_2144,var_2145,], output)
mutated_mod['func_2146'] = func_2146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_2218 = relay.TupleGetItem(func_1471_call(), 1)
call_2219 = relay.TupleGetItem(func_1473_call(), 1)
output = call_2218
output2 = call_2219
func_2222 = relay.Function([], output)
mod['func_2222'] = func_2222
mod = relay.transform.InferType()(mod)
output = func_2222()
func_2223 = relay.Function([], output)
mutated_mod['func_2223'] = func_2223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_2245 = relay.TupleGetItem(func_1695_call(), 0)
call_2246 = relay.TupleGetItem(func_1697_call(), 0)
func_1597_call = mod.get_global_var('func_1597')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_2249 = relay.TupleGetItem(func_1597_call(relay.reshape(call_2245.astype('float64'), [13, 15, 16])), 1)
call_2250 = relay.TupleGetItem(func_1600_call(relay.reshape(call_2245.astype('float64'), [13, 15, 16])), 1)
func_235_call = mod.get_global_var('func_235')
func_238_call = mutated_mod.get_global_var('func_238')
var_2256 = relay.var("var_2256", dtype = "uint16", shape = (455,))#candidate|2256|(455,)|var|uint16
call_2255 = relay.TupleGetItem(func_235_call(relay.reshape(var_2256.astype('uint16'), [5, 7, 13])), 2)
call_2257 = relay.TupleGetItem(func_238_call(relay.reshape(var_2256.astype('uint16'), [5, 7, 13])), 2)
output = relay.Tuple([call_2245,call_2249,call_2255,var_2256,])
output2 = relay.Tuple([call_2246,call_2250,call_2257,var_2256,])
func_2260 = relay.Function([var_2256,], output)
mod['func_2260'] = func_2260
mod = relay.transform.InferType()(mod)
var_2261 = relay.var("var_2261", dtype = "uint16", shape = (455,))#candidate|2261|(455,)|var|uint16
output = func_2260(var_2261)
func_2262 = relay.Function([var_2261], output)
mutated_mod['func_2262'] = func_2262
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2275 = relay.var("var_2275", dtype = "float32", shape = (14, 13, 1))#candidate|2275|(14, 13, 1)|var|float32
uop_2276 = relay.sigmoid(var_2275.astype('float32')) # shape=(14, 13, 1)
uop_2285 = relay.exp(uop_2276.astype('float64')) # shape=(14, 13, 1)
output = uop_2285
output2 = uop_2285
func_2287 = relay.Function([var_2275,], output)
mod['func_2287'] = func_2287
mod = relay.transform.InferType()(mod)
mutated_mod['func_2287'] = func_2287
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2288 = relay.var("var_2288", dtype = "float32", shape = (14, 13, 1))#candidate|2288|(14, 13, 1)|var|float32
func_2287_call = mutated_mod.get_global_var('func_2287')
call_2289 = func_2287_call(var_2288)
output = call_2289
func_2290 = relay.Function([var_2288], output)
mutated_mod['func_2290'] = func_2290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2294 = relay.var("var_2294", dtype = "int64", shape = (16, 4, 5))#candidate|2294|(16, 4, 5)|var|int64
var_2295 = relay.var("var_2295", dtype = "int64", shape = (16, 4, 5))#candidate|2295|(16, 4, 5)|var|int64
bop_2296 = relay.bitwise_or(var_2294.astype('int64'), relay.reshape(var_2295.astype('int64'), relay.shape_of(var_2294))) # shape=(16, 4, 5)
func_502_call = mod.get_global_var('func_502')
func_505_call = mutated_mod.get_global_var('func_505')
var_2308 = relay.var("var_2308", dtype = "uint16", shape = (455,))#candidate|2308|(455,)|var|uint16
call_2307 = relay.TupleGetItem(func_502_call(relay.reshape(var_2308.astype('uint16'), [455,])), 2)
call_2309 = relay.TupleGetItem(func_505_call(relay.reshape(var_2308.astype('uint16'), [455,])), 2)
output = relay.Tuple([bop_2296,call_2307,var_2308,])
output2 = relay.Tuple([bop_2296,call_2309,var_2308,])
func_2315 = relay.Function([var_2294,var_2295,var_2308,], output)
mod['func_2315'] = func_2315
mod = relay.transform.InferType()(mod)
mutated_mod['func_2315'] = func_2315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2315_call = mutated_mod.get_global_var('func_2315')
var_2317 = relay.var("var_2317", dtype = "int64", shape = (16, 4, 5))#candidate|2317|(16, 4, 5)|var|int64
var_2318 = relay.var("var_2318", dtype = "int64", shape = (16, 4, 5))#candidate|2318|(16, 4, 5)|var|int64
var_2319 = relay.var("var_2319", dtype = "uint16", shape = (455,))#candidate|2319|(455,)|var|uint16
call_2316 = func_2315_call(var_2317,var_2318,var_2319,)
output = call_2316
func_2320 = relay.Function([var_2317,var_2318,var_2319,], output)
mutated_mod['func_2320'] = func_2320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_2341 = relay.TupleGetItem(func_1695_call(), 0)
call_2342 = relay.TupleGetItem(func_1697_call(), 0)
func_502_call = mod.get_global_var('func_502')
func_505_call = mutated_mod.get_global_var('func_505')
const_2352 = relay.const([6,8,-4,1,6,2,6,7,10,-10,-8,4,-1,-9,-10,4,2,1,4,1,-7,3,2,1,-9,-6,5,-10,4,1,-4,10,-7,-3,5,3,6,3,6,-2,4,4,10,6,-1,-10,1,10,-2,-3,8,9,1,-4,8,4,3,-1,-1,-9,-3,-9,10,4,-4,-9,2,6,1,-4,5,-1,7,-3,9,3,8,8,-3,10,-9,10,10,-9,-8,-10,-3,3,-2,-10,-6,-5,-5,4,7,-5,-6,10,-3,-7,-1,3,-9,-4,3,-4,-7,5,3,-9,-7,7,-1,9,7,4,4,-4,6,-4,3,9,-8,-1,-6,-3,9,6,8,-6,1,5,-7,-8,8,-1,-1,-1,5,-2,-4,-5,5,-3,-7,10,-8,3,5,-10,5,-5,2,-5,-8,9,10,-5,3,9,-6,8,-3,9,4,2,1,-4,-3,-1,6,5,3,-2,-9,-8,10,-8,9,-3,-9,2,4,4,-5,-10,-4,-8,4,-3,10,7,7,5,7,9,-4,-7,-7,6,5,-4,1,-5,-1,-10,-2,-1,6,-5,5,-8,-4,-7,-5,4,1,10,1,8,6,3,7,-8,-1,6,8,-4,9,7,6,-4,1,-10,-1,-4,-8,-6,-2,-8,1,8,-7,4,-6,10,2,1,-9,-6,1,9,7,-4,2,-4,7,-2,4,10,9,-4,-5,-6,5,-7,4,-6,1,-1,-4,-8,7,-7,8,-3,-7,-1,1,1,9,-2,3,-5,-8,1,-1,4,9,-9,9,5,10,-2,-3,-6,-10,7,-6,2,-1,7,2,-10,-5,7,2,3,9,-10,8,-9,6,-4,10,-6,8,3,-9,10,-1,-9,2,2,7,6,-9,4,2,-8,5,-3,1,5,-8,-5,4,9,-6,-7,-2,8,7,9,-1,2,-10,1,1,-3,-10,8,-2,10,-6,3,-8,-1,5,4,6,-6,-3,10,-2,4,9,8,7,-9,4,2,3,9,-5,5,-1,10,7,-9,-10,5,-3,3,2,4,4,-10,-3,-4,-3,10,2,-9,9,-2,-1,10,-9,-7,-5,-8,8,5,-6,10,1,-5,-9,4,4,-6,-2,-2,-9,3,-7,2,-7,-7,-7,-4,6,-3,-6,2,2,7,-4,6,-6,-9,8,-10,-10,9,5,-8,-3,-5,-10,8,-5,-8,4,4,1,-4,-5,-3,3,-4,5,9,-3], dtype = "uint16")#candidate|2352|(455,)|const|uint16
call_2351 = relay.TupleGetItem(func_502_call(relay.reshape(const_2352.astype('uint16'), [455,])), 2)
call_2353 = relay.TupleGetItem(func_505_call(relay.reshape(const_2352.astype('uint16'), [455,])), 2)
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
const_2355 = relay.const([[7.884062,1.743512,2.708263,1.108562,-6.014534,-5.841064,-0.013024,-9.011711,-2.950912,-3.566739,-0.046471,2.566498,-9.258217,7.328402,3.376599,-2.690428,2.405928,1.304426,5.692164,-0.392471,-0.327423,-5.862145,5.991356,-5.571574,-2.932409,-0.994453,-3.031740,2.686178,-9.204257,5.816336,-7.429664,0.863146,8.461024,3.833760,6.438658,2.667087,-8.968504,-0.386300,-3.666519,6.155061,-0.306889,3.559752,1.385554,8.291827,5.556787,7.867117,-7.965690,-6.215393,4.563267,5.171229,1.345087,-1.568110,-4.596157,4.472297,-5.103293,8.692728,-5.108268,8.880311,8.325666,-9.453563,3.717084,-9.919054,-7.928256,6.221998,-9.894474,-3.848033,1.379576,7.713074,4.091247,1.192034,4.476513,-8.834461,5.354938,5.839173,3.356324,-3.560029,4.079889,-5.304238,8.063414,-0.184707,-5.312637,3.618948,6.161185,7.639694,-3.682578,-9.032889,2.033810,2.391053,-5.216166,0.599310,-0.295674,-9.081548,3.204365,3.591004,0.402304,-4.168843],[-4.671537,3.995990,9.156601,2.958484,8.876567,7.583163,-4.412383,-7.290441,-6.304042,-1.822452,2.745539,-8.246962,-1.696086,4.457317,3.858147,8.396150,1.020378,-3.004708,-8.640242,-1.459224,5.851829,-3.863012,8.966683,8.594194,0.247986,-2.308608,-2.344634,7.631215,0.755878,-8.292716,-0.806527,-9.334263,0.818341,-2.632818,-7.984813,4.999953,9.510621,-8.326124,-1.753942,-1.390555,4.444555,-9.520759,2.795506,-6.646172,-1.937511,-3.066037,2.342532,0.933877,9.900826,-7.792544,-4.502393,9.619838,7.457150,-3.969652,7.270002,4.908951,-9.736257,4.589248,6.338188,-0.349237,-8.489906,2.703170,7.087327,-6.769330,-2.753583,7.831450,6.342475,-9.854240,-1.506767,-6.560533,9.522395,-9.016168,-5.879488,-2.625499,-1.897775,3.784594,3.330449,-1.383984,1.850082,7.820617,5.086800,0.452404,8.618891,7.002206,-5.061253,-9.485791,-6.685893,4.922661,-9.317170,-4.165676,-6.107053,0.352913,-5.589468,6.354504,0.111090,-6.446420],[0.310528,7.777410,0.284582,-3.797579,-6.467077,-8.675058,8.162001,1.940414,0.725241,-5.407761,-4.883039,3.769730,1.549997,-4.333399,2.317275,2.843934,-8.400943,1.191667,-2.596096,-7.315754,-8.391103,7.734794,-7.541264,8.541528,-7.742122,-6.537419,-5.389552,-3.301853,-8.021019,-2.648882,2.905890,-8.148149,-8.211289,6.394833,2.868358,2.171933,-2.051847,0.057092,-8.672392,-1.987731,0.413579,3.441231,-3.535020,5.175108,-7.183781,-5.222689,-7.134568,-8.849883,1.581127,3.400325,4.566538,-3.830665,6.497930,-8.225385,5.539053,-5.394240,0.659490,-5.542265,5.914703,-9.331745,9.293620,7.862554,9.402305,-5.408775,-2.951551,7.664124,-6.587996,8.817762,-0.118748,6.577037,0.913617,-3.116312,0.762824,-6.429501,-9.129270,2.684544,-1.142340,4.101086,-0.518280,-8.439417,2.363096,-2.902537,7.193064,8.487201,4.799153,4.932209,5.060719,-2.001377,-1.668208,2.591553,6.937394,-9.692313,-4.350849,-5.130964,5.956470,2.037891],[-9.047257,4.557713,9.883882,4.651026,8.528376,7.787596,-1.981160,-8.268565,4.177596,-7.904257,-4.325505,-2.653051,-7.566949,3.565646,7.702598,5.730704,-7.158703,0.231718,5.923986,-0.235330,-8.526194,8.378345,8.567630,8.689469,-1.795809,-4.362481,3.867945,1.985975,3.495187,2.868878,5.812334,-8.831309,3.042225,4.515242,5.202771,-6.834894,-3.807930,-8.417560,0.002027,-6.858350,1.157963,-4.594514,8.951739,7.339572,-6.988347,9.448284,5.122689,2.365448,4.831174,5.901052,-1.146795,-6.611404,-8.200016,6.927955,3.600845,5.527240,-4.683064,2.037310,7.144745,-0.128449,1.975242,6.510552,2.177791,-6.880835,9.074146,5.653911,0.389641,-5.666434,9.326434,9.846455,5.323188,4.145895,-9.225287,2.457800,7.924220,9.321587,5.143255,8.676774,5.988474,-1.475228,-4.158119,-1.839368,8.981822,1.194546,-9.177978,2.663063,3.357065,2.997218,7.412967,4.204111,-2.349234,-1.091826,2.669512,6.499649,5.491141,8.268022],[5.386495,4.120966,9.575659,4.258704,7.025719,6.407584,-4.375169,-3.281125,-8.096630,-9.167563,-3.398714,-9.869516,2.721020,-0.703313,7.516923,-3.573717,9.244565,-2.465465,-4.322727,5.090200,-5.129466,-0.389974,1.348312,1.375463,-4.049701,6.321229,-8.995393,-4.038232,9.725958,-0.911478,-8.250706,6.688612,-9.816978,-1.593258,-3.474813,-9.333498,1.226272,4.205543,2.083451,-5.191397,-6.885637,-3.365997,2.607010,-3.454663,9.949482,-3.633841,0.956547,1.366849,3.081421,-7.739811,3.670526,-9.667237,1.108876,-2.040214,-1.732421,-3.665836,-8.652367,9.538546,7.272230,-1.905838,-6.906516,1.704093,-5.790157,7.410215,-3.534049,8.689597,-4.824051,-3.952539,1.094536,-7.255909,4.851669,6.123605,2.603042,-3.665968,-7.009000,9.044103,7.268964,6.092272,-7.825246,9.598758,-8.109958,-6.729223,-4.021896,0.051135,2.026347,-6.837617,-0.147185,-4.353534,-9.385773,5.192339,3.056820,-6.108749,6.254356,4.901042,-5.426362,-3.281875],[1.838122,-1.528613,-5.017929,-3.415683,7.074276,-2.705570,-4.446120,-3.166324,8.460070,0.700137,-5.007022,3.427193,0.984684,0.084055,0.434507,1.029315,2.498186,7.145138,7.634789,8.034547,-8.725709,-9.920441,2.432912,1.377254,-3.065559,8.693272,-5.803467,-1.778771,3.984695,-6.414822,-7.179780,-6.446956,7.370269,0.601499,4.066772,4.470226,-8.395000,-5.382293,-6.039856,8.930059,-7.193213,-5.207895,5.194083,8.581853,-6.570212,-9.905425,4.614287,-3.980628,-5.964399,4.118466,3.928849,3.562131,-3.350480,6.188389,3.357770,-7.591029,9.092521,8.229006,6.873457,-0.107347,-6.218159,-6.241734,1.906744,-7.515618,-1.362128,0.675383,-7.523012,-0.507361,-2.489217,-2.429416,-8.840792,9.927178,4.955788,-2.734607,9.302181,-5.025380,7.339919,8.469223,-1.227642,-9.128085,8.198987,-4.238571,-1.143365,6.481573,-8.965080,6.975479,-4.217697,-8.714722,4.181291,-1.674582,5.342253,-7.406557,-6.375122,3.812073,3.678278,3.339674],[1.550207,-0.707148,-3.900115,-8.875684,9.893534,5.539740,2.994963,7.421883,9.970420,1.861722,2.002252,7.875138,-9.966668,-1.342883,5.070240,-1.632941,2.744330,-2.323570,-9.779538,-0.877784,-8.566663,6.689049,7.991224,-4.218373,5.347997,-5.683980,9.760650,-2.216024,-1.792826,7.292441,-9.654455,0.609901,5.399483,-0.497534,-0.192495,0.180406,-2.975015,-6.407254,-7.692242,-2.642159,9.441139,-4.365615,9.513894,-5.321495,4.142331,3.436030,4.045501,5.954297,-4.943556,7.289759,-9.351817,-4.826883,2.330762,-8.938259,3.568298,7.037285,5.304412,-2.631038,-5.880994,0.378514,-6.584647,-8.100760,2.363994,-2.125685,0.587388,-9.119111,5.855825,-2.939024,-1.259509,-6.578856,-8.301008,-5.943680,6.243967,-0.543830,6.629380,5.135076,-3.405607,7.182926,5.317640,3.418766,0.775116,-5.012011,-4.080775,-6.863176,6.479510,6.036355,-9.986620,-9.548325,-9.613305,-1.287240,-4.100043,3.234268,9.520689,-4.022048,7.798197,1.745119],[9.939109,2.002783,-0.652425,-8.371751,-7.671210,2.189006,2.961184,-2.759590,-7.163170,2.225824,-1.670923,6.534121,-0.125725,-6.778412,-9.472923,-7.980006,8.247363,3.981552,2.157782,0.302851,2.363476,1.629029,-6.797147,-5.024832,-8.482650,2.440086,5.530399,-8.198932,-1.606033,9.859560,-7.505931,9.372029,8.752803,7.445564,-0.347152,-6.618457,-0.613165,4.888145,9.235732,8.701656,4.924775,-4.266584,-3.007140,-7.534418,2.121702,9.923289,-8.581395,4.799304,0.315179,-2.341178,6.420895,-6.419941,-4.125381,9.867650,7.530733,8.359573,1.879554,0.971368,-5.110204,9.551838,4.546000,2.565242,5.200769,5.686011,-7.894824,-6.497531,-3.517089,2.936071,-3.146574,-9.618363,0.183326,9.116757,0.841456,-8.981875,-3.521678,0.180925,-6.779824,1.465466,3.430041,3.063223,1.710599,-6.542175,-4.974432,-3.450840,-5.059063,-8.253201,1.081911,-8.597511,8.583337,-1.034644,-5.028046,5.259177,9.477536,-1.020829,-3.527051,-1.648529],[-9.416252,5.101636,-4.614581,9.209192,9.893419,-7.784942,9.470401,1.260929,-0.162225,4.112865,-2.349404,7.541170,9.490494,-6.208521,6.192278,5.168605,6.097712,-6.638433,9.361568,-4.398515,-0.901757,1.986541,-4.766483,-9.719595,-8.332796,1.452438,-5.589899,-4.996220,8.783708,8.425968,6.900265,-4.508171,-0.156203,-4.908568,-1.480935,-2.806556,-8.866450,5.782354,-7.560954,6.760311,8.283115,8.984003,9.332244,7.477898,4.183539,-8.259189,-0.740261,6.261052,4.329113,-8.308302,9.791253,-7.882170,-9.300948,-7.151916,8.280319,8.536701,-4.826228,4.362145,3.822642,-8.643677,3.083627,3.531538,3.237544,-0.262587,5.440091,3.303565,6.895506,-5.736375,8.644374,7.034683,-8.469494,9.495881,0.715629,-4.270842,0.491216,6.794208,3.847646,-4.250998,-4.235548,-6.805081,8.564217,-2.434463,1.472709,-8.155061,2.635182,-0.658502,7.809487,-9.271847,-7.950135,7.160196,-1.666502,-4.164006,0.974624,-5.374565,-9.232543,5.048386],[-9.716681,-6.009125,-9.342885,-6.597247,-0.289773,2.894963,-9.089006,4.090301,1.674669,9.040958,9.605008,9.965686,-2.309006,-6.928611,-0.607572,1.735835,6.882794,7.653569,-5.531723,1.903984,-5.182072,-7.732132,0.255063,5.483469,-7.767980,-8.791623,-9.255162,2.992787,4.949485,4.934870,7.109824,6.529547,8.814482,6.124670,-6.573382,-1.795814,9.762685,-8.854092,-2.358993,8.544768,-8.953543,1.363064,-3.350228,7.088183,-6.460126,6.997581,0.438656,3.535781,9.077746,7.195721,4.883483,-8.466526,-3.439106,4.409438,-6.383098,-1.396606,-0.936669,-7.830553,-5.567679,9.993994,-7.498338,-1.228745,1.518182,-1.767893,-2.576482,-2.625682,-4.739781,5.700558,7.622531,9.131370,7.184225,-7.322900,6.056438,-4.151943,9.559363,7.013896,8.720700,2.396650,5.554193,0.592263,0.267171,8.772391,3.862145,3.061419,-2.472145,-5.964707,-9.325363,1.625117,3.678352,0.883898,0.609659,4.388562,-1.015593,8.441706,-7.455961,-9.265749]], dtype = "float64")#candidate|2355|(10, 96)|const|float64
call_2354 = func_1932_call(relay.reshape(const_2355.astype('float64'), [10, 16, 6]))
call_2356 = func_1932_call(relay.reshape(const_2355.astype('float64'), [10, 16, 6]))
bop_2371 = relay.floor_mod(const_2355.astype('float64'), relay.reshape(call_2354.astype('float64'), relay.shape_of(const_2355))) # shape=(10, 96)
bop_2374 = relay.floor_mod(const_2355.astype('float64'), relay.reshape(call_2356.astype('float64'), relay.shape_of(const_2355))) # shape=(10, 96)
output = relay.Tuple([call_2341,call_2351,const_2352,bop_2371,])
output2 = relay.Tuple([call_2342,call_2353,const_2352,bop_2374,])
func_2381 = relay.Function([], output)
mod['func_2381'] = func_2381
mod = relay.transform.InferType()(mod)
output = func_2381()
func_2382 = relay.Function([], output)
mutated_mod['func_2382'] = func_2382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1654_call = mod.get_global_var('func_1654')
func_1655_call = mutated_mod.get_global_var('func_1655')
call_2423 = relay.TupleGetItem(func_1654_call(), 0)
call_2424 = relay.TupleGetItem(func_1655_call(), 0)
var_2425 = relay.var("var_2425", dtype = "bool", shape = (13, 15, 16))#candidate|2425|(13, 15, 16)|var|bool
bop_2426 = relay.add(call_2423.astype('float64'), relay.reshape(var_2425.astype('float64'), relay.shape_of(call_2423))) # shape=(13, 15, 16)
bop_2429 = relay.add(call_2424.astype('float64'), relay.reshape(var_2425.astype('float64'), relay.shape_of(call_2424))) # shape=(13, 15, 16)
output = bop_2426
output2 = bop_2429
func_2432 = relay.Function([var_2425,], output)
mod['func_2432'] = func_2432
mod = relay.transform.InferType()(mod)
mutated_mod['func_2432'] = func_2432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2433 = relay.var("var_2433", dtype = "bool", shape = (13, 15, 16))#candidate|2433|(13, 15, 16)|var|bool
func_2432_call = mutated_mod.get_global_var('func_2432')
call_2434 = func_2432_call(var_2433)
output = call_2434
func_2435 = relay.Function([var_2433], output)
mutated_mod['func_2435'] = func_2435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_2470 = relay.TupleGetItem(func_1471_call(), 1)
call_2471 = relay.TupleGetItem(func_1473_call(), 1)
output = relay.Tuple([call_2470,])
output2 = relay.Tuple([call_2471,])
func_2476 = relay.Function([], output)
mod['func_2476'] = func_2476
mod = relay.transform.InferType()(mod)
mutated_mod['func_2476'] = func_2476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2476_call = mutated_mod.get_global_var('func_2476')
call_2477 = func_2476_call()
output = call_2477
func_2478 = relay.Function([], output)
mutated_mod['func_2478'] = func_2478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2381_call = mod.get_global_var('func_2381')
func_2382_call = mutated_mod.get_global_var('func_2382')
call_2482 = relay.TupleGetItem(func_2381_call(), 3)
call_2483 = relay.TupleGetItem(func_2382_call(), 3)
output = call_2482
output2 = call_2483
func_2487 = relay.Function([], output)
mod['func_2487'] = func_2487
mod = relay.transform.InferType()(mod)
output = func_2487()
func_2488 = relay.Function([], output)
mutated_mod['func_2488'] = func_2488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_2522 = relay.TupleGetItem(func_1695_call(), 0)
call_2523 = relay.TupleGetItem(func_1697_call(), 0)
func_1862_call = mod.get_global_var('func_1862')
func_1867_call = mutated_mod.get_global_var('func_1867')
const_2525 = relay.const([4,10,7,-1,-2,-5,-7,1,-4,-6,-5,-10,-6,2,-6,5,-8,2,-6,-2,-5,5,1,-3,4,-1,-4,4,3,-9,-4,1,-1,7,-9,6,-5,6,-10,10,-6,2,4,-2,-3,-6,-7,-7,1,6,3,1,-4,4,4,7,-7,-4,7,5,-8,7,7,4,7,7,-1,-10,5,-8,-9,3,-5,6,2,4,-2,5,-4,-9,-8,-3,-5,5,-10,-1,9,-7,-10,8,4,-3,-2,8,-9,7,3,8,6,8,-6,6,-4,10,4,7,10,6,2,8,-9,1,-6,10,10,-5,-8,2,4,5,1,-7,5,3,-5,7,5,-8,6,-10,-7,-5,-7,-6,-10], dtype = "int16")#candidate|2525|(135,)|const|int16
var_2526 = relay.var("var_2526", dtype = "float64", shape = (2, 72))#candidate|2526|(2, 72)|var|float64
const_2527 = relay.const([-2.071283,5.842422,-6.065981,-5.620038,6.095654,8.063488,-1.908012,-2.125464,1.305048,-6.236033,5.679138,-2.702853,-5.311626,9.899436,0.307757,3.371122,2.880572,-6.772818,3.399394,-8.394419,-0.090703,-2.090956,7.501304,-1.249736,6.702747,-3.323025,2.379493,-7.575724,8.562443,8.999777,5.678846,-0.558077,4.976635,-2.521179,-6.083686,-2.183597,-3.267800,7.958099,1.961885,-3.240642,2.872862,7.489755,2.554318,-1.606902,8.578687,7.664450,-0.940517,8.179374,-9.741931,-1.723593,-8.302466,-7.151471,0.389764,-9.022491,8.119080,8.060714,4.410184,1.488356,-4.339956,8.174032,-4.358094,9.226486,-6.125177,-3.845524,-5.548357,6.525741,3.796253,-9.962040,-8.744644,6.264854,3.170229,-0.670376,7.558951,-3.278784,0.329699,8.759213,-8.842499,-4.840201,6.900528,-7.825179,2.169190,-1.744033,0.448945,1.947664,6.920412,5.502758,1.946163,3.793053,2.765149,-0.143960,6.842168,-2.020082,-0.444918,9.753185,-3.342840,-0.325072,0.254532,-3.918086,1.567662,-9.885125,4.314546,8.570150,3.793610,2.135572,-8.817851,7.788528,-0.113443,-1.666175,-3.058451,-4.728713,3.515192,-8.234804,-1.860242,8.257298,-6.668370,-6.430964,4.761120,-0.306816,1.379081,8.252306,-2.156432,5.821362,5.306723,6.705546,3.090099,-1.354219,-1.042269,-8.072468,6.515699,-0.477888,5.045926,5.093936,9.542934,-0.531575,-2.627717,-6.963100,-1.477993,2.766928,0.148495,-7.876531,-0.903511,6.498735,8.815313,7.128192,9.539096,7.949114,9.782567,9.965631,-8.341416,5.594484,-3.440128,7.068863,8.916390,-0.741793,-1.385649,-6.750770,1.948757,3.350502,9.894989,9.962270,7.874518,6.461174,-6.624757,3.398045,-1.102018,7.518720,-7.308491,-8.938689,5.530653,9.084533,7.659898,-4.332815,1.466099,4.828807,2.394993,-8.586985,5.522027,5.168678,-4.914860,7.785540,4.400151,0.161721,5.883177,4.044084,-4.356451,-2.206536,-9.247701,-8.371641,3.481517,-0.609498,6.499401,5.856802,0.083631,-6.094484,8.929042,-4.470142,-9.651154,-1.110086,6.343362,-6.605890,-5.679442,7.648594,1.128527,0.521821,-5.120037,6.710863,-6.839183,-3.722184,3.270193,6.282995,-4.010321,4.860558,-0.820757,1.239245,-3.744281,1.363351,-8.296345,6.593201,6.342085,-4.398702,7.961980,6.832437,-8.641359,8.402397,-4.179886,-8.465854,-1.945275,2.893610,-2.413076,5.536615,-5.136288,6.477754,9.286491,-2.752015,1.263736,-4.260093,2.119833,-3.094837,-5.091960,4.111313,8.237201,7.951114,-4.603181,-5.530921,9.056360,5.577793,-9.268639,7.708032,9.896490,-1.289094,-4.766297,9.081593,-0.061735,-5.144633,2.585061,1.412357,4.945407,7.723249,2.843170,-5.050905,7.583111,-3.148836,6.623313,7.598407,-5.525180,1.590394,6.064172,-2.451369,8.284438,-8.198938,-9.069850,0.997589,-7.830188,6.546212,-5.716039,3.141784,2.633197,7.961801,3.519563,-4.771377,7.182231,-3.242719,-2.184908,-9.921931,8.407535,8.878456,2.825022,-6.875998,8.456176,7.993151,1.840255,3.483106,4.700195,6.382952,3.464561,-7.248034,-2.047564,2.085074,6.160239,-8.756406,-1.633786,-0.510361,-3.128116,-2.581087,4.751170,2.364296,-6.805065,3.472205,9.321153,-4.790807,-9.118439,8.891620,7.337504,-7.553566,6.828386,-0.716580,-1.843160,8.420666,2.404302,-6.621967,8.693497,8.961365,-0.746014,8.021959,-0.326455,-9.643128,-9.278826,8.290034,9.951029,-8.283902,-6.690447,-3.786043,-1.567389,5.584050,3.853563,-7.032348,8.582360,-5.481702,-8.187872,7.532533,7.562651,-5.690122,-8.469410,-9.810360,3.141647,-2.269147,7.807543,-4.523514,-2.777244,7.472384,2.620025,-1.599120,0.322808,-1.709325,3.720809,-4.788912,9.774719,-6.265444,-4.226089,3.354502,-5.030515,7.223268,8.659940,6.607686,8.105959,9.183423,-1.199875,7.620432,7.134907,1.437959,-0.357118,3.938583,-6.431656,2.773015,-4.517594,-0.935505,-0.483389,-0.406029,6.439946,4.607023,-6.995116,1.603668,-2.785114,0.975092,-8.444381,-3.661542,-6.435172,1.147422,-9.672826,-6.098366,9.920364,8.148424,-2.808290,3.231086,6.531994,5.021033,-8.507296,-7.394673,1.166450,-9.588517,-9.300381,-9.481370,-9.941275,-6.169431,-1.882880,-0.333993,6.873868,2.855523,0.697496,-8.902129,5.780295,2.926659,-4.043574,3.701152,5.039062,-7.531854,-4.645799,-7.843520,-7.100154,2.361219,8.912199,-5.470962,0.609996,4.147737,1.616326,7.617039,4.233750,-2.781584,-0.445243,2.402423,0.245960,-6.557974,3.366552,-8.900098,4.163964,-3.960704,1.322206,9.787858,3.759031,-7.937285,-7.066178,3.341818,-0.390990,-0.065154,3.056805,-4.555061,8.241835,7.264537,4.369269,-7.798324,1.592919,-9.980844,5.784503,-5.984033,-7.645502,4.406914,-6.085388,-5.548159,-2.309835,-4.376080,-6.221838,-7.118728,3.755236,-9.687213,-9.991667,3.940964,-6.197242,-6.519520,4.798063,-3.667679,8.529619,4.930661,-9.880256,-2.221877,-2.462876,7.410964,9.928406,-1.430034,3.572864,-2.731123,6.895754,9.701432,9.221181,1.508065,-3.395140,-5.405350,-1.219368,-8.370934,2.770071,8.515112,4.367214,-6.681990,6.883298,0.348037,-9.939787,-3.462419,1.887624,4.677301,6.314457,7.712660,-4.898013,-0.585598,9.026733,7.780673,0.745060,-0.258288,4.062818,-9.298034,6.163076,9.596709,5.801852,9.001428,-7.030344,8.406084,-1.004860,7.495511,-6.656964,8.369148,-5.355434,-7.243849,0.593993,-2.527159,2.355524,9.123502,-5.989002,-0.233614,-5.025397,-9.500230,-9.212953,1.788423,7.676630,5.702606,-2.956720,8.895661,-6.971160,-3.510620,0.992722,-9.079503,3.918025,9.195472,6.131303,8.802754,-1.406881,-2.320546,4.587077,3.408360,-7.532122,-0.207553,7.217264,-8.654824,9.572857,2.117020,0.581855,-9.857532,-9.144012,0.788786,0.622924,9.816879,-6.270869,0.814817,8.904826,-6.172331,7.756891,-1.612962,5.636934,-3.242642,-1.569271,0.381540,-3.091414,-2.327069,9.864558,-9.666272,5.013765,-1.366105,1.452380,4.853424,-5.423468,-5.397640,2.770892,-2.794698,2.453804,3.136172,3.734744,-8.179840,-0.107733,-0.738718,-2.385888,2.462451,-8.225451,6.797082,0.135877,9.557163,0.885243,7.768057,-2.392055,4.284136,3.942998,0.086083,2.399757,-1.031599,3.011148,5.011998,9.114755,7.165637,7.778949,1.623730,1.577601,-7.279472,-9.012409,7.844249,-9.543013,0.548266,-1.081347,-2.020049,-6.223407,8.676591,3.873343,0.912521,0.964169,-3.961080,4.267712,9.768219,-7.208685,7.742005,-8.162446,-0.830050,1.499772,-4.466485,-5.823509,8.237359,0.654028,-4.381906,-3.885355,2.650316,-2.639140,-8.109221,2.790602,9.687367,9.201746,-4.820554,5.163749,-6.501254,-4.453478,-1.696738,6.175545,0.168202,2.865575,6.827444,5.679784,9.254023,9.854907,-4.673814,-2.217293,-5.407360,-6.092006,8.264922,2.726371,6.255738,-3.942684,7.615167,3.876221,-4.998563,-4.941322,-6.531209,-3.886432,-1.460763,6.166087,-9.450578,-5.964128,-5.401491,4.288252,-9.447742,9.573224,5.790085,-0.602778,-3.226044,8.194308,-0.650168,-0.410392,-5.735350,-5.577340,-9.462728,3.959637,9.174473,-2.780038,-4.652960,4.028930,-5.224302,-1.787132,-3.617684,-4.088432,6.573110,5.657909,-5.840362,-9.213317,-4.997173,6.575969,3.515772,4.566087,-2.171657,-8.119520,-8.291067,5.046339,-6.325830,-0.345363,-0.291796,1.564253,-5.990084,2.812371,2.894160,7.541778,2.690260,-8.850882,2.950231,6.461082,3.552167,0.008363,-0.937638,8.266058,-2.142486,6.310034,-4.983104,-7.116056,-9.003360,0.586951,-6.329163,2.468768,4.999169,-9.918596,-5.102581,-6.770836,9.581727,8.866588,4.793850,-1.351298,-6.430567,-0.491907,5.992963,5.812076,7.540135,6.404457,-4.841286,7.466100,-0.284636,-4.754272,1.582179,4.478005,-9.995238,-2.368100,2.758876,-6.779304,6.986685,-0.670140,7.625479,-5.813263,7.156032,-2.534098,-3.446244,9.034290,0.279689,0.318245,1.424182,1.340447,7.273607,6.841649,7.003292,-8.774440,-2.688672,3.247569,4.396400,-5.130159,9.369965,-5.155091,-3.887276,-8.490296,4.979387,0.337661,-9.931866,1.641449,-5.942926,-1.911739,-8.280887,-1.360189,-8.837432,-1.408896,9.185283,-8.375858,-8.408945,1.416824,-5.138645,-1.623330,4.555222,-5.484830,8.759191,-8.355282,-1.033644,8.003996,3.241504,-1.191270,9.070226,7.375728,8.174497,1.231239,-8.552994,0.740325,-8.985474,8.212161,9.783236,-9.402885,3.161160,-5.871093,7.140819,-4.508678,-2.096341,-5.500910,5.296070,-3.677118,4.642543,-3.920358,-4.434439,2.019419,-3.984145,3.907409,-9.204932,-7.550525,-8.293054,-3.184242,-9.734268,-8.780882,4.271350,-9.938440,1.607638,6.782487,-8.013810,-7.317982,6.861987,6.885946,-7.810237,3.134783,-1.361489,-5.869915,7.439730,0.884646,5.476384,-3.306318,-7.140158,-9.113181,2.193971,6.897188,1.731030,8.124770,4.101016,-2.992956,6.196263,-6.462151,8.665007,-9.569762,6.001446,-1.134531,5.433134,7.016200,3.113184,1.853697,-3.774506,-6.633969,4.626556,-7.334799,7.242217,-6.158073,6.865311,-4.753799,-6.662831,0.845561,-2.920161,-2.765717,-3.147887,-7.770933,9.737605,-9.585011,-9.734506,-1.695692,-4.007664,-9.392848,3.385170,-8.926020,6.691713,-0.759285,1.339411,-2.528631,9.911664,-8.455342,-8.260377,-8.548097,-6.384091,4.280077,1.256432,-5.606630,1.863287,1.798724,-2.795288,4.185824,2.905252,5.830005,9.889879,-3.786435,-0.175584,-2.882338,0.565251,6.425831,4.206607,-0.867131,-6.781290,5.891224,4.024845,-8.751612,-5.272221,-2.031182,3.583284,5.718615,5.050948,-5.569374,-0.601633,-3.569933,0.238252,3.922697,2.727229,9.908597,7.649868,9.955914,-1.550510,-0.880787,3.606893,-3.478189,-9.264645,6.096494,2.144598,8.005818,-2.743984,-0.622922,9.100745,-3.697153,9.319094,-4.282934,-7.856846,-5.053214,-6.403727,-5.412854,3.364606,-3.704229,-9.082689,6.331321,1.782286,1.901093,-4.422794,2.689988,0.952737,-6.319134,-0.694056,8.666859,-4.681524,1.253797,-9.044227,-6.500100,-0.380912,1.728052,-0.911830,-0.584550,-6.199015,1.716807,4.788112,-4.035149,2.229126,-8.350812,-2.724497,-0.614160,3.592417,4.162075,7.989344,9.338519,-1.882036,-5.888070,3.513162,4.085962,-1.485530,-0.686429,7.559660,5.655077,-1.788786,-7.071430,5.258681,5.885682,-1.914498,6.955862,8.569076,3.155446,8.105018,-7.363435,2.450248,-1.192972,1.295169,0.379319,-6.298280,3.478980,-8.967718,8.185553,-1.625667,-6.698654,2.605632,5.477935,-4.893855,-0.564247,-2.639910,-1.498404,-8.510453,-9.067769,-0.227591,1.335723,-5.990495,9.508368,-7.728324,-8.597242,2.733930,-4.287937,-2.777692,4.315293,-1.941709,4.231331,8.234401,-2.182743,-1.775327,7.331644,0.238527,8.288213,7.425136,-3.457570,1.632830,-1.988151,-1.346545,9.659491,-1.206402,8.115483,6.069702,-3.446483,3.023476,-6.151059,7.748298,-1.676730,-0.374029,-6.301893,-8.102960,-1.877070,9.351601,-7.733518,9.241957,5.560092,4.943139,-8.447118,6.959950,7.174809,-0.051068,-7.873641,5.460700,-7.781760,4.085003,4.338375,0.601874,5.135942,-8.228838,-2.201446,-3.826822,-4.160814,5.659533,-2.296670,3.517959,6.588496,0.900083,9.241728,-8.971397,7.346616,-7.101432,3.576878,-2.824699,-6.415060,-8.032634,-3.216057,-8.287166,-1.153886,1.149328,-0.549146,-0.241117,-9.849196,-3.818401,-4.506118,1.630756,-5.371425,-5.247122,-1.730231,-7.615573,-7.701937,1.086606,5.858832,8.560197,7.028445,-7.363754,5.440869,9.991437,3.119783,7.121386,-0.892140,9.393428,-3.093199,-6.227715,-3.098814,6.171783,-2.617500,8.594522,4.629360,7.255691,1.554124,-1.753340,0.209940,0.106892,3.928158,-7.445683,1.303321,-9.601815,-3.001176,-5.226272,-1.951079,3.739891,5.890151,-3.929371,1.330677,5.166339,-9.013840,4.758310,-4.774551,-7.870118,1.248990,0.910741,-2.110250,-2.781339,0.786639,2.934011,-7.567912,-2.095853,7.676987,-9.769229,-9.571242,3.145371,-5.166398,-2.372012,9.668443,-1.611026,-1.059853,-1.703203,-4.516346,6.977637,2.573950,7.295599,4.497840,1.667507,-9.549858,2.721768,-6.425120,5.723200,4.412513,0.012942,-8.157846,9.228040,9.897707,8.269565,-1.789127,8.082422,1.020071,9.703170,-1.531913,0.327366,6.766299,-1.061030,-3.272161,-5.216025,9.978224,-5.533470,6.463714,-6.131016,8.752479,-1.615144,-0.331665,-6.537578,-8.514229,-9.855564,-0.760613,-7.663414,-3.735090,9.202010,-9.205243,-0.945058,9.794746,-3.006536,-1.125822,-0.069909,-8.993713,1.767595,-9.420795,1.146689,-5.094798,-3.090725,4.063109,-5.491732,5.830350,-5.033424,4.955996,1.573467,-0.971868,7.168577,1.252679,-5.613296,2.465532,-0.025464,7.099196,-5.382359,-6.514433,4.849685,4.935193,1.910702,0.002498,9.695696,2.420339,-6.785194,-7.972159,-6.207137,8.472531,8.829516,8.364894,-8.401712,5.030789,-3.477727,9.317442,-9.849563,8.159928,3.263255,0.230844,4.989279,-5.708597,-0.033074,3.147136,-0.406044,-5.779986,6.703629,1.648561,-8.224302,7.215452,-2.017382,-5.744326,7.849182,6.086981,9.538317,8.242534,3.638082,-2.512586,-5.572053,-0.800428,-5.249348,9.234529,-1.515381,9.777003,5.800654,2.408155,-9.063738,-8.388498,8.015742,-1.494327,9.089090,1.204171,9.405710,-4.611720,-6.085704,-6.304737,1.928407,-6.589286,4.197591,5.426041,-6.011173,-4.751163,-4.999519,8.462658,-1.072395,-7.019678,0.701709,-5.962973,4.770295,4.921326,-5.835412,-6.595419,7.355922,9.159209,2.137708,4.412499,-2.185977,-5.307606,9.446834,-1.187432,6.440587,8.890210,0.503565,-0.793122,-7.229065,-5.847886,5.649559,8.910331,3.883208,1.020100,5.609380,0.298515,7.460881,-8.763279,7.490336,-0.787236,-8.551505,7.192317,-7.424768,-5.590532,0.114953,7.662585,-6.149114,1.585183,6.300203,-2.196223,-7.808918,-6.464673,4.070731,-4.741040,-0.195816,6.289002,-1.630515,-6.183277,-2.413286,2.463301,3.496182,8.485669,0.616001,3.441781,9.030104,1.692301,1.233099,2.194899,6.990741,9.974107,6.969390,-6.707321,-0.622862,-3.153400,2.230874,-9.736615,-4.304147,-2.926967,6.222639,-6.080525,6.318223,-4.035525,-5.196780,4.547326,1.685562,7.926592,-0.813951,-8.328991,-4.774220,7.113155,-8.379984,-6.221134,6.140316,7.564169,-9.697096,-4.076033,2.069706,3.326376,-6.270851,8.883396,5.984641,-4.593489,-2.029172,-4.509760,4.143446,2.911247,-7.793573,-8.066754,-2.653585,-8.927263,-6.068726,7.176785,9.287184,9.168464,1.916523,1.628408,1.931152,-4.515900,-8.270563,-9.173411,1.534959,2.766512,8.661169,2.353900,8.530265,-8.974480,-0.299761,-6.312442,-9.066739,-4.235507,-9.756518,1.318744,6.663613,-6.700838,-5.133923,-3.890734,-0.021017,3.221855,3.378342,7.240509,-9.162281,-6.209971,0.380068,-5.925362,-3.209188,-1.968860,-1.542671,-7.830025,4.298822,8.206481,1.048357,8.320762,-6.425145,9.111897,-4.373083,-7.780378,4.358838,2.696230,2.920883,-2.876586,-5.094296,6.978554,-7.636589,6.370843,-4.231800,-4.628636,-4.772943,0.910444,-0.230253,-8.336796,7.254653,-8.070184,-6.209128,-5.961673,2.212164,4.372491,6.736278,7.420603,6.902146,7.419082,6.039849,9.428362,-5.447129,-7.560804,-9.906691,9.253473,-2.658090,-2.501209,7.228212,-1.388934,3.543787,1.535149,-6.925111,4.608585,6.507224,2.671811,-9.528958,-8.352116,3.693289,4.555369,6.489762,-7.726453,-8.919989,-0.535974,0.325916,6.280407], dtype = "float32")#candidate|2527|(1485,)|const|float32
const_2528 = relay.const([7,5,-5,-7,-4,9,-9,5,6,3,-2,-9,5,2,-9,3,6,-5,9,-4,-8,8,-5,-1,10,2,4,-7,-3,6,-1,-7,7,7,-6,8,-6,-3,9,2,10,3,9,5,-10,-1,8,-7,-10,10,9,-1,-4,8,10,5,5,-2,-10,6,7,-3,3,-1,-8,10,7,-2,8,4,-9,-6,7,-1,-6,-8,-4,10,-3,-2,-10,-8,-6,9,10,1,-4,-8,-6,9,5,7,-8,-9,-7,-2,3,-7,-10,-2,2,4,10,-9,10,-10,-7,6,-7,-8,6,-3,-10,8,9,-10,3,8,-5,-2,7,2,1,9,1,-2,7,-5,-8,-5,-5,9,-9,1,-4,-9,-5,4,8,-3,3,7,-3,-7,5,7,8,-8,-2,3,10,-8,-4,10,-10,-1,10,-2,-10,1,10,-5,-5,9,2,5,5,-8,8,1,2,-10,1,5,-1,-9,6,3,-9,-9,4,4,7,-10,-9,-4,4,5,-8,-9,9,-1,-3,8,-7,-2,1,2,-7,7,-3,9,7,-5,6,-3,3,2,10,-8,5,10,6,-7,4,1,5,7,5,6,-7,8,4,-5,-8,-1,-5,-10,-1,-5,1,4,-5,-9,-2,-4,5,-6,10,1,-6,-2,3,3,-10,-1,-4,8,-6,10,3,5,-5,-5,6,-2,10,3,-5,7,5,-8,-5,-8,5,-6,-3,-4,-6,3,7,-4,9,-10,4,-2,9,7,6,2,-3,-10,3,-5,5,1,-3,-2,-4,7,-2,-8,8,-5,-1,6,9,-10,-1,1,3,1,9,-6,-6,5,-1,10,-10,-6,4,-5,-9,5,-2,-8,-10,-10,-10,6,-9,-5,3,4,10,4,-1,7,6,9,-10,-2,6,1,-8,4,-7,-2,2,-2,5,8,-7,-5,9,-10,3,-9,-5,6,9,-3,-9,-5,-10,-5,4,-10,-8,-3,-10,-6,-6,3,7,-7,9,3,8,9,6,4,5,3,8,10,1,-3,1,2,-5,-4,-2,2,-4,7,-5,4,-4,5,2,-4,-3,2,10,2,5,-10,3,-5,3,9,-5,-7,-9,-3,-10,-6,3,-7,-3,8,6,-3,10,-6,-1,10,-9,5,1,-8,6,-4,-3,-3,1,-6,-1,-6,8,5,-8,-5,4,-2,1,-8,6,-7,-4,-9,2,-9,-4,-4,-6,2,-6,2,1,4,6,1,5], dtype = "uint16")#candidate|2528|(455,)|const|uint16
call_2524 = relay.TupleGetItem(func_1862_call(relay.reshape(const_2525.astype('int16'), [9, 5, 3]), relay.reshape(var_2526.astype('float64'), [1, 144]), relay.reshape(const_2527.astype('float32'), [1485,]), relay.reshape(const_2528.astype('uint16'), [455,]), ), 3)
call_2529 = relay.TupleGetItem(func_1867_call(relay.reshape(const_2525.astype('int16'), [9, 5, 3]), relay.reshape(var_2526.astype('float64'), [1, 144]), relay.reshape(const_2527.astype('float32'), [1485,]), relay.reshape(const_2528.astype('uint16'), [455,]), ), 3)
output = relay.Tuple([call_2522,call_2524,const_2525,var_2526,const_2527,const_2528,])
output2 = relay.Tuple([call_2523,call_2529,const_2525,var_2526,const_2527,const_2528,])
func_2533 = relay.Function([var_2526,], output)
mod['func_2533'] = func_2533
mod = relay.transform.InferType()(mod)
mutated_mod['func_2533'] = func_2533
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2534 = relay.var("var_2534", dtype = "float64", shape = (2, 72))#candidate|2534|(2, 72)|var|float64
func_2533_call = mutated_mod.get_global_var('func_2533')
call_2535 = func_2533_call(var_2534)
output = call_2535
func_2536 = relay.Function([var_2534], output)
mutated_mod['func_2536'] = func_2536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_2538 = func_2487_call()
call_2539 = func_2487_call()
func_1636_call = mod.get_global_var('func_1636')
func_1638_call = mutated_mod.get_global_var('func_1638')
const_2551 = relay.const([-2.142177,5.883167,6.850490,2.164605,8.640979,-2.483230,9.109975,0.662060,8.940514,3.775422,4.164622,-9.824711,6.379826,8.549494,-0.265108,-6.004817,9.093657,6.115191,6.328554,2.572503,2.644904,6.426998,-8.809866,2.643444,-5.489505,-4.986990,-4.230090,-0.151872,-6.097531,-7.991801,-6.065151,3.100737,-0.481910,-8.239185,-1.405205,-8.250631,5.622278,-1.767848,-0.954106,-3.727472,-2.698476,5.612766,1.578367,-9.114431,1.039833,-6.012844,7.364636,0.501298,-6.174696,-1.641868,5.081740,-9.625055,-8.128047,-0.236367,5.867876,-2.884466,-1.436462,-6.356790,6.583539,7.748834,0.665718,-6.873862,-7.950020,-9.468692,-3.563322,7.467261,-8.621614,-9.376272,-9.690389,8.495187,6.462718,3.829696,8.791676,2.190642,8.697333,9.603113,3.003729,0.945934,4.734914,-4.813114,-9.071948,-8.119453,-0.107668,-6.407616,0.859840,-0.234420,9.141009,-5.743308,7.459683,9.073247,1.346340,6.082844,-6.427212,-3.365432,-9.123212,2.796639,-3.547666,6.639365,3.352471,9.274627,-0.024165,3.129296,8.252338,-1.750829,-0.026607,5.857155,3.106581,-2.341434,-6.218164,2.141952,8.910611,9.290634,-6.157990,-4.892869,-9.259821,5.787272,5.457759,-7.833254,-5.515717,8.735698,-0.902648,-9.380287,8.200648,-1.490573,1.804580,8.481939,-0.440448,-7.214595,5.055389,-1.635714,-6.007619,-5.923645,9.564534,2.166321,-9.336605,-8.321003,7.231440,-4.000295,1.133200,-8.771910,-9.026012,3.223437,9.922312,-3.665205,4.695663,-6.732785,-4.449681,4.328068,-5.111047,9.973790,-1.517725,4.470631,8.061015,-5.413297,-6.095736,0.642127,-8.305290,-8.937134,0.880889,2.383768,9.182349,-5.573982,-9.401610,9.934706,-8.820181,7.035646,-7.355547,6.995371,-2.345807,-8.107118,-6.805778,-9.485796,8.422256,-9.184942,1.411441,4.869923,-4.579055,-5.083526,4.312985,1.976188,-9.646618,-9.356963,4.166646,-1.481271,-7.309476,4.641311,0.938654,7.835923,-5.478761,8.530013,8.768408,-6.504291,-8.470109,5.228322,6.534771,-2.251474,7.873899,-2.557203,-2.024239,1.971170,-3.790340,4.394159,-8.701544,-1.188193,5.217741,-2.078813,-1.107651,-1.233430,5.725835,-8.694038,-2.892004,-4.089661,-2.022141,-2.947445,-4.478966,8.131511,-1.381586,-7.431031,2.802297,7.736141,-6.323994,-5.669853,8.543420,7.138681,-5.390093,1.780161,-7.059871,-9.669233,-4.651942,0.421253,-9.392250,0.254960,-1.217491,4.217097,-4.801832,-1.484451,-8.380944,7.868372,2.796403,-3.550561,2.834553,-7.070055,-5.741554,-5.138948,5.839123,0.532689,-5.681098,4.433534,-1.046532,-3.534571,1.317392,6.183904,8.745541,6.019722,7.057321,-7.786073,6.335860,3.567021,-3.877987,5.698494,6.472769,7.552630,1.390414,-0.983817,-5.497438,6.222411,1.684777,4.139094,0.706158,4.818993,6.602661,1.441546,-8.554797,-7.038173,-6.411687,2.412849,-6.008930,1.868733,9.708817,6.919048,0.500550,5.414692,0.408003,4.329401,-4.656276,6.189412,0.399433,-0.044168,3.822779,-7.012848,-9.654905,-5.018127,-1.969352,0.080032,0.362791,5.857200,7.704124,-3.912862,-6.465149,4.827830,-0.293934,-9.163929,-8.272941,-7.024207,7.221177,2.226295,-7.496907,-1.118554,-0.171208,-0.352844,-8.981001,-8.442397,-5.623549,-7.656136,-2.827580,5.837404,-5.544487,-2.996144,5.287089,4.481983,8.532746,-1.427355,-1.600398,9.885705,-2.876108,-4.202622,6.670016,-9.213993,7.937682,-0.715186,8.423709,8.342218,9.733108,-5.528767,-9.526609,5.970133], dtype = "float64")#candidate|2551|(336,)|const|float64
call_2550 = func_1636_call(relay.reshape(const_2551.astype('float64'), [7, 12, 4]))
call_2552 = func_1636_call(relay.reshape(const_2551.astype('float64'), [7, 12, 4]))
func_2287_call = mod.get_global_var('func_2287')
func_2290_call = mutated_mod.get_global_var('func_2290')
var_2559 = relay.var("var_2559", dtype = "float32", shape = (1, 182))#candidate|2559|(1, 182)|var|float32
call_2558 = func_2287_call(relay.reshape(var_2559.astype('float32'), [14, 13, 1]))
call_2560 = func_2287_call(relay.reshape(var_2559.astype('float32'), [14, 13, 1]))
output = relay.Tuple([call_2538,call_2550,const_2551,call_2558,var_2559,])
output2 = relay.Tuple([call_2539,call_2552,const_2551,call_2560,var_2559,])
func_2568 = relay.Function([var_2559,], output)
mod['func_2568'] = func_2568
mod = relay.transform.InferType()(mod)
mutated_mod['func_2568'] = func_2568
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2569 = relay.var("var_2569", dtype = "float32", shape = (1, 182))#candidate|2569|(1, 182)|var|float32
func_2568_call = mutated_mod.get_global_var('func_2568')
call_2570 = func_2568_call(var_2569)
output = call_2570
func_2571 = relay.Function([var_2569], output)
mutated_mod['func_2571'] = func_2571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_2597 = relay.TupleGetItem(func_1695_call(), 0)
call_2598 = relay.TupleGetItem(func_1697_call(), 0)
func_2533_call = mod.get_global_var('func_2533')
func_2536_call = mutated_mod.get_global_var('func_2536')
var_2606 = relay.var("var_2606", dtype = "float64", shape = (144,))#candidate|2606|(144,)|var|float64
call_2605 = relay.TupleGetItem(func_2533_call(relay.reshape(var_2606.astype('float64'), [2, 72])), 5)
call_2607 = relay.TupleGetItem(func_2536_call(relay.reshape(var_2606.astype('float64'), [2, 72])), 5)
output = relay.Tuple([call_2597,call_2605,var_2606,])
output2 = relay.Tuple([call_2598,call_2607,var_2606,])
func_2609 = relay.Function([var_2606,], output)
mod['func_2609'] = func_2609
mod = relay.transform.InferType()(mod)
var_2610 = relay.var("var_2610", dtype = "float64", shape = (144,))#candidate|2610|(144,)|var|float64
output = func_2609(var_2610)
func_2611 = relay.Function([var_2610], output)
mutated_mod['func_2611'] = func_2611
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2740 = relay.const(1.383210, dtype = "float64")#candidate|2740|()|const|float64
var_2741 = relay.var("var_2741", dtype = "float64", shape = (6, 1))#candidate|2741|(6, 1)|var|float64
bop_2742 = relay.less_equal(const_2740.astype('bool'), var_2741.astype('bool')) # shape=(6, 1)
func_2142_call = mod.get_global_var('func_2142')
func_2146_call = mutated_mod.get_global_var('func_2146')
var_2749 = relay.var("var_2749", dtype = "bool", shape = (3120,))#candidate|2749|(3120,)|var|bool
const_2750 = relay.const([-8,-4,-3,6,-4,-7,-10,3,10,3,3,1,3,2,-2,3,-6,-8,-1,4,-5,-6,-9,5,3,1,-3,-7,-8,2,-3,-10,1,9,-2,-9,4,-2,-6,-2,6,6,-6,8,9,-5,-6,-5,-5,-10,7,-6,7,-4,6,4,1,-5,-3,4,6,8,6,-8,-6,-10,8,-4,5,-9,-5,-6,5,5,6,-1,9,-2,-3,-8,9,-3,-5,3,6,4,5,10,-9,9,2,-8,1,6,2,-4,3,9,6,-9,-4,-6,10,10,-8,-7,-10,3,-4,-7,4,-9,-1,-4,-10,9,-5,2,2,-7,2,-3,8,6,-7,-10,6,-8,8,4,-7,2,10,5,6,2,-5,-2,3,7,-5,-10,6,8,2,-2,6,8,7,-10,7,-3,-1,5,5,3,-9,-10,3,-1,-3,3,-6,-7,-8,8,-1,8,-7,5,7,1,10,-10,-3,-7,3,-6,-5,-6,10,-8,6,-4,-1,5,4,5,-9,-9,8,-7,-8,-2,5,-5,3,-7,-9,1,9,-9,2,-9,9,-3,5,-7,-2,7,-8,-2,4,-9,-2,3,8,4,-4,-1,10,9,4,10,5,-3,10,6,-7,-6,-7,10,-3,-5,9,1,10,7,-3,1,-6,3,-10,-9,5,-7,8,-8,-4,-7,9,-2,-7,-6,-8,10,-9,-8,-3,-9,-4,-9,-6,3,-9,2,-10,10,3,-6,1,3,-1,1,9,10,-6,8,-7,-3,3,8,-10,-9,-2,-4,-2,-5,1,7,-7,5,-10,-7,-6,-5,4,2,-2,6,7,7,8,-4,-9,9,10,9,-9,-6,7,-1,7,-4,4,2,-2,1,-2,-1,6,7,5,5,-2,-8,4,-1,-3,-9,7,-10,-10,-2,-6,5,4,9,8,5,4,-1,3,9,-7,2,-10,6,5,-4,3,-4,-9,-8,6,-7,5,1,9,3,-10,3,-9,-2,7,5,5,-6,-2,-3,6,-1,9,-8,-3,6,5,-3,-8,-9,3,6,-3,6,5,-6,-3,-3,-10,-3,-1,8,10,-4,-8,-7,7,1,-4,-7,-8,1,3,-4,-4,-10,9,4,-9,10,-1,10,-8,10,-10,2,-4,-9,-6,2,3,-8,-7,-2,1,6,8,-2,9,-10,-10,6,7,1,-10,5,2,-6,8,-9,-9,-2,3,5,5,10,10,-7,1,2,8,5,-3,-3,8], dtype = "uint16")#candidate|2750|(455,)|const|uint16
call_2748 = relay.TupleGetItem(func_2142_call(relay.reshape(var_2749.astype('bool'), [13, 15, 16]), relay.reshape(const_2750.astype('uint16'), [455,]), ), 1)
call_2751 = relay.TupleGetItem(func_2146_call(relay.reshape(var_2749.astype('bool'), [13, 15, 16]), relay.reshape(const_2750.astype('uint16'), [455,]), ), 1)
func_502_call = mod.get_global_var('func_502')
func_505_call = mutated_mod.get_global_var('func_505')
call_2752 = relay.TupleGetItem(func_502_call(relay.reshape(call_2748.astype('uint16'), [455,])), 0)
call_2753 = relay.TupleGetItem(func_505_call(relay.reshape(call_2748.astype('uint16'), [455,])), 0)
func_1636_call = mod.get_global_var('func_1636')
func_1638_call = mutated_mod.get_global_var('func_1638')
const_2764 = relay.const([-4.627768,2.557350,-5.337620,6.549345,-0.260006,-5.376762,9.106651,-5.786848,8.190592,7.832068,4.769457,-0.520494,5.760011,-9.302807,7.528731,-1.277847,-4.292830,0.082150,-0.392742,-2.228237,9.527451,6.110637,-3.888454,-6.080395,7.745077,-0.926150,-7.045140,5.717002,-5.101826,-4.572126,1.963126,6.012389,-2.967637,-9.653436,6.987345,-6.223700,1.009999,-6.597782,7.601298,5.440229,-9.646863,2.203368,-7.438433,8.073895,-1.143318,-2.670680,-6.353774,7.322607,-3.898149,-5.181183,-9.539344,-8.725265,-1.148874,5.766149,-1.492498,-1.074517,-1.351828,7.028660,4.348447,0.083092,-2.011456,6.377730,1.648469,9.317932,-4.304989,-7.199855,-9.795420,3.158729,5.969602,-9.738120,7.808470,-6.855597,-6.891817,7.494544,-4.835990,-4.533888,-2.407346,-0.840959,-2.263967,-2.817909,9.481202,-3.782261,2.473165,-3.265484,-6.623221,-8.153792,-2.618459,-5.029513,-5.082447,-8.431786,-0.401532,7.147689,-2.695531,1.693462,-8.377953,1.980576,-4.430054,7.521618,2.744184,-4.573813,4.737290,-4.211282,9.840976,-4.235830,-2.513798,4.851600,9.912141,1.119155,-1.730905,5.684494,-1.259745,-6.113868,-4.478540,9.132404,3.429889,1.299025,-4.470823,-5.115083,-7.588439,-0.160995,9.951684,-0.422658,-8.333925,-1.040097,-3.449923,2.932146,1.015851,0.571745,-5.807397,4.837215,-9.992126,-9.616264,-8.549467,-2.497765,0.720591,4.080088,-1.854532,-3.751685,-2.081509,7.753504,-3.045505,8.480826,-1.482622,9.521112,9.871722,3.121734,1.571656,3.597343,-5.824518,7.037220,-8.486864,0.471131,-0.253882,1.376971,-5.275425,0.424037,-5.548011,-8.436076,7.867877,7.002117,5.168280,-1.220488,-7.971101,-5.638867,4.406632,-1.700434,0.483519,0.668413,5.703162,-0.704315,6.412943,-3.864409,-4.344517,3.296116,-7.276289,7.820928,0.008982,2.010456,9.505639,-3.743582,5.179069,-5.609168,-4.437443,-0.501278,-0.243765,-9.748223,-2.555754,0.768192,2.352495,-5.317922,5.478205,8.350366,8.050459,-8.738000,6.127563,1.770141,-4.431315,5.794526,1.055414,-3.174386,-1.253776,-7.861235,-6.348417,1.094943,-7.268084,0.532744,4.863218,-1.384259,2.524584,2.856879,8.035995,1.847922,-9.075751,2.045607,-3.512639,-7.132731,-6.023615,1.024131,-8.367983,-2.898835,-6.918913,0.952761,0.551328,-2.421647,-8.928251,7.442338,7.471307,9.409728,2.739233,0.395761,8.247533,-4.778455,-5.537390,-3.780791,-5.700979,5.024400,-3.326307,5.706013,-8.330314,8.502086,4.601702,1.104907,0.839436,7.231260,6.667768,2.339411,-0.695636,-1.368698,2.630083,7.589788,3.103728,5.827790,6.606495,7.554785,-8.485487,7.120370,2.576879,-6.013800,3.740505,3.725586,8.495117,2.644813,-6.559533,-6.890017,-1.532530,-8.453652,1.157942,-7.115240,-0.491049,-6.617380,-8.926817,-6.112191,-0.780843,-8.315382,-3.054639,-5.242169,-1.714978,4.048807,9.079164,3.866686,-9.465447,-5.482785,7.654437,-3.623797,-8.422522,-0.760862,-5.315601,5.332108,-6.556732,3.442369,4.587342,-3.206239,2.557503,3.622461,4.743644,5.302820,-4.180738,4.503776,-6.687725,8.852449,9.604985,0.295721,-6.536966,-2.381598,-4.122352,-1.785831,-7.026433,-5.816413,-7.280157,-0.214926,-5.326113,7.706012,3.386449,-5.087608,8.134605,9.232228,6.185364,-2.984222,8.586915,-5.918332,-1.696449,5.217403,6.241850,7.414108,0.154090,-8.650034,3.036314,-2.026261,-2.477220,-5.608389,-3.935404,-3.918310,-3.374672,-3.175650,-2.897573,9.384592], dtype = "float64")#candidate|2764|(336,)|const|float64
call_2763 = func_1636_call(relay.reshape(const_2764.astype('float64'), [7, 12, 4]))
call_2765 = func_1636_call(relay.reshape(const_2764.astype('float64'), [7, 12, 4]))
bop_2774 = relay.right_shift(const_2750.astype('uint32'), relay.reshape(call_2748.astype('uint32'), relay.shape_of(const_2750))) # shape=(455,)
bop_2777 = relay.right_shift(const_2750.astype('uint32'), relay.reshape(call_2751.astype('uint32'), relay.shape_of(const_2750))) # shape=(455,)
output = relay.Tuple([bop_2742,var_2749,call_2752,call_2763,const_2764,bop_2774,])
output2 = relay.Tuple([bop_2742,var_2749,call_2753,call_2765,const_2764,bop_2777,])
func_2782 = relay.Function([var_2741,var_2749,], output)
mod['func_2782'] = func_2782
mod = relay.transform.InferType()(mod)
mutated_mod['func_2782'] = func_2782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2782_call = mutated_mod.get_global_var('func_2782')
var_2784 = relay.var("var_2784", dtype = "float64", shape = (6, 1))#candidate|2784|(6, 1)|var|float64
var_2785 = relay.var("var_2785", dtype = "bool", shape = (3120,))#candidate|2785|(3120,)|var|bool
call_2783 = func_2782_call(var_2784,var_2785,)
output = call_2783
func_2786 = relay.Function([var_2784,var_2785,], output)
mutated_mod['func_2786'] = func_2786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2797 = relay.var("var_2797", dtype = "float32", shape = (1, 12, 14))#candidate|2797|(1, 12, 14)|var|float32
uop_2798 = relay.log2(var_2797.astype('float32')) # shape=(1, 12, 14)
func_1654_call = mod.get_global_var('func_1654')
func_1655_call = mutated_mod.get_global_var('func_1655')
call_2801 = relay.TupleGetItem(func_1654_call(), 1)
call_2802 = relay.TupleGetItem(func_1655_call(), 1)
const_2807 = relay.const([[[-2.282644,-9.055497,-2.663928,1.074739,-2.787768,4.398648,-7.650934,-6.216951,8.711520,9.547862,-8.791681,-3.646095,9.558352,-1.277932],[1.623175,-5.907865,1.119705,-1.642798,4.059138,6.637220,-4.862127,0.192662,2.136626,-6.260947,-3.429053,-5.907741,-1.597462,9.122138],[-1.289984,8.622041,2.735561,8.143632,-9.814160,-2.750215,-9.128090,-8.219699,1.979187,0.227227,7.032276,0.736241,-6.188311,2.438707],[9.442690,-6.359725,-7.227098,1.995289,2.916506,-5.272552,4.347224,-1.814765,8.291512,-0.669978,-3.686017,3.637957,0.671210,-0.947766],[-4.550521,2.503779,-6.881038,6.128842,1.576488,-8.301987,-8.833515,6.575051,1.868047,4.774756,-0.679707,0.064437,5.482315,-0.686234],[-1.878509,-9.484673,-8.044019,-6.497711,0.174772,6.124272,-3.303113,-1.475490,0.814219,-3.906534,3.039152,9.029752,-5.478526,-8.008237],[7.093106,-5.066783,0.292249,-4.136781,-3.821197,-1.203097,2.640241,1.462336,7.648696,-4.058655,0.089957,-4.397702,-1.872890,-4.882470],[-6.773305,-2.284791,7.837200,3.115944,-8.736509,6.340218,-3.878838,-1.645616,4.911830,-2.242786,8.778559,0.436721,6.620568,0.938256],[4.924714,-2.684508,8.477702,1.986298,-5.504745,6.728681,7.266157,2.694285,0.396201,0.434308,6.445015,2.359477,-4.442912,5.772390],[-7.051515,3.401486,-3.236775,-5.945274,-4.340181,4.056820,-5.118033,0.192273,1.952772,-7.872109,0.717864,9.305845,0.544970,1.535378],[-6.073717,8.866297,-7.200201,-7.808326,5.664662,-9.565067,9.610197,-5.371290,-8.887518,0.976671,-4.876208,-5.783210,1.822594,0.916768],[9.058961,-7.895269,3.001310,-5.260522,-6.823928,3.125467,7.584194,5.519635,0.728636,8.964416,-5.200509,3.817836,-8.279004,-9.926002]],[[7.062751,-9.594458,-8.540629,-0.145340,-1.792589,2.211463,-8.240845,-5.934219,-4.125925,-7.564309,4.214355,-3.654471,-8.832339,7.811302],[3.365821,-7.702793,2.042838,7.989353,0.574851,5.432503,4.055119,-3.124245,0.930377,7.532542,-7.310667,1.783796,6.731014,9.328748],[8.449438,-5.854326,-6.503163,-2.798221,5.829286,-2.034180,4.667053,4.263387,-8.681398,-2.195953,-8.078372,-7.004204,6.684822,5.338450],[4.235335,-8.872855,3.750045,6.868907,9.505000,4.869682,-7.573070,3.792321,0.104288,-0.940934,-1.162435,-3.672352,-6.793474,-1.706355],[-6.623545,7.054526,-5.008748,0.855271,-1.595397,-0.764364,-1.294996,1.813592,0.999155,-9.976889,2.243329,-2.664245,-9.490676,-4.207363],[4.310635,-9.837750,-1.111253,5.415261,-1.675117,-4.849484,-4.431701,-6.993578,-9.787679,3.939666,4.982542,8.931249,-7.053159,-9.013295],[-0.572674,8.920557,8.110257,5.645223,9.619528,9.271763,4.081447,3.663410,-2.168426,-1.051720,5.848054,-5.728208,-1.063491,2.466894],[6.690484,1.477216,-7.461929,-6.800864,-5.748843,-3.235867,-8.251860,8.774063,7.484491,3.468762,9.707463,9.774566,8.613597,7.103860],[3.882631,-7.873579,-5.562023,-0.331555,6.610824,2.767768,-9.673206,7.206261,7.299767,7.437874,8.916345,-5.727135,-7.839965,7.472255],[1.191550,3.705259,3.495680,0.169198,8.426277,1.232806,-4.305484,6.381582,-4.076731,-0.990233,3.063493,-8.650722,-4.177915,2.651501],[-0.032750,8.276697,5.428089,-8.594759,-1.759867,0.074922,9.116245,-5.178236,5.695414,3.723714,6.361440,4.026096,8.626046,5.565815],[-1.806798,-1.237868,-4.814861,-1.750344,2.352741,-2.652799,-3.231078,5.168532,-9.083118,-1.498741,5.196551,3.543019,4.912257,-4.083300]]], dtype = "float32")#candidate|2807|(2, 12, 14)|const|float32
bop_2808 = relay.floor_mod(var_2797.astype('float32'), const_2807.astype('float32')) # shape=(2, 12, 14)
func_502_call = mod.get_global_var('func_502')
func_505_call = mutated_mod.get_global_var('func_505')
const_2816 = relay.const([[7],[-2],[3],[9],[-8],[-5],[4],[5],[-10],[-3],[5],[4],[-4],[5],[-9],[3],[-6],[2],[6],[3],[-8],[8],[6],[-4],[-8],[1],[-2],[3],[2],[-2],[-8],[8],[9],[-1],[-1],[-8],[-3],[-1],[-8],[7],[-3],[7],[3],[-1],[-9],[-7],[-7],[1],[3],[8],[-8],[-5],[3],[-10],[-2],[-6],[7],[-2],[5],[-5],[-8],[1],[5],[1],[6],[4],[-8],[-7],[-4],[1],[-5],[-2],[-2],[3],[8],[2],[-10],[1],[-9],[-7],[-4],[10],[-1],[-10],[-5],[-10],[-7],[3],[7],[-7],[-5],[2],[3],[3],[8],[6],[-3],[3],[-5],[-9],[-5],[1],[3],[1],[9],[6],[-6],[9],[4],[3],[4],[-5],[8],[-10],[-2],[-3],[10],[-8],[7],[5],[-9],[2],[-1],[-7],[7],[-8],[-1],[-9],[-10],[4],[-10],[8],[-1],[4],[-10],[-6],[10],[-4],[-10],[-6],[5],[9],[5],[-7],[-9],[-9],[-7],[10],[5],[-6],[5],[-4],[3],[-5],[-3],[2],[-3],[3],[9],[4],[-8],[8],[2],[-3],[-5],[4],[4],[-2],[7],[10],[8],[-5],[-2],[-10],[-6],[-2],[9],[-2],[-9],[-10],[6],[2],[-1],[7],[-4],[8],[-10],[3],[-1],[7],[-7],[-6],[7],[7],[-2],[10],[-10],[-2],[-9],[-1],[-7],[-4],[-3],[-10],[-2],[-6],[6],[-7],[-9],[-10],[-3],[1],[-3],[4],[-3],[4],[5],[-6],[7],[-3],[-5],[-7],[-10],[-3],[-1],[9],[3],[5],[4],[-7],[-8],[6],[1],[2],[-10],[-4],[-5],[-5],[7],[1],[2],[10],[-2],[3],[-8],[-3],[-5],[10],[1],[-3],[-6],[-5],[10],[-3],[9],[-3],[-5],[-8],[7],[5],[6],[-2],[6],[-7],[1],[-9],[7],[-7],[7],[1],[7],[9],[-6],[1],[10],[9],[-3],[-9],[2],[-8],[-5],[3],[3],[6],[1],[6],[-1],[1],[3],[1],[5],[1],[4],[7],[-5],[-10],[-1],[2],[-2],[-6],[6],[-2],[-8],[-6],[-3],[6],[10],[6],[-9],[-9],[-7],[7],[-1],[-6],[7],[-7],[-5],[-2],[2],[-3],[7],[-4],[9],[1],[4],[-4],[-9],[3],[-10],[-3],[10],[-2],[9],[-7],[3],[7],[-1],[9],[3],[-8],[9],[10],[-3],[-8],[-1],[-1],[-10],[-5],[6],[9],[1],[-3],[7],[10],[1],[-8],[10],[-8],[2],[-7],[6],[-5],[9],[-7],[-1],[-8],[4],[-5],[-3],[-2],[-5],[-5],[-2],[-9],[1],[-9],[-1],[5],[-6],[9],[-1],[-2],[-8],[6],[3],[8],[-2],[-4],[-7],[9],[8],[7],[4],[-1],[6],[-2],[9],[-10],[2],[-10],[7],[5],[-2],[2],[-2],[9],[8],[-9],[-10],[5],[-2],[-1],[-10],[10],[8],[-6],[-10],[2],[10],[3],[-4],[-1],[-10],[5],[3],[-6],[-6],[8],[7],[-7],[-9],[-1],[6],[3],[9],[9],[10],[-6],[-2],[-10],[10],[10],[10],[-3],[7],[5],[-4],[5],[10],[-5],[5],[2],[4],[4],[8]], dtype = "uint16")#candidate|2816|(455, 1)|const|uint16
call_2815 = relay.TupleGetItem(func_502_call(relay.reshape(const_2816.astype('uint16'), [455,])), 1)
call_2817 = relay.TupleGetItem(func_505_call(relay.reshape(const_2816.astype('uint16'), [455,])), 1)
func_1862_call = mod.get_global_var('func_1862')
func_1867_call = mutated_mod.get_global_var('func_1867')
var_2824 = relay.var("var_2824", dtype = "int16", shape = (135,))#candidate|2824|(135,)|var|int16
const_2825 = relay.const([-7.977422,-7.329866,-9.021385,-8.799557,-6.421419,4.425229,3.145112,8.718993,8.251158,-5.060535,-6.838537,-2.933207,-2.556900,3.841835,-9.545384,-8.567519,-5.091221,-9.416190,-9.089282,-3.643268,6.395449,-8.611955,4.908209,-5.361356,-2.208566,0.503710,8.340101,-3.250472,2.310316,-4.154173,-4.159859,-6.185873,1.572842,7.194587,-4.660050,-4.621618,7.601467,-3.715962,-2.667606,-8.537426,1.291428,8.316661,0.145142,-6.944678,5.150308,-4.619268,-6.802228,-4.929834,-9.260833,7.294015,6.178413,-9.982727,-7.724771,-8.082038,8.273460,-6.686203,-0.265532,6.365770,8.563285,4.858193,-0.852852,-0.499505,-3.282203,-9.150951,-9.551720,1.357656,9.373674,9.990079,9.341054,-3.758491,-5.702926,2.574936,-0.771528,-5.507062,3.074780,-7.483313,7.449522,-2.788257,-3.624961,-5.311911,-6.302731,-0.703842,3.003128,8.755077,1.912421,6.909705,-6.253183,7.923071,-8.560775,-8.490171,4.113173,5.019389,8.516095,-5.736852,5.062300,5.537058,5.082890,3.783531,2.333720,7.418332,0.542729,-2.628951,7.189099,-0.310182,9.718366,1.463031,-1.469724,0.565323,-4.876007,0.180200,4.166359,4.984409,-3.014255,5.623573,-0.299970,8.420850,-4.149174,1.712924,4.281853,4.539345,9.171349,1.525465,6.324460,2.080325,-9.114454,4.507747,0.594295,-2.440540,-9.893854,5.849305,-4.092602,-9.357493,-0.973709,6.739313,2.517108,-0.043315,2.408049,-0.717076,6.632018,1.913701,-5.498132,2.168776,9.593138,-0.206635], dtype = "float64")#candidate|2825|(144,)|const|float64
const_2826 = relay.const([-7.811100,-4.484454,9.512916,-7.697229,-9.276876,7.214231,-2.798856,8.032556,7.864932,8.058696,4.920792,-9.568921,1.185202,-1.930803,-2.871945,-2.287642,7.325732,-8.090384,-4.946352,-4.907922,4.381357,9.421473,1.506095,1.505350,1.135811,3.548214,4.815440,6.919616,-1.912460,-8.922616,1.692921,5.456655,9.266808,0.393549,-9.110778,0.719804,9.720213,6.228676,4.801198,6.613510,6.681347,8.863512,-7.333714,2.463386,7.140139,-4.398380,9.863440,0.972375,9.122942,-1.368015,-2.239513,1.919714,-2.297013,2.931482,-3.979964,-1.537987,7.209418,-7.223152,2.457228,-8.546455,0.582651,7.064476,-6.128702,-3.030196,2.614392,1.873298,-2.144307,5.165319,1.868526,-5.756122,2.281342,8.925362,-6.861271,5.593148,-3.699457,-6.653699,-4.527530,-6.849185,7.347117,-9.663984,1.424563,-2.754774,-0.369676,9.168826,-7.594412,9.271162,-1.257999,-3.694447,0.733518,-6.822139,1.438102,8.300730,-8.572631,-6.326854,-1.363148,-0.305269,-8.485920,1.387719,-7.421353,-9.314424,-3.706116,3.156446,2.687159,-5.422050,6.376252,-6.837659,2.895770,-6.327117,3.214394,5.482377,3.136014,1.183021,3.007648,-2.800447,0.455372,-4.128499,6.639534,8.097502,-4.304955,1.720067,-3.336237,-8.901586,1.320190,-2.272251,-1.155238,0.562969,8.098885,7.461734,5.807838,0.841053,6.678854,0.643464,0.572128,4.643480,-4.493592,5.061421,-7.624052,-0.101265,-5.115951,-5.497509,6.078129,-2.922892,-1.191426,5.126997,2.338721,7.440971,-4.993458,1.396490,2.441888,9.016158,8.618924,-9.533457,0.447015,-2.220430,2.625617,-9.728138,-7.543858,-5.375752,-4.174591,-2.954371,-0.581122,-3.251296,-6.681977,-4.239980,-7.964188,0.477457,-7.235921,6.014193,5.817728,1.929157,-2.492969,9.589225,-2.866660,-4.530734,0.470575,-2.028324,-2.746898,-1.263329,3.307277,-2.083089,0.269257,5.724239,0.587101,4.832427,-1.287366,-0.801676,-3.941772,2.765129,7.501028,0.831399,6.160200,-9.509062,2.756011,-7.122970,2.960316,-1.601919,7.044287,-1.814023,7.095329,4.088951,-8.391619,-7.220719,6.083696,6.992728,3.103431,2.651677,-5.451963,-3.964015,-5.605910,-7.960342,7.283401,-7.347165,4.915570,-2.002352,-1.160708,-4.549519,2.246463,7.628293,1.748926,6.624182,-2.631663,6.734087,-8.382603,-8.859022,-6.214441,-8.935684,4.941447,-1.928887,8.715977,2.764818,-1.935017,-6.434884,6.883535,-1.978264,-8.482888,9.499601,-9.676191,3.313066,5.607431,-4.143872,3.691305,7.740756,0.560894,6.913338,-4.636322,7.465846,-2.362330,-7.876719,0.677524,-4.556262,-0.110188,-1.598450,-5.777251,9.906937,6.857121,-1.903083,-3.178738,-9.232293,6.349223,-3.082711,-0.591128,6.544762,6.930847,-0.575044,-2.195343,-9.054764,8.945903,-5.808498,5.600020,4.022857,9.286372,9.823222,4.133318,6.652273,5.188243,3.200338,6.634772,-3.263100,-5.532245,-0.570424,-2.310052,-8.708471,6.059822,7.974934,-6.151813,-2.275873,-7.128841,-3.583219,4.626955,8.623955,2.420696,-3.742163,3.969845,-3.715632,-3.843458,-5.738828,6.448685,-0.692024,8.555853,0.571458,-8.837633,6.160778,6.425697,-3.780170,-7.510923,5.028233,-6.219686,-5.168757,2.907979,-8.650746,0.648267,-5.321861,7.157759,-2.714911,-2.990367,-3.443029,6.737755,-1.456534,9.717882,6.121451,-6.713040,-5.075434,-0.014882,-3.352835,6.750035,4.057919,1.179459,3.676436,-5.650187,-8.908622,-9.913800,6.109087,-8.351097,-6.392303,7.987140,1.703346,9.368777,-3.147903,9.620744,1.943128,3.320256,8.189068,-5.622200,0.549604,-5.046933,9.611320,2.443646,-2.126788,-8.251448,2.398331,-6.733930,0.446818,-0.062882,-9.443133,-1.900297,-9.394181,-8.652266,3.486317,2.975044,-0.473567,-6.087296,-4.158583,-7.061335,3.407673,6.211068,-9.665028,-4.932804,1.641665,-3.443079,-6.687459,7.428918,-8.355361,-9.006161,-2.268683,6.094508,-4.805172,5.403756,6.305205,3.128387,-1.095580,7.817605,6.352353,4.682748,3.276110,-2.438428,-4.526459,-2.438607,5.969064,-6.045307,-5.114082,-1.683478,6.430125,4.256217,-0.814757,-5.482206,-0.365698,3.093472,5.700937,-5.625707,-3.937257,-1.936607,6.460366,-7.038325,2.066977,-8.570834,-9.226355,-0.641750,-8.005336,-3.728049,1.098665,-5.775552,-3.510371,1.231763,-9.403116,-1.071200,-9.583521,4.526750,-1.294513,-5.157729,4.043639,8.794552,-0.815169,7.670610,-9.919636,4.769047,-2.267126,4.526836,0.928660,-9.759321,-2.235362,8.538883,1.705247,-5.241043,-7.119262,-6.400090,-5.434278,3.194538,2.111113,1.978800,-5.351697,3.990243,-1.050752,5.629646,1.990073,1.645155,4.729356,-2.482721,-6.553882,-0.459315,-4.543779,-3.859302,-1.297050,8.037882,-9.812128,7.483351,2.828964,-0.278244,5.879686,1.665170,2.643914,8.204429,5.337613,-6.754567,-6.083413,-3.601111,4.277634,3.717456,-3.547509,9.578266,-7.554438,1.805871,-2.773548,4.702929,-5.590584,-7.734911,-5.645057,-3.468733,-7.581530,4.536831,7.270777,4.335018,-3.671488,-4.481364,5.648752,0.883808,5.710467,0.910804,-1.699052,6.077245,1.998056,9.693480,2.393753,-4.483275,-1.026815,5.997072,5.240053,-2.498256,4.211576,0.897257,-7.843605,-6.432094,4.721869,1.725660,4.202518,-3.858422,8.733080,-5.897899,6.312129,-8.532011,-0.676585,6.028639,-3.752596,2.297136,0.982657,-0.528902,8.723468,2.583691,-0.473476,2.789408,5.869260,-5.076367,2.103296,-1.713291,4.573733,-4.981406,-0.921352,-6.670700,3.888450,-5.325697,-2.600203,-2.442372,-5.280390,-5.719292,5.582754,-2.156792,-0.105889,4.400037,1.408574,-8.693726,-3.369073,-1.957327,1.828785,8.019692,-7.775786,4.981200,-0.082007,-2.303895,3.771090,8.682828,-4.416119,2.517619,-9.566393,-7.013110,-2.861152,4.532079,4.765200,6.772624,-7.394815,0.502853,5.297642,2.122792,0.300880,-8.970388,-9.084525,7.111138,4.753339,9.669540,1.121152,2.936149,9.818935,-5.625315,-8.119607,3.611054,-1.979075,0.702173,6.411940,6.825381,-4.575009,4.440677,7.621310,-6.197678,6.928001,-7.210705,0.964092,3.867919,-8.010779,-0.660679,0.143601,4.597757,-7.356300,4.758929,9.588816,-6.366496,-0.891259,3.268176,-2.352340,-6.537901,0.899561,-7.283789,-7.549863,3.481809,6.564280,6.346079,0.786950,-7.845760,6.123917,4.215883,-6.084511,1.442508,3.672493,-0.468196,-4.094093,-6.707285,-8.983761,-8.960085,-8.622012,4.322250,8.234020,-2.355981,-7.200603,1.332275,3.276680,-6.129748,-6.206072,-8.668742,-1.215664,-0.504777,-3.633175,2.217339,5.039823,8.546994,0.034089,-8.808461,-8.596622,-8.896428,1.107875,-5.484192,-0.608525,8.073887,-4.405301,2.989635,-3.309531,1.334976,-0.651908,2.880355,5.221567,8.818276,-4.302177,5.341454,-7.739582,5.867171,7.953473,-3.040891,-7.199177,1.326879,-7.586595,-8.980922,-4.170568,5.323101,-3.425321,-5.540506,8.886767,-4.718311,5.788444,-1.506709,1.908619,-7.606549,-9.865036,3.057759,-7.984997,0.144321,5.870905,9.802428,-3.398823,-6.635354,-9.245552,-5.848203,-4.279310,6.705121,-3.985519,1.827596,4.604153,1.407039,4.148007,-6.275447,9.691810,-7.393673,1.004426,-5.564923,-1.023568,-6.368174,8.222954,-8.372879,-1.920173,-1.882234,-2.792099,-5.482201,4.444497,4.223270,-3.317280,-6.050564,2.891396,-1.839265,-1.259457,-0.132412,9.722793,0.525221,0.017350,-4.214950,0.136239,7.707734,8.232743,0.655656,6.429424,3.375376,2.953026,7.894802,-2.276115,7.186918,-6.486551,6.937638,3.814599,-7.901190,-6.212419,-4.412797,8.303344,2.186500,7.360410,1.955728,4.254787,2.903938,-6.030471,-7.050330,-0.051868,-8.923987,0.317332,6.843729,-7.421074,-6.811833,-7.579241,2.463294,-5.245149,-5.904972,4.002401,-1.148164,-1.511521,7.289790,-2.686334,6.069753,-4.820150,7.500450,2.614504,-7.365176,-7.204466,3.870432,0.050852,1.208078,1.750727,2.106709,4.752365,-0.772454,2.538065,4.677323,8.855966,5.056238,-3.880483,1.239803,2.786236,9.430718,-2.710100,-1.703284,5.064856,6.165315,-1.680031,-8.576208,-8.585320,5.246577,-3.066534,2.467502,-4.935672,8.908096,3.346508,-6.314559,-3.522636,0.598424,-5.419422,-0.796879,5.755937,8.322696,8.870838,2.779966,-9.668554,0.154847,3.688217,-7.592174,3.375447,-5.630974,-8.735058,5.116269,3.231422,-0.777684,7.587166,6.964626,-0.416114,-6.589781,-8.402956,-8.913483,-7.006678,-2.915226,-8.164427,1.929444,-4.738692,4.182512,5.988869,-1.907104,3.889300,-0.910156,4.623666,3.479220,-8.789643,1.196544,7.384201,1.105309,-4.882560,-4.081951,-6.171062,-8.983788,1.621989,-0.293247,7.237771,2.217313,2.869574,1.173275,-1.925441,-9.584978,-4.431494,2.092675,8.008180,5.115204,-5.368659,3.841013,-6.960537,-3.115667,0.716120,-8.299901,9.049856,8.645379,1.214986,6.282235,4.365434,0.241038,-5.119244,0.898209,9.920069,2.706453,-8.928474,6.196123,-5.609189,0.156169,-2.502275,-1.157235,1.244344,-2.816835,-5.532436,-8.096606,8.692792,0.463031,5.687945,-6.727907,-3.593628,-2.182902,-3.048444,7.723083,9.459496,-3.659502,-4.325434,0.895683,-8.885470,-3.094558,-8.042341,-9.176142,-3.901070,1.415484,-9.163843,6.212406,6.334655,-5.634428,9.689252,-4.949197,-6.886229,-0.549343,-0.696897,-5.926973,7.129216,5.449460,-4.817566,6.857759,-8.373572,-4.859172,-7.662084,1.473847,1.652207,2.097519,1.680566,-6.521750,-4.907727,-6.950972,-9.541124,8.478025,8.646277,0.748532,-1.385004,6.507096,2.486007,-8.142229,5.885245,9.067109,3.309300,1.529342,2.963005,-4.513150,-3.067304,-1.287390,6.134113,-5.246370,-8.772741,-8.421148,-1.719328,1.099979,7.278713,-3.090955,2.469879,-1.693494,-8.110392,0.556367,8.346075,-6.783719,-5.166917,-5.743049,-8.626625,6.665918,1.582547,-6.811364,5.298348,0.704819,8.408315,7.569291,-7.959785,2.982931,1.647372,-7.468347,-1.012638,-6.936629,4.526688,-7.712715,4.820960,-7.205144,-5.709185,-9.298557,3.382124,-7.104200,8.706587,3.240310,8.534531,1.485622,-5.347401,7.792879,-1.091752,7.675782,3.232162,5.556156,3.229780,5.202877,-2.003311,3.053558,7.295708,-1.712229,4.865612,-5.900777,-2.375514,8.025696,2.175092,3.711789,-2.359472,2.864925,7.370655,-1.808138,9.256815,-1.574444,-1.768666,4.311455,4.793137,-9.407973,0.320440,-5.185247,-2.161094,-1.757363,-6.543497,6.493599,5.031141,-7.390946,-2.720451,3.632840,-5.386787,1.413440,-5.364503,0.251693,0.103180,-9.760402,-9.895092,-6.165643,6.742982,4.631921,7.919553,-5.589918,9.058131,3.333521,-1.513329,6.889665,-2.583472,7.173268,9.741375,-3.507241,-5.922896,-6.120163,7.160954,-9.352829,8.365389,5.242746,-8.346773,9.586272,-3.286886,5.034590,-4.669869,-8.664103,-1.238867,0.063474,-9.929328,-5.554782,-5.300293,4.813109,5.732678,-4.080498,0.220174,6.328586,-2.339948,-9.584677,1.445465,2.172470,-2.723855,-3.683113,9.898083,7.070004,-8.360567,-8.509202,-3.568043,-3.367108,4.595650,-0.422426,-8.001117,9.335607,7.512412,-2.820482,6.733823,-1.445924,8.949405,-1.085137,-7.284734,-1.132964,7.979131,8.870457,-5.189644,-4.924427,4.199026,0.286954,-4.782511,-7.980757,-9.420613,4.478304,-6.036318,7.809810,-1.136033,-3.809865,7.988053,4.083825,2.506961,-7.913433,3.151722,-1.267410,-3.133359,-2.940972,-0.393475,-9.461965,7.757055,-3.165910,5.460458,0.211043,-0.935331,-3.795995,-4.018003,-6.778901,-8.461304,-0.764715,9.373154,-2.768989,-7.368907,8.167883,4.955775,3.141161,4.302282,-4.623330,3.965983,-2.685623,5.080575,-4.113149,2.376040,-7.284956,0.532159,8.927210,2.757906,-9.890294,-5.453660,-4.715329,5.035156,9.227830,1.789262,6.184099,2.330948,-6.427673,-6.955679,1.899997,-4.149265,-7.209278,-1.325750,-6.065860,1.650269,2.336431,-7.548684,-3.788098,0.169844,-5.390170,6.443332,6.876343,-1.360216,-5.420175,-5.628920,-0.109254,0.733785,0.446387,-3.100399,0.982407,-1.007240,6.202080,-3.590993,1.484824,7.447242,-1.233048,2.957233,-3.165525,-5.944724,6.804177,-8.321804,6.588782,-4.796823,9.511124,-6.454329,-6.561890,7.249866,-7.847739,8.885995,2.059986,2.352716,-5.615277,2.474529,-7.715832,0.601540,1.044868,9.559389,7.115006,8.197933,-8.685097,5.878201,-2.034801,4.403365,-2.475993,-9.414193,5.070644,2.885788,2.242505,-3.897014,-7.397298,2.019971,6.946978,-6.519719,-7.635671,1.539124,-0.403679,7.492819,5.549491,7.742644,-6.423339,2.366631,0.680587,4.992561,-5.265319,5.973914,7.934559,-3.822413,4.350097,2.261945,-5.814141,1.272186,8.764997,0.715244,1.478241,-1.219971,6.553942,4.610317,-3.007293,9.901555,9.746171,-7.615505,7.767797,5.084456,3.031037,-6.825536,-8.124090,-7.382403,-9.134222,-8.085679,-0.639863,1.001880,6.670577,1.036847,3.480338,-2.917465,7.733955,1.631284,6.477390,4.860637,8.455076,-6.434235,7.213134,9.337850,-6.900668,7.299437,-0.631393,-1.243974,-0.211784,-1.472713,-3.971504,-7.348367,4.530798,-4.560790,-9.617609,7.218027,2.239147,2.804952,7.942206,7.764320,0.287939,-5.996921,6.306039,4.331182,-1.698490,-6.798060,-0.253370,-4.889949,-2.846510,-0.935322,6.702978,7.670929,4.723658,6.606597,1.743692,-0.748015,-4.269092,7.525572,-4.357049,2.834144,-2.330052,7.406902,-5.546851,-5.904317,6.454899,7.603221,-6.252654,0.533404,-3.366977,-3.649343,1.241831,-8.952858,-3.368339,-0.530248,-7.564993,3.719495,6.607965,0.370965,9.212558,-3.091726,-6.977251,4.898752,-0.965837,-7.066771,6.004782,4.803069,3.830353,-4.524884,5.524406,-0.972619,-3.204892,-3.369166,2.463528,9.033902,9.733780,2.606801,-2.643885,-6.962935,9.697450,1.736512,-7.721049,-7.461831,-3.143374,0.058382,5.189112,4.273720,8.270448,7.877728,7.552707,2.726629,-2.465844,-3.677351,7.713864,-6.963278,2.634422,-5.728749,-0.688516,3.072628,1.021296,-8.765560,0.266958,1.409288,7.884067,3.677542,1.129834,8.243024,8.552546,-4.789287,-1.340569,2.509230,-3.783887,8.076304,-2.438226,3.360331,4.520566,-6.890806,3.590666,-2.356082,-8.194279,9.673028,-6.596507,-5.664786,-2.956334,7.152213,2.233960,-4.711662,-7.971540,-6.017275,3.049458,-4.756813,0.889652,2.771568,-5.469317,9.146523,9.823126,2.763384,4.925694,9.763996,-8.649144,-7.486191,7.884520,-5.194222,9.939063,7.981608,-8.484454,2.871666,-8.928256,2.553171,-9.688861,-9.281497,1.683943,-8.300571,0.267690,1.108569,-3.823510,8.566889,-5.985242,7.493799,-3.938519,-2.113315,-7.528747,-7.837957,-5.658847,-6.195276,-9.786993,-2.438635,-7.457827,-3.068350,-8.724702,9.959817,7.837952,0.652649,-1.336098,9.523801,4.298934,-4.026251,-3.662774,-4.437705,-8.004731,6.349810,1.140259,-4.998480,-0.154492,3.142401,-8.483881,6.725716,6.522186,-8.595920,2.087752,-2.489131,4.588211,3.206948,4.916047,3.179950,-1.119140,-6.049429,-3.048904,3.869679,9.454608,-0.473217,6.494538,-7.983743,-6.745092,7.169745,-2.152671,-0.375572,-9.863436,6.356813,6.343587,5.703140,-3.756848,-6.901515,-8.912151,8.603472,-1.105217,-6.016120,-3.726821,9.917178,2.513831,-7.461415,-1.036878,8.776665,-6.465656,1.082580,0.650130,6.214400,-1.802250,8.498362,8.327937,7.884367,-2.991907,-5.943958,-3.381068,5.599416,-2.069902,0.392412,-5.057129,3.964460,-0.807812,-1.676638,2.872116,1.982588,9.264077,-1.700835,3.687324], dtype = "float32")#candidate|2826|(1485,)|const|float32
call_2823 = relay.TupleGetItem(func_1862_call(relay.reshape(var_2824.astype('int16'), [9, 5, 3]), relay.reshape(const_2825.astype('float64'), [1, 144]), relay.reshape(const_2826.astype('float32'), [1485,]), relay.reshape(const_2816.astype('uint16'), [455,]), ), 6)
call_2827 = relay.TupleGetItem(func_1867_call(relay.reshape(var_2824.astype('int16'), [9, 5, 3]), relay.reshape(const_2825.astype('float64'), [1, 144]), relay.reshape(const_2826.astype('float32'), [1485,]), relay.reshape(const_2816.astype('uint16'), [455,]), ), 6)
uop_2828 = relay.asinh(const_2816.astype('float32')) # shape=(455, 1)
uop_2830 = relay.exp(uop_2828.astype('float32')) # shape=(455, 1)
output = relay.Tuple([uop_2798,call_2801,bop_2808,call_2815,call_2823,var_2824,const_2825,const_2826,uop_2830,])
output2 = relay.Tuple([uop_2798,call_2802,bop_2808,call_2817,call_2827,var_2824,const_2825,const_2826,uop_2830,])
func_2832 = relay.Function([var_2797,var_2824,], output)
mod['func_2832'] = func_2832
mod = relay.transform.InferType()(mod)
var_2833 = relay.var("var_2833", dtype = "float32", shape = (1, 12, 14))#candidate|2833|(1, 12, 14)|var|float32
var_2834 = relay.var("var_2834", dtype = "int16", shape = (135,))#candidate|2834|(135,)|var|int16
output = func_2832(var_2833,var_2834,)
func_2835 = relay.Function([var_2833,var_2834,], output)
mutated_mod['func_2835'] = func_2835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_2856 = relay.TupleGetItem(func_1471_call(), 0)
call_2857 = relay.TupleGetItem(func_1473_call(), 0)
output = call_2856
output2 = call_2857
func_2859 = relay.Function([], output)
mod['func_2859'] = func_2859
mod = relay.transform.InferType()(mod)
output = func_2859()
func_2860 = relay.Function([], output)
mutated_mod['func_2860'] = func_2860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2476_call = mod.get_global_var('func_2476')
func_2478_call = mutated_mod.get_global_var('func_2478')
call_2891 = relay.TupleGetItem(func_2476_call(), 0)
call_2892 = relay.TupleGetItem(func_2478_call(), 0)
output = call_2891
output2 = call_2892
func_2894 = relay.Function([], output)
mod['func_2894'] = func_2894
mod = relay.transform.InferType()(mod)
mutated_mod['func_2894'] = func_2894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mutated_mod.get_global_var('func_2894')
call_2895 = func_2894_call()
output = call_2895
func_2896 = relay.Function([], output)
mutated_mod['func_2896'] = func_2896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mod.get_global_var('func_2222')
func_2223_call = mutated_mod.get_global_var('func_2223')
call_2936 = func_2222_call()
call_2937 = func_2222_call()
output = relay.Tuple([call_2936,])
output2 = relay.Tuple([call_2937,])
func_2959 = relay.Function([], output)
mod['func_2959'] = func_2959
mod = relay.transform.InferType()(mod)
mutated_mod['func_2959'] = func_2959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2959_call = mutated_mod.get_global_var('func_2959')
call_2960 = func_2959_call()
output = call_2960
func_2961 = relay.Function([], output)
mutated_mod['func_2961'] = func_2961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_3090 = func_2487_call()
call_3091 = func_2487_call()
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_3095 = func_2487_call()
call_3096 = func_2487_call()
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_3104 = relay.TupleGetItem(func_1964_call(), 0)
call_3105 = relay.TupleGetItem(func_1966_call(), 0)
uop_3106 = relay.acosh(call_3090.astype('float32')) # shape=(10, 96)
uop_3108 = relay.acosh(call_3091.astype('float32')) # shape=(10, 96)
func_1079_call = mod.get_global_var('func_1079')
func_1083_call = mutated_mod.get_global_var('func_1083')
var_3114 = relay.var("var_3114", dtype = "float32", shape = (1485,))#candidate|3114|(1485,)|var|float32
var_3115 = relay.var("var_3115", dtype = "uint8", shape = ())#candidate|3115|()|var|uint8
call_3113 = relay.TupleGetItem(func_1079_call(relay.reshape(var_3114.astype('float32'), [11, 15, 9]), relay.reshape(var_3115.astype('uint8'), []), ), 0)
call_3116 = relay.TupleGetItem(func_1083_call(relay.reshape(var_3114.astype('float32'), [11, 15, 9]), relay.reshape(var_3115.astype('uint8'), []), ), 0)
output = relay.Tuple([call_3095,call_3104,uop_3106,call_3113,var_3114,var_3115,])
output2 = relay.Tuple([call_3096,call_3105,uop_3108,call_3116,var_3114,var_3115,])
func_3145 = relay.Function([var_3114,var_3115,], output)
mod['func_3145'] = func_3145
mod = relay.transform.InferType()(mod)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3145_call = mutated_mod.get_global_var('func_3145')
var_3147 = relay.var("var_3147", dtype = "float32", shape = (1485,))#candidate|3147|(1485,)|var|float32
var_3148 = relay.var("var_3148", dtype = "uint8", shape = ())#candidate|3148|()|var|uint8
call_3146 = func_3145_call(var_3147,var_3148,)
output = call_3146
func_3149 = relay.Function([var_3147,var_3148,], output)
mutated_mod['func_3149'] = func_3149
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3169 = relay.const([[[1.441803,9.509397,-4.071147,-2.203327,-0.446346,-7.903140,1.007252,-8.501844,-3.062351],[7.319000,-6.940498,-6.617050,-7.877549,3.079485,-6.139008,-9.033879,7.141339,1.115391],[-4.954045,-3.139514,3.947075,3.800787,-3.435997,-1.677694,-5.960195,4.078087,2.230441],[4.159105,-9.274820,-8.343677,9.985411,-0.892078,-0.734453,-2.811551,8.025869,-0.288872]],[[-4.275429,5.915798,2.779309,6.914410,0.140899,-8.385196,1.710715,-6.476005,-8.620026],[-9.894139,-9.433628,-1.880906,-0.606821,6.204035,0.283545,4.654649,-5.753642,0.837869],[-8.107071,2.409897,6.127434,8.355767,1.676826,-0.182431,-1.086293,2.290588,-3.801627],[1.825464,9.842831,-0.610622,-8.558425,-1.449995,6.149921,9.056850,-9.647606,2.748124]],[[-0.074616,-0.238320,9.771193,-7.363416,6.500450,-8.915742,1.760899,5.500378,-2.199877],[-9.395725,4.708922,5.367957,-7.018869,-2.918203,-8.375205,-3.070468,-1.650806,-7.391236],[6.887810,1.266559,9.679570,-3.249665,-1.500306,7.812416,-7.551078,4.358308,-5.709406],[-1.866568,3.984002,1.261874,-0.742090,0.359418,1.673996,-1.986998,-3.355768,2.229710]],[[7.604251,-1.462360,3.526204,8.066511,6.278960,1.729433,6.715256,-3.930980,9.330365],[-5.618188,6.232337,-3.613181,-4.443772,-5.596148,7.666610,-4.033002,6.944476,-4.361758],[-5.167818,-4.579825,-5.393533,2.317425,2.365343,3.033962,7.065160,8.898847,3.089321],[7.338333,-4.199018,-6.515687,-1.546415,9.297686,9.855803,-8.398316,1.824354,-1.420402]],[[1.847430,0.407221,8.477563,5.558215,4.148193,-8.003316,-5.097887,-4.083577,9.890238],[-4.415483,0.841056,4.306661,8.098992,-1.683236,6.337856,9.973619,-4.738210,0.517629],[7.074058,-5.558740,9.870360,9.186415,5.611629,6.751739,-3.068560,-7.342859,6.243462],[-1.691754,9.467337,2.641588,4.566412,5.457417,8.669064,-8.139205,0.951842,2.730247]],[[0.170324,7.356501,-0.735831,5.078289,-5.150556,-6.812525,7.752625,8.257253,5.043946],[8.748582,1.483036,-6.506322,-2.265499,6.041868,-9.468868,-4.432289,5.746974,-2.570495],[-3.777879,-1.551893,2.445881,-0.601964,4.438173,8.838299,-1.018130,-2.322633,-8.149727],[9.214853,2.493898,-3.838833,7.577746,9.335670,-2.454272,2.485632,6.371662,-2.566852]],[[-8.076426,7.613686,-0.734504,0.761951,-8.924873,-3.419605,-8.939944,2.950802,-1.056857],[8.010964,-4.890580,-1.645959,-9.936582,-1.241076,8.025986,-0.833974,4.187357,5.832252],[7.305026,1.262095,-1.429105,-4.623403,7.236957,-0.482820,9.422060,6.496763,-8.618233],[8.004042,4.842295,-0.492245,-5.123262,2.680890,9.592118,0.365605,6.863621,-6.319788]]], dtype = "float64")#candidate|3169|(7, 4, 9)|const|float64
uop_3170 = relay.asin(const_3169.astype('float64')) # shape=(7, 4, 9)
output = relay.Tuple([uop_3170,])
output2 = relay.Tuple([uop_3170,])
func_3172 = relay.Function([], output)
mod['func_3172'] = func_3172
mod = relay.transform.InferType()(mod)
mutated_mod['func_3172'] = func_3172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3172_call = mutated_mod.get_global_var('func_3172')
call_3173 = func_3172_call()
output = call_3173
func_3174 = relay.Function([], output)
mutated_mod['func_3174'] = func_3174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_3206 = relay.TupleGetItem(func_1471_call(), 0)
call_3207 = relay.TupleGetItem(func_1473_call(), 0)
output = call_3206
output2 = call_3207
func_3212 = relay.Function([], output)
mod['func_3212'] = func_3212
mod = relay.transform.InferType()(mod)
output = func_3212()
func_3213 = relay.Function([], output)
mutated_mod['func_3213'] = func_3213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2859_call = mod.get_global_var('func_2859')
func_2860_call = mutated_mod.get_global_var('func_2860')
call_3242 = func_2859_call()
call_3243 = func_2859_call()
func_1268_call = mod.get_global_var('func_1268')
func_1270_call = mutated_mod.get_global_var('func_1270')
const_3245 = relay.const([8.953246,-1.372756,-3.526014,-7.198725,5.491575,2.535253,9.379734,-8.073821,0.677498,-7.317731,4.939114,-9.978240,1.089305,4.590268,4.219385,-8.257432,-1.569840,9.265658,2.684099,-9.904355,6.636563,-7.893519,-4.898486,-3.495992,2.215445,3.882360,2.447189,-6.940205,-0.119825,4.576956,9.657282,1.502464,-3.738049,5.232899,-9.764615,-9.915534,6.562044,6.249773,7.969804,4.481442,-6.250105,9.344672,-6.302149,-5.952376,4.597978,5.347749,-5.682187,-4.976832,3.493465,-9.009168,-9.086020,9.370024,8.726723,8.680590,-3.839411,8.684934,5.050826,-9.658926,-9.991059,2.873438,-0.400192,8.158883,2.071018,9.979169,5.342104,-3.746100,-0.044977,8.807232,-7.043896,2.717046,4.157764,-7.382018,0.603891,9.382584,0.079730,-6.645652,6.464308,-5.307451,5.309935,8.494896,-4.757027,-4.411795,4.104585,-9.232650,5.198641,2.461201,4.888314,1.854220,-0.116614,-5.720671,9.902106,-6.165932,-8.559949,4.713169,-3.056038,-9.685221,9.610653,-0.638428,-9.760208,-7.937907,-3.182724,7.189622,9.037023,-2.181369,9.291085,-1.866922,5.157897,9.187354,1.368446,-0.756982,1.555798,-2.785190,2.794369,2.197421,-5.925807,0.982217,4.608828,-3.950369,-2.244937,6.693458,0.116797,-9.743723,-8.108794,2.504596,6.687384,0.890019,-0.330232,7.834802,-4.410957,-5.765676,-9.926709,8.722426,-3.587239,8.189410,0.969214,-4.142404,-8.994081,9.355563,-1.056796,-1.172065,-0.910465,-8.862415,-3.822789,8.495502], dtype = "float64")#candidate|3245|(144,)|const|float64
call_3244 = relay.TupleGetItem(func_1268_call(relay.reshape(const_3245.astype('float64'), [6, 2, 12])), 3)
call_3246 = relay.TupleGetItem(func_1270_call(relay.reshape(const_3245.astype('float64'), [6, 2, 12])), 3)
func_2782_call = mod.get_global_var('func_2782')
func_2786_call = mutated_mod.get_global_var('func_2786')
const_3265 = relay.const([-2.510397,-0.914073,-6.379559,-5.697909,9.268014,-6.943647], dtype = "float64")#candidate|3265|(6,)|const|float64
call_3264 = relay.TupleGetItem(func_2782_call(relay.reshape(const_3265.astype('float64'), [6, 1]), relay.reshape(call_3242.astype('bool'), [3120,]), ), 1)
call_3266 = relay.TupleGetItem(func_2786_call(relay.reshape(const_3265.astype('float64'), [6, 1]), relay.reshape(call_3242.astype('bool'), [3120,]), ), 1)
output = relay.Tuple([call_3242,call_3244,const_3245,call_3264,const_3265,])
output2 = relay.Tuple([call_3243,call_3246,const_3245,call_3266,const_3265,])
func_3269 = relay.Function([], output)
mod['func_3269'] = func_3269
mod = relay.transform.InferType()(mod)
output = func_3269()
func_3270 = relay.Function([], output)
mutated_mod['func_3270'] = func_3270
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3278 = relay.var("var_3278", dtype = "uint16", shape = (6, 3, 12))#candidate|3278|(6, 3, 12)|var|uint16
var_3279 = relay.var("var_3279", dtype = "uint16", shape = (6, 3, 12))#candidate|3279|(6, 3, 12)|var|uint16
bop_3280 = relay.right_shift(var_3278.astype('uint16'), relay.reshape(var_3279.astype('uint16'), relay.shape_of(var_3278))) # shape=(6, 3, 12)
bop_3299 = relay.left_shift(var_3278.astype('uint64'), relay.reshape(var_3279.astype('uint64'), relay.shape_of(var_3278))) # shape=(6, 3, 12)
output = relay.Tuple([bop_3280,bop_3299,])
output2 = relay.Tuple([bop_3280,bop_3299,])
func_3309 = relay.Function([var_3278,var_3279,], output)
mod['func_3309'] = func_3309
mod = relay.transform.InferType()(mod)
mutated_mod['func_3309'] = func_3309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3309_call = mutated_mod.get_global_var('func_3309')
var_3311 = relay.var("var_3311", dtype = "uint16", shape = (6, 3, 12))#candidate|3311|(6, 3, 12)|var|uint16
var_3312 = relay.var("var_3312", dtype = "uint16", shape = (6, 3, 12))#candidate|3312|(6, 3, 12)|var|uint16
call_3310 = func_3309_call(var_3311,var_3312,)
output = call_3310
func_3313 = relay.Function([var_3311,var_3312,], output)
mutated_mod['func_3313'] = func_3313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2381_call = mod.get_global_var('func_2381')
func_2382_call = mutated_mod.get_global_var('func_2382')
call_3416 = relay.TupleGetItem(func_2381_call(), 3)
call_3417 = relay.TupleGetItem(func_2382_call(), 3)
output = call_3416
output2 = call_3417
func_3420 = relay.Function([], output)
mod['func_3420'] = func_3420
mod = relay.transform.InferType()(mod)
mutated_mod['func_3420'] = func_3420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3420_call = mutated_mod.get_global_var('func_3420')
call_3421 = func_3420_call()
output = call_3421
func_3422 = relay.Function([], output)
mutated_mod['func_3422'] = func_3422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2381_call = mod.get_global_var('func_2381')
func_2382_call = mutated_mod.get_global_var('func_2382')
call_3478 = relay.TupleGetItem(func_2381_call(), 2)
call_3479 = relay.TupleGetItem(func_2382_call(), 2)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_3480 = relay.TupleGetItem(func_3172_call(), 0)
call_3481 = relay.TupleGetItem(func_3174_call(), 0)
output = relay.Tuple([call_3478,call_3480,])
output2 = relay.Tuple([call_3479,call_3481,])
func_3498 = relay.Function([], output)
mod['func_3498'] = func_3498
mod = relay.transform.InferType()(mod)
output = func_3498()
func_3499 = relay.Function([], output)
mutated_mod['func_3499'] = func_3499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_3564 = func_2487_call()
call_3565 = func_2487_call()
output = call_3564
output2 = call_3565
func_3569 = relay.Function([], output)
mod['func_3569'] = func_3569
mod = relay.transform.InferType()(mod)
mutated_mod['func_3569'] = func_3569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3569_call = mutated_mod.get_global_var('func_3569')
call_3570 = func_3569_call()
output = call_3570
func_3571 = relay.Function([], output)
mutated_mod['func_3571'] = func_3571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_3608 = relay.TupleGetItem(func_1695_call(), 0)
call_3609 = relay.TupleGetItem(func_1697_call(), 0)
uop_3610 = relay.log10(call_3608.astype('float32')) # shape=(13, 15, 16)
uop_3612 = relay.log10(call_3609.astype('float32')) # shape=(13, 15, 16)
func_3309_call = mod.get_global_var('func_3309')
func_3313_call = mutated_mod.get_global_var('func_3313')
const_3618 = relay.const([[-10,3,1,-2,4,10,8,-1,-3,-4,-8,6,6,4,7,-6,-8,6],[-4,4,6,8,-4,-1,-3,-8,4,7,-9,-4,10,-3,10,10,10,4],[8,1,10,8,7,-2,-10,-2,3,5,-7,-4,2,3,-5,-7,8,4],[-10,-1,10,7,-6,7,5,3,-2,1,10,-5,2,8,2,9,-6,-10],[-6,6,-5,1,7,-6,-2,3,10,7,-2,3,10,-7,-2,5,-3,10],[-4,-2,7,-9,4,3,2,5,8,9,9,4,-4,-9,-10,6,2,-4],[-5,-9,5,-2,-1,-2,-4,7,-8,7,4,8,5,-7,-4,-5,1,10],[6,-4,9,-8,-8,10,-9,-7,-1,6,-3,-2,-1,-7,-2,2,-9,5],[-4,-4,-1,10,9,3,-6,-7,-10,-5,-7,5,1,7,4,9,8,-2],[-8,-7,2,9,6,7,9,7,4,7,-1,-5,-8,-5,-8,3,3,-4],[-9,3,1,3,1,5,-6,-3,7,-2,-4,9,-7,-9,4,5,6,-3],[7,-6,8,4,-4,-8,6,-3,-8,2,9,-4,-7,-8,-7,2,5,-2]], dtype = "uint16")#candidate|3618|(12, 18)|const|uint16
call_3617 = relay.TupleGetItem(func_3309_call(relay.reshape(const_3618.astype('uint16'), [6, 3, 12]), relay.reshape(const_3618.astype('uint16'), [6, 3, 12]), ), 1)
call_3619 = relay.TupleGetItem(func_3313_call(relay.reshape(const_3618.astype('uint16'), [6, 3, 12]), relay.reshape(const_3618.astype('uint16'), [6, 3, 12]), ), 1)
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
var_3624 = relay.var("var_3624", dtype = "float64", shape = (960,))#candidate|3624|(960,)|var|float64
call_3623 = func_1932_call(relay.reshape(var_3624.astype('float64'), [10, 16, 6]))
call_3625 = func_1932_call(relay.reshape(var_3624.astype('float64'), [10, 16, 6]))
uop_3630 = relay.asinh(call_3617.astype('float64')) # shape=(6, 3, 12)
uop_3632 = relay.asinh(call_3619.astype('float64')) # shape=(6, 3, 12)
output = relay.Tuple([uop_3610,const_3618,call_3623,var_3624,uop_3630,])
output2 = relay.Tuple([uop_3612,const_3618,call_3625,var_3624,uop_3632,])
func_3634 = relay.Function([var_3624,], output)
mod['func_3634'] = func_3634
mod = relay.transform.InferType()(mod)
var_3635 = relay.var("var_3635", dtype = "float64", shape = (960,))#candidate|3635|(960,)|var|float64
output = func_3634(var_3635)
func_3636 = relay.Function([var_3635], output)
mutated_mod['func_3636'] = func_3636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2476_call = mod.get_global_var('func_2476')
func_2478_call = mutated_mod.get_global_var('func_2478')
call_3641 = relay.TupleGetItem(func_2476_call(), 0)
call_3642 = relay.TupleGetItem(func_2478_call(), 0)
output = relay.Tuple([call_3641,])
output2 = relay.Tuple([call_3642,])
func_3643 = relay.Function([], output)
mod['func_3643'] = func_3643
mod = relay.transform.InferType()(mod)
output = func_3643()
func_3644 = relay.Function([], output)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3569_call = mod.get_global_var('func_3569')
func_3571_call = mutated_mod.get_global_var('func_3571')
call_3645 = func_3569_call()
call_3646 = func_3569_call()
output = call_3645
output2 = call_3646
func_3655 = relay.Function([], output)
mod['func_3655'] = func_3655
mod = relay.transform.InferType()(mod)
output = func_3655()
func_3656 = relay.Function([], output)
mutated_mod['func_3656'] = func_3656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_3676 = relay.TupleGetItem(func_3172_call(), 0)
call_3677 = relay.TupleGetItem(func_3174_call(), 0)
func_1862_call = mod.get_global_var('func_1862')
func_1867_call = mutated_mod.get_global_var('func_1867')
const_3686 = relay.const([[6],[2],[-1],[-1],[-9],[7],[2],[-2],[8],[10],[-7],[3],[7],[9],[-8],[3],[-6],[-7],[7],[-3],[9],[-2],[2],[1],[5],[-5],[10],[4],[-10],[7],[-3],[-1],[-7],[-3],[6],[-1],[-8],[9],[-8],[1],[-4],[6],[6],[3],[-2],[-3],[-1],[1],[5],[-2],[-3],[-8],[-5],[2],[7],[-7],[-2],[5],[4],[6],[-8],[-8],[-5],[9],[-4],[-3],[-4],[-8],[9],[-2],[-5],[-9],[3],[-9],[-4],[2],[3],[-1],[10],[10],[-10],[3],[-5],[-5],[-4],[3],[8],[-8],[-8],[10],[1],[-3],[4],[3],[-7],[2],[-6],[-3],[7],[-5],[5],[-10],[-2],[5],[-7],[-3],[9],[-3],[4],[-10],[10],[8],[6],[-5],[9],[6],[8],[8],[6],[1],[10],[-4],[-1],[-1],[6],[6],[3],[10],[-5],[-4],[6],[10],[-6],[5],[2]], dtype = "int16")#candidate|3686|(135, 1)|const|int16
const_3687 = relay.const([0.775242,-8.882208,0.627905,-7.139183,3.826220,4.540531,0.479419,-8.842133,1.874390,-7.882544,3.634637,-5.811579,9.819692,-1.754177,-0.269331,5.599447,7.872888,1.613047,-1.022578,-0.967888,-7.026623,-9.853409,1.314992,0.626939,0.290852,4.815005,8.655523,-1.868456,-5.894228,-0.700972,-2.196647,-8.436602,8.504388,-1.148338,0.173401,-7.531493,6.992209,-3.638480,6.453417,8.348503,1.741885,5.038510,-3.291143,5.733397,-8.545633,8.002854,-8.948891,-0.879681,-7.895218,1.150982,-1.623974,0.167560,-1.292455,-1.979911,9.121174,-9.933661,-9.311303,3.540171,6.136696,0.419646,-3.801439,0.272940,1.049614,9.842610,-2.078218,3.460199,-9.145486,-7.981310,-0.869865,-0.086143,0.736576,1.426780,5.392055,-7.655591,4.637339,-4.109550,8.745283,-9.995414,-9.511464,-8.014215,3.140601,1.602511,-2.463633,-7.674686,-1.227007,-4.031628,-3.793339,9.652882,-7.091511,-3.770827,-3.443684,-1.109486,-9.261532,-1.163950,-1.167966,-4.938635,-5.504648,9.842151,4.894526,-1.397624,-9.962915,3.464404,-5.180320,-3.108143,5.804919,-0.999483,-1.344187,8.496036,-1.348084,2.587942,-9.330358,-7.497540,5.510238,6.231091,5.346754,-0.530052,-8.065794,-4.329469,-5.155069,8.491517,-8.206065,9.471789,-1.297390,2.914697,-7.423482,4.134191,-8.069189,-4.014103,6.787450,2.058695,3.363293,1.728429,9.499634,-8.532933,-8.619283,1.816059,0.697759,9.451198,9.711151,-6.825126,4.008768,-4.416736,0.030822,9.651189], dtype = "float64")#candidate|3687|(144,)|const|float64
var_3688 = relay.var("var_3688", dtype = "float32", shape = (165, 9))#candidate|3688|(165, 9)|var|float32
const_3689 = relay.const([-6,-6,1,-10,2,-2,-5,-7,6,-8,-6,1,4,3,1,-2,4,3,-1,2,2,-2,-1,-3,7,-5,2,10,-4,-8,3,-5,7,-2,1,-2,10,-2,-3,9,6,2,10,4,7,10,-1,8,-4,-6,4,10,2,-8,-6,-6,1,-10,1,8,7,1,4,6,10,3,-10,2,4,10,7,10,-5,2,4,8,-7,-9,-8,8,-9,-4,3,-4,3,7,-9,9,-7,3,-10,-5,10,5,3,6,6,2,3,6,-9,8,-10,-5,10,2,-7,-5,3,4,5,9,-7,9,-8,-6,10,6,-2,10,-6,-10,-9,1,6,9,3,-3,10,10,8,4,3,9,8,-7,-10,-9,-3,3,6,-1,2,1,5,-10,1,-3,4,8,-1,-8,4,-2,-10,8,-10,6,4,-6,9,4,-9,-2,10,5,-9,-4,2,9,2,-7,8,-6,1,3,-9,-9,5,1,5,7,-1,-6,9,-5,5,-5,7,7,-5,-7,-7,-3,10,-8,-2,-9,-7,5,10,-9,6,-10,-7,-9,7,-5,4,7,-1,-9,1,7,-2,-6,-4,1,-8,3,8,-8,-9,9,10,-7,10,-8,-5,9,-7,2,-9,-3,4,4,7,-6,4,2,-3,9,-7,6,-9,-1,-1,10,-8,9,-9,3,-5,-4,8,5,7,5,-2,-5,-6,-9,-9,-7,2,-8,-6,-6,-2,2,-8,-1,2,6,7,-4,8,-9,4,4,1,6,-3,-10,5,-8,8,6,5,3,5,-6,3,-2,1,-1,-7,10,1,8,-10,7,-6,-8,-8,5,-10,-8,4,8,-7,-8,7,-8,-9,-4,-3,-9,-7,1,9,1,-7,-2,9,8,10,2,-5,-8,7,5,5,2,-2,9,9,9,-7,6,-1,-5,2,2,8,-4,-4,-8,5,-2,2,-6,-1,4,-8,-5,-7,-1,8,8,5,-4,3,9,3,-4,-5,4,7,-4,-2,-3,-1,-10,8,-6,2,-2,-5,2,4,-1,-8,7,-6,-8,1,-9,-6,1,7,-6,9,-3,-1,-2,-2,-8,-1,4,5,8,-5,-6,8,-8,-7,3,4,-2,-2,2,1,-2,2,-2,10,-2,-8,10,8,-2,-2,-10,-2,3,-9,8,4,2,8,4,-3,6,7,-9,4,7,-8,-4,1,8,2,-10,8,4,-6,-7,-5,2,9,-6,-7,-10,-9], dtype = "uint16")#candidate|3689|(455,)|const|uint16
call_3685 = relay.TupleGetItem(func_1862_call(relay.reshape(const_3686.astype('int16'), [9, 5, 3]), relay.reshape(const_3687.astype('float64'), [1, 144]), relay.reshape(var_3688.astype('float32'), [1485,]), relay.reshape(const_3689.astype('uint16'), [455,]), ), 4)
call_3690 = relay.TupleGetItem(func_1867_call(relay.reshape(const_3686.astype('int16'), [9, 5, 3]), relay.reshape(const_3687.astype('float64'), [1, 144]), relay.reshape(var_3688.astype('float32'), [1485,]), relay.reshape(const_3689.astype('uint16'), [455,]), ), 4)
output = relay.Tuple([call_3676,call_3685,const_3686,const_3687,var_3688,const_3689,])
output2 = relay.Tuple([call_3677,call_3690,const_3686,const_3687,var_3688,const_3689,])
func_3695 = relay.Function([var_3688,], output)
mod['func_3695'] = func_3695
mod = relay.transform.InferType()(mod)
var_3696 = relay.var("var_3696", dtype = "float32", shape = (165, 9))#candidate|3696|(165, 9)|var|float32
output = func_3695(var_3696)
func_3697 = relay.Function([var_3696], output)
mutated_mod['func_3697'] = func_3697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_3715 = func_2894_call()
call_3716 = func_2894_call()
func_3634_call = mod.get_global_var('func_3634')
func_3636_call = mutated_mod.get_global_var('func_3636')
var_3718 = relay.var("var_3718", dtype = "float64", shape = (960,))#candidate|3718|(960,)|var|float64
call_3717 = relay.TupleGetItem(func_3634_call(relay.reshape(var_3718.astype('float64'), [960,])), 2)
call_3719 = relay.TupleGetItem(func_3636_call(relay.reshape(var_3718.astype('float64'), [960,])), 2)
output = relay.Tuple([call_3715,call_3717,var_3718,])
output2 = relay.Tuple([call_3716,call_3719,var_3718,])
func_3738 = relay.Function([var_3718,], output)
mod['func_3738'] = func_3738
mod = relay.transform.InferType()(mod)
var_3739 = relay.var("var_3739", dtype = "float64", shape = (960,))#candidate|3739|(960,)|var|float64
output = func_3738(var_3739)
func_3740 = relay.Function([var_3739], output)
mutated_mod['func_3740'] = func_3740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_3756 = relay.TupleGetItem(func_1964_call(), 0)
call_3757 = relay.TupleGetItem(func_1966_call(), 0)
var_3767 = relay.var("var_3767", dtype = "bool", shape = (13, 15, 16))#candidate|3767|(13, 15, 16)|var|bool
bop_3768 = relay.bitwise_and(call_3756.astype('int8'), relay.reshape(var_3767.astype('int8'), relay.shape_of(call_3756))) # shape=(13, 15, 16)
bop_3771 = relay.bitwise_and(call_3757.astype('int8'), relay.reshape(var_3767.astype('int8'), relay.shape_of(call_3757))) # shape=(13, 15, 16)
func_3212_call = mod.get_global_var('func_3212')
func_3213_call = mutated_mod.get_global_var('func_3213')
call_3773 = func_3212_call()
call_3774 = func_3212_call()
uop_3775 = relay.log2(call_3773.astype('float64')) # shape=(13, 15, 16)
uop_3777 = relay.log2(call_3774.astype('float64')) # shape=(13, 15, 16)
func_3738_call = mod.get_global_var('func_3738')
func_3740_call = mutated_mod.get_global_var('func_3740')
var_3783 = relay.var("var_3783", dtype = "float64", shape = (960,))#candidate|3783|(960,)|var|float64
call_3782 = relay.TupleGetItem(func_3738_call(relay.reshape(var_3783.astype('float64'), [960,])), 1)
call_3784 = relay.TupleGetItem(func_3740_call(relay.reshape(var_3783.astype('float64'), [960,])), 1)
var_3785 = relay.var("var_3785", dtype = "float64", shape = (13, 15, 16))#candidate|3785|(13, 15, 16)|var|float64
bop_3786 = relay.logical_xor(uop_3775.astype('uint64'), relay.reshape(var_3785.astype('uint64'), relay.shape_of(uop_3775))) # shape=(13, 15, 16)
bop_3789 = relay.logical_xor(uop_3777.astype('uint64'), relay.reshape(var_3785.astype('uint64'), relay.shape_of(uop_3777))) # shape=(13, 15, 16)
uop_3793 = relay.sigmoid(uop_3775.astype('float32')) # shape=(13, 15, 16)
uop_3795 = relay.sigmoid(uop_3777.astype('float32')) # shape=(13, 15, 16)
func_2832_call = mod.get_global_var('func_2832')
func_2835_call = mutated_mod.get_global_var('func_2835')
const_3798 = relay.const([0.669496,-2.561006,-8.868246,-3.508272,4.106411,-6.512427,0.385715,-8.318353,-6.934689,-2.475719,0.683349,7.768133,8.005966,0.918855,-3.021195,7.067225,8.642094,0.617915,-0.054464,-0.264482,3.757281,-4.242079,-7.437220,-3.961690,-4.971286,-7.445537,2.607042,8.676002,8.379165,-5.109953,-9.292617,8.399635,8.265445,8.076936,-5.308597,5.631920,-1.310713,-1.373282,-3.744207,4.691687,0.697133,-4.132256,-9.025086,5.619449,-5.809227,6.586560,5.942168,-4.460120,3.913805,-4.551735,-0.214430,4.892008,4.891162,4.437320,-1.936007,-9.579583,-6.263155,6.705587,0.752774,-1.252051,-8.641869,-4.451989,-0.378538,-5.896886,-6.173955,4.107448,8.228983,-6.616007,-0.534632,-2.356509,-5.658308,-2.022062,-8.372237,0.822207,4.239820,5.304932,7.899258,2.861855,0.054347,9.643020,1.995664,-3.158014,7.330522,7.223369,-0.415541,5.525644,3.037736,8.831066,9.820963,2.099102,-4.304122,-9.094610,-1.239478,7.551460,5.263178,3.321059,8.830063,8.511653,-5.378191,-7.953727,2.369463,-0.073672,5.803200,-9.840954,-8.435233,5.351340,-7.029042,1.471525,-2.118422,-4.811451,6.808610,-1.347026,6.662730,-2.524062,-3.999987,-5.417565,-5.573681,-3.641719,-9.268463,-5.490753,-7.505259,9.738073,4.492261,3.891700,3.955908,8.853651,-2.849078,9.839170,-4.630223,4.442258,-6.639856,-5.466480,-9.989045,1.803284,4.385914,-7.313452,1.102412,-6.390418,-1.315625,-9.735589,-2.959538,-9.366111,2.760361,-8.103070,8.976645,9.032131,-0.428584,-5.822232,-9.976058,8.532566,7.773003,-0.924371,-8.147693,9.587748,-6.009473,-3.412494,-2.841991,4.348686,9.012219,5.271471,-2.390134,-0.607557,-2.578485,8.580053,-0.604058,-5.027733,-4.478802,8.046709], dtype = "float32")#candidate|3798|(168,)|const|float32
const_3799 = relay.const([-4,3,10,9,-7,1,-3,2,4,-9,-7,-9,9,-3,9,-1,1,-4,-1,10,-2,-10,8,10,1,4,-8,-2,-4,-4,-2,-8,10,-5,-7,-1,-6,5,4,-9,-7,-2,7,2,10,4,2,9,6,-4,-1,-3,5,-4,-5,5,-3,9,-4,1,8,10,-7,-1,-2,-7,10,-1,-8,-8,-5,5,4,10,-4,2,6,1,10,8,8,5,5,-7,-1,6,-7,-8,6,9,-10,-3,4,2,7,-5,7,-5,8,-3,-4,-8,1,-4,-3,8,-5,-10,4,-2,-5,-6,-9,-3,2,7,-7,10,9,7,-8,-5,-6,3,-10,3,-2,-6,-9,-7,6,-8,8,-5,2], dtype = "int16")#candidate|3799|(135,)|const|int16
call_3797 = relay.TupleGetItem(func_2832_call(relay.reshape(const_3798.astype('float32'), [1, 12, 14]), relay.reshape(const_3799.astype('int16'), [135,]), ), 5)
call_3800 = relay.TupleGetItem(func_2835_call(relay.reshape(const_3798.astype('float32'), [1, 12, 14]), relay.reshape(const_3799.astype('int16'), [135,]), ), 5)
output = relay.Tuple([bop_3768,call_3782,var_3783,bop_3786,uop_3793,call_3797,const_3798,const_3799,])
output2 = relay.Tuple([bop_3771,call_3784,var_3783,bop_3789,uop_3795,call_3800,const_3798,const_3799,])
func_3804 = relay.Function([var_3767,var_3783,var_3785,], output)
mod['func_3804'] = func_3804
mod = relay.transform.InferType()(mod)
var_3805 = relay.var("var_3805", dtype = "bool", shape = (13, 15, 16))#candidate|3805|(13, 15, 16)|var|bool
var_3806 = relay.var("var_3806", dtype = "float64", shape = (960,))#candidate|3806|(960,)|var|float64
var_3807 = relay.var("var_3807", dtype = "float64", shape = (13, 15, 16))#candidate|3807|(13, 15, 16)|var|float64
output = func_3804(var_3805,var_3806,var_3807,)
func_3808 = relay.Function([var_3805,var_3806,var_3807,], output)
mutated_mod['func_3808'] = func_3808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3826 = relay.var("var_3826", dtype = "uint32", shape = ())#candidate|3826|()|var|uint32
var_3827 = relay.var("var_3827", dtype = "uint32", shape = (5, 1, 13))#candidate|3827|(5, 1, 13)|var|uint32
bop_3828 = relay.left_shift(var_3826.astype('uint32'), var_3827.astype('uint32')) # shape=(5, 1, 13)
func_2959_call = mod.get_global_var('func_2959')
func_2961_call = mutated_mod.get_global_var('func_2961')
call_3831 = relay.TupleGetItem(func_2959_call(), 0)
call_3832 = relay.TupleGetItem(func_2961_call(), 0)
output = relay.Tuple([bop_3828,call_3831,])
output2 = relay.Tuple([bop_3828,call_3832,])
func_3842 = relay.Function([var_3826,var_3827,], output)
mod['func_3842'] = func_3842
mod = relay.transform.InferType()(mod)
var_3843 = relay.var("var_3843", dtype = "uint32", shape = ())#candidate|3843|()|var|uint32
var_3844 = relay.var("var_3844", dtype = "uint32", shape = (5, 1, 13))#candidate|3844|(5, 1, 13)|var|uint32
output = func_3842(var_3843,var_3844,)
func_3845 = relay.Function([var_3843,var_3844,], output)
mutated_mod['func_3845'] = func_3845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3420_call = mod.get_global_var('func_3420')
func_3422_call = mutated_mod.get_global_var('func_3422')
call_3847 = func_3420_call()
call_3848 = func_3420_call()
output = call_3847
output2 = call_3848
func_3853 = relay.Function([], output)
mod['func_3853'] = func_3853
mod = relay.transform.InferType()(mod)
output = func_3853()
func_3854 = relay.Function([], output)
mutated_mod['func_3854'] = func_3854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3655_call = mod.get_global_var('func_3655')
func_3656_call = mutated_mod.get_global_var('func_3656')
call_3878 = func_3655_call()
call_3879 = func_3655_call()
output = relay.Tuple([call_3878,])
output2 = relay.Tuple([call_3879,])
func_3885 = relay.Function([], output)
mod['func_3885'] = func_3885
mod = relay.transform.InferType()(mod)
mutated_mod['func_3885'] = func_3885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3885_call = mutated_mod.get_global_var('func_3885')
call_3886 = func_3885_call()
output = call_3886
func_3887 = relay.Function([], output)
mutated_mod['func_3887'] = func_3887
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3909 = relay.var("var_3909", dtype = "float64", shape = (5, 16, 11))#candidate|3909|(5, 16, 11)|var|float64
var_3910 = relay.var("var_3910", dtype = "float64", shape = (5, 16, 11))#candidate|3910|(5, 16, 11)|var|float64
bop_3911 = relay.mod(var_3909.astype('float64'), relay.reshape(var_3910.astype('float64'), relay.shape_of(var_3909))) # shape=(5, 16, 11)
output = bop_3911
output2 = bop_3911
func_3916 = relay.Function([var_3909,var_3910,], output)
mod['func_3916'] = func_3916
mod = relay.transform.InferType()(mod)
mutated_mod['func_3916'] = func_3916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3916_call = mutated_mod.get_global_var('func_3916')
var_3918 = relay.var("var_3918", dtype = "float64", shape = (5, 16, 11))#candidate|3918|(5, 16, 11)|var|float64
var_3919 = relay.var("var_3919", dtype = "float64", shape = (5, 16, 11))#candidate|3919|(5, 16, 11)|var|float64
call_3917 = func_3916_call(var_3918,var_3919,)
output = call_3917
func_3920 = relay.Function([var_3918,var_3919,], output)
mutated_mod['func_3920'] = func_3920
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3947 = relay.const([[[-5.694124,6.419679,0.465167,-7.123109,0.128027,5.004504,-4.465352,6.277292,-4.867441,-0.058457,2.119559,-4.327764,3.044926],[-4.512504,-4.179785,4.115748,-1.593341,5.489476,-7.804779,-6.641371,-9.441715,9.572695,-3.551567,-0.236641,3.134058,8.015078],[0.942601,4.533205,3.219108,1.211630,1.619022,-6.492665,2.714356,-0.248064,5.007570,7.797843,-8.766652,-0.016507,-3.817451],[-3.652185,-1.804853,-9.735245,2.255507,-0.729511,4.378885,-9.027327,-1.392509,4.853384,-5.193404,0.023458,-1.268119,-8.373465],[-1.506929,-6.814490,5.747309,-5.946660,-1.501325,0.829675,5.541511,-1.482244,4.439942,4.407215,2.685697,9.895016,-9.339446],[8.605615,-8.567572,-6.995058,-2.087947,9.169377,5.055942,0.022919,-8.291689,1.848104,-1.275296,8.340316,-0.244305,-0.096384],[3.694147,-2.547917,-1.283052,-8.691319,7.594843,4.748197,7.358711,3.882461,8.907011,-1.903118,6.851423,2.670355,8.235129],[4.451149,6.669429,6.429214,4.820389,5.701278,0.394407,-3.213152,-5.549025,4.102313,-7.166541,-4.202597,1.085205,-4.506901],[-1.025467,6.820267,-9.527555,5.522172,-7.881124,-1.217976,-6.999600,7.323101,7.319317,-9.579456,-7.162049,-5.362916,-5.910306],[-6.604352,4.468517,-9.281608,-1.987692,-1.193104,-7.068739,-5.727948,-6.345966,6.718339,-8.865714,0.600230,-5.637534,4.067265],[3.559130,-3.138810,-7.522875,5.373994,6.706063,5.431118,0.407277,-0.026081,-8.385973,-4.659326,3.453410,5.207469,2.916329]],[[3.621048,2.497162,-7.860306,-4.192418,-6.162420,9.602340,9.451724,-8.644353,-7.214561,-3.614625,8.600352,3.438867,6.313247],[3.277914,2.100941,3.196212,0.504374,7.069064,6.569610,-3.823208,2.934674,-1.650531,-9.094318,8.670388,-6.232516,7.465125],[-7.765056,-4.300160,6.370377,8.876803,-6.049232,4.570337,5.258870,0.940563,6.858985,-3.279320,3.798873,6.134235,1.810568],[-9.290244,-0.702256,-9.053609,-8.730304,-0.737659,-0.158929,-3.109742,2.112906,-3.909713,4.971361,6.037424,4.534592,1.655112],[-8.556362,-8.692536,7.353286,-4.671566,-6.436179,7.314633,0.379693,-4.894570,1.502854,-9.351738,0.758861,3.370543,-7.805716],[6.210631,-4.116768,-2.747506,3.708611,3.154991,1.067302,-9.644466,-4.019626,-3.315029,9.698350,6.032320,-2.095785,4.630286],[5.002952,-4.546964,-3.586216,4.406681,-2.987047,8.918465,5.801755,-4.851272,-6.019910,-3.749295,-4.799023,-2.558011,-5.304599],[-3.087623,9.702433,-3.169629,-8.806422,-1.216469,-6.128032,-1.190673,8.881502,-2.191673,-4.950128,6.079221,2.189730,6.431110],[9.912719,9.520771,8.226441,-2.850240,-6.606218,7.936261,8.667286,9.070112,-6.094471,-2.120697,3.945730,-6.316394,7.890999],[5.316523,2.163578,8.360948,-2.682289,-6.839061,-3.142617,3.862742,8.124072,-7.562750,-9.608258,-0.097849,5.348726,7.071089],[5.178203,-5.802031,3.486578,8.197705,-0.520005,1.741008,-1.962015,-1.773627,-5.846187,6.657334,9.200470,-3.148348,5.447464]],[[-3.573893,2.166517,5.267908,4.516854,-4.502996,8.536384,7.616836,-9.339784,5.131814,0.586442,3.732144,1.930631,3.226597],[-3.169548,-7.239625,4.768394,-6.674190,-5.551329,7.639481,1.198809,9.673947,-1.587654,-4.911812,0.920150,5.464897,-4.256426],[0.237928,1.011711,-6.450776,-7.444751,5.031889,4.706956,0.069590,7.729668,3.715369,-4.734891,-5.659055,4.192649,7.570430],[-3.638626,2.324616,9.462016,-8.959669,-2.896589,6.588200,4.126092,-3.762441,-4.568352,0.615439,-9.915320,1.190452,1.472101],[1.256171,-4.852503,5.538269,1.029362,0.990567,3.037658,1.136093,-7.637250,1.225658,0.002991,-4.053328,6.551153,-4.291761],[-0.073023,-0.002896,6.773316,4.218678,-7.313706,-8.875628,7.259605,-5.337340,6.007574,-3.037698,-7.285067,0.042433,9.119258],[-1.149091,7.444561,1.953350,-4.583119,7.860643,1.149310,2.011516,-2.505628,-4.798353,-4.469681,-5.940011,-5.061110,2.461649],[-8.564749,4.672861,4.087608,-9.322613,-5.575800,-8.956232,9.777759,-5.500435,-7.460321,-3.912404,3.655131,5.119376,-3.841439],[9.085195,-2.764740,4.166463,5.908001,3.069998,-0.465557,-5.341067,4.756904,0.649803,-0.894867,4.075025,-6.772844,4.940292],[-3.574341,9.284463,3.796463,-6.415021,3.359922,-8.437745,-2.036349,4.976015,-6.496792,5.125342,1.488582,-2.456763,-0.966292],[-2.667993,-1.161217,-1.857592,-6.879386,5.801230,-1.688878,-7.670348,0.207360,-8.944838,-1.407386,1.313976,9.373250,-3.325195]],[[3.433898,6.548193,-1.413646,-0.740760,6.628561,-7.414128,-0.295544,8.998381,3.323198,1.774546,1.110581,-0.882863,3.172860],[-9.111385,-4.101612,4.435683,6.532944,7.169047,1.376824,-6.853676,-4.666304,-2.222657,-8.438578,3.151541,8.287116,5.299783],[-9.333212,-9.111040,2.314548,5.007619,3.232934,3.821791,2.099661,8.658999,0.149289,7.426886,-9.889729,-7.693458,-2.705335],[-7.323210,-2.393077,-5.889135,4.615141,9.647857,7.296068,-4.828185,9.241156,4.821386,-8.172604,5.728369,6.152274,7.350301],[3.391404,-2.723092,0.198064,4.418851,-9.259806,-4.815698,9.013507,-0.070213,-6.804476,6.646095,3.303130,-0.189081,0.220567],[3.595334,8.291762,-0.571562,-1.460829,-6.210468,0.046776,-9.856966,9.173156,2.567803,-0.668667,6.693301,-5.411185,-1.116885],[9.786000,9.901357,4.894641,5.579322,7.655768,3.386929,3.511577,8.381164,4.182813,-4.244048,5.712745,8.436843,-3.141058],[-5.091426,-2.524687,-6.232706,-5.448767,-4.737823,-1.897001,-7.781501,-0.597655,8.042778,0.082232,-9.093878,-5.032978,1.901512],[0.749678,1.806469,4.157522,-3.884399,5.186796,3.615292,2.308287,1.313678,-5.506470,4.498798,6.964314,-3.951068,-7.083753],[1.563091,3.812304,-2.528398,-2.922906,-5.109163,0.218203,0.197626,2.591631,-1.329868,-4.449601,-3.171182,6.206773,3.666722],[3.208516,7.648580,6.510524,-1.502952,5.859949,2.602870,6.628216,7.685077,-3.074536,2.884812,-4.799620,-8.708499,1.663771]],[[5.011896,4.536888,7.101542,-5.141629,-8.552577,1.848537,-7.966656,1.232545,-0.530104,-8.388789,4.032167,-5.625151,-5.992946],[1.082631,-0.719539,-2.919333,6.402632,-4.949335,-6.932346,-7.523725,-8.433599,6.628811,-0.044296,-6.274749,0.297718,7.396685],[-2.885270,7.174069,-2.831646,2.932109,4.383133,-1.987110,8.688940,6.340446,8.988115,-4.656554,-6.313938,-0.990509,-8.503809],[5.283236,7.442825,8.147980,3.071187,7.158923,3.258888,-2.642911,-7.538289,3.418211,4.234008,3.845658,-9.451510,2.059889],[7.641595,-5.465908,-9.567219,-7.516066,-1.412107,3.097545,-1.321095,7.520365,-8.432783,2.870299,-4.266394,-2.248851,0.865466],[-5.863775,-5.808128,-4.616227,6.933713,3.802575,0.022790,-4.024327,9.274968,0.897373,-0.961054,6.455356,-8.115851,5.985084],[-4.974415,-6.864779,0.079063,5.272123,-6.529238,1.288277,-3.085343,-2.291329,-5.438277,4.760036,-7.653075,-8.153206,1.123358],[5.747849,-2.320593,-3.411284,4.651223,-5.703735,6.369595,-9.003885,-3.697527,-5.979346,-1.001506,-8.945677,7.191330,5.056349],[-0.418463,-6.729510,3.449573,0.332927,-2.048171,-6.020199,-7.653379,-0.492229,3.121039,-0.665059,-4.599975,-1.748367,2.929450],[-2.791758,3.359056,-6.823138,9.867858,1.115547,7.536685,-1.779788,5.305120,1.293864,2.194371,3.682324,-7.783225,-8.185513],[-3.878595,7.551170,1.164496,-5.129460,4.543802,-5.675359,0.561694,-2.277858,-4.523951,-0.369785,2.950219,-7.154035,1.291596]],[[3.662593,8.688448,9.439765,6.640598,7.941874,-0.506910,3.809871,-6.974634,-4.141745,7.043708,-7.581294,2.069752,0.568512],[-4.870450,2.955699,-1.566628,8.540801,2.021347,7.677410,-8.249954,8.747229,2.655434,-7.668216,7.004545,1.753139,1.754994],[-1.575413,9.511293,-5.365169,4.919170,7.347272,-6.614479,6.460881,6.038464,-0.678192,5.717013,-7.623059,-1.015467,6.557272],[1.144842,5.663884,-4.101710,8.921816,2.536548,-9.377208,-5.486069,-9.339193,-3.466100,-2.862196,8.834832,7.423293,-0.668070],[8.711360,3.534652,-8.486388,0.320036,3.440333,-8.390023,8.959371,-3.726265,-7.501198,-6.883438,-7.841350,8.825615,-7.316699],[2.535717,4.910351,-4.631201,4.950912,6.425120,-8.026744,2.094011,0.023946,0.967012,3.709487,-6.856779,-6.899052,9.348533],[5.061459,6.374359,8.873098,-8.561878,-1.593757,7.672999,-1.750638,-8.972474,1.479718,-5.804246,7.928883,-7.562304,-2.601766],[-0.615575,3.947171,2.096271,-1.864644,-8.380633,5.392165,8.157788,8.218492,7.568546,6.109125,5.453334,2.112832,7.757731],[7.733103,-6.538993,-4.228987,-6.886106,-3.405087,7.608181,-0.565198,-2.160343,-0.073025,2.847140,-3.602405,7.738603,-3.369547],[-3.058744,-8.109248,-6.408833,9.301892,4.110773,-2.017152,8.678195,1.718395,2.887031,1.030750,-6.696502,1.976499,5.167570],[-7.457758,-4.048125,2.030243,2.924751,-9.758940,0.906451,-2.015835,-9.451090,-1.108307,2.932425,-6.005696,7.917681,-9.504603]],[[0.942173,-1.525387,1.976255,3.932515,0.289600,-3.512610,-9.549528,3.585985,2.776061,9.380754,-7.521643,7.874593,1.061576],[-7.785272,3.948993,-5.912695,9.932722,-2.602481,-5.569398,-2.504462,-0.103378,-5.126967,0.267211,9.257147,4.404970,-0.043808],[-6.802687,3.351893,9.012814,7.734724,-0.221968,0.472822,-5.474180,-3.161775,5.787749,-7.891482,8.427238,1.562449,-3.025813],[2.229468,6.692972,6.407300,-2.812089,5.032869,6.498907,-9.292384,7.675109,8.665784,7.879416,-1.262014,-4.853924,4.619058],[9.149093,-9.365019,5.563560,4.289146,-4.603201,-2.019507,1.290706,-3.932639,-1.885825,-9.264841,8.797077,4.477082,6.941817],[0.593163,3.145366,3.153978,3.889128,-9.481048,-5.963796,9.234210,3.600815,1.364348,-9.550040,9.068766,-0.533862,-3.786722],[8.418320,0.503978,6.431055,-3.571325,1.637493,6.196626,5.186396,7.344024,4.547441,-7.696779,-2.216493,7.798047,-7.613183],[-9.405923,-5.696853,-7.873382,-9.079619,-9.938520,-2.626019,-4.735579,-7.708369,2.700951,-6.449074,7.674704,0.898620,-6.464830],[9.492550,-0.438133,-4.122513,7.971640,0.502791,-5.702973,8.665706,6.132849,1.226120,3.959574,6.625960,8.577526,0.571078],[9.177594,0.974449,-7.043908,0.149255,-6.923784,4.062921,-9.606066,8.727275,9.137249,9.732312,-6.087598,-7.096388,0.120942],[-7.297211,7.418721,8.246754,1.247457,-1.328069,-5.200391,-9.046638,4.640144,-9.639150,7.302956,-6.101562,-3.966281,0.087452]],[[-0.358523,-2.166292,-3.164977,8.388905,-8.675969,-5.748652,9.625356,2.665613,7.483286,-6.176174,-3.760514,-9.947309,-4.544089],[-3.901236,0.992173,0.927045,2.945979,1.161477,7.247674,-2.203199,0.747900,7.708692,3.121684,-2.806246,-6.385109,-2.785310],[4.364913,-9.153529,1.590100,-9.849709,1.136235,1.235546,0.706277,-8.360943,0.325855,-7.827711,4.226753,2.731631,7.992179],[8.006688,-7.314792,-5.096872,4.796250,1.571536,9.724645,2.499193,0.959732,0.253984,0.516670,3.429789,-1.449211,2.123948],[9.714820,0.410965,3.221603,8.642691,-4.331184,5.630143,-9.554738,-2.401090,1.355019,-0.623563,-6.248460,4.428906,9.987658],[-9.141477,2.430201,-7.851927,-8.625283,5.280603,-2.640689,7.301753,-6.210868,-2.250092,8.703296,-5.388331,-2.533059,-1.745391],[-4.093674,-5.323680,-8.034486,-9.577925,9.544651,8.225316,-4.447271,9.019977,8.727126,2.668419,1.913601,-7.790387,-2.599508],[0.017337,-9.435117,-9.380626,-1.930612,-3.153767,2.392898,-7.160353,6.346657,5.223725,-7.745421,4.161029,5.216269,8.858639],[-5.262092,-5.434477,-5.021992,-3.325606,9.517820,1.625919,8.499830,-1.613153,-2.109061,6.784968,-2.512024,6.984914,2.807912],[-9.367015,5.641711,-0.152985,-8.359660,5.492551,-5.822516,7.861114,-2.734319,2.546535,-4.257499,-9.702124,-1.930036,1.914136],[-1.341629,7.946518,5.180607,1.731820,0.470799,-1.191312,-3.674808,-7.528589,5.492562,-4.993111,7.752627,-0.480430,1.950807]],[[-1.561156,-0.549440,4.607480,0.882138,5.911097,-4.229876,8.227303,-4.159134,6.552375,6.175731,9.748816,4.722498,-2.330498],[-2.128916,5.610614,-6.754240,4.534108,6.882735,8.256422,-9.917817,2.118173,0.540595,-5.368166,-1.743332,-5.966231,-5.326368],[7.041025,9.407103,-2.420170,-8.139437,-3.968450,6.475918,7.336139,-5.769564,9.998085,5.820713,4.549938,-8.134312,-5.129386],[-3.269285,-6.144810,3.648805,-0.186960,-6.128000,-9.291797,-3.865460,5.797158,-5.339364,-0.118260,6.003951,1.990189,-4.289293],[-6.605958,6.397748,-3.662490,1.651505,-2.701181,-4.210455,-3.835383,9.552433,4.861930,5.830273,6.117964,1.996815,-7.787060],[-3.111926,-9.621818,-9.652343,0.221584,0.673137,5.924894,-6.962339,7.344441,0.866287,1.037767,-0.581476,-7.316307,5.439237],[-9.189280,-3.952490,-7.113909,-0.701909,0.866075,3.835649,-3.539794,-9.134527,9.116157,3.887350,4.017247,-2.820193,1.131802],[7.706311,-8.627024,-6.356911,-9.737002,2.933928,7.492734,7.036270,0.667614,9.646544,4.536398,6.764915,-8.109497,-4.403931],[8.629636,0.404969,0.973183,6.676713,8.567999,-5.729306,-7.583942,-5.864415,-9.232906,-6.193359,-4.557404,3.723630,-9.879856],[1.443246,-6.445923,-4.574320,-4.378776,-3.371082,8.935270,-3.831790,0.030469,-1.505406,-3.947495,6.476117,-9.368520,-4.098021],[9.639790,-0.189613,2.427133,2.508197,5.323332,3.716100,7.270440,-7.859459,3.053994,4.465062,8.178193,-3.173844,8.237278]],[[-5.951471,-9.335928,-6.125030,9.406155,3.448018,-2.028004,-4.675514,-4.077388,-4.794036,2.164734,-5.860518,8.786581,-8.361601],[5.418485,-8.027785,-9.792659,-3.304647,-7.758361,6.099584,-9.847347,-1.448336,2.261634,-3.585047,-7.449819,5.079076,6.500840],[0.135923,5.107580,-6.564727,-3.596959,7.222867,7.583290,0.142285,5.031560,4.329154,7.643284,-6.645569,-0.220555,9.403723],[3.962237,5.080304,-2.563276,2.612167,-2.089688,8.270294,2.065207,7.142667,-9.236691,-5.582121,0.487565,8.420191,4.059152],[8.682387,0.807820,-9.430780,2.346384,1.055472,-0.547919,-4.513578,-3.824479,-5.943075,-3.730319,8.008691,-8.183737,-8.712523],[0.444169,9.993755,-3.094139,8.972047,8.298505,-5.704742,5.519802,-1.733721,0.140590,-1.514488,-9.181885,3.010861,-3.404628],[-2.324794,-9.739626,0.084688,-8.895805,-7.546383,6.315518,-9.876541,7.088763,-8.749298,3.507750,2.914642,3.480787,-7.702862],[-1.530317,-3.997869,-1.405726,7.478683,-7.506898,9.640755,3.454210,4.154494,7.927286,4.443948,-9.856926,9.891315,0.236325],[-4.000039,-0.977958,-0.553134,-6.270258,8.308084,3.760296,3.495673,6.953365,6.098431,-3.700315,-0.793658,-2.792096,5.215044],[9.986651,-5.231807,6.315877,6.863769,-2.023712,-6.952612,-4.128779,1.448583,-4.648000,7.667444,3.703849,2.533341,3.225741],[5.227350,4.072182,1.087986,9.724297,3.630492,-9.835543,-6.622669,4.541498,-5.691357,2.588098,2.040291,-5.930659,9.896804]],[[0.563488,-0.947402,-1.068685,1.402507,-8.438658,-6.130071,-3.288636,-9.745473,-0.579469,6.876294,8.801838,-0.114395,-0.033230],[-1.412849,-4.329808,-2.723509,-2.341684,4.299220,6.258734,7.179708,0.043946,9.013361,9.193556,-8.044351,9.013312,3.660766],[3.514501,6.800677,-2.924695,0.343558,0.475674,-3.292153,-4.482816,4.398461,-6.447123,5.627607,-3.491074,-3.124543,-8.084651],[-7.156940,-4.340285,-0.089616,2.382772,7.033430,5.961647,-7.218660,3.677698,6.599462,-0.446215,2.161831,9.047085,-7.591570],[3.087199,8.705122,-1.985820,4.758710,-2.412275,-0.153883,8.476163,3.191154,-6.893329,-8.676623,-2.569046,4.691072,-6.637847],[-6.803536,8.772366,5.054621,1.895589,-3.592573,-5.993802,-7.190975,2.627896,-6.338152,3.634642,-5.034611,-6.500065,4.792622],[-6.427191,1.869978,5.279695,-0.798576,0.981810,2.534255,-4.714059,-5.034475,-0.267441,6.379648,2.734878,-7.730934,0.108949],[1.658314,7.706823,4.382878,7.879618,-1.783760,-5.824070,-1.944992,7.711034,-6.827636,9.132813,-1.250754,8.941142,-4.001271],[-7.223440,3.588727,8.809628,4.312940,6.392306,-9.793955,8.981761,2.486469,0.964346,2.302467,-3.554484,-8.623445,-4.185344],[7.490747,5.934362,5.738430,-2.758077,6.741152,5.466465,1.012342,4.351570,0.158105,-5.191003,-6.097134,-7.013489,-7.005549],[9.264670,3.680214,-0.487956,-5.114514,-4.020752,6.667018,-6.636951,-4.706066,0.036646,9.635115,0.801812,1.125153,5.249162]],[[4.879928,-7.922973,-0.115861,-7.611808,7.060312,-8.852662,-3.666292,0.544580,-5.559871,2.681054,4.088906,-3.542610,9.773716],[-9.177950,1.493115,3.320551,2.223182,9.102685,0.386470,9.079548,-1.723356,-8.963461,-2.779436,-5.984073,-5.617238,6.222077],[-6.940054,-7.150799,2.158235,-4.121196,-7.474623,5.282619,3.177045,-1.606176,7.339930,-4.198975,3.578153,-7.739258,-8.532466],[-5.093371,-1.281962,3.563791,4.919508,0.605356,-0.167023,-5.636829,0.677844,-7.530058,-1.130887,7.728797,0.419075,9.178273],[3.616543,-8.041412,-4.828377,-5.863512,2.291580,7.139883,1.796491,1.750504,-9.896764,-7.633730,-7.793240,1.918152,2.656679],[-3.295769,-4.532416,-4.982285,0.421463,2.057185,9.000516,2.524240,0.907839,-8.187821,8.492982,-5.642233,5.639365,1.204451],[-3.651285,-4.118946,1.104581,-8.209022,-6.357630,4.702630,9.219918,2.049124,-7.237724,1.592525,7.869588,-6.266232,-2.771351],[-3.463511,-2.691314,7.443410,-1.705968,-1.042719,-1.679340,9.481896,5.928265,-8.748224,-0.254996,-8.351829,-2.794233,-3.127393],[4.796593,-9.757989,-9.794205,0.267083,-5.785333,7.735119,-2.534386,6.038414,-0.729152,9.657999,8.219645,-7.363521,8.636044],[4.256922,8.196906,2.488192,-9.409186,-7.681428,-4.307859,4.450969,-8.635199,-2.345167,7.444528,3.289742,-0.041386,6.169283],[-6.672241,3.543115,-9.308631,-8.874010,3.236889,-8.565098,1.457437,-5.385319,-6.550382,7.592915,-8.896756,4.582620,1.595758]],[[2.064156,0.708490,4.540659,-0.834436,3.189259,6.190119,-1.803836,4.680839,7.002249,7.854267,1.461847,2.183705,-5.078611],[-9.880377,5.512025,-5.724997,9.197175,-5.638882,-4.087949,-0.329972,5.452584,1.208463,-8.994942,6.018207,0.268430,7.283539],[-2.103262,4.196545,-8.164784,7.633914,8.393353,-3.909909,8.666361,-3.366596,4.875750,-6.915533,-2.577844,9.695530,-9.480473],[-4.026434,7.157931,-5.276091,5.756966,2.275702,5.876878,5.298356,-0.618569,-7.058870,-1.606488,6.992256,4.859637,1.909098],[2.819864,-4.952645,5.120190,-2.972328,-6.855710,-2.365938,-0.663980,3.927819,-2.258110,1.487975,-7.216486,9.291711,-2.016509],[-0.912729,-5.553279,0.189871,-4.878492,6.258791,5.721401,5.473766,6.606779,0.018503,0.452315,1.474210,3.557727,-4.028245],[-3.713751,9.118509,8.626483,-3.927756,6.927180,5.359558,4.515695,5.631629,-5.832944,-7.197994,-0.854325,-1.255232,-2.926742],[-9.412454,-6.878320,6.389993,-5.986106,4.791778,9.747600,2.036774,7.785416,-9.379746,2.303785,0.813446,-8.048065,2.001297],[8.092975,-3.220909,-8.549382,-0.679674,-3.451918,3.177293,-7.830758,-2.113620,1.597446,-3.821582,-5.123896,5.685658,-0.632168],[-6.842802,6.993032,4.425346,2.582424,-7.807611,-3.689008,-1.250051,3.300764,3.866667,-5.400355,4.683358,0.686852,-9.478636],[-4.596952,-7.648945,5.283007,-7.371982,-0.674118,2.691064,4.869515,3.854391,-4.978322,-4.771146,-7.463766,3.238473,6.615298]]], dtype = "float64")#candidate|3947|(13, 11, 13)|const|float64
uop_3948 = relay.sqrt(const_3947.astype('float64')) # shape=(13, 11, 13)
func_3853_call = mod.get_global_var('func_3853')
func_3854_call = mutated_mod.get_global_var('func_3854')
call_3955 = func_3853_call()
call_3956 = func_3853_call()
output = relay.Tuple([uop_3948,call_3955,])
output2 = relay.Tuple([uop_3948,call_3956,])
func_3971 = relay.Function([], output)
mod['func_3971'] = func_3971
mod = relay.transform.InferType()(mod)
output = func_3971()
func_3972 = relay.Function([], output)
mutated_mod['func_3972'] = func_3972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3498_call = mod.get_global_var('func_3498')
func_3499_call = mutated_mod.get_global_var('func_3499')
call_3979 = relay.TupleGetItem(func_3498_call(), 1)
call_3980 = relay.TupleGetItem(func_3499_call(), 1)
output = relay.Tuple([call_3979,])
output2 = relay.Tuple([call_3980,])
func_3987 = relay.Function([], output)
mod['func_3987'] = func_3987
mod = relay.transform.InferType()(mod)
mutated_mod['func_3987'] = func_3987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3987_call = mutated_mod.get_global_var('func_3987')
call_3988 = func_3987_call()
output = call_3988
func_3989 = relay.Function([], output)
mutated_mod['func_3989'] = func_3989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2859_call = mod.get_global_var('func_2859')
func_2860_call = mutated_mod.get_global_var('func_2860')
call_4018 = func_2859_call()
call_4019 = func_2859_call()
output = relay.Tuple([call_4018,])
output2 = relay.Tuple([call_4019,])
func_4033 = relay.Function([], output)
mod['func_4033'] = func_4033
mod = relay.transform.InferType()(mod)
output = func_4033()
func_4034 = relay.Function([], output)
mutated_mod['func_4034'] = func_4034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4033_call = mod.get_global_var('func_4033')
func_4034_call = mutated_mod.get_global_var('func_4034')
call_4043 = relay.TupleGetItem(func_4033_call(), 0)
call_4044 = relay.TupleGetItem(func_4034_call(), 0)
uop_4050 = relay.cos(call_4043.astype('float32')) # shape=(13, 15, 16)
uop_4052 = relay.cos(call_4044.astype('float32')) # shape=(13, 15, 16)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_4061 = relay.TupleGetItem(func_3643_call(), 0)
call_4062 = relay.TupleGetItem(func_3644_call(), 0)
uop_4068 = relay.log(uop_4050.astype('float32')) # shape=(13, 15, 16)
uop_4070 = relay.log(uop_4052.astype('float32')) # shape=(13, 15, 16)
output = relay.Tuple([call_4061,uop_4068,])
output2 = relay.Tuple([call_4062,uop_4070,])
func_4072 = relay.Function([], output)
mod['func_4072'] = func_4072
mod = relay.transform.InferType()(mod)
output = func_4072()
func_4073 = relay.Function([], output)
mutated_mod['func_4073'] = func_4073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_4074 = func_2487_call()
call_4075 = func_2487_call()
var_4081 = relay.var("var_4081", dtype = "float64", shape = (10, 96))#candidate|4081|(10, 96)|var|float64
bop_4082 = relay.power(call_4074.astype('float64'), relay.reshape(var_4081.astype('float64'), relay.shape_of(call_4074))) # shape=(10, 96)
bop_4085 = relay.power(call_4075.astype('float64'), relay.reshape(var_4081.astype('float64'), relay.shape_of(call_4075))) # shape=(10, 96)
output = bop_4082
output2 = bop_4085
func_4086 = relay.Function([var_4081,], output)
mod['func_4086'] = func_4086
mod = relay.transform.InferType()(mod)
var_4087 = relay.var("var_4087", dtype = "float64", shape = (10, 96))#candidate|4087|(10, 96)|var|float64
output = func_4086(var_4087)
func_4088 = relay.Function([var_4087], output)
mutated_mod['func_4088'] = func_4088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_4101 = relay.TupleGetItem(func_1964_call(), 0)
call_4102 = relay.TupleGetItem(func_1966_call(), 0)
output = relay.Tuple([call_4101,])
output2 = relay.Tuple([call_4102,])
func_4135 = relay.Function([], output)
mod['func_4135'] = func_4135
mod = relay.transform.InferType()(mod)
mutated_mod['func_4135'] = func_4135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4135_call = mutated_mod.get_global_var('func_4135')
call_4136 = func_4135_call()
output = call_4136
func_4137 = relay.Function([], output)
mutated_mod['func_4137'] = func_4137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3655_call = mod.get_global_var('func_3655')
func_3656_call = mutated_mod.get_global_var('func_3656')
call_4194 = func_3655_call()
call_4195 = func_3655_call()
var_4196 = relay.var("var_4196", dtype = "float64", shape = (10, 96))#candidate|4196|(10, 96)|var|float64
bop_4197 = relay.mod(call_4194.astype('float32'), relay.reshape(var_4196.astype('float32'), relay.shape_of(call_4194))) # shape=(10, 96)
bop_4200 = relay.mod(call_4195.astype('float32'), relay.reshape(var_4196.astype('float32'), relay.shape_of(call_4195))) # shape=(10, 96)
func_3695_call = mod.get_global_var('func_3695')
func_3697_call = mutated_mod.get_global_var('func_3697')
var_4205 = relay.var("var_4205", dtype = "float32", shape = (1485,))#candidate|4205|(1485,)|var|float32
call_4204 = relay.TupleGetItem(func_3695_call(relay.reshape(var_4205.astype('float32'), [165, 9])), 3)
call_4206 = relay.TupleGetItem(func_3697_call(relay.reshape(var_4205.astype('float32'), [165, 9])), 3)
func_1526_call = mod.get_global_var('func_1526')
func_1529_call = mutated_mod.get_global_var('func_1529')
var_4211 = relay.var("var_4211", dtype = "float64", shape = (3120,))#candidate|4211|(3120,)|var|float64
call_4210 = relay.TupleGetItem(func_1526_call(relay.reshape(var_4211.astype('float64'), [13, 15, 16])), 0)
call_4212 = relay.TupleGetItem(func_1529_call(relay.reshape(var_4211.astype('float64'), [13, 15, 16])), 0)
output = relay.Tuple([bop_4197,call_4204,var_4205,call_4210,var_4211,])
output2 = relay.Tuple([bop_4200,call_4206,var_4205,call_4212,var_4211,])
func_4215 = relay.Function([var_4196,var_4205,var_4211,], output)
mod['func_4215'] = func_4215
mod = relay.transform.InferType()(mod)
var_4216 = relay.var("var_4216", dtype = "float64", shape = (10, 96))#candidate|4216|(10, 96)|var|float64
var_4217 = relay.var("var_4217", dtype = "float32", shape = (1485,))#candidate|4217|(1485,)|var|float32
var_4218 = relay.var("var_4218", dtype = "float64", shape = (3120,))#candidate|4218|(3120,)|var|float64
output = func_4215(var_4216,var_4217,var_4218,)
func_4219 = relay.Function([var_4216,var_4217,var_4218,], output)
mutated_mod['func_4219'] = func_4219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3885_call = mod.get_global_var('func_3885')
func_3887_call = mutated_mod.get_global_var('func_3887')
call_4268 = relay.TupleGetItem(func_3885_call(), 0)
call_4269 = relay.TupleGetItem(func_3887_call(), 0)
func_3309_call = mod.get_global_var('func_3309')
func_3313_call = mutated_mod.get_global_var('func_3313')
var_4274 = relay.var("var_4274", dtype = "uint16", shape = (216,))#candidate|4274|(216,)|var|uint16
call_4273 = relay.TupleGetItem(func_3309_call(relay.reshape(var_4274.astype('uint16'), [6, 3, 12]), relay.reshape(var_4274.astype('uint16'), [6, 3, 12]), ), 1)
call_4275 = relay.TupleGetItem(func_3313_call(relay.reshape(var_4274.astype('uint16'), [6, 3, 12]), relay.reshape(var_4274.astype('uint16'), [6, 3, 12]), ), 1)
output = relay.Tuple([call_4268,call_4273,var_4274,])
output2 = relay.Tuple([call_4269,call_4275,var_4274,])
func_4278 = relay.Function([var_4274,], output)
mod['func_4278'] = func_4278
mod = relay.transform.InferType()(mod)
mutated_mod['func_4278'] = func_4278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4279 = relay.var("var_4279", dtype = "uint16", shape = (216,))#candidate|4279|(216,)|var|uint16
func_4278_call = mutated_mod.get_global_var('func_4278')
call_4280 = func_4278_call(var_4279)
output = call_4280
func_4281 = relay.Function([var_4279], output)
mutated_mod['func_4281'] = func_4281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3420_call = mod.get_global_var('func_3420')
func_3422_call = mutated_mod.get_global_var('func_3422')
call_4315 = func_3420_call()
call_4316 = func_3420_call()
func_1268_call = mod.get_global_var('func_1268')
func_1270_call = mutated_mod.get_global_var('func_1270')
var_4352 = relay.var("var_4352", dtype = "float64", shape = (144,))#candidate|4352|(144,)|var|float64
call_4351 = relay.TupleGetItem(func_1268_call(relay.reshape(var_4352.astype('float64'), [6, 2, 12])), 1)
call_4353 = relay.TupleGetItem(func_1270_call(relay.reshape(var_4352.astype('float64'), [6, 2, 12])), 1)
output = relay.Tuple([call_4315,call_4351,var_4352,])
output2 = relay.Tuple([call_4316,call_4353,var_4352,])
func_4354 = relay.Function([var_4352,], output)
mod['func_4354'] = func_4354
mod = relay.transform.InferType()(mod)
var_4355 = relay.var("var_4355", dtype = "float64", shape = (144,))#candidate|4355|(144,)|var|float64
output = func_4354(var_4355)
func_4356 = relay.Function([var_4355], output)
mutated_mod['func_4356'] = func_4356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3885_call = mod.get_global_var('func_3885')
func_3887_call = mutated_mod.get_global_var('func_3887')
call_4370 = relay.TupleGetItem(func_3885_call(), 0)
call_4371 = relay.TupleGetItem(func_3887_call(), 0)
output = relay.Tuple([call_4370,])
output2 = relay.Tuple([call_4371,])
func_4391 = relay.Function([], output)
mod['func_4391'] = func_4391
mod = relay.transform.InferType()(mod)
output = func_4391()
func_4392 = relay.Function([], output)
mutated_mod['func_4392'] = func_4392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3420_call = mod.get_global_var('func_3420')
func_3422_call = mutated_mod.get_global_var('func_3422')
call_4410 = func_3420_call()
call_4411 = func_3420_call()
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
const_4419 = relay.const([8.913093,-2.419147,-6.403294,-7.385650,0.779633,2.816137,9.031139,-3.509019,0.981277,7.124534,7.717751,0.765971,-3.725867,9.401704,-1.764044,-4.704567,7.167503,9.134032,-3.439989,6.426132,-6.546383,-1.918874,-6.402835,5.620752,-4.271245,7.742184,5.803157,-1.435092,6.236676,2.050969,0.221587,-8.270234,9.179536,-1.277519,4.869639,0.637750,-0.437378,4.927199,2.254391,-2.562759,3.459032,0.899790,2.296446,-8.975653,0.396022,-4.759715,-4.151793,4.823118,-5.634540,2.344253,-4.693215,5.213774,-5.591040,5.682406,0.491596,-9.745436,2.557268,-7.792567,4.477467,6.898220,-7.648150,9.553792,-4.823896,-6.143497,-1.823071,-8.408107,4.168857,7.772102,-7.958128,6.166995,2.184062,-8.284846,9.177851,3.745315,-1.475510,6.092666,-6.778322,8.414497,7.452035,-7.988796,4.708357,-4.215779,-8.541709,5.575651,-9.490914,6.947686,-9.650414,-1.013525,-2.069677,-7.502184,9.327654,2.516007,5.836699,-6.416217,4.817869,-9.244135,-8.405972,1.870414,8.308804,0.011011,8.744710,7.657978,3.144787,5.203186,3.230200,-2.454815,6.534622,-7.342652,-2.008889,1.248962,0.728449,-3.495063,9.374653,5.404635,-9.672033,-1.906326,9.293504,8.901198,-0.177643,-4.774325,8.111423,-8.504459,-6.674430,5.072279,7.236819,-0.675591,-3.554607,-0.283083,-9.643061,-2.253735,4.085353,-8.495699,-1.225870,5.875411,-1.190969,-6.617824,-8.988429,-8.376397,-3.052866,1.060034,0.142996,-0.319117,-6.819017,7.840433], dtype = "float64")#candidate|4419|(144,)|const|float64
call_4418 = relay.TupleGetItem(func_2609_call(relay.reshape(const_4419.astype('float64'), [144,])), 1)
call_4420 = relay.TupleGetItem(func_2611_call(relay.reshape(const_4419.astype('float64'), [144,])), 1)
func_3916_call = mod.get_global_var('func_3916')
func_3920_call = mutated_mod.get_global_var('func_3920')
var_4425 = relay.var("var_4425", dtype = "float64", shape = (1, 880))#candidate|4425|(1, 880)|var|float64
call_4424 = func_3916_call(relay.reshape(var_4425.astype('float64'), [5, 16, 11]), relay.reshape(var_4425.astype('float64'), [5, 16, 11]), )
call_4426 = func_3916_call(relay.reshape(var_4425.astype('float64'), [5, 16, 11]), relay.reshape(var_4425.astype('float64'), [5, 16, 11]), )
bop_4429 = relay.greater_equal(call_4424.astype('bool'), relay.reshape(var_4425.astype('bool'), relay.shape_of(call_4424))) # shape=(5, 16, 11)
bop_4432 = relay.greater_equal(call_4426.astype('bool'), relay.reshape(var_4425.astype('bool'), relay.shape_of(call_4426))) # shape=(5, 16, 11)
var_4444 = relay.var("var_4444", dtype = "float64", shape = (10, 96))#candidate|4444|(10, 96)|var|float64
bop_4445 = relay.maximum(call_4410.astype('uint8'), relay.reshape(var_4444.astype('uint8'), relay.shape_of(call_4410))) # shape=(10, 96)
bop_4448 = relay.maximum(call_4411.astype('uint8'), relay.reshape(var_4444.astype('uint8'), relay.shape_of(call_4411))) # shape=(10, 96)
output = relay.Tuple([call_4418,const_4419,bop_4429,bop_4445,])
output2 = relay.Tuple([call_4420,const_4419,bop_4432,bop_4448,])
func_4456 = relay.Function([var_4425,var_4444,], output)
mod['func_4456'] = func_4456
mod = relay.transform.InferType()(mod)
var_4457 = relay.var("var_4457", dtype = "float64", shape = (1, 880))#candidate|4457|(1, 880)|var|float64
var_4458 = relay.var("var_4458", dtype = "float64", shape = (10, 96))#candidate|4458|(10, 96)|var|float64
output = func_4456(var_4457,var_4458,)
func_4459 = relay.Function([var_4457,var_4458,], output)
mutated_mod['func_4459'] = func_4459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mod.get_global_var('func_2222')
func_2223_call = mutated_mod.get_global_var('func_2223')
call_4461 = func_2222_call()
call_4462 = func_2222_call()
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_4468 = relay.TupleGetItem(func_1695_call(), 0)
call_4469 = relay.TupleGetItem(func_1697_call(), 0)
output = relay.Tuple([call_4461,call_4468,])
output2 = relay.Tuple([call_4462,call_4469,])
func_4489 = relay.Function([], output)
mod['func_4489'] = func_4489
mod = relay.transform.InferType()(mod)
output = func_4489()
func_4490 = relay.Function([], output)
mutated_mod['func_4490'] = func_4490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_4504 = func_2487_call()
call_4505 = func_2487_call()
output = relay.Tuple([call_4504,])
output2 = relay.Tuple([call_4505,])
func_4506 = relay.Function([], output)
mod['func_4506'] = func_4506
mod = relay.transform.InferType()(mod)
output = func_4506()
func_4507 = relay.Function([], output)
mutated_mod['func_4507'] = func_4507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4135_call = mod.get_global_var('func_4135')
func_4137_call = mutated_mod.get_global_var('func_4137')
call_4508 = relay.TupleGetItem(func_4135_call(), 0)
call_4509 = relay.TupleGetItem(func_4137_call(), 0)
output = relay.Tuple([call_4508,])
output2 = relay.Tuple([call_4509,])
func_4514 = relay.Function([], output)
mod['func_4514'] = func_4514
mod = relay.transform.InferType()(mod)
output = func_4514()
func_4515 = relay.Function([], output)
mutated_mod['func_4515'] = func_4515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2859_call = mod.get_global_var('func_2859')
func_2860_call = mutated_mod.get_global_var('func_2860')
call_4548 = func_2859_call()
call_4549 = func_2859_call()
func_3804_call = mod.get_global_var('func_3804')
func_3808_call = mutated_mod.get_global_var('func_3808')
var_4562 = relay.var("var_4562", dtype = "float64", shape = (960,))#candidate|4562|(960,)|var|float64
call_4561 = relay.TupleGetItem(func_3804_call(relay.reshape(call_4548.astype('bool'), [13, 15, 16]), relay.reshape(var_4562.astype('float64'), [960,]), relay.reshape(call_4548.astype('float64'), [13, 15, 16]), ), 2)
call_4563 = relay.TupleGetItem(func_3808_call(relay.reshape(call_4548.astype('bool'), [13, 15, 16]), relay.reshape(var_4562.astype('float64'), [960,]), relay.reshape(call_4548.astype('float64'), [13, 15, 16]), ), 2)
output = relay.Tuple([call_4548,call_4561,var_4562,])
output2 = relay.Tuple([call_4549,call_4563,var_4562,])
func_4564 = relay.Function([var_4562,], output)
mod['func_4564'] = func_4564
mod = relay.transform.InferType()(mod)
var_4565 = relay.var("var_4565", dtype = "float64", shape = (960,))#candidate|4565|(960,)|var|float64
output = func_4564(var_4565)
func_4566 = relay.Function([var_4565], output)
mutated_mod['func_4566'] = func_4566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_4586 = func_2894_call()
call_4587 = func_2894_call()
output = relay.Tuple([call_4586,])
output2 = relay.Tuple([call_4587,])
func_4609 = relay.Function([], output)
mod['func_4609'] = func_4609
mod = relay.transform.InferType()(mod)
output = func_4609()
func_4610 = relay.Function([], output)
mutated_mod['func_4610'] = func_4610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4072_call = mod.get_global_var('func_4072')
func_4073_call = mutated_mod.get_global_var('func_4073')
call_4649 = relay.TupleGetItem(func_4072_call(), 1)
call_4650 = relay.TupleGetItem(func_4073_call(), 1)
var_4676 = relay.var("var_4676", dtype = "float32", shape = (13, 15, 16))#candidate|4676|(13, 15, 16)|var|float32
bop_4677 = relay.equal(call_4649.astype('bool'), relay.reshape(var_4676.astype('bool'), relay.shape_of(call_4649))) # shape=(13, 15, 16)
bop_4680 = relay.equal(call_4650.astype('bool'), relay.reshape(var_4676.astype('bool'), relay.shape_of(call_4650))) # shape=(13, 15, 16)
func_1526_call = mod.get_global_var('func_1526')
func_1529_call = mutated_mod.get_global_var('func_1529')
call_4686 = relay.TupleGetItem(func_1526_call(relay.reshape(call_4649.astype('float64'), [13, 15, 16])), 0)
call_4687 = relay.TupleGetItem(func_1529_call(relay.reshape(call_4649.astype('float64'), [13, 15, 16])), 0)
output = relay.Tuple([bop_4677,call_4686,])
output2 = relay.Tuple([bop_4680,call_4687,])
func_4688 = relay.Function([var_4676,], output)
mod['func_4688'] = func_4688
mod = relay.transform.InferType()(mod)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4689 = relay.var("var_4689", dtype = "float32", shape = (13, 15, 16))#candidate|4689|(13, 15, 16)|var|float32
func_4688_call = mutated_mod.get_global_var('func_4688')
call_4690 = func_4688_call(var_4689)
output = call_4690
func_4691 = relay.Function([var_4689], output)
mutated_mod['func_4691'] = func_4691
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4759 = relay.var("var_4759", dtype = "int64", shape = ())#candidate|4759|()|var|int64
var_4760 = relay.var("var_4760", dtype = "int64", shape = (5, 2, 11))#candidate|4760|(5, 2, 11)|var|int64
bop_4761 = relay.equal(var_4759.astype('bool'), var_4760.astype('bool')) # shape=(5, 2, 11)
uop_4769 = relay.sinh(bop_4761.astype('float64')) # shape=(5, 2, 11)
output = relay.Tuple([uop_4769,])
output2 = relay.Tuple([uop_4769,])
func_4772 = relay.Function([var_4759,var_4760,], output)
mod['func_4772'] = func_4772
mod = relay.transform.InferType()(mod)
var_4773 = relay.var("var_4773", dtype = "int64", shape = ())#candidate|4773|()|var|int64
var_4774 = relay.var("var_4774", dtype = "int64", shape = (5, 2, 11))#candidate|4774|(5, 2, 11)|var|int64
output = func_4772(var_4773,var_4774,)
func_4775 = relay.Function([var_4773,var_4774,], output)
mutated_mod['func_4775'] = func_4775
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4799 = relay.const([[[8,-9,5,-10,-5,-10,-8,-8,10,-3],[10,6,-2,4,5,-7,10,-8,4,-2],[6,7,6,1,1,-10,-7,-1,-3,8],[9,-1,-1,-3,-10,3,-8,10,-6,-10],[4,-7,8,-9,-5,1,4,2,-4,10],[2,1,-4,6,1,-8,-9,5,5,10],[-3,-3,-6,2,-9,-5,-8,3,-5,-3],[-6,-1,-5,2,-10,-1,5,10,8,3],[-4,8,-3,3,1,-4,6,4,2,3],[-10,7,-8,-9,8,-4,8,-6,5,1],[-5,5,-2,5,4,-8,-4,-10,-1,-9],[-8,-3,4,-9,9,7,9,-7,10,7],[-2,8,1,8,-4,-4,9,1,7,4],[-2,-9,-2,1,10,6,4,-6,2,8]],[[-1,10,-10,-5,3,-2,-10,-5,9,4],[6,9,-6,7,-1,3,9,-5,-2,-7],[-10,9,10,-2,-4,8,10,1,4,-3],[-7,10,8,7,6,7,3,-5,4,3],[6,7,9,-2,-8,-2,1,-2,-7,-3],[5,10,7,-2,-3,-6,-8,-6,1,-4],[3,3,-7,-5,4,-1,7,8,5,5],[-6,-8,4,-3,-2,-5,2,2,-2,6],[-6,-4,8,-9,1,2,4,4,-6,6],[-4,4,8,-5,-5,-6,-8,4,-4,9],[-4,5,-3,-10,3,-6,7,-3,7,5],[9,-1,-2,4,-5,-1,6,-10,2,7],[-8,-4,-2,-9,-5,9,6,4,6,-3],[-1,-1,-8,-5,5,-10,2,7,1,4]],[[-2,3,-4,5,-2,-10,-1,-1,6,-3],[-7,-3,5,4,-9,5,3,9,-2,7],[3,1,10,4,8,-6,-8,-6,10,2],[-10,1,4,1,6,-4,-5,2,-6,3],[4,9,-10,-7,-8,-2,-6,2,-4,-8],[10,9,6,3,8,4,-7,3,1,-8],[1,-7,-2,8,3,6,9,-3,7,-5],[-1,-8,-5,6,3,4,3,-2,4,10],[-8,-3,4,-10,-1,7,-5,2,5,7],[-9,3,-4,-6,-5,-8,-5,-9,-6,-9],[7,2,-10,-3,10,3,1,-3,1,3],[-6,-10,-1,-9,10,-5,3,-9,2,7],[10,-3,-8,-5,-8,6,9,-6,-4,9],[-2,-1,4,9,1,-7,-10,1,-1,-8]],[[7,4,7,-8,4,5,6,4,-5,5],[10,9,6,-9,-8,-5,-8,-5,-6,6],[-2,7,-8,-5,3,10,-4,5,-1,-7],[9,6,-9,-4,3,7,2,3,-5,4],[-10,3,-5,6,-3,5,-2,-1,1,8],[-5,1,-10,-9,5,-5,10,-3,-6,-1],[9,-3,6,-2,7,-4,6,4,-2,-1],[8,3,5,3,4,-2,-9,-4,7,3],[-7,-10,4,8,-9,-2,6,7,1,5],[-3,8,2,-8,-9,6,-9,8,-10,-7],[7,8,-5,7,4,-3,10,8,5,-2],[-6,-10,-5,-8,7,8,5,1,8,7],[-1,8,2,-5,1,-1,6,-3,10,-9],[-9,2,10,3,1,-1,-10,4,-6,-1]],[[6,5,-3,-6,4,-1,10,-4,-7,2],[8,-2,4,-4,-5,-9,-9,7,-5,-7],[8,-9,-3,3,-3,-10,10,-1,8,-5],[2,-7,8,-5,9,-1,1,-7,6,-6],[5,-10,-8,9,8,-10,-8,1,3,1],[9,-6,4,7,-3,1,-1,-1,3,8],[4,2,-4,-7,3,8,-10,4,-8,-7],[8,-9,8,9,-9,-5,-4,6,3,7],[-3,-8,9,-8,5,-10,-3,1,8,-5],[8,2,8,-1,3,-7,-5,9,6,-3],[-7,5,1,-1,5,-5,-7,-4,5,6],[-5,4,7,-6,-5,6,-1,1,-7,10],[-10,7,-10,-2,8,2,-10,-5,-2,-10],[9,8,-6,-3,-1,5,6,1,-2,-2]],[[3,-4,-2,2,2,-2,9,-3,9,8],[-9,-5,4,2,9,8,7,8,3,-3],[1,5,5,5,-4,-8,-7,-9,-7,6],[-4,-9,-8,-10,7,3,-7,8,-6,8],[7,4,-6,-4,5,-10,-6,-2,8,-5],[-3,2,9,-4,4,-7,-7,-4,8,-8],[10,4,9,-10,5,-9,-4,-10,1,-7],[7,8,7,-9,-10,7,-6,-5,6,9],[1,-4,1,7,2,-8,10,-5,8,1],[2,7,1,-1,7,10,2,-2,-10,6],[3,-10,-10,9,8,7,9,8,-9,-7],[-10,6,-3,-2,7,6,2,2,-3,-3],[2,1,-7,9,7,-2,-5,7,-7,4],[9,-4,7,6,-1,-1,10,-2,8,-2]]], dtype = "uint8")#candidate|4799|(6, 14, 10)|const|uint8
const_4800 = relay.const([[[6,3,9,9,6,-9,-8,3,7,-5],[-3,7,-10,-2,5,-2,10,-4,-9,8],[-9,-4,-9,2,-1,4,-6,8,3,-8],[10,1,7,-8,-2,-4,5,-6,7,2],[-5,-1,-5,-6,1,-1,7,-10,9,3],[-6,2,6,-6,6,-10,4,3,-2,-10],[-6,-5,-10,7,5,-1,-8,-10,1,-9],[4,9,5,-7,-2,2,-5,10,4,-9],[1,7,4,-6,-5,-3,8,-9,5,-10],[5,6,-8,7,8,-10,5,8,7,4],[1,-5,1,-10,1,7,1,-6,-2,3],[-9,10,-2,-5,2,-5,9,4,3,8],[5,10,9,-6,-8,-4,6,5,2,-1],[1,9,-5,2,6,-1,-5,6,-8,-6]],[[5,-7,4,1,2,-10,5,3,-10,-7],[6,9,3,-5,2,-7,-3,-10,-6,1],[-10,-1,10,-6,-10,1,2,-7,-5,-4],[-4,-6,7,4,-4,1,7,10,7,-10],[-8,3,8,5,-10,2,1,-3,-1,-4],[-3,10,7,7,-5,-1,5,5,3,9],[-8,-1,9,1,-2,-5,-10,-5,5,2],[-7,3,8,5,7,-9,7,7,-6,5],[3,-3,5,1,7,1,8,-8,-3,10],[-9,6,10,1,2,-6,-6,-8,-6,-2],[-2,-1,-9,9,-1,2,9,-5,3,-9],[-2,10,5,-8,6,-5,4,-1,4,5],[-8,-7,-4,7,10,2,2,-7,-9,7],[-6,-6,-10,-3,8,2,-4,-2,-3,6]],[[7,-3,-10,-6,-7,6,5,6,-10,2],[9,-3,-4,3,-6,-3,7,-3,-8,5],[2,-3,-3,4,9,1,-9,3,1,-3],[5,3,-3,8,-7,-9,4,6,2,-3],[4,-1,10,8,-1,10,8,7,-10,-5],[10,4,7,-1,9,-9,2,8,7,-3],[9,-4,7,-8,-8,3,-8,-2,-6,3],[-1,-10,4,4,6,-10,3,1,9,6],[-4,-7,-6,9,-4,-9,5,-7,-9,-2],[8,-9,-8,-10,4,6,3,-2,4,2],[2,-4,-3,7,2,9,1,-1,-10,10],[5,2,9,8,5,-1,3,5,-6,10],[-2,-6,-6,-6,7,2,9,-1,-10,-2],[-1,4,-8,-10,3,-2,8,10,6,2]],[[-9,5,-8,8,5,5,-5,-8,9,-7],[7,-7,-7,8,-2,-7,5,-9,-6,5],[9,7,-10,-6,4,-1,-3,5,7,5],[6,-8,-2,7,6,-9,-1,-8,1,10],[-5,6,1,-10,-7,-6,7,-7,5,-8],[8,-5,-6,-10,4,4,-2,9,-4,-2],[8,-7,3,5,-7,-8,-4,4,5,9],[-7,-1,5,-4,3,-1,3,-7,1,-6],[-6,-3,-7,-10,-4,-2,-4,-2,4,-8],[-2,-7,7,3,5,8,4,-4,10,-3],[-5,-5,-9,7,-3,-2,6,-9,-5,-2],[-2,4,2,6,1,6,6,4,10,-1],[-8,5,-4,8,-7,-10,9,-6,1,2],[-3,10,2,7,7,3,10,-1,4,-4]],[[10,-3,-7,9,-3,9,-7,-5,3,1],[1,7,-3,8,8,10,7,6,-2,-1],[3,-1,1,9,10,-3,-5,-4,1,-8],[3,6,1,3,6,-8,-6,-9,-7,-10],[-10,7,5,4,3,-6,9,-8,5,-6],[7,-8,-5,1,-7,10,-4,-3,-10,7],[-8,-4,7,9,-5,-1,-1,7,-7,-9],[-9,-2,-7,4,-1,-3,-5,7,-8,4],[-1,6,-3,9,1,-4,8,3,-10,-3],[9,-1,-10,6,3,1,-4,-8,-10,-7],[-5,-3,-7,-8,-3,-8,-6,5,-5,6],[-1,-4,6,2,-8,-8,1,8,8,-3],[-7,-3,9,-1,-1,4,5,-8,1,6],[-10,4,8,9,8,-6,4,9,9,8]],[[10,3,2,-6,-3,2,-1,-5,6,4],[6,10,1,-1,-1,2,3,-9,-9,9],[9,5,8,8,2,10,4,-5,-1,-7],[7,6,-9,8,9,-1,-9,-8,-6,2],[8,7,-4,-9,1,9,-7,2,9,-3],[-7,5,-1,-4,-1,7,10,3,6,-3],[8,-9,-7,1,10,2,-10,-3,2,-10],[-4,2,10,-2,-7,-5,4,-2,-4,-7],[-8,-2,-8,1,-4,2,-7,4,10,-4],[-10,2,7,-7,6,7,-4,4,6,1],[6,10,8,1,-1,-4,5,6,-9,-3],[8,-1,-1,-6,2,-6,9,-2,-9,4],[7,2,-4,-6,-1,10,-10,-4,7,9],[7,10,1,-4,4,-4,-4,6,3,10]]], dtype = "uint8")#candidate|4800|(6, 14, 10)|const|uint8
bop_4801 = relay.minimum(const_4799.astype('uint8'), relay.reshape(const_4800.astype('uint8'), relay.shape_of(const_4799))) # shape=(6, 14, 10)
var_4804 = relay.var("var_4804", dtype = "uint8", shape = (6, 14, 10))#candidate|4804|(6, 14, 10)|var|uint8
bop_4805 = relay.less(bop_4801.astype('bool'), relay.reshape(var_4804.astype('bool'), relay.shape_of(bop_4801))) # shape=(6, 14, 10)
func_3145_call = mod.get_global_var('func_3145')
func_3149_call = mutated_mod.get_global_var('func_3149')
const_4822 = relay.const([-0.047724,8.720046,-8.850100,0.724504,-3.568992,9.656363,3.495140,-8.902847,-1.310674,-6.612432,5.712654,4.861367,-5.844896,9.734860,4.422987,-6.529856,7.023655,5.734914,7.573239,-7.518035,-6.895939,0.026167,-7.798619,-5.939541,8.951143,-9.045397,8.235024,7.859037,1.724533,7.853613,1.058397,-1.289611,4.355017,-2.159965,0.024283,-2.160406,-4.651539,3.359352,2.690613,6.156470,2.832752,5.067504,-9.293505,-9.532759,-0.311487,-0.252244,1.621497,-4.806923,-7.789966,3.085793,-8.205411,-7.810264,-6.066443,3.599827,0.705589,-9.203126,-8.190269,2.903305,8.531235,8.592800,1.516275,8.112572,-6.280246,6.901463,-8.260109,-5.231186,-3.965154,6.569022,7.686115,-1.527796,-1.306002,0.208481,5.096037,9.473214,-6.828488,-5.451990,-3.133930,-0.493307,3.988504,4.796877,5.661154,-3.675587,-6.893000,-2.176484,2.219876,3.766726,6.073166,-9.587442,9.450313,1.510178,-0.932341,-0.360442,1.145951,-3.314801,-6.987077,-0.538387,4.966591,-7.593736,6.391781,8.520804,5.844755,-7.386233,5.654581,3.177789,-3.510008,-9.601630,-8.125842,8.941559,-2.588321,1.370504,3.970427,-0.511597,-6.699314,0.959148,3.955451,-7.390649,0.793756,2.289971,-8.374484,6.364533,-7.030814,5.335525,-8.979562,-1.153658,-6.577444,-7.935206,-2.244669,8.385224,5.044380,-5.681946,1.121230,2.261520,4.779127,-7.167803,-8.892900,-0.657807,0.368745,5.845290,-8.743689,-3.219129,3.250375,-1.763432,7.154075,1.432833,-1.910666,5.510273,-2.784897,-0.193563,-3.355321,0.200073,0.936730,8.613028,-7.370771,-1.380858,-0.635004,6.958336,1.278097,5.016551,8.763378,1.360467,-6.772571,-7.628779,-6.896545,-2.240862,1.800551,0.091439,3.783167,5.015951,7.614701,-3.101215,1.300034,-6.921566,-9.895063,7.797258,-3.558698,2.759899,-6.404919,1.506919,4.664220,3.053312,-0.323087,6.602783,9.217297,7.696473,-1.729363,-1.341656,8.856262,9.286290,8.069987,-7.317707,5.983004,-2.584795,8.822930,-6.919290,-3.696608,6.049879,-5.369736,-7.509894,5.201313,2.036226,-5.695787,5.028050,-8.917730,6.852610,-9.141382,9.725087,0.004136,1.702622,2.380828,5.776320,6.223510,-1.223882,9.394721,8.911835,-1.042772,4.152086,-8.438029,9.202815,9.530163,-9.147952,-7.145448,0.105428,-5.951660,-9.647979,6.030083,0.452807,-0.926586,-1.323906,-1.050361,-4.572173,-2.694522,9.177884,2.754290,4.945201,5.966984,-5.862196,8.172189,-1.591080,-5.956256,-6.995341,-9.443546,-3.342552,5.079092,7.202988,-7.261956,1.499881,3.155504,4.731715,1.728096,2.117277,3.271895,-4.086194,4.842912,-6.666973,4.724124,8.153025,-1.923730,-6.918204,6.876421,9.792168,4.670704,-2.802851,-4.793619,5.350359,2.108394,-2.884957,-8.269069,7.551318,3.016484,6.992029,-0.483953,1.842476,-1.891048,2.544730,6.723413,5.391382,2.999541,9.822314,-5.799836,5.892062,8.673932,-3.096320,-1.551282,1.643964,8.683074,-8.685445,-1.714912,-7.515621,8.175588,-3.370882,-6.191067,7.814004,1.296547,4.697363,-6.544242,2.550408,9.234575,4.222590,-4.929177,7.743414,-4.825381,5.263793,1.433908,2.838339,4.098051,4.033830,-2.774964,1.947089,9.171514,6.425427,1.615314,7.621974,-3.894514,-9.789483,-9.143585,-1.120937,1.393689,0.748705,8.967921,3.321688,-6.993921,-8.615488,-0.086486,-6.443779,7.552339,0.875237,2.938231,6.623080,8.092881,-9.279914,2.229909,-5.743806,-2.233634,-2.798763,4.028428,0.527546,-8.057012,-1.592334,1.840815,7.946517,-4.161193,-4.016208,5.763434,8.699403,4.892879,-3.710924,-7.218567,-3.165710,-1.481496,-8.059674,-5.559275,8.576863,8.923712,8.976603,4.665232,8.763716,1.804007,2.661523,8.338887,-6.542295,-7.315509,-6.803945,0.323824,5.171920,4.693229,5.923330,4.660926,-5.355057,-0.703029,-6.075821,-2.513935,8.585526,8.482854,4.341897,9.833088,6.403478,-1.191844,-8.028263,-7.296580,-3.153076,7.413241,-4.543919,-4.573817,-3.544035,-3.511306,-9.854303,-0.348919,2.919305,-0.371365,0.824047,-6.927572,5.067829,-8.672561,-1.876309,-7.866656,-0.515728,9.740013,-5.796864,7.032720,-8.090795,4.272532,1.400509,0.203484,8.800736,0.427721,5.736226,-3.518054,-9.869896,2.599505,0.850058,2.764720,7.656938,-9.270772,0.758402,-2.971361,-2.138139,-7.699718,-4.679238,-7.837734,-1.047426,-2.262465,9.043442,-0.031410,2.374406,-1.464202,8.283565,-2.417285,-5.301675,2.438104,-1.358094,-9.382345,7.945164,-6.232567,-7.137011,-1.290692,-1.536230,-8.330270,0.381732,-2.290829,-1.510074,2.234367,-5.559326,4.680666,0.509309,-2.998238,-6.314389,-6.571917,-2.953920,3.741666,7.390006,5.037764,-4.882972,1.918340,-8.800414,-2.129411,-5.402531,1.902624,1.563807,-4.947061,4.679489,5.095812,1.381234,1.093164,-0.005540,-7.245060,-9.349801,-7.153183,7.285149,-8.632181,8.541548,7.747125,4.328960,-1.580854,3.490205,8.633371,-3.648548,-1.564308,-9.238714,9.961123,5.034428,-9.916081,3.789170,-7.848041,-8.440537,-2.517075,-7.520934,2.120505,-0.137058,-6.277542,-4.079648,-8.308380,-0.115393,-6.232162,7.913361,-8.894707,7.661112,-7.196220,4.923968,-8.746944,-0.074302,6.447821,-4.714699,-3.998048,-8.736427,-9.694606,-8.020423,4.697129,9.597949,4.325398,0.902488,0.144583,-3.462169,9.734107,4.364487,3.907495,9.337607,-5.086376,1.491877,-1.311895,3.675259,7.678904,-5.327992,8.982159,-7.807186,-9.278702,-7.965056,6.687952,6.313859,-8.394789,-8.722885,-9.761545,-4.830082,8.126624,7.730383,0.402986,-6.249921,-4.328067,-3.005705,-4.353174,-8.077661,-3.104847,9.417271,9.598361,3.166599,3.695553,9.075899,4.212096,-6.946300,-5.735032,-6.936049,-7.694372,-2.779901,0.358862,-1.652418,9.710761,-5.585628,7.884042,5.273516,7.979716,-6.074570,-5.776132,-0.408322,8.658984,-3.706344,7.910235,-3.107423,7.725247,-0.585463,5.041640,5.986789,-0.926800,-6.956087,3.846666,-6.905452,-3.997405,3.983076,3.388792,-2.735389,-2.106934,-9.207053,-9.103705,7.304834,2.286459,-4.923163,3.558584,8.880181,-4.092705,4.782108,-2.763634,-6.624259,6.180905,9.058821,9.853160,9.975900,0.454168,3.332114,-8.794960,3.146749,6.748462,-1.683735,2.031236,-2.567629,-1.304729,8.998937,9.858322,6.235906,3.044087,2.927852,1.697802,-5.714351,-0.165910,-3.574026,4.288492,-7.102085,4.059392,6.092116,6.057012,-0.840806,9.930920,-4.280259,8.827978,9.904518,-4.301735,-3.297975,-6.057274,-7.349641,-4.863357,2.938159,9.204783,-2.349336,0.863153,8.724832,3.998978,-8.213835,-5.161218,-9.572620,-9.532547,-5.145365,-0.800157,-9.692615,-7.828101,-3.318919,4.385929,-5.145158,1.296138,-3.161327,-8.388483,1.135932,0.111832,-7.100818,-9.530461,-8.412542,2.400288,-9.008107,7.079395,-5.598514,4.618200,-0.361894,-4.833828,7.388106,-1.931005,-7.610892,-8.122670,-4.122022,4.013091,0.826468,8.046000,5.252414,-0.849774,9.479477,-5.917510,9.431958,-4.609055,9.360055,-4.100075,-1.657964,-1.398025,6.588672,4.125592,-2.856851,1.436381,-4.952147,5.058904,5.782315,9.913921,9.928212,-1.257048,-5.870449,0.806271,5.565537,-2.606839,-5.006051,3.356434,1.673712,6.388474,9.052352,9.366670,-3.596112,6.574366,6.332698,-5.146859,2.354617,6.999109,7.155313,5.915295,6.664693,-6.912475,-6.953454,4.025897,-7.704213,7.219991,6.304194,-0.522605,-0.334579,8.664136,-8.347048,-6.039468,-3.987569,2.727887,-2.769725,7.587106,9.853213,9.897531,6.347873,3.535189,-1.797398,5.604720,-6.905040,9.023141,-2.312510,-8.632642,-2.191420,-6.725777,-8.367779,-1.126192,-6.812545,-6.985805,8.927302,7.196334,9.192950,9.581784,7.299604,0.354814,-9.326473,-3.668205,-8.670018,1.996670,-1.438199,3.950314,-4.684199,8.162279,1.434249,-0.981359,-1.987890,4.077096,-3.099351,5.599926,-2.129360,9.197362,4.328613,9.735382,-3.341509,-7.998208,-9.168079,-6.498872,0.836614,5.378221,0.566201,8.836002,1.524939,7.728380,2.421704,2.998022,-7.198497,-2.121917,5.987862,1.710129,8.967063,-0.490267,5.193348,-5.844882,-4.114667,-7.721699,6.715573,3.776612,-0.870130,-0.990732,2.985959,7.241896,7.362390,2.443136,2.663971,-0.035078,-9.254375,-3.820226,7.491079,-0.660374,-7.430140,-7.617001,1.167321,-9.217921,-3.563358,2.936941,4.756592,5.653929,0.347828,7.000356,6.646217,7.634180,-0.118542,-6.590188,-6.807762,0.144811,9.726775,-2.551708,-3.325820,-1.741193,0.907158,-1.651010,4.611010,3.304921,9.514354,8.896808,3.951831,-9.288929,9.396618,5.932548,-1.378190,-3.750570,-8.786717,-8.424845,-5.202708,-1.550104,-6.487120,-2.863434,-6.759191,-5.339886,-7.000390,0.992518,-7.387136,7.120960,-6.166689,1.515643,8.383038,-0.400213,-5.565418,-0.729464,9.140784,7.423781,-2.980919,9.908527,7.963933,-2.644966,-5.430774,5.499141,5.529110,-0.400234,-1.079655,-3.162290,5.111688,5.367356,2.858296,-2.425437,-2.713190,8.918124,4.214573,-8.424932,-6.041341,-5.826800,-9.735533,-3.832395,-9.960491,3.076099,-6.518533,0.507857,-1.194397,-6.267390,-9.681753,-0.592037,-5.932854,5.657664,0.686118,-6.998768,-6.680462,-0.294985,0.447869,8.530991,2.362148,-7.483583,-1.953671,4.224642,-0.838204,2.149440,3.342409,-8.402119,9.525517,8.880029,3.693131,-5.820185,3.752906,-2.225716,3.880909,-5.826831,-1.996086,6.259757,-5.732232,6.454156,-0.884569,-2.971370,-3.214662,1.236284,-5.387894,-0.780606,-6.141288,-6.648134,6.390339,-4.747107,-3.760458,2.917578,0.264896,7.471760,-9.841560,7.669906,6.869655,-2.228883,-8.377518,9.774005,-5.265849,-2.690241,8.268388,-3.997183,3.637227,7.917311,-1.047803,-6.084677,0.007886,3.599027,-5.321094,-4.382713,-2.168567,6.594326,-1.880184,-6.207800,6.365450,-9.761136,9.933689,9.143937,2.020878,-3.963955,-0.663479,-7.811675,-3.947814,9.150681,-4.763926,6.764273,-6.434569,6.693406,1.669435,7.164806,-9.790948,9.612449,2.561584,-7.812715,-1.539539,-5.284644,9.303996,-6.236493,-5.582527,-9.813237,-6.482073,-3.431353,-1.807073,9.204515,3.514214,-4.580665,-9.599365,6.024548,4.054392,9.747155,-3.358213,-4.406592,-9.616327,0.544996,-2.791997,3.724393,1.194583,8.729749,3.385522,-9.290105,8.791295,-3.616789,-1.562605,8.386934,9.822676,8.088313,-4.505436,6.696798,0.424017,-7.715190,-7.501502,-1.801517,9.086445,5.870631,-9.672089,3.492111,1.615060,-5.773016,3.101394,5.129123,-3.483873,-1.372868,-1.413627,2.442361,-1.728318,5.492694,9.797332,3.380874,3.448824,1.021282,-3.901780,7.224627,-8.977182,1.576447,-1.877136,-9.455447,-1.840634,0.069176,-6.343316,-7.311171,-8.673811,5.050607,5.458715,-3.301849,9.793139,-7.543589,-6.196173,3.187815,6.557230,-7.973103,6.599176,-7.695325,8.973145,-1.921681,-9.974022,2.971961,-5.975926,-9.670811,2.806306,-4.456773,-4.697228,-6.125632,8.755908,3.721554,-4.351915,-8.906433,-3.627937,1.906306,-4.216010,0.583767,-5.405819,-3.334277,1.011708,-4.211270,1.948174,-5.590078,-8.020651,0.494739,-0.427255,-4.445535,-3.901370,2.713451,-0.044600,6.986933,-4.424400,1.421508,8.601169,-1.822835,4.744356,6.388418,8.683080,-3.302045,-0.496629,4.107471,1.013160,1.187886,-6.933545,-9.906569,-1.707265,-8.840006,2.950028,4.129132,6.061196,5.519767,9.489292,8.041522,-6.237367,-0.219004,0.851967,-5.692477,2.452782,1.507236,-6.168860,-6.895139,3.000313,3.042718,2.917783,4.779569,-4.266890,5.161690,5.434044,7.624574,-2.168290,-9.503876,7.131097,-6.001111,-5.351018,1.044114,-9.900579,1.765205,-8.170896,-1.470861,-8.003458,-6.166704,-3.719010,-2.825789,-7.558881,-8.244637,2.346296,5.468020,9.722581,8.025272,6.042647,-2.319119,8.863859,3.302112,-2.290394,1.846858,5.025102,-9.127285,1.634838,0.116607,-0.393496,-7.357381,-6.236132,-7.595283,-8.134614,1.570429,-8.285182,2.951977,-3.180117,8.641964,-1.923470,6.916523,-9.346701,5.034588,-7.518945,-4.154313,-7.771607,-4.751427,-9.556360,-8.585308,-7.411430,-6.459282,8.332137,-0.286714,-6.548249,6.510474,-8.037647,-1.462761,-2.657220,-3.589279,-0.086938,4.194100,-4.965025,8.855566,-7.257182,5.317711,8.719911,-7.845169,1.567996,-8.577891,-3.574891,-8.107005,-6.006909,-2.623563,-3.155814,3.911723,9.271511,-5.856723,-9.148807,-0.652868,4.951082,-3.691528,4.955338,-3.113558,7.674506,-3.951252,-1.887767,1.362397,4.661609,2.965359,-7.471434,-0.326984,7.936018,0.216376,-7.433917,-3.164209,1.873270,-4.163311,5.547226,6.349968,-2.638312,0.565255,-2.045677,1.195575,-3.994649,-5.196660,-2.848327,-2.175626,6.307752,0.099624,0.499831,7.415735,-9.448523,0.133313,-3.803968,3.328881,-0.336968,6.681503,6.289912,-7.741627,6.532368,-2.152848,3.543101,2.380242,9.681515,-2.626608,1.944081,7.559423,7.113696,3.561191,-1.448497,-3.007936,6.792824,4.901011,6.124289,-7.650605,-6.187271,-5.861588,9.948244,-4.923787,-9.954792,4.835184,3.280647,-5.111903,6.347597,-7.319762,-1.132987,-2.464405,8.720229,-6.526397,1.970376,6.922202,6.464402,8.733542,-8.804218,8.919604,-8.958271,-5.797596,-0.006665,3.013549,-5.037281,1.058366,-5.232142,2.532558,5.602651,-0.783280,-1.575725,3.360326,7.269104,6.489920,-4.970852,0.718352,3.967995,-3.326648,-9.699397,-4.765754,-1.622179,2.612531,5.756313,-5.543010,-7.017008,-5.257093,-8.724133,-8.405992,-3.847729,0.486132,7.869764,-1.343075,-5.222350,-3.309604,-3.647544,-7.545463,-5.645365,1.698768,-2.650171,-4.516231,8.541345,1.499605,-6.893553,7.080439,8.789671,-4.311443,9.138797,-7.553643,0.219873,-4.538185,0.460281,-8.484065,-4.832646,3.789851,6.795198,9.994701,-6.826223,8.457366,1.164041,-3.583837,4.971714,0.681235,9.611669,3.804080,-0.002391,-1.994216,-3.078352,0.529073,-0.219497,8.380173,-1.366284,-1.975375,3.370424,-7.647943,4.632105,-2.260674,3.784789,0.245159,3.376401,7.106877,6.839043,0.495247,2.030549,-2.004327,4.273753,3.241651,2.835810,7.650168,5.862787,1.881473,-1.990990,-1.733789,1.230037,-2.509617,-8.115229,-2.691016,4.978739,1.935323,-5.564738,-4.868933,9.765465,5.220747,-5.751846,9.614841,-1.541993,-7.672603,-9.511110,-8.096854,-0.709199,-5.591842,3.573213,-9.712069,-9.222055,7.243920,-5.127036,8.269799,5.772570,-3.983947,9.285649,-8.441590,-3.667424,-8.632580,4.944369,-7.735754,7.412316,-0.985170,9.591235,1.272275,-9.339553,-9.171251,-1.799948,-0.992778,-2.915728,0.783112,-6.966996,-7.078497,-1.486647,-3.356301,6.031676,-6.399746,7.496287,0.927963,9.051941,4.578594,8.700834,-5.311517,6.841405,-7.327215,6.440900,5.628635,6.387781,-3.619613,-9.971886,0.438017,8.634190,-4.927006,-8.267707,1.946501,-7.269078,0.845748,-7.579239,0.035662,-2.227170,-0.017489,-7.088885,0.895140,9.005596,4.626366,-6.462509,8.322351,-3.331192,8.697723,-2.379247,2.948132,8.720975,-0.848743,-3.817902,2.984906,0.930975,2.686642,1.982864,7.802684,-3.593812,-4.802250,1.916990,8.164016,2.596478,-2.227408,6.836931,-1.015551,-7.137213,6.654494,-8.412868,4.992460,-2.859279,4.470514,-0.700625,-4.897125,-0.723782,5.852336,-7.085575,0.136668,1.556148,0.537782,5.710171,9.510495,5.336447,1.224003,3.099082,6.505745,6.204817,3.387125,-5.533500,-3.466623,-1.993345,-5.293771,-8.346026,-9.906631], dtype = "float32")#candidate|4822|(1485,)|const|float32
var_4823 = relay.var("var_4823", dtype = "uint8", shape = ())#candidate|4823|()|var|uint8
call_4821 = relay.TupleGetItem(func_3145_call(relay.reshape(const_4822.astype('float32'), [1485,]), relay.reshape(var_4823.astype('uint8'), []), ), 3)
call_4824 = relay.TupleGetItem(func_3149_call(relay.reshape(const_4822.astype('float32'), [1485,]), relay.reshape(var_4823.astype('uint8'), []), ), 3)
output = relay.Tuple([bop_4805,call_4821,const_4822,var_4823,])
output2 = relay.Tuple([bop_4805,call_4824,const_4822,var_4823,])
func_4831 = relay.Function([var_4804,var_4823,], output)
mod['func_4831'] = func_4831
mod = relay.transform.InferType()(mod)
var_4832 = relay.var("var_4832", dtype = "uint8", shape = (6, 14, 10))#candidate|4832|(6, 14, 10)|var|uint8
var_4833 = relay.var("var_4833", dtype = "uint8", shape = ())#candidate|4833|()|var|uint8
output = func_4831(var_4832,var_4833,)
func_4834 = relay.Function([var_4832,var_4833,], output)
mutated_mod['func_4834'] = func_4834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1654_call = mod.get_global_var('func_1654')
func_1655_call = mutated_mod.get_global_var('func_1655')
call_4870 = relay.TupleGetItem(func_1654_call(), 0)
call_4871 = relay.TupleGetItem(func_1655_call(), 0)
output = relay.Tuple([call_4870,])
output2 = relay.Tuple([call_4871,])
func_4884 = relay.Function([], output)
mod['func_4884'] = func_4884
mod = relay.transform.InferType()(mod)
mutated_mod['func_4884'] = func_4884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4884_call = mutated_mod.get_global_var('func_4884')
call_4885 = func_4884_call()
output = call_4885
func_4886 = relay.Function([], output)
mutated_mod['func_4886'] = func_4886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3987_call = mod.get_global_var('func_3987')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_4922 = relay.TupleGetItem(func_3987_call(), 0)
call_4923 = relay.TupleGetItem(func_3989_call(), 0)
output = relay.Tuple([call_4922,])
output2 = relay.Tuple([call_4923,])
func_4928 = relay.Function([], output)
mod['func_4928'] = func_4928
mod = relay.transform.InferType()(mod)
mutated_mod['func_4928'] = func_4928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4928_call = mutated_mod.get_global_var('func_4928')
call_4929 = func_4928_call()
output = call_4929
func_4930 = relay.Function([], output)
mutated_mod['func_4930'] = func_4930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4884_call = mod.get_global_var('func_4884')
func_4886_call = mutated_mod.get_global_var('func_4886')
call_4942 = relay.TupleGetItem(func_4884_call(), 0)
call_4943 = relay.TupleGetItem(func_4886_call(), 0)
output = relay.Tuple([call_4942,])
output2 = relay.Tuple([call_4943,])
func_4991 = relay.Function([], output)
mod['func_4991'] = func_4991
mod = relay.transform.InferType()(mod)
mutated_mod['func_4991'] = func_4991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4991_call = mutated_mod.get_global_var('func_4991')
call_4992 = func_4991_call()
output = call_4992
func_4993 = relay.Function([], output)
mutated_mod['func_4993'] = func_4993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mod.get_global_var('func_2222')
func_2223_call = mutated_mod.get_global_var('func_2223')
call_4998 = func_2222_call()
call_4999 = func_2222_call()
func_2287_call = mod.get_global_var('func_2287')
func_2290_call = mutated_mod.get_global_var('func_2290')
var_5019 = relay.var("var_5019", dtype = "float32", shape = (182,))#candidate|5019|(182,)|var|float32
call_5018 = func_2287_call(relay.reshape(var_5019.astype('float32'), [14, 13, 1]))
call_5020 = func_2287_call(relay.reshape(var_5019.astype('float32'), [14, 13, 1]))
const_5022 = relay.const([[[2.478580,-4.727460,6.157210,-0.169382,-3.112693,1.792155,-2.419545,6.224436,-2.691780,-5.498358,-5.746213,0.617508,-9.451764,6.231434,6.747687,5.215721],[-1.924641,-0.275454,2.911528,-4.831063,-8.722823,-6.504575,-0.357535,9.628010,-9.025027,-2.297962,8.844511,-7.426558,-7.431028,-9.821538,-5.444908,-1.422947],[-6.599415,-5.024792,-4.828539,1.320592,-3.615158,7.230662,1.693183,5.878913,4.185506,-5.678283,-7.424990,-4.952371,7.718383,-7.532751,-8.837837,-9.940165],[4.572096,3.939710,4.682836,-2.790141,-4.895652,2.685964,5.407337,-2.263014,-3.781739,3.006880,1.474242,-8.841377,-8.932192,-8.033916,0.612581,4.158228],[-0.392496,-6.138238,7.643581,9.470325,9.473460,3.449855,-6.913609,0.228296,7.011816,4.347330,-1.207725,9.985607,-6.431314,-3.426604,-4.248833,-7.734910],[-4.873992,4.294586,4.066835,1.690800,8.392207,1.249027,-4.301036,-5.838198,4.549664,-6.203708,5.419444,7.827810,-3.058080,-7.300723,7.970849,9.796182],[0.013237,-2.209316,6.965716,7.383594,-7.545047,-9.275989,6.246746,-9.829711,-0.549399,2.522963,-4.812483,1.235813,-8.985296,-1.651493,-7.234352,7.155633],[-6.333793,2.769107,1.425005,-5.224782,3.412960,8.965331,8.525957,-9.310780,-8.590127,-0.080864,-2.416677,2.818179,7.638347,-1.267257,9.782584,8.414311],[0.958187,-6.577109,-1.701818,4.106201,7.559236,-8.477294,-4.930010,0.531014,-2.333944,-3.995698,8.729841,3.610883,9.114122,6.406262,7.258267,-4.251383],[5.478160,-0.536395,8.163966,8.878301,-3.225530,5.854953,-8.142368,3.585508,-7.434997,3.119578,-2.994401,-5.559969,6.034531,-2.006497,4.349109,7.099835],[7.956260,-3.711734,8.688257,-9.728748,1.632886,6.612130,-6.658290,0.392370,-4.843624,-2.117679,7.386975,-3.725057,-8.793544,-5.487973,5.184413,-6.068173],[1.501529,6.369803,4.557973,-1.920972,2.853706,-2.943981,-6.813656,2.791526,8.720849,9.736718,-7.690192,2.403877,4.914864,-2.953729,8.499613,7.934889],[0.308622,-4.753286,-8.662356,-5.758692,-5.977595,7.957223,-0.316939,6.460285,4.161610,-9.399516,-4.032606,-9.329282,0.458306,-1.575543,-2.452247,0.554933],[-6.398518,-8.346762,-5.328060,-2.597405,5.549177,-2.155768,-8.651622,8.614712,-1.236315,-1.844598,8.334063,-9.781596,3.333113,-5.145905,9.742030,-8.382604],[2.401756,-5.960916,2.684906,-4.160385,2.036103,-5.629078,-8.532483,2.066971,7.474764,6.308034,-3.950284,-1.469668,-0.790064,9.984922,-1.922418,3.339962]],[[-0.045566,-6.547965,-5.010072,0.063557,0.023477,-8.067391,8.759869,-6.824568,8.083412,-0.983446,-4.673673,5.923036,2.334522,-0.988878,-6.627140,7.507293],[2.832786,-8.364361,-6.408547,4.715335,9.320092,6.956116,5.171702,-3.254718,3.212015,1.598151,4.946103,-5.706174,1.285217,-2.635736,-9.273581,6.873242],[9.762875,2.625094,1.655600,3.503262,-5.069630,9.921495,6.981173,-4.996000,-2.387702,-3.427292,0.363656,-3.232146,1.452085,-9.756009,-8.915211,8.939718],[-9.302815,7.440909,-1.624962,-1.458935,9.931173,-1.499478,5.788824,8.372026,-3.361067,8.949417,-8.296073,4.385576,1.108829,8.106229,9.258694,4.356883],[-9.370100,2.181490,-2.498641,8.536023,3.386874,-6.922495,4.616452,8.788199,1.563021,2.156683,-0.055502,1.642174,-2.928641,-4.621376,3.622085,7.638941],[-8.336234,-5.215573,0.721222,1.258853,-5.455347,4.405316,1.419437,0.425190,-8.302940,2.569610,3.558500,-6.937174,5.797607,6.460532,-7.856146,-7.509123],[5.632651,2.241442,4.678954,-3.872804,-7.215873,1.382613,-8.737955,-9.888923,7.131974,6.413685,-1.948798,-1.969691,-0.393547,7.556503,1.244429,-1.797908],[-9.994264,6.421516,-2.863651,9.462456,5.833139,-8.173463,-2.898245,-9.597132,-7.003623,-4.915651,3.223640,0.872061,6.447878,3.386577,-9.427445,3.037585],[4.472771,-4.293799,-9.948631,2.402474,-7.907429,5.872734,-8.318739,-3.862998,-3.175178,-4.472383,-6.695156,6.145087,-1.202919,-9.598194,-3.313600,2.277020],[-3.069271,1.031303,-4.443564,-4.261994,8.068511,2.534174,-8.892679,-8.395101,-5.406284,-5.160302,-1.257328,-6.826939,-1.298108,-3.536618,2.980004,5.819617],[3.013974,-4.660463,5.348402,4.263930,5.060187,-4.939436,-5.978776,-0.424471,9.895778,3.371732,-5.637999,-3.441573,-2.669125,-9.759475,0.515311,3.752034],[-7.271018,-4.010414,1.202782,-4.859446,-3.952518,-5.060961,-1.644998,3.811061,7.734271,8.338267,9.960841,0.060478,-5.640930,4.610991,3.014883,2.093479],[-4.674131,5.180934,9.519849,-1.316006,-4.182563,-6.008238,8.077918,5.943343,8.359401,7.718535,-9.756384,-7.860147,-4.494392,-7.552250,9.726274,1.594294],[1.432166,6.686037,8.137076,-3.442999,-6.473661,-2.134345,6.935312,-5.621653,-1.297695,9.729562,-0.155760,-5.492613,4.164199,-4.794035,-6.848873,-6.110046],[-5.207321,-8.154852,-7.983017,-0.465504,3.437682,-1.487072,-0.938283,9.100153,-8.179673,3.077379,6.861015,8.131245,4.787664,2.505748,-1.809503,4.593376]],[[3.405678,-5.868169,1.091255,-0.502177,1.164950,0.430765,8.931959,-5.060646,7.805062,6.169046,9.103763,2.388028,-7.763270,-8.774216,-6.698361,-9.859143],[6.673047,5.593505,0.349867,-1.466650,8.142363,-0.639798,-2.145852,-4.585375,-4.525851,-8.794683,9.836923,-3.265253,-3.427544,-1.712422,3.360186,-2.972229],[9.490980,7.201641,6.392141,5.083756,3.194724,-4.000036,-8.196186,8.588013,-8.550271,8.186557,7.322467,5.195391,-1.933272,-8.072774,-3.943655,8.558762],[4.815517,-6.349089,-3.151648,7.340447,8.067124,3.257453,-3.837817,4.303301,5.009946,-2.981332,-9.135906,-3.933114,8.581474,-3.520966,-2.658178,7.119879],[-4.050454,-7.280096,8.246972,-2.662709,2.139815,4.328874,-0.008289,-0.102359,9.053340,-0.144138,8.695586,-3.772987,-6.808733,-7.177858,-9.910831,-5.149879],[-5.763131,7.789461,-9.945151,-9.071554,-0.050385,6.900647,-4.012194,-5.044120,0.771683,-9.812609,9.352373,8.697643,6.010845,-1.231956,-7.531683,8.343242],[-6.318157,-2.436300,-4.707492,-6.060326,-0.637490,-1.641858,-6.824053,-5.546177,2.661777,-8.079055,-0.980737,-0.497929,3.875849,1.292306,8.764224,-0.085516],[-9.871076,-3.574501,-9.701482,5.848391,6.796168,8.509269,-6.613327,6.250263,-1.081390,-9.811073,9.007199,9.132108,-7.427062,-4.416229,0.717261,6.415612],[-2.900523,-4.666340,-7.197866,7.182325,7.451233,8.405316,0.825162,-1.439061,-4.768640,-1.897509,5.357284,2.338755,-8.271321,-2.058556,-9.083239,2.898451],[1.792944,3.609373,8.662030,0.812082,-6.310981,-2.598681,7.219574,4.342372,-0.942043,-3.926453,8.416807,8.151045,7.112779,3.584792,0.806225,-9.496868],[9.182275,-1.088465,5.233790,5.137355,8.869145,0.512768,-6.380596,-4.213127,-7.740601,4.681513,-0.650463,9.208801,-1.230317,-6.843443,-5.439909,-6.134666],[-7.071276,-7.910968,9.821630,1.982492,-9.833945,2.944393,-0.969412,2.359782,-3.835002,-4.825034,0.822303,9.630231,9.816783,8.926034,-4.454196,7.092034],[-0.191472,-4.239919,6.812248,-5.399851,-6.849385,5.395380,-1.077220,6.434056,5.882767,7.626180,-5.790693,-6.257375,-5.121693,7.494040,0.393847,-6.595897],[-9.747869,1.622581,-6.432436,7.431082,-7.892942,3.374695,2.881538,8.519218,2.386587,1.391633,7.618124,9.147020,0.951036,4.754425,8.176772,2.792284],[-7.611562,2.847411,-0.611803,-8.551668,7.479334,4.664717,-5.313644,4.488070,-2.105859,7.060301,-9.257714,6.766278,6.015192,0.281694,-8.167478,1.035612]],[[2.746872,-8.640439,4.443181,-1.146687,-5.838577,-4.991285,0.650859,-5.768312,-5.806058,6.082850,-2.107414,0.556300,7.871077,-9.691435,5.827678,9.898750],[2.891886,-9.706375,-3.245859,9.720870,0.754256,0.533031,-5.533729,-8.500392,-0.871982,3.112066,-2.974941,-7.371475,1.337524,-9.085297,-2.723010,-1.313427],[3.947321,4.972179,1.273388,-9.691089,-9.797639,8.284866,-1.113513,1.041762,-3.322484,2.652962,8.480727,-9.722715,5.449055,0.274539,-3.193108,4.265653],[5.913779,9.942554,4.117082,3.436602,-5.096953,-3.630069,-1.377418,4.608082,0.941397,0.486321,-3.691186,5.887967,-1.751152,-7.023541,-8.426387,-5.455754],[-1.923334,2.105072,-0.938187,8.322297,5.325423,4.593613,5.501206,-0.402854,7.443362,-3.193297,-2.278475,2.067747,-3.460823,5.644736,8.526612,-4.626324],[-9.170846,-0.912052,-7.198356,9.071303,6.482243,7.432310,0.117829,8.603343,-3.423353,-4.709607,-3.098699,4.958135,0.227161,1.176441,0.220900,-1.194971],[3.195124,-2.626299,-6.264400,-0.048588,-2.540082,7.123986,2.828301,-9.142557,-5.097400,-0.299642,6.862065,8.546037,2.447049,2.010483,7.818358,-4.153299],[-2.842882,-6.656445,-9.054088,7.915834,5.793230,-6.685355,1.561062,-1.479898,7.210792,-3.223482,-6.003384,-1.834616,2.356079,-6.925421,3.571914,8.944285],[1.408148,2.130797,-1.081507,-8.966319,1.967266,8.108846,-3.469310,-2.821265,-3.981007,-2.744129,-5.259885,-8.603427,-7.139931,-6.405001,4.892757,-0.214414],[-0.213336,-6.764615,-2.132247,-5.108621,9.106964,-0.479816,9.992789,-3.808527,-5.483934,-3.838474,9.739707,-3.305742,-8.505498,5.671471,-4.887832,-8.990725],[0.392547,-6.745308,-3.522034,5.824965,-8.389422,7.882627,-4.269590,9.439338,-3.001124,-4.931975,6.307128,1.331080,1.878786,6.345966,-6.058468,-9.309111],[4.865767,0.691995,2.721705,1.997966,2.637927,1.576712,-6.149761,-1.335258,4.906514,-3.055622,3.236518,-8.482275,5.179586,-8.024686,5.701735,1.154317],[5.440707,-6.028230,-1.012131,-1.751256,-8.458367,9.007418,8.072464,1.041268,-9.636065,8.161324,-9.321227,6.360258,7.524042,1.633891,-6.706304,4.539185],[-4.868079,1.347157,-8.396532,-0.756661,3.610402,3.250439,8.491488,9.043834,2.598883,3.805048,-4.963666,3.242049,-8.348099,0.930071,2.398448,0.613328],[-1.175892,-4.142957,-3.498230,-8.644000,0.777171,-2.113193,-1.153523,-0.240767,-8.498089,5.942584,-9.149688,9.725124,-8.085748,-6.238568,0.089117,5.171323]],[[-3.458201,-7.953993,-0.555884,-6.033062,3.791893,-0.822249,7.577091,8.646745,-7.645029,-2.221740,4.779992,8.201822,-8.997077,1.094724,4.168282,-6.242938],[8.853387,2.019782,1.548044,1.507177,-0.431956,-9.894195,-5.035728,-4.974979,1.557157,-6.717849,-1.425370,-3.899106,7.040552,-1.925954,-6.716335,-6.851877],[-5.112789,5.019122,0.751276,-4.368127,-6.579487,4.468938,-5.329210,3.415319,8.689392,-0.111937,8.873707,-7.608872,-9.758366,-2.687865,6.723806,-4.399999],[-3.016990,3.912040,-9.802065,6.712108,7.234203,-0.470248,-1.177152,0.252507,5.758845,3.788188,-5.743226,7.736018,8.370399,5.344829,-7.104414,-3.793800],[4.280764,-1.531936,8.601951,-0.362773,8.198090,-0.257302,-3.430826,0.633171,4.587628,-9.948677,-6.173883,-6.360443,2.662095,8.398716,-2.416127,-8.278301],[7.151581,4.037446,7.922084,9.758125,-0.993328,-0.225506,4.469372,-4.788676,8.247878,-8.035515,-8.782523,0.785857,-0.284586,1.689893,-0.349896,-1.249204],[1.168347,-3.039245,0.250850,1.692900,9.056648,-5.031148,4.286061,9.863040,-0.499244,-3.589282,-3.788512,-8.393833,-7.265789,1.260615,-6.506246,6.181965],[-4.342636,-8.854748,9.604423,4.697529,3.129619,-2.808243,9.022078,5.727911,7.818897,-2.839443,5.883313,3.106326,6.748499,-5.753265,-9.330882,2.769740],[3.074980,5.282966,7.791680,3.183392,-1.590112,0.011739,3.148808,8.570109,-2.612806,9.497765,9.413238,-3.599559,9.034279,-5.017340,-0.087581,-1.671235],[6.684803,-8.228034,6.005811,8.236854,6.296466,3.267566,-0.655499,-2.539149,-7.775033,-5.377154,-2.561870,-3.994677,-4.986908,6.927160,-2.376234,-8.265653],[0.957045,-5.789419,9.397810,2.181658,-2.844467,9.234788,6.738247,-5.295666,7.686053,8.251826,9.908014,-2.721007,-1.339387,-0.076151,9.662931,-4.320136],[4.191339,0.987214,9.134777,-3.949565,3.729710,-8.172625,1.094019,0.589508,3.921256,-8.961884,-8.092005,-9.060534,-5.157798,-3.910894,-0.224139,2.415805],[9.535859,-4.327600,1.953193,1.685270,-5.745306,2.681896,-5.662450,2.192040,-7.494791,-2.387707,-0.021457,3.565654,3.100331,-8.368831,8.096536,5.894294],[3.569658,5.425860,-0.840547,1.601732,-4.814034,-8.935671,3.664891,-9.762706,9.994212,2.689560,-7.489472,0.493010,-5.138255,0.812283,8.127337,-8.731084],[-9.287003,0.755665,-5.895982,4.002526,0.761419,0.786137,4.803000,-2.180515,-2.902186,-2.974647,1.133326,-0.619098,-7.863237,0.456561,8.655198,-3.524678]],[[3.974108,-9.745986,-4.044580,-8.551572,-9.966111,8.312447,7.037163,-4.814645,1.215601,-5.836940,-5.319721,-2.113788,-2.234671,-1.194778,4.351811,2.385934],[-4.132425,8.103315,-1.183097,3.378557,5.286960,-4.519913,-8.789494,0.072891,-2.271077,-6.946310,-1.278937,4.442597,-6.624113,-1.817287,-7.625067,-5.004416],[-6.722907,6.439511,4.811824,6.481800,1.560548,-5.902471,-9.382691,7.058830,3.828810,-7.472072,-1.085590,9.428069,1.534561,0.455973,1.479824,5.112895],[1.260257,-4.180118,2.981306,7.895479,-3.084230,-1.301093,9.122591,6.042083,-4.752171,9.970546,5.084506,1.817173,-7.377434,-8.070619,0.602369,5.715646],[-8.392578,6.748480,9.857007,6.467002,-6.803500,8.423654,4.187516,9.244873,-7.726641,4.090450,4.212479,-7.972633,2.980473,6.766522,-3.833865,2.228472],[4.984444,-5.944500,3.967613,-4.764321,-8.214561,-9.370721,-3.246339,0.011743,-0.121850,-4.500081,8.576695,8.074808,8.090071,6.613957,-2.472354,-4.295037],[-9.443042,-0.270664,-5.243779,5.827601,-7.096894,0.678739,5.416175,3.230764,4.112737,6.618930,5.585135,7.316719,-7.547061,-8.125838,3.960109,-1.643286],[-8.784883,3.367547,1.073146,6.492609,-1.131173,-0.304548,6.720226,2.984075,1.253772,1.231433,-3.957476,6.908743,-9.314435,8.188757,-3.401795,9.120740],[-3.425288,-8.530893,4.276836,-9.353777,-8.380801,-1.412105,-8.161511,-1.816609,-6.736845,-5.969892,-9.141874,3.471667,-2.135508,-2.616179,-0.721704,8.957401],[-0.540816,-3.171728,9.344157,-1.000865,7.833968,5.675901,-6.466228,0.032771,4.527801,0.352717,6.245055,-6.582548,7.840093,6.103162,-0.976863,0.816476],[-0.158406,0.409293,-0.236564,7.885367,-9.219574,5.890245,-4.317579,4.935928,4.748394,8.938162,-5.973817,-5.506159,-0.602512,6.716974,-4.291108,2.650382],[7.931245,-8.556993,-9.311852,7.334178,-9.090483,-2.450416,-2.507790,-8.543855,-7.853743,-6.262572,-5.297876,8.946963,-8.268131,7.648759,3.958505,3.257962],[3.022453,-5.958151,9.558870,-2.409437,-3.516716,-0.861119,5.354782,-2.016304,-6.425683,-3.518255,7.647437,7.565600,-8.607817,-2.688272,-0.434079,-6.602884],[8.956831,4.766617,1.540053,-4.655409,-6.736562,-6.343099,-4.179219,-3.274599,6.477367,9.101228,-7.494823,4.253784,4.862458,-1.717043,9.505256,-9.225367],[5.082258,-1.960208,8.323558,-5.870821,6.430438,5.103356,-1.556729,1.877336,-1.145128,-4.316242,9.473185,-9.639098,-5.016584,-7.147400,2.264856,-0.833099]],[[6.749382,7.931340,-8.283119,-0.663260,-8.053206,1.433325,3.140027,2.676800,1.925740,-3.658072,3.366723,5.824125,7.704254,9.144112,-9.857505,3.895675],[-3.916469,8.443967,9.025949,8.381003,7.820839,-3.228485,3.199932,3.478280,3.804997,3.231005,-2.306680,-5.122082,3.174918,-4.582501,-1.591669,6.686611],[3.665001,4.471782,-8.512214,-1.273776,8.296885,3.216904,-4.283896,6.993741,-4.585907,-7.362361,1.824757,4.970511,8.897839,6.756258,5.854236,-9.708943],[3.523632,3.442774,-2.604812,0.969438,-5.125620,-3.709932,5.381793,9.142205,8.350554,-9.880221,-9.298861,7.179133,-8.927970,0.909305,8.683936,-7.410459],[8.530019,-9.447575,1.560711,6.951183,-2.706648,6.171015,8.960971,-5.847111,-1.124597,-4.827641,-0.318426,-6.343482,-9.391807,-2.294111,-6.230363,-2.251054],[4.030619,6.186834,-8.043404,-7.232045,2.672886,6.034524,-1.512453,1.822992,-6.326237,-9.182133,8.714235,7.878271,-1.584615,9.112144,-0.483303,8.435507],[-5.401058,2.490391,5.946390,-2.477900,5.599088,-9.832011,3.837892,-7.948702,6.635177,-0.553945,-4.853006,-2.338518,0.823715,0.682671,7.662441,8.765271],[3.912069,-2.285538,3.146163,4.460191,-7.014730,-8.034416,6.199474,-9.909852,6.553443,4.225681,-6.315774,8.545164,1.518249,-5.418093,4.153985,4.933874],[-2.981299,2.683092,-6.913635,-0.640025,-8.504796,-3.051947,6.203169,-3.916424,0.960676,-8.939856,4.513396,1.695992,-8.961086,5.662325,-7.241213,2.484379],[1.355505,-4.427202,0.744467,-2.497224,4.007518,-5.883760,0.118470,-6.307399,-3.111305,3.065749,-2.385738,9.959665,-8.288055,-5.798243,9.962724,7.116147],[-2.248451,-1.065729,-0.705693,-7.207283,5.060272,-6.901339,0.366530,2.674237,-5.547929,-9.165641,0.210104,1.795152,-7.093866,-8.295981,2.393979,-7.235184],[0.812155,-2.394708,-4.358919,-6.194163,4.150882,-4.739319,7.779093,-8.032532,-3.031217,-2.744665,-5.549528,1.281873,2.681000,-4.900243,5.934731,-1.932330],[4.428991,-8.080286,7.549765,5.815024,-8.285299,-3.662662,4.997900,3.954698,5.745248,-0.250761,8.634780,-5.987327,3.947173,-2.452169,-1.157685,-4.948269],[9.854265,2.543323,5.525491,4.199583,-5.873662,3.806871,-4.676847,-3.525524,-6.013055,-7.188319,-4.863190,-3.235044,7.379393,8.570080,5.790761,-5.429823],[-5.733429,-5.980937,-6.833564,3.280386,0.963782,6.616025,9.104711,8.817079,-1.017628,-0.909856,-0.870481,-4.068554,7.352618,7.316886,2.872394,2.672763]],[[6.599730,5.860347,0.158623,3.064563,9.359709,-0.706185,-3.012737,-5.017186,9.236753,2.503576,6.151709,-5.357573,6.014854,-5.964659,1.190515,1.923578],[3.414820,-2.252019,7.057481,9.556889,-2.199400,-0.318120,3.766747,7.510555,7.911999,-2.036780,9.522050,3.735027,8.766181,4.240979,8.000315,8.459984],[-3.845639,2.157313,5.389759,-7.136926,-4.017385,-9.921000,-1.155500,4.897137,1.516136,-4.748487,-2.264226,8.972623,4.669935,-3.479343,1.603809,3.701123],[3.711853,-3.854309,7.427503,2.680703,4.899160,1.044248,3.913852,5.495247,1.890391,8.309796,9.704124,7.584683,-8.895054,8.424639,3.576410,2.733201],[4.018037,-0.596471,-5.978957,-2.800367,3.843299,3.968655,-9.959133,0.509153,4.711789,9.380615,-4.120989,3.477602,-2.257552,-5.229226,-9.925771,6.163032],[5.892440,-5.090625,6.693420,2.118798,3.245995,9.510827,9.885901,6.105847,-3.366582,4.713378,8.035385,6.522553,1.233445,1.389704,0.531456,5.994228],[-0.302623,-8.931321,4.080512,3.576377,2.050224,-3.417111,2.782039,2.650043,1.208291,-1.660949,2.508451,-9.157555,-4.743350,-6.719692,-8.370121,-6.201943],[-7.122675,-3.998563,1.488047,-4.470154,0.591990,4.859850,-4.892569,-9.210203,-6.794257,-2.541241,-7.198498,-3.495368,-9.910166,-3.352276,4.499682,-6.671017],[3.602055,6.122573,-8.856574,4.806976,-1.453989,-1.922657,6.156069,-5.830021,-6.503222,-7.934859,-8.935792,1.597245,2.874530,5.109501,-2.793747,-0.192875],[4.520707,-2.969390,9.517679,8.654538,6.226673,-6.970997,-2.965879,-2.606263,2.174131,5.877021,7.810373,6.870584,-6.836517,0.080730,-9.650432,-9.742242],[9.365424,0.334131,2.980863,8.812755,-5.831257,3.255073,-7.185398,9.858277,-9.850878,9.430709,5.341229,7.284878,-3.505241,1.938785,-0.204590,-2.263822],[-5.767256,0.250865,-1.736024,-9.487449,-8.225870,7.392720,1.147125,8.921113,2.157481,-5.767580,1.539874,-8.866009,-6.690487,-8.444040,4.258718,0.543931],[-1.728530,1.391470,3.139739,7.327457,-7.538208,-9.941412,-7.507550,2.226929,2.705168,-1.925803,9.455791,-1.697134,-2.338919,8.052838,6.297831,-6.443645],[5.791157,-0.220252,8.567262,-2.953638,-1.038863,-9.574485,-7.362657,-5.242523,6.215341,-3.689422,0.569144,-2.820496,1.714963,7.391865,-9.641476,-1.667838],[-4.581259,-4.616576,3.935041,4.539228,-4.374538,-8.262268,0.381699,-4.884719,3.399305,-3.023864,5.623181,1.356428,-3.377144,4.978068,-7.356293,-9.218088]],[[-3.847585,-8.711081,0.423617,0.798136,0.190996,4.797571,-1.058089,0.040353,-0.962103,-3.387144,1.733558,9.855071,-9.878834,-6.249289,-0.762649,5.568261],[-2.605367,-3.777709,7.718382,1.966259,7.610393,-1.187950,-2.033094,-4.593131,5.623278,-1.271684,-4.959931,-1.595222,-5.024612,3.670285,5.557183,1.501623],[-2.273719,9.899717,3.703456,3.837495,4.433187,-0.012607,1.598478,0.795817,6.068008,8.733062,3.944071,-9.868298,9.489191,-2.855278,0.797269,-2.386180],[-4.808896,9.953084,-0.331985,-5.877861,-3.471323,5.164218,4.266427,-7.728785,-4.269145,-8.198511,2.085183,0.386049,-9.054464,4.224722,5.223597,-3.448946],[-0.056683,5.544334,-4.672531,-0.498903,-5.422298,-7.324830,-5.959080,-3.696456,6.932950,-7.693768,9.484965,7.852219,-3.672483,9.934641,-3.468136,1.575706],[-8.618602,3.836681,-8.935786,8.286500,9.670108,5.310938,4.395375,-6.328024,-4.040178,2.486906,-7.430899,-4.358050,-6.763278,-4.709777,5.008307,8.548839],[-0.996776,-3.241697,-1.821970,0.839315,4.110894,-8.800122,-3.838623,0.967688,7.543706,-5.011938,0.445597,-8.478753,3.358524,-8.859012,-8.880019,-6.148962],[-5.831051,-7.257309,-2.155541,-5.189517,-6.374074,-0.252603,8.236222,3.240108,3.245330,-3.331611,-6.555967,-9.608916,6.298730,-8.332901,-6.279237,-6.721578],[0.647823,9.297010,-5.335291,-5.129160,-1.157200,2.912313,-0.787165,7.796958,0.601584,0.954857,-6.734432,6.475632,-1.736807,-8.318993,-0.505742,-8.519197],[9.318943,5.768800,3.077610,-8.114416,1.338300,-9.470720,-4.651339,6.760120,1.779116,-8.470399,-2.282865,-6.887486,2.796094,6.522647,0.573136,-2.188007],[7.945807,8.296878,3.913426,4.164230,0.721233,-1.258840,5.912340,0.116295,-5.309397,-7.660100,8.645589,-6.528289,8.305638,-3.762441,3.105913,5.006281],[7.655575,9.105317,-4.399244,2.868792,-0.540302,-4.346502,4.497962,0.984372,2.763553,-3.264298,-3.870935,1.059146,-7.623967,-0.223936,-2.355480,-5.427347],[-3.785282,-9.943518,-0.138937,8.610960,-2.200536,-2.576829,5.428675,2.457103,-8.216649,-6.183705,-9.590385,-7.513296,9.622458,-6.962208,0.555434,9.920194],[5.716214,-0.638822,3.397229,-8.242900,0.683322,1.746641,-4.664705,5.628217,-8.868200,4.878994,-6.618535,5.900375,2.276357,8.100011,1.187059,-1.061274],[4.742479,-9.168669,-8.658090,-2.148131,-7.321510,6.193057,-8.628987,7.859363,-9.015982,-4.783050,-2.800554,-3.454470,2.563935,-1.075964,7.421817,9.693203]],[[-8.014710,2.379956,7.059738,-7.264415,-1.245911,-2.516231,8.888850,8.852166,4.673358,-5.381835,-8.279571,2.988769,-7.932161,-0.810580,-1.116991,-2.769576],[3.896988,-5.555108,4.724763,-4.904551,-0.861343,8.480173,-4.164805,7.399370,-1.050809,-1.518919,-4.093685,-5.014601,0.873299,-1.977093,4.714924,-4.451222],[9.323328,1.558656,-2.749550,-2.400089,-6.893011,-4.663676,-7.055121,-5.242287,1.784018,1.269923,-3.937710,-3.055363,-6.563342,-4.116893,-3.950689,0.692010],[6.943487,-1.831381,-6.501691,-6.992117,-0.942544,-9.187067,-2.898114,9.080619,7.740713,9.571724,5.686867,5.802236,1.240776,1.343415,2.888636,7.685994],[1.732860,-9.123520,-2.239067,-9.158552,5.073326,3.558741,-8.562280,8.079796,-2.217729,5.152340,-1.486495,0.900124,-5.821840,4.515688,0.820260,-6.775696],[3.307443,3.566071,3.013000,-3.070808,-3.580298,-0.426803,9.256184,-7.292097,9.025272,4.900654,-5.050617,9.263294,6.490395,-0.771797,4.082705,2.695530],[2.452814,-5.556933,-3.491152,5.373259,-1.681320,1.042365,8.045004,4.215766,-6.306672,6.364568,-8.143516,3.313657,6.228401,-5.594337,3.850098,7.116293],[-8.635600,2.192838,2.892389,1.964640,3.934137,5.225210,-1.237856,8.559608,5.282272,-8.315953,2.710610,7.830027,8.701264,7.069139,6.333088,-8.819971],[-3.931932,-5.793808,-2.110807,3.259518,5.707896,5.384383,-6.211845,-4.641970,9.096785,3.691685,-1.731327,3.722313,-4.767237,-1.509711,-5.427081,-1.399690],[1.598708,-7.493037,-7.507686,8.672264,-0.688247,-8.132359,5.966552,-8.079911,4.575634,5.254449,-6.912067,1.436160,5.163244,-1.734883,-1.231122,-3.567146],[8.363942,-1.924340,-2.570979,3.196697,-4.797641,2.063517,-4.313455,-7.946116,6.978983,-7.888824,-8.420878,6.003303,4.274306,7.823976,-7.121494,2.906295],[-4.887350,7.707009,1.591349,8.559025,-8.820022,4.567453,-0.548709,-9.776593,6.672903,2.005854,9.062126,9.764588,-3.795301,-3.879679,-1.006108,5.665863],[4.505394,-0.398649,2.540903,-2.760133,-4.784178,8.341966,9.223173,5.531832,-5.979665,1.441308,2.621527,-3.875957,4.387394,-6.701007,2.319202,2.785214],[-5.059381,2.462646,6.963896,-3.030026,-9.087123,1.686818,8.029940,-6.317376,8.555063,0.265442,2.117322,9.396216,2.188610,-7.980166,3.701243,3.781483],[8.684283,5.315806,7.924440,9.589175,7.020933,3.699772,8.324588,-6.665253,7.403675,5.990429,-9.653072,-4.094794,-2.020988,-9.019937,-9.421352,0.296335]],[[-4.519355,-3.476009,-8.513448,3.413931,-2.388212,9.961394,0.216962,4.950799,9.735757,5.113635,7.571403,5.304401,-5.864177,1.726857,-8.865818,5.181894],[7.530375,-5.271325,0.917871,-3.088751,-1.725909,1.387095,6.979406,0.949449,5.907768,-3.404967,-2.269537,-6.551925,4.459796,3.294002,-8.480945,7.973519],[-4.937484,-1.439126,4.773819,-4.597864,-3.830396,0.472373,-3.735394,-7.295738,8.794350,-4.257127,0.026264,2.960971,-9.278104,-9.655573,1.751088,-6.374669],[9.167209,1.262600,6.860450,-9.790730,3.872790,-5.853564,-2.092667,7.891835,1.837419,9.629903,-1.297459,-9.683073,6.167553,4.500560,-4.672949,8.306242],[-1.011746,-3.436480,-6.962666,9.936113,1.816659,9.711142,4.126660,6.922061,-1.741990,5.389092,8.588022,7.390411,-2.402459,3.104488,-4.826715,-5.766553],[2.581667,2.771981,5.191954,0.424297,-1.560319,2.182806,5.561155,-8.744280,1.193381,-4.981250,0.359284,-6.166764,9.708989,-4.661894,-3.534411,-4.030076],[-5.851694,4.192890,8.706689,-4.623639,6.126221,2.533439,-8.200415,-7.735242,0.072112,9.492436,-9.813536,-0.485556,1.378611,7.552656,8.033398,-7.050457],[0.089675,7.408140,-0.932232,-0.003091,5.514753,8.142650,-1.617938,-0.952740,-9.502533,-3.602750,5.039500,-7.565145,-6.784399,-2.544481,-5.526432,1.491270],[-7.130736,-4.579344,-8.593476,-5.399048,-5.638376,8.338205,6.077936,-9.154760,4.810007,-9.649587,6.622883,-9.704873,-4.508209,6.105308,9.360051,6.846588],[8.335978,-6.815934,-7.566551,-1.187381,-2.421596,1.917822,8.275386,-8.292028,3.667976,5.044479,9.674919,-5.242620,-0.500021,-7.767283,-7.805493,4.710029],[0.350785,8.392752,-4.732242,-4.958341,3.919678,-8.326365,0.410322,-4.488197,4.108317,1.264285,2.907610,-4.314419,2.595961,0.577818,-8.463588,-5.066693],[-8.630878,-7.248578,8.472169,-3.546343,-3.321421,2.209997,4.795475,-6.027006,4.347579,9.054799,9.505618,-4.355250,9.033126,-7.984767,-4.752102,5.587983],[-4.038293,4.238250,9.453215,6.502991,-2.735713,0.621517,-2.906724,-7.548029,-6.089781,-3.362818,8.309890,-7.195221,-2.831093,8.986715,3.711634,1.892160],[-4.341248,3.653662,-1.359780,2.519337,9.093211,-8.209936,9.049678,3.717974,0.851391,8.794676,-6.079318,0.144837,4.784098,8.939312,0.037084,-0.012050],[8.638785,1.072895,-4.694270,-5.470156,-6.032884,5.443404,7.097392,8.421678,-2.881048,-5.534118,-1.684710,2.875089,-7.981753,4.867142,-0.982604,0.872855]],[[9.893735,9.068902,8.137693,-1.886452,9.227256,3.408261,-5.218997,9.208439,-7.227990,-9.294948,6.604261,-6.595384,-2.133036,8.696712,2.824208,5.034148],[-3.103135,6.957825,-5.284602,5.826441,6.245915,9.134177,8.513001,7.470393,-8.653696,-4.403540,0.330076,1.367733,-1.986234,-4.217727,0.907572,8.486752],[8.398959,4.693354,-4.933627,8.839255,-2.982375,4.562601,9.331845,8.599733,-1.188972,3.051124,-4.179958,-9.440833,0.423435,-0.509299,-3.478664,-7.419785],[-9.476123,0.572534,-1.525618,1.789232,5.190338,-9.785832,7.406127,-8.865124,-5.644251,4.213602,-6.330742,0.124914,4.004102,-0.399894,7.408666,5.893545],[1.126407,-3.773502,4.532048,-6.788274,0.289502,7.164531,-0.464428,-9.671533,7.217076,1.966413,8.091084,5.186551,-5.828730,-1.811251,3.061030,-3.812128],[1.623033,-0.555873,-6.833638,3.797636,-3.199510,-7.000236,9.132029,0.797721,-6.407956,-7.822544,2.823173,-6.712416,-6.820308,-1.318786,-5.266334,-3.798824],[7.279363,-3.017767,6.422507,4.398332,-9.725474,-3.035985,1.942720,-5.286857,-3.774263,7.249757,1.605760,1.419016,3.209821,6.893008,-9.100194,2.862212],[-8.259806,9.747399,1.348235,2.049423,-9.735315,7.657729,5.541926,-3.225247,8.122897,-0.049256,7.324157,-4.686023,0.647054,8.974237,4.897511,1.554883],[-9.656299,1.750759,-2.405766,-8.330029,-8.775295,-1.064200,2.614769,7.620649,-8.755549,3.413965,7.135078,-0.848745,3.938897,9.457668,-1.731066,0.474593],[5.927880,0.781801,7.346214,5.670410,7.045972,-5.486074,-2.567402,4.765747,5.507653,-7.510321,-6.465063,1.531616,-3.546785,-4.186129,6.827835,-2.676007],[-8.048025,-8.694063,3.762580,3.062944,0.406745,8.348397,3.177721,0.159842,-8.633644,-9.342757,-9.619583,-1.493419,-6.240288,-5.742361,-5.134190,-5.206168],[-1.696063,5.035373,-8.511150,-1.204229,-1.116809,9.587988,8.992672,-1.577397,1.851715,-9.199128,-0.626091,-8.298622,-0.386950,-7.647067,9.556204,7.970909],[-8.853815,8.506854,-7.677271,-9.472890,-9.785103,-9.050591,-9.215038,0.159564,4.006916,-3.570658,-8.153880,-6.544445,1.918665,-5.169957,-5.367606,-7.622018],[-8.326088,2.408974,1.469509,7.336812,-1.976521,6.772270,-2.995114,-2.320341,1.743459,8.699910,1.116929,-1.355184,-5.723725,-0.379802,-6.868590,8.700194],[-2.141382,1.621033,5.689062,3.607268,8.461058,-0.230485,2.060146,9.234343,1.871737,7.507274,3.723837,5.636046,-4.713323,-8.540582,-3.256864,2.216220]],[[-5.670428,1.040629,5.179387,7.060626,5.781913,-0.898935,-5.159009,6.159846,-9.973289,8.940434,-4.939236,8.691903,-7.394481,-7.531409,-4.873815,6.174165],[-4.956670,-0.083499,-3.994920,-0.228955,3.128723,-8.449543,5.203907,-5.570968,-7.568480,4.603201,-8.626644,9.513353,-8.358648,-6.170519,9.724284,9.320361],[-0.232759,2.292421,-6.541156,-9.235604,-9.222696,6.901239,5.691966,6.690197,7.419389,-8.387098,-3.613543,-1.899697,0.373328,8.182914,2.954612,0.433818],[-8.667677,-5.793127,-5.740577,-5.374277,2.702682,-6.284539,6.180891,6.319108,-3.386621,6.696772,9.086679,9.624035,-9.088531,-4.510061,-2.184953,7.786929],[-2.152579,4.911750,-3.855285,-6.958659,5.589871,-8.102491,-8.590896,-0.906559,-7.178855,1.182844,6.588269,-2.758542,8.044734,6.933164,-4.562908,-0.189942],[-9.836346,-5.394373,-9.687478,9.133078,1.068607,-2.262324,0.899838,9.857023,-6.902495,0.354790,5.832450,4.421747,-7.218015,-3.633836,7.267741,-1.784202],[-1.916025,2.726082,6.734571,3.709963,-6.300189,-2.044518,-7.611125,2.279348,4.080010,-8.469438,5.407343,4.546477,9.752360,-4.116546,0.908660,-6.296081],[6.372009,-9.514505,-3.971105,-5.417323,6.573084,-0.871845,-9.189666,6.114402,0.350283,-4.561417,6.643513,-1.758748,-7.061985,-2.166007,8.044795,8.353423],[-7.330395,9.232834,0.586324,6.084931,1.065835,-8.501389,-3.006839,7.805732,-1.077976,-1.569382,0.605263,-4.887758,4.510515,7.454462,4.049422,-9.056307],[-6.896418,3.952644,5.533019,0.823814,-1.369941,-1.171960,4.993558,-3.293993,8.757291,4.681381,-9.503886,-9.007284,-1.791800,-0.107792,2.610236,8.457312],[7.664950,8.954121,-2.839007,2.210222,2.760673,8.358406,2.039890,-9.049991,-6.799063,5.000380,9.858183,-7.377366,-4.913231,7.234077,3.219122,0.154263],[7.998390,3.581578,3.072627,2.569363,-2.290932,8.763416,-4.564059,5.152597,-3.577252,9.629838,-6.269247,7.569483,5.181753,-3.048531,-6.002314,9.099160],[5.766020,2.414944,9.423871,5.685314,7.356333,4.894033,-7.111277,-6.018544,5.035932,-8.249560,8.360529,-9.942376,-2.186028,-3.536698,8.661499,9.096257],[-7.390334,1.498641,9.524555,-0.091093,-0.990073,-1.500004,-3.008388,8.194423,0.477049,5.632749,8.464037,3.524373,0.831625,-0.353271,8.104357,3.631619],[-0.474011,2.478872,3.257759,-2.555306,5.766337,-8.320801,9.066066,8.728537,2.024754,-6.951337,1.418310,-9.391575,0.228394,2.152822,-7.478835,-6.406245]]], dtype = "float32")#candidate|5022|(13, 15, 16)|const|float32
bop_5023 = relay.greater_equal(call_4998.astype('bool'), relay.reshape(const_5022.astype('bool'), relay.shape_of(call_4998))) # shape=(13, 15, 16)
bop_5026 = relay.greater_equal(call_4999.astype('bool'), relay.reshape(const_5022.astype('bool'), relay.shape_of(call_4999))) # shape=(13, 15, 16)
func_4884_call = mod.get_global_var('func_4884')
func_4886_call = mutated_mod.get_global_var('func_4886')
call_5035 = relay.TupleGetItem(func_4884_call(), 0)
call_5036 = relay.TupleGetItem(func_4886_call(), 0)
output = relay.Tuple([call_5018,var_5019,bop_5023,call_5035,])
output2 = relay.Tuple([call_5020,var_5019,bop_5026,call_5036,])
func_5047 = relay.Function([var_5019,], output)
mod['func_5047'] = func_5047
mod = relay.transform.InferType()(mod)
mutated_mod['func_5047'] = func_5047
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5048 = relay.var("var_5048", dtype = "float32", shape = (182,))#candidate|5048|(182,)|var|float32
func_5047_call = mutated_mod.get_global_var('func_5047')
call_5049 = func_5047_call(var_5048)
output = call_5049
func_5050 = relay.Function([var_5048], output)
mutated_mod['func_5050'] = func_5050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2476_call = mod.get_global_var('func_2476')
func_2478_call = mutated_mod.get_global_var('func_2478')
call_5075 = relay.TupleGetItem(func_2476_call(), 0)
call_5076 = relay.TupleGetItem(func_2478_call(), 0)
output = relay.Tuple([call_5075,])
output2 = relay.Tuple([call_5076,])
func_5101 = relay.Function([], output)
mod['func_5101'] = func_5101
mod = relay.transform.InferType()(mod)
mutated_mod['func_5101'] = func_5101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5101_call = mutated_mod.get_global_var('func_5101')
call_5102 = func_5101_call()
output = call_5102
func_5103 = relay.Function([], output)
mutated_mod['func_5103'] = func_5103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3655_call = mod.get_global_var('func_3655')
func_3656_call = mutated_mod.get_global_var('func_3656')
call_5177 = func_3655_call()
call_5178 = func_3655_call()
output = call_5177
output2 = call_5178
func_5182 = relay.Function([], output)
mod['func_5182'] = func_5182
mod = relay.transform.InferType()(mod)
output = func_5182()
func_5183 = relay.Function([], output)
mutated_mod['func_5183'] = func_5183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4391_call = mod.get_global_var('func_4391')
func_4392_call = mutated_mod.get_global_var('func_4392')
call_5330 = relay.TupleGetItem(func_4391_call(), 0)
call_5331 = relay.TupleGetItem(func_4392_call(), 0)
var_5337 = relay.var("var_5337", dtype = "float64", shape = (10, 96))#candidate|5337|(10, 96)|var|float64
bop_5338 = relay.minimum(call_5330.astype('uint32'), relay.reshape(var_5337.astype('uint32'), relay.shape_of(call_5330))) # shape=(10, 96)
bop_5341 = relay.minimum(call_5331.astype('uint32'), relay.reshape(var_5337.astype('uint32'), relay.shape_of(call_5331))) # shape=(10, 96)
func_3309_call = mod.get_global_var('func_3309')
func_3313_call = mutated_mod.get_global_var('func_3313')
const_5344 = relay.const([-2,4,3,4,5,-3,6,9,-10,5,-2,-3,5,-6,-6,-1,-7,10,-8,-1,-4,-2,-4,8,-3,-2,-7,7,-2,-9,4,-9,-4,-1,5,7,-8,-2,7,-8,2,-7,-7,-10,-9,-7,8,-4,-7,7,8,-3,-3,1,-4,2,9,4,-6,-4,5,8,9,8,-8,10,-8,-2,-10,3,-2,-10,6,8,10,9,-3,-9,-10,8,3,-5,3,-2,-10,6,9,4,10,9,4,-5,6,9,2,-5,-7,6,10,2,-4,-6,4,10,4,4,-9,6,5,-1,-5,4,9,-4,9,-10,6,-5,6,6,7,7,-1,1,-8,-2,9,9,-5,8,10,-6,4,9,-1,9,7,5,-10,-3,-9,3,3,9,-4,-2,4,5,1,1,10,-9,-7,4,-3,8,-2,-1,5,-2,6,5,4,-10,-5,9,1,2,-4,-7,-3,-8,-6,-1,8,1,-1,-6,6,2,-6,-7,-2,-7,7,-3,1,-7,-2,-7,4,-6,4,-10,7,4,-6,2,-1,-4,7,9,1,-4,-4,7,8,-3,-5,-7,-6,8,3,9,1,4], dtype = "uint16")#candidate|5344|(216,)|const|uint16
call_5343 = relay.TupleGetItem(func_3309_call(relay.reshape(const_5344.astype('uint16'), [6, 3, 12]), relay.reshape(const_5344.astype('uint16'), [6, 3, 12]), ), 1)
call_5345 = relay.TupleGetItem(func_3313_call(relay.reshape(const_5344.astype('uint16'), [6, 3, 12]), relay.reshape(const_5344.astype('uint16'), [6, 3, 12]), ), 1)
output = relay.Tuple([bop_5338,call_5343,const_5344,])
output2 = relay.Tuple([bop_5341,call_5345,const_5344,])
func_5347 = relay.Function([var_5337,], output)
mod['func_5347'] = func_5347
mod = relay.transform.InferType()(mod)
var_5348 = relay.var("var_5348", dtype = "float64", shape = (10, 96))#candidate|5348|(10, 96)|var|float64
output = func_5347(var_5348)
func_5349 = relay.Function([var_5348], output)
mutated_mod['func_5349'] = func_5349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2859_call = mod.get_global_var('func_2859')
func_2860_call = mutated_mod.get_global_var('func_2860')
call_5356 = func_2859_call()
call_5357 = func_2859_call()
func_3655_call = mod.get_global_var('func_3655')
func_3656_call = mutated_mod.get_global_var('func_3656')
call_5358 = func_3655_call()
call_5359 = func_3655_call()
const_5362 = relay.const([[4.406352,-9.901040,8.861635,9.029115,2.292088,8.496810,3.710616,0.939152,7.365538,5.251685,-2.108976,-4.117038,-0.219048,5.368526,4.202006,-2.107200,-6.460599,5.066415,8.573614,8.552812,4.907097,0.340953,3.747563,-8.626161,5.526746,-4.192266,-6.384354,5.532624,-7.725563,-3.322103,1.563438,-5.314993,1.097502,3.379226,-2.066961,2.988793,1.450624,9.326910,-2.390448,-8.461107,1.591969,2.930991,3.634290,-5.377862,-7.471944,8.581993,0.002607,5.898227,9.282228,2.638330,-7.057891,6.252286,-9.413726,-0.087602,-6.836491,-2.475094,5.332537,6.130957,-4.975378,-9.081058,8.906172,-9.732667,5.938462,8.740614,3.428298,1.510684,-5.895385,4.654378,9.076984,4.565415,-3.852868,7.450264,1.809412,7.126779,-0.058124,-5.391228,9.393397,-5.728690,3.013808,-6.602070,0.235793,-5.197071,-0.406180,-2.355629,7.613602,-7.086432,6.670132,1.069551,-5.718091,3.971272,1.274352,-2.347673,-7.138656,3.063165,8.111298,-3.107429],[9.102504,-2.232847,1.105594,7.962128,-0.044759,-3.450652,1.243532,-7.446920,-3.610815,-7.457454,-9.824996,2.148971,-2.104969,-7.268845,-6.234648,-8.301211,6.332114,3.101597,1.174764,9.822703,-0.437631,7.162929,3.996668,-5.234627,1.725287,1.991783,4.874267,5.013634,-3.783323,0.199058,-2.191946,-5.721737,-1.924629,-0.304006,1.186061,1.718629,-6.506618,6.176116,6.384431,2.624197,9.072447,-5.525326,3.076158,-8.606953,3.743194,-1.125892,3.688650,1.402203,0.192488,1.116446,9.462129,-1.709480,3.295979,6.838172,1.661091,-9.177622,-1.999134,-9.901750,-0.176760,1.257038,-3.740834,2.445025,-5.111804,-5.773334,4.693555,-1.350867,-5.108527,-6.353219,7.069520,-4.130757,-9.506309,2.160534,8.094469,9.458570,-3.763323,3.543676,-8.641594,-1.776614,6.488813,-4.416460,-6.560228,3.439342,-8.254349,-6.589173,-6.545320,-9.780197,5.132531,2.868288,4.411432,-7.755897,7.926956,5.176168,5.292339,-1.918641,-6.865195,9.146900],[-4.970525,5.501006,-0.337383,-6.291052,3.534337,9.286048,-3.124945,5.372823,2.995574,4.804705,-9.698446,5.871765,-7.333854,-4.975576,-2.374968,8.469781,8.143636,3.256083,-9.586253,-0.295400,9.915338,1.914574,-3.237596,7.558372,-6.457833,-5.827517,6.447239,-8.674574,2.656121,-9.276246,-8.333573,-9.378009,5.525993,8.237945,1.187959,3.022478,-6.730547,-0.325658,9.394510,-3.984169,-5.214084,-3.591317,-0.455884,6.930164,-5.238794,-4.173782,8.830335,-3.666553,-2.827543,7.921177,7.974328,-1.277342,1.373011,-6.176186,6.587527,-7.549405,4.023679,2.735522,-2.641107,6.428735,8.668761,8.368776,7.562710,9.159314,-4.146288,6.823765,9.508490,2.850665,1.947841,4.324005,-5.459078,-3.706015,6.722878,-1.985166,1.821011,-8.461811,4.813198,1.821769,1.018659,-4.550898,3.147439,1.583142,-8.346550,1.118920,-4.628008,-6.838026,0.789390,-0.588556,-3.502839,-9.733620,-8.653287,-8.295321,-4.880700,-1.998456,-2.998475,8.471238],[7.929825,-6.014993,2.551662,8.037990,6.575323,9.158259,-8.473577,1.711133,-6.284436,-7.975453,-0.233007,-8.482181,9.272311,-0.661152,5.860219,5.737245,-1.726653,-3.920462,-7.276213,2.533638,9.633445,-6.134459,-3.229482,6.364441,4.973839,2.859972,-3.541330,-6.207093,1.924559,-1.144426,1.226095,5.480361,0.391716,3.751633,9.461295,4.066683,6.827139,-1.660996,0.231566,-5.242484,-4.955421,-8.029162,5.524801,-5.878673,7.192893,-3.825724,-4.851676,-0.624368,2.642811,5.008069,-9.252851,-2.043456,-9.953179,3.986895,-9.967129,-8.980955,-2.161976,2.426050,-3.326073,-4.782603,-0.505916,-1.034963,-7.775748,4.513771,-9.897591,-3.428132,4.048179,5.343985,6.667261,-5.134987,-0.938617,-9.166664,4.314331,8.338445,7.993171,-2.836015,-6.641137,3.841463,9.895552,-5.887869,1.231535,8.996031,4.643736,0.696516,8.925501,-6.118956,-1.425362,-1.099934,0.206082,3.440581,5.346128,-7.251382,-6.662449,-0.295188,-7.417663,-4.019425],[1.947211,5.153733,-6.153728,-4.693700,-5.745122,1.764532,3.388209,-4.479473,5.322152,-0.545279,0.489319,-7.732250,-5.000323,-3.829427,-0.683774,-0.804101,-5.848775,-9.893012,-0.510823,-3.865687,-4.561045,-8.230974,-2.298115,-9.128704,-7.380954,-2.668659,7.037309,-5.826928,-2.437851,7.073084,6.757892,-5.484767,3.568783,-5.109469,5.076801,-8.045638,-5.692256,-5.658154,6.706119,6.734438,9.490361,-5.499525,-6.813961,-3.061567,1.027325,3.632679,9.820298,-5.580367,7.607373,0.193951,6.635408,-9.452182,-1.685625,-1.913808,7.284151,7.907115,-0.246846,5.117125,-3.660720,4.749111,7.114701,-9.790896,-3.155828,5.345241,3.893463,2.959225,-8.308410,4.638850,-5.359804,1.563269,2.895961,-1.597409,-7.840781,-9.972865,6.461652,-8.203893,1.118906,1.262523,1.526039,2.514384,5.401920,0.992591,-9.788002,-4.326234,9.815873,-9.708246,4.926325,-9.839504,-6.745372,-2.119508,-0.998538,4.829654,-2.722488,8.917149,4.496805,-4.138671],[6.402599,0.037831,-9.895243,-2.417829,3.504955,-0.704336,5.179380,-2.631264,-0.648265,2.679363,8.497313,-8.349902,-9.776967,6.995540,-4.644855,-3.400457,5.264193,0.286632,-0.466970,6.552745,-2.799813,-1.792172,-2.999998,4.233929,3.484021,9.019074,8.557794,-8.751385,-8.554651,-5.145599,-0.939324,-8.985541,-4.048885,1.803734,-7.316201,-3.098745,0.458450,-0.444707,5.817700,-5.888994,2.193435,4.959423,6.627157,-9.086857,3.365082,-4.531629,9.689499,2.577571,-5.462834,-6.772866,-2.221850,5.306827,5.801550,9.298034,9.046682,-9.907056,-1.662978,-1.210269,5.798543,5.681840,6.351261,-7.413974,-3.277411,-1.323939,5.212884,9.647784,6.362031,4.076905,8.865266,8.650704,-5.177977,6.330836,1.787008,-5.329062,-2.212346,9.517859,2.321214,-9.883188,7.811296,-2.228269,-2.693926,-5.983150,-5.078584,-9.187525,3.913509,-9.207988,6.691337,-2.666127,6.398069,-5.196091,-1.592067,1.415216,9.492755,4.194203,-1.139942,7.389401],[-3.398402,-2.232069,5.984286,-6.558176,-2.647006,-8.065141,-7.408024,-3.421744,5.800100,7.330455,-9.230943,2.015436,-7.973303,6.246473,-8.201559,8.250325,-2.018839,3.602991,2.151357,-6.188605,8.463972,4.752334,8.939496,6.261113,-5.518993,-4.517754,-1.823958,8.454630,7.191496,7.288756,9.115085,-2.145288,7.516100,-1.425858,5.131324,-0.098961,3.445297,-1.278370,-9.533224,-7.003262,-5.470122,1.171191,-9.425108,1.321910,8.408652,-8.957866,-3.527310,0.971886,-1.762345,-8.319827,-9.336581,-0.941124,-2.305223,2.065104,6.941448,-6.778073,-1.225175,-3.042760,-6.299357,-8.568051,-7.892411,-4.430161,7.773241,-8.082888,0.005288,3.820153,-9.408181,-7.082493,-5.100791,6.725349,6.517141,4.459919,3.048369,-4.007812,-1.542565,-6.287469,6.441405,8.571631,-2.065680,1.717554,-0.782852,5.917772,-4.804927,7.212550,2.634414,-0.804773,-3.687284,0.218831,9.122928,2.374422,-1.258496,3.011654,3.062427,7.882131,-9.392188,9.993491],[0.452649,2.178338,-8.780292,4.838940,9.790696,-1.839030,4.277112,-1.556631,-4.897608,-8.844060,0.683305,-6.388387,-6.932153,-0.387999,-3.220834,3.247831,-9.492755,-0.442148,-3.433690,9.349087,2.018505,9.072827,9.875897,-2.073232,-7.857226,-7.793893,-0.381847,-0.702019,-5.805761,4.992426,-0.482073,3.382898,-8.826328,-8.922214,5.404853,-4.471688,1.420893,0.490682,2.895659,-2.028938,4.186878,3.125063,-0.485419,-7.438085,-1.074821,8.490898,1.140437,-7.955759,-7.254270,-6.770736,-2.268337,7.291864,-6.120200,-6.522692,-7.893196,6.932721,5.839783,2.695458,-6.471445,2.146824,7.501058,-5.379493,9.440298,-8.201654,3.832827,5.261308,-2.346244,9.179218,6.308116,-0.864103,5.162787,2.776462,5.727132,-1.703110,8.119522,-1.095562,-5.982811,8.231815,2.126731,-6.233550,-0.125632,-3.066414,-3.108001,7.199931,8.691998,6.882337,-7.713494,-9.761497,7.780077,1.305642,-3.699783,5.298001,-1.983431,-8.869020,1.431759,-5.565926],[-6.712723,-3.537256,6.654618,-0.362490,7.148469,1.724137,0.628170,1.415013,-7.291704,0.678665,7.569845,4.561489,3.636546,0.187992,-1.120039,-8.187055,2.036645,4.662906,-7.267041,5.297763,4.960515,1.579316,-5.689989,7.189022,-0.822599,2.666774,-2.911626,0.030124,-8.492842,-4.884534,7.407847,4.495372,7.717170,6.873968,2.907556,5.438138,1.413505,2.238691,-7.898125,-9.178957,2.673251,-2.130423,-3.086736,4.896879,-8.881522,-1.794350,-8.385752,-1.643211,-7.213684,6.139987,7.089238,7.810952,-6.099044,-8.828183,7.917527,2.264627,5.473684,-4.255656,1.539486,-3.797096,5.029105,5.583913,3.066025,6.453855,8.901811,0.564112,-4.906315,2.969629,7.106619,0.776975,-1.360327,8.288706,-8.543050,-1.552797,4.744754,2.799079,7.529720,-7.764647,6.285435,-3.958572,-7.588505,3.924365,-9.634087,8.427290,-4.309092,0.834106,5.738478,-9.161971,-6.278535,-0.100804,-1.926095,7.655079,-0.229846,-1.170758,5.694487,7.170730],[-6.661869,-1.973960,4.179112,-4.351550,-8.360089,0.322262,-8.135169,1.893310,-4.357813,-3.781895,-8.714825,-0.331198,9.082105,-3.133143,6.786019,-0.225463,-1.612441,4.513056,2.827259,7.229687,3.482470,2.190975,0.854315,-8.237635,-2.997920,-2.652423,-4.531274,-6.510195,4.146759,9.284272,-8.889925,-2.918289,-3.813478,-0.844233,0.619057,-1.651141,-9.709835,-6.201481,-3.248107,3.370071,9.162716,9.924779,-6.210209,6.064612,-6.270448,0.701826,-1.015576,7.635864,0.967239,-1.179637,-9.901396,1.581901,2.608369,-7.647771,-0.929347,-8.482162,1.749847,-0.820262,2.496547,7.715961,-0.908556,-6.783165,-3.632345,4.490930,-2.318121,-2.847010,-7.191319,9.613011,6.834626,-2.135335,-8.191150,1.714126,-3.983486,0.969977,3.648774,-4.262253,2.339291,-6.973184,-3.522091,0.141894,-7.227522,6.025546,7.221621,-1.919417,-5.716030,5.419903,1.620198,-9.189555,-8.437819,-8.117273,-5.735562,4.588650,8.131831,4.443700,8.566980,-3.239125]], dtype = "float64")#candidate|5362|(10, 96)|const|float64
bop_5363 = relay.bitwise_and(call_5358.astype('int32'), relay.reshape(const_5362.astype('int32'), relay.shape_of(call_5358))) # shape=(10, 96)
bop_5366 = relay.bitwise_and(call_5359.astype('int32'), relay.reshape(const_5362.astype('int32'), relay.shape_of(call_5359))) # shape=(10, 96)
func_4506_call = mod.get_global_var('func_4506')
func_4507_call = mutated_mod.get_global_var('func_4507')
call_5369 = relay.TupleGetItem(func_4506_call(), 0)
call_5370 = relay.TupleGetItem(func_4507_call(), 0)
output = relay.Tuple([call_5356,bop_5363,call_5369,])
output2 = relay.Tuple([call_5357,bop_5366,call_5370,])
func_5388 = relay.Function([], output)
mod['func_5388'] = func_5388
mod = relay.transform.InferType()(mod)
output = func_5388()
func_5389 = relay.Function([], output)
mutated_mod['func_5389'] = func_5389
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5398 = relay.const([[[-2.668619,-5.472317,2.000120,5.623057,0.157648,-0.750890,2.389986,0.311363],[-9.996805,3.620612,9.614870,8.962411,8.571036,4.482821,-0.338517,-2.206103],[-9.755359,-8.208514,0.663521,7.091675,-4.793989,-0.424328,-3.684219,-1.436239],[6.597547,-8.080819,3.449335,1.440352,-0.665793,0.033551,-8.791994,3.161555],[-6.890126,-8.605173,6.091680,-5.001838,3.115627,9.158045,-0.773425,-1.369756],[9.318170,-8.215977,-9.072434,-7.875103,-7.310949,8.397968,6.120167,6.490071],[-2.395896,7.463522,2.836077,1.131242,6.184815,1.064821,-9.397266,6.930742],[-4.010694,-0.114902,-5.272327,1.870566,-7.073399,7.213062,0.675303,0.793413],[-4.356811,0.729312,7.685351,-3.518974,0.508625,-4.418190,2.901008,0.237458],[-4.530520,-2.549672,-1.717275,8.907687,-7.533204,-3.375994,-4.495377,3.380091],[7.309851,-4.131851,8.105258,2.799827,-6.934023,-9.667879,4.511548,0.627830]],[[0.875039,-3.295038,8.818130,9.317685,-9.086553,4.147391,1.594817,0.985698],[3.355858,2.006707,-5.524290,5.482444,7.168082,-2.864153,-5.581722,-9.972972],[9.338707,1.441950,-8.979994,-1.631195,6.555133,0.498058,-9.538013,4.214707],[0.868527,-9.495120,2.227558,-1.326371,9.160544,4.167024,1.322994,-4.864242],[3.799017,5.151032,-8.894399,-9.950440,-8.053061,-1.377884,1.701504,-8.048429],[6.928667,-5.370974,2.003614,3.874554,-2.278691,-3.696553,-4.859404,-2.371549],[-8.063457,3.247849,-0.472674,-4.053086,-9.520552,5.754581,-4.990442,-9.665406],[3.238456,-6.981312,1.583105,5.906292,5.196161,4.816878,-9.776763,5.098563],[-6.742188,5.121636,-3.466750,3.932103,8.466767,-2.015952,-2.241968,6.998571],[-1.129872,-0.845561,0.124242,8.546743,6.070481,-9.748221,-8.846277,6.338824],[-6.867270,5.474728,-2.909732,4.984732,-9.724969,-2.849537,-5.245293,-7.717004]],[[0.327176,8.007763,-6.048537,2.040067,3.629448,-7.609054,2.452762,-7.523720],[-8.674300,2.240805,-6.220621,-9.268188,-0.049689,-9.553629,-7.771669,1.622216],[0.271684,-5.268065,8.484871,-2.289860,1.112796,4.097146,-9.499169,7.895332],[0.552525,7.119803,7.593548,-2.271987,-5.941387,5.226639,9.317474,5.698089],[3.542172,9.099290,7.142403,4.793879,-0.612855,-7.544455,8.226378,3.128032],[-4.665910,-5.870410,3.966947,7.466968,1.486864,-0.764199,-8.449225,-4.759585],[-8.288690,-5.212847,5.662859,-5.430763,-7.107383,-7.160324,-1.136895,2.628170],[-3.641844,0.762141,-4.520117,-2.359235,1.183355,4.834061,-5.495052,0.874976],[5.128828,-7.990865,6.549262,-4.536208,0.960107,6.361083,-0.099361,-2.181049],[6.236176,-8.670863,7.074267,9.303364,-4.960356,-0.635710,-3.089328,0.749252],[2.377966,-6.997733,-4.773700,8.231259,1.945571,-8.648090,5.705050,2.001181]],[[-4.357170,-7.805130,-5.712703,-8.427253,-7.885296,3.896548,-7.769503,-0.330927],[-6.839591,-8.476710,8.487272,8.449850,8.431914,5.738407,-8.898012,3.254570],[-9.325986,-4.964514,2.825566,8.600365,2.082255,8.702869,4.165284,-4.230584],[-4.444312,6.482676,-9.415886,6.719475,-7.773517,-4.907033,1.258976,4.647841],[5.181046,-6.948294,-0.669341,4.605509,-9.658835,8.404635,-7.774831,5.379287],[-2.490769,3.122132,2.676815,-3.814940,1.583002,5.599580,-2.501666,-4.474562],[-0.086875,5.227701,7.281928,5.623185,0.910796,2.874165,-1.776572,-9.266257],[5.449641,0.902003,-5.384569,-5.585332,-7.219278,-6.750171,-5.150506,-1.826841],[6.444235,4.140039,-7.138239,-5.331629,0.759290,-7.581387,2.373169,5.442184],[-1.685863,6.425494,-7.470306,-8.007867,9.495329,-9.269674,0.306289,7.482699],[-7.688620,5.385319,8.335842,-7.948986,-1.344762,-9.116564,0.645993,-3.348302]],[[-4.362202,1.376664,-4.140707,4.706930,-9.932378,6.855479,-1.806076,4.425035],[-8.594681,-4.077077,-6.855450,-6.547792,8.724203,-6.933599,-0.418770,-9.906130],[2.337956,-2.956902,3.013102,1.633673,9.579132,9.451497,1.863285,-2.356595],[-4.391089,6.105337,2.446432,1.131688,-4.717608,3.621445,-3.397376,4.992814],[6.614764,5.117598,3.840241,4.446331,-4.017027,0.161536,5.381696,6.865428],[-1.642311,-9.802525,-2.121534,-3.091685,-6.339930,-5.807048,7.927621,-8.551692],[8.736469,0.685319,-0.748554,1.814078,1.309938,3.941269,-4.372645,-6.029024],[8.155902,-0.283699,-4.442800,4.951633,-7.579827,-3.919182,4.971610,8.973659],[-5.177325,-0.672215,5.900176,4.328902,-0.347461,4.996861,9.530229,8.415272],[-5.736233,5.931854,-3.337502,7.699318,-9.136929,-9.691374,-9.910034,-5.989378],[-1.028215,-7.021662,-3.452260,-3.398146,-4.500934,2.925003,-2.158398,-8.689751]],[[-6.550950,4.869394,-9.603527,6.814365,-4.164947,7.006482,6.988217,-7.876784],[-3.629557,2.534362,-5.090174,3.069595,9.601752,1.599022,1.700509,3.193360],[7.004671,-6.915048,9.734677,-2.126735,2.438893,6.227943,2.051077,-1.778852],[-4.399679,-5.700679,7.982840,6.610043,-0.618858,-7.725427,-1.044430,0.730045],[3.505973,-3.229294,0.524374,-8.196425,-8.286429,-8.798810,3.903155,7.682548],[-8.630463,4.701558,6.165716,8.878081,3.906252,4.584068,0.059829,9.978372],[-3.401631,0.945446,-5.537693,-4.639432,2.134599,-8.439673,1.779676,-7.483560],[0.545029,0.439587,-9.703739,-2.614861,3.981100,-7.425986,-9.397893,3.798202],[9.597327,-7.581032,-4.731108,-0.713961,8.033293,2.901460,-0.265554,1.533242],[9.474336,-0.339966,4.266984,8.077485,-9.539420,2.056284,7.707597,7.132038],[3.570137,-0.521459,-9.716944,-8.540420,9.350383,-9.569541,9.343026,0.698024]],[[-4.503038,0.412494,-9.407763,-4.849559,-8.507155,8.457415,-7.453301,-3.298293],[-9.551605,-3.862772,7.135318,1.327883,-5.816027,-6.283503,0.162921,-7.412283],[3.804538,8.086844,-6.636985,-4.629816,4.864451,-4.280928,-4.949422,9.770083],[6.173447,0.452149,-3.245025,6.590836,-4.053663,2.126551,4.627740,9.060811],[2.960683,-4.704178,9.289997,-1.451349,-0.385734,-4.149554,9.416083,6.459151],[0.774788,8.845609,1.451080,-7.836659,-6.954245,6.333602,0.600505,-4.237349],[3.073860,-0.929946,0.200685,2.611312,8.454369,-3.695133,-2.794413,5.756223],[-4.470430,0.124483,8.152898,1.396861,1.060569,4.392119,3.655729,7.295804],[-0.274318,7.694999,-2.064987,0.052193,9.531856,-9.772342,-0.816644,2.310575],[-0.363936,-9.945636,5.427246,4.346528,2.181573,7.289103,-9.559561,3.917417],[7.351756,-8.366716,-5.099303,6.707200,6.906067,3.229645,-0.085858,-1.001450]],[[4.950020,-4.885376,-1.877647,-3.900231,6.852261,6.151901,-7.272630,-7.406187],[9.643555,-9.285024,2.822068,2.169595,5.986410,-5.156028,-1.298361,4.815309],[1.671703,-8.543277,3.244864,1.882515,-9.934828,1.592369,-1.031019,-2.060786],[-8.137476,5.236496,7.955325,8.238626,6.426118,-6.287974,-6.525453,5.068333],[3.887367,-4.153764,-4.052083,6.198586,-0.425576,-8.386643,5.028060,-5.334644],[7.489430,0.896472,5.200164,9.585347,-2.033737,-6.861711,0.624047,-3.782867],[5.057187,-8.925557,0.265141,-6.843113,-1.159846,-4.651593,-5.173321,3.974991],[-2.048793,-1.107240,2.066262,-6.850452,2.787655,7.400956,-5.827379,9.953417],[-3.365659,-9.642732,-6.569200,0.428740,9.454383,-6.789996,-3.216883,5.758634],[-7.908812,-6.568608,5.554214,5.656261,7.142866,-4.013137,-7.965735,5.602762],[7.556202,-9.727039,5.772326,-9.319614,8.154541,-9.636928,-6.406212,-0.605403]],[[6.670178,5.141714,6.312460,8.570328,8.810265,1.944728,8.903433,-5.517110],[-4.511151,-5.955637,-2.589417,-4.476588,1.858344,8.277810,-5.760563,-3.839187],[9.152632,-1.943837,-9.016861,0.936001,9.167520,-7.231208,-6.768062,1.167761],[6.814805,-7.367941,-0.717861,-3.382906,1.454691,-7.586372,4.220852,5.719728],[-0.279023,-9.373882,8.708150,-9.023064,-0.578426,5.876133,8.593069,5.690493],[9.746998,-7.953207,-7.444184,8.388531,-3.233201,4.198526,3.298034,-6.606553],[-7.009489,-1.671569,8.203261,8.165074,4.262686,-9.531691,6.356337,-8.836430],[1.755276,1.208333,6.170521,0.108105,-5.267645,5.146465,5.518787,0.840748],[-7.166641,3.239077,-9.032095,5.305013,0.993148,-5.146940,7.635556,3.770987],[4.614344,-3.615314,-2.330232,-8.506161,-0.411222,-3.354300,-0.888271,-6.474371],[8.876931,-5.324166,-8.081663,-7.219169,2.288695,-1.979444,4.428338,0.422232]],[[-6.368767,9.461057,8.190138,8.496605,7.415323,9.810393,0.347351,2.077994],[3.219440,-0.703498,3.316899,2.001677,0.630788,-9.136409,-0.475374,8.417899],[4.866070,8.858036,9.443397,3.538564,-1.247168,-9.388513,-2.852611,-4.730188],[6.987952,4.689624,6.699357,6.654531,-2.171851,6.393097,5.672774,-3.985200],[2.219363,3.928830,-7.765337,-0.110341,9.715331,5.780078,-4.837247,2.532875],[-2.698237,-0.210932,8.993677,5.286628,9.536709,-8.605068,6.216902,-5.257706],[-9.072063,3.747131,-7.812251,7.318259,-8.955305,0.621566,2.329186,-2.138059],[3.464152,8.089470,-0.466290,-4.425749,-1.126184,-9.443500,1.817351,-7.777951],[-9.935176,7.345567,4.092761,-9.613344,4.011377,-5.704679,-8.653653,-5.932483],[-2.550401,7.669253,-4.684738,-0.776251,-4.580802,0.199163,1.395873,-3.852567],[3.993400,-2.648324,-6.590512,2.776296,-6.756836,-2.198446,-0.097825,-8.295839]],[[1.050004,-4.071584,-0.399150,-9.375295,9.231664,-9.872706,6.178831,2.145821],[-1.065494,-2.558158,-1.225130,-6.381790,2.160139,-5.377083,-6.576271,-3.976500],[-8.652313,6.940168,-7.386604,7.965169,0.515153,-0.622340,-1.805341,-0.081881],[-2.212301,-1.177274,-0.209046,1.695358,3.567279,3.863150,1.976517,7.908885],[-8.984873,-2.767721,-9.870137,9.325115,9.098893,7.083509,8.851296,1.626390],[-9.283809,-1.809821,-5.257421,-7.141873,1.172243,0.828952,-5.121380,-6.507014],[-4.791541,6.453912,8.979580,-4.183446,-8.168180,-9.671562,5.044507,3.921927],[8.091594,-1.922595,-5.946496,-1.634139,6.746205,-7.526015,-7.158441,-6.840571],[7.323691,-1.953916,-3.685074,8.568751,-1.355583,-8.086524,1.822238,3.572454],[-9.319207,0.271520,-5.428870,-1.382530,5.876273,0.206559,-5.889224,-8.267638],[6.311995,-9.022929,-6.948715,8.487709,8.266280,-8.324507,0.046963,-8.825508]],[[-4.539382,-2.552979,2.803362,-6.368764,3.980791,-6.055057,8.006176,3.439497],[6.109590,1.226787,-5.797088,-0.680479,-7.218774,-7.129444,-3.796000,0.623496],[-8.334039,-0.239948,8.490327,3.908993,-2.851329,-6.071880,-5.135427,7.384660],[7.740249,1.530541,8.837333,7.849253,8.198912,0.581583,-5.127890,-3.067506],[4.067040,-6.567247,5.156371,8.486213,-8.307073,0.636628,-6.068762,-4.884541],[3.268354,6.381337,-1.137376,0.378137,-9.400469,9.094639,2.048849,-5.125675],[-5.720181,9.671853,-6.951225,-4.642846,-9.833175,7.192468,-0.616789,-4.760330],[-6.731751,-1.592795,0.955837,-2.633579,-0.476841,-2.298421,8.033449,-5.161431],[-7.685666,3.245583,6.698702,8.641720,8.949828,-3.350544,-5.053275,-5.773209],[-2.236006,4.210334,-6.310247,8.539853,-5.633704,-7.262811,-2.359465,0.009059],[3.611760,2.824479,-7.272393,-2.432181,-9.802199,2.723628,-2.567743,3.017993]],[[-1.138666,-3.770143,-7.073247,-3.449823,7.017301,-8.227393,3.337582,-1.606286],[-3.077708,6.862463,-5.444289,-4.866306,-8.712772,-2.579477,9.832793,3.381124],[-0.564772,-4.466499,-7.025938,3.767092,-7.616071,2.697544,-1.615766,-8.360758],[-6.943690,7.648123,7.784480,2.029874,-1.618584,-1.428425,4.127080,4.299385],[3.387853,-3.539727,-9.785439,-5.128098,3.052413,2.345919,4.807427,-6.572943],[6.545267,6.343860,1.782170,8.462379,-7.355708,-3.472477,1.770146,7.960788],[3.171313,-3.486777,-6.396596,-9.880783,1.174810,2.447239,5.670832,-6.319147],[8.883938,-7.648226,-5.931689,-6.380337,7.942821,-9.885108,4.016052,-7.962749],[8.704932,-1.591681,9.421179,8.419384,-7.984489,5.696711,-6.045658,7.826128],[3.420849,-8.281701,1.940235,-7.140775,2.340207,2.455568,8.942052,-0.083965],[3.446203,-9.194792,6.571230,4.752653,-6.391806,-5.296973,-0.928909,-3.161378]],[[8.779810,0.895025,-6.973018,9.569176,-5.465359,-0.232627,-4.666554,-1.998585],[2.526309,-4.397027,-8.176966,5.991382,1.608912,8.641733,9.950890,2.888364],[-4.178006,6.400109,0.849367,3.555496,1.652031,6.992778,-5.575571,2.102183],[-3.953742,-2.541578,8.095865,2.489643,7.853234,-4.287759,-0.531980,1.950846],[-7.642081,7.740879,-7.337861,1.251542,-8.783929,7.519789,-0.540904,5.180637],[6.978877,2.157776,2.919025,1.403193,3.400935,7.582314,0.174222,7.360658],[3.724635,6.885821,1.416286,1.043434,8.837498,-9.836823,-1.138326,-1.296925],[3.910769,-6.948033,-9.120064,-9.996398,-9.103786,-5.301803,-4.129243,7.498846],[-9.528053,3.987436,-6.581013,-9.713840,-1.184929,5.899732,-8.193951,-0.608357],[-6.860504,-5.721211,-8.933236,-2.292900,-0.972820,-0.418255,-0.508199,-4.117476],[7.348048,-9.284343,-5.208990,8.745713,1.974836,8.693296,5.096762,-6.837202]],[[4.275206,-9.048780,7.657958,-6.689819,7.774871,-0.581124,-3.972689,2.444833],[2.992200,2.842654,-8.098580,-1.777093,-9.684237,7.886988,5.296655,4.115823],[-8.048846,-4.044582,-3.510791,5.733429,2.261806,-9.434379,-9.034590,2.485943],[3.884319,5.313528,-7.979692,-0.112386,-1.431131,-6.376634,9.352050,-4.661543],[7.763768,2.767173,6.786257,-0.202062,-6.575573,-2.402035,-4.016504,-9.329367],[2.593641,5.305822,6.719628,-4.381109,2.375167,0.427297,-6.003323,-4.185885],[-1.458781,0.709196,-0.730195,9.079209,-9.569074,1.803166,6.670397,6.431857],[6.255011,-1.122334,-5.834523,-0.297043,1.979830,-5.431290,9.683081,-7.288962],[-4.458269,8.706840,0.211237,0.070311,8.410115,-1.030277,3.441349,8.879478],[-5.319952,9.678815,-1.409830,-9.188574,-0.612631,0.736926,0.970810,4.090000],[1.376047,-3.364384,8.606199,1.524689,-3.546668,-3.810178,1.114474,-6.267235]]], dtype = "float32")#candidate|5398|(15, 11, 8)|const|float32
var_5399 = relay.var("var_5399", dtype = "float32", shape = (15, 11, 8))#candidate|5399|(15, 11, 8)|var|float32
bop_5400 = relay.divide(const_5398.astype('float32'), relay.reshape(var_5399.astype('float32'), relay.shape_of(const_5398))) # shape=(15, 11, 8)
func_235_call = mod.get_global_var('func_235')
func_238_call = mutated_mod.get_global_var('func_238')
var_5404 = relay.var("var_5404", dtype = "uint16", shape = (455,))#candidate|5404|(455,)|var|uint16
call_5403 = relay.TupleGetItem(func_235_call(relay.reshape(var_5404.astype('uint16'), [5, 7, 13])), 6)
call_5405 = relay.TupleGetItem(func_238_call(relay.reshape(var_5404.astype('uint16'), [5, 7, 13])), 6)
uop_5411 = relay.log10(bop_5400.astype('float32')) # shape=(15, 11, 8)
var_5430 = relay.var("var_5430", dtype = "float32", shape = (15, 11, 8))#candidate|5430|(15, 11, 8)|var|float32
bop_5431 = relay.left_shift(uop_5411.astype('int16'), relay.reshape(var_5430.astype('int16'), relay.shape_of(uop_5411))) # shape=(15, 11, 8)
output = relay.Tuple([call_5403,var_5404,bop_5431,])
output2 = relay.Tuple([call_5405,var_5404,bop_5431,])
func_5445 = relay.Function([var_5399,var_5404,var_5430,], output)
mod['func_5445'] = func_5445
mod = relay.transform.InferType()(mod)
mutated_mod['func_5445'] = func_5445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5445_call = mutated_mod.get_global_var('func_5445')
var_5447 = relay.var("var_5447", dtype = "float32", shape = (15, 11, 8))#candidate|5447|(15, 11, 8)|var|float32
var_5448 = relay.var("var_5448", dtype = "uint16", shape = (455,))#candidate|5448|(455,)|var|uint16
var_5449 = relay.var("var_5449", dtype = "float32", shape = (15, 11, 8))#candidate|5449|(15, 11, 8)|var|float32
call_5446 = func_5445_call(var_5447,var_5448,var_5449,)
output = call_5446
func_5450 = relay.Function([var_5447,var_5448,var_5449,], output)
mutated_mod['func_5450'] = func_5450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3987_call = mod.get_global_var('func_3987')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_5514 = relay.TupleGetItem(func_3987_call(), 0)
call_5515 = relay.TupleGetItem(func_3989_call(), 0)
uop_5530 = relay.atanh(call_5514.astype('float64')) # shape=(7, 4, 9)
uop_5532 = relay.atanh(call_5515.astype('float64')) # shape=(7, 4, 9)
var_5535 = relay.var("var_5535", dtype = "float64", shape = (7, 4, 9))#candidate|5535|(7, 4, 9)|var|float64
bop_5536 = relay.power(uop_5530.astype('float32'), relay.reshape(var_5535.astype('float32'), relay.shape_of(uop_5530))) # shape=(7, 4, 9)
bop_5539 = relay.power(uop_5532.astype('float32'), relay.reshape(var_5535.astype('float32'), relay.shape_of(uop_5532))) # shape=(7, 4, 9)
output = relay.Tuple([bop_5536,])
output2 = relay.Tuple([bop_5539,])
func_5543 = relay.Function([var_5535,], output)
mod['func_5543'] = func_5543
mod = relay.transform.InferType()(mod)
mutated_mod['func_5543'] = func_5543
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5544 = relay.var("var_5544", dtype = "float64", shape = (7, 4, 9))#candidate|5544|(7, 4, 9)|var|float64
func_5543_call = mutated_mod.get_global_var('func_5543')
call_5545 = func_5543_call(var_5544)
output = call_5545
func_5546 = relay.Function([var_5544], output)
mutated_mod['func_5546'] = func_5546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4135_call = mod.get_global_var('func_4135')
func_4137_call = mutated_mod.get_global_var('func_4137')
call_5606 = relay.TupleGetItem(func_4135_call(), 0)
call_5607 = relay.TupleGetItem(func_4137_call(), 0)
output = relay.Tuple([call_5606,])
output2 = relay.Tuple([call_5607,])
func_5620 = relay.Function([], output)
mod['func_5620'] = func_5620
mod = relay.transform.InferType()(mod)
mutated_mod['func_5620'] = func_5620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5620_call = mutated_mod.get_global_var('func_5620')
call_5621 = func_5620_call()
output = call_5621
func_5622 = relay.Function([], output)
mutated_mod['func_5622'] = func_5622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3569_call = mod.get_global_var('func_3569')
func_3571_call = mutated_mod.get_global_var('func_3571')
call_5695 = func_3569_call()
call_5696 = func_3569_call()
var_5708 = relay.var("var_5708", dtype = "float64", shape = (10, 96))#candidate|5708|(10, 96)|var|float64
bop_5709 = relay.equal(call_5695.astype('bool'), relay.reshape(var_5708.astype('bool'), relay.shape_of(call_5695))) # shape=(10, 96)
bop_5712 = relay.equal(call_5696.astype('bool'), relay.reshape(var_5708.astype('bool'), relay.shape_of(call_5696))) # shape=(10, 96)
uop_5720 = relay.tan(bop_5709.astype('float64')) # shape=(10, 96)
uop_5722 = relay.tan(bop_5712.astype('float64')) # shape=(10, 96)
output = relay.Tuple([uop_5720,])
output2 = relay.Tuple([uop_5722,])
func_5731 = relay.Function([var_5708,], output)
mod['func_5731'] = func_5731
mod = relay.transform.InferType()(mod)
mutated_mod['func_5731'] = func_5731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5732 = relay.var("var_5732", dtype = "float64", shape = (10, 96))#candidate|5732|(10, 96)|var|float64
func_5731_call = mutated_mod.get_global_var('func_5731')
call_5733 = func_5731_call(var_5732)
output = call_5733
func_5734 = relay.Function([var_5732], output)
mutated_mod['func_5734'] = func_5734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3569_call = mod.get_global_var('func_3569')
func_3571_call = mutated_mod.get_global_var('func_3571')
call_5869 = func_3569_call()
call_5870 = func_3569_call()
func_2859_call = mod.get_global_var('func_2859')
func_2860_call = mutated_mod.get_global_var('func_2860')
call_5879 = func_2859_call()
call_5880 = func_2859_call()
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_5894 = relay.TupleGetItem(func_1739_call(relay.reshape(call_5879.astype('float32'), [13, 15, 16])), 4)
call_5895 = relay.TupleGetItem(func_1741_call(relay.reshape(call_5879.astype('float32'), [13, 15, 16])), 4)
output = relay.Tuple([call_5869,call_5879,call_5894,])
output2 = relay.Tuple([call_5870,call_5880,call_5895,])
func_5898 = relay.Function([], output)
mod['func_5898'] = func_5898
mod = relay.transform.InferType()(mod)
output = func_5898()
func_5899 = relay.Function([], output)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5182_call = mod.get_global_var('func_5182')
func_5183_call = mutated_mod.get_global_var('func_5183')
call_6005 = func_5182_call()
call_6006 = func_5182_call()
output = call_6005
output2 = call_6006
func_6007 = relay.Function([], output)
mod['func_6007'] = func_6007
mod = relay.transform.InferType()(mod)
output = func_6007()
func_6008 = relay.Function([], output)
mutated_mod['func_6008'] = func_6008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5620_call = mod.get_global_var('func_5620')
func_5622_call = mutated_mod.get_global_var('func_5622')
call_6184 = relay.TupleGetItem(func_5620_call(), 0)
call_6185 = relay.TupleGetItem(func_5622_call(), 0)
func_1526_call = mod.get_global_var('func_1526')
func_1529_call = mutated_mod.get_global_var('func_1529')
call_6190 = relay.TupleGetItem(func_1526_call(relay.reshape(call_6184.astype('float64'), [13, 15, 16])), 0)
call_6191 = relay.TupleGetItem(func_1529_call(relay.reshape(call_6184.astype('float64'), [13, 15, 16])), 0)
func_4772_call = mod.get_global_var('func_4772')
func_4775_call = mutated_mod.get_global_var('func_4775')
const_6197 = relay.const(-6, dtype = "int64")#candidate|6197|()|const|int64
var_6198 = relay.var("var_6198", dtype = "int64", shape = (110,))#candidate|6198|(110,)|var|int64
call_6196 = relay.TupleGetItem(func_4772_call(relay.reshape(const_6197.astype('int64'), []), relay.reshape(var_6198.astype('int64'), [5, 2, 11]), ), 0)
call_6199 = relay.TupleGetItem(func_4775_call(relay.reshape(const_6197.astype('int64'), []), relay.reshape(var_6198.astype('int64'), [5, 2, 11]), ), 0)
output = relay.Tuple([call_6184,call_6190,call_6196,const_6197,var_6198,])
output2 = relay.Tuple([call_6185,call_6191,call_6199,const_6197,var_6198,])
func_6200 = relay.Function([var_6198,], output)
mod['func_6200'] = func_6200
mod = relay.transform.InferType()(mod)
mutated_mod['func_6200'] = func_6200
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6201 = relay.var("var_6201", dtype = "int64", shape = (110,))#candidate|6201|(110,)|var|int64
func_6200_call = mutated_mod.get_global_var('func_6200')
call_6202 = func_6200_call(var_6201)
output = call_6202
func_6203 = relay.Function([var_6201], output)
mutated_mod['func_6203'] = func_6203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2476_call = mod.get_global_var('func_2476')
func_2478_call = mutated_mod.get_global_var('func_2478')
call_6216 = relay.TupleGetItem(func_2476_call(), 0)
call_6217 = relay.TupleGetItem(func_2478_call(), 0)
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_6246 = func_2487_call()
call_6247 = func_2487_call()
output = relay.Tuple([call_6216,call_6246,])
output2 = relay.Tuple([call_6217,call_6247,])
func_6255 = relay.Function([], output)
mod['func_6255'] = func_6255
mod = relay.transform.InferType()(mod)
output = func_6255()
func_6256 = relay.Function([], output)
mutated_mod['func_6256'] = func_6256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3885_call = mod.get_global_var('func_3885')
func_3887_call = mutated_mod.get_global_var('func_3887')
call_6289 = relay.TupleGetItem(func_3885_call(), 0)
call_6290 = relay.TupleGetItem(func_3887_call(), 0)
func_1932_call = mod.get_global_var('func_1932')
func_1934_call = mutated_mod.get_global_var('func_1934')
call_6320 = func_1932_call(relay.reshape(call_6289.astype('float64'), [10, 16, 6]))
call_6321 = func_1932_call(relay.reshape(call_6289.astype('float64'), [10, 16, 6]))
func_4135_call = mod.get_global_var('func_4135')
func_4137_call = mutated_mod.get_global_var('func_4137')
call_6334 = relay.TupleGetItem(func_4135_call(), 0)
call_6335 = relay.TupleGetItem(func_4137_call(), 0)
func_2487_call = mod.get_global_var('func_2487')
func_2488_call = mutated_mod.get_global_var('func_2488')
call_6360 = func_2487_call()
call_6361 = func_2487_call()
output = relay.Tuple([call_6289,call_6320,call_6334,call_6360,])
output2 = relay.Tuple([call_6290,call_6321,call_6335,call_6361,])
func_6375 = relay.Function([], output)
mod['func_6375'] = func_6375
mod = relay.transform.InferType()(mod)
mutated_mod['func_6375'] = func_6375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6375_call = mutated_mod.get_global_var('func_6375')
call_6376 = func_6375_call()
output = call_6376
func_6377 = relay.Function([], output)
mutated_mod['func_6377'] = func_6377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3885_call = mod.get_global_var('func_3885')
func_3887_call = mutated_mod.get_global_var('func_3887')
call_6395 = relay.TupleGetItem(func_3885_call(), 0)
call_6396 = relay.TupleGetItem(func_3887_call(), 0)
uop_6403 = relay.log10(call_6395.astype('float64')) # shape=(10, 96)
uop_6405 = relay.log10(call_6396.astype('float64')) # shape=(10, 96)
output = relay.Tuple([uop_6403,])
output2 = relay.Tuple([uop_6405,])
func_6406 = relay.Function([], output)
mod['func_6406'] = func_6406
mod = relay.transform.InferType()(mod)
output = func_6406()
func_6407 = relay.Function([], output)
mutated_mod['func_6407'] = func_6407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_6472 = relay.TupleGetItem(func_3643_call(), 0)
call_6473 = relay.TupleGetItem(func_3644_call(), 0)
output = relay.Tuple([call_6472,])
output2 = relay.Tuple([call_6473,])
func_6481 = relay.Function([], output)
mod['func_6481'] = func_6481
mod = relay.transform.InferType()(mod)
output = func_6481()
func_6482 = relay.Function([], output)
mutated_mod['func_6482'] = func_6482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2959_call = mod.get_global_var('func_2959')
func_2961_call = mutated_mod.get_global_var('func_2961')
call_6487 = relay.TupleGetItem(func_2959_call(), 0)
call_6488 = relay.TupleGetItem(func_2961_call(), 0)
func_5445_call = mod.get_global_var('func_5445')
func_5450_call = mutated_mod.get_global_var('func_5450')
const_6504 = relay.const([-7.777161,-5.979698,7.610087,5.087945,6.400299,0.034409,1.837584,-1.522608,5.765084,5.372195,-3.304208,3.213829,3.161761,8.585928,1.709552,1.370579,-2.900066,6.836990,-2.211388,-1.410433,-2.028872,-1.822828,-4.249634,2.202176,-2.380082,3.893551,3.660201,-8.285575,-9.805932,7.817080,-5.641925,-0.437054,-3.054047,-5.612758,-7.930165,-6.626526,-0.278967,4.837608,8.347034,5.825237,1.246398,-4.318945,0.756099,2.772962,-1.852809,1.344294,1.825081,-8.130854,0.868339,-2.089470,5.787866,3.202023,6.591840,-7.809273,4.649424,3.584494,-3.728807,8.973707,-5.948320,-1.136205,1.071893,2.244677,4.885367,-6.853723,6.138111,-9.035032,-8.032771,-9.539821,-4.757049,-2.211375,-6.837437,-9.988150,-3.126890,8.379498,-6.849996,3.004505,7.886879,8.859764,-7.129433,-1.758283,-8.100292,-9.385875,-7.522582,0.887202,-9.849640,-7.528334,5.588089,3.073767,-4.879145,-0.241578,-9.844413,-6.591224,-5.172151,-4.730988,2.789185,-7.839005,-5.646935,-0.061020,-0.998731,2.167967,-4.622332,9.105133,2.037315,7.407443,2.184877,-6.081881,7.323180,-8.950018,-2.333165,7.427123,5.600493,-3.865081,-2.692968,-3.497883,-4.152780,8.170830,6.984692,-8.176906,-7.225126,-3.173251,0.361844,3.548781,2.156789,-2.655344,4.037601,9.298273,-2.999418,-2.457536,6.297692,7.449293,-5.170537,-4.909231,5.383031,-9.524173,-4.916805,-5.803035,-4.882982,-8.888900,7.996224,9.152377,-1.814720,3.650093,-1.865963,-9.882829,-2.262669,6.394237,-1.966075,-6.270034,-0.505435,1.722693,7.154447,-1.442269,-2.801321,3.912729,-3.019384,-2.474246,1.691761,2.941211,8.690869,3.334088,1.912846,-7.844234,-1.787551,1.198228,-8.334778,6.861560,-1.823538,1.530092,9.372260,-6.363641,8.546396,-1.833338,-8.969675,1.836445,8.148251,4.717903,4.941510,3.773711,-3.903635,7.798988,5.615555,-4.121800,-8.672859,-0.220702,-9.648855,6.537027,6.162086,6.032880,0.118441,4.350418,5.952425,3.773147,2.323587,4.314739,-9.587022,-0.483534,2.503133,3.321980,-3.346410,8.300433,5.523486,-8.260957,5.227956,-7.581041,-2.065215,0.488368,2.474679,8.152100,4.740941,-4.017649,9.917175,-3.287823,-2.041429,-3.312546,4.321890,2.306321,4.587648,-5.283061,5.361932,2.958024,-4.552375,-0.786103,-3.046320,-2.336176,-0.205335,5.132414,2.644609,-4.256800,9.809810,-3.512613,9.264048,5.329494,-9.141685,8.370809,3.601426,7.213913,7.712395,9.671033,2.121009,-3.174100,-0.320158,7.853759,0.287065,4.970410,9.349420,4.788608,-3.670339,9.021125,-3.562302,-6.162957,0.562140,-4.706040,4.083905,-8.913308,9.958909,-9.577032,-7.003275,-9.628074,-3.440209,3.017664,4.857434,-1.469670,4.893259,-5.166808,-1.205224,7.944913,6.146655,-6.343555,1.931920,6.703116,9.575718,1.539676,-4.249567,0.921550,0.374792,-4.948636,-1.220170,-7.369974,-1.446273,4.965200,-2.124770,-4.572462,-9.588555,-7.021218,-0.539638,5.416575,-3.804198,9.223432,-2.206997,8.180324,7.678679,-6.735652,-4.906217,-6.193575,-2.048323,6.478620,-2.072262,-0.555806,-8.479663,2.162002,-5.373594,3.460601,6.138010,1.387638,0.095057,5.438727,-8.940775,-7.268046,3.850298,2.231072,5.044797,-0.208107,4.105657,-0.492854,5.857459,-4.853703,-9.514552,-6.126541,-9.455479,0.234864,-5.357694,4.380922,2.961807,5.553978,-1.001964,-9.781045,4.047081,8.377269,3.229109,3.530171,4.258396,-7.858390,9.988369,6.340660,4.446004,7.381089,-2.256947,-2.030152,0.937105,-2.430734,0.043003,5.632881,5.242725,8.374791,-0.499829,7.727938,-0.665202,-6.839297,4.176933,4.888394,-0.157288,-9.699279,1.544453,-5.131132,2.260840,-9.122528,0.126007,1.420682,5.262117,2.141051,7.093557,0.179685,7.162093,0.272260,-6.508614,8.483362,-8.725054,4.121035,-1.076328,-9.487161,-0.032228,-9.885329,-6.282174,-0.620484,-6.069612,8.334284,-0.718657,0.298080,-1.231806,-9.658754,-3.145103,-5.103295,-5.619196,-4.975077,6.637388,-5.595345,-1.637483,-3.384416,-8.368322,-1.181716,-8.941006,7.177080,-1.339722,-0.451028,0.452812,1.016409,-2.088196,-8.189829,1.506475,-3.888427,1.022613,-0.502808,6.168121,-8.651186,7.423138,1.701096,8.436533,7.299795,9.113061,-0.542947,-8.744582,-1.245599,6.587967,9.160427,-7.679737,-7.073142,-7.552320,9.932312,5.698794,-3.307963,-4.312588,-4.370779,-3.431437,8.081811,-0.761851,-4.864868,-8.116834,4.423124,-9.603618,-6.631609,-6.057239,-7.829848,-8.550863,0.447499,-8.295058,-9.565577,6.506343,-6.522077,-3.542528,4.613918,9.064680,-0.485741,2.309336,-3.175043,-8.536566,-6.538470,7.334918,-7.404274,-7.866689,3.274695,4.974776,8.194932,-7.149288,-7.679901,3.709745,0.353901,9.305035,-8.386847,-0.258213,-8.100677,-3.671388,0.163052,-9.977086,8.902774,8.592473,6.465776,-0.072797,2.947858,-0.177505,-7.652780,-5.093406,-2.010865,6.343148,-8.088344,4.027062,-2.412880,2.437503,6.820745,4.637054,-4.715282,0.719208,7.420478,-7.923440,8.881059,-1.152156,-5.662456,3.960740,2.089183,-1.780354,-8.372052,-1.166996,6.712377,9.253540,5.382141,8.958467,3.150755,1.055062,-7.566093,-1.871494,-5.149308,7.689137,8.538107,-4.132651,6.731971,-2.763377,-2.414447,8.316739,-2.051844,1.304149,2.448665,8.060442,2.955300,-5.164027,-5.436207,8.217369,8.285278,7.558758,-4.688659,1.648185,-7.728172,0.045371,5.817590,-1.319376,2.678140,5.728970,-9.266203,-2.432873,-2.792860,-2.911767,9.545005,3.002547,-1.553852,2.239918,-6.568118,2.878950,-0.150966,-5.942879,9.463197,7.614032,-6.453293,0.248368,9.737699,-2.292941,-2.496675,-6.600076,5.247290,1.651168,-7.685755,-7.233113,2.986554,-0.245550,-2.026745,9.050881,9.348150,0.910048,-6.024308,6.073039,-5.817963,4.758567,-2.379153,-6.371674,7.352227,0.283667,-6.446830,1.262243,8.360729,0.030992,-2.045457,5.560678,5.995823,0.423816,-9.106226,3.419758,-0.035691,1.405057,-8.746750,-1.573625,1.228008,4.206042,3.262918,-5.415573,-6.902230,2.772442,-3.551468,2.273780,3.821491,2.305823,6.243481,-1.867067,8.653272,-5.949972,0.364693,-3.602012,-2.983753,-4.850254,-1.403419,1.195257,-4.022436,9.208152,3.112183,-8.132078,6.665515,-4.987921,-3.548545,-3.913751,6.135526,8.062909,-9.892190,1.386191,6.224255,-7.583315,-5.301972,8.504815,-5.507746,-7.830483,5.285377,-9.668388,-9.299238,9.920964,9.832857,1.980730,-7.854033,6.151598,-5.609411,9.303981,-4.555005,2.838063,4.018104,7.155108,5.202075,-1.956214,-0.756963,6.518047,8.670607,9.019771,-9.792697,4.534046,1.227206,3.073324,-3.741470,-6.044295,3.064714,4.731360,-5.968097,-5.201241,-5.139842,-0.439643,-9.025869,-3.911610,-8.612350,-9.295847,-4.198284,8.819467,1.297437,4.388944,8.720457,-8.321757,5.325169,-6.495905,7.983800,8.920977,8.745795,-6.680728,6.861891,1.543399,6.116358,-7.244795,-5.200733,7.285389,7.212143,1.252418,-5.668516,6.821496,0.383580,6.431872,-5.622169,7.010106,-6.138903,7.641414,-3.203755,9.695682,5.093074,4.994680,5.498031,3.943692,3.451255,-7.230117,-6.232433,5.947197,4.428381,-5.955553,8.454845,6.206645,-4.514950,9.920360,5.820846,-1.363057,-9.443120,-7.288103,-6.311290,-7.369700,-4.202147,-7.134083,-4.361493,9.860880,-3.078885,-0.245133,2.627056,-0.287124,-6.972893,-0.572830,-9.398512,-8.118528,-0.277732,4.758047,-0.668346,-7.873819,-4.985005,-7.270353,-1.272100,-8.744573,8.897631,-2.883977,-3.290670,-1.718290,-7.987337,-0.803759,3.077308,1.180401,-6.943041,0.881940,5.015855,3.963872,-5.422088,-6.236939,0.541294,3.744328,6.170492,1.044183,-9.533805,3.532327,-4.234918,-5.914273,-5.640902,1.233921,-6.202866,-5.745458,-4.130991,0.038667,3.603287,4.742059,-5.909304,6.471943,-9.858693,1.729399,2.286531,2.717418,-8.561920,9.444572,-3.929809,9.321612,5.992937,-0.222219,-5.856080,-5.912447,5.426488,-6.400634,5.712802,-5.101401,3.757530,-4.263094,-8.409509,-7.427814,4.480790,6.354892,7.954393,-8.964066,-9.851270,-5.094203,-3.199023,-7.833106,6.989742,2.054772,7.858215,-6.834017,0.237948,0.163609,8.840787,1.120190,0.745127,-0.188800,0.888319,-1.557697,1.150088,-9.158948,5.737368,6.159846,-4.782082,5.334412,-9.015453,-9.780614,3.043056,6.245208,8.813573,4.003576,-3.629346,7.958966,9.431686,5.834380,9.168485,-9.951017,2.485211,4.290972,1.869433,0.562059,-4.379354,3.855090,8.478350,-4.974263,2.354553,4.213637,9.924952,-0.247604,-5.064229,5.352186,8.133488,1.307679,-9.460227,-8.209038,5.213361,5.710492,3.202027,7.396320,-1.897191,-9.508297,-1.639039,0.597199,-0.716311,-8.547881,9.405886,-0.602634,8.922454,5.841315,-1.627747,9.625315,7.988665,-7.061812,-6.100396,9.028380,0.391193,-4.844838,-0.015203,-3.151651,3.374767,5.665670,-9.741897,-5.286163,7.693818,8.233218,4.373807,-8.724991,-6.112474,-7.634045,-2.584951,4.930399,3.762086,7.524340,9.167893,-6.135319,-9.645288,5.007330,-6.854657,8.465491,-8.391935,4.645402,9.121807,-2.131556,-3.010458,-2.023338,2.858055,8.718963,-4.456418,-8.810095,-1.384494,-1.816937,-3.917820,5.816198,3.270650,3.516204,-9.710974,-1.395328,-3.796294,9.607906,8.693756,3.657587,7.156611,3.948615,-4.088262,5.209527,-8.009631,3.982890,6.717235,3.419239,1.644631,-1.836879,-4.344689,-5.608932,-7.561844,0.246562,2.856319,-7.785599,9.801064,-7.654674,9.226607,-5.541311,-3.571001,-2.408951,2.469574,-9.801806,-5.631408,-3.155452,4.481072,6.263931,-6.023247,5.563902,-9.971394,-4.925563,2.015983,5.632048,-3.441703,1.622268,6.137811,-3.950387,9.342003,-7.240547,-7.752612,-9.221914,1.046733,8.091765,6.171383,0.658684,-8.511297,5.211401,2.476937,-8.526005,7.458900,-2.490176,5.438235,2.925691,9.561669,3.261657,-4.820557,-2.447885,2.447487,0.418457,-1.945329,-6.886687,-5.922315,6.364522,-0.148079,6.199682,7.761049,1.090888,-9.379462,3.660106,-6.518892,2.171145,6.818589,-6.151173,5.030360,9.460950,-5.611322,-2.054789,3.134840,-5.010626,1.669527,8.990446,7.676042,-0.108591,1.594922,-9.178830,-2.116850,-8.796679,8.132555,-9.788661,-4.092127,-4.109595,-0.459404,0.572174,-0.631979,3.868127,4.362475,-8.888410,7.482340,8.075996,6.041184,-9.643263,9.684022,6.399457,1.594646,-3.000865,6.946953,5.095403,1.536309,0.531255,-4.552772,-1.356790,-0.287582,8.100624,6.796958,-7.565609,-5.549346,-6.656802,-0.505396,-8.978138,3.274918,7.307023,3.019912,-2.797497,-5.942933,0.996462,2.414325,-2.169401,-5.313673,2.518235,-2.510424,-5.972965,9.649688,8.119079,-3.390613,5.511375,-8.885687,-6.688193,6.015308,-8.056689,7.598677,8.147839,5.738439,-9.004408,8.151429,6.202339,0.252110,-3.398765,-7.912128,-0.292830,0.316816,6.772234,9.786926,1.140294,-4.757834,-1.047612,6.320019,-6.934748,7.652000,2.230160,6.532534,1.337517,-8.668749,6.934806,5.456574,-6.862674,5.507430,-0.974501,4.948346,-1.342278,4.779678,4.749552,-5.986930,-5.565983,-8.843374,-0.702226,-4.930811,8.114760,3.309102,-9.553493,-8.300627,7.390292,-2.584693,-2.279214,5.462661,8.174146,3.410729,-5.237804,2.006233,-9.292006,-7.508945,7.817786,-5.666234,3.783522,6.698492,-9.559397,-4.145830,2.458101,2.047048,8.883345,-2.975765,0.315443,4.886213,0.451803,-6.220326,4.939175,-4.926270,-4.028630,8.020112,-7.757581,6.911970,-3.083728,-1.694441,-3.052928,-3.083604,5.260545,-3.895444,-2.328212,-2.982246,-4.266051,3.586252,5.244551,-5.795312,-0.746158,7.854585,-4.966343,0.323922,4.155151,1.297494,7.840665,9.305997,-1.512247,-9.096185,6.685332,8.776735,4.897230,6.668651,-4.266324,-2.615167,1.085068,-2.939641,-6.103590,6.276230,9.286334,1.646082,-7.367279,6.592351,0.886795,4.300814,-6.088493,-0.845005,-5.305919,-0.302868,-8.920397,0.009168,3.313001,2.874462,-1.994858,7.722360,9.328085,-9.673921,2.734065,4.483302,9.019126,6.549886,8.459641,-9.986048,-2.820694,-4.086839,7.508956,-0.656335,7.129324,9.290604,-6.482041,-2.578239,4.303518,7.519077,-9.468830,5.460934,-5.569382,-5.727981,5.374333,7.213643,9.954106,-5.802225,3.390226,2.337101,-7.814359,-2.937158,8.672252,1.981098,-1.825894,8.779152,1.278181,-9.901717,-1.855842,9.835483,0.864636,6.230005,-5.868642,-5.831988,-4.105337,0.725437,-8.586633,-5.564292,-6.111988,-1.508110,-6.510064,0.763108,4.377211,9.213685,-3.276159,2.104101,6.490843,5.813507,-8.599536,-4.575716,2.786426,5.136844,5.735545,-7.063289,3.925932,-9.858572,-2.905164,4.712711,-8.787019,2.412258,7.796968,-2.396183,4.333152,7.981873,5.305924,8.248881,0.413972,-9.402111,-2.507974,-1.766843,-5.063514,6.303204,-4.447001,-8.910638,-8.871790,-7.574410,-3.734508,-4.870711,-3.041961,6.656504,4.328137,-4.569694,9.838899,-5.193710,0.729299,-5.267471,0.100665,5.787320,-2.581261,-0.016070,7.330822,6.533918,-2.677358,-4.961316,8.733227,-7.922452,-7.351912,2.630027,-4.299974,3.195806,-3.787027,0.835282,9.683414,7.267261,-3.859235,-3.112310,-7.160665,1.362549,-8.128558,2.145895,3.347983,-6.664290,2.938229,4.938157,4.921443,8.852688,-6.074917,-7.955878,3.283725,-4.249570,2.085824,-4.334353,-4.729490,-3.285267,3.622952,-1.413996,-5.064482,-5.455087,-6.282188,2.313793,-0.264177,1.432832,3.984565,-3.502971,3.902870,-5.221024,-9.980611,7.865121,-5.988401,4.217917,2.996214,-5.084010,-2.258020,8.732186,-9.164489,9.093869,-1.628719,-0.337013,-7.280363,-9.737419,5.890033,-1.734837,7.651605,-2.455325,-2.013471,1.037157,7.776462,8.738325], dtype = "float32")#candidate|6504|(1320,)|const|float32
var_6505 = relay.var("var_6505", dtype = "uint16", shape = (65, 7))#candidate|6505|(65, 7)|var|uint16
call_6503 = relay.TupleGetItem(func_5445_call(relay.reshape(const_6504.astype('float32'), [15, 11, 8]), relay.reshape(var_6505.astype('uint16'), [455,]), relay.reshape(const_6504.astype('float32'), [15, 11, 8]), ), 2)
call_6506 = relay.TupleGetItem(func_5450_call(relay.reshape(const_6504.astype('float32'), [15, 11, 8]), relay.reshape(var_6505.astype('uint16'), [455,]), relay.reshape(const_6504.astype('float32'), [15, 11, 8]), ), 2)
const_6525 = relay.const([[1,9,3,2,-4,-4,-8],[3,-6,-1,-3,6,3,-7],[1,-1,2,-2,9,-8,10],[-7,-1,-6,-9,-8,2,-4],[-5,-10,-4,9,-10,2,4],[2,4,-2,-10,-1,-7,-1],[-3,4,7,4,-2,9,1],[-3,1,-9,-7,-1,-1,-5],[-1,7,-5,-2,4,6,-9],[2,-8,5,2,-6,6,5],[-10,-8,-1,7,-8,8,6],[-10,3,-3,6,-10,-3,-9],[-6,6,7,6,-9,-3,3],[8,7,4,-1,1,-6,-8],[-7,-6,1,8,-6,-3,-1],[-9,-8,-6,7,7,7,-5],[-6,4,2,-8,-1,-9,3],[1,10,10,9,5,4,-3],[-7,-7,-3,-10,-10,8,-5],[10,10,-3,1,10,-7,-5],[-6,-5,-9,8,1,9,-6],[-3,-3,-10,4,3,7,5],[-8,-7,1,7,-2,3,5],[-5,8,-2,2,-4,-7,4],[-10,-10,-3,1,8,-5,-7],[8,-2,-2,2,3,-10,-2],[4,1,-9,2,-9,-6,-5],[1,-1,3,-1,-8,-3,-9],[-8,9,9,5,2,-9,-2],[-8,-8,-8,-8,-6,8,-10],[-3,-3,1,4,-2,9,-8],[-5,-3,-7,3,-4,6,8],[2,-4,-8,-7,-7,-1,9],[4,-8,8,-3,-4,10,-7],[-6,10,-6,6,-1,5,5],[8,-5,3,-1,-5,-6,1],[7,-4,-5,-2,9,5,2],[-6,5,2,6,1,6,2],[-3,10,10,-4,8,-4,-5],[-5,-8,-5,-6,-2,2,-10],[7,2,4,1,-6,9,-10],[-9,3,-3,6,3,-5,-4],[8,5,7,-7,-9,-9,5],[9,2,-10,1,-7,1,8],[-4,-1,10,10,-3,-10,-7],[-9,6,8,3,4,-1,-2],[-10,-6,-5,-9,-5,2,-5],[-2,1,5,-7,-5,10,8],[-8,-4,3,5,1,4,-2],[-3,9,7,9,7,-4,-8],[-2,6,9,2,-3,9,-10],[9,-9,7,10,-8,-8,4],[-9,-8,9,3,-5,-9,2],[2,10,2,-4,9,-6,2],[4,-8,8,-4,-10,-4,-3],[-5,10,-7,-1,-2,-1,-8],[8,1,-5,4,4,2,-8],[1,9,8,-5,4,5,10],[6,3,9,-7,6,10,3],[6,-8,5,-6,9,-8,-7],[10,1,7,-2,-9,-3,-4],[4,2,-1,8,-10,-10,6],[-3,-3,4,8,7,10,-3],[-8,5,-6,-4,9,-4,-6],[7,2,-7,-2,-6,-4,2]], dtype = "uint16")#candidate|6525|(65, 7)|const|uint16
bop_6526 = relay.logical_xor(var_6505.astype('int32'), relay.reshape(const_6525.astype('int32'), relay.shape_of(var_6505))) # shape=(65, 7)
var_6536 = relay.var("var_6536", dtype = "int32", shape = (65, 7))#candidate|6536|(65, 7)|var|int32
bop_6537 = relay.less_equal(bop_6526.astype('bool'), relay.reshape(var_6536.astype('bool'), relay.shape_of(bop_6526))) # shape=(65, 7)
bop_6542 = relay.right_shift(bop_6537.astype('uint64'), relay.reshape(const_6525.astype('uint64'), relay.shape_of(bop_6537))) # shape=(65, 7)
output = relay.Tuple([call_6487,call_6503,const_6504,bop_6542,])
output2 = relay.Tuple([call_6488,call_6506,const_6504,bop_6542,])
func_6553 = relay.Function([var_6505,var_6536,], output)
mod['func_6553'] = func_6553
mod = relay.transform.InferType()(mod)
var_6554 = relay.var("var_6554", dtype = "uint16", shape = (65, 7))#candidate|6554|(65, 7)|var|uint16
var_6555 = relay.var("var_6555", dtype = "int32", shape = (65, 7))#candidate|6555|(65, 7)|var|int32
output = func_6553(var_6554,var_6555,)
func_6556 = relay.Function([var_6554,var_6555,], output)
mutated_mod['func_6556'] = func_6556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6255_call = mod.get_global_var('func_6255')
func_6256_call = mutated_mod.get_global_var('func_6256')
call_6596 = relay.TupleGetItem(func_6255_call(), 0)
call_6597 = relay.TupleGetItem(func_6256_call(), 0)
output = relay.Tuple([call_6596,])
output2 = relay.Tuple([call_6597,])
func_6605 = relay.Function([], output)
mod['func_6605'] = func_6605
mod = relay.transform.InferType()(mod)
output = func_6605()
func_6606 = relay.Function([], output)
mutated_mod['func_6606'] = func_6606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5101_call = mod.get_global_var('func_5101')
func_5103_call = mutated_mod.get_global_var('func_5103')
call_6676 = relay.TupleGetItem(func_5101_call(), 0)
call_6677 = relay.TupleGetItem(func_5103_call(), 0)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
const_6682 = relay.const([-8.611575,-7.310691,-9.000352,1.475819,1.310344,8.785809,8.401527,6.178601,-0.633625,-9.915048,8.158020,3.441468,2.292840,-8.503536,-7.440514,-5.610232,-0.788985,-1.693486,7.735760,9.349342,2.093768,-2.959731,-0.498212,-0.757405,-5.606350,-3.836220,-5.437742,-6.052114,5.723454,5.763115,5.132756,-6.673643,-6.507757,-1.723613,7.788492,-1.557502,2.960448,7.741174,4.804895,-6.583490,-0.379706,5.682926,8.494893,-6.280191,-2.533640,-4.274957,2.338087,1.230275,7.334512,-1.794694,-8.872391,7.282517,2.563260,9.116579,-6.410730,-6.478027,-3.272338,8.674644,6.533725,-8.424734,9.379991,6.881383,-8.651105,9.556547,4.582802,-0.897970,-4.191187,6.451335,-4.163631,-4.005049,-6.155899,4.929141,-5.766206,-1.540527,3.755096,3.653080,6.556108,3.847773,-4.620934,7.171717,-9.440925,1.821985,4.994816,-0.612549,6.384949,-2.008637,3.938869,-0.446193,7.420773,-7.467725,2.048164,6.980269,-2.152737,-8.013620,5.286450,-6.985210,5.723585,6.048734,-6.510041,-9.518159,-6.483038,-6.024800,8.435938,-7.635000,7.080955,3.625318,-1.246082,-7.033887,3.928534,1.379142,-3.214934,3.996481,0.488379,2.070332,-9.305024,7.002109,-3.110797,6.563596,-5.166320,-0.487852,-0.275172,8.903506,4.609675,0.455650,-8.553298,8.429758,3.524941,4.069467,7.575791,-5.902308,-9.433264,4.148593,7.147282,-5.222567,-7.313641,-2.121218,-2.500754,9.227578,6.754545,6.261774,-5.554143,-8.180604,6.845883,-2.411269], dtype = "float64")#candidate|6682|(144,)|const|float64
call_6681 = relay.TupleGetItem(func_2609_call(relay.reshape(const_6682.astype('float64'), [144,])), 2)
call_6683 = relay.TupleGetItem(func_2611_call(relay.reshape(const_6682.astype('float64'), [144,])), 2)
func_1654_call = mod.get_global_var('func_1654')
func_1655_call = mutated_mod.get_global_var('func_1655')
call_6689 = relay.TupleGetItem(func_1654_call(), 0)
call_6690 = relay.TupleGetItem(func_1655_call(), 0)
output = relay.Tuple([call_6676,call_6681,const_6682,call_6689,])
output2 = relay.Tuple([call_6677,call_6683,const_6682,call_6690,])
func_6697 = relay.Function([], output)
mod['func_6697'] = func_6697
mod = relay.transform.InferType()(mod)
output = func_6697()
func_6698 = relay.Function([], output)
mutated_mod['func_6698'] = func_6698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3853_call = mod.get_global_var('func_3853')
func_3854_call = mutated_mod.get_global_var('func_3854')
call_6715 = func_3853_call()
call_6716 = func_3853_call()
func_6481_call = mod.get_global_var('func_6481')
func_6482_call = mutated_mod.get_global_var('func_6482')
call_6717 = relay.TupleGetItem(func_6481_call(), 0)
call_6718 = relay.TupleGetItem(func_6482_call(), 0)
func_2533_call = mod.get_global_var('func_2533')
func_2536_call = mutated_mod.get_global_var('func_2536')
var_6721 = relay.var("var_6721", dtype = "float64", shape = (144,))#candidate|6721|(144,)|var|float64
call_6720 = relay.TupleGetItem(func_2533_call(relay.reshape(var_6721.astype('float64'), [2, 72])), 3)
call_6722 = relay.TupleGetItem(func_2536_call(relay.reshape(var_6721.astype('float64'), [2, 72])), 3)
func_3804_call = mod.get_global_var('func_3804')
func_3808_call = mutated_mod.get_global_var('func_3808')
call_6748 = relay.TupleGetItem(func_3804_call(relay.reshape(call_6717.astype('bool'), [13, 15, 16]), relay.reshape(call_6715.astype('float64'), [960,]), relay.reshape(call_6717.astype('float64'), [13, 15, 16]), ), 1)
call_6749 = relay.TupleGetItem(func_3808_call(relay.reshape(call_6717.astype('bool'), [13, 15, 16]), relay.reshape(call_6715.astype('float64'), [960,]), relay.reshape(call_6717.astype('float64'), [13, 15, 16]), ), 1)
output = relay.Tuple([call_6715,call_6717,call_6720,var_6721,call_6748,])
output2 = relay.Tuple([call_6716,call_6718,call_6722,var_6721,call_6749,])
func_6751 = relay.Function([var_6721,], output)
mod['func_6751'] = func_6751
mod = relay.transform.InferType()(mod)
mutated_mod['func_6751'] = func_6751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6752 = relay.var("var_6752", dtype = "float64", shape = (144,))#candidate|6752|(144,)|var|float64
func_6751_call = mutated_mod.get_global_var('func_6751')
call_6753 = func_6751_call(var_6752)
output = call_6753
func_6754 = relay.Function([var_6752], output)
mutated_mod['func_6754'] = func_6754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4991_call = mod.get_global_var('func_4991')
func_4993_call = mutated_mod.get_global_var('func_4993')
call_6844 = relay.TupleGetItem(func_4991_call(), 0)
call_6845 = relay.TupleGetItem(func_4993_call(), 0)
output = call_6844
output2 = call_6845
func_6860 = relay.Function([], output)
mod['func_6860'] = func_6860
mod = relay.transform.InferType()(mod)
output = func_6860()
func_6861 = relay.Function([], output)
mutated_mod['func_6861'] = func_6861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_6917 = relay.TupleGetItem(func_3643_call(), 0)
call_6918 = relay.TupleGetItem(func_3644_call(), 0)
func_2476_call = mod.get_global_var('func_2476')
func_2478_call = mutated_mod.get_global_var('func_2478')
call_6926 = relay.TupleGetItem(func_2476_call(), 0)
call_6927 = relay.TupleGetItem(func_2478_call(), 0)
output = relay.Tuple([call_6917,call_6926,])
output2 = relay.Tuple([call_6918,call_6927,])
func_6936 = relay.Function([], output)
mod['func_6936'] = func_6936
mod = relay.transform.InferType()(mod)
mutated_mod['func_6936'] = func_6936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6936_call = mutated_mod.get_global_var('func_6936')
call_6937 = func_6936_call()
output = call_6937
func_6938 = relay.Function([], output)
mutated_mod['func_6938'] = func_6938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_7132 = relay.TupleGetItem(func_1964_call(), 1)
call_7133 = relay.TupleGetItem(func_1966_call(), 1)
uop_7157 = relay.acosh(call_7132.astype('float64')) # shape=(7, 6, 1)
uop_7159 = relay.acosh(call_7133.astype('float64')) # shape=(7, 6, 1)
func_6697_call = mod.get_global_var('func_6697')
func_6698_call = mutated_mod.get_global_var('func_6698')
call_7171 = relay.TupleGetItem(func_6697_call(), 0)
call_7172 = relay.TupleGetItem(func_6698_call(), 0)
output = relay.Tuple([uop_7157,call_7171,])
output2 = relay.Tuple([uop_7159,call_7172,])
func_7179 = relay.Function([], output)
mod['func_7179'] = func_7179
mod = relay.transform.InferType()(mod)
mutated_mod['func_7179'] = func_7179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7179_call = mutated_mod.get_global_var('func_7179')
call_7180 = func_7179_call()
output = call_7180
func_7181 = relay.Function([], output)
mutated_mod['func_7181'] = func_7181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3569_call = mod.get_global_var('func_3569')
func_3571_call = mutated_mod.get_global_var('func_3571')
call_7220 = func_3569_call()
call_7221 = func_3569_call()
func_3916_call = mod.get_global_var('func_3916')
func_3920_call = mutated_mod.get_global_var('func_3920')
const_7223 = relay.const([-1.692091,-9.522173,-5.386361,-2.088146,-6.312894,-8.568835,-6.530831,-6.909358,5.377490,-6.313898,-9.811458,-3.633058,9.893112,-6.237120,9.137289,-4.557811,-9.303833,6.107072,2.594164,8.223174,8.268760,-2.574709,8.326734,-4.557406,7.276011,5.466543,-0.309120,2.714235,2.221708,-0.217734,9.911936,-6.613593,3.664804,8.851863,-4.931981,0.458771,-1.534786,7.987493,-4.228848,-9.159788,8.176887,-1.884960,-0.844482,3.496741,0.396450,-7.760938,-3.942731,6.827754,-3.227726,-5.547330,3.656776,-1.534568,0.517457,2.644552,7.236175,2.032196,-4.002358,-3.233355,3.924294,-9.876704,1.696179,-0.643668,-9.536523,-4.818360,-3.213926,5.577446,-8.639398,9.867581,1.996599,2.903276,-2.430491,1.801543,-3.923772,1.137632,3.305350,1.375024,-9.721140,5.877421,6.520387,9.995675,-5.259066,5.047475,-8.258400,8.235247,-3.969175,-6.651448,7.734239,1.571123,0.074474,-0.464065,-2.596462,-5.817834,5.416014,7.831230,9.561753,-6.289111,7.950552,-5.903818,-0.629741,-3.328087,-5.916599,7.771320,-7.473125,-8.927374,-6.210510,0.600495,-3.516348,1.626443,8.326118,-9.151851,-3.483396,-1.385661,-6.663010,9.600708,-4.960834,2.512865,5.530699,2.101623,8.146554,5.933307,-8.504252,5.338048,-3.822873,-2.707063,3.310493,-0.252496,6.587714,-1.337623,0.968391,-1.561399,0.751894,3.920088,-8.401395,-2.482965,-5.948729,6.526241,-9.637743,7.128874,-4.259762,-9.982889,-3.499098,6.123208,-7.288441,3.395834,6.365218,3.019856,-2.748757,2.249774,7.093738,-8.990228,-7.627439,-4.931874,-5.044634,5.019615,3.850461,2.974700,3.156411,3.832950,-5.496980,1.784220,-9.738095,-1.393410,7.685831,-1.068667,0.785217,-9.305134,-0.294490,9.432146,-1.027818,8.916184,-9.178863,4.137515,9.255916,1.332317,-7.372067,-2.343583,-7.672599,8.880349,-3.212195,-1.409648,-8.342819,2.322145,-9.013062,-5.718110,-6.870855,-9.797677,-5.969041,-3.260995,6.132686,6.092978,-4.110074,-6.156544,-2.125643,0.161143,2.782948,-0.462880,-1.580450,5.355450,-9.712540,-9.231442,6.239023,-6.850457,-6.017649,-4.868190,-3.468975,5.189532,5.612927,1.793549,1.268990,-4.248982,3.489915,8.323296,2.989819,-2.898528,-1.029179,-0.967574,4.819984,9.719452,7.597346,3.997730,4.745755,-7.931350,8.594205,-4.509378,-7.143282,7.305692,8.284554,-8.102289,1.996016,5.743723,1.415746,-8.685643,-6.966654,-8.756162,1.758916,6.074859,5.973222,9.208651,-7.016651,4.246703,-7.908112,-1.530772,5.402019,-7.140088,0.581818,-6.814107,2.280230,3.621506,-1.719893,0.810331,-1.043379,-3.769370,1.556651,-3.059129,0.141392,-0.937636,-5.860985,-8.547084,8.933068,7.186099,-4.375150,1.355702,-9.029043,1.995599,1.515576,-0.565140,6.125254,2.293963,-3.131387,-2.213783,2.618148,3.174080,1.837286,-4.015867,2.062689,6.622337,6.303578,3.371488,-9.987925,9.035613,-0.249983,7.610456,-3.404703,-2.057091,-4.424469,6.005543,7.163919,0.709452,-2.273697,-7.180491,8.956093,1.672250,-8.912236,-9.853964,4.971387,-4.082128,4.413811,4.573821,-2.915982,-1.987753,6.171484,7.661253,7.789021,2.079499,-0.085474,6.695229,-5.997782,-7.724861,2.771461,2.534825,-2.231067,-7.584985,9.890204,-2.528879,6.007131,-1.865915,-1.698521,-5.572203,-5.261306,2.749321,7.915157,6.437756,4.445588,-3.921359,-8.258557,6.609777,-0.006566,2.196655,2.703968,0.673481,-0.985848,4.559429,9.339874,-9.317365,-7.733986,-1.194629,-9.503146,6.782807,-5.984727,2.903389,5.084775,6.825974,-5.694290,7.109376,-0.664050,2.989342,-8.081016,9.510720,-8.497906,1.796019,0.545267,-2.024655,1.534858,6.971813,7.270613,6.647798,9.827883,-4.374291,2.244361,-9.326137,9.220121,-7.774940,-5.815803,0.794601,-5.090621,7.897177,0.396589,1.673648,6.536437,-6.046504,8.929337,6.929402,-5.408557,5.793548,5.841896,-6.094692,8.584313,-0.186910,-6.108471,-5.734447,7.815650,5.635324,4.723746,2.763292,5.732852,1.201163,6.600961,-8.413814,5.553165,8.874225,3.989582,5.618711,3.466984,-7.775032,4.666416,-6.616553,4.444257,3.976047,-8.419106,6.026969,-8.866140,0.177281,-2.194504,-4.393613,6.166509,-5.158899,5.961918,9.945521,-3.157356,-2.712082,-9.686151,-9.014423,-9.861605,-4.988770,-9.796535,9.359266,-9.283907,8.398856,-9.029492,-2.670150,6.774883,-0.610405,-4.410497,3.055470,2.556119,2.017847,-0.929869,0.720366,4.861530,-9.255097,-6.348457,1.034050,-4.883931,1.648449,-6.323393,-1.128825,-2.849320,-1.108972,-7.127115,5.312339,9.615761,9.247639,-5.464180,0.699480,-6.321910,-1.471898,3.281433,4.502875,-2.728407,-0.502639,4.206532,-3.113039,4.111047,-3.903467,1.663834,7.845971,-7.639749,-9.079751,-7.115278,7.460007,6.622021,3.165679,8.033063,-5.555035,5.664837,-1.020062,8.819370,-6.984439,4.205191,-5.199948,4.342195,7.858505,-4.258210,-4.355549,9.300930,8.281411,9.886507,3.049685,-3.787144,-6.747938,-7.489071,-5.264205,-6.965272,-5.523766,9.343597,-2.631989,0.169807,2.206794,5.262783,-7.735473,7.571108,-6.157717,-4.492157,1.465836,8.199283,-9.567595,-6.093719,-2.185175,7.626326,-0.496033,2.796592,4.122326,-1.261762,5.638904,7.836283,1.655023,8.039786,5.135990,1.042334,-5.996064,0.336887,2.740984,5.658418,-5.244835,-0.147538,-0.698646,5.567027,-1.865042,-1.171358,9.643484,2.926600,-0.565516,-0.503947,-3.184409,-2.398377,6.469340,8.732834,1.303874,-6.774490,-0.538392,-6.528246,-3.551899,-4.058021,9.490982,-5.770170,-4.340049,3.673879,5.816669,1.007428,-9.971074,-7.243526,0.121812,-1.229526,5.012623,-9.417812,9.951213,-3.070722,-4.266912,6.918770,0.102190,-4.130903,8.977719,-8.560028,-4.359284,7.858182,8.354647,-2.451364,8.972907,5.405019,2.829208,-2.278997,-7.814754,-6.556345,-6.955205,-8.913223,-4.078653,5.764890,4.635201,-8.823992,4.704004,-6.106763,6.844174,6.859709,5.733740,7.543803,-3.350584,6.022285,-8.526065,2.124979,0.264067,-4.028166,8.948053,-8.759946,1.562248,-1.767392,-3.226305,3.137645,3.147516,-7.770683,3.443897,9.321398,-4.654057,-4.282773,-1.480558,9.917669,-2.020441,1.293045,0.447096,-6.685829,-1.761054,-5.183702,1.895487,4.458790,-4.327058,4.641028,7.275743,-1.184741,3.172172,4.495329,-1.816437,-1.359470,-0.520833,-2.508749,7.053344,5.857912,9.938143,-7.116866,4.164927,1.252285,2.071622,-8.497533,6.474030,-9.926385,5.368907,9.928174,-5.894508,-3.159970,5.464473,8.534070,8.801766,7.598524,-3.690091,0.621579,3.367625,9.983802,1.974584,6.370076,-5.973469,-2.441748,6.585181,-2.194388,7.579663,2.571509,6.886126,0.984379,2.595232,-5.620454,-3.268398,8.422880,-8.484024,-7.597478,-0.691648,5.205806,-3.566682,8.902740,0.142940,0.561521,-7.432910,6.292603,5.452795,0.963067,4.365957,-7.259059,0.577322,3.631868,6.163912,-0.143943,-9.660378,-5.734528,5.169581,-4.563848,9.267339,6.131747,-0.815195,-2.285726,2.575010,-7.394910,5.070361,-8.770082,9.872519,-2.034567,8.296936,-5.776288,-6.238491,-8.089065,-9.193190,-8.451489,0.578896,-1.201468,1.191961,9.953333,-2.296235,6.383727,0.732916,-8.672756,-9.420047,0.750069,0.075433,0.214508,-9.920133,1.815357,-8.232672,9.800795,0.422600,-7.094422,-3.722398,6.807315,4.891794,-3.655564,-6.672086,1.351289,4.653366,4.568917,1.830004,3.241731,-8.314743,-1.532697,-8.326256,-5.292884,4.154826,-8.560352,4.609428,-9.596848,7.982828,6.303214,-8.814853,-0.059905,4.240091,-2.409508,-5.998655,-5.780727,2.991793,8.334180,-4.419460,6.452351,-2.739033,7.530279,-8.330044,1.240367,-1.818833,0.204363,5.317097,7.035912,8.939075,8.081148,1.715512,3.154019,2.448139,-8.606993,-4.535521,4.156005,-6.762033,-0.122080,2.055625,-8.614933,-2.871666,-6.922477,5.405346,-7.748657,7.711623,-0.642381,-1.860093,0.312771,-7.572071,9.296771,-8.510573,-1.689078,-7.493227,9.868069,-6.132535,7.730287,2.752339,-5.895770,8.433788,-3.348300,3.430045,8.847665,-4.097150,0.730139,6.250217,3.242826,3.467468,-6.701213,0.159987,7.614836,9.820520,-8.224634,-8.258169,3.661040,-9.640399,3.261709,-8.057751,3.001546,3.065533,4.504748,2.774475,-4.791066,-3.340004,-3.727344,-5.414617,7.046670,2.833500,9.881233,6.493759,0.344980,-9.534975,9.843637,-2.217064,2.667897,7.521258,-4.862426,7.205152,3.820525,1.009388,2.111189,-3.391236,6.001415,8.090393,7.489981,2.349327,-4.422493,8.554032,-4.950201,-1.127430,-5.260532,-8.780510,-5.674497,4.879625,-8.393062,-6.784766,7.099797,-9.100532,-4.850641,7.112035,-4.445746,-1.356076,-5.364647,-3.357261,9.783182,-5.721413,-3.857216,-7.573373,-9.751282,4.170019,-9.078375,1.032069,-8.266730,-5.742474,1.551472,-5.860113,-4.586456,-8.886351,6.900471,4.488042,4.370710,-6.411659,4.667852,-7.680578,-3.603439,-3.749880,9.938700,-8.507901,4.511762,-0.581288,-4.736508,1.162355,-6.348344,6.032936,-9.358217,-7.701623,-7.994683,-8.515840,-3.043974,-9.610252,-3.324577,8.443734,-3.264687,6.340303,5.738711,-0.833553], dtype = "float64")#candidate|7223|(880,)|const|float64
call_7222 = func_3916_call(relay.reshape(const_7223.astype('float64'), [5, 16, 11]), relay.reshape(const_7223.astype('float64'), [5, 16, 11]), )
call_7224 = func_3916_call(relay.reshape(const_7223.astype('float64'), [5, 16, 11]), relay.reshape(const_7223.astype('float64'), [5, 16, 11]), )
output = relay.Tuple([call_7220,call_7222,const_7223,])
output2 = relay.Tuple([call_7221,call_7224,const_7223,])
func_7242 = relay.Function([], output)
mod['func_7242'] = func_7242
mod = relay.transform.InferType()(mod)
output = func_7242()
func_7243 = relay.Function([], output)
mutated_mod['func_7243'] = func_7243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7281 = relay.var("var_7281", dtype = "uint16", shape = (16, 1, 6))#candidate|7281|(16, 1, 6)|var|uint16
var_7282 = relay.var("var_7282", dtype = "uint16", shape = (16, 13, 6))#candidate|7282|(16, 13, 6)|var|uint16
bop_7283 = relay.maximum(var_7281.astype('uint16'), var_7282.astype('uint16')) # shape=(16, 13, 6)
var_7290 = relay.var("var_7290", dtype = "uint16", shape = (16, 13, 6))#candidate|7290|(16, 13, 6)|var|uint16
bop_7291 = relay.equal(var_7282.astype('bool'), relay.reshape(var_7290.astype('bool'), relay.shape_of(var_7282))) # shape=(16, 13, 6)
uop_7294 = relay.log(bop_7283.astype('float32')) # shape=(16, 13, 6)
output = relay.Tuple([bop_7291,uop_7294,])
output2 = relay.Tuple([bop_7291,uop_7294,])
func_7296 = relay.Function([var_7281,var_7282,var_7290,], output)
mod['func_7296'] = func_7296
mod = relay.transform.InferType()(mod)
mutated_mod['func_7296'] = func_7296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7296_call = mutated_mod.get_global_var('func_7296')
var_7298 = relay.var("var_7298", dtype = "uint16", shape = (16, 1, 6))#candidate|7298|(16, 1, 6)|var|uint16
var_7299 = relay.var("var_7299", dtype = "uint16", shape = (16, 13, 6))#candidate|7299|(16, 13, 6)|var|uint16
var_7300 = relay.var("var_7300", dtype = "uint16", shape = (16, 13, 6))#candidate|7300|(16, 13, 6)|var|uint16
call_7297 = func_7296_call(var_7298,var_7299,var_7300,)
output = call_7297
func_7301 = relay.Function([var_7298,var_7299,var_7300,], output)
mutated_mod['func_7301'] = func_7301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4072_call = mod.get_global_var('func_4072')
func_4073_call = mutated_mod.get_global_var('func_4073')
call_7376 = relay.TupleGetItem(func_4072_call(), 0)
call_7377 = relay.TupleGetItem(func_4073_call(), 0)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_7380 = func_2894_call()
call_7381 = func_2894_call()
func_3885_call = mod.get_global_var('func_3885')
func_3887_call = mutated_mod.get_global_var('func_3887')
call_7387 = relay.TupleGetItem(func_3885_call(), 0)
call_7388 = relay.TupleGetItem(func_3887_call(), 0)
func_3971_call = mod.get_global_var('func_3971')
func_3972_call = mutated_mod.get_global_var('func_3972')
call_7391 = relay.TupleGetItem(func_3971_call(), 0)
call_7392 = relay.TupleGetItem(func_3972_call(), 0)
output = relay.Tuple([call_7376,call_7380,call_7387,call_7391,])
output2 = relay.Tuple([call_7377,call_7381,call_7388,call_7392,])
func_7395 = relay.Function([], output)
mod['func_7395'] = func_7395
mod = relay.transform.InferType()(mod)
mutated_mod['func_7395'] = func_7395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7395_call = mutated_mod.get_global_var('func_7395')
call_7396 = func_7395_call()
output = call_7396
func_7397 = relay.Function([], output)
mutated_mod['func_7397'] = func_7397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2959_call = mod.get_global_var('func_2959')
func_2961_call = mutated_mod.get_global_var('func_2961')
call_7445 = relay.TupleGetItem(func_2959_call(), 0)
call_7446 = relay.TupleGetItem(func_2961_call(), 0)
func_6751_call = mod.get_global_var('func_6751')
func_6754_call = mutated_mod.get_global_var('func_6754')
var_7450 = relay.var("var_7450", dtype = "float64", shape = (144,))#candidate|7450|(144,)|var|float64
call_7449 = relay.TupleGetItem(func_6751_call(relay.reshape(var_7450.astype('float64'), [144,])), 0)
call_7451 = relay.TupleGetItem(func_6754_call(relay.reshape(var_7450.astype('float64'), [144,])), 0)
func_3634_call = mod.get_global_var('func_3634')
func_3636_call = mutated_mod.get_global_var('func_3636')
call_7456 = relay.TupleGetItem(func_3634_call(relay.reshape(call_7449.astype('float64'), [960,])), 0)
call_7457 = relay.TupleGetItem(func_3636_call(relay.reshape(call_7449.astype('float64'), [960,])), 0)
uop_7470 = relay.acos(call_7449.astype('float64')) # shape=(10, 96)
uop_7472 = relay.acos(call_7451.astype('float64')) # shape=(10, 96)
output = relay.Tuple([call_7445,var_7450,call_7456,uop_7470,])
output2 = relay.Tuple([call_7446,var_7450,call_7457,uop_7472,])
func_7484 = relay.Function([var_7450,], output)
mod['func_7484'] = func_7484
mod = relay.transform.InferType()(mod)
mutated_mod['func_7484'] = func_7484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7485 = relay.var("var_7485", dtype = "float64", shape = (144,))#candidate|7485|(144,)|var|float64
func_7484_call = mutated_mod.get_global_var('func_7484')
call_7486 = func_7484_call(var_7485)
output = call_7486
func_7487 = relay.Function([var_7485], output)
mutated_mod['func_7487'] = func_7487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3269_call = mod.get_global_var('func_3269')
func_3270_call = mutated_mod.get_global_var('func_3270')
call_7516 = relay.TupleGetItem(func_3269_call(), 0)
call_7517 = relay.TupleGetItem(func_3270_call(), 0)
output = relay.Tuple([call_7516,])
output2 = relay.Tuple([call_7517,])
func_7522 = relay.Function([], output)
mod['func_7522'] = func_7522
mod = relay.transform.InferType()(mod)
mutated_mod['func_7522'] = func_7522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7522_call = mutated_mod.get_global_var('func_7522')
call_7523 = func_7522_call()
output = call_7523
func_7524 = relay.Function([], output)
mutated_mod['func_7524'] = func_7524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mod.get_global_var('func_6860')
func_6861_call = mutated_mod.get_global_var('func_6861')
call_7549 = func_6860_call()
call_7550 = func_6860_call()
output = relay.Tuple([call_7549,])
output2 = relay.Tuple([call_7550,])
func_7557 = relay.Function([], output)
mod['func_7557'] = func_7557
mod = relay.transform.InferType()(mod)
output = func_7557()
func_7558 = relay.Function([], output)
mutated_mod['func_7558'] = func_7558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6375_call = mod.get_global_var('func_6375')
func_6377_call = mutated_mod.get_global_var('func_6377')
call_7578 = relay.TupleGetItem(func_6375_call(), 1)
call_7579 = relay.TupleGetItem(func_6377_call(), 1)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_7580 = relay.TupleGetItem(func_1695_call(), 0)
call_7581 = relay.TupleGetItem(func_1697_call(), 0)
uop_7582 = relay.log2(call_7578.astype('float32')) # shape=(10, 16, 6)
uop_7584 = relay.log2(call_7579.astype('float32')) # shape=(10, 16, 6)
uop_7594 = relay.cos(uop_7582.astype('float64')) # shape=(10, 16, 6)
uop_7596 = relay.cos(uop_7584.astype('float64')) # shape=(10, 16, 6)
output = relay.Tuple([call_7580,uop_7594,])
output2 = relay.Tuple([call_7581,uop_7596,])
func_7599 = relay.Function([], output)
mod['func_7599'] = func_7599
mod = relay.transform.InferType()(mod)
mutated_mod['func_7599'] = func_7599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7599_call = mutated_mod.get_global_var('func_7599')
call_7600 = func_7599_call()
output = call_7600
func_7601 = relay.Function([], output)
mutated_mod['func_7601'] = func_7601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3987_call = mod.get_global_var('func_3987')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_7627 = relay.TupleGetItem(func_3987_call(), 0)
call_7628 = relay.TupleGetItem(func_3989_call(), 0)
output = relay.Tuple([call_7627,])
output2 = relay.Tuple([call_7628,])
func_7635 = relay.Function([], output)
mod['func_7635'] = func_7635
mod = relay.transform.InferType()(mod)
mutated_mod['func_7635'] = func_7635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7635_call = mutated_mod.get_global_var('func_7635')
call_7636 = func_7635_call()
output = call_7636
func_7637 = relay.Function([], output)
mutated_mod['func_7637'] = func_7637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4884_call = mod.get_global_var('func_4884')
func_4886_call = mutated_mod.get_global_var('func_4886')
call_7706 = relay.TupleGetItem(func_4884_call(), 0)
call_7707 = relay.TupleGetItem(func_4886_call(), 0)
func_1268_call = mod.get_global_var('func_1268')
func_1270_call = mutated_mod.get_global_var('func_1270')
var_7716 = relay.var("var_7716", dtype = "float64", shape = (144,))#candidate|7716|(144,)|var|float64
call_7715 = relay.TupleGetItem(func_1268_call(relay.reshape(var_7716.astype('float64'), [6, 2, 12])), 2)
call_7717 = relay.TupleGetItem(func_1270_call(relay.reshape(var_7716.astype('float64'), [6, 2, 12])), 2)
output = relay.Tuple([call_7706,call_7715,var_7716,])
output2 = relay.Tuple([call_7707,call_7717,var_7716,])
func_7723 = relay.Function([var_7716,], output)
mod['func_7723'] = func_7723
mod = relay.transform.InferType()(mod)
mutated_mod['func_7723'] = func_7723
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7724 = relay.var("var_7724", dtype = "float64", shape = (144,))#candidate|7724|(144,)|var|float64
func_7723_call = mutated_mod.get_global_var('func_7723')
call_7725 = func_7723_call(var_7724)
output = call_7725
func_7726 = relay.Function([var_7724], output)
mutated_mod['func_7726'] = func_7726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3269_call = mod.get_global_var('func_3269')
func_3270_call = mutated_mod.get_global_var('func_3270')
call_7728 = relay.TupleGetItem(func_3269_call(), 0)
call_7729 = relay.TupleGetItem(func_3270_call(), 0)
func_4278_call = mod.get_global_var('func_4278')
func_4281_call = mutated_mod.get_global_var('func_4281')
const_7739 = relay.const([-3,-3,-4,-3,6,-3,-5,2,10,-1,2,-3,5,-10,10,-9,-2,5,3,8,-4,-2,9,-4,-7,-3,8,7,7,-4,1,-1,-8,-1,-4,8,10,-6,-5,-8,-7,5,-1,1,-2,-5,10,7,2,-9,-7,-6,-9,5,-5,10,6,-9,8,4,-7,-2,-7,-5,7,9,2,-10,-10,-7,-8,10,2,4,1,9,-9,5,2,-8,5,-2,5,-8,-4,3,-1,9,-2,3,-3,1,5,-9,-7,5,-4,-7,-6,-5,9,6,1,-3,-10,-6,1,4,-3,-5,10,2,-7,-5,5,5,8,-4,-9,-1,5,2,5,4,-1,-8,-8,-4,-1,-8,-9,-2,6,-5,5,6,3,4,5,8,6,4,-8,9,-7,10,9,4,-8,-10,5,2,3,-10,5,-4,-3,5,9,5,-2,-4,4,8,-7,6,-4,1,-6,8,8,4,-2,-5,4,7,-2,9,-8,-2,5,6,8,-1,-10,-10,10,-2,-3,-3,6,5,10,-7,-8,3,1,-5,9,-5,-4,9,-9,8,9,-10,-1,6,8,-10,-4,-2,-4,-4,-4,4], dtype = "uint16")#candidate|7739|(216,)|const|uint16
call_7738 = relay.TupleGetItem(func_4278_call(relay.reshape(const_7739.astype('uint16'), [216,])), 2)
call_7740 = relay.TupleGetItem(func_4281_call(relay.reshape(const_7739.astype('uint16'), [216,])), 2)
uop_7741 = relay.exp(call_7728.astype('float32')) # shape=(13, 15, 16)
uop_7743 = relay.exp(call_7729.astype('float32')) # shape=(13, 15, 16)
output = relay.Tuple([call_7738,const_7739,uop_7741,])
output2 = relay.Tuple([call_7740,const_7739,uop_7743,])
func_7753 = relay.Function([], output)
mod['func_7753'] = func_7753
mod = relay.transform.InferType()(mod)
mutated_mod['func_7753'] = func_7753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7753_call = mutated_mod.get_global_var('func_7753')
call_7754 = func_7753_call()
output = call_7754
func_7755 = relay.Function([], output)
mutated_mod['func_7755'] = func_7755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4135_call = mod.get_global_var('func_4135')
func_4137_call = mutated_mod.get_global_var('func_4137')
call_7761 = relay.TupleGetItem(func_4135_call(), 0)
call_7762 = relay.TupleGetItem(func_4137_call(), 0)
func_5543_call = mod.get_global_var('func_5543')
func_5546_call = mutated_mod.get_global_var('func_5546')
var_7782 = relay.var("var_7782", dtype = "float64", shape = (252,))#candidate|7782|(252,)|var|float64
call_7781 = relay.TupleGetItem(func_5543_call(relay.reshape(var_7782.astype('float64'), [7, 4, 9])), 0)
call_7783 = relay.TupleGetItem(func_5546_call(relay.reshape(var_7782.astype('float64'), [7, 4, 9])), 0)
output = relay.Tuple([call_7761,call_7781,var_7782,])
output2 = relay.Tuple([call_7762,call_7783,var_7782,])
func_7784 = relay.Function([var_7782,], output)
mod['func_7784'] = func_7784
mod = relay.transform.InferType()(mod)
var_7785 = relay.var("var_7785", dtype = "float64", shape = (252,))#candidate|7785|(252,)|var|float64
output = func_7784(var_7785)
func_7786 = relay.Function([var_7785], output)
mutated_mod['func_7786'] = func_7786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4072_call = mod.get_global_var('func_4072')
func_4073_call = mutated_mod.get_global_var('func_4073')
call_7793 = relay.TupleGetItem(func_4072_call(), 0)
call_7794 = relay.TupleGetItem(func_4073_call(), 0)
func_235_call = mod.get_global_var('func_235')
func_238_call = mutated_mod.get_global_var('func_238')
const_7805 = relay.const([[2,2,7,10,-1,-10,-9,-4,8,-1,-6,-10,-7,-7,-6,-2,-5,10,-6,8,7,2,-8,3,2,6,4,-8,-4,6,8,-10,-4,-6,3,10,3,-5,8,6,4,8,9,-9,-3,-7,-2,-3,-9,9,-5,1,-10,-9,-4,8,9,8,-2,-5,3,-7,8,3,10,-9,-10,-3,5,-1,-6,-9,-3,-7,5,3,3,-2,1,-8,9,8,-8,-2,-10,3,9,5,10,-10,-3,2,-2,-8,-10,-6,4,8,2,4,-2,1,9,-7,7,4,10,-9,10,7,-4,9,-4,9,-1,-9,-9,6,6,9,-3,-5,-6,-7,-2,8,-5,5,6,-7,-8,-9,7,-9,3,8,8,8,10,2,-10,-9,7,-6,9,-1,-10,-7,10,-1,1,-8,3,-5,-3,-6,-7,-8,10,-1,-9,-7,5,-7,-8,-9,-10,-8,-2,7,-1,-8,7,-5,2,-5,10,-2,-3,-1,9,-10,6,-1,4,-4,10,-3,10,5,4,4,1,-9,7,7,-2,5,6,6,6,5,4,5,6,7,-10,-3,9,5,-6,1,9,3,4,7,1,-5,10,8,-10,5,8,-2,2,2,-10,-3,9,-8,7,-2,-7,-3,7,-10,-8,8,3,-4,7,-2,-9,10,2,2,1,-8,-10,-3,4,-5,-8,-10,-5,7,-10,-3,-5,10,8,7,-7,8,-5,6,8,-2,8,-9,-6,-7,5,-9,10,10,-3,-9,-1,10,2,5,-9,6,9,-10,-4,-5,-4,1,-4,-2,-5,7,-10,4,-3,9,6,-9,3,-3,-4,-5,-1,-2,7,-9,-9,-10,3,10,-3,-8,-6,-5,4,-5,-6,-9,-9,1,-9,8,-9,6,4,-8,4,-5,10,-9,-10,7,7,5,10,-1,8,-6,10,1,-7,1,2,10,-10,8,-5,7,2,-9,-6,1,10,3,9,-5,10,6,2,5,8,1,10,-7,-10,5,5,-1,3,-6,-7,-9,-5,-10,4,10,-3,-5,-10,7,9,5,-10,-8,10,9,4,-6,-4,9,-6,-10,-1,1,-7,3,-4,9,-5,-9,2,-6,-6,7,-1,-10,5,-5,4,2,-8,-7,-3,6,-3,5,-5,-2,-3,2,5,-2,-9,9,-7,-5,3,-7,6,6,-2,-5,-2,-7,5,-3,-1,-1,6,-6,-10,-7,-4,-1,10,2,-10,9,3,9,7,-8,-10]], dtype = "uint16")#candidate|7805|(1, 455)|const|uint16
call_7804 = relay.TupleGetItem(func_235_call(relay.reshape(const_7805.astype('uint16'), [5, 7, 13])), 5)
call_7806 = relay.TupleGetItem(func_238_call(relay.reshape(const_7805.astype('uint16'), [5, 7, 13])), 5)
output = relay.Tuple([call_7793,call_7804,const_7805,])
output2 = relay.Tuple([call_7794,call_7806,const_7805,])
func_7838 = relay.Function([], output)
mod['func_7838'] = func_7838
mod = relay.transform.InferType()(mod)
mutated_mod['func_7838'] = func_7838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7838_call = mutated_mod.get_global_var('func_7838')
call_7839 = func_7838_call()
output = call_7839
func_7840 = relay.Function([], output)
mutated_mod['func_7840'] = func_7840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2381_call = mod.get_global_var('func_2381')
func_2382_call = mutated_mod.get_global_var('func_2382')
call_7907 = relay.TupleGetItem(func_2381_call(), 3)
call_7908 = relay.TupleGetItem(func_2382_call(), 3)
var_7912 = relay.var("var_7912", dtype = "float64", shape = (10, 96))#candidate|7912|(10, 96)|var|float64
bop_7913 = relay.subtract(call_7907.astype('int32'), relay.reshape(var_7912.astype('int32'), relay.shape_of(call_7907))) # shape=(10, 96)
bop_7916 = relay.subtract(call_7908.astype('int32'), relay.reshape(var_7912.astype('int32'), relay.shape_of(call_7908))) # shape=(10, 96)
output = bop_7913
output2 = bop_7916
func_7920 = relay.Function([var_7912,], output)
mod['func_7920'] = func_7920
mod = relay.transform.InferType()(mod)
mutated_mod['func_7920'] = func_7920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7921 = relay.var("var_7921", dtype = "float64", shape = (10, 96))#candidate|7921|(10, 96)|var|float64
func_7920_call = mutated_mod.get_global_var('func_7920')
call_7922 = func_7920_call(var_7921)
output = call_7922
func_7923 = relay.Function([var_7921], output)
mutated_mod['func_7923'] = func_7923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_7937 = func_2894_call()
call_7938 = func_2894_call()
uop_7941 = relay.erf(call_7937.astype('float64')) # shape=(13, 15, 16)
uop_7943 = relay.erf(call_7938.astype('float64')) # shape=(13, 15, 16)
output = uop_7941
output2 = uop_7943
func_7946 = relay.Function([], output)
mod['func_7946'] = func_7946
mod = relay.transform.InferType()(mod)
mutated_mod['func_7946'] = func_7946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7946_call = mutated_mod.get_global_var('func_7946')
call_7947 = func_7946_call()
output = call_7947
func_7948 = relay.Function([], output)
mutated_mod['func_7948'] = func_7948
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7965 = relay.var("var_7965", dtype = "float64", shape = ())#candidate|7965|()|var|float64
var_7966 = relay.var("var_7966", dtype = "float64", shape = (3, 10, 3))#candidate|7966|(3, 10, 3)|var|float64
bop_7967 = relay.less_equal(var_7965.astype('bool'), var_7966.astype('bool')) # shape=(3, 10, 3)
func_6200_call = mod.get_global_var('func_6200')
func_6203_call = mutated_mod.get_global_var('func_6203')
var_7978 = relay.var("var_7978", dtype = "int64", shape = (110,))#candidate|7978|(110,)|var|int64
call_7977 = relay.TupleGetItem(func_6200_call(relay.reshape(var_7978.astype('int64'), [110,])), 4)
call_7979 = relay.TupleGetItem(func_6203_call(relay.reshape(var_7978.astype('int64'), [110,])), 4)
func_6200_call = mod.get_global_var('func_6200')
func_6203_call = mutated_mod.get_global_var('func_6203')
call_7982 = relay.TupleGetItem(func_6200_call(relay.reshape(var_7978.astype('int64'), [110,])), 3)
call_7983 = relay.TupleGetItem(func_6203_call(relay.reshape(var_7978.astype('int64'), [110,])), 3)
func_5182_call = mod.get_global_var('func_5182')
func_5183_call = mutated_mod.get_global_var('func_5183')
call_7987 = func_5182_call()
call_7988 = func_5182_call()
var_7989 = relay.var("var_7989", dtype = "float64", shape = (10, 96))#candidate|7989|(10, 96)|var|float64
bop_7990 = relay.logical_or(call_7987.astype('bool'), relay.reshape(var_7989.astype('bool'), relay.shape_of(call_7987))) # shape=(10, 96)
bop_7993 = relay.logical_or(call_7988.astype('bool'), relay.reshape(var_7989.astype('bool'), relay.shape_of(call_7988))) # shape=(10, 96)
func_6553_call = mod.get_global_var('func_6553')
func_6556_call = mutated_mod.get_global_var('func_6556')
const_7995 = relay.const([[1,-2,4,-5,-8,-5,-4],[-1,-7,-4,7,4,-1,-6],[6,-7,-7,9,-10,2,-9],[3,5,4,1,7,-3,3],[-8,4,-8,3,9,7,-6],[9,6,-9,-6,-5,10,-4],[4,6,6,-8,-1,2,-4],[-1,-7,-6,-2,6,-9,-6],[-4,1,-8,2,4,-10,4],[7,2,6,8,-4,6,-10],[-2,3,5,-6,10,-8,-9],[-1,2,-10,-6,4,8,-6],[-8,1,-1,8,8,-2,1],[3,8,-4,4,3,-2,-5],[4,7,8,-2,2,-8,1],[9,7,5,-7,-6,-4,-2],[7,-9,9,-3,-3,7,-4],[-8,-4,-8,-10,-8,1,-10],[6,-1,9,6,-5,-6,-3],[-6,9,-3,-10,8,3,8],[2,10,2,-3,-1,-1,-7],[7,-4,-8,-6,8,1,9],[-1,-1,-7,-3,2,1,4],[-2,-3,-2,1,-9,-8,-6],[-2,6,-1,8,-5,10,8],[3,-5,4,5,2,5,-4],[10,-3,-6,-8,3,-7,-9],[-10,-8,9,-9,9,9,9],[-3,-7,6,5,-1,6,-1],[4,10,4,-8,-1,-6,-10],[-2,-8,-3,-9,-7,8,-9],[3,1,-9,3,1,8,6],[-2,8,-7,-10,5,9,6],[-1,-6,-5,2,-8,-7,6],[-10,-9,1,10,-8,-10,2],[5,9,-2,-10,1,-3,9],[-9,7,-9,6,6,10,6],[8,-9,5,9,-2,4,-1],[6,9,6,7,-2,7,-8],[-3,5,10,4,-2,3,-2],[-9,6,-4,1,10,-5,-10],[10,7,2,-7,-8,10,-4],[3,-1,-8,10,-1,1,-10],[4,9,9,9,10,4,5],[-7,6,-4,4,4,-5,6],[8,4,-5,-6,-1,-6,9],[10,-3,-4,6,-7,-1,6],[-8,1,6,8,8,-8,6],[-1,-3,2,5,8,-5,4],[6,9,-2,-9,-8,2,10],[-7,3,5,9,5,-3,-7],[-7,-4,1,-8,6,1,-4],[-9,2,-3,4,-2,-3,-6],[1,-7,-6,-1,4,8,-9],[-3,-2,9,10,1,-10,-8],[-2,-1,10,1,-9,-3,-4],[-3,9,-5,-2,-9,4,8],[-2,7,3,-7,8,-10,-10],[9,3,-6,10,7,4,4],[-3,4,-1,1,2,10,6],[6,1,2,7,-8,7,-1],[-9,-3,-1,10,-9,-7,-9],[-1,-7,2,2,3,2,-10],[-7,4,-8,-8,3,1,9],[2,-7,2,10,3,8,3]], dtype = "uint16")#candidate|7995|(65, 7)|const|uint16
call_7994 = relay.TupleGetItem(func_6553_call(relay.reshape(const_7995.astype('uint16'), [65, 7]), relay.reshape(const_7995.astype('int32'), [65, 7]), ), 3)
call_7996 = relay.TupleGetItem(func_6556_call(relay.reshape(const_7995.astype('uint16'), [65, 7]), relay.reshape(const_7995.astype('int32'), [65, 7]), ), 3)
bop_8015 = relay.not_equal(bop_7990.astype('bool'), call_7982.astype('bool')) # shape=(10, 96)
bop_8018 = relay.not_equal(bop_7993.astype('bool'), call_7983.astype('bool')) # shape=(10, 96)
bop_8035 = relay.bitwise_or(var_7965.astype('uint8'), bop_8015.astype('uint8')) # shape=(10, 96)
bop_8038 = relay.bitwise_or(var_7965.astype('uint8'), bop_8018.astype('uint8')) # shape=(10, 96)
var_8041 = relay.var("var_8041", dtype = "bool", shape = (3, 10, 3))#candidate|8041|(3, 10, 3)|var|bool
bop_8042 = relay.not_equal(bop_7967.astype('bool'), relay.reshape(var_8041.astype('bool'), relay.shape_of(bop_7967))) # shape=(3, 10, 3)
func_3498_call = mod.get_global_var('func_3498')
func_3499_call = mutated_mod.get_global_var('func_3499')
call_8045 = relay.TupleGetItem(func_3498_call(), 1)
call_8046 = relay.TupleGetItem(func_3499_call(), 1)
output = relay.Tuple([call_7977,var_7978,call_7994,const_7995,bop_8035,bop_8042,call_8045,])
output2 = relay.Tuple([call_7979,var_7978,call_7996,const_7995,bop_8038,bop_8042,call_8046,])
func_8054 = relay.Function([var_7965,var_7966,var_7978,var_7989,var_8041,], output)
mod['func_8054'] = func_8054
mod = relay.transform.InferType()(mod)
mutated_mod['func_8054'] = func_8054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8054_call = mutated_mod.get_global_var('func_8054')
var_8056 = relay.var("var_8056", dtype = "float64", shape = ())#candidate|8056|()|var|float64
var_8057 = relay.var("var_8057", dtype = "float64", shape = (3, 10, 3))#candidate|8057|(3, 10, 3)|var|float64
var_8058 = relay.var("var_8058", dtype = "int64", shape = (110,))#candidate|8058|(110,)|var|int64
var_8059 = relay.var("var_8059", dtype = "float64", shape = (10, 96))#candidate|8059|(10, 96)|var|float64
var_8060 = relay.var("var_8060", dtype = "bool", shape = (3, 10, 3))#candidate|8060|(3, 10, 3)|var|bool
call_8055 = func_8054_call(var_8056,var_8057,var_8058,var_8059,var_8060,)
output = call_8055
func_8061 = relay.Function([var_8056,var_8057,var_8058,var_8059,var_8060,], output)
mutated_mod['func_8061'] = func_8061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7635_call = mod.get_global_var('func_7635')
func_7637_call = mutated_mod.get_global_var('func_7637')
call_8066 = relay.TupleGetItem(func_7635_call(), 0)
call_8067 = relay.TupleGetItem(func_7637_call(), 0)
var_8074 = relay.var("var_8074", dtype = "float64", shape = (7, 4, 9))#candidate|8074|(7, 4, 9)|var|float64
bop_8075 = relay.divide(call_8066.astype('float32'), relay.reshape(var_8074.astype('float32'), relay.shape_of(call_8066))) # shape=(7, 4, 9)
bop_8078 = relay.divide(call_8067.astype('float32'), relay.reshape(var_8074.astype('float32'), relay.shape_of(call_8067))) # shape=(7, 4, 9)
func_3498_call = mod.get_global_var('func_3498')
func_3499_call = mutated_mod.get_global_var('func_3499')
call_8081 = relay.TupleGetItem(func_3498_call(), 1)
call_8082 = relay.TupleGetItem(func_3499_call(), 1)
output = relay.Tuple([bop_8075,call_8081,])
output2 = relay.Tuple([bop_8078,call_8082,])
func_8087 = relay.Function([var_8074,], output)
mod['func_8087'] = func_8087
mod = relay.transform.InferType()(mod)
var_8088 = relay.var("var_8088", dtype = "float64", shape = (7, 4, 9))#candidate|8088|(7, 4, 9)|var|float64
output = func_8087(var_8088)
func_8089 = relay.Function([var_8088], output)
mutated_mod['func_8089'] = func_8089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7635_call = mod.get_global_var('func_7635')
func_7637_call = mutated_mod.get_global_var('func_7637')
call_8132 = relay.TupleGetItem(func_7635_call(), 0)
call_8133 = relay.TupleGetItem(func_7637_call(), 0)
func_4135_call = mod.get_global_var('func_4135')
func_4137_call = mutated_mod.get_global_var('func_4137')
call_8157 = relay.TupleGetItem(func_4135_call(), 0)
call_8158 = relay.TupleGetItem(func_4137_call(), 0)
func_3738_call = mod.get_global_var('func_3738')
func_3740_call = mutated_mod.get_global_var('func_3740')
var_8171 = relay.var("var_8171", dtype = "float64", shape = (960,))#candidate|8171|(960,)|var|float64
call_8170 = relay.TupleGetItem(func_3738_call(relay.reshape(var_8171.astype('float64'), [960,])), 0)
call_8172 = relay.TupleGetItem(func_3740_call(relay.reshape(var_8171.astype('float64'), [960,])), 0)
output = relay.Tuple([call_8132,call_8157,call_8170,var_8171,])
output2 = relay.Tuple([call_8133,call_8158,call_8172,var_8171,])
func_8188 = relay.Function([var_8171,], output)
mod['func_8188'] = func_8188
mod = relay.transform.InferType()(mod)
mutated_mod['func_8188'] = func_8188
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8189 = relay.var("var_8189", dtype = "float64", shape = (960,))#candidate|8189|(960,)|var|float64
func_8188_call = mutated_mod.get_global_var('func_8188')
call_8190 = func_8188_call(var_8189)
output = call_8190
func_8191 = relay.Function([var_8189], output)
mutated_mod['func_8191'] = func_8191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3885_call = mod.get_global_var('func_3885')
func_3887_call = mutated_mod.get_global_var('func_3887')
call_8209 = relay.TupleGetItem(func_3885_call(), 0)
call_8210 = relay.TupleGetItem(func_3887_call(), 0)
output = relay.Tuple([call_8209,])
output2 = relay.Tuple([call_8210,])
func_8215 = relay.Function([], output)
mod['func_8215'] = func_8215
mod = relay.transform.InferType()(mod)
mutated_mod['func_8215'] = func_8215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8215_call = mutated_mod.get_global_var('func_8215')
call_8216 = func_8215_call()
output = call_8216
func_8217 = relay.Function([], output)
mutated_mod['func_8217'] = func_8217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5101_call = mod.get_global_var('func_5101')
func_5103_call = mutated_mod.get_global_var('func_5103')
call_8283 = relay.TupleGetItem(func_5101_call(), 0)
call_8284 = relay.TupleGetItem(func_5103_call(), 0)
uop_8296 = relay.asinh(call_8283.astype('float64')) # shape=(13, 15, 16)
uop_8298 = relay.asinh(call_8284.astype('float64')) # shape=(13, 15, 16)
func_3634_call = mod.get_global_var('func_3634')
func_3636_call = mutated_mod.get_global_var('func_3636')
const_8301 = relay.const([[1.222602,-0.378452,-5.629640,-4.803710,-0.515213,0.889717,9.903132,-1.884524],[-1.641765,-3.487519,3.451596,-1.953659,-5.546722,-2.921833,2.799119,-2.738878],[0.089208,1.342554,8.442575,3.316606,-6.178038,-8.855492,6.751193,3.264210],[-7.966449,4.445542,0.649062,-4.734945,8.111029,-6.646640,5.058703,7.548048],[-8.624255,-0.653018,-9.589093,5.689821,-6.833517,-1.110962,5.242835,-4.725580],[-4.595173,7.926905,9.226253,5.596931,4.869625,2.923986,-9.059767,4.936559],[3.583797,-9.898398,8.413900,0.797073,-9.230440,5.264940,6.684171,5.076880],[9.647980,-2.929819,-0.144180,4.642875,7.581980,9.027321,-1.285205,-5.472966],[-4.074606,8.042837,5.289783,-2.991623,9.850478,4.563862,2.200806,-1.058723],[4.985402,4.995577,-9.769838,1.597522,9.628610,8.495755,-7.831220,2.893100],[8.650455,-7.315811,4.717747,-4.128215,9.281627,-0.130843,-1.972047,1.056104],[6.801985,-7.615119,-7.729195,1.028097,-2.270227,4.440648,5.390275,6.605281],[0.389492,1.290426,-7.736199,6.283222,8.229201,-6.668576,-7.340596,5.259435],[-5.892774,6.653619,-6.322692,-9.112441,-9.727181,4.964676,6.335376,-6.064710],[-2.865116,7.482082,5.056366,-6.913293,-8.730347,-0.430458,5.391084,-3.479756],[3.584125,-7.281998,0.997620,-2.226171,-1.438459,6.841071,2.423409,-7.729441],[0.190831,-6.261796,2.267090,0.288324,-2.310021,-9.900560,1.914205,3.774748],[9.049116,-2.959890,4.121371,-8.314625,-5.546736,2.653876,8.621250,-0.612510],[3.224044,7.267961,9.809526,0.793750,-5.954752,5.275116,-0.959032,1.862202],[-9.702145,-2.036321,-3.426694,3.363096,-8.891476,-7.635304,0.243951,-0.205856],[-4.685137,1.223132,-7.940865,5.627108,-4.344748,4.100714,7.618496,-7.137069],[-3.018964,4.810340,2.616053,-6.394692,5.659315,3.162628,6.507763,-7.055869],[8.029885,6.359763,-3.428433,9.701815,-5.407298,8.477998,8.495825,5.726244],[1.814866,-9.741924,-6.400573,-8.021699,-9.220217,-4.122317,-4.634816,0.607686],[-7.307684,0.336083,9.523936,4.530307,9.201776,9.065381,1.943867,9.828149],[-2.091807,8.389488,-4.192565,-1.346443,-7.079929,-8.890517,6.619833,-8.934143],[-5.002439,-9.310020,-3.397568,7.322624,9.725045,-3.263387,-6.117788,3.476923],[-4.760427,5.415746,-7.942794,9.992636,-9.773762,9.087047,7.411530,9.783376],[-9.296167,0.935423,6.232259,-5.448276,1.694911,4.055233,-2.184267,-5.959619],[-7.640840,9.442516,-8.933988,3.077254,-6.309658,-1.991949,-9.046424,-4.497064],[-7.166057,-0.809829,-5.231930,-0.173145,6.241119,9.441381,-0.853321,-8.929112],[2.468830,9.402206,-7.466084,-9.104537,-8.406373,-5.383484,-8.925593,1.538451],[-2.453488,7.911430,-0.814880,1.839145,8.509229,-6.630899,-4.660475,-3.068218],[-3.952732,7.305630,-1.028373,-6.554854,2.605234,-6.923154,4.179117,-9.543024],[0.562454,-9.835372,2.879003,7.750623,6.332318,-4.008528,0.198169,0.794410],[-7.607044,-4.968220,5.469926,4.169100,-5.515874,-9.632629,8.489392,7.487631],[-6.033788,5.906484,5.368564,7.190182,-8.760169,7.933961,-3.098498,2.882092],[5.400010,-2.517622,-1.088878,1.388253,8.091964,-8.134736,-0.939386,8.481481],[-3.182824,-5.096955,6.231211,-4.214224,0.073399,7.602733,-1.063024,5.376276],[8.984582,-9.128972,1.667888,-7.125561,-2.686017,-0.062353,-3.303853,9.030359],[-5.892414,2.873685,4.466346,8.126533,9.309934,5.887029,9.619220,5.338445],[-2.190500,3.586380,-6.483638,-5.260381,-2.048272,6.475251,-5.509637,6.900409],[0.100112,-7.365464,-9.660697,7.104200,2.322605,-8.094581,3.551566,3.318224],[2.048256,-8.302913,-5.434093,-9.296112,8.779899,0.807464,8.201074,-5.079579],[3.356268,5.414698,-7.129438,2.528768,5.376829,-8.074568,-8.179055,-3.187656],[-4.141550,2.424723,5.296133,-1.710781,2.144134,-8.969251,-4.720678,8.318830],[-2.479577,-3.651861,-8.778145,-5.971877,4.161534,-3.387698,-8.965974,3.910428],[8.639878,9.084232,3.308052,1.552405,4.582547,6.619523,-2.710153,-9.548054],[6.983816,0.868155,-3.323985,-8.958684,6.438644,3.435892,1.179055,-2.571406],[5.661200,-8.897254,7.421958,-1.642965,9.650331,2.657214,-4.924791,-1.768458],[-1.099246,6.203416,7.809840,-9.770430,9.698440,-9.177468,-6.801470,4.220440],[-7.732830,-0.136109,-5.288756,3.323272,-3.670300,3.652752,-2.350351,1.321273],[-2.227057,9.864721,-7.995719,-2.385946,-9.099993,-3.122303,2.362332,-0.477086],[0.787484,-1.548001,0.954384,-0.120492,-9.330488,4.257148,6.152338,0.886257],[2.725549,-2.838637,-9.539513,1.658634,1.157758,5.066119,-4.689707,4.355612],[5.218925,0.009769,4.441432,-2.882985,9.325944,-4.395315,-9.917437,-8.065326],[-2.637451,3.450438,2.468548,4.472453,8.133529,-0.254182,1.146499,7.632479],[1.234949,7.218861,-9.101329,-2.991207,8.715398,0.728995,-5.142524,-5.995450],[-3.756307,8.692579,-5.918141,-2.670052,7.534155,2.059408,-5.943503,1.269916],[9.679811,-8.954403,4.161695,-2.570305,9.144645,-9.206465,5.745448,1.183766],[1.718682,-0.013625,8.516255,9.933498,3.694398,1.660531,2.796701,1.462564],[-8.100164,4.720489,-5.274916,-0.496180,2.794054,5.603102,6.595275,-7.081291],[3.037545,7.706487,5.335652,0.754428,1.330059,9.661865,-7.938947,-0.884714],[-6.811250,-3.448337,9.849988,8.030570,3.726593,6.678419,0.075151,2.342893],[-2.575694,0.500539,9.207882,-4.511520,-8.238633,-5.650297,-5.632737,1.406007],[-2.358813,1.736166,-8.552835,-8.437729,4.448588,3.546531,2.506143,3.709712],[8.594439,6.506533,-2.634085,0.188768,3.339861,8.581472,-1.577178,3.633409],[-7.449842,-8.111345,6.521944,-9.170285,8.339948,8.411101,0.122530,-5.641593],[7.230729,2.458927,-1.044893,-3.097392,-1.405570,3.056802,-0.126999,2.423968],[-3.399327,-7.972350,-7.314211,-5.314260,-1.312791,-8.018937,9.136180,-1.100336],[5.238798,-2.935527,-5.049373,0.519800,-1.894903,-6.827055,9.102261,9.793261],[9.652281,3.398164,-8.579447,8.504681,8.340829,-2.280823,7.863699,-8.017862],[3.240472,-8.918368,2.853524,-7.495517,-7.513566,9.344315,4.502158,4.516617],[-7.868672,-1.730379,7.845860,4.977444,-2.474270,8.372723,-8.825768,-2.960637],[-0.902596,0.813809,-4.133271,7.588476,-9.728119,7.796577,5.133534,2.901843],[2.701117,-5.634626,2.561553,-7.132425,-3.817132,1.275000,1.031917,-8.662300],[-4.931728,5.210410,8.404365,-1.291400,6.960178,4.628509,-4.129117,-6.354315],[7.197044,-4.739706,-2.110796,-0.185524,-6.041494,2.396941,6.295004,6.353660],[-3.580902,-3.945511,2.480974,0.772520,-6.707880,3.292590,7.334722,3.246764],[8.305375,-0.517876,-5.762035,-9.836552,-5.719157,-3.541806,4.140339,-9.866169],[-4.029848,3.006921,5.894778,1.027143,-9.749582,-4.079583,-0.337653,-2.878566],[-6.910588,-8.681502,9.642465,6.470435,-9.448648,1.117863,-5.342267,8.011719],[-1.761203,-6.941073,-6.725673,-9.693025,6.069667,-0.703527,-7.096565,2.797093],[5.701569,0.801552,-0.091830,3.864707,-6.353887,-9.015992,-7.154498,8.102408],[-8.023175,-0.837894,5.976284,1.267674,0.200801,2.205834,-4.889560,-8.906228],[-0.036145,-9.965713,1.505219,3.599651,-5.363409,-2.330374,-5.047598,-9.662088],[0.074256,4.718722,3.823729,7.258915,-4.012261,-7.817275,3.673306,2.447807],[-8.370379,-0.110486,3.868168,3.291157,7.524122,-8.482415,8.035470,1.081587],[2.859508,-3.644078,0.738607,5.023799,-4.516356,0.440516,6.160085,3.302426],[-5.942208,8.195112,7.834268,-6.355076,-7.182462,-5.997616,4.990632,-2.507168],[-2.325794,0.794691,9.009198,-0.003564,-8.034482,6.387055,-9.383258,1.228432],[0.841223,-8.960639,1.597777,6.952616,1.850967,3.028028,2.022319,9.266195],[-6.501096,-0.414426,4.514088,3.239786,-2.124781,5.091751,3.954945,1.182582],[1.515831,-3.176545,-3.732421,-6.489541,1.218805,-8.952995,-5.900504,2.571862],[-1.749710,-8.015810,-5.611857,6.378715,-2.135664,9.495558,0.780507,-9.122493],[-6.264064,9.238635,0.009373,-2.827165,-2.976937,8.688992,-6.941556,6.772659],[-5.157165,-6.192514,-8.283086,5.118252,2.430828,-1.954958,-6.113009,1.446376],[3.600688,6.880579,6.263738,-4.585325,8.067394,-9.501501,-6.603294,-6.290597],[4.837551,2.950807,8.426769,-4.298921,6.912837,5.399521,-4.998731,-5.372193],[-8.135398,-0.288912,5.272993,8.991308,-2.786630,-9.825774,0.304711,-2.973699],[4.452167,-7.992426,-3.143351,1.105523,-4.535990,5.356918,-9.995290,-4.773491],[-0.154219,-2.345396,3.539703,-6.953392,1.092453,-1.679027,1.536007,0.329080],[-7.821336,6.633614,-0.293840,-7.747788,-9.799404,5.073061,8.772191,2.671780],[-2.712515,7.728052,5.347619,-4.949781,-7.632090,1.918983,0.148487,4.219742],[6.618751,-2.568099,7.347563,-5.051244,5.724451,-0.838126,1.447991,-2.695769],[0.507575,-3.445493,5.582934,1.198246,8.702369,1.314488,6.404309,9.393867],[-7.019623,9.181781,-6.466480,4.605497,3.853073,8.513933,7.634089,3.483780],[4.012701,1.054789,-4.728258,1.612548,2.246855,-4.662246,9.684857,1.629235],[3.522197,1.788837,-1.542720,4.756084,5.732077,1.206282,-1.265832,8.237611],[-6.857118,-9.187467,-1.385852,-4.969666,0.083215,-3.554109,-5.699173,-4.110340],[-4.679864,-4.067655,-2.966382,2.965329,-1.706332,-2.899648,3.902894,-2.381801],[-3.297389,-0.672707,-4.862356,-8.266228,5.318852,-8.016731,1.880190,5.331099],[1.819945,-1.566006,-3.163859,0.967488,-1.764599,7.564080,5.331827,7.344146],[9.513419,-1.415520,8.449413,2.964040,-7.389616,-0.441978,-0.096408,5.839576],[4.740384,9.197413,6.830715,-7.159797,-0.745808,7.558787,-6.627524,1.793381],[-9.753234,8.534926,-2.375476,-9.592445,2.406769,-6.175556,8.840340,3.731189],[-1.323612,-4.526575,4.040927,2.762947,-6.712461,2.635230,-9.654164,-1.372234],[7.680869,-1.824079,-5.136689,-9.240316,0.350538,3.024949,-9.716106,-4.135902],[1.902034,3.480522,1.056972,-2.076967,9.821949,-1.960281,-2.896591,6.450013],[2.137278,-5.886034,-9.055901,0.077871,5.351592,-9.826643,6.588735,-0.016487]], dtype = "float64")#candidate|8301|(120, 8)|const|float64
call_8300 = relay.TupleGetItem(func_3634_call(relay.reshape(const_8301.astype('float64'), [960,])), 4)
call_8302 = relay.TupleGetItem(func_3636_call(relay.reshape(const_8301.astype('float64'), [960,])), 4)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
const_8331 = relay.const([8.615160,0.367207,-1.576343,-4.624137,-8.387357,3.195656,7.985204,2.101992,-7.030032,-5.406198,5.757484,7.434244,6.364577,-6.904803,-0.066272,8.312010,9.112771,1.302837,9.129963,-2.211579,5.294708,8.396170,-1.504491,-4.845332,-9.498065,-0.457205,-8.931004,9.010967,8.486108,-6.785254,-2.495976,4.169427,-2.988778,6.264682,-4.210131,-7.703474,-4.047768,-0.309674,-3.802576,3.532203,-3.161164,5.193406,0.442127,-1.990470,-4.424917,-8.310668,-6.778279,-8.393207,8.679759,-2.680242,1.124297,9.147459,-2.503089,-7.408823,6.930320,0.561008,4.332341,-8.210829,-3.677289,8.439913,-4.909037,7.841358,-8.309007,8.978976,-7.068427,4.745979,-1.818218,5.319149,5.157377,-7.795884,8.726156,-2.608726,-8.068900,4.203531,0.643869,3.637315,-6.356118,-4.829665,-0.924238,-6.835362,-9.248616,-1.806591,9.558113,3.619230,4.745233,6.572829,-5.748231,3.076335,-8.926663,6.954625,3.997231,5.830355,2.125782,-2.405824,-1.220410,-1.990085,0.341249,1.348792,-8.304562,3.715030,-4.564280,-7.294785,-6.671831,0.292409,-1.761361,-0.760444,1.719386,-6.875527,3.240156,-9.438235,6.613823,-2.240892,1.984222,0.223139,8.369908,5.851302,7.178668,-6.425253,1.946538,7.141278,-4.393748,-5.454309,9.901908,-9.803816,2.631207,-9.200994,-9.059890,5.752857,9.505695,8.332981,9.819937,-8.832686,8.852092,-8.767555,1.027884,-8.424178,2.788749,5.494011,9.620151,-4.153725,6.845574,-0.479616,0.219026,3.631896], dtype = "float64")#candidate|8331|(144,)|const|float64
call_8330 = relay.TupleGetItem(func_2609_call(relay.reshape(const_8331.astype('float64'), [144,])), 1)
call_8332 = relay.TupleGetItem(func_2611_call(relay.reshape(const_8331.astype('float64'), [144,])), 1)
output = relay.Tuple([uop_8296,call_8300,const_8301,call_8330,const_8331,])
output2 = relay.Tuple([uop_8298,call_8302,const_8301,call_8332,const_8331,])
func_8335 = relay.Function([], output)
mod['func_8335'] = func_8335
mod = relay.transform.InferType()(mod)
mutated_mod['func_8335'] = func_8335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8335_call = mutated_mod.get_global_var('func_8335')
call_8336 = func_8335_call()
output = call_8336
func_8337 = relay.Function([], output)
mutated_mod['func_8337'] = func_8337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6007_call = mod.get_global_var('func_6007')
func_6008_call = mutated_mod.get_global_var('func_6008')
call_8364 = func_6007_call()
call_8365 = func_6007_call()
output = call_8364
output2 = call_8365
func_8366 = relay.Function([], output)
mod['func_8366'] = func_8366
mod = relay.transform.InferType()(mod)
output = func_8366()
func_8367 = relay.Function([], output)
mutated_mod['func_8367'] = func_8367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7753_call = mod.get_global_var('func_7753')
func_7755_call = mutated_mod.get_global_var('func_7755')
call_8424 = relay.TupleGetItem(func_7753_call(), 2)
call_8425 = relay.TupleGetItem(func_7755_call(), 2)
func_3853_call = mod.get_global_var('func_3853')
func_3854_call = mutated_mod.get_global_var('func_3854')
call_8451 = func_3853_call()
call_8452 = func_3853_call()
output = relay.Tuple([call_8424,call_8451,])
output2 = relay.Tuple([call_8425,call_8452,])
func_8457 = relay.Function([], output)
mod['func_8457'] = func_8457
mod = relay.transform.InferType()(mod)
output = func_8457()
func_8458 = relay.Function([], output)
mutated_mod['func_8458'] = func_8458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3853_call = mod.get_global_var('func_3853')
func_3854_call = mutated_mod.get_global_var('func_3854')
call_8475 = func_3853_call()
call_8476 = func_3853_call()
func_6375_call = mod.get_global_var('func_6375')
func_6377_call = mutated_mod.get_global_var('func_6377')
call_8481 = relay.TupleGetItem(func_6375_call(), 1)
call_8482 = relay.TupleGetItem(func_6377_call(), 1)
output = relay.Tuple([call_8475,call_8481,])
output2 = relay.Tuple([call_8476,call_8482,])
func_8488 = relay.Function([], output)
mod['func_8488'] = func_8488
mod = relay.transform.InferType()(mod)
output = func_8488()
func_8489 = relay.Function([], output)
mutated_mod['func_8489'] = func_8489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7635_call = mod.get_global_var('func_7635')
func_7637_call = mutated_mod.get_global_var('func_7637')
call_8549 = relay.TupleGetItem(func_7635_call(), 0)
call_8550 = relay.TupleGetItem(func_7637_call(), 0)
func_1471_call = mod.get_global_var('func_1471')
func_1473_call = mutated_mod.get_global_var('func_1473')
call_8567 = relay.TupleGetItem(func_1471_call(), 1)
call_8568 = relay.TupleGetItem(func_1473_call(), 1)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_8573 = relay.TupleGetItem(func_3172_call(), 0)
call_8574 = relay.TupleGetItem(func_3174_call(), 0)
func_7242_call = mod.get_global_var('func_7242')
func_7243_call = mutated_mod.get_global_var('func_7243')
call_8576 = relay.TupleGetItem(func_7242_call(), 0)
call_8577 = relay.TupleGetItem(func_7243_call(), 0)
func_6936_call = mod.get_global_var('func_6936')
func_6938_call = mutated_mod.get_global_var('func_6938')
call_8579 = relay.TupleGetItem(func_6936_call(), 1)
call_8580 = relay.TupleGetItem(func_6938_call(), 1)
output = relay.Tuple([call_8549,call_8567,call_8573,call_8576,call_8579,])
output2 = relay.Tuple([call_8550,call_8568,call_8574,call_8577,call_8580,])
func_8581 = relay.Function([], output)
mod['func_8581'] = func_8581
mod = relay.transform.InferType()(mod)
output = func_8581()
func_8582 = relay.Function([], output)
mutated_mod['func_8582'] = func_8582
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8634 = relay.const(False, dtype = "bool")#candidate|8634|()|const|bool
var_8635 = relay.var("var_8635", dtype = "bool", shape = (12, 9, 1))#candidate|8635|(12, 9, 1)|var|bool
bop_8636 = relay.logical_and(const_8634.astype('bool'), var_8635.astype('bool')) # shape=(12, 9, 1)
func_7296_call = mod.get_global_var('func_7296')
func_7301_call = mutated_mod.get_global_var('func_7301')
var_8642 = relay.var("var_8642", dtype = "uint16", shape = (96,))#candidate|8642|(96,)|var|uint16
var_8643 = relay.var("var_8643", dtype = "uint16", shape = (1248,))#candidate|8643|(1248,)|var|uint16
call_8641 = relay.TupleGetItem(func_7296_call(relay.reshape(var_8642.astype('uint16'), [16, 1, 6]), relay.reshape(var_8643.astype('uint16'), [16, 13, 6]), relay.reshape(var_8643.astype('uint16'), [16, 13, 6]), ), 0)
call_8644 = relay.TupleGetItem(func_7301_call(relay.reshape(var_8642.astype('uint16'), [16, 1, 6]), relay.reshape(var_8643.astype('uint16'), [16, 13, 6]), relay.reshape(var_8643.astype('uint16'), [16, 13, 6]), ), 0)
output = relay.Tuple([bop_8636,call_8641,var_8642,var_8643,])
output2 = relay.Tuple([bop_8636,call_8644,var_8642,var_8643,])
func_8648 = relay.Function([var_8635,var_8642,var_8643,], output)
mod['func_8648'] = func_8648
mod = relay.transform.InferType()(mod)
mutated_mod['func_8648'] = func_8648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8648_call = mutated_mod.get_global_var('func_8648')
var_8650 = relay.var("var_8650", dtype = "bool", shape = (12, 9, 1))#candidate|8650|(12, 9, 1)|var|bool
var_8651 = relay.var("var_8651", dtype = "uint16", shape = (96,))#candidate|8651|(96,)|var|uint16
var_8652 = relay.var("var_8652", dtype = "uint16", shape = (1248,))#candidate|8652|(1248,)|var|uint16
call_8649 = func_8648_call(var_8650,var_8651,var_8652,)
output = call_8649
func_8653 = relay.Function([var_8650,var_8651,var_8652,], output)
mutated_mod['func_8653'] = func_8653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2476_call = mod.get_global_var('func_2476')
func_2478_call = mutated_mod.get_global_var('func_2478')
call_8671 = relay.TupleGetItem(func_2476_call(), 0)
call_8672 = relay.TupleGetItem(func_2478_call(), 0)
func_5445_call = mod.get_global_var('func_5445')
func_5450_call = mutated_mod.get_global_var('func_5450')
const_8674 = relay.const([[-1.045378,-2.825759,-8.954037,5.849739,-7.420079,-6.035876,-9.990548,-1.736194,7.107083,7.113333,-7.519251,5.198656,-7.582753,-0.565471,7.678967,4.603817,3.159247,1.382506,0.489914,-1.393455,8.813126,-2.012677,-8.544844,-7.905853,0.993938,7.430776,-7.666106,5.801932,0.274348,2.338536,2.800092,-7.262894,-1.791229,6.948133,-3.856654,-0.504679,-3.425189,6.017529,9.132566,4.058159,4.921054,-5.479000,2.777613,9.401885,-5.963992,-8.955366,4.350306,-7.046927,-7.837830,6.864321,3.838645,0.855378,-7.753818,-9.456256,-0.931270,3.805869,-9.321536,0.256824,6.874158,-8.286993,3.568094,-0.265115,-1.038429,-7.882809,-9.353911,2.172463,0.799042,5.897204,-1.891483,1.372990,7.369736,-7.055736,5.420311,-7.744169,-0.797026,-1.734291,2.492485,-2.819988,0.768304,-5.791950,-8.442371,5.081838,-7.981960,-6.191040,0.276993,2.372463,-5.286091,-7.598337,1.165448,-9.200434,-3.038221,3.995481,1.726599,0.932543,8.398145,-1.749168,4.678935,1.957439,5.816538,-6.240597,-9.556634,6.178010,-3.819162,-7.891979,-3.441427,5.764707,1.148402,-7.296139,3.249363,8.570363,-1.952709,-4.380262,1.237956,2.212735,3.818300,2.901482,-4.888876,-4.364361,7.815517,-7.293119,-4.972516,-1.176953,5.144819,-4.417458,-3.659537,1.537397,-0.341915,-2.995045,9.383183,-5.478209,-3.546308,-3.032898,-8.198130,3.199042,6.574279,-1.397048,6.736934,3.458780,3.900606,6.503109,2.154741,-2.586264,7.854792,-8.427248,1.270140,3.878157,-0.654283,-3.610195,5.239359,-6.887560,9.543523,-2.143642,6.393562,2.220592,3.924625,-5.278228,3.728564,-8.086076,-8.315705,-0.321191,0.045165,9.468609,9.027823,7.323649,9.987610,-3.319299,-0.503810,8.077901,-8.228492,-9.677622,-2.143243,4.575383,-5.151023,-4.115667,-5.952998,-6.735834,-0.855076,4.421154,9.282081,-0.574969,2.519229,3.209203,8.159265,4.176533,-0.963973,-8.351857,4.090112,-9.136123,3.759968,-5.687026,3.955735,-7.353557,-7.331372,-3.566627,-7.669226,-8.816438,7.194604,7.187833,-3.591401,-6.889315,-8.116494,6.851681,-7.079790,3.129519,-2.916212,7.763933,-4.280936,-1.459743,-5.823591,-6.034855,6.039121,-7.331648,6.927010,-9.432740,-4.730963,-3.119428,4.740404,-7.246058,6.097255,3.306614,9.994534,-4.911646,-3.449379,-7.698525,0.365706,2.773834,1.267005,4.233340,1.582407,7.482763,-5.652367,1.574901,8.621883,-3.719425,9.787852,7.150192,-0.246421,1.752452,-4.843479,5.111809,-5.796693,-4.919330,-9.953670,-0.435989,4.663835,-6.953281,3.872735,1.050487,4.279235,-5.065723,-0.190914,-7.696100,1.382520,6.907653,3.488060,7.138064,-4.323689,-1.355438,4.271662,-2.353015,-1.648072,-4.004217,-9.694664,-8.413771,7.786786,1.831104,-4.726899,4.204393,1.431054,1.345193,4.576350,-6.547234,9.173610,1.911587,-8.670201,3.626404,-5.699027,-0.367877,-7.158098,-6.247732,2.814786,0.760225,5.345433,9.789518,3.393976,-1.679750,1.289877,-4.761787,6.636589,1.807406,-4.593778,-2.095014,5.657413,8.440772,4.495374,0.173925,9.738410,5.648218,2.890720,6.769271,5.355531,-0.796842,0.950202,4.907967,-2.588783,-8.013267,-4.584530,4.941443,3.801656,4.606111,-6.412075,-3.521693,1.952703,9.581215,-7.282693,2.102179,-3.961321,6.261570,5.400712,-8.638093,3.937098,-3.070718,0.045138,5.379912,-0.026880,3.351956,-6.327309,8.321947,9.911536,-2.474065,1.246212,-9.006153,5.151921,8.731823,-2.886663,-8.357576,-0.956953,4.266728,-1.258473,5.047991,7.615974,-8.357366,-5.194455,3.127416,-4.659810,2.350603,-4.444850,7.322407,8.092221,-5.646197,-1.889527,-4.146141,2.563745,-6.518302,-8.567964,-1.250734,-2.000823,5.506408,-0.232494,1.706839,8.144583,7.672333,-3.764268,5.825398,3.809465,5.363317,8.869420,1.625012,-2.479300,-0.415586,5.200681,-6.617068,7.199322,-7.843272,4.185332,-3.349432,-0.076617,-3.482079,-8.013332,3.408736,1.168070,4.654183,-1.112023,1.731768,-4.880263,0.088660,-5.752680,-3.920551,-7.492732,-0.689596,-9.514568,-3.040787,-9.816946,0.631682,-2.946148,-4.046160,8.913144,-4.985731,-7.711976,-9.463131,-3.400466,-9.488889,-7.214554,-6.765188,0.598251,-4.073264,-9.441305,6.422458,6.587733,3.234450,1.441975,4.623022,-7.891068,-9.469921,7.045460,4.310469,-8.176070,-9.278324,-2.486330,9.042954,7.565372,6.656841,-9.933838,-8.314521,2.524128,-8.151706,-9.949384,-1.234252,9.175623,0.962873,5.883810,-9.594927,6.000927,-2.269050,-9.572268,2.423159,5.796003,3.040789,4.641320,8.570268,1.000494,9.236275,3.948584,-6.280597,-1.959163,5.324198,8.472844,-0.686064,7.647320,-5.685603,-3.496364,5.463792,7.330879,-8.431382,0.019001,6.778483,6.498108,-6.304811,-7.659268,2.392763,-8.769561,3.272987,7.227359,-1.398926,-5.397093,-7.348928,9.588025,4.505621,-7.629509,4.632686,1.042869,-4.625678,-2.223397,-7.127684,-9.559617,6.114137,-1.514461,-9.771810,-2.428629,-5.594348,7.358468,-2.609877,6.564023,3.036188,5.803031,4.247509,-5.890535,0.979825,-8.596492,0.194262,7.550506,1.789961,0.078613,4.892204,3.777497,0.693300,-7.043313,7.763277,8.651167,4.643497,6.709973,5.013743,6.961924,-8.305697,-1.576745,-1.272470,7.961652,-5.970217,1.762251,-0.957431,1.079004,1.705335,3.314297,5.982351,-9.899915,5.797493,5.961897,9.720343,0.919526,-2.555638,8.626980,-8.340518,4.432963,-4.438869,-7.462043,6.318949,-0.803520,-9.539799,1.077509,-2.064461,-5.160863,3.770404,-0.511759,-6.180386,7.383472,-7.139421,8.238819,7.137188,8.091648,9.175934,-7.287422,5.572467,-7.052512,4.905455,-5.532811,3.692687,4.914745,-6.378667,6.168518,-8.849882,-1.525589,5.116152,2.616941,-7.010219,-0.982700,-6.508522,-9.383069,7.282556,1.608748,-5.675846,-2.468173,6.302495,-4.400377,-9.081334,-8.051067,-5.708222,3.720906,3.975438,-2.645230,2.333023,2.089136,-9.180443,8.184545,-6.936195,-6.283666,-2.644929,-6.735003,-8.334406,-4.451190,-2.082867,4.691675,9.170599,8.931108,2.758987,-9.704905,-4.699232,3.485460,4.813796,6.729920,1.308150,-6.801716,-8.252083,6.208465,1.362200,5.004910,1.280215,3.855493,2.457685,6.194815,-6.553785,9.145983,8.710819,0.488290,-9.112810,1.558888,-2.328071,0.256515,-7.159376,-0.608257,-0.123523,-2.885491,-6.066299,-4.737289,-8.082446,6.690076,6.486782,5.202167,6.192562,3.982116,5.331616,3.151364,-0.258384,7.441056,-7.893314,8.582231,6.074565,-4.924375,7.902398,-5.772228,-1.793878,-7.971272,-3.006400,-5.963043,7.634554,3.185641,-5.258720,-0.901612,-2.111582,-5.585091,6.905545,1.050802,6.325728,0.685982,3.038858,-9.935871,7.580009,3.269454,-6.289779,4.473696,-8.298314,0.994160,9.210711,9.149127,6.534263,-3.462990,6.124319,7.859133,6.611357,9.995519,-1.538203],[-6.015092,4.234635,-1.261754,-5.901247,7.056483,-8.984082,2.507945,-5.292051,2.559813,-3.125763,0.863145,-4.419519,-4.990689,4.521238,-5.407691,1.867255,1.156568,-5.458205,5.733835,3.540403,4.170700,4.992419,2.014739,-9.062176,2.157629,9.284737,-9.932315,7.524386,5.060569,0.190827,2.163284,9.620629,8.626793,-9.383034,-7.683914,0.446135,6.508404,-7.164716,-6.278447,-7.839764,-3.999246,-0.085434,3.303140,2.063591,-2.677664,-0.512807,-5.575951,-4.621779,5.559482,-6.910534,-3.793203,-3.254446,-7.351671,9.496371,8.102257,-8.339341,7.829203,-0.466468,-2.527499,3.785858,-1.822083,-3.837962,4.335783,-9.475342,0.248423,-5.341268,-1.115838,-9.087875,-2.250208,-4.763965,7.700450,9.161991,2.912010,0.849702,5.692642,5.542605,-0.766963,-3.427773,-5.536345,-9.916348,2.677578,-5.453481,6.746282,-3.279233,-3.248944,8.979433,2.664587,-8.793147,7.990908,9.221461,-2.041522,-1.543094,-8.802168,7.158876,-4.840768,3.059846,-2.731365,8.060691,-9.418342,0.709580,-8.962204,-8.530338,2.113085,5.371149,-2.708932,-7.620959,3.700998,6.873449,9.943779,-4.443890,-8.690458,-1.912219,4.181504,0.192961,2.579151,-3.324872,4.132842,-8.748778,2.835960,0.620907,-0.378160,4.339276,2.021091,0.323819,7.887130,-4.430079,7.864643,-4.097696,-1.041673,-8.322554,2.376926,-0.089485,3.227556,6.112366,-5.512914,-1.673802,-2.602659,-3.786904,-5.851707,9.393007,6.813691,-5.161818,-4.572913,-6.565406,-2.285972,-4.314537,4.718664,-8.200998,5.352298,-8.157276,3.892091,-6.114560,-1.140498,2.185594,4.764239,-9.614575,-1.090202,0.545611,8.718136,6.295766,4.597413,3.686174,-9.558078,5.508371,-5.170341,1.760152,6.708232,1.956770,-4.880800,-3.111189,4.290220,3.116513,7.931333,-3.070622,-8.729248,-8.680957,-0.614905,-7.871709,-4.901820,-9.288618,2.074133,-0.062209,-0.668450,-2.497258,-7.970177,-0.091032,9.398194,1.664233,-4.413031,-5.626741,2.864996,-7.326744,-3.380095,8.909875,3.376190,6.140260,4.098986,6.153045,-8.348067,5.124109,-0.886640,-4.473138,4.144970,7.179144,-6.932267,-9.796135,-3.919975,4.159292,0.985343,2.976573,-4.132825,-5.697874,-4.177289,2.643492,6.578464,0.269174,-5.392356,-6.702987,7.739077,-2.787345,5.592900,-2.861379,4.144614,-2.000263,-2.979721,2.710961,3.041372,-2.503779,7.247700,-4.867883,-3.965553,9.865452,4.438759,-9.501734,5.208809,-3.205117,6.415943,-6.392594,-5.735647,-9.138687,2.749403,-6.125902,8.964661,-2.168588,-4.703775,6.299214,9.785702,-6.114130,-5.120542,4.097586,6.927711,-5.113050,-4.613610,8.314807,-9.403111,9.798814,-8.684706,-9.003954,4.135319,-2.002834,9.537770,-9.854294,-1.442140,3.999947,-7.631326,-3.623664,1.906728,-5.384778,-1.763426,-3.370094,4.054852,-2.795388,3.377517,8.578834,8.291565,8.482723,-6.031546,8.226147,-0.358767,2.915605,-1.147485,-5.005545,0.019310,7.407026,-0.549046,-5.709977,-2.089533,8.844299,9.106975,-7.419214,9.241325,0.091054,1.534280,-5.092323,9.280593,-2.613236,-5.672153,0.053061,-5.291970,4.028163,3.784877,-2.046213,-7.140609,8.786169,5.264453,-5.317496,2.300931,-3.429174,8.870768,-3.525995,-6.450719,-1.409386,0.962604,-4.591254,-4.057677,1.285974,3.863109,9.913959,2.529469,4.341202,-6.175264,1.719615,2.622602,4.979641,7.981291,-5.116526,-9.888475,-3.711442,-8.169472,2.236386,-6.880850,-8.633280,8.608534,5.860506,6.164616,2.857006,-1.828584,1.392997,-3.953366,-5.801521,3.392158,2.118984,6.826159,9.141199,4.193698,8.535414,0.121707,4.396003,7.497282,-7.850240,-9.707595,9.223618,-2.347510,-6.098265,9.843876,-4.117763,7.908277,-4.143656,9.429920,3.366723,7.085899,-2.462535,-9.915531,7.332362,-5.946702,-0.234935,3.580896,-3.175590,6.256294,-1.203809,5.430643,2.907627,-5.517856,-8.158870,1.846697,-4.120599,-7.476150,-6.924889,4.971074,-2.830522,5.465409,-8.907163,-4.721121,-1.181106,3.022584,-3.157795,-1.505082,-4.642624,-2.914435,-2.457096,-8.271243,-3.598536,-9.073498,7.646149,-1.853105,2.915998,5.224532,-7.269679,-4.025907,7.621460,6.209057,7.031300,8.797938,-1.854560,-9.505466,8.725754,-6.610786,0.240573,-6.358206,-2.859495,-9.826122,-7.885944,7.319374,-3.045900,-3.455425,5.379895,2.584084,9.341054,-3.871838,-0.670846,-2.068562,4.294750,7.721065,4.904994,-9.448382,-2.835538,-8.009720,-8.797140,3.447259,0.727412,-5.836780,8.608228,6.182923,-1.494564,5.415343,-4.260371,-8.696875,-7.332026,-1.714037,-2.694727,9.128725,-9.021037,6.704475,2.696296,9.022890,-8.936307,2.438109,2.704451,-8.321624,3.391184,0.613987,-8.926042,1.333883,2.125081,-6.007255,-2.261962,9.335830,7.289774,7.907379,4.915339,-6.051010,-8.413899,-1.846156,-0.479761,6.579448,-0.063571,-8.267163,6.923196,0.181917,5.435129,-8.039960,1.181899,-8.194538,-9.266014,4.781456,-3.764659,-4.473240,1.909824,0.963905,7.556826,5.079908,6.946259,-5.942061,-4.375671,8.924688,-8.395612,9.905526,9.761745,-3.818502,-3.794169,-8.559046,6.685007,7.413872,2.351495,9.493802,-6.615839,-6.884853,-6.167342,-7.795434,-1.205520,-2.203583,4.234400,-1.667877,-5.454614,-5.024200,-2.789198,9.685889,2.181588,-9.267824,3.969497,-8.066357,9.385241,2.161690,8.918842,-6.393454,-4.492111,-4.579019,-4.539098,-9.285163,-6.426734,4.500630,4.633573,-8.319954,-9.046205,3.705951,-6.123433,9.866088,-0.912594,7.993106,-7.711040,3.157693,2.755981,-8.054817,-8.948019,-9.746409,0.623252,7.447703,-5.732271,-5.119412,6.577033,3.649109,1.637297,6.907180,8.545834,1.728895,-5.414032,-1.445462,7.416089,5.609762,-8.071023,-7.866176,-2.968837,-0.564819,0.615316,2.149555,0.856075,8.797886,9.112968,-2.602904,2.560109,-7.987258,2.863518,2.009911,9.791984,-5.833499,-8.827449,1.940867,0.674548,-6.883217,-1.066373,5.841349,-6.531399,-9.736453,9.637505,-7.148957,8.283712,-8.966516,-3.182874,0.846050,-9.286814,4.284256,-6.061567,6.564344,-1.007373,-9.293795,0.914021,-1.848288,-8.245312,9.388342,-3.382315,0.868335,-1.404145,-5.602540,7.586632,-7.421143,9.922677,2.136803,3.146422,7.220793,-6.482724,-7.068939,2.446604,4.694220,-8.303830,0.726317,-5.048080,-9.135307,-0.938875,0.203656,-4.932784,-7.552732,2.711125,6.324953,-2.454758,0.516865,-1.215013,7.145706,-7.311341,-8.876282,9.072280,8.102366,-2.055122,6.074155,-1.847034,-4.619532,-9.703456,3.894585,-1.254576,-3.049448,7.250636,7.762930,-3.300015,-3.572028,6.248326,6.581380,-2.891573,6.992900,-7.208853,-5.694066,0.246699,6.021412,9.004503,-9.784054,5.738264,-3.011349,-3.691771,-8.083307,-0.897038,1.877162,4.804185,0.258704,-6.205627,-5.257911,3.466137,3.174803,-2.185673,-6.385972,9.330541,9.821074,-2.993444]], dtype = "float32")#candidate|8674|(2, 660)|const|float32
var_8675 = relay.var("var_8675", dtype = "uint16", shape = (455,))#candidate|8675|(455,)|var|uint16
call_8673 = relay.TupleGetItem(func_5445_call(relay.reshape(const_8674.astype('float32'), [15, 11, 8]), relay.reshape(var_8675.astype('uint16'), [455,]), relay.reshape(const_8674.astype('float32'), [15, 11, 8]), ), 1)
call_8676 = relay.TupleGetItem(func_5450_call(relay.reshape(const_8674.astype('float32'), [15, 11, 8]), relay.reshape(var_8675.astype('uint16'), [455,]), relay.reshape(const_8674.astype('float32'), [15, 11, 8]), ), 1)
bop_8679 = relay.bitwise_and(call_8673.astype('uint32'), relay.reshape(var_8675.astype('uint32'), relay.shape_of(call_8673))) # shape=(455,)
bop_8682 = relay.bitwise_and(call_8676.astype('uint32'), relay.reshape(var_8675.astype('uint32'), relay.shape_of(call_8676))) # shape=(455,)
func_2782_call = mod.get_global_var('func_2782')
func_2786_call = mutated_mod.get_global_var('func_2786')
var_8684 = relay.var("var_8684", dtype = "float64", shape = (6,))#candidate|8684|(6,)|var|float64
call_8683 = relay.TupleGetItem(func_2782_call(relay.reshape(var_8684.astype('float64'), [6, 1]), relay.reshape(call_8671.astype('bool'), [3120,]), ), 2)
call_8685 = relay.TupleGetItem(func_2786_call(relay.reshape(var_8684.astype('float64'), [6, 1]), relay.reshape(call_8671.astype('bool'), [3120,]), ), 2)
uop_8698 = relay.erf(call_8683.astype('float64')) # shape=(7, 6, 1)
uop_8700 = relay.erf(call_8685.astype('float64')) # shape=(7, 6, 1)
output = relay.Tuple([call_8671,const_8674,bop_8679,var_8684,uop_8698,])
output2 = relay.Tuple([call_8672,const_8674,bop_8682,var_8684,uop_8700,])
F = relay.Function([var_8675,var_8684,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8675,var_8684,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_64 = relay.const(5.222256, dtype = "float32")#candidate|64|()|const|float32
var_65 = relay.var("var_65", dtype = "float32", shape = (1, 6, 6))#candidate|65|(1, 6, 6)|var|float32
bop_66 = relay.maximum(const_64.astype('float32'), var_65.astype('float32')) # shape=(1, 6, 6)
uop_81 = relay.exp(var_65.astype('float64')) # shape=(1, 6, 6)
bop_90 = relay.multiply(uop_81.astype('int8'), relay.reshape(bop_66.astype('int8'), relay.shape_of(uop_81))) # shape=(1, 6, 6)
output = bop_90
output2 = bop_90
func_93 = relay.Function([var_65,], output)
mod['func_93'] = func_93
mod = relay.transform.InferType()(mod)
var_94 = relay.var("var_94", dtype = "float32", shape = (1, 6, 6))#candidate|94|(1, 6, 6)|var|float32
output = func_93(var_94)
func_95 = relay.Function([var_94], output)
mutated_mod['func_95'] = func_95
mutated_mod = relay.transform.InferType()(mutated_mod)
var_202 = relay.var("var_202", dtype = "uint32", shape = (11, 16, 9))#candidate|202|(11, 16, 9)|var|uint32
var_203 = relay.var("var_203", dtype = "uint32", shape = (11, 16, 9))#candidate|203|(11, 16, 9)|var|uint32
bop_204 = relay.bitwise_or(var_202.astype('uint32'), relay.reshape(var_203.astype('uint32'), relay.shape_of(var_202))) # shape=(11, 16, 9)
output = bop_204
output2 = bop_204
func_212 = relay.Function([var_202,var_203,], output)
mod['func_212'] = func_212
mod = relay.transform.InferType()(mod)
mutated_mod['func_212'] = func_212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_212_call = mutated_mod.get_global_var('func_212')
var_214 = relay.var("var_214", dtype = "uint32", shape = (11, 16, 9))#candidate|214|(11, 16, 9)|var|uint32
var_215 = relay.var("var_215", dtype = "uint32", shape = (11, 16, 9))#candidate|215|(11, 16, 9)|var|uint32
call_213 = func_212_call(var_214,var_215,)
output = call_213
func_216 = relay.Function([var_214,var_215,], output)
mutated_mod['func_216'] = func_216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_332 = relay.var("var_332", dtype = "uint32", shape = (9, 3, 12))#candidate|332|(9, 3, 12)|var|uint32
const_333 = relay.const([[[-4,-6,7,-7,9,8,-8,5,-3,7,-6,5],[-6,-5,9,-4,-8,-9,6,-4,1,-2,-8,-1],[4,10,-10,3,-5,6,10,9,2,10,6,-5]],[[-7,-6,-6,8,6,1,-7,1,-3,-6,-8,-10],[2,10,-6,-5,-4,8,7,-1,7,8,-8,-4],[5,-5,-4,3,5,-4,-8,3,-9,1,8,8]],[[8,9,-4,-9,2,1,-9,2,8,4,-4,-8],[-8,10,3,-3,-3,-6,-5,5,7,5,-2,9],[-4,4,9,-2,10,-7,9,3,10,8,-2,-5]],[[1,-4,-9,-3,-7,-3,-8,7,9,3,2,10],[3,9,3,6,-4,-8,-5,-7,7,-9,7,7],[10,3,-5,-5,-3,6,8,3,-2,6,2,-10]],[[-3,8,-4,7,-4,-7,-3,7,-9,-5,5,-1],[-9,-2,10,1,-10,-5,-1,-10,3,6,-2,-6],[-6,-7,7,5,5,-6,-1,10,4,-10,10,-4]],[[9,-10,2,9,-7,8,4,-9,-5,4,1,-9],[-1,-4,1,3,7,-9,1,7,-4,-1,8,-7],[-4,9,7,4,7,9,5,7,7,-1,6,4]],[[2,-10,5,3,8,-7,-10,-3,1,6,-5,-10],[-9,-1,-8,6,-2,10,6,9,5,-1,8,-3],[-5,5,-10,-2,-7,-5,-8,4,-9,-7,8,-9]],[[1,10,-3,6,-10,7,7,10,-10,10,-5,-8],[-1,-9,9,3,-9,9,4,9,-8,7,-4,1],[1,4,6,-2,8,-5,1,-7,9,-10,1,10]],[[-6,7,1,7,-7,-9,4,-7,5,9,10,-6],[-2,-3,-8,4,-7,5,9,1,3,-1,3,9],[-10,4,6,8,-6,3,-3,7,8,-1,2,-4]]], dtype = "uint32")#candidate|333|(9, 3, 12)|const|uint32
bop_334 = relay.equal(var_332.astype('bool'), relay.reshape(const_333.astype('bool'), relay.shape_of(var_332))) # shape=(9, 3, 12)
bop_340 = relay.multiply(const_333.astype('float64'), relay.reshape(var_332.astype('float64'), relay.shape_of(const_333))) # shape=(9, 3, 12)
output = relay.Tuple([bop_334,bop_340,])
output2 = relay.Tuple([bop_334,bop_340,])
func_353 = relay.Function([var_332,], output)
mod['func_353'] = func_353
mod = relay.transform.InferType()(mod)
var_354 = relay.var("var_354", dtype = "uint32", shape = (9, 3, 12))#candidate|354|(9, 3, 12)|var|uint32
output = func_353(var_354)
func_355 = relay.Function([var_354], output)
mutated_mod['func_355'] = func_355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_549 = relay.var("var_549", dtype = "uint64", shape = (8, 8, 5))#candidate|549|(8, 8, 5)|var|uint64
const_550 = relay.const([[[-6,3,8,-7,-7],[3,-2,-9,6,3],[-3,5,-8,10,6],[-1,5,-8,-4,-1],[7,-2,-10,4,-2],[-9,5,-10,10,-4],[-4,-9,-7,-1,5],[3,-3,-3,-9,10]],[[-5,4,-5,-5,-6],[1,4,-8,-10,-5],[8,-7,4,-7,-8],[-2,-10,-4,-5,-9],[-10,1,-4,-6,-6],[7,6,9,5,-2],[-5,-7,3,9,2],[8,-10,-7,-8,7]],[[1,-9,2,-8,-4],[-10,-5,5,10,-7],[-1,8,4,6,-6],[5,10,6,-2,9],[-5,8,-7,9,4],[-4,10,8,7,7],[8,-3,-8,8,-3],[7,-5,-7,7,-2]],[[3,7,9,-9,-9],[10,-10,6,1,-7],[1,2,8,-10,7],[-7,-9,-6,-10,-3],[-1,8,5,9,-8],[-2,-10,-6,-8,-3],[-10,7,-5,-8,-6],[-7,5,10,9,-7]],[[4,5,6,2,8],[8,8,-5,-6,1],[5,1,-3,-1,-10],[9,-10,10,6,7],[-1,-9,-10,-5,1],[-8,-4,-8,2,1],[-10,10,5,-7,5],[-6,-8,-7,-1,-5]],[[-8,1,-4,3,10],[1,-2,-1,2,9],[-1,4,-10,-10,-5],[5,9,-7,5,-2],[2,5,4,-5,6],[-4,1,-6,10,5],[-2,9,8,-6,-6],[8,-2,5,2,2]],[[6,-3,-3,9,9],[-7,4,-2,-1,-5],[-9,-6,9,6,-1],[-7,4,3,1,1],[8,10,-5,6,5],[5,-6,4,4,7],[8,-2,6,-2,-1],[-8,4,-1,-2,-8]],[[-8,-8,6,10,-4],[5,2,8,7,4],[4,5,8,10,-10],[-7,-1,-3,-9,-5],[1,-6,-9,1,-4],[-4,-7,-8,-4,6],[-7,2,-10,-3,1],[3,-1,-7,3,6]]], dtype = "uint64")#candidate|550|(8, 8, 5)|const|uint64
bop_551 = relay.bitwise_xor(var_549.astype('uint64'), relay.reshape(const_550.astype('uint64'), relay.shape_of(var_549))) # shape=(8, 8, 5)
output = bop_551
output2 = bop_551
func_561 = relay.Function([var_549,], output)
mod['func_561'] = func_561
mod = relay.transform.InferType()(mod)
mutated_mod['func_561'] = func_561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_562 = relay.var("var_562", dtype = "uint64", shape = (8, 8, 5))#candidate|562|(8, 8, 5)|var|uint64
func_561_call = mutated_mod.get_global_var('func_561')
call_563 = func_561_call(var_562)
output = call_563
func_564 = relay.Function([var_562], output)
mutated_mod['func_564'] = func_564
mutated_mod = relay.transform.InferType()(mutated_mod)
const_603 = relay.const([[[-6,5,4,-2,-2,-10,2,3,-9,2,-7,6,1,-8],[1,-4,-7,-5,-3,-3,-5,-5,-4,-4,-5,6,1,7],[6,-4,-1,7,9,10,-9,8,5,-1,-4,-4,1,-8],[4,6,-5,8,-1,4,7,4,9,1,7,-3,-7,9],[8,4,-5,3,-3,5,-4,-3,-5,8,-9,5,3,9],[6,-9,7,8,6,-1,-10,2,-7,8,10,-3,-7,8],[-8,-9,7,9,-3,-6,-8,-7,-5,-4,-4,2,8,-6],[6,4,-3,8,-1,1,-4,5,4,-2,-3,-9,9,-4]],[[9,-2,3,6,-9,5,-1,-5,3,-9,-4,-8,-7,5],[-10,-3,-6,-1,2,-7,2,-2,8,10,-9,-10,9,-9],[5,-2,-10,2,-3,7,2,6,-3,7,-8,-5,-5,10],[-3,2,-1,-4,1,-7,1,-10,7,7,8,3,10,-5],[-5,8,-1,7,-7,5,7,4,5,10,-4,3,-10,10],[-4,-4,-9,6,-5,4,-4,-1,2,-10,9,-8,-7,-7],[-7,9,-1,10,-5,9,-9,-3,-3,-5,-8,-1,-7,2],[-2,-2,-5,10,-2,-3,7,1,7,9,6,3,1,5]],[[-5,-1,-5,5,2,5,6,-4,-9,10,-9,-6,-5,1],[4,-1,2,-3,-2,6,-6,1,8,-6,10,-5,-5,6],[-9,-5,4,2,-7,-4,5,-5,2,2,1,6,-6,-2],[1,10,-8,3,-10,-7,-9,-5,2,7,8,-1,9,-4],[-10,5,-6,-1,9,-6,10,5,-4,-6,-2,10,4,3],[-1,-8,3,4,8,4,1,8,3,3,-8,6,3,2],[-9,1,-9,-3,-2,-4,4,2,7,-9,5,-2,4,-3],[-5,-6,-9,6,-6,2,8,10,3,-9,2,-3,-3,-10]],[[-4,-6,9,1,9,-7,8,4,-5,-8,-6,1,7,5],[-8,9,-9,8,6,-5,1,-1,1,-5,-10,5,1,6],[-9,-2,-7,8,3,-5,9,6,-1,-9,4,1,8,-2],[9,9,-10,-4,1,4,-1,-4,10,-10,-9,-5,4,9],[-1,1,8,9,-2,-4,6,6,8,8,10,-10,1,-3],[1,-5,10,4,5,-5,-6,-7,-10,10,2,5,9,2],[3,3,5,8,-3,5,-4,6,-1,4,7,-9,-5,-1],[-2,-4,-10,10,-6,-1,1,-8,8,4,-6,-1,4,2]],[[-6,2,9,2,-7,-3,1,4,3,6,8,1,10,-9],[-5,2,5,9,1,1,6,-3,-1,-8,8,6,-3,10],[-10,-8,9,8,3,7,-1,-6,-2,5,-3,-8,6,-9],[-10,4,9,6,-9,1,2,-10,6,-1,2,-2,8,9],[1,-4,-8,-10,10,4,-10,5,-3,-4,-10,7,-2,10],[8,-5,7,1,-10,10,-7,-9,-1,9,-9,3,8,3],[9,-10,-3,8,-6,5,10,-6,-2,-3,1,-7,5,-2],[-7,2,10,-5,-9,-3,9,-3,-3,-5,-5,-8,-10,-7]],[[-4,-7,5,9,3,10,-6,-9,1,4,-2,-3,-9,3],[5,-6,2,9,5,5,-3,-2,-8,-4,4,6,-6,2],[9,7,-7,2,6,-7,1,-1,-6,3,-3,-4,-2,-10],[9,-6,-9,-2,-5,6,-6,-4,-6,3,-5,6,1,2],[10,4,8,-8,2,-3,-4,10,-5,-9,7,-1,-6,10],[-6,-3,-8,6,8,3,3,8,-7,7,3,3,8,4],[-10,5,1,-4,4,5,1,-1,5,2,-10,-6,-5,-2],[-10,10,3,7,3,2,-1,-9,-6,9,-2,5,-9,4]]], dtype = "uint16")#candidate|603|(6, 8, 14)|const|uint16
var_604 = relay.var("var_604", dtype = "uint16", shape = (6, 8, 14))#candidate|604|(6, 8, 14)|var|uint16
bop_605 = relay.maximum(const_603.astype('uint16'), relay.reshape(var_604.astype('uint16'), relay.shape_of(const_603))) # shape=(6, 8, 14)
func_212_call = mod.get_global_var('func_212')
func_216_call = mutated_mod.get_global_var('func_216')
var_610 = relay.var("var_610", dtype = "uint32", shape = (1584,))#candidate|610|(1584,)|var|uint32
call_609 = func_212_call(relay.reshape(var_610.astype('uint32'), [11, 16, 9]), relay.reshape(var_610.astype('uint32'), [11, 16, 9]), )
call_611 = func_212_call(relay.reshape(var_610.astype('uint32'), [11, 16, 9]), relay.reshape(var_610.astype('uint32'), [11, 16, 9]), )
output = relay.Tuple([bop_605,call_609,var_610,])
output2 = relay.Tuple([bop_605,call_611,var_610,])
func_616 = relay.Function([var_604,var_610,], output)
mod['func_616'] = func_616
mod = relay.transform.InferType()(mod)
var_617 = relay.var("var_617", dtype = "uint16", shape = (6, 8, 14))#candidate|617|(6, 8, 14)|var|uint16
var_618 = relay.var("var_618", dtype = "uint32", shape = (1584,))#candidate|618|(1584,)|var|uint32
output = func_616(var_617,var_618,)
func_619 = relay.Function([var_617,var_618,], output)
mutated_mod['func_619'] = func_619
mutated_mod = relay.transform.InferType()(mutated_mod)
const_672 = relay.const([[[5,3,3,-5,-3],[-4,-8,5,8,-4],[4,7,-9,9,5],[1,5,7,-9,-1],[-9,7,10,9,1],[-6,-1,9,2,-7],[-9,6,-4,2,-9],[-8,-7,-8,-1,4],[-10,-7,5,-10,5],[5,-8,9,-6,-5],[-3,-5,-10,-7,10]],[[2,-4,-3,-4,-8],[-2,4,6,2,-6],[6,2,10,-4,4],[2,8,-5,-5,-3],[10,7,-5,-9,4],[-6,5,-4,1,-3],[4,10,-1,2,-4],[2,10,9,-2,-2],[4,-7,-7,3,10],[2,-3,-5,-7,-2],[-2,6,4,7,4]],[[10,-9,-6,-9,4],[-4,3,-9,2,5],[-7,-8,1,10,8],[9,-1,-5,5,-5],[3,-7,7,-3,4],[-2,-7,5,2,5],[-9,-8,-3,9,-8],[8,4,-8,-3,-9],[-10,-9,-1,6,2],[-5,-6,-3,-9,6],[1,-9,-3,-7,7]],[[-5,-6,6,1,-5],[3,-5,-7,7,-3],[1,1,10,-6,-10],[2,2,10,-9,1],[-5,6,-5,-8,-6],[7,6,1,2,2],[2,7,-4,-3,-9],[7,-1,4,5,-10],[3,-2,7,-7,-1],[-1,5,-9,5,1],[8,-8,4,-7,-3]],[[2,4,7,5,10],[-10,-9,7,3,-1],[7,-6,-10,-8,1],[-2,7,7,7,5],[10,-6,-2,8,-8],[4,10,-10,-2,5],[-10,-6,-3,3,5],[-7,5,5,-10,-7],[-3,2,2,-2,-2],[8,4,-1,7,8],[1,-8,-1,-8,-5]],[[7,-7,-1,-5,-5],[-10,1,7,2,5],[7,-5,6,7,7],[8,-1,-5,4,-5],[-6,-2,-10,8,-4],[-4,-1,-5,7,1],[-7,9,4,2,5],[6,4,-8,-8,10],[1,2,-5,9,10],[-9,8,5,-2,-1],[4,-8,-7,5,-5]],[[7,9,10,-6,-9],[10,1,5,-2,-3],[-6,2,7,10,-5],[7,3,-1,3,3],[-4,-7,2,3,9],[-7,-2,8,-8,-1],[5,5,5,2,-3],[-9,7,2,-8,-3],[2,1,-1,-5,-9],[-2,-6,6,-2,9],[-3,-2,4,2,-10]],[[10,-5,8,-2,-4],[7,9,10,-5,4],[-10,2,-9,-8,10],[-4,-2,1,-6,10],[4,-4,3,6,10],[1,9,2,2,7],[-9,-2,1,-10,-4],[6,10,-1,-8,10],[-1,8,6,5,9],[2,4,-1,-7,5],[5,-1,3,-7,-1]],[[9,-10,1,4,-6],[10,2,-3,-3,8],[-2,-7,-8,-5,1],[2,9,4,7,-5],[-2,-2,1,1,-6],[9,-10,10,-9,2],[4,-2,7,-2,6],[9,4,-6,9,-8],[6,4,8,-5,3],[-8,3,-10,8,5],[1,3,9,10,-7]],[[-4,6,1,6,-10],[3,-5,-10,5,7],[3,5,-3,9,2],[-10,1,6,1,-7],[-8,2,5,8,-1],[1,5,4,-10,-9],[-9,1,-8,-1,7],[-1,6,-10,-7,-4],[-5,4,1,-6,-1],[5,6,9,1,3],[5,6,-9,-6,-7]],[[7,-5,2,1,1],[6,1,10,-6,-9],[2,6,7,4,-2],[-6,-5,-1,1,6],[3,7,-4,3,9],[-2,6,-9,-1,-10],[6,-5,-9,7,-8],[1,6,5,-5,1],[-10,7,9,3,-10],[7,7,6,-8,-5],[5,8,-3,1,-1]]], dtype = "uint16")#candidate|672|(11, 11, 5)|const|uint16
var_673 = relay.var("var_673", dtype = "uint16", shape = (11, 11, 5))#candidate|673|(11, 11, 5)|var|uint16
bop_674 = relay.less(const_672.astype('bool'), relay.reshape(var_673.astype('bool'), relay.shape_of(const_672))) # shape=(11, 11, 5)
func_353_call = mod.get_global_var('func_353')
func_355_call = mutated_mod.get_global_var('func_355')
var_686 = relay.var("var_686", dtype = "uint32", shape = (324,))#candidate|686|(324,)|var|uint32
call_685 = relay.TupleGetItem(func_353_call(relay.reshape(var_686.astype('uint32'), [9, 3, 12])), 0)
call_687 = relay.TupleGetItem(func_355_call(relay.reshape(var_686.astype('uint32'), [9, 3, 12])), 0)
output = relay.Tuple([bop_674,call_685,var_686,])
output2 = relay.Tuple([bop_674,call_687,var_686,])
func_696 = relay.Function([var_673,var_686,], output)
mod['func_696'] = func_696
mod = relay.transform.InferType()(mod)
mutated_mod['func_696'] = func_696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_696_call = mutated_mod.get_global_var('func_696')
var_698 = relay.var("var_698", dtype = "uint16", shape = (11, 11, 5))#candidate|698|(11, 11, 5)|var|uint16
var_699 = relay.var("var_699", dtype = "uint32", shape = (324,))#candidate|699|(324,)|var|uint32
call_697 = func_696_call(var_698,var_699,)
output = call_697
func_700 = relay.Function([var_698,var_699,], output)
mutated_mod['func_700'] = func_700
mutated_mod = relay.transform.InferType()(mutated_mod)
var_787 = relay.var("var_787", dtype = "float32", shape = ())#candidate|787|()|var|float32
const_788 = relay.const([[[1.558098,-9.751580],[-6.860526,7.756643],[-3.796899,-5.194916],[2.801804,9.902362],[-6.376008,8.378941],[-8.631308,-6.746532],[3.979795,-3.218958],[7.662733,8.153241],[1.305606,8.541255],[9.487929,4.624489],[3.353380,2.813862],[9.120662,-1.202292],[8.845785,4.822112],[7.460415,6.432771],[1.696999,-9.663272]],[[9.447986,5.281326],[7.441355,-1.541922],[-9.973680,-4.339167],[5.139222,-2.191665],[2.892879,-2.276803],[-4.434633,-0.116252],[2.732833,-3.874375],[5.502834,-0.822381],[4.247005,3.745228],[-7.802956,1.824194],[7.482602,-1.069219],[4.213214,-9.415823],[-3.054620,-7.795023],[-3.102574,-3.609957],[-6.024211,-0.857440]],[[-5.820820,-7.850921],[-4.611185,-1.304007],[7.344422,7.142024],[-5.109347,1.972920],[-9.253655,-1.325465],[-8.295218,2.198917],[2.070359,-6.735088],[3.620305,3.035363],[1.534089,0.091297],[3.230335,-7.236784],[2.714307,-7.514199],[-6.544324,-4.274667],[7.140732,8.069154],[8.383552,-3.338224],[-7.851718,-2.778912]],[[4.629838,5.951854],[6.308903,-0.083057],[2.264423,8.797417],[8.273768,-6.418084],[6.456580,-7.782936],[4.263031,-2.085830],[1.234703,5.290766],[1.221762,8.906873],[9.668198,-5.905145],[1.137931,5.613294],[0.612146,8.245052],[-7.583869,-2.303385],[-0.484602,-1.438992],[-6.354112,-5.574315],[7.306327,-4.380931]]], dtype = "float32")#candidate|788|(4, 15, 2)|const|float32
bop_789 = relay.floor_divide(var_787.astype('float32'), const_788.astype('float32')) # shape=(4, 15, 2)
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
const_793 = relay.const([8,9,-3,-3,2,-1,-5,-2,4,-9,8,-7,-9,-8,8,8,-7,-4,-1,9,7,8,-10,-2,6,7,3,10,-7,-8,6,-10,2,1,-9,7,-10,-9,3,-7,1,3,-9,5,3,-2,-9,2,-4,-7,3,10,8,8,-9,2,-8,-5,10,-5,-5,-4,7,10,-8,6,-10,9,-6,-1,9,-8,-10,5,4,5,-7,8,4,7,4,5,10,3,-8,-2,8,5,-4,6,-10,-9,-9,-1,4,6,1,-1,-3,8,7,-8,1,-10,4,3,8,-9,9,-3,9,-9,9,1,4,-5,9,-5,7,-5,5,4,-10,-2,4,1,5,4,-2,9,-4,7,8,-6,-9,-5,-1,-8,4,1,7,1,-4,9,-2,1,1,-1,-10,-5,10,-3,-10,3,3,2,-7,-4,-2,8,1,9,-9,-10,-7,-8,-6,-7,4,-10,7,-6,9,-7,5,2,-7,8,1,-7,-5,-5,-7,-7,6,7,9,8,-5,8,2,-4,3,7,1,2,8,-5,2,6,-9,-9,-6,8,-4,9,-6,-7,4,5,-9,-1,4,1,-10,-4,-10,7,2,7,-2,3,1,9,7,3,10,-2,10,2,10,8,1,-8,-3,-10,-3,-4,-7,2,-6,-10,8,1,-5,9,9,7,-7,2,2,-4,6,-1,-1,-9,-9,5,10,9,-9,1,10,-9,-5,-6,4,1,-9,5,9,-9,4,8,-10,-7,7,-8,-8,-1,-7,-7,8,2,-4,7,4,2,8,10,-6,6,9,-8,2,-7,8,-1,-5,2,-4,3,-5,-4,4,10,4,-3,1,-7,3,-1,1,-5,-6,6,-6,-6,3,-3], dtype = "uint64")#candidate|793|(320,)|const|uint64
call_792 = func_561_call(relay.reshape(const_793.astype('uint64'), [8, 8, 5]))
call_794 = func_561_call(relay.reshape(const_793.astype('uint64'), [8, 8, 5]))
output = relay.Tuple([bop_789,call_792,const_793,])
output2 = relay.Tuple([bop_789,call_794,const_793,])
func_798 = relay.Function([var_787,], output)
mod['func_798'] = func_798
mod = relay.transform.InferType()(mod)
var_799 = relay.var("var_799", dtype = "float32", shape = ())#candidate|799|()|var|float32
output = func_798(var_799)
func_800 = relay.Function([var_799], output)
mutated_mod['func_800'] = func_800
mutated_mod = relay.transform.InferType()(mutated_mod)
const_816 = relay.const([[[4.461722,-4.258362,6.094240,7.075235,6.301112,6.978957,7.047583],[-6.645888,3.003284,-1.917471,-2.810400,-6.775437,-1.545553,-8.666919]],[[-0.651427,-1.359755,1.804321,-0.168107,5.177713,2.217266,7.908557],[-6.861390,-6.434037,-7.994235,2.336920,-8.099893,-4.730030,-5.510520]],[[-6.053937,-5.043985,-9.863424,-5.506255,-7.968936,2.788493,2.634133],[-4.924514,5.620516,0.788139,0.762563,2.397329,-5.050672,-2.007519]],[[-2.909947,2.738777,-7.117414,1.513469,1.155395,-3.356369,0.521039],[3.482236,0.200603,9.269944,-0.841114,-3.821384,-5.941787,-4.134802]],[[-7.787061,8.028738,4.156039,1.609214,1.306963,4.346857,-1.315219],[-9.470693,7.213034,-4.052007,0.361059,6.755199,4.249600,9.709205]],[[9.444120,-2.701281,-2.164568,9.494509,9.239837,5.625842,8.656232],[4.359011,5.018337,3.564130,2.492382,7.504278,0.512909,9.425422]],[[-0.775455,8.058283,-3.052966,8.166968,2.979868,4.758823,1.450682],[5.584565,6.509778,9.698369,-6.815350,5.801240,-1.143539,-6.614548]],[[0.299868,-1.579139,-4.953290,1.046515,-4.427551,-9.568197,2.114470],[-8.887494,-0.803159,-9.921261,-7.859143,-2.852611,-3.581284,-5.942208]],[[-2.346881,2.424998,-8.591458,-2.101452,4.321886,-3.516606,-8.319680],[7.778244,-3.142156,3.422391,-4.583186,-8.626831,7.223388,9.148585]],[[-3.243614,-0.421254,5.300402,-7.654998,-2.266062,-4.994268,-6.871227],[8.148096,5.568414,4.019264,-4.552911,3.334597,-5.492570,4.701940]]], dtype = "float64")#candidate|816|(10, 2, 7)|const|float64
uop_817 = relay.cos(const_816.astype('float64')) # shape=(10, 2, 7)
func_353_call = mod.get_global_var('func_353')
func_355_call = mutated_mod.get_global_var('func_355')
const_820 = relay.const([7,-7,-8,2,-5,-1,8,3,-5,1,-8,5,6,4,-10,-6,-3,-7,9,10,-8,10,-5,1,8,1,-4,6,10,4,2,-6,-3,5,-2,-10,8,-10,5,-4,-1,8,3,-7,-3,2,3,10,3,-9,-2,7,9,4,9,6,3,7,-8,-1,-7,6,-5,5,-4,4,3,8,9,5,-8,-9,-5,-10,-1,3,6,-8,-6,10,9,-9,-7,4,7,-5,-8,-9,-1,5,-2,9,-8,10,4,-5,3,-5,1,6,9,-4,-4,-2,-1,-6,-5,-10,6,6,-9,-2,7,3,-9,5,-10,4,9,10,5,3,-3,-3,-5,10,2,-8,-9,6,-2,5,7,10,7,7,6,-10,-7,9,-1,-7,10,3,-6,9,-9,2,6,-3,-1,-3,-4,-7,7,4,6,-3,7,-8,-5,3,-3,-10,-8,-10,-7,6,-7,4,-1,-1,10,-5,-10,-9,2,-8,10,2,5,7,-6,-3,7,6,-6,7,3,-2,-5,-1,-5,-9,-9,3,6,5,-4,-6,6,1,1,7,-9,10,-9,10,9,1,2,-1,-5,-10,-5,-9,8,-4,-7,-6,1,2,-6,6,-2,5,-2,-2,-5,3,1,-4,2,-2,10,-5,4,10,10,9,-4,5,3,10,-4,-9,-5,-5,-10,5,-5,-10,10,2,8,1,6,-6,5,-8,-9,3,-1,-10,-7,10,5,-10,-9,-4,-4,9,-1,10,10,-5,6,-2,10,9,-9,7,8,-9,-10,6,-8,-3,-9,-4,-2,8,9,-4,-4,-6,1,-6,-1,-7,-2,4,-7,8,1,-5,-3,8,4,2,-6,-2,-2,-7,5,-3,-9,6,5,4,-8,-8,9,-4], dtype = "uint32")#candidate|820|(324,)|const|uint32
call_819 = relay.TupleGetItem(func_353_call(relay.reshape(const_820.astype('uint32'), [9, 3, 12])), 1)
call_821 = relay.TupleGetItem(func_355_call(relay.reshape(const_820.astype('uint32'), [9, 3, 12])), 1)
func_353_call = mod.get_global_var('func_353')
func_355_call = mutated_mod.get_global_var('func_355')
call_822 = relay.TupleGetItem(func_353_call(relay.reshape(call_819.astype('uint32'), [9, 3, 12])), 0)
call_823 = relay.TupleGetItem(func_355_call(relay.reshape(call_819.astype('uint32'), [9, 3, 12])), 0)
uop_843 = relay.tan(call_822.astype('float32')) # shape=(9, 3, 12)
uop_845 = relay.tan(call_823.astype('float32')) # shape=(9, 3, 12)
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
const_862 = relay.const([2,6,-4,10,1,-8,10,-2,1,8,3,-9,-2,-7,3,-9,-8,8,-1,-3,-8,-5,-8,-1,6,1,9,-8,-7,5,5,-5,-10,-4,-3,5,-7,-10,-9,2,-4,-5,-4,-1,10,-9,1,-7,-8,4,-5,3,-9,-6,5,4,-10,-2,3,-5,1,-9,9,3,-6,-9,6,-2,-6,-7,-6,-2,-1,-3,10,-1,-4,-3,-6,-10,-5,-3,2,10,-6,3,-8,-8,-9,-5,-9,-10,-9,-5,9,-9,-6,-7,-10,8,-2,7,6,-10,8,-6,6,-1,-6,1,-2,2,-3,-8,-4,10,-7,-7,-4,-10,6,9,-1,-6,7,-4,8,-8,-5,-7,-3,6,-3,5,-3,10,-10,-1,1,1,7,-6,-1,7,1,4,10,-1,4,2,10,7,3,4,7,2,1,10,-4,-10,10,6,4,5,-5,5,3,9,10,-9,-7,1,-1,-1,-10,10,5,-2,-5,-8,5,8,-5,-3,-10,-2,-5,6,5,-3,-8,-5,-8,5,3,6,7,6,-2,-7,-1,-9,3,4,-5,-3,1,8,-4,-5,-8,-4,4,9,9,8,4,-8,-5,6,-3,-4,6,2,-7,-8,-7,-10,-4,-8,-4,5,-4,-6,9,-10,1,-5,-8,-9,-5,9,-1,4,7,-2,-8,8,2,-2,6,-3,6,3,6,-8,-1,2,4,-1,10,2,10,2,4,5,8,6,-4,7,-3,1,-9,-7,-1,-6,4,8,7,-8,-6,10,8,7,5,2,-8,-3,7,2,10,8,-7,8,8,5,-6,7,1,6,7,-5,2,-4,9,7,-5,3,-1,5,4,3,-5,4,6,5,1,-10,9,1], dtype = "uint64")#candidate|862|(320,)|const|uint64
call_861 = func_561_call(relay.reshape(const_862.astype('uint64'), [8, 8, 5]))
call_863 = func_561_call(relay.reshape(const_862.astype('uint64'), [8, 8, 5]))
func_616_call = mod.get_global_var('func_616')
func_619_call = mutated_mod.get_global_var('func_619')
const_871 = relay.const([-10,3,9,-3,2,-6,7,-8,7,-6,-8,-4,-5,10,-10,-6,-7,2,-5,-5,-4,-2,10,-8,7,4,2,10,8,7,-10,10,4,-5,8,-9,-2,-3,-8,1,-4,-1,-4,6,-2,2,7,-1,-8,1,-8,-8,9,5,2,-5,1,-5,-10,9,-3,3,-4,3,1,-8,2,1,7,3,2,-8,-5,-7,3,6,-8,-7,1,4,2,3,8,-7,10,6,7,4,-6,-8,9,-6,1,9,3,-6,-5,-1,4,10,10,-7,-2,1,-6,-1,-1,1,-10,5,-6,-10,-1,8,3,-3,-5,-9,3,-9,7,5,-4,-1,9,-2,7,7,-5,5,-2,8,-1,6,-7,5,4,-3,6,-7,-7,1,-8,-2,-5,10,7,9,-7,4,-2,9,8,-4,-5,3,-9,8,5,2,-8,1,2,-5,-5,-2,-9,10,-4,-4,-7,-3,-3,4,10,10,-10,-7,-1,1,3,-10,6,-2,8,9,4,2,2,5,-1,2,-8,-4,-3,-4,10,-9,-7,9,6,1,-10,7,-8,-4,7,-10,6,5,-1,-8,-4,9,7,-7,6,4,8,7,-4,-4,-8,-8,-10,-6,4,4,-2,-9,1,-3,-3,-4,-8,8,-4,5,-9,-8,7,-10,9,-9,6,-9,6,-5,-1,-2,10,3,4,-5,2,-4,9,-2,-9,-9,-10,2,-2,-5,-6,2,-8,-9,4,7,-1,-6,4,-1,10,-6,10,-4,-6,5,-9,7,3,-10,-4,-4,-6,7,8,-1,-8,9,-6,2,4,-4,-4,10,9,-6,-7,-7,-1,-4,-10,7,3,-10,1,-3,-9,9,7,3,-1,8,9,2,-8,9,3,-8,4,-9,9,-1,8,4,-1,-1,7,-2,-5,-6,-3,2,3,-4,9,-3,5,9,-5,-9,1,1,-1,6,-7,8,-7,8,2,6,-5,-10,-2,4,-3,6,-4,3,9,-3,2,-8,4,7,-10,-5,-4,7,-5,5,-3,1,-7,-5,4,3,-9,-2,-9,-9,4,5,-9,3,-3,-2,-9,-8,-5,-3,10,4,-8,-4,-7,-9,-5,10,9,9,-4,-10,2,-9,10,-8,7,2,8,4,7,8,-10,-7,4,10,-7,-8,10,-7,-9,-3,-7,-2,8,-2,-1,-8,-9,-9,3,8,2,8,-5,-2,-10,-1,-9,3,10,4,-6,-2,9,7,-1,-3,-4,4,-8,4,-1,-6,-7,-8,6,10,-6,6,-6,-9,-1,9,-5,-5,-9,-2,3,3,-1,-8,-4,-9,-3,-8,-10,-7,1,-6,-8,1,1,10,-5,5,3,-1,4,-7,-4,7,2,-5,-9,-3,-4,-4,10,-1,6,-9,1,-6,-9,-3,10,9,3,6,6,1,-4,7,9,-8,-3,-6,8,-9,-8,2,-2,9,4,1,5,-2,-5,2,8,-2,1,-7,-3,8,1,-7,-10,10,4,-5,-1,7,-7,-3,2,-8,-5,-10,3,8,-9,-7,-3,-4,-8,5,6,-9,-2,-10,8,-5,-4,1,-4,-1,8,-1,-5,-10,-4,6,7,-4,8,3,-3,10,5,7,2,4,6,-3,-10,7,5,5,7,-3,5,-10,4,8,-1,1,-2,3,10,-10,6,8,1,7,5,2,6,10,1,-1,4,-8,-9,-4,-9,-3,2,-8,5,10,5,-1,5,1,1,10,6,-2,1,3,-10,4,-8,-6,8,-2,-9,2,-4,2,6,1,-10,-6,8,-8,8,4,-4,8,8,5,-2,-1,-1,-2,-5,-9,-7,-5,-6,7,4,-7,-4,8], dtype = "uint16")#candidate|871|(672,)|const|uint16
var_872 = relay.var("var_872", dtype = "uint32", shape = (132, 12))#candidate|872|(132, 12)|var|uint32
call_870 = relay.TupleGetItem(func_616_call(relay.reshape(const_871.astype('uint16'), [6, 8, 14]), relay.reshape(var_872.astype('uint32'), [1584,]), ), 0)
call_873 = relay.TupleGetItem(func_619_call(relay.reshape(const_871.astype('uint16'), [6, 8, 14]), relay.reshape(var_872.astype('uint32'), [1584,]), ), 0)
output = relay.Tuple([uop_817,call_819,const_820,uop_843,call_861,const_862,call_870,const_871,var_872,])
output2 = relay.Tuple([uop_817,call_821,const_820,uop_845,call_863,const_862,call_873,const_871,var_872,])
func_876 = relay.Function([var_872,], output)
mod['func_876'] = func_876
mod = relay.transform.InferType()(mod)
mutated_mod['func_876'] = func_876
mutated_mod = relay.transform.InferType()(mutated_mod)
var_877 = relay.var("var_877", dtype = "uint32", shape = (132, 12))#candidate|877|(132, 12)|var|uint32
func_876_call = mutated_mod.get_global_var('func_876')
call_878 = func_876_call(var_877)
output = call_878
func_879 = relay.Function([var_877], output)
mutated_mod['func_879'] = func_879
mutated_mod = relay.transform.InferType()(mutated_mod)
const_889 = relay.const([[[-4.106601,6.965144,-5.747832,-8.869083,-1.414632,4.648986,-8.073734,2.535810,0.830822,4.727656,8.873177,8.539237],[5.241653,3.049922,4.318325,-0.067503,-5.849545,-3.718256,-8.704854,-2.588801,-7.721147,2.012640,-6.802184,2.132669],[4.044346,-7.469563,7.950922,-3.874372,5.133586,-5.446734,-4.192280,-5.762680,1.711317,0.048548,7.839256,-5.187392],[-2.072671,-5.927493,-0.024758,-7.545538,6.971266,5.995364,-1.600253,0.391565,2.221551,-7.004991,-8.347913,-0.981688],[0.962645,-2.759749,-1.009538,0.321202,-7.874798,5.226198,1.900861,-0.185465,-9.785927,0.218315,5.765117,-0.106653],[2.683682,1.223645,6.878647,8.228074,1.135335,1.064364,-9.629648,-3.121250,0.093512,-7.867092,4.458718,6.130955],[-9.519227,-4.225099,2.819162,-2.761426,3.467250,5.577433,-7.171355,-1.513413,-5.159106,0.364982,-9.584513,1.601583],[1.350560,-9.043640,-0.788453,-6.656823,5.224440,-5.320111,7.320811,5.832293,-9.289934,2.469689,2.364936,5.282700],[3.528753,-5.895970,-1.984126,8.396823,3.689552,3.957667,2.003609,-1.963225,-9.586841,-4.324811,-9.924348,9.150703],[-0.331110,2.391710,-2.037216,4.086430,0.902659,4.926469,2.881852,2.943676,-4.777832,-3.082836,-6.075377,-6.380019],[0.220227,-8.514341,-6.642201,6.713163,-9.785752,-5.753368,8.521466,-0.634042,-5.250253,-8.001262,6.601045,-0.422368],[-1.440860,0.064606,-5.725009,-7.215556,-7.995454,3.230799,-3.652847,1.137350,7.781365,6.131623,7.000245,4.027741],[0.454735,1.627376,2.144722,-3.461378,-4.871388,-4.071107,-4.621707,9.713705,5.955229,6.885352,7.882351,-3.938458],[5.683191,3.738851,2.482977,-9.875336,-5.047709,5.853354,5.177374,-3.823370,-0.208950,-4.264479,6.746822,3.910057]],[[-8.536097,-8.941952,-5.713226,-1.722958,-1.849201,-6.662015,-3.521883,-2.344363,7.413924,-3.865540,0.962972,-6.798088],[4.570783,-8.422503,-9.691040,4.756636,0.340333,-3.057655,-7.178810,4.074451,-8.562595,1.306283,-9.195335,-1.054289],[3.940606,-8.327334,3.266132,-2.332595,-0.441651,0.248883,9.187106,2.772989,-3.586305,-5.784127,8.568110,6.311132],[8.177939,-3.506404,-2.266974,2.279936,-3.976622,-3.560752,0.410089,-4.567081,-3.941974,-8.048552,4.255546,-8.343320],[-0.034928,-9.459778,-4.685729,2.833011,-1.205247,5.894191,-4.180386,8.596156,-9.873603,-5.128401,-3.717841,3.734413],[-1.770178,-6.279170,-1.634589,6.474122,3.794372,-7.701461,2.497344,-7.639891,5.389037,-3.247528,-5.823762,-5.248978],[-8.784844,-6.193388,-9.806667,1.953415,-7.082784,-9.541817,-5.537313,6.145991,1.018551,6.952674,3.242681,5.939073],[8.982935,2.786918,7.239420,-3.726732,-6.978821,-2.068023,6.614335,-2.796189,-4.931240,-4.872344,-9.436197,-2.058428],[4.531942,0.126014,4.201851,8.615544,-0.701652,2.068352,2.529811,6.268728,-1.075465,-7.878800,7.155785,9.470544],[7.429104,-0.337630,1.241898,4.545049,-6.493901,-4.623853,6.132846,-2.743441,-0.921105,1.792362,-2.195300,2.504674],[0.539132,-4.607335,-3.582837,-4.900524,8.021422,-3.520932,1.862060,8.952991,-6.840687,-3.467869,4.781232,1.118888],[-1.389300,0.744275,-9.013843,3.099553,-2.985585,-8.114337,-2.725341,-8.648335,-5.591156,-9.064923,5.931065,0.409396],[8.376865,8.140968,3.318736,-2.381679,-7.255304,-4.654691,4.192408,-7.576223,7.307907,-8.131918,1.260803,8.149496],[4.087027,0.163457,0.674024,-8.894198,-6.081660,5.931934,2.529185,8.859190,-1.941194,-7.200106,-0.889163,9.644992]],[[8.063398,0.126787,8.101298,-3.253905,-6.629477,2.330993,9.904177,2.431788,1.626617,7.088964,-4.815271,-2.406105],[-3.738581,-4.250502,2.764823,-8.276104,-2.820007,2.481651,-0.524020,-1.022454,-4.760446,-9.227775,-9.116519,9.040806],[-1.779506,-6.394690,-5.320921,0.609502,2.307013,0.289688,-2.733262,2.368792,9.056138,-4.159908,2.026158,-4.082356],[-6.291346,0.317875,-7.615323,-3.613759,2.460386,-7.564556,-2.153783,-0.265442,9.498183,-2.890010,0.996791,-1.726255],[5.686029,-1.076820,-4.877369,-7.851394,6.230579,4.473102,-6.821687,-8.405672,-1.828960,1.296565,6.952193,-5.516072],[7.462095,-0.191138,-8.868713,7.825921,5.590773,-7.664337,4.797651,-7.467400,-8.719991,-7.158854,3.627037,-7.878127],[7.214489,-6.416277,5.693307,-3.234743,-2.416388,6.850775,4.891064,-0.919830,-4.448431,-1.802619,2.561399,-9.335458],[-7.838078,-6.488838,-1.878264,9.443511,2.731890,-2.859309,-9.179803,2.742480,9.906824,-1.059223,-8.219445,5.498703],[9.586990,-6.625120,-9.641821,9.092728,3.069347,-2.037501,-0.989377,-0.513103,-4.311549,1.904989,7.621011,6.366726],[6.009302,9.319496,-6.741377,6.773731,1.175238,-9.122812,-7.430167,-2.349828,6.975894,0.861496,9.301980,0.892294],[-8.591151,-4.071761,-1.397281,-2.088659,5.277482,7.450928,-7.581067,-7.570837,-5.603949,4.577076,-2.645647,-9.614491],[5.330866,5.015857,8.183906,-7.107208,7.251691,8.037510,-3.628268,-0.354304,-7.097531,4.215419,-7.127508,-8.765991],[-2.106823,8.276016,0.760839,-4.539528,-7.782759,5.318637,3.608248,4.462432,4.451606,-3.240333,3.290946,3.247287],[-7.594067,-8.910572,-1.193030,6.666289,2.012540,5.692334,-0.633713,0.256768,-7.056032,9.165602,-1.763745,-4.326376]],[[9.031233,0.128884,1.370672,-6.538545,1.411320,-8.143632,1.348463,-4.255373,9.476924,-8.965047,1.594443,-5.773245],[-2.899605,1.591140,-2.997530,-1.333039,-4.281837,-6.116894,4.192624,8.776635,-6.640545,-8.740022,9.660531,-2.468551],[3.190594,3.416099,-9.599737,-7.429437,8.074980,3.232165,3.906788,1.442225,4.684200,-1.880371,7.570755,5.849808],[0.583115,5.083576,-2.691972,0.068760,-3.701859,-0.226545,-7.309419,-6.553963,0.681793,-0.870155,9.440381,-6.811206],[0.476022,3.776293,8.069356,-6.007605,0.399253,0.470876,7.300930,4.135177,9.666418,-7.694721,-3.337535,3.232341],[-5.866321,-1.428605,-4.235264,-1.138322,9.688662,-6.021344,-4.548517,-4.120242,-2.826254,8.627180,-3.858851,-5.355707],[1.826811,-5.226613,1.437398,0.005707,9.699904,1.966609,-7.277787,5.720855,-2.393326,-4.746978,3.073839,-4.852092],[7.646968,2.372196,-3.030032,5.360695,7.854621,1.598635,-3.698045,-7.969079,-0.545108,3.419674,-5.451742,0.678655],[-4.600617,7.632934,-1.604578,3.000790,-9.912187,7.023527,-4.632551,-4.417745,-5.026975,-5.797735,-6.354946,-8.395434],[2.183085,0.433086,3.088342,-6.592861,9.379343,9.961010,5.241390,7.409638,5.347047,-6.172798,1.267130,6.348897],[-9.325894,-7.227490,6.513820,6.280829,-6.955202,-8.248966,4.304664,6.161236,-9.084163,-6.447767,-4.365422,4.373510],[2.233672,1.201442,-1.050287,-8.620699,3.515129,6.912533,-1.468438,1.644290,-2.535016,-8.553093,-7.785797,-9.464500],[-4.351532,-1.542906,-1.554267,-4.169079,5.571188,-7.528681,5.609248,-1.811617,-9.207449,7.256431,-5.419388,2.082876],[-9.194985,1.685769,-6.620341,3.075957,-7.240204,1.741146,-1.796581,-8.932331,4.122066,1.068564,-7.130711,7.427680]],[[-0.113135,7.489999,3.811035,2.877936,-5.883084,-2.234230,-3.508965,7.158996,9.731425,9.221938,-0.981532,4.685513],[-7.777625,-7.638646,-2.089589,1.433704,-3.285727,-9.454564,-7.461402,4.685712,-4.185446,2.306214,-4.562894,0.593861],[0.342543,9.013795,3.863116,9.421760,0.724632,-7.063762,-9.439812,-6.926682,-7.708742,-9.039488,-7.142204,4.516680],[-2.051289,5.530668,5.107338,-2.828442,9.000856,-8.337298,8.533655,9.799040,-3.473047,-2.725279,8.057482,3.226030],[3.064984,-4.751218,-5.731398,-6.766110,-5.190151,3.514180,4.300768,-1.249567,8.288602,1.655082,1.043522,0.766481],[-8.963376,-0.532666,0.131902,5.208847,9.748669,-9.799613,5.227556,-8.974640,0.335320,2.500633,-0.307117,3.469131],[-8.174334,-8.543481,6.218351,3.991719,1.239506,-3.301950,-8.311114,-1.792218,8.496124,8.412496,5.075506,1.154733],[6.821459,0.584351,-4.169369,8.357233,4.756956,-2.249185,6.427131,-2.314734,1.840643,7.594234,-5.201958,-4.085494],[9.019206,-6.295334,2.724555,3.377137,-0.095560,-5.619821,3.325979,-8.072670,2.574473,-6.209366,-3.015116,-9.817680],[1.947874,9.330657,6.051135,1.314591,2.984236,3.185006,5.122387,2.731028,-8.081528,3.222177,4.743645,-5.755567],[-0.407010,-1.651202,-8.101303,0.447086,-9.070165,0.952905,-8.003550,-1.711913,4.453095,-0.200364,-0.659162,-6.556178],[-6.851015,9.357858,1.706203,-0.813035,-4.501412,5.780821,7.955245,-9.189268,4.653080,5.009301,-2.130674,-4.504418],[-5.679628,5.435297,-1.361560,8.062949,3.556874,4.286394,-1.954089,-2.701379,-7.193143,7.868754,-9.582191,0.541271],[-7.305522,2.291988,7.717288,-6.260243,6.390738,-4.928186,7.481515,-8.884084,-0.751689,-9.404373,9.754565,7.346164]],[[-5.792247,-6.572228,-5.241836,-6.748199,-5.907345,-1.701095,4.602529,9.349831,-9.508262,7.825278,5.429956,-1.048928],[3.446810,0.583705,5.664803,-1.815283,1.421709,8.711618,-5.913985,-5.160479,8.314611,-0.676159,0.818125,7.143356],[-0.322012,-0.829055,-1.527275,0.243109,9.026606,2.275246,-5.907055,-4.573389,-4.938682,8.028918,7.736522,4.413753],[-4.411009,-6.530731,-2.944523,2.112863,-8.530188,-3.691946,-0.221047,-3.460043,-5.439248,6.006411,3.702062,6.473743],[7.765861,-8.524871,-5.655490,5.687979,-2.332916,7.255852,-7.738655,7.957134,-5.447919,1.221049,4.630443,-6.301447],[5.790455,-6.422121,3.602283,-5.561536,9.483333,4.341902,6.063433,-9.555023,-6.152044,-5.776293,7.593099,0.236593],[1.788960,-5.077207,-2.556029,7.539789,-7.243400,-4.288673,8.426639,-9.429747,-1.939951,-8.135002,8.751975,8.950125],[-9.965484,-5.918794,0.322737,0.281666,-7.752231,1.186936,-5.265000,6.695909,2.541230,-3.521486,-5.238028,1.317672],[5.337047,-8.479802,-4.199831,-4.268869,4.009183,-0.884907,8.988470,-6.790869,-8.450254,-5.343322,-7.365617,9.691048],[-2.972606,-1.390242,1.936620,2.404867,1.028438,9.734355,1.161845,5.908071,-9.976018,8.154986,1.729665,2.403474],[7.608650,9.988113,5.698614,7.288789,-4.606719,9.310473,6.273951,-2.841506,-4.132579,9.699853,-0.467957,8.718897],[-5.994364,-9.788064,-2.452286,2.902506,8.068415,3.257928,-8.841156,-5.604439,-3.343730,-9.060142,-4.757273,-1.857703],[-3.225108,-6.617331,-5.801389,3.727565,-8.956930,0.785133,3.517910,9.729802,3.826972,-8.060981,7.682960,-9.187533],[-6.088996,-4.029052,-5.493685,3.195181,-9.130140,2.130433,6.214814,6.930548,-3.306651,-6.422301,-8.385635,-9.432652]],[[-0.116863,4.009016,-0.872210,6.357293,-6.205709,5.485021,6.202151,2.549737,3.182676,-2.581148,8.563151,-5.977630],[-7.469807,4.529086,-3.542335,-6.301422,-9.789511,0.958046,-0.067483,2.396882,-1.098524,3.276425,-0.507869,9.563089],[1.700632,-5.927185,0.546630,-6.449224,-1.085512,-5.039513,5.323939,2.915298,-4.545936,-8.486570,-4.010605,1.565427],[4.029340,-3.177761,4.719564,8.475454,4.536645,9.274582,-1.203695,7.593325,-9.728539,-6.304030,-1.538269,4.749433],[-5.774356,3.601504,-5.553056,4.905415,4.142478,5.865677,8.890241,8.920452,-1.229887,2.277204,-2.249237,1.115880],[7.612817,1.150388,-0.423692,-9.502914,-3.039537,6.656819,6.201234,-9.845315,-9.953848,1.316259,-0.373644,-5.527897],[-6.468859,-5.315621,-5.597257,6.346159,4.860584,-4.555581,2.742662,-9.651956,-5.966312,-5.813624,-1.648044,7.915177],[-7.429179,-3.567475,3.475364,-3.911525,-9.247249,3.111638,-6.913391,-7.838180,2.478355,0.507988,-7.635382,-3.167298],[5.391697,-3.274513,-0.932484,-0.637387,-0.133028,3.330983,-5.722981,8.647859,-3.590422,0.147301,8.447642,-3.422242],[-8.496445,-4.085234,3.805586,-5.290358,9.435910,-6.820293,-8.616822,2.215317,1.786513,-4.151190,-0.774614,4.678442],[-0.777458,6.361884,-6.268256,-6.149861,-6.197442,1.526364,-2.123466,-7.208004,-8.206141,8.843477,-9.005157,-7.890844],[2.564422,5.402675,-9.096118,9.617032,0.012891,1.509711,-9.674235,7.597776,-1.052234,3.961601,-0.961139,-5.391604],[-2.428151,6.696143,-0.833009,0.822785,-9.563152,2.551168,9.581084,-7.789822,-3.223972,-6.836282,3.133829,1.391211],[6.779143,-5.144152,-3.278760,-4.506816,-3.149427,2.609421,0.618718,8.093832,7.877346,9.096649,4.015796,-6.938515]],[[4.189063,-8.603011,-3.327993,-0.846308,-1.449906,5.738740,1.917244,-4.360666,7.783845,5.814366,-0.059418,-6.526660],[1.134209,-8.408763,5.235468,-4.450679,7.729743,-0.374117,-6.387977,1.707605,8.812828,-4.518831,8.465530,5.698025],[-1.215000,7.569234,8.159071,2.044792,7.221037,5.853530,-3.258293,1.251333,-8.517861,7.265265,-1.688802,-6.575300],[7.308614,7.784404,2.919845,3.075773,2.095121,-7.351373,-0.030914,4.913333,2.822353,9.980065,2.434333,4.440920],[-2.407513,-5.839512,-8.833716,-9.451561,4.013248,-6.890202,-1.654586,2.180121,-8.476631,-0.658349,9.072857,1.130076],[-2.568365,-0.414506,2.511881,-8.586682,-8.196009,6.272010,8.397616,-9.803691,6.378820,6.391514,-1.306457,2.652059],[-0.074507,2.289954,1.711656,-5.491731,9.216588,5.179171,-1.149722,-6.580373,7.660944,7.890209,-9.077361,8.540075],[-0.349773,1.094607,6.294225,-4.607111,8.789481,2.965792,-6.318098,-3.202915,-3.848444,-7.579346,9.642785,8.800550],[-7.801183,9.313682,-6.802485,-8.922842,2.191697,0.435943,-3.972171,-2.220900,-3.034184,7.591782,4.121307,-1.722597],[8.521610,0.023031,-5.155693,3.855624,0.770262,3.897422,-8.803523,9.301099,4.342857,-5.678735,-7.705047,2.484885],[1.591314,7.249999,2.322891,-8.091437,-8.269174,6.977445,1.627613,-0.529115,-6.038166,-3.353839,2.005623,-4.027591],[7.586018,9.932186,-0.884825,-9.522679,6.637086,-1.533681,8.023520,8.969006,-2.085490,-2.301348,-3.642514,9.123890],[-2.588670,9.887391,6.576511,9.882567,-1.308296,-0.101484,8.323067,-0.720555,-1.354163,4.500210,-6.712436,7.460813],[-3.500709,-4.871147,-1.653600,9.372996,5.895693,0.284620,-2.773456,6.975032,0.194279,8.601869,-9.944958,2.187634]]], dtype = "float64")#candidate|889|(8, 14, 12)|const|float64
uop_890 = relay.sin(const_889.astype('float64')) # shape=(8, 14, 12)
output = uop_890
output2 = uop_890
func_897 = relay.Function([], output)
mod['func_897'] = func_897
mod = relay.transform.InferType()(mod)
mutated_mod['func_897'] = func_897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mutated_mod.get_global_var('func_897')
call_898 = func_897_call()
output = call_898
func_899 = relay.Function([], output)
mutated_mod['func_899'] = func_899
mutated_mod = relay.transform.InferType()(mutated_mod)
var_970 = relay.var("var_970", dtype = "float64", shape = (2, 1, 7))#candidate|970|(2, 1, 7)|var|float64
var_971 = relay.var("var_971", dtype = "float64", shape = (2, 6, 7))#candidate|971|(2, 6, 7)|var|float64
bop_972 = relay.greater(var_970.astype('bool'), var_971.astype('bool')) # shape=(2, 6, 7)
uop_983 = relay.sinh(var_970.astype('float32')) # shape=(2, 1, 7)
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
var_995 = relay.var("var_995", dtype = "uint64", shape = (320, 1))#candidate|995|(320, 1)|var|uint64
call_994 = func_561_call(relay.reshape(var_995.astype('uint64'), [8, 8, 5]))
call_996 = func_561_call(relay.reshape(var_995.astype('uint64'), [8, 8, 5]))
uop_1001 = relay.exp(uop_983.astype('float32')) # shape=(2, 1, 7)
bop_1005 = relay.left_shift(uop_1001.astype('int32'), var_995.astype('int32')) # shape=(2, 320, 7)
output = relay.Tuple([bop_972,call_994,bop_1005,])
output2 = relay.Tuple([bop_972,call_996,bop_1005,])
func_1010 = relay.Function([var_970,var_971,var_995,], output)
mod['func_1010'] = func_1010
mod = relay.transform.InferType()(mod)
var_1011 = relay.var("var_1011", dtype = "float64", shape = (2, 1, 7))#candidate|1011|(2, 1, 7)|var|float64
var_1012 = relay.var("var_1012", dtype = "float64", shape = (2, 6, 7))#candidate|1012|(2, 6, 7)|var|float64
var_1013 = relay.var("var_1013", dtype = "uint64", shape = (320, 1))#candidate|1013|(320, 1)|var|uint64
output = func_1010(var_1011,var_1012,var_1013,)
func_1014 = relay.Function([var_1011,var_1012,var_1013,], output)
mutated_mod['func_1014'] = func_1014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1039 = relay.var("var_1039", dtype = "float32", shape = (5, 2, 12))#candidate|1039|(5, 2, 12)|var|float32
uop_1040 = relay.asin(var_1039.astype('float32')) # shape=(5, 2, 12)
func_616_call = mod.get_global_var('func_616')
func_619_call = mutated_mod.get_global_var('func_619')
var_1053 = relay.var("var_1053", dtype = "uint16", shape = (672,))#candidate|1053|(672,)|var|uint16
const_1054 = relay.const([[7,1,9,-9],[-7,1,6,-3],[-2,1,-1,1],[4,-3,-7,-5],[1,2,-7,2],[-9,2,-7,-8],[-5,-8,-1,-10],[-2,9,4,-4],[9,-6,-5,2],[1,1,-3,7],[-9,4,-4,5],[9,-5,-10,-9],[5,7,6,-5],[-5,5,7,-6],[6,8,-4,8],[-9,-6,2,-9],[-3,-8,-8,-3],[1,-3,-9,5],[-6,-7,-8,-6],[10,7,9,10],[6,10,10,9],[3,-10,-10,8],[-9,-8,2,3],[6,-3,-8,7],[-8,10,-10,1],[-10,6,5,-5],[10,3,-7,-3],[8,8,-8,2],[3,6,-10,7],[-6,-9,6,7],[-9,-10,-9,-1],[-9,-5,-5,-3],[-8,2,-3,-5],[1,-4,-9,-4],[3,7,7,1],[9,2,-2,2],[1,-5,2,-7],[-5,9,2,-4],[-9,7,9,9],[3,-1,6,2],[-7,6,-8,-4],[2,8,-9,8],[-3,2,-2,-1],[-4,-9,-6,-10],[7,-4,-8,7],[2,-5,8,-8],[10,-5,5,-9],[-8,1,-7,-9],[-8,-1,-1,-8],[6,5,1,-6],[-7,5,-9,-3],[1,3,7,-6],[2,3,8,8],[9,9,-9,10],[10,-8,-10,-7],[6,-10,-9,10],[-6,7,-8,-9],[8,-6,-2,3],[-2,10,3,-10],[7,-2,10,8],[-6,-9,9,1],[5,4,-2,1],[7,5,-1,9],[-6,-2,10,2],[6,10,9,-3],[-7,-4,-4,-4],[-8,-1,5,-7],[-8,9,1,-5],[3,2,-7,8],[2,4,9,-6],[-8,-6,-8,3],[-1,7,-4,-1],[-10,-10,-8,10],[2,-7,-3,-10],[4,3,10,-10],[-8,5,9,-8],[-10,5,-7,-9],[10,-4,3,-5],[1,-8,6,3],[3,6,5,1],[2,-3,-1,-10],[10,-6,-7,7],[9,-8,-3,8],[9,10,-6,7],[-8,-7,-5,-2],[2,-8,-8,-6],[2,1,4,-3],[-3,-7,5,9],[6,-4,4,6],[3,4,8,-10],[5,-8,-3,2],[-4,-7,6,-2],[-1,-5,-4,10],[6,-1,-5,7],[-2,-8,5,-3],[10,-8,3,1],[8,-8,9,-2],[-3,1,3,5],[-2,2,-3,-8],[4,-1,8,2],[10,-10,9,7],[-2,7,8,-3],[-7,10,10,4],[4,1,-9,-7],[3,1,-9,4],[-7,-1,5,5],[-8,3,-3,-2],[-2,8,-7,2],[4,2,4,-9],[8,-5,-3,-6],[-7,9,-6,8],[3,1,3,-10],[9,-2,-9,-3],[10,-4,10,4],[-1,-9,3,4],[3,5,-9,3],[-8,-10,-8,8],[8,-3,-1,8],[-7,8,-4,5],[8,-3,7,-4],[1,-6,4,6],[-5,2,5,8],[7,-3,8,10],[10,-10,9,3],[-7,-8,-2,-7],[-5,-3,-1,2],[6,-8,-3,-8],[-2,-1,-4,1],[-5,6,-7,-4],[-2,-3,-9,10],[2,10,8,10],[10,-3,6,-8],[4,10,-7,-4],[-3,-3,-3,10],[2,-1,-9,2],[-10,4,10,-9],[-5,6,3,-2],[-6,-1,-7,4],[-10,-2,4,8],[1,-4,-3,-5],[-1,-10,-2,5],[5,-9,-6,4],[6,6,-3,5],[-6,7,1,-8],[5,-1,10,5],[1,-10,6,4],[1,3,-6,-10],[-7,-4,8,-5],[1,10,-3,9],[-8,2,4,-6],[-7,10,7,-8],[8,-7,5,9],[-9,9,3,-7],[-10,7,-6,-10],[-1,-6,4,-5],[7,7,7,8],[-5,9,7,-1],[4,1,-10,-2],[-3,9,2,8],[-9,1,-2,-1],[6,-7,5,-7],[5,-8,-9,5],[-9,-1,-10,2],[5,7,-2,6],[-10,8,2,-4],[-3,1,-3,6],[-1,-4,-6,-4],[10,10,-10,8],[3,3,3,-4],[4,-10,4,-10],[5,-7,10,3],[3,-2,10,-10],[7,-10,-5,-7],[-2,5,-5,10],[-8,-10,-10,-10],[4,3,3,-1],[-9,9,5,-10],[-4,-10,9,-6],[9,-7,9,-4],[-1,-1,2,-3],[10,4,9,-10],[-10,-2,2,-8],[-6,-2,4,9],[2,-8,-1,5],[4,-7,-3,7],[-1,2,7,-6],[5,-7,3,6],[8,-2,-6,10],[-4,4,8,-1],[-10,-2,-3,9],[6,8,-4,5],[-8,-2,-3,4],[-1,-7,2,8],[10,-9,8,-10],[-6,4,-1,-5],[-7,3,9,-7],[10,1,-1,3],[1,-2,-2,3],[-1,9,5,2],[8,4,-5,-10],[-5,6,-10,-9],[1,-9,-4,-10],[-9,-8,10,8],[5,7,-3,4],[6,5,-7,8],[-6,2,1,-6],[10,5,-3,-9],[-7,8,-1,-9],[10,-6,8,8],[3,5,-1,-2],[-6,10,4,-10],[4,-8,-10,-6],[10,-1,6,-6],[9,-2,-4,-1],[5,-4,1,-7],[-1,1,-3,4],[-9,-6,4,7],[-3,6,-5,-2],[8,-1,-7,3],[-5,-1,-1,4],[10,6,-3,-1],[-2,-6,4,1],[-1,9,1,7],[-8,4,3,-1],[1,-1,10,1],[-7,-3,2,-2],[-4,-2,-5,-1],[-5,-2,7,3],[1,-10,-6,-7],[7,-5,-1,3],[-8,-10,-2,-5],[6,-9,-3,10],[-8,8,-1,-6],[-2,9,-8,1],[-5,-8,-4,8],[-4,-2,9,2],[-4,9,5,6],[-8,3,7,-1],[-6,1,-6,9],[-4,-5,-5,-10],[7,-6,7,-10],[-7,3,8,6],[5,-2,-6,10],[-4,-3,-4,-7],[2,-3,-3,6],[-7,-4,2,-7],[-7,9,1,-3],[4,1,-9,-1],[2,-10,9,7],[-2,1,10,3],[8,-1,1,4],[-10,-5,5,-9],[-10,-4,-2,6],[-1,-10,-6,10],[-6,5,-7,-3],[5,-5,4,9],[-3,-6,3,1],[-9,-7,-7,-1],[8,-8,-6,-1],[1,-3,-9,10],[7,-9,7,6],[-4,-3,8,1],[1,-2,-2,-7],[-8,-7,-7,1],[2,6,-3,-7],[5,-5,5,10],[5,2,4,10],[4,-1,4,-4],[-5,8,-5,2],[-7,3,-2,8],[5,-7,-1,-1],[4,-3,5,7],[-10,-5,-9,4],[-3,-8,8,-4],[-5,-1,10,9],[-3,2,-4,7],[3,-8,8,-8],[9,-10,3,-9],[7,-7,2,-10],[-10,3,1,-9],[-2,7,-1,5],[-3,6,-8,-6],[-6,3,1,-5],[6,-7,7,-3],[3,1,7,3],[-8,7,5,-3],[6,-1,9,-8],[-3,6,-10,-9],[1,6,-3,-7],[9,8,-9,5],[7,2,9,3],[-6,-1,7,9],[7,5,6,10],[-8,-7,9,2],[-7,2,-6,-7],[-3,9,6,10],[-5,5,7,-5],[6,-1,6,-1],[-10,9,9,8],[-4,-5,-5,6],[-10,-1,6,1],[10,7,7,-8],[-2,-3,-5,-6],[-8,-1,-6,4],[8,2,-1,-6],[-6,8,-10,10],[-5,4,4,1],[10,8,9,-1],[-5,-8,5,7],[6,7,-2,-7],[-10,9,2,-9],[-1,10,6,6],[-2,8,-8,-1],[2,10,4,3],[2,-9,3,9],[-4,-4,8,-2],[4,-10,-8,-9],[-8,4,-10,-6],[-2,-9,5,-1],[-4,-9,-4,-5],[-2,-3,5,-1],[-4,-4,6,7],[9,3,1,-2],[8,9,2,-2],[-8,-7,10,-7],[4,7,3,10],[-9,5,6,6],[9,-7,9,7],[6,-10,3,1],[1,9,-3,8],[-1,-1,-2,-10],[2,2,-7,-9],[-5,1,8,-7],[-9,5,-5,-3],[7,5,1,-10],[5,4,-5,6],[4,7,-9,-3],[3,2,2,-6],[9,10,-9,5],[-4,-5,-4,8],[10,3,2,-10],[5,-2,-9,-6],[2,-10,-8,-4],[-8,3,1,1],[7,-3,-10,-3],[-6,2,7,-4],[5,1,-1,-8],[-5,-2,-10,-10],[-6,7,5,-1],[-9,6,10,-7],[4,-10,5,7],[-7,-10,1,-6],[-4,-5,7,10],[8,1,6,4],[-8,-8,-2,-4],[-3,6,4,-10],[-6,-7,-10,8],[5,-9,9,-2],[10,9,4,-1],[-8,10,10,10],[5,-1,-6,-7],[8,3,-9,-2],[6,1,5,-6],[10,4,-6,-7],[4,7,5,-5],[10,-10,-5,-6],[-6,-1,-8,5],[-3,-9,3,-9],[2,-9,2,3],[1,10,8,5],[4,8,-4,-1],[1,-5,4,3],[2,6,-7,-7],[-2,4,-5,-7],[-8,-1,7,-7],[-10,5,6,3],[-4,-5,7,1],[9,1,-8,-2],[-3,-7,5,-1],[6,-10,-5,-4],[9,2,-1,7],[-10,-3,7,3],[8,-2,-5,7],[-10,8,9,6],[1,-6,-1,-2],[1,7,1,-8],[1,-4,-5,-10],[10,-10,-9,-9],[-4,-1,-9,-4],[-10,-8,3,2],[8,-2,8,7],[9,-1,6,9],[6,-7,-6,-5],[3,7,-9,-2],[6,-1,-6,-6],[-10,5,6,7]], dtype = "uint32")#candidate|1054|(396, 4)|const|uint32
call_1052 = relay.TupleGetItem(func_616_call(relay.reshape(var_1053.astype('uint16'), [6, 8, 14]), relay.reshape(const_1054.astype('uint32'), [1584,]), ), 1)
call_1055 = relay.TupleGetItem(func_619_call(relay.reshape(var_1053.astype('uint16'), [6, 8, 14]), relay.reshape(const_1054.astype('uint32'), [1584,]), ), 1)
output = relay.Tuple([uop_1040,call_1052,var_1053,const_1054,])
output2 = relay.Tuple([uop_1040,call_1055,var_1053,const_1054,])
func_1065 = relay.Function([var_1039,var_1053,], output)
mod['func_1065'] = func_1065
mod = relay.transform.InferType()(mod)
var_1066 = relay.var("var_1066", dtype = "float32", shape = (5, 2, 12))#candidate|1066|(5, 2, 12)|var|float32
var_1067 = relay.var("var_1067", dtype = "uint16", shape = (672,))#candidate|1067|(672,)|var|uint16
output = func_1065(var_1066,var_1067,)
func_1068 = relay.Function([var_1066,var_1067,], output)
mutated_mod['func_1068'] = func_1068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1147 = relay.var("var_1147", dtype = "bool", shape = (14, 11, 8))#candidate|1147|(14, 11, 8)|var|bool
var_1148 = relay.var("var_1148", dtype = "bool", shape = (14, 11, 8))#candidate|1148|(14, 11, 8)|var|bool
bop_1149 = relay.logical_or(var_1147.astype('bool'), relay.reshape(var_1148.astype('bool'), relay.shape_of(var_1147))) # shape=(14, 11, 8)
output = relay.Tuple([bop_1149,])
output2 = relay.Tuple([bop_1149,])
func_1156 = relay.Function([var_1147,var_1148,], output)
mod['func_1156'] = func_1156
mod = relay.transform.InferType()(mod)
var_1157 = relay.var("var_1157", dtype = "bool", shape = (14, 11, 8))#candidate|1157|(14, 11, 8)|var|bool
var_1158 = relay.var("var_1158", dtype = "bool", shape = (14, 11, 8))#candidate|1158|(14, 11, 8)|var|bool
output = func_1156(var_1157,var_1158,)
func_1159 = relay.Function([var_1157,var_1158,], output)
mutated_mod['func_1159'] = func_1159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1209 = func_897_call()
call_1210 = func_897_call()
func_1065_call = mod.get_global_var('func_1065')
func_1068_call = mutated_mod.get_global_var('func_1068')
var_1228 = relay.var("var_1228", dtype = "float32", shape = (6, 20))#candidate|1228|(6, 20)|var|float32
const_1229 = relay.const([4,-9,-3,2,1,-10,-10,6,5,-8,-5,-3,-7,-4,-6,6,-8,-8,-3,-10,2,5,-6,-9,-7,5,7,7,-8,7,-7,-5,6,-7,-4,3,8,5,9,5,4,-7,10,5,4,-4,-4,7,4,9,4,3,2,-8,-3,-8,-2,8,-1,-10,6,8,-4,-10,-3,-6,2,9,-9,-6,9,-9,-1,3,-1,-6,8,9,-1,2,-9,-10,-10,-7,-7,1,-9,7,9,-1,-6,1,1,7,8,-7,-8,8,-8,-8,9,1,10,-7,9,-3,-5,8,-2,-7,4,7,-2,1,9,-5,9,-6,5,9,-1,8,7,-1,10,-9,-1,6,1,-3,7,1,-3,6,-10,1,-9,7,-6,-7,8,1,-4,5,6,-6,-6,-10,3,9,3,7,1,-10,-4,-3,2,-2,-5,-2,2,6,6,-9,4,-2,-9,8,5,-5,4,-1,-4,-7,-9,9,-8,1,3,-2,-9,-3,-7,6,-1,-1,3,-3,5,7,10,7,-3,1,10,2,-2,-8,5,1,7,3,7,8,-8,6,-10,-4,-1,10,2,1,-6,5,2,-9,9,8,8,8,8,-1,-8,3,4,3,5,10,-10,3,10,-1,-4,6,5,-7,9,3,-5,-1,10,-2,5,-6,-8,8,-1,-8,-8,-6,-8,7,-10,-7,9,-3,1,3,9,2,10,-5,9,-7,-6,3,5,3,2,-10,7,9,-9,5,-6,5,-9,7,4,6,-7,5,-10,-7,10,3,-1,7,-7,-9,-9,8,-7,-5,-9,2,-3,9,-7,4,-6,-5,1,8,-4,2,-1,1,-5,8,1,-9,-1,6,7,-7,6,1,-4,7,5,-1,-8,-6,-1,7,6,-4,6,-7,9,5,6,5,6,9,-9,-10,5,10,-2,-7,4,-7,9,-5,-8,6,-8,-7,10,6,8,-6,3,10,4,-4,-7,1,7,-6,6,-10,-2,-9,-4,-4,4,-9,8,2,5,2,-9,1,9,-10,9,1,8,6,6,6,9,-7,-5,3,-5,5,10,-9,-3,-3,-8,4,4,-7,1,10,-1,9,8,-7,8,8,-7,-6,3,-3,-6,4,-8,-10,-6,-10,-9,-2,-10,-1,-2,6,-5,10,-2,8,1,-7,5,-9,-10,-8,8,8,-3,-8,-10,-6,7,-3,-10,-6,-5,1,2,10,9,-3,-2,-6,-1,-9,9,4,-3,4,9,6,2,-3,9,6,-3,-4,-9,-9,-5,1,-4,-9,-3,-10,-2,6,4,-10,-5,1,-5,-5,9,7,4,7,3,7,-6,10,-5,-4,8,-2,-8,10,-1,-10,-1,-4,2,-3,7,5,-8,1,-3,-2,9,-1,8,2,6,-2,6,-2,-7,-5,6,8,-7,7,6,-1,3,1,3,5,-5,8,2,2,-6,2,9,8,-8,5,4,6,8,-3,3,4,-4,1,-4,-3,-10,-4,4,-4,-7,-6,-5,-10,-2,-7,2,4,6,10,-6,2,-10,4,10,-6,-9,10,5,-10,-5,-3,-6,3,-10,-2,7,-4,-2,-1,-8,-9,-9,2,9,10,-7,-10,-8,7,-7,-6,-4,-1,1,-9,7,8,7,10,2,-1,-3,-5,6,-10,-2,-5,-9,5,8,-10,3,1,-10,5,2,-2,-9,-5,1,-5,-4,-3,9,-4,5,-2,-4,8,5,-5,-1,2,-5,4,4,3,4,-10,6,-7,-10,9,3,7,5,7,-10,-8,5,3,5,-7,3,-1,-3,-2,-9,-8,-2,-10,-8,3,-5,-3,6,10,-3,8,6,7], dtype = "uint16")#candidate|1229|(672,)|const|uint16
call_1227 = relay.TupleGetItem(func_1065_call(relay.reshape(var_1228.astype('float32'), [5, 2, 12]), relay.reshape(const_1229.astype('uint16'), [672,]), ), 3)
call_1230 = relay.TupleGetItem(func_1068_call(relay.reshape(var_1228.astype('float32'), [5, 2, 12]), relay.reshape(const_1229.astype('uint16'), [672,]), ), 3)
var_1231 = relay.var("var_1231", dtype = "uint32", shape = (396, 4))#candidate|1231|(396, 4)|var|uint32
bop_1232 = relay.logical_or(call_1227.astype('bool'), relay.reshape(var_1231.astype('bool'), relay.shape_of(call_1227))) # shape=(396, 4)
bop_1235 = relay.logical_or(call_1230.astype('bool'), relay.reshape(var_1231.astype('bool'), relay.shape_of(call_1230))) # shape=(396, 4)
func_1065_call = mod.get_global_var('func_1065')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_1241 = relay.TupleGetItem(func_1065_call(relay.reshape(var_1228.astype('float32'), [5, 2, 12]), relay.reshape(const_1229.astype('uint16'), [672,]), ), 3)
call_1242 = relay.TupleGetItem(func_1068_call(relay.reshape(var_1228.astype('float32'), [5, 2, 12]), relay.reshape(const_1229.astype('uint16'), [672,]), ), 3)
var_1275 = relay.var("var_1275", dtype = "uint32", shape = (396, 4))#candidate|1275|(396, 4)|var|uint32
bop_1276 = relay.floor_divide(call_1227.astype('float64'), relay.reshape(var_1275.astype('float64'), relay.shape_of(call_1227))) # shape=(396, 4)
bop_1279 = relay.floor_divide(call_1230.astype('float64'), relay.reshape(var_1275.astype('float64'), relay.shape_of(call_1230))) # shape=(396, 4)
output = relay.Tuple([call_1209,var_1228,const_1229,bop_1232,call_1241,bop_1276,])
output2 = relay.Tuple([call_1210,var_1228,const_1229,bop_1235,call_1242,bop_1279,])
func_1284 = relay.Function([var_1228,var_1231,var_1275,], output)
mod['func_1284'] = func_1284
mod = relay.transform.InferType()(mod)
var_1285 = relay.var("var_1285", dtype = "float32", shape = (6, 20))#candidate|1285|(6, 20)|var|float32
var_1286 = relay.var("var_1286", dtype = "uint32", shape = (396, 4))#candidate|1286|(396, 4)|var|uint32
var_1287 = relay.var("var_1287", dtype = "uint32", shape = (396, 4))#candidate|1287|(396, 4)|var|uint32
output = func_1284(var_1285,var_1286,var_1287,)
func_1288 = relay.Function([var_1285,var_1286,var_1287,], output)
mutated_mod['func_1288'] = func_1288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1311 = func_897_call()
call_1312 = func_897_call()
output = relay.Tuple([call_1311,])
output2 = relay.Tuple([call_1312,])
func_1325 = relay.Function([], output)
mod['func_1325'] = func_1325
mod = relay.transform.InferType()(mod)
output = func_1325()
func_1326 = relay.Function([], output)
mutated_mod['func_1326'] = func_1326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1340 = func_897_call()
call_1341 = func_897_call()
func_1284_call = mod.get_global_var('func_1284')
func_1288_call = mutated_mod.get_global_var('func_1288')
var_1358 = relay.var("var_1358", dtype = "float32", shape = (60, 2))#candidate|1358|(60, 2)|var|float32
var_1359 = relay.var("var_1359", dtype = "uint32", shape = (1584,))#candidate|1359|(1584,)|var|uint32
call_1357 = relay.TupleGetItem(func_1284_call(relay.reshape(var_1358.astype('float32'), [6, 20]), relay.reshape(var_1359.astype('uint32'), [396, 4]), relay.reshape(var_1359.astype('uint32'), [396, 4]), ), 3)
call_1360 = relay.TupleGetItem(func_1288_call(relay.reshape(var_1358.astype('float32'), [6, 20]), relay.reshape(var_1359.astype('uint32'), [396, 4]), relay.reshape(var_1359.astype('uint32'), [396, 4]), ), 3)
func_93_call = mod.get_global_var('func_93')
func_95_call = mutated_mod.get_global_var('func_95')
var_1367 = relay.var("var_1367", dtype = "float32", shape = (9, 4))#candidate|1367|(9, 4)|var|float32
call_1366 = func_93_call(relay.reshape(var_1367.astype('float32'), [1, 6, 6]))
call_1368 = func_93_call(relay.reshape(var_1367.astype('float32'), [1, 6, 6]))
output = relay.Tuple([call_1340,call_1357,var_1358,var_1359,call_1366,var_1367,])
output2 = relay.Tuple([call_1341,call_1360,var_1358,var_1359,call_1368,var_1367,])
func_1370 = relay.Function([var_1358,var_1359,var_1367,], output)
mod['func_1370'] = func_1370
mod = relay.transform.InferType()(mod)
var_1371 = relay.var("var_1371", dtype = "float32", shape = (60, 2))#candidate|1371|(60, 2)|var|float32
var_1372 = relay.var("var_1372", dtype = "uint32", shape = (1584,))#candidate|1372|(1584,)|var|uint32
var_1373 = relay.var("var_1373", dtype = "float32", shape = (9, 4))#candidate|1373|(9, 4)|var|float32
output = func_1370(var_1371,var_1372,var_1373,)
func_1374 = relay.Function([var_1371,var_1372,var_1373,], output)
mutated_mod['func_1374'] = func_1374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1376 = func_897_call()
call_1377 = func_897_call()
const_1380 = relay.const([[[3.068851,2.366295,-0.520037,-7.645062,-5.265930,2.452052,-9.032610,-6.023146,-7.246056,-6.845840,2.857958,1.079084],[1.651749,-1.591557,-8.503604,2.820971,1.806786,-9.960831,-2.600179,-6.270540,-8.013681,1.228479,0.549761,0.707521],[2.286008,7.972997,-0.277674,4.676191,-7.799338,9.835940,-9.929334,-4.654345,7.740119,2.925390,7.059525,2.428293],[-8.566789,-6.265343,-1.764057,9.075657,-1.057945,-0.630377,-9.798029,-4.574888,-2.701423,8.105803,-1.461226,-6.215145],[-8.150583,8.413596,7.460413,0.238458,5.337422,6.452683,-7.676981,1.564479,-7.574432,1.103885,-5.211119,5.433197],[0.880204,3.684406,-6.678712,-4.741243,1.950930,1.482816,-2.304864,-9.076629,-8.927302,3.184330,1.164440,2.742099],[6.135022,-9.408764,-6.029839,-7.410591,-2.904689,1.591534,6.855128,-2.297047,7.935417,6.960422,-4.020273,7.032394],[7.596952,5.791560,-5.189187,-8.903774,1.796757,9.471928,-9.989776,-7.428721,0.797940,-3.292611,1.417319,5.579272],[-1.964250,-3.719376,5.449657,6.276454,-5.941180,2.681740,-8.917612,-7.936272,-3.058247,3.356182,4.291445,1.732932],[-9.874671,6.374938,-9.236487,-6.552200,9.157779,-6.821468,5.916817,-7.209176,-5.994405,-7.262783,0.139577,1.522997],[-3.046470,1.458781,-8.876301,-2.419910,-9.280077,-1.804164,-4.551142,9.677424,9.233852,-8.983088,7.902999,-3.278878],[-5.575673,-2.644987,-4.767920,2.828574,8.711326,-9.886957,-6.036334,-5.629099,1.306356,6.451701,3.558116,0.095216],[-6.112426,4.081494,-6.767345,-0.229945,-2.562442,0.087229,-1.498941,4.517382,4.706731,5.245716,-2.952822,-7.297550],[-3.494313,-6.762230,-1.893057,-1.761305,4.506543,-2.123474,6.425711,2.226588,-7.453813,-1.642325,0.286122,-8.455484]],[[-9.207191,-4.221164,5.604178,-9.682691,4.718005,1.784331,-5.169033,-8.595545,-5.999615,-3.344148,3.958822,3.294250],[-6.986902,-0.226085,-8.297499,-9.309260,-4.601878,6.880731,8.508536,2.033404,-0.729841,-3.667754,-6.442927,4.282023],[9.389939,0.715511,2.597734,-3.078530,-4.520042,2.386472,5.605396,0.336022,0.790897,3.682758,-3.200688,6.924951],[-3.482531,-6.631847,-6.187652,7.655115,5.961019,0.531677,3.366627,-1.626521,-5.198238,-9.261793,9.140930,-1.250596],[4.877150,6.754033,-8.867418,-0.971339,-4.415271,-3.189720,-7.984254,-4.939366,-4.614021,-3.222762,-3.633500,7.334375],[7.280461,-0.550660,-5.032571,6.104807,2.566219,2.129040,2.767635,-3.632032,-0.098716,-9.054667,-2.467154,-8.612089],[-9.263971,-9.435554,9.344167,-4.350745,-9.703470,8.281865,5.342130,-2.107943,4.386249,-7.059339,5.042040,-9.392426],[8.289644,1.796874,-2.304715,-1.730520,-4.675667,2.886966,0.196704,-6.897125,-2.817085,-4.547396,-7.988185,-0.415398],[-3.627089,-8.613414,0.541020,-1.438410,-1.718163,-6.007279,1.190877,9.207980,-3.725521,-1.606589,-4.834375,9.414445],[-3.587313,-3.210606,-6.848543,3.425378,-2.805745,-0.223499,-2.970626,-4.432160,-5.209367,1.211245,-3.060520,-1.020235],[4.968184,-8.481004,0.590978,6.219400,8.775179,0.958894,-9.515790,-4.108992,-8.961372,3.669870,2.723691,6.725066],[-3.374034,-5.272777,-2.686989,2.638095,5.410490,8.067271,8.213021,-5.369237,1.166284,-3.276786,-5.208238,-2.879665],[-4.814852,-4.653300,1.744277,4.141894,-5.065863,-4.596669,-2.526810,8.796876,5.562838,6.213629,1.203753,4.686649],[8.718637,-7.614394,1.953039,-4.522421,-0.181256,6.580254,1.309886,-2.717106,-0.023454,-5.322787,-5.451457,-5.457467]],[[-0.892398,6.114195,-9.953152,-1.867325,-6.240994,3.198093,6.763455,4.434126,-3.061180,-3.727443,-3.115350,-9.915619],[0.797805,2.526604,-3.737493,-4.707457,9.609894,-9.227568,-7.786010,6.219098,4.238290,-8.299524,5.397881,8.515692],[5.392283,0.204399,-3.391521,-2.779470,-2.530316,9.797729,-0.686884,7.480446,6.818891,0.549070,4.507355,7.949760],[5.918584,6.792805,4.962035,2.862780,-9.565296,-2.253359,-3.794282,4.705500,0.773796,7.741217,-2.145204,8.226253],[-1.865014,1.195504,-4.073751,-1.246526,5.194314,-4.208917,-0.698998,7.773534,-0.706099,4.063621,-6.889487,7.975543],[-3.031780,4.685999,8.102616,-0.293049,9.601673,5.157755,-2.016973,-0.309627,-1.343147,4.164133,-2.573033,8.892288],[-3.128544,8.466756,3.919463,-3.144531,6.342204,-0.932041,7.415835,-0.731921,9.386596,-2.768653,0.369950,7.931602],[1.715462,7.846379,1.062031,-7.225670,1.850692,-4.799158,-4.264123,-1.931230,7.232216,-3.402170,-3.249889,8.439119],[0.509468,2.726835,-5.651999,-0.628597,6.875492,9.499431,-7.309671,4.661610,4.515568,1.172054,-2.454300,0.375272],[-0.452168,-4.453356,-2.786063,-9.199909,9.828206,3.312300,-4.807287,1.138086,4.459896,-6.800471,-0.994487,6.973565],[-1.824783,2.684993,6.407003,-5.459190,9.110502,-4.837015,-8.970324,6.089900,-7.130318,-3.812247,-3.588026,9.784798],[-9.173986,1.631957,6.152708,8.482642,2.330398,-1.713833,2.823027,5.568543,-8.759835,3.023437,-9.780899,-0.442160],[3.900048,-3.584817,9.263307,5.109699,8.587023,-5.800235,5.635600,-1.309059,3.776224,2.111395,0.684283,0.463794],[-5.471145,0.288043,0.240297,-5.921441,-5.262100,-0.036309,-0.173358,3.766382,-5.328327,-6.541767,4.688602,4.058469]],[[4.577382,-2.486459,7.960933,-3.152652,-1.027435,-4.052386,-0.093627,-0.172889,1.810932,-4.138609,-2.198917,-3.876430],[2.795507,-8.494899,9.155753,0.488570,5.427512,-2.069651,4.543441,-6.199374,-9.964438,8.519656,4.871740,7.032535],[-9.930193,-2.152363,0.728669,-7.466917,3.021845,-6.154164,-0.483575,-1.320914,9.015374,-4.131231,5.971413,-1.773855],[6.708744,-2.496832,5.515255,-6.575326,6.961294,-2.401442,9.253592,-2.657309,3.484756,7.848859,-2.923921,4.759752],[-0.733204,9.085090,0.031554,0.737742,8.534445,4.415113,8.877297,6.370087,2.135037,-3.947278,-9.161261,0.066136],[0.522274,5.953543,-6.044822,0.820809,-8.946092,7.101688,-6.531389,-4.728544,-2.917098,-5.063443,3.962803,2.911416],[2.541265,3.950541,-9.440240,1.164231,-0.366828,8.421431,-8.317146,9.852421,8.464369,-0.568937,-8.217843,-7.008887],[-4.208774,-5.085885,-3.082490,-3.503517,8.366776,9.620517,5.920523,5.456222,5.576688,-2.287736,9.157093,-6.169828],[-7.388498,-1.415607,8.635003,-5.291470,5.149289,-6.343418,-8.936576,1.741752,-6.436693,6.223970,-6.293044,2.322971],[8.641554,8.941823,-5.299623,-1.285754,-7.045395,5.423921,1.624546,0.387283,-9.284789,-6.755773,8.916652,1.738437],[-5.400674,7.496383,9.341423,-6.651330,-5.399688,-3.519740,0.125059,-4.265541,7.834026,5.782409,3.408107,-0.159500],[-8.006446,-3.440940,-1.422709,-0.823466,-8.962671,2.953426,-4.684644,-0.332301,1.369507,1.959043,8.795275,-2.371100],[1.850807,5.463497,4.784575,5.615585,-5.914028,2.585583,7.135386,2.819876,2.079916,3.056730,-2.275445,-5.198627],[-2.325606,-2.791364,8.938144,9.139343,9.618327,0.502141,-1.458826,-8.346062,-2.943712,0.117634,9.720161,4.490890]],[[-1.990145,6.885382,2.089425,-5.736335,4.419645,3.750556,-1.342099,-6.983715,-8.383195,-3.948685,-6.413339,7.686169],[-9.201796,-5.104648,-9.240574,-3.743583,-7.275995,6.050165,7.632228,-8.859177,9.577814,-8.211289,-1.288812,0.412037],[-0.344149,9.524267,-5.717773,-4.609339,3.285040,5.274775,-3.412761,-4.596841,7.457419,-2.195930,-3.608084,8.969171],[3.110964,8.213123,-0.752635,-7.446324,-9.945499,9.026046,-3.893088,4.064100,-0.193289,8.116289,-2.389385,-9.786460],[-0.019930,-1.838017,1.320914,-3.342784,3.864636,-7.890200,-5.486244,6.911383,-1.530808,1.172819,-6.276839,-3.960845],[4.104315,2.404866,-6.194957,8.616308,3.863973,2.753709,-9.438443,2.141557,9.395556,6.759657,-5.842200,-7.100807],[-2.395030,2.916027,-0.685162,2.438553,-1.269852,9.482053,-4.008140,3.762061,-2.567892,-6.103184,-0.594321,7.261168],[9.712553,5.035826,4.133565,-6.649723,0.835407,-3.214909,-5.364155,-0.417719,-1.222705,8.206392,-1.499634,-7.259210],[7.213006,9.148330,-0.421475,7.142464,-5.381499,8.919414,-9.582151,5.339787,-8.007804,7.036811,9.353555,9.019094],[4.398628,2.433717,5.008729,-4.783345,-7.161371,-0.954486,-3.629939,7.079972,-4.889833,-4.751546,-7.432779,-1.538201],[7.469413,5.694334,1.511691,9.135907,4.659371,6.376441,-2.181313,8.905573,4.768281,-0.439808,5.665715,-9.912588],[-5.348142,-8.126377,-5.808641,1.143579,-9.209267,5.763493,9.762166,-9.307538,6.813749,4.240692,-6.379709,-9.492873],[-9.887820,6.141511,-8.561676,2.947176,3.204642,-3.395444,0.094513,9.999063,-3.258495,1.709112,8.334442,1.530677],[0.632532,0.029499,5.838641,-4.330829,-5.232354,-9.397126,2.562723,5.526590,3.044941,7.413224,-7.290013,8.608610]],[[2.737399,-2.333917,-6.049183,5.373267,1.673955,5.667946,-0.387465,-7.066381,-8.646960,-4.970878,1.786672,-3.809138],[2.198878,7.784374,-6.641402,-8.613533,1.151710,4.977791,-5.057408,-5.251437,6.909204,7.727805,5.564069,-3.582329],[-3.146899,4.022287,-6.512758,-6.561457,3.230714,8.431777,-9.705186,0.266938,7.609592,-8.164705,6.149810,9.588502],[-1.855881,9.385297,-2.591934,5.495825,-9.506370,-5.772307,-4.028252,-8.684103,-8.080842,-2.677740,4.502369,7.740202],[-8.098281,7.297128,-9.741985,-7.785778,3.560332,-2.680235,4.234131,-2.475717,-2.462099,-9.132095,2.068167,4.219933],[6.272397,7.775081,8.141469,1.482345,-9.027083,-6.044349,7.020653,5.202307,-0.954275,-5.744616,-0.169729,4.004419],[-5.771097,2.809690,-6.130876,6.999374,-5.658620,-7.319577,8.984069,7.448530,-4.664120,-6.378500,-3.813694,-4.283419],[6.931097,-6.532574,8.336046,9.886803,-1.835957,-8.747623,4.714941,-9.681190,-7.371587,6.573155,-2.355422,8.470498],[-3.624672,-2.244999,1.514070,5.974505,1.069398,-2.535300,5.827818,-9.526326,6.515945,-9.018900,2.078456,-7.083127],[-2.924573,7.944163,1.384794,8.513468,3.884984,-3.511874,2.774716,2.778737,-8.217860,3.117573,5.908432,9.723850],[-9.710630,3.001829,-1.647736,9.619976,-8.778977,4.056464,3.831667,5.665373,-1.562740,-5.632582,-3.385082,-8.038116],[2.136033,-3.309588,-0.264402,9.583965,-4.992389,-4.998812,9.739057,0.303707,-9.658269,1.583557,6.512356,-4.547514],[-1.474100,1.544424,8.072192,4.208026,-3.175502,0.463432,6.773601,7.061046,-7.478640,-8.850674,-9.274354,7.132664],[-5.941289,-7.437009,0.202236,2.357618,2.476111,-6.344837,4.334906,-3.394385,-2.577959,-4.385003,-6.395136,0.307627]],[[8.277993,-1.541624,2.140228,-9.989988,-2.832838,9.407480,-1.878717,-0.596974,-9.872984,-2.479228,-4.649606,4.163713],[-4.207294,9.771332,6.953557,2.597389,-1.079166,-1.284811,4.981508,-5.297716,-7.846003,-0.516705,-5.691599,-7.632990],[8.889485,-7.905146,9.032541,-0.629629,2.928569,3.209297,-4.355261,4.346786,-2.124458,-1.364493,8.528422,-3.778818],[2.957851,-2.446949,7.965212,-6.786187,9.695429,-9.395918,-8.119917,-4.920042,-6.720630,-9.754794,7.895281,-9.440133],[-4.135669,3.453764,6.116987,6.396187,-2.160902,-8.960872,-6.210292,7.287599,-4.069767,5.577664,-3.119419,-3.058127],[7.536345,-2.976692,4.923190,-1.345396,0.646274,6.512931,0.941656,6.266109,-5.921895,8.653233,-0.045255,-1.882316],[0.620348,9.827689,6.020767,-1.621154,5.087353,3.889908,9.948753,-5.758237,-3.507777,9.515800,-2.577184,6.229304],[8.549399,2.333255,0.278734,-0.622082,0.231360,1.696949,2.456337,7.343038,-3.651407,7.891950,1.192492,-2.102436],[4.356161,3.861933,8.567741,-4.406248,-3.462830,-1.539264,4.409959,-2.808682,3.011932,-4.122383,8.180202,3.225812],[-4.597073,-0.902654,-0.786801,1.650136,-3.196803,0.045641,-5.607845,-3.768759,0.626583,-9.004027,0.204526,-8.381440],[-0.257487,-0.350970,-2.479440,4.274255,-9.650509,-6.082632,6.994932,7.985805,7.933724,0.301749,-8.910759,-4.900224],[-6.741673,3.688387,8.883618,-8.139675,-8.010551,0.038381,-3.486300,3.212791,-1.702810,7.518496,-8.744459,-1.809767],[3.107550,6.902093,5.438796,-3.759358,-6.569058,-0.368202,3.746326,-5.839038,1.230865,-4.117202,-8.927455,-0.074715],[-0.237556,-8.640411,-6.310750,-7.152910,-9.919909,-1.105269,7.793577,-5.593774,-7.681808,4.136270,4.977526,0.343083]],[[0.672004,3.506880,6.944128,1.802612,0.239027,-3.545086,-9.782266,-2.938475,-3.125093,-7.790032,2.624560,-5.345004],[5.127182,2.014639,1.709147,2.094234,-3.007756,-6.358526,3.324997,1.156807,-5.734714,-7.438697,-0.188864,6.287755],[2.914664,-7.273582,-5.554265,-0.250712,-2.235825,6.887790,-9.595013,9.690911,7.196348,9.203964,1.991079,2.204810],[-9.278669,-0.680861,-6.728899,-2.859963,3.017203,-1.293129,7.526166,-9.106218,-6.212177,8.619220,-4.605882,-0.388648],[-0.964662,-6.867738,-1.889461,3.779297,-8.555167,-2.192686,-3.212051,-4.948089,4.025271,4.000761,-2.737196,0.867120],[5.198401,0.948235,8.421767,0.681858,3.063972,7.213948,-3.820838,8.719583,-5.312809,2.125577,-5.319439,-6.389845],[0.182833,-3.706357,1.054230,-0.009461,-6.159213,2.803488,9.602305,1.917814,-3.930874,1.268759,-8.048975,2.334947],[-9.477915,1.413426,3.123107,-4.967744,2.570098,-5.426085,-8.942880,-7.591153,-1.906124,-1.199058,-8.178660,4.593877],[-9.018324,6.649970,4.027914,6.255109,-0.958999,-3.918389,8.221732,-9.342074,1.488447,6.449515,4.814874,-8.688194],[2.687578,-7.064219,-8.495032,1.375445,-6.620022,9.685735,8.849033,7.845897,9.323353,0.937462,-8.636587,-4.720665],[-1.746459,-4.103150,5.879780,-2.528867,0.497022,-6.610788,-7.458442,2.491404,3.790838,-5.044686,7.487905,-0.644237],[5.201236,7.920800,6.850657,8.414340,-2.011476,0.072141,-2.022418,-2.966540,-8.657250,7.960950,-4.706887,1.804938],[-0.280989,6.870221,6.672823,-6.687050,8.928248,2.691115,7.783736,9.847102,-2.849062,9.779365,-4.720732,-9.027493],[0.110046,2.381430,-0.563144,2.222268,-0.111331,7.385092,-0.747154,-0.716746,7.239520,-9.892170,-3.600002,-4.292109]]], dtype = "float64")#candidate|1380|(8, 14, 12)|const|float64
bop_1381 = relay.logical_or(call_1376.astype('bool'), relay.reshape(const_1380.astype('bool'), relay.shape_of(call_1376))) # shape=(8, 14, 12)
bop_1384 = relay.logical_or(call_1377.astype('bool'), relay.reshape(const_1380.astype('bool'), relay.shape_of(call_1377))) # shape=(8, 14, 12)
output = bop_1381
output2 = bop_1384
func_1398 = relay.Function([], output)
mod['func_1398'] = func_1398
mod = relay.transform.InferType()(mod)
output = func_1398()
func_1399 = relay.Function([], output)
mutated_mod['func_1399'] = func_1399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1420 = func_897_call()
call_1421 = func_897_call()
uop_1443 = relay.log(call_1420.astype('float64')) # shape=(8, 14, 12)
uop_1445 = relay.log(call_1421.astype('float64')) # shape=(8, 14, 12)
func_1010_call = mod.get_global_var('func_1010')
func_1014_call = mutated_mod.get_global_var('func_1014')
var_1451 = relay.var("var_1451", dtype = "float64", shape = (14,))#candidate|1451|(14,)|var|float64
const_1452 = relay.const([[-6.694816],[-3.105314],[7.527336],[-1.230466],[6.726261],[-1.031252],[9.487898],[4.699396],[-3.812796],[3.090091],[5.859261],[-8.725995],[-2.511220],[2.450231],[2.359001],[-8.166346],[5.487655],[4.824624],[-3.514244],[5.234611],[2.289720],[-6.662141],[-8.680145],[4.322941],[7.434086],[-0.791713],[0.506366],[9.705401],[-0.265765],[-8.274740],[-2.660248],[-6.721379],[2.900917],[-0.145026],[6.651282],[0.370409],[-3.162628],[9.271574],[4.734890],[8.427800],[2.492838],[0.601376],[-5.399161],[-3.853682],[3.526454],[-4.372852],[4.728469],[6.909012],[-3.216269],[0.751615],[0.461481],[-7.307478],[-7.571110],[-3.600305],[3.064722],[-6.141841],[6.324743],[6.323237],[-5.865116],[5.799719],[-1.877177],[2.579203],[-1.846699],[-3.454978],[2.250720],[-4.946706],[-8.451919],[-7.472848],[3.490912],[2.312052],[-2.792548],[6.900410],[9.905061],[9.770981],[3.221136],[-2.646019],[-5.142603],[4.296053],[-0.322620],[-6.268441],[0.121770],[2.008198],[6.665676],[-2.942702]], dtype = "float64")#candidate|1452|(84, 1)|const|float64
var_1453 = relay.var("var_1453", dtype = "uint64", shape = (320,))#candidate|1453|(320,)|var|uint64
call_1450 = relay.TupleGetItem(func_1010_call(relay.reshape(var_1451.astype('float64'), [2, 1, 7]), relay.reshape(const_1452.astype('float64'), [2, 6, 7]), relay.reshape(var_1453.astype('uint64'), [320, 1]), ), 0)
call_1454 = relay.TupleGetItem(func_1014_call(relay.reshape(var_1451.astype('float64'), [2, 1, 7]), relay.reshape(const_1452.astype('float64'), [2, 6, 7]), relay.reshape(var_1453.astype('uint64'), [320, 1]), ), 0)
output = relay.Tuple([uop_1443,call_1450,var_1451,const_1452,var_1453,])
output2 = relay.Tuple([uop_1445,call_1454,var_1451,const_1452,var_1453,])
func_1465 = relay.Function([var_1451,var_1453,], output)
mod['func_1465'] = func_1465
mod = relay.transform.InferType()(mod)
mutated_mod['func_1465'] = func_1465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1465_call = mutated_mod.get_global_var('func_1465')
var_1467 = relay.var("var_1467", dtype = "float64", shape = (14,))#candidate|1467|(14,)|var|float64
var_1468 = relay.var("var_1468", dtype = "uint64", shape = (320,))#candidate|1468|(320,)|var|uint64
call_1466 = func_1465_call(var_1467,var_1468,)
output = call_1466
func_1469 = relay.Function([var_1467,var_1468,], output)
mutated_mod['func_1469'] = func_1469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_1478 = func_1398_call()
call_1479 = func_1398_call()
output = relay.Tuple([call_1478,])
output2 = relay.Tuple([call_1479,])
func_1482 = relay.Function([], output)
mod['func_1482'] = func_1482
mod = relay.transform.InferType()(mod)
mutated_mod['func_1482'] = func_1482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mutated_mod.get_global_var('func_1482')
call_1483 = func_1482_call()
output = call_1483
func_1484 = relay.Function([], output)
mutated_mod['func_1484'] = func_1484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1325_call = mod.get_global_var('func_1325')
func_1326_call = mutated_mod.get_global_var('func_1326')
call_1496 = relay.TupleGetItem(func_1325_call(), 0)
call_1497 = relay.TupleGetItem(func_1326_call(), 0)
var_1499 = relay.var("var_1499", dtype = "float64", shape = (8, 14, 12))#candidate|1499|(8, 14, 12)|var|float64
bop_1500 = relay.left_shift(call_1496.astype('int64'), relay.reshape(var_1499.astype('int64'), relay.shape_of(call_1496))) # shape=(8, 14, 12)
bop_1503 = relay.left_shift(call_1497.astype('int64'), relay.reshape(var_1499.astype('int64'), relay.shape_of(call_1497))) # shape=(8, 14, 12)
func_616_call = mod.get_global_var('func_616')
func_619_call = mutated_mod.get_global_var('func_619')
var_1506 = relay.var("var_1506", dtype = "uint16", shape = (672, 1))#candidate|1506|(672, 1)|var|uint16
const_1507 = relay.const([-8,1,-3,-2,10,4,-2,1,7,-3,4,9,-5,4,-6,7,3,-3,-6,-3,5,-4,4,-2,3,-9,9,-4,9,-10,-4,8,-7,-8,-8,-9,6,1,1,3,9,2,10,-2,5,-3,-9,8,3,-10,5,-5,-5,3,8,-3,-9,-4,-10,-9,8,-3,4,4,-9,10,4,-7,10,8,-9,6,5,-9,6,-1,4,5,7,-5,4,10,-3,-8,10,-2,6,-7,7,5,7,-2,-1,-7,6,5,-1,9,-6,6,4,5,5,-10,-1,8,2,7,6,-2,-9,-4,3,-4,-4,-5,8,10,-3,8,9,1,5,-5,-5,-3,5,7,-3,-5,1,7,9,5,-10,-5,6,-10,-6,-1,-3,5,6,-6,-3,7,-2,-5,4,4,-10,2,-6,8,1,-1,8,4,8,-2,-2,6,3,-4,1,10,-6,-9,9,2,-1,-6,-1,-2,10,-3,-4,6,-10,6,-8,-5,1,7,-5,9,4,-4,6,7,1,10,-10,-3,-7,-4,-3,9,4,3,-5,-5,10,7,7,-3,5,-2,-10,-5,-1,-1,-9,10,6,-5,10,1,1,-5,3,5,-1,-3,1,9,-9,10,-3,-3,8,10,-10,-5,1,9,5,-2,-2,-1,-6,-7,-3,5,9,-4,8,2,-7,6,6,1,-1,2,-9,8,-3,2,-4,-3,7,-10,3,10,1,-9,-3,-10,3,-8,3,8,1,-4,-9,7,-6,8,9,1,-5,-6,-1,5,-8,-6,10,-9,-6,-7,-9,10,9,5,7,9,6,-4,-2,1,-3,1,1,-6,2,-1,-6,-6,-10,-7,9,-10,-9,-2,-1,-1,7,8,3,-6,-7,-9,9,-10,-8,-5,10,2,10,-2,-6,-7,-6,-3,-9,7,-8,-9,-4,8,-7,-9,-10,8,-6,1,5,4,-3,4,8,9,8,6,10,-3,9,-4,4,9,6,9,9,5,-2,5,-2,5,4,-3,-5,1,-8,-5,9,-2,5,6,-5,-6,-2,7,7,6,-3,-8,-5,4,-6,-6,4,-1,9,5,-10,3,3,-8,1,-2,2,5,-8,3,-10,10,8,5,9,-3,2,-5,-5,-3,-8,1,6,-9,6,10,-2,-4,-4,-8,-10,3,7,4,2,6,-6,-2,-4,-9,-3,-8,1,-5,-10,7,-4,-1,8,-2,-7,-2,7,5,5,2,3,4,2,7,2,4,-4,-6,-2,-7,-7,2,-1,3,-9,3,-7,-5,6,-2,8,2,-3,-8,-7,6,4,-5,-2,-10,-5,4,1,10,-5,-6,10,-7,-8,-8,10,8,1,-8,4,-6,2,-3,-3,-10,7,1,4,10,3,-9,-3,8,2,9,-5,-7,6,7,2,8,-3,-5,-7,1,5,4,6,-2,-9,4,-5,-10,-8,-10,6,10,-7,8,-9,3,-8,-2,10,-5,-2,-2,10,7,10,-10,5,6,4,3,3,-9,-2,7,2,2,1,-10,7,8,-5,2,8,-2,-1,6,-3,-7,6,9,-8,-4,7,9,-1,9,-5,8,8,4,6,-3,6,8,-6,2,9,2,-1,-8,-7,-10,8,4,7,5,-9,-4,10,9,-8,9,-8,-1,-1,-1,6,9,-7,-9,-2,-8,5,-9,4,1,10,7,-3,5,9,-2,-5,-8,5,-7,-6,-1,-8,7,8,-2,-10,-6,-9,-6,-5,5,1,-4,-3,-5,-7,9,7,-5,-4,5,8,-8,10,-5,-2,7,-4,-10,-4,-7,1,4,3,-5,8,2,1,1,4,8,-8,7,-8,10,-2,-2,-4,1,8,4,-7,-2,-8,10,10,-6,-5,-10,-2,6,7,6,-8,7,-6,4,1,10,6,9,-9,4,-2,8,3,7,-4,1,4,8,1,1,-5,-1,-2,8,-9,-5,9,2,-7,-1,-4,3,-2,-7,-2,-5,1,9,-8,5,3,6,-5,-3,-1,-3,9,-2,8,2,-8,-8,-4,-2,-6,-2,9,1,10,6,8,-6,-9,6,10,7,8,6,-4,6,7,1,6,10,3,7,7,-8,2,4,-5,-9,-8,-5,-3,-2,-9,-6,4,2,4,-1,-3,-7,-5,6,-2,1,9,-10,-6,-5,-5,1,9,-7,3,3,-6,-2,9,-1,4,-9,-7,-7,3,-10,-5,10,-6,-6,-4,6,7,-1,3,-7,3,2,-9,2,3,2,5,-1,-8,10,3,-2,-2,-9,4,-4,4,-6,4,-6,-2,-4,-8,-7,-1,-8,3,-9,4,1,-3,-6,2,-1,4,5,6,4,-6,10,-10,-6,-10,-9,2,-2,-7,-4,-2,7,-2,3,-4,2,8,9,-2,-10,-9,-7,-10,-6,9,8,-4,-9,-9,-6,9,-5,2,4,9,6,-2,-9,-2,-1,-6,4,6,-10,-6,-10,-6,2,6,-4,10,5,3,-6,10,5,8,7,3,-9,-4,5,-1,-8,5,-4,-1,8,-4,10,2,9,7,4,-3,-10,-1,5,-4,-10,4,-3,-4,1,-5,-1,6,-9,-6,-4,5,6,-9,-9,-3,-1,5,-5,2,7,7,-6,-8,8,7,4,6,-1,10,-7,1,1,-1,-6,-2,-2,-1,-2,5,-6,1,-8,10,1,9,3,7,7,8,-3,-8,-9,-5,-9,-2,5,-5,-2,2,2,-3,-3,-9,-10,-6,9,-8,-3,1,5,7,7,-5,-6,2,8,5,8,4,2,9,-1,2,-1,-8,-4,-6,-8,2,8,3,9,-9,-3,3,2,9,-10,-9,-1,7,3,-8,4,4,4,-10,-9,-10,-2,10,-6,7,-9,6,3,-7,9,-7,5,-7,-3,2,5,-4,6,1,10,-7,-4,9,6,-6,-1,-8,-6,-7,-1,1,-2,3,7,-7,1,8,-7,-7,-4,8,5,6,-10,-2,-2,6,-8,-10,-2,3,-1,3,9,10,2,-1,-3,-2,-9,-5,7,-5,-10,-9,-1,8,-3,-9,2,8,-7,-2,-7,5,-7,7,2,1,6,-6,2,1,6,2,1,-1,10,-9,6,-2,-6,8,-2,2,9,-7,2,10,9,-8,-1,-9,2,7,3,2,-8,-9,-1,8,-9,-3,-4,10,5,4,-9,-5,10,-9,-1,6,3,-2,8,-6,-7,-7,2,-4,7,10,-10,7,9,7,-6,1,-8,-6,3,3,-1,-10,-2,-9,-10,-5,6,-2,-7,-4,10,4,10,-6,2,-4,-2,5,9,-2,-2,1,10,-10,-10,2,4,10,8,7,-7,-4,-5,2,-10,5,3,10,7,2,6,9,-2,4,-7,1,-1,-3,-1,-2,-3,-2,1,2,4,7,-8,10,3,9,4,-4,-2,-5,5,-5,-4,-5,-1,-5,10,2,6,5,7,-1,-3,-8,-1,-9,10,-5,1,9,6,6,4,2,-2,-9,-5,2,5,-5,2,-5,8,-7,9,-2,8,8,5,-1,-1,6,3,3,7,-4,-10,3,8,-8,6,9,7,7,9,9,-10,-5,-4,-1,-4,1,-4,5,-6,9,2,-5,5,-1,10,6,6,3,10,2,-8,2,-1,6,-10,7,-10,3,4,2,5,-4,-3,-2,2,9,-10,4,9,-7,2,5,6,-9,-3,6,3,10,8,9,7,-2,10,-8,-3,-2,-1,-8,6,-9,10,-6,7,7,9,7,-3,-4,-2,-5,-9,1,3,-9,7,-7,-5,-10,-10,-8,-2,-6,-4,1,5,5,3,4,-5,7,10,1,-9,-8,5,-8,2,3,4,-6,-9,3,-8,10,-9,-7,2,-4,6,-10,9,1,3,9,-7,-6,-7,10,5,9,8,-5,-4,3,-3,3,2,3,-8,-5,-1,-3,2,-4,-5,3,8,8,-8,-2,-4,3,10,1,10,5,9,-10,3,-9,6,6,9,6,2,8,-6,2,-7,-6,-3,10,10,2,-3,-4,3,3,-1,-1,6,1,-10,-7,-7,4,3,1,-6,-9,-4,-8,-4,-2,9,-9,5,-6,-2,2,8,-9,-1,-6,-5,-6,9,-7,4,-7,-5,7,-4,-2,7,-8,-9,-6,9,-7,-9,5,-6,1,4,-2,-4,-6,3,-7,-4,-3,-1,-5,-3,5,7,9,2,3,8,2,4,10,-10,6,-1,-8,2,-3,8,-6,-7,8,5,-5,5,-4,-7,-6,3,-2,-3,-5,6,9,-5,8,-7,1,-8,-4,-4,-3,3,8,1,10,-10,10,-2,-9,3,-9,6,4,-6], dtype = "uint32")#candidate|1507|(1584,)|const|uint32
call_1505 = relay.TupleGetItem(func_616_call(relay.reshape(var_1506.astype('uint16'), [6, 8, 14]), relay.reshape(const_1507.astype('uint32'), [1584,]), ), 2)
call_1508 = relay.TupleGetItem(func_619_call(relay.reshape(var_1506.astype('uint16'), [6, 8, 14]), relay.reshape(const_1507.astype('uint32'), [1584,]), ), 2)
func_93_call = mod.get_global_var('func_93')
func_95_call = mutated_mod.get_global_var('func_95')
var_1515 = relay.var("var_1515", dtype = "float32", shape = (36, 1))#candidate|1515|(36, 1)|var|float32
call_1514 = func_93_call(relay.reshape(var_1515.astype('float32'), [1, 6, 6]))
call_1516 = func_93_call(relay.reshape(var_1515.astype('float32'), [1, 6, 6]))
output = relay.Tuple([bop_1500,call_1505,var_1506,const_1507,call_1514,var_1515,])
output2 = relay.Tuple([bop_1503,call_1508,var_1506,const_1507,call_1516,var_1515,])
func_1523 = relay.Function([var_1499,var_1506,var_1515,], output)
mod['func_1523'] = func_1523
mod = relay.transform.InferType()(mod)
mutated_mod['func_1523'] = func_1523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1523_call = mutated_mod.get_global_var('func_1523')
var_1525 = relay.var("var_1525", dtype = "float64", shape = (8, 14, 12))#candidate|1525|(8, 14, 12)|var|float64
var_1526 = relay.var("var_1526", dtype = "uint16", shape = (672, 1))#candidate|1526|(672, 1)|var|uint16
var_1527 = relay.var("var_1527", dtype = "float32", shape = (36, 1))#candidate|1527|(36, 1)|var|float32
call_1524 = func_1523_call(var_1525,var_1526,var_1527,)
output = call_1524
func_1528 = relay.Function([var_1525,var_1526,var_1527,], output)
mutated_mod['func_1528'] = func_1528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_1547 = func_1398_call()
call_1548 = func_1398_call()
func_1065_call = mod.get_global_var('func_1065')
func_1068_call = mutated_mod.get_global_var('func_1068')
var_1554 = relay.var("var_1554", dtype = "float32", shape = (120,))#candidate|1554|(120,)|var|float32
const_1555 = relay.const([5,-10,7,1,2,7,9,2,4,-1,-10,-6,-3,-3,-8,-5,4,5,7,-9,3,7,-7,8,-5,-2,-7,4,-9,-10,-5,8,-10,-1,1,8,-6,-10,3,2,-10,-3,-5,4,7,-10,10,-2,-5,7,-4,1,-9,-1,-8,10,-9,4,1,-9,3,3,-1,4,-9,-1,-6,-3,3,7,6,1,10,1,-3,-2,-2,-10,1,9,4,4,-4,5,8,-3,7,2,-9,-1,-3,-9,-1,10,-4,3,-2,-8,-4,6,-2,8,10,1,3,2,-8,-5,-1,-10,-5,-2,7,-5,-10,-3,-7,6,-3,9,-10,1,3,4,2,-8,6,-6,-10,6,-10,-4,1,8,-8,7,-9,5,-6,-5,-4,5,-3,-3,-2,4,-7,10,-10,-2,-7,-6,1,10,2,-8,-10,-4,-4,7,7,7,-10,4,7,-10,-6,5,-10,7,-2,-8,-7,-9,-1,-8,-10,4,4,-1,3,9,8,1,9,-9,4,-3,-10,-4,9,-1,9,-8,-1,-5,-10,8,-8,-5,-6,8,-2,10,3,4,8,-2,1,9,1,-8,10,-9,4,5,-8,1,6,-1,7,-5,-3,3,9,5,8,2,-1,8,5,-7,-8,3,10,-3,1,2,-4,-7,-7,-4,-6,-4,-7,2,6,7,8,8,-7,-4,10,2,1,9,-2,6,1,-4,-2,2,-8,2,10,1,-4,6,1,9,9,-3,-3,8,-8,-2,-1,-6,3,4,-1,-1,-1,8,6,5,5,6,-6,-2,9,3,-8,10,1,5,10,-7,-4,1,4,7,6,9,-8,-6,-5,-6,10,-4,-9,-4,-6,9,10,2,-8,5,-10,5,5,4,2,1,-5,4,-4,4,9,-10,3,-3,10,-6,2,8,-3,-7,4,7,-5,-7,9,-8,5,7,1,1,-10,10,6,-9,-4,-6,-6,-10,-3,-9,6,-1,7,-1,2,8,6,-3,-9,3,-1,-2,3,-8,-6,-9,4,5,9,-10,5,2,5,6,-10,-7,-10,-9,-8,-1,4,9,9,-1,-2,-1,8,-10,1,-9,9,-3,5,-3,-9,-9,2,4,6,4,-6,-4,-10,-1,4,-1,6,-1,-6,-3,-9,-9,-2,4,8,-5,5,-1,8,8,-2,3,5,-8,-8,-5,5,8,6,-7,-4,-9,4,5,-3,-3,4,-2,10,9,3,5,-9,-9,-8,9,1,-10,1,-6,-8,1,5,-10,-5,4,-4,-8,-3,10,-5,3,9,10,9,-6,7,9,-1,6,8,6,9,5,-10,3,-3,1,10,-4,9,5,7,7,-3,-6,5,10,-3,-5,-9,-10,5,-4,5,3,10,-10,-10,-7,-2,-3,-2,-10,-10,-9,5,1,5,6,-5,-3,-5,-4,-2,9,1,-10,6,7,6,5,9,3,3,-3,-8,-5,-9,-9,7,4,1,10,-5,5,5,3,8,-8,-5,1,-7,-4,5,-7,5,-2,-5,-6,-1,2,-1,-2,10,9,-2,7,-7,6,-8,6,-6,10,1,4,4,-8,10,3,-9,-5,3,10,5,-3,1,-4,8,-8,9,10,7,-10,9,7,6,-1,-2,-10,-7,9,4,4,-7,-10,-4,2,10,8,-5,-7,7,-3,-7,5,8,3,-7,-2,1,3,-2,-9,-6,2,-2,-2,5,7,10,9,7,-8,10,3,3,9,10,10,4,5,8,-4,-5,-6,-6,3,-6,-10,-2,-10,-6,4,6,9,-5,6,6,-8,-3,-5,1,2,8,6,4,9,-4,5,-9,7,-1,-9], dtype = "uint16")#candidate|1555|(672,)|const|uint16
call_1553 = relay.TupleGetItem(func_1065_call(relay.reshape(var_1554.astype('float32'), [5, 2, 12]), relay.reshape(const_1555.astype('uint16'), [672,]), ), 1)
call_1556 = relay.TupleGetItem(func_1068_call(relay.reshape(var_1554.astype('float32'), [5, 2, 12]), relay.reshape(const_1555.astype('uint16'), [672,]), ), 1)
func_93_call = mod.get_global_var('func_93')
func_95_call = mutated_mod.get_global_var('func_95')
const_1558 = relay.const([-7.339039,2.118570,-7.105510,-8.910951,-7.425370,-3.636227,-6.707416,8.145346,-0.138897,0.957955,-0.823358,-6.996606,3.699472,-0.479867,-6.437453,-0.068426,6.699097,2.767339,-0.668493,1.028038,-4.932917,4.129275,-7.076434,-7.804047,-9.561480,-7.255090,2.697971,-8.349880,-2.853571,3.157196,-4.067666,8.167909,3.051812,-3.508587,5.030844,-3.297957], dtype = "float32")#candidate|1558|(36,)|const|float32
call_1557 = func_93_call(relay.reshape(const_1558.astype('float32'), [1, 6, 6]))
call_1559 = func_93_call(relay.reshape(const_1558.astype('float32'), [1, 6, 6]))
output = relay.Tuple([call_1547,call_1553,var_1554,const_1555,call_1557,const_1558,])
output2 = relay.Tuple([call_1548,call_1556,var_1554,const_1555,call_1559,const_1558,])
func_1584 = relay.Function([var_1554,], output)
mod['func_1584'] = func_1584
mod = relay.transform.InferType()(mod)
mutated_mod['func_1584'] = func_1584
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1585 = relay.var("var_1585", dtype = "float32", shape = (120,))#candidate|1585|(120,)|var|float32
func_1584_call = mutated_mod.get_global_var('func_1584')
call_1586 = func_1584_call(var_1585)
output = call_1586
func_1587 = relay.Function([var_1585], output)
mutated_mod['func_1587'] = func_1587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_1621 = func_1398_call()
call_1622 = func_1398_call()
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_1630 = func_1398_call()
call_1631 = func_1398_call()
output = relay.Tuple([call_1621,call_1630,])
output2 = relay.Tuple([call_1622,call_1631,])
func_1674 = relay.Function([], output)
mod['func_1674'] = func_1674
mod = relay.transform.InferType()(mod)
output = func_1674()
func_1675 = relay.Function([], output)
mutated_mod['func_1675'] = func_1675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1702 = relay.var("var_1702", dtype = "int64", shape = (9, 15, 8))#candidate|1702|(9, 15, 8)|var|int64
const_1703 = relay.const([[[-5,-1,9,6,-9,8,6,8],[-5,5,1,8,6,-3,2,-4],[-6,-10,3,5,-10,5,-10,1],[3,9,2,10,-1,6,-8,-2],[5,1,9,-1,-9,-4,9,-6],[3,-6,5,2,-1,-1,1,3],[-5,-6,-10,-3,1,-10,5,3],[-3,3,-5,8,-5,4,2,2],[4,4,-2,5,-8,-4,-2,1],[7,5,-8,9,2,9,-3,-3],[-8,-10,-8,6,1,9,8,-9],[3,-7,7,-6,9,4,8,-8],[-8,9,-5,-2,-6,10,-10,-8],[-2,-3,3,9,7,-6,5,-5],[2,9,-8,4,1,-9,2,1]],[[2,-5,5,7,-1,1,6,-9],[10,8,8,-4,-5,-9,8,-2],[-5,-7,3,6,-8,-10,-1,-5],[-6,8,4,-2,-3,-7,-2,-5],[-6,-9,8,-4,10,-1,2,3],[8,3,-3,2,-7,-9,7,-6],[-6,-1,10,-1,9,3,-7,-1],[-8,-6,1,-7,6,-7,-9,6],[-8,10,-2,8,2,-7,10,3],[-4,8,-8,4,-10,10,4,7],[-3,-9,9,-10,-1,-9,5,-10],[4,4,3,-9,-9,-6,-3,4],[-1,4,-2,-10,-9,5,-2,3],[-3,9,5,2,-7,10,1,-7],[-8,-2,-5,-5,-3,10,-7,3]],[[-10,-7,10,-2,8,-6,-5,-1],[6,-3,-8,-7,1,8,8,8],[-6,4,6,5,-7,5,6,5],[1,-4,6,-10,7,-5,-1,-5],[-1,5,5,3,2,4,-4,-3],[6,-4,7,9,3,-10,-10,1],[6,-1,7,4,4,1,-4,-2],[10,-3,9,-4,10,7,1,-3],[6,-7,-10,4,9,-1,-10,5],[9,8,2,8,-5,3,-5,-2],[-2,5,2,-7,7,-5,-1,6],[8,7,5,5,-10,-6,5,-5],[-7,-3,2,-1,8,-7,-6,-8],[-6,-8,10,-2,2,-7,-8,-5],[5,-5,6,7,1,4,6,4]],[[6,-6,5,-9,8,3,-10,-2],[-6,5,10,-7,-7,-8,4,-6],[4,-9,2,4,-5,7,-5,4],[3,-3,-3,-3,3,3,3,-8],[-3,-6,6,-6,-6,8,-1,3],[2,-8,10,3,-3,1,-8,-5],[-5,-8,10,1,7,7,10,4],[10,6,3,3,8,4,-2,-10],[9,-9,-4,-4,10,10,3,-3],[-6,-5,10,5,-2,7,7,3],[5,-4,4,1,9,-5,5,-9],[7,-10,-10,7,3,7,9,-5],[-4,5,-6,2,-10,-2,-5,8],[3,-8,-10,-6,-9,2,-3,-4],[7,-2,10,10,1,6,3,7]],[[-9,-8,10,-3,-6,-6,-3,3],[4,5,-1,3,-9,5,3,7],[-7,-3,10,5,-3,3,5,-8],[-3,-2,-9,4,6,-9,1,2],[-2,6,-3,6,-4,-1,-8,8],[1,-6,9,-8,1,-3,-3,2],[-2,-7,-9,-2,-5,2,4,-5],[-3,7,10,4,-3,4,6,5],[-2,4,7,-4,8,6,-9,-9],[9,-2,-1,10,7,-4,-8,10],[1,-3,9,3,-5,-1,1,7],[-4,-8,-7,-9,-10,7,1,-10],[-3,-3,10,2,-6,-2,-1,-6],[7,-9,4,-1,2,4,9,-8],[-7,-7,-8,2,1,10,2,8]],[[1,6,-7,2,6,5,-10,-8],[-5,-3,3,6,3,8,3,7],[-3,-1,-1,-4,-9,-2,3,5],[4,-2,7,-3,-5,6,-8,3],[-7,4,7,4,-6,-4,-8,-6],[9,1,7,6,8,-9,4,-8],[8,8,-7,-9,1,-3,-4,-1],[-8,-1,-10,-6,-9,-3,-8,-6],[2,-10,-6,-3,4,-4,-6,1],[1,8,9,10,-8,2,5,-10],[10,7,1,-3,-7,-1,-3,-8],[4,-6,7,-10,-10,-10,-10,1],[10,-8,-9,6,-7,10,1,6],[3,10,-7,-6,3,-1,8,-5],[-9,1,-3,7,-6,-9,6,-4]],[[-7,-10,5,1,-4,2,-4,2],[9,3,-2,1,-7,5,-8,-2],[-3,1,-10,7,7,-6,8,4],[3,1,-10,-1,7,-2,-7,1],[-9,-10,-7,3,-6,-2,-8,6],[-8,7,9,4,-6,-10,1,4],[6,-8,-1,-4,9,3,-6,1],[6,-1,5,-3,-2,-3,6,4],[1,2,3,1,6,1,3,-6],[-9,-3,2,3,-1,-8,6,-9],[-6,-1,9,-2,5,6,5,-6],[9,-9,7,5,-10,5,7,-7],[6,-1,-9,1,6,2,1,8],[-7,-1,10,-4,-8,-10,-4,-7],[4,-7,-1,-7,-8,-10,6,1]],[[6,-10,5,-1,-5,-10,-8,1],[-3,5,9,-2,-10,7,2,-1],[-9,9,9,9,-10,4,3,10],[-4,-3,8,9,8,7,-4,-2],[-1,9,10,-3,6,-8,3,-9],[6,1,7,-3,-7,-7,-9,6],[-2,10,-2,4,-10,-8,-2,-3],[9,2,5,-3,6,-5,-10,4],[5,-6,7,-6,-4,-2,-1,7],[-1,8,-6,10,10,8,-6,4],[6,-10,-1,2,1,4,-10,-4],[9,9,-2,9,4,-1,-10,6],[6,9,-2,-3,-6,5,-7,9],[8,3,-6,-1,10,5,-9,-5],[6,-2,-6,9,1,10,-10,4]],[[-4,9,1,-2,-4,-10,5,7],[1,8,-4,1,-1,-1,-7,-1],[4,-3,-10,6,10,-6,-3,-6],[2,-6,-3,2,-8,-6,-10,8],[-7,-10,5,-10,6,-2,10,-5],[-4,-9,-8,2,5,-2,5,10],[-2,10,10,2,7,-5,2,9],[3,-2,10,6,1,2,-10,7],[-5,-9,6,-3,5,-10,-9,10],[9,-10,7,-4,-6,2,1,7],[-6,-2,-6,-5,-2,8,6,-3],[2,-1,3,-7,6,-4,1,-4],[6,1,-1,-4,3,-8,2,1],[-7,2,2,1,-1,2,6,10],[1,5,8,-9,-3,-8,-10,-6]]], dtype = "int64")#candidate|1703|(9, 15, 8)|const|int64
bop_1704 = relay.right_shift(var_1702.astype('int64'), relay.reshape(const_1703.astype('int64'), relay.shape_of(var_1702))) # shape=(9, 15, 8)
func_696_call = mod.get_global_var('func_696')
func_700_call = mutated_mod.get_global_var('func_700')
const_1713 = relay.const([-4,-9,-5,-8,1,1,2,1,7,-3,-1,8,10,-1,7,10,-9,8,10,-3,7,-6,-9,5,6,6,6,7,10,-5,-2,-2,4,2,-8,-6,-8,4,-9,5,8,5,5,-9,10,6,9,-2,8,6,1,-4,4,8,8,9,7,9,-7,-1,-2,-8,4,3,-4,-9,1,-3,1,8,-9,7,-4,7,7,-8,-4,-10,-6,10,4,-6,5,1,3,7,-10,-7,1,4,4,6,8,-6,-1,-6,-8,-9,2,-10,1,8,-10,-6,8,8,1,10,10,-6,2,3,4,4,-3,-2,2,8,4,-4,3,4,3,-5,-8,3,5,-4,9,-5,-2,1,-7,-7,-2,-3,2,10,1,-10,6,-3,-9,-10,-2,-3,3,10,2,3,10,-10,5,-10,5,7,5,-2,4,-5,8,3,-1,-1,10,-8,2,-3,-5,-3,-4,2,8,-4,-8,1,6,-7,-6,-9,-6,7,4,-5,6,9,-10,-9,-9,-3,3,-4,5,-7,4,7,2,10,-7,-7,4,-3,9,3,7,4,9,1,1,-6,4,7,-9,-4,-1,-1,6,-9,8,-2,9,6,-6,-3,3,-4,-5,4,7,2,8,-4,7,-1,7,-9,1,-8,2,-6,3,3,2,-1,7,8,7,2,-5,-9,6,1,-3,4,2,-10,1,-10,3,3,-7,5,-3,9,10,2,-6,-3,4,4,-7,-9,-10,-1,-2,-10,5,2,2,6,7,-8,-3,-4,10,10,-2,8,-10,4,-3,-9,-2,8,2,6,4,-4,6,-5,-6,6,6,2,2,7,2,8,9,-8,2,2,-9,-6,-4,3,-5,-10,2,-6,7,2,1,3,-7,-1,-2,-6,7,8,-10,1,-10,6,-2,6,6,-9,9,-7,1,-7,8,6,5,9,4,3,-3,-6,1,-6,-2,-4,-7,1,-6,4,10,-1,3,2,-2,-1,-2,-1,9,-10,2,-5,-2,8,-3,-3,-4,9,4,7,4,2,5,1,-1,-8,-2,2,9,3,6,-8,10,-10,-9,-2,-6,-3,10,-6,2,3,-7,9,9,-2,7,5,-7,4,1,3,2,8,-7,-4,10,-4,-4,-5,-6,-8,-6,2,8,-3,2,8,-9,8,3,-6,1,10,-4,10,3,-5,-1,-4,3,-1,1,-10,8,-8,-2,-5,-6,-10,-1,10,-8,-3,-4,-1,-2,3,-10,6,3,-10,-8,-9,2,-5,-10,5,2,1,4,-4,-2,10,9,1,-1,6,8,4,-5,-2,-5,-4,-4,-4,7,-5,-2,3,4,-1,9,-4,1,6,8,10,7,-2,-1,1,2,-6,-4,6,-5,3,-6,-10,7,-2,5,10,-10,-3,9,-8,10,7,-3,2,-2,1,-1,5,-8,-3,-3,-3,7,1,-1,-9,2,-7,-1,-4,-3,10,-7,-2,-4,-8,-9,-7,8,-4,-8,10,-9,9,-5,2,10,-1,-5,-4,7,-5,2,5,-1,-10,2,-10,-8,-10,4,10,1,2,2,6,-5,-8,-4,-10,-1,-5,10,-5,-6,3,6,3,5,-5,9,-8,4,-3,8,3,-2,6,4,4,4,-10,-1,8,-6,2,-4,-10,-6], dtype = "uint16")#candidate|1713|(605,)|const|uint16
const_1714 = relay.const([[-9,-9],[-3,3],[-7,9],[-3,-5],[7,-2],[-1,-6],[9,-7],[-1,10],[-9,-9],[3,-6],[-6,-6],[3,6],[1,3],[-8,-4],[4,-9],[-6,6],[-8,-8],[9,-1],[1,6],[9,6],[-3,-4],[1,-9],[1,1],[-7,-3],[-4,-3],[-6,-9],[-2,-1],[-8,-8],[9,1],[10,-4],[-8,-8],[-3,-9],[3,1],[-6,8],[-5,8],[-9,6],[10,7],[-7,-3],[-7,-1],[4,-1],[-2,10],[-5,8],[9,-5],[4,-6],[9,6],[-8,3],[2,8],[-4,4],[-1,5],[-1,6],[-9,-10],[-2,-9],[2,7],[4,5],[-3,-1],[4,-2],[8,-1],[-10,-10],[-9,4],[-7,-10],[-8,-8],[8,10],[8,8],[-7,-7],[10,5],[-6,-9],[-7,6],[-7,4],[-5,10],[8,5],[-1,6],[-7,-4],[-10,7],[6,-10],[-10,-9],[-5,2],[5,-1],[4,-9],[-3,5],[-7,-5],[10,4],[9,-10],[-2,-5],[2,-7],[1,-10],[-6,-10],[-3,6],[-3,-8],[4,-10],[-9,1],[-9,-10],[-4,-6],[5,-8],[4,-9],[-2,-8],[10,10],[9,7],[10,1],[4,8],[8,-1],[-1,-5],[6,3],[-3,-4],[6,-6],[-6,5],[1,-3],[9,3],[7,-4],[2,5],[-5,9],[-9,10],[-9,-2],[-1,10],[7,7],[9,5],[3,-6],[9,4],[-10,-4],[7,6],[-2,10],[-7,5],[8,-10],[-1,2],[-6,-8],[10,1],[-4,8],[-10,-7],[3,6],[-10,4],[1,2],[8,-6],[2,9],[4,9],[6,-9],[-4,-1],[-6,6],[5,3],[-3,10],[10,-8],[-7,-2],[9,-1],[1,-3],[8,3],[-8,9],[1,3],[-8,-7],[-6,1],[-2,-6],[-4,-7],[-1,-3],[2,-3],[5,8],[-6,1],[-2,4],[-1,-5],[8,5],[-10,-1],[3,-10],[-8,-9],[-6,10],[-8,8],[7,-9]], dtype = "uint32")#candidate|1714|(162, 2)|const|uint32
call_1712 = relay.TupleGetItem(func_696_call(relay.reshape(const_1713.astype('uint16'), [11, 11, 5]), relay.reshape(const_1714.astype('uint32'), [324,]), ), 2)
call_1715 = relay.TupleGetItem(func_700_call(relay.reshape(const_1713.astype('uint16'), [11, 11, 5]), relay.reshape(const_1714.astype('uint32'), [324,]), ), 2)
const_1720 = relay.const([[[-10,6,8,5,-8,-3,-10,-8],[4,10,-1,7,-1,-5,-5,-4],[1,6,-1,-3,8,2,9,-7],[-6,-9,1,6,-9,2,-1,-8],[8,10,-4,10,9,2,-4,2],[-7,10,-9,9,5,-1,-8,7],[-2,7,1,10,7,-9,10,-4],[-4,-4,-9,2,-4,10,-1,-10],[-5,-9,-2,6,10,4,-9,-8],[1,6,4,-3,1,4,4,5],[9,-6,2,4,-9,3,-5,1],[-10,5,4,-4,-5,5,2,-9],[-5,-4,8,10,-6,-7,3,-6],[-4,-8,-1,3,3,-5,9,8],[8,-10,1,6,-2,-8,-1,-7]],[[7,5,-10,-6,-8,7,-3,-3],[6,7,-5,5,-8,-2,7,-7],[-9,-4,1,-3,1,8,7,-6],[7,2,-8,9,10,-6,5,3],[6,-2,-7,7,6,-3,9,8],[3,-5,-7,-7,-6,-7,-6,4],[10,-8,2,7,1,3,-7,3],[2,-3,2,7,-2,-10,7,-10],[-1,-3,4,-3,10,-6,-8,9],[8,-9,1,-2,-10,-3,6,3],[-4,2,-8,4,10,5,10,8],[-5,10,-10,-8,5,-9,-7,-10],[-1,-6,7,5,9,-7,-5,8],[-9,3,-1,4,-2,-6,-7,9],[-9,7,6,-3,-3,5,5,-5]],[[2,-8,8,-6,6,3,-8,-1],[7,1,9,8,6,9,5,-10],[3,7,-1,-4,-4,-2,9,-9],[3,-8,6,6,7,5,-9,-10],[-4,-4,1,4,6,10,-1,-2],[9,-9,-5,-6,10,8,-6,-2],[5,-7,-7,-6,1,10,4,-6],[-1,-5,10,1,-3,-9,-7,-1],[-10,-1,-1,2,2,4,4,-9],[7,-3,7,6,3,1,8,-2],[-10,5,-1,-3,-9,-1,7,9],[-5,-10,6,-2,-1,1,-5,-8],[-8,-8,8,-4,-8,-1,6,-10],[2,-3,8,-1,10,-8,5,-2],[7,-3,-9,3,5,-4,-5,2]],[[-4,10,-2,-1,-3,9,-5,2],[-1,10,-4,-9,8,-10,8,2],[6,-6,-1,3,7,1,-5,7],[-7,-9,-1,-2,4,4,3,-7],[-8,-7,1,-2,-6,-2,7,8],[-6,7,-7,-8,2,-4,8,3],[-4,6,4,2,2,-10,3,2],[-7,7,-9,-7,-7,-5,-2,-2],[1,-2,5,-5,-9,-7,-5,2],[-10,-7,3,2,-9,-6,5,9],[-5,3,4,8,-4,-6,6,10],[6,-4,5,9,-3,5,3,6],[-5,-10,8,4,5,-1,-7,-4],[10,4,-4,-9,9,6,8,-4],[2,1,3,4,-5,-6,5,7]],[[-10,3,5,-2,8,10,10,10],[-7,-4,8,6,-2,-6,-4,2],[-8,-1,-9,-9,1,-4,3,-6],[6,-9,-7,-8,9,6,8,1],[-5,9,5,4,9,-10,-3,-1],[6,3,-6,4,4,-1,10,-10],[-4,10,9,7,1,10,-4,2],[2,-5,6,-4,-1,-5,-4,-5],[-6,-8,-8,-4,-2,4,-5,6],[-4,4,2,10,-2,2,4,6],[2,-6,9,-1,4,7,-4,5],[-5,7,8,9,-6,7,8,-7],[-9,5,3,-1,3,-6,-2,-4],[3,-4,-9,-2,6,5,5,6],[-7,4,-7,8,-2,9,-7,-2]],[[-4,-1,9,-10,-5,1,-6,-5],[-10,-2,-3,-8,-7,8,-8,4],[7,5,-1,3,9,-7,2,8],[3,8,-2,-9,-3,-1,-9,5],[2,-4,-4,-10,-2,7,-1,6],[5,-9,2,6,-7,8,-3,4],[2,10,-8,10,7,5,-2,-3],[-9,-6,10,-6,-10,-5,-5,10],[-10,5,9,9,5,-6,-9,6],[1,8,-5,-8,-7,7,5,-1],[-6,-4,-4,-2,1,5,-9,7],[-2,-1,7,1,-6,10,-8,6],[-9,-2,5,1,-4,-5,7,2],[7,8,5,-10,10,2,-2,3],[-3,6,8,6,-4,-4,-5,2]],[[-2,-5,-10,9,6,-1,4,-2],[10,4,7,-2,3,2,4,7],[4,6,7,-7,9,-1,-1,-9],[-3,9,-5,9,-6,-5,6,-10],[-5,6,2,-7,9,-5,3,3],[8,-3,2,-2,-4,-1,-10,3],[-5,-7,10,9,4,-4,-7,2],[-7,-10,-9,-9,3,5,1,9],[7,-7,2,10,8,-2,9,10],[-8,-6,5,10,-7,1,3,6],[-8,8,-8,7,-10,-1,-2,4],[-3,7,-8,-8,-3,3,-1,-5],[3,-10,-2,9,3,-1,-2,6],[-7,-5,-9,-2,-4,-8,5,5],[-9,-10,-9,4,-8,-10,2,-6]],[[-7,6,6,10,-2,-4,-4,-8],[1,7,-7,-5,-4,7,-10,-6],[6,5,-9,-1,-3,-9,-1,1],[5,3,9,-10,4,8,2,9],[6,-1,8,8,-4,-8,6,-8],[-9,4,10,8,3,6,-2,5],[-10,2,8,-9,9,-7,9,5],[-6,-4,2,8,2,1,10,1],[-2,-8,-5,3,6,-6,-7,3],[-9,-10,10,8,-4,5,5,-6],[1,7,2,-9,-2,-5,7,2],[2,-10,-2,4,7,1,-7,1],[2,-3,8,5,10,-8,-8,6],[-2,4,-5,1,-8,-6,-1,3],[2,10,-2,9,4,9,-8,2]],[[1,4,-4,10,7,-9,10,10],[9,-4,-4,3,10,2,8,8],[1,7,-4,9,10,10,1,-2],[1,-3,8,-4,9,8,1,-1],[5,8,-5,-3,-7,7,-4,-2],[6,9,-3,-4,-1,2,-6,4],[2,-5,1,2,-2,9,9,-8],[-7,10,-9,2,7,-2,8,-8],[-10,-7,-2,10,-9,7,-8,-4],[-1,-5,-9,2,5,-10,-10,3],[-1,10,1,-5,-8,-10,-9,-3],[1,5,-7,7,-9,-6,5,-8],[2,-8,-7,-5,9,-3,-4,-3],[6,-6,-2,-6,-9,-3,-4,1],[-8,-8,3,-2,-1,-1,5,9]]], dtype = "int64")#candidate|1720|(9, 15, 8)|const|int64
bop_1721 = relay.power(bop_1704.astype('float64'), relay.reshape(const_1720.astype('float64'), relay.shape_of(bop_1704))) # shape=(9, 15, 8)
func_1584_call = mod.get_global_var('func_1584')
func_1587_call = mutated_mod.get_global_var('func_1587')
const_1725 = relay.const([[6.185808],[7.205109],[-8.208012],[-0.182789],[-2.827063],[-1.735637],[-8.292621],[-5.873993],[2.402850],[2.335299],[2.580369],[4.674622],[-0.309840],[1.520957],[-7.635349],[7.006546],[8.048515],[3.874929],[3.299044],[-4.436394],[-7.752468],[5.500492],[-5.670951],[-4.527662],[7.297778],[9.166419],[3.294753],[-3.797413],[8.790716],[-5.331181],[8.834006],[-9.102932],[-9.644634],[2.447142],[8.020637],[4.921745],[-6.739463],[0.848726],[-1.775001],[-2.518683],[3.129656],[7.152440],[-6.780598],[-7.524989],[8.077660],[7.874718],[-3.279743],[-3.922407],[-7.248297],[-7.652089],[1.224412],[2.911788],[-8.283217],[7.374000],[-7.438095],[-0.775222],[4.651777],[-2.470194],[-2.620452],[-1.952546],[-7.604847],[-5.341626],[3.218012],[1.973461],[-9.779997],[2.788370],[-0.702561],[4.476785],[9.102744],[6.038442],[3.072783],[-6.385302],[0.903281],[-2.303793],[1.733456],[-5.432561],[8.037198],[0.494016],[1.932049],[-0.811315],[-3.248454],[0.101616],[-0.364746],[-6.211144],[1.870598],[8.034056],[6.209341],[-6.038454],[-6.119795],[-5.724798],[0.917678],[2.445476],[-5.943884],[7.833223],[-0.991997],[3.971180],[4.692901],[0.413045],[-3.378759],[-8.371809],[7.272616],[-4.492082],[3.151130],[-2.716827],[8.744971],[8.557372],[6.927917],[9.510417],[3.889583],[2.179772],[-8.130516],[7.790630],[6.580641],[8.082373],[-6.685465],[-8.688324],[4.551449],[-0.130266],[4.430220],[4.979585]], dtype = "float32")#candidate|1725|(120, 1)|const|float32
call_1724 = relay.TupleGetItem(func_1584_call(relay.reshape(const_1725.astype('float32'), [120,])), 1)
call_1726 = relay.TupleGetItem(func_1587_call(relay.reshape(const_1725.astype('float32'), [120,])), 1)
var_1729 = relay.var("var_1729", dtype = "uint32", shape = (11, 16, 9))#candidate|1729|(11, 16, 9)|var|uint32
bop_1730 = relay.not_equal(call_1724.astype('bool'), relay.reshape(var_1729.astype('bool'), relay.shape_of(call_1724))) # shape=(11, 16, 9)
bop_1733 = relay.not_equal(call_1726.astype('bool'), relay.reshape(var_1729.astype('bool'), relay.shape_of(call_1726))) # shape=(11, 16, 9)
func_1065_call = mod.get_global_var('func_1065')
func_1068_call = mutated_mod.get_global_var('func_1068')
const_1740 = relay.const([5,8,8,-1,9,-2,-6,7,2,-7,-2,7,-4,9,4,-5,-5,-3,10,5,-1,4,-6,9,6,2,-8,4,-9,-3,-2,2,-1,10,8,-3,-4,8,-5,7,-2,1,-10,-3,-7,10,7,7,-8,9,4,-8,-8,6,3,5,4,7,-1,3,-7,7,8,1,-3,-3,-4,-3,7,-6,-7,-10,-8,-7,7,7,4,7,-10,-7,1,-7,-2,9,-4,-2,5,3,8,2,-9,-9,-5,-6,-9,5,4,-6,6,8,10,10,3,-9,-3,-6,2,-7,6,-9,6,-4,9,9,-5,5,6,-1,1,9,2,8,5,-10,-7,-5,-6,3,10,1,6,3,5,2,5,-2,9,3,-3,4,-4,3,9,-5,8,6,-2,-8,4,-5,-3,10,-4,5,-7,-7,7,1,6,7,-2,7,-4,2,-7,1,-1,10,-3,3,4,-1,10,1,5,-7,2,10,-1,6,-9,-7,-7,6,-4,9,8,2,-1,-1,10,-5,4,-8,10,-4,-10,-9,-10,6,3,5,-9,-9,-10,9,2,4,-9,-2,6,-10,-7,-5,4,-2,-9,10,3,-8,-2,5,-1,10,1,3,-8,-6,-1,-3,-2,-4,3,1,-5,-1,6,-3,-4,10,-4,7,-3,-8,-3,7,-7,10,-5,8,-10,7,4,4,2,5,5,2,4,2,3,7,-2,-2,8,9,8,3,-5,-1,-2,-4,10,-7,-6,-6,-10,-10,9,-1,3,-4,-5,4,5,6,-6,8,-8,2,4,4,-2,8,6,8,-7,-2,-9,-2,-4,6,1,-5,9,-5,-9,6,-3,3,-4,-9,-5,-3,7,-3,-4,-10,10,-5,5,1,9,5,4,9,1,8,1,2,-5,-9,-1,5,6,-2,8,-7,3,-6,2,-4,7,8,-1,6,-5,-6,-5,10,9,-4,-3,5,-3,-2,10,7,-6,-5,-7,-7,-9,-9,-4,-6,8,1,1,9,8,-8,-7,-6,-9,-4,-6,-9,1,-9,-4,9,7,7,-5,1,-8,-4,1,2,2,8,-4,-5,4,2,-1,2,-1,7,5,-1,-6,-2,6,-10,-7,-8,-5,7,-7,9,-8,-7,2,-6,3,-2,2,-7,-7,7,-5,-6,-8,-2,-2,6,-4,10,8,-4,1,9,1,2,-2,1,-5,-8,10,9,-2,1,-7,-3,4,5,5,-3,-9,4,5,9,-2,3,6,3,9,4,-6,-1,4,8,-10,-6,5,10,-5,9,5,-9,-8,-9,-8,-2,-1,5,-1,-7,-5,1,2,1,2,3,6,10,-6,-10,3,-1,9,10,-10,-2,-9,-8,-8,-6,-10,8,3,-9,-7,5,5,4,3,-3,-2,-9,-9,2,5,8,9,1,-3,4,1,10,7,-7,10,3,-6,5,-1,-3,-4,-2,-8,-8,-5,-1,-2,-4,6,7,-3,8,-5,5,9,-4,10,10,1,8,-10,4,-1,1,10,-3,-10,-2,-5,3,-6,9,-3,5,6,-1,4,6,-6,3,7,-10,-9,2,-1,6,-9,3,-3,-7,-2,3,6,1,8,-9,-10,-10,3,-2,6,-10,-4,-9,3,-6,-6,1,10,-3,8,3,-3,8,8,8,10,3,3,1,-9,1,7,7,-3,-8,-2,-8,8,9,-6,2,-7,9,6,-5,6,8,7,-3,-6,1,5,-3,5,-9,-2,-6,3,-8,5,3,9,-7,7,-7,4,-2,-7,-2,-8,-7,1,9,9,2,-1,7,6,-6,-7,-7,3,8,4,-6,10,-5,7,4,1,1], dtype = "uint16")#candidate|1740|(672,)|const|uint16
call_1739 = relay.TupleGetItem(func_1065_call(relay.reshape(const_1725.astype('float32'), [5, 2, 12]), relay.reshape(const_1740.astype('uint16'), [672,]), ), 1)
call_1741 = relay.TupleGetItem(func_1068_call(relay.reshape(const_1725.astype('float32'), [5, 2, 12]), relay.reshape(const_1740.astype('uint16'), [672,]), ), 1)
func_353_call = mod.get_global_var('func_353')
func_355_call = mutated_mod.get_global_var('func_355')
call_1744 = relay.TupleGetItem(func_353_call(relay.reshape(const_1714.astype('uint32'), [9, 3, 12])), 0)
call_1745 = relay.TupleGetItem(func_355_call(relay.reshape(const_1714.astype('uint32'), [9, 3, 12])), 0)
func_696_call = mod.get_global_var('func_696')
func_700_call = mutated_mod.get_global_var('func_700')
call_1747 = relay.TupleGetItem(func_696_call(relay.reshape(const_1713.astype('uint16'), [11, 11, 5]), relay.reshape(const_1714.astype('uint32'), [324,]), ), 2)
call_1748 = relay.TupleGetItem(func_700_call(relay.reshape(const_1713.astype('uint16'), [11, 11, 5]), relay.reshape(const_1714.astype('uint32'), [324,]), ), 2)
uop_1756 = relay.acos(var_1702.astype('float32')) # shape=(9, 15, 8)
const_1766 = relay.const([2,-10,-8,-3,-1,1,9,7,-9,7,-5,-2,1,6,-6,-10,5,-3,-8,2,-1,7,1,8,-8,5,-9,2,5,-1,-1,1,-1,-8,3,10,-3,3,-2,-5,7,6,9,7,-6,-6,9,2,2,-1,-8,-6,-10,4,-2,-4,10,-7,8,4,-10,2,8,3,3,-4,7,-3,-10,8,-7,3,2,6,-1,5,-1,-5,10,8,2,-6,1,-5,-8,7,5,5,-1,9,-1,5,1,10,10,7,-9,2,-4,-5,1,-10,-1,4,-7,-3,-7,-2,-10,2,-2,3,-3,3,1,-2,9,9,-8,-9,-7,-5,3,-5,-10,7,5,5,-5,7,-8,10,-2,5,-5,-5,1,9,7,-8,-2,-1,7,6,6,-9,10,-10,-2,2,-1,10,-9,7,4,5,2,-2,1,10,9,2,3,-4,8,2,7,1,-10,3,6,9,-5,-5,-9,6,6,-9,-9,-4,9,8,8,1,10,4,-4,-1,4,-5,-3,-10,10,-8,10,-8,7,-4,-5,-3,-1,-8,9,-1,-5,5,9,7,-5,-10,8,-4,2,-2,-5,2,3,10,-9,-5,9,-2,-5,10,7,-5,-8,2,10,-6,10,-2,8,-6,-3,3,3,4,6,10,-6,8,5,-3,-3,-10,9,-7,4,-5,-4,-2,-6,5,-2,5,9,1,3,-8,7,3,-2,4,-4,6,9,-5,4,-7,6,-4,5,-8,1,9,6,3,-2,7,-8,-6,-10,-10,-4,1,-8,4,2,4,-9,-1,-6,-4,-3,-6,3,6,6,6,-4,7,-3,7,-2,1,5,6,-8,2,3,-2,4,8,5,-8,-2,-3,6,4,-1,9,9,-9,-10,-10,-1,-7,-10,4,8,6,-7,-7,-9,10,6,-7,-7,-1,9,9,-4,6,-9,1,2,-9,6,-9,5,-4,1,5,10,-4,-9,-1,-9,-9,9,8,-9,8,3,10,-9,10,-6,7,-4,4,-5,-8,-2,-5,-9,2,-1,1,10,-3,-6,6,-9,9,-7,9,-8,8,-4,-2,-5,-10,5,-10,5,-1,-8,4,-3,3,5,-1,8,2,-2,6,-9,6,10,-8,-1,5,-7,9,3,7,5,-9,-7,7,-7,7,-9,-9,-10,3,5,1,10,-9,3,9,8,-10,-10,4,-2,-3,-5,10,-9,-7,5,-4,9,8,-3,-1,-6,6,10,5,-3,2,1,3,9,2,-9,8,2,-1,4,6,3,-8,-1,6,3,4,-2,-4,7,2,4,4,-8,3,-7,4,2,-4,6,9,-7,-3,-9,9,-3,-4,3,-3,4,-4,6,10,1,10,-7,-9,1,-3,-1,10,5,10,-3,10,-10,8,-4,1,6,5,10,8,-7,4,5,-1,6,-8,-6,-6,-3,-2,5,-10,-7,-2,10,8,1,5,-4,4,-8,10,-9,2,-3,6,-8,-6,-3,1,8,-3,1,-3,-4,6,-9,8,7,9,4,7,-4,-6,3,2,-7,10,-3,-3,-10,-1,-5,7,8,-1,1,-4,-5,2,10,-9,9,4,-2,8,-4,-1,9,3,3,-10,6,-7,-8,6,5,2,-7,-5,-3,-3,2,-10,-3,8,8], dtype = "uint16")#candidate|1766|(605,)|const|uint16
bop_1767 = relay.divide(const_1713.astype('float32'), relay.reshape(const_1766.astype('float32'), relay.shape_of(const_1713))) # shape=(605,)
uop_1773 = relay.cosh(const_1766.astype('float32')) # shape=(605,)
uop_1776 = relay.atanh(uop_1773.astype('float64')) # shape=(605,)
func_1674_call = mod.get_global_var('func_1674')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_1798 = relay.TupleGetItem(func_1674_call(), 1)
call_1799 = relay.TupleGetItem(func_1675_call(), 1)
func_1284_call = mod.get_global_var('func_1284')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_1803 = relay.TupleGetItem(func_1284_call(relay.reshape(const_1725.astype('float32'), [6, 20]), relay.reshape(call_1724.astype('uint32'), [396, 4]), relay.reshape(var_1729.astype('uint32'), [396, 4]), ), 2)
call_1804 = relay.TupleGetItem(func_1288_call(relay.reshape(const_1725.astype('float32'), [6, 20]), relay.reshape(call_1724.astype('uint32'), [396, 4]), relay.reshape(var_1729.astype('uint32'), [396, 4]), ), 2)
func_353_call = mod.get_global_var('func_353')
func_355_call = mutated_mod.get_global_var('func_355')
call_1812 = relay.TupleGetItem(func_353_call(relay.reshape(call_1712.astype('uint32'), [9, 3, 12])), 0)
call_1813 = relay.TupleGetItem(func_355_call(relay.reshape(call_1712.astype('uint32'), [9, 3, 12])), 0)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_1821 = func_1398_call()
call_1822 = func_1398_call()
output = relay.Tuple([call_1712,const_1714,bop_1721,const_1725,bop_1730,call_1739,const_1740,call_1744,call_1747,uop_1756,bop_1767,uop_1776,call_1798,call_1803,call_1812,call_1821,])
output2 = relay.Tuple([call_1715,const_1714,bop_1721,const_1725,bop_1733,call_1741,const_1740,call_1745,call_1748,uop_1756,bop_1767,uop_1776,call_1799,call_1804,call_1813,call_1822,])
func_1827 = relay.Function([var_1702,var_1729,], output)
mod['func_1827'] = func_1827
mod = relay.transform.InferType()(mod)
mutated_mod['func_1827'] = func_1827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1827_call = mutated_mod.get_global_var('func_1827')
var_1829 = relay.var("var_1829", dtype = "int64", shape = (9, 15, 8))#candidate|1829|(9, 15, 8)|var|int64
var_1830 = relay.var("var_1830", dtype = "uint32", shape = (11, 16, 9))#candidate|1830|(11, 16, 9)|var|uint32
call_1828 = func_1827_call(var_1829,var_1830,)
output = call_1828
func_1831 = relay.Function([var_1829,var_1830,], output)
mutated_mod['func_1831'] = func_1831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1674_call = mod.get_global_var('func_1674')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_1847 = relay.TupleGetItem(func_1674_call(), 1)
call_1848 = relay.TupleGetItem(func_1675_call(), 1)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_1867 = relay.TupleGetItem(func_1482_call(), 0)
call_1868 = relay.TupleGetItem(func_1484_call(), 0)
const_1873 = relay.const([[[True,True,False,True,True,False,False,False,False,True,True,False],[False,True,False,False,False,False,True,False,False,False,False,False],[False,False,True,False,True,False,False,False,True,True,True,False],[True,False,True,True,True,False,True,True,True,True,False,False],[False,True,False,False,True,False,False,False,False,False,False,True],[False,False,True,True,True,True,False,False,True,True,True,False],[True,True,True,True,False,True,True,False,False,True,False,False],[True,True,False,False,True,False,True,True,False,True,False,False],[False,False,False,True,True,False,True,True,True,False,False,True],[False,True,False,False,False,False,False,True,True,False,True,False],[False,True,True,True,False,False,True,False,False,True,True,False],[True,False,True,False,False,True,False,False,False,False,True,False],[False,True,True,False,False,True,False,False,False,False,True,False],[False,False,False,False,False,True,False,True,True,True,False,True]],[[False,False,False,False,False,True,False,False,False,False,False,False],[True,True,True,True,True,False,True,True,True,True,True,True],[False,False,False,True,True,False,False,False,False,False,False,False],[True,True,True,False,True,True,False,False,False,True,True,True],[False,False,False,True,True,False,False,True,False,False,False,True],[True,False,True,True,True,False,False,False,True,True,False,False],[False,True,False,True,False,True,False,False,True,True,True,False],[True,True,True,True,False,True,False,True,True,False,False,False],[False,False,True,True,True,True,True,False,False,True,True,True],[False,True,True,True,False,True,True,True,False,False,False,False],[True,True,True,False,True,False,True,True,False,False,False,False],[True,True,False,False,False,True,True,False,False,False,True,True],[True,False,False,False,False,True,False,True,False,False,True,True],[False,False,False,False,False,False,False,False,True,False,False,True]],[[True,True,True,False,True,False,True,True,False,True,True,False],[False,True,True,False,True,False,True,True,True,True,False,True],[True,False,True,False,True,True,True,False,False,False,False,False],[False,True,True,False,True,False,False,True,True,True,False,True],[False,True,False,True,True,False,False,False,True,False,True,False],[True,False,False,False,True,True,False,True,False,True,False,True],[True,False,True,False,False,True,True,False,False,False,True,True],[False,True,False,True,True,True,True,True,True,False,True,False],[True,True,False,True,False,False,True,True,False,False,True,False],[True,True,False,True,True,True,True,True,True,True,True,False],[False,False,True,True,False,False,False,True,True,False,True,True],[False,False,False,False,False,False,True,True,True,True,False,False],[True,True,True,False,False,False,False,False,True,False,False,True],[False,False,True,False,False,False,True,False,False,False,False,False]],[[False,True,True,True,True,True,True,False,True,False,False,True],[True,False,False,False,False,False,True,True,False,False,True,False],[False,False,False,False,False,False,False,False,False,True,True,True],[True,False,True,False,True,True,True,False,True,True,False,False],[True,True,True,True,False,False,True,False,False,True,True,True],[False,True,True,False,True,True,True,False,True,False,False,False],[True,True,False,False,True,False,False,False,False,True,False,False],[True,True,False,False,True,True,True,True,True,False,True,False],[True,False,False,True,False,False,True,True,True,False,True,False],[False,False,True,False,True,True,False,True,False,True,True,True],[False,False,False,True,False,True,True,False,True,True,True,True],[True,False,False,True,False,False,True,True,False,False,True,True],[True,False,False,False,True,True,True,True,True,False,True,False],[True,False,False,True,False,True,False,True,True,True,False,False]],[[True,False,True,True,False,False,False,False,False,True,False,True],[False,True,True,False,True,False,False,True,False,False,False,False],[True,False,False,False,True,False,False,False,False,True,True,True],[False,False,True,False,True,True,False,True,False,True,True,False],[True,True,True,True,True,True,False,False,True,False,True,True],[False,True,True,True,True,True,False,True,True,True,True,False],[False,True,True,False,False,True,False,True,False,True,True,False],[False,True,False,False,True,True,True,True,True,False,False,False],[True,False,True,False,True,False,False,True,False,False,False,False],[True,False,False,True,False,True,True,False,False,False,False,True],[True,True,False,False,False,True,False,True,True,True,False,True],[False,False,False,False,False,False,False,True,True,False,True,True],[True,False,True,True,False,False,False,False,True,True,False,True],[False,True,True,True,False,True,False,False,True,True,False,False]],[[True,True,True,False,True,False,True,True,True,True,False,True],[True,True,True,False,False,False,False,False,True,True,True,True],[False,False,False,True,True,False,True,False,True,True,True,True],[True,False,False,False,True,False,False,False,True,True,True,True],[True,True,True,False,False,True,False,False,True,False,True,False],[False,True,False,False,False,True,True,True,False,True,False,True],[True,False,False,True,True,True,False,True,False,False,True,False],[True,True,False,False,True,True,False,False,False,False,False,False],[False,True,False,False,False,False,True,True,False,True,False,True],[False,True,False,False,True,False,False,False,True,False,False,True],[False,False,True,False,False,True,True,False,False,True,False,False],[True,False,True,True,True,False,False,False,True,True,False,False],[True,True,False,False,True,False,True,True,False,False,False,False],[True,True,True,True,False,True,True,True,True,True,False,True]],[[True,False,True,False,True,True,False,False,False,False,True,False],[False,False,True,False,True,True,False,False,False,True,False,False],[True,True,True,False,False,True,True,True,False,False,True,True],[False,True,False,False,True,True,False,True,True,False,True,False],[True,False,True,False,True,True,False,False,False,False,True,True],[True,False,False,True,True,False,True,True,True,True,True,True],[False,False,False,True,False,False,False,True,False,True,True,True],[False,False,False,False,False,True,True,True,True,False,True,False],[False,False,True,True,True,True,False,True,True,True,False,True],[True,False,False,True,True,False,False,True,False,False,False,False],[True,True,True,True,True,False,True,True,False,True,True,True],[False,True,False,True,False,True,False,True,True,False,False,True],[False,True,False,False,True,False,False,True,False,False,False,True],[False,True,True,True,False,False,False,False,True,True,True,False]],[[False,True,True,True,False,False,False,False,True,True,True,False],[True,True,True,True,True,True,True,False,True,False,True,True],[False,True,False,True,False,True,True,False,True,True,False,True],[True,False,True,False,True,False,False,True,False,False,False,True],[True,True,True,False,True,False,False,True,False,False,True,False],[True,False,True,False,True,True,True,False,True,True,False,True],[True,True,False,True,True,False,True,False,False,False,True,True],[True,True,True,True,True,False,True,False,False,False,True,False],[True,False,False,True,True,True,False,True,False,False,False,True],[False,True,True,False,False,False,False,True,True,True,False,False],[True,True,True,True,False,False,True,True,False,False,False,False],[True,False,True,True,False,True,False,True,True,True,True,True],[False,True,False,True,False,False,False,True,True,True,True,True],[True,False,True,True,False,True,True,True,False,False,False,False]]], dtype = "bool")#candidate|1873|(8, 14, 12)|const|bool
bop_1874 = relay.less_equal(call_1867.astype('bool'), relay.reshape(const_1873.astype('bool'), relay.shape_of(call_1867))) # shape=(8, 14, 12)
bop_1877 = relay.less_equal(call_1868.astype('bool'), relay.reshape(const_1873.astype('bool'), relay.shape_of(call_1868))) # shape=(8, 14, 12)
var_1890 = relay.var("var_1890", dtype = "bool", shape = (8, 14, 12))#candidate|1890|(8, 14, 12)|var|bool
bop_1891 = relay.bitwise_or(call_1847.astype('int16'), relay.reshape(var_1890.astype('int16'), relay.shape_of(call_1847))) # shape=(8, 14, 12)
bop_1894 = relay.bitwise_or(call_1848.astype('int16'), relay.reshape(var_1890.astype('int16'), relay.shape_of(call_1848))) # shape=(8, 14, 12)
bop_1896 = relay.greater(const_1873.astype('bool'), relay.reshape(var_1890.astype('bool'), relay.shape_of(const_1873))) # shape=(8, 14, 12)
bop_1903 = relay.equal(call_1847.astype('bool'), relay.reshape(bop_1874.astype('bool'), relay.shape_of(call_1847))) # shape=(8, 14, 12)
bop_1906 = relay.equal(call_1848.astype('bool'), relay.reshape(bop_1877.astype('bool'), relay.shape_of(call_1848))) # shape=(8, 14, 12)
output = relay.Tuple([bop_1891,bop_1896,bop_1903,])
output2 = relay.Tuple([bop_1894,bop_1896,bop_1906,])
func_1921 = relay.Function([var_1890,], output)
mod['func_1921'] = func_1921
mod = relay.transform.InferType()(mod)
mutated_mod['func_1921'] = func_1921
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1922 = relay.var("var_1922", dtype = "bool", shape = (8, 14, 12))#candidate|1922|(8, 14, 12)|var|bool
func_1921_call = mutated_mod.get_global_var('func_1921')
call_1923 = func_1921_call(var_1922)
output = call_1923
func_1924 = relay.Function([var_1922], output)
mutated_mod['func_1924'] = func_1924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_1932 = relay.TupleGetItem(func_1482_call(), 0)
call_1933 = relay.TupleGetItem(func_1484_call(), 0)
func_1370_call = mod.get_global_var('func_1370')
func_1374_call = mutated_mod.get_global_var('func_1374')
const_1935 = relay.const([8.490775,6.572979,-1.673747,-3.292957,-0.561597,2.996461,0.983145,4.871066,-2.598882,6.119439,-9.831780,9.510155,1.604679,3.712626,6.518647,7.123843,-3.194077,-1.595115,-9.389853,7.070521,-8.034225,8.225883,-0.033736,-8.977815,4.398503,4.833801,-9.218346,2.064054,2.729767,-8.445430,6.784859,3.541847,-6.437451,-8.133969,-1.675323,7.981632,-9.944962,-0.058786,-0.312540,5.739107,-1.173174,2.880301,4.339947,-2.019336,0.123113,3.754282,-6.853908,4.392857,2.485877,8.818497,0.275624,-4.424015,7.807178,1.284219,-2.031551,2.077984,8.113510,5.306507,3.762297,6.608690,-3.792158,6.454311,7.978228,0.379486,-0.112632,-7.938725,5.996750,2.957956,8.552139,-1.912762,-1.346220,-6.383954,-9.110097,-5.189711,4.297814,5.276643,5.214982,-3.190294,5.834995,7.082876,-5.660814,3.222438,-5.603547,-0.852341,0.117661,6.344197,-1.459344,-9.551212,0.906553,7.460972,-2.775011,-2.323461,5.886465,8.801156,-9.711909,2.674693,-2.475610,9.679096,0.848693,8.948682,-5.659743,-6.318009,-4.944644,-8.458576,-5.385006,7.204862,-4.526708,-7.096918,-6.321093,-2.190902,-1.165814,-9.986365,-3.945680,7.156567,8.318206,6.628969,-1.981802,3.666161,-3.933399,-6.558208], dtype = "float32")#candidate|1935|(120,)|const|float32
const_1936 = relay.const([4,3,9,-7,9,-3,-8,2,-5,-8,9,9,-3,-7,3,-3,4,-7,3,3,-3,-9,-3,-10,9,1,2,-8,-10,2,-3,-10,-10,9,-1,5,9,9,-7,8,7,-4,3,5,-6,-7,-1,7,-2,-7,7,10,-10,-9,6,-4,9,3,1,5,7,6,7,-1,10,-5,-2,4,-2,8,10,-4,-2,-3,6,-10,-10,-3,2,9,4,8,6,9,-2,-9,-10,3,9,3,-4,8,-1,-10,-5,-2,2,4,-9,10,-9,-6,-2,-1,5,-6,-8,2,5,10,-2,6,2,3,-4,-7,-2,2,-3,4,-8,8,3,5,3,-8,10,10,6,5,8,3,-6,3,9,-7,8,-4,5,-10,7,-3,2,8,9,-7,7,7,6,-3,9,-3,5,-9,7,9,7,-10,7,6,3,-1,3,4,-7,-4,8,3,-5,4,-2,-7,-6,8,6,7,7,-10,5,-2,2,9,3,3,-6,1,1,7,-4,-1,8,10,8,-8,5,-5,5,-6,8,8,8,2,-7,9,5,-2,9,-8,3,10,-7,-4,9,-3,-1,10,2,1,2,-3,-9,10,8,-5,-6,-6,9,7,9,-6,-3,-10,-2,-4,-10,-1,-1,-8,-1,-7,-9,-1,-4,8,-10,-6,3,-8,8,1,-7,8,5,7,1,4,9,-10,-6,8,5,3,-1,-4,2,-8,8,-9,4,-7,-9,6,-8,3,-7,2,-7,9,-5,-9,-6,6,-5,-7,10,-5,-6,-9,9,8,6,-5,6,-1,7,-8,8,-9,10,1,1,-10,-7,1,4,-10,-1,1,1,8,3,10,-1,-4,4,-2,-1,2,-3,6,6,6,-2,-7,-1,8,-3,7,9,7,-7,10,1,-8,7,-2,1,-10,-4,-6,4,-1,6,10,-9,9,-8,-4,1,3,-7,10,-2,-10,9,-5,4,9,4,-3,8,9,-1,5,6,-9,-3,-10,1,-3,-8,3,-4,9,-2,1,6,-6,-2,8,-8,-10,8,-8,-3,-1,-1,4,9,-3,8,2,3,-1,-10,-4,8,9,-7,-6,10,-1,4,-8,9,-7,-7,-2,-9,-7,2,5,-9,-5,-5,-7,8,8,3,8,-9,-10,-4,-7,5,-9,-9,-8,-3,5,6,3,-9,-8,8,8,-1,-2,-1,5,6,7,-10,-6,-8,1,2,-7,-6,5,3,9,-2,-8,-3,2,-8,-5,-4,1,1,-5,7,-5,-1,5,6,9,-7,2,9,-9,3,-5,-6,-6,-2,1,-6,-10,-9,-10,-3,2,5,9,-7,3,4,-4,6,-9,-4,-8,7,9,5,10,10,9,7,9,8,-6,10,5,4,6,2,-10,2,-4,9,-6,-7,4,2,-8,5,-5,3,-5,-1,5,-5,-4,-2,-7,-4,10,7,-5,-7,-9,8,1,3,-10,-7,10,10,10,-4,-7,-7,2,-10,4,4,4,-9,-5,9,7,-2,7,-2,-6,-3,7,-9,-5,-9,-10,2,7,9,4,-7,3,9,-1,-8,-7,9,10,-6,9,-1,8,-3,5,-7,9,1,3,-3,-10,1,-9,-5,10,-1,7,-8,-7,2,-2,-2,-2,2,-4,-2,-5,4,-5,2,-2,-4,6,6,4,5,8,6,2,-7,-4,-1,-2,-2,5,2,-8,-8,10,-6,-1,-10,-10,-1,6,-9,7,-9,6,-7,7,10,-6,10,10,8,-8,-4,-7,-3,3,5,-1,-10,-8,-9,4,10,6,6,7,1,4,-6,-8,-4,-10,-2,3,-7,9,-6,5,-5,-6,-9,4,-8,5,9,-4,8,-4,-4,-2,-10,7,6,-1,-5,1,-2,5,-3,-8,6,7,-4,4,-10,9,9,-5,9,5,7,-9,-1,2,3,-8,10,4,-8,1,5,9,7,-7,2,-2,8,-9,-4,-4,-9,-9,-8,2,-9,6,-3,6,-9,-8,-6,1,2,4,-10,-4,-1,-9,-3,-6,4,-6,7,6,-6,-8,-5,-8,-10,4,3,9,2,-2,9,-9,10,-9,-9,2,1,8,10,4,8,-7,7,-2,6,-4,-4,7,8,10,2,1,-3,-9,4,-10,-1,-1,7,-7,-1,-9,4,8,3,-9,9,6,10,-4,9,7,5,8,3,-6,-6,7,10,-2,-3,-7,3,-4,-9,7,4,-7,2,-10,3,-9,-8,9,-4,-2,3,9,3,3,2,7,6,7,-1,4,1,-5,2,9,-6,-10,2,-9,3,-4,-1,-2,-7,4,-6,-4,-2,7,4,9,-9,-10,-8,-6,10,7,3,8,-10,9,-3,-4,3,-10,-9,6,-7,9,-5,10,4,-9,-9,-6,3,7,-10,2,2,10,-10,9,3,5,-2,-7,2,-3,5,4,-9,-4,3,2,-8,7,1,5,6,1,-7,-6,6,-2,3,9,-8,-10,-8,6,-7,4,-1,-1,1,6,-2,-8,6,-9,7,-10,2,-6,4,-6,5,8,-1,4,3,-1,-4,1,-1,10,8,-3,-2,1,-10,-7,-9,4,8,-3,10,3,-2,-6,7,-1,8,5,2,5,5,1,-1,-5,1,-7,1,-4,8,-4,-8,10,-8,3,3,3,2,-3,7,9,5,10,7,6,6,8,6,9,5,3,-1,-7,2,-3,7,10,7,-9,-6,8,7,-5,8,-5,7,2,-8,-9,8,-1,2,-8,-3,-3,-1,10,-7,-1,8,-9,-5,3,9,-6,-3,-3,-10,6,-9,10,-8,-10,-5,1,6,-10,-10,-6,4,5,1,-2,10,-2,-5,-10,3,1,10,1,1,-1,-4,-7,1,6,1,-10,-8,-1,-5,9,1,-5,-1,9,10,2,-8,-4,2,-8,-2,5,1,4,-6,-3,2,-10,-6,4,2,10,6,7,-8,2,-3,9,-2,9,7,-9,-10,3,-1,-2,4,10,-7,-7,-2,-4,-7,-9,9,10,-10,4,-7,7,-3,-8,-10,6,-5,-4,-5,2,-3,-2,-8,8,-9,-9,-9,-4,-5,1,3,3,-4,7,-5,-1,3,-9,-6,-1,9,-3,8,5,2,-9,5,4,-8,9,3,2,-1,-9,9,-4,-1,1,4,5,1,-10,-5,-8,-9,-6,4,10,-10,4,8,2,-5,-1,6,-3,-9,7,-9,-6,-1,3,-2,-3,-2,6,7,1,8,8,-7,4,6,-9,6,7,10,5,3,-8,6,-6,1,-4,-9,-6,-5,-2,2,10,-9,-7,7,2,-9,6,4,10,-7,-6,-9,3,-3,-7,-8,-6,3,5,5,-1,-8,2,7,9,6,-10,-10,-1,10,1,-6,-3,10,1,5,-2,9,7,5,9,3,-6,-4,9,6,2,-7,-3,4,4,5,4,-9,-9,-9,6,10,7,1,-10,6,-9,6,9,5,1,7,-4,-8,-1,-3,-9,10,-9,-1,-8,-10,9,-8,-7,-2,-4,8,7,1,1,4,-9,5,5,-6,3,1,-3,10,3,2,1,7,4,-8,4,-6,-6,10,8,-6,3,5,-8,5,9,1,7,-9,-6,7,-9,-2,5,8,-7,8,-4,5,10,-7,9,-10,-8,7,-6,-5,-9,-9,8,-10,6,4,-1,-3,-8,1,-10,2,-9,-3,5,-7,-2,1,-8,4,10,-3,6,-5,8,-2,4,8,4,6,9,6,-4,1,1,-3,5,6,-3,6,5,-2,1,-2,-1,-6,4,2,-2,-9,2,4,9,9,-10,-3,-2,-4,3,9,4,4,9,7,1,-4,1,10,-9,2,-5,-2,8,-1,-2,6,-8,-6,-10,-10,-3,6,2,2,7,9,-8,9,7,-10,-10,6,9,-7,-9,2,1,3,-3,5,10,-10,-4,-6,-8,-1,5,8,-1,4,4,-9,-3,-10,-1,6,6,-2,6,-3,-6,-5,-4,-6,-2,3,6,2,-8,6,5,3,-10,4,-4,-10,-5,-3,10,2,-10,7,-8,-7,-9,-6,-7,-8,3,-4,-2,1,-1,-6,6,10,-4,-3,-6,-1,-3,1,-5,8,-4,-6,7,4,6,7,-8,9,4,6,-4,6,1,9,10,-5,8,-1,-1,-2,-4,8,-8,6,10,-3,-7,6,-8,-4,-2,3,10,-6,-8,9,-9,-6,3,10,-1,2,4,8,2,-2,-10,-6,-8,5,-5,10,9,-3,-7,10,8,8,9,-5,7,-7,4,-1,-8,-10,9,6,-7,4,2,6,5,1,1,7,3,6,7], dtype = "uint32")#candidate|1936|(1584,)|const|uint32
var_1937 = relay.var("var_1937", dtype = "float32", shape = (36,))#candidate|1937|(36,)|var|float32
call_1934 = relay.TupleGetItem(func_1370_call(relay.reshape(const_1935.astype('float32'), [60, 2]), relay.reshape(const_1936.astype('uint32'), [1584,]), relay.reshape(var_1937.astype('float32'), [9, 4]), ), 5)
call_1938 = relay.TupleGetItem(func_1374_call(relay.reshape(const_1935.astype('float32'), [60, 2]), relay.reshape(const_1936.astype('uint32'), [1584,]), relay.reshape(var_1937.astype('float32'), [9, 4]), ), 5)
uop_1956 = relay.sinh(const_1936.astype('float64')) # shape=(1584,)
var_1971 = relay.var("var_1971", dtype = "float64", shape = (1584,))#candidate|1971|(1584,)|var|float64
bop_1972 = relay.bitwise_and(uop_1956.astype('int64'), relay.reshape(var_1971.astype('int64'), relay.shape_of(uop_1956))) # shape=(1584,)
func_1921_call = mod.get_global_var('func_1921')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_1975 = relay.TupleGetItem(func_1921_call(relay.reshape(call_1932.astype('bool'), [8, 14, 12])), 2)
call_1976 = relay.TupleGetItem(func_1924_call(relay.reshape(call_1932.astype('bool'), [8, 14, 12])), 2)
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
const_1979 = relay.const([3,-6,-6,8,-1,2,-2,2,8,-2,-4,-7,7,3,3,2,5,-8,8,-10,4,6,4,-3,-4,5,8,-9,6,-9,-3,-4,10,-1,9,-1,5,9,5,-4,-7,-9,1,-1,1,5,-10,-4,2,-1,9,3,9,-5,-2,-5,8,-5,1,7,6,8,2,8,-7,4,-1,2,-9,-4,6,1,3,-4,-1,-8,2,5,-8,-7,-2,-3,-7,4,-3,-6,-8,-4,2,7,8,2,-3,-5,2,6,-4,8,7,9,8,9,-4,-1,1,-2,5,-1,3,-9,-8,8,7,5,-5,2,-2,3,3,2,2,-5,8,-7,-1,-5,-1,-3,6,-2,2,6,6,10,3,-5,6,2,-5,-6,-5,-5,5,-7,-6,3,5,-4,9,10,5,-7,-5,-6,9,-5,4,-1,8,9,-8,-3,-4,-4,10,4,-9,-6,-1,-5,6,-5,9,-9,-3,-4,1,-4,4,-7,-1,-10,6,-5,10,-7,9,7,7,9,-4,-3,-10,-1,4,-9,-3,-5,4,-5,-9,9,6,8,-1,7,9,2,6,2,-1,3,9,-2,8,-5,2,7,-1,-5,-3,8,10,-1,-3,-4,-5,10,-5,-7,2,3,10,-3,-6,-3,-9,-3,1,5,9,10,-8,-2,-3,-9,-2,8,-10,-3,7,7,9,7,4,-3,3,10,4,-6,10,-1,-6,6,-7,-4,7,4,-1,-7,3,9,5,-7,9,5,7,-4,2,10,-1,8,6,-5,1,2,-1,-1,-10,3,-10,-1,-4,-9,-6,-8,5,-4,-7,8,10,5,-2,-6,-3,-4,-1,1,1,-4,10,4,9,6,9,-6,-5,10,5,10], dtype = "uint64")#candidate|1979|(320,)|const|uint64
call_1978 = func_561_call(relay.reshape(const_1979.astype('uint64'), [8, 8, 5]))
call_1980 = func_561_call(relay.reshape(const_1979.astype('uint64'), [8, 8, 5]))
const_1986 = relay.const([-7.302889,-0.200528,5.688718,-6.011561,9.375444,-0.160967,6.984728,8.248659,4.668938,5.907777,6.873109,-5.015053,-8.632127,-4.719646,5.207827,8.362798,-1.813607,2.986740,6.546607,-1.427970,5.359036,-6.177221,3.565404,7.414376,-7.244492,8.096224,-5.648124,8.885112,-0.991774,5.082512,-0.524825,-4.494715,4.484456,-1.996672,3.731717,1.490361,-9.390731,7.543542,3.272628,-4.784496,9.126240,5.393968,8.965652,-2.532233,6.338276,-2.404028,-5.326780,-2.454095,-7.239468,3.814124,1.524325,1.108885,-9.904417,4.804319,1.517270,1.121081,5.626019,-5.578589,-4.614362,2.344434,-4.076480,0.781113,-7.331202,-7.099527,-9.382053,-4.052304,-7.638205,7.144291,-1.705908,7.883574,1.228310,6.921884,4.236824,5.779954,-6.772012,0.859436,-1.041299,-3.791067,-7.169372,-5.832395,-0.889263,-1.736475,-3.041735,4.159061,-7.687826,-8.038444,-0.462469,6.243887,6.180608,8.732336,1.474619,-7.490396,6.027802,-3.904386,-7.413755,-2.125946,8.586073,1.958943,1.987856,-5.596765,5.183112,3.615602,-2.121790,-6.017818,6.008462,-5.274010,-9.934075,7.432686,4.180276,-6.873714,-3.301655,-3.475509,2.531407,2.967279,-1.319326,0.987804,-8.635993,8.600289,4.452006,-2.501395,9.897521,7.918575,2.490942,5.873030,-8.127107,-6.912446,7.527119,-8.078280,0.935759,1.415165,0.820643,6.815364,6.619530,4.925452,-8.493339,6.445522,-2.753720,-1.981672,4.895633,-9.054737,1.168894,-6.747366,2.720122,5.631930,-5.950501,-7.751758,6.662747,4.677794,7.611738,4.294866,-2.833694,2.497625,9.118232,3.796093,-4.872509,-8.435005,-4.913163,-6.263086,0.984336,-9.622849,-0.163383,-6.517903,3.577589,-1.352981,-3.388599,-6.807324,-4.051084,7.769865,3.686870,9.010444,-6.200698,7.964579,-5.282985,-2.860441,-5.956806,-0.530031,3.312333,-1.168826,-5.999407,8.019998,3.340869,-5.634832,-3.549846,2.018252,-5.026164,2.190077,1.930343,6.916255,-8.522592,1.884710,0.924985,3.610534,-0.710890,3.429155,-1.037312,5.886885,-9.155301,3.112280,1.676104,0.932679,7.440076,-2.851548,0.749904,9.195932,0.158830,-0.430464,-2.056642,-6.812882,-8.327818,7.432438,-4.171807,-7.297189,-6.192121,0.803819,-7.220238,7.024249,9.720216,-6.787877,-4.142288,-8.735763,9.330472,-8.907280,-1.944507,-1.259708,-7.778365,1.335864,5.306395,9.871597,-0.872628,6.480001,4.871005,-1.951052,4.410752,-4.313848,-5.173681,3.218460,2.821789,5.028820,-2.433840,-3.836455,-3.343800,-2.695297,1.989782,0.847715,-6.557677,9.123801,-9.454134,2.000612,-8.421355,2.109745,-2.330760,-7.183831,-5.452456,-0.686720,-8.554804,5.375132,-2.601462,-0.920365,1.872873,7.118317,-3.725013,-9.278679,2.268133,-1.248209,7.081296,-6.345229,7.639962,0.827109,5.701522,-5.622999,7.250882,-3.763597,2.675282,9.217759,-6.497571,1.291971,1.337279,7.253593,8.284271,5.886942,2.064678,-9.509024,-7.237985,-4.846531,2.538328,7.436878,-7.780093,5.827417,-4.145367,5.484182,3.535421,-9.572922,-7.711979,0.648743,5.384230,-7.666236,8.209175,7.991533,-8.349861,4.302187,4.840693,-0.039853,-5.673563,7.277695,7.125483,1.893987,1.035111,8.831549,-5.609995,5.734192,3.251273,-4.103012,6.348197,4.733377,-1.610888,3.958019,8.865630,8.060504,1.155501,5.718026,0.010919,-3.604988,-2.730398,-7.538220,-3.492494,-8.432623,0.652661,-5.921182,7.378560,3.024038,-6.179683,7.130213,-9.116069,1.148367,9.953953,-7.173026,-1.978705,-2.497911,6.531171,1.908899,-1.625595,7.254842,-9.394198,-5.432555,6.980514,7.568850,1.425968,-2.035199,-0.729948,4.859567,-7.093486,-9.985753,-5.666537,6.196247,-1.138440,-0.313161,-0.821261,-6.774194,4.524132,-7.179448,-7.904860,5.352581,-2.375625,-5.048165,0.453213,8.318676,0.486960,-0.982819,-1.320943,5.871687,-4.265836,6.564563,-1.352806,-2.561837,4.539638,-1.734317,-6.814142,9.084118,2.581887,8.108779,4.986752,-7.188889,8.933436,5.189636,-8.709213,-3.938939,-8.907979,-5.266462,2.566005,-9.883408,2.784725,4.669317,-1.492901,0.166750,-2.680749,6.733506,6.311496,-3.050978,-2.333738,-0.697695,8.121034,-0.244234,-0.520210,-0.833006,5.115260,-5.628845,0.819377,-3.305880,-9.503089,-1.049148,8.673047,4.856084,3.545169,7.516593,2.164434,2.998242,-0.153459,-8.627465,-7.827312,-3.381038,6.432918,-8.613115,-7.130021,5.932895,-1.921163,4.270697,8.388329,-6.117760,8.289708,-6.727038,3.601545,4.027823,4.871543,3.441514,-4.624596,1.910421,-1.718930,-8.624413,4.322088,-9.848848,0.239261,3.970784,-3.176895,-9.707846,1.118973,-7.894776,-8.252066,-0.633849,9.119176,9.673152,8.899331,6.469284,-6.806572,8.006912,5.292099,-3.534431,4.814532,8.464073,3.792271,8.709414,0.435451,-7.659842,3.239188,0.704615,-3.621711,-7.503691,-6.895609,3.201902,-9.873997,-2.708636,-9.422171,-5.574399,-8.887073,8.886855,5.996151,-5.165801,-1.524952,-4.070241,2.544235,-3.667721,-2.118869,5.806719,7.425752,-2.412156,1.491146,0.239429,3.856909,-1.179596,-3.698991,4.433068,-7.142843,-3.995686,-4.261377,4.323293,-0.609183,5.197908,-0.390557,1.586873,-9.262216,4.430808,-6.159953,5.934220,5.280337,6.183757,-8.337842,4.418053,-6.220441,9.330702,8.195301,-3.848868,6.005235,-1.116788,8.063096,5.540822,5.320871,9.154334,3.469857,7.135150,-3.655357,-9.535594,-4.104271,-7.664367,8.451131,7.156819,-1.911188,7.887761,-1.375426,7.451536,0.053051,5.407879,-4.843142,9.903222,5.904069,-5.498857,9.665452,-5.551021,-1.311050,2.298531,9.236827,-1.448856,-9.203247,4.419482,-3.639965,-8.687238,8.008706,-6.447498,5.171563,9.396627,1.309504,-9.714515,7.803277,-2.690628,1.052175,5.100626,-5.193222,-6.017948,2.947555,7.831473,6.861897,-2.455035,4.752439,-9.510158,-8.186553,-6.696920,4.755960,-0.968159,1.219963,-0.638708,-4.231691,9.757315,-9.906694,-8.635015,8.616953,8.224780,4.838488,2.507324,-8.388397,9.231907,-6.176255,-9.970846,7.834927,-7.367743,1.410505,4.684041,-4.690184,8.395559,7.219457,7.226332,0.356481,8.989320,-6.237298,-0.049496,-3.244038,0.508805,1.345282,-2.133035,-3.876060,4.101007,0.803378,-2.532925,-8.950073,-2.472159,4.943874,-0.820340,-4.218601,7.588666,8.120455,-9.271989,-1.922828,-9.633080,8.129617,-5.870925,0.937170,-1.358192,-7.092311,-7.775606,-4.274575,-4.238730,-5.294471,-9.860369,-1.642678,8.211864,2.065632,4.147332,4.437213,7.727785,-8.196220,3.051383,-8.193644,4.992189,-9.282855,7.638555,-1.597651,-3.735404,-7.500518,-3.951533,-4.372539,-4.672877,6.225282,0.683935,3.790958,5.092815,-1.386551,4.954186,-0.280907,-9.488770,4.862892,8.542691,7.110975,-0.669338,8.094033,1.791543,4.312554,2.026554,1.688141,2.957585,-2.775916,9.598879,4.491231,9.717729,1.744670,-1.775646,9.132727,-7.687373,9.614706,-8.947689,2.472241,3.969788,-1.125365,8.152328,6.474546,-0.605317,-6.280776,8.177189,9.618306,9.311894,-4.241381,5.453909,-9.522086,-2.252548,-0.308228,-2.608248,-4.666957,-5.864196,-4.464571,3.118406,4.291215,8.004595,8.249963,3.078990,4.895771,1.505745,1.305680,7.237797,-5.730762,7.799926,2.351882,8.057286,1.825032,-6.167471,3.471136,-0.695591,7.194329,-2.096445,-7.126956,6.941032,9.142102,3.514392,4.966599,-0.564913,-0.763193,9.936094,0.358215,-5.523188,-8.719514,-2.517345,-8.899270,-3.356390,2.338753,-2.871613,8.827460,6.765610,-2.250766,6.334306,-8.334800,5.125534,4.802298,-6.168610,6.510082,-6.119972,5.160749,-5.309685,5.388406,2.165450,9.904817,-9.295336,-2.876065,7.148804,-6.685573,-2.192640,-6.959979,9.258807,-1.121104,-0.382890,-9.435909,-9.028943,-8.977868,3.505740,0.835751,-3.223613,-4.396214,7.130078,-0.790492,9.036582,2.523855,4.147976,-4.468065,-9.261829,-2.290423,-6.689438,3.235459,-8.749086,0.756541,2.851467,2.504431,-5.910017,-9.762566,-4.343477,-8.111353,3.927662,1.616804,-9.949129,6.431397,7.723200,7.828237,7.013392,-3.879344,-3.101561,8.467431,-4.354334,0.858235,3.206840,9.977875,8.182985,4.607351,0.680182,3.139845,-0.023670,-1.651512,5.756316,-5.974970,-3.102467,-2.355897,-5.908489,-3.469433,-0.399543,3.891815,9.416355,7.283411,7.939328,8.907025,-5.588285,-3.404807,-7.557310,-8.511887,-3.645866,-6.582779,6.187020,-0.674855,-4.756777,-5.790844,-6.637719,-3.412609,-2.464564,-6.697456,2.927514,9.285627,9.759123,-9.543868,-0.545746,8.962169,3.473035,-6.088907,-5.632404,9.377705,5.022722,-2.038505,5.195162,-4.444510,-3.649292,7.023678,-6.732052,8.503238,-8.049488,6.760261,-3.113207,-1.392979,-0.750309,-6.779748,0.392906,-4.918596,-7.242443,-6.534998,2.608101,4.317054,-0.456208,4.208523,4.703622,-5.805717,3.277955,7.521402,-9.781302,2.093451,-0.761296,5.674170,0.798468,-7.711055,-0.168079,-6.761852,6.024425,-2.882766,-7.609692,8.812260,-1.426344,-8.855407,0.406022,-8.221360,9.419675,2.569185,5.350163,8.098372,-9.262480,-6.856412,-5.050594,-5.518792,5.931665,0.985187,9.099532,5.611845,-2.687014,0.015889,2.108986,6.653070,1.655959,-0.649088,-5.272577,-9.056294,-2.843882,4.743526,0.169463,-1.410267,-9.156097,-4.137105,-3.040808,-3.124879,9.017349,3.339993,2.193505,6.124374,5.368045,1.193453,7.966433,-7.199527,4.932151,9.597876,0.991386,2.893696,2.628178,0.590875,0.193046,3.062556,5.041458,-1.187354,3.185095,-2.479254,2.153845,-9.356320,4.157630,-3.318696,5.255211,6.870676,-0.192925,-6.812806,-9.590566,0.337066,4.130443,2.229215,1.597828,8.283509,6.146444,3.967119,-9.216061,-2.479694,-1.527573,-8.955547,-1.573799,2.601135,-1.178035,-4.966851,2.155279,-5.439508,-0.190300,-6.353804,0.205776,8.850023,5.603113,-2.658563,-1.014848,1.706031,2.253411,-4.567401,2.493438,-4.411376,-0.830941,-6.323887,0.468985,-5.062947,-1.718208,0.071415,4.074828,4.731991,-7.116132,-3.435813,-6.386096,0.602648,5.502462,6.628859,2.784037,-5.834978,-5.515026,-5.985179,6.781643,-8.011159,1.059090,-7.734306,-2.118597,8.886123,2.148273,5.766479,4.334678,2.682377,4.050004,9.675619,1.357133,-1.362249,-7.750308,2.461865,7.735181,-9.079822,7.007585,3.653724,-2.340146,-9.760615,-5.763391,0.200663,3.993532,-6.649125,0.702499,3.859541,2.302720,-8.741501,-4.607022,-0.530639,3.966420,-3.249935,3.468029,-6.716311,-4.815521,3.043499,4.320098,-4.916943,3.147541,4.620914,-2.729484,6.009740,-6.341952,-1.918404,1.727260,-4.995160,4.408424,-0.297825,9.172064,-3.433774,1.513925,-9.075820,-5.964019,1.720426,-8.570425,-8.969187,-8.350376,-5.454760,7.446356,6.259849,1.116606,-8.455942,7.817449,4.296508,2.028582,-5.530397,6.527987,5.863192,-5.968814,-6.908446,9.343807,8.740085,-9.736555,-6.614209,-6.424786,3.593489,-9.657174,-3.242671,-3.894712,-7.895467,9.955082,-3.025728,0.451361,-0.622502,5.226583,-0.392432,9.023693,-6.474061,-9.169169,-7.449873,-3.075029,-1.426432,9.051623,-4.870045,1.292707,0.451710,-0.735905,5.033166,-9.392120,1.690808,-1.748657,-7.825196,3.160197,-4.876741,-8.765215,5.157990,-8.343337,2.937040,-4.582705,3.375124,-9.584263,3.679461,-0.652970,-6.951607,-2.047417,-4.577671,-4.767565,6.205346,4.816353,9.402902,-8.037339,0.998842,-0.140460,-7.176824,-8.062247,-4.784023,-2.190177,6.539905,8.109788,6.302430,4.181539,-2.037222,2.651207,-9.013945,7.018996,-0.922889,-1.338346,-1.910080,-2.390335,7.603960,-3.087151,6.126418,8.200825,-0.775954,-3.750227,4.542292,6.390124,3.638112,8.121072,-1.271077,3.325755,-4.369034,-7.411690,5.523207,6.532129,0.723749,-1.015238,-9.706767,-2.168164,-4.345959,2.646321,-4.127396,-0.869449,3.738627,0.577960,-0.530290,-6.995268,-9.867563,-8.351375,2.071571,5.959243,2.435730,0.552831,1.771521,-1.278714,-7.929245,1.313551,9.921049,7.395238,3.401870,-1.271527,8.531340,-9.420616,3.687134,9.311869,-1.967519,6.003445,1.029521,-3.999415,-9.144581,-3.011874,-1.823974,-3.826680,4.473535,-2.494925,-1.116183,2.505912,8.081919,-6.650357,-7.432187,8.989392,-4.101137,-5.755305,9.745587,-3.988751,-7.584659,-2.551814,4.373392,-9.775858,-5.379293,9.927587,4.899009,5.588728,6.854593,7.787955,9.285211,-6.135946,7.833117,1.945553,0.052517,7.884404,4.280744,-7.641854,-9.599106,6.074469,3.433863,8.083257,7.669601,8.879584,-9.794221,-9.599621,9.312775,4.965305,-8.321023,1.163212,1.502179,6.947874,3.193583,3.326828,-7.188996,-5.600973,6.571677,-1.653778,-3.074450,5.981588,-6.591904,6.752572,7.435867,-9.339500,7.555283,2.140609,-5.356003,7.551433,8.007144,8.651382,-0.444003,5.322764,-8.341040,-8.861892,-5.023778,5.118789,-8.840308,-6.556044,-3.096994,7.365334,8.267984,-5.829937,8.750999,1.376734,-1.219947,-4.221496,-5.146357,-5.000502,5.441877,-3.228144,0.080639,-0.265054,-4.037426,7.353043,3.673147,-6.442129,3.154274,7.828991,6.833116,2.126680,1.532534,-9.843185,-5.066907,-0.737807,7.533450,7.718336,1.091157,-8.448886,-1.938297,-7.345604,-4.639024,-8.272810,9.421271,-8.619574,-7.482801,-5.606513,6.093871,-8.017278,5.519409,4.250032,1.124243,7.624130,-7.792729,-9.321605,4.202613,8.228874,8.971981,-0.827874,4.029027,2.333208,-6.075355,8.886550,-7.136486,0.322772,0.101370,9.950447,3.680620,9.368148,-0.318002,2.097222,-2.767165,-2.767951,-8.198741,-0.739669,2.687738,-1.792237,2.968307,-3.411612,4.505397,1.433603,-8.098986,0.247675,-5.157343,-8.042891,-5.256312,-2.589400,-1.602310,-5.665419,7.453852,-4.149623,2.143422,8.959644,-8.196726,-6.803733,4.391887,-0.628344,-1.994422,-8.204236,-5.862395,-0.780087,-3.285425,1.305305,0.237849,3.130027,-7.405091,7.536154,-8.592084,-0.857241,-5.985122,-5.228210,9.035419,-1.241788,-8.372226,-3.175575,4.602730,5.528711,0.026387,-9.890470,4.189425,-6.624419,6.851444,8.765371,-5.222953,-4.083505,-7.207748,-6.758341,-4.045167,-7.792263,9.358042,6.899949,3.240768,-2.810935,-4.785100,9.494462,8.693780,5.102634,2.289639,-5.444144,1.102702,7.968494,-3.619054,5.429640,-6.011184,6.459725,-3.844282,-6.554198,-2.506103,-6.954454,4.630443,-3.182906,0.286690,8.005218,-7.275004,-5.474875,-5.106339,4.868016,-2.822768,2.415283,-9.694837,-1.614623,-3.455625,-5.819690,-6.447786,6.931102,-9.935397,-3.094940,4.451423,8.819788,5.860444,8.573603,4.893857,-6.207642,1.053974,-2.576539,6.505643,-2.036954,8.326176,-6.410618,-2.286668,0.934446,9.748233,-2.661290,3.438125,-5.811165,-7.173677,-4.321420,-4.596688,1.547889,3.362086,-8.835380,-8.919487,-1.476216,1.498441,2.177298,-7.283065,0.606766,-7.636791,-5.409508,8.191795,4.594006,7.683886,1.812209,-4.937289,5.795912,-1.806623,-4.146870,4.719651,-9.794185,6.185008,-8.511087,-1.987604,2.263114,0.893385,-4.762476,-8.148222,-0.846965,7.947643,-4.503346,-3.099773,3.925110,5.223373,-9.104439,-7.999454,9.469804,-0.239740,5.304791,0.219057,-8.637968,6.989140,8.826054,-6.741239,4.149688,4.770654,7.591046,8.044521,-9.684024,0.640606,1.897392,8.930242,1.176055,-2.512535,-1.173997,-0.963273,8.731204,7.282285,0.472623,-1.399652,-5.555039,-8.085031,-2.708276,-5.390763,-0.322603,9.031725,-1.748682,5.446558,-3.385574,-9.887850,3.375150,3.342916,-3.425328,-4.969127,-5.253735,-1.411558,-7.713906,7.989195,4.992744,-0.866355,6.297246,1.601283,-8.237935,5.318409,5.002203,-8.702651,-4.498887,1.183611,-9.442916,5.060786,-3.781473,5.464500,-1.378242,6.786909,8.018824,-1.295026,0.918477,-9.016884,-1.885479,2.891209,0.933839,-2.308529,4.108142,6.770690,2.941085,2.850568,-3.602826,1.348149,6.836102,-1.944626,-2.605373,1.219578,9.600442,5.486245,2.102283,9.334031,-5.154333,5.528665,2.375535,-9.292113,0.192657,-5.909809,-8.864801,-5.279631,6.886713,-3.553348,0.057249,6.748190,7.040763,-0.163459,9.624161,-5.088688,-1.290346,-8.633918,-1.471158,-6.595927,-0.231719,2.417823,-7.549913,-1.117192,6.571156,8.043208,-6.809269,0.311889,-5.412231,-3.628540,4.596669,7.277109,-8.095582,5.605671,-4.816028,-3.682099,-1.857500,-9.244082,-8.713001,-0.118547,2.888376,-2.957956,7.752230,-9.473991,-8.934635,5.628850,5.090607,1.143094,-0.187165,-9.345746,-5.419865,7.540896,-1.521514], dtype = "float64")#candidate|1986|(1584,)|const|float64
bop_1987 = relay.equal(var_1971.astype('bool'), relay.reshape(const_1986.astype('bool'), relay.shape_of(var_1971))) # shape=(1584,)
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
call_1992 = func_561_call(relay.reshape(call_1978.astype('uint64'), [8, 8, 5]))
call_1993 = func_561_call(relay.reshape(call_1978.astype('uint64'), [8, 8, 5]))
func_1674_call = mod.get_global_var('func_1674')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_1994 = relay.TupleGetItem(func_1674_call(), 0)
call_1995 = relay.TupleGetItem(func_1675_call(), 0)
output = relay.Tuple([call_1932,call_1934,const_1935,var_1937,bop_1972,call_1975,call_1978,const_1979,bop_1987,call_1992,call_1994,])
output2 = relay.Tuple([call_1933,call_1938,const_1935,var_1937,bop_1972,call_1976,call_1980,const_1979,bop_1987,call_1993,call_1995,])
func_1996 = relay.Function([var_1937,var_1971,], output)
mod['func_1996'] = func_1996
mod = relay.transform.InferType()(mod)
var_1997 = relay.var("var_1997", dtype = "float32", shape = (36,))#candidate|1997|(36,)|var|float32
var_1998 = relay.var("var_1998", dtype = "float64", shape = (1584,))#candidate|1998|(1584,)|var|float64
output = func_1996(var_1997,var_1998,)
func_1999 = relay.Function([var_1997,var_1998,], output)
mutated_mod['func_1999'] = func_1999
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2006 = relay.const([[[-4.023139,3.764898,-0.458334,-5.320489],[8.638644,6.578456,0.872841,-8.403672],[3.874785,-1.487826,2.873575,3.415077],[-0.772090,-8.453826,1.066880,-7.114483],[-1.100997,-2.211076,-5.222840,0.722564],[4.340852,0.234194,-4.457890,1.025530],[1.009558,5.863197,-8.782115,-1.419969],[2.553878,2.766289,-0.134378,-6.936920],[-9.195809,2.353721,7.807334,-1.085403],[8.284960,-8.100661,9.348120,-4.376326],[2.094409,-3.341764,-2.436288,8.938518],[3.925250,-8.233452,-4.119813,-1.356010],[9.634018,5.089986,7.545649,5.178795],[1.898297,-9.984555,6.295360,1.197751],[-7.436761,-3.060198,-8.445572,-8.229038]],[[4.785280,-4.657436,-9.010721,-9.437788],[-9.766840,-0.430741,2.386790,8.848393],[5.296017,4.905027,-5.523331,-9.713520],[-7.497277,2.014947,-4.111671,-6.861243],[-6.993682,5.923146,-3.268719,-1.092368],[6.874759,-5.136823,-3.470033,-8.064064],[5.080546,-0.010269,-6.384582,-3.681653],[6.195854,-4.313848,7.150727,0.586194],[3.969341,-9.178834,-8.641129,-4.638487],[-9.687964,-2.322388,-2.973072,-9.534380],[9.474888,3.737530,5.217662,-9.278401],[8.734804,-8.312684,-9.472064,-4.794201],[-1.731138,8.710211,5.304228,9.931554],[-7.588266,-0.772189,-2.742120,-9.265568],[4.901600,9.788457,8.658299,-7.521833]],[[-4.188613,6.084405,-1.512079,-1.233920],[2.367586,-1.889881,-5.377677,-9.464261],[1.495662,2.199005,3.683001,3.810043],[-8.943650,-8.177451,2.450081,-9.459467],[7.989553,-4.429489,-9.252653,0.418213],[-1.305042,-1.077200,4.008655,1.155229],[-7.679756,-3.209863,-9.801680,-4.018721],[-3.906673,-5.814042,1.705860,-6.506155],[-5.789695,4.163126,1.885560,-8.544982],[-4.257303,-5.707887,6.552518,-7.450596],[9.927241,-4.840860,8.087414,-4.589598],[1.835357,6.870741,9.346809,2.340176],[-5.376146,-5.418721,8.104332,4.391430],[-6.294916,5.078022,8.420432,7.162640],[-8.755573,-0.328770,-2.432639,-4.105705]],[[6.965302,0.166012,5.326034,-1.684177],[0.615863,9.375605,-6.997990,-8.722114],[4.299745,-0.191119,8.798491,1.555272],[8.156378,6.488853,-0.367711,1.774971],[7.172912,-5.635432,-2.329311,-4.257999],[-0.690151,-7.704563,-4.841265,5.258873],[2.777305,-5.987197,0.974210,-1.279038],[8.766017,-3.143181,5.642029,8.625758],[-1.176271,3.915195,4.634026,-8.775381],[-2.098806,-5.920541,0.007180,-0.662617],[5.499499,-9.502318,-0.821193,-6.187073],[-7.659774,5.183940,-5.962498,5.097804],[-6.338397,3.062960,-2.979275,0.294519],[7.478534,-5.897297,3.259902,7.748718],[8.898109,3.127985,-7.670755,-5.221073]],[[2.037091,5.351237,-0.493856,-3.704204],[1.064918,-1.484077,-5.241583,-4.152792],[6.881274,-5.873727,8.465809,-2.930645],[1.702462,-7.377723,3.271491,8.298058],[-1.459004,-6.523279,9.646486,-3.062005],[4.794941,-0.364328,-2.944299,4.297116],[0.977101,1.217388,6.794475,-7.100494],[6.578510,-5.972763,1.898134,2.972774],[-1.184605,-6.650162,7.179502,2.813130],[-7.136230,-6.787981,-7.020789,-4.808388],[4.605392,2.706959,0.563462,-3.540340],[-0.213459,8.374890,-8.610178,-0.654309],[3.253640,-5.112616,0.991886,8.589907],[5.857203,-0.643528,1.983507,-0.925535],[-6.572708,0.464983,3.240591,1.721032]],[[-9.935363,4.748947,9.810299,-7.165250],[-5.658009,9.332488,-7.238531,8.620652],[-5.772057,5.332197,4.523432,8.575753],[1.679666,9.346908,-4.268533,6.086045],[-1.602133,5.245425,-7.466985,-3.376254],[-2.029960,-0.070283,-6.932832,-8.695439],[7.816950,-6.619848,1.200201,9.449076],[-8.550930,1.418742,8.564286,1.977891],[7.796079,5.038138,-0.118881,7.472830],[-6.236818,1.363348,6.727750,0.034205],[-3.333852,8.963346,1.270223,-3.223128],[-1.588713,-4.810171,-7.783676,4.483241],[-7.724326,3.548616,-1.965716,9.372069],[-7.259070,3.897032,9.396224,6.342235],[-9.902416,1.556123,2.424611,9.371838]],[[-1.492751,3.426827,8.143889,-7.733224],[1.168446,0.535939,-1.496438,-2.978912],[1.972825,0.883764,3.254961,-0.504240],[8.129696,0.774529,-6.453892,-6.947438],[4.497614,9.801126,-3.085329,-4.657724],[-8.584672,5.706243,8.549591,0.268694],[8.219240,6.153309,7.613100,-6.771619],[1.056859,0.734261,-2.312396,-0.483793],[4.094830,0.368715,-5.610104,-9.467444],[4.077027,4.392054,2.562988,7.913939],[2.472292,8.584633,0.985830,-6.281812],[-0.395329,-6.724182,0.738290,-6.394891],[-8.583576,5.154278,5.097077,7.571536],[1.735563,0.006628,-6.366549,-5.788955],[7.651231,-8.025059,2.956891,-6.003977]],[[8.649298,3.245987,7.438566,3.144968],[4.488704,-6.367794,-9.265072,5.867233],[3.699476,8.731865,7.909189,1.813770],[0.341305,1.021155,-2.188629,-1.314047],[-0.706503,4.920510,5.476447,-3.838510],[2.048515,-0.250989,-0.884557,4.033160],[-6.732324,0.820537,-7.403784,2.287225],[5.388676,8.293976,-9.183258,8.434571],[4.100459,-4.322500,5.789618,3.157390],[-9.181216,7.609193,4.989611,-5.076125],[0.747261,0.091624,-7.997690,6.667881],[-0.432329,-4.119101,2.461377,6.116183],[-5.810605,6.899804,-5.838182,-7.057745],[-5.687795,-8.648607,-7.228380,-3.515318],[-7.779462,-3.832246,-5.630231,-0.816736]],[[-8.042592,8.848186,-4.701648,-4.408557],[-4.037888,3.175689,-8.979277,4.488496],[1.757994,-5.196066,-9.150490,2.744966],[-0.193071,-9.427118,3.913187,8.031444],[8.466490,2.230137,-4.608262,-5.860624],[-3.330384,5.283846,2.411647,1.446723],[-8.107937,-7.563817,-4.767133,-5.152435],[3.073680,3.209899,9.151604,-2.069831],[4.459058,1.160759,2.442454,2.586739],[8.967214,-0.543979,1.326112,5.509368],[0.630246,6.184492,1.597782,4.461248],[-8.229602,1.586391,3.344773,-1.298904],[-6.180522,-3.999019,5.633574,6.622425],[9.525913,6.023317,8.305471,-6.204273],[-9.066798,6.040003,6.352096,5.590204]],[[7.845639,-5.684512,-9.800668,-1.712801],[-0.707351,4.542982,-1.641568,-6.127976],[-6.417879,-9.281026,-4.026424,6.007997],[-9.812938,-6.722691,3.209473,0.472764],[-4.922639,4.445862,-4.741833,0.764497],[8.276990,-3.956146,0.910529,9.114860],[-4.717594,-3.930968,-0.592343,-0.725813],[-4.296522,1.355646,-1.864819,-6.704846],[-7.886337,7.701023,7.934776,5.989928],[0.070495,-8.826335,-3.786193,2.993544],[-7.512249,0.193302,1.960076,3.302156],[-3.989701,5.078834,-0.810847,0.984047],[2.039000,5.545246,-7.825507,7.811765],[5.989622,-3.033858,5.621193,-6.991320],[4.737275,9.438279,6.805542,-1.893410]],[[8.917735,-8.795623,-2.781676,-0.274147],[8.603505,-0.983424,-8.428295,0.896430],[-3.838269,8.129514,7.031731,2.980941],[6.027580,8.578515,0.804490,-9.425510],[1.766049,-8.744376,-2.560470,-1.879173],[0.632077,2.120668,-6.225172,5.101915],[8.799879,1.215540,-0.070008,9.487613],[6.105947,1.340676,7.061329,9.313362],[-0.253554,-7.361870,-9.842479,-7.391398],[4.405008,9.413698,5.676356,-0.851136],[7.583329,8.845310,-1.765754,8.884807],[-6.174530,6.151321,-7.322402,-5.317986],[-2.232693,1.131388,2.989589,-3.723281],[-2.056744,6.426568,-1.415702,-7.409637],[3.854748,-6.456948,-6.602172,2.693901]],[[-4.267070,-9.996435,9.549358,9.923839],[2.098778,-3.768682,2.320177,-5.508245],[-3.970837,5.940079,2.760321,-7.389199],[2.573449,8.457854,-1.497221,-1.412416],[4.802813,4.617613,-3.761373,-4.079289],[3.724560,-5.352604,-8.932294,-9.487834],[-2.921314,6.802945,6.385618,-2.771650],[-7.829156,7.916570,-0.561727,1.961865],[-2.827483,-3.932650,-0.032634,1.731538],[7.719385,-0.477915,-9.658800,-7.661479],[-9.087362,-1.536971,3.433173,-8.184840],[-4.204981,-8.567296,-9.189694,-9.170269],[-2.728825,4.623002,-6.495772,2.831277],[-4.049825,6.268499,-8.297272,-4.569013],[7.510276,4.796252,5.565245,2.400214]],[[4.118301,2.755762,1.887682,-8.483386],[-9.767926,-6.297034,-9.073925,1.972775],[2.084624,0.978450,-1.875705,-9.146581],[2.509430,1.467150,-0.796770,-3.872294],[-4.843212,7.467422,-0.857426,-6.113333],[2.061704,0.539688,-3.536046,-5.081624],[1.458890,4.615954,4.060309,5.174524],[0.668415,-3.369023,3.491096,2.636777],[-1.057821,-1.807624,6.826241,0.651304],[9.281901,-3.442562,7.425573,-2.816428],[0.632528,5.502544,5.927851,3.801866],[7.871907,-9.200346,-9.051804,-2.556354],[-7.495664,4.181203,8.784763,-7.561059],[1.372311,-5.392911,-5.539391,8.595790],[2.978016,-3.162720,-0.005488,4.484069]],[[4.100962,-3.271762,-9.551202,-8.613213],[1.578111,-2.960349,1.400661,-7.341643],[2.476480,5.481901,7.748525,0.980954],[7.467836,9.030781,1.105648,2.186341],[8.722473,1.634956,0.732333,-9.228509],[6.721941,9.776032,-5.000724,-9.665397],[6.611430,4.803302,-1.767753,5.467363],[-5.648154,9.997990,6.567455,6.247869],[6.583537,-3.301219,-0.550556,9.810533],[1.239766,-4.491726,-6.141599,-7.980949],[7.829138,-9.265119,-9.167698,9.973447],[2.205896,3.527574,-4.846782,6.666193],[8.663501,-1.748263,-9.231739,4.437934],[-7.952762,2.614439,-9.553790,-9.971754],[9.404544,-9.611792,-1.975046,6.708069]]], dtype = "float32")#candidate|2006|(14, 15, 4)|const|float32
uop_2007 = relay.log10(const_2006.astype('float32')) # shape=(14, 15, 4)
func_1465_call = mod.get_global_var('func_1465')
func_1469_call = mutated_mod.get_global_var('func_1469')
var_2010 = relay.var("var_2010", dtype = "float64", shape = (14,))#candidate|2010|(14,)|var|float64
const_2011 = relay.const([-4,-4,2,-4,9,6,4,-2,4,-7,4,-10,-5,-1,6,8,3,-2,4,-3,-6,1,-4,10,10,-3,-1,7,4,6,-4,-9,-6,1,8,5,4,6,10,4,-5,6,-1,-3,5,-4,-4,7,3,10,-3,-9,-2,4,3,1,6,6,-4,-2,-10,7,9,-6,1,8,-2,10,-2,-5,2,-4,5,6,1,-8,6,7,-1,-10,10,8,-2,3,3,-8,-5,-5,-4,-10,3,-8,-5,-2,9,-1,-9,10,-9,5,2,-9,6,7,-7,5,-7,8,-1,10,-4,8,2,-5,2,3,3,-8,7,9,4,-3,8,-5,-2,8,8,9,5,-4,-2,-10,10,4,-5,1,-8,10,-6,4,2,5,-9,3,-6,2,4,5,-1,-9,-3,-6,5,-4,3,-8,-1,6,-7,5,-5,-3,8,-3,8,-5,-2,-1,-9,7,-6,-8,10,-6,-4,-10,9,-10,-3,6,-6,-4,4,-7,-4,-6,1,-5,9,-8,6,5,-3,-4,9,10,3,-6,-3,9,-9,-6,-10,-3,-6,-3,1,8,3,10,4,-9,-8,-3,8,-6,8,7,-7,-6,-3,7,-6,-8,9,-3,2,7,7,-8,-1,-3,-10,-6,3,2,-10,10,4,-7,7,-5,3,8,-1,6,5,-2,2,-4,9,-10,4,4,-9,-2,-4,7,8,-9,4,-2,7,-5,-1,3,-4,-8,-3,8,-5,8,7,9,3,-6,-7,9,4,4,-3,-5,10,-7,8,-4,-8,-4,-10,-2,-3,3,7,-6,5,6,7,-5,7,-7,-7,-7,5,-2,4,-9,2,-1,-3,-2,6,-4,-3,9,1,2,9,5,-3,-9], dtype = "uint64")#candidate|2011|(320,)|const|uint64
call_2009 = relay.TupleGetItem(func_1465_call(relay.reshape(var_2010.astype('float64'), [14,]), relay.reshape(const_2011.astype('uint64'), [320,]), ), 4)
call_2012 = relay.TupleGetItem(func_1469_call(relay.reshape(var_2010.astype('float64'), [14,]), relay.reshape(const_2011.astype('uint64'), [320,]), ), 4)
var_2014 = relay.var("var_2014", dtype = "float32", shape = (14, 15, 4))#candidate|2014|(14, 15, 4)|var|float32
bop_2015 = relay.bitwise_xor(uop_2007.astype('uint64'), relay.reshape(var_2014.astype('uint64'), relay.shape_of(uop_2007))) # shape=(14, 15, 4)
func_1465_call = mod.get_global_var('func_1465')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_2018 = relay.TupleGetItem(func_1465_call(relay.reshape(var_2010.astype('float64'), [14,]), relay.reshape(const_2011.astype('uint64'), [320,]), ), 1)
call_2019 = relay.TupleGetItem(func_1469_call(relay.reshape(var_2010.astype('float64'), [14,]), relay.reshape(const_2011.astype('uint64'), [320,]), ), 1)
output = relay.Tuple([call_2009,var_2010,const_2011,bop_2015,call_2018,])
output2 = relay.Tuple([call_2012,var_2010,const_2011,bop_2015,call_2019,])
func_2025 = relay.Function([var_2010,var_2014,], output)
mod['func_2025'] = func_2025
mod = relay.transform.InferType()(mod)
var_2026 = relay.var("var_2026", dtype = "float64", shape = (14,))#candidate|2026|(14,)|var|float64
var_2027 = relay.var("var_2027", dtype = "float32", shape = (14, 15, 4))#candidate|2027|(14, 15, 4)|var|float32
output = func_2025(var_2026,var_2027,)
func_2028 = relay.Function([var_2026,var_2027,], output)
mutated_mod['func_2028'] = func_2028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2067 = relay.var("var_2067", dtype = "float32", shape = (8, 4, 16))#candidate|2067|(8, 4, 16)|var|float32
uop_2068 = relay.sigmoid(var_2067.astype('float32')) # shape=(8, 4, 16)
func_1284_call = mod.get_global_var('func_1284')
func_1288_call = mutated_mod.get_global_var('func_1288')
var_2073 = relay.var("var_2073", dtype = "float32", shape = (120,))#candidate|2073|(120,)|var|float32
const_2074 = relay.const([2,-2,6,-7,4,10,7,-6,-7,1,1,6,2,7,2,9,-9,-1,10,5,1,-2,5,-5,4,-10,1,-1,9,5,7,7,5,-4,8,-9,-7,9,2,6,1,10,-4,-3,10,-6,3,6,-1,-3,2,-10,-2,2,-3,9,-4,4,-10,3,-6,-9,-10,7,5,-2,1,-5,1,6,-6,5,-5,-10,-7,-7,1,4,-10,5,-2,-2,1,5,-5,-3,7,2,9,9,4,1,-1,-9,7,-8,-4,-9,10,-6,-6,-9,-9,6,-1,-5,10,-2,-10,-4,6,-5,4,5,1,-2,-2,-1,10,-8,2,-5,9,3,-8,-8,9,-7,1,-7,-5,9,-10,8,-10,10,-2,-4,2,-2,-2,-9,6,-4,-9,-9,-1,-2,1,-10,8,10,-5,-1,-2,1,1,-5,-5,-4,-9,9,-3,1,-10,-2,-9,8,-9,-4,10,-4,-5,-10,7,5,8,6,-4,3,7,4,-10,-1,9,-1,-3,2,6,-8,-7,-1,-8,6,5,8,7,-8,-2,9,6,-2,6,7,-7,7,10,9,-8,-10,6,-4,9,1,3,-5,-9,6,-3,7,7,-6,-3,-5,-1,3,4,-10,9,8,-1,-1,-2,-6,-9,6,7,5,8,1,8,5,-1,-6,-6,4,-7,-10,1,5,6,-10,-5,3,6,1,9,-5,-2,-3,-5,-8,2,-3,-3,-5,-2,-4,-1,-10,-2,-10,-8,-1,7,-1,-1,-5,8,-7,6,1,-8,-5,-1,-5,-6,4,-9,-6,-1,9,9,-6,-1,9,-5,-7,5,-2,-7,-1,-2,-10,-2,-7,5,-6,9,-9,-4,-10,-9,2,9,10,2,10,6,5,6,2,10,-4,-7,1,-3,10,10,-8,7,6,9,3,5,5,10,5,-3,-10,3,-2,6,10,6,-6,8,-4,9,-4,5,-8,-7,6,-1,2,10,2,-8,10,2,10,-8,-7,-2,-3,-10,-4,3,9,-8,8,5,-2,4,-8,9,-8,-4,6,-6,5,-8,-5,10,-5,-2,-4,4,-1,-9,-9,-9,-5,-2,9,8,7,2,8,-5,10,-7,8,2,2,-8,-8,-7,-10,-4,10,2,1,-1,-7,4,-6,4,2,1,7,-4,10,10,2,-8,9,2,-5,-8,7,-2,3,-7,3,-9,-1,9,-6,-1,4,-5,-3,-2,-7,-3,-2,-9,10,-10,-6,-5,-5,8,3,2,-3,10,-3,4,-5,-6,1,-4,3,-6,-6,-8,5,-2,7,6,10,-6,2,-3,-7,6,6,1,-5,-10,7,-1,4,-1,-7,3,-2,-10,-8,-1,-4,7,8,-1,4,-5,-7,-3,10,-4,-10,-4,-7,-9,9,-2,-9,-5,6,4,-5,-2,7,-5,-1,2,7,6,-2,9,-6,-4,-1,-4,5,10,8,2,9,-10,10,4,10,1,6,1,4,-9,-6,-3,-2,1,-5,5,2,-8,9,-2,-3,-1,5,-1,1,4,-4,8,-2,-7,-2,2,-10,-10,2,10,-5,6,-4,8,8,3,-3,-7,-2,1,-7,-9,3,7,-1,5,-7,7,8,1,9,6,-6,6,-9,1,-10,-4,2,-2,-8,9,6,1,3,-7,-5,-4,-10,-9,7,-5,-10,10,2,-5,7,-8,-1,-8,-2,-7,-10,7,1,-8,-6,5,-4,8,-7,6,8,-8,4,3,2,2,3,1,5,-2,4,7,-2,-2,9,-2,4,7,-5,6,2,-9,-9,-9,-2,5,8,-4,8,-9,5,-3,-3,-9,-3,-8,-2,8,-9,-6,-7,9,-7,-8,-2,-2,-10,8,-7,2,3,-5,-6,8,3,10,-7,7,-3,-8,4,2,7,7,-8,-6,-8,-7,7,4,9,9,-3,1,3,-5,-9,1,8,2,9,-6,-10,-3,-8,4,-1,5,-1,-3,6,-1,4,1,-2,-7,-10,7,-8,6,9,1,-4,5,-3,-8,-8,-3,3,-4,6,5,6,7,-4,8,-2,-5,-7,2,1,-8,8,-1,5,3,9,-9,-10,7,-9,9,-7,-10,5,4,-9,-6,4,-8,-5,10,1,-6,-6,-6,9,-6,10,-1,-5,2,9,-3,-7,2,3,3,1,-6,-4,2,6,10,-6,-10,7,-7,1,-9,-2,-10,3,1,-5,-1,-7,-2,10,10,6,7,3,-2,-5,-5,-4,-5,10,-10,-5,2,3,7,-8,9,7,9,-1,4,-2,6,4,2,9,9,-5,6,-6,1,-9,2,-8,6,10,7,9,-7,-5,8,-4,-6,9,7,6,-3,-10,-1,-4,8,-6,-5,6,-9,4,5,-6,9,4,1,5,4,-9,-4,1,6,-4,-6,4,3,5,-7,8,6,-1,-1,3,4,10,2,7,-3,-8,3,-4,-1,4,-2,4,-6,5,5,-5,-7,-4,-10,-8,6,-2,9,5,7,-9,-2,6,-2,-9,10,-6,1,-7,-3,-4,2,-7,-3,4,10,10,-10,3,-9,9,-4,-8,4,-6,2,-5,-7,9,5,-2,9,-8,-10,9,1,3,-2,2,6,-3,1,5,10,-8,7,9,-3,3,8,-7,9,-8,-8,-4,-2,3,5,-9,-1,-8,-8,2,-4,9,6,-2,-5,-7,3,-9,8,-6,1,-8,4,-1,-2,8,-10,9,2,-5,4,-1,-3,9,2,4,1,-4,-9,1,-9,-9,-5,-7,2,5,-1,-10,-5,-6,4,-10,4,-2,-10,6,4,-8,-6,8,-6,5,-7,2,5,9,-9,-6,3,-8,3,-4,-1,-5,-9,8,-4,-5,-7,-5,6,-2,4,-2,6,-2,5,-7,8,5,5,-3,6,3,6,6,1,8,5,-4,9,-1,2,1,10,-7,1,7,9,-1,-8,-8,-2,-6,-6,10,-4,2,-1,-6,-10,7,7,9,3,-3,-4,2,7,6,6,-1,-7,8,5,-8,-9,8,-10,-1,6,6,3,7,5,5,9,2,8,-3,-4,-10,7,-8,-5,-2,1,1,5,5,-1,-1,-8,-6,5,-1,-10,3,-9,4,9,4,-3,7,-3,8,-5,-6,-4,-9,-4,9,1,3,2,-5,5,-5,6,-6,6,-5,-5,-4,-5,-7,1,-5,7,-4,7,-3,9,-9,-2,4,-3,1,-1,-6,-5,-7,10,-1,-10,-7,2,-9,10,8,5,1,2,-5,-4,1,-5,-8,-10,3,1,9,1,-6,6,-4,5,-8,-5,10,-5,9,-9,6,-3,9,10,-7,6,2,5,-2,1,-7,-4,-4,-10,-10,9,8,4,5,-7,-4,6,-2,4,-3,-5,-1,-9,-9,-9,6,2,1,-3,-1,1,-1,5,-7,-9,-4,-3,7,-2,-9,-3,9,10,5,-8,-4,-2,-5,-10,6,5,8,-6,9,9,-9,4,-10,-9,10,1,-8,8,-10,8,-8,7,-10,-10,1,7,-4,9,9,-10,7,2,-4,9,-9,-9,9,-4,1,7,3,-1,7,2,-9,-5,-2,2,-7,10,-7,4,7,2,-4,-9,5,6,1,5,8,8,7,8,2,-2,8,-4,6,4,-7,8,6,-1,4,9,-8,-4,9,-10,1,-10,10,6,10,-7,-5,-6,-1,-8,-4,6,5,8,-3,5,-10,1,-8,5,8,-4,9,2,8,-2,8,-8,-10,-5,5,-5,4,7,4,8,6,-5,-4,4,6,6,-5,-6,-1,8,-10,4,-10,4,5,-7,5,-5,-6,1,-6,-9,1,8,6,-9,8,8,4,-1,5,-9,10,9,6,2,-7,3,-4,-10,-6,5,-10,-1,7,3,-1,-2,10,-7,-9,6,-7,4,9,-2,-2,-8,-1,7,2,2,4,-2,-5,-9,-7,-2,6,-8,1,2,8,-8,-1,-9,-6,-6,-6,5,9,-6,10,5,-6,-3,-4,10,6,-2,-2,-2,5,9,6,1,-9,-4,-6,7,3,-7,-6,10,5,-1,-5,5,10,-1,9,4,10,-9,8,-8,-7,-7,-4,-6,-8,-5,-1,5,6,8,10,3,1,-8,-1,9,3,-2,-2,7,-9,-5,5,-2,7,-6,3,9,-3,-10,-5,-2,-4,7,-5,5,7,4,3,-2,-5,9,10,-9,-5,7,7,-8,6,-6,10,-6,-5,-10,4,1,2,9,-10,-5,9,-6,-3,-7,10,3,7,8,8,2,-1,3,-5,-5,1,9,-2,-6,9,-8,-9,2,8,9,9,-10,-6,-6,-7,5,1,-10,1,1,-1], dtype = "uint32")#candidate|2074|(1584,)|const|uint32
call_2072 = relay.TupleGetItem(func_1284_call(relay.reshape(var_2073.astype('float32'), [6, 20]), relay.reshape(const_2074.astype('uint32'), [396, 4]), relay.reshape(const_2074.astype('uint32'), [396, 4]), ), 3)
call_2075 = relay.TupleGetItem(func_1288_call(relay.reshape(var_2073.astype('float32'), [6, 20]), relay.reshape(const_2074.astype('uint32'), [396, 4]), relay.reshape(const_2074.astype('uint32'), [396, 4]), ), 3)
output = relay.Tuple([uop_2068,call_2072,var_2073,const_2074,])
output2 = relay.Tuple([uop_2068,call_2075,var_2073,const_2074,])
func_2083 = relay.Function([var_2067,var_2073,], output)
mod['func_2083'] = func_2083
mod = relay.transform.InferType()(mod)
mutated_mod['func_2083'] = func_2083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2083_call = mutated_mod.get_global_var('func_2083')
var_2085 = relay.var("var_2085", dtype = "float32", shape = (8, 4, 16))#candidate|2085|(8, 4, 16)|var|float32
var_2086 = relay.var("var_2086", dtype = "float32", shape = (120,))#candidate|2086|(120,)|var|float32
call_2084 = func_2083_call(var_2085,var_2086,)
output = call_2084
func_2087 = relay.Function([var_2085,var_2086,], output)
mutated_mod['func_2087'] = func_2087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1674_call = mod.get_global_var('func_1674')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_2103 = relay.TupleGetItem(func_1674_call(), 0)
call_2104 = relay.TupleGetItem(func_1675_call(), 0)
output = call_2103
output2 = call_2104
func_2106 = relay.Function([], output)
mod['func_2106'] = func_2106
mod = relay.transform.InferType()(mod)
mutated_mod['func_2106'] = func_2106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2106_call = mutated_mod.get_global_var('func_2106')
call_2107 = func_2106_call()
output = call_2107
func_2108 = relay.Function([], output)
mutated_mod['func_2108'] = func_2108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1325_call = mod.get_global_var('func_1325')
func_1326_call = mutated_mod.get_global_var('func_1326')
call_2147 = relay.TupleGetItem(func_1325_call(), 0)
call_2148 = relay.TupleGetItem(func_1326_call(), 0)
output = call_2147
output2 = call_2148
func_2158 = relay.Function([], output)
mod['func_2158'] = func_2158
mod = relay.transform.InferType()(mod)
output = func_2158()
func_2159 = relay.Function([], output)
mutated_mod['func_2159'] = func_2159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_2170 = relay.TupleGetItem(func_1482_call(), 0)
call_2171 = relay.TupleGetItem(func_1484_call(), 0)
output = relay.Tuple([call_2170,])
output2 = relay.Tuple([call_2171,])
func_2172 = relay.Function([], output)
mod['func_2172'] = func_2172
mod = relay.transform.InferType()(mod)
output = func_2172()
func_2173 = relay.Function([], output)
mutated_mod['func_2173'] = func_2173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_2249 = relay.TupleGetItem(func_1482_call(), 0)
call_2250 = relay.TupleGetItem(func_1484_call(), 0)
func_2106_call = mod.get_global_var('func_2106')
func_2108_call = mutated_mod.get_global_var('func_2108')
call_2253 = func_2106_call()
call_2254 = func_2106_call()
uop_2258 = relay.atanh(call_2249.astype('float64')) # shape=(8, 14, 12)
uop_2260 = relay.atanh(call_2250.astype('float64')) # shape=(8, 14, 12)
output = relay.Tuple([call_2253,uop_2258,])
output2 = relay.Tuple([call_2254,uop_2260,])
func_2269 = relay.Function([], output)
mod['func_2269'] = func_2269
mod = relay.transform.InferType()(mod)
output = func_2269()
func_2270 = relay.Function([], output)
mutated_mod['func_2270'] = func_2270
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2278 = relay.var("var_2278", dtype = "float32", shape = (6, 12, 8))#candidate|2278|(6, 12, 8)|var|float32
uop_2279 = relay.sinh(var_2278.astype('float32')) # shape=(6, 12, 8)
func_1996_call = mod.get_global_var('func_1996')
func_1999_call = mutated_mod.get_global_var('func_1999')
const_2297 = relay.const([7.348267,-9.130641,3.849996,7.754907,-3.491519,-6.898205,2.914263,-3.112774,6.845796,8.917862,-4.008641,0.972775,6.591903,-2.792832,4.530396,5.440971,3.921628,2.681452,7.098034,-6.218240,2.733210,-4.935477,-5.478775,-7.921561,-0.884268,-3.937843,-3.790264,-3.746782,8.219745,-9.093968,3.651860,-8.340098,3.090381,4.513836,-2.806676,-2.651487], dtype = "float32")#candidate|2297|(36,)|const|float32
const_2298 = relay.const([[8.816635,5.689708,-5.409505,6.443706,6.548622,-9.411172,-8.222866,7.419413,-3.535611,-4.976679,2.587178,9.016248,-6.270235,-7.145220,-0.295314,6.957673,0.083548,-5.914312,-8.646154,-0.855872,-0.555028,-3.233404,-7.284827,2.856427,-7.938676,6.444052,-1.547986,-6.348886,5.507696,-5.945697,-8.677326,3.364152,-2.898879,-2.796911,0.393415,-9.756872,7.585164,-2.543065,-1.194639,-4.173294,4.649259,-8.244181,1.385825,-3.003659,6.887995,-7.976605,-9.252338,8.264954,9.777981,-4.824236,7.788516,0.065478,7.526257,-3.378668,4.654815,-0.841048,-7.508139,2.166494,6.612930,-0.923980,-6.337561,6.283643,-6.436039,2.441550,-4.659507,6.128689,-2.891039,-0.234457,-4.274421,4.973390,5.397545,1.572961,-1.221877,5.540951,-9.713077,-7.463328,0.095110,-6.948752,-4.554056,4.968391,5.158704,-5.721565,9.457029,8.998184,-3.879887,-3.439731,-7.201128,7.198191,-4.515400,3.123884,3.068220,7.426031,2.010422,-1.865635,1.104378,-4.694250,-4.446852,-7.032957,6.666043,-9.358488,-3.212131,3.856398,-5.707787,9.864066,-6.408345,7.203331,-5.764153,-6.102429,-3.923644,2.993226,-9.043974,-8.609186,0.286819,0.063923,-7.640248,-9.865637,-9.934260,-8.270072,-2.939476,5.409910,-6.641302,-3.787867,5.306030,-4.762641,-5.185693,6.553810,9.895914,6.720252,-3.152055,5.015264,-5.018669,6.559255,1.024465,2.540311,3.090713,-1.439724,-7.696489,-4.264989,7.326771,2.907762,-5.735161,5.695277,5.986926,-0.962766,0.543826,-1.716972,5.576961,-0.337012,4.944579,0.162743,-0.385552,-5.665849,-4.423859,-1.035807,3.134173,5.580159,-3.191968,6.920933,-6.757527,8.200273,6.433242,0.640705,7.668371,-9.638298,-4.970257,5.788783,7.466231,3.762965,-0.983388,-4.291072,1.718752,6.651247,-7.197938,6.224816,9.117795,-2.779071,6.915197,3.710037,6.079729,1.144879,9.245923,-9.038032,3.182947,0.853548,1.032540,8.428407,6.581783,-3.181767,-1.422095,-2.669673,-0.592348,-7.042862,2.402965,-6.292478,0.264990,-7.204141,-5.371777,-1.523942,-3.397434,2.727321,2.919352,-2.812606,1.741652,-1.185304,7.150453,3.243653,1.804344,4.414106,-3.658641,1.527802,0.442884,-1.287109,-3.512328,9.134616,-2.330775,-2.777170,-0.964280,6.291821,0.087716,9.922883,-6.989830,-8.517153,-0.105568,-8.721202,2.702369,6.913657,1.091009,-4.558133,-5.489388,-5.055632,-0.246679,-9.631612,-4.909556,-8.806924,0.243096,-3.740201,0.170911,9.425694,-6.013806,-1.174095,9.197139,-6.272323,8.556250,-8.921782,1.624460,4.325141,6.242253,-8.945007,9.456559,9.339487,-2.518489,-7.335812,-8.208892,7.466187,-2.412111,-8.842870,7.548313,-3.713116,1.120661,-2.314914,-6.461913,-7.203589,1.339928,8.278503,8.934640,9.559953,-7.683809,1.526940,1.963351,3.426076,-8.330700,9.516722,-5.776636,8.979867,-1.291308,-1.213529,9.794526,-1.368644,7.064736,4.803805,-0.619284,-8.591992,-7.698252,1.170715,9.724875,6.920347,-5.864708,5.126541,5.165940,-9.463096,9.497942,-0.071477,1.120199,5.653488,-6.621220,-9.346821,-7.735640,8.039020,-5.393846,-9.866434,0.291981,-0.137290,3.673288,-9.034698,-8.834740,-4.337247,-4.503470,-2.384472,-6.691278,-8.534728,-3.074080,2.192542,-2.280235,3.007434,-8.003456,-9.273479,-6.149671,7.468229,-9.481510,-8.350200,3.729116,-9.457225,7.284753,7.512877,1.305673,-5.526000,-3.009143,-2.374064,-1.192153,-5.931515,1.980145,-6.528228,3.289619,9.775588,8.653015,-4.289716,1.591938,-6.407502,8.124629,-8.968438,-6.364102,-0.334652,-4.593727,8.164906,-1.660930,9.682650,-0.066625,1.810032,-8.742844,3.748265,-1.202297,-3.167981,2.058628,-0.220591,-7.756034,8.374095,1.703192,-8.810113,-9.395496,-8.748269,9.242377,-4.332323,0.363914,1.967815,9.768752,-9.657107,-3.557570,3.872265,1.090645,-4.305834,-8.843974,-9.913099,5.477390,3.878054,-0.229240,-8.161281,-4.264061,4.525738,2.752571,2.299836,-9.006981,-2.367657,-6.626801,-2.524368,-1.952229,9.563263,-0.541403,-5.465859,-7.914815,9.706943,-4.519728,-2.585470,-5.956130,-8.900773,-6.675475,-7.063253,5.354919,4.324674,-0.822558,-9.645129,-4.707338,4.307260,5.248443,-0.244014,-9.297838,7.829429,-4.741426,1.174086,7.373352,-8.931992,0.388246,-2.831392,9.785793,-7.877143,3.615577,-3.259220,-1.058571,-9.315883,-0.146128,-9.905181,-6.125992,2.638274,7.799507,-0.586347,-5.661234,3.463484,8.596723,0.739544,2.442835,6.680921,-8.223374,8.854286,8.971010,-5.691240,-7.926650,-0.279185,-4.949674,0.051262,-9.867555,8.397857,-0.414602,-8.253238,-1.592406,3.657583,2.534450,2.767298,-2.794041,2.183208,-7.119057,7.804624,-5.385166,-7.233421,8.953308,-1.161224,3.712789,7.562603,-8.814722,4.620369,0.401665,5.344933,2.568973,-0.905304,7.940959,-6.752062,3.760055,-5.356890,7.145116,7.383862,5.945781,9.234578,6.623002,-3.404500,-6.809062,-2.736059,-9.425424,7.897901,-5.035699,-6.337994,9.632377,-1.654878,-0.878194,-8.495890,2.719806,1.067408,9.294178,8.921313,1.391981,1.749041,8.703131,4.529808,0.929592,-5.675947,-2.461259,2.118902,4.009417,-6.906529,-3.747734,2.555887,-9.647247,-9.507123,0.513867,-9.640510,-6.475847,2.222353,-3.206656,0.170100,2.341707,1.074599,-7.640278,6.700492,-2.442454,-9.906758,-0.466817,-7.121627,-2.704571,-8.886198,-5.454707,-8.068272,-9.451421,9.609706,-2.675962,-7.445053,-6.070945,0.440798,-9.027373,-6.217984,-5.270724,-5.777004,-0.415038,-9.999260,0.278328,3.182795,5.434392,-7.150309,6.775438,-4.865493,2.621410,7.491879,9.217401,-9.877689,3.366994,-6.138092,0.419252,-8.212019,-4.817249,-6.437117,9.209660,7.547750,7.156652,2.777190,7.206015,-3.914509,-2.893270,-3.522687,-4.395967,-9.305688,8.497825,-3.389980,4.058196,8.430370,6.406765,7.236379,7.135948,5.091766,9.561162,9.373390,1.500528,9.885601,4.542623,1.571540,-1.368354,4.397136,-3.233910,4.347981,-0.437573,3.968893,-5.556982,-8.107273,-9.203512,2.275237,-2.179472,-7.374315,-7.366506,-4.611810,-8.290297,-3.839238,8.540244,-0.765525,9.020649,3.604463,-9.029436,5.224546,2.431096,-8.892776,9.274185,5.440391,-9.004774,9.798331,6.397487,-3.173036,9.873315,3.925317,-0.296695,1.128495,6.651532,9.697975,3.324545,-1.417187,1.946853,-5.240593,-8.698378,-4.387842,-1.847994,-7.789288,4.117794,6.002508,9.818604,3.788802,-3.065717,0.389868,4.384710,-6.574308,0.263166,-3.189513,5.866058,7.644579,-9.021292,6.873561,-1.096317,2.911117,-9.806811,-7.596255,0.415021,-0.840205,-9.073615,6.298209,-8.725993,1.935764,-3.325382,-4.012870,-8.079980,-7.349464,-1.440787,5.240645,9.667743,-3.237113,0.797713,3.630768,6.878921,2.696582,7.014343,0.130194,-1.605814,5.165611,-0.467306,-3.477090,6.731652,-3.326481,-1.132218,-5.752596,-9.034747,-4.916253,-9.799137,-5.630045,7.477184,8.996067,-3.697949,-2.317829,6.545305,5.838996,-1.358484,3.679552,-2.079600,9.148301,6.218953,-3.825986,-5.016969,-8.005867,-6.912890,-6.641188,-0.007011,-0.380336,1.909713,3.652720,-9.413583,-2.354945,-7.856042,8.280065,7.574105,-1.628862,-6.981447,-8.107580,2.755309,3.598287,2.581883,6.128319,-2.226909,-5.437790,-4.328105,-8.641462,5.883683,6.456019,-2.413028,-1.834835,5.490226,5.753263,-3.308806,1.442748,-7.309451,6.758548,-7.170978,2.516181,1.957891,-3.595480,8.760488,-9.097530,-8.105781,-8.781506,-9.632428,-4.865467,3.696201,-5.651118,-1.927573,8.856222,-0.663580,-9.225782,9.204376,1.207750,-4.335850,4.367587,6.196864,-3.979321,3.479960,-9.710358,5.867829,-8.140153,-2.845493,-3.959764,-2.030918,8.678143,6.316564,2.006950,9.373679,7.962904,9.836621,7.682136,-9.931370,-2.666623,5.189131,-3.603902,9.871990,7.483448,0.849378,-2.507645,-8.777754,-9.575965,-4.155516,-1.324981,3.659955,2.243747,-4.840600,6.646530,-6.824708,0.270006,-2.901003,-9.069198,-5.946145,-8.013467,-1.938072,2.505340,-8.660770,-4.606726,8.259274,5.535115,-5.651506,9.685038,4.310922,2.567916,-9.012204,6.429197,-4.313955,1.085581,-2.047504,-5.932287,-3.509111,7.756251,-1.440665,9.015736,-2.856065,-9.738972,5.464852,-6.173445,-4.153247,-6.272303,-3.188056,5.225096,-7.646231,8.427128,-9.538295,6.275006,8.727645,-2.430024,-9.401088,7.757933,-4.541623,7.146136,-4.282556,-5.971050,7.510000,1.751626,8.841661,9.700928,5.496954,-8.998814,-2.180629,8.887328,-4.458665,2.821943,9.050817,5.752944,-0.501193,-4.128658,-9.604854,3.191643,1.665924,2.836114,-1.650017,-7.169997,2.324645,5.659753,-6.832258,4.440160,-7.598763,1.808492,-7.321055,2.895239,4.418104,6.695347,0.210352,-5.706555,0.607675,0.217196,-2.292387,-0.499756,-0.296292,5.998265,-7.284909,5.119636,-9.641352,-2.355147,4.519475,9.605055,8.449693,6.009723,-8.507450,-4.354857,3.452276,6.897154,2.044254,-8.528835,9.350458,8.118989,-3.862348,6.695228,2.693238,7.946197,6.698059,-0.473885,4.666839,5.155456,2.672082,-9.185347,1.104213,-2.545576,2.732059,-2.518447,-9.344753,-8.895152,-3.709323,5.078206,6.520715,1.056814,-7.565189,-2.228135,7.453753,0.993088,5.413464,7.557278,6.374222,7.854074,-1.596406,9.859390,4.647470,-1.391776,0.508208,-5.156332,-7.843128,-1.518832,6.275554,2.571338,-6.287409,6.308109,-5.163332,0.821921,-9.423315,-0.378718,-7.309906,2.979315,9.451358,-6.002353,-8.178789,3.525689,-2.141936,6.508534,-5.484079,-6.992134,5.877806,-5.533153,-4.639231,3.013672,8.156171,-7.946414,0.044855,9.416014,5.644689,-9.822921,-9.351838,-8.354569,0.492433,-6.159976,-3.914421,-3.762279,-8.473920,5.257952,-8.599005,5.784978,-8.236410,-1.006816,-9.297428,-2.381940,6.398345,3.066374,2.236977,-2.728526,6.791516,-2.644363,5.505268,5.159422,-3.178464,-1.421422,0.603404,-4.876897,8.351509,7.625027,-7.650919,5.442456,-2.027877,-5.577074,6.688789,-3.402470,8.555093,-7.527521,-3.062281,1.766340,8.453794,0.677516,3.998182,-1.022428,-6.159543,-4.330843,-5.654763,-6.540998,-9.318978,-2.320694,9.363673,-7.711920,4.932971,4.856258,-9.983526,-7.796715,9.671562,-0.456006,9.074358,0.227899,0.621728,8.536519,-1.354274,-4.931001,-8.917292,-0.610287,-0.196912,-9.199254,3.019815,6.691673,-8.841439,4.316446,0.798751,2.371756,1.865431,1.746645,-4.990955,-7.492140,-1.235552,-3.325663,0.765421,3.814784,4.727682,3.415624,0.922543,1.661519,5.885083,1.449964,-3.415558,2.926410,-0.495134,-2.701787,2.076442,8.841825,-6.581346,-4.939752,-9.276152,4.008769,-1.776094,-9.520957,8.158895,5.707328,8.771535,8.075252,5.555991,8.475863,1.095192,5.644893,-7.861385,0.464612,-7.243079,-9.940075,7.181327,-7.926203,-9.069182,4.699798,-8.525282,-7.101785,-4.974783,-6.863505,7.663676,5.043725,5.899202,3.266720,3.475140,-0.069019,8.817430,-5.325505,-6.384779,-7.695937,5.120437,-4.258346,-9.348154,5.836743,8.135961,9.895697,8.180687,8.990092,4.754268,-6.432803,8.210889,-6.049233,2.064836,1.123529,1.351506,1.181973,-2.090330,5.112326,-6.097749,4.174072,-9.068200,-6.615528,5.459092,-8.907382,6.058814,0.932229,-7.455604,7.937713,-0.749935,3.955481,-9.399333,-8.024183,8.213644,4.302241,5.490855,2.064336,5.428193,2.840699,3.176932,8.780735,0.277544,-4.288862,-5.566529,5.410096,-0.989136,3.007227,3.207143,6.143433,0.302064,7.120261,5.939605,-9.845458,-5.170558,5.498660,2.750547,-4.905723,1.521406,-0.687340,-8.977215,-7.918342,6.482180,3.479786,-0.557391,0.884972,-9.270921,-8.823362,5.792257,-2.568239,-7.760511,8.269972,5.674840,-4.666905,-4.211054,-3.832819,8.865724,-4.184796,-4.940044,6.362613,-4.582215,-9.083850,3.556119,6.567632,6.492268,7.824894,7.557944,-8.793974,-3.720458,-1.658396,8.234976,-8.593961,5.102788,3.140184,-8.419984,-7.622776,5.088819,7.693478,5.318462,5.071386,5.773532,8.840348,-5.386097,1.753288,-1.989070,0.227445,-8.216075,-3.442995,-1.033065,-4.878138,7.669232,-6.744855,1.007289,6.147937,-1.434871,-4.778009,7.461074,-6.113403,9.430329,5.508754,0.696350,9.915085,-5.215684,-1.924564,-8.220708,7.718654,9.298072,-7.414693,-0.334522,-8.750673,6.018134,-1.642888,-8.060805,-6.333542,-7.704602,1.510127,-4.109954,6.593508,5.636275,-9.199852,-2.449691,7.114687,5.210250,1.930258,2.549323,-5.037758,-6.099974,-1.216220,5.528463,-2.170809,-8.860228,-9.934260,-2.771179,7.265457,4.156238,0.116201,3.972357,9.075193,7.115478,-5.308345,-1.040794,0.797665,0.654205,9.813431,-0.596971,-9.331238,-6.168149,8.550179,2.775405,-3.971238,-9.008904,-6.797116,-7.684340,-0.678912,-1.758927,-6.447743,4.131676,4.471147,3.718947,-4.488668,-5.639784,-7.596453,0.911350,-4.001313,-5.095071,6.048617,-4.470095,8.190511,5.785879,-6.947703,-6.243135,1.085409,-9.345897,2.774385,2.576381,7.351134,-2.406327,-6.975138,-1.845143,-0.830179,8.062265,3.412471,-6.593681,-0.116838,7.065990,9.317146,-4.931150,3.873452,-0.514282,-4.992204,-4.148014,9.180974,-5.095195,-2.704791,-9.804665,9.551404,-7.007383,-8.143994,6.779495,6.892586,9.614935,5.871110,8.843546,8.593148,9.668300,2.901934,7.425076,-5.492728,3.040616,-4.633153,-7.870684,0.213509,3.772367,8.896008,8.850196,4.105675,8.075885,-3.083287,3.778752,-8.443134,1.008206,1.779753,3.724259,-9.871561,-6.073070,-8.546931,4.386597,-2.003321,5.069345,5.343817,-6.803213,-6.160092,4.722950,-5.503751,-3.503334,2.516618,-0.931768,-7.637998,0.801066,-8.421806,-9.379805,-7.070031,7.092519,-0.401587,-7.040453,4.414258,-2.610520,-8.488058,-5.457235,-1.029531,-6.981777,-1.634988,-4.621963,-8.095339,-1.967440,-5.558743,4.035461,-7.283983,7.918885,-7.455416,-8.116843,-9.755410,5.907826,1.964472,1.943209,-1.249297,7.173362,-3.571844,2.323410,0.191628,-9.098404,-3.100783,-5.552965,-9.668070,1.282252,1.965666,-7.379974,-5.772105,0.981377,0.708916,-7.296515,-3.212974,-3.152891,9.931022,9.303229,6.437618,-4.720843,4.874758,-7.728127,-0.700918,-2.027846,-4.324911,3.998149,-2.310503,-9.221980,2.026080,1.189413,-2.463541,9.804257,-2.019159,5.762188,-8.150298,9.093410,-7.110021,3.535008,-1.761351,2.279433,-0.582339,5.211414,8.415525,-0.259738,-9.586805,-7.092809,7.438453,4.242644,-8.241240,-1.772740,-6.104208,-4.025853,2.625918,-7.545624,-8.985597,-4.402124,-2.511990,2.867711,0.064238,5.508980,-8.066143,9.804349,9.041124,0.104984,9.456007,-5.767598,6.977040,-7.875063,-2.804460,-9.544138,-2.840802,7.005464,4.267548,-8.149288,-0.055970,-3.529707,3.318361,-3.577575,-1.220966,-7.277965,1.625339,-7.120413,-0.931987,-7.134715,0.987474,4.035955,7.264586,-2.781541,1.885810,-0.065971,-0.297455,-2.541071,-0.973119,-5.583860,-6.521770,-5.825660,5.663988,3.725150,7.881314,-9.916738,-8.301839,3.561360,-6.737783,-2.793229,-6.956573,8.707027,-4.807744,3.462907,5.219606,7.250166,-0.259764,3.887218,-8.794487,3.478893,-3.019627,-0.815363,4.974848,1.133905,-5.468196,-9.943712,-2.820440,7.609087,0.210025,6.496269,1.356966,4.959542,-8.425360,8.654952,3.851016,-8.325078,6.908841,-4.550338,-4.672373,-2.654299,-2.006390,-2.891333,2.738466,8.472606,-7.353160,3.593495,9.830499,8.241911,2.942329,8.418676,-4.599401,3.670923,-9.290678,-5.796373,5.989702,6.568375,9.967472,-0.983257,-3.639351,-8.444496,-6.122139,-9.176561,-3.102931,2.281963,-6.711837,-6.436730,-6.987656,-4.449983,6.476481,-6.057834,-9.535402,-3.448901,2.746989,-8.908954,-0.548999,-3.623591,-1.316749,3.958213,-2.180592,-9.314518,1.539383,0.579899,-2.525711,-0.806058,4.219522,-8.508371,9.796852,8.729529,6.557274,-5.599146,-6.090436,-2.195076,8.848413,1.136870,-8.489935,-2.283534,-6.520327,-1.065254,-3.164524,4.470128,6.590149,8.376859,-6.689103,4.894704,-8.833285,-9.434402,-1.683621,7.398616,-1.302442,5.872197,-6.466821,-7.841864,-9.479572,-9.777359,0.375137,-0.436894,9.775068,5.953414,-6.072351,-7.465826,-4.069402,-6.895011,1.830856,-2.436208,-2.233561,2.346135,-2.443783,-9.744689,-0.279391,0.230023,-5.789168,-1.014327,2.238984,2.232315,-3.380367,-5.253007,-0.151479,0.617998,-6.315277,0.244742,9.244947,9.856774,-5.081392,-7.921970,-1.006617,7.637058,2.723811,3.844895,4.633291,1.383666,-9.872926]], dtype = "float64")#candidate|2298|(1, 1584)|const|float64
call_2296 = relay.TupleGetItem(func_1996_call(relay.reshape(const_2297.astype('float32'), [36,]), relay.reshape(const_2298.astype('float64'), [1584,]), ), 5)
call_2299 = relay.TupleGetItem(func_1999_call(relay.reshape(const_2297.astype('float32'), [36,]), relay.reshape(const_2298.astype('float64'), [1584,]), ), 5)
output = relay.Tuple([uop_2279,call_2296,const_2297,const_2298,])
output2 = relay.Tuple([uop_2279,call_2299,const_2297,const_2298,])
func_2300 = relay.Function([var_2278,], output)
mod['func_2300'] = func_2300
mod = relay.transform.InferType()(mod)
var_2301 = relay.var("var_2301", dtype = "float32", shape = (6, 12, 8))#candidate|2301|(6, 12, 8)|var|float32
output = func_2300(var_2301)
func_2302 = relay.Function([var_2301], output)
mutated_mod['func_2302'] = func_2302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2316 = relay.var("var_2316", dtype = "float64", shape = (1, 13, 9))#candidate|2316|(1, 13, 9)|var|float64
var_2317 = relay.var("var_2317", dtype = "float64", shape = (3, 13, 9))#candidate|2317|(3, 13, 9)|var|float64
bop_2318 = relay.mod(var_2316.astype('float64'), var_2317.astype('float64')) # shape=(3, 13, 9)
uop_2338 = relay.acos(var_2317.astype('float64')) # shape=(3, 13, 9)
output = relay.Tuple([bop_2318,uop_2338,])
output2 = relay.Tuple([bop_2318,uop_2338,])
func_2345 = relay.Function([var_2316,var_2317,], output)
mod['func_2345'] = func_2345
mod = relay.transform.InferType()(mod)
var_2346 = relay.var("var_2346", dtype = "float64", shape = (1, 13, 9))#candidate|2346|(1, 13, 9)|var|float64
var_2347 = relay.var("var_2347", dtype = "float64", shape = (3, 13, 9))#candidate|2347|(3, 13, 9)|var|float64
output = func_2345(var_2346,var_2347,)
func_2348 = relay.Function([var_2346,var_2347,], output)
mutated_mod['func_2348'] = func_2348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1674_call = mod.get_global_var('func_1674')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_2400 = relay.TupleGetItem(func_1674_call(), 0)
call_2401 = relay.TupleGetItem(func_1675_call(), 0)
func_1674_call = mod.get_global_var('func_1674')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_2413 = relay.TupleGetItem(func_1674_call(), 1)
call_2414 = relay.TupleGetItem(func_1675_call(), 1)
func_1674_call = mod.get_global_var('func_1674')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_2419 = relay.TupleGetItem(func_1674_call(), 1)
call_2420 = relay.TupleGetItem(func_1675_call(), 1)
bop_2425 = relay.power(call_2413.astype('float64'), relay.reshape(call_2419.astype('float64'), relay.shape_of(call_2413))) # shape=(8, 14, 12)
bop_2428 = relay.power(call_2414.astype('float64'), relay.reshape(call_2420.astype('float64'), relay.shape_of(call_2414))) # shape=(8, 14, 12)
output = relay.Tuple([call_2400,bop_2425,])
output2 = relay.Tuple([call_2401,bop_2428,])
func_2434 = relay.Function([], output)
mod['func_2434'] = func_2434
mod = relay.transform.InferType()(mod)
output = func_2434()
func_2435 = relay.Function([], output)
mutated_mod['func_2435'] = func_2435
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2507 = relay.const([[[-6.162754,-4.425057,-9.591525,0.937033,7.230424,3.147687,-7.219355,-4.105547,-3.018365,-2.017646],[-7.888329,9.408377,-3.660895,1.375612,-2.179997,9.788187,7.064071,4.291040,9.999710,-0.346740],[-1.182735,7.686115,-2.190351,-2.527322,6.000508,3.821489,8.380775,9.558621,-7.928603,-4.301135],[-3.043616,-3.236653,-9.990433,4.505222,-9.970360,-8.274427,0.161182,0.241537,8.821002,-3.474421]],[[-9.656283,-3.394711,0.895710,9.910801,9.972802,-4.627982,-6.545367,3.854767,6.020604,-8.476906],[-0.064171,-4.189723,-1.375591,7.480731,8.897150,-2.844826,9.183278,-5.380665,8.673822,9.907104],[2.643244,-1.679736,-2.055835,-7.732959,-5.605946,6.013718,-8.291890,-4.612561,-5.830297,-5.876673],[-1.360125,4.251984,-2.816600,-5.744540,-4.374044,-9.330529,5.287512,8.011491,-2.936669,4.834925]],[[-4.177576,2.829877,4.074256,9.415607,0.574712,7.777306,-9.004524,5.769107,-1.715731,-1.433426],[5.354135,0.528895,4.831947,-9.348780,-6.671690,-0.432526,4.253385,6.250088,-5.885732,-2.145158],[9.998606,7.594429,-7.050483,-4.611854,-3.614922,2.346644,7.357899,-3.878629,0.897244,-6.312478],[8.135232,-2.718507,-4.322785,9.770439,-1.275318,-3.394401,2.772098,-5.062726,-7.185896,4.764456]],[[5.421210,5.220807,9.423354,-4.093887,-9.555176,-3.982200,6.199181,-6.973777,8.161574,-5.892450],[7.006861,2.274494,-5.241922,1.234056,-6.285300,3.364577,7.388141,-6.510251,9.002149,-9.520262],[9.898245,5.126265,8.792296,-0.728813,2.586304,7.870998,5.158732,0.548941,-7.621475,-8.304786],[4.513310,-2.728807,-5.402568,2.689431,3.439059,-6.247869,3.990592,-2.489474,4.839852,1.790049]],[[8.246614,-3.917918,9.221130,9.258342,-3.134602,-4.803745,9.840116,-0.964291,2.721846,0.291387],[6.507873,2.691270,8.181293,-9.233548,-9.517631,9.506708,-9.723452,-1.416347,-0.318020,1.385923],[4.028460,-3.670995,-5.227383,5.652264,5.569965,3.457777,-0.760395,3.879950,-2.274064,-8.694946],[0.619163,-1.532305,7.792352,3.787436,-4.538525,-6.159445,-2.263804,8.426797,-8.529577,-9.509730]]], dtype = "float32")#candidate|2507|(5, 4, 10)|const|float32
uop_2508 = relay.sin(const_2507.astype('float32')) # shape=(5, 4, 10)
output = relay.Tuple([uop_2508,])
output2 = relay.Tuple([uop_2508,])
func_2510 = relay.Function([], output)
mod['func_2510'] = func_2510
mod = relay.transform.InferType()(mod)
output = func_2510()
func_2511 = relay.Function([], output)
mutated_mod['func_2511'] = func_2511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_2529 = relay.TupleGetItem(func_1482_call(), 0)
call_2530 = relay.TupleGetItem(func_1484_call(), 0)
func_2106_call = mod.get_global_var('func_2106')
func_2108_call = mutated_mod.get_global_var('func_2108')
call_2537 = func_2106_call()
call_2538 = func_2106_call()
func_1010_call = mod.get_global_var('func_1010')
func_1014_call = mutated_mod.get_global_var('func_1014')
const_2554 = relay.const([[8.377450,8.667884,-7.363993,-3.930543,2.848616,-1.883893,1.935130,-1.733511,-2.898775,-4.317935,-1.035296,8.640007,7.292212,1.741444]], dtype = "float64")#candidate|2554|(1, 14)|const|float64
var_2555 = relay.var("var_2555", dtype = "float64", shape = (84,))#candidate|2555|(84,)|var|float64
var_2556 = relay.var("var_2556", dtype = "uint64", shape = (4, 80))#candidate|2556|(4, 80)|var|uint64
call_2553 = relay.TupleGetItem(func_1010_call(relay.reshape(const_2554.astype('float64'), [2, 1, 7]), relay.reshape(var_2555.astype('float64'), [2, 6, 7]), relay.reshape(var_2556.astype('uint64'), [320, 1]), ), 0)
call_2557 = relay.TupleGetItem(func_1014_call(relay.reshape(const_2554.astype('float64'), [2, 1, 7]), relay.reshape(var_2555.astype('float64'), [2, 6, 7]), relay.reshape(var_2556.astype('uint64'), [320, 1]), ), 0)
uop_2567 = relay.erf(var_2556.astype('float32')) # shape=(4, 80)
uop_2571 = relay.tan(uop_2567.astype('float32')) # shape=(4, 80)
output = relay.Tuple([call_2529,call_2537,call_2553,const_2554,var_2555,uop_2571,])
output2 = relay.Tuple([call_2530,call_2538,call_2557,const_2554,var_2555,uop_2571,])
func_2583 = relay.Function([var_2555,var_2556,], output)
mod['func_2583'] = func_2583
mod = relay.transform.InferType()(mod)
var_2584 = relay.var("var_2584", dtype = "float64", shape = (84,))#candidate|2584|(84,)|var|float64
var_2585 = relay.var("var_2585", dtype = "uint64", shape = (4, 80))#candidate|2585|(4, 80)|var|uint64
output = func_2583(var_2584,var_2585,)
func_2586 = relay.Function([var_2584,var_2585,], output)
mutated_mod['func_2586'] = func_2586
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2596 = relay.const([[[2.338502,2.215798],[8.221021,8.456694],[9.426001,4.335259],[5.274303,-3.122057],[-6.600221,3.494761],[0.421762,-7.494855],[-3.304550,3.291605],[-5.847012,4.433468],[9.193546,2.892222],[4.011887,4.496586],[5.025827,9.247971],[9.761448,3.907833],[4.134785,-5.577252],[-6.474707,8.406896],[9.337917,0.783296],[0.430334,1.475366]],[[0.145212,-0.837250],[1.381359,-4.345838],[-1.502239,-5.211868],[6.265526,2.046380],[-1.058201,1.748124],[7.774960,3.332448],[2.063765,-2.796937],[5.094431,-2.196386],[-3.760221,1.182947],[-5.965286,-6.472341],[-8.717886,-0.428769],[-0.155901,-1.047949],[6.930969,-9.354337],[-0.743996,9.923507],[-1.408985,-3.145550],[-1.548687,9.707035]],[[0.969071,-7.087210],[-9.643921,2.416008],[1.494990,-1.789883],[7.297782,-2.023927],[8.060949,4.465615],[9.298168,3.443991],[1.039159,2.245044],[-8.804761,-1.113249],[-3.600237,0.842027],[-9.685291,9.911579],[-9.531300,9.330797],[-1.277794,-5.272601],[-2.936803,5.362701],[1.043076,-4.379537],[-7.664683,-1.603270],[-6.071993,3.680436]],[[0.194531,0.281544],[9.015408,-8.558205],[-8.968445,6.512357],[9.927479,-2.713884],[-6.323225,4.514829],[5.478074,-4.618792],[-0.246807,-2.750117],[1.352392,6.876651],[2.251887,-5.104254],[8.007454,-3.050602],[0.530069,-9.177014],[-0.143295,-6.255570],[-9.263531,-2.721962],[5.203044,2.662355],[1.986931,-7.107043],[7.968064,9.816662]],[[-4.681542,6.432966],[-6.189169,-6.019638],[-6.949382,5.111090],[7.272839,5.241112],[3.862129,1.987670],[-1.707875,-3.955345],[1.153900,-0.804244],[-5.423602,7.625931],[-3.625786,-5.114670],[-8.996007,-1.413480],[8.269538,9.591186],[5.078247,-5.294901],[-5.132149,-9.326595],[9.110581,-5.173438],[4.634129,2.692013],[0.123000,1.052214]],[[-8.631224,-1.190814],[-0.144388,6.376680],[-7.931589,-2.264556],[4.935601,9.248525],[3.733542,-9.399472],[-7.352170,7.811124],[1.142086,-7.569053],[2.100736,-1.302203],[8.726660,-5.836723],[7.012552,-3.139592],[3.324433,-0.703786],[7.867063,-7.147873],[4.979832,7.578513],[-0.419580,4.915433],[-4.727651,-6.736704],[7.733545,8.704105]],[[9.243405,-8.607042],[5.784328,3.259115],[-9.023315,5.224927],[2.273312,-8.845806],[-3.577870,-3.693930],[-9.015795,-4.308994],[6.422257,-9.390962],[-2.262275,-1.154096],[3.237043,-8.625584],[0.138219,6.717690],[6.468956,2.035794],[8.039572,2.234225],[-0.386360,-4.689490],[-6.913316,4.538596],[9.613304,-7.516928],[0.193212,9.558546]],[[-0.308132,1.709738],[0.231705,8.434074],[5.076700,3.366260],[-7.661884,-7.638940],[1.240195,4.503342],[5.333928,4.979881],[-1.216865,-3.060545],[-8.151250,-2.009941],[-7.339814,-1.198127],[8.724045,-4.643310],[5.084909,6.942538],[9.249245,-2.060463],[-9.685676,-8.905255],[-5.383302,-1.427083],[1.991332,-1.812199],[-8.253784,-7.838084]],[[-2.431472,9.972376],[-3.265004,-2.054374],[6.493589,2.426607],[2.096701,1.893520],[7.349896,4.015438],[-3.346408,-0.641356],[6.635597,5.073922],[-9.869231,-5.454452],[0.182576,-1.019175],[3.319816,8.850390],[-0.693536,3.197136],[-1.786321,8.900350],[-7.322877,0.818931],[-9.190175,7.507585],[-2.845612,1.876478],[-5.022111,8.088832]],[[9.969289,-4.839601],[-4.214596,-1.601602],[-8.410894,-5.095185],[-5.418309,5.481623],[-5.961085,6.462500],[-2.150774,-2.038350],[-2.166087,9.025889],[0.772963,-5.465000],[-6.002668,-6.768309],[-5.680537,4.053608],[-7.304232,8.586008],[9.641617,-4.332940],[1.789783,-3.569659],[-1.838392,-6.690309],[3.098095,6.590365],[-9.942509,2.836851]],[[-9.036369,2.316360],[-9.172104,-4.855992],[-8.711405,-8.520634],[-7.955455,9.428679],[-8.060271,3.989737],[4.279910,6.376136],[-8.937028,3.430502],[-3.642181,3.507277],[-6.091346,8.821851],[-3.245095,-2.048775],[2.995784,-0.588828],[8.150001,0.838325],[-7.745990,-3.788563],[-0.158460,-4.643978],[-1.562424,0.619657],[-9.012950,-6.343859]],[[9.653022,-3.157731],[5.569457,-4.582971],[7.388771,-8.896746],[1.514275,-8.992814],[-5.687984,9.748414],[9.516546,2.836567],[2.702992,-7.572770],[-0.662720,9.158808],[0.838200,2.300949],[-7.543633,0.288598],[-8.787961,-0.121469],[-5.639351,0.869454],[8.047144,2.870119],[-1.587254,-1.494546],[-1.096675,-2.952449],[5.038692,-9.023649]],[[4.058145,6.114692],[-2.659505,9.585167],[-1.354804,-0.568922],[-7.606347,-8.543598],[-8.188078,-9.353582],[-4.552830,-5.856764],[-4.043491,6.044057],[-6.094787,-4.588817],[0.316185,7.208247],[-4.875679,1.901132],[-9.535137,1.169677],[8.393211,-1.711931],[-7.955631,8.673184],[-9.990245,4.573430],[-9.806525,-7.076432],[-7.658808,-5.678452]],[[4.866729,0.136050],[-7.541524,-6.316430],[-2.603666,6.770365],[1.172086,8.084638],[3.021832,1.028968],[0.226878,-6.043562],[7.741352,-3.159719],[5.599622,-6.704640],[3.751553,-1.186977],[-4.729771,-6.852117],[7.521988,-2.970039],[-8.231763,-2.509439],[-9.651503,7.535842],[-2.969659,5.622507],[-2.451204,3.962144],[-1.868081,-6.904130]],[[-4.858465,7.145949],[-9.985282,2.249425],[-2.398905,-1.997207],[-6.270995,-3.416733],[-8.704543,-5.931929],[1.501100,8.044442],[3.972311,0.961536],[-2.081470,4.976321],[-2.766336,4.188655],[3.378483,-6.614136],[-7.315605,-6.824461],[5.674383,-0.937606],[-0.372160,-4.913630],[-5.476989,0.598489],[5.911281,-0.235403],[3.826605,-5.913128]]], dtype = "float32")#candidate|2596|(15, 16, 2)|const|float32
uop_2597 = relay.log(const_2596.astype('float32')) # shape=(15, 16, 2)
uop_2599 = relay.erf(uop_2597.astype('float32')) # shape=(15, 16, 2)
output = uop_2599
output2 = uop_2599
func_2603 = relay.Function([], output)
mod['func_2603'] = func_2603
mod = relay.transform.InferType()(mod)
output = func_2603()
func_2604 = relay.Function([], output)
mutated_mod['func_2604'] = func_2604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_2676 = relay.TupleGetItem(func_2510_call(), 0)
call_2677 = relay.TupleGetItem(func_2511_call(), 0)
func_1325_call = mod.get_global_var('func_1325')
func_1326_call = mutated_mod.get_global_var('func_1326')
call_2731 = relay.TupleGetItem(func_1325_call(), 0)
call_2732 = relay.TupleGetItem(func_1326_call(), 0)
func_2269_call = mod.get_global_var('func_2269')
func_2270_call = mutated_mod.get_global_var('func_2270')
call_2738 = relay.TupleGetItem(func_2269_call(), 0)
call_2739 = relay.TupleGetItem(func_2270_call(), 0)
output = relay.Tuple([call_2676,call_2731,call_2738,])
output2 = relay.Tuple([call_2677,call_2732,call_2739,])
func_2750 = relay.Function([], output)
mod['func_2750'] = func_2750
mod = relay.transform.InferType()(mod)
output = func_2750()
func_2751 = relay.Function([], output)
mutated_mod['func_2751'] = func_2751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2158_call = mod.get_global_var('func_2158')
func_2159_call = mutated_mod.get_global_var('func_2159')
call_2767 = func_2158_call()
call_2768 = func_2158_call()
output = call_2767
output2 = call_2768
func_2774 = relay.Function([], output)
mod['func_2774'] = func_2774
mod = relay.transform.InferType()(mod)
output = func_2774()
func_2775 = relay.Function([], output)
mutated_mod['func_2775'] = func_2775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1325_call = mod.get_global_var('func_1325')
func_1326_call = mutated_mod.get_global_var('func_1326')
call_2784 = relay.TupleGetItem(func_1325_call(), 0)
call_2785 = relay.TupleGetItem(func_1326_call(), 0)
output = call_2784
output2 = call_2785
func_2793 = relay.Function([], output)
mod['func_2793'] = func_2793
mod = relay.transform.InferType()(mod)
mutated_mod['func_2793'] = func_2793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2793_call = mutated_mod.get_global_var('func_2793')
call_2794 = func_2793_call()
output = call_2794
func_2795 = relay.Function([], output)
mutated_mod['func_2795'] = func_2795
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2872 = relay.const([[[-7,4,-1],[3,-8,-6],[-7,10,-8],[8,-8,3],[-4,-3,4]]], dtype = "uint32")#candidate|2872|(1, 5, 3)|const|uint32
const_2873 = relay.const([[[3,3,-5],[-9,-9,7],[-9,9,8],[5,-6,-1],[7,-1,8]],[[-2,3,6],[-2,-5,1],[-8,-9,-10],[-4,-4,-3],[1,1,-3]],[[-5,-1,-2],[10,-5,6],[5,8,1],[-2,3,5],[10,-10,-6]],[[-1,9,3],[2,-9,6],[-3,-1,8],[9,7,5],[9,-8,8]],[[1,-8,3],[6,-3,-2],[-2,4,4],[-3,2,-4],[-4,4,-2]],[[-9,-4,-5],[-6,-4,-8],[10,1,-1],[-5,-7,-8],[4,6,5]],[[10,10,1],[-3,-10,8],[3,-6,-1],[9,-5,3],[-9,-5,-4]],[[-10,-6,-8],[-10,4,8],[-6,9,5],[-2,5,1],[1,4,-3]],[[-10,-3,-7],[-3,-4,5],[-6,-4,6],[4,6,-7],[9,8,-6]],[[2,-6,-4],[7,-10,-2],[-4,-7,-5],[2,10,3],[6,5,-7]],[[-7,-1,-5],[-7,-2,-5],[1,5,10],[10,-1,9],[-10,-6,-10]],[[-10,-2,-9],[-3,1,-1],[-2,-6,2],[-8,9,5],[-3,-6,9]],[[-4,1,9],[-4,6,10],[2,2,6],[7,6,-3],[-5,-5,-7]],[[-6,-5,-6],[-9,-9,-6],[4,8,9],[2,9,-1],[9,1,8]]], dtype = "uint32")#candidate|2873|(14, 5, 3)|const|uint32
bop_2874 = relay.add(const_2872.astype('uint32'), const_2873.astype('uint32')) # shape=(14, 5, 3)
output = relay.Tuple([bop_2874,])
output2 = relay.Tuple([bop_2874,])
func_2885 = relay.Function([], output)
mod['func_2885'] = func_2885
mod = relay.transform.InferType()(mod)
output = func_2885()
func_2886 = relay.Function([], output)
mutated_mod['func_2886'] = func_2886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_3118 = relay.TupleGetItem(func_1482_call(), 0)
call_3119 = relay.TupleGetItem(func_1484_call(), 0)
func_1065_call = mod.get_global_var('func_1065')
func_1068_call = mutated_mod.get_global_var('func_1068')
const_3129 = relay.const([-3.048144,9.631719,-7.949517,-7.711262,-2.679760,6.461174,-1.806054,7.061755,-3.449720,5.389658,-0.215189,6.721334,-3.038830,-2.252251,2.720609,7.416168,-8.191967,-0.992416,-3.305050,-6.756686,-3.539267,4.111060,1.197798,-7.833821,-0.215530,-2.149144,-4.764481,-3.339034,-1.472743,-4.286942,6.551676,-0.749994,6.570984,1.021609,9.888260,-8.367997,4.700383,-8.335328,-0.357841,-8.153386,6.521243,4.834677,-8.706545,-7.664115,-7.197256,-7.585866,-0.292083,4.238734,5.808303,-4.955203,-1.256991,-4.613345,-5.908254,7.825375,8.618819,-6.688571,-5.565759,1.127890,4.300237,-7.297684,-0.017800,-7.594816,7.329608,-8.422162,-1.024143,2.335373,-3.469470,-2.363393,2.617635,1.813340,-3.466603,2.058837,-7.484704,8.711494,-6.219046,3.435769,1.739856,-5.059670,-8.741821,9.238095,6.076452,8.646864,2.530751,-7.027140,5.706796,8.594471,3.494141,6.268091,7.813237,-2.151866,-7.563504,7.610386,1.891607,-0.103916,-8.250005,-8.640420,-9.887996,6.790644,8.228255,-3.596820,-4.332572,-7.220556,-3.423348,2.148913,8.293784,-6.404928,6.458858,0.637456,1.300204,-4.258599,7.401372,3.104526,2.232846,0.342049,-9.969909,9.632039,-6.515516,9.784183,1.133775,-2.659208], dtype = "float32")#candidate|3129|(120,)|const|float32
var_3130 = relay.var("var_3130", dtype = "uint16", shape = (672, 1))#candidate|3130|(672, 1)|var|uint16
call_3128 = relay.TupleGetItem(func_1065_call(relay.reshape(const_3129.astype('float32'), [5, 2, 12]), relay.reshape(var_3130.astype('uint16'), [672,]), ), 0)
call_3131 = relay.TupleGetItem(func_1068_call(relay.reshape(const_3129.astype('float32'), [5, 2, 12]), relay.reshape(var_3130.astype('uint16'), [672,]), ), 0)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
const_3154 = relay.const([9.777014,8.955215,-8.802658,8.179395,-3.692276,3.521463,-5.766511,-7.113950,0.569879,8.483094,1.348226,-7.086882,-5.366495,-9.439120,8.790261,4.731176,-3.064286,0.355690,3.138676,-6.341746,-2.495310,5.562557,9.264780,-5.803416,-0.169165,3.760025,1.780611,1.858542,-1.157086,-2.013036,4.839924,-9.792256,-1.632832,-0.958636,-7.844658,1.943537,8.251760,6.371843,9.853561,9.611066,0.679071,8.999160,0.466987,-7.851719,-2.468174,5.794272,-2.559736,4.529273,7.735317,-6.805349,1.510321,-4.588296,5.804089,1.133988,-3.936441,-6.984801,-9.228163,-0.514932,-1.353639,0.298582,8.221742,-0.732996,-0.895103,-5.613591,-0.581829,8.574464,1.787390,-6.034035,3.187128,1.869723,-9.627068,7.881106,1.554477,-7.127070,1.722125,2.299553,6.578693,-2.563049,3.202695,3.580573,-2.488474,0.404524,4.201213,-8.480370,-7.265907,-9.865253,6.541515,9.294992,4.468981,4.061410,8.543442,-0.387244,-3.356969,-5.988768,7.222649,7.951353,-5.974530,1.554626,-5.891872,-3.301161,2.200090,-0.074310,-3.496732,-6.571460,6.129715,-9.275359,-9.668155,6.854686,-4.886410,-3.339555,-9.973046,9.574334,4.872121,-2.477880,-9.795944,-8.088279,5.938254,-9.350482,-4.175139,8.203934,-4.913195,-1.076372,-2.833273,-2.451303,3.717554,4.044805,-9.272000,-2.478305,1.189613,-7.164893,5.105753,-0.604797,7.531275,-6.958356,4.523269,6.690120,-1.131607,-7.522611,-8.774106,4.455931,8.055936,2.670094,1.219032,4.538970,-9.668347,-8.012157,-0.947071,-4.723937,2.010008,7.203389,-9.098807,6.055390,-3.608277,-4.809713,-5.151393,-9.644999,-5.330959,7.507805,2.006450,-1.500291,-9.381932,4.767193,9.306633,-7.837995,0.971205,2.724908,7.163510,-7.865693,-5.606205,-9.260616,-9.193501,1.749238,-0.358408,-9.471824,2.767498,8.460604,9.084179,2.410410,-3.110258,9.082232,2.808596,6.012555,9.491468,4.908152,-7.879319,-6.915245,-6.775550,8.005030,8.139663,3.663373,9.566172,-3.039704,7.749578,6.148786,-4.533382,7.160589,-1.823751,-7.497362,-9.432370,3.825142,3.103216,6.619337,3.322084,-6.581628,-6.538336,-0.891750,-0.313006,-5.009057,-6.213352,0.869392,0.866448,-5.000642,7.165656,2.522538,-4.072500,9.309804,4.810784,-6.716279,4.190424,9.337995,-7.149073,0.460649,-4.294838,-2.355114,-0.299993,9.953552,3.198362,4.325663,-9.645455,-1.172083,6.523722,-2.808817,8.814392,-2.436378,0.373790,-5.479581,2.605383,-5.330355,-9.646748,-1.270871,-4.806031,-1.368337,9.295091,2.588923,-4.068596,6.031109,9.639074,-7.508086,-3.429852,5.713431,-9.266779,3.659279,-0.635832,-7.174273,-7.535655,2.980301,-6.138648,-7.765666,2.040928,-8.339349,-7.714866,1.142805,2.903958,-8.666681,-8.121577,-0.380362,8.822316,-2.997843,8.138088,-5.633828,6.503284,3.109242,8.818751,-2.630834,4.331125,4.025288,-5.316139,2.381445,-8.550400,7.318644,3.460271,-1.221525,4.982991,-8.466184,0.489142,-7.522429,-8.620324,-6.502293,-8.491420,-7.782493,5.323982,7.299630,3.251792,-3.160212,-7.350738,-5.927200,4.058632,-3.292879,-4.393721,0.544577,-2.766624,-9.943450,0.626945,-2.345316,9.988435,6.221922,-7.943103,-0.266714,1.409952,-4.540682,-2.548567,-1.587939,5.143038,-7.184561,9.534485,4.421673,-9.405891,0.339343,-4.463572,8.542483,-8.066575,7.680536,6.856189,-4.243830,-9.098368,-0.728357,-7.914081,-0.255792,1.298048,7.319106,-3.187551,-1.103890,-0.444424,3.647226,-7.697821,8.322183,6.479807,9.776500,-2.744763,-2.945092,-4.532783,-7.597583,2.734718,-6.913111,3.591393,7.202436,-4.182691,-3.648247,3.113427,-0.956195,-1.294526,6.309909,-0.616691,-5.750631,-5.053796,6.563045,0.947168,2.106122,-7.761587,-9.467617,9.575085,0.787054,9.203201,4.267004,7.037654,-6.576634,1.094143,-6.739725,6.396535,-1.631844,7.388072,-7.714735,4.047476,7.782295,-3.893742,-5.956847,7.581317,3.321253,5.479674,-4.064567,-2.393327,5.048531,-4.361076,9.388366,-5.063740,5.196642,7.122640,3.232884,-2.775159,-1.268240,-6.004591,-8.084151,9.577722,-5.813736,-7.675122,7.242303,-5.720545,-1.380808,-6.631996,-8.619032,-4.590458,-6.780836,1.889299,-2.675503,-6.042602,-3.277866,7.838630,0.360976,4.619137,-6.686422,-3.644050,-5.676965,-1.420750,1.553148,4.452933,9.220171,3.125330,8.491285,4.920810,-7.509131,5.534834,-1.253006,-6.091628,3.598940,-9.438744,5.959658,9.791472,3.429633,9.801876,7.889480,-8.079464,-7.174585,-3.455315,-0.790877,7.371575,-0.511736,-5.812349,-5.609910,-1.401729,-1.880329,8.483753,4.084543,6.750395,-8.233434,1.200927,5.568352,-3.305984,2.395490,-8.720071,7.439491,7.213476,-5.572454,-8.897628,-3.822422,-7.449522,5.076683,-6.226286,-2.371679,6.105625,-6.792779,-1.608083,-3.178473,4.748944,-9.935924,-3.673350,-8.331470,4.082868,7.095917,2.382557,-6.688377,-4.218941,5.825410,-3.658758,-0.167113,-9.158984,-0.725704,2.587180,7.221139,-2.556373,-5.026329,2.758996,-4.710547,4.269332,9.255174,5.293005,-8.414904,7.734380,4.148701,2.729122,-0.151290,-6.153558,5.685028,3.692137,2.324431,-3.497902,-9.045279,-8.091981,-5.120566,-8.780958,-2.836449,7.983007,9.760183,-1.574756,-8.973720,2.320336,5.338640,6.257495,4.509545,5.924210,-5.371460,-5.692493,-4.473649,-4.081466,-5.447518,-5.519156,-2.335177,4.241926,-0.721811,-1.479879,3.851043,3.090520,-7.367233,5.945948,-4.846508,-9.994612,-4.800437,7.556380,1.738681,7.177743,4.248190,-9.935105,6.796727,7.920460,5.698872,-4.330654,6.871148,5.680306,-2.131431,5.367043,1.099825,-0.978492,-2.446094,-0.921610,7.636043,5.991423,2.547494,-9.631739,6.806672,0.050130,-6.297354,-2.608868,7.800401,1.195796,-9.621429,-9.271147,-1.384382,-9.087928,7.045351,-4.411736,-5.087757,7.864956,5.596668,2.584632,2.641921,5.432944,-7.618206,-1.306053,1.600776,-8.080765,-5.061022,9.954963,5.259971,-7.820258,4.768245,9.828035,-8.575498], dtype = "float32")#candidate|3154|(576,)|const|float32
call_3153 = relay.TupleGetItem(func_2300_call(relay.reshape(const_3154.astype('float32'), [6, 12, 8])), 2)
call_3155 = relay.TupleGetItem(func_2302_call(relay.reshape(const_3154.astype('float32'), [6, 12, 8])), 2)
uop_3158 = relay.cosh(var_3130.astype('float32')) # shape=(672, 1)
uop_3164 = relay.atan(uop_3158.astype('float64')) # shape=(672, 1)
func_1921_call = mod.get_global_var('func_1921')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_3169 = relay.TupleGetItem(func_1921_call(relay.reshape(call_3118.astype('bool'), [8, 14, 12])), 2)
call_3170 = relay.TupleGetItem(func_1924_call(relay.reshape(call_3118.astype('bool'), [8, 14, 12])), 2)
func_1921_call = mod.get_global_var('func_1921')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_3172 = relay.TupleGetItem(func_1921_call(relay.reshape(call_3169.astype('bool'), [8, 14, 12])), 2)
call_3173 = relay.TupleGetItem(func_1924_call(relay.reshape(call_3169.astype('bool'), [8, 14, 12])), 2)
output = relay.Tuple([call_3118,call_3128,const_3129,call_3153,const_3154,uop_3164,call_3169,call_3172,])
output2 = relay.Tuple([call_3119,call_3131,const_3129,call_3155,const_3154,uop_3164,call_3170,call_3173,])
func_3177 = relay.Function([var_3130,], output)
mod['func_3177'] = func_3177
mod = relay.transform.InferType()(mod)
var_3178 = relay.var("var_3178", dtype = "uint16", shape = (672, 1))#candidate|3178|(672, 1)|var|uint16
output = func_3177(var_3178)
func_3179 = relay.Function([var_3178], output)
mutated_mod['func_3179'] = func_3179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2158_call = mod.get_global_var('func_2158')
func_2159_call = mutated_mod.get_global_var('func_2159')
call_3186 = func_2158_call()
call_3187 = func_2158_call()
var_3188 = relay.var("var_3188", dtype = "float64", shape = (8, 14, 12))#candidate|3188|(8, 14, 12)|var|float64
bop_3189 = relay.add(call_3186.astype('uint8'), relay.reshape(var_3188.astype('uint8'), relay.shape_of(call_3186))) # shape=(8, 14, 12)
bop_3192 = relay.add(call_3187.astype('uint8'), relay.reshape(var_3188.astype('uint8'), relay.shape_of(call_3187))) # shape=(8, 14, 12)
bop_3208 = relay.subtract(call_3186.astype('int32'), relay.reshape(var_3188.astype('int32'), relay.shape_of(call_3186))) # shape=(8, 14, 12)
bop_3211 = relay.subtract(call_3187.astype('int32'), relay.reshape(var_3188.astype('int32'), relay.shape_of(call_3187))) # shape=(8, 14, 12)
output = relay.Tuple([bop_3189,bop_3208,])
output2 = relay.Tuple([bop_3192,bop_3211,])
func_3225 = relay.Function([var_3188,], output)
mod['func_3225'] = func_3225
mod = relay.transform.InferType()(mod)
var_3226 = relay.var("var_3226", dtype = "float64", shape = (8, 14, 12))#candidate|3226|(8, 14, 12)|var|float64
output = func_3225(var_3226)
func_3227 = relay.Function([var_3226], output)
mutated_mod['func_3227'] = func_3227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_3239 = func_897_call()
call_3240 = func_897_call()
uop_3252 = relay.exp(call_3239.astype('float64')) # shape=(8, 14, 12)
uop_3254 = relay.exp(call_3240.astype('float64')) # shape=(8, 14, 12)
output = uop_3252
output2 = uop_3254
func_3255 = relay.Function([], output)
mod['func_3255'] = func_3255
mod = relay.transform.InferType()(mod)
output = func_3255()
func_3256 = relay.Function([], output)
mutated_mod['func_3256'] = func_3256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3255_call = mod.get_global_var('func_3255')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_3288 = func_3255_call()
call_3289 = func_3255_call()
func_1284_call = mod.get_global_var('func_1284')
func_1288_call = mutated_mod.get_global_var('func_1288')
var_3309 = relay.var("var_3309", dtype = "float32", shape = (120,))#candidate|3309|(120,)|var|float32
var_3310 = relay.var("var_3310", dtype = "uint32", shape = (12, 132))#candidate|3310|(12, 132)|var|uint32
call_3308 = relay.TupleGetItem(func_1284_call(relay.reshape(var_3309.astype('float32'), [6, 20]), relay.reshape(var_3310.astype('uint32'), [396, 4]), relay.reshape(var_3310.astype('uint32'), [396, 4]), ), 1)
call_3311 = relay.TupleGetItem(func_1288_call(relay.reshape(var_3309.astype('float32'), [6, 20]), relay.reshape(var_3310.astype('uint32'), [396, 4]), relay.reshape(var_3310.astype('uint32'), [396, 4]), ), 1)
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
var_3319 = relay.var("var_3319", dtype = "uint64", shape = (320,))#candidate|3319|(320,)|var|uint64
call_3318 = func_561_call(relay.reshape(var_3319.astype('uint64'), [8, 8, 5]))
call_3320 = func_561_call(relay.reshape(var_3319.astype('uint64'), [8, 8, 5]))
func_1674_call = mod.get_global_var('func_1674')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_3323 = relay.TupleGetItem(func_1674_call(), 1)
call_3324 = relay.TupleGetItem(func_1675_call(), 1)
output = relay.Tuple([call_3288,call_3308,var_3309,var_3310,call_3318,var_3319,call_3323,])
output2 = relay.Tuple([call_3289,call_3311,var_3309,var_3310,call_3320,var_3319,call_3324,])
func_3328 = relay.Function([var_3309,var_3310,var_3319,], output)
mod['func_3328'] = func_3328
mod = relay.transform.InferType()(mod)
mutated_mod['func_3328'] = func_3328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3328_call = mutated_mod.get_global_var('func_3328')
var_3330 = relay.var("var_3330", dtype = "float32", shape = (120,))#candidate|3330|(120,)|var|float32
var_3331 = relay.var("var_3331", dtype = "uint32", shape = (12, 132))#candidate|3331|(12, 132)|var|uint32
var_3332 = relay.var("var_3332", dtype = "uint64", shape = (320,))#candidate|3332|(320,)|var|uint64
call_3329 = func_3328_call(var_3330,var_3331,var_3332,)
output = call_3329
func_3333 = relay.Function([var_3330,var_3331,var_3332,], output)
mutated_mod['func_3333'] = func_3333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_3344 = relay.TupleGetItem(func_1482_call(), 0)
call_3345 = relay.TupleGetItem(func_1484_call(), 0)
output = relay.Tuple([call_3344,])
output2 = relay.Tuple([call_3345,])
func_3369 = relay.Function([], output)
mod['func_3369'] = func_3369
mod = relay.transform.InferType()(mod)
mutated_mod['func_3369'] = func_3369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3369_call = mutated_mod.get_global_var('func_3369')
call_3370 = func_3369_call()
output = call_3370
func_3371 = relay.Function([], output)
mutated_mod['func_3371'] = func_3371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2793_call = mod.get_global_var('func_2793')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_3391 = func_2793_call()
call_3392 = func_2793_call()
func_1065_call = mod.get_global_var('func_1065')
func_1068_call = mutated_mod.get_global_var('func_1068')
var_3396 = relay.var("var_3396", dtype = "float32", shape = (60, 2))#candidate|3396|(60, 2)|var|float32
const_3397 = relay.const([8,9,4,-4,-6,7,5,10,-3,5,-7,7,7,-8,-7,-3,10,8,-3,-3,1,5,-1,7,7,3,-3,9,10,-9,4,-2,1,10,-2,4,-2,-1,-5,7,2,-7,-2,7,4,9,-5,4,-8,-1,-7,6,-6,-4,-7,5,1,-4,-10,5,6,-2,4,6,-2,4,4,1,-1,2,-6,-7,3,-9,4,-7,-9,-1,6,-5,-6,10,-1,1,7,-9,-2,-9,-10,6,-6,2,3,-6,-1,-9,-2,-9,1,-6,-3,1,-1,-10,3,-3,-10,-2,-10,-4,-1,-10,-4,-7,-8,3,-6,-9,-7,8,-7,-8,-7,2,1,8,10,7,6,-1,7,-8,-2,-1,-5,8,-9,-9,-7,4,6,1,10,4,-4,-10,2,-3,4,3,5,3,8,-10,2,4,-8,6,5,-3,6,7,3,10,7,9,5,-4,4,9,-10,6,9,5,1,-10,-3,-4,-10,4,-6,-7,-6,3,9,-6,4,-8,-3,7,-2,10,8,2,8,5,-2,6,-5,6,10,4,5,7,4,-1,-2,4,6,-8,-3,-10,-5,-2,5,6,-1,9,2,-3,3,5,-6,-3,-4,-7,-4,-3,-3,-9,3,4,-4,10,-3,2,-7,-9,-5,-7,5,-7,3,6,-3,4,10,9,-1,2,2,-9,-3,1,-1,7,4,-5,-2,-3,-9,10,-5,3,-8,9,9,8,-6,-9,9,5,10,10,-4,-8,8,-2,6,8,-10,-3,-6,-2,10,-1,9,-10,-9,-2,1,-8,9,3,-5,9,-1,8,-3,-2,-6,-10,3,6,10,7,-8,-2,4,4,10,9,-6,-9,-1,-10,7,2,9,2,-5,-3,-5,-2,2,-2,-9,-4,-10,-4,5,8,5,2,7,5,4,-5,-3,-9,10,9,-4,4,7,7,-3,4,6,-2,-1,-2,-5,3,3,6,5,3,-8,3,5,9,-6,6,10,-2,-8,-5,3,-2,-2,-10,-6,6,1,1,-9,6,3,7,3,-4,6,-4,9,-5,-8,8,1,-8,-3,-8,9,-10,-7,8,6,3,-3,-9,4,-3,-3,6,5,4,-5,4,10,10,9,-9,10,-7,8,-5,-3,5,-9,8,7,4,6,-7,2,-6,-3,-7,7,-8,-1,-7,1,-8,5,6,8,3,10,2,5,-4,-3,3,-5,4,6,-10,-5,9,4,1,7,-8,2,-10,8,-7,-3,10,1,-5,7,-4,-2,4,8,8,1,-4,-5,-2,-6,-5,-9,-8,3,9,-7,-4,-6,6,8,-1,9,-2,8,1,-4,5,-3,4,-8,-8,6,5,2,5,-5,-9,-2,3,6,3,2,1,-3,-3,-10,8,-3,-7,4,5,10,6,-4,1,-2,-9,-4,-2,-7,-10,6,-10,-10,-5,1,-4,5,-1,10,10,8,-6,10,-1,-3,-2,10,-9,1,5,-8,-10,-10,4,5,-1,3,-5,-7,10,9,10,-5,10,-7,-5,5,-7,-10,-6,-5,6,-6,1,-7,-5,2,-6,8,-3,10,-9,-5,3,-9,10,7,2,-7,9,5,-2,3,3,1,-6,6,-7,4,-6,-8,9,-4,-1,5,7,-3,-6,-5,8,5,-7,1,-1,6,10,-6,9,9,1,9,-5,-4,-9,-9,5,2,2,7,-8,3,-7,6,-8,-6,-10,-6,-9,5,-1,6,-8,-9,-10,6,-1,8,9,-6,1,-6,8,8,-2,5,7,9,-8,10,9,7,-6,-10,9,3,-9,-10,1,-6,1,8,3,-7,-10,-10,-2,8,4], dtype = "uint16")#candidate|3397|(672,)|const|uint16
call_3395 = relay.TupleGetItem(func_1065_call(relay.reshape(var_3396.astype('float32'), [5, 2, 12]), relay.reshape(const_3397.astype('uint16'), [672,]), ), 3)
call_3398 = relay.TupleGetItem(func_1068_call(relay.reshape(var_3396.astype('float32'), [5, 2, 12]), relay.reshape(const_3397.astype('uint16'), [672,]), ), 3)
func_3328_call = mod.get_global_var('func_3328')
func_3333_call = mutated_mod.get_global_var('func_3333')
var_3412 = relay.var("var_3412", dtype = "uint64", shape = (320,))#candidate|3412|(320,)|var|uint64
call_3411 = relay.TupleGetItem(func_3328_call(relay.reshape(var_3396.astype('float32'), [120,]), relay.reshape(call_3395.astype('uint32'), [12, 132]), relay.reshape(var_3412.astype('uint64'), [320,]), ), 5)
call_3413 = relay.TupleGetItem(func_3333_call(relay.reshape(var_3396.astype('float32'), [120,]), relay.reshape(call_3395.astype('uint32'), [12, 132]), relay.reshape(var_3412.astype('uint64'), [320,]), ), 5)
output = relay.Tuple([call_3391,call_3395,var_3396,const_3397,call_3411,var_3412,])
output2 = relay.Tuple([call_3392,call_3398,var_3396,const_3397,call_3413,var_3412,])
func_3416 = relay.Function([var_3396,var_3412,], output)
mod['func_3416'] = func_3416
mod = relay.transform.InferType()(mod)
var_3417 = relay.var("var_3417", dtype = "float32", shape = (60, 2))#candidate|3417|(60, 2)|var|float32
var_3418 = relay.var("var_3418", dtype = "uint64", shape = (320,))#candidate|3418|(320,)|var|uint64
output = func_3416(var_3417,var_3418,)
func_3419 = relay.Function([var_3417,var_3418,], output)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3436 = relay.var("var_3436", dtype = "float64", shape = (11, 12, 2))#candidate|3436|(11, 12, 2)|var|float64
var_3437 = relay.var("var_3437", dtype = "float64", shape = (11, 12, 2))#candidate|3437|(11, 12, 2)|var|float64
bop_3438 = relay.divide(var_3436.astype('float64'), relay.reshape(var_3437.astype('float64'), relay.shape_of(var_3436))) # shape=(11, 12, 2)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_3441 = func_1398_call()
call_3442 = func_1398_call()
output = relay.Tuple([bop_3438,call_3441,])
output2 = relay.Tuple([bop_3438,call_3442,])
func_3443 = relay.Function([var_3436,var_3437,], output)
mod['func_3443'] = func_3443
mod = relay.transform.InferType()(mod)
mutated_mod['func_3443'] = func_3443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3443_call = mutated_mod.get_global_var('func_3443')
var_3445 = relay.var("var_3445", dtype = "float64", shape = (11, 12, 2))#candidate|3445|(11, 12, 2)|var|float64
var_3446 = relay.var("var_3446", dtype = "float64", shape = (11, 12, 2))#candidate|3446|(11, 12, 2)|var|float64
call_3444 = func_3443_call(var_3445,var_3446,)
output = call_3444
func_3447 = relay.Function([var_3445,var_3446,], output)
mutated_mod['func_3447'] = func_3447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2269_call = mod.get_global_var('func_2269')
func_2270_call = mutated_mod.get_global_var('func_2270')
call_3467 = relay.TupleGetItem(func_2269_call(), 0)
call_3468 = relay.TupleGetItem(func_2270_call(), 0)
output = call_3467
output2 = call_3468
func_3474 = relay.Function([], output)
mod['func_3474'] = func_3474
mod = relay.transform.InferType()(mod)
mutated_mod['func_3474'] = func_3474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3474_call = mutated_mod.get_global_var('func_3474')
call_3475 = func_3474_call()
output = call_3475
func_3476 = relay.Function([], output)
mutated_mod['func_3476'] = func_3476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3474_call = mod.get_global_var('func_3474')
func_3476_call = mutated_mod.get_global_var('func_3476')
call_3495 = func_3474_call()
call_3496 = func_3474_call()
func_1584_call = mod.get_global_var('func_1584')
func_1587_call = mutated_mod.get_global_var('func_1587')
const_3498 = relay.const([-3.449262,-7.810032,2.700551,-0.283231,-0.644499,-1.536966,8.004838,8.652997,-9.330324,7.298783,0.581096,8.412538,9.908221,6.794273,-5.713553,-3.150285,2.498059,5.659240,-0.661510,3.881604,-2.129990,9.434710,0.872758,0.065577,2.412900,7.155765,-3.564995,3.003116,-8.493838,9.831000,-9.023141,7.204989,-6.259209,-5.061874,-6.555799,5.532180,0.582983,-8.298843,7.730791,9.186193,-7.420656,7.605304,0.009402,-2.918537,-3.069535,-8.653997,6.563501,-2.583963,-4.610291,-3.984094,-2.071457,-1.006211,-4.774533,-2.690666,-1.618224,1.774330,2.603499,7.615522,6.781192,-0.556599,3.506571,-7.485923,1.749367,-9.934393,-2.931462,-2.022024,4.828065,-1.473398,-0.205657,9.561530,-2.767828,3.391969,-1.196331,-4.282513,2.693628,6.610275,7.978334,0.036147,-6.071417,2.038727,1.972947,2.776883,-9.252461,-6.947651,4.289352,4.721251,-9.750450,0.275463,2.401281,-4.225701,-9.062101,-0.114081,-6.930859,-5.013407,3.988614,4.805701,-2.556077,7.486972,-4.209052,5.889644,-4.396959,-9.099880,9.799638,9.703542,0.762685,8.582976,4.471729,-8.900361,-1.076093,-2.792974,-1.874609,-7.272004,-5.365821,3.420820,1.256839,-1.271659,0.883291,4.667509,-2.158707,3.962877], dtype = "float32")#candidate|3498|(120,)|const|float32
call_3497 = relay.TupleGetItem(func_1584_call(relay.reshape(const_3498.astype('float32'), [120,])), 5)
call_3499 = relay.TupleGetItem(func_1587_call(relay.reshape(const_3498.astype('float32'), [120,])), 5)
func_3225_call = mod.get_global_var('func_3225')
func_3227_call = mutated_mod.get_global_var('func_3227')
call_3508 = relay.TupleGetItem(func_3225_call(relay.reshape(call_3495.astype('float64'), [8, 14, 12])), 0)
call_3509 = relay.TupleGetItem(func_3227_call(relay.reshape(call_3495.astype('float64'), [8, 14, 12])), 0)
output = relay.Tuple([call_3495,call_3497,const_3498,call_3508,])
output2 = relay.Tuple([call_3496,call_3499,const_3498,call_3509,])
func_3520 = relay.Function([], output)
mod['func_3520'] = func_3520
mod = relay.transform.InferType()(mod)
mutated_mod['func_3520'] = func_3520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3520_call = mutated_mod.get_global_var('func_3520')
call_3521 = func_3520_call()
output = call_3521
func_3522 = relay.Function([], output)
mutated_mod['func_3522'] = func_3522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2172_call = mod.get_global_var('func_2172')
func_2173_call = mutated_mod.get_global_var('func_2173')
call_3542 = relay.TupleGetItem(func_2172_call(), 0)
call_3543 = relay.TupleGetItem(func_2173_call(), 0)
uop_3552 = relay.asinh(call_3542.astype('float32')) # shape=(8, 14, 12)
uop_3554 = relay.asinh(call_3543.astype('float32')) # shape=(8, 14, 12)
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
const_3562 = relay.const([-2,5,2,-1,-5,-5,-4,-2,-10,8,1,-1,10,-5,7,4,-8,-9,9,7,2,-2,3,-5,-8,-9,9,-1,5,-2,8,2,-5,6,-2,7,7,2,5,2,-8,-2,9,10,1,-6,9,3,-10,7,-4,-8,6,-10,7,6,-1,4,4,-3,7,-2,-7,10,5,-1,-2,9,-1,10,-9,5,5,-9,5,-3,-9,-9,-1,-4,-6,5,-8,-7,1,8,4,-9,5,9,10,-2,-7,5,-2,2,6,6,-2,-2,8,5,3,2,-4,8,3,2,3,-5,6,2,9,-5,-9,-5,7,1,-6,10,4,-5,-9,6,-4,-6,-2,-4,6,-1,-8,-4,-6,9,-9,-3,6,-9,-5,-9,-8,1,5,1,9,-6,6,-4,-2,6,1,-4,5,3,2,9,9,10,-7,5,2,-3,-9,3,-1,5,-6,2,-4,-3,9,6,6,-1,-8,-9,6,-1,10,-8,-2,-4,2,4,-10,-4,-1,-6,8,-9,4,9,1,-4,-7,-5,-7,-9,-6,-7,-10,-5,3,7,9,-10,-6,-2,2,-10,-2,7,-4,8,-9,-8,8,-1,7,4,6,8,4,6,9,4,3,-9,-8,-8,-4,10,-10,-4,-1,-2,2,-6,1,4,-2,-9,10,1,-7,-8,5,-4,9,1,-4,-6,4,-5,-7,-5,7,-1,4,-8,-3,1,-4,-5,10,-4,1,-5,3,-10,-10,9,-6,6,-4,-10,-1,-7,7,8,9,4,-4,-5,-10,9,-7,-7,9,-7,-8,-4,-10,-3,-4,-4,5,-5,6,5,-6,-6,-5,9,6,8,1,-4,2,7,8,-1,9,1,-9,-3,-3,7,2,1], dtype = "uint64")#candidate|3562|(320,)|const|uint64
call_3561 = func_561_call(relay.reshape(const_3562.astype('uint64'), [8, 8, 5]))
call_3563 = func_561_call(relay.reshape(const_3562.astype('uint64'), [8, 8, 5]))
func_2774_call = mod.get_global_var('func_2774')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_3568 = func_2774_call()
call_3569 = func_2774_call()
output = relay.Tuple([uop_3552,call_3561,const_3562,call_3568,])
output2 = relay.Tuple([uop_3554,call_3563,const_3562,call_3569,])
func_3570 = relay.Function([], output)
mod['func_3570'] = func_3570
mod = relay.transform.InferType()(mod)
output = func_3570()
func_3571 = relay.Function([], output)
mutated_mod['func_3571'] = func_3571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3570_call = mod.get_global_var('func_3570')
func_3571_call = mutated_mod.get_global_var('func_3571')
call_3589 = relay.TupleGetItem(func_3570_call(), 0)
call_3590 = relay.TupleGetItem(func_3571_call(), 0)
output = relay.Tuple([call_3589,])
output2 = relay.Tuple([call_3590,])
func_3591 = relay.Function([], output)
mod['func_3591'] = func_3591
mod = relay.transform.InferType()(mod)
output = func_3591()
func_3592 = relay.Function([], output)
mutated_mod['func_3592'] = func_3592
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3595 = relay.const(-10, dtype = "int64")#candidate|3595|()|const|int64
var_3596 = relay.var("var_3596", dtype = "int64", shape = (11, 7, 8))#candidate|3596|(11, 7, 8)|var|int64
bop_3597 = relay.greater_equal(const_3595.astype('bool'), var_3596.astype('bool')) # shape=(11, 7, 8)
output = relay.Tuple([bop_3597,])
output2 = relay.Tuple([bop_3597,])
func_3608 = relay.Function([var_3596,], output)
mod['func_3608'] = func_3608
mod = relay.transform.InferType()(mod)
mutated_mod['func_3608'] = func_3608
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3609 = relay.var("var_3609", dtype = "int64", shape = (11, 7, 8))#candidate|3609|(11, 7, 8)|var|int64
func_3608_call = mutated_mod.get_global_var('func_3608')
call_3610 = func_3608_call(var_3609)
output = call_3610
func_3611 = relay.Function([var_3609], output)
mutated_mod['func_3611'] = func_3611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2158_call = mod.get_global_var('func_2158')
func_2159_call = mutated_mod.get_global_var('func_2159')
call_3628 = func_2158_call()
call_3629 = func_2158_call()
output = relay.Tuple([call_3628,])
output2 = relay.Tuple([call_3629,])
func_3634 = relay.Function([], output)
mod['func_3634'] = func_3634
mod = relay.transform.InferType()(mod)
output = func_3634()
func_3635 = relay.Function([], output)
mutated_mod['func_3635'] = func_3635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2750_call = mod.get_global_var('func_2750')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_3645 = relay.TupleGetItem(func_2750_call(), 2)
call_3646 = relay.TupleGetItem(func_2751_call(), 2)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_3649 = relay.TupleGetItem(func_1482_call(), 0)
call_3650 = relay.TupleGetItem(func_1484_call(), 0)
func_2158_call = mod.get_global_var('func_2158')
func_2159_call = mutated_mod.get_global_var('func_2159')
call_3651 = func_2158_call()
call_3652 = func_2158_call()
output = relay.Tuple([call_3645,call_3649,call_3651,])
output2 = relay.Tuple([call_3646,call_3650,call_3652,])
func_3661 = relay.Function([], output)
mod['func_3661'] = func_3661
mod = relay.transform.InferType()(mod)
mutated_mod['func_3661'] = func_3661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3661_call = mutated_mod.get_global_var('func_3661')
call_3662 = func_3661_call()
output = call_3662
func_3663 = relay.Function([], output)
mutated_mod['func_3663'] = func_3663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3694 = relay.var("var_3694", dtype = "float32", shape = (13, 14, 16))#candidate|3694|(13, 14, 16)|var|float32
uop_3695 = relay.exp(var_3694.astype('float32')) # shape=(13, 14, 16)
func_2750_call = mod.get_global_var('func_2750')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_3707 = relay.TupleGetItem(func_2750_call(), 2)
call_3708 = relay.TupleGetItem(func_2751_call(), 2)
output = relay.Tuple([uop_3695,call_3707,])
output2 = relay.Tuple([uop_3695,call_3708,])
func_3727 = relay.Function([var_3694,], output)
mod['func_3727'] = func_3727
mod = relay.transform.InferType()(mod)
var_3728 = relay.var("var_3728", dtype = "float32", shape = (13, 14, 16))#candidate|3728|(13, 14, 16)|var|float32
output = func_3727(var_3728)
func_3729 = relay.Function([var_3728], output)
mutated_mod['func_3729'] = func_3729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2774_call = mod.get_global_var('func_2774')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_3784 = func_2774_call()
call_3785 = func_2774_call()
output = call_3784
output2 = call_3785
func_3795 = relay.Function([], output)
mod['func_3795'] = func_3795
mod = relay.transform.InferType()(mod)
output = func_3795()
func_3796 = relay.Function([], output)
mutated_mod['func_3796'] = func_3796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2106_call = mod.get_global_var('func_2106')
func_2108_call = mutated_mod.get_global_var('func_2108')
call_3856 = func_2106_call()
call_3857 = func_2106_call()
output = call_3856
output2 = call_3857
func_3868 = relay.Function([], output)
mod['func_3868'] = func_3868
mod = relay.transform.InferType()(mod)
output = func_3868()
func_3869 = relay.Function([], output)
mutated_mod['func_3869'] = func_3869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2793_call = mod.get_global_var('func_2793')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_3918 = func_2793_call()
call_3919 = func_2793_call()
output = relay.Tuple([call_3918,])
output2 = relay.Tuple([call_3919,])
func_3924 = relay.Function([], output)
mod['func_3924'] = func_3924
mod = relay.transform.InferType()(mod)
mutated_mod['func_3924'] = func_3924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mutated_mod.get_global_var('func_3924')
call_3925 = func_3924_call()
output = call_3925
func_3926 = relay.Function([], output)
mutated_mod['func_3926'] = func_3926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2774_call = mod.get_global_var('func_2774')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_3958 = func_2774_call()
call_3959 = func_2774_call()
func_2774_call = mod.get_global_var('func_2774')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_3960 = func_2774_call()
call_3961 = func_2774_call()
output = relay.Tuple([call_3958,call_3960,])
output2 = relay.Tuple([call_3959,call_3961,])
func_3966 = relay.Function([], output)
mod['func_3966'] = func_3966
mod = relay.transform.InferType()(mod)
output = func_3966()
func_3967 = relay.Function([], output)
mutated_mod['func_3967'] = func_3967
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3968 = relay.var("var_3968", dtype = "float64", shape = (16, 14, 2))#candidate|3968|(16, 14, 2)|var|float64
uop_3969 = relay.erf(var_3968.astype('float64')) # shape=(16, 14, 2)
output = uop_3969
output2 = uop_3969
func_3977 = relay.Function([var_3968,], output)
mod['func_3977'] = func_3977
mod = relay.transform.InferType()(mod)
var_3978 = relay.var("var_3978", dtype = "float64", shape = (16, 14, 2))#candidate|3978|(16, 14, 2)|var|float64
output = func_3977(var_3978)
func_3979 = relay.Function([var_3978], output)
mutated_mod['func_3979'] = func_3979
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4028 = relay.const(-8.105686, dtype = "float32")#candidate|4028|()|const|float32
const_4029 = relay.const([[[4.303527,-8.932415,-2.121910,-2.139052,6.290711,-9.419854,8.519594,-0.061998,-0.608072,-5.612770,-4.106665,-1.949916,5.552034,7.508276,-8.681165],[-8.949960,-8.877028,8.988682,-6.429979,9.279093,-2.037449,1.573741,-2.067601,3.154915,3.871615,1.820353,-5.503121,-2.525168,4.170447,-2.809276],[-8.156471,2.811042,-9.717858,8.434305,-2.152963,-7.062202,9.550922,-1.408466,9.036728,-8.327114,6.674132,-7.007200,7.276925,-6.683990,9.430069],[-0.230218,7.631593,-8.953852,-0.565694,1.934130,-9.675728,-6.614124,5.719254,3.324607,-7.513215,5.902754,7.706195,7.811790,-8.520276,7.452235],[-2.208748,2.238643,3.542876,4.480552,-9.051675,-7.260267,7.145848,-6.306855,-8.074969,4.241171,7.501151,-2.601983,8.907363,-0.153807,6.709720],[3.891101,5.062728,-4.157566,-5.443677,0.532660,-3.632219,7.365411,-1.504523,-7.493413,7.771481,5.839092,-4.028210,8.015725,4.762251,3.638673],[6.149161,-6.150698,1.269495,8.688708,6.266714,-6.641932,-4.835856,8.556572,6.797453,7.966091,4.437318,-2.080569,9.420180,0.458263,6.643103],[5.892525,1.095659,2.179632,-6.088837,-2.840332,6.851116,1.910355,-6.197220,-7.136876,-1.284974,-0.648441,-7.188326,3.710801,-0.390801,-8.982817],[3.149238,-1.306027,-8.107925,-5.777074,-4.785683,-6.172450,8.081643,-2.834102,-0.920397,-8.241384,-2.400732,-7.598714,8.329688,-7.633859,7.147282],[9.267294,1.880151,8.490877,6.409190,-2.055120,9.863884,-1.005440,4.949246,-1.091723,5.927539,-7.780667,-4.882809,3.964967,0.398001,6.503700],[-9.157685,1.272404,0.450573,6.175211,-9.545804,-4.972904,-2.665332,6.235297,8.694446,8.431588,-2.585243,7.660539,6.605918,-6.590311,-3.393804],[8.031194,-0.935180,-7.360041,5.307222,-4.914994,-3.675048,6.662511,8.550985,-6.711418,0.996370,-4.633334,6.753647,-2.374470,-9.271372,4.667076],[-0.749738,3.440582,-4.451847,-0.407773,-9.769159,2.544896,-4.315568,1.004363,7.527707,-4.279402,-7.050813,-3.028549,-4.430743,-6.063076,7.476616],[-6.231329,-2.191352,-5.515228,5.092098,-0.419591,-2.227264,-7.679063,2.237538,-9.665359,7.123705,9.599480,9.905097,-5.643931,-9.862816,-7.725514],[-0.051248,8.977140,9.632779,2.059314,6.471731,-6.198137,-5.035121,-1.378396,-9.616668,-9.149381,2.690119,8.295068,-3.372377,5.327427,-8.143615]],[[-3.049456,-5.914424,1.760625,-8.534270,-4.754883,5.088065,4.116112,-0.181885,5.057352,-9.752798,-4.375862,2.721040,4.191450,9.556021,-6.909325],[-7.211210,2.598332,-9.513428,-4.115797,7.233602,-3.336518,0.086582,-7.514076,2.455444,9.711718,-1.950929,-5.487917,8.978177,2.809160,-9.335861],[3.485523,-4.533005,5.376581,0.288574,8.272110,-9.935970,9.682446,7.809523,0.828061,9.716287,4.414562,7.326944,5.581064,0.817673,7.945875],[-8.428967,-4.711551,3.965193,-4.490893,-2.950342,-5.644352,5.504662,-6.067726,9.739756,-5.551920,-4.126826,-2.205222,2.922338,5.461505,-8.790969],[-1.041568,1.384422,-1.114120,-1.254450,3.235296,-1.360176,0.191830,-0.791833,5.774918,-8.897394,-7.568127,7.061017,-9.490956,9.589561,9.128560],[-4.887974,-9.795359,-6.881625,4.621628,5.887254,3.909070,-4.977480,-1.131783,3.306350,-2.899513,4.338224,-4.678811,-1.284682,3.848520,-3.035069],[4.534837,-6.445759,-4.861901,-8.479455,9.550556,3.870901,-8.121448,7.296555,-1.538084,-1.154483,-3.944681,6.059517,-3.492586,8.746364,0.171859],[-3.044941,8.270254,0.510133,1.016694,3.447600,6.120135,-3.653731,-1.564527,-5.679043,-5.700191,5.455740,-9.902310,7.459168,-0.745909,-5.965802],[7.822412,3.953062,4.270492,-4.643577,-9.358959,0.505081,-2.023509,8.216351,-6.163511,6.414821,-9.001843,1.077933,-1.863297,5.044029,-5.046645],[-6.048189,-3.592176,-6.233786,-7.241527,3.822409,-8.289094,5.689632,-1.379195,5.380406,-6.157455,7.689149,6.342182,-1.134389,3.534842,8.207921],[2.013890,6.264147,8.295780,-3.037481,1.529038,-9.496222,-3.463804,-8.766431,1.192995,3.449881,8.057398,-4.951998,-1.469671,-0.461401,6.304174],[0.072446,9.864166,-9.990577,-5.366757,1.372470,-9.957295,3.497141,0.043468,7.970425,2.038874,-8.763573,8.676350,9.973816,6.246734,-4.771333],[6.861003,-7.070591,-5.614326,1.379702,5.024077,-4.574774,1.588800,-9.361824,-2.451627,1.522617,1.372754,-5.086990,-0.378602,-0.718685,9.751458],[-2.478976,-1.220368,8.362309,-9.241059,1.129829,8.066708,4.735501,0.019636,8.877429,-3.214123,7.452860,7.360149,-2.563320,5.789239,1.361339],[4.163052,-8.253100,-7.606076,0.582024,-6.473848,-2.127161,-9.252855,-8.270867,-3.026981,4.770011,-3.258747,-4.571954,-5.823942,-3.742412,4.145514]],[[-2.959508,7.367227,-5.009297,4.755086,-9.924380,-9.237372,1.166369,2.473354,-0.564465,-2.277564,-4.711535,-0.780605,-6.099859,2.040769,-7.373750],[-8.345743,-4.095140,9.015592,-9.546144,-9.890737,5.866249,4.693158,1.919829,-3.513336,-9.852770,-0.797036,-1.746847,0.144547,3.753519,2.703968],[2.209751,7.953129,1.702991,-1.651484,1.423390,3.527775,1.754981,7.328070,6.502880,-9.457826,-0.817590,-0.845007,4.769678,2.088676,-3.547315],[4.708020,6.835532,7.607983,9.039395,-1.052845,-2.554078,1.968135,-2.908423,2.753541,8.540499,-0.400427,-3.173805,-5.274155,-5.716514,-8.480244],[-2.537488,9.337155,-7.640182,-6.914048,-4.356347,-2.569958,-8.357516,9.502964,5.346192,-0.248659,-0.180150,-0.695904,3.009353,3.395038,6.870507],[9.620590,6.845766,5.734818,5.304472,0.594226,-0.467261,1.946751,-6.901971,5.114535,3.478798,-0.990992,-9.289563,-4.696740,8.404381,-7.604652],[7.887430,-2.534337,-2.215941,5.214329,7.137619,0.797147,-0.883325,0.908060,3.538651,-2.335253,-1.060758,1.586982,-2.230899,4.296906,3.262025],[-2.764254,8.040227,1.192124,-3.936282,3.318938,4.158486,6.841337,9.996569,-2.933157,1.692511,9.805875,1.718314,0.747625,-9.763752,6.924630],[-6.964655,3.374420,-0.264052,8.084757,4.186608,1.905914,5.620791,-8.831768,8.649678,-9.920820,-9.415310,-7.850595,-9.523477,2.361386,-5.854607],[-5.090685,-1.665155,-9.093327,-1.827036,5.235066,3.131412,-3.858679,6.313407,2.653379,-3.056803,2.202848,-9.954427,-8.433485,9.883655,6.075079],[4.287975,-0.323220,6.797867,-4.309150,-0.437886,3.215993,-1.528255,2.010851,2.362805,-2.850365,-7.185704,-8.265201,-6.000703,4.956787,-8.124524],[2.163436,-0.188062,8.341056,6.795560,5.428216,7.375801,4.541486,-2.466842,4.227421,8.997945,8.937687,1.570653,-2.253453,5.107476,-3.054912],[0.027967,0.775025,8.398040,4.953132,-4.866408,7.021528,-7.463219,-5.641670,1.514710,-8.505640,3.976784,-0.615297,7.149139,-9.975769,-9.665054],[-7.471560,1.366040,7.279503,-0.423038,9.331888,3.276323,-9.253192,5.585294,-1.353017,-9.223221,1.671700,1.004138,-4.980516,0.893274,8.203948],[2.266821,2.140580,1.721482,-6.873328,2.781411,-3.690923,-0.113367,-0.525378,1.139382,-4.263128,8.412226,-7.818926,4.826346,4.633677,6.457822]],[[-1.446104,-0.717688,4.874678,-3.498447,3.904955,0.195193,-8.605118,-3.759096,2.196300,3.977304,7.818616,-2.283638,7.350311,6.272955,-5.088919],[5.418681,8.899772,-6.997017,5.542948,-5.284356,-1.578784,6.838702,0.748340,-8.129772,0.041950,-1.923980,-8.036798,-9.669595,-9.099329,2.031906],[7.383436,3.865625,-1.330861,5.723120,-0.165825,8.469009,-5.788421,0.180242,-8.642302,-4.412359,-7.350387,6.136101,3.562106,-9.641002,3.416788],[-5.958066,5.538766,1.308315,2.296654,3.486454,1.901092,7.626722,2.840964,2.828460,-3.976738,-4.927743,0.223553,2.936242,8.495278,-2.129042],[6.256789,4.241458,9.391164,1.839829,-6.772713,-9.972259,8.576800,9.724547,8.559002,-6.250035,-1.503534,-9.422060,-2.873759,3.734733,4.200998],[-0.612811,-4.587249,9.539788,0.082384,1.294760,-0.871668,1.626656,6.519043,-6.502673,4.132418,-8.757834,6.564591,7.338611,-9.444377,-6.554280],[2.080912,9.752706,-1.895036,5.666526,6.979264,9.755579,-1.660382,9.322653,6.092581,-1.773668,-0.429511,5.144751,3.695656,-1.920284,7.267724],[-4.823209,6.479860,-5.272453,-3.638411,0.042518,-0.544508,2.660846,4.168999,-3.734613,5.913875,-8.230072,7.420161,5.201153,-0.462265,3.386021],[-8.968431,-0.211594,5.837055,-7.696005,-2.340329,6.140392,-3.663073,-0.085202,8.599098,1.996745,0.088669,-1.246564,1.046369,-0.642647,4.266561],[2.508888,1.165818,-0.973878,-6.195977,-3.761766,-2.014141,-4.834679,5.622625,7.081535,3.661487,5.512098,-6.891040,-7.625244,5.059332,4.340265],[-8.462786,6.947093,5.235326,-6.186318,-2.505983,-3.862952,-4.101625,5.823024,9.573337,-0.048225,0.269494,-9.574882,1.944861,2.319746,6.187445],[-1.025546,0.732240,9.480941,7.623739,9.087376,-9.014487,-6.806490,-4.912742,-2.977261,-8.515701,-4.200638,-7.082188,2.396073,1.662009,2.820968],[-6.794687,-9.868044,2.970117,-0.762002,7.745396,-1.565236,5.950319,-3.465429,-0.410953,-1.136302,8.959931,3.914650,4.168028,-4.703269,7.244508],[2.589556,2.144224,-8.673816,1.271896,1.956164,-6.783522,-3.367759,-4.045307,9.226469,-5.595779,-5.044790,-3.417140,4.211952,-0.157658,4.975467],[3.624705,6.891667,-7.620627,8.239068,-5.463095,8.309758,-3.069737,4.258368,-9.487763,-1.647531,-8.684931,0.324349,-3.766893,-8.211656,-2.782330]],[[-7.088740,-3.096929,-6.002256,4.182968,-4.919562,-1.558195,-4.404142,5.618743,8.240254,-5.539070,-8.980623,-3.627721,-1.893093,7.861349,-4.592871],[-2.145180,4.110261,-1.477400,6.477592,-9.661999,-7.660865,1.709346,5.136286,-4.512091,0.858281,-2.670678,2.903797,6.433272,2.054297,-7.700618],[-3.520257,3.959107,2.390176,5.322599,9.529609,-5.181736,-2.673503,9.329439,-8.427757,-7.279133,-4.080723,-8.165145,-6.273015,6.968129,-4.948438],[1.114765,-5.811979,-7.365102,-5.776889,8.323049,7.478599,9.868554,3.130721,-0.962457,-8.388218,1.876217,5.951317,-5.094122,9.751703,-5.870027],[3.314718,-1.242471,-6.757360,8.500902,-1.278228,-3.074367,-1.896089,2.024940,-4.793420,-6.865775,4.444142,-8.659401,9.325577,-2.927010,-9.200216],[-8.892610,-4.957172,-6.083131,2.248825,5.126178,-1.180235,-9.484749,-2.155518,-6.220944,9.502170,0.107571,2.643461,5.711264,2.720278,1.077613],[-0.526619,9.907139,3.659344,4.852871,-9.743263,-4.723992,4.614846,3.491922,2.517045,-0.783297,-6.411047,7.601883,3.346846,-1.131313,-6.377827],[6.823700,7.624046,2.009209,-6.594844,-0.351915,6.187167,4.512588,7.278175,-5.369388,-4.466884,0.036508,6.135821,-5.289775,7.895558,8.733943],[2.489137,7.219238,5.517357,0.845221,8.088136,-6.305653,-3.538227,9.033106,5.160499,-7.983691,7.561232,-8.275575,-5.606768,3.944297,-5.348491],[5.113881,7.618747,-7.644411,0.800953,-8.031180,2.813021,-9.820541,-1.610173,5.605208,9.742883,-3.749237,4.644440,3.707843,3.728591,-9.365863],[2.985697,6.471104,-2.996709,-9.577920,8.248460,-8.647610,5.162746,7.540204,6.515922,9.438379,-4.167315,1.818112,3.341602,-2.626511,3.127821],[-5.044222,-4.671343,-8.702246,6.322529,9.448320,0.776975,-6.926028,-1.870486,1.593336,-2.815228,-4.398475,-8.050207,3.289621,4.041889,-8.007854],[-8.113632,4.170972,7.240098,7.203472,-4.161258,4.019884,-8.662569,7.232403,2.863876,-6.569192,3.463374,7.648400,-3.931601,9.986790,-7.717773],[0.644137,-8.088014,9.490492,-2.560157,9.668556,5.204224,-2.151023,-4.408328,-5.870197,-7.152273,0.116373,-5.831798,2.623918,6.795613,-1.077208],[8.272939,-2.266981,-6.609682,1.754149,-4.448281,-5.163607,1.461458,-0.513657,-1.015683,-4.622797,9.324370,-1.094548,-7.391808,6.582485,9.290022]],[[6.574411,6.516365,-3.724855,3.802370,-9.001146,-1.616657,-2.610035,2.029596,6.204762,4.255829,6.242697,-4.903737,-0.347982,7.975627,-1.955093],[5.966232,8.838922,-3.636490,9.797861,9.527654,8.665377,-6.802693,-2.614709,-4.283796,4.267853,2.981254,0.478685,-1.529983,-6.374598,6.619961],[-1.213122,-7.961041,7.885319,-9.358109,-7.972634,-0.562044,8.222328,7.112216,-9.552485,-6.810213,-9.442605,-0.425639,2.003537,7.231220,7.290780],[-9.109168,-9.271036,3.505047,1.009667,-0.813784,-3.457479,-6.707400,4.757794,5.124982,6.924285,2.636938,3.215337,8.594932,-9.518698,-6.333009],[3.952729,-7.750295,3.144178,1.847892,5.543094,-8.085410,-6.071666,6.692635,9.912122,-4.793279,-6.356611,-4.415123,5.973954,-8.190443,-8.701162],[2.363357,-1.090973,6.030046,-0.393516,-2.750804,-9.256248,4.556248,6.485662,-3.584143,6.191391,-1.194589,-0.023451,0.419184,-6.884909,-6.474443],[-7.882092,8.292978,8.521404,-1.328471,2.400146,4.093722,3.157410,3.481083,7.951362,1.534246,-5.264879,1.175702,-4.523967,-5.911537,-6.820081],[-3.269446,9.233879,2.882665,-3.208137,-2.563010,3.312272,-6.098013,-5.992259,9.783694,4.890962,-1.487358,-1.000217,3.320438,-6.733535,-1.893716],[-1.082039,5.774300,-0.905688,-1.399346,-4.917061,-7.467147,-2.211522,-3.776420,-1.801930,-7.213611,4.554720,9.454946,-6.489481,-8.516102,2.843700],[-7.960225,4.190206,7.794901,-2.552470,6.016267,-1.743400,-1.768489,-4.968894,1.581188,4.948929,-3.313977,-7.651615,-1.492153,-8.167841,9.371356],[5.737337,3.321736,7.333750,-5.282805,-8.190416,-5.105515,-7.109963,1.836097,1.629141,2.065496,7.045734,5.338244,-1.048607,-6.551840,5.258979],[-9.385596,5.885719,2.557285,-1.343386,6.329368,8.520014,1.107649,-1.377227,-7.129988,9.826200,-1.028007,-2.441864,-1.908883,-5.157863,1.546418],[-1.505709,-9.709728,-5.497164,-3.330753,-2.237520,0.149480,2.675560,5.085672,-8.519573,9.730388,0.186636,-2.230973,-7.401919,-7.530357,2.121261],[-5.321518,9.329454,-1.667096,-8.718829,-2.600135,-8.643103,5.206243,-7.660776,4.537864,-6.143934,-8.478818,8.026014,0.501542,4.313612,-2.897266],[-4.635628,-4.463086,3.101815,7.653960,1.599257,-4.743752,4.960406,1.131409,-2.621035,-6.880989,-6.476996,9.000108,2.569859,0.393622,-0.002794]],[[-4.228283,-5.838714,6.927419,1.711301,7.635046,-9.595755,-1.320408,7.303866,-4.629844,-8.538269,5.102504,8.210987,-6.577147,3.945961,-8.153930],[7.325859,-8.071766,3.173828,-0.588630,-2.337080,-6.213981,9.628642,5.309733,-0.311221,2.390045,-9.891744,0.843164,0.161367,6.734040,2.469082],[-4.824940,-3.253491,-6.968299,-3.314050,-0.422163,5.415787,-1.337548,6.592287,0.574728,9.264902,-9.622684,1.254637,0.273268,-9.413967,-7.834936],[-2.025362,-4.982662,7.072647,2.277732,4.979028,1.510737,-1.617221,-7.473922,5.122852,8.670432,-4.603919,-8.725260,-7.070287,-3.897018,-7.902070],[-3.934474,0.817232,8.874135,-6.060933,5.346055,-4.370506,-2.197049,-4.099645,-3.456752,-0.194701,-1.190276,-1.239390,8.438074,-7.595816,8.729561],[-5.949355,-9.853415,-1.626317,-3.710948,-5.540465,0.582675,-6.468708,9.372580,-6.686751,-1.582137,6.267559,2.149546,-7.131648,-1.738456,-9.155414],[2.220747,-0.176688,-3.104422,-7.714130,5.840734,-2.693092,8.410885,-4.728614,3.827049,8.995909,2.387413,-0.544799,-1.764466,1.193499,-6.362099],[-0.816527,-7.166345,4.696260,3.942708,-2.223390,-8.777768,3.519849,9.965965,-6.043419,-2.954197,7.617468,-7.492487,-6.038680,-9.264828,-5.948685],[3.468494,-4.358315,4.785262,7.037568,3.826437,3.501080,-4.395786,-5.872579,-5.269307,3.578053,-6.471353,-1.633457,-8.886103,6.408593,6.493232],[9.234746,-5.718623,-9.776200,6.735490,-6.433248,4.696873,-8.031164,4.046582,-1.819924,1.039340,-9.074922,-6.392249,7.075276,-6.804043,9.223094],[-1.167973,-4.099303,-6.375862,-6.554047,-3.273828,0.755061,-8.822100,-0.797353,-9.954410,1.005987,-0.314977,1.929264,-8.471861,1.969889,1.967278],[-2.685897,-3.568925,-7.451917,-3.429671,-0.873640,9.625117,-2.062157,-5.992118,1.516541,3.426942,-4.155288,1.970306,-1.789001,-6.210093,-7.511556],[-0.189767,9.549356,6.059818,-6.913220,-5.317454,5.735612,-1.524989,5.465677,-0.272331,4.429018,7.539115,6.118522,8.008528,0.067819,4.759811],[7.122293,-0.322765,-0.097136,-0.558119,3.170724,-6.595563,-3.588764,1.829604,8.352615,0.544216,0.647943,-5.109781,0.577961,2.197151,-3.722933],[-2.730206,-0.086709,-6.951288,-2.129567,0.972554,-8.131988,-9.223787,-5.238854,-5.754780,8.791775,-4.344142,1.301190,8.924120,-6.642038,4.674856]],[[-1.338151,-5.871056,-7.309196,7.964070,1.118721,2.698039,-7.730404,4.409986,0.663267,-3.084279,2.120492,0.267532,-5.295239,6.550460,4.117146],[2.553773,-8.812943,6.078031,-6.638010,3.902290,2.967598,9.335906,5.671570,4.107364,7.771288,0.694548,-5.230830,5.728724,-6.160707,-4.270353],[0.022031,0.174248,1.955510,-0.921125,0.163968,-7.442147,-7.349009,7.987732,-3.486233,-2.282725,-3.625929,-7.413703,8.698703,0.495086,-3.532419],[0.151950,1.769119,9.244265,7.432912,0.834144,0.731521,-5.766600,4.509138,5.692505,-7.369898,2.559141,-2.893242,6.887288,0.718896,0.021904],[-3.389704,3.867240,4.137471,2.146518,2.519232,0.606169,-8.921835,-3.557234,1.354519,0.872371,-1.169528,5.651023,-9.460961,-4.935331,4.455913],[6.140310,-6.888610,-3.257138,3.225694,8.872208,-0.951045,6.058829,-9.194940,-0.089997,-7.747299,4.792697,7.563707,8.905093,3.376001,0.258060],[0.744493,2.460690,-8.405236,3.820005,1.648313,-5.851814,5.249747,-7.818103,3.687326,-4.543808,-8.920474,-5.666083,-6.921646,2.169083,7.640158],[-9.316137,0.640086,3.358642,0.189126,3.959639,7.986294,-3.821269,0.117212,-1.033986,-1.303930,-1.220971,-3.293294,-0.689958,-7.199720,-0.472639],[-0.848245,-8.556202,-4.297427,5.432842,-4.657725,-3.887221,-0.335825,2.565564,2.661206,6.120484,-8.557125,-2.190418,-3.171635,7.661327,-5.756436],[0.084152,-3.782064,-2.187040,9.045023,1.068279,-8.228626,6.510510,-7.377371,1.367525,-8.284751,1.660336,-1.021972,7.108842,-6.234835,-6.834819],[-5.246043,-9.221560,0.108624,-0.509411,-8.663938,5.022980,4.574175,-9.751843,0.653911,-9.596945,-3.251327,-5.787422,9.801671,0.618163,-2.279270],[2.161433,1.415392,7.501516,-5.163717,3.384008,0.772341,-5.876036,8.956624,6.673079,-4.511631,-5.566310,7.484075,4.681144,-6.621062,2.799928],[-5.884720,-7.414567,-0.983918,6.610223,1.440874,4.612142,1.661594,7.512814,-7.253800,9.688691,-5.299804,1.158723,-0.474229,2.560707,-1.835789],[8.862540,1.849745,-7.951197,5.320806,-3.638395,8.402791,-7.521413,0.595040,7.772257,-4.102730,-5.149365,3.973156,-5.962448,4.119322,-4.205399],[-1.592513,-8.042595,0.702642,7.527946,-4.987982,0.307000,-9.632514,-8.523704,-2.878111,5.278274,-0.716859,6.712881,-4.485548,8.880753,1.232561]],[[1.862421,3.914085,6.338584,-0.531013,-3.488500,1.198595,-5.171859,9.883435,1.757871,4.937341,-2.219423,8.622390,9.075388,9.264666,8.886508],[-2.948889,6.613284,-3.709230,8.227042,5.888876,-4.117285,5.786502,-0.874225,9.441558,-4.695449,1.920191,3.083691,9.152850,-2.595850,2.271467],[3.149797,-1.564933,-8.473206,-7.387480,1.575937,4.663559,-6.029579,6.271857,6.712603,-6.382366,3.980118,-3.974845,-0.885672,6.275157,-7.924714],[-5.861505,-8.024922,-1.663159,-4.216539,-1.126472,9.047459,3.777141,1.197511,-8.434028,2.613447,-4.645614,-7.715670,6.898645,-9.231446,5.562565],[-4.291199,2.067649,-3.758295,8.267190,-8.895882,5.233995,1.816015,1.378865,1.995642,3.930228,-5.449767,8.282322,-0.368751,-0.231387,2.403950],[1.062736,0.085004,-2.492343,0.251383,-9.771027,-0.004212,9.955642,-4.923200,-6.729793,-9.408704,6.246157,0.745343,-9.268032,0.903826,7.652528],[-1.908946,-5.112492,4.565424,-0.610454,-2.021862,-8.521538,-6.351722,-1.747033,-2.741556,-9.123469,-0.243157,5.455414,-4.576278,4.364383,-7.528341],[-5.020891,-8.003239,2.654926,2.823282,-4.236801,-0.967759,-2.989577,-4.945039,-2.588318,2.016250,5.796098,-8.727558,-9.065415,-4.707839,-4.944394],[-7.149377,-6.671903,-3.922581,-4.062731,6.811826,3.263604,0.655115,-1.794162,3.918232,-0.681642,2.382553,-1.008547,-5.840106,-0.956589,5.131708],[-3.227424,7.270716,-6.704948,-3.736994,3.985450,4.099201,2.328155,7.201591,-8.163771,-6.404199,9.283619,-8.354388,1.783489,-1.867333,-4.679012],[4.744581,7.658076,5.784172,-0.329830,-7.626585,2.743695,-9.190352,-3.639688,-7.959692,-8.779938,3.333179,-4.193728,-9.499054,7.042985,0.857296],[-9.672275,-3.328289,7.154731,8.867610,4.689091,8.749487,5.826317,1.569206,4.366972,-8.237417,4.366098,-1.084943,4.566120,2.562035,1.698209],[-0.915203,4.021651,-5.628418,-9.406677,-4.026777,0.337084,-1.667114,-5.027835,6.022923,2.315805,5.309024,5.857504,-5.388780,-5.382559,1.021804],[-8.809897,7.477939,-6.576164,-7.258177,9.697801,-0.621442,4.800908,1.615267,8.461969,1.521319,-4.590371,1.818266,-2.345160,3.022475,2.494749],[9.656543,-3.406161,-1.271254,-8.341924,-8.009413,3.067125,-9.099765,5.699838,-1.335064,-9.861552,-5.418517,1.836827,1.473375,1.157257,-6.571700]],[[5.208923,2.273410,1.726983,4.271293,-4.672498,5.491648,-7.542726,-6.738963,-5.371917,-6.325749,0.430705,7.921363,-6.327219,-6.444007,3.934530],[2.486823,-6.816134,4.560462,-9.850065,8.353588,-4.066916,-1.024019,5.905139,-1.374023,-3.403420,-4.317449,7.833432,-8.472225,-9.872661,-9.021845],[3.380030,8.525242,-0.784902,1.918197,2.124743,1.077315,-3.692043,-3.349352,3.593096,4.568043,-6.566332,0.954580,4.711550,8.484761,-3.799298],[-4.107068,1.494553,-3.698082,-5.984085,-8.067774,-9.903777,1.534143,-4.095243,-7.199134,-3.181676,6.178217,-9.192535,7.581756,-4.231564,0.726918],[-9.488643,-7.507368,2.041644,9.931316,3.812726,1.131051,0.333116,-1.732075,4.483972,8.968520,-1.096087,-1.068368,4.967963,-6.796930,-9.836217],[8.325847,9.258951,8.418850,-5.837848,-3.355830,-2.167173,1.257314,-6.543977,4.968459,8.982966,-0.110481,8.383458,-3.993707,-2.877698,-7.366741],[-5.883688,3.294980,-0.028638,9.989612,3.219263,-1.706008,5.497952,9.281829,0.362835,1.344816,-8.720304,-1.183690,-5.030827,-2.853723,7.053155],[-3.291900,-4.859939,-3.903239,-6.049498,2.687257,6.206387,9.362676,-9.391524,8.020304,-7.684435,-5.925832,-6.179836,-0.154330,9.522033,5.145218],[-5.033034,-1.664194,2.660001,7.108504,-1.104771,7.707802,-7.868125,8.658107,5.721387,-9.759495,9.634647,-7.602512,2.370368,8.243832,-6.965474],[4.133319,-3.598822,0.377264,-3.153508,6.785367,-1.920118,1.988737,7.396963,6.553192,5.874680,-9.037034,-8.609318,-0.141182,-4.589049,-5.550979],[-7.041631,6.159332,9.057133,-4.155619,9.828013,7.911229,-7.792703,-5.299070,4.784118,-9.884020,5.657491,5.928322,-2.922743,6.115436,5.065286],[0.932909,2.005575,-7.346671,3.496787,4.796034,-8.287584,-5.290826,3.200544,2.218137,-7.497143,5.405338,-2.898793,0.949178,-3.989804,9.024341],[-1.620215,8.151480,3.372955,3.028372,-1.461590,8.001246,4.897634,6.978543,-8.360572,5.964129,-3.230743,-6.861472,8.833008,4.540002,-5.616570],[-2.061888,8.877570,9.820061,4.925081,-9.191579,2.207408,1.188502,2.796674,4.907426,5.682504,5.976947,6.224462,-8.248258,0.715698,-9.038677],[5.298623,9.728712,-3.788370,3.624332,3.313925,5.926276,-6.400379,2.577578,7.373364,9.098780,6.528599,-4.592181,7.767338,7.098418,2.468943]]], dtype = "float32")#candidate|4029|(10, 15, 15)|const|float32
bop_4030 = relay.add(const_4028.astype('float32'), const_4029.astype('float32')) # shape=(10, 15, 15)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
const_4035 = relay.const([-6.913988,-7.734396,1.623188,1.563644,-4.158718,1.735974,-5.249143,2.691752,9.218190,-3.215997,-3.282298,4.812286,-8.453534,-3.527709,4.243263,-4.515800,-5.950599,-3.394989,-5.955597,-2.003376,9.551324,-6.252574,3.536753,2.084533,-6.587254,9.332478,0.338475,-0.904748,-6.500257,8.511482,-3.456573,-4.131317,9.922613,-6.751997,-4.052002,-8.564818,3.633615,-8.495383,-9.855702,2.044617,6.672588,8.983536,-2.221800,3.317213,4.518372,-9.904704,-2.134104,-4.577787,0.070232,1.489513,3.645007,-2.845006,-8.464299,-4.281678,-7.606809,1.103769,-2.516635,3.122691,-5.492111,4.258947,6.794513,0.748315,-3.578538,0.076003,3.252740,-2.218945,6.016711,4.611273,8.894582,-9.043856,6.650446,4.063897,7.293931,-0.424837,1.989090,1.749606,-1.224324,-9.521718,-8.503696,-0.392222,-8.388319,1.532888,1.443322,-6.009109,-9.891479,2.218010,-8.510598,7.653889,4.647260,-8.380710,8.075801,1.417345,-4.366153,9.653438,-8.855851,-3.670994,-6.446214,-5.927721,-0.863933,-7.359762,5.913627,8.032898,-5.366324,2.572871,-9.830458,9.448550,2.499759,9.044109,-8.993311,8.528512,6.449338,-2.000969,9.942634,1.098815,4.582365,-5.570937,7.936558,-9.955890,-9.908522,8.589478,6.179035,-4.265724,-0.299383,0.770964,-1.200114,0.536100,-5.342366,8.016017,-1.662317,-5.597978,-2.376536,-7.823626,-8.003121,-8.876810,1.853630,5.816410,-3.683947,0.797199,-5.953971,3.154864,6.202812,-5.202975,-9.494195,0.645012,-9.513489,-3.994126,-3.522392,2.097777,-5.254216,8.440649,4.076466,-6.454920,3.030025,-0.869645,-1.255358,-1.255326,-4.332266,-7.658183,5.238455,9.379885,3.587514,-1.158219,5.472700,-9.317516,1.207753,5.106721,-3.619553,-8.576592,8.561187,2.886443,0.157254,-6.209501,-5.312390,-8.193158,-6.808938,-5.427425,-4.456097,-3.154717,-6.705088,5.462390,-1.504633,-0.877070,-4.378361,-6.183908,-6.590774,-5.260851,-7.081352,9.610701,7.744592,-7.081710,-7.098869,7.476347,9.617900,-1.901212,-9.306409,-0.515553,-5.376161,2.654845,5.779863,-2.852419,-8.254147,1.080076,2.978177,6.758716,2.338513,1.563007,-2.638786,-5.683529,-1.376131,4.598628,-0.844724,7.524733,8.839331,7.676289,4.623392,-7.391922,-3.944163,-1.372700,-2.975496,-0.453139,5.003238,0.115370,-9.560231,9.890708,-1.319061,4.935685,-1.372239,7.462455,-0.872514,1.623832,8.678885,2.866878,6.012223,3.343934,9.510541,9.028723,1.385060,0.211432,-3.527227,-8.977670,3.732865,6.373429,4.791618,7.937850,-0.141050,2.307093,-6.081647,5.213517,-5.329831,-5.764535,5.085066,-8.705379,-4.231999,-0.188322,-8.425944,-6.402907,9.355980,-4.474285,-3.475742,-8.106756,-2.613720,-1.867055,-4.048474,-5.634023,1.910016,-0.890443,8.091744,5.418104,-3.078516,-2.853007,7.669339,0.182494,2.255238,9.055886,4.576997,-9.593137,7.840384,9.182974,-5.367911,-7.283173,-7.762968,-4.940949,3.628631,6.878640,-5.838641,-6.143119,-9.481024,-5.035347,8.984864,-0.547511,6.256001,-9.038332,4.664406,-6.462738,-9.074256,0.628721,6.248698,-2.361367,-6.564837,5.949842,0.160526,-8.439458,8.213208,2.426446,-5.333504,1.371796,-9.213008,-4.561252,4.043518,-0.742181,4.460562,-2.098465,8.601024,4.853982,7.529786,-0.818629,-7.258003,-3.452021,5.293434,6.848312,1.326074,2.529492,-1.240019,-5.945822,-0.698830,6.142203,-6.272251,2.525178,-0.933419,1.717072,3.705595,9.239292,-0.997959,5.945766,8.476023,8.215371,9.170204,7.002970,-7.750823,-9.378821,-6.813780,-7.144450,3.487582,-8.790312,-6.553608,4.239391,-9.847554,-1.190481,8.648113,-9.251531,-0.197310,3.363797,3.398341,4.926007,-5.168943,-0.867991,-8.694226,-1.044249,-0.267840,0.255420,-9.969450,-5.228226,5.553718,-9.652397,-0.158215,-5.089515,-4.374880,2.106700,-6.361649,-3.183504,-5.306582,0.429516,9.924659,-6.522275,-3.182536,0.395161,9.551624,6.395384,-9.229259,4.158246,8.750740,5.575978,4.448308,5.016988,3.841619,0.319112,-9.077200,-2.069709,-9.363295,-1.074937,7.623799,8.961177,7.419140,3.262779,-8.087778,0.177619,-0.921584,-6.151506,2.796863,7.654781,8.539622,-6.980583,1.150099,6.031670,9.161679,9.778584,5.943647,9.783753,8.323049,-5.099420,6.001462,7.194862,-7.901363,-6.886240,4.900457,3.722647,-6.894617,9.540809,-9.844005,2.736538,-1.279473,-7.590584,1.201579,-4.645074,8.064846,0.160578,-5.203468,-6.691031,-8.790010,-0.251220,5.129712,-4.494493,1.343322,9.255068,-3.623227,-3.307282,1.474060,1.748861,-8.391054,-5.576923,-0.412513,2.214534,-7.324213,-4.125748,-9.397826,0.254770,-4.332793,6.098310,7.426131,0.847293,5.858990,-2.510216,0.281217,9.419092,2.621684,7.930920,1.202198,7.113841,-2.911110,-2.713804,-6.498188,-8.766346,8.500760,0.469920,1.935026,8.479413,-3.336913,1.619610,3.050678,8.000071,-5.960033,-6.510021,7.861957,-2.327676,7.278223,-4.241034,-7.568445,-5.104648,-0.600823,-6.350770,4.907020,-5.838020,5.876472,4.767962,8.472858,0.109738,9.417143,3.376695,5.030066,-0.985391,2.907337,5.013481,-8.969191,0.927371,2.994063,-7.500607,1.188824,-9.221995,-5.168595,6.903152,-4.329719,-9.059853,4.382186,2.765739,3.796795,5.591472,-8.412693,-8.894902,6.853743,-7.517132,3.708711,7.499008,8.106691,9.230801,7.812255,8.428765,3.919973,2.459891,-6.072364,-6.964219,-5.748580,-1.988650,-0.454347,6.600491,-3.426234,-5.204257,-5.725127,7.405821,3.189022,-8.160684,7.221570,-2.457656,3.790792,5.450505,-7.477966,6.937283,-5.103885,-3.575351,-3.083927,-6.641098,7.786809,-4.812065,-5.340132,6.275444,-2.697053,-4.386028,-5.552056,-4.151041,-7.563407,7.886990,9.175094,3.694012,-7.055634,-7.812254,-9.840492,7.464147,7.953253,0.583357,0.635162,4.362036,-8.215605,-7.444087,8.527851,-8.065374,-3.103020,-2.357430,-1.919190,5.070758,0.414290,3.906876,-7.763989,7.148993,-1.032546,7.945802,-5.270445,2.719724], dtype = "float32")#candidate|4035|(576,)|const|float32
call_4034 = relay.TupleGetItem(func_2300_call(relay.reshape(const_4035.astype('float32'), [6, 12, 8])), 1)
call_4036 = relay.TupleGetItem(func_2302_call(relay.reshape(const_4035.astype('float32'), [6, 12, 8])), 1)
uop_4044 = relay.asin(const_4029.astype('float32')) # shape=(10, 15, 15)
func_3608_call = mod.get_global_var('func_3608')
func_3611_call = mutated_mod.get_global_var('func_3611')
const_4060 = relay.const([2,4,3,7,-3,5,-4,7,4,6,-2,-2,-9,7,5,-5,-6,-3,1,6,-3,-7,10,8,5,-1,3,6,-4,-3,3,-6,-9,5,-10,-3,1,-3,-3,-7,7,7,-5,-1,-4,-10,2,-5,6,10,-2,-3,2,6,-9,4,-4,7,2,8,10,-4,-5,-3,10,9,6,-4,9,4,6,-5,8,10,10,9,-8,-2,1,-4,-9,-2,-6,-3,-8,-5,6,-5,-2,6,4,1,8,7,-7,8,-5,-10,9,-7,2,-1,2,3,-2,-5,4,-10,-7,2,9,1,2,-6,7,-6,-3,-7,7,-8,-9,-7,9,7,-6,4,-9,-9,8,-10,7,4,-6,-7,-1,4,-2,-4,10,-8,10,-2,-9,-10,6,-2,9,-5,10,-8,10,2,-2,-2,-10,9,-4,-9,-3,2,10,-2,-1,-5,-10,-2,4,-2,-2,1,5,-2,-2,-4,3,-4,-9,3,3,2,1,-6,10,5,2,-4,7,-10,10,-4,9,7,4,1,-7,3,-7,-5,8,-8,8,-9,-1,-4,2,-3,5,10,-9,-9,4,-4,-4,5,-9,-2,7,1,-10,-9,4,5,2,-1,6,7,3,-10,-10,-8,-10,-7,-4,4,-3,8,5,-7,1,-9,-9,9,-6,8,4,7,10,8,2,2,5,3,3,8,-9,3,1,-9,-8,3,6,-5,-3,2,7,3,4,-3,-7,3,5,-3,5,-5,8,7,9,-10,-7,10,-4,7,8,-7,10,-10,-3,3,-4,10,-6,7,9,8,10,3,10,4,-9,-2,10,-5,-6,10,7,-3,7,6,7,-5,1,-1,-7,8,7,-8,-5,-7,-1,2,-6,-1,-5,2,-3,9,4,-7,-8,-8,7,9,9,3,-2,8,-2,-1,-7,10,-10,6,-10,7,-9,2,-1,10,-4,9,-9,-4,-7,-7,9,-6,6,-5,4,6,-6,-9,-7,6,1,-9,-6,1,-1,-10,6,1,8,10,-9,7,-3,4,-5,-3,-8,9,7,-9,-8,1,5,-6,10,-6,10,-6,-10,-5,1,-3,2,4,2,8,-2,-2,10,1,3,1,-3,-8,-7,7,-1,-10,-2,2,8,4,10,-7,5,10,-7,3,10,-2,4,-7,-4,8,1,-10,2,9,1,2,-7,-5,-5,-6,-10,2,-2,7,-5,-1,-4,7,6,-8,5,-4,4,9,-8,4,3,-9,6,8,2,-10,-2,-4,7,5,4,4,-9,-9,8,-4,-1,6,1,-1,-5,1,9,6,-9,-10,10,-3,7,-5,-5,-5,-2,-6,-7,3,-9,9,-2,-6,6,4,-9,5,8,2,9,-2,8,-1,6,-5,10,2,9,-3,-5,-8,-5,-10,-3,8,10,2,-1,-1,10,-9,1,4,-3,-2,-3,1,-5,3,-5,-1,-3,3,9,1,3,2,3,-2,1,5,8,4,-10,3,-9,10,-9,-6,-10,-10,6,5,-5,8,-4,-4,8,6,-4,-3,3,-5,-8,-5,-7,-1,4,-4,4,-7,-2,1,-8,8,-5,-6,-6,-5,3,3,4,5,-10,8,-9,-4,-7,-3,-3,-8,-1,1,7,-2,-7,-2,-8,10,6,-4,3,5,5,5,-8,10,-9,-7,-6,-9,-3,-5,-10,1], dtype = "int64")#candidate|4060|(616,)|const|int64
call_4059 = relay.TupleGetItem(func_3608_call(relay.reshape(const_4060.astype('int64'), [11, 7, 8])), 0)
call_4061 = relay.TupleGetItem(func_3611_call(relay.reshape(const_4060.astype('int64'), [11, 7, 8])), 0)
output = relay.Tuple([bop_4030,call_4034,const_4035,uop_4044,call_4059,const_4060,])
output2 = relay.Tuple([bop_4030,call_4036,const_4035,uop_4044,call_4061,const_4060,])
func_4065 = relay.Function([], output)
mod['func_4065'] = func_4065
mod = relay.transform.InferType()(mod)
mutated_mod['func_4065'] = func_4065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4065_call = mutated_mod.get_global_var('func_4065')
call_4066 = func_4065_call()
output = call_4066
func_4067 = relay.Function([], output)
mutated_mod['func_4067'] = func_4067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2172_call = mod.get_global_var('func_2172')
func_2173_call = mutated_mod.get_global_var('func_2173')
call_4094 = relay.TupleGetItem(func_2172_call(), 0)
call_4095 = relay.TupleGetItem(func_2173_call(), 0)
var_4096 = relay.var("var_4096", dtype = "bool", shape = (8, 14, 12))#candidate|4096|(8, 14, 12)|var|bool
bop_4097 = relay.bitwise_and(call_4094.astype('uint16'), relay.reshape(var_4096.astype('uint16'), relay.shape_of(call_4094))) # shape=(8, 14, 12)
bop_4100 = relay.bitwise_and(call_4095.astype('uint16'), relay.reshape(var_4096.astype('uint16'), relay.shape_of(call_4095))) # shape=(8, 14, 12)
func_3868_call = mod.get_global_var('func_3868')
func_3869_call = mutated_mod.get_global_var('func_3869')
call_4102 = func_3868_call()
call_4103 = func_3868_call()
output = relay.Tuple([bop_4097,call_4102,])
output2 = relay.Tuple([bop_4100,call_4103,])
func_4110 = relay.Function([var_4096,], output)
mod['func_4110'] = func_4110
mod = relay.transform.InferType()(mod)
mutated_mod['func_4110'] = func_4110
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4111 = relay.var("var_4111", dtype = "bool", shape = (8, 14, 12))#candidate|4111|(8, 14, 12)|var|bool
func_4110_call = mutated_mod.get_global_var('func_4110')
call_4112 = func_4110_call(var_4111)
output = call_4112
func_4113 = relay.Function([var_4111], output)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mod.get_global_var('func_1482')
func_1484_call = mutated_mod.get_global_var('func_1484')
call_4151 = relay.TupleGetItem(func_1482_call(), 0)
call_4152 = relay.TupleGetItem(func_1484_call(), 0)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_4165 = relay.TupleGetItem(func_4065_call(), 1)
call_4166 = relay.TupleGetItem(func_4067_call(), 1)
output = relay.Tuple([call_4151,call_4165,])
output2 = relay.Tuple([call_4152,call_4166,])
func_4179 = relay.Function([], output)
mod['func_4179'] = func_4179
mod = relay.transform.InferType()(mod)
mutated_mod['func_4179'] = func_4179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4179_call = mutated_mod.get_global_var('func_4179')
call_4180 = func_4179_call()
output = call_4180
func_4181 = relay.Function([], output)
mutated_mod['func_4181'] = func_4181
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4186 = relay.var("var_4186", dtype = "bool", shape = (2, 5, 11))#candidate|4186|(2, 5, 11)|var|bool
var_4187 = relay.var("var_4187", dtype = "bool", shape = (2, 5, 11))#candidate|4187|(2, 5, 11)|var|bool
bop_4188 = relay.logical_and(var_4186.astype('bool'), relay.reshape(var_4187.astype('bool'), relay.shape_of(var_4186))) # shape=(2, 5, 11)
output = bop_4188
output2 = bop_4188
func_4200 = relay.Function([var_4186,var_4187,], output)
mod['func_4200'] = func_4200
mod = relay.transform.InferType()(mod)
var_4201 = relay.var("var_4201", dtype = "bool", shape = (2, 5, 11))#candidate|4201|(2, 5, 11)|var|bool
var_4202 = relay.var("var_4202", dtype = "bool", shape = (2, 5, 11))#candidate|4202|(2, 5, 11)|var|bool
output = func_4200(var_4201,var_4202,)
func_4203 = relay.Function([var_4201,var_4202,], output)
mutated_mod['func_4203'] = func_4203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3520_call = mod.get_global_var('func_3520')
func_3522_call = mutated_mod.get_global_var('func_3522')
call_4241 = relay.TupleGetItem(func_3520_call(), 0)
call_4242 = relay.TupleGetItem(func_3522_call(), 0)
func_3328_call = mod.get_global_var('func_3328')
func_3333_call = mutated_mod.get_global_var('func_3333')
const_4252 = relay.const([-9.189468,-5.976131,9.429911,2.784528,-5.603991,-2.044825,4.495825,-1.089922,5.447516,-7.126558,-7.108789,-4.579446,-8.224524,1.893116,-0.054589,-9.239804,-2.928097,8.336761,3.574207,3.441480,7.412852,8.865594,-9.991343,0.740731,-0.449661,1.126740,-6.177729,-5.498551,-3.939047,-3.791913,-2.709377,1.724568,3.198218,-6.655661,3.578973,-8.574521,4.698724,2.842897,8.811774,1.355822,-7.821994,-4.626984,-1.526809,-9.145472,-0.549485,7.980894,3.282180,4.955114,-5.624351,9.300705,-8.801585,-6.820582,2.091100,6.453219,-6.239637,9.196269,5.040522,4.919038,-5.792895,-9.692712,-1.777553,4.352926,-5.403887,-9.844003,-2.080469,-6.756244,1.733688,2.599816,1.864737,4.660509,4.857864,-8.408475,-7.955254,7.103030,5.303783,2.137930,1.904181,-6.361845,-8.228309,-0.449185,-5.989049,3.811700,5.916125,6.621631,5.810456,-1.432492,8.023285,-1.766216,-4.284248,-3.539679,3.934620,0.155653,-4.813652,2.643096,-7.753919,5.380013,-1.412637,-1.213850,7.285707,-9.438903,-5.284497,-3.005477,-4.320397,3.332177,-3.179871,-8.804109,-9.240443,-2.353890,4.608582,5.961231,-3.974685,5.232493,5.074337,-9.352432,2.449269,7.214087,-0.767794,3.377030,-9.632708,0.526076], dtype = "float32")#candidate|4252|(120,)|const|float32
var_4253 = relay.var("var_4253", dtype = "uint32", shape = (1584,))#candidate|4253|(1584,)|var|uint32
var_4254 = relay.var("var_4254", dtype = "uint64", shape = (320,))#candidate|4254|(320,)|var|uint64
call_4251 = relay.TupleGetItem(func_3328_call(relay.reshape(const_4252.astype('float32'), [120,]), relay.reshape(var_4253.astype('uint32'), [12, 132]), relay.reshape(var_4254.astype('uint64'), [320,]), ), 2)
call_4255 = relay.TupleGetItem(func_3333_call(relay.reshape(const_4252.astype('float32'), [120,]), relay.reshape(var_4253.astype('uint32'), [12, 132]), relay.reshape(var_4254.astype('uint64'), [320,]), ), 2)
uop_4256 = relay.acosh(call_4241.astype('float64')) # shape=(8, 14, 12)
uop_4258 = relay.acosh(call_4242.astype('float64')) # shape=(8, 14, 12)
func_3977_call = mod.get_global_var('func_3977')
func_3979_call = mutated_mod.get_global_var('func_3979')
var_4291 = relay.var("var_4291", dtype = "float64", shape = (448,))#candidate|4291|(448,)|var|float64
call_4290 = func_3977_call(relay.reshape(var_4291.astype('float64'), [16, 14, 2]))
call_4292 = func_3977_call(relay.reshape(var_4291.astype('float64'), [16, 14, 2]))
func_93_call = mod.get_global_var('func_93')
func_95_call = mutated_mod.get_global_var('func_95')
var_4298 = relay.var("var_4298", dtype = "float32", shape = (36,))#candidate|4298|(36,)|var|float32
call_4297 = func_93_call(relay.reshape(var_4298.astype('float32'), [1, 6, 6]))
call_4299 = func_93_call(relay.reshape(var_4298.astype('float32'), [1, 6, 6]))
output = relay.Tuple([call_4251,const_4252,var_4253,var_4254,uop_4256,call_4290,var_4291,call_4297,var_4298,])
output2 = relay.Tuple([call_4255,const_4252,var_4253,var_4254,uop_4258,call_4292,var_4291,call_4299,var_4298,])
func_4324 = relay.Function([var_4253,var_4254,var_4291,var_4298,], output)
mod['func_4324'] = func_4324
mod = relay.transform.InferType()(mod)
var_4325 = relay.var("var_4325", dtype = "uint32", shape = (1584,))#candidate|4325|(1584,)|var|uint32
var_4326 = relay.var("var_4326", dtype = "uint64", shape = (320,))#candidate|4326|(320,)|var|uint64
var_4327 = relay.var("var_4327", dtype = "float64", shape = (448,))#candidate|4327|(448,)|var|float64
var_4328 = relay.var("var_4328", dtype = "float32", shape = (36,))#candidate|4328|(36,)|var|float32
output = func_4324(var_4325,var_4326,var_4327,var_4328,)
func_4329 = relay.Function([var_4325,var_4326,var_4327,var_4328,], output)
mutated_mod['func_4329'] = func_4329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_4331 = relay.TupleGetItem(func_2510_call(), 0)
call_4332 = relay.TupleGetItem(func_2511_call(), 0)
func_3727_call = mod.get_global_var('func_3727')
func_3729_call = mutated_mod.get_global_var('func_3729')
var_4344 = relay.var("var_4344", dtype = "float32", shape = (2912,))#candidate|4344|(2912,)|var|float32
call_4343 = relay.TupleGetItem(func_3727_call(relay.reshape(var_4344.astype('float32'), [13, 14, 16])), 1)
call_4345 = relay.TupleGetItem(func_3729_call(relay.reshape(var_4344.astype('float32'), [13, 14, 16])), 1)
output = relay.Tuple([call_4331,call_4343,var_4344,])
output2 = relay.Tuple([call_4332,call_4345,var_4344,])
func_4349 = relay.Function([var_4344,], output)
mod['func_4349'] = func_4349
mod = relay.transform.InferType()(mod)
mutated_mod['func_4349'] = func_4349
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4350 = relay.var("var_4350", dtype = "float32", shape = (2912,))#candidate|4350|(2912,)|var|float32
func_4349_call = mutated_mod.get_global_var('func_4349')
call_4351 = func_4349_call(var_4350)
output = call_4351
func_4352 = relay.Function([var_4350], output)
mutated_mod['func_4352'] = func_4352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2793_call = mod.get_global_var('func_2793')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_4366 = func_2793_call()
call_4367 = func_2793_call()
func_3977_call = mod.get_global_var('func_3977')
func_3979_call = mutated_mod.get_global_var('func_3979')
var_4380 = relay.var("var_4380", dtype = "float64", shape = (448,))#candidate|4380|(448,)|var|float64
call_4379 = func_3977_call(relay.reshape(var_4380.astype('float64'), [16, 14, 2]))
call_4381 = func_3977_call(relay.reshape(var_4380.astype('float64'), [16, 14, 2]))
func_3966_call = mod.get_global_var('func_3966')
func_3967_call = mutated_mod.get_global_var('func_3967')
call_4382 = relay.TupleGetItem(func_3966_call(), 1)
call_4383 = relay.TupleGetItem(func_3967_call(), 1)
func_353_call = mod.get_global_var('func_353')
func_355_call = mutated_mod.get_global_var('func_355')
var_4398 = relay.var("var_4398", dtype = "uint32", shape = (18, 18))#candidate|4398|(18, 18)|var|uint32
call_4397 = relay.TupleGetItem(func_353_call(relay.reshape(var_4398.astype('uint32'), [9, 3, 12])), 1)
call_4399 = relay.TupleGetItem(func_355_call(relay.reshape(var_4398.astype('uint32'), [9, 3, 12])), 1)
bop_4401 = relay.greater_equal(call_4379.astype('bool'), relay.reshape(var_4380.astype('bool'), relay.shape_of(call_4379))) # shape=(16, 14, 2)
bop_4404 = relay.greater_equal(call_4381.astype('bool'), relay.reshape(var_4380.astype('bool'), relay.shape_of(call_4381))) # shape=(16, 14, 2)
uop_4408 = relay.exp(call_4397.astype('float64')) # shape=(9, 3, 12)
uop_4410 = relay.exp(call_4399.astype('float64')) # shape=(9, 3, 12)
output = relay.Tuple([call_4366,call_4382,var_4398,bop_4401,uop_4408,])
output2 = relay.Tuple([call_4367,call_4383,var_4398,bop_4404,uop_4410,])
func_4411 = relay.Function([var_4380,var_4398,], output)
mod['func_4411'] = func_4411
mod = relay.transform.InferType()(mod)
mutated_mod['func_4411'] = func_4411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4411_call = mutated_mod.get_global_var('func_4411')
var_4413 = relay.var("var_4413", dtype = "float64", shape = (448,))#candidate|4413|(448,)|var|float64
var_4414 = relay.var("var_4414", dtype = "uint32", shape = (18, 18))#candidate|4414|(18, 18)|var|uint32
call_4412 = func_4411_call(var_4413,var_4414,)
output = call_4412
func_4415 = relay.Function([var_4413,var_4414,], output)
mutated_mod['func_4415'] = func_4415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3474_call = mod.get_global_var('func_3474')
func_3476_call = mutated_mod.get_global_var('func_3476')
call_4485 = func_3474_call()
call_4486 = func_3474_call()
output = relay.Tuple([call_4485,])
output2 = relay.Tuple([call_4486,])
func_4495 = relay.Function([], output)
mod['func_4495'] = func_4495
mod = relay.transform.InferType()(mod)
output = func_4495()
func_4496 = relay.Function([], output)
mutated_mod['func_4496'] = func_4496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_4497 = relay.TupleGetItem(func_2510_call(), 0)
call_4498 = relay.TupleGetItem(func_2511_call(), 0)
var_4501 = relay.var("var_4501", dtype = "float32", shape = (5, 4, 10))#candidate|4501|(5, 4, 10)|var|float32
bop_4502 = relay.minimum(call_4497.astype('uint64'), relay.reshape(var_4501.astype('uint64'), relay.shape_of(call_4497))) # shape=(5, 4, 10)
bop_4505 = relay.minimum(call_4498.astype('uint64'), relay.reshape(var_4501.astype('uint64'), relay.shape_of(call_4498))) # shape=(5, 4, 10)
output = relay.Tuple([bop_4502,])
output2 = relay.Tuple([bop_4505,])
func_4510 = relay.Function([var_4501,], output)
mod['func_4510'] = func_4510
mod = relay.transform.InferType()(mod)
mutated_mod['func_4510'] = func_4510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4511 = relay.var("var_4511", dtype = "float32", shape = (5, 4, 10))#candidate|4511|(5, 4, 10)|var|float32
func_4510_call = mutated_mod.get_global_var('func_4510')
call_4512 = func_4510_call(var_4511)
output = call_4512
func_4513 = relay.Function([var_4511], output)
mutated_mod['func_4513'] = func_4513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2750_call = mod.get_global_var('func_2750')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_4579 = relay.TupleGetItem(func_2750_call(), 2)
call_4580 = relay.TupleGetItem(func_2751_call(), 2)
func_3416_call = mod.get_global_var('func_3416')
func_3419_call = mutated_mod.get_global_var('func_3419')
var_4590 = relay.var("var_4590", dtype = "float32", shape = (120,))#candidate|4590|(120,)|var|float32
var_4591 = relay.var("var_4591", dtype = "uint64", shape = (320,))#candidate|4591|(320,)|var|uint64
call_4589 = relay.TupleGetItem(func_3416_call(relay.reshape(var_4590.astype('float32'), [60, 2]), relay.reshape(var_4591.astype('uint64'), [320,]), ), 1)
call_4592 = relay.TupleGetItem(func_3419_call(relay.reshape(var_4590.astype('float32'), [60, 2]), relay.reshape(var_4591.astype('uint64'), [320,]), ), 1)
var_4602 = relay.var("var_4602", dtype = "uint32", shape = (396, 4))#candidate|4602|(396, 4)|var|uint32
bop_4603 = relay.equal(call_4589.astype('bool'), relay.reshape(var_4602.astype('bool'), relay.shape_of(call_4589))) # shape=(396, 4)
bop_4606 = relay.equal(call_4592.astype('bool'), relay.reshape(var_4602.astype('bool'), relay.shape_of(call_4592))) # shape=(396, 4)
func_2774_call = mod.get_global_var('func_2774')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_4622 = func_2774_call()
call_4623 = func_2774_call()
func_1370_call = mod.get_global_var('func_1370')
func_1374_call = mutated_mod.get_global_var('func_1374')
const_4629 = relay.const([-1.854029,-3.603212,-2.151064,-7.912755,1.377792,-0.429587,-5.472902,-6.077656,9.853239,-7.659283,4.453359,5.519860,9.892872,-4.066701,5.653970,5.459105,8.332624,-3.734436,9.257355,6.215451,3.122549,-2.702051,-7.338875,0.563975,-9.419542,1.738940,-3.132120,-0.953433,1.881521,9.381163,1.699952,5.790325,-2.322094,-1.115834,-5.430467,-0.429376], dtype = "float32")#candidate|4629|(36,)|const|float32
call_4628 = relay.TupleGetItem(func_1370_call(relay.reshape(var_4590.astype('float32'), [60, 2]), relay.reshape(call_4589.astype('uint32'), [1584,]), relay.reshape(const_4629.astype('float32'), [9, 4]), ), 3)
call_4630 = relay.TupleGetItem(func_1374_call(relay.reshape(var_4590.astype('float32'), [60, 2]), relay.reshape(call_4589.astype('uint32'), [1584,]), relay.reshape(const_4629.astype('float32'), [9, 4]), ), 3)
output = relay.Tuple([call_4579,var_4590,var_4591,bop_4603,call_4622,call_4628,const_4629,])
output2 = relay.Tuple([call_4580,var_4590,var_4591,bop_4606,call_4623,call_4630,const_4629,])
func_4648 = relay.Function([var_4590,var_4591,var_4602,], output)
mod['func_4648'] = func_4648
mod = relay.transform.InferType()(mod)
mutated_mod['func_4648'] = func_4648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4648_call = mutated_mod.get_global_var('func_4648')
var_4650 = relay.var("var_4650", dtype = "float32", shape = (120,))#candidate|4650|(120,)|var|float32
var_4651 = relay.var("var_4651", dtype = "uint64", shape = (320,))#candidate|4651|(320,)|var|uint64
var_4652 = relay.var("var_4652", dtype = "uint32", shape = (396, 4))#candidate|4652|(396, 4)|var|uint32
call_4649 = func_4648_call(var_4650,var_4651,var_4652,)
output = call_4649
func_4653 = relay.Function([var_4650,var_4651,var_4652,], output)
mutated_mod['func_4653'] = func_4653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4179_call = mod.get_global_var('func_4179')
func_4181_call = mutated_mod.get_global_var('func_4181')
call_4661 = relay.TupleGetItem(func_4179_call(), 0)
call_4662 = relay.TupleGetItem(func_4181_call(), 0)
func_798_call = mod.get_global_var('func_798')
func_800_call = mutated_mod.get_global_var('func_800')
const_4677 = relay.const(-5.980263, dtype = "float32")#candidate|4677|()|const|float32
call_4676 = relay.TupleGetItem(func_798_call(relay.reshape(const_4677.astype('float32'), [])), 0)
call_4678 = relay.TupleGetItem(func_800_call(relay.reshape(const_4677.astype('float32'), [])), 0)
func_3255_call = mod.get_global_var('func_3255')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_4682 = func_3255_call()
call_4683 = func_3255_call()
func_4324_call = mod.get_global_var('func_4324')
func_4329_call = mutated_mod.get_global_var('func_4329')
var_4691 = relay.var("var_4691", dtype = "uint32", shape = (792, 2))#candidate|4691|(792, 2)|var|uint32
const_4692 = relay.const([[4,-10,-8,10,6,6,-4,9,4,-7,-1,6,5,-9,-2,6,10,8,10,9,8,2,-8,5,4,-2,2,-2,-2,1,-3,-1,-3,-8,7,-1,-7,-6,-7,-4,4,7,-4,2,2,-1,10,-6,8,-8,-3,9,-5,4,5,-2,-6,6,-7,-7,2,2,9,-5,-5,-4,-5,10,-8,-9,-2,6,9,9,10,3,-5,6,-4,-1],[-5,9,7,-7,2,2,8,-4,-9,2,-9,3,-1,-8,-7,6,-3,1,2,7,-7,-10,4,-3,6,-2,10,1,-2,6,7,3,-5,-9,6,1,-2,10,2,9,-7,-5,6,-6,-2,-2,-4,-8,-3,4,-1,-3,-5,-1,6,-6,-2,-10,6,1,-10,-8,7,-3,-3,10,-3,8,-5,8,-10,-4,7,3,4,3,6,-8,9,5],[-10,5,9,-1,4,-6,6,-7,4,8,5,-1,3,5,-3,-4,-7,-6,4,-1,-9,-1,6,9,9,9,-9,4,-2,-3,-1,-9,8,5,3,8,-2,8,-8,-8,-2,-10,7,-4,3,7,-4,4,-2,-4,6,8,3,-6,10,-8,10,5,2,-10,7,-10,-2,5,-5,8,10,-9,-1,-6,10,-5,-1,-10,2,-1,7,-3,8,-4],[6,-6,7,1,-2,-9,10,3,-8,6,4,10,1,-10,-1,3,6,4,-7,-1,2,9,6,3,6,-6,9,10,9,-10,-6,-8,4,-6,-8,10,-7,-2,-1,-6,8,-7,-8,-8,9,-9,-5,-7,-10,-10,10,-8,10,-1,-7,-10,-1,-4,6,-7,-2,-9,-3,7,-9,-2,8,-7,2,-9,-5,5,-6,4,-1,-6,-7,-1,1,-6]], dtype = "uint64")#candidate|4692|(4, 80)|const|uint64
const_4693 = relay.const([8.827869,-0.640152,2.022907,-7.310978,8.381458,-7.615891,-1.848192,-1.122912,2.168233,-2.142885,9.039740,-8.262791,-2.576683,-0.597874,7.116401,6.344432,-5.694376,2.434519,5.022437,8.903982,-6.570151,6.655489,1.390675,-4.364076,-3.515554,5.419083,0.071028,4.480881,-5.912657,8.893840,1.151393,5.015690,-4.418956,-9.386332,-0.410764,0.669871,7.193750,8.734632,-6.930412,-3.660671,7.549661,-7.279841,8.986649,-3.141859,-2.252292,6.078572,1.205498,9.159690,-9.154977,6.253884,-0.851527,6.796574,5.349530,-7.480018,3.189353,2.940948,-5.253189,7.785903,1.556755,-4.970605,1.912306,-3.686107,-4.655792,-4.560753,4.584231,9.125014,-2.085193,8.068168,2.342734,8.457071,-1.671780,9.001549,5.991044,-6.867190,0.584650,-3.145243,4.164204,1.876828,-2.686482,-4.511171,1.224434,9.316485,-4.905528,6.225025,-2.882370,-3.892879,4.415302,-9.662978,-1.143676,-9.574025,6.362222,-0.122659,1.514666,-5.232576,-3.816087,4.503541,-7.097090,4.604918,8.555687,-5.787643,-6.356852,0.882276,6.147484,-8.578842,-3.365946,1.761549,7.217935,-2.407732,9.727458,-2.008172,6.576318,1.442540,5.828814,3.413942,2.642919,-7.447211,-4.550222,-8.584260,5.624645,-5.807327,9.005016,5.514781,0.819296,2.441911,-6.640884,-6.361423,3.832779,9.009938,7.607505,8.567588,4.836067,-7.374487,2.471258,8.518108,9.931423,3.416651,5.655043,7.852038,-0.185753,3.801924,-3.929414,4.587589,6.490897,-4.421299,1.084037,0.774876,-9.245954,-9.900163,-3.455259,-6.813682,7.109030,-4.436186,9.683762,-1.793858,-4.482283,-4.125039,9.900245,-7.950058,6.302774,3.784179,9.319562,2.122128,-7.982861,7.330427,5.327582,-9.964014,4.330544,7.979741,-7.849684,9.199411,1.433031,-1.576956,7.707016,0.725176,8.129985,7.647858,5.277825,-3.263109,-7.658680,6.328599,-4.542034,2.157517,-0.708791,-7.444858,-5.713771,-8.041148,4.161569,-6.149891,9.986406,7.046101,1.929395,0.774594,6.484212,-5.262108,-8.416741,1.376520,-5.493060,-1.073137,5.905561,3.954014,-7.590872,3.673572,-0.591724,-8.813805,2.120102,9.475626,-7.409722,-6.356503,-9.654303,-9.974249,-1.693675,2.315623,-9.035298,4.509397,-5.063531,4.359860,-3.530479,2.259711,-6.569069,8.463848,6.088142,-7.163705,2.641392,-8.181312,-3.346379,-0.141518,-5.933735,5.995852,-0.936387,8.645992,8.538969,2.017156,1.944481,9.365723,2.486725,-7.878652,6.511373,-5.960958,6.363982,-5.055637,9.129049,-9.860140,3.056931,-4.176277,-3.665213,-3.707690,-7.882827,-6.347078,-6.029797,-7.634148,-7.741999,0.579481,7.969732,-8.923270,-6.910725,-1.493572,-9.663320,7.356915,-2.157354,9.550299,7.492245,2.434924,5.729564,-1.945047,7.982650,5.617485,1.708142,6.559576,0.770569,0.667085,-7.211757,0.429956,-9.440502,-5.431705,9.339090,5.913623,-5.756647,-4.275028,-3.034100,6.772985,5.999233,0.231393,1.354776,-3.096588,0.202915,-8.917998,7.915088,-4.955513,9.022367,9.276414,-0.168092,6.972542,5.924791,-7.094665,-2.526470,6.674929,3.868119,-2.279537,6.054075,8.486398,-7.285579,-0.349177,1.915649,2.591877,-6.804051,0.621265,-7.870387,5.366732,6.824276,3.435244,7.107920,3.856994,-9.707591,-2.156531,-4.679388,-4.978216,8.048220,4.681489,2.604087,6.066817,3.569995,-0.245313,-5.330661,8.387123,9.781102,7.973834,1.533530,8.774337,7.320944,9.748088,6.700519,-2.884310,-1.665406,-0.485446,1.970272,0.960584,-2.586327,-8.922333,2.246081,-6.408298,-0.010014,-1.167981,3.238838,0.462297,1.161316,-0.443051,-9.241166,7.630628,-2.207375,-5.994054,-5.822299,-8.936299,4.659377,6.311401,-8.523252,-2.493175,9.614803,-8.896441,-1.488388,3.876752,-4.976463,2.973475,8.121754,-3.606900,-5.672688,4.071100,-4.250378,5.678141,-0.022951,9.038932,9.100734,3.657104,-9.954351,5.573251,-4.442049,-5.797031,-9.085117,9.156265,-9.546142,-4.326566,8.788822,6.545369,3.307472,6.385976,2.644986,2.493807,-6.374177,-9.138447,-1.958835,-8.973990,-5.350215,-2.361714,-4.726107,-4.314272,2.224172,3.901680,-1.922835,-5.854561,7.868163,2.861693,-7.910613,7.184592,-5.455143,5.670718,8.451531,0.844607,-1.753489,3.135944,9.195755,-3.725225,-0.676835,1.667776,-3.618745,-2.055975,-0.869479,7.665063,-2.919702,9.625825,-5.672994,-1.887436,-2.819932,8.320491,4.883159,8.449213,7.853631,3.197725,3.496491,-8.025063,-0.604880,-7.080862,2.278194,-0.034992,-5.385562,-6.196689,-0.034993,0.919892,-8.459313,-5.569200,6.158216,-3.867045,0.994731,-1.969006,2.557334,-4.579286,4.604384,-9.096021,-9.481788,6.239266], dtype = "float64")#candidate|4693|(448,)|const|float64
var_4694 = relay.var("var_4694", dtype = "float32", shape = (36,))#candidate|4694|(36,)|var|float32
call_4690 = relay.TupleGetItem(func_4324_call(relay.reshape(var_4691.astype('uint32'), [1584,]), relay.reshape(const_4692.astype('uint64'), [320,]), relay.reshape(const_4693.astype('float64'), [448,]), relay.reshape(var_4694.astype('float32'), [36,]), ), 3)
call_4695 = relay.TupleGetItem(func_4329_call(relay.reshape(var_4691.astype('uint32'), [1584,]), relay.reshape(const_4692.astype('uint64'), [320,]), relay.reshape(const_4693.astype('float64'), [448,]), relay.reshape(var_4694.astype('float32'), [36,]), ), 3)
output = relay.Tuple([call_4661,call_4676,const_4677,call_4682,call_4690,var_4691,const_4692,const_4693,var_4694,])
output2 = relay.Tuple([call_4662,call_4678,const_4677,call_4683,call_4695,var_4691,const_4692,const_4693,var_4694,])
func_4700 = relay.Function([var_4691,var_4694,], output)
mod['func_4700'] = func_4700
mod = relay.transform.InferType()(mod)
mutated_mod['func_4700'] = func_4700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4700_call = mutated_mod.get_global_var('func_4700')
var_4702 = relay.var("var_4702", dtype = "uint32", shape = (792, 2))#candidate|4702|(792, 2)|var|uint32
var_4703 = relay.var("var_4703", dtype = "float32", shape = (36,))#candidate|4703|(36,)|var|float32
call_4701 = func_4700_call(var_4702,var_4703,)
output = call_4701
func_4704 = relay.Function([var_4702,var_4703,], output)
mutated_mod['func_4704'] = func_4704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_4717 = relay.TupleGetItem(func_2510_call(), 0)
call_4718 = relay.TupleGetItem(func_2511_call(), 0)
func_1156_call = mod.get_global_var('func_1156')
func_1159_call = mutated_mod.get_global_var('func_1159')
const_4738 = relay.const([False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,False,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,True,True,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True], dtype = "bool")#candidate|4738|(1232,)|const|bool
call_4737 = relay.TupleGetItem(func_1156_call(relay.reshape(const_4738.astype('bool'), [14, 11, 8]), relay.reshape(const_4738.astype('bool'), [14, 11, 8]), ), 0)
call_4739 = relay.TupleGetItem(func_1159_call(relay.reshape(const_4738.astype('bool'), [14, 11, 8]), relay.reshape(const_4738.astype('bool'), [14, 11, 8]), ), 0)
func_3225_call = mod.get_global_var('func_3225')
func_3227_call = mutated_mod.get_global_var('func_3227')
var_4742 = relay.var("var_4742", dtype = "float64", shape = (1344,))#candidate|4742|(1344,)|var|float64
call_4741 = relay.TupleGetItem(func_3225_call(relay.reshape(var_4742.astype('float64'), [8, 14, 12])), 1)
call_4743 = relay.TupleGetItem(func_3227_call(relay.reshape(var_4742.astype('float64'), [8, 14, 12])), 1)
func_2345_call = mod.get_global_var('func_2345')
func_2348_call = mutated_mod.get_global_var('func_2348')
const_4764 = relay.const([-7.783119,1.777119,-9.757704,9.717482,1.016802,0.475895,-6.712949,1.474613,3.561454,-7.428160,-3.400771,-1.805186,-8.361080,-2.348515,3.235036,6.962287,-8.034200,-9.922657,6.578543,6.239750,6.135112,-6.030875,-1.495938,7.161401,0.003237,8.739355,-2.703260,2.582149,1.040147,-8.799288,9.838186,-8.624624,-5.580551,-6.293921,0.599680,7.213062,4.197264,-5.105788,0.590702,5.536730,-1.621402,3.531682,-3.046552,3.502571,-0.865957,7.693002,9.481105,9.306922,-8.158415,4.540273,-3.461431,-2.134093,2.643862,9.332483,-6.060366,1.412396,-1.258138,3.676682,1.762126,-3.406956,6.816432,9.426897,-8.013798,-7.886257,-0.054963,-4.565315,-8.288955,-6.634317,4.928954,4.431083,-1.106958,-5.084127,2.036039,-5.381668,9.028870,-3.725224,-2.390138,2.602061,-4.371311,4.661595,-1.127734,3.864039,-3.956052,-1.680490,-5.701528,-6.520774,-9.277059,5.511777,-4.926315,-4.245296,-8.237797,-1.682031,-0.792150,1.521500,-4.790075,1.190245,-9.649739,0.316535,2.181502,5.313536,4.228005,-5.798782,-8.304885,3.882927,5.236439,-9.061168,-2.273350,-4.997124,4.281371,-6.049655,-0.760626,-4.027365,-8.927469,-6.143739,7.828777,1.884035,3.107753], dtype = "float64")#candidate|4764|(117,)|const|float64
var_4765 = relay.var("var_4765", dtype = "float64", shape = (351,))#candidate|4765|(351,)|var|float64
call_4763 = relay.TupleGetItem(func_2345_call(relay.reshape(const_4764.astype('float64'), [1, 13, 9]), relay.reshape(var_4765.astype('float64'), [3, 13, 9]), ), 0)
call_4766 = relay.TupleGetItem(func_2348_call(relay.reshape(const_4764.astype('float64'), [1, 13, 9]), relay.reshape(var_4765.astype('float64'), [3, 13, 9]), ), 0)
output = relay.Tuple([call_4717,call_4737,const_4738,call_4741,var_4742,call_4763,const_4764,var_4765,])
output2 = relay.Tuple([call_4718,call_4739,const_4738,call_4743,var_4742,call_4766,const_4764,var_4765,])
func_4767 = relay.Function([var_4742,var_4765,], output)
mod['func_4767'] = func_4767
mod = relay.transform.InferType()(mod)
mutated_mod['func_4767'] = func_4767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4767_call = mutated_mod.get_global_var('func_4767')
var_4769 = relay.var("var_4769", dtype = "float64", shape = (1344,))#candidate|4769|(1344,)|var|float64
var_4770 = relay.var("var_4770", dtype = "float64", shape = (351,))#candidate|4770|(351,)|var|float64
call_4768 = func_4767_call(var_4769,var_4770,)
output = call_4768
func_4771 = relay.Function([var_4769,var_4770,], output)
mutated_mod['func_4771'] = func_4771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3868_call = mod.get_global_var('func_3868')
func_3869_call = mutated_mod.get_global_var('func_3869')
call_4815 = func_3868_call()
call_4816 = func_3868_call()
func_3328_call = mod.get_global_var('func_3328')
func_3333_call = mutated_mod.get_global_var('func_3333')
var_4822 = relay.var("var_4822", dtype = "float32", shape = (120,))#candidate|4822|(120,)|var|float32
var_4823 = relay.var("var_4823", dtype = "uint32", shape = (1584,))#candidate|4823|(1584,)|var|uint32
const_4824 = relay.const([-7,2,3,-8,-10,-7,4,6,6,10,-8,9,-5,-5,4,-10,9,4,7,-7,9,-9,-2,2,6,-8,-10,-2,9,5,-7,6,-6,-8,-2,-9,10,5,2,-10,1,3,-6,-6,2,10,-4,-7,-9,-3,-3,2,-10,-5,-6,1,4,7,-10,-7,-2,-4,-5,9,10,-5,-4,-4,5,9,6,-9,3,-2,-8,-5,-6,-1,2,7,1,2,-8,-2,-10,6,-8,-8,-10,-3,-7,-3,7,-8,-3,10,-4,1,-3,-6,-1,-10,-7,1,-7,10,-5,1,-6,-3,-1,-4,9,10,6,4,-10,10,3,7,-8,-5,9,-4,-4,-3,-2,-1,-2,-5,-9,-8,5,6,-9,-7,-9,9,8,-2,-2,7,-4,7,9,4,10,5,-10,-3,-6,-8,-3,-5,-2,-1,-2,10,-7,1,8,-2,-5,-6,-1,-6,9,4,-10,-3,5,-5,-2,-4,2,5,-9,2,7,1,-7,5,-10,8,-9,10,-4,-3,-2,7,10,-7,10,-3,7,5,10,2,10,-9,2,2,-4,4,10,1,-3,9,8,-10,-7,-9,-4,8,-10,2,-4,-7,1,-6,5,3,8,3,5,10,-8,-10,9,-8,-2,-10,7,9,-1,9,4,5,-3,9,4,1,-8,8,-8,6,-7,8,-8,-1,2,6,-9,2,-3,-1,10,-1,-2,6,5,10,10,5,-5,-8,4,6,7,9,-9,-7,2,-9,-8,6,9,-5,-6,-9,-5,-9,-1,4,5,7,4,2,1,4,-6,-3,6,6,-6,-2,-9,2,8,-7,-1,-6,8,5,-1,1,9,2,1,5,2,10,10,3,-10,-8,7,-8,-2,-4], dtype = "uint64")#candidate|4824|(320,)|const|uint64
call_4821 = relay.TupleGetItem(func_3328_call(relay.reshape(var_4822.astype('float32'), [120,]), relay.reshape(var_4823.astype('uint32'), [12, 132]), relay.reshape(const_4824.astype('uint64'), [320,]), ), 2)
call_4825 = relay.TupleGetItem(func_3333_call(relay.reshape(var_4822.astype('float32'), [120,]), relay.reshape(var_4823.astype('uint32'), [12, 132]), relay.reshape(const_4824.astype('uint64'), [320,]), ), 2)
output = relay.Tuple([call_4815,call_4821,var_4822,var_4823,const_4824,])
output2 = relay.Tuple([call_4816,call_4825,var_4822,var_4823,const_4824,])
func_4827 = relay.Function([var_4822,var_4823,], output)
mod['func_4827'] = func_4827
mod = relay.transform.InferType()(mod)
var_4828 = relay.var("var_4828", dtype = "float32", shape = (120,))#candidate|4828|(120,)|var|float32
var_4829 = relay.var("var_4829", dtype = "uint32", shape = (1584,))#candidate|4829|(1584,)|var|uint32
output = func_4827(var_4828,var_4829,)
func_4830 = relay.Function([var_4828,var_4829,], output)
mutated_mod['func_4830'] = func_4830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4890 = relay.var("var_4890", dtype = "float64", shape = (10, 10, 8))#candidate|4890|(10, 10, 8)|var|float64
uop_4891 = relay.rsqrt(var_4890.astype('float64')) # shape=(10, 10, 8)
bop_4900 = relay.divide(var_4890.astype('float32'), relay.reshape(uop_4891.astype('float32'), relay.shape_of(var_4890))) # shape=(10, 10, 8)
uop_4907 = relay.log(bop_4900.astype('float64')) # shape=(10, 10, 8)
var_4912 = relay.var("var_4912", dtype = "float64", shape = (10, 10, 8))#candidate|4912|(10, 10, 8)|var|float64
bop_4913 = relay.bitwise_xor(uop_4907.astype('uint64'), relay.reshape(var_4912.astype('uint64'), relay.shape_of(uop_4907))) # shape=(10, 10, 8)
uop_4922 = relay.sinh(var_4912.astype('float64')) # shape=(10, 10, 8)
func_3591_call = mod.get_global_var('func_3591')
func_3592_call = mutated_mod.get_global_var('func_3592')
call_4928 = relay.TupleGetItem(func_3591_call(), 0)
call_4929 = relay.TupleGetItem(func_3592_call(), 0)
func_2172_call = mod.get_global_var('func_2172')
func_2173_call = mutated_mod.get_global_var('func_2173')
call_4950 = relay.TupleGetItem(func_2172_call(), 0)
call_4951 = relay.TupleGetItem(func_2173_call(), 0)
output = relay.Tuple([bop_4913,uop_4922,call_4928,call_4950,])
output2 = relay.Tuple([bop_4913,uop_4922,call_4929,call_4951,])
func_4956 = relay.Function([var_4890,var_4912,], output)
mod['func_4956'] = func_4956
mod = relay.transform.InferType()(mod)
var_4957 = relay.var("var_4957", dtype = "float64", shape = (10, 10, 8))#candidate|4957|(10, 10, 8)|var|float64
var_4958 = relay.var("var_4958", dtype = "float64", shape = (10, 10, 8))#candidate|4958|(10, 10, 8)|var|float64
output = func_4956(var_4957,var_4958,)
func_4959 = relay.Function([var_4957,var_4958,], output)
mutated_mod['func_4959'] = func_4959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2434_call = mod.get_global_var('func_2434')
func_2435_call = mutated_mod.get_global_var('func_2435')
call_4972 = relay.TupleGetItem(func_2434_call(), 0)
call_4973 = relay.TupleGetItem(func_2435_call(), 0)
uop_4986 = relay.tan(call_4972.astype('float64')) # shape=(8, 14, 12)
uop_4988 = relay.tan(call_4973.astype('float64')) # shape=(8, 14, 12)
uop_4994 = relay.sqrt(uop_4986.astype('float64')) # shape=(8, 14, 12)
uop_4996 = relay.sqrt(uop_4988.astype('float64')) # shape=(8, 14, 12)
func_1284_call = mod.get_global_var('func_1284')
func_1288_call = mutated_mod.get_global_var('func_1288')
var_5013 = relay.var("var_5013", dtype = "float32", shape = (3, 40))#candidate|5013|(3, 40)|var|float32
var_5014 = relay.var("var_5014", dtype = "uint32", shape = (1584,))#candidate|5014|(1584,)|var|uint32
call_5012 = relay.TupleGetItem(func_1284_call(relay.reshape(var_5013.astype('float32'), [6, 20]), relay.reshape(var_5014.astype('uint32'), [396, 4]), relay.reshape(var_5014.astype('uint32'), [396, 4]), ), 1)
call_5015 = relay.TupleGetItem(func_1288_call(relay.reshape(var_5013.astype('float32'), [6, 20]), relay.reshape(var_5014.astype('uint32'), [396, 4]), relay.reshape(var_5014.astype('uint32'), [396, 4]), ), 1)
output = relay.Tuple([uop_4994,call_5012,var_5013,var_5014,])
output2 = relay.Tuple([uop_4996,call_5015,var_5013,var_5014,])
func_5018 = relay.Function([var_5013,var_5014,], output)
mod['func_5018'] = func_5018
mod = relay.transform.InferType()(mod)
var_5019 = relay.var("var_5019", dtype = "float32", shape = (3, 40))#candidate|5019|(3, 40)|var|float32
var_5020 = relay.var("var_5020", dtype = "uint32", shape = (1584,))#candidate|5020|(1584,)|var|uint32
output = func_5018(var_5019,var_5020,)
func_5021 = relay.Function([var_5019,var_5020,], output)
mutated_mod['func_5021'] = func_5021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_5032 = func_1398_call()
call_5033 = func_1398_call()
func_4411_call = mod.get_global_var('func_4411')
func_4415_call = mutated_mod.get_global_var('func_4415')
const_5037 = relay.const([0.659313,7.942026,-7.956897,-5.720252,6.807758,-6.768932,0.464440,3.454842,0.011227,-6.834958,2.876597,-0.118548,-6.287306,-3.651613,6.095986,-5.254806,0.864334,-5.794992,6.642508,3.037798,7.986363,-3.590133,2.932685,-4.589888,-0.320059,2.536890,4.463737,1.045040,8.232403,9.213259,4.191685,1.080478,-5.221140,-0.023957,-7.249759,-7.162331,8.229791,-0.212020,-6.548522,-9.288362,7.299930,3.064005,0.347329,-0.236318,-4.690472,8.586785,5.055060,-1.381143,-7.746006,3.623542,1.669651,-8.866912,5.243289,8.908127,7.414225,-1.478134,1.530366,-5.611780,-9.902147,4.690187,-2.330328,-7.524110,8.107309,9.818038,8.205579,-9.780616,9.581786,-4.063225,9.967890,-6.320041,9.763665,-5.727244,-0.128368,9.441876,9.164971,1.220630,1.817686,-4.800287,7.615362,-2.148596,-2.065666,0.638042,6.115987,-8.559717,8.598472,1.013234,-1.543821,1.995794,-6.425602,8.290284,0.669619,-0.557635,9.623603,5.964052,-8.151349,4.949091,-8.636152,-8.880634,-3.370522,-5.799460,-0.306006,-1.554392,3.909814,1.076915,-3.380812,-6.171999,-0.422457,-6.215120,5.979660,-5.704260,8.621076,-9.853449,-3.820152,6.542157,-3.405539,-5.670713,-8.274216,6.723325,-6.333622,1.531641,4.599718,-0.109539,-5.056150,5.756931,-0.304694,-9.853242,-1.551973,0.591186,2.581149,5.817265,-7.880943,-9.142075,3.639350,5.649647,6.045882,-5.143160,-9.062086,-8.470544,-0.680946,-8.871579,9.940240,-9.264263,9.723941,-4.764871,8.499859,-3.578142,6.821229,-5.967833,-3.684166,-7.328548,-5.266715,0.940913,2.694927,-1.937023,0.483353,-6.416478,1.629472,-6.629282,-9.830461,7.511285,1.954594,6.492986,1.485036,9.708390,9.587616,5.039440,-1.854029,-9.081602,-9.178195,8.463798,1.995806,-7.657989,3.857685,-3.962288,4.795003,4.660050,3.580590,7.505463,-0.855233,6.082342,-2.153836,4.327492,1.791658,-0.904145,-3.892803,4.754893,6.414330,-7.145583,1.818853,-1.954909,5.550178,0.856232,-6.991355,3.428438,1.691369,6.341028,9.507380,-3.620747,-2.242611,-3.116228,3.184374,1.826621,0.339507,0.980358,-8.171803,2.714961,6.526522,-2.620093,7.550369,-4.162892,-2.928003,-4.541240,-7.370652,-0.157155,0.106153,-4.876661,4.763191,6.730124,7.651962,0.453275,-9.766098,6.896352,3.705845,6.952566,1.779022,4.274742,7.989837,7.388075,-8.135642,5.932881,-7.072317,-2.897591,4.177791,-6.996015,-0.577825,-3.035046,-1.600245,-5.593765,3.068083,-6.446816,6.965398,3.519192,5.113461,2.691694,-2.144959,8.176741,-7.087043,-9.125186,9.286672,-7.179817,-2.403937,-3.308376,8.355989,-1.705873,8.240982,0.021908,-5.244606,2.152134,-2.295248,-3.528095,7.412410,5.911060,3.151972,9.458053,8.153627,6.741290,-9.784674,-6.081626,-1.091142,0.053749,-7.877657,7.963040,1.449544,-3.225561,2.540662,-8.456988,4.521180,-9.474744,-3.961286,4.401318,4.931157,4.755156,0.615288,8.183416,8.098222,6.522105,-4.436947,-2.218403,5.483304,7.112456,1.489241,-6.701113,7.337245,-3.517878,-6.031859,5.388265,-7.385124,-5.055083,8.137871,6.605453,-3.420971,-1.775602,9.358746,-5.923517,2.033508,9.928808,0.743866,9.217263,-5.234537,-5.287029,-7.237071,4.577479,1.194165,-5.805844,4.887136,8.010595,-8.349679,-9.728873,-5.760363,-9.797905,-1.492504,1.703712,9.517607,6.108151,-4.012487,0.132172,4.098437,7.145981,-2.827899,1.121507,5.104784,9.659097,-6.128983,-2.786299,-7.942754,6.480814,-9.618589,-0.064163,3.312650,-9.615602,-1.189074,-2.894054,-1.180683,-5.207786,1.649330,-5.095940,-4.126709,-4.267705,-8.115916,0.016177,-2.915843,2.103647,1.945891,-2.350851,8.907918,-4.571691,-4.645083,-5.359267,-7.882289,0.118095,-5.974466,9.254564,2.218201,-7.061183,-9.559352,-9.874060,-9.540268,6.168337,-8.015068,-2.991104,-4.364009,4.028212,-4.935580,2.835848,-0.387559,-8.979436,1.565718,5.183260,-6.441388,-5.568394,6.167111,8.355535,-1.454623,-2.494635,-1.274338,3.360445,4.466973,-7.872681,-9.711251,5.013409,-2.681045,4.486168,1.768453,3.758675,-5.777576,-2.314089,-1.675853,9.619144,-5.500811,0.612690,5.405201,-5.866397,7.450816,-0.465281,-1.967142,-3.801912,0.787111,-0.713744,-3.437204,-6.317480,9.120286,9.441557,-3.002996,0.144177,-9.474620,-7.784412,3.938730,-2.404564,0.446082,-8.762772,-6.563299,-6.185720,-8.195019,-8.647190,-2.733165,-4.401222,7.408519,-5.987969,-1.463797,8.546594,-1.326939,-4.912168,-7.030245,9.669996,0.619040,3.078933,-8.267812,-7.565046,9.996470,-8.660973,8.483036,7.736922,-1.366370,7.622587,7.500804,3.794575,-0.832693,5.231947], dtype = "float64")#candidate|5037|(448,)|const|float64
var_5038 = relay.var("var_5038", dtype = "uint32", shape = (324,))#candidate|5038|(324,)|var|uint32
call_5036 = relay.TupleGetItem(func_4411_call(relay.reshape(const_5037.astype('float64'), [448,]), relay.reshape(var_5038.astype('uint32'), [18, 18]), ), 3)
call_5039 = relay.TupleGetItem(func_4415_call(relay.reshape(const_5037.astype('float64'), [448,]), relay.reshape(var_5038.astype('uint32'), [18, 18]), ), 3)
func_3474_call = mod.get_global_var('func_3474')
func_3476_call = mutated_mod.get_global_var('func_3476')
call_5044 = func_3474_call()
call_5045 = func_3474_call()
func_1065_call = mod.get_global_var('func_1065')
func_1068_call = mutated_mod.get_global_var('func_1068')
const_5053 = relay.const([[5.947169,-6.689094],[-9.931836,-6.033655],[6.083453,-9.587654],[-9.527064,0.765934],[-4.222151,-5.339093],[4.163985,0.909657],[0.573887,-6.399540],[-8.850440,2.903750],[-1.028279,2.276728],[-4.672136,-8.218772],[-2.809194,-6.735247],[-7.677065,-8.882127],[-0.156717,8.650812],[2.386534,-5.891141],[3.144728,-9.894619],[-5.229915,6.090385],[7.512657,-7.315246],[2.260715,5.373351],[9.522779,-8.887628],[0.231102,-9.917199],[1.999152,6.940736],[-4.642042,8.548117],[-6.057241,0.765325],[7.318695,-7.708646],[-2.588650,-3.626044],[0.585481,8.837903],[8.633716,-5.158420],[-3.661331,3.545298],[-5.562456,-1.269388],[-6.117233,-3.510083],[2.531806,4.135958],[4.175781,-3.568680],[-1.189634,4.727388],[-6.101024,-1.825505],[-4.979785,1.142059],[6.064340,-9.627613],[2.716736,5.154705],[-4.502540,9.242671],[7.623685,-3.444138],[-5.270978,-3.541398],[-3.678150,-2.243995],[-4.138696,-0.907442],[8.022194,-6.426509],[-3.016237,6.685752],[1.679569,1.372215],[-9.887753,-0.921817],[-3.990295,-4.257050],[8.530399,9.759546],[-8.788920,-3.305740],[3.024781,6.830021],[-3.236060,0.240582],[-6.628293,0.738115],[9.165921,5.675222],[1.504218,-9.496215],[8.772242,-5.611516],[3.206383,-8.444221],[6.378487,4.005430],[9.170952,5.625770],[-1.273188,1.619387],[2.833613,-4.428043]], dtype = "float32")#candidate|5053|(60, 2)|const|float32
const_5054 = relay.const([-7,2,-3,7,-2,-3,-4,-8,-9,3,3,-7,-2,-6,-8,-4,-4,-3,5,-10,-8,-5,1,3,-6,10,-8,2,4,5,-2,8,-5,4,10,-7,1,3,9,2,4,-5,-10,2,-4,5,8,-2,4,-5,4,-5,5,-6,5,10,-1,4,1,-5,-5,-10,4,7,2,2,-3,-8,6,5,-2,-3,-9,2,4,-4,8,1,-8,1,10,5,-2,-4,-4,2,-3,9,-5,-9,-10,6,-8,1,-7,5,6,3,-2,-8,5,4,-8,-7,8,10,8,8,-6,2,-3,-1,9,-9,-10,-9,1,-10,-8,2,2,6,1,-5,-4,10,-8,-8,-4,7,-8,-6,10,7,-2,6,2,-5,-7,-8,1,-10,-9,-3,-9,-7,-9,-5,-9,-8,1,7,9,6,4,9,-2,-4,9,-3,10,-5,-3,7,-3,6,-3,9,7,-8,-9,-8,-5,-3,-10,5,8,-6,-8,-4,-9,7,3,2,3,-3,-6,-5,-3,-7,7,-2,2,6,2,3,10,3,-7,-3,4,5,7,3,10,-5,-4,4,7,-7,1,2,1,-5,10,-1,4,-8,-7,2,-3,-6,6,-4,-9,-3,1,2,-1,-4,-6,9,2,2,-8,-7,-3,-9,-3,1,-4,-2,2,-10,-2,-5,-1,10,-2,5,9,3,6,-3,7,-1,-10,9,-9,-4,5,-1,2,2,-4,-3,10,4,-10,-5,3,-7,10,-5,-4,2,-8,6,2,5,-6,8,-4,1,1,10,-1,7,4,-10,10,-10,5,-10,5,-3,-2,6,-5,-2,3,10,-3,-7,8,-7,-1,9,-4,-3,4,1,-8,6,4,-10,1,2,5,-1,7,5,5,-6,-5,-8,-6,7,-6,9,-10,-6,9,7,7,10,5,4,1,9,-8,5,7,-1,-4,2,1,4,-6,-3,8,7,-9,3,10,8,-10,3,6,10,-6,3,-10,5,-8,7,4,-9,-4,4,6,-1,4,4,9,7,6,-1,9,-4,-6,4,6,4,-8,5,10,-10,1,-4,8,6,-3,4,-6,-8,-1,4,-6,7,-7,-7,10,3,1,-4,1,7,-10,6,9,-8,-6,8,-1,7,-9,6,2,-3,-9,4,-8,5,-1,-3,9,-1,-4,-9,3,-4,8,2,-1,3,-1,-3,-5,8,-1,6,-2,5,3,-10,7,7,-6,-5,3,9,2,-4,10,3,-2,-1,4,-2,-9,-3,8,4,-10,-1,7,-6,1,6,-1,5,7,-10,4,-8,-8,-3,-3,-10,-4,-6,2,9,-4,-7,5,-10,9,-3,-6,10,-4,-10,-8,1,-3,4,-1,-1,10,-1,9,7,-3,-5,-1,-3,-7,-1,-3,-8,9,4,-9,-6,2,-3,-9,10,-9,1,9,-7,6,1,10,8,3,1,4,10,5,6,4,-5,3,4,-1,8,9,-9,-1,2,8,6,3,9,-9,-1,2,-7,4,-9,-2,-2,-8,-4,9,-1,-9,10,-2,1,5,6,10,4,-5,-8,-2,2,5,-9,1,-1,8,4,2,5,5,-7,-5,10,-8,10,1,1,5,-10,9,-7,-5,-1,4,6,-5,6,-4,1,5,1,1,-3,2,-5,5,10,-2,-8,-6,10,7,-1,-4,-2,-4,-6,7,-5,3,1,-3,9,-1,6,3,-9,3,9,4,8,-8,-7,4,-3,-4,-8,-5,-4,5,-4,-5,-7,4,-8,1,8,-10,4,9,-2,2,-1,6,3,-5,-10,-1,1,-6,6,2,-5,-1,6,-6,4,-10,-5,10,10], dtype = "uint16")#candidate|5054|(672,)|const|uint16
call_5052 = relay.TupleGetItem(func_1065_call(relay.reshape(const_5053.astype('float32'), [5, 2, 12]), relay.reshape(const_5054.astype('uint16'), [672,]), ), 3)
call_5055 = relay.TupleGetItem(func_1068_call(relay.reshape(const_5053.astype('float32'), [5, 2, 12]), relay.reshape(const_5054.astype('uint16'), [672,]), ), 3)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_5064 = func_1398_call()
call_5065 = func_1398_call()
func_1465_call = mod.get_global_var('func_1465')
func_1469_call = mutated_mod.get_global_var('func_1469')
const_5082 = relay.const([[2.201271],[8.330204],[-4.477188],[-3.653205],[4.150231],[3.199140],[-5.842908],[8.346304],[4.399952],[5.600854],[-0.468261],[0.539144],[-0.248916],[3.103804]], dtype = "float64")#candidate|5082|(14, 1)|const|float64
var_5083 = relay.var("var_5083", dtype = "uint64", shape = (320,))#candidate|5083|(320,)|var|uint64
call_5081 = relay.TupleGetItem(func_1465_call(relay.reshape(const_5082.astype('float64'), [14,]), relay.reshape(var_5083.astype('uint64'), [320,]), ), 3)
call_5084 = relay.TupleGetItem(func_1469_call(relay.reshape(const_5082.astype('float64'), [14,]), relay.reshape(var_5083.astype('uint64'), [320,]), ), 3)
func_2603_call = mod.get_global_var('func_2603')
func_2604_call = mutated_mod.get_global_var('func_2604')
call_5104 = func_2603_call()
call_5105 = func_2603_call()
func_2774_call = mod.get_global_var('func_2774')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_5109 = func_2774_call()
call_5110 = func_2774_call()
output = relay.Tuple([call_5032,call_5036,const_5037,var_5038,call_5044,call_5052,const_5053,const_5054,call_5064,call_5081,const_5082,var_5083,call_5104,call_5109,])
output2 = relay.Tuple([call_5033,call_5039,const_5037,var_5038,call_5045,call_5055,const_5053,const_5054,call_5065,call_5084,const_5082,var_5083,call_5105,call_5110,])
func_5115 = relay.Function([var_5038,var_5083,], output)
mod['func_5115'] = func_5115
mod = relay.transform.InferType()(mod)
mutated_mod['func_5115'] = func_5115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5115_call = mutated_mod.get_global_var('func_5115')
var_5117 = relay.var("var_5117", dtype = "uint32", shape = (324,))#candidate|5117|(324,)|var|uint32
var_5118 = relay.var("var_5118", dtype = "uint64", shape = (320,))#candidate|5118|(320,)|var|uint64
call_5116 = func_5115_call(var_5117,var_5118,)
output = call_5116
func_5119 = relay.Function([var_5117,var_5118,], output)
mutated_mod['func_5119'] = func_5119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3634_call = mod.get_global_var('func_3634')
func_3635_call = mutated_mod.get_global_var('func_3635')
call_5152 = relay.TupleGetItem(func_3634_call(), 0)
call_5153 = relay.TupleGetItem(func_3635_call(), 0)
func_4349_call = mod.get_global_var('func_4349')
func_4352_call = mutated_mod.get_global_var('func_4352')
const_5167 = relay.const([9.373348,-4.460596,7.638920,9.844273,0.854773,7.377226,-8.130525,8.764946,-6.193769,-3.686640,-2.529303,-8.557060,-3.318790,-5.018996,9.755243,9.229941,7.192743,5.958378,-2.773808,0.554601,2.473200,6.072956,-2.457221,0.123271,2.936473,-7.036337,-5.922918,-2.137378,4.653800,-0.455941,8.040147,7.826439,7.290700,1.580861,-1.752597,-5.156847,-9.338826,2.135243,-8.858995,5.769023,1.317557,3.851226,-8.870765,-9.601384,-7.365525,-6.743958,-0.008286,-8.732238,3.773431,6.368579,6.015258,4.895996,-6.949161,-4.658851,6.665632,-2.614288,-5.081903,-2.924990,9.546510,-0.798351,9.289748,3.515392,-6.442285,-3.383673,-0.796581,9.958023,1.112542,2.303146,-3.488714,-3.841075,4.635266,-2.247536,-1.085579,-8.505066,9.874880,-6.119225,-0.381135,0.651188,2.756399,-2.413177,0.741315,2.102008,-9.828417,-7.007411,9.742318,-2.782796,7.055593,-7.915148,-9.290375,0.324107,1.194727,-3.716145,-9.401180,-5.734124,7.048592,7.928055,3.168610,4.051725,2.494546,-0.161783,-3.781197,3.737568,7.459203,-2.228152,-2.600265,0.231182,1.947337,8.922153,1.391530,4.988916,-5.091304,-8.487448,-5.589418,5.185415,9.014574,-9.373382,0.944385,-3.396485,3.764633,-6.994744,-0.517835,9.312886,2.614760,0.058166,-9.829759,-1.768231,8.385457,-5.636310,-3.356593,4.059044,5.270501,-6.780732,3.856710,8.239474,8.640517,7.247516,-4.101338,1.343537,2.721754,-6.702979,2.376099,3.691302,9.190906,-7.803213,0.609180,-8.254723,8.246401,2.756631,4.231584,5.804977,-3.802424,-9.904280,7.840656,1.173663,7.251172,4.676529,-7.738878,1.691838,-1.986348,1.716420,-1.425989,2.425994,-7.372595,-1.663946,1.719793,-7.716839,-3.436002,-3.532095,-6.115855,0.603700,-4.603899,7.206121,9.322968,-0.505282,-3.072240,0.177383,0.839833,3.758852,-6.830749,1.935230,9.934055,7.299927,1.087496,-0.552478,0.912649,0.064874,-6.452101,-6.033713,5.077118,1.170540,5.082001,-2.301451,0.980881,-7.769251,-4.276744,-9.914495,-5.733892,7.052460,3.845220,7.028605,3.296454,-4.902350,0.590242,2.808048,-6.700956,0.484655,-2.949875,-5.641477,9.511365,7.921755,0.689569,8.876031,8.045697,9.878111,-8.798051,-0.371058,1.574475,5.387259,5.716651,0.158932,-2.935838,4.292686,0.965534,-4.746562,6.369645,-9.718649,3.918787,-2.460064,-3.867260,-9.272758,-4.465552,8.013341,6.130748,0.034765,6.610732,-2.890797,1.984860,-9.583007,-7.739054,3.301572,-0.107117,-1.270575,8.029810,8.103517,-7.884675,1.893713,-4.051072,-1.610478,3.453694,-6.398262,-5.667558,-5.895577,6.997425,-2.897132,-0.226526,5.846327,2.378546,-2.590892,-5.644030,4.270181,6.462748,1.791484,7.556410,-6.400616,4.556662,6.506943,8.363421,6.011904,3.979810,-6.337828,3.034955,-0.796269,8.144920,-6.427947,-0.021752,-9.181123,-8.000477,2.613927,8.429879,-6.409935,8.589822,6.101988,-9.130499,3.204306,-3.451081,0.374291,1.555559,4.364833,-2.353364,-9.775219,2.299802,2.437200,-9.008027,6.509735,-0.394673,9.626070,4.878070,-2.877938,8.087983,0.290577,-9.597663,-4.020394,1.913292,-9.101318,5.683461,-2.499657,-8.253169,-9.396583,8.649761,-2.838462,0.965769,6.161247,-2.845673,-0.103685,7.535964,-8.018587,-7.610408,0.090033,-0.281431,-7.064997,-5.352661,-2.084120,-5.737047,6.909183,-6.897781,4.628753,9.022911,-5.465635,-0.563214,-7.334032,6.404604,8.538459,0.487440,0.493182,9.104852,1.801824,-0.514552,-7.596232,-3.619497,-8.766067,2.950378,-3.027006,-7.062838,7.278385,-5.100680,-8.527789,-4.759533,2.759508,-3.175887,2.322398,-8.371948,4.484574,-7.475937,7.635474,-1.315274,6.336620,3.270399,-3.164295,-8.877525,8.160556,3.534589,-0.698659,4.904264,3.806942,-8.087374,0.703006,1.586546,-2.210601,-5.294898,-7.920219,8.933387,6.128636,-4.049100,6.476063,5.163641,3.390359,-9.533022,-3.206230,2.785968,-1.054343,-8.403231,9.130169,-8.457246,9.160792,4.061114,9.440434,2.529561,-5.730672,1.126708,-5.812220,-1.012414,5.564798,-3.657022,-0.569273,-0.680481,0.277213,8.586124,-5.564134,-2.015868,-3.687398,-5.158341,6.390838,-6.115761,6.861885,6.444971,-7.259653,1.464034,-4.883141,4.396063,3.002833,9.364387,-6.463189,0.450514,4.719365,-2.054928,-7.104568,0.232746,-5.140225,1.964870,6.972311,-0.893123,-5.449793,-2.544884,9.931982,2.479589,9.723403,8.467902,6.272374,-3.598960,4.322314,4.359083,0.472314,9.495942,-5.000528,5.084055,8.275287,-8.579169,7.854859,-1.518559,-6.304586,-2.818649,5.822162,-8.177255,-1.104080,0.542253,4.714768,1.309790,0.755510,0.499474,3.933074,-8.240064,-9.536661,-8.832678,9.155614,-4.730403,4.568031,6.106879,-4.423329,1.112892,-5.537046,-7.428791,2.123655,6.518037,-8.912275,7.292472,6.421444,-0.468682,-3.178691,-4.945727,-7.217357,2.289656,9.580608,-3.980490,-6.498422,-7.647023,-6.394442,2.054965,3.550912,-3.010147,1.690571,4.005986,1.544872,-8.694724,8.290893,8.298545,5.658407,3.849559,3.056042,-3.212622,8.137657,7.018707,-4.395020,-5.804871,6.850714,5.389664,-4.059651,1.922330,2.026311,5.409010,-6.240783,-0.638209,2.785272,-1.697175,9.413064,9.885378,-5.648636,-7.823543,2.839509,-1.661224,7.016618,0.752143,-8.219683,-8.738911,-2.896508,-7.357031,-4.251608,-5.803582,-6.057423,4.601934,8.814824,0.131538,5.367728,-4.041605,-9.288576,9.993141,3.497579,0.978911,1.361790,9.746539,1.649193,6.973335,-2.691405,8.498774,-4.338104,-1.433438,5.621491,4.593945,0.951698,4.086302,-9.693902,8.975971,2.329171,-8.665735,-5.176153,-3.906495,5.864807,-9.609511,8.035867,2.151610,-1.044136,-0.640885,7.020217,-0.454370,6.043512,-3.269704,-5.271798,6.552976,-4.765887,-0.244223,2.527705,-6.477976,-3.032061,-5.801352,-7.250935,-6.267311,8.521941,8.498699,-3.471432,3.241521,8.599558,-7.583348,-5.285222,-6.838353,0.545339,2.906687,8.254081,2.281284,-7.487058,-3.215418,6.805116,6.467501,6.087690,3.189675,-2.815615,2.782159,-2.095346,3.180227,-4.816353,1.264936,2.324639,-5.215702,-5.618362,-3.752640,-4.759740,-1.310947,2.106583,-8.773095,-7.992281,8.251203,5.629105,-4.707867,-6.150892,-9.739347,1.175355,-5.603610,-5.001209,-5.530380,-1.498429,-1.890130,5.921220,2.369599,-0.443985,8.768372,5.729762,-7.068629,9.581557,9.247148,-0.902369,-3.476718,6.789344,-3.168734,-4.376514,7.008011,-6.028685,6.718574,-3.435841,-9.501650,-1.899312,8.021345,-6.592726,-0.730400,-0.495660,6.788413,4.423063,3.818693,-1.262281,5.888058,-6.310731,-4.925311,-8.216717,-3.304934,-7.634602,0.826875,-0.854207,-3.941245,-2.047356,-4.094296,-5.747925,-3.603825,-2.010980,3.643650,8.362738,6.206836,3.192085,-9.169061,1.548006,-1.447580,-4.869746,-9.887434,-6.783142,3.240618,-7.125033,2.613230,-3.779590,-5.661247,0.843253,1.418236,-3.316788,-7.969915,-9.135802,9.340010,0.653689,4.478778,-2.803960,-0.169264,8.527579,0.177495,-8.967852,-7.730287,-3.987017,8.442041,-6.030476,3.200682,6.078024,-8.932230,-2.831977,4.557772,1.944329,6.266466,-8.187804,-3.964788,-3.827931,9.978888,3.691585,6.194042,2.374667,2.517797,3.311571,-8.084619,1.293423,3.687616,5.713896,9.475413,8.199641,-5.748411,1.412900,4.867857,-3.023273,-8.762375,4.837048,-0.480697,-6.809343,-6.826314,-6.279639,-9.198691,-0.959285,4.334960,-3.061413,-7.662783,-4.430275,8.167716,-8.276902,0.017297,-4.491141,-6.603340,9.109158,-8.222542,-9.699476,9.342083,9.265291,-4.141916,8.488747,6.729887,2.914621,-6.056033,-2.445412,5.447241,-4.131384,-8.425864,-5.298416,-2.509421,0.784548,5.566950,-3.731685,-7.259255,-6.449875,1.688979,-4.634691,7.671723,-3.017253,1.940992,4.404508,2.497148,2.439221,-0.985174,-3.446740,1.737457,4.488092,-3.229907,-8.325979,-6.976428,8.170117,-6.378909,-0.813621,2.049744,0.581298,-3.022142,9.274548,1.345416,3.905103,-6.519181,-0.559156,2.638573,-7.570880,9.944392,-3.796643,4.418678,1.042674,0.065920,6.602602,9.628220,-6.614260,-5.511082,7.834334,-1.048220,4.490376,2.635455,5.377625,-9.885137,-1.517050,-0.570687,0.535025,-0.409555,8.923127,-2.962048,6.261929,-0.470761,0.123713,0.298261,-3.687654,0.500544,4.464293,6.926674,0.018120,-3.285146,-9.041032,-7.888870,3.956819,-6.715243,6.919779,0.283667,-1.020946,-3.912784,-5.016826,8.059505,8.174640,0.083424,3.513573,3.481821,-0.913538,-4.931170,-2.605866,-7.561694,1.044902,4.970902,8.886305,9.227391,-0.692107,-4.149505,-0.916998,0.203664,-5.093274,-4.982575,5.271152,9.995624,4.759089,-7.526782,-7.467813,5.078422,-1.082696,-7.385621,-5.149699,7.966758,4.601209,8.381394,3.974342,-6.532196,9.423548,7.918073,-9.802886,-8.863586,-6.430458,-0.124903,1.884523,9.739385,-1.840453,-1.439818,5.750854,4.449063,6.734115,-7.858519,6.252250,-6.548755,6.074253,3.910244,-4.933173,-7.149736,7.231728,-9.750151,-3.597016,-8.755154,5.143940,6.453772,-5.767419,-5.999635,-0.728987,3.275131,6.982568,-5.358090,5.578768,-1.708205,-0.687506,3.225050,8.648792,-8.192489,9.427750,-7.349443,3.957905,8.747020,-6.510723,8.431949,7.023497,-5.848859,5.592876,2.383562,4.972829,-1.671308,-9.068122,3.123452,4.486959,-5.580042,-6.725026,-8.300910,-7.477041,7.039970,3.342275,5.760303,3.140222,4.457595,1.624678,-0.576787,-1.857411,-5.719115,-5.662567,3.568839,3.881258,-5.540911,-0.935405,-9.014445,-0.348626,-7.822103,-3.818399,-1.697394,9.971284,-8.310214,3.362272,5.405379,-5.727373,-0.218950,8.784303,-3.138903,1.380249,-8.832871,5.354445,1.074760,1.736585,6.122471,7.372601,5.583756,6.304883,6.392766,-8.570354,8.472843,-7.842312,1.137959,5.441083,1.947903,-8.758343,-7.815851,-7.152515,-2.913870,3.557073,7.931909,3.357803,-1.213019,3.649957,7.410127,-7.388998,-7.291096,8.168264,9.696675,7.330563,1.552698,-5.709155,-2.961597,4.743760,-5.281305,-9.942474,-9.690574,2.447963,3.824180,-1.075923,-2.196446,2.118406,-9.678569,8.021225,3.740113,-6.713407,-6.739489,-8.702620,3.175325,1.185273,3.783768,9.835308,-2.541266,-3.997954,5.416059,-5.694173,2.754891,-9.445458,-4.244327,9.937561,3.400918,7.393419,8.794465,-1.522263,3.731336,-1.348492,2.255049,-3.234694,-0.346677,8.012481,-8.619112,-6.047124,5.251628,3.103762,-1.123593,5.277011,-0.154179,3.773113,6.754558,-3.585995,-8.578411,4.201943,-7.793217,0.823104,-7.845576,4.117980,-5.896691,-4.343318,-7.329785,-5.716242,5.055055,-9.301158,-9.813446,2.417900,1.520458,-8.010378,-7.943920,-6.770134,-2.763266,-5.311651,-4.129131,4.049850,6.980321,8.453108,6.851046,-1.909962,7.614798,-8.387875,-6.278011,7.001400,1.872248,1.662572,7.500192,-1.532558,3.642002,-1.966732,-9.412968,4.679994,-7.698577,-1.641563,-9.214618,-4.812028,7.297660,7.177731,-3.574464,-9.621745,-7.113285,5.719769,9.701616,7.782505,-2.369157,-4.613976,5.564643,-6.372006,-7.002310,6.108691,2.987984,5.468907,-3.600244,1.866931,9.746353,-3.872265,6.837323,-6.998859,-4.716940,-0.982005,0.841797,7.081419,-0.750605,-7.169107,-5.559362,4.235770,4.012082,7.805104,0.682536,-6.583512,-4.406080,-2.743070,6.703665,-5.345505,8.118617,-8.226387,4.984523,1.898188,-7.305044,4.902898,-3.732492,-5.492861,6.288091,7.004140,-6.447011,1.136951,3.269842,6.398308,-3.030307,-3.193710,-5.141283,3.022679,-2.317427,6.814969,-9.990133,-7.880755,8.604769,2.257365,-4.173439,8.996644,-2.939187,8.281054,-6.910921,-0.321907,-2.458311,-5.454473,-7.466684,-6.771027,3.312479,0.381928,-6.460011,-0.725387,-4.355569,-0.262906,-0.625001,-3.881234,4.218688,-8.880572,-7.120679,-4.226006,8.455423,9.473692,-2.142246,7.531079,5.196783,-4.652995,-2.315294,2.613256,-6.825466,0.652878,3.252436,0.189741,7.586199,-7.393855,3.187952,-3.985927,-7.702244,-0.848241,5.797112,-7.876725,-7.684263,2.039345,7.984650,9.675720,-4.093371,-0.008628,-4.889094,-4.149230,-2.339045,5.943563,-5.079256,-9.346811,6.249981,1.369594,-5.013034,2.815199,-2.380869,7.584243,6.813520,9.880410,4.199435,3.036544,-5.834502,4.244406,3.931586,-7.925832,-5.502007,-9.240850,3.058368,9.896858,5.352719,-8.573589,8.401115,3.567662,-6.576320,-8.249861,-7.868927,-4.919456,-8.148179,7.513312,-6.828986,2.211605,1.398610,3.432629,1.133541,-7.430537,2.088378,1.993495,8.269960,-9.767218,9.664627,4.434065,-8.370216,-1.761001,-9.540636,-1.591701,7.935202,5.982311,9.272786,6.887577,2.602004,8.594121,-5.144841,1.804753,6.446658,-2.439869,1.679779,0.784198,4.102844,-6.863891,9.135029,-2.337236,-9.095330,3.634643,-4.531081,-9.700098,6.532372,3.922377,-2.270661,7.682097,-9.597300,7.666180,7.481722,7.288370,-9.013660,-4.502625,6.609936,5.919009,0.273819,5.895655,3.921695,8.708163,-1.855161,3.385575,-1.232184,-0.043412,-7.107424,-7.149358,-3.968190,-0.409438,5.827820,5.218149,7.999129,-1.699803,3.800446,8.365972,3.413092,0.701001,0.952315,3.644936,3.482621,-1.284531,7.293299,-4.112405,-6.772338,-6.259277,8.232997,-0.737339,-8.443273,1.610807,2.527141,7.464850,-4.200383,-0.358740,3.596620,8.300831,5.962894,-8.063380,-3.640114,2.951711,6.526342,-5.007170,4.449555,2.860419,3.658853,7.378218,9.980035,2.047353,-4.076092,8.973183,9.790350,-3.502009,-4.877322,1.117527,9.049749,-7.189111,5.777094,-6.106112,8.489417,-1.903989,-7.780925,1.420827,-3.522419,8.119800,-0.234454,-6.558303,5.174868,2.233775,4.022095,-7.132999,6.310101,6.231500,5.420571,2.183674,-7.440598,8.075012,4.627687,-2.817850,-6.302138,-3.836674,2.973719,-3.965528,-6.067751,-8.474329,4.949467,-2.967683,1.935277,8.084855,3.045036,-5.166526,-8.049992,1.601877,-5.592625,-0.786014,4.332688,-8.691611,0.436816,-5.233764,-5.497101,-5.082623,3.073064,-9.625401,-6.584492,-0.473795,-4.712950,8.566003,-1.133485,-2.746725,1.038911,5.127973,-0.837893,7.378002,4.689099,2.206615,-4.103017,1.336694,-0.848674,2.639157,8.061883,4.999725,-1.885682,-0.829961,4.875469,4.292308,5.429388,9.592302,-5.754009,-1.894003,-7.068847,2.809031,8.186125,0.246240,-5.545261,-5.310604,-0.747392,5.229013,0.431748,0.521331,7.672673,1.465614,-9.116459,-4.094898,3.036402,-9.576483,-6.536315,-8.596047,-2.999043,6.618564,-3.925885,-4.221688,1.015352,2.121691,8.290818,4.410378,-5.535775,-8.689412,-2.797076,0.113474,5.545906,0.930433,-5.210045,6.937248,9.209939,7.428739,-9.208456,-3.945373,-3.753827,-4.342594,7.760755,-1.757778,-4.373089,-2.587984,8.796360,-1.595186,8.901398,-7.468362,-1.453232,-4.631618,-5.651581,3.291273,4.063134,0.231527,-7.187484,3.393502,2.095002,7.716863,-2.581550,-6.360424,6.733356,-0.487589,0.658229,-6.413292,-2.368477,2.069169,5.832646,-2.042265,6.957572,-7.936511,8.224245,0.485530,5.329401,1.987458,-9.816522,6.214787,-7.444819,-0.492159,-1.466375,7.649140,8.688227,5.364094,-8.057617,1.007743,0.507826,8.664309,2.680601,-7.432165,9.000987,0.290359,4.877504,0.127392,-2.622876,7.525628,0.705175,-5.654673,-6.747193,2.916865,5.944899,-5.125535,-9.033299,0.954994,-6.839356,-7.318740,7.592340,8.870128,-6.297771,6.726129,-5.771376,1.913047,1.906340,-1.676149,3.638305,-8.610450,-5.517521,-2.946242,-5.743725,-5.316315,0.103018,-8.012602,-1.414189,1.221188,6.164908,-8.295844,-2.021156,9.297537,1.437229,1.210318,7.073599,1.429094,-9.156024,-4.877766,0.190785,7.609436,5.603383,-0.250726,7.426365,-2.978605,-7.363232,-3.086574,-6.466714,-6.656954,7.402286,-7.595459,-8.923134,-1.895637,5.326873,3.847943,1.734571,1.270643,6.421170,3.574633,-7.690629,7.581647,-8.609533,2.420766,3.375606,-4.411852,3.558634,2.235690,-9.402174,-0.065248,-7.756818,-6.074800,-9.861263,-9.907650,0.739641,-9.731666,4.895783,-0.217943,8.340385,-9.275835,-0.739896,6.531843,7.205244,9.482191,-2.722372,-2.350827,6.844787,-2.894144,-6.656224,0.384824,-1.948342,8.623170,0.219801,3.673707,2.445353,6.786995,-2.838770,9.619388,8.852061,6.369538,-1.912780,-1.591831,1.607568,3.483305,1.557284,6.886832,-4.122678,8.409696,2.628237,-0.788231,-8.890164,-6.257443,-5.907413,2.431908,-0.544507,7.909446,-9.364624,-5.296433,0.578094,1.947180,5.295156,-7.541647,-3.573605,3.899338,9.027055,-2.941386,-3.358395,-3.277913,2.342791,-2.955667,0.114036,-3.972228,-3.718620,6.422948,0.277198,-7.728594,7.790867,-8.253084,3.395460,8.741192,-9.472378,-6.755951,-0.177668,4.164838,-9.865225,4.694844,-4.848540,8.701560,5.269472,-9.111776,-2.659743,3.600939,2.230991,0.264383,9.026912,1.927677,-5.520538,-7.285034,9.599798,-1.289393,-2.201186,2.492310,-1.265482,6.453448,1.229163,-1.771571,-2.049657,9.628475,7.267151,-7.529223,-0.783647,-1.280111,-2.963256,6.194502,4.632793,8.936827,-6.959551,-2.478799,-7.806969,-3.828428,4.249460,8.415492,-9.017467,9.418022,7.946955,-6.803520,-7.959789,-3.771245,-6.743607,-3.201091,-6.326271,0.444462,-2.932328,5.132590,5.219866,-4.667836,-8.375561,-8.368308,-0.406140,-0.814859,-6.889544,7.571400,-5.279289,0.964703,-2.738856,-1.096524,1.526015,5.915271,5.916647,-5.116654,-4.344303,2.523783,-4.206279,2.265942,4.892810,-3.208627,-4.659452,-0.338633,-8.519252,1.494476,2.155832,6.154971,2.774962,-8.291664,4.842179,0.380158,5.906208,-8.089860,2.977278,2.533143,1.474389,-3.530284,4.032028,-0.283833,-5.902891,-4.268628,7.098701,-6.265707,-4.019117,4.407126,-6.752605,9.320047,5.870531,6.867616,2.394726,-5.093658,9.525274,6.363237,3.845163,-0.880032,8.374843,-5.056967,-8.437489,-6.327425,7.364248,-4.518044,-7.998825,-7.069303,2.045469,-8.158532,-8.070864,1.543671,6.085991,-2.054584,4.079071,-6.925610,-2.777374,9.683615,-5.392063,7.954751,-3.860320,5.119056,-6.742821,-4.016883,8.603860,-9.182648,6.595416,6.860644,-1.961206,-4.634931,-7.363028,6.892354,9.667516,0.994654,-4.446617,7.698069,-7.540143,1.475318,-5.529680,-1.251535,1.107385,6.807505,6.951756,4.775553,2.781913,8.931239,9.829388,-9.074078,7.498181,-3.872192,-5.180752,-5.636551,-4.749070,0.335558,-9.406808,-2.580911,0.601295,-6.778096,1.379934,-4.132243,6.449653,-2.164291,-1.652253,1.783447,8.673534,3.430733,-7.953811,-8.704359,-8.580965,7.676407,-0.665599,-8.989935,-5.088753,-1.136763,-2.238783,-4.584547,-7.393083,-9.190291,5.861118,-0.023085,8.351279,-8.858545,-2.759770,-0.739119,7.340360,0.911705,-9.428260,1.508546,-4.555040,-9.397451,-0.651780,2.876171,7.901783,-0.913502,9.839107,1.301680,-1.564184,-9.482139,7.278373,3.562935,9.431712,-1.761615,-2.802637,-2.713914,1.728388,-2.272317,1.529839,-0.463203,6.246292,1.119775,5.009381,-3.640939,-7.186785,-0.242337,4.088221,-2.188814,-9.395475,-1.256000,-8.523198,-0.328848,1.240583,-1.339157,-1.019509,-3.308484,6.302698,-3.048706,-1.149726,-0.781795,-1.575840,-4.333596,5.766951,-9.712372,8.732741,-3.869185,9.456170,4.373772,1.733991,6.644566,-1.472231,-4.779361,3.964197,7.399156,3.864054,-3.895428,-3.820497,8.856124,-6.765026,-2.193927,0.111791,7.776790,7.586823,0.395983,-6.270433,-2.688416,-4.799098,-6.853620,8.588379,-9.063807,-6.070823,-0.782380,8.986714,-4.646982,7.352093,-8.849991,8.388634,1.237839,-5.784770,-4.710909,8.501832,-0.284079,9.007806,7.813414,-6.831914,7.790144,8.711269,2.702740,2.507268,-5.598498,-3.963829,5.888270,-1.103869,-4.508221,-0.606514,-8.011112,3.192479,9.343153,5.676098,-8.815374,-2.780693,-7.965338,9.273389,8.081284,2.781603,-4.076339,-1.594106,-4.417899,-1.524976,2.626065,4.738230,4.273828,-7.227245,0.623235,6.029012,1.791385,0.371243,8.106055,-4.521691,8.825626,-6.358293,9.066170,-1.006292,-2.759657,8.876531,8.270331,8.815542,2.914916,1.663801,0.093104,-5.194856,0.090202,1.210052,5.732277,7.010119,2.478042,-9.976446,-9.580946,-6.034512,8.404064,-5.542502,-6.667011,8.715571,-9.534714,-1.226288,-9.262888,-4.496708,-4.629741,-1.433378,3.470888,8.548488,-7.299532,-1.963973,-9.743454,3.882672,-3.921665,-1.635240,9.063989,-2.438000,-2.700775,2.555463,-0.078285,-4.299174,6.023017,-2.827577,-2.576278,-9.815729,1.955042,6.451322,8.261261,7.012204,2.592911,8.246507,-4.625592,-9.978002,-4.109120,1.396196,6.277393,-1.637800,-1.510543,-3.479326,-0.612736,5.291380,2.382209,8.462887,8.973749,-7.754644,-1.946116,6.791331,8.887995,9.075632,-5.085559,-2.215895,1.515948,-8.950325,1.222021,-3.791839,1.827356,3.941743,2.643084,-7.389738,-6.101250,8.589217,-3.785336,3.996235,-5.251301,5.491291,7.775686,-6.983451,-9.675139,-3.660304,2.509736,0.440420,7.046724,9.212575,2.065043,1.847646,-4.819774,-4.735067,-8.517128,5.685904,0.928895,1.092101,-1.558795,5.456785,-2.326301,6.341233,-1.866362,6.848945,3.094607,-0.162514,-4.347784,-0.463402,-0.432146,6.153088,-3.931387,3.798233,7.134639,-6.635655,3.370466,4.354655,-1.451144,3.217036,2.836789,-5.819880,-2.629450,-0.316030,-9.904506,8.069511,1.509804,9.742668,4.412355,6.814916,8.175586,3.146705,7.453593,5.673953,9.647365,4.357526,1.781374,2.480502,-6.749783,-4.975455,8.333471,-1.665369,-1.982557,-1.436115,-1.530879,-5.823209,-3.920040,-6.684470,-5.392418,2.950205,7.721490,5.183852,-4.762039,-4.997073,-9.866547,4.640446,-8.890263,-8.509411,-5.996928,7.504592,9.752342,-7.036072,1.741055,1.042691,-2.479972,2.780184,6.630595,-2.166206,3.841621,2.157300,2.095093,8.455549,-6.908516,-8.727247,6.182067,8.632566,-6.321677,-7.003816,5.067048,0.478262,-7.472201,8.541963,6.463006,4.421890,-6.789922,-6.970436,5.228211,4.426783,-3.644151,-3.739170,0.465899,-5.107443,-3.303824,0.996917,-4.315094,6.945398,3.658339,5.227775,6.285830,-6.196070,0.522698,5.774864,-0.131738,-3.820974,1.298454,-5.474220,-0.561082,-2.474373,1.538328,-1.340729,-4.001044,-0.658880,-5.780016,7.663282,-3.559480,8.101012,-0.639182,4.557900,-5.653907,9.222536,-1.086997,-3.849922,-9.165095,8.248409,5.193798,-5.753003,-2.506324,4.088521,-0.713687,-5.051863,-7.024517,-4.896240,-8.613094,-2.033657,9.165528,-9.854421,3.547744,-1.238422,6.080151,-0.338585,-0.840640,0.527983,9.284778,3.795458,7.950403,2.589369,-4.915972,-1.256493,4.586886,7.569865,3.303232,-8.687380,-3.707518,-6.522913,7.973551,-6.075417,2.076810,-3.856706,6.306973,-1.327976,7.561088,-9.928081,9.113699,-9.269731,0.774280,0.054494,-8.505729,-5.504018,2.145267,-6.890005,3.089775,-0.519871,-0.527909,5.274395,-3.124313,-1.221921,9.540976,9.616676,-6.597303,7.993322,1.111661,-4.470248,0.888187,8.191864,2.346741,6.305762,-7.248218,-9.910197,-3.288743,-0.647603,2.971306,-9.834001,-1.783923,-3.709998,8.237686,-5.110665,-9.092472,-5.989929,3.354657,-7.920629,-2.622163,9.543033,4.452475,7.403867,-5.157203,3.522709,9.206896,-7.011317,0.649044,-4.361000,5.597642,-7.889128,3.700936,8.989481,-0.401000,9.809809,4.428206,1.357383,-1.002009,-6.922371,4.710754,5.662734,8.526914,-6.676189,-7.186582,1.018391,4.080623,2.982811,5.906353,-6.054673,9.945747,-8.840577,-3.064436,4.296730,-2.953206,0.847711,6.346140,-4.487410,3.596277,-5.747810,2.956940,0.349432,0.607997,9.060785,9.375327,-5.294349,-2.097560,7.029756,-4.931665,0.994083,-5.024967,-0.622880,7.128504,-7.454820,9.609176,-9.779008,-7.247677,-3.279941,8.919024,-1.472026,6.277655,1.687477,9.327241,-4.552663,1.146619,1.649144,8.629229,-3.288725,-5.670693,5.830388,9.894933,1.687889,2.566310,5.159733,4.260808,5.115161,-5.959617,-5.933211,0.879904,1.699423,4.154279,-5.283525,6.454529,1.890732,0.616165,5.061429,2.889590,-9.226542,-6.075142,4.418737,-0.763142,-4.523927,5.540713,-6.324249,-5.550166,5.440118,-1.854661,-4.667541,-7.776901,-5.205483,-2.251421,-7.886071,-8.706604,-6.877416,-8.668529,-0.199454,-9.562109,8.884600,-2.835174,-8.792721,-9.315887,-5.155949,0.439254,-8.590679,-9.376940,4.296815,-5.037965,-6.717618,-2.619187,-0.646591,-3.786268,9.319708,9.742088,-3.352921,7.774085,-2.077275,9.961171,-5.516821,9.160125,-7.537069,8.873186,-5.218282,-3.964570,-4.723489,8.028396,0.668316,-9.600458,-2.813179,-5.549056,5.740208,7.233855,7.440871,-0.748041,2.245621,-7.689882,9.463356,2.620181,8.501308,5.207499,9.411949,-6.059682,-6.133266,4.700134,7.213936,-7.036269,3.380844,-0.070223,-2.815617,4.348316,2.085325,3.659720,0.029192,-6.616622,-7.185001,4.912388,9.788992,7.624756,-8.232719,-5.777781,-7.030589,-1.446025,4.050534,-4.082372,7.097078,6.047796,3.082588,0.482441,-1.079494,5.049630,8.257732,-4.314491,1.650860,8.132718,-4.968924,0.923538,-2.693452,0.412606,-4.625491,0.080611,5.064568,-7.318312,6.846243,6.598838,-2.423040,8.218328,1.637347,-7.732747,2.382815,-7.729331,4.506154,-0.549109,6.320396,7.041513,7.121842,0.448495,-7.193703,5.544161,-7.662256,5.416540,3.889134,-8.822151,-9.501249,4.682263,-1.418934,6.013496,0.001540,0.728037,6.271248,4.310374,7.335087,3.284963,-6.262098,-6.555855,-3.267752,9.754704,-2.220224,-8.764774,-8.327289,-0.996919,-3.599736,2.590862,6.949822,-3.191786,8.905247,2.164710,5.391680,-8.987755,9.032765,-0.022848,-7.385811,6.817433,3.378958,7.082173,-8.032831,2.926256,-4.101004,-4.371923,3.548520,-1.466554,-5.580842,-4.493317,9.358989,-5.282961,7.976134,-1.844285,-8.561463,-6.850786,0.209294,-8.813487,4.123135,-6.978903,-0.164017,7.393063,-5.187984,-8.342796,6.543509,-4.740958,-7.089583,5.309250,7.857378,5.853292,1.461155,8.726620,-7.921377,-4.773969,4.867366,8.240042,-0.404449,-6.388665,-2.294061,8.381543,9.504082,-6.883084,-2.140625,4.283039,4.653687,-1.817298,-1.908494,-5.361226,9.488323,-2.195885,1.279732,-3.951790,-9.814840,-4.771343,7.384562,-2.150269,1.681712,-6.106788,-3.768271,6.442170,1.397507,-7.937255,-2.458300,-5.720679,-3.523341,-6.269262,-8.866241,8.422841,7.400570,6.111240,2.245190,1.781321,0.701107,4.544690,7.629435,8.537569,-1.086014,-1.735130,-5.757174,-4.539015,6.220352,2.130770,0.751516,-7.625149,-4.711097,5.692332,4.931664,7.655667,8.806508,-8.578519,0.654782,8.500474,-9.740174,-5.194289,-1.217489,1.702952,-4.303765,0.405577,7.786022,-7.124093,2.733521,5.743372,3.041302,2.673442,0.697803,4.189407,-1.218780,-3.055553,8.433654,8.200293,0.915640,8.818418,2.279114,7.524113,9.031737,2.046859,-8.227694,4.987815,6.113688,-3.568547,0.480794,0.127589,-8.600447,-4.210178,4.509013,8.499239,-3.620620,-2.992403,0.520364,-3.738527,9.977108,7.152741,-5.881427,5.278843,-7.431499,2.092120,-7.955112,5.522433,-5.400822,-3.995552,6.348736,9.004699,-5.784369,-4.676222,9.934951,-2.393436,-3.374952,-0.227381,6.629636,-4.159744,6.283052,9.395544,-5.194302,-1.617005,-1.573818,-5.266588,-0.401289,7.395999,9.766062,-5.920422,-9.253234,-4.294380,8.177394,4.976867,-7.885066,-1.350198,2.899153,2.147210,-0.477128,3.979977,-4.053630,-2.072423,5.484197,-7.798896,6.452626,1.180114,5.448261,-0.264405,5.569494,3.802849,9.127773,7.326283,8.301012,9.011411,6.317650,-1.250549,-7.985910,-9.667598,-3.833973,3.417718,-9.333400,2.493890,-7.275611,-7.017125,-9.953607,4.342204,6.677978,-0.720204,-0.727483,-4.191275,-6.338923,9.236085,5.734367,-1.728914,-5.954836,-8.285172,8.450264,7.081148,3.514448,5.949856,2.358968,-6.315572,7.753309,-6.623722,-9.395848,7.247723,5.002930,2.148451,4.691849,6.502268,8.759773,-7.515356,5.597110,-4.022535,8.526064,-3.040068,2.096117,8.723214,-6.568365,-5.885459,-2.919551,0.431098,-4.415584,-5.872828,9.759939,-8.411340,5.450912,1.173459,-3.786807,-2.756694,2.428731,-9.294960,2.481890,0.130921,9.765262,-0.496187,-0.647036,-1.279699,-5.819237,-0.878687,-0.624597,2.568566,0.515548,-5.897272,-3.379912,0.300137,-6.661349,-0.130307,4.671868,8.558577,6.347215,-8.886296,3.981928,1.000501,0.422717,3.968133,-0.699336,-4.924810,2.095046,8.038539,1.265931,7.251874,-1.391468,1.325595,-7.189512,9.117484,-4.413625,5.449692,-9.767079,1.110236,-6.850358,1.353568,4.320067,-7.198349,-0.001637,1.861818,-9.850733,2.445864,-8.931404,-8.715418,2.491675,2.565134,0.792215,-4.217789,0.837045,6.679312,-3.155210,-9.922252,-5.090038,3.844924,-9.493445,-3.294992,0.800383,2.186325,-5.353013,-7.479953,0.480300,1.054833,-5.212065,-5.559106,-4.870541,4.872603,-4.719263,-9.348468,-7.166314,-0.408157,-7.915284,7.582067,-4.742726,-3.448009,-1.461412,3.036375,-3.201557,-9.681264,-7.458492,-8.356253,2.654640,6.614387,2.826925,-2.269650,2.591381,-8.408533,-4.370194,-6.224313,-2.444393,6.969249,6.910437,9.518494,-2.060957,1.679258,-7.294337,7.638541,1.995230,-0.203008,-9.497137,7.844720,3.517884,-1.769354,5.298195,-4.589079,8.034155,9.119425,-0.457729,-1.888553,-4.630470,0.058543,3.305333,-0.717162,-0.202621,9.895486,-7.587029,-4.052283,-2.063852,7.252204,7.944772,9.562390,5.450537,-4.545509,5.041061,-8.611753,-9.192979,2.826638,-2.792094,-1.914960,-8.084155,-8.065106,-6.428990,-7.586419,9.519164,4.764476,8.804000,5.397106,6.868520,7.866001,-0.434728,-2.321674,8.810361,-1.916416,-5.678354,-6.922254,-5.470262,4.304577,-3.187793,5.421687,6.789404,-3.832810,9.041594,2.287149,4.510384,-6.451100,4.849964,-9.797057,-7.360465,-9.980234,-2.645428,9.358301,9.540930,2.258192,-0.026674,6.211207,4.374585,-5.015122,8.224404,1.066799,-8.306562,-4.304540,6.381936,7.827950,9.059715,-9.052358,-7.858177,-2.338364,-0.765569,7.536339,-7.322199,-0.186050,0.212417,3.155487,-8.289542,7.001467,-3.732141,-0.810227,5.019884,2.672444,-4.303624,-1.835759,0.596332,-8.976041,-0.504945,-1.479642,2.717524,5.412938], dtype = "float32")#candidate|5167|(2912,)|const|float32
call_5166 = relay.TupleGetItem(func_4349_call(relay.reshape(const_5167.astype('float32'), [2912,])), 0)
call_5168 = relay.TupleGetItem(func_4352_call(relay.reshape(const_5167.astype('float32'), [2912,])), 0)
uop_5169 = relay.asinh(call_5166.astype('float64')) # shape=(5, 4, 10)
uop_5171 = relay.asinh(call_5168.astype('float64')) # shape=(5, 4, 10)
output = relay.Tuple([call_5152,const_5167,uop_5169,])
output2 = relay.Tuple([call_5153,const_5167,uop_5171,])
func_5175 = relay.Function([], output)
mod['func_5175'] = func_5175
mod = relay.transform.InferType()(mod)
output = func_5175()
func_5176 = relay.Function([], output)
mutated_mod['func_5176'] = func_5176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3255_call = mod.get_global_var('func_3255')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_5189 = func_3255_call()
call_5190 = func_3255_call()
output = call_5189
output2 = call_5190
func_5221 = relay.Function([], output)
mod['func_5221'] = func_5221
mod = relay.transform.InferType()(mod)
mutated_mod['func_5221'] = func_5221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5221_call = mutated_mod.get_global_var('func_5221')
call_5222 = func_5221_call()
output = call_5222
func_5223 = relay.Function([], output)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1674_call = mod.get_global_var('func_1674')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_5270 = relay.TupleGetItem(func_1674_call(), 0)
call_5271 = relay.TupleGetItem(func_1675_call(), 0)
uop_5272 = relay.erf(call_5270.astype('float32')) # shape=(8, 14, 12)
uop_5274 = relay.erf(call_5271.astype('float32')) # shape=(8, 14, 12)
func_1996_call = mod.get_global_var('func_1996')
func_1999_call = mutated_mod.get_global_var('func_1999')
var_5289 = relay.var("var_5289", dtype = "float32", shape = (36,))#candidate|5289|(36,)|var|float32
var_5290 = relay.var("var_5290", dtype = "float64", shape = (1584,))#candidate|5290|(1584,)|var|float64
call_5288 = relay.TupleGetItem(func_1996_call(relay.reshape(var_5289.astype('float32'), [36,]), relay.reshape(var_5290.astype('float64'), [1584,]), ), 4)
call_5291 = relay.TupleGetItem(func_1999_call(relay.reshape(var_5289.astype('float32'), [36,]), relay.reshape(var_5290.astype('float64'), [1584,]), ), 4)
output = relay.Tuple([uop_5272,call_5288,var_5289,var_5290,])
output2 = relay.Tuple([uop_5274,call_5291,var_5289,var_5290,])
func_5299 = relay.Function([var_5289,var_5290,], output)
mod['func_5299'] = func_5299
mod = relay.transform.InferType()(mod)
var_5300 = relay.var("var_5300", dtype = "float32", shape = (36,))#candidate|5300|(36,)|var|float32
var_5301 = relay.var("var_5301", dtype = "float64", shape = (1584,))#candidate|5301|(1584,)|var|float64
output = func_5299(var_5300,var_5301,)
func_5302 = relay.Function([var_5300,var_5301,], output)
mutated_mod['func_5302'] = func_5302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5307 = relay.var("var_5307", dtype = "float32", shape = (14, 1, 16))#candidate|5307|(14, 1, 16)|var|float32
uop_5308 = relay.asin(var_5307.astype('float32')) # shape=(14, 1, 16)
func_4349_call = mod.get_global_var('func_4349')
func_4352_call = mutated_mod.get_global_var('func_4352')
var_5340 = relay.var("var_5340", dtype = "float32", shape = (4, 728))#candidate|5340|(4, 728)|var|float32
call_5339 = relay.TupleGetItem(func_4349_call(relay.reshape(var_5340.astype('float32'), [2912,])), 1)
call_5341 = relay.TupleGetItem(func_4352_call(relay.reshape(var_5340.astype('float32'), [2912,])), 1)
func_5115_call = mod.get_global_var('func_5115')
func_5119_call = mutated_mod.get_global_var('func_5119')
var_5346 = relay.var("var_5346", dtype = "uint32", shape = (324,))#candidate|5346|(324,)|var|uint32
const_5347 = relay.const([-9,-2,1,-2,-1,-5,-10,5,8,1,-7,-10,-2,1,-7,6,-3,-10,6,-1,10,2,-5,-1,6,-3,-10,7,1,8,8,3,-2,-10,-6,7,-7,5,-7,-4,-2,-7,2,-4,4,1,6,7,-9,-8,10,-3,4,8,8,-4,3,-3,-5,-5,9,-5,10,-4,-1,-7,8,7,-10,3,8,-8,-9,3,-8,-7,6,3,-5,6,9,-6,-3,-9,9,1,-9,8,10,4,-4,4,-2,-6,1,-3,-7,-7,4,-5,8,-10,-5,-5,-2,2,7,-5,-2,-5,5,5,-7,-4,10,3,5,3,2,6,6,-1,5,-1,9,2,-4,-5,9,1,9,7,7,-4,7,-6,-10,-5,5,2,4,7,10,8,-3,1,4,6,8,-4,-1,-10,-9,8,3,-7,5,-2,8,-6,-10,3,-3,-7,10,-7,-4,-4,2,-7,3,9,-10,4,-2,8,-7,7,-1,-2,8,2,4,2,-9,10,-5,-3,-1,-2,7,-8,3,4,-10,5,-4,9,-4,-6,10,-8,-5,9,-5,-9,-2,-7,-2,9,5,-1,2,1,-1,-2,10,-5,10,-1,6,7,6,-3,5,2,9,-1,3,8,8,4,-9,-3,6,1,-3,-2,-4,-1,8,-9,9,7,-1,-8,4,-6,-3,-9,4,-1,-2,-8,-7,-3,4,-1,3,7,-2,4,-6,-8,-1,8,-6,-2,1,5,3,-4,-2,-10,-4,9,-1,-1,-3,-6,5,-10,2,-9,6,-10,4,5,-8,10,-1,7,4,-1,-8,-3,-8,3,-7,-2,8,3,7,-5,3,6,-4,8,-4,5,3,-2,-3,2,9,4,-5,7,-2,-6], dtype = "uint64")#candidate|5347|(320,)|const|uint64
call_5345 = relay.TupleGetItem(func_5115_call(relay.reshape(var_5346.astype('uint32'), [324,]), relay.reshape(const_5347.astype('uint64'), [320,]), ), 9)
call_5348 = relay.TupleGetItem(func_5119_call(relay.reshape(var_5346.astype('uint32'), [324,]), relay.reshape(const_5347.astype('uint64'), [320,]), ), 9)
func_1284_call = mod.get_global_var('func_1284')
func_1288_call = mutated_mod.get_global_var('func_1288')
const_5351 = relay.const([[2.782009,-2.305109,-3.911606,-5.932635,-2.892288,6.874827,8.020238,-0.374727,-9.083119,1.369846,1.265731,-4.990260,0.593544,-7.592612,-4.516072,7.866591,-0.606790,9.174159,-6.162270,6.618429,-6.903215,-0.453569,6.698979,4.044710,8.743007,-6.676959,-2.387841,1.694732,-3.296212,2.656281,4.530468,-4.089793,-4.332996,-7.789863,5.637990,-1.306321,-2.029855,1.887294,0.805036,1.702685,5.721436,-7.319258,-8.975662,2.939613,9.116232,-4.898070,3.363889,-4.352814,-6.605116,-0.309058,6.830859,-1.727789,9.420425,2.153901,-7.553964,8.570021,3.673514,4.737603,3.471070,-9.693636,0.787801,8.007196,-0.910627,-2.989488,-9.453210,-4.516183,3.302418,-1.346748,1.027841,-7.019196,-1.391700,4.547768,8.068568,-1.631502,-7.837233,1.349338,4.491284,-7.327520,7.150690,-5.431978,-1.255244,5.198979,6.886693,-1.203764,4.743889,-1.952273,2.480277,9.713850,-1.799236,2.132145,6.522240,-2.880922,-6.489058,-8.289964,-2.659340,6.383130,6.386181,-8.274418,-3.554560,5.487029,2.778555,-6.442968,-5.003689,6.074720,3.707259,2.830254,-4.109338,5.016405,-1.824437,-1.969299,-7.857657,1.882898,-6.850017,1.404040,0.274652,-8.192889,-7.493037,2.166498,9.317205,-1.304720]], dtype = "float32")#candidate|5351|(1, 120)|const|float32
const_5352 = relay.const([-3,-10,-5,-10,-7,-5,7,-6,7,9,-4,-7,-3,8,-5,-1,-2,-9,-6,-9,-6,-3,-10,7,10,1,6,-4,4,1,7,-2,-5,-5,10,7,8,-10,-6,8,-6,10,4,10,-6,-1,-5,1,2,2,-9,7,-6,6,5,-9,-2,2,5,-5,-3,5,7,-7,-3,10,-5,-9,-7,6,-10,2,6,-9,-8,-3,1,8,-5,9,-1,9,-10,-10,3,9,-10,7,-7,-10,-1,5,-2,-9,7,6,9,-7,-2,-5,10,2,5,10,4,-8,-5,-6,-7,8,5,3,7,-4,-4,6,3,7,-7,-1,-9,5,-3,4,6,-3,4,-6,7,-2,10,-6,-7,-10,-2,-5,-9,8,1,-1,4,1,-1,10,8,-8,1,-9,1,-3,10,5,-8,3,-2,8,8,5,6,-7,7,-3,3,9,1,6,-9,5,1,9,-10,-1,-6,-10,-2,-7,4,1,1,-1,1,-8,-8,8,-8,-7,3,1,-6,2,-7,9,10,-1,10,-5,-1,1,-5,1,5,-6,-7,10,5,1,2,5,10,4,10,-10,4,10,-10,5,-8,4,5,9,5,-3,-10,8,8,1,-1,9,-10,-5,10,6,10,-5,5,8,-4,8,1,5,7,-9,4,-6,-7,-5,-2,8,10,-8,7,-4,6,4,-7,9,4,-6,6,-5,2,1,-8,7,-2,2,2,-10,-9,8,-5,1,4,8,-9,4,-2,7,-4,7,-3,7,8,-4,2,-2,-8,6,2,6,8,3,5,-9,6,6,6,5,-1,-2,10,1,9,-3,-5,10,-7,1,-5,-10,8,-10,-1,10,-3,-8,6,-10,9,4,10,-7,-9,8,1,-6,-6,-3,3,-1,-8,9,10,-9,-5,-5,8,-4,4,-2,-2,4,-5,8,-4,4,10,4,-5,9,7,-4,7,4,2,6,4,-3,-9,-9,-10,5,-10,-7,3,4,-1,-4,8,10,6,3,8,-1,7,-1,4,-6,-4,-9,1,4,-4,4,8,2,-2,4,-1,8,-4,4,3,-4,4,-4,7,-1,-8,-2,9,-2,9,2,10,7,-8,-4,2,10,3,5,3,2,-10,-2,8,-1,-8,6,-4,-2,5,-3,-5,-7,8,10,-7,-5,-7,-8,-10,2,4,6,3,10,3,7,8,-8,-5,10,-9,8,3,-10,7,-1,-10,-8,-2,-10,-4,6,-10,-10,1,6,-8,-7,-2,-4,-7,-9,9,-9,-6,7,-6,1,7,1,-5,9,5,2,3,6,10,-8,-5,-1,3,-10,-3,5,4,8,-6,3,-5,1,-3,-9,-4,-4,-3,9,-5,5,10,5,-9,-5,4,-6,-3,6,-6,10,1,9,9,9,7,-9,7,2,9,-1,-7,1,-6,7,1,1,1,5,8,-1,10,-1,-6,-3,2,9,10,1,-8,-7,-8,-2,-10,7,2,10,-10,9,6,2,-5,-9,-10,3,1,-8,10,-9,6,6,-6,10,-9,-3,-10,-3,5,-9,2,-4,4,3,-9,-4,-8,2,9,1,10,3,6,-2,7,7,-5,-4,2,-3,-2,9,9,6,-3,8,-1,-3,8,-10,-1,4,-10,5,6,7,6,7,-7,-5,-10,-6,-5,-7,-8,-6,4,5,8,7,9,-1,-10,-2,1,-1,-10,1,-8,8,5,-3,6,6,7,10,-9,-10,-9,-8,-10,3,-6,7,3,9,3,-1,-1,5,-10,3,3,-8,4,5,7,-3,-4,-10,-8,-7,1,10,-2,-10,-7,2,4,6,-10,-3,-1,-3,-9,-2,-1,9,-8,6,3,4,8,-2,8,4,9,6,-6,-4,1,3,6,6,3,4,5,-6,6,7,7,3,-9,-7,9,9,9,3,-7,9,-8,-4,3,-8,-9,2,-6,-4,-5,9,4,5,3,-9,7,-8,3,2,1,4,6,-10,2,-7,-6,-10,-6,6,-2,-8,4,-8,8,-2,9,-3,-5,-7,-6,3,-1,-4,7,4,6,-2,8,7,7,6,-9,-1,9,-1,-2,-9,-5,-10,5,-4,8,1,-4,-3,-10,-9,6,-3,-9,4,-7,6,7,6,10,5,6,5,6,4,-4,5,4,9,-2,-7,-5,3,-7,-6,-1,-8,-6,-10,10,8,-7,-6,-3,-6,-5,4,-6,-1,-9,3,-5,8,1,-6,2,-4,9,1,4,-4,10,8,8,10,-4,7,1,5,-3,-4,-4,-3,-10,-2,-10,3,8,-8,1,-2,-9,6,-2,4,1,10,8,-8,-6,5,9,-7,-1,1,-1,9,-2,1,-6,-1,7,-2,-5,-5,1,6,-10,-6,8,-3,2,10,-6,10,-10,-1,-2,-1,-5,5,-6,7,6,7,5,-6,1,-3,-8,3,3,2,10,10,10,1,-10,4,-4,-1,-2,-7,2,-3,10,8,-1,9,-6,7,6,-3,-8,2,9,-2,2,-5,-9,7,-4,5,7,-7,2,-10,1,5,-10,3,2,-10,7,9,2,7,10,1,3,2,-1,-4,-6,2,-5,5,4,-2,-3,-7,6,10,6,-5,9,-6,10,3,-8,3,-3,3,-6,-8,-5,-3,-1,-8,8,5,3,-10,-1,10,-9,5,3,-9,10,-7,2,-7,-7,-9,-2,-4,8,-9,-6,-10,-6,-9,10,8,-3,6,-9,10,2,2,-6,1,10,-4,-3,-5,7,5,-10,-9,10,-10,-2,4,10,8,-4,-1,-10,-5,1,-9,-2,6,-9,-8,-2,-7,-9,-8,7,-6,-6,-7,5,-9,-10,5,-3,7,-7,9,1,4,7,10,2,6,6,6,3,-8,-4,-8,-3,6,-8,-9,-3,3,-9,-5,-3,-10,-4,10,2,4,-10,-2,7,-3,5,8,-5,9,3,4,6,-5,-2,2,5,-9,-8,8,-9,10,2,-5,8,2,9,-9,2,7,-3,10,-5,-4,10,-8,-4,-6,-8,-5,2,-8,-3,-5,-3,1,-3,5,-9,-1,-3,-9,-9,5,-3,-2,8,-7,-10,-8,-7,10,-9,10,-4,-9,1,-5,-1,8,1,-1,3,-9,-2,-6,7,3,-1,-6,-3,3,2,-4,8,-9,1,5,-9,7,-3,-4,-8,-6,9,5,8,-4,4,3,10,-9,3,-5,10,8,4,4,9,1,4,10,4,2,3,-1,9,-6,-6,7,-4,9,-6,-9,3,-3,-8,10,-6,-9,10,-2,10,1,10,3,-2,-9,5,3,2,8,-8,1,1,-5,-9,-9,-4,8,8,-7,4,-9,5,-9,-8,6,-5,10,-6,8,3,-8,-8,10,-6,6,-4,-10,-5,-8,8,-10,1,-3,-6,-4,-8,5,-7,-10,3,-4,1,8,5,-10,9,9,10,9,-3,-3,3,7,-5,6,2,-5,-6,-10,8,-5,10,7,6,-7,8,9,10,-3,2,-10,-9,-9,7,-5,1,-2,-6,4,6,2,-1,-5,-7,-5,8,-5,-2,2,-8,-4,1,-2,4,10,7,-4,-4,-9,-7,-2,-2,4,3,-1,4,-10,1,3,-7,-5,-8,-1,8,-3,-6,2,2,-2,-1,-6,10,4,-5,7,2,6,-3,-2,9,-7,-2,5,-4,-9,-1,2,8,-1,2,6,-3,6,1,8,5,9,4,-9,2,-3,-2,4,-8,-4,-4,4,7,3,8,-10,-7,-10,2,9,-7,6,-5,1,5,6,10,-7,2,4,1,2,-10,9,2,-7,10,2,4,-1,-1,-8,-8,7,-5,9,3,-4,-6,9,2,-10,-9,-8,-6,-4,7,-7,9,3,4,-1,-5,-2,-9,10,-6,2,1,-8,10,-3,4,-1,3,-8,-8,-4,4,-6,8,4,6,-7,7,-5,9,-3,-7,7,-8,5,-4,1,-6,2,-10,-5,-4,5,-2,-8,6,6,-8,3,10,4,-6,3,-1,-5,-1,9,-7,-7,-3,-1,-10,4,2,4,5,5,4,-5,-4,5,-3,1,9,10,-6,-10,-8,2,2,-1,5,-8,5,-3,-4,-6,-3,8,6,-1,-8,9,-7,-5,9,6,3,5,7,-9,-4,-7,-2,6,-4,-2,-2,-10,2,-10,3,-6,-9,-6,-7,-7,-8,10,1,9,5,-8,2,7,-5,-6,-10,7,-3,6,-6,5,-5,-5,10,-2,7,3,-1,-3,5,5,2,-7,-2,7,3,-5,6,7,-6,-3,2,-2,8,7,7,-1,5,5,8,-7,-5,-1,2,7], dtype = "uint32")#candidate|5352|(1584,)|const|uint32
call_5350 = relay.TupleGetItem(func_1284_call(relay.reshape(const_5351.astype('float32'), [6, 20]), relay.reshape(const_5352.astype('uint32'), [396, 4]), relay.reshape(const_5352.astype('uint32'), [396, 4]), ), 0)
call_5353 = relay.TupleGetItem(func_1288_call(relay.reshape(const_5351.astype('float32'), [6, 20]), relay.reshape(const_5352.astype('uint32'), [396, 4]), relay.reshape(const_5352.astype('uint32'), [396, 4]), ), 0)
bop_5361 = relay.right_shift(uop_5308.astype('int16'), call_5345.astype('int16')) # shape=(14, 84, 16)
bop_5364 = relay.right_shift(uop_5308.astype('int16'), call_5348.astype('int16')) # shape=(14, 84, 16)
func_1523_call = mod.get_global_var('func_1523')
func_1528_call = mutated_mod.get_global_var('func_1528')
var_5367 = relay.var("var_5367", dtype = "uint16", shape = (672,))#candidate|5367|(672,)|var|uint16
const_5368 = relay.const([7.079325,-9.054637,1.162111,-0.283638,4.414391,4.966311,-7.531019,4.513666,-3.548568,7.524208,4.584504,-3.107742,2.852252,-6.502547,0.676203,-3.510639,-1.604516,-9.506845,6.637588,-0.742026,2.004503,1.619084,-8.797583,9.512023,7.753134,-8.898233,-9.239628,-2.180111,-5.201853,-6.537542,-7.703627,-8.242626,7.004369,-4.630743,0.520807,-3.565165], dtype = "float32")#candidate|5368|(36,)|const|float32
call_5366 = relay.TupleGetItem(func_1523_call(relay.reshape(call_5350.astype('float64'), [8, 14, 12]), relay.reshape(var_5367.astype('uint16'), [672, 1]), relay.reshape(const_5368.astype('float32'), [36, 1]), ), 4)
call_5369 = relay.TupleGetItem(func_1528_call(relay.reshape(call_5350.astype('float64'), [8, 14, 12]), relay.reshape(var_5367.astype('uint16'), [672, 1]), relay.reshape(const_5368.astype('float32'), [36, 1]), ), 4)
bop_5371 = relay.floor_mod(var_5367.astype('float64'), call_5345.astype('float64')) # shape=(84, 672)
bop_5374 = relay.floor_mod(var_5367.astype('float64'), call_5348.astype('float64')) # shape=(84, 672)
bop_5376 = relay.greater_equal(const_5368.astype('bool'), call_5345.astype('bool')) # shape=(84, 36)
bop_5379 = relay.greater_equal(const_5368.astype('bool'), call_5348.astype('bool')) # shape=(84, 36)
func_3416_call = mod.get_global_var('func_3416')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_5396 = relay.TupleGetItem(func_3416_call(relay.reshape(const_5351.astype('float32'), [60, 2]), relay.reshape(const_5347.astype('uint64'), [320,]), ), 5)
call_5397 = relay.TupleGetItem(func_3419_call(relay.reshape(const_5351.astype('float32'), [60, 2]), relay.reshape(const_5347.astype('uint64'), [320,]), ), 5)
output = relay.Tuple([call_5339,var_5340,var_5346,const_5347,call_5350,const_5351,const_5352,bop_5361,call_5366,bop_5371,bop_5376,call_5396,])
output2 = relay.Tuple([call_5341,var_5340,var_5346,const_5347,call_5353,const_5351,const_5352,bop_5364,call_5369,bop_5374,bop_5379,call_5397,])
func_5401 = relay.Function([var_5307,var_5340,var_5346,var_5367,], output)
mod['func_5401'] = func_5401
mod = relay.transform.InferType()(mod)
var_5402 = relay.var("var_5402", dtype = "float32", shape = (14, 1, 16))#candidate|5402|(14, 1, 16)|var|float32
var_5403 = relay.var("var_5403", dtype = "float32", shape = (4, 728))#candidate|5403|(4, 728)|var|float32
var_5404 = relay.var("var_5404", dtype = "uint32", shape = (324,))#candidate|5404|(324,)|var|uint32
var_5405 = relay.var("var_5405", dtype = "uint16", shape = (672,))#candidate|5405|(672,)|var|uint16
output = func_5401(var_5402,var_5403,var_5404,var_5405,)
func_5406 = relay.Function([var_5402,var_5403,var_5404,var_5405,], output)
mutated_mod['func_5406'] = func_5406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_5477 = relay.TupleGetItem(func_4065_call(), 4)
call_5478 = relay.TupleGetItem(func_4067_call(), 4)
func_3443_call = mod.get_global_var('func_3443')
func_3447_call = mutated_mod.get_global_var('func_3447')
var_5484 = relay.var("var_5484", dtype = "float64", shape = (3, 88))#candidate|5484|(3, 88)|var|float64
call_5483 = relay.TupleGetItem(func_3443_call(relay.reshape(var_5484.astype('float64'), [11, 12, 2]), relay.reshape(var_5484.astype('float64'), [11, 12, 2]), ), 0)
call_5485 = relay.TupleGetItem(func_3447_call(relay.reshape(var_5484.astype('float64'), [11, 12, 2]), relay.reshape(var_5484.astype('float64'), [11, 12, 2]), ), 0)
func_5018_call = mod.get_global_var('func_5018')
func_5021_call = mutated_mod.get_global_var('func_5021')
var_5487 = relay.var("var_5487", dtype = "float32", shape = (60, 2))#candidate|5487|(60, 2)|var|float32
var_5488 = relay.var("var_5488", dtype = "uint32", shape = (1584,))#candidate|5488|(1584,)|var|uint32
call_5486 = relay.TupleGetItem(func_5018_call(relay.reshape(var_5487.astype('float32'), [3, 40]), relay.reshape(var_5488.astype('uint32'), [1584,]), ), 3)
call_5489 = relay.TupleGetItem(func_5021_call(relay.reshape(var_5487.astype('float32'), [3, 40]), relay.reshape(var_5488.astype('uint32'), [1584,]), ), 3)
output = relay.Tuple([call_5477,call_5483,var_5484,call_5486,var_5487,var_5488,])
output2 = relay.Tuple([call_5478,call_5485,var_5484,call_5489,var_5487,var_5488,])
func_5497 = relay.Function([var_5484,var_5487,var_5488,], output)
mod['func_5497'] = func_5497
mod = relay.transform.InferType()(mod)
mutated_mod['func_5497'] = func_5497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5497_call = mutated_mod.get_global_var('func_5497')
var_5499 = relay.var("var_5499", dtype = "float64", shape = (3, 88))#candidate|5499|(3, 88)|var|float64
var_5500 = relay.var("var_5500", dtype = "float32", shape = (60, 2))#candidate|5500|(60, 2)|var|float32
var_5501 = relay.var("var_5501", dtype = "uint32", shape = (1584,))#candidate|5501|(1584,)|var|uint32
call_5498 = func_5497_call(var_5499,var_5500,var_5501,)
output = call_5498
func_5502 = relay.Function([var_5499,var_5500,var_5501,], output)
mutated_mod['func_5502'] = func_5502
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5506 = relay.const([[[-3,7,3,2,7,3,3,2,-2,-5,2,9,1,2,-8],[-3,-8,-9,-2,-6,-4,-10,-4,-7,1,1,5,1,5,-5],[10,2,-2,-8,-1,-1,5,2,-4,-8,-2,-6,8,-4,-5]]], dtype = "int16")#candidate|5506|(1, 3, 15)|const|int16
var_5507 = relay.var("var_5507", dtype = "int16", shape = (14, 3, 15))#candidate|5507|(14, 3, 15)|var|int16
bop_5508 = relay.multiply(const_5506.astype('int16'), var_5507.astype('int16')) # shape=(14, 3, 15)
output = bop_5508
output2 = bop_5508
func_5512 = relay.Function([var_5507,], output)
mod['func_5512'] = func_5512
mod = relay.transform.InferType()(mod)
mutated_mod['func_5512'] = func_5512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5513 = relay.var("var_5513", dtype = "int16", shape = (14, 3, 15))#candidate|5513|(14, 3, 15)|var|int16
func_5512_call = mutated_mod.get_global_var('func_5512')
call_5514 = func_5512_call(var_5513)
output = call_5514
func_5515 = relay.Function([var_5513], output)
mutated_mod['func_5515'] = func_5515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4179_call = mod.get_global_var('func_4179')
func_4181_call = mutated_mod.get_global_var('func_4181')
call_5546 = relay.TupleGetItem(func_4179_call(), 1)
call_5547 = relay.TupleGetItem(func_4181_call(), 1)
func_3608_call = mod.get_global_var('func_3608')
func_3611_call = mutated_mod.get_global_var('func_3611')
const_5570 = relay.const([9,8,-2,-3,-6,8,-10,-3,8,-7,6,7,-1,-4,9,9,-1,-7,-7,9,3,3,4,10,-10,5,8,-10,9,5,7,5,2,10,4,3,7,-3,-4,6,-1,-7,-3,9,3,9,8,8,7,1,7,1,2,6,-10,-7,1,9,3,7,3,-7,-1,-3,3,2,-8,6,10,5,2,8,-7,9,-8,-9,-4,2,-1,4,10,6,2,7,3,1,-5,-9,9,-4,6,-5,-10,-6,5,7,-9,-3,-6,-4,-2,4,-5,10,3,-10,-9,-9,-6,-10,-6,-4,1,-5,-8,7,3,9,-4,-3,-5,6,-8,3,-10,4,-1,9,6,10,-3,5,-8,-4,-3,9,-10,4,-10,3,-9,5,5,-3,-10,-4,9,8,2,-10,-9,-7,-4,8,-7,7,5,-7,8,1,4,-10,3,-10,10,-1,9,-7,-8,-10,-5,4,-8,2,2,3,-7,9,-3,-6,-9,1,5,-4,2,-2,10,8,-7,-4,-2,-5,2,-10,2,-7,2,-2,7,-10,9,-5,-7,5,-3,-5,7,-5,-5,-5,2,-10,1,9,-8,-6,-2,4,-8,-5,9,6,-1,5,10,3,-4,-4,6,5,-4,-9,-4,10,-3,2,7,7,3,-6,-4,2,-3,-4,-10,1,10,4,4,-7,-1,10,-9,7,-1,-2,1,4,8,1,7,-6,3,-10,-4,-5,-7,2,-3,5,-10,-8,1,-5,10,-9,-7,3,-4,6,-1,2,7,2,-3,-4,6,-5,6,7,5,2,-2,-1,-9,4,-1,7,-2,-8,8,9,-5,-10,-2,6,3,-9,-4,-1,1,-2,6,8,8,5,9,-9,-6,-5,6,-8,-3,5,-9,-10,-6,1,-10,1,7,4,-8,2,4,4,3,10,-1,3,5,-8,-6,2,10,-5,-7,-4,-4,1,-6,-9,-1,2,5,-9,1,-1,8,6,-9,8,-10,3,9,-3,2,-1,-10,-2,2,-7,-3,-1,-6,-3,-6,2,-1,3,10,-4,-7,-7,2,3,-3,5,3,-8,-1,-3,-10,-6,-2,3,-4,-6,4,7,3,7,4,-5,-10,-7,4,9,-5,-6,-3,-10,-8,7,10,-7,5,2,-8,8,7,-8,-5,6,-5,6,-3,-6,-3,-2,-6,-7,-3,-4,-3,8,6,-3,-6,-3,-3,-8,7,5,6,2,-4,-6,-7,9,-1,-2,-4,9,5,-10,3,3,1,-8,5,10,-1,8,5,8,6,-4,-4,-2,-7,7,10,7,-8,-10,-9,2,-7,7,-10,7,-6,6,-5,9,1,-3,-6,4,-9,4,-7,7,-9,-3,1,2,-2,-7,7,1,2,10,-6,1,-1,1,-3,1,3,10,-3,-1,-5,3,4,1,-8,3,5,7,-1,5,9,8,7,5,-4,-6,3,-10,-3,-3,2,-5,4,-5,2,-10,6,-2,10,5,-4,-3,-10,5,4,4,-6,4,-3,-4,9,-6,4,7,7,-9,5,-9,-5,-10,-2,6,5,7,-1,5,-5,-4,-10,4,-5,8,5,6,-2,2,1,10,-9,6,-8,-9,-3,-3,-6,-2,-9,4,10,5,-4,-3,-4,1,-2,3,-7,2,-5,-2,-3,5,-7,-8,-7,-6,-8,6,-4,5,-3,5], dtype = "int64")#candidate|5570|(616,)|const|int64
call_5569 = relay.TupleGetItem(func_3608_call(relay.reshape(const_5570.astype('int64'), [11, 7, 8])), 0)
call_5571 = relay.TupleGetItem(func_3611_call(relay.reshape(const_5570.astype('int64'), [11, 7, 8])), 0)
func_1584_call = mod.get_global_var('func_1584')
func_1587_call = mutated_mod.get_global_var('func_1587')
const_5579 = relay.const([[8.648078,1.089201,-9.855883,0.329689],[5.523791,-0.280685,8.871646,8.132918],[-1.036422,-3.606034,4.276662,6.302862],[-6.076421,7.879066,-8.724867,-6.917368],[-5.713109,2.172918,0.572420,-0.686789],[5.567461,-5.628954,-0.150291,-0.425324],[2.886681,6.333353,6.871010,9.944429],[2.547258,-6.499835,-1.214971,3.901517],[-3.488731,-7.026872,-7.897569,-3.271841],[0.741129,-2.750091,-6.140467,-6.901872],[3.956953,-3.858152,-1.622092,-8.364570],[-4.154995,-3.678523,0.861296,4.575531],[-3.866847,-7.394582,-7.484561,-3.955784],[8.793779,-0.263647,1.989789,8.417763],[-4.449042,3.778613,0.526503,8.850906],[-8.976616,6.736427,6.964715,3.844055],[-8.431933,-9.837686,-4.316505,-4.589932],[-2.796816,0.241738,2.953789,-7.241077],[-8.676181,7.771912,-3.554515,-3.252233],[-2.488520,-8.320544,-1.237964,6.229765],[3.303831,-9.242572,-6.417903,5.106728],[8.657077,-1.318936,-8.360606,-4.888837],[-6.865876,-9.922141,-3.932692,4.012372],[-1.754128,4.114095,3.052734,3.508719],[-5.854572,-5.672350,-0.316132,4.624913],[-7.159180,8.500590,4.014531,5.203563],[7.196674,-0.487913,-3.005382,-2.309369],[7.717846,-7.530285,-0.447025,-1.883473],[9.621651,7.039574,-4.839138,8.397986],[-5.141293,8.352982,-8.425603,7.706446]], dtype = "float32")#candidate|5579|(30, 4)|const|float32
call_5578 = relay.TupleGetItem(func_1584_call(relay.reshape(const_5579.astype('float32'), [120,])), 3)
call_5580 = relay.TupleGetItem(func_1587_call(relay.reshape(const_5579.astype('float32'), [120,])), 3)
func_3924_call = mod.get_global_var('func_3924')
func_3926_call = mutated_mod.get_global_var('func_3926')
call_5585 = relay.TupleGetItem(func_3924_call(), 0)
call_5586 = relay.TupleGetItem(func_3926_call(), 0)
uop_5588 = relay.log(const_5579.astype('float32')) # shape=(30, 4)
var_5596 = relay.var("var_5596", dtype = "float32", shape = (30, 4))#candidate|5596|(30, 4)|var|float32
bop_5597 = relay.bitwise_or(uop_5588.astype('int64'), relay.reshape(var_5596.astype('int64'), relay.shape_of(uop_5588))) # shape=(30, 4)
bop_5608 = relay.minimum(bop_5597.astype('int32'), relay.reshape(const_5579.astype('int32'), relay.shape_of(bop_5597))) # shape=(30, 4)
func_1010_call = mod.get_global_var('func_1010')
func_1014_call = mutated_mod.get_global_var('func_1014')
const_5612 = relay.const([-3.377052,2.707164,8.903120,1.175060,3.532789,-8.656792,-6.679620,3.304959,-3.408818,-3.325967,-4.488351,1.270053,9.703848,6.212393], dtype = "float64")#candidate|5612|(14,)|const|float64
const_5613 = relay.const([-3.759288,-6.609080,9.281850,-4.761383,1.956061,2.740229,1.574884,-8.201038,1.489284,7.310731,-5.940262,-0.568739,-7.451410,-9.409324,-4.330625,2.684170,-5.439180,-7.241129,2.277984,-0.725649,9.811501,-1.930342,-0.798863,-9.981452,-9.601088,7.186626,-9.691047,-3.796371,0.089540,-8.246667,-5.424284,-1.202063,-4.548178,-4.161632,9.351427,-0.391973,-8.005399,-3.865566,-8.440815,9.052427,-6.425293,1.014611,-3.036351,9.408313,-2.631781,-9.345324,-7.912654,2.978408,2.972170,-2.902367,-7.489768,-0.317271,-8.523496,6.602608,1.702111,7.773933,-8.074485,9.412932,-2.756101,-8.043606,-2.741198,0.411881,-4.564096,1.554002,6.104100,-3.046985,2.545624,-1.954424,6.366346,-4.827597,-0.960529,-1.263651,-3.961932,-6.131437,5.068805,8.368244,9.741959,-5.125830,9.381079,2.120977,2.561992,-5.790240,-1.248534,-0.824416], dtype = "float64")#candidate|5613|(84,)|const|float64
var_5614 = relay.var("var_5614", dtype = "uint64", shape = (320,))#candidate|5614|(320,)|var|uint64
call_5611 = relay.TupleGetItem(func_1010_call(relay.reshape(const_5612.astype('float64'), [2, 1, 7]), relay.reshape(const_5613.astype('float64'), [2, 6, 7]), relay.reshape(var_5614.astype('uint64'), [320, 1]), ), 0)
call_5615 = relay.TupleGetItem(func_1014_call(relay.reshape(const_5612.astype('float64'), [2, 1, 7]), relay.reshape(const_5613.astype('float64'), [2, 6, 7]), relay.reshape(var_5614.astype('uint64'), [320, 1]), ), 0)
func_5497_call = mod.get_global_var('func_5497')
func_5502_call = mutated_mod.get_global_var('func_5502')
const_5617 = relay.const([-8.060972,-7.361714,-8.366599,9.000879,-7.910717,3.829513,9.096812,2.742783,-0.449417,-5.285054,0.356899,2.038427,7.343290,-9.280383,7.326936,6.235651,-8.429565,-3.894853,1.732450,-2.434079,0.762295,-9.497671,-7.314503,-7.360092,7.497875,-8.094633,-8.951930,-0.773595,-2.757281,-6.379457,-2.975587,7.007572,3.807339,2.579215,4.216353,-9.730431,7.706857,8.143069,0.416470,-2.472955,-2.625819,1.065008,4.718224,-6.032920,-9.910581,8.344411,-7.928845,5.110689,6.169640,-5.793892,-0.661979,1.845860,1.910058,9.518322,-5.826480,-3.193620,-0.376792,7.231113,7.172001,1.394632,7.087182,-4.124996,-2.545330,5.877403,-7.961533,-7.109839,7.301658,-8.082863,1.848182,7.215705,-6.536080,-9.003502,6.430247,-4.525252,-1.239552,-4.008619,-7.475488,8.724967,-9.145891,-2.064134,8.926463,2.541131,-6.559326,8.304427,-8.291354,-5.192899,-8.678015,4.959660,-4.995028,-0.027040,-9.014387,-5.783698,0.709163,0.210018,6.352722,-3.438976,-5.215028,1.243929,-5.331538,-0.130087,4.444095,2.004606,-7.194828,1.230706,-4.858068,0.069055,-8.288530,6.455562,4.654176,4.562868,3.895269,7.699547,5.441902,-3.811773,-9.267981,-9.968169,4.321697,7.863389,1.761910,5.306222,9.281077,-4.539934,-5.495438,0.665418,-3.051276,-3.579507,9.315725,9.253909,-1.667914,-9.142326,3.964887,-6.058565,-9.670444,-6.312143,-3.468068,5.038781,-4.624313,3.417051,5.970134,-0.970920,3.037540,0.857112,2.584250,-1.723540,5.394472,-1.930784,2.042763,4.851431,-0.809474,6.717571,1.829987,-0.469394,-8.648413,9.176651,3.498693,3.203241,-6.965872,8.804706,-8.057017,-8.345327,-8.925360,-0.751723,7.464174,8.942098,8.525184,8.110647,2.516618,-0.104077,0.989317,4.733039,2.157022,-2.984073,-2.802606,6.096423,6.650270,-6.068842,-8.219400,1.489841,-2.080715,-6.619571,-2.444731,4.195510,7.296972,1.267383,9.896280,4.499941,-8.059223,-0.470107,2.190583,5.697150,5.420794,-0.001804,-1.335575,-7.989018,-7.277021,-6.824542,-2.350253,-8.519403,7.796050,-8.305732,0.832143,9.878121,3.988390,-2.307463,-7.208627,1.927004,8.623921,4.583346,-5.212372,-3.651948,-4.670172,9.663532,-4.975984,9.588070,5.287640,-9.557483,7.659321,-6.768037,-0.857173,-2.352866,-3.158126,-6.287643,1.878295,1.400191,5.118827,1.548339,-2.521053,-4.229113,-0.249118,-1.512857,-2.100289,-4.966421,2.038272,-1.893728,4.056790,-3.509771,6.616346,1.440663,-1.128800,-0.829767,9.298259,-5.314170,-6.267435,-1.594841,-8.444673,-3.432167,-1.206835,-8.775237,-7.511504,6.755237,0.919508,3.055996,-9.241860,-3.795636,-6.782327,2.872988,-6.138928,2.907290,-0.090862,9.790496,0.557186,7.370935,0.087786,2.285569], dtype = "float64")#candidate|5617|(264,)|const|float64
const_5618 = relay.const([[2,-10,8,1,-10,1,8,-6,8,10,5,2,-6,-3,-2,6,7,-2,9,-1,10,-7,-7,9,-10,-3,-10,7,1,10,3,7,3,2,-3,-1,4,1,10,7,10,-6,-5,4,-5,1,-2,5,-8,-7,4,3,-5,-1,4,-6,-8,-3,-7,10,3,1,10,3,5,-10,-10,-6,5,2,5,-4,-2,7,3,-3,-1,-4,-10,-10,8,5,10,5,-9,7,-4,-9,7,6,-5,8,1,6,8,-8,5,6,-5,3,5,9,2,-6,6,-10,-10,7,-2,-5,-1,9,-4,-1,6,-2,5,-10,1,-7,9,10,-10,3,1,2,-10,-6,-6,3,3,2,-1,7,10,1,-3,-1,9,3,-1,-2,8,5,-6,-7,-6,-7,3,8,-9,-7,9,5,9,8,5,-10,9,-10,-4,4,-7,-6,6,-6,-7,7,-10,-6,10,-8,3,1,-1,-6,7,-6,10,5,-10,-1,5,-2,10,-3,-9,7,-10,5,9,-8,-1,9,8,9,6,-2,-10,5,10,10,2,5,-6,-5,4,-1,8,8,3,-4,9,-1,10,-7,-7,-2,-6,1,9,-7,1,-8,8,-5,-3,-4,-4,-1,3,7,-7,-1,7,-5,9,-7,-1,-9,1,2,4,-8,10,-5,7,5,2,-9,9,3,-7,10,7,7,-5,6,2,10,-3,-5,8,8,-7,6,8,-7,2,-3,7,9,-8,1,-8,1,5,-6,7,2,-9,-3,-10,6,-6,-2,-8,4,7,5,6,1,-4,-6,-10,-7,7,-10,8,8,4,6,-3,5,6,7,5,-7,6,-10,-2,-7,-6,-5,-2,10,-2,-5,9,-7,1,-8,4,5,-9,-6,3,7,10,-6,4,8,2,-5,5,-7,7,-5,1,3,-7,10,-4,-9,-8,1,-3,-9,10,6,-7,-4,-8,-7,6,-10,3,-5,6,5,1,7,-3,-8,2,10,9,-4,-10,-6,3,1,6,4,10,-6,-3,4,9,1,-8,-1,-5,-3,-7,3,-7,-5,10,4,9,4,3,8,-2,5],[9,4,-2,9,6,-9,-8,-5,-6,-2,-9,6,2,5,-2,3,-6,-5,6,10,-8,4,-5,-4,-7,7,3,-7,-9,1,3,-5,1,-9,-6,8,10,-9,2,-8,-2,-7,8,1,8,-9,4,-10,-3,-3,-10,4,6,4,1,-8,-7,-7,3,-2,-10,2,4,10,-2,8,-7,-1,8,-10,7,1,7,9,-7,-10,2,2,3,7,6,-9,-10,7,-8,-6,-9,9,8,-5,-8,2,9,8,-6,9,-10,9,1,-9,-3,3,5,-5,7,8,8,-7,-5,-1,10,5,10,-2,-9,7,-8,-1,2,6,9,7,5,4,-9,-1,5,-10,1,4,-5,-10,-3,5,-7,5,4,-3,5,7,10,-4,-5,10,6,-5,-6,5,-6,-5,1,10,3,4,-9,-4,10,-6,2,-2,9,-1,-10,6,-7,10,-4,-3,2,-7,-10,-3,-6,-9,6,-9,7,-2,4,-7,-1,-9,5,-4,-1,1,-9,-4,-5,7,4,-6,4,10,-6,-1,3,-5,-1,-7,-7,4,3,5,10,-9,6,5,-1,-9,3,-7,-9,-5,1,-1,-2,-6,-2,5,5,-4,7,-2,-6,9,-1,4,-1,10,-2,-2,-5,-1,1,1,-10,-6,6,-9,-9,10,7,1,4,1,4,2,2,-8,-9,-9,-4,10,-5,10,9,5,5,-5,-1,5,-8,5,-10,4,-2,10,8,-5,1,8,-7,-6,-10,3,7,-7,5,-6,-4,6,-3,-3,-8,-5,-6,-9,-5,7,-5,-9,8,-9,7,-10,6,-9,2,-2,-10,9,2,-9,2,4,-6,-2,-8,-7,-6,8,-1,-3,-8,-3,-5,-4,-2,-2,9,-4,9,-9,-8,-4,3,8,-8,7,9,-6,-4,-9,-5,3,-9,9,2,6,4,4,-1,-1,5,-7,-10,9,5,-2,-1,6,-1,-9,-5,-3,-3,6,1,-3,7,-3,4,5,-9,10,4,-9,3,8,-1,8,-1,-9,2,-3,3,8,-7,5,-9,-6,-2,-8,3,4,-10,-9,7,-5,2,-9,-3,10,-1,-6],[1,3,-6,-2,-8,2,-9,9,9,-6,-2,-3,4,-5,-10,5,-2,9,-1,5,-7,7,8,-3,-2,7,4,8,-3,4,3,-7,10,-1,6,10,4,1,-5,-8,-3,-10,-5,6,-1,-3,10,7,5,2,-5,7,2,-1,10,6,4,-10,-4,9,7,-10,-4,-8,5,2,-4,1,-5,-5,-2,8,-8,-7,7,10,7,-2,4,-2,9,1,3,9,4,4,-6,-4,-3,9,-4,-3,-8,4,4,-3,9,6,5,1,3,5,-10,-6,-7,-2,-5,-4,9,-4,-3,7,8,6,-1,3,2,5,-7,4,9,7,-10,-6,-10,-3,-7,8,4,-9,1,-2,9,5,-10,2,-5,-3,1,-6,-10,-5,-7,-2,-7,9,4,10,-9,-9,-6,-8,1,5,-3,-2,-8,-9,2,-10,-2,-8,10,-2,-5,-8,4,-1,9,5,-5,-4,8,9,-7,-10,6,7,-7,5,-10,4,-10,6,-9,3,10,8,-3,7,-4,8,4,-7,4,5,-4,-5,2,-6,-4,6,8,-1,10,10,-4,5,-6,1,4,-2,-2,5,-10,-6,9,6,7,8,-7,1,-9,-1,7,-2,5,1,3,-1,6,5,1,-5,-1,6,-3,9,-1,6,-10,1,4,-3,8,8,-3,-1,4,-3,-9,5,3,-4,4,-4,-8,-2,-7,-9,-8,8,10,6,-5,3,9,8,1,6,-3,4,5,6,-10,6,-2,9,-4,-7,5,7,-7,-8,8,-6,4,6,3,-1,9,-10,2,4,-6,6,-3,7,-9,-8,9,-10,3,4,10,-8,-5,-1,-10,4,7,9,-5,10,1,1,-2,-5,-8,3,-6,-8,-1,-1,-5,-7,7,4,2,5,4,5,10,-10,-9,-8,-4,-10,-9,-6,-6,-9,-10,-4,-9,-8,-9,-6,3,7,1,-8,4,-1,-7,-7,1,5,-1,6,9,10,6,-5,3,10,-9,-10,4,-6,-8,3,1,1,-6,9,-10,5,4,-5,-4,-5,-1,6,6,-6,4,-6,-7,6,-5,-1,3,-2,-6,8],[-10,-2,7,6,-9,10,2,-10,-6,-2,-1,-7,-9,-3,-4,6,3,-6,-6,-4,5,-10,-3,-3,7,1,8,-2,6,5,-6,5,9,-10,4,-9,1,3,10,-2,-3,6,-10,10,6,6,-6,-3,-2,1,-8,-4,-2,2,5,10,6,1,4,2,9,-2,-10,-2,-8,2,-3,-5,-5,4,3,-10,-10,7,-2,-4,10,8,10,4,-10,8,-3,6,-1,10,6,3,8,-10,10,1,-9,-9,8,-1,-2,-2,1,4,2,-6,-1,6,10,2,-9,1,4,7,5,-10,4,-3,2,6,1,-2,-2,4,4,1,8,9,4,-4,5,-8,-6,5,10,9,3,8,10,7,-7,-7,-2,7,-4,5,-4,6,5,5,-3,9,-8,3,-8,-1,-1,-9,5,-9,6,-6,-8,-10,6,-8,-10,8,5,-5,2,-5,-6,-7,10,-8,1,-9,-8,2,2,4,-1,1,4,7,4,10,-6,-1,-3,5,4,-3,-2,-8,-8,-10,5,-3,7,-6,1,1,2,-6,-10,1,6,8,-10,4,-9,5,6,-2,7,6,-3,-7,-10,2,-5,-5,8,9,-10,-7,7,-2,1,4,1,8,-8,10,8,-7,6,4,-5,-3,-5,-1,-4,3,-8,-5,-8,4,-8,3,8,-10,2,-10,4,2,-6,2,-8,7,-4,5,-5,-8,-3,10,-3,-6,4,-1,-9,-10,10,5,6,3,4,2,9,4,-2,-3,-7,-9,-7,9,-7,-3,8,-4,1,6,5,5,-9,6,-5,8,2,-1,2,-8,-7,-6,8,1,7,-5,5,-8,8,10,5,-3,7,-7,-4,-8,6,7,-3,-5,8,-5,-9,9,-7,1,7,10,-10,3,-1,-6,-4,-3,3,-7,6,-4,-5,2,-2,-5,-9,-2,-1,2,5,-1,10,6,-9,-4,7,2,1,-3,1,1,-2,-8,8,-4,-7,-2,8,10,-2,-4,2,-10,-4,-5,2,4,1,-6,-1,9,-7,6,-8,-5,-3,-1,9,-8,-8,-7,-1,6,-2,-10,-5,2,2,1]], dtype = "uint32")#candidate|5618|(4, 396)|const|uint32
call_5616 = relay.TupleGetItem(func_5497_call(relay.reshape(const_5617.astype('float64'), [3, 88]), relay.reshape(const_5579.astype('float32'), [60, 2]), relay.reshape(const_5618.astype('uint32'), [1584,]), ), 0)
call_5619 = relay.TupleGetItem(func_5502_call(relay.reshape(const_5617.astype('float64'), [3, 88]), relay.reshape(const_5579.astype('float32'), [60, 2]), relay.reshape(const_5618.astype('uint32'), [1584,]), ), 0)
bop_5622 = relay.multiply(uop_5588.astype('int32'), relay.reshape(const_5579.astype('int32'), relay.shape_of(uop_5588))) # shape=(30, 4)
var_5625 = relay.var("var_5625", dtype = "float32", shape = (30, 4))#candidate|5625|(30, 4)|var|float32
bop_5626 = relay.equal(uop_5588.astype('bool'), relay.reshape(var_5625.astype('bool'), relay.shape_of(uop_5588))) # shape=(30, 4)
func_1398_call = mod.get_global_var('func_1398')
func_1399_call = mutated_mod.get_global_var('func_1399')
call_5629 = func_1398_call()
call_5630 = func_1398_call()
func_4179_call = mod.get_global_var('func_4179')
func_4181_call = mutated_mod.get_global_var('func_4181')
call_5631 = relay.TupleGetItem(func_4179_call(), 1)
call_5632 = relay.TupleGetItem(func_4181_call(), 1)
output = relay.Tuple([call_5546,call_5569,const_5570,call_5578,call_5585,bop_5608,call_5611,const_5612,const_5613,var_5614,call_5616,const_5617,const_5618,bop_5622,bop_5626,call_5629,call_5631,])
output2 = relay.Tuple([call_5547,call_5571,const_5570,call_5580,call_5586,bop_5608,call_5615,const_5612,const_5613,var_5614,call_5619,const_5617,const_5618,bop_5622,bop_5626,call_5630,call_5632,])
func_5651 = relay.Function([var_5596,var_5614,var_5625,], output)
mod['func_5651'] = func_5651
mod = relay.transform.InferType()(mod)
var_5652 = relay.var("var_5652", dtype = "float32", shape = (30, 4))#candidate|5652|(30, 4)|var|float32
var_5653 = relay.var("var_5653", dtype = "uint64", shape = (320,))#candidate|5653|(320,)|var|uint64
var_5654 = relay.var("var_5654", dtype = "float32", shape = (30, 4))#candidate|5654|(30, 4)|var|float32
output = func_5651(var_5652,var_5653,var_5654,)
func_5655 = relay.Function([var_5652,var_5653,var_5654,], output)
mutated_mod['func_5655'] = func_5655
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5683 = relay.constdtype = "float32")#candidate|5683|(9, 16, 15)|const|float32
uop_5684 = relay.acos(const_5683.astype('float32')) # shape=(9, 16, 15)
func_3328_call = mod.get_global_var('func_3328')
func_3333_call = mutated_mod.get_global_var('func_3333')
var_5701 = relay.var("var_5701", dtype = "float32", shape = (120,))#candidate|5701|(120,)|var|float32
const_5702 = relay.const([1,-5,9,-7,-8,-2,-5,-4,-1,-10,-2,-7,-6,4,-2,-6,-8,-9,-1,-1,-3,1,-5,-5,-5,3,-7,8,1,3,10,-6,8,-7,-4,-2,-1,-4,-8,-5,1,-2,6,2,-3,1,-2,-2,-4,3,-7,-6,-8,5,9,-8,-7,1,-10,3,7,7,-2,-4,-7,-6,-2,3,5,5,-9,4,-3,9,7,-9,7,8,6,-8,8,9,8,-7,9,5,-5,4,-4,-5,7,7,-3,-1,-4,-4,-3,-2,5,4,-3,4,7,-10,-2,-2,-1,1,2,3,-3,10,-1,8,4,-2,8,9,-3,-6,3,4,-5,-10,-8,-4,-1,8,-9,-8,6,-1,5,2,8,6,6,-7,-6,-1,-1,7,1,6,2,2,5,4,5,9,-4,5,7,-4,-3,7,-9,-8,10,10,-9,9,8,-3,9,-6,-8,-6,5,8,-4,1,-9,-4,2,-10,6,4,-3,7,-10,-9,-4,-3,-5,-8,-6,-4,10,4,4,3,-5,6,-6,2,-7,-6,7,1,-2,3,-8,3,-9,-9,2,4,1,-7,-4,2,-1,-2,8,2,-2,8,-6,-9,-1,-5,-2,-2,1,-9,8,4,-10,10,10,9,-9,-2,-9,7,9,5,-2,-6,6,-8,9,-6,8,8,-9,8,6,-2,-10,7,2,-3,-8,-9,-4,-9,-9,-1,-10,-7,-8,7,-6,10,-8,7,8,-6,9,-1,2,-6,-2,2,-8,10,-3,-9,-4,6,8,3,5,4,-5,-9,-2,2,3,-7,10,-6,-4,3,-4,1,-2,7,4,-1,4,-9,-8,2,4,2,-7,-8,-3,-1,8,8,6,7,-7,-10,10,-9,2,-10,9,2,-2,6,-3,-10,-9,-3,4,-7,-10,-1,-8,-1,-2,-7,-4,-6,1,-2,9,5,2,4,-8,6,10,10,-8,8,-3,2,6,-4,1,3,-9,9,8,7,6,6,3,-4,7,2,9,-7,-1,3,-8,2,-7,-9,6,-1,-1,8,4,-4,6,-3,7,9,1,-10,10,-8,-4,-2,-5,3,-1,-8,5,-8,-8,-5,10,-5,-9,2,8,6,7,2,-10,-7,-8,-8,7,-5,4,7,5,7,-6,3,8,-6,5,8,5,-8,8,-7,1,-7,-1,1,8,-9,-4,10,2,-9,-6,-4,-10,-5,10,5,-5,8,-1,-1,6,5,2,4,-5,-3,-9,3,1,10,-9,1,-7,9,8,7,2,4,1,-10,-10,-9,-9,-8,8,10,-3,3,-1,-10,-6,3,-2,4,6,2,-6,-4,-1,3,-2,-1,7,-7,-8,-9,5,-2,10,2,9,-3,3,8,-2,5,8,-9,10,3,-4,-2,-4,-5,10,2,1,2,3,-10,-5,-8,-1,-5,-4,8,-1,-6,7,-1,1,4,-7,6,8,-4,2,-3,-9,-3,9,1,-4,-4,10,-7,7,3,-10,5,-6,1,2,-1,6,-6,-7,-2,-3,3,-10,-4,-2,2,-5,-9,7,-1,6,2,7,-5,-4,-7,-5,-2,-9,-3,-3,-2,-5,1,1,-3,-3,-8,-2,5,4,-6,-10,-4,-5,1,-4,-6,4,-1,9,-1,-10,3,4,1,-9,6,5,10,7,-10,6,1,5,-2,-7,-7,6,8,-7,9,-6,-7,5,1,-1,-4,-8,5,-7,8,-4,1,-6,-9,10,10,2,-6,-7,8,9,4,-9,1,-8,1,5,-3,3,-5,-9,-8,4,-8,3,8,-10,-9,1,-6,-8,-2,-9,3,6,-6,7,-8,9,2,3,-6,-2,3,-7,-4,-6,-8,-3,8,1,6,9,8,1,-2,2,1,-2,-7,3,-4,10,-5,-4,-4,-6,-4,-6,3,-4,4,-2,10,-1,-5,-10,5,-2,5,-3,5,-1,6,-3,5,-5,-3,-5,-1,2,1,6,4,-6,3,9,-3,-7,6,-10,-9,-9,2,-5,-8,-10,9,-7,-1,3,4,-4,-10,6,2,6,-8,4,-9,-2,6,-10,-5,9,9,4,3,10,10,9,1,3,-2,-9,6,2,3,-10,-8,-6,2,-10,-7,-10,6,9,5,-7,9,-10,7,-10,3,-1,-10,5,9,8,-8,3,8,-3,5,1,-6,-2,2,-5,3,-5,-5,8,-8,9,5,-1,-7,-7,4,6,-1,-5,2,8,-6,-10,-3,-4,-5,6,7,4,-2,6,-10,-8,-1,-4,4,8,-6,10,7,10,-7,3,-6,7,9,-5,-6,-2,7,1,1,-9,8,-6,-3,6,-5,-5,-7,10,-8,6,8,-2,-7,4,4,5,-3,8,9,8,-2,-4,5,-6,-9,-6,2,9,3,-9,7,9,-7,7,-1,-8,8,-6,8,-4,4,-3,8,-8,-5,7,3,5,-5,3,-9,-10,7,-8,6,3,1,-8,7,-1,-5,8,4,-9,8,-4,-7,4,10,10,-5,10,8,-7,6,-9,4,-10,-1,-7,2,-5,-8,2,2,-8,2,3,5,-5,7,1,-1,2,-1,10,2,2,-4,-10,6,-1,5,10,-5,-1,1,4,7,4,4,-3,7,8,2,8,-7,8,-5,2,-5,10,6,-8,9,1,5,-4,3,-6,10,-3,-2,-9,-1,-5,-5,-4,1,4,-3,-5,-2,5,-1,-10,-4,9,6,-3,2,-5,6,-8,1,-9,10,5,3,7,10,8,-10,9,7,-5,1,6,9,-4,-9,-5,7,10,1,-7,-5,-2,-1,1,3,7,-7,-3,8,-7,10,-5,-5,10,-2,-4,9,-2,-8,-8,-10,-9,9,-5,9,5,7,8,-7,-7,-5,-8,10,-5,-4,1,10,-2,2,-10,-1,-2,-5,10,1,2,10,-10,-1,-9,10,10,-8,10,2,-10,-5,1,5,3,-9,-9,5,9,4,1,-6,5,5,-7,-7,10,-1,1,2,-1,-9,10,-10,1,7,-2,-5,10,-2,7,-3,-1,-7,10,6,-2,2,8,3,7,-3,4,6,10,-10,-9,-3,7,3,-1,9,-4,7,2,-5,-9,-8,6,8,3,-2,-3,3,9,7,6,5,-6,6,-10,7,-7,6,-8,-1,2,-3,10,-5,3,9,10,1,-4,-4,-6,-8,5,-8,6,-5,-3,-5,6,2,-4,1,2,-1,-7,-5,-5,7,4,-4,7,1,10,2,8,7,4,-9,8,-5,5,7,10,2,1,6,-7,-7,5,-7,5,8,-2,8,-6,-6,-2,3,-8,7,2,7,-2,-10,-6,-1,-1,-10,3,6,2,10,-6,7,-9,3,-10,5,-5,-9,2,-1,9,7,-1,3,4,7,-8,5,-9,-1,9,10,-10,6,-3,4,-8,5,-5,-3,2,10,4,-9,4,-1,7,10,4,-9,2,-8,6,2,-2,10,-6,-5,-6,3,-6,6,10,1,9,-1,-3,1,-4,1,-9,9,-1,-6,-1,-8,5,-2,-9,1,1,9,2,-3,7,10,5,1,-6,-5,-8,-5,9,10,-10,-6,-4,5,8,-4,-2,-1,6,2,-1,-10,-10,-1,-2,-4,5,-3,6,-7,-6,9,5,-4,4,-4,1,-3,1,-9,-7,7,-7,-3,8,9,-10,3,-10,8,-3,8,-8,-6,-5,4,-1,5,9,1,7,3,-10,-7,-3,6,-9,1,-5,8,3,-3,-1,10,-6,9,-1,-5,1,1,6,4,-2,-5,-2,-7,5,7,8,-7,-8,-2,-3,10,-8,1,-6,1,8,5,1,2,1,3,7,-6,8,-4,4,6,4,-7,-10,10,-8,-7,6,8,-9,9,-3,-2,2,4,1,1,7,8,8,-7,-3,-9,4,-8,-8,-2,1,-2,2,-10,-5,-8,1,-2,-2,-7,-3,-5,2,3,-8,1,-9,-2,-10,-1,5,9,-5,-5,10,-1,-8,2,-10,2,-10,-7,7,-9,6,-1,-1,-7,1,-3,-7,6,1,-9,-4,8,3,2,-7,-6,3,3,6,-10,5,-10,8,-8,-7,-1,-8,-7,-4,-3,-2,-3,-4,8,-6,1,-2,4,8,-10,-8,7,9,1,3,-4,2,-7,-2,10,-5,-9,-1,-8,6,-3,-6,2,-4,-9,-6,-9,10,5,-5,10,-4,-7,-4,4,-3,-6,-9,4,-1,10,6,6,-7,8,5,-2,-8,6,3,4,10,5,-10,5,-2,1,-6,3,-9,3,-6,-5,-3,-10,4,2,-6,7,6,7,9,-5,4,-6,9,-7,6,1,6,8], dtype = "uint32")#candidate|5702|(1584,)|const|uint32
const_5703 = relay.const([-5,-9,-7,4,-4,-4,8,8,-1,5,2,-3,-3,-4,10,-10,-2,-9,5,-3,-8,9,4,-10,-2,6,-6,-9,-9,-9,4,-6,-10,5,10,-6,6,-4,1,-9,1,-9,6,8,-2,-8,8,-3,1,-6,10,1,5,8,1,3,5,-1,-1,-8,-5,9,10,-4,2,4,-1,-9,2,4,-5,5,10,-2,-6,2,-7,-7,-3,-10,10,-10,-8,-7,6,-4,-10,-10,-7,-1,-3,4,-6,-8,1,-5,-3,2,-3,4,2,-10,-8,-5,5,8,1,-9,-5,5,7,7,-6,-1,-7,6,-2,-4,-9,5,-6,-3,7,1,8,-5,7,-5,10,2,1,-7,-6,-5,-1,-10,-5,2,-2,-3,-1,7,2,-3,-8,-10,-4,-1,-9,5,7,6,8,-4,-3,3,5,3,10,2,2,-6,-10,-7,3,10,9,4,4,-8,-4,2,-10,1,-3,-7,-4,1,2,-6,10,-7,-1,-6,10,3,-4,-5,10,-4,8,7,-6,9,-6,3,10,7,-2,8,9,-5,-6,7,8,-10,7,-10,8,3,4,-2,-7,-6,1,8,-5,3,5,9,5,10,9,-7,1,10,7,8,10,2,7,-3,2,4,-10,-1,-2,-9,2,7,7,9,-1,9,-2,-5,10,1,-6,1,8,10,-2,-1,4,-10,-7,-6,-7,-10,-5,-7,-4,7,3,-5,8,3,4,-8,5,-1,6,-1,-2,3,-9,-2,-9,3,7,-5,3,6,-5,8,-2,-2,-6,-3,-5,8,7,7,9,9,9,-10,5,2,10,-10,8,-3,7,5,-4,-6,-2,-8,4,-4,1,-7,-10,6,8,-4,-10,-3], dtype = "uint64")#candidate|5703|(320,)|const|uint64
call_5700 = relay.TupleGetItem(func_3328_call(relay.reshape(var_5701.astype('float32'), [120,]), relay.reshape(const_5702.astype('uint32'), [12, 132]), relay.reshape(const_5703.astype('uint64'), [320,]), ), 1)
call_5704 = relay.TupleGetItem(func_3333_call(relay.reshape(var_5701.astype('float32'), [120,]), relay.reshape(const_5702.astype('uint32'), [12, 132]), relay.reshape(const_5703.astype('uint64'), [320,]), ), 1)
func_1584_call = mod.get_global_var('func_1584')
func_1587_call = mutated_mod.get_global_var('func_1587')
call_5705 = relay.TupleGetItem(func_1584_call(relay.reshape(call_5700.astype('float32'), [120,])), 5)
call_5706 = relay.TupleGetItem(func_1587_call(relay.reshape(call_5700.astype('float32'), [120,])), 5)
func_3868_call = mod.get_global_var('func_3868')
func_3869_call = mutated_mod.get_global_var('func_3869')
call_5708 = func_3868_call()
call_5709 = func_3868_call()
bop_5715 = relay.left_shift(uop_5684.astype('uint32'), relay.reshape(const_5683.astype('uint32'), relay.shape_of(uop_5684))) # shape=(9, 16, 15)
var_5738 = relay.var("var_5738", dtype = "float32", shape = (6, 20))#candidate|5738|(6, 20)|var|float32
bop_5739 = relay.multiply(call_5700.astype('float32'), relay.reshape(var_5738.astype('float32'), relay.shape_of(call_5700))) # shape=(6, 20)
bop_5742 = relay.multiply(call_5704.astype('float32'), relay.reshape(var_5738.astype('float32'), relay.shape_of(call_5704))) # shape=(6, 20)
func_2172_call = mod.get_global_var('func_2172')
func_2173_call = mutated_mod.get_global_var('func_2173')
call_5747 = relay.TupleGetItem(func_2172_call(), 0)
call_5748 = relay.TupleGetItem(func_2173_call(), 0)
output = relay.Tuple([var_5701,const_5702,const_5703,call_5705,call_5708,bop_5715,bop_5739,call_5747,])
output2 = relay.Tuple([var_5701,const_5702,const_5703,call_5706,call_5709,bop_5715,bop_5742,call_5748,])
func_5771 = relay.Function([var_5701,var_5738,], output)
mod['func_5771'] = func_5771
mod = relay.transform.InferType()(mod)
var_5772 = relay.var("var_5772", dtype = "float32", shape = (120,))#candidate|5772|(120,)|var|float32
var_5773 = relay.var("var_5773", dtype = "float32", shape = (6, 20))#candidate|5773|(6, 20)|var|float32
output = func_5771(var_5772,var_5773,)
func_5774 = relay.Function([var_5772,var_5773,], output)
mutated_mod['func_5774'] = func_5774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5175_call = mod.get_global_var('func_5175')
func_5176_call = mutated_mod.get_global_var('func_5176')
call_5809 = relay.TupleGetItem(func_5175_call(), 0)
call_5810 = relay.TupleGetItem(func_5176_call(), 0)
output = call_5809
output2 = call_5810
func_5824 = relay.Function([], output)
mod['func_5824'] = func_5824
mod = relay.transform.InferType()(mod)
mutated_mod['func_5824'] = func_5824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5824_call = mutated_mod.get_global_var('func_5824')
call_5825 = func_5824_call()
output = call_5825
func_5826 = relay.Function([], output)
mutated_mod['func_5826'] = func_5826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5221_call = mod.get_global_var('func_5221')
func_5223_call = mutated_mod.get_global_var('func_5223')
call_5867 = func_5221_call()
call_5868 = func_5221_call()
func_5175_call = mod.get_global_var('func_5175')
func_5176_call = mutated_mod.get_global_var('func_5176')
call_5874 = relay.TupleGetItem(func_5175_call(), 1)
call_5875 = relay.TupleGetItem(func_5176_call(), 1)
func_212_call = mod.get_global_var('func_212')
func_216_call = mutated_mod.get_global_var('func_216')
const_5877 = relay.const([10,5,-7,-7,-8,4,5,8,4,8,-10,8,-1,-10,-2,10,-6,7,-10,4,3,10,3,-2,3,10,5,7,-3,-2,-2,9,7,-3,2,-7,-5,-5,-6,-9,6,-2,-5,6,-6,7,1,7,-3,5,8,-2,-10,3,-5,4,-10,-10,-5,-7,5,10,9,3,6,9,1,-6,10,8,-4,5,-9,10,-3,7,-10,-5,-4,1,8,3,1,2,-1,-7,3,8,10,9,5,-3,-5,-4,-7,-9,2,6,-1,7,1,6,9,-7,2,-2,2,-1,-2,-5,7,5,6,-5,2,-9,-7,6,-9,-4,-10,7,10,8,5,2,-7,-3,10,10,-1,2,7,3,2,-6,-2,4,-5,3,-8,-1,-3,8,4,3,10,-3,-7,3,-2,4,4,-5,2,6,-4,-5,-5,10,2,5,3,6,-2,9,-8,9,1,-10,3,-3,4,6,10,9,1,3,-9,4,-8,7,-8,-7,-10,3,2,2,3,-7,4,-4,-9,-1,-6,4,-7,-1,7,5,-6,3,-2,5,-1,-8,-10,1,1,-2,6,2,-6,10,2,3,2,5,-10,-9,5,-7,-4,-8,2,-4,5,4,3,-7,9,-3,7,-5,10,-8,-5,-2,7,6,10,-8,7,6,-5,-3,2,-5,5,6,6,-10,10,2,2,7,-5,6,-8,-2,-5,7,-2,-8,4,10,-9,3,-2,9,10,-7,10,8,6,-10,4,10,-2,1,-4,8,-1,5,5,-1,-9,-1,-2,6,9,-10,-5,-7,1,-5,-10,10,-7,9,8,-8,-6,5,-7,7,7,9,8,-3,5,-5,2,-6,-10,-10,3,-5,-8,-1,9,1,3,-2,-5,9,-2,4,-10,4,5,8,3,-1,2,-5,9,-1,-7,3,-7,-3,9,-4,10,-8,-1,5,10,4,-9,6,-5,10,9,6,-8,-6,6,7,-7,1,3,-1,-3,8,-4,-9,9,-10,5,-6,-5,-3,10,7,6,5,-5,4,-3,-1,7,5,3,6,-1,2,-3,-9,4,-2,3,10,6,-7,8,-6,-9,-1,-6,10,-7,3,7,5,-7,2,4,9,5,9,-5,-8,-3,7,-4,-7,1,-3,2,-2,4,-1,3,8,-6,-3,1,-7,10,6,-3,7,4,4,9,-7,9,9,9,-2,-6,8,-8,-4,9,4,-4,9,2,-6,-1,-2,-2,-2,10,-6,3,-6,8,-1,1,-10,8,-4,3,1,-4,4,-8,9,-4,-6,8,10,-1,3,-6,-6,-10,-7,2,-9,-3,-4,-1,10,-7,-2,8,1,3,-1,4,-5,8,9,10,-8,-1,5,-5,-9,3,7,5,1,9,9,9,-8,-6,7,-7,10,-7,-1,-1,-3,4,-6,-6,-9,8,8,1,-4,-5,2,6,-1,6,3,4,2,8,9,6,8,-5,1,4,-3,-8,2,-5,-7,9,-8,10,3,9,-1,-9,1,7,9,9,2,-7,3,1,4,-2,3,4,9,7,10,-8,9,5,9,-2,-5,-7,-10,6,8,-6,-1,8,-6,9,10,-9,5,9,-9,-4,7,-3,-2,2,-9,3,-1,-10,-6,2,-6,-5,4,2,-2,-10,-10,9,-3,3,9,2,7,-6,-8,-6,-9,5,4,1,-6,8,-5,7,6,-10,6,-5,-3,-5,-7,-7,-4,2,-2,6,5,3,9,-7,-9,-9,8,-7,5,4,-3,-10,5,-4,6,-2,-4,-10,4,7,4,-10,10,-5,-1,6,-2,-2,-10,-2,8,5,9,-4,-3,-10,-9,-1,-10,-3,-7,-9,-7,4,1,2,-9,1,4,-5,-8,-6,-5,-5,5,-10,-9,1,-1,-3,-2,2,-4,1,10,-5,-1,7,-9,-3,-4,-9,1,9,5,-2,9,-8,7,-8,-7,9,-5,-6,-1,-1,3,8,-9,5,10,-1,-1,1,10,9,6,5,-4,-6,-1,10,8,-5,-6,1,10,-7,10,-1,9,6,-9,7,-4,-10,3,-9,7,-5,6,1,5,7,7,-6,1,2,-6,3,5,7,3,-6,-1,5,7,5,3,-9,-3,7,-6,-4,-1,4,-10,3,-6,4,-1,9,5,10,-8,-10,-4,5,-9,4,-5,7,9,1,-8,5,3,7,-7,-10,6,6,-9,3,1,10,-6,-3,7,-10,-8,4,8,3,-8,10,5,7,-8,-3,-6,5,10,-6,-4,3,1,5,-9,-5,-3,5,1,-1,-10,6,-7,-9,10,5,-4,-8,-4,-6,-3,-1,6,-4,8,5,-10,-6,-3,6,-2,9,-7,-3,-10,-7,-2,1,4,4,-3,-10,2,-1,-10,-8,8,-8,-4,10,-2,9,5,1,-7,3,-3,-4,10,-10,2,3,-5,7,-6,5,1,-1,8,-8,-4,-7,-4,4,6,-4,-1,-10,-2,8,-3,-5,1,-1,-5,-5,9,-9,-3,-7,-6,1,10,4,8,9,6,-8,-9,5,-9,4,-2,-1,6,6,-10,7,-8,-3,4,-10,9,7,-8,-1,-3,-2,-8,10,2,-3,-2,-4,3,9,-3,-8,-8,8,9,10,6,7,-7,-5,-4,1,1,8,-5,1,-5,-10,-6,-6,10,7,10,-10,-2,5,-5,9,4,-2,-4,6,-6,4,-7,-6,-8,2,8,4,9,3,-8,4,2,8,2,7,2,-9,4,7,10,-10,3,8,5,-10,6,4,1,-5,-8,1,4,1,7,9,-7,-6,5,4,5,-5,-7,8,3,-1,6,2,-3,-7,1,8,7,10,-9,-3,8,7,9,5,9,-2,9,-6,-9,5,-10,-9,10,-8,6,5,-1,1,-10,-3,-4,5,-1,8,-3,-3,7,-10,3,-7,-9,-5,5,-4,4,-3,2,-4,8,-4,-6,-5,-1,1,3,5,10,-4,-7,9,4,4,1,-1,-1,-1,-4,-3,1,8,-3,6,4,8,8,7,-9,-10,-8,-9,-5,-7,7,1,5,2,4,-9,7,10,-5,7,-7,-4,7,-3,6,-1,-1,2,4,1,-1,-6,10,-4,-4,-10,-10,-5,8,1,-1,8,5,-7,-2,-8,-3,-1,-2,-7,-8,7,-1,-6,4,4,10,-7,-10,5,-5,6,7,10,-4,6,-3,-3,7,5,9,-7,1,-7,8,-6,-6,10,2,3,-6,10,-3,-8,-4,-2,-4,3,10,-10,-3,1,9,-3,1,8,6,-1,-3,-9,-1,2,-9,1,-9,10,-7,1,4,6,-1,-5,2,-8,-4,-4,10,-8,-4,-2,2,-3,3,-5,-8,-2,-5,8,2,4,4,1,-5,5,-10,2,-9,10,-1,-10,-6,-9,-1,10,-4,-9,4,2,-9,-1,-6,-2,2,-8,7,-3,2,5,1,-7,10,3,6,-3,4,5,-9,-4,8,-3,10,7,-9,5,8,5,8,9,-3,8,-8,-7,9,-7,3,-2,-5,-7,3,-4,-4,6,5,5,-10,7,-7,5,4,-2,2,-2,-5,3,10,9,-6,-7,4,1,8,-2,-2,10,-8,5,-8,-9,5,-1,1,1,6,-10,-2,4,9,-5,-2,-7,9,10,-8,-10,-3,9,4,-1,10,3,-2,-3,3,-4,-7,5,2,5,8,-4,-10,-7,3,-5,1,6,-4,-6,1,2,-2,5,-6,-5,-8,7,2,-10,-4,-9,-2,-8,-7,3,-6,-5,-4,2,1,-6,8,6,-9,-6,-3,8,1,-2,-2,-6,10,9,-2,-7,10,-3,-7,8,-5,-1,-9,-4,6,-9,-10,9,8,7,-8,-4,-6,-9,-6,-2,-1,-9,-1,3,10,-8,-6,-2,4,4,-4,4,-5,-4,10,-2,-9,1,8,7,-5,10,-1,-8,4,1,-2,7,-8,10,8,-8,7,-7,5,-4,-9,4,9,-9,5,10,-4,7,-7,-7,1,2,-7,2,4,-2,10,-7,9,-1,-3,-4,-7,9,7,1,-3,5,-3,-2,3,-2,-2,-2,-2,-5,-6,-3,9,-1,10,-4,6,-5,-6,-7,-10,2,5,-5,10,5,-1,1,2,6,-5,-7,10,1,6,7,-7,10,-4,3,6,-10,-4,-5,-6,-8,-3,-3,4,1,3,10,8,4,-6,5,-2,-9,7,-5,-6,3,8,4,-1,-6,4,6,7,-5,-6,-4,-5,-9,8,-5,-6,6,6,10,7,-4,3,5,10,2,10,6,-1,-8,-8,-5,-5,2,3,9,-9,10,-10,1,-5], dtype = "uint32")#candidate|5877|(1584,)|const|uint32
call_5876 = func_212_call(relay.reshape(const_5877.astype('uint32'), [11, 16, 9]), relay.reshape(const_5877.astype('uint32'), [11, 16, 9]), )
call_5878 = func_212_call(relay.reshape(const_5877.astype('uint32'), [11, 16, 9]), relay.reshape(const_5877.astype('uint32'), [11, 16, 9]), )
uop_5906 = relay.log10(call_5874.astype('float64')) # shape=(2912,)
uop_5908 = relay.log10(call_5875.astype('float64')) # shape=(2912,)
output = relay.Tuple([call_5867,call_5876,const_5877,uop_5906,])
output2 = relay.Tuple([call_5868,call_5878,const_5877,uop_5908,])
func_5909 = relay.Function([], output)
mod['func_5909'] = func_5909
mod = relay.transform.InferType()(mod)
mutated_mod['func_5909'] = func_5909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5909_call = mutated_mod.get_global_var('func_5909')
call_5910 = func_5909_call()
output = call_5910
func_5911 = relay.Function([], output)
mutated_mod['func_5911'] = func_5911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_5914 = func_897_call()
call_5915 = func_897_call()
output = relay.Tuple([call_5914,])
output2 = relay.Tuple([call_5915,])
func_5918 = relay.Function([], output)
mod['func_5918'] = func_5918
mod = relay.transform.InferType()(mod)
output = func_5918()
func_5919 = relay.Function([], output)
mutated_mod['func_5919'] = func_5919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5918_call = mod.get_global_var('func_5918')
func_5919_call = mutated_mod.get_global_var('func_5919')
call_5987 = relay.TupleGetItem(func_5918_call(), 0)
call_5988 = relay.TupleGetItem(func_5919_call(), 0)
func_93_call = mod.get_global_var('func_93')
func_95_call = mutated_mod.get_global_var('func_95')
var_5991 = relay.var("var_5991", dtype = "float32", shape = (36,))#candidate|5991|(36,)|var|float32
call_5990 = func_93_call(relay.reshape(var_5991.astype('float32'), [1, 6, 6]))
call_5992 = func_93_call(relay.reshape(var_5991.astype('float32'), [1, 6, 6]))
bop_6010 = relay.logical_xor(var_5991.astype('uint64'), relay.reshape(call_5990.astype('uint64'), relay.shape_of(var_5991))) # shape=(36,)
bop_6013 = relay.logical_xor(var_5991.astype('uint64'), relay.reshape(call_5992.astype('uint64'), relay.shape_of(var_5991))) # shape=(36,)
func_4700_call = mod.get_global_var('func_4700')
func_4704_call = mutated_mod.get_global_var('func_4704')
const_6015 = relay.const([-7,-6,-5,-6,8,-9,7,-4,-4,5,-3,5,-7,-9,-8,-2,3,10,8,-10,-3,5,-10,8,-7,3,4,-8,-10,3,-5,3,-4,-7,-2,1,8,7,7,2,-10,4,3,-6,-10,1,3,5,-8,4,-1,-7,-10,-7,-2,1,-5,8,6,3,3,1,-9,-5,-1,6,3,1,10,2,-6,-5,-7,-9,9,9,5,9,-8,-8,3,-1,1,-4,9,-4,1,5,4,-3,3,6,3,9,-10,-10,-5,3,-4,-7,-5,7,-10,-3,6,9,7,-7,-9,-2,7,3,-5,-8,-1,2,-3,1,-1,8,-8,9,10,-6,6,9,-9,5,-7,1,-7,-4,-3,-4,9,4,-8,-5,-10,-1,-8,-2,-1,9,10,-7,-6,-7,-8,-3,-4,-6,-1,3,1,-10,2,-6,-8,4,8,5,2,10,5,-7,-4,1,4,-9,-8,4,2,7,-4,8,-10,-5,-6,-2,-10,-10,-4,10,-5,-10,7,-4,-3,-8,10,10,-10,-4,-10,1,-7,-2,4,-6,-10,-3,-10,7,8,2,-5,9,5,-4,-10,-5,-6,8,1,-8,-2,-10,-9,-8,6,6,2,7,-7,-4,-5,-5,-8,-2,9,-9,-2,5,-10,8,-5,-7,10,-8,-4,5,1,-10,-3,7,-2,-4,7,-8,4,-3,10,10,4,6,-10,7,1,2,10,7,-8,-10,10,-2,-4,7,-6,6,5,-6,-5,10,-10,9,4,6,6,-6,2,3,4,-1,-7,10,1,8,-1,-1,3,-3,-5,-8,4,5,4,3,-8,-2,-3,6,10,-9,4,-2,-9,3,-3,-3,9,-5,8,2,-4,10,7,-3,-9,6,2,10,2,-5,6,-1,8,9,4,3,-6,-9,-6,-1,-5,-8,-6,10,2,2,5,-3,9,-2,-3,-5,5,-5,-6,-8,3,10,2,7,7,-2,-3,7,8,9,2,2,7,2,4,-2,6,6,4,-2,3,3,-10,9,10,1,1,-3,3,-10,5,-3,6,9,-5,10,6,5,4,7,-2,-7,-2,-1,-6,-9,3,-10,-5,8,1,-9,1,-6,-10,8,9,-6,6,5,6,-2,8,-9,-2,-5,5,1,-8,1,-8,-1,-6,10,-4,-3,9,-1,-7,1,7,2,8,10,-10,7,1,7,-4,-1,-1,9,2,-8,10,8,-3,-1,-4,8,-3,-2,-2,-6,-7,7,1,-8,5,2,5,-5,10,1,9,6,4,-10,8,-5,3,2,7,9,-8,-9,2,-3,-2,-6,4,6,-1,-8,-4,-1,4,-5,5,-7,6,8,-2,10,-5,-8,8,9,-2,-8,10,7,5,7,7,-3,-9,-3,-1,-6,1,5,8,1,-1,-10,8,-4,-1,-3,4,3,8,-4,-3,7,-4,5,6,-4,3,-7,1,-4,-10,-1,2,10,2,-10,4,-8,2,2,9,5,10,-5,-1,5,5,-10,10,10,3,8,9,-8,1,-9,4,4,-5,-6,7,2,5,-2,9,10,2,-1,-6,-10,-7,-7,2,-4,2,5,-1,-3,8,-3,5,-1,3,-8,9,6,-6,6,8,-6,9,-10,-6,-7,6,1,7,-10,4,-9,-5,-8,2,8,-3,8,4,4,-1,-6,3,10,-1,-10,8,7,-6,2,-8,-6,5,-5,-4,-2,-10,-3,8,-4,-4,4,-4,3,6,6,8,-5,7,-5,-6,5,-5,-10,-2,4,7,-9,-10,10,10,10,-9,-2,-4,7,-3,-8,3,-3,-2,-2,-4,-9,5,-2,7,-6,8,3,6,4,2,-8,-9,1,-8,10,6,-8,-1,8,4,-4,-2,6,5,-7,-1,-4,-6,10,10,7,9,8,10,8,2,8,-7,1,-4,10,5,-4,1,-6,3,-8,3,-2,4,8,-10,-9,3,-10,2,2,6,-8,-1,-7,-8,-9,-10,3,-1,-1,7,9,-2,7,-8,9,9,10,-2,6,-1,2,-6,-7,-7,-9,8,4,-6,6,-2,-10,4,2,-7,9,-3,-1,-7,-5,9,-1,-1,-9,-8,5,-1,2,4,-1,-2,1,3,-6,4,-7,7,-2,-2,9,5,1,-8,-1,-5,-7,5,4,-2,10,-2,-9,-4,-7,-1,8,10,-3,-10,-3,9,6,10,3,8,7,10,-9,6,-3,-2,-4,8,-3,2,-7,-7,-6,-3,-8,4,-3,1,1,7,6,-4,-4,-6,3,2,-10,5,6,8,-8,-9,-7,10,10,1,-1,-6,9,3,-1,-4,-5,-8,-4,5,9,1,-6,5,2,-4,2,7,2,-3,-6,4,3,-2,-10,-9,3,-6,-4,-5,-6,-9,-8,10,-8,-3,-8,-8,10,-10,-7,9,2,8,-6,-2,3,1,-10,3,3,-2,6,-2,10,-9,2,8,5,7,3,4,-1,-1,-7,6,-2,-9,-10,5,4,10,3,-7,8,-10,3,8,8,-2,-4,4,-1,-4,-7,-5,-4,4,-5,-6,5,3,-9,-2,8,3,-4,-8,4,-8,-1,-2,7,4,7,4,-7,1,-8,2,-9,-8,6,10,7,10,2,-7,-8,-3,-3,8,-4,6,2,-7,-5,-3,-2,10,4,1,2,7,1,4,8,1,-10,5,-5,4,1,2,2,-5,1,-2,-6,-2,10,-8,-9,10,8,-5,10,-6,5,-4,-9,3,9,-5,-4,-1,-5,3,-9,-7,-10,3,-10,-3,-4,-3,-8,-5,4,1,6,-2,-10,-7,8,8,-6,10,-10,10,9,-7,2,3,1,-3,5,-10,-10,4,2,-8,2,2,-8,-6,-8,4,-6,-5,1,5,-3,1,-1,3,-6,2,6,2,8,3,-2,7,5,6,-2,-2,-6,-8,7,-2,2,-2,10,6,-1,-6,-5,-10,7,-8,9,-3,2,-5,5,-3,3,-7,9,-1,-2,3,1,10,9,6,8,4,1,1,7,4,1,-3,7,-3,2,-8,9,-1,-4,8,-6,-3,10,-4,-2,-6,-10,-5,4,5,4,-9,9,-1,6,-8,2,9,7,-10,2,4,-7,-8,-7,-9,6,5,-9,-10,-6,9,-10,-1,-4,6,8,-7,-8,-10,-7,7,-8,-1,-9,-5,-9,-4,-5,-8,9,-4,-3,-4,7,8,-2,9,7,10,-1,2,9,3,-4,-4,4,-8,8,-7,-7,-1,10,-10,10,-3,-4,4,-3,-9,5,-8,1,5,-1,6,-7,-6,7,-4,-9,-9,-1,8,8,-1,-3,4,-6,-5,1,-2,8,-5,-7,1,3,-8,-3,-8,-6,-7,-7,-4,10,-9,-3,-9,-2,-8,-1,-4,-1,1,-1,-6,-10,-7,-4,2,-4,-4,4,8,6,-7,-4,-1,3,10,1,-2,-1,-7,-4,8,2,5,-3,-3,8,6,-1,9,-9,10,5,2,-3,-10,10,4,-7,-9,1,-9,-4,-3,4,-10,10,-4,2,-2,4,3,-9,-7,6,-7,10,8,-3,-8,2,9,-6,9,-6,4,-3,4,-3,-8,-7,-8,5,10,6,4,-5,-3,5,-2,3,2,2,9,9,4,4,-4,7,-6,3,4,4,-3,-9,3,1,-9,-3,8,-6,9,-4,1,-8,-6,-9,-1,6,-4,-10,-9,4,4,8,1,-6,-6,-3,4,3,4,-10,7,-8,-3,7,9,-1,9,9,-5,-10,5,-7,-7,-9,-4,-6,5,1,-2,1,10,-8,-1,-8,-2,-7,-2,-6,-7,-9,-3,2,-9,-7,1,-4,-10,-1,9,-9,-8,8,1,10,-8,-10,4,-1,5,3,8,9,2,-10,9,-2,6,-8,3,-6,7,-1,8,-3,2,8,-3,-7,-7,6,6,5,-7,10,3,8,-2,2,-5,-2,10,8,-9,10,1,3,3,1,3,7,-7,-9,-8,-8,7,-1,-2,-2,-3,6,-10,3,-7,3,-8,-9,9,-6,10,-1,4,5,2,-6,2,1,8,-5,-10,6,-3,5,-2,1,4,10,8,5,-5,-5,10,-10,9,5,6,-9,6,-2,-6,-2,-7,-10,8,-2,-6,-1,-10,7,8,1,1,4,-4,8,9,2,-10,8,-8,2,-7,4,-6,9,1,8,7,-1,-8,3,-9,-3,7,-9,-4,-3,-6,10,-6,-5,-8,2,5,-8,-4,-4,8,-2,-1,-2,-3,-7,9,-10,8,-5,8,-2,3,-10,5,-10,1,7,-4,-8,3,-6,3,-9,-1,7,-2,-4,3,9,-8,-10,-10,1], dtype = "uint32")#candidate|6015|(1584,)|const|uint32
call_6014 = relay.TupleGetItem(func_4700_call(relay.reshape(const_6015.astype('uint32'), [792, 2]), relay.reshape(bop_6010.astype('float32'), [36,]), ), 4)
call_6016 = relay.TupleGetItem(func_4704_call(relay.reshape(const_6015.astype('uint32'), [792, 2]), relay.reshape(bop_6010.astype('float32'), [36,]), ), 4)
output = relay.Tuple([call_5987,bop_6010,call_6014,const_6015,])
output2 = relay.Tuple([call_5988,bop_6013,call_6016,const_6015,])
func_6022 = relay.Function([var_5991,], output)
mod['func_6022'] = func_6022
mod = relay.transform.InferType()(mod)
mutated_mod['func_6022'] = func_6022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6023 = relay.var("var_6023", dtype = "float32", shape = (36,))#candidate|6023|(36,)|var|float32
func_6022_call = mutated_mod.get_global_var('func_6022')
call_6024 = func_6022_call(var_6023)
output = call_6024
func_6025 = relay.Function([var_6023], output)
mutated_mod['func_6025'] = func_6025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4179_call = mod.get_global_var('func_4179')
func_4181_call = mutated_mod.get_global_var('func_4181')
call_6031 = relay.TupleGetItem(func_4179_call(), 0)
call_6032 = relay.TupleGetItem(func_4181_call(), 0)
output = call_6031
output2 = call_6032
func_6035 = relay.Function([], output)
mod['func_6035'] = func_6035
mod = relay.transform.InferType()(mod)
output = func_6035()
func_6036 = relay.Function([], output)
mutated_mod['func_6036'] = func_6036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2774_call = mod.get_global_var('func_2774')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_6045 = func_2774_call()
call_6046 = func_2774_call()
output = relay.Tuple([call_6045,])
output2 = relay.Tuple([call_6046,])
func_6050 = relay.Function([], output)
mod['func_6050'] = func_6050
mod = relay.transform.InferType()(mod)
mutated_mod['func_6050'] = func_6050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6051 = func_6050_call()
output = call_6051
func_6052 = relay.Function([], output)
mutated_mod['func_6052'] = func_6052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_6063 = relay.TupleGetItem(func_2510_call(), 0)
call_6064 = relay.TupleGetItem(func_2511_call(), 0)
func_798_call = mod.get_global_var('func_798')
func_800_call = mutated_mod.get_global_var('func_800')
const_6075 = relay.const(-8.105883, dtype = "float32")#candidate|6075|()|const|float32
call_6074 = relay.TupleGetItem(func_798_call(relay.reshape(const_6075.astype('float32'), [])), 0)
call_6076 = relay.TupleGetItem(func_800_call(relay.reshape(const_6075.astype('float32'), [])), 0)
output = relay.Tuple([call_6063,call_6074,const_6075,])
output2 = relay.Tuple([call_6064,call_6076,const_6075,])
func_6078 = relay.Function([], output)
mod['func_6078'] = func_6078
mod = relay.transform.InferType()(mod)
mutated_mod['func_6078'] = func_6078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6078_call = mutated_mod.get_global_var('func_6078')
call_6079 = func_6078_call()
output = call_6079
func_6080 = relay.Function([], output)
mutated_mod['func_6080'] = func_6080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2793_call = mod.get_global_var('func_2793')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_6116 = func_2793_call()
call_6117 = func_2793_call()
func_5918_call = mod.get_global_var('func_5918')
func_5919_call = mutated_mod.get_global_var('func_5919')
call_6129 = relay.TupleGetItem(func_5918_call(), 0)
call_6130 = relay.TupleGetItem(func_5919_call(), 0)
output = relay.Tuple([call_6116,call_6129,])
output2 = relay.Tuple([call_6117,call_6130,])
func_6133 = relay.Function([], output)
mod['func_6133'] = func_6133
mod = relay.transform.InferType()(mod)
mutated_mod['func_6133'] = func_6133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6133_call = mutated_mod.get_global_var('func_6133')
call_6134 = func_6133_call()
output = call_6134
func_6135 = relay.Function([], output)
mutated_mod['func_6135'] = func_6135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1674_call = mod.get_global_var('func_1674')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_6136 = relay.TupleGetItem(func_1674_call(), 1)
call_6137 = relay.TupleGetItem(func_1675_call(), 1)
output = call_6136
output2 = call_6137
func_6142 = relay.Function([], output)
mod['func_6142'] = func_6142
mod = relay.transform.InferType()(mod)
mutated_mod['func_6142'] = func_6142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6142_call = mutated_mod.get_global_var('func_6142')
call_6143 = func_6142_call()
output = call_6143
func_6144 = relay.Function([], output)
mutated_mod['func_6144'] = func_6144
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6242 = relay.const([[[-5.633194,0.510953,-6.150595,-0.221664,-7.333250,8.207407,1.850212,-9.918494,-6.407033,1.186588,-0.506926,-7.617079,-9.502739,3.000160,3.376505,-7.703012],[4.432832,4.715043,-3.441446,-7.378916,1.725639,-0.740679,6.162758,-5.395596,4.847057,6.513747,5.448660,0.817437,0.970508,-6.496332,-0.953813,-8.533171],[-5.515614,7.864624,-5.102968,-6.092147,1.931893,-1.234975,5.804680,0.946106,6.793945,7.602508,-6.664720,-4.433575,4.567238,-6.604948,9.072534,1.138708],[2.126343,-2.339153,-4.511910,6.843256,7.692291,0.211810,-3.445739,6.725638,9.284518,8.780567,-3.742374,8.180582,-3.273111,7.725082,9.863474,-0.574737],[4.964049,-9.109996,5.301408,-5.609071,5.894066,6.315502,-5.216526,6.538859,4.744717,0.649920,-3.085770,8.643540,0.815123,5.085671,-7.246293,6.065976],[-0.076161,3.605988,5.227631,9.957938,5.368370,0.819455,5.996579,-9.248911,0.437677,-2.001126,-2.519557,-0.389632,-5.058802,-4.161557,2.302790,2.340500],[4.562793,7.610231,-8.029973,-1.136616,-1.572834,6.056972,-3.212192,-5.938281,7.371728,-4.684052,4.261895,5.092301,-0.715011,-0.745910,0.597143,4.833938],[-6.512350,-1.473482,7.672098,8.713109,-5.244310,-1.834461,-3.800634,-5.929950,3.988594,9.884732,6.961085,1.357646,3.288866,-2.025422,3.711366,3.104686],[-4.047757,-8.900749,-7.349676,7.450657,-7.784170,-2.783175,1.942623,-1.905746,0.610445,0.429691,4.603781,-5.959467,-8.711953,7.102021,-0.914431,1.286647],[-0.679903,0.648648,5.828006,3.807398,-4.193609,-7.951391,-3.173380,-0.341776,0.635142,3.851272,-5.026428,1.110425,-3.368865,-1.805354,0.647544,9.769775]]], dtype = "float64")#candidate|6242|(1, 10, 16)|const|float64
uop_6243 = relay.cos(const_6242.astype('float64')) # shape=(1, 10, 16)
func_2025_call = mod.get_global_var('func_2025')
func_2028_call = mutated_mod.get_global_var('func_2028')
const_6256 = relay.const([6.455766,-3.546797,2.692702,8.184714,-6.524841,-4.752090,-4.643028,-7.007145,3.632730,3.351474,-5.255476,-3.519627,0.412508,-6.913193], dtype = "float64")#candidate|6256|(14,)|const|float64
var_6257 = relay.var("var_6257", dtype = "float32", shape = (420, 2))#candidate|6257|(420, 2)|var|float32
call_6255 = relay.TupleGetItem(func_2025_call(relay.reshape(const_6256.astype('float64'), [14,]), relay.reshape(var_6257.astype('float32'), [14, 15, 4]), ), 0)
call_6258 = relay.TupleGetItem(func_2028_call(relay.reshape(const_6256.astype('float64'), [14,]), relay.reshape(var_6257.astype('float32'), [14, 15, 4]), ), 0)
var_6271 = relay.var("var_6271", dtype = "float64", shape = (6, 10, 16))#candidate|6271|(6, 10, 16)|var|float64
bop_6272 = relay.logical_or(uop_6243.astype('bool'), var_6271.astype('bool')) # shape=(6, 10, 16)
func_2106_call = mod.get_global_var('func_2106')
func_2108_call = mutated_mod.get_global_var('func_2108')
call_6276 = func_2106_call()
call_6277 = func_2106_call()
func_6078_call = mod.get_global_var('func_6078')
func_6080_call = mutated_mod.get_global_var('func_6080')
call_6285 = relay.TupleGetItem(func_6078_call(), 1)
call_6286 = relay.TupleGetItem(func_6080_call(), 1)
func_212_call = mod.get_global_var('func_212')
func_216_call = mutated_mod.get_global_var('func_216')
const_6291 = relay.const([-9,5,8,-4,-9,5,6,-3,-1,1,5,9,-6,6,-9,-5,6,6,4,-7,8,4,-7,1,6,-1,-5,-8,1,-8,-9,-9,-3,-10,-4,1,-10,-7,2,5,2,-10,10,8,1,2,-7,6,-5,-6,-5,2,-1,-4,-9,-4,7,-7,-1,-8,1,2,-2,-9,-5,7,-3,7,10,-9,-10,-9,7,6,1,10,-6,1,9,5,8,-5,-1,-6,-6,7,8,-7,-1,4,-4,5,5,8,-7,-1,4,-5,10,7,6,4,-1,-10,-1,-4,7,7,-5,-9,7,-7,-3,8,-2,9,-9,4,3,2,-6,-1,6,-8,-4,-3,-4,3,-5,-3,8,-6,7,8,-2,4,-9,-5,-4,5,-8,10,-3,9,6,4,4,-4,8,10,4,-1,10,7,-9,-3,-3,10,6,1,-1,-7,-4,7,2,-3,-3,7,-2,-9,-7,9,3,-5,1,10,-10,9,7,8,-5,-6,-7,4,-7,2,3,-5,3,5,7,-5,2,1,-4,-9,-1,-9,-7,-2,6,-2,7,7,-7,-5,-10,1,6,3,2,9,6,4,9,-10,9,-3,-9,-8,5,-1,4,6,6,10,-1,3,-6,-1,-2,9,-2,10,5,8,-1,-4,10,9,-1,-2,-7,-10,-2,10,-3,-7,-3,6,5,1,-2,-5,7,6,10,-10,5,-1,-2,-2,2,-2,6,-5,4,7,1,8,-5,-7,6,-3,9,1,7,-8,3,-3,10,10,-6,-1,8,-6,-8,9,10,7,7,1,-1,4,1,-3,-7,-8,-9,-1,-10,1,10,4,-1,7,10,4,1,7,7,-6,4,-9,-4,-1,7,-4,1,7,10,-10,4,-4,-3,-8,5,-7,7,-2,-8,5,7,4,-9,2,5,-4,7,5,-10,-2,-8,-4,9,-5,-2,-2,-2,-9,-7,2,2,-10,-5,10,-9,-10,5,1,-3,9,-9,-6,-9,-3,3,-8,-3,-5,5,-4,2,-1,-10,-9,1,10,-2,2,-9,-8,2,9,-4,6,2,4,-5,-10,-7,10,10,-7,-4,4,6,8,-5,7,-3,-9,-2,10,-7,-4,3,4,4,6,2,3,-1,8,-10,-7,8,10,8,9,4,2,7,-1,-9,9,6,-1,-3,-2,6,5,-5,5,-7,-1,-8,-8,-8,6,-5,-1,6,-7,3,-1,-9,2,-1,7,1,-9,-10,-6,8,-8,-6,6,-2,-1,2,-3,-6,5,4,-5,2,6,5,-2,3,-7,-10,-10,-6,9,-3,-1,1,-8,1,-2,1,5,-1,8,7,-4,8,1,-5,4,-7,8,-4,-1,-2,-6,-2,-7,-9,6,10,-5,3,4,8,-9,4,3,4,1,-8,8,-1,2,10,6,-9,10,-8,-4,-2,-3,10,4,-9,-1,5,8,6,4,9,8,2,2,2,-8,8,-1,-7,-6,10,-7,9,-1,-3,-1,-6,2,8,-9,1,5,1,10,10,6,5,5,9,9,10,6,-10,5,4,10,-3,5,-10,-2,2,10,-3,1,10,4,9,-7,8,-9,-10,-8,-4,5,-9,-4,-6,6,7,1,-7,-9,-5,-7,2,7,-7,-3,7,6,-6,7,-3,1,-2,9,-7,6,-5,-7,1,9,7,10,9,-10,-6,-6,9,1,10,-1,-8,-9,9,2,-9,1,-10,-2,9,-3,-10,-4,-6,2,-4,-3,9,-5,-7,10,7,-2,4,-7,7,-6,9,-5,4,1,8,10,7,6,2,1,-9,6,6,-6,3,9,-1,-9,10,3,-5,7,-8,-5,3,10,9,-7,1,-10,-5,-8,-3,-3,6,-3,9,-2,-5,7,-3,9,-7,10,8,-4,-1,1,-9,9,8,-6,-3,4,-5,5,-2,-1,1,-6,-3,3,-5,8,-9,-9,2,-6,4,-5,2,7,6,-10,-1,-9,-1,6,9,9,-4,4,6,5,9,8,-1,3,5,8,4,-10,-2,-10,-4,-8,1,-6,-2,-6,-2,2,3,3,-3,-6,10,1,-4,-2,1,-9,-2,9,8,4,-4,-3,4,-7,-9,-3,10,-1,-4,-5,1,-9,-8,6,8,4,-8,8,-5,8,-9,4,-2,6,-8,-5,2,1,-4,6,8,-5,8,-10,-10,8,-7,1,-7,-9,7,-3,10,8,2,-8,-5,9,-6,-6,-5,-8,-5,6,-5,5,9,-10,2,2,4,-6,-3,-2,-4,-5,-3,3,-3,1,4,-1,-6,1,-1,-3,3,5,4,6,10,-7,6,2,-9,-9,-1,-5,1,6,-8,-6,10,-8,-3,-2,-8,5,-1,3,-1,2,-1,10,10,4,5,-9,-3,9,1,-8,-2,-3,1,-2,10,-4,-10,3,-10,-8,-8,2,-5,-9,4,-7,2,9,8,6,7,9,6,-9,-10,5,-5,-1,-10,9,10,2,8,7,-7,1,7,-1,-1,-1,-9,-9,5,-9,2,3,-5,-6,-8,-6,8,-9,7,-7,-4,9,7,10,-10,9,6,-6,8,-4,8,3,9,-10,4,5,8,-3,-6,8,-1,-9,-10,-10,8,-5,5,-2,-10,3,2,3,-3,-6,9,-4,3,-1,-10,-1,6,5,-4,8,-9,-1,8,-2,2,2,4,-4,-1,1,-6,8,-10,5,-9,-9,3,-9,6,4,1,-9,-1,-3,-8,4,1,-7,-4,-7,5,-1,-8,9,-4,-9,-6,2,-1,-2,3,4,7,-5,2,-3,-7,-5,-7,-6,7,7,-6,-5,-6,-6,10,-3,1,-5,9,2,-4,-9,-3,-1,-2,6,-7,-5,-7,-2,-2,1,4,-8,7,6,-9,10,4,4,10,-6,-2,-10,3,-3,8,10,-3,-4,10,-2,7,-3,-5,-6,7,-2,2,-8,-5,-4,7,6,4,-10,9,7,4,-6,-7,4,4,-4,9,3,-3,10,1,-1,5,1,-3,-10,8,-8,8,-8,-1,1,4,-7,-1,6,2,-8,1,4,10,5,-10,3,-6,-2,-3,8,-7,4,-1,-9,-10,-1,-8,4,-9,-6,-1,-10,-9,-3,-7,10,5,1,4,8,-9,-2,-4,-5,-5,-5,-9,3,-7,-10,9,-8,2,10,-3,10,9,-1,8,9,6,-2,-9,4,-3,-10,-4,1,-2,-4,1,-5,5,5,-1,-9,-8,-5,-5,-3,-3,3,5,-5,-4,10,-10,8,-2,-9,9,3,8,-4,-6,1,2,-7,7,4,1,-9,-10,6,-9,-6,-4,6,4,7,7,-9,2,-7,-10,-2,-4,1,5,-5,-6,-3,-7,-4,-6,-3,9,-3,-2,9,1,2,-2,9,-2,-2,-5,-9,-3,-5,4,-4,-4,3,7,-5,-5,2,-1,7,-5,-10,-5,5,1,-6,10,9,7,9,6,-2,2,-10,-7,4,7,4,-4,7,9,-2,3,4,-5,-6,6,4,4,-10,-3,2,-10,-10,-5,10,2,6,5,-7,-10,1,-3,-5,3,7,-10,7,-7,-2,6,8,-4,-5,-2,-9,-7,10,9,6,-9,-9,-2,-8,-5,-1,4,1,4,9,10,2,-10,9,8,-1,-8,7,-9,9,7,5,1,-1,1,5,-8,9,7,-7,-5,3,1,3,7,1,4,-5,-1,-4,-6,4,-3,-4,-2,5,-1,1,8,-1,-8,9,10,10,2,-4,10,4,10,4,-1,1,9,6,-6,4,-3,7,-9,-5,-9,-9,6,2,3,1,-7,8,2,5,2,3,2,-9,7,2,-4,6,-6,7,6,-5,-8,-9,8,-10,5,6,-3,8,8,5,1,-3,10,8,7,9,6,-10,3,-5,-3,-4,5,-6,2,-6,-1,-1,8,-6,-3,-4,2,3,4,-2,10,-5,9,-1,-3,5,-5,-6,6,-10,7,-5,-8,2,10,-10,1,-7,-9,3,-5,-5,-7,-5,-2,-9,9,-6,6,-10,4,-7,9,7,-4,9,3,2,-6,-10,-2,-7,-4,-9,-3,-5,10,5,-9,7,-5,3,-2,-7,-1,-5,5,-1,7,9,10,-10,-7,-2,-9,10,-7,3,9,6,-4,-1,4,-10,-4,4,3,4,9,8,7,4,-2,-3,-5,-1,1,10,3,-10,-8,-1,-8,-3,-3,7,-9,-3,-5,4,-5,-3,-4,-6,4,6,-8,-3,1,3,4,-3,-10,6,3,7,2,8,2,4,8,8,-6,4,4,3,-9,5,-3,7,10,7,6,1,-9,-6,5,-5,-2,10,6,7], dtype = "uint32")#candidate|6291|(1584,)|const|uint32
call_6290 = func_212_call(relay.reshape(const_6291.astype('uint32'), [11, 16, 9]), relay.reshape(const_6291.astype('uint32'), [11, 16, 9]), )
call_6292 = func_212_call(relay.reshape(const_6291.astype('uint32'), [11, 16, 9]), relay.reshape(const_6291.astype('uint32'), [11, 16, 9]), )
func_561_call = mod.get_global_var('func_561')
func_564_call = mutated_mod.get_global_var('func_564')
call_6294 = func_561_call(relay.reshape(call_6255.astype('uint64'), [8, 8, 5]))
call_6295 = func_561_call(relay.reshape(call_6255.astype('uint64'), [8, 8, 5]))
output = relay.Tuple([call_6255,const_6256,var_6257,bop_6272,call_6276,call_6285,call_6290,const_6291,call_6294,])
output2 = relay.Tuple([call_6258,const_6256,var_6257,bop_6272,call_6277,call_6286,call_6292,const_6291,call_6295,])
func_6296 = relay.Function([var_6257,var_6271,], output)
mod['func_6296'] = func_6296
mod = relay.transform.InferType()(mod)
mutated_mod['func_6296'] = func_6296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6296_call = mutated_mod.get_global_var('func_6296')
var_6298 = relay.var("var_6298", dtype = "float32", shape = (420, 2))#candidate|6298|(420, 2)|var|float32
var_6299 = relay.var("var_6299", dtype = "float64", shape = (6, 10, 16))#candidate|6299|(6, 10, 16)|var|float64
call_6297 = func_6296_call(var_6298,var_6299,)
output = call_6297
func_6300 = relay.Function([var_6298,var_6299,], output)
mutated_mod['func_6300'] = func_6300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mod.get_global_var('func_3924')
func_3926_call = mutated_mod.get_global_var('func_3926')
call_6318 = relay.TupleGetItem(func_3924_call(), 0)
call_6319 = relay.TupleGetItem(func_3926_call(), 0)
output = call_6318
output2 = call_6319
func_6328 = relay.Function([], output)
mod['func_6328'] = func_6328
mod = relay.transform.InferType()(mod)
mutated_mod['func_6328'] = func_6328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6328_call = mutated_mod.get_global_var('func_6328')
call_6329 = func_6328_call()
output = call_6329
func_6330 = relay.Function([], output)
mutated_mod['func_6330'] = func_6330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2750_call = mod.get_global_var('func_2750')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_6342 = relay.TupleGetItem(func_2750_call(), 1)
call_6343 = relay.TupleGetItem(func_2751_call(), 1)
uop_6347 = relay.rsqrt(call_6342.astype('float32')) # shape=(8, 14, 12)
uop_6349 = relay.rsqrt(call_6343.astype('float32')) # shape=(8, 14, 12)
output = uop_6347
output2 = uop_6349
func_6353 = relay.Function([], output)
mod['func_6353'] = func_6353
mod = relay.transform.InferType()(mod)
mutated_mod['func_6353'] = func_6353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6353_call = mutated_mod.get_global_var('func_6353')
call_6354 = func_6353_call()
output = call_6354
func_6355 = relay.Function([], output)
mutated_mod['func_6355'] = func_6355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6358 = relay.var("var_6358", dtype = "float32", shape = (1, 15, 9))#candidate|6358|(1, 15, 9)|var|float32
uop_6359 = relay.cosh(var_6358.astype('float32')) # shape=(1, 15, 9)
output = uop_6359
output2 = uop_6359
func_6361 = relay.Function([var_6358,], output)
mod['func_6361'] = func_6361
mod = relay.transform.InferType()(mod)
mutated_mod['func_6361'] = func_6361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6362 = relay.var("var_6362", dtype = "float32", shape = (1, 15, 9))#candidate|6362|(1, 15, 9)|var|float32
func_6361_call = mutated_mod.get_global_var('func_6361')
call_6363 = func_6361_call(var_6362)
output = call_6363
func_6364 = relay.Function([var_6362], output)
mutated_mod['func_6364'] = func_6364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2774_call = mod.get_global_var('func_2774')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_6370 = func_2774_call()
call_6371 = func_2774_call()
output = call_6370
output2 = call_6371
func_6375 = relay.Function([], output)
mod['func_6375'] = func_6375
mod = relay.transform.InferType()(mod)
output = func_6375()
func_6376 = relay.Function([], output)
mutated_mod['func_6376'] = func_6376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2603_call = mod.get_global_var('func_2603')
func_2604_call = mutated_mod.get_global_var('func_2604')
call_6397 = func_2603_call()
call_6398 = func_2603_call()
uop_6400 = relay.sigmoid(call_6397.astype('float64')) # shape=(15, 16, 2)
uop_6402 = relay.sigmoid(call_6398.astype('float64')) # shape=(15, 16, 2)
output = relay.Tuple([uop_6400,])
output2 = relay.Tuple([uop_6402,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

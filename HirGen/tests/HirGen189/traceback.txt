==========mod==========
#[version = "0.0.5"]
def @func_3328(%var_3309: Tensor[(120), float32], %var_3310: Tensor[(12, 132), uint32], %var_3319: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) {
  %0 = cast(%var_3309, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1 = cast(%var_3310, dtype="uint32") /* ty=Tensor[(12, 132), uint32] */;
  %2 = cast(%var_3310, dtype="uint32") /* ty=Tensor[(12, 132), uint32] */;
  %3 = reshape(%0, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
  %4 = reshape(%1, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %5 = reshape(%2, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %6 = @func_1284(%3, %4, %5) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
  %7 = cast(%var_3319, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %8 = reshape(%7, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
  %9 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %10 = @func_3255() /* ty=Tensor[(8, 14, 12), float64] */;
  %11 = %6.1;
  %12 = @func_561(%8) /* ty=Tensor[(8, 8, 5), uint64] */;
  %13 = %9.1;
  (%10, %11, %var_3309, %var_3310, %12, %var_3319, %13)
}

def @func_5018(%var_5013: Tensor[(3, 40), float32], %var_5014: Tensor[(1584), uint32]) -> (Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(3, 40), float32], Tensor[(1584), uint32]) {
  %14 = @func_2434() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) */;
  %15 = %14.0;
  %16 = cast(%15, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  %17 = tan(%16) /* ty=Tensor[(8, 14, 12), float64] */;
  %18 = cast(%17, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  %19 = cast(%var_5013, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
  %20 = cast(%var_5014, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %21 = cast(%var_5014, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %22 = reshape(%19, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
  %23 = reshape(%20, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %24 = reshape(%21, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %25 = @func_1284(%22, %23, %24) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
  %26 = sqrt(%18) /* ty=Tensor[(8, 14, 12), float64] */;
  %27 = %25.1;
  (%26, %27, %var_5013, %var_5014)
}

def @func_5497(%var_5484: Tensor[(3, 88), float64], %var_5487: Tensor[(60, 2), float32], %var_5488: Tensor[(1584), uint32]) -> (Tensor[(11, 7, 8), bool], Tensor[(11, 12, 2), float64], Tensor[(3, 88), float64], Tensor[(1584), uint32], Tensor[(60, 2), float32], Tensor[(1584), uint32]) {
  %28 = @func_4065() /* ty=(Tensor[(10, 15, 15), float32], Tensor[(8, 14, 12), bool], Tensor[(576), float32], Tensor[(10, 15, 15), float32], Tensor[(11, 7, 8), bool], Tensor[(616), int64]) */;
  %29 = cast(%var_5484, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
  %30 = cast(%var_5484, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
  %31 = reshape(%29, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %32 = reshape(%30, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %33 = @func_3443(%31, %32) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(8, 14, 12), bool]) */;
  %34 = cast(%var_5487, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %35 = cast(%var_5488, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %36 = reshape(%34, newshape=[3, 40]) /* ty=Tensor[(3, 40), float32] */;
  %37 = reshape(%35, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %38 = @func_5018(%36, %37) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(3, 40), float32], Tensor[(1584), uint32]) */;
  %39 = %28.4;
  %40 = %33.0;
  %41 = %38.3;
  (%39, %40, %var_5484, %41, %var_5487, %var_5488)
}

def @func_5824() -> Tensor[(8, 14, 12), float64] {
  %42 = @func_5175() /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2912), float32], Tensor[(5, 4, 10), float64]) */;
  %42.0
}

def @func_2583(%var_2555: Tensor[(84), float64], %var_2556: Tensor[(4, 80), uint64]) -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool], Tensor[(2, 6, 7), bool], Tensor[(1, 14), float64], Tensor[(84), float64], Tensor[(4, 80), float32]) {
  %43 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %44 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 14), float64] */, dtype="float64") /* ty=Tensor[(1, 14), float64] */;
  %45 = cast(%var_2555, dtype="float64") /* ty=Tensor[(84), float64] */;
  %46 = cast(%var_2556, dtype="uint64") /* ty=Tensor[(4, 80), uint64] */;
  %47 = reshape(%44, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), float64] */;
  %48 = reshape(%45, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), float64] */;
  %49 = reshape(%46, newshape=[320, 1]) /* ty=Tensor[(320, 1), uint64] */;
  %50 = @func_1010(%47, %48, %49) /* ty=(Tensor[(2, 6, 7), bool], Tensor[(8, 8, 5), uint64], Tensor[(2, 320, 7), int32]) */;
  %51 = cast(%var_2556, dtype="float32") /* ty=Tensor[(4, 80), float32] */;
  %52 = erf(%51) /* ty=Tensor[(4, 80), float32] */;
  %53 = cast(%52, dtype="float32") /* ty=Tensor[(4, 80), float32] */;
  %54 = %43.0;
  %55 = @func_2106() /* ty=Tensor[(8, 14, 12), bool] */;
  %56 = %50.0;
  %57 = tan(%53) /* ty=Tensor[(4, 80), float32] */;
  (%54, %55, %56, meta[relay.Constant][0] /* ty=Tensor[(1, 14), float64] */, %var_2555, %57)
}

def @func_1370(%var_1358: Tensor[(60, 2), float32], %var_1359: Tensor[(1584), uint32], %var_1367: Tensor[(9, 4), float32]) -> (Tensor[(8, 14, 12), float64], Tensor[(396, 4), bool], Tensor[(60, 2), float32], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(9, 4), float32]) {
  %58 = cast(%var_1358, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %59 = cast(%var_1359, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %60 = cast(%var_1359, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %61 = reshape(%58, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
  %62 = reshape(%59, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %63 = reshape(%60, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %64 = @func_1284(%61, %62, %63) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
  %65 = cast(%var_1367, dtype="float32") /* ty=Tensor[(9, 4), float32] */;
  %66 = reshape(%65, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), float32] */;
  %67 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
  %68 = %64.3;
  %69 = @func_93(%66) /* ty=Tensor[(?, 6, 6), int8] */;
  (%67, %68, %var_1358, %var_1359, %69, %var_1367)
}

def @func_3369() -> (Tensor[(8, 14, 12), bool],) {
  %70 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %71 = %70.0;
  (%71,)
}

def @func_6142() -> Tensor[(8, 14, 12), bool] {
  %72 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %72.1
}

def @func_5771(%var_5701: Tensor[(120), float32], %var_5738: Tensor[(6, 20), float32]) -> (Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64], Tensor[(36), float32], Tensor[(8, 14, 12), bool], Tensor[(9, 16, 15), uint32], Tensor[(6, 20), float32], Tensor[(8, 14, 12), bool]) {
  %73 = cast(%var_5701, dtype="float32") /* ty=Tensor[(120), float32] */;
  %74 = cast(meta[relay.Constant][1] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %75 = cast(meta[relay.Constant][2] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %76 = reshape(%73, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %77 = reshape(%74, newshape=[12, 132]) /* ty=Tensor[(12, 132), uint32] */;
  %78 = reshape(%75, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %79 = @func_3328(%76, %77, %78) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) */;
  %80 = %79.1;
  %81 = cast(%80, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %82 = reshape(%81, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %83 = @func_1584(%82) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */;
  %84 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 16, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 16, 15), float32] */;
  %85 = acos(%84) /* ty=Tensor[(9, 16, 15), float32] */;
  %86 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 16, 15), float32] */, dtype="uint32") /* ty=Tensor[(9, 16, 15), uint32] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="uint32") /* ty=Tensor[(9, 16, 15), uint32] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %90 = cast(%var_5738, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %91 = shape_of(%80, dtype="int32") /* ty=Tensor[(2), int32] */;
  %92 = cast(%80, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %94 = @func_2172() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %95 = %83.5;
  %96 = @func_3868() /* ty=Tensor[(8, 14, 12), bool] */;
  %97 = left_shift(%88, %89) /* ty=Tensor[(9, 16, 15), uint32] */;
  %98 = multiply(%92, %93) /* ty=Tensor[(6, 20), float32] */;
  %99 = %94.0;
  (%var_5701, meta[relay.Constant][1] /* ty=Tensor[(1584), uint32] */, meta[relay.Constant][2] /* ty=Tensor[(320), uint64] */, %95, %96, %97, %98, %99)
}

def @func_798(%var_787: float32) -> (Tensor[(4, 15, 2), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64]) {
  %100 = cast(%var_787, dtype="float32") /* ty=float32 */;
  %101 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 15, 2), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 2), float32] */;
  %102 = cast(meta[relay.Constant][5] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %103 = reshape(%102, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
  %104 = floor_divide(%100, %101) /* ty=Tensor[(4, 15, 2), float32] */;
  %105 = @func_561(%103) /* ty=Tensor[(8, 8, 5), uint64] */;
  (%104, %105, meta[relay.Constant][5] /* ty=Tensor[(320), uint64] */)
}

def @func_2434() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) {
  %106 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %107 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %108 = %107.1;
  %109 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %110 = %109.1;
  %111 = cast(%110, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  %112 = shape_of(%108, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%108, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %115 = %106.0;
  %116 = power(%113, %114) /* ty=Tensor[(8, 14, 12), float64] */;
  (%115, %116)
}

def @func_696(%var_673: Tensor[(11, 11, 5), uint16], %var_686: Tensor[(324), uint32]) -> (Tensor[(11, 11, 5), bool], Tensor[(9, 3, 12), bool], Tensor[(324), uint32]) {
  %117 = cast(%var_673, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %118 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(11, 11, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 11, 5), uint16] */, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %121 = cast(%var_686, dtype="uint32") /* ty=Tensor[(324), uint32] */;
  %122 = reshape(%121, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %123 = @func_353(%122) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %124 = less(%119, %120) /* ty=Tensor[(11, 11, 5), bool] */;
  %125 = %123.0;
  (%124, %125, %var_686)
}

def @func_561(%var_549: Tensor[(8, 8, 5), uint64]) -> Tensor[(8, 8, 5), uint64] {
  %126 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 8, 5), uint64] */, dtype="uint64") /* ty=Tensor[(8, 8, 5), uint64] */;
  %127 = shape_of(%var_549, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%var_549, dtype="uint64") /* ty=Tensor[(8, 8, 5), uint64] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%128, %129) /* ty=Tensor[(8, 8, 5), uint64] */
}

def @func_4110(%var_4096: Tensor[(8, 14, 12), bool]) -> (Tensor[(8, 14, 12), uint16], Tensor[(8, 14, 12), bool]) {
  %130 = @func_2172() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %131 = %130.0;
  %132 = cast(%var_4096, dtype="uint16") /* ty=Tensor[(8, 14, 12), uint16] */;
  %133 = shape_of(%131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(%131, dtype="uint16") /* ty=Tensor[(8, 14, 12), uint16] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %136 = bitwise_and(%134, %135) /* ty=Tensor[(8, 14, 12), uint16] */;
  %137 = @func_3868() /* ty=Tensor[(8, 14, 12), bool] */;
  (%136, %137)
}

def @func_2345(%var_2316: Tensor[(1, 13, 9), float64], %var_2317: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), float64], Tensor[(3, 13, 9), float64]) {
  %138 = cast(%var_2316, dtype="float64") /* ty=Tensor[(1, 13, 9), float64] */;
  %139 = cast(%var_2317, dtype="float64") /* ty=Tensor[(3, 13, 9), float64] */;
  %140 = cast(%var_2317, dtype="float64") /* ty=Tensor[(3, 13, 9), float64] */;
  %141 = mod(%138, %139) /* ty=Tensor[(3, 13, 9), float64] */;
  %142 = acos(%140) /* ty=Tensor[(3, 13, 9), float64] */;
  (%141, %142)
}

def @func_6078() -> (Tensor[(5, 4, 10), float32], Tensor[(4, 15, 2), float32], float32) {
  %143 = @func_2510() /* ty=(Tensor[(5, 4, 10), float32],) */;
  %144 = cast(-8.10588f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %145 = reshape(%144, newshape=[]) /* ty=float32 */;
  %146 = @func_798(%145) /* ty=(Tensor[(4, 15, 2), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64]) */;
  %147 = %143.0;
  %148 = %146.0;
  (%147, %148, -8.10588f /* ty=float32 */)
}

def @func_6353() -> Tensor[(8, 14, 12), float32] {
  %149 = @func_2750() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) */;
  %150 = %149.1;
  %151 = cast(%150, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
  rsqrt(%151) /* ty=Tensor[(8, 14, 12), float32] */
}

def @func_1325() -> (Tensor[(8, 14, 12), float64],) {
  %152 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
  (%152,)
}

def @func_616(%var_604: Tensor[(6, 8, 14), uint16], %var_610: Tensor[(1584), uint32]) -> (Tensor[(6, 8, 14), uint16], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32]) {
  %153 = cast(%var_604, dtype="uint16") /* ty=Tensor[(6, 8, 14), uint16] */;
  %154 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(6, 8, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 8, 14), uint16] */, dtype="uint16") /* ty=Tensor[(6, 8, 14), uint16] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %157 = cast(%var_610, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %158 = cast(%var_610, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %159 = reshape(%157, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
  %160 = reshape(%158, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
  %161 = maximum(%155, %156) /* ty=Tensor[(6, 8, 14), uint16] */;
  %162 = @func_212(%159, %160) /* ty=Tensor[(11, 16, 9), uint32] */;
  (%161, %162, %var_610)
}

def @func_2158() -> Tensor[(8, 14, 12), float64] {
  %163 = @func_1325() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %163.0
}

def @func_2510() -> (Tensor[(5, 4, 10), float32],) {
  %164 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 4, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 4, 10), float32] */;
  %165 = sin(%164) /* ty=Tensor[(5, 4, 10), float32] */;
  (%165,)
}

def @func_6022(%var_5991: Tensor[(36), float32]) -> (Tensor[(8, 14, 12), float64], Tensor[(36), uint64], Tensor[(320), uint64], Tensor[(1584), uint32]) {
  %166 = @func_5918() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %167 = cast(%var_5991, dtype="float32") /* ty=Tensor[(36), float32] */;
  %168 = reshape(%167, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), float32] */;
  %169 = @func_93(%168) /* ty=Tensor[(?, 6, 6), int8] */;
  %170 = cast(%169, dtype="uint64") /* ty=Tensor[(?, 6, 6), uint64] */;
  %171 = shape_of(%var_5991, dtype="int32") /* ty=Tensor[(1), int32] */;
  %172 = cast(%var_5991, dtype="uint64") /* ty=Tensor[(36), uint64] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %174 = cast(meta[relay.Constant][10] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %175 = logical_xor(%172, %173) /* ty=Tensor[(36), uint64] */;
  %176 = cast(%175, dtype="float32") /* ty=Tensor[(36), float32] */;
  %177 = reshape(%174, newshape=[792, 2]) /* ty=Tensor[(792, 2), uint32] */;
  %178 = reshape(%176, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %179 = @func_4700(%177, %178) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(4, 15, 2), float32], float32, Tensor[(8, 14, 12), float64], Tensor[(320), uint64], Tensor[(792, 2), uint32], Tensor[(4, 80), uint64], Tensor[(448), float64], Tensor[(36), float32]) */;
  %180 = %166.0;
  %181 = %179.4;
  (%180, %175, %181, meta[relay.Constant][10] /* ty=Tensor[(1584), uint32] */)
}

def @func_876(%var_872: Tensor[(132, 12), uint32]) -> (Tensor[(10, 2, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint32], Tensor[(9, 3, 12), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(6, 8, 14), uint16], Tensor[(672), uint16], Tensor[(132, 12), uint32]) {
  %182 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(10, 2, 7), float64] */;
  %183 = cast(meta[relay.Constant][12] /* ty=Tensor[(324), uint32] */, dtype="uint32") /* ty=Tensor[(324), uint32] */;
  %184 = reshape(%183, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %185 = @func_353(%184) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %186 = %185.1;
  %187 = cast(%186, dtype="uint32") /* ty=Tensor[(9, 3, 12), uint32] */;
  %188 = reshape(%187, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %189 = @func_353(%188) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %190 = %189.0;
  %191 = cast(%190, dtype="float32") /* ty=Tensor[(9, 3, 12), float32] */;
  %192 = cast(meta[relay.Constant][13] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %193 = reshape(%192, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
  %194 = cast(meta[relay.Constant][14] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %195 = cast(%var_872, dtype="uint32") /* ty=Tensor[(132, 12), uint32] */;
  %196 = reshape(%194, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), uint16] */;
  %197 = reshape(%195, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %198 = @func_616(%196, %197) /* ty=(Tensor[(6, 8, 14), uint16], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32]) */;
  %199 = cos(%182) /* ty=Tensor[(10, 2, 7), float64] */;
  %200 = tan(%191) /* ty=Tensor[(9, 3, 12), float32] */;
  %201 = @func_561(%193) /* ty=Tensor[(8, 8, 5), uint64] */;
  %202 = %198.0;
  (%199, %186, meta[relay.Constant][12] /* ty=Tensor[(324), uint32] */, %200, %201, meta[relay.Constant][13] /* ty=Tensor[(320), uint64] */, %202, meta[relay.Constant][14] /* ty=Tensor[(672), uint16] */, %var_872)
}

def @func_5115(%var_5038: Tensor[(324), uint32], %var_5083: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), bool], Tensor[(16, 14, 2), bool], Tensor[(448), float64], Tensor[(324), uint32], Tensor[(8, 14, 12), bool], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(8, 14, 12), bool], Tensor[(84, 1), float64], Tensor[(14, 1), float64], Tensor[(320), uint64], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float64]) {
  %203 = cast(meta[relay.Constant][15] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %204 = cast(%var_5038, dtype="uint32") /* ty=Tensor[(324), uint32] */;
  %205 = reshape(%203, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %206 = reshape(%204, newshape=[18, 18]) /* ty=Tensor[(18, 18), uint32] */;
  %207 = @func_4411(%205, %206) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64], Tensor[(18, 18), uint32], Tensor[(16, 14, 2), bool], Tensor[(9, 3, 12), float64]) */;
  %208 = cast(meta[relay.Constant][16] /* ty=Tensor[(60, 2), float32] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %209 = cast(meta[relay.Constant][17] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %210 = reshape(%208, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
  %211 = reshape(%209, newshape=[672]) /* ty=Tensor[(672), uint16] */;
  %212 = @func_1065(%210, %211) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
  %213 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 1), float64] */;
  %214 = cast(%var_5083, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %215 = reshape(%213, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %216 = reshape(%214, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %217 = @func_1465(%215, %216) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84, 1), float64], Tensor[(320), uint64]) */;
  %218 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  %219 = %207.3;
  %220 = @func_3474() /* ty=Tensor[(8, 14, 12), bool] */;
  %221 = %212.3;
  %222 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  %223 = %217.3;
  %224 = @func_2603() /* ty=Tensor[(15, 16, 2), float32] */;
  %225 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
  (%218, %219, meta[relay.Constant][15] /* ty=Tensor[(448), float64] */, %var_5038, %220, %221, meta[relay.Constant][16] /* ty=Tensor[(60, 2), float32] */, meta[relay.Constant][17] /* ty=Tensor[(672), uint16] */, %222, %223, meta[relay.Constant][18] /* ty=Tensor[(14, 1), float64] */, %var_5083, %224, %225)
}

def @func_1827(%var_1702: Tensor[(9, 15, 8), int64], %var_1729: Tensor[(11, 16, 9), uint32]) -> (Tensor[(324), uint32], Tensor[(162, 2), uint32], Tensor[(9, 15, 8), float64], Tensor[(120, 1), float32], Tensor[(11, 16, 9), bool], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(9, 3, 12), bool], Tensor[(324), uint32], Tensor[(9, 15, 8), float32], Tensor[(605), float32], Tensor[(605), float64], Tensor[(8, 14, 12), bool], Tensor[(672), uint16], Tensor[(9, 3, 12), bool], Tensor[(8, 14, 12), bool]) {
  %226 = cast(meta[relay.Constant][19] /* ty=Tensor[(605), uint16] */, dtype="uint16") /* ty=Tensor[(605), uint16] */;
  %227 = cast(meta[relay.Constant][20] /* ty=Tensor[(162, 2), uint32] */, dtype="uint32") /* ty=Tensor[(162, 2), uint32] */;
  %228 = reshape(%226, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint16] */;
  %229 = reshape(%227, newshape=[324]) /* ty=Tensor[(324), uint32] */;
  %230 = @func_696(%228, %229) /* ty=(Tensor[(11, 11, 5), bool], Tensor[(9, 3, 12), bool], Tensor[(324), uint32]) */;
  %231 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 15, 8), int64] */, dtype="int64") /* ty=Tensor[(9, 15, 8), int64] */;
  %232 = shape_of(%var_1702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%var_1702, dtype="int64") /* ty=Tensor[(9, 15, 8), int64] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %235 = right_shift(%233, %234) /* ty=Tensor[(9, 15, 8), int64] */;
  %236 = cast(meta[relay.Constant][22] /* ty=Tensor[(9, 15, 8), int64] */, dtype="float64") /* ty=Tensor[(9, 15, 8), float64] */;
  %237 = shape_of(%235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%235, dtype="float64") /* ty=Tensor[(9, 15, 8), float64] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %240 = cast(meta[relay.Constant][23] /* ty=Tensor[(120, 1), float32] */, dtype="float32") /* ty=Tensor[(120, 1), float32] */;
  %241 = reshape(%240, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %242 = @func_1584(%241) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */;
  %243 = %242.1;
  %244 = cast(%var_1729, dtype="bool") /* ty=Tensor[(11, 16, 9), bool] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="bool") /* ty=Tensor[(11, 16, 9), bool] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %248 = cast(meta[relay.Constant][23] /* ty=Tensor[(120, 1), float32] */, dtype="float32") /* ty=Tensor[(120, 1), float32] */;
  %249 = cast(meta[relay.Constant][24] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %250 = reshape(%248, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
  %251 = reshape(%249, newshape=[672]) /* ty=Tensor[(672), uint16] */;
  %252 = @func_1065(%250, %251) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
  %253 = cast(meta[relay.Constant][20] /* ty=Tensor[(162, 2), uint32] */, dtype="uint32") /* ty=Tensor[(162, 2), uint32] */;
  %254 = reshape(%253, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %255 = @func_353(%254) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %256 = cast(meta[relay.Constant][19] /* ty=Tensor[(605), uint16] */, dtype="uint16") /* ty=Tensor[(605), uint16] */;
  %257 = cast(meta[relay.Constant][20] /* ty=Tensor[(162, 2), uint32] */, dtype="uint32") /* ty=Tensor[(162, 2), uint32] */;
  %258 = reshape(%256, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint16] */;
  %259 = reshape(%257, newshape=[324]) /* ty=Tensor[(324), uint32] */;
  %260 = @func_696(%258, %259) /* ty=(Tensor[(11, 11, 5), bool], Tensor[(9, 3, 12), bool], Tensor[(324), uint32]) */;
  %261 = cast(%var_1702, dtype="float32") /* ty=Tensor[(9, 15, 8), float32] */;
  %262 = cast(meta[relay.Constant][25] /* ty=Tensor[(605), uint16] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %263 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(605), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %264 = cast(meta[relay.Constant][19] /* ty=Tensor[(605), uint16] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?), float32] */;
  %266 = cast(meta[relay.Constant][25] /* ty=Tensor[(605), uint16] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %267 = cosh(%266) /* ty=Tensor[(605), float32] */;
  %268 = cast(%267, dtype="float64") /* ty=Tensor[(605), float64] */;
  %269 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %270 = cast(meta[relay.Constant][23] /* ty=Tensor[(120, 1), float32] */, dtype="float32") /* ty=Tensor[(120, 1), float32] */;
  %271 = cast(%243, dtype="uint32") /* ty=Tensor[(11, 16, 9), uint32] */;
  %272 = cast(%var_1729, dtype="uint32") /* ty=Tensor[(11, 16, 9), uint32] */;
  %273 = reshape(%270, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
  %274 = reshape(%271, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %275 = reshape(%272, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %276 = @func_1284(%273, %274, %275) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
  %277 = %230.2;
  %278 = cast(%277, dtype="uint32") /* ty=Tensor[(324), uint32] */;
  %279 = reshape(%278, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %280 = @func_353(%279) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %281 = power(%238, %239) /* ty=Tensor[(9, 15, 8), float64] */;
  %282 = not_equal(%246, %247) /* ty=Tensor[(11, 16, 9), bool] */;
  %283 = %252.1;
  %284 = %255.0;
  %285 = %260.2;
  %286 = acos(%261) /* ty=Tensor[(9, 15, 8), float32] */;
  %287 = divide(%264, %265) /* ty=Tensor[(605), float32] */;
  %288 = atanh(%268) /* ty=Tensor[(605), float64] */;
  %289 = %269.1;
  %290 = %276.2;
  %291 = %280.0;
  %292 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  (%277, meta[relay.Constant][20] /* ty=Tensor[(162, 2), uint32] */, %281, meta[relay.Constant][23] /* ty=Tensor[(120, 1), float32] */, %282, %283, meta[relay.Constant][24] /* ty=Tensor[(672), uint16] */, %284, %285, %286, %287, %288, %289, %290, %291, %292)
}

def @func_2885() -> (Tensor[(14, 5, 3), uint32],) {
  %293 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 5, 3), uint32] */, dtype="uint32") /* ty=Tensor[(1, 5, 3), uint32] */;
  %294 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 5, 3), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5, 3), uint32] */;
  %295 = add(%293, %294) /* ty=Tensor[(14, 5, 3), uint32] */;
  (%295,)
}

def @func_1398() -> Tensor[(8, 14, 12), bool] {
  %296 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
  %297 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 14, 12), float64] */, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %298 = shape_of(%296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%296, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%299, %300) /* ty=Tensor[(8, 14, 12), bool] */
}

def @func_2025(%var_2010: Tensor[(14), float64], %var_2014: Tensor[(14, 15, 4), float32]) -> (Tensor[(320), uint64], Tensor[(14), float64], Tensor[(320), uint64], Tensor[(14, 15, 4), uint64], Tensor[(2, 6, 7), bool]) {
  %301 = cast(%var_2010, dtype="float64") /* ty=Tensor[(14), float64] */;
  %302 = cast(meta[relay.Constant][29] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %303 = reshape(%301, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %304 = reshape(%302, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %305 = @func_1465(%303, %304) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84, 1), float64], Tensor[(320), uint64]) */;
  %306 = cast(meta[relay.Constant][30] /* ty=Tensor[(14, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 15, 4), float32] */;
  %307 = log10(%306) /* ty=Tensor[(14, 15, 4), float32] */;
  %308 = cast(%var_2014, dtype="uint64") /* ty=Tensor[(14, 15, 4), uint64] */;
  %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%307, dtype="uint64") /* ty=Tensor[(14, 15, 4), uint64] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %312 = cast(%var_2010, dtype="float64") /* ty=Tensor[(14), float64] */;
  %313 = cast(meta[relay.Constant][29] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %314 = reshape(%312, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %315 = reshape(%313, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %316 = @func_1465(%314, %315) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84, 1), float64], Tensor[(320), uint64]) */;
  %317 = %305.4;
  %318 = bitwise_xor(%310, %311) /* ty=Tensor[(14, 15, 4), uint64] */;
  %319 = %316.1;
  (%317, %var_2010, meta[relay.Constant][29] /* ty=Tensor[(320), uint64] */, %318, %319)
}

def @func_2750() -> (Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) {
  %320 = @func_2510() /* ty=(Tensor[(5, 4, 10), float32],) */;
  %321 = @func_1325() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %322 = @func_2269() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) */;
  %323 = %320.0;
  %324 = %321.0;
  %325 = %322.0;
  (%323, %324, %325)
}

def @func_3727(%var_3694: Tensor[(13, 14, 16), float32]) -> (Tensor[(13, 14, 16), float32], Tensor[(8, 14, 12), bool]) {
  %326 = cast(%var_3694, dtype="float32") /* ty=Tensor[(13, 14, 16), float32] */;
  %327 = @func_2750() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) */;
  %328 = exp(%326) /* ty=Tensor[(13, 14, 16), float32] */;
  %329 = %327.2;
  (%328, %329)
}

def @func_4827(%var_4822: Tensor[(120), float32], %var_4823: Tensor[(1584), uint32]) -> (Tensor[(8, 14, 12), bool], Tensor[(120), float32], Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64]) {
  %330 = cast(%var_4822, dtype="float32") /* ty=Tensor[(120), float32] */;
  %331 = cast(%var_4823, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %332 = cast(meta[relay.Constant][31] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %333 = reshape(%330, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %334 = reshape(%331, newshape=[12, 132]) /* ty=Tensor[(12, 132), uint32] */;
  %335 = reshape(%332, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %336 = @func_3328(%333, %334, %335) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) */;
  %337 = @func_3868() /* ty=Tensor[(8, 14, 12), bool] */;
  %338 = %336.2;
  (%337, %338, %var_4822, %var_4823, meta[relay.Constant][31] /* ty=Tensor[(320), uint64] */)
}

def @func_2083(%var_2067: Tensor[(8, 4, 16), float32], %var_2073: Tensor[(120), float32]) -> (Tensor[(8, 4, 16), float32], Tensor[(396, 4), bool], Tensor[(120), float32], Tensor[(1584), uint32]) {
  %339 = cast(%var_2067, dtype="float32") /* ty=Tensor[(8, 4, 16), float32] */;
  %340 = cast(%var_2073, dtype="float32") /* ty=Tensor[(120), float32] */;
  %341 = cast(meta[relay.Constant][32] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %342 = cast(meta[relay.Constant][32] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %343 = reshape(%340, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
  %344 = reshape(%341, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %345 = reshape(%342, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %346 = @func_1284(%343, %344, %345) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
  %347 = sigmoid(%339) /* ty=Tensor[(8, 4, 16), float32] */;
  %348 = %346.3;
  (%347, %348, %var_2073, meta[relay.Constant][32] /* ty=Tensor[(1584), uint32] */)
}

def @func_3966() -> (Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64]) {
  %349 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
  %350 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
  (%349, %350)
}

def @func_4510(%var_4501: Tensor[(5, 4, 10), float32]) -> (Tensor[(5, 4, 10), uint64],) {
  %351 = @func_2510() /* ty=(Tensor[(5, 4, 10), float32],) */;
  %352 = %351.0;
  %353 = cast(%var_4501, dtype="uint64") /* ty=Tensor[(5, 4, 10), uint64] */;
  %354 = shape_of(%352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%352, dtype="uint64") /* ty=Tensor[(5, 4, 10), uint64] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %357 = minimum(%355, %356) /* ty=Tensor[(5, 4, 10), uint64] */;
  (%357,)
}

def @func_4700(%var_4691: Tensor[(792, 2), uint32], %var_4694: Tensor[(36), float32]) -> (Tensor[(8, 14, 12), bool], Tensor[(4, 15, 2), float32], float32, Tensor[(8, 14, 12), float64], Tensor[(320), uint64], Tensor[(792, 2), uint32], Tensor[(4, 80), uint64], Tensor[(448), float64], Tensor[(36), float32]) {
  %358 = @func_4179() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %359 = cast(-5.98026f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %360 = reshape(%359, newshape=[]) /* ty=float32 */;
  %361 = @func_798(%360) /* ty=(Tensor[(4, 15, 2), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64]) */;
  %362 = cast(%var_4691, dtype="uint32") /* ty=Tensor[(792, 2), uint32] */;
  %363 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 80), uint64] */, dtype="uint64") /* ty=Tensor[(4, 80), uint64] */;
  %364 = cast(meta[relay.Constant][34] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %365 = cast(%var_4694, dtype="float32") /* ty=Tensor[(36), float32] */;
  %366 = reshape(%362, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %367 = reshape(%363, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %368 = reshape(%364, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %369 = reshape(%365, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %370 = @func_4324(%366, %367, %368, %369) /* ty=(Tensor[(120), float32], Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64], Tensor[(8, 14, 12), float64], Tensor[(16, 14, 2), float64], Tensor[(448), float64], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */;
  %371 = %358.0;
  %372 = %361.0;
  %373 = @func_3255() /* ty=Tensor[(8, 14, 12), float64] */;
  %374 = %370.3;
  (%371, %372, -5.98026f /* ty=float32 */, %373, %374, %var_4691, meta[relay.Constant][33] /* ty=Tensor[(4, 80), uint64] */, meta[relay.Constant][34] /* ty=Tensor[(448), float64] */, %var_4694)
}

def @func_3225(%var_3188: Tensor[(8, 14, 12), float64]) -> (Tensor[(8, 14, 12), uint8], Tensor[(8, 14, 12), int32]) {
  %375 = @func_2158() /* ty=Tensor[(8, 14, 12), float64] */;
  %376 = cast(%var_3188, dtype="uint8") /* ty=Tensor[(8, 14, 12), uint8] */;
  %377 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%375, dtype="uint8") /* ty=Tensor[(8, 14, 12), uint8] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %380 = cast(%var_3188, dtype="int32") /* ty=Tensor[(8, 14, 12), int32] */;
  %381 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%375, dtype="int32") /* ty=Tensor[(8, 14, 12), int32] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %384 = add(%378, %379) /* ty=Tensor[(8, 14, 12), uint8] */;
  %385 = subtract(%382, %383) /* ty=Tensor[(8, 14, 12), int32] */;
  (%384, %385)
}

def @func_3520() -> (Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(120), float32], Tensor[(8, 14, 12), uint8]) {
  %386 = cast(meta[relay.Constant][35] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %387 = reshape(%386, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %388 = @func_1584(%387) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */;
  %389 = @func_3474() /* ty=Tensor[(8, 14, 12), bool] */;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  %391 = reshape(%390, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float64] */;
  %392 = @func_3225(%391) /* ty=(Tensor[(8, 14, 12), uint8], Tensor[(8, 14, 12), int32]) */;
  %393 = %388.5;
  %394 = %392.0;
  (%389, %393, meta[relay.Constant][35] /* ty=Tensor[(120), float32] */, %394)
}

def @func_93(%var_65: Tensor[(1, 6, 6), float32]) -> Tensor[(?, 6, 6), int8] {
  %395 = cast(%var_65, dtype="float64") /* ty=Tensor[(1, 6, 6), float64] */;
  %396 = exp(%395) /* ty=Tensor[(1, 6, 6), float64] */;
  %397 = cast(5.22226f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %398 = cast(%var_65, dtype="float32") /* ty=Tensor[(1, 6, 6), float32] */;
  %399 = maximum(%397, %398) /* ty=Tensor[(1, 6, 6), float32] */;
  %400 = cast(%399, dtype="int8") /* ty=Tensor[(1, 6, 6), int8] */;
  %401 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%396, dtype="int8") /* ty=Tensor[(1, 6, 6), int8] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%402, %403) /* ty=Tensor[(?, 6, 6), int8] */
}

def @func_1921(%var_1890: Tensor[(8, 14, 12), bool]) -> (Tensor[(8, 14, 12), int16], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  %404 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %405 = %404.1;
  %406 = cast(%var_1890, dtype="int16") /* ty=Tensor[(8, 14, 12), int16] */;
  %407 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%405, dtype="int16") /* ty=Tensor[(8, 14, 12), int16] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %410 = cast(%var_1890, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %411 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(8, 14, 12), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 14, 12), bool] */, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %414 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %415 = %414.0;
  %416 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 14, 12), bool] */, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %417 = shape_of(%415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%415, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %420 = less_equal(%418, %419) /* ty=Tensor[(8, 14, 12), bool] */;
  %421 = cast(%420, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %422 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%405, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %425 = bitwise_or(%408, %409) /* ty=Tensor[(8, 14, 12), int16] */;
  %426 = greater(%412, %413) /* ty=Tensor[(8, 14, 12), bool] */;
  %427 = equal(%423, %424) /* ty=Tensor[(8, 14, 12), bool] */;
  (%425, %426, %427)
}

def @func_6296(%var_6257: Tensor[(420, 2), float32], %var_6271: Tensor[(6, 10, 16), float64]) -> (Tensor[(320), uint64], Tensor[(14), float64], Tensor[(420, 2), float32], Tensor[(6, 10, 16), bool], Tensor[(8, 14, 12), bool], Tensor[(4, 15, 2), float32], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32], Tensor[(8, 8, 5), uint64]) {
  %428 = cast(meta[relay.Constant][37] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
  %429 = cast(%var_6257, dtype="float32") /* ty=Tensor[(420, 2), float32] */;
  %430 = reshape(%428, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %431 = reshape(%429, newshape=[14, 15, 4]) /* ty=Tensor[(14, 15, 4), float32] */;
  %432 = @func_2025(%430, %431) /* ty=(Tensor[(320), uint64], Tensor[(14), float64], Tensor[(320), uint64], Tensor[(14, 15, 4), uint64], Tensor[(2, 6, 7), bool]) */;
  %433 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %434 = cos(%433) /* ty=Tensor[(1, 10, 16), float64] */;
  %435 = cast(%434, dtype="bool") /* ty=Tensor[(1, 10, 16), bool] */;
  %436 = cast(%var_6271, dtype="bool") /* ty=Tensor[(6, 10, 16), bool] */;
  %437 = @func_6078() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(4, 15, 2), float32], float32) */;
  %438 = cast(meta[relay.Constant][39] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %439 = cast(meta[relay.Constant][39] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %440 = reshape(%438, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
  %441 = reshape(%439, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
  %442 = %432.0;
  %443 = cast(%442, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %444 = reshape(%443, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
  %445 = logical_or(%435, %436) /* ty=Tensor[(6, 10, 16), bool] */;
  %446 = @func_2106() /* ty=Tensor[(8, 14, 12), bool] */;
  %447 = %437.1;
  %448 = @func_212(%440, %441) /* ty=Tensor[(11, 16, 9), uint32] */;
  %449 = @func_561(%444) /* ty=Tensor[(8, 8, 5), uint64] */;
  (%442, meta[relay.Constant][37] /* ty=Tensor[(14), float64] */, %var_6257, %445, %446, %447, %448, meta[relay.Constant][39] /* ty=Tensor[(1584), uint32] */, %449)
}

def @func_6361(%var_6358: Tensor[(1, 15, 9), float32]) -> Tensor[(1, 15, 9), float32] {
  %450 = cast(%var_6358, dtype="float32") /* ty=Tensor[(1, 15, 9), float32] */;
  cosh(%450) /* ty=Tensor[(1, 15, 9), float32] */
}

def @func_1674() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  %451 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  %452 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  (%451, %452)
}

def @func_5175() -> (Tensor[(8, 14, 12), float64], Tensor[(2912), float32], Tensor[(5, 4, 10), float64]) {
  %453 = @func_3634() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %454 = cast(meta[relay.Constant][40] /* ty=Tensor[(2912), float32] */, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %455 = reshape(%454, newshape=[2912]) /* ty=Tensor[(2912), float32] */;
  %456 = @func_4349(%455) /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), bool], Tensor[(2912), float32]) */;
  %457 = %456.0;
  %458 = cast(%457, dtype="float64") /* ty=Tensor[(5, 4, 10), float64] */;
  %459 = %453.0;
  %460 = asinh(%458) /* ty=Tensor[(5, 4, 10), float64] */;
  (%459, meta[relay.Constant][40] /* ty=Tensor[(2912), float32] */, %460)
}

def @func_3661() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) {
  %461 = @func_2750() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) */;
  %462 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %463 = %461.2;
  %464 = %462.0;
  %465 = @func_2158() /* ty=Tensor[(8, 14, 12), float64] */;
  (%463, %464, %465)
}

def @func_2172() -> (Tensor[(8, 14, 12), bool],) {
  %466 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %467 = %466.0;
  (%467,)
}

def @func_5909() -> (Tensor[(8, 14, 12), float64], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32], Tensor[(2912), float64]) {
  %468 = cast(meta[relay.Constant][41] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %469 = cast(meta[relay.Constant][41] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %470 = reshape(%468, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
  %471 = reshape(%469, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
  %472 = @func_5175() /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2912), float32], Tensor[(5, 4, 10), float64]) */;
  %473 = %472.1;
  %474 = cast(%473, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %475 = @func_5221() /* ty=Tensor[(8, 14, 12), float64] */;
  %476 = @func_212(%470, %471) /* ty=Tensor[(11, 16, 9), uint32] */;
  %477 = log10(%474) /* ty=Tensor[(2912), float64] */;
  (%475, %476, meta[relay.Constant][41] /* ty=Tensor[(1584), uint32] */, %477)
}

def @func_3177(%var_3130: Tensor[(672, 1), uint16]) -> (Tensor[(8, 14, 12), bool], Tensor[(5, 2, 12), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(576), float32], Tensor[(672, 1), float64], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  %478 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %479 = cast(meta[relay.Constant][42] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %480 = cast(%var_3130, dtype="uint16") /* ty=Tensor[(672, 1), uint16] */;
  %481 = reshape(%479, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
  %482 = reshape(%480, newshape=[672]) /* ty=Tensor[(672), uint16] */;
  %483 = @func_1065(%481, %482) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
  %484 = cast(meta[relay.Constant][43] /* ty=Tensor[(576), float32] */, dtype="float32") /* ty=Tensor[(576), float32] */;
  %485 = reshape(%484, newshape=[6, 12, 8]) /* ty=Tensor[(6, 12, 8), float32] */;
  %486 = @func_2300(%485) /* ty=(Tensor[(6, 12, 8), float32], Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(1, 1584), float64]) */;
  %487 = cast(%var_3130, dtype="float32") /* ty=Tensor[(672, 1), float32] */;
  %488 = cosh(%487) /* ty=Tensor[(672, 1), float32] */;
  %489 = cast(%488, dtype="float64") /* ty=Tensor[(672, 1), float64] */;
  %490 = %478.0;
  %491 = cast(%490, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %492 = reshape(%491, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), bool] */;
  %493 = @func_1921(%492) /* ty=(Tensor[(8, 14, 12), int16], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %494 = %493.2;
  %495 = cast(%494, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %496 = reshape(%495, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), bool] */;
  %497 = @func_1921(%496) /* ty=(Tensor[(8, 14, 12), int16], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %498 = %483.0;
  %499 = %486.2;
  %500 = atan(%489) /* ty=Tensor[(672, 1), float64] */;
  %501 = %497.2;
  (%490, %498, meta[relay.Constant][42] /* ty=Tensor[(120), float32] */, %499, meta[relay.Constant][43] /* ty=Tensor[(576), float32] */, %500, %494, %501)
}

def @func_1465(%var_1451: Tensor[(14), float64], %var_1453: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), float64], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84, 1), float64], Tensor[(320), uint64]) {
  %502 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
  %503 = cast(%502, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  %504 = cast(%var_1451, dtype="float64") /* ty=Tensor[(14), float64] */;
  %505 = cast(meta[relay.Constant][44] /* ty=Tensor[(84, 1), float64] */, dtype="float64") /* ty=Tensor[(84, 1), float64] */;
  %506 = cast(%var_1453, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %507 = reshape(%504, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), float64] */;
  %508 = reshape(%505, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), float64] */;
  %509 = reshape(%506, newshape=[320, 1]) /* ty=Tensor[(320, 1), uint64] */;
  %510 = @func_1010(%507, %508, %509) /* ty=(Tensor[(2, 6, 7), bool], Tensor[(8, 8, 5), uint64], Tensor[(2, 320, 7), int32]) */;
  %511 = log(%503) /* ty=Tensor[(8, 14, 12), float64] */;
  %512 = %510.0;
  (%511, %512, %var_1451, meta[relay.Constant][44] /* ty=Tensor[(84, 1), float64] */, %var_1453)
}

def @func_212(%var_202: Tensor[(11, 16, 9), uint32], %var_203: Tensor[(11, 16, 9), uint32]) -> Tensor[(11, 16, 9), uint32] {
  %513 = cast(%var_203, dtype="uint32") /* ty=Tensor[(11, 16, 9), uint32] */;
  %514 = shape_of(%var_202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%var_202, dtype="uint32") /* ty=Tensor[(11, 16, 9), uint32] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%515, %516) /* ty=Tensor[(11, 16, 9), uint32] */
}

def @func_1010(%var_970: Tensor[(2, 1, 7), float64], %var_971: Tensor[(2, 6, 7), float64], %var_995: Tensor[(320, 1), uint64]) -> (Tensor[(2, 6, 7), bool], Tensor[(8, 8, 5), uint64], Tensor[(2, 320, 7), int32]) {
  %517 = cast(%var_970, dtype="bool") /* ty=Tensor[(2, 1, 7), bool] */;
  %518 = cast(%var_971, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
  %519 = cast(%var_995, dtype="uint64") /* ty=Tensor[(320, 1), uint64] */;
  %520 = reshape(%519, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
  %521 = cast(%var_970, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
  %522 = sinh(%521) /* ty=Tensor[(2, 1, 7), float32] */;
  %523 = cast(%522, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
  %524 = exp(%523) /* ty=Tensor[(2, 1, 7), float32] */;
  %525 = cast(%524, dtype="int32") /* ty=Tensor[(2, 1, 7), int32] */;
  %526 = cast(%var_995, dtype="int32") /* ty=Tensor[(320, 1), int32] */;
  %527 = greater(%517, %518) /* ty=Tensor[(2, 6, 7), bool] */;
  %528 = @func_561(%520) /* ty=Tensor[(8, 8, 5), uint64] */;
  %529 = left_shift(%525, %526) /* ty=Tensor[(2, 320, 7), int32] */;
  (%527, %528, %529)
}

def @func_353(%var_332: Tensor[(9, 3, 12), uint32]) -> (Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) {
  %530 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 3, 12), uint32] */, dtype="bool") /* ty=Tensor[(9, 3, 12), bool] */;
  %531 = shape_of(%var_332, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%var_332, dtype="bool") /* ty=Tensor[(9, 3, 12), bool] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %534 = cast(%var_332, dtype="float64") /* ty=Tensor[(9, 3, 12), float64] */;
  %535 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(9, 3, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 3, 12), uint32] */, dtype="float64") /* ty=Tensor[(9, 3, 12), float64] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %538 = equal(%532, %533) /* ty=Tensor[(9, 3, 12), bool] */;
  %539 = multiply(%536, %537) /* ty=Tensor[(9, 3, 12), float64] */;
  (%538, %539)
}

def @func_2300(%var_2278: Tensor[(6, 12, 8), float32]) -> (Tensor[(6, 12, 8), float32], Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(1, 1584), float64]) {
  %540 = cast(%var_2278, dtype="float32") /* ty=Tensor[(6, 12, 8), float32] */;
  %541 = cast(meta[relay.Constant][46] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %542 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 1584), float64] */, dtype="float64") /* ty=Tensor[(1, 1584), float64] */;
  %543 = reshape(%541, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %544 = reshape(%542, newshape=[1584]) /* ty=Tensor[(1584), float64] */;
  %545 = @func_1996(%543, %544) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(9, 4), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(1584), int64], Tensor[(8, 14, 12), bool], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(1584), bool], Tensor[(8, 8, 5), uint64], Tensor[(8, 14, 12), bool]) */;
  %546 = sinh(%540) /* ty=Tensor[(6, 12, 8), float32] */;
  %547 = %545.5;
  (%546, %547, meta[relay.Constant][46] /* ty=Tensor[(36), float32] */, meta[relay.Constant][47] /* ty=Tensor[(1, 1584), float64] */)
}

def @func_3634() -> (Tensor[(8, 14, 12), float64],) {
  %548 = @func_2158() /* ty=Tensor[(8, 14, 12), float64] */;
  (%548,)
}

def @func_1284(%var_1228: Tensor[(6, 20), float32], %var_1231: Tensor[(396, 4), uint32], %var_1275: Tensor[(396, 4), uint32]) -> (Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) {
  %549 = cast(%var_1228, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %550 = cast(meta[relay.Constant][48] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %551 = reshape(%549, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
  %552 = reshape(%550, newshape=[672]) /* ty=Tensor[(672), uint16] */;
  %553 = @func_1065(%551, %552) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
  %554 = %553.3;
  %555 = cast(%var_1231, dtype="bool") /* ty=Tensor[(396, 4), bool] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(2), int32] */;
  %557 = cast(%554, dtype="bool") /* ty=Tensor[(396, 4), bool] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %559 = cast(%var_1228, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %560 = cast(meta[relay.Constant][48] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %561 = reshape(%559, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
  %562 = reshape(%560, newshape=[672]) /* ty=Tensor[(672), uint16] */;
  %563 = @func_1065(%561, %562) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
  %564 = cast(%var_1275, dtype="float64") /* ty=Tensor[(396, 4), float64] */;
  %565 = shape_of(%554, dtype="int32") /* ty=Tensor[(2), int32] */;
  %566 = cast(%554, dtype="float64") /* ty=Tensor[(396, 4), float64] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %568 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
  %569 = logical_or(%557, %558) /* ty=Tensor[(396, 4), bool] */;
  %570 = %563.3;
  %571 = floor_divide(%566, %567) /* ty=Tensor[(396, 4), float64] */;
  (%568, %var_1228, meta[relay.Constant][48] /* ty=Tensor[(672), uint16] */, %569, %570, %571)
}

def @func_5651(%var_5596: Tensor[(30, 4), float32], %var_5614: Tensor[(320), uint64], %var_5625: Tensor[(30, 4), float32]) -> (Tensor[(8, 14, 12), bool], Tensor[(11, 7, 8), bool], Tensor[(616), int64], Tensor[(672), uint16], Tensor[(8, 14, 12), float64], Tensor[(30, 4), int32], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84), float64], Tensor[(320), uint64], Tensor[(11, 7, 8), bool], Tensor[(264), float64], Tensor[(4, 396), uint32], Tensor[(30, 4), int32], Tensor[(30, 4), bool], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  %572 = @func_4179() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %573 = cast(meta[relay.Constant][49] /* ty=Tensor[(616), int64] */, dtype="int64") /* ty=Tensor[(616), int64] */;
  %574 = reshape(%573, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), int64] */;
  %575 = @func_3608(%574) /* ty=(Tensor[(11, 7, 8), bool],) */;
  %576 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
  %577 = reshape(%576, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %578 = @func_1584(%577) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */;
  %579 = @func_3924() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %580 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
  %581 = log(%580) /* ty=Tensor[(30, 4), float32] */;
  %582 = cast(%var_5596, dtype="int64") /* ty=Tensor[(30, 4), int64] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(2), int32] */;
  %584 = cast(%581, dtype="int64") /* ty=Tensor[(30, 4), int64] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %586 = bitwise_or(%584, %585) /* ty=Tensor[(30, 4), int64] */;
  %587 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 4), float32] */, dtype="int32") /* ty=Tensor[(30, 4), int32] */;
  %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(2), int32] */;
  %589 = cast(%586, dtype="int32") /* ty=Tensor[(30, 4), int32] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %591 = cast(meta[relay.Constant][51] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
  %592 = cast(meta[relay.Constant][52] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %593 = cast(%var_5614, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %594 = reshape(%591, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), float64] */;
  %595 = reshape(%592, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), float64] */;
  %596 = reshape(%593, newshape=[320, 1]) /* ty=Tensor[(320, 1), uint64] */;
  %597 = @func_1010(%594, %595, %596) /* ty=(Tensor[(2, 6, 7), bool], Tensor[(8, 8, 5), uint64], Tensor[(2, 320, 7), int32]) */;
  %598 = cast(meta[relay.Constant][53] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %599 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
  %600 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 396), uint32] */, dtype="uint32") /* ty=Tensor[(4, 396), uint32] */;
  %601 = reshape(%598, newshape=[3, 88]) /* ty=Tensor[(3, 88), float64] */;
  %602 = reshape(%599, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
  %603 = reshape(%600, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %604 = @func_5497(%601, %602, %603) /* ty=(Tensor[(11, 7, 8), bool], Tensor[(11, 12, 2), float64], Tensor[(3, 88), float64], Tensor[(1584), uint32], Tensor[(60, 2), float32], Tensor[(1584), uint32]) */;
  %605 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 4), float32] */, dtype="int32") /* ty=Tensor[(30, 4), int32] */;
  %606 = shape_of(%581, dtype="int32") /* ty=Tensor[(2), int32] */;
  %607 = cast(%581, dtype="int32") /* ty=Tensor[(30, 4), int32] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %609 = cast(%var_5625, dtype="bool") /* ty=Tensor[(30, 4), bool] */;
  %610 = shape_of(%581, dtype="int32") /* ty=Tensor[(2), int32] */;
  %611 = cast(%581, dtype="bool") /* ty=Tensor[(30, 4), bool] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %613 = @func_4179() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %614 = %572.1;
  %615 = %575.0;
  %616 = %578.3;
  %617 = %579.0;
  %618 = minimum(%589, %590) /* ty=Tensor[(30, 4), int32] */;
  %619 = %597.0;
  %620 = %604.0;
  %621 = multiply(%607, %608) /* ty=Tensor[(30, 4), int32] */;
  %622 = equal(%611, %612) /* ty=Tensor[(30, 4), bool] */;
  %623 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  %624 = %613.1;
  (%614, %615, meta[relay.Constant][49] /* ty=Tensor[(616), int64] */, %616, %617, %618, %619, meta[relay.Constant][51] /* ty=Tensor[(14), float64] */, meta[relay.Constant][52] /* ty=Tensor[(84), float64] */, %var_5614, %620, meta[relay.Constant][53] /* ty=Tensor[(264), float64] */, meta[relay.Constant][54] /* ty=Tensor[(4, 396), uint32] */, %621, %622, %623, %624)
}

def @func_4349(%var_4344: Tensor[(2912), float32]) -> (Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), bool], Tensor[(2912), float32]) {
  %625 = @func_2510() /* ty=(Tensor[(5, 4, 10), float32],) */;
  %626 = cast(%var_4344, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %627 = reshape(%626, newshape=[13, 14, 16]) /* ty=Tensor[(13, 14, 16), float32] */;
  %628 = @func_3727(%627) /* ty=(Tensor[(13, 14, 16), float32], Tensor[(8, 14, 12), bool]) */;
  %629 = %625.0;
  %630 = %628.1;
  (%629, %630, %var_4344)
}

def @func_5918() -> (Tensor[(8, 14, 12), float64],) {
  %631 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
  (%631,)
}

def @func_6035() -> Tensor[(8, 14, 12), bool] {
  %632 = @func_4179() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %632.0
}

def @func_4411(%var_4380: Tensor[(448), float64], %var_4398: Tensor[(18, 18), uint32]) -> (Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64], Tensor[(18, 18), uint32], Tensor[(16, 14, 2), bool], Tensor[(9, 3, 12), float64]) {
  %633 = @func_3966() /* ty=(Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64]) */;
  %634 = cast(%var_4380, dtype="float64") /* ty=Tensor[(448), float64] */;
  %635 = reshape(%634, newshape=[16, 14, 2]) /* ty=Tensor[(16, 14, 2), float64] */;
  %636 = @func_3977(%635) /* ty=Tensor[(16, 14, 2), float64] */;
  %637 = cast(%var_4380, dtype="bool") /* ty=Tensor[(448), bool] */;
  %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%636, dtype="bool") /* ty=Tensor[(16, 14, 2), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = cast(%var_4398, dtype="uint32") /* ty=Tensor[(18, 18), uint32] */;
  %642 = reshape(%641, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %643 = @func_353(%642) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %644 = %643.1;
  %645 = cast(%644, dtype="float64") /* ty=Tensor[(9, 3, 12), float64] */;
  %646 = @func_2793() /* ty=Tensor[(8, 14, 12), float64] */;
  %647 = %633.1;
  %648 = greater_equal(%639, %640) /* ty=Tensor[(16, 14, 2), bool] */;
  %649 = exp(%645) /* ty=Tensor[(9, 3, 12), float64] */;
  (%646, %647, %var_4398, %648, %649)
}

def @func_897() -> Tensor[(8, 14, 12), float64] {
  %650 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 14, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  sin(%650) /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_1065(%var_1039: Tensor[(5, 2, 12), float32], %var_1053: Tensor[(672), uint16]) -> (Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) {
  %651 = cast(%var_1039, dtype="float32") /* ty=Tensor[(5, 2, 12), float32] */;
  %652 = cast(%var_1053, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %653 = cast(meta[relay.Constant][56] /* ty=Tensor[(396, 4), uint32] */, dtype="uint32") /* ty=Tensor[(396, 4), uint32] */;
  %654 = reshape(%652, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), uint16] */;
  %655 = reshape(%653, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %656 = @func_616(%654, %655) /* ty=(Tensor[(6, 8, 14), uint16], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32]) */;
  %657 = asin(%651) /* ty=Tensor[(5, 2, 12), float32] */;
  %658 = %656.1;
  (%657, %658, %var_1053, meta[relay.Constant][56] /* ty=Tensor[(396, 4), uint32] */)
}

def @func_4324(%var_4253: Tensor[(1584), uint32], %var_4254: Tensor[(320), uint64], %var_4291: Tensor[(448), float64], %var_4298: Tensor[(36), float32]) -> (Tensor[(120), float32], Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64], Tensor[(8, 14, 12), float64], Tensor[(16, 14, 2), float64], Tensor[(448), float64], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) {
  %659 = cast(meta[relay.Constant][57] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %660 = cast(%var_4253, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %661 = cast(%var_4254, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %662 = reshape(%659, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %663 = reshape(%660, newshape=[12, 132]) /* ty=Tensor[(12, 132), uint32] */;
  %664 = reshape(%661, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %665 = @func_3328(%662, %663, %664) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) */;
  %666 = @func_3520() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(120), float32], Tensor[(8, 14, 12), uint8]) */;
  %667 = %666.0;
  %668 = cast(%667, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  %669 = cast(%var_4291, dtype="float64") /* ty=Tensor[(448), float64] */;
  %670 = reshape(%669, newshape=[16, 14, 2]) /* ty=Tensor[(16, 14, 2), float64] */;
  %671 = cast(%var_4298, dtype="float32") /* ty=Tensor[(36), float32] */;
  %672 = reshape(%671, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), float32] */;
  %673 = %665.2;
  %674 = acosh(%668) /* ty=Tensor[(8, 14, 12), float64] */;
  %675 = @func_3977(%670) /* ty=Tensor[(16, 14, 2), float64] */;
  %676 = @func_93(%672) /* ty=Tensor[(?, 6, 6), int8] */;
  (%673, meta[relay.Constant][57] /* ty=Tensor[(120), float32] */, %var_4253, %var_4254, %674, %675, %var_4291, %676, %var_4298)
}

def @func_3570() -> (Tensor[(8, 14, 12), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), float64]) {
  %677 = @func_2172() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %678 = %677.0;
  %679 = cast(%678, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
  %680 = cast(meta[relay.Constant][58] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %681 = reshape(%680, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
  %682 = asinh(%679) /* ty=Tensor[(8, 14, 12), float32] */;
  %683 = @func_561(%681) /* ty=Tensor[(8, 8, 5), uint64] */;
  %684 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
  (%682, %683, meta[relay.Constant][58] /* ty=Tensor[(320), uint64] */, %684)
}

def @func_3443(%var_3436: Tensor[(11, 12, 2), float64], %var_3437: Tensor[(11, 12, 2), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(8, 14, 12), bool]) {
  %685 = cast(%var_3437, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %686 = shape_of(%var_3436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%var_3436, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %689 = divide(%687, %688) /* ty=Tensor[(11, 12, 2), float64] */;
  %690 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  (%689, %690)
}

def @func_4956(%var_4890: Tensor[(10, 10, 8), float64], %var_4912: Tensor[(10, 10, 8), float64]) -> (Tensor[(10, 10, 8), uint64], Tensor[(10, 10, 8), float64], Tensor[(8, 14, 12), float32], Tensor[(8, 14, 12), bool]) {
  %691 = cast(%var_4890, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %692 = rsqrt(%691) /* ty=Tensor[(10, 10, 8), float64] */;
  %693 = cast(%692, dtype="float32") /* ty=Tensor[(10, 10, 8), float32] */;
  %694 = shape_of(%var_4890, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%var_4890, dtype="float32") /* ty=Tensor[(10, 10, 8), float32] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %697 = divide(%695, %696) /* ty=Tensor[(10, 10, 8), float32] */;
  %698 = cast(%697, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %699 = log(%698) /* ty=Tensor[(10, 10, 8), float64] */;
  %700 = cast(%var_4912, dtype="uint64") /* ty=Tensor[(10, 10, 8), uint64] */;
  %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%699, dtype="uint64") /* ty=Tensor[(10, 10, 8), uint64] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %704 = cast(%var_4912, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %705 = @func_3591() /* ty=(Tensor[(8, 14, 12), float32],) */;
  %706 = @func_2172() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %707 = bitwise_xor(%702, %703) /* ty=Tensor[(10, 10, 8), uint64] */;
  %708 = sinh(%704) /* ty=Tensor[(10, 10, 8), float64] */;
  %709 = %705.0;
  %710 = %706.0;
  (%707, %708, %709, %710)
}

def @func_5221() -> Tensor[(8, 14, 12), float64] {
  @func_3255() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_3474() -> Tensor[(8, 14, 12), bool] {
  %711 = @func_2269() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) */;
  %711.0
}

def @func_4065() -> (Tensor[(10, 15, 15), float32], Tensor[(8, 14, 12), bool], Tensor[(576), float32], Tensor[(10, 15, 15), float32], Tensor[(11, 7, 8), bool], Tensor[(616), int64]) {
  %712 = cast(-8.10569f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %713 = cast(meta[relay.Constant][59] /* ty=Tensor[(10, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(10, 15, 15), float32] */;
  %714 = cast(meta[relay.Constant][60] /* ty=Tensor[(576), float32] */, dtype="float32") /* ty=Tensor[(576), float32] */;
  %715 = reshape(%714, newshape=[6, 12, 8]) /* ty=Tensor[(6, 12, 8), float32] */;
  %716 = @func_2300(%715) /* ty=(Tensor[(6, 12, 8), float32], Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(1, 1584), float64]) */;
  %717 = cast(meta[relay.Constant][59] /* ty=Tensor[(10, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(10, 15, 15), float32] */;
  %718 = cast(meta[relay.Constant][61] /* ty=Tensor[(616), int64] */, dtype="int64") /* ty=Tensor[(616), int64] */;
  %719 = reshape(%718, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), int64] */;
  %720 = @func_3608(%719) /* ty=(Tensor[(11, 7, 8), bool],) */;
  %721 = add(%712, %713) /* ty=Tensor[(10, 15, 15), float32] */;
  %722 = %716.1;
  %723 = asin(%717) /* ty=Tensor[(10, 15, 15), float32] */;
  %724 = %720.0;
  (%721, %722, meta[relay.Constant][60] /* ty=Tensor[(576), float32] */, %723, %724, meta[relay.Constant][61] /* ty=Tensor[(616), int64] */)
}

def @func_3591() -> (Tensor[(8, 14, 12), float32],) {
  %725 = @func_3570() /* ty=(Tensor[(8, 14, 12), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), float64]) */;
  %726 = %725.0;
  (%726,)
}

def @func_2793() -> Tensor[(8, 14, 12), float64] {
  %727 = @func_1325() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %727.0
}

def @func_1156(%var_1147: Tensor[(14, 11, 8), bool], %var_1148: Tensor[(14, 11, 8), bool]) -> (Tensor[(14, 11, 8), bool],) {
  %728 = cast(%var_1148, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
  %729 = shape_of(%var_1147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%var_1147, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %732 = logical_or(%730, %731) /* ty=Tensor[(14, 11, 8), bool] */;
  (%732,)
}

def @func_3924() -> (Tensor[(8, 14, 12), float64],) {
  %733 = @func_2793() /* ty=Tensor[(8, 14, 12), float64] */;
  (%733,)
}

def @func_3868() -> Tensor[(8, 14, 12), bool] {
  @func_2106() /* ty=Tensor[(8, 14, 12), bool] */
}

def @func_5401(%var_5307: Tensor[(14, 1, 16), float32], %var_5340: Tensor[(4, 728), float32], %var_5346: Tensor[(324), uint32], %var_5367: Tensor[(672), uint16]) -> (Tensor[(8, 14, 12), bool], Tensor[(4, 728), float32], Tensor[(324), uint32], Tensor[(320), uint64], Tensor[(8, 14, 12), float64], Tensor[(1, 120), float32], Tensor[(1584), uint32], Tensor[(14, 84, 16), int16], Tensor[(?, 6, 6), int8], Tensor[(84, 672), float64], Tensor[(84, 36), bool], Tensor[(320), uint64]) {
  %734 = cast(%var_5340, dtype="float32") /* ty=Tensor[(4, 728), float32] */;
  %735 = reshape(%734, newshape=[2912]) /* ty=Tensor[(2912), float32] */;
  %736 = @func_4349(%735) /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), bool], Tensor[(2912), float32]) */;
  %737 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 120), float32] */, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
  %738 = cast(meta[relay.Constant][64] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %739 = cast(meta[relay.Constant][64] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %740 = reshape(%737, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
  %741 = reshape(%738, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %742 = reshape(%739, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %743 = @func_1284(%740, %741, %742) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
  %744 = cast(%var_5307, dtype="float32") /* ty=Tensor[(14, 1, 16), float32] */;
  %745 = asin(%744) /* ty=Tensor[(14, 1, 16), float32] */;
  %746 = cast(%var_5346, dtype="uint32") /* ty=Tensor[(324), uint32] */;
  %747 = cast(meta[relay.Constant][62] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %748 = reshape(%746, newshape=[324]) /* ty=Tensor[(324), uint32] */;
  %749 = reshape(%747, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %750 = @func_5115(%748, %749) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(16, 14, 2), bool], Tensor[(448), float64], Tensor[(324), uint32], Tensor[(8, 14, 12), bool], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(8, 14, 12), bool], Tensor[(84, 1), float64], Tensor[(14, 1), float64], Tensor[(320), uint64], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float64]) */;
  %751 = %750.9;
  %752 = cast(%745, dtype="int16") /* ty=Tensor[(14, 1, 16), int16] */;
  %753 = cast(%751, dtype="int16") /* ty=Tensor[(84, 1), int16] */;
  %754 = %743.0;
  %755 = cast(%754, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  %756 = cast(%var_5367, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %757 = cast(meta[relay.Constant][65] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %758 = reshape(%755, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float64] */;
  %759 = reshape(%756, newshape=[672, 1]) /* ty=Tensor[(672, 1), uint16] */;
  %760 = reshape(%757, newshape=[36, 1]) /* ty=Tensor[(36, 1), float32] */;
  %761 = @func_1523(%758, %759, %760) /* ty=(Tensor[(8, 14, 12), int64], Tensor[(1584), uint32], Tensor[(672, 1), uint16], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(36, 1), float32]) */;
  %762 = cast(%var_5367, dtype="float64") /* ty=Tensor[(672), float64] */;
  %763 = cast(%751, dtype="float64") /* ty=Tensor[(84, 1), float64] */;
  %764 = cast(meta[relay.Constant][65] /* ty=Tensor[(36), float32] */, dtype="bool") /* ty=Tensor[(36), bool] */;
  %765 = cast(%751, dtype="bool") /* ty=Tensor[(84, 1), bool] */;
  %766 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 120), float32] */, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
  %767 = cast(meta[relay.Constant][62] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %768 = reshape(%766, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
  %769 = reshape(%767, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %770 = @func_3416(%768, %769) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(320), uint64], Tensor[(320), uint64]) */;
  %771 = %736.1;
  %772 = right_shift(%752, %753) /* ty=Tensor[(14, 84, 16), int16] */;
  %773 = %761.4;
  %774 = floor_mod(%762, %763) /* ty=Tensor[(84, 672), float64] */;
  %775 = greater_equal(%764, %765) /* ty=Tensor[(84, 36), bool] */;
  %776 = %770.5;
  (%771, %var_5340, %var_5346, meta[relay.Constant][62] /* ty=Tensor[(320), uint64] */, %754, meta[relay.Constant][63] /* ty=Tensor[(1, 120), float32] */, meta[relay.Constant][64] /* ty=Tensor[(1584), uint32] */, %772, %773, %774, %775, %776)
}

def @func_6050() -> (Tensor[(8, 14, 12), float64],) {
  %777 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
  (%777,)
}

def @func_2269() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) {
  %778 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %779 = %778.0;
  %780 = cast(%779, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  %781 = @func_2106() /* ty=Tensor[(8, 14, 12), bool] */;
  %782 = atanh(%780) /* ty=Tensor[(8, 14, 12), float64] */;
  (%781, %782)
}

def @func_2106() -> Tensor[(8, 14, 12), bool] {
  %783 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %783.0
}

def @func_4495() -> (Tensor[(8, 14, 12), bool],) {
  %784 = @func_3474() /* ty=Tensor[(8, 14, 12), bool] */;
  (%784,)
}

def @func_6375() -> Tensor[(8, 14, 12), float64] {
  @func_2774() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_4767(%var_4742: Tensor[(1344), float64], %var_4765: Tensor[(351), float64]) -> (Tensor[(5, 4, 10), float32], Tensor[(14, 11, 8), bool], Tensor[(1232), bool], Tensor[(8, 14, 12), int32], Tensor[(1344), float64], Tensor[(3, 13, 9), float64], Tensor[(117), float64], Tensor[(351), float64]) {
  %785 = @func_2510() /* ty=(Tensor[(5, 4, 10), float32],) */;
  %786 = cast(meta[relay.Constant][66] /* ty=Tensor[(1232), bool] */, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %787 = cast(meta[relay.Constant][66] /* ty=Tensor[(1232), bool] */, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %788 = reshape(%786, newshape=[14, 11, 8]) /* ty=Tensor[(14, 11, 8), bool] */;
  %789 = reshape(%787, newshape=[14, 11, 8]) /* ty=Tensor[(14, 11, 8), bool] */;
  %790 = @func_1156(%788, %789) /* ty=(Tensor[(14, 11, 8), bool],) */;
  %791 = cast(%var_4742, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %792 = reshape(%791, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float64] */;
  %793 = @func_3225(%792) /* ty=(Tensor[(8, 14, 12), uint8], Tensor[(8, 14, 12), int32]) */;
  %794 = cast(meta[relay.Constant][67] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
  %795 = cast(%var_4765, dtype="float64") /* ty=Tensor[(351), float64] */;
  %796 = reshape(%794, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), float64] */;
  %797 = reshape(%795, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float64] */;
  %798 = @func_2345(%796, %797) /* ty=(Tensor[(3, 13, 9), float64], Tensor[(3, 13, 9), float64]) */;
  %799 = %785.0;
  %800 = %790.0;
  %801 = %793.1;
  %802 = %798.0;
  (%799, %800, meta[relay.Constant][66] /* ty=Tensor[(1232), bool] */, %801, %var_4742, %802, meta[relay.Constant][67] /* ty=Tensor[(117), float64] */, %var_4765)
}

def @main() -> (Tensor[(15, 16, 2), float64],) {
  %803 = @func_2603() /* ty=Tensor[(15, 16, 2), float32] */;
  %804 = cast(%803, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
  %805 = sigmoid(%804) /* ty=Tensor[(15, 16, 2), float64] */;
  (%805,)
}

def @func_3255() -> Tensor[(8, 14, 12), float64] {
  %806 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
  %807 = cast(%806, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  exp(%807) /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_4648(%var_4590: Tensor[(120), float32], %var_4591: Tensor[(320), uint64], %var_4602: Tensor[(396, 4), uint32]) -> (Tensor[(8, 14, 12), bool], Tensor[(120), float32], Tensor[(320), uint64], Tensor[(396, 4), bool], Tensor[(8, 14, 12), float64], Tensor[(1584), uint32], Tensor[(36), float32]) {
  %808 = @func_2750() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) */;
  %809 = cast(%var_4590, dtype="float32") /* ty=Tensor[(120), float32] */;
  %810 = cast(%var_4591, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %811 = reshape(%809, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
  %812 = reshape(%810, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %813 = @func_3416(%811, %812) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(320), uint64], Tensor[(320), uint64]) */;
  %814 = %813.1;
  %815 = cast(%var_4602, dtype="bool") /* ty=Tensor[(396, 4), bool] */;
  %816 = shape_of(%814, dtype="int32") /* ty=Tensor[(2), int32] */;
  %817 = cast(%814, dtype="bool") /* ty=Tensor[(396, 4), bool] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %819 = cast(%var_4590, dtype="float32") /* ty=Tensor[(120), float32] */;
  %820 = cast(%814, dtype="uint32") /* ty=Tensor[(396, 4), uint32] */;
  %821 = cast(meta[relay.Constant][68] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %822 = reshape(%819, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
  %823 = reshape(%820, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %824 = reshape(%821, newshape=[9, 4]) /* ty=Tensor[(9, 4), float32] */;
  %825 = @func_1370(%822, %823, %824) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(396, 4), bool], Tensor[(60, 2), float32], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(9, 4), float32]) */;
  %826 = %808.2;
  %827 = equal(%817, %818) /* ty=Tensor[(396, 4), bool] */;
  %828 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
  %829 = %825.3;
  (%826, %var_4590, %var_4591, %827, %828, %829, meta[relay.Constant][68] /* ty=Tensor[(36), float32] */)
}

def @func_5512(%var_5507: Tensor[(14, 3, 15), int16]) -> Tensor[(14, 3, 15), int16] {
  %830 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 3, 15), int16] */, dtype="int16") /* ty=Tensor[(1, 3, 15), int16] */;
  %831 = cast(%var_5507, dtype="int16") /* ty=Tensor[(14, 3, 15), int16] */;
  multiply(%830, %831) /* ty=Tensor[(14, 3, 15), int16] */
}

def @func_1482() -> (Tensor[(8, 14, 12), bool],) {
  %832 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  (%832,)
}

def @func_4200(%var_4186: Tensor[(2, 5, 11), bool], %var_4187: Tensor[(2, 5, 11), bool]) -> Tensor[(2, 5, 11), bool] {
  %833 = cast(%var_4187, dtype="bool") /* ty=Tensor[(2, 5, 11), bool] */;
  %834 = shape_of(%var_4186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%var_4186, dtype="bool") /* ty=Tensor[(2, 5, 11), bool] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%835, %836) /* ty=Tensor[(2, 5, 11), bool] */
}

def @func_3795() -> Tensor[(8, 14, 12), float64] {
  @func_2774() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_3977(%var_3968: Tensor[(16, 14, 2), float64]) -> Tensor[(16, 14, 2), float64] {
  %837 = cast(%var_3968, dtype="float64") /* ty=Tensor[(16, 14, 2), float64] */;
  erf(%837) /* ty=Tensor[(16, 14, 2), float64] */
}

def @func_6133() -> (Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64]) {
  %838 = @func_5918() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %839 = @func_2793() /* ty=Tensor[(8, 14, 12), float64] */;
  %840 = %838.0;
  (%839, %840)
}

def @func_4179() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  %841 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %842 = @func_4065() /* ty=(Tensor[(10, 15, 15), float32], Tensor[(8, 14, 12), bool], Tensor[(576), float32], Tensor[(10, 15, 15), float32], Tensor[(11, 7, 8), bool], Tensor[(616), int64]) */;
  %843 = %841.0;
  %844 = %842.1;
  (%843, %844)
}

def @func_2774() -> Tensor[(8, 14, 12), float64] {
  @func_2158() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_5299(%var_5289: Tensor[(36), float32], %var_5290: Tensor[(1584), float64]) -> (Tensor[(8, 14, 12), float32], Tensor[(1584), int64], Tensor[(36), float32], Tensor[(1584), float64]) {
  %845 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %846 = %845.0;
  %847 = cast(%846, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
  %848 = cast(%var_5289, dtype="float32") /* ty=Tensor[(36), float32] */;
  %849 = cast(%var_5290, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %850 = reshape(%848, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %851 = reshape(%849, newshape=[1584]) /* ty=Tensor[(1584), float64] */;
  %852 = @func_1996(%850, %851) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(9, 4), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(1584), int64], Tensor[(8, 14, 12), bool], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(1584), bool], Tensor[(8, 8, 5), uint64], Tensor[(8, 14, 12), bool]) */;
  %853 = erf(%847) /* ty=Tensor[(8, 14, 12), float32] */;
  %854 = %852.4;
  (%853, %854, %var_5289, %var_5290)
}

def @func_1996(%var_1937: Tensor[(36), float32], %var_1971: Tensor[(1584), float64]) -> (Tensor[(8, 14, 12), bool], Tensor[(9, 4), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(1584), int64], Tensor[(8, 14, 12), bool], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(1584), bool], Tensor[(8, 8, 5), uint64], Tensor[(8, 14, 12), bool]) {
  %855 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %856 = cast(meta[relay.Constant][70] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %857 = cast(meta[relay.Constant][71] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %858 = cast(%var_1937, dtype="float32") /* ty=Tensor[(36), float32] */;
  %859 = reshape(%856, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
  %860 = reshape(%857, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %861 = reshape(%858, newshape=[9, 4]) /* ty=Tensor[(9, 4), float32] */;
  %862 = @func_1370(%859, %860, %861) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(396, 4), bool], Tensor[(60, 2), float32], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(9, 4), float32]) */;
  %863 = cast(meta[relay.Constant][71] /* ty=Tensor[(1584), uint32] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %864 = sinh(%863) /* ty=Tensor[(1584), float64] */;
  %865 = cast(%var_1971, dtype="int64") /* ty=Tensor[(1584), int64] */;
  %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(1), int32] */;
  %867 = cast(%864, dtype="int64") /* ty=Tensor[(1584), int64] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?), int64] */;
  %869 = %855.0;
  %870 = cast(%869, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %871 = reshape(%870, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), bool] */;
  %872 = @func_1921(%871) /* ty=(Tensor[(8, 14, 12), int16], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %873 = cast(meta[relay.Constant][72] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %874 = reshape(%873, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
  %875 = cast(meta[relay.Constant][73] /* ty=Tensor[(1584), float64] */, dtype="bool") /* ty=Tensor[(1584), bool] */;
  %876 = shape_of(%var_1971, dtype="int32") /* ty=Tensor[(1), int32] */;
  %877 = cast(%var_1971, dtype="bool") /* ty=Tensor[(1584), bool] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?), bool] */;
  %879 = @func_561(%874) /* ty=Tensor[(8, 8, 5), uint64] */;
  %880 = cast(%879, dtype="uint64") /* ty=Tensor[(8, 8, 5), uint64] */;
  %881 = reshape(%880, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
  %882 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %883 = %862.5;
  %884 = bitwise_and(%867, %868) /* ty=Tensor[(1584), int64] */;
  %885 = %872.2;
  %886 = equal(%877, %878) /* ty=Tensor[(1584), bool] */;
  %887 = @func_561(%881) /* ty=Tensor[(8, 8, 5), uint64] */;
  %888 = %882.0;
  (%869, %883, meta[relay.Constant][70] /* ty=Tensor[(120), float32] */, %var_1937, %884, %885, %879, meta[relay.Constant][72] /* ty=Tensor[(320), uint64] */, %886, %887, %888)
}

def @func_3416(%var_3396: Tensor[(60, 2), float32], %var_3412: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), float64], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(320), uint64], Tensor[(320), uint64]) {
  %889 = cast(%var_3396, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %890 = cast(meta[relay.Constant][74] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %891 = reshape(%889, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
  %892 = reshape(%890, newshape=[672]) /* ty=Tensor[(672), uint16] */;
  %893 = @func_1065(%891, %892) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
  %894 = cast(%var_3396, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %895 = %893.3;
  %896 = cast(%895, dtype="uint32") /* ty=Tensor[(396, 4), uint32] */;
  %897 = cast(%var_3412, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %898 = reshape(%894, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %899 = reshape(%896, newshape=[12, 132]) /* ty=Tensor[(12, 132), uint32] */;
  %900 = reshape(%897, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %901 = @func_3328(%898, %899, %900) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) */;
  %902 = @func_2793() /* ty=Tensor[(8, 14, 12), float64] */;
  %903 = %901.5;
  (%902, %895, %var_3396, meta[relay.Constant][74] /* ty=Tensor[(672), uint16] */, %903, %var_3412)
}

def @func_6328() -> Tensor[(8, 14, 12), float64] {
  %904 = @func_3924() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %904.0
}

def @func_2603() -> Tensor[(15, 16, 2), float32] {
  %905 = cast(meta[relay.Constant][75] /* ty=Tensor[(15, 16, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
  %906 = log(%905) /* ty=Tensor[(15, 16, 2), float32] */;
  %907 = cast(%906, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
  erf(%907) /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_1523(%var_1499: Tensor[(8, 14, 12), float64], %var_1506: Tensor[(672, 1), uint16], %var_1515: Tensor[(36, 1), float32]) -> (Tensor[(8, 14, 12), int64], Tensor[(1584), uint32], Tensor[(672, 1), uint16], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(36, 1), float32]) {
  %908 = @func_1325() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %909 = %908.0;
  %910 = cast(%var_1499, dtype="int64") /* ty=Tensor[(8, 14, 12), int64] */;
  %911 = shape_of(%909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %912 = cast(%909, dtype="int64") /* ty=Tensor[(8, 14, 12), int64] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %914 = cast(%var_1506, dtype="uint16") /* ty=Tensor[(672, 1), uint16] */;
  %915 = cast(meta[relay.Constant][76] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %916 = reshape(%914, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), uint16] */;
  %917 = reshape(%915, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %918 = @func_616(%916, %917) /* ty=(Tensor[(6, 8, 14), uint16], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32]) */;
  %919 = cast(%var_1515, dtype="float32") /* ty=Tensor[(36, 1), float32] */;
  %920 = reshape(%919, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), float32] */;
  %921 = left_shift(%912, %913) /* ty=Tensor[(8, 14, 12), int64] */;
  %922 = %918.2;
  %923 = @func_93(%920) /* ty=Tensor[(?, 6, 6), int8] */;
  (%921, %922, %var_1506, meta[relay.Constant][76] /* ty=Tensor[(1584), uint32] */, %923, %var_1515)
}

def @func_3608(%var_3596: Tensor[(11, 7, 8), int64]) -> (Tensor[(11, 7, 8), bool],) {
  %924 = cast(-10 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %925 = cast(%var_3596, dtype="bool") /* ty=Tensor[(11, 7, 8), bool] */;
  %926 = greater_equal(%924, %925) /* ty=Tensor[(11, 7, 8), bool] */;
  (%926,)
}

def @func_1584(%var_1554: Tensor[(120), float32]) -> (Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) {
  %927 = cast(%var_1554, dtype="float32") /* ty=Tensor[(120), float32] */;
  %928 = cast(meta[relay.Constant][77] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %929 = reshape(%927, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
  %930 = reshape(%928, newshape=[672]) /* ty=Tensor[(672), uint16] */;
  %931 = @func_1065(%929, %930) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
  %932 = cast(meta[relay.Constant][78] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %933 = reshape(%932, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), float32] */;
  %934 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  %935 = %931.1;
  %936 = @func_93(%933) /* ty=Tensor[(?, 6, 6), int8] */;
  (%934, %935, %var_1554, meta[relay.Constant][77] /* ty=Tensor[(672), uint16] */, %936, meta[relay.Constant][78] /* ty=Tensor[(36), float32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6300(%var_6298: Tensor[(420, 2), float32], %var_6299: Tensor[(6, 10, 16), float64]) -> (Tensor[(320), uint64], Tensor[(14), float64], Tensor[(420, 2), float32], Tensor[(6, 10, 16), bool], Tensor[(8, 14, 12), bool], Tensor[(4, 15, 2), float32], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32], Tensor[(8, 8, 5), uint64]) {
  @func_6296(%var_6298, %var_6299) /* ty=(Tensor[(320), uint64], Tensor[(14), float64], Tensor[(420, 2), float32], Tensor[(6, 10, 16), bool], Tensor[(8, 14, 12), bool], Tensor[(4, 15, 2), float32], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32], Tensor[(8, 8, 5), uint64]) */
}

def @func_3635() -> (Tensor[(8, 14, 12), float64],) {
  %1 = fn () -> (Tensor[(8, 14, 12), float64],) {
    %0 = @func_2158() /* ty=Tensor[(8, 14, 12), float64] */;
    (%0,)
  };
  %1() /* ty=(Tensor[(8, 14, 12), float64],) */
}

def @func_3369() -> (Tensor[(8, 14, 12), bool],) {
  %2 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %3 = %2.0;
  (%3,)
}

def @func_95(%var_94: Tensor[(1, 6, 6), float32]) -> Tensor[(?, 6, 6), int8] {
  %13 = fn (%var_65: Tensor[(1, 6, 6), float32]) -> Tensor[(?, 6, 6), int8] {
    %4 = cast(%var_65, dtype="float64") /* ty=Tensor[(1, 6, 6), float64] */;
    %5 = exp(%4) /* ty=Tensor[(1, 6, 6), float64] */;
    %6 = cast(5.22226f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %7 = cast(%var_65, dtype="float32") /* ty=Tensor[(1, 6, 6), float32] */;
    %8 = maximum(%6, %7) /* ty=Tensor[(1, 6, 6), float32] */;
    %9 = cast(%8, dtype="int8") /* ty=Tensor[(1, 6, 6), int8] */;
    %10 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
    %11 = cast(%5, dtype="int8") /* ty=Tensor[(1, 6, 6), int8] */;
    %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    multiply(%11, %12) /* ty=Tensor[(?, 6, 6), int8] */
  };
  %13(%var_94) /* ty=Tensor[(?, 6, 6), int8] */
}

def @func_2435() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) {
  %25 = fn () -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) {
    %14 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
    %15 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
    %16 = %15.1;
    %17 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
    %18 = %17.1;
    %19 = cast(%18, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
    %20 = shape_of(%16, dtype="int32") /* ty=Tensor[(3), int32] */;
    %21 = cast(%16, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
    %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %23 = %14.0;
    %24 = power(%21, %22) /* ty=Tensor[(8, 14, 12), float64] */;
    (%23, %24)
  };
  %25() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) */
}

def @func_1326() -> (Tensor[(8, 14, 12), float64],) {
  %27 = fn () -> (Tensor[(8, 14, 12), float64],) {
    %26 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
    (%26,)
  };
  %27() /* ty=(Tensor[(8, 14, 12), float64],) */
}

def @func_5824() -> Tensor[(8, 14, 12), float64] {
  %28 = @func_5175() /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2912), float32], Tensor[(5, 4, 10), float64]) */;
  %28.0
}

def @func_4767(%var_4742: Tensor[(1344), float64], %var_4765: Tensor[(351), float64]) -> (Tensor[(5, 4, 10), float32], Tensor[(14, 11, 8), bool], Tensor[(1232), bool], Tensor[(8, 14, 12), int32], Tensor[(1344), float64], Tensor[(3, 13, 9), float64], Tensor[(117), float64], Tensor[(351), float64]) {
  %29 = @func_2510() /* ty=(Tensor[(5, 4, 10), float32],) */;
  %30 = cast(meta[relay.Constant][0] /* ty=Tensor[(1232), bool] */, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %31 = cast(meta[relay.Constant][0] /* ty=Tensor[(1232), bool] */, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %32 = reshape(%30, newshape=[14, 11, 8]) /* ty=Tensor[(14, 11, 8), bool] */;
  %33 = reshape(%31, newshape=[14, 11, 8]) /* ty=Tensor[(14, 11, 8), bool] */;
  %34 = @func_1156(%32, %33) /* ty=(Tensor[(14, 11, 8), bool],) */;
  %35 = cast(%var_4742, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %36 = reshape(%35, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float64] */;
  %37 = @func_3225(%36) /* ty=(Tensor[(8, 14, 12), uint8], Tensor[(8, 14, 12), int32]) */;
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
  %39 = cast(%var_4765, dtype="float64") /* ty=Tensor[(351), float64] */;
  %40 = reshape(%38, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), float64] */;
  %41 = reshape(%39, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float64] */;
  %42 = @func_2345(%40, %41) /* ty=(Tensor[(3, 13, 9), float64], Tensor[(3, 13, 9), float64]) */;
  %43 = %29.0;
  %44 = %34.0;
  %45 = %37.1;
  %46 = %42.0;
  (%43, %44, meta[relay.Constant][0] /* ty=Tensor[(1232), bool] */, %45, %var_4742, %46, meta[relay.Constant][1] /* ty=Tensor[(117), float64] */, %var_4765)
}

def @func_1159(%var_1157: Tensor[(14, 11, 8), bool], %var_1158: Tensor[(14, 11, 8), bool]) -> (Tensor[(14, 11, 8), bool],) {
  %52 = fn (%var_1147: Tensor[(14, 11, 8), bool], %var_1148: Tensor[(14, 11, 8), bool]) -> (Tensor[(14, 11, 8), bool],) {
    %47 = cast(%var_1148, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
    %48 = shape_of(%var_1147, dtype="int32") /* ty=Tensor[(3), int32] */;
    %49 = cast(%var_1147, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
    %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %51 = logical_or(%49, %50) /* ty=Tensor[(14, 11, 8), bool] */;
    (%51,)
  };
  %52(%var_1157, %var_1158) /* ty=(Tensor[(14, 11, 8), bool],) */
}

def @func_2270() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) {
  %58 = fn () -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) {
    %53 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
    %54 = %53.0;
    %55 = cast(%54, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
    %56 = @func_2106() /* ty=Tensor[(8, 14, 12), bool] */;
    %57 = atanh(%55) /* ty=Tensor[(8, 14, 12), float64] */;
    (%56, %57)
  };
  %58() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) */
}

def @func_1827(%var_1702: Tensor[(9, 15, 8), int64], %var_1729: Tensor[(11, 16, 9), uint32]) -> (Tensor[(324), uint32], Tensor[(162, 2), uint32], Tensor[(9, 15, 8), float64], Tensor[(120, 1), float32], Tensor[(11, 16, 9), bool], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(9, 3, 12), bool], Tensor[(324), uint32], Tensor[(9, 15, 8), float32], Tensor[(605), float32], Tensor[(605), float64], Tensor[(8, 14, 12), bool], Tensor[(672), uint16], Tensor[(9, 3, 12), bool], Tensor[(8, 14, 12), bool]) {
  %59 = cast(meta[relay.Constant][2] /* ty=Tensor[(605), uint16] */, dtype="uint16") /* ty=Tensor[(605), uint16] */;
  %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(162, 2), uint32] */, dtype="uint32") /* ty=Tensor[(162, 2), uint32] */;
  %61 = reshape(%59, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint16] */;
  %62 = reshape(%60, newshape=[324]) /* ty=Tensor[(324), uint32] */;
  %63 = @func_696(%61, %62) /* ty=(Tensor[(11, 11, 5), bool], Tensor[(9, 3, 12), bool], Tensor[(324), uint32]) */;
  %64 = cast(meta[relay.Constant][4] /* ty=Tensor[(9, 15, 8), int64] */, dtype="int64") /* ty=Tensor[(9, 15, 8), int64] */;
  %65 = shape_of(%var_1702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%var_1702, dtype="int64") /* ty=Tensor[(9, 15, 8), int64] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %68 = right_shift(%66, %67) /* ty=Tensor[(9, 15, 8), int64] */;
  %69 = cast(meta[relay.Constant][5] /* ty=Tensor[(9, 15, 8), int64] */, dtype="float64") /* ty=Tensor[(9, 15, 8), float64] */;
  %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%68, dtype="float64") /* ty=Tensor[(9, 15, 8), float64] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %73 = cast(meta[relay.Constant][6] /* ty=Tensor[(120, 1), float32] */, dtype="float32") /* ty=Tensor[(120, 1), float32] */;
  %74 = reshape(%73, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %75 = @func_1584(%74) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */;
  %76 = %75.1;
  %77 = cast(%var_1729, dtype="bool") /* ty=Tensor[(11, 16, 9), bool] */;
  %78 = shape_of(%76, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%76, dtype="bool") /* ty=Tensor[(11, 16, 9), bool] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %81 = cast(meta[relay.Constant][6] /* ty=Tensor[(120, 1), float32] */, dtype="float32") /* ty=Tensor[(120, 1), float32] */;
  %82 = cast(meta[relay.Constant][7] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %83 = reshape(%81, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
  %84 = reshape(%82, newshape=[672]) /* ty=Tensor[(672), uint16] */;
  %85 = @func_1065(%83, %84) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
  %86 = cast(meta[relay.Constant][3] /* ty=Tensor[(162, 2), uint32] */, dtype="uint32") /* ty=Tensor[(162, 2), uint32] */;
  %87 = reshape(%86, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %88 = @func_353(%87) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %89 = cast(meta[relay.Constant][2] /* ty=Tensor[(605), uint16] */, dtype="uint16") /* ty=Tensor[(605), uint16] */;
  %90 = cast(meta[relay.Constant][3] /* ty=Tensor[(162, 2), uint32] */, dtype="uint32") /* ty=Tensor[(162, 2), uint32] */;
  %91 = reshape(%89, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), uint16] */;
  %92 = reshape(%90, newshape=[324]) /* ty=Tensor[(324), uint32] */;
  %93 = @func_696(%91, %92) /* ty=(Tensor[(11, 11, 5), bool], Tensor[(9, 3, 12), bool], Tensor[(324), uint32]) */;
  %94 = cast(%var_1702, dtype="float32") /* ty=Tensor[(9, 15, 8), float32] */;
  %95 = cast(meta[relay.Constant][8] /* ty=Tensor[(605), uint16] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %96 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(605), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %97 = cast(meta[relay.Constant][2] /* ty=Tensor[(605), uint16] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?), float32] */;
  %99 = cast(meta[relay.Constant][8] /* ty=Tensor[(605), uint16] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %100 = cosh(%99) /* ty=Tensor[(605), float32] */;
  %101 = cast(%100, dtype="float64") /* ty=Tensor[(605), float64] */;
  %102 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %103 = cast(meta[relay.Constant][6] /* ty=Tensor[(120, 1), float32] */, dtype="float32") /* ty=Tensor[(120, 1), float32] */;
  %104 = cast(%76, dtype="uint32") /* ty=Tensor[(11, 16, 9), uint32] */;
  %105 = cast(%var_1729, dtype="uint32") /* ty=Tensor[(11, 16, 9), uint32] */;
  %106 = reshape(%103, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
  %107 = reshape(%104, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %108 = reshape(%105, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %109 = @func_1284(%106, %107, %108) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
  %110 = %63.2;
  %111 = cast(%110, dtype="uint32") /* ty=Tensor[(324), uint32] */;
  %112 = reshape(%111, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %113 = @func_353(%112) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %114 = power(%71, %72) /* ty=Tensor[(9, 15, 8), float64] */;
  %115 = not_equal(%79, %80) /* ty=Tensor[(11, 16, 9), bool] */;
  %116 = %85.1;
  %117 = %88.0;
  %118 = %93.2;
  %119 = acos(%94) /* ty=Tensor[(9, 15, 8), float32] */;
  %120 = divide(%97, %98) /* ty=Tensor[(605), float32] */;
  %121 = atanh(%101) /* ty=Tensor[(605), float64] */;
  %122 = %102.1;
  %123 = %109.2;
  %124 = %113.0;
  %125 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  (%110, meta[relay.Constant][3] /* ty=Tensor[(162, 2), uint32] */, %114, meta[relay.Constant][6] /* ty=Tensor[(120, 1), float32] */, %115, %116, meta[relay.Constant][7] /* ty=Tensor[(672), uint16] */, %117, %118, %119, %120, %121, %122, %123, %124, %125)
}

def @func_4648(%var_4590: Tensor[(120), float32], %var_4591: Tensor[(320), uint64], %var_4602: Tensor[(396, 4), uint32]) -> (Tensor[(8, 14, 12), bool], Tensor[(120), float32], Tensor[(320), uint64], Tensor[(396, 4), bool], Tensor[(8, 14, 12), float64], Tensor[(1584), uint32], Tensor[(36), float32]) {
  %126 = @func_2750() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) */;
  %127 = cast(%var_4590, dtype="float32") /* ty=Tensor[(120), float32] */;
  %128 = cast(%var_4591, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %129 = reshape(%127, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
  %130 = reshape(%128, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %131 = @func_3416(%129, %130) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(320), uint64], Tensor[(320), uint64]) */;
  %132 = %131.1;
  %133 = cast(%var_4602, dtype="bool") /* ty=Tensor[(396, 4), bool] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(2), int32] */;
  %135 = cast(%132, dtype="bool") /* ty=Tensor[(396, 4), bool] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %137 = cast(%var_4590, dtype="float32") /* ty=Tensor[(120), float32] */;
  %138 = cast(%132, dtype="uint32") /* ty=Tensor[(396, 4), uint32] */;
  %139 = cast(meta[relay.Constant][9] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %140 = reshape(%137, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
  %141 = reshape(%138, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %142 = reshape(%139, newshape=[9, 4]) /* ty=Tensor[(9, 4), float32] */;
  %143 = @func_1370(%140, %141, %142) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(396, 4), bool], Tensor[(60, 2), float32], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(9, 4), float32]) */;
  %144 = %126.2;
  %145 = equal(%135, %136) /* ty=Tensor[(396, 4), bool] */;
  %146 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
  %147 = %143.3;
  (%144, %var_4590, %var_4591, %145, %146, %147, meta[relay.Constant][9] /* ty=Tensor[(36), float32] */)
}

def @func_3371() -> (Tensor[(8, 14, 12), bool],) {
  @func_3369() /* ty=(Tensor[(8, 14, 12), bool],) */
}

def @func_3419(%var_3417: Tensor[(60, 2), float32], %var_3418: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), float64], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(320), uint64], Tensor[(320), uint64]) {
  %163 = fn (%var_3396: Tensor[(60, 2), float32], %var_3412: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), float64], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(320), uint64], Tensor[(320), uint64]) {
    %148 = cast(%var_3396, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
    %149 = cast(meta[relay.Constant][10] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %150 = reshape(%148, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
    %151 = reshape(%149, newshape=[672]) /* ty=Tensor[(672), uint16] */;
    %152 = @func_1065(%150, %151) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
    %153 = cast(%var_3396, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
    %154 = %152.3;
    %155 = cast(%154, dtype="uint32") /* ty=Tensor[(396, 4), uint32] */;
    %156 = cast(%var_3412, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %157 = reshape(%153, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %158 = reshape(%155, newshape=[12, 132]) /* ty=Tensor[(12, 132), uint32] */;
    %159 = reshape(%156, newshape=[320]) /* ty=Tensor[(320), uint64] */;
    %160 = @func_3328(%157, %158, %159) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) */;
    %161 = @func_2793() /* ty=Tensor[(8, 14, 12), float64] */;
    %162 = %160.5;
    (%161, %154, %var_3396, meta[relay.Constant][10] /* ty=Tensor[(672), uint16] */, %162, %var_3412)
  };
  %163(%var_3417, %var_3418) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(320), uint64], Tensor[(320), uint64]) */
}

def @func_3476() -> Tensor[(8, 14, 12), bool] {
  @func_3474() /* ty=Tensor[(8, 14, 12), bool] */
}

def @func_1469(%var_1467: Tensor[(14), float64], %var_1468: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), float64], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84, 1), float64], Tensor[(320), uint64]) {
  @func_1465(%var_1467, %var_1468) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84, 1), float64], Tensor[(320), uint64]) */
}

def @func_6330() -> Tensor[(8, 14, 12), float64] {
  @func_6328() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_4415(%var_4413: Tensor[(448), float64], %var_4414: Tensor[(18, 18), uint32]) -> (Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64], Tensor[(18, 18), uint32], Tensor[(16, 14, 2), bool], Tensor[(9, 3, 12), float64]) {
  @func_4411(%var_4413, %var_4414) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64], Tensor[(18, 18), uint32], Tensor[(16, 14, 2), bool], Tensor[(9, 3, 12), float64]) */
}

def @func_5826() -> Tensor[(8, 14, 12), float64] {
  @func_5824() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_6135() -> (Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64]) {
  @func_6133() /* ty=(Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64]) */
}

def @func_6328() -> Tensor[(8, 14, 12), float64] {
  %164 = @func_3924() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %164.0
}

def @func_2173() -> (Tensor[(8, 14, 12), bool],) {
  %167 = fn () -> (Tensor[(8, 14, 12), bool],) {
    %165 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
    %166 = %165.0;
    (%166,)
  };
  %167() /* ty=(Tensor[(8, 14, 12), bool],) */
}

def @func_696(%var_673: Tensor[(11, 11, 5), uint16], %var_686: Tensor[(324), uint32]) -> (Tensor[(11, 11, 5), bool], Tensor[(9, 3, 12), bool], Tensor[(324), uint32]) {
  %168 = cast(%var_673, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %169 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(11, 11, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 11, 5), uint16] */, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %172 = cast(%var_686, dtype="uint32") /* ty=Tensor[(324), uint32] */;
  %173 = reshape(%172, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %174 = @func_353(%173) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %175 = less(%170, %171) /* ty=Tensor[(11, 11, 5), bool] */;
  %176 = %174.0;
  (%175, %176, %var_686)
}

def @func_2793() -> Tensor[(8, 14, 12), float64] {
  %177 = @func_1325() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %177.0
}

def @func_1584(%var_1554: Tensor[(120), float32]) -> (Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) {
  %178 = cast(%var_1554, dtype="float32") /* ty=Tensor[(120), float32] */;
  %179 = cast(meta[relay.Constant][12] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %180 = reshape(%178, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
  %181 = reshape(%179, newshape=[672]) /* ty=Tensor[(672), uint16] */;
  %182 = @func_1065(%180, %181) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
  %183 = cast(meta[relay.Constant][13] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %184 = reshape(%183, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), float32] */;
  %185 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  %186 = %182.1;
  %187 = @func_93(%184) /* ty=Tensor[(?, 6, 6), int8] */;
  (%185, %186, %var_1554, meta[relay.Constant][12] /* ty=Tensor[(672), uint16] */, %187, meta[relay.Constant][13] /* ty=Tensor[(36), float32] */)
}

def @func_5774(%var_5772: Tensor[(120), float32], %var_5773: Tensor[(6, 20), float32]) -> (Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64], Tensor[(36), float32], Tensor[(8, 14, 12), bool], Tensor[(9, 16, 15), uint32], Tensor[(6, 20), float32], Tensor[(8, 14, 12), bool]) {
  %215 = fn (%var_5701: Tensor[(120), float32], %var_5738: Tensor[(6, 20), float32]) -> (Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64], Tensor[(36), float32], Tensor[(8, 14, 12), bool], Tensor[(9, 16, 15), uint32], Tensor[(6, 20), float32], Tensor[(8, 14, 12), bool]) {
    %188 = cast(%var_5701, dtype="float32") /* ty=Tensor[(120), float32] */;
    %189 = cast(meta[relay.Constant][14] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %190 = cast(meta[relay.Constant][15] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %191 = reshape(%188, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %192 = reshape(%189, newshape=[12, 132]) /* ty=Tensor[(12, 132), uint32] */;
    %193 = reshape(%190, newshape=[320]) /* ty=Tensor[(320), uint64] */;
    %194 = @func_3328(%191, %192, %193) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) */;
    %195 = %194.1;
    %196 = cast(%195, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
    %197 = reshape(%196, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %198 = @func_1584(%197) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */;
    %199 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 16, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 16, 15), float32] */;
    %200 = acos(%199) /* ty=Tensor[(9, 16, 15), float32] */;
    %201 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 16, 15), float32] */, dtype="uint32") /* ty=Tensor[(9, 16, 15), uint32] */;
    %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
    %203 = cast(%200, dtype="uint32") /* ty=Tensor[(9, 16, 15), uint32] */;
    %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %205 = cast(%var_5738, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
    %206 = shape_of(%195, dtype="int32") /* ty=Tensor[(2), int32] */;
    %207 = cast(%195, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
    %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %209 = @func_2172() /* ty=(Tensor[(8, 14, 12), bool],) */;
    %210 = %198.5;
    %211 = @func_3868() /* ty=Tensor[(8, 14, 12), bool] */;
    %212 = left_shift(%203, %204) /* ty=Tensor[(9, 16, 15), uint32] */;
    %213 = multiply(%207, %208) /* ty=Tensor[(6, 20), float32] */;
    %214 = %209.0;
    (%var_5701, meta[relay.Constant][14] /* ty=Tensor[(1584), uint32] */, meta[relay.Constant][15] /* ty=Tensor[(320), uint64] */, %210, %211, %212, %213, %214)
  };
  %215(%var_5772, %var_5773) /* ty=(Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64], Tensor[(36), float32], Tensor[(8, 14, 12), bool], Tensor[(9, 16, 15), uint32], Tensor[(6, 20), float32], Tensor[(8, 14, 12), bool]) */
}

def @func_3179(%var_3178: Tensor[(672, 1), uint16]) -> (Tensor[(8, 14, 12), bool], Tensor[(5, 2, 12), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(576), float32], Tensor[(672, 1), float64], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  %240 = fn (%var_3130: Tensor[(672, 1), uint16]) -> (Tensor[(8, 14, 12), bool], Tensor[(5, 2, 12), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(576), float32], Tensor[(672, 1), float64], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
    %216 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
    %217 = cast(meta[relay.Constant][17] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %218 = cast(%var_3130, dtype="uint16") /* ty=Tensor[(672, 1), uint16] */;
    %219 = reshape(%217, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
    %220 = reshape(%218, newshape=[672]) /* ty=Tensor[(672), uint16] */;
    %221 = @func_1065(%219, %220) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
    %222 = cast(meta[relay.Constant][18] /* ty=Tensor[(576), float32] */, dtype="float32") /* ty=Tensor[(576), float32] */;
    %223 = reshape(%222, newshape=[6, 12, 8]) /* ty=Tensor[(6, 12, 8), float32] */;
    %224 = @func_2300(%223) /* ty=(Tensor[(6, 12, 8), float32], Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(1, 1584), float64]) */;
    %225 = cast(%var_3130, dtype="float32") /* ty=Tensor[(672, 1), float32] */;
    %226 = cosh(%225) /* ty=Tensor[(672, 1), float32] */;
    %227 = cast(%226, dtype="float64") /* ty=Tensor[(672, 1), float64] */;
    %228 = %216.0;
    %229 = cast(%228, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
    %230 = reshape(%229, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), bool] */;
    %231 = @func_1921(%230) /* ty=(Tensor[(8, 14, 12), int16], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
    %232 = %231.2;
    %233 = cast(%232, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
    %234 = reshape(%233, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), bool] */;
    %235 = @func_1921(%234) /* ty=(Tensor[(8, 14, 12), int16], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
    %236 = %221.0;
    %237 = %224.2;
    %238 = atan(%227) /* ty=Tensor[(672, 1), float64] */;
    %239 = %235.2;
    (%228, %236, meta[relay.Constant][17] /* ty=Tensor[(120), float32] */, %237, meta[relay.Constant][18] /* ty=Tensor[(576), float32] */, %238, %232, %239)
  };
  %240(%var_3178) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(5, 2, 12), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(576), float32], Tensor[(672, 1), float64], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */
}

def @func_6144() -> Tensor[(8, 14, 12), bool] {
  @func_6142() /* ty=Tensor[(8, 14, 12), bool] */
}

def @func_2886() -> (Tensor[(14, 5, 3), uint32],) {
  %244 = fn () -> (Tensor[(14, 5, 3), uint32],) {
    %241 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 5, 3), uint32] */, dtype="uint32") /* ty=Tensor[(1, 5, 3), uint32] */;
    %242 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 5, 3), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5, 3), uint32] */;
    %243 = add(%241, %242) /* ty=Tensor[(14, 5, 3), uint32] */;
    (%243,)
  };
  %244() /* ty=(Tensor[(14, 5, 3), uint32],) */
}

def @func_6050() -> (Tensor[(8, 14, 12), float64],) {
  %245 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
  (%245,)
}

def @func_4704(%var_4702: Tensor[(792, 2), uint32], %var_4703: Tensor[(36), float32]) -> (Tensor[(8, 14, 12), bool], Tensor[(4, 15, 2), float32], float32, Tensor[(8, 14, 12), float64], Tensor[(320), uint64], Tensor[(792, 2), uint32], Tensor[(4, 80), uint64], Tensor[(448), float64], Tensor[(36), float32]) {
  @func_4700(%var_4702, %var_4703) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(4, 15, 2), float32], float32, Tensor[(8, 14, 12), float64], Tensor[(320), uint64], Tensor[(792, 2), uint32], Tensor[(4, 80), uint64], Tensor[(448), float64], Tensor[(36), float32]) */
}

def @func_3608(%var_3596: Tensor[(11, 7, 8), int64]) -> (Tensor[(11, 7, 8), bool],) {
  %246 = cast(-10 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %247 = cast(%var_3596, dtype="bool") /* ty=Tensor[(11, 7, 8), bool] */;
  %248 = greater_equal(%246, %247) /* ty=Tensor[(11, 7, 8), bool] */;
  (%248,)
}

def @func_3592() -> (Tensor[(8, 14, 12), float32],) {
  %251 = fn () -> (Tensor[(8, 14, 12), float32],) {
    %249 = @func_3570() /* ty=(Tensor[(8, 14, 12), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), float64]) */;
    %250 = %249.0;
    (%250,)
  };
  %251() /* ty=(Tensor[(8, 14, 12), float32],) */
}

def @func_4352(%var_4350: Tensor[(2912), float32]) -> (Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), bool], Tensor[(2912), float32]) {
  @func_4349(%var_4350) /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), bool], Tensor[(2912), float32]) */
}

def @func_1831(%var_1829: Tensor[(9, 15, 8), int64], %var_1830: Tensor[(11, 16, 9), uint32]) -> (Tensor[(324), uint32], Tensor[(162, 2), uint32], Tensor[(9, 15, 8), float64], Tensor[(120, 1), float32], Tensor[(11, 16, 9), bool], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(9, 3, 12), bool], Tensor[(324), uint32], Tensor[(9, 15, 8), float32], Tensor[(605), float32], Tensor[(605), float64], Tensor[(8, 14, 12), bool], Tensor[(672), uint16], Tensor[(9, 3, 12), bool], Tensor[(8, 14, 12), bool]) {
  @func_1827(%var_1829, %var_1830) /* ty=(Tensor[(324), uint32], Tensor[(162, 2), uint32], Tensor[(9, 15, 8), float64], Tensor[(120, 1), float32], Tensor[(11, 16, 9), bool], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(9, 3, 12), bool], Tensor[(324), uint32], Tensor[(9, 15, 8), float32], Tensor[(605), float32], Tensor[(605), float64], Tensor[(8, 14, 12), bool], Tensor[(672), uint16], Tensor[(9, 3, 12), bool], Tensor[(8, 14, 12), bool]) */
}

def @func_1482() -> (Tensor[(8, 14, 12), bool],) {
  %252 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  (%252,)
}

def @func_6355() -> Tensor[(8, 14, 12), float32] {
  @func_6353() /* ty=Tensor[(8, 14, 12), float32] */
}

def @func_3227(%var_3226: Tensor[(8, 14, 12), float64]) -> (Tensor[(8, 14, 12), uint8], Tensor[(8, 14, 12), int32]) {
  %264 = fn (%var_3188: Tensor[(8, 14, 12), float64]) -> (Tensor[(8, 14, 12), uint8], Tensor[(8, 14, 12), int32]) {
    %253 = @func_2158() /* ty=Tensor[(8, 14, 12), float64] */;
    %254 = cast(%var_3188, dtype="uint8") /* ty=Tensor[(8, 14, 12), uint8] */;
    %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
    %256 = cast(%253, dtype="uint8") /* ty=Tensor[(8, 14, 12), uint8] */;
    %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %258 = cast(%var_3188, dtype="int32") /* ty=Tensor[(8, 14, 12), int32] */;
    %259 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
    %260 = cast(%253, dtype="int32") /* ty=Tensor[(8, 14, 12), int32] */;
    %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %262 = add(%256, %257) /* ty=Tensor[(8, 14, 12), uint8] */;
    %263 = subtract(%260, %261) /* ty=Tensor[(8, 14, 12), int32] */;
    (%262, %263)
  };
  %264(%var_3226) /* ty=(Tensor[(8, 14, 12), uint8], Tensor[(8, 14, 12), int32]) */
}

def @func_6296(%var_6257: Tensor[(420, 2), float32], %var_6271: Tensor[(6, 10, 16), float64]) -> (Tensor[(320), uint64], Tensor[(14), float64], Tensor[(420, 2), float32], Tensor[(6, 10, 16), bool], Tensor[(8, 14, 12), bool], Tensor[(4, 15, 2), float32], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32], Tensor[(8, 8, 5), uint64]) {
  %265 = cast(meta[relay.Constant][21] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
  %266 = cast(%var_6257, dtype="float32") /* ty=Tensor[(420, 2), float32] */;
  %267 = reshape(%265, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %268 = reshape(%266, newshape=[14, 15, 4]) /* ty=Tensor[(14, 15, 4), float32] */;
  %269 = @func_2025(%267, %268) /* ty=(Tensor[(320), uint64], Tensor[(14), float64], Tensor[(320), uint64], Tensor[(14, 15, 4), uint64], Tensor[(2, 6, 7), bool]) */;
  %270 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %271 = cos(%270) /* ty=Tensor[(1, 10, 16), float64] */;
  %272 = cast(%271, dtype="bool") /* ty=Tensor[(1, 10, 16), bool] */;
  %273 = cast(%var_6271, dtype="bool") /* ty=Tensor[(6, 10, 16), bool] */;
  %274 = @func_6078() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(4, 15, 2), float32], float32) */;
  %275 = cast(meta[relay.Constant][23] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %276 = cast(meta[relay.Constant][23] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %277 = reshape(%275, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
  %278 = reshape(%276, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
  %279 = %269.0;
  %280 = cast(%279, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %281 = reshape(%280, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
  %282 = logical_or(%272, %273) /* ty=Tensor[(6, 10, 16), bool] */;
  %283 = @func_2106() /* ty=Tensor[(8, 14, 12), bool] */;
  %284 = %274.1;
  %285 = @func_212(%277, %278) /* ty=Tensor[(11, 16, 9), uint32] */;
  %286 = @func_561(%281) /* ty=Tensor[(8, 8, 5), uint64] */;
  (%279, meta[relay.Constant][21] /* ty=Tensor[(14), float64] */, %var_6257, %282, %283, %284, %285, meta[relay.Constant][23] /* ty=Tensor[(1584), uint32] */, %286)
}

def @func_3256() -> Tensor[(8, 14, 12), float64] {
  %289 = fn () -> Tensor[(8, 14, 12), float64] {
    %287 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
    %288 = cast(%287, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
    exp(%288) /* ty=Tensor[(8, 14, 12), float64] */
  };
  %289() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_5021(%var_5019: Tensor[(3, 40), float32], %var_5020: Tensor[(1584), uint32]) -> (Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(3, 40), float32], Tensor[(1584), uint32]) {
  %304 = fn (%var_5013: Tensor[(3, 40), float32], %var_5014: Tensor[(1584), uint32]) -> (Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(3, 40), float32], Tensor[(1584), uint32]) {
    %290 = @func_2434() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) */;
    %291 = %290.0;
    %292 = cast(%291, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
    %293 = tan(%292) /* ty=Tensor[(8, 14, 12), float64] */;
    %294 = cast(%293, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
    %295 = cast(%var_5013, dtype="float32") /* ty=Tensor[(3, 40), float32] */;
    %296 = cast(%var_5014, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %297 = cast(%var_5014, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %298 = reshape(%295, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
    %299 = reshape(%296, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
    %300 = reshape(%297, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
    %301 = @func_1284(%298, %299, %300) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
    %302 = sqrt(%294) /* ty=Tensor[(8, 14, 12), float64] */;
    %303 = %301.1;
    (%302, %303, %var_5013, %var_5014)
  };
  %304(%var_5019, %var_5020) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(3, 40), float32], Tensor[(1584), uint32]) */
}

def @func_2108() -> Tensor[(8, 14, 12), bool] {
  @func_2106() /* ty=Tensor[(8, 14, 12), bool] */
}

def @func_4203(%var_4201: Tensor[(2, 5, 11), bool], %var_4202: Tensor[(2, 5, 11), bool]) -> Tensor[(2, 5, 11), bool] {
  %309 = fn (%var_4186: Tensor[(2, 5, 11), bool], %var_4187: Tensor[(2, 5, 11), bool]) -> Tensor[(2, 5, 11), bool] {
    %305 = cast(%var_4187, dtype="bool") /* ty=Tensor[(2, 5, 11), bool] */;
    %306 = shape_of(%var_4186, dtype="int32") /* ty=Tensor[(3), int32] */;
    %307 = cast(%var_4186, dtype="bool") /* ty=Tensor[(2, 5, 11), bool] */;
    %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%307, %308) /* ty=Tensor[(2, 5, 11), bool] */
  };
  %309(%var_4201, %var_4202) /* ty=Tensor[(2, 5, 11), bool] */
}

def @func_3663() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) {
  @func_3661() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) */
}

def @func_4700(%var_4691: Tensor[(792, 2), uint32], %var_4694: Tensor[(36), float32]) -> (Tensor[(8, 14, 12), bool], Tensor[(4, 15, 2), float32], float32, Tensor[(8, 14, 12), float64], Tensor[(320), uint64], Tensor[(792, 2), uint32], Tensor[(4, 80), uint64], Tensor[(448), float64], Tensor[(36), float32]) {
  %310 = @func_4179() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %311 = cast(-5.98026f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %312 = reshape(%311, newshape=[]) /* ty=float32 */;
  %313 = @func_798(%312) /* ty=(Tensor[(4, 15, 2), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64]) */;
  %314 = cast(%var_4691, dtype="uint32") /* ty=Tensor[(792, 2), uint32] */;
  %315 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 80), uint64] */, dtype="uint64") /* ty=Tensor[(4, 80), uint64] */;
  %316 = cast(meta[relay.Constant][25] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %317 = cast(%var_4694, dtype="float32") /* ty=Tensor[(36), float32] */;
  %318 = reshape(%314, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %319 = reshape(%315, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %320 = reshape(%316, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %321 = reshape(%317, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %322 = @func_4324(%318, %319, %320, %321) /* ty=(Tensor[(120), float32], Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64], Tensor[(8, 14, 12), float64], Tensor[(16, 14, 2), float64], Tensor[(448), float64], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */;
  %323 = %310.0;
  %324 = %313.0;
  %325 = @func_3255() /* ty=Tensor[(8, 14, 12), float64] */;
  %326 = %322.3;
  (%323, %324, -5.98026f /* ty=float32 */, %325, %326, %var_4691, meta[relay.Constant][24] /* ty=Tensor[(4, 80), uint64] */, meta[relay.Constant][25] /* ty=Tensor[(448), float64] */, %var_4694)
}

def @func_2159() -> Tensor[(8, 14, 12), float64] {
  %328 = fn () -> Tensor[(8, 14, 12), float64] {
    %327 = @func_1325() /* ty=(Tensor[(8, 14, 12), float64],) */;
    %327.0
  };
  %328() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_1587(%var_1585: Tensor[(120), float32]) -> (Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) {
  @func_1584(%var_1585) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */
}

def @func_3447(%var_3445: Tensor[(11, 12, 2), float64], %var_3446: Tensor[(11, 12, 2), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(8, 14, 12), bool]) {
  @func_3443(%var_3445, %var_3446) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(8, 14, 12), bool]) */
}

def @func_3443(%var_3436: Tensor[(11, 12, 2), float64], %var_3437: Tensor[(11, 12, 2), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(8, 14, 12), bool]) {
  %329 = cast(%var_3437, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %330 = shape_of(%var_3436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%var_3436, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %333 = divide(%331, %332) /* ty=Tensor[(11, 12, 2), float64] */;
  %334 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  (%333, %334)
}

def @func_3729(%var_3728: Tensor[(13, 14, 16), float32]) -> (Tensor[(13, 14, 16), float32], Tensor[(8, 14, 12), bool]) {
  %339 = fn (%var_3694: Tensor[(13, 14, 16), float32]) -> (Tensor[(13, 14, 16), float32], Tensor[(8, 14, 12), bool]) {
    %335 = cast(%var_3694, dtype="float32") /* ty=Tensor[(13, 14, 16), float32] */;
    %336 = @func_2750() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) */;
    %337 = exp(%335) /* ty=Tensor[(13, 14, 16), float32] */;
    %338 = %336.2;
    (%337, %338)
  };
  %339(%var_3728) /* ty=(Tensor[(13, 14, 16), float32], Tensor[(8, 14, 12), bool]) */
}

def @func_4496() -> (Tensor[(8, 14, 12), bool],) {
  %341 = fn () -> (Tensor[(8, 14, 12), bool],) {
    %340 = @func_3474() /* ty=Tensor[(8, 14, 12), bool] */;
    (%340,)
  };
  %341() /* ty=(Tensor[(8, 14, 12), bool],) */
}

def @func_800(%var_799: float32) -> (Tensor[(4, 15, 2), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64]) {
  %348 = fn (%var_787: float32) -> (Tensor[(4, 15, 2), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64]) {
    %342 = cast(%var_787, dtype="float32") /* ty=float32 */;
    %343 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 15, 2), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 2), float32] */;
    %344 = cast(meta[relay.Constant][27] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %345 = reshape(%344, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
    %346 = floor_divide(%342, %343) /* ty=Tensor[(4, 15, 2), float32] */;
    %347 = @func_561(%345) /* ty=Tensor[(8, 8, 5), uint64] */;
    (%346, %347, meta[relay.Constant][27] /* ty=Tensor[(320), uint64] */)
  };
  %348(%var_799) /* ty=(Tensor[(4, 15, 2), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64]) */
}

def @func_3571() -> (Tensor[(8, 14, 12), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), float64]) {
  %357 = fn () -> (Tensor[(8, 14, 12), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), float64]) {
    %349 = @func_2172() /* ty=(Tensor[(8, 14, 12), bool],) */;
    %350 = %349.0;
    %351 = cast(%350, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
    %352 = cast(meta[relay.Constant][28] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %353 = reshape(%352, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
    %354 = asinh(%351) /* ty=Tensor[(8, 14, 12), float32] */;
    %355 = @func_561(%353) /* ty=Tensor[(8, 8, 5), uint64] */;
    %356 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
    (%354, %355, meta[relay.Constant][28] /* ty=Tensor[(320), uint64] */, %356)
  };
  %357() /* ty=(Tensor[(8, 14, 12), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), float64]) */
}

def @func_4113(%var_4111: Tensor[(8, 14, 12), bool]) -> (Tensor[(8, 14, 12), uint16], Tensor[(8, 14, 12), bool]) {
  @func_4110(%var_4111) /* ty=(Tensor[(8, 14, 12), uint16], Tensor[(8, 14, 12), bool]) */
}

def @func_879(%var_877: Tensor[(132, 12), uint32]) -> (Tensor[(10, 2, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint32], Tensor[(9, 3, 12), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(6, 8, 14), uint16], Tensor[(672), uint16], Tensor[(132, 12), uint32]) {
  @func_876(%var_877) /* ty=(Tensor[(10, 2, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint32], Tensor[(9, 3, 12), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(6, 8, 14), uint16], Tensor[(672), uint16], Tensor[(132, 12), uint32]) */
}

def @func_561(%var_549: Tensor[(8, 8, 5), uint64]) -> Tensor[(8, 8, 5), uint64] {
  %358 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 8, 5), uint64] */, dtype="uint64") /* ty=Tensor[(8, 8, 5), uint64] */;
  %359 = shape_of(%var_549, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%var_549, dtype="uint64") /* ty=Tensor[(8, 8, 5), uint64] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%360, %361) /* ty=Tensor[(8, 8, 5), uint64] */
}

def @func_2087(%var_2085: Tensor[(8, 4, 16), float32], %var_2086: Tensor[(120), float32]) -> (Tensor[(8, 4, 16), float32], Tensor[(396, 4), bool], Tensor[(120), float32], Tensor[(1584), uint32]) {
  @func_2083(%var_2085, %var_2086) /* ty=(Tensor[(8, 4, 16), float32], Tensor[(396, 4), bool], Tensor[(120), float32], Tensor[(1584), uint32]) */
}

def @func_2106() -> Tensor[(8, 14, 12), bool] {
  %362 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %362.0
}

def @func_6133() -> (Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64]) {
  %363 = @func_5918() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %364 = @func_2793() /* ty=Tensor[(8, 14, 12), float64] */;
  %365 = %363.0;
  (%364, %365)
}

def @func_4411(%var_4380: Tensor[(448), float64], %var_4398: Tensor[(18, 18), uint32]) -> (Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64], Tensor[(18, 18), uint32], Tensor[(16, 14, 2), bool], Tensor[(9, 3, 12), float64]) {
  %366 = @func_3966() /* ty=(Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64]) */;
  %367 = cast(%var_4380, dtype="float64") /* ty=Tensor[(448), float64] */;
  %368 = reshape(%367, newshape=[16, 14, 2]) /* ty=Tensor[(16, 14, 2), float64] */;
  %369 = @func_3977(%368) /* ty=Tensor[(16, 14, 2), float64] */;
  %370 = cast(%var_4380, dtype="bool") /* ty=Tensor[(448), bool] */;
  %371 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%369, dtype="bool") /* ty=Tensor[(16, 14, 2), bool] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %374 = cast(%var_4398, dtype="uint32") /* ty=Tensor[(18, 18), uint32] */;
  %375 = reshape(%374, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %376 = @func_353(%375) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %377 = %376.1;
  %378 = cast(%377, dtype="float64") /* ty=Tensor[(9, 3, 12), float64] */;
  %379 = @func_2793() /* ty=Tensor[(8, 14, 12), float64] */;
  %380 = %366.1;
  %381 = greater_equal(%372, %373) /* ty=Tensor[(16, 14, 2), bool] */;
  %382 = exp(%378) /* ty=Tensor[(9, 3, 12), float64] */;
  (%379, %380, %var_4398, %381, %382)
}

def @func_6022(%var_5991: Tensor[(36), float32]) -> (Tensor[(8, 14, 12), float64], Tensor[(36), uint64], Tensor[(320), uint64], Tensor[(1584), uint32]) {
  %383 = @func_5918() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %384 = cast(%var_5991, dtype="float32") /* ty=Tensor[(36), float32] */;
  %385 = reshape(%384, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), float32] */;
  %386 = @func_93(%385) /* ty=Tensor[(?, 6, 6), int8] */;
  %387 = cast(%386, dtype="uint64") /* ty=Tensor[(?, 6, 6), uint64] */;
  %388 = shape_of(%var_5991, dtype="int32") /* ty=Tensor[(1), int32] */;
  %389 = cast(%var_5991, dtype="uint64") /* ty=Tensor[(36), uint64] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %391 = cast(meta[relay.Constant][30] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %392 = logical_xor(%389, %390) /* ty=Tensor[(36), uint64] */;
  %393 = cast(%392, dtype="float32") /* ty=Tensor[(36), float32] */;
  %394 = reshape(%391, newshape=[792, 2]) /* ty=Tensor[(792, 2), uint32] */;
  %395 = reshape(%393, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %396 = @func_4700(%394, %395) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(4, 15, 2), float32], float32, Tensor[(8, 14, 12), float64], Tensor[(320), uint64], Tensor[(792, 2), uint32], Tensor[(4, 80), uint64], Tensor[(448), float64], Tensor[(36), float32]) */;
  %397 = %383.0;
  %398 = %396.4;
  (%397, %392, %398, meta[relay.Constant][30] /* ty=Tensor[(1584), uint32] */)
}

def @func_6036() -> Tensor[(8, 14, 12), bool] {
  %400 = fn () -> Tensor[(8, 14, 12), bool] {
    %399 = @func_4179() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
    %399.0
  };
  %400() /* ty=Tensor[(8, 14, 12), bool] */
}

def @func_619(%var_617: Tensor[(6, 8, 14), uint16], %var_618: Tensor[(1584), uint32]) -> (Tensor[(6, 8, 14), uint16], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32]) {
  %411 = fn (%var_604: Tensor[(6, 8, 14), uint16], %var_610: Tensor[(1584), uint32]) -> (Tensor[(6, 8, 14), uint16], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32]) {
    %401 = cast(%var_604, dtype="uint16") /* ty=Tensor[(6, 8, 14), uint16] */;
    %402 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(6, 8, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %403 = cast(meta[relay.Constant][31] /* ty=Tensor[(6, 8, 14), uint16] */, dtype="uint16") /* ty=Tensor[(6, 8, 14), uint16] */;
    %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %405 = cast(%var_610, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %406 = cast(%var_610, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %407 = reshape(%405, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
    %408 = reshape(%406, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
    %409 = maximum(%403, %404) /* ty=Tensor[(6, 8, 14), uint16] */;
    %410 = @func_212(%407, %408) /* ty=Tensor[(11, 16, 9), uint32] */;
    (%409, %410, %var_610)
  };
  %411(%var_617, %var_618) /* ty=(Tensor[(6, 8, 14), uint16], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32]) */
}

def @func_1675() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  %414 = fn () -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
    %412 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
    %413 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
    (%412, %413)
  };
  %414() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */
}

def @func_3328(%var_3309: Tensor[(120), float32], %var_3310: Tensor[(12, 132), uint32], %var_3319: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) {
  %415 = cast(%var_3309, dtype="float32") /* ty=Tensor[(120), float32] */;
  %416 = cast(%var_3310, dtype="uint32") /* ty=Tensor[(12, 132), uint32] */;
  %417 = cast(%var_3310, dtype="uint32") /* ty=Tensor[(12, 132), uint32] */;
  %418 = reshape(%415, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
  %419 = reshape(%416, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %420 = reshape(%417, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %421 = @func_1284(%418, %419, %420) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
  %422 = cast(%var_3319, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %423 = reshape(%422, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
  %424 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %425 = @func_3255() /* ty=Tensor[(8, 14, 12), float64] */;
  %426 = %421.1;
  %427 = @func_561(%423) /* ty=Tensor[(8, 8, 5), uint64] */;
  %428 = %424.1;
  (%425, %426, %var_3309, %var_3310, %427, %var_3319, %428)
}

def @func_3474() -> Tensor[(8, 14, 12), bool] {
  %429 = @func_2269() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) */;
  %429.0
}

def @func_1465(%var_1451: Tensor[(14), float64], %var_1453: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), float64], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84, 1), float64], Tensor[(320), uint64]) {
  %430 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
  %431 = cast(%430, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  %432 = cast(%var_1451, dtype="float64") /* ty=Tensor[(14), float64] */;
  %433 = cast(meta[relay.Constant][32] /* ty=Tensor[(84, 1), float64] */, dtype="float64") /* ty=Tensor[(84, 1), float64] */;
  %434 = cast(%var_1453, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %435 = reshape(%432, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), float64] */;
  %436 = reshape(%433, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), float64] */;
  %437 = reshape(%434, newshape=[320, 1]) /* ty=Tensor[(320, 1), uint64] */;
  %438 = @func_1010(%435, %436, %437) /* ty=(Tensor[(2, 6, 7), bool], Tensor[(8, 8, 5), uint64], Tensor[(2, 320, 7), int32]) */;
  %439 = log(%431) /* ty=Tensor[(8, 14, 12), float64] */;
  %440 = %438.0;
  (%439, %440, %var_1451, meta[relay.Constant][32] /* ty=Tensor[(84, 1), float64] */, %var_1453)
}

def @func_4179() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  %441 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %442 = @func_4065() /* ty=(Tensor[(10, 15, 15), float32], Tensor[(8, 14, 12), bool], Tensor[(576), float32], Tensor[(10, 15, 15), float32], Tensor[(11, 7, 8), bool], Tensor[(616), int64]) */;
  %443 = %441.0;
  %444 = %442.1;
  (%443, %444)
}

def @func_2302(%var_2301: Tensor[(6, 12, 8), float32]) -> (Tensor[(6, 12, 8), float32], Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(1, 1584), float64]) {
  %453 = fn (%var_2278: Tensor[(6, 12, 8), float32]) -> (Tensor[(6, 12, 8), float32], Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(1, 1584), float64]) {
    %445 = cast(%var_2278, dtype="float32") /* ty=Tensor[(6, 12, 8), float32] */;
    %446 = cast(meta[relay.Constant][33] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
    %447 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 1584), float64] */, dtype="float64") /* ty=Tensor[(1, 1584), float64] */;
    %448 = reshape(%446, newshape=[36]) /* ty=Tensor[(36), float32] */;
    %449 = reshape(%447, newshape=[1584]) /* ty=Tensor[(1584), float64] */;
    %450 = @func_1996(%448, %449) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(9, 4), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(1584), int64], Tensor[(8, 14, 12), bool], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(1584), bool], Tensor[(8, 8, 5), uint64], Tensor[(8, 14, 12), bool]) */;
    %451 = sinh(%445) /* ty=Tensor[(6, 12, 8), float32] */;
    %452 = %450.5;
    (%451, %452, meta[relay.Constant][33] /* ty=Tensor[(36), float32] */, meta[relay.Constant][34] /* ty=Tensor[(1, 1584), float64] */)
  };
  %453(%var_2301) /* ty=(Tensor[(6, 12, 8), float32], Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(1, 1584), float64]) */
}

def @func_4067() -> (Tensor[(10, 15, 15), float32], Tensor[(8, 14, 12), bool], Tensor[(576), float32], Tensor[(10, 15, 15), float32], Tensor[(11, 7, 8), bool], Tensor[(616), int64]) {
  @func_4065() /* ty=(Tensor[(10, 15, 15), float32], Tensor[(8, 14, 12), bool], Tensor[(576), float32], Tensor[(10, 15, 15), float32], Tensor[(11, 7, 8), bool], Tensor[(616), int64]) */
}

def @func_5515(%var_5513: Tensor[(14, 3, 15), int16]) -> Tensor[(14, 3, 15), int16] {
  @func_5512(%var_5513) /* ty=Tensor[(14, 3, 15), int16] */
}

def @func_3926() -> (Tensor[(8, 14, 12), float64],) {
  @func_3924() /* ty=(Tensor[(8, 14, 12), float64],) */
}

def @func_5115(%var_5038: Tensor[(324), uint32], %var_5083: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), bool], Tensor[(16, 14, 2), bool], Tensor[(448), float64], Tensor[(324), uint32], Tensor[(8, 14, 12), bool], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(8, 14, 12), bool], Tensor[(84, 1), float64], Tensor[(14, 1), float64], Tensor[(320), uint64], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float64]) {
  %454 = cast(meta[relay.Constant][35] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %455 = cast(%var_5038, dtype="uint32") /* ty=Tensor[(324), uint32] */;
  %456 = reshape(%454, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %457 = reshape(%455, newshape=[18, 18]) /* ty=Tensor[(18, 18), uint32] */;
  %458 = @func_4411(%456, %457) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64], Tensor[(18, 18), uint32], Tensor[(16, 14, 2), bool], Tensor[(9, 3, 12), float64]) */;
  %459 = cast(meta[relay.Constant][36] /* ty=Tensor[(60, 2), float32] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %460 = cast(meta[relay.Constant][37] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %461 = reshape(%459, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
  %462 = reshape(%460, newshape=[672]) /* ty=Tensor[(672), uint16] */;
  %463 = @func_1065(%461, %462) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
  %464 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 1), float64] */;
  %465 = cast(%var_5083, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %466 = reshape(%464, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %467 = reshape(%465, newshape=[320]) /* ty=Tensor[(320), uint64] */;
  %468 = @func_1465(%466, %467) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84, 1), float64], Tensor[(320), uint64]) */;
  %469 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  %470 = %458.3;
  %471 = @func_3474() /* ty=Tensor[(8, 14, 12), bool] */;
  %472 = %463.3;
  %473 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
  %474 = %468.3;
  %475 = @func_2603() /* ty=Tensor[(15, 16, 2), float32] */;
  %476 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
  (%469, %470, meta[relay.Constant][35] /* ty=Tensor[(448), float64] */, %var_5038, %471, %472, meta[relay.Constant][36] /* ty=Tensor[(60, 2), float32] */, meta[relay.Constant][37] /* ty=Tensor[(672), uint16] */, %473, %474, meta[relay.Constant][38] /* ty=Tensor[(14, 1), float64] */, %var_5083, %475, %476)
}

def @func_4110(%var_4096: Tensor[(8, 14, 12), bool]) -> (Tensor[(8, 14, 12), uint16], Tensor[(8, 14, 12), bool]) {
  %477 = @func_2172() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %478 = %477.0;
  %479 = cast(%var_4096, dtype="uint16") /* ty=Tensor[(8, 14, 12), uint16] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%478, dtype="uint16") /* ty=Tensor[(8, 14, 12), uint16] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %483 = bitwise_and(%481, %482) /* ty=Tensor[(8, 14, 12), uint16] */;
  %484 = @func_3868() /* ty=Tensor[(8, 14, 12), bool] */;
  (%483, %484)
}

def @func_212(%var_202: Tensor[(11, 16, 9), uint32], %var_203: Tensor[(11, 16, 9), uint32]) -> Tensor[(11, 16, 9), uint32] {
  %485 = cast(%var_203, dtype="uint32") /* ty=Tensor[(11, 16, 9), uint32] */;
  %486 = shape_of(%var_202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(%var_202, dtype="uint32") /* ty=Tensor[(11, 16, 9), uint32] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%487, %488) /* ty=Tensor[(11, 16, 9), uint32] */
}

def @func_6025(%var_6023: Tensor[(36), float32]) -> (Tensor[(8, 14, 12), float64], Tensor[(36), uint64], Tensor[(320), uint64], Tensor[(1584), uint32]) {
  @func_6022(%var_6023) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(36), uint64], Tensor[(320), uint64], Tensor[(1584), uint32]) */
}

def @func_5512(%var_5507: Tensor[(14, 3, 15), int16]) -> Tensor[(14, 3, 15), int16] {
  %489 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 3, 15), int16] */, dtype="int16") /* ty=Tensor[(1, 3, 15), int16] */;
  %490 = cast(%var_5507, dtype="int16") /* ty=Tensor[(14, 3, 15), int16] */;
  multiply(%489, %490) /* ty=Tensor[(14, 3, 15), int16] */
}

def @func_2795() -> Tensor[(8, 14, 12), float64] {
  @func_2793() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_4513(%var_4511: Tensor[(5, 4, 10), float32]) -> (Tensor[(5, 4, 10), uint64],) {
  @func_4510(%var_4511) /* ty=(Tensor[(5, 4, 10), uint64],) */
}

def @func_1014(%var_1011: Tensor[(2, 1, 7), float64], %var_1012: Tensor[(2, 6, 7), float64], %var_1013: Tensor[(320, 1), uint64]) -> (Tensor[(2, 6, 7), bool], Tensor[(8, 8, 5), uint64], Tensor[(2, 320, 7), int32]) {
  %504 = fn (%var_970: Tensor[(2, 1, 7), float64], %var_971: Tensor[(2, 6, 7), float64], %var_995: Tensor[(320, 1), uint64]) -> (Tensor[(2, 6, 7), bool], Tensor[(8, 8, 5), uint64], Tensor[(2, 320, 7), int32]) {
    %491 = cast(%var_970, dtype="bool") /* ty=Tensor[(2, 1, 7), bool] */;
    %492 = cast(%var_971, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
    %493 = cast(%var_995, dtype="uint64") /* ty=Tensor[(320, 1), uint64] */;
    %494 = reshape(%493, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
    %495 = cast(%var_970, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
    %496 = sinh(%495) /* ty=Tensor[(2, 1, 7), float32] */;
    %497 = cast(%496, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
    %498 = exp(%497) /* ty=Tensor[(2, 1, 7), float32] */;
    %499 = cast(%498, dtype="int32") /* ty=Tensor[(2, 1, 7), int32] */;
    %500 = cast(%var_995, dtype="int32") /* ty=Tensor[(320, 1), int32] */;
    %501 = greater(%491, %492) /* ty=Tensor[(2, 6, 7), bool] */;
    %502 = @func_561(%494) /* ty=Tensor[(8, 8, 5), uint64] */;
    %503 = left_shift(%499, %500) /* ty=Tensor[(2, 320, 7), int32] */;
    (%501, %502, %503)
  };
  %504(%var_1011, %var_1012, %var_1013) /* ty=(Tensor[(2, 6, 7), bool], Tensor[(8, 8, 5), uint64], Tensor[(2, 320, 7), int32]) */
}

def @func_6078() -> (Tensor[(5, 4, 10), float32], Tensor[(4, 15, 2), float32], float32) {
  %505 = @func_2510() /* ty=(Tensor[(5, 4, 10), float32],) */;
  %506 = cast(-8.10588f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %507 = reshape(%506, newshape=[]) /* ty=float32 */;
  %508 = @func_798(%507) /* ty=(Tensor[(4, 15, 2), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64]) */;
  %509 = %505.0;
  %510 = %508.0;
  (%509, %510, -8.10588f /* ty=float32 */)
}

def @func_6353() -> Tensor[(8, 14, 12), float32] {
  %511 = @func_2750() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) */;
  %512 = %511.1;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
  rsqrt(%513) /* ty=Tensor[(8, 14, 12), float32] */
}

def @func_3333(%var_3330: Tensor[(120), float32], %var_3331: Tensor[(12, 132), uint32], %var_3332: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) {
  @func_3328(%var_3330, %var_3331, %var_3332) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) */
}

def @func_5119(%var_5117: Tensor[(324), uint32], %var_5118: Tensor[(320), uint64]) -> (Tensor[(8, 14, 12), bool], Tensor[(16, 14, 2), bool], Tensor[(448), float64], Tensor[(324), uint32], Tensor[(8, 14, 12), bool], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(8, 14, 12), bool], Tensor[(84, 1), float64], Tensor[(14, 1), float64], Tensor[(320), uint64], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float64]) {
  @func_5115(%var_5117, %var_5118) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(16, 14, 2), bool], Tensor[(448), float64], Tensor[(324), uint32], Tensor[(8, 14, 12), bool], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(8, 14, 12), bool], Tensor[(84, 1), float64], Tensor[(14, 1), float64], Tensor[(320), uint64], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float64]) */
}

def @func_5221() -> Tensor[(8, 14, 12), float64] {
  @func_3255() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_899() -> Tensor[(8, 14, 12), float64] {
  @func_897() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_5655(%var_5652: Tensor[(30, 4), float32], %var_5653: Tensor[(320), uint64], %var_5654: Tensor[(30, 4), float32]) -> (Tensor[(8, 14, 12), bool], Tensor[(11, 7, 8), bool], Tensor[(616), int64], Tensor[(672), uint16], Tensor[(8, 14, 12), float64], Tensor[(30, 4), int32], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84), float64], Tensor[(320), uint64], Tensor[(11, 7, 8), bool], Tensor[(264), float64], Tensor[(4, 396), uint32], Tensor[(30, 4), int32], Tensor[(30, 4), bool], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  %567 = fn (%var_5596: Tensor[(30, 4), float32], %var_5614: Tensor[(320), uint64], %var_5625: Tensor[(30, 4), float32]) -> (Tensor[(8, 14, 12), bool], Tensor[(11, 7, 8), bool], Tensor[(616), int64], Tensor[(672), uint16], Tensor[(8, 14, 12), float64], Tensor[(30, 4), int32], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84), float64], Tensor[(320), uint64], Tensor[(11, 7, 8), bool], Tensor[(264), float64], Tensor[(4, 396), uint32], Tensor[(30, 4), int32], Tensor[(30, 4), bool], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
    %514 = @func_4179() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
    %515 = cast(meta[relay.Constant][40] /* ty=Tensor[(616), int64] */, dtype="int64") /* ty=Tensor[(616), int64] */;
    %516 = reshape(%515, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), int64] */;
    %517 = @func_3608(%516) /* ty=(Tensor[(11, 7, 8), bool],) */;
    %518 = cast(meta[relay.Constant][41] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
    %519 = reshape(%518, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %520 = @func_1584(%519) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */;
    %521 = @func_3924() /* ty=(Tensor[(8, 14, 12), float64],) */;
    %522 = cast(meta[relay.Constant][41] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
    %523 = log(%522) /* ty=Tensor[(30, 4), float32] */;
    %524 = cast(%var_5596, dtype="int64") /* ty=Tensor[(30, 4), int64] */;
    %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(2), int32] */;
    %526 = cast(%523, dtype="int64") /* ty=Tensor[(30, 4), int64] */;
    %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %528 = bitwise_or(%526, %527) /* ty=Tensor[(30, 4), int64] */;
    %529 = cast(meta[relay.Constant][41] /* ty=Tensor[(30, 4), float32] */, dtype="int32") /* ty=Tensor[(30, 4), int32] */;
    %530 = shape_of(%528, dtype="int32") /* ty=Tensor[(2), int32] */;
    %531 = cast(%528, dtype="int32") /* ty=Tensor[(30, 4), int32] */;
    %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %533 = cast(meta[relay.Constant][42] /* ty=Tensor[(14), float64] */, dtype="float64") /* ty=Tensor[(14), float64] */;
    %534 = cast(meta[relay.Constant][43] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
    %535 = cast(%var_5614, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %536 = reshape(%533, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), float64] */;
    %537 = reshape(%534, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), float64] */;
    %538 = reshape(%535, newshape=[320, 1]) /* ty=Tensor[(320, 1), uint64] */;
    %539 = @func_1010(%536, %537, %538) /* ty=(Tensor[(2, 6, 7), bool], Tensor[(8, 8, 5), uint64], Tensor[(2, 320, 7), int32]) */;
    %540 = cast(meta[relay.Constant][44] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
    %541 = cast(meta[relay.Constant][41] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
    %542 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 396), uint32] */, dtype="uint32") /* ty=Tensor[(4, 396), uint32] */;
    %543 = reshape(%540, newshape=[3, 88]) /* ty=Tensor[(3, 88), float64] */;
    %544 = reshape(%541, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
    %545 = reshape(%542, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
    %546 = @func_5497(%543, %544, %545) /* ty=(Tensor[(11, 7, 8), bool], Tensor[(11, 12, 2), float64], Tensor[(3, 88), float64], Tensor[(1584), uint32], Tensor[(60, 2), float32], Tensor[(1584), uint32]) */;
    %547 = cast(meta[relay.Constant][41] /* ty=Tensor[(30, 4), float32] */, dtype="int32") /* ty=Tensor[(30, 4), int32] */;
    %548 = shape_of(%523, dtype="int32") /* ty=Tensor[(2), int32] */;
    %549 = cast(%523, dtype="int32") /* ty=Tensor[(30, 4), int32] */;
    %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %551 = cast(%var_5625, dtype="bool") /* ty=Tensor[(30, 4), bool] */;
    %552 = shape_of(%523, dtype="int32") /* ty=Tensor[(2), int32] */;
    %553 = cast(%523, dtype="bool") /* ty=Tensor[(30, 4), bool] */;
    %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %555 = @func_4179() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
    %556 = %514.1;
    %557 = %517.0;
    %558 = %520.3;
    %559 = %521.0;
    %560 = minimum(%531, %532) /* ty=Tensor[(30, 4), int32] */;
    %561 = %539.0;
    %562 = %546.0;
    %563 = multiply(%549, %550) /* ty=Tensor[(30, 4), int32] */;
    %564 = equal(%553, %554) /* ty=Tensor[(30, 4), bool] */;
    %565 = @func_1398() /* ty=Tensor[(8, 14, 12), bool] */;
    %566 = %555.1;
    (%556, %557, meta[relay.Constant][40] /* ty=Tensor[(616), int64] */, %558, %559, %560, %561, meta[relay.Constant][42] /* ty=Tensor[(14), float64] */, meta[relay.Constant][43] /* ty=Tensor[(84), float64] */, %var_5614, %562, meta[relay.Constant][44] /* ty=Tensor[(264), float64] */, meta[relay.Constant][45] /* ty=Tensor[(4, 396), uint32] */, %563, %564, %565, %566)
  };
  %567(%var_5652, %var_5653, %var_5654) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(11, 7, 8), bool], Tensor[(616), int64], Tensor[(672), uint16], Tensor[(8, 14, 12), float64], Tensor[(30, 4), int32], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84), float64], Tensor[(320), uint64], Tensor[(11, 7, 8), bool], Tensor[(264), float64], Tensor[(4, 396), uint32], Tensor[(30, 4), int32], Tensor[(30, 4), bool], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */
}

def @func_2604() -> Tensor[(15, 16, 2), float32] {
  %571 = fn () -> Tensor[(15, 16, 2), float32] {
    %568 = cast(meta[relay.Constant][46] /* ty=Tensor[(15, 16, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
    %569 = log(%568) /* ty=Tensor[(15, 16, 2), float32] */;
    %570 = cast(%569, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
    erf(%570) /* ty=Tensor[(15, 16, 2), float32] */
  };
  %571() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_6364(%var_6362: Tensor[(1, 15, 9), float32]) -> Tensor[(1, 15, 9), float32] {
  @func_6361(%var_6362) /* ty=Tensor[(1, 15, 9), float32] */
}

def @func_1523(%var_1499: Tensor[(8, 14, 12), float64], %var_1506: Tensor[(672, 1), uint16], %var_1515: Tensor[(36, 1), float32]) -> (Tensor[(8, 14, 12), int64], Tensor[(1584), uint32], Tensor[(672, 1), uint16], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(36, 1), float32]) {
  %572 = @func_1325() /* ty=(Tensor[(8, 14, 12), float64],) */;
  %573 = %572.0;
  %574 = cast(%var_1499, dtype="int64") /* ty=Tensor[(8, 14, 12), int64] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%573, dtype="int64") /* ty=Tensor[(8, 14, 12), int64] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %578 = cast(%var_1506, dtype="uint16") /* ty=Tensor[(672, 1), uint16] */;
  %579 = cast(meta[relay.Constant][47] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %580 = reshape(%578, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), uint16] */;
  %581 = reshape(%579, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %582 = @func_616(%580, %581) /* ty=(Tensor[(6, 8, 14), uint16], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32]) */;
  %583 = cast(%var_1515, dtype="float32") /* ty=Tensor[(36, 1), float32] */;
  %584 = reshape(%583, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), float32] */;
  %585 = left_shift(%576, %577) /* ty=Tensor[(8, 14, 12), int64] */;
  %586 = %582.2;
  %587 = @func_93(%584) /* ty=Tensor[(?, 6, 6), int8] */;
  (%585, %586, %var_1506, meta[relay.Constant][47] /* ty=Tensor[(1584), uint32] */, %587, %var_1515)
}

def @func_6052() -> (Tensor[(8, 14, 12), float64],) {
  @func_6050() /* ty=(Tensor[(8, 14, 12), float64],) */
}

def @func_2751() -> (Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) {
  %594 = fn () -> (Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) {
    %588 = @func_2510() /* ty=(Tensor[(5, 4, 10), float32],) */;
    %589 = @func_1325() /* ty=(Tensor[(8, 14, 12), float64],) */;
    %590 = @func_2269() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) */;
    %591 = %588.0;
    %592 = %589.0;
    %593 = %590.0;
    (%591, %592, %593)
  };
  %594() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) */
}

def @func_4830(%var_4828: Tensor[(120), float32], %var_4829: Tensor[(1584), uint32]) -> (Tensor[(8, 14, 12), bool], Tensor[(120), float32], Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64]) {
  %604 = fn (%var_4822: Tensor[(120), float32], %var_4823: Tensor[(1584), uint32]) -> (Tensor[(8, 14, 12), bool], Tensor[(120), float32], Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64]) {
    %595 = cast(%var_4822, dtype="float32") /* ty=Tensor[(120), float32] */;
    %596 = cast(%var_4823, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %597 = cast(meta[relay.Constant][48] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %598 = reshape(%595, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %599 = reshape(%596, newshape=[12, 132]) /* ty=Tensor[(12, 132), uint32] */;
    %600 = reshape(%597, newshape=[320]) /* ty=Tensor[(320), uint64] */;
    %601 = @func_3328(%598, %599, %600) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) */;
    %602 = @func_3868() /* ty=Tensor[(8, 14, 12), bool] */;
    %603 = %601.2;
    (%602, %603, %var_4822, %var_4823, meta[relay.Constant][48] /* ty=Tensor[(320), uint64] */)
  };
  %604(%var_4828, %var_4829) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(120), float32], Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64]) */
}

def @func_1068(%var_1066: Tensor[(5, 2, 12), float32], %var_1067: Tensor[(672), uint16]) -> (Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) {
  %613 = fn (%var_1039: Tensor[(5, 2, 12), float32], %var_1053: Tensor[(672), uint16]) -> (Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) {
    %605 = cast(%var_1039, dtype="float32") /* ty=Tensor[(5, 2, 12), float32] */;
    %606 = cast(%var_1053, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %607 = cast(meta[relay.Constant][49] /* ty=Tensor[(396, 4), uint32] */, dtype="uint32") /* ty=Tensor[(396, 4), uint32] */;
    %608 = reshape(%606, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), uint16] */;
    %609 = reshape(%607, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
    %610 = @func_616(%608, %609) /* ty=(Tensor[(6, 8, 14), uint16], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32]) */;
    %611 = asin(%605) /* ty=Tensor[(5, 2, 12), float32] */;
    %612 = %610.1;
    (%611, %612, %var_1053, meta[relay.Constant][49] /* ty=Tensor[(396, 4), uint32] */)
  };
  %613(%var_1066, %var_1067) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */
}

def @func_5223() -> Tensor[(8, 14, 12), float64] {
  @func_5221() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_6142() -> Tensor[(8, 14, 12), bool] {
  %614 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %614.1
}

def @func_5919() -> (Tensor[(8, 14, 12), float64],) {
  %616 = fn () -> (Tensor[(8, 14, 12), float64],) {
    %615 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
    (%615,)
  };
  %616() /* ty=(Tensor[(8, 14, 12), float64],) */
}

def @func_3967() -> (Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64]) {
  %619 = fn () -> (Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64]) {
    %617 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
    %618 = @func_2774() /* ty=Tensor[(8, 14, 12), float64] */;
    (%617, %618)
  };
  %619() /* ty=(Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), float64]) */
}

def @func_4065() -> (Tensor[(10, 15, 15), float32], Tensor[(8, 14, 12), bool], Tensor[(576), float32], Tensor[(10, 15, 15), float32], Tensor[(11, 7, 8), bool], Tensor[(616), int64]) {
  %620 = cast(-8.10569f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %621 = cast(meta[relay.Constant][50] /* ty=Tensor[(10, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(10, 15, 15), float32] */;
  %622 = cast(meta[relay.Constant][51] /* ty=Tensor[(576), float32] */, dtype="float32") /* ty=Tensor[(576), float32] */;
  %623 = reshape(%622, newshape=[6, 12, 8]) /* ty=Tensor[(6, 12, 8), float32] */;
  %624 = @func_2300(%623) /* ty=(Tensor[(6, 12, 8), float32], Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(1, 1584), float64]) */;
  %625 = cast(meta[relay.Constant][50] /* ty=Tensor[(10, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(10, 15, 15), float32] */;
  %626 = cast(meta[relay.Constant][52] /* ty=Tensor[(616), int64] */, dtype="int64") /* ty=Tensor[(616), int64] */;
  %627 = reshape(%626, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), int64] */;
  %628 = @func_3608(%627) /* ty=(Tensor[(11, 7, 8), bool],) */;
  %629 = add(%620, %621) /* ty=Tensor[(10, 15, 15), float32] */;
  %630 = %624.1;
  %631 = asin(%625) /* ty=Tensor[(10, 15, 15), float32] */;
  %632 = %628.0;
  (%629, %630, meta[relay.Constant][51] /* ty=Tensor[(576), float32] */, %631, %632, meta[relay.Constant][52] /* ty=Tensor[(616), int64] */)
}

def @func_5909() -> (Tensor[(8, 14, 12), float64], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32], Tensor[(2912), float64]) {
  %633 = cast(meta[relay.Constant][53] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %634 = cast(meta[relay.Constant][53] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %635 = reshape(%633, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
  %636 = reshape(%634, newshape=[11, 16, 9]) /* ty=Tensor[(11, 16, 9), uint32] */;
  %637 = @func_5175() /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2912), float32], Tensor[(5, 4, 10), float64]) */;
  %638 = %637.1;
  %639 = cast(%638, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %640 = @func_5221() /* ty=Tensor[(8, 14, 12), float64] */;
  %641 = @func_212(%635, %636) /* ty=Tensor[(11, 16, 9), uint32] */;
  %642 = log10(%639) /* ty=Tensor[(2912), float64] */;
  (%640, %641, meta[relay.Constant][53] /* ty=Tensor[(1584), uint32] */, %642)
}

def @main() -> (Tensor[(15, 16, 2), float64],) {
  %643 = @func_2603() /* ty=Tensor[(15, 16, 2), float32] */;
  %644 = cast(%643, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
  %645 = sigmoid(%644) /* ty=Tensor[(15, 16, 2), float64] */;
  (%645,)
}

def @func_6080() -> (Tensor[(5, 4, 10), float32], Tensor[(4, 15, 2), float32], float32) {
  @func_6078() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(4, 15, 2), float32], float32) */
}

def @func_2775() -> Tensor[(8, 14, 12), float64] {
  %646 = fn () -> Tensor[(8, 14, 12), float64] {
    @func_2158() /* ty=Tensor[(8, 14, 12), float64] */
  };
  %646() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_3520() -> (Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(120), float32], Tensor[(8, 14, 12), uint8]) {
  %647 = cast(meta[relay.Constant][54] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %648 = reshape(%647, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %649 = @func_1584(%648) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(11, 16, 9), uint32], Tensor[(120), float32], Tensor[(672), uint16], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */;
  %650 = @func_3474() /* ty=Tensor[(8, 14, 12), bool] */;
  %651 = cast(%650, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  %652 = reshape(%651, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float64] */;
  %653 = @func_3225(%652) /* ty=(Tensor[(8, 14, 12), uint8], Tensor[(8, 14, 12), int32]) */;
  %654 = %649.5;
  %655 = %653.0;
  (%650, %654, meta[relay.Constant][54] /* ty=Tensor[(120), float32] */, %655)
}

def @func_1484() -> (Tensor[(8, 14, 12), bool],) {
  @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */
}

def @func_5497(%var_5484: Tensor[(3, 88), float64], %var_5487: Tensor[(60, 2), float32], %var_5488: Tensor[(1584), uint32]) -> (Tensor[(11, 7, 8), bool], Tensor[(11, 12, 2), float64], Tensor[(3, 88), float64], Tensor[(1584), uint32], Tensor[(60, 2), float32], Tensor[(1584), uint32]) {
  %656 = @func_4065() /* ty=(Tensor[(10, 15, 15), float32], Tensor[(8, 14, 12), bool], Tensor[(576), float32], Tensor[(10, 15, 15), float32], Tensor[(11, 7, 8), bool], Tensor[(616), int64]) */;
  %657 = cast(%var_5484, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
  %658 = cast(%var_5484, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
  %659 = reshape(%657, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %660 = reshape(%658, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float64] */;
  %661 = @func_3443(%659, %660) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(8, 14, 12), bool]) */;
  %662 = cast(%var_5487, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %663 = cast(%var_5488, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %664 = reshape(%662, newshape=[3, 40]) /* ty=Tensor[(3, 40), float32] */;
  %665 = reshape(%663, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %666 = @func_5018(%664, %665) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(3, 40), float32], Tensor[(1584), uint32]) */;
  %667 = %656.4;
  %668 = %661.0;
  %669 = %666.3;
  (%667, %668, %var_5484, %669, %var_5487, %var_5488)
}

def @func_700(%var_698: Tensor[(11, 11, 5), uint16], %var_699: Tensor[(324), uint32]) -> (Tensor[(11, 11, 5), bool], Tensor[(9, 3, 12), bool], Tensor[(324), uint32]) {
  @func_696(%var_698, %var_699) /* ty=(Tensor[(11, 11, 5), bool], Tensor[(9, 3, 12), bool], Tensor[(324), uint32]) */
}

def @func_1374(%var_1371: Tensor[(60, 2), float32], %var_1372: Tensor[(1584), uint32], %var_1373: Tensor[(9, 4), float32]) -> (Tensor[(8, 14, 12), float64], Tensor[(396, 4), bool], Tensor[(60, 2), float32], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(9, 4), float32]) {
  %682 = fn (%var_1358: Tensor[(60, 2), float32], %var_1359: Tensor[(1584), uint32], %var_1367: Tensor[(9, 4), float32]) -> (Tensor[(8, 14, 12), float64], Tensor[(396, 4), bool], Tensor[(60, 2), float32], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(9, 4), float32]) {
    %670 = cast(%var_1358, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
    %671 = cast(%var_1359, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %672 = cast(%var_1359, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %673 = reshape(%670, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
    %674 = reshape(%671, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
    %675 = reshape(%672, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
    %676 = @func_1284(%673, %674, %675) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
    %677 = cast(%var_1367, dtype="float32") /* ty=Tensor[(9, 4), float32] */;
    %678 = reshape(%677, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), float32] */;
    %679 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
    %680 = %676.3;
    %681 = @func_93(%678) /* ty=Tensor[(?, 6, 6), int8] */;
    (%679, %680, %var_1358, %var_1359, %681, %var_1367)
  };
  %682(%var_1371, %var_1372, %var_1373) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(396, 4), bool], Tensor[(60, 2), float32], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(9, 4), float32]) */
}

def @func_1399() -> Tensor[(8, 14, 12), bool] {
  %688 = fn () -> Tensor[(8, 14, 12), bool] {
    %683 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
    %684 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 14, 12), float64] */, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
    %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
    %686 = cast(%683, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
    %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%686, %687) /* ty=Tensor[(8, 14, 12), bool] */
  };
  %688() /* ty=Tensor[(8, 14, 12), bool] */
}

def @func_3869() -> Tensor[(8, 14, 12), bool] {
  %689 = fn () -> Tensor[(8, 14, 12), bool] {
    @func_2106() /* ty=Tensor[(8, 14, 12), bool] */
  };
  %689() /* ty=Tensor[(8, 14, 12), bool] */
}

def @func_564(%var_562: Tensor[(8, 8, 5), uint64]) -> Tensor[(8, 8, 5), uint64] {
  @func_561(%var_562) /* ty=Tensor[(8, 8, 5), uint64] */
}

def @func_6361(%var_6358: Tensor[(1, 15, 9), float32]) -> Tensor[(1, 15, 9), float32] {
  %690 = cast(%var_6358, dtype="float32") /* ty=Tensor[(1, 15, 9), float32] */;
  cosh(%690) /* ty=Tensor[(1, 15, 9), float32] */
}

def @func_6376() -> Tensor[(8, 14, 12), float64] {
  %691 = fn () -> Tensor[(8, 14, 12), float64] {
    @func_2774() /* ty=Tensor[(8, 14, 12), float64] */
  };
  %691() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_1288(%var_1285: Tensor[(6, 20), float32], %var_1286: Tensor[(396, 4), uint32], %var_1287: Tensor[(396, 4), uint32]) -> (Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) {
  %715 = fn (%var_1228: Tensor[(6, 20), float32], %var_1231: Tensor[(396, 4), uint32], %var_1275: Tensor[(396, 4), uint32]) -> (Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) {
    %692 = cast(%var_1228, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
    %693 = cast(meta[relay.Constant][56] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %694 = reshape(%692, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
    %695 = reshape(%693, newshape=[672]) /* ty=Tensor[(672), uint16] */;
    %696 = @func_1065(%694, %695) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
    %697 = %696.3;
    %698 = cast(%var_1231, dtype="bool") /* ty=Tensor[(396, 4), bool] */;
    %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(2), int32] */;
    %700 = cast(%697, dtype="bool") /* ty=Tensor[(396, 4), bool] */;
    %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %702 = cast(%var_1228, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
    %703 = cast(meta[relay.Constant][56] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %704 = reshape(%702, newshape=[5, 2, 12]) /* ty=Tensor[(5, 2, 12), float32] */;
    %705 = reshape(%703, newshape=[672]) /* ty=Tensor[(672), uint16] */;
    %706 = @func_1065(%704, %705) /* ty=(Tensor[(5, 2, 12), float32], Tensor[(11, 16, 9), uint32], Tensor[(672), uint16], Tensor[(396, 4), uint32]) */;
    %707 = cast(%var_1275, dtype="float64") /* ty=Tensor[(396, 4), float64] */;
    %708 = shape_of(%697, dtype="int32") /* ty=Tensor[(2), int32] */;
    %709 = cast(%697, dtype="float64") /* ty=Tensor[(396, 4), float64] */;
    %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %711 = @func_897() /* ty=Tensor[(8, 14, 12), float64] */;
    %712 = logical_or(%700, %701) /* ty=Tensor[(396, 4), bool] */;
    %713 = %706.3;
    %714 = floor_divide(%709, %710) /* ty=Tensor[(396, 4), float64] */;
    (%711, %var_1228, meta[relay.Constant][56] /* ty=Tensor[(672), uint16] */, %712, %713, %714)
  };
  %715(%var_1285, %var_1286, %var_1287) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */
}

def @func_4653(%var_4650: Tensor[(120), float32], %var_4651: Tensor[(320), uint64], %var_4652: Tensor[(396, 4), uint32]) -> (Tensor[(8, 14, 12), bool], Tensor[(120), float32], Tensor[(320), uint64], Tensor[(396, 4), bool], Tensor[(8, 14, 12), float64], Tensor[(1584), uint32], Tensor[(36), float32]) {
  @func_4648(%var_4650, %var_4651, %var_4652) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(120), float32], Tensor[(320), uint64], Tensor[(396, 4), bool], Tensor[(8, 14, 12), float64], Tensor[(1584), uint32], Tensor[(36), float32]) */
}

def @func_5176() -> (Tensor[(8, 14, 12), float64], Tensor[(2912), float32], Tensor[(5, 4, 10), float64]) {
  %724 = fn () -> (Tensor[(8, 14, 12), float64], Tensor[(2912), float32], Tensor[(5, 4, 10), float64]) {
    %716 = @func_3634() /* ty=(Tensor[(8, 14, 12), float64],) */;
    %717 = cast(meta[relay.Constant][57] /* ty=Tensor[(2912), float32] */, dtype="float32") /* ty=Tensor[(2912), float32] */;
    %718 = reshape(%717, newshape=[2912]) /* ty=Tensor[(2912), float32] */;
    %719 = @func_4349(%718) /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), bool], Tensor[(2912), float32]) */;
    %720 = %719.0;
    %721 = cast(%720, dtype="float64") /* ty=Tensor[(5, 4, 10), float64] */;
    %722 = %716.0;
    %723 = asinh(%721) /* ty=Tensor[(5, 4, 10), float64] */;
    (%722, meta[relay.Constant][57] /* ty=Tensor[(2912), float32] */, %723)
  };
  %724() /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2912), float32], Tensor[(5, 4, 10), float64]) */
}

def @func_1528(%var_1525: Tensor[(8, 14, 12), float64], %var_1526: Tensor[(672, 1), uint16], %var_1527: Tensor[(36, 1), float32]) -> (Tensor[(8, 14, 12), int64], Tensor[(1584), uint32], Tensor[(672, 1), uint16], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(36, 1), float32]) {
  @func_1523(%var_1525, %var_1526, %var_1527) /* ty=(Tensor[(8, 14, 12), int64], Tensor[(1584), uint32], Tensor[(672, 1), uint16], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(36, 1), float32]) */
}

def @func_3661() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), float64]) {
  %725 = @func_2750() /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), float64], Tensor[(8, 14, 12), bool]) */;
  %726 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %727 = %725.2;
  %728 = %726.0;
  %729 = @func_2158() /* ty=Tensor[(8, 14, 12), float64] */;
  (%727, %728, %729)
}

def @func_3522() -> (Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(120), float32], Tensor[(8, 14, 12), uint8]) {
  @func_3520() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(120), float32], Tensor[(8, 14, 12), uint8]) */
}

def @func_355(%var_354: Tensor[(9, 3, 12), uint32]) -> (Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) {
  %740 = fn (%var_332: Tensor[(9, 3, 12), uint32]) -> (Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) {
    %730 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 3, 12), uint32] */, dtype="bool") /* ty=Tensor[(9, 3, 12), bool] */;
    %731 = shape_of(%var_332, dtype="int32") /* ty=Tensor[(3), int32] */;
    %732 = cast(%var_332, dtype="bool") /* ty=Tensor[(9, 3, 12), bool] */;
    %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %734 = cast(%var_332, dtype="float64") /* ty=Tensor[(9, 3, 12), float64] */;
    %735 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(9, 3, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %736 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 3, 12), uint32] */, dtype="float64") /* ty=Tensor[(9, 3, 12), float64] */;
    %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %738 = equal(%732, %733) /* ty=Tensor[(9, 3, 12), bool] */;
    %739 = multiply(%736, %737) /* ty=Tensor[(9, 3, 12), float64] */;
    (%738, %739)
  };
  %740(%var_354) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */
}

def @func_2511() -> (Tensor[(5, 4, 10), float32],) {
  %743 = fn () -> (Tensor[(5, 4, 10), float32],) {
    %741 = cast(meta[relay.Constant][59] /* ty=Tensor[(5, 4, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 4, 10), float32] */;
    %742 = sin(%741) /* ty=Tensor[(5, 4, 10), float32] */;
    (%742,)
  };
  %743() /* ty=(Tensor[(5, 4, 10), float32],) */
}

def @func_2348(%var_2346: Tensor[(1, 13, 9), float64], %var_2347: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), float64], Tensor[(3, 13, 9), float64]) {
  %749 = fn (%var_2316: Tensor[(1, 13, 9), float64], %var_2317: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), float64], Tensor[(3, 13, 9), float64]) {
    %744 = cast(%var_2316, dtype="float64") /* ty=Tensor[(1, 13, 9), float64] */;
    %745 = cast(%var_2317, dtype="float64") /* ty=Tensor[(3, 13, 9), float64] */;
    %746 = cast(%var_2317, dtype="float64") /* ty=Tensor[(3, 13, 9), float64] */;
    %747 = mod(%744, %745) /* ty=Tensor[(3, 13, 9), float64] */;
    %748 = acos(%746) /* ty=Tensor[(3, 13, 9), float64] */;
    (%747, %748)
  };
  %749(%var_2346, %var_2347) /* ty=(Tensor[(3, 13, 9), float64], Tensor[(3, 13, 9), float64]) */
}

def @func_5406(%var_5402: Tensor[(14, 1, 16), float32], %var_5403: Tensor[(4, 728), float32], %var_5404: Tensor[(324), uint32], %var_5405: Tensor[(672), uint16]) -> (Tensor[(8, 14, 12), bool], Tensor[(4, 728), float32], Tensor[(324), uint32], Tensor[(320), uint64], Tensor[(8, 14, 12), float64], Tensor[(1, 120), float32], Tensor[(1584), uint32], Tensor[(14, 84, 16), int16], Tensor[(?, 6, 6), int8], Tensor[(84, 672), float64], Tensor[(84, 36), bool], Tensor[(320), uint64]) {
  %793 = fn (%var_5307: Tensor[(14, 1, 16), float32], %var_5340: Tensor[(4, 728), float32], %var_5346: Tensor[(324), uint32], %var_5367: Tensor[(672), uint16]) -> (Tensor[(8, 14, 12), bool], Tensor[(4, 728), float32], Tensor[(324), uint32], Tensor[(320), uint64], Tensor[(8, 14, 12), float64], Tensor[(1, 120), float32], Tensor[(1584), uint32], Tensor[(14, 84, 16), int16], Tensor[(?, 6, 6), int8], Tensor[(84, 672), float64], Tensor[(84, 36), bool], Tensor[(320), uint64]) {
    %750 = cast(%var_5340, dtype="float32") /* ty=Tensor[(4, 728), float32] */;
    %751 = reshape(%750, newshape=[2912]) /* ty=Tensor[(2912), float32] */;
    %752 = @func_4349(%751) /* ty=(Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), bool], Tensor[(2912), float32]) */;
    %753 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 120), float32] */, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
    %754 = cast(meta[relay.Constant][62] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %755 = cast(meta[relay.Constant][62] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %756 = reshape(%753, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
    %757 = reshape(%754, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
    %758 = reshape(%755, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
    %759 = @func_1284(%756, %757, %758) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
    %760 = cast(%var_5307, dtype="float32") /* ty=Tensor[(14, 1, 16), float32] */;
    %761 = asin(%760) /* ty=Tensor[(14, 1, 16), float32] */;
    %762 = cast(%var_5346, dtype="uint32") /* ty=Tensor[(324), uint32] */;
    %763 = cast(meta[relay.Constant][60] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %764 = reshape(%762, newshape=[324]) /* ty=Tensor[(324), uint32] */;
    %765 = reshape(%763, newshape=[320]) /* ty=Tensor[(320), uint64] */;
    %766 = @func_5115(%764, %765) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(16, 14, 2), bool], Tensor[(448), float64], Tensor[(324), uint32], Tensor[(8, 14, 12), bool], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(8, 14, 12), bool], Tensor[(84, 1), float64], Tensor[(14, 1), float64], Tensor[(320), uint64], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float64]) */;
    %767 = %766.9;
    %768 = cast(%761, dtype="int16") /* ty=Tensor[(14, 1, 16), int16] */;
    %769 = cast(%767, dtype="int16") /* ty=Tensor[(84, 1), int16] */;
    %770 = %759.0;
    %771 = cast(%770, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
    %772 = cast(%var_5367, dtype="uint16") /* ty=Tensor[(672), uint16] */;
    %773 = cast(meta[relay.Constant][63] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
    %774 = reshape(%771, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float64] */;
    %775 = reshape(%772, newshape=[672, 1]) /* ty=Tensor[(672, 1), uint16] */;
    %776 = reshape(%773, newshape=[36, 1]) /* ty=Tensor[(36, 1), float32] */;
    %777 = @func_1523(%774, %775, %776) /* ty=(Tensor[(8, 14, 12), int64], Tensor[(1584), uint32], Tensor[(672, 1), uint16], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(36, 1), float32]) */;
    %778 = cast(%var_5367, dtype="float64") /* ty=Tensor[(672), float64] */;
    %779 = cast(%767, dtype="float64") /* ty=Tensor[(84, 1), float64] */;
    %780 = cast(meta[relay.Constant][63] /* ty=Tensor[(36), float32] */, dtype="bool") /* ty=Tensor[(36), bool] */;
    %781 = cast(%767, dtype="bool") /* ty=Tensor[(84, 1), bool] */;
    %782 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 120), float32] */, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
    %783 = cast(meta[relay.Constant][60] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %784 = reshape(%782, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
    %785 = reshape(%783, newshape=[320]) /* ty=Tensor[(320), uint64] */;
    %786 = @func_3416(%784, %785) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(396, 4), uint32], Tensor[(60, 2), float32], Tensor[(672), uint16], Tensor[(320), uint64], Tensor[(320), uint64]) */;
    %787 = %752.1;
    %788 = right_shift(%768, %769) /* ty=Tensor[(14, 84, 16), int16] */;
    %789 = %777.4;
    %790 = floor_mod(%778, %779) /* ty=Tensor[(84, 672), float64] */;
    %791 = greater_equal(%780, %781) /* ty=Tensor[(84, 36), bool] */;
    %792 = %786.5;
    (%787, %var_5340, %var_5346, meta[relay.Constant][60] /* ty=Tensor[(320), uint64] */, %770, meta[relay.Constant][61] /* ty=Tensor[(1, 120), float32] */, meta[relay.Constant][62] /* ty=Tensor[(1584), uint32] */, %788, %789, %790, %791, %792)
  };
  %793(%var_5402, %var_5403, %var_5404, %var_5405) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(4, 728), float32], Tensor[(324), uint32], Tensor[(320), uint64], Tensor[(8, 14, 12), float64], Tensor[(1, 120), float32], Tensor[(1584), uint32], Tensor[(14, 84, 16), int16], Tensor[(?, 6, 6), int8], Tensor[(84, 672), float64], Tensor[(84, 36), bool], Tensor[(320), uint64]) */
}

def @func_2028(%var_2026: Tensor[(14), float64], %var_2027: Tensor[(14, 15, 4), float32]) -> (Tensor[(320), uint64], Tensor[(14), float64], Tensor[(320), uint64], Tensor[(14, 15, 4), uint64], Tensor[(2, 6, 7), bool]) {
  %813 = fn (%var_2010: Tensor[(14), float64], %var_2014: Tensor[(14, 15, 4), float32]) -> (Tensor[(320), uint64], Tensor[(14), float64], Tensor[(320), uint64], Tensor[(14, 15, 4), uint64], Tensor[(2, 6, 7), bool]) {
    %794 = cast(%var_2010, dtype="float64") /* ty=Tensor[(14), float64] */;
    %795 = cast(meta[relay.Constant][64] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %796 = reshape(%794, newshape=[14]) /* ty=Tensor[(14), float64] */;
    %797 = reshape(%795, newshape=[320]) /* ty=Tensor[(320), uint64] */;
    %798 = @func_1465(%796, %797) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84, 1), float64], Tensor[(320), uint64]) */;
    %799 = cast(meta[relay.Constant][65] /* ty=Tensor[(14, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 15, 4), float32] */;
    %800 = log10(%799) /* ty=Tensor[(14, 15, 4), float32] */;
    %801 = cast(%var_2014, dtype="uint64") /* ty=Tensor[(14, 15, 4), uint64] */;
    %802 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
    %803 = cast(%800, dtype="uint64") /* ty=Tensor[(14, 15, 4), uint64] */;
    %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %805 = cast(%var_2010, dtype="float64") /* ty=Tensor[(14), float64] */;
    %806 = cast(meta[relay.Constant][64] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %807 = reshape(%805, newshape=[14]) /* ty=Tensor[(14), float64] */;
    %808 = reshape(%806, newshape=[320]) /* ty=Tensor[(320), uint64] */;
    %809 = @func_1465(%807, %808) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(2, 6, 7), bool], Tensor[(14), float64], Tensor[(84, 1), float64], Tensor[(320), uint64]) */;
    %810 = %798.4;
    %811 = bitwise_xor(%803, %804) /* ty=Tensor[(14, 15, 4), uint64] */;
    %812 = %809.1;
    (%810, %var_2010, meta[relay.Constant][64] /* ty=Tensor[(320), uint64] */, %811, %812)
  };
  %813(%var_2026, %var_2027) /* ty=(Tensor[(320), uint64], Tensor[(14), float64], Tensor[(320), uint64], Tensor[(14, 15, 4), uint64], Tensor[(2, 6, 7), bool]) */
}

def @func_3796() -> Tensor[(8, 14, 12), float64] {
  %814 = fn () -> Tensor[(8, 14, 12), float64] {
    @func_2774() /* ty=Tensor[(8, 14, 12), float64] */
  };
  %814() /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_4959(%var_4957: Tensor[(10, 10, 8), float64], %var_4958: Tensor[(10, 10, 8), float64]) -> (Tensor[(10, 10, 8), uint64], Tensor[(10, 10, 8), float64], Tensor[(8, 14, 12), float32], Tensor[(8, 14, 12), bool]) {
  %835 = fn (%var_4890: Tensor[(10, 10, 8), float64], %var_4912: Tensor[(10, 10, 8), float64]) -> (Tensor[(10, 10, 8), uint64], Tensor[(10, 10, 8), float64], Tensor[(8, 14, 12), float32], Tensor[(8, 14, 12), bool]) {
    %815 = cast(%var_4890, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
    %816 = rsqrt(%815) /* ty=Tensor[(10, 10, 8), float64] */;
    %817 = cast(%816, dtype="float32") /* ty=Tensor[(10, 10, 8), float32] */;
    %818 = shape_of(%var_4890, dtype="int32") /* ty=Tensor[(3), int32] */;
    %819 = cast(%var_4890, dtype="float32") /* ty=Tensor[(10, 10, 8), float32] */;
    %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %821 = divide(%819, %820) /* ty=Tensor[(10, 10, 8), float32] */;
    %822 = cast(%821, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
    %823 = log(%822) /* ty=Tensor[(10, 10, 8), float64] */;
    %824 = cast(%var_4912, dtype="uint64") /* ty=Tensor[(10, 10, 8), uint64] */;
    %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
    %826 = cast(%823, dtype="uint64") /* ty=Tensor[(10, 10, 8), uint64] */;
    %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %828 = cast(%var_4912, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
    %829 = @func_3591() /* ty=(Tensor[(8, 14, 12), float32],) */;
    %830 = @func_2172() /* ty=(Tensor[(8, 14, 12), bool],) */;
    %831 = bitwise_xor(%826, %827) /* ty=Tensor[(10, 10, 8), uint64] */;
    %832 = sinh(%828) /* ty=Tensor[(10, 10, 8), float64] */;
    %833 = %829.0;
    %834 = %830.0;
    (%831, %832, %833, %834)
  };
  %835(%var_4957, %var_4958) /* ty=(Tensor[(10, 10, 8), uint64], Tensor[(10, 10, 8), float64], Tensor[(8, 14, 12), float32], Tensor[(8, 14, 12), bool]) */
}

def @func_4181() -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  @func_4179() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */
}

def @func_216(%var_214: Tensor[(11, 16, 9), uint32], %var_215: Tensor[(11, 16, 9), uint32]) -> Tensor[(11, 16, 9), uint32] {
  @func_212(%var_214, %var_215) /* ty=Tensor[(11, 16, 9), uint32] */
}

def @func_876(%var_872: Tensor[(132, 12), uint32]) -> (Tensor[(10, 2, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint32], Tensor[(9, 3, 12), float32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(6, 8, 14), uint16], Tensor[(672), uint16], Tensor[(132, 12), uint32]) {
  %836 = cast(meta[relay.Constant][66] /* ty=Tensor[(10, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(10, 2, 7), float64] */;
  %837 = cast(meta[relay.Constant][67] /* ty=Tensor[(324), uint32] */, dtype="uint32") /* ty=Tensor[(324), uint32] */;
  %838 = reshape(%837, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %839 = @func_353(%838) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %840 = %839.1;
  %841 = cast(%840, dtype="uint32") /* ty=Tensor[(9, 3, 12), uint32] */;
  %842 = reshape(%841, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint32] */;
  %843 = @func_353(%842) /* ty=(Tensor[(9, 3, 12), bool], Tensor[(9, 3, 12), float64]) */;
  %844 = %843.0;
  %845 = cast(%844, dtype="float32") /* ty=Tensor[(9, 3, 12), float32] */;
  %846 = cast(meta[relay.Constant][68] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
  %847 = reshape(%846, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
  %848 = cast(meta[relay.Constant][69] /* ty=Tensor[(672), uint16] */, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %849 = cast(%var_872, dtype="uint32") /* ty=Tensor[(132, 12), uint32] */;
  %850 = reshape(%848, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), uint16] */;
  %851 = reshape(%849, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
  %852 = @func_616(%850, %851) /* ty=(Tensor[(6, 8, 14), uint16], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32]) */;
  %853 = cos(%836) /* ty=Tensor[(10, 2, 7), float64] */;
  %854 = tan(%845) /* ty=Tensor[(9, 3, 12), float32] */;
  %855 = @func_561(%847) /* ty=Tensor[(8, 8, 5), uint64] */;
  %856 = %852.0;
  (%853, %840, meta[relay.Constant][67] /* ty=Tensor[(324), uint32] */, %854, %855, meta[relay.Constant][68] /* ty=Tensor[(320), uint64] */, %856, meta[relay.Constant][69] /* ty=Tensor[(672), uint16] */, %var_872)
}

def @func_3924() -> (Tensor[(8, 14, 12), float64],) {
  %857 = @func_2793() /* ty=Tensor[(8, 14, 12), float64] */;
  (%857,)
}

def @func_1924(%var_1922: Tensor[(8, 14, 12), bool]) -> (Tensor[(8, 14, 12), int16], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  @func_1921(%var_1922) /* ty=(Tensor[(8, 14, 12), int16], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */
}

def @func_897() -> Tensor[(8, 14, 12), float64] {
  %858 = cast(meta[relay.Constant][70] /* ty=Tensor[(8, 14, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
  sin(%858) /* ty=Tensor[(8, 14, 12), float64] */
}

def @func_1999(%var_1997: Tensor[(36), float32], %var_1998: Tensor[(1584), float64]) -> (Tensor[(8, 14, 12), bool], Tensor[(9, 4), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(1584), int64], Tensor[(8, 14, 12), bool], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(1584), bool], Tensor[(8, 8, 5), uint64], Tensor[(8, 14, 12), bool]) {
  %893 = fn (%var_1937: Tensor[(36), float32], %var_1971: Tensor[(1584), float64]) -> (Tensor[(8, 14, 12), bool], Tensor[(9, 4), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(1584), int64], Tensor[(8, 14, 12), bool], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(1584), bool], Tensor[(8, 8, 5), uint64], Tensor[(8, 14, 12), bool]) {
    %859 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
    %860 = cast(meta[relay.Constant][71] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %861 = cast(meta[relay.Constant][72] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %862 = cast(%var_1937, dtype="float32") /* ty=Tensor[(36), float32] */;
    %863 = reshape(%860, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
    %864 = reshape(%861, newshape=[1584]) /* ty=Tensor[(1584), uint32] */;
    %865 = reshape(%862, newshape=[9, 4]) /* ty=Tensor[(9, 4), float32] */;
    %866 = @func_1370(%863, %864, %865) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(396, 4), bool], Tensor[(60, 2), float32], Tensor[(1584), uint32], Tensor[(?, 6, 6), int8], Tensor[(9, 4), float32]) */;
    %867 = cast(meta[relay.Constant][72] /* ty=Tensor[(1584), uint32] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
    %868 = sinh(%867) /* ty=Tensor[(1584), float64] */;
    %869 = cast(%var_1971, dtype="int64") /* ty=Tensor[(1584), int64] */;
    %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(1), int32] */;
    %871 = cast(%868, dtype="int64") /* ty=Tensor[(1584), int64] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?), int64] */;
    %873 = %859.0;
    %874 = cast(%873, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
    %875 = reshape(%874, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), bool] */;
    %876 = @func_1921(%875) /* ty=(Tensor[(8, 14, 12), int16], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
    %877 = cast(meta[relay.Constant][73] /* ty=Tensor[(320), uint64] */, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %878 = reshape(%877, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
    %879 = cast(meta[relay.Constant][74] /* ty=Tensor[(1584), float64] */, dtype="bool") /* ty=Tensor[(1584), bool] */;
    %880 = shape_of(%var_1971, dtype="int32") /* ty=Tensor[(1), int32] */;
    %881 = cast(%var_1971, dtype="bool") /* ty=Tensor[(1584), bool] */;
    %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?), bool] */;
    %883 = @func_561(%878) /* ty=Tensor[(8, 8, 5), uint64] */;
    %884 = cast(%883, dtype="uint64") /* ty=Tensor[(8, 8, 5), uint64] */;
    %885 = reshape(%884, newshape=[8, 8, 5]) /* ty=Tensor[(8, 8, 5), uint64] */;
    %886 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
    %887 = %866.5;
    %888 = bitwise_and(%871, %872) /* ty=Tensor[(1584), int64] */;
    %889 = %876.2;
    %890 = equal(%881, %882) /* ty=Tensor[(1584), bool] */;
    %891 = @func_561(%885) /* ty=Tensor[(8, 8, 5), uint64] */;
    %892 = %886.0;
    (%873, %887, meta[relay.Constant][71] /* ty=Tensor[(120), float32] */, %var_1937, %888, %889, %883, meta[relay.Constant][73] /* ty=Tensor[(320), uint64] */, %890, %891, %892)
  };
  %893(%var_1997, %var_1998) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(9, 4), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(1584), int64], Tensor[(8, 14, 12), bool], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(1584), bool], Tensor[(8, 8, 5), uint64], Tensor[(8, 14, 12), bool]) */
}

def @func_3611(%var_3609: Tensor[(11, 7, 8), int64]) -> (Tensor[(11, 7, 8), bool],) {
  @func_3608(%var_3609) /* ty=(Tensor[(11, 7, 8), bool],) */
}

def @func_4771(%var_4769: Tensor[(1344), float64], %var_4770: Tensor[(351), float64]) -> (Tensor[(5, 4, 10), float32], Tensor[(14, 11, 8), bool], Tensor[(1232), bool], Tensor[(8, 14, 12), int32], Tensor[(1344), float64], Tensor[(3, 13, 9), float64], Tensor[(117), float64], Tensor[(351), float64]) {
  @func_4767(%var_4769, %var_4770) /* ty=(Tensor[(5, 4, 10), float32], Tensor[(14, 11, 8), bool], Tensor[(1232), bool], Tensor[(8, 14, 12), int32], Tensor[(1344), float64], Tensor[(3, 13, 9), float64], Tensor[(117), float64], Tensor[(351), float64]) */
}

def @func_4329(%var_4325: Tensor[(1584), uint32], %var_4326: Tensor[(320), uint64], %var_4327: Tensor[(448), float64], %var_4328: Tensor[(36), float32]) -> (Tensor[(120), float32], Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64], Tensor[(8, 14, 12), float64], Tensor[(16, 14, 2), float64], Tensor[(448), float64], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) {
  %912 = fn (%var_4253: Tensor[(1584), uint32], %var_4254: Tensor[(320), uint64], %var_4291: Tensor[(448), float64], %var_4298: Tensor[(36), float32]) -> (Tensor[(120), float32], Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64], Tensor[(8, 14, 12), float64], Tensor[(16, 14, 2), float64], Tensor[(448), float64], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) {
    %894 = cast(meta[relay.Constant][75] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %895 = cast(%var_4253, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
    %896 = cast(%var_4254, dtype="uint64") /* ty=Tensor[(320), uint64] */;
    %897 = reshape(%894, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %898 = reshape(%895, newshape=[12, 132]) /* ty=Tensor[(12, 132), uint32] */;
    %899 = reshape(%896, newshape=[320]) /* ty=Tensor[(320), uint64] */;
    %900 = @func_3328(%897, %898, %899) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(120), float32], Tensor[(12, 132), uint32], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(8, 14, 12), bool]) */;
    %901 = @func_3520() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(36), float32], Tensor[(120), float32], Tensor[(8, 14, 12), uint8]) */;
    %902 = %901.0;
    %903 = cast(%902, dtype="float64") /* ty=Tensor[(8, 14, 12), float64] */;
    %904 = cast(%var_4291, dtype="float64") /* ty=Tensor[(448), float64] */;
    %905 = reshape(%904, newshape=[16, 14, 2]) /* ty=Tensor[(16, 14, 2), float64] */;
    %906 = cast(%var_4298, dtype="float32") /* ty=Tensor[(36), float32] */;
    %907 = reshape(%906, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), float32] */;
    %908 = %900.2;
    %909 = acosh(%903) /* ty=Tensor[(8, 14, 12), float64] */;
    %910 = @func_3977(%905) /* ty=Tensor[(16, 14, 2), float64] */;
    %911 = @func_93(%907) /* ty=Tensor[(?, 6, 6), int8] */;
    (%908, meta[relay.Constant][75] /* ty=Tensor[(120), float32] */, %var_4253, %var_4254, %909, %910, %var_4291, %911, %var_4298)
  };
  %912(%var_4325, %var_4326, %var_4327, %var_4328) /* ty=(Tensor[(120), float32], Tensor[(120), float32], Tensor[(1584), uint32], Tensor[(320), uint64], Tensor[(8, 14, 12), float64], Tensor[(16, 14, 2), float64], Tensor[(448), float64], Tensor[(?, 6, 6), int8], Tensor[(36), float32]) */
}

def @func_5502(%var_5499: Tensor[(3, 88), float64], %var_5500: Tensor[(60, 2), float32], %var_5501: Tensor[(1584), uint32]) -> (Tensor[(11, 7, 8), bool], Tensor[(11, 12, 2), float64], Tensor[(3, 88), float64], Tensor[(1584), uint32], Tensor[(60, 2), float32], Tensor[(1584), uint32]) {
  @func_5497(%var_5499, %var_5500, %var_5501) /* ty=(Tensor[(11, 7, 8), bool], Tensor[(11, 12, 2), float64], Tensor[(3, 88), float64], Tensor[(1584), uint32], Tensor[(60, 2), float32], Tensor[(1584), uint32]) */
}

def @func_4510(%var_4501: Tensor[(5, 4, 10), float32]) -> (Tensor[(5, 4, 10), uint64],) {
  %913 = @func_2510() /* ty=(Tensor[(5, 4, 10), float32],) */;
  %914 = %913.0;
  %915 = cast(%var_4501, dtype="uint64") /* ty=Tensor[(5, 4, 10), uint64] */;
  %916 = shape_of(%914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%914, dtype="uint64") /* ty=Tensor[(5, 4, 10), uint64] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %919 = minimum(%917, %918) /* ty=Tensor[(5, 4, 10), uint64] */;
  (%919,)
}

def @func_2586(%var_2584: Tensor[(84), float64], %var_2585: Tensor[(4, 80), uint64]) -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool], Tensor[(2, 6, 7), bool], Tensor[(1, 14), float64], Tensor[(84), float64], Tensor[(4, 80), float32]) {
  %935 = fn (%var_2555: Tensor[(84), float64], %var_2556: Tensor[(4, 80), uint64]) -> (Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool], Tensor[(2, 6, 7), bool], Tensor[(1, 14), float64], Tensor[(84), float64], Tensor[(4, 80), float32]) {
    %920 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
    %921 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 14), float64] */, dtype="float64") /* ty=Tensor[(1, 14), float64] */;
    %922 = cast(%var_2555, dtype="float64") /* ty=Tensor[(84), float64] */;
    %923 = cast(%var_2556, dtype="uint64") /* ty=Tensor[(4, 80), uint64] */;
    %924 = reshape(%921, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), float64] */;
    %925 = reshape(%922, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), float64] */;
    %926 = reshape(%923, newshape=[320, 1]) /* ty=Tensor[(320, 1), uint64] */;
    %927 = @func_1010(%924, %925, %926) /* ty=(Tensor[(2, 6, 7), bool], Tensor[(8, 8, 5), uint64], Tensor[(2, 320, 7), int32]) */;
    %928 = cast(%var_2556, dtype="float32") /* ty=Tensor[(4, 80), float32] */;
    %929 = erf(%928) /* ty=Tensor[(4, 80), float32] */;
    %930 = cast(%929, dtype="float32") /* ty=Tensor[(4, 80), float32] */;
    %931 = %920.0;
    %932 = @func_2106() /* ty=Tensor[(8, 14, 12), bool] */;
    %933 = %927.0;
    %934 = tan(%930) /* ty=Tensor[(4, 80), float32] */;
    (%931, %932, %933, meta[relay.Constant][76] /* ty=Tensor[(1, 14), float64] */, %var_2555, %934)
  };
  %935(%var_2584, %var_2585) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool], Tensor[(2, 6, 7), bool], Tensor[(1, 14), float64], Tensor[(84), float64], Tensor[(4, 80), float32]) */
}

def @func_2083(%var_2067: Tensor[(8, 4, 16), float32], %var_2073: Tensor[(120), float32]) -> (Tensor[(8, 4, 16), float32], Tensor[(396, 4), bool], Tensor[(120), float32], Tensor[(1584), uint32]) {
  %936 = cast(%var_2067, dtype="float32") /* ty=Tensor[(8, 4, 16), float32] */;
  %937 = cast(%var_2073, dtype="float32") /* ty=Tensor[(120), float32] */;
  %938 = cast(meta[relay.Constant][77] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %939 = cast(meta[relay.Constant][77] /* ty=Tensor[(1584), uint32] */, dtype="uint32") /* ty=Tensor[(1584), uint32] */;
  %940 = reshape(%937, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
  %941 = reshape(%938, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %942 = reshape(%939, newshape=[396, 4]) /* ty=Tensor[(396, 4), uint32] */;
  %943 = @func_1284(%940, %941, %942) /* ty=(Tensor[(8, 14, 12), float64], Tensor[(6, 20), float32], Tensor[(672), uint16], Tensor[(396, 4), bool], Tensor[(396, 4), uint32], Tensor[(396, 4), float64]) */;
  %944 = sigmoid(%936) /* ty=Tensor[(8, 4, 16), float32] */;
  %945 = %943.3;
  (%944, %945, %var_2073, meta[relay.Constant][77] /* ty=Tensor[(1584), uint32] */)
}

def @func_1921(%var_1890: Tensor[(8, 14, 12), bool]) -> (Tensor[(8, 14, 12), int16], Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) {
  %946 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
  %947 = %946.1;
  %948 = cast(%var_1890, dtype="int16") /* ty=Tensor[(8, 14, 12), int16] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%947, dtype="int16") /* ty=Tensor[(8, 14, 12), int16] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %952 = cast(%var_1890, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %953 = shape_of(meta[relay.Constant][78] /* ty=Tensor[(8, 14, 12), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(meta[relay.Constant][78] /* ty=Tensor[(8, 14, 12), bool] */, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %956 = @func_1482() /* ty=(Tensor[(8, 14, 12), bool],) */;
  %957 = %956.0;
  %958 = cast(meta[relay.Constant][78] /* ty=Tensor[(8, 14, 12), bool] */, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %959 = shape_of(%957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%957, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %962 = less_equal(%960, %961) /* ty=Tensor[(8, 14, 12), bool] */;
  %963 = cast(%962, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %964 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%947, dtype="bool") /* ty=Tensor[(8, 14, 12), bool] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %967 = bitwise_or(%950, %951) /* ty=Tensor[(8, 14, 12), int16] */;
  %968 = greater(%954, %955) /* ty=Tensor[(8, 14, 12), bool] */;
  %969 = equal(%965, %966) /* ty=Tensor[(8, 14, 12), bool] */;
  (%967, %968, %969)
}

def @func_3979(%var_3978: Tensor[(16, 14, 2), float64]) -> Tensor[(16, 14, 2), float64] {
  %971 = fn (%var_3968: Tensor[(16, 14, 2), float64]) -> Tensor[(16, 14, 2), float64] {
    %970 = cast(%var_3968, dtype="float64") /* ty=Tensor[(16, 14, 2), float64] */;
    erf(%970) /* ty=Tensor[(16, 14, 2), float64] */
  };
  %971(%var_3978) /* ty=Tensor[(16, 14, 2), float64] */
}

def @func_5302(%var_5300: Tensor[(36), float32], %var_5301: Tensor[(1584), float64]) -> (Tensor[(8, 14, 12), float32], Tensor[(1584), int64], Tensor[(36), float32], Tensor[(1584), float64]) {
  %982 = fn (%var_5289: Tensor[(36), float32], %var_5290: Tensor[(1584), float64]) -> (Tensor[(8, 14, 12), float32], Tensor[(1584), int64], Tensor[(36), float32], Tensor[(1584), float64]) {
    %972 = @func_1674() /* ty=(Tensor[(8, 14, 12), bool], Tensor[(8, 14, 12), bool]) */;
    %973 = %972.0;
    %974 = cast(%973, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
    %975 = cast(%var_5289, dtype="float32") /* ty=Tensor[(36), float32] */;
    %976 = cast(%var_5290, dtype="float64") /* ty=Tensor[(1584), float64] */;
    %977 = reshape(%975, newshape=[36]) /* ty=Tensor[(36), float32] */;
    %978 = reshape(%976, newshape=[1584]) /* ty=Tensor[(1584), float64] */;
    %979 = @func_1996(%977, %978) /* ty=(Tensor[(8, 14, 12), bool], Tensor[(9, 4), float32], Tensor[(120), float32], Tensor[(36), float32], Tensor[(1584), int64], Tensor[(8, 14, 12), bool], Tensor[(8, 8, 5), uint64], Tensor[(320), uint64], Tensor[(1584), bool], Tensor[(8, 8, 5), uint64], Tensor[(8, 14, 12), bool]) */;
    %980 = erf(%974) /* ty=Tensor[(8, 14, 12), float32] */;
    %981 = %979.4;
    (%980, %981, %var_5289, %var_5290)
  };
  %982(%var_5300, %var_5301) /* ty=(Tensor[(8, 14, 12), float32], Tensor[(1584), int64], Tensor[(36), float32], Tensor[(1584), float64]) */
}

def @func_5911() -> (Tensor[(8, 14, 12), float64], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32], Tensor[(2912), float64]) {
  @func_5909() /* ty=(Tensor[(8, 14, 12), float64], Tensor[(11, 16, 9), uint32], Tensor[(1584), uint32], Tensor[(2912), float64]) */
}

def @func_4349(%var_4344: Tensor[(2912), float32]) -> (Tensor[(5, 4, 10), float32], Tensor[(8, 14, 12), bool], Tensor[(2912), float32]) {
  %983 = @func_2510() /* ty=(Tensor[(5, 4, 10), float32],) */;
  %984 = cast(%var_4344, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %985 = reshape(%984, newshape=[13, 14, 16]) /* ty=Tensor[(13, 14, 16), float32] */;
  %986 = @func_3727(%985) /* ty=(Tensor[(13, 14, 16), float32], Tensor[(8, 14, 12), bool]) */;
  %987 = %983.0;
  %988 = %986.1;
  (%987, %988, %var_4344)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

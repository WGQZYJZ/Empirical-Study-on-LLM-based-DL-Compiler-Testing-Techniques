==========mod==========
#[version = "0.0.5"]
def @func_7138(%var_7127: Tensor[(15, 5, 15), float64]) -> (Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) {
  %0 = @func_5869() /* ty=Tensor[(15, 5, 15), float64] */;
  %1 = cast(%var_7127, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %5 = less(%3, %4) /* ty=Tensor[(15, 5, 15), bool] */;
  %6 = @func_5989() /* ty=Tensor[(15, 5, 15), float64] */;
  (%5, %6)
}

def @func_596(%var_547: Tensor[(15, 5, 15), float64], %var_583: Tensor[(600), float32]) -> (Tensor[(15, 5, 15), bool], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64]) {
  %7 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %8 = %7.0;
  %9 = cast(%var_547, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %10 = shape_of(%8, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%8, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %13 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %14 = cast(%var_583, dtype="float32") /* ty=Tensor[(600), float32] */;
  %15 = cast(%var_583, dtype="float32") /* ty=Tensor[(600), float32] */;
  %16 = reshape(%14, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %17 = reshape(%15, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %18 = cast(%var_583, dtype="float32") /* ty=Tensor[(600), float32] */;
  %19 = cast(%var_583, dtype="float32") /* ty=Tensor[(600), float32] */;
  %20 = reshape(%18, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %21 = reshape(%19, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %22 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %23 = not_equal(%11, %12) /* ty=Tensor[(15, 5, 15), bool] */;
  %24 = %13.3;
  %25 = @func_30(%16, %17) /* ty=Tensor[(12, 10, 5), float32] */;
  %26 = @func_30(%20, %21) /* ty=Tensor[(12, 10, 5), float32] */;
  %27 = %22.2;
  (%23, %24, %25, %var_583, %26, %27)
}

def @func_5112() -> (Tensor[(15, 5, 15), float64],) {
  %28 = @func_1083() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64]) */;
  %29 = %28.0;
  (%29,)
}

def @func_3801(%var_3744: Tensor[(21), float32]) -> (Tensor[(15, 5, 15), float64], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(8, 14, 8), float32], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 7), float64]) {
  %30 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %31 = @func_1778() /* ty=(Tensor[(8, 14, 8), float32],) */;
  %32 = cast(%var_3744, dtype="float32") /* ty=Tensor[(21), float32] */;
  %33 = reshape(%32, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %34 = @func_20(%33) /* ty=(Tensor[(3, 7, 1), float64],) */;
  %35 = %34.0;
  %36 = cast(%35, dtype="uint16") /* ty=Tensor[(3, 7, 1), uint16] */;
  %37 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 7, 7), float64] */, dtype="uint16") /* ty=Tensor[(3, 7, 7), uint16] */;
  %38 = left_shift(%36, %37) /* ty=Tensor[(3, 7, 7), uint16] */;
  %39 = cast(%38, dtype="float32") /* ty=Tensor[(3, 7, 7), float32] */;
  %40 = tan(%39) /* ty=Tensor[(3, 7, 7), float32] */;
  %41 = cast(%40, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
  %42 = %30.5;
  %43 = @func_1446() /* ty=Tensor[(12, 10, 5), float32] */;
  %44 = %31.0;
  %45 = @func_2851() /* ty=Tensor[(15, 5, 15), float64] */;
  %46 = log10(%41) /* ty=Tensor[(3, 7, 7), float64] */;
  (%42, %var_3744, %43, %44, %45, %46)
}

def @func_5581(%var_5575: Tensor[(650, 2), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(10, 10, 13), bool], Tensor[(650, 2), float32]) {
  %47 = cast(%var_5575, dtype="float32") /* ty=Tensor[(650, 2), float32] */;
  %48 = cast(%var_5575, dtype="float32") /* ty=Tensor[(650, 2), float32] */;
  %49 = reshape(%47, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
  %50 = reshape(%48, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
  %51 = @func_2611() /* ty=Tensor[(8, 14, 8), float64] */;
  %52 = @func_3335(%49, %50) /* ty=Tensor[(10, 10, 13), bool] */;
  (%51, %52, %var_5575)
}

def @func_5973(%var_5953: float32, %var_5954: Tensor[(6, 12, 1), float32]) -> Tensor[(6, 12, 1), bool] {
  %53 = cast(%var_5953, dtype="bool") /* ty=bool */;
  %54 = cast(%var_5954, dtype="bool") /* ty=Tensor[(6, 12, 1), bool] */;
  less(%53, %54) /* ty=Tensor[(6, 12, 1), bool] */
}

def @func_1355() -> (Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) {
  %55 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %56 = %55.1;
  %57 = cast(%56, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %58 = reshape(%57, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %59 = @func_329(%58) /* ty=(Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64], Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %60 = %59.7;
  %61 = cast(%60, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
  %62 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %63 = %62.0;
  %64 = cast(%63, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %65 = tan(%61) /* ty=Tensor[(12, 10, 5), float64] */;
  %66 = cast(%65, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %67 = reshape(%64, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
  %68 = reshape(%66, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %69 = @func_466(%67, %68) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) */;
  %70 = %69.2;
  (%56, %65, %63, %70)
}

def @func_4816(%var_4810: Tensor[(130, 10), float32]) -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(130, 10), float32]) {
  %71 = @func_867() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %72 = @func_2317() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) */;
  %73 = cast(%var_4810, dtype="float32") /* ty=Tensor[(130, 10), float32] */;
  %74 = cast(%var_4810, dtype="float32") /* ty=Tensor[(130, 10), float32] */;
  %75 = reshape(%73, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
  %76 = reshape(%74, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
  %77 = %71.0;
  %78 = %72.1;
  %79 = @func_1184() /* ty=Tensor[(12, 10, 5), float64] */;
  %80 = @func_3335(%75, %76) /* ty=Tensor[(10, 10, 13), bool] */;
  (%77, %78, %79, %80, %var_4810)
}

def @func_3081(%var_3045: Tensor[(4, 364), float64]) -> (Tensor[(8, 14, 8), float32], Tensor[(4, 364), float64], Tensor[(14, 8, 13), float32], Tensor[(12, 10, 5), float32], Tensor[(375, 3), float64], Tensor[(600), float32]) {
  %81 = @func_2516() /* ty=Tensor[(8, 14, 8), float32] */;
  %82 = cast(%81, dtype="float32") /* ty=Tensor[(8, 14, 8), float32] */;
  %83 = cast(%var_3045, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
  %84 = reshape(%83, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), float64] */;
  %85 = @func_2007(%84) /* ty=(Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64]) */;
  %86 = %85.1;
  %87 = cast(%86, dtype="float32") /* ty=Tensor[(14, 8, 13), float32] */;
  %88 = cast(meta[relay.Constant][1] /* ty=Tensor[(375, 3), float64] */, dtype="float64") /* ty=Tensor[(375, 3), float64] */;
  %89 = cast(meta[relay.Constant][2] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %90 = reshape(%88, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
  %91 = reshape(%89, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %92 = @func_466(%90, %91) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) */;
  %93 = exp(%82) /* ty=Tensor[(8, 14, 8), float32] */;
  %94 = erf(%87) /* ty=Tensor[(14, 8, 13), float32] */;
  %95 = %92.4;
  (%93, %var_3045, %94, %95, meta[relay.Constant][1] /* ty=Tensor[(375, 3), float64] */, meta[relay.Constant][2] /* ty=Tensor[(600), float32] */)
}

def @func_466(%var_392: Tensor[(15, 5, 15), float64], %var_419: Tensor[(600), float32]) -> (Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) {
  %96 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %97 = %96.0;
  %98 = cast(%var_392, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %102 = cast(%var_419, dtype="float32") /* ty=Tensor[(600), float32] */;
  %103 = cast(%var_419, dtype="float32") /* ty=Tensor[(600), float32] */;
  %104 = reshape(%102, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %105 = reshape(%103, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %106 = @func_30(%104, %105) /* ty=Tensor[(12, 10, 5), float32] */;
  %107 = cast(%106, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %108 = cast(%106, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %109 = reshape(%107, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %110 = reshape(%108, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %111 = cast(%var_419, dtype="uint32") /* ty=Tensor[(600), uint32] */;
  %112 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%106, dtype="uint32") /* ty=Tensor[(12, 10, 5), uint32] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %115 = bitwise_or(%113, %114) /* ty=Tensor[(12, 10, 5), uint32] */;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %117 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %118 = cast(%var_419, dtype="float32") /* ty=Tensor[(600), float32] */;
  %119 = reshape(%118, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %120 = @func_329(%119) /* ty=(Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64], Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %121 = logical_or(%100, %101) /* ty=Tensor[(15, 5, 15), bool] */;
  %122 = @func_30(%109, %110) /* ty=Tensor[(12, 10, 5), float32] */;
  %123 = log2(%116) /* ty=Tensor[(12, 10, 5), float32] */;
  %124 = %117.3;
  %125 = %120.1;
  (%121, %122, %123, %124, %125)
}

def @func_768() -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) {
  %126 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %127 = %126.0;
  %128 = cast(%127, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %129 = cast(%127, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %130 = asinh(%129) /* ty=Tensor[(15, 5, 15), float64] */;
  %131 = cast(%127, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
  %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%130, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %135 = log10(%128) /* ty=Tensor[(15, 5, 15), float64] */;
  %136 = logical_xor(%133, %134) /* ty=Tensor[(15, 5, 15), int16] */;
  (%135, %136)
}

def @func_5869() -> Tensor[(15, 5, 15), float64] {
  %137 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %137.0
}

def @func_2591(%var_2588: Tensor[(13, 9, 11), float32]) -> Tensor[(13, 9, 11), float32] {
  %138 = cast(%var_2588, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  log2(%138) /* ty=Tensor[(13, 9, 11), float32] */
}

def @func_7096() -> (Tensor[(12, 10, 5), float64], Tensor[(8, 14, 8), float64], Tensor[(1125), uint16], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64]) {
  %139 = @func_6912() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) */;
  %140 = %139.1;
  %141 = cast(%140, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %142 = cast(meta[relay.Constant][3] /* ty=Tensor[(1125), uint16] */, dtype="uint16") /* ty=Tensor[(1125), uint16] */;
  %143 = reshape(%141, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %144 = reshape(%142, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), uint16] */;
  %145 = @func_1910(%143, %144) /* ty=(Tensor[(15, 5, 15), float32], Tensor[(8, 14, 8), float64], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64], Tensor[(21), float32], Tensor[(600), float32], Tensor[(21), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int8], Tensor[(14, 14, 12), bool], Tensor[(15, 5, 15), int16], Tensor[(600), float32]) */;
  %146 = @func_4468() /* ty=(Tensor[(12, 10, 5), float64],) */;
  %147 = %145.1;
  %148 = @func_1446() /* ty=Tensor[(12, 10, 5), float32] */;
  %149 = %146.0;
  (%140, %147, meta[relay.Constant][3] /* ty=Tensor[(1125), uint16] */, %148, %149)
}

def @func_7526(%var_7517: Tensor[(600), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(600), bool]) {
  %150 = @func_6299() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %151 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %152 = %151.2;
  %153 = cast(%var_7517, dtype="bool") /* ty=Tensor[(600), bool] */;
  %154 = shape_of(%152, dtype="int32") /* ty=Tensor[(1), int32] */;
  %155 = cast(%152, dtype="bool") /* ty=Tensor[(600), bool] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?), bool] */;
  %157 = %150.0;
  %158 = logical_and(%155, %156) /* ty=Tensor[(600), bool] */;
  (%157, %158)
}

def @func_2384(%var_2378: Tensor[(9, 3, 10), float64]) -> (Tensor[(9, 3, 10), float64],) {
  %159 = cast(%var_2378, dtype="float64") /* ty=Tensor[(9, 3, 10), float64] */;
  %160 = log(%159) /* ty=Tensor[(9, 3, 10), float64] */;
  (%160,)
}

def @func_7435(%var_7424: Tensor[(9, 9, 8), bool], %var_7425: Tensor[(9, 9, 8), bool], %var_7433: Tensor[(1, 1300), float32]) -> (Tensor[(9, 9, 8), bool], Tensor[(12, 10, 5), float32], Tensor[(1, 1300), float32]) {
  %161 = cast(%var_7425, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %162 = shape_of(%var_7424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%var_7424, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %165 = cast(%var_7433, dtype="float32") /* ty=Tensor[(1, 1300), float32] */;
  %166 = reshape(%165, newshape=[130, 10]) /* ty=Tensor[(130, 10), float32] */;
  %167 = @func_4816(%166) /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(130, 10), float32]) */;
  %168 = logical_and(%163, %164) /* ty=Tensor[(9, 9, 8), bool] */;
  %169 = %167.0;
  (%168, %169, %var_7433)
}

def @func_811() -> (Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) {
  %170 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
  %171 = cast(meta[relay.Constant][5] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %172 = cast(meta[relay.Constant][5] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %173 = reshape(%171, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %174 = reshape(%172, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %175 = atanh(%170) /* ty=Tensor[(8, 14, 8), float64] */;
  %176 = @func_30(%173, %174) /* ty=Tensor[(12, 10, 5), float32] */;
  (%175, %176, meta[relay.Constant][5] /* ty=Tensor[(600), float32] */)
}

def @func_6083() -> (Tensor[(15, 5, 15), int16],) {
  %177 = @func_5835() /* ty=(Tensor[(15, 5, 15), int16],) */;
  %178 = %177.0;
  (%178,)
}

def @func_1910(%var_1825: Tensor[(600), float32], %var_1860: Tensor[(15, 5, 15), uint16]) -> (Tensor[(15, 5, 15), float32], Tensor[(8, 14, 8), float64], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64], Tensor[(21), float32], Tensor[(600), float32], Tensor[(21), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int8], Tensor[(14, 14, 12), bool], Tensor[(15, 5, 15), int16], Tensor[(600), float32]) {
  %179 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
  %180 = %179.1;
  %181 = cast(%180, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %182 = sigmoid(%181) /* ty=Tensor[(15, 5, 15), float64] */;
  %183 = cast(%182, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
  %184 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%180, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %187 = @func_1005() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %188 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %189 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %190 = cast(%182, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
  %191 = atanh(%190) /* ty=Tensor[(15, 5, 15), float32] */;
  %192 = cast(%191, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %193 = cast(%var_1825, dtype="float32") /* ty=Tensor[(600), float32] */;
  %194 = reshape(%192, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
  %195 = reshape(%193, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %196 = @func_596(%194, %195) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64]) */;
  %197 = cast(%var_1825, dtype="float32") /* ty=Tensor[(600), float32] */;
  %198 = reshape(%197, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %199 = @func_1428(%198) /* ty=(Tensor[(21), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(14, 14, 12), bool], Tensor[(2352), bool]) */;
  %200 = @func_1083() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64]) */;
  %201 = cast(%182, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %202 = cos(%201) /* ty=Tensor[(15, 5, 15), float64] */;
  %203 = cast(%202, dtype="uint16") /* ty=Tensor[(15, 5, 15), uint16] */;
  %204 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%191, dtype="uint16") /* ty=Tensor[(15, 5, 15), uint16] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %207 = bitwise_or(%205, %206) /* ty=Tensor[(15, 5, 15), uint16] */;
  %208 = cast(%var_1860, dtype="int8") /* ty=Tensor[(15, 5, 15), int8] */;
  %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%207, dtype="int8") /* ty=Tensor[(15, 5, 15), int8] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %212 = cast(%var_1825, dtype="float32") /* ty=Tensor[(600), float32] */;
  %213 = reshape(%212, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %214 = @func_1428(%213) /* ty=(Tensor[(21), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(14, 14, 12), bool], Tensor[(2352), bool]) */;
  %215 = cast(%var_1825, dtype="float32") /* ty=Tensor[(600), float32] */;
  %216 = reshape(%215, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %217 = @func_1428(%216) /* ty=(Tensor[(21), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(14, 14, 12), bool], Tensor[(2352), bool]) */;
  %218 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %219 = floor_divide(%185, %186) /* ty=Tensor[(15, 5, 15), float32] */;
  %220 = %187.0;
  %221 = %188.2;
  %222 = %189.0;
  %223 = %196.1;
  %224 = %199.0;
  %225 = %200.1;
  %226 = subtract(%210, %211) /* ty=Tensor[(15, 5, 15), int8] */;
  %227 = %214.3;
  %228 = %217.2;
  %229 = %218.2;
  (%219, %220, %221, %222, %223, %var_1825, %224, %225, %226, %227, %228, %229)
}

def @func_5174() -> Tensor[(15, 5, 15), float64] {
  %230 = @func_4032() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %230.0
}

def @func_1145(%var_1137: Tensor[(14, 14, 12), bool]) -> Tensor[(14, 14, 12), bool] {
  %231 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %232 = cast(%var_1137, dtype="bool") /* ty=Tensor[(14, 14, 12), bool] */;
  logical_and(%231, %232) /* ty=Tensor[(14, 14, 12), bool] */
}

def @func_2007(%var_2000: Tensor[(14, 8, 13), float64]) -> (Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64]) {
  %233 = cast(%var_2000, dtype="float64") /* ty=Tensor[(14, 8, 13), float64] */;
  %234 = cast(%var_2000, dtype="float64") /* ty=Tensor[(14, 8, 13), float64] */;
  %235 = asinh(%233) /* ty=Tensor[(14, 8, 13), float64] */;
  %236 = acosh(%234) /* ty=Tensor[(14, 8, 13), float64] */;
  (%235, %236)
}

def @func_193() -> (Tensor[(15, 5, 15), float64],) {
  %237 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 5, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %238 = rsqrt(%237) /* ty=Tensor[(15, 5, 15), float64] */;
  (%238,)
}

def @func_2227() -> (Tensor[(12, 10, 5), float32],) {
  %239 = @func_1446() /* ty=Tensor[(12, 10, 5), float32] */;
  (%239,)
}

def @func_3123(%var_3096: Tensor[(15, 5, 15), float64], %var_3105: Tensor[(3, 7, 5), float64]) -> (Tensor[(15, 5, 15), float32], Tensor[(3, 7, 5), bool]) {
  %240 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %241 = %240.0;
  %242 = cast(%var_3096, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
  %243 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%241, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %246 = @func_992() /* ty=Tensor[(3, 7, 1), float64] */;
  %247 = cast(%246, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
  %248 = cast(%var_3105, dtype="bool") /* ty=Tensor[(3, 7, 5), bool] */;
  %249 = power(%244, %245) /* ty=Tensor[(15, 5, 15), float32] */;
  %250 = greater_equal(%247, %248) /* ty=Tensor[(3, 7, 5), bool] */;
  (%249, %250)
}

def @func_4032() -> (Tensor[(15, 5, 15), float64],) {
  %251 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %252 = %251.0;
  (%252,)
}

def @func_5989() -> Tensor[(15, 5, 15), float64] {
  @func_2851() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_867() -> (Tensor[(12, 10, 5), float32],) {
  %253 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %254 = %253.1;
  (%254,)
}

def @func_5641() -> (Tensor[(15, 5, 15), float64],) {
  %255 = @func_2851() /* ty=Tensor[(15, 5, 15), float64] */;
  (%255,)
}

def @func_4700(%var_4693: Tensor[(7, 7, 12), float32], %var_4694: Tensor[(7, 7, 12), float32]) -> Tensor[(7, 7, 12), float32] {
  %256 = cast(%var_4694, dtype="float32") /* ty=Tensor[(7, 7, 12), float32] */;
  %257 = shape_of(%var_4693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%var_4693, dtype="float32") /* ty=Tensor[(7, 7, 12), float32] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%258, %259) /* ty=Tensor[(7, 7, 12), float32] */
}

def @func_5197() -> Tensor[(12, 10, 5), float64] {
  @func_2403() /* ty=Tensor[(12, 10, 5), float64] */
}

def @func_1070() -> (Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) {
  %260 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
  %261 = %260.1;
  %262 = cast(%261, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %263 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %264 = sqrt(%262) /* ty=Tensor[(15, 5, 15), float64] */;
  %265 = %263.1;
  (%264, %265)
}

def @func_1778() -> (Tensor[(8, 14, 8), float32],) {
  %266 = @func_1005() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %267 = %266.0;
  %268 = cast(%267, dtype="float32") /* ty=Tensor[(8, 14, 8), float32] */;
  %269 = sinh(%268) /* ty=Tensor[(8, 14, 8), float32] */;
  (%269,)
}

def @func_1622(%var_1518: Tensor[(7, 13, 15), uint64], %var_1519: Tensor[(7, 13, 15), uint64], %var_1607: Tensor[(12, 10, 5), float32]) -> (Tensor[(7, 13, 15), bool], Tensor[(7, 13, 15), bool], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), int64], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool], Tensor[(15, 5, 15), bool]) {
  %270 = cast(%var_1519, dtype="bool") /* ty=Tensor[(7, 13, 15), bool] */;
  %271 = shape_of(%var_1518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %272 = cast(%var_1518, dtype="bool") /* ty=Tensor[(7, 13, 15), bool] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %274 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 13, 15), uint64] */, dtype="bool") /* ty=Tensor[(7, 13, 15), bool] */;
  %275 = shape_of(%var_1518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%var_1518, dtype="bool") /* ty=Tensor[(7, 13, 15), bool] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %278 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %279 = %278.0;
  %280 = cast(%279, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
  %281 = reshape(%280, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), int16] */;
  %282 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
  %283 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
  %284 = %283.3;
  %285 = cast(%284, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %286 = cos(%285) /* ty=Tensor[(12, 10, 5), float32] */;
  %287 = %282.1;
  %288 = cast(%287, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %289 = cast(%286, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %290 = reshape(%288, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %291 = reshape(%289, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %292 = @func_30(%290, %291) /* ty=Tensor[(12, 10, 5), float32] */;
  %293 = cast(%292, dtype="int64") /* ty=Tensor[(12, 10, 5), int64] */;
  %294 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(%286, dtype="int64") /* ty=Tensor[(12, 10, 5), int64] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %297 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %298 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %299 = cast(%var_1607, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
  %300 = shape_of(%292, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%292, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %303 = cast(%279, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
  %304 = reshape(%303, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), int16] */;
  %305 = equal(%272, %273) /* ty=Tensor[(7, 13, 15), bool] */;
  %306 = logical_or(%276, %277) /* ty=Tensor[(7, 13, 15), bool] */;
  %307 = @func_1128(%281) /* ty=Tensor[(15, 5, 15), bool] */;
  %308 = right_shift(%295, %296) /* ty=Tensor[(12, 10, 5), int64] */;
  %309 = %297.2;
  %310 = %298.0;
  %311 = less(%301, %302) /* ty=Tensor[(12, 10, 5), bool] */;
  %312 = @func_1128(%304) /* ty=Tensor[(15, 5, 15), bool] */;
  (%305, %306, %279, %307, %287, %308, %309, %310, %311, %312)
}

def @func_329(%var_258: Tensor[(600), float32]) -> (Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64], Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) {
  %313 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %314 = cast(%var_258, dtype="float32") /* ty=Tensor[(600), float32] */;
  %315 = cast(%var_258, dtype="float32") /* ty=Tensor[(600), float32] */;
  %316 = reshape(%314, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %317 = reshape(%315, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %318 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %319 = @func_30(%316, %317) /* ty=Tensor[(12, 10, 5), float32] */;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %321 = cast(%319, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %322 = reshape(%320, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %323 = reshape(%321, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %324 = %313.2;
  %325 = cast(%324, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
  %326 = reshape(%325, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %327 = @func_20(%326) /* ty=(Tensor[(3, 7, 1), float64],) */;
  %328 = cast(%324, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
  %329 = reshape(%328, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %330 = @func_20(%329) /* ty=(Tensor[(3, 7, 1), float64],) */;
  %331 = @func_30(%322, %323) /* ty=Tensor[(12, 10, 5), float32] */;
  %332 = cast(%331, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %333 = cast(%var_258, dtype="float32") /* ty=Tensor[(600), float32] */;
  %334 = reshape(%332, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %335 = reshape(%333, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %336 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %337 = cast(%331, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %338 = @func_30(%334, %335) /* ty=Tensor[(12, 10, 5), float32] */;
  %339 = cast(%338, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %340 = reshape(%337, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %341 = reshape(%339, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %342 = %318.5;
  %343 = %327.0;
  %344 = %330.0;
  %345 = %336.0;
  %346 = @func_30(%340, %341) /* ty=Tensor[(12, 10, 5), float32] */;
  (%324, %319, %var_258, %342, %331, %343, %344, %338, %345, %346)
}

def @func_3962() -> (Tensor[(12, 10, 5), float32], Tensor[(14, 14, 12), bool], Tensor[(2352), bool], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) {
  %347 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %348 = cast(meta[relay.Constant][8] /* ty=Tensor[(2352), bool] */, dtype="bool") /* ty=Tensor[(2352), bool] */;
  %349 = reshape(%348, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), bool] */;
  %350 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %351 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %352 = %351.0;
  %353 = cast(%352, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
  %354 = reshape(%353, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), int16] */;
  %355 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %356 = %347.0;
  %357 = @func_1145(%349) /* ty=Tensor[(14, 14, 12), bool] */;
  %358 = %350.1;
  %359 = @func_1128(%354) /* ty=Tensor[(15, 5, 15), bool] */;
  %360 = %355.0;
  (%356, %357, meta[relay.Constant][8] /* ty=Tensor[(2352), bool] */, %358, %352, %359, %360)
}

def @main() -> Tensor[(12, 10, 5), float64] {
  %361 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
  %362 = %361.3;
  %363 = cast(%362, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
  cosh(%363) /* ty=Tensor[(12, 10, 5), float64] */
}

def @func_7144() -> Tensor[(3, 7, 11), float64] {
  %364 = @func_4584() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), float64]) */;
  %364.1
}

def @func_2570() -> (Tensor[(3, 7, 11), float32],) {
  %365 = @func_2444() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %366 = %365.0;
  %367 = cast(%366, dtype="float32") /* ty=Tensor[(3, 7, 11), float32] */;
  %368 = sqrt(%367) /* ty=Tensor[(3, 7, 11), float32] */;
  (%368,)
}

def @func_3383(%var_3378: Tensor[(5, 4, 16), float32], %var_3379: Tensor[(5, 4, 16), float32]) -> Tensor[(5, 4, 16), bool] {
  %369 = cast(%var_3379, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %370 = shape_of(%var_3378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%var_3378, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%371, %372) /* ty=Tensor[(5, 4, 16), bool] */
}

def @func_5024() -> Tensor[(15, 5, 15), float64] {
  %373 = @func_3962() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(14, 14, 12), bool], Tensor[(2352), bool], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) */;
  %373.4
}

def @func_4468() -> (Tensor[(12, 10, 5), float64],) {
  %374 = @func_2403() /* ty=Tensor[(12, 10, 5), float64] */;
  (%374,)
}

def @func_6726(%var_6720: int64, %var_6721: Tensor[(2, 13, 1), int64]) -> (Tensor[(2, 13, 1), int64],) {
  %375 = cast(%var_6720, dtype="int64") /* ty=int64 */;
  %376 = cast(%var_6721, dtype="int64") /* ty=Tensor[(2, 13, 1), int64] */;
  %377 = add(%375, %376) /* ty=Tensor[(2, 13, 1), int64] */;
  (%377,)
}

def @func_6401() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) {
  %378 = @func_3616() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool]) */;
  %379 = %378.0;
  %380 = @func_5610() /* ty=Tensor[(3, 7, 11), bool] */;
  (%379, %380)
}

def @func_5304(%var_5292: Tensor[(6, 10, 12), float32]) -> (Tensor[(6, 10, 12), float32],) {
  %381 = cast(%var_5292, dtype="float32") /* ty=Tensor[(6, 10, 12), float32] */;
  %382 = cos(%381) /* ty=Tensor[(6, 10, 12), float32] */;
  (%382,)
}

def @func_6663() -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64]) {
  %383 = @func_2641() /* ty=Tensor[(15, 5, 15), float64] */;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
  %385 = exp(%384) /* ty=Tensor[(15, 5, 15), float32] */;
  %386 = cast(%385, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %387 = @func_5428() /* ty=Tensor[(15, 5, 15), float64] */;
  %388 = log2(%386) /* ty=Tensor[(15, 5, 15), float64] */;
  (%387, %388)
}

def @func_2641() -> Tensor[(15, 5, 15), float64] {
  %389 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %390 = %389.0;
  %391 = cast(%390, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  atan(%391) /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_5610() -> Tensor[(3, 7, 11), bool] {
  %392 = @func_5138() /* ty=(Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float64]) */;
  %392.0
}

def @func_5835() -> (Tensor[(15, 5, 15), int16],) {
  %393 = @func_3293() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float64], Tensor[(1365), uint64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) */;
  %394 = %393.4;
  (%394,)
}

def @func_658(%var_652: Tensor[(21), float32]) -> (Tensor[(21), bool],) {
  %395 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %396 = %395.3;
  %397 = cast(%var_652, dtype="bool") /* ty=Tensor[(21), bool] */;
  %398 = shape_of(%396, dtype="int32") /* ty=Tensor[(1), int32] */;
  %399 = cast(%396, dtype="bool") /* ty=Tensor[(21), bool] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?), bool] */;
  %401 = logical_or(%399, %400) /* ty=Tensor[(21), bool] */;
  (%401,)
}

def @func_5409() -> (Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(14, 8, 13), float64], Tensor[(1456), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), bool]) {
  %402 = @func_3428() /* ty=(Tensor[(600), float32],) */;
  %403 = @func_3564() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) */;
  %404 = %402.0;
  %405 = cast(%404, dtype="float32") /* ty=Tensor[(600), float32] */;
  %406 = reshape(%405, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %407 = @func_3672(%406) /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(600), float32], Tensor[(8, 14, 8), float64]) */;
  %408 = cast(meta[relay.Constant][9] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %409 = reshape(%408, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
  %410 = @func_2154(%409) /* ty=(Tensor[(15, 5, 15), float64], Tensor[(14, 8, 13), float64], Tensor[(1456), float64], Tensor[(8, 14, 8), float32]) */;
  %411 = @func_4652() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(1300), float64]) */;
  %412 = %403.5;
  %413 = cast(%412, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
  %414 = reshape(%413, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), int16] */;
  %415 = %407.1;
  %416 = %410.1;
  %417 = %411.0;
  %418 = @func_1128(%414) /* ty=Tensor[(15, 5, 15), bool] */;
  (%404, %412, %415, %416, meta[relay.Constant][9] /* ty=Tensor[(1456), float64] */, %417, %418)
}

def @func_1502(%var_1448: Tensor[(14, 9, 3), float64], %var_1498: Tensor[(14, 9, 3), float64]) -> (Tensor[(14, 9, 3), float64], Tensor[(14, 9, 3), bool]) {
  %419 = cast(%var_1448, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
  %420 = log(%419) /* ty=Tensor[(14, 9, 3), float64] */;
  %421 = cast(%420, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
  %422 = cast(%var_1498, dtype="bool") /* ty=Tensor[(14, 9, 3), bool] */;
  %423 = shape_of(%var_1448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%var_1448, dtype="bool") /* ty=Tensor[(14, 9, 3), bool] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %426 = log2(%421) /* ty=Tensor[(14, 9, 3), float64] */;
  %427 = equal(%424, %425) /* ty=Tensor[(14, 9, 3), bool] */;
  (%426, %427)
}

def @func_5550() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float32]) {
  %428 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %429 = @func_5138() /* ty=(Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float64]) */;
  %430 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %431 = %430.0;
  %432 = cast(%431, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
  %433 = %428.1;
  %434 = %429.0;
  %435 = cosh(%432) /* ty=Tensor[(15, 5, 15), float32] */;
  (%433, %434, %435)
}

def @func_2317() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) {
  %436 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %437 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %438 = %437.2;
  %439 = cast(%438, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
  %440 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 7, 11), float64] */, dtype="bool") /* ty=Tensor[(3, 7, 11), bool] */;
  %441 = logical_or(%439, %440) /* ty=Tensor[(3, 7, 11), bool] */;
  %442 = cast(%441, dtype="bool") /* ty=Tensor[(3, 7, 11), bool] */;
  %443 = cast(%438, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
  %444 = %436.0;
  %445 = equal(%442, %443) /* ty=Tensor[(3, 7, 11), bool] */;
  (%444, %445)
}

def @func_1184() -> Tensor[(12, 10, 5), float64] {
  %446 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %447 = %446.1;
  %448 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 10, 5), float32] */, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%447, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  minimum(%450, %451) /* ty=Tensor[(12, 10, 5), float64] */
}

def @func_1374() -> (Tensor[(12, 10, 5), float32],) {
  %452 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
  %453 = %452.3;
  (%453,)
}

def @func_4107() -> (Tensor[(1365), uint64], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) {
  %454 = @func_3293() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float64], Tensor[(1365), uint64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) */;
  %455 = @func_2812() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %456 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %457 = %454.3;
  %458 = %455.0;
  %459 = %456.0;
  (%457, %458, %459)
}

def @func_4922() -> Tensor[(12, 10, 5), float32] {
  %460 = @func_4652() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(1300), float64]) */;
  %460.0
}

def @func_4443(%var_4425: Tensor[(1300, 1), float32]) -> (Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(1300, 1), float32], Tensor[(15, 5, 15), float64]) {
  %461 = @func_2317() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) */;
  %462 = %461.0;
  %463 = cast(%462, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
  %464 = cast(%var_4425, dtype="float32") /* ty=Tensor[(1300, 1), float32] */;
  %465 = cast(%var_4425, dtype="float32") /* ty=Tensor[(1300, 1), float32] */;
  %466 = reshape(%464, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
  %467 = reshape(%465, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
  %468 = cast(%var_4425, dtype="float32") /* ty=Tensor[(1300, 1), float32] */;
  %469 = atan(%463) /* ty=Tensor[(12, 10, 5), float64] */;
  %470 = @func_3335(%466, %467) /* ty=Tensor[(10, 10, 13), bool] */;
  %471 = erf(%468) /* ty=Tensor[(1300, 1), float32] */;
  %472 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
  (%469, %470, %471, %472)
}

def @func_6373() -> (Tensor[(3, 7, 11), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), int16], Tensor[(15, 5, 15), int16]) {
  %473 = @func_2444() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %474 = @func_6299() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %475 = @func_6083() /* ty=(Tensor[(15, 5, 15), int16],) */;
  %476 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %477 = %473.0;
  %478 = %474.0;
  %479 = %475.0;
  %480 = %476.0;
  (%477, %478, %479, %480)
}

def @func_6706(%var_6694: Tensor[(1, 8), float64], %var_6699: Tensor[(600), float32]) -> (Tensor[(1, 8), float64], Tensor[(600), float32], Tensor[(600), float32]) {
  %481 = cast(%var_6694, dtype="float64") /* ty=Tensor[(1, 8), float64] */;
  %482 = cast(%var_6699, dtype="float32") /* ty=Tensor[(600), float32] */;
  %483 = reshape(%482, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %484 = @func_329(%483) /* ty=(Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64], Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %485 = cosh(%481) /* ty=Tensor[(1, 8), float64] */;
  %486 = %484.2;
  (%485, %486, %var_6699)
}

def @func_7311(%var_7304: Tensor[(3, 7, 11), float64]) -> Tensor[(3, 7, 11), int32] {
  %487 = @func_6969() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %488 = %487.0;
  %489 = cast(%var_7304, dtype="int32") /* ty=Tensor[(3, 7, 11), int32] */;
  %490 = shape_of(%488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %491 = cast(%488, dtype="int32") /* ty=Tensor[(3, 7, 11), int32] */;
  %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  multiply(%491, %492) /* ty=Tensor[(3, 7, 11), int32] */
}

def @func_992() -> Tensor[(3, 7, 1), float64] {
  %493 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %493.2
}

def @func_4903() -> (Tensor[(15, 5, 15), float64],) {
  %494 = @func_4870() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32]) */;
  %495 = %494.0;
  (%495,)
}

def @func_2611() -> Tensor[(8, 14, 8), float64] {
  %496 = @func_1005() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %496.0
}

def @func_1955(%var_1943: Tensor[(12, 10, 5), float32]) -> (Tensor[(12, 10, 5), bool],) {
  %497 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
  %498 = %497.3;
  %499 = cast(%var_1943, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
  %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%498, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %503 = equal(%501, %502) /* ty=Tensor[(12, 10, 5), bool] */;
  (%503,)
}

def @func_5428() -> Tensor[(15, 5, 15), float64] {
  %504 = @func_5112() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %504.0
}

def @func_2342() -> (Tensor[(3, 7, 11), float64],) {
  %505 = @func_2317() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) */;
  %506 = %505.1;
  %507 = cast(%506, dtype="float64") /* ty=Tensor[(3, 7, 11), float64] */;
  %508 = sin(%507) /* ty=Tensor[(3, 7, 11), float64] */;
  (%508,)
}

def @func_6040(%var_6010: float32, %var_6011: Tensor[(4, 1, 15), float32]) -> (Tensor[(4, 1, 15), bool], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64]) {
  %509 = cast(%var_6010, dtype="bool") /* ty=bool */;
  %510 = cast(%var_6011, dtype="bool") /* ty=Tensor[(4, 1, 15), bool] */;
  %511 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %512 = not_equal(%509, %510) /* ty=Tensor[(4, 1, 15), bool] */;
  %513 = %511.0;
  %514 = @func_4987() /* ty=Tensor[(15, 5, 15), float64] */;
  (%512, %513, %514)
}

def @func_6263() -> (Tensor[(3, 7, 11), float64], Tensor[(8, 14, 8), float64], Tensor[(3, 7, 11), float64]) {
  %515 = @func_5550() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float32]) */;
  %516 = %515.1;
  %517 = cast(%516, dtype="float64") /* ty=Tensor[(3, 7, 11), float64] */;
  %518 = cast(%516, dtype="float64") /* ty=Tensor[(3, 7, 11), float64] */;
  %519 = erf(%517) /* ty=Tensor[(3, 7, 11), float64] */;
  %520 = @func_2611() /* ty=Tensor[(8, 14, 8), float64] */;
  %521 = sigmoid(%518) /* ty=Tensor[(3, 7, 11), float64] */;
  (%519, %520, %521)
}

def @func_6964() -> (Tensor[(600), float32], Tensor[(3, 7, 11), float64]) {
  %522 = @func_3428() /* ty=(Tensor[(600), float32],) */;
  %523 = @func_2444() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %524 = %523.0;
  %525 = cast(%524, dtype="float64") /* ty=Tensor[(3, 7, 11), float64] */;
  %526 = %522.0;
  %527 = exp(%525) /* ty=Tensor[(3, 7, 11), float64] */;
  (%526, %527)
}

def @func_5785(%var_5741: Tensor[(270), float64]) -> (Tensor[(15, 5, 15), float64], Tensor[(3, 7, 11), bool], Tensor[(9, 3, 10), float64], Tensor[(270), float64], Tensor[(12, 5, 11), float64], Tensor[(12, 5, 11), float32], Tensor[(8, 14, 8), float32]) {
  %528 = @func_4870() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32]) */;
  %529 = cast(%var_5741, dtype="float64") /* ty=Tensor[(270), float64] */;
  %530 = reshape(%529, newshape=[9, 3, 10]) /* ty=Tensor[(9, 3, 10), float64] */;
  %531 = @func_2384(%530) /* ty=(Tensor[(9, 3, 10), float64],) */;
  %532 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 132), float64] */, dtype="float64") /* ty=Tensor[(5, 132), float64] */;
  %533 = reshape(%532, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
  %534 = @func_3977(%533) /* ty=(Tensor[(12, 5, 11), float64],) */;
  %535 = %534.0;
  %536 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 132), float64] */, dtype="float64") /* ty=Tensor[(5, 132), float64] */;
  %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%535, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %540 = cast(%535, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %541 = acosh(%540) /* ty=Tensor[(12, 5, 11), float64] */;
  %542 = cast(%541, dtype="float32") /* ty=Tensor[(12, 5, 11), float32] */;
  %543 = %528.0;
  %544 = @func_5610() /* ty=Tensor[(3, 7, 11), bool] */;
  %545 = %531.0;
  %546 = add(%538, %539) /* ty=Tensor[(12, 5, 11), float64] */;
  %547 = acos(%542) /* ty=Tensor[(12, 5, 11), float32] */;
  %548 = @func_2516() /* ty=Tensor[(8, 14, 8), float32] */;
  (%543, %544, %545, %var_5741, %546, %547, %548)
}

def @func_6867(%var_6778: Tensor[(1300), float32], %var_6858: Tensor[(588), float32]) -> (Tensor[(15, 5, 15), float64], Tensor[(1300), float32], Tensor[(10, 10, 13), float32], Tensor[(15, 5, 15), int16], Tensor[(15, 5, 15), float64], Tensor[(600), float32], Tensor[(7, 7, 12), float32], Tensor[(588), float32], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32], Tensor[(12, 10, 5), float32]) {
  %549 = cast(%var_6778, dtype="float32") /* ty=Tensor[(1300), float32] */;
  %550 = reshape(%549, newshape=[130, 10]) /* ty=Tensor[(130, 10), float32] */;
  %551 = @func_4816(%550) /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(130, 10), float32]) */;
  %552 = %551.3;
  %553 = cast(%552, dtype="float32") /* ty=Tensor[(10, 10, 13), float32] */;
  %554 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
  %555 = cast(meta[relay.Constant][13] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %556 = reshape(%555, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %557 = @func_3672(%556) /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(600), float32], Tensor[(8, 14, 8), float64]) */;
  %558 = cast(%var_6858, dtype="float32") /* ty=Tensor[(588), float32] */;
  %559 = cast(%var_6858, dtype="float32") /* ty=Tensor[(588), float32] */;
  %560 = reshape(%558, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
  %561 = reshape(%559, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
  %562 = @func_3962() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(14, 14, 12), bool], Tensor[(2352), bool], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) */;
  %563 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
  %564 = sqrt(%553) /* ty=Tensor[(10, 10, 13), float32] */;
  %565 = %554.1;
  %566 = %557.0;
  %567 = @func_4700(%560, %561) /* ty=Tensor[(7, 7, 12), float32] */;
  %568 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
  %569 = @func_2516() /* ty=Tensor[(8, 14, 8), float32] */;
  %570 = %562.0;
  (%563, %var_6778, %564, %565, %566, meta[relay.Constant][13] /* ty=Tensor[(600), float32] */, %567, %var_6858, %568, %569, %570)
}

def @func_6499(%var_6481: Tensor[(720), float32]) -> (Tensor[(8, 14, 8), float32], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(6, 10, 12), float32], Tensor[(720), float32], Tensor[(12, 10, 5), float32]) {
  %571 = @func_5282() /* ty=(Tensor[(8, 14, 8), float32],) */;
  %572 = @func_2885() /* ty=(Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32]) */;
  %573 = %572.1;
  %574 = cast(%573, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %575 = @func_5835() /* ty=(Tensor[(15, 5, 15), int16],) */;
  %576 = log10(%574) /* ty=Tensor[(12, 10, 5), float32] */;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %578 = cast(%576, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %579 = reshape(%577, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %580 = reshape(%578, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %581 = cast(%var_6481, dtype="float32") /* ty=Tensor[(720), float32] */;
  %582 = reshape(%581, newshape=[6, 10, 12]) /* ty=Tensor[(6, 10, 12), float32] */;
  %583 = @func_5304(%582) /* ty=(Tensor[(6, 10, 12), float32],) */;
  %584 = @func_867() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %585 = %571.0;
  %586 = %575.0;
  %587 = @func_30(%579, %580) /* ty=Tensor[(12, 10, 5), float32] */;
  %588 = @func_5869() /* ty=Tensor[(15, 5, 15), float64] */;
  %589 = %583.0;
  %590 = %584.0;
  (%585, %576, %586, %587, %588, %589, %var_6481, %590)
}

def @func_5282() -> (Tensor[(8, 14, 8), float32],) {
  %591 = @func_1778() /* ty=(Tensor[(8, 14, 8), float32],) */;
  %592 = %591.0;
  (%592,)
}

def @func_5679() -> (Tensor[(3, 7, 11), float64],) {
  %593 = @func_2342() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %594 = %593.0;
  (%594,)
}

def @func_6299() -> (Tensor[(8, 14, 8), float64],) {
  %595 = @func_3190() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %596 = %595.0;
  (%596,)
}

def @func_1005() -> (Tensor[(8, 14, 8), float64],) {
  %597 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %598 = %597.0;
  (%598,)
}

def @func_3672(%var_3633: Tensor[(600), float32]) -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(600), float32], Tensor[(8, 14, 8), float64]) {
  %599 = @func_2812() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %600 = %599.0;
  %601 = cast(%600, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %602 = cast(%var_3633, dtype="float32") /* ty=Tensor[(600), float32] */;
  %603 = reshape(%601, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
  %604 = reshape(%602, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %605 = @func_596(%603, %604) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64]) */;
  %606 = @func_1005() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %607 = %605.0;
  %608 = %606.0;
  (%600, %607, %var_3633, %608)
}

def @func_4584() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), float64]) {
  %609 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %610 = @func_2342() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %611 = %609.0;
  %612 = %610.0;
  (%611, %612)
}

def @func_7214(%var_7191: Tensor[(15, 4, 15), float64]) -> (Tensor[(15, 4, 15), float32], Tensor[(15, 5, 15), float64]) {
  %613 = cast(%var_7191, dtype="float64") /* ty=Tensor[(15, 4, 15), float64] */;
  %614 = asinh(%613) /* ty=Tensor[(15, 4, 15), float64] */;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(15, 4, 15), float32] */;
  %616 = cos(%615) /* ty=Tensor[(15, 4, 15), float32] */;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(15, 4, 15), float32] */;
  %618 = @func_4032() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %619 = sigmoid(%617) /* ty=Tensor[(15, 4, 15), float32] */;
  %620 = %618.0;
  (%619, %620)
}

def @func_3726() -> (Tensor[(12, 10, 5), float32], Tensor[(1300), float32], Tensor[(1300), float64], Tensor[(3, 7, 11), float64], Tensor[(3, 7, 11), float32], Tensor[(14, 8, 13), float64], Tensor[(1456, 1), float64], Tensor[(15, 5, 15), float64]) {
  %621 = @func_3293() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float64], Tensor[(1365), uint64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) */;
  %622 = @func_3564() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) */;
  %623 = %622.3;
  %624 = cast(%623, dtype="float32") /* ty=Tensor[(1300), float32] */;
  %625 = cast(%623, dtype="float64") /* ty=Tensor[(1300), float64] */;
  %626 = @func_2444() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %627 = @func_2570() /* ty=(Tensor[(3, 7, 11), float32],) */;
  %628 = cast(meta[relay.Constant][14] /* ty=Tensor[(1456, 1), float64] */, dtype="float64") /* ty=Tensor[(1456, 1), float64] */;
  %629 = reshape(%628, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), float64] */;
  %630 = @func_2007(%629) /* ty=(Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64]) */;
  %631 = %621.1;
  %632 = atanh(%624) /* ty=Tensor[(1300), float32] */;
  %633 = tan(%625) /* ty=Tensor[(1300), float64] */;
  %634 = %626.0;
  %635 = %627.0;
  %636 = %630.0;
  %637 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
  (%631, %632, %633, %634, %635, %636, meta[relay.Constant][14] /* ty=Tensor[(1456, 1), float64] */, %637)
}

def @func_1428(%var_1390: Tensor[(12, 10, 5), float32]) -> (Tensor[(21), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(14, 14, 12), bool], Tensor[(2352), bool]) {
  %638 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %639 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %640 = %639.0;
  %641 = cast(%var_1390, dtype="uint16") /* ty=Tensor[(12, 10, 5), uint16] */;
  %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%640, dtype="uint16") /* ty=Tensor[(12, 10, 5), uint16] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %645 = subtract(%643, %644) /* ty=Tensor[(12, 10, 5), uint16] */;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
  %647 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %648 = cast(meta[relay.Constant][15] /* ty=Tensor[(2352), bool] */, dtype="bool") /* ty=Tensor[(2352), bool] */;
  %649 = reshape(%648, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), bool] */;
  %650 = %638.3;
  %651 = erf(%646) /* ty=Tensor[(12, 10, 5), float64] */;
  %652 = %647.0;
  %653 = @func_1145(%649) /* ty=Tensor[(14, 14, 12), bool] */;
  (%650, %651, %652, %653, meta[relay.Constant][15] /* ty=Tensor[(2352), bool] */)
}

def @func_3498() -> Tensor[(8, 14, 8), float32] {
  @func_2516() /* ty=Tensor[(8, 14, 8), float32] */
}

def @func_6580(%var_6546: Tensor[(8, 14, 8), float32], %var_6573: Tensor[(320), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float32], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), bool], Tensor[(320), float32]) {
  %654 = @func_5282() /* ty=(Tensor[(8, 14, 8), float32],) */;
  %655 = %654.0;
  %656 = cast(%var_6546, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
  %657 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%655, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %660 = @func_5550() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float32]) */;
  %661 = cast(%655, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
  %662 = shape_of(%var_6546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%var_6546, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %665 = cast(%var_6573, dtype="float32") /* ty=Tensor[(320), float32] */;
  %666 = reshape(%665, newshape=[8, 40]) /* ty=Tensor[(8, 40), float32] */;
  %667 = @func_4300(%666) /* ty=(Tensor[(5, 4, 16), bool], Tensor[(8, 40), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool]) */;
  %668 = subtract(%658, %659) /* ty=Tensor[(8, 14, 8), float64] */;
  %669 = %660.2;
  %670 = mod(%663, %664) /* ty=Tensor[(8, 14, 8), float64] */;
  %671 = %667.3;
  (%668, %669, %670, %671, %var_6573)
}

def @func_3335(%var_3330: Tensor[(10, 10, 13), float32], %var_3331: Tensor[(10, 10, 13), float32]) -> Tensor[(10, 10, 13), bool] {
  %672 = cast(%var_3331, dtype="bool") /* ty=Tensor[(10, 10, 13), bool] */;
  %673 = shape_of(%var_3330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%var_3330, dtype="bool") /* ty=Tensor[(10, 10, 13), bool] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%674, %675) /* ty=Tensor[(10, 10, 13), bool] */
}

def @func_6969() -> (Tensor[(3, 7, 11), float64],) {
  %676 = @func_2342() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %677 = %676.0;
  (%677,)
}

def @func_3190() -> (Tensor[(8, 14, 8), float64],) {
  %678 = @func_2611() /* ty=Tensor[(8, 14, 8), float64] */;
  (%678,)
}

def @func_2403() -> Tensor[(12, 10, 5), float64] {
  %679 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
  %679.1
}

def @func_2812() -> (Tensor[(15, 5, 15), float64],) {
  %680 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
  %681 = %680.0;
  (%681,)
}

def @func_3293() -> (Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float64], Tensor[(1365), uint64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) {
  %682 = @func_3190() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %683 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %684 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %685 = %684.2;
  %686 = cast(%685, dtype="float64") /* ty=Tensor[(600), float64] */;
  %687 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
  %688 = cast(meta[relay.Constant][16] /* ty=Tensor[(1365), uint64] */, dtype="uint64") /* ty=Tensor[(1365), uint64] */;
  %689 = cast(meta[relay.Constant][16] /* ty=Tensor[(1365), uint64] */, dtype="uint64") /* ty=Tensor[(1365), uint64] */;
  %690 = %683.1;
  %691 = cast(%690, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %692 = reshape(%688, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint64] */;
  %693 = reshape(%689, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint64] */;
  %694 = reshape(%691, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %695 = @func_1622(%692, %693, %694) /* ty=(Tensor[(7, 13, 15), bool], Tensor[(7, 13, 15), bool], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), int64], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool], Tensor[(15, 5, 15), bool]) */;
  %696 = %695.8;
  %697 = cast(%696, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
  %698 = %682.0;
  %699 = erf(%686) /* ty=Tensor[(600), float64] */;
  %700 = %687.2;
  %701 = asinh(%697) /* ty=Tensor[(12, 10, 5), float64] */;
  (%698, %690, %699, meta[relay.Constant][16] /* ty=Tensor[(1365), uint64] */, %700, %701)
}

def @func_5222() -> (Tensor[(1300), float32],) {
  %702 = @func_3564() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) */;
  %703 = %702.3;
  (%703,)
}

def @func_4999(%var_4993: Tensor[(12, 12, 8), float64]) -> Tensor[(12, 12, 8), float64] {
  %704 = cast(%var_4993, dtype="float64") /* ty=Tensor[(12, 12, 8), float64] */;
  tan(%704) /* ty=Tensor[(12, 12, 8), float64] */
}

def @func_235() -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) {
  %705 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %706 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %707 = cast(meta[relay.Constant][17] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %708 = reshape(%707, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %709 = @func_20(%708) /* ty=(Tensor[(3, 7, 1), float64],) */;
  %710 = %709.0;
  %711 = cast(%710, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
  %712 = reshape(%711, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %713 = @func_20(%712) /* ty=(Tensor[(3, 7, 1), float64],) */;
  %714 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %715 = %705.0;
  %716 = %706.0;
  %717 = %713.0;
  %718 = %714.0;
  (%715, %716, %710, meta[relay.Constant][17] /* ty=Tensor[(21), float32] */, %717, %718)
}

def @func_20(%var_6: Tensor[(3, 7, 1), float32]) -> (Tensor[(3, 7, 1), float64],) {
  %719 = cast(%var_6, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
  %720 = log2(%719) /* ty=Tensor[(3, 7, 1), float32] */;
  %721 = cast(%720, dtype="float64") /* ty=Tensor[(3, 7, 1), float64] */;
  %722 = exp(%721) /* ty=Tensor[(3, 7, 1), float64] */;
  (%722,)
}

def @func_3428() -> (Tensor[(600), float32],) {
  %723 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %724 = %723.2;
  (%724,)
}

def @func_3977(%var_3971: Tensor[(12, 5, 11), float64]) -> (Tensor[(12, 5, 11), float64],) {
  %725 = cast(%var_3971, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %726 = atanh(%725) /* ty=Tensor[(12, 5, 11), float64] */;
  (%726,)
}

def @func_4300(%var_4246: Tensor[(8, 40), float32]) -> (Tensor[(5, 4, 16), bool], Tensor[(8, 40), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool]) {
  %727 = cast(%var_4246, dtype="float32") /* ty=Tensor[(8, 40), float32] */;
  %728 = cast(%var_4246, dtype="float32") /* ty=Tensor[(8, 40), float32] */;
  %729 = reshape(%727, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %730 = reshape(%728, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %731 = @func_4032() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %732 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %733 = %732.0;
  %734 = cast(%733, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %735 = log(%734) /* ty=Tensor[(15, 5, 15), float64] */;
  %736 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %737 = %736.0;
  %738 = cast(%737, dtype="int8") /* ty=Tensor[(15, 5, 15), int8] */;
  %739 = shape_of(%733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%733, dtype="int8") /* ty=Tensor[(15, 5, 15), int8] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %742 = right_shift(%740, %741) /* ty=Tensor[(15, 5, 15), int8] */;
  %743 = cast(%742, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %744 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(%735, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %747 = @func_3383(%729, %730) /* ty=Tensor[(5, 4, 16), bool] */;
  %748 = %731.0;
  %749 = greater_equal(%745, %746) /* ty=Tensor[(15, 5, 15), bool] */;
  (%747, %var_4246, %748, %749)
}

def @func_1128(%var_1121: Tensor[(15, 5, 15), int16]) -> Tensor[(15, 5, 15), bool] {
  %750 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
  %751 = %750.1;
  %752 = cast(%var_1121, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%751, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%754, %755) /* ty=Tensor[(15, 5, 15), bool] */
}

def @func_2516() -> Tensor[(8, 14, 8), float32] {
  %756 = @func_1778() /* ty=(Tensor[(8, 14, 8), float32],) */;
  %756.0
}

def @func_511() -> Tensor[(15, 5, 15), float64] {
  %757 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %757.0
}

def @func_861() -> (Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) {
  %758 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
  %759 = %758.1;
  %760 = cast(%759, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %761 = cast(meta[relay.Constant][18] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %762 = reshape(%760, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
  %763 = reshape(%761, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %764 = @func_466(%762, %763) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) */;
  %765 = %764.2;
  (%759, %765, meta[relay.Constant][18] /* ty=Tensor[(600), float32] */)
}

def @func_5138() -> (Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float64]) {
  %766 = @func_2317() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) */;
  %767 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %768 = %766.1;
  %769 = %767.0;
  (%768, %769)
}

def @func_1733() -> (Tensor[(15, 5, 15), float64],) {
  %770 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %771 = %770.5;
  (%771,)
}

def @func_4652() -> (Tensor[(12, 10, 5), float32], Tensor[(1300), float64]) {
  %772 = @func_3726() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(1300), float32], Tensor[(1300), float64], Tensor[(3, 7, 11), float64], Tensor[(3, 7, 11), float32], Tensor[(14, 8, 13), float64], Tensor[(1456, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %773 = @func_1446() /* ty=Tensor[(12, 10, 5), float32] */;
  %774 = %772.2;
  (%773, %774)
}

def @func_6912() -> (Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) {
  %775 = @func_6373() /* ty=(Tensor[(3, 7, 11), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), int16], Tensor[(15, 5, 15), int16]) */;
  %776 = @func_4468() /* ty=(Tensor[(12, 10, 5), float64],) */;
  %777 = %775.2;
  %778 = %776.0;
  (%777, %778)
}

def @func_6919() -> Tensor[(12, 10, 5), float32] {
  @func_4922() /* ty=Tensor[(12, 10, 5), float32] */
}

def @func_30(%var_24: Tensor[(12, 10, 5), float32], %var_25: Tensor[(12, 10, 5), float32]) -> Tensor[(12, 10, 5), float32] {
  %779 = cast(%var_25, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %780 = shape_of(%var_24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_24, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%781, %782) /* ty=Tensor[(12, 10, 5), float32] */
}

def @func_2760(%var_2712: Tensor[(5, 225), float64], %var_2728: Tensor[(5, 225), float64]) -> (Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(5, 225), uint8]) {
  %783 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %784 = cast(%var_2712, dtype="float64") /* ty=Tensor[(5, 225), float64] */;
  %785 = @func_1184() /* ty=Tensor[(12, 10, 5), float64] */;
  %786 = cast(%785, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %787 = reshape(%784, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
  %788 = reshape(%786, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %789 = @func_596(%787, %788) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64]) */;
  %790 = cast(%var_2728, dtype="int8") /* ty=Tensor[(5, 225), int8] */;
  %791 = shape_of(%var_2712, dtype="int32") /* ty=Tensor[(2), int32] */;
  %792 = cast(%var_2712, dtype="int8") /* ty=Tensor[(5, 225), int8] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %794 = subtract(%792, %793) /* ty=Tensor[(5, 225), int8] */;
  %795 = cast(%var_2712, dtype="uint8") /* ty=Tensor[(5, 225), uint8] */;
  %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(2), int32] */;
  %797 = cast(%794, dtype="uint8") /* ty=Tensor[(5, 225), uint8] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %799 = %783.0;
  %800 = %789.1;
  %801 = bitwise_and(%797, %798) /* ty=Tensor[(5, 225), uint8] */;
  (%785, %799, %800, %801)
}

def @func_2885() -> (Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32]) {
  %802 = @func_1184() /* ty=Tensor[(12, 10, 5), float64] */;
  %803 = cast(%802, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %804 = cast(%802, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %805 = reshape(%803, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %806 = reshape(%804, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %807 = @func_30(%805, %806) /* ty=Tensor[(12, 10, 5), float32] */;
  (%802, %807)
}

def @func_7053(%var_7025: Tensor[(60, 10), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64], Tensor[(60, 10), bool]) {
  %808 = @func_5024() /* ty=Tensor[(15, 5, 15), float64] */;
  %809 = cast(%808, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %810 = cast(%var_7025, dtype="float32") /* ty=Tensor[(60, 10), float32] */;
  %811 = reshape(%809, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
  %812 = reshape(%810, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %813 = @func_466(%811, %812) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) */;
  %814 = %813.4;
  %815 = cast(%814, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
  %816 = shape_of(%var_7025, dtype="int32") /* ty=Tensor[(2), int32] */;
  %817 = cast(%var_7025, dtype="bool") /* ty=Tensor[(60, 10), bool] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %819 = @func_2611() /* ty=Tensor[(8, 14, 8), float64] */;
  %820 = equal(%817, %818) /* ty=Tensor[(60, 10), bool] */;
  (%819, %808, %820)
}

def @func_2154(%var_2127: Tensor[(1456), float64]) -> (Tensor[(15, 5, 15), float64], Tensor[(14, 8, 13), float64], Tensor[(1456), float64], Tensor[(8, 14, 8), float32]) {
  %821 = cast(%var_2127, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %822 = reshape(%821, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), float64] */;
  %823 = @func_2007(%822) /* ty=(Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64]) */;
  %824 = @func_1778() /* ty=(Tensor[(8, 14, 8), float32],) */;
  %825 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
  %826 = %823.1;
  %827 = %824.0;
  (%825, %826, %var_2127, %827)
}

def @func_4870() -> (Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32]) {
  %828 = @func_4032() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %829 = @func_3564() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) */;
  %830 = %829.0;
  %831 = cast(%830, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
  %832 = cos(%831) /* ty=Tensor[(8, 14, 8), float64] */;
  %833 = cast(%832, dtype="float32") /* ty=Tensor[(8, 14, 8), float32] */;
  %834 = %828.0;
  %835 = atan(%833) /* ty=Tensor[(8, 14, 8), float32] */;
  (%834, %835)
}

def @func_4569(%var_4546: Tensor[(16, 7, 16), float32]) -> (Tensor[(16, 7, 16), float32], Tensor[(8, 14, 8), float64]) {
  %836 = cast(%var_4546, dtype="float32") /* ty=Tensor[(16, 7, 16), float32] */;
  %837 = @func_1005() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %838 = sinh(%836) /* ty=Tensor[(16, 7, 16), float32] */;
  %839 = %837.0;
  (%838, %839)
}

def @func_4217() -> (Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), bool], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(1, 1125), float64]) {
  %840 = cast(meta[relay.Constant][19] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %841 = reshape(%840, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %842 = @func_1955(%841) /* ty=(Tensor[(12, 10, 5), bool],) */;
  %843 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 1125), float64] */, dtype="float64") /* ty=Tensor[(1, 1125), float64] */;
  %844 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 1125), float64] */, dtype="float64") /* ty=Tensor[(1, 1125), float64] */;
  %845 = reshape(%843, newshape=[5, 225]) /* ty=Tensor[(5, 225), float64] */;
  %846 = reshape(%844, newshape=[5, 225]) /* ty=Tensor[(5, 225), float64] */;
  %847 = @func_2760(%845, %846) /* ty=(Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(5, 225), uint8]) */;
  %848 = @func_992() /* ty=Tensor[(3, 7, 1), float64] */;
  %849 = %842.0;
  %850 = %847.1;
  (%848, %849, meta[relay.Constant][19] /* ty=Tensor[(600), float32] */, %850, meta[relay.Constant][20] /* ty=Tensor[(1, 1125), float64] */)
}

def @func_4987() -> Tensor[(15, 5, 15), float64] {
  %851 = @func_4032() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %851.0
}

def @func_2444() -> (Tensor[(3, 7, 11), float64],) {
  %852 = @func_2342() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %853 = %852.0;
  (%853,)
}

def @func_2851() -> Tensor[(15, 5, 15), float64] {
  @func_2641() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_1446() -> Tensor[(12, 10, 5), float32] {
  %854 = @func_867() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %854.0
}

def @func_1083() -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64]) {
  %855 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %856 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %857 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %858 = %855.0;
  %859 = %856.0;
  %860 = %857.0;
  %861 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
  (%858, %859, %860, %861)
}

def @func_3564() -> (Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) {
  %862 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %863 = cast(meta[relay.Constant][22] /* ty=Tensor[(1300), float32] */, dtype="float32") /* ty=Tensor[(1300), float32] */;
  %864 = cast(meta[relay.Constant][22] /* ty=Tensor[(1300), float32] */, dtype="float32") /* ty=Tensor[(1300), float32] */;
  %865 = reshape(%863, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
  %866 = reshape(%864, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
  %867 = cast(meta[relay.Constant][21] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %868 = reshape(%867, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %869 = @func_20(%868) /* ty=(Tensor[(3, 7, 1), float64],) */;
  %870 = %869.0;
  %871 = cast(%870, dtype="int32") /* ty=Tensor[(3, 7, 1), int32] */;
  %872 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 7, 10), float64] */, dtype="int32") /* ty=Tensor[(3, 7, 10), int32] */;
  %873 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %874 = %862.0;
  %875 = @func_3335(%865, %866) /* ty=Tensor[(10, 10, 13), bool] */;
  %876 = minimum(%871, %872) /* ty=Tensor[(3, 7, 10), int32] */;
  %877 = %873.0;
  %878 = @func_2403() /* ty=Tensor[(12, 10, 5), float64] */;
  (%874, meta[relay.Constant][21] /* ty=Tensor[(21), float32] */, %875, meta[relay.Constant][22] /* ty=Tensor[(1300), float32] */, %876, %877, %878)
}

def @func_3616() -> (Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool]) {
  %879 = @func_2227() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %880 = @func_867() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %881 = %880.0;
  %882 = @func_1184() /* ty=Tensor[(12, 10, 5), float64] */;
  %883 = cast(%882, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
  %884 = shape_of(%881, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%881, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %887 = %879.0;
  %888 = logical_and(%885, %886) /* ty=Tensor[(12, 10, 5), bool] */;
  (%887, %888)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5025() -> Tensor[(15, 5, 15), float64] {
  %1 = fn () -> Tensor[(15, 5, 15), float64] {
    %0 = @func_3962() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(14, 14, 12), bool], Tensor[(2352), bool], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) */;
    %0.4
  };
  %1() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_5870() -> Tensor[(15, 5, 15), float64] {
  %3 = fn () -> Tensor[(15, 5, 15), float64] {
    %2 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %2.0
  };
  %3() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_5837() -> (Tensor[(15, 5, 15), int16],) {
  @func_5835() /* ty=(Tensor[(15, 5, 15), int16],) */
}

def @func_194() -> (Tensor[(15, 5, 15), float64],) {
  %6 = fn () -> (Tensor[(15, 5, 15), float64],) {
    %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 5, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
    %5 = rsqrt(%4) /* ty=Tensor[(15, 5, 15), float64] */;
    (%5,)
  };
  %6() /* ty=(Tensor[(15, 5, 15), float64],) */
}

def @func_6301() -> (Tensor[(8, 14, 8), float64],) {
  @func_6299() /* ty=(Tensor[(8, 14, 8), float64],) */
}

def @func_7146() -> Tensor[(3, 7, 11), float64] {
  @func_7144() /* ty=Tensor[(3, 7, 11), float64] */
}

def @func_4818(%var_4817: Tensor[(130, 10), float32]) -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(130, 10), float32]) {
  %17 = fn (%var_4810: Tensor[(130, 10), float32]) -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(130, 10), float32]) {
    %7 = @func_867() /* ty=(Tensor[(12, 10, 5), float32],) */;
    %8 = @func_2317() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) */;
    %9 = cast(%var_4810, dtype="float32") /* ty=Tensor[(130, 10), float32] */;
    %10 = cast(%var_4810, dtype="float32") /* ty=Tensor[(130, 10), float32] */;
    %11 = reshape(%9, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
    %12 = reshape(%10, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
    %13 = %7.0;
    %14 = %8.1;
    %15 = @func_1184() /* ty=Tensor[(12, 10, 5), float64] */;
    %16 = @func_3335(%11, %12) /* ty=Tensor[(10, 10, 13), bool] */;
    (%13, %14, %15, %16, %var_4810)
  };
  %17(%var_4817) /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(130, 10), float32]) */
}

def @func_6664() -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64]) {
  %24 = fn () -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64]) {
    %18 = @func_2641() /* ty=Tensor[(15, 5, 15), float64] */;
    %19 = cast(%18, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
    %20 = exp(%19) /* ty=Tensor[(15, 5, 15), float32] */;
    %21 = cast(%20, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
    %22 = @func_5428() /* ty=Tensor[(15, 5, 15), float64] */;
    %23 = log2(%21) /* ty=Tensor[(15, 5, 15), float64] */;
    (%22, %23)
  };
  %24() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64]) */
}

def @func_3728() -> (Tensor[(12, 10, 5), float32], Tensor[(1300), float32], Tensor[(1300), float64], Tensor[(3, 7, 11), float64], Tensor[(3, 7, 11), float32], Tensor[(14, 8, 13), float64], Tensor[(1456, 1), float64], Tensor[(15, 5, 15), float64]) {
  @func_3726() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(1300), float32], Tensor[(1300), float64], Tensor[(3, 7, 11), float64], Tensor[(3, 7, 11), float32], Tensor[(14, 8, 13), float64], Tensor[(1456, 1), float64], Tensor[(15, 5, 15), float64]) */
}

def @func_2572() -> (Tensor[(3, 7, 11), float32],) {
  @func_2570() /* ty=(Tensor[(3, 7, 11), float32],) */
}

def @func_811() -> (Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) {
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
  %26 = cast(meta[relay.Constant][2] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %28 = reshape(%26, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %29 = reshape(%27, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %30 = atanh(%25) /* ty=Tensor[(8, 14, 8), float64] */;
  %31 = @func_30(%28, %29) /* ty=Tensor[(12, 10, 5), float32] */;
  (%30, %31, meta[relay.Constant][2] /* ty=Tensor[(600), float32] */)
}

def @func_1505(%var_1503: Tensor[(14, 9, 3), float64], %var_1504: Tensor[(14, 9, 3), float64]) -> (Tensor[(14, 9, 3), float64], Tensor[(14, 9, 3), bool]) {
  %41 = fn (%var_1448: Tensor[(14, 9, 3), float64], %var_1498: Tensor[(14, 9, 3), float64]) -> (Tensor[(14, 9, 3), float64], Tensor[(14, 9, 3), bool]) {
    %32 = cast(%var_1448, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
    %33 = log(%32) /* ty=Tensor[(14, 9, 3), float64] */;
    %34 = cast(%33, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
    %35 = cast(%var_1498, dtype="bool") /* ty=Tensor[(14, 9, 3), bool] */;
    %36 = shape_of(%var_1448, dtype="int32") /* ty=Tensor[(3), int32] */;
    %37 = cast(%var_1448, dtype="bool") /* ty=Tensor[(14, 9, 3), bool] */;
    %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %39 = log2(%34) /* ty=Tensor[(14, 9, 3), float64] */;
    %40 = equal(%37, %38) /* ty=Tensor[(14, 9, 3), bool] */;
    (%39, %40)
  };
  %41(%var_1503, %var_1504) /* ty=(Tensor[(14, 9, 3), float64], Tensor[(14, 9, 3), bool]) */
}

def @func_2445() -> (Tensor[(3, 7, 11), float64],) {
  %44 = fn () -> (Tensor[(3, 7, 11), float64],) {
    %42 = @func_2342() /* ty=(Tensor[(3, 7, 11), float64],) */;
    %43 = %42.0;
    (%43,)
  };
  %44() /* ty=(Tensor[(3, 7, 11), float64],) */
}

def @func_1780() -> (Tensor[(8, 14, 8), float32],) {
  @func_1778() /* ty=(Tensor[(8, 14, 8), float32],) */
}

def @func_3980(%var_3978: Tensor[(12, 5, 11), float64]) -> (Tensor[(12, 5, 11), float64],) {
  @func_3977(%var_3978) /* ty=(Tensor[(12, 5, 11), float64],) */
}

def @func_2518() -> Tensor[(8, 14, 8), float32] {
  @func_2516() /* ty=Tensor[(8, 14, 8), float32] */
}

def @func_3618() -> (Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool]) {
  @func_3616() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool]) */
}

def @func_1131(%var_1129: Tensor[(15, 5, 15), int16]) -> Tensor[(15, 5, 15), bool] {
  @func_1128(%var_1129) /* ty=Tensor[(15, 5, 15), bool] */
}

def @func_3674(%var_3673: Tensor[(600), float32]) -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(600), float32], Tensor[(8, 14, 8), float64]) {
  %55 = fn (%var_3633: Tensor[(600), float32]) -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(600), float32], Tensor[(8, 14, 8), float64]) {
    %45 = @func_2812() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %46 = %45.0;
    %47 = cast(%46, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
    %48 = cast(%var_3633, dtype="float32") /* ty=Tensor[(600), float32] */;
    %49 = reshape(%47, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
    %50 = reshape(%48, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %51 = @func_596(%49, %50) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64]) */;
    %52 = @func_1005() /* ty=(Tensor[(8, 14, 8), float64],) */;
    %53 = %51.0;
    %54 = %52.0;
    (%46, %53, %var_3633, %54)
  };
  %55(%var_3673) /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(600), float32], Tensor[(8, 14, 8), float64]) */
}

def @func_3191() -> (Tensor[(8, 14, 8), float64],) {
  %57 = fn () -> (Tensor[(8, 14, 8), float64],) {
    %56 = @func_2611() /* ty=Tensor[(8, 14, 8), float64] */;
    (%56,)
  };
  %57() /* ty=(Tensor[(8, 14, 8), float64],) */
}

def @func_7096() -> (Tensor[(12, 10, 5), float64], Tensor[(8, 14, 8), float64], Tensor[(1125), uint16], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64]) {
  %58 = @func_6912() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) */;
  %59 = %58.1;
  %60 = cast(%59, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(1125), uint16] */, dtype="uint16") /* ty=Tensor[(1125), uint16] */;
  %62 = reshape(%60, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %63 = reshape(%61, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), uint16] */;
  %64 = @func_1910(%62, %63) /* ty=(Tensor[(15, 5, 15), float32], Tensor[(8, 14, 8), float64], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64], Tensor[(21), float32], Tensor[(600), float32], Tensor[(21), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int8], Tensor[(14, 14, 12), bool], Tensor[(15, 5, 15), int16], Tensor[(600), float32]) */;
  %65 = @func_4468() /* ty=(Tensor[(12, 10, 5), float64],) */;
  %66 = %64.1;
  %67 = @func_1446() /* ty=Tensor[(12, 10, 5), float32] */;
  %68 = %65.0;
  (%59, %66, meta[relay.Constant][3] /* ty=Tensor[(1125), uint16] */, %67, %68)
}

def @func_3565() -> (Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) {
  %86 = fn () -> (Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) {
    %69 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
    %70 = cast(meta[relay.Constant][5] /* ty=Tensor[(1300), float32] */, dtype="float32") /* ty=Tensor[(1300), float32] */;
    %71 = cast(meta[relay.Constant][5] /* ty=Tensor[(1300), float32] */, dtype="float32") /* ty=Tensor[(1300), float32] */;
    %72 = reshape(%70, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
    %73 = reshape(%71, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
    %74 = cast(meta[relay.Constant][4] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
    %75 = reshape(%74, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
    %76 = @func_20(%75) /* ty=(Tensor[(3, 7, 1), float64],) */;
    %77 = %76.0;
    %78 = cast(%77, dtype="int32") /* ty=Tensor[(3, 7, 1), int32] */;
    %79 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 7, 10), float64] */, dtype="int32") /* ty=Tensor[(3, 7, 10), int32] */;
    %80 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %81 = %69.0;
    %82 = @func_3335(%72, %73) /* ty=Tensor[(10, 10, 13), bool] */;
    %83 = minimum(%78, %79) /* ty=Tensor[(3, 7, 10), int32] */;
    %84 = %80.0;
    %85 = @func_2403() /* ty=Tensor[(12, 10, 5), float64] */;
    (%81, meta[relay.Constant][4] /* ty=Tensor[(21), float32] */, %82, meta[relay.Constant][5] /* ty=Tensor[(1300), float32] */, %83, %84, %85)
  };
  %86() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) */
}

def @func_329(%var_258: Tensor[(600), float32]) -> (Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64], Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) {
  %87 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %88 = cast(%var_258, dtype="float32") /* ty=Tensor[(600), float32] */;
  %89 = cast(%var_258, dtype="float32") /* ty=Tensor[(600), float32] */;
  %90 = reshape(%88, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %91 = reshape(%89, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %92 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %93 = @func_30(%90, %91) /* ty=Tensor[(12, 10, 5), float32] */;
  %94 = cast(%93, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %95 = cast(%93, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %96 = reshape(%94, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %97 = reshape(%95, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %98 = %87.2;
  %99 = cast(%98, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
  %100 = reshape(%99, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %101 = @func_20(%100) /* ty=(Tensor[(3, 7, 1), float64],) */;
  %102 = cast(%98, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
  %103 = reshape(%102, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %104 = @func_20(%103) /* ty=(Tensor[(3, 7, 1), float64],) */;
  %105 = @func_30(%96, %97) /* ty=Tensor[(12, 10, 5), float32] */;
  %106 = cast(%105, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %107 = cast(%var_258, dtype="float32") /* ty=Tensor[(600), float32] */;
  %108 = reshape(%106, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %109 = reshape(%107, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %110 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %111 = cast(%105, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %112 = @func_30(%108, %109) /* ty=Tensor[(12, 10, 5), float32] */;
  %113 = cast(%112, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %114 = reshape(%111, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %115 = reshape(%113, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %116 = %92.5;
  %117 = %101.0;
  %118 = %104.0;
  %119 = %110.0;
  %120 = @func_30(%114, %115) /* ty=Tensor[(12, 10, 5), float32] */;
  (%98, %93, %var_258, %116, %105, %117, %118, %112, %119, %120)
}

def @func_1958(%var_1956: Tensor[(12, 10, 5), float32]) -> (Tensor[(12, 10, 5), bool],) {
  @func_1955(%var_1956) /* ty=(Tensor[(12, 10, 5), bool],) */
}

def @func_7440(%var_7437: Tensor[(9, 9, 8), bool], %var_7438: Tensor[(9, 9, 8), bool], %var_7439: Tensor[(1, 1300), float32]) -> (Tensor[(9, 9, 8), bool], Tensor[(12, 10, 5), float32], Tensor[(1, 1300), float32]) {
  @func_7435(%var_7437, %var_7438, %var_7439) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(12, 10, 5), float32], Tensor[(1, 1300), float32]) */
}

def @func_7529(%var_7527: Tensor[(600), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(600), bool]) {
  @func_7526(%var_7527) /* ty=(Tensor[(8, 14, 8), float64], Tensor[(600), bool]) */
}

def @func_1910(%var_1825: Tensor[(600), float32], %var_1860: Tensor[(15, 5, 15), uint16]) -> (Tensor[(15, 5, 15), float32], Tensor[(8, 14, 8), float64], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64], Tensor[(21), float32], Tensor[(600), float32], Tensor[(21), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int8], Tensor[(14, 14, 12), bool], Tensor[(15, 5, 15), int16], Tensor[(600), float32]) {
  %121 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
  %122 = %121.1;
  %123 = cast(%122, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %124 = sigmoid(%123) /* ty=Tensor[(15, 5, 15), float64] */;
  %125 = cast(%124, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
  %126 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%122, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %129 = @func_1005() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %130 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %131 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %132 = cast(%124, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
  %133 = atanh(%132) /* ty=Tensor[(15, 5, 15), float32] */;
  %134 = cast(%133, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %135 = cast(%var_1825, dtype="float32") /* ty=Tensor[(600), float32] */;
  %136 = reshape(%134, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
  %137 = reshape(%135, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %138 = @func_596(%136, %137) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64]) */;
  %139 = cast(%var_1825, dtype="float32") /* ty=Tensor[(600), float32] */;
  %140 = reshape(%139, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %141 = @func_1428(%140) /* ty=(Tensor[(21), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(14, 14, 12), bool], Tensor[(2352), bool]) */;
  %142 = @func_1083() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64]) */;
  %143 = cast(%124, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %144 = cos(%143) /* ty=Tensor[(15, 5, 15), float64] */;
  %145 = cast(%144, dtype="uint16") /* ty=Tensor[(15, 5, 15), uint16] */;
  %146 = shape_of(%133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%133, dtype="uint16") /* ty=Tensor[(15, 5, 15), uint16] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %149 = bitwise_or(%147, %148) /* ty=Tensor[(15, 5, 15), uint16] */;
  %150 = cast(%var_1860, dtype="int8") /* ty=Tensor[(15, 5, 15), int8] */;
  %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%149, dtype="int8") /* ty=Tensor[(15, 5, 15), int8] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %154 = cast(%var_1825, dtype="float32") /* ty=Tensor[(600), float32] */;
  %155 = reshape(%154, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %156 = @func_1428(%155) /* ty=(Tensor[(21), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(14, 14, 12), bool], Tensor[(2352), bool]) */;
  %157 = cast(%var_1825, dtype="float32") /* ty=Tensor[(600), float32] */;
  %158 = reshape(%157, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %159 = @func_1428(%158) /* ty=(Tensor[(21), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(14, 14, 12), bool], Tensor[(2352), bool]) */;
  %160 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %161 = floor_divide(%127, %128) /* ty=Tensor[(15, 5, 15), float32] */;
  %162 = %129.0;
  %163 = %130.2;
  %164 = %131.0;
  %165 = %138.1;
  %166 = %141.0;
  %167 = %142.1;
  %168 = subtract(%152, %153) /* ty=Tensor[(15, 5, 15), int8] */;
  %169 = %156.3;
  %170 = %159.2;
  %171 = %160.2;
  (%161, %162, %163, %164, %165, %var_1825, %166, %167, %168, %169, %170, %171)
}

def @func_4700(%var_4693: Tensor[(7, 7, 12), float32], %var_4694: Tensor[(7, 7, 12), float32]) -> Tensor[(7, 7, 12), float32] {
  %172 = cast(%var_4694, dtype="float32") /* ty=Tensor[(7, 7, 12), float32] */;
  %173 = shape_of(%var_4693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%var_4693, dtype="float32") /* ty=Tensor[(7, 7, 12), float32] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%174, %175) /* ty=Tensor[(7, 7, 12), float32] */
}

def @func_5679() -> (Tensor[(3, 7, 11), float64],) {
  %176 = @func_2342() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %177 = %176.0;
  (%177,)
}

def @func_1071() -> (Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) {
  %184 = fn () -> (Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) {
    %178 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
    %179 = %178.1;
    %180 = cast(%179, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
    %181 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
    %182 = sqrt(%180) /* ty=Tensor[(15, 5, 15), float64] */;
    %183 = %181.1;
    (%182, %183)
  };
  %184() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */
}

def @func_3293() -> (Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float64], Tensor[(1365), uint64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) {
  %185 = @func_3190() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %186 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %187 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %188 = %187.2;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(600), float64] */;
  %190 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
  %191 = cast(meta[relay.Constant][7] /* ty=Tensor[(1365), uint64] */, dtype="uint64") /* ty=Tensor[(1365), uint64] */;
  %192 = cast(meta[relay.Constant][7] /* ty=Tensor[(1365), uint64] */, dtype="uint64") /* ty=Tensor[(1365), uint64] */;
  %193 = %186.1;
  %194 = cast(%193, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %195 = reshape(%191, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint64] */;
  %196 = reshape(%192, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint64] */;
  %197 = reshape(%194, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %198 = @func_1622(%195, %196, %197) /* ty=(Tensor[(7, 13, 15), bool], Tensor[(7, 13, 15), bool], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), int64], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool], Tensor[(15, 5, 15), bool]) */;
  %199 = %198.8;
  %200 = cast(%199, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
  %201 = %185.0;
  %202 = erf(%189) /* ty=Tensor[(600), float64] */;
  %203 = %190.2;
  %204 = asinh(%200) /* ty=Tensor[(12, 10, 5), float64] */;
  (%201, %193, %202, meta[relay.Constant][7] /* ty=Tensor[(1365), uint64] */, %203, %204)
}

def @func_1626(%var_1623: Tensor[(7, 13, 15), uint64], %var_1624: Tensor[(7, 13, 15), uint64], %var_1625: Tensor[(12, 10, 5), float32]) -> (Tensor[(7, 13, 15), bool], Tensor[(7, 13, 15), bool], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), int64], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool], Tensor[(15, 5, 15), bool]) {
  %248 = fn (%var_1518: Tensor[(7, 13, 15), uint64], %var_1519: Tensor[(7, 13, 15), uint64], %var_1607: Tensor[(12, 10, 5), float32]) -> (Tensor[(7, 13, 15), bool], Tensor[(7, 13, 15), bool], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), int64], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool], Tensor[(15, 5, 15), bool]) {
    %205 = cast(%var_1519, dtype="bool") /* ty=Tensor[(7, 13, 15), bool] */;
    %206 = shape_of(%var_1518, dtype="int32") /* ty=Tensor[(3), int32] */;
    %207 = cast(%var_1518, dtype="bool") /* ty=Tensor[(7, 13, 15), bool] */;
    %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %209 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 13, 15), uint64] */, dtype="bool") /* ty=Tensor[(7, 13, 15), bool] */;
    %210 = shape_of(%var_1518, dtype="int32") /* ty=Tensor[(3), int32] */;
    %211 = cast(%var_1518, dtype="bool") /* ty=Tensor[(7, 13, 15), bool] */;
    %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %213 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
    %214 = %213.0;
    %215 = cast(%214, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
    %216 = reshape(%215, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), int16] */;
    %217 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
    %218 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
    %219 = %218.3;
    %220 = cast(%219, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %221 = cos(%220) /* ty=Tensor[(12, 10, 5), float32] */;
    %222 = %217.1;
    %223 = cast(%222, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %224 = cast(%221, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %225 = reshape(%223, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %226 = reshape(%224, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %227 = @func_30(%225, %226) /* ty=Tensor[(12, 10, 5), float32] */;
    %228 = cast(%227, dtype="int64") /* ty=Tensor[(12, 10, 5), int64] */;
    %229 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
    %230 = cast(%221, dtype="int64") /* ty=Tensor[(12, 10, 5), int64] */;
    %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %232 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
    %233 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
    %234 = cast(%var_1607, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
    %235 = shape_of(%227, dtype="int32") /* ty=Tensor[(3), int32] */;
    %236 = cast(%227, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
    %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %238 = cast(%214, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
    %239 = reshape(%238, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), int16] */;
    %240 = equal(%207, %208) /* ty=Tensor[(7, 13, 15), bool] */;
    %241 = logical_or(%211, %212) /* ty=Tensor[(7, 13, 15), bool] */;
    %242 = @func_1128(%216) /* ty=Tensor[(15, 5, 15), bool] */;
    %243 = right_shift(%230, %231) /* ty=Tensor[(12, 10, 5), int64] */;
    %244 = %232.2;
    %245 = %233.0;
    %246 = less(%236, %237) /* ty=Tensor[(12, 10, 5), bool] */;
    %247 = @func_1128(%239) /* ty=Tensor[(15, 5, 15), bool] */;
    (%240, %241, %214, %242, %222, %243, %244, %245, %246, %247)
  };
  %248(%var_1623, %var_1624, %var_1625) /* ty=(Tensor[(7, 13, 15), bool], Tensor[(7, 13, 15), bool], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), int64], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool], Tensor[(15, 5, 15), bool]) */
}

def @func_599(%var_597: Tensor[(15, 5, 15), float64], %var_598: Tensor[(600), float32]) -> (Tensor[(15, 5, 15), bool], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64]) {
  %270 = fn (%var_547: Tensor[(15, 5, 15), float64], %var_583: Tensor[(600), float32]) -> (Tensor[(15, 5, 15), bool], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64]) {
    %249 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %250 = %249.0;
    %251 = cast(%var_547, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
    %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
    %253 = cast(%250, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
    %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %255 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
    %256 = cast(%var_583, dtype="float32") /* ty=Tensor[(600), float32] */;
    %257 = cast(%var_583, dtype="float32") /* ty=Tensor[(600), float32] */;
    %258 = reshape(%256, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %259 = reshape(%257, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %260 = cast(%var_583, dtype="float32") /* ty=Tensor[(600), float32] */;
    %261 = cast(%var_583, dtype="float32") /* ty=Tensor[(600), float32] */;
    %262 = reshape(%260, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %263 = reshape(%261, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %264 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
    %265 = not_equal(%253, %254) /* ty=Tensor[(15, 5, 15), bool] */;
    %266 = %255.3;
    %267 = @func_30(%258, %259) /* ty=Tensor[(12, 10, 5), float32] */;
    %268 = @func_30(%262, %263) /* ty=Tensor[(12, 10, 5), float32] */;
    %269 = %264.2;
    (%265, %266, %267, %var_583, %268, %269)
  };
  %270(%var_597, %var_598) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64]) */
}

def @func_1431(%var_1429: Tensor[(12, 10, 5), float32]) -> (Tensor[(21), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(14, 14, 12), bool], Tensor[(2352), bool]) {
  @func_1428(%var_1429) /* ty=(Tensor[(21), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(14, 14, 12), bool], Tensor[(2352), bool]) */
}

def @func_2763(%var_2761: Tensor[(5, 225), float64], %var_2762: Tensor[(5, 225), float64]) -> (Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(5, 225), uint8]) {
  %290 = fn (%var_2712: Tensor[(5, 225), float64], %var_2728: Tensor[(5, 225), float64]) -> (Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(5, 225), uint8]) {
    %271 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
    %272 = cast(%var_2712, dtype="float64") /* ty=Tensor[(5, 225), float64] */;
    %273 = @func_1184() /* ty=Tensor[(12, 10, 5), float64] */;
    %274 = cast(%273, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %275 = reshape(%272, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
    %276 = reshape(%274, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %277 = @func_596(%275, %276) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64]) */;
    %278 = cast(%var_2728, dtype="int8") /* ty=Tensor[(5, 225), int8] */;
    %279 = shape_of(%var_2712, dtype="int32") /* ty=Tensor[(2), int32] */;
    %280 = cast(%var_2712, dtype="int8") /* ty=Tensor[(5, 225), int8] */;
    %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %282 = subtract(%280, %281) /* ty=Tensor[(5, 225), int8] */;
    %283 = cast(%var_2712, dtype="uint8") /* ty=Tensor[(5, 225), uint8] */;
    %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(2), int32] */;
    %285 = cast(%282, dtype="uint8") /* ty=Tensor[(5, 225), uint8] */;
    %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %287 = %271.0;
    %288 = %277.1;
    %289 = bitwise_and(%285, %286) /* ty=Tensor[(5, 225), uint8] */;
    (%273, %287, %288, %289)
  };
  %290(%var_2761, %var_2762) /* ty=(Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(5, 225), uint8]) */
}

def @func_6373() -> (Tensor[(3, 7, 11), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), int16], Tensor[(15, 5, 15), int16]) {
  %291 = @func_2444() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %292 = @func_6299() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %293 = @func_6083() /* ty=(Tensor[(15, 5, 15), int16],) */;
  %294 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %295 = %291.0;
  %296 = %292.0;
  %297 = %293.0;
  %298 = %294.0;
  (%295, %296, %297, %298)
}

def @func_2813() -> (Tensor[(15, 5, 15), float64],) {
  %301 = fn () -> (Tensor[(15, 5, 15), float64],) {
    %299 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
    %300 = %299.0;
    (%300,)
  };
  %301() /* ty=(Tensor[(15, 5, 15), float64],) */
}

def @func_5552() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float32]) {
  @func_5550() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float32]) */
}

def @func_4108() -> (Tensor[(1365), uint64], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) {
  %308 = fn () -> (Tensor[(1365), uint64], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) {
    %302 = @func_3293() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float64], Tensor[(1365), uint64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) */;
    %303 = @func_2812() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %304 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
    %305 = %302.3;
    %306 = %303.0;
    %307 = %304.0;
    (%305, %306, %307)
  };
  %308() /* ty=(Tensor[(1365), uint64], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */
}

def @func_4218() -> (Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), bool], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(1, 1125), float64]) {
  %320 = fn () -> (Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), bool], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(1, 1125), float64]) {
    %309 = cast(meta[relay.Constant][9] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
    %310 = reshape(%309, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %311 = @func_1955(%310) /* ty=(Tensor[(12, 10, 5), bool],) */;
    %312 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 1125), float64] */, dtype="float64") /* ty=Tensor[(1, 1125), float64] */;
    %313 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 1125), float64] */, dtype="float64") /* ty=Tensor[(1, 1125), float64] */;
    %314 = reshape(%312, newshape=[5, 225]) /* ty=Tensor[(5, 225), float64] */;
    %315 = reshape(%313, newshape=[5, 225]) /* ty=Tensor[(5, 225), float64] */;
    %316 = @func_2760(%314, %315) /* ty=(Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(5, 225), uint8]) */;
    %317 = @func_992() /* ty=Tensor[(3, 7, 1), float64] */;
    %318 = %311.0;
    %319 = %316.1;
    (%317, %318, meta[relay.Constant][9] /* ty=Tensor[(600), float32] */, %319, meta[relay.Constant][10] /* ty=Tensor[(1, 1125), float64] */)
  };
  %320() /* ty=(Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), bool], Tensor[(600), float32], Tensor[(12, 10, 5), float32], Tensor[(1, 1125), float64]) */
}

def @func_5430() -> Tensor[(15, 5, 15), float64] {
  @func_5428() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_5989() -> Tensor[(15, 5, 15), float64] {
  @func_2851() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_2009(%var_2008: Tensor[(14, 8, 13), float64]) -> (Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64]) {
  %325 = fn (%var_2000: Tensor[(14, 8, 13), float64]) -> (Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64]) {
    %321 = cast(%var_2000, dtype="float64") /* ty=Tensor[(14, 8, 13), float64] */;
    %322 = cast(%var_2000, dtype="float64") /* ty=Tensor[(14, 8, 13), float64] */;
    %323 = asinh(%321) /* ty=Tensor[(14, 8, 13), float64] */;
    %324 = acosh(%322) /* ty=Tensor[(14, 8, 13), float64] */;
    (%323, %324)
  };
  %325(%var_2008) /* ty=(Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64]) */
}

def @func_6375() -> (Tensor[(3, 7, 11), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), int16], Tensor[(15, 5, 15), int16]) {
  @func_6373() /* ty=(Tensor[(3, 7, 11), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), int16], Tensor[(15, 5, 15), int16]) */
}

def @func_5222() -> (Tensor[(1300), float32],) {
  %326 = @func_3564() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) */;
  %327 = %326.3;
  (%327,)
}

def @func_2887() -> (Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32]) {
  @func_2885() /* ty=(Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32]) */
}

def @func_6401() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) {
  %328 = @func_3616() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool]) */;
  %329 = %328.0;
  %330 = @func_5610() /* ty=Tensor[(3, 7, 11), bool] */;
  (%329, %330)
}

def @func_7435(%var_7424: Tensor[(9, 9, 8), bool], %var_7425: Tensor[(9, 9, 8), bool], %var_7433: Tensor[(1, 1300), float32]) -> (Tensor[(9, 9, 8), bool], Tensor[(12, 10, 5), float32], Tensor[(1, 1300), float32]) {
  %331 = cast(%var_7425, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %332 = shape_of(%var_7424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_7424, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = cast(%var_7433, dtype="float32") /* ty=Tensor[(1, 1300), float32] */;
  %336 = reshape(%335, newshape=[130, 10]) /* ty=Tensor[(130, 10), float32] */;
  %337 = @func_4816(%336) /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(130, 10), float32]) */;
  %338 = logical_and(%333, %334) /* ty=Tensor[(9, 9, 8), bool] */;
  %339 = %337.0;
  (%338, %339, %var_7433)
}

def @func_2851() -> Tensor[(15, 5, 15), float64] {
  @func_2641() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_4303(%var_4301: Tensor[(8, 40), float32]) -> (Tensor[(5, 4, 16), bool], Tensor[(8, 40), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool]) {
  @func_4300(%var_4301) /* ty=(Tensor[(5, 4, 16), bool], Tensor[(8, 40), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool]) */
}

def @func_813() -> (Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) {
  @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */
}

def @func_5785(%var_5741: Tensor[(270), float64]) -> (Tensor[(15, 5, 15), float64], Tensor[(3, 7, 11), bool], Tensor[(9, 3, 10), float64], Tensor[(270), float64], Tensor[(12, 5, 11), float64], Tensor[(12, 5, 11), float32], Tensor[(8, 14, 8), float32]) {
  %340 = @func_4870() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32]) */;
  %341 = cast(%var_5741, dtype="float64") /* ty=Tensor[(270), float64] */;
  %342 = reshape(%341, newshape=[9, 3, 10]) /* ty=Tensor[(9, 3, 10), float64] */;
  %343 = @func_2384(%342) /* ty=(Tensor[(9, 3, 10), float64],) */;
  %344 = cast(meta[relay.Constant][11] /* ty=Tensor[(5, 132), float64] */, dtype="float64") /* ty=Tensor[(5, 132), float64] */;
  %345 = reshape(%344, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
  %346 = @func_3977(%345) /* ty=(Tensor[(12, 5, 11), float64],) */;
  %347 = %346.0;
  %348 = cast(meta[relay.Constant][11] /* ty=Tensor[(5, 132), float64] */, dtype="float64") /* ty=Tensor[(5, 132), float64] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %352 = cast(%347, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %353 = acosh(%352) /* ty=Tensor[(12, 5, 11), float64] */;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(12, 5, 11), float32] */;
  %355 = %340.0;
  %356 = @func_5610() /* ty=Tensor[(3, 7, 11), bool] */;
  %357 = %343.0;
  %358 = add(%350, %351) /* ty=Tensor[(12, 5, 11), float64] */;
  %359 = acos(%354) /* ty=Tensor[(12, 5, 11), float32] */;
  %360 = @func_2516() /* ty=Tensor[(8, 14, 8), float32] */;
  (%355, %356, %357, %var_5741, %358, %359, %360)
}

def @func_1356() -> (Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) {
  %377 = fn () -> (Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) {
    %361 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
    %362 = %361.1;
    %363 = cast(%362, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %364 = reshape(%363, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %365 = @func_329(%364) /* ty=(Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64], Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
    %366 = %365.7;
    %367 = cast(%366, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
    %368 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
    %369 = %368.0;
    %370 = cast(%369, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
    %371 = tan(%367) /* ty=Tensor[(12, 10, 5), float64] */;
    %372 = cast(%371, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %373 = reshape(%370, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
    %374 = reshape(%372, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %375 = @func_466(%373, %374) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) */;
    %376 = %375.2;
    (%362, %371, %369, %376)
  };
  %377() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */
}

def @func_6913() -> (Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) {
  %382 = fn () -> (Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) {
    %378 = @func_6373() /* ty=(Tensor[(3, 7, 11), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), int16], Tensor[(15, 5, 15), int16]) */;
    %379 = @func_4468() /* ty=(Tensor[(12, 10, 5), float64],) */;
    %380 = %378.2;
    %381 = %379.0;
    (%380, %381)
  };
  %382() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) */
}

def @func_5428() -> Tensor[(15, 5, 15), float64] {
  %383 = @func_5112() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %383.0
}

def @func_33(%var_31: Tensor[(12, 10, 5), float32], %var_32: Tensor[(12, 10, 5), float32]) -> Tensor[(12, 10, 5), float32] {
  %388 = fn (%var_24: Tensor[(12, 10, 5), float32], %var_25: Tensor[(12, 10, 5), float32]) -> Tensor[(12, 10, 5), float32] {
    %384 = cast(%var_25, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %385 = shape_of(%var_24, dtype="int32") /* ty=Tensor[(3), int32] */;
    %386 = cast(%var_24, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%386, %387) /* ty=Tensor[(12, 10, 5), float32] */
  };
  %388(%var_31, %var_32) /* ty=Tensor[(12, 10, 5), float32] */
}

def @func_5584(%var_5582: Tensor[(650, 2), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(10, 10, 13), bool], Tensor[(650, 2), float32]) {
  @func_5581(%var_5582) /* ty=(Tensor[(8, 14, 8), float64], Tensor[(10, 10, 13), bool], Tensor[(650, 2), float32]) */
}

def @func_7214(%var_7191: Tensor[(15, 4, 15), float64]) -> (Tensor[(15, 4, 15), float32], Tensor[(15, 5, 15), float64]) {
  %389 = cast(%var_7191, dtype="float64") /* ty=Tensor[(15, 4, 15), float64] */;
  %390 = asinh(%389) /* ty=Tensor[(15, 4, 15), float64] */;
  %391 = cast(%390, dtype="float32") /* ty=Tensor[(15, 4, 15), float32] */;
  %392 = cos(%391) /* ty=Tensor[(15, 4, 15), float32] */;
  %393 = cast(%392, dtype="float32") /* ty=Tensor[(15, 4, 15), float32] */;
  %394 = @func_4032() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %395 = sigmoid(%393) /* ty=Tensor[(15, 4, 15), float32] */;
  %396 = %394.0;
  (%395, %396)
}

def @func_6870(%var_6868: Tensor[(1300), float32], %var_6869: Tensor[(588), float32]) -> (Tensor[(15, 5, 15), float64], Tensor[(1300), float32], Tensor[(10, 10, 13), float32], Tensor[(15, 5, 15), int16], Tensor[(15, 5, 15), float64], Tensor[(600), float32], Tensor[(7, 7, 12), float32], Tensor[(588), float32], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32], Tensor[(12, 10, 5), float32]) {
  %419 = fn (%var_6778: Tensor[(1300), float32], %var_6858: Tensor[(588), float32]) -> (Tensor[(15, 5, 15), float64], Tensor[(1300), float32], Tensor[(10, 10, 13), float32], Tensor[(15, 5, 15), int16], Tensor[(15, 5, 15), float64], Tensor[(600), float32], Tensor[(7, 7, 12), float32], Tensor[(588), float32], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32], Tensor[(12, 10, 5), float32]) {
    %397 = cast(%var_6778, dtype="float32") /* ty=Tensor[(1300), float32] */;
    %398 = reshape(%397, newshape=[130, 10]) /* ty=Tensor[(130, 10), float32] */;
    %399 = @func_4816(%398) /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(130, 10), float32]) */;
    %400 = %399.3;
    %401 = cast(%400, dtype="float32") /* ty=Tensor[(10, 10, 13), float32] */;
    %402 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
    %403 = cast(meta[relay.Constant][12] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
    %404 = reshape(%403, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %405 = @func_3672(%404) /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(600), float32], Tensor[(8, 14, 8), float64]) */;
    %406 = cast(%var_6858, dtype="float32") /* ty=Tensor[(588), float32] */;
    %407 = cast(%var_6858, dtype="float32") /* ty=Tensor[(588), float32] */;
    %408 = reshape(%406, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
    %409 = reshape(%407, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
    %410 = @func_3962() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(14, 14, 12), bool], Tensor[(2352), bool], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) */;
    %411 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
    %412 = sqrt(%401) /* ty=Tensor[(10, 10, 13), float32] */;
    %413 = %402.1;
    %414 = %405.0;
    %415 = @func_4700(%408, %409) /* ty=Tensor[(7, 7, 12), float32] */;
    %416 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
    %417 = @func_2516() /* ty=Tensor[(8, 14, 8), float32] */;
    %418 = %410.0;
    (%411, %var_6778, %412, %413, %414, meta[relay.Constant][12] /* ty=Tensor[(600), float32] */, %415, %var_6858, %416, %417, %418)
  };
  %419(%var_6868, %var_6869) /* ty=(Tensor[(15, 5, 15), float64], Tensor[(1300), float32], Tensor[(10, 10, 13), float32], Tensor[(15, 5, 15), int16], Tensor[(15, 5, 15), float64], Tensor[(600), float32], Tensor[(7, 7, 12), float32], Tensor[(588), float32], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32], Tensor[(12, 10, 5), float32]) */
}

def @func_6264() -> (Tensor[(3, 7, 11), float64], Tensor[(8, 14, 8), float64], Tensor[(3, 7, 11), float64]) {
  %427 = fn () -> (Tensor[(3, 7, 11), float64], Tensor[(8, 14, 8), float64], Tensor[(3, 7, 11), float64]) {
    %420 = @func_5550() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float32]) */;
    %421 = %420.1;
    %422 = cast(%421, dtype="float64") /* ty=Tensor[(3, 7, 11), float64] */;
    %423 = cast(%421, dtype="float64") /* ty=Tensor[(3, 7, 11), float64] */;
    %424 = erf(%422) /* ty=Tensor[(3, 7, 11), float64] */;
    %425 = @func_2611() /* ty=Tensor[(8, 14, 8), float64] */;
    %426 = sigmoid(%423) /* ty=Tensor[(3, 7, 11), float64] */;
    (%424, %425, %426)
  };
  %427() /* ty=(Tensor[(3, 7, 11), float64], Tensor[(8, 14, 8), float64], Tensor[(3, 7, 11), float64]) */
}

def @func_5641() -> (Tensor[(15, 5, 15), float64],) {
  %428 = @func_2851() /* ty=Tensor[(15, 5, 15), float64] */;
  (%428,)
}

def @func_6403() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) {
  @func_6401() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) */
}

def @func_5307(%var_5305: Tensor[(6, 10, 12), float32]) -> (Tensor[(6, 10, 12), float32],) {
  @func_5304(%var_5305) /* ty=(Tensor[(6, 10, 12), float32],) */
}

def @func_2404() -> Tensor[(12, 10, 5), float64] {
  %430 = fn () -> Tensor[(12, 10, 5), float64] {
    %429 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
    %429.1
  };
  %430() /* ty=Tensor[(12, 10, 5), float64] */
}

def @func_2594(%var_2592: Tensor[(13, 9, 11), float32]) -> Tensor[(13, 9, 11), float32] {
  @func_2591(%var_2592) /* ty=Tensor[(13, 9, 11), float32] */
}

def @func_867() -> (Tensor[(12, 10, 5), float32],) {
  %431 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %432 = %431.1;
  (%432,)
}

def @func_6970() -> (Tensor[(3, 7, 11), float64],) {
  %435 = fn () -> (Tensor[(3, 7, 11), float64],) {
    %433 = @func_2342() /* ty=(Tensor[(3, 7, 11), float64],) */;
    %434 = %433.0;
    (%434,)
  };
  %435() /* ty=(Tensor[(3, 7, 11), float64],) */
}

def @func_2154(%var_2127: Tensor[(1456), float64]) -> (Tensor[(15, 5, 15), float64], Tensor[(14, 8, 13), float64], Tensor[(1456), float64], Tensor[(8, 14, 8), float32]) {
  %436 = cast(%var_2127, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %437 = reshape(%436, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), float64] */;
  %438 = @func_2007(%437) /* ty=(Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64]) */;
  %439 = @func_1778() /* ty=(Tensor[(8, 14, 8), float32],) */;
  %440 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
  %441 = %438.1;
  %442 = %439.0;
  (%440, %441, %var_2127, %442)
}

def @func_6726(%var_6720: int64, %var_6721: Tensor[(2, 13, 1), int64]) -> (Tensor[(2, 13, 1), int64],) {
  %443 = cast(%var_6720, dtype="int64") /* ty=int64 */;
  %444 = cast(%var_6721, dtype="int64") /* ty=Tensor[(2, 13, 1), int64] */;
  %445 = add(%443, %444) /* ty=Tensor[(2, 13, 1), int64] */;
  (%445,)
}

def @func_3963() -> (Tensor[(12, 10, 5), float32], Tensor[(14, 14, 12), bool], Tensor[(2352), bool], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) {
  %460 = fn () -> (Tensor[(12, 10, 5), float32], Tensor[(14, 14, 12), bool], Tensor[(2352), bool], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) {
    %446 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
    %447 = cast(meta[relay.Constant][13] /* ty=Tensor[(2352), bool] */, dtype="bool") /* ty=Tensor[(2352), bool] */;
    %448 = reshape(%447, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), bool] */;
    %449 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
    %450 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %451 = %450.0;
    %452 = cast(%451, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
    %453 = reshape(%452, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), int16] */;
    %454 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %455 = %446.0;
    %456 = @func_1145(%448) /* ty=Tensor[(14, 14, 12), bool] */;
    %457 = %449.1;
    %458 = @func_1128(%453) /* ty=Tensor[(15, 5, 15), bool] */;
    %459 = %454.0;
    (%455, %456, meta[relay.Constant][13] /* ty=Tensor[(2352), bool] */, %457, %451, %458, %459)
  };
  %460() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(14, 14, 12), bool], Tensor[(2352), bool], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) */
}

def @func_1084() -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64]) {
  %468 = fn () -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64]) {
    %461 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %462 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
    %463 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
    %464 = %461.0;
    %465 = %462.0;
    %466 = %463.0;
    %467 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
    (%464, %465, %466, %467)
  };
  %468() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64]) */
}

def @func_4586() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), float64]) {
  @func_4584() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), float64]) */
}

def @func_4470() -> (Tensor[(12, 10, 5), float64],) {
  @func_4468() /* ty=(Tensor[(12, 10, 5), float64],) */
}

def @func_6964() -> (Tensor[(600), float32], Tensor[(3, 7, 11), float64]) {
  %469 = @func_3428() /* ty=(Tensor[(600), float32],) */;
  %470 = @func_2444() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %471 = %470.0;
  %472 = cast(%471, dtype="float64") /* ty=Tensor[(3, 7, 11), float64] */;
  %473 = %469.0;
  %474 = exp(%472) /* ty=Tensor[(3, 7, 11), float64] */;
  (%473, %474)
}

def @func_2885() -> (Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32]) {
  %475 = @func_1184() /* ty=Tensor[(12, 10, 5), float64] */;
  %476 = cast(%475, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %477 = cast(%475, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
  %478 = reshape(%476, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %479 = reshape(%477, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
  %480 = @func_30(%478, %479) /* ty=Tensor[(12, 10, 5), float32] */;
  (%475, %480)
}

def @func_236() -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) {
  %495 = fn () -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) {
    %481 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %482 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %483 = cast(meta[relay.Constant][14] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
    %484 = reshape(%483, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
    %485 = @func_20(%484) /* ty=(Tensor[(3, 7, 1), float64],) */;
    %486 = %485.0;
    %487 = cast(%486, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
    %488 = reshape(%487, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
    %489 = @func_20(%488) /* ty=(Tensor[(3, 7, 1), float64],) */;
    %490 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %491 = %481.0;
    %492 = %482.0;
    %493 = %489.0;
    %494 = %490.0;
    (%491, %492, %486, meta[relay.Constant][14] /* ty=Tensor[(21), float32] */, %493, %494)
  };
  %495() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */
}

def @func_4572(%var_4570: Tensor[(16, 7, 16), float32]) -> (Tensor[(16, 7, 16), float32], Tensor[(8, 14, 8), float64]) {
  @func_4569(%var_4570) /* ty=(Tensor[(16, 7, 16), float32], Tensor[(8, 14, 8), float64]) */
}

def @func_1148(%var_1146: Tensor[(14, 14, 12), bool]) -> Tensor[(14, 14, 12), bool] {
  @func_1145(%var_1146) /* ty=Tensor[(14, 14, 12), bool] */
}

def @func_4584() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), float64]) {
  %496 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %497 = @func_2342() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %498 = %496.0;
  %499 = %497.0;
  (%498, %499)
}

def @func_5976(%var_5974: float32, %var_5975: Tensor[(6, 12, 1), float32]) -> Tensor[(6, 12, 1), bool] {
  %502 = fn (%var_5953: float32, %var_5954: Tensor[(6, 12, 1), float32]) -> Tensor[(6, 12, 1), bool] {
    %500 = cast(%var_5953, dtype="bool") /* ty=bool */;
    %501 = cast(%var_5954, dtype="bool") /* ty=Tensor[(6, 12, 1), bool] */;
    less(%500, %501) /* ty=Tensor[(6, 12, 1), bool] */
  };
  %502(%var_5974, %var_5975) /* ty=Tensor[(6, 12, 1), bool] */
}

def @func_4653() -> (Tensor[(12, 10, 5), float32], Tensor[(1300), float64]) {
  %506 = fn () -> (Tensor[(12, 10, 5), float32], Tensor[(1300), float64]) {
    %503 = @func_3726() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(1300), float32], Tensor[(1300), float64], Tensor[(3, 7, 11), float64], Tensor[(3, 7, 11), float32], Tensor[(14, 8, 13), float64], Tensor[(1456, 1), float64], Tensor[(15, 5, 15), float64]) */;
    %504 = @func_1446() /* ty=Tensor[(12, 10, 5), float32] */;
    %505 = %503.2;
    (%504, %505)
  };
  %506() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(1300), float64]) */
}

def @func_6040(%var_6010: float32, %var_6011: Tensor[(4, 1, 15), float32]) -> (Tensor[(4, 1, 15), bool], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64]) {
  %507 = cast(%var_6010, dtype="bool") /* ty=bool */;
  %508 = cast(%var_6011, dtype="bool") /* ty=Tensor[(4, 1, 15), bool] */;
  %509 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %510 = not_equal(%507, %508) /* ty=Tensor[(4, 1, 15), bool] */;
  %511 = %509.0;
  %512 = @func_4987() /* ty=Tensor[(15, 5, 15), float64] */;
  (%510, %511, %512)
}

def @func_1145(%var_1137: Tensor[(14, 14, 12), bool]) -> Tensor[(14, 14, 12), bool] {
  %513 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %514 = cast(%var_1137, dtype="bool") /* ty=Tensor[(14, 14, 12), bool] */;
  logical_and(%513, %514) /* ty=Tensor[(14, 14, 12), bool] */
}

def @func_2317() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) {
  %515 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %516 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %517 = %516.2;
  %518 = cast(%517, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
  %519 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 7, 11), float64] */, dtype="bool") /* ty=Tensor[(3, 7, 11), bool] */;
  %520 = logical_or(%518, %519) /* ty=Tensor[(3, 7, 11), bool] */;
  %521 = cast(%520, dtype="bool") /* ty=Tensor[(3, 7, 11), bool] */;
  %522 = cast(%517, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
  %523 = %515.0;
  %524 = equal(%521, %522) /* ty=Tensor[(3, 7, 11), bool] */;
  (%523, %524)
}

def @func_3083(%var_3082: Tensor[(4, 364), float64]) -> (Tensor[(8, 14, 8), float32], Tensor[(4, 364), float64], Tensor[(14, 8, 13), float32], Tensor[(12, 10, 5), float32], Tensor[(375, 3), float64], Tensor[(600), float32]) {
  %540 = fn (%var_3045: Tensor[(4, 364), float64]) -> (Tensor[(8, 14, 8), float32], Tensor[(4, 364), float64], Tensor[(14, 8, 13), float32], Tensor[(12, 10, 5), float32], Tensor[(375, 3), float64], Tensor[(600), float32]) {
    %525 = @func_2516() /* ty=Tensor[(8, 14, 8), float32] */;
    %526 = cast(%525, dtype="float32") /* ty=Tensor[(8, 14, 8), float32] */;
    %527 = cast(%var_3045, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
    %528 = reshape(%527, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), float64] */;
    %529 = @func_2007(%528) /* ty=(Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64]) */;
    %530 = %529.1;
    %531 = cast(%530, dtype="float32") /* ty=Tensor[(14, 8, 13), float32] */;
    %532 = cast(meta[relay.Constant][16] /* ty=Tensor[(375, 3), float64] */, dtype="float64") /* ty=Tensor[(375, 3), float64] */;
    %533 = cast(meta[relay.Constant][17] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
    %534 = reshape(%532, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
    %535 = reshape(%533, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %536 = @func_466(%534, %535) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) */;
    %537 = exp(%526) /* ty=Tensor[(8, 14, 8), float32] */;
    %538 = erf(%531) /* ty=Tensor[(14, 8, 13), float32] */;
    %539 = %536.4;
    (%537, %var_3045, %538, %539, meta[relay.Constant][16] /* ty=Tensor[(375, 3), float64] */, meta[relay.Constant][17] /* ty=Tensor[(600), float32] */)
  };
  %540(%var_3082) /* ty=(Tensor[(8, 14, 8), float32], Tensor[(4, 364), float64], Tensor[(14, 8, 13), float32], Tensor[(12, 10, 5), float32], Tensor[(375, 3), float64], Tensor[(600), float32]) */
}

def @func_5550() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float32]) {
  %541 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
  %542 = @func_5138() /* ty=(Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float64]) */;
  %543 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %544 = %543.0;
  %545 = cast(%544, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
  %546 = %541.1;
  %547 = %542.0;
  %548 = cosh(%545) /* ty=Tensor[(15, 5, 15), float32] */;
  (%546, %547, %548)
}

def @func_7526(%var_7517: Tensor[(600), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(600), bool]) {
  %549 = @func_6299() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %550 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %551 = %550.2;
  %552 = cast(%var_7517, dtype="bool") /* ty=Tensor[(600), bool] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(1), int32] */;
  %554 = cast(%551, dtype="bool") /* ty=Tensor[(600), bool] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?), bool] */;
  %556 = %549.0;
  %557 = logical_and(%554, %555) /* ty=Tensor[(600), bool] */;
  (%556, %557)
}

def @func_3726() -> (Tensor[(12, 10, 5), float32], Tensor[(1300), float32], Tensor[(1300), float64], Tensor[(3, 7, 11), float64], Tensor[(3, 7, 11), float32], Tensor[(14, 8, 13), float64], Tensor[(1456, 1), float64], Tensor[(15, 5, 15), float64]) {
  %558 = @func_3293() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float64], Tensor[(1365), uint64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) */;
  %559 = @func_3564() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) */;
  %560 = %559.3;
  %561 = cast(%560, dtype="float32") /* ty=Tensor[(1300), float32] */;
  %562 = cast(%560, dtype="float64") /* ty=Tensor[(1300), float64] */;
  %563 = @func_2444() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %564 = @func_2570() /* ty=(Tensor[(3, 7, 11), float32],) */;
  %565 = cast(meta[relay.Constant][18] /* ty=Tensor[(1456, 1), float64] */, dtype="float64") /* ty=Tensor[(1456, 1), float64] */;
  %566 = reshape(%565, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), float64] */;
  %567 = @func_2007(%566) /* ty=(Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64]) */;
  %568 = %558.1;
  %569 = atanh(%561) /* ty=Tensor[(1300), float32] */;
  %570 = tan(%562) /* ty=Tensor[(1300), float64] */;
  %571 = %563.0;
  %572 = %564.0;
  %573 = %567.0;
  %574 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
  (%568, %569, %570, %571, %572, %573, meta[relay.Constant][18] /* ty=Tensor[(1456, 1), float64] */, %574)
}

def @main() -> Tensor[(12, 10, 5), float64] {
  %575 = @func_1356() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
  %576 = %575.3;
  %577 = cast(%576, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
  cosh(%577) /* ty=Tensor[(12, 10, 5), float64] */
}

def @func_769() -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) {
  %589 = fn () -> (Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) {
    %578 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %579 = %578.0;
    %580 = cast(%579, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
    %581 = cast(%579, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
    %582 = asinh(%581) /* ty=Tensor[(15, 5, 15), float64] */;
    %583 = cast(%579, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
    %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
    %585 = cast(%582, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
    %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %587 = log10(%580) /* ty=Tensor[(15, 5, 15), float64] */;
    %588 = logical_xor(%585, %586) /* ty=Tensor[(15, 5, 15), int16] */;
    (%587, %588)
  };
  %589() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */
}

def @func_5139() -> (Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float64]) {
  %594 = fn () -> (Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float64]) {
    %590 = @func_2317() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) */;
    %591 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %592 = %590.1;
    %593 = %591.0;
    (%592, %593)
  };
  %594() /* ty=(Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float64]) */
}

def @func_3803(%var_3802: Tensor[(21), float32]) -> (Tensor[(15, 5, 15), float64], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(8, 14, 8), float32], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 7), float64]) {
  %612 = fn (%var_3744: Tensor[(21), float32]) -> (Tensor[(15, 5, 15), float64], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(8, 14, 8), float32], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 7), float64]) {
    %595 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
    %596 = @func_1778() /* ty=(Tensor[(8, 14, 8), float32],) */;
    %597 = cast(%var_3744, dtype="float32") /* ty=Tensor[(21), float32] */;
    %598 = reshape(%597, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
    %599 = @func_20(%598) /* ty=(Tensor[(3, 7, 1), float64],) */;
    %600 = %599.0;
    %601 = cast(%600, dtype="uint16") /* ty=Tensor[(3, 7, 1), uint16] */;
    %602 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 7, 7), float64] */, dtype="uint16") /* ty=Tensor[(3, 7, 7), uint16] */;
    %603 = left_shift(%601, %602) /* ty=Tensor[(3, 7, 7), uint16] */;
    %604 = cast(%603, dtype="float32") /* ty=Tensor[(3, 7, 7), float32] */;
    %605 = tan(%604) /* ty=Tensor[(3, 7, 7), float32] */;
    %606 = cast(%605, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
    %607 = %595.5;
    %608 = @func_1446() /* ty=Tensor[(12, 10, 5), float32] */;
    %609 = %596.0;
    %610 = @func_2851() /* ty=Tensor[(15, 5, 15), float64] */;
    %611 = log10(%606) /* ty=Tensor[(3, 7, 7), float64] */;
    (%607, %var_3744, %608, %609, %610, %611)
  };
  %612(%var_3802) /* ty=(Tensor[(15, 5, 15), float64], Tensor[(21), float32], Tensor[(12, 10, 5), float32], Tensor[(8, 14, 8), float32], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 7), float64]) */
}

def @func_5176() -> Tensor[(15, 5, 15), float64] {
  @func_5174() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_1733() -> (Tensor[(15, 5, 15), float64],) {
  %613 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %614 = %613.5;
  (%614,)
}

def @func_4445(%var_4444: Tensor[(1300, 1), float32]) -> (Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(1300, 1), float32], Tensor[(15, 5, 15), float64]) {
  %627 = fn (%var_4425: Tensor[(1300, 1), float32]) -> (Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(1300, 1), float32], Tensor[(15, 5, 15), float64]) {
    %615 = @func_2317() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) */;
    %616 = %615.0;
    %617 = cast(%616, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
    %618 = cast(%var_4425, dtype="float32") /* ty=Tensor[(1300, 1), float32] */;
    %619 = cast(%var_4425, dtype="float32") /* ty=Tensor[(1300, 1), float32] */;
    %620 = reshape(%618, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
    %621 = reshape(%619, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
    %622 = cast(%var_4425, dtype="float32") /* ty=Tensor[(1300, 1), float32] */;
    %623 = atan(%617) /* ty=Tensor[(12, 10, 5), float64] */;
    %624 = @func_3335(%620, %621) /* ty=Tensor[(10, 10, 13), bool] */;
    %625 = erf(%622) /* ty=Tensor[(1300, 1), float32] */;
    %626 = @func_511() /* ty=Tensor[(15, 5, 15), float64] */;
    (%623, %624, %625, %626)
  };
  %627(%var_4444) /* ty=(Tensor[(12, 10, 5), float64], Tensor[(10, 10, 13), bool], Tensor[(1300, 1), float32], Tensor[(15, 5, 15), float64]) */
}

def @func_5643() -> (Tensor[(15, 5, 15), float64],) {
  @func_5641() /* ty=(Tensor[(15, 5, 15), float64],) */
}

def @func_869() -> (Tensor[(12, 10, 5), float32],) {
  @func_867() /* ty=(Tensor[(12, 10, 5), float32],) */
}

def @func_1447() -> Tensor[(12, 10, 5), float32] {
  %629 = fn () -> Tensor[(12, 10, 5), float32] {
    %628 = @func_867() /* ty=(Tensor[(12, 10, 5), float32],) */;
    %628.0
  };
  %629() /* ty=Tensor[(12, 10, 5), float32] */
}

def @func_5001(%var_5000: Tensor[(12, 12, 8), float64]) -> Tensor[(12, 12, 8), float64] {
  %631 = fn (%var_4993: Tensor[(12, 12, 8), float64]) -> Tensor[(12, 12, 8), float64] {
    %630 = cast(%var_4993, dtype="float64") /* ty=Tensor[(12, 12, 8), float64] */;
    tan(%630) /* ty=Tensor[(12, 12, 8), float64] */
  };
  %631(%var_5000) /* ty=Tensor[(12, 12, 8), float64] */
}

def @func_1428(%var_1390: Tensor[(12, 10, 5), float32]) -> (Tensor[(21), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(14, 14, 12), bool], Tensor[(2352), bool]) {
  %632 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %633 = @func_1374() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %634 = %633.0;
  %635 = cast(%var_1390, dtype="uint16") /* ty=Tensor[(12, 10, 5), uint16] */;
  %636 = shape_of(%634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %637 = cast(%634, dtype="uint16") /* ty=Tensor[(12, 10, 5), uint16] */;
  %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %639 = subtract(%637, %638) /* ty=Tensor[(12, 10, 5), uint16] */;
  %640 = cast(%639, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
  %641 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %642 = cast(meta[relay.Constant][20] /* ty=Tensor[(2352), bool] */, dtype="bool") /* ty=Tensor[(2352), bool] */;
  %643 = reshape(%642, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), bool] */;
  %644 = %632.3;
  %645 = erf(%640) /* ty=Tensor[(12, 10, 5), float64] */;
  %646 = %641.0;
  %647 = @func_1145(%643) /* ty=Tensor[(14, 14, 12), bool] */;
  (%644, %645, %646, %647, meta[relay.Constant][20] /* ty=Tensor[(2352), bool] */)
}

def @func_3387(%var_3385: Tensor[(5, 4, 16), float32], %var_3386: Tensor[(5, 4, 16), float32]) -> Tensor[(5, 4, 16), bool] {
  @func_3383(%var_3385, %var_3386) /* ty=Tensor[(5, 4, 16), bool] */
}

def @func_5410() -> (Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(14, 8, 13), float64], Tensor[(1456), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), bool]) {
  %665 = fn () -> (Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(14, 8, 13), float64], Tensor[(1456), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), bool]) {
    %648 = @func_3428() /* ty=(Tensor[(600), float32],) */;
    %649 = @func_3564() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) */;
    %650 = %648.0;
    %651 = cast(%650, dtype="float32") /* ty=Tensor[(600), float32] */;
    %652 = reshape(%651, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %653 = @func_3672(%652) /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(600), float32], Tensor[(8, 14, 8), float64]) */;
    %654 = cast(meta[relay.Constant][21] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
    %655 = reshape(%654, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
    %656 = @func_2154(%655) /* ty=(Tensor[(15, 5, 15), float64], Tensor[(14, 8, 13), float64], Tensor[(1456), float64], Tensor[(8, 14, 8), float32]) */;
    %657 = @func_4652() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(1300), float64]) */;
    %658 = %649.5;
    %659 = cast(%658, dtype="int16") /* ty=Tensor[(15, 5, 15), int16] */;
    %660 = reshape(%659, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), int16] */;
    %661 = %653.1;
    %662 = %656.1;
    %663 = %657.0;
    %664 = @func_1128(%660) /* ty=Tensor[(15, 5, 15), bool] */;
    (%650, %658, %661, %662, meta[relay.Constant][21] /* ty=Tensor[(1456), float64] */, %663, %664)
  };
  %665() /* ty=(Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool], Tensor[(14, 8, 13), float64], Tensor[(1456), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), bool]) */
}

def @func_5681() -> (Tensor[(3, 7, 11), float64],) {
  @func_5679() /* ty=(Tensor[(3, 7, 11), float64],) */
}

def @func_3428() -> (Tensor[(600), float32],) {
  %666 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %667 = %666.2;
  (%667,)
}

def @func_3616() -> (Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), bool]) {
  %668 = @func_2227() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %669 = @func_867() /* ty=(Tensor[(12, 10, 5), float32],) */;
  %670 = %669.0;
  %671 = @func_1184() /* ty=Tensor[(12, 10, 5), float64] */;
  %672 = cast(%671, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
  %673 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%670, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %676 = %668.0;
  %677 = logical_and(%674, %675) /* ty=Tensor[(12, 10, 5), bool] */;
  (%676, %677)
}

def @func_3295() -> (Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float64], Tensor[(1365), uint64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) {
  @func_3293() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float64], Tensor[(1365), uint64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) */
}

def @func_2228() -> (Tensor[(12, 10, 5), float32],) {
  %679 = fn () -> (Tensor[(12, 10, 5), float32],) {
    %678 = @func_1446() /* ty=Tensor[(12, 10, 5), float32] */;
    (%678,)
  };
  %679() /* ty=(Tensor[(12, 10, 5), float32],) */
}

def @func_5835() -> (Tensor[(15, 5, 15), int16],) {
  %680 = @func_3293() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float64], Tensor[(1365), uint64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float64]) */;
  %681 = %680.4;
  (%681,)
}

def @func_7055(%var_7054: Tensor[(60, 10), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64], Tensor[(60, 10), bool]) {
  %695 = fn (%var_7025: Tensor[(60, 10), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64], Tensor[(60, 10), bool]) {
    %682 = @func_5024() /* ty=Tensor[(15, 5, 15), float64] */;
    %683 = cast(%682, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
    %684 = cast(%var_7025, dtype="float32") /* ty=Tensor[(60, 10), float32] */;
    %685 = reshape(%683, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
    %686 = reshape(%684, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %687 = @func_466(%685, %686) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) */;
    %688 = %687.4;
    %689 = cast(%688, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
    %690 = shape_of(%var_7025, dtype="int32") /* ty=Tensor[(2), int32] */;
    %691 = cast(%var_7025, dtype="bool") /* ty=Tensor[(60, 10), bool] */;
    %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %693 = @func_2611() /* ty=Tensor[(8, 14, 8), float64] */;
    %694 = equal(%691, %692) /* ty=Tensor[(60, 10), bool] */;
    (%693, %682, %694)
  };
  %695(%var_7054) /* ty=(Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64], Tensor[(60, 10), bool]) */
}

def @func_7098() -> (Tensor[(12, 10, 5), float64], Tensor[(8, 14, 8), float64], Tensor[(1125), uint16], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64]) {
  @func_7096() /* ty=(Tensor[(12, 10, 5), float64], Tensor[(8, 14, 8), float64], Tensor[(1125), uint16], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64]) */
}

def @func_994() -> Tensor[(3, 7, 1), float64] {
  @func_992() /* ty=Tensor[(3, 7, 1), float64] */
}

def @func_2384(%var_2378: Tensor[(9, 3, 10), float64]) -> (Tensor[(9, 3, 10), float64],) {
  %696 = cast(%var_2378, dtype="float64") /* ty=Tensor[(9, 3, 10), float64] */;
  %697 = log(%696) /* ty=Tensor[(9, 3, 10), float64] */;
  (%697,)
}

def @func_5991() -> Tensor[(15, 5, 15), float64] {
  @func_5989() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_660(%var_659: Tensor[(21), float32]) -> (Tensor[(21), bool],) {
  %705 = fn (%var_652: Tensor[(21), float32]) -> (Tensor[(21), bool],) {
    %698 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
    %699 = %698.3;
    %700 = cast(%var_652, dtype="bool") /* ty=Tensor[(21), bool] */;
    %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(1), int32] */;
    %702 = cast(%699, dtype="bool") /* ty=Tensor[(21), bool] */;
    %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?), bool] */;
    %704 = logical_or(%702, %703) /* ty=Tensor[(21), bool] */;
    (%704,)
  };
  %705(%var_659) /* ty=(Tensor[(21), bool],) */
}

def @func_1185() -> Tensor[(12, 10, 5), float64] {
  %712 = fn () -> Tensor[(12, 10, 5), float64] {
    %706 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
    %707 = %706.1;
    %708 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 10, 5), float32] */, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
    %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(3), int32] */;
    %710 = cast(%707, dtype="float64") /* ty=Tensor[(12, 10, 5), float64] */;
    %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    minimum(%710, %711) /* ty=Tensor[(12, 10, 5), float64] */
  };
  %712() /* ty=Tensor[(12, 10, 5), float64] */
}

def @func_5113() -> (Tensor[(15, 5, 15), float64],) {
  %715 = fn () -> (Tensor[(15, 5, 15), float64],) {
    %713 = @func_1083() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float64]) */;
    %714 = %713.0;
    (%714,)
  };
  %715() /* ty=(Tensor[(15, 5, 15), float64],) */
}

def @func_6966() -> (Tensor[(600), float32], Tensor[(3, 7, 11), float64]) {
  @func_6964() /* ty=(Tensor[(600), float32], Tensor[(3, 7, 11), float64]) */
}

def @func_5304(%var_5292: Tensor[(6, 10, 12), float32]) -> (Tensor[(6, 10, 12), float32],) {
  %716 = cast(%var_5292, dtype="float32") /* ty=Tensor[(6, 10, 12), float32] */;
  %717 = cos(%716) /* ty=Tensor[(6, 10, 12), float32] */;
  (%717,)
}

def @func_22(%var_21: Tensor[(3, 7, 1), float32]) -> (Tensor[(3, 7, 1), float64],) {
  %722 = fn (%var_6: Tensor[(3, 7, 1), float32]) -> (Tensor[(3, 7, 1), float64],) {
    %718 = cast(%var_6, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
    %719 = log2(%718) /* ty=Tensor[(3, 7, 1), float32] */;
    %720 = cast(%719, dtype="float64") /* ty=Tensor[(3, 7, 1), float64] */;
    %721 = exp(%720) /* ty=Tensor[(3, 7, 1), float64] */;
    (%721,)
  };
  %722(%var_21) /* ty=(Tensor[(3, 7, 1), float64],) */
}

def @func_332(%var_330: Tensor[(600), float32]) -> (Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64], Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) {
  @func_329(%var_330) /* ty=(Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64], Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */
}

def @func_6709(%var_6707: Tensor[(1, 8), float64], %var_6708: Tensor[(600), float32]) -> (Tensor[(1, 8), float64], Tensor[(600), float32], Tensor[(600), float32]) {
  %729 = fn (%var_6694: Tensor[(1, 8), float64], %var_6699: Tensor[(600), float32]) -> (Tensor[(1, 8), float64], Tensor[(600), float32], Tensor[(600), float32]) {
    %723 = cast(%var_6694, dtype="float64") /* ty=Tensor[(1, 8), float64] */;
    %724 = cast(%var_6699, dtype="float32") /* ty=Tensor[(600), float32] */;
    %725 = reshape(%724, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %726 = @func_329(%725) /* ty=(Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64], Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
    %727 = cosh(%723) /* ty=Tensor[(1, 8), float64] */;
    %728 = %726.2;
    (%727, %728, %var_6699)
  };
  %729(%var_6707, %var_6708) /* ty=(Tensor[(1, 8), float64], Tensor[(600), float32], Tensor[(600), float32]) */
}

def @func_5611() -> Tensor[(3, 7, 11), bool] {
  %731 = fn () -> Tensor[(3, 7, 11), bool] {
    %730 = @func_5138() /* ty=(Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float64]) */;
    %730.0
  };
  %731() /* ty=Tensor[(3, 7, 11), bool] */
}

def @func_6299() -> (Tensor[(8, 14, 8), float64],) {
  %732 = @func_3190() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %733 = %732.0;
  (%733,)
}

def @func_2157(%var_2155: Tensor[(1456), float64]) -> (Tensor[(15, 5, 15), float64], Tensor[(14, 8, 13), float64], Tensor[(1456), float64], Tensor[(8, 14, 8), float32]) {
  @func_2154(%var_2155) /* ty=(Tensor[(15, 5, 15), float64], Tensor[(14, 8, 13), float64], Tensor[(1456), float64], Tensor[(8, 14, 8), float32]) */
}

def @func_4987() -> Tensor[(15, 5, 15), float64] {
  %734 = @func_4032() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %734.0
}

def @func_1007() -> (Tensor[(8, 14, 8), float64],) {
  @func_1005() /* ty=(Tensor[(8, 14, 8), float64],) */
}

def @func_4032() -> (Tensor[(15, 5, 15), float64],) {
  %735 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %736 = %735.0;
  (%736,)
}

def @func_5224() -> (Tensor[(1300), float32],) {
  @func_5222() /* ty=(Tensor[(1300), float32],) */
}

def @func_2344() -> (Tensor[(3, 7, 11), float64],) {
  @func_2342() /* ty=(Tensor[(3, 7, 11), float64],) */
}

def @func_2319() -> (Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) {
  @func_2317() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) */
}

def @func_4300(%var_4246: Tensor[(8, 40), float32]) -> (Tensor[(5, 4, 16), bool], Tensor[(8, 40), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool]) {
  %737 = cast(%var_4246, dtype="float32") /* ty=Tensor[(8, 40), float32] */;
  %738 = cast(%var_4246, dtype="float32") /* ty=Tensor[(8, 40), float32] */;
  %739 = reshape(%737, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %740 = reshape(%738, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %741 = @func_4032() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %742 = @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %743 = %742.0;
  %744 = cast(%743, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
  %745 = log(%744) /* ty=Tensor[(15, 5, 15), float64] */;
  %746 = @func_861() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %747 = %746.0;
  %748 = cast(%747, dtype="int8") /* ty=Tensor[(15, 5, 15), int8] */;
  %749 = shape_of(%743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%743, dtype="int8") /* ty=Tensor[(15, 5, 15), int8] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %752 = right_shift(%750, %751) /* ty=Tensor[(15, 5, 15), int8] */;
  %753 = cast(%752, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %754 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%745, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %757 = @func_3383(%739, %740) /* ty=Tensor[(5, 4, 16), bool] */;
  %758 = %741.0;
  %759 = greater_equal(%755, %756) /* ty=Tensor[(15, 5, 15), bool] */;
  (%757, %var_4246, %758, %759)
}

def @func_5174() -> Tensor[(15, 5, 15), float64] {
  %760 = @func_4032() /* ty=(Tensor[(15, 5, 15), float64],) */;
  %760.0
}

def @func_1778() -> (Tensor[(8, 14, 8), float32],) {
  %761 = @func_1005() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %762 = %761.0;
  %763 = cast(%762, dtype="float32") /* ty=Tensor[(8, 14, 8), float32] */;
  %764 = sinh(%763) /* ty=Tensor[(8, 14, 8), float32] */;
  (%764,)
}

def @func_3383(%var_3378: Tensor[(5, 4, 16), float32], %var_3379: Tensor[(5, 4, 16), float32]) -> Tensor[(5, 4, 16), bool] {
  %765 = cast(%var_3379, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %766 = shape_of(%var_3378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%var_3378, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%767, %768) /* ty=Tensor[(5, 4, 16), bool] */
}

def @func_3977(%var_3971: Tensor[(12, 5, 11), float64]) -> (Tensor[(12, 5, 11), float64],) {
  %769 = cast(%var_3971, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %770 = atanh(%769) /* ty=Tensor[(12, 5, 11), float64] */;
  (%770,)
}

def @func_1914(%var_1912: Tensor[(600), float32], %var_1913: Tensor[(15, 5, 15), uint16]) -> (Tensor[(15, 5, 15), float32], Tensor[(8, 14, 8), float64], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64], Tensor[(21), float32], Tensor[(600), float32], Tensor[(21), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int8], Tensor[(14, 14, 12), bool], Tensor[(15, 5, 15), int16], Tensor[(600), float32]) {
  @func_1910(%var_1912, %var_1913) /* ty=(Tensor[(15, 5, 15), float32], Tensor[(8, 14, 8), float64], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64], Tensor[(21), float32], Tensor[(600), float32], Tensor[(21), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int8], Tensor[(14, 14, 12), bool], Tensor[(15, 5, 15), int16], Tensor[(600), float32]) */
}

def @func_3126(%var_3124: Tensor[(15, 5, 15), float64], %var_3125: Tensor[(3, 7, 5), float64]) -> (Tensor[(15, 5, 15), float32], Tensor[(3, 7, 5), bool]) {
  %782 = fn (%var_3096: Tensor[(15, 5, 15), float64], %var_3105: Tensor[(3, 7, 5), float64]) -> (Tensor[(15, 5, 15), float32], Tensor[(3, 7, 5), bool]) {
    %771 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
    %772 = %771.0;
    %773 = cast(%var_3096, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
    %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(3), int32] */;
    %775 = cast(%772, dtype="float32") /* ty=Tensor[(15, 5, 15), float32] */;
    %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %777 = @func_992() /* ty=Tensor[(3, 7, 1), float64] */;
    %778 = cast(%777, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
    %779 = cast(%var_3105, dtype="bool") /* ty=Tensor[(3, 7, 5), bool] */;
    %780 = power(%775, %776) /* ty=Tensor[(15, 5, 15), float32] */;
    %781 = greater_equal(%778, %779) /* ty=Tensor[(3, 7, 5), bool] */;
    (%780, %781)
  };
  %782(%var_3124, %var_3125) /* ty=(Tensor[(15, 5, 15), float32], Tensor[(3, 7, 5), bool]) */
}

def @func_6730(%var_6728: int64, %var_6729: Tensor[(2, 13, 1), int64]) -> (Tensor[(2, 13, 1), int64],) {
  @func_6726(%var_6728, %var_6729) /* ty=(Tensor[(2, 13, 1), int64],) */
}

def @func_6583(%var_6581: Tensor[(8, 14, 8), float32], %var_6582: Tensor[(320), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float32], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), bool], Tensor[(320), float32]) {
  %801 = fn (%var_6546: Tensor[(8, 14, 8), float32], %var_6573: Tensor[(320), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float32], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), bool], Tensor[(320), float32]) {
    %783 = @func_5282() /* ty=(Tensor[(8, 14, 8), float32],) */;
    %784 = %783.0;
    %785 = cast(%var_6546, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
    %786 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
    %787 = cast(%784, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
    %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %789 = @func_5550() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool], Tensor[(15, 5, 15), float32]) */;
    %790 = cast(%784, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
    %791 = shape_of(%var_6546, dtype="int32") /* ty=Tensor[(3), int32] */;
    %792 = cast(%var_6546, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
    %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %794 = cast(%var_6573, dtype="float32") /* ty=Tensor[(320), float32] */;
    %795 = reshape(%794, newshape=[8, 40]) /* ty=Tensor[(8, 40), float32] */;
    %796 = @func_4300(%795) /* ty=(Tensor[(5, 4, 16), bool], Tensor[(8, 40), float32], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), bool]) */;
    %797 = subtract(%787, %788) /* ty=Tensor[(8, 14, 8), float64] */;
    %798 = %789.2;
    %799 = mod(%792, %793) /* ty=Tensor[(8, 14, 8), float64] */;
    %800 = %796.3;
    (%797, %798, %799, %800, %var_6573)
  };
  %801(%var_6581, %var_6582) /* ty=(Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), float32], Tensor[(8, 14, 8), float64], Tensor[(15, 5, 15), bool], Tensor[(320), float32]) */
}

def @func_2570() -> (Tensor[(3, 7, 11), float32],) {
  %802 = @func_2444() /* ty=(Tensor[(3, 7, 11), float64],) */;
  %803 = %802.0;
  %804 = cast(%803, dtype="float32") /* ty=Tensor[(3, 7, 11), float32] */;
  %805 = sqrt(%804) /* ty=Tensor[(3, 7, 11), float32] */;
  (%805,)
}

def @func_7313(%var_7312: Tensor[(3, 7, 11), float64]) -> Tensor[(3, 7, 11), int32] {
  %812 = fn (%var_7304: Tensor[(3, 7, 11), float64]) -> Tensor[(3, 7, 11), int32] {
    %806 = @func_6969() /* ty=(Tensor[(3, 7, 11), float64],) */;
    %807 = %806.0;
    %808 = cast(%var_7304, dtype="int32") /* ty=Tensor[(3, 7, 11), int32] */;
    %809 = shape_of(%807, dtype="int32") /* ty=Tensor[(3), int32] */;
    %810 = cast(%807, dtype="int32") /* ty=Tensor[(3, 7, 11), int32] */;
    %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    multiply(%810, %811) /* ty=Tensor[(3, 7, 11), int32] */
  };
  %812(%var_7312) /* ty=Tensor[(3, 7, 11), int32] */
}

def @func_6084() -> (Tensor[(15, 5, 15), int16],) {
  %815 = fn () -> (Tensor[(15, 5, 15), int16],) {
    %813 = @func_5835() /* ty=(Tensor[(15, 5, 15), int16],) */;
    %814 = %813.0;
    (%814,)
  };
  %815() /* ty=(Tensor[(15, 5, 15), int16],) */
}

def @func_3338(%var_3336: Tensor[(10, 10, 13), float32], %var_3337: Tensor[(10, 10, 13), float32]) -> Tensor[(10, 10, 13), bool] {
  %820 = fn (%var_3330: Tensor[(10, 10, 13), float32], %var_3331: Tensor[(10, 10, 13), float32]) -> Tensor[(10, 10, 13), bool] {
    %816 = cast(%var_3331, dtype="bool") /* ty=Tensor[(10, 10, 13), bool] */;
    %817 = shape_of(%var_3330, dtype="int32") /* ty=Tensor[(3), int32] */;
    %818 = cast(%var_3330, dtype="bool") /* ty=Tensor[(10, 10, 13), bool] */;
    %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%818, %819) /* ty=Tensor[(10, 10, 13), bool] */
  };
  %820(%var_3336, %var_3337) /* ty=Tensor[(10, 10, 13), bool] */
}

def @func_4871() -> (Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32]) {
  %829 = fn () -> (Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32]) {
    %821 = @func_4032() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %822 = @func_3564() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(21), float32], Tensor[(10, 10, 13), bool], Tensor[(1300), float32], Tensor[(3, 7, 10), int32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float64]) */;
    %823 = %822.0;
    %824 = cast(%823, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
    %825 = cos(%824) /* ty=Tensor[(8, 14, 8), float64] */;
    %826 = cast(%825, dtype="float32") /* ty=Tensor[(8, 14, 8), float32] */;
    %827 = %821.0;
    %828 = atan(%826) /* ty=Tensor[(8, 14, 8), float32] */;
    (%827, %828)
  };
  %829() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32]) */
}

def @func_2853() -> Tensor[(15, 5, 15), float64] {
  @func_2851() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_1375() -> (Tensor[(12, 10, 5), float32],) {
  %832 = fn () -> (Tensor[(12, 10, 5), float32],) {
    %830 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
    %831 = %830.3;
    (%831,)
  };
  %832() /* ty=(Tensor[(12, 10, 5), float32],) */
}

def @func_992() -> Tensor[(3, 7, 1), float64] {
  %833 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
  %833.2
}

def @func_4468() -> (Tensor[(12, 10, 5), float64],) {
  %834 = @func_2403() /* ty=Tensor[(12, 10, 5), float64] */;
  (%834,)
}

def @func_4989() -> Tensor[(15, 5, 15), float64] {
  @func_4987() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_2612() -> Tensor[(8, 14, 8), float64] {
  %836 = fn () -> Tensor[(8, 14, 8), float64] {
    %835 = @func_1005() /* ty=(Tensor[(8, 14, 8), float64],) */;
    %835.0
  };
  %836() /* ty=Tensor[(8, 14, 8), float64] */
}

def @func_4034() -> (Tensor[(15, 5, 15), float64],) {
  @func_4032() /* ty=(Tensor[(15, 5, 15), float64],) */
}

def @func_1735() -> (Tensor[(15, 5, 15), float64],) {
  @func_1733() /* ty=(Tensor[(15, 5, 15), float64],) */
}

def @func_5283() -> (Tensor[(8, 14, 8), float32],) {
  %839 = fn () -> (Tensor[(8, 14, 8), float32],) {
    %837 = @func_1778() /* ty=(Tensor[(8, 14, 8), float32],) */;
    %838 = %837.0;
    (%838,)
  };
  %839() /* ty=(Tensor[(8, 14, 8), float32],) */
}

def @func_2342() -> (Tensor[(3, 7, 11), float64],) {
  %840 = @func_2317() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), bool]) */;
  %841 = %840.1;
  %842 = cast(%841, dtype="float64") /* ty=Tensor[(3, 7, 11), float64] */;
  %843 = sin(%842) /* ty=Tensor[(3, 7, 11), float64] */;
  (%843,)
}

def @func_2591(%var_2588: Tensor[(13, 9, 11), float32]) -> Tensor[(13, 9, 11), float32] {
  %844 = cast(%var_2588, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  log2(%844) /* ty=Tensor[(13, 9, 11), float32] */
}

def @func_4905() -> (Tensor[(15, 5, 15), float64],) {
  @func_4903() /* ty=(Tensor[(15, 5, 15), float64],) */
}

def @func_862() -> (Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) {
  %853 = fn () -> (Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) {
    %845 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
    %846 = %845.1;
    %847 = cast(%846, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
    %848 = cast(meta[relay.Constant][23] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
    %849 = reshape(%847, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), float64] */;
    %850 = reshape(%848, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %851 = @func_466(%849, %850) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) */;
    %852 = %851.2;
    (%846, %852, meta[relay.Constant][23] /* ty=Tensor[(600), float32] */)
  };
  %853() /* ty=(Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */
}

def @func_7217(%var_7215: Tensor[(15, 4, 15), float64]) -> (Tensor[(15, 4, 15), float32], Tensor[(15, 5, 15), float64]) {
  @func_7214(%var_7215) /* ty=(Tensor[(15, 4, 15), float32], Tensor[(15, 5, 15), float64]) */
}

def @func_7144() -> Tensor[(3, 7, 11), float64] {
  %854 = @func_4584() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(3, 7, 11), float64]) */;
  %854.1
}

def @func_1128(%var_1121: Tensor[(15, 5, 15), int16]) -> Tensor[(15, 5, 15), bool] {
  %855 = @func_768() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), int16]) */;
  %856 = %855.1;
  %857 = cast(%var_1121, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %859 = cast(%856, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%859, %860) /* ty=Tensor[(15, 5, 15), bool] */
}

def @func_5198() -> Tensor[(12, 10, 5), float64] {
  %861 = fn () -> Tensor[(12, 10, 5), float64] {
    @func_2403() /* ty=Tensor[(12, 10, 5), float64] */
  };
  %861() /* ty=Tensor[(12, 10, 5), float64] */
}

def @func_4704(%var_4702: Tensor[(7, 7, 12), float32], %var_4703: Tensor[(7, 7, 12), float32]) -> Tensor[(7, 7, 12), float32] {
  @func_4700(%var_4702, %var_4703) /* ty=Tensor[(7, 7, 12), float32] */
}

def @func_5788(%var_5786: Tensor[(270), float64]) -> (Tensor[(15, 5, 15), float64], Tensor[(3, 7, 11), bool], Tensor[(9, 3, 10), float64], Tensor[(270), float64], Tensor[(12, 5, 11), float64], Tensor[(12, 5, 11), float32], Tensor[(8, 14, 8), float32]) {
  @func_5785(%var_5786) /* ty=(Tensor[(15, 5, 15), float64], Tensor[(3, 7, 11), bool], Tensor[(9, 3, 10), float64], Tensor[(270), float64], Tensor[(12, 5, 11), float64], Tensor[(12, 5, 11), float32], Tensor[(8, 14, 8), float32]) */
}

def @func_6920() -> Tensor[(12, 10, 5), float32] {
  %862 = fn () -> Tensor[(12, 10, 5), float32] {
    @func_4922() /* ty=Tensor[(12, 10, 5), float32] */
  };
  %862() /* ty=Tensor[(12, 10, 5), float32] */
}

def @func_2516() -> Tensor[(8, 14, 8), float32] {
  %863 = @func_1778() /* ty=(Tensor[(8, 14, 8), float32],) */;
  %863.0
}

def @func_6501(%var_6500: Tensor[(720), float32]) -> (Tensor[(8, 14, 8), float32], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(6, 10, 12), float32], Tensor[(720), float32], Tensor[(12, 10, 5), float32]) {
  %884 = fn (%var_6481: Tensor[(720), float32]) -> (Tensor[(8, 14, 8), float32], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(6, 10, 12), float32], Tensor[(720), float32], Tensor[(12, 10, 5), float32]) {
    %864 = @func_5282() /* ty=(Tensor[(8, 14, 8), float32],) */;
    %865 = @func_2885() /* ty=(Tensor[(12, 10, 5), float64], Tensor[(12, 10, 5), float32]) */;
    %866 = %865.1;
    %867 = cast(%866, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %868 = @func_5835() /* ty=(Tensor[(15, 5, 15), int16],) */;
    %869 = log10(%867) /* ty=Tensor[(12, 10, 5), float32] */;
    %870 = cast(%869, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %871 = cast(%869, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %872 = reshape(%870, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %873 = reshape(%871, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %874 = cast(%var_6481, dtype="float32") /* ty=Tensor[(720), float32] */;
    %875 = reshape(%874, newshape=[6, 10, 12]) /* ty=Tensor[(6, 10, 12), float32] */;
    %876 = @func_5304(%875) /* ty=(Tensor[(6, 10, 12), float32],) */;
    %877 = @func_867() /* ty=(Tensor[(12, 10, 5), float32],) */;
    %878 = %864.0;
    %879 = %868.0;
    %880 = @func_30(%872, %873) /* ty=Tensor[(12, 10, 5), float32] */;
    %881 = @func_5869() /* ty=Tensor[(15, 5, 15), float64] */;
    %882 = %876.0;
    %883 = %877.0;
    (%878, %869, %879, %880, %881, %882, %var_6481, %883)
  };
  %884(%var_6500) /* ty=(Tensor[(8, 14, 8), float32], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(6, 10, 12), float32], Tensor[(720), float32], Tensor[(12, 10, 5), float32]) */
}

def @func_2642() -> Tensor[(15, 5, 15), float64] {
  %888 = fn () -> Tensor[(15, 5, 15), float64] {
    %885 = @func_1070() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
    %886 = %885.0;
    %887 = cast(%886, dtype="float64") /* ty=Tensor[(15, 5, 15), float64] */;
    atan(%887) /* ty=Tensor[(15, 5, 15), float64] */
  };
  %888() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_6044(%var_6042: float32, %var_6043: Tensor[(4, 1, 15), float32]) -> (Tensor[(4, 1, 15), bool], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64]) {
  @func_6040(%var_6042, %var_6043) /* ty=(Tensor[(4, 1, 15), bool], Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64]) */
}

def @func_512() -> Tensor[(15, 5, 15), float64] {
  %890 = fn () -> Tensor[(15, 5, 15), float64] {
    %889 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %889.0
  };
  %890() /* ty=Tensor[(15, 5, 15), float64] */
}

def @func_4903() -> (Tensor[(15, 5, 15), float64],) {
  %891 = @func_4870() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(8, 14, 8), float32]) */;
  %892 = %891.0;
  (%892,)
}

def @func_1955(%var_1943: Tensor[(12, 10, 5), float32]) -> (Tensor[(12, 10, 5), bool],) {
  %893 = @func_1355() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float64], Tensor[(15, 5, 15), int16], Tensor[(12, 10, 5), float32]) */;
  %894 = %893.3;
  %895 = cast(%var_1943, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%894, dtype="bool") /* ty=Tensor[(12, 10, 5), bool] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %899 = equal(%897, %898) /* ty=Tensor[(12, 10, 5), bool] */;
  (%899,)
}

def @func_4569(%var_4546: Tensor[(16, 7, 16), float32]) -> (Tensor[(16, 7, 16), float32], Tensor[(8, 14, 8), float64]) {
  %900 = cast(%var_4546, dtype="float32") /* ty=Tensor[(16, 7, 16), float32] */;
  %901 = @func_1005() /* ty=(Tensor[(8, 14, 8), float64],) */;
  %902 = sinh(%900) /* ty=Tensor[(16, 7, 16), float32] */;
  %903 = %901.0;
  (%902, %903)
}

def @func_5581(%var_5575: Tensor[(650, 2), float32]) -> (Tensor[(8, 14, 8), float64], Tensor[(10, 10, 13), bool], Tensor[(650, 2), float32]) {
  %904 = cast(%var_5575, dtype="float32") /* ty=Tensor[(650, 2), float32] */;
  %905 = cast(%var_5575, dtype="float32") /* ty=Tensor[(650, 2), float32] */;
  %906 = reshape(%904, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
  %907 = reshape(%905, newshape=[10, 10, 13]) /* ty=Tensor[(10, 10, 13), float32] */;
  %908 = @func_2611() /* ty=Tensor[(8, 14, 8), float64] */;
  %909 = @func_3335(%906, %907) /* ty=Tensor[(10, 10, 13), bool] */;
  (%908, %909, %var_5575)
}

def @func_4923() -> Tensor[(12, 10, 5), float32] {
  %911 = fn () -> Tensor[(12, 10, 5), float32] {
    %910 = @func_4652() /* ty=(Tensor[(12, 10, 5), float32], Tensor[(1300), float64]) */;
    %910.0
  };
  %911() /* ty=Tensor[(12, 10, 5), float32] */
}

def @func_469(%var_467: Tensor[(15, 5, 15), float64], %var_468: Tensor[(600), float32]) -> (Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) {
  %942 = fn (%var_392: Tensor[(15, 5, 15), float64], %var_419: Tensor[(600), float32]) -> (Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) {
    %912 = @func_193() /* ty=(Tensor[(15, 5, 15), float64],) */;
    %913 = %912.0;
    %914 = cast(%var_392, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
    %915 = shape_of(%913, dtype="int32") /* ty=Tensor[(3), int32] */;
    %916 = cast(%913, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
    %917 = dyn.reshape(%914, %915, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %918 = cast(%var_419, dtype="float32") /* ty=Tensor[(600), float32] */;
    %919 = cast(%var_419, dtype="float32") /* ty=Tensor[(600), float32] */;
    %920 = reshape(%918, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %921 = reshape(%919, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %922 = @func_30(%920, %921) /* ty=Tensor[(12, 10, 5), float32] */;
    %923 = cast(%922, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %924 = cast(%922, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %925 = reshape(%923, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %926 = reshape(%924, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), float32] */;
    %927 = cast(%var_419, dtype="uint32") /* ty=Tensor[(600), uint32] */;
    %928 = shape_of(%922, dtype="int32") /* ty=Tensor[(3), int32] */;
    %929 = cast(%922, dtype="uint32") /* ty=Tensor[(12, 10, 5), uint32] */;
    %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %931 = bitwise_or(%929, %930) /* ty=Tensor[(12, 10, 5), uint32] */;
    %932 = cast(%931, dtype="float32") /* ty=Tensor[(12, 10, 5), float32] */;
    %933 = @func_235() /* ty=(Tensor[(15, 5, 15), float64], Tensor[(15, 5, 15), float64], Tensor[(3, 7, 1), float64], Tensor[(21), float32], Tensor[(3, 7, 1), float64], Tensor[(15, 5, 15), float64]) */;
    %934 = cast(%var_419, dtype="float32") /* ty=Tensor[(600), float32] */;
    %935 = reshape(%934, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %936 = @func_329(%935) /* ty=(Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32], Tensor[(3, 7, 1), float64], Tensor[(3, 7, 1), float64], Tensor[(12, 10, 5), float32], Tensor[(15, 5, 15), float64], Tensor[(12, 10, 5), float32]) */;
    %937 = logical_or(%916, %917) /* ty=Tensor[(15, 5, 15), bool] */;
    %938 = @func_30(%925, %926) /* ty=Tensor[(12, 10, 5), float32] */;
    %939 = log2(%932) /* ty=Tensor[(12, 10, 5), float32] */;
    %940 = %933.3;
    %941 = %936.1;
    (%937, %938, %939, %940, %941)
  };
  %942(%var_467, %var_468) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(12, 10, 5), float32], Tensor[(12, 10, 5), float32], Tensor[(21), float32], Tensor[(12, 10, 5), float32]) */
}

def @func_1005() -> (Tensor[(8, 14, 8), float64],) {
  %943 = @func_811() /* ty=(Tensor[(8, 14, 8), float64], Tensor[(12, 10, 5), float32], Tensor[(600), float32]) */;
  %944 = %943.0;
  (%944,)
}

def @func_3499() -> Tensor[(8, 14, 8), float32] {
  %945 = fn () -> Tensor[(8, 14, 8), float32] {
    @func_2516() /* ty=Tensor[(8, 14, 8), float32] */
  };
  %945() /* ty=Tensor[(8, 14, 8), float32] */
}

def @func_7140(%var_7139: Tensor[(15, 5, 15), float64]) -> (Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) {
  %953 = fn (%var_7127: Tensor[(15, 5, 15), float64]) -> (Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) {
    %946 = @func_5869() /* ty=Tensor[(15, 5, 15), float64] */;
    %947 = cast(%var_7127, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
    %948 = shape_of(%946, dtype="int32") /* ty=Tensor[(3), int32] */;
    %949 = cast(%946, dtype="bool") /* ty=Tensor[(15, 5, 15), bool] */;
    %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %951 = less(%949, %950) /* ty=Tensor[(15, 5, 15), bool] */;
    %952 = @func_5989() /* ty=Tensor[(15, 5, 15), float64] */;
    (%951, %952)
  };
  %953(%var_7139) /* ty=(Tensor[(15, 5, 15), bool], Tensor[(15, 5, 15), float64]) */
}

def @func_3430() -> (Tensor[(600), float32],) {
  @func_3428() /* ty=(Tensor[(600), float32],) */
}

def @func_2387(%var_2385: Tensor[(9, 3, 10), float64]) -> (Tensor[(9, 3, 10), float64],) {
  @func_2384(%var_2385) /* ty=(Tensor[(9, 3, 10), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

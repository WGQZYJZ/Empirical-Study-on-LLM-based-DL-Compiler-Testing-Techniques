import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_30 = relay.var("var_30", dtype = "uint64", shape = (6, 16, 13))#candidate|30|(6, 16, 13)|var|uint64
var_31 = relay.var("var_31", dtype = "uint64", shape = (6, 16, 13))#candidate|31|(6, 16, 13)|var|uint64
bop_32 = relay.bitwise_or(var_30.astype('uint64'), relay.reshape(var_31.astype('uint64'), relay.shape_of(var_30))) # shape=(6, 16, 13)
var_55 = relay.var("var_55", dtype = "uint64", shape = (6, 16, 13))#candidate|55|(6, 16, 13)|var|uint64
bop_56 = relay.right_shift(bop_32.astype('uint32'), relay.reshape(var_55.astype('uint32'), relay.shape_of(bop_32))) # shape=(6, 16, 13)
output = relay.Tuple([bop_56,])
output2 = relay.Tuple([bop_56,])
func_66 = relay.Function([var_30,var_31,var_55,], output)
mod['func_66'] = func_66
mod = relay.transform.InferType()(mod)
mutated_mod['func_66'] = func_66
mutated_mod = relay.transform.InferType()(mutated_mod)
func_66_call = mutated_mod.get_global_var('func_66')
var_68 = relay.var("var_68", dtype = "uint64", shape = (6, 16, 13))#candidate|68|(6, 16, 13)|var|uint64
var_69 = relay.var("var_69", dtype = "uint64", shape = (6, 16, 13))#candidate|69|(6, 16, 13)|var|uint64
var_70 = relay.var("var_70", dtype = "uint64", shape = (6, 16, 13))#candidate|70|(6, 16, 13)|var|uint64
call_67 = func_66_call(var_68,var_69,var_70,)
output = call_67
func_71 = relay.Function([var_68,var_69,var_70,], output)
mutated_mod['func_71'] = func_71
mutated_mod = relay.transform.InferType()(mutated_mod)
const_232 = relay.const([[[-0.397166],[-9.507492],[-5.682620],[3.276305],[-3.153532],[1.685479],[5.256902],[8.592734],[5.417316],[-5.563626],[-6.589770],[9.259406]],[[0.275677],[-6.871730],[8.039769],[-0.295043],[2.937748],[-1.979465],[-7.932707],[-9.757269],[0.442197],[1.600143],[-9.630499],[9.575244]],[[2.000914],[6.494656],[1.790179],[-6.358705],[-9.092553],[9.246378],[-3.229340],[8.585695],[-6.779528],[2.519472],[4.132955],[-5.937660]],[[6.526498],[8.245615],[-2.388624],[4.445854],[-4.944117],[-0.238662],[-1.461871],[-0.349704],[8.193604],[-5.198198],[6.840783],[-6.161087]],[[-0.592065],[-9.120636],[1.387385],[-9.540571],[-4.451937],[-5.585801],[-9.312276],[-3.521468],[-1.478118],[-6.337437],[-5.925871],[-7.705829]],[[5.171921],[6.930346],[-9.705465],[-0.525153],[-2.507315],[3.378668],[0.209561],[-2.123398],[3.180975],[8.770122],[6.792694],[6.688522]],[[-3.947041],[-1.983347],[-5.030009],[-7.623952],[4.664894],[9.608969],[5.490348],[-2.697221],[-0.300846],[2.176032],[9.119838],[-0.014205]],[[-0.741875],[6.087049],[0.369266],[-3.908971],[-0.918709],[-1.438029],[7.437782],[-2.714154],[4.497490],[-9.269674],[-4.993390],[-9.165737]]], dtype = "float32")#candidate|232|(8, 12, 1)|const|float32
uop_233 = relay.cos(const_232.astype('float32')) # shape=(8, 12, 1)
uop_238 = relay.sqrt(uop_233.astype('float64')) # shape=(8, 12, 1)
bop_240 = relay.minimum(uop_233.astype('uint8'), relay.reshape(uop_238.astype('uint8'), relay.shape_of(uop_233))) # shape=(8, 12, 1)
uop_248 = relay.sin(bop_240.astype('float32')) # shape=(8, 12, 1)
output = relay.Tuple([uop_248,])
output2 = relay.Tuple([uop_248,])
func_257 = relay.Function([], output)
mod['func_257'] = func_257
mod = relay.transform.InferType()(mod)
mutated_mod['func_257'] = func_257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_257_call = mutated_mod.get_global_var('func_257')
call_258 = func_257_call()
output = call_258
func_259 = relay.Function([], output)
mutated_mod['func_259'] = func_259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_269 = relay.TupleGetItem(func_257_call(), 0)
call_270 = relay.TupleGetItem(func_259_call(), 0)
const_276 = relay.const([[[-9.138496,5.312318,-6.168068,-1.806576,-0.113454,-2.913816,5.932963,0.953867,-6.182473,-2.078353,-3.057761,-2.471907,-3.965318,5.775834,-2.615458,3.916673],[2.918880,-0.293607,7.609141,2.834555,-8.461746,8.198111,4.335504,-1.869021,7.747299,-3.115596,8.113608,8.070639,2.898943,-4.485854,5.562732,-1.977099],[-6.894493,1.437406,9.951721,-0.693685,-8.248837,2.859098,-0.895078,4.527822,4.904626,1.100321,-1.007596,-2.859198,1.514853,6.243327,-7.763414,8.098209],[-8.914784,-3.224362,5.432755,0.562597,-2.600661,2.052517,-8.545463,-8.695670,7.656208,-4.490624,7.578272,4.289508,-4.354099,7.303566,5.328857,8.200746],[6.699866,4.988610,-4.992802,-3.282614,-6.320354,-9.677726,-8.741058,-2.730058,-5.977205,0.593731,5.431226,5.764278,5.154403,-6.610088,4.544852,0.777269],[-7.600059,-6.465653,5.426525,5.957942,-3.029514,7.188360,2.951721,-2.877824,-8.463017,8.570420,2.582558,5.450226,0.530300,1.935512,-4.778275,-9.993736],[4.172656,5.192235,7.867290,-5.562787,-8.289957,9.146865,7.008873,-4.030641,0.038872,8.301140,-6.968102,-5.452287,4.839744,-6.585982,-3.799451,-2.760558],[7.198727,-4.110181,-9.521040,1.342654,-7.764569,-8.165502,-8.974132,-8.320026,-9.269251,-9.806542,-4.007224,7.034135,-1.237799,1.020556,-3.161545,7.218384],[-1.917227,-4.563739,-8.229686,4.687191,-4.784010,9.726425,-3.461045,7.931979,3.751189,2.746470,-5.018017,0.532485,2.868918,1.759710,-9.240241,5.540027],[-5.719831,-2.727447,1.340008,-3.783488,6.054902,4.403527,8.035896,2.596099,-9.069544,-2.034297,2.883277,-9.608364,6.447473,-0.344076,-8.379225,-1.764427],[8.608745,5.468910,-5.995609,5.027265,0.376681,-7.484881,9.166396,-8.413818,-2.994520,-5.962397,-3.177170,-6.914404,-9.037693,-2.810498,6.376876,7.830965],[9.860576,6.623012,-0.690023,1.377332,9.180346,-3.323404,2.952547,2.663534,-0.776506,0.739602,-5.714200,-8.603228,-5.201298,9.730696,8.320905,7.949585]],[[0.671956,-0.606911,2.431770,-4.630913,4.852386,1.112519,2.682087,4.030041,-3.294085,-9.248087,-1.736644,9.884267,1.484066,-8.042303,9.529979,3.050244],[5.906596,0.101751,-6.675744,6.297667,-8.279400,-4.849653,9.534720,4.477699,2.136300,-9.495667,-3.229801,-5.547074,-8.614088,-4.570541,-1.932771,6.357781],[-5.651199,-4.456306,-6.512498,-9.042937,-5.602984,-7.553505,-1.887811,7.987762,1.169748,-9.219247,0.047660,-0.424928,6.483248,-5.031730,-0.590229,1.367320],[-2.542532,6.433636,-0.928963,9.871422,5.654924,-2.994689,-9.582848,5.641857,-1.156252,0.030866,-8.764422,8.321743,7.309609,-7.680028,1.118557,-0.944827],[4.852864,-5.531721,4.836663,3.005924,9.943093,4.542852,9.048811,-6.830630,-0.045947,-4.318115,4.189071,-1.401061,7.333377,-2.420296,1.023590,-5.165844],[5.326608,-6.901378,-5.799725,2.882663,2.342349,5.427511,0.564851,-4.897769,-0.148148,-5.751890,4.438831,-0.377817,1.144535,1.674952,2.123518,-4.414157],[7.025913,4.774084,-7.663284,1.907927,7.019791,-3.782444,-6.601148,-9.649576,0.072305,-0.824544,-8.752536,8.703507,-7.200583,-2.413569,-1.983286,-3.382685],[8.343848,-6.381542,-5.834722,1.322291,-2.577554,-8.927734,8.701075,6.472406,2.304128,8.065934,-6.226336,-7.976914,6.591950,-4.409256,5.842245,6.915550],[4.816934,-5.152080,-5.753003,1.755153,2.803694,8.693224,6.649903,-5.164783,5.709675,-0.040658,-4.075777,-5.276290,7.292328,-8.866849,3.711043,4.972847],[8.256821,-0.274673,0.963765,-7.365902,1.974341,1.163273,2.273707,6.020820,2.431945,-4.538148,-5.953384,-3.414027,-4.977903,-6.855132,-2.040282,-2.285775],[5.842673,6.626795,-5.663541,-4.570563,-9.292597,-4.957629,7.142530,-4.528006,1.497102,-7.692854,6.198612,5.669576,0.929406,5.215246,5.097466,2.742243],[-4.895523,-9.976030,9.254200,-2.958158,-3.542982,5.312645,-0.933324,6.974717,-6.761270,-0.543984,-4.404375,0.673454,5.314291,6.952152,-8.010549,-0.050762]],[[-8.994000,-4.839768,1.066327,3.619718,8.645149,8.218377,-3.786626,-3.575678,-8.216362,-6.387244,-4.910727,0.043887,-4.110521,3.480323,5.029291,1.292047],[-1.440866,8.848157,-4.411105,3.597125,1.511751,7.896482,1.038349,1.742790,-8.080507,-5.321043,6.128231,1.108975,2.047272,1.669867,-1.758216,-4.814964],[-1.399642,-9.168432,-2.784853,-2.957551,-9.425799,4.891528,7.958000,6.543799,-6.316502,1.659725,8.876440,3.953028,9.789008,-9.537614,7.202221,-0.412093],[-4.172759,-5.806054,-2.466560,6.649964,-0.910982,3.010826,8.461019,-8.794273,-5.692842,1.328705,-9.940600,-9.316246,6.760810,5.875020,5.507816,-3.295488],[-7.467331,-4.892879,-6.943070,4.112848,-4.795239,-9.954159,3.805903,1.872930,-3.747414,-4.483394,9.835076,-8.811436,1.199179,2.560335,7.377321,-4.961559],[-0.423960,5.562059,-9.087680,-2.603096,7.604649,-7.447311,7.373830,-3.357294,2.482767,-1.634143,-2.903299,3.112914,-6.049263,-6.607216,8.083678,8.558149],[-7.170377,-3.091230,0.292503,4.725642,1.528377,1.861205,-3.181964,8.402698,-6.313028,-9.069521,-8.161075,-7.629065,9.732250,8.897615,-1.917225,-1.784197],[7.826551,0.228448,9.185142,6.020599,8.787010,5.615007,-4.433733,9.664536,-6.988599,8.208399,1.500430,4.574913,1.064250,7.450220,3.981511,-5.345144],[-0.751771,4.926349,-3.937329,4.862565,-2.413320,2.935953,9.910959,9.577969,4.529958,-7.140233,9.342042,7.689193,-9.525128,-4.962550,-6.524412,-3.333412],[-0.354554,9.489881,-0.520859,-7.548016,9.262550,-8.934273,-9.679361,7.814818,-3.533531,6.679308,3.544585,-3.703360,7.422509,-9.235378,7.319367,3.076460],[-0.773101,7.456711,6.748523,9.325665,0.614731,0.786563,-8.315979,8.043933,-3.195695,-7.103157,9.404546,-6.715274,5.629331,5.864974,2.609345,-5.855356],[3.468747,5.990961,-3.046365,6.230010,-1.193360,0.761881,0.391191,2.967022,7.814130,-3.420838,5.748048,-4.483193,2.301121,2.645117,-9.335570,-2.459844]],[[6.910696,-1.856571,5.746944,-2.479472,-2.012924,-8.346467,-4.873906,1.119792,1.489641,6.838062,-5.406621,1.974293,4.557886,1.580099,-2.964231,2.173820],[9.050069,2.596724,0.964104,-9.746502,-4.215529,-2.326188,-8.540361,-5.708279,8.651910,-1.525179,1.375945,2.768167,8.247190,-7.202734,-0.071384,9.461616],[8.181003,-2.793446,-8.446196,-2.763765,4.635463,-4.056267,6.710353,9.224771,-5.772939,-8.949276,1.800890,-2.552907,-5.999561,8.884939,-1.237934,-3.817867],[3.405351,-2.772555,3.651414,-1.858046,5.495529,4.793796,-2.575627,3.297206,-1.689011,-0.573452,1.230629,-8.323848,-4.076899,7.010515,2.848091,-0.594688],[-7.119525,-0.433883,-0.952859,3.828909,7.676388,-2.347191,0.815626,-5.630251,9.522162,-4.144265,6.976537,1.450183,-7.772695,-6.033952,-6.463787,-1.559063],[-9.972939,4.464975,-4.138931,-1.948355,6.052033,3.476511,0.159060,-5.111124,-8.864201,4.987902,-9.596497,4.033000,3.264632,-8.243068,5.003596,7.023715],[7.641946,-1.482444,6.990628,-5.087802,4.017095,3.768018,7.160860,6.030235,-6.265526,-2.430880,2.366202,9.032210,2.839099,0.666439,3.832366,-9.844701],[3.940618,-3.895310,-4.796893,5.687804,-3.484779,-0.668897,-6.220715,0.614032,-4.523323,5.769523,-8.413646,2.554762,-9.025616,-0.705530,7.463949,4.511459],[2.060722,2.149423,-4.410867,9.021400,4.659205,-1.884593,6.597502,2.397222,0.523882,-8.526241,3.723152,-4.062082,-5.738194,8.081335,6.360277,-4.586392],[-8.067018,-1.613034,-8.620947,7.966165,0.543273,8.298348,-4.829451,0.052475,-2.071341,5.076461,5.221851,4.049924,-7.280603,2.086749,4.347428,-2.582092],[8.855203,-8.424273,-3.519637,0.440464,-6.813447,-7.586699,5.767725,-8.547183,5.171173,-7.980099,5.105342,-4.952885,-2.083918,-5.510598,6.741343,-4.172588],[9.629328,-8.446449,-2.780494,-6.383290,8.198289,5.088442,-3.879021,-4.578304,9.899071,-8.163710,-5.243999,-9.079719,-6.114216,0.785997,1.797088,-7.906723]],[[-3.831100,-4.179728,-2.162164,6.202055,-9.948308,8.226309,9.041765,-5.514892,-7.337461,4.012897,-1.865324,9.196432,-7.138011,-4.856118,-0.625218,5.543104],[-4.354162,-5.559642,-8.533900,-1.550508,-2.637400,9.997761,8.409714,9.783857,-0.757625,-5.884802,-2.910390,5.340152,-3.179972,4.317447,-7.496682,-5.861082],[-4.356906,6.449398,-2.276131,4.559116,1.308679,-4.103663,9.445642,-4.032929,3.718308,-1.095138,5.704370,-0.369283,1.209264,-2.281467,-3.382190,-2.878802],[7.555048,5.855635,7.421333,5.949000,7.485064,5.489616,3.870035,-8.037804,5.164734,-8.850566,-0.761460,-3.392301,-1.237057,4.983026,2.691682,-2.679799],[-2.972181,7.886636,-6.249939,-9.007270,-7.447946,-1.434898,-7.298848,-9.446905,0.275941,-0.217437,-5.161841,-4.452788,3.630607,8.494761,4.717602,-0.047828],[-7.482292,-8.560311,-7.709462,-2.094764,-7.213262,-6.454674,-7.647732,-4.067715,3.000855,9.128358,-4.433618,4.991298,-0.838379,-5.138305,-7.478984,7.374131],[-9.329828,5.308137,-4.355505,-0.472967,7.553420,3.462129,5.561191,1.901819,-6.911527,-1.479729,-5.295479,6.261902,7.241605,5.785895,-7.363746,-8.302401],[-2.910942,0.928564,3.391338,6.623391,-1.283853,-7.224191,8.697985,-9.472638,2.289088,-4.045373,-4.908750,-2.929180,1.560271,9.768319,-9.469926,6.925618],[-5.131769,7.539736,-5.071987,-4.109574,-5.612737,-4.329389,-3.627853,7.687936,-2.387392,-5.063022,3.746430,-9.203617,-1.530291,-6.021426,5.068361,4.162478],[-7.233841,5.705880,9.972438,2.903012,7.036611,9.903576,2.632885,2.659252,-6.615394,-7.612232,-2.443294,1.859334,3.477166,7.574977,5.521897,-4.269221],[7.708336,-0.665237,6.462994,-2.830131,6.883968,-4.643577,6.968509,-6.213273,8.826936,9.813599,3.253980,-8.830888,1.148921,6.829465,-0.075931,-0.669529],[-1.085196,2.681147,5.253244,-8.252488,8.416175,9.966422,-4.065365,0.594201,-9.817612,3.770641,1.826325,-6.264308,5.158743,1.938600,6.099721,7.997448]],[[-3.338076,1.933393,3.808023,-2.186857,3.946972,2.014333,-8.829143,7.826503,4.058951,-4.483049,8.915870,1.580588,0.733729,-9.628609,5.701954,-3.680927],[-5.422427,5.862407,0.532038,4.122130,5.027527,-3.228545,9.546591,-9.236092,-3.758452,1.074329,-0.724248,-5.462591,8.772373,-3.251849,-4.794762,-5.324266],[9.000193,-7.151874,8.892576,5.228060,-4.218630,-7.736597,1.358947,6.583628,-8.983572,6.840639,1.107874,-4.213731,4.769124,5.888712,3.767685,-9.451149],[0.304708,2.360091,-2.790887,8.533997,-6.572596,-6.185426,6.629187,0.985362,-9.641505,-0.293625,-9.025616,-8.657803,4.381280,9.226369,5.902098,1.255715],[0.151697,-7.438265,5.035084,-2.878876,8.091518,-8.969336,-9.065390,-9.968495,-0.178441,1.796118,6.823397,-2.595534,7.144827,0.037887,-9.731573,-2.608346],[4.637632,3.906962,-3.999653,-1.499986,3.122598,-3.118105,-2.733165,-9.436290,5.219649,3.880904,-1.061839,-3.082749,-4.616873,-3.853578,-0.358292,-9.866058],[0.387164,9.540248,4.018948,-3.679704,-0.690211,6.893514,2.013664,3.477537,2.849993,-9.647635,7.256428,3.428191,-5.973709,-2.440541,-4.286591,2.514293],[-6.398824,-6.863151,-2.918598,-0.053503,4.233676,-5.089798,-7.572013,-8.918427,-9.404160,1.649039,6.781538,1.154644,-1.352825,-0.476343,-8.054423,5.462339],[-5.464645,9.872364,-1.185503,9.979545,8.809314,-9.149495,-2.114670,0.047894,5.867152,-6.898748,9.568235,1.303727,6.491098,2.727007,8.379495,-2.005215],[-4.694204,-3.342652,-5.480818,-4.784813,5.862936,6.999000,6.180939,2.221302,0.553166,2.115491,5.156664,-4.685081,2.850934,7.352377,-3.154027,-3.716286],[3.155252,3.997637,0.725324,9.545847,9.315742,-9.449502,2.794112,0.946531,8.469573,9.786786,1.672077,0.769396,6.632648,6.505583,-5.858132,-4.498650],[4.327046,8.734363,-5.086217,8.896020,3.224812,-4.457475,5.319142,4.372658,7.634609,-8.006366,9.232702,7.101520,-6.464138,-7.356569,-6.339086,-3.913130]],[[8.897708,-2.733545,-6.866341,2.973616,9.528574,-8.557954,9.278604,9.658369,-9.685200,-7.618196,2.552119,9.082696,-2.643340,4.533396,-8.702803,-9.483410],[0.094338,9.150448,2.425711,-9.727459,9.019447,8.966407,-3.243815,2.751806,-2.862217,-3.160313,2.881663,4.567920,-3.104441,-0.013678,-3.661213,-5.924581],[-6.751430,9.838318,-7.775508,-3.029873,-0.479546,-9.202536,0.209764,-3.597488,2.198526,3.322307,-6.520469,0.217347,1.040799,7.613957,-2.358003,-9.304175],[-5.007177,-4.462612,2.941846,-9.556066,4.606219,-9.854626,-2.660440,-8.090531,-1.252954,-5.861678,6.482869,3.357523,4.946143,-8.381470,-1.300037,-9.840284],[6.913781,4.072968,-2.113213,-5.931354,-5.222867,-3.754186,5.554212,5.717285,-2.087457,-1.098493,5.285239,5.322858,9.076719,-8.769110,-1.285375,-3.754643],[-6.000158,-4.248320,6.325561,-7.036448,8.630148,-8.104621,3.705368,-2.543429,4.110931,7.098044,-6.198883,7.274427,3.972768,8.126308,7.750224,6.644267],[2.094192,-7.357991,-8.234577,2.950169,1.999215,6.243380,9.185518,-2.724390,-8.612773,0.385684,-9.622551,-5.083008,-7.308650,4.199662,0.242857,6.443708],[-3.591783,6.385961,-9.803325,6.609472,-9.962948,1.070759,-0.960113,-7.912600,5.944590,-9.760058,9.300003,8.090712,-4.438543,8.496152,2.216573,1.825440],[-8.344161,6.862046,5.315129,-7.165431,5.772134,3.106641,5.936948,-1.940694,4.644279,5.682745,-9.224686,-7.112552,8.106378,-5.995837,6.419043,0.336483],[5.631471,-0.540542,2.953841,-9.989583,-2.365031,-1.938627,-1.731408,7.328358,0.526873,-3.379649,6.281742,2.118637,-5.602211,-2.307146,6.591634,3.084070],[-1.022117,7.446718,-3.886181,-3.164529,3.650604,-0.237755,9.198932,0.235706,-6.832618,-7.914131,-1.163914,0.848114,-5.383425,-9.115609,2.280781,-3.242801],[-1.799114,0.154865,6.356119,1.838734,-2.081348,-2.069243,2.972251,0.371652,9.159504,-3.746756,3.936216,-5.338980,2.201360,6.264950,-2.461164,-8.977901]],[[5.203092,5.688072,6.754997,8.941947,0.332553,6.258627,4.457774,-9.860967,9.770799,-4.247109,-4.473809,-5.219634,-1.823080,-4.123705,8.558584,3.512786],[-3.457312,6.278497,3.782016,-3.783564,9.317614,-6.750471,-8.001741,1.065254,9.628178,-3.243319,3.282171,3.625418,-7.111530,-2.666123,-4.381106,-4.751381],[6.607532,-7.264304,-8.104965,4.320774,-4.052607,-1.403695,-1.929681,-0.860722,3.846170,-9.458453,6.856680,-2.323994,6.760772,3.031236,-9.237425,2.437476],[-9.470711,1.538332,-2.539633,-9.836020,-8.589443,2.214957,-3.030533,-4.485512,-6.588044,-6.740865,-3.111790,6.252702,-6.676868,5.333473,-0.687532,-0.363347],[-6.718300,8.940157,-3.788550,3.204720,-6.930007,9.794053,8.790447,-6.905547,-0.616863,3.105548,-0.133751,3.247537,-3.185008,8.176172,3.056104,6.463462],[6.794542,-3.426962,-6.627788,-1.467357,-8.536245,1.806309,2.796572,6.062646,3.085763,-6.131630,8.574684,-3.484480,-5.949865,-8.575024,5.149676,9.098597],[-8.794345,-2.424265,-8.866081,7.779023,-7.369274,-7.892056,-5.246197,-5.896871,-6.519315,6.702699,-4.964082,8.804203,-3.283024,-1.827860,8.920824,-8.574316],[8.054896,-1.580747,-2.239932,-9.131961,6.636451,-7.650555,-8.337515,5.964189,-8.974617,-2.148913,-6.913986,2.126243,9.010811,-7.559525,-5.493557,-2.517942],[8.976316,9.254179,-4.831653,-0.938408,-9.256621,8.669814,6.038509,8.928060,-3.966412,-6.202045,-1.603248,6.747319,1.232817,-4.548728,-0.256637,6.790893],[-3.786931,8.997269,-4.756801,-7.687239,7.345369,8.726993,-2.175906,-0.719618,-7.441629,8.420543,-4.366724,-6.339040,-2.273364,5.030945,6.278440,-6.960158],[0.358996,-5.169253,2.099740,-2.139209,3.832654,-9.759419,8.691616,-9.596054,8.159515,-9.762899,-2.009097,-8.147462,7.979893,7.985603,-5.432178,-7.742936],[-6.615250,-4.850788,2.718585,-4.134962,-7.657085,-2.648168,5.642928,-9.073093,-6.473249,-6.673858,4.477304,9.623834,8.785000,-7.120115,-1.914471,4.125425]]], dtype = "float32")#candidate|276|(8, 12, 16)|const|float32
bop_277 = relay.greater_equal(call_269.astype('bool'), const_276.astype('bool')) # shape=(8, 12, 16)
bop_280 = relay.greater_equal(call_270.astype('bool'), const_276.astype('bool')) # shape=(8, 12, 16)
output = relay.Tuple([bop_277,])
output2 = relay.Tuple([bop_280,])
func_282 = relay.Function([], output)
mod['func_282'] = func_282
mod = relay.transform.InferType()(mod)
output = func_282()
func_283 = relay.Function([], output)
mutated_mod['func_283'] = func_283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_296 = relay.TupleGetItem(func_257_call(), 0)
call_297 = relay.TupleGetItem(func_259_call(), 0)
func_66_call = mod.get_global_var('func_66')
func_71_call = mutated_mod.get_global_var('func_71')
var_339 = relay.var("var_339", dtype = "uint64", shape = (1248,))#candidate|339|(1248,)|var|uint64
call_338 = relay.TupleGetItem(func_66_call(relay.reshape(var_339.astype('uint64'), [6, 16, 13]), relay.reshape(var_339.astype('uint64'), [6, 16, 13]), relay.reshape(var_339.astype('uint64'), [6, 16, 13]), ), 0)
call_340 = relay.TupleGetItem(func_71_call(relay.reshape(var_339.astype('uint64'), [6, 16, 13]), relay.reshape(var_339.astype('uint64'), [6, 16, 13]), relay.reshape(var_339.astype('uint64'), [6, 16, 13]), ), 0)
output = relay.Tuple([call_296,call_338,var_339,])
output2 = relay.Tuple([call_297,call_340,var_339,])
func_341 = relay.Function([var_339,], output)
mod['func_341'] = func_341
mod = relay.transform.InferType()(mod)
var_342 = relay.var("var_342", dtype = "uint64", shape = (1248,))#candidate|342|(1248,)|var|uint64
output = func_341(var_342)
func_343 = relay.Function([var_342], output)
mutated_mod['func_343'] = func_343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_377 = relay.TupleGetItem(func_257_call(), 0)
call_378 = relay.TupleGetItem(func_259_call(), 0)
uop_379 = relay.log10(call_377.astype('float64')) # shape=(8, 12, 1)
uop_381 = relay.log10(call_378.astype('float64')) # shape=(8, 12, 1)
uop_386 = relay.acosh(uop_379.astype('float32')) # shape=(8, 12, 1)
uop_388 = relay.acosh(uop_381.astype('float32')) # shape=(8, 12, 1)
output = uop_386
output2 = uop_388
func_391 = relay.Function([], output)
mod['func_391'] = func_391
mod = relay.transform.InferType()(mod)
output = func_391()
func_392 = relay.Function([], output)
mutated_mod['func_392'] = func_392
mutated_mod = relay.transform.InferType()(mutated_mod)
var_403 = relay.var("var_403", dtype = "float64", shape = (10, 4, 3))#candidate|403|(10, 4, 3)|var|float64
uop_404 = relay.exp(var_403.astype('float64')) # shape=(10, 4, 3)
output = uop_404
output2 = uop_404
func_408 = relay.Function([var_403,], output)
mod['func_408'] = func_408
mod = relay.transform.InferType()(mod)
var_409 = relay.var("var_409", dtype = "float64", shape = (10, 4, 3))#candidate|409|(10, 4, 3)|var|float64
output = func_408(var_409)
func_410 = relay.Function([var_409], output)
mutated_mod['func_410'] = func_410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_420 = relay.TupleGetItem(func_257_call(), 0)
call_421 = relay.TupleGetItem(func_259_call(), 0)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_430 = relay.TupleGetItem(func_257_call(), 0)
call_431 = relay.TupleGetItem(func_259_call(), 0)
bop_433 = relay.divide(call_420.astype('float32'), relay.reshape(call_430.astype('float32'), relay.shape_of(call_420))) # shape=(8, 12, 1)
bop_436 = relay.divide(call_421.astype('float32'), relay.reshape(call_431.astype('float32'), relay.shape_of(call_421))) # shape=(8, 12, 1)
bop_440 = relay.power(bop_433.astype('float32'), relay.reshape(call_430.astype('float32'), relay.shape_of(bop_433))) # shape=(8, 12, 1)
bop_443 = relay.power(bop_436.astype('float32'), relay.reshape(call_431.astype('float32'), relay.shape_of(bop_436))) # shape=(8, 12, 1)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_449 = relay.TupleGetItem(func_257_call(), 0)
call_450 = relay.TupleGetItem(func_259_call(), 0)
output = relay.Tuple([bop_440,call_449,])
output2 = relay.Tuple([bop_443,call_450,])
func_455 = relay.Function([], output)
mod['func_455'] = func_455
mod = relay.transform.InferType()(mod)
mutated_mod['func_455'] = func_455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_455_call = mutated_mod.get_global_var('func_455')
call_456 = func_455_call()
output = call_456
func_457 = relay.Function([], output)
mutated_mod['func_457'] = func_457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_471 = relay.TupleGetItem(func_257_call(), 0)
call_472 = relay.TupleGetItem(func_259_call(), 0)
func_66_call = mod.get_global_var('func_66')
func_71_call = mutated_mod.get_global_var('func_71')
const_475 = relay.const([3,1,-2,6,4,-7,-2,3,-10,-1,6,-4,-8,7,-5,-5,4,6,9,-7,8,6,-4,-5,7,-3,-5,10,-4,-3,3,-9,3,2,-7,-7,-4,-5,1,5,6,-2,6,6,-1,9,6,1,-3,-3,6,7,4,-10,-2,4,-4,-10,-2,-8,-5,9,7,3,4,2,8,10,3,-9,-7,-6,-1,9,3,8,-6,-1,6,-5,-2,2,8,1,4,-8,-5,9,-1,9,8,3,-4,-9,10,5,-10,-1,-9,-10,4,-3,2,-3,10,6,1,2,-4,8,-4,4,-9,2,7,2,-10,10,-7,-5,-7,3,-8,5,-7,-6,7,-2,-6,8,-8,7,-5,2,-10,-9,7,8,8,-7,-8,5,-2,-4,3,2,-2,1,-5,-1,1,-3,3,-4,-5,-7,4,8,9,6,6,3,-8,7,-9,-8,2,7,-1,8,1,-8,-5,3,-8,4,-9,-2,-3,-10,-1,3,10,-9,-10,-6,10,8,-10,-9,-1,4,2,-9,-7,7,9,-1,9,-9,-7,-2,9,-2,2,-9,4,5,9,1,4,8,-8,-10,9,8,6,-2,-1,-4,-6,9,6,6,-9,5,-4,5,-2,-1,-6,-8,10,-9,-4,5,8,10,8,-3,-2,10,-1,-2,-2,5,-3,-2,3,-3,6,9,-3,-10,-6,10,1,-5,-5,-7,-1,6,-5,4,-2,9,8,2,8,4,4,3,2,-10,-7,5,-9,-10,1,-4,-5,-3,-10,4,-8,1,2,7,-4,-2,-4,-6,8,-7,2,-6,-2,-9,5,-10,4,4,7,-2,10,1,1,-7,3,-1,-3,1,-5,10,6,10,-3,-7,-8,1,-3,2,-10,-4,-2,10,-10,-3,-3,-5,-4,10,9,-8,-4,-7,-3,-2,7,-6,1,-6,-6,5,3,10,-7,3,-6,5,3,-9,-10,-7,-7,7,8,-8,-4,6,5,3,4,7,10,-2,-3,-7,-1,9,-7,5,-10,2,8,-1,3,4,-1,-9,-3,4,-1,-9,5,-2,4,2,2,8,-3,2,5,3,-9,7,-3,-7,1,-9,-2,1,-2,-2,6,-4,-10,-2,6,-1,10,-6,8,-7,9,-5,1,-9,-6,7,2,10,-2,7,10,1,-5,-2,10,1,-9,10,-2,-1,9,-2,-1,-3,7,-9,5,8,6,-4,-3,-6,3,2,-5,6,1,5,4,-5,5,9,-5,-3,-1,9,-1,-6,-3,10,1,1,7,6,-1,2,6,-9,10,-3,-6,5,-9,2,1,-9,-9,4,4,7,2,5,-1,-8,4,-2,-6,-10,9,-7,7,3,-6,-3,-9,-8,-2,-9,-5,5,-8,4,5,-9,7,5,3,1,6,-10,6,6,-10,10,9,9,-2,3,4,-2,-1,-6,-6,4,10,-7,-1,-2,-7,8,-6,5,-9,-5,-2,5,-5,-8,7,5,5,4,6,-8,-10,10,5,-6,-6,7,-8,-3,-5,-8,-2,-2,6,4,-3,4,3,1,-1,-2,8,9,4,-2,3,-1,-2,4,8,9,-4,-7,9,5,-7,-9,10,2,7,5,4,7,-1,-4,-2,-2,-6,-1,9,4,-5,-2,10,9,9,-1,1,9,-2,-1,-5,-1,4,-5,10,-10,4,-1,5,6,-3,-9,5,-4,-2,-1,10,8,-4,6,6,-8,-7,5,-9,5,7,8,-3,-9,9,-2,10,10,6,-5,-1,1,3,1,-8,-6,10,7,6,8,5,-4,-1,8,-2,8,-9,-3,-8,4,1,-10,-4,6,-4,7,6,6,-8,5,-9,-5,-5,-9,-3,8,3,-6,-9,-8,9,-4,-7,-4,-5,2,3,10,-6,-10,2,-4,10,-3,-2,-1,6,-6,8,-5,9,6,-7,-2,5,-1,-4,5,4,-10,-9,-7,-8,6,-3,8,-10,-5,-1,7,3,-5,4,-8,8,-5,10,-3,-5,6,-2,1,9,7,5,5,6,2,10,8,-9,-6,-3,1,8,5,4,-9,1,2,-4,3,-7,-7,6,-6,6,-8,-10,8,-8,7,-10,6,6,9,-5,7,-9,10,2,4,9,-9,-3,-9,2,5,-6,-3,-9,2,5,7,-6,9,6,-5,5,5,1,-1,2,4,6,-10,-10,-10,-2,8,5,-5,1,5,-4,-6,-4,9,-2,4,2,5,-6,6,-2,-7,2,-8,-2,10,5,4,-4,5,-7,6,-3,-1,5,-9,10,2,8,6,4,7,-6,9,5,8,3,3,-6,-6,-2,6,1,-5,-9,-8,-8,4,-7,4,7,3,-5,-7,-1,-9,-8,-4,-4,-5,-9,-8,9,1,-7,5,6,-5,6,-1,4,9,-9,-8,-3,6,9,1,7,3,6,9,8,2,-7,3,6,-3,7,8,6,2,-9,3,-4,2,-4,1,-9,6,-9,-7,-2,-10,2,9,-3,3,-3,-7,-3,-8,-2,-7,-5,6,3,-8,4,4,-7,5,-3,1,-7,6,9,-6,-4,-1,7,2,3,-7,-10,-4,-3,9,9,3,-10,5,2,10,6,4,1,5,5,-10,4,-4,-2,4,-4,-9,-7,-4,8,4,7,7,-3,-3,-6,-3,-8,-9,1,4,-4,10,9,-10,-9,-3,2,6,4,-4,-4,-3,4,-3,-9,10,1,-5,-5,-9,9,1,-4,7,-8,-8,-9,-5,7,10,8,-9,2,-9,-9,1,2,9,9,-4,10,1,7,2,7,-1,-4,2,-6,-2,3,3,3,1,-2,1,9,1,10,-9,5,-10,10,-4,-6,1,10,-5,6,7,5,9,-1,-9,4,-6,7,10,9,-4,-2,2,-9,-5,7,4,-9,3,5,-1,-9,10,2,-5,-3,3,4,-7,6,-9,-3,4,-9,-4,-10,-3,-9,-7,2,3,1,-1,3,7,2,-2,-2,-9,-3,3,-5,2,-9,6,-1,7,4,4,-7,-9,-10,4,-5,-2,3,2,2,-3,-5,10,-9,-5,-6,2,-3,-2,2,-4,6,-7,-1,-8,-5,6,1,3,5,-3,-8,-4,-6,3,-10,-6,4,9,2,-10,8,6,-4,-9,10,9,9,-8,-8,4,9,6,3,9,-3,-4,-7,-2,1,9,5,9,9,-10,2,7,-4,-7,10,-2,-6,-6,7,3,1,-1,-10,-2,-10,8,-6,5,9,7,-9,4,5,10,2,-10,-7,-1,1,-8,6,7,2,-4,-6,-2,-1,-2,-10,8,8,-5,1,2,9,-5,5,-1,-3,-7,7,4,8,4,-10,8,-2,-3,-8,5,4,-4,-1,3,9,5,-1,-4,4,-5,-2,-4,-7,-7,1,-4,-1,3], dtype = "uint64")#candidate|475|(1248,)|const|uint64
call_474 = relay.TupleGetItem(func_66_call(relay.reshape(const_475.astype('uint64'), [6, 16, 13]), relay.reshape(const_475.astype('uint64'), [6, 16, 13]), relay.reshape(const_475.astype('uint64'), [6, 16, 13]), ), 0)
call_476 = relay.TupleGetItem(func_71_call(relay.reshape(const_475.astype('uint64'), [6, 16, 13]), relay.reshape(const_475.astype('uint64'), [6, 16, 13]), relay.reshape(const_475.astype('uint64'), [6, 16, 13]), ), 0)
output = relay.Tuple([call_471,call_474,const_475,])
output2 = relay.Tuple([call_472,call_476,const_475,])
func_481 = relay.Function([], output)
mod['func_481'] = func_481
mod = relay.transform.InferType()(mod)
mutated_mod['func_481'] = func_481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_481_call = mutated_mod.get_global_var('func_481')
call_482 = func_481_call()
output = call_482
func_483 = relay.Function([], output)
mutated_mod['func_483'] = func_483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_282_call = mod.get_global_var('func_282')
func_283_call = mutated_mod.get_global_var('func_283')
call_511 = relay.TupleGetItem(func_282_call(), 0)
call_512 = relay.TupleGetItem(func_283_call(), 0)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_513 = relay.TupleGetItem(func_257_call(), 0)
call_514 = relay.TupleGetItem(func_259_call(), 0)
func_282_call = mod.get_global_var('func_282')
func_283_call = mutated_mod.get_global_var('func_283')
call_518 = relay.TupleGetItem(func_282_call(), 0)
call_519 = relay.TupleGetItem(func_283_call(), 0)
bop_520 = relay.bitwise_or(call_513.astype('uint32'), call_518.astype('uint32')) # shape=(8, 12, 16)
bop_523 = relay.bitwise_or(call_514.astype('uint32'), call_519.astype('uint32')) # shape=(8, 12, 16)
func_66_call = mod.get_global_var('func_66')
func_71_call = mutated_mod.get_global_var('func_71')
var_528 = relay.var("var_528", dtype = "uint64", shape = (2, 624))#candidate|528|(2, 624)|var|uint64
call_527 = relay.TupleGetItem(func_66_call(relay.reshape(var_528.astype('uint64'), [6, 16, 13]), relay.reshape(var_528.astype('uint64'), [6, 16, 13]), relay.reshape(var_528.astype('uint64'), [6, 16, 13]), ), 0)
call_529 = relay.TupleGetItem(func_71_call(relay.reshape(var_528.astype('uint64'), [6, 16, 13]), relay.reshape(var_528.astype('uint64'), [6, 16, 13]), relay.reshape(var_528.astype('uint64'), [6, 16, 13]), ), 0)
output = relay.Tuple([call_511,bop_520,call_527,var_528,])
output2 = relay.Tuple([call_512,bop_523,call_529,var_528,])
func_531 = relay.Function([var_528,], output)
mod['func_531'] = func_531
mod = relay.transform.InferType()(mod)
mutated_mod['func_531'] = func_531
mutated_mod = relay.transform.InferType()(mutated_mod)
var_532 = relay.var("var_532", dtype = "uint64", shape = (2, 624))#candidate|532|(2, 624)|var|uint64
func_531_call = mutated_mod.get_global_var('func_531')
call_533 = func_531_call(var_532)
output = call_533
func_534 = relay.Function([var_532], output)
mutated_mod['func_534'] = func_534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_391_call = mod.get_global_var('func_391')
func_392_call = mutated_mod.get_global_var('func_392')
call_549 = func_391_call()
call_550 = func_391_call()
output = relay.Tuple([call_549,])
output2 = relay.Tuple([call_550,])
func_567 = relay.Function([], output)
mod['func_567'] = func_567
mod = relay.transform.InferType()(mod)
mutated_mod['func_567'] = func_567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_567_call = mutated_mod.get_global_var('func_567')
call_568 = func_567_call()
output = call_568
func_569 = relay.Function([], output)
mutated_mod['func_569'] = func_569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_391_call = mod.get_global_var('func_391')
func_392_call = mutated_mod.get_global_var('func_392')
call_596 = func_391_call()
call_597 = func_391_call()
var_609 = relay.var("var_609", dtype = "float32", shape = (8, 12, 16))#candidate|609|(8, 12, 16)|var|float32
bop_610 = relay.less(call_596.astype('bool'), var_609.astype('bool')) # shape=(8, 12, 16)
bop_613 = relay.less(call_597.astype('bool'), var_609.astype('bool')) # shape=(8, 12, 16)
func_455_call = mod.get_global_var('func_455')
func_457_call = mutated_mod.get_global_var('func_457')
call_617 = relay.TupleGetItem(func_455_call(), 0)
call_618 = relay.TupleGetItem(func_457_call(), 0)
uop_639 = relay.sigmoid(bop_610.astype('float64')) # shape=(8, 12, 16)
uop_641 = relay.sigmoid(bop_613.astype('float64')) # shape=(8, 12, 16)
output = relay.Tuple([call_617,uop_639,])
output2 = relay.Tuple([call_618,uop_641,])
func_644 = relay.Function([var_609,], output)
mod['func_644'] = func_644
mod = relay.transform.InferType()(mod)
var_645 = relay.var("var_645", dtype = "float32", shape = (8, 12, 16))#candidate|645|(8, 12, 16)|var|float32
output = func_644(var_645)
func_646 = relay.Function([var_645], output)
mutated_mod['func_646'] = func_646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_784 = relay.TupleGetItem(func_567_call(), 0)
call_785 = relay.TupleGetItem(func_569_call(), 0)
uop_789 = relay.asin(call_784.astype('float32')) # shape=(8, 12, 1)
uop_791 = relay.asin(call_785.astype('float32')) # shape=(8, 12, 1)
bop_792 = relay.equal(uop_789.astype('bool'), relay.reshape(call_784.astype('bool'), relay.shape_of(uop_789))) # shape=(8, 12, 1)
bop_795 = relay.equal(uop_791.astype('bool'), relay.reshape(call_785.astype('bool'), relay.shape_of(uop_791))) # shape=(8, 12, 1)
func_341_call = mod.get_global_var('func_341')
func_343_call = mutated_mod.get_global_var('func_343')
var_798 = relay.var("var_798", dtype = "uint64", shape = (1248,))#candidate|798|(1248,)|var|uint64
call_797 = relay.TupleGetItem(func_341_call(relay.reshape(var_798.astype('uint64'), [1248,])), 0)
call_799 = relay.TupleGetItem(func_343_call(relay.reshape(var_798.astype('uint64'), [1248,])), 0)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_813 = relay.TupleGetItem(func_257_call(), 0)
call_814 = relay.TupleGetItem(func_259_call(), 0)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_825 = relay.TupleGetItem(func_257_call(), 0)
call_826 = relay.TupleGetItem(func_259_call(), 0)
output = relay.Tuple([bop_792,call_797,var_798,call_813,call_825,])
output2 = relay.Tuple([bop_795,call_799,var_798,call_814,call_826,])
func_847 = relay.Function([var_798,], output)
mod['func_847'] = func_847
mod = relay.transform.InferType()(mod)
var_848 = relay.var("var_848", dtype = "uint64", shape = (1248,))#candidate|848|(1248,)|var|uint64
output = func_847(var_848)
func_849 = relay.Function([var_848], output)
mutated_mod['func_849'] = func_849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_455_call = mod.get_global_var('func_455')
func_457_call = mutated_mod.get_global_var('func_457')
call_875 = relay.TupleGetItem(func_455_call(), 0)
call_876 = relay.TupleGetItem(func_457_call(), 0)
uop_889 = relay.erf(call_875.astype('float64')) # shape=(8, 12, 1)
uop_891 = relay.erf(call_876.astype('float64')) # shape=(8, 12, 1)
output = uop_889
output2 = uop_891
func_892 = relay.Function([], output)
mod['func_892'] = func_892
mod = relay.transform.InferType()(mod)
output = func_892()
func_893 = relay.Function([], output)
mutated_mod['func_893'] = func_893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_481_call = mod.get_global_var('func_481')
func_483_call = mutated_mod.get_global_var('func_483')
call_900 = relay.TupleGetItem(func_481_call(), 2)
call_901 = relay.TupleGetItem(func_483_call(), 2)
output = call_900
output2 = call_901
func_904 = relay.Function([], output)
mod['func_904'] = func_904
mod = relay.transform.InferType()(mod)
mutated_mod['func_904'] = func_904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_904_call = mutated_mod.get_global_var('func_904')
call_905 = func_904_call()
output = call_905
func_906 = relay.Function([], output)
mutated_mod['func_906'] = func_906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_904_call = mod.get_global_var('func_904')
func_906_call = mutated_mod.get_global_var('func_906')
call_923 = func_904_call()
call_924 = func_904_call()
func_66_call = mod.get_global_var('func_66')
func_71_call = mutated_mod.get_global_var('func_71')
call_941 = relay.TupleGetItem(func_66_call(relay.reshape(call_923.astype('uint64'), [6, 16, 13]), relay.reshape(call_923.astype('uint64'), [6, 16, 13]), relay.reshape(call_923.astype('uint64'), [6, 16, 13]), ), 0)
call_942 = relay.TupleGetItem(func_71_call(relay.reshape(call_923.astype('uint64'), [6, 16, 13]), relay.reshape(call_923.astype('uint64'), [6, 16, 13]), relay.reshape(call_923.astype('uint64'), [6, 16, 13]), ), 0)
func_341_call = mod.get_global_var('func_341')
func_343_call = mutated_mod.get_global_var('func_343')
call_956 = relay.TupleGetItem(func_341_call(relay.reshape(call_923.astype('uint64'), [1248,])), 2)
call_957 = relay.TupleGetItem(func_343_call(relay.reshape(call_923.astype('uint64'), [1248,])), 2)
output = relay.Tuple([call_923,call_941,call_956,])
output2 = relay.Tuple([call_924,call_942,call_957,])
func_958 = relay.Function([], output)
mod['func_958'] = func_958
mod = relay.transform.InferType()(mod)
mutated_mod['func_958'] = func_958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_958_call = mutated_mod.get_global_var('func_958')
call_959 = func_958_call()
output = call_959
func_960 = relay.Function([], output)
mutated_mod['func_960'] = func_960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_391_call = mod.get_global_var('func_391')
func_392_call = mutated_mod.get_global_var('func_392')
call_967 = func_391_call()
call_968 = func_391_call()
output = relay.Tuple([call_967,])
output2 = relay.Tuple([call_968,])
func_984 = relay.Function([], output)
mod['func_984'] = func_984
mod = relay.transform.InferType()(mod)
output = func_984()
func_985 = relay.Function([], output)
mutated_mod['func_985'] = func_985
mutated_mod = relay.transform.InferType()(mutated_mod)
const_988 = relay.const([[[-7,4,7,2,-8,6,-8,-3,7,-9,8,-10],[-4,-3,-2,-2,1,-9,-2,6,6,7,6,-2],[1,2,7,-10,-6,-3,7,7,5,-6,9,-6],[-6,10,-5,5,-6,-7,-2,-5,7,7,7,-10],[2,-7,10,5,-8,-9,9,-1,2,-9,5,5],[4,-6,5,-3,-3,-9,6,10,1,7,3,5],[5,2,-8,2,8,-2,5,4,-6,1,-9,5]],[[10,9,9,-9,-10,6,9,-1,-5,1,-8,8],[-8,-7,-1,6,-4,5,3,-10,6,-10,-6,-1],[5,3,-5,-1,-1,1,-1,-3,3,10,3,-8],[10,1,10,8,-4,-1,1,3,10,-4,-10,-8],[7,9,-2,9,7,-5,-2,4,-4,-4,-7,-7],[-8,10,7,10,-7,-6,-8,-8,-2,3,8,9],[-2,-6,-9,-6,3,-4,-3,8,7,-9,-6,-9]],[[-4,4,2,5,-8,3,-6,-6,-6,-1,7,10],[-1,9,10,8,2,7,7,8,-6,3,-1,-1],[9,7,-3,-2,-10,4,8,-5,3,-6,5,-6],[-6,-5,9,-3,9,-6,9,-7,-6,-8,-2,-9],[-4,-7,-9,-1,3,-2,-1,-1,-5,5,7,-4],[4,9,2,2,3,6,-2,4,3,8,-1,6],[-9,3,-2,9,8,1,6,-7,-3,-10,9,10]],[[2,-8,10,10,-7,-5,9,-7,2,6,-1,8],[5,9,-3,-8,9,-7,-3,8,1,1,7,-6],[7,-8,4,-4,-3,-3,-4,-9,-10,-3,5,-3],[7,6,-3,3,-6,-8,-7,9,5,-6,4,1],[-4,-7,8,-7,7,8,-8,9,4,-4,2,-2],[-5,8,-6,5,5,-10,5,7,5,-1,-8,8],[-2,4,-6,-2,9,-2,3,6,9,-3,5,6]],[[7,4,-10,9,3,-5,-2,-9,9,5,-7,9],[8,2,-4,-3,8,6,8,-9,1,-1,2,-3],[9,4,10,6,7,-1,-10,10,2,7,3,4],[-3,6,-4,8,-8,1,-6,-6,-9,-2,3,-7],[9,-8,2,-6,-6,-10,-1,4,-9,-1,-4,-7],[-6,-1,2,6,2,6,6,8,-4,2,7,9],[3,-4,-7,-9,2,3,-8,7,-3,-5,-7,-2]]], dtype = "uint64")#candidate|988|(5, 7, 12)|const|uint64
var_989 = relay.var("var_989", dtype = "uint64", shape = (5, 7, 12))#candidate|989|(5, 7, 12)|var|uint64
bop_990 = relay.logical_xor(const_988.astype('uint64'), relay.reshape(var_989.astype('uint64'), relay.shape_of(const_988))) # shape=(5, 7, 12)
uop_997 = relay.sinh(bop_990.astype('float32')) # shape=(5, 7, 12)
output = relay.Tuple([uop_997,])
output2 = relay.Tuple([uop_997,])
func_999 = relay.Function([var_989,], output)
mod['func_999'] = func_999
mod = relay.transform.InferType()(mod)
var_1000 = relay.var("var_1000", dtype = "uint64", shape = (5, 7, 12))#candidate|1000|(5, 7, 12)|var|uint64
output = func_999(var_1000)
func_1001 = relay.Function([var_1000], output)
mutated_mod['func_1001'] = func_1001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_892_call = mod.get_global_var('func_892')
func_893_call = mutated_mod.get_global_var('func_893')
call_1020 = func_892_call()
call_1021 = func_892_call()
func_455_call = mod.get_global_var('func_455')
func_457_call = mutated_mod.get_global_var('func_457')
call_1028 = relay.TupleGetItem(func_455_call(), 1)
call_1029 = relay.TupleGetItem(func_457_call(), 1)
output = relay.Tuple([call_1020,call_1028,])
output2 = relay.Tuple([call_1021,call_1029,])
func_1037 = relay.Function([], output)
mod['func_1037'] = func_1037
mod = relay.transform.InferType()(mod)
mutated_mod['func_1037'] = func_1037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1037_call = mutated_mod.get_global_var('func_1037')
call_1038 = func_1037_call()
output = call_1038
func_1039 = relay.Function([], output)
mutated_mod['func_1039'] = func_1039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_892_call = mod.get_global_var('func_892')
func_893_call = mutated_mod.get_global_var('func_893')
call_1098 = func_892_call()
call_1099 = func_892_call()
func_391_call = mod.get_global_var('func_391')
func_392_call = mutated_mod.get_global_var('func_392')
call_1100 = func_391_call()
call_1101 = func_391_call()
func_904_call = mod.get_global_var('func_904')
func_906_call = mutated_mod.get_global_var('func_906')
call_1103 = func_904_call()
call_1104 = func_904_call()
func_408_call = mod.get_global_var('func_408')
func_410_call = mutated_mod.get_global_var('func_410')
const_1106 = relay.const([3.711811,-1.481380,-0.452011,-0.609229,0.259243,8.057757,4.422960,-9.236231,-0.947973,-3.904370,9.284051,-0.464241,-0.668690,-1.017964,6.926466,-8.960771,8.418017,7.705963,-5.411421,-8.364517,3.523892,-3.789030,-3.401892,6.155082,-0.298071,-0.295354,-5.431701,-7.126266,2.943734,-6.188040,-3.998672,0.208598,5.578238,4.858128,-4.935213,-0.709005,-8.734253,-4.955711,9.816516,1.575766,-0.365409,0.898298,-6.344334,0.199366,-7.762175,-6.743551,-4.082911,6.517851,-4.665436,-8.570802,-7.745245,-4.902576,7.971551,0.635505,-8.919640,8.068718,-4.029793,3.072429,-1.215139,-6.930571,4.227342,0.129069,-3.373555,6.306525,7.368615,-7.443705,-0.222502,-1.154958,0.563473,-8.339861,-2.140465,-3.256970,7.800907,7.456017,8.925326,-1.367014,-9.463234,-9.843264,-0.307370,2.062468,1.427216,4.770294,-4.512221,-0.937372,1.592064,3.892259,-1.923397,-9.661617,-6.821308,1.395801,2.249899,-0.414872,8.344189,9.984721,-0.983214,4.729761,-9.641008,-2.189290,0.133716,-7.938984,5.874878,-6.191903,-1.453495,6.707044,8.455899,-8.955436,9.575313,-7.361694,1.941751,-3.459990,8.075718,-7.961697,0.453213,-5.937142,0.906522,7.394817,3.341993,-3.968384,1.984320,-6.172788], dtype = "float64")#candidate|1106|(120,)|const|float64
call_1105 = func_408_call(relay.reshape(const_1106.astype('float64'), [10, 4, 3]))
call_1107 = func_408_call(relay.reshape(const_1106.astype('float64'), [10, 4, 3]))
output = relay.Tuple([call_1098,call_1100,call_1103,call_1105,const_1106,])
output2 = relay.Tuple([call_1099,call_1101,call_1104,call_1107,const_1106,])
func_1109 = relay.Function([], output)
mod['func_1109'] = func_1109
mod = relay.transform.InferType()(mod)
mutated_mod['func_1109'] = func_1109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mutated_mod.get_global_var('func_1109')
call_1110 = func_1109_call()
output = call_1110
func_1111 = relay.Function([], output)
mutated_mod['func_1111'] = func_1111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_481_call = mod.get_global_var('func_481')
func_483_call = mutated_mod.get_global_var('func_483')
call_1206 = relay.TupleGetItem(func_481_call(), 0)
call_1207 = relay.TupleGetItem(func_483_call(), 0)
output = call_1206
output2 = call_1207
func_1208 = relay.Function([], output)
mod['func_1208'] = func_1208
mod = relay.transform.InferType()(mod)
output = func_1208()
func_1209 = relay.Function([], output)
mutated_mod['func_1209'] = func_1209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_904_call = mod.get_global_var('func_904')
func_906_call = mutated_mod.get_global_var('func_906')
call_1222 = func_904_call()
call_1223 = func_904_call()
output = relay.Tuple([call_1222,])
output2 = relay.Tuple([call_1223,])
func_1276 = relay.Function([], output)
mod['func_1276'] = func_1276
mod = relay.transform.InferType()(mod)
mutated_mod['func_1276'] = func_1276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1276_call = mutated_mod.get_global_var('func_1276')
call_1277 = func_1276_call()
output = call_1277
func_1278 = relay.Function([], output)
mutated_mod['func_1278'] = func_1278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1334 = relay.var("var_1334", dtype = "float32", shape = (10, 15, 12))#candidate|1334|(10, 15, 12)|var|float32
uop_1335 = relay.acos(var_1334.astype('float32')) # shape=(10, 15, 12)
func_892_call = mod.get_global_var('func_892')
func_893_call = mutated_mod.get_global_var('func_893')
call_1344 = func_892_call()
call_1345 = func_892_call()
output = relay.Tuple([uop_1335,call_1344,])
output2 = relay.Tuple([uop_1335,call_1345,])
func_1351 = relay.Function([var_1334,], output)
mod['func_1351'] = func_1351
mod = relay.transform.InferType()(mod)
var_1352 = relay.var("var_1352", dtype = "float32", shape = (10, 15, 12))#candidate|1352|(10, 15, 12)|var|float32
output = func_1351(var_1352)
func_1353 = relay.Function([var_1352], output)
mutated_mod['func_1353'] = func_1353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_481_call = mod.get_global_var('func_481')
func_483_call = mutated_mod.get_global_var('func_483')
call_1388 = relay.TupleGetItem(func_481_call(), 2)
call_1389 = relay.TupleGetItem(func_483_call(), 2)
func_1037_call = mod.get_global_var('func_1037')
func_1039_call = mutated_mod.get_global_var('func_1039')
call_1398 = relay.TupleGetItem(func_1037_call(), 1)
call_1399 = relay.TupleGetItem(func_1039_call(), 1)
bop_1405 = relay.bitwise_or(call_1388.astype('int64'), call_1398.astype('int64')) # shape=(8, 12, 1248)
bop_1408 = relay.bitwise_or(call_1389.astype('int64'), call_1399.astype('int64')) # shape=(8, 12, 1248)
uop_1414 = relay.log(bop_1405.astype('float64')) # shape=(8, 12, 1248)
uop_1416 = relay.log(bop_1408.astype('float64')) # shape=(8, 12, 1248)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_1418 = relay.TupleGetItem(func_567_call(), 0)
call_1419 = relay.TupleGetItem(func_569_call(), 0)
bop_1427 = relay.right_shift(uop_1414.astype('uint16'), relay.reshape(bop_1405.astype('uint16'), relay.shape_of(uop_1414))) # shape=(8, 12, 1248)
bop_1430 = relay.right_shift(uop_1416.astype('uint16'), relay.reshape(bop_1408.astype('uint16'), relay.shape_of(uop_1416))) # shape=(8, 12, 1248)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_1445 = relay.TupleGetItem(func_567_call(), 0)
call_1446 = relay.TupleGetItem(func_569_call(), 0)
bop_1455 = relay.add(bop_1427.astype('uint8'), call_1388.astype('uint8')) # shape=(8, 12, 1248)
bop_1458 = relay.add(bop_1430.astype('uint8'), call_1389.astype('uint8')) # shape=(8, 12, 1248)
bop_1465 = relay.greater_equal(bop_1455.astype('bool'), call_1398.astype('bool')) # shape=(8, 12, 1248)
bop_1468 = relay.greater_equal(bop_1458.astype('bool'), call_1399.astype('bool')) # shape=(8, 12, 1248)
func_1351_call = mod.get_global_var('func_1351')
func_1353_call = mutated_mod.get_global_var('func_1353')
const_1472 = relay.const([6.314018,-8.175781,-6.483581,-3.111683,5.556138,-0.074069,7.736695,0.579385,7.591972,8.596889,-1.140007,3.341800,7.700895,8.592677,9.776928,1.906374,-1.247287,-7.303610,6.525387,-3.688523,5.112437,6.147721,-4.842646,3.532703,1.442584,3.409198,-9.189611,-3.061620,8.994851,-8.004072,3.966822,9.693853,5.836975,-0.528408,-6.043788,-1.415739,3.799142,9.353760,-7.493171,9.740489,7.428780,8.413879,7.344826,-3.364387,5.327311,-6.038427,-3.365716,0.421645,3.902449,-5.592927,-2.387412,-4.225563,-5.275193,2.669274,-1.299785,9.821520,9.451183,2.018948,-7.523765,8.232367,-6.161428,-2.545097,0.553224,6.274629,6.831448,1.028970,-3.206989,3.241589,6.729129,6.542697,5.540029,2.815524,-6.836431,-1.212116,-4.096102,-3.965210,4.652436,1.276270,-5.723699,2.492162,7.813215,7.132077,-0.878753,-2.927830,9.450563,-6.740315,-6.676444,7.303437,-5.975745,-4.669826,4.133625,-9.510760,5.153306,-9.321138,-6.446469,-0.213058,-4.146495,2.819329,-2.439203,-4.981914,0.740004,6.468871,-3.510807,-5.031959,-0.052517,-1.071151,-7.699850,-2.884540,-0.547588,8.342945,-3.760535,-8.285560,-1.533061,-1.041535,-1.874044,-0.515749,3.122563,0.005501,8.448609,-9.382685,-3.739036,5.798279,0.152591,1.710830,-5.713262,-2.958904,-2.431468,7.021342,-8.740246,6.861518,-3.464488,4.144177,3.515356,-1.890924,-6.525696,-4.950523,1.575524,3.190897,3.056562,-0.639798,-2.857823,6.658445,-4.984343,7.324476,-0.754533,1.210628,-9.758272,-7.250697,4.041038,-8.464914,7.208946,6.345898,8.562605,-7.453834,5.909193,-3.561738,8.003391,-4.827539,8.558721,7.735150,-6.779961,-7.897716,2.596154,0.006384,3.731051,-2.976031,-6.887777,5.140380,1.709641,3.745601,7.682782,-3.761941,6.263859,-7.924984,-6.626505,-0.041547,-4.962075,7.740548,0.434848,-1.821967,2.445947,6.824300,-8.089606,2.274502,-6.011779,-5.189654,-0.848307,0.511371,5.075422,-5.363562,6.813598,6.017522,-2.794780,8.875997,7.445502,-0.912079,-9.293102,-4.126938,9.827830,-7.599233,-8.050891,0.095366,8.781996,-2.256898,-5.510519,-6.547698,0.697229,1.248168,8.556369,6.423542,-1.284883,3.410891,-0.254612,-9.048095,0.806553,7.551800,4.735636,-8.613124,5.907599,-4.842973,-5.270985,7.659997,-7.327313,1.441940,8.211238,-5.583236,-6.625307,3.658281,9.662656,-7.641008,-7.691591,1.702940,-7.671327,3.249813,-3.569333,0.236315,-6.402975,5.726005,6.552418,-4.620963,3.001034,2.618893,-7.840210,-2.952924,-2.308344,-5.957317,1.083835,-4.870500,-9.411141,3.494535,4.114745,6.533336,-7.925559,-8.100446,7.776040,-2.226431,0.026171,-1.008086,-7.228997,-0.081215,-3.509941,-0.262131,-2.816625,9.442821,-7.258852,4.177198,-6.217408,7.080723,1.327365,-5.210454,7.914735,-6.250398,-0.432781,-2.333810,2.608500,6.766336,-2.745332,1.928171,3.128688,3.794888,-9.051463,5.266875,1.526877,3.916131,1.481969,4.345029,-2.438795,6.511545,-0.981415,-6.905432,-1.041350,6.514604,3.625460,3.583241,-9.709854,-4.498674,-8.196351,9.290981,-9.662248,-9.280604,-7.425972,-4.611762,9.790249,-3.890164,-0.887018,-3.401381,-0.226358,6.379533,-5.382317,-0.717103,9.034776,5.369238,8.586016,1.467353,2.200483,4.645807,9.352700,2.496081,0.496888,-0.706745,-6.579972,9.665104,5.697436,-7.414223,5.501138,-2.573208,5.499537,-5.171114,-4.206033,-0.683796,-4.470339,9.583913,-8.411310,-5.306709,-1.417670,9.332437,1.507898,-1.800984,0.977562,2.177837,4.405035,2.985863,0.907746,3.859097,6.030215,-0.112076,5.192409,5.148483,-7.827944,-0.514780,-2.237520,2.307228,-6.855362,-3.850315,-8.521094,-8.594558,2.914977,-5.967196,-2.102367,-3.432696,3.695153,9.695872,1.454779,-7.949175,-7.722405,-3.624273,-0.976736,6.137818,7.417605,-0.170039,7.603085,-2.192839,-2.540623,5.586680,-6.536535,-2.710502,-5.038901,5.653261,-1.849744,3.597044,-4.607537,-1.896972,7.265127,4.912999,9.106717,-0.767551,-0.673031,-9.765194,2.989462,3.107922,5.686732,-0.856134,3.363374,0.379289,9.996142,3.273976,9.027555,5.075694,0.953265,4.679568,-6.357264,7.714608,-8.947264,-5.493479,1.528009,-4.825932,5.808432,5.355692,-0.992338,0.405624,0.504272,9.624891,-1.055008,-6.349394,4.067747,-4.200648,6.198359,-4.943853,1.667736,-8.542942,2.103460,-5.157224,9.724808,4.683057,-8.929434,5.777016,7.299373,-7.897297,4.617221,6.853381,6.854167,1.212844,3.813214,-5.973467,-9.348549,-8.926564,0.232520,-8.537250,-2.575345,-0.918602,-6.760777,-9.649625,-4.657827,9.702812,9.265038,-7.495594,0.293228,-8.674846,-5.244657,1.723301,3.732081,-7.770187,-5.159960,3.857709,-6.714192,-1.684657,0.897476,4.366911,5.665442,-6.392493,7.592218,4.555662,-2.798122,-8.434581,0.233645,3.608215,0.337672,8.172361,-7.375796,-1.674752,2.620259,-3.828482,9.552011,-2.585752,-6.166521,-3.917740,-8.425136,-3.940794,7.404069,7.852462,4.335775,3.766483,-9.699960,-5.306130,1.409547,6.144277,4.527903,8.159740,4.413187,-9.594838,-0.112778,-2.036217,-0.691943,9.403550,3.297452,-6.523359,1.606457,9.097589,9.531037,7.775578,-6.822252,7.915389,-0.550221,-6.290207,-8.047517,1.540958,8.819541,9.685223,1.996814,4.776067,4.996946,8.969028,9.132087,-1.855264,-4.676868,0.816311,9.670971,0.539973,-1.783180,9.447637,-5.267324,9.703761,-7.620496,3.285561,-5.988668,-7.275842,7.156337,-5.810730,-9.703814,4.955701,-5.027943,3.303353,0.291087,7.958869,6.099022,-1.970783,-8.912622,2.466525,8.422543,-3.198499,-0.025430,6.014453,-4.786804,-4.309572,5.298770,9.404595,2.471119,4.106869,9.878253,-9.785335,9.893912,-3.167366,-3.555846,5.619977,0.526503,7.245182,-3.996002,6.538345,5.476256,-2.592428,5.023257,-3.264610,-6.232339,0.250351,2.451788,-0.851862,-3.078772,-3.777168,9.075154,-3.139609,0.564907,-9.933514,8.544974,-5.546606,2.646376,4.938409,-8.821452,2.380492,1.187811,8.717268,-4.983409,9.211501,-1.722235,-6.751543,7.724750,-0.454095,-0.601699,4.763869,-7.111965,-6.748386,-8.411988,-1.844578,-4.802555,5.539559,-4.509943,-7.234504,5.130174,-5.618845,2.713018,5.515756,0.859828,2.932862,-1.656885,8.370293,-4.554776,-0.909259,9.124061,1.679024,3.303700,0.017909,4.365264,-7.421361,-7.212169,7.328271,7.524877,-7.325570,-8.428178,4.397390,-8.975516,-0.281006,-2.988982,3.430337,2.613591,9.662711,-8.406272,5.074334,-2.915102,-6.244901,-4.265628,-3.812189,-0.975330,-9.473981,-1.184176,1.641618,9.402648,1.176966,-0.698266,7.227276,-7.093417,-0.632621,-8.019473,-7.514890,-3.668502,0.282035,-0.595478,-6.716055,-8.199244,-7.018706,-1.842343,-0.069014,4.274855,-0.547656,-2.248108,9.354891,-8.304281,4.346467,5.311282,-1.544033,-8.987830,-3.205500,3.150569,1.446058,-4.183944,6.469267,6.792417,-7.176644,2.376008,2.720005,-6.944266,-4.736142,-2.706804,0.317937,-2.566673,3.344309,6.695641,9.759714,7.911454,9.187620,-1.824130,-9.805257,-8.998288,-4.825718,1.609559,5.176050,1.362832,5.494839,-6.076289,2.184598,-6.391773,9.421418,3.322717,-4.348429,-9.988416,-5.619474,-5.982107,-4.096485,4.751314,4.874430,-0.537215,-5.278122,-6.631603,-7.374031,7.182083,0.635177,-5.573646,1.499389,-0.430753,-5.412064,5.854203,0.449459,-5.037596,-4.965499,7.444137,-9.942762,1.295368,3.047550,-0.419569,-6.060686,4.952908,4.864262,-9.049897,6.452844,8.997051,0.245862,-3.366633,-8.916645,5.506080,-2.116317,-5.201348,-1.434541,-7.281016,-1.520981,9.365063,-1.702293,-7.169009,2.100454,-7.028366,8.420276,-8.834628,6.296692,-5.300630,9.999833,-7.289815,-5.102009,2.106785,-9.703691,-4.992499,-4.786882,1.074295,-0.892893,7.486372,7.759448,4.500760,8.952002,2.772506,-1.801778,-8.738578,7.545026,-1.764851,-0.703441,0.380299,7.217890,5.887721,6.880565,-2.810273,-8.136092,7.058928,7.876467,0.428802,0.400382,7.312868,-6.231486,6.913736,7.725712,0.710443,3.391711,-8.820028,-4.833745,8.011594,3.446975,0.447265,7.667447,9.172571,0.071359,3.381119,4.042120,4.536288,-0.351891,-4.046052,-8.140302,4.332653,-3.691036,-2.619792,7.393253,-2.701482,6.944839,9.168462,7.352321,8.974989,8.818472,1.132157,-4.172212,-0.347464,5.810201,-1.932699,-7.190026,-2.594650,9.794843,5.939855,-6.226005,6.880351,4.675143,-0.013891,5.680855,-5.011351,-6.770868,-2.676104,-2.786951,1.213986,8.504369,5.538995,-0.051829,-4.305306,-3.516485,-7.443443,0.667671,-3.473996,-4.615042,5.434151,-9.093181,-3.355300,0.199231,3.841548,2.022786,-6.195817,-1.261827,-1.297897,1.341232,0.625004,-7.167646,-9.945282,0.343155,4.202298,1.770574,-5.972025,-0.667068,-2.018945,8.187511,5.766913,-5.586916,6.735869,6.274240,3.591295,-0.585938,-0.956229,8.514427,-8.389348,0.298472,-1.005136,3.990134,-4.340703,-1.338176,2.979292,7.734022,-4.749005,-3.059241,-4.128067,-2.558494,-8.295812,-6.914171,0.122068,6.754777,0.618738,7.584278,3.180186,-9.059852,-8.459704,-0.035237,-5.171473,-1.106659,-3.934848,-2.589382,-3.621342,-2.511040,1.111491,5.038811,-1.533750,-4.543098,3.985450,-7.848528,-3.314688,8.811642,5.503381,4.156788,7.639958,-0.046710,-6.103767,-3.914559,1.809532,-4.698600,-7.528807,-3.899025,-4.529523,-2.749003,-1.033520,4.496340,6.255980,-1.430503,-5.962302,-0.441809,1.610132,9.901897,8.370032,4.045074,9.206293,7.576262,5.410255,-1.576318,-7.492610,-3.998029,7.664450,-9.324424,-2.600381,2.612837,-8.105725,-8.841979,3.315161,9.127116,9.909702,1.752421,-7.605825,-7.570731,-4.432416,-0.378534,4.585973,-4.120269,-5.961202,4.258895,3.259424,9.461562,-4.602396,7.904361,-0.716992,-7.087107,3.452920,-5.397395,-6.062050,-3.414730,7.114159,-7.792830,5.033899,-4.194795,7.888094,-6.812261,-6.368988,-3.878435,1.718678,-7.591484,-9.642336,8.599799,6.900397,-6.081262,6.739015,-8.644306,5.161883,0.523006,6.605669,-4.548443,-0.078408,8.156371,-9.588423,1.118340,-4.402287,5.660905,9.952486,-2.967921,-1.198369,-4.842664,2.145996,1.222429,2.055451,2.827538,-4.728987,6.372725,-3.148191,5.401179,-5.761809,-1.394420,3.250752,-3.422317,4.914701,4.381634,0.842172,3.487538,-2.234657,9.307975,9.011973,4.866010,-1.791869,-1.990113,6.719770,2.692403,9.776306,-2.718896,-8.315088,2.873723,-0.403624,6.222266,-2.494400,-3.295206,8.359639,4.102981,9.943538,-1.314901,5.683826,-7.501280,7.869713,7.648932,-4.390893,4.935689,-7.815139,-9.267987,1.300743,-8.257986,-0.267776,-4.004504,-8.928350,-5.886574,-7.638452,9.125155,-2.820762,8.505896,8.532751,-9.139814,-3.110332,-3.777721,-3.364879,0.673009,3.158097,4.537783,6.838019,0.061415,1.369754,3.986416,7.334124,-0.347933,-5.262601,0.138488,-0.721458,0.618150,5.758327,5.974929,-1.789044,6.706073,-7.747506,1.963857,-2.285389,5.820579,6.825057,-2.657813,7.443978,-3.587277,-4.202509,9.143087,6.255170,1.051061,5.275042,-7.816794,-7.313741,2.918390,-7.364454,-7.968063,9.890548,1.195336,-3.474599,7.653746,-5.315538,2.926731,9.407384,5.282843,-6.940437,9.145475,7.027427,2.004550,3.545508,-9.741616,-8.181692,9.466850,-4.686471,-1.704924,-4.921569,-7.602427,1.180058,9.280655,-6.894600,3.813585,9.903203,-9.928615,-8.108173,-7.521028,-1.449335,2.104484,3.535983,6.342216,6.914291,-3.038383,0.549499,-3.005677,2.917684,-5.055867,-9.400632,-4.006359,-4.933069,-0.010336,-8.443356,1.130434,3.970047,0.564263,6.705252,-8.284763,-4.787653,-0.828815,7.236824,-7.819543,-0.897005,0.715850,-7.571316,-2.669677,-2.598458,5.586678,-5.422086,-1.515539,-0.440026,-2.291710,-5.966155,-2.249215,-0.005142,-9.008390,-4.149395,-5.402657,1.888678,3.300206,3.641415,9.813288,8.361242,-4.178434,5.446344,9.975097,5.487909,6.271558,5.812580,-7.119054,-3.949070,0.090064,-3.474829,9.435218,3.632924,7.086637,-9.742048,4.488774,-5.594451,0.678425,-0.467813,9.760229,0.116784,1.378768,-2.825177,-3.415148,-9.107684,3.288531,8.672412,1.504948,-1.081125,3.178177,9.331081,-2.758245,-7.448666,7.388473,-5.254220,-8.355635,9.697259,-8.271677,-2.718770,-7.865381,0.995255,1.779516,-3.147122,1.847926,2.831724,0.162989,2.988012,-7.597216,-0.017170,-6.099454,-0.330967,-6.628736,-0.906080,-8.738172,9.210768,-3.631225,-2.307127,0.635843,-0.517759,0.248724,5.046306,-8.798505,-9.649021,-4.644385,-0.213760,-5.699730,-6.100924,-0.991467,7.166019,0.231102,2.216437,9.209687,0.629608,-2.351301,-4.372379,2.480613,-6.641765,-0.635914,0.818302,6.973865,-2.409285,-1.568895,-5.929083,9.669491,4.319211,-9.417637,-8.087814,9.304404,-2.371387,0.408138,2.677027,-5.775820,-3.554095,2.271553,-2.174007,0.039315,-3.594701,7.543245,-7.095701,-9.583562,4.687196,-5.272251,0.727132,8.892142,2.785262,-4.566061,6.688307,2.761014,3.191580,6.559545,6.244420,-8.548747,3.273375,9.456295,1.683137,2.052992,-8.300330,-7.650102,2.869435,-1.914932,7.673317,-6.907316,8.990999,-3.943715,-8.144653,-9.641272,2.685824,8.313473,-5.573032,-9.472221,-8.932037,-2.075725,-6.333769,-7.879824,-3.393575,-1.089138,3.792207,4.710499,-1.117044,-0.316348,6.874170,4.455078,3.352156,3.369909,7.602324,9.436050,-5.205311,-8.642163,1.871451,-7.628443,7.418579,2.548513,3.265410,-3.070604,-3.638284,-4.652766,1.872043,-8.861497,-0.251086,6.864435,-0.149655,-5.063533,-7.436410,4.725330,8.223805,-0.387006,-8.115225,-8.180471,-4.620388,-1.706046,3.930657,-2.237745,-6.246795,1.187503,2.720321,-5.658530,-7.358453,-0.171445,6.011953,-0.816516,7.388368,-0.205258,-5.438102,-8.217471,2.368966,3.587408,8.586470,8.597723,4.708378,0.495464,2.088120,-8.507709,-6.476750,8.883077,-7.004242,-4.086431,-4.088361,6.493318,5.134546,9.975030,-3.838502,5.242886,-3.670253,8.562018,-3.616429,-9.931882,-8.133968,6.161299,7.733366,7.112844,-4.284508,-2.124503,-2.729402,0.599938,9.428481,-2.433651,9.002692,7.828242,-2.395040,1.891685,5.669429,4.241539,-0.480593,-6.513973,3.972837,3.081085,-2.181170,-4.145523,-9.039013,-7.177327,-4.804213,4.730120,5.375442,3.589219,-8.750595,-3.390597,7.585105,9.957803,-1.800895,5.903741,5.342367,8.795709,-4.469516,-9.408468,5.090588,-6.746192,0.118872,6.487928,3.939695,2.648660,-0.173555,9.054555,4.764137,2.054430,2.041543,3.689608,-1.510781,-3.290677,-2.106562,9.012029,8.466743,6.872673,6.020854,2.817424,8.873426,-3.639611,-8.231677,4.725993,7.658839,8.115357,-0.231986,8.224428,4.665676,5.185696,4.594779,6.858287,0.324683,8.073095,-2.364217,0.925806,8.461560,8.514619,1.554081,6.613746,5.649987,0.892283,3.977103,-5.005619,-4.700495,-0.442654,-9.611724,5.388020,-6.708331,9.474290,1.127624,4.530753,-4.403017,4.799992,7.100489,-4.545876,3.323047,-6.000318,3.307879,-7.425292,2.132151,0.056724,-2.815584,2.393038,6.092790,3.296058,2.559637,-2.413902,1.664977,1.941728,-6.649935,-4.350676,-7.232303,7.072937,5.123282,4.866053,-8.765453,2.578229,2.628379,-0.436734,5.336783,-0.034837,-3.407471,-5.122675,-9.162974,-1.978475,-6.095621,-0.501513,-4.947308,-4.437271,1.831913,-4.017393,-9.926159,0.090568,-9.180660,-0.675203,6.046544,-9.446407,2.245213,-0.839603,-4.781816,2.188022,1.704884,5.617350,9.988765,4.168903,-6.787998,-6.524437,5.473955,-9.447650,7.160129,9.257524,2.881934,-8.076407,2.812411,-9.115138,-5.416837,-1.017265,-3.381930,2.602632,2.412080,-4.841113,-7.111198,-5.443319,-4.440389,4.812760,8.624121,0.492498,-2.440921,-7.033450,-8.515417,5.641238,-6.325800,-8.985064,-0.290737,-0.575029,-7.872987,2.812728,4.521231,3.856716,-4.237424,-8.042689,5.903737,7.955824,1.403867,1.614703,-0.724854,-4.463217,-4.735801,7.221728,-7.182395,-9.977079,3.908091,9.548693,0.355433,-9.510626,1.184771,-8.886370,-0.412122,-0.385988,8.320143,9.217449,0.939637,-4.598438,-5.292962,-3.421538,3.628121,-9.011113,-6.648060,4.765394,-3.841689,9.951792,-7.124482,-9.063962,9.751109,7.312714,8.197493,2.674523,-4.933609,-3.453240,6.795204,-5.428214,-9.070256,4.227315,-0.539106,-9.294557,5.187162,7.809579,1.614408,-5.070772,-7.592407,6.095601,1.703790,-7.161531,-8.923849,-6.646497,7.997543,-8.100871,2.763338,-8.954891,8.777882,-6.605775,4.259316,-2.594568,-1.521344,3.213144,-0.297911,-6.648624,9.646436,-2.563208,0.642871,-3.108308,1.852605,-0.374004,-2.553245,-8.199379,-1.819489,-0.585298,-3.787563,-6.481547,-2.005318,-1.153327,3.210243,-1.465090,9.955150,-1.775761,6.921246,-4.251730,-3.201123,-7.403231,4.841081,-0.310948,2.042968,3.795279,9.366906,-0.866561,-9.669381,1.092460,1.135910,-4.182519,-6.971047,-5.700255,5.443934,-7.095534,9.061060,1.414528,6.433483,-8.151345,-6.585873,7.820336,-2.108688,7.665976,-6.107000,-5.165539,-9.893568,-6.272331,1.584276,1.040636,3.021774,-0.631568,-5.719009,-0.690810,2.655682,-9.513313,-4.974171,-8.941604,-2.473386,7.317269,-6.143335,-8.521676,9.715066,6.007909,8.832599,8.714930,-4.490904,-5.156705,8.130903,-9.736796,6.423467,5.594994,-3.088474,-4.757530,0.728509,4.520564,0.741269,1.212797,9.631637,-6.676462,9.690282,6.105665,2.736335,-3.208618,-4.263546,-0.943376,9.627668,-2.060190,4.859302,-0.057429,-1.698289,-0.030705,-3.284459,-4.078136,-4.934310,-5.764676,0.677619,0.514091,0.257941,2.411281,-3.315030,-8.896132,0.808008,-1.546240,4.004579,-8.123936,-4.941155,-5.254855,-2.526894,-7.501897,3.772838,-0.578030,5.433921,6.225383,5.801570,-8.380049,-8.840979,3.366807,5.509271,-4.858979,6.124117,7.998082,3.873773,-1.323304,-4.992126,-9.403584,3.752934,-0.215303,-7.289659,-8.354830,7.030523,-5.684193,8.403817,9.537931,9.161421,3.123941,-9.602642,-5.108074,-4.890817,6.973394,-7.719589,-0.569849,-9.902287,-1.964493,0.723612,-9.466973,7.929568,-5.910050,1.972467,-5.706190,-4.770978,1.754842,-3.784276,-2.844020,-3.978103,1.017306,-1.331529,-6.255435,0.247187,8.278327,5.294813,9.550516,-4.398698,3.887653,2.382558,-8.559414,-6.785895,0.910514,-4.059206,6.259621,8.804029,0.831144,0.854447,1.725963,-0.948382,6.972534,-8.977151,-3.641735,-9.913707,-8.253610,6.054882,1.440113,-0.875573,-7.092924,0.861272,2.173862,1.625642,-9.444298,7.678326,5.867719,-6.854037,5.931962,6.575801,-5.003045,-1.230368,0.143232,2.889315,9.028122,4.013895,-8.071999,3.076786,-8.523492,-9.763855,1.650415], dtype = "float32")#candidate|1472|(1800,)|const|float32
call_1471 = relay.TupleGetItem(func_1351_call(relay.reshape(const_1472.astype('float32'), [10, 15, 12])), 0)
call_1473 = relay.TupleGetItem(func_1353_call(relay.reshape(const_1472.astype('float32'), [10, 15, 12])), 0)
bop_1483 = relay.subtract(bop_1455.astype('float64'), relay.reshape(bop_1465.astype('float64'), relay.shape_of(bop_1455))) # shape=(8, 12, 1248)
bop_1486 = relay.subtract(bop_1458.astype('float64'), relay.reshape(bop_1468.astype('float64'), relay.shape_of(bop_1458))) # shape=(8, 12, 1248)
bop_1493 = relay.minimum(bop_1455.astype('int32'), relay.reshape(uop_1414.astype('int32'), relay.shape_of(bop_1455))) # shape=(8, 12, 1248)
bop_1496 = relay.minimum(bop_1458.astype('int32'), relay.reshape(uop_1416.astype('int32'), relay.shape_of(bop_1458))) # shape=(8, 12, 1248)
bop_1507 = relay.less_equal(bop_1405.astype('bool'), relay.reshape(uop_1414.astype('bool'), relay.shape_of(bop_1405))) # shape=(8, 12, 1248)
bop_1510 = relay.less_equal(bop_1408.astype('bool'), relay.reshape(uop_1416.astype('bool'), relay.shape_of(bop_1408))) # shape=(8, 12, 1248)
func_644_call = mod.get_global_var('func_644')
func_646_call = mutated_mod.get_global_var('func_646')
var_1525 = relay.var("var_1525", dtype = "float32", shape = (64, 24))#candidate|1525|(64, 24)|var|float32
call_1524 = relay.TupleGetItem(func_644_call(relay.reshape(var_1525.astype('float32'), [8, 12, 16])), 0)
call_1526 = relay.TupleGetItem(func_646_call(relay.reshape(var_1525.astype('float32'), [8, 12, 16])), 0)
func_66_call = mod.get_global_var('func_66')
func_71_call = mutated_mod.get_global_var('func_71')
call_1530 = relay.TupleGetItem(func_66_call(relay.reshape(call_1388.astype('uint64'), [6, 16, 13]), relay.reshape(call_1388.astype('uint64'), [6, 16, 13]), relay.reshape(call_1388.astype('uint64'), [6, 16, 13]), ), 0)
call_1531 = relay.TupleGetItem(func_71_call(relay.reshape(call_1388.astype('uint64'), [6, 16, 13]), relay.reshape(call_1388.astype('uint64'), [6, 16, 13]), relay.reshape(call_1388.astype('uint64'), [6, 16, 13]), ), 0)
uop_1535 = relay.exp(var_1525.astype('float32')) # shape=(64, 24)
func_958_call = mod.get_global_var('func_958')
func_960_call = mutated_mod.get_global_var('func_960')
call_1551 = relay.TupleGetItem(func_958_call(), 1)
call_1552 = relay.TupleGetItem(func_960_call(), 1)
func_847_call = mod.get_global_var('func_847')
func_849_call = mutated_mod.get_global_var('func_849')
call_1555 = relay.TupleGetItem(func_847_call(relay.reshape(call_1388.astype('uint64'), [1248,])), 1)
call_1556 = relay.TupleGetItem(func_849_call(relay.reshape(call_1388.astype('uint64'), [1248,])), 1)
func_455_call = mod.get_global_var('func_455')
func_457_call = mutated_mod.get_global_var('func_457')
call_1559 = relay.TupleGetItem(func_455_call(), 0)
call_1560 = relay.TupleGetItem(func_457_call(), 0)
output = relay.Tuple([call_1418,call_1445,call_1471,const_1472,bop_1483,bop_1493,bop_1507,call_1524,call_1530,uop_1535,call_1551,call_1555,call_1559,])
output2 = relay.Tuple([call_1419,call_1446,call_1473,const_1472,bop_1486,bop_1496,bop_1510,call_1526,call_1531,uop_1535,call_1552,call_1556,call_1560,])
func_1561 = relay.Function([var_1525,], output)
mod['func_1561'] = func_1561
mod = relay.transform.InferType()(mod)
var_1562 = relay.var("var_1562", dtype = "float32", shape = (64, 24))#candidate|1562|(64, 24)|var|float32
output = func_1561(var_1562)
func_1563 = relay.Function([var_1562], output)
mutated_mod['func_1563'] = func_1563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_1591 = relay.TupleGetItem(func_257_call(), 0)
call_1592 = relay.TupleGetItem(func_259_call(), 0)
output = relay.Tuple([call_1591,])
output2 = relay.Tuple([call_1592,])
func_1600 = relay.Function([], output)
mod['func_1600'] = func_1600
mod = relay.transform.InferType()(mod)
output = func_1600()
func_1601 = relay.Function([], output)
mutated_mod['func_1601'] = func_1601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1037_call = mod.get_global_var('func_1037')
func_1039_call = mutated_mod.get_global_var('func_1039')
call_1602 = relay.TupleGetItem(func_1037_call(), 0)
call_1603 = relay.TupleGetItem(func_1039_call(), 0)
func_984_call = mod.get_global_var('func_984')
func_985_call = mutated_mod.get_global_var('func_985')
call_1604 = relay.TupleGetItem(func_984_call(), 0)
call_1605 = relay.TupleGetItem(func_985_call(), 0)
output = relay.Tuple([call_1602,call_1604,])
output2 = relay.Tuple([call_1603,call_1605,])
func_1606 = relay.Function([], output)
mod['func_1606'] = func_1606
mod = relay.transform.InferType()(mod)
output = func_1606()
func_1607 = relay.Function([], output)
mutated_mod['func_1607'] = func_1607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_455_call = mod.get_global_var('func_455')
func_457_call = mutated_mod.get_global_var('func_457')
call_1642 = relay.TupleGetItem(func_455_call(), 1)
call_1643 = relay.TupleGetItem(func_457_call(), 1)
func_644_call = mod.get_global_var('func_644')
func_646_call = mutated_mod.get_global_var('func_646')
const_1651 = relay.const([2.254445,-2.746769,-3.948601,6.971164,-8.616897,0.944356,-4.357987,6.379306,6.888004,-8.561814,-8.055535,-0.116197,-7.503757,-8.525027,8.024847,-7.121035,-8.590205,8.597378,-2.577873,-3.312128,1.641633,6.543982,-2.320817,0.327128,8.261137,6.519610,-8.762187,7.241510,6.890380,2.651581,-7.474393,4.096534,-1.766449,3.805698,-2.779826,8.077913,8.377183,5.617230,1.685155,-1.900146,-4.136798,3.783851,2.649682,5.371359,-0.865429,0.028945,4.152295,9.931207,6.353714,-7.351692,-5.730720,6.257684,-0.521822,-4.142505,9.523877,-0.418471,-2.716600,1.425297,-9.378993,-5.483871,1.290438,5.854909,4.687069,-5.872139,4.848148,-5.960341,-1.584010,-2.338254,-0.039950,3.457352,9.806416,-3.035405,7.504327,4.309762,-5.839571,-6.483148,0.683188,-9.669866,3.397638,1.269205,9.826095,-8.816970,3.465328,-8.148719,8.747685,2.430324,3.645106,-9.507813,5.055534,5.666115,-0.960769,2.218392,8.271063,-5.740641,-4.241118,-2.042082,9.322670,-6.150872,0.586387,-5.208316,-0.793611,6.861450,6.541472,-9.540254,1.699334,9.437942,4.819728,3.355048,-7.026492,8.959333,0.118932,1.938203,9.357062,7.513801,-9.110912,3.158922,4.967327,1.199328,4.618667,-3.814329,6.989921,-6.437094,-7.686341,8.824062,1.747270,-2.282847,-2.818354,6.240026,9.005424,-7.738064,-2.733607,-2.652568,-2.006896,7.830573,3.842582,-5.953617,3.705192,7.271564,-5.170443,-0.406909,-1.865755,-4.242317,-4.078361,-8.800424,-6.450831,-2.719438,-8.910002,0.050490,-1.906229,-0.018703,-4.045644,-6.532132,8.272351,8.119813,-8.749345,0.178366,-5.660080,-7.141141,9.651838,-6.816256,2.357248,6.958007,5.196997,5.801847,8.880640,0.575668,-9.073015,6.560735,-3.171591,-0.130437,-8.789798,7.359157,6.056961,-6.053114,-1.815229,9.571100,2.687908,3.115354,2.478480,-5.543104,9.425978,-7.466632,1.880921,0.045669,-2.168893,-6.667495,-8.682504,-0.603678,6.490521,-3.887631,8.665028,-9.357859,-2.000673,-3.689452,-2.425136,-4.955923,-2.325560,4.765042,-2.753021,4.956959,-1.232680,-7.996566,6.311410,6.666966,0.332612,-4.644322,1.287310,0.329141,1.425216,6.808793,-2.146438,4.871574,-7.297996,-5.780784,2.701246,6.727673,2.014987,-5.573945,-6.173426,-2.025698,-6.217764,0.108297,9.581974,3.689086,-3.369664,-6.368262,8.251748,9.971365,-5.346344,-6.798331,-0.114331,-8.764972,6.671770,-3.295000,-6.599112,7.675347,-4.183569,-6.426894,9.838960,-7.939483,-9.746046,-3.744938,-0.770984,3.891156,3.294774,-6.216146,6.626858,-9.315876,-8.990958,0.304745,6.863911,2.317086,7.423272,1.762816,2.615943,-0.511716,-3.999299,3.491452,-4.228139,4.983883,9.492618,4.483285,-4.728277,0.594647,3.489867,6.012593,-4.114896,-3.318528,-0.720417,-7.136841,6.270163,2.508553,-8.048048,-5.243623,1.121284,-7.118748,1.619936,-2.879449,2.350031,-1.147657,-9.020126,2.456851,-8.080090,-7.005777,1.102050,2.194795,8.250141,-3.209422,1.691732,-6.606798,7.667422,9.363461,3.934910,-7.436132,-4.416046,0.727446,9.680175,1.825090,-9.537868,-3.720947,-1.748576,-9.126182,7.960214,6.442111,4.632454,9.910752,5.762248,0.550965,-8.341666,3.306670,3.425944,5.872976,-5.381558,-7.134527,-0.647768,-7.561400,-5.561307,-1.493499,-7.697209,1.960186,-2.302687,-1.082315,1.552204,-6.096815,4.115061,-7.208650,-6.765012,8.531292,-1.993305,0.267771,9.815443,-2.928016,-1.761087,7.491602,-7.861891,-2.889168,6.481753,-5.804275,-0.853949,5.298789,2.141443,-4.620114,3.837715,-3.073483,-0.212895,6.151229,3.750307,5.708055,-2.354666,-4.571084,9.280066,3.493061,7.418700,-2.289308,-1.946801,-3.142636,1.962401,5.635905,-6.371623,5.214817,3.164013,-3.832255,-6.536041,-6.720746,-3.369775,5.570563,3.520779,3.117311,2.882257,6.336394,4.098201,7.050548,-1.672759,0.479464,-2.754928,2.324552,1.031922,-5.673834,-0.722347,5.042573,-1.750298,-3.209039,6.332249,-5.674376,0.503454,1.208816,4.533065,-5.131909,3.255396,2.477292,-0.663174,-2.753733,-9.453102,5.140303,0.283256,-0.752882,1.454723,-9.827440,-9.364394,9.000945,-1.166520,-6.743430,9.365168,6.651037,-9.304165,-5.908551,-5.023123,5.238678,-8.848367,4.824232,1.296975,3.359303,-2.639154,3.153403,-4.765115,6.942614,7.273767,6.222661,-8.894731,-1.032323,9.535092,5.415533,3.089350,-9.324152,1.254109,4.682392,6.614741,0.793238,-7.438307,-2.915413,-0.269336,7.344410,3.657038,-1.289275,-6.220033,2.604298,-8.673529,3.750119,8.039432,4.870337,4.750085,7.851247,1.040509,-9.948166,8.638802,-8.969823,-5.777925,-8.096279,-2.667690,8.474477,5.744634,-5.496584,7.960813,9.441824,-5.538859,4.851619,5.892056,-6.422951,-7.818253,0.050183,-2.920541,1.788521,9.455375,-3.721013,-1.960869,-8.625949,-3.059454,8.732639,-0.866833,-7.467118,0.555435,-0.082991,-7.038125,1.410774,-2.279049,9.300172,4.754940,3.566634,-3.806443,-0.986036,-6.551638,-9.676530,-3.387840,-8.295649,-8.867692,5.426791,4.472515,-9.563928,-5.872985,-0.592216,-3.835889,3.225959,-9.553443,1.336443,5.623422,6.837170,-2.388250,-0.853630,-4.754639,-0.944983,-4.364965,-7.625545,6.252975,9.581019,0.392608,-9.485499,2.553667,5.193701,7.437456,-2.582241,-9.889658,-2.856109,8.143115,0.718307,4.286515,-6.254047,1.086451,9.738224,-2.102674,7.950709,-7.416501,4.772265,7.567875,2.037782,5.125664,4.918132,-9.817758,5.048674,2.871611,4.647126,-3.208731,-8.415423,-7.796899,-9.007965,-5.977071,-4.497280,-9.999305,1.247187,-6.071890,-0.566214,-1.309138,-7.404609,4.651152,1.910922,-7.212350,5.250757,-9.996603,3.326091,-4.378338,4.901008,5.542603,2.082943,-2.121835,1.241814,-6.301477,-6.194062,-4.268953,7.080063,-7.211866,-8.087817,7.593666,7.342928,4.224260,-8.579157,1.317755,-9.835749,-1.412388,-2.588910,-4.949685,9.444660,4.799990,-1.912498,-0.138969,3.557094,-1.373799,-7.139820,7.166879,1.659562,-6.148707,-6.613011,-7.657033,-9.615965,2.083090,9.754536,-4.809616,-1.485847,-7.305994,8.439647,-9.810296,-2.391319,-8.989477,-0.085338,-3.289427,-1.323094,7.125002,-6.588123,-8.898796,-9.242976,3.328059,2.386521,2.337937,3.808415,-2.698926,-4.109337,6.445460,8.380906,2.299585,-3.234376,-1.363146,-5.893727,0.029732,0.605020,7.737201,1.534727,0.326411,3.512442,-3.752773,-8.585556,7.648876,3.684837,6.547289,8.013311,-7.456511,5.680247,-3.826920,7.874683,-9.592599,0.897381,-1.218781,9.722177,-7.530933,-8.035707,9.687108,1.298377,-9.391457,-0.535537,-1.401919,-5.911638,9.237474,2.301206,-1.059102,9.368259,6.968917,-9.445538,-1.282152,1.709542,-9.868170,7.374062,-3.599092,9.707948,-8.077935,9.877749,7.449284,4.723931,2.691432,-7.725516,1.879309,-5.803622,8.179114,8.550562,-7.037394,-7.537814,-3.888602,4.313662,-6.105734,1.833681,-2.227720,7.689778,3.844214,-1.776642,7.623147,-6.587288,-5.584990,2.101720,8.095639,2.919333,0.854613,9.344390,-8.209808,9.873006,9.775402,6.439897,1.999029,1.467242,2.774550,3.703190,-1.019313,-6.001409,-4.016206,-1.713435,-9.159421,-3.251417,8.174242,7.805926,-1.724895,5.459492,-5.280193,0.113930,2.433823,-9.257168,-4.445456,-2.372511,8.908997,8.189440,-0.510734,3.580279,-6.465087,7.694118,1.189294,8.060950,9.610177,0.576012,0.783703,7.684607,2.188837,8.101189,2.626754,8.223523,-1.517230,-2.454215,-7.836111,1.353637,1.086983,4.400581,-2.546224,-6.838762,7.668934,9.372069,-0.449073,0.025963,-0.711504,7.735153,-0.858214,-1.190532,-4.871468,-0.041957,-5.486589,5.253641,-5.842644,2.283252,5.658023,-0.293070,6.565313,6.120072,-7.501755,-0.338217,7.751840,-3.208529,-0.666155,2.734360,7.259576,4.680655,9.206429,-0.772043,1.210777,-0.465689,0.077113,4.994930,-0.826273,0.746363,-0.966635,3.317836,0.249083,3.149645,-6.377684,-2.674490,-4.732740,-9.738033,-5.386704,2.144253,-5.077153,-3.624403,-3.590852,-1.516843,-1.055710,6.134409,2.428676,4.897237,-8.394408,-5.185466,5.493592,7.445949,3.969921,9.032213,-8.608703,9.433502,4.403807,-7.417616,-7.062251,-5.462352,-3.074038,6.870767,8.872193,7.753633,5.210079,-8.720230,-1.972921,6.365898,1.373036,-6.306925,0.740455,-5.775642,3.106417,2.113955,-7.224404,0.811867,2.567488,-4.616857,1.274000,8.843065,-3.711645,8.394678,0.774260,-2.449723,3.068503,-0.750563,-8.158162,1.853031,1.333399,9.115774,3.916756,4.060562,4.285804,0.949869,1.925756,-9.573171,-1.919608,-6.040039,-6.078500,0.242445,4.356484,-2.458825,-6.844536,-1.453222,-0.424946,2.702273,-8.493268,2.709640,0.258920,-4.921316,1.011990,-3.500703,-0.847530,8.037297,6.577202,-4.077424,-5.115062,-8.872592,0.086958,-5.943814,4.697245,2.256782,-8.415607,6.499474,4.600195,-4.298779,-9.561668,-1.288767,-9.100383,1.011456,-7.531541,-9.673797,5.362170,-5.004180,9.074045,-9.585854,-3.834358,-5.041114,-2.183397,-6.116656,6.587080,-0.789139,0.757141,-2.050631,-4.860440,6.340538,-6.347094,1.293517,1.596576,-0.534546,6.431808,2.277913,-4.197983,-0.376309,7.154397,-7.930234,-8.681808,1.647353,6.939468,5.744762,4.765504,7.254510,-0.290403,6.546057,-0.711390,2.545518,3.478129,6.447264,-7.131455,-5.014620,3.896255,8.790373,-0.890207,2.459046,-3.867845,8.423337,-1.075164,7.500032,-5.308212,-3.984249,-5.940059,-3.466444,-7.936600,8.544123,2.647350,-0.906629,-8.178811,-2.495816,-3.703093,5.042819,-3.168401,6.010602,1.716779,-6.934811,4.211332,-6.996833,-6.548292,2.939905,-9.879328,0.434759,8.391412,-7.748140,1.071308,-2.908157,8.250678,2.728174,-3.803007,-2.314923,3.219326,2.606308,6.688567,5.169287,-1.606930,-5.008965,0.263630,4.129319,5.275022,0.062972,-6.993436,5.310592,2.658086,-5.093134,0.449360,2.654117,9.810810,0.450743,-6.287711,-3.634330,-3.332356,3.994524,-8.754352,-4.005635,7.247142,8.492952,2.974714,6.490513,8.295127,-8.547688,-3.395724,9.528523,6.794906,-6.923911,3.785941,-3.420356,2.228363,-1.616485,-1.923516,7.380441,-0.746566,-1.822912,9.962986,-7.357053,3.469854,8.762311,-0.317364,8.108121,-1.058860,7.414552,-4.354846,1.616334,5.646559,7.770726,-1.842772,0.266236,5.922029,-1.695543,3.512200,5.092797,8.927352,-4.752374,-8.023137,4.335634,7.499225,-9.144521,3.411166,1.485231,5.458951,-3.356054,-4.294554,-0.413834,9.240840,-4.500170,3.305909,2.939696,6.546166,-0.855781,4.188644,-1.059679,-6.018084,-1.110969,-3.526668,1.859320,5.665673,7.468776,9.142145,8.696300,-7.295917,-9.131617,-7.899675,-7.324641,7.771530,9.823015,3.238307,-4.949126,-4.276071,3.060448,-1.023557,1.445300,-3.775689,1.243162,-0.231256,1.717107,3.345125,3.169585,7.222593,0.975887,-0.798807,-0.578795,-0.539195,-9.648386,8.185335,8.227827,-7.028353,7.104188,8.965991,-5.795405,-9.289030,-2.817404,0.034437,1.180851,5.275463,-6.333193,5.874651,9.946960,0.125953,-1.627452,1.788967,-9.729420,-9.956868,2.148776,0.635276,-2.146875,0.736446,8.787983,-5.336651,4.850106,5.270892,5.105083,-0.989001,-2.219022,-5.259693,8.134499,-9.660482,8.491749,8.046228,-1.408440,0.129581,-5.667754,9.003583,0.529883,-3.149384,6.842079,-9.562386,-3.250454,-7.570728,-8.994507,-6.064534,-9.178903,-0.926843,1.256383,-9.591195,-6.620667,-0.362275,-2.966858,-4.669444,9.623321,6.999041,-8.177658,-1.479537,-0.264900,4.976095,8.298571,-8.259887,-0.171630,-9.635900,2.801473,9.338072,-6.103538,-9.145915,2.482939,-2.486592,-9.079629,2.709964,-6.567088,5.129723,-7.953302,7.963576,-3.585136,-3.991850,-3.217678,3.975753,8.646741,0.196676,-2.241494,3.395152,-6.511985,1.762851,4.126526,5.794721,-0.838378,-0.318633,1.442266,-2.261806,-5.780309,-2.990744,3.502927,-3.846343,-5.404658,-8.466794,1.750463,-7.012004,-2.502198,-4.151541,6.713681,1.536217,5.510381,-7.494537,0.715675,-1.221432,3.987354,8.454690,-2.260445,-8.790631,1.398736,-7.673843,-9.293693,2.525154,-0.690084,-8.000311,5.335575,0.664845,0.226579,-4.523229,-4.806645,-3.594804,6.617812,7.166100,5.871306,3.592770,-9.371424,-4.872868,-1.508645,2.664435,5.240353,-1.985106,7.099118,7.926856,-9.468988,-4.290252,3.900083,-3.653732,-5.562677,-9.811800,9.717941,-7.020194,8.145060,-1.455819,-6.626224,-6.712513,4.611747,8.875852,-6.391812,-2.720660,-0.609190,-2.744795,8.210980,-8.093532,-4.478716,-8.779372,-7.589662,1.902876,2.887286,-6.031427,-6.506525,0.594824,3.421636,-9.288066,-0.892450,-2.351030,6.058270,-9.390620,-1.593276,-5.230431,3.999401,-9.614484,-3.409438,-8.411619,-4.610956,3.929031,5.299974,-4.100797,8.970908,0.399272,7.401863,-2.868544,-6.240280,-7.005364,-0.008260,2.338490,3.284295,0.117929,4.434388,3.782572,-0.790992,-9.216561,6.170384,3.167377,-0.400565,-1.415364,-1.688461,-0.398802,9.713743,4.479309,-6.997942,-5.672694,9.464755,4.031619,3.580476,-5.217997,2.066058,5.246187,4.782704,-0.493735,2.930321,-7.574724,1.711928,-1.434767,6.987804,-3.898569,-1.691827,6.471508,7.453874,4.482937,3.496843,-2.551036,-2.826677,9.800596,-5.720876,1.650771,8.067642,-8.271029,3.910555,4.591378,-3.773261,-9.382207,-3.186278,-2.970986,-4.372891,-3.179576,9.768513,-0.794038,2.926591,-1.897984,8.665445,1.699941,0.427397,-6.087893,0.848232,1.037224,7.932751,-8.871395,1.051535,9.630674,-1.344511,9.924413,9.795369,-6.951386,6.290133,-0.650330,-8.980274,5.181810,7.253696,-9.187352,-7.122766,4.687402,3.507104,9.673571,-9.107851,-7.714160,7.093144,9.837085,-5.031396,0.903521,-4.446476,-8.231841,5.031606,-1.976390,2.411233,9.483518,-2.976858,-4.556800,5.856509,-1.855761,-4.081260,-6.875272,-3.761755,-8.627320,7.444310,-3.070254,-0.884668,1.099358,7.049192,-1.622881,-3.480019,-9.725180,-2.519965,8.453495,-7.211583,-1.200842,-2.548153,-5.187622,-7.658287,1.664401,-0.376009,2.977045,4.662851,5.215095,-7.072850,2.868706,4.286782,0.127362,-6.452193,2.680900,-6.869854,-0.235153,9.555619,8.176473,0.153911,9.009693,-3.738760,-2.955270,1.503027,-8.026019,-4.323268,5.213856,6.127274,7.074282,3.582311,7.717288,-5.117128,-3.123188,-1.565708,8.239912,9.603462,-8.262100,4.647678,7.141878,-6.428628,-5.536882,1.002242,-4.755708,-6.271701,8.486918,7.987858,7.719199,-8.895293,0.885982,5.164443,-1.324873,5.696130,9.465361,-4.523124,-3.433337,-4.300619,4.719130,-0.165642,2.214944,2.225544,-0.381312,3.582208,5.175254,5.578298,-9.582479,5.532273,8.116852,6.861397,-0.029992,9.338841,-3.899563,9.821990,-6.132503,-1.155227,5.664999,-7.389559,-0.483349,2.147144,9.839705,-8.706888,-0.675868,-0.567082,-7.439177,-9.470463,5.176895,0.313003,2.057483,5.263712,-1.950142,4.499099,-8.569301,0.644696,1.742995,-9.582821,-0.992118,1.779020,-0.012194,-2.775159,3.899085,7.680637,7.352434,0.208991,-2.292060,-0.512664,-6.059143,-9.361946,3.008012,8.939021,-0.095592,2.463415,-5.834550,4.558651,-8.798945,7.587876,-4.189029,9.195553,-4.625330,9.038400,2.490919,7.094810,9.746583,-1.844803,-6.439926,-1.221422,5.904584,7.596531,-0.620014,2.414563,-5.288259,-5.596510,3.767235,-4.526402,-2.255766,-7.206326,6.254160,3.009271,5.986324,1.123974,7.750620,3.352055,5.266826,-5.471699,2.072833,2.384494,0.388125,0.647300,1.692673,-3.663874,2.114111,1.394265,-8.112461,5.048444,1.676642,6.824993,-9.993944,0.734807,4.625401,0.024359,4.790286,9.671983,1.610698,-9.617036,-6.798290,-1.027313,0.451438,5.584662,9.590420,-2.664830,7.019942,1.009115,-6.328123,-7.476285,3.163440,-8.068645,-7.542642,8.862402,-2.948713,-6.908765,-2.322525,-4.753679,-8.187702,1.748967,7.319021,-3.143223,-6.919970,-1.084510,4.808647,-5.132314], dtype = "float32")#candidate|1651|(1536,)|const|float32
call_1650 = relay.TupleGetItem(func_644_call(relay.reshape(const_1651.astype('float32'), [8, 12, 16])), 0)
call_1652 = relay.TupleGetItem(func_646_call(relay.reshape(const_1651.astype('float32'), [8, 12, 16])), 0)
func_1606_call = mod.get_global_var('func_1606')
func_1607_call = mutated_mod.get_global_var('func_1607')
call_1653 = relay.TupleGetItem(func_1606_call(), 1)
call_1654 = relay.TupleGetItem(func_1607_call(), 1)
func_984_call = mod.get_global_var('func_984')
func_985_call = mutated_mod.get_global_var('func_985')
call_1655 = relay.TupleGetItem(func_984_call(), 0)
call_1656 = relay.TupleGetItem(func_985_call(), 0)
func_847_call = mod.get_global_var('func_847')
func_849_call = mutated_mod.get_global_var('func_849')
var_1674 = relay.var("var_1674", dtype = "uint64", shape = (312, 4))#candidate|1674|(312, 4)|var|uint64
call_1673 = relay.TupleGetItem(func_847_call(relay.reshape(var_1674.astype('uint64'), [1248,])), 2)
call_1675 = relay.TupleGetItem(func_849_call(relay.reshape(var_1674.astype('uint64'), [1248,])), 2)
var_1676 = relay.var("var_1676", dtype = "uint64", shape = (1248,))#candidate|1676|(1248,)|var|uint64
bop_1677 = relay.add(call_1673.astype('int64'), relay.reshape(var_1676.astype('int64'), relay.shape_of(call_1673))) # shape=(1248,)
bop_1680 = relay.add(call_1675.astype('int64'), relay.reshape(var_1676.astype('int64'), relay.shape_of(call_1675))) # shape=(1248,)
uop_1701 = relay.sinh(const_1651.astype('float64')) # shape=(1536,)
func_391_call = mod.get_global_var('func_391')
func_392_call = mutated_mod.get_global_var('func_392')
call_1711 = func_391_call()
call_1712 = func_391_call()
output = relay.Tuple([call_1642,call_1650,call_1653,call_1655,var_1674,bop_1677,uop_1701,call_1711,])
output2 = relay.Tuple([call_1643,call_1652,call_1654,call_1656,var_1674,bop_1680,uop_1701,call_1712,])
func_1741 = relay.Function([var_1674,var_1676,], output)
mod['func_1741'] = func_1741
mod = relay.transform.InferType()(mod)
var_1742 = relay.var("var_1742", dtype = "uint64", shape = (312, 4))#candidate|1742|(312, 4)|var|uint64
var_1743 = relay.var("var_1743", dtype = "uint64", shape = (1248,))#candidate|1743|(1248,)|var|uint64
output = func_1741(var_1742,var_1743,)
func_1744 = relay.Function([var_1742,var_1743,], output)
mutated_mod['func_1744'] = func_1744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1276_call = mod.get_global_var('func_1276')
func_1278_call = mutated_mod.get_global_var('func_1278')
call_1797 = relay.TupleGetItem(func_1276_call(), 0)
call_1798 = relay.TupleGetItem(func_1278_call(), 0)
uop_1817 = relay.log10(call_1797.astype('float32')) # shape=(1248,)
uop_1819 = relay.log10(call_1798.astype('float32')) # shape=(1248,)
func_984_call = mod.get_global_var('func_984')
func_985_call = mutated_mod.get_global_var('func_985')
call_1820 = relay.TupleGetItem(func_984_call(), 0)
call_1821 = relay.TupleGetItem(func_985_call(), 0)
bop_1823 = relay.mod(call_1820.astype('float64'), call_1797.astype('float64')) # shape=(8, 12, 1248)
bop_1826 = relay.mod(call_1821.astype('float64'), call_1798.astype('float64')) # shape=(8, 12, 1248)
output = relay.Tuple([uop_1817,bop_1823,])
output2 = relay.Tuple([uop_1819,bop_1826,])
func_1832 = relay.Function([], output)
mod['func_1832'] = func_1832
mod = relay.transform.InferType()(mod)
mutated_mod['func_1832'] = func_1832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1832_call = mutated_mod.get_global_var('func_1832')
call_1833 = func_1832_call()
output = call_1833
func_1834 = relay.Function([], output)
mutated_mod['func_1834'] = func_1834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_958_call = mod.get_global_var('func_958')
func_960_call = mutated_mod.get_global_var('func_960')
call_1868 = relay.TupleGetItem(func_958_call(), 0)
call_1869 = relay.TupleGetItem(func_960_call(), 0)
output = relay.Tuple([call_1868,])
output2 = relay.Tuple([call_1869,])
func_1899 = relay.Function([], output)
mod['func_1899'] = func_1899
mod = relay.transform.InferType()(mod)
mutated_mod['func_1899'] = func_1899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1899_call = mutated_mod.get_global_var('func_1899')
call_1900 = func_1899_call()
output = call_1900
func_1901 = relay.Function([], output)
mutated_mod['func_1901'] = func_1901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_1902 = relay.TupleGetItem(func_257_call(), 0)
call_1903 = relay.TupleGetItem(func_259_call(), 0)
output = relay.Tuple([call_1902,])
output2 = relay.Tuple([call_1903,])
func_1921 = relay.Function([], output)
mod['func_1921'] = func_1921
mod = relay.transform.InferType()(mod)
mutated_mod['func_1921'] = func_1921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1921_call = mutated_mod.get_global_var('func_1921')
call_1922 = func_1921_call()
output = call_1922
func_1923 = relay.Function([], output)
mutated_mod['func_1923'] = func_1923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_1941 = relay.TupleGetItem(func_567_call(), 0)
call_1942 = relay.TupleGetItem(func_569_call(), 0)
uop_1948 = relay.atan(call_1941.astype('float32')) # shape=(8, 12, 1)
uop_1950 = relay.atan(call_1942.astype('float32')) # shape=(8, 12, 1)
uop_1959 = relay.rsqrt(call_1941.astype('float64')) # shape=(8, 12, 1)
uop_1961 = relay.rsqrt(call_1942.astype('float64')) # shape=(8, 12, 1)
uop_1970 = relay.atanh(uop_1948.astype('float32')) # shape=(8, 12, 1)
uop_1972 = relay.atanh(uop_1950.astype('float32')) # shape=(8, 12, 1)
output = relay.Tuple([uop_1959,uop_1970,])
output2 = relay.Tuple([uop_1961,uop_1972,])
func_1977 = relay.Function([], output)
mod['func_1977'] = func_1977
mod = relay.transform.InferType()(mod)
output = func_1977()
func_1978 = relay.Function([], output)
mutated_mod['func_1978'] = func_1978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_984_call = mod.get_global_var('func_984')
func_985_call = mutated_mod.get_global_var('func_985')
call_1986 = relay.TupleGetItem(func_984_call(), 0)
call_1987 = relay.TupleGetItem(func_985_call(), 0)
const_1999 = relay.const([[[-1.700142,-2.210741,7.865635,5.157973,7.004499,-7.252733,0.226602,-3.543352,-5.373119,-5.170265,-3.164624,-9.574639,7.378260,9.061792],[-7.028024,-1.923125,-3.946144,-9.287746,-2.574721,0.267140,9.951082,6.877351,5.774885,-4.865516,-1.693638,5.647664,-4.894766,-0.166806],[3.942835,9.263124,-7.647734,-7.080534,7.360983,-2.739187,-3.414620,7.067297,5.479914,-2.817046,-3.021788,-5.614457,8.973409,5.284456],[-3.709232,-4.625888,6.023613,0.685760,2.366059,9.115573,-9.169506,-9.360536,1.402255,4.440918,8.836365,5.017632,-3.494935,-1.113408],[-8.290338,-0.578442,9.106569,-5.497724,-9.351023,-9.778618,6.202681,-6.150470,4.852822,-3.527930,9.701784,3.405802,-7.017996,-2.011996],[7.335214,-8.163512,3.267275,-1.393064,2.923614,9.034918,-5.854385,-9.889759,2.592461,-6.194248,9.932350,6.784455,-9.108637,3.970658],[-4.293654,8.249861,3.039257,2.671517,-6.887960,1.227846,-0.318313,-2.837899,2.150658,-2.506053,7.555440,7.526774,5.439932,4.557711],[-6.488242,-7.923983,1.641798,-8.113973,-6.995215,6.458838,0.007809,-6.143805,1.291966,-1.672062,1.321897,-8.360637,8.818516,-1.481943],[-2.677962,-9.399153,-5.151586,0.063031,9.071540,-9.399290,3.087487,-1.086786,9.731536,-7.075553,7.720068,3.551608,3.760557,-0.746359],[7.731799,-1.036773,-0.813469,-9.505748,4.376898,-8.514307,2.873587,-1.727728,-1.450120,5.820972,-6.575824,9.312610,6.857747,-6.439541],[-7.057947,7.628068,1.079274,4.183386,2.789354,7.462539,-6.436066,1.150971,-1.216935,-1.748497,-6.410290,-0.410370,-1.172051,5.740576],[-0.858313,-0.029018,-3.133519,8.926851,0.699614,8.234515,-8.987003,-5.868490,9.242235,8.718636,4.352802,-3.328884,3.575741,-8.449137]],[[-6.669556,5.590019,-4.825025,5.430528,-4.511364,-7.050751,-7.397186,-2.386814,-5.563411,5.249972,-1.275594,-9.594215,-2.209092,7.212148],[2.410639,4.885999,6.454420,3.094042,6.122568,-6.026811,0.155240,5.142329,7.532705,-8.729096,-4.235627,1.123519,-7.684594,5.236572],[-0.941295,9.266043,-5.138044,-2.696666,9.151065,7.748330,-7.876631,-2.541164,3.473223,0.002173,4.489756,-3.542365,8.385283,-0.123947],[8.597358,4.782231,8.675449,-7.102891,7.086167,1.491218,-5.548585,4.437606,1.973293,-6.652149,-4.316620,5.151305,7.067835,6.446500],[5.200954,2.227239,3.507688,-9.206629,6.313613,6.121015,8.949168,3.743144,8.700156,9.656458,0.220674,6.560428,0.077773,7.128486],[9.820533,-1.214851,5.675690,3.775698,-3.837515,0.955352,-5.992912,-7.282443,9.880836,3.298953,3.265713,4.171695,-8.240405,-1.460692],[5.790241,5.333834,-0.728865,9.123835,1.405220,6.281388,1.312350,8.539523,9.037521,9.397492,6.702498,2.433436,3.110238,6.383697],[-6.421439,-5.418043,-5.636565,-5.407286,7.831581,-2.856460,-5.700904,-6.441540,-7.173948,-6.773360,7.944831,-4.722995,-2.855270,4.014463],[3.997390,-1.087561,-7.494640,9.125621,-4.555424,-5.265540,-5.265390,-4.513179,-2.094704,-2.204221,-7.421028,-3.545040,-9.707849,-5.911133],[-8.407291,0.813339,8.862344,2.553901,-5.611373,-5.150581,-0.355892,-9.859873,6.460014,-6.407758,7.100889,-4.434167,0.326837,5.195861],[8.996262,-3.238888,-0.165402,6.470805,1.828018,2.557827,-9.931842,-8.722611,-7.762318,2.679544,3.470925,2.388684,-0.341206,-4.631399],[-0.571386,1.410076,-7.811340,-0.614643,6.901645,-4.580136,-8.093862,-2.572324,2.337867,-5.679630,4.622990,4.984423,9.292078,8.949177]],[[-5.374961,3.992832,-4.662847,-5.543431,-1.200508,4.979285,1.494284,1.089079,8.226144,-3.940888,-9.472336,4.803381,-3.472983,1.399806],[5.786493,8.521849,-1.563656,9.674651,7.660871,5.577924,-6.921287,-0.377179,-8.331537,2.394328,4.946374,-8.580157,-1.752847,-1.773788],[-9.561980,-1.503275,-8.674526,6.143428,-1.771526,9.101486,6.502859,-0.918545,0.073134,2.373735,-0.510271,-1.423010,-3.256068,4.160890],[-8.770499,4.340329,4.860357,-0.104143,0.435645,4.151530,-1.895755,4.482799,0.026571,4.104133,-6.563894,7.513817,-9.589647,6.050545],[-7.699314,5.173051,-7.047511,-4.905367,6.741124,9.184480,-7.124522,-7.544823,-9.636363,-5.080643,1.655604,-2.096337,-7.807261,-1.078371],[1.454103,3.087206,2.481924,-3.927336,9.659864,4.803442,-0.855354,1.741784,8.412829,1.716724,-3.110155,-1.261468,-0.552140,9.717101],[-0.165389,2.603187,1.938131,8.413276,5.781931,-5.326441,-0.730766,9.038748,2.200228,-4.201559,2.198505,-4.696515,1.356629,9.544652],[6.316790,2.447192,1.008421,-9.557381,9.182584,8.071535,8.082526,-8.628159,8.943045,-6.749432,-2.369038,-1.898659,9.015864,6.076509],[8.418078,-3.423117,-4.834961,-4.746940,-7.993870,-6.716033,-6.147758,-6.171568,-7.189673,-3.340425,2.502824,-4.791239,3.103788,3.805045],[2.364967,8.915976,0.433016,1.299635,9.174447,0.798197,-8.122348,-9.161102,3.904122,7.053837,2.484031,-0.983969,-7.691466,-5.279363],[1.770443,-4.761629,5.336594,3.437136,3.564664,-4.683036,-7.594054,-0.502487,2.467793,1.940750,-8.148080,-1.872523,-4.754079,-4.166578],[6.356165,-3.571302,-0.966234,7.572626,4.545821,-2.558619,-6.309007,0.816379,3.797845,9.180346,-3.088383,3.063597,9.874782,-9.862311]],[[-1.764488,5.813581,-8.527807,-7.739378,-7.269846,-4.594441,-5.133383,0.428797,6.246986,0.400318,-8.137073,5.490764,-9.814712,1.227858],[0.924124,9.278037,-1.366465,1.244275,7.477365,3.451627,-3.118011,1.880233,3.463699,3.860737,0.699359,3.840603,0.049076,8.585804],[5.154635,-5.677463,-1.661567,3.441787,-9.981634,6.943139,-2.847354,7.922834,-1.849771,-6.827607,5.297413,-4.213103,-5.210891,1.083044],[6.564184,2.884603,3.970481,7.766051,-7.944866,7.298445,7.499915,-2.139814,5.315040,-8.169495,-6.637893,5.193104,-8.564862,-4.097309],[8.625068,4.081570,-6.076164,-6.385540,-0.218137,-6.307127,-6.094313,9.911691,-0.774505,1.884947,5.308620,-7.720485,-9.168351,-4.911793],[4.200360,-4.372997,-7.807966,9.980939,-9.931315,-4.652342,8.563065,3.881065,-1.719489,-1.993971,-8.832980,5.135882,7.471119,2.324344],[2.621301,7.639854,1.887926,-1.375593,8.266826,-6.161360,0.855695,-3.289202,2.861667,-5.888794,-4.234771,5.462024,-2.812103,-5.318112],[-6.709976,-6.932250,6.396485,-1.522725,1.847260,-4.422440,7.894917,-8.747988,-8.383153,3.758655,3.597754,0.392525,-1.928931,-7.150774],[3.848613,6.463383,8.447648,-0.115064,4.735269,3.679162,9.004190,7.081805,-8.542567,7.544766,-0.895880,6.353545,-9.488496,3.734263],[9.111139,7.180156,-9.648019,-7.172256,-1.670620,3.811248,5.954585,-1.896214,-2.846431,5.054828,-0.485909,5.536380,-6.080390,-2.379567],[-2.667936,0.201404,1.498468,-2.913914,3.633266,6.663655,0.566865,8.346792,2.504440,2.140152,4.485952,4.445949,2.405219,-9.366931],[0.664154,-9.195373,-5.230588,6.837531,0.869753,-7.784518,-1.149549,-1.048081,-3.121541,-7.572453,-1.631588,9.780801,3.771263,2.666349]],[[-0.106777,-1.351968,-8.377279,4.062769,-1.535130,-4.367154,-8.167483,0.597142,2.869483,8.241031,2.317223,8.995172,5.519153,-3.324015],[8.610305,-9.966140,9.341772,5.095353,2.569075,0.346237,9.518928,7.588267,-4.398110,-9.825508,8.646972,1.369649,-5.805900,-5.208932],[4.819373,-7.217995,-0.325917,-2.022801,2.971467,3.541308,-7.773076,-7.601374,-3.800516,-5.248226,-7.168754,-9.301145,-7.637848,9.412138],[4.617324,-8.387163,-2.265841,7.108642,4.599920,-7.331245,-0.155141,-8.734663,-7.655657,-0.939864,-2.393635,8.575562,-4.158000,-3.129247],[2.835080,4.606605,8.831499,-3.925226,-7.324920,-3.617901,1.766660,-6.366100,-6.720484,2.487207,5.045020,-5.723253,-6.081364,5.680745],[7.841578,9.541674,9.585982,9.672936,-1.936969,-4.339155,-0.471313,5.585733,6.946707,0.550324,-2.436602,8.999341,-1.842495,6.307523],[4.809468,1.495863,3.097923,-4.655580,1.373209,4.400459,8.273288,-6.105724,0.234672,1.857166,3.743273,-4.671724,0.062014,-9.350838],[5.509296,-6.407229,-7.442999,-3.997731,-7.046972,-2.583188,-6.914618,-6.096185,9.951955,7.286436,-1.496692,1.933650,2.016157,4.033806],[8.193564,3.305009,9.849023,-2.375559,6.330964,7.534160,3.862228,-2.285876,-8.830204,9.877369,4.278221,-1.335461,8.075221,-3.130100],[1.888931,-1.220246,5.376191,-9.615789,7.341534,-3.162685,8.953857,5.059569,1.120104,-1.674278,-1.546897,3.848016,1.684170,2.346629],[7.881554,1.543142,5.813305,-2.851763,0.348279,0.108052,0.439437,-6.229751,-4.371118,1.461985,1.668316,8.871362,6.967480,4.915366],[-4.489486,7.883511,-8.987821,-0.024521,-0.342647,-7.647284,9.682712,8.602127,7.597076,1.342856,7.448175,8.089243,3.271112,-4.068778]],[[0.334235,6.386545,-0.754966,-5.606631,5.672894,-4.558248,6.354893,-1.491391,-9.722902,5.988737,5.928873,8.530829,6.779178,8.459854],[4.647166,2.699979,6.571217,-3.171958,8.489714,9.792086,-9.858988,5.515046,-1.686976,-1.903466,3.679852,9.077438,3.094633,3.146911],[6.718278,7.150922,-2.305329,-8.790177,7.998298,0.176261,5.735217,5.454636,-9.202089,6.788720,-4.679601,4.640859,1.324082,-8.327280],[-1.410678,3.177388,-6.776835,-5.248621,1.013179,9.643959,-3.505206,0.767446,7.476650,3.747459,6.634301,-9.184461,-7.245463,6.140128],[-5.545394,-0.425423,1.337089,0.704491,-9.686987,-4.384964,-9.943595,-0.131092,-9.230443,-5.333500,3.971544,4.452966,-8.083544,-1.887718],[-2.075640,-6.826476,-1.770792,9.156706,-8.869541,0.973640,-0.210091,-0.760302,5.953824,2.068251,-7.971473,8.733162,4.030713,0.774487],[9.860145,8.251290,2.903220,-1.028961,-3.529252,-3.687588,-8.262930,-5.652531,5.788575,6.468754,2.627913,5.536543,-9.282166,8.495129],[3.634383,8.981937,1.305213,-6.835771,-3.382962,-5.591331,-6.196541,5.506603,-5.255692,-6.092730,-6.563409,5.967868,-7.554463,-9.079255],[1.236494,6.842572,-9.029432,5.561999,1.929710,-2.237775,2.289426,-1.417274,6.290457,-6.826128,2.850367,-0.847190,1.277582,-6.746840],[-9.482725,-5.944075,-4.998570,-5.046358,6.789584,-1.756437,-6.304721,-7.752731,4.501781,5.342655,7.588615,2.728628,-0.849622,-8.582645],[4.645650,-6.319672,4.389486,6.452994,-9.753868,-0.038772,-0.011678,-5.091924,-5.596396,-1.347842,5.988267,-1.249837,8.283056,-3.968101],[5.925375,7.366928,3.384681,-7.894952,6.892043,-8.293041,-2.089574,1.019216,-4.246599,4.304744,-2.176705,-4.926982,6.112143,-9.395161]],[[-0.970789,3.337378,-8.426472,-7.569289,-8.698966,-8.963596,2.321050,9.110320,-3.781827,-9.166793,-2.329468,1.677005,8.441453,-0.022904],[-4.694110,9.652532,7.677162,2.236244,-0.162762,5.248577,-8.794172,-0.040210,2.071276,4.205925,-2.809098,-9.916319,9.860975,3.199226],[6.641270,-9.672415,2.407954,9.530033,-6.981811,-8.658959,-3.978158,0.498042,4.833875,-1.801112,1.070978,-6.518713,8.946304,-6.756769],[-2.526789,1.188523,5.273875,-1.286209,-6.135029,-8.391042,-1.819967,4.271483,-8.613549,3.110244,-5.747151,-0.878438,-0.334674,3.934572],[1.579544,-1.160856,9.346966,-1.180644,6.875908,9.787276,-8.004436,-5.437278,-3.171407,8.963232,-2.881638,8.426944,0.488568,-1.229919],[-7.159187,6.834857,2.011437,-6.016732,-2.659825,-7.474577,8.608073,0.733217,5.764954,-6.358186,1.244934,-5.679999,-3.584517,-7.932917],[-5.854605,0.658492,-4.177949,-0.818489,1.861213,-2.699449,3.186856,0.137244,8.427222,-5.399179,0.153507,-7.157626,5.194326,-7.064659],[-4.242437,9.911570,-1.489519,-2.483511,7.568413,-1.891803,1.321237,-7.911055,5.607465,5.402360,-8.866516,9.871429,-5.743342,-5.584994],[2.675420,4.711609,4.985308,-6.136478,-8.484182,-4.766492,5.270494,-9.827329,-0.796125,-2.601969,-1.167066,-1.120735,0.318958,-1.734485],[8.120454,3.966079,-6.946692,3.085816,0.117257,8.438470,-2.988895,-7.871847,-6.613747,-4.418180,9.708852,7.469193,-0.161034,6.269245],[4.461346,8.886543,-0.454396,4.884190,1.968357,4.896925,-9.499671,-0.412676,-0.998234,7.768203,8.979365,3.871161,-3.063423,0.129194],[-8.738891,-7.066734,-0.094292,9.750761,4.876348,4.221540,8.863276,7.893409,1.083350,-9.326025,-9.339383,2.604217,4.154335,4.433269]],[[2.378234,-4.346360,5.065102,2.820224,-0.050208,-9.761959,-2.853904,-0.398937,-0.017749,6.829336,-4.335821,-6.566258,4.987446,-2.450604],[-5.683962,-4.811148,-5.784765,-7.721660,-7.632902,-6.936356,-7.262241,-3.633113,-2.668652,-1.977649,-4.583253,4.912119,0.177088,-2.282720],[4.565720,5.272256,-8.665514,0.824207,-1.173713,-1.115142,6.694057,5.356388,3.041729,-7.653407,-0.371052,5.730882,7.362511,6.960079],[-7.052796,9.301439,2.926899,9.273356,1.415153,-8.276960,-4.511474,-7.334788,7.434195,1.441628,4.222817,9.001676,-7.958893,-7.763280],[9.856455,-1.805439,6.682848,3.028368,-2.768676,-4.756712,5.606486,3.734527,0.643714,5.410855,4.790500,-2.935580,4.313990,0.422514],[-7.692659,2.078135,1.527570,3.411318,9.409071,5.687331,1.850108,2.101332,6.532750,8.578432,-8.491226,3.543719,9.926747,-3.656335],[5.086496,1.643684,-4.309740,2.726709,-4.050568,-1.531432,5.876792,-6.980012,-9.960113,6.852115,-7.554517,-8.119607,-3.914430,4.845845],[8.816671,-7.927582,1.277119,-1.618646,-7.674885,1.273305,-8.822275,-5.785652,-9.563870,3.725962,8.184989,-8.391701,9.734592,-8.205260],[-2.584087,3.560517,-8.380018,0.022247,4.011205,4.543287,4.103346,9.252013,-0.882158,-1.123503,-1.358058,4.001980,-5.273202,9.407400],[8.167404,6.584173,6.576351,0.684292,-8.697052,5.513996,4.263224,9.192417,-0.213287,-3.593611,6.169017,0.781650,-0.148277,9.730919],[-3.506262,-1.589063,-3.079102,7.459270,1.854453,0.875946,3.868314,3.326270,5.665681,-3.125044,2.543617,0.043697,8.129337,-7.153751],[7.118366,-6.045556,5.259287,1.338064,7.784734,1.673035,-2.925467,-6.878588,-3.425109,-5.396085,6.429064,3.362544,2.018934,7.361089]]], dtype = "float32")#candidate|1999|(8, 12, 14)|const|float32
bop_2000 = relay.mod(call_1986.astype('float64'), const_1999.astype('float64')) # shape=(8, 12, 14)
bop_2003 = relay.mod(call_1987.astype('float64'), const_1999.astype('float64')) # shape=(8, 12, 14)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_2010 = relay.TupleGetItem(func_1109_call(), 4)
call_2011 = relay.TupleGetItem(func_1111_call(), 4)
output = relay.Tuple([bop_2000,call_2010,])
output2 = relay.Tuple([bop_2003,call_2011,])
func_2012 = relay.Function([], output)
mod['func_2012'] = func_2012
mod = relay.transform.InferType()(mod)
output = func_2012()
func_2013 = relay.Function([], output)
mutated_mod['func_2013'] = func_2013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2012_call = mod.get_global_var('func_2012')
func_2013_call = mutated_mod.get_global_var('func_2013')
call_2016 = relay.TupleGetItem(func_2012_call(), 1)
call_2017 = relay.TupleGetItem(func_2013_call(), 1)
func_1037_call = mod.get_global_var('func_1037')
func_1039_call = mutated_mod.get_global_var('func_1039')
call_2019 = relay.TupleGetItem(func_1037_call(), 1)
call_2020 = relay.TupleGetItem(func_1039_call(), 1)
bop_2027 = relay.logical_and(call_2016.astype('bool'), call_2019.astype('bool')) # shape=(8, 12, 120)
bop_2030 = relay.logical_and(call_2017.astype('bool'), call_2020.astype('bool')) # shape=(8, 12, 120)
bop_2039 = relay.subtract(call_2019.astype('float64'), bop_2027.astype('float64')) # shape=(8, 12, 120)
bop_2042 = relay.subtract(call_2020.astype('float64'), bop_2030.astype('float64')) # shape=(8, 12, 120)
func_1741_call = mod.get_global_var('func_1741')
func_1744_call = mutated_mod.get_global_var('func_1744')
const_2045 = relay.const([[6,9,-5,2,7,-9,2,-10,8,-10,2,-1,-4,6,-6,4,-2,-5,-1,6,4,4,9,-9,-10,1,4,-4,-10,4,3,-7,2,-3,2,10,5,2,-2,10,-3,-3,-6,-5,7,2,9,6,3,4,-9,9,-2,5,-5,5,9,-3,5,1,7,-6,3,8,1,9,-10,-1,3,-4,4,-6,-7,6,-9,6,10,-4,3,-9,8,2,10,8,-3,2,2,-8,9,1,-3,-5,8,-8,-3,-3,4,-7,-3,8,7,-1,9,6,-7,5,-3,-3,-10,-1,-7,-2,-2,-7,-3,-10,6,9,-3,1,-3,10,-9,-8,5,1,-4,4,3,-10,8,-9,3,8,-5,6,7,8,10,-4,5,-6,10,6,1,2,-8,-2,8,-7,-8,3,-8,1,6,2,3,-2,-5,-6,4,8,8,-3,9,-9,2,6,4,-7,-3,2,4,-8,-10,-9,-2,-6,-6,-5,8,4,8,9,7,2,6,7,8,3,10,4,-9,-10,-1,10,3,-1,-5,-4,-10,-6,10,8,-1,-10,3,2,-8,6,1,1,1,-4,-4,-1,-5,-9,-2,-7,-8,-3,2,-10,10,-10,-2,-5,-2,-1,9,1,1,-1,8,6,-4,6,4,4,4,5,4,-10,8,5,5,1,7,-9,-9,-1,-5,9,-3,-3,9,-2,7,1,1,-1,3,2,-4,-3,7,-8,-10,-2,-9,7,-5,1,1,5,10,-8,-10,3,3,-10,9,-7,-4,2,-5,3,10,-2,-8,2,-5,-2,-5,2,10,-10,-10,10,7,-9,-2,2,8,2,-1,5,7,2,4,-9,7,-5,-8,5,6,-8,8,-10,-4,-4,7,10,9,-5,9,7,-5,5,9,9,-5,6,6,10,8,-4,3,10,-9,7,9,4,-8,9,10,-3,-4,-6,6,-10,-10,-1,8,9,4,-5,-9,9,9,-5,6,4,8,10,-8,8,3,-4,-1,-10,8,10,-6,5,6,6,9,-2,2,10,-2,-9,-10,-8,8,7,-5,3,7,7,-7,7,-5,-2,-3,-8,-5,-10,1,-7,5,-5,3,2,-6,-7,-3,1,-5,6,9,3,-10,8,-10,-10,-9,7,-3,-3,-9,-3,7,2,-1,2,-10,-4,7,-4,7,3,-1,9,9,-2,-6,-3,-1,7,-3,1,-3,6,7,6,-3,1,9,-7,-5,9,8,-4,-6,2,-9,3,-8,-3,-8,-8,-10,-7,8,-9,7,-2,-1,5,-9,-9,9,-2,2,9,-6,4,-5,-7,7,6,6,-10,-6,6,-1,4,6,7,1,1,3,5,6,-1,-8,8,6,-10,-4,-8,9,5,7,-7,-7,8,-2,10,-5,-3,-9,-6,1,-7,-10,10,-8,9,8,-6,4,7,-8,-6,-9,5,-9,4,5,-5,-8,-8,-1,-4,5,-5,5,-7,-2,-6,-1,10,-10,-2,-6,3,3,2,10,-4,-5,4,-5,-3,-3,8,9,-5,-2,5,-3,4,10,1,-2,-5,-8,-9,9,9,-2,-7,7,-10,-9,7,-3,-8,-6,5,8,5,10,-6,-5,-2,-2,-7,-10,-7,2,-1,-6,-2,-1,-10,-6,2,8,-6,3,-1,-6,3,5,-7,4,6,10,-2,-2,10,7,5,-10,-10,10,9,10,-3,1,-6,1,-7,-7,-2,3,-10,-3,-8,7,-7,1,-2,-9,-8,7,7,5,9,-5,4,2,-8,10,-10,-6,-3,-5,10,1,4,3,6,-5,1,-7,-8,8,3,-4,2,-2,-8,9,10,-7,8,6,-7,2,-1,-2,5,6,5,-3,-1,3,1,-9,-2,7,-6,7,-6,-1,5,7,-1,-9,3,5,-8,-7,-10,2,-5,-3,2,6,8,-4,-9,2,3,8,5,4,-2,4,9,6,-7,-7,-1,-8,8,-2,4,-1,-7,-5,-4,10,9,-10,2,-2,-6,-9,-2,6,10,9,3,-2,-10,-5,-7,-10,8,5,-7,10,-6,2,7,-7,7,-2,-7,1,3,-2,10,7,2,-10,8,2,-9,1,-4,3,-6,10,-9,-3,-8,5,6,7,-3,-7,-5,7,5,9,6,-9,-5,8,-1,-8,-5,-6,-4,-9,8,-10,-6,8,-4,-1,7,3,-10,-7,3,9,-10,-10,-5,-3,-8,-7,-1,6,-2,-6,-8,2,-1,8,-6,-5,-9,3,6,9,3,8,3,-9,-2,5,-3,7,-9,1,9,4,-1,-4,-4,-2,-8,-1,8,-7,5,2,10,6,-2,7,-3,1,-9,-2,5,2,-6,-6,4,-7,-5,9,-8,-7,9,2,-4,-5,-6,-7,-3,-6,-1,5,6,-4,-1,-8,-5,-9,-8,6,4,4,10,-4,-10,2,-3,-7,-9,9,6,-6,2,-7,6,2,-7,-1,8,10,6,-9,8,-7,1,-4,-5,7,-6,8,8,-4,-6,3,-10,4,-4,-6,-3,9,1,8,-6,3,-1,-3,-1,-5,-2,5,-1,10,5,10,-9,1,-4,5,-6,-1,-1,6,-1,-3,1,-9,-8,-10,4,-1,10,-4,1,-4,10,-3,-10,-5,10,-8,-5,-5,-7,-5,6,-6,6,-3,-1,-3,2,4,-5,-5,-6,-7,-9,3,7,6,2,2,-4,-6,-1,8,4,-5,2,3,-10,-8,-3,4,-10,3,-2,1,-9,-1,-3,4,-2,6,9,-1,-10,-8,1,-2,2,-3,2,10,-9,2,3,-1,6,-8,-7,-4,7,9,-3,9,8,-10,3,2,3,8,-1,-1,-4,-2,8,-7,5,3,9,-3,-1,7,-5,10,4,-5,6,-4,5,-1,-1,5,6,-5,-9,2,-3,8,10,7,-5,-1,-8,-9,-10,-3,-3,-6,-10,4,9,-1,-6,2,6,-10,-2,10,-3,-3,3,3,-6,-3,-7,-6,-4,1,-6,4,4,3,-2,-6,-1,-9,6,-8,-8,-9,-1,-3,3,-3,-1,-1,2,1,-6,-10,-5,-1,10,3,4,2,8,8,-3,10,-1,-9,6,6,6,-9,6,1,-9,1,8,-9,-3,8,2,-10,-3,-6,8,1,10,4,-7,-10,-9,2,-6,-4,9,-7,-3,4,7,-5,1,-8,3,5,-6,8,7,3,-2,4,-10,-2,1,7,7,-2,7,9,1,9,10,3,9,1,-2,3,-8,-4,-5,7,-2,-8,1,8,3,9,7,9,7,-9,6,2,-9,3,7,5,8,-10,-3,1,8,-9,4,-2,7,2,3,7,8,7,-9,7,-6,-8,-5,-4,3,-1,1,-7,-5,4,-3,-4,-3,8,-3,-3,2,-9,2,-4,-7,1,-8,-8,1,5,-5]], dtype = "uint64")#candidate|2045|(1, 1248)|const|uint64
call_2044 = relay.TupleGetItem(func_1741_call(relay.reshape(const_2045.astype('uint64'), [312, 4]), relay.reshape(const_2045.astype('uint64'), [1248,]), ), 3)
call_2046 = relay.TupleGetItem(func_1744_call(relay.reshape(const_2045.astype('uint64'), [312, 4]), relay.reshape(const_2045.astype('uint64'), [1248,]), ), 3)
output = relay.Tuple([bop_2039,call_2044,const_2045,])
output2 = relay.Tuple([bop_2042,call_2046,const_2045,])
func_2053 = relay.Function([], output)
mod['func_2053'] = func_2053
mod = relay.transform.InferType()(mod)
mutated_mod['func_2053'] = func_2053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2053_call = mutated_mod.get_global_var('func_2053')
call_2054 = func_2053_call()
output = call_2054
func_2055 = relay.Function([], output)
mutated_mod['func_2055'] = func_2055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_391_call = mod.get_global_var('func_391')
func_392_call = mutated_mod.get_global_var('func_392')
call_2099 = func_391_call()
call_2100 = func_391_call()
output = relay.Tuple([call_2099,])
output2 = relay.Tuple([call_2100,])
func_2108 = relay.Function([], output)
mod['func_2108'] = func_2108
mod = relay.transform.InferType()(mod)
output = func_2108()
func_2109 = relay.Function([], output)
mutated_mod['func_2109'] = func_2109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1276_call = mod.get_global_var('func_1276')
func_1278_call = mutated_mod.get_global_var('func_1278')
call_2157 = relay.TupleGetItem(func_1276_call(), 0)
call_2158 = relay.TupleGetItem(func_1278_call(), 0)
func_1832_call = mod.get_global_var('func_1832')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_2159 = relay.TupleGetItem(func_1832_call(), 0)
call_2160 = relay.TupleGetItem(func_1834_call(), 0)
func_481_call = mod.get_global_var('func_481')
func_483_call = mutated_mod.get_global_var('func_483')
call_2164 = relay.TupleGetItem(func_481_call(), 1)
call_2165 = relay.TupleGetItem(func_483_call(), 1)
func_2012_call = mod.get_global_var('func_2012')
func_2013_call = mutated_mod.get_global_var('func_2013')
call_2166 = relay.TupleGetItem(func_2012_call(), 0)
call_2167 = relay.TupleGetItem(func_2013_call(), 0)
uop_2183 = relay.atan(call_2157.astype('float32')) # shape=(1248,)
uop_2185 = relay.atan(call_2158.astype('float32')) # shape=(1248,)
var_2186 = relay.var("var_2186", dtype = "uint64", shape = (1248,))#candidate|2186|(1248,)|var|uint64
bop_2187 = relay.logical_and(call_2157.astype('bool'), relay.reshape(var_2186.astype('bool'), relay.shape_of(call_2157))) # shape=(1248,)
bop_2190 = relay.logical_and(call_2158.astype('bool'), relay.reshape(var_2186.astype('bool'), relay.shape_of(call_2158))) # shape=(1248,)
func_2012_call = mod.get_global_var('func_2012')
func_2013_call = mutated_mod.get_global_var('func_2013')
call_2203 = relay.TupleGetItem(func_2012_call(), 1)
call_2204 = relay.TupleGetItem(func_2013_call(), 1)
output = relay.Tuple([call_2159,call_2164,call_2166,uop_2183,bop_2187,call_2203,])
output2 = relay.Tuple([call_2160,call_2165,call_2167,uop_2185,bop_2190,call_2204,])
func_2210 = relay.Function([var_2186,], output)
mod['func_2210'] = func_2210
mod = relay.transform.InferType()(mod)
mutated_mod['func_2210'] = func_2210
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2211 = relay.var("var_2211", dtype = "uint64", shape = (1248,))#candidate|2211|(1248,)|var|uint64
func_2210_call = mutated_mod.get_global_var('func_2210')
call_2212 = func_2210_call(var_2211)
output = call_2212
func_2213 = relay.Function([var_2211], output)
mutated_mod['func_2213'] = func_2213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_455_call = mod.get_global_var('func_455')
func_457_call = mutated_mod.get_global_var('func_457')
call_2221 = relay.TupleGetItem(func_455_call(), 0)
call_2222 = relay.TupleGetItem(func_457_call(), 0)
output = call_2221
output2 = call_2222
func_2241 = relay.Function([], output)
mod['func_2241'] = func_2241
mod = relay.transform.InferType()(mod)
output = func_2241()
func_2242 = relay.Function([], output)
mutated_mod['func_2242'] = func_2242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_455_call = mod.get_global_var('func_455')
func_457_call = mutated_mod.get_global_var('func_457')
call_2246 = relay.TupleGetItem(func_455_call(), 0)
call_2247 = relay.TupleGetItem(func_457_call(), 0)
output = call_2246
output2 = call_2247
func_2253 = relay.Function([], output)
mod['func_2253'] = func_2253
mod = relay.transform.InferType()(mod)
output = func_2253()
func_2254 = relay.Function([], output)
mutated_mod['func_2254'] = func_2254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_282_call = mod.get_global_var('func_282')
func_283_call = mutated_mod.get_global_var('func_283')
call_2353 = relay.TupleGetItem(func_282_call(), 0)
call_2354 = relay.TupleGetItem(func_283_call(), 0)
func_1351_call = mod.get_global_var('func_1351')
func_1353_call = mutated_mod.get_global_var('func_1353')
var_2360 = relay.var("var_2360", dtype = "float32", shape = (1800,))#candidate|2360|(1800,)|var|float32
call_2359 = relay.TupleGetItem(func_1351_call(relay.reshape(var_2360.astype('float32'), [10, 15, 12])), 1)
call_2361 = relay.TupleGetItem(func_1353_call(relay.reshape(var_2360.astype('float32'), [10, 15, 12])), 1)
func_2241_call = mod.get_global_var('func_2241')
func_2242_call = mutated_mod.get_global_var('func_2242')
call_2367 = func_2241_call()
call_2368 = func_2241_call()
output = relay.Tuple([call_2353,call_2359,var_2360,call_2367,])
output2 = relay.Tuple([call_2354,call_2361,var_2360,call_2368,])
func_2373 = relay.Function([var_2360,], output)
mod['func_2373'] = func_2373
mod = relay.transform.InferType()(mod)
mutated_mod['func_2373'] = func_2373
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2374 = relay.var("var_2374", dtype = "float32", shape = (1800,))#candidate|2374|(1800,)|var|float32
func_2373_call = mutated_mod.get_global_var('func_2373')
call_2375 = func_2373_call(var_2374)
output = call_2375
func_2376 = relay.Function([var_2374], output)
mutated_mod['func_2376'] = func_2376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1606_call = mod.get_global_var('func_1606')
func_1607_call = mutated_mod.get_global_var('func_1607')
call_2402 = relay.TupleGetItem(func_1606_call(), 0)
call_2403 = relay.TupleGetItem(func_1607_call(), 0)
var_2406 = relay.var("var_2406", dtype = "float64", shape = (8, 12, 10))#candidate|2406|(8, 12, 10)|var|float64
bop_2407 = relay.power(call_2402.astype('float64'), var_2406.astype('float64')) # shape=(8, 12, 10)
bop_2410 = relay.power(call_2403.astype('float64'), var_2406.astype('float64')) # shape=(8, 12, 10)
func_2373_call = mod.get_global_var('func_2373')
func_2376_call = mutated_mod.get_global_var('func_2376')
var_2412 = relay.var("var_2412", dtype = "float32", shape = (3, 600))#candidate|2412|(3, 600)|var|float32
call_2411 = relay.TupleGetItem(func_2373_call(relay.reshape(var_2412.astype('float32'), [1800,])), 2)
call_2413 = relay.TupleGetItem(func_2376_call(relay.reshape(var_2412.astype('float32'), [1800,])), 2)
bop_2431 = relay.subtract(call_2411.astype('uint64'), relay.reshape(var_2412.astype('uint64'), relay.shape_of(call_2411))) # shape=(1800,)
bop_2434 = relay.subtract(call_2413.astype('uint64'), relay.reshape(var_2412.astype('uint64'), relay.shape_of(call_2413))) # shape=(1800,)
bop_2435 = relay.right_shift(call_2411.astype('int32'), call_2402.astype('int32')) # shape=(8, 12, 1800)
bop_2438 = relay.right_shift(call_2413.astype('int32'), call_2403.astype('int32')) # shape=(8, 12, 1800)
bop_2439 = relay.not_equal(call_2411.astype('bool'), bop_2435.astype('bool')) # shape=(8, 12, 1800)
bop_2442 = relay.not_equal(call_2413.astype('bool'), bop_2438.astype('bool')) # shape=(8, 12, 1800)
uop_2445 = relay.asin(call_2411.astype('float64')) # shape=(1800,)
uop_2447 = relay.asin(call_2413.astype('float64')) # shape=(1800,)
bop_2454 = relay.logical_or(uop_2445.astype('bool'), bop_2439.astype('bool')) # shape=(8, 12, 1800)
bop_2457 = relay.logical_or(uop_2447.astype('bool'), bop_2442.astype('bool')) # shape=(8, 12, 1800)
output = relay.Tuple([bop_2407,bop_2431,bop_2454,])
output2 = relay.Tuple([bop_2410,bop_2434,bop_2457,])
func_2461 = relay.Function([var_2406,var_2412,], output)
mod['func_2461'] = func_2461
mod = relay.transform.InferType()(mod)
var_2462 = relay.var("var_2462", dtype = "float64", shape = (8, 12, 10))#candidate|2462|(8, 12, 10)|var|float64
var_2463 = relay.var("var_2463", dtype = "float32", shape = (3, 600))#candidate|2463|(3, 600)|var|float32
output = func_2461(var_2462,var_2463,)
func_2464 = relay.Function([var_2462,var_2463,], output)
mutated_mod['func_2464'] = func_2464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1037_call = mod.get_global_var('func_1037')
func_1039_call = mutated_mod.get_global_var('func_1039')
call_2584 = relay.TupleGetItem(func_1037_call(), 0)
call_2585 = relay.TupleGetItem(func_1039_call(), 0)
output = relay.Tuple([call_2584,])
output2 = relay.Tuple([call_2585,])
func_2589 = relay.Function([], output)
mod['func_2589'] = func_2589
mod = relay.transform.InferType()(mod)
output = func_2589()
func_2590 = relay.Function([], output)
mutated_mod['func_2590'] = func_2590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_958_call = mod.get_global_var('func_958')
func_960_call = mutated_mod.get_global_var('func_960')
call_2599 = relay.TupleGetItem(func_958_call(), 0)
call_2600 = relay.TupleGetItem(func_960_call(), 0)
func_531_call = mod.get_global_var('func_531')
func_534_call = mutated_mod.get_global_var('func_534')
call_2614 = relay.TupleGetItem(func_531_call(relay.reshape(call_2599.astype('uint64'), [2, 624])), 1)
call_2615 = relay.TupleGetItem(func_534_call(relay.reshape(call_2599.astype('uint64'), [2, 624])), 1)
func_2053_call = mod.get_global_var('func_2053')
func_2055_call = mutated_mod.get_global_var('func_2055')
call_2622 = relay.TupleGetItem(func_2053_call(), 2)
call_2623 = relay.TupleGetItem(func_2055_call(), 2)
bop_2631 = relay.subtract(call_2622.astype('uint8'), relay.reshape(call_2599.astype('uint8'), relay.shape_of(call_2622))) # shape=(1, 1248)
bop_2634 = relay.subtract(call_2623.astype('uint8'), relay.reshape(call_2600.astype('uint8'), relay.shape_of(call_2623))) # shape=(1, 1248)
output = relay.Tuple([call_2614,bop_2631,])
output2 = relay.Tuple([call_2615,bop_2634,])
func_2635 = relay.Function([], output)
mod['func_2635'] = func_2635
mod = relay.transform.InferType()(mod)
output = func_2635()
func_2636 = relay.Function([], output)
mutated_mod['func_2636'] = func_2636
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2729 = relay.var("var_2729", dtype = "bool", shape = (16, 11, 11))#candidate|2729|(16, 11, 11)|var|bool
var_2730 = relay.var("var_2730", dtype = "bool", shape = (16, 11, 11))#candidate|2730|(16, 11, 11)|var|bool
bop_2731 = relay.logical_and(var_2729.astype('bool'), relay.reshape(var_2730.astype('bool'), relay.shape_of(var_2729))) # shape=(16, 11, 11)
func_644_call = mod.get_global_var('func_644')
func_646_call = mutated_mod.get_global_var('func_646')
const_2738 = relay.const([-1.554876,-6.333105,3.851464,-7.581233,-9.860759,-1.102178,-0.899466,-9.519133,-2.029578,2.336816,-3.289434,7.888850,-5.299085,9.983400,5.053917,0.359571,-1.488969,3.895821,-7.452238,2.433853,3.166974,8.342277,-9.645083,-4.384636,-5.312552,1.453249,-0.422229,-8.902201,4.504741,-8.734398,-2.384658,-4.754686,-3.467873,-7.196047,-3.518192,5.713463,8.010639,8.288762,3.506195,-7.737188,4.319571,-5.448652,-4.033371,9.781487,-6.394910,-7.521712,5.957605,5.282383,7.498263,-6.867017,2.084881,9.516169,-6.444088,1.197032,-4.331762,1.017266,0.518479,5.265746,8.172115,-7.482144,5.840540,-1.400893,2.506649,-9.307586,3.886985,-7.296848,-8.911861,-6.230106,6.102556,-6.750453,6.774171,6.335021,7.482364,7.376857,5.389440,1.229116,-8.433449,-7.788756,4.343027,-5.500714,2.882915,-5.340594,-2.034068,9.701407,-8.740116,4.120107,9.723647,-2.691466,-6.630910,3.899855,2.440337,-9.380823,-1.777785,-2.931579,9.025793,5.802238,5.714263,-4.120822,-7.715734,0.104087,-5.462372,-3.640863,-8.742926,-1.167859,-4.966347,-4.107092,-1.296544,-5.843377,2.948971,3.230534,6.629237,-1.490741,-4.645251,2.286968,-1.785875,1.290760,8.630926,-0.580106,-0.582935,-1.150227,8.213674,6.047088,3.421753,-2.384796,-2.413180,6.183595,-8.266997,-9.322798,1.909135,6.259035,2.361967,-9.854672,6.893661,-0.325831,6.345895,-8.693267,3.342493,3.892747,9.192852,-6.816078,7.875853,-9.851952,9.143851,-0.273496,-8.266575,-3.022140,-4.442593,-5.319101,5.269794,0.622470,-8.662441,0.577048,0.053745,-9.635585,5.536693,-0.866860,4.766507,-3.755972,-4.523323,5.117042,4.154600,-9.316081,-5.075222,7.948234,7.011056,-4.814852,-9.914238,2.325222,-2.065184,7.181903,-1.910267,-2.955716,-2.128234,-8.192702,2.478869,5.202256,6.848462,-4.856563,-6.147136,-5.072969,4.707657,0.585619,-7.852225,4.285033,0.843320,-5.621420,7.931330,1.684620,-1.079076,-5.592918,7.998380,-0.828236,9.871795,-8.482395,-8.305964,8.519012,4.641046,3.698120,4.550486,5.546604,0.581609,5.398023,-8.319321,-1.825969,-8.838115,6.489597,-3.331564,3.452142,-6.160478,-3.179372,-8.033941,-4.685678,-5.311484,4.954273,9.889970,-2.623533,3.413789,6.694603,-2.648288,-2.568918,-0.005500,-6.830037,5.443117,-9.526600,7.414657,-5.908162,-6.467863,-9.435671,-8.177196,-7.058560,-1.573615,1.516321,-4.929357,4.967257,-2.588486,-4.287798,0.915875,-7.581878,-7.357817,8.107945,9.459377,6.291540,-2.282138,-0.526506,2.228036,-1.747270,-7.960826,2.408224,-9.612845,5.016215,-0.116192,8.324997,7.036981,-7.613488,-2.408770,8.573549,5.170754,2.526248,-4.256177,3.593551,8.967262,9.999478,1.291014,-4.268137,-6.573268,-0.451874,9.502359,-0.064775,1.515785,-1.062821,-7.912151,1.250838,-9.112854,-1.896052,1.154957,4.168661,4.817102,-4.419113,6.403015,8.754390,-0.456158,8.712000,9.449757,-8.598326,-1.003171,6.383615,8.003651,0.152884,0.346159,-7.601465,1.382839,5.322604,3.309951,5.812049,1.160385,-8.065250,-7.922867,6.304392,3.760438,5.501895,7.966288,3.320122,2.219339,-7.834777,-8.488555,0.147687,-5.084888,-1.870716,-5.328531,9.116311,-9.835850,-2.126515,1.624820,8.182205,6.575344,-3.476993,1.431096,9.524973,-9.619706,4.660368,1.891487,-7.541857,-0.778449,5.680131,-7.624717,-5.274553,-8.494466,-0.497257,-4.093432,-3.390222,-5.186060,-9.706504,-1.094610,-2.626468,-0.963257,8.889551,5.655882,2.019421,1.313504,-1.739502,2.363601,-6.425493,5.782228,2.213097,-1.585972,-5.427351,4.425815,-8.521469,-8.287679,-8.430611,0.653536,-5.459971,-8.849614,-6.753614,-0.873061,5.682616,4.751624,8.251733,-5.772641,-4.810882,0.308166,8.896117,-0.885481,-2.915652,3.044154,8.346683,8.454253,6.763551,2.432624,0.890202,-7.570148,-7.967531,-3.136737,6.990238,-9.651595,-7.328069,-4.401324,-5.990677,6.820314,2.789183,-1.969891,4.027742,8.240303,0.940890,-8.857066,-9.179096,8.598333,-1.470378,8.222908,0.474693,-4.360866,9.328911,1.360130,3.888765,-7.433745,1.998638,1.399806,-4.692177,0.695991,8.396368,-6.541984,4.206418,-8.505696,-0.649189,4.166687,-9.221796,3.573608,-5.784468,0.834914,6.248030,-4.214828,-1.749775,-6.092914,-5.793518,-0.829444,0.676848,-9.830665,2.955086,3.237375,-5.029656,9.180996,-9.314301,-9.391824,9.370884,-4.187335,8.351501,-2.161739,-1.154477,7.186557,-7.917250,-3.331340,-1.037238,-6.371309,-3.069668,0.167360,-8.437112,1.917064,5.951154,2.898744,1.497906,-6.275847,4.637642,1.972193,3.335826,-0.716851,-1.710154,9.464114,8.626473,-0.553854,4.705071,-8.417004,-7.904893,-5.276705,8.283464,9.740394,7.037393,-8.003095,-3.867573,-9.932511,-8.050560,4.820754,-7.187344,6.663275,5.578873,5.682070,-4.373230,-6.100116,6.999040,-2.821008,9.777384,2.113653,9.542643,6.633106,8.413013,9.305109,-7.910070,5.179146,-7.587225,0.779895,-5.508930,-4.036744,-5.666558,-8.134198,-5.093283,8.607792,-8.033419,-9.430055,-1.039576,2.754348,-5.402021,9.952453,7.276636,0.943785,1.125880,1.745816,3.314869,-9.153363,8.298926,6.495970,-8.686319,5.160139,2.617103,-9.191877,1.039713,-8.928121,9.718451,-8.653785,-4.607175,-9.998119,-4.909176,0.345139,2.197032,-4.496457,-2.840604,-8.828811,-6.643214,6.856689,-8.690263,2.410660,1.691700,7.765099,3.507381,-6.818403,2.725823,4.644370,-7.464213,0.829856,9.040827,-5.949579,4.339221,-3.489896,-2.921200,0.561918,5.396109,-2.135040,-3.972138,1.871198,-0.580512,7.504324,-2.520568,8.970088,-8.976302,3.986737,-4.053196,0.199339,-5.174622,9.664843,-9.357844,2.238095,8.076596,-1.459360,8.506417,8.919863,6.065946,9.313018,-1.278189,6.739116,2.025326,-5.148326,-2.645621,5.760600,8.361558,-2.637311,-1.933052,6.434027,3.190559,1.511635,-6.630139,-7.808153,-7.058472,5.796036,1.788140,8.770949,3.753730,-3.373961,9.020229,8.009566,4.837302,-5.484482,1.028287,6.932682,-8.587651,-6.611725,-9.732106,-1.079889,-3.354285,8.078325,-2.223290,1.712963,-5.664066,-8.456866,0.121929,-9.897490,8.167303,-6.364911,-0.947702,2.104499,8.176600,5.633060,7.976996,-2.630905,-2.787534,4.187462,-2.627048,-8.290149,-3.238407,-1.548728,-8.382937,-4.056964,-0.574217,7.808988,8.976272,8.867709,-5.619881,-9.407437,-0.129615,3.167269,-1.705254,-1.007120,1.649192,7.662152,3.702037,-7.110854,-9.131078,2.438545,8.522833,2.457017,6.244211,3.178722,-7.789035,5.358799,-9.917655,3.891296,3.058708,1.859177,-9.908684,6.806066,7.754165,-7.740977,-2.574549,-3.503682,-0.213833,-4.133617,-2.068582,0.791156,1.691969,4.803400,5.191548,-8.723495,-7.060505,-8.603439,-3.078580,-7.702625,0.297576,7.364793,-2.625688,6.662484,-6.600482,6.557115,-5.120033,8.762562,4.924484,7.077288,4.215097,-9.165692,-2.352152,-4.877218,-4.006374,-1.849000,2.412571,6.036671,7.291538,-2.833895,1.074499,-6.608370,-4.320354,5.977374,-3.066707,1.666041,0.126065,-5.380785,-8.160778,-3.186580,7.646076,-5.000230,1.941226,5.522842,-4.109438,-0.540629,1.487868,7.821308,-9.961238,1.859350,-8.800124,-5.420873,-6.522473,7.753085,5.606674,2.093808,-1.507638,-6.595599,-5.842511,-8.649740,5.537712,-4.378058,9.282437,3.409340,-3.869882,-8.996309,5.222572,-4.847927,8.060492,-1.104101,-7.495942,-5.023492,7.009289,-7.737524,-2.689984,-6.598396,4.330567,-6.490770,8.866555,-6.837308,-4.200648,-8.260551,5.550080,-5.690436,-8.406143,4.572119,-0.063340,2.671940,-6.506534,9.816790,-3.579242,3.875849,-2.845445,-2.313155,4.267527,-1.592099,1.452180,7.251354,6.419873,-6.094993,-6.587061,-8.852448,2.819966,-2.557329,9.767519,-6.705894,0.355622,7.938357,0.238453,8.400104,-7.232660,-4.109823,-6.535760,-9.653957,2.473905,1.707909,6.081477,2.715834,8.773719,-7.716121,8.289039,-1.724982,-2.278688,7.068194,6.244295,-8.406849,-9.393269,-7.305153,-5.580191,-6.060263,6.591998,2.192632,-8.275199,9.527286,-0.984094,-9.291945,-8.535807,1.648114,1.797735,-5.718844,6.466893,-9.517750,5.712519,6.910947,-9.284089,-6.754344,5.933003,-6.136237,-4.982816,-7.129140,0.867802,-3.178727,2.079506,9.210234,-1.872689,-1.797848,-1.145566,9.093678,8.400500,-4.782110,7.196379,8.581382,-1.190498,-9.807269,1.126202,-7.895767,1.781240,-5.991945,-5.479816,8.625467,8.471315,-5.687878,2.374885,6.276140,-7.854425,-0.705842,-6.456256,6.833019,0.418427,3.351436,-8.083541,2.278749,7.356051,-0.086118,9.852335,-3.055914,9.682903,5.465537,0.042526,0.177788,-3.673394,8.513596,0.538441,9.045728,-6.468195,6.637462,-0.604082,-4.188660,-9.020651,0.580562,9.803402,-5.189023,2.021824,3.877905,6.786860,-4.412228,-3.545938,-9.902535,-8.296280,-3.798808,1.594382,9.288961,-9.323659,3.376083,8.457480,2.087518,-8.590854,7.010854,9.718308,-9.946224,-9.666254,-9.815061,-3.542471,-2.553414,-9.045592,1.735836,1.334616,-6.804912,3.170138,-1.190517,-7.876797,5.093220,-7.704200,-2.991824,2.636820,-0.142939,-4.830177,-3.301925,8.905271,8.082523,2.434372,7.091721,-6.302501,-4.485368,1.951227,-5.021438,-1.681534,1.539726,-2.765199,-9.230483,-9.166308,7.028867,8.860993,-5.458036,6.179240,3.531101,-2.124590,9.313350,-9.896394,-7.111101,-9.913373,0.633718,-8.956137,4.693208,1.990996,-1.797107,-9.624336,-3.590180,1.705410,6.430224,-6.373702,2.237225,3.952649,1.558690,8.550676,-9.445567,-7.597811,-8.897872,-4.596872,-7.561780,-6.803544,4.270001,-7.686770,-3.543540,-5.496611,-5.379943,-3.931246,-9.935917,-1.086298,1.953308,9.812421,-0.280391,-8.030358,8.711956,-0.917355,-6.533966,-3.501545,-9.014965,0.054063,1.691447,-5.000145,-4.097779,5.843834,-2.949639,8.310194,9.022809,0.031329,-7.501613,8.595592,-4.052227,9.087994,-3.067787,3.693865,3.863705,5.893276,-9.157478,-9.878002,6.161461,9.154170,-4.901476,1.802648,-6.810889,1.193294,-3.672026,-5.541775,-6.651511,4.219246,8.494482,3.374173,0.032057,5.510563,-7.697855,3.948340,-1.164273,-2.018749,3.235960,-5.936956,-2.373341,-5.480206,-1.836437,-4.122565,3.219415,9.447496,-7.160014,2.836018,-9.159441,1.001885,-9.269188,-4.319106,-3.288125,0.162898,-9.357473,6.400884,6.431964,-6.863996,-5.684943,6.220137,-8.749559,-4.552521,6.762144,6.941245,3.338733,6.327671,4.691786,-3.513938,-9.719709,0.030649,7.752708,4.245845,-8.607902,8.997062,-4.594742,-4.896497,5.442773,3.130288,-8.568675,-2.301252,-8.178140,-7.329999,4.717262,2.104846,-7.918698,2.537560,7.003329,6.152858,-4.616378,-7.677747,2.742996,3.794783,9.348527,5.651467,8.475487,9.035626,7.515166,9.214134,-6.947055,-9.371797,1.662757,2.273779,6.495377,0.401657,8.330479,-2.842814,-8.152679,1.186343,9.779360,-1.115240,9.525295,-4.063264,7.311756,3.234590,-7.334722,-2.555710,1.744963,-0.717495,-4.665332,-4.971966,3.113139,-6.099844,3.888666,6.999495,1.341412,0.072404,-1.141164,1.376644,-9.491687,3.906850,5.351087,-5.371355,7.004323,8.114949,-2.445163,8.917192,-1.525201,-5.110886,-1.647760,-0.099091,5.603050,-9.013441,1.101990,4.073886,-2.855335,-3.769071,-2.112146,3.234723,8.306257,-7.080580,-0.072299,1.982396,1.207610,-9.195710,-4.240466,6.287222,5.247394,7.899791,-6.186948,-3.422982,2.223371,-1.929441,1.190082,-8.827300,-9.396533,2.840486,-8.519043,3.763352,-7.592538,2.192371,6.212655,-0.850049,-3.189135,8.211716,-4.508049,-4.588617,4.371859,0.777457,-1.453293,5.694491,-6.140179,6.044867,-8.582461,8.043293,2.558716,5.535651,8.947859,8.508877,7.386460,-6.163158,-6.851651,2.430208,7.665344,-1.076642,-7.769849,-5.382240,-0.827737,-3.409734,2.908324,4.436083,-7.795355,5.436180,-6.917058,-4.287681,9.371613,4.785286,0.563259,0.431052,-0.007150,-0.345905,-3.344680,2.001701,-9.410415,0.177516,9.281613,-7.858929,8.575064,-4.469694,-1.763977,9.215346,3.968780,2.268483,2.784949,-5.891653,3.098721,1.912925,6.241785,-1.633747,-4.991883,2.842235,3.560270,7.005977,1.530165,-3.815444,-9.061439,-1.523240,5.229785,-1.277762,-7.312919,-3.764683,8.192774,5.988007,-2.701082,0.953865,4.265573,3.142077,-0.717072,8.201221,-6.351912,-8.796042,1.978615,-3.561137,-7.107406,-1.342214,3.757107,-5.592854,-4.624975,-7.523433,-3.484333,1.607603,-2.392029,-8.791828,6.937546,7.190924,6.810080,2.663020,-8.115072,1.942842,-3.129820,7.615090,-0.321845,7.026871,-8.601321,-7.556012,8.154912,-3.603600,-2.853290,-1.949110,9.734070,3.338851,9.577475,8.703307,-4.135848,9.987985,-0.326474,1.427600,-3.344022,3.365584,-5.076518,4.851191,4.642998,4.251517,-9.553308,-8.874365,7.243910,6.959466,-6.656217,-6.470869,1.292733,7.154815,6.031264,5.887949,4.110458,-6.244767,-6.074755,4.548173,1.755437,5.946954,5.063987,4.735990,0.680820,8.426737,-7.369739,-6.752328,5.347037,2.197024,-6.103935,6.486645,-7.427680,4.877845,0.472068,-7.019164,-6.214153,9.939543,3.542689,-9.951412,6.018896,-8.578658,-8.471934,6.488841,7.765705,-4.692903,6.285107,8.788271,1.644599,-0.830526,-6.373379,6.054743,-6.795996,-4.001950,-4.659330,-8.123919,-3.621624,5.511087,-3.895985,4.734620,8.384047,2.053904,0.723455,-2.730043,-3.967065,8.569436,-5.394273,4.508617,8.519454,-4.777239,-4.919828,7.898500,-9.611094,8.470108,-2.232954,-9.573296,-2.364711,-5.738392,-8.091317,-8.192397,-1.344760,7.667088,0.991782,9.811500,-9.012944,-8.460676,5.831054,-6.227630,-3.306839,-4.476871,-7.855463,-4.758887,-3.224259,-3.457101,-1.029448,9.617742,-2.118295,7.003397,0.798398,0.320534,-1.822255,7.744665,4.585236,8.179684,1.305926,-3.927407,-3.837716,0.131348,-1.473338,-4.176290,-6.563374,8.427418,-7.833614,-2.037590,9.979612,-3.099686,4.394400,1.182865,5.033479,-0.475833,-1.854960,-9.329063,-3.719144,-2.323262,7.497693,2.399422,-4.239466,-6.485653,9.105027,9.702001,-9.122704,-6.783221,8.728689,6.830945,0.113510,2.117534,-6.415435,-9.310684,6.737510,5.564621,8.490955,2.833368,7.936112,2.446575,-7.848302,-9.400273,-5.787514,6.102103,-6.686266,-9.931535,-7.983682,-9.853658,6.329985,3.667138,0.299477,2.146125,2.389365,-7.280231,-5.972563,8.321325,-2.459327,-9.327969,3.757768,-8.455359,-6.685445,8.174396,7.554905,4.819816,-9.904266,3.155386,-4.013811,6.420309,8.418931,-8.547984,1.241269,8.269727,5.547514,-3.612022,8.192340,2.559318,0.509232,-0.315219,-4.176174,2.386839,3.823415,-4.334767,9.616122,6.299195,5.792668,-1.914377,-6.705823,4.084104,1.497063,-7.043525,-1.280146,-8.242079,-4.598251,-6.473918,8.707718,5.604269,9.269813,-7.872835,2.721094,4.545151,6.334349,8.797131,4.888459,-0.655022,-3.464878,2.966433,-6.786638,-5.257263,0.551503,7.162250,-2.368042,4.023946,-9.660202,-2.596809,5.100793,-9.442321,-8.773168,-0.272485,-4.806530,-1.403257,2.867949,-9.066132,-7.720329,-5.706327,6.415143,-7.265128,8.158855,8.934978,8.664848,2.766932,-9.890212,3.433048,-1.758631,-8.665684,-7.153667,9.901096,3.814619,2.313898,7.200773,5.220884,4.337435,-5.417663,5.413667,-8.383778,-4.646565,5.785576,-3.315534,3.337799,0.482719,1.752495,-7.931589,3.458331,-2.136918,0.201315,4.400859,2.816938,-1.499345,0.380314,2.578445,-8.448704,4.816351,-9.960279,8.018489,-0.293150,-6.910503,-4.113190,6.498687,-3.017138,4.823372,9.183167,-3.527976,5.089349,-9.476608,-9.848553,8.036707,2.414490,-8.326083,-8.392182,2.040607,-6.444980,-6.182613,9.374940,3.841179,-0.378127,2.230342,7.243164,-2.099750,5.368647,4.059225,-5.179995,-8.439449,1.249947,-4.261032,-0.185981,7.182660,5.212325,-1.574181,3.517283,-4.590728,-5.755627,8.166211,9.678751,-0.854613,-2.668999,-3.305111,-1.468327], dtype = "float32")#candidate|2738|(1536,)|const|float32
call_2737 = relay.TupleGetItem(func_644_call(relay.reshape(const_2738.astype('float32'), [8, 12, 16])), 0)
call_2739 = relay.TupleGetItem(func_646_call(relay.reshape(const_2738.astype('float32'), [8, 12, 16])), 0)
func_1741_call = mod.get_global_var('func_1741')
func_1744_call = mutated_mod.get_global_var('func_1744')
const_2755 = relay.const([[1,10,3,-4,-2,-6,2,8,-6,-2,-3,-10,4,-9,4,-6,-5,-10,10,-3,-4,-7,-9,-6,1,-3,4,-7,-3,-7,-4,-9,3,9,-7,6,-3,6,5,6,4,10,5,8,-6,5,8,-2,5,-4,4,-4,2,-1,-5,-3,-6,-7,-10,9,8,9,7,-8,-3,-7,-4,-5,2,-1,3,-4,-7,-2,-5,-5,6,-10,-5,7,1,-6,6,1,-9,3,-6,-1,-9,2,-3,-5,-4,3,-3,7,4,-1,7,8,-4,-8,-9,7,-1,2,-9,4,-3,-1,5,4,-5,4,7,-10,5,5,-4,-4,1,-10,2,-2,-8,3,4,7,-10,-3,-2,-10,-8,3,-7,-10,10,9,-3,8,7,-9,7,-2,6,8,10,-7,4,2,-6,10,-2,9,-3,7,8,-4,-1,-4,4,8,-9,-2,-6,4,7,-9,6,-4,-7,-10,-8,-10,1,-9,5,8,-2,-8,-5,10,8,-2,-7,3,1,9,-8,-10,4,-3,-5,-4,9,7,2,-7,7,5,10,-10,-1,-10,-9,-7,10,-9,-9,3,-4,-4,-8,-9,4,2,1,-5,-10,-1,-5,-1,6,-9,-4,-5,-5,-5,1,9,-7,9,3,-10,9,4,-10,9,5,-1,2,-5,6,-1,5,4,1,2,7,8,5,-10,-7,9,6,-10,9,-7,-9,-1,8,-8,1,4,-4,-4,6,-2,-10,4,-4,-6,2,-7,10,7,5,7,-7,-4,3,10,1,-2,-4,10,-3,-10,-10,9,-6,9,2,-7,-7,10,10,-1,1,-5,2,-2,2,3,10,3,6,7,-8,-7,-9,6],[6,-4,3,-1,-5,-1,8,8,-3,3,-10,7,9,4,-2,9,10,-6,-3,7,1,-4,9,6,2,1,-2,-2,4,-10,6,8,-3,8,-1,-5,-10,-1,10,9,7,-5,-8,-9,-3,-3,-10,-5,-3,-10,-6,7,3,-5,5,4,3,10,-6,-8,-10,6,-9,-5,-3,-1,10,-7,7,-6,5,2,-1,3,-3,-4,9,-3,2,5,10,6,-5,5,-4,-4,-2,9,9,9,-3,5,5,-2,-5,-6,-4,-7,7,1,-2,2,-1,5,5,4,-1,1,6,-4,-2,-5,3,5,3,-3,1,7,8,-4,10,-2,6,6,9,-2,-10,-7,-9,3,2,-5,3,7,-7,-8,-10,5,-6,-7,-9,-3,-5,4,-7,-6,-4,2,-4,-1,-1,-8,-9,-6,-2,-9,-3,3,-5,4,3,10,2,5,2,-8,4,5,-9,-10,5,3,4,-10,3,2,3,-1,6,2,3,3,6,-5,-9,7,6,4,5,10,7,4,-4,6,3,7,9,-7,8,-1,7,-10,7,-5,-9,2,5,-7,-3,8,-2,3,-7,-8,2,-1,-9,-4,-7,1,-3,4,-1,8,2,1,3,7,4,-4,-7,7,-5,2,-1,-10,8,-4,-2,4,-10,-10,-8,-4,2,-1,10,5,-9,9,-10,6,-2,-6,7,-2,2,2,9,-4,-4,2,-3,1,-3,-3,9,10,4,-8,5,-7,-2,-9,-7,-3,-8,-4,3,-2,-4,-1,6,6,7,-8,2,1,8,-4,-5,-3,4,-3,-3,-5,-1,1,8,-7,9,-9,-3,-4,2,-6,-7,-9,6,-7,-6,7],[-9,-5,8,-1,-7,10,1,-1,-4,-10,-5,1,1,-4,2,-4,-2,9,-1,8,1,8,-4,6,7,10,-7,5,2,-4,-1,-7,-9,4,7,10,2,1,-8,-5,-5,6,7,-7,-1,5,-3,-6,9,4,1,-1,3,-8,-10,-7,9,4,-7,7,6,-1,-4,-1,6,-8,-1,-10,2,-7,-3,7,8,-2,-4,4,-2,-9,1,-1,7,-3,-8,-3,5,3,4,1,-3,8,1,9,6,-10,-10,-3,-8,-5,3,9,8,5,-3,-4,7,-6,-4,2,3,-9,10,-9,-10,7,2,1,-9,2,3,8,9,-8,9,5,1,4,-5,2,-7,1,4,-1,-8,-4,-10,1,-8,-4,-1,10,2,5,-7,5,5,-5,-7,3,9,6,-4,1,-10,-1,-4,2,3,1,4,5,-1,-2,5,2,7,-5,7,-2,-9,-7,-2,-6,8,-6,-5,-6,1,5,-5,2,-6,-2,-1,1,5,-4,9,-3,-9,-3,-2,-3,7,1,-6,4,9,7,10,1,-6,-4,5,3,-10,2,-5,7,4,6,2,-2,-7,3,8,3,-1,2,6,-3,2,-8,-10,-9,-4,2,6,-7,6,-10,-7,2,-2,5,-8,4,-2,6,-9,6,-3,-7,4,-2,7,-9,-7,-2,3,-8,-6,2,-7,9,5,-9,-4,7,-4,10,-3,6,10,-2,7,-4,4,-8,6,9,3,-10,-6,-4,-8,-2,5,-4,9,-6,3,7,7,8,-5,5,-7,-4,3,-3,-4,3,-4,4,2,10,-1,-3,-4,-4,-2,-6,5,9,-10,9,9,5,1,-9,-9,-8],[-5,3,-6,8,-5,6,-6,7,9,-2,-2,-4,-6,5,1,8,-8,5,7,3,-10,1,4,-4,6,3,-2,-10,-7,4,10,-4,-2,-2,4,8,-4,4,6,3,3,-9,-1,3,-4,8,8,2,-2,-8,10,2,6,-4,-3,4,10,-3,10,1,-3,-8,2,1,-4,2,-7,-2,2,5,2,3,3,-3,10,-9,-4,3,6,-1,5,8,10,2,5,-7,-7,9,6,2,-7,-8,7,8,-7,8,4,3,6,-8,-5,8,-7,3,-8,-1,6,-9,-3,10,7,4,-2,9,-4,-10,4,-2,-4,6,2,10,-7,2,-5,-1,-8,8,-4,1,4,1,-9,2,-10,9,6,-9,-8,4,-3,8,10,3,-2,5,4,-7,9,-8,8,8,-7,-8,7,-8,6,2,-3,1,-9,-5,-10,-8,4,7,-5,7,-1,-9,-4,1,-5,6,-7,-5,-5,1,-5,-6,7,10,-8,6,-9,-2,-1,4,3,6,-9,8,3,1,8,-6,9,-9,-10,-10,9,5,2,-8,9,7,-6,4,-4,-7,2,-9,7,2,2,-10,4,3,-3,3,6,4,6,-1,-4,-5,2,-7,-2,10,-1,-7,4,-10,-4,2,4,-3,-5,5,5,-6,-3,-9,4,-9,8,9,-9,-10,4,2,-8,-2,-9,10,4,2,1,-2,-9,-7,10,-10,4,9,-3,-8,6,-4,7,-1,-2,-10,-4,-5,5,1,-7,-4,4,1,-4,8,10,-7,6,8,2,-10,-10,9,-6,-3,-5,5,10,-7,-4,-8,-7,-1,-4,-2,7,-1,6,2,-2,2,-2,7]], dtype = "uint64")#candidate|2755|(4, 312)|const|uint64
call_2754 = relay.TupleGetItem(func_1741_call(relay.reshape(const_2755.astype('uint64'), [312, 4]), relay.reshape(const_2755.astype('uint64'), [1248,]), ), 7)
call_2756 = relay.TupleGetItem(func_1744_call(relay.reshape(const_2755.astype('uint64'), [312, 4]), relay.reshape(const_2755.astype('uint64'), [1248,]), ), 7)
output = relay.Tuple([bop_2731,call_2737,const_2738,call_2754,const_2755,])
output2 = relay.Tuple([bop_2731,call_2739,const_2738,call_2756,const_2755,])
func_2780 = relay.Function([var_2729,var_2730,], output)
mod['func_2780'] = func_2780
mod = relay.transform.InferType()(mod)
mutated_mod['func_2780'] = func_2780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2780_call = mutated_mod.get_global_var('func_2780')
var_2782 = relay.var("var_2782", dtype = "bool", shape = (16, 11, 11))#candidate|2782|(16, 11, 11)|var|bool
var_2783 = relay.var("var_2783", dtype = "bool", shape = (16, 11, 11))#candidate|2783|(16, 11, 11)|var|bool
call_2781 = func_2780_call(var_2782,var_2783,)
output = call_2781
func_2784 = relay.Function([var_2782,var_2783,], output)
mutated_mod['func_2784'] = func_2784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_481_call = mod.get_global_var('func_481')
func_483_call = mutated_mod.get_global_var('func_483')
call_2786 = relay.TupleGetItem(func_481_call(), 1)
call_2787 = relay.TupleGetItem(func_483_call(), 1)
output = call_2786
output2 = call_2787
func_2788 = relay.Function([], output)
mod['func_2788'] = func_2788
mod = relay.transform.InferType()(mod)
output = func_2788()
func_2789 = relay.Function([], output)
mutated_mod['func_2789'] = func_2789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_2801 = relay.TupleGetItem(func_1109_call(), 4)
call_2802 = relay.TupleGetItem(func_1111_call(), 4)
func_1037_call = mod.get_global_var('func_1037')
func_1039_call = mutated_mod.get_global_var('func_1039')
call_2818 = relay.TupleGetItem(func_1037_call(), 1)
call_2819 = relay.TupleGetItem(func_1039_call(), 1)
output = relay.Tuple([call_2801,call_2818,])
output2 = relay.Tuple([call_2802,call_2819,])
func_2829 = relay.Function([], output)
mod['func_2829'] = func_2829
mod = relay.transform.InferType()(mod)
mutated_mod['func_2829'] = func_2829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2829_call = mutated_mod.get_global_var('func_2829')
call_2830 = func_2829_call()
output = call_2830
func_2831 = relay.Function([], output)
mutated_mod['func_2831'] = func_2831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_892_call = mod.get_global_var('func_892')
func_893_call = mutated_mod.get_global_var('func_893')
call_2832 = func_892_call()
call_2833 = func_892_call()
func_1208_call = mod.get_global_var('func_1208')
func_1209_call = mutated_mod.get_global_var('func_1209')
call_2845 = func_1208_call()
call_2846 = func_1208_call()
var_2856 = relay.var("var_2856", dtype = "float32", shape = (8, 12, 11))#candidate|2856|(8, 12, 11)|var|float32
bop_2857 = relay.floor_divide(call_2845.astype('float64'), var_2856.astype('float64')) # shape=(8, 12, 11)
bop_2860 = relay.floor_divide(call_2846.astype('float64'), var_2856.astype('float64')) # shape=(8, 12, 11)
output = relay.Tuple([call_2832,bop_2857,])
output2 = relay.Tuple([call_2833,bop_2860,])
func_2861 = relay.Function([var_2856,], output)
mod['func_2861'] = func_2861
mod = relay.transform.InferType()(mod)
var_2862 = relay.var("var_2862", dtype = "float32", shape = (8, 12, 11))#candidate|2862|(8, 12, 11)|var|float32
output = func_2861(var_2862)
func_2863 = relay.Function([var_2862], output)
mutated_mod['func_2863'] = func_2863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2589_call = mod.get_global_var('func_2589')
func_2590_call = mutated_mod.get_global_var('func_2590')
call_2871 = relay.TupleGetItem(func_2589_call(), 0)
call_2872 = relay.TupleGetItem(func_2590_call(), 0)
func_2780_call = mod.get_global_var('func_2780')
func_2784_call = mutated_mod.get_global_var('func_2784')
var_2877 = relay.var("var_2877", dtype = "bool", shape = (4, 484))#candidate|2877|(4, 484)|var|bool
call_2876 = relay.TupleGetItem(func_2780_call(relay.reshape(var_2877.astype('bool'), [16, 11, 11]), relay.reshape(var_2877.astype('bool'), [16, 11, 11]), ), 3)
call_2878 = relay.TupleGetItem(func_2784_call(relay.reshape(var_2877.astype('bool'), [16, 11, 11]), relay.reshape(var_2877.astype('bool'), [16, 11, 11]), ), 3)
uop_2879 = relay.tan(call_2871.astype('float32')) # shape=(8, 12, 1)
uop_2881 = relay.tan(call_2872.astype('float32')) # shape=(8, 12, 1)
func_2053_call = mod.get_global_var('func_2053')
func_2055_call = mutated_mod.get_global_var('func_2055')
call_2882 = relay.TupleGetItem(func_2053_call(), 1)
call_2883 = relay.TupleGetItem(func_2055_call(), 1)
output = relay.Tuple([call_2876,var_2877,uop_2879,call_2882,])
output2 = relay.Tuple([call_2878,var_2877,uop_2881,call_2883,])
func_2890 = relay.Function([var_2877,], output)
mod['func_2890'] = func_2890
mod = relay.transform.InferType()(mod)
var_2891 = relay.var("var_2891", dtype = "bool", shape = (4, 484))#candidate|2891|(4, 484)|var|bool
output = func_2890(var_2891)
func_2892 = relay.Function([var_2891], output)
mutated_mod['func_2892'] = func_2892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_481_call = mod.get_global_var('func_481')
func_483_call = mutated_mod.get_global_var('func_483')
call_2896 = relay.TupleGetItem(func_481_call(), 0)
call_2897 = relay.TupleGetItem(func_483_call(), 0)
func_2589_call = mod.get_global_var('func_2589')
func_2590_call = mutated_mod.get_global_var('func_2590')
call_2899 = relay.TupleGetItem(func_2589_call(), 0)
call_2900 = relay.TupleGetItem(func_2590_call(), 0)
const_2904 = relay.const([[[5.194634,8.767814,-5.208652,-3.513706,1.661845,-0.341369,-1.983274,1.469765,0.084199,-3.860357,-3.790229],[-4.759649,-0.653425,-6.475962,-5.816113,-3.089319,7.350238,9.229010,-5.214296,5.335052,-9.494075,-8.898274],[-4.049676,-3.413196,9.561608,0.929106,5.626391,-0.723957,-1.755958,9.235146,-1.495122,-7.904791,3.538094],[-1.292248,-3.099319,7.107477,4.191972,4.551385,0.155701,5.567336,0.947641,4.437817,7.305139,-8.522209],[-1.114553,-0.529130,4.265459,-3.091771,-5.586159,6.668882,-7.803775,-0.612161,-7.538098,1.305070,5.507690],[-6.682071,7.056921,5.530326,1.453218,-5.351183,8.527411,2.546027,4.323217,2.417723,-8.851273,-6.294040],[4.473050,-7.862737,5.162124,-1.119643,4.826102,4.098744,-1.857242,8.836279,-1.393200,9.265374,-7.731971],[4.341704,-9.937310,6.487607,2.988831,4.300808,-2.019504,-4.993567,5.541170,-3.670071,-0.077354,4.399840],[-4.343013,-9.980374,-1.708237,-0.548598,-0.205225,-8.409549,-0.127000,3.364030,-1.135482,3.580644,7.374332],[-6.602326,-2.832263,5.285490,-6.819493,9.900342,7.140973,9.985042,7.481891,-3.022023,6.955844,-7.284221],[-9.871608,1.972086,-0.544470,-8.879170,6.188364,-2.765258,0.571549,-0.590107,-8.532860,0.870475,3.984499],[7.039123,-0.257498,3.393170,-4.131754,-8.217731,0.365242,1.959709,-1.144264,6.851139,-7.889345,8.016062]],[[4.272268,4.895065,9.446932,3.886040,-7.068297,2.725762,-9.275429,-5.883590,-5.970074,-1.450268,0.547780],[4.158407,5.109978,8.579686,-9.546025,2.146101,-8.286904,3.150262,2.832990,-8.060324,0.175944,9.572766],[-9.837850,-7.716139,-5.197921,6.131794,7.669410,9.102193,9.608924,-5.498338,8.747695,-9.352638,4.608882],[9.455630,-2.662403,-7.294140,1.361978,-4.238204,1.211833,-1.931701,6.662593,7.565818,-3.681014,2.426597],[1.984700,3.979197,4.791595,-5.042829,3.076329,-2.134262,-3.912726,0.162021,-1.396998,5.064892,-9.762795],[8.715154,9.110548,-1.864195,4.699747,-4.911876,-2.087102,9.898050,0.595779,-6.638524,7.070837,-4.417675],[7.213170,7.724887,5.940132,7.745037,-8.398690,0.516146,-3.223814,3.525813,6.982375,-0.596997,6.049799],[-3.235511,-3.555530,8.995469,7.122409,9.668050,4.565155,-2.063401,7.738463,-8.291313,-1.965141,-1.547132],[-8.958130,-7.383307,9.046167,6.835544,-0.814792,3.316680,-9.370310,-9.155996,-1.199102,-3.095719,-5.254180],[8.849734,-6.198233,3.796063,0.320141,5.242554,6.879535,-2.484710,3.547743,1.480793,9.662595,-0.443216],[1.953291,6.419103,-7.791259,4.379177,-9.038357,-5.077386,-0.113009,6.623347,9.441091,9.903914,-7.046560],[5.850190,5.510332,6.985880,6.017638,-9.641715,-1.264788,2.388108,0.629618,8.294616,2.876228,8.698505]],[[4.120944,7.068334,0.042000,5.380512,-4.719881,3.189241,5.934300,-8.355787,-2.230339,1.922693,-3.261371],[6.180855,0.219236,4.642268,0.548825,-9.358630,9.596785,9.854934,8.205761,-1.224025,-1.975820,3.090804],[-3.177858,-8.803803,9.159223,8.810793,-4.607535,0.590080,9.251305,-2.477533,2.521345,8.451288,7.716618],[-1.594669,7.712359,-1.057483,-7.707179,9.252305,-8.966144,-4.379976,0.841124,6.335570,-9.044435,5.096492],[-6.203882,-5.413150,7.811283,-4.323923,9.558980,4.008511,-3.966859,-9.515557,9.210611,6.633208,9.706114],[0.081087,-1.704466,4.886546,-6.772450,-8.008543,-8.329057,-9.644867,8.318186,-8.839947,0.109025,7.278693],[-9.989934,8.492543,-0.532093,6.640865,-5.785214,-7.246364,1.692086,2.824865,1.607107,-3.531304,9.050262],[8.042410,-1.226364,1.193569,4.988109,5.850014,-2.046089,4.245661,8.520009,-8.068040,-2.419961,-4.137285],[-4.729909,1.617699,-0.576345,-3.319548,-8.748993,-4.861149,8.167707,0.375367,-1.823505,-5.458745,3.120863],[5.332078,-5.350796,-1.022740,0.691768,9.306662,-1.703934,5.058227,-2.730724,-8.486507,4.988496,7.656496],[-7.776962,3.487715,3.145116,6.358242,0.251273,-4.348242,8.922566,-5.647656,2.241446,-0.971597,-6.072355],[-4.980304,7.492726,-0.186923,0.417478,-9.513980,-3.158132,9.927615,4.369661,-0.381224,9.781206,0.420642]],[[9.954129,6.957113,0.147998,-8.844807,7.448124,-7.741713,-0.598619,4.366749,5.513665,0.630001,6.064103],[2.821865,-9.587065,-3.128319,-5.761433,-9.223623,7.394028,3.999644,6.808567,5.107096,-7.054999,-3.217937],[-3.671810,1.073035,6.902848,3.035968,5.293715,5.325409,-4.259450,6.700672,1.279794,-1.990346,-5.655126],[4.599189,5.884516,-6.706680,7.109799,-7.666060,6.248198,4.561812,3.471380,5.265876,3.749474,-8.760447],[-2.713599,5.766951,1.275977,7.128366,9.785381,1.706935,0.348473,-1.174682,-7.957568,-2.208368,-0.826666],[-4.581766,-1.604309,-4.553849,5.485210,9.528651,4.176048,4.408554,-9.216373,-5.547855,-6.876886,-8.945716],[7.449590,-8.621947,-2.689810,7.396034,-1.057285,-6.033496,-0.639187,-3.182870,8.627524,2.229149,-4.764516],[4.799559,5.179716,-4.976744,9.446253,3.924059,-5.248677,3.265087,-2.317696,0.235249,-2.664491,6.430369],[7.270496,-7.529027,0.065240,9.297339,7.122574,-0.528567,-5.456911,-5.454818,-9.694963,-2.348010,6.343476],[0.263787,8.343954,-3.926575,-2.912512,-4.121471,7.715519,-7.024337,-0.392479,2.078284,-8.210739,7.576589],[-5.960336,-1.028844,7.475824,2.302241,-1.325591,2.375578,-0.582225,-4.671175,5.046466,-2.371889,5.083862],[-4.784999,-8.387888,4.467952,3.649247,6.621031,-2.527888,-1.975564,-6.729872,-7.770910,-0.182034,-7.652747]],[[2.018535,7.818885,2.194550,-9.950309,-4.670125,5.506971,-7.169387,9.530140,5.115096,6.488879,5.143238],[2.166035,-8.460718,-9.329500,8.329563,8.999421,3.065561,-3.476491,-9.061383,-7.281955,7.848858,2.840662],[-2.562196,4.404910,8.116143,-5.373452,9.434438,-2.965892,4.303126,-5.300213,-4.248202,-9.366209,0.537520],[-2.538055,3.253722,-4.208856,-4.896391,-3.151707,6.014617,-7.471152,-4.159806,6.335070,5.942443,4.675522],[-9.674683,3.577127,8.157209,0.506270,-4.385514,-9.748189,-6.260178,-6.552550,-9.927744,7.854748,7.598468],[-7.065604,-2.691909,5.766808,-1.539216,6.640982,-1.532214,3.066344,-5.046567,-8.149371,-2.477687,-2.597587],[-6.002823,-6.507873,3.411524,-9.819729,9.260434,-5.643741,-1.423616,8.544532,0.348143,2.258689,-7.697215],[3.855248,6.571023,8.755026,9.374311,-3.617002,7.360011,-6.792272,6.389219,6.597626,-2.695477,-0.875914],[5.921511,0.447023,-9.844579,-1.820124,1.936850,6.667085,-3.539976,-7.340323,-7.241201,2.077858,2.573575],[-3.397444,-9.462013,-0.234922,-7.670445,7.693541,-7.661446,-2.381022,5.248958,1.072205,-1.226592,-7.759298],[-8.895243,-8.166760,0.777925,-2.522629,-0.492025,4.271360,-8.619552,3.874660,4.378160,-9.898402,6.885114],[-7.081743,4.351312,2.632397,4.655042,-2.668407,-4.406180,-2.953107,-7.837138,7.021590,-4.269494,0.894593]],[[-6.060742,8.927661,9.364123,4.323181,-4.391361,-7.274285,-5.496508,2.640367,8.015510,5.372114,5.918669],[6.669652,-7.425409,-1.523113,-2.958918,7.207486,-6.224280,-7.165950,-3.611328,-6.528681,9.622216,-5.177438],[-7.758918,0.255793,-8.632509,4.726952,4.338950,5.316891,1.956165,-9.098739,-9.982895,-6.041579,-2.349690],[-5.716756,6.798988,3.778929,2.345897,-3.550600,5.556495,0.392036,-5.621826,7.635147,-3.009183,5.915601],[-0.888215,9.399888,6.326041,2.591983,-9.944841,-8.516556,-8.065288,-4.108795,3.780363,7.270518,2.131000],[-9.172781,-0.130550,9.829300,4.886893,-9.447909,-0.404692,-0.213550,-7.233765,0.449014,3.765888,-4.691161],[4.022686,-0.960322,9.280745,3.988358,-3.546201,-3.590158,-4.476203,5.295718,-6.478369,4.757879,5.659377],[-0.277341,-3.543677,-0.551455,6.302944,7.059987,-1.339690,6.772801,-1.208130,-9.766058,7.041613,0.293210],[-5.814867,4.491876,-8.804173,3.434362,-6.392138,5.291023,7.262723,-3.094863,-5.589882,5.213702,2.917120],[-7.919626,3.275340,6.484058,1.949338,-5.186529,5.173929,-8.125926,7.809839,-1.032133,8.437455,-0.752610],[8.519671,8.343624,-9.039850,-5.853300,-6.030306,4.877801,7.195812,-7.512015,1.670465,-9.909107,-4.881692],[2.582137,-7.380732,9.562937,3.918097,-1.941808,-1.812983,3.373487,-5.272857,0.384390,-1.388163,8.553948]],[[1.864629,8.153772,-3.316432,9.215114,-3.341923,-1.419356,-4.793340,5.041552,9.887285,5.230475,4.133149],[8.725939,-3.768780,-0.445208,5.098532,1.166239,0.726550,-5.575258,-0.024508,-9.800371,-7.270406,-7.365941],[-8.205166,-9.377286,9.919054,-5.013683,-8.370456,9.592687,-0.752698,-2.566253,0.561288,-4.700600,-7.108379],[-1.359945,-7.021861,2.365819,-1.268895,-7.293683,5.827844,-7.315462,-0.145696,-1.043217,-4.489597,8.648871],[9.665288,9.319330,7.795836,-7.457925,-6.031383,7.171655,1.742713,3.801471,-3.865187,6.552025,-3.501921],[-6.575155,-4.841984,-9.542328,-2.165077,0.255938,7.948409,-2.131532,-6.186471,-2.726387,-0.666675,6.705212],[-9.215167,6.522122,-9.717149,9.806478,-2.471182,3.883908,-7.254628,-8.302691,-6.335163,-3.970135,-8.427674],[-4.643116,8.198561,5.764546,-6.967755,-1.923093,8.772114,9.073863,-0.925806,-0.938932,6.820456,2.300702],[7.581218,-2.752022,0.201156,8.035063,-1.280771,-5.184750,-7.987798,2.754610,-0.793665,-0.385912,2.341124],[-2.534877,-4.449731,-5.782949,-0.936323,7.793637,3.831458,4.751153,-2.101533,-6.860366,2.705789,6.507657],[-3.015315,-9.330427,-7.058985,-2.207920,2.392234,8.829098,-8.161215,3.558129,0.216331,-7.141897,-9.718371],[8.675042,6.856922,3.081848,-7.512577,-6.969916,9.231827,5.719593,2.777110,9.257012,-6.598622,-0.524431]],[[8.134447,-9.362506,-6.562896,2.270964,-0.948080,-7.394470,3.335307,-3.041380,-4.980988,-1.915553,-1.750437],[5.957801,-3.877375,-8.254642,6.934623,1.777867,-8.852917,9.011844,-1.666992,7.518359,2.560124,-5.843347],[-6.311956,-7.439247,-5.077557,-4.472693,-4.319504,-8.809018,9.903124,-5.016794,-7.142920,8.298113,0.571224],[4.361371,1.658389,-4.203642,-1.624216,1.756926,-9.258040,4.843953,9.436951,4.628304,5.030784,-7.805955],[-3.593819,2.316416,-2.143661,2.500465,2.627898,2.407319,1.733530,4.729663,0.625449,-1.724889,-0.426692],[-8.205968,-6.508845,-0.147284,1.549058,-8.929028,5.544677,-6.141398,-5.759005,8.572577,8.040811,-8.616776],[-7.276554,-2.078206,6.788543,3.483827,4.406449,9.505542,6.932463,5.608275,-7.066729,-3.265810,-8.727571],[5.702176,-2.210666,-4.560964,8.548493,8.163305,0.412647,4.395516,-3.405274,-9.884279,-1.620107,7.069809],[8.859373,7.086065,-3.948110,7.714367,-5.750524,6.712586,5.866269,-6.914042,5.609170,5.986405,-2.126307],[2.193674,2.942182,-6.175138,8.395581,-2.982903,-2.313643,-4.420860,5.376835,1.503891,-7.746058,4.887472],[1.965449,-1.906218,7.479233,1.074733,0.787035,-9.502441,-0.431790,-1.269823,7.606181,5.671315,-0.667956],[-8.651146,1.685370,-8.453015,6.836845,-2.286409,2.918215,3.111340,-8.411103,-5.822012,1.159617,-0.090127]]], dtype = "float64")#candidate|2904|(8, 12, 11)|const|float64
bop_2905 = relay.less_equal(call_2899.astype('bool'), const_2904.astype('bool')) # shape=(8, 12, 11)
bop_2908 = relay.less_equal(call_2900.astype('bool'), const_2904.astype('bool')) # shape=(8, 12, 11)
func_2108_call = mod.get_global_var('func_2108')
func_2109_call = mutated_mod.get_global_var('func_2109')
call_2926 = relay.TupleGetItem(func_2108_call(), 0)
call_2927 = relay.TupleGetItem(func_2109_call(), 0)
var_2930 = relay.var("var_2930", dtype = "float32", shape = (8, 12, 9))#candidate|2930|(8, 12, 9)|var|float32
bop_2931 = relay.less_equal(call_2896.astype('bool'), var_2930.astype('bool')) # shape=(8, 12, 9)
bop_2934 = relay.less_equal(call_2897.astype('bool'), var_2930.astype('bool')) # shape=(8, 12, 9)
output = relay.Tuple([bop_2905,call_2926,bop_2931,])
output2 = relay.Tuple([bop_2908,call_2927,bop_2934,])
func_2953 = relay.Function([var_2930,], output)
mod['func_2953'] = func_2953
mod = relay.transform.InferType()(mod)
mutated_mod['func_2953'] = func_2953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2954 = relay.var("var_2954", dtype = "float32", shape = (8, 12, 9))#candidate|2954|(8, 12, 9)|var|float32
func_2953_call = mutated_mod.get_global_var('func_2953')
call_2955 = func_2953_call(var_2954)
output = call_2955
func_2956 = relay.Function([var_2954], output)
mutated_mod['func_2956'] = func_2956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2967 = relay.var("var_2967", dtype = "int32", shape = (7, 8, 9))#candidate|2967|(7, 8, 9)|var|int32
var_2968 = relay.var("var_2968", dtype = "int32", shape = (7, 8, 9))#candidate|2968|(7, 8, 9)|var|int32
bop_2969 = relay.bitwise_or(var_2967.astype('int32'), relay.reshape(var_2968.astype('int32'), relay.shape_of(var_2967))) # shape=(7, 8, 9)
bop_2974 = relay.logical_and(var_2967.astype('bool'), relay.reshape(bop_2969.astype('bool'), relay.shape_of(var_2967))) # shape=(7, 8, 9)
func_2861_call = mod.get_global_var('func_2861')
func_2863_call = mutated_mod.get_global_var('func_2863')
const_2984 = relay.const([-2.968836,8.011766,-6.703746,-4.633043,0.688863,4.760986,2.317627,-1.687957,6.111801,-8.914287,-5.513584,5.915744,7.102105,-1.452564,-1.448394,-6.802852,-4.016145,-6.921980,8.433594,7.209414,9.183197,-2.683022,7.177878,3.332254,8.745080,1.644920,-1.040515,-2.621497,-3.991715,8.716165,6.985807,1.655149,4.537411,-1.291880,-0.877250,6.391952,8.996102,6.908934,-4.752109,1.985477,-4.237694,7.233881,-1.545783,-1.081195,5.979190,2.784513,3.190359,-3.457161,-5.142933,-1.778337,-6.089254,-9.838560,1.017870,-7.891120,4.683352,3.018077,7.162395,-5.706581,-4.636322,-3.438065,-8.663450,5.187324,-8.992198,-0.194740,-4.868933,6.285277,-9.830252,-4.352021,4.396226,5.264811,6.436958,-1.509070,-4.639627,-4.701837,0.451887,-8.465363,-7.431644,-6.439309,6.323213,6.306527,4.642489,-8.186134,-5.837854,3.632349,7.091754,-2.963561,9.817526,2.903358,-9.324737,-6.342337,-1.931568,3.165101,-2.480655,2.933221,3.822256,-7.375249,-9.306777,-4.950339,4.868897,-5.601812,9.837687,5.526121,-9.237967,-5.662935,-0.085617,-0.134569,3.190141,6.323938,1.201747,3.399502,8.914439,3.462935,-8.282978,2.508021,6.722666,-2.074363,-3.963610,7.339562,3.975730,8.608655,0.948822,-1.987370,-5.496028,-3.617935,2.692349,-1.444322,0.378556,-4.176341,3.541211,-0.272181,5.066848,7.385521,-1.253542,-9.401295,-9.502981,-1.163764,-7.725125,-4.051573,-3.305312,-2.781969,-4.217075,7.952440,3.368535,5.294916,5.600745,1.652824,1.529965,-5.637226,-8.552157,9.390744,6.245557,-7.800126,-9.577878,-3.343042,5.448326,-6.856566,5.771579,-8.636124,1.781970,9.001342,1.586112,-1.479921,-0.756058,-1.354907,7.679212,6.022480,5.823037,-0.624035,5.646555,3.090569,-4.202381,-0.106123,5.825392,-3.842615,5.948109,2.487443,-4.441053,2.481098,-0.787357,2.465072,9.754771,-7.874788,-3.640996,-7.893197,3.949020,6.623583,-4.374224,8.717687,-6.837821,-3.749074,-2.372024,-7.736263,1.371131,4.304385,2.642228,-9.538735,1.546880,-5.486804,4.584266,7.049021,-0.150224,-9.036220,4.543906,-2.740391,4.258615,1.732216,-4.131415,0.177827,0.141099,2.586031,3.100637,0.566597,0.284223,0.090249,-4.956529,5.319368,6.731518,3.893477,-8.474303,-8.632223,0.615734,5.073124,9.653184,7.645524,1.837260,0.820643,-0.992003,3.779045,-6.559172,5.574171,-1.197698,9.746691,-7.570661,-2.428674,-4.755747,4.063923,-1.843955,2.213261,6.093323,-2.155774,-7.337946,1.744599,-2.128640,-9.421248,0.452015,0.229975,-1.353163,1.199241,-7.429350,0.662772,-0.896273,-5.951175,3.033985,-5.079915,-4.177135,6.165465,2.751584,-4.567310,-2.798924,-8.184679,-7.470568,3.200410,7.955867,9.260548,-5.708604,-1.918972,5.309967,6.812753,3.820425,8.629926,-4.850309,-8.108875,-7.139527,7.896798,3.395772,-4.301765,4.439402,-3.617640,7.005303,-6.783317,2.309348,-1.907223,5.724102,2.376936,-2.032894,9.361940,-5.319859,-6.984970,-7.294910,6.852074,1.002854,9.776163,9.902595,9.627676,6.619929,-1.386641,7.688249,-9.468189,-6.706426,2.585592,-6.734447,6.086087,-3.639751,4.715357,0.019413,-6.920166,9.163878,1.828123,8.773073,2.174085,7.679582,5.963272,-0.523403,0.085730,-0.637966,3.926646,3.829576,5.870253,-6.860830,-5.338515,1.107608,4.972948,-6.172510,1.785438,4.238549,9.659310,-3.704235,1.516188,-1.156431,9.588992,0.101241,4.991092,9.650675,-9.524726,-7.288401,8.761062,9.523761,-4.787883,6.485806,-2.946885,-6.548509,7.371749,-0.639171,6.064568,-4.607943,0.203901,-1.199842,-3.373771,7.596894,0.773856,-8.779044,3.333827,2.840921,8.466202,7.805265,-5.028674,6.431391,-4.556402,-6.387908,-2.353556,-0.849798,9.030830,8.134651,-6.957709,-1.637747,-3.277386,-3.040658,5.174782,2.731643,5.487472,-5.898815,-0.554299,4.183638,8.587696,-5.683820,-2.862960,-2.676828,3.966766,-0.044082,-1.040322,-2.347026,2.456604,0.441357,-7.308368,2.193117,2.852568,3.451388,-3.785371,6.769635,9.795002,4.521559,-6.203908,1.784218,4.819520,-2.777146,-7.466451,-5.342693,6.495679,-4.595643,-3.623181,5.087627,2.537394,0.266216,-8.709985,-2.221326,7.112441,4.241049,5.962356,3.867287,-7.798308,-7.088883,-3.051393,-3.676278,-4.308534,-6.127829,1.832654,5.035104,-8.870183,-0.771782,8.069586,-8.388706,-9.372891,-7.648243,-7.622082,0.018473,0.293130,-5.838342,-8.356357,-4.421420,4.580876,-2.793896,-8.024023,-0.949262,-4.479263,9.257807,7.539415,-1.013529,-8.437071,2.156627,3.902987,6.588427,-5.418057,-4.650897,6.484559,-6.823311,8.449650,4.754747,-5.952223,8.088343,-2.548482,-2.695823,-0.149053,8.115347,9.717740,-1.311686,4.534537,-1.198386,2.009781,9.135865,8.939037,3.193199,-5.608314,-9.901143,-0.845042,6.609786,1.738688,-5.720185,1.752073,-6.121617,-7.934064,5.910024,-0.366350,-6.918200,-9.513067,-0.706175,4.922794,4.080448,-6.564404,-2.453648,9.967063,4.291105,8.434440,-2.900039,-1.891596,1.877823,1.882279,-1.582920,-7.361391,2.135149,-6.637906,-3.836416,-6.306832,3.148658,-2.017199,4.771005,-0.072897,-5.426410,9.033265,-8.170654,0.409462,-4.934203,-0.984927,-4.482642,4.098045,2.365194,-3.399686,8.966355,0.850207,4.566022,-8.916221,1.785203,-9.984531,-0.924825,9.007435,6.419548,7.718872,2.798125,-6.302920,-9.988954,-0.089927,-6.887727,-8.204502,1.794074,-3.445989,1.835735,1.655286,1.713376,-0.130419,3.765672,-1.453758,-8.045130,2.461905,9.527179,4.935739,5.587694,-5.388876,-8.353111,-5.573796,-8.507599,2.102048,7.410215,4.767169,-6.487803,8.604623,4.226571,-7.352268,0.706442,1.933897,2.935027,-3.912418,-2.510445,-3.854059,1.985979,-5.827312,-4.677601,6.793235,8.157489,-9.098986,-9.137172,5.260087,-4.054551,9.083161,3.521813,-8.758644,-6.810291,-3.349634,5.340106,7.801256,5.534280,4.140882,1.042035,2.953612,4.336698,-7.988864,3.516086,8.924368,5.119689,4.890639,9.259429,-3.615588,5.673632,5.669236,5.504596,4.697052,-7.675312,-0.183087,-2.231433,-9.507758,-1.371570,1.355646,5.472756,8.610793,-0.943382,0.975321,-8.609672,9.936520,-7.812368,0.521189,1.768443,-8.577722,3.216097,-5.795657,2.108970,0.127217,0.078392,0.187856,4.001631,-6.125863,-6.989347,5.200090,5.079101,-1.670684,1.956467,4.003133,-8.697189,2.249502,9.737468,0.677448,-8.203867,-8.582341,-3.728643,-9.723240,-7.877900,6.681691,5.162526,4.919918,4.200001,-2.892974,6.887578,3.374295,-4.578717,5.545471,-7.848584,-0.347946,3.845564,8.196705,-5.219651,5.268993,-4.286703,6.923805,-1.192907,-0.236948,-4.496952,-6.775064,-6.455354,-1.201889,-0.904210,-3.813980,-9.865180,-9.201399,3.186109,4.042470,6.300917,-6.745002,8.070980,6.249740,7.058585,9.618853,6.181347,7.031104,-1.223635,-0.381003,-8.704075,8.438900,9.556317,-5.813360,9.916187,-8.378760,1.895225,-4.576482,2.126765,-3.829678,6.822483,-2.065397,0.894172,8.283401,1.421822,6.474481,-8.064770,2.089958,-3.539692,9.292430,9.294646,-0.779967,-5.326088,-7.971883,6.301351,-9.764040,-5.910698,0.976437,4.020247,3.277088,-8.551766,-4.661546,-0.018543,-1.101642,4.783547,-7.514548,7.707633,5.029961,-8.212855,8.736576,-6.510522,-8.431465,9.383410,2.024970,-7.390114,8.877314,5.400459,-3.397922,8.465812,-9.950677,-4.244824,-0.084177,2.953560,7.662437,6.612694,7.361025,7.068376,-3.533737,4.651197,3.509061,8.059043,-8.034082,-6.297728,-2.313373,6.528984,-4.454056,6.787231,-2.815451,7.196266,-4.204191,-8.011411,-9.319894,-5.911440,-2.845646,-6.777073,9.270156,9.193051,-2.057727,-7.576946,9.304227,0.308534,8.761375,-6.223884,-2.509720,-7.528442,-0.323942,-8.929035,-0.934454,-6.444357,4.907955,-2.002977,-6.864058,-3.866446,8.071255,0.119702,8.252498,-4.527454,4.285467,-0.502504,-1.041394,0.760172,2.549792,-3.290354,-5.939778,6.502810,9.297478,-0.450802,2.979007,4.995069,-3.775549,8.791963,9.456281,-7.338538,9.900486,-8.335597,7.748286,-7.024709,-7.621461,-0.122416,4.965898,-8.294918,5.502305,-0.822694,4.653954,2.456353,-6.844411,1.296095,5.288148,0.046390,-5.076001,-6.842892,0.331521,5.823586,1.125704,-4.931951,2.650960,-3.851076,7.238569,6.606109,-2.761043,-0.885742,4.956471,-8.253627,-9.298979,3.777437,-6.618050,-4.012529,8.286790,9.183263,-9.617979,9.713238,-4.622550,-2.564455,4.560578,-4.909823,8.315941,-0.819087,1.799923,4.714937,-1.052182,-3.942037,-9.505378,-5.652986,-2.481619,9.852174,4.306914,-9.439629,-4.961404,-2.529532,-3.396872,5.900449,7.459636,4.784790,-7.611069,-5.142771,3.012286,2.015620,-3.149618,8.550358,8.329132,9.972470,-7.785513,-7.871034,-0.178601,-1.496002,-3.161757,-6.889481,4.028645,-9.045783,-1.816651,1.279960,9.127989,-9.760663,-5.427424,2.865196,-1.291611,7.465758,-4.361680,2.822645,-0.915482,-6.034433,3.766961,-1.198456,-0.311886,-1.953426,-3.413765,-2.556059,0.942722,9.916229,4.186288,2.121338,9.253058,-7.524248,5.265860,-5.277557,9.950680,-6.521639,-4.284312,5.587169,4.763365,1.203157,6.913517,4.020751,-0.921072,9.895991,7.264339,9.622594,7.755845,2.074316,7.688183,-6.628850,-7.711557,6.456701,6.620235,2.930069,3.136545,-7.164806,-5.915460,0.238474,-0.782850,-2.979804,2.238626,-4.708462,1.611405,8.999656,-9.855139,0.424492,-8.752000,0.587791,-0.627995,-0.232369,4.922112,-6.160545,4.590529,4.507955,-5.964320,0.009460,2.147654,-5.653818,2.126442,-3.047285,4.791074,-0.038702,-4.767389,-1.550237,-1.959486,-8.643265,2.084522,-8.167992,-8.448522,3.771923,5.035206,8.389307,-6.515988,-6.687570,6.849397,3.966990,-6.862553,6.751312,1.947487,4.799468,-9.072068,-0.621088,0.782070,-5.455072,-5.555577,-5.690342,9.761790,-1.054826,-6.623237,0.934246,9.270785,-2.677617,0.130991,2.712486,0.394386,-1.821816,-6.167979,-1.140494,4.710372,-3.679459,-8.340595,-6.316416,-8.615957,0.024660,4.656976,-9.674870,-3.398438,-3.573879,-3.643992,-5.420269,0.469197,-1.999355,2.763635,5.352895,6.788032,-5.469112,-1.641445,1.137735,-9.419554,7.086664,-5.499897,-8.722333,0.491949,-5.520910,-1.029996,8.888793,0.512889,-6.220573,-4.380415,-0.787718,7.121121,1.622238,9.284474,-2.670576,-6.362310,9.196243,6.135840,0.656577,-1.571644,2.022285,-9.615030,-6.467265,-3.789669,2.186915,-0.538716,-2.400294,-4.923964,-0.485856,3.682279,7.366742,-4.529594,-5.239278,5.083785,-2.698691,0.907411,-6.399146,3.942663,9.353717,0.249838,-7.739632,-9.111551,3.038032,7.322558,-9.763788,-4.790482,-4.440449,-8.846827,4.312820,-4.285278,-2.368353,2.547124,9.155277,9.464077,-9.131684,3.016061,6.649714,2.649798,7.314985,-1.784591,0.444781,5.210029,5.060627,-4.504580,9.389401,5.561990,-0.775199,8.362911,5.095412,7.208936,8.408351,-6.141836,-5.537552,-2.055344], dtype = "float32")#candidate|2984|(1056,)|const|float32
call_2983 = relay.TupleGetItem(func_2861_call(relay.reshape(const_2984.astype('float32'), [8, 12, 11])), 0)
call_2985 = relay.TupleGetItem(func_2863_call(relay.reshape(const_2984.astype('float32'), [8, 12, 11])), 0)
func_341_call = mod.get_global_var('func_341')
func_343_call = mutated_mod.get_global_var('func_343')
var_2997 = relay.var("var_2997", dtype = "uint64", shape = (312, 4))#candidate|2997|(312, 4)|var|uint64
call_2996 = relay.TupleGetItem(func_341_call(relay.reshape(var_2997.astype('uint64'), [1248,])), 2)
call_2998 = relay.TupleGetItem(func_343_call(relay.reshape(var_2997.astype('uint64'), [1248,])), 2)
output = relay.Tuple([bop_2974,call_2983,const_2984,call_2996,var_2997,])
output2 = relay.Tuple([bop_2974,call_2985,const_2984,call_2998,var_2997,])
func_2999 = relay.Function([var_2967,var_2968,var_2997,], output)
mod['func_2999'] = func_2999
mod = relay.transform.InferType()(mod)
var_3000 = relay.var("var_3000", dtype = "int32", shape = (7, 8, 9))#candidate|3000|(7, 8, 9)|var|int32
var_3001 = relay.var("var_3001", dtype = "int32", shape = (7, 8, 9))#candidate|3001|(7, 8, 9)|var|int32
var_3002 = relay.var("var_3002", dtype = "uint64", shape = (312, 4))#candidate|3002|(312, 4)|var|uint64
output = func_2999(var_3000,var_3001,var_3002,)
func_3003 = relay.Function([var_3000,var_3001,var_3002,], output)
mutated_mod['func_3003'] = func_3003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_3064 = relay.TupleGetItem(func_1600_call(), 0)
call_3065 = relay.TupleGetItem(func_1601_call(), 0)
uop_3073 = relay.asinh(call_3064.astype('float64')) # shape=(8, 12, 1)
uop_3075 = relay.asinh(call_3065.astype('float64')) # shape=(8, 12, 1)
bop_3080 = relay.subtract(uop_3073.astype('int64'), relay.reshape(call_3064.astype('int64'), relay.shape_of(uop_3073))) # shape=(8, 12, 1)
bop_3083 = relay.subtract(uop_3075.astype('int64'), relay.reshape(call_3065.astype('int64'), relay.shape_of(uop_3075))) # shape=(8, 12, 1)
output = relay.Tuple([bop_3080,])
output2 = relay.Tuple([bop_3083,])
func_3084 = relay.Function([], output)
mod['func_3084'] = func_3084
mod = relay.transform.InferType()(mod)
output = func_3084()
func_3085 = relay.Function([], output)
mutated_mod['func_3085'] = func_3085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2108_call = mod.get_global_var('func_2108')
func_2109_call = mutated_mod.get_global_var('func_2109')
call_3100 = relay.TupleGetItem(func_2108_call(), 0)
call_3101 = relay.TupleGetItem(func_2109_call(), 0)
output = relay.Tuple([call_3100,])
output2 = relay.Tuple([call_3101,])
func_3105 = relay.Function([], output)
mod['func_3105'] = func_3105
mod = relay.transform.InferType()(mod)
output = func_3105()
func_3106 = relay.Function([], output)
mutated_mod['func_3106'] = func_3106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3105_call = mod.get_global_var('func_3105')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_3113 = relay.TupleGetItem(func_3105_call(), 0)
call_3114 = relay.TupleGetItem(func_3106_call(), 0)
output = relay.Tuple([call_3113,])
output2 = relay.Tuple([call_3114,])
func_3115 = relay.Function([], output)
mod['func_3115'] = func_3115
mod = relay.transform.InferType()(mod)
output = func_3115()
func_3116 = relay.Function([], output)
mutated_mod['func_3116'] = func_3116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2053_call = mod.get_global_var('func_2053')
func_2055_call = mutated_mod.get_global_var('func_2055')
call_3117 = relay.TupleGetItem(func_2053_call(), 2)
call_3118 = relay.TupleGetItem(func_2055_call(), 2)
func_2241_call = mod.get_global_var('func_2241')
func_2242_call = mutated_mod.get_global_var('func_2242')
call_3125 = func_2241_call()
call_3126 = func_2241_call()
func_2210_call = mod.get_global_var('func_2210')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_3127 = relay.TupleGetItem(func_2210_call(relay.reshape(call_3117.astype('uint64'), [1248,])), 2)
call_3128 = relay.TupleGetItem(func_2213_call(relay.reshape(call_3117.astype('uint64'), [1248,])), 2)
output = relay.Tuple([call_3117,call_3125,call_3127,])
output2 = relay.Tuple([call_3118,call_3126,call_3128,])
func_3130 = relay.Function([], output)
mod['func_3130'] = func_3130
mod = relay.transform.InferType()(mod)
output = func_3130()
func_3131 = relay.Function([], output)
mutated_mod['func_3131'] = func_3131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2053_call = mod.get_global_var('func_2053')
func_2055_call = mutated_mod.get_global_var('func_2055')
call_3202 = relay.TupleGetItem(func_2053_call(), 1)
call_3203 = relay.TupleGetItem(func_2055_call(), 1)
func_1741_call = mod.get_global_var('func_1741')
func_1744_call = mutated_mod.get_global_var('func_1744')
var_3207 = relay.var("var_3207", dtype = "uint64", shape = (1248,))#candidate|3207|(1248,)|var|uint64
call_3206 = relay.TupleGetItem(func_1741_call(relay.reshape(var_3207.astype('uint64'), [312, 4]), relay.reshape(var_3207.astype('uint64'), [1248,]), ), 1)
call_3208 = relay.TupleGetItem(func_1744_call(relay.reshape(var_3207.astype('uint64'), [312, 4]), relay.reshape(var_3207.astype('uint64'), [1248,]), ), 1)
output = relay.Tuple([call_3202,call_3206,var_3207,])
output2 = relay.Tuple([call_3203,call_3208,var_3207,])
func_3217 = relay.Function([var_3207,], output)
mod['func_3217'] = func_3217
mod = relay.transform.InferType()(mod)
var_3218 = relay.var("var_3218", dtype = "uint64", shape = (1248,))#candidate|3218|(1248,)|var|uint64
output = func_3217(var_3218)
func_3219 = relay.Function([var_3218], output)
mutated_mod['func_3219'] = func_3219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1921_call = mod.get_global_var('func_1921')
func_1923_call = mutated_mod.get_global_var('func_1923')
call_3259 = relay.TupleGetItem(func_1921_call(), 0)
call_3260 = relay.TupleGetItem(func_1923_call(), 0)
output = relay.Tuple([call_3259,])
output2 = relay.Tuple([call_3260,])
func_3261 = relay.Function([], output)
mod['func_3261'] = func_3261
mod = relay.transform.InferType()(mod)
mutated_mod['func_3261'] = func_3261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3261_call = mutated_mod.get_global_var('func_3261')
call_3262 = func_3261_call()
output = call_3262
func_3263 = relay.Function([], output)
mutated_mod['func_3263'] = func_3263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3130_call = mod.get_global_var('func_3130')
func_3131_call = mutated_mod.get_global_var('func_3131')
call_3302 = relay.TupleGetItem(func_3130_call(), 0)
call_3303 = relay.TupleGetItem(func_3131_call(), 0)
output = call_3302
output2 = call_3303
func_3310 = relay.Function([], output)
mod['func_3310'] = func_3310
mod = relay.transform.InferType()(mod)
output = func_3310()
func_3311 = relay.Function([], output)
mutated_mod['func_3311'] = func_3311
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3337 = relay.var("var_3337", dtype = "int64", shape = (9, 4, 5))#candidate|3337|(9, 4, 5)|var|int64
const_3338 = relay.const([[[3,4,-1,-10,-3],[2,-10,9,-8,-7],[-8,-4,8,-6,3],[8,10,-5,-4,3]],[[-9,-1,6,1,9],[-1,-7,-9,-4,-9],[-5,-2,-10,-5,-5],[2,-5,-3,3,5]],[[3,8,-10,7,1],[10,5,-10,10,-7],[-6,-8,-6,-2,-4],[2,2,7,6,-7]],[[-2,-3,-8,1,-10],[2,1,-9,-3,-5],[-9,-4,6,2,-9],[-7,5,-7,-2,-10]],[[9,10,-5,7,9],[3,-9,-8,2,5],[8,-2,3,-7,-10],[-9,10,8,-8,3]],[[7,5,5,-8,-3],[8,-8,-6,2,10],[-10,-2,8,-8,-7],[6,-7,9,-4,10]],[[-4,1,-1,-5,-10],[-6,5,5,-1,2],[3,3,8,-5,1],[-10,-6,-8,-7,1]],[[-9,-10,-8,-8,7],[7,7,-4,-2,-7],[-4,9,-5,-8,-2],[-10,7,-5,-4,-4]],[[-2,-10,8,6,-3],[-4,-10,-7,-10,9],[-4,-4,8,6,2],[-2,-10,5,-8,-10]]], dtype = "int64")#candidate|3338|(9, 4, 5)|const|int64
bop_3339 = relay.left_shift(var_3337.astype('int64'), relay.reshape(const_3338.astype('int64'), relay.shape_of(var_3337))) # shape=(9, 4, 5)
output = bop_3339
output2 = bop_3339
func_3344 = relay.Function([var_3337,], output)
mod['func_3344'] = func_3344
mod = relay.transform.InferType()(mod)
mutated_mod['func_3344'] = func_3344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3345 = relay.var("var_3345", dtype = "int64", shape = (9, 4, 5))#candidate|3345|(9, 4, 5)|var|int64
func_3344_call = mutated_mod.get_global_var('func_3344')
call_3346 = func_3344_call(var_3345)
output = call_3346
func_3347 = relay.Function([var_3345], output)
mutated_mod['func_3347'] = func_3347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2241_call = mod.get_global_var('func_2241')
func_2242_call = mutated_mod.get_global_var('func_2242')
call_3387 = func_2241_call()
call_3388 = func_2241_call()
output = relay.Tuple([call_3387,])
output2 = relay.Tuple([call_3388,])
func_3419 = relay.Function([], output)
mod['func_3419'] = func_3419
mod = relay.transform.InferType()(mod)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mutated_mod.get_global_var('func_3419')
call_3420 = func_3419_call()
output = call_3420
func_3421 = relay.Function([], output)
mutated_mod['func_3421'] = func_3421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1977_call = mod.get_global_var('func_1977')
func_1978_call = mutated_mod.get_global_var('func_1978')
call_3446 = relay.TupleGetItem(func_1977_call(), 0)
call_3447 = relay.TupleGetItem(func_1978_call(), 0)
func_3310_call = mod.get_global_var('func_3310')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_3454 = func_3310_call()
call_3455 = func_3310_call()
output = relay.Tuple([call_3446,call_3454,])
output2 = relay.Tuple([call_3447,call_3455,])
func_3460 = relay.Function([], output)
mod['func_3460'] = func_3460
mod = relay.transform.InferType()(mod)
output = func_3460()
func_3461 = relay.Function([], output)
mutated_mod['func_3461'] = func_3461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3310_call = mod.get_global_var('func_3310')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_3469 = func_3310_call()
call_3470 = func_3310_call()
uop_3478 = relay.log10(call_3469.astype('float32')) # shape=(1, 1248)
uop_3480 = relay.log10(call_3470.astype('float32')) # shape=(1, 1248)
output = relay.Tuple([uop_3478,])
output2 = relay.Tuple([uop_3480,])
func_3486 = relay.Function([], output)
mod['func_3486'] = func_3486
mod = relay.transform.InferType()(mod)
mutated_mod['func_3486'] = func_3486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3486_call = mutated_mod.get_global_var('func_3486')
call_3487 = func_3486_call()
output = call_3487
func_3488 = relay.Function([], output)
mutated_mod['func_3488'] = func_3488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3310_call = mod.get_global_var('func_3310')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_3509 = func_3310_call()
call_3510 = func_3310_call()
output = call_3509
output2 = call_3510
func_3515 = relay.Function([], output)
mod['func_3515'] = func_3515
mod = relay.transform.InferType()(mod)
output = func_3515()
func_3516 = relay.Function([], output)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1899_call = mod.get_global_var('func_1899')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_3614 = relay.TupleGetItem(func_1899_call(), 0)
call_3615 = relay.TupleGetItem(func_1901_call(), 0)
output = relay.Tuple([call_3614,])
output2 = relay.Tuple([call_3615,])
func_3622 = relay.Function([], output)
mod['func_3622'] = func_3622
mod = relay.transform.InferType()(mod)
output = func_3622()
func_3623 = relay.Function([], output)
mutated_mod['func_3623'] = func_3623
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3678 = relay.var("var_3678", dtype = "float32", shape = (6, 12, 6))#candidate|3678|(6, 12, 6)|var|float32
var_3679 = relay.var("var_3679", dtype = "float32", shape = (6, 12, 6))#candidate|3679|(6, 12, 6)|var|float32
bop_3680 = relay.add(var_3678.astype('float32'), relay.reshape(var_3679.astype('float32'), relay.shape_of(var_3678))) # shape=(6, 12, 6)
func_3310_call = mod.get_global_var('func_3310')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_3687 = func_3310_call()
call_3688 = func_3310_call()
output = relay.Tuple([bop_3680,call_3687,])
output2 = relay.Tuple([bop_3680,call_3688,])
func_3700 = relay.Function([var_3678,var_3679,], output)
mod['func_3700'] = func_3700
mod = relay.transform.InferType()(mod)
var_3701 = relay.var("var_3701", dtype = "float32", shape = (6, 12, 6))#candidate|3701|(6, 12, 6)|var|float32
var_3702 = relay.var("var_3702", dtype = "float32", shape = (6, 12, 6))#candidate|3702|(6, 12, 6)|var|float32
output = func_3700(var_3701,var_3702,)
func_3703 = relay.Function([var_3701,var_3702,], output)
mutated_mod['func_3703'] = func_3703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_391_call = mod.get_global_var('func_391')
func_392_call = mutated_mod.get_global_var('func_392')
call_3721 = func_391_call()
call_3722 = func_391_call()
func_531_call = mod.get_global_var('func_531')
func_534_call = mutated_mod.get_global_var('func_534')
var_3731 = relay.var("var_3731", dtype = "uint64", shape = (104, 12))#candidate|3731|(104, 12)|var|uint64
call_3730 = relay.TupleGetItem(func_531_call(relay.reshape(var_3731.astype('uint64'), [2, 624])), 3)
call_3732 = relay.TupleGetItem(func_534_call(relay.reshape(var_3731.astype('uint64'), [2, 624])), 3)
output = relay.Tuple([call_3721,call_3730,var_3731,])
output2 = relay.Tuple([call_3722,call_3732,var_3731,])
func_3735 = relay.Function([var_3731,], output)
mod['func_3735'] = func_3735
mod = relay.transform.InferType()(mod)
var_3736 = relay.var("var_3736", dtype = "uint64", shape = (104, 12))#candidate|3736|(104, 12)|var|uint64
output = func_3735(var_3736)
func_3737 = relay.Function([var_3736], output)
mutated_mod['func_3737'] = func_3737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1037_call = mod.get_global_var('func_1037')
func_1039_call = mutated_mod.get_global_var('func_1039')
call_3755 = relay.TupleGetItem(func_1037_call(), 1)
call_3756 = relay.TupleGetItem(func_1039_call(), 1)
output = call_3755
output2 = call_3756
func_3764 = relay.Function([], output)
mod['func_3764'] = func_3764
mod = relay.transform.InferType()(mod)
mutated_mod['func_3764'] = func_3764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3764_call = mutated_mod.get_global_var('func_3764')
call_3765 = func_3764_call()
output = call_3765
func_3766 = relay.Function([], output)
mutated_mod['func_3766'] = func_3766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3310_call = mod.get_global_var('func_3310')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_3770 = func_3310_call()
call_3771 = func_3310_call()
func_408_call = mod.get_global_var('func_408')
func_410_call = mutated_mod.get_global_var('func_410')
var_3778 = relay.var("var_3778", dtype = "float64", shape = (120,))#candidate|3778|(120,)|var|float64
call_3777 = func_408_call(relay.reshape(var_3778.astype('float64'), [10, 4, 3]))
call_3779 = func_408_call(relay.reshape(var_3778.astype('float64'), [10, 4, 3]))
output = relay.Tuple([call_3770,call_3777,var_3778,])
output2 = relay.Tuple([call_3771,call_3779,var_3778,])
func_3782 = relay.Function([var_3778,], output)
mod['func_3782'] = func_3782
mod = relay.transform.InferType()(mod)
mutated_mod['func_3782'] = func_3782
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3783 = relay.var("var_3783", dtype = "float64", shape = (120,))#candidate|3783|(120,)|var|float64
func_3782_call = mutated_mod.get_global_var('func_3782')
call_3784 = func_3782_call(var_3783)
output = call_3784
func_3785 = relay.Function([var_3783], output)
mutated_mod['func_3785'] = func_3785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3115_call = mod.get_global_var('func_3115')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_3851 = relay.TupleGetItem(func_3115_call(), 0)
call_3852 = relay.TupleGetItem(func_3116_call(), 0)
output = call_3851
output2 = call_3852
func_3871 = relay.Function([], output)
mod['func_3871'] = func_3871
mod = relay.transform.InferType()(mod)
mutated_mod['func_3871'] = func_3871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3871_call = mutated_mod.get_global_var('func_3871')
call_3872 = func_3871_call()
output = call_3872
func_3873 = relay.Function([], output)
mutated_mod['func_3873'] = func_3873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3764_call = mod.get_global_var('func_3764')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_3885 = func_3764_call()
call_3886 = func_3764_call()
uop_3936 = relay.log(call_3885.astype('float32')) # shape=(8, 12, 1)
uop_3938 = relay.log(call_3886.astype('float32')) # shape=(8, 12, 1)
uop_3946 = relay.sigmoid(call_3885.astype('float64')) # shape=(8, 12, 1)
uop_3948 = relay.sigmoid(call_3886.astype('float64')) # shape=(8, 12, 1)
output = relay.Tuple([uop_3936,uop_3946,])
output2 = relay.Tuple([uop_3938,uop_3948,])
func_3949 = relay.Function([], output)
mod['func_3949'] = func_3949
mod = relay.transform.InferType()(mod)
output = func_3949()
func_3950 = relay.Function([], output)
mutated_mod['func_3950'] = func_3950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3971 = relay.var("var_3971", dtype = "bool", shape = (16, 8, 4))#candidate|3971|(16, 8, 4)|var|bool
var_3972 = relay.var("var_3972", dtype = "bool", shape = (16, 8, 4))#candidate|3972|(16, 8, 4)|var|bool
bop_3973 = relay.logical_and(var_3971.astype('bool'), relay.reshape(var_3972.astype('bool'), relay.shape_of(var_3971))) # shape=(16, 8, 4)
uop_3983 = relay.acosh(var_3972.astype('float32')) # shape=(16, 8, 4)
output = relay.Tuple([bop_3973,uop_3983,])
output2 = relay.Tuple([bop_3973,uop_3983,])
func_3987 = relay.Function([var_3971,var_3972,], output)
mod['func_3987'] = func_3987
mod = relay.transform.InferType()(mod)
var_3988 = relay.var("var_3988", dtype = "bool", shape = (16, 8, 4))#candidate|3988|(16, 8, 4)|var|bool
var_3989 = relay.var("var_3989", dtype = "bool", shape = (16, 8, 4))#candidate|3989|(16, 8, 4)|var|bool
output = func_3987(var_3988,var_3989,)
func_3990 = relay.Function([var_3988,var_3989,], output)
mutated_mod['func_3990'] = func_3990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3310_call = mod.get_global_var('func_3310')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_4003 = func_3310_call()
call_4004 = func_3310_call()
output = call_4003
output2 = call_4004
func_4005 = relay.Function([], output)
mod['func_4005'] = func_4005
mod = relay.transform.InferType()(mod)
mutated_mod['func_4005'] = func_4005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4005_call = mutated_mod.get_global_var('func_4005')
call_4006 = func_4005_call()
output = call_4006
func_4007 = relay.Function([], output)
mutated_mod['func_4007'] = func_4007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2788_call = mod.get_global_var('func_2788')
func_2789_call = mutated_mod.get_global_var('func_2789')
call_4052 = func_2788_call()
call_4053 = func_2788_call()
const_4057 = relay.const([[[-9,-2,-2,3,10,-4,-10,10,-3,3,7,-3,2],[4,8,-3,2,-9,-10,-2,4,-5,-7,6,9,-1],[7,-5,9,-7,3,-4,-7,9,7,8,-5,8,9],[5,3,-4,2,-9,7,8,8,-6,6,2,5,9],[-4,-6,-2,1,-7,-4,-4,-9,-1,-2,-8,-3,2],[-10,-7,8,5,-6,-7,10,4,10,-9,9,-6,10],[-7,-8,10,7,6,-1,-3,6,4,1,-2,-5,2],[2,5,3,4,-3,1,2,-9,-8,9,-10,2,10],[6,6,9,7,-1,-6,-4,-9,-10,2,-3,-2,6],[5,5,1,-3,9,-8,-6,7,-6,-10,7,8,-9],[-10,5,-3,4,-10,-9,-4,4,7,3,-1,-6,-3],[-3,2,4,-3,8,3,-5,-8,3,5,6,-7,-5],[-9,1,1,5,-4,-5,-9,-4,-8,-5,-5,10,8],[-9,6,-5,-4,7,8,9,2,-2,1,-5,-7,5],[9,-10,-1,1,-5,-10,-3,-4,-8,5,-9,3,3],[8,6,-1,-7,1,-10,-5,1,3,4,-6,-10,-4]],[[-8,-8,-5,-2,-8,-6,-4,4,3,10,-5,-7,10],[-3,4,1,6,-4,6,10,9,-2,6,6,5,1],[-8,-1,2,1,3,10,3,-8,10,-6,7,1,-4],[-3,2,9,4,10,-5,-4,7,8,7,-1,-8,-5],[5,-8,-10,7,7,-6,5,-1,-9,9,-10,-5,4],[2,-3,7,-1,-6,-8,-7,-1,9,8,-8,-6,4],[3,1,-7,1,9,9,-5,-5,10,-1,4,8,-10],[1,-3,-2,-6,6,-7,5,-5,10,-9,-2,-6,1],[2,1,4,-10,7,-5,-6,-6,8,-2,6,-4,6],[6,-10,1,-4,6,4,-7,1,-4,5,-1,-3,-7],[-3,-4,6,1,4,-7,-4,-10,-2,-9,-1,9,7],[8,-3,9,-7,-6,-2,8,-9,-8,-2,1,-5,5],[5,3,-4,-4,-7,4,7,-6,7,6,-1,-8,3],[4,-2,-6,-5,-1,-10,-7,-9,1,-8,-4,1,10],[-4,-6,10,5,-1,10,-9,-4,-7,6,-9,-1,-5],[4,5,-9,-6,6,-5,9,1,1,-4,9,-7,9]],[[-3,4,5,6,-6,9,-2,-8,-7,4,-8,-7,3],[6,-10,-5,-5,-3,-1,-10,-5,-8,5,5,-5,-9],[-7,7,-2,-9,6,-5,5,1,6,2,10,8,8],[-9,-4,5,-5,-9,-5,-7,-2,-2,-2,-2,4,-10],[6,2,-1,6,-7,5,5,-9,2,-1,-10,-1,6],[1,-9,-4,8,10,7,3,1,8,-1,6,2,-8],[-10,7,2,6,8,8,-6,-5,8,-8,7,-5,-2],[-4,8,-9,10,-2,5,-6,8,8,6,-10,1,-3],[2,7,-7,-8,-2,3,4,-6,5,-1,8,8,3],[8,6,4,-9,3,3,-3,10,-7,-1,-3,-7,-9],[6,-10,-7,-4,-2,-2,1,-9,7,-9,5,-3,-3],[3,1,-6,1,-7,-6,1,1,-1,9,7,9,2],[6,-2,-4,-8,9,3,9,8,10,3,3,4,-3],[7,-8,8,6,4,9,4,-3,-7,6,-8,-7,6],[5,3,2,10,10,-6,9,6,-10,-5,-9,7,-10],[-2,6,-10,-9,-8,2,2,9,-10,-8,6,9,4]],[[6,5,-4,6,6,-10,-6,7,8,1,7,-8,10],[-4,-7,-10,10,10,2,-4,9,-3,-2,-6,10,-10],[1,-4,3,-1,-8,3,6,-10,9,-7,7,7,10],[4,3,7,-3,6,-10,-6,7,4,3,4,-9,-4],[10,-8,7,2,-9,3,-1,7,7,10,3,9,-10],[-9,3,7,-9,6,8,-5,9,8,8,-3,-9,8],[7,-7,10,5,-1,7,-9,5,2,-6,-9,-3,10],[-1,9,10,-9,-2,-2,2,-3,-3,-3,2,10,8],[-4,6,7,4,9,1,-8,-6,-1,-4,-1,-7,-9],[2,6,-9,-9,4,-4,-3,2,-10,-6,-1,-7,1],[5,-4,6,-4,-6,-5,-1,2,-9,8,-6,2,-7],[10,1,3,9,10,3,-10,-10,3,-3,-5,-9,-4],[3,8,-10,-3,-10,-6,-4,-4,2,-6,-8,4,-6],[-4,3,-2,5,-4,10,7,-4,1,-9,6,1,-4],[3,-10,6,-3,-5,5,9,-6,-9,-1,4,-2,8],[-6,10,-8,7,-9,6,-4,-1,1,-10,-10,-10,3]],[[-4,-8,-3,-1,-4,5,9,-6,7,7,1,-9,7],[-2,-10,-2,10,-9,6,-7,9,4,5,4,-2,-2],[-9,5,-10,-4,2,7,9,6,-3,8,2,-1,-3],[-8,6,-9,-1,-2,9,-1,3,4,1,-7,-2,8],[6,2,-6,6,2,-10,10,-2,-9,2,1,4,-6],[8,-8,2,10,5,6,-2,7,-9,-4,-7,-6,-7],[-5,-10,-3,-8,9,-7,4,6,5,8,10,10,10],[8,-6,-6,-5,-1,9,9,1,-6,8,-7,-10,5],[-2,-3,-2,-10,-6,-1,-5,7,-4,-1,-2,2,-10],[3,3,9,4,-8,5,-9,6,-9,-2,4,-5,-3],[-1,9,1,1,-3,-9,-2,-7,7,-5,-6,6,3],[6,-7,8,-1,9,-10,-7,-1,-2,-3,10,-5,-7],[-3,8,4,-5,4,-9,10,-8,8,-5,-2,-2,6],[-7,10,1,-6,1,-7,-3,2,6,9,4,9,-6],[6,6,-3,4,-6,9,6,-5,8,3,-7,-2,1],[6,5,1,-4,-5,1,-2,-4,2,-3,-4,3,1]],[[-4,-10,10,7,10,7,8,-10,-1,7,-5,7,5],[1,9,-10,8,2,-6,3,10,9,-4,-6,-3,-2],[3,10,-1,8,4,6,9,-10,-8,2,-5,-3,-10],[-3,5,3,5,8,4,-9,-5,2,3,-1,-7,7],[4,2,-3,6,10,-8,3,-4,-1,7,8,-1,3],[1,5,-3,-10,-2,10,2,9,7,-5,9,2,1],[-5,-10,-6,-8,9,-9,-6,5,-1,6,-7,2,-3],[-8,-6,6,3,2,7,10,3,8,-2,-5,-9,3],[-5,-8,5,-5,4,4,7,7,-6,-1,-6,-8,1],[-9,8,6,6,-2,-7,4,10,9,4,3,-10,-10],[-3,-5,6,5,-8,7,-3,7,-8,1,8,7,-5],[3,5,6,-6,4,-6,5,-8,-8,-1,-10,5,-9],[3,-5,6,-8,3,-9,-4,10,2,4,8,-10,8],[-8,-3,-3,2,-9,-8,-9,2,2,3,-7,-7,-2],[4,2,3,-4,8,7,7,-6,6,8,3,7,9],[-10,7,-1,-5,-5,-6,7,8,2,1,-10,5,-6]]], dtype = "uint32")#candidate|4057|(6, 16, 13)|const|uint32
bop_4058 = relay.power(call_4052.astype('float64'), relay.reshape(const_4057.astype('float64'), relay.shape_of(call_4052))) # shape=(6, 16, 13)
bop_4061 = relay.power(call_4053.astype('float64'), relay.reshape(const_4057.astype('float64'), relay.shape_of(call_4053))) # shape=(6, 16, 13)
func_1606_call = mod.get_global_var('func_1606')
func_1607_call = mutated_mod.get_global_var('func_1607')
call_4076 = relay.TupleGetItem(func_1606_call(), 0)
call_4077 = relay.TupleGetItem(func_1607_call(), 0)
bop_4094 = relay.less(const_4057.astype('bool'), relay.reshape(call_4052.astype('bool'), relay.shape_of(const_4057))) # shape=(6, 16, 13)
bop_4097 = relay.less(const_4057.astype('bool'), relay.reshape(call_4053.astype('bool'), relay.shape_of(const_4057))) # shape=(6, 16, 13)
output = relay.Tuple([bop_4058,call_4076,bop_4094,])
output2 = relay.Tuple([bop_4061,call_4077,bop_4097,])
func_4103 = relay.Function([], output)
mod['func_4103'] = func_4103
mod = relay.transform.InferType()(mod)
output = func_4103()
func_4104 = relay.Function([], output)
mutated_mod['func_4104'] = func_4104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_4119 = relay.TupleGetItem(func_1109_call(), 2)
call_4120 = relay.TupleGetItem(func_1111_call(), 2)
func_531_call = mod.get_global_var('func_531')
func_534_call = mutated_mod.get_global_var('func_534')
call_4147 = relay.TupleGetItem(func_531_call(relay.reshape(call_4119.astype('uint64'), [2, 624])), 1)
call_4148 = relay.TupleGetItem(func_534_call(relay.reshape(call_4119.astype('uint64'), [2, 624])), 1)
func_282_call = mod.get_global_var('func_282')
func_283_call = mutated_mod.get_global_var('func_283')
call_4151 = relay.TupleGetItem(func_282_call(), 0)
call_4152 = relay.TupleGetItem(func_283_call(), 0)
output = relay.Tuple([call_4119,call_4147,call_4151,])
output2 = relay.Tuple([call_4120,call_4148,call_4152,])
func_4157 = relay.Function([], output)
mod['func_4157'] = func_4157
mod = relay.transform.InferType()(mod)
output = func_4157()
func_4158 = relay.Function([], output)
mutated_mod['func_4158'] = func_4158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3486_call = mod.get_global_var('func_3486')
func_3488_call = mutated_mod.get_global_var('func_3488')
call_4166 = relay.TupleGetItem(func_3486_call(), 0)
call_4167 = relay.TupleGetItem(func_3488_call(), 0)
func_1561_call = mod.get_global_var('func_1561')
func_1563_call = mutated_mod.get_global_var('func_1563')
var_4191 = relay.var("var_4191", dtype = "float32", shape = (1536,))#candidate|4191|(1536,)|var|float32
call_4190 = relay.TupleGetItem(func_1561_call(relay.reshape(var_4191.astype('float32'), [64, 24])), 0)
call_4192 = relay.TupleGetItem(func_1563_call(relay.reshape(var_4191.astype('float32'), [64, 24])), 0)
func_3700_call = mod.get_global_var('func_3700')
func_3703_call = mutated_mod.get_global_var('func_3703')
const_4194 = relay.const([7.519153,7.677341,-0.767674,1.660811,-5.624701,7.912932,9.235318,2.331854,-7.831698,0.522190,-8.811260,8.104194,9.551343,9.400935,-9.889997,-2.308751,-2.720156,-7.769950,4.417215,1.283389,-7.577491,8.084633,9.334145,2.777681,-8.093564,7.713097,-6.968874,-5.606525,4.021520,-3.664008,7.219138,-5.774826,-6.051591,-5.212550,-8.862539,-4.202762,-5.016857,-4.247785,-4.449016,0.544229,4.472609,7.936756,-3.570281,0.556329,-0.012043,6.366792,-2.596529,0.906364,2.878881,-5.596239,9.990304,-6.955019,3.410276,9.859207,6.563031,-4.795389,7.463262,-7.445285,-3.642121,-5.078084,-0.725677,-5.310606,8.360193,6.744573,2.466806,-3.039175,-9.610061,-9.808633,-5.246391,6.354370,-6.758062,-7.505751,-5.543988,4.507666,-1.422217,0.355639,-0.438218,9.562196,9.128627,-9.842757,-0.933625,2.418407,5.140284,-1.375489,4.640190,3.989525,-1.646574,4.552510,8.722052,3.875498,-4.830119,-8.501363,-7.417795,-7.253363,-3.237677,-8.878872,-3.525698,-6.377528,3.225335,5.255065,-7.435838,-2.924554,-3.670158,6.326935,3.506576,6.675320,1.924804,-8.386013,0.927913,0.936448,3.235973,-6.766683,9.175833,9.721163,-2.814703,2.365031,-9.175756,3.197146,-5.137741,-4.285739,2.438307,5.901124,5.719106,-1.111270,9.658132,-2.745897,3.794631,-8.169375,8.602894,8.410943,-5.037444,4.038080,-3.568285,3.595808,9.968636,-0.587802,2.403814,-2.689085,3.094861,7.174972,-1.656286,2.131762,-7.562352,2.017922,-4.516776,4.894792,9.510203,3.239752,1.918881,-1.006970,-9.438705,6.024079,7.846158,-7.805518,-8.189189,9.329322,1.882447,-8.342931,-6.833355,-0.590356,-0.201402,2.037743,-5.300035,-3.814156,1.188162,-3.467146,7.240661,0.608683,7.778215,-1.957845,9.214825,2.858838,-5.256452,-2.335450,2.578595,1.372946,5.384330,6.074618,5.174850,1.399324,8.434488,-8.982021,-1.083483,3.568689,4.327185,0.117054,1.767447,-8.785590,1.273736,-4.571957,1.835976,-5.058488,-4.300797,-8.068505,5.810903,-8.379685,2.913065,-5.987534,-8.156172,-9.375780,6.291708,-1.552458,-1.081440,-2.489458,0.868577,-5.666822,0.840050,3.731670,-8.320648,5.275516,-5.763629,-5.994130,3.602851,9.035752,-3.906130,7.220766,4.702870,-3.489475,-0.022513,3.880962,2.018416,-3.769339,7.984210,-2.839643,4.551151,6.704244,2.391751,-8.033211,-5.795376,-4.068778,5.651093,-7.908468,5.517561,-5.183936,-0.478278,-5.453556,9.287536,-4.354033,-0.732002,-6.504415,-6.139212,1.114072,-0.777121,-9.283029,1.893984,9.479899,2.142908,-5.525809,6.874874,-4.931280,-6.922142,6.747491,-3.104494,-2.583895,2.557398,-5.457795,8.445823,3.076810,5.146163,-3.492397,4.183273,3.955022,-2.321358,5.782619,-3.907266,5.263546,-5.317155,-3.069393,-4.949511,-9.444644,-5.142044,2.533004,-7.589534,7.191774,2.831731,6.622729,2.482888,3.270891,-5.052501,3.365246,-6.546356,0.466179,-6.751397,4.871000,6.294713,-0.479697,1.383914,1.345970,-6.460523,8.382246,-0.375413,-6.829902,-2.424964,1.511238,5.000362,9.194771,1.973538,-9.368881,8.027426,-4.929369,4.027782,-4.940344,9.046193,1.306384,-1.696176,3.787890,7.806282,-0.766042,5.216758,-5.385222,7.531723,-1.454943,-8.687672,-7.091713,4.528410,-4.237570,5.652440,0.304661,-4.345820,-4.019859,4.623886,-7.429403,-3.139027,-6.238169,-7.919111,-8.333405,9.622025,4.185445,2.237040,5.648581,-1.675751,-4.864267,-0.869325,-6.756138,-4.782868,2.446126,-3.798458,-5.227721,-4.897944,-9.805256,4.013300,-8.841207,-0.586117,-3.679859,0.461893,-4.835356,-8.288793,3.317570,-5.152004,1.339946,2.745049,-1.263962,-2.512186,-3.260424,-6.459124,-1.442704,5.191588,-4.204952,-5.676242,2.303348,-5.519181,1.547188,-2.077021,5.558573,3.882945,5.562422,5.065951,-7.266672,-3.048035,-9.594773,-9.728920,-2.392275,-6.261252,1.568330,-5.983337,-6.843826,-2.971937,3.155180,6.069035,3.204498,5.090604,2.782966,-6.760532,1.055121,-8.367725,7.237729,-5.056759,-0.039584,-2.590699,3.777714,-8.376072,8.990371,0.343984,-5.551308,5.274603,7.882721,-7.762945,5.097169,1.347928,-8.256911,0.779299,-4.359614,3.682413,-2.252160,-7.276755,-2.285546,0.752056,9.492025,-8.112358,0.678224,7.755147,2.187312,7.762758,-9.114567,8.833003,-6.952753,2.679551,-1.386914,3.700660,-9.429357,-0.593784,5.794368,6.872551,-8.442821,-0.785116,3.702935,3.545674,5.917041,-6.958288,9.996543,-8.108686,-8.801619], dtype = "float32")#candidate|4194|(432,)|const|float32
call_4193 = relay.TupleGetItem(func_3700_call(relay.reshape(const_4194.astype('float32'), [6, 12, 6]), relay.reshape(const_4194.astype('float32'), [6, 12, 6]), ), 0)
call_4195 = relay.TupleGetItem(func_3703_call(relay.reshape(const_4194.astype('float32'), [6, 12, 6]), relay.reshape(const_4194.astype('float32'), [6, 12, 6]), ), 0)
output = relay.Tuple([call_4166,call_4190,var_4191,call_4193,const_4194,])
output2 = relay.Tuple([call_4167,call_4192,var_4191,call_4195,const_4194,])
func_4199 = relay.Function([var_4191,], output)
mod['func_4199'] = func_4199
mod = relay.transform.InferType()(mod)
var_4200 = relay.var("var_4200", dtype = "float32", shape = (1536,))#candidate|4200|(1536,)|var|float32
output = func_4199(var_4200)
func_4201 = relay.Function([var_4200], output)
mutated_mod['func_4201'] = func_4201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_4271 = relay.TupleGetItem(func_1109_call(), 4)
call_4272 = relay.TupleGetItem(func_1111_call(), 4)
output = call_4271
output2 = call_4272
func_4284 = relay.Function([], output)
mod['func_4284'] = func_4284
mod = relay.transform.InferType()(mod)
mutated_mod['func_4284'] = func_4284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4284_call = mutated_mod.get_global_var('func_4284')
call_4285 = func_4284_call()
output = call_4285
func_4286 = relay.Function([], output)
mutated_mod['func_4286'] = func_4286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4157_call = mod.get_global_var('func_4157')
func_4158_call = mutated_mod.get_global_var('func_4158')
call_4289 = relay.TupleGetItem(func_4157_call(), 0)
call_4290 = relay.TupleGetItem(func_4158_call(), 0)
output = relay.Tuple([call_4289,])
output2 = relay.Tuple([call_4290,])
func_4294 = relay.Function([], output)
mod['func_4294'] = func_4294
mod = relay.transform.InferType()(mod)
mutated_mod['func_4294'] = func_4294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4294_call = mutated_mod.get_global_var('func_4294')
call_4295 = func_4294_call()
output = call_4295
func_4296 = relay.Function([], output)
mutated_mod['func_4296'] = func_4296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1921_call = mod.get_global_var('func_1921')
func_1923_call = mutated_mod.get_global_var('func_1923')
call_4315 = relay.TupleGetItem(func_1921_call(), 0)
call_4316 = relay.TupleGetItem(func_1923_call(), 0)
func_1561_call = mod.get_global_var('func_1561')
func_1563_call = mutated_mod.get_global_var('func_1563')
var_4323 = relay.var("var_4323", dtype = "float32", shape = (1536,))#candidate|4323|(1536,)|var|float32
call_4322 = relay.TupleGetItem(func_1561_call(relay.reshape(var_4323.astype('float32'), [64, 24])), 1)
call_4324 = relay.TupleGetItem(func_1563_call(relay.reshape(var_4323.astype('float32'), [64, 24])), 1)
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_4338 = func_3515_call()
call_4339 = func_3515_call()
bop_4348 = relay.logical_and(call_4338.astype('bool'), call_4315.astype('bool')) # shape=(8, 12, 1248)
bop_4351 = relay.logical_and(call_4339.astype('bool'), call_4316.astype('bool')) # shape=(8, 12, 1248)
func_892_call = mod.get_global_var('func_892')
func_893_call = mutated_mod.get_global_var('func_893')
call_4352 = func_892_call()
call_4353 = func_892_call()
output = relay.Tuple([call_4322,var_4323,bop_4348,call_4352,])
output2 = relay.Tuple([call_4324,var_4323,bop_4351,call_4353,])
func_4358 = relay.Function([var_4323,], output)
mod['func_4358'] = func_4358
mod = relay.transform.InferType()(mod)
mutated_mod['func_4358'] = func_4358
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4359 = relay.var("var_4359", dtype = "float32", shape = (1536,))#candidate|4359|(1536,)|var|float32
func_4358_call = mutated_mod.get_global_var('func_4358')
call_4360 = func_4358_call(var_4359)
output = call_4360
func_4361 = relay.Function([var_4359], output)
mutated_mod['func_4361'] = func_4361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3871_call = mod.get_global_var('func_3871')
func_3873_call = mutated_mod.get_global_var('func_3873')
call_4386 = func_3871_call()
call_4387 = func_3871_call()
var_4407 = relay.var("var_4407", dtype = "float32", shape = (8, 12, 14))#candidate|4407|(8, 12, 14)|var|float32
bop_4408 = relay.greater_equal(call_4386.astype('bool'), var_4407.astype('bool')) # shape=(8, 12, 14)
bop_4411 = relay.greater_equal(call_4387.astype('bool'), var_4407.astype('bool')) # shape=(8, 12, 14)
func_2999_call = mod.get_global_var('func_2999')
func_3003_call = mutated_mod.get_global_var('func_3003')
const_4414 = relay.const([[10,10,1,10,-1,-2,7,-2,10,8,-9,8,-1,2,1,-6,7,-2,3,-4,5,5,8,7,-3,-9,6,-8,6,-2,2,-5,5,-7,3,5,7,-10,-7,-2,1,-5,-9,-3,-3,-10,-2,3,-6,6,-10,-9,-10,4,7,-10,-7,5,-7,1,-7,4,9,9,-8,7,7,-6,7,6,6,-2,8,9,10,-5,10,-6,-9,-6,-1,4,9,7],[-10,1,7,-8,-5,-10,6,3,7,7,-6,10,6,-7,3,-2,-5,8,-10,-6,-3,1,-4,-5,4,6,5,-9,-9,5,-8,-7,-3,4,-9,-8,9,-2,-2,3,-1,9,-6,-6,-5,-8,-9,8,8,-5,6,-1,-1,-7,2,-2,-10,8,9,2,-6,-1,-3,-8,4,-10,-7,3,-6,2,4,-10,4,2,-3,-9,3,7,-10,-9,-8,-3,1,-2],[8,-4,7,7,-3,3,1,6,-4,2,-10,8,-1,5,-9,-9,-1,9,9,7,7,10,6,4,1,-3,8,-8,-4,-2,-2,-10,-6,-10,7,8,9,-3,-4,-4,2,5,-1,-10,-10,8,3,-4,8,-5,3,-10,9,-9,10,-9,3,4,-1,-10,9,10,7,1,7,-4,-9,-3,8,5,-7,2,-10,-5,3,1,-5,-3,6,2,2,-6,-10,1],[-10,8,1,-9,-6,-2,-2,-10,6,3,-7,-7,-1,-2,-1,1,-7,1,6,-9,-4,3,3,-5,7,3,3,5,-3,4,-7,-5,3,2,-6,4,-1,-6,-10,-7,8,-1,10,-2,-10,-6,3,-3,7,-10,6,3,-2,-6,-9,-7,3,-6,3,-5,-6,2,-2,8,10,-2,-3,-6,3,5,-4,-1,-2,9,6,-8,5,-6,5,-6,-3,3,-3,-8],[2,-10,-6,3,-7,3,8,-8,3,10,7,3,2,3,-5,-2,4,5,-3,8,-3,-3,-4,4,4,-5,9,10,-4,-9,-4,9,-2,-8,3,5,8,-8,1,-2,-5,-8,5,-8,-1,-1,7,-4,2,-6,-9,2,-10,-2,2,8,2,-2,5,7,6,-2,-6,3,-6,7,-1,5,-9,6,10,1,-1,-1,4,2,-6,4,-9,-3,8,-2,-9,4],[-3,-1,4,7,4,10,5,-5,-6,-6,8,2,7,6,-9,6,-1,-7,7,-8,1,7,2,9,-3,-3,-4,8,8,-9,-6,-9,10,-10,9,7,10,5,6,-1,9,-3,-10,-4,6,-5,8,9,-9,4,1,-7,-5,-4,-4,-1,1,-6,4,-7,-3,5,6,9,3,5,-5,4,3,-1,2,-2,8,4,-9,-6,-3,6,-3,7,8,-1,-4,-3]], dtype = "int32")#candidate|4414|(6, 84)|const|int32
const_4415 = relay.const([5,9,6,4,7,-6,-10,-7,10,-8,-10,-6,4,6,-4,-8,-8,-10,4,4,10,4,4,2,5,-10,10,7,-9,-6,3,4,1,-4,8,8,-7,9,-6,-7,10,3,-7,-6,5,-9,-5,8,7,-1,-1,4,-3,-3,-3,-7,-10,-4,3,3,-9,-6,7,8,-7,10,8,-8,-6,-10,-1,-1,9,8,-3,-2,5,-9,-2,-8,-8,9,-4,-6,7,-9,-3,9,-6,-8,8,-3,7,-5,1,-2,-4,4,7,8,6,-4,8,2,2,4,1,-3,1,1,-3,-10,3,3,-4,6,8,8,5,3,4,-7,7,3,-10,-2,5,-8,-6,10,3,9,-8,-9,-8,10,10,-7,9,-6,4,10,2,8,10,-7,4,6,2,4,-8,4,-4,-6,10,-2,2,4,3,-1,9,-7,1,-6,-9,-6,7,-6,10,-5,-5,-3,-2,-10,-8,-7,-6,-2,10,-3,8,-7,-9,7,-6,-8,-1,8,9,-8,7,-5,-2,4,-5,-10,-4,8,-1,-3,-7,-9,-3,2,5,8,-5,-6,8,-8,7,-5,-8,-6,-8,-7,-9,3,-3,3,-3,9,2,7,-7,4,-5,-5,-4,2,-10,-8,5,-1,6,-6,3,-1,5,8,2,-6,-4,2,3,-1,2,2,-3,-8,6,-10,-3,5,-8,2,6,-9,-10,-8,4,6,9,5,-10,10,9,5,2,2,5,-10,-1,-3,7,-3,-1,6,8,3,-4,-4,-5,-7,-2,-7,-2,-10,-3,5,4,-10,9,-6,-7,5,-4,-8,-1,-5,5,-8,8,-1,10,-10,4,-9,8,-1,4,10,-6,-6,3,-8,5,5,-7,-4,-2,1,-4,2,6,9,-9,6,7,-4,5,-9,1,4,2,-5,2,-2,-8,10,-8,-2,10,-6,-1,-7,2,9,-10,1,10,-8,-4,1,-7,-4,2,3,7,8,10,6,-1,-7,-7,5,-6,2,-5,2,5,-8,3,10,-3,-7,6,-6,8,10,-4,3,-1,-10,7,10,-7,9,-2,-7,9,-9,-7,2,8,1,8,-2,10,-5,1,8,-4,7,8,-2,-9,-10,5,4,-5,-3,-10,1,-6,-6,2,4,-1,-5,-6,3,-7,2,6,-5,-2,3,-3,1,-3,-6,-10,-4,-3,9,-5,5,-9,3,-6,8,7,9,10,-9,8,9,-10,-1,1,4,-6,7,9,-5,-8,-10,-6,5,2,8,-3,-10,-9,8,4,-5,3,10,-4,5,-5,7,8,7,9,-10,4,7,-2,5,-7,8,4,3,10,2,-5,-9,2,-2,3,5,-1,-1,7,9,-6,-7,-5,-8,8,-2,-8,7,7,3,1,-7,2,3,2,5,-1,6,-1,-10,-6,-4,-3,4,-10,10,-7,-2,-5,-8,9,4,-6,-5,-7,-7,-7,-7,2,10,10,-3,-1,6,2,-2,9,-2,-8,-3,-3,-10,-1,-3,-8,-7,5,7,-5,-1,-1,7,-10,-5,7,5,-8,10,-2,4,-8,-10,1,10,-2,-2,-5,-3,9,3,-3,5,1,-1,-10,3,-6,-2,2,-2,10,-9,4,-10,-9,-10,-9,-6,-4,-5,3,-4,-5,-7,-6,-3,-2,3,-4,10,4,-8,7,-7,-2,-7,2,-6,-8,4,-10,2,9,2,6,9,-4,-7,2,3,-6,-8,2,7,-5,-3,8,-10,9,-4,-6,7,1,-10,-7,8,-3,-6,-10,-4,2,3,3,8,-7,-6,-5,-2,8,1,7,1,-6,7,-9,-3,10,-2,-1,-4,-3,1,7,8,7,1,9,-6,-10,-2,-5,10,3,10,-4,-2,7,7,-9,9,4,-10,3,-9,10,-2,10,-2,-5,7,-7,8,-4,-7,-10,9,-6,1,6,4,5,2,-9,-6,-7,6,6,7,1,-5,10,-8,-4,8,9,7,-10,-9,3,5,-10,3,7,6,-4,10,6,4,7,1,6,1,-6,4,4,1,-2,-10,6,8,8,6,6,-3,2,8,-1,-1,-7,-8,4,-7,-6,7,4,2,3,-5,7,-9,-1,6,-8,-8,-2,8,-8,4,3,-5,-5,8,-4,7,10,-10,-5,-2,5,-7,-8,5,-1,1,-10,-10,3,3,4,1,-7,6,9,-4,8,1,8,6,-7,-3,3,-2,-5,6,-6,-3,7,-5,-7,-3,2,-3,-2,-10,-5,-3,-8,7,-1,-1,9,10,-3,-4,-7,7,1,-10,10,9,4,-6,-9,4,-5,7,-10,1,5,6,-4,-1,-3,-7,2,-8,2,-7,-8,-10,-7,-8,3,2,7,-10,-1,6,-2,6,-3,-8,-10,-3,-7,3,10,-1,-3,3,-9,2,1,-3,-3,9,-5,8,-4,-6,-3,-3,10,-6,-6,-2,-1,6,-4,-7,10,-2,2,2,10,7,5,-6,5,-8,2,-8,6,-7,5,-7,9,-9,9,9,9,5,-9,1,-7,-6,2,-2,-8,-9,4,-7,7,-5,7,-6,-3,10,-3,5,1,9,-5,-2,-1,-5,8,9,8,-2,10,-1,10,-3,4,3,9,-9,-4,-7,-3,-1,4,6,3,-5,7,-4,-9,10,-6,1,6,10,-2,-6,-1,7,4,-5,3,-10,8,-7,-2,2,-1,-5,-4,6,4,-2,8,8,5,9,-5,-8,4,10,4,3,-7,-4,-5,-9,-4,-4,10,-6,-7,-5,-5,-3,-10,-4,7,4,6,-2,-10,-2,4,9,-7,-1,2,-7,8,-4,7,5,-5,-5,-6,-4,10,3,1,7,6,4,-3,5,-5,10,-6,5,1,-4,8,3,5,1,-7,4,8,3,3,1,-6,-9,5,6,1,-2,10,-9,3,-1,-10,-4,-4,-8,-5,-4,-1,1,-4,-1,-7,-6,-2,1,4,-4,8,-1,-6,-9,9,10,-6,-5,10,-7,-2,-5,7,8,10,6,-1,-10,5,8,5,-5,10,3,-7,-6,-1,-3,-9,-10,2,-6,-2,-2,8,-2,-7,-5,-10,-7,-7,7,-6,-8,1,3,-5,-8,5,-5,-1,7,-5,-7,1,1,-6,7,9,8,-7,-5,8,-9,-7,-8,-1,-6,-7,3,-6,-7,-5,6,-2,-5,-5,-9,-6,-8,3,9,2,2,10,-9,-2,-3,-1,-2,-5,-1,-7,-3,-1,6,-8,-9,4,-2,-7,-3,7,5,-6,2,3,-10,-4,-3,-8,8,-4,8,8,-2,-1,5,2,-8,8,8,3,-2,-4,1,-4,8,8,7,4,-5,6,-4,4,7,-2,-3,-6,2,-4,10,4,7,1,-9,5,1,4,4,-9,-9,-7,-6,1,-10,10,2,-7,-5,-5,3,-6,5], dtype = "uint64")#candidate|4415|(1248,)|const|uint64
call_4413 = relay.TupleGetItem(func_2999_call(relay.reshape(const_4414.astype('int32'), [7, 8, 9]), relay.reshape(const_4414.astype('int32'), [7, 8, 9]), relay.reshape(const_4415.astype('uint64'), [312, 4]), ), 4)
call_4416 = relay.TupleGetItem(func_3003_call(relay.reshape(const_4414.astype('int32'), [7, 8, 9]), relay.reshape(const_4414.astype('int32'), [7, 8, 9]), relay.reshape(const_4415.astype('uint64'), [312, 4]), ), 4)
func_341_call = mod.get_global_var('func_341')
func_343_call = mutated_mod.get_global_var('func_343')
call_4417 = relay.TupleGetItem(func_341_call(relay.reshape(call_4413.astype('uint64'), [1248,])), 1)
call_4418 = relay.TupleGetItem(func_343_call(relay.reshape(call_4413.astype('uint64'), [1248,])), 1)
bop_4419 = relay.right_shift(var_4407.astype('uint8'), relay.reshape(bop_4408.astype('uint8'), relay.shape_of(var_4407))) # shape=(8, 12, 14)
bop_4422 = relay.right_shift(var_4407.astype('uint8'), relay.reshape(bop_4411.astype('uint8'), relay.shape_of(var_4407))) # shape=(8, 12, 14)
var_4439 = relay.var("var_4439", dtype = "uint64", shape = (312, 4))#candidate|4439|(312, 4)|var|uint64
bop_4440 = relay.equal(call_4413.astype('bool'), relay.reshape(var_4439.astype('bool'), relay.shape_of(call_4413))) # shape=(312, 4)
bop_4443 = relay.equal(call_4416.astype('bool'), relay.reshape(var_4439.astype('bool'), relay.shape_of(call_4416))) # shape=(312, 4)
bop_4456 = relay.bitwise_or(bop_4440.astype('int16'), relay.reshape(var_4439.astype('int16'), relay.shape_of(bop_4440))) # shape=(312, 4)
bop_4459 = relay.bitwise_or(bop_4443.astype('int16'), relay.reshape(var_4439.astype('int16'), relay.shape_of(bop_4443))) # shape=(312, 4)
func_4294_call = mod.get_global_var('func_4294')
func_4296_call = mutated_mod.get_global_var('func_4296')
call_4465 = relay.TupleGetItem(func_4294_call(), 0)
call_4466 = relay.TupleGetItem(func_4296_call(), 0)
bop_4467 = relay.less_equal(call_4413.astype('bool'), relay.reshape(var_4439.astype('bool'), relay.shape_of(call_4413))) # shape=(312, 4)
bop_4470 = relay.less_equal(call_4416.astype('bool'), relay.reshape(var_4439.astype('bool'), relay.shape_of(call_4416))) # shape=(312, 4)
output = relay.Tuple([const_4414,const_4415,call_4417,bop_4419,bop_4456,call_4465,bop_4467,])
output2 = relay.Tuple([const_4414,const_4415,call_4418,bop_4422,bop_4459,call_4466,bop_4470,])
func_4476 = relay.Function([var_4407,var_4439,], output)
mod['func_4476'] = func_4476
mod = relay.transform.InferType()(mod)
mutated_mod['func_4476'] = func_4476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4476_call = mutated_mod.get_global_var('func_4476')
var_4478 = relay.var("var_4478", dtype = "float32", shape = (8, 12, 14))#candidate|4478|(8, 12, 14)|var|float32
var_4479 = relay.var("var_4479", dtype = "uint64", shape = (312, 4))#candidate|4479|(312, 4)|var|uint64
call_4477 = func_4476_call(var_4478,var_4479,)
output = call_4477
func_4480 = relay.Function([var_4478,var_4479,], output)
mutated_mod['func_4480'] = func_4480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3764_call = mod.get_global_var('func_3764')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_4509 = func_3764_call()
call_4510 = func_3764_call()
var_4546 = relay.var("var_4546", dtype = "float32", shape = (8, 12, 3))#candidate|4546|(8, 12, 3)|var|float32
bop_4547 = relay.right_shift(call_4509.astype('uint32'), var_4546.astype('uint32')) # shape=(8, 12, 3)
bop_4550 = relay.right_shift(call_4510.astype('uint32'), var_4546.astype('uint32')) # shape=(8, 12, 3)
output = relay.Tuple([bop_4547,])
output2 = relay.Tuple([bop_4550,])
func_4555 = relay.Function([var_4546,], output)
mod['func_4555'] = func_4555
mod = relay.transform.InferType()(mod)
var_4556 = relay.var("var_4556", dtype = "float32", shape = (8, 12, 3))#candidate|4556|(8, 12, 3)|var|float32
output = func_4555(var_4556)
func_4557 = relay.Function([var_4556], output)
mutated_mod['func_4557'] = func_4557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3764_call = mod.get_global_var('func_3764')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_4570 = func_3764_call()
call_4571 = func_3764_call()
func_4103_call = mod.get_global_var('func_4103')
func_4104_call = mutated_mod.get_global_var('func_4104')
call_4581 = relay.TupleGetItem(func_4103_call(), 0)
call_4582 = relay.TupleGetItem(func_4104_call(), 0)
output = relay.Tuple([call_4570,call_4581,])
output2 = relay.Tuple([call_4571,call_4582,])
func_4593 = relay.Function([], output)
mod['func_4593'] = func_4593
mod = relay.transform.InferType()(mod)
mutated_mod['func_4593'] = func_4593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4593_call = mutated_mod.get_global_var('func_4593')
call_4594 = func_4593_call()
output = call_4594
func_4595 = relay.Function([], output)
mutated_mod['func_4595'] = func_4595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3871_call = mod.get_global_var('func_3871')
func_3873_call = mutated_mod.get_global_var('func_3873')
call_4640 = func_3871_call()
call_4641 = func_3871_call()
output = relay.Tuple([call_4640,])
output2 = relay.Tuple([call_4641,])
func_4677 = relay.Function([], output)
mod['func_4677'] = func_4677
mod = relay.transform.InferType()(mod)
mutated_mod['func_4677'] = func_4677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4677_call = mutated_mod.get_global_var('func_4677')
call_4678 = func_4677_call()
output = call_4678
func_4679 = relay.Function([], output)
mutated_mod['func_4679'] = func_4679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4677_call = mod.get_global_var('func_4677')
func_4679_call = mutated_mod.get_global_var('func_4679')
call_4705 = relay.TupleGetItem(func_4677_call(), 0)
call_4706 = relay.TupleGetItem(func_4679_call(), 0)
var_4707 = relay.var("var_4707", dtype = "float32", shape = (8, 12, 1))#candidate|4707|(8, 12, 1)|var|float32
bop_4708 = relay.right_shift(call_4705.astype('uint8'), relay.reshape(var_4707.astype('uint8'), relay.shape_of(call_4705))) # shape=(8, 12, 1)
bop_4711 = relay.right_shift(call_4706.astype('uint8'), relay.reshape(var_4707.astype('uint8'), relay.shape_of(call_4706))) # shape=(8, 12, 1)
output = bop_4708
output2 = bop_4711
func_4714 = relay.Function([var_4707,], output)
mod['func_4714'] = func_4714
mod = relay.transform.InferType()(mod)
mutated_mod['func_4714'] = func_4714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4715 = relay.var("var_4715", dtype = "float32", shape = (8, 12, 1))#candidate|4715|(8, 12, 1)|var|float32
func_4714_call = mutated_mod.get_global_var('func_4714')
call_4716 = func_4714_call(var_4715)
output = call_4716
func_4717 = relay.Function([var_4715], output)
mutated_mod['func_4717'] = func_4717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_257_call = mod.get_global_var('func_257')
func_259_call = mutated_mod.get_global_var('func_259')
call_4738 = relay.TupleGetItem(func_257_call(), 0)
call_4739 = relay.TupleGetItem(func_259_call(), 0)
func_3261_call = mod.get_global_var('func_3261')
func_3263_call = mutated_mod.get_global_var('func_3263')
call_4784 = relay.TupleGetItem(func_3261_call(), 0)
call_4785 = relay.TupleGetItem(func_3263_call(), 0)
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_4789 = func_3515_call()
call_4790 = func_3515_call()
bop_4793 = relay.bitwise_and(call_4738.astype('int16'), call_4789.astype('int16')) # shape=(8, 12, 1248)
bop_4796 = relay.bitwise_and(call_4739.astype('int16'), call_4790.astype('int16')) # shape=(8, 12, 1248)
func_282_call = mod.get_global_var('func_282')
func_283_call = mutated_mod.get_global_var('func_283')
call_4802 = relay.TupleGetItem(func_282_call(), 0)
call_4803 = relay.TupleGetItem(func_283_call(), 0)
const_4818 = relay.const([[[-7.941021,1.574935,8.602433,-0.523512,-9.374091,9.170183,-5.637051,8.194486,-6.204259,-1.891678,7.434135,-2.045814,-9.393930,5.113324],[4.705742,-1.594413,8.351106,0.695673,-7.311792,-1.395689,-0.419072,-8.693749,2.937224,1.780270,8.222570,-4.465038,8.366319,4.933764],[9.422599,-8.146316,-2.628870,-9.142115,-6.685266,-0.977562,-8.431152,4.111032,9.416480,4.466672,8.395459,-6.920685,-5.330067,2.092636],[9.648422,-7.963062,1.174916,-7.771370,6.325579,7.135388,-1.597524,-3.621293,-7.696108,4.815883,2.291777,-8.016692,-8.079475,-4.083558],[3.103206,-3.771633,-1.797287,8.149064,1.746200,0.681395,3.979099,-1.480882,7.146168,-6.371529,-2.300258,4.862875,-4.457301,-2.355296],[-5.460095,8.329722,-3.413128,2.278943,-2.716301,-1.178856,-3.139869,0.193468,8.303389,6.463677,-6.410451,-6.079972,-7.205772,9.954578],[-1.191834,3.464374,-3.388479,-9.277030,-8.373446,0.387046,8.100953,-7.372278,-7.744336,4.258014,9.169206,-1.967261,-4.305960,-7.021028],[-2.118559,7.114875,8.266038,4.846207,0.781600,-7.598389,2.345907,8.774517,1.636691,-3.230701,1.599725,7.840552,0.464804,-4.176088],[5.549704,-5.962768,-1.163091,-5.144508,-7.846005,9.662616,5.340587,4.073241,-0.644376,8.820074,-1.475356,1.928894,4.197272,-1.626609],[-4.935312,-1.119299,1.772738,1.030176,-2.200933,2.757061,1.712031,6.786728,-0.051710,-1.679387,2.062014,-1.737697,8.314286,8.996033],[0.348718,5.145464,-1.058310,9.943206,-1.953136,-4.377836,-4.249557,8.101099,-4.619897,-1.296836,6.828018,4.409546,0.444239,-6.165379],[9.073766,1.498868,3.867208,-3.136995,2.002522,2.551350,-1.657217,-2.874341,8.109694,3.243680,-2.062832,-8.475921,-3.965028,-1.499297]],[[-5.971863,-4.035549,-0.865039,-0.130909,6.211603,-7.318346,-5.869966,-8.881251,0.033749,9.030944,1.553172,-2.625442,-2.639776,1.602389],[2.507716,-2.057242,7.322170,7.940812,1.782798,7.183175,9.284136,1.008108,-8.913009,-7.414429,-6.744630,-0.953053,-9.066194,-0.915023],[-1.086757,8.769557,5.180692,3.352714,2.374930,6.517683,-5.862198,4.038792,-7.102847,0.010913,-1.348752,-9.019602,8.171202,-7.573355],[0.090001,-6.872730,9.092989,7.296820,-7.011225,4.083314,-5.101369,-3.758733,8.097688,-4.896705,-5.443972,-2.729018,1.568215,8.952540],[-9.074955,5.335883,-9.038326,4.114445,0.492697,3.797481,1.616144,9.248096,3.161898,-3.303973,4.924476,-1.741871,-7.561960,7.868953],[1.093297,-0.826992,-6.645882,2.718582,5.853843,-7.920567,-9.096890,-5.794063,-5.668803,6.928391,3.677865,0.949885,-5.564561,-3.436058],[-6.134041,-7.966654,3.351187,3.676878,-6.609892,-5.226252,0.271993,9.597043,-3.466507,1.211250,6.495753,-0.159662,-0.430617,-9.430574],[1.718588,6.418184,-0.594741,2.675846,-1.692421,4.633291,-5.072822,0.256828,2.496134,9.291275,-4.795952,-3.316033,6.828499,7.937659],[-7.692472,-9.816319,-7.188663,-8.664285,6.169422,-8.119687,-4.297614,0.030866,-1.574492,0.897984,5.710682,9.661652,0.350696,0.814739],[5.830150,1.082515,-3.261603,4.309426,8.424388,9.867515,-0.590680,5.952035,-4.408784,8.620600,0.029945,-6.732054,4.223370,-3.262689],[7.096326,3.766163,-4.489337,1.843224,-1.066168,-4.606153,-1.950435,-0.427242,4.659719,0.801840,-6.891728,-7.380994,7.581862,-6.760271],[8.701030,-7.425271,8.709867,5.172145,-4.965111,-0.803181,1.150335,-2.127407,8.036348,-8.220339,-8.631843,-6.744681,-4.661576,-4.236418]],[[5.249828,-3.874766,-8.849541,1.552814,-7.728501,4.807920,3.872316,2.997726,-0.065581,-3.234560,2.302922,3.760828,8.297435,-3.741470],[-8.934849,1.938008,-2.960089,-7.242161,-3.264569,-0.249340,-5.684229,2.734972,8.719175,3.736645,1.687989,4.312291,-0.327305,-7.476862],[-2.594418,-9.797956,-8.745301,-6.245892,6.568284,9.870056,4.919437,3.034094,9.106818,5.655643,4.272359,8.261333,1.600635,9.506958],[1.034073,9.848323,4.984852,-4.931204,2.156854,-1.387591,-3.810289,8.318314,5.780578,1.876885,1.159155,3.853496,9.038993,1.030347],[-3.228937,2.356245,2.135563,5.321349,-3.127028,-9.846491,4.446399,-3.622985,-9.165432,2.377503,-8.393826,-8.514181,1.841791,8.583189],[-5.684450,9.801315,0.719116,-4.785559,2.482096,1.679539,-4.013880,-6.232039,-7.999160,1.501914,-8.095666,-5.136169,9.427913,-3.881880],[2.602943,-3.360448,6.569674,-8.124585,-7.552703,7.827487,-9.340299,0.713530,-2.630537,-0.564441,-1.543210,7.876446,-9.617632,-6.360491],[-3.511823,6.729520,-3.417550,-1.341918,3.588379,-9.174585,2.275109,-9.588885,7.777700,-3.498187,1.183955,-9.290093,-1.952445,-7.994184],[-2.138221,9.103816,4.817492,-8.135786,-0.049330,7.530299,1.521353,0.620805,7.842040,-5.383091,8.778992,-6.754408,-0.781523,-6.377590],[-0.248955,7.213067,5.471428,-3.134271,4.306917,-5.239982,1.623252,-3.384473,-3.650060,6.177311,4.140643,-3.755392,6.426157,0.834238],[6.826981,-1.498679,-4.087575,-7.041459,-0.700917,-3.661151,9.060017,6.833664,2.446555,6.336407,1.212741,7.118256,1.754684,2.193375],[7.026045,-3.665322,6.670001,-2.696495,-5.325629,0.882056,7.909865,9.437646,5.765987,9.805993,-5.305297,-4.315447,-4.175471,-1.624015]],[[0.398551,-7.668298,-3.819415,6.407546,9.405763,9.123340,8.178601,6.981515,-5.195883,1.144001,9.723357,-9.024691,-4.491913,-5.291838],[6.179802,-3.100567,-8.865431,2.893727,5.108814,-2.803399,-2.896249,-7.108947,4.065894,4.873071,-8.217449,1.183113,5.729795,6.447453],[-0.058699,-3.384975,-9.838348,-2.404690,9.332233,5.584319,-4.560335,-9.545327,2.109269,-7.147623,-4.092701,8.992615,4.285613,-0.830760],[-4.757075,-0.219579,8.528080,-5.081780,3.180254,3.809483,-7.510089,0.745122,-0.506250,-1.346908,-7.417029,-7.824775,-9.941627,-1.850239],[-7.359752,-1.463715,-8.653809,0.093183,-6.219729,-7.582469,-0.762109,-4.293097,-8.148972,-1.579345,2.645733,6.635695,1.720375,-2.910138],[0.018799,4.154539,-7.554479,-6.834800,-8.245535,-7.737972,-6.741233,-7.750234,-0.217903,6.902680,-6.419308,-6.396291,-4.082726,-4.528241],[9.575440,9.511794,2.926864,8.033495,3.940342,-4.596454,2.560690,-7.236637,8.014841,9.134464,1.953594,3.411045,-2.362683,-5.142204],[0.543717,-1.170228,8.072655,2.372978,0.856124,-3.220461,-8.567684,-8.402926,-5.364727,0.100459,-9.984959,6.964352,-6.282729,3.935746],[-1.645277,5.364762,-0.365322,3.521121,-5.150437,-3.498031,4.233328,-0.708965,-9.186387,3.888318,6.010032,-8.278330,5.142856,5.928749],[-9.643031,-6.356358,-6.406457,-7.620218,-1.107816,1.473868,-3.863460,-2.466075,-7.563944,-7.462597,7.702426,3.529122,-5.863782,-4.691936],[-8.661154,0.241289,0.241204,5.564299,-2.740581,-3.578335,2.146242,0.071008,-9.951903,4.343526,-0.109196,2.163983,-7.755786,-7.174988],[-1.359243,-4.982076,-2.424841,-0.850399,-6.907519,-4.490930,1.919724,9.332771,-9.269054,0.938954,-4.687883,3.449009,-8.824430,-6.657872]],[[-2.932904,9.417631,-9.479185,2.016988,-4.188136,-4.901622,9.779442,4.959761,6.062769,-6.205030,6.216672,-7.257776,-6.828946,-9.916461],[-2.846572,8.766937,9.142108,-4.334668,6.729448,-3.309928,7.824047,-7.723746,4.320255,3.505260,-7.639555,-7.117201,8.712704,2.984066],[2.117437,-9.831240,-6.847190,-9.444143,4.092539,4.875732,-2.208762,-9.755154,-7.678847,-1.996918,-3.602602,1.338732,4.362202,-2.892412],[-7.394200,4.218740,1.292959,-3.924193,5.409465,6.995604,1.723654,7.365734,-0.903544,4.516181,-5.609758,7.442925,3.600311,0.290902],[-2.923415,-6.894738,0.014466,-8.955641,9.607265,8.353052,3.936485,1.127121,2.425906,-5.524169,-3.555275,0.705641,-6.102637,9.259673],[2.497231,-3.545729,-5.584664,-1.647072,-9.139406,-1.429489,4.085567,4.992219,-8.880314,9.035507,2.855518,-8.347854,9.089046,3.097668],[-0.731063,-9.699552,1.793949,0.655668,5.730514,-4.684920,1.869865,3.516774,-4.316746,7.236165,-5.818826,-6.132553,4.314557,2.396447],[-6.767150,-7.580831,-4.311898,-9.080780,1.538496,8.935433,-6.771650,9.196126,3.123509,-6.581802,3.311537,-3.122260,8.837059,6.284559],[3.675807,7.619329,6.625014,-1.363661,-7.690744,-6.363387,4.121969,-4.539510,1.748267,9.113531,9.266054,-4.892662,5.944105,-5.999525],[2.976812,1.352897,-1.560282,3.302187,-9.497502,5.267955,-2.227236,2.970286,-6.891215,0.172448,4.560467,-7.692851,5.920324,9.937046],[8.845218,2.163441,3.860063,-3.763442,0.854847,-5.398410,5.017239,7.789795,9.494540,5.928712,-2.208843,2.326817,0.814236,-3.348404],[-1.297690,-4.211434,4.486840,-7.367904,-7.460114,9.828780,-7.548923,-2.219954,4.127454,-2.377555,-2.160510,-0.997558,-1.942863,-4.232934]],[[4.721236,-4.719610,-4.132110,-4.592589,-4.196909,-6.473886,3.964345,2.812331,9.256353,8.764043,2.366857,7.760076,-0.018656,-9.099568],[4.964418,-5.672501,-4.947043,-9.187909,0.968420,-4.341555,-0.309423,3.597968,-8.797176,0.971266,-1.043046,2.403018,-2.917035,2.817337],[-8.032793,-3.301493,-0.652250,8.962606,2.893868,2.017475,-0.007874,4.539285,-7.630508,-0.796321,2.701076,4.440012,-9.403225,3.259031],[2.166988,8.989055,-5.252342,-8.904620,6.315919,3.569472,7.898787,1.557042,4.058950,-7.492546,6.969045,-6.293032,2.724112,-7.332158],[-5.881140,-5.627988,-2.943876,-6.072243,1.947015,8.925207,-8.155762,-3.858849,9.312004,0.070128,-4.210564,2.788945,-7.755710,-7.255260],[2.712855,9.165703,-4.091738,1.168691,-2.940669,5.517936,-2.975605,-1.113528,-3.679448,6.289785,-6.928033,-6.922452,-4.809946,4.091105],[6.703582,-3.280790,-5.533293,4.117056,-1.585065,-7.297671,-7.276982,-1.991122,-0.746986,8.688901,3.787356,9.859644,8.391972,-5.678891],[2.672708,-7.732890,6.906123,4.795581,-1.364121,-3.014760,9.610950,0.560603,9.998362,3.591286,-3.461419,-2.112428,7.907654,-5.801204],[5.610840,-4.323287,-9.370427,9.195608,-2.267342,5.446947,6.171675,3.139468,-8.088193,-9.837953,-7.553182,-7.788933,-5.725409,9.077038],[-8.355613,-5.865391,-8.568412,-2.886977,6.928063,0.015726,-6.329933,0.215864,-3.288125,-3.649990,8.540919,-1.798961,-1.357948,2.642535],[5.044695,-1.542640,-4.565167,2.907026,-3.112353,2.676435,-1.378571,5.581641,7.525183,-5.767586,1.191414,6.050463,-7.287175,-4.850487],[-2.358873,6.215146,-2.681591,4.873741,9.021069,-4.229591,-5.701532,7.010507,-8.643697,4.503438,9.522660,1.413658,-2.228846,-5.881726]],[[8.333227,-3.343741,-9.092537,7.032556,7.908661,2.117033,-4.694118,-1.760230,9.967207,2.330457,-9.273980,3.515262,-4.767662,-7.043614],[3.973189,8.911772,-8.967767,-5.129885,-5.227737,0.812861,-6.746475,-7.792075,-5.087926,7.208289,-0.308126,3.034388,3.379208,7.804022],[-1.688219,4.301934,-4.953544,-3.895130,-7.680133,9.902744,-9.176640,-1.983656,8.568642,6.689755,-1.934836,1.404700,5.624770,7.562677],[9.211708,9.124110,2.269764,-0.877823,2.137824,-6.500908,7.021935,-7.947206,-5.200591,4.312653,6.255934,-3.632291,6.194438,8.959279],[-5.451408,-0.396028,9.935691,0.908381,-6.158358,-4.463621,-5.517875,7.438999,-4.401307,-7.350127,-5.981759,-8.696699,-5.142248,0.358723],[-6.641268,6.546611,-2.319533,-2.688924,0.601107,-5.792682,8.593954,6.223426,1.705272,-2.268950,1.162054,-9.845401,-2.815038,5.701484],[8.833832,-7.383227,3.765607,7.176528,2.473273,4.843735,3.797562,-7.660939,-5.722980,4.843961,-4.883256,1.516138,-4.614608,-0.180355],[-9.070233,0.748017,-0.920223,1.108701,0.600894,4.244256,5.522732,0.013707,-8.172648,6.612475,-4.642088,-6.038606,-7.972833,-8.462962],[-5.134655,4.736363,-3.651944,-2.711876,6.464468,3.041234,-1.043074,0.399881,0.352032,9.253521,3.052624,5.327333,1.757415,-7.821492],[7.726240,-5.817766,6.933445,4.853844,-3.765141,4.492240,8.167910,9.495861,7.551441,9.836015,2.516460,4.435219,-7.124411,-7.494054],[-2.432262,2.847729,5.681585,7.927397,-2.454240,7.840473,6.687503,-3.519834,9.897470,-8.955038,-6.078329,9.186206,-1.929077,-0.537484],[9.424632,-7.214174,-0.734106,-2.874157,8.710016,-6.932888,-4.975089,4.820953,-3.180108,-6.195946,3.516842,5.271889,9.784066,0.649435]],[[6.671562,-2.521632,5.593777,-1.018926,-5.221043,9.738863,0.609390,4.256071,8.096061,3.080355,-8.025535,0.175447,-4.268251,-7.696717],[-6.998225,-6.219202,0.247345,-0.713277,8.534196,-4.984271,4.836372,-3.084409,-7.505026,-2.490017,-3.330215,2.233015,-5.748042,-6.970544],[2.998058,-5.300073,-9.510015,3.516480,0.526546,-4.268323,3.681168,-4.127337,7.631069,3.717151,3.324845,6.351863,2.416068,-5.369852],[-2.390369,-9.340089,6.866393,3.263714,4.357108,-6.572651,-9.402163,-6.784256,8.471406,7.330927,8.498841,-9.858425,-0.812892,-7.878407],[2.903749,6.398209,7.427853,4.606433,-9.457669,-3.685449,-3.535679,-9.975867,-0.124710,-4.878456,-7.101473,-6.581682,-0.028086,-4.061488],[-8.476319,-9.078699,7.454007,4.026942,6.891298,-4.751928,6.228747,-2.997799,8.565151,5.195660,5.166951,3.313186,7.909986,0.811794],[1.526476,-8.558793,-3.316029,3.117848,9.491125,-6.245334,1.854602,-5.612021,4.035294,-3.591108,-5.414168,-9.028839,7.436056,1.605280],[3.794288,-8.881137,-9.405055,1.525570,9.677770,-0.404647,6.290330,-1.695007,4.917989,-6.545325,7.793112,6.888166,-3.403188,7.906431],[-8.459028,-9.786440,0.051656,-2.025556,1.384536,-2.670195,-4.974289,0.919247,9.137927,-5.155931,1.235010,9.207536,-7.330169,-7.092926],[5.445785,-5.583553,-3.189946,8.345741,-6.819245,0.250073,3.028094,-1.865063,-4.497241,-7.877277,5.226315,0.729075,0.169355,6.195720],[1.751064,-3.532615,5.440711,-8.807366,6.583955,5.584679,5.296121,5.772622,-4.063286,-2.576045,-4.648586,-1.296523,-9.462525,-5.247951],[0.134975,2.944307,6.882795,6.050198,-8.117087,-0.819506,7.810601,5.066247,-1.447685,-8.737173,8.775988,0.472803,3.132666,8.462872]]], dtype = "float32")#candidate|4818|(8, 12, 14)|const|float32
bop_4819 = relay.maximum(call_4738.astype('uint16'), const_4818.astype('uint16')) # shape=(8, 12, 14)
bop_4822 = relay.maximum(call_4739.astype('uint16'), const_4818.astype('uint16')) # shape=(8, 12, 14)
bop_4830 = relay.subtract(const_4818.astype('float32'), call_4738.astype('float32')) # shape=(8, 12, 14)
bop_4833 = relay.subtract(const_4818.astype('float32'), call_4739.astype('float32')) # shape=(8, 12, 14)
output = relay.Tuple([call_4784,bop_4793,call_4802,bop_4819,bop_4830,])
output2 = relay.Tuple([call_4785,bop_4796,call_4803,bop_4822,bop_4833,])
func_4835 = relay.Function([], output)
mod['func_4835'] = func_4835
mod = relay.transform.InferType()(mod)
output = func_4835()
func_4836 = relay.Function([], output)
mutated_mod['func_4836'] = func_4836
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4864 = relay.var("var_4864", dtype = "int32", shape = (16, 3, 3))#candidate|4864|(16, 3, 3)|var|int32
var_4865 = relay.var("var_4865", dtype = "int32", shape = (16, 3, 3))#candidate|4865|(16, 3, 3)|var|int32
bop_4866 = relay.logical_xor(var_4864.astype('int32'), relay.reshape(var_4865.astype('int32'), relay.shape_of(var_4864))) # shape=(16, 3, 3)
output = bop_4866
output2 = bop_4866
func_4869 = relay.Function([var_4864,var_4865,], output)
mod['func_4869'] = func_4869
mod = relay.transform.InferType()(mod)
var_4870 = relay.var("var_4870", dtype = "int32", shape = (16, 3, 3))#candidate|4870|(16, 3, 3)|var|int32
var_4871 = relay.var("var_4871", dtype = "int32", shape = (16, 3, 3))#candidate|4871|(16, 3, 3)|var|int32
output = func_4869(var_4870,var_4871,)
func_4872 = relay.Function([var_4870,var_4871,], output)
mutated_mod['func_4872'] = func_4872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3105_call = mod.get_global_var('func_3105')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_4895 = relay.TupleGetItem(func_3105_call(), 0)
call_4896 = relay.TupleGetItem(func_3106_call(), 0)
output = call_4895
output2 = call_4896
func_4937 = relay.Function([], output)
mod['func_4937'] = func_4937
mod = relay.transform.InferType()(mod)
output = func_4937()
func_4938 = relay.Function([], output)
mutated_mod['func_4938'] = func_4938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_282_call = mod.get_global_var('func_282')
func_283_call = mutated_mod.get_global_var('func_283')
call_4982 = relay.TupleGetItem(func_282_call(), 0)
call_4983 = relay.TupleGetItem(func_283_call(), 0)
output = call_4982
output2 = call_4983
func_4986 = relay.Function([], output)
mod['func_4986'] = func_4986
mod = relay.transform.InferType()(mod)
output = func_4986()
func_4987 = relay.Function([], output)
mutated_mod['func_4987'] = func_4987
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4995 = relay.const([[[-5.577856,-3.672417,8.975436,0.331553,3.844732,-1.554584],[-4.143873,-5.508148,-2.090042,-4.718600,0.323950,6.119292],[-0.805820,-9.979354,9.831812,8.687382,4.203505,7.177293],[8.488835,-9.562618,-5.260071,-1.151416,9.458355,-9.685416]],[[-2.038782,8.972405,4.158463,-4.867856,-9.355830,-3.338563],[-5.098004,4.348813,-9.585155,4.818704,-9.472694,-6.090086],[-0.487052,6.453261,0.578107,-5.824912,7.428444,1.220922],[-4.853743,-4.167172,6.614987,-5.129663,-7.333891,0.828292]],[[-6.131697,-4.399211,6.531635,1.053888,8.969385,4.558574],[-7.239746,-7.220586,0.947977,4.347676,3.192031,-4.255209],[-5.246626,9.828788,2.210236,2.585713,2.561677,-7.471807],[-3.612887,-7.278866,-4.477220,-7.899764,1.649558,-9.321349]]], dtype = "float64")#candidate|4995|(3, 4, 6)|const|float64
const_4996 = relay.const([[[-8.007151,-3.824389,1.681403,8.486363,3.602939,7.381192],[1.532219,0.266134,4.951170,8.710223,0.608300,5.376674],[5.836708,5.783675,7.776869,0.424088,7.745641,8.569713],[-2.677396,4.343740,0.440578,3.580747,1.623121,-1.332679]],[[-9.299979,3.445665,2.709578,-9.106450,7.237983,6.509501],[-9.355639,1.601977,-1.881483,-8.628732,8.966779,-5.436168],[-8.657591,0.376061,-4.675491,6.818399,-8.668678,2.744568],[0.347453,-5.505776,2.849559,-2.947016,-7.227824,2.947426]],[[-2.365959,9.188092,-8.348355,-1.720989,3.894240,-5.669635],[8.445290,4.627138,-2.472830,6.827866,-5.887488,6.128647],[6.989718,8.414373,3.101418,-8.392755,-7.851007,4.955013],[-6.459744,5.702550,-6.223560,9.288085,2.644199,3.389565]]], dtype = "float64")#candidate|4996|(3, 4, 6)|const|float64
bop_4997 = relay.maximum(const_4995.astype('float64'), relay.reshape(const_4996.astype('float64'), relay.shape_of(const_4995))) # shape=(3, 4, 6)
output = relay.Tuple([bop_4997,])
output2 = relay.Tuple([bop_4997,])
func_5000 = relay.Function([], output)
mod['func_5000'] = func_5000
mod = relay.transform.InferType()(mod)
mutated_mod['func_5000'] = func_5000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5000_call = mutated_mod.get_global_var('func_5000')
call_5001 = func_5000_call()
output = call_5001
func_5002 = relay.Function([], output)
mutated_mod['func_5002'] = func_5002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5034 = relay.var("var_5034", dtype = "float64", shape = (11, 13, 14))#candidate|5034|(11, 13, 14)|var|float64
uop_5035 = relay.exp(var_5034.astype('float64')) # shape=(11, 13, 14)
output = relay.Tuple([uop_5035,])
output2 = relay.Tuple([uop_5035,])
func_5048 = relay.Function([var_5034,], output)
mod['func_5048'] = func_5048
mod = relay.transform.InferType()(mod)
var_5049 = relay.var("var_5049", dtype = "float64", shape = (11, 13, 14))#candidate|5049|(11, 13, 14)|var|float64
output = func_5048(var_5049)
func_5050 = relay.Function([var_5049], output)
mutated_mod['func_5050'] = func_5050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4677_call = mod.get_global_var('func_4677')
func_4679_call = mutated_mod.get_global_var('func_4679')
call_5068 = relay.TupleGetItem(func_4677_call(), 0)
call_5069 = relay.TupleGetItem(func_4679_call(), 0)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_5072 = relay.TupleGetItem(func_1109_call(), 1)
call_5073 = relay.TupleGetItem(func_1111_call(), 1)
uop_5079 = relay.exp(call_5072.astype('float64')) # shape=(8, 12, 1)
uop_5081 = relay.exp(call_5073.astype('float64')) # shape=(8, 12, 1)
output = relay.Tuple([call_5068,uop_5079,])
output2 = relay.Tuple([call_5069,uop_5081,])
func_5082 = relay.Function([], output)
mod['func_5082'] = func_5082
mod = relay.transform.InferType()(mod)
mutated_mod['func_5082'] = func_5082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5082_call = mutated_mod.get_global_var('func_5082')
call_5083 = func_5082_call()
output = call_5083
func_5084 = relay.Function([], output)
mutated_mod['func_5084'] = func_5084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5082_call = mod.get_global_var('func_5082')
func_5084_call = mutated_mod.get_global_var('func_5084')
call_5085 = relay.TupleGetItem(func_5082_call(), 0)
call_5086 = relay.TupleGetItem(func_5084_call(), 0)
output = call_5085
output2 = call_5086
func_5100 = relay.Function([], output)
mod['func_5100'] = func_5100
mod = relay.transform.InferType()(mod)
output = func_5100()
func_5101 = relay.Function([], output)
mutated_mod['func_5101'] = func_5101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_5175 = func_3515_call()
call_5176 = func_3515_call()
uop_5187 = relay.cosh(call_5175.astype('float64')) # shape=(1, 1248)
uop_5189 = relay.cosh(call_5176.astype('float64')) # shape=(1, 1248)
output = uop_5187
output2 = uop_5189
func_5199 = relay.Function([], output)
mod['func_5199'] = func_5199
mod = relay.transform.InferType()(mod)
mutated_mod['func_5199'] = func_5199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5199_call = mutated_mod.get_global_var('func_5199')
call_5200 = func_5199_call()
output = call_5200
func_5201 = relay.Function([], output)
mutated_mod['func_5201'] = func_5201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4284_call = mod.get_global_var('func_4284')
func_4286_call = mutated_mod.get_global_var('func_4286')
call_5234 = func_4284_call()
call_5235 = func_4284_call()
output = call_5234
output2 = call_5235
func_5241 = relay.Function([], output)
mod['func_5241'] = func_5241
mod = relay.transform.InferType()(mod)
mutated_mod['func_5241'] = func_5241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5241_call = mutated_mod.get_global_var('func_5241')
call_5242 = func_5241_call()
output = call_5242
func_5243 = relay.Function([], output)
mutated_mod['func_5243'] = func_5243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1899_call = mod.get_global_var('func_1899')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_5259 = relay.TupleGetItem(func_1899_call(), 0)
call_5260 = relay.TupleGetItem(func_1901_call(), 0)
output = call_5259
output2 = call_5260
func_5265 = relay.Function([], output)
mod['func_5265'] = func_5265
mod = relay.transform.InferType()(mod)
output = func_5265()
func_5266 = relay.Function([], output)
mutated_mod['func_5266'] = func_5266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5290 = relay.var("var_5290", dtype = "float64", shape = (15, 3, 5))#candidate|5290|(15, 3, 5)|var|float64
uop_5291 = relay.erf(var_5290.astype('float64')) # shape=(15, 3, 5)
func_4199_call = mod.get_global_var('func_4199')
func_4201_call = mutated_mod.get_global_var('func_4201')
var_5298 = relay.var("var_5298", dtype = "float32", shape = (1536,))#candidate|5298|(1536,)|var|float32
call_5297 = relay.TupleGetItem(func_4199_call(relay.reshape(var_5298.astype('float32'), [1536,])), 3)
call_5299 = relay.TupleGetItem(func_4201_call(relay.reshape(var_5298.astype('float32'), [1536,])), 3)
func_4677_call = mod.get_global_var('func_4677')
func_4679_call = mutated_mod.get_global_var('func_4679')
call_5310 = relay.TupleGetItem(func_4677_call(), 0)
call_5311 = relay.TupleGetItem(func_4679_call(), 0)
func_531_call = mod.get_global_var('func_531')
func_534_call = mutated_mod.get_global_var('func_534')
var_5317 = relay.var("var_5317", dtype = "uint64", shape = (1248,))#candidate|5317|(1248,)|var|uint64
call_5316 = relay.TupleGetItem(func_531_call(relay.reshape(var_5317.astype('uint64'), [2, 624])), 3)
call_5318 = relay.TupleGetItem(func_534_call(relay.reshape(var_5317.astype('uint64'), [2, 624])), 3)
func_4103_call = mod.get_global_var('func_4103')
func_4104_call = mutated_mod.get_global_var('func_4104')
call_5320 = relay.TupleGetItem(func_4103_call(), 1)
call_5321 = relay.TupleGetItem(func_4104_call(), 1)
bop_5324 = relay.logical_and(uop_5291.astype('bool'), relay.reshape(var_5290.astype('bool'), relay.shape_of(uop_5291))) # shape=(15, 3, 5)
func_2241_call = mod.get_global_var('func_2241')
func_2242_call = mutated_mod.get_global_var('func_2242')
call_5334 = func_2241_call()
call_5335 = func_2241_call()
uop_5336 = relay.sqrt(var_5317.astype('float64')) # shape=(1248,)
func_1832_call = mod.get_global_var('func_1832')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_5346 = relay.TupleGetItem(func_1832_call(), 1)
call_5347 = relay.TupleGetItem(func_1834_call(), 1)
bop_5350 = relay.less(uop_5336.astype('bool'), call_5346.astype('bool')) # shape=(8, 12, 1248)
bop_5353 = relay.less(uop_5336.astype('bool'), call_5347.astype('bool')) # shape=(8, 12, 1248)
func_5265_call = mod.get_global_var('func_5265')
func_5266_call = mutated_mod.get_global_var('func_5266')
call_5355 = func_5265_call()
call_5356 = func_5265_call()
output = relay.Tuple([call_5297,var_5298,call_5310,call_5316,call_5320,bop_5324,call_5334,bop_5350,call_5355,])
output2 = relay.Tuple([call_5299,var_5298,call_5311,call_5318,call_5321,bop_5324,call_5335,bop_5353,call_5356,])
func_5363 = relay.Function([var_5290,var_5298,var_5317,], output)
mod['func_5363'] = func_5363
mod = relay.transform.InferType()(mod)
var_5364 = relay.var("var_5364", dtype = "float64", shape = (15, 3, 5))#candidate|5364|(15, 3, 5)|var|float64
var_5365 = relay.var("var_5365", dtype = "float32", shape = (1536,))#candidate|5365|(1536,)|var|float32
var_5366 = relay.var("var_5366", dtype = "uint64", shape = (1248,))#candidate|5366|(1248,)|var|uint64
output = func_5363(var_5364,var_5365,var_5366,)
func_5367 = relay.Function([var_5364,var_5365,var_5366,], output)
mutated_mod['func_5367'] = func_5367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3261_call = mod.get_global_var('func_3261')
func_3263_call = mutated_mod.get_global_var('func_3263')
call_5381 = relay.TupleGetItem(func_3261_call(), 0)
call_5382 = relay.TupleGetItem(func_3263_call(), 0)
output = call_5381
output2 = call_5382
func_5389 = relay.Function([], output)
mod['func_5389'] = func_5389
mod = relay.transform.InferType()(mod)
output = func_5389()
func_5390 = relay.Function([], output)
mutated_mod['func_5390'] = func_5390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2108_call = mod.get_global_var('func_2108')
func_2109_call = mutated_mod.get_global_var('func_2109')
call_5403 = relay.TupleGetItem(func_2108_call(), 0)
call_5404 = relay.TupleGetItem(func_2109_call(), 0)
func_2953_call = mod.get_global_var('func_2953')
func_2956_call = mutated_mod.get_global_var('func_2956')
var_5421 = relay.var("var_5421", dtype = "float32", shape = (864,))#candidate|5421|(864,)|var|float32
call_5420 = relay.TupleGetItem(func_2953_call(relay.reshape(var_5421.astype('float32'), [8, 12, 9])), 2)
call_5422 = relay.TupleGetItem(func_2956_call(relay.reshape(var_5421.astype('float32'), [8, 12, 9])), 2)
func_4714_call = mod.get_global_var('func_4714')
func_4717_call = mutated_mod.get_global_var('func_4717')
call_5429 = func_4714_call(relay.reshape(call_5403.astype('float32'), [8, 12, 1]))
call_5430 = func_4714_call(relay.reshape(call_5403.astype('float32'), [8, 12, 1]))
func_2210_call = mod.get_global_var('func_2210')
func_2213_call = mutated_mod.get_global_var('func_2213')
var_5438 = relay.var("var_5438", dtype = "uint64", shape = (1248,))#candidate|5438|(1248,)|var|uint64
call_5437 = relay.TupleGetItem(func_2210_call(relay.reshape(var_5438.astype('uint64'), [1248,])), 5)
call_5439 = relay.TupleGetItem(func_2213_call(relay.reshape(var_5438.astype('uint64'), [1248,])), 5)
output = relay.Tuple([call_5403,call_5420,var_5421,call_5429,call_5437,var_5438,])
output2 = relay.Tuple([call_5404,call_5422,var_5421,call_5430,call_5439,var_5438,])
func_5447 = relay.Function([var_5421,var_5438,], output)
mod['func_5447'] = func_5447
mod = relay.transform.InferType()(mod)
mutated_mod['func_5447'] = func_5447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5447_call = mutated_mod.get_global_var('func_5447')
var_5449 = relay.var("var_5449", dtype = "float32", shape = (864,))#candidate|5449|(864,)|var|float32
var_5450 = relay.var("var_5450", dtype = "uint64", shape = (1248,))#candidate|5450|(1248,)|var|uint64
call_5448 = func_5447_call(var_5449,var_5450,)
output = call_5448
func_5451 = relay.Function([var_5449,var_5450,], output)
mutated_mod['func_5451'] = func_5451
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5518 = relay.var("var_5518", dtype = "float32", shape = (14, 10, 14))#candidate|5518|(14, 10, 14)|var|float32
uop_5519 = relay.log10(var_5518.astype('float32')) # shape=(14, 10, 14)
output = relay.Tuple([uop_5519,])
output2 = relay.Tuple([uop_5519,])
func_5523 = relay.Function([var_5518,], output)
mod['func_5523'] = func_5523
mod = relay.transform.InferType()(mod)
mutated_mod['func_5523'] = func_5523
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5524 = relay.var("var_5524", dtype = "float32", shape = (14, 10, 14))#candidate|5524|(14, 10, 14)|var|float32
func_5523_call = mutated_mod.get_global_var('func_5523')
call_5525 = func_5523_call(var_5524)
output = call_5525
func_5526 = relay.Function([var_5524], output)
mutated_mod['func_5526'] = func_5526
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5557 = relay.const([[[-8,10,-2,-6,-6,-9,-4],[4,-7,-7,3,-7,-10,5],[-5,-4,1,-6,-2,-5,5],[-7,8,-9,4,-10,-3,-10],[-5,7,-3,5,-8,-8,-3],[1,6,-7,1,-1,-3,-4],[8,-9,2,5,10,-9,10],[1,10,-1,9,-1,3,-7],[-3,-3,6,-3,10,4,-5],[8,-10,-9,10,5,8,-4]],[[-7,7,4,10,4,10,9],[-5,5,-2,-4,-5,2,6],[7,-1,10,6,-8,4,10],[-9,8,-5,-9,7,-1,8],[2,3,3,-4,10,7,-6],[3,4,5,5,-4,9,8],[6,3,-1,7,-8,6,-3],[-7,3,7,1,-1,3,1],[-9,-4,-8,-2,1,4,2],[-9,-3,6,-8,5,-6,-8]],[[-4,-3,-9,-7,-3,-7,-10],[-6,-10,-9,-3,9,1,-1],[-10,8,-7,8,-7,4,-6],[4,3,-2,5,4,-8,9],[6,-8,10,-2,-6,-4,7],[-5,-10,-1,-1,6,4,-3],[-2,4,4,-8,-8,1,1],[9,5,3,4,-8,6,-10],[5,-5,-6,7,-2,4,5],[6,-9,6,-10,9,2,9]],[[-3,-8,-10,5,1,8,9],[3,-5,2,3,-10,-8,7],[8,9,4,-2,-10,2,1],[7,2,-3,-1,3,-6,9],[3,5,-1,-5,-2,1,5],[7,3,-5,-6,-4,-7,2],[-1,9,-6,-7,9,-4,-10],[4,6,1,-5,-8,9,9],[10,-1,-10,-5,5,5,-4],[4,2,9,-9,-9,9,9]],[[-9,5,-8,10,-7,6,7],[-7,-8,6,10,8,-6,-8],[-6,4,-3,-5,-5,1,-2],[-5,8,-1,-2,-8,2,4],[7,-2,6,8,-5,2,-10],[2,-2,2,-1,-10,-1,7],[-4,-9,4,-4,7,2,9],[-2,9,-2,2,-4,-8,-8],[-3,-2,8,10,5,2,9],[6,8,-8,1,-9,-5,-8]],[[7,4,10,9,-9,8,2],[-8,4,9,-1,10,-7,6],[3,-9,-9,10,-8,7,-7],[-3,-7,-10,-2,-4,5,6],[-4,-8,-8,7,9,-9,6],[6,5,2,10,-4,2,7],[3,-1,-6,5,-5,3,2],[3,-10,-3,10,-6,9,3],[7,1,3,-8,-3,3,7],[-2,-8,1,5,10,1,-4]],[[-5,4,-8,1,-8,-2,-3],[-1,-1,-1,9,6,6,-9],[-3,9,-1,9,9,3,-2],[-10,-10,-7,-5,1,-2,8],[-6,-7,10,-6,-1,2,-8],[9,10,4,2,10,-4,1],[-9,-6,-6,3,-10,-8,-7],[-3,5,-4,3,4,1,-5],[4,-3,-5,-9,3,-6,2],[-4,-6,3,-10,8,-7,1]],[[6,-7,1,7,-8,-6,8],[-5,-8,3,-5,9,5,9],[10,2,-7,10,8,6,4],[8,-6,6,2,-1,-6,-2],[-6,3,-4,-5,3,-1,-3],[-6,8,10,-4,1,-4,5],[-1,-10,-10,6,-7,5,4],[-8,10,5,5,4,-2,9],[7,7,-1,-6,10,-6,-1],[-5,-6,4,-7,6,4,5]],[[-6,3,8,-3,5,-1,1],[1,6,-9,-1,10,3,1],[-7,5,-3,-9,6,-10,-1],[-7,-6,-6,-6,-7,-9,-6],[3,2,-6,-3,3,9,-4],[-4,8,7,2,10,-8,5],[-4,-2,8,6,8,2,3],[-5,-10,10,-2,6,10,-10],[-5,-8,5,7,-3,-7,4],[4,-3,-4,10,3,-3,-4]],[[6,-5,-8,-9,4,-6,1],[-8,5,2,-3,-2,-2,-2],[7,10,-9,-2,8,2,9],[9,-3,3,-10,-7,5,3],[8,2,3,-7,-9,-1,-2],[10,-1,9,5,4,-1,8],[2,-3,1,4,-9,6,1],[6,-8,-7,3,-5,-2,-8],[9,8,1,2,9,4,8],[-6,7,4,-8,8,-9,-4]]], dtype = "int64")#candidate|5557|(10, 10, 7)|const|int64
var_5558 = relay.var("var_5558", dtype = "int64", shape = (10, 10, 7))#candidate|5558|(10, 10, 7)|var|int64
bop_5559 = relay.less_equal(const_5557.astype('bool'), relay.reshape(var_5558.astype('bool'), relay.shape_of(const_5557))) # shape=(10, 10, 7)
func_4937_call = mod.get_global_var('func_4937')
func_4938_call = mutated_mod.get_global_var('func_4938')
call_5562 = func_4937_call()
call_5563 = func_4937_call()
func_5389_call = mod.get_global_var('func_5389')
func_5390_call = mutated_mod.get_global_var('func_5390')
call_5573 = func_5389_call()
call_5574 = func_5389_call()
output = relay.Tuple([bop_5559,call_5562,call_5573,])
output2 = relay.Tuple([bop_5559,call_5563,call_5574,])
func_5575 = relay.Function([var_5558,], output)
mod['func_5575'] = func_5575
mod = relay.transform.InferType()(mod)
mutated_mod['func_5575'] = func_5575
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5576 = relay.var("var_5576", dtype = "int64", shape = (10, 10, 7))#candidate|5576|(10, 10, 7)|var|int64
func_5575_call = mutated_mod.get_global_var('func_5575')
call_5577 = func_5575_call(var_5576)
output = call_5577
func_5578 = relay.Function([var_5576], output)
mutated_mod['func_5578'] = func_5578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5100_call = mod.get_global_var('func_5100')
func_5101_call = mutated_mod.get_global_var('func_5101')
call_5610 = func_5100_call()
call_5611 = func_5100_call()
func_4677_call = mod.get_global_var('func_4677')
func_4679_call = mutated_mod.get_global_var('func_4679')
call_5646 = relay.TupleGetItem(func_4677_call(), 0)
call_5647 = relay.TupleGetItem(func_4679_call(), 0)
func_1606_call = mod.get_global_var('func_1606')
func_1607_call = mutated_mod.get_global_var('func_1607')
call_5652 = relay.TupleGetItem(func_1606_call(), 0)
call_5653 = relay.TupleGetItem(func_1607_call(), 0)
output = relay.Tuple([call_5610,call_5646,call_5652,])
output2 = relay.Tuple([call_5611,call_5647,call_5653,])
func_5667 = relay.Function([], output)
mod['func_5667'] = func_5667
mod = relay.transform.InferType()(mod)
mutated_mod['func_5667'] = func_5667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5667_call = mutated_mod.get_global_var('func_5667')
call_5668 = func_5667_call()
output = call_5668
func_5669 = relay.Function([], output)
mutated_mod['func_5669'] = func_5669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4986_call = mod.get_global_var('func_4986')
func_4987_call = mutated_mod.get_global_var('func_4987')
call_5681 = func_4986_call()
call_5682 = func_4986_call()
var_5692 = relay.var("var_5692", dtype = "bool", shape = (8, 12, 16))#candidate|5692|(8, 12, 16)|var|bool
bop_5693 = relay.minimum(call_5681.astype('uint64'), relay.reshape(var_5692.astype('uint64'), relay.shape_of(call_5681))) # shape=(8, 12, 16)
bop_5696 = relay.minimum(call_5682.astype('uint64'), relay.reshape(var_5692.astype('uint64'), relay.shape_of(call_5682))) # shape=(8, 12, 16)
func_1276_call = mod.get_global_var('func_1276')
func_1278_call = mutated_mod.get_global_var('func_1278')
call_5700 = relay.TupleGetItem(func_1276_call(), 0)
call_5701 = relay.TupleGetItem(func_1278_call(), 0)
uop_5714 = relay.erf(call_5681.astype('float64')) # shape=(8, 12, 16)
uop_5716 = relay.erf(call_5682.astype('float64')) # shape=(8, 12, 16)
func_2253_call = mod.get_global_var('func_2253')
func_2254_call = mutated_mod.get_global_var('func_2254')
call_5728 = func_2253_call()
call_5729 = func_2253_call()
func_4593_call = mod.get_global_var('func_4593')
func_4595_call = mutated_mod.get_global_var('func_4595')
call_5730 = relay.TupleGetItem(func_4593_call(), 0)
call_5731 = relay.TupleGetItem(func_4595_call(), 0)
output = relay.Tuple([bop_5693,call_5700,uop_5714,call_5728,call_5730,])
output2 = relay.Tuple([bop_5696,call_5701,uop_5716,call_5729,call_5731,])
func_5733 = relay.Function([var_5692,], output)
mod['func_5733'] = func_5733
mod = relay.transform.InferType()(mod)
mutated_mod['func_5733'] = func_5733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5734 = relay.var("var_5734", dtype = "bool", shape = (8, 12, 16))#candidate|5734|(8, 12, 16)|var|bool
func_5733_call = mutated_mod.get_global_var('func_5733')
call_5735 = func_5733_call(var_5734)
output = call_5735
func_5736 = relay.Function([var_5734], output)
mutated_mod['func_5736'] = func_5736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3084_call = mod.get_global_var('func_3084')
func_3085_call = mutated_mod.get_global_var('func_3085')
call_5784 = relay.TupleGetItem(func_3084_call(), 0)
call_5785 = relay.TupleGetItem(func_3085_call(), 0)
func_2953_call = mod.get_global_var('func_2953')
func_2956_call = mutated_mod.get_global_var('func_2956')
const_5801 = relay.const([-6.157006,5.070270,-0.789456,8.312485,5.185027,-8.874220,6.408408,6.883351,-8.452441,7.293084,8.032660,-5.453974,2.534651,-7.428421,5.484785,2.860837,6.933203,-8.191554,-0.763613,5.098999,5.275020,0.348829,-3.232085,8.479563,-2.987675,-2.182241,-3.988168,-1.273565,8.817632,-1.120912,-5.614779,-6.509096,-6.651173,4.160937,0.630093,-2.913640,1.724060,6.626548,-9.489453,-6.082535,1.384849,-2.724004,-9.537160,-7.257203,2.196292,-2.890248,-0.949792,-8.351428,-9.016606,9.941902,-2.434413,-9.224686,5.830582,5.409456,-5.498284,-8.112552,0.376229,-5.543598,6.370237,3.411293,5.363630,-7.282582,3.235114,9.865226,4.841479,6.908704,-7.063936,3.164520,1.221780,-2.676480,-5.517481,1.247092,9.027713,4.605038,-7.059392,-5.446948,4.773729,5.034181,7.220488,-2.020770,6.329708,-4.346064,6.253751,8.067963,-0.793739,-7.484359,7.528059,-7.086711,1.577318,6.549652,8.841076,-3.041113,4.215611,6.883315,-6.504090,0.986970,9.755384,2.281605,6.324497,4.784601,-8.700533,-0.782343,9.955379,0.889352,3.323695,2.192245,-5.741288,6.682006,5.391757,-0.579842,-8.413515,-7.124763,8.191097,-0.398559,-3.570267,-4.092663,7.209930,-9.657487,-3.026131,-9.167528,1.054341,-8.211885,0.494921,0.846250,-1.800681,-0.102642,5.268022,-1.213031,-6.728908,2.397689,-5.527539,-3.881675,-4.275855,-3.926335,-3.981822,-1.365694,-6.201713,5.126889,-8.992988,4.677820,-9.807688,8.481916,-1.031958,-3.928494,-8.028283,0.831722,4.915882,2.646965,0.951323,-2.252290,-0.605643,8.921927,2.395894,-1.479056,7.898431,-3.522288,7.389124,4.351195,2.325264,-9.792954,0.938908,-2.062521,1.239449,-7.744731,-6.427190,-2.179110,-7.534899,5.095057,-8.849002,5.411045,6.140985,6.669402,-0.622270,-8.418059,-7.188816,1.484930,7.435367,0.289729,1.208684,4.085180,-9.092757,-4.545740,9.042906,2.276292,2.834146,8.494748,-2.229194,2.487098,0.583250,3.619361,1.079977,0.255275,-2.393077,0.831114,-2.575998,0.341920,4.520249,5.077842,-3.243053,-5.602637,-4.767632,-0.971241,9.016463,4.564748,-4.209073,-2.728194,8.663273,-1.790567,-1.902733,-7.905005,-4.755119,-5.464175,3.307559,-1.402827,-8.316749,-3.583672,-2.639838,8.291898,-1.783606,-2.958029,2.394498,-2.888227,-6.517032,8.282606,1.733608,2.858091,2.184542,0.110026,-7.394452,-3.847000,-0.206127,1.446916,-3.567917,-1.266146,3.748333,7.906265,-4.232199,0.147991,-2.589940,0.227264,-1.354641,3.632428,-3.357204,6.557387,-3.681627,3.095759,-4.144715,9.285356,-8.463591,2.843103,-2.792644,-9.274237,7.340592,0.610009,-7.970748,0.055030,3.606430,1.946698,4.508345,-7.844693,-8.955218,-1.555033,-6.400495,3.348553,-4.082244,-7.635323,1.117001,5.528332,8.659303,-4.842618,9.765588,-6.175085,-3.679045,2.711204,-3.899576,0.633008,7.308836,6.826628,6.234683,-0.850243,-9.731476,-6.939546,-7.752129,-9.631521,-8.976741,8.455097,-6.849119,9.190787,7.810417,-7.897420,-9.513684,4.221137,2.554344,-7.762631,5.559766,-2.779587,2.982130,-1.709724,-7.466227,3.883115,7.150707,9.496803,2.357954,0.001205,7.994037,-1.028171,6.056819,3.998803,6.544048,-4.817832,0.840834,-6.215555,0.623194,-6.401204,1.554244,8.153567,-0.405239,-2.303467,2.644757,5.015665,7.139798,-1.055422,7.196743,7.070343,6.945331,8.955084,6.332676,-4.793327,-1.422946,-3.820462,-4.696297,2.927768,-5.992640,-1.485538,8.132134,-0.537981,-0.290013,0.031124,7.204699,-1.713025,-5.041343,5.044217,7.087628,9.806576,-3.047591,8.651437,1.944541,8.516842,-5.793415,8.375006,3.783834,-5.338559,-3.226898,5.765785,-2.864653,1.307263,-2.810248,-0.821207,-0.216810,2.823355,-7.389681,9.842130,0.425580,9.946263,2.284754,9.479260,1.757740,-1.910535,-1.902110,7.818589,8.993311,1.393586,3.424270,7.521561,4.544004,-2.864773,0.890136,5.688220,-3.079334,-0.469200,8.711557,8.793886,7.330309,9.142190,6.649248,-9.005558,1.472814,-2.221169,-7.271571,-2.540724,4.822711,5.652134,-5.665502,3.668980,0.954106,-8.508635,-9.958493,7.989981,8.423686,8.693262,6.032849,4.314675,6.395559,1.035096,9.049778,-0.697602,-7.435081,5.627327,-8.725799,-9.353539,-0.255493,2.452366,-8.866599,-4.274664,4.090322,-7.467829,-9.749734,9.809663,-8.419218,6.692160,-2.806563,-6.992687,2.019421,8.744199,-2.267767,6.362270,4.389887,8.360325,-9.818264,8.603877,6.918388,-0.334487,-4.709601,-1.239794,3.121173,-7.083447,5.667842,-6.762942,8.313615,-1.694369,4.072065,-7.059991,-8.996526,-6.129003,-5.525247,-8.163348,-1.980401,5.172811,-9.688790,8.701692,1.468119,8.794098,-9.627226,0.931692,-5.942710,1.953512,3.685737,-5.250197,-3.521824,-7.867451,-3.464227,-6.971799,-6.600229,7.484338,8.636682,-4.641388,8.909287,9.053849,9.278198,2.516831,2.911647,-0.133615,-3.717131,-6.508772,4.470376,2.331148,-0.668839,-4.860134,5.915978,9.210426,-9.561413,7.070037,-9.033789,4.361497,9.575531,5.227712,-4.725704,-6.585919,-7.409109,1.148993,6.162841,0.949982,-5.775956,-4.315571,-9.624672,2.646143,9.445569,-6.315365,9.693499,-5.551849,-7.171635,2.057391,9.022018,9.843050,8.602873,1.362353,-8.604580,-5.924234,2.056866,-7.543406,-8.980842,-6.784717,2.903539,4.302599,7.695633,4.841240,0.915291,-1.782796,-3.284426,-9.321680,-7.554262,4.204074,4.714464,0.565899,-0.966005,-6.700001,9.831739,2.560537,4.700031,-8.341959,-9.131922,-5.758244,-8.377089,-2.150901,-2.385042,-3.077039,-4.683923,0.553483,1.687927,-8.529775,7.678645,0.286489,-5.650338,7.847638,4.409975,-1.927973,0.744429,-0.509127,8.731634,5.758063,6.303253,-6.878162,9.396802,1.938748,-0.433994,-2.774846,-5.245352,2.898527,-5.988465,-6.791271,-2.269214,1.642354,1.127169,7.125306,-5.134736,0.408722,2.496059,-4.191981,2.769926,7.354038,5.725130,5.001156,4.564114,-2.631586,7.445696,-4.861774,9.776586,-1.336076,4.794427,4.136218,-4.675782,6.120078,-3.841428,-2.960966,-2.867714,-7.808862,7.484071,4.851984,-6.547146,9.574533,7.083287,9.926621,7.602105,1.321590,4.005183,7.775263,6.339654,8.835082,-7.368727,-1.595288,-1.249779,-5.158206,-4.807851,-0.091482,-0.405414,0.706227,6.076828,-5.775424,-2.952836,0.646450,3.735776,9.823319,-9.608495,-7.483940,-6.083180,6.010562,1.246836,-5.102022,2.302167,-4.929944,-5.243608,8.169659,-9.107123,7.393855,-1.998167,0.589562,4.562224,-9.232957,0.440465,-7.783212,0.042151,-7.030264,8.584714,2.299584,-8.866557,-3.480684,7.660848,-5.799569,-3.989095,-7.885521,8.772674,-1.808446,-5.841210,-5.411578,5.481244,3.312512,-2.055681,-4.720096,-6.255544,-2.117131,3.045897,-8.258088,0.199771,4.441883,-1.791772,-2.230505,1.122507,-0.398148,6.311335,3.393600,4.481357,-6.606482,4.868974,5.242635,-4.114314,-5.280528,9.385172,-3.153273,0.978745,-0.810403,5.887933,5.941155,1.436384,-9.460339,-8.269006,8.658202,-2.214828,6.893832,-2.122817,1.838215,5.503917,6.975371,-4.624922,5.527047,2.567697,1.641923,-7.369002,7.093197,-0.267341,-3.025388,8.739028,-4.666203,7.511484,6.716201,4.803554,-0.329278,-3.272627,9.893047,0.080797,6.937839,-9.144234,6.907359,0.214818,-2.522191,-5.328290,8.707069,-7.659330,0.793772,2.070781,-4.507277,-0.345733,3.110889,-9.413930,4.172199,7.158158,-4.363158,-6.833515,-9.137934,-7.421263,8.125738,-8.974175,-2.195620,4.224310,-2.828207,7.386256,4.292237,-5.998406,-2.296805,7.902511,-3.061277,-4.976060,-6.252033,6.129119,3.799778,0.661152,-8.429212,1.134808,-1.519980,7.719441,4.550898,1.656932,-5.211667,-1.431500,-9.237815,-1.910447,-5.725760,4.272691,7.418310,-8.244764,-7.343206,-4.116338,2.982351,-1.908335,-6.422445,-4.243829,-7.872517,-8.676511,6.006650,4.007919,-9.948829,2.519990,4.350055,0.056198,9.236686,9.525222,7.760233,-1.329617,7.582459,-7.020038,-3.510384,5.142953,8.258541,4.875707,-9.071334,-3.241548,6.826209,-7.343869,2.227717,2.426639,8.451280,-1.056405,-9.089695,5.067815,8.353436,8.337178,-5.118405,-6.151720,-7.283580,7.791477,9.423846,3.071268,9.883751,3.052532,4.919200,9.620896,8.312262,1.493638,-3.270649,4.954375,1.260323,-6.791036,7.818237,5.666997,-4.469745,5.342941,-7.393401,-0.457334,-4.940532,-5.794461,9.593098,-6.992479,-3.161579,-6.426249,-2.691937,-0.653339,3.452517,0.941201,-3.652041,-7.592633,0.435754,-5.674837,7.241889,0.160604,-0.252557,4.336354,0.002355,-1.821021,-5.175444,1.750308,-9.623062,-0.259134,-5.245614,-7.612202,-8.905479,2.074781,-2.338784,3.764506,5.359054,7.127483,3.884125,0.094126,-3.696927,-6.704279,-2.325207,0.736185,9.397148,-7.982571,-2.845124,-0.444193,-0.367478,-1.920903,1.640265,-6.623694,6.773196,-5.521754,-4.050233,5.087286,8.617556,1.990911,8.519156,-9.593722,-8.648237,-4.206894,-1.879598], dtype = "float32")#candidate|5801|(864,)|const|float32
call_5800 = relay.TupleGetItem(func_2953_call(relay.reshape(const_5801.astype('float32'), [8, 12, 9])), 0)
call_5802 = relay.TupleGetItem(func_2956_call(relay.reshape(const_5801.astype('float32'), [8, 12, 9])), 0)
func_5363_call = mod.get_global_var('func_5363')
func_5367_call = mutated_mod.get_global_var('func_5367')
const_5806 = relay.const([5.775623,-4.316372,-0.211029,4.143295,3.829059,6.244649,3.726116,-1.383177,7.625592,6.767577,7.504909,2.513379,-1.764129,-7.224217,8.068814,-4.517220,0.866196,8.285852,4.161556,-0.516016,4.689882,-9.548089,-6.000084,-8.419271,0.537834,-6.622186,5.264159,0.532112,-6.914468,4.746065,-5.319406,6.189533,-7.099033,-7.680397,7.255943,3.529699,-2.587265,1.264634,-9.587117,-5.001228,6.654964,-0.412998,-6.144043,-7.982124,1.766328,-4.314063,-1.398729,7.809860,-3.444734,-9.189141,-2.542763,-6.199040,5.298305,1.001936,-4.407302,5.091089,5.098498,-4.159490,5.982279,-5.083173,1.330558,3.986571,-2.326388,-5.067953,-4.834351,-3.463197,-3.035215,3.284620,9.587975,6.844298,-1.027179,7.508790,4.262505,-6.749395,9.496307,2.061523,0.718784,-3.960403,-6.408465,4.627838,9.014219,4.313344,-8.422828,-5.141887,-7.199696,1.148103,-5.968368,-3.892153,7.056762,1.177690,3.290299,7.027936,0.866121,8.520851,-2.273844,-3.010293,-2.693632,-9.546154,-8.282521,-8.571816,-9.214463,1.771399,1.468331,-7.963449,-6.525994,0.881293,3.007028,6.381034,-5.446481,-1.417996,9.270070,-2.237773,-6.689973,-7.544540,4.440213,9.970400,5.953277,5.150089,-3.221108,5.106239,3.831349,1.859718,1.078258,1.240906,6.449110,-4.255021,-1.978482,-6.962068,2.659201,2.911925,-3.219390,7.087540,6.529451,-4.342294,-1.737921,1.607489,-2.726328,-5.723178,3.006411,1.054288,5.589679,1.601171,-0.058204,3.343975,-1.083822,8.700346,8.474490,-1.818589,2.666330,7.968697,-7.264982,3.116862,4.379761,-2.450214,1.627562,6.870507,-4.427527,-1.792158,-1.971552,-4.353318,-1.916747,5.756117,-1.467728,-1.775954,-5.121163,-8.660318,-0.206676,3.320339,8.341378,-5.186550,0.237686,-9.492303,-0.114547,6.619019,-5.907752,-2.300428,1.367549,-5.302708,3.173234,9.351909,-9.419252,6.287228,8.082401,-9.283783,-7.010857,2.701295,-7.413514,9.284201,-3.179504,-1.441375,1.199549,6.881152,-0.388242,-8.856616,-1.021460,-0.509799,2.024732,-3.047386,-6.884226,-9.246718,0.986958,6.359617,1.091598,2.780360,0.299933,-1.173314,-7.862136,7.632374,6.929934,-3.058482,7.308917,9.483993,-8.379335,1.447676,-4.479199,-3.748432,9.822299,-3.204223,-3.822521,-6.097281,1.219902,-9.058834,-2.483523,-9.131200,-8.475462], dtype = "float64")#candidate|5806|(225,)|const|float64
const_5807 = relay.const([-8.696873,-3.518201,9.014332,9.999792,0.432324,0.947434,5.495896,7.192658,2.458997,-7.690491,-4.043489,1.145995,1.149122,2.246389,3.787051,9.352761,6.063475,5.978652,-8.674016,-7.099769,7.396154,8.033490,0.119697,-8.896561,5.817685,5.534411,2.846550,0.363131,-4.518316,7.974515,7.833550,4.306489,1.724118,1.599147,-5.377514,1.732848,0.058714,-4.658090,7.887818,7.279207,-5.515695,-3.985758,1.169088,-2.849981,-3.736469,1.507509,-2.796322,-1.851568,4.495858,0.590560,7.677437,5.705888,-2.880234,-0.126624,-0.842480,-7.662259,-6.101746,-0.847444,-3.983029,3.833268,7.191398,7.186286,7.284253,4.194951,2.835658,-5.239181,8.300925,-7.822347,-4.935459,4.954870,-0.638938,3.601700,-1.328148,4.893815,-2.466400,7.816387,6.488545,0.045484,3.141737,-7.063519,9.705963,3.714375,-3.521272,-5.018777,-3.022504,-7.822209,-2.359460,0.765600,4.672517,2.738143,4.361947,1.877360,0.539723,-3.843619,9.866925,-0.950533,9.081478,1.175140,6.238679,-4.468592,2.985401,-6.616777,-9.336198,-3.955599,-7.961592,9.334520,2.620908,5.242564,5.550800,6.206745,-5.431149,-4.438590,6.637808,0.189149,3.372011,5.782354,-8.605654,-2.338193,6.584028,9.828501,0.431961,-2.024527,6.730612,0.584985,2.613470,-3.484949,-2.659289,6.644561,-1.103376,-6.563286,6.394166,0.226602,-9.433740,-8.285174,-4.816588,0.341891,5.629794,-1.919914,5.510436,3.649333,-1.674451,-2.105160,-8.444290,2.175424,6.675829,6.642797,7.664044,-9.530712,-4.690314,8.984541,-1.197127,-4.464055,-4.807775,4.102679,7.108368,-2.297474,-8.311798,-8.500249,9.269712,8.167801,-1.533540,2.754753,1.036795,1.348010,-1.206855,0.091836,0.659796,-8.617526,-8.973481,-2.209344,7.069697,-9.734483,2.604090,-1.063372,-4.028817,8.912103,-1.253318,-0.443969,2.928061,-4.536308,-1.266958,-1.388242,6.092699,-4.974990,-9.336134,8.278558,0.658486,1.995430,8.882888,4.477235,-9.963972,-8.719005,3.844797,-2.203750,-3.766173,7.558450,-5.576628,-4.628549,-4.933663,-4.781061,2.579169,-3.258620,0.177930,-3.875907,-9.105474,-6.498899,-5.935446,6.384210,2.328822,-8.352813,-4.014045,-9.755773,-3.426837,5.568667,2.366202,2.508163,7.111432,-0.981734,-3.585347,8.205864,-1.128107,2.424057,-1.118632,0.086219,-1.959320,3.596919,6.770970,-5.959365,3.379339,-9.675943,8.663025,7.074302,-9.314942,7.411073,-8.082955,4.042625,-4.176931,-0.629768,2.184811,-3.700178,9.689259,2.978305,7.117657,-4.235025,1.409567,-7.691078,7.097628,3.458117,1.535514,-7.898073,-6.595664,-2.736313,-0.709986,6.897677,-3.151888,6.449752,-2.913571,-8.093969,-5.691447,-9.980274,-9.088624,-2.840949,-0.527592,9.347298,-0.752680,-7.709302,2.437031,0.356085,3.592241,4.355231,-3.671229,6.659229,0.387828,9.973736,0.394454,1.153258,-2.563568,7.262919,-5.346717,-6.788916,-8.591687,4.818300,0.276771,0.368103,7.733113,0.905336,9.641310,-8.652414,-2.173062,4.928279,7.311659,1.480047,-8.556982,2.178736,9.507096,-0.144521,-9.693854,3.431771,-2.444538,-8.529237,-1.221742,-0.871005,-0.051011,-2.823295,-4.556957,-0.711236,3.947503,6.678008,-3.741734,-2.967374,-6.989194,3.485591,-5.631505,-5.866703,7.351047,-4.936854,-7.312038,-6.441857,-6.749182,-2.943925,-9.781284,-7.835512,-5.049620,7.450493,-0.553684,2.743282,-7.151095,3.574824,8.411146,-2.590624,-5.993470,-7.992485,1.256675,-5.486340,-6.494425,-7.006567,8.792824,-9.195243,-9.784355,0.300107,8.759294,1.823066,5.699592,-5.627460,-7.634293,-5.302060,3.863307,-0.676700,7.217692,-5.647139,5.460985,-5.701332,-6.402581,-4.214393,-9.502179,1.655955,-1.640783,-2.745085,-0.044478,5.201871,2.376776,5.066643,-8.674753,2.874823,-3.325879,4.252345,-9.504867,0.217214,-9.435306,8.977951,6.979612,-8.436346,3.417788,5.704210,9.432240,-8.179249,-7.355206,-3.986200,3.879381,-9.472023,2.444671,8.697357,9.083128,-7.547515,8.688965,2.862014,1.497271,-1.730042,-5.386286,-5.962857,-5.627676,-6.431274,-1.631404,-8.313982,-3.082400,-3.032264,-1.336270,0.612688,-3.788162,-0.548877,1.247932,-9.843958,4.505035,9.389016,-4.645322,-8.605018,-8.077448,-5.650347,7.182668,7.819093,5.889491,5.360670,3.801284,-8.405294,1.560794,7.659459,-5.214699,3.523749,3.448538,2.141213,-9.842538,-5.275090,-9.205313,1.648461,1.158680,0.784897,-5.397702,0.257967,1.978562,5.369829,-4.658454,8.276794,-5.503542,-8.764077,9.286373,-4.720535,4.663125,-9.968174,5.375751,0.607735,-4.092005,2.271187,-3.346201,6.366690,-2.466980,-0.597911,1.409675,2.096402,-8.311291,1.948845,5.602840,8.871653,8.704181,-5.599449,3.797723,9.018096,-2.966981,7.469802,5.234662,-3.235216,2.840189,-6.710359,-4.018627,7.090094,-0.844688,-2.604144,-6.739805,-6.135022,-1.897540,-8.905165,7.812356,1.442559,-0.539134,-8.838885,1.152650,-0.807833,4.180733,-2.525471,-8.612100,-4.671216,-4.568928,2.107533,-2.940892,-3.230918,-6.971868,-3.063604,6.228488,-7.303727,-2.196947,2.004115,1.349343,0.413983,6.470310,1.814998,1.355851,-7.916578,-1.698223,-3.570535,6.582759,5.433759,6.849660,4.872108,-1.664845,-6.627274,-1.676203,-9.898838,5.339676,-5.399544,9.976452,0.699312,2.765809,3.986415,8.393601,-8.547774,-1.228270,-9.439966,-8.529989,-5.352710,1.791221,8.243144,4.463001,-2.379275,4.302865,8.026358,-7.062020,1.156367,-4.689813,5.968948,-2.606084,-8.381878,-2.762547,-1.147208,6.260175,2.334121,-8.920341,-5.621827,-3.884292,-9.959178,-4.065195,2.736693,-6.183587,-2.195531,6.350202,-0.108621,-9.783786,-8.984444,-8.404136,9.491186,-1.894712,-1.051597,7.176430,-9.089361,7.919662,-0.331328,-0.255559,-0.575222,-6.438765,1.209345,1.761800,-2.395697,-9.570295,-6.285794,6.809222,-1.809558,-7.624884,-8.076543,-8.125217,0.428520,-8.746611,1.378351,4.428735,8.612493,-7.250901,0.966042,9.712916,4.158342,1.351430,-9.659798,2.936410,-7.535673,6.463479,-1.386585,4.878270,-5.743638,6.425366,-6.284595,6.286917,-6.118391,-0.134601,4.224421,0.465539,0.484792,-5.037082,-6.593459,2.511796,6.208057,7.235543,-9.281585,-2.810556,-9.264004,-3.220155,-2.380479,7.871628,6.624172,2.880195,3.158710,-9.056070,4.840642,-3.332247,-5.397282,-0.126326,-2.356647,1.680212,-8.942717,2.790654,2.344672,6.264166,-7.311488,6.822309,-4.518288,-5.636279,4.696045,-6.230495,-5.138417,-1.404641,-6.875813,-3.896941,0.117793,2.237479,4.463658,-6.740766,-5.548143,7.156873,-4.320446,3.715360,7.224275,-8.882173,-6.669741,3.627601,6.152078,2.479332,-1.342102,9.759887,-9.105879,1.088176,5.865654,-8.705436,5.646791,-9.272534,-4.256643,-6.829819,-0.774182,5.650371,1.276695,4.993384,-9.707288,5.032139,-2.030474,-1.297244,8.278497,7.539823,-6.620280,8.353976,9.121870,4.692211,3.341140,0.306825,1.913734,-5.052384,4.723379,1.828164,-1.103244,-6.628017,2.234460,8.929753,-8.904898,-6.441880,6.580673,-9.419437,0.953136,-2.819445,6.568364,-3.809391,-3.903500,1.916581,-0.412611,-5.976201,3.039376,-6.853575,1.687681,-6.598138,-6.628505,-3.463591,-8.551731,-5.775526,9.915674,-1.047667,-6.767300,4.080546,0.623798,-9.502811,3.424444,-6.383818,0.421895,-6.247423,3.600818,-2.066886,6.167807,1.678502,3.490894,1.394909,-6.221302,5.886115,9.290096,-8.931532,2.546291,-7.918895,4.274782,-7.776611,0.168890,8.750528,5.139147,-9.223516,9.807881,-0.976363,3.322310,8.657194,2.332840,-1.352858,4.656038,9.783989,4.762738,3.903300,-3.033498,2.664687,-9.068160,-0.782181,-8.155508,-1.633723,-2.737381,-5.931687,4.856132,-7.829717,-5.950603,3.460067,4.859762,2.327414,-9.050566,2.781913,-3.086064,1.267622,4.701219,-6.836538,-2.673164,9.161538,8.756211,0.877137,6.232067,1.012381,-4.039026,9.467298,7.876197,9.075594,-2.369742,-1.195876,6.042302,3.858891,-7.099585,9.544663,6.229012,5.187203,-9.444039,5.369797,-1.885318,-6.216909,6.967744,-1.193338,-7.594762,-0.043524,-5.896385,7.441298,-7.091748,2.387774,-9.332719,-9.720506,7.639553,-3.133006,-2.248921,-8.586257,-3.774310,8.947078,-0.736066,-9.668236,1.756733,9.562609,3.460973,-5.013261,-8.517832,-2.116368,-8.777066,-6.081870,4.637476,7.858796,-0.093137,-3.972359,-5.106995,-1.402516,-7.320853,9.426996,7.315887,9.823248,3.854306,6.703343,4.026515,-0.849253,-1.241217,-0.710505,4.342534,2.799922,8.626741,-0.459346,9.937155,-3.876231,9.079408,-4.309317,9.909315,-2.769111,5.105136,-6.284597,9.333033,-1.073588,6.642433,7.924279,-6.649406,-2.480934,5.914360,-1.940678,6.211851,-3.048571,-0.577924,8.499872,-9.044508,6.795997,9.604546,0.552920,-0.069070,-4.712989,-4.901867,2.205681,-6.925794,-9.267884,-6.053711,6.198782,6.345724,0.111668,-9.450956,1.856134,-3.487823,-5.371902,-5.730277,-7.600876,3.621865,-7.696359,1.937401,-2.369047,3.058034,9.634405,7.897294,5.188114,-0.859058,8.598053,-7.456470,7.800495,2.165250,-3.532896,1.317693,-8.613589,-2.260705,-9.087402,-5.737645,0.993265,7.545061,-9.270279,1.289913,-1.134748,-4.916557,-4.441326,-2.917540,7.773497,9.644129,-5.696344,-3.689748,2.911605,3.745601,-5.399982,0.490910,-6.536542,-6.162439,7.743057,-2.770359,6.472745,7.339317,9.969353,-7.518260,4.982575,5.510698,-2.575992,3.884730,-8.887034,-5.921763,-3.607787,-3.515241,-7.482558,2.433480,8.372149,0.679541,-2.403437,-0.607767,0.483363,-5.803877,4.923576,-7.400872,-1.138194,4.812876,-8.133624,4.991227,0.498405,9.464882,0.822168,-2.424719,2.774369,5.530383,-3.800856,4.112515,-6.913061,0.129404,0.398683,-5.035287,2.565266,-0.634484,6.642071,-4.484658,-4.487317,-6.907269,4.840214,-9.510496,0.394271,-1.585396,2.870466,7.321301,-6.800371,9.373932,-6.112471,5.168064,-3.476697,4.373920,7.789332,-7.128904,-4.437493,4.091766,9.254834,-3.104262,-2.338099,3.138917,-8.056298,2.953145,3.969347,6.678070,-7.451221,5.522733,-6.836641,-9.885039,-8.730204,5.092779,-9.437725,-1.077205,-1.989644,-0.587027,-5.873088,9.770831,-7.175432,6.528897,0.812678,4.622458,6.048765,-3.570934,0.788549,3.834406,-2.452655,-2.816758,-5.891453,-6.521088,2.724027,6.274295,-5.763065,7.200433,7.271440,-5.280736,6.152560,9.783610,-0.753081,-3.751316,-3.920970,-1.840052,5.558168,1.821596,4.842631,-5.883597,-4.566598,-1.550274,-1.520046,1.081395,-2.587242,1.114143,2.822709,-3.820166,-8.577185,-9.813450,0.489244,2.605187,1.818149,-6.931680,1.515509,-6.704358,-9.948284,-8.330837,-8.992478,-7.425437,-0.845717,-0.362953,-0.787380,3.714324,8.154434,-2.322934,-4.781681,1.846592,-0.376344,8.572894,5.217500,-2.328867,-2.487703,-2.876313,-7.955470,-4.214009,-7.010767,9.471308,4.952189,-7.575159,-2.656125,0.937826,-5.429451,-9.222013,-2.831269,-8.800799,3.352336,9.194578,-8.206128,-3.039707,2.619616,3.994629,8.546086,-6.215993,0.373790,-9.726089,3.574988,4.264981,-3.917327,4.120655,8.574444,-1.530461,-6.051933,-7.832727,-3.515499,7.972631,9.310110,0.227506,9.900136,-4.905645,-7.006097,-9.850090,-3.335458,-9.694849,-1.522343,-2.013531,0.539865,-4.536658,-9.587041,-3.058604,-7.581638,-7.405034,-4.824678,-0.110686,-2.452437,4.032925,6.815582,-4.112405,4.957603,7.581385,-4.572186,2.022208,-8.218615,5.112406,-2.744899,6.589347,-8.405794,2.099173,-4.200282,-6.015858,-0.434717,6.724864,-1.901537,8.107258,-5.299362,0.998567,-4.505207,5.560573,-2.186367,-6.346586,-5.480479,0.904580,2.703541,-6.805509,9.338444,-5.100787,-1.395036,8.354266,-3.761331,-0.165711,3.244454,2.787234,-3.534689,7.333976,-8.919821,4.071051,8.004535,1.223400,7.317117,-8.564213,-2.495755,-3.712057,9.791673,5.511613,9.963516,-1.549504,0.251820,-2.188184,-1.996584,3.854423,7.517453,-5.075885,4.373678,-4.771398,6.545669,6.446409,4.243602,-6.139599,-4.673906,-9.429663,5.811096,-6.622196,6.849403,-2.738403,-6.497993,-3.053290,-1.559778,8.875115,-6.530536,8.113372,-1.041663,1.565374,-6.528394,-8.447204,-6.309637,-7.943931,-5.399721,-6.954107,-4.598602,2.911169,-0.211004,-9.659865,-3.813757,1.385371,8.639968,-6.200107,5.071683,-0.085830,3.465078,-3.587288,5.892745,2.825151,-5.192831,6.745915,-7.544986,9.366543,-9.040056,-1.185840,1.705152,9.799901,-4.388965,1.698776,-0.157920,3.874074,-8.245833,6.309980,0.837481,3.502603,-6.420249,-8.993492,-2.599789,-6.262572,7.636496,4.487462,-7.402067,-5.867817,8.125069,-7.907769,1.330522,7.573360,-2.078054,4.971683,-2.172296,3.661765,-2.671975,4.184232,3.450004,6.067107,-6.262626,-5.945099,-9.736661,7.015773,-3.646952,5.061808,-6.504687,7.346268,0.439023,-2.851654,-4.962690,-1.693672,5.412186,3.895005,7.835917,7.811735,2.399035,-4.397121,-9.449277,8.686133,-7.813006,-0.624211,-7.364275,1.795434,9.095028,2.550107,2.233633,-3.704073,9.946094,6.019016,-7.188264,6.908829,-0.966253,5.897311,1.526501,5.417831,2.884930,-9.903548,-8.173300,8.378467,2.099382,6.947739,9.444111,5.181251,8.779201,6.778647,-6.600409,1.387696,1.290044,5.512423,-5.325875,-3.538748,1.270727,4.645644,-7.998672,7.451500,6.406248,-3.811557,-2.714043,7.607351,-5.939429,2.424814,5.469475,-2.805253,-0.897546,-4.813283,-7.271187,-0.365885,1.312019,5.096890,7.642942,-5.219343,7.287009,9.231676,-1.184584,2.408431,8.696714,2.469964,-4.248495,4.208770,-5.371088,1.674290,-3.487942,-4.663862,1.144244,3.466550,-1.622987,5.881144,-5.494041,8.631831,1.584509,-1.752206,8.204837,-2.754527,2.013079,-2.014809,1.002018,-1.399381,-5.602178,6.257295,2.786405,-0.292945,-1.682964,5.747617,-9.943820,-4.977261,-6.148629,-3.853402,-4.643603,3.472249,7.183253,5.531964,9.371740,-0.557607,-2.332329,4.408655,0.754042,3.673253,6.366301,-6.603825,9.068180,6.004920,6.139477,-2.144663,-9.125383,0.667936,5.394668,-5.168073,3.528749,-3.234331,6.890555,6.910385,6.557187,-8.508729,3.746522,-9.079372,6.814312,-4.508830,-0.362627,2.241268,-5.369133,-7.794541,0.195817,-6.237416,5.921269,9.082177,-9.416690,7.004846,2.457620,-4.069428,8.998962,-0.345980,5.941164,8.796225,5.746291,-9.365201,-4.248929,9.138187,-2.694036,-9.438027,8.107518,-7.560833,-8.483950,1.264857,9.441416,-3.858383,4.718367,-1.783999,-9.501884,-7.176803,-7.826461,6.445975,9.980660,-1.546492,4.912128,0.252025,-5.654647,-2.170651,-5.071976,2.197444,-4.939914,-3.867208,-2.658883,-4.787828,-5.669651,-1.006337,8.718709,3.104195,-9.873340,-3.862063,-5.306496,-7.917917,8.278777,2.369279,9.818358,-8.122532,0.247414,2.728351,5.856257,-5.905270,-7.383245,-3.144534,-1.340670,-6.064014,2.508314,-6.919757,-9.894495,6.324231,-2.980417,3.334592,8.403337,8.267738,-4.381944,-2.051593,-0.047725,-3.686327,0.357087,-7.021068,-8.180714,-1.290359,-8.299873,-4.136776,-1.434043,-6.416157,-8.538666,-3.163521,2.209950,-9.098941,-8.237228,5.056244,3.588815,9.434566,-6.760602,2.855275,-9.146527,7.919757,-0.611240,2.710494,8.815811,4.231486,-3.045595,6.818032,6.455341,0.785146,-7.302048,-5.069412,-5.874944,-2.390420,-9.515916,-4.627004,9.201442,7.691239,1.501547,-5.343348,-8.662101,-9.473580,6.209587,0.419013,-0.840122,-1.308784,7.500849,-6.293063,-8.977083,2.848831,-2.431309,8.456987,3.643351,-2.492726,-1.097506,8.726306,-9.070026,9.542137,0.685035,0.656712,6.261063,-8.096881,-8.759753,4.818126,5.707459,6.809694,-3.739716,4.265613,3.411771,-6.829907,1.605694,5.174058,8.862333,7.162023,3.761326,-5.997130,7.449309,4.180144,-5.608711,-3.651804,4.988741,3.957753,5.690220,7.144855,-0.710817,-1.434494,8.895758,-9.787417,-9.890042,6.136745,-8.507679,-4.867613,-6.300755,3.800766,-0.373601,-7.748447], dtype = "float32")#candidate|5807|(1536,)|const|float32
var_5808 = relay.var("var_5808", dtype = "uint64", shape = (1248,))#candidate|5808|(1248,)|var|uint64
call_5805 = relay.TupleGetItem(func_5363_call(relay.reshape(const_5806.astype('float64'), [15, 3, 5]), relay.reshape(const_5807.astype('float32'), [1536,]), relay.reshape(var_5808.astype('uint64'), [1248,]), ), 2)
call_5809 = relay.TupleGetItem(func_5367_call(relay.reshape(const_5806.astype('float64'), [15, 3, 5]), relay.reshape(const_5807.astype('float32'), [1536,]), relay.reshape(var_5808.astype('uint64'), [1248,]), ), 2)
bop_5814 = relay.floor_mod(const_5807.astype('float32'), call_5784.astype('float32')) # shape=(8, 12, 1536)
bop_5817 = relay.floor_mod(const_5807.astype('float32'), call_5785.astype('float32')) # shape=(8, 12, 1536)
uop_5826 = relay.sigmoid(call_5800.astype('float32')) # shape=(8, 12, 11)
uop_5828 = relay.sigmoid(call_5802.astype('float32')) # shape=(8, 12, 11)
output = relay.Tuple([const_5801,call_5805,const_5806,var_5808,bop_5814,uop_5826,])
output2 = relay.Tuple([const_5801,call_5809,const_5806,var_5808,bop_5817,uop_5828,])
func_5829 = relay.Function([var_5808,], output)
mod['func_5829'] = func_5829
mod = relay.transform.InferType()(mod)
var_5830 = relay.var("var_5830", dtype = "uint64", shape = (1248,))#candidate|5830|(1248,)|var|uint64
output = func_5829(var_5830)
func_5831 = relay.Function([var_5830], output)
mutated_mod['func_5831'] = func_5831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5873 = relay.var("var_5873", dtype = "float32", shape = (12, 8, 12))#candidate|5873|(12, 8, 12)|var|float32
uop_5874 = relay.tan(var_5873.astype('float32')) # shape=(12, 8, 12)
func_5048_call = mod.get_global_var('func_5048')
func_5050_call = mutated_mod.get_global_var('func_5050')
var_5883 = relay.var("var_5883", dtype = "float64", shape = (2002,))#candidate|5883|(2002,)|var|float64
call_5882 = relay.TupleGetItem(func_5048_call(relay.reshape(var_5883.astype('float64'), [11, 13, 14])), 0)
call_5884 = relay.TupleGetItem(func_5050_call(relay.reshape(var_5883.astype('float64'), [11, 13, 14])), 0)
uop_5895 = relay.sin(uop_5874.astype('float64')) # shape=(12, 8, 12)
output = relay.Tuple([call_5882,var_5883,uop_5895,])
output2 = relay.Tuple([call_5884,var_5883,uop_5895,])
func_5914 = relay.Function([var_5873,var_5883,], output)
mod['func_5914'] = func_5914
mod = relay.transform.InferType()(mod)
var_5915 = relay.var("var_5915", dtype = "float32", shape = (12, 8, 12))#candidate|5915|(12, 8, 12)|var|float32
var_5916 = relay.var("var_5916", dtype = "float64", shape = (2002,))#candidate|5916|(2002,)|var|float64
output = func_5914(var_5915,var_5916,)
func_5917 = relay.Function([var_5915,var_5916,], output)
mutated_mod['func_5917'] = func_5917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5966 = relay.var("var_5966", dtype = "int64", shape = (6, 4, 5))#candidate|5966|(6, 4, 5)|var|int64
var_5967 = relay.var("var_5967", dtype = "int64", shape = (6, 4, 5))#candidate|5967|(6, 4, 5)|var|int64
bop_5968 = relay.left_shift(var_5966.astype('int64'), relay.reshape(var_5967.astype('int64'), relay.shape_of(var_5966))) # shape=(6, 4, 5)
uop_5979 = relay.tan(bop_5968.astype('float32')) # shape=(6, 4, 5)
output = relay.Tuple([uop_5979,])
output2 = relay.Tuple([uop_5979,])
func_5985 = relay.Function([var_5966,var_5967,], output)
mod['func_5985'] = func_5985
mod = relay.transform.InferType()(mod)
var_5986 = relay.var("var_5986", dtype = "int64", shape = (6, 4, 5))#candidate|5986|(6, 4, 5)|var|int64
var_5987 = relay.var("var_5987", dtype = "int64", shape = (6, 4, 5))#candidate|5987|(6, 4, 5)|var|int64
output = func_5985(var_5986,var_5987,)
func_5988 = relay.Function([var_5986,var_5987,], output)
mutated_mod['func_5988'] = func_5988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_481_call = mod.get_global_var('func_481')
func_483_call = mutated_mod.get_global_var('func_483')
call_5994 = relay.TupleGetItem(func_481_call(), 1)
call_5995 = relay.TupleGetItem(func_483_call(), 1)
output = call_5994
output2 = call_5995
func_5998 = relay.Function([], output)
mod['func_5998'] = func_5998
mod = relay.transform.InferType()(mod)
output = func_5998()
func_5999 = relay.Function([], output)
mutated_mod['func_5999'] = func_5999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_892_call = mod.get_global_var('func_892')
func_893_call = mutated_mod.get_global_var('func_893')
call_6000 = func_892_call()
call_6001 = func_892_call()
output = call_6000
output2 = call_6001
func_6021 = relay.Function([], output)
mod['func_6021'] = func_6021
mod = relay.transform.InferType()(mod)
output = func_6021()
func_6022 = relay.Function([], output)
mutated_mod['func_6022'] = func_6022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1921_call = mod.get_global_var('func_1921')
func_1923_call = mutated_mod.get_global_var('func_1923')
call_6023 = relay.TupleGetItem(func_1921_call(), 0)
call_6024 = relay.TupleGetItem(func_1923_call(), 0)
output = relay.Tuple([call_6023,])
output2 = relay.Tuple([call_6024,])
func_6025 = relay.Function([], output)
mod['func_6025'] = func_6025
mod = relay.transform.InferType()(mod)
mutated_mod['func_6025'] = func_6025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6025_call = mutated_mod.get_global_var('func_6025')
call_6026 = func_6025_call()
output = call_6026
func_6027 = relay.Function([], output)
mutated_mod['func_6027'] = func_6027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_455_call = mod.get_global_var('func_455')
func_457_call = mutated_mod.get_global_var('func_457')
call_6054 = relay.TupleGetItem(func_455_call(), 0)
call_6055 = relay.TupleGetItem(func_457_call(), 0)
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_6088 = func_3515_call()
call_6089 = func_3515_call()
func_567_call = mod.get_global_var('func_567')
func_569_call = mutated_mod.get_global_var('func_569')
call_6096 = relay.TupleGetItem(func_567_call(), 0)
call_6097 = relay.TupleGetItem(func_569_call(), 0)
func_5199_call = mod.get_global_var('func_5199')
func_5201_call = mutated_mod.get_global_var('func_5201')
call_6098 = func_5199_call()
call_6099 = func_5199_call()
output = relay.Tuple([call_6054,call_6088,call_6096,call_6098,])
output2 = relay.Tuple([call_6055,call_6089,call_6097,call_6099,])
func_6100 = relay.Function([], output)
mod['func_6100'] = func_6100
mod = relay.transform.InferType()(mod)
mutated_mod['func_6100'] = func_6100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6100_call = mutated_mod.get_global_var('func_6100')
call_6101 = func_6100_call()
output = call_6101
func_6102 = relay.Function([], output)
mutated_mod['func_6102'] = func_6102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6180 = relay.var("var_6180", dtype = "int64", shape = ())#candidate|6180|()|var|int64
var_6181 = relay.var("var_6181", dtype = "int64", shape = (10, 1, 7))#candidate|6181|(10, 1, 7)|var|int64
bop_6182 = relay.logical_xor(var_6180.astype('int64'), var_6181.astype('int64')) # shape=(10, 1, 7)
func_481_call = mod.get_global_var('func_481')
func_483_call = mutated_mod.get_global_var('func_483')
call_6187 = relay.TupleGetItem(func_481_call(), 0)
call_6188 = relay.TupleGetItem(func_483_call(), 0)
func_5100_call = mod.get_global_var('func_5100')
func_5101_call = mutated_mod.get_global_var('func_5101')
call_6191 = func_5100_call()
call_6192 = func_5100_call()
output = relay.Tuple([bop_6182,call_6187,call_6191,])
output2 = relay.Tuple([bop_6182,call_6188,call_6192,])
func_6195 = relay.Function([var_6180,var_6181,], output)
mod['func_6195'] = func_6195
mod = relay.transform.InferType()(mod)
var_6196 = relay.var("var_6196", dtype = "int64", shape = ())#candidate|6196|()|var|int64
var_6197 = relay.var("var_6197", dtype = "int64", shape = (10, 1, 7))#candidate|6197|(10, 1, 7)|var|int64
output = func_6195(var_6196,var_6197,)
func_6198 = relay.Function([var_6196,var_6197,], output)
mutated_mod['func_6198'] = func_6198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5241_call = mod.get_global_var('func_5241')
func_5243_call = mutated_mod.get_global_var('func_5243')
call_6220 = func_5241_call()
call_6221 = func_5241_call()
output = call_6220
output2 = call_6221
func_6225 = relay.Function([], output)
mod['func_6225'] = func_6225
mod = relay.transform.InferType()(mod)
mutated_mod['func_6225'] = func_6225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6225_call = mutated_mod.get_global_var('func_6225')
call_6226 = func_6225_call()
output = call_6226
func_6227 = relay.Function([], output)
mutated_mod['func_6227'] = func_6227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_6243 = relay.TupleGetItem(func_3419_call(), 0)
call_6244 = relay.TupleGetItem(func_3421_call(), 0)
output = relay.Tuple([call_6243,])
output2 = relay.Tuple([call_6244,])
func_6247 = relay.Function([], output)
mod['func_6247'] = func_6247
mod = relay.transform.InferType()(mod)
output = func_6247()
func_6248 = relay.Function([], output)
mutated_mod['func_6248'] = func_6248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1208_call = mod.get_global_var('func_1208')
func_1209_call = mutated_mod.get_global_var('func_1209')
call_6280 = func_1208_call()
call_6281 = func_1208_call()
output = relay.Tuple([call_6280,])
output2 = relay.Tuple([call_6281,])
func_6300 = relay.Function([], output)
mod['func_6300'] = func_6300
mod = relay.transform.InferType()(mod)
output = func_6300()
func_6301 = relay.Function([], output)
mutated_mod['func_6301'] = func_6301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6225_call = mod.get_global_var('func_6225')
func_6227_call = mutated_mod.get_global_var('func_6227')
call_6330 = func_6225_call()
call_6331 = func_6225_call()
output = call_6330
output2 = call_6331
func_6340 = relay.Function([], output)
mod['func_6340'] = func_6340
mod = relay.transform.InferType()(mod)
output = func_6340()
func_6341 = relay.Function([], output)
mutated_mod['func_6341'] = func_6341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_391_call = mod.get_global_var('func_391')
func_392_call = mutated_mod.get_global_var('func_392')
call_6370 = func_391_call()
call_6371 = func_391_call()
func_6300_call = mod.get_global_var('func_6300')
func_6301_call = mutated_mod.get_global_var('func_6301')
call_6372 = relay.TupleGetItem(func_6300_call(), 0)
call_6373 = relay.TupleGetItem(func_6301_call(), 0)
func_847_call = mod.get_global_var('func_847')
func_849_call = mutated_mod.get_global_var('func_849')
var_6375 = relay.var("var_6375", dtype = "uint64", shape = (1248,))#candidate|6375|(1248,)|var|uint64
call_6374 = relay.TupleGetItem(func_847_call(relay.reshape(var_6375.astype('uint64'), [1248,])), 0)
call_6376 = relay.TupleGetItem(func_849_call(relay.reshape(var_6375.astype('uint64'), [1248,])), 0)
output = relay.Tuple([call_6370,call_6372,call_6374,var_6375,])
output2 = relay.Tuple([call_6371,call_6373,call_6376,var_6375,])
func_6380 = relay.Function([var_6375,], output)
mod['func_6380'] = func_6380
mod = relay.transform.InferType()(mod)
mutated_mod['func_6380'] = func_6380
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6381 = relay.var("var_6381", dtype = "uint64", shape = (1248,))#candidate|6381|(1248,)|var|uint64
func_6380_call = mutated_mod.get_global_var('func_6380')
call_6382 = func_6380_call(var_6381)
output = call_6382
func_6383 = relay.Function([var_6381], output)
mutated_mod['func_6383'] = func_6383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5241_call = mod.get_global_var('func_5241')
func_5243_call = mutated_mod.get_global_var('func_5243')
call_6413 = func_5241_call()
call_6414 = func_5241_call()
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_6428 = func_3515_call()
call_6429 = func_3515_call()
func_6100_call = mod.get_global_var('func_6100')
func_6102_call = mutated_mod.get_global_var('func_6102')
call_6432 = relay.TupleGetItem(func_6100_call(), 0)
call_6433 = relay.TupleGetItem(func_6102_call(), 0)
output = relay.Tuple([call_6413,call_6428,call_6432,])
output2 = relay.Tuple([call_6414,call_6429,call_6433,])
func_6437 = relay.Function([], output)
mod['func_6437'] = func_6437
mod = relay.transform.InferType()(mod)
mutated_mod['func_6437'] = func_6437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6437_call = mutated_mod.get_global_var('func_6437')
call_6438 = func_6437_call()
output = call_6438
func_6439 = relay.Function([], output)
mutated_mod['func_6439'] = func_6439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2788_call = mod.get_global_var('func_2788')
func_2789_call = mutated_mod.get_global_var('func_2789')
call_6447 = func_2788_call()
call_6448 = func_2788_call()
output = call_6447
output2 = call_6448
func_6457 = relay.Function([], output)
mod['func_6457'] = func_6457
mod = relay.transform.InferType()(mod)
output = func_6457()
func_6458 = relay.Function([], output)
mutated_mod['func_6458'] = func_6458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6459 = relay.var("var_6459", dtype = "float64", shape = (2, 6, 15))#candidate|6459|(2, 6, 15)|var|float64
uop_6460 = relay.rsqrt(var_6459.astype('float64')) # shape=(2, 6, 15)
func_2461_call = mod.get_global_var('func_2461')
func_2464_call = mutated_mod.get_global_var('func_2464')
var_6463 = relay.var("var_6463", dtype = "float64", shape = (20, 48))#candidate|6463|(20, 48)|var|float64
const_6464 = relay.const([2.836836,-7.798868,-6.368067,6.895270,-7.121485,6.646435,3.377663,-4.001380,-8.005457,2.676759,-8.307197,-4.784901,-2.466450,-7.610522,7.950050,5.994194,-0.277845,-6.047834,-8.619676,0.476993,5.730761,7.437111,-7.267192,8.055450,-9.795332,3.739163,-0.600208,0.398213,3.031874,-5.623495,0.860036,-1.428693,7.165062,-6.220340,-0.601966,7.405649,2.330864,-3.270523,-5.792931,-1.668103,-1.892373,9.556603,7.281083,8.760556,-3.007846,9.992511,-9.518189,-4.028586,6.971442,1.465976,-6.542952,3.221728,5.023982,5.104523,5.648192,-6.729566,-7.838789,-2.798815,-2.469000,-4.527104,1.352130,8.992778,8.455602,1.746539,-0.658329,7.971584,4.675516,-1.506743,-6.413519,-8.099636,1.827097,-7.640544,-5.152536,8.920786,-9.041296,-8.546593,-4.698453,2.101391,4.451454,-4.740037,-2.318217,-2.400266,-2.195531,-6.149574,3.999491,-3.088431,-8.547774,-0.658732,9.414363,6.542502,3.642162,8.018810,5.265165,-2.096233,7.381224,9.051788,-8.961089,-0.222948,-2.403561,8.901904,7.343504,6.389337,-8.238580,8.034884,2.972483,-2.520334,-1.487810,-5.774654,-7.758314,-0.925720,8.500787,9.794324,1.514075,-0.979628,4.512147,7.421892,2.916526,-5.779023,-2.878810,1.828675,-3.863196,2.504863,6.479238,6.629954,-6.568659,-7.214080,3.832836,1.024322,2.421222,-9.561818,3.958763,9.356183,-3.591695,2.384584,3.852845,7.632383,-8.771326,-4.628814,-4.099288,6.336115,9.639469,9.694340,-7.333374,-5.073467,-3.381596,-7.596070,-0.283417,2.552344,7.414662,-1.828798,4.515485,-4.043368,-1.016048,-8.030636,-2.537412,9.613122,0.319768,-8.338564,7.185335,6.053309,-7.091895,3.141717,4.274639,7.323267,7.308285,-7.871453,2.637901,-2.566678,7.092127,7.792221,2.707422,-3.367796,1.274463,-5.362561,4.014910,-2.633924,4.049176,-7.280528,-1.840744,1.766203,3.862617,2.023543,-2.823316,-0.347014,-1.523534,-2.009787,-8.631551,-2.316390,4.799797,-8.692669,-6.017093,-7.917781,7.544485,-1.385463,6.311814,8.442685,5.769209,0.082058,1.285057,-5.330687,2.083275,7.409951,8.612976,6.287065,-3.230282,6.259604,9.671548,-6.863345,-3.367156,-0.333641,-6.357086,5.137064,-6.678679,4.084173,-9.346370,2.811566,-8.435810,-0.259244,-5.218993,6.430134,5.865784,4.924474,-9.148423,3.073799,7.949331,-1.721529,-9.719996,2.201228,5.746747,-8.875281,-8.012876,0.182789,-7.737107,-8.584000,-5.670697,2.794100,-7.844309,-4.468326,-0.110302,-6.274830,4.213809,6.315545,-6.847468,0.608117,7.424383,4.468215,3.624714,4.896648,-2.795622,0.730189,8.501960,6.644974,3.230910,-5.804680,4.506477,8.437343,-3.907202,-6.571476,-4.200306,-9.392214,1.864775,0.565041,-7.442164,-2.815195,1.036972,4.558781,-2.605852,-5.285858,-5.871343,3.920775,6.872645,6.337262,5.395926,-6.811364,4.422089,-2.520420,5.479676,8.098824,-6.808632,-8.476603,4.176971,-9.664638,-6.043935,-5.204625,2.800635,5.780272,-1.821441,-8.796760,-4.218560,0.488719,4.552508,6.838918,-0.062045,5.283692,-2.406904,-6.602454,7.305533,-0.682452,5.882597,1.392023,-2.048682,-0.867191,1.850592,1.277441,4.840750,7.138081,-5.213621,9.101452,5.515509,2.246032,7.097488,-8.517111,-2.749745,-2.528175,5.472721,-9.000245,-7.619181,-0.145611,-9.616227,-0.329559,1.444051,-3.917951,-9.637811,-2.654602,-1.861275,9.492619,0.233074,6.297737,-4.071827,0.367052,7.848249,-2.150202,-9.941008,8.191610,-5.812344,9.629341,8.301715,6.400783,1.925605,2.747216,6.850140,2.098093,-0.031326,-0.696185,0.755538,-0.169564,5.811528,-0.194595,-0.923393,-7.348441,5.540174,-7.535693,-3.390812,-2.916976,4.923025,8.870059,3.670022,1.112741,4.336644,-2.218042,2.866364,9.147050,9.785967,4.546483,8.036737,-3.374007,7.985553,5.340572,-0.766111,8.102427,-8.471972,-2.467182,-3.751336,9.970861,3.066910,-4.310601,3.012452,-6.644372,6.542971,-4.735179,6.773354,-8.959762,2.356488,-9.907897,6.702134,7.582606,5.558524,8.728456,2.324358,4.080763,9.506273,1.749966,-4.346049,7.737728,9.242850,-2.693623,6.370601,8.062146,7.775530,-7.283823,-3.441114,-2.429108,-9.957586,2.566741,-5.435398,-6.476552,-2.421503,-5.543772,4.126463,-1.214721,6.714193,-3.824265,9.889999,2.617264,2.860419,-7.581272,1.670167,4.453588,-6.470834,9.033322,-5.916185,-7.952290,-4.410638,0.744547,0.541832,-9.638598,-5.186273,8.791568,7.284543,-3.575099,-8.478832,-9.350889,3.804328,1.662521,-2.503823,8.183055,7.163831,4.866792,-5.138991,4.796878,-8.325670,3.395166,-1.302443,4.095522,6.160572,8.156029,-2.711817,-3.916079,8.882564,3.690963,-8.215824,-8.650071,4.565733,2.822518,-8.162163,5.837889,1.778883,-4.192958,4.084161,1.827800,5.524482,-5.227478,-5.645182,-5.001586,5.763965,0.993013,-0.501079,0.003894,8.045093,7.938766,0.259508,-2.315608,9.362579,4.359663,-8.306607,-4.708295,0.414597,7.454401,4.790708,9.029207,-9.872416,-1.836297,8.602124,-2.092568,4.389867,-4.519843,-3.263610,3.107475,4.990595,-0.376794,1.661249,-9.555897,2.468097,-9.764164,0.280844,5.733917,-9.870272,-9.589578,9.608243,-5.263911,-0.066157,-3.415464,0.959308,4.298522,-6.779152,7.845559,-5.061814,-4.664961,2.479954,-0.538006,-9.262251,-7.277423,5.299459,-2.642888,9.262945,3.917212,-4.683483,-2.424020,4.338333,-5.052176,2.228360,0.520972,1.517245,-7.542307,-1.366626,1.370999,-2.023135,8.398453,-5.789784,9.998197,-8.286259,-0.800506,-8.835847,8.657924,-6.646767,4.913127,8.800064,8.575002,-0.029441,8.293281,-9.435330,1.022463,4.303871,-8.437069,9.147144,4.439215,9.814334,-3.549946,4.176058,5.427609,8.360574,9.529133,-9.458625,-9.311175,-3.412826,7.297212,-7.073564,-9.354700,-2.115684,-2.541931,-8.533827,5.164286,6.918717,9.303305,5.020040,-5.602895,3.023888,7.111302,-4.537653,-0.876529,-3.073969,8.731487,-9.785656,-2.476374,-1.842128,-3.165575,-5.146911,-7.492963,8.025997,-8.089403,3.325373,-4.573791,9.689199,-7.683427,2.156826,-7.315734,-0.066774,-2.044789,7.343070,7.842746,1.057713,-2.716175,-3.206299,8.305383,-4.258140,-2.509858,-5.548270,-9.909499,7.001425,8.025554,8.592982,-0.463031,7.109811,0.687032,8.994962,2.005221,-7.650364,-1.167022,-7.307302,7.032689,-0.671380,-0.739372,-9.308483,-3.988115,1.082996,-7.753900,0.020936,1.829480,8.737823,-7.292407,4.005589,-2.649164,5.695614,-8.268735,-7.297264,5.988020,-7.302397,-9.033038,-3.887881,-8.902959,-8.434605,8.257459,4.016691,3.153717,6.471061,7.091296,7.816312,-0.716882,-5.321833,-3.948175,-5.966991,2.795065,-3.166824,4.359640,-0.493503,-0.317822,-7.349292,9.509081,-2.534705,9.011870,-1.844885,8.202879,-6.651776,-4.293871,-9.343960,7.800659,-6.297005,4.297514,-9.498787,-6.113127,-6.396214,-3.585795,-7.132529,-7.856583,-4.025139,-8.173003,-4.150407,-3.637928,7.687587,-7.715629,3.893536,5.532528,-3.546369,-7.440794,2.715794,-2.523115,-1.223098,2.625766,-2.293028,8.270513,8.265171,8.376459,4.517810,-6.920935,-6.497987,6.695463,-2.611533,-4.978855,5.048554,-4.896352,5.455447,1.546968,8.314180,-2.642877,-9.062956,-9.454513,6.098454,-7.074435,3.624227,1.414995,2.937393,3.916080,5.247105,-5.661980,2.674568,-2.632880,2.423650,-2.691055,-9.561429,-3.205752,-3.774707,-2.214265,-0.912827,4.299543,5.312634,-4.031601,2.400158,-7.419899,3.156709,1.841840,5.134557,5.828483,2.465640,7.761333,-4.485982,3.260738,-9.251822,-9.415309,-6.284189,-8.815116,-0.965679,-6.204907,1.478020,2.986856,0.848932,7.654542,-0.648966,-5.646988,-0.543720,4.891599,3.100863,8.073286,-3.160154,6.877570,0.457597,-3.357900,-1.655671,9.958907,5.072636,-5.437055,-4.332942,-1.312637,-2.601566,-2.512389,-5.090720,5.714617,-8.188073,-0.519093,-3.432491,6.218578,1.912803,0.348612,-0.004360,0.201096,5.426743,9.808810,0.132195,-4.637764,-0.986519,-5.770299,-0.392920,-4.727823,6.925837,9.106998,-3.358364,2.560124,-0.111902,9.363834,-7.544187,4.539745,-3.911571,8.985269,-3.206433,4.607209,-9.537182,7.510527,5.042318,-2.431525,-4.771906,-0.584029,-2.136318,9.381542,6.031471,-5.896194,1.421075,2.280886,-5.088911,-9.073355,2.238679,6.347698,4.277206,-9.849007,-0.754407,2.246268,9.350810,-3.311627,-2.227035,-3.679861,-9.556610,7.803456,-4.362956,-4.117497,4.249921,5.053229,-0.481267,-2.894630,-8.093988,8.706085,4.387420,6.173640,-9.001901,6.290375,9.383254,-7.466026,-4.925704,-2.613087,4.125933,5.763771,1.522065,8.522151,6.554449,2.653184,-9.330583,-2.107365,-7.381833,-4.641998,6.332049,3.373065,-0.871442,1.323329,0.970258,7.889210,-9.271891,3.434524,-8.053936,7.064886,-4.952291,4.240781,8.105674,4.092082,4.477007,4.774483,4.756665,-7.210804,-2.945305,-5.118565,2.259018,-3.971221,-5.903213,6.149620,-0.452295,-4.508938,2.457407,-8.989034,0.031702,-1.669965,1.448996,-2.556530,-4.086471,-5.921851,-3.315605,-0.269234,5.397917,7.465615,-0.082333,-0.031150,7.390553,-8.768973,-2.778609,-8.294130,-9.780139,-8.581763,-9.911515,-4.894426,9.415470,7.013268,2.185534,5.101120,7.125726,-7.125937,4.041818,-9.893708,2.990515,-7.557998,9.704311,3.955982,1.364625,-8.139160,-3.493851,9.458169,3.083413,9.606959,-8.566753,7.135549,0.533196,-4.843336,-6.480671,-5.735915,3.347520,9.809586,6.150040,-0.106899,6.686489,-2.619018,2.837395,2.919868,-3.303970,3.974883,-5.364339,-9.165380,-0.340458,-4.359096,-6.956045,-9.257173,5.273006,-1.976728,-2.146799,-4.854401,5.401819,-1.869809,-3.066829,-3.047539,-9.593369,0.333143,-6.793145,8.303506,-2.914888,-3.107802,-3.865340,-4.350057,-8.930157,-7.030767,6.468650,-6.548882,0.211857,2.736511,7.600211,-1.442078,7.177656,-2.362188,-7.322912,-8.705946,8.631169,2.283300,9.756989,-4.789620,-1.497505,2.454673,9.011868,5.060803,-2.186105,-5.072601,-3.318884,5.375478,-5.493432,0.823938,3.633209,-7.217674,-9.331631,-1.962763,9.402451,-1.070625,8.054841,-5.307032,6.544197,9.795982,-0.542784,2.281516,1.023281,2.681808,-0.912308,-9.218715,-6.733527,3.532363,-4.643724,6.747271,-0.716759,4.080365,4.170174,-4.623013,7.937860,-1.248721,0.731168,-6.624252,-5.506863,-7.709984,1.288313,4.755269,8.468690,-7.220284,-1.092876,-3.651968,8.200491,0.284672,7.575419,-3.693301,4.210847,-7.894335,-6.384811,1.541759,-8.197155,-5.703944,-5.371987,-5.130774,-8.721749,7.141181,-4.521165,2.958964,-8.765697,-1.575479,-2.241380,-2.275986,1.150555,-2.435308,-6.738653,-6.205321,4.827776,-6.870555,-4.247526,-2.356996,5.634725,-1.489773,5.922835,-9.951046,-2.401072,1.202272,2.796404,-6.556008,-1.584232,-0.572825,5.830739,-9.139535,0.951084,-9.282925,6.815360,-6.668405,2.492485,-6.579687,-0.254625,-8.557525,3.415035,0.132384,0.866234,0.337922,-9.958010,-9.800183,-2.602770,1.267257,2.597822,-8.762563,-1.078955,-5.340717,8.886283,-7.151210,1.492529,-6.743634,-9.407285,0.175410,7.634019,0.268661,-7.199906,8.243586,-4.869843,8.578639,4.554464,-1.427612,-4.189665,2.738338,1.554732,-7.424106,-6.547382,1.029242,-9.435203,-2.372870,9.094478,-2.941770,-7.237524,6.621670,-0.018033,-1.846246,-8.053092,8.437281,3.237557,-8.712680,-2.827231,5.412094,4.984537,5.485784,4.645543,6.307736,0.624595,3.134221,-0.465790,2.588525,8.319293,-3.057893,-1.808941,-4.089195,-8.200259,4.723095,7.348106,0.659330,8.712816,8.716505,-1.106105,-9.538602,-4.809744,1.312653,-0.455673,3.861618,8.555120,3.623649,5.897318,3.184396,-2.648847,-3.801504,-4.919695,-0.130766,-5.981368,-1.264662,-5.942382,-7.175948,-7.755606,2.307973,-3.116399,-6.463185,-1.826642,-3.679569,-9.558903,6.992913,-7.194528,-6.520933,6.939274,-7.136903,-8.616133,9.247226,5.267757,7.351027,3.003364,-6.612055,2.263837,7.628550,-6.481703,7.103545,-6.211977,5.337459,-4.595413,0.382250,-3.314369,5.166190,-3.046424,-8.962521,6.614680,-3.550838,-6.232212,-7.111808,5.506936,-8.450964,3.034677,-4.814743,-8.353665,-8.177036,-5.651098,1.747284,-3.691971,3.323864,7.026728,-0.553655,-6.565603,6.990913,-8.717628,-0.319805,-9.227370,1.347411,5.931440,8.080408,-7.390816,-6.473161,6.897855,6.225683,3.678604,-6.049829,-0.121160,3.574377,2.005390,-3.602927,-7.328128,-2.193263,5.769316,1.003544,3.231350,-9.875835,-2.934647,-7.890818,-0.743411,8.435668,6.387482,-8.875642,9.990831,-7.963174,7.654792,-9.488914,9.138223,-3.771652,-6.459000,9.469484,-2.094981,0.399349,5.680221,-2.870725,-3.408247,3.710167,9.881090,2.895906,3.523208,-1.299026,-3.181236,-7.400654,7.160046,-7.844675,-4.790242,2.925743,-4.606232,-1.797770,3.796749,8.980234,-4.388214,4.354168,6.787722,-6.557507,-9.194884,3.491824,0.929410,-7.036379,-9.514978,0.154104,4.940598,7.141110,5.501229,4.718470,-7.372744,-9.954229,9.680416,-5.399720,3.544847,9.371483,2.749259,-8.467322,-6.141608,1.802556,-9.654264,-7.618308,-1.200204,6.519328,9.756357,-5.596769,7.733236,-3.455900,-7.320986,6.855522,-6.690064,4.506482,3.062520,-4.908494,-4.931497,-6.370702,-1.904895,-8.107979,-0.477783,0.142493,-9.199474,9.324003,-9.123286,-0.016027,7.750547,-3.648875,-2.584643,8.538848,-6.009622,-8.592219,-4.492942,4.398286,5.331780,5.138328,7.615117,9.683677,-4.286214,7.137471,-3.480134,6.570216,-5.541834,8.049689,7.367857,-9.814278,3.911911,-5.528654,-6.322674,-7.743399,-6.153710,3.682060,-9.151709,3.143127,-0.454589,-0.548359,0.574423,-7.436560,5.581332,-1.761573,-4.881063,-4.307935,3.405638,8.643699,-8.037163,6.220500,4.015963,-3.686125,8.102606,-9.226989,3.911607,2.354504,-8.810476,-1.008423,0.267452,-3.100095,4.859179,8.735098,-5.067740,-2.215724,7.192450,9.302718,8.434640,-8.555530,6.974894,-5.649197,1.575166,8.134282,7.361680,-7.529535,5.882561,-7.875236,6.971350,2.189595,4.577498,5.614052,-6.592387,4.676042,-1.063265,-5.232363,0.937043,-7.734273,-0.847100,-5.574169,0.698669,9.256672,-4.515236,-5.412838,4.272180,6.306721,5.742024,9.286938,6.099220,5.953263,3.618682,2.916381,-2.474467,1.821358,-3.996189,-7.181321,-4.693118,-9.763607,-8.440851,3.224948,-5.949114,-2.324301,2.352559,6.487859,-1.249068,-0.628673,7.224333,-4.045978,-5.207692,-8.802268,-5.768648,-4.309130,-3.040605,5.485739,5.545186,2.355194,5.875657,-6.776655,8.599395,6.160063,-6.755262,8.630092,2.611675,-1.053155,-9.892042,-8.474558,4.235576,8.630440,2.156164,-3.384477,1.454049,0.800172,5.265699,7.993874,4.971125,8.269856,0.838605,9.760517,-9.651206,-0.540739,7.157134,2.115196,1.471703,-7.609318,2.580586,-2.165816,-5.816941,5.832472,7.856820,4.350250,4.920034,-9.228468,6.060242,-5.749488,0.348003,-2.797715,6.073713,-0.425505,4.031879,-8.695683,2.799059,9.779198,-5.262074,-3.763015,-5.982322,-1.057185,-8.357783,-6.458790,7.222219,3.231329,5.491347,4.567996,-8.026421,3.942384,-6.448955,-0.617821,-9.229257,-5.708197,3.522348,-3.674981,-0.053309,4.747137,-9.390047,-9.632153,-7.670778,-5.010684,-8.474126,1.241143,5.452171,-4.100464,-2.482072,-0.814233,-2.508244,7.122630,0.809903,8.046185,-3.201133,-3.737792,-8.128166,-7.738271,-3.674892,-0.113793,-8.362236,9.217944,9.968091,-6.611584,0.089849,-3.682991,2.042465,9.465379,-3.692364,-2.391268,8.730054,8.975812,8.260309,4.631901,-3.148784,-5.926847,3.822541,5.959207,4.225873,-2.169544,-1.076818,4.592728,-4.458454,-5.288387,5.693486,2.237094,0.520512,5.976298,1.305473,-9.355519,-8.716248,-8.465662,2.328232,-7.722488,8.007093,9.831489,-0.790030,0.055701,1.815976,8.742642,-1.838399,5.626311,7.999389,3.914302,8.796415,-1.290809,-7.451055,8.695556,-0.137931,1.907670,-7.090600,8.225815,0.462821,4.172826,-7.563949,8.066955,-1.682722,-5.130133,8.250026,-6.674972,-9.957791,7.152172,9.323189,-3.850222,-5.905132,-3.607233,-8.870021,1.134546,-9.759295,-1.048237,2.766066,-8.705442,-9.667421,8.480730,-1.655450,0.994015,8.948095,0.448056,2.056712,-7.535353,0.620173,6.092780,4.309974,9.870262,5.396153,-3.366937,-2.612093,-0.884074,-2.373083,-3.944262,8.643693,3.823266,-1.425234,-3.228851,-9.589995,-2.488996,5.975776,2.485107,-9.258857,-7.829475,-6.185702,1.663947,2.812345,1.729589,6.150812,-7.660093,3.949180,1.935265,7.525203,-5.932713,8.642541,4.388011,-9.367044,6.982065,-9.288696,-8.499973,-7.657278,8.240567,-6.743739,9.936644,-0.440511,-1.442561,4.863831,-8.323155,4.382689,-1.313161,7.459107,3.325499,-8.232440,-6.122348,7.450436,1.855569,-3.090512,2.702820,-8.002092,3.027874,1.841135,-8.993999,4.807619,4.365972,8.602809,7.416208,8.005131,-5.309915,9.181417,-2.857745,-4.560336,9.256608,-4.026427,3.487875,3.786182,-6.944187,-5.619802,-2.093368,1.618179,6.135066,0.038616,6.151390,8.830003,2.911838,-3.962145,7.694524,6.205895,-7.922910,-7.211143,-1.991042,-3.379953,-5.106169,-8.935368,-1.542609,-1.939503,-0.278285,5.881844,-6.072187,-3.157671,0.888666,-8.978556,2.542403,0.259582,3.299337,0.789501,-2.986505,-3.391353,-0.026537,2.622090,-5.398303,-2.518190,3.355868,-3.670156,6.643499,0.356538,-3.532126,1.512689,-4.568034,8.644264,-5.757489,2.758293,-3.083529,6.228635,-8.165597,9.708240,-9.098870,-8.362525,7.743622,-4.719247,0.259709,-9.765112,6.728757,7.883121,-0.885225,3.928926,7.882016,4.906786,5.638780,-3.546512,6.818252,-5.190803,-9.972759,-4.730507,-9.445316,-8.467581,-7.234489,9.011588,-7.386776,4.400667,7.815289,-1.916050,-5.504321,-7.862516,-5.518779,5.319148,-7.339965,-1.871574,-7.438208,3.019153,8.378831,-4.925574,-6.435211,8.728049,-1.298563,1.762994,3.136634,-2.314418,-2.613319,9.605713,-3.325225,-6.583755,9.275090,6.741545,3.266923,-8.569058,-0.118934,4.769781,-1.760372,2.528455,2.908053,-0.383902,-1.733891,-3.341067,8.320386,-1.845836,2.903161,-3.136299,9.032610,-1.177778,-7.141108,3.701121,-9.935175,8.117860,7.212976,2.278824,-6.957751,4.975826,4.891158,7.827212,-0.979477,-3.455765,-9.597586,-5.409794,-9.365018,9.495764,0.046193,2.193258,4.704487,-7.080778,6.280135,0.312529,8.036657,9.611937,3.163570,1.661517,-7.441694,0.835994,-1.268647,-1.276416,-6.748580,-2.774756,-0.984283,9.792227,-0.040776,-4.563517,-3.629723,1.988206,-0.394218,-2.578741,3.148654,8.453191,9.536794,6.872591,-0.457588,-2.175343,1.713619,-8.008879,-8.184056,2.384961,0.590432], dtype = "float32")#candidate|6464|(1800,)|const|float32
call_6462 = relay.TupleGetItem(func_2461_call(relay.reshape(var_6463.astype('float64'), [8, 12, 10]), relay.reshape(const_6464.astype('float32'), [3, 600]), ), 1)
call_6465 = relay.TupleGetItem(func_2464_call(relay.reshape(var_6463.astype('float64'), [8, 12, 10]), relay.reshape(const_6464.astype('float32'), [3, 600]), ), 1)
bop_6468 = relay.not_equal(uop_6460.astype('bool'), relay.reshape(var_6459.astype('bool'), relay.shape_of(uop_6460))) # shape=(2, 6, 15)
output = relay.Tuple([call_6462,var_6463,const_6464,bop_6468,])
output2 = relay.Tuple([call_6465,var_6463,const_6464,bop_6468,])
F = relay.Function([var_6459,var_6463,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6459,var_6463,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

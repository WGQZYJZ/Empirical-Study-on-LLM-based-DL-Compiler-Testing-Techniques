import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_32 = relay.var("var_32", dtype = "float32", shape = (2, 12, 6))#candidate|32|(2, 12, 6)|var|float32
uop_33 = relay.log10(var_32.astype('float32')) # shape=(2, 12, 6)
var_78 = relay.var("var_78", dtype = "float32", shape = (2, 12, 6))#candidate|78|(2, 12, 6)|var|float32
bop_79 = relay.less(uop_33.astype('bool'), relay.reshape(var_78.astype('bool'), relay.shape_of(uop_33))) # shape=(2, 12, 6)
output = bop_79
output2 = bop_79
func_82 = relay.Function([var_32,var_78,], output)
mod['func_82'] = func_82
mod = relay.transform.InferType()(mod)
mutated_mod['func_82'] = func_82
mutated_mod = relay.transform.InferType()(mutated_mod)
func_82_call = mutated_mod.get_global_var('func_82')
var_84 = relay.var("var_84", dtype = "float32", shape = (2, 12, 6))#candidate|84|(2, 12, 6)|var|float32
var_85 = relay.var("var_85", dtype = "float32", shape = (2, 12, 6))#candidate|85|(2, 12, 6)|var|float32
call_83 = func_82_call(var_84,var_85,)
output = call_83
func_86 = relay.Function([var_84,var_85,], output)
mutated_mod['func_86'] = func_86
mutated_mod = relay.transform.InferType()(mutated_mod)
var_105 = relay.var("var_105", dtype = "uint16", shape = (9, 16, 12))#candidate|105|(9, 16, 12)|var|uint16
var_106 = relay.var("var_106", dtype = "uint16", shape = (9, 16, 12))#candidate|106|(9, 16, 12)|var|uint16
bop_107 = relay.less(var_105.astype('bool'), relay.reshape(var_106.astype('bool'), relay.shape_of(var_105))) # shape=(9, 16, 12)
bop_118 = relay.logical_or(var_105.astype('bool'), relay.reshape(bop_107.astype('bool'), relay.shape_of(var_105))) # shape=(9, 16, 12)
uop_143 = relay.log(var_105.astype('float64')) # shape=(9, 16, 12)
uop_151 = relay.asin(uop_143.astype('float32')) # shape=(9, 16, 12)
uop_157 = relay.acos(uop_151.astype('float32')) # shape=(9, 16, 12)
const_165 = relay.const([[[8.342416,5.911709,4.871302,-1.309927,3.841400,3.323079,-2.939605,7.443706,9.426905,8.482332,5.475144,-1.880959],[-0.411169,1.351535,-1.630987,2.354132,3.538542,-9.394909,-9.795651,-9.700978,-8.063366,0.750721,-3.100068,-4.409429],[-5.505985,3.725586,-2.488440,-3.106588,6.959410,9.265542,-5.521414,-5.767328,-3.852185,-5.215484,1.352887,-3.121933],[7.657095,-4.060817,-2.362443,5.042275,4.259902,-1.526641,-3.690233,-9.462179,-0.909607,6.978649,-0.741243,6.694166],[-8.046566,1.706960,-3.649834,1.151483,1.448478,3.944620,-5.414085,-6.225583,5.820951,5.298876,0.579136,6.428689],[-3.372521,-2.304426,-4.606914,3.943735,0.390752,0.841885,-5.445836,1.666571,-3.799012,7.117359,0.824200,-9.981867],[-9.006003,5.601450,5.098243,-0.040362,5.076876,-6.627236,-1.269770,6.682512,-2.417324,4.173535,3.407042,-3.204067],[8.280641,9.115887,7.915108,8.201609,2.853214,1.930278,2.642753,-2.036319,-5.344140,6.067879,-7.034921,2.449720],[9.201057,7.705892,1.827060,-5.646308,9.911159,-6.085091,-4.217704,7.181023,-4.997971,-9.723250,-9.700819,-4.344244],[-8.739085,1.265990,-7.327663,7.851299,5.484412,2.420337,6.187070,9.348062,6.353460,4.061953,2.124071,9.797817],[-7.813410,8.479791,3.429041,3.293948,4.024685,-9.884019,7.062146,1.884175,8.385631,-3.408147,7.361178,4.015392],[4.732748,-3.096681,3.243374,-9.227752,9.690008,-1.554672,0.946831,-8.237199,-4.393750,9.811840,6.336609,-3.160172],[6.705671,4.756450,-2.700393,0.651342,8.300681,-5.049433,0.961038,-6.467344,9.817759,1.394895,3.549704,4.668219],[9.078960,0.619627,-3.764471,3.934322,-4.102415,-2.006210,2.228989,-1.283177,2.504120,-5.189016,1.954235,2.946524],[7.344658,-1.618088,0.536819,6.875194,-8.504129,5.431104,-5.040132,-1.868155,6.389495,-9.537573,-3.031782,6.104305],[9.461139,-1.962765,5.855818,4.097305,0.454437,9.250622,-6.663275,3.065878,3.086492,0.293730,2.107213,4.382913]],[[-8.695938,1.605421,-3.626451,-0.665179,-9.235891,1.850615,-8.083569,0.421842,-2.939407,-8.614033,6.720355,0.546007],[-6.959096,-4.965054,-7.128405,-7.389474,5.555515,2.324636,0.023624,-7.956856,-7.754222,0.267836,-7.189582,-8.159677],[3.562962,5.736653,-9.980126,4.687666,2.313042,-5.149571,6.743248,-8.576131,5.543532,5.959144,0.400386,-7.300671],[6.332203,5.052769,-3.726016,-6.994393,-8.594070,-3.404687,-6.300798,-4.344676,-5.221523,7.590382,0.199887,-0.351884],[7.217724,9.712503,8.555920,-3.269077,2.878177,9.320599,-5.257315,3.535394,0.046127,8.903306,-0.553480,-8.540180],[5.261405,-3.693321,0.957933,8.287266,-0.794236,-4.215386,-6.580623,-0.359927,-2.498989,-0.177021,0.326097,1.393888],[8.776905,-8.707034,-0.797109,-3.258405,-4.713964,4.085867,-6.355000,-7.716510,9.662597,-4.417040,-9.395229,-4.297002],[-1.865152,1.868274,-4.120346,6.125777,8.871333,5.316129,-7.763414,6.222586,2.223124,-4.558056,2.654996,-3.145895],[0.280325,2.342713,-3.261611,-8.316703,-3.782641,-0.774789,8.764975,-2.784805,-9.420701,-2.671640,-3.567081,7.749694],[-2.919418,6.184098,3.959580,7.352614,-5.749371,-2.968590,-4.906534,-9.487217,-0.300276,4.401566,-1.141927,-5.718487],[-5.373546,0.524100,3.409154,-2.735601,-1.174757,1.588122,1.091840,7.580049,5.639125,-7.512797,-9.794663,-0.249725],[-6.621338,-3.381217,-3.034226,1.676363,-1.254157,7.874188,9.617834,9.506397,8.207029,8.512622,3.349767,-5.708384],[-7.895005,-4.286226,0.293267,2.127185,4.674553,-1.008951,3.952319,-4.631941,-4.053341,0.497740,2.775168,-7.851472],[3.321147,0.566043,-1.129053,-0.255768,8.151808,7.575410,3.188493,-9.361039,7.463943,-9.887301,-3.763914,-1.903561],[-0.792116,-9.304137,-0.791615,-2.520659,8.557058,7.805660,-1.885595,-0.665632,-8.825272,-1.211093,6.521135,-4.458836],[-9.405439,6.445151,8.499051,8.856017,9.127715,6.919401,-4.778386,2.713375,-5.443492,2.041747,-6.053593,-1.981698]],[[-8.947190,6.200765,6.081314,-7.652528,-6.325325,-2.832663,6.488745,-2.410806,4.270026,-5.260899,6.910748,3.559803],[-0.385958,-5.434959,6.979658,-4.855940,-7.026747,7.919570,2.086423,1.563940,5.576854,-3.118343,8.614195,5.954138],[-3.303350,3.483599,6.262165,3.959600,4.447918,4.307167,-3.646155,-4.612580,2.157027,-2.840473,8.182852,-6.379148],[5.855455,1.714688,5.776920,-2.611360,4.857616,-1.624977,-9.261951,-9.578940,2.854686,-8.631191,1.926281,-0.875123],[-8.644541,-1.390714,-9.516996,-5.281757,6.359830,3.323278,-5.243661,-9.972058,6.192777,9.548184,4.913942,7.978980],[0.822361,-1.803043,6.808073,8.206663,-9.813640,1.924672,-3.324918,-5.403953,-9.792762,6.529791,2.395042,-2.383945],[-5.101516,1.441113,5.930898,-8.867488,-2.818912,-8.699753,-9.614108,-7.931076,8.118291,4.879707,4.399853,6.723172],[7.505100,0.977877,-6.008465,5.987251,2.139084,-9.717031,-9.141576,3.976339,-8.834128,-1.632881,6.499235,8.326466],[-5.236269,-2.717403,-0.686373,4.487332,-9.696771,2.806272,-7.511024,8.995663,3.380632,7.269860,1.401082,-7.502161],[-1.782272,-9.757326,2.931191,-5.555379,-3.273285,-4.251559,-5.205934,1.351482,-7.501452,6.183680,6.666535,-1.685300],[9.335748,-8.416294,-5.897014,-7.750631,7.521168,-5.392858,-7.520973,2.747951,5.464412,7.450509,5.881921,4.363338],[9.365702,3.607309,3.629127,7.015397,5.318815,3.355801,2.391341,-1.105350,-1.933466,0.990539,2.549841,-9.433278],[-8.290518,-9.929856,-4.760744,9.986558,-7.920341,-6.791913,-9.151262,-6.599190,-1.007745,1.803869,5.982358,-7.361607],[-6.457923,-2.423180,-3.738356,0.229312,0.629294,8.878603,2.749337,5.240452,9.472535,0.172813,-2.698948,2.416122],[-6.927036,-7.500742,-0.665608,2.781114,-3.528712,-4.682675,-4.999199,-6.885220,9.773169,9.888980,-2.931106,-3.361068],[7.439992,-2.807632,-9.595063,-7.020810,-6.789999,-4.802760,9.447813,-9.667985,-5.839772,0.925712,-4.303967,-9.779891]],[[7.974933,-1.864724,-7.569369,6.594931,-0.994676,7.687330,1.644520,5.966117,-3.792591,-6.029198,-9.332220,-3.841845],[5.918313,3.403844,9.458920,8.505773,-3.751712,-4.525766,-6.690232,-7.562591,7.129675,8.509736,7.832995,5.968413],[0.772998,4.964502,-4.674403,-8.334431,7.247857,0.644673,7.764528,8.470133,-2.356761,-4.201415,8.771210,7.191648],[2.595679,1.775227,-6.121062,-0.678390,-0.770976,7.433405,7.407228,-6.180641,1.495321,1.453998,-8.995741,-6.136173],[3.300562,-5.984720,8.441172,2.887162,-8.404903,3.037444,5.164913,-5.413888,-2.494728,-9.452942,5.187768,-0.855218],[-0.257953,8.043564,6.854990,0.498285,2.434301,0.529638,-1.216712,9.419294,-0.302361,4.568971,-7.999679,1.147319],[1.694734,5.532601,0.041600,7.081486,1.756141,-0.800387,8.621614,5.691265,7.443165,0.424829,-6.024885,1.634117],[-4.079760,-3.714801,-5.724908,4.249181,-6.963819,7.455435,-0.339741,0.099285,2.821913,-4.174855,-4.409396,2.605790],[9.283280,0.882854,2.578219,-4.637910,0.936460,5.270622,-1.122207,3.544463,4.279598,-8.506483,7.634554,7.060484],[-3.618696,5.663589,-9.297623,-9.549514,-1.410059,8.524695,-8.993805,6.406406,-7.887316,-3.317073,1.174435,3.706949],[-2.123960,-0.761978,-3.304180,-8.465188,-7.835215,4.837711,0.964135,-2.321454,2.397209,8.050437,9.073773,4.306180],[0.909505,-1.003147,4.179661,5.658679,-6.589703,6.179189,-3.795895,1.912433,-0.858200,0.648867,-7.803188,1.200538],[8.780695,-6.382405,4.934125,-6.208124,3.224997,8.292036,7.886424,-6.564400,-3.366114,-3.459457,7.252865,0.734790],[-1.474073,0.143740,-1.066635,-1.618133,-9.300807,-2.671350,-4.320529,-0.861296,-8.077884,-8.128292,1.207883,7.781956],[-8.654201,-5.728570,0.480904,9.878801,-1.029572,-8.869035,5.419593,-9.203731,4.972741,9.094461,3.251096,3.365654],[9.202102,5.819023,-2.347077,6.732438,-1.139342,0.892459,6.451669,3.923035,1.362494,3.736362,-5.670816,-3.507446]],[[-4.034920,5.388760,-1.563295,5.301105,-4.155197,-8.777628,5.939390,-4.943342,0.392639,3.136062,-3.983891,-4.185471],[7.917249,4.070834,8.500917,3.578938,9.182314,6.858300,-0.696622,-4.544778,-4.319504,0.893228,-7.594384,9.807445],[7.817096,-1.268402,-4.949605,-7.674312,-7.822047,9.538229,5.143141,-9.646777,-2.001408,-4.410028,-9.093846,0.181054],[8.999184,2.783263,-0.973306,3.411945,4.323573,-0.098528,-7.189188,7.095048,-0.999940,-0.390789,-7.798851,-8.515045],[4.930294,6.452425,4.339183,-8.104268,8.523551,-2.484592,-8.917126,-2.354647,-3.970709,4.221645,1.469250,2.504190],[-8.090383,9.464599,-8.620758,3.784511,8.211867,-3.896985,2.389310,6.416770,-1.849950,1.811917,-4.888645,-9.666215],[-2.060522,1.827125,9.762817,8.398209,1.638817,-7.541449,-2.384981,7.931811,-1.387417,2.095769,-8.422293,-6.801218],[-9.079712,4.221157,8.082690,0.971176,-5.204434,1.847340,-1.131709,3.270329,-5.306449,2.209890,0.631472,-5.631334],[-7.543414,6.547591,-6.412144,2.594873,8.425795,1.019841,9.307440,-1.449593,-5.679779,8.176708,-5.926616,-9.870861],[-2.895174,-8.064492,-9.233092,0.839588,-3.949006,6.218989,-1.741952,4.057012,4.203555,6.748004,-3.410795,-7.950757],[0.389834,8.554310,-8.495863,-1.880978,3.820384,-0.108097,8.814029,0.767568,3.088676,3.174718,7.730501,8.707306],[5.388536,8.782807,0.281283,-5.735508,6.084879,-0.563783,6.335943,-1.677462,0.078328,-3.424480,-4.273917,-9.475272],[-9.141894,-1.978092,6.465262,5.443237,-5.448728,-4.902382,-9.615860,-3.909952,-4.024633,-0.801506,-6.375781,-7.568985],[4.775511,-9.441494,-2.173926,8.608492,-3.419890,2.836889,-8.388048,5.981266,6.722987,-2.655845,-8.818841,-9.072963],[1.833128,0.730081,6.723328,-3.191242,-3.314974,9.864632,6.003598,-9.336230,-6.066602,7.581646,-4.516564,5.297201],[-9.364245,0.802516,-3.373837,1.149949,-5.134475,1.718761,9.686008,6.869306,4.122025,-4.628597,6.599182,-5.376174]],[[-3.949432,-1.115305,-4.139652,3.813152,7.273853,-4.847438,-7.223207,-3.284614,-4.265124,-1.399421,1.716244,4.946358],[-2.953104,4.504241,-4.808609,6.859252,-2.249394,6.156239,0.856435,6.684811,-2.838562,6.990872,-2.909148,4.722028],[9.235580,-5.161905,5.679533,0.672911,2.274271,-7.388497,4.616525,1.069819,0.676527,-6.319771,5.395383,-3.682608],[7.661581,-7.729048,4.383628,-8.288056,0.794305,9.236963,9.804094,1.457601,9.903853,-2.798750,9.821510,-7.473939],[8.778699,-2.078436,2.814805,-2.192527,-9.186985,-8.384843,-3.134048,-4.955150,4.604257,6.757673,6.267214,9.575962],[-9.029815,6.880336,7.563146,-7.898670,-1.996706,0.299358,0.510866,4.688704,-9.968397,1.497997,-9.599548,4.894683],[4.352281,-2.394611,8.727914,-9.137176,-8.475071,5.963113,3.271406,-7.401877,-8.101281,0.568618,5.271356,8.202312],[-4.884449,-6.769510,0.720878,-8.783192,-6.168371,8.920592,5.627473,2.720156,0.400566,9.648533,3.907107,-8.273223],[-4.801982,8.744549,-1.140152,1.862012,-6.097364,-6.111814,2.228929,-6.478651,8.474887,2.963887,8.144636,-2.495718],[-8.479727,-3.637669,7.708057,1.082349,-4.996254,4.178081,-7.459247,-5.374703,9.530847,-9.197833,1.530068,-6.761531],[-6.632151,0.393636,6.448265,-1.391014,-7.985688,6.436972,2.374917,6.663047,8.379877,2.072348,1.326782,-6.585665],[-0.056932,-3.922865,-7.101780,-5.975189,-5.795696,-2.976993,-3.070964,9.589620,2.626336,-5.083400,-9.101440,1.599116],[7.029147,5.493577,-2.239247,1.327053,-8.595509,-9.371700,-0.990647,9.955045,3.356228,-2.741518,-2.441806,-5.130767],[-7.615180,-7.216782,-7.066440,1.094126,-7.737776,-9.729594,-7.824879,4.744505,3.600056,8.491035,6.791604,9.662162],[3.444336,-4.682718,1.694701,2.467738,0.424685,-3.461910,5.034381,8.386591,-6.198607,-9.046067,5.728362,6.469587],[-9.972478,4.096334,1.528177,-1.967005,-2.497330,-4.978391,0.628025,-5.379658,-5.780267,-0.728207,-1.576235,9.744820]],[[7.473603,0.979093,-6.861699,-9.745866,-0.517539,-8.893570,-3.355372,-3.629513,9.622199,-2.615567,-3.917383,5.219990],[-0.546627,4.417851,-5.312130,2.436806,-1.158923,-8.747675,-0.472134,7.060008,-1.578757,-4.689676,-2.248402,-4.306433],[-9.221523,-9.146673,4.020360,0.626156,7.692406,-7.682367,6.165870,-8.737002,-2.544796,-4.435332,8.109839,8.022000],[0.718283,-0.402292,-4.107585,0.958259,3.867411,-5.059167,-8.964038,-2.043969,-2.826887,2.387922,2.496442,6.982043],[-0.149706,-1.605071,-6.988178,-3.455924,9.573248,5.427671,9.403880,-5.718031,3.389194,5.162009,-5.227728,5.963734],[-2.136069,0.593257,-0.305700,6.433605,-5.151386,-8.242150,-5.045565,8.190948,1.717437,3.669718,6.864832,-6.510285],[-4.443053,-7.757696,7.563524,5.762845,-0.806431,6.054393,-0.708767,-3.096593,-2.486750,7.427981,3.703077,3.447232],[1.086925,8.513893,-9.254265,9.915118,9.284910,-9.986409,-9.659621,-5.703487,-9.934518,9.526130,-3.567663,2.409967],[0.043776,3.995132,7.775298,3.532063,-7.587178,-2.782246,-0.943153,5.003045,8.115831,2.614943,-0.498379,5.838812],[4.923992,3.451939,-3.992080,7.756212,4.823975,-5.438468,6.509394,3.977279,-2.043927,-9.794537,-5.446809,-1.172420],[5.467974,0.707090,4.174691,-7.732348,4.091802,-0.369371,4.933120,6.097836,6.559599,4.505212,-1.272516,-1.677402],[-8.273748,8.827055,-3.381278,1.372559,4.881196,1.317474,9.572433,-5.560807,5.824064,-2.266312,-7.102425,7.184215],[9.237339,-9.289841,-2.465145,-7.234667,0.657886,6.060850,9.766652,-2.365660,3.362425,1.620445,6.250965,1.126502],[-8.065261,9.750649,-3.697344,-7.086663,-3.832018,8.129353,5.456008,0.111583,3.268209,3.181567,0.355728,-5.654063],[4.614956,2.063028,6.197477,-1.105501,-2.495201,-6.871301,-7.750638,-5.603609,3.589984,2.248072,8.871628,9.665836],[5.071419,6.707107,-0.030929,9.039674,0.561942,2.545940,-9.261824,4.096980,0.766659,0.502012,-4.787521,-1.589909]],[[8.519689,8.831533,3.053400,6.666976,0.794520,7.990577,-8.965125,3.561412,-4.727702,-6.280211,-2.723625,0.673942],[9.453363,-4.934045,8.396744,4.164236,-9.199213,9.810349,-6.712851,0.017795,-3.419905,3.323057,7.862587,-4.071220],[3.201533,-4.195214,-9.237898,-4.373845,-5.293143,-5.036084,8.807670,-6.797672,-7.271615,2.642021,5.710423,-1.963978],[-3.858651,-1.952580,-4.965189,5.224721,-9.209245,-5.039634,2.113264,-1.758565,6.095626,0.747110,1.037069,-7.584793],[-0.690790,-8.469111,-1.435353,2.402054,-1.846263,8.808981,-3.649227,8.466660,-3.539320,-0.525693,-6.272944,-7.426049],[3.212521,-8.061605,3.726460,-8.106279,3.881886,2.909349,7.122437,-0.704010,4.488006,-0.179432,-5.010926,-9.300087],[3.236796,-8.137802,3.078973,9.898499,5.163698,5.253578,4.587858,-8.726238,-6.638177,-7.530668,-4.759719,-8.084852],[-7.552253,1.999860,-6.644537,-2.280345,-8.834419,8.865279,0.210281,-4.925164,-7.494787,0.784883,8.890190,-1.763019],[-7.580827,9.119630,0.410290,-8.417956,1.953736,-6.119688,2.286287,7.739265,-2.385255,6.266256,-0.945345,-0.687139],[-6.845288,-7.533575,2.033958,1.178414,0.154253,-8.823245,-0.607935,9.618862,-4.621004,4.413207,-5.309585,-9.614660],[6.811888,-3.932978,4.132471,3.447579,-1.870163,-1.914054,-4.692854,3.574755,-0.424993,0.172265,-2.976706,-5.663441],[-7.992674,-1.396214,6.093175,6.916083,8.696349,-0.689553,-2.335657,-5.337944,8.955035,-4.132159,-4.590364,0.822707],[7.884245,-5.349166,0.229239,1.383276,-9.007767,-9.835048,-7.118246,5.923458,1.172146,-1.612686,2.583472,4.460023],[9.577907,-4.574768,8.128878,0.675191,-5.939841,5.244443,-2.349988,-2.959726,-5.641228,-5.578720,-1.142633,-5.284542],[4.150067,-2.748212,9.037625,0.037525,2.017439,7.674555,-0.180173,-6.039433,-3.023590,-4.134156,-1.176450,1.193207],[-4.856180,2.313822,9.003080,-5.449789,-7.391956,6.758557,-6.523385,2.523333,7.490174,0.351586,5.485053,-7.062865]],[[0.298696,-1.564202,8.739259,-3.056542,-1.544986,0.063434,-3.251651,-7.558726,-3.863314,-0.760949,3.709172,-4.052725],[-2.148686,-4.912251,2.179511,1.846863,6.745040,-2.842932,-0.691071,-1.482709,-4.925620,-3.508399,-6.078599,-5.257064],[1.223207,5.741280,-7.779631,4.114098,4.698125,-9.391097,-8.833785,3.773680,8.136509,0.578267,7.144137,-5.128598],[7.934815,-2.745771,-5.124823,-5.822780,7.543661,-0.511853,5.794417,2.971847,1.535885,-8.343922,6.338330,9.874062],[0.252248,-1.800700,6.208173,0.944824,-9.033144,-9.406541,-7.556079,-0.860427,-4.591412,1.134226,-2.903546,5.668276],[-0.356800,4.615732,5.968687,-2.710371,6.331982,4.269191,-8.732049,7.299636,-3.131963,7.070772,-3.250045,9.431695],[-3.332403,4.891729,3.807240,-1.322303,-3.876629,3.652550,-7.101320,-2.910593,0.376968,-8.384105,-2.892402,-6.645433],[6.254850,6.493850,2.595205,6.174672,2.298084,-1.221580,1.003552,-2.087514,-8.201088,7.352832,-2.363253,4.252695],[-9.206861,3.739138,0.434766,0.548117,1.866882,9.901127,0.379197,-2.769945,8.718590,5.713567,8.587082,-0.430232],[-3.547977,-1.795296,3.907097,-0.315330,-2.154985,2.373638,2.528125,-3.446961,1.955069,4.207576,-1.679077,-4.063203],[-6.024294,-5.252925,0.245931,3.202724,3.368281,-7.993247,8.891987,-1.328341,-9.342983,-2.470270,-2.077179,-5.956684],[-7.015996,8.101539,2.826458,-7.416186,7.801893,4.074438,3.883806,-7.984469,9.779904,5.962453,1.449497,-7.254970],[8.372364,6.517102,7.215518,-5.520242,1.369813,7.336073,5.347509,-5.653626,-4.649430,8.975926,5.102309,-6.876132],[9.474055,5.533464,2.891250,-8.298106,-1.250608,3.223347,-9.397420,0.357482,3.018606,-6.457103,-6.231783,5.522900],[8.495518,-3.497317,1.780261,4.861879,0.783605,6.505414,-1.335027,2.969200,-5.882346,-5.332559,-0.628854,-6.534587],[-7.886336,-7.860410,-2.467527,-4.184625,6.359331,-9.498502,5.134067,7.883683,-1.078048,-9.905317,-4.214033,-8.891511]]], dtype = "float64")#candidate|165|(9, 16, 12)|const|float64
bop_166 = relay.divide(uop_143.astype('float64'), relay.reshape(const_165.astype('float64'), relay.shape_of(uop_143))) # shape=(9, 16, 12)
bop_177 = relay.less_equal(uop_143.astype('bool'), relay.reshape(uop_151.astype('bool'), relay.shape_of(uop_143))) # shape=(9, 16, 12)
bop_183 = relay.bitwise_and(bop_177.astype('int16'), relay.reshape(uop_157.astype('int16'), relay.shape_of(bop_177))) # shape=(9, 16, 12)
output = relay.Tuple([bop_118,bop_166,bop_183,])
output2 = relay.Tuple([bop_118,bop_166,bop_183,])
func_186 = relay.Function([var_105,var_106,], output)
mod['func_186'] = func_186
mod = relay.transform.InferType()(mod)
mutated_mod['func_186'] = func_186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_186_call = mutated_mod.get_global_var('func_186')
var_188 = relay.var("var_188", dtype = "uint16", shape = (9, 16, 12))#candidate|188|(9, 16, 12)|var|uint16
var_189 = relay.var("var_189", dtype = "uint16", shape = (9, 16, 12))#candidate|189|(9, 16, 12)|var|uint16
call_187 = func_186_call(var_188,var_189,)
output = call_187
func_190 = relay.Function([var_188,var_189,], output)
mutated_mod['func_190'] = func_190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_219 = relay.var("var_219", dtype = "float32", shape = (9, 8, 9))#candidate|219|(9, 8, 9)|var|float32
uop_220 = relay.log10(var_219.astype('float32')) # shape=(9, 8, 9)
output = relay.Tuple([uop_220,])
output2 = relay.Tuple([uop_220,])
func_226 = relay.Function([var_219,], output)
mod['func_226'] = func_226
mod = relay.transform.InferType()(mod)
mutated_mod['func_226'] = func_226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_227 = relay.var("var_227", dtype = "float32", shape = (9, 8, 9))#candidate|227|(9, 8, 9)|var|float32
func_226_call = mutated_mod.get_global_var('func_226')
call_228 = func_226_call(var_227)
output = call_228
func_229 = relay.Function([var_227], output)
mutated_mod['func_229'] = func_229
mutated_mod = relay.transform.InferType()(mutated_mod)
var_335 = relay.var("var_335", dtype = "float64", shape = (9, 12, 2))#candidate|335|(9, 12, 2)|var|float64
var_336 = relay.var("var_336", dtype = "float64", shape = (9, 12, 2))#candidate|336|(9, 12, 2)|var|float64
bop_337 = relay.less_equal(var_335.astype('bool'), relay.reshape(var_336.astype('bool'), relay.shape_of(var_335))) # shape=(9, 12, 2)
output = relay.Tuple([bop_337,])
output2 = relay.Tuple([bop_337,])
func_344 = relay.Function([var_335,var_336,], output)
mod['func_344'] = func_344
mod = relay.transform.InferType()(mod)
mutated_mod['func_344'] = func_344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_344_call = mutated_mod.get_global_var('func_344')
var_346 = relay.var("var_346", dtype = "float64", shape = (9, 12, 2))#candidate|346|(9, 12, 2)|var|float64
var_347 = relay.var("var_347", dtype = "float64", shape = (9, 12, 2))#candidate|347|(9, 12, 2)|var|float64
call_345 = func_344_call(var_346,var_347,)
output = call_345
func_348 = relay.Function([var_346,var_347,], output)
mutated_mod['func_348'] = func_348
mutated_mod = relay.transform.InferType()(mutated_mod)
const_464 = relay.const(6, dtype = "uint32")#candidate|464|()|const|uint32
var_465 = relay.var("var_465", dtype = "uint32", shape = (15, 4, 5))#candidate|465|(15, 4, 5)|var|uint32
bop_466 = relay.maximum(const_464.astype('uint32'), var_465.astype('uint32')) # shape=(15, 4, 5)
func_226_call = mod.get_global_var('func_226')
func_229_call = mutated_mod.get_global_var('func_229')
var_474 = relay.var("var_474", dtype = "float32", shape = (648,))#candidate|474|(648,)|var|float32
call_473 = relay.TupleGetItem(func_226_call(relay.reshape(var_474.astype('float32'), [9, 8, 9])), 0)
call_475 = relay.TupleGetItem(func_229_call(relay.reshape(var_474.astype('float32'), [9, 8, 9])), 0)
var_478 = relay.var("var_478", dtype = "float32", shape = (648,))#candidate|478|(648,)|var|float32
bop_479 = relay.subtract(var_474.astype('float32'), relay.reshape(var_478.astype('float32'), relay.shape_of(var_474))) # shape=(648,)
uop_503 = relay.tan(var_465.astype('float64')) # shape=(15, 4, 5)
output = relay.Tuple([bop_466,call_473,bop_479,uop_503,])
output2 = relay.Tuple([bop_466,call_475,bop_479,uop_503,])
func_513 = relay.Function([var_465,var_474,var_478,], output)
mod['func_513'] = func_513
mod = relay.transform.InferType()(mod)
var_514 = relay.var("var_514", dtype = "uint32", shape = (15, 4, 5))#candidate|514|(15, 4, 5)|var|uint32
var_515 = relay.var("var_515", dtype = "float32", shape = (648,))#candidate|515|(648,)|var|float32
var_516 = relay.var("var_516", dtype = "float32", shape = (648,))#candidate|516|(648,)|var|float32
output = func_513(var_514,var_515,var_516,)
func_517 = relay.Function([var_514,var_515,var_516,], output)
mutated_mod['func_517'] = func_517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_563 = relay.var("var_563", dtype = "float32", shape = (8, 12, 9))#candidate|563|(8, 12, 9)|var|float32
uop_564 = relay.acos(var_563.astype('float32')) # shape=(8, 12, 9)
bop_569 = relay.logical_or(uop_564.astype('bool'), relay.reshape(var_563.astype('bool'), relay.shape_of(uop_564))) # shape=(8, 12, 9)
output = bop_569
output2 = bop_569
func_572 = relay.Function([var_563,], output)
mod['func_572'] = func_572
mod = relay.transform.InferType()(mod)
mutated_mod['func_572'] = func_572
mutated_mod = relay.transform.InferType()(mutated_mod)
var_573 = relay.var("var_573", dtype = "float32", shape = (8, 12, 9))#candidate|573|(8, 12, 9)|var|float32
func_572_call = mutated_mod.get_global_var('func_572')
call_574 = func_572_call(var_573)
output = call_574
func_575 = relay.Function([var_573], output)
mutated_mod['func_575'] = func_575
mutated_mod = relay.transform.InferType()(mutated_mod)
const_601 = relay.const([[-4.794891,-1.519509,-7.307204,-8.002542,1.518833,-9.533534,8.613320,5.311933,-2.450682,6.856477,-7.542641,0.343259,5.931099,1.291787],[-0.529237,5.734441,-7.049480,3.772940,2.941355,-3.344704,4.700109,2.457705,-3.897995,-7.538963,6.288054,-6.246741,-1.552258,9.419810],[-5.744301,2.095012,6.500678,2.905200,-0.190446,-6.214166,-0.695160,-5.799460,-5.997766,9.395047,-7.259284,1.570846,6.439632,8.167842],[8.086714,0.428522,9.688920,2.896197,4.217015,-7.939877,1.311616,0.168643,9.552195,2.404145,-8.174834,-0.326435,-6.243776,-6.823359],[1.020708,5.125703,-3.110944,-5.107472,4.341694,7.821413,-9.221222,-4.882906,-5.130499,-5.503712,-8.943333,2.788406,-3.451552,5.830456],[-2.199500,-1.508398,-7.075203,-7.715746,-5.966557,-4.506644,-5.595180,6.167501,-3.424269,6.550987,5.975286,-8.615430,2.335125,-3.890761],[-1.675396,1.436707,0.591442,-3.367495,6.112000,0.851394,-5.881546,-7.346863,4.249588,1.288135,5.039396,-1.306766,-8.419091,-6.609303],[1.693798,5.913277,7.931489,-9.222993,-9.135106,-4.107990,7.187693,-9.656260,7.282858,9.260799,-0.310448,-2.769268,1.027695,-2.051965],[-7.464209,9.619592,-7.845903,3.002209,5.824317,-1.068500,-4.614623,-7.754755,-6.249746,7.695673,3.476652,-9.915457,-4.310655,6.844526],[-7.520745,3.109768,7.627930,-6.024653,-9.382649,0.438202,9.538744,3.102351,-6.128991,0.789954,-3.189638,-7.045774,7.054532,6.173917],[-9.386277,9.713412,9.957433,0.475523,-8.259807,-2.638618,1.580449,-2.521536,3.904367,-3.273487,6.142076,7.627865,6.424491,4.899161]], dtype = "float64")#candidate|601|(11, 14)|const|float64
uop_602 = relay.sqrt(const_601.astype('float64')) # shape=(11, 14)
func_572_call = mod.get_global_var('func_572')
func_575_call = mutated_mod.get_global_var('func_575')
const_605 = relay.const([[-4.803789,1.111502,-7.205011,-1.661117,-0.833127,8.950070,9.053861,5.317704,-4.726188,0.483006,-9.415943,3.530889,-6.598719,-8.226279,2.646883,6.025856,5.778474,1.321112,-2.926276,3.995999,2.796733,8.865334,0.132465,2.168322,7.109602,2.195063,-6.727885,-4.296882,7.133222,7.870474,8.347623,6.652318,-3.676747,-7.567216,-1.691340,6.304813,-0.950056,-0.876967,5.342785,-3.225812,4.830733,-0.652549,-6.487492,-4.456750,0.681841,1.069354,-5.217448,1.456703,4.446878,7.585384,-3.028583,6.727922,3.973417,-9.796757,7.845510,-1.504194,-7.618507,-5.259548,6.831099,2.309111,7.262032,-2.717113,9.907131,-3.868472,7.349069,-3.415280,-1.702699,8.894200,-6.878370,-4.970327,-0.543638,-8.167853,-0.969013,4.550642,4.803443,-3.635063,0.193393,-3.455960,0.922229,-0.301172,-3.496782,-2.843586,-6.148249,5.028695,9.938796,8.150690,-1.088924,7.963199,-1.388973,-8.784446,0.312756,-6.985654,5.061846,3.929938,9.246983,-6.888458,-9.222195,-5.025663,-1.398005,5.554744,-0.950537,2.886555,-0.917529,2.191281,6.027805,-6.593482,-5.663964,-9.514225,4.940253,-4.036437,9.450005,7.204303,5.253945,-8.961474,1.125941,-6.330471,-7.167653,-5.093701,-8.837586,-5.304726,6.996206,-6.848566,9.723686,-4.662988,-9.285722,-9.698779,3.316787,3.048448,5.255180,-1.164966,-5.287177,-1.234688,-0.346546,1.077009,-8.848916,-3.797426,4.206357,-7.993347,6.844362,5.653703,6.373644,8.228416,5.057587,-9.656006],[8.131177,2.974074,6.748890,-0.259637,-6.422164,-4.877488,3.940826,6.126292,0.998038,-5.686854,-3.158188,-8.536798,0.847907,-8.901309,-9.589047,5.348741,5.337030,8.125418,9.529409,-3.955363,-5.143630,-3.778135,7.464081,-0.328678,5.071421,-8.848022,-7.659218,-2.859883,-5.268830,1.262528,5.415869,-4.526829,9.353251,7.962407,-3.317521,1.957642,-4.358506,-0.272162,3.555698,-7.258421,4.058539,-7.598811,7.743054,7.370024,8.422576,-1.652580,-6.006068,8.261908,1.015781,-1.667687,-3.127222,-0.725624,0.906061,-1.703967,2.186556,-3.601659,7.334031,-0.079147,5.480155,1.261103,-0.398901,9.770280,-3.306574,0.109651,2.773909,1.610594,9.006668,-1.273520,7.803194,2.253630,2.155414,3.527077,-0.033557,8.044017,-3.580912,-5.797207,-4.635653,4.841828,-2.900618,-9.157453,-2.619088,5.133089,5.425409,-9.635484,-5.483677,7.715622,1.552785,0.590171,8.489949,7.989038,0.847637,-1.033784,5.830287,-1.241546,-7.789378,5.695072,9.109342,-1.363013,-0.013226,6.999041,-1.416231,-6.703663,5.956899,7.733191,-9.566151,-8.096058,-8.575091,-2.853458,-0.489071,5.965548,4.332539,2.766487,1.073477,-6.019679,9.499336,9.338911,-3.827553,2.502542,6.541534,-6.909880,-6.364831,6.137021,-7.119516,-5.118054,-4.117102,0.193920,3.123489,-9.383359,4.461141,-6.079531,-6.332821,-7.608325,-7.701698,7.593056,8.299248,0.508145,-7.514035,-4.123492,-4.091108,-2.966608,6.404866,6.274707,-6.517739,1.863983],[-9.365489,-6.657569,5.448032,1.525040,1.979831,8.547422,0.325483,-6.536382,0.091075,-5.285519,3.174083,0.848630,-1.188876,3.713877,-5.036256,-9.103872,6.506282,-1.090090,-6.590870,-4.821539,-3.203698,-7.227946,-2.911070,0.343643,1.852296,-9.701282,-6.805364,1.808075,-2.423140,-5.140444,-4.598467,4.712385,5.666498,-1.502251,7.008196,6.067014,6.327707,7.538157,-4.038775,1.414445,-2.650941,2.264715,4.145782,-9.417153,3.840115,9.286399,1.770415,3.088921,-6.389110,-1.243402,-3.531012,5.145279,6.525509,-5.369580,7.303197,-7.136980,4.591255,7.768157,-6.771185,-1.568668,-8.506768,7.312517,-6.147171,-7.768637,8.795703,-5.140584,3.598799,9.539851,1.462262,-8.938317,7.826870,-6.561113,-4.942755,-2.155452,6.086430,5.143543,-9.166921,-3.493341,8.853178,9.504337,3.708231,7.284898,5.829532,-3.394767,-9.042638,4.422881,9.258615,-4.216651,8.293648,-7.849604,1.412723,-8.571205,7.706286,-0.326515,-0.835051,8.389231,8.301792,-9.960816,7.439556,0.668593,2.913033,4.643633,6.995242,3.991267,-1.614677,9.726312,0.552957,9.266668,-1.131258,4.314815,7.886140,8.238418,6.350766,7.545327,-7.205327,-6.789151,-8.557063,-0.437651,0.980002,-4.795344,1.120310,4.158047,-7.842197,4.948276,-7.562270,3.892869,1.539706,0.130633,-7.563568,8.117973,0.193958,-3.479377,-7.700182,0.982442,-5.144520,8.766854,-7.250325,-5.619940,-5.404422,4.297176,8.223942,-5.345751,6.851005,5.719881],[3.709392,-8.592588,6.414730,-4.860587,6.121350,5.495429,6.041969,-2.237588,-2.631954,-2.899722,-2.065056,5.498526,-6.407310,8.547404,7.428183,6.237614,6.674909,-6.010437,6.111412,-7.940858,-5.160887,-9.792380,6.178362,0.452533,-1.894341,-8.913382,-8.188089,-4.204192,0.223518,-9.763438,-6.885008,3.420886,-8.294542,-5.099826,-1.657690,-6.800464,5.004910,3.077017,8.689171,-5.818352,-0.127317,4.859146,-0.775932,-8.792771,7.964019,0.389495,-3.363472,8.709634,-3.143553,-4.674609,6.479862,4.611573,-8.202067,5.099133,-8.185456,9.198880,-5.714856,6.667424,-6.797059,-6.406150,-8.722730,5.106602,1.815623,4.982360,7.253661,-9.423077,4.607653,9.624208,-0.602337,2.571769,-0.811946,-3.589424,4.086010,8.452878,8.407183,5.226946,3.235127,-4.947865,-9.757890,-4.156671,-8.938056,-2.827439,8.904335,0.717206,-7.794471,-9.340099,4.868103,2.371157,-8.443580,-6.657320,-4.453755,8.802624,-6.352269,-7.919906,-4.635892,-9.974370,-6.796275,-8.320590,-1.600669,1.530132,-2.622650,4.263825,-4.102640,2.096878,-6.505839,-0.637583,8.599831,-2.148504,-5.497507,-5.642072,-0.034725,3.393894,3.809564,-0.972381,4.109789,-5.667717,9.943800,3.490492,-0.895709,-6.567280,-1.763962,-1.608791,-2.718450,2.184796,0.855155,7.780201,0.982143,-8.301543,-8.997002,-7.569199,5.516554,-9.255509,6.683918,-6.950268,-3.032513,-5.591381,-0.173664,-9.466394,9.220040,4.523655,-5.813676,-6.631984,6.332406,-3.824121],[4.070678,0.245888,-1.797930,7.285524,8.137725,1.162829,-3.176606,-2.677304,-2.847757,-0.101717,-5.124830,2.036351,-1.403057,-3.564699,-9.483814,-1.825179,-6.342393,-2.867094,1.940926,-7.855240,-8.085425,-7.127690,5.211532,1.737543,7.462808,6.979642,9.678200,-5.996115,0.831446,9.577449,-6.936479,6.522035,9.837971,4.797760,-6.252905,3.972163,4.920476,3.612057,-3.887788,0.793048,-6.023781,1.894312,4.101298,-1.481424,6.362383,-0.418106,6.758867,-0.644158,-2.163425,3.282108,5.310127,9.754468,-3.382462,0.165327,2.952102,-7.630458,1.262918,2.866379,-6.836958,7.323783,9.280903,6.321243,-1.986967,1.574803,9.859214,2.504403,4.251434,4.544353,5.760613,-4.949308,0.927722,2.885813,-4.345336,1.633216,-4.734391,-2.380905,1.399593,-4.148034,6.806611,-7.269265,-6.677912,9.722248,-6.532947,0.122936,9.702095,-2.256647,-7.150409,-7.069229,-1.728000,4.026461,-7.428193,-2.149611,3.712951,3.884094,-6.394801,1.476639,4.207071,-3.953860,-8.836865,-6.456925,4.850796,-8.298088,-1.127677,-3.472772,8.543367,3.266806,-5.115218,4.250914,-4.604401,-2.779115,-5.789672,7.265406,6.470995,8.402311,4.675999,4.798722,-0.616802,-6.921422,-6.587895,5.842975,1.373796,-6.734145,-2.633622,0.002024,-9.383325,2.848792,-4.351536,5.628233,-0.998121,3.068241,-8.222771,-8.729399,-2.965570,7.374198,0.381897,-4.781029,2.223124,-2.173023,-1.398353,-2.689521,-5.537264,8.734490,-0.469539,-5.021673],[4.104584,-1.071488,-3.301729,-5.221482,5.352094,-8.183788,-8.789557,4.932675,8.564717,8.950090,-4.748471,-3.517215,8.610139,7.183795,-1.155975,-6.583699,0.080121,7.627881,0.372081,-4.469240,1.756644,-1.387840,-3.946269,1.873825,2.443491,2.617916,-9.248483,-7.733290,-9.359271,8.494805,3.075434,-6.021650,-9.440470,8.061459,-2.044657,7.868022,-2.384602,4.204075,8.041885,-6.629343,-4.047986,-9.434148,3.347167,-9.226047,-6.685104,2.130831,-6.364711,-0.777759,3.421648,-4.982991,-3.143894,-8.783070,8.631601,0.417466,-1.375364,-0.025122,7.977971,-8.014298,9.908128,-4.921614,-2.641108,-3.103634,-3.155797,-8.694127,-4.603193,9.342515,-8.296328,4.928135,7.061246,-2.230222,-1.205486,-0.330263,-9.395591,-1.809652,-0.277649,4.873460,-9.575795,8.109877,4.794687,0.869810,-4.933085,-0.889143,-5.549661,6.764658,-6.224962,2.462565,-2.522779,-0.637597,-8.755968,-2.603482,-1.412386,-1.658100,8.165227,2.672371,4.001507,-9.059947,2.821624,-5.099189,-5.158244,7.889979,2.900014,6.973199,6.630089,-2.310591,8.519271,-2.182157,6.528750,-2.175089,-7.025467,0.387566,-7.637517,1.389550,-0.863403,0.121319,8.490655,6.274930,-8.496090,-0.023450,-1.079763,9.526379,-9.665479,2.120510,-0.325130,-1.283359,5.985851,-3.133143,-7.475481,4.532688,8.765943,0.264189,-3.102447,-1.078374,-0.249755,-0.334026,1.235517,-1.128097,6.865042,8.256273,5.790792,-8.534766,4.483237,0.771607,-0.507689,-8.471216]], dtype = "float32")#candidate|605|(6, 144)|const|float32
call_604 = func_572_call(relay.reshape(const_605.astype('float32'), [8, 12, 9]))
call_606 = func_572_call(relay.reshape(const_605.astype('float32'), [8, 12, 9]))
output = relay.Tuple([uop_602,call_604,const_605,])
output2 = relay.Tuple([uop_602,call_606,const_605,])
func_613 = relay.Function([], output)
mod['func_613'] = func_613
mod = relay.transform.InferType()(mod)
output = func_613()
func_614 = relay.Function([], output)
mutated_mod['func_614'] = func_614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_613_call = mod.get_global_var('func_613')
func_614_call = mutated_mod.get_global_var('func_614')
call_669 = relay.TupleGetItem(func_613_call(), 0)
call_670 = relay.TupleGetItem(func_614_call(), 0)
output = call_669
output2 = call_670
func_677 = relay.Function([], output)
mod['func_677'] = func_677
mod = relay.transform.InferType()(mod)
mutated_mod['func_677'] = func_677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_677_call = mutated_mod.get_global_var('func_677')
call_678 = func_677_call()
output = call_678
func_679 = relay.Function([], output)
mutated_mod['func_679'] = func_679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_693 = relay.var("var_693", dtype = "float64", shape = (9, 6, 11))#candidate|693|(9, 6, 11)|var|float64
uop_694 = relay.tan(var_693.astype('float64')) # shape=(9, 6, 11)
const_703 = relay.const([[[0.820373,-4.779526,-1.541107,9.153796,8.384812,6.209016,6.856354,3.100010,-0.863270,2.154617,1.501264],[-7.989944,-4.815367,-5.727879,-7.508446,4.584749,3.157639,6.916450,1.671198,8.505972,-6.203701,-2.280852],[-0.402657,-7.444258,-8.943774,-3.438565,2.330609,9.153186,-1.641250,-6.740101,0.339615,-8.934913,7.412656],[-6.279961,5.169007,-8.039849,8.859102,4.584202,-1.615883,-7.620242,4.753000,-4.841726,-4.543278,5.018999],[8.311900,1.518795,3.001065,-8.094918,-9.561611,8.535764,-2.848746,1.407455,-7.977949,-0.510608,1.442520],[8.331350,5.189788,9.028876,5.367436,-5.590206,-6.703317,-6.647102,-2.415505,-4.287404,1.604758,-1.925798]],[[9.285381,6.685417,-3.079205,-2.743262,8.034561,-5.685002,9.891024,-3.907871,-4.587127,-4.142213,-2.168081],[-3.246806,2.729680,6.115158,3.948617,-4.731272,-4.321041,-7.422881,2.591854,-8.783163,9.983180,3.587857],[-5.279503,1.186015,5.706699,2.989155,-7.241645,-2.289361,-2.492782,1.088444,1.262434,8.673741,9.965444],[-6.256518,-8.613315,8.495152,6.793083,1.463916,-4.540264,0.313364,-8.125722,-1.933441,-7.265658,-2.848962],[-5.671853,-9.751470,9.903826,6.559892,-5.871627,-2.173099,-5.776152,-4.273664,-1.812892,8.971439,-9.986238],[-5.463449,2.299600,-6.433022,4.651986,4.770027,-4.921964,3.658592,6.954915,-9.051511,-3.310313,-2.486981]],[[4.151093,8.755391,-4.847224,-4.931123,7.099649,4.883751,9.086421,-3.546288,-3.292106,0.935535,-1.459056],[0.819024,6.385522,8.520992,-3.278280,8.829301,-1.848912,3.020235,0.277716,8.250751,4.808521,-6.925465],[-4.235503,6.854935,-4.709460,7.328088,-0.904336,-3.744354,3.976482,1.658403,8.505570,6.120473,8.148494],[6.837080,-1.895550,7.598585,9.254716,4.379466,1.503293,9.863620,5.678784,-0.025802,4.217750,4.581572],[-8.073636,-6.251424,4.744087,0.450615,-6.955318,-6.360374,5.716605,-3.788714,9.639270,6.913654,4.200840],[-0.102795,1.816812,-5.616571,1.921873,6.447217,-4.874562,9.897199,7.403711,0.696215,2.227792,2.009543]],[[0.377651,-7.172743,1.476594,9.572625,-3.457883,7.954904,-0.717801,-2.284205,5.640312,8.513316,0.492065],[-7.086192,2.990430,-4.038692,1.962746,-7.357701,-1.902589,0.566026,-6.591793,-3.940355,-9.460905,-8.390531],[0.068194,-5.931276,2.162211,-1.863804,-3.367534,4.304685,-8.220513,3.017698,7.843765,6.715399,-9.739791],[4.844554,4.013320,4.507345,5.384825,5.889027,-5.061990,-0.806203,6.899226,-9.216463,4.218922,-8.551261],[7.359646,5.390774,7.970719,-5.077576,4.141441,-4.530843,2.005054,-3.078053,4.455725,2.397513,6.185078],[5.447776,9.227557,-1.777314,-1.506521,-1.496294,-3.657595,-5.992322,-0.099396,9.855957,5.425798,0.930538]],[[6.523765,9.809724,8.649305,-3.923828,-8.380961,8.020343,8.413634,-9.760837,-1.017502,-6.687086,-1.337228],[-9.083911,1.468455,-3.545975,1.452472,-1.714057,1.832231,-7.770144,-3.639178,2.600258,-8.157054,-7.081680],[4.110066,1.981810,-6.898189,-6.720480,7.054629,2.801446,2.179610,6.016726,4.068090,2.371723,1.343161],[3.982023,0.910991,8.547725,-5.502114,8.085713,-1.489817,6.671955,-4.061349,-5.887655,9.242806,1.661496],[4.663982,5.536610,-3.762311,-6.015900,-8.075340,6.496127,-3.989517,-6.633452,4.161591,-8.723757,-3.844079],[-2.756382,-2.234837,-3.063600,-9.913201,-3.952718,-3.627631,6.864240,-8.304465,7.648019,9.810976,-8.419059]],[[8.133496,-0.184890,6.014683,-9.083337,2.677836,-6.552071,6.223402,9.419711,-1.487293,-5.924528,5.693791],[9.434460,4.720267,3.221273,-2.548849,-5.314189,-6.720950,-2.756826,-6.020710,6.899802,6.699210,6.923636],[3.895588,-4.684938,-7.496906,-0.274281,-5.034237,2.686786,-0.971767,6.477698,4.713278,-0.108777,-8.764326],[2.558927,-7.686906,-1.443030,-7.310922,-3.881792,-5.644739,-2.712032,5.862311,1.147735,-8.836287,5.951400],[7.597498,1.845550,7.375262,-1.376554,-2.277660,-3.461762,-2.104549,-1.181095,-3.334156,-5.702613,-8.634828],[4.757239,-9.858250,4.107625,2.476503,4.858995,5.779238,9.773431,0.995350,1.055382,6.360373,-2.130470]],[[-6.908209,1.744034,8.349052,-0.641329,-9.063387,-2.173198,-3.559728,0.206374,-8.022712,-9.126994,-4.941104],[-6.955750,1.975340,0.188849,6.188660,-4.838335,2.835274,-9.584611,-9.841000,-1.448043,-5.794234,5.741959],[-5.827788,0.515784,9.295430,3.573333,6.107417,7.648602,6.809910,-5.541581,-2.936175,-8.835226,-3.289359],[5.796048,0.087310,5.310390,-0.836620,-3.472585,4.955206,4.310601,3.702497,-4.622983,4.934157,1.091435],[7.341762,7.728253,6.394424,4.971107,0.976658,-0.578764,-1.171037,-5.339166,-4.137767,5.042760,-2.196789],[-4.414885,6.449781,0.302729,3.912076,5.001021,-6.350993,-1.106178,4.321378,4.818368,-3.725872,2.902702]],[[6.486574,6.726628,4.038716,2.528978,-1.161371,1.551395,4.286128,-4.617768,-0.919024,4.975714,-6.205065],[-1.356059,9.195697,-2.893962,4.259301,-5.269082,-4.031520,-5.718199,-1.693461,4.581825,1.388010,9.204076],[8.694960,4.826358,9.889904,-6.794831,0.636414,5.255293,-5.074160,-0.955593,-8.911596,-3.813317,3.962277],[-7.399823,4.123205,-9.726814,-6.933497,8.242739,8.618673,6.743982,8.610899,-0.007516,-0.994773,0.263980],[-2.867663,-4.466714,-3.387920,8.397106,4.962519,6.313035,1.734941,-7.798953,6.569116,-0.679322,-4.786632],[-0.295660,9.872620,-2.208505,-5.496666,9.276371,-7.761996,7.465626,-4.337393,-2.540752,-0.657640,-8.028136]],[[2.996823,-2.311096,-3.890311,0.071761,-9.753727,-8.125104,-5.108776,-1.299341,-0.161920,1.948546,7.130563],[7.494434,9.421891,-6.820640,-1.636119,-1.178059,2.642432,-5.245330,4.420364,-0.061514,6.901910,8.226497],[-1.157532,2.855709,2.309735,8.473397,1.988062,3.589335,-3.155655,8.718071,-1.638510,-5.181221,-9.074506],[-9.129520,-9.861329,8.974014,6.138662,5.894763,-0.661866,8.562261,-6.243026,1.588889,6.490194,-7.100189],[-3.962412,-5.985617,7.498826,-0.999756,-2.788302,8.137734,8.740509,-1.226741,-3.460224,-4.248360,-8.937198],[-8.824053,-2.172923,7.930465,-8.025476,3.758527,9.849920,-6.755207,-0.810800,-3.840038,8.595288,6.615507]]], dtype = "float64")#candidate|703|(9, 6, 11)|const|float64
bop_704 = relay.divide(var_693.astype('float64'), relay.reshape(const_703.astype('float64'), relay.shape_of(var_693))) # shape=(9, 6, 11)
output = relay.Tuple([uop_694,bop_704,])
output2 = relay.Tuple([uop_694,bop_704,])
func_707 = relay.Function([var_693,], output)
mod['func_707'] = func_707
mod = relay.transform.InferType()(mod)
var_708 = relay.var("var_708", dtype = "float64", shape = (9, 6, 11))#candidate|708|(9, 6, 11)|var|float64
output = func_707(var_708)
func_709 = relay.Function([var_708], output)
mutated_mod['func_709'] = func_709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_723 = relay.var("var_723", dtype = "bool", shape = (1, 5, 2))#candidate|723|(1, 5, 2)|var|bool
var_724 = relay.var("var_724", dtype = "bool", shape = (7, 5, 2))#candidate|724|(7, 5, 2)|var|bool
bop_725 = relay.logical_and(var_723.astype('bool'), var_724.astype('bool')) # shape=(7, 5, 2)
bop_732 = relay.multiply(bop_725.astype('float64'), var_723.astype('float64')) # shape=(7, 5, 2)
output = bop_732
output2 = bop_732
func_750 = relay.Function([var_723,var_724,], output)
mod['func_750'] = func_750
mod = relay.transform.InferType()(mod)
var_751 = relay.var("var_751", dtype = "bool", shape = (1, 5, 2))#candidate|751|(1, 5, 2)|var|bool
var_752 = relay.var("var_752", dtype = "bool", shape = (7, 5, 2))#candidate|752|(7, 5, 2)|var|bool
output = func_750(var_751,var_752,)
func_753 = relay.Function([var_751,var_752,], output)
mutated_mod['func_753'] = func_753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_613_call = mod.get_global_var('func_613')
func_614_call = mutated_mod.get_global_var('func_614')
call_764 = relay.TupleGetItem(func_613_call(), 1)
call_765 = relay.TupleGetItem(func_614_call(), 1)
output = relay.Tuple([call_764,])
output2 = relay.Tuple([call_765,])
func_772 = relay.Function([], output)
mod['func_772'] = func_772
mod = relay.transform.InferType()(mod)
mutated_mod['func_772'] = func_772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mutated_mod.get_global_var('func_772')
call_773 = func_772_call()
output = call_773
func_774 = relay.Function([], output)
mutated_mod['func_774'] = func_774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_613_call = mod.get_global_var('func_613')
func_614_call = mutated_mod.get_global_var('func_614')
call_777 = relay.TupleGetItem(func_613_call(), 0)
call_778 = relay.TupleGetItem(func_614_call(), 0)
output = relay.Tuple([call_777,])
output2 = relay.Tuple([call_778,])
func_779 = relay.Function([], output)
mod['func_779'] = func_779
mod = relay.transform.InferType()(mod)
output = func_779()
func_780 = relay.Function([], output)
mutated_mod['func_780'] = func_780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_677_call = mod.get_global_var('func_677')
func_679_call = mutated_mod.get_global_var('func_679')
call_829 = func_677_call()
call_830 = func_677_call()
func_779_call = mod.get_global_var('func_779')
func_780_call = mutated_mod.get_global_var('func_780')
call_831 = relay.TupleGetItem(func_779_call(), 0)
call_832 = relay.TupleGetItem(func_780_call(), 0)
output = relay.Tuple([call_829,call_831,])
output2 = relay.Tuple([call_830,call_832,])
func_838 = relay.Function([], output)
mod['func_838'] = func_838
mod = relay.transform.InferType()(mod)
mutated_mod['func_838'] = func_838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_838_call = mutated_mod.get_global_var('func_838')
call_839 = func_838_call()
output = call_839
func_840 = relay.Function([], output)
mutated_mod['func_840'] = func_840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_859 = relay.TupleGetItem(func_772_call(), 0)
call_860 = relay.TupleGetItem(func_774_call(), 0)
func_750_call = mod.get_global_var('func_750')
func_753_call = mutated_mod.get_global_var('func_753')
var_866 = relay.var("var_866", dtype = "bool", shape = (10,))#candidate|866|(10,)|var|bool
const_867 = relay.const([True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False], dtype = "bool")#candidate|867|(70,)|const|bool
call_865 = func_750_call(relay.reshape(var_866.astype('bool'), [1, 5, 2]), relay.reshape(const_867.astype('bool'), [7, 5, 2]), )
call_868 = func_750_call(relay.reshape(var_866.astype('bool'), [1, 5, 2]), relay.reshape(const_867.astype('bool'), [7, 5, 2]), )
func_750_call = mod.get_global_var('func_750')
func_753_call = mutated_mod.get_global_var('func_753')
call_871 = func_750_call(relay.reshape(var_866.astype('bool'), [1, 5, 2]), relay.reshape(const_867.astype('bool'), [7, 5, 2]), )
call_872 = func_750_call(relay.reshape(var_866.astype('bool'), [1, 5, 2]), relay.reshape(const_867.astype('bool'), [7, 5, 2]), )
func_707_call = mod.get_global_var('func_707')
func_709_call = mutated_mod.get_global_var('func_709')
const_874 = relay.const([-9.822749,9.505317,-9.306419,-2.249827,4.881985,-1.618027,7.880568,8.632288,6.205206,1.371567,-8.091508,0.687129,9.719642,-3.398532,8.532783,0.234188,-3.435758,2.270379,6.356588,-1.509260,8.647823,4.248388,-2.673843,-3.157083,6.007242,6.941560,-5.624039,-2.341593,6.430672,-9.877761,-1.955235,-8.539203,-3.262959,-3.714601,2.419286,-1.124235,5.232532,-4.588174,-6.166579,6.820575,-6.899183,8.738915,4.222144,4.651145,-2.273840,6.862821,7.114823,3.548900,-7.893476,9.189538,7.344840,-4.587930,7.005392,-9.003531,-4.880311,-5.234985,-1.853183,4.817968,1.263151,-5.607554,-5.663597,1.650773,8.418989,3.833409,-7.277352,-4.838185,-4.234195,-0.370911,7.570145,8.300137,-8.752021,-9.804129,9.005247,1.281725,-0.958042,-4.075066,4.884214,-8.438697,-3.939744,-8.199543,7.602479,-7.467409,-0.404175,6.418043,-1.439425,5.338357,-1.131304,2.496392,9.036657,1.289763,2.053433,-0.209622,8.495530,8.642579,-4.226208,-6.527091,-2.167526,0.240819,7.763259,-6.525679,0.519331,-6.123737,-4.246010,5.812963,-2.640762,4.809165,-2.998622,3.882855,5.767697,8.962075,-2.091437,6.026777,1.302971,9.834035,7.604041,-3.221852,2.643618,6.555709,-5.904647,6.796896,8.344248,-0.752865,-0.357076,3.258640,0.091581,7.516205,-8.897618,-5.272080,3.083650,-1.373391,-4.495317,3.048890,8.076104,9.866443,1.641349,0.549974,1.310496,-4.069175,9.876925,4.970508,2.982361,-6.897957,9.763609,2.451114,1.767273,-2.913148,-3.475928,5.641429,-1.940843,4.553619,-9.364980,-0.863077,8.400372,0.969228,-4.590984,8.380138,-2.177865,8.973640,-7.190799,-1.195204,-3.600516,4.187142,4.427845,-6.252445,1.821915,9.916524,-7.556904,-9.416663,3.774450,-6.050959,-3.368746,9.881549,-2.990698,9.395816,7.883128,-7.227600,-6.133604,-6.577877,-0.585516,6.860549,-9.697465,5.820277,-9.513953,-5.195052,-9.966613,1.484192,-9.822256,8.753626,3.298403,-3.608506,-3.925639,-5.686986,-5.837321,-7.091413,3.848614,0.821189,5.168786,7.537313,-7.744054,1.173287,-1.288843,8.451910,7.125696,1.508053,4.101173,1.813818,-1.478339,-1.847540,-0.963041,-3.176532,-2.284973,6.862693,-1.158192,0.241178,5.461478,7.989533,9.093642,-5.397344,6.320166,2.412317,3.478723,4.814245,-9.488023,6.260610,-7.115453,0.522052,9.736852,-5.495731,7.340864,-8.775040,-4.097729,-9.382489,-6.452905,-0.080730,0.360477,3.348758,-6.522201,-9.147387,-8.271071,1.631195,4.549993,-5.791198,-3.655425,7.760897,-3.814519,-8.861746,3.587267,1.768684,6.007623,-4.492620,9.631337,-5.292310,-3.157230,3.191081,-1.608059,3.749319,2.917610,-4.863872,4.940378,4.396701,7.964881,-6.682332,-9.284193,-7.334655,-2.705508,-4.895239,-7.357095,2.239389,-3.247751,-8.387107,-4.739142,-0.808948,2.501908,3.844685,-5.460454,-6.095532,-6.239635,6.332706,-8.025600,-6.532863,-8.711361,6.670504,3.440914,4.614955,3.365448,-0.814160,9.942032,5.694073,8.958117,3.407834,0.636408,9.231211,3.252830,-2.813078,7.826275,-2.579174,-7.654438,-4.859646,-5.691990,7.412615,4.130153,5.047897,-4.438232,2.728925,6.751971,-6.662911,6.967639,-6.711607,-4.222828,-9.112808,-3.827935,1.714601,-8.048591,-3.255493,4.709866,-6.935014,-4.017533,7.746266,-6.858797,-8.961950,-1.387366,-2.319074,0.282695,-6.494105,-8.463814,4.199400,3.005304,4.226145,-2.658452,-0.476678,5.734161,7.528655,9.312748,-6.406170,1.464115,2.031747,5.319538,8.501491,6.167491,-8.106708,7.248880,-8.181668,-1.733228,-6.999577,0.144454,-0.710484,-3.661641,-4.670061,1.187681,5.738994,-6.778919,-4.166006,3.045855,-9.759009,9.831559,-4.246268,-5.582500,5.686370,-9.999776,8.659383,-7.200927,-5.483614,6.691525,-9.535420,7.928030,-2.125728,1.560458,-8.588210,-4.719598,1.499645,1.411718,-4.476747,-1.890140,7.962844,-3.878691,-5.398122,-2.552590,6.330871,-8.638245,-8.702327,2.591192,0.565721,4.696488,5.337644,-5.590874,4.369365,-4.139061,2.089654,6.243666,7.496482,2.217105,3.067066,-1.595766,-8.737323,-3.417797,5.150790,4.332612,-0.478393,-2.645207,-2.489087,-6.576889,-3.293856,-1.917074,4.683414,-2.627908,4.241829,6.124221,-9.790740,6.791905,-8.365087,6.231572,7.588469,-5.495954,-0.977034,-2.127537,5.921089,-5.181999,4.019819,9.759463,6.472428,-5.841630,7.285860,2.059659,7.304317,-4.750632,-1.313185,1.887984,-5.598561,-3.641073,-1.002357,-6.967684,7.657453,-1.105154,7.007112,-8.508483,1.728576,3.219191,-2.387860,-7.188487,8.971043,8.921173,6.415576,8.960026,-1.893625,-0.553401,-9.382228,-0.504925,8.824532,2.128195,-4.141048,1.126762,-5.416900,-1.519580,9.721129,-4.358986,-4.066102,3.218367,0.794039,7.631843,-4.451079,-6.727289,-9.043064,-0.918528,3.119681,-6.663385,6.312837,-7.177524,-3.352380,-7.160871,0.476138,-8.424453,-5.688692,3.769337,7.040005,2.495152,-1.024628,-4.642473,-0.996028,3.573579,-8.634269,3.026774,5.894594,2.716130,3.979544,-8.203917,8.328241,-4.730285,-9.093210,8.545918,-8.844610,3.070791,-6.321381,-1.221275,-5.756034,8.519513,5.653292,2.692805,-1.983714,2.303698,-9.733810,-3.747080,-2.782699,-9.816043,6.342346,-1.678872,-0.195251,-4.144030,-4.378965,-0.377741,-7.160193,7.042493,-2.796151,2.654573,-1.996897,-1.434838,-9.533659,-2.466479,6.059357,1.273395,-1.066137,4.502978,4.371346,9.521751,-9.706457,-1.623583,1.062367,-5.353089,-5.594950,-1.903653,-4.335653,-1.603290,-0.658482,-1.627068,2.510393,-1.517431,6.922471,-1.110099,3.443041,-3.207476,6.940483,8.780641,9.002857,4.734125,8.884244,-4.316217,-6.454398,-7.609831,2.082821,3.707925,-2.574565,-9.393858,1.112324,-4.539461,-5.317074,-3.245313,2.879817,3.385941,6.741510,9.124980,-6.826427,3.941469,-9.227760,5.524402,-4.302363,-3.178621,-5.812406,-6.809963,8.770099,6.669671,-7.333394,-8.593080,7.423745,-1.612820,-7.505915,6.842332,7.696590,8.534841,-1.963508,7.857472,8.162038,7.606488,-9.670754,3.232898,-1.809498,2.342985,-0.173661,-6.695445,2.472404,1.734996,-3.448706,5.289036,9.560294,9.181019,9.536195], dtype = "float64")#candidate|874|(594,)|const|float64
call_873 = relay.TupleGetItem(func_707_call(relay.reshape(const_874.astype('float64'), [9, 6, 11])), 0)
call_875 = relay.TupleGetItem(func_709_call(relay.reshape(const_874.astype('float64'), [9, 6, 11])), 0)
bop_883 = relay.greater_equal(const_874.astype('bool'), relay.reshape(call_873.astype('bool'), relay.shape_of(const_874))) # shape=(594,)
bop_886 = relay.greater_equal(const_874.astype('bool'), relay.reshape(call_875.astype('bool'), relay.shape_of(const_874))) # shape=(594,)
func_613_call = mod.get_global_var('func_613')
func_614_call = mutated_mod.get_global_var('func_614')
call_893 = relay.TupleGetItem(func_613_call(), 2)
call_894 = relay.TupleGetItem(func_614_call(), 2)
func_677_call = mod.get_global_var('func_677')
func_679_call = mutated_mod.get_global_var('func_679')
call_902 = func_677_call()
call_903 = func_677_call()
output = relay.Tuple([call_859,call_865,var_866,const_867,call_871,bop_883,call_893,call_902,])
output2 = relay.Tuple([call_860,call_868,var_866,const_867,call_872,bop_886,call_894,call_903,])
func_904 = relay.Function([var_866,], output)
mod['func_904'] = func_904
mod = relay.transform.InferType()(mod)
var_905 = relay.var("var_905", dtype = "bool", shape = (10,))#candidate|905|(10,)|var|bool
output = func_904(var_905)
func_906 = relay.Function([var_905], output)
mutated_mod['func_906'] = func_906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_613_call = mod.get_global_var('func_613')
func_614_call = mutated_mod.get_global_var('func_614')
call_913 = relay.TupleGetItem(func_613_call(), 1)
call_914 = relay.TupleGetItem(func_614_call(), 1)
const_915 = relay.const([[[False,False,False,False,False,True,False,True,True],[True,False,False,True,False,True,True,False,False],[True,False,False,True,True,True,False,True,False],[True,False,False,True,True,False,False,True,False],[True,True,True,False,True,False,True,False,False],[False,True,False,False,False,True,False,False,False],[True,False,True,False,True,True,False,False,False],[False,False,True,True,False,True,False,False,False],[False,True,False,False,False,True,True,False,False],[False,True,False,False,False,False,True,False,True],[False,False,True,True,True,False,False,False,False],[True,False,False,True,True,False,True,True,False]],[[True,False,False,True,False,True,True,False,False],[True,True,False,False,False,True,True,True,False],[True,True,False,True,True,False,False,False,True],[False,False,True,False,True,True,False,False,False],[False,True,False,False,False,False,False,False,False],[True,True,True,True,True,False,True,False,True],[False,False,False,True,False,False,False,False,True],[False,True,True,False,True,False,False,True,False],[False,True,False,False,True,True,True,False,False],[False,False,True,True,False,True,True,True,False],[True,False,False,False,False,True,True,False,False],[True,False,True,True,True,True,True,True,False]],[[True,True,False,True,True,False,False,False,False],[False,False,False,False,True,False,False,False,False],[False,True,False,False,True,False,False,False,True],[True,False,True,True,True,False,True,False,True],[False,True,True,False,True,True,False,True,True],[False,True,True,False,True,False,False,False,True],[True,False,False,False,True,False,True,False,True],[True,True,True,False,True,False,False,False,True],[True,False,False,False,True,False,True,True,True],[False,False,True,True,True,True,True,True,False],[True,True,False,False,False,False,False,True,True],[False,True,True,False,False,False,False,True,True]],[[False,False,False,False,False,False,True,False,True],[True,True,True,True,True,False,False,True,False],[False,True,True,True,False,False,True,False,True],[True,False,False,False,True,False,False,True,True],[True,False,True,False,True,False,True,True,True],[True,True,True,False,True,False,True,False,False],[False,True,False,True,False,True,True,False,False],[True,True,True,False,False,True,True,False,True],[False,False,False,True,True,True,False,True,False],[True,True,False,True,True,False,False,False,False],[True,True,True,True,False,False,False,True,False],[True,False,False,False,False,False,False,False,False]],[[True,False,True,True,True,False,False,True,True],[False,True,True,False,False,False,True,True,True],[True,True,False,True,False,False,False,True,True],[False,True,True,False,True,True,False,False,True],[False,False,False,False,False,True,True,True,True],[False,False,False,True,False,True,True,True,True],[True,True,False,False,False,False,True,False,True],[True,False,True,False,True,False,False,True,False],[True,False,True,False,False,False,False,True,False],[True,False,True,False,False,True,True,False,True],[True,False,True,False,True,False,True,True,True],[True,True,False,False,False,False,True,False,True]],[[True,False,False,True,True,True,True,True,True],[False,False,True,True,True,True,False,True,False],[False,True,True,True,False,False,True,False,False],[False,False,False,True,True,False,True,True,True],[False,False,True,True,False,True,True,True,True],[False,True,False,True,False,True,False,True,False],[True,True,False,True,True,False,False,False,False],[False,True,True,False,False,True,True,True,True],[False,False,False,True,True,True,False,False,True],[True,False,True,True,True,False,False,True,True],[False,True,True,False,True,False,True,True,False],[False,False,False,True,True,False,True,False,True]],[[True,False,True,False,False,False,True,True,True],[True,True,False,False,False,True,True,False,True],[False,False,False,False,False,True,False,False,False],[True,True,False,False,False,True,False,True,True],[False,False,False,True,False,False,False,False,False],[True,False,False,False,False,False,True,False,True],[False,True,True,False,False,False,False,False,True],[True,False,False,False,False,False,True,False,False],[True,False,True,True,True,True,True,False,True],[False,True,True,True,True,False,False,True,False],[False,True,True,True,True,True,True,True,False],[False,False,False,False,True,False,True,False,True]],[[False,False,True,True,False,False,True,True,True],[True,True,False,False,True,False,True,True,True],[False,False,False,False,False,True,False,True,False],[False,False,True,False,True,True,True,False,True],[False,True,False,True,True,True,False,True,False],[False,False,True,True,False,False,True,True,False],[False,True,True,True,False,False,False,False,True],[True,True,True,False,True,True,False,True,False],[True,True,True,True,True,True,True,False,True],[True,True,False,True,False,False,True,True,False],[True,True,False,False,False,True,True,False,True],[False,False,False,False,True,True,True,False,False]]], dtype = "bool")#candidate|915|(8, 12, 9)|const|bool
bop_916 = relay.right_shift(call_913.astype('uint32'), relay.reshape(const_915.astype('uint32'), relay.shape_of(call_913))) # shape=(8, 12, 9)
bop_919 = relay.right_shift(call_914.astype('uint32'), relay.reshape(const_915.astype('uint32'), relay.shape_of(call_914))) # shape=(8, 12, 9)
func_838_call = mod.get_global_var('func_838')
func_840_call = mutated_mod.get_global_var('func_840')
call_924 = relay.TupleGetItem(func_838_call(), 1)
call_925 = relay.TupleGetItem(func_840_call(), 1)
func_838_call = mod.get_global_var('func_838')
func_840_call = mutated_mod.get_global_var('func_840')
call_932 = relay.TupleGetItem(func_838_call(), 0)
call_933 = relay.TupleGetItem(func_840_call(), 0)
output = relay.Tuple([bop_916,call_924,call_932,])
output2 = relay.Tuple([bop_919,call_925,call_933,])
func_934 = relay.Function([], output)
mod['func_934'] = func_934
mod = relay.transform.InferType()(mod)
mutated_mod['func_934'] = func_934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mutated_mod.get_global_var('func_934')
call_935 = func_934_call()
output = call_935
func_936 = relay.Function([], output)
mutated_mod['func_936'] = func_936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_838_call = mod.get_global_var('func_838')
func_840_call = mutated_mod.get_global_var('func_840')
call_1003 = relay.TupleGetItem(func_838_call(), 0)
call_1004 = relay.TupleGetItem(func_840_call(), 0)
func_677_call = mod.get_global_var('func_677')
func_679_call = mutated_mod.get_global_var('func_679')
call_1011 = func_677_call()
call_1012 = func_677_call()
output = relay.Tuple([call_1003,call_1011,])
output2 = relay.Tuple([call_1004,call_1012,])
func_1029 = relay.Function([], output)
mod['func_1029'] = func_1029
mod = relay.transform.InferType()(mod)
output = func_1029()
func_1030 = relay.Function([], output)
mutated_mod['func_1030'] = func_1030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1040 = relay.var("var_1040", dtype = "float32", shape = (7, 1, 14))#candidate|1040|(7, 1, 14)|var|float32
uop_1041 = relay.rsqrt(var_1040.astype('float32')) # shape=(7, 1, 14)
bop_1047 = relay.bitwise_and(uop_1041.astype('uint32'), relay.reshape(var_1040.astype('uint32'), relay.shape_of(uop_1041))) # shape=(7, 1, 14)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_1054 = relay.TupleGetItem(func_934_call(), 2)
call_1055 = relay.TupleGetItem(func_936_call(), 2)
func_904_call = mod.get_global_var('func_904')
func_906_call = mutated_mod.get_global_var('func_906')
var_1057 = relay.var("var_1057", dtype = "bool", shape = (10,))#candidate|1057|(10,)|var|bool
call_1056 = relay.TupleGetItem(func_904_call(relay.reshape(var_1057.astype('bool'), [10,])), 2)
call_1058 = relay.TupleGetItem(func_906_call(relay.reshape(var_1057.astype('bool'), [10,])), 2)
uop_1061 = relay.exp(uop_1041.astype('float64')) # shape=(7, 1, 14)
func_613_call = mod.get_global_var('func_613')
func_614_call = mutated_mod.get_global_var('func_614')
call_1066 = relay.TupleGetItem(func_613_call(), 0)
call_1067 = relay.TupleGetItem(func_614_call(), 0)
func_186_call = mod.get_global_var('func_186')
func_190_call = mutated_mod.get_global_var('func_190')
const_1076 = relay.const([2,2,-3,1,-10,-1,7,-9,-5,9,-8,-3,7,-1,7,-8,9,-2,-6,-2,-9,-7,6,3,9,-1,-10,-5,2,-9,8,-9,-7,1,5,10,-8,-10,3,6,-7,10,-1,-6,1,-1,5,7,-2,-7,-2,9,-4,-4,2,8,7,7,-2,-3,8,-5,-8,5,1,-5,9,-4,-2,-9,-8,-4,-4,7,3,3,7,-6,-10,-3,3,5,3,-4,-10,1,-9,-5,7,-10,-3,4,9,-3,1,2,-7,5,-8,6,1,8,-2,2,6,-2,5,8,-5,2,10,-9,1,-6,-4,-9,-10,4,1,-3,-10,-7,-10,8,10,1,-6,-7,-4,-7,3,-3,4,-5,5,-3,3,-1,-9,-8,1,-8,-10,5,8,-10,10,4,-1,9,8,-3,6,-6,3,5,-3,-10,-8,5,-8,6,10,-2,-10,-9,4,1,-3,6,-1,9,-4,5,7,9,-8,-1,-7,-1,3,5,-1,-9,3,2,6,8,-4,5,4,5,1,8,1,4,9,-3,-8,-5,-8,7,-10,-6,-7,-4,-5,10,-8,-3,-10,-3,8,9,10,9,3,-4,8,-7,-2,-5,-3,4,-3,-8,-6,2,-9,-2,-5,9,-6,2,2,10,-2,3,-9,-5,-4,7,-6,-3,-10,-7,5,-6,6,6,5,4,-10,3,3,-4,-10,8,10,4,8,8,5,6,-9,-1,-8,-4,-1,-10,4,3,4,2,5,-5,-7,-6,-6,4,-5,-4,2,-3,-6,9,-6,-3,-6,-6,3,3,6,-2,4,-10,3,-1,-3,-7,-9,8,-1,-8,8,-7,5,8,-3,-6,8,-5,-1,5,-3,2,1,7,-10,8,-9,6,-6,9,-7,-6,10,-6,-10,-4,5,4,3,7,-8,-1,1,5,6,-9,-7,-7,-8,8,4,-2,-8,-5,10,6,7,7,9,-5,3,7,1,-1,-9,-9,-2,1,7,-3,-8,-7,8,-2,7,1,3,2,-4,-5,1,-5,4,3,4,10,-4,-6,2,-7,-9,-9,-8,8,-5,2,-4,-8,-5,-10,8,-8,9,-3,5,-10,-2,-9,-1,10,-10,3,-1,4,4,2,6,-2,-7,-5,-9,-9,5,1,6,3,6,-2,7,-3,-10,2,-9,10,-1,10,-2,-1,10,-5,3,-2,2,-6,-8,9,-7,5,-5,-4,1,-8,-5,-10,-3,1,10,5,-7,-2,-3,4,-10,-8,5,-1,5,9,-10,-7,3,9,1,-7,6,-3,8,10,8,5,7,-8,-5,4,-6,-8,-1,4,10,2,9,-6,-5,-7,4,4,7,-8,3,-10,5,9,3,-9,3,9,-5,10,-5,2,-8,3,-2,-10,2,-3,-5,2,4,-1,3,10,8,9,-9,-3,7,4,6,4,3,-7,-10,8,-2,-10,2,-2,-1,4,-10,-7,-2,8,-5,7,2,8,-5,-5,-5,2,6,-8,3,-5,8,3,2,-9,6,5,-2,-1,9,-5,-2,2,1,4,-1,-10,-2,-10,-4,1,6,1,1,8,7,-4,2,-6,-7,8,1,8,9,-8,-8,-7,5,4,-10,-3,8,8,7,-1,-4,4,-7,9,-2,-10,-5,7,-7,-5,-5,-5,-8,-1,7,-9,2,-8,-8,4,-5,-2,-5,8,10,-10,2,8,-8,-4,2,8,9,-3,-5,6,-5,-10,-5,-4,-2,2,2,7,-8,7,-6,-5,2,-1,7,7,-4,-2,-5,-6,3,-4,-7,-4,-2,6,-7,5,9,6,-1,-7,8,-6,10,-2,9,7,-7,-2,4,-10,-10,-8,-9,4,7,-7,-3,-10,4,-5,7,2,2,4,-3,-5,-9,10,7,-8,-7,9,-7,-4,-10,7,-10,-3,2,-6,-4,-7,-6,-9,-3,9,-3,2,7,4,-5,-7,9,-7,7,-5,8,4,-9,9,1,3,-8,7,-9,5,3,10,1,-2,-3,-1,-8,-5,7,2,1,5,8,-5,4,-2,-1,8,2,-2,6,-5,6,5,3,-3,-1,-4,-10,-8,10,-1,6,4,-9,2,10,2,-9,-9,-6,-9,-1,-8,3,-7,-7,5,-8,-1,5,-4,3,1,5,-6,-4,-8,9,8,-1,6,-5,-3,-10,-10,8,-10,-10,-2,-10,-5,-3,-9,-10,-6,-4,-1,3,-10,8,10,5,-6,-10,1,-9,4,3,4,-10,4,-3,3,-9,-9,-4,-3,-8,8,-9,7,7,-10,5,-4,6,-1,5,5,6,2,-4,10,6,-1,9,3,-7,6,6,-7,10,-3,1,-8,3,-8,7,-2,-8,-5,1,10,-10,-10,-10,1,6,-4,4,-3,-4,-6,10,1,1,2,-6,9,-3,-4,-7,-3,-9,-1,9,-1,-6,-3,7,2,-1,-9,9,5,-9,2,-2,-1,2,-7,8,5,5,10,-3,9,9,3,7,7,-4,4,-6,10,-8,10,-3,2,2,-9,6,-8,-7,2,-6,-10,10,6,-10,3,-1,6,7,-3,1,1,-9,2,-10,10,3,-4,-5,-8,-9,2,5,6,-5,-10,-1,2,2,8,8,7,1,4,-4,-8,7,-4,8,-6,-1,7,-1,-5,-3,-4,4,-4,-3,-8,3,1,-8,4,-9,8,9,5,6,-5,-3,-2,2,-2,4,-3,8,9,-3,3,-3,3,8,-6,-5,3,-1,7,-1,-8,8,4,-9,5,5,-5,1,-2,5,-3,-8,2,-3,3,-9,9,-6,5,-3,9,-8,-6,-4,10,-8,-2,9,-8,-3,6,-5,9,-7,7,7,-8,2,-6,4,-6,8,1,-1,2,3,8,-3,7,3,10,4,7,-3,4,8,2,-9,-5,-3,6,5,3,-3,7,-6,10,-4,8,9,-7,-2,-4,1,3,4,-1,5,6,4,-8,10,-2,2,-4,-10,9,-9,4,2,-5,9,7,9,6,7,-6,9,-5,-6,3,1,9,-6,-1,2,-7,3,-9,-7,8,6,-5,1,-7,9,6,-3,-10,-10,7,7,7,8,-4,8,3,7,-10,-7,9,6,-6,10,9,-6,-6,-2,7,-6,9,5,1,-9,4,7,-2,7,-5,5,-9,-2,-6,-7,-6,-5,8,-4,-4,9,9,-1,2,-8,-7,8,-3,-10,-5,-3,-9,-6,8,7,5,2,-3,-4,3,1,-4,-5,-9,8,-1,7,-7,6,-4,-9,-8,-10,6,-7,5,-8,-6,6,7,1,2,5,-2,-9,3,-3,1,-5,9,-5,-7,-3,-5,10,4,-7,1,8,-4,-10,-4,-1,10,3,7,4,-2,-8,-8,8,-10,-8,10,6,4,-2,-1,-5,-6,-10,6,-6,-3,-7,3,-2,-4,-5,8,-8,-9,3,1,3,-6,-2,-7,3,5,2,7,10,-6,-6,6,9,2,5,7,3,-1,8,-5,1,-10,5,-6,-9,-2,7,10,-5,-5,8,-10,-7,-7,-2,-3,2,3,3,4,10,-8,4,-2,-2,9,10,2,2,-10,2,5,-1,1,10,5,-1,-8,2,-6,-4,4,-6,-1,6,3,9,3,-8,1,10,-7,-2,8,2,8,-8,-2,-1,-3,6,-6,-3,2,-3,-7,-2,8,1,10,9,-1,-2,-1,8,9,-9,-9,-4,-4,-8,4,9,-4,7,4,-1,2,2,6,1,-5,2,5,-7,-7,-1,-2,2,-1,-9,-4,3,-6,3,-6,9,5,5,7,8,-4,-4,9,4,6,6,8,8,-6,-7,-5,4,-6,-7,-1,-1,-4,-3,3,-5,-5,-9,-4,-8,-9,-3,-9,-4,7,2,-8,5,7,7,7,9,4,-6,6,-9,9,1,2,-5,-9,-7,9,9,9,-6,-9,-2,-2,3,2,-4,7,-9,1,6,-10,-6,-6,-4,4,-3,2,8,-4,1,5,9,1,9,-3,-1,-1,-1,-6,1,-3,-3,-2,9,1,3,5,8,-1,7,5,6,-7,-2,-2,-10,-9,-1,3,-6,10,-2,3,-3,10,-8,-8,-2,3,-5,-9,9,-8,-1,-2,7,8,9,1,4,1,-6,-8,1,4,-4,3,-3,8,3,-4,-2,-8,-4,4,-10,-1,2,-7,-9,-3,6,-10,6,-6,8,9,-2,10,8,3,-8,6,-4,-7,8,9,5,-4,9,-1,-7,6,7,-3,-1,3,-3,-9,6,1,5,7,-1,-2,8,-5,2,-6,9,-4,-8,-10,-9,-7,5,10,-7,-10,7,-9,3,-2,7,-6,9,-7,-10,-9,5,4,5,-10,1,3,1,-5,-7,-3,-6,3,10,6,6,-9,-1,-1,-8,-1,2,-9,5,1,-2,6,-5,7,8,5,9,7,6,-6,-2,5,10,-8,9,-9,-6,-1,4,8,1,10,-7,10,6,10,-5,-1,-1,2,-2,1,7,-1,-1,-5,-2,2,3,-7,-10,-6,-3,3,-7,4,-7,-9,6,-5,9,-9,6,-4,-5,-5,-9,-1,-7,-6,9,-6,-4,1,5,9,6,8,-9,-9,3,-9,-7,5,-7,2,3,-4,-3,9,9,-1,-5,-6,-1,-9,3,7,2,-5,2,-5,-5,2,-2,-5,8,-7,-7,7,8,-4,-8,2,-2,-9,6,1,-2,1,-3,-6,-4,-4,-6,1,-1,-6], dtype = "uint16")#candidate|1076|(1728,)|const|uint16
call_1075 = relay.TupleGetItem(func_186_call(relay.reshape(const_1076.astype('uint16'), [9, 16, 12]), relay.reshape(const_1076.astype('uint16'), [9, 16, 12]), ), 1)
call_1077 = relay.TupleGetItem(func_190_call(relay.reshape(const_1076.astype('uint16'), [9, 16, 12]), relay.reshape(const_1076.astype('uint16'), [9, 16, 12]), ), 1)
output = relay.Tuple([bop_1047,call_1054,call_1056,var_1057,uop_1061,call_1066,call_1075,const_1076,])
output2 = relay.Tuple([bop_1047,call_1055,call_1058,var_1057,uop_1061,call_1067,call_1077,const_1076,])
func_1081 = relay.Function([var_1040,var_1057,], output)
mod['func_1081'] = func_1081
mod = relay.transform.InferType()(mod)
var_1082 = relay.var("var_1082", dtype = "float32", shape = (7, 1, 14))#candidate|1082|(7, 1, 14)|var|float32
var_1083 = relay.var("var_1083", dtype = "bool", shape = (10,))#candidate|1083|(10,)|var|bool
output = func_1081(var_1082,var_1083,)
func_1084 = relay.Function([var_1082,var_1083,], output)
mutated_mod['func_1084'] = func_1084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_1107 = relay.TupleGetItem(func_772_call(), 0)
call_1108 = relay.TupleGetItem(func_774_call(), 0)
func_838_call = mod.get_global_var('func_838')
func_840_call = mutated_mod.get_global_var('func_840')
call_1114 = relay.TupleGetItem(func_838_call(), 1)
call_1115 = relay.TupleGetItem(func_840_call(), 1)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_1121 = relay.TupleGetItem(func_934_call(), 1)
call_1122 = relay.TupleGetItem(func_936_call(), 1)
func_707_call = mod.get_global_var('func_707')
func_709_call = mutated_mod.get_global_var('func_709')
const_1146 = relay.const([-7.573304,2.346103,-4.211414,-7.273634,2.532522,1.872014,1.521402,-4.893841,3.667408,6.393075,8.610191,-4.599543,3.755222,9.836738,-1.833313,-8.091292,7.734818,-6.872912,1.762645,1.703137,-4.681858,-0.611775,7.255778,-4.330839,7.452363,-0.766599,-0.615206,9.094234,8.095501,-6.688511,-1.801498,-4.193997,-6.221849,-4.369558,1.704996,5.524774,-9.767290,3.410936,-6.409432,-6.887310,5.223778,-4.284573,1.722505,-4.596766,-8.010305,-8.452705,7.940835,9.595417,-8.131755,9.129062,8.480451,8.633413,-5.229213,5.040643,-7.569740,-8.654658,0.360523,0.211080,2.992556,4.418701,0.810104,-3.708672,-5.212084,-0.263065,9.933756,5.350379,-8.373369,-5.121053,6.209820,2.947979,8.671418,-5.246834,-2.256785,8.862500,0.037767,-0.363481,9.154542,5.689360,-2.615475,-6.390224,0.770185,-9.014298,-3.635571,8.171779,-1.759655,9.028238,-9.542984,-4.250719,-2.081041,-8.784240,-6.688658,-8.326923,-8.527322,-7.179153,6.857799,-2.738882,-7.774065,9.980190,-3.644926,-0.819038,8.579006,-7.070439,4.406475,2.918209,1.594613,9.818046,-9.662388,5.976122,1.664801,8.661365,-3.342382,-4.779678,-8.865742,8.047388,-0.811812,9.579227,2.785318,7.409154,5.285545,-6.966706,9.009509,-6.159477,9.009487,-8.784287,5.392791,-8.179822,7.998927,-9.314549,-8.266923,-9.962942,-5.907616,-9.269758,-8.455163,-1.788861,-8.109862,-0.019629,7.114739,3.608729,-9.962812,7.063880,4.841570,3.571699,-3.494200,-8.036748,7.824819,9.081773,4.782194,6.644613,-2.161599,7.255241,7.148321,-6.865580,-6.872349,6.021109,2.818936,6.206345,-4.061205,1.198783,-6.729221,9.311465,7.469992,1.620699,3.389334,-1.844816,2.287142,-8.079420,0.658639,3.097077,4.730238,-9.625316,7.403434,0.601859,-5.722761,8.769995,4.383698,-7.978138,9.723836,9.406089,-4.104038,-6.734691,7.553831,-1.284608,4.904328,-4.907917,0.833370,2.807681,-0.971640,-6.459233,-2.517766,-7.297028,6.392357,-9.609999,-5.214319,5.220644,8.221912,-8.862811,-6.116254,4.869989,-9.554970,-4.711612,-3.102974,6.766623,6.579243,9.364312,0.892368,3.470549,-4.221781,1.994336,2.422444,9.935486,0.863247,6.078628,8.569831,6.516670,-2.540578,5.704207,-7.364522,-1.493880,-8.608220,5.768975,8.176437,-3.603477,-3.998178,-8.495823,-9.586954,-0.538705,-3.179389,-0.372048,-0.527957,1.576975,4.499695,7.409624,7.449354,1.030580,5.648514,0.750439,3.283932,-9.734898,-6.036896,4.365358,-6.210416,-7.811913,3.844063,-5.095024,-0.677061,0.918405,-3.476782,0.436951,-1.645359,-3.687519,4.130662,-8.686264,8.601164,-5.226351,4.928625,7.756297,6.235920,-4.799671,-4.362687,-9.899115,6.061279,-6.009727,-4.442454,5.478333,9.278049,-1.954803,-7.162923,1.603133,5.013076,4.364167,-1.339519,4.041334,-0.964723,-4.330958,-7.491822,0.903982,-6.609626,-4.519453,-6.233339,4.362647,9.394971,-0.677774,-5.931588,1.190831,-5.002500,7.586060,4.030988,-4.174918,-5.748466,-7.411823,-7.417989,-9.515134,-6.574610,2.942781,2.672091,-7.590138,8.653093,-5.047844,-2.951670,7.081093,-4.440223,2.687270,6.694417,4.781004,5.349672,1.561963,0.369764,-0.320609,-9.788995,-3.433791,8.658779,-6.613994,-2.059396,-7.766240,-3.037059,9.863938,-3.055127,1.348031,-5.142178,-4.765551,-5.056617,8.708000,9.275891,9.361373,-3.319274,8.683928,-2.880551,-4.361050,-3.051462,-3.981670,-6.961590,2.288834,-0.431294,6.246568,4.839401,-3.289167,3.996207,-8.129959,-8.282964,-3.968837,2.035412,-1.213076,1.669386,-1.321459,3.634158,-3.508130,-2.812169,2.244726,-4.480658,-9.147502,-1.515920,-2.136024,-6.254573,-9.673024,-3.576217,8.568596,5.433312,-8.748526,-3.235136,-3.661809,1.351211,-4.497543,9.288029,-5.928303,-7.237810,1.369963,-1.129645,-8.721187,-7.134481,2.332079,5.218263,2.585422,-3.789714,8.272036,-8.342403,-6.028675,-1.427899,-2.520304,-9.821342,-2.839049,3.867595,0.044438,6.716948,-5.173016,0.470475,-4.569618,0.934799,7.104816,2.423049,-4.994118,-1.508803,5.626431,3.525131,-3.189572,1.297990,-6.950849,4.808961,-0.595984,5.876912,-2.597505,-6.094139,3.978576,-1.715780,2.408776,5.014194,-3.184097,-8.475041,8.805787,6.447838,-3.687227,-7.788936,4.099992,-6.102003,-8.157999,-6.618935,-4.975241,8.421593,-4.653465,-4.481020,-8.841802,-3.978138,-0.270748,-8.324939,-4.015769,1.132841,-8.651952,-2.259035,0.559721,7.523587,-4.831570,6.250701,-2.015964,4.879919,-7.886434,-1.718192,4.950365,0.504068,-5.921116,9.342602,4.407518,1.376381,-0.494328,6.050397,-8.414882,0.775321,5.569031,-6.237275,-1.752613,-1.683951,7.972922,0.814542,5.890006,-6.291814,-7.990293,2.686126,8.834887,-1.480402,-2.816911,1.420254,-2.649816,6.055167,1.060405,-6.746068,2.999410,8.722352,4.889814,-8.780815,5.682977,-1.837826,-0.261871,-8.065196,-4.424376,-1.335669,-6.447903,-9.191331,-6.010369,-5.580364,8.065701,2.359706,-0.833253,0.565442,0.426315,-7.760562,1.005184,3.366039,-5.745519,4.434331,-2.872994,1.510494,5.320505,1.101915,-0.939015,-0.231607,-0.337229,-2.169248,-8.695962,8.560940,3.694108,-0.115377,-9.858229,0.599679,6.045723,-3.540726,-7.154769,9.587703,4.849114,4.538778,-8.268256,0.924620,-9.135288,5.582348,4.068078,-1.046379,8.421450,7.750162,-6.265806,-4.108335,6.378351,5.329160,4.415507,-8.950771,-6.839488,-3.873772,3.911095,9.235471,9.067245,-0.898392,3.148574,-5.611485,4.919106,9.143057,-1.103869,-3.305801,-1.107264,5.608644,-0.166264,-8.749466,1.427841,9.018974,-7.592611,-0.206401,-5.018706,-4.282560,-2.811524,-7.307512,8.582064,1.453154,1.119966,4.200556,-6.241635,7.794134,-9.303488,0.609356,-6.486668,-5.220644,6.643639,8.110149,6.881576,-1.644316,-5.269087,-4.912480,-3.832112,5.626588,2.150020,2.627100,2.723917,-4.349874,-3.334487,1.408455,-5.160905,4.787751,5.371464,0.964566,-6.135008,-6.565560,-0.282858,-5.151045,-5.608857,4.119537,0.485256,3.587447,1.356046,-9.767976,2.062232,7.276311,-1.227002,-7.260110,1.967439,-2.266555,6.759971,-2.945579,6.645249,-1.898733,-8.470877], dtype = "float64")#candidate|1146|(594,)|const|float64
call_1145 = relay.TupleGetItem(func_707_call(relay.reshape(const_1146.astype('float64'), [9, 6, 11])), 0)
call_1147 = relay.TupleGetItem(func_709_call(relay.reshape(const_1146.astype('float64'), [9, 6, 11])), 0)
output = relay.Tuple([call_1107,call_1114,call_1121,call_1145,const_1146,])
output2 = relay.Tuple([call_1108,call_1115,call_1122,call_1147,const_1146,])
func_1151 = relay.Function([], output)
mod['func_1151'] = func_1151
mod = relay.transform.InferType()(mod)
output = func_1151()
func_1152 = relay.Function([], output)
mutated_mod['func_1152'] = func_1152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_838_call = mod.get_global_var('func_838')
func_840_call = mutated_mod.get_global_var('func_840')
call_1159 = relay.TupleGetItem(func_838_call(), 1)
call_1160 = relay.TupleGetItem(func_840_call(), 1)
func_1029_call = mod.get_global_var('func_1029')
func_1030_call = mutated_mod.get_global_var('func_1030')
call_1195 = relay.TupleGetItem(func_1029_call(), 1)
call_1196 = relay.TupleGetItem(func_1030_call(), 1)
output = relay.Tuple([call_1159,call_1195,])
output2 = relay.Tuple([call_1160,call_1196,])
func_1198 = relay.Function([], output)
mod['func_1198'] = func_1198
mod = relay.transform.InferType()(mod)
mutated_mod['func_1198'] = func_1198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1198_call = mutated_mod.get_global_var('func_1198')
call_1199 = func_1198_call()
output = call_1199
func_1200 = relay.Function([], output)
mutated_mod['func_1200'] = func_1200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_613_call = mod.get_global_var('func_613')
func_614_call = mutated_mod.get_global_var('func_614')
call_1212 = relay.TupleGetItem(func_613_call(), 1)
call_1213 = relay.TupleGetItem(func_614_call(), 1)
uop_1221 = relay.acosh(call_1212.astype('float64')) # shape=(8, 12, 9)
uop_1223 = relay.acosh(call_1213.astype('float64')) # shape=(8, 12, 9)
output = relay.Tuple([uop_1221,])
output2 = relay.Tuple([uop_1223,])
func_1231 = relay.Function([], output)
mod['func_1231'] = func_1231
mod = relay.transform.InferType()(mod)
output = func_1231()
func_1232 = relay.Function([], output)
mutated_mod['func_1232'] = func_1232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_613_call = mod.get_global_var('func_613')
func_614_call = mutated_mod.get_global_var('func_614')
call_1242 = relay.TupleGetItem(func_613_call(), 2)
call_1243 = relay.TupleGetItem(func_614_call(), 2)
const_1244 = relay.const([[-1.088772,4.924940,5.867354,-9.819292,-3.029113,-6.748778,-2.741811,5.401668,2.703616,4.269994,7.514129,8.945965,-7.305783,3.141241,7.159846,6.477466,-8.274075,-1.043592,6.652256,7.539712,-1.149980,4.848113,2.194114,-2.557179,8.348996,-0.659803,-6.702645,-9.012297,-5.009347,-4.087142,-5.016480,2.788251,-4.791504,-9.753181,3.548459,4.929308,9.469237,-6.979594,-1.978324,-3.424059,-3.343275,-1.630087,-4.629904,9.528261,-8.668441,4.618744,7.107658,0.704015,-1.052062,-0.797918,-3.934768,3.024084,-3.932906,-7.403635,-3.890772,-7.116580,-9.607366,1.580272,1.717196,1.518272,3.085646,8.766865,8.959785,-3.846679,-6.789931,3.402100,1.508236,5.959905,1.934563,-6.364199,-5.316405,-4.048448,6.788091,2.185555,0.765243,-7.304280,3.603892,1.646671,-1.294882,-1.775423,-8.671172,1.681801,-5.396008,1.436433,5.498037,3.730686,9.235454,-3.871853,-0.600291,7.199550,-1.149597,-6.594888,9.979143,-5.258944,0.644338,2.692137,7.126840,4.496920,4.955605,0.163999,-3.990887,-5.108670,-4.323228,-3.491322,-6.803277,-6.567829,2.689409,6.475287,6.663854,2.381688,-8.761416,-9.101444,3.839326,-7.486505,9.854184,9.411234,-7.399527,4.554264,-4.729569,1.785327,0.690486,5.041503,-8.941305,-4.040149,0.045865,3.266961,-4.350019,4.615396,8.606570,-2.257172,0.420405,3.665244,5.883906,-9.706532,-6.958341,-7.251731,-0.890112,6.951070,-4.354466,-1.301252,1.370435,-3.394645,2.417634,5.053021],[7.807389,0.997521,-7.217527,-8.874972,6.704309,5.864665,0.263603,-0.910956,-9.751127,-4.916181,1.119382,-0.225907,-6.030281,-5.781580,-9.198825,2.237346,0.824220,-3.920874,0.149473,2.306973,4.111153,-7.339706,-2.679727,-2.108106,-6.130588,-4.398177,5.086755,-6.930119,1.894602,-6.189604,5.209906,6.023092,-1.811535,-7.732672,-8.964716,9.315530,-3.019635,-8.423899,-1.174230,6.353938,-3.880296,-1.477863,-1.076552,9.924495,3.688106,8.778225,4.740564,6.486674,-9.670335,5.025126,1.922167,0.568996,5.145409,-7.820069,-6.635791,-4.076699,6.578416,7.529852,-0.159170,3.370721,-8.984429,-9.991760,5.136182,2.413550,1.202988,7.479854,7.267070,-5.493599,-9.775973,-7.408241,9.741244,8.541655,1.308110,-7.434745,-2.246947,5.287263,1.900493,-2.494307,4.805460,-2.630161,3.124970,8.527551,-8.597582,9.577981,4.517923,-4.692805,-4.688305,5.986046,-1.961275,5.850495,-5.134226,3.487884,-5.952373,-0.311649,2.270807,-1.437885,-5.849145,-9.055767,-2.058651,-3.181873,3.584379,-6.572544,-0.602362,-0.432200,9.167387,0.692969,-9.760450,9.778771,7.108944,4.633945,9.906948,1.345564,8.554248,-1.926985,8.874284,6.277975,7.326178,-0.981497,-8.904061,-5.385055,5.632664,8.325353,-5.195426,-4.481001,-2.647030,7.621775,-0.873117,-2.582115,-2.254013,7.601166,2.028092,-4.756355,-8.182129,-6.557854,4.010904,-4.764758,8.456106,3.255095,1.327711,1.501210,3.698021,9.295869,1.057744,7.186058],[-9.319490,8.421160,-6.422284,5.643802,-1.072806,4.094801,-7.604871,-6.230211,7.619070,-8.193629,-3.126744,-8.854587,-9.211273,8.049306,9.011482,7.279335,0.343803,0.644869,-3.947089,-7.310081,4.757893,2.966648,0.580537,0.017781,6.642976,1.068726,3.595375,1.380151,3.291595,6.924742,6.512253,3.865165,5.758419,-6.552435,7.197584,-9.276542,-6.435811,-6.970193,-2.431930,-7.349587,8.907338,4.302797,-9.516846,-0.797711,4.692200,-9.683927,-4.918717,9.320354,3.449702,-4.880993,-4.377393,2.189947,-5.339933,-6.513907,4.740277,-9.437467,7.231586,7.314698,-3.299848,7.835625,8.173839,-3.843383,5.013678,6.461253,-4.598813,5.025969,-4.959759,6.084567,4.319586,5.914992,8.088598,5.289274,7.377700,-2.287275,0.415931,3.427684,1.344564,-8.645365,7.867529,5.892013,5.228044,-2.475494,5.278490,-2.832226,-5.596489,8.815031,2.087956,-0.098898,2.869807,-7.828747,-0.680601,8.789431,-9.354284,1.802540,0.834838,3.872826,5.425578,1.444316,0.901398,6.702210,6.784700,0.423986,-1.134658,-0.830124,-9.029748,-0.711291,-3.332922,5.098931,9.890554,3.675042,0.181621,-5.582939,-0.823967,-7.656600,7.323730,1.255167,-1.073773,-7.551896,-9.345658,4.504439,0.868536,-2.355115,3.707797,-3.217368,-7.908331,-0.989497,-6.987297,-0.781443,-1.213480,2.675653,0.364731,-6.203639,0.347623,-1.106206,3.868166,2.165461,6.477684,3.209490,0.313444,3.260195,2.304422,5.352516,-8.029265,-3.553036],[-5.089745,9.585610,2.217986,-8.527890,-2.704885,-3.485870,-2.413459,-6.492820,1.855755,-9.855045,-0.272090,-7.721765,3.279033,0.756606,-9.920944,-5.879861,6.618437,-5.653852,-1.746943,-2.124747,8.769790,-7.903279,-1.063173,9.095425,-5.375067,-8.561261,7.690409,-3.396146,-1.520054,3.622822,-7.769293,-7.382063,8.997797,-2.925024,9.762090,-7.308379,0.774567,-8.716908,1.479770,-4.173922,8.100467,-0.350077,1.494006,-1.919751,5.622896,-9.287744,6.238757,1.724532,9.889138,-3.221226,-3.215012,8.842598,-1.134612,0.731096,7.892987,1.713135,-9.514120,-4.473577,7.506176,-0.916118,-3.600475,-1.459393,9.183825,-7.469438,5.912150,8.909515,6.933707,3.474242,-3.004455,5.786053,-3.540077,-8.327519,4.668404,7.411112,1.239838,5.471929,-9.125386,-2.459607,3.244781,6.285784,8.045269,4.124873,6.374439,-2.272391,6.757685,-7.173031,7.862814,4.326565,3.071223,8.995717,-5.542761,-9.565445,-5.353151,-7.753217,3.368113,-2.904821,-0.508623,9.126475,-9.455922,2.868033,1.586601,-6.989920,-1.030223,0.233673,-8.283186,0.548132,0.051617,9.162434,-7.577737,-3.219582,0.711547,-5.000223,-8.703812,-3.579686,-6.936921,-7.602197,9.445594,-2.444071,-5.388155,6.220409,-4.973282,7.475172,-8.882601,2.640792,-3.363160,-8.075166,-5.678682,1.468634,-4.218621,0.121969,5.205159,-9.600192,-4.038475,0.598208,2.345540,5.962213,0.912193,0.664550,-0.251429,-5.884791,-0.273849,-0.416581,7.348643,4.262512],[1.217603,-1.243615,5.453362,4.343039,0.159220,-1.281572,5.810914,-9.990419,3.781410,-9.055099,-6.623615,-2.520328,9.320534,9.567044,0.511688,-3.146051,-2.788943,4.613860,-0.570736,7.857584,1.346720,-1.871472,-0.758771,8.302560,-4.697054,9.656836,-6.896145,-6.970500,-0.239149,5.420459,-1.453655,6.958902,-1.267003,-1.136145,1.017651,0.464014,-2.063943,-2.943854,-8.097960,-7.071034,3.949242,-7.364768,7.743580,-6.983030,-0.344300,3.390598,4.735945,6.433752,-5.254873,-6.974263,-2.316387,-6.983081,3.083086,9.188647,1.907110,1.923807,5.037575,-0.847085,-3.811657,-7.574121,-3.809607,1.426702,-8.409652,-1.115198,4.801107,3.286963,-6.460058,-8.516823,-9.867714,9.331748,8.709910,-4.037240,-7.611644,2.361551,5.044200,-8.590068,-4.374113,-7.434267,-2.878147,5.926277,2.373156,8.981683,-0.391991,-1.575197,8.374765,-3.922566,-2.302249,8.066397,-4.302855,1.890316,8.044455,1.862582,8.937916,-4.414180,-6.911943,3.821679,-5.296854,0.098867,-5.306405,9.951277,-4.728777,-4.311629,2.984306,9.521169,2.385394,1.786216,-5.200071,-8.087506,-7.536797,-7.695416,-3.915275,2.657426,-4.574066,7.776857,-1.943204,4.635747,3.099959,2.281717,8.447320,-3.915054,2.086955,1.522371,-2.659381,8.262815,5.787057,-8.984623,-4.602039,-9.636828,-2.631777,8.616926,1.434420,3.281591,3.134082,5.145932,-3.968513,3.583912,5.228722,0.827396,-1.290086,6.852176,-4.874141,4.355886,2.329683,-7.293088],[7.399932,-1.820602,-2.157360,4.928425,-4.104416,-5.947606,-4.036366,-1.394550,8.367764,-8.698048,-2.011301,9.897928,6.084177,3.456873,-5.528990,-9.357132,-1.341137,-3.830806,3.384326,-7.598066,-9.018845,-1.431274,-3.087054,7.302620,-2.860649,7.015125,5.447748,-1.414708,6.716937,1.317591,6.068645,2.886255,-5.271374,-5.770715,-8.465613,4.988839,0.320097,4.975161,-8.510463,5.284727,-5.021327,8.324364,7.972345,-4.278448,-4.247310,4.164005,-6.223817,1.356613,-1.537121,-3.219227,-2.049481,-6.533221,7.676043,2.100315,-7.421249,-6.949285,1.416676,-5.578420,0.297580,4.937411,-3.050159,4.514480,7.032533,8.589844,-9.104473,-8.060798,3.992427,1.953348,8.760753,-5.552775,8.213517,-8.147118,-5.572480,-9.454603,-2.604339,4.686296,-6.319539,1.199585,9.622298,3.475698,-2.153834,-9.134724,-9.669140,-8.982923,-8.729057,3.768633,4.751024,-3.300933,-2.260033,-0.807823,-8.094552,9.064538,-1.374824,4.152891,6.962535,-3.525138,-0.129530,0.076422,-9.272905,-0.789972,-1.432656,-0.396046,-0.591676,-7.888842,6.003669,5.883458,-9.182560,-3.522983,2.383988,4.207294,3.645512,-4.899315,-8.952463,-4.211192,0.041167,-9.792316,9.114610,5.960582,7.934890,-1.958433,-3.148327,0.020371,8.090099,-0.043168,1.608452,1.708213,3.053959,-2.345530,-1.625880,-0.914992,-2.375610,2.061322,5.502635,2.679009,-1.479901,-6.177244,4.988757,-4.926121,8.755820,6.025641,-2.617172,2.324091,-8.545529,8.868321]], dtype = "float32")#candidate|1244|(6, 144)|const|float32
bop_1245 = relay.divide(call_1242.astype('float64'), relay.reshape(const_1244.astype('float64'), relay.shape_of(call_1242))) # shape=(6, 144)
bop_1248 = relay.divide(call_1243.astype('float64'), relay.reshape(const_1244.astype('float64'), relay.shape_of(call_1243))) # shape=(6, 144)
output = bop_1245
output2 = bop_1248
func_1253 = relay.Function([], output)
mod['func_1253'] = func_1253
mod = relay.transform.InferType()(mod)
mutated_mod['func_1253'] = func_1253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mutated_mod.get_global_var('func_1253')
call_1254 = func_1253_call()
output = call_1254
func_1255 = relay.Function([], output)
mutated_mod['func_1255'] = func_1255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_838_call = mod.get_global_var('func_838')
func_840_call = mutated_mod.get_global_var('func_840')
call_1282 = relay.TupleGetItem(func_838_call(), 1)
call_1283 = relay.TupleGetItem(func_840_call(), 1)
output = relay.Tuple([call_1282,])
output2 = relay.Tuple([call_1283,])
func_1291 = relay.Function([], output)
mod['func_1291'] = func_1291
mod = relay.transform.InferType()(mod)
mutated_mod['func_1291'] = func_1291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1291_call = mutated_mod.get_global_var('func_1291')
call_1292 = func_1291_call()
output = call_1292
func_1293 = relay.Function([], output)
mutated_mod['func_1293'] = func_1293
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1297 = relay.const([[[2,-10,6,2],[5,5,-6,3],[-4,2,5,-6],[-3,-4,10,-7],[-1,9,4,-3],[-5,-1,3,-3],[-10,-2,-2,9],[-5,6,-8,8],[-9,9,8,4]],[[-2,-8,-10,2],[7,6,6,5],[-8,-7,-8,-8],[-1,2,-8,-7],[-3,5,-6,-3],[1,-2,-9,-8],[-2,5,-9,-6],[-9,2,-5,8],[-3,-1,-10,-4]],[[8,-9,5,-3],[-4,8,1,-4],[2,-10,4,-7],[2,6,4,4],[5,8,3,-8],[8,-8,10,9],[-9,-1,8,-8],[7,2,-1,3],[10,-6,1,-7]],[[8,7,-9,-9],[7,9,-7,-6],[10,-6,-2,7],[-2,-2,6,3],[-7,1,-1,6],[2,3,-2,-4],[7,-5,2,-1],[-4,-7,-6,-4],[3,1,-8,1]],[[-2,-1,-5,9],[6,-1,6,1],[8,-10,-10,-7],[4,6,3,-3],[-2,-1,9,7],[4,4,-1,-9],[4,-3,-8,7],[6,-3,1,-6],[-10,7,7,-5]],[[-3,2,-5,-7],[2,5,-10,-9],[8,-7,-10,9],[2,-9,2,-1],[-4,-3,3,10],[-9,3,-1,-6],[-8,7,8,10],[-4,8,-5,-2],[-1,10,6,9]],[[-8,5,-9,-8],[3,-5,-3,-10],[3,2,-8,-9],[-3,3,10,7],[4,-7,2,-10],[-3,8,9,1],[-10,10,-1,-7],[7,-4,-1,4],[2,10,9,10]],[[4,-7,10,3],[-3,5,1,8],[3,-4,2,2],[1,7,10,3],[-7,-7,8,-6],[4,-5,-5,-2],[5,-3,-5,-3],[6,8,7,-2],[-4,3,10,5]],[[1,6,4,-4],[-5,8,-3,6],[-10,9,-10,4],[-1,-5,6,-2],[1,5,-7,4],[8,-2,2,-2],[4,2,2,7],[-4,-4,-4,1],[6,1,-5,-5]],[[-9,-3,5,-5],[-7,-5,4,-4],[-6,-1,7,-8],[-6,-6,5,3],[8,-9,9,4],[-3,-7,-2,-5],[1,1,-8,1],[-9,4,-2,-10],[-2,5,-2,-9]],[[7,2,-7,10],[-3,-6,-9,4],[7,3,-4,10],[-1,7,-4,-10],[2,-2,9,7],[-2,-2,3,10],[1,-1,-6,10],[8,3,-4,4],[-5,5,10,-5]],[[-8,-5,10,-10],[1,-7,-2,6],[-4,1,10,-2],[-4,10,-10,6],[1,-8,1,3],[9,10,-6,-1],[-3,-6,10,9],[-6,7,3,5],[-7,4,-1,9]]], dtype = "int8")#candidate|1297|(12, 9, 4)|const|int8
var_1298 = relay.var("var_1298", dtype = "int8", shape = (12, 9, 4))#candidate|1298|(12, 9, 4)|var|int8
bop_1299 = relay.less_equal(const_1297.astype('bool'), relay.reshape(var_1298.astype('bool'), relay.shape_of(const_1297))) # shape=(12, 9, 4)
func_1029_call = mod.get_global_var('func_1029')
func_1030_call = mutated_mod.get_global_var('func_1030')
call_1302 = relay.TupleGetItem(func_1029_call(), 0)
call_1303 = relay.TupleGetItem(func_1030_call(), 0)
bop_1304 = relay.multiply(bop_1299.astype('float64'), relay.reshape(const_1297.astype('float64'), relay.shape_of(bop_1299))) # shape=(12, 9, 4)
uop_1308 = relay.sin(const_1297.astype('float32')) # shape=(12, 9, 4)
uop_1314 = relay.acosh(const_1297.astype('float64')) # shape=(12, 9, 4)
output = relay.Tuple([call_1302,bop_1304,uop_1308,uop_1314,])
output2 = relay.Tuple([call_1303,bop_1304,uop_1308,uop_1314,])
func_1342 = relay.Function([var_1298,], output)
mod['func_1342'] = func_1342
mod = relay.transform.InferType()(mod)
var_1343 = relay.var("var_1343", dtype = "int8", shape = (12, 9, 4))#candidate|1343|(12, 9, 4)|var|int8
output = func_1342(var_1343)
func_1344 = relay.Function([var_1343], output)
mutated_mod['func_1344'] = func_1344
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1348 = relay.const([[[2.058668,-6.327015,1.182198,-8.904018,-8.171194,8.374185,8.532180,6.761672],[-3.422862,5.924953,-0.583902,-5.765054,9.691796,8.029716,5.642036,3.487708],[-0.889245,-8.354582,-0.129795,3.956932,9.570921,4.351702,-2.184935,-4.053295],[1.977265,4.872701,9.961762,-0.445177,7.522616,-6.700135,4.001174,8.205650],[1.539842,8.402873,-3.267034,1.665261,-7.140847,5.148380,1.089298,5.364726],[0.350616,-0.476047,4.375650,1.220008,-4.224000,8.498152,-3.809860,-6.451202],[0.046200,0.756681,-3.831065,8.742036,0.704281,-1.973041,-3.539697,-7.712407],[-4.663526,-1.419027,9.067993,-4.368744,0.716628,6.401185,-7.044180,-3.431500],[-4.008270,1.538436,-2.568465,0.252011,8.188950,-2.003701,2.541377,-0.223188]],[[7.059890,9.882133,-9.311841,-2.152948,-0.557496,1.391661,2.438039,-7.846160],[5.734695,5.527072,-2.891006,-8.255669,-8.091199,2.803436,3.537001,2.911423],[-0.661230,5.353263,-6.614757,-1.185472,-5.912164,9.155098,0.176865,2.835514],[5.533308,-9.772279,3.438617,-0.050661,0.244654,6.270188,8.671416,6.875829],[-4.458711,-3.444510,1.205113,1.939879,1.066351,5.194853,-6.216599,1.748641],[4.680338,0.478147,-9.848709,-3.033983,5.335584,-1.503534,-5.663752,-0.258466],[7.306267,3.177868,7.906689,-5.647108,1.926977,-0.068123,-6.771518,-5.944469],[2.160707,-4.000861,1.757556,-1.341041,-9.988593,9.577846,-0.937772,4.225980],[-0.238838,-1.600810,0.218546,-8.042393,3.371749,-8.285098,1.646106,8.626417]],[[-4.051067,-1.810754,3.546204,-9.271204,-4.264305,-4.540283,2.197045,-0.728212],[5.392381,-7.809364,8.593207,0.139377,3.821785,-2.522843,-2.853018,8.548487],[0.425840,-2.837081,-8.685826,-0.852587,-1.642476,-7.893000,6.493446,-2.090563],[1.433532,2.774718,5.390027,0.047970,1.984398,6.594452,-8.455886,-0.747346],[2.792149,-3.861307,-8.854153,-6.420205,6.963680,-2.603529,7.496867,7.808248],[7.840391,8.947594,-7.470213,5.434035,-3.888592,1.017546,-0.290926,-1.077509],[7.863754,3.285297,4.606273,-9.507907,-1.924571,5.275896,7.292341,8.675363],[-8.449756,-0.768888,1.885871,-9.484505,-4.076425,-8.908853,5.839453,-6.834706],[3.087652,-2.839330,8.971622,-0.489553,-0.455641,7.371819,-3.853358,-8.055988]],[[0.616185,6.417848,8.967408,-3.730499,-5.299766,-9.472046,3.937258,-7.411797],[-2.203959,-9.154779,3.917641,-6.852530,-0.818915,-1.055593,-8.707027,4.866965],[6.187926,-9.243917,-8.817642,-0.613734,-1.598511,4.641780,-3.217886,-3.791058],[-6.566670,-1.334878,3.837010,9.656633,5.733226,1.743596,5.225378,6.936881],[8.539568,6.655876,9.017779,-9.806831,-8.408116,2.927895,4.844036,1.851858],[-1.081452,-2.036396,-6.156286,-6.591250,2.119074,0.617981,-0.809798,9.876336],[2.554212,-7.208345,-8.651914,-5.035326,-1.506868,1.867446,0.827034,8.403170],[2.731375,-4.153135,-6.303906,8.577905,-9.348159,-7.430648,7.952455,-6.725637],[-0.238535,0.506888,-4.853302,3.203620,-8.807020,-6.956512,6.596288,5.400660]]], dtype = "float64")#candidate|1348|(4, 9, 8)|const|float64
uop_1349 = relay.cosh(const_1348.astype('float64')) # shape=(4, 9, 8)
bop_1353 = relay.subtract(uop_1349.astype('float32'), relay.reshape(const_1348.astype('float32'), relay.shape_of(uop_1349))) # shape=(4, 9, 8)
output = bop_1353
output2 = bop_1353
func_1356 = relay.Function([], output)
mod['func_1356'] = func_1356
mod = relay.transform.InferType()(mod)
mutated_mod['func_1356'] = func_1356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1356_call = mutated_mod.get_global_var('func_1356')
call_1357 = func_1356_call()
output = call_1357
func_1358 = relay.Function([], output)
mutated_mod['func_1358'] = func_1358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_1384 = func_1253_call()
call_1385 = func_1253_call()
var_1388 = relay.var("var_1388", dtype = "float64", shape = (6, 144))#candidate|1388|(6, 144)|var|float64
bop_1389 = relay.less_equal(call_1384.astype('bool'), relay.reshape(var_1388.astype('bool'), relay.shape_of(call_1384))) # shape=(6, 144)
bop_1392 = relay.less_equal(call_1385.astype('bool'), relay.reshape(var_1388.astype('bool'), relay.shape_of(call_1385))) # shape=(6, 144)
func_1356_call = mod.get_global_var('func_1356')
func_1358_call = mutated_mod.get_global_var('func_1358')
call_1401 = func_1356_call()
call_1402 = func_1356_call()
output = relay.Tuple([bop_1389,call_1401,])
output2 = relay.Tuple([bop_1392,call_1402,])
func_1413 = relay.Function([var_1388,], output)
mod['func_1413'] = func_1413
mod = relay.transform.InferType()(mod)
var_1414 = relay.var("var_1414", dtype = "float64", shape = (6, 144))#candidate|1414|(6, 144)|var|float64
output = func_1413(var_1414)
func_1415 = relay.Function([var_1414], output)
mutated_mod['func_1415'] = func_1415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_1437 = relay.TupleGetItem(func_934_call(), 0)
call_1438 = relay.TupleGetItem(func_936_call(), 0)
var_1445 = relay.var("var_1445", dtype = "uint32", shape = (8, 12, 9))#candidate|1445|(8, 12, 9)|var|uint32
bop_1446 = relay.logical_and(call_1437.astype('bool'), relay.reshape(var_1445.astype('bool'), relay.shape_of(call_1437))) # shape=(8, 12, 9)
bop_1449 = relay.logical_and(call_1438.astype('bool'), relay.reshape(var_1445.astype('bool'), relay.shape_of(call_1438))) # shape=(8, 12, 9)
output = relay.Tuple([bop_1446,])
output2 = relay.Tuple([bop_1449,])
func_1460 = relay.Function([var_1445,], output)
mod['func_1460'] = func_1460
mod = relay.transform.InferType()(mod)
mutated_mod['func_1460'] = func_1460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1461 = relay.var("var_1461", dtype = "uint32", shape = (8, 12, 9))#candidate|1461|(8, 12, 9)|var|uint32
func_1460_call = mutated_mod.get_global_var('func_1460')
call_1462 = func_1460_call(var_1461)
output = call_1462
func_1463 = relay.Function([var_1461], output)
mutated_mod['func_1463'] = func_1463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_838_call = mod.get_global_var('func_838')
func_840_call = mutated_mod.get_global_var('func_840')
call_1469 = relay.TupleGetItem(func_838_call(), 0)
call_1470 = relay.TupleGetItem(func_840_call(), 0)
func_1342_call = mod.get_global_var('func_1342')
func_1344_call = mutated_mod.get_global_var('func_1344')
var_1497 = relay.var("var_1497", dtype = "int8", shape = (432,))#candidate|1497|(432,)|var|int8
call_1496 = relay.TupleGetItem(func_1342_call(relay.reshape(var_1497.astype('int8'), [12, 9, 4])), 0)
call_1498 = relay.TupleGetItem(func_1344_call(relay.reshape(var_1497.astype('int8'), [12, 9, 4])), 0)
output = relay.Tuple([call_1469,call_1496,var_1497,])
output2 = relay.Tuple([call_1470,call_1498,var_1497,])
func_1505 = relay.Function([var_1497,], output)
mod['func_1505'] = func_1505
mod = relay.transform.InferType()(mod)
var_1506 = relay.var("var_1506", dtype = "int8", shape = (432,))#candidate|1506|(432,)|var|int8
output = func_1505(var_1506)
func_1507 = relay.Function([var_1506], output)
mutated_mod['func_1507'] = func_1507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_613_call = mod.get_global_var('func_613')
func_614_call = mutated_mod.get_global_var('func_614')
call_1580 = relay.TupleGetItem(func_613_call(), 2)
call_1581 = relay.TupleGetItem(func_614_call(), 2)
var_1582 = relay.var("var_1582", dtype = "float32", shape = (6, 144))#candidate|1582|(6, 144)|var|float32
bop_1583 = relay.bitwise_and(call_1580.astype('int16'), relay.reshape(var_1582.astype('int16'), relay.shape_of(call_1580))) # shape=(6, 144)
bop_1586 = relay.bitwise_and(call_1581.astype('int16'), relay.reshape(var_1582.astype('int16'), relay.shape_of(call_1581))) # shape=(6, 144)
output = bop_1583
output2 = bop_1586
func_1588 = relay.Function([var_1582,], output)
mod['func_1588'] = func_1588
mod = relay.transform.InferType()(mod)
mutated_mod['func_1588'] = func_1588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1589 = relay.var("var_1589", dtype = "float32", shape = (6, 144))#candidate|1589|(6, 144)|var|float32
func_1588_call = mutated_mod.get_global_var('func_1588')
call_1590 = func_1588_call(var_1589)
output = call_1590
func_1591 = relay.Function([var_1589], output)
mutated_mod['func_1591'] = func_1591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1151_call = mod.get_global_var('func_1151')
func_1152_call = mutated_mod.get_global_var('func_1152')
call_1629 = relay.TupleGetItem(func_1151_call(), 3)
call_1630 = relay.TupleGetItem(func_1152_call(), 3)
func_572_call = mod.get_global_var('func_572')
func_575_call = mutated_mod.get_global_var('func_575')
var_1644 = relay.var("var_1644", dtype = "float32", shape = (864,))#candidate|1644|(864,)|var|float32
call_1643 = func_572_call(relay.reshape(var_1644.astype('float32'), [8, 12, 9]))
call_1645 = func_572_call(relay.reshape(var_1644.astype('float32'), [8, 12, 9]))
output = relay.Tuple([call_1629,call_1643,var_1644,])
output2 = relay.Tuple([call_1630,call_1645,var_1644,])
func_1648 = relay.Function([var_1644,], output)
mod['func_1648'] = func_1648
mod = relay.transform.InferType()(mod)
var_1649 = relay.var("var_1649", dtype = "float32", shape = (864,))#candidate|1649|(864,)|var|float32
output = func_1648(var_1649)
func_1650 = relay.Function([var_1649], output)
mutated_mod['func_1650'] = func_1650
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1675 = relay.var("var_1675", dtype = "int32", shape = (3, 1, 7))#candidate|1675|(3, 1, 7)|var|int32
const_1676 = relay.const([[[2,2,10,-4,7,8,1],[-7,8,4,4,1,4,-9],[3,-5,-4,8,1,8,10],[-3,3,8,5,3,8,7],[-8,-7,2,7,8,-2,7],[-7,6,-8,2,-2,-7,-4],[9,-9,10,9,7,-10,3],[-6,-3,-9,-6,10,2,3],[-7,6,-10,4,-2,-4,8],[6,5,4,-8,7,-10,10],[-8,-3,3,2,8,-5,-8],[-9,-10,-8,10,5,4,4],[10,8,-8,-5,-2,-4,5],[-9,8,-7,-7,-5,8,-7],[-3,-8,6,3,7,-4,-6]],[[-7,8,4,-8,-4,8,5],[1,-10,-4,7,4,-3,9],[10,-6,8,7,-9,3,-3],[7,8,-10,2,7,-2,-9],[-4,2,8,4,-1,-6,-9],[8,-9,-8,10,-5,3,-2],[-5,-2,1,-4,2,-5,-3],[5,-9,2,7,4,1,10],[1,9,-4,4,2,6,-10],[-7,1,2,7,7,7,3],[-1,10,-6,-10,7,-10,6],[3,7,6,5,10,-6,-8],[-10,-1,-6,5,-9,6,10],[4,-2,-9,-10,8,7,-7],[-7,-3,8,10,-4,-7,1]],[[-8,-9,-5,3,1,3,9],[9,10,-3,-3,-9,-4,-7],[8,6,8,-10,8,9,5],[3,1,-9,8,-5,2,3],[9,-9,-7,-10,-2,-8,-4],[-2,-10,-2,-6,9,3,-6],[-8,-3,8,-3,-8,-2,5],[-3,-6,7,-1,-6,-2,-3],[-10,1,10,6,-7,5,-4],[-8,-6,8,-7,9,-6,6],[-1,-2,-10,9,-1,9,6],[5,-2,8,5,1,3,-9],[6,-6,4,6,-4,-5,-3],[-3,10,-8,-3,2,4,-8],[-5,7,-2,-8,4,-10,2]]], dtype = "int32")#candidate|1676|(3, 15, 7)|const|int32
bop_1677 = relay.less_equal(var_1675.astype('bool'), const_1676.astype('bool')) # shape=(3, 15, 7)
func_1588_call = mod.get_global_var('func_1588')
func_1591_call = mutated_mod.get_global_var('func_1591')
const_1684 = relay.const([-5.476210,-2.778871,-8.037265,-3.532321,8.749284,7.280403,-8.161599,5.867180,-2.267793,-9.982441,7.829040,6.870940,-2.207019,-0.425454,3.685549,2.915348,-5.981431,-5.487132,-4.223271,-8.899246,9.217504,-8.142192,3.594873,7.450658,-3.411072,-0.904279,4.182403,0.586113,6.584983,6.596179,-4.275929,1.808048,1.274921,3.484804,-3.168320,0.126868,-2.695337,9.726260,1.706780,4.606012,-7.183184,1.556772,4.313705,2.192784,-2.353359,-1.454432,-6.152797,-5.393210,7.755762,4.245853,9.593242,-0.705947,5.051552,9.773686,-5.499519,-9.977166,-0.469849,-1.156820,-2.657932,-7.155641,6.645436,6.708625,-2.596566,8.723334,-9.321009,1.792947,5.591832,7.492203,-2.631300,-8.501592,6.364536,7.924539,-2.405297,-9.757850,-4.732989,-2.098220,1.534738,6.508649,8.845752,9.473275,9.348942,4.513277,-6.731451,4.923779,4.639215,4.548196,-4.172092,-8.813650,5.094154,2.718419,7.172319,2.417858,-3.329200,0.624575,0.848189,1.433625,7.183553,3.540115,1.321736,-6.058811,-6.046444,1.248292,8.957654,-6.865245,-2.650763,-2.722961,4.588910,-7.173133,-1.584551,0.708058,3.060771,-9.370853,6.817641,-0.066954,2.234604,6.525259,4.967202,-1.234099,-9.611156,6.471461,2.085500,-5.262922,5.065378,-1.464836,-6.416213,3.800299,-9.626176,9.402124,6.213513,-3.187277,-6.993117,8.969191,-1.948798,-3.890800,-4.260001,-6.943564,9.431076,-8.407952,4.147336,-1.295193,-8.183619,6.022238,-7.384077,-5.570227,3.744850,-9.797192,-8.470716,3.067344,0.506396,2.394956,7.406819,7.801529,-6.411137,9.342747,-5.045573,-2.889058,9.182986,1.493457,-9.322710,2.058153,-9.912534,6.207602,1.353361,-9.953082,8.530970,-2.904533,0.803395,8.246969,5.271133,8.948833,9.259107,-1.912116,-8.684914,-2.369542,2.361355,-9.913262,6.592256,-3.320027,-1.883035,9.217402,-9.607410,-2.712704,-6.174071,-3.225298,-5.384674,8.830236,0.905212,-4.337208,-8.207286,-2.670153,-8.219919,6.257682,-8.433726,1.652884,-6.715121,-5.733524,-8.652411,-1.135995,6.074120,8.002517,8.411659,4.812168,-7.773453,-1.169723,-9.774185,5.761587,3.441744,-7.410973,-3.763705,-4.495295,-9.892744,-0.049754,0.734682,2.717694,9.567216,-3.586744,-6.618362,0.438751,7.400398,4.974270,-0.906748,-1.786966,6.037237,7.940639,-8.573696,7.351328,2.881621,-3.105556,-1.246765,8.746327,-6.190743,-8.606846,6.601845,1.840368,2.482678,-8.329304,5.096562,0.476562,3.333906,5.307829,-2.108290,-1.871353,-0.938091,-1.877210,3.719669,-3.296287,4.477369,-1.535245,-7.043857,7.324070,-6.222318,6.700952,4.370783,-3.294422,9.389180,-4.404334,-3.945433,4.508974,4.419909,-9.863033,3.425933,-8.027370,9.939680,3.357754,9.870814,-9.486120,-6.223519,2.529767,-8.307021,-1.466369,1.787975,-2.522285,-0.154118,-1.062694,3.458833,-0.283438,0.828681,-7.161272,2.201003,-9.498889,-0.339054,-8.510647,-4.998109,-8.370580,1.273451,8.248917,-1.375746,1.764528,8.274150,-5.698386,-5.033240,-9.442178,-4.745455,-6.995987,-1.191249,-2.003237,7.916351,-2.941931,-6.245413,4.106680,2.842013,4.676884,-9.318317,-3.059400,-7.549847,-7.874635,4.317903,4.016817,9.673323,5.067949,-0.251879,5.222236,-4.912396,-4.302837,-3.277901,9.476255,-2.862623,8.999300,6.359351,-4.083939,1.933309,-4.880079,5.863985,-9.893819,8.699363,6.896045,6.160013,-0.312774,-9.966242,-3.146679,-5.841345,-1.777174,-2.525617,7.753775,-7.626850,-1.404385,-9.063028,-8.959577,-8.940769,0.945022,8.679776,3.806367,3.313501,-6.674122,-8.442353,-8.154547,-5.045701,2.242761,3.520827,-9.814599,3.931415,1.505599,8.942497,6.887036,-2.477160,-0.982178,4.239626,-4.575397,3.043502,-9.388122,9.850258,-8.391285,-9.244965,1.436064,-0.179995,3.722775,-7.775200,4.695246,-4.120932,5.688752,5.206906,-9.517429,5.998069,2.628716,-4.397339,4.019704,9.240114,4.817729,4.329679,1.254440,3.181277,4.426911,7.968600,2.074554,-2.537391,-5.439759,-0.861915,-8.609046,7.841480,-0.801985,-7.668762,7.823621,3.350257,0.926818,8.400924,-7.157443,7.228591,-8.913402,5.897881,-7.477969,-8.556982,4.099402,-4.196022,5.426851,-7.768908,3.250153,7.298040,-1.180575,9.022508,1.377900,-2.141938,6.300010,-7.001652,-5.427776,-7.366580,5.583205,1.619037,7.302204,-7.608922,2.344010,1.935103,7.621791,6.360242,0.714477,5.379811,-8.764410,9.060113,8.491227,1.194346,9.667760,5.682457,5.859956,0.129545,-0.569416,5.388450,-4.670009,-7.172336,7.595697,3.222822,-7.813590,9.529344,-4.861690,6.827132,-3.936422,2.463079,-7.406748,-7.905907,2.991187,-4.862692,-1.296262,8.551787,-1.934155,-7.192959,-0.767466,3.655239,5.315902,0.387898,3.627579,1.284487,4.318340,1.254029,5.064826,8.760082,9.352763,-4.721300,6.980129,8.323794,1.771431,5.429167,3.763759,5.846887,-3.169625,8.118492,3.752767,6.721530,9.035598,-9.023240,6.691267,-8.849610,1.438877,-4.622072,-6.215132,1.045148,0.724839,8.622382,9.365482,0.111809,4.928921,0.839714,-6.987848,-2.372861,3.452662,-9.199480,-5.614972,7.754311,-2.671662,3.465056,7.183217,-6.173650,0.020343,-8.778849,-6.405673,-7.300127,-5.872565,-0.583725,2.205782,-6.567975,5.877650,8.889918,4.111263,-1.360973,-2.196644,1.472938,-8.372351,-1.152561,7.963722,-8.874341,0.799377,-0.965852,-4.618901,-9.359087,5.554217,-9.798113,0.159971,-7.135223,-3.801738,-1.133671,-0.064565,8.195688,-6.006116,2.027567,-1.827907,6.009161,-6.068053,1.737645,6.709954,-2.008463,-4.145087,0.556757,-9.176830,6.483103,-9.397837,6.295845,7.858940,5.793557,9.548531,3.642542,-0.314375,6.627505,-3.716471,6.945063,-9.430871,-8.961102,-3.130634,-6.093250,-9.207810,-6.881045,-4.325430,4.404202,-7.934296,0.960815,0.538885,8.717760,7.513635,9.014965,6.263904,4.746955,-9.368009,-7.339811,-9.379317,-7.192867,-5.491707,7.551975,-1.495438,-5.189735,-5.983955,-8.965337,5.298212,9.166890,-4.973422,-5.722363,-4.275449,2.865780,-0.675023,7.948043,6.480141,7.221963,-7.367983,-2.702210,5.171737,7.485835,-5.253011,-0.902301,7.572096,-5.266157,-2.224917,9.995804,8.835682,1.454749,7.140587,-2.010207,-2.541484,-9.340814,-5.250892,-2.342830,-7.556552,3.551090,0.853095,-5.401458,-9.902472,4.418891,5.751141,9.027984,7.658565,-2.291334,6.567528,2.735235,-1.389070,7.504048,-4.421105,6.061103,1.329900,1.290819,-5.827746,-3.814887,3.535254,1.238273,-6.722819,0.378560,0.095772,-9.903842,-3.665823,0.462258,-4.425811,7.568016,-7.118810,7.028052,-1.103119,-1.026838,-8.604977,7.615751,-8.340035,-6.154020,4.139688,5.345009,-9.378852,7.417405,8.000653,1.072092,0.604951,4.624699,8.762249,-1.448195,8.080932,-0.598242,2.126284,2.643232,-1.339938,-2.798039,5.486583,7.332373,-4.052328,-2.667788,9.144027,4.109501,2.596939,-9.960155,0.423125,-2.576087,5.332820,-5.136199,-6.192117,1.926220,3.016264,-6.542132,1.613109,-4.905644,-6.320609,3.085477,9.121066,1.991884,8.971530,7.775037,-2.385288,-5.388519,6.894548,-0.780869,-9.084224,-1.933416,2.328621,7.085186,-3.649261,-9.614842,-0.104389,-5.470420,-5.898755,-0.295755,1.391180,-8.890930,0.176871,-8.082557,4.271199,-5.560727,-2.781594,-5.622006,9.023774,-6.669270,8.730529,4.825944,-1.040586,7.763922,4.615722,4.588779,-3.931462,-3.348049,-0.886845,-3.192268,1.094061,6.009601,7.722279,1.535144,2.069186,4.706325,5.214554,4.788165,-7.504897,-8.022526,-4.875639,0.723678,-8.899763,5.409795,-1.452736,-3.448725,-8.766003,5.314225,4.870630,3.924766,-8.220171,-4.895239,3.133004,3.418095,-9.280052,4.943968,1.680121,3.076420,-9.917668,-4.856783,-3.031156,-6.868125,6.134622,4.116258,-2.593169,7.728819,7.840437,-0.670629,5.668727,-8.657198,-0.461312,5.023045,-3.545399,4.357310,4.927090,1.327174,-3.246657,-6.695073,7.138621,4.410521,-7.512799,-3.056417,-1.924877,-1.918830,8.372622,7.116064,-4.035541,1.392851,-7.181259,6.288021,9.241833,0.626662,-5.981922,9.299695,3.715830,-1.875772,0.056927,8.200408,0.873355,-3.570992,9.002910,-0.123477,-7.246175,-0.553693,-7.547509,-6.150403,3.581909,-6.739795,1.079134,1.280438,-2.698677,2.228796,0.105630,0.641599,-7.353607,9.839660,2.527810,-8.366080,5.470492,-4.720538,-7.476673,9.215855,3.320846,-5.668997,8.998937,1.132458,9.966409,-5.106626,-5.518428,7.417123,2.283232,-4.881583,6.979717,-5.955848,6.094034,-5.553282,5.113434,5.844994,4.116465,6.113956,-8.864682,-0.501398,6.673510,-6.572222,-3.754316,5.275163,-8.290642,1.080271,-1.321051,-8.585673,-8.986933,2.804931,3.345285,-4.116953,-9.394654,0.610731,1.604250,-5.906635,-9.034942,-3.374305,8.252585,-8.511980,4.477497,8.922338,6.684145,9.526537,-1.195461,4.105732,-8.392128,6.834057,-3.779331,9.456342,-0.556273,-5.218272,-9.458555,-0.312483,-5.179241], dtype = "float32")#candidate|1684|(864,)|const|float32
call_1683 = func_1588_call(relay.reshape(const_1684.astype('float32'), [6, 144]))
call_1685 = func_1588_call(relay.reshape(const_1684.astype('float32'), [6, 144]))
func_1231_call = mod.get_global_var('func_1231')
func_1232_call = mutated_mod.get_global_var('func_1232')
call_1707 = relay.TupleGetItem(func_1231_call(), 0)
call_1708 = relay.TupleGetItem(func_1232_call(), 0)
output = relay.Tuple([bop_1677,call_1683,const_1684,call_1707,])
output2 = relay.Tuple([bop_1677,call_1685,const_1684,call_1708,])
func_1717 = relay.Function([var_1675,], output)
mod['func_1717'] = func_1717
mod = relay.transform.InferType()(mod)
var_1718 = relay.var("var_1718", dtype = "int32", shape = (3, 1, 7))#candidate|1718|(3, 1, 7)|var|int32
output = func_1717(var_1718)
func_1719 = relay.Function([var_1718], output)
mutated_mod['func_1719'] = func_1719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_838_call = mod.get_global_var('func_838')
func_840_call = mutated_mod.get_global_var('func_840')
call_1727 = relay.TupleGetItem(func_838_call(), 1)
call_1728 = relay.TupleGetItem(func_840_call(), 1)
func_1081_call = mod.get_global_var('func_1081')
func_1084_call = mutated_mod.get_global_var('func_1084')
var_1740 = relay.var("var_1740", dtype = "float32", shape = (98,))#candidate|1740|(98,)|var|float32
var_1741 = relay.var("var_1741", dtype = "bool", shape = (10,))#candidate|1741|(10,)|var|bool
call_1739 = relay.TupleGetItem(func_1081_call(relay.reshape(var_1740.astype('float32'), [7, 1, 14]), relay.reshape(var_1741.astype('bool'), [10,]), ), 0)
call_1742 = relay.TupleGetItem(func_1084_call(relay.reshape(var_1740.astype('float32'), [7, 1, 14]), relay.reshape(var_1741.astype('bool'), [10,]), ), 0)
output = relay.Tuple([call_1727,call_1739,var_1740,var_1741,])
output2 = relay.Tuple([call_1728,call_1742,var_1740,var_1741,])
func_1749 = relay.Function([var_1740,var_1741,], output)
mod['func_1749'] = func_1749
mod = relay.transform.InferType()(mod)
mutated_mod['func_1749'] = func_1749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1749_call = mutated_mod.get_global_var('func_1749')
var_1751 = relay.var("var_1751", dtype = "float32", shape = (98,))#candidate|1751|(98,)|var|float32
var_1752 = relay.var("var_1752", dtype = "bool", shape = (10,))#candidate|1752|(10,)|var|bool
call_1750 = func_1749_call(var_1751,var_1752,)
output = call_1750
func_1753 = relay.Function([var_1751,var_1752,], output)
mutated_mod['func_1753'] = func_1753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_613_call = mod.get_global_var('func_613')
func_614_call = mutated_mod.get_global_var('func_614')
call_1779 = relay.TupleGetItem(func_613_call(), 1)
call_1780 = relay.TupleGetItem(func_614_call(), 1)
func_1151_call = mod.get_global_var('func_1151')
func_1152_call = mutated_mod.get_global_var('func_1152')
call_1781 = relay.TupleGetItem(func_1151_call(), 4)
call_1782 = relay.TupleGetItem(func_1152_call(), 4)
uop_1791 = relay.sinh(call_1781.astype('float64')) # shape=(594,)
uop_1793 = relay.sinh(call_1782.astype('float64')) # shape=(594,)
bop_1795 = relay.logical_or(uop_1791.astype('bool'), relay.reshape(call_1781.astype('bool'), relay.shape_of(uop_1791))) # shape=(594,)
bop_1798 = relay.logical_or(uop_1793.astype('bool'), relay.reshape(call_1782.astype('bool'), relay.shape_of(uop_1793))) # shape=(594,)
bop_1800 = relay.maximum(bop_1795.astype('uint8'), relay.reshape(call_1781.astype('uint8'), relay.shape_of(bop_1795))) # shape=(594,)
bop_1803 = relay.maximum(bop_1798.astype('uint8'), relay.reshape(call_1782.astype('uint8'), relay.shape_of(bop_1798))) # shape=(594,)
bop_1812 = relay.logical_and(call_1781.astype('bool'), relay.reshape(bop_1795.astype('bool'), relay.shape_of(call_1781))) # shape=(594,)
bop_1815 = relay.logical_and(call_1782.astype('bool'), relay.reshape(bop_1798.astype('bool'), relay.shape_of(call_1782))) # shape=(594,)
output = relay.Tuple([call_1779,bop_1800,bop_1812,])
output2 = relay.Tuple([call_1780,bop_1803,bop_1815,])
func_1818 = relay.Function([], output)
mod['func_1818'] = func_1818
mod = relay.transform.InferType()(mod)
mutated_mod['func_1818'] = func_1818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1818_call = mutated_mod.get_global_var('func_1818')
call_1819 = func_1818_call()
output = call_1819
func_1820 = relay.Function([], output)
mutated_mod['func_1820'] = func_1820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_838_call = mod.get_global_var('func_838')
func_840_call = mutated_mod.get_global_var('func_840')
call_1869 = relay.TupleGetItem(func_838_call(), 1)
call_1870 = relay.TupleGetItem(func_840_call(), 1)
uop_1877 = relay.asinh(call_1869.astype('float64')) # shape=(11, 14)
uop_1879 = relay.asinh(call_1870.astype('float64')) # shape=(11, 14)
func_1818_call = mod.get_global_var('func_1818')
func_1820_call = mutated_mod.get_global_var('func_1820')
call_1887 = relay.TupleGetItem(func_1818_call(), 2)
call_1888 = relay.TupleGetItem(func_1820_call(), 2)
output = relay.Tuple([uop_1877,call_1887,])
output2 = relay.Tuple([uop_1879,call_1888,])
func_1915 = relay.Function([], output)
mod['func_1915'] = func_1915
mod = relay.transform.InferType()(mod)
output = func_1915()
func_1916 = relay.Function([], output)
mutated_mod['func_1916'] = func_1916
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1920 = relay.var("var_1920", dtype = "float32", shape = (2, 14, 2))#candidate|1920|(2, 14, 2)|var|float32
var_1921 = relay.var("var_1921", dtype = "float32", shape = (2, 14, 2))#candidate|1921|(2, 14, 2)|var|float32
bop_1922 = relay.floor_mod(var_1920.astype('float32'), relay.reshape(var_1921.astype('float32'), relay.shape_of(var_1920))) # shape=(2, 14, 2)
bop_1930 = relay.bitwise_xor(var_1920.astype('int8'), relay.reshape(var_1921.astype('int8'), relay.shape_of(var_1920))) # shape=(2, 14, 2)
const_1933 = relay.const([[[-5.935091,-8.349144],[-1.861037,1.412243],[-1.024380,6.163665],[5.908456,-1.213670],[3.917393,7.431620],[-5.374962,4.018146],[-0.567335,-0.836896],[-8.915384,1.095905],[5.954221,-4.203787],[-5.705350,8.831393],[-2.131780,0.889791],[3.252993,-5.503744],[2.847845,-8.499776],[6.438240,4.285342]],[[2.168176,5.749298],[8.799349,-2.999938],[-9.957195,-4.317501],[-4.919648,3.811156],[-8.389414,-7.251760],[-1.156811,-9.543141],[8.110644,1.253083],[-9.777873,-5.212814],[-0.698240,5.312021],[-9.623918,-8.952043],[0.622976,-9.062256],[4.995356,-7.939389],[-3.653028,9.123893],[8.718211,-8.932479]]], dtype = "float32")#candidate|1933|(2, 14, 2)|const|float32
bop_1934 = relay.power(bop_1922.astype('float32'), relay.reshape(const_1933.astype('float32'), relay.shape_of(bop_1922))) # shape=(2, 14, 2)
uop_1942 = relay.asinh(bop_1934.astype('float32')) # shape=(2, 14, 2)
func_1818_call = mod.get_global_var('func_1818')
func_1820_call = mutated_mod.get_global_var('func_1820')
call_1947 = relay.TupleGetItem(func_1818_call(), 2)
call_1948 = relay.TupleGetItem(func_1820_call(), 2)
uop_1954 = relay.atanh(uop_1942.astype('float32')) # shape=(2, 14, 2)
func_1231_call = mod.get_global_var('func_1231')
func_1232_call = mutated_mod.get_global_var('func_1232')
call_1956 = relay.TupleGetItem(func_1231_call(), 0)
call_1957 = relay.TupleGetItem(func_1232_call(), 0)
func_1818_call = mod.get_global_var('func_1818')
func_1820_call = mutated_mod.get_global_var('func_1820')
call_1960 = relay.TupleGetItem(func_1818_call(), 0)
call_1961 = relay.TupleGetItem(func_1820_call(), 0)
output = relay.Tuple([bop_1930,call_1947,uop_1954,call_1956,call_1960,])
output2 = relay.Tuple([bop_1930,call_1948,uop_1954,call_1957,call_1961,])
func_1970 = relay.Function([var_1920,var_1921,], output)
mod['func_1970'] = func_1970
mod = relay.transform.InferType()(mod)
mutated_mod['func_1970'] = func_1970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1970_call = mutated_mod.get_global_var('func_1970')
var_1972 = relay.var("var_1972", dtype = "float32", shape = (2, 14, 2))#candidate|1972|(2, 14, 2)|var|float32
var_1973 = relay.var("var_1973", dtype = "float32", shape = (2, 14, 2))#candidate|1973|(2, 14, 2)|var|float32
call_1971 = func_1970_call(var_1972,var_1973,)
output = call_1971
func_1974 = relay.Function([var_1972,var_1973,], output)
mutated_mod['func_1974'] = func_1974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_1991 = func_1253_call()
call_1992 = func_1253_call()
uop_2003 = relay.cos(call_1991.astype('float64')) # shape=(6, 144)
uop_2005 = relay.cos(call_1992.astype('float64')) # shape=(6, 144)
uop_2013 = relay.log10(uop_2003.astype('float32')) # shape=(6, 144)
uop_2015 = relay.log10(uop_2005.astype('float32')) # shape=(6, 144)
output = uop_2013
output2 = uop_2015
func_2017 = relay.Function([], output)
mod['func_2017'] = func_2017
mod = relay.transform.InferType()(mod)
mutated_mod['func_2017'] = func_2017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2017_call = mutated_mod.get_global_var('func_2017')
call_2018 = func_2017_call()
output = call_2018
func_2019 = relay.Function([], output)
mutated_mod['func_2019'] = func_2019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1231_call = mod.get_global_var('func_1231')
func_1232_call = mutated_mod.get_global_var('func_1232')
call_2027 = relay.TupleGetItem(func_1231_call(), 0)
call_2028 = relay.TupleGetItem(func_1232_call(), 0)
uop_2037 = relay.erf(call_2027.astype('float32')) # shape=(8, 12, 9)
uop_2039 = relay.erf(call_2028.astype('float32')) # shape=(8, 12, 9)
output = uop_2037
output2 = uop_2039
func_2056 = relay.Function([], output)
mod['func_2056'] = func_2056
mod = relay.transform.InferType()(mod)
mutated_mod['func_2056'] = func_2056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2056_call = mutated_mod.get_global_var('func_2056')
call_2057 = func_2056_call()
output = call_2057
func_2058 = relay.Function([], output)
mutated_mod['func_2058'] = func_2058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_2117 = relay.TupleGetItem(func_934_call(), 1)
call_2118 = relay.TupleGetItem(func_936_call(), 1)
func_1749_call = mod.get_global_var('func_1749')
func_1753_call = mutated_mod.get_global_var('func_1753')
var_2149 = relay.var("var_2149", dtype = "float32", shape = (98,))#candidate|2149|(98,)|var|float32
var_2150 = relay.var("var_2150", dtype = "bool", shape = (10,))#candidate|2150|(10,)|var|bool
call_2148 = relay.TupleGetItem(func_1749_call(relay.reshape(var_2149.astype('float32'), [98,]), relay.reshape(var_2150.astype('bool'), [10,]), ), 3)
call_2151 = relay.TupleGetItem(func_1753_call(relay.reshape(var_2149.astype('float32'), [98,]), relay.reshape(var_2150.astype('bool'), [10,]), ), 3)
func_1029_call = mod.get_global_var('func_1029')
func_1030_call = mutated_mod.get_global_var('func_1030')
call_2181 = relay.TupleGetItem(func_1029_call(), 1)
call_2182 = relay.TupleGetItem(func_1030_call(), 1)
func_677_call = mod.get_global_var('func_677')
func_679_call = mutated_mod.get_global_var('func_679')
call_2188 = func_677_call()
call_2189 = func_677_call()
output = relay.Tuple([call_2117,call_2148,var_2149,var_2150,call_2181,call_2188,])
output2 = relay.Tuple([call_2118,call_2151,var_2149,var_2150,call_2182,call_2189,])
func_2202 = relay.Function([var_2149,var_2150,], output)
mod['func_2202'] = func_2202
mod = relay.transform.InferType()(mod)
var_2203 = relay.var("var_2203", dtype = "float32", shape = (98,))#candidate|2203|(98,)|var|float32
var_2204 = relay.var("var_2204", dtype = "bool", shape = (10,))#candidate|2204|(10,)|var|bool
output = func_2202(var_2203,var_2204,)
func_2205 = relay.Function([var_2203,var_2204,], output)
mutated_mod['func_2205'] = func_2205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_2210 = func_1253_call()
call_2211 = func_1253_call()
const_2219 = relay.const([[7.029045,-8.574671,-6.884310,-9.712383,-3.836181,0.431763,-4.266054,-3.917604,5.473392,4.192080,-4.215724,-2.988002,0.334285,5.824883,-5.590647,5.629843,8.074957,-5.948730,3.838744,-0.963943,-1.906758,1.603591,-3.529360,4.470289,1.071661,6.218203,8.923512,5.371735,-2.948877,-3.794488,-1.795896,-5.217024,4.146897,3.347512,-6.765877,8.159144,9.433848,1.750654,-3.649250,6.202452,1.332323,6.213491,-1.376500,-8.309142,-7.826417,-7.355431,-9.105087,-6.292197,6.217694,-9.544297,2.836589,-5.173938,7.653520,-8.676369,9.246429,3.322423,3.289317,8.215086,5.731725,-6.755142,-8.139771,-4.160373,6.220129,3.870586,-6.576015,-4.911614,8.029169,-3.622052,-4.399539,-4.180965,1.992677,7.027429,8.451878,-6.975744,-6.870100,-0.910903,9.666742,2.862222,4.673332,-9.582849,5.596959,7.039510,1.269142,5.020259,-2.834939,4.057045,1.965239,-0.569468,3.835196,2.619484,9.204568,6.649031,3.154968,-4.342623,4.859986,-0.310475,2.009084,9.448370,-5.524461,9.741376,-6.627532,-3.867474,7.583100,-4.467244,0.899066,-8.128741,1.175368,-2.782187,-3.934927,8.720395,9.873989,-8.245831,6.768956,7.460842,-1.428627,1.295069,-6.773659,-2.511621,-9.727611,-4.488487,2.627701,5.055861,-0.905558,3.070150,-3.989118,-4.315566,-8.691697,-8.773600,-5.159445,3.240902,-2.049776,-2.855027,-5.382844,-2.242849,0.231128,6.308203,9.369632,-9.713770,-4.679266,4.779960,-2.960323,-5.954712,-5.752316,6.737372],[-3.015278,-3.397576,0.941798,5.719137,7.427978,-6.194861,4.122914,0.915683,-9.577784,-9.560181,2.942393,5.744916,-7.850526,3.666276,8.043964,6.519173,7.209679,-5.724219,-5.522859,4.901052,-3.070279,5.605142,3.352994,-9.610333,-1.123760,-2.762275,-0.385959,4.966853,4.088193,-7.969320,1.824873,-3.754506,7.879928,1.199738,2.482615,8.579716,5.347507,1.645822,-9.750799,-7.936876,-8.642854,-8.682039,2.688463,4.105776,-7.482454,9.799570,-5.247107,4.123929,-4.318270,3.318862,4.763868,5.409794,5.286143,9.245776,9.077265,-7.679216,-7.381280,-1.437654,3.345907,-4.822655,4.762869,7.190385,8.834429,7.253881,-0.559006,0.421598,-7.626308,-8.011823,5.382053,8.085040,7.869831,2.681572,-1.609740,9.152829,6.797354,-6.099445,5.632131,-5.954871,-1.944936,2.134361,7.605315,-7.444043,1.279857,5.306352,-2.113671,9.950808,0.409745,6.781199,6.104411,0.003848,-3.426067,0.372276,6.501058,-8.337139,-1.340525,-3.214584,3.926441,5.494870,2.909015,9.471128,1.817779,-7.384860,0.060281,-5.799265,-3.944813,-0.738548,9.899740,4.452656,4.795165,-3.256815,7.454682,2.825501,7.844443,8.540946,-8.054809,-1.754420,-9.073382,-4.279549,-9.230956,-9.978614,-2.448391,0.900535,-4.744178,-5.138860,0.569375,2.298750,-5.001928,0.617897,1.996962,-3.040873,5.598541,7.092406,4.756303,-8.096325,3.079586,3.350233,7.441571,2.842087,8.841131,8.893510,1.121241,5.918437,-8.667565,0.003030],[9.413107,2.595608,0.663504,-8.152417,-0.546211,-1.661533,8.351604,2.660165,3.004904,5.923683,-3.172397,3.115038,5.875648,8.698831,6.161566,-1.501248,3.623966,0.201855,-8.860375,2.033100,-1.478339,-4.390213,8.168305,-0.992747,8.285809,5.119101,0.482196,5.999712,9.814840,-0.710773,7.977190,-9.791426,-2.714005,2.491805,9.202338,7.895656,9.651015,-9.079276,4.236711,9.511350,-4.757671,-0.756242,1.169438,-0.918763,0.020823,2.035864,2.176604,2.771656,5.377444,7.161697,3.687994,9.383167,-3.422330,-6.196089,-2.734931,-8.517157,-2.265223,-2.115097,-4.120280,8.186039,9.234099,9.469042,-0.161059,-2.689022,7.677864,-5.398290,-7.898781,6.042042,7.911245,-0.601122,8.992093,-5.006772,-1.525105,4.136805,-6.250283,-4.196659,0.215588,-0.313683,-1.995688,-2.720132,-0.326010,-4.470969,-7.147824,-4.015867,3.668598,2.331571,3.048939,4.732681,7.792291,0.145220,2.979528,9.358809,9.710750,-9.312737,2.984153,3.723977,4.517950,-1.385924,-7.055163,-6.072854,-8.711873,-8.608533,3.405298,0.227664,6.311299,-5.842687,-9.729789,2.671319,-3.023784,2.103662,-4.134948,5.565708,-1.920913,8.443624,-4.175919,6.696199,-1.859247,6.649547,7.110360,-2.300151,7.904952,2.215351,-2.380864,6.176749,-7.927652,-3.369974,1.907466,-0.384770,-1.291741,-8.665686,0.851135,4.479546,-5.715289,-3.935238,2.735481,-4.294692,7.245888,-3.300477,-8.303979,-2.589596,-3.039443,-4.464095,9.454634,2.331740],[-4.162908,-0.589550,8.036312,8.767355,-5.973159,6.375825,-2.424726,-9.079228,4.864584,-7.290769,-1.321595,-4.244405,2.666668,4.435779,-9.264899,-6.745767,-0.915434,-8.866568,-7.829888,2.926156,2.528386,-4.944079,-7.427785,-2.769492,4.552575,-8.181374,5.842523,-5.451123,0.416166,0.206141,0.339869,-9.726059,1.898800,2.573578,2.775071,-7.965498,-3.403962,-0.822302,-7.480036,-7.124029,9.751194,4.592977,-9.216516,-1.833828,3.742981,3.173790,2.181822,3.856922,-0.955548,2.562613,2.596411,6.297898,-0.612601,7.682255,-5.011519,3.653613,-9.666564,-8.501278,-7.159635,-0.105787,9.275659,-2.096106,4.117773,3.954234,8.527468,8.403646,-4.356625,-4.254834,2.341322,9.188420,2.297798,7.290141,-5.392103,-4.551891,-6.896378,-9.283363,-7.034006,5.050218,-3.833775,-2.122658,4.289197,6.192538,-6.557977,-7.554203,3.306813,1.703039,-2.486413,-3.156879,-3.092580,-4.581059,1.153270,-8.492208,4.830591,0.110420,-1.328007,1.378916,-1.478377,-5.492976,-0.531745,-9.812470,-1.032624,1.652462,-7.635139,3.305075,-1.096078,-6.544898,7.660382,-9.481557,-3.835653,-9.783318,8.884178,-1.607337,-6.323381,-8.806200,8.815645,-0.179021,-1.676956,1.598683,4.675138,0.092625,-3.262091,1.249893,6.797849,-6.640093,-8.588034,-5.414086,3.793665,5.654187,1.677902,-8.080917,-6.297922,1.082292,-7.646871,9.480950,3.022855,-5.879136,-0.580158,6.024211,5.241525,4.460603,2.650115,8.352128,-8.326550,-7.250374],[-1.490583,4.530838,-1.291188,6.614424,6.882395,-8.613694,0.302972,-7.906010,2.551213,4.902365,4.635009,-8.498965,8.553845,0.368652,-9.599241,7.324081,4.682647,8.016263,6.054575,-9.427373,8.804458,-3.410943,1.014173,8.000915,-9.152283,8.703908,3.159621,-6.084213,3.517832,6.566317,-3.343891,-4.609965,7.806752,3.261685,-5.057170,4.257973,-3.543684,1.224509,-9.050106,-8.837502,7.616590,-9.768995,7.038394,9.032966,5.535271,-1.549226,-1.915322,1.309045,-9.879896,-3.945124,-9.861831,3.852105,3.144751,4.337222,7.209531,3.364497,5.228843,8.416363,-6.998168,-9.464543,2.607549,5.781226,6.774089,6.448078,4.148903,0.756843,4.492801,0.525033,4.314180,-5.586983,-3.445184,6.354480,-1.259114,6.786305,-9.791467,-7.689234,-5.807684,6.149839,-0.272992,-4.540299,-5.593472,4.783612,-7.421124,4.940452,9.034589,-6.756519,0.084055,-2.003301,-4.049853,-1.656938,6.319859,6.961436,8.949075,6.688662,7.169812,3.614351,2.740056,-8.077296,1.216212,3.136404,0.362961,3.179422,-2.258384,-3.075587,3.162550,1.903425,7.287812,-4.822660,8.265611,-5.190888,8.380575,-2.382105,2.518112,-9.789809,-2.806227,8.378692,7.923162,-5.515213,-5.765722,3.338612,-9.530783,-3.023201,9.946403,-6.915134,6.852749,7.278848,-4.928641,5.452916,-4.391978,6.691815,-9.033611,7.453006,5.480929,4.893569,-6.585536,3.016258,5.596465,7.350588,-4.473908,2.998753,-8.511532,1.666829,-0.641259,-7.532680],[-2.270193,-9.466910,4.093191,2.698970,2.231296,-4.783806,5.598159,-0.552355,-6.376807,2.773155,4.348735,-5.790707,2.919268,0.481989,-6.548669,9.576431,3.071891,8.582220,0.856744,9.465131,0.611342,-6.488907,0.241330,0.620873,-6.053989,-0.859784,5.456606,-6.061305,-2.252688,9.975952,1.871786,-7.659381,-1.943351,9.889431,-4.097017,-0.091038,5.925324,-7.615957,-7.040584,-0.519575,-9.909141,-5.526824,6.595116,-5.936921,-8.996119,-3.256054,-5.249726,-2.289310,2.136225,-2.098755,-9.858996,4.467932,-3.625645,-5.372346,-9.874377,3.716710,-9.440541,-1.505278,-4.667421,4.604750,-0.561892,3.453975,-7.208657,0.844248,4.204738,1.207445,9.714019,2.303005,-6.441566,-7.220212,-3.793853,2.081021,2.809834,-6.436054,7.704096,4.761788,-2.180657,-4.081755,-7.536410,-1.211212,-2.532567,-0.330247,-9.920465,1.677010,2.283206,7.078348,5.283291,-1.518379,0.243315,5.419825,0.049544,-0.277151,9.864368,-9.989787,5.913801,4.417111,2.548242,6.883721,-7.058766,-1.042248,-3.712764,4.566240,8.880036,-0.645869,7.416082,4.845678,-9.119272,-1.494894,-8.052241,-8.081863,5.166914,1.635702,9.810243,-2.732188,2.062442,2.416880,8.483800,-8.421234,3.882110,1.582553,-0.857052,9.112234,-8.153541,-2.669597,-0.979776,-7.238448,-5.600986,-4.144667,-0.560130,2.622711,-7.937858,9.990488,-5.897160,-2.894139,5.549009,-0.730967,-5.915672,-2.665055,1.885474,0.755867,4.962382,0.646928,-2.110826,2.049747]], dtype = "float64")#candidate|2219|(6, 144)|const|float64
bop_2220 = relay.left_shift(call_2210.astype('uint16'), relay.reshape(const_2219.astype('uint16'), relay.shape_of(call_2210))) # shape=(6, 144)
bop_2223 = relay.left_shift(call_2211.astype('uint16'), relay.reshape(const_2219.astype('uint16'), relay.shape_of(call_2211))) # shape=(6, 144)
func_1198_call = mod.get_global_var('func_1198')
func_1200_call = mutated_mod.get_global_var('func_1200')
call_2235 = relay.TupleGetItem(func_1198_call(), 1)
call_2236 = relay.TupleGetItem(func_1200_call(), 1)
func_1818_call = mod.get_global_var('func_1818')
func_1820_call = mutated_mod.get_global_var('func_1820')
call_2238 = relay.TupleGetItem(func_1818_call(), 1)
call_2239 = relay.TupleGetItem(func_1820_call(), 1)
var_2251 = relay.var("var_2251", dtype = "uint8", shape = (594,))#candidate|2251|(594,)|var|uint8
bop_2252 = relay.bitwise_xor(call_2238.astype('uint8'), relay.reshape(var_2251.astype('uint8'), relay.shape_of(call_2238))) # shape=(594,)
bop_2255 = relay.bitwise_xor(call_2239.astype('uint8'), relay.reshape(var_2251.astype('uint8'), relay.shape_of(call_2239))) # shape=(594,)
bop_2259 = relay.floor_divide(const_2219.astype('float64'), relay.reshape(call_2210.astype('float64'), relay.shape_of(const_2219))) # shape=(6, 144)
bop_2262 = relay.floor_divide(const_2219.astype('float64'), relay.reshape(call_2211.astype('float64'), relay.shape_of(const_2219))) # shape=(6, 144)
output = relay.Tuple([bop_2220,call_2235,bop_2252,bop_2259,])
output2 = relay.Tuple([bop_2223,call_2236,bop_2255,bop_2262,])
func_2278 = relay.Function([var_2251,], output)
mod['func_2278'] = func_2278
mod = relay.transform.InferType()(mod)
var_2279 = relay.var("var_2279", dtype = "uint8", shape = (594,))#candidate|2279|(594,)|var|uint8
output = func_2278(var_2279)
func_2280 = relay.Function([var_2279], output)
mutated_mod['func_2280'] = func_2280
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2306 = relay.const([[[7,10,-9,9,-9],[2,-4,6,5,2],[10,5,3,-10,-8],[-2,-6,-8,-7,10],[-3,-4,1,-8,3]],[[-10,-1,7,-3,-9],[-8,7,-3,-9,-3],[4,3,-4,10,-1],[-3,6,-8,-7,3],[-1,7,5,4,-8]]], dtype = "int64")#candidate|2306|(2, 5, 5)|const|int64
var_2307 = relay.var("var_2307", dtype = "int64", shape = (2, 5, 5))#candidate|2307|(2, 5, 5)|var|int64
bop_2308 = relay.left_shift(const_2306.astype('int64'), relay.reshape(var_2307.astype('int64'), relay.shape_of(const_2306))) # shape=(2, 5, 5)
output = relay.Tuple([bop_2308,])
output2 = relay.Tuple([bop_2308,])
func_2313 = relay.Function([var_2307,], output)
mod['func_2313'] = func_2313
mod = relay.transform.InferType()(mod)
mutated_mod['func_2313'] = func_2313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2314 = relay.var("var_2314", dtype = "int64", shape = (2, 5, 5))#candidate|2314|(2, 5, 5)|var|int64
func_2313_call = mutated_mod.get_global_var('func_2313')
call_2315 = func_2313_call(var_2314)
output = call_2315
func_2316 = relay.Function([var_2314], output)
mutated_mod['func_2316'] = func_2316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_2403 = relay.TupleGetItem(func_772_call(), 0)
call_2404 = relay.TupleGetItem(func_774_call(), 0)
func_1749_call = mod.get_global_var('func_1749')
func_1753_call = mutated_mod.get_global_var('func_1753')
const_2433 = relay.const([-1.037472,-6.140048,3.447367,0.403400,-5.355239,7.279494,5.508645,1.245503,3.702507,2.865564,8.929985,-1.188567,4.627016,6.987166,7.162534,2.732275,-1.483197,1.748623,-0.401675,-0.674843,6.489192,6.555900,-4.819377,-8.479216,7.965540,4.724570,-1.588316,-2.906377,3.445370,-9.508822,2.625560,-3.924551,-8.519749,-4.566024,6.645523,1.569158,-8.048410,4.158894,-8.455260,-8.308022,2.954579,-7.240986,-3.072581,3.102494,-6.313013,-7.463945,6.247171,8.421420,-5.352896,-3.354646,-2.004797,-2.906091,5.242554,8.119891,7.395988,2.742743,9.185650,9.555329,-5.798918,5.591041,-4.239439,-4.571936,5.068056,9.970276,3.662595,4.827177,-3.955285,0.576817,0.635828,4.000345,-0.188609,7.094956,-3.922904,5.411921,7.086638,-7.170023,-8.808071,5.437698,-0.560494,9.894272,8.667355,-6.425526,6.368105,6.665427,-0.881954,1.873888,1.564753,6.216637,5.406226,-1.637298,6.377250,8.479229,9.040911,1.827006,8.024157,-1.533696,4.009311,-8.644667], dtype = "float32")#candidate|2433|(98,)|const|float32
var_2434 = relay.var("var_2434", dtype = "bool", shape = (10,))#candidate|2434|(10,)|var|bool
call_2432 = relay.TupleGetItem(func_1749_call(relay.reshape(const_2433.astype('float32'), [98,]), relay.reshape(var_2434.astype('bool'), [10,]), ), 0)
call_2435 = relay.TupleGetItem(func_1753_call(relay.reshape(const_2433.astype('float32'), [98,]), relay.reshape(var_2434.astype('bool'), [10,]), ), 0)
func_677_call = mod.get_global_var('func_677')
func_679_call = mutated_mod.get_global_var('func_679')
call_2459 = func_677_call()
call_2460 = func_677_call()
var_2483 = relay.var("var_2483", dtype = "bool", shape = (8, 12, 9))#candidate|2483|(8, 12, 9)|var|bool
bop_2484 = relay.power(call_2403.astype('float32'), relay.reshape(var_2483.astype('float32'), relay.shape_of(call_2403))) # shape=(8, 12, 9)
bop_2487 = relay.power(call_2404.astype('float32'), relay.reshape(var_2483.astype('float32'), relay.shape_of(call_2404))) # shape=(8, 12, 9)
func_82_call = mod.get_global_var('func_82')
func_86_call = mutated_mod.get_global_var('func_86')
const_2490 = relay.const([-9.298834,4.861381,-0.132144,-4.183709,5.490888,-2.270694,-6.689421,-8.794590,2.164119,6.466411,1.897921,-4.123796,0.033078,-4.598184,8.354550,6.968791,0.493134,9.236541,-3.432888,-5.027905,-2.140837,7.437323,-6.806237,2.547261,5.020439,5.508778,1.154556,2.666849,-5.847887,3.539336,-7.883505,-7.830127,9.966099,7.411822,0.002341,-9.166754,-4.940065,8.294803,1.090248,2.489774,8.107751,2.797151,-1.036709,8.348658,7.007226,7.017112,5.528239,2.329257,4.025973,-5.345460,5.009937,8.568191,6.396658,-9.226834,4.186055,7.419283,-1.308750,9.961877,2.418015,2.953031,-5.676113,-3.145812,-2.264604,-8.649452,-7.712854,6.792875,3.164405,-9.561655,5.255119,5.045722,-2.696607,3.935386,-8.469351,8.984387,-0.738976,-4.510063,6.886235,-2.658970,-4.050812,-3.432285,-4.510354,-6.687330,-6.533600,-3.530440,7.595883,-4.663860,-9.197622,-1.628704,0.932221,-4.292701,0.583114,-1.280052,-8.136525,-6.121389,1.148619,0.823476,-0.740252,-9.100961,-0.872755,-1.660184,-2.061569,5.425261,2.796199,4.143539,-1.302270,-1.147647,-1.969232,-2.996886,3.552379,-2.832689,8.713487,-8.142324,0.114288,-3.811402,8.726615,-0.820858,-2.262650,-2.735527,0.015664,-5.869520,-9.262694,2.040112,0.747519,1.103418,0.961254,2.408398,8.519376,-6.104376,-3.217292,7.887616,-9.666120,-2.351475,5.220543,-8.097068,-8.698186,-9.954772,5.797721,-4.759314,-3.505903,0.799888,3.196838,-5.510225,0.287861,1.249045], dtype = "float32")#candidate|2490|(144,)|const|float32
call_2489 = func_82_call(relay.reshape(const_2490.astype('float32'), [2, 12, 6]), relay.reshape(const_2490.astype('float32'), [2, 12, 6]), )
call_2491 = func_82_call(relay.reshape(const_2490.astype('float32'), [2, 12, 6]), relay.reshape(const_2490.astype('float32'), [2, 12, 6]), )
output = relay.Tuple([call_2432,const_2433,var_2434,call_2459,bop_2484,call_2489,const_2490,])
output2 = relay.Tuple([call_2435,const_2433,var_2434,call_2460,bop_2487,call_2491,const_2490,])
func_2498 = relay.Function([var_2434,var_2483,], output)
mod['func_2498'] = func_2498
mod = relay.transform.InferType()(mod)
mutated_mod['func_2498'] = func_2498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2498_call = mutated_mod.get_global_var('func_2498')
var_2500 = relay.var("var_2500", dtype = "bool", shape = (10,))#candidate|2500|(10,)|var|bool
var_2501 = relay.var("var_2501", dtype = "bool", shape = (8, 12, 9))#candidate|2501|(8, 12, 9)|var|bool
call_2499 = func_2498_call(var_2500,var_2501,)
output = call_2499
func_2502 = relay.Function([var_2500,var_2501,], output)
mutated_mod['func_2502'] = func_2502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2591 = relay.var("var_2591", dtype = "float64", shape = (4, 3, 12))#candidate|2591|(4, 3, 12)|var|float64
uop_2592 = relay.cos(var_2591.astype('float64')) # shape=(4, 3, 12)
bop_2604 = relay.divide(uop_2592.astype('float32'), relay.reshape(var_2591.astype('float32'), relay.shape_of(uop_2592))) # shape=(4, 3, 12)
bop_2609 = relay.multiply(bop_2604.astype('uint8'), relay.reshape(uop_2592.astype('uint8'), relay.shape_of(bop_2604))) # shape=(4, 3, 12)
func_1818_call = mod.get_global_var('func_1818')
func_1820_call = mutated_mod.get_global_var('func_1820')
call_2612 = relay.TupleGetItem(func_1818_call(), 0)
call_2613 = relay.TupleGetItem(func_1820_call(), 0)
uop_2615 = relay.acos(bop_2604.astype('float64')) # shape=(4, 3, 12)
func_1413_call = mod.get_global_var('func_1413')
func_1415_call = mutated_mod.get_global_var('func_1415')
call_2619 = relay.TupleGetItem(func_1413_call(relay.reshape(call_2612.astype('float64'), [6, 144])), 0)
call_2620 = relay.TupleGetItem(func_1415_call(relay.reshape(call_2612.astype('float64'), [6, 144])), 0)
var_2623 = relay.var("var_2623", dtype = "bool", shape = (8, 12, 9))#candidate|2623|(8, 12, 9)|var|bool
bop_2624 = relay.greater(call_2612.astype('bool'), relay.reshape(var_2623.astype('bool'), relay.shape_of(call_2612))) # shape=(8, 12, 9)
bop_2627 = relay.greater(call_2613.astype('bool'), relay.reshape(var_2623.astype('bool'), relay.shape_of(call_2613))) # shape=(8, 12, 9)
output = relay.Tuple([bop_2609,uop_2615,call_2619,bop_2624,])
output2 = relay.Tuple([bop_2609,uop_2615,call_2620,bop_2627,])
func_2628 = relay.Function([var_2591,var_2623,], output)
mod['func_2628'] = func_2628
mod = relay.transform.InferType()(mod)
mutated_mod['func_2628'] = func_2628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2628_call = mutated_mod.get_global_var('func_2628')
var_2630 = relay.var("var_2630", dtype = "float64", shape = (4, 3, 12))#candidate|2630|(4, 3, 12)|var|float64
var_2631 = relay.var("var_2631", dtype = "bool", shape = (8, 12, 9))#candidate|2631|(8, 12, 9)|var|bool
call_2629 = func_2628_call(var_2630,var_2631,)
output = call_2629
func_2632 = relay.Function([var_2630,var_2631,], output)
mutated_mod['func_2632'] = func_2632
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2743 = relay.constdtype = "float64")#candidate|2743|(9, 16, 15)|const|float64
uop_2744 = relay.sin(const_2743.astype('float64')) # shape=(9, 16, 15)
output = uop_2744
output2 = uop_2744
func_2748 = relay.Function([], output)
mod['func_2748'] = func_2748
mod = relay.transform.InferType()(mod)
output = func_2748()
func_2749 = relay.Function([], output)
mutated_mod['func_2749'] = func_2749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_2769 = relay.TupleGetItem(func_934_call(), 1)
call_2770 = relay.TupleGetItem(func_936_call(), 1)
func_186_call = mod.get_global_var('func_186')
func_190_call = mutated_mod.get_global_var('func_190')
var_2798 = relay.var("var_2798", dtype = "uint16", shape = (864, 2))#candidate|2798|(864, 2)|var|uint16
call_2797 = relay.TupleGetItem(func_186_call(relay.reshape(var_2798.astype('uint16'), [9, 16, 12]), relay.reshape(var_2798.astype('uint16'), [9, 16, 12]), ), 0)
call_2799 = relay.TupleGetItem(func_190_call(relay.reshape(var_2798.astype('uint16'), [9, 16, 12]), relay.reshape(var_2798.astype('uint16'), [9, 16, 12]), ), 0)
bop_2802 = relay.floor_mod(var_2798.astype('float32'), relay.reshape(call_2797.astype('float32'), relay.shape_of(var_2798))) # shape=(864, 2)
bop_2805 = relay.floor_mod(var_2798.astype('float32'), relay.reshape(call_2799.astype('float32'), relay.shape_of(var_2798))) # shape=(864, 2)
output = relay.Tuple([call_2769,bop_2802,])
output2 = relay.Tuple([call_2770,bop_2805,])
func_2810 = relay.Function([var_2798,], output)
mod['func_2810'] = func_2810
mod = relay.transform.InferType()(mod)
mutated_mod['func_2810'] = func_2810
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2811 = relay.var("var_2811", dtype = "uint16", shape = (864, 2))#candidate|2811|(864, 2)|var|uint16
func_2810_call = mutated_mod.get_global_var('func_2810')
call_2812 = func_2810_call(var_2811)
output = call_2812
func_2813 = relay.Function([var_2811], output)
mutated_mod['func_2813'] = func_2813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1356_call = mod.get_global_var('func_1356')
func_1358_call = mutated_mod.get_global_var('func_1358')
call_2848 = func_1356_call()
call_2849 = func_1356_call()
output = relay.Tuple([call_2848,])
output2 = relay.Tuple([call_2849,])
func_2850 = relay.Function([], output)
mod['func_2850'] = func_2850
mod = relay.transform.InferType()(mod)
mutated_mod['func_2850'] = func_2850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2850_call = mutated_mod.get_global_var('func_2850')
call_2851 = func_2850_call()
output = call_2851
func_2852 = relay.Function([], output)
mutated_mod['func_2852'] = func_2852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1818_call = mod.get_global_var('func_1818')
func_1820_call = mutated_mod.get_global_var('func_1820')
call_2917 = relay.TupleGetItem(func_1818_call(), 2)
call_2918 = relay.TupleGetItem(func_1820_call(), 2)
output = relay.Tuple([call_2917,])
output2 = relay.Tuple([call_2918,])
func_2919 = relay.Function([], output)
mod['func_2919'] = func_2919
mod = relay.transform.InferType()(mod)
mutated_mod['func_2919'] = func_2919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2919_call = mutated_mod.get_global_var('func_2919')
call_2920 = func_2919_call()
output = call_2920
func_2921 = relay.Function([], output)
mutated_mod['func_2921'] = func_2921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2850_call = mod.get_global_var('func_2850')
func_2852_call = mutated_mod.get_global_var('func_2852')
call_2936 = relay.TupleGetItem(func_2850_call(), 0)
call_2937 = relay.TupleGetItem(func_2852_call(), 0)
const_2945 = relay.const([[[-8.109353,-8.576427,-2.947494,-8.724432,-3.622428,-7.923809,0.792779,-1.576072],[-4.920512,5.896009,-4.519701,5.362921,6.909339,2.254242,7.388287,7.778162],[-6.102565,-0.368495,-0.604759,3.319504,4.784939,3.457860,-0.911204,8.080923],[-7.813563,-5.969092,-2.292479,-3.275315,-3.298723,-3.307940,-6.397945,2.145181],[-7.756898,2.262262,-4.530207,3.562746,-5.342936,-5.897507,-0.899319,-3.725813],[-1.368045,-4.052997,-6.268690,9.404256,-9.765311,-5.114335,2.046557,1.452577],[4.865666,-0.081793,3.964217,2.172273,-4.504645,7.155268,8.749961,-7.761046],[-7.754241,-9.182788,1.452308,4.822206,-0.275639,1.837624,1.793420,3.530704],[9.351378,-1.685184,7.508547,4.427253,-0.444416,-5.812023,-4.164209,4.945700]],[[1.485947,5.476895,7.300022,-7.370455,-3.514963,-4.364995,9.641452,-1.839845],[8.579824,6.745040,-1.701947,4.407849,6.443919,-3.106784,-2.324960,-2.951100],[-3.531847,-4.644846,-5.783553,3.658249,-1.842007,-4.539106,7.983681,8.785226],[-7.808183,6.320110,4.857947,6.516835,-0.929277,-1.104190,5.315435,7.555554],[-3.068190,-3.877058,-7.602621,0.506039,8.708579,-6.598202,-2.126734,9.399905],[6.729938,5.912569,3.972150,3.693562,-6.720605,-1.922182,4.285051,9.967671],[-2.761087,-7.862477,4.652816,9.226546,-9.739476,5.555769,1.943950,0.139003],[2.625952,9.952562,1.505677,1.125627,-1.541293,6.032564,6.019971,2.238939],[-9.127779,-0.053385,1.515659,-0.470492,-5.932351,-9.292877,3.429502,-9.124107]],[[-8.661964,5.436057,-5.534009,-1.499354,1.605113,-6.509804,-2.546334,-7.977156],[-0.649771,3.710940,-1.598648,0.142148,5.452641,5.145794,1.767082,-8.381351],[6.351832,0.792737,-6.662183,3.651139,7.141472,-7.833871,4.367095,3.488853],[1.785968,-0.797172,-2.254115,-0.981576,2.797537,-1.010946,4.678881,8.135831],[9.524920,2.287845,-2.339384,0.528981,-7.666865,9.040308,-4.545242,1.524845],[3.606411,3.604123,1.625818,-0.605810,6.890028,2.595968,4.506602,-0.527320],[6.118501,-2.151765,-8.683181,-2.153429,1.656141,-0.994667,-2.622864,4.003916],[7.995811,4.570939,3.669230,-9.831676,5.130147,7.450240,-4.558370,2.277743],[1.101068,9.623504,3.043426,2.190890,3.031842,-2.113904,5.470652,-9.986710]],[[-6.513700,-6.256738,9.296222,2.943307,-6.170977,9.839672,-7.313375,3.437532],[-0.998632,4.444542,-4.363260,-8.032008,-6.899597,6.228342,-0.944530,4.134804],[7.893553,-0.406760,-5.253659,8.027350,9.271366,4.118378,7.824660,5.368145],[0.268584,6.600646,7.652411,4.928384,-1.658658,-8.003134,-1.753260,-6.186533],[0.824743,-2.480749,-2.323541,-1.124290,-4.295754,9.663401,-6.123404,6.645795],[1.226732,3.341500,-0.918826,-1.256014,5.435623,-0.226926,-0.184333,-2.713471],[7.471301,1.463728,-3.268712,6.635852,0.982115,8.111750,-5.067257,1.852241],[1.374930,-7.247272,-0.235628,7.173050,7.184833,4.676183,-6.167592,3.395981],[7.225076,7.457690,4.593181,-6.249947,5.236189,-1.342817,0.435910,1.887887]]], dtype = "float32")#candidate|2945|(4, 9, 8)|const|float32
bop_2946 = relay.maximum(call_2936.astype('int16'), relay.reshape(const_2945.astype('int16'), relay.shape_of(call_2936))) # shape=(4, 9, 8)
bop_2949 = relay.maximum(call_2937.astype('int16'), relay.reshape(const_2945.astype('int16'), relay.shape_of(call_2937))) # shape=(4, 9, 8)
bop_2950 = relay.power(call_2936.astype('float32'), relay.reshape(bop_2946.astype('float32'), relay.shape_of(call_2936))) # shape=(4, 9, 8)
bop_2953 = relay.power(call_2937.astype('float32'), relay.reshape(bop_2949.astype('float32'), relay.shape_of(call_2937))) # shape=(4, 9, 8)
output = bop_2950
output2 = bop_2953
func_2959 = relay.Function([], output)
mod['func_2959'] = func_2959
mod = relay.transform.InferType()(mod)
mutated_mod['func_2959'] = func_2959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2959_call = mutated_mod.get_global_var('func_2959')
call_2960 = func_2959_call()
output = call_2960
func_2961 = relay.Function([], output)
mutated_mod['func_2961'] = func_2961
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2978 = relay.var("var_2978", dtype = "float32", shape = (11, 15, 16))#candidate|2978|(11, 15, 16)|var|float32
uop_2979 = relay.sinh(var_2978.astype('float32')) # shape=(11, 15, 16)
func_2313_call = mod.get_global_var('func_2313')
func_2316_call = mutated_mod.get_global_var('func_2316')
const_2985 = relay.const([[-10,-8,-2,-7,-6,-10,-9,6,6,5],[-10,-6,5,-2,-9,-5,-9,-5,-6,6],[3,-4,2,10,-10,6,8,-8,1,7],[8,-8,6,8,8,-6,1,-3,10,8],[10,1,-8,-10,-10,-9,-8,-7,-2,10]], dtype = "int64")#candidate|2985|(5, 10)|const|int64
call_2984 = relay.TupleGetItem(func_2313_call(relay.reshape(const_2985.astype('int64'), [2, 5, 5])), 0)
call_2986 = relay.TupleGetItem(func_2316_call(relay.reshape(const_2985.astype('int64'), [2, 5, 5])), 0)
output = relay.Tuple([uop_2979,call_2984,const_2985,])
output2 = relay.Tuple([uop_2979,call_2986,const_2985,])
func_2989 = relay.Function([var_2978,], output)
mod['func_2989'] = func_2989
mod = relay.transform.InferType()(mod)
mutated_mod['func_2989'] = func_2989
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2990 = relay.var("var_2990", dtype = "float32", shape = (11, 15, 16))#candidate|2990|(11, 15, 16)|var|float32
func_2989_call = mutated_mod.get_global_var('func_2989')
call_2991 = func_2989_call(var_2990)
output = call_2991
func_2992 = relay.Function([var_2990], output)
mutated_mod['func_2992'] = func_2992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1818_call = mod.get_global_var('func_1818')
func_1820_call = mutated_mod.get_global_var('func_1820')
call_3029 = relay.TupleGetItem(func_1818_call(), 0)
call_3030 = relay.TupleGetItem(func_1820_call(), 0)
func_2628_call = mod.get_global_var('func_2628')
func_2632_call = mutated_mod.get_global_var('func_2632')
const_3056 = relay.const([1.331058,6.439506,-2.800375,7.455109,4.969235,6.430944,-5.067819,-4.515543,3.761767,-8.042489,8.593463,4.985532,-8.970510,-0.591650,-2.862150,1.970897,7.774883,0.255755,-6.388762,8.099211,3.380697,4.640357,4.334350,-3.145943,0.039942,-7.407569,6.871372,6.392459,-1.535001,8.474555,1.703593,-3.467400,5.795227,-2.334570,-2.251302,6.472693,-7.590361,-8.434519,6.518926,8.302117,0.718095,9.375139,6.760977,-8.635088,-4.254951,7.975344,4.862972,-4.706697,5.631964,-8.320226,-6.615156,-6.316524,4.390156,-8.146471,9.031974,2.377189,9.092541,-3.343753,7.794363,-5.269568,-1.632377,5.895605,6.687038,0.474091,-6.881729,8.156273,5.378001,-7.417579,-2.644214,8.138514,-5.939114,-8.072057,1.725711,-4.764390,-7.714526,-1.407245,-8.050132,-1.018465,5.580304,5.228834,0.212541,-4.386658,-4.265554,1.703261,0.022680,-7.412653,7.592328,1.468395,3.182089,5.912054,-9.166424,4.040303,4.936153,0.402635,0.337272,7.313865,7.322256,2.776258,-1.470188,-7.350227,-8.314661,4.920487,4.354596,-3.418776,-0.690439,-4.466658,-1.296994,-1.215725,8.971864,-1.460525,-0.733949,-0.919036,-6.815775,1.294917,-8.336565,-7.541447,-8.178272,3.856089,1.460585,7.565782,6.681881,-4.196795,5.442978,-9.374033,-8.193260,3.914819,-2.027333,-2.029874,6.070361,3.076380,7.351675,-3.674311,1.940279,-6.877240,-2.585229,-7.349242,8.714478,9.750293,1.741948,-9.531655,-1.849420,-4.689014,7.177350,1.537970], dtype = "float64")#candidate|3056|(144,)|const|float64
call_3055 = relay.TupleGetItem(func_2628_call(relay.reshape(const_3056.astype('float64'), [4, 3, 12]), relay.reshape(call_3029.astype('bool'), [8, 12, 9]), ), 0)
call_3057 = relay.TupleGetItem(func_2632_call(relay.reshape(const_3056.astype('float64'), [4, 3, 12]), relay.reshape(call_3029.astype('bool'), [8, 12, 9]), ), 0)
uop_3062 = relay.sinh(call_3055.astype('float64')) # shape=(4, 3, 12)
uop_3064 = relay.sinh(call_3057.astype('float64')) # shape=(4, 3, 12)
var_3068 = relay.var("var_3068", dtype = "bool", shape = (8, 12, 9))#candidate|3068|(8, 12, 9)|var|bool
bop_3069 = relay.mod(call_3029.astype('float64'), relay.reshape(var_3068.astype('float64'), relay.shape_of(call_3029))) # shape=(8, 12, 9)
bop_3072 = relay.mod(call_3030.astype('float64'), relay.reshape(var_3068.astype('float64'), relay.shape_of(call_3030))) # shape=(8, 12, 9)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
const_3090 = relay.const([4,7,10,-1,6,-10,-6,-9,4,2,-7,10,6,-10,-6,10,-10,-3,10,-1,8,9,6,-6,5,2,1,-8,3,-9,4,3,6,-6,8,5,9,-1,-1,9,-4,-7,-2,-2,-2,8,-10,-4,4,5,9,7,5,7,4,-1,7,-5,-5,-6,10,7,-2,8,-2,8,-4,-1,3,-4,-4,-9,-5,1,-1,-10,-8,1,-7,6,2,1,10,-5,-2,2,-4,-8,-5,-2,4,7,7,4,7,-3,5,-4,-10,8,8,7,-2,2,3,-4,-5,1,-9,8,-4,-4,7,-3,-7,-8,-2,-8,1,2,3,1,6,-2,6,2,10,-10,-4,-5,-4,7,-9,10,4,-6,-9,6,10,2,-5,5,-10,2,7,-6,-10,7,-7,-1,-1,7,5,-5,1,-10,-4,2,9,-10,3,9,1,5,5,9,5,7,-1,-5,-2,9,-10,-1,-6,7,-9,3,4,-1,5,6,8,-10,-8,9,7,-5,10,-8,-9,4,-3,9,6,-8,-10,1,-10,6,3,7,5,9,-7,10,5,-5,2,8,6,8,-4,3,-9,1,4,4,-9,-5,-1,4,8,6,5,-9,-2,6,-8,-10,-10,9,-9,5,5,6,-4,3,2,-3,3,-8,9,-1,-3,-3,1,8,4,-10,3,6,8,9,-9,7,-4,-7,8,-1,-8,-5,6,-9,-7,9,6,-7,-7,6,-1,-7,7,10,-1,-6,7,8,-5,4,-7,-3,-2,-7,9,4,6,4,5,-1,-7,5,-10,-7,-9,8,6,9,4,-5,-1,2,2,3,2,-6,-2,-10,6,-9,8,3,9,-2,-7,-7,-7,6,-6,7,-4,6,-5,-8,6,8,-5,10,2,-8,-8,-7,-5,-4,-5,-9,-3,-5,-3,-9,-2,-5,-7,-2,4,8,-6,-8,-10,-2,-3,-4,-7,-7,3,3,5,2,-10,1,-6,-7,3,-3,-10,-10,7,-1,4,-9,6,-4,-8,2,-3,-4,-1,-1,-8,1,-9,-1,6,3,4,1,-1,-2,3,7,-9,7,1,6,6,7,8,-4,-4,6,-6,-7,-2,-8,-4,-3,7,5,-1,9,-10,-3,-6,5,-3,-7,10,7,-4,-8,-1,3,4,6,-1,-3,3,9,4,-9,-7,-5], dtype = "int8")#candidate|3090|(432,)|const|int8
call_3089 = relay.TupleGetItem(func_1505_call(relay.reshape(const_3090.astype('int8'), [432,])), 2)
call_3091 = relay.TupleGetItem(func_1507_call(relay.reshape(const_3090.astype('int8'), [432,])), 2)
func_677_call = mod.get_global_var('func_677')
func_679_call = mutated_mod.get_global_var('func_679')
call_3092 = func_677_call()
call_3093 = func_677_call()
bop_3094 = relay.equal(uop_3062.astype('bool'), relay.reshape(const_3056.astype('bool'), relay.shape_of(uop_3062))) # shape=(4, 3, 12)
bop_3097 = relay.equal(uop_3064.astype('bool'), relay.reshape(const_3056.astype('bool'), relay.shape_of(uop_3064))) # shape=(4, 3, 12)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_3120 = relay.TupleGetItem(func_772_call(), 0)
call_3121 = relay.TupleGetItem(func_774_call(), 0)
func_2498_call = mod.get_global_var('func_2498')
func_2502_call = mutated_mod.get_global_var('func_2502')
const_3125 = relay.const([[False],[False],[False],[False],[False],[True],[False],[True],[False],[True]], dtype = "bool")#candidate|3125|(10, 1)|const|bool
call_3124 = relay.TupleGetItem(func_2498_call(relay.reshape(const_3125.astype('bool'), [10,]), relay.reshape(var_3068.astype('bool'), [8, 12, 9]), ), 3)
call_3126 = relay.TupleGetItem(func_2502_call(relay.reshape(const_3125.astype('bool'), [10,]), relay.reshape(var_3068.astype('bool'), [8, 12, 9]), ), 3)
output = relay.Tuple([bop_3069,call_3089,const_3090,call_3092,bop_3094,call_3120,call_3124,const_3125,])
output2 = relay.Tuple([bop_3072,call_3091,const_3090,call_3093,bop_3097,call_3121,call_3126,const_3125,])
func_3157 = relay.Function([var_3068,], output)
mod['func_3157'] = func_3157
mod = relay.transform.InferType()(mod)
mutated_mod['func_3157'] = func_3157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3158 = relay.var("var_3158", dtype = "bool", shape = (8, 12, 9))#candidate|3158|(8, 12, 9)|var|bool
func_3157_call = mutated_mod.get_global_var('func_3157')
call_3159 = func_3157_call(var_3158)
output = call_3159
func_3160 = relay.Function([var_3158], output)
mutated_mod['func_3160'] = func_3160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1818_call = mod.get_global_var('func_1818')
func_1820_call = mutated_mod.get_global_var('func_1820')
call_3165 = relay.TupleGetItem(func_1818_call(), 2)
call_3166 = relay.TupleGetItem(func_1820_call(), 2)
func_750_call = mod.get_global_var('func_750')
func_753_call = mutated_mod.get_global_var('func_753')
const_3173 = relay.const([[False],[False],[True],[False],[False],[False],[False],[False],[False],[False]], dtype = "bool")#candidate|3173|(10, 1)|const|bool
const_3174 = relay.const([False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True], dtype = "bool")#candidate|3174|(70,)|const|bool
call_3172 = func_750_call(relay.reshape(const_3173.astype('bool'), [1, 5, 2]), relay.reshape(const_3174.astype('bool'), [7, 5, 2]), )
call_3175 = func_750_call(relay.reshape(const_3173.astype('bool'), [1, 5, 2]), relay.reshape(const_3174.astype('bool'), [7, 5, 2]), )
func_2850_call = mod.get_global_var('func_2850')
func_2852_call = mutated_mod.get_global_var('func_2852')
call_3186 = relay.TupleGetItem(func_2850_call(), 0)
call_3187 = relay.TupleGetItem(func_2852_call(), 0)
bop_3197 = relay.less(const_3173.astype('bool'), call_3165.astype('bool')) # shape=(10, 594)
bop_3200 = relay.less(const_3173.astype('bool'), call_3166.astype('bool')) # shape=(10, 594)
output = relay.Tuple([call_3172,const_3174,call_3186,bop_3197,])
output2 = relay.Tuple([call_3175,const_3174,call_3187,bop_3200,])
func_3202 = relay.Function([], output)
mod['func_3202'] = func_3202
mod = relay.transform.InferType()(mod)
output = func_3202()
func_3203 = relay.Function([], output)
mutated_mod['func_3203'] = func_3203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2959_call = mod.get_global_var('func_2959')
func_2961_call = mutated_mod.get_global_var('func_2961')
call_3262 = func_2959_call()
call_3263 = func_2959_call()
output = call_3262
output2 = call_3263
func_3271 = relay.Function([], output)
mod['func_3271'] = func_3271
mod = relay.transform.InferType()(mod)
output = func_3271()
func_3272 = relay.Function([], output)
mutated_mod['func_3272'] = func_3272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2850_call = mod.get_global_var('func_2850')
func_2852_call = mutated_mod.get_global_var('func_2852')
call_3329 = relay.TupleGetItem(func_2850_call(), 0)
call_3330 = relay.TupleGetItem(func_2852_call(), 0)
output = call_3329
output2 = call_3330
func_3338 = relay.Function([], output)
mod['func_3338'] = func_3338
mod = relay.transform.InferType()(mod)
mutated_mod['func_3338'] = func_3338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3338_call = mutated_mod.get_global_var('func_3338')
call_3339 = func_3338_call()
output = call_3339
func_3340 = relay.Function([], output)
mutated_mod['func_3340'] = func_3340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2017_call = mod.get_global_var('func_2017')
func_2019_call = mutated_mod.get_global_var('func_2019')
call_3343 = func_2017_call()
call_3344 = func_2017_call()
func_2810_call = mod.get_global_var('func_2810')
func_2813_call = mutated_mod.get_global_var('func_2813')
var_3346 = relay.var("var_3346", dtype = "uint16", shape = (1728,))#candidate|3346|(1728,)|var|uint16
call_3345 = relay.TupleGetItem(func_2810_call(relay.reshape(var_3346.astype('uint16'), [864, 2])), 0)
call_3347 = relay.TupleGetItem(func_2813_call(relay.reshape(var_3346.astype('uint16'), [864, 2])), 0)
const_3383 = relay.const([[-5.679266,5.621626,7.165587,-1.923659,-3.864569,3.161292,0.993925,0.096159,-0.015230,8.547752,9.348887,1.736994,9.739584,4.667416,9.439033,-4.328915,-9.603847,-6.035718,-8.062924,-3.842807,3.434261,4.576128,-8.755753,-8.140831,-3.928689,9.028898,-1.525331,4.719526,2.831455,0.375817,-0.583868,4.289925,9.889069,-5.016268,-7.124941,-6.141621,1.333314,-2.626322,-8.090848,-1.298857,9.453900,-2.810207,-1.368215,1.229519,-3.261881,-9.706365,6.494500,-2.966750,9.839607,-7.256152,3.527237,4.694148,-7.793070,3.162181,4.617229,7.931197,6.843422,-1.632190,-3.514753,-7.261731,2.368592,6.283282,-6.786365,9.792519,-7.000918,3.966012,1.896795,-1.965481,-1.399670,-1.639179,8.348083,-1.986774,-8.215742,-3.457709,6.860713,3.158615,7.340427,9.695209,-9.945716,-9.645424,-6.301912,5.431881,-6.864943,-6.342248,4.768427,-0.013380,-9.806423,5.551323,-2.219219,1.830886,-3.360789,-3.272164,3.887830,5.101449,-5.142846,0.039611,6.981081,-0.227986,-0.709133,6.181024,-8.521050,8.372582,-6.636757,4.459382,-3.029341,-3.499146,7.130506,2.152604,-7.427806,2.844701,-6.485200,-4.714379,2.941382,7.290154,6.495074,8.840273,7.055701,-8.214558,1.542032,-2.085253,4.976469,6.932458,0.676327,4.691330,3.644932,-1.011074,3.137482,-7.032501,-7.991175,8.932524,-7.920659,6.314149,7.954860,6.005302,1.421653,-2.887546,8.788626,1.916143,-4.105997,-2.832483,4.843897,0.334424,6.477993,9.322926],[-9.152608,8.169008,2.381273,-6.787684,1.976807,-5.271869,3.830666,8.023094,-7.479388,3.962947,9.406462,-2.171846,-7.955975,-1.353837,1.366214,8.755870,-4.990484,-0.880535,3.998898,-4.741254,8.871061,8.968079,9.792842,7.201641,-0.253426,3.258741,-4.516832,-8.657710,1.878718,1.804012,0.273445,-1.964542,2.526865,0.230873,2.232058,7.425537,-4.646594,4.672393,1.740596,1.401951,7.248454,-6.083948,3.827992,2.701825,2.059355,1.953927,7.800751,-2.242674,4.885289,-5.504540,1.146461,8.715473,-8.347112,1.838024,7.447352,7.687590,9.721689,-9.726510,2.241401,-7.183441,-2.689182,8.675091,7.200204,0.260447,5.624969,-0.150231,0.007364,2.253497,-6.702025,-3.006390,7.342706,2.914514,3.112377,9.309427,3.350412,8.517257,-1.602514,5.243237,-9.192893,-1.547396,-5.249828,-8.612056,-6.440964,-8.485470,-3.835403,-5.458415,-4.543519,1.992443,5.731398,-8.441347,-2.511521,0.612772,-4.289048,-0.733611,4.870661,3.308848,5.073663,5.205564,0.360968,5.876002,-6.500666,9.862444,4.850838,-4.604484,-4.214061,2.148179,-3.505098,9.517155,5.682242,9.813619,-4.959420,3.038007,-8.003872,3.400839,-9.072847,-1.678948,-6.960872,4.294410,-8.692764,-8.686759,0.159206,4.121959,-6.284959,-9.521761,-2.967300,-2.711963,-0.206099,2.612035,5.999380,-5.016425,8.870030,-4.360421,8.412082,6.928003,-7.396672,-4.658614,9.886070,3.771588,-0.180809,8.518014,-2.040409,9.763477,6.646685,8.114512],[2.383821,-8.797793,-6.348167,-4.942046,7.796348,8.711872,5.286654,8.698247,0.815744,8.750248,-1.297009,4.102151,-6.949892,-9.966797,1.576297,-4.615393,8.534492,2.400834,-7.352824,9.286780,3.362791,2.123562,-0.916919,5.695803,2.662263,9.898447,0.575285,-1.439552,9.366745,-8.003564,9.110907,7.546855,8.431260,-1.237953,-9.154799,3.026095,9.154190,0.230916,6.823063,5.959637,3.178513,2.749183,2.122622,-7.083944,-7.047307,8.198493,-4.587892,-8.288407,2.560687,8.316910,0.268131,9.757572,9.073957,-1.203140,7.094573,2.347449,1.847178,-1.819734,1.820681,8.410050,5.596542,9.717208,-4.192341,4.932470,-5.650882,1.201038,-7.662015,-9.021938,8.670356,-1.184072,5.631744,8.259641,-5.483542,4.295545,7.441318,8.872482,-3.273286,-4.060829,2.720329,-0.447570,-2.101693,4.586064,9.359895,-0.793067,-6.351024,5.671962,-4.610858,-0.588200,-6.033935,-6.777732,5.010027,-8.167523,-1.181468,-0.848104,7.075386,-9.182178,-7.458628,-4.129481,3.362903,6.825715,1.045650,2.319644,9.703831,5.271912,-6.994716,0.895102,3.719593,7.083915,-5.572386,1.544866,-2.521922,9.803059,7.171778,-4.161752,-0.301160,4.903041,4.172905,-0.721515,-0.300446,-2.097385,3.065418,-9.141347,-2.816531,2.645864,7.221739,-9.133338,-3.133960,3.745609,4.265018,-6.978118,6.145610,9.302005,5.255367,0.552045,7.274530,-4.388351,-0.186920,-7.700217,-0.064243,1.382709,-7.014767,7.048246,-4.663114,4.342436],[8.313302,2.947905,0.522502,9.028491,-6.650144,-5.531097,-3.127160,2.675258,-6.141124,5.111682,2.638382,-9.515367,-2.853180,-1.022844,-9.199503,-4.094736,6.067138,-8.923178,4.707967,0.697445,0.864110,3.936901,-9.080721,-4.721558,-7.898262,3.238796,-4.514706,-1.091866,-1.770763,5.752290,-1.887942,-3.112191,-7.630597,-8.846058,-7.572990,3.013225,1.133983,8.048901,0.601229,-4.770548,-2.378892,6.721226,-7.994407,8.614239,-0.247399,7.033192,8.193602,8.823791,6.792185,3.443241,4.517471,3.273555,2.215035,1.154460,-8.727636,2.916226,0.706256,1.787173,-3.651683,-3.224351,-6.794796,2.908779,9.171563,6.090012,-1.037238,-6.826896,2.125757,-8.060566,4.855133,-1.580294,-6.903882,-3.446365,-7.576837,1.505293,-8.380822,-5.493253,2.977982,-8.188494,-6.061985,1.715746,-3.181656,-0.828156,0.722860,3.960633,-3.537586,-0.330765,1.641908,9.906513,6.595704,-8.440782,-1.773125,-2.579726,-0.164957,6.496816,-7.112069,7.988062,-2.598572,-0.159576,-9.214701,-3.847138,7.477857,7.548663,5.714734,9.099062,6.411911,7.133144,-3.487770,-4.397242,-7.395743,3.339196,-2.921029,-0.946464,-8.091517,5.713269,-8.482645,-7.501011,-5.509348,-9.500590,-3.959850,-1.320235,0.965550,9.953658,1.028199,-2.401972,7.449071,-0.009823,-0.051839,5.482775,-9.035968,3.190687,-8.688402,-5.616043,-6.378726,6.620253,-1.517127,-1.165364,1.406911,5.553257,2.402663,-4.670197,1.664035,3.521552,5.969705,3.120191],[1.472634,-3.044982,-1.348756,-8.157329,4.415742,9.962775,-3.229916,2.117152,2.970553,-9.737594,-9.506334,-7.307271,-1.036851,8.272413,-0.262718,2.810014,-9.290457,8.114419,-9.261152,4.565644,4.759197,-9.771771,-4.904758,0.499157,-2.911387,5.253281,1.623419,7.050371,6.926440,5.680378,0.136718,9.385140,4.022875,-9.701395,-1.731838,8.582528,-9.768937,6.397486,-3.273033,-2.410760,4.532516,2.011566,2.374885,-2.688745,-6.626710,-7.343923,-2.534779,2.875073,5.866590,5.353273,7.048243,5.032911,-5.912290,-4.234977,-0.278504,-3.789395,-1.389805,-6.960242,-0.795325,-8.147461,-6.105536,-4.986381,-0.336130,-1.848833,9.036442,-7.146166,3.040795,-9.782397,-0.021034,-7.503789,8.629130,-9.092102,-1.605822,-1.622329,8.164010,6.063213,2.848259,-9.529361,6.425589,9.646603,5.975227,8.632483,-8.436219,-7.851072,8.433447,3.421215,1.515074,-4.511598,-8.129562,-7.269264,-2.398683,5.903095,2.500861,9.237158,7.651941,0.551975,-4.307646,5.608317,-1.868649,-8.215063,-7.306264,9.576574,3.972648,7.498243,-0.581832,-7.689641,-4.886096,-8.903735,4.660254,-2.876830,2.561348,7.651504,5.929490,-0.320366,1.798635,9.788519,-6.282152,1.298956,-1.471051,9.727650,1.867309,7.616248,3.863005,2.796015,-3.778612,5.638768,-0.666800,7.455626,7.458488,6.575712,-1.730111,-3.014753,3.988901,7.817223,7.467102,-2.661120,-3.621913,-3.978564,-5.309493,-7.367333,1.801678,-5.259382,1.878470,9.575635],[0.970889,5.252091,1.092137,-7.132700,9.560068,7.746741,-6.402003,8.960503,8.177280,-7.062275,-5.842553,-2.195750,3.990045,7.882437,3.212722,5.985052,4.200790,-0.897268,4.119871,-6.912729,-5.316559,1.242624,0.014033,4.494749,-3.853950,-9.413941,3.998389,-6.015747,5.958822,3.008700,0.078278,2.019983,1.219628,0.734085,-1.010391,0.610027,4.925931,2.911196,-7.491503,-9.329808,0.110641,9.152151,5.727967,5.664069,2.099907,8.513597,1.625143,2.388021,0.556460,0.743731,-7.991466,-4.171440,2.135359,1.887822,7.080158,-4.420641,-9.262598,7.721484,-7.978325,5.934579,9.222246,-1.918092,5.534177,3.913304,-3.782494,2.526246,9.491386,0.226661,9.265412,-8.372823,-9.264799,7.865280,-1.273419,-6.608337,4.813934,-7.954752,7.800730,-4.814492,1.682391,1.472241,-5.270218,-4.955014,-4.647217,3.037838,-2.817718,-7.473457,-1.132292,-0.728827,-2.809444,9.380079,-1.399105,-6.489057,-9.450491,-7.264953,-4.853651,-1.592341,-7.084831,0.946231,-9.508341,3.128949,-1.429854,8.260032,7.286316,-9.782624,-1.156688,-7.007920,0.758844,-8.936573,7.932925,0.904847,-9.293914,-8.578854,5.823810,-5.282801,-6.907838,-4.468965,0.299412,-3.181037,1.736378,3.996471,-7.006961,-7.881850,-6.368650,-0.807421,-5.910488,-6.530958,8.568922,9.593641,-9.767270,-3.265102,8.036703,0.269688,-1.809457,-4.801084,-3.213688,8.939308,0.530450,0.387600,8.892644,4.410564,7.743675,-5.708945,-8.937868,8.950735]], dtype = "float32")#candidate|3383|(6, 144)|const|float32
bop_3384 = relay.equal(call_3343.astype('bool'), relay.reshape(const_3383.astype('bool'), relay.shape_of(call_3343))) # shape=(6, 144)
bop_3387 = relay.equal(call_3344.astype('bool'), relay.reshape(const_3383.astype('bool'), relay.shape_of(call_3344))) # shape=(6, 144)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_3395 = relay.TupleGetItem(func_934_call(), 0)
call_3396 = relay.TupleGetItem(func_936_call(), 0)
func_82_call = mod.get_global_var('func_82')
func_86_call = mutated_mod.get_global_var('func_86')
const_3400 = relay.const([-2.804281,-7.195099,-9.160589,3.821904,-5.641435,7.087284,-7.952728,4.418915,6.410400,9.098641,8.477239,-3.976962,-0.528645,-3.223015,-3.236453,-3.000350,-5.043376,9.963923,0.199984,-1.302715,2.016448,-8.293059,7.034696,-6.662405,-2.859946,-5.856367,0.984592,-7.338334,-2.151011,-1.195793,-4.064692,-6.678985,3.783772,9.638639,-7.158676,-0.706606,4.533136,-1.875968,3.449404,9.879160,-6.086871,2.888066,4.192639,9.150306,-9.105908,-8.057284,-5.326637,-9.575071,7.316137,-6.504241,4.572332,5.417930,-3.937021,-9.217410,-4.657196,3.978942,5.315686,-9.957152,-8.323663,-1.164338,0.256807,3.249322,7.693724,2.647778,4.740947,3.559140,6.641283,0.978636,-5.567454,1.063466,-9.150757,3.752571,5.565886,-7.129491,9.972288,-5.469754,2.021431,2.132021,5.730988,7.648709,-9.146775,-6.289467,0.596845,6.862809,5.243407,-7.132487,-3.748364,4.169386,-5.627426,7.686990,-2.157595,-7.276709,-4.529934,1.107937,2.159010,-4.038270,6.419017,0.177058,1.375580,-1.401163,6.354337,-8.964751,-7.201345,4.293920,0.163314,-2.533299,-4.788215,7.829362,-7.909030,3.463899,-0.521844,-1.396478,-6.415602,-0.808621,-1.285294,-4.041408,-4.124906,6.825713,-9.014061,7.787781,-1.419638,4.696827,-5.086300,3.528001,9.103856,-7.286963,-1.100765,1.506696,-4.978454,-8.285357,-4.721717,-0.460472,3.554833,1.922522,-8.793355,7.988549,4.948306,-8.328726,-0.989049,-7.225974,-2.385130,2.574528,9.958651,3.545940], dtype = "float32")#candidate|3400|(144,)|const|float32
call_3399 = func_82_call(relay.reshape(const_3400.astype('float32'), [2, 12, 6]), relay.reshape(const_3400.astype('float32'), [2, 12, 6]), )
call_3401 = func_82_call(relay.reshape(const_3400.astype('float32'), [2, 12, 6]), relay.reshape(const_3400.astype('float32'), [2, 12, 6]), )
bop_3412 = relay.bitwise_xor(call_3343.astype('uint8'), relay.reshape(const_3383.astype('uint8'), relay.shape_of(call_3343))) # shape=(6, 144)
bop_3415 = relay.bitwise_xor(call_3344.astype('uint8'), relay.reshape(const_3383.astype('uint8'), relay.shape_of(call_3344))) # shape=(6, 144)
func_1356_call = mod.get_global_var('func_1356')
func_1358_call = mutated_mod.get_global_var('func_1358')
call_3417 = func_1356_call()
call_3418 = func_1356_call()
uop_3419 = relay.sinh(const_3383.astype('float64')) # shape=(6, 144)
func_904_call = mod.get_global_var('func_904')
func_906_call = mutated_mod.get_global_var('func_906')
const_3422 = relay.const([True,False,False,True,False,True,True,False,False,False], dtype = "bool")#candidate|3422|(10,)|const|bool
call_3421 = relay.TupleGetItem(func_904_call(relay.reshape(const_3422.astype('bool'), [10,])), 6)
call_3423 = relay.TupleGetItem(func_906_call(relay.reshape(const_3422.astype('bool'), [10,])), 6)
var_3428 = relay.var("var_3428", dtype = "float32", shape = (4, 9, 8))#candidate|3428|(4, 9, 8)|var|float32
bop_3429 = relay.less(call_3417.astype('bool'), relay.reshape(var_3428.astype('bool'), relay.shape_of(call_3417))) # shape=(4, 9, 8)
bop_3432 = relay.less(call_3418.astype('bool'), relay.reshape(var_3428.astype('bool'), relay.shape_of(call_3418))) # shape=(4, 9, 8)
uop_3437 = relay.sigmoid(uop_3419.astype('float64')) # shape=(6, 144)
uop_3441 = relay.atan(uop_3419.astype('float64')) # shape=(6, 144)
output = relay.Tuple([call_3345,var_3346,bop_3384,call_3395,call_3399,const_3400,bop_3412,call_3421,const_3422,bop_3429,uop_3437,uop_3441,])
output2 = relay.Tuple([call_3347,var_3346,bop_3387,call_3396,call_3401,const_3400,bop_3415,call_3423,const_3422,bop_3432,uop_3437,uop_3441,])
func_3448 = relay.Function([var_3346,var_3428,], output)
mod['func_3448'] = func_3448
mod = relay.transform.InferType()(mod)
mutated_mod['func_3448'] = func_3448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3448_call = mutated_mod.get_global_var('func_3448')
var_3450 = relay.var("var_3450", dtype = "uint16", shape = (1728,))#candidate|3450|(1728,)|var|uint16
var_3451 = relay.var("var_3451", dtype = "float32", shape = (4, 9, 8))#candidate|3451|(4, 9, 8)|var|float32
call_3449 = func_3448_call(var_3450,var_3451,)
output = call_3449
func_3452 = relay.Function([var_3450,var_3451,], output)
mutated_mod['func_3452'] = func_3452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_677_call = mod.get_global_var('func_677')
func_679_call = mutated_mod.get_global_var('func_679')
call_3454 = func_677_call()
call_3455 = func_677_call()
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
const_3491 = relay.const([-2,-5,-9,5,-1,-8,10,-2,-7,-6,-2,-6,-7,-4,3,6,-6,-6,-7,7,-1,-7,-9,3,9,-10,4,-1,2,7,-1,-3,-4,-10,-9,1,1,2,8,-7,-5,-10,-5,-1,-8,-4,-1,-4,3,8,-2,-1,6,5,1,10,1,4,-5,-6,-5,-2,7,-3,-1,-4,9,-7,1,10,-4,-7,-4,-2,7,-10,8,3,7,8,7,2,-7,5,-1,-9,7,1,-6,10,2,-10,-3,8,8,-9,-7,-3,2,-10,2,9,5,1,-4,7,-1,8,9,-4,-1,-2,-6,3,-4,8,-2,5,6,1,9,7,6,-3,-3,-1,-2,3,9,-3,-8,-9,9,-2,-2,-6,-2,10,-8,4,-2,6,-10,-9,4,2,-2,-4,4,5,-8,6,3,9,-1,-3,-10,4,-9,-10,4,6,-10,-6,-4,-10,-3,4,6,-7,8,9,-10,-9,7,-1,9,6,8,4,4,-6,-2,-3,6,5,-10,2,-9,-1,8,7,9,-7,-7,1,-6,-8,-9,-9,9,-7,-10,10,-9,8,-5,5,8,3,2,7,-2,8,-4,-6,-1,-3,-3,-2,6,-10,-3,-4,-6,6,-2,-7,6,6,2,-4,-5,6,1,-10,6,-7,2,1,10,-9,-10,7,-4,7,-4,-9,-7,-7,-10,7,-7,-6,8,9,5,-10,-4,1,7,4,-9,10,-7,-4,4,-5,-6,9,8,-1,8,10,-8,2,8,-7,-8,-3,-4,1,8,10,-7,-9,-9,-10,4,10,10,7,7,-5,3,-9,-4,-6,6,-8,6,-8,2,3,5,-7,-5,-2,-10,-7,-4,-9,-7,-1,-2,-4,10,3,-9,7,-10,-10,1,-7,-1,-6,-1,3,10,8,5,-10,5,5,2,9,-8,-8,3,4,2,-8,2,10,5,6,2,-3,1,-1,1,8,-9,2,4,7,-3,10,6,9,-7,-1,3,6,-3,-9,-6,-6,3,-10,-4,-4,2,2,3,-1,-10,-1,-6,9,5,4,6,8,-9,-10,-7,-10,8,9,5,6,-2,-10,-6,-8,8,-2,-5,8,1,7,-2,-7,8,4,7,1,-8,10,2,5,-3,8,9,1,2,10,-2,-6,4,-6,-1,2,9,-1,1,3,-3,1,-5,-6], dtype = "int8")#candidate|3491|(432,)|const|int8
call_3490 = relay.TupleGetItem(func_1505_call(relay.reshape(const_3491.astype('int8'), [432,])), 1)
call_3492 = relay.TupleGetItem(func_1507_call(relay.reshape(const_3491.astype('int8'), [432,])), 1)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_3498 = func_1253_call()
call_3499 = func_1253_call()
output = relay.Tuple([call_3454,call_3490,const_3491,call_3498,])
output2 = relay.Tuple([call_3455,call_3492,const_3491,call_3499,])
func_3516 = relay.Function([], output)
mod['func_3516'] = func_3516
mod = relay.transform.InferType()(mod)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3516_call = mutated_mod.get_global_var('func_3516')
call_3517 = func_3516_call()
output = call_3517
func_3518 = relay.Function([], output)
mutated_mod['func_3518'] = func_3518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1151_call = mod.get_global_var('func_1151')
func_1152_call = mutated_mod.get_global_var('func_1152')
call_3582 = relay.TupleGetItem(func_1151_call(), 0)
call_3583 = relay.TupleGetItem(func_1152_call(), 0)
const_3584 = relay.const([[[False,True,True,True,True,True,False,True,False],[True,False,False,True,True,True,False,False,True],[True,True,True,True,True,True,False,False,True],[False,True,True,True,True,False,False,False,True],[True,True,False,True,False,False,True,True,True],[False,True,True,False,True,False,True,False,True],[False,False,True,True,False,False,False,True,True],[False,True,False,False,False,True,False,True,True],[True,False,True,False,True,False,False,True,True],[False,False,True,False,True,True,True,False,False],[False,True,True,True,True,True,True,True,True],[False,False,True,False,True,True,True,True,False]],[[True,True,True,True,False,False,False,False,True],[False,True,True,False,True,False,True,True,False],[False,False,True,False,True,True,True,True,False],[False,False,False,True,True,True,False,False,True],[False,True,True,True,True,True,True,True,False],[True,False,True,True,True,False,True,True,True],[False,False,False,True,False,False,True,True,True],[False,False,False,False,False,True,True,False,False],[False,True,True,True,False,True,False,False,False],[False,True,True,True,True,True,True,False,False],[True,True,True,True,False,True,True,False,False],[False,True,False,False,False,True,True,True,True]],[[False,True,True,True,False,False,False,True,False],[False,True,False,False,False,False,True,True,False],[True,False,False,True,False,True,True,False,True],[False,True,False,True,False,False,True,True,False],[True,True,True,True,True,False,False,True,True],[False,True,False,False,False,True,False,True,True],[True,False,False,True,False,True,True,True,True],[True,False,False,True,False,False,True,True,True],[True,True,True,False,True,False,True,True,False],[False,True,True,True,True,True,True,False,True],[True,True,False,False,True,True,True,False,True],[True,True,False,False,True,False,True,True,True]],[[True,False,True,True,False,False,False,False,True],[True,True,True,False,False,True,True,True,False],[False,False,False,True,True,False,True,True,True],[True,True,False,True,False,True,False,False,True],[False,False,True,False,False,True,True,False,True],[False,True,False,False,True,False,True,False,True],[True,False,True,False,True,False,False,False,False],[True,False,False,True,True,True,False,True,True],[True,False,True,True,True,True,True,True,False],[False,False,True,True,True,True,False,True,False],[False,False,True,True,True,True,True,False,False],[False,True,True,True,False,False,True,True,True]],[[False,True,False,False,True,True,True,False,False],[False,True,False,True,True,False,False,False,True],[True,False,False,False,False,True,True,False,True],[True,True,True,False,True,False,True,True,True],[False,True,True,False,True,False,False,False,False],[False,False,False,False,False,False,False,False,True],[True,True,True,False,True,False,True,True,True],[True,False,False,False,False,True,False,True,True],[False,True,True,False,False,False,True,False,False],[True,False,False,False,True,True,True,True,False],[True,True,False,False,False,False,True,True,True],[False,True,False,True,True,True,True,False,True]],[[True,True,True,True,False,True,True,True,False],[False,False,False,True,False,True,True,False,True],[True,True,False,False,False,True,False,True,True],[False,False,True,True,True,False,True,False,False],[False,True,True,True,False,False,True,True,False],[False,False,False,True,True,False,False,False,False],[True,False,True,False,False,False,True,False,True],[True,True,False,False,True,True,True,False,True],[True,True,False,True,True,False,False,True,False],[False,True,False,False,False,False,True,True,True],[True,False,True,True,False,False,True,False,True],[False,True,False,False,True,True,False,False,True]],[[True,False,False,True,False,True,True,False,True],[True,False,False,False,True,True,True,False,True],[True,True,True,True,False,False,True,False,True],[False,False,False,True,True,False,True,False,True],[False,True,True,False,True,True,False,True,True],[True,True,True,False,False,True,True,True,True],[False,False,True,True,True,True,True,False,True],[False,False,True,True,False,True,False,False,False],[False,True,True,True,False,False,False,True,True],[True,False,False,False,False,True,True,False,False],[True,True,False,False,True,False,True,False,True],[False,True,True,False,True,False,False,False,True]],[[False,False,False,True,False,False,False,False,True],[True,False,True,True,True,False,True,True,False],[False,False,False,True,True,True,False,True,False],[True,True,False,False,False,True,False,True,True],[False,True,True,True,False,True,False,True,False],[True,True,True,True,True,False,True,False,True],[True,False,False,True,True,False,False,True,False],[True,True,True,False,False,True,True,True,True],[True,False,True,True,True,False,True,False,True],[True,True,True,False,False,True,False,False,True],[False,False,False,False,True,False,False,True,False],[True,False,True,False,True,True,True,True,False]]], dtype = "bool")#candidate|3584|(8, 12, 9)|const|bool
bop_3585 = relay.greater_equal(call_3582.astype('bool'), relay.reshape(const_3584.astype('bool'), relay.shape_of(call_3582))) # shape=(8, 12, 9)
bop_3588 = relay.greater_equal(call_3583.astype('bool'), relay.reshape(const_3584.astype('bool'), relay.shape_of(call_3583))) # shape=(8, 12, 9)
uop_3599 = relay.sin(const_3584.astype('float32')) # shape=(8, 12, 9)
output = relay.Tuple([bop_3585,uop_3599,])
output2 = relay.Tuple([bop_3588,uop_3599,])
func_3602 = relay.Function([], output)
mod['func_3602'] = func_3602
mod = relay.transform.InferType()(mod)
output = func_3602()
func_3603 = relay.Function([], output)
mutated_mod['func_3603'] = func_3603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_3630 = func_1253_call()
call_3631 = func_1253_call()
output = call_3630
output2 = call_3631
func_3632 = relay.Function([], output)
mod['func_3632'] = func_3632
mod = relay.transform.InferType()(mod)
output = func_3632()
func_3633 = relay.Function([], output)
mutated_mod['func_3633'] = func_3633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_3636 = relay.TupleGetItem(func_934_call(), 2)
call_3637 = relay.TupleGetItem(func_936_call(), 2)
output = relay.Tuple([call_3636,])
output2 = relay.Tuple([call_3637,])
func_3647 = relay.Function([], output)
mod['func_3647'] = func_3647
mod = relay.transform.InferType()(mod)
output = func_3647()
func_3648 = relay.Function([], output)
mutated_mod['func_3648'] = func_3648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1151_call = mod.get_global_var('func_1151')
func_1152_call = mutated_mod.get_global_var('func_1152')
call_3667 = relay.TupleGetItem(func_1151_call(), 4)
call_3668 = relay.TupleGetItem(func_1152_call(), 4)
func_513_call = mod.get_global_var('func_513')
func_517_call = mutated_mod.get_global_var('func_517')
var_3676 = relay.var("var_3676", dtype = "uint32", shape = (300,))#candidate|3676|(300,)|var|uint32
var_3677 = relay.var("var_3677", dtype = "float32", shape = (648,))#candidate|3677|(648,)|var|float32
call_3675 = relay.TupleGetItem(func_513_call(relay.reshape(var_3676.astype('uint32'), [15, 4, 5]), relay.reshape(var_3677.astype('float32'), [648,]), relay.reshape(var_3677.astype('float32'), [648,]), ), 3)
call_3678 = relay.TupleGetItem(func_517_call(relay.reshape(var_3676.astype('uint32'), [15, 4, 5]), relay.reshape(var_3677.astype('float32'), [648,]), relay.reshape(var_3677.astype('float32'), [648,]), ), 3)
output = relay.Tuple([call_3667,call_3675,var_3676,var_3677,])
output2 = relay.Tuple([call_3668,call_3678,var_3676,var_3677,])
func_3686 = relay.Function([var_3676,var_3677,], output)
mod['func_3686'] = func_3686
mod = relay.transform.InferType()(mod)
var_3687 = relay.var("var_3687", dtype = "uint32", shape = (300,))#candidate|3687|(300,)|var|uint32
var_3688 = relay.var("var_3688", dtype = "float32", shape = (648,))#candidate|3688|(648,)|var|float32
output = func_3686(var_3687,var_3688,)
func_3689 = relay.Function([var_3687,var_3688,], output)
mutated_mod['func_3689'] = func_3689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1818_call = mod.get_global_var('func_1818')
func_1820_call = mutated_mod.get_global_var('func_1820')
call_3764 = relay.TupleGetItem(func_1818_call(), 2)
call_3765 = relay.TupleGetItem(func_1820_call(), 2)
func_2056_call = mod.get_global_var('func_2056')
func_2058_call = mutated_mod.get_global_var('func_2058')
call_3774 = func_2056_call()
call_3775 = func_2056_call()
func_904_call = mod.get_global_var('func_904')
func_906_call = mutated_mod.get_global_var('func_906')
var_3812 = relay.var("var_3812", dtype = "bool", shape = (10,))#candidate|3812|(10,)|var|bool
call_3811 = relay.TupleGetItem(func_904_call(relay.reshape(var_3812.astype('bool'), [10,])), 3)
call_3813 = relay.TupleGetItem(func_906_call(relay.reshape(var_3812.astype('bool'), [10,])), 3)
output = relay.Tuple([call_3764,call_3774,call_3811,var_3812,])
output2 = relay.Tuple([call_3765,call_3775,call_3813,var_3812,])
func_3818 = relay.Function([var_3812,], output)
mod['func_3818'] = func_3818
mod = relay.transform.InferType()(mod)
mutated_mod['func_3818'] = func_3818
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3819 = relay.var("var_3819", dtype = "bool", shape = (10,))#candidate|3819|(10,)|var|bool
func_3818_call = mutated_mod.get_global_var('func_3818')
call_3820 = func_3818_call(var_3819)
output = call_3820
func_3821 = relay.Function([var_3819], output)
mutated_mod['func_3821'] = func_3821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1231_call = mod.get_global_var('func_1231')
func_1232_call = mutated_mod.get_global_var('func_1232')
call_3829 = relay.TupleGetItem(func_1231_call(), 0)
call_3830 = relay.TupleGetItem(func_1232_call(), 0)
output = call_3829
output2 = call_3830
func_3835 = relay.Function([], output)
mod['func_3835'] = func_3835
mod = relay.transform.InferType()(mod)
mutated_mod['func_3835'] = func_3835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3835_call = mutated_mod.get_global_var('func_3835')
call_3836 = func_3835_call()
output = call_3836
func_3837 = relay.Function([], output)
mutated_mod['func_3837'] = func_3837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2056_call = mod.get_global_var('func_2056')
func_2058_call = mutated_mod.get_global_var('func_2058')
call_3858 = func_2056_call()
call_3859 = func_2056_call()
func_1413_call = mod.get_global_var('func_1413')
func_1415_call = mutated_mod.get_global_var('func_1415')
call_3873 = relay.TupleGetItem(func_1413_call(relay.reshape(call_3858.astype('float64'), [6, 144])), 0)
call_3874 = relay.TupleGetItem(func_1415_call(relay.reshape(call_3858.astype('float64'), [6, 144])), 0)
func_1970_call = mod.get_global_var('func_1970')
func_1974_call = mutated_mod.get_global_var('func_1974')
var_3879 = relay.var("var_3879", dtype = "float32", shape = (56,))#candidate|3879|(56,)|var|float32
call_3878 = relay.TupleGetItem(func_1970_call(relay.reshape(var_3879.astype('float32'), [2, 14, 2]), relay.reshape(var_3879.astype('float32'), [2, 14, 2]), ), 1)
call_3880 = relay.TupleGetItem(func_1974_call(relay.reshape(var_3879.astype('float32'), [2, 14, 2]), relay.reshape(var_3879.astype('float32'), [2, 14, 2]), ), 1)
uop_3882 = relay.sin(call_3873.astype('float64')) # shape=(6, 144)
uop_3884 = relay.sin(call_3874.astype('float64')) # shape=(6, 144)
func_2810_call = mod.get_global_var('func_2810')
func_2813_call = mutated_mod.get_global_var('func_2813')
const_3887 = relay.const([5,-1,6,5,6,-1,-7,-9,-4,4,3,-9,5,-8,8,-8,3,-7,3,-7,7,2,-3,-7,-1,6,-6,-3,-10,3,-10,-3,2,-4,-2,-4,10,-3,4,9,10,3,10,-8,-9,-10,-1,4,1,-8,8,1,7,1,1,-1,5,6,10,-6,4,7,-7,1,-8,2,-3,4,-7,3,4,1,-8,5,-3,-8,-4,-4,-8,2,8,-2,7,2,4,3,1,-7,1,10,2,-2,-3,-9,3,-6,7,3,7,-9,-5,9,6,-7,-8,2,-3,6,1,6,9,7,2,-10,-7,8,-1,8,-2,4,-3,8,1,3,-1,7,3,-6,6,-1,-4,7,-7,3,-1,7,-3,2,-1,5,-4,-2,6,1,5,-7,3,4,-8,-9,-6,-2,3,5,9,-6,2,-1,5,2,-5,8,-10,8,-3,-6,-3,-10,-4,-8,6,-5,3,9,-7,-9,8,10,2,-8,7,6,6,-6,-2,1,-10,6,-4,1,-6,4,10,3,-4,-8,9,-10,-1,-5,-3,-1,-3,-6,4,8,8,3,8,1,-9,4,3,2,10,-9,4,-6,8,5,9,-1,7,-6,-2,-8,6,-10,6,4,-9,-1,-2,-1,-8,4,4,-6,-9,-8,9,-1,-8,3,3,1,10,-7,8,-5,-6,4,2,1,-2,2,4,4,4,-5,-7,-1,6,-9,7,1,-1,-5,4,-6,-4,-8,6,10,1,7,10,3,7,2,-6,-7,-7,1,8,-8,8,3,-7,-3,8,6,-9,8,3,-10,-3,5,9,3,-3,-2,-6,4,7,4,9,-5,-9,6,3,10,-3,7,-8,9,-1,2,-5,-5,-6,-8,-8,-5,4,-10,9,4,-2,-4,-1,-4,4,-4,-4,9,-7,-7,8,4,7,-2,4,6,4,10,3,-10,10,3,-2,-4,-1,-3,-6,2,3,-8,9,4,-4,-1,-8,3,6,2,10,6,-8,10,-10,-5,-8,9,-7,-1,9,7,4,3,-7,7,-10,1,-3,-2,-7,3,10,-3,7,9,7,-3,-7,10,-3,3,7,3,-9,3,4,1,2,-2,-9,6,8,-8,8,-10,2,-6,9,3,6,4,-3,-7,-9,3,1,-8,1,-3,4,1,7,9,1,-6,7,9,2,-5,5,3,-9,5,6,8,1,8,-9,6,8,-6,-9,-6,-1,6,-9,1,9,-8,4,-5,-7,3,-1,-5,10,-3,-8,-3,-10,-6,7,8,5,-3,4,-4,-2,-9,7,-1,7,7,4,6,-9,4,-2,-4,-2,6,6,9,8,-4,-1,-1,10,6,5,8,6,10,8,-7,-2,6,-4,9,-2,6,-7,-6,4,-10,7,5,-2,3,10,10,-4,3,3,9,-6,-3,-3,-1,-2,-8,-1,-4,9,-4,-9,4,-3,9,-10,5,7,-2,-6,9,-3,9,-1,6,-2,10,7,3,10,7,-2,9,-8,-10,-3,-6,-8,-10,-10,9,-7,1,3,-3,8,7,10,-1,-7,5,-10,6,-8,6,-3,9,-6,-3,6,5,5,6,-10,-4,-8,8,-1,-7,-1,8,10,3,10,6,-3,2,3,-3,-4,9,-9,-1,1,1,1,-7,7,-6,7,2,10,-10,-1,5,2,-7,-1,3,-4,-8,-4,-5,-5,7,-2,-4,3,5,-6,9,-4,-9,5,-9,-6,6,-1,2,-2,8,8,-6,5,-4,10,7,8,-1,9,1,-6,-7,8,3,-8,3,2,-6,-9,-5,2,6,-1,-4,-6,8,-4,1,4,-3,4,6,-5,2,-3,-6,-1,8,9,2,8,7,5,-5,1,-1,6,-10,10,-7,-9,9,-5,-1,8,10,-3,10,-7,9,3,-3,-7,-9,3,1,1,9,8,10,3,-4,7,6,-8,-9,5,1,-5,1,8,-9,4,5,-9,-8,3,1,-5,-3,2,-4,-6,-8,-7,10,-1,-4,-8,-6,2,-1,7,8,-9,-3,-4,1,-3,-2,8,-6,10,5,-7,-5,7,7,-6,-4,-5,-9,5,1,-8,8,3,-6,-2,-1,2,-9,9,-10,10,-3,2,-3,1,5,-5,7,5,-2,-4,7,8,4,-3,-2,10,-5,9,-9,2,-2,-7,8,4,-10,-3,-4,-4,-8,-3,-7,8,-3,-1,-7,-8,-9,-10,6,7,2,-2,2,-5,10,-3,-10,10,5,-8,4,3,-1,-2,-7,-5,-10,-7,3,-5,1,4,8,-7,-5,7,-2,-3,-3,10,-6,9,1,10,-8,-9,-4,10,-6,7,3,3,4,6,2,7,2,4,4,7,3,-2,-2,-9,1,-2,-9,10,10,1,4,10,8,9,-9,5,-6,-1,3,-7,-5,9,-3,-9,6,2,10,8,-5,-1,7,8,-4,4,-10,-2,-1,1,3,-6,2,1,-2,-1,9,-3,7,-2,2,-10,8,-7,6,-2,10,8,-5,-3,9,4,-3,4,10,-2,-1,-5,6,-5,-2,9,-2,1,5,4,5,2,7,-9,-10,-9,5,10,-6,4,-2,7,2,-3,1,3,-7,5,10,1,8,3,-2,7,-9,-5,5,-7,1,6,-1,-9,5,-2,-9,-7,3,-10,-4,-2,-7,-4,-10,-1,-2,4,-7,2,4,-9,9,9,7,-6,6,5,-6,8,-1,10,8,-7,-4,9,4,-2,-5,4,2,-4,-9,-6,10,-4,2,2,-5,-5,9,8,3,8,-1,-9,-4,5,-3,-10,-2,-2,8,6,-7,4,-4,-1,2,-4,-2,8,-7,-1,2,3,-6,10,-3,9,7,5,-4,10,-6,1,-9,-5,-1,-9,10,9,-9,1,-5,-9,4,8,10,3,4,3,-2,10,-7,-8,-10,-2,-6,-8,-3,-7,-3,-4,3,-9,3,8,2,-1,-6,-5,-6,5,10,-6,2,-2,8,-8,-5,-8,10,-6,-6,3,-7,-10,5,-8,-7,-10,10,4,7,-1,-8,1,-6,2,5,6,2,-9,-9,2,1,-7,-3,1,2,2,-2,9,1,2,7,-2,-5,-7,-7,-2,-2,-1,9,-5,-7,-2,2,-9,-3,3,-10,-8,-3,9,4,8,2,3,3,-4,-6,9,8,-3,10,10,10,-5,4,4,-7,6,-4,-3,-8,7,-1,-4,-6,-9,-2,6,-8,-6,7,2,2,3,8,3,3,10,8,-5,2,1,-5,-5,-8,-7,10,-8,9,8,-7,3,-1,-6,-8,5,2,-3,3,-2,-8,-5,-8,1,-6,5,8,-5,-3,-1,-9,1,2,-10,2,7,1,-8,-7,-6,-8,6,1,8,-2,4,-5,7,-9,-4,9,2,-5,10,-1,-5,-1,6,4,-5,3,2,-6,-7,5,7,5,5,10,-4,-6,-10,9,9,8,-4,5,8,4,-10,9,5,5,-5,-7,-5,-5,-10,-1,-2,2,1,-1,-3,-6,-5,8,-10,10,-9,-4,10,9,6,8,8,-5,1,10,2,-7,-1,-7,-2,-6,-3,-3,-10,2,2,-5,4,-1,-7,-9,5,7,4,8,-10,5,5,-4,-2,-10,-8,7,6,-7,9,3,5,-3,-6,5,3,7,1,2,10,10,-8,2,-6,-6,-6,-2,-3,-1,4,-2,7,-7,-3,-4,1,-2,4,3,-2,9,-10,-10,4,1,-9,-6,-4,-7,-2,-9,8,1,5,3,3,-9,3,-7,3,4,10,-10,-1,-9,-9,-5,10,-2,2,-6,7,9,5,6,1,-9,10,-3,-8,5,3,-6,-7,-9,6,-3,1,5,-7,5,1,-9,5,1,8,-3,-7,5,-9,-5,2,-8,-10,-10,-3,7,10,4,-1,9,2,-2,10,5,2,4,7,-8,2,6,-10,9,10,-5,10,-2,-5,3,10,7,-9,-7,-1,-3,-2,10,3,-3,-5,-6,2,9,-10,5,2,5,2,-8,-8,6,2,-1,-7,10,3,-7,3,6,-10,-5,-2,-6,4,-7,-6,2,1,3,-10,-10,-10,-1,4,-6,8,-1,-4,7,2,10,-7,6,-8,7,-3,-10,-3,5,8,-4,-5,-7,3,-6,-5,10,9,-1,-6,-4,5,-1,-6,-8,8,-9,8,-1,-9,5,-5,8,-3,-2,9,-8,-1,3,-7,-10,-4,9,6,-4,-9,8,3,10,9,3,-8,-2,-3,-6,7,-7,-8,4,6,-8,-6,9,-6,-3,8,1,-10,7,-8,-4,-1,-8,7,1,-2,8,-7,7,-5,6,-10,-3,2,4,3,6,8,10,-8,1,-10,-7,-8,-10,-7,-10,5,-7,-1,6,-8,-7,6,4,-6,1,-3,-5,-5,6,3,-8,7,-5,6,-4,4,3,-7,-2,-3,1,3,7,-2,9,6,4,-3,-4,10,3,9,4,4,-1,10,3,9,-3,-2,6,10,-3,-7,-1,-7,3,-10,-4,-4,3,8,-9,-5,-7,7,-9,3,9,3,9,4,-7,-6,3,7,-3,-10,-3,-7,6,-4,-10,-8,-7,10,-10,5,-3,10,2,-9,-2,9,8,6,9,-8,8,-9,7,-10,-6,-4,-9,-4,-2,6,-4,7,-1,5,-4,-9,8,-7,9,-2,4,7,-2,4,4,6,-3,9,8,3,6,4,2], dtype = "uint16")#candidate|3887|(1728,)|const|uint16
call_3886 = relay.TupleGetItem(func_2810_call(relay.reshape(const_3887.astype('uint16'), [864, 2])), 1)
call_3888 = relay.TupleGetItem(func_2813_call(relay.reshape(const_3887.astype('uint16'), [864, 2])), 1)
var_3893 = relay.var("var_3893", dtype = "bool", shape = (594,))#candidate|3893|(594,)|var|bool
bop_3894 = relay.bitwise_or(call_3878.astype('int16'), relay.reshape(var_3893.astype('int16'), relay.shape_of(call_3878))) # shape=(594,)
bop_3897 = relay.bitwise_or(call_3880.astype('int16'), relay.reshape(var_3893.astype('int16'), relay.shape_of(call_3880))) # shape=(594,)
output = relay.Tuple([call_3858,var_3879,uop_3882,call_3886,const_3887,bop_3894,])
output2 = relay.Tuple([call_3859,var_3879,uop_3884,call_3888,const_3887,bop_3897,])
func_3916 = relay.Function([var_3879,var_3893,], output)
mod['func_3916'] = func_3916
mod = relay.transform.InferType()(mod)
mutated_mod['func_3916'] = func_3916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3916_call = mutated_mod.get_global_var('func_3916')
var_3918 = relay.var("var_3918", dtype = "float32", shape = (56,))#candidate|3918|(56,)|var|float32
var_3919 = relay.var("var_3919", dtype = "bool", shape = (594,))#candidate|3919|(594,)|var|bool
call_3917 = func_3916_call(var_3918,var_3919,)
output = call_3917
func_3920 = relay.Function([var_3918,var_3919,], output)
mutated_mod['func_3920'] = func_3920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1231_call = mod.get_global_var('func_1231')
func_1232_call = mutated_mod.get_global_var('func_1232')
call_3922 = relay.TupleGetItem(func_1231_call(), 0)
call_3923 = relay.TupleGetItem(func_1232_call(), 0)
func_344_call = mod.get_global_var('func_344')
func_348_call = mutated_mod.get_global_var('func_348')
const_3953 = relay.const([2.220123,-4.334661,-0.550269,4.218698,-4.134612,-4.381484,-7.425502,-4.309186,0.491800,-8.882332,9.856160,9.206786,3.929135,0.441389,5.337918,0.939293,0.922238,4.314327,6.941605,0.581161,3.671401,3.759613,-8.494855,1.371781,-3.938140,8.225148,-7.235935,1.074991,1.391466,-4.370604,-8.300019,8.666778,6.460828,7.212297,3.595716,-3.674394,-8.096123,8.288052,1.924688,8.014402,-4.718892,6.702375,3.112190,-1.430101,5.954049,4.311650,-6.235299,9.351115,8.232820,5.770744,-7.536376,-4.918530,3.370504,2.175517,-7.649107,-5.646710,-4.043743,2.624767,9.607478,-1.452172,8.610023,-2.782741,-9.874512,4.760283,-7.566878,-9.548175,7.520773,9.440986,-8.182258,4.024459,5.140869,3.648359,-3.061564,-3.784760,-9.941815,-5.073100,-7.277447,-5.052973,5.542775,7.643923,-7.659870,-7.499959,-3.275142,-5.388335,-7.679475,1.540791,0.556509,1.496106,-8.556012,8.887543,-5.469525,-8.113769,-0.386870,6.520820,-3.615556,1.127888,4.083871,-5.716307,-3.515287,-6.037593,4.457130,-2.470747,9.355719,-0.091907,0.345557,-0.009750,9.881921,2.164938,1.158908,4.736603,8.633405,-2.736356,-6.118012,-6.853499,9.015275,-9.002719,-0.058429,-0.875069,-0.633905,3.895079,-3.623663,-0.697076,-1.352913,-7.730207,-0.301847,-1.158581,-6.477008,-0.981416,1.274698,2.938167,-0.787259,5.592195,8.722639,-5.241110,-2.924080,0.260476,3.276288,5.642476,7.028899,-7.330683,4.020352,4.514631,7.786357,8.230477,-3.031606,-6.946519,-4.052296,-4.717163,5.547470,1.898247,-6.054548,-7.979081,-8.665132,-4.823144,0.364822,-4.920556,8.221839,1.613911,2.458338,6.267898,5.046624,-6.588751,-8.213868,7.065868,3.122450,8.327679,-6.638330,-9.521500,8.264228,-5.055715,9.590291,-6.325121,3.165921,8.851009,-0.761328,-8.923514,-3.381925,1.096320,4.718126,-3.980454,1.826086,7.956420,-1.070584,4.046936,-2.656875,-4.315387,-3.936836,-1.193345,-3.535779,-4.163978,-4.375291,5.312177,-7.264805,9.967311,1.748359,-0.025633,-3.805517,-3.851212,9.461430,-5.461887,-6.970865,5.218038,8.762791,-3.852382,-8.398593,-5.843040,5.667381,4.082576,-1.664626,-0.472872,9.265408,2.785568,-7.245554,-1.648907,0.205877,1.184921], dtype = "float64")#candidate|3953|(216,)|const|float64
call_3952 = relay.TupleGetItem(func_344_call(relay.reshape(const_3953.astype('float64'), [9, 12, 2]), relay.reshape(const_3953.astype('float64'), [9, 12, 2]), ), 0)
call_3954 = relay.TupleGetItem(func_348_call(relay.reshape(const_3953.astype('float64'), [9, 12, 2]), relay.reshape(const_3953.astype('float64'), [9, 12, 2]), ), 0)
output = relay.Tuple([call_3922,call_3952,const_3953,])
output2 = relay.Tuple([call_3923,call_3954,const_3953,])
func_3969 = relay.Function([], output)
mod['func_3969'] = func_3969
mod = relay.transform.InferType()(mod)
output = func_3969()
func_3970 = relay.Function([], output)
mutated_mod['func_3970'] = func_3970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3602_call = mod.get_global_var('func_3602')
func_3603_call = mutated_mod.get_global_var('func_3603')
call_4018 = relay.TupleGetItem(func_3602_call(), 1)
call_4019 = relay.TupleGetItem(func_3603_call(), 1)
var_4034 = relay.var("var_4034", dtype = "float32", shape = (8, 12, 9))#candidate|4034|(8, 12, 9)|var|float32
bop_4035 = relay.divide(call_4018.astype('float32'), relay.reshape(var_4034.astype('float32'), relay.shape_of(call_4018))) # shape=(8, 12, 9)
bop_4038 = relay.divide(call_4019.astype('float32'), relay.reshape(var_4034.astype('float32'), relay.shape_of(call_4019))) # shape=(8, 12, 9)
output = bop_4035
output2 = bop_4038
func_4042 = relay.Function([var_4034,], output)
mod['func_4042'] = func_4042
mod = relay.transform.InferType()(mod)
mutated_mod['func_4042'] = func_4042
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4043 = relay.var("var_4043", dtype = "float32", shape = (8, 12, 9))#candidate|4043|(8, 12, 9)|var|float32
func_4042_call = mutated_mod.get_global_var('func_4042')
call_4044 = func_4042_call(var_4043)
output = call_4044
func_4045 = relay.Function([var_4043], output)
mutated_mod['func_4045'] = func_4045
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4054 = relay.var("var_4054", dtype = "float32", shape = (1, 15, 12))#candidate|4054|(1, 15, 12)|var|float32
uop_4055 = relay.asin(var_4054.astype('float32')) # shape=(1, 15, 12)
output = relay.Tuple([uop_4055,])
output2 = relay.Tuple([uop_4055,])
func_4069 = relay.Function([var_4054,], output)
mod['func_4069'] = func_4069
mod = relay.transform.InferType()(mod)
var_4070 = relay.var("var_4070", dtype = "float32", shape = (1, 15, 12))#candidate|4070|(1, 15, 12)|var|float32
output = func_4069(var_4070)
func_4071 = relay.Function([var_4070], output)
mutated_mod['func_4071'] = func_4071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_4093 = relay.TupleGetItem(func_772_call(), 0)
call_4094 = relay.TupleGetItem(func_774_call(), 0)
func_1231_call = mod.get_global_var('func_1231')
func_1232_call = mutated_mod.get_global_var('func_1232')
call_4095 = relay.TupleGetItem(func_1231_call(), 0)
call_4096 = relay.TupleGetItem(func_1232_call(), 0)
func_344_call = mod.get_global_var('func_344')
func_348_call = mutated_mod.get_global_var('func_348')
const_4112 = relay.const([1.426614,1.332333,-6.114353,-1.398077,3.038941,-0.319040,-2.053377,-1.942204,3.823297,-6.153941,1.925265,-8.077881,-3.271691,4.208544,4.495667,-6.955743,2.365661,8.151806,-1.501264,-5.147041,-4.500809,-4.541203,-9.741661,-6.322761,4.516256,-3.415827,-7.224278,-5.662586,7.647449,0.291776,7.641017,4.726137,9.346325,-1.426302,-6.099048,-7.480158,1.905148,-0.289709,8.782102,6.788508,8.878957,-3.044249,-8.195588,-7.506601,-1.823295,2.268003,8.339127,-1.369031,5.823983,-8.801190,-3.788660,-4.862727,-7.702549,2.548673,9.729085,-8.870288,-4.626213,2.060801,6.763340,-5.038707,3.667859,6.110835,1.613512,3.033255,-0.505761,-1.292897,-0.307091,2.159042,5.362984,1.752053,9.186817,-3.955867,-3.559198,2.399431,0.614861,0.032968,0.756383,-5.821286,9.308623,7.729049,2.174504,-0.778223,-7.295769,-0.587766,-8.541467,4.895623,8.238401,-5.959981,9.284832,-6.918014,2.960726,0.328595,-5.168824,7.471443,7.158910,-2.495185,8.247113,5.508312,-0.394529,1.020301,4.676005,-7.954403,-3.542122,-6.053453,-1.840402,9.616433,-7.365882,-1.091112,-3.511348,-9.208967,-8.553434,-4.055599,4.716790,-0.728831,-5.700348,2.247138,-7.179821,-3.825713,-4.574045,-7.718554,5.330412,-2.482030,-7.150824,0.878817,7.860287,-5.804777,-5.462174,0.059226,-1.244983,0.073249,7.668673,-9.743250,-8.874528,7.803593,9.661654,-5.900426,0.198826,9.478246,3.854797,-2.829273,-3.533849,8.650706,3.539050,8.844570,-1.928914,-4.121740,3.894690,8.296569,-0.203522,-3.244393,-5.827622,-2.078708,8.406608,8.886482,-7.589362,9.564358,-9.176233,9.551133,1.281027,-4.978544,8.927627,-9.363002,6.575640,2.540997,-1.502948,-2.089656,-1.050135,-7.201830,-0.030759,-1.063485,9.761688,3.302020,-6.324165,6.000320,7.501034,8.548870,4.808124,5.984775,2.061003,-5.099003,-6.996156,-9.331692,4.065367,0.557666,-9.875291,0.921143,5.413092,-7.109190,7.600019,-6.796829,9.105626,-7.847481,8.771992,1.630806,-6.917377,-9.476198,-4.606394,1.318357,6.356179,7.512413,-5.216254,1.549306,-3.718181,-0.632290,2.350334,-1.799740,-1.561124,9.792400,5.472051,2.727217,-1.450421,-2.301542,-4.416342,3.003231,-9.324086,-1.616522], dtype = "float64")#candidate|4112|(216,)|const|float64
call_4111 = relay.TupleGetItem(func_344_call(relay.reshape(const_4112.astype('float64'), [9, 12, 2]), relay.reshape(const_4112.astype('float64'), [9, 12, 2]), ), 0)
call_4113 = relay.TupleGetItem(func_348_call(relay.reshape(const_4112.astype('float64'), [9, 12, 2]), relay.reshape(const_4112.astype('float64'), [9, 12, 2]), ), 0)
uop_4123 = relay.sigmoid(call_4095.astype('float64')) # shape=(8, 12, 9)
uop_4125 = relay.sigmoid(call_4096.astype('float64')) # shape=(8, 12, 9)
output = relay.Tuple([call_4093,call_4111,const_4112,uop_4123,])
output2 = relay.Tuple([call_4094,call_4113,const_4112,uop_4125,])
func_4129 = relay.Function([], output)
mod['func_4129'] = func_4129
mod = relay.transform.InferType()(mod)
mutated_mod['func_4129'] = func_4129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4129_call = mutated_mod.get_global_var('func_4129')
call_4130 = func_4129_call()
output = call_4130
func_4131 = relay.Function([], output)
mutated_mod['func_4131'] = func_4131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1818_call = mod.get_global_var('func_1818')
func_1820_call = mutated_mod.get_global_var('func_1820')
call_4187 = relay.TupleGetItem(func_1818_call(), 1)
call_4188 = relay.TupleGetItem(func_1820_call(), 1)
output = call_4187
output2 = call_4188
func_4192 = relay.Function([], output)
mod['func_4192'] = func_4192
mod = relay.transform.InferType()(mod)
mutated_mod['func_4192'] = func_4192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4192_call = mutated_mod.get_global_var('func_4192')
call_4193 = func_4192_call()
output = call_4193
func_4194 = relay.Function([], output)
mutated_mod['func_4194'] = func_4194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mod.get_global_var('func_3969')
func_3970_call = mutated_mod.get_global_var('func_3970')
call_4245 = relay.TupleGetItem(func_3969_call(), 1)
call_4246 = relay.TupleGetItem(func_3970_call(), 1)
uop_4249 = relay.erf(call_4245.astype('float64')) # shape=(9, 12, 2)
uop_4251 = relay.erf(call_4246.astype('float64')) # shape=(9, 12, 2)
bop_4258 = relay.greater_equal(uop_4249.astype('bool'), relay.reshape(call_4245.astype('bool'), relay.shape_of(uop_4249))) # shape=(9, 12, 2)
bop_4261 = relay.greater_equal(uop_4251.astype('bool'), relay.reshape(call_4246.astype('bool'), relay.shape_of(uop_4251))) # shape=(9, 12, 2)
bop_4271 = relay.multiply(uop_4249.astype('float32'), relay.reshape(call_4245.astype('float32'), relay.shape_of(uop_4249))) # shape=(9, 12, 2)
bop_4274 = relay.multiply(uop_4251.astype('float32'), relay.reshape(call_4246.astype('float32'), relay.shape_of(uop_4251))) # shape=(9, 12, 2)
var_4287 = relay.var("var_4287", dtype = "bool", shape = (9, 12, 2))#candidate|4287|(9, 12, 2)|var|bool
bop_4288 = relay.floor_mod(call_4245.astype('float64'), relay.reshape(var_4287.astype('float64'), relay.shape_of(call_4245))) # shape=(9, 12, 2)
bop_4291 = relay.floor_mod(call_4246.astype('float64'), relay.reshape(var_4287.astype('float64'), relay.shape_of(call_4246))) # shape=(9, 12, 2)
var_4292 = relay.var("var_4292", dtype = "bool", shape = (9, 12, 2))#candidate|4292|(9, 12, 2)|var|bool
bop_4293 = relay.logical_or(call_4245.astype('bool'), relay.reshape(var_4292.astype('bool'), relay.shape_of(call_4245))) # shape=(9, 12, 2)
bop_4296 = relay.logical_or(call_4246.astype('bool'), relay.reshape(var_4292.astype('bool'), relay.shape_of(call_4246))) # shape=(9, 12, 2)
bop_4302 = relay.less(uop_4249.astype('bool'), relay.reshape(bop_4258.astype('bool'), relay.shape_of(uop_4249))) # shape=(9, 12, 2)
bop_4305 = relay.less(uop_4251.astype('bool'), relay.reshape(bop_4261.astype('bool'), relay.shape_of(uop_4251))) # shape=(9, 12, 2)
output = relay.Tuple([bop_4271,bop_4288,bop_4293,bop_4302,])
output2 = relay.Tuple([bop_4274,bop_4291,bop_4296,bop_4305,])
func_4307 = relay.Function([var_4287,var_4292,], output)
mod['func_4307'] = func_4307
mod = relay.transform.InferType()(mod)
mutated_mod['func_4307'] = func_4307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4307_call = mutated_mod.get_global_var('func_4307')
var_4309 = relay.var("var_4309", dtype = "bool", shape = (9, 12, 2))#candidate|4309|(9, 12, 2)|var|bool
var_4310 = relay.var("var_4310", dtype = "bool", shape = (9, 12, 2))#candidate|4310|(9, 12, 2)|var|bool
call_4308 = func_4307_call(var_4309,var_4310,)
output = call_4308
func_4311 = relay.Function([var_4309,var_4310,], output)
mutated_mod['func_4311'] = func_4311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1356_call = mod.get_global_var('func_1356')
func_1358_call = mutated_mod.get_global_var('func_1358')
call_4349 = func_1356_call()
call_4350 = func_1356_call()
uop_4351 = relay.acosh(call_4349.astype('float64')) # shape=(4, 9, 8)
uop_4353 = relay.acosh(call_4350.astype('float64')) # shape=(4, 9, 8)
func_4069_call = mod.get_global_var('func_4069')
func_4071_call = mutated_mod.get_global_var('func_4071')
var_4361 = relay.var("var_4361", dtype = "float32", shape = (180,))#candidate|4361|(180,)|var|float32
call_4360 = relay.TupleGetItem(func_4069_call(relay.reshape(var_4361.astype('float32'), [1, 15, 12])), 0)
call_4362 = relay.TupleGetItem(func_4071_call(relay.reshape(var_4361.astype('float32'), [1, 15, 12])), 0)
bop_4363 = relay.floor_divide(uop_4351.astype('float32'), relay.reshape(call_4349.astype('float32'), relay.shape_of(uop_4351))) # shape=(4, 9, 8)
bop_4366 = relay.floor_divide(uop_4353.astype('float32'), relay.reshape(call_4350.astype('float32'), relay.shape_of(uop_4353))) # shape=(4, 9, 8)
output = relay.Tuple([call_4360,var_4361,bop_4363,])
output2 = relay.Tuple([call_4362,var_4361,bop_4366,])
func_4369 = relay.Function([var_4361,], output)
mod['func_4369'] = func_4369
mod = relay.transform.InferType()(mod)
var_4370 = relay.var("var_4370", dtype = "float32", shape = (180,))#candidate|4370|(180,)|var|float32
output = func_4369(var_4370)
func_4371 = relay.Function([var_4370], output)
mutated_mod['func_4371'] = func_4371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3271_call = mod.get_global_var('func_3271')
func_3272_call = mutated_mod.get_global_var('func_3272')
call_4384 = func_3271_call()
call_4385 = func_3271_call()
uop_4391 = relay.sigmoid(call_4384.astype('float64')) # shape=(4, 9, 8)
uop_4393 = relay.sigmoid(call_4385.astype('float64')) # shape=(4, 9, 8)
uop_4407 = relay.cos(uop_4391.astype('float64')) # shape=(4, 9, 8)
uop_4409 = relay.cos(uop_4393.astype('float64')) # shape=(4, 9, 8)
func_1291_call = mod.get_global_var('func_1291')
func_1293_call = mutated_mod.get_global_var('func_1293')
call_4414 = relay.TupleGetItem(func_1291_call(), 0)
call_4415 = relay.TupleGetItem(func_1293_call(), 0)
output = relay.Tuple([uop_4407,call_4414,])
output2 = relay.Tuple([uop_4409,call_4415,])
func_4426 = relay.Function([], output)
mod['func_4426'] = func_4426
mod = relay.transform.InferType()(mod)
mutated_mod['func_4426'] = func_4426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4426_call = mutated_mod.get_global_var('func_4426')
call_4427 = func_4426_call()
output = call_4427
func_4428 = relay.Function([], output)
mutated_mod['func_4428'] = func_4428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4192_call = mod.get_global_var('func_4192')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_4451 = func_4192_call()
call_4452 = func_4192_call()
func_1342_call = mod.get_global_var('func_1342')
func_1344_call = mutated_mod.get_global_var('func_1344')
var_4457 = relay.var("var_4457", dtype = "int8", shape = (432,))#candidate|4457|(432,)|var|int8
call_4456 = relay.TupleGetItem(func_1342_call(relay.reshape(var_4457.astype('int8'), [12, 9, 4])), 2)
call_4458 = relay.TupleGetItem(func_1344_call(relay.reshape(var_4457.astype('int8'), [12, 9, 4])), 2)
output = relay.Tuple([call_4451,call_4456,var_4457,])
output2 = relay.Tuple([call_4452,call_4458,var_4457,])
func_4469 = relay.Function([var_4457,], output)
mod['func_4469'] = func_4469
mod = relay.transform.InferType()(mod)
mutated_mod['func_4469'] = func_4469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4470 = relay.var("var_4470", dtype = "int8", shape = (432,))#candidate|4470|(432,)|var|int8
func_4469_call = mutated_mod.get_global_var('func_4469')
call_4471 = func_4469_call(var_4470)
output = call_4471
func_4472 = relay.Function([var_4470], output)
mutated_mod['func_4472'] = func_4472
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4533 = relay.var("var_4533", dtype = "float32", shape = (2, 6, 4))#candidate|4533|(2, 6, 4)|var|float32
uop_4534 = relay.tan(var_4533.astype('float32')) # shape=(2, 6, 4)
uop_4545 = relay.sigmoid(uop_4534.astype('float64')) # shape=(2, 6, 4)
output = uop_4545
output2 = uop_4545
func_4553 = relay.Function([var_4533,], output)
mod['func_4553'] = func_4553
mod = relay.transform.InferType()(mod)
mutated_mod['func_4553'] = func_4553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4554 = relay.var("var_4554", dtype = "float32", shape = (2, 6, 4))#candidate|4554|(2, 6, 4)|var|float32
func_4553_call = mutated_mod.get_global_var('func_4553')
call_4555 = func_4553_call(var_4554)
output = call_4555
func_4556 = relay.Function([var_4554], output)
mutated_mod['func_4556'] = func_4556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1029_call = mod.get_global_var('func_1029')
func_1030_call = mutated_mod.get_global_var('func_1030')
call_4607 = relay.TupleGetItem(func_1029_call(), 0)
call_4608 = relay.TupleGetItem(func_1030_call(), 0)
func_1749_call = mod.get_global_var('func_1749')
func_1753_call = mutated_mod.get_global_var('func_1753')
const_4633 = relay.const([1.089587,3.052663,-1.288410,4.936159,-4.092130,-0.167714,-3.621349,-3.204271,-1.839217,-7.767502,-6.457456,-9.290676,1.502572,1.316799,5.622632,1.527116,-1.250341,8.098358,9.213603,-0.159480,-2.960410,-2.773709,-0.463754,-7.068421,8.366542,-1.302019,-7.561201,2.234182,-1.278686,-6.702111,-3.840139,-5.550042,9.223327,2.098873,-9.100977,-3.612683,-7.382270,6.880477,9.457094,8.568761,-0.262401,7.022105,-8.303744,-0.383247,8.866125,3.006224,2.572364,-5.834143,8.837279,5.832160,9.321714,-5.019157,0.214990,-3.717413,1.675171,6.038099,1.476277,7.511159,5.217437,7.126420,-2.933416,-9.126856,-8.310659,-1.588645,0.924270,-1.938415,5.263240,-2.930724,-7.146296,-4.100425,4.425762,-4.712560,-5.922412,-1.092879,5.352180,-2.415518,-7.598228,4.512613,5.920540,-3.375373,-2.437967,7.250314,8.556467,-6.164581,-9.358158,-9.967696,-0.673057,6.491631,-3.680877,-4.325067,7.973318,0.123687,-1.250934,-2.519502,0.572480,-2.068714,2.265685,6.627507], dtype = "float32")#candidate|4633|(98,)|const|float32
const_4634 = relay.const([True,False,True,False,False,True,True,True,False,True], dtype = "bool")#candidate|4634|(10,)|const|bool
call_4632 = relay.TupleGetItem(func_1749_call(relay.reshape(const_4633.astype('float32'), [98,]), relay.reshape(const_4634.astype('bool'), [10,]), ), 2)
call_4635 = relay.TupleGetItem(func_1753_call(relay.reshape(const_4633.astype('float32'), [98,]), relay.reshape(const_4634.astype('bool'), [10,]), ), 2)
output = relay.Tuple([call_4607,call_4632,const_4633,const_4634,])
output2 = relay.Tuple([call_4608,call_4635,const_4633,const_4634,])
func_4651 = relay.Function([], output)
mod['func_4651'] = func_4651
mod = relay.transform.InferType()(mod)
mutated_mod['func_4651'] = func_4651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4651_call = mutated_mod.get_global_var('func_4651')
call_4652 = func_4651_call()
output = call_4652
func_4653 = relay.Function([], output)
mutated_mod['func_4653'] = func_4653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3516_call = mod.get_global_var('func_3516')
func_3518_call = mutated_mod.get_global_var('func_3518')
call_4684 = relay.TupleGetItem(func_3516_call(), 1)
call_4685 = relay.TupleGetItem(func_3518_call(), 1)
func_613_call = mod.get_global_var('func_613')
func_614_call = mutated_mod.get_global_var('func_614')
call_4688 = relay.TupleGetItem(func_613_call(), 2)
call_4689 = relay.TupleGetItem(func_614_call(), 2)
output = relay.Tuple([call_4684,call_4688,])
output2 = relay.Tuple([call_4685,call_4689,])
func_4697 = relay.Function([], output)
mod['func_4697'] = func_4697
mod = relay.transform.InferType()(mod)
output = func_4697()
func_4698 = relay.Function([], output)
mutated_mod['func_4698'] = func_4698
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4715 = relay.const([[[3.803959,-8.936791,9.167738,3.915897,3.861492,-8.528739,-9.244394,-4.687845,-8.545936,0.486812,-6.069646,5.061506,3.111066,-6.072371,5.254761,-9.050221]],[[8.709321,-3.281903,3.203640,1.594546,6.729928,-8.881443,4.726440,-0.270411,6.563811,-0.489964,5.129504,7.717822,-7.746557,-0.985136,-1.650353,-4.005392]],[[4.891922,-9.707611,6.129285,5.152288,1.399452,-9.040227,-0.792102,9.965666,-6.822996,-4.221471,4.004721,9.562252,8.122888,2.163854,-5.878288,7.835376]]], dtype = "float32")#candidate|4715|(3, 1, 16)|const|float32
var_4716 = relay.var("var_4716", dtype = "float32", shape = (3, 5, 16))#candidate|4716|(3, 5, 16)|var|float32
bop_4717 = relay.floor_mod(const_4715.astype('float32'), var_4716.astype('float32')) # shape=(3, 5, 16)
output = relay.Tuple([bop_4717,])
output2 = relay.Tuple([bop_4717,])
func_4721 = relay.Function([var_4716,], output)
mod['func_4721'] = func_4721
mod = relay.transform.InferType()(mod)
mutated_mod['func_4721'] = func_4721
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4722 = relay.var("var_4722", dtype = "float32", shape = (3, 5, 16))#candidate|4722|(3, 5, 16)|var|float32
func_4721_call = mutated_mod.get_global_var('func_4721')
call_4723 = func_4721_call(var_4722)
output = call_4723
func_4724 = relay.Function([var_4722], output)
mutated_mod['func_4724'] = func_4724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3632_call = mod.get_global_var('func_3632')
func_3633_call = mutated_mod.get_global_var('func_3633')
call_4732 = func_3632_call()
call_4733 = func_3632_call()
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
const_4746 = relay.const([-1,-4,-1,7,-3,3,-7,-10,-2,-6,-3,6,6,8,-10,-2,5,3,2,-2,-8,-8,-7,-1,9,10,4,3,-3,-8,2,-3,-9,-3,-6,-5,9,9,-2,-4,2,2,-1,-7,-8,7,-6,-6,-7,-3,-5,9,-2,1,1,-4,1,-6,-10,9,8,9,6,-9,6,8,-2,7,-5,7,-4,-6,6,-9,7,-4,4,10,-9,-3,-3,-6,5,-9,2,6,-7,-2,6,-9,9,-1,9,3,10,-2,-4,-8,-4,1,10,-3,-2,2,-6,3,4,-8,-5,10,-6,10,3,-9,4,-2,-9,-3,-9,1,4,1,-7,-3,-10,2,7,6,-10,6,6,8,2,8,-6,7,2,10,-8,4,7,-6,9,-4,-8,5,-10,-3,6,-4,-8,-4,2,10,8,10,1,10,9,-1,4,-4,8,-7,-7,-7,-5,-5,-7,-8,8,-2,5,9,6,4,-3,-6,-6,-7,7,7,-7,10,-7,8,-6,2,-2,7,10,-2,8,6,-5,6,-7,4,7,-7,-2,-8,7,10,-3,-1,-6,10,3,9,-8,-9,-10,-10,-7,-9,-6,-7,-9,4,4,8,10,-6,-5,2,10,10,-4,-6,9,-2,-4,-8,8,8,-9,3,-4,4,-6,5,-6,7,-7,-3,-10,-3,-5,-9,5,8,4,5,2,9,4,3,9,1,3,-4,2,7,-8,-2,-4,9,2,7,-1,-2,-10,-6,9,5,-5,6,4,-5,-10,7,7,-3,8,-5,-6,-6,5,5,1,-5,7,-2,-3,-5,-5,-10,-10,3,2,-9,-6,5,6,3,-8,-4,8,-7,-4,-7,-9,-1,-7,-7,4,-9,10,10,-4,3,-1,-8,-2,9,1,5,2,-7,2,-10,-9,-5,-3,-2,7,-8,4,-7,-2,4,-2,-3,7,-3,-5,5,10,-10,-6,9,-2,4,-4,4,-7,1,-7,6,-6,5,2,5,4,6,-2,5,-3,-9,8,-4,10,-6,2,5,1,-9,-1,-6,10,5,8,-5,7,-5,-7,-9,6,6,-7,6,-10,-10,9,-6,-9,-2,-10,-5,1,1,-3,-5,-8,-5,-1,-5,-5,-1,-3,5,7,9,2,-2,8,-1,6,9,6,-10,-6,7,10,-6,-5,6,-6,-7,3,-3], dtype = "int8")#candidate|4746|(432,)|const|int8
call_4745 = relay.TupleGetItem(func_1505_call(relay.reshape(const_4746.astype('int8'), [432,])), 1)
call_4747 = relay.TupleGetItem(func_1507_call(relay.reshape(const_4746.astype('int8'), [432,])), 1)
func_82_call = mod.get_global_var('func_82')
func_86_call = mutated_mod.get_global_var('func_86')
const_4749 = relay.const([[4.585283,-1.281752],[-3.774367,-3.977642],[7.858529,2.742876],[1.221903,1.376764],[1.696403,4.222761],[-0.073929,-0.724996],[-0.672752,9.833152],[-0.507647,-7.918474],[-6.700002,-6.235292],[8.664778,-3.691752],[5.856118,-0.637892],[-4.891114,4.118892],[8.695869,4.420533],[5.103931,2.756311],[6.366525,-4.724932],[-6.230536,5.395019],[5.713034,1.070938],[-2.097125,0.686360],[-7.835878,3.022163],[1.594855,-3.556474],[1.523136,-2.171250],[1.424360,5.327793],[-9.569485,-1.277442],[-6.548513,-7.386626],[-3.018476,-1.101968],[5.950648,-4.372055],[-6.432179,-3.653124],[-6.563201,-0.161522],[-1.197847,-1.890035],[-9.325514,-8.948814],[3.809387,5.583395],[-3.152056,5.560130],[-3.389759,-7.634598],[5.629006,1.764111],[-6.663051,-3.694770],[-2.517825,-6.040695],[4.223652,4.914174],[-3.296733,7.310876],[-7.658495,0.468123],[-2.750498,7.066394],[7.521183,-4.852199],[-1.279052,-0.819487],[5.593251,1.326349],[9.234683,-1.232964],[-6.958056,-4.270763],[0.193079,-2.453102],[3.699890,-8.192375],[-4.482655,-1.753103],[4.403850,1.802983],[-6.805099,-1.618606],[-3.024617,4.565374],[-4.773387,-7.861969],[3.737282,8.276246],[-7.045350,2.135536],[-2.543543,6.830863],[7.321291,-6.360243],[-1.305573,4.136917],[9.809859,-0.945552],[6.094132,9.274274],[9.429361,6.517742],[-2.032019,3.590843],[-0.308426,-5.295701],[3.666719,-9.269559],[5.352062,4.348078],[-8.431136,-2.561831],[0.550591,4.344737],[3.855446,-3.846816],[-9.905494,3.082788],[-6.219712,-4.373140],[1.000564,8.787394],[-3.532601,-7.645946],[-7.142840,-0.100834]], dtype = "float32")#candidate|4749|(72, 2)|const|float32
call_4748 = func_82_call(relay.reshape(const_4749.astype('float32'), [2, 12, 6]), relay.reshape(const_4749.astype('float32'), [2, 12, 6]), )
call_4750 = func_82_call(relay.reshape(const_4749.astype('float32'), [2, 12, 6]), relay.reshape(const_4749.astype('float32'), [2, 12, 6]), )
func_1648_call = mod.get_global_var('func_1648')
func_1650_call = mutated_mod.get_global_var('func_1650')
call_4755 = relay.TupleGetItem(func_1648_call(relay.reshape(call_4732.astype('float32'), [864,])), 1)
call_4756 = relay.TupleGetItem(func_1650_call(relay.reshape(call_4732.astype('float32'), [864,])), 1)
func_779_call = mod.get_global_var('func_779')
func_780_call = mutated_mod.get_global_var('func_780')
call_4759 = relay.TupleGetItem(func_779_call(), 0)
call_4760 = relay.TupleGetItem(func_780_call(), 0)
output = relay.Tuple([call_4732,call_4745,const_4746,call_4748,const_4749,call_4755,call_4759,])
output2 = relay.Tuple([call_4733,call_4747,const_4746,call_4750,const_4749,call_4756,call_4760,])
func_4775 = relay.Function([], output)
mod['func_4775'] = func_4775
mod = relay.transform.InferType()(mod)
mutated_mod['func_4775'] = func_4775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4775_call = mutated_mod.get_global_var('func_4775')
call_4776 = func_4775_call()
output = call_4776
func_4777 = relay.Function([], output)
mutated_mod['func_4777'] = func_4777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_677_call = mod.get_global_var('func_677')
func_679_call = mutated_mod.get_global_var('func_679')
call_4783 = func_677_call()
call_4784 = func_677_call()
output = call_4783
output2 = call_4784
func_4798 = relay.Function([], output)
mod['func_4798'] = func_4798
mod = relay.transform.InferType()(mod)
output = func_4798()
func_4799 = relay.Function([], output)
mutated_mod['func_4799'] = func_4799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3271_call = mod.get_global_var('func_3271')
func_3272_call = mutated_mod.get_global_var('func_3272')
call_4847 = func_3271_call()
call_4848 = func_3271_call()
output = call_4847
output2 = call_4848
func_4849 = relay.Function([], output)
mod['func_4849'] = func_4849
mod = relay.transform.InferType()(mod)
output = func_4849()
func_4850 = relay.Function([], output)
mutated_mod['func_4850'] = func_4850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4775_call = mod.get_global_var('func_4775')
func_4777_call = mutated_mod.get_global_var('func_4777')
call_4865 = relay.TupleGetItem(func_4775_call(), 4)
call_4866 = relay.TupleGetItem(func_4777_call(), 4)
uop_4867 = relay.exp(call_4865.astype('float64')) # shape=(72, 2)
uop_4869 = relay.exp(call_4866.astype('float64')) # shape=(72, 2)
func_1342_call = mod.get_global_var('func_1342')
func_1344_call = mutated_mod.get_global_var('func_1344')
const_4871 = relay.const([2,-2,10,10,9,-3,8,3,-7,-2,-1,2,-7,10,1,-9,-3,-7,10,-8,1,-9,3,3,-2,-10,2,-6,8,6,-1,2,5,-9,-7,5,2,-9,7,-4,8,5,-6,2,-7,5,1,-2,-7,3,-9,5,6,6,-7,4,4,9,10,-8,-8,-5,-8,-7,-9,10,1,-1,9,-10,-10,4,-6,6,2,1,4,-1,2,-9,2,-10,5,10,9,-2,8,4,7,-10,-3,1,6,4,-3,10,4,-6,3,5,-10,2,-3,10,6,8,-10,1,-2,5,-7,9,-6,2,-5,-1,6,-10,10,6,1,-7,7,-8,-2,4,-9,1,-2,-7,2,9,-3,-6,1,1,7,5,-6,3,-8,-5,2,6,-3,-8,-3,2,7,3,9,2,-9,-2,-3,-3,1,-10,8,-4,1,5,-10,3,6,-9,-7,-2,9,-3,8,3,-6,2,-1,2,-10,-9,7,-10,-6,-9,-10,-3,-5,-3,-2,2,-1,1,-1,-7,1,3,-6,10,-2,8,10,-4,6,9,6,-8,-8,-3,2,-9,-6,3,-7,-7,-4,4,-4,10,-8,10,2,2,-8,8,5,-5,2,-4,-2,10,3,9,-2,7,-8,3,6,-10,10,-6,-7,-5,-10,-8,7,-6,3,8,-4,7,-4,4,6,6,-3,-1,3,9,-7,4,6,6,7,7,9,-7,-4,4,-6,8,-3,10,-6,-9,-10,9,-7,7,7,7,-8,10,7,2,4,-3,-10,3,5,-1,7,1,4,-7,-2,8,9,9,-10,9,4,3,8,4,-9,8,-6,9,-7,-1,-3,8,-5,-9,-10,10,-2,-10,10,6,8,7,-5,3,5,2,1,1,8,2,10,-4,9,-5,-7,-8,8,-10,-2,-8,7,6,-1,5,-8,-7,-2,-1,6,-8,8,1,-1,-1,-4,-1,-9,10,-3,9,-1,-8,-9,4,6,2,7,-1,6,3,-1,2,1,-9,-4,-6,7,10,4,3,5,5,1,-4,8,-9,-2,-8,-3,-5,-7,6,4,10,-9,7,10,-9,10,2,-9,-8,1,1,-6,3,-9,5,-4,-1,-10,8,-4,3,-8,-3,-5,7,-10,-10,-9,8,-3,-1,-10,9,-3,-9,3,1,6,-10,7,-9], dtype = "int8")#candidate|4871|(432,)|const|int8
call_4870 = relay.TupleGetItem(func_1342_call(relay.reshape(const_4871.astype('int8'), [12, 9, 4])), 3)
call_4872 = relay.TupleGetItem(func_1344_call(relay.reshape(const_4871.astype('int8'), [12, 9, 4])), 3)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_4882 = relay.TupleGetItem(func_772_call(), 0)
call_4883 = relay.TupleGetItem(func_774_call(), 0)
func_3448_call = mod.get_global_var('func_3448')
func_3452_call = mutated_mod.get_global_var('func_3452')
const_4888 = relay.const([3,-7,-9,10,-5,1,1,-7,3,6,7,-8,-2,7,3,8,-7,-10,6,-2,-8,-6,-2,-6,8,-7,-1,-5,4,-5,-2,-2,9,-5,-2,6,1,1,-7,-10,-2,-10,-4,8,-9,-6,7,1,-1,-3,-5,-7,10,-2,6,4,1,-2,10,-4,6,-1,-1,1,1,9,10,2,3,-9,-6,-8,6,3,-4,5,10,-1,10,-4,-5,-7,-8,-6,-3,-3,-7,-7,3,-9,8,4,-1,10,8,-4,-7,-7,10,-10,-10,5,4,-2,-3,-5,-6,10,6,3,-3,9,6,9,-1,10,-1,-9,-8,-5,2,3,-9,-7,4,-2,-5,-9,7,10,6,-9,6,4,-9,-6,-7,8,3,-4,7,5,7,6,1,-3,-5,-4,10,-4,6,-9,8,-10,5,9,-2,-6,8,4,-8,-8,1,4,9,10,8,10,-9,9,6,7,-4,-6,7,-4,9,7,-6,-9,9,-2,-1,2,-3,-5,1,-5,-9,9,-3,2,-7,-9,-8,-9,10,-3,-4,-2,-8,-5,2,-5,-3,8,1,5,9,-2,4,3,5,-6,2,5,8,-10,10,-3,4,-8,-3,5,-8,-8,-10,-6,-8,-1,2,-10,-6,1,6,10,7,-4,-2,2,-6,2,-1,1,3,-10,8,5,10,1,-2,-5,8,1,6,1,4,-10,-4,-6,2,9,-8,3,10,6,-4,3,8,-3,-7,-10,8,10,8,-8,-4,10,1,1,-9,5,8,5,-4,-4,-1,-6,4,-10,1,-3,-4,10,8,9,10,1,4,4,2,-10,2,-3,-1,-1,2,-9,8,-4,-1,-6,-8,7,-10,-1,10,-9,-9,-1,7,1,5,-8,9,9,-8,1,1,10,-10,8,-6,4,-9,-4,-6,-8,6,4,-1,-5,10,-4,5,-2,9,-7,-7,10,8,4,10,-5,-1,2,-1,-8,-5,10,8,-7,4,-2,8,6,-6,10,-4,2,3,5,3,3,-10,9,8,7,-1,2,-10,5,-1,-2,1,10,10,-8,-1,-2,-5,-8,-9,5,-3,9,-7,9,-1,-3,-7,-6,8,-1,-4,-1,5,2,-4,4,-5,-3,9,-2,-5,5,-10,10,-7,-9,5,2,9,6,2,-3,4,3,9,4,-2,7,-1,10,-9,9,-8,6,4,3,1,-4,3,8,3,-6,-10,7,-2,-9,5,-5,-8,2,-10,-1,10,-5,5,5,-5,2,-7,-9,5,8,-8,5,-1,-2,-2,3,8,-7,3,-10,-6,-6,-1,-10,6,8,-2,-2,2,5,6,-7,7,-7,5,-9,-8,-4,1,-7,3,-1,-10,7,6,5,-1,8,6,8,-1,-4,3,9,-3,9,2,10,-4,4,-10,-3,3,1,-5,3,-8,-4,-5,5,9,-4,5,-5,-3,-8,-9,-6,-2,-2,-5,-2,9,4,-3,4,4,-5,3,5,-8,-9,-5,7,-1,6,-1,-9,-8,-6,1,-1,7,-3,5,-6,-2,-7,-1,6,-3,-8,-1,-7,-7,8,-5,2,-6,-2,-2,1,5,-2,-2,10,9,2,-2,-8,3,6,6,10,2,2,-4,9,1,-8,8,-10,4,8,10,5,-4,3,-1,-2,7,-9,7,2,9,-10,-8,3,-2,-9,7,-8,-9,10,4,-6,-8,-3,5,2,7,-1,4,-8,7,9,-5,6,7,-5,10,3,-8,-10,2,-7,5,6,1,6,-5,-5,-3,6,7,-1,5,-2,10,6,-5,3,-8,-1,-4,1,3,10,5,6,-1,8,10,-9,-3,4,-7,-9,-7,7,7,-3,-4,-6,10,2,10,-7,1,3,-2,-3,6,-5,-2,8,-10,10,3,2,2,5,3,2,-8,7,4,9,4,6,-4,-5,-3,-8,-5,-10,-4,8,-6,1,-7,-6,-2,2,-6,-2,-3,7,-6,-2,5,7,-6,-9,7,-8,10,-5,8,-6,6,-7,7,-2,-10,3,6,-7,6,7,-3,8,-9,-6,10,1,2,-4,-1,3,3,-9,7,-3,9,8,5,7,-1,-10,7,-1,-9,-7,3,4,-5,9,8,-8,-4,-8,6,-4,8,-10,-7,-3,5,-1,-1,8,-9,-1,9,-1,-8,1,-6,-1,-10,9,-3,6,-4,10,-1,3,-5,6,-4,8,-7,5,5,10,-10,-3,-3,3,-5,5,9,-5,-2,10,-9,1,-7,-1,-4,-6,-10,-7,7,10,-1,7,3,-6,-4,-5,5,10,2,-2,4,3,8,-7,-10,-6,-4,-2,-6,5,5,4,-6,9,10,6,-1,8,-7,-6,-5,-7,-7,5,-9,5,10,3,-6,6,8,-1,-9,8,-5,-4,-7,9,-1,-7,-7,-4,4,3,-2,7,10,-8,-9,6,1,6,2,1,-2,-4,3,-5,5,-8,-8,-6,-4,-7,1,7,-5,1,8,1,-2,-8,2,3,-3,4,-7,2,-5,2,-6,9,2,1,1,2,8,10,5,-7,6,2,4,-3,-4,-6,-6,2,-2,-9,-4,8,-1,1,-4,6,2,1,3,6,3,-8,6,8,-2,10,-10,-7,7,-8,-8,10,2,9,-7,3,-8,10,2,1,7,-9,2,-9,-5,1,-9,7,-2,9,1,1,4,5,-9,7,10,2,-3,4,-8,-5,-5,10,-7,9,10,1,-1,-9,3,-8,-3,8,3,-6,-6,-8,1,10,-9,-10,-9,5,7,2,-10,-2,3,9,-1,-5,-5,-10,2,-8,9,2,-9,9,8,6,2,-1,10,-10,-4,-10,9,7,1,4,1,7,-2,-8,8,10,-1,-6,8,2,1,1,3,5,3,-2,-7,6,7,-2,7,-6,1,-9,-8,-3,2,-2,1,-9,-9,1,-1,-7,-1,3,1,6,3,-4,-6,-1,10,5,1,8,-4,3,-7,6,-1,8,10,5,9,4,6,-8,-9,10,7,-7,8,-10,2,3,-3,-5,-2,8,-2,1,-8,-4,1,4,-1,-3,-2,-2,-7,8,-3,-4,-5,-10,-5,-5,-7,-9,-3,10,-5,-3,-4,-1,-1,2,2,-2,-10,-4,-1,-9,7,1,-2,-4,-2,2,-5,10,2,1,-9,10,5,-6,10,9,3,7,-8,10,9,9,-7,-9,2,4,3,3,-6,6,-4,5,-2,-3,-3,-4,9,6,4,-8,5,8,-3,-8,1,7,9,-3,6,5,2,-2,5,-8,1,-5,-5,-6,5,-9,10,-2,-10,1,-4,5,-6,-7,-3,9,-1,2,-9,-6,6,3,-3,-4,1,-1,2,10,-1,8,-2,-9,5,-10,-2,1,2,-4,8,-10,-5,-3,-6,-4,10,2,3,4,5,-2,-10,6,8,9,-10,-6,-1,-2,4,8,2,-5,-3,4,-2,-8,-1,6,-6,5,7,3,-2,7,-2,9,4,10,-2,-7,1,9,-10,1,-2,-4,-8,9,1,-6,-10,7,-9,-3,-1,7,6,6,-3,-5,-1,-3,5,9,-7,-9,7,3,6,7,6,1,-10,-1,-2,-7,5,-2,-4,-6,-5,10,-2,-10,-8,-6,-2,8,4,4,-4,-10,3,-9,4,-9,-10,-5,-3,1,-3,-8,5,-5,-5,-6,-2,-8,-8,-1,2,-3,1,5,2,-7,-4,-8,-9,10,3,-3,-10,-7,7,3,2,-2,-4,8,4,9,-8,-8,1,1,2,7,6,-4,-6,2,3,-2,10,2,-5,3,1,10,-7,-4,-8,5,-8,7,-6,-3,-3,-7,-5,9,4,-1,3,-5,-6,-1,3,-6,-5,-5,4,-1,3,1,8,5,-4,-7,2,9,-4,-2,-6,-7,3,-1,2,-3,-1,2,-6,3,5,-9,3,-5,-8,-5,-5,-5,-8,5,-10,4,5,-1,3,3,6,-5,1,8,-4,2,-7,10,-3,5,5,3,5,3,9,-8,-1,4,2,9,-6,7,-8,-9,4,-4,-5,-1,2,10,3,6,2,5,-5,10,-7,-7,6,8,1,-10,-1,-7,-6,-6,-7,-2,6,3,-2,-3,1,-4,5,8,-3,2,-9,9,-6,-6,-9,1,6,7,8,6,1,10,-1,-3,7,8,-4,3,2,-4,8,6,-1,1,-4,-3,-5,2,9,10,-1,-4,-5,-7,-6,8,6,7,9,-1,5,10,4,5,5,1,-6,-1,2,8,8,-2,-3,4,-7,7,-8,1,6,7,-3,-9,3,-10,9,3,-5,4,1,10,-4,7,3,-5,-6,-4,5,8,5,-3,7,4,8,-1,-5,-9,9,2,-6,5,-3,8,2,6,-5,4,4,5,-5,4,-9,-10,9,-10,-10,4,4,1,-10,-5,-3,-7,8,-10,-8,4,7,6,7,10,3,-3,8,2,9,2,-8,-1,-1,-1,5,-6,9,-8,-8,-4,-2,7,-8,-5,8,-1,8,-7,2,10,1,-2,8,7,-6,-8,-7,-6,5,4,-1,-4,-6,8,8,5,-3,-2,-7,-10,9,1,4,2,1,5,-2,2,1,-4,-9,-8,8,-5,8,-5,-5,4,-6,-9,6,-10,4,-4,4,-3,9,-7,-1,1,10,-8,-4,6,-1,-6,10,3,10,10,7,8,5,4,-10,7,1,-6,-8,-5,-7,3], dtype = "uint16")#candidate|4888|(1728,)|const|uint16
const_4889 = relay.const([[-0.048135,-1.097155,1.408261,-4.955513,-6.406317,0.099804,1.584259,3.569090,3.130176,6.984555,-1.632946,1.917004,-0.758964,-7.343986,-3.289596,-6.411477,-3.020225,-0.385574,-7.424638,1.024423,8.346915,2.917128,8.412412,-1.733066,3.819563,1.983828,-7.973733,4.190534,0.385105,3.759921,-5.046368,-5.080363,-5.801907,-5.756456,9.608556,-9.295882,-5.113019,7.287648,-9.834826,-9.625371,-6.890551,6.559053,-2.342104,5.943224,-6.479264,0.812845,1.055109,7.203402,-2.991186,-4.812525,-3.357004,-5.901052,-8.498178,-6.900126,7.114830,-3.929227,-1.180439,1.956964,5.541431,-8.953774,0.892667,-5.809424,4.943699,4.384506,7.143816,9.499030,-1.001419,-2.866952,-1.687467,3.912060,2.529417,8.482620,7.703465,-1.385468,0.187167,7.677264,6.891405,7.929742,6.272293,-1.061517,-7.660746,-6.038433,-2.783827,1.074259,-8.415464,-4.952828,8.135201,2.057928,-6.407794,5.391189,4.277165,2.700924,-7.371693,6.893147,8.995430,-4.442973,-9.476103,-3.920764,7.734829,6.892632,-9.592414,4.411447,2.728492,-1.511019,-6.704077,8.713667,-5.078324,-0.065664,-2.536056,1.328376,-6.720314,5.116835,-2.976891,2.233108,-5.304972,5.837224,-6.248982,-3.923359,-5.526443,-2.875736,-4.203337,-7.600988,-5.474313,1.443096,-8.057268,-7.911262,-2.227383,8.672570,3.872595,-3.399422,6.230789,-4.004739,-8.016718,7.087498,1.755931,5.577684,-5.224612,5.123870,5.061996,2.563314,9.201835,-6.370508,1.576710,-0.735981,-4.460181,-7.079040,6.744722,6.381656,9.987049,-9.949240,-8.186426,-0.712042,6.128738,0.762216,-4.500495,-2.070058,-4.257606,1.760122,2.130321,-7.085749,-3.053281,0.006819,0.328666,7.427111,-5.614701,-7.942536,-1.499281,6.893361,-3.726509,-2.613636,6.576869,-9.508111,3.496089,4.771910,6.393508,-0.326883,4.870572,1.180298,-7.730329,4.049843,-8.796896,-6.380985,2.722052,-7.427382,-9.546089,-4.701941,-7.110275,-0.672783,4.993745,-2.178331,0.924790,-8.710156,-2.256110,-2.044000,6.277946,3.473700,0.626498,-6.222332,2.628060,-0.088775,7.717569,0.854831,6.710186,2.538785,-1.604059,0.026127,-4.246227,-4.104025,-2.282160,2.925865,-8.298095,2.345132,-8.066259,-7.839083,9.862986,-4.297937,-1.073666,-3.347451,6.540420,-3.267631,7.247352,7.874001,7.653629,-9.132538,-2.706257,2.655564,8.948654,-0.104773,-1.612242,9.969298,5.682372,-3.768316,-4.379409,0.223577,-1.734166,4.492223,-7.988448,2.921160,-6.545409,4.710794,-4.572552,0.826558,9.993222,6.000100,5.252240,6.653231,-7.392923,-1.855736,-8.126611,-6.106630,9.186100,-0.355810,1.730515,5.754906,-9.135067,-4.991776,-9.740899,-1.194613,-9.136521,9.267184,-9.589951,-8.354706,1.719870,2.767894,5.218894,-0.051803,7.716378,-9.604863,9.576260,-8.049302,-7.933860,-0.213604,9.650338,-6.992499,-6.570177,0.083505,6.283362,-1.800621,-0.535425,-1.140392,4.227499,-5.356085,-4.357434,6.940711,-5.696081,4.449502,8.875105,8.283036]], dtype = "float32")#candidate|4889|(1, 288)|const|float32
call_4887 = relay.TupleGetItem(func_3448_call(relay.reshape(const_4888.astype('uint16'), [1728,]), relay.reshape(const_4889.astype('float32'), [4, 9, 8]), ), 8)
call_4890 = relay.TupleGetItem(func_3452_call(relay.reshape(const_4888.astype('uint16'), [1728,]), relay.reshape(const_4889.astype('float32'), [4, 9, 8]), ), 8)
func_3271_call = mod.get_global_var('func_3271')
func_3272_call = mutated_mod.get_global_var('func_3272')
call_4891 = func_3271_call()
call_4892 = func_3271_call()
func_2498_call = mod.get_global_var('func_2498')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_4900 = relay.TupleGetItem(func_2498_call(relay.reshape(call_4887.astype('bool'), [10,]), relay.reshape(call_4882.astype('bool'), [8, 12, 9]), ), 1)
call_4901 = relay.TupleGetItem(func_2502_call(relay.reshape(call_4887.astype('bool'), [10,]), relay.reshape(call_4882.astype('bool'), [8, 12, 9]), ), 1)
uop_4909 = relay.erf(uop_4867.astype('float32')) # shape=(72, 2)
uop_4911 = relay.erf(uop_4869.astype('float32')) # shape=(72, 2)
output = relay.Tuple([call_4870,const_4871,call_4882,call_4887,const_4888,const_4889,call_4891,call_4900,uop_4909,])
output2 = relay.Tuple([call_4872,const_4871,call_4883,call_4890,const_4888,const_4889,call_4892,call_4901,uop_4911,])
func_4919 = relay.Function([], output)
mod['func_4919'] = func_4919
mod = relay.transform.InferType()(mod)
mutated_mod['func_4919'] = func_4919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4919_call = mutated_mod.get_global_var('func_4919')
call_4920 = func_4919_call()
output = call_4920
func_4921 = relay.Function([], output)
mutated_mod['func_4921'] = func_4921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1231_call = mod.get_global_var('func_1231')
func_1232_call = mutated_mod.get_global_var('func_1232')
call_4967 = relay.TupleGetItem(func_1231_call(), 0)
call_4968 = relay.TupleGetItem(func_1232_call(), 0)
output = call_4967
output2 = call_4968
func_5027 = relay.Function([], output)
mod['func_5027'] = func_5027
mod = relay.transform.InferType()(mod)
mutated_mod['func_5027'] = func_5027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5027_call = mutated_mod.get_global_var('func_5027')
call_5028 = func_5027_call()
output = call_5028
func_5029 = relay.Function([], output)
mutated_mod['func_5029'] = func_5029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4426_call = mod.get_global_var('func_4426')
func_4428_call = mutated_mod.get_global_var('func_4428')
call_5108 = relay.TupleGetItem(func_4426_call(), 0)
call_5109 = relay.TupleGetItem(func_4428_call(), 0)
func_3271_call = mod.get_global_var('func_3271')
func_3272_call = mutated_mod.get_global_var('func_3272')
call_5116 = func_3271_call()
call_5117 = func_3271_call()
uop_5118 = relay.rsqrt(call_5116.astype('float32')) # shape=(4, 9, 8)
uop_5120 = relay.rsqrt(call_5117.astype('float32')) # shape=(4, 9, 8)
output = relay.Tuple([call_5108,uop_5118,])
output2 = relay.Tuple([call_5109,uop_5120,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
